command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2014530	File	data/converged/CVE-2017-11142_php-src/ext_standard_string.c								
ANR	2014531	DeclStmt									
ANR	2014532	Decl							endif	endif	REGISTER_LONG_CONSTANT
ANR	2014533	DeclStmt									
ANR	2014534	Decl							ifdef LC_MESSAGES	ifdef LC_MESSAGES	REGISTER_LONG_CONSTANT
ANR	2014535	DeclStmt									
ANR	2014536	Decl							int	"int ( char * tag , int len , char * set )"	php_tag_find
ANR	2014537	DeclStmt									
ANR	2014538	Decl							char	char [ ]	hexconvtab
ANR	2014539	DeclStmt									
ANR	2014540	Decl							MUTEX_T	MUTEX_T	locale_mutex
ANR	2014541	Function	php_bin2hex	128:0:4667:5208							
ANR	2014542	FunctionDef	"php_bin2hex (const unsigned char * old , const size_t oldlen , size_t * newlen)"		2014541	0					
ANR	2014543	CompoundStatement		129:0:4755:5208	2014541	0					
ANR	2014544	Statement	register	130:1:4758:4765	2014541	0	True				
ANR	2014545	IdentifierDeclStatement	unsigned char * result = NULL ;	130:10:4767:4795	2014541	1	True				
ANR	2014546	IdentifierDecl	* result = NULL		2014541	0					
ANR	2014547	IdentifierDeclType	unsigned char *		2014541	0					
ANR	2014548	Identifier	result		2014541	1					
ANR	2014549	AssignmentExpression	* result = NULL		2014541	2		=			
ANR	2014550	Identifier	NULL		2014541	0					
ANR	2014551	Identifier	NULL		2014541	1					
ANR	2014552	IdentifierDeclStatement	"size_t i , j ;"	131:1:4798:4809	2014541	2	True				
ANR	2014553	IdentifierDecl	i		2014541	0					
ANR	2014554	IdentifierDeclType	size_t		2014541	0					
ANR	2014555	Identifier	i		2014541	1					
ANR	2014556	IdentifierDecl	j		2014541	1					
ANR	2014557	IdentifierDeclType	size_t		2014541	0					
ANR	2014558	Identifier	j		2014541	1					
ANR	2014559	IfStatement	if ( UNEXPECTED ( oldlen * 2 * sizeof ( char ) > INT_MAX ) )		2014541	3					
ANR	2014560	Condition	UNEXPECTED ( oldlen * 2 * sizeof ( char ) > INT_MAX )	133:5:4817:4863	2014541	0	True				
ANR	2014561	CallExpression	UNEXPECTED ( oldlen * 2 * sizeof ( char ) > INT_MAX )		2014541	0					
ANR	2014562	Callee	UNEXPECTED		2014541	0					
ANR	2014563	Identifier	UNEXPECTED		2014541	0					
ANR	2014564	ArgumentList	oldlen * 2 * sizeof ( char ) > INT_MAX		2014541	1					
ANR	2014565	Argument	oldlen * 2 * sizeof ( char ) > INT_MAX		2014541	0					
ANR	2014566	RelationalExpression	oldlen * 2 * sizeof ( char ) > INT_MAX		2014541	0		>			
ANR	2014567	MultiplicativeExpression	oldlen * 2 * sizeof ( char )		2014541	0		*			
ANR	2014568	Identifier	oldlen		2014541	0					
ANR	2014569	MultiplicativeExpression	2 * sizeof ( char )		2014541	1		*			
ANR	2014570	PrimaryExpression	2		2014541	0					
ANR	2014571	SizeofExpression	sizeof ( char )		2014541	1					
ANR	2014572	Sizeof	sizeof		2014541	0					
ANR	2014573	SizeofOperand	char		2014541	1					
ANR	2014574	Identifier	INT_MAX		2014541	1					
ANR	2014575	CompoundStatement		5:54:110:110	2014541	1					
ANR	2014576	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	134:2:4870:4913	2014541	0	True				
ANR	2014577	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		2014541	0					
ANR	2014578	Callee	zend_error		2014541	0					
ANR	2014579	Identifier	zend_error		2014541	0					
ANR	2014580	ArgumentList	E_ERROR		2014541	1					
ANR	2014581	Argument	E_ERROR		2014541	0					
ANR	2014582	Identifier	E_ERROR		2014541	0					
ANR	2014583	Argument	"""String size overflow"""		2014541	1					
ANR	2014584	PrimaryExpression	"""String size overflow"""		2014541	0					
ANR	2014585	ExpressionStatement	"result = ( unsigned char * ) safe_emalloc ( oldlen , 2 * sizeof ( char ) , 1 )"	136:1:4919:4987	2014541	4	True				
ANR	2014586	AssignmentExpression	"result = ( unsigned char * ) safe_emalloc ( oldlen , 2 * sizeof ( char ) , 1 )"		2014541	0		=			
ANR	2014587	Identifier	result		2014541	0					
ANR	2014588	CastExpression	"( unsigned char * ) safe_emalloc ( oldlen , 2 * sizeof ( char ) , 1 )"		2014541	1					
ANR	2014589	CastTarget	unsigned char *		2014541	0					
ANR	2014590	CallExpression	"safe_emalloc ( oldlen , 2 * sizeof ( char ) , 1 )"		2014541	1					
ANR	2014591	Callee	safe_emalloc		2014541	0					
ANR	2014592	Identifier	safe_emalloc		2014541	0					
ANR	2014593	ArgumentList	oldlen		2014541	1					
ANR	2014594	Argument	oldlen		2014541	0					
ANR	2014595	Identifier	oldlen		2014541	0					
ANR	2014596	Argument	2 * sizeof ( char )		2014541	1					
ANR	2014597	MultiplicativeExpression	2 * sizeof ( char )		2014541	0		*			
ANR	2014598	PrimaryExpression	2		2014541	0					
ANR	2014599	SizeofExpression	sizeof ( char )		2014541	1					
ANR	2014600	Sizeof	sizeof		2014541	0					
ANR	2014601	SizeofOperand	char		2014541	1					
ANR	2014602	Argument	1		2014541	2					
ANR	2014603	PrimaryExpression	1		2014541	0					
ANR	2014604	ForStatement	for ( i = j = 0 ; i < oldlen ; i ++ )		2014541	5					
ANR	2014605	ForInit	i = j = 0 ;	138:6:4996:5005	2014541	0	True				
ANR	2014606	AssignmentExpression	i = j = 0		2014541	0		=			
ANR	2014607	Identifier	i		2014541	0					
ANR	2014608	AssignmentExpression	j = 0		2014541	1		=			
ANR	2014609	Identifier	j		2014541	0					
ANR	2014610	PrimaryExpression	0		2014541	1					
ANR	2014611	Condition	i < oldlen	138:17:5007:5016	2014541	1	True				
ANR	2014612	RelationalExpression	i < oldlen		2014541	0		<			
ANR	2014613	Identifier	i		2014541	0					
ANR	2014614	Identifier	oldlen		2014541	1					
ANR	2014615	PostIncDecOperationExpression	i ++	138:29:5019:5021	2014541	2	True				
ANR	2014616	Identifier	i		2014541	0					
ANR	2014617	IncDec	++		2014541	1					
ANR	2014618	CompoundStatement		10:34:268:268	2014541	3					
ANR	2014619	ExpressionStatement	result [ j ++ ] = hexconvtab [ old [ i ] >> 4 ]	139:2:5028:5065	2014541	0	True				
ANR	2014620	AssignmentExpression	result [ j ++ ] = hexconvtab [ old [ i ] >> 4 ]		2014541	0		=			
ANR	2014621	ArrayIndexing	result [ j ++ ]		2014541	0					
ANR	2014622	Identifier	result		2014541	0					
ANR	2014623	PostIncDecOperationExpression	j ++		2014541	1					
ANR	2014624	Identifier	j		2014541	0					
ANR	2014625	IncDec	++		2014541	1					
ANR	2014626	ArrayIndexing	hexconvtab [ old [ i ] >> 4 ]		2014541	1					
ANR	2014627	Identifier	hexconvtab		2014541	0					
ANR	2014628	ShiftExpression	old [ i ] >> 4		2014541	1		>>			
ANR	2014629	ArrayIndexing	old [ i ]		2014541	0					
ANR	2014630	Identifier	old		2014541	0					
ANR	2014631	Identifier	i		2014541	1					
ANR	2014632	PrimaryExpression	4		2014541	1					
ANR	2014633	ExpressionStatement	result [ j ++ ] = hexconvtab [ old [ i ] & 15 ]	140:2:5069:5106	2014541	1	True				
ANR	2014634	AssignmentExpression	result [ j ++ ] = hexconvtab [ old [ i ] & 15 ]		2014541	0		=			
ANR	2014635	ArrayIndexing	result [ j ++ ]		2014541	0					
ANR	2014636	Identifier	result		2014541	0					
ANR	2014637	PostIncDecOperationExpression	j ++		2014541	1					
ANR	2014638	Identifier	j		2014541	0					
ANR	2014639	IncDec	++		2014541	1					
ANR	2014640	ArrayIndexing	hexconvtab [ old [ i ] & 15 ]		2014541	1					
ANR	2014641	Identifier	hexconvtab		2014541	0					
ANR	2014642	BitAndExpression	old [ i ] & 15		2014541	1		&			
ANR	2014643	ArrayIndexing	old [ i ]		2014541	0					
ANR	2014644	Identifier	old		2014541	0					
ANR	2014645	Identifier	i		2014541	1					
ANR	2014646	PrimaryExpression	15		2014541	1					
ANR	2014647	ExpressionStatement	result [ j ] = '\\0'	142:1:5112:5128	2014541	6	True				
ANR	2014648	AssignmentExpression	result [ j ] = '\\0'		2014541	0		=			
ANR	2014649	ArrayIndexing	result [ j ]		2014541	0					
ANR	2014650	Identifier	result		2014541	0					
ANR	2014651	Identifier	j		2014541	1					
ANR	2014652	PrimaryExpression	'\\0'		2014541	1					
ANR	2014653	IfStatement	if ( newlen )		2014541	7					
ANR	2014654	Condition	newlen	144:5:5136:5141	2014541	0	True				
ANR	2014655	Identifier	newlen		2014541	0					
ANR	2014656	ExpressionStatement	* newlen = oldlen * 2 * sizeof ( char )	145:2:5146:5181	2014541	1	True				
ANR	2014657	AssignmentExpression	* newlen = oldlen * 2 * sizeof ( char )		2014541	0		=			
ANR	2014658	UnaryOperationExpression	* newlen		2014541	0					
ANR	2014659	UnaryOperator	*		2014541	0					
ANR	2014660	Identifier	newlen		2014541	1					
ANR	2014661	MultiplicativeExpression	oldlen * 2 * sizeof ( char )		2014541	1		*			
ANR	2014662	Identifier	oldlen		2014541	0					
ANR	2014663	MultiplicativeExpression	2 * sizeof ( char )		2014541	1		*			
ANR	2014664	PrimaryExpression	2		2014541	0					
ANR	2014665	SizeofExpression	sizeof ( char )		2014541	1					
ANR	2014666	Sizeof	sizeof		2014541	0					
ANR	2014667	SizeofOperand	char		2014541	1					
ANR	2014668	ReturnStatement	return ( char * ) result ;	147:1:5185:5206	2014541	8	True				
ANR	2014669	CastExpression	( char * ) result		2014541	0					
ANR	2014670	CastTarget	char *		2014541	0					
ANR	2014671	Identifier	result		2014541	1					
ANR	2014672	ReturnType	static char *		2014541	1					
ANR	2014673	Identifier	php_bin2hex		2014541	2					
ANR	2014674	ParameterList	"const unsigned char * old , const size_t oldlen , size_t * newlen"		2014541	3					
ANR	2014675	Parameter	const unsigned char * old	128:25:4692:4715	2014541	0	True				
ANR	2014676	ParameterType	const unsigned char *		2014541	0					
ANR	2014677	Identifier	old		2014541	1					
ANR	2014678	Parameter	const size_t oldlen	128:51:4718:4736	2014541	1	True				
ANR	2014679	ParameterType	const size_t		2014541	0					
ANR	2014680	Identifier	oldlen		2014541	1					
ANR	2014681	Parameter	size_t * newlen	128:72:4739:4752	2014541	2	True				
ANR	2014682	ParameterType	size_t *		2014541	0					
ANR	2014683	Identifier	newlen		2014541	1					
ANR	2014684	CFGEntryNode	ENTRY		2014541		True				
ANR	2014685	CFGExitNode	EXIT		2014541		True				
ANR	2014686	Symbol	* * i		2014541						
ANR	2014687	Symbol	NULL		2014541						
ANR	2014688	Symbol	oldlen		2014541						
ANR	2014689	Symbol	old		2014541						
ANR	2014690	Symbol	newlen		2014541						
ANR	2014691	Symbol	i		2014541						
ANR	2014692	Symbol	j		2014541						
ANR	2014693	Symbol	* hexconvtab		2014541						
ANR	2014694	Symbol	result		2014541						
ANR	2014695	Symbol	UNEXPECTED		2014541						
ANR	2014696	Symbol	* old		2014541						
ANR	2014697	Symbol	E_ERROR		2014541						
ANR	2014698	Symbol	* i		2014541						
ANR	2014699	Symbol	* j		2014541						
ANR	2014700	Symbol	* result		2014541						
ANR	2014701	Symbol	INT_MAX		2014541						
ANR	2014702	Symbol	* * old		2014541						
ANR	2014703	Symbol	safe_emalloc		2014541						
ANR	2014704	Symbol	hexconvtab		2014541						
ANR	2014705	Symbol	* newlen		2014541						
ANR	2014706	Function	php_hex2bin	153:0:5244:6123							
ANR	2014707	FunctionDef	"php_hex2bin (const unsigned char * old , const size_t oldlen , size_t * newlen)"		2014706	0					
ANR	2014708	CompoundStatement		154:0:5332:6123	2014706	0					
ANR	2014709	IdentifierDeclStatement	size_t target_length = oldlen >> 1 ;	155:1:5335:5369	2014706	0	True				
ANR	2014710	IdentifierDecl	target_length = oldlen >> 1		2014706	0					
ANR	2014711	IdentifierDeclType	size_t		2014706	0					
ANR	2014712	Identifier	target_length		2014706	1					
ANR	2014713	AssignmentExpression	target_length = oldlen >> 1		2014706	2		=			
ANR	2014714	Identifier	target_length		2014706	0					
ANR	2014715	ShiftExpression	oldlen >> 1		2014706	1		>>			
ANR	2014716	Identifier	oldlen		2014706	0					
ANR	2014717	PrimaryExpression	1		2014706	1					
ANR	2014718	Statement	register	156:1:5372:5379	2014706	1	True				
ANR	2014719	IdentifierDeclStatement	"unsigned char * str = ( unsigned char * ) safe_emalloc ( target_length , sizeof ( char ) , 1 ) ;"	156:10:5381:5463	2014706	2	True				
ANR	2014720	IdentifierDecl	"* str = ( unsigned char * ) safe_emalloc ( target_length , sizeof ( char ) , 1 )"		2014706	0					
ANR	2014721	IdentifierDeclType	unsigned char *		2014706	0					
ANR	2014722	Identifier	str		2014706	1					
ANR	2014723	AssignmentExpression	"* str = ( unsigned char * ) safe_emalloc ( target_length , sizeof ( char ) , 1 )"		2014706	2		=			
ANR	2014724	Identifier	str		2014706	0					
ANR	2014725	CastExpression	"( unsigned char * ) safe_emalloc ( target_length , sizeof ( char ) , 1 )"		2014706	1					
ANR	2014726	CastTarget	unsigned char *		2014706	0					
ANR	2014727	CallExpression	"safe_emalloc ( target_length , sizeof ( char ) , 1 )"		2014706	1					
ANR	2014728	Callee	safe_emalloc		2014706	0					
ANR	2014729	Identifier	safe_emalloc		2014706	0					
ANR	2014730	ArgumentList	target_length		2014706	1					
ANR	2014731	Argument	target_length		2014706	0					
ANR	2014732	Identifier	target_length		2014706	0					
ANR	2014733	Argument	sizeof ( char )		2014706	1					
ANR	2014734	SizeofExpression	sizeof ( char )		2014706	0					
ANR	2014735	Sizeof	sizeof		2014706	0					
ANR	2014736	SizeofOperand	char		2014706	1					
ANR	2014737	Argument	1		2014706	2					
ANR	2014738	PrimaryExpression	1		2014706	0					
ANR	2014739	IdentifierDeclStatement	"size_t i , j ;"	157:1:5466:5477	2014706	3	True				
ANR	2014740	IdentifierDecl	i		2014706	0					
ANR	2014741	IdentifierDeclType	size_t		2014706	0					
ANR	2014742	Identifier	i		2014706	1					
ANR	2014743	IdentifierDecl	j		2014706	1					
ANR	2014744	IdentifierDeclType	size_t		2014706	0					
ANR	2014745	Identifier	j		2014706	1					
ANR	2014746	ForStatement	for ( i = j = 0 ; i < target_length ; i ++ )		2014706	4					
ANR	2014747	ForInit	i = j = 0 ;	158:6:5485:5494	2014706	0	True				
ANR	2014748	AssignmentExpression	i = j = 0		2014706	0		=			
ANR	2014749	Identifier	i		2014706	0					
ANR	2014750	AssignmentExpression	j = 0		2014706	1		=			
ANR	2014751	Identifier	j		2014706	0					
ANR	2014752	PrimaryExpression	0		2014706	1					
ANR	2014753	Condition	i < target_length	158:17:5496:5512	2014706	1	True				
ANR	2014754	RelationalExpression	i < target_length		2014706	0		<			
ANR	2014755	Identifier	i		2014706	0					
ANR	2014756	Identifier	target_length		2014706	1					
ANR	2014757	PostIncDecOperationExpression	i ++	158:36:5515:5517	2014706	2	True				
ANR	2014758	Identifier	i		2014706	0					
ANR	2014759	IncDec	++		2014706	1					
ANR	2014760	CompoundStatement		6:2:191:208	2014706	3					
ANR	2014761	IdentifierDeclStatement	char c = old [ j ++ ] ;	159:2:5524:5541	2014706	0	True				
ANR	2014762	IdentifierDecl	c = old [ j ++ ]		2014706	0					
ANR	2014763	IdentifierDeclType	char		2014706	0					
ANR	2014764	Identifier	c		2014706	1					
ANR	2014765	AssignmentExpression	c = old [ j ++ ]		2014706	2		=			
ANR	2014766	Identifier	c		2014706	0					
ANR	2014767	ArrayIndexing	old [ j ++ ]		2014706	1					
ANR	2014768	Identifier	old		2014706	0					
ANR	2014769	PostIncDecOperationExpression	j ++		2014706	1					
ANR	2014770	Identifier	j		2014706	0					
ANR	2014771	IncDec	++		2014706	1					
ANR	2014772	IfStatement	if ( c >= '0' && c <= '9' )		2014706	1					
ANR	2014773	Condition	c >= '0' && c <= '9'	160:6:5549:5568	2014706	0	True				
ANR	2014774	AndExpression	c >= '0' && c <= '9'		2014706	0		&&			
ANR	2014775	RelationalExpression	c >= '0'		2014706	0		>=			
ANR	2014776	Identifier	c		2014706	0					
ANR	2014777	PrimaryExpression	'0'		2014706	1					
ANR	2014778	RelationalExpression	c <= '9'		2014706	1		<=			
ANR	2014779	Identifier	c		2014706	0					
ANR	2014780	PrimaryExpression	'9'		2014706	1					
ANR	2014781	CompoundStatement		7:28:238:238	2014706	1					
ANR	2014782	ExpressionStatement	str [ i ] = ( c - '0' ) << 4	161:3:5576:5599	2014706	0	True				
ANR	2014783	AssignmentExpression	str [ i ] = ( c - '0' ) << 4		2014706	0		=			
ANR	2014784	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014785	Identifier	str		2014706	0					
ANR	2014786	Identifier	i		2014706	1					
ANR	2014787	ShiftExpression	( c - '0' ) << 4		2014706	1		<<			
ANR	2014788	AdditiveExpression	c - '0'		2014706	0		-			
ANR	2014789	Identifier	c		2014706	0					
ANR	2014790	PrimaryExpression	'0'		2014706	1					
ANR	2014791	PrimaryExpression	4		2014706	1					
ANR	2014792	ElseStatement	else		2014706	0					
ANR	2014793	IfStatement	if ( c >= 'a' && c <= 'f' )		2014706	0					
ANR	2014794	Condition	c >= 'a' && c <= 'f'	162:13:5614:5633	2014706	0	True				
ANR	2014795	AndExpression	c >= 'a' && c <= 'f'		2014706	0		&&			
ANR	2014796	RelationalExpression	c >= 'a'		2014706	0		>=			
ANR	2014797	Identifier	c		2014706	0					
ANR	2014798	PrimaryExpression	'a'		2014706	1					
ANR	2014799	RelationalExpression	c <= 'f'		2014706	1		<=			
ANR	2014800	Identifier	c		2014706	0					
ANR	2014801	PrimaryExpression	'f'		2014706	1					
ANR	2014802	CompoundStatement		9:35:303:303	2014706	1					
ANR	2014803	ExpressionStatement	str [ i ] = ( c - 'a' + 10 ) << 4	163:3:5641:5669	2014706	0	True				
ANR	2014804	AssignmentExpression	str [ i ] = ( c - 'a' + 10 ) << 4		2014706	0		=			
ANR	2014805	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014806	Identifier	str		2014706	0					
ANR	2014807	Identifier	i		2014706	1					
ANR	2014808	ShiftExpression	( c - 'a' + 10 ) << 4		2014706	1		<<			
ANR	2014809	AdditiveExpression	c - 'a' + 10		2014706	0		-			
ANR	2014810	Identifier	c		2014706	0					
ANR	2014811	AdditiveExpression	'a' + 10		2014706	1		+			
ANR	2014812	PrimaryExpression	'a'		2014706	0					
ANR	2014813	PrimaryExpression	10		2014706	1					
ANR	2014814	PrimaryExpression	4		2014706	1					
ANR	2014815	ElseStatement	else		2014706	0					
ANR	2014816	IfStatement	if ( c >= 'A' && c <= 'F' )		2014706	0					
ANR	2014817	Condition	c >= 'A' && c <= 'F'	164:13:5684:5703	2014706	0	True				
ANR	2014818	AndExpression	c >= 'A' && c <= 'F'		2014706	0		&&			
ANR	2014819	RelationalExpression	c >= 'A'		2014706	0		>=			
ANR	2014820	Identifier	c		2014706	0					
ANR	2014821	PrimaryExpression	'A'		2014706	1					
ANR	2014822	RelationalExpression	c <= 'F'		2014706	1		<=			
ANR	2014823	Identifier	c		2014706	0					
ANR	2014824	PrimaryExpression	'F'		2014706	1					
ANR	2014825	CompoundStatement		11:35:373:373	2014706	1					
ANR	2014826	ExpressionStatement	str [ i ] = ( c - 'A' + 10 ) << 4	165:3:5711:5739	2014706	0	True				
ANR	2014827	AssignmentExpression	str [ i ] = ( c - 'A' + 10 ) << 4		2014706	0		=			
ANR	2014828	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014829	Identifier	str		2014706	0					
ANR	2014830	Identifier	i		2014706	1					
ANR	2014831	ShiftExpression	( c - 'A' + 10 ) << 4		2014706	1		<<			
ANR	2014832	AdditiveExpression	c - 'A' + 10		2014706	0		-			
ANR	2014833	Identifier	c		2014706	0					
ANR	2014834	AdditiveExpression	'A' + 10		2014706	1		+			
ANR	2014835	PrimaryExpression	'A'		2014706	0					
ANR	2014836	PrimaryExpression	10		2014706	1					
ANR	2014837	PrimaryExpression	4		2014706	1					
ANR	2014838	ElseStatement	else		2014706	0					
ANR	2014839	CompoundStatement		13:9:417:417	2014706	0					
ANR	2014840	ExpressionStatement	efree ( str )	167:3:5755:5765	2014706	0	True				
ANR	2014841	CallExpression	efree ( str )		2014706	0					
ANR	2014842	Callee	efree		2014706	0					
ANR	2014843	Identifier	efree		2014706	0					
ANR	2014844	ArgumentList	str		2014706	1					
ANR	2014845	Argument	str		2014706	0					
ANR	2014846	Identifier	str		2014706	0					
ANR	2014847	ReturnStatement	return NULL ;	168:3:5770:5781	2014706	1	True				
ANR	2014848	Identifier	NULL		2014706	0					
ANR	2014849	ExpressionStatement	c = old [ j ++ ]	170:2:5789:5801	2014706	2	True				
ANR	2014850	AssignmentExpression	c = old [ j ++ ]		2014706	0		=			
ANR	2014851	Identifier	c		2014706	0					
ANR	2014852	ArrayIndexing	old [ j ++ ]		2014706	1					
ANR	2014853	Identifier	old		2014706	0					
ANR	2014854	PostIncDecOperationExpression	j ++		2014706	1					
ANR	2014855	Identifier	j		2014706	0					
ANR	2014856	IncDec	++		2014706	1					
ANR	2014857	IfStatement	if ( c >= '0' && c <= '9' )		2014706	3					
ANR	2014858	Condition	c >= '0' && c <= '9'	171:6:5809:5828	2014706	0	True				
ANR	2014859	AndExpression	c >= '0' && c <= '9'		2014706	0		&&			
ANR	2014860	RelationalExpression	c >= '0'		2014706	0		>=			
ANR	2014861	Identifier	c		2014706	0					
ANR	2014862	PrimaryExpression	'0'		2014706	1					
ANR	2014863	RelationalExpression	c <= '9'		2014706	1		<=			
ANR	2014864	Identifier	c		2014706	0					
ANR	2014865	PrimaryExpression	'9'		2014706	1					
ANR	2014866	CompoundStatement		18:28:498:498	2014706	1					
ANR	2014867	ExpressionStatement	str [ i ] |= c - '0'	172:3:5836:5853	2014706	0	True				
ANR	2014868	AssignmentExpression	str [ i ] |= c - '0'		2014706	0		|=			
ANR	2014869	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014870	Identifier	str		2014706	0					
ANR	2014871	Identifier	i		2014706	1					
ANR	2014872	AdditiveExpression	c - '0'		2014706	1		-			
ANR	2014873	Identifier	c		2014706	0					
ANR	2014874	PrimaryExpression	'0'		2014706	1					
ANR	2014875	ElseStatement	else		2014706	0					
ANR	2014876	IfStatement	if ( c >= 'a' && c <= 'f' )		2014706	0					
ANR	2014877	Condition	c >= 'a' && c <= 'f'	173:13:5868:5887	2014706	0	True				
ANR	2014878	AndExpression	c >= 'a' && c <= 'f'		2014706	0		&&			
ANR	2014879	RelationalExpression	c >= 'a'		2014706	0		>=			
ANR	2014880	Identifier	c		2014706	0					
ANR	2014881	PrimaryExpression	'a'		2014706	1					
ANR	2014882	RelationalExpression	c <= 'f'		2014706	1		<=			
ANR	2014883	Identifier	c		2014706	0					
ANR	2014884	PrimaryExpression	'f'		2014706	1					
ANR	2014885	CompoundStatement		20:35:557:557	2014706	1					
ANR	2014886	ExpressionStatement	str [ i ] |= c - 'a' + 10	174:3:5895:5917	2014706	0	True				
ANR	2014887	AssignmentExpression	str [ i ] |= c - 'a' + 10		2014706	0		|=			
ANR	2014888	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014889	Identifier	str		2014706	0					
ANR	2014890	Identifier	i		2014706	1					
ANR	2014891	AdditiveExpression	c - 'a' + 10		2014706	1		-			
ANR	2014892	Identifier	c		2014706	0					
ANR	2014893	AdditiveExpression	'a' + 10		2014706	1		+			
ANR	2014894	PrimaryExpression	'a'		2014706	0					
ANR	2014895	PrimaryExpression	10		2014706	1					
ANR	2014896	ElseStatement	else		2014706	0					
ANR	2014897	IfStatement	if ( c >= 'A' && c <= 'F' )		2014706	0					
ANR	2014898	Condition	c >= 'A' && c <= 'F'	175:13:5932:5951	2014706	0	True				
ANR	2014899	AndExpression	c >= 'A' && c <= 'F'		2014706	0		&&			
ANR	2014900	RelationalExpression	c >= 'A'		2014706	0		>=			
ANR	2014901	Identifier	c		2014706	0					
ANR	2014902	PrimaryExpression	'A'		2014706	1					
ANR	2014903	RelationalExpression	c <= 'F'		2014706	1		<=			
ANR	2014904	Identifier	c		2014706	0					
ANR	2014905	PrimaryExpression	'F'		2014706	1					
ANR	2014906	CompoundStatement		22:35:621:621	2014706	1					
ANR	2014907	ExpressionStatement	str [ i ] |= c - 'A' + 10	176:3:5959:5981	2014706	0	True				
ANR	2014908	AssignmentExpression	str [ i ] |= c - 'A' + 10		2014706	0		|=			
ANR	2014909	ArrayIndexing	str [ i ]		2014706	0					
ANR	2014910	Identifier	str		2014706	0					
ANR	2014911	Identifier	i		2014706	1					
ANR	2014912	AdditiveExpression	c - 'A' + 10		2014706	1		-			
ANR	2014913	Identifier	c		2014706	0					
ANR	2014914	AdditiveExpression	'A' + 10		2014706	1		+			
ANR	2014915	PrimaryExpression	'A'		2014706	0					
ANR	2014916	PrimaryExpression	10		2014706	1					
ANR	2014917	ElseStatement	else		2014706	0					
ANR	2014918	CompoundStatement		24:9:659:659	2014706	0					
ANR	2014919	ExpressionStatement	efree ( str )	178:3:5997:6007	2014706	0	True				
ANR	2014920	CallExpression	efree ( str )		2014706	0					
ANR	2014921	Callee	efree		2014706	0					
ANR	2014922	Identifier	efree		2014706	0					
ANR	2014923	ArgumentList	str		2014706	1					
ANR	2014924	Argument	str		2014706	0					
ANR	2014925	Identifier	str		2014706	0					
ANR	2014926	ReturnStatement	return NULL ;	179:3:6012:6023	2014706	1	True				
ANR	2014927	Identifier	NULL		2014706	0					
ANR	2014928	ExpressionStatement	str [ target_length ] = '\\0'	182:1:6033:6058	2014706	5	True				
ANR	2014929	AssignmentExpression	str [ target_length ] = '\\0'		2014706	0		=			
ANR	2014930	ArrayIndexing	str [ target_length ]		2014706	0					
ANR	2014931	Identifier	str		2014706	0					
ANR	2014932	Identifier	target_length		2014706	1					
ANR	2014933	PrimaryExpression	'\\0'		2014706	1					
ANR	2014934	IfStatement	if ( newlen )		2014706	6					
ANR	2014935	Condition	newlen	184:5:6066:6071	2014706	0	True				
ANR	2014936	Identifier	newlen		2014706	0					
ANR	2014937	ExpressionStatement	* newlen = target_length	185:2:6076:6099	2014706	1	True				
ANR	2014938	AssignmentExpression	* newlen = target_length		2014706	0		=			
ANR	2014939	UnaryOperationExpression	* newlen		2014706	0					
ANR	2014940	UnaryOperator	*		2014706	0					
ANR	2014941	Identifier	newlen		2014706	1					
ANR	2014942	Identifier	target_length		2014706	1					
ANR	2014943	ReturnStatement	return ( char * ) str ;	187:1:6103:6121	2014706	7	True				
ANR	2014944	CastExpression	( char * ) str		2014706	0					
ANR	2014945	CastTarget	char *		2014706	0					
ANR	2014946	Identifier	str		2014706	1					
ANR	2014947	ReturnType	static char *		2014706	1					
ANR	2014948	Identifier	php_hex2bin		2014706	2					
ANR	2014949	ParameterList	"const unsigned char * old , const size_t oldlen , size_t * newlen"		2014706	3					
ANR	2014950	Parameter	const unsigned char * old	153:25:5269:5292	2014706	0	True				
ANR	2014951	ParameterType	const unsigned char *		2014706	0					
ANR	2014952	Identifier	old		2014706	1					
ANR	2014953	Parameter	const size_t oldlen	153:51:5295:5313	2014706	1	True				
ANR	2014954	ParameterType	const size_t		2014706	0					
ANR	2014955	Identifier	oldlen		2014706	1					
ANR	2014956	Parameter	size_t * newlen	153:72:5316:5329	2014706	2	True				
ANR	2014957	ParameterType	size_t *		2014706	0					
ANR	2014958	Identifier	newlen		2014706	1					
ANR	2014959	CFGEntryNode	ENTRY		2014706		True				
ANR	2014960	CFGExitNode	EXIT		2014706		True				
ANR	2014961	Symbol	c		2014706						
ANR	2014962	Symbol	NULL		2014706						
ANR	2014963	Symbol	oldlen		2014706						
ANR	2014964	Symbol	old		2014706						
ANR	2014965	Symbol	newlen		2014706						
ANR	2014966	Symbol	i		2014706						
ANR	2014967	Symbol	j		2014706						
ANR	2014968	Symbol	target_length		2014706						
ANR	2014969	Symbol	* target_length		2014706						
ANR	2014970	Symbol	str		2014706						
ANR	2014971	Symbol	* old		2014706						
ANR	2014972	Symbol	* i		2014706						
ANR	2014973	Symbol	* str		2014706						
ANR	2014974	Symbol	safe_emalloc		2014706						
ANR	2014975	Symbol	* newlen		2014706						
ANR	2014976	Function	localeconv_r	194:7:6258:6774							
ANR	2014977	FunctionDef	localeconv_r (struct lconv * out)		2014976	0					
ANR	2014978	CompoundStatement		195:0:6304:6774	2014976	0					
ANR	2014979	IdentifierDeclStatement	ifdef ZTS tsrm_mutex_lock ( locale_mutex ) ;	197:2:6309:6351	2014976	0	True				
ANR	2014980	IdentifierDecl	tsrm_mutex_lock ( locale_mutex )		2014976	0					
ANR	2014981	IdentifierDeclType	ifdef ZTS		2014976	0					
ANR	2014982	Identifier	tsrm_mutex_lock		2014976	1					
ANR	2014983	Identifier	locale_mutex		2014976	2					
ANR	2014984	Statement	endif	199:2:6355:6359	2014976	1	True				
ANR	2014985	CompoundStatement		11:2:216:253	2014976	2					
ANR	2014986	IdentifierDeclStatement	_locale_t cur = _get_current_locale ( ) ;	205:2:6521:6558	2014976	0	True				
ANR	2014987	IdentifierDecl	cur = _get_current_locale ( )		2014976	0					
ANR	2014988	IdentifierDeclType	_locale_t		2014976	0					
ANR	2014989	Identifier	cur		2014976	1					
ANR	2014990	AssignmentExpression	cur = _get_current_locale ( )		2014976	2		=			
ANR	2014991	Identifier	cur		2014976	0					
ANR	2014992	CallExpression	_get_current_locale ( )		2014976	1					
ANR	2014993	Callee	_get_current_locale		2014976	0					
ANR	2014994	Identifier	_get_current_locale		2014976	0					
ANR	2014995	ArgumentList			2014976	1					
ANR	2014996	ExpressionStatement	* out = * cur -> locinfo -> lconv	206:2:6562:6589	2014976	1	True				
ANR	2014997	AssignmentExpression	* out = * cur -> locinfo -> lconv		2014976	0		=			
ANR	2014998	UnaryOperationExpression	* out		2014976	0					
ANR	2014999	UnaryOperator	*		2014976	0					
ANR	2015000	Identifier	out		2014976	1					
ANR	2015001	UnaryOperationExpression	* cur -> locinfo -> lconv		2014976	1					
ANR	2015002	UnaryOperator	*		2014976	0					
ANR	2015003	PtrMemberAccess	cur -> locinfo -> lconv		2014976	1					
ANR	2015004	PtrMemberAccess	cur -> locinfo		2014976	0					
ANR	2015005	Identifier	cur		2014976	0					
ANR	2015006	Identifier	locinfo		2014976	1					
ANR	2015007	Identifier	lconv		2014976	1					
ANR	2015008	ExpressionStatement	_free_locale ( cur )	207:2:6593:6610	2014976	2	True				
ANR	2015009	CallExpression	_free_locale ( cur )		2014976	0					
ANR	2015010	Callee	_free_locale		2014976	0					
ANR	2015011	Identifier	_free_locale		2014976	0					
ANR	2015012	ArgumentList	cur		2014976	1					
ANR	2015013	Argument	cur		2014976	0					
ANR	2015014	Identifier	cur		2014976	0					
ANR	2015015	IdentifierDeclStatement	ifdef ZTS tsrm_mutex_unlock ( locale_mutex ) ;	214:2:6706:6750	2014976	3	True				
ANR	2015016	IdentifierDecl	tsrm_mutex_unlock ( locale_mutex )		2014976	0					
ANR	2015017	IdentifierDeclType	ifdef ZTS		2014976	0					
ANR	2015018	Identifier	tsrm_mutex_unlock		2014976	1					
ANR	2015019	Identifier	locale_mutex		2014976	2					
ANR	2015020	Statement	endif	216:2:6754:6758	2014976	4	True				
ANR	2015021	ReturnStatement	return out ;	218:1:6762:6772	2014976	5	True				
ANR	2015022	Identifier	out		2014976	0					
ANR	2015023	ReturnType	struct lconv *		2014976	1					
ANR	2015024	Identifier	localeconv_r		2014976	2					
ANR	2015025	ParameterList	struct lconv * out		2014976	3					
ANR	2015026	Parameter	struct lconv * out	194:34:6285:6301	2014976	0	True				
ANR	2015027	ParameterType	struct lconv *		2014976	0					
ANR	2015028	Identifier	out		2014976	1					
ANR	2015029	CFGEntryNode	ENTRY		2014976		True				
ANR	2015030	CFGExitNode	EXIT		2014976		True				
ANR	2015031	Symbol	cur		2014976						
ANR	2015032	Symbol	out		2014976						
ANR	2015033	Symbol	* cur -> locinfo		2014976						
ANR	2015034	Symbol	* * cur		2014976						
ANR	2015035	Symbol	tsrm_mutex_lock		2014976						
ANR	2015036	Symbol	* cur		2014976						
ANR	2015037	Symbol	cur -> locinfo -> lconv		2014976						
ANR	2015038	Symbol	cur -> locinfo		2014976						
ANR	2015039	Symbol	_get_current_locale		2014976						
ANR	2015040	Symbol	* out		2014976						
ANR	2015041	Symbol	* * cur -> locinfo		2014976						
ANR	2015042	Symbol	* * * cur		2014976						
ANR	2015043	Symbol	tsrm_mutex_unlock		2014976						
ANR	2015044	Symbol	* cur -> locinfo -> lconv		2014976						
ANR	2015045	DeclStmt									
ANR	2015046	Decl							char	char *	result
ANR	2015047	Decl							char	char *	data
ANR	2015048	DeclStmt									
ANR	2015049	Decl							size_t	size_t	newlen
ANR	2015050	DeclStmt									
ANR	2015051	Decl							int	int	datalen
ANR	2015052	DeclStmt									
ANR	2015053	Decl							char	char *	result
ANR	2015054	Decl							char	char *	data
ANR	2015055	DeclStmt									
ANR	2015056	Decl							size_t	size_t	newlen
ANR	2015057	DeclStmt									
ANR	2015058	Decl							int	int	datalen
ANR	2015059	DeclStmt									
ANR	2015060	Decl							char	char *	s11
ANR	2015061	Decl							char	char *	s22
ANR	2015062	DeclStmt									
ANR	2015063	Decl							int	int	len1
ANR	2015064	Decl							int	int	len2
ANR	2015065	DeclStmt									
ANR	2015066	Decl							long	long	start
ANR	2015067	Decl							long	long	len
ANR	2015068	DeclStmt									
ANR	2015069	Decl							long	long	item
ANR	2015070	DeclStmt									
ANR	2015071	Decl							char	char *	value
ANR	2015072	DeclStmt									
ANR	2015073	Decl							char	char *	s1
ANR	2015074	Decl							char	char *	s2
ANR	2015075	DeclStmt									
ANR	2015076	Decl							int	int	s1len
ANR	2015077	Decl							int	int	s2len
ANR	2015078	DeclStmt									
ANR	2015079	Decl							unsigned char	unsigned char *	end
ANR	2015080	DeclStmt									
ANR	2015081	Decl							unsigned char	unsigned char	c
ANR	2015082	DeclStmt									
ANR	2015083	Decl							int	int	result
ANR	2015084	Function	php_trim	795:0:19505:20227							
ANR	2015085	FunctionDef	"php_trim (char * c , int len , char * what , int what_len , zval * return_value , int mode TSRMLS_DC)"		2015084	0					
ANR	2015086	CompoundStatement		796:0:19611:20227	2015084	0					
ANR	2015087	Statement	register	797:1:19614:19621	2015084	0	True				
ANR	2015088	IdentifierDeclStatement	int i ;	797:10:19623:19628	2015084	1	True				
ANR	2015089	IdentifierDecl	i		2015084	0					
ANR	2015090	IdentifierDeclType	int		2015084	0					
ANR	2015091	Identifier	i		2015084	1					
ANR	2015092	IdentifierDeclStatement	int trimmed = 0 ;	798:1:19631:19646	2015084	2	True				
ANR	2015093	IdentifierDecl	trimmed = 0		2015084	0					
ANR	2015094	IdentifierDeclType	int		2015084	0					
ANR	2015095	Identifier	trimmed		2015084	1					
ANR	2015096	AssignmentExpression	trimmed = 0		2015084	2		=			
ANR	2015097	Identifier	trimmed		2015084	0					
ANR	2015098	PrimaryExpression	0		2015084	1					
ANR	2015099	IdentifierDeclStatement	char mask [ 256 ] ;	799:1:19649:19663	2015084	3	True				
ANR	2015100	IdentifierDecl	mask [ 256 ]		2015084	0					
ANR	2015101	IdentifierDeclType	char [ 256 ]		2015084	0					
ANR	2015102	Identifier	mask		2015084	1					
ANR	2015103	PrimaryExpression	256		2015084	2					
ANR	2015104	IfStatement	if ( what )		2015084	4					
ANR	2015105	Condition	what	801:5:19671:19674	2015084	0	True				
ANR	2015106	Identifier	what		2015084	0					
ANR	2015107	CompoundStatement		6:11:65:65	2015084	1					
ANR	2015108	Statement	php_charmask	802:2:19681:19692	2015084	0	True				
ANR	2015109	Statement	(	802:14:19693:19693	2015084	1	True				
ANR	2015110	Statement	(	802:15:19694:19694	2015084	2	True				
ANR	2015111	Statement	unsigned	802:16:19695:19702	2015084	3	True				
ANR	2015112	Statement	char	802:25:19704:19707	2015084	4	True				
ANR	2015113	Statement	*	802:29:19708:19708	2015084	5	True				
ANR	2015114	Statement	)	802:30:19709:19709	2015084	6	True				
ANR	2015115	Statement	what	802:31:19710:19713	2015084	7	True				
ANR	2015116	Statement	","	802:35:19714:19714	2015084	8	True				
ANR	2015117	Statement	what_len	802:37:19716:19723	2015084	9	True				
ANR	2015118	Statement	","	802:45:19724:19724	2015084	10	True				
ANR	2015119	Statement	mask	802:47:19726:19729	2015084	11	True				
ANR	2015120	Statement	TSRMLS_CC	802:52:19731:19739	2015084	12	True				
ANR	2015121	Statement	)	802:61:19740:19740	2015084	13	True				
ANR	2015122	ExpressionStatement		802:62:19741:19741	2015084	14	True				
ANR	2015123	ElseStatement	else		2015084	0					
ANR	2015124	CompoundStatement		8:8:139:139	2015084	0					
ANR	2015125	Statement	php_charmask	804:2:19755:19766	2015084	0	True				
ANR	2015126	Statement	(	804:14:19767:19767	2015084	1	True				
ANR	2015127	Statement	(	804:15:19768:19768	2015084	2	True				
ANR	2015128	Statement	unsigned	804:16:19769:19776	2015084	3	True				
ANR	2015129	Statement	char	804:25:19778:19781	2015084	4	True				
ANR	2015130	Statement	*	804:29:19782:19782	2015084	5	True				
ANR	2015131	Statement	)	804:30:19783:19783	2015084	6	True				
ANR	2015132	Statement	""" \\n\\r\\t\\v\\0"""	804:31:19784:19796	2015084	7	True				
ANR	2015133	Statement	","	804:44:19797:19797	2015084	8	True				
ANR	2015134	Statement	6	804:46:19799:19799	2015084	9	True				
ANR	2015135	Statement	","	804:47:19800:19800	2015084	10	True				
ANR	2015136	Statement	mask	804:49:19802:19805	2015084	11	True				
ANR	2015137	Statement	TSRMLS_CC	804:54:19807:19815	2015084	12	True				
ANR	2015138	Statement	)	804:63:19816:19816	2015084	13	True				
ANR	2015139	ExpressionStatement		804:64:19817:19817	2015084	14	True				
ANR	2015140	IfStatement	if ( mode & 1 )		2015084	5					
ANR	2015141	Condition	mode & 1	807:5:19828:19835	2015084	0	True				
ANR	2015142	BitAndExpression	mode & 1		2015084	0		&			
ANR	2015143	Identifier	mode		2015084	0					
ANR	2015144	PrimaryExpression	1		2015084	1					
ANR	2015145	CompoundStatement		12:15:226:226	2015084	1					
ANR	2015146	ForStatement	for ( i = 0 ; i < len ; i ++ )		2015084	0					
ANR	2015147	ForInit	i = 0 ;	808:7:19847:19852	2015084	0	True				
ANR	2015148	AssignmentExpression	i = 0		2015084	0		=			
ANR	2015149	Identifier	i		2015084	0					
ANR	2015150	PrimaryExpression	0		2015084	1					
ANR	2015151	Condition	i < len	808:14:19854:19860	2015084	1	True				
ANR	2015152	RelationalExpression	i < len		2015084	0		<			
ANR	2015153	Identifier	i		2015084	0					
ANR	2015154	Identifier	len		2015084	1					
ANR	2015155	PostIncDecOperationExpression	i ++	808:23:19863:19865	2015084	2	True				
ANR	2015156	Identifier	i		2015084	0					
ANR	2015157	IncDec	++		2015084	1					
ANR	2015158	CompoundStatement		13:28:256:256	2015084	3					
ANR	2015159	IfStatement	if ( mask [ ( unsigned char ) c [ i ] ] )		2015084	0					
ANR	2015160	Condition	mask [ ( unsigned char ) c [ i ] ]	809:7:19877:19901	2015084	0	True				
ANR	2015161	ArrayIndexing	mask [ ( unsigned char ) c [ i ] ]		2015084	0					
ANR	2015162	Identifier	mask		2015084	0					
ANR	2015163	CastExpression	( unsigned char ) c [ i ]		2015084	1					
ANR	2015164	CastTarget	unsigned char		2015084	0					
ANR	2015165	ArrayIndexing	c [ i ]		2015084	1					
ANR	2015166	Identifier	c		2015084	0					
ANR	2015167	Identifier	i		2015084	1					
ANR	2015168	CompoundStatement		14:34:292:292	2015084	1					
ANR	2015169	ExpressionStatement	trimmed ++	810:4:19910:19919	2015084	0	True				
ANR	2015170	PostIncDecOperationExpression	trimmed ++		2015084	0					
ANR	2015171	Identifier	trimmed		2015084	0					
ANR	2015172	IncDec	++		2015084	1					
ANR	2015173	ElseStatement	else		2015084	0					
ANR	2015174	CompoundStatement		16:10:319:319	2015084	0					
ANR	2015175	BreakStatement	break ;	812:4:19937:19942	2015084	0	True				
ANR	2015176	ExpressionStatement	len -= trimmed	815:2:19955:19969	2015084	1	True				
ANR	2015177	AssignmentExpression	len -= trimmed		2015084	0		-=			
ANR	2015178	Identifier	len		2015084	0					
ANR	2015179	Identifier	trimmed		2015084	1					
ANR	2015180	ExpressionStatement	c += trimmed	816:2:19973:19985	2015084	2	True				
ANR	2015181	AssignmentExpression	c += trimmed		2015084	0		+=			
ANR	2015182	Identifier	c		2015084	0					
ANR	2015183	Identifier	trimmed		2015084	1					
ANR	2015184	IfStatement	if ( mode & 2 )		2015084	6					
ANR	2015185	Condition	mode & 2	818:5:19995:20002	2015084	0	True				
ANR	2015186	BitAndExpression	mode & 2		2015084	0		&			
ANR	2015187	Identifier	mode		2015084	0					
ANR	2015188	PrimaryExpression	2		2015084	1					
ANR	2015189	CompoundStatement		23:15:393:393	2015084	1					
ANR	2015190	ForStatement	for ( i = len - 1 ; i >= 0 ; i -- )		2015084	0					
ANR	2015191	ForInit	i = len - 1 ;	819:7:20014:20025	2015084	0	True				
ANR	2015192	AssignmentExpression	i = len - 1		2015084	0		=			
ANR	2015193	Identifier	i		2015084	0					
ANR	2015194	AdditiveExpression	len - 1		2015084	1		-			
ANR	2015195	Identifier	len		2015084	0					
ANR	2015196	PrimaryExpression	1		2015084	1					
ANR	2015197	Condition	i >= 0	819:20:20027:20032	2015084	1	True				
ANR	2015198	RelationalExpression	i >= 0		2015084	0		>=			
ANR	2015199	Identifier	i		2015084	0					
ANR	2015200	PrimaryExpression	0		2015084	1					
ANR	2015201	PostIncDecOperationExpression	i --	819:28:20035:20037	2015084	2	True				
ANR	2015202	Identifier	i		2015084	0					
ANR	2015203	IncDec	--		2015084	1					
ANR	2015204	CompoundStatement		24:33:428:428	2015084	3					
ANR	2015205	IfStatement	if ( mask [ ( unsigned char ) c [ i ] ] )		2015084	0					
ANR	2015206	Condition	mask [ ( unsigned char ) c [ i ] ]	820:7:20049:20073	2015084	0	True				
ANR	2015207	ArrayIndexing	mask [ ( unsigned char ) c [ i ] ]		2015084	0					
ANR	2015208	Identifier	mask		2015084	0					
ANR	2015209	CastExpression	( unsigned char ) c [ i ]		2015084	1					
ANR	2015210	CastTarget	unsigned char		2015084	0					
ANR	2015211	ArrayIndexing	c [ i ]		2015084	1					
ANR	2015212	Identifier	c		2015084	0					
ANR	2015213	Identifier	i		2015084	1					
ANR	2015214	CompoundStatement		25:34:464:464	2015084	1					
ANR	2015215	ExpressionStatement	len --	821:4:20082:20087	2015084	0	True				
ANR	2015216	PostIncDecOperationExpression	len --		2015084	0					
ANR	2015217	Identifier	len		2015084	0					
ANR	2015218	IncDec	--		2015084	1					
ANR	2015219	ElseStatement	else		2015084	0					
ANR	2015220	CompoundStatement		27:10:487:487	2015084	0					
ANR	2015221	BreakStatement	break ;	823:4:20105:20110	2015084	0	True				
ANR	2015222	IfStatement	if ( return_value )		2015084	7					
ANR	2015223	Condition	return_value	828:5:20130:20141	2015084	0	True				
ANR	2015224	Identifier	return_value		2015084	0					
ANR	2015225	CompoundStatement		33:19:532:532	2015084	1					
ANR	2015226	ExpressionStatement	"RETVAL_STRINGL ( c , len , 1 )"	829:2:20148:20173	2015084	0	True				
ANR	2015227	CallExpression	"RETVAL_STRINGL ( c , len , 1 )"		2015084	0					
ANR	2015228	Callee	RETVAL_STRINGL		2015084	0					
ANR	2015229	Identifier	RETVAL_STRINGL		2015084	0					
ANR	2015230	ArgumentList	c		2015084	1					
ANR	2015231	Argument	c		2015084	0					
ANR	2015232	Identifier	c		2015084	0					
ANR	2015233	Argument	len		2015084	1					
ANR	2015234	Identifier	len		2015084	0					
ANR	2015235	Argument	1		2015084	2					
ANR	2015236	PrimaryExpression	1		2015084	0					
ANR	2015237	ElseStatement	else		2015084	0					
ANR	2015238	CompoundStatement		35:8:571:571	2015084	0					
ANR	2015239	ReturnStatement	"return estrndup ( c , len ) ;"	831:2:20187:20210	2015084	0	True				
ANR	2015240	CallExpression	"estrndup ( c , len )"		2015084	0					
ANR	2015241	Callee	estrndup		2015084	0					
ANR	2015242	Identifier	estrndup		2015084	0					
ANR	2015243	ArgumentList	c		2015084	1					
ANR	2015244	Argument	c		2015084	0					
ANR	2015245	Identifier	c		2015084	0					
ANR	2015246	Argument	len		2015084	1					
ANR	2015247	Identifier	len		2015084	0					
ANR	2015248	ReturnStatement	"return """" ;"	833:1:20216:20225	2015084	8	True				
ANR	2015249	PrimaryExpression	""""""		2015084	0					
ANR	2015250	ReturnType	PHPAPI char *		2015084	1					
ANR	2015251	Identifier	php_trim		2015084	2					
ANR	2015252	ParameterList	"char * c , int len , char * what , int what_len , zval * return_value , int mode TSRMLS_DC"		2015084	3					
ANR	2015253	Parameter	char * c	795:22:19527:19533	2015084	0	True				
ANR	2015254	ParameterType	char *		2015084	0					
ANR	2015255	Identifier	c		2015084	1					
ANR	2015256	Parameter	int len	795:31:19536:19542	2015084	1	True				
ANR	2015257	ParameterType	int		2015084	0					
ANR	2015258	Identifier	len		2015084	1					
ANR	2015259	Parameter	char * what	795:40:19545:19554	2015084	2	True				
ANR	2015260	ParameterType	char *		2015084	0					
ANR	2015261	Identifier	what		2015084	1					
ANR	2015262	Parameter	int what_len	795:52:19557:19568	2015084	3	True				
ANR	2015263	ParameterType	int		2015084	0					
ANR	2015264	Identifier	what_len		2015084	1					
ANR	2015265	Parameter	zval * return_value	795:66:19571:19588	2015084	4	True				
ANR	2015266	ParameterType	zval *		2015084	0					
ANR	2015267	Identifier	return_value		2015084	1					
ANR	2015268	Parameter	int mode TSRMLS_DC	795:86:19591:19608	2015084	5	True				
ANR	2015269	ParameterType	int mode		2015084	0					
ANR	2015270	Identifier	TSRMLS_DC		2015084	1					
ANR	2015271	CFGEntryNode	ENTRY		2015084		True				
ANR	2015272	CFGExitNode	EXIT		2015084		True				
ANR	2015273	Symbol	return_value		2015084						
ANR	2015274	Symbol	* * i		2015084						
ANR	2015275	Symbol	c		2015084						
ANR	2015276	Symbol	* mask		2015084						
ANR	2015277	Symbol	* * c		2015084						
ANR	2015278	Symbol	i		2015084						
ANR	2015279	Symbol	TSRMLS_DC		2015084						
ANR	2015280	Symbol	* c		2015084						
ANR	2015281	Symbol	mode		2015084						
ANR	2015282	Symbol	estrndup		2015084						
ANR	2015283	Symbol	what		2015084						
ANR	2015284	Symbol	what_len		2015084						
ANR	2015285	Symbol	* i		2015084						
ANR	2015286	Symbol	len		2015084						
ANR	2015287	Symbol	trimmed		2015084						
ANR	2015288	Symbol	mask		2015084						
ANR	2015289	DeclStmt									
ANR	2015290	Decl							char	char *	str
ANR	2015291	DeclStmt									
ANR	2015292	Decl							char	char *	what
ANR	2015293	DeclStmt									
ANR	2015294	Decl							int	int	str_len
ANR	2015295	Decl							int	int	what_len
ANR	2015296	DeclStmt									
ANR	2015297	Decl							const char	const char *	text
ANR	2015298	Decl							const char	const char *	breakchar
ANR	2015299	DeclStmt									
ANR	2015300	Decl							char	char *	newtext
ANR	2015301	DeclStmt									
ANR	2015302	Decl							int	int	textlen
ANR	2015303	Decl							int	int	breakcharlen
ANR	2015304	Decl							int	int	chk
ANR	2015305	DeclStmt									
ANR	2015306	Decl							size_t	size_t	alloced
ANR	2015307	DeclStmt									
ANR	2015308	Decl							size_t	size_t	current
ANR	2015309	Decl							size_t	size_t	laststart
ANR	2015310	Decl							size_t	size_t	lastspace
ANR	2015311	DeclStmt									
ANR	2015312	Decl							long	long	linelength
ANR	2015313	DeclStmt									
ANR	2015314	Decl							zend_bool	zend_bool	docut
ANR	2015315	DeclStmt									
ANR	2015316	Decl							size_t	size_t	newtextlen
ANR	2015317	Function	php_explode	1029:0:26070:26700							
ANR	2015318	FunctionDef	"php_explode (zval * delim , zval * str , zval * return_value , long limit)"		2015317	0					
ANR	2015319	CompoundStatement		1030:0:26150:26700	2015317	0					
ANR	2015320	IdentifierDeclStatement	"char * p1 , * p2 , * endp ;"	1031:1:26153:26173	2015317	0	True				
ANR	2015321	IdentifierDecl	* p1		2015317	0					
ANR	2015322	IdentifierDeclType	char *		2015317	0					
ANR	2015323	Identifier	p1		2015317	1					
ANR	2015324	IdentifierDecl	* p2		2015317	1					
ANR	2015325	IdentifierDeclType	char *		2015317	0					
ANR	2015326	Identifier	p2		2015317	1					
ANR	2015327	IdentifierDecl	* endp		2015317	2					
ANR	2015328	IdentifierDeclType	char *		2015317	0					
ANR	2015329	Identifier	endp		2015317	1					
ANR	2015330	ExpressionStatement	endp = Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )	1033:1:26177:26217	2015317	1	True				
ANR	2015331	AssignmentExpression	endp = Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )		2015317	0		=			
ANR	2015332	Identifier	endp		2015317	0					
ANR	2015333	AdditiveExpression	Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )		2015317	1		+			
ANR	2015334	CallExpression	Z_STRVAL_P ( str )		2015317	0					
ANR	2015335	Callee	Z_STRVAL_P		2015317	0					
ANR	2015336	Identifier	Z_STRVAL_P		2015317	0					
ANR	2015337	ArgumentList	str		2015317	1					
ANR	2015338	Argument	str		2015317	0					
ANR	2015339	Identifier	str		2015317	0					
ANR	2015340	CallExpression	Z_STRLEN_P ( str )		2015317	1					
ANR	2015341	Callee	Z_STRLEN_P		2015317	0					
ANR	2015342	Identifier	Z_STRLEN_P		2015317	0					
ANR	2015343	ArgumentList	str		2015317	1					
ANR	2015344	Argument	str		2015317	0					
ANR	2015345	Identifier	str		2015317	0					
ANR	2015346	ExpressionStatement	p1 = Z_STRVAL_P ( str )	1035:1:26221:26241	2015317	2	True				
ANR	2015347	AssignmentExpression	p1 = Z_STRVAL_P ( str )		2015317	0		=			
ANR	2015348	Identifier	p1		2015317	0					
ANR	2015349	CallExpression	Z_STRVAL_P ( str )		2015317	1					
ANR	2015350	Callee	Z_STRVAL_P		2015317	0					
ANR	2015351	Identifier	Z_STRVAL_P		2015317	0					
ANR	2015352	ArgumentList	str		2015317	1					
ANR	2015353	Argument	str		2015317	0					
ANR	2015354	Identifier	str		2015317	0					
ANR	2015355	ExpressionStatement	"p2 = php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"	1036:1:26244:26321	2015317	3	True				
ANR	2015356	AssignmentExpression	"p2 = php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015317	0		=			
ANR	2015357	Identifier	p2		2015317	0					
ANR	2015358	CallExpression	"php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015317	1					
ANR	2015359	Callee	php_memnstr		2015317	0					
ANR	2015360	Identifier	php_memnstr		2015317	0					
ANR	2015361	ArgumentList	Z_STRVAL_P ( str )		2015317	1					
ANR	2015362	Argument	Z_STRVAL_P ( str )		2015317	0					
ANR	2015363	CallExpression	Z_STRVAL_P ( str )		2015317	0					
ANR	2015364	Callee	Z_STRVAL_P		2015317	0					
ANR	2015365	Identifier	Z_STRVAL_P		2015317	0					
ANR	2015366	ArgumentList	str		2015317	1					
ANR	2015367	Argument	str		2015317	0					
ANR	2015368	Identifier	str		2015317	0					
ANR	2015369	Argument	Z_STRVAL_P ( delim )		2015317	1					
ANR	2015370	CallExpression	Z_STRVAL_P ( delim )		2015317	0					
ANR	2015371	Callee	Z_STRVAL_P		2015317	0					
ANR	2015372	Identifier	Z_STRVAL_P		2015317	0					
ANR	2015373	ArgumentList	delim		2015317	1					
ANR	2015374	Argument	delim		2015317	0					
ANR	2015375	Identifier	delim		2015317	0					
ANR	2015376	Argument	Z_STRLEN_P ( delim )		2015317	2					
ANR	2015377	CallExpression	Z_STRLEN_P ( delim )		2015317	0					
ANR	2015378	Callee	Z_STRLEN_P		2015317	0					
ANR	2015379	Identifier	Z_STRLEN_P		2015317	0					
ANR	2015380	ArgumentList	delim		2015317	1					
ANR	2015381	Argument	delim		2015317	0					
ANR	2015382	Identifier	delim		2015317	0					
ANR	2015383	Argument	endp		2015317	3					
ANR	2015384	Identifier	endp		2015317	0					
ANR	2015385	IfStatement	if ( p2 == NULL )		2015317	4					
ANR	2015386	Condition	p2 == NULL	1038:5:26329:26338	2015317	0	True				
ANR	2015387	EqualityExpression	p2 == NULL		2015317	0		==			
ANR	2015388	Identifier	p2		2015317	0					
ANR	2015389	Identifier	NULL		2015317	1					
ANR	2015390	CompoundStatement		9:17:190:190	2015317	1					
ANR	2015391	ExpressionStatement	"add_next_index_stringl ( return_value , p1 , Z_STRLEN_P ( str ) , 1 )"	1039:2:26345:26405	2015317	0	True				
ANR	2015392	CallExpression	"add_next_index_stringl ( return_value , p1 , Z_STRLEN_P ( str ) , 1 )"		2015317	0					
ANR	2015393	Callee	add_next_index_stringl		2015317	0					
ANR	2015394	Identifier	add_next_index_stringl		2015317	0					
ANR	2015395	ArgumentList	return_value		2015317	1					
ANR	2015396	Argument	return_value		2015317	0					
ANR	2015397	Identifier	return_value		2015317	0					
ANR	2015398	Argument	p1		2015317	1					
ANR	2015399	Identifier	p1		2015317	0					
ANR	2015400	Argument	Z_STRLEN_P ( str )		2015317	2					
ANR	2015401	CallExpression	Z_STRLEN_P ( str )		2015317	0					
ANR	2015402	Callee	Z_STRLEN_P		2015317	0					
ANR	2015403	Identifier	Z_STRLEN_P		2015317	0					
ANR	2015404	ArgumentList	str		2015317	1					
ANR	2015405	Argument	str		2015317	0					
ANR	2015406	Identifier	str		2015317	0					
ANR	2015407	Argument	1		2015317	3					
ANR	2015408	PrimaryExpression	1		2015317	0					
ANR	2015409	ElseStatement	else		2015317	0					
ANR	2015410	CompoundStatement		11:8:264:264	2015317	0					
ANR	2015411	DoStatement	do		2015317	0					
ANR	2015412	CompoundStatement		12:5:271:271	2015317	0					
ANR	2015413	ExpressionStatement	"add_next_index_stringl ( return_value , p1 , p2 - p1 , 1 )"	1042:3:26427:26479	2015317	0	True				
ANR	2015414	CallExpression	"add_next_index_stringl ( return_value , p1 , p2 - p1 , 1 )"		2015317	0					
ANR	2015415	Callee	add_next_index_stringl		2015317	0					
ANR	2015416	Identifier	add_next_index_stringl		2015317	0					
ANR	2015417	ArgumentList	return_value		2015317	1					
ANR	2015418	Argument	return_value		2015317	0					
ANR	2015419	Identifier	return_value		2015317	0					
ANR	2015420	Argument	p1		2015317	1					
ANR	2015421	Identifier	p1		2015317	0					
ANR	2015422	Argument	p2 - p1		2015317	2					
ANR	2015423	AdditiveExpression	p2 - p1		2015317	0		-			
ANR	2015424	Identifier	p2		2015317	0					
ANR	2015425	Identifier	p1		2015317	1					
ANR	2015426	Argument	1		2015317	3					
ANR	2015427	PrimaryExpression	1		2015317	0					
ANR	2015428	ExpressionStatement	p1 = p2 + Z_STRLEN_P ( delim )	1043:3:26484:26511	2015317	1	True				
ANR	2015429	AssignmentExpression	p1 = p2 + Z_STRLEN_P ( delim )		2015317	0		=			
ANR	2015430	Identifier	p1		2015317	0					
ANR	2015431	AdditiveExpression	p2 + Z_STRLEN_P ( delim )		2015317	1		+			
ANR	2015432	Identifier	p2		2015317	0					
ANR	2015433	CallExpression	Z_STRLEN_P ( delim )		2015317	1					
ANR	2015434	Callee	Z_STRLEN_P		2015317	0					
ANR	2015435	Identifier	Z_STRLEN_P		2015317	0					
ANR	2015436	ArgumentList	delim		2015317	1					
ANR	2015437	Argument	delim		2015317	0					
ANR	2015438	Identifier	delim		2015317	0					
ANR	2015439	Condition	"( p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp ) ) != NULL && -- limit > 1"	1044:11:26524:26617	2015317	1	True				
ANR	2015440	AndExpression	"( p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp ) ) != NULL && -- limit > 1"		2015317	0		&&			
ANR	2015441	EqualityExpression	"( p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp ) ) != NULL"		2015317	0		!=			
ANR	2015442	AssignmentExpression	"p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015317	0		=			
ANR	2015443	Identifier	p2		2015317	0					
ANR	2015444	CallExpression	"php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015317	1					
ANR	2015445	Callee	php_memnstr		2015317	0					
ANR	2015446	Identifier	php_memnstr		2015317	0					
ANR	2015447	ArgumentList	p1		2015317	1					
ANR	2015448	Argument	p1		2015317	0					
ANR	2015449	Identifier	p1		2015317	0					
ANR	2015450	Argument	Z_STRVAL_P ( delim )		2015317	1					
ANR	2015451	CallExpression	Z_STRVAL_P ( delim )		2015317	0					
ANR	2015452	Callee	Z_STRVAL_P		2015317	0					
ANR	2015453	Identifier	Z_STRVAL_P		2015317	0					
ANR	2015454	ArgumentList	delim		2015317	1					
ANR	2015455	Argument	delim		2015317	0					
ANR	2015456	Identifier	delim		2015317	0					
ANR	2015457	Argument	Z_STRLEN_P ( delim )		2015317	2					
ANR	2015458	CallExpression	Z_STRLEN_P ( delim )		2015317	0					
ANR	2015459	Callee	Z_STRLEN_P		2015317	0					
ANR	2015460	Identifier	Z_STRLEN_P		2015317	0					
ANR	2015461	ArgumentList	delim		2015317	1					
ANR	2015462	Argument	delim		2015317	0					
ANR	2015463	Identifier	delim		2015317	0					
ANR	2015464	Argument	endp		2015317	3					
ANR	2015465	Identifier	endp		2015317	0					
ANR	2015466	Identifier	NULL		2015317	1					
ANR	2015467	RelationalExpression	-- limit > 1		2015317	1		>			
ANR	2015468	UnaryExpression	-- limit		2015317	0					
ANR	2015469	IncDec	--		2015317	0					
ANR	2015470	Identifier	limit		2015317	1					
ANR	2015471	PrimaryExpression	1		2015317	1					
ANR	2015472	IfStatement	if ( p1 <= endp )		2015317	1					
ANR	2015473	Condition	p1 <= endp	1047:6:26628:26637	2015317	0	True				
ANR	2015474	RelationalExpression	p1 <= endp		2015317	0		<=			
ANR	2015475	Identifier	p1		2015317	0					
ANR	2015476	Identifier	endp		2015317	1					
ANR	2015477	ExpressionStatement	"add_next_index_stringl ( return_value , p1 , endp - p1 , 1 )"	1048:3:26643:26695	2015317	1	True				
ANR	2015478	CallExpression	"add_next_index_stringl ( return_value , p1 , endp - p1 , 1 )"		2015317	0					
ANR	2015479	Callee	add_next_index_stringl		2015317	0					
ANR	2015480	Identifier	add_next_index_stringl		2015317	0					
ANR	2015481	ArgumentList	return_value		2015317	1					
ANR	2015482	Argument	return_value		2015317	0					
ANR	2015483	Identifier	return_value		2015317	0					
ANR	2015484	Argument	p1		2015317	1					
ANR	2015485	Identifier	p1		2015317	0					
ANR	2015486	Argument	endp - p1		2015317	2					
ANR	2015487	AdditiveExpression	endp - p1		2015317	0		-			
ANR	2015488	Identifier	endp		2015317	0					
ANR	2015489	Identifier	p1		2015317	1					
ANR	2015490	Argument	1		2015317	3					
ANR	2015491	PrimaryExpression	1		2015317	0					
ANR	2015492	ReturnType	PHPAPI void		2015317	1					
ANR	2015493	Identifier	php_explode		2015317	2					
ANR	2015494	ParameterList	"zval * delim , zval * str , zval * return_value , long limit"		2015317	3					
ANR	2015495	Parameter	zval * delim	1029:24:26094:26104	2015317	0	True				
ANR	2015496	ParameterType	zval *		2015317	0					
ANR	2015497	Identifier	delim		2015317	1					
ANR	2015498	Parameter	zval * str	1029:37:26107:26115	2015317	1	True				
ANR	2015499	ParameterType	zval *		2015317	0					
ANR	2015500	Identifier	str		2015317	1					
ANR	2015501	Parameter	zval * return_value	1029:48:26118:26135	2015317	2	True				
ANR	2015502	ParameterType	zval *		2015317	0					
ANR	2015503	Identifier	return_value		2015317	1					
ANR	2015504	Parameter	long limit	1029:68:26138:26147	2015317	3	True				
ANR	2015505	ParameterType	long		2015317	0					
ANR	2015506	Identifier	limit		2015317	1					
ANR	2015507	CFGEntryNode	ENTRY		2015317		True				
ANR	2015508	CFGExitNode	EXIT		2015317		True				
ANR	2015509	Symbol	str		2015317						
ANR	2015510	Symbol	p1		2015317						
ANR	2015511	Symbol	return_value		2015317						
ANR	2015512	Symbol	p2		2015317						
ANR	2015513	Symbol	NULL		2015317						
ANR	2015514	Symbol	limit		2015317						
ANR	2015515	Symbol	php_memnstr		2015317						
ANR	2015516	Symbol	endp		2015317						
ANR	2015517	Symbol	Z_STRLEN_P		2015317						
ANR	2015518	Symbol	Z_STRVAL_P		2015317						
ANR	2015519	Symbol	delim		2015317						
ANR	2015520	Function	php_explode_negative_limit	1055:0:26751:28071							
ANR	2015521	FunctionDef	"php_explode_negative_limit (zval * delim , zval * str , zval * return_value , long limit)"		2015520	0					
ANR	2015522	CompoundStatement		1056:0:26846:28071	2015520	0					
ANR	2015523	Statement	define	1057:1:26849:26854	2015520	0	True				
ANR	2015524	Statement	EXPLODE_ALLOC_STEP	1057:8:26856:26873	2015520	1	True				
ANR	2015525	Statement	64	1057:27:26875:26876	2015520	2	True				
ANR	2015526	IdentifierDeclStatement	"char * p1 , * p2 , * endp ;"	1058:1:26879:26899	2015520	3	True				
ANR	2015527	IdentifierDecl	* p1		2015520	0					
ANR	2015528	IdentifierDeclType	char *		2015520	0					
ANR	2015529	Identifier	p1		2015520	1					
ANR	2015530	IdentifierDecl	* p2		2015520	1					
ANR	2015531	IdentifierDeclType	char *		2015520	0					
ANR	2015532	Identifier	p2		2015520	1					
ANR	2015533	IdentifierDecl	* endp		2015520	2					
ANR	2015534	IdentifierDeclType	char *		2015520	0					
ANR	2015535	Identifier	endp		2015520	1					
ANR	2015536	ExpressionStatement	endp = Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )	1060:1:26903:26943	2015520	4	True				
ANR	2015537	AssignmentExpression	endp = Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )		2015520	0		=			
ANR	2015538	Identifier	endp		2015520	0					
ANR	2015539	AdditiveExpression	Z_STRVAL_P ( str ) + Z_STRLEN_P ( str )		2015520	1		+			
ANR	2015540	CallExpression	Z_STRVAL_P ( str )		2015520	0					
ANR	2015541	Callee	Z_STRVAL_P		2015520	0					
ANR	2015542	Identifier	Z_STRVAL_P		2015520	0					
ANR	2015543	ArgumentList	str		2015520	1					
ANR	2015544	Argument	str		2015520	0					
ANR	2015545	Identifier	str		2015520	0					
ANR	2015546	CallExpression	Z_STRLEN_P ( str )		2015520	1					
ANR	2015547	Callee	Z_STRLEN_P		2015520	0					
ANR	2015548	Identifier	Z_STRLEN_P		2015520	0					
ANR	2015549	ArgumentList	str		2015520	1					
ANR	2015550	Argument	str		2015520	0					
ANR	2015551	Identifier	str		2015520	0					
ANR	2015552	ExpressionStatement	p1 = Z_STRVAL_P ( str )	1062:1:26947:26967	2015520	5	True				
ANR	2015553	AssignmentExpression	p1 = Z_STRVAL_P ( str )		2015520	0		=			
ANR	2015554	Identifier	p1		2015520	0					
ANR	2015555	CallExpression	Z_STRVAL_P ( str )		2015520	1					
ANR	2015556	Callee	Z_STRVAL_P		2015520	0					
ANR	2015557	Identifier	Z_STRVAL_P		2015520	0					
ANR	2015558	ArgumentList	str		2015520	1					
ANR	2015559	Argument	str		2015520	0					
ANR	2015560	Identifier	str		2015520	0					
ANR	2015561	ExpressionStatement	"p2 = php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"	1063:1:26970:27047	2015520	6	True				
ANR	2015562	AssignmentExpression	"p2 = php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015520	0		=			
ANR	2015563	Identifier	p2		2015520	0					
ANR	2015564	CallExpression	"php_memnstr ( Z_STRVAL_P ( str ) , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015520	1					
ANR	2015565	Callee	php_memnstr		2015520	0					
ANR	2015566	Identifier	php_memnstr		2015520	0					
ANR	2015567	ArgumentList	Z_STRVAL_P ( str )		2015520	1					
ANR	2015568	Argument	Z_STRVAL_P ( str )		2015520	0					
ANR	2015569	CallExpression	Z_STRVAL_P ( str )		2015520	0					
ANR	2015570	Callee	Z_STRVAL_P		2015520	0					
ANR	2015571	Identifier	Z_STRVAL_P		2015520	0					
ANR	2015572	ArgumentList	str		2015520	1					
ANR	2015573	Argument	str		2015520	0					
ANR	2015574	Identifier	str		2015520	0					
ANR	2015575	Argument	Z_STRVAL_P ( delim )		2015520	1					
ANR	2015576	CallExpression	Z_STRVAL_P ( delim )		2015520	0					
ANR	2015577	Callee	Z_STRVAL_P		2015520	0					
ANR	2015578	Identifier	Z_STRVAL_P		2015520	0					
ANR	2015579	ArgumentList	delim		2015520	1					
ANR	2015580	Argument	delim		2015520	0					
ANR	2015581	Identifier	delim		2015520	0					
ANR	2015582	Argument	Z_STRLEN_P ( delim )		2015520	2					
ANR	2015583	CallExpression	Z_STRLEN_P ( delim )		2015520	0					
ANR	2015584	Callee	Z_STRLEN_P		2015520	0					
ANR	2015585	Identifier	Z_STRLEN_P		2015520	0					
ANR	2015586	ArgumentList	delim		2015520	1					
ANR	2015587	Argument	delim		2015520	0					
ANR	2015588	Identifier	delim		2015520	0					
ANR	2015589	Argument	endp		2015520	3					
ANR	2015590	Identifier	endp		2015520	0					
ANR	2015591	IfStatement	if ( p2 == NULL )		2015520	7					
ANR	2015592	Condition	p2 == NULL	1065:5:27055:27064	2015520	0	True				
ANR	2015593	EqualityExpression	p2 == NULL		2015520	0		==			
ANR	2015594	Identifier	p2		2015520	0					
ANR	2015595	Identifier	NULL		2015520	1					
ANR	2015596	CompoundStatement		10:17:220:220	2015520	1					
ANR	2015597	ElseStatement	else		2015520	0					
ANR	2015598	CompoundStatement		18:2:429:483	2015520	0					
ANR	2015599	IdentifierDeclStatement	"int allocated = EXPLODE_ALLOC_STEP , found = 0 ;"	1071:2:27206:27251	2015520	0	True				
ANR	2015600	IdentifierDecl	allocated = EXPLODE_ALLOC_STEP		2015520	0					
ANR	2015601	IdentifierDeclType	int		2015520	0					
ANR	2015602	Identifier	allocated		2015520	1					
ANR	2015603	AssignmentExpression	allocated = EXPLODE_ALLOC_STEP		2015520	2		=			
ANR	2015604	Identifier	EXPLODE_ALLOC_STEP		2015520	0					
ANR	2015605	Identifier	EXPLODE_ALLOC_STEP		2015520	1					
ANR	2015606	IdentifierDecl	found = 0		2015520	1					
ANR	2015607	IdentifierDeclType	int		2015520	0					
ANR	2015608	Identifier	found		2015520	1					
ANR	2015609	AssignmentExpression	found = 0		2015520	2		=			
ANR	2015610	Identifier	found		2015520	0					
ANR	2015611	PrimaryExpression	0		2015520	1					
ANR	2015612	IdentifierDeclStatement	"long i , to_return ;"	1072:2:27255:27272	2015520	1	True				
ANR	2015613	IdentifierDecl	i		2015520	0					
ANR	2015614	IdentifierDeclType	long		2015520	0					
ANR	2015615	Identifier	i		2015520	1					
ANR	2015616	IdentifierDecl	to_return		2015520	1					
ANR	2015617	IdentifierDeclType	long		2015520	0					
ANR	2015618	Identifier	to_return		2015520	1					
ANR	2015619	IdentifierDeclStatement	char * * positions = emalloc ( allocated * sizeof ( char * ) ) ;	1073:2:27276:27330	2015520	2	True				
ANR	2015620	IdentifierDecl	* * positions = emalloc ( allocated * sizeof ( char * ) )		2015520	0					
ANR	2015621	IdentifierDeclType	char * *		2015520	0					
ANR	2015622	Identifier	positions		2015520	1					
ANR	2015623	AssignmentExpression	* * positions = emalloc ( allocated * sizeof ( char * ) )		2015520	2		=			
ANR	2015624	Identifier	positions		2015520	0					
ANR	2015625	CallExpression	emalloc ( allocated * sizeof ( char * ) )		2015520	1					
ANR	2015626	Callee	emalloc		2015520	0					
ANR	2015627	Identifier	emalloc		2015520	0					
ANR	2015628	ArgumentList	allocated * sizeof ( char * )		2015520	1					
ANR	2015629	Argument	allocated * sizeof ( char * )		2015520	0					
ANR	2015630	MultiplicativeExpression	allocated * sizeof ( char * )		2015520	0		*			
ANR	2015631	Identifier	allocated		2015520	0					
ANR	2015632	SizeofExpression	sizeof ( char * )		2015520	1					
ANR	2015633	Sizeof	sizeof		2015520	0					
ANR	2015634	SizeofOperand	char *		2015520	1					
ANR	2015635	ExpressionStatement	positions [ found ++ ] = p1	1075:2:27335:27358	2015520	3	True				
ANR	2015636	AssignmentExpression	positions [ found ++ ] = p1		2015520	0		=			
ANR	2015637	ArrayIndexing	positions [ found ++ ]		2015520	0					
ANR	2015638	Identifier	positions		2015520	0					
ANR	2015639	PostIncDecOperationExpression	found ++		2015520	1					
ANR	2015640	Identifier	found		2015520	0					
ANR	2015641	IncDec	++		2015520	1					
ANR	2015642	Identifier	p1		2015520	1					
ANR	2015643	DoStatement	do		2015520	4					
ANR	2015644	CompoundStatement		21:5:518:518	2015520	0					
ANR	2015645	IfStatement	if ( found >= allocated )		2015520	0					
ANR	2015646	Condition	found >= allocated	1077:7:27374:27391	2015520	0	True				
ANR	2015647	RelationalExpression	found >= allocated		2015520	0		>=			
ANR	2015648	Identifier	found		2015520	0					
ANR	2015649	Identifier	allocated		2015520	1					
ANR	2015650	CompoundStatement		22:27:547:547	2015520	1					
ANR	2015651	ExpressionStatement	allocated = found + EXPLODE_ALLOC_STEP	1078:4:27400:27438	2015520	0	True				
ANR	2015652	AssignmentExpression	allocated = found + EXPLODE_ALLOC_STEP		2015520	0		=			
ANR	2015653	Identifier	allocated		2015520	0					
ANR	2015654	AdditiveExpression	found + EXPLODE_ALLOC_STEP		2015520	1		+			
ANR	2015655	Identifier	found		2015520	0					
ANR	2015656	Identifier	EXPLODE_ALLOC_STEP		2015520	1					
ANR	2015657	ExpressionStatement	"positions = erealloc ( positions , allocated * sizeof ( char * ) )"	1079:4:27481:27538	2015520	1	True				
ANR	2015658	AssignmentExpression	"positions = erealloc ( positions , allocated * sizeof ( char * ) )"		2015520	0		=			
ANR	2015659	Identifier	positions		2015520	0					
ANR	2015660	CallExpression	"erealloc ( positions , allocated * sizeof ( char * ) )"		2015520	1					
ANR	2015661	Callee	erealloc		2015520	0					
ANR	2015662	Identifier	erealloc		2015520	0					
ANR	2015663	ArgumentList	positions		2015520	1					
ANR	2015664	Argument	positions		2015520	0					
ANR	2015665	Identifier	positions		2015520	0					
ANR	2015666	Argument	allocated * sizeof ( char * )		2015520	1					
ANR	2015667	MultiplicativeExpression	allocated * sizeof ( char * )		2015520	0		*			
ANR	2015668	Identifier	allocated		2015520	0					
ANR	2015669	SizeofExpression	sizeof ( char * )		2015520	1					
ANR	2015670	Sizeof	sizeof		2015520	0					
ANR	2015671	SizeofOperand	char *		2015520	1					
ANR	2015672	ExpressionStatement	positions [ found ++ ] = p1 = p2 + Z_STRLEN_P ( delim )	1081:3:27548:27596	2015520	1	True				
ANR	2015673	AssignmentExpression	positions [ found ++ ] = p1 = p2 + Z_STRLEN_P ( delim )		2015520	0		=			
ANR	2015674	ArrayIndexing	positions [ found ++ ]		2015520	0					
ANR	2015675	Identifier	positions		2015520	0					
ANR	2015676	PostIncDecOperationExpression	found ++		2015520	1					
ANR	2015677	Identifier	found		2015520	0					
ANR	2015678	IncDec	++		2015520	1					
ANR	2015679	AssignmentExpression	p1 = p2 + Z_STRLEN_P ( delim )		2015520	1		=			
ANR	2015680	Identifier	p1		2015520	0					
ANR	2015681	AdditiveExpression	p2 + Z_STRLEN_P ( delim )		2015520	1		+			
ANR	2015682	Identifier	p2		2015520	0					
ANR	2015683	CallExpression	Z_STRLEN_P ( delim )		2015520	1					
ANR	2015684	Callee	Z_STRLEN_P		2015520	0					
ANR	2015685	Identifier	Z_STRLEN_P		2015520	0					
ANR	2015686	ArgumentList	delim		2015520	1					
ANR	2015687	Argument	delim		2015520	0					
ANR	2015688	Identifier	delim		2015520	0					
ANR	2015689	Condition	"( p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp ) ) != NULL"	1082:11:27609:27682	2015520	1	True				
ANR	2015690	EqualityExpression	"( p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp ) ) != NULL"		2015520	0		!=			
ANR	2015691	AssignmentExpression	"p2 = php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015520	0		=			
ANR	2015692	Identifier	p2		2015520	0					
ANR	2015693	CallExpression	"php_memnstr ( p1 , Z_STRVAL_P ( delim ) , Z_STRLEN_P ( delim ) , endp )"		2015520	1					
ANR	2015694	Callee	php_memnstr		2015520	0					
ANR	2015695	Identifier	php_memnstr		2015520	0					
ANR	2015696	ArgumentList	p1		2015520	1					
ANR	2015697	Argument	p1		2015520	0					
ANR	2015698	Identifier	p1		2015520	0					
ANR	2015699	Argument	Z_STRVAL_P ( delim )		2015520	1					
ANR	2015700	CallExpression	Z_STRVAL_P ( delim )		2015520	0					
ANR	2015701	Callee	Z_STRVAL_P		2015520	0					
ANR	2015702	Identifier	Z_STRVAL_P		2015520	0					
ANR	2015703	ArgumentList	delim		2015520	1					
ANR	2015704	Argument	delim		2015520	0					
ANR	2015705	Identifier	delim		2015520	0					
ANR	2015706	Argument	Z_STRLEN_P ( delim )		2015520	2					
ANR	2015707	CallExpression	Z_STRLEN_P ( delim )		2015520	0					
ANR	2015708	Callee	Z_STRLEN_P		2015520	0					
ANR	2015709	Identifier	Z_STRLEN_P		2015520	0					
ANR	2015710	ArgumentList	delim		2015520	1					
ANR	2015711	Argument	delim		2015520	0					
ANR	2015712	Identifier	delim		2015520	0					
ANR	2015713	Argument	endp		2015520	3					
ANR	2015714	Identifier	endp		2015520	0					
ANR	2015715	Identifier	NULL		2015520	1					
ANR	2015716	ExpressionStatement	to_return = limit + found	1084:2:27689:27714	2015520	5	True				
ANR	2015717	AssignmentExpression	to_return = limit + found		2015520	0		=			
ANR	2015718	Identifier	to_return		2015520	0					
ANR	2015719	AdditiveExpression	limit + found		2015520	1		+			
ANR	2015720	Identifier	limit		2015520	0					
ANR	2015721	Identifier	found		2015520	1					
ANR	2015722	ForStatement	for ( i = 0 ; i < to_return ; i ++ )		2015520	6					
ANR	2015723	ForInit	i = 0 ;	1086:7:27824:27829	2015520	0	True				
ANR	2015724	AssignmentExpression	i = 0		2015520	0		=			
ANR	2015725	Identifier	i		2015520	0					
ANR	2015726	PrimaryExpression	0		2015520	1					
ANR	2015727	Condition	i < to_return	1086:13:27830:27842	2015520	1	True				
ANR	2015728	RelationalExpression	i < to_return		2015520	0		<			
ANR	2015729	Identifier	i		2015520	0					
ANR	2015730	Identifier	to_return		2015520	1					
ANR	2015731	PostIncDecOperationExpression	i ++	1086:27:27844:27846	2015520	2	True				
ANR	2015732	Identifier	i		2015520	0					
ANR	2015733	IncDec	++		2015520	1					
ANR	2015734	CompoundStatement		31:32:1002:1002	2015520	3					
ANR	2015735	ExpressionStatement	"add_next_index_stringl ( return_value , positions [ i ] , ( positions [ i + 1 ] - Z_STRLEN_P ( delim ) ) - positions [ i ] , 1 )"	1087:3:27895:28016	2015520	0	True				
ANR	2015736	CallExpression	"add_next_index_stringl ( return_value , positions [ i ] , ( positions [ i + 1 ] - Z_STRLEN_P ( delim ) ) - positions [ i ] , 1 )"		2015520	0					
ANR	2015737	Callee	add_next_index_stringl		2015520	0					
ANR	2015738	Identifier	add_next_index_stringl		2015520	0					
ANR	2015739	ArgumentList	return_value		2015520	1					
ANR	2015740	Argument	return_value		2015520	0					
ANR	2015741	Identifier	return_value		2015520	0					
ANR	2015742	Argument	positions [ i ]		2015520	1					
ANR	2015743	ArrayIndexing	positions [ i ]		2015520	0					
ANR	2015744	Identifier	positions		2015520	0					
ANR	2015745	Identifier	i		2015520	1					
ANR	2015746	Argument	( positions [ i + 1 ] - Z_STRLEN_P ( delim ) ) - positions [ i ]		2015520	2					
ANR	2015747	AdditiveExpression	( positions [ i + 1 ] - Z_STRLEN_P ( delim ) ) - positions [ i ]		2015520	0		-			
ANR	2015748	AdditiveExpression	positions [ i + 1 ] - Z_STRLEN_P ( delim )		2015520	0		-			
ANR	2015749	ArrayIndexing	positions [ i + 1 ]		2015520	0					
ANR	2015750	Identifier	positions		2015520	0					
ANR	2015751	AdditiveExpression	i + 1		2015520	1		+			
ANR	2015752	Identifier	i		2015520	0					
ANR	2015753	PrimaryExpression	1		2015520	1					
ANR	2015754	CallExpression	Z_STRLEN_P ( delim )		2015520	1					
ANR	2015755	Callee	Z_STRLEN_P		2015520	0					
ANR	2015756	Identifier	Z_STRLEN_P		2015520	0					
ANR	2015757	ArgumentList	delim		2015520	1					
ANR	2015758	Argument	delim		2015520	0					
ANR	2015759	Identifier	delim		2015520	0					
ANR	2015760	ArrayIndexing	positions [ i ]		2015520	1					
ANR	2015761	Identifier	positions		2015520	0					
ANR	2015762	Identifier	i		2015520	1					
ANR	2015763	Argument	1		2015520	3					
ANR	2015764	PrimaryExpression	1		2015520	0					
ANR	2015765	ExpressionStatement	efree ( positions )	1092:2:28024:28040	2015520	7	True				
ANR	2015766	CallExpression	efree ( positions )		2015520	0					
ANR	2015767	Callee	efree		2015520	0					
ANR	2015768	Identifier	efree		2015520	0					
ANR	2015769	ArgumentList	positions		2015520	1					
ANR	2015770	Argument	positions		2015520	0					
ANR	2015771	Identifier	positions		2015520	0					
ANR	2015772	Statement	undef	1094:1:28046:28050	2015520	8	True				
ANR	2015773	Statement	EXPLODE_ALLOC_STEP	1094:7:28052:28069	2015520	9	True				
ANR	2015774	ReturnType	PHPAPI void		2015520	1					
ANR	2015775	Identifier	php_explode_negative_limit		2015520	2					
ANR	2015776	ParameterList	"zval * delim , zval * str , zval * return_value , long limit"		2015520	3					
ANR	2015777	Parameter	zval * delim	1055:39:26790:26800	2015520	0	True				
ANR	2015778	ParameterType	zval *		2015520	0					
ANR	2015779	Identifier	delim		2015520	1					
ANR	2015780	Parameter	zval * str	1055:52:26803:26811	2015520	1	True				
ANR	2015781	ParameterType	zval *		2015520	0					
ANR	2015782	Identifier	str		2015520	1					
ANR	2015783	Parameter	zval * return_value	1055:63:26814:26831	2015520	2	True				
ANR	2015784	ParameterType	zval *		2015520	0					
ANR	2015785	Identifier	return_value		2015520	1					
ANR	2015786	Parameter	long limit	1055:83:26834:26843	2015520	3	True				
ANR	2015787	ParameterType	long		2015520	0					
ANR	2015788	Identifier	limit		2015520	1					
ANR	2015789	CFGEntryNode	ENTRY		2015520		True				
ANR	2015790	CFGExitNode	EXIT		2015520		True				
ANR	2015791	Symbol	* positions		2015520						
ANR	2015792	Symbol	p1		2015520						
ANR	2015793	Symbol	return_value		2015520						
ANR	2015794	Symbol	p2		2015520						
ANR	2015795	Symbol	NULL		2015520						
ANR	2015796	Symbol	php_memnstr		2015520						
ANR	2015797	Symbol	i		2015520						
ANR	2015798	Symbol	positions		2015520						
ANR	2015799	Symbol	Z_STRVAL_P		2015520						
ANR	2015800	Symbol	str		2015520						
ANR	2015801	Symbol	emalloc		2015520						
ANR	2015802	Symbol	found		2015520						
ANR	2015803	Symbol	* i		2015520						
ANR	2015804	Symbol	EXPLODE_ALLOC_STEP		2015520						
ANR	2015805	Symbol	to_return		2015520						
ANR	2015806	Symbol	limit		2015520						
ANR	2015807	Symbol	endp		2015520						
ANR	2015808	Symbol	Z_STRLEN_P		2015520						
ANR	2015809	Symbol	erealloc		2015520						
ANR	2015810	Symbol	delim		2015520						
ANR	2015811	Symbol	allocated		2015520						
ANR	2015812	DeclStmt									
ANR	2015813	Decl							char	char *	str
ANR	2015814	Decl							char	char *	delim
ANR	2015815	DeclStmt									
ANR	2015816	Decl							int	int	str_len
ANR	2015817	Decl							int	int	delim_len
ANR	2015818	DeclStmt									
ANR	2015819	Decl							long	long	limit
ANR	2015820	DeclStmt									
ANR	2015821	Decl							zval	zval	zdelim
ANR	2015822	Decl							zval	zval	zstr
ANR	2015823	DeclStmt									
ANR	2015824	Decl							zval	zval * *	tmp
ANR	2015825	DeclStmt									
ANR	2015826	Decl							HashPosition	HashPosition	pos
ANR	2015827	DeclStmt									
ANR	2015828	Decl							smart_str	smart_str	implstr
ANR	2015829	DeclStmt									
ANR	2015830	Decl							int	int	numelems
ANR	2015831	Decl							int	int	i
ANR	2015832	DeclStmt									
ANR	2015833	Decl							zval	zval	tmp_val
ANR	2015834	DeclStmt									
ANR	2015835	Decl							int	int	str_len
ANR	2015836	DeclStmt									
ANR	2015837	Decl							char	char [ MAX_LENGTH_OF_LONG + 1 ]	stmp
ANR	2015838	DeclStmt									
ANR	2015839	Decl							char	char *	stmp
ANR	2015840	DeclStmt									
ANR	2015841	Decl							int	int	copy
ANR	2015842	DeclStmt									
ANR	2015843	Decl							zval	zval	expr
ANR	2015844	DeclStmt									
ANR	2015845	Decl							zval	zval * *	arg1
ANR	2015846	Decl							zval	zval * *	arg2
ANR	2015847	Decl							zval	zval *	delim
ANR	2015848	Decl							zval	zval *	arr
ANR	2015849	DeclStmt									
ANR	2015850	Decl							char	char *	str
ANR	2015851	Decl							char	char *	tok
ANR	2015852	DeclStmt									
ANR	2015853	Decl							int	int	str_len
ANR	2015854	Decl							int	int	tok_len
ANR	2015855	DeclStmt									
ANR	2015856	Decl							zval	zval *	zv
ANR	2015857	DeclStmt									
ANR	2015858	Decl							char	char *	token
ANR	2015859	DeclStmt									
ANR	2015860	Decl							char	char *	token_end
ANR	2015861	DeclStmt									
ANR	2015862	Decl							char	char *	p
ANR	2015863	DeclStmt									
ANR	2015864	Decl							char	char *	pe
ANR	2015865	DeclStmt									
ANR	2015866	Decl							int	int	skipped
ANR	2015867	Function	php_strtoupper	1360:0:34010:34198							
ANR	2015868	FunctionDef	"php_strtoupper (char * s , size_t len)"		2015867	0					
ANR	2015869	CompoundStatement		1361:0:34059:34198	2015867	0					
ANR	2015870	IdentifierDeclStatement	"unsigned char * c , * e ;"	1362:1:34062:34082	2015867	0	True				
ANR	2015871	IdentifierDecl	* c		2015867	0					
ANR	2015872	IdentifierDeclType	unsigned char *		2015867	0					
ANR	2015873	Identifier	c		2015867	1					
ANR	2015874	IdentifierDecl	* e		2015867	1					
ANR	2015875	IdentifierDeclType	unsigned char *		2015867	0					
ANR	2015876	Identifier	e		2015867	1					
ANR	2015877	ExpressionStatement	c = ( unsigned char * ) s	1364:1:34086:34108	2015867	1	True				
ANR	2015878	AssignmentExpression	c = ( unsigned char * ) s		2015867	0		=			
ANR	2015879	Identifier	c		2015867	0					
ANR	2015880	CastExpression	( unsigned char * ) s		2015867	1					
ANR	2015881	CastTarget	unsigned char *		2015867	0					
ANR	2015882	Identifier	s		2015867	1					
ANR	2015883	ExpressionStatement	e = ( unsigned char * ) c + len	1365:1:34111:34137	2015867	2	True				
ANR	2015884	AssignmentExpression	e = ( unsigned char * ) c + len		2015867	0		=			
ANR	2015885	Identifier	e		2015867	0					
ANR	2015886	AdditiveExpression	( unsigned char * ) c + len		2015867	1		+			
ANR	2015887	CastExpression	( unsigned char * ) c		2015867	0					
ANR	2015888	CastTarget	unsigned char *		2015867	0					
ANR	2015889	Identifier	c		2015867	1					
ANR	2015890	Identifier	len		2015867	1					
ANR	2015891	WhileStatement	while ( c < e )		2015867	3					
ANR	2015892	Condition	c < e	1367:8:34148:34152	2015867	0	True				
ANR	2015893	RelationalExpression	c < e		2015867	0		<			
ANR	2015894	Identifier	c		2015867	0					
ANR	2015895	Identifier	e		2015867	1					
ANR	2015896	CompoundStatement		7:15:95:95	2015867	1					
ANR	2015897	ExpressionStatement	* c = toupper ( * c )	1368:2:34159:34175	2015867	0	True				
ANR	2015898	AssignmentExpression	* c = toupper ( * c )		2015867	0		=			
ANR	2015899	UnaryOperationExpression	* c		2015867	0					
ANR	2015900	UnaryOperator	*		2015867	0					
ANR	2015901	Identifier	c		2015867	1					
ANR	2015902	CallExpression	toupper ( * c )		2015867	1					
ANR	2015903	Callee	toupper		2015867	0					
ANR	2015904	Identifier	toupper		2015867	0					
ANR	2015905	ArgumentList	* c		2015867	1					
ANR	2015906	Argument	* c		2015867	0					
ANR	2015907	UnaryOperationExpression	* c		2015867	0					
ANR	2015908	UnaryOperator	*		2015867	0					
ANR	2015909	Identifier	c		2015867	1					
ANR	2015910	ExpressionStatement	c ++	1369:2:34179:34182	2015867	1	True				
ANR	2015911	PostIncDecOperationExpression	c ++		2015867	0					
ANR	2015912	Identifier	c		2015867	0					
ANR	2015913	IncDec	++		2015867	1					
ANR	2015914	ReturnStatement	return s ;	1371:1:34188:34196	2015867	4	True				
ANR	2015915	Identifier	s		2015867	0					
ANR	2015916	ReturnType	PHPAPI char *		2015867	1					
ANR	2015917	Identifier	php_strtoupper		2015867	2					
ANR	2015918	ParameterList	"char * s , size_t len"		2015867	3					
ANR	2015919	Parameter	char * s	1360:28:34038:34044	2015867	0	True				
ANR	2015920	ParameterType	char *		2015867	0					
ANR	2015921	Identifier	s		2015867	1					
ANR	2015922	Parameter	size_t len	1360:37:34047:34056	2015867	1	True				
ANR	2015923	ParameterType	size_t		2015867	0					
ANR	2015924	Identifier	len		2015867	1					
ANR	2015925	CFGEntryNode	ENTRY		2015867		True				
ANR	2015926	CFGExitNode	EXIT		2015867		True				
ANR	2015927	Symbol	s		2015867						
ANR	2015928	Symbol	c		2015867						
ANR	2015929	Symbol	len		2015867						
ANR	2015930	Symbol	e		2015867						
ANR	2015931	Symbol	toupper		2015867						
ANR	2015932	Symbol	* c		2015867						
ANR	2015933	DeclStmt									
ANR	2015934	Decl							char	char *	arg
ANR	2015935	DeclStmt									
ANR	2015936	Decl							int	int	arglen
ANR	2015937	Function	php_strtolower	1394:0:34572:34743							
ANR	2015938	FunctionDef	"php_strtolower (char * s , size_t len)"		2015937	0					
ANR	2015939	CompoundStatement		1395:0:34621:34743	2015937	0					
ANR	2015940	IdentifierDeclStatement	"unsigned char * c , * e ;"	1396:1:34624:34644	2015937	0	True				
ANR	2015941	IdentifierDecl	* c		2015937	0					
ANR	2015942	IdentifierDeclType	unsigned char *		2015937	0					
ANR	2015943	Identifier	c		2015937	1					
ANR	2015944	IdentifierDecl	* e		2015937	1					
ANR	2015945	IdentifierDeclType	unsigned char *		2015937	0					
ANR	2015946	Identifier	e		2015937	1					
ANR	2015947	ExpressionStatement	c = ( unsigned char * ) s	1398:1:34648:34670	2015937	1	True				
ANR	2015948	AssignmentExpression	c = ( unsigned char * ) s		2015937	0		=			
ANR	2015949	Identifier	c		2015937	0					
ANR	2015950	CastExpression	( unsigned char * ) s		2015937	1					
ANR	2015951	CastTarget	unsigned char *		2015937	0					
ANR	2015952	Identifier	s		2015937	1					
ANR	2015953	ExpressionStatement	e = c + len	1399:1:34673:34682	2015937	2	True				
ANR	2015954	AssignmentExpression	e = c + len		2015937	0		=			
ANR	2015955	Identifier	e		2015937	0					
ANR	2015956	AdditiveExpression	c + len		2015937	1		+			
ANR	2015957	Identifier	c		2015937	0					
ANR	2015958	Identifier	len		2015937	1					
ANR	2015959	WhileStatement	while ( c < e )		2015937	3					
ANR	2015960	Condition	c < e	1401:8:34693:34697	2015937	0	True				
ANR	2015961	RelationalExpression	c < e		2015937	0		<			
ANR	2015962	Identifier	c		2015937	0					
ANR	2015963	Identifier	e		2015937	1					
ANR	2015964	CompoundStatement		7:15:78:78	2015937	1					
ANR	2015965	ExpressionStatement	* c = tolower ( * c )	1402:2:34704:34720	2015937	0	True				
ANR	2015966	AssignmentExpression	* c = tolower ( * c )		2015937	0		=			
ANR	2015967	UnaryOperationExpression	* c		2015937	0					
ANR	2015968	UnaryOperator	*		2015937	0					
ANR	2015969	Identifier	c		2015937	1					
ANR	2015970	CallExpression	tolower ( * c )		2015937	1					
ANR	2015971	Callee	tolower		2015937	0					
ANR	2015972	Identifier	tolower		2015937	0					
ANR	2015973	ArgumentList	* c		2015937	1					
ANR	2015974	Argument	* c		2015937	0					
ANR	2015975	UnaryOperationExpression	* c		2015937	0					
ANR	2015976	UnaryOperator	*		2015937	0					
ANR	2015977	Identifier	c		2015937	1					
ANR	2015978	ExpressionStatement	c ++	1403:2:34724:34727	2015937	1	True				
ANR	2015979	PostIncDecOperationExpression	c ++		2015937	0					
ANR	2015980	Identifier	c		2015937	0					
ANR	2015981	IncDec	++		2015937	1					
ANR	2015982	ReturnStatement	return s ;	1405:1:34733:34741	2015937	4	True				
ANR	2015983	Identifier	s		2015937	0					
ANR	2015984	ReturnType	PHPAPI char *		2015937	1					
ANR	2015985	Identifier	php_strtolower		2015937	2					
ANR	2015986	ParameterList	"char * s , size_t len"		2015937	3					
ANR	2015987	Parameter	char * s	1394:28:34600:34606	2015937	0	True				
ANR	2015988	ParameterType	char *		2015937	0					
ANR	2015989	Identifier	s		2015937	1					
ANR	2015990	Parameter	size_t len	1394:37:34609:34618	2015937	1	True				
ANR	2015991	ParameterType	size_t		2015937	0					
ANR	2015992	Identifier	len		2015937	1					
ANR	2015993	CFGEntryNode	ENTRY		2015937		True				
ANR	2015994	CFGExitNode	EXIT		2015937		True				
ANR	2015995	Symbol	s		2015937						
ANR	2015996	Symbol	c		2015937						
ANR	2015997	Symbol	len		2015937						
ANR	2015998	Symbol	tolower		2015937						
ANR	2015999	Symbol	e		2015937						
ANR	2016000	Symbol	* c		2015937						
ANR	2016001	DeclStmt									
ANR	2016002	Decl							char	char *	str
ANR	2016003	DeclStmt									
ANR	2016004	Decl							int	int	arglen
ANR	2016005	DeclStmt									
ANR	2016006	Decl							char	char *	ret
ANR	2016007	Decl							char	char *	c
ANR	2016008	Decl							char	char *	comp
ANR	2016009	Decl							char	char *	cend
ANR	2016010	DeclStmt									
ANR	2016011	Decl							size_t	size_t	inc_len
ANR	2016012	Decl							size_t	size_t	cnt
ANR	2016013	DeclStmt									
ANR	2016014	Decl							int	int	state
ANR	2016015	DeclStmt									
ANR	2016016	Decl							char	char *	string
ANR	2016017	Decl							char	char *	suffix
ANR	2016018	Decl							char	char *	ret
ANR	2016019	DeclStmt									
ANR	2016020	Decl							int	int	string_len
ANR	2016021	Decl							int	int	suffix_len
ANR	2016022	DeclStmt									
ANR	2016023	Decl							size_t	size_t	ret_len
ANR	2016024	Function	php_dirname	1531:0:37269:37354							
ANR	2016025	FunctionDef	"php_dirname (char * path , size_t len)"		2016024	0					
ANR	2016026	CompoundStatement		1532:0:37319:37354	2016024	0					
ANR	2016027	ReturnStatement	"return zend_dirname ( path , len ) ;"	1533:1:37322:37352	2016024	0	True				
ANR	2016028	CallExpression	"zend_dirname ( path , len )"		2016024	0					
ANR	2016029	Callee	zend_dirname		2016024	0					
ANR	2016030	Identifier	zend_dirname		2016024	0					
ANR	2016031	ArgumentList	path		2016024	1					
ANR	2016032	Argument	path		2016024	0					
ANR	2016033	Identifier	path		2016024	0					
ANR	2016034	Argument	len		2016024	1					
ANR	2016035	Identifier	len		2016024	0					
ANR	2016036	ReturnType	PHPAPI size_t		2016024	1					
ANR	2016037	Identifier	php_dirname		2016024	2					
ANR	2016038	ParameterList	"char * path , size_t len"		2016024	3					
ANR	2016039	Parameter	char * path	1531:26:37295:37304	2016024	0	True				
ANR	2016040	ParameterType	char *		2016024	0					
ANR	2016041	Identifier	path		2016024	1					
ANR	2016042	Parameter	size_t len	1531:38:37307:37316	2016024	1	True				
ANR	2016043	ParameterType	size_t		2016024	0					
ANR	2016044	Identifier	len		2016024	1					
ANR	2016045	CFGEntryNode	ENTRY		2016024		True				
ANR	2016046	CFGExitNode	EXIT		2016024		True				
ANR	2016047	Symbol	path		2016024						
ANR	2016048	Symbol	len		2016024						
ANR	2016049	Symbol	zend_dirname		2016024						
ANR	2016050	DeclStmt									
ANR	2016051	Decl							char	char *	str
ANR	2016052	DeclStmt									
ANR	2016053	Decl							char	char *	ret
ANR	2016054	DeclStmt									
ANR	2016055	Decl							int	int	str_len
ANR	2016056	DeclStmt									
ANR	2016057	Decl							size_t	size_t	ret_len
ANR	2016058	DeclStmt									
ANR	2016059	Decl							zval	zval *	tmp
ANR	2016060	DeclStmt									
ANR	2016061	Decl							char	char *	path
ANR	2016062	Decl							char	char *	ret
ANR	2016063	DeclStmt									
ANR	2016064	Decl							int	int	path_len
ANR	2016065	Decl							int	int	have_basename
ANR	2016066	DeclStmt									
ANR	2016067	Decl							size_t	size_t	ret_len
ANR	2016068	DeclStmt									
ANR	2016069	Decl							long	long	opt
ANR	2016070	DeclStmt									
ANR	2016071	Decl							const char	const char *	p
ANR	2016072	DeclStmt									
ANR	2016073	Decl							int	int	idx
ANR	2016074	DeclStmt									
ANR	2016075	Decl							const char	const char *	p
ANR	2016076	DeclStmt									
ANR	2016077	Decl							int	int	idx
ANR	2016078	DeclStmt									
ANR	2016079	Decl							zval	zval * *	element
ANR	2016080	Function	php_stristr	1643:0:39712:39884							
ANR	2016081	FunctionDef	"php_stristr (char * s , char * t , size_t s_len , size_t t_len)"		2016080	0					
ANR	2016082	CompoundStatement		1644:0:39783:39884	2016080	0					
ANR	2016083	ExpressionStatement	"php_strtolower ( s , s_len )"	1645:1:39786:39810	2016080	0	True				
ANR	2016084	CallExpression	"php_strtolower ( s , s_len )"		2016080	0					
ANR	2016085	Callee	php_strtolower		2016080	0					
ANR	2016086	Identifier	php_strtolower		2016080	0					
ANR	2016087	ArgumentList	s		2016080	1					
ANR	2016088	Argument	s		2016080	0					
ANR	2016089	Identifier	s		2016080	0					
ANR	2016090	Argument	s_len		2016080	1					
ANR	2016091	Identifier	s_len		2016080	0					
ANR	2016092	ExpressionStatement	"php_strtolower ( t , t_len )"	1646:1:39813:39837	2016080	1	True				
ANR	2016093	CallExpression	"php_strtolower ( t , t_len )"		2016080	0					
ANR	2016094	Callee	php_strtolower		2016080	0					
ANR	2016095	Identifier	php_strtolower		2016080	0					
ANR	2016096	ArgumentList	t		2016080	1					
ANR	2016097	Argument	t		2016080	0					
ANR	2016098	Identifier	t		2016080	0					
ANR	2016099	Argument	t_len		2016080	1					
ANR	2016100	Identifier	t_len		2016080	0					
ANR	2016101	ReturnStatement	"return php_memnstr ( s , t , t_len , s + s_len ) ;"	1647:1:39840:39882	2016080	2	True				
ANR	2016102	CallExpression	"php_memnstr ( s , t , t_len , s + s_len )"		2016080	0					
ANR	2016103	Callee	php_memnstr		2016080	0					
ANR	2016104	Identifier	php_memnstr		2016080	0					
ANR	2016105	ArgumentList	s		2016080	1					
ANR	2016106	Argument	s		2016080	0					
ANR	2016107	Identifier	s		2016080	0					
ANR	2016108	Argument	t		2016080	1					
ANR	2016109	Identifier	t		2016080	0					
ANR	2016110	Argument	t_len		2016080	2					
ANR	2016111	Identifier	t_len		2016080	0					
ANR	2016112	Argument	s + s_len		2016080	3					
ANR	2016113	AdditiveExpression	s + s_len		2016080	0		+			
ANR	2016114	Identifier	s		2016080	0					
ANR	2016115	Identifier	s_len		2016080	1					
ANR	2016116	ReturnType	PHPAPI char *		2016080	1					
ANR	2016117	Identifier	php_stristr		2016080	2					
ANR	2016118	ParameterList	"char * s , char * t , size_t s_len , size_t t_len"		2016080	3					
ANR	2016119	Parameter	char * s	1643:25:39737:39743	2016080	0	True				
ANR	2016120	ParameterType	char *		2016080	0					
ANR	2016121	Identifier	s		2016080	1					
ANR	2016122	Parameter	char * t	1643:34:39746:39752	2016080	1	True				
ANR	2016123	ParameterType	char *		2016080	0					
ANR	2016124	Identifier	t		2016080	1					
ANR	2016125	Parameter	size_t s_len	1643:43:39755:39766	2016080	2	True				
ANR	2016126	ParameterType	size_t		2016080	0					
ANR	2016127	Identifier	s_len		2016080	1					
ANR	2016128	Parameter	size_t t_len	1643:57:39769:39780	2016080	3	True				
ANR	2016129	ParameterType	size_t		2016080	0					
ANR	2016130	Identifier	t_len		2016080	1					
ANR	2016131	CFGEntryNode	ENTRY		2016080		True				
ANR	2016132	CFGExitNode	EXIT		2016080		True				
ANR	2016133	Symbol	s		2016080						
ANR	2016134	Symbol	t		2016080						
ANR	2016135	Symbol	t_len		2016080						
ANR	2016136	Symbol	s_len		2016080						
ANR	2016137	Symbol	php_memnstr		2016080						
ANR	2016138	Function	php_strspn	1653:0:39919:40192							
ANR	2016139	FunctionDef	"php_strspn (char * s1 , char * s2 , char * s1_end , char * s2_end)"		2016138	0					
ANR	2016140	CompoundStatement		1654:0:39992:40192	2016138	0					
ANR	2016141	Statement	register	1655:1:39995:40002	2016138	0	True				
ANR	2016142	IdentifierDeclStatement	"const char * p = s1 , * spanp ;"	1655:10:40004:40030	2016138	1	True				
ANR	2016143	IdentifierDecl	* p = s1		2016138	0					
ANR	2016144	IdentifierDeclType	const char *		2016138	0					
ANR	2016145	Identifier	p		2016138	1					
ANR	2016146	AssignmentExpression	* p = s1		2016138	2		=			
ANR	2016147	Identifier	s1		2016138	0					
ANR	2016148	Identifier	s1		2016138	1					
ANR	2016149	IdentifierDecl	* spanp		2016138	1					
ANR	2016150	IdentifierDeclType	const char *		2016138	0					
ANR	2016151	Identifier	spanp		2016138	1					
ANR	2016152	Statement	register	1656:1:40033:40040	2016138	2	True				
ANR	2016153	IdentifierDeclStatement	char c = * p ;	1656:10:40042:40053	2016138	3	True				
ANR	2016154	IdentifierDecl	c = * p		2016138	0					
ANR	2016155	IdentifierDeclType	char		2016138	0					
ANR	2016156	Identifier	c		2016138	1					
ANR	2016157	AssignmentExpression	c = * p		2016138	2		=			
ANR	2016158	Identifier	c		2016138	0					
ANR	2016159	UnaryOperationExpression	* p		2016138	1					
ANR	2016160	UnaryOperator	*		2016138	0					
ANR	2016161	Identifier	p		2016138	1					
ANR	2016162	Label	cont :	1658:0:40056:40060	2016138	4	True				
ANR	2016163	Identifier	cont		2016138	0					
ANR	2016164	ForStatement	for ( spanp = s2 ; p != s1_end && spanp != s2_end ; )		2016138	5					
ANR	2016165	ForInit	spanp = s2 ;	1659:6:40068:40078	2016138	0	True				
ANR	2016166	AssignmentExpression	spanp = s2		2016138	0		=			
ANR	2016167	Identifier	spanp		2016138	0					
ANR	2016168	Identifier	s2		2016138	1					
ANR	2016169	Condition	p != s1_end && spanp != s2_end	1659:18:40080:40109	2016138	1	True				
ANR	2016170	AndExpression	p != s1_end && spanp != s2_end		2016138	0		&&			
ANR	2016171	EqualityExpression	p != s1_end		2016138	0		!=			
ANR	2016172	Identifier	p		2016138	0					
ANR	2016173	Identifier	s1_end		2016138	1					
ANR	2016174	EqualityExpression	spanp != s2_end		2016138	1		!=			
ANR	2016175	Identifier	spanp		2016138	0					
ANR	2016176	Identifier	s2_end		2016138	1					
ANR	2016177	CompoundStatement		6:51:120:120	2016138	2					
ANR	2016178	IfStatement	if ( * spanp ++ == c )		2016138	0					
ANR	2016179	Condition	* spanp ++ == c	1660:6:40121:40133	2016138	0	True				
ANR	2016180	EqualityExpression	* spanp ++ == c		2016138	0		==			
ANR	2016181	UnaryOperationExpression	* spanp ++		2016138	0					
ANR	2016182	UnaryOperator	*		2016138	0					
ANR	2016183	PostIncDecOperationExpression	spanp ++		2016138	1					
ANR	2016184	Identifier	spanp		2016138	0					
ANR	2016185	IncDec	++		2016138	1					
ANR	2016186	Identifier	c		2016138	1					
ANR	2016187	CompoundStatement		7:21:143:143	2016138	1					
ANR	2016188	ExpressionStatement	c = * ( ++ p )	1661:3:40141:40151	2016138	0	True				
ANR	2016189	AssignmentExpression	c = * ( ++ p )		2016138	0		=			
ANR	2016190	Identifier	c		2016138	0					
ANR	2016191	UnaryOperationExpression	* ( ++ p )		2016138	1					
ANR	2016192	UnaryOperator	*		2016138	0					
ANR	2016193	UnaryExpression	++ p		2016138	1					
ANR	2016194	IncDec	++		2016138	0					
ANR	2016195	Identifier	p		2016138	1					
ANR	2016196	GotoStatement	goto cont ;	1662:3:40156:40165	2016138	1	True				
ANR	2016197	Identifier	cont		2016138	0					
ANR	2016198	ReturnStatement	return ( p - s1 ) ;	1665:1:40175:40190	2016138	6	True				
ANR	2016199	AdditiveExpression	p - s1		2016138	0		-			
ANR	2016200	Identifier	p		2016138	0					
ANR	2016201	Identifier	s1		2016138	1					
ANR	2016202	ReturnType	PHPAPI size_t		2016138	1					
ANR	2016203	Identifier	php_strspn		2016138	2					
ANR	2016204	ParameterList	"char * s1 , char * s2 , char * s1_end , char * s2_end"		2016138	3					
ANR	2016205	Parameter	char * s1	1653:25:39944:39951	2016138	0	True				
ANR	2016206	ParameterType	char *		2016138	0					
ANR	2016207	Identifier	s1		2016138	1					
ANR	2016208	Parameter	char * s2	1653:35:39954:39961	2016138	1	True				
ANR	2016209	ParameterType	char *		2016138	0					
ANR	2016210	Identifier	s2		2016138	1					
ANR	2016211	Parameter	char * s1_end	1653:45:39964:39975	2016138	2	True				
ANR	2016212	ParameterType	char *		2016138	0					
ANR	2016213	Identifier	s1_end		2016138	1					
ANR	2016214	Parameter	char * s2_end	1653:59:39978:39989	2016138	3	True				
ANR	2016215	ParameterType	char *		2016138	0					
ANR	2016216	Identifier	s2_end		2016138	1					
ANR	2016217	CFGEntryNode	ENTRY		2016138		True				
ANR	2016218	CFGExitNode	EXIT		2016138		True				
ANR	2016219	Symbol	p		2016138						
ANR	2016220	Symbol	s2_end		2016138						
ANR	2016221	Symbol	c		2016138						
ANR	2016222	Symbol	* spanp ++		2016138						
ANR	2016223	Symbol	s1_end		2016138						
ANR	2016224	Symbol	* ( ++ p )		2016138						
ANR	2016225	Symbol	* p		2016138						
ANR	2016226	Symbol	s1		2016138						
ANR	2016227	Symbol	spanp		2016138						
ANR	2016228	Symbol	s2		2016138						
ANR	2016229	Function	php_strcspn	1671:0:40228:40531							
ANR	2016230	FunctionDef	"php_strcspn (char * s1 , char * s2 , char * s1_end , char * s2_end)"		2016229	0					
ANR	2016231	CompoundStatement		1672:0:40302:40531	2016229	0					
ANR	2016232	Statement	register	1673:1:40305:40312	2016229	0	True				
ANR	2016233	IdentifierDeclStatement	"const char * p , * spanp ;"	1673:10:40314:40335	2016229	1	True				
ANR	2016234	IdentifierDecl	* p		2016229	0					
ANR	2016235	IdentifierDeclType	const char *		2016229	0					
ANR	2016236	Identifier	p		2016229	1					
ANR	2016237	IdentifierDecl	* spanp		2016229	1					
ANR	2016238	IdentifierDeclType	const char *		2016229	0					
ANR	2016239	Identifier	spanp		2016229	1					
ANR	2016240	Statement	register	1674:1:40338:40345	2016229	2	True				
ANR	2016241	IdentifierDeclStatement	char c = * s1 ;	1674:10:40347:40359	2016229	3	True				
ANR	2016242	IdentifierDecl	c = * s1		2016229	0					
ANR	2016243	IdentifierDeclType	char		2016229	0					
ANR	2016244	Identifier	c		2016229	1					
ANR	2016245	AssignmentExpression	c = * s1		2016229	2		=			
ANR	2016246	Identifier	c		2016229	0					
ANR	2016247	UnaryOperationExpression	* s1		2016229	1					
ANR	2016248	UnaryOperator	*		2016229	0					
ANR	2016249	Identifier	s1		2016229	1					
ANR	2016250	ForStatement	for ( p = s1 ; ; )		2016229	4					
ANR	2016251	ForInit	p = s1 ;	1676:6:40368:40374	2016229	0	True				
ANR	2016252	AssignmentExpression	p = s1		2016229	0		=			
ANR	2016253	Identifier	p		2016229	0					
ANR	2016254	Identifier	s1		2016229	1					
ANR	2016255	CompoundStatement		5:16:75:75	2016229	1					
ANR	2016256	ExpressionStatement	spanp = s2	1677:2:40382:40392	2016229	0	True				
ANR	2016257	AssignmentExpression	spanp = s2		2016229	0		=			
ANR	2016258	Identifier	spanp		2016229	0					
ANR	2016259	Identifier	s2		2016229	1					
ANR	2016260	DoStatement	do		2016229	1					
ANR	2016261	CompoundStatement		7:5:96:96	2016229	0					
ANR	2016262	IfStatement	if ( * spanp == c || p == s1_end )		2016229	0					
ANR	2016263	Condition	* spanp == c || p == s1_end	1679:7:40408:40433	2016229	0	True				
ANR	2016264	OrExpression	* spanp == c || p == s1_end		2016229	0		||			
ANR	2016265	EqualityExpression	* spanp == c		2016229	0		==			
ANR	2016266	UnaryOperationExpression	* spanp		2016229	0					
ANR	2016267	UnaryOperator	*		2016229	0					
ANR	2016268	Identifier	spanp		2016229	1					
ANR	2016269	Identifier	c		2016229	1					
ANR	2016270	EqualityExpression	p == s1_end		2016229	1		==			
ANR	2016271	Identifier	p		2016229	0					
ANR	2016272	Identifier	s1_end		2016229	1					
ANR	2016273	CompoundStatement		8:35:133:133	2016229	1					
ANR	2016274	ReturnStatement	return p - s1 ;	1680:4:40442:40455	2016229	0	True				
ANR	2016275	AdditiveExpression	p - s1		2016229	0		-			
ANR	2016276	Identifier	p		2016229	0					
ANR	2016277	Identifier	s1		2016229	1					
ANR	2016278	Condition	spanp ++ < ( s2_end - 1 )	1682:11:40473:40494	2016229	1	True				
ANR	2016279	RelationalExpression	spanp ++ < ( s2_end - 1 )		2016229	0		<			
ANR	2016280	PostIncDecOperationExpression	spanp ++		2016229	0					
ANR	2016281	Identifier	spanp		2016229	0					
ANR	2016282	IncDec	++		2016229	1					
ANR	2016283	AdditiveExpression	s2_end - 1		2016229	1		-			
ANR	2016284	Identifier	s2_end		2016229	0					
ANR	2016285	PrimaryExpression	1		2016229	1					
ANR	2016286	ExpressionStatement	c = * ++ p	1683:2:40500:40508	2016229	2	True				
ANR	2016287	AssignmentExpression	c = * ++ p		2016229	0		=			
ANR	2016288	Identifier	c		2016229	0					
ANR	2016289	UnaryOperationExpression	* ++ p		2016229	1					
ANR	2016290	UnaryOperator	*		2016229	0					
ANR	2016291	UnaryExpression	++ p		2016229	1					
ANR	2016292	IncDec	++		2016229	0					
ANR	2016293	Identifier	p		2016229	1					
ANR	2016294	ReturnType	PHPAPI size_t		2016229	1					
ANR	2016295	Identifier	php_strcspn		2016229	2					
ANR	2016296	ParameterList	"char * s1 , char * s2 , char * s1_end , char * s2_end"		2016229	3					
ANR	2016297	Parameter	char * s1	1671:26:40254:40261	2016229	0	True				
ANR	2016298	ParameterType	char *		2016229	0					
ANR	2016299	Identifier	s1		2016229	1					
ANR	2016300	Parameter	char * s2	1671:36:40264:40271	2016229	1	True				
ANR	2016301	ParameterType	char *		2016229	0					
ANR	2016302	Identifier	s2		2016229	1					
ANR	2016303	Parameter	char * s1_end	1671:46:40274:40285	2016229	2	True				
ANR	2016304	ParameterType	char *		2016229	0					
ANR	2016305	Identifier	s1_end		2016229	1					
ANR	2016306	Parameter	char * s2_end	1671:60:40288:40299	2016229	3	True				
ANR	2016307	ParameterType	char *		2016229	0					
ANR	2016308	Identifier	s2_end		2016229	1					
ANR	2016309	CFGEntryNode	ENTRY		2016229		True				
ANR	2016310	CFGExitNode	EXIT		2016229		True				
ANR	2016311	InfiniteForNode	true		2016229		True				
ANR	2016312	Symbol	p		2016229						
ANR	2016313	Symbol	s2_end		2016229						
ANR	2016314	Symbol	c		2016229						
ANR	2016315	Symbol	* ++ p		2016229						
ANR	2016316	Symbol	s1_end		2016229						
ANR	2016317	Symbol	* s1		2016229						
ANR	2016318	Symbol	* spanp		2016229						
ANR	2016319	Symbol	* p		2016229						
ANR	2016320	Symbol	s1		2016229						
ANR	2016321	Symbol	spanp		2016229						
ANR	2016322	Symbol	s2		2016229						
ANR	2016323	DeclStmt									
ANR	2016324	Decl							zval	zval	holder
ANR	2016325	DeclStmt									
ANR	2016326	Decl							zval	zval *	needle
ANR	2016327	DeclStmt									
ANR	2016328	Decl							char	char *	haystack
ANR	2016329	DeclStmt									
ANR	2016330	Decl							int	int	haystack_len
ANR	2016331	DeclStmt									
ANR	2016332	Decl							char	char *	found
ANR	2016333	DeclStmt									
ANR	2016334	Decl							int	int	found_offset
ANR	2016335	DeclStmt									
ANR	2016336	Decl							char	char *	haystack_dup
ANR	2016337	DeclStmt									
ANR	2016338	Decl							char	char [ 2 ]	needle_char
ANR	2016339	DeclStmt									
ANR	2016340	Decl							zend_bool	zend_bool	part
ANR	2016341	DeclStmt									
ANR	2016342	Decl							char	char *	orig_needle
ANR	2016343	DeclStmt									
ANR	2016344	Decl							zval	zval *	needle
ANR	2016345	DeclStmt									
ANR	2016346	Decl							char	char *	haystack
ANR	2016347	DeclStmt									
ANR	2016348	Decl							int	int	haystack_len
ANR	2016349	DeclStmt									
ANR	2016350	Decl							char	char *	found
ANR	2016351	DeclStmt									
ANR	2016352	Decl							char	char [ 2 ]	needle_char
ANR	2016353	DeclStmt									
ANR	2016354	Decl							long	long	found_offset
ANR	2016355	DeclStmt									
ANR	2016356	Decl							zend_bool	zend_bool	part
ANR	2016357	DeclStmt									
ANR	2016358	Decl							zval	zval *	needle
ANR	2016359	DeclStmt									
ANR	2016360	Decl							char	char *	haystack
ANR	2016361	DeclStmt									
ANR	2016362	Decl							char	char *	found
ANR	2016363	DeclStmt									
ANR	2016364	Decl							char	char [ 2 ]	needle_char
ANR	2016365	DeclStmt									
ANR	2016366	Decl							long	long	offset
ANR	2016367	DeclStmt									
ANR	2016368	Decl							int	int	haystack_len
ANR	2016369	DeclStmt									
ANR	2016370	Decl							char	char *	found
ANR	2016371	DeclStmt									
ANR	2016372	Decl							char	char *	haystack
ANR	2016373	DeclStmt									
ANR	2016374	Decl							int	int	haystack_len
ANR	2016375	DeclStmt									
ANR	2016376	Decl							long	long	offset
ANR	2016377	DeclStmt									
ANR	2016378	Decl							char	char *	needle_dup
ANR	2016379	Decl							char	char *	haystack_dup
ANR	2016380	DeclStmt									
ANR	2016381	Decl							char	char [ 2 ]	needle_char
ANR	2016382	DeclStmt									
ANR	2016383	Decl							zval	zval *	needle
ANR	2016384	DeclStmt									
ANR	2016385	Decl							zval	zval *	zneedle
ANR	2016386	DeclStmt									
ANR	2016387	Decl							char	char *	needle
ANR	2016388	Decl							char	char *	haystack
ANR	2016389	DeclStmt									
ANR	2016390	Decl							int	int	needle_len
ANR	2016391	Decl							int	int	haystack_len
ANR	2016392	DeclStmt									
ANR	2016393	Decl							long	long	offset
ANR	2016394	DeclStmt									
ANR	2016395	Decl							char	char *	p
ANR	2016396	Decl							char	char *	e
ANR	2016397	Decl							char	char [ 2 ]	ord_needle
ANR	2016398	DeclStmt									
ANR	2016399	Decl							zval	zval *	zneedle
ANR	2016400	DeclStmt									
ANR	2016401	Decl							char	char *	needle
ANR	2016402	Decl							char	char *	haystack
ANR	2016403	DeclStmt									
ANR	2016404	Decl							int	int	needle_len
ANR	2016405	Decl							int	int	haystack_len
ANR	2016406	DeclStmt									
ANR	2016407	Decl							long	long	offset
ANR	2016408	DeclStmt									
ANR	2016409	Decl							char	char *	p
ANR	2016410	Decl							char	char *	e
ANR	2016411	Decl							char	char [ 2 ]	ord_needle
ANR	2016412	DeclStmt									
ANR	2016413	Decl							char	char *	needle_dup
ANR	2016414	Decl							char	char *	haystack_dup
ANR	2016415	DeclStmt									
ANR	2016416	Decl							zval	zval *	needle
ANR	2016417	DeclStmt									
ANR	2016418	Decl							char	char *	haystack
ANR	2016419	DeclStmt									
ANR	2016420	Decl							const char	const char *	found
ANR	2016421	DeclStmt									
ANR	2016422	Decl							long	long	found_offset
ANR	2016423	DeclStmt									
ANR	2016424	Decl							int	int	haystack_len
ANR	2016425	DeclStmt									
ANR	2016426	Decl							char	char	needle_chr
ANR	2016427	Function	php_chunk_split	2151:0:52014:52933							
ANR	2016428	FunctionDef	"php_chunk_split (char * src , int srclen , char * end , int endlen , int chunklen , int * destlen)"		2016427	0					
ANR	2016429	CompoundStatement		2152:0:52117:52933	2016427	0					
ANR	2016430	IdentifierDeclStatement	char * dest ;	2153:1:52120:52130	2016427	0	True				
ANR	2016431	IdentifierDecl	* dest		2016427	0					
ANR	2016432	IdentifierDeclType	char *		2016427	0					
ANR	2016433	Identifier	dest		2016427	1					
ANR	2016434	IdentifierDeclStatement	"char * p , * q ;"	2154:1:52133:52144	2016427	1	True				
ANR	2016435	IdentifierDecl	* p		2016427	0					
ANR	2016436	IdentifierDeclType	char *		2016427	0					
ANR	2016437	Identifier	p		2016427	1					
ANR	2016438	IdentifierDecl	* q		2016427	1					
ANR	2016439	IdentifierDeclType	char *		2016427	0					
ANR	2016440	Identifier	q		2016427	1					
ANR	2016441	IdentifierDeclStatement	int chunks ;	2155:1:52147:52157	2016427	2	True				
ANR	2016442	IdentifierDecl	chunks		2016427	0					
ANR	2016443	IdentifierDeclType	int		2016427	0					
ANR	2016444	Identifier	chunks		2016427	1					
ANR	2016445	IdentifierDeclStatement	int restlen ;	2156:1:52183:52194	2016427	3	True				
ANR	2016446	IdentifierDecl	restlen		2016427	0					
ANR	2016447	IdentifierDeclType	int		2016427	0					
ANR	2016448	Identifier	restlen		2016427	1					
ANR	2016449	IdentifierDeclStatement	int out_len ;	2157:1:52197:52208	2016427	4	True				
ANR	2016450	IdentifierDecl	out_len		2016427	0					
ANR	2016451	IdentifierDeclType	int		2016427	0					
ANR	2016452	Identifier	out_len		2016427	1					
ANR	2016453	ExpressionStatement	chunks = srclen / chunklen	2159:1:52212:52238	2016427	5	True				
ANR	2016454	AssignmentExpression	chunks = srclen / chunklen		2016427	0		=			
ANR	2016455	Identifier	chunks		2016427	0					
ANR	2016456	MultiplicativeExpression	srclen / chunklen		2016427	1		/			
ANR	2016457	Identifier	srclen		2016427	0					
ANR	2016458	Identifier	chunklen		2016427	1					
ANR	2016459	ExpressionStatement	restlen = srclen - chunks * chunklen	2160:1:52241:52277	2016427	6	True				
ANR	2016460	AssignmentExpression	restlen = srclen - chunks * chunklen		2016427	0		=			
ANR	2016461	Identifier	restlen		2016427	0					
ANR	2016462	AdditiveExpression	srclen - chunks * chunklen		2016427	1		-			
ANR	2016463	Identifier	srclen		2016427	0					
ANR	2016464	MultiplicativeExpression	chunks * chunklen		2016427	1		*			
ANR	2016465	Identifier	chunks		2016427	0					
ANR	2016466	Identifier	chunklen		2016427	1					
ANR	2016467	IfStatement	if ( chunks > INT_MAX - 1 )		2016427	7					
ANR	2016468	Condition	chunks > INT_MAX - 1	2162:4:52308:52327	2016427	0	True				
ANR	2016469	RelationalExpression	chunks > INT_MAX - 1		2016427	0		>			
ANR	2016470	Identifier	chunks		2016427	0					
ANR	2016471	AdditiveExpression	INT_MAX - 1		2016427	1		-			
ANR	2016472	Identifier	INT_MAX		2016427	0					
ANR	2016473	PrimaryExpression	1		2016427	1					
ANR	2016474	CompoundStatement		11:26:212:212	2016427	1					
ANR	2016475	ReturnStatement	return NULL ;	2163:2:52334:52345	2016427	0	True				
ANR	2016476	Identifier	NULL		2016427	0					
ANR	2016477	ExpressionStatement	out_len = chunks + 1	2165:1:52351:52371	2016427	8	True				
ANR	2016478	AssignmentExpression	out_len = chunks + 1		2016427	0		=			
ANR	2016479	Identifier	out_len		2016427	0					
ANR	2016480	AdditiveExpression	chunks + 1		2016427	1		+			
ANR	2016481	Identifier	chunks		2016427	0					
ANR	2016482	PrimaryExpression	1		2016427	1					
ANR	2016483	IfStatement	if ( endlen != 0 && out_len > INT_MAX / endlen )		2016427	9					
ANR	2016484	Condition	endlen != 0 && out_len > INT_MAX / endlen	2166:4:52377:52414	2016427	0	True				
ANR	2016485	AndExpression	endlen != 0 && out_len > INT_MAX / endlen		2016427	0		&&			
ANR	2016486	EqualityExpression	endlen != 0		2016427	0		!=			
ANR	2016487	Identifier	endlen		2016427	0					
ANR	2016488	PrimaryExpression	0		2016427	1					
ANR	2016489	RelationalExpression	out_len > INT_MAX / endlen		2016427	1		>			
ANR	2016490	Identifier	out_len		2016427	0					
ANR	2016491	MultiplicativeExpression	INT_MAX / endlen		2016427	1		/			
ANR	2016492	Identifier	INT_MAX		2016427	0					
ANR	2016493	Identifier	endlen		2016427	1					
ANR	2016494	CompoundStatement		15:44:299:299	2016427	1					
ANR	2016495	ReturnStatement	return NULL ;	2167:2:52421:52432	2016427	0	True				
ANR	2016496	Identifier	NULL		2016427	0					
ANR	2016497	ExpressionStatement	out_len *= endlen	2169:1:52438:52455	2016427	10	True				
ANR	2016498	AssignmentExpression	out_len *= endlen		2016427	0		*=			
ANR	2016499	Identifier	out_len		2016427	0					
ANR	2016500	Identifier	endlen		2016427	1					
ANR	2016501	IfStatement	if ( out_len > INT_MAX - srclen - 1 )		2016427	11					
ANR	2016502	Condition	out_len > INT_MAX - srclen - 1	2170:4:52461:52490	2016427	0	True				
ANR	2016503	RelationalExpression	out_len > INT_MAX - srclen - 1		2016427	0		>			
ANR	2016504	Identifier	out_len		2016427	0					
ANR	2016505	AdditiveExpression	INT_MAX - srclen - 1		2016427	1		-			
ANR	2016506	Identifier	INT_MAX		2016427	0					
ANR	2016507	AdditiveExpression	srclen - 1		2016427	1		-			
ANR	2016508	Identifier	srclen		2016427	0					
ANR	2016509	PrimaryExpression	1		2016427	1					
ANR	2016510	CompoundStatement		19:36:375:375	2016427	1					
ANR	2016511	ReturnStatement	return NULL ;	2171:2:52497:52508	2016427	0	True				
ANR	2016512	Identifier	NULL		2016427	0					
ANR	2016513	ExpressionStatement	out_len += srclen + 1	2173:1:52514:52535	2016427	12	True				
ANR	2016514	AssignmentExpression	out_len += srclen + 1		2016427	0		+=			
ANR	2016515	Identifier	out_len		2016427	0					
ANR	2016516	AdditiveExpression	srclen + 1		2016427	1		+			
ANR	2016517	Identifier	srclen		2016427	0					
ANR	2016518	PrimaryExpression	1		2016427	1					
ANR	2016519	ExpressionStatement	"dest = safe_emalloc ( ( int ) out_len , sizeof ( char ) , 0 )"	2175:1:52539:52589	2016427	13	True				
ANR	2016520	AssignmentExpression	"dest = safe_emalloc ( ( int ) out_len , sizeof ( char ) , 0 )"		2016427	0		=			
ANR	2016521	Identifier	dest		2016427	0					
ANR	2016522	CallExpression	"safe_emalloc ( ( int ) out_len , sizeof ( char ) , 0 )"		2016427	1					
ANR	2016523	Callee	safe_emalloc		2016427	0					
ANR	2016524	Identifier	safe_emalloc		2016427	0					
ANR	2016525	ArgumentList	( int ) out_len		2016427	1					
ANR	2016526	Argument	( int ) out_len		2016427	0					
ANR	2016527	CastExpression	( int ) out_len		2016427	0					
ANR	2016528	CastTarget	int		2016427	0					
ANR	2016529	Identifier	out_len		2016427	1					
ANR	2016530	Argument	sizeof ( char )		2016427	1					
ANR	2016531	SizeofExpression	sizeof ( char )		2016427	0					
ANR	2016532	Sizeof	sizeof		2016427	0					
ANR	2016533	SizeofOperand	char		2016427	1					
ANR	2016534	Argument	0		2016427	2					
ANR	2016535	PrimaryExpression	0		2016427	0					
ANR	2016536	ForStatement	"for ( p = src , q = dest ; p < ( src + srclen - chunklen + 1 ) ; )"		2016427	14					
ANR	2016537	ForInit	"p = src , q = dest ;"	2177:6:52598:52615	2016427	0	True				
ANR	2016538	Expression	"p = src , q = dest"		2016427	0					
ANR	2016539	AssignmentExpression	p = src		2016427	0		=			
ANR	2016540	Identifier	p		2016427	0					
ANR	2016541	Identifier	src		2016427	1					
ANR	2016542	AssignmentExpression	q = dest		2016427	1		=			
ANR	2016543	Identifier	q		2016427	0					
ANR	2016544	Identifier	dest		2016427	1					
ANR	2016545	Condition	p < ( src + srclen - chunklen + 1 )	2177:25:52617:52649	2016427	1	True				
ANR	2016546	RelationalExpression	p < ( src + srclen - chunklen + 1 )		2016427	0		<			
ANR	2016547	Identifier	p		2016427	0					
ANR	2016548	AdditiveExpression	src + srclen - chunklen + 1		2016427	1		+			
ANR	2016549	Identifier	src		2016427	0					
ANR	2016550	AdditiveExpression	srclen - chunklen + 1		2016427	1		-			
ANR	2016551	Identifier	srclen		2016427	0					
ANR	2016552	AdditiveExpression	chunklen + 1		2016427	1		+			
ANR	2016553	Identifier	chunklen		2016427	0					
ANR	2016554	PrimaryExpression	1		2016427	1					
ANR	2016555	CompoundStatement		26:62:536:536	2016427	2					
ANR	2016556	ExpressionStatement	"memcpy ( q , p , chunklen )"	2178:2:52658:52680	2016427	0	True				
ANR	2016557	CallExpression	"memcpy ( q , p , chunklen )"		2016427	0					
ANR	2016558	Callee	memcpy		2016427	0					
ANR	2016559	Identifier	memcpy		2016427	0					
ANR	2016560	ArgumentList	q		2016427	1					
ANR	2016561	Argument	q		2016427	0					
ANR	2016562	Identifier	q		2016427	0					
ANR	2016563	Argument	p		2016427	1					
ANR	2016564	Identifier	p		2016427	0					
ANR	2016565	Argument	chunklen		2016427	2					
ANR	2016566	Identifier	chunklen		2016427	0					
ANR	2016567	ExpressionStatement	q += chunklen	2179:2:52684:52697	2016427	1	True				
ANR	2016568	AssignmentExpression	q += chunklen		2016427	0		+=			
ANR	2016569	Identifier	q		2016427	0					
ANR	2016570	Identifier	chunklen		2016427	1					
ANR	2016571	ExpressionStatement	"memcpy ( q , end , endlen )"	2180:2:52701:52723	2016427	2	True				
ANR	2016572	CallExpression	"memcpy ( q , end , endlen )"		2016427	0					
ANR	2016573	Callee	memcpy		2016427	0					
ANR	2016574	Identifier	memcpy		2016427	0					
ANR	2016575	ArgumentList	q		2016427	1					
ANR	2016576	Argument	q		2016427	0					
ANR	2016577	Identifier	q		2016427	0					
ANR	2016578	Argument	end		2016427	1					
ANR	2016579	Identifier	end		2016427	0					
ANR	2016580	Argument	endlen		2016427	2					
ANR	2016581	Identifier	endlen		2016427	0					
ANR	2016582	ExpressionStatement	q += endlen	2181:2:52727:52738	2016427	3	True				
ANR	2016583	AssignmentExpression	q += endlen		2016427	0		+=			
ANR	2016584	Identifier	q		2016427	0					
ANR	2016585	Identifier	endlen		2016427	1					
ANR	2016586	ExpressionStatement	p += chunklen	2182:2:52742:52755	2016427	4	True				
ANR	2016587	AssignmentExpression	p += chunklen		2016427	0		+=			
ANR	2016588	Identifier	p		2016427	0					
ANR	2016589	Identifier	chunklen		2016427	1					
ANR	2016590	IfStatement	if ( restlen )		2016427	15					
ANR	2016591	Condition	restlen	2185:5:52766:52772	2016427	0	True				
ANR	2016592	Identifier	restlen		2016427	0					
ANR	2016593	CompoundStatement		34:14:657:657	2016427	1					
ANR	2016594	ExpressionStatement	"memcpy ( q , p , restlen )"	2186:2:52779:52800	2016427	0	True				
ANR	2016595	CallExpression	"memcpy ( q , p , restlen )"		2016427	0					
ANR	2016596	Callee	memcpy		2016427	0					
ANR	2016597	Identifier	memcpy		2016427	0					
ANR	2016598	ArgumentList	q		2016427	1					
ANR	2016599	Argument	q		2016427	0					
ANR	2016600	Identifier	q		2016427	0					
ANR	2016601	Argument	p		2016427	1					
ANR	2016602	Identifier	p		2016427	0					
ANR	2016603	Argument	restlen		2016427	2					
ANR	2016604	Identifier	restlen		2016427	0					
ANR	2016605	ExpressionStatement	q += restlen	2187:2:52804:52816	2016427	1	True				
ANR	2016606	AssignmentExpression	q += restlen		2016427	0		+=			
ANR	2016607	Identifier	q		2016427	0					
ANR	2016608	Identifier	restlen		2016427	1					
ANR	2016609	ExpressionStatement	"memcpy ( q , end , endlen )"	2188:2:52820:52842	2016427	2	True				
ANR	2016610	CallExpression	"memcpy ( q , end , endlen )"		2016427	0					
ANR	2016611	Callee	memcpy		2016427	0					
ANR	2016612	Identifier	memcpy		2016427	0					
ANR	2016613	ArgumentList	q		2016427	1					
ANR	2016614	Argument	q		2016427	0					
ANR	2016615	Identifier	q		2016427	0					
ANR	2016616	Argument	end		2016427	1					
ANR	2016617	Identifier	end		2016427	0					
ANR	2016618	Argument	endlen		2016427	2					
ANR	2016619	Identifier	endlen		2016427	0					
ANR	2016620	ExpressionStatement	q += endlen	2189:2:52846:52857	2016427	3	True				
ANR	2016621	AssignmentExpression	q += endlen		2016427	0		+=			
ANR	2016622	Identifier	q		2016427	0					
ANR	2016623	Identifier	endlen		2016427	1					
ANR	2016624	ExpressionStatement	* q = '\\0'	2192:1:52864:52873	2016427	16	True				
ANR	2016625	AssignmentExpression	* q = '\\0'		2016427	0		=			
ANR	2016626	UnaryOperationExpression	* q		2016427	0					
ANR	2016627	UnaryOperator	*		2016427	0					
ANR	2016628	Identifier	q		2016427	1					
ANR	2016629	PrimaryExpression	'\\0'		2016427	1					
ANR	2016630	IfStatement	if ( destlen )		2016427	17					
ANR	2016631	Condition	destlen	2193:5:52880:52886	2016427	0	True				
ANR	2016632	Identifier	destlen		2016427	0					
ANR	2016633	CompoundStatement		42:14:771:771	2016427	1					
ANR	2016634	ExpressionStatement	* destlen = q - dest	2194:2:52893:52912	2016427	0	True				
ANR	2016635	AssignmentExpression	* destlen = q - dest		2016427	0		=			
ANR	2016636	UnaryOperationExpression	* destlen		2016427	0					
ANR	2016637	UnaryOperator	*		2016427	0					
ANR	2016638	Identifier	destlen		2016427	1					
ANR	2016639	AdditiveExpression	q - dest		2016427	1		-			
ANR	2016640	Identifier	q		2016427	0					
ANR	2016641	Identifier	dest		2016427	1					
ANR	2016642	ReturnStatement	return ( dest ) ;	2197:1:52919:52931	2016427	18	True				
ANR	2016643	Identifier	dest		2016427	0					
ANR	2016644	ReturnType	static char *		2016427	1					
ANR	2016645	Identifier	php_chunk_split		2016427	2					
ANR	2016646	ParameterList	"char * src , int srclen , char * end , int endlen , int chunklen , int * destlen"		2016427	3					
ANR	2016647	Parameter	char * src	2151:29:52043:52051	2016427	0	True				
ANR	2016648	ParameterType	char *		2016427	0					
ANR	2016649	Identifier	src		2016427	1					
ANR	2016650	Parameter	int srclen	2151:40:52054:52063	2016427	1	True				
ANR	2016651	ParameterType	int		2016427	0					
ANR	2016652	Identifier	srclen		2016427	1					
ANR	2016653	Parameter	char * end	2151:52:52066:52074	2016427	2	True				
ANR	2016654	ParameterType	char *		2016427	0					
ANR	2016655	Identifier	end		2016427	1					
ANR	2016656	Parameter	int endlen	2151:63:52077:52086	2016427	3	True				
ANR	2016657	ParameterType	int		2016427	0					
ANR	2016658	Identifier	endlen		2016427	1					
ANR	2016659	Parameter	int chunklen	2151:75:52089:52100	2016427	4	True				
ANR	2016660	ParameterType	int		2016427	0					
ANR	2016661	Identifier	chunklen		2016427	1					
ANR	2016662	Parameter	int * destlen	2151:89:52103:52114	2016427	5	True				
ANR	2016663	ParameterType	int *		2016427	0					
ANR	2016664	Identifier	destlen		2016427	1					
ANR	2016665	CFGEntryNode	ENTRY		2016427		True				
ANR	2016666	CFGExitNode	EXIT		2016427		True				
ANR	2016667	Symbol	destlen		2016427						
ANR	2016668	Symbol	srclen		2016427						
ANR	2016669	Symbol	NULL		2016427						
ANR	2016670	Symbol	src		2016427						
ANR	2016671	Symbol	chunks		2016427						
ANR	2016672	Symbol	chunklen		2016427						
ANR	2016673	Symbol	restlen		2016427						
ANR	2016674	Symbol	endlen		2016427						
ANR	2016675	Symbol	dest		2016427						
ANR	2016676	Symbol	out_len		2016427						
ANR	2016677	Symbol	* destlen		2016427						
ANR	2016678	Symbol	p		2016427						
ANR	2016679	Symbol	q		2016427						
ANR	2016680	Symbol	INT_MAX		2016427						
ANR	2016681	Symbol	end		2016427						
ANR	2016682	Symbol	* q		2016427						
ANR	2016683	Symbol	safe_emalloc		2016427						
ANR	2016684	DeclStmt									
ANR	2016685	Decl							char	char *	str
ANR	2016686	DeclStmt									
ANR	2016687	Decl							char	char *	result
ANR	2016688	DeclStmt									
ANR	2016689	Decl							char	char *	end
ANR	2016690	DeclStmt									
ANR	2016691	Decl							int	int	endlen
ANR	2016692	DeclStmt									
ANR	2016693	Decl							long	long	chunklen
ANR	2016694	DeclStmt									
ANR	2016695	Decl							int	int	result_len
ANR	2016696	DeclStmt									
ANR	2016697	Decl							int	int	str_len
ANR	2016698	DeclStmt									
ANR	2016699	Decl							char	char *	str
ANR	2016700	DeclStmt									
ANR	2016701	Decl							long	long	l
ANR	2016702	Decl							long	long	f
ANR	2016703	DeclStmt									
ANR	2016704	Decl							int	int	str_len
ANR	2016705	DeclStmt									
ANR	2016706	Decl							int	int	argc
ANR	2016707	DeclStmt									
ANR	2016708	Decl							zval	zval * *	str
ANR	2016709	DeclStmt									
ANR	2016710	Decl							zval	zval * *	from
ANR	2016711	DeclStmt									
ANR	2016712	Decl							zval	zval * *	len
ANR	2016713	DeclStmt									
ANR	2016714	Decl							zval	zval * *	repl
ANR	2016715	DeclStmt									
ANR	2016716	Decl							char	char *	result
ANR	2016717	DeclStmt									
ANR	2016718	Decl							int	int	result_len
ANR	2016719	DeclStmt									
ANR	2016720	Decl							int	int	l
ANR	2016721	DeclStmt									
ANR	2016722	Decl							int	int	f
ANR	2016723	DeclStmt									
ANR	2016724	Decl							int	int	argc
ANR	2016725	DeclStmt									
ANR	2016726	Decl							HashPosition	HashPosition	pos_str
ANR	2016727	Decl							HashPosition	HashPosition	pos_from
ANR	2016728	Decl							HashPosition	HashPosition	pos_repl
ANR	2016729	Decl							HashPosition	HashPosition	pos_len
ANR	2016730	DeclStmt									
ANR	2016731	Decl							zval	zval * *	tmp_str
ANR	2016732	Decl							zval	zval * *	tmp_from
ANR	2016733	Decl							zval	zval * *	tmp_repl
ANR	2016734	Decl							zval	zval * *	tmp_len
ANR	2016735	DeclStmt									
ANR	2016736	Decl							int	int	repl_len
ANR	2016737	DeclStmt									
ANR	2016738	Decl							char	char *	str_index
ANR	2016739	DeclStmt									
ANR	2016740	Decl							uint	uint	str_index_len
ANR	2016741	DeclStmt									
ANR	2016742	Decl							ulong	ulong	num_index
ANR	2016743	DeclStmt									
ANR	2016744	Decl							zval	zval *	orig_str
ANR	2016745	DeclStmt									
ANR	2016746	Decl							zval	zval	dummy
ANR	2016747	DeclStmt									
ANR	2016748	Decl							ulong	ulong	refcount
ANR	2016749	DeclStmt									
ANR	2016750	Decl							int	int	was_ref
ANR	2016751	DeclStmt									
ANR	2016752	Decl							zval	zval	dummy
ANR	2016753	DeclStmt									
ANR	2016754	Decl							zval	zval	dummy
ANR	2016755	DeclStmt									
ANR	2016756	Decl							zval	zval *	repl_str
ANR	2016757	DeclStmt									
ANR	2016758	Decl							zval	zval	zrepl
ANR	2016759	DeclStmt									
ANR	2016760	Decl							char	char *	str
ANR	2016761	Decl							char	char *	old
ANR	2016762	DeclStmt									
ANR	2016763	Decl							char	char *	old_end
ANR	2016764	DeclStmt									
ANR	2016765	Decl							char	char *	p
ANR	2016766	Decl							char	char *	q
ANR	2016767	DeclStmt									
ANR	2016768	Decl							char	char	c
ANR	2016769	DeclStmt									
ANR	2016770	Decl							int	int	old_len
ANR	2016771	DeclStmt									
ANR	2016772	Decl							size_t	size_t	new_len
ANR	2016773	DeclStmt									
ANR	2016774	Decl							char	char *	str
ANR	2016775	DeclStmt									
ANR	2016776	Decl							int	int	str_len
ANR	2016777	DeclStmt									
ANR	2016778	Decl							long	long	c
ANR	2016779	DeclStmt									
ANR	2016780	Decl							char	char [ 2 ]	temp
ANR	2016781	Function	php_ucfirst	2703:0:65166:65267							
ANR	2016782	FunctionDef	php_ucfirst (char * str)		2016781	0					
ANR	2016783	CompoundStatement		2704:0:65201:65267	2016781	0					
ANR	2016784	Statement	register	2705:1:65204:65211	2016781	0	True				
ANR	2016785	IdentifierDeclStatement	char * r ;	2705:10:65213:65220	2016781	1	True				
ANR	2016786	IdentifierDecl	* r		2016781	0					
ANR	2016787	IdentifierDeclType	char *		2016781	0					
ANR	2016788	Identifier	r		2016781	1					
ANR	2016789	ExpressionStatement	r = str	2706:1:65223:65230	2016781	2	True				
ANR	2016790	AssignmentExpression	r = str		2016781	0		=			
ANR	2016791	Identifier	r		2016781	0					
ANR	2016792	Identifier	str		2016781	1					
ANR	2016793	ExpressionStatement	* r = toupper ( ( unsigned char ) * r )	2707:1:65233:65265	2016781	3	True				
ANR	2016794	AssignmentExpression	* r = toupper ( ( unsigned char ) * r )		2016781	0		=			
ANR	2016795	UnaryOperationExpression	* r		2016781	0					
ANR	2016796	UnaryOperator	*		2016781	0					
ANR	2016797	Identifier	r		2016781	1					
ANR	2016798	CallExpression	toupper ( ( unsigned char ) * r )		2016781	1					
ANR	2016799	Callee	toupper		2016781	0					
ANR	2016800	Identifier	toupper		2016781	0					
ANR	2016801	ArgumentList	( unsigned char ) * r		2016781	1					
ANR	2016802	Argument	( unsigned char ) * r		2016781	0					
ANR	2016803	CastExpression	( unsigned char ) * r		2016781	0					
ANR	2016804	CastTarget	unsigned char		2016781	0					
ANR	2016805	UnaryOperationExpression	* r		2016781	1					
ANR	2016806	UnaryOperator	*		2016781	0					
ANR	2016807	Identifier	r		2016781	1					
ANR	2016808	ReturnType	static void		2016781	1					
ANR	2016809	Identifier	php_ucfirst		2016781	2					
ANR	2016810	ParameterList	char * str		2016781	3					
ANR	2016811	Parameter	char * str	2703:24:65190:65198	2016781	0	True				
ANR	2016812	ParameterType	char *		2016781	0					
ANR	2016813	Identifier	str		2016781	1					
ANR	2016814	CFGEntryNode	ENTRY		2016781		True				
ANR	2016815	CFGExitNode	EXIT		2016781		True				
ANR	2016816	Symbol	str		2016781						
ANR	2016817	Symbol	r		2016781						
ANR	2016818	Symbol	toupper		2016781						
ANR	2016819	Symbol	* r		2016781						
ANR	2016820	DeclStmt									
ANR	2016821	Decl							char	char *	str
ANR	2016822	DeclStmt									
ANR	2016823	Decl							int	int	str_len
ANR	2016824	Function	php_lcfirst	2733:0:65743:65844							
ANR	2016825	FunctionDef	php_lcfirst (char * str)		2016824	0					
ANR	2016826	CompoundStatement		2734:0:65778:65844	2016824	0					
ANR	2016827	Statement	register	2735:1:65781:65788	2016824	0	True				
ANR	2016828	IdentifierDeclStatement	char * r ;	2735:10:65790:65797	2016824	1	True				
ANR	2016829	IdentifierDecl	* r		2016824	0					
ANR	2016830	IdentifierDeclType	char *		2016824	0					
ANR	2016831	Identifier	r		2016824	1					
ANR	2016832	ExpressionStatement	r = str	2736:1:65800:65807	2016824	2	True				
ANR	2016833	AssignmentExpression	r = str		2016824	0		=			
ANR	2016834	Identifier	r		2016824	0					
ANR	2016835	Identifier	str		2016824	1					
ANR	2016836	ExpressionStatement	* r = tolower ( ( unsigned char ) * r )	2737:1:65810:65842	2016824	3	True				
ANR	2016837	AssignmentExpression	* r = tolower ( ( unsigned char ) * r )		2016824	0		=			
ANR	2016838	UnaryOperationExpression	* r		2016824	0					
ANR	2016839	UnaryOperator	*		2016824	0					
ANR	2016840	Identifier	r		2016824	1					
ANR	2016841	CallExpression	tolower ( ( unsigned char ) * r )		2016824	1					
ANR	2016842	Callee	tolower		2016824	0					
ANR	2016843	Identifier	tolower		2016824	0					
ANR	2016844	ArgumentList	( unsigned char ) * r		2016824	1					
ANR	2016845	Argument	( unsigned char ) * r		2016824	0					
ANR	2016846	CastExpression	( unsigned char ) * r		2016824	0					
ANR	2016847	CastTarget	unsigned char		2016824	0					
ANR	2016848	UnaryOperationExpression	* r		2016824	1					
ANR	2016849	UnaryOperator	*		2016824	0					
ANR	2016850	Identifier	r		2016824	1					
ANR	2016851	ReturnType	static void		2016824	1					
ANR	2016852	Identifier	php_lcfirst		2016824	2					
ANR	2016853	ParameterList	char * str		2016824	3					
ANR	2016854	Parameter	char * str	2733:24:65767:65775	2016824	0	True				
ANR	2016855	ParameterType	char *		2016824	0					
ANR	2016856	Identifier	str		2016824	1					
ANR	2016857	CFGEntryNode	ENTRY		2016824		True				
ANR	2016858	CFGExitNode	EXIT		2016824		True				
ANR	2016859	Symbol	str		2016824						
ANR	2016860	Symbol	r		2016824						
ANR	2016861	Symbol	tolower		2016824						
ANR	2016862	Symbol	* r		2016824						
ANR	2016863	DeclStmt									
ANR	2016864	Decl							char	char *	str
ANR	2016865	DeclStmt									
ANR	2016866	Decl							int	int	str_len
ANR	2016867	DeclStmt									
ANR	2016868	Decl							char	char *	str
ANR	2016869	Decl							char	char *	delims
ANR	2016870	DeclStmt									
ANR	2016871	Decl							char	char *	r
ANR	2016872	Decl							char	char *	r_end
ANR	2016873	DeclStmt									
ANR	2016874	Decl							int	int	str_len
ANR	2016875	Decl							int	int	delims_len
ANR	2016876	DeclStmt									
ANR	2016877	Decl							char	char [ 256 ]	mask
ANR	2016878	Function	php_strtr	2794:0:67034:67419							
ANR	2016879	FunctionDef	"php_strtr (char * str , int len , char * str_from , char * str_to , int trlen)"		2016878	0					
ANR	2016880	CompoundStatement		2795:0:67118:67419	2016878	0					
ANR	2016881	IdentifierDeclStatement	int i ;	2796:1:67121:67126	2016878	0	True				
ANR	2016882	IdentifierDecl	i		2016878	0					
ANR	2016883	IdentifierDeclType	int		2016878	0					
ANR	2016884	Identifier	i		2016878	1					
ANR	2016885	IdentifierDeclStatement	unsigned char xlat [ 256 ] ;	2797:1:67129:67152	2016878	1	True				
ANR	2016886	IdentifierDecl	xlat [ 256 ]		2016878	0					
ANR	2016887	IdentifierDeclType	unsigned char [ 256 ]		2016878	0					
ANR	2016888	Identifier	xlat		2016878	1					
ANR	2016889	PrimaryExpression	256		2016878	2					
ANR	2016890	IfStatement	if ( ( trlen < 1 ) || ( len < 1 ) )		2016878	2					
ANR	2016891	Condition	( trlen < 1 ) || ( len < 1 )	2799:5:67160:67183	2016878	0	True				
ANR	2016892	OrExpression	( trlen < 1 ) || ( len < 1 )		2016878	0		||			
ANR	2016893	RelationalExpression	trlen < 1		2016878	0		<			
ANR	2016894	Identifier	trlen		2016878	0					
ANR	2016895	PrimaryExpression	1		2016878	1					
ANR	2016896	RelationalExpression	len < 1		2016878	1		<			
ANR	2016897	Identifier	len		2016878	0					
ANR	2016898	PrimaryExpression	1		2016878	1					
ANR	2016899	CompoundStatement		5:31:67:67	2016878	1					
ANR	2016900	ReturnStatement	return str ;	2800:2:67190:67200	2016878	0	True				
ANR	2016901	Identifier	str		2016878	0					
ANR	2016902	ForStatement	"for ( i = 0 ; i < 256 ; xlat [ i ] = i , i ++ )"		2016878	3					
ANR	2016903	ForInit	i = 0 ;	2803:6:67212:67217	2016878	0	True				
ANR	2016904	AssignmentExpression	i = 0		2016878	0		=			
ANR	2016905	Identifier	i		2016878	0					
ANR	2016906	PrimaryExpression	0		2016878	1					
ANR	2016907	Condition	i < 256	2803:13:67219:67225	2016878	1	True				
ANR	2016908	RelationalExpression	i < 256		2016878	0		<			
ANR	2016909	Identifier	i		2016878	0					
ANR	2016910	PrimaryExpression	256		2016878	1					
ANR	2016911	Expression	"xlat [ i ] = i , i ++"	2803:22:67228:67243	2016878	2	True				
ANR	2016912	AssignmentExpression	xlat [ i ] = i		2016878	0		=			
ANR	2016913	ArrayIndexing	xlat [ i ]		2016878	0					
ANR	2016914	Identifier	xlat		2016878	0					
ANR	2016915	Identifier	i		2016878	1					
ANR	2016916	Identifier	i		2016878	1					
ANR	2016917	PostIncDecOperationExpression	i ++		2016878	1					
ANR	2016918	Identifier	i		2016878	0					
ANR	2016919	IncDec	++		2016878	1					
ANR	2016920	ExpressionStatement		2803:39:67245:67245	2016878	3	True				
ANR	2016921	ForStatement	for ( i = 0 ; i < trlen ; i ++ )		2016878	4					
ANR	2016922	ForInit	i = 0 ;	2805:6:67254:67259	2016878	0	True				
ANR	2016923	AssignmentExpression	i = 0		2016878	0		=			
ANR	2016924	Identifier	i		2016878	0					
ANR	2016925	PrimaryExpression	0		2016878	1					
ANR	2016926	Condition	i < trlen	2805:13:67261:67269	2016878	1	True				
ANR	2016927	RelationalExpression	i < trlen		2016878	0		<			
ANR	2016928	Identifier	i		2016878	0					
ANR	2016929	Identifier	trlen		2016878	1					
ANR	2016930	PostIncDecOperationExpression	i ++	2805:24:67272:67274	2016878	2	True				
ANR	2016931	Identifier	i		2016878	0					
ANR	2016932	IncDec	++		2016878	1					
ANR	2016933	CompoundStatement		11:29:158:158	2016878	3					
ANR	2016934	ExpressionStatement	xlat [ ( unsigned char ) str_from [ i ] ] = str_to [ i ]	2806:2:67281:67326	2016878	0	True				
ANR	2016935	AssignmentExpression	xlat [ ( unsigned char ) str_from [ i ] ] = str_to [ i ]		2016878	0		=			
ANR	2016936	ArrayIndexing	xlat [ ( unsigned char ) str_from [ i ] ]		2016878	0					
ANR	2016937	Identifier	xlat		2016878	0					
ANR	2016938	CastExpression	( unsigned char ) str_from [ i ]		2016878	1					
ANR	2016939	CastTarget	unsigned char		2016878	0					
ANR	2016940	ArrayIndexing	str_from [ i ]		2016878	1					
ANR	2016941	Identifier	str_from		2016878	0					
ANR	2016942	Identifier	i		2016878	1					
ANR	2016943	ArrayIndexing	str_to [ i ]		2016878	1					
ANR	2016944	Identifier	str_to		2016878	0					
ANR	2016945	Identifier	i		2016878	1					
ANR	2016946	ForStatement	for ( i = 0 ; i < len ; i ++ )		2016878	5					
ANR	2016947	ForInit	i = 0 ;	2809:6:67338:67343	2016878	0	True				
ANR	2016948	AssignmentExpression	i = 0		2016878	0		=			
ANR	2016949	Identifier	i		2016878	0					
ANR	2016950	PrimaryExpression	0		2016878	1					
ANR	2016951	Condition	i < len	2809:13:67345:67351	2016878	1	True				
ANR	2016952	RelationalExpression	i < len		2016878	0		<			
ANR	2016953	Identifier	i		2016878	0					
ANR	2016954	Identifier	len		2016878	1					
ANR	2016955	PostIncDecOperationExpression	i ++	2809:22:67354:67356	2016878	2	True				
ANR	2016956	Identifier	i		2016878	0					
ANR	2016957	IncDec	++		2016878	1					
ANR	2016958	CompoundStatement		15:27:240:240	2016878	3					
ANR	2016959	ExpressionStatement	str [ i ] = xlat [ ( unsigned char ) str [ i ] ]	2810:2:67363:67400	2016878	0	True				
ANR	2016960	AssignmentExpression	str [ i ] = xlat [ ( unsigned char ) str [ i ] ]		2016878	0		=			
ANR	2016961	ArrayIndexing	str [ i ]		2016878	0					
ANR	2016962	Identifier	str		2016878	0					
ANR	2016963	Identifier	i		2016878	1					
ANR	2016964	ArrayIndexing	xlat [ ( unsigned char ) str [ i ] ]		2016878	1					
ANR	2016965	Identifier	xlat		2016878	0					
ANR	2016966	CastExpression	( unsigned char ) str [ i ]		2016878	1					
ANR	2016967	CastTarget	unsigned char		2016878	0					
ANR	2016968	ArrayIndexing	str [ i ]		2016878	1					
ANR	2016969	Identifier	str		2016878	0					
ANR	2016970	Identifier	i		2016878	1					
ANR	2016971	ReturnStatement	return str ;	2813:1:67407:67417	2016878	6	True				
ANR	2016972	Identifier	str		2016878	0					
ANR	2016973	ReturnType	PHPAPI char *		2016878	1					
ANR	2016974	Identifier	php_strtr		2016878	2					
ANR	2016975	ParameterList	"char * str , int len , char * str_from , char * str_to , int trlen"		2016878	3					
ANR	2016976	Parameter	char * str	2794:23:67057:67065	2016878	0	True				
ANR	2016977	ParameterType	char *		2016878	0					
ANR	2016978	Identifier	str		2016878	1					
ANR	2016979	Parameter	int len	2794:34:67068:67074	2016878	1	True				
ANR	2016980	ParameterType	int		2016878	0					
ANR	2016981	Identifier	len		2016878	1					
ANR	2016982	Parameter	char * str_from	2794:43:67077:67090	2016878	2	True				
ANR	2016983	ParameterType	char *		2016878	0					
ANR	2016984	Identifier	str_from		2016878	1					
ANR	2016985	Parameter	char * str_to	2794:59:67093:67104	2016878	3	True				
ANR	2016986	ParameterType	char *		2016878	0					
ANR	2016987	Identifier	str_to		2016878	1					
ANR	2016988	Parameter	int trlen	2794:73:67107:67115	2016878	4	True				
ANR	2016989	ParameterType	int		2016878	0					
ANR	2016990	Identifier	trlen		2016878	1					
ANR	2016991	CFGEntryNode	ENTRY		2016878		True				
ANR	2016992	CFGExitNode	EXIT		2016878		True				
ANR	2016993	Symbol	* * i		2016878						
ANR	2016994	Symbol	* * str		2016878						
ANR	2016995	Symbol	* * str_from		2016878						
ANR	2016996	Symbol	i		2016878						
ANR	2016997	Symbol	* str_from		2016878						
ANR	2016998	Symbol	trlen		2016878						
ANR	2016999	Symbol	str		2016878						
ANR	2017000	Symbol	* str_to		2016878						
ANR	2017001	Symbol	* i		2016878						
ANR	2017002	Symbol	len		2016878						
ANR	2017003	Symbol	str_from		2016878						
ANR	2017004	Symbol	* xlat		2016878						
ANR	2017005	Symbol	* str		2016878						
ANR	2017006	Symbol	str_to		2016878						
ANR	2017007	Symbol	xlat		2016878						
ANR	2017008	DeclStmt									
ANR	2017009	Decl							size_t	size_t	STRLEN
ANR	2017010	DeclStmt									
ANR	2017011	Decl							uint16_t	uint16_t	HASH
ANR	2017012	ClassDef	<unnamed>	2820:8:67560:67622							
ANR	2017013	DeclStmt									
ANR	2017014	Decl							HASH	HASH	table_mask
ANR	2017015	DeclStmt									
ANR	2017016	Decl							STRLEN	STRLEN [ 1 ]	entries
ANR	2017017	DeclStmt									
ANR	2017018	Decl									SHIFT_TAB
ANR	2017019	ClassDef	<unnamed>	2824:8:67632:67691							
ANR	2017020	DeclStmt									
ANR	2017021	Decl							HASH	HASH	table_mask
ANR	2017022	DeclStmt									
ANR	2017023	Decl							int	int [ 1 ]	entries
ANR	2017024	DeclStmt									
ANR	2017025	Decl									HASH_TAB
ANR	2017026	ClassDef	<unnamed>	2828:8:67701:67743							
ANR	2017027	DeclStmt									
ANR	2017028	Decl							const char	const char *	s
ANR	2017029	DeclStmt									
ANR	2017030	Decl							STRLEN	STRLEN	l
ANR	2017031	DeclStmt									
ANR	2017032	Decl									STR
ANR	2017033	ClassDef	_pat_and_repl	2832:8:67753:67811							
ANR	2017034	DeclStmt									
ANR	2017035	Decl							STR	STR	pat
ANR	2017036	DeclStmt									
ANR	2017037	Decl							STR	STR	repl
ANR	2017038	DeclStmt									
ANR	2017039	Decl							_pat_and_repl	_pat_and_repl	PATNREPL
ANR	2017040	ClassDef	<unnamed>	2845:8:68052:68515							
ANR	2017041	DeclStmt									
ANR	2017042	Decl							int	int	B
ANR	2017043	DeclStmt									
ANR	2017044	Decl							int	int	Bp
ANR	2017045	DeclStmt									
ANR	2017046	Decl							STRLEN	STRLEN	m
ANR	2017047	DeclStmt									
ANR	2017048	Decl							int	int	patnum
ANR	2017049	DeclStmt									
ANR	2017050	Decl							SHIFT_TAB	SHIFT_TAB *	shift
ANR	2017051	DeclStmt									
ANR	2017052	Decl							HASH_TAB	HASH_TAB *	hash
ANR	2017053	DeclStmt									
ANR	2017054	Decl							HASH	HASH *	prefix
ANR	2017055	DeclStmt									
ANR	2017056	Decl							PATNREPL	PATNREPL *	patterns
ANR	2017057	DeclStmt									
ANR	2017058	Decl									PPRES
ANR	2017059	Function	php_strtr_hash	2858:0:68553:68727							
ANR	2017060	FunctionDef	"php_strtr_hash (const char * str , int len)"		2017059	0					
ANR	2017061	CompoundStatement		2859:0:68613:68727	2017059	0					
ANR	2017062	IdentifierDeclStatement	HASH res = 0 ;	2860:1:68616:68628	2017059	0	True				
ANR	2017063	IdentifierDecl	res = 0		2017059	0					
ANR	2017064	IdentifierDeclType	HASH		2017059	0					
ANR	2017065	Identifier	res		2017059	1					
ANR	2017066	AssignmentExpression	res = 0		2017059	2		=			
ANR	2017067	Identifier	res		2017059	0					
ANR	2017068	PrimaryExpression	0		2017059	1					
ANR	2017069	IdentifierDeclStatement	int i ;	2861:1:68631:68637	2017059	1	True				
ANR	2017070	IdentifierDecl	i		2017059	0					
ANR	2017071	IdentifierDeclType	int		2017059	0					
ANR	2017072	Identifier	i		2017059	1					
ANR	2017073	ForStatement	for ( i = 0 ; i < len ; i ++ )		2017059	2					
ANR	2017074	ForInit	i = 0 ;	2862:6:68645:68650	2017059	0	True				
ANR	2017075	AssignmentExpression	i = 0		2017059	0		=			
ANR	2017076	Identifier	i		2017059	0					
ANR	2017077	PrimaryExpression	0		2017059	1					
ANR	2017078	Condition	i < len	2862:13:68652:68658	2017059	1	True				
ANR	2017079	RelationalExpression	i < len		2017059	0		<			
ANR	2017080	Identifier	i		2017059	0					
ANR	2017081	Identifier	len		2017059	1					
ANR	2017082	PostIncDecOperationExpression	i ++	2862:22:68661:68663	2017059	2	True				
ANR	2017083	Identifier	i		2017059	0					
ANR	2017084	IncDec	++		2017059	1					
ANR	2017085	CompoundStatement		4:27:52:52	2017059	3					
ANR	2017086	ExpressionStatement	res = res * 33 + ( unsigned char ) str [ i ]	2863:2:68670:68708	2017059	0	True				
ANR	2017087	AssignmentExpression	res = res * 33 + ( unsigned char ) str [ i ]		2017059	0		=			
ANR	2017088	Identifier	res		2017059	0					
ANR	2017089	AdditiveExpression	res * 33 + ( unsigned char ) str [ i ]		2017059	1		+			
ANR	2017090	MultiplicativeExpression	res * 33		2017059	0		*			
ANR	2017091	Identifier	res		2017059	0					
ANR	2017092	PrimaryExpression	33		2017059	1					
ANR	2017093	CastExpression	( unsigned char ) str [ i ]		2017059	1					
ANR	2017094	CastTarget	unsigned char		2017059	0					
ANR	2017095	ArrayIndexing	str [ i ]		2017059	1					
ANR	2017096	Identifier	str		2017059	0					
ANR	2017097	Identifier	i		2017059	1					
ANR	2017098	ReturnStatement	return res ;	2866:1:68715:68725	2017059	3	True				
ANR	2017099	Identifier	res		2017059	0					
ANR	2017100	ReturnType	static inline HASH		2017059	1					
ANR	2017101	Identifier	php_strtr_hash		2017059	2					
ANR	2017102	ParameterList	"const char * str , int len"		2017059	3					
ANR	2017103	Parameter	const char * str	2858:34:68587:68601	2017059	0	True				
ANR	2017104	ParameterType	const char *		2017059	0					
ANR	2017105	Identifier	str		2017059	1					
ANR	2017106	Parameter	int len	2858:51:68604:68610	2017059	1	True				
ANR	2017107	ParameterType	int		2017059	0					
ANR	2017108	Identifier	len		2017059	1					
ANR	2017109	CFGEntryNode	ENTRY		2017059		True				
ANR	2017110	CFGExitNode	EXIT		2017059		True				
ANR	2017111	Symbol	str		2017059						
ANR	2017112	Symbol	res		2017059						
ANR	2017113	Symbol	* i		2017059						
ANR	2017114	Symbol	len		2017059						
ANR	2017115	Symbol	i		2017059						
ANR	2017116	Symbol	* str		2017059						
ANR	2017117	Function	php_strtr_populate_shift	2870:0:68774:69282							
ANR	2017118	FunctionDef	"php_strtr_populate_shift (PATNREPL * patterns , int patnum , int B , STRLEN m , SHIFT_TAB * shift)"		2017117	0					
ANR	2017119	CompoundStatement		2871:0:68885:69282	2017117	0					
ANR	2017120	IdentifierDeclStatement	int i ;	2872:1:68888:68894	2017117	0	True				
ANR	2017121	IdentifierDecl	i		2017117	0					
ANR	2017122	IdentifierDeclType	int		2017117	0					
ANR	2017123	Identifier	i		2017117	1					
ANR	2017124	IdentifierDeclStatement	"STRLEN j , max_shift ;"	2873:1:68897:68919	2017117	1	True				
ANR	2017125	IdentifierDecl	j		2017117	0					
ANR	2017126	IdentifierDeclType	STRLEN		2017117	0					
ANR	2017127	Identifier	j		2017117	1					
ANR	2017128	IdentifierDecl	max_shift		2017117	1					
ANR	2017129	IdentifierDeclType	STRLEN		2017117	0					
ANR	2017130	Identifier	max_shift		2017117	1					
ANR	2017131	ExpressionStatement	max_shift = m - B + 1	2876:1:68923:68944	2017117	2	True				
ANR	2017132	AssignmentExpression	max_shift = m - B + 1		2017117	0		=			
ANR	2017133	Identifier	max_shift		2017117	0					
ANR	2017134	AdditiveExpression	m - B + 1		2017117	1		-			
ANR	2017135	Identifier	m		2017117	0					
ANR	2017136	AdditiveExpression	B + 1		2017117	1		+			
ANR	2017137	Identifier	B		2017117	0					
ANR	2017138	PrimaryExpression	1		2017117	1					
ANR	2017139	ForStatement	for ( i = 0 ; i < SHIFT_TAB_SIZE ; i ++ )		2017117	3					
ANR	2017140	ForInit	i = 0 ;	2877:6:68952:68957	2017117	0	True				
ANR	2017141	AssignmentExpression	i = 0		2017117	0		=			
ANR	2017142	Identifier	i		2017117	0					
ANR	2017143	PrimaryExpression	0		2017117	1					
ANR	2017144	Condition	i < SHIFT_TAB_SIZE	2877:13:68959:68976	2017117	1	True				
ANR	2017145	RelationalExpression	i < SHIFT_TAB_SIZE		2017117	0		<			
ANR	2017146	Identifier	i		2017117	0					
ANR	2017147	Identifier	SHIFT_TAB_SIZE		2017117	1					
ANR	2017148	PostIncDecOperationExpression	i ++	2877:33:68979:68981	2017117	2	True				
ANR	2017149	Identifier	i		2017117	0					
ANR	2017150	IncDec	++		2017117	1					
ANR	2017151	CompoundStatement		7:38:98:98	2017117	3					
ANR	2017152	ExpressionStatement	shift -> entries [ i ] = max_shift	2878:2:68988:69017	2017117	0	True				
ANR	2017153	AssignmentExpression	shift -> entries [ i ] = max_shift		2017117	0		=			
ANR	2017154	ArrayIndexing	shift -> entries [ i ]		2017117	0					
ANR	2017155	PtrMemberAccess	shift -> entries		2017117	0					
ANR	2017156	Identifier	shift		2017117	0					
ANR	2017157	Identifier	entries		2017117	1					
ANR	2017158	Identifier	i		2017117	1					
ANR	2017159	Identifier	max_shift		2017117	1					
ANR	2017160	ForStatement	for ( i = 0 ; i < patnum ; i ++ )		2017117	4					
ANR	2017161	ForInit	i = 0 ;	2880:6:69028:69033	2017117	0	True				
ANR	2017162	AssignmentExpression	i = 0		2017117	0		=			
ANR	2017163	Identifier	i		2017117	0					
ANR	2017164	PrimaryExpression	0		2017117	1					
ANR	2017165	Condition	i < patnum	2880:13:69035:69044	2017117	1	True				
ANR	2017166	RelationalExpression	i < patnum		2017117	0		<			
ANR	2017167	Identifier	i		2017117	0					
ANR	2017168	Identifier	patnum		2017117	1					
ANR	2017169	PostIncDecOperationExpression	i ++	2880:25:69047:69049	2017117	2	True				
ANR	2017170	Identifier	i		2017117	0					
ANR	2017171	IncDec	++		2017117	1					
ANR	2017172	CompoundStatement		10:30:166:166	2017117	3					
ANR	2017173	ForStatement	for ( j = 0 ; j < m - B + 1 ; j ++ )		2017117	0					
ANR	2017174	ForInit	j = 0 ;	2881:7:69061:69066	2017117	0	True				
ANR	2017175	AssignmentExpression	j = 0		2017117	0		=			
ANR	2017176	Identifier	j		2017117	0					
ANR	2017177	PrimaryExpression	0		2017117	1					
ANR	2017178	Condition	j < m - B + 1	2881:14:69068:69080	2017117	1	True				
ANR	2017179	RelationalExpression	j < m - B + 1		2017117	0		<			
ANR	2017180	Identifier	j		2017117	0					
ANR	2017181	AdditiveExpression	m - B + 1		2017117	1		-			
ANR	2017182	Identifier	m		2017117	0					
ANR	2017183	AdditiveExpression	B + 1		2017117	1		+			
ANR	2017184	Identifier	B		2017117	0					
ANR	2017185	PrimaryExpression	1		2017117	1					
ANR	2017186	PostIncDecOperationExpression	j ++	2881:29:69083:69085	2017117	2	True				
ANR	2017187	Identifier	j		2017117	0					
ANR	2017188	IncDec	++		2017117	1					
ANR	2017189	CompoundStatement		12:3:207:278	2017117	3					
ANR	2017190	IdentifierDeclStatement	"HASH h = php_strtr_hash ( & S ( & patterns [ i ] . pat ) [ j ] , B ) & shift -> table_mask ;"	2882:3:69093:69164	2017117	0	True				
ANR	2017191	IdentifierDecl	"h = php_strtr_hash ( & S ( & patterns [ i ] . pat ) [ j ] , B ) & shift -> table_mask"		2017117	0					
ANR	2017192	IdentifierDeclType	HASH		2017117	0					
ANR	2017193	Identifier	h		2017117	1					
ANR	2017194	AssignmentExpression	"h = php_strtr_hash ( & S ( & patterns [ i ] . pat ) [ j ] , B ) & shift -> table_mask"		2017117	2		=			
ANR	2017195	Identifier	h		2017117	0					
ANR	2017196	BitAndExpression	"php_strtr_hash ( & S ( & patterns [ i ] . pat ) [ j ] , B ) & shift -> table_mask"		2017117	1		&			
ANR	2017197	CallExpression	"php_strtr_hash ( & S ( & patterns [ i ] . pat ) [ j ] , B )"		2017117	0					
ANR	2017198	Callee	php_strtr_hash		2017117	0					
ANR	2017199	Identifier	php_strtr_hash		2017117	0					
ANR	2017200	ArgumentList	& S ( & patterns [ i ] . pat ) [ j ]		2017117	1					
ANR	2017201	Argument	& S ( & patterns [ i ] . pat ) [ j ]		2017117	0					
ANR	2017202	UnaryOperationExpression	& S ( & patterns [ i ] . pat ) [ j ]		2017117	0					
ANR	2017203	UnaryOperator	&		2017117	0					
ANR	2017204	ArrayIndexing	S ( & patterns [ i ] . pat ) [ j ]		2017117	1					
ANR	2017205	CallExpression	S ( & patterns [ i ] . pat )		2017117	0					
ANR	2017206	Callee	S		2017117	0					
ANR	2017207	Identifier	S		2017117	0					
ANR	2017208	ArgumentList	& patterns [ i ] . pat		2017117	1					
ANR	2017209	Argument	& patterns [ i ] . pat		2017117	0					
ANR	2017210	UnaryOperationExpression	& patterns [ i ] . pat		2017117	0					
ANR	2017211	UnaryOperator	&		2017117	0					
ANR	2017212	MemberAccess	patterns [ i ] . pat		2017117	1					
ANR	2017213	ArrayIndexing	patterns [ i ]		2017117	0					
ANR	2017214	Identifier	patterns		2017117	0					
ANR	2017215	Identifier	i		2017117	1					
ANR	2017216	Identifier	pat		2017117	1					
ANR	2017217	Identifier	j		2017117	1					
ANR	2017218	Argument	B		2017117	1					
ANR	2017219	Identifier	B		2017117	0					
ANR	2017220	PtrMemberAccess	shift -> table_mask		2017117	1					
ANR	2017221	Identifier	shift		2017117	0					
ANR	2017222	Identifier	table_mask		2017117	1					
ANR	2017223	ExpressionStatement	assert ( ( long long ) m - ( long long ) j - B >= 0 )	2883:3:69169:69215	2017117	1	True				
ANR	2017224	CallExpression	assert ( ( long long ) m - ( long long ) j - B >= 0 )		2017117	0					
ANR	2017225	Callee	assert		2017117	0					
ANR	2017226	Identifier	assert		2017117	0					
ANR	2017227	ArgumentList	( long long ) m - ( long long ) j - B >= 0		2017117	1					
ANR	2017228	Argument	( long long ) m - ( long long ) j - B >= 0		2017117	0					
ANR	2017229	RelationalExpression	( long long ) m - ( long long ) j - B >= 0		2017117	0		>=			
ANR	2017230	AdditiveExpression	( long long ) m - ( long long ) j - B		2017117	0		-			
ANR	2017231	CastExpression	( long long ) m		2017117	0					
ANR	2017232	CastTarget	long long		2017117	0					
ANR	2017233	Identifier	m		2017117	1					
ANR	2017234	AdditiveExpression	( long long ) j - B		2017117	1		-			
ANR	2017235	CastExpression	( long long ) j		2017117	0					
ANR	2017236	CastTarget	long long		2017117	0					
ANR	2017237	Identifier	j		2017117	1					
ANR	2017238	Identifier	B		2017117	1					
ANR	2017239	PrimaryExpression	0		2017117	1					
ANR	2017240	ExpressionStatement	"shift -> entries [ h ] = MIN ( shift -> entries [ h ] , m - j - B )"	2884:3:69220:69273	2017117	2	True				
ANR	2017241	AssignmentExpression	"shift -> entries [ h ] = MIN ( shift -> entries [ h ] , m - j - B )"		2017117	0		=			
ANR	2017242	ArrayIndexing	shift -> entries [ h ]		2017117	0					
ANR	2017243	PtrMemberAccess	shift -> entries		2017117	0					
ANR	2017244	Identifier	shift		2017117	0					
ANR	2017245	Identifier	entries		2017117	1					
ANR	2017246	Identifier	h		2017117	1					
ANR	2017247	CallExpression	"MIN ( shift -> entries [ h ] , m - j - B )"		2017117	1					
ANR	2017248	Callee	MIN		2017117	0					
ANR	2017249	Identifier	MIN		2017117	0					
ANR	2017250	ArgumentList	shift -> entries [ h ]		2017117	1					
ANR	2017251	Argument	shift -> entries [ h ]		2017117	0					
ANR	2017252	ArrayIndexing	shift -> entries [ h ]		2017117	0					
ANR	2017253	PtrMemberAccess	shift -> entries		2017117	0					
ANR	2017254	Identifier	shift		2017117	0					
ANR	2017255	Identifier	entries		2017117	1					
ANR	2017256	Identifier	h		2017117	1					
ANR	2017257	Argument	m - j - B		2017117	1					
ANR	2017258	AdditiveExpression	m - j - B		2017117	0		-			
ANR	2017259	Identifier	m		2017117	0					
ANR	2017260	AdditiveExpression	j - B		2017117	1		-			
ANR	2017261	Identifier	j		2017117	0					
ANR	2017262	Identifier	B		2017117	1					
ANR	2017263	ReturnType	static inline void		2017117	1					
ANR	2017264	Identifier	php_strtr_populate_shift		2017117	2					
ANR	2017265	ParameterList	"PATNREPL * patterns , int patnum , int B , STRLEN m , SHIFT_TAB * shift"		2017117	3					
ANR	2017266	Parameter	PATNREPL * patterns	2870:44:68818:68835	2017117	0	True				
ANR	2017267	ParameterType	PATNREPL *		2017117	0					
ANR	2017268	Identifier	patterns		2017117	1					
ANR	2017269	Parameter	int patnum	2870:64:68838:68847	2017117	1	True				
ANR	2017270	ParameterType	int		2017117	0					
ANR	2017271	Identifier	patnum		2017117	1					
ANR	2017272	Parameter	int B	2870:76:68850:68854	2017117	2	True				
ANR	2017273	ParameterType	int		2017117	0					
ANR	2017274	Identifier	B		2017117	1					
ANR	2017275	Parameter	STRLEN m	2870:83:68857:68864	2017117	3	True				
ANR	2017276	ParameterType	STRLEN		2017117	0					
ANR	2017277	Identifier	m		2017117	1					
ANR	2017278	Parameter	SHIFT_TAB * shift	2870:93:68867:68882	2017117	4	True				
ANR	2017279	ParameterType	SHIFT_TAB *		2017117	0					
ANR	2017280	Identifier	shift		2017117	1					
ANR	2017281	CFGEntryNode	ENTRY		2017117		True				
ANR	2017282	CFGExitNode	EXIT		2017117		True				
ANR	2017283	Symbol	& patterns [ i ] . pat		2017117						
ANR	2017284	Symbol	B		2017117						
ANR	2017285	Symbol	SHIFT_TAB_SIZE		2017117						
ANR	2017286	Symbol	php_strtr_hash		2017117						
ANR	2017287	Symbol	max_shift		2017117						
ANR	2017288	Symbol	patterns		2017117						
ANR	2017289	Symbol	shift		2017117						
ANR	2017290	Symbol	* patterns		2017117						
ANR	2017291	Symbol	h		2017117						
ANR	2017292	Symbol	i		2017117						
ANR	2017293	Symbol	j		2017117						
ANR	2017294	Symbol	* shift		2017117						
ANR	2017295	Symbol	m		2017117						
ANR	2017296	Symbol	patnum		2017117						
ANR	2017297	Symbol	* shift -> entries		2017117						
ANR	2017298	Symbol	* * shift		2017117						
ANR	2017299	Symbol	shift -> entries		2017117						
ANR	2017300	Symbol	* h		2017117						
ANR	2017301	Symbol	* i		2017117						
ANR	2017302	Symbol	S		2017117						
ANR	2017303	Symbol	MIN		2017117						
ANR	2017304	Symbol	shift -> table_mask		2017117						
ANR	2017305	DeclStmt									
ANR	2017306	Decl							const PPRES	const PPRES *	res
ANR	2017307	DeclStmt									
ANR	2017308	Decl							const PATNREPL	const PATNREPL *	pnr_a
ANR	2017309	Decl							const PATNREPL	const PATNREPL *	pnr_b
ANR	2017310	DeclStmt									
ANR	2017311	Decl							HASH	HASH	hash_a
ANR	2017312	Decl							HASH	HASH	hash_b
ANR	2017313	Function	php_strtr_free_strp	2917:0:70093:70165							
ANR	2017314	FunctionDef	php_strtr_free_strp (void * strp)		2017313	0					
ANR	2017315	CompoundStatement		2918:0:70137:70165	2017313	0					
ANR	2017316	ExpressionStatement	STR_FREE ( * ( char * * ) strp )	2919:1:70140:70163	2017313	0	True				
ANR	2017317	CallExpression	STR_FREE ( * ( char * * ) strp )		2017313	0					
ANR	2017318	Callee	STR_FREE		2017313	0					
ANR	2017319	Identifier	STR_FREE		2017313	0					
ANR	2017320	ArgumentList	* ( char * * ) strp		2017313	1					
ANR	2017321	Argument	* ( char * * ) strp		2017313	0					
ANR	2017322	UnaryOperationExpression	* ( char * * ) strp		2017313	0					
ANR	2017323	UnaryOperator	*		2017313	0					
ANR	2017324	CastExpression	( char * * ) strp		2017313	1					
ANR	2017325	CastTarget	char * *		2017313	0					
ANR	2017326	Identifier	strp		2017313	1					
ANR	2017327	ReturnType	static void		2017313	1					
ANR	2017328	Identifier	php_strtr_free_strp		2017313	2					
ANR	2017329	ParameterList	void * strp		2017313	3					
ANR	2017330	Parameter	void * strp	2917:32:70125:70134	2017313	0	True				
ANR	2017331	ParameterType	void *		2017313	0					
ANR	2017332	Identifier	strp		2017313	1					
ANR	2017333	CFGEntryNode	ENTRY		2017313		True				
ANR	2017334	CFGExitNode	EXIT		2017313		True				
ANR	2017335	Symbol	* strp		2017313						
ANR	2017336	Symbol	strp		2017313						
ANR	2017337	Symbol	* ( char * * ) strp		2017313						
ANR	2017338	Function	php_strtr_array_prepare_repls	2923:0:70217:71975							
ANR	2017339	FunctionDef	"php_strtr_array_prepare_repls (int slen , HashTable * pats , zend_llist * * allocs , int * outsize)"		2017338	0					
ANR	2017340	CompoundStatement		2924:0:70326:71975	2017338	0					
ANR	2017341	IdentifierDeclStatement	PATNREPL * patterns ;	2925:1:70329:70348	2017338	0	True				
ANR	2017342	IdentifierDecl	* patterns		2017338	0					
ANR	2017343	IdentifierDeclType	PATNREPL *		2017338	0					
ANR	2017344	Identifier	patterns		2017338	1					
ANR	2017345	IdentifierDeclStatement	HashPosition hpos ;	2926:1:70351:70368	2017338	1	True				
ANR	2017346	IdentifierDecl	hpos		2017338	0					
ANR	2017347	IdentifierDeclType	HashPosition		2017338	0					
ANR	2017348	Identifier	hpos		2017338	1					
ANR	2017349	IdentifierDeclStatement	zval * * entry ;	2927:1:70371:70385	2017338	2	True				
ANR	2017350	IdentifierDecl	* * entry		2017338	0					
ANR	2017351	IdentifierDeclType	zval * *		2017338	0					
ANR	2017352	Identifier	entry		2017338	1					
ANR	2017353	IdentifierDeclStatement	"int num_pats = zend_hash_num_elements ( pats ) , i ;"	2928:1:70388:70442	2017338	3	True				
ANR	2017354	IdentifierDecl	num_pats = zend_hash_num_elements ( pats )		2017338	0					
ANR	2017355	IdentifierDeclType	int		2017338	0					
ANR	2017356	Identifier	num_pats		2017338	1					
ANR	2017357	AssignmentExpression	num_pats = zend_hash_num_elements ( pats )		2017338	2		=			
ANR	2017358	Identifier	num_pats		2017338	0					
ANR	2017359	CallExpression	zend_hash_num_elements ( pats )		2017338	1					
ANR	2017360	Callee	zend_hash_num_elements		2017338	0					
ANR	2017361	Identifier	zend_hash_num_elements		2017338	0					
ANR	2017362	ArgumentList	pats		2017338	1					
ANR	2017363	Argument	pats		2017338	0					
ANR	2017364	Identifier	pats		2017338	0					
ANR	2017365	IdentifierDecl	i		2017338	1					
ANR	2017366	IdentifierDeclType	int		2017338	0					
ANR	2017367	Identifier	i		2017338	1					
ANR	2017368	ExpressionStatement	"patterns = safe_emalloc ( num_pats , sizeof ( * patterns ) , 0 )"	2931:1:70446:70501	2017338	4	True				
ANR	2017369	AssignmentExpression	"patterns = safe_emalloc ( num_pats , sizeof ( * patterns ) , 0 )"		2017338	0		=			
ANR	2017370	Identifier	patterns		2017338	0					
ANR	2017371	CallExpression	"safe_emalloc ( num_pats , sizeof ( * patterns ) , 0 )"		2017338	1					
ANR	2017372	Callee	safe_emalloc		2017338	0					
ANR	2017373	Identifier	safe_emalloc		2017338	0					
ANR	2017374	ArgumentList	num_pats		2017338	1					
ANR	2017375	Argument	num_pats		2017338	0					
ANR	2017376	Identifier	num_pats		2017338	0					
ANR	2017377	Argument	sizeof ( * patterns )		2017338	1					
ANR	2017378	SizeofExpression	sizeof ( * patterns )		2017338	0					
ANR	2017379	Sizeof	sizeof		2017338	0					
ANR	2017380	UnaryOperationExpression	* patterns		2017338	1					
ANR	2017381	UnaryOperator	*		2017338	0					
ANR	2017382	Identifier	patterns		2017338	1					
ANR	2017383	Argument	0		2017338	2					
ANR	2017384	PrimaryExpression	0		2017338	0					
ANR	2017385	ExpressionStatement	* allocs = emalloc ( sizeof * * allocs )	2932:1:70504:70538	2017338	5	True				
ANR	2017386	AssignmentExpression	* allocs = emalloc ( sizeof * * allocs )		2017338	0		=			
ANR	2017387	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017388	UnaryOperator	*		2017338	0					
ANR	2017389	Identifier	allocs		2017338	1					
ANR	2017390	CallExpression	emalloc ( sizeof * * allocs )		2017338	1					
ANR	2017391	Callee	emalloc		2017338	0					
ANR	2017392	Identifier	emalloc		2017338	0					
ANR	2017393	ArgumentList	sizeof * * allocs		2017338	1					
ANR	2017394	Argument	sizeof * * allocs		2017338	0					
ANR	2017395	SizeofExpression	sizeof * * allocs		2017338	0					
ANR	2017396	Sizeof	sizeof		2017338	0					
ANR	2017397	UnaryOperationExpression	* * allocs		2017338	1					
ANR	2017398	UnaryOperator	*		2017338	0					
ANR	2017399	UnaryOperationExpression	* allocs		2017338	1					
ANR	2017400	UnaryOperator	*		2017338	0					
ANR	2017401	Identifier	allocs		2017338	1					
ANR	2017402	ExpressionStatement	"zend_llist_init ( * allocs , sizeof ( void * ) , & php_strtr_free_strp , 0 )"	2933:1:70541:70605	2017338	6	True				
ANR	2017403	CallExpression	"zend_llist_init ( * allocs , sizeof ( void * ) , & php_strtr_free_strp , 0 )"		2017338	0					
ANR	2017404	Callee	zend_llist_init		2017338	0					
ANR	2017405	Identifier	zend_llist_init		2017338	0					
ANR	2017406	ArgumentList	* allocs		2017338	1					
ANR	2017407	Argument	* allocs		2017338	0					
ANR	2017408	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017409	UnaryOperator	*		2017338	0					
ANR	2017410	Identifier	allocs		2017338	1					
ANR	2017411	Argument	sizeof ( void * )		2017338	1					
ANR	2017412	SizeofExpression	sizeof ( void * )		2017338	0					
ANR	2017413	Sizeof	sizeof		2017338	0					
ANR	2017414	SizeofOperand	void *		2017338	1					
ANR	2017415	Argument	& php_strtr_free_strp		2017338	2					
ANR	2017416	UnaryOperationExpression	& php_strtr_free_strp		2017338	0					
ANR	2017417	UnaryOperator	&		2017338	0					
ANR	2017418	Identifier	php_strtr_free_strp		2017338	1					
ANR	2017419	Argument	0		2017338	3					
ANR	2017420	PrimaryExpression	0		2017338	0					
ANR	2017421	ForStatement	"for ( i = 0 , zend_hash_internal_pointer_reset_ex ( pats , & hpos ) ; zend_hash_get_current_data_ex ( pats , ( void * * ) & entry , & hpos ) == SUCCESS ; zend_hash_move_forward_ex ( pats , & hpos ) )"		2017338	7					
ANR	2017422	ForInit	"i = 0 , zend_hash_internal_pointer_reset_ex ( pats , & hpos ) ;"	2935:6:70614:70669	2017338	0	True				
ANR	2017423	Expression	"i = 0 , zend_hash_internal_pointer_reset_ex ( pats , & hpos )"		2017338	0					
ANR	2017424	AssignmentExpression	i = 0		2017338	0		=			
ANR	2017425	Identifier	i		2017338	0					
ANR	2017426	PrimaryExpression	0		2017338	1					
ANR	2017427	CallExpression	"zend_hash_internal_pointer_reset_ex ( pats , & hpos )"		2017338	1					
ANR	2017428	Callee	zend_hash_internal_pointer_reset_ex		2017338	0					
ANR	2017429	Identifier	zend_hash_internal_pointer_reset_ex		2017338	0					
ANR	2017430	ArgumentList	pats		2017338	1					
ANR	2017431	Argument	pats		2017338	0					
ANR	2017432	Identifier	pats		2017338	0					
ANR	2017433	Argument	& hpos		2017338	1					
ANR	2017434	UnaryOperationExpression	& hpos		2017338	0					
ANR	2017435	UnaryOperator	&		2017338	0					
ANR	2017436	Identifier	hpos		2017338	1					
ANR	2017437	Condition	"zend_hash_get_current_data_ex ( pats , ( void * * ) & entry , & hpos ) == SUCCESS"	2936:3:70674:70743	2017338	1	True				
ANR	2017438	EqualityExpression	"zend_hash_get_current_data_ex ( pats , ( void * * ) & entry , & hpos ) == SUCCESS"		2017338	0		==			
ANR	2017439	CallExpression	"zend_hash_get_current_data_ex ( pats , ( void * * ) & entry , & hpos )"		2017338	0					
ANR	2017440	Callee	zend_hash_get_current_data_ex		2017338	0					
ANR	2017441	Identifier	zend_hash_get_current_data_ex		2017338	0					
ANR	2017442	ArgumentList	pats		2017338	1					
ANR	2017443	Argument	pats		2017338	0					
ANR	2017444	Identifier	pats		2017338	0					
ANR	2017445	Argument	( void * * ) & entry		2017338	1					
ANR	2017446	CastExpression	( void * * ) & entry		2017338	0					
ANR	2017447	CastTarget	void * *		2017338	0					
ANR	2017448	UnaryOperationExpression	& entry		2017338	1					
ANR	2017449	UnaryOperator	&		2017338	0					
ANR	2017450	Identifier	entry		2017338	1					
ANR	2017451	Argument	& hpos		2017338	2					
ANR	2017452	UnaryOperationExpression	& hpos		2017338	0					
ANR	2017453	UnaryOperator	&		2017338	0					
ANR	2017454	Identifier	hpos		2017338	1					
ANR	2017455	Identifier	SUCCESS		2017338	1					
ANR	2017456	CallExpression	"zend_hash_move_forward_ex ( pats , & hpos )"	2937:3:70749:70786	2017338	2	True				
ANR	2017457	Callee	zend_hash_move_forward_ex		2017338	0					
ANR	2017458	Identifier	zend_hash_move_forward_ex		2017338	0					
ANR	2017459	ArgumentList	pats		2017338	1					
ANR	2017460	Argument	pats		2017338	0					
ANR	2017461	Identifier	pats		2017338	0					
ANR	2017462	Argument	& hpos		2017338	1					
ANR	2017463	UnaryOperationExpression	& hpos		2017338	0					
ANR	2017464	UnaryOperator	&		2017338	0					
ANR	2017465	Identifier	hpos		2017338	1					
ANR	2017466	CompoundStatement		18:2:528:544	2017338	3					
ANR	2017467	IdentifierDeclStatement	char * string_key ;	2938:2:70793:70809	2017338	0	True				
ANR	2017468	IdentifierDecl	* string_key		2017338	0					
ANR	2017469	IdentifierDeclType	char *		2017338	0					
ANR	2017470	Identifier	string_key		2017338	1					
ANR	2017471	IdentifierDeclStatement	uint string_key_len ;	2939:2:70813:70834	2017338	1	True				
ANR	2017472	IdentifierDecl	string_key_len		2017338	0					
ANR	2017473	IdentifierDeclType	uint		2017338	0					
ANR	2017474	Identifier	string_key_len		2017338	1					
ANR	2017475	IdentifierDeclStatement	ulong num_key ;	2940:2:70838:70851	2017338	2	True				
ANR	2017476	IdentifierDecl	num_key		2017338	0					
ANR	2017477	IdentifierDeclType	ulong		2017338	0					
ANR	2017478	Identifier	num_key		2017338	1					
ANR	2017479	IdentifierDeclStatement	zval * tzv = NULL ;	2941:2:70855:70871	2017338	3	True				
ANR	2017480	IdentifierDecl	* tzv = NULL		2017338	0					
ANR	2017481	IdentifierDeclType	zval *		2017338	0					
ANR	2017482	Identifier	tzv		2017338	1					
ANR	2017483	AssignmentExpression	* tzv = NULL		2017338	2		=			
ANR	2017484	Identifier	NULL		2017338	0					
ANR	2017485	Identifier	NULL		2017338	1					
ANR	2017486	SwitchStatement	"switch ( zend_hash_get_current_key_ex ( pats , & string_key , & string_key_len , & num_key , 0 , & hpos ) )"		2017338	4					
ANR	2017487	Condition	"zend_hash_get_current_key_ex ( pats , & string_key , & string_key_len , & num_key , 0 , & hpos )"	2943:10:70884:70967	2017338	0	True				
ANR	2017488	CallExpression	"zend_hash_get_current_key_ex ( pats , & string_key , & string_key_len , & num_key , 0 , & hpos )"		2017338	0					
ANR	2017489	Callee	zend_hash_get_current_key_ex		2017338	0					
ANR	2017490	Identifier	zend_hash_get_current_key_ex		2017338	0					
ANR	2017491	ArgumentList	pats		2017338	1					
ANR	2017492	Argument	pats		2017338	0					
ANR	2017493	Identifier	pats		2017338	0					
ANR	2017494	Argument	& string_key		2017338	1					
ANR	2017495	UnaryOperationExpression	& string_key		2017338	0					
ANR	2017496	UnaryOperator	&		2017338	0					
ANR	2017497	Identifier	string_key		2017338	1					
ANR	2017498	Argument	& string_key_len		2017338	2					
ANR	2017499	UnaryOperationExpression	& string_key_len		2017338	0					
ANR	2017500	UnaryOperator	&		2017338	0					
ANR	2017501	Identifier	string_key_len		2017338	1					
ANR	2017502	Argument	& num_key		2017338	3					
ANR	2017503	UnaryOperationExpression	& num_key		2017338	0					
ANR	2017504	UnaryOperator	&		2017338	0					
ANR	2017505	Identifier	num_key		2017338	1					
ANR	2017506	Argument	0		2017338	4					
ANR	2017507	PrimaryExpression	0		2017338	0					
ANR	2017508	Argument	& hpos		2017338	5					
ANR	2017509	UnaryOperationExpression	& hpos		2017338	0					
ANR	2017510	UnaryOperator	&		2017338	0					
ANR	2017511	Identifier	hpos		2017338	1					
ANR	2017512	CompoundStatement		20:96:643:643	2017338	1					
ANR	2017513	Label	case HASH_KEY_IS_LONG :	2944:2:70974:70995	2017338	0	True				
ANR	2017514	Identifier	HASH_KEY_IS_LONG		2017338	0					
ANR	2017515	ExpressionStatement	"string_key_len = 1 + zend_spprintf ( & string_key , 0 , ""%ld"" , ( long ) num_key )"	2945:3:71000:71072	2017338	1	True				
ANR	2017516	AssignmentExpression	"string_key_len = 1 + zend_spprintf ( & string_key , 0 , ""%ld"" , ( long ) num_key )"		2017338	0		=			
ANR	2017517	Identifier	string_key_len		2017338	0					
ANR	2017518	AdditiveExpression	"1 + zend_spprintf ( & string_key , 0 , ""%ld"" , ( long ) num_key )"		2017338	1		+			
ANR	2017519	PrimaryExpression	1		2017338	0					
ANR	2017520	CallExpression	"zend_spprintf ( & string_key , 0 , ""%ld"" , ( long ) num_key )"		2017338	1					
ANR	2017521	Callee	zend_spprintf		2017338	0					
ANR	2017522	Identifier	zend_spprintf		2017338	0					
ANR	2017523	ArgumentList	& string_key		2017338	1					
ANR	2017524	Argument	& string_key		2017338	0					
ANR	2017525	UnaryOperationExpression	& string_key		2017338	0					
ANR	2017526	UnaryOperator	&		2017338	0					
ANR	2017527	Identifier	string_key		2017338	1					
ANR	2017528	Argument	0		2017338	1					
ANR	2017529	PrimaryExpression	0		2017338	0					
ANR	2017530	Argument	"""%ld"""		2017338	2					
ANR	2017531	PrimaryExpression	"""%ld"""		2017338	0					
ANR	2017532	Argument	( long ) num_key		2017338	3					
ANR	2017533	CastExpression	( long ) num_key		2017338	0					
ANR	2017534	CastTarget	long		2017338	0					
ANR	2017535	Identifier	num_key		2017338	1					
ANR	2017536	ExpressionStatement	"zend_llist_add_element ( * allocs , & string_key )"	2946:3:71077:71121	2017338	2	True				
ANR	2017537	CallExpression	"zend_llist_add_element ( * allocs , & string_key )"		2017338	0					
ANR	2017538	Callee	zend_llist_add_element		2017338	0					
ANR	2017539	Identifier	zend_llist_add_element		2017338	0					
ANR	2017540	ArgumentList	* allocs		2017338	1					
ANR	2017541	Argument	* allocs		2017338	0					
ANR	2017542	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017543	UnaryOperator	*		2017338	0					
ANR	2017544	Identifier	allocs		2017338	1					
ANR	2017545	Argument	& string_key		2017338	1					
ANR	2017546	UnaryOperationExpression	& string_key		2017338	0					
ANR	2017547	UnaryOperator	&		2017338	0					
ANR	2017548	Identifier	string_key		2017338	1					
ANR	2017549	Label	case HASH_KEY_IS_STRING :	2949:2:71163:71186	2017338	3	True				
ANR	2017550	Identifier	HASH_KEY_IS_STRING		2017338	0					
ANR	2017551	ExpressionStatement	string_key_len --	2950:3:71191:71207	2017338	4	True				
ANR	2017552	PostIncDecOperationExpression	string_key_len --		2017338	0					
ANR	2017553	Identifier	string_key_len		2017338	0					
ANR	2017554	IncDec	--		2017338	1					
ANR	2017555	IfStatement	if ( string_key_len == 0 )		2017338	5					
ANR	2017556	Condition	string_key_len == 0	2951:7:71241:71259	2017338	0	True				
ANR	2017557	EqualityExpression	string_key_len == 0		2017338	0		==			
ANR	2017558	Identifier	string_key_len		2017338	0					
ANR	2017559	PrimaryExpression	0		2017338	1					
ANR	2017560	CompoundStatement		28:28:935:935	2017338	1					
ANR	2017561	ExpressionStatement	efree ( patterns )	2952:4:71304:71319	2017338	0	True				
ANR	2017562	CallExpression	efree ( patterns )		2017338	0					
ANR	2017563	Callee	efree		2017338	0					
ANR	2017564	Identifier	efree		2017338	0					
ANR	2017565	ArgumentList	patterns		2017338	1					
ANR	2017566	Argument	patterns		2017338	0					
ANR	2017567	Identifier	patterns		2017338	0					
ANR	2017568	ExpressionStatement	zend_llist_destroy ( * allocs )	2953:4:71325:71352	2017338	1	True				
ANR	2017569	CallExpression	zend_llist_destroy ( * allocs )		2017338	0					
ANR	2017570	Callee	zend_llist_destroy		2017338	0					
ANR	2017571	Identifier	zend_llist_destroy		2017338	0					
ANR	2017572	ArgumentList	* allocs		2017338	1					
ANR	2017573	Argument	* allocs		2017338	0					
ANR	2017574	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017575	UnaryOperator	*		2017338	0					
ANR	2017576	Identifier	allocs		2017338	1					
ANR	2017577	ExpressionStatement	efree ( * allocs )	2954:4:71358:71372	2017338	2	True				
ANR	2017578	CallExpression	efree ( * allocs )		2017338	0					
ANR	2017579	Callee	efree		2017338	0					
ANR	2017580	Identifier	efree		2017338	0					
ANR	2017581	ArgumentList	* allocs		2017338	1					
ANR	2017582	Argument	* allocs		2017338	0					
ANR	2017583	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017584	UnaryOperator	*		2017338	0					
ANR	2017585	Identifier	allocs		2017338	1					
ANR	2017586	ExpressionStatement	* allocs = NULL	2955:4:71378:71392	2017338	3	True				
ANR	2017587	AssignmentExpression	* allocs = NULL		2017338	0		=			
ANR	2017588	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017589	UnaryOperator	*		2017338	0					
ANR	2017590	Identifier	allocs		2017338	1					
ANR	2017591	Identifier	NULL		2017338	1					
ANR	2017592	ReturnStatement	return NULL ;	2956:4:71398:71409	2017338	4	True				
ANR	2017593	Identifier	NULL		2017338	0					
ANR	2017594	IfStatement	if ( string_key_len > slen )		2017338	6					
ANR	2017595	Condition	string_key_len > slen	2958:7:71423:71443	2017338	0	True				
ANR	2017596	RelationalExpression	string_key_len > slen		2017338	0		>			
ANR	2017597	Identifier	string_key_len		2017338	0					
ANR	2017598	Identifier	slen		2017338	1					
ANR	2017599	CompoundStatement		35:30:1119:1119	2017338	1					
ANR	2017600	ContinueStatement	continue ;	2959:4:71487:71495	2017338	0	True				
ANR	2017601	IfStatement	if ( Z_TYPE_PP ( entry ) != IS_STRING )		2017338	7					
ANR	2017602	Condition	Z_TYPE_PP ( entry ) != IS_STRING	2962:7:71510:71538	2017338	0	True				
ANR	2017603	EqualityExpression	Z_TYPE_PP ( entry ) != IS_STRING		2017338	0		!=			
ANR	2017604	CallExpression	Z_TYPE_PP ( entry )		2017338	0					
ANR	2017605	Callee	Z_TYPE_PP		2017338	0					
ANR	2017606	Identifier	Z_TYPE_PP		2017338	0					
ANR	2017607	ArgumentList	entry		2017338	1					
ANR	2017608	Argument	entry		2017338	0					
ANR	2017609	Identifier	entry		2017338	0					
ANR	2017610	Identifier	IS_STRING		2017338	1					
ANR	2017611	CompoundStatement		39:38:1214:1214	2017338	1					
ANR	2017612	ExpressionStatement	tzv = * entry	2963:4:71547:71559	2017338	0	True				
ANR	2017613	AssignmentExpression	tzv = * entry		2017338	0		=			
ANR	2017614	Identifier	tzv		2017338	0					
ANR	2017615	UnaryOperationExpression	* entry		2017338	1					
ANR	2017616	UnaryOperator	*		2017338	0					
ANR	2017617	Identifier	entry		2017338	1					
ANR	2017618	ExpressionStatement	zval_addref_p ( tzv )	2964:4:71565:71583	2017338	1	True				
ANR	2017619	CallExpression	zval_addref_p ( tzv )		2017338	0					
ANR	2017620	Callee	zval_addref_p		2017338	0					
ANR	2017621	Identifier	zval_addref_p		2017338	0					
ANR	2017622	ArgumentList	tzv		2017338	1					
ANR	2017623	Argument	tzv		2017338	0					
ANR	2017624	Identifier	tzv		2017338	0					
ANR	2017625	ExpressionStatement	SEPARATE_ZVAL ( & tzv )	2965:4:71589:71608	2017338	2	True				
ANR	2017626	CallExpression	SEPARATE_ZVAL ( & tzv )		2017338	0					
ANR	2017627	Callee	SEPARATE_ZVAL		2017338	0					
ANR	2017628	Identifier	SEPARATE_ZVAL		2017338	0					
ANR	2017629	ArgumentList	& tzv		2017338	1					
ANR	2017630	Argument	& tzv		2017338	0					
ANR	2017631	UnaryOperationExpression	& tzv		2017338	0					
ANR	2017632	UnaryOperator	&		2017338	0					
ANR	2017633	Identifier	tzv		2017338	1					
ANR	2017634	ExpressionStatement	convert_to_string ( tzv )	2966:4:71614:71636	2017338	3	True				
ANR	2017635	CallExpression	convert_to_string ( tzv )		2017338	0					
ANR	2017636	Callee	convert_to_string		2017338	0					
ANR	2017637	Identifier	convert_to_string		2017338	0					
ANR	2017638	ArgumentList	tzv		2017338	1					
ANR	2017639	Argument	tzv		2017338	0					
ANR	2017640	Identifier	tzv		2017338	0					
ANR	2017641	ExpressionStatement	entry = & tzv	2967:4:71642:71654	2017338	4	True				
ANR	2017642	AssignmentExpression	entry = & tzv		2017338	0		=			
ANR	2017643	Identifier	entry		2017338	0					
ANR	2017644	UnaryOperationExpression	& tzv		2017338	1					
ANR	2017645	UnaryOperator	&		2017338	0					
ANR	2017646	Identifier	tzv		2017338	1					
ANR	2017647	ExpressionStatement	"zend_llist_add_element ( * allocs , & Z_STRVAL_PP ( entry ) )"	2968:4:71660:71712	2017338	5	True				
ANR	2017648	CallExpression	"zend_llist_add_element ( * allocs , & Z_STRVAL_PP ( entry ) )"		2017338	0					
ANR	2017649	Callee	zend_llist_add_element		2017338	0					
ANR	2017650	Identifier	zend_llist_add_element		2017338	0					
ANR	2017651	ArgumentList	* allocs		2017338	1					
ANR	2017652	Argument	* allocs		2017338	0					
ANR	2017653	UnaryOperationExpression	* allocs		2017338	0					
ANR	2017654	UnaryOperator	*		2017338	0					
ANR	2017655	Identifier	allocs		2017338	1					
ANR	2017656	Argument	& Z_STRVAL_PP ( entry )		2017338	1					
ANR	2017657	UnaryOperationExpression	& Z_STRVAL_PP ( entry )		2017338	0					
ANR	2017658	UnaryOperator	&		2017338	0					
ANR	2017659	CallExpression	Z_STRVAL_PP ( entry )		2017338	1					
ANR	2017660	Callee	Z_STRVAL_PP		2017338	0					
ANR	2017661	Identifier	Z_STRVAL_PP		2017338	0					
ANR	2017662	ArgumentList	entry		2017338	1					
ANR	2017663	Argument	entry		2017338	0					
ANR	2017664	Identifier	entry		2017338	0					
ANR	2017665	ExpressionStatement	S ( & patterns [ i ] . pat ) = string_key	2971:3:71723:71755	2017338	8	True				
ANR	2017666	AssignmentExpression	S ( & patterns [ i ] . pat ) = string_key		2017338	0		=			
ANR	2017667	CallExpression	S ( & patterns [ i ] . pat )		2017338	0					
ANR	2017668	Callee	S		2017338	0					
ANR	2017669	Identifier	S		2017338	0					
ANR	2017670	ArgumentList	& patterns [ i ] . pat		2017338	1					
ANR	2017671	Argument	& patterns [ i ] . pat		2017338	0					
ANR	2017672	UnaryOperationExpression	& patterns [ i ] . pat		2017338	0					
ANR	2017673	UnaryOperator	&		2017338	0					
ANR	2017674	MemberAccess	patterns [ i ] . pat		2017338	1					
ANR	2017675	ArrayIndexing	patterns [ i ]		2017338	0					
ANR	2017676	Identifier	patterns		2017338	0					
ANR	2017677	Identifier	i		2017338	1					
ANR	2017678	Identifier	pat		2017338	1					
ANR	2017679	Identifier	string_key		2017338	1					
ANR	2017680	ExpressionStatement	L ( & patterns [ i ] . pat ) = string_key_len	2972:3:71760:71796	2017338	9	True				
ANR	2017681	AssignmentExpression	L ( & patterns [ i ] . pat ) = string_key_len		2017338	0		=			
ANR	2017682	CallExpression	L ( & patterns [ i ] . pat )		2017338	0					
ANR	2017683	Callee	L		2017338	0					
ANR	2017684	Identifier	L		2017338	0					
ANR	2017685	ArgumentList	& patterns [ i ] . pat		2017338	1					
ANR	2017686	Argument	& patterns [ i ] . pat		2017338	0					
ANR	2017687	UnaryOperationExpression	& patterns [ i ] . pat		2017338	0					
ANR	2017688	UnaryOperator	&		2017338	0					
ANR	2017689	MemberAccess	patterns [ i ] . pat		2017338	1					
ANR	2017690	ArrayIndexing	patterns [ i ]		2017338	0					
ANR	2017691	Identifier	patterns		2017338	0					
ANR	2017692	Identifier	i		2017338	1					
ANR	2017693	Identifier	pat		2017338	1					
ANR	2017694	Identifier	string_key_len		2017338	1					
ANR	2017695	ExpressionStatement	S ( & patterns [ i ] . repl ) = Z_STRVAL_PP ( entry )	2973:3:71801:71842	2017338	10	True				
ANR	2017696	AssignmentExpression	S ( & patterns [ i ] . repl ) = Z_STRVAL_PP ( entry )		2017338	0		=			
ANR	2017697	CallExpression	S ( & patterns [ i ] . repl )		2017338	0					
ANR	2017698	Callee	S		2017338	0					
ANR	2017699	Identifier	S		2017338	0					
ANR	2017700	ArgumentList	& patterns [ i ] . repl		2017338	1					
ANR	2017701	Argument	& patterns [ i ] . repl		2017338	0					
ANR	2017702	UnaryOperationExpression	& patterns [ i ] . repl		2017338	0					
ANR	2017703	UnaryOperator	&		2017338	0					
ANR	2017704	MemberAccess	patterns [ i ] . repl		2017338	1					
ANR	2017705	ArrayIndexing	patterns [ i ]		2017338	0					
ANR	2017706	Identifier	patterns		2017338	0					
ANR	2017707	Identifier	i		2017338	1					
ANR	2017708	Identifier	repl		2017338	1					
ANR	2017709	CallExpression	Z_STRVAL_PP ( entry )		2017338	1					
ANR	2017710	Callee	Z_STRVAL_PP		2017338	0					
ANR	2017711	Identifier	Z_STRVAL_PP		2017338	0					
ANR	2017712	ArgumentList	entry		2017338	1					
ANR	2017713	Argument	entry		2017338	0					
ANR	2017714	Identifier	entry		2017338	0					
ANR	2017715	ExpressionStatement	L ( & patterns [ i ] . repl ) = Z_STRLEN_PP ( entry )	2974:3:71847:71888	2017338	11	True				
ANR	2017716	AssignmentExpression	L ( & patterns [ i ] . repl ) = Z_STRLEN_PP ( entry )		2017338	0		=			
ANR	2017717	CallExpression	L ( & patterns [ i ] . repl )		2017338	0					
ANR	2017718	Callee	L		2017338	0					
ANR	2017719	Identifier	L		2017338	0					
ANR	2017720	ArgumentList	& patterns [ i ] . repl		2017338	1					
ANR	2017721	Argument	& patterns [ i ] . repl		2017338	0					
ANR	2017722	UnaryOperationExpression	& patterns [ i ] . repl		2017338	0					
ANR	2017723	UnaryOperator	&		2017338	0					
ANR	2017724	MemberAccess	patterns [ i ] . repl		2017338	1					
ANR	2017725	ArrayIndexing	patterns [ i ]		2017338	0					
ANR	2017726	Identifier	patterns		2017338	0					
ANR	2017727	Identifier	i		2017338	1					
ANR	2017728	Identifier	repl		2017338	1					
ANR	2017729	CallExpression	Z_STRLEN_PP ( entry )		2017338	1					
ANR	2017730	Callee	Z_STRLEN_PP		2017338	0					
ANR	2017731	Identifier	Z_STRLEN_PP		2017338	0					
ANR	2017732	ArgumentList	entry		2017338	1					
ANR	2017733	Argument	entry		2017338	0					
ANR	2017734	Identifier	entry		2017338	0					
ANR	2017735	ExpressionStatement	i ++	2975:3:71893:71896	2017338	12	True				
ANR	2017736	PostIncDecOperationExpression	i ++		2017338	0					
ANR	2017737	Identifier	i		2017338	0					
ANR	2017738	IncDec	++		2017338	1					
ANR	2017739	IfStatement	if ( tzv )		2017338	13					
ANR	2017740	Condition	tzv	2977:7:71906:71908	2017338	0	True				
ANR	2017741	Identifier	tzv		2017338	0					
ANR	2017742	CompoundStatement		54:12:1584:1584	2017338	1					
ANR	2017743	ExpressionStatement	efree ( tzv )	2978:4:71917:71927	2017338	0	True				
ANR	2017744	CallExpression	efree ( tzv )		2017338	0					
ANR	2017745	Callee	efree		2017338	0					
ANR	2017746	Identifier	efree		2017338	0					
ANR	2017747	ArgumentList	tzv		2017338	1					
ANR	2017748	Argument	tzv		2017338	0					
ANR	2017749	Identifier	tzv		2017338	0					
ANR	2017750	ExpressionStatement	* outsize = i	2983:1:71943:71955	2017338	8	True				
ANR	2017751	AssignmentExpression	* outsize = i		2017338	0		=			
ANR	2017752	UnaryOperationExpression	* outsize		2017338	0					
ANR	2017753	UnaryOperator	*		2017338	0					
ANR	2017754	Identifier	outsize		2017338	1					
ANR	2017755	Identifier	i		2017338	1					
ANR	2017756	ReturnStatement	return patterns ;	2984:1:71958:71973	2017338	9	True				
ANR	2017757	Identifier	patterns		2017338	0					
ANR	2017758	ReturnType	static PATNREPL *		2017338	1					
ANR	2017759	Identifier	php_strtr_array_prepare_repls		2017338	2					
ANR	2017760	ParameterList	"int slen , HashTable * pats , zend_llist * * allocs , int * outsize"		2017338	3					
ANR	2017761	Parameter	int slen	2923:47:70264:70271	2017338	0	True				
ANR	2017762	ParameterType	int		2017338	0					
ANR	2017763	Identifier	slen		2017338	1					
ANR	2017764	Parameter	HashTable * pats	2923:57:70274:70288	2017338	1	True				
ANR	2017765	ParameterType	HashTable *		2017338	0					
ANR	2017766	Identifier	pats		2017338	1					
ANR	2017767	Parameter	zend_llist * * allocs	2923:74:70291:70309	2017338	2	True				
ANR	2017768	ParameterType	zend_llist * *		2017338	0					
ANR	2017769	Identifier	allocs		2017338	1					
ANR	2017770	Parameter	int * outsize	2923:95:70312:70323	2017338	3	True				
ANR	2017771	ParameterType	int *		2017338	0					
ANR	2017772	Identifier	outsize		2017338	1					
ANR	2017773	CFGEntryNode	ENTRY		2017338		True				
ANR	2017774	CFGExitNode	EXIT		2017338		True				
ANR	2017775	Symbol	zend_hash_get_current_data_ex		2017338						
ANR	2017776	Symbol	pats		2017338						
ANR	2017777	Symbol	* patterns		2017338						
ANR	2017778	Symbol	L		2017338						
ANR	2017779	Symbol	zend_spprintf		2017338						
ANR	2017780	Symbol	& string_key_len		2017338						
ANR	2017781	Symbol	Z_TYPE_PP		2017338						
ANR	2017782	Symbol	& tzv		2017338						
ANR	2017783	Symbol	emalloc		2017338						
ANR	2017784	Symbol	S		2017338						
ANR	2017785	Symbol	Z_STRVAL_PP		2017338						
ANR	2017786	Symbol	& php_strtr_free_strp		2017338						
ANR	2017787	Symbol	IS_STRING		2017338						
ANR	2017788	Symbol	outsize		2017338						
ANR	2017789	Symbol	hpos		2017338						
ANR	2017790	Symbol	& string_key		2017338						
ANR	2017791	Symbol	* entry		2017338						
ANR	2017792	Symbol	num_pats		2017338						
ANR	2017793	Symbol	& patterns [ i ] . pat		2017338						
ANR	2017794	Symbol	SUCCESS		2017338						
ANR	2017795	Symbol	NULL		2017338						
ANR	2017796	Symbol	& num_key		2017338						
ANR	2017797	Symbol	zend_hash_num_elements		2017338						
ANR	2017798	Symbol	patterns		2017338						
ANR	2017799	Symbol	num_key		2017338						
ANR	2017800	Symbol	i		2017338						
ANR	2017801	Symbol	zend_hash_get_current_key_ex		2017338						
ANR	2017802	Symbol	& Z_STRVAL_PP		2017338						
ANR	2017803	Symbol	& hpos		2017338						
ANR	2017804	Symbol	* outsize		2017338						
ANR	2017805	Symbol	Z_STRLEN_PP		2017338						
ANR	2017806	Symbol	string_key		2017338						
ANR	2017807	Symbol	entry		2017338						
ANR	2017808	Symbol	tzv		2017338						
ANR	2017809	Symbol	& entry		2017338						
ANR	2017810	Symbol	* i		2017338						
ANR	2017811	Symbol	allocs		2017338						
ANR	2017812	Symbol	slen		2017338						
ANR	2017813	Symbol	* allocs		2017338						
ANR	2017814	Symbol	* * allocs		2017338						
ANR	2017815	Symbol	& patterns [ i ] . repl		2017338						
ANR	2017816	Symbol	safe_emalloc		2017338						
ANR	2017817	Symbol	string_key_len		2017338						
ANR	2017818	Function	php_strtr_array_prepare	2989:0:72087:74189							
ANR	2017819	FunctionDef	"php_strtr_array_prepare (STR * text , PATNREPL * patterns , int patnum , int B , int Bp)"		2017818	0					
ANR	2017820	CompoundStatement		2990:0:72183:74189	2017818	0					
ANR	2017821	IdentifierDeclStatement	int i ;	2991:1:72186:72192	2017818	0	True				
ANR	2017822	IdentifierDecl	i		2017818	0					
ANR	2017823	IdentifierDeclType	int		2017818	0					
ANR	2017824	Identifier	i		2017818	1					
ANR	2017825	IdentifierDeclStatement	PPRES * res = emalloc ( sizeof * res ) ;	2992:1:72195:72228	2017818	1	True				
ANR	2017826	IdentifierDecl	* res = emalloc ( sizeof * res )		2017818	0					
ANR	2017827	IdentifierDeclType	PPRES *		2017818	0					
ANR	2017828	Identifier	res		2017818	1					
ANR	2017829	AssignmentExpression	* res = emalloc ( sizeof * res )		2017818	2		=			
ANR	2017830	Identifier	res		2017818	0					
ANR	2017831	CallExpression	emalloc ( sizeof * res )		2017818	1					
ANR	2017832	Callee	emalloc		2017818	0					
ANR	2017833	Identifier	emalloc		2017818	0					
ANR	2017834	ArgumentList	sizeof * res		2017818	1					
ANR	2017835	Argument	sizeof * res		2017818	0					
ANR	2017836	SizeofExpression	sizeof * res		2017818	0					
ANR	2017837	Sizeof	sizeof		2017818	0					
ANR	2017838	UnaryOperationExpression	* res		2017818	1					
ANR	2017839	UnaryOperator	*		2017818	0					
ANR	2017840	Identifier	res		2017818	1					
ANR	2017841	ExpressionStatement	res -> m = ( STRLEN ) - 1	2994:1:72232:72251	2017818	2	True				
ANR	2017842	AssignmentExpression	res -> m = ( STRLEN ) - 1		2017818	0		=			
ANR	2017843	PtrMemberAccess	res -> m		2017818	0					
ANR	2017844	Identifier	res		2017818	0					
ANR	2017845	Identifier	m		2017818	1					
ANR	2017846	CastExpression	( STRLEN ) - 1		2017818	1					
ANR	2017847	CastTarget	STRLEN		2017818	0					
ANR	2017848	UnaryOperationExpression	- 1		2017818	1					
ANR	2017849	UnaryOperator	-		2017818	0					
ANR	2017850	PrimaryExpression	1		2017818	1					
ANR	2017851	ForStatement	for ( i = 0 ; i < patnum ; i ++ )		2017818	3					
ANR	2017852	ForInit	i = 0 ;	2995:6:72259:72264	2017818	0	True				
ANR	2017853	AssignmentExpression	i = 0		2017818	0		=			
ANR	2017854	Identifier	i		2017818	0					
ANR	2017855	PrimaryExpression	0		2017818	1					
ANR	2017856	Condition	i < patnum	2995:13:72266:72275	2017818	1	True				
ANR	2017857	RelationalExpression	i < patnum		2017818	0		<			
ANR	2017858	Identifier	i		2017818	0					
ANR	2017859	Identifier	patnum		2017818	1					
ANR	2017860	PostIncDecOperationExpression	i ++	2995:25:72278:72280	2017818	2	True				
ANR	2017861	Identifier	i		2017818	0					
ANR	2017862	IncDec	++		2017818	1					
ANR	2017863	CompoundStatement		6:30:99:99	2017818	3					
ANR	2017864	IfStatement	if ( L ( & patterns [ i ] . pat ) < res -> m )		2017818	0					
ANR	2017865	Condition	L ( & patterns [ i ] . pat ) < res -> m	2996:6:72291:72318	2017818	0	True				
ANR	2017866	RelationalExpression	L ( & patterns [ i ] . pat ) < res -> m		2017818	0		<			
ANR	2017867	CallExpression	L ( & patterns [ i ] . pat )		2017818	0					
ANR	2017868	Callee	L		2017818	0					
ANR	2017869	Identifier	L		2017818	0					
ANR	2017870	ArgumentList	& patterns [ i ] . pat		2017818	1					
ANR	2017871	Argument	& patterns [ i ] . pat		2017818	0					
ANR	2017872	UnaryOperationExpression	& patterns [ i ] . pat		2017818	0					
ANR	2017873	UnaryOperator	&		2017818	0					
ANR	2017874	MemberAccess	patterns [ i ] . pat		2017818	1					
ANR	2017875	ArrayIndexing	patterns [ i ]		2017818	0					
ANR	2017876	Identifier	patterns		2017818	0					
ANR	2017877	Identifier	i		2017818	1					
ANR	2017878	Identifier	pat		2017818	1					
ANR	2017879	PtrMemberAccess	res -> m		2017818	1					
ANR	2017880	Identifier	res		2017818	0					
ANR	2017881	Identifier	m		2017818	1					
ANR	2017882	CompoundStatement		7:36:137:137	2017818	1					
ANR	2017883	ExpressionStatement	res -> m = L ( & patterns [ i ] . pat )	2997:3:72326:72354	2017818	0	True				
ANR	2017884	AssignmentExpression	res -> m = L ( & patterns [ i ] . pat )		2017818	0		=			
ANR	2017885	PtrMemberAccess	res -> m		2017818	0					
ANR	2017886	Identifier	res		2017818	0					
ANR	2017887	Identifier	m		2017818	1					
ANR	2017888	CallExpression	L ( & patterns [ i ] . pat )		2017818	1					
ANR	2017889	Callee	L		2017818	0					
ANR	2017890	Identifier	L		2017818	0					
ANR	2017891	ArgumentList	& patterns [ i ] . pat		2017818	1					
ANR	2017892	Argument	& patterns [ i ] . pat		2017818	0					
ANR	2017893	UnaryOperationExpression	& patterns [ i ] . pat		2017818	0					
ANR	2017894	UnaryOperator	&		2017818	0					
ANR	2017895	MemberAccess	patterns [ i ] . pat		2017818	1					
ANR	2017896	ArrayIndexing	patterns [ i ]		2017818	0					
ANR	2017897	Identifier	patterns		2017818	0					
ANR	2017898	Identifier	i		2017818	1					
ANR	2017899	Identifier	pat		2017818	1					
ANR	2017900	ExpressionStatement	assert ( res -> m > 0 && res -> m != ( STRLEN ) - 1 )	3000:1:72364:72406	2017818	4	True				
ANR	2017901	CallExpression	assert ( res -> m > 0 && res -> m != ( STRLEN ) - 1 )		2017818	0					
ANR	2017902	Callee	assert		2017818	0					
ANR	2017903	Identifier	assert		2017818	0					
ANR	2017904	ArgumentList	res -> m > 0 && res -> m != ( STRLEN ) - 1		2017818	1					
ANR	2017905	Argument	res -> m > 0 && res -> m != ( STRLEN ) - 1		2017818	0					
ANR	2017906	AndExpression	res -> m > 0 && res -> m != ( STRLEN ) - 1		2017818	0		&&			
ANR	2017907	RelationalExpression	res -> m > 0		2017818	0		>			
ANR	2017908	PtrMemberAccess	res -> m		2017818	0					
ANR	2017909	Identifier	res		2017818	0					
ANR	2017910	Identifier	m		2017818	1					
ANR	2017911	PrimaryExpression	0		2017818	1					
ANR	2017912	EqualityExpression	res -> m != ( STRLEN ) - 1		2017818	1		!=			
ANR	2017913	PtrMemberAccess	res -> m		2017818	0					
ANR	2017914	Identifier	res		2017818	0					
ANR	2017915	Identifier	m		2017818	1					
ANR	2017916	CastExpression	( STRLEN ) - 1		2017818	1					
ANR	2017917	CastTarget	STRLEN		2017818	0					
ANR	2017918	UnaryOperationExpression	- 1		2017818	1					
ANR	2017919	UnaryOperator	-		2017818	0					
ANR	2017920	PrimaryExpression	1		2017818	1					
ANR	2017921	ExpressionStatement	"res -> B = B = MIN ( B , res -> m )"	3001:1:72409:72437	2017818	5	True				
ANR	2017922	AssignmentExpression	"res -> B = B = MIN ( B , res -> m )"		2017818	0		=			
ANR	2017923	PtrMemberAccess	res -> B		2017818	0					
ANR	2017924	Identifier	res		2017818	0					
ANR	2017925	Identifier	B		2017818	1					
ANR	2017926	AssignmentExpression	"B = MIN ( B , res -> m )"		2017818	1		=			
ANR	2017927	Identifier	B		2017818	0					
ANR	2017928	CallExpression	"MIN ( B , res -> m )"		2017818	1					
ANR	2017929	Callee	MIN		2017818	0					
ANR	2017930	Identifier	MIN		2017818	0					
ANR	2017931	ArgumentList	B		2017818	1					
ANR	2017932	Argument	B		2017818	0					
ANR	2017933	Identifier	B		2017818	0					
ANR	2017934	Argument	res -> m		2017818	1					
ANR	2017935	PtrMemberAccess	res -> m		2017818	0					
ANR	2017936	Identifier	res		2017818	0					
ANR	2017937	Identifier	m		2017818	1					
ANR	2017938	ExpressionStatement	"res -> Bp = Bp = MIN ( Bp , res -> m )"	3002:1:72440:72470	2017818	6	True				
ANR	2017939	AssignmentExpression	"res -> Bp = Bp = MIN ( Bp , res -> m )"		2017818	0		=			
ANR	2017940	PtrMemberAccess	res -> Bp		2017818	0					
ANR	2017941	Identifier	res		2017818	0					
ANR	2017942	Identifier	Bp		2017818	1					
ANR	2017943	AssignmentExpression	"Bp = MIN ( Bp , res -> m )"		2017818	1		=			
ANR	2017944	Identifier	Bp		2017818	0					
ANR	2017945	CallExpression	"MIN ( Bp , res -> m )"		2017818	1					
ANR	2017946	Callee	MIN		2017818	0					
ANR	2017947	Identifier	MIN		2017818	0					
ANR	2017948	ArgumentList	Bp		2017818	1					
ANR	2017949	Argument	Bp		2017818	0					
ANR	2017950	Identifier	Bp		2017818	0					
ANR	2017951	Argument	res -> m		2017818	1					
ANR	2017952	PtrMemberAccess	res -> m		2017818	0					
ANR	2017953	Identifier	res		2017818	0					
ANR	2017954	Identifier	m		2017818	1					
ANR	2017955	ExpressionStatement	"res -> shift = safe_emalloc ( SHIFT_TAB_SIZE , sizeof ( * res -> shift -> entries ) , sizeof ( * res -> shift ) )"	3004:1:72474:72566	2017818	7	True				
ANR	2017956	AssignmentExpression	"res -> shift = safe_emalloc ( SHIFT_TAB_SIZE , sizeof ( * res -> shift -> entries ) , sizeof ( * res -> shift ) )"		2017818	0		=			
ANR	2017957	PtrMemberAccess	res -> shift		2017818	0					
ANR	2017958	Identifier	res		2017818	0					
ANR	2017959	Identifier	shift		2017818	1					
ANR	2017960	CallExpression	"safe_emalloc ( SHIFT_TAB_SIZE , sizeof ( * res -> shift -> entries ) , sizeof ( * res -> shift ) )"		2017818	1					
ANR	2017961	Callee	safe_emalloc		2017818	0					
ANR	2017962	Identifier	safe_emalloc		2017818	0					
ANR	2017963	ArgumentList	SHIFT_TAB_SIZE		2017818	1					
ANR	2017964	Argument	SHIFT_TAB_SIZE		2017818	0					
ANR	2017965	Identifier	SHIFT_TAB_SIZE		2017818	0					
ANR	2017966	Argument	sizeof ( * res -> shift -> entries )		2017818	1					
ANR	2017967	SizeofExpression	sizeof ( * res -> shift -> entries )		2017818	0					
ANR	2017968	Sizeof	sizeof		2017818	0					
ANR	2017969	UnaryOperationExpression	* res -> shift -> entries		2017818	1					
ANR	2017970	UnaryOperator	*		2017818	0					
ANR	2017971	PtrMemberAccess	res -> shift -> entries		2017818	1					
ANR	2017972	PtrMemberAccess	res -> shift		2017818	0					
ANR	2017973	Identifier	res		2017818	0					
ANR	2017974	Identifier	shift		2017818	1					
ANR	2017975	Identifier	entries		2017818	1					
ANR	2017976	Argument	sizeof ( * res -> shift )		2017818	2					
ANR	2017977	SizeofExpression	sizeof ( * res -> shift )		2017818	0					
ANR	2017978	Sizeof	sizeof		2017818	0					
ANR	2017979	UnaryOperationExpression	* res -> shift		2017818	1					
ANR	2017980	UnaryOperator	*		2017818	0					
ANR	2017981	PtrMemberAccess	res -> shift		2017818	1					
ANR	2017982	Identifier	res		2017818	0					
ANR	2017983	Identifier	shift		2017818	1					
ANR	2017984	ExpressionStatement	res -> shift -> table_mask = SHIFT_TAB_SIZE - 1	3005:1:72569:72612	2017818	8	True				
ANR	2017985	AssignmentExpression	res -> shift -> table_mask = SHIFT_TAB_SIZE - 1		2017818	0		=			
ANR	2017986	PtrMemberAccess	res -> shift -> table_mask		2017818	0					
ANR	2017987	PtrMemberAccess	res -> shift		2017818	0					
ANR	2017988	Identifier	res		2017818	0					
ANR	2017989	Identifier	shift		2017818	1					
ANR	2017990	Identifier	table_mask		2017818	1					
ANR	2017991	AdditiveExpression	SHIFT_TAB_SIZE - 1		2017818	1		-			
ANR	2017992	Identifier	SHIFT_TAB_SIZE		2017818	0					
ANR	2017993	PrimaryExpression	1		2017818	1					
ANR	2017994	ExpressionStatement	"php_strtr_populate_shift ( patterns , patnum , B , res -> m , res -> shift )"	3006:1:72615:72680	2017818	9	True				
ANR	2017995	CallExpression	"php_strtr_populate_shift ( patterns , patnum , B , res -> m , res -> shift )"		2017818	0					
ANR	2017996	Callee	php_strtr_populate_shift		2017818	0					
ANR	2017997	Identifier	php_strtr_populate_shift		2017818	0					
ANR	2017998	ArgumentList	patterns		2017818	1					
ANR	2017999	Argument	patterns		2017818	0					
ANR	2018000	Identifier	patterns		2017818	0					
ANR	2018001	Argument	patnum		2017818	1					
ANR	2018002	Identifier	patnum		2017818	0					
ANR	2018003	Argument	B		2017818	2					
ANR	2018004	Identifier	B		2017818	0					
ANR	2018005	Argument	res -> m		2017818	3					
ANR	2018006	PtrMemberAccess	res -> m		2017818	0					
ANR	2018007	Identifier	res		2017818	0					
ANR	2018008	Identifier	m		2017818	1					
ANR	2018009	Argument	res -> shift		2017818	4					
ANR	2018010	PtrMemberAccess	res -> shift		2017818	0					
ANR	2018011	Identifier	res		2017818	0					
ANR	2018012	Identifier	shift		2017818	1					
ANR	2018013	ExpressionStatement	"res -> hash = safe_emalloc ( HASH_TAB_SIZE , sizeof ( * res -> hash -> entries ) , sizeof ( * res -> hash ) )"	3008:1:72684:72772	2017818	10	True				
ANR	2018014	AssignmentExpression	"res -> hash = safe_emalloc ( HASH_TAB_SIZE , sizeof ( * res -> hash -> entries ) , sizeof ( * res -> hash ) )"		2017818	0		=			
ANR	2018015	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018016	Identifier	res		2017818	0					
ANR	2018017	Identifier	hash		2017818	1					
ANR	2018018	CallExpression	"safe_emalloc ( HASH_TAB_SIZE , sizeof ( * res -> hash -> entries ) , sizeof ( * res -> hash ) )"		2017818	1					
ANR	2018019	Callee	safe_emalloc		2017818	0					
ANR	2018020	Identifier	safe_emalloc		2017818	0					
ANR	2018021	ArgumentList	HASH_TAB_SIZE		2017818	1					
ANR	2018022	Argument	HASH_TAB_SIZE		2017818	0					
ANR	2018023	Identifier	HASH_TAB_SIZE		2017818	0					
ANR	2018024	Argument	sizeof ( * res -> hash -> entries )		2017818	1					
ANR	2018025	SizeofExpression	sizeof ( * res -> hash -> entries )		2017818	0					
ANR	2018026	Sizeof	sizeof		2017818	0					
ANR	2018027	UnaryOperationExpression	* res -> hash -> entries		2017818	1					
ANR	2018028	UnaryOperator	*		2017818	0					
ANR	2018029	PtrMemberAccess	res -> hash -> entries		2017818	1					
ANR	2018030	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018031	Identifier	res		2017818	0					
ANR	2018032	Identifier	hash		2017818	1					
ANR	2018033	Identifier	entries		2017818	1					
ANR	2018034	Argument	sizeof ( * res -> hash )		2017818	2					
ANR	2018035	SizeofExpression	sizeof ( * res -> hash )		2017818	0					
ANR	2018036	Sizeof	sizeof		2017818	0					
ANR	2018037	UnaryOperationExpression	* res -> hash		2017818	1					
ANR	2018038	UnaryOperator	*		2017818	0					
ANR	2018039	PtrMemberAccess	res -> hash		2017818	1					
ANR	2018040	Identifier	res		2017818	0					
ANR	2018041	Identifier	hash		2017818	1					
ANR	2018042	ExpressionStatement	res -> hash -> table_mask = HASH_TAB_SIZE - 1	3009:1:72775:72816	2017818	11	True				
ANR	2018043	AssignmentExpression	res -> hash -> table_mask = HASH_TAB_SIZE - 1		2017818	0		=			
ANR	2018044	PtrMemberAccess	res -> hash -> table_mask		2017818	0					
ANR	2018045	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018046	Identifier	res		2017818	0					
ANR	2018047	Identifier	hash		2017818	1					
ANR	2018048	Identifier	table_mask		2017818	1					
ANR	2018049	AdditiveExpression	HASH_TAB_SIZE - 1		2017818	1		-			
ANR	2018050	Identifier	HASH_TAB_SIZE		2017818	0					
ANR	2018051	PrimaryExpression	1		2017818	1					
ANR	2018052	ExpressionStatement	"res -> patterns = safe_emalloc ( patnum , sizeof ( * res -> patterns ) , 0 )"	3011:1:72820:72883	2017818	12	True				
ANR	2018053	AssignmentExpression	"res -> patterns = safe_emalloc ( patnum , sizeof ( * res -> patterns ) , 0 )"		2017818	0		=			
ANR	2018054	PtrMemberAccess	res -> patterns		2017818	0					
ANR	2018055	Identifier	res		2017818	0					
ANR	2018056	Identifier	patterns		2017818	1					
ANR	2018057	CallExpression	"safe_emalloc ( patnum , sizeof ( * res -> patterns ) , 0 )"		2017818	1					
ANR	2018058	Callee	safe_emalloc		2017818	0					
ANR	2018059	Identifier	safe_emalloc		2017818	0					
ANR	2018060	ArgumentList	patnum		2017818	1					
ANR	2018061	Argument	patnum		2017818	0					
ANR	2018062	Identifier	patnum		2017818	0					
ANR	2018063	Argument	sizeof ( * res -> patterns )		2017818	1					
ANR	2018064	SizeofExpression	sizeof ( * res -> patterns )		2017818	0					
ANR	2018065	Sizeof	sizeof		2017818	0					
ANR	2018066	UnaryOperationExpression	* res -> patterns		2017818	1					
ANR	2018067	UnaryOperator	*		2017818	0					
ANR	2018068	PtrMemberAccess	res -> patterns		2017818	1					
ANR	2018069	Identifier	res		2017818	0					
ANR	2018070	Identifier	patterns		2017818	1					
ANR	2018071	Argument	0		2017818	2					
ANR	2018072	PrimaryExpression	0		2017818	0					
ANR	2018073	ExpressionStatement	"memcpy ( res -> patterns , patterns , sizeof ( * patterns ) * patnum )"	3012:1:72886:72945	2017818	13	True				
ANR	2018074	CallExpression	"memcpy ( res -> patterns , patterns , sizeof ( * patterns ) * patnum )"		2017818	0					
ANR	2018075	Callee	memcpy		2017818	0					
ANR	2018076	Identifier	memcpy		2017818	0					
ANR	2018077	ArgumentList	res -> patterns		2017818	1					
ANR	2018078	Argument	res -> patterns		2017818	0					
ANR	2018079	PtrMemberAccess	res -> patterns		2017818	0					
ANR	2018080	Identifier	res		2017818	0					
ANR	2018081	Identifier	patterns		2017818	1					
ANR	2018082	Argument	patterns		2017818	1					
ANR	2018083	Identifier	patterns		2017818	0					
ANR	2018084	Argument	sizeof ( * patterns ) * patnum		2017818	2					
ANR	2018085	MultiplicativeExpression	sizeof ( * patterns ) * patnum		2017818	0		*			
ANR	2018086	SizeofExpression	sizeof ( * patterns )		2017818	0					
ANR	2018087	Sizeof	sizeof		2017818	0					
ANR	2018088	UnaryOperationExpression	* patterns		2017818	1					
ANR	2018089	UnaryOperator	*		2017818	0					
ANR	2018090	Identifier	patterns		2017818	1					
ANR	2018091	Identifier	patnum		2017818	1					
ANR	2018092	ExpressionStatement	"zend_qsort_r ( res -> patterns , patnum , sizeof ( * res -> patterns ) , php_strtr_compare_hash_suffix , res , NULL )"	3014:1:72959:73063	2017818	14	True				
ANR	2018093	CallExpression	"zend_qsort_r ( res -> patterns , patnum , sizeof ( * res -> patterns ) , php_strtr_compare_hash_suffix , res , NULL )"		2017818	0					
ANR	2018094	Callee	zend_qsort_r		2017818	0					
ANR	2018095	Identifier	zend_qsort_r		2017818	0					
ANR	2018096	ArgumentList	res -> patterns		2017818	1					
ANR	2018097	Argument	res -> patterns		2017818	0					
ANR	2018098	PtrMemberAccess	res -> patterns		2017818	0					
ANR	2018099	Identifier	res		2017818	0					
ANR	2018100	Identifier	patterns		2017818	1					
ANR	2018101	Argument	patnum		2017818	1					
ANR	2018102	Identifier	patnum		2017818	0					
ANR	2018103	Argument	sizeof ( * res -> patterns )		2017818	2					
ANR	2018104	SizeofExpression	sizeof ( * res -> patterns )		2017818	0					
ANR	2018105	Sizeof	sizeof		2017818	0					
ANR	2018106	UnaryOperationExpression	* res -> patterns		2017818	1					
ANR	2018107	UnaryOperator	*		2017818	0					
ANR	2018108	PtrMemberAccess	res -> patterns		2017818	1					
ANR	2018109	Identifier	res		2017818	0					
ANR	2018110	Identifier	patterns		2017818	1					
ANR	2018111	Argument	php_strtr_compare_hash_suffix		2017818	3					
ANR	2018112	Identifier	php_strtr_compare_hash_suffix		2017818	0					
ANR	2018113	Argument	res		2017818	4					
ANR	2018114	Identifier	res		2017818	0					
ANR	2018115	Argument	NULL		2017818	5					
ANR	2018116	Identifier	NULL		2017818	0					
ANR	2018117	ExpressionStatement	"res -> prefix = safe_emalloc ( patnum , sizeof ( * res -> prefix ) , 0 )"	3021:1:73205:73264	2017818	15	True				
ANR	2018118	AssignmentExpression	"res -> prefix = safe_emalloc ( patnum , sizeof ( * res -> prefix ) , 0 )"		2017818	0		=			
ANR	2018119	PtrMemberAccess	res -> prefix		2017818	0					
ANR	2018120	Identifier	res		2017818	0					
ANR	2018121	Identifier	prefix		2017818	1					
ANR	2018122	CallExpression	"safe_emalloc ( patnum , sizeof ( * res -> prefix ) , 0 )"		2017818	1					
ANR	2018123	Callee	safe_emalloc		2017818	0					
ANR	2018124	Identifier	safe_emalloc		2017818	0					
ANR	2018125	ArgumentList	patnum		2017818	1					
ANR	2018126	Argument	patnum		2017818	0					
ANR	2018127	Identifier	patnum		2017818	0					
ANR	2018128	Argument	sizeof ( * res -> prefix )		2017818	1					
ANR	2018129	SizeofExpression	sizeof ( * res -> prefix )		2017818	0					
ANR	2018130	Sizeof	sizeof		2017818	0					
ANR	2018131	UnaryOperationExpression	* res -> prefix		2017818	1					
ANR	2018132	UnaryOperator	*		2017818	0					
ANR	2018133	PtrMemberAccess	res -> prefix		2017818	1					
ANR	2018134	Identifier	res		2017818	0					
ANR	2018135	Identifier	prefix		2017818	1					
ANR	2018136	Argument	0		2017818	2					
ANR	2018137	PrimaryExpression	0		2017818	0					
ANR	2018138	ForStatement	for ( i = 0 ; i < patnum ; i ++ )		2017818	16					
ANR	2018139	ForInit	i = 0 ;	3022:6:73272:73277	2017818	0	True				
ANR	2018140	AssignmentExpression	i = 0		2017818	0		=			
ANR	2018141	Identifier	i		2017818	0					
ANR	2018142	PrimaryExpression	0		2017818	1					
ANR	2018143	Condition	i < patnum	3022:13:73279:73288	2017818	1	True				
ANR	2018144	RelationalExpression	i < patnum		2017818	0		<			
ANR	2018145	Identifier	i		2017818	0					
ANR	2018146	Identifier	patnum		2017818	1					
ANR	2018147	PostIncDecOperationExpression	i ++	3022:25:73291:73293	2017818	2	True				
ANR	2018148	Identifier	i		2017818	0					
ANR	2018149	IncDec	++		2017818	1					
ANR	2018150	CompoundStatement		33:30:1112:1112	2017818	3					
ANR	2018151	ExpressionStatement	"res -> prefix [ i ] = php_strtr_hash ( S ( & res -> patterns [ i ] . pat ) , Bp )"	3023:2:73300:73361	2017818	0	True				
ANR	2018152	AssignmentExpression	"res -> prefix [ i ] = php_strtr_hash ( S ( & res -> patterns [ i ] . pat ) , Bp )"		2017818	0		=			
ANR	2018153	ArrayIndexing	res -> prefix [ i ]		2017818	0					
ANR	2018154	PtrMemberAccess	res -> prefix		2017818	0					
ANR	2018155	Identifier	res		2017818	0					
ANR	2018156	Identifier	prefix		2017818	1					
ANR	2018157	Identifier	i		2017818	1					
ANR	2018158	CallExpression	"php_strtr_hash ( S ( & res -> patterns [ i ] . pat ) , Bp )"		2017818	1					
ANR	2018159	Callee	php_strtr_hash		2017818	0					
ANR	2018160	Identifier	php_strtr_hash		2017818	0					
ANR	2018161	ArgumentList	S ( & res -> patterns [ i ] . pat )		2017818	1					
ANR	2018162	Argument	S ( & res -> patterns [ i ] . pat )		2017818	0					
ANR	2018163	CallExpression	S ( & res -> patterns [ i ] . pat )		2017818	0					
ANR	2018164	Callee	S		2017818	0					
ANR	2018165	Identifier	S		2017818	0					
ANR	2018166	ArgumentList	& res -> patterns [ i ] . pat		2017818	1					
ANR	2018167	Argument	& res -> patterns [ i ] . pat		2017818	0					
ANR	2018168	UnaryOperationExpression	& res -> patterns [ i ] . pat		2017818	0					
ANR	2018169	UnaryOperator	&		2017818	0					
ANR	2018170	MemberAccess	res -> patterns [ i ] . pat		2017818	1					
ANR	2018171	ArrayIndexing	res -> patterns [ i ]		2017818	0					
ANR	2018172	PtrMemberAccess	res -> patterns		2017818	0					
ANR	2018173	Identifier	res		2017818	0					
ANR	2018174	Identifier	patterns		2017818	1					
ANR	2018175	Identifier	i		2017818	1					
ANR	2018176	Identifier	pat		2017818	1					
ANR	2018177	Argument	Bp		2017818	1					
ANR	2018178	Identifier	Bp		2017818	0					
ANR	2018179	ForStatement	for ( i = 0 ; i < HASH_TAB_SIZE ; i ++ )		2017818	17					
ANR	2018180	ForInit	i = 0 ;	3027:6:73410:73415	2017818	0	True				
ANR	2018181	AssignmentExpression	i = 0		2017818	0		=			
ANR	2018182	Identifier	i		2017818	0					
ANR	2018183	PrimaryExpression	0		2017818	1					
ANR	2018184	Condition	i < HASH_TAB_SIZE	3027:13:73417:73433	2017818	1	True				
ANR	2018185	RelationalExpression	i < HASH_TAB_SIZE		2017818	0		<			
ANR	2018186	Identifier	i		2017818	0					
ANR	2018187	Identifier	HASH_TAB_SIZE		2017818	1					
ANR	2018188	PostIncDecOperationExpression	i ++	3027:32:73436:73438	2017818	2	True				
ANR	2018189	Identifier	i		2017818	0					
ANR	2018190	IncDec	++		2017818	1					
ANR	2018191	CompoundStatement		38:37:1257:1257	2017818	3					
ANR	2018192	ExpressionStatement	res -> hash -> entries [ i ] = - 1	3028:2:73445:73471	2017818	0	True				
ANR	2018193	AssignmentExpression	res -> hash -> entries [ i ] = - 1		2017818	0		=			
ANR	2018194	ArrayIndexing	res -> hash -> entries [ i ]		2017818	0					
ANR	2018195	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018196	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018197	Identifier	res		2017818	0					
ANR	2018198	Identifier	hash		2017818	1					
ANR	2018199	Identifier	entries		2017818	1					
ANR	2018200	Identifier	i		2017818	1					
ANR	2018201	UnaryOperationExpression	- 1		2017818	1					
ANR	2018202	UnaryOperator	-		2017818	0					
ANR	2018203	PrimaryExpression	1		2017818	1					
ANR	2018204	CompoundStatement		42:2:1297:1313	2017818	18					
ANR	2018205	IdentifierDeclStatement	HASH last_h = - 1 ;	3031:2:73481:73497	2017818	0	True				
ANR	2018206	IdentifierDecl	last_h = - 1		2017818	0					
ANR	2018207	IdentifierDeclType	HASH		2017818	0					
ANR	2018208	Identifier	last_h		2017818	1					
ANR	2018209	AssignmentExpression	last_h = - 1		2017818	2		=			
ANR	2018210	Identifier	last_h		2017818	0					
ANR	2018211	UnaryOperationExpression	- 1		2017818	1					
ANR	2018212	UnaryOperator	-		2017818	0					
ANR	2018213	PrimaryExpression	1		2017818	1					
ANR	2018214	ForStatement	for ( i = 0 ; i < patnum ; i ++ )		2017818	1					
ANR	2018215	ForInit	i = 0 ;	3035:7:73705:73710	2017818	0	True				
ANR	2018216	AssignmentExpression	i = 0		2017818	0		=			
ANR	2018217	Identifier	i		2017818	0					
ANR	2018218	PrimaryExpression	0		2017818	1					
ANR	2018219	Condition	i < patnum	3035:14:73712:73721	2017818	1	True				
ANR	2018220	RelationalExpression	i < patnum		2017818	0		<			
ANR	2018221	Identifier	i		2017818	0					
ANR	2018222	Identifier	patnum		2017818	1					
ANR	2018223	PostIncDecOperationExpression	i ++	3035:26:73724:73726	2017818	2	True				
ANR	2018224	Identifier	i		2017818	0					
ANR	2018225	IncDec	++		2017818	1					
ANR	2018226	CompoundStatement		47:3:1550:1655	2017818	3					
ANR	2018227	IdentifierDeclStatement	"HASH h = php_strtr_hash ( & S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ] , res -> B ) & res -> hash -> table_mask ;"	3036:3:73734:73839	2017818	0	True				
ANR	2018228	IdentifierDecl	"h = php_strtr_hash ( & S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ] , res -> B ) & res -> hash -> table_mask"		2017818	0					
ANR	2018229	IdentifierDeclType	HASH		2017818	0					
ANR	2018230	Identifier	h		2017818	1					
ANR	2018231	AssignmentExpression	"h = php_strtr_hash ( & S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ] , res -> B ) & res -> hash -> table_mask"		2017818	2		=			
ANR	2018232	Identifier	h		2017818	0					
ANR	2018233	BitAndExpression	"php_strtr_hash ( & S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ] , res -> B ) & res -> hash -> table_mask"		2017818	1		&			
ANR	2018234	CallExpression	"php_strtr_hash ( & S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ] , res -> B )"		2017818	0					
ANR	2018235	Callee	php_strtr_hash		2017818	0					
ANR	2018236	Identifier	php_strtr_hash		2017818	0					
ANR	2018237	ArgumentList	& S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ]		2017818	1					
ANR	2018238	Argument	& S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ]		2017818	0					
ANR	2018239	UnaryOperationExpression	& S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ]		2017818	0					
ANR	2018240	UnaryOperator	&		2017818	0					
ANR	2018241	ArrayIndexing	S ( & res -> patterns [ i ] . pat ) [ res -> m - res -> B ]		2017818	1					
ANR	2018242	CallExpression	S ( & res -> patterns [ i ] . pat )		2017818	0					
ANR	2018243	Callee	S		2017818	0					
ANR	2018244	Identifier	S		2017818	0					
ANR	2018245	ArgumentList	& res -> patterns [ i ] . pat		2017818	1					
ANR	2018246	Argument	& res -> patterns [ i ] . pat		2017818	0					
ANR	2018247	UnaryOperationExpression	& res -> patterns [ i ] . pat		2017818	0					
ANR	2018248	UnaryOperator	&		2017818	0					
ANR	2018249	MemberAccess	res -> patterns [ i ] . pat		2017818	1					
ANR	2018250	ArrayIndexing	res -> patterns [ i ]		2017818	0					
ANR	2018251	PtrMemberAccess	res -> patterns		2017818	0					
ANR	2018252	Identifier	res		2017818	0					
ANR	2018253	Identifier	patterns		2017818	1					
ANR	2018254	Identifier	i		2017818	1					
ANR	2018255	Identifier	pat		2017818	1					
ANR	2018256	AdditiveExpression	res -> m - res -> B		2017818	1		-			
ANR	2018257	PtrMemberAccess	res -> m		2017818	0					
ANR	2018258	Identifier	res		2017818	0					
ANR	2018259	Identifier	m		2017818	1					
ANR	2018260	PtrMemberAccess	res -> B		2017818	1					
ANR	2018261	Identifier	res		2017818	0					
ANR	2018262	Identifier	B		2017818	1					
ANR	2018263	Argument	res -> B		2017818	1					
ANR	2018264	PtrMemberAccess	res -> B		2017818	0					
ANR	2018265	Identifier	res		2017818	0					
ANR	2018266	Identifier	B		2017818	1					
ANR	2018267	PtrMemberAccess	res -> hash -> table_mask		2017818	1					
ANR	2018268	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018269	Identifier	res		2017818	0					
ANR	2018270	Identifier	hash		2017818	1					
ANR	2018271	Identifier	table_mask		2017818	1					
ANR	2018272	IfStatement	if ( h != last_h )		2017818	1					
ANR	2018273	Condition	h != last_h	3038:7:73848:73858	2017818	0	True				
ANR	2018274	EqualityExpression	h != last_h		2017818	0		!=			
ANR	2018275	Identifier	h		2017818	0					
ANR	2018276	Identifier	last_h		2017818	1					
ANR	2018277	CompoundStatement		49:20:1677:1677	2017818	1					
ANR	2018278	ExpressionStatement	res -> hash -> entries [ h ] = i	3039:4:73867:73892	2017818	0	True				
ANR	2018279	AssignmentExpression	res -> hash -> entries [ h ] = i		2017818	0		=			
ANR	2018280	ArrayIndexing	res -> hash -> entries [ h ]		2017818	0					
ANR	2018281	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018282	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018283	Identifier	res		2017818	0					
ANR	2018284	Identifier	hash		2017818	1					
ANR	2018285	Identifier	entries		2017818	1					
ANR	2018286	Identifier	h		2017818	1					
ANR	2018287	Identifier	i		2017818	1					
ANR	2018288	ExpressionStatement	last_h = h	3040:4:73898:73908	2017818	1	True				
ANR	2018289	AssignmentExpression	last_h = h		2017818	0		=			
ANR	2018290	Identifier	last_h		2017818	0					
ANR	2018291	Identifier	h		2017818	1					
ANR	2018292	ExpressionStatement	res -> hash -> entries [ HASH_TAB_SIZE ] = patnum	3044:1:73923:73965	2017818	19	True				
ANR	2018293	AssignmentExpression	res -> hash -> entries [ HASH_TAB_SIZE ] = patnum		2017818	0		=			
ANR	2018294	ArrayIndexing	res -> hash -> entries [ HASH_TAB_SIZE ]		2017818	0					
ANR	2018295	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018296	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018297	Identifier	res		2017818	0					
ANR	2018298	Identifier	hash		2017818	1					
ANR	2018299	Identifier	entries		2017818	1					
ANR	2018300	Identifier	HASH_TAB_SIZE		2017818	1					
ANR	2018301	Identifier	patnum		2017818	1					
ANR	2018302	ForStatement	for ( i = HASH_TAB_SIZE - 1 ; i >= 0 ; i -- )		2017818	20					
ANR	2018303	ForInit	i = HASH_TAB_SIZE - 1 ;	3045:6:74015:74036	2017818	0	True				
ANR	2018304	AssignmentExpression	i = HASH_TAB_SIZE - 1		2017818	0		=			
ANR	2018305	Identifier	i		2017818	0					
ANR	2018306	AdditiveExpression	HASH_TAB_SIZE - 1		2017818	1		-			
ANR	2018307	Identifier	HASH_TAB_SIZE		2017818	0					
ANR	2018308	PrimaryExpression	1		2017818	1					
ANR	2018309	Condition	i >= 0	3045:29:74038:74043	2017818	1	True				
ANR	2018310	RelationalExpression	i >= 0		2017818	0		>=			
ANR	2018311	Identifier	i		2017818	0					
ANR	2018312	PrimaryExpression	0		2017818	1					
ANR	2018313	PostIncDecOperationExpression	i --	3045:37:74046:74048	2017818	2	True				
ANR	2018314	Identifier	i		2017818	0					
ANR	2018315	IncDec	--		2017818	1					
ANR	2018316	CompoundStatement		56:42:1867:1867	2017818	3					
ANR	2018317	IfStatement	if ( res -> hash -> entries [ i ] == - 1 )		2017818	0					
ANR	2018318	Condition	res -> hash -> entries [ i ] == - 1	3046:6:74059:74085	2017818	0	True				
ANR	2018319	EqualityExpression	res -> hash -> entries [ i ] == - 1		2017818	0		==			
ANR	2018320	ArrayIndexing	res -> hash -> entries [ i ]		2017818	0					
ANR	2018321	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018322	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018323	Identifier	res		2017818	0					
ANR	2018324	Identifier	hash		2017818	1					
ANR	2018325	Identifier	entries		2017818	1					
ANR	2018326	Identifier	i		2017818	1					
ANR	2018327	UnaryOperationExpression	- 1		2017818	1					
ANR	2018328	UnaryOperator	-		2017818	0					
ANR	2018329	PrimaryExpression	1		2017818	1					
ANR	2018330	CompoundStatement		57:35:1904:1904	2017818	1					
ANR	2018331	ExpressionStatement	res -> hash -> entries [ i ] = res -> hash -> entries [ i + 1 ]	3047:3:74093:74142	2017818	0	True				
ANR	2018332	AssignmentExpression	res -> hash -> entries [ i ] = res -> hash -> entries [ i + 1 ]		2017818	0		=			
ANR	2018333	ArrayIndexing	res -> hash -> entries [ i ]		2017818	0					
ANR	2018334	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018335	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018336	Identifier	res		2017818	0					
ANR	2018337	Identifier	hash		2017818	1					
ANR	2018338	Identifier	entries		2017818	1					
ANR	2018339	Identifier	i		2017818	1					
ANR	2018340	ArrayIndexing	res -> hash -> entries [ i + 1 ]		2017818	1					
ANR	2018341	PtrMemberAccess	res -> hash -> entries		2017818	0					
ANR	2018342	PtrMemberAccess	res -> hash		2017818	0					
ANR	2018343	Identifier	res		2017818	0					
ANR	2018344	Identifier	hash		2017818	1					
ANR	2018345	Identifier	entries		2017818	1					
ANR	2018346	AdditiveExpression	i + 1		2017818	1		+			
ANR	2018347	Identifier	i		2017818	0					
ANR	2018348	PrimaryExpression	1		2017818	1					
ANR	2018349	ExpressionStatement	res -> patnum = patnum	3051:1:74153:74173	2017818	21	True				
ANR	2018350	AssignmentExpression	res -> patnum = patnum		2017818	0		=			
ANR	2018351	PtrMemberAccess	res -> patnum		2017818	0					
ANR	2018352	Identifier	res		2017818	0					
ANR	2018353	Identifier	patnum		2017818	1					
ANR	2018354	Identifier	patnum		2017818	1					
ANR	2018355	ReturnStatement	return res ;	3053:1:74177:74187	2017818	22	True				
ANR	2018356	Identifier	res		2017818	0					
ANR	2018357	ReturnType	static PPRES *		2017818	1					
ANR	2018358	Identifier	php_strtr_array_prepare		2017818	2					
ANR	2018359	ParameterList	"STR * text , PATNREPL * patterns , int patnum , int B , int Bp"		2017818	3					
ANR	2018360	Parameter	STR * text	2989:38:72125:72133	2017818	0	True				
ANR	2018361	ParameterType	STR *		2017818	0					
ANR	2018362	Identifier	text		2017818	1					
ANR	2018363	Parameter	PATNREPL * patterns	2989:49:72136:72153	2017818	1	True				
ANR	2018364	ParameterType	PATNREPL *		2017818	0					
ANR	2018365	Identifier	patterns		2017818	1					
ANR	2018366	Parameter	int patnum	2989:69:72156:72165	2017818	2	True				
ANR	2018367	ParameterType	int		2017818	0					
ANR	2018368	Identifier	patnum		2017818	1					
ANR	2018369	Parameter	int B	2989:81:72168:72172	2017818	3	True				
ANR	2018370	ParameterType	int		2017818	0					
ANR	2018371	Identifier	B		2017818	1					
ANR	2018372	Parameter	int Bp	2989:88:72175:72180	2017818	4	True				
ANR	2018373	ParameterType	int		2017818	0					
ANR	2018374	Identifier	Bp		2017818	1					
ANR	2018375	CFGEntryNode	ENTRY		2017818		True				
ANR	2018376	CFGExitNode	EXIT		2017818		True				
ANR	2018377	Symbol	B		2017818						
ANR	2018378	Symbol	SHIFT_TAB_SIZE		2017818						
ANR	2018379	Symbol	* res -> shift -> entries		2017818						
ANR	2018380	Symbol	& res -> patterns [ i ] . pat		2017818						
ANR	2018381	Symbol	* * res -> shift		2017818						
ANR	2018382	Symbol	* res -> hash		2017818						
ANR	2018383	Symbol	* patterns		2017818						
ANR	2018384	Symbol	res -> shift -> table_mask		2017818						
ANR	2018385	Symbol	* res		2017818						
ANR	2018386	Symbol	res -> shift		2017818						
ANR	2018387	Symbol	L		2017818						
ANR	2018388	Symbol	res -> m		2017818						
ANR	2018389	Symbol	res -> patnum		2017818						
ANR	2018390	Symbol	emalloc		2017818						
ANR	2018391	Symbol	res -> Bp		2017818						
ANR	2018392	Symbol	* res -> patterns		2017818						
ANR	2018393	Symbol	S		2017818						
ANR	2018394	Symbol	* res -> shift		2017818						
ANR	2018395	Symbol	* res -> prefix		2017818						
ANR	2018396	Symbol	* res -> hash -> entries		2017818						
ANR	2018397	Symbol	text		2017818						
ANR	2018398	Symbol	HASH_TAB_SIZE		2017818						
ANR	2018399	Symbol	* * * res		2017818						
ANR	2018400	Symbol	* HASH_TAB_SIZE		2017818						
ANR	2018401	Symbol	& patterns [ i ] . pat		2017818						
ANR	2018402	Symbol	res		2017818						
ANR	2018403	Symbol	res -> B		2017818						
ANR	2018404	Symbol	NULL		2017818						
ANR	2018405	Symbol	php_strtr_hash		2017818						
ANR	2018406	Symbol	patterns		2017818						
ANR	2018407	Symbol	res -> patterns		2017818						
ANR	2018408	Symbol	res -> prefix		2017818						
ANR	2018409	Symbol	last_h		2017818						
ANR	2018410	Symbol	* * res -> hash		2017818						
ANR	2018411	Symbol	h		2017818						
ANR	2018412	Symbol	i		2017818						
ANR	2018413	Symbol	Bp		2017818						
ANR	2018414	Symbol	patnum		2017818						
ANR	2018415	Symbol	res -> hash		2017818						
ANR	2018416	Symbol	res -> hash -> table_mask		2017818						
ANR	2018417	Symbol	res -> shift -> entries		2017818						
ANR	2018418	Symbol	* h		2017818						
ANR	2018419	Symbol	* i		2017818						
ANR	2018420	Symbol	MIN		2017818						
ANR	2018421	Symbol	res -> hash -> entries		2017818						
ANR	2018422	Symbol	* * res		2017818						
ANR	2018423	Symbol	safe_emalloc		2017818						
ANR	2018424	Symbol	php_strtr_compare_hash_suffix		2017818						
ANR	2018425	Function	php_strtr_array_destroy_ppres	3057:0:74251:74391							
ANR	2018426	FunctionDef	php_strtr_array_destroy_ppres (PPRES * d)		2018425	0					
ANR	2018427	CompoundStatement		3058:0:74303:74391	2018425	0					
ANR	2018428	ExpressionStatement	efree ( d -> shift )	3059:1:74306:74321	2018425	0	True				
ANR	2018429	CallExpression	efree ( d -> shift )		2018425	0					
ANR	2018430	Callee	efree		2018425	0					
ANR	2018431	Identifier	efree		2018425	0					
ANR	2018432	ArgumentList	d -> shift		2018425	1					
ANR	2018433	Argument	d -> shift		2018425	0					
ANR	2018434	PtrMemberAccess	d -> shift		2018425	0					
ANR	2018435	Identifier	d		2018425	0					
ANR	2018436	Identifier	shift		2018425	1					
ANR	2018437	ExpressionStatement	efree ( d -> hash )	3060:1:74324:74338	2018425	1	True				
ANR	2018438	CallExpression	efree ( d -> hash )		2018425	0					
ANR	2018439	Callee	efree		2018425	0					
ANR	2018440	Identifier	efree		2018425	0					
ANR	2018441	ArgumentList	d -> hash		2018425	1					
ANR	2018442	Argument	d -> hash		2018425	0					
ANR	2018443	PtrMemberAccess	d -> hash		2018425	0					
ANR	2018444	Identifier	d		2018425	0					
ANR	2018445	Identifier	hash		2018425	1					
ANR	2018446	ExpressionStatement	efree ( d -> prefix )	3061:1:74341:74357	2018425	2	True				
ANR	2018447	CallExpression	efree ( d -> prefix )		2018425	0					
ANR	2018448	Callee	efree		2018425	0					
ANR	2018449	Identifier	efree		2018425	0					
ANR	2018450	ArgumentList	d -> prefix		2018425	1					
ANR	2018451	Argument	d -> prefix		2018425	0					
ANR	2018452	PtrMemberAccess	d -> prefix		2018425	0					
ANR	2018453	Identifier	d		2018425	0					
ANR	2018454	Identifier	prefix		2018425	1					
ANR	2018455	ExpressionStatement	efree ( d -> patterns )	3062:1:74360:74378	2018425	3	True				
ANR	2018456	CallExpression	efree ( d -> patterns )		2018425	0					
ANR	2018457	Callee	efree		2018425	0					
ANR	2018458	Identifier	efree		2018425	0					
ANR	2018459	ArgumentList	d -> patterns		2018425	1					
ANR	2018460	Argument	d -> patterns		2018425	0					
ANR	2018461	PtrMemberAccess	d -> patterns		2018425	0					
ANR	2018462	Identifier	d		2018425	0					
ANR	2018463	Identifier	patterns		2018425	1					
ANR	2018464	ExpressionStatement	efree ( d )	3063:1:74381:74389	2018425	4	True				
ANR	2018465	CallExpression	efree ( d )		2018425	0					
ANR	2018466	Callee	efree		2018425	0					
ANR	2018467	Identifier	efree		2018425	0					
ANR	2018468	ArgumentList	d		2018425	1					
ANR	2018469	Argument	d		2018425	0					
ANR	2018470	Identifier	d		2018425	0					
ANR	2018471	ReturnType	static void		2018425	1					
ANR	2018472	Identifier	php_strtr_array_destroy_ppres		2018425	2					
ANR	2018473	ParameterList	PPRES * d		2018425	3					
ANR	2018474	Parameter	PPRES * d	3057:42:74293:74300	2018425	0	True				
ANR	2018475	ParameterType	PPRES *		2018425	0					
ANR	2018476	Identifier	d		2018425	1					
ANR	2018477	CFGEntryNode	ENTRY		2018425		True				
ANR	2018478	CFGExitNode	EXIT		2018425		True				
ANR	2018479	Symbol	d		2018425						
ANR	2018480	Symbol	d -> patterns		2018425						
ANR	2018481	Symbol	d -> prefix		2018425						
ANR	2018482	Symbol	d -> hash		2018425						
ANR	2018483	Symbol	d -> shift		2018425						
ANR	2018484	Symbol	* d		2018425						
ANR	2018485	Function	php_strtr_array_do_repl	3068:0:74479:75773							
ANR	2018486	FunctionDef	"php_strtr_array_do_repl (STR * text , PPRES * d , zval * return_value)"		2018485	0					
ANR	2018487	CompoundStatement		3069:0:74556:75773	2018485	0					
ANR	2018488	IdentifierDeclStatement	"STRLEN pos = 0 , nextwpos = 0 , lastpos = L ( text ) - d -> m ;"	3070:1:74559:74622	2018485	0	True				
ANR	2018489	IdentifierDecl	pos = 0		2018485	0					
ANR	2018490	IdentifierDeclType	STRLEN		2018485	0					
ANR	2018491	Identifier	pos		2018485	1					
ANR	2018492	AssignmentExpression	pos = 0		2018485	2		=			
ANR	2018493	Identifier	pos		2018485	0					
ANR	2018494	PrimaryExpression	0		2018485	1					
ANR	2018495	IdentifierDecl	nextwpos = 0		2018485	1					
ANR	2018496	IdentifierDeclType	STRLEN		2018485	0					
ANR	2018497	Identifier	nextwpos		2018485	1					
ANR	2018498	AssignmentExpression	nextwpos = 0		2018485	2		=			
ANR	2018499	Identifier	nextwpos		2018485	0					
ANR	2018500	PrimaryExpression	0		2018485	1					
ANR	2018501	IdentifierDecl	lastpos = L ( text ) - d -> m		2018485	2					
ANR	2018502	IdentifierDeclType	STRLEN		2018485	0					
ANR	2018503	Identifier	lastpos		2018485	1					
ANR	2018504	AssignmentExpression	lastpos = L ( text ) - d -> m		2018485	2		=			
ANR	2018505	Identifier	lastpos		2018485	0					
ANR	2018506	AdditiveExpression	L ( text ) - d -> m		2018485	1		-			
ANR	2018507	CallExpression	L ( text )		2018485	0					
ANR	2018508	Callee	L		2018485	0					
ANR	2018509	Identifier	L		2018485	0					
ANR	2018510	ArgumentList	text		2018485	1					
ANR	2018511	Argument	text		2018485	0					
ANR	2018512	Identifier	text		2018485	0					
ANR	2018513	PtrMemberAccess	d -> m		2018485	1					
ANR	2018514	Identifier	d		2018485	0					
ANR	2018515	Identifier	m		2018485	1					
ANR	2018516	IdentifierDeclStatement	smart_str result = { 0 } ;	3073:1:74625:74647	2018485	1	True				
ANR	2018517	IdentifierDecl	result = { 0 }		2018485	0					
ANR	2018518	IdentifierDeclType	smart_str		2018485	0					
ANR	2018519	Identifier	result		2018485	1					
ANR	2018520	AssignmentExpression	result = { 0 }		2018485	2		=			
ANR	2018521	Identifier	result		2018485	0					
ANR	2018522	InitializerList	0		2018485	1					
ANR	2018523	PrimaryExpression	0		2018485	0					
ANR	2018524	WhileStatement	while ( pos <= lastpos )		2018485	2					
ANR	2018525	Condition	pos <= lastpos	3075:8:74658:74671	2018485	0	True				
ANR	2018526	RelationalExpression	pos <= lastpos		2018485	0		<=			
ANR	2018527	Identifier	pos		2018485	0					
ANR	2018528	Identifier	lastpos		2018485	1					
ANR	2018529	CompoundStatement		9:2:207:242	2018485	1					
ANR	2018530	IdentifierDeclStatement	"HASH h = php_strtr_hash ( & S ( text ) [ pos + d -> m - d -> B ] , d -> B ) & d -> shift -> table_mask ;"	3076:2:74678:74760	2018485	0	True				
ANR	2018531	IdentifierDecl	"h = php_strtr_hash ( & S ( text ) [ pos + d -> m - d -> B ] , d -> B ) & d -> shift -> table_mask"		2018485	0					
ANR	2018532	IdentifierDeclType	HASH		2018485	0					
ANR	2018533	Identifier	h		2018485	1					
ANR	2018534	AssignmentExpression	"h = php_strtr_hash ( & S ( text ) [ pos + d -> m - d -> B ] , d -> B ) & d -> shift -> table_mask"		2018485	2		=			
ANR	2018535	Identifier	h		2018485	0					
ANR	2018536	BitAndExpression	"php_strtr_hash ( & S ( text ) [ pos + d -> m - d -> B ] , d -> B ) & d -> shift -> table_mask"		2018485	1		&			
ANR	2018537	CallExpression	"php_strtr_hash ( & S ( text ) [ pos + d -> m - d -> B ] , d -> B )"		2018485	0					
ANR	2018538	Callee	php_strtr_hash		2018485	0					
ANR	2018539	Identifier	php_strtr_hash		2018485	0					
ANR	2018540	ArgumentList	& S ( text ) [ pos + d -> m - d -> B ]		2018485	1					
ANR	2018541	Argument	& S ( text ) [ pos + d -> m - d -> B ]		2018485	0					
ANR	2018542	UnaryOperationExpression	& S ( text ) [ pos + d -> m - d -> B ]		2018485	0					
ANR	2018543	UnaryOperator	&		2018485	0					
ANR	2018544	ArrayIndexing	S ( text ) [ pos + d -> m - d -> B ]		2018485	1					
ANR	2018545	CallExpression	S ( text )		2018485	0					
ANR	2018546	Callee	S		2018485	0					
ANR	2018547	Identifier	S		2018485	0					
ANR	2018548	ArgumentList	text		2018485	1					
ANR	2018549	Argument	text		2018485	0					
ANR	2018550	Identifier	text		2018485	0					
ANR	2018551	AdditiveExpression	pos + d -> m - d -> B		2018485	1		+			
ANR	2018552	Identifier	pos		2018485	0					
ANR	2018553	AdditiveExpression	d -> m - d -> B		2018485	1		-			
ANR	2018554	PtrMemberAccess	d -> m		2018485	0					
ANR	2018555	Identifier	d		2018485	0					
ANR	2018556	Identifier	m		2018485	1					
ANR	2018557	PtrMemberAccess	d -> B		2018485	1					
ANR	2018558	Identifier	d		2018485	0					
ANR	2018559	Identifier	B		2018485	1					
ANR	2018560	Argument	d -> B		2018485	1					
ANR	2018561	PtrMemberAccess	d -> B		2018485	0					
ANR	2018562	Identifier	d		2018485	0					
ANR	2018563	Identifier	B		2018485	1					
ANR	2018564	PtrMemberAccess	d -> shift -> table_mask		2018485	1					
ANR	2018565	PtrMemberAccess	d -> shift		2018485	0					
ANR	2018566	Identifier	d		2018485	0					
ANR	2018567	Identifier	shift		2018485	1					
ANR	2018568	Identifier	table_mask		2018485	1					
ANR	2018569	IdentifierDeclStatement	STRLEN shift = d -> shift -> entries [ h ] ;	3077:2:74764:74799	2018485	1	True				
ANR	2018570	IdentifierDecl	shift = d -> shift -> entries [ h ]		2018485	0					
ANR	2018571	IdentifierDeclType	STRLEN		2018485	0					
ANR	2018572	Identifier	shift		2018485	1					
ANR	2018573	AssignmentExpression	shift = d -> shift -> entries [ h ]		2018485	2		=			
ANR	2018574	Identifier	shift		2018485	0					
ANR	2018575	ArrayIndexing	d -> shift -> entries [ h ]		2018485	1					
ANR	2018576	PtrMemberAccess	d -> shift -> entries		2018485	0					
ANR	2018577	PtrMemberAccess	d -> shift		2018485	0					
ANR	2018578	Identifier	d		2018485	0					
ANR	2018579	Identifier	shift		2018485	1					
ANR	2018580	Identifier	entries		2018485	1					
ANR	2018581	Identifier	h		2018485	1					
ANR	2018582	IfStatement	if ( shift > 0 )		2018485	2					
ANR	2018583	Condition	shift > 0	3079:6:74808:74816	2018485	0	True				
ANR	2018584	RelationalExpression	shift > 0		2018485	0		>			
ANR	2018585	Identifier	shift		2018485	0					
ANR	2018586	PrimaryExpression	0		2018485	1					
ANR	2018587	CompoundStatement		11:17:262:262	2018485	1					
ANR	2018588	ExpressionStatement	pos += shift	3080:3:74824:74836	2018485	0	True				
ANR	2018589	AssignmentExpression	pos += shift		2018485	0		+=			
ANR	2018590	Identifier	pos		2018485	0					
ANR	2018591	Identifier	shift		2018485	1					
ANR	2018592	ElseStatement	else		2018485	0					
ANR	2018593	CompoundStatement		17:3:392:508	2018485	0					
ANR	2018594	IdentifierDeclStatement	"HASH h2 = h & d -> hash -> table_mask , prefix_h = php_strtr_hash ( & S ( text ) [ pos ] , d -> Bp ) ;"	3082:3:74852:74943	2018485	0	True				
ANR	2018595	IdentifierDecl	h2 = h & d -> hash -> table_mask		2018485	0					
ANR	2018596	IdentifierDeclType	HASH		2018485	0					
ANR	2018597	Identifier	h2		2018485	1					
ANR	2018598	AssignmentExpression	h2 = h & d -> hash -> table_mask		2018485	2		=			
ANR	2018599	Identifier	h2		2018485	0					
ANR	2018600	BitAndExpression	h & d -> hash -> table_mask		2018485	1		&			
ANR	2018601	Identifier	h		2018485	0					
ANR	2018602	PtrMemberAccess	d -> hash -> table_mask		2018485	1					
ANR	2018603	PtrMemberAccess	d -> hash		2018485	0					
ANR	2018604	Identifier	d		2018485	0					
ANR	2018605	Identifier	hash		2018485	1					
ANR	2018606	Identifier	table_mask		2018485	1					
ANR	2018607	IdentifierDecl	"prefix_h = php_strtr_hash ( & S ( text ) [ pos ] , d -> Bp )"		2018485	1					
ANR	2018608	IdentifierDeclType	HASH		2018485	0					
ANR	2018609	Identifier	prefix_h		2018485	1					
ANR	2018610	AssignmentExpression	"prefix_h = php_strtr_hash ( & S ( text ) [ pos ] , d -> Bp )"		2018485	2		=			
ANR	2018611	Identifier	prefix_h		2018485	0					
ANR	2018612	CallExpression	"php_strtr_hash ( & S ( text ) [ pos ] , d -> Bp )"		2018485	1					
ANR	2018613	Callee	php_strtr_hash		2018485	0					
ANR	2018614	Identifier	php_strtr_hash		2018485	0					
ANR	2018615	ArgumentList	& S ( text ) [ pos ]		2018485	1					
ANR	2018616	Argument	& S ( text ) [ pos ]		2018485	0					
ANR	2018617	UnaryOperationExpression	& S ( text ) [ pos ]		2018485	0					
ANR	2018618	UnaryOperator	&		2018485	0					
ANR	2018619	ArrayIndexing	S ( text ) [ pos ]		2018485	1					
ANR	2018620	CallExpression	S ( text )		2018485	0					
ANR	2018621	Callee	S		2018485	0					
ANR	2018622	Identifier	S		2018485	0					
ANR	2018623	ArgumentList	text		2018485	1					
ANR	2018624	Argument	text		2018485	0					
ANR	2018625	Identifier	text		2018485	0					
ANR	2018626	Identifier	pos		2018485	1					
ANR	2018627	Argument	d -> Bp		2018485	1					
ANR	2018628	PtrMemberAccess	d -> Bp		2018485	0					
ANR	2018629	Identifier	d		2018485	0					
ANR	2018630	Identifier	Bp		2018485	1					
ANR	2018631	IdentifierDeclStatement	"int offset_start = d -> hash -> entries [ h2 ] , offset_end = d -> hash -> entries [ h2 + 1 ] , i = 0 ;"	3085:3:74949:75065	2018485	1	True				
ANR	2018632	IdentifierDecl	offset_start = d -> hash -> entries [ h2 ]		2018485	0					
ANR	2018633	IdentifierDeclType	int		2018485	0					
ANR	2018634	Identifier	offset_start		2018485	1					
ANR	2018635	AssignmentExpression	offset_start = d -> hash -> entries [ h2 ]		2018485	2		=			
ANR	2018636	Identifier	offset_start		2018485	0					
ANR	2018637	ArrayIndexing	d -> hash -> entries [ h2 ]		2018485	1					
ANR	2018638	PtrMemberAccess	d -> hash -> entries		2018485	0					
ANR	2018639	PtrMemberAccess	d -> hash		2018485	0					
ANR	2018640	Identifier	d		2018485	0					
ANR	2018641	Identifier	hash		2018485	1					
ANR	2018642	Identifier	entries		2018485	1					
ANR	2018643	Identifier	h2		2018485	1					
ANR	2018644	IdentifierDecl	offset_end = d -> hash -> entries [ h2 + 1 ]		2018485	1					
ANR	2018645	IdentifierDeclType	int		2018485	0					
ANR	2018646	Identifier	offset_end		2018485	1					
ANR	2018647	AssignmentExpression	offset_end = d -> hash -> entries [ h2 + 1 ]		2018485	2		=			
ANR	2018648	Identifier	offset_end		2018485	0					
ANR	2018649	ArrayIndexing	d -> hash -> entries [ h2 + 1 ]		2018485	1					
ANR	2018650	PtrMemberAccess	d -> hash -> entries		2018485	0					
ANR	2018651	PtrMemberAccess	d -> hash		2018485	0					
ANR	2018652	Identifier	d		2018485	0					
ANR	2018653	Identifier	hash		2018485	1					
ANR	2018654	Identifier	entries		2018485	1					
ANR	2018655	AdditiveExpression	h2 + 1		2018485	1		+			
ANR	2018656	Identifier	h2		2018485	0					
ANR	2018657	PrimaryExpression	1		2018485	1					
ANR	2018658	IdentifierDecl	i = 0		2018485	2					
ANR	2018659	IdentifierDeclType	int		2018485	0					
ANR	2018660	Identifier	i		2018485	1					
ANR	2018661	AssignmentExpression	i = 0		2018485	2		=			
ANR	2018662	Identifier	i		2018485	0					
ANR	2018663	PrimaryExpression	0		2018485	1					
ANR	2018664	ForStatement	for ( i = offset_start ; i < offset_end ; i ++ )		2018485	2					
ANR	2018665	ForInit	i = offset_start ;	3089:8:75076:75092	2018485	0	True				
ANR	2018666	AssignmentExpression	i = offset_start		2018485	0		=			
ANR	2018667	Identifier	i		2018485	0					
ANR	2018668	Identifier	offset_start		2018485	1					
ANR	2018669	Condition	i < offset_end	3089:26:75094:75107	2018485	1	True				
ANR	2018670	RelationalExpression	i < offset_end		2018485	0		<			
ANR	2018671	Identifier	i		2018485	0					
ANR	2018672	Identifier	offset_end		2018485	1					
ANR	2018673	PostIncDecOperationExpression	i ++	3089:42:75110:75112	2018485	2	True				
ANR	2018674	Identifier	i		2018485	0					
ANR	2018675	IncDec	++		2018485	1					
ANR	2018676	CompoundStatement		22:4:564:577	2018485	3					
ANR	2018677	IdentifierDeclStatement	PATNREPL * pnr ;	3090:4:75121:75134	2018485	0	True				
ANR	2018678	IdentifierDecl	* pnr		2018485	0					
ANR	2018679	IdentifierDeclType	PATNREPL *		2018485	0					
ANR	2018680	Identifier	pnr		2018485	1					
ANR	2018681	IfStatement	if ( d -> prefix [ i ] != prefix_h )		2018485	1					
ANR	2018682	Condition	d -> prefix [ i ] != prefix_h	3091:8:75144:75167	2018485	0	True				
ANR	2018683	EqualityExpression	d -> prefix [ i ] != prefix_h		2018485	0		!=			
ANR	2018684	ArrayIndexing	d -> prefix [ i ]		2018485	0					
ANR	2018685	PtrMemberAccess	d -> prefix		2018485	0					
ANR	2018686	Identifier	d		2018485	0					
ANR	2018687	Identifier	prefix		2018485	1					
ANR	2018688	Identifier	i		2018485	1					
ANR	2018689	Identifier	prefix_h		2018485	1					
ANR	2018690	ContinueStatement	continue ;	3092:5:75175:75183	2018485	1	True				
ANR	2018691	ExpressionStatement	pnr = & d -> patterns [ i ]	3094:4:75190:75211	2018485	2	True				
ANR	2018692	AssignmentExpression	pnr = & d -> patterns [ i ]		2018485	0		=			
ANR	2018693	Identifier	pnr		2018485	0					
ANR	2018694	UnaryOperationExpression	& d -> patterns [ i ]		2018485	1					
ANR	2018695	UnaryOperator	&		2018485	0					
ANR	2018696	ArrayIndexing	d -> patterns [ i ]		2018485	1					
ANR	2018697	PtrMemberAccess	d -> patterns		2018485	0					
ANR	2018698	Identifier	d		2018485	0					
ANR	2018699	Identifier	patterns		2018485	1					
ANR	2018700	Identifier	i		2018485	1					
ANR	2018701	IfStatement	"if ( L ( & pnr -> pat ) > L ( text ) - pos || memcmp ( S ( & pnr -> pat ) , & S ( text ) [ pos ] , L ( & pnr -> pat ) ) != 0 )"		2018485	3					
ANR	2018702	Condition	"L ( & pnr -> pat ) > L ( text ) - pos || memcmp ( S ( & pnr -> pat ) , & S ( text ) [ pos ] , L ( & pnr -> pat ) ) != 0"	3095:8:75221:75312	2018485	0	True				
ANR	2018703	OrExpression	"L ( & pnr -> pat ) > L ( text ) - pos || memcmp ( S ( & pnr -> pat ) , & S ( text ) [ pos ] , L ( & pnr -> pat ) ) != 0"		2018485	0		||			
ANR	2018704	RelationalExpression	L ( & pnr -> pat ) > L ( text ) - pos		2018485	0		>			
ANR	2018705	CallExpression	L ( & pnr -> pat )		2018485	0					
ANR	2018706	Callee	L		2018485	0					
ANR	2018707	Identifier	L		2018485	0					
ANR	2018708	ArgumentList	& pnr -> pat		2018485	1					
ANR	2018709	Argument	& pnr -> pat		2018485	0					
ANR	2018710	UnaryOperationExpression	& pnr -> pat		2018485	0					
ANR	2018711	UnaryOperator	&		2018485	0					
ANR	2018712	PtrMemberAccess	pnr -> pat		2018485	1					
ANR	2018713	Identifier	pnr		2018485	0					
ANR	2018714	Identifier	pat		2018485	1					
ANR	2018715	AdditiveExpression	L ( text ) - pos		2018485	1		-			
ANR	2018716	CallExpression	L ( text )		2018485	0					
ANR	2018717	Callee	L		2018485	0					
ANR	2018718	Identifier	L		2018485	0					
ANR	2018719	ArgumentList	text		2018485	1					
ANR	2018720	Argument	text		2018485	0					
ANR	2018721	Identifier	text		2018485	0					
ANR	2018722	Identifier	pos		2018485	1					
ANR	2018723	EqualityExpression	"memcmp ( S ( & pnr -> pat ) , & S ( text ) [ pos ] , L ( & pnr -> pat ) ) != 0"		2018485	1		!=			
ANR	2018724	CallExpression	"memcmp ( S ( & pnr -> pat ) , & S ( text ) [ pos ] , L ( & pnr -> pat ) )"		2018485	0					
ANR	2018725	Callee	memcmp		2018485	0					
ANR	2018726	Identifier	memcmp		2018485	0					
ANR	2018727	ArgumentList	S ( & pnr -> pat )		2018485	1					
ANR	2018728	Argument	S ( & pnr -> pat )		2018485	0					
ANR	2018729	CallExpression	S ( & pnr -> pat )		2018485	0					
ANR	2018730	Callee	S		2018485	0					
ANR	2018731	Identifier	S		2018485	0					
ANR	2018732	ArgumentList	& pnr -> pat		2018485	1					
ANR	2018733	Argument	& pnr -> pat		2018485	0					
ANR	2018734	UnaryOperationExpression	& pnr -> pat		2018485	0					
ANR	2018735	UnaryOperator	&		2018485	0					
ANR	2018736	PtrMemberAccess	pnr -> pat		2018485	1					
ANR	2018737	Identifier	pnr		2018485	0					
ANR	2018738	Identifier	pat		2018485	1					
ANR	2018739	Argument	& S ( text ) [ pos ]		2018485	1					
ANR	2018740	UnaryOperationExpression	& S ( text ) [ pos ]		2018485	0					
ANR	2018741	UnaryOperator	&		2018485	0					
ANR	2018742	ArrayIndexing	S ( text ) [ pos ]		2018485	1					
ANR	2018743	CallExpression	S ( text )		2018485	0					
ANR	2018744	Callee	S		2018485	0					
ANR	2018745	Identifier	S		2018485	0					
ANR	2018746	ArgumentList	text		2018485	1					
ANR	2018747	Argument	text		2018485	0					
ANR	2018748	Identifier	text		2018485	0					
ANR	2018749	Identifier	pos		2018485	1					
ANR	2018750	Argument	L ( & pnr -> pat )		2018485	2					
ANR	2018751	CallExpression	L ( & pnr -> pat )		2018485	0					
ANR	2018752	Callee	L		2018485	0					
ANR	2018753	Identifier	L		2018485	0					
ANR	2018754	ArgumentList	& pnr -> pat		2018485	1					
ANR	2018755	Argument	& pnr -> pat		2018485	0					
ANR	2018756	UnaryOperationExpression	& pnr -> pat		2018485	0					
ANR	2018757	UnaryOperator	&		2018485	0					
ANR	2018758	PtrMemberAccess	pnr -> pat		2018485	1					
ANR	2018759	Identifier	pnr		2018485	0					
ANR	2018760	Identifier	pat		2018485	1					
ANR	2018761	PrimaryExpression	0		2018485	1					
ANR	2018762	ContinueStatement	continue ;	3097:5:75320:75328	2018485	1	True				
ANR	2018763	ExpressionStatement	"smart_str_appendl ( & result , & S ( text ) [ nextwpos ] , pos - nextwpos )"	3099:4:75335:75397	2018485	4	True				
ANR	2018764	CallExpression	"smart_str_appendl ( & result , & S ( text ) [ nextwpos ] , pos - nextwpos )"		2018485	0					
ANR	2018765	Callee	smart_str_appendl		2018485	0					
ANR	2018766	Identifier	smart_str_appendl		2018485	0					
ANR	2018767	ArgumentList	& result		2018485	1					
ANR	2018768	Argument	& result		2018485	0					
ANR	2018769	UnaryOperationExpression	& result		2018485	0					
ANR	2018770	UnaryOperator	&		2018485	0					
ANR	2018771	Identifier	result		2018485	1					
ANR	2018772	Argument	& S ( text ) [ nextwpos ]		2018485	1					
ANR	2018773	UnaryOperationExpression	& S ( text ) [ nextwpos ]		2018485	0					
ANR	2018774	UnaryOperator	&		2018485	0					
ANR	2018775	ArrayIndexing	S ( text ) [ nextwpos ]		2018485	1					
ANR	2018776	CallExpression	S ( text )		2018485	0					
ANR	2018777	Callee	S		2018485	0					
ANR	2018778	Identifier	S		2018485	0					
ANR	2018779	ArgumentList	text		2018485	1					
ANR	2018780	Argument	text		2018485	0					
ANR	2018781	Identifier	text		2018485	0					
ANR	2018782	Identifier	nextwpos		2018485	1					
ANR	2018783	Argument	pos - nextwpos		2018485	2					
ANR	2018784	AdditiveExpression	pos - nextwpos		2018485	0		-			
ANR	2018785	Identifier	pos		2018485	0					
ANR	2018786	Identifier	nextwpos		2018485	1					
ANR	2018787	ExpressionStatement	"smart_str_appendl ( & result , S ( & pnr -> repl ) , L ( & pnr -> repl ) )"	3100:4:75403:75459	2018485	5	True				
ANR	2018788	CallExpression	"smart_str_appendl ( & result , S ( & pnr -> repl ) , L ( & pnr -> repl ) )"		2018485	0					
ANR	2018789	Callee	smart_str_appendl		2018485	0					
ANR	2018790	Identifier	smart_str_appendl		2018485	0					
ANR	2018791	ArgumentList	& result		2018485	1					
ANR	2018792	Argument	& result		2018485	0					
ANR	2018793	UnaryOperationExpression	& result		2018485	0					
ANR	2018794	UnaryOperator	&		2018485	0					
ANR	2018795	Identifier	result		2018485	1					
ANR	2018796	Argument	S ( & pnr -> repl )		2018485	1					
ANR	2018797	CallExpression	S ( & pnr -> repl )		2018485	0					
ANR	2018798	Callee	S		2018485	0					
ANR	2018799	Identifier	S		2018485	0					
ANR	2018800	ArgumentList	& pnr -> repl		2018485	1					
ANR	2018801	Argument	& pnr -> repl		2018485	0					
ANR	2018802	UnaryOperationExpression	& pnr -> repl		2018485	0					
ANR	2018803	UnaryOperator	&		2018485	0					
ANR	2018804	PtrMemberAccess	pnr -> repl		2018485	1					
ANR	2018805	Identifier	pnr		2018485	0					
ANR	2018806	Identifier	repl		2018485	1					
ANR	2018807	Argument	L ( & pnr -> repl )		2018485	2					
ANR	2018808	CallExpression	L ( & pnr -> repl )		2018485	0					
ANR	2018809	Callee	L		2018485	0					
ANR	2018810	Identifier	L		2018485	0					
ANR	2018811	ArgumentList	& pnr -> repl		2018485	1					
ANR	2018812	Argument	& pnr -> repl		2018485	0					
ANR	2018813	UnaryOperationExpression	& pnr -> repl		2018485	0					
ANR	2018814	UnaryOperator	&		2018485	0					
ANR	2018815	PtrMemberAccess	pnr -> repl		2018485	1					
ANR	2018816	Identifier	pnr		2018485	0					
ANR	2018817	Identifier	repl		2018485	1					
ANR	2018818	ExpressionStatement	pos += L ( & pnr -> pat )	3101:4:75465:75484	2018485	6	True				
ANR	2018819	AssignmentExpression	pos += L ( & pnr -> pat )		2018485	0		+=			
ANR	2018820	Identifier	pos		2018485	0					
ANR	2018821	CallExpression	L ( & pnr -> pat )		2018485	1					
ANR	2018822	Callee	L		2018485	0					
ANR	2018823	Identifier	L		2018485	0					
ANR	2018824	ArgumentList	& pnr -> pat		2018485	1					
ANR	2018825	Argument	& pnr -> pat		2018485	0					
ANR	2018826	UnaryOperationExpression	& pnr -> pat		2018485	0					
ANR	2018827	UnaryOperator	&		2018485	0					
ANR	2018828	PtrMemberAccess	pnr -> pat		2018485	1					
ANR	2018829	Identifier	pnr		2018485	0					
ANR	2018830	Identifier	pat		2018485	1					
ANR	2018831	ExpressionStatement	nextwpos = pos	3102:4:75490:75504	2018485	7	True				
ANR	2018832	AssignmentExpression	nextwpos = pos		2018485	0		=			
ANR	2018833	Identifier	nextwpos		2018485	0					
ANR	2018834	Identifier	pos		2018485	1					
ANR	2018835	GotoStatement	goto end_outer_loop ;	3103:4:75510:75529	2018485	8	True				
ANR	2018836	Identifier	end_outer_loop		2018485	0					
ANR	2018837	ExpressionStatement	pos ++	3106:3:75540:75545	2018485	3	True				
ANR	2018838	PostIncDecOperationExpression	pos ++		2018485	0					
ANR	2018839	Identifier	pos		2018485	0					
ANR	2018840	IncDec	++		2018485	1					
ANR	2018841	Label	end_outer_loop :	3107:0:75547:75561	2018485	4	True				
ANR	2018842	Identifier	end_outer_loop		2018485	0					
ANR	2018843	ExpressionStatement		3107:16:75563:75563	2018485	5	True				
ANR	2018844	ExpressionStatement	"smart_str_appendl ( & result , & S ( text ) [ nextwpos ] , L ( text ) - nextwpos )"	3111:1:75574:75640	2018485	3	True				
ANR	2018845	CallExpression	"smart_str_appendl ( & result , & S ( text ) [ nextwpos ] , L ( text ) - nextwpos )"		2018485	0					
ANR	2018846	Callee	smart_str_appendl		2018485	0					
ANR	2018847	Identifier	smart_str_appendl		2018485	0					
ANR	2018848	ArgumentList	& result		2018485	1					
ANR	2018849	Argument	& result		2018485	0					
ANR	2018850	UnaryOperationExpression	& result		2018485	0					
ANR	2018851	UnaryOperator	&		2018485	0					
ANR	2018852	Identifier	result		2018485	1					
ANR	2018853	Argument	& S ( text ) [ nextwpos ]		2018485	1					
ANR	2018854	UnaryOperationExpression	& S ( text ) [ nextwpos ]		2018485	0					
ANR	2018855	UnaryOperator	&		2018485	0					
ANR	2018856	ArrayIndexing	S ( text ) [ nextwpos ]		2018485	1					
ANR	2018857	CallExpression	S ( text )		2018485	0					
ANR	2018858	Callee	S		2018485	0					
ANR	2018859	Identifier	S		2018485	0					
ANR	2018860	ArgumentList	text		2018485	1					
ANR	2018861	Argument	text		2018485	0					
ANR	2018862	Identifier	text		2018485	0					
ANR	2018863	Identifier	nextwpos		2018485	1					
ANR	2018864	Argument	L ( text ) - nextwpos		2018485	2					
ANR	2018865	AdditiveExpression	L ( text ) - nextwpos		2018485	0		-			
ANR	2018866	CallExpression	L ( text )		2018485	0					
ANR	2018867	Callee	L		2018485	0					
ANR	2018868	Identifier	L		2018485	0					
ANR	2018869	ArgumentList	text		2018485	1					
ANR	2018870	Argument	text		2018485	0					
ANR	2018871	Identifier	text		2018485	0					
ANR	2018872	Identifier	nextwpos		2018485	1					
ANR	2018873	IfStatement	if ( result . c != NULL )		2018485	4					
ANR	2018874	Condition	result . c != NULL	3113:5:75648:75663	2018485	0	True				
ANR	2018875	EqualityExpression	result . c != NULL		2018485	0		!=			
ANR	2018876	MemberAccess	result . c		2018485	0					
ANR	2018877	Identifier	result		2018485	0					
ANR	2018878	Identifier	c		2018485	1					
ANR	2018879	Identifier	NULL		2018485	1					
ANR	2018880	CompoundStatement		45:23:1109:1109	2018485	1					
ANR	2018881	ExpressionStatement	smart_str_0 ( & result )	3114:2:75670:75690	2018485	0	True				
ANR	2018882	CallExpression	smart_str_0 ( & result )		2018485	0					
ANR	2018883	Callee	smart_str_0		2018485	0					
ANR	2018884	Identifier	smart_str_0		2018485	0					
ANR	2018885	ArgumentList	& result		2018485	1					
ANR	2018886	Argument	& result		2018485	0					
ANR	2018887	UnaryOperationExpression	& result		2018485	0					
ANR	2018888	UnaryOperator	&		2018485	0					
ANR	2018889	Identifier	result		2018485	1					
ANR	2018890	ExpressionStatement	"RETVAL_STRINGL ( result . c , result . len , 0 )"	3115:2:75694:75733	2018485	1	True				
ANR	2018891	CallExpression	"RETVAL_STRINGL ( result . c , result . len , 0 )"		2018485	0					
ANR	2018892	Callee	RETVAL_STRINGL		2018485	0					
ANR	2018893	Identifier	RETVAL_STRINGL		2018485	0					
ANR	2018894	ArgumentList	result . c		2018485	1					
ANR	2018895	Argument	result . c		2018485	0					
ANR	2018896	MemberAccess	result . c		2018485	0					
ANR	2018897	Identifier	result		2018485	0					
ANR	2018898	Identifier	c		2018485	1					
ANR	2018899	Argument	result . len		2018485	1					
ANR	2018900	MemberAccess	result . len		2018485	0					
ANR	2018901	Identifier	result		2018485	0					
ANR	2018902	Identifier	len		2018485	1					
ANR	2018903	Argument	0		2018485	2					
ANR	2018904	PrimaryExpression	0		2018485	0					
ANR	2018905	ElseStatement	else		2018485	0					
ANR	2018906	CompoundStatement		48:8:1186:1186	2018485	0					
ANR	2018907	ExpressionStatement	RETURN_EMPTY_STRING ( )	3117:2:75747:75768	2018485	0	True				
ANR	2018908	CallExpression	RETURN_EMPTY_STRING ( )		2018485	0					
ANR	2018909	Callee	RETURN_EMPTY_STRING		2018485	0					
ANR	2018910	Identifier	RETURN_EMPTY_STRING		2018485	0					
ANR	2018911	ArgumentList			2018485	1					
ANR	2018912	ReturnType	static void		2018485	1					
ANR	2018913	Identifier	php_strtr_array_do_repl		2018485	2					
ANR	2018914	ParameterList	"STR * text , PPRES * d , zval * return_value"		2018485	3					
ANR	2018915	Parameter	STR * text	3068:36:74515:74523	2018485	0	True				
ANR	2018916	ParameterType	STR *		2018485	0					
ANR	2018917	Identifier	text		2018485	1					
ANR	2018918	Parameter	PPRES * d	3068:47:74526:74533	2018485	1	True				
ANR	2018919	ParameterType	PPRES *		2018485	0					
ANR	2018920	Identifier	d		2018485	1					
ANR	2018921	Parameter	zval * return_value	3068:57:74536:74553	2018485	2	True				
ANR	2018922	ParameterType	zval *		2018485	0					
ANR	2018923	Identifier	return_value		2018485	1					
ANR	2018924	CFGEntryNode	ENTRY		2018485		True				
ANR	2018925	CFGExitNode	EXIT		2018485		True				
ANR	2018926	Symbol	d -> patterns		2018485						
ANR	2018927	Symbol	d -> m		2018485						
ANR	2018928	Symbol	nextwpos		2018485						
ANR	2018929	Symbol	offset_end		2018485						
ANR	2018930	Symbol	shift		2018485						
ANR	2018931	Symbol	* d -> prefix		2018485						
ANR	2018932	Symbol	* h2		2018485						
ANR	2018933	Symbol	memcmp		2018485						
ANR	2018934	Symbol	& pnr -> pat		2018485						
ANR	2018935	Symbol	text		2018485						
ANR	2018936	Symbol	d -> Bp		2018485						
ANR	2018937	Symbol	NULL		2018485						
ANR	2018938	Symbol	* d -> hash		2018485						
ANR	2018939	Symbol	* * d		2018485						
ANR	2018940	Symbol	d -> B		2018485						
ANR	2018941	Symbol	* d -> shift		2018485						
ANR	2018942	Symbol	pnr		2018485						
ANR	2018943	Symbol	& pnr -> repl		2018485						
ANR	2018944	Symbol	d -> shift		2018485						
ANR	2018945	Symbol	* * * d		2018485						
ANR	2018946	Symbol	result . c		2018485						
ANR	2018947	Symbol	offset_start		2018485						
ANR	2018948	Symbol	return_value		2018485						
ANR	2018949	Symbol	prefix_h		2018485						
ANR	2018950	Symbol	h2		2018485						
ANR	2018951	Symbol	lastpos		2018485						
ANR	2018952	Symbol	L		2018485						
ANR	2018953	Symbol	* * d -> shift		2018485						
ANR	2018954	Symbol	result		2018485						
ANR	2018955	Symbol	S		2018485						
ANR	2018956	Symbol	* d -> hash -> entries		2018485						
ANR	2018957	Symbol	* d -> shift -> entries		2018485						
ANR	2018958	Symbol	pos		2018485						
ANR	2018959	Symbol	d -> prefix		2018485						
ANR	2018960	Symbol	d -> hash -> entries		2018485						
ANR	2018961	Symbol	& result		2018485						
ANR	2018962	Symbol	php_strtr_hash		2018485						
ANR	2018963	Symbol	d		2018485						
ANR	2018964	Symbol	h		2018485						
ANR	2018965	Symbol	i		2018485						
ANR	2018966	Symbol	* d		2018485						
ANR	2018967	Symbol	d -> shift -> table_mask		2018485						
ANR	2018968	Symbol	* h		2018485						
ANR	2018969	Symbol	* i		2018485						
ANR	2018970	Symbol	* * d -> hash		2018485						
ANR	2018971	Symbol	d -> hash		2018485						
ANR	2018972	Symbol	d -> hash -> table_mask		2018485						
ANR	2018973	Symbol	d -> shift -> entries		2018485						
ANR	2018974	Symbol	result . len		2018485						
ANR	2018975	Function	php_strtr_array	3123:0:75812:76580							
ANR	2018976	FunctionDef	"php_strtr_array (zval * return_value , char * str , int slen , HashTable * pats)"		2018975	0					
ANR	2018977	CompoundStatement		3124:0:75898:76580	2018975	0					
ANR	2018978	IdentifierDeclStatement	PPRES * data ;	3125:1:75901:75913	2018975	0	True				
ANR	2018979	IdentifierDecl	* data		2018975	0					
ANR	2018980	IdentifierDeclType	PPRES *		2018975	0					
ANR	2018981	Identifier	data		2018975	1					
ANR	2018982	IdentifierDeclStatement	STR text ;	3126:1:75916:75926	2018975	1	True				
ANR	2018983	IdentifierDecl	text		2018975	0					
ANR	2018984	IdentifierDeclType	STR		2018975	0					
ANR	2018985	Identifier	text		2018975	1					
ANR	2018986	IdentifierDeclStatement	PATNREPL * patterns ;	3127:1:75929:75947	2018975	2	True				
ANR	2018987	IdentifierDecl	* patterns		2018975	0					
ANR	2018988	IdentifierDeclType	PATNREPL *		2018975	0					
ANR	2018989	Identifier	patterns		2018975	1					
ANR	2018990	IdentifierDeclStatement	int patterns_len ;	3128:1:75950:75968	2018975	3	True				
ANR	2018991	IdentifierDecl	patterns_len		2018975	0					
ANR	2018992	IdentifierDeclType	int		2018975	0					
ANR	2018993	Identifier	patterns_len		2018975	1					
ANR	2018994	IdentifierDeclStatement	zend_llist * allocs ;	3129:1:75971:75989	2018975	4	True				
ANR	2018995	IdentifierDecl	* allocs		2018975	0					
ANR	2018996	IdentifierDeclType	zend_llist *		2018975	0					
ANR	2018997	Identifier	allocs		2018975	1					
ANR	2018998	IfStatement	if ( zend_hash_num_elements ( pats ) == 0 )		2018975	5					
ANR	2018999	Condition	zend_hash_num_elements ( pats ) == 0	3131:5:75997:76029	2018975	0	True				
ANR	2019000	EqualityExpression	zend_hash_num_elements ( pats ) == 0		2018975	0		==			
ANR	2019001	CallExpression	zend_hash_num_elements ( pats )		2018975	0					
ANR	2019002	Callee	zend_hash_num_elements		2018975	0					
ANR	2019003	Identifier	zend_hash_num_elements		2018975	0					
ANR	2019004	ArgumentList	pats		2018975	1					
ANR	2019005	Argument	pats		2018975	0					
ANR	2019006	Identifier	pats		2018975	0					
ANR	2019007	PrimaryExpression	0		2018975	1					
ANR	2019008	CompoundStatement		8:40:133:133	2018975	1					
ANR	2019009	ExpressionStatement	"RETURN_STRINGL ( str , slen , 1 )"	3132:2:76036:76064	2018975	0	True				
ANR	2019010	CallExpression	"RETURN_STRINGL ( str , slen , 1 )"		2018975	0					
ANR	2019011	Callee	RETURN_STRINGL		2018975	0					
ANR	2019012	Identifier	RETURN_STRINGL		2018975	0					
ANR	2019013	ArgumentList	str		2018975	1					
ANR	2019014	Argument	str		2018975	0					
ANR	2019015	Identifier	str		2018975	0					
ANR	2019016	Argument	slen		2018975	1					
ANR	2019017	Identifier	slen		2018975	0					
ANR	2019018	Argument	1		2018975	2					
ANR	2019019	PrimaryExpression	1		2018975	0					
ANR	2019020	ExpressionStatement	S ( & text ) = str	3135:1:76071:76085	2018975	6	True				
ANR	2019021	AssignmentExpression	S ( & text ) = str		2018975	0		=			
ANR	2019022	CallExpression	S ( & text )		2018975	0					
ANR	2019023	Callee	S		2018975	0					
ANR	2019024	Identifier	S		2018975	0					
ANR	2019025	ArgumentList	& text		2018975	1					
ANR	2019026	Argument	& text		2018975	0					
ANR	2019027	UnaryOperationExpression	& text		2018975	0					
ANR	2019028	UnaryOperator	&		2018975	0					
ANR	2019029	Identifier	text		2018975	1					
ANR	2019030	Identifier	str		2018975	1					
ANR	2019031	ExpressionStatement	L ( & text ) = slen	3136:1:76088:76103	2018975	7	True				
ANR	2019032	AssignmentExpression	L ( & text ) = slen		2018975	0		=			
ANR	2019033	CallExpression	L ( & text )		2018975	0					
ANR	2019034	Callee	L		2018975	0					
ANR	2019035	Identifier	L		2018975	0					
ANR	2019036	ArgumentList	& text		2018975	1					
ANR	2019037	Argument	& text		2018975	0					
ANR	2019038	UnaryOperationExpression	& text		2018975	0					
ANR	2019039	UnaryOperator	&		2018975	0					
ANR	2019040	Identifier	text		2018975	1					
ANR	2019041	Identifier	slen		2018975	1					
ANR	2019042	ExpressionStatement	"patterns = php_strtr_array_prepare_repls ( slen , pats , & allocs , & patterns_len )"	3138:1:76107:76183	2018975	8	True				
ANR	2019043	AssignmentExpression	"patterns = php_strtr_array_prepare_repls ( slen , pats , & allocs , & patterns_len )"		2018975	0		=			
ANR	2019044	Identifier	patterns		2018975	0					
ANR	2019045	CallExpression	"php_strtr_array_prepare_repls ( slen , pats , & allocs , & patterns_len )"		2018975	1					
ANR	2019046	Callee	php_strtr_array_prepare_repls		2018975	0					
ANR	2019047	Identifier	php_strtr_array_prepare_repls		2018975	0					
ANR	2019048	ArgumentList	slen		2018975	1					
ANR	2019049	Argument	slen		2018975	0					
ANR	2019050	Identifier	slen		2018975	0					
ANR	2019051	Argument	pats		2018975	1					
ANR	2019052	Identifier	pats		2018975	0					
ANR	2019053	Argument	& allocs		2018975	2					
ANR	2019054	UnaryOperationExpression	& allocs		2018975	0					
ANR	2019055	UnaryOperator	&		2018975	0					
ANR	2019056	Identifier	allocs		2018975	1					
ANR	2019057	Argument	& patterns_len		2018975	3					
ANR	2019058	UnaryOperationExpression	& patterns_len		2018975	0					
ANR	2019059	UnaryOperator	&		2018975	0					
ANR	2019060	Identifier	patterns_len		2018975	1					
ANR	2019061	IfStatement	if ( patterns == NULL )		2018975	9					
ANR	2019062	Condition	patterns == NULL	3139:5:76190:76205	2018975	0	True				
ANR	2019063	EqualityExpression	patterns == NULL		2018975	0		==			
ANR	2019064	Identifier	patterns		2018975	0					
ANR	2019065	Identifier	NULL		2018975	1					
ANR	2019066	CompoundStatement		16:23:309:309	2018975	1					
ANR	2019067	ExpressionStatement	RETURN_FALSE	3140:2:76212:76224	2018975	0	True				
ANR	2019068	Identifier	RETURN_FALSE		2018975	0					
ANR	2019069	IfStatement	if ( patterns_len == 0 )		2018975	10					
ANR	2019070	Condition	patterns_len == 0	3142:5:76234:76250	2018975	0	True				
ANR	2019071	EqualityExpression	patterns_len == 0		2018975	0		==			
ANR	2019072	Identifier	patterns_len		2018975	0					
ANR	2019073	PrimaryExpression	0		2018975	1					
ANR	2019074	CompoundStatement		19:24:354:354	2018975	1					
ANR	2019075	ExpressionStatement	efree ( patterns )	3143:2:76257:76272	2018975	0	True				
ANR	2019076	CallExpression	efree ( patterns )		2018975	0					
ANR	2019077	Callee	efree		2018975	0					
ANR	2019078	Identifier	efree		2018975	0					
ANR	2019079	ArgumentList	patterns		2018975	1					
ANR	2019080	Argument	patterns		2018975	0					
ANR	2019081	Identifier	patterns		2018975	0					
ANR	2019082	ExpressionStatement	zend_llist_destroy ( allocs )	3144:2:76276:76302	2018975	1	True				
ANR	2019083	CallExpression	zend_llist_destroy ( allocs )		2018975	0					
ANR	2019084	Callee	zend_llist_destroy		2018975	0					
ANR	2019085	Identifier	zend_llist_destroy		2018975	0					
ANR	2019086	ArgumentList	allocs		2018975	1					
ANR	2019087	Argument	allocs		2018975	0					
ANR	2019088	Identifier	allocs		2018975	0					
ANR	2019089	ExpressionStatement	efree ( allocs )	3145:2:76306:76319	2018975	2	True				
ANR	2019090	CallExpression	efree ( allocs )		2018975	0					
ANR	2019091	Callee	efree		2018975	0					
ANR	2019092	Identifier	efree		2018975	0					
ANR	2019093	ArgumentList	allocs		2018975	1					
ANR	2019094	Argument	allocs		2018975	0					
ANR	2019095	Identifier	allocs		2018975	0					
ANR	2019096	ExpressionStatement	"RETURN_STRINGL ( str , slen , 1 )"	3146:2:76323:76351	2018975	3	True				
ANR	2019097	CallExpression	"RETURN_STRINGL ( str , slen , 1 )"		2018975	0					
ANR	2019098	Callee	RETURN_STRINGL		2018975	0					
ANR	2019099	Identifier	RETURN_STRINGL		2018975	0					
ANR	2019100	ArgumentList	str		2018975	1					
ANR	2019101	Argument	str		2018975	0					
ANR	2019102	Identifier	str		2018975	0					
ANR	2019103	Argument	slen		2018975	1					
ANR	2019104	Identifier	slen		2018975	0					
ANR	2019105	Argument	1		2018975	2					
ANR	2019106	PrimaryExpression	1		2018975	0					
ANR	2019107	ExpressionStatement	"data = php_strtr_array_prepare ( & text , patterns , patterns_len , 2 , 2 )"	3148:1:76357:76424	2018975	11	True				
ANR	2019108	AssignmentExpression	"data = php_strtr_array_prepare ( & text , patterns , patterns_len , 2 , 2 )"		2018975	0		=			
ANR	2019109	Identifier	data		2018975	0					
ANR	2019110	CallExpression	"php_strtr_array_prepare ( & text , patterns , patterns_len , 2 , 2 )"		2018975	1					
ANR	2019111	Callee	php_strtr_array_prepare		2018975	0					
ANR	2019112	Identifier	php_strtr_array_prepare		2018975	0					
ANR	2019113	ArgumentList	& text		2018975	1					
ANR	2019114	Argument	& text		2018975	0					
ANR	2019115	UnaryOperationExpression	& text		2018975	0					
ANR	2019116	UnaryOperator	&		2018975	0					
ANR	2019117	Identifier	text		2018975	1					
ANR	2019118	Argument	patterns		2018975	1					
ANR	2019119	Identifier	patterns		2018975	0					
ANR	2019120	Argument	patterns_len		2018975	2					
ANR	2019121	Identifier	patterns_len		2018975	0					
ANR	2019122	Argument	2		2018975	3					
ANR	2019123	PrimaryExpression	2		2018975	0					
ANR	2019124	Argument	2		2018975	4					
ANR	2019125	PrimaryExpression	2		2018975	0					
ANR	2019126	ExpressionStatement	efree ( patterns )	3149:1:76427:76442	2018975	12	True				
ANR	2019127	CallExpression	efree ( patterns )		2018975	0					
ANR	2019128	Callee	efree		2018975	0					
ANR	2019129	Identifier	efree		2018975	0					
ANR	2019130	ArgumentList	patterns		2018975	1					
ANR	2019131	Argument	patterns		2018975	0					
ANR	2019132	Identifier	patterns		2018975	0					
ANR	2019133	ExpressionStatement	"php_strtr_array_do_repl ( & text , data , return_value )"	3150:1:76445:76495	2018975	13	True				
ANR	2019134	CallExpression	"php_strtr_array_do_repl ( & text , data , return_value )"		2018975	0					
ANR	2019135	Callee	php_strtr_array_do_repl		2018975	0					
ANR	2019136	Identifier	php_strtr_array_do_repl		2018975	0					
ANR	2019137	ArgumentList	& text		2018975	1					
ANR	2019138	Argument	& text		2018975	0					
ANR	2019139	UnaryOperationExpression	& text		2018975	0					
ANR	2019140	UnaryOperator	&		2018975	0					
ANR	2019141	Identifier	text		2018975	1					
ANR	2019142	Argument	data		2018975	1					
ANR	2019143	Identifier	data		2018975	0					
ANR	2019144	Argument	return_value		2018975	2					
ANR	2019145	Identifier	return_value		2018975	0					
ANR	2019146	ExpressionStatement	php_strtr_array_destroy_ppres ( data )	3151:1:76498:76533	2018975	14	True				
ANR	2019147	CallExpression	php_strtr_array_destroy_ppres ( data )		2018975	0					
ANR	2019148	Callee	php_strtr_array_destroy_ppres		2018975	0					
ANR	2019149	Identifier	php_strtr_array_destroy_ppres		2018975	0					
ANR	2019150	ArgumentList	data		2018975	1					
ANR	2019151	Argument	data		2018975	0					
ANR	2019152	Identifier	data		2018975	0					
ANR	2019153	ExpressionStatement	zend_llist_destroy ( allocs )	3152:1:76536:76562	2018975	15	True				
ANR	2019154	CallExpression	zend_llist_destroy ( allocs )		2018975	0					
ANR	2019155	Callee	zend_llist_destroy		2018975	0					
ANR	2019156	Identifier	zend_llist_destroy		2018975	0					
ANR	2019157	ArgumentList	allocs		2018975	1					
ANR	2019158	Argument	allocs		2018975	0					
ANR	2019159	Identifier	allocs		2018975	0					
ANR	2019160	ExpressionStatement	efree ( allocs )	3153:1:76565:76578	2018975	16	True				
ANR	2019161	CallExpression	efree ( allocs )		2018975	0					
ANR	2019162	Callee	efree		2018975	0					
ANR	2019163	Identifier	efree		2018975	0					
ANR	2019164	ArgumentList	allocs		2018975	1					
ANR	2019165	Argument	allocs		2018975	0					
ANR	2019166	Identifier	allocs		2018975	0					
ANR	2019167	ReturnType	static void		2018975	1					
ANR	2019168	Identifier	php_strtr_array		2018975	2					
ANR	2019169	ParameterList	"zval * return_value , char * str , int slen , HashTable * pats"		2018975	3					
ANR	2019170	Parameter	zval * return_value	3123:28:75840:75857	2018975	0	True				
ANR	2019171	ParameterType	zval *		2018975	0					
ANR	2019172	Identifier	return_value		2018975	1					
ANR	2019173	Parameter	char * str	3123:48:75860:75868	2018975	1	True				
ANR	2019174	ParameterType	char *		2018975	0					
ANR	2019175	Identifier	str		2018975	1					
ANR	2019176	Parameter	int slen	3123:59:75871:75878	2018975	2	True				
ANR	2019177	ParameterType	int		2018975	0					
ANR	2019178	Identifier	slen		2018975	1					
ANR	2019179	Parameter	HashTable * pats	3123:69:75881:75895	2018975	3	True				
ANR	2019180	ParameterType	HashTable *		2018975	0					
ANR	2019181	Identifier	pats		2018975	1					
ANR	2019182	CFGEntryNode	ENTRY		2018975		True				
ANR	2019183	CFGExitNode	EXIT		2018975		True				
ANR	2019184	Symbol	return_value		2018975						
ANR	2019185	Symbol	NULL		2018975						
ANR	2019186	Symbol	pats		2018975						
ANR	2019187	Symbol	data		2018975						
ANR	2019188	Symbol	patterns_len		2018975						
ANR	2019189	Symbol	zend_hash_num_elements		2018975						
ANR	2019190	Symbol	& allocs		2018975						
ANR	2019191	Symbol	patterns		2018975						
ANR	2019192	Symbol	php_strtr_array_prepare		2018975						
ANR	2019193	Symbol	L		2018975						
ANR	2019194	Symbol	str		2018975						
ANR	2019195	Symbol	S		2018975						
ANR	2019196	Symbol	allocs		2018975						
ANR	2019197	Symbol	& text		2018975						
ANR	2019198	Symbol	slen		2018975						
ANR	2019199	Symbol	php_strtr_array_prepare_repls		2018975						
ANR	2019200	Symbol	& patterns_len		2018975						
ANR	2019201	Symbol	text		2018975						
ANR	2019202	DeclStmt									
ANR	2019203	Decl							zval	zval * *	from
ANR	2019204	DeclStmt									
ANR	2019205	Decl							char	char *	str
ANR	2019206	Decl							char	char *	to
ANR	2019207	DeclStmt									
ANR	2019208	Decl							int	int	str_len
ANR	2019209	Decl							int	int	to_len
ANR	2019210	DeclStmt									
ANR	2019211	Decl							int	int	ac
ANR	2019212	DeclStmt									
ANR	2019213	Decl							char	char *	str
ANR	2019214	DeclStmt									
ANR	2019215	Decl							char	char *	e
ANR	2019216	Decl							char	char *	n
ANR	2019217	Decl							char	char *	p
ANR	2019218	DeclStmt									
ANR	2019219	Decl							int	int	str_len
ANR	2019220	Function	php_similar_str	3226:0:77945:78416							
ANR	2019221	FunctionDef	"php_similar_str (const char * txt1 , int len1 , const char * txt2 , int len2 , int * pos1 , int * pos2 , int * max)"		2019220	0					
ANR	2019222	CompoundStatement		3227:0:78061:78416	2019220	0					
ANR	2019223	IdentifierDeclStatement	"char * p , * q ;"	3228:1:78064:78075	2019220	0	True				
ANR	2019224	IdentifierDecl	* p		2019220	0					
ANR	2019225	IdentifierDeclType	char *		2019220	0					
ANR	2019226	Identifier	p		2019220	1					
ANR	2019227	IdentifierDecl	* q		2019220	1					
ANR	2019228	IdentifierDeclType	char *		2019220	0					
ANR	2019229	Identifier	q		2019220	1					
ANR	2019230	IdentifierDeclStatement	char * end1 = ( char * ) txt1 + len1 ;	3229:1:78078:78111	2019220	1	True				
ANR	2019231	IdentifierDecl	* end1 = ( char * ) txt1 + len1		2019220	0					
ANR	2019232	IdentifierDeclType	char *		2019220	0					
ANR	2019233	Identifier	end1		2019220	1					
ANR	2019234	AssignmentExpression	* end1 = ( char * ) txt1 + len1		2019220	2		=			
ANR	2019235	Identifier	end1		2019220	0					
ANR	2019236	AdditiveExpression	( char * ) txt1 + len1		2019220	1		+			
ANR	2019237	CastExpression	( char * ) txt1		2019220	0					
ANR	2019238	CastTarget	char *		2019220	0					
ANR	2019239	Identifier	txt1		2019220	1					
ANR	2019240	Identifier	len1		2019220	1					
ANR	2019241	IdentifierDeclStatement	char * end2 = ( char * ) txt2 + len2 ;	3230:1:78114:78147	2019220	2	True				
ANR	2019242	IdentifierDecl	* end2 = ( char * ) txt2 + len2		2019220	0					
ANR	2019243	IdentifierDeclType	char *		2019220	0					
ANR	2019244	Identifier	end2		2019220	1					
ANR	2019245	AssignmentExpression	* end2 = ( char * ) txt2 + len2		2019220	2		=			
ANR	2019246	Identifier	end2		2019220	0					
ANR	2019247	AdditiveExpression	( char * ) txt2 + len2		2019220	1		+			
ANR	2019248	CastExpression	( char * ) txt2		2019220	0					
ANR	2019249	CastTarget	char *		2019220	0					
ANR	2019250	Identifier	txt2		2019220	1					
ANR	2019251	Identifier	len2		2019220	1					
ANR	2019252	IdentifierDeclStatement	int l ;	3231:1:78150:78155	2019220	3	True				
ANR	2019253	IdentifierDecl	l		2019220	0					
ANR	2019254	IdentifierDeclType	int		2019220	0					
ANR	2019255	Identifier	l		2019220	1					
ANR	2019256	ExpressionStatement	* max = 0	3233:1:78159:78167	2019220	4	True				
ANR	2019257	AssignmentExpression	* max = 0		2019220	0		=			
ANR	2019258	UnaryOperationExpression	* max		2019220	0					
ANR	2019259	UnaryOperator	*		2019220	0					
ANR	2019260	Identifier	max		2019220	1					
ANR	2019261	PrimaryExpression	0		2019220	1					
ANR	2019262	ForStatement	for ( p = ( char * ) txt1 ; p < end1 ; p ++ )		2019220	5					
ANR	2019263	ForInit	p = ( char * ) txt1 ;	3234:6:78175:78192	2019220	0	True				
ANR	2019264	AssignmentExpression	p = ( char * ) txt1		2019220	0		=			
ANR	2019265	Identifier	p		2019220	0					
ANR	2019266	CastExpression	( char * ) txt1		2019220	1					
ANR	2019267	CastTarget	char *		2019220	0					
ANR	2019268	Identifier	txt1		2019220	1					
ANR	2019269	Condition	p < end1	3234:25:78194:78201	2019220	1	True				
ANR	2019270	RelationalExpression	p < end1		2019220	0		<			
ANR	2019271	Identifier	p		2019220	0					
ANR	2019272	Identifier	end1		2019220	1					
ANR	2019273	PostIncDecOperationExpression	p ++	3234:35:78204:78206	2019220	2	True				
ANR	2019274	Identifier	p		2019220	0					
ANR	2019275	IncDec	++		2019220	1					
ANR	2019276	CompoundStatement		8:40:147:147	2019220	3					
ANR	2019277	ForStatement	for ( q = ( char * ) txt2 ; q < end2 ; q ++ )		2019220	0					
ANR	2019278	ForInit	q = ( char * ) txt2 ;	3235:7:78218:78235	2019220	0	True				
ANR	2019279	AssignmentExpression	q = ( char * ) txt2		2019220	0		=			
ANR	2019280	Identifier	q		2019220	0					
ANR	2019281	CastExpression	( char * ) txt2		2019220	1					
ANR	2019282	CastTarget	char *		2019220	0					
ANR	2019283	Identifier	txt2		2019220	1					
ANR	2019284	Condition	q < end2	3235:26:78237:78244	2019220	1	True				
ANR	2019285	RelationalExpression	q < end2		2019220	0		<			
ANR	2019286	Identifier	q		2019220	0					
ANR	2019287	Identifier	end2		2019220	1					
ANR	2019288	PostIncDecOperationExpression	q ++	3235:36:78247:78249	2019220	2	True				
ANR	2019289	Identifier	q		2019220	0					
ANR	2019290	IncDec	++		2019220	1					
ANR	2019291	CompoundStatement		9:41:190:190	2019220	3					
ANR	2019292	ForStatement	for ( l = 0 ; ( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] ) ; l ++ )		2019220	0					
ANR	2019293	ForInit	l = 0 ;	3236:8:78262:78267	2019220	0	True				
ANR	2019294	AssignmentExpression	l = 0		2019220	0		=			
ANR	2019295	Identifier	l		2019220	0					
ANR	2019296	PrimaryExpression	0		2019220	1					
ANR	2019297	Condition	( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] )	3236:15:78269:78318	2019220	1	True				
ANR	2019298	AndExpression	( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] )		2019220	0		&&			
ANR	2019299	RelationalExpression	p + l < end1		2019220	0		<			
ANR	2019300	AdditiveExpression	p + l		2019220	0		+			
ANR	2019301	Identifier	p		2019220	0					
ANR	2019302	Identifier	l		2019220	1					
ANR	2019303	Identifier	end1		2019220	1					
ANR	2019304	AndExpression	( q + l < end2 ) && ( p [ l ] == q [ l ] )		2019220	1		&&			
ANR	2019305	RelationalExpression	q + l < end2		2019220	0		<			
ANR	2019306	AdditiveExpression	q + l		2019220	0		+			
ANR	2019307	Identifier	q		2019220	0					
ANR	2019308	Identifier	l		2019220	1					
ANR	2019309	Identifier	end2		2019220	1					
ANR	2019310	EqualityExpression	p [ l ] == q [ l ]		2019220	1		==			
ANR	2019311	ArrayIndexing	p [ l ]		2019220	0					
ANR	2019312	Identifier	p		2019220	0					
ANR	2019313	Identifier	l		2019220	1					
ANR	2019314	ArrayIndexing	q [ l ]		2019220	1					
ANR	2019315	Identifier	q		2019220	0					
ANR	2019316	Identifier	l		2019220	1					
ANR	2019317	PostIncDecOperationExpression	l ++	3236:67:78321:78323	2019220	2	True				
ANR	2019318	Identifier	l		2019220	0					
ANR	2019319	IncDec	++		2019220	1					
ANR	2019320	ExpressionStatement		3236:71:78325:78325	2019220	3	True				
ANR	2019321	IfStatement	if ( l > * max )		2019220	1					
ANR	2019322	Condition	l > * max	3237:7:78334:78341	2019220	0	True				
ANR	2019323	RelationalExpression	l > * max		2019220	0		>			
ANR	2019324	Identifier	l		2019220	0					
ANR	2019325	UnaryOperationExpression	* max		2019220	1					
ANR	2019326	UnaryOperator	*		2019220	0					
ANR	2019327	Identifier	max		2019220	1					
ANR	2019328	CompoundStatement		11:17:282:282	2019220	1					
ANR	2019329	ExpressionStatement	* max = l	3238:4:78350:78358	2019220	0	True				
ANR	2019330	AssignmentExpression	* max = l		2019220	0		=			
ANR	2019331	UnaryOperationExpression	* max		2019220	0					
ANR	2019332	UnaryOperator	*		2019220	0					
ANR	2019333	Identifier	max		2019220	1					
ANR	2019334	Identifier	l		2019220	1					
ANR	2019335	ExpressionStatement	* pos1 = p - txt1	3239:4:78364:78380	2019220	1	True				
ANR	2019336	AssignmentExpression	* pos1 = p - txt1		2019220	0		=			
ANR	2019337	UnaryOperationExpression	* pos1		2019220	0					
ANR	2019338	UnaryOperator	*		2019220	0					
ANR	2019339	Identifier	pos1		2019220	1					
ANR	2019340	AdditiveExpression	p - txt1		2019220	1		-			
ANR	2019341	Identifier	p		2019220	0					
ANR	2019342	Identifier	txt1		2019220	1					
ANR	2019343	ExpressionStatement	* pos2 = q - txt2	3240:4:78386:78402	2019220	2	True				
ANR	2019344	AssignmentExpression	* pos2 = q - txt2		2019220	0		=			
ANR	2019345	UnaryOperationExpression	* pos2		2019220	0					
ANR	2019346	UnaryOperator	*		2019220	0					
ANR	2019347	Identifier	pos2		2019220	1					
ANR	2019348	AdditiveExpression	q - txt2		2019220	1		-			
ANR	2019349	Identifier	q		2019220	0					
ANR	2019350	Identifier	txt2		2019220	1					
ANR	2019351	ReturnType	static void		2019220	1					
ANR	2019352	Identifier	php_similar_str		2019220	2					
ANR	2019353	ParameterList	"const char * txt1 , int len1 , const char * txt2 , int len2 , int * pos1 , int * pos2 , int * max"		2019220	3					
ANR	2019354	Parameter	const char * txt1	3226:28:77973:77988	2019220	0	True				
ANR	2019355	ParameterType	const char *		2019220	0					
ANR	2019356	Identifier	txt1		2019220	1					
ANR	2019357	Parameter	int len1	3226:46:77991:77998	2019220	1	True				
ANR	2019358	ParameterType	int		2019220	0					
ANR	2019359	Identifier	len1		2019220	1					
ANR	2019360	Parameter	const char * txt2	3226:56:78001:78016	2019220	2	True				
ANR	2019361	ParameterType	const char *		2019220	0					
ANR	2019362	Identifier	txt2		2019220	1					
ANR	2019363	Parameter	int len2	3226:74:78019:78026	2019220	3	True				
ANR	2019364	ParameterType	int		2019220	0					
ANR	2019365	Identifier	len2		2019220	1					
ANR	2019366	Parameter	int * pos1	3226:84:78029:78037	2019220	4	True				
ANR	2019367	ParameterType	int *		2019220	0					
ANR	2019368	Identifier	pos1		2019220	1					
ANR	2019369	Parameter	int * pos2	3226:95:78040:78048	2019220	5	True				
ANR	2019370	ParameterType	int *		2019220	0					
ANR	2019371	Identifier	pos2		2019220	1					
ANR	2019372	Parameter	int * max	3226:106:78051:78058	2019220	6	True				
ANR	2019373	ParameterType	int *		2019220	0					
ANR	2019374	Identifier	max		2019220	1					
ANR	2019375	CFGEntryNode	ENTRY		2019220		True				
ANR	2019376	CFGExitNode	EXIT		2019220		True				
ANR	2019377	Symbol	max		2019220						
ANR	2019378	Symbol	pos1		2019220						
ANR	2019379	Symbol	pos2		2019220						
ANR	2019380	Symbol	l		2019220						
ANR	2019381	Symbol	len1		2019220						
ANR	2019382	Symbol	* max		2019220						
ANR	2019383	Symbol	len2		2019220						
ANR	2019384	Symbol	p		2019220						
ANR	2019385	Symbol	* pos1		2019220						
ANR	2019386	Symbol	q		2019220						
ANR	2019387	Symbol	txt2		2019220						
ANR	2019388	Symbol	* l		2019220						
ANR	2019389	Symbol	txt1		2019220						
ANR	2019390	Symbol	* pos2		2019220						
ANR	2019391	Symbol	end2		2019220						
ANR	2019392	Symbol	end1		2019220						
ANR	2019393	Symbol	* p		2019220						
ANR	2019394	Symbol	* q		2019220						
ANR	2019395	Function	php_similar_char	3249:0:78457:78939							
ANR	2019396	FunctionDef	"php_similar_char (const char * txt1 , int len1 , const char * txt2 , int len2)"		2019395	0					
ANR	2019397	CompoundStatement		3250:0:78541:78939	2019395	0					
ANR	2019398	IdentifierDeclStatement	int sum ;	3251:1:78544:78551	2019395	0	True				
ANR	2019399	IdentifierDecl	sum		2019395	0					
ANR	2019400	IdentifierDeclType	int		2019395	0					
ANR	2019401	Identifier	sum		2019395	1					
ANR	2019402	IdentifierDeclStatement	"int pos1 = 0 , pos2 = 0 , max ;"	3252:1:78554:78581	2019395	1	True				
ANR	2019403	IdentifierDecl	pos1 = 0		2019395	0					
ANR	2019404	IdentifierDeclType	int		2019395	0					
ANR	2019405	Identifier	pos1		2019395	1					
ANR	2019406	AssignmentExpression	pos1 = 0		2019395	2		=			
ANR	2019407	Identifier	pos1		2019395	0					
ANR	2019408	PrimaryExpression	0		2019395	1					
ANR	2019409	IdentifierDecl	pos2 = 0		2019395	1					
ANR	2019410	IdentifierDeclType	int		2019395	0					
ANR	2019411	Identifier	pos2		2019395	1					
ANR	2019412	AssignmentExpression	pos2 = 0		2019395	2		=			
ANR	2019413	Identifier	pos2		2019395	0					
ANR	2019414	PrimaryExpression	0		2019395	1					
ANR	2019415	IdentifierDecl	max		2019395	2					
ANR	2019416	IdentifierDeclType	int		2019395	0					
ANR	2019417	Identifier	max		2019395	1					
ANR	2019418	ExpressionStatement	"php_similar_str ( txt1 , len1 , txt2 , len2 , & pos1 , & pos2 , & max )"	3254:1:78585:78644	2019395	2	True				
ANR	2019419	CallExpression	"php_similar_str ( txt1 , len1 , txt2 , len2 , & pos1 , & pos2 , & max )"		2019395	0					
ANR	2019420	Callee	php_similar_str		2019395	0					
ANR	2019421	Identifier	php_similar_str		2019395	0					
ANR	2019422	ArgumentList	txt1		2019395	1					
ANR	2019423	Argument	txt1		2019395	0					
ANR	2019424	Identifier	txt1		2019395	0					
ANR	2019425	Argument	len1		2019395	1					
ANR	2019426	Identifier	len1		2019395	0					
ANR	2019427	Argument	txt2		2019395	2					
ANR	2019428	Identifier	txt2		2019395	0					
ANR	2019429	Argument	len2		2019395	3					
ANR	2019430	Identifier	len2		2019395	0					
ANR	2019431	Argument	& pos1		2019395	4					
ANR	2019432	UnaryOperationExpression	& pos1		2019395	0					
ANR	2019433	UnaryOperator	&		2019395	0					
ANR	2019434	Identifier	pos1		2019395	1					
ANR	2019435	Argument	& pos2		2019395	5					
ANR	2019436	UnaryOperationExpression	& pos2		2019395	0					
ANR	2019437	UnaryOperator	&		2019395	0					
ANR	2019438	Identifier	pos2		2019395	1					
ANR	2019439	Argument	& max		2019395	6					
ANR	2019440	UnaryOperationExpression	& max		2019395	0					
ANR	2019441	UnaryOperator	&		2019395	0					
ANR	2019442	Identifier	max		2019395	1					
ANR	2019443	IfStatement	if ( ( sum = max ) )		2019395	3					
ANR	2019444	Condition	sum = max	3255:5:78651:78661	2019395	0	True				
ANR	2019445	AssignmentExpression	sum = max		2019395	0		=			
ANR	2019446	Identifier	sum		2019395	0					
ANR	2019447	Identifier	max		2019395	1					
ANR	2019448	CompoundStatement		6:18:122:122	2019395	1					
ANR	2019449	IfStatement	if ( pos1 && pos2 )		2019395	0					
ANR	2019450	Condition	pos1 && pos2	3256:6:78672:78683	2019395	0	True				
ANR	2019451	AndExpression	pos1 && pos2		2019395	0		&&			
ANR	2019452	Identifier	pos1		2019395	0					
ANR	2019453	Identifier	pos2		2019395	1					
ANR	2019454	CompoundStatement		7:20:144:144	2019395	1					
ANR	2019455	ExpressionStatement	"sum += php_similar_char ( txt1 , pos1 , txt2 , pos2 )"	3257:3:78691:78747	2019395	0	True				
ANR	2019456	AssignmentExpression	"sum += php_similar_char ( txt1 , pos1 , txt2 , pos2 )"		2019395	0		+=			
ANR	2019457	Identifier	sum		2019395	0					
ANR	2019458	CallExpression	"php_similar_char ( txt1 , pos1 , txt2 , pos2 )"		2019395	1					
ANR	2019459	Callee	php_similar_char		2019395	0					
ANR	2019460	Identifier	php_similar_char		2019395	0					
ANR	2019461	ArgumentList	txt1		2019395	1					
ANR	2019462	Argument	txt1		2019395	0					
ANR	2019463	Identifier	txt1		2019395	0					
ANR	2019464	Argument	pos1		2019395	1					
ANR	2019465	Identifier	pos1		2019395	0					
ANR	2019466	Argument	txt2		2019395	2					
ANR	2019467	Identifier	txt2		2019395	0					
ANR	2019468	Argument	pos2		2019395	3					
ANR	2019469	Identifier	pos2		2019395	0					
ANR	2019470	IfStatement	if ( ( pos1 + max < len1 ) && ( pos2 + max < len2 ) )		2019395	1					
ANR	2019471	Condition	( pos1 + max < len1 ) && ( pos2 + max < len2 )	3260:6:78759:78800	2019395	0	True				
ANR	2019472	AndExpression	( pos1 + max < len1 ) && ( pos2 + max < len2 )		2019395	0		&&			
ANR	2019473	RelationalExpression	pos1 + max < len1		2019395	0		<			
ANR	2019474	AdditiveExpression	pos1 + max		2019395	0		+			
ANR	2019475	Identifier	pos1		2019395	0					
ANR	2019476	Identifier	max		2019395	1					
ANR	2019477	Identifier	len1		2019395	1					
ANR	2019478	RelationalExpression	pos2 + max < len2		2019395	1		<			
ANR	2019479	AdditiveExpression	pos2 + max		2019395	0		+			
ANR	2019480	Identifier	pos2		2019395	0					
ANR	2019481	Identifier	max		2019395	1					
ANR	2019482	Identifier	len2		2019395	1					
ANR	2019483	CompoundStatement		11:50:261:261	2019395	1					
ANR	2019484	ExpressionStatement	"sum += php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"	3261:3:78808:78916	2019395	0	True				
ANR	2019485	AssignmentExpression	"sum += php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"		2019395	0		+=			
ANR	2019486	Identifier	sum		2019395	0					
ANR	2019487	CallExpression	"php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"		2019395	1					
ANR	2019488	Callee	php_similar_char		2019395	0					
ANR	2019489	Identifier	php_similar_char		2019395	0					
ANR	2019490	ArgumentList	txt1 + pos1 + max		2019395	1					
ANR	2019491	Argument	txt1 + pos1 + max		2019395	0					
ANR	2019492	AdditiveExpression	txt1 + pos1 + max		2019395	0		+			
ANR	2019493	Identifier	txt1		2019395	0					
ANR	2019494	AdditiveExpression	pos1 + max		2019395	1		+			
ANR	2019495	Identifier	pos1		2019395	0					
ANR	2019496	Identifier	max		2019395	1					
ANR	2019497	Argument	len1 - pos1 - max		2019395	1					
ANR	2019498	AdditiveExpression	len1 - pos1 - max		2019395	0		-			
ANR	2019499	Identifier	len1		2019395	0					
ANR	2019500	AdditiveExpression	pos1 - max		2019395	1		-			
ANR	2019501	Identifier	pos1		2019395	0					
ANR	2019502	Identifier	max		2019395	1					
ANR	2019503	Argument	txt2 + pos2 + max		2019395	2					
ANR	2019504	AdditiveExpression	txt2 + pos2 + max		2019395	0		+			
ANR	2019505	Identifier	txt2		2019395	0					
ANR	2019506	AdditiveExpression	pos2 + max		2019395	1		+			
ANR	2019507	Identifier	pos2		2019395	0					
ANR	2019508	Identifier	max		2019395	1					
ANR	2019509	Argument	len2 - pos2 - max		2019395	3					
ANR	2019510	AdditiveExpression	len2 - pos2 - max		2019395	0		-			
ANR	2019511	Identifier	len2		2019395	0					
ANR	2019512	AdditiveExpression	pos2 - max		2019395	1		-			
ANR	2019513	Identifier	pos2		2019395	0					
ANR	2019514	Identifier	max		2019395	1					
ANR	2019515	ReturnStatement	return sum ;	3266:1:78927:78937	2019395	4	True				
ANR	2019516	Identifier	sum		2019395	0					
ANR	2019517	ReturnType	static int		2019395	1					
ANR	2019518	Identifier	php_similar_char		2019395	2					
ANR	2019519	ParameterList	"const char * txt1 , int len1 , const char * txt2 , int len2"		2019395	3					
ANR	2019520	Parameter	const char * txt1	3249:28:78485:78500	2019395	0	True				
ANR	2019521	ParameterType	const char *		2019395	0					
ANR	2019522	Identifier	txt1		2019395	1					
ANR	2019523	Parameter	int len1	3249:46:78503:78510	2019395	1	True				
ANR	2019524	ParameterType	int		2019395	0					
ANR	2019525	Identifier	len1		2019395	1					
ANR	2019526	Parameter	const char * txt2	3249:56:78513:78528	2019395	2	True				
ANR	2019527	ParameterType	const char *		2019395	0					
ANR	2019528	Identifier	txt2		2019395	1					
ANR	2019529	Parameter	int len2	3249:74:78531:78538	2019395	3	True				
ANR	2019530	ParameterType	int		2019395	0					
ANR	2019531	Identifier	len2		2019395	1					
ANR	2019532	CFGEntryNode	ENTRY		2019395		True				
ANR	2019533	CFGExitNode	EXIT		2019395		True				
ANR	2019534	Symbol	txt2		2019395						
ANR	2019535	Symbol	max		2019395						
ANR	2019536	Symbol	txt1		2019395						
ANR	2019537	Symbol	& pos2		2019395						
ANR	2019538	Symbol	& pos1		2019395						
ANR	2019539	Symbol	pos1		2019395						
ANR	2019540	Symbol	sum		2019395						
ANR	2019541	Symbol	pos2		2019395						
ANR	2019542	Symbol	php_similar_char		2019395						
ANR	2019543	Symbol	& max		2019395						
ANR	2019544	Symbol	len1		2019395						
ANR	2019545	Symbol	len2		2019395						
ANR	2019546	DeclStmt									
ANR	2019547	Decl							char	char *	t1
ANR	2019548	Decl							char	char *	t2
ANR	2019549	DeclStmt									
ANR	2019550	Decl							zval	zval * *	percent
ANR	2019551	DeclStmt									
ANR	2019552	Decl							int	int	ac
ANR	2019553	DeclStmt									
ANR	2019554	Decl							int	int	sim
ANR	2019555	DeclStmt									
ANR	2019556	Decl							int	int	t1_len
ANR	2019557	Decl							int	int	t2_len
ANR	2019558	DeclStmt									
ANR	2019559	Decl							char	char *	s
ANR	2019560	Decl							char	char *	t
ANR	2019561	DeclStmt									
ANR	2019562	Decl							int	int	l
ANR	2019563	DeclStmt									
ANR	2019564	Decl							char	char *	str
ANR	2019565	Decl							char	char *	what
ANR	2019566	DeclStmt									
ANR	2019567	Decl							int	int	str_len
ANR	2019568	Decl							int	int	what_len
ANR	2019569	DeclStmt									
ANR	2019570	Decl							char	char *	str
ANR	2019571	DeclStmt									
ANR	2019572	Decl							int	int	str_len
ANR	2019573	DeclStmt									
ANR	2019574	Decl							char	char *	str
ANR	2019575	DeclStmt									
ANR	2019576	Decl							int	int	str_len
ANR	2019577	DeclStmt									
ANR	2019578	Decl							char	char *	str
ANR	2019579	DeclStmt									
ANR	2019580	Decl							int	int	str_len
ANR	2019581	Function	php_strerror	3430:0:82375:82673							
ANR	2019582	FunctionDef	php_strerror (int errnum)		2019581	0					
ANR	2019583	CompoundStatement		3431:0:82406:82673	2019581	0					
ANR	2019584	IdentifierDeclStatement	extern int sys_nerr ;	3432:1:82409:82428	2019581	0	True				
ANR	2019585	IdentifierDecl	sys_nerr		2019581	0					
ANR	2019586	IdentifierDeclType	extern int		2019581	0					
ANR	2019587	Identifier	sys_nerr		2019581	1					
ANR	2019588	IdentifierDeclStatement	extern char * sys_errlist [ ] ;	3433:1:82431:82457	2019581	1	True				
ANR	2019589	IdentifierDecl	* sys_errlist [ ]		2019581	0					
ANR	2019590	IdentifierDeclType	extern char * [ ]		2019581	0					
ANR	2019591	Identifier	sys_errlist		2019581	1					
ANR	2019592	ExpressionStatement	TSRMLS_FETCH ( )	3434:1:82460:82474	2019581	2	True				
ANR	2019593	CallExpression	TSRMLS_FETCH ( )		2019581	0					
ANR	2019594	Callee	TSRMLS_FETCH		2019581	0					
ANR	2019595	Identifier	TSRMLS_FETCH		2019581	0					
ANR	2019596	ArgumentList			2019581	1					
ANR	2019597	IfStatement	if ( ( unsigned int ) errnum < sys_nerr )		2019581	3					
ANR	2019598	Condition	( unsigned int ) errnum < sys_nerr	3436:5:82482:82513	2019581	0	True				
ANR	2019599	RelationalExpression	( unsigned int ) errnum < sys_nerr		2019581	0		<			
ANR	2019600	CastExpression	( unsigned int ) errnum		2019581	0					
ANR	2019601	CastTarget	unsigned int		2019581	0					
ANR	2019602	Identifier	errnum		2019581	1					
ANR	2019603	Identifier	sys_nerr		2019581	1					
ANR	2019604	CompoundStatement		6:39:109:109	2019581	1					
ANR	2019605	ReturnStatement	return ( sys_errlist [ errnum ] ) ;	3437:2:82520:82547	2019581	0	True				
ANR	2019606	ArrayIndexing	sys_errlist [ errnum ]		2019581	0					
ANR	2019607	Identifier	sys_errlist		2019581	0					
ANR	2019608	Identifier	errnum		2019581	1					
ANR	2019609	ExpressionStatement	"( void ) snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"	3440:1:82554:82648	2019581	4	True				
ANR	2019610	CastExpression	"( void ) snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"		2019581	0					
ANR	2019611	CastTarget	void		2019581	0					
ANR	2019612	CallExpression	"snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"		2019581	1					
ANR	2019613	Callee	snprintf		2019581	0					
ANR	2019614	Identifier	snprintf		2019581	0					
ANR	2019615	ArgumentList	BG ( str_ebuf )		2019581	1					
ANR	2019616	Argument	BG ( str_ebuf )		2019581	0					
ANR	2019617	CallExpression	BG ( str_ebuf )		2019581	0					
ANR	2019618	Callee	BG		2019581	0					
ANR	2019619	Identifier	BG		2019581	0					
ANR	2019620	ArgumentList	str_ebuf		2019581	1					
ANR	2019621	Argument	str_ebuf		2019581	0					
ANR	2019622	Identifier	str_ebuf		2019581	0					
ANR	2019623	Argument	sizeof ( php_basic_globals . str_ebuf )		2019581	1					
ANR	2019624	SizeofExpression	sizeof ( php_basic_globals . str_ebuf )		2019581	0					
ANR	2019625	Sizeof	sizeof		2019581	0					
ANR	2019626	MemberAccess	php_basic_globals . str_ebuf		2019581	1					
ANR	2019627	Identifier	php_basic_globals		2019581	0					
ANR	2019628	Identifier	str_ebuf		2019581	1					
ANR	2019629	Argument	"""Unknown error: %d"""		2019581	2					
ANR	2019630	PrimaryExpression	"""Unknown error: %d"""		2019581	0					
ANR	2019631	Argument	errnum		2019581	3					
ANR	2019632	Identifier	errnum		2019581	0					
ANR	2019633	ReturnStatement	return ( BG ( str_ebuf ) ) ;	3441:1:82651:82671	2019581	5	True				
ANR	2019634	CallExpression	BG ( str_ebuf )		2019581	0					
ANR	2019635	Callee	BG		2019581	0					
ANR	2019636	Identifier	BG		2019581	0					
ANR	2019637	ArgumentList	str_ebuf		2019581	1					
ANR	2019638	Argument	str_ebuf		2019581	0					
ANR	2019639	Identifier	str_ebuf		2019581	0					
ANR	2019640	ReturnType	char *		2019581	1					
ANR	2019641	Identifier	php_strerror		2019581	2					
ANR	2019642	ParameterList	int errnum		2019581	3					
ANR	2019643	Parameter	int errnum	3430:19:82394:82403	2019581	0	True				
ANR	2019644	ParameterType	int		2019581	0					
ANR	2019645	Identifier	errnum		2019581	1					
ANR	2019646	CFGEntryNode	ENTRY		2019581		True				
ANR	2019647	CFGExitNode	EXIT		2019581		True				
ANR	2019648	Symbol	* sys_errlist		2019581						
ANR	2019649	Symbol	str_ebuf		2019581						
ANR	2019650	Symbol	errnum		2019581						
ANR	2019651	Symbol	BG		2019581						
ANR	2019652	Symbol	sys_errlist		2019581						
ANR	2019653	Symbol	php_basic_globals . str_ebuf		2019581						
ANR	2019654	Symbol	* errnum		2019581						
ANR	2019655	Symbol	php_basic_globals		2019581						
ANR	2019656	Symbol	sys_nerr		2019581						
ANR	2019657	Function	php_stripcslashes	3448:0:82722:84169							
ANR	2019658	FunctionDef	"php_stripcslashes (char * str , int * len)"		2019657	0					
ANR	2019659	CompoundStatement		3449:0:82773:84169	2019657	0					
ANR	2019660	IdentifierDeclStatement	"char * source , * target , * end ;"	3450:1:82776:82803	2019657	0	True				
ANR	2019661	IdentifierDecl	* source		2019657	0					
ANR	2019662	IdentifierDeclType	char *		2019657	0					
ANR	2019663	Identifier	source		2019657	1					
ANR	2019664	IdentifierDecl	* target		2019657	1					
ANR	2019665	IdentifierDeclType	char *		2019657	0					
ANR	2019666	Identifier	target		2019657	1					
ANR	2019667	IdentifierDecl	* end		2019657	2					
ANR	2019668	IdentifierDeclType	char *		2019657	0					
ANR	2019669	Identifier	end		2019657	1					
ANR	2019670	IdentifierDeclStatement	"int nlen = * len , i ;"	3451:1:82806:82825	2019657	1	True				
ANR	2019671	IdentifierDecl	nlen = * len		2019657	0					
ANR	2019672	IdentifierDeclType	int		2019657	0					
ANR	2019673	Identifier	nlen		2019657	1					
ANR	2019674	AssignmentExpression	nlen = * len		2019657	2		=			
ANR	2019675	Identifier	nlen		2019657	0					
ANR	2019676	UnaryOperationExpression	* len		2019657	1					
ANR	2019677	UnaryOperator	*		2019657	0					
ANR	2019678	Identifier	len		2019657	1					
ANR	2019679	IdentifierDecl	i		2019657	1					
ANR	2019680	IdentifierDeclType	int		2019657	0					
ANR	2019681	Identifier	i		2019657	1					
ANR	2019682	IdentifierDeclStatement	char numtmp [ 4 ] ;	3452:1:82828:82842	2019657	2	True				
ANR	2019683	IdentifierDecl	numtmp [ 4 ]		2019657	0					
ANR	2019684	IdentifierDeclType	char [ 4 ]		2019657	0					
ANR	2019685	Identifier	numtmp		2019657	1					
ANR	2019686	PrimaryExpression	4		2019657	2					
ANR	2019687	ForStatement	"for ( source = str , end = str + nlen , target = str ; source < end ; source ++ )"		2019657	3					
ANR	2019688	ForInit	"source = str , end = str + nlen , target = str ;"	3454:6:82851:82887	2019657	0	True				
ANR	2019689	Expression	"source = str , end = str + nlen , target = str"		2019657	0					
ANR	2019690	AssignmentExpression	source = str		2019657	0		=			
ANR	2019691	Identifier	source		2019657	0					
ANR	2019692	Identifier	str		2019657	1					
ANR	2019693	Expression	"end = str + nlen , target = str"		2019657	1					
ANR	2019694	AssignmentExpression	end = str + nlen		2019657	0		=			
ANR	2019695	Identifier	end		2019657	0					
ANR	2019696	AdditiveExpression	str + nlen		2019657	1		+			
ANR	2019697	Identifier	str		2019657	0					
ANR	2019698	Identifier	nlen		2019657	1					
ANR	2019699	AssignmentExpression	target = str		2019657	1		=			
ANR	2019700	Identifier	target		2019657	0					
ANR	2019701	Identifier	str		2019657	1					
ANR	2019702	Condition	source < end	3454:44:82889:82900	2019657	1	True				
ANR	2019703	RelationalExpression	source < end		2019657	0		<			
ANR	2019704	Identifier	source		2019657	0					
ANR	2019705	Identifier	end		2019657	1					
ANR	2019706	PostIncDecOperationExpression	source ++	3454:58:82903:82910	2019657	2	True				
ANR	2019707	Identifier	source		2019657	0					
ANR	2019708	IncDec	++		2019657	1					
ANR	2019709	CompoundStatement		6:68:139:139	2019657	3					
ANR	2019710	IfStatement	if ( * source == '\\\\' && source + 1 < end )		2019657	0					
ANR	2019711	Condition	* source == '\\\\' && source + 1 < end	3455:6:82921:82953	2019657	0	True				
ANR	2019712	AndExpression	* source == '\\\\' && source + 1 < end		2019657	0		&&			
ANR	2019713	EqualityExpression	* source == '\\\\'		2019657	0		==			
ANR	2019714	UnaryOperationExpression	* source		2019657	0					
ANR	2019715	UnaryOperator	*		2019657	0					
ANR	2019716	Identifier	source		2019657	1					
ANR	2019717	PrimaryExpression	'\\\\'		2019657	1					
ANR	2019718	RelationalExpression	source + 1 < end		2019657	1		<			
ANR	2019719	AdditiveExpression	source + 1		2019657	0		+			
ANR	2019720	Identifier	source		2019657	0					
ANR	2019721	PrimaryExpression	1		2019657	1					
ANR	2019722	Identifier	end		2019657	1					
ANR	2019723	CompoundStatement		7:41:182:182	2019657	1					
ANR	2019724	ExpressionStatement	source ++	3456:3:82961:82969	2019657	0	True				
ANR	2019725	PostIncDecOperationExpression	source ++		2019657	0					
ANR	2019726	Identifier	source		2019657	0					
ANR	2019727	IncDec	++		2019657	1					
ANR	2019728	SwitchStatement	switch ( * source )		2019657	1					
ANR	2019729	Condition	* source	3457:11:82982:82988	2019657	0	True				
ANR	2019730	UnaryOperationExpression	* source		2019657	0					
ANR	2019731	UnaryOperator	*		2019657	0					
ANR	2019732	Identifier	source		2019657	1					
ANR	2019733	CompoundStatement		9:20:217:217	2019657	1					
ANR	2019734	Label	case 'n' :	3458:4:82997:83005	2019657	0	True				
ANR	2019735	ExpressionStatement	* target ++ = '\\n'	3458:15:83008:83022	2019657	1	True				
ANR	2019736	AssignmentExpression	* target ++ = '\\n'		2019657	0		=			
ANR	2019737	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019738	UnaryOperator	*		2019657	0					
ANR	2019739	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019740	Identifier	target		2019657	0					
ANR	2019741	IncDec	++		2019657	1					
ANR	2019742	PrimaryExpression	'\\n'		2019657	1					
ANR	2019743	ExpressionStatement	nlen --	3458:31:83024:83030	2019657	2	True				
ANR	2019744	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019745	Identifier	nlen		2019657	0					
ANR	2019746	IncDec	--		2019657	1					
ANR	2019747	BreakStatement	break ;	3458:39:83032:83037	2019657	3	True				
ANR	2019748	Label	case 'r' :	3459:4:83043:83051	2019657	4	True				
ANR	2019749	ExpressionStatement	* target ++ = '\\r'	3459:15:83054:83068	2019657	5	True				
ANR	2019750	AssignmentExpression	* target ++ = '\\r'		2019657	0		=			
ANR	2019751	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019752	UnaryOperator	*		2019657	0					
ANR	2019753	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019754	Identifier	target		2019657	0					
ANR	2019755	IncDec	++		2019657	1					
ANR	2019756	PrimaryExpression	'\\r'		2019657	1					
ANR	2019757	ExpressionStatement	nlen --	3459:31:83070:83076	2019657	6	True				
ANR	2019758	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019759	Identifier	nlen		2019657	0					
ANR	2019760	IncDec	--		2019657	1					
ANR	2019761	BreakStatement	break ;	3459:39:83078:83083	2019657	7	True				
ANR	2019762	Label	case 'a' :	3460:4:83089:83097	2019657	8	True				
ANR	2019763	ExpressionStatement	* target ++ = '\\a'	3460:15:83100:83114	2019657	9	True				
ANR	2019764	AssignmentExpression	* target ++ = '\\a'		2019657	0		=			
ANR	2019765	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019766	UnaryOperator	*		2019657	0					
ANR	2019767	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019768	Identifier	target		2019657	0					
ANR	2019769	IncDec	++		2019657	1					
ANR	2019770	PrimaryExpression	'\\a'		2019657	1					
ANR	2019771	ExpressionStatement	nlen --	3460:31:83116:83122	2019657	10	True				
ANR	2019772	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019773	Identifier	nlen		2019657	0					
ANR	2019774	IncDec	--		2019657	1					
ANR	2019775	BreakStatement	break ;	3460:39:83124:83129	2019657	11	True				
ANR	2019776	Label	case 't' :	3461:4:83135:83143	2019657	12	True				
ANR	2019777	ExpressionStatement	* target ++ = '\\t'	3461:15:83146:83160	2019657	13	True				
ANR	2019778	AssignmentExpression	* target ++ = '\\t'		2019657	0		=			
ANR	2019779	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019780	UnaryOperator	*		2019657	0					
ANR	2019781	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019782	Identifier	target		2019657	0					
ANR	2019783	IncDec	++		2019657	1					
ANR	2019784	PrimaryExpression	'\\t'		2019657	1					
ANR	2019785	ExpressionStatement	nlen --	3461:31:83162:83168	2019657	14	True				
ANR	2019786	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019787	Identifier	nlen		2019657	0					
ANR	2019788	IncDec	--		2019657	1					
ANR	2019789	BreakStatement	break ;	3461:39:83170:83175	2019657	15	True				
ANR	2019790	Label	case 'v' :	3462:4:83181:83189	2019657	16	True				
ANR	2019791	ExpressionStatement	* target ++ = '\\v'	3462:15:83192:83206	2019657	17	True				
ANR	2019792	AssignmentExpression	* target ++ = '\\v'		2019657	0		=			
ANR	2019793	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019794	UnaryOperator	*		2019657	0					
ANR	2019795	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019796	Identifier	target		2019657	0					
ANR	2019797	IncDec	++		2019657	1					
ANR	2019798	PrimaryExpression	'\\v'		2019657	1					
ANR	2019799	ExpressionStatement	nlen --	3462:31:83208:83214	2019657	18	True				
ANR	2019800	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019801	Identifier	nlen		2019657	0					
ANR	2019802	IncDec	--		2019657	1					
ANR	2019803	BreakStatement	break ;	3462:39:83216:83221	2019657	19	True				
ANR	2019804	Label	case 'b' :	3463:4:83227:83235	2019657	20	True				
ANR	2019805	ExpressionStatement	* target ++ = '\\b'	3463:15:83238:83252	2019657	21	True				
ANR	2019806	AssignmentExpression	* target ++ = '\\b'		2019657	0		=			
ANR	2019807	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019808	UnaryOperator	*		2019657	0					
ANR	2019809	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019810	Identifier	target		2019657	0					
ANR	2019811	IncDec	++		2019657	1					
ANR	2019812	PrimaryExpression	'\\b'		2019657	1					
ANR	2019813	ExpressionStatement	nlen --	3463:31:83254:83260	2019657	22	True				
ANR	2019814	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019815	Identifier	nlen		2019657	0					
ANR	2019816	IncDec	--		2019657	1					
ANR	2019817	BreakStatement	break ;	3463:39:83262:83267	2019657	23	True				
ANR	2019818	Label	case 'f' :	3464:4:83273:83281	2019657	24	True				
ANR	2019819	ExpressionStatement	* target ++ = '\\f'	3464:15:83284:83298	2019657	25	True				
ANR	2019820	AssignmentExpression	* target ++ = '\\f'		2019657	0		=			
ANR	2019821	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019822	UnaryOperator	*		2019657	0					
ANR	2019823	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019824	Identifier	target		2019657	0					
ANR	2019825	IncDec	++		2019657	1					
ANR	2019826	PrimaryExpression	'\\f'		2019657	1					
ANR	2019827	ExpressionStatement	nlen --	3464:31:83300:83306	2019657	26	True				
ANR	2019828	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019829	Identifier	nlen		2019657	0					
ANR	2019830	IncDec	--		2019657	1					
ANR	2019831	BreakStatement	break ;	3464:39:83308:83313	2019657	27	True				
ANR	2019832	Label	case '\\\\' :	3465:4:83319:83328	2019657	28	True				
ANR	2019833	ExpressionStatement	* target ++ = '\\\\'	3465:15:83330:83344	2019657	29	True				
ANR	2019834	AssignmentExpression	* target ++ = '\\\\'		2019657	0		=			
ANR	2019835	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019836	UnaryOperator	*		2019657	0					
ANR	2019837	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019838	Identifier	target		2019657	0					
ANR	2019839	IncDec	++		2019657	1					
ANR	2019840	PrimaryExpression	'\\\\'		2019657	1					
ANR	2019841	ExpressionStatement	nlen --	3465:31:83346:83352	2019657	30	True				
ANR	2019842	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2019843	Identifier	nlen		2019657	0					
ANR	2019844	IncDec	--		2019657	1					
ANR	2019845	BreakStatement	break ;	3465:39:83354:83359	2019657	31	True				
ANR	2019846	Label	case 'x' :	3466:4:83365:83373	2019657	32	True				
ANR	2019847	IfStatement	if ( source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) ) )		2019657	33					
ANR	2019848	Condition	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )	3467:9:83384:83429	2019657	0	True				
ANR	2019849	AndExpression	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )		2019657	0		&&			
ANR	2019850	RelationalExpression	source + 1 < end		2019657	0		<			
ANR	2019851	AdditiveExpression	source + 1		2019657	0		+			
ANR	2019852	Identifier	source		2019657	0					
ANR	2019853	PrimaryExpression	1		2019657	1					
ANR	2019854	Identifier	end		2019657	1					
ANR	2019855	CallExpression	isxdigit ( ( int ) ( * ( source + 1 ) ) )		2019657	1					
ANR	2019856	Callee	isxdigit		2019657	0					
ANR	2019857	Identifier	isxdigit		2019657	0					
ANR	2019858	ArgumentList	( int ) ( * ( source + 1 ) )		2019657	1					
ANR	2019859	Argument	( int ) ( * ( source + 1 ) )		2019657	0					
ANR	2019860	CastExpression	( int ) ( * ( source + 1 ) )		2019657	0					
ANR	2019861	CastTarget	int		2019657	0					
ANR	2019862	UnaryOperationExpression	* ( source + 1 )		2019657	1					
ANR	2019863	UnaryOperator	*		2019657	0					
ANR	2019864	AdditiveExpression	source + 1		2019657	1		+			
ANR	2019865	Identifier	source		2019657	0					
ANR	2019866	PrimaryExpression	1		2019657	1					
ANR	2019867	CompoundStatement		19:57:658:658	2019657	1					
ANR	2019868	ExpressionStatement	numtmp [ 0 ] = * ++ source	3468:6:83440:83461	2019657	0	True				
ANR	2019869	AssignmentExpression	numtmp [ 0 ] = * ++ source		2019657	0		=			
ANR	2019870	ArrayIndexing	numtmp [ 0 ]		2019657	0					
ANR	2019871	Identifier	numtmp		2019657	0					
ANR	2019872	PrimaryExpression	0		2019657	1					
ANR	2019873	UnaryOperationExpression	* ++ source		2019657	1					
ANR	2019874	UnaryOperator	*		2019657	0					
ANR	2019875	UnaryExpression	++ source		2019657	1					
ANR	2019876	IncDec	++		2019657	0					
ANR	2019877	Identifier	source		2019657	1					
ANR	2019878	IfStatement	if ( source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) ) )		2019657	1					
ANR	2019879	Condition	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )	3469:10:83473:83518	2019657	0	True				
ANR	2019880	AndExpression	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )		2019657	0		&&			
ANR	2019881	RelationalExpression	source + 1 < end		2019657	0		<			
ANR	2019882	AdditiveExpression	source + 1		2019657	0		+			
ANR	2019883	Identifier	source		2019657	0					
ANR	2019884	PrimaryExpression	1		2019657	1					
ANR	2019885	Identifier	end		2019657	1					
ANR	2019886	CallExpression	isxdigit ( ( int ) ( * ( source + 1 ) ) )		2019657	1					
ANR	2019887	Callee	isxdigit		2019657	0					
ANR	2019888	Identifier	isxdigit		2019657	0					
ANR	2019889	ArgumentList	( int ) ( * ( source + 1 ) )		2019657	1					
ANR	2019890	Argument	( int ) ( * ( source + 1 ) )		2019657	0					
ANR	2019891	CastExpression	( int ) ( * ( source + 1 ) )		2019657	0					
ANR	2019892	CastTarget	int		2019657	0					
ANR	2019893	UnaryOperationExpression	* ( source + 1 )		2019657	1					
ANR	2019894	UnaryOperator	*		2019657	0					
ANR	2019895	AdditiveExpression	source + 1		2019657	1		+			
ANR	2019896	Identifier	source		2019657	0					
ANR	2019897	PrimaryExpression	1		2019657	1					
ANR	2019898	CompoundStatement		21:58:747:747	2019657	1					
ANR	2019899	ExpressionStatement	numtmp [ 1 ] = * ++ source	3470:7:83530:83551	2019657	0	True				
ANR	2019900	AssignmentExpression	numtmp [ 1 ] = * ++ source		2019657	0		=			
ANR	2019901	ArrayIndexing	numtmp [ 1 ]		2019657	0					
ANR	2019902	Identifier	numtmp		2019657	0					
ANR	2019903	PrimaryExpression	1		2019657	1					
ANR	2019904	UnaryOperationExpression	* ++ source		2019657	1					
ANR	2019905	UnaryOperator	*		2019657	0					
ANR	2019906	UnaryExpression	++ source		2019657	1					
ANR	2019907	IncDec	++		2019657	0					
ANR	2019908	Identifier	source		2019657	1					
ANR	2019909	ExpressionStatement	numtmp [ 2 ] = '\\0'	3471:7:83560:83576	2019657	1	True				
ANR	2019910	AssignmentExpression	numtmp [ 2 ] = '\\0'		2019657	0		=			
ANR	2019911	ArrayIndexing	numtmp [ 2 ]		2019657	0					
ANR	2019912	Identifier	numtmp		2019657	0					
ANR	2019913	PrimaryExpression	2		2019657	1					
ANR	2019914	PrimaryExpression	'\\0'		2019657	1					
ANR	2019915	ExpressionStatement	nlen -= 3	3472:7:83585:83592	2019657	2	True				
ANR	2019916	AssignmentExpression	nlen -= 3		2019657	0		-=			
ANR	2019917	Identifier	nlen		2019657	0					
ANR	2019918	PrimaryExpression	3		2019657	1					
ANR	2019919	ElseStatement	else		2019657	0					
ANR	2019920	CompoundStatement		25:13:833:833	2019657	0					
ANR	2019921	ExpressionStatement	numtmp [ 1 ] = '\\0'	3474:7:83616:83632	2019657	0	True				
ANR	2019922	AssignmentExpression	numtmp [ 1 ] = '\\0'		2019657	0		=			
ANR	2019923	ArrayIndexing	numtmp [ 1 ]		2019657	0					
ANR	2019924	Identifier	numtmp		2019657	0					
ANR	2019925	PrimaryExpression	1		2019657	1					
ANR	2019926	PrimaryExpression	'\\0'		2019657	1					
ANR	2019927	ExpressionStatement	nlen -= 2	3475:7:83641:83648	2019657	1	True				
ANR	2019928	AssignmentExpression	nlen -= 2		2019657	0		-=			
ANR	2019929	Identifier	nlen		2019657	0					
ANR	2019930	PrimaryExpression	2		2019657	1					
ANR	2019931	ExpressionStatement	"* target ++ = ( char ) strtol ( numtmp , NULL , 16 )"	3477:6:83664:83704	2019657	2	True				
ANR	2019932	AssignmentExpression	"* target ++ = ( char ) strtol ( numtmp , NULL , 16 )"		2019657	0		=			
ANR	2019933	UnaryOperationExpression	* target ++		2019657	0					
ANR	2019934	UnaryOperator	*		2019657	0					
ANR	2019935	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2019936	Identifier	target		2019657	0					
ANR	2019937	IncDec	++		2019657	1					
ANR	2019938	CastExpression	"( char ) strtol ( numtmp , NULL , 16 )"		2019657	1					
ANR	2019939	CastTarget	char		2019657	0					
ANR	2019940	CallExpression	"strtol ( numtmp , NULL , 16 )"		2019657	1					
ANR	2019941	Callee	strtol		2019657	0					
ANR	2019942	Identifier	strtol		2019657	0					
ANR	2019943	ArgumentList	numtmp		2019657	1					
ANR	2019944	Argument	numtmp		2019657	0					
ANR	2019945	Identifier	numtmp		2019657	0					
ANR	2019946	Argument	NULL		2019657	1					
ANR	2019947	Identifier	NULL		2019657	0					
ANR	2019948	Argument	16		2019657	2					
ANR	2019949	PrimaryExpression	16		2019657	0					
ANR	2019950	BreakStatement	break ;	3478:6:83712:83717	2019657	3	True				
ANR	2019951	Label	default :	3481:4:83769:83776	2019657	34	True				
ANR	2019952	Identifier	default		2019657	0					
ANR	2019953	ExpressionStatement	i = 0	3482:5:83783:83786	2019657	35	True				
ANR	2019954	AssignmentExpression	i = 0		2019657	0		=			
ANR	2019955	Identifier	i		2019657	0					
ANR	2019956	PrimaryExpression	0		2019657	1					
ANR	2019957	WhileStatement	while ( source < end && * source >= '0' && * source <= '7' && i < 3 )		2019657	36					
ANR	2019958	Condition	source < end && * source >= '0' && * source <= '7' && i < 3	3483:12:83800:83854	2019657	0	True				
ANR	2019959	AndExpression	source < end && * source >= '0' && * source <= '7' && i < 3		2019657	0		&&			
ANR	2019960	RelationalExpression	source < end		2019657	0		<			
ANR	2019961	Identifier	source		2019657	0					
ANR	2019962	Identifier	end		2019657	1					
ANR	2019963	AndExpression	* source >= '0' && * source <= '7' && i < 3		2019657	1		&&			
ANR	2019964	RelationalExpression	* source >= '0'		2019657	0		>=			
ANR	2019965	UnaryOperationExpression	* source		2019657	0					
ANR	2019966	UnaryOperator	*		2019657	0					
ANR	2019967	Identifier	source		2019657	1					
ANR	2019968	PrimaryExpression	'0'		2019657	1					
ANR	2019969	AndExpression	* source <= '7' && i < 3		2019657	1		&&			
ANR	2019970	RelationalExpression	* source <= '7'		2019657	0		<=			
ANR	2019971	UnaryOperationExpression	* source		2019657	0					
ANR	2019972	UnaryOperator	*		2019657	0					
ANR	2019973	Identifier	source		2019657	1					
ANR	2019974	PrimaryExpression	'7'		2019657	1					
ANR	2019975	RelationalExpression	i < 3		2019657	1		<			
ANR	2019976	Identifier	i		2019657	0					
ANR	2019977	PrimaryExpression	3		2019657	1					
ANR	2019978	CompoundStatement		35:69:1083:1083	2019657	1					
ANR	2019979	ExpressionStatement	numtmp [ i ++ ] = * source ++	3484:6:83865:83888	2019657	0	True				
ANR	2019980	AssignmentExpression	numtmp [ i ++ ] = * source ++		2019657	0		=			
ANR	2019981	ArrayIndexing	numtmp [ i ++ ]		2019657	0					
ANR	2019982	Identifier	numtmp		2019657	0					
ANR	2019983	PostIncDecOperationExpression	i ++		2019657	1					
ANR	2019984	Identifier	i		2019657	0					
ANR	2019985	IncDec	++		2019657	1					
ANR	2019986	UnaryOperationExpression	* source ++		2019657	1					
ANR	2019987	UnaryOperator	*		2019657	0					
ANR	2019988	PostIncDecOperationExpression	source ++		2019657	1					
ANR	2019989	Identifier	source		2019657	0					
ANR	2019990	IncDec	++		2019657	1					
ANR	2019991	IfStatement	if ( i )		2019657	37					
ANR	2019992	Condition	i	3486:9:83906:83906	2019657	0	True				
ANR	2019993	Identifier	i		2019657	0					
ANR	2019994	CompoundStatement		38:12:1135:1135	2019657	1					
ANR	2019995	ExpressionStatement	numtmp [ i ] = '\\0'	3487:6:83917:83931	2019657	0	True				
ANR	2019996	AssignmentExpression	numtmp [ i ] = '\\0'		2019657	0		=			
ANR	2019997	ArrayIndexing	numtmp [ i ]		2019657	0					
ANR	2019998	Identifier	numtmp		2019657	0					
ANR	2019999	Identifier	i		2019657	1					
ANR	2020000	PrimaryExpression	'\\0'		2019657	1					
ANR	2020001	ExpressionStatement	"* target ++ = ( char ) strtol ( numtmp , NULL , 8 )"	3488:6:83939:83978	2019657	1	True				
ANR	2020002	AssignmentExpression	"* target ++ = ( char ) strtol ( numtmp , NULL , 8 )"		2019657	0		=			
ANR	2020003	UnaryOperationExpression	* target ++		2019657	0					
ANR	2020004	UnaryOperator	*		2019657	0					
ANR	2020005	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2020006	Identifier	target		2019657	0					
ANR	2020007	IncDec	++		2019657	1					
ANR	2020008	CastExpression	"( char ) strtol ( numtmp , NULL , 8 )"		2019657	1					
ANR	2020009	CastTarget	char		2019657	0					
ANR	2020010	CallExpression	"strtol ( numtmp , NULL , 8 )"		2019657	1					
ANR	2020011	Callee	strtol		2019657	0					
ANR	2020012	Identifier	strtol		2019657	0					
ANR	2020013	ArgumentList	numtmp		2019657	1					
ANR	2020014	Argument	numtmp		2019657	0					
ANR	2020015	Identifier	numtmp		2019657	0					
ANR	2020016	Argument	NULL		2019657	1					
ANR	2020017	Identifier	NULL		2019657	0					
ANR	2020018	Argument	8		2019657	2					
ANR	2020019	PrimaryExpression	8		2019657	0					
ANR	2020020	ExpressionStatement	nlen -= i	3489:6:83986:83993	2019657	2	True				
ANR	2020021	AssignmentExpression	nlen -= i		2019657	0		-=			
ANR	2020022	Identifier	nlen		2019657	0					
ANR	2020023	Identifier	i		2019657	1					
ANR	2020024	ExpressionStatement	source --	3490:6:84001:84009	2019657	3	True				
ANR	2020025	PostIncDecOperationExpression	source --		2019657	0					
ANR	2020026	Identifier	source		2019657	0					
ANR	2020027	IncDec	--		2019657	1					
ANR	2020028	ElseStatement	else		2019657	0					
ANR	2020029	CompoundStatement		43:12:1249:1249	2019657	0					
ANR	2020030	ExpressionStatement	* target ++ = * source	3492:6:84031:84048	2019657	0	True				
ANR	2020031	AssignmentExpression	* target ++ = * source		2019657	0		=			
ANR	2020032	UnaryOperationExpression	* target ++		2019657	0					
ANR	2020033	UnaryOperator	*		2019657	0					
ANR	2020034	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2020035	Identifier	target		2019657	0					
ANR	2020036	IncDec	++		2019657	1					
ANR	2020037	UnaryOperationExpression	* source		2019657	1					
ANR	2020038	UnaryOperator	*		2019657	0					
ANR	2020039	Identifier	source		2019657	1					
ANR	2020040	ExpressionStatement	nlen --	3493:6:84056:84062	2019657	1	True				
ANR	2020041	PostIncDecOperationExpression	nlen --		2019657	0					
ANR	2020042	Identifier	nlen		2019657	0					
ANR	2020043	IncDec	--		2019657	1					
ANR	2020044	ElseStatement	else		2019657	0					
ANR	2020045	CompoundStatement		48:9:1311:1311	2019657	0					
ANR	2020046	ExpressionStatement	* target ++ = * source	3497:3:84090:84107	2019657	0	True				
ANR	2020047	AssignmentExpression	* target ++ = * source		2019657	0		=			
ANR	2020048	UnaryOperationExpression	* target ++		2019657	0					
ANR	2020049	UnaryOperator	*		2019657	0					
ANR	2020050	PostIncDecOperationExpression	target ++		2019657	1					
ANR	2020051	Identifier	target		2019657	0					
ANR	2020052	IncDec	++		2019657	1					
ANR	2020053	UnaryOperationExpression	* source		2019657	1					
ANR	2020054	UnaryOperator	*		2019657	0					
ANR	2020055	Identifier	source		2019657	1					
ANR	2020056	IfStatement	if ( nlen != 0 )		2019657	4					
ANR	2020057	Condition	nlen != 0	3501:5:84122:84130	2019657	0	True				
ANR	2020058	EqualityExpression	nlen != 0		2019657	0		!=			
ANR	2020059	Identifier	nlen		2019657	0					
ANR	2020060	PrimaryExpression	0		2019657	1					
ANR	2020061	CompoundStatement		53:16:1359:1359	2019657	1					
ANR	2020062	ExpressionStatement	* target = '\\0'	3502:2:84137:84149	2019657	0	True				
ANR	2020063	AssignmentExpression	* target = '\\0'		2019657	0		=			
ANR	2020064	UnaryOperationExpression	* target		2019657	0					
ANR	2020065	UnaryOperator	*		2019657	0					
ANR	2020066	Identifier	target		2019657	1					
ANR	2020067	PrimaryExpression	'\\0'		2019657	1					
ANR	2020068	ExpressionStatement	* len = nlen	3505:1:84156:84167	2019657	5	True				
ANR	2020069	AssignmentExpression	* len = nlen		2019657	0		=			
ANR	2020070	UnaryOperationExpression	* len		2019657	0					
ANR	2020071	UnaryOperator	*		2019657	0					
ANR	2020072	Identifier	len		2019657	1					
ANR	2020073	Identifier	nlen		2019657	1					
ANR	2020074	ReturnType	PHPAPI void		2019657	1					
ANR	2020075	Identifier	php_stripcslashes		2019657	2					
ANR	2020076	ParameterList	"char * str , int * len"		2019657	3					
ANR	2020077	Parameter	char * str	3448:30:82752:82760	2019657	0	True				
ANR	2020078	ParameterType	char *		2019657	0					
ANR	2020079	Identifier	str		2019657	1					
ANR	2020080	Parameter	int * len	3448:41:82763:82770	2019657	1	True				
ANR	2020081	ParameterType	int *		2019657	0					
ANR	2020082	Identifier	len		2019657	1					
ANR	2020083	CFGEntryNode	ENTRY		2019657		True				
ANR	2020084	CFGExitNode	EXIT		2019657		True				
ANR	2020085	Symbol	NULL		2019657						
ANR	2020086	Symbol	numtmp		2019657						
ANR	2020087	Symbol	i		2019657						
ANR	2020088	Symbol	source		2019657						
ANR	2020089	Symbol	* target ++		2019657						
ANR	2020090	Symbol	target		2019657						
ANR	2020091	Symbol	str		2019657						
ANR	2020092	Symbol	* target		2019657						
ANR	2020093	Symbol	* i		2019657						
ANR	2020094	Symbol	len		2019657						
ANR	2020095	Symbol	nlen		2019657						
ANR	2020096	Symbol	strtol		2019657						
ANR	2020097	Symbol	* numtmp		2019657						
ANR	2020098	Symbol	* source		2019657						
ANR	2020099	Symbol	* ( source + 1 )		2019657						
ANR	2020100	Symbol	* ++ source		2019657						
ANR	2020101	Symbol	* source ++		2019657						
ANR	2020102	Symbol	end		2019657						
ANR	2020103	Symbol	* len		2019657						
ANR	2020104	Symbol	isxdigit		2019657						
ANR	2020105	Function	php_addcslashes	3511:0:84209:85611							
ANR	2020106	FunctionDef	"php_addcslashes (const char * str , int length , int * new_length , int should_free , char * what , int wlength TSRMLS_DC)"		2020105	0					
ANR	2020107	CompoundStatement		3512:0:84336:85611	2020105	0					
ANR	2020108	IdentifierDeclStatement	char flags [ 256 ] ;	3513:1:84339:84354	2020105	0	True				
ANR	2020109	IdentifierDecl	flags [ 256 ]		2020105	0					
ANR	2020110	IdentifierDeclType	char [ 256 ]		2020105	0					
ANR	2020111	Identifier	flags		2020105	1					
ANR	2020112	PrimaryExpression	256		2020105	2					
ANR	2020113	IdentifierDeclStatement	"char * new_str = safe_emalloc ( 4 , ( length ? length : ( length = strlen ( str ) ) ) , 1 ) ;"	3514:1:84357:84429	2020105	1	True				
ANR	2020114	IdentifierDecl	"* new_str = safe_emalloc ( 4 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020105	0					
ANR	2020115	IdentifierDeclType	char *		2020105	0					
ANR	2020116	Identifier	new_str		2020105	1					
ANR	2020117	AssignmentExpression	"* new_str = safe_emalloc ( 4 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020105	2		=			
ANR	2020118	Identifier	new_str		2020105	0					
ANR	2020119	CallExpression	"safe_emalloc ( 4 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020105	1					
ANR	2020120	Callee	safe_emalloc		2020105	0					
ANR	2020121	Identifier	safe_emalloc		2020105	0					
ANR	2020122	ArgumentList	4		2020105	1					
ANR	2020123	Argument	4		2020105	0					
ANR	2020124	PrimaryExpression	4		2020105	0					
ANR	2020125	Argument	length ? length : ( length = strlen ( str ) )		2020105	1					
ANR	2020126	ConditionalExpression	length ? length : ( length = strlen ( str ) )		2020105	0					
ANR	2020127	Condition	length		2020105	0					
ANR	2020128	Identifier	length		2020105	0					
ANR	2020129	Identifier	length		2020105	1					
ANR	2020130	AssignmentExpression	length = strlen ( str )		2020105	2		=			
ANR	2020131	Identifier	length		2020105	0					
ANR	2020132	CallExpression	strlen ( str )		2020105	1					
ANR	2020133	Callee	strlen		2020105	0					
ANR	2020134	Identifier	strlen		2020105	0					
ANR	2020135	ArgumentList	str		2020105	1					
ANR	2020136	Argument	str		2020105	0					
ANR	2020137	Identifier	str		2020105	0					
ANR	2020138	Argument	1		2020105	2					
ANR	2020139	PrimaryExpression	1		2020105	0					
ANR	2020140	IdentifierDeclStatement	"char * source , * target ;"	3515:1:84432:84453	2020105	2	True				
ANR	2020141	IdentifierDecl	* source		2020105	0					
ANR	2020142	IdentifierDeclType	char *		2020105	0					
ANR	2020143	Identifier	source		2020105	1					
ANR	2020144	IdentifierDecl	* target		2020105	1					
ANR	2020145	IdentifierDeclType	char *		2020105	0					
ANR	2020146	Identifier	target		2020105	1					
ANR	2020147	IdentifierDeclStatement	char * end ;	3516:1:84456:84465	2020105	3	True				
ANR	2020148	IdentifierDecl	* end		2020105	0					
ANR	2020149	IdentifierDeclType	char *		2020105	0					
ANR	2020150	Identifier	end		2020105	1					
ANR	2020151	IdentifierDeclStatement	char c ;	3517:1:84468:84474	2020105	4	True				
ANR	2020152	IdentifierDecl	c		2020105	0					
ANR	2020153	IdentifierDeclType	char		2020105	0					
ANR	2020154	Identifier	c		2020105	1					
ANR	2020155	IdentifierDeclStatement	size_t newlen ;	3518:1:84477:84491	2020105	5	True				
ANR	2020156	IdentifierDecl	newlen		2020105	0					
ANR	2020157	IdentifierDeclType	size_t		2020105	0					
ANR	2020158	Identifier	newlen		2020105	1					
ANR	2020159	IfStatement	if ( ! wlength )		2020105	6					
ANR	2020160	Condition	! wlength	3520:5:84499:84506	2020105	0	True				
ANR	2020161	UnaryOperationExpression	! wlength		2020105	0					
ANR	2020162	UnaryOperator	!		2020105	0					
ANR	2020163	Identifier	wlength		2020105	1					
ANR	2020164	CompoundStatement		9:15:172:172	2020105	1					
ANR	2020165	ExpressionStatement	wlength = strlen ( what )	3521:2:84513:84535	2020105	0	True				
ANR	2020166	AssignmentExpression	wlength = strlen ( what )		2020105	0		=			
ANR	2020167	Identifier	wlength		2020105	0					
ANR	2020168	CallExpression	strlen ( what )		2020105	1					
ANR	2020169	Callee	strlen		2020105	0					
ANR	2020170	Identifier	strlen		2020105	0					
ANR	2020171	ArgumentList	what		2020105	1					
ANR	2020172	Argument	what		2020105	0					
ANR	2020173	Identifier	what		2020105	0					
ANR	2020174	Statement	php_charmask	3524:1:84542:84553	2020105	7	True				
ANR	2020175	Statement	(	3524:13:84554:84554	2020105	8	True				
ANR	2020176	Statement	(	3524:14:84555:84555	2020105	9	True				
ANR	2020177	Statement	unsigned	3524:15:84556:84563	2020105	10	True				
ANR	2020178	Statement	char	3524:24:84565:84568	2020105	11	True				
ANR	2020179	Statement	*	3524:29:84570:84570	2020105	12	True				
ANR	2020180	Statement	)	3524:30:84571:84571	2020105	13	True				
ANR	2020181	Statement	what	3524:31:84572:84575	2020105	14	True				
ANR	2020182	Statement	","	3524:35:84576:84576	2020105	15	True				
ANR	2020183	Statement	wlength	3524:37:84578:84584	2020105	16	True				
ANR	2020184	Statement	","	3524:44:84585:84585	2020105	17	True				
ANR	2020185	Statement	flags	3524:46:84587:84591	2020105	18	True				
ANR	2020186	Statement	TSRMLS_CC	3524:52:84593:84601	2020105	19	True				
ANR	2020187	Statement	)	3524:61:84602:84602	2020105	20	True				
ANR	2020188	ExpressionStatement		3524:62:84603:84603	2020105	21	True				
ANR	2020189	ForStatement	"for ( source = ( char * ) str , end = source + length , target = new_str ; source < end ; source ++ )"		2020105	22					
ANR	2020190	ForInit	"source = ( char * ) str , end = source + length , target = new_str ;"	3526:6:84612:84672	2020105	0	True				
ANR	2020191	Expression	"source = ( char * ) str , end = source + length , target = new_str"		2020105	0					
ANR	2020192	AssignmentExpression	source = ( char * ) str		2020105	0		=			
ANR	2020193	Identifier	source		2020105	0					
ANR	2020194	CastExpression	( char * ) str		2020105	1					
ANR	2020195	CastTarget	char *		2020105	0					
ANR	2020196	Identifier	str		2020105	1					
ANR	2020197	Expression	"end = source + length , target = new_str"		2020105	1					
ANR	2020198	AssignmentExpression	end = source + length		2020105	0		=			
ANR	2020199	Identifier	end		2020105	0					
ANR	2020200	AdditiveExpression	source + length		2020105	1		+			
ANR	2020201	Identifier	source		2020105	0					
ANR	2020202	Identifier	length		2020105	1					
ANR	2020203	AssignmentExpression	target = new_str		2020105	1		=			
ANR	2020204	Identifier	target		2020105	0					
ANR	2020205	Identifier	new_str		2020105	1					
ANR	2020206	Condition	source < end	3526:68:84674:84685	2020105	1	True				
ANR	2020207	RelationalExpression	source < end		2020105	0		<			
ANR	2020208	Identifier	source		2020105	0					
ANR	2020209	Identifier	end		2020105	1					
ANR	2020210	PostIncDecOperationExpression	source ++	3526:82:84688:84695	2020105	2	True				
ANR	2020211	Identifier	source		2020105	0					
ANR	2020212	IncDec	++		2020105	1					
ANR	2020213	CompoundStatement		15:92:361:361	2020105	3					
ANR	2020214	ExpressionStatement	c = * source	3527:2:84702:84713	2020105	0	True				
ANR	2020215	AssignmentExpression	c = * source		2020105	0		=			
ANR	2020216	Identifier	c		2020105	0					
ANR	2020217	UnaryOperationExpression	* source		2020105	1					
ANR	2020218	UnaryOperator	*		2020105	0					
ANR	2020219	Identifier	source		2020105	1					
ANR	2020220	IfStatement	if ( flags [ ( unsigned char ) c ] )		2020105	1					
ANR	2020221	Condition	flags [ ( unsigned char ) c ]	3528:6:84721:84743	2020105	0	True				
ANR	2020222	ArrayIndexing	flags [ ( unsigned char ) c ]		2020105	0					
ANR	2020223	Identifier	flags		2020105	0					
ANR	2020224	CastExpression	( unsigned char ) c		2020105	1					
ANR	2020225	CastTarget	unsigned char		2020105	0					
ANR	2020226	Identifier	c		2020105	1					
ANR	2020227	CompoundStatement		17:31:409:409	2020105	1					
ANR	2020228	IfStatement	if ( ( unsigned char ) c < 32 || ( unsigned char ) c > 126 )		2020105	0					
ANR	2020229	Condition	( unsigned char ) c < 32 || ( unsigned char ) c > 126	3529:7:84755:84803	2020105	0	True				
ANR	2020230	OrExpression	( unsigned char ) c < 32 || ( unsigned char ) c > 126		2020105	0		||			
ANR	2020231	RelationalExpression	( unsigned char ) c < 32		2020105	0		<			
ANR	2020232	CastExpression	( unsigned char ) c		2020105	0					
ANR	2020233	CastTarget	unsigned char		2020105	0					
ANR	2020234	Identifier	c		2020105	1					
ANR	2020235	PrimaryExpression	32		2020105	1					
ANR	2020236	RelationalExpression	( unsigned char ) c > 126		2020105	1		>			
ANR	2020237	CastExpression	( unsigned char ) c		2020105	0					
ANR	2020238	CastTarget	unsigned char		2020105	0					
ANR	2020239	Identifier	c		2020105	1					
ANR	2020240	PrimaryExpression	126		2020105	1					
ANR	2020241	CompoundStatement		18:58:469:469	2020105	1					
ANR	2020242	ExpressionStatement	* target ++ = '\\\\'	3530:4:84812:84828	2020105	0	True				
ANR	2020243	AssignmentExpression	* target ++ = '\\\\'		2020105	0		=			
ANR	2020244	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020245	UnaryOperator	*		2020105	0					
ANR	2020246	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020247	Identifier	target		2020105	0					
ANR	2020248	IncDec	++		2020105	1					
ANR	2020249	PrimaryExpression	'\\\\'		2020105	1					
ANR	2020250	SwitchStatement	switch ( c )		2020105	1					
ANR	2020251	Condition	c	3531:12:84842:84842	2020105	0	True				
ANR	2020252	Identifier	c		2020105	0					
ANR	2020253	CompoundStatement		20:15:508:508	2020105	1					
ANR	2020254	Label	case '\\n' :	3532:5:84852:84861	2020105	0	True				
ANR	2020255	ExpressionStatement	* target ++ = 'n'	3532:16:84863:84878	2020105	1	True				
ANR	2020256	AssignmentExpression	* target ++ = 'n'		2020105	0		=			
ANR	2020257	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020258	UnaryOperator	*		2020105	0					
ANR	2020259	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020260	Identifier	target		2020105	0					
ANR	2020261	IncDec	++		2020105	1					
ANR	2020262	PrimaryExpression	'n'		2020105	1					
ANR	2020263	BreakStatement	break ;	3532:33:84880:84885	2020105	2	True				
ANR	2020264	Label	case '\\t' :	3533:5:84892:84901	2020105	3	True				
ANR	2020265	ExpressionStatement	* target ++ = 't'	3533:16:84903:84918	2020105	4	True				
ANR	2020266	AssignmentExpression	* target ++ = 't'		2020105	0		=			
ANR	2020267	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020268	UnaryOperator	*		2020105	0					
ANR	2020269	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020270	Identifier	target		2020105	0					
ANR	2020271	IncDec	++		2020105	1					
ANR	2020272	PrimaryExpression	't'		2020105	1					
ANR	2020273	BreakStatement	break ;	3533:33:84920:84925	2020105	5	True				
ANR	2020274	Label	case '\\r' :	3534:5:84932:84941	2020105	6	True				
ANR	2020275	ExpressionStatement	* target ++ = 'r'	3534:16:84943:84958	2020105	7	True				
ANR	2020276	AssignmentExpression	* target ++ = 'r'		2020105	0		=			
ANR	2020277	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020278	UnaryOperator	*		2020105	0					
ANR	2020279	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020280	Identifier	target		2020105	0					
ANR	2020281	IncDec	++		2020105	1					
ANR	2020282	PrimaryExpression	'r'		2020105	1					
ANR	2020283	BreakStatement	break ;	3534:33:84960:84965	2020105	8	True				
ANR	2020284	Label	case '\\a' :	3535:5:84972:84981	2020105	9	True				
ANR	2020285	ExpressionStatement	* target ++ = 'a'	3535:16:84983:84998	2020105	10	True				
ANR	2020286	AssignmentExpression	* target ++ = 'a'		2020105	0		=			
ANR	2020287	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020288	UnaryOperator	*		2020105	0					
ANR	2020289	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020290	Identifier	target		2020105	0					
ANR	2020291	IncDec	++		2020105	1					
ANR	2020292	PrimaryExpression	'a'		2020105	1					
ANR	2020293	BreakStatement	break ;	3535:33:85000:85005	2020105	11	True				
ANR	2020294	Label	case '\\v' :	3536:5:85012:85021	2020105	12	True				
ANR	2020295	ExpressionStatement	* target ++ = 'v'	3536:16:85023:85038	2020105	13	True				
ANR	2020296	AssignmentExpression	* target ++ = 'v'		2020105	0		=			
ANR	2020297	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020298	UnaryOperator	*		2020105	0					
ANR	2020299	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020300	Identifier	target		2020105	0					
ANR	2020301	IncDec	++		2020105	1					
ANR	2020302	PrimaryExpression	'v'		2020105	1					
ANR	2020303	BreakStatement	break ;	3536:33:85040:85045	2020105	14	True				
ANR	2020304	Label	case '\\b' :	3537:5:85052:85061	2020105	15	True				
ANR	2020305	ExpressionStatement	* target ++ = 'b'	3537:16:85063:85078	2020105	16	True				
ANR	2020306	AssignmentExpression	* target ++ = 'b'		2020105	0		=			
ANR	2020307	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020308	UnaryOperator	*		2020105	0					
ANR	2020309	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020310	Identifier	target		2020105	0					
ANR	2020311	IncDec	++		2020105	1					
ANR	2020312	PrimaryExpression	'b'		2020105	1					
ANR	2020313	BreakStatement	break ;	3537:33:85080:85085	2020105	17	True				
ANR	2020314	Label	case '\\f' :	3538:5:85092:85101	2020105	18	True				
ANR	2020315	ExpressionStatement	* target ++ = 'f'	3538:16:85103:85118	2020105	19	True				
ANR	2020316	AssignmentExpression	* target ++ = 'f'		2020105	0		=			
ANR	2020317	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020318	UnaryOperator	*		2020105	0					
ANR	2020319	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020320	Identifier	target		2020105	0					
ANR	2020321	IncDec	++		2020105	1					
ANR	2020322	PrimaryExpression	'f'		2020105	1					
ANR	2020323	BreakStatement	break ;	3538:33:85120:85125	2020105	20	True				
ANR	2020324	Label	default :	3539:5:85132:85139	2020105	21	True				
ANR	2020325	Identifier	default		2020105	0					
ANR	2020326	ExpressionStatement	"target += sprintf ( target , ""%03o"" , ( unsigned char ) c )"	3539:14:85141:85193	2020105	22	True				
ANR	2020327	AssignmentExpression	"target += sprintf ( target , ""%03o"" , ( unsigned char ) c )"		2020105	0		+=			
ANR	2020328	Identifier	target		2020105	0					
ANR	2020329	CallExpression	"sprintf ( target , ""%03o"" , ( unsigned char ) c )"		2020105	1					
ANR	2020330	Callee	sprintf		2020105	0					
ANR	2020331	Identifier	sprintf		2020105	0					
ANR	2020332	ArgumentList	target		2020105	1					
ANR	2020333	Argument	target		2020105	0					
ANR	2020334	Identifier	target		2020105	0					
ANR	2020335	Argument	"""%03o"""		2020105	1					
ANR	2020336	PrimaryExpression	"""%03o"""		2020105	0					
ANR	2020337	Argument	( unsigned char ) c		2020105	2					
ANR	2020338	CastExpression	( unsigned char ) c		2020105	0					
ANR	2020339	CastTarget	unsigned char		2020105	0					
ANR	2020340	Identifier	c		2020105	1					
ANR	2020341	ContinueStatement	continue ;	3541:4:85205:85213	2020105	2	True				
ANR	2020342	ExpressionStatement	* target ++ = '\\\\'	3543:3:85223:85239	2020105	1	True				
ANR	2020343	AssignmentExpression	* target ++ = '\\\\'		2020105	0		=			
ANR	2020344	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020345	UnaryOperator	*		2020105	0					
ANR	2020346	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020347	Identifier	target		2020105	0					
ANR	2020348	IncDec	++		2020105	1					
ANR	2020349	PrimaryExpression	'\\\\'		2020105	1					
ANR	2020350	ExpressionStatement	* target ++ = c	3545:2:85247:85260	2020105	2	True				
ANR	2020351	AssignmentExpression	* target ++ = c		2020105	0		=			
ANR	2020352	UnaryOperationExpression	* target ++		2020105	0					
ANR	2020353	UnaryOperator	*		2020105	0					
ANR	2020354	PostIncDecOperationExpression	target ++		2020105	1					
ANR	2020355	Identifier	target		2020105	0					
ANR	2020356	IncDec	++		2020105	1					
ANR	2020357	Identifier	c		2020105	1					
ANR	2020358	ExpressionStatement	* target = 0	3547:1:85266:85277	2020105	23	True				
ANR	2020359	AssignmentExpression	* target = 0		2020105	0		=			
ANR	2020360	UnaryOperationExpression	* target		2020105	0					
ANR	2020361	UnaryOperator	*		2020105	0					
ANR	2020362	Identifier	target		2020105	1					
ANR	2020363	PrimaryExpression	0		2020105	1					
ANR	2020364	ExpressionStatement	newlen = target - new_str	3548:1:85280:85305	2020105	24	True				
ANR	2020365	AssignmentExpression	newlen = target - new_str		2020105	0		=			
ANR	2020366	Identifier	newlen		2020105	0					
ANR	2020367	AdditiveExpression	target - new_str		2020105	1		-			
ANR	2020368	Identifier	target		2020105	0					
ANR	2020369	Identifier	new_str		2020105	1					
ANR	2020370	IfStatement	if ( UNEXPECTED ( newlen > INT_MAX ) )		2020105	25					
ANR	2020371	Condition	UNEXPECTED ( newlen > INT_MAX )	3549:5:85312:85339	2020105	0	True				
ANR	2020372	CallExpression	UNEXPECTED ( newlen > INT_MAX )		2020105	0					
ANR	2020373	Callee	UNEXPECTED		2020105	0					
ANR	2020374	Identifier	UNEXPECTED		2020105	0					
ANR	2020375	ArgumentList	newlen > INT_MAX		2020105	1					
ANR	2020376	Argument	newlen > INT_MAX		2020105	0					
ANR	2020377	RelationalExpression	newlen > INT_MAX		2020105	0		>			
ANR	2020378	Identifier	newlen		2020105	0					
ANR	2020379	Identifier	INT_MAX		2020105	1					
ANR	2020380	CompoundStatement		38:35:1005:1005	2020105	1					
ANR	2020381	ExpressionStatement	efree ( new_str )	3550:2:85346:85360	2020105	0	True				
ANR	2020382	CallExpression	efree ( new_str )		2020105	0					
ANR	2020383	Callee	efree		2020105	0					
ANR	2020384	Identifier	efree		2020105	0					
ANR	2020385	ArgumentList	new_str		2020105	1					
ANR	2020386	Argument	new_str		2020105	0					
ANR	2020387	Identifier	new_str		2020105	0					
ANR	2020388	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	3551:2:85364:85407	2020105	1	True				
ANR	2020389	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		2020105	0					
ANR	2020390	Callee	zend_error		2020105	0					
ANR	2020391	Identifier	zend_error		2020105	0					
ANR	2020392	ArgumentList	E_ERROR		2020105	1					
ANR	2020393	Argument	E_ERROR		2020105	0					
ANR	2020394	Identifier	E_ERROR		2020105	0					
ANR	2020395	Argument	"""String size overflow"""		2020105	1					
ANR	2020396	PrimaryExpression	"""String size overflow"""		2020105	0					
ANR	2020397	IfStatement	if ( target - new_str < length * 4 )		2020105	26					
ANR	2020398	Condition	target - new_str < length * 4	3553:5:85417:85445	2020105	0	True				
ANR	2020399	RelationalExpression	target - new_str < length * 4		2020105	0		<			
ANR	2020400	AdditiveExpression	target - new_str		2020105	0		-			
ANR	2020401	Identifier	target		2020105	0					
ANR	2020402	Identifier	new_str		2020105	1					
ANR	2020403	MultiplicativeExpression	length * 4		2020105	1		*			
ANR	2020404	Identifier	length		2020105	0					
ANR	2020405	PrimaryExpression	4		2020105	1					
ANR	2020406	CompoundStatement		42:36:1111:1111	2020105	1					
ANR	2020407	ExpressionStatement	"new_str = erealloc ( new_str , newlen + 1 )"	3554:2:85452:85491	2020105	0	True				
ANR	2020408	AssignmentExpression	"new_str = erealloc ( new_str , newlen + 1 )"		2020105	0		=			
ANR	2020409	Identifier	new_str		2020105	0					
ANR	2020410	CallExpression	"erealloc ( new_str , newlen + 1 )"		2020105	1					
ANR	2020411	Callee	erealloc		2020105	0					
ANR	2020412	Identifier	erealloc		2020105	0					
ANR	2020413	ArgumentList	new_str		2020105	1					
ANR	2020414	Argument	new_str		2020105	0					
ANR	2020415	Identifier	new_str		2020105	0					
ANR	2020416	Argument	newlen + 1		2020105	1					
ANR	2020417	AdditiveExpression	newlen + 1		2020105	0		+			
ANR	2020418	Identifier	newlen		2020105	0					
ANR	2020419	PrimaryExpression	1		2020105	1					
ANR	2020420	IfStatement	if ( new_length )		2020105	27					
ANR	2020421	Condition	new_length	3556:5:85501:85510	2020105	0	True				
ANR	2020422	Identifier	new_length		2020105	0					
ANR	2020423	CompoundStatement		45:17:1176:1176	2020105	1					
ANR	2020424	ExpressionStatement	* new_length = ( int ) newlen	3557:2:85517:85542	2020105	0	True				
ANR	2020425	AssignmentExpression	* new_length = ( int ) newlen		2020105	0		=			
ANR	2020426	UnaryOperationExpression	* new_length		2020105	0					
ANR	2020427	UnaryOperator	*		2020105	0					
ANR	2020428	Identifier	new_length		2020105	1					
ANR	2020429	CastExpression	( int ) newlen		2020105	1					
ANR	2020430	CastTarget	int		2020105	0					
ANR	2020431	Identifier	newlen		2020105	1					
ANR	2020432	IfStatement	if ( should_free )		2020105	28					
ANR	2020433	Condition	should_free	3559:5:85552:85562	2020105	0	True				
ANR	2020434	Identifier	should_free		2020105	0					
ANR	2020435	CompoundStatement		48:18:1228:1228	2020105	1					
ANR	2020436	ExpressionStatement	STR_FREE ( ( char * ) str )	3560:2:85569:85589	2020105	0	True				
ANR	2020437	CallExpression	STR_FREE ( ( char * ) str )		2020105	0					
ANR	2020438	Callee	STR_FREE		2020105	0					
ANR	2020439	Identifier	STR_FREE		2020105	0					
ANR	2020440	ArgumentList	( char * ) str		2020105	1					
ANR	2020441	Argument	( char * ) str		2020105	0					
ANR	2020442	CastExpression	( char * ) str		2020105	0					
ANR	2020443	CastTarget	char *		2020105	0					
ANR	2020444	Identifier	str		2020105	1					
ANR	2020445	ReturnStatement	return new_str ;	3562:1:85595:85609	2020105	29	True				
ANR	2020446	Identifier	new_str		2020105	0					
ANR	2020447	ReturnType	PHPAPI char *		2020105	1					
ANR	2020448	Identifier	php_addcslashes		2020105	2					
ANR	2020449	ParameterList	"const char * str , int length , int * new_length , int should_free , char * what , int wlength TSRMLS_DC"		2020105	3					
ANR	2020450	Parameter	const char * str	3511:29:84238:84252	2020105	0	True				
ANR	2020451	ParameterType	const char *		2020105	0					
ANR	2020452	Identifier	str		2020105	1					
ANR	2020453	Parameter	int length	3511:46:84255:84264	2020105	1	True				
ANR	2020454	ParameterType	int		2020105	0					
ANR	2020455	Identifier	length		2020105	1					
ANR	2020456	Parameter	int * new_length	3511:58:84267:84281	2020105	2	True				
ANR	2020457	ParameterType	int *		2020105	0					
ANR	2020458	Identifier	new_length		2020105	1					
ANR	2020459	Parameter	int should_free	3511:75:84284:84298	2020105	3	True				
ANR	2020460	ParameterType	int		2020105	0					
ANR	2020461	Identifier	should_free		2020105	1					
ANR	2020462	Parameter	char * what	3511:92:84301:84310	2020105	4	True				
ANR	2020463	ParameterType	char *		2020105	0					
ANR	2020464	Identifier	what		2020105	1					
ANR	2020465	Parameter	int wlength TSRMLS_DC	3511:104:84313:84333	2020105	5	True				
ANR	2020466	ParameterType	int wlength		2020105	0					
ANR	2020467	Identifier	TSRMLS_DC		2020105	1					
ANR	2020468	CFGEntryNode	ENTRY		2020105		True				
ANR	2020469	CFGExitNode	EXIT		2020105		True				
ANR	2020470	Symbol	flags		2020105						
ANR	2020471	Symbol	newlen		2020105						
ANR	2020472	Symbol	source		2020105						
ANR	2020473	Symbol	* target ++		2020105						
ANR	2020474	Symbol	TSRMLS_DC		2020105						
ANR	2020475	Symbol	wlength		2020105						
ANR	2020476	Symbol	sprintf		2020105						
ANR	2020477	Symbol	UNEXPECTED		2020105						
ANR	2020478	Symbol	strlen		2020105						
ANR	2020479	Symbol	new_str		2020105						
ANR	2020480	Symbol	* source		2020105						
ANR	2020481	Symbol	INT_MAX		2020105						
ANR	2020482	Symbol	end		2020105						
ANR	2020483	Symbol	new_length		2020105						
ANR	2020484	Symbol	erealloc		2020105						
ANR	2020485	Symbol	should_free		2020105						
ANR	2020486	Symbol	* flags		2020105						
ANR	2020487	Symbol	c		2020105						
ANR	2020488	Symbol	length		2020105						
ANR	2020489	Symbol	* new_length		2020105						
ANR	2020490	Symbol	* c		2020105						
ANR	2020491	Symbol	target		2020105						
ANR	2020492	Symbol	str		2020105						
ANR	2020493	Symbol	* target		2020105						
ANR	2020494	Symbol	what		2020105						
ANR	2020495	Symbol	E_ERROR		2020105						
ANR	2020496	Symbol	safe_emalloc		2020105						
ANR	2020497	Function	php_addslashes	3568:0:85650:86658							
ANR	2020498	FunctionDef	"php_addslashes (char * str , int length , int * new_length , int should_free TSRMLS_DC)"		2020497	0					
ANR	2020499	CompoundStatement		3569:0:85745:86658	2020497	0					
ANR	2020500	IdentifierDeclStatement	char * new_str ;	3571:1:85799:85812	2020497	0	True				
ANR	2020501	IdentifierDecl	* new_str		2020497	0					
ANR	2020502	IdentifierDeclType	char *		2020497	0					
ANR	2020503	Identifier	new_str		2020497	1					
ANR	2020504	IdentifierDeclStatement	"char * source , * target ;"	3572:1:85815:85836	2020497	1	True				
ANR	2020505	IdentifierDecl	* source		2020497	0					
ANR	2020506	IdentifierDeclType	char *		2020497	0					
ANR	2020507	Identifier	source		2020497	1					
ANR	2020508	IdentifierDecl	* target		2020497	1					
ANR	2020509	IdentifierDeclType	char *		2020497	0					
ANR	2020510	Identifier	target		2020497	1					
ANR	2020511	IdentifierDeclStatement	char * end ;	3573:1:85839:85848	2020497	2	True				
ANR	2020512	IdentifierDecl	* end		2020497	0					
ANR	2020513	IdentifierDeclType	char *		2020497	0					
ANR	2020514	Identifier	end		2020497	1					
ANR	2020515	IdentifierDeclStatement	int local_new_length ;	3574:1:85851:85871	2020497	3	True				
ANR	2020516	IdentifierDecl	local_new_length		2020497	0					
ANR	2020517	IdentifierDeclType	int		2020497	0					
ANR	2020518	Identifier	local_new_length		2020497	1					
ANR	2020519	IfStatement	if ( ! new_length )		2020497	4					
ANR	2020520	Condition	! new_length	3576:5:85879:85889	2020497	0	True				
ANR	2020521	UnaryOperationExpression	! new_length		2020497	0					
ANR	2020522	UnaryOperator	!		2020497	0					
ANR	2020523	Identifier	new_length		2020497	1					
ANR	2020524	CompoundStatement		8:18:146:146	2020497	1					
ANR	2020525	ExpressionStatement	new_length = & local_new_length	3577:2:85896:85926	2020497	0	True				
ANR	2020526	AssignmentExpression	new_length = & local_new_length		2020497	0		=			
ANR	2020527	Identifier	new_length		2020497	0					
ANR	2020528	UnaryOperationExpression	& local_new_length		2020497	1					
ANR	2020529	UnaryOperator	&		2020497	0					
ANR	2020530	Identifier	local_new_length		2020497	1					
ANR	2020531	IfStatement	if ( ! str )		2020497	5					
ANR	2020532	Condition	! str	3579:5:85936:85939	2020497	0	True				
ANR	2020533	UnaryOperationExpression	! str		2020497	0					
ANR	2020534	UnaryOperator	!		2020497	0					
ANR	2020535	Identifier	str		2020497	1					
ANR	2020536	CompoundStatement		11:11:196:196	2020497	1					
ANR	2020537	ExpressionStatement	* new_length = 0	3580:2:85946:85961	2020497	0	True				
ANR	2020538	AssignmentExpression	* new_length = 0		2020497	0		=			
ANR	2020539	UnaryOperationExpression	* new_length		2020497	0					
ANR	2020540	UnaryOperator	*		2020497	0					
ANR	2020541	Identifier	new_length		2020497	1					
ANR	2020542	PrimaryExpression	0		2020497	1					
ANR	2020543	ReturnStatement	return str ;	3581:2:85965:85975	2020497	1	True				
ANR	2020544	Identifier	str		2020497	0					
ANR	2020545	ExpressionStatement	"new_str = ( char * ) safe_emalloc ( 2 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"	3583:1:85981:86062	2020497	6	True				
ANR	2020546	AssignmentExpression	"new_str = ( char * ) safe_emalloc ( 2 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020497	0		=			
ANR	2020547	Identifier	new_str		2020497	0					
ANR	2020548	CastExpression	"( char * ) safe_emalloc ( 2 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020497	1					
ANR	2020549	CastTarget	char *		2020497	0					
ANR	2020550	CallExpression	"safe_emalloc ( 2 , ( length ? length : ( length = strlen ( str ) ) ) , 1 )"		2020497	1					
ANR	2020551	Callee	safe_emalloc		2020497	0					
ANR	2020552	Identifier	safe_emalloc		2020497	0					
ANR	2020553	ArgumentList	2		2020497	1					
ANR	2020554	Argument	2		2020497	0					
ANR	2020555	PrimaryExpression	2		2020497	0					
ANR	2020556	Argument	length ? length : ( length = strlen ( str ) )		2020497	1					
ANR	2020557	ConditionalExpression	length ? length : ( length = strlen ( str ) )		2020497	0					
ANR	2020558	Condition	length		2020497	0					
ANR	2020559	Identifier	length		2020497	0					
ANR	2020560	Identifier	length		2020497	1					
ANR	2020561	AssignmentExpression	length = strlen ( str )		2020497	2		=			
ANR	2020562	Identifier	length		2020497	0					
ANR	2020563	CallExpression	strlen ( str )		2020497	1					
ANR	2020564	Callee	strlen		2020497	0					
ANR	2020565	Identifier	strlen		2020497	0					
ANR	2020566	ArgumentList	str		2020497	1					
ANR	2020567	Argument	str		2020497	0					
ANR	2020568	Identifier	str		2020497	0					
ANR	2020569	Argument	1		2020497	2					
ANR	2020570	PrimaryExpression	1		2020497	0					
ANR	2020571	ExpressionStatement	source = str	3584:1:86065:86077	2020497	7	True				
ANR	2020572	AssignmentExpression	source = str		2020497	0		=			
ANR	2020573	Identifier	source		2020497	0					
ANR	2020574	Identifier	str		2020497	1					
ANR	2020575	ExpressionStatement	end = source + length	3585:1:86080:86101	2020497	8	True				
ANR	2020576	AssignmentExpression	end = source + length		2020497	0		=			
ANR	2020577	Identifier	end		2020497	0					
ANR	2020578	AdditiveExpression	source + length		2020497	1		+			
ANR	2020579	Identifier	source		2020497	0					
ANR	2020580	Identifier	length		2020497	1					
ANR	2020581	ExpressionStatement	target = new_str	3586:1:86104:86120	2020497	9	True				
ANR	2020582	AssignmentExpression	target = new_str		2020497	0		=			
ANR	2020583	Identifier	target		2020497	0					
ANR	2020584	Identifier	new_str		2020497	1					
ANR	2020585	WhileStatement	while ( source < end )		2020497	10					
ANR	2020586	Condition	source < end	3588:8:86131:86142	2020497	0	True				
ANR	2020587	RelationalExpression	source < end		2020497	0		<			
ANR	2020588	Identifier	source		2020497	0					
ANR	2020589	Identifier	end		2020497	1					
ANR	2020590	CompoundStatement		20:22:399:399	2020497	1					
ANR	2020591	SwitchStatement	switch ( * source )		2020497	0					
ANR	2020592	Condition	* source	3589:10:86157:86163	2020497	0	True				
ANR	2020593	UnaryOperationExpression	* source		2020497	0					
ANR	2020594	UnaryOperator	*		2020497	0					
ANR	2020595	Identifier	source		2020497	1					
ANR	2020596	CompoundStatement		21:19:420:420	2020497	1					
ANR	2020597	Label	case '\\0' :	3590:3:86171:86180	2020497	0	True				
ANR	2020598	ExpressionStatement	* target ++ = '\\\\'	3591:4:86186:86202	2020497	1	True				
ANR	2020599	AssignmentExpression	* target ++ = '\\\\'		2020497	0		=			
ANR	2020600	UnaryOperationExpression	* target ++		2020497	0					
ANR	2020601	UnaryOperator	*		2020497	0					
ANR	2020602	PostIncDecOperationExpression	target ++		2020497	1					
ANR	2020603	Identifier	target		2020497	0					
ANR	2020604	IncDec	++		2020497	1					
ANR	2020605	PrimaryExpression	'\\\\'		2020497	1					
ANR	2020606	ExpressionStatement	* target ++ = '0'	3592:4:86208:86223	2020497	2	True				
ANR	2020607	AssignmentExpression	* target ++ = '0'		2020497	0		=			
ANR	2020608	UnaryOperationExpression	* target ++		2020497	0					
ANR	2020609	UnaryOperator	*		2020497	0					
ANR	2020610	PostIncDecOperationExpression	target ++		2020497	1					
ANR	2020611	Identifier	target		2020497	0					
ANR	2020612	IncDec	++		2020497	1					
ANR	2020613	PrimaryExpression	'0'		2020497	1					
ANR	2020614	BreakStatement	break ;	3593:4:86229:86234	2020497	3	True				
ANR	2020615	Label	case '\\'' :	3594:3:86239:86248	2020497	4	True				
ANR	2020616	Label	"case '\\""' :"	3595:3:86253:86262	2020497	5	True				
ANR	2020617	Label	case '\\\\' :	3596:3:86267:86276	2020497	6	True				
ANR	2020618	ExpressionStatement	* target ++ = '\\\\'	3597:4:86282:86298	2020497	7	True				
ANR	2020619	AssignmentExpression	* target ++ = '\\\\'		2020497	0		=			
ANR	2020620	UnaryOperationExpression	* target ++		2020497	0					
ANR	2020621	UnaryOperator	*		2020497	0					
ANR	2020622	PostIncDecOperationExpression	target ++		2020497	1					
ANR	2020623	Identifier	target		2020497	0					
ANR	2020624	IncDec	++		2020497	1					
ANR	2020625	PrimaryExpression	'\\\\'		2020497	1					
ANR	2020626	Label	default :	3599:3:86346:86353	2020497	8	True				
ANR	2020627	Identifier	default		2020497	0					
ANR	2020628	ExpressionStatement	* target ++ = * source	3600:4:86359:86378	2020497	9	True				
ANR	2020629	AssignmentExpression	* target ++ = * source		2020497	0		=			
ANR	2020630	UnaryOperationExpression	* target ++		2020497	0					
ANR	2020631	UnaryOperator	*		2020497	0					
ANR	2020632	PostIncDecOperationExpression	target ++		2020497	1					
ANR	2020633	Identifier	target		2020497	0					
ANR	2020634	IncDec	++		2020497	1					
ANR	2020635	UnaryOperationExpression	* source		2020497	1					
ANR	2020636	UnaryOperator	*		2020497	0					
ANR	2020637	Identifier	source		2020497	1					
ANR	2020638	BreakStatement	break ;	3601:4:86384:86389	2020497	10	True				
ANR	2020639	ExpressionStatement	source ++	3604:2:86398:86406	2020497	1	True				
ANR	2020640	PostIncDecOperationExpression	source ++		2020497	0					
ANR	2020641	Identifier	source		2020497	0					
ANR	2020642	IncDec	++		2020497	1					
ANR	2020643	ExpressionStatement	* target = 0	3607:1:86413:86424	2020497	11	True				
ANR	2020644	AssignmentExpression	* target = 0		2020497	0		=			
ANR	2020645	UnaryOperationExpression	* target		2020497	0					
ANR	2020646	UnaryOperator	*		2020497	0					
ANR	2020647	Identifier	target		2020497	1					
ANR	2020648	PrimaryExpression	0		2020497	1					
ANR	2020649	ExpressionStatement	* new_length = target - new_str	3608:1:86427:86457	2020497	12	True				
ANR	2020650	AssignmentExpression	* new_length = target - new_str		2020497	0		=			
ANR	2020651	UnaryOperationExpression	* new_length		2020497	0					
ANR	2020652	UnaryOperator	*		2020497	0					
ANR	2020653	Identifier	new_length		2020497	1					
ANR	2020654	AdditiveExpression	target - new_str		2020497	1		-			
ANR	2020655	Identifier	target		2020497	0					
ANR	2020656	Identifier	new_str		2020497	1					
ANR	2020657	IfStatement	if ( UNEXPECTED ( * new_length < 0 ) )		2020497	13					
ANR	2020658	Condition	UNEXPECTED ( * new_length < 0 )	3609:5:86464:86490	2020497	0	True				
ANR	2020659	CallExpression	UNEXPECTED ( * new_length < 0 )		2020497	0					
ANR	2020660	Callee	UNEXPECTED		2020497	0					
ANR	2020661	Identifier	UNEXPECTED		2020497	0					
ANR	2020662	ArgumentList	* new_length < 0		2020497	1					
ANR	2020663	Argument	* new_length < 0		2020497	0					
ANR	2020664	RelationalExpression	* new_length < 0		2020497	0		<			
ANR	2020665	UnaryOperationExpression	* new_length		2020497	0					
ANR	2020666	UnaryOperator	*		2020497	0					
ANR	2020667	Identifier	new_length		2020497	1					
ANR	2020668	PrimaryExpression	0		2020497	1					
ANR	2020669	CompoundStatement		41:34:747:747	2020497	1					
ANR	2020670	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	3610:2:86497:86540	2020497	0	True				
ANR	2020671	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		2020497	0					
ANR	2020672	Callee	zend_error		2020497	0					
ANR	2020673	Identifier	zend_error		2020497	0					
ANR	2020674	ArgumentList	E_ERROR		2020497	1					
ANR	2020675	Argument	E_ERROR		2020497	0					
ANR	2020676	Identifier	E_ERROR		2020497	0					
ANR	2020677	Argument	"""String size overflow"""		2020497	1					
ANR	2020678	PrimaryExpression	"""String size overflow"""		2020497	0					
ANR	2020679	IfStatement	if ( should_free )		2020497	14					
ANR	2020680	Condition	should_free	3612:5:86550:86560	2020497	0	True				
ANR	2020681	Identifier	should_free		2020497	0					
ANR	2020682	CompoundStatement		44:18:817:817	2020497	1					
ANR	2020683	ExpressionStatement	STR_FREE ( str )	3613:2:86567:86580	2020497	0	True				
ANR	2020684	CallExpression	STR_FREE ( str )		2020497	0					
ANR	2020685	Callee	STR_FREE		2020497	0					
ANR	2020686	Identifier	STR_FREE		2020497	0					
ANR	2020687	ArgumentList	str		2020497	1					
ANR	2020688	Argument	str		2020497	0					
ANR	2020689	Identifier	str		2020497	0					
ANR	2020690	ExpressionStatement	"new_str = ( char * ) erealloc ( new_str , * new_length + 1 )"	3615:1:86586:86639	2020497	15	True				
ANR	2020691	AssignmentExpression	"new_str = ( char * ) erealloc ( new_str , * new_length + 1 )"		2020497	0		=			
ANR	2020692	Identifier	new_str		2020497	0					
ANR	2020693	CastExpression	"( char * ) erealloc ( new_str , * new_length + 1 )"		2020497	1					
ANR	2020694	CastTarget	char *		2020497	0					
ANR	2020695	CallExpression	"erealloc ( new_str , * new_length + 1 )"		2020497	1					
ANR	2020696	Callee	erealloc		2020497	0					
ANR	2020697	Identifier	erealloc		2020497	0					
ANR	2020698	ArgumentList	new_str		2020497	1					
ANR	2020699	Argument	new_str		2020497	0					
ANR	2020700	Identifier	new_str		2020497	0					
ANR	2020701	Argument	* new_length + 1		2020497	1					
ANR	2020702	AdditiveExpression	* new_length + 1		2020497	0		+			
ANR	2020703	UnaryOperationExpression	* new_length		2020497	0					
ANR	2020704	UnaryOperator	*		2020497	0					
ANR	2020705	Identifier	new_length		2020497	1					
ANR	2020706	PrimaryExpression	1		2020497	1					
ANR	2020707	ReturnStatement	return new_str ;	3616:1:86642:86656	2020497	16	True				
ANR	2020708	Identifier	new_str		2020497	0					
ANR	2020709	ReturnType	PHPAPI char *		2020497	1					
ANR	2020710	Identifier	php_addslashes		2020497	2					
ANR	2020711	ParameterList	"char * str , int length , int * new_length , int should_free TSRMLS_DC"		2020497	3					
ANR	2020712	Parameter	char * str	3568:28:85678:85686	2020497	0	True				
ANR	2020713	ParameterType	char *		2020497	0					
ANR	2020714	Identifier	str		2020497	1					
ANR	2020715	Parameter	int length	3568:39:85689:85698	2020497	1	True				
ANR	2020716	ParameterType	int		2020497	0					
ANR	2020717	Identifier	length		2020497	1					
ANR	2020718	Parameter	int * new_length	3568:51:85701:85715	2020497	2	True				
ANR	2020719	ParameterType	int *		2020497	0					
ANR	2020720	Identifier	new_length		2020497	1					
ANR	2020721	Parameter	int should_free TSRMLS_DC	3568:68:85718:85742	2020497	3	True				
ANR	2020722	ParameterType	int should_free		2020497	0					
ANR	2020723	Identifier	TSRMLS_DC		2020497	1					
ANR	2020724	CFGEntryNode	ENTRY		2020497		True				
ANR	2020725	CFGExitNode	EXIT		2020497		True				
ANR	2020726	Symbol	should_free		2020497						
ANR	2020727	Symbol	local_new_length		2020497						
ANR	2020728	Symbol	length		2020497						
ANR	2020729	Symbol	* new_length		2020497						
ANR	2020730	Symbol	source		2020497						
ANR	2020731	Symbol	* target ++		2020497						
ANR	2020732	Symbol	TSRMLS_DC		2020497						
ANR	2020733	Symbol	target		2020497						
ANR	2020734	Symbol	str		2020497						
ANR	2020735	Symbol	& local_new_length		2020497						
ANR	2020736	Symbol	* target		2020497						
ANR	2020737	Symbol	UNEXPECTED		2020497						
ANR	2020738	Symbol	strlen		2020497						
ANR	2020739	Symbol	new_str		2020497						
ANR	2020740	Symbol	E_ERROR		2020497						
ANR	2020741	Symbol	* source		2020497						
ANR	2020742	Symbol	end		2020497						
ANR	2020743	Symbol	new_length		2020497						
ANR	2020744	Symbol	safe_emalloc		2020497						
ANR	2020745	Symbol	erealloc		2020497						
ANR	2020746	Function	php_char_to_str_ex	3628:0:87047:88654							
ANR	2020747	FunctionDef	"php_char_to_str_ex (char * str , uint len , char from , char * to , int to_len , zval * result , int case_sensitivity , int * replace_count)"		2020746	0					
ANR	2020748	CompoundStatement		3629:0:87187:88654	2020746	0					
ANR	2020749	IdentifierDeclStatement	int char_count = 0 ;	3630:1:87190:87208	2020746	0	True				
ANR	2020750	IdentifierDecl	char_count = 0		2020746	0					
ANR	2020751	IdentifierDeclType	int		2020746	0					
ANR	2020752	Identifier	char_count		2020746	1					
ANR	2020753	AssignmentExpression	char_count = 0		2020746	2		=			
ANR	2020754	Identifier	char_count		2020746	0					
ANR	2020755	PrimaryExpression	0		2020746	1					
ANR	2020756	IdentifierDeclStatement	int replaced = 0 ;	3631:1:87211:87227	2020746	1	True				
ANR	2020757	IdentifierDecl	replaced = 0		2020746	0					
ANR	2020758	IdentifierDeclType	int		2020746	0					
ANR	2020759	Identifier	replaced		2020746	1					
ANR	2020760	AssignmentExpression	replaced = 0		2020746	2		=			
ANR	2020761	Identifier	replaced		2020746	0					
ANR	2020762	PrimaryExpression	0		2020746	1					
ANR	2020763	IdentifierDeclStatement	"char * source , * target , * tmp , * source_end = str + len , * tmp_end = NULL ;"	3632:1:87230:87295	2020746	2	True				
ANR	2020764	IdentifierDecl	* source		2020746	0					
ANR	2020765	IdentifierDeclType	char *		2020746	0					
ANR	2020766	Identifier	source		2020746	1					
ANR	2020767	IdentifierDecl	* target		2020746	1					
ANR	2020768	IdentifierDeclType	char *		2020746	0					
ANR	2020769	Identifier	target		2020746	1					
ANR	2020770	IdentifierDecl	* tmp		2020746	2					
ANR	2020771	IdentifierDeclType	char *		2020746	0					
ANR	2020772	Identifier	tmp		2020746	1					
ANR	2020773	IdentifierDecl	* source_end = str + len		2020746	3					
ANR	2020774	IdentifierDeclType	char *		2020746	0					
ANR	2020775	Identifier	source_end		2020746	1					
ANR	2020776	AssignmentExpression	* source_end = str + len		2020746	2		=			
ANR	2020777	Identifier	source_end		2020746	0					
ANR	2020778	AdditiveExpression	str + len		2020746	1		+			
ANR	2020779	Identifier	str		2020746	0					
ANR	2020780	Identifier	len		2020746	1					
ANR	2020781	IdentifierDecl	* tmp_end = NULL		2020746	4					
ANR	2020782	IdentifierDeclType	char *		2020746	0					
ANR	2020783	Identifier	tmp_end		2020746	1					
ANR	2020784	AssignmentExpression	* tmp_end = NULL		2020746	2		=			
ANR	2020785	Identifier	NULL		2020746	0					
ANR	2020786	Identifier	NULL		2020746	1					
ANR	2020787	IfStatement	if ( case_sensitivity )		2020746	3					
ANR	2020788	Condition	case_sensitivity	3634:5:87303:87318	2020746	0	True				
ANR	2020789	Identifier	case_sensitivity		2020746	0					
ANR	2020790	CompoundStatement		7:2:137:164	2020746	1					
ANR	2020791	IdentifierDeclStatement	"char * p = str , * e = p + len ;"	3635:2:87325:87352	2020746	0	True				
ANR	2020792	IdentifierDecl	* p = str		2020746	0					
ANR	2020793	IdentifierDeclType	char *		2020746	0					
ANR	2020794	Identifier	p		2020746	1					
ANR	2020795	AssignmentExpression	* p = str		2020746	2		=			
ANR	2020796	Identifier	str		2020746	0					
ANR	2020797	Identifier	str		2020746	1					
ANR	2020798	IdentifierDecl	* e = p + len		2020746	1					
ANR	2020799	IdentifierDeclType	char *		2020746	0					
ANR	2020800	Identifier	e		2020746	1					
ANR	2020801	AssignmentExpression	* e = p + len		2020746	2		=			
ANR	2020802	Identifier	e		2020746	0					
ANR	2020803	AdditiveExpression	p + len		2020746	1		+			
ANR	2020804	Identifier	p		2020746	0					
ANR	2020805	Identifier	len		2020746	1					
ANR	2020806	WhileStatement	"while ( ( p = memchr ( p , from , ( e - p ) ) ) )"		2020746	1					
ANR	2020807	Condition	"p = memchr ( p , from , ( e - p ) )"	3636:9:87363:87392	2020746	0	True				
ANR	2020808	AssignmentExpression	"p = memchr ( p , from , ( e - p ) )"		2020746	0		=			
ANR	2020809	Identifier	p		2020746	0					
ANR	2020810	CallExpression	"memchr ( p , from , ( e - p ) )"		2020746	1					
ANR	2020811	Callee	memchr		2020746	0					
ANR	2020812	Identifier	memchr		2020746	0					
ANR	2020813	ArgumentList	p		2020746	1					
ANR	2020814	Argument	p		2020746	0					
ANR	2020815	Identifier	p		2020746	0					
ANR	2020816	Argument	from		2020746	1					
ANR	2020817	Identifier	from		2020746	0					
ANR	2020818	Argument	e - p		2020746	2					
ANR	2020819	AdditiveExpression	e - p		2020746	0		-			
ANR	2020820	Identifier	e		2020746	0					
ANR	2020821	Identifier	p		2020746	1					
ANR	2020822	CompoundStatement		8:41:207:207	2020746	1					
ANR	2020823	ExpressionStatement	char_count ++	3637:3:87400:87412	2020746	0	True				
ANR	2020824	PostIncDecOperationExpression	char_count ++		2020746	0					
ANR	2020825	Identifier	char_count		2020746	0					
ANR	2020826	IncDec	++		2020746	1					
ANR	2020827	ExpressionStatement	p ++	3638:3:87417:87420	2020746	1	True				
ANR	2020828	PostIncDecOperationExpression	p ++		2020746	0					
ANR	2020829	Identifier	p		2020746	0					
ANR	2020830	IncDec	++		2020746	1					
ANR	2020831	ElseStatement	else		2020746	0					
ANR	2020832	CompoundStatement		12:8:246:246	2020746	0					
ANR	2020833	ForStatement	for ( source = str ; source < source_end ; source ++ )		2020746	0					
ANR	2020834	ForInit	source = str ;	3641:7:87443:87455	2020746	0	True				
ANR	2020835	AssignmentExpression	source = str		2020746	0		=			
ANR	2020836	Identifier	source		2020746	0					
ANR	2020837	Identifier	str		2020746	1					
ANR	2020838	Condition	source < source_end	3641:21:87457:87475	2020746	1	True				
ANR	2020839	RelationalExpression	source < source_end		2020746	0		<			
ANR	2020840	Identifier	source		2020746	0					
ANR	2020841	Identifier	source_end		2020746	1					
ANR	2020842	PostIncDecOperationExpression	source ++	3641:42:87478:87485	2020746	2	True				
ANR	2020843	Identifier	source		2020746	0					
ANR	2020844	IncDec	++		2020746	1					
ANR	2020845	CompoundStatement		13:52:300:300	2020746	3					
ANR	2020846	IfStatement	if ( tolower ( * source ) == tolower ( from ) )		2020746	0					
ANR	2020847	Condition	tolower ( * source ) == tolower ( from )	3642:7:87497:87529	2020746	0	True				
ANR	2020848	EqualityExpression	tolower ( * source ) == tolower ( from )		2020746	0		==			
ANR	2020849	CallExpression	tolower ( * source )		2020746	0					
ANR	2020850	Callee	tolower		2020746	0					
ANR	2020851	Identifier	tolower		2020746	0					
ANR	2020852	ArgumentList	* source		2020746	1					
ANR	2020853	Argument	* source		2020746	0					
ANR	2020854	UnaryOperationExpression	* source		2020746	0					
ANR	2020855	UnaryOperator	*		2020746	0					
ANR	2020856	Identifier	source		2020746	1					
ANR	2020857	CallExpression	tolower ( from )		2020746	1					
ANR	2020858	Callee	tolower		2020746	0					
ANR	2020859	Identifier	tolower		2020746	0					
ANR	2020860	ArgumentList	from		2020746	1					
ANR	2020861	Argument	from		2020746	0					
ANR	2020862	Identifier	from		2020746	0					
ANR	2020863	CompoundStatement		14:42:344:344	2020746	1					
ANR	2020864	ExpressionStatement	char_count ++	3643:4:87538:87550	2020746	0	True				
ANR	2020865	PostIncDecOperationExpression	char_count ++		2020746	0					
ANR	2020866	Identifier	char_count		2020746	0					
ANR	2020867	IncDec	++		2020746	1					
ANR	2020868	IfStatement	if ( char_count == 0 && case_sensitivity )		2020746	4					
ANR	2020869	Condition	char_count == 0 && case_sensitivity	3648:5:87570:87604	2020746	0	True				
ANR	2020870	AndExpression	char_count == 0 && case_sensitivity		2020746	0		&&			
ANR	2020871	EqualityExpression	char_count == 0		2020746	0		==			
ANR	2020872	Identifier	char_count		2020746	0					
ANR	2020873	PrimaryExpression	0		2020746	1					
ANR	2020874	Identifier	case_sensitivity		2020746	1					
ANR	2020875	CompoundStatement		20:42:419:419	2020746	1					
ANR	2020876	ExpressionStatement	"ZVAL_STRINGL ( result , str , len , 1 )"	3649:2:87611:87644	2020746	0	True				
ANR	2020877	CallExpression	"ZVAL_STRINGL ( result , str , len , 1 )"		2020746	0					
ANR	2020878	Callee	ZVAL_STRINGL		2020746	0					
ANR	2020879	Identifier	ZVAL_STRINGL		2020746	0					
ANR	2020880	ArgumentList	result		2020746	1					
ANR	2020881	Argument	result		2020746	0					
ANR	2020882	Identifier	result		2020746	0					
ANR	2020883	Argument	str		2020746	1					
ANR	2020884	Identifier	str		2020746	0					
ANR	2020885	Argument	len		2020746	2					
ANR	2020886	Identifier	len		2020746	0					
ANR	2020887	Argument	1		2020746	3					
ANR	2020888	PrimaryExpression	1		2020746	0					
ANR	2020889	ReturnStatement	return 0 ;	3650:2:87648:87656	2020746	1	True				
ANR	2020890	PrimaryExpression	0		2020746	0					
ANR	2020891	ExpressionStatement	Z_STRLEN_P ( result ) = len + ( char_count * ( to_len - 1 ) )	3653:1:87663:87717	2020746	5	True				
ANR	2020892	AssignmentExpression	Z_STRLEN_P ( result ) = len + ( char_count * ( to_len - 1 ) )		2020746	0		=			
ANR	2020893	CallExpression	Z_STRLEN_P ( result )		2020746	0					
ANR	2020894	Callee	Z_STRLEN_P		2020746	0					
ANR	2020895	Identifier	Z_STRLEN_P		2020746	0					
ANR	2020896	ArgumentList	result		2020746	1					
ANR	2020897	Argument	result		2020746	0					
ANR	2020898	Identifier	result		2020746	0					
ANR	2020899	AdditiveExpression	len + ( char_count * ( to_len - 1 ) )		2020746	1		+			
ANR	2020900	Identifier	len		2020746	0					
ANR	2020901	MultiplicativeExpression	char_count * ( to_len - 1 )		2020746	1		*			
ANR	2020902	Identifier	char_count		2020746	0					
ANR	2020903	AdditiveExpression	to_len - 1		2020746	1		-			
ANR	2020904	Identifier	to_len		2020746	0					
ANR	2020905	PrimaryExpression	1		2020746	1					
ANR	2020906	IfStatement	if ( Z_STRLEN_P ( result ) < 0 )		2020746	6					
ANR	2020907	Condition	Z_STRLEN_P ( result ) < 0	3654:5:87724:87745	2020746	0	True				
ANR	2020908	RelationalExpression	Z_STRLEN_P ( result ) < 0		2020746	0		<			
ANR	2020909	CallExpression	Z_STRLEN_P ( result )		2020746	0					
ANR	2020910	Callee	Z_STRLEN_P		2020746	0					
ANR	2020911	Identifier	Z_STRLEN_P		2020746	0					
ANR	2020912	ArgumentList	result		2020746	1					
ANR	2020913	Argument	result		2020746	0					
ANR	2020914	Identifier	result		2020746	0					
ANR	2020915	PrimaryExpression	0		2020746	1					
ANR	2020916	CompoundStatement		26:29:560:560	2020746	1					
ANR	2020917	ExpressionStatement	"zend_error ( E_ERROR , ""String size overflow"" )"	3655:2:87752:87795	2020746	0	True				
ANR	2020918	CallExpression	"zend_error ( E_ERROR , ""String size overflow"" )"		2020746	0					
ANR	2020919	Callee	zend_error		2020746	0					
ANR	2020920	Identifier	zend_error		2020746	0					
ANR	2020921	ArgumentList	E_ERROR		2020746	1					
ANR	2020922	Argument	E_ERROR		2020746	0					
ANR	2020923	Identifier	E_ERROR		2020746	0					
ANR	2020924	Argument	"""String size overflow"""		2020746	1					
ANR	2020925	PrimaryExpression	"""String size overflow"""		2020746	0					
ANR	2020926	ExpressionStatement	"Z_STRVAL_P ( result ) = target = safe_emalloc_string ( char_count , to_len , len + 1 )"	3657:1:87801:87879	2020746	7	True				
ANR	2020927	AssignmentExpression	"Z_STRVAL_P ( result ) = target = safe_emalloc_string ( char_count , to_len , len + 1 )"		2020746	0		=			
ANR	2020928	CallExpression	Z_STRVAL_P ( result )		2020746	0					
ANR	2020929	Callee	Z_STRVAL_P		2020746	0					
ANR	2020930	Identifier	Z_STRVAL_P		2020746	0					
ANR	2020931	ArgumentList	result		2020746	1					
ANR	2020932	Argument	result		2020746	0					
ANR	2020933	Identifier	result		2020746	0					
ANR	2020934	AssignmentExpression	"target = safe_emalloc_string ( char_count , to_len , len + 1 )"		2020746	1		=			
ANR	2020935	Identifier	target		2020746	0					
ANR	2020936	CallExpression	"safe_emalloc_string ( char_count , to_len , len + 1 )"		2020746	1					
ANR	2020937	Callee	safe_emalloc_string		2020746	0					
ANR	2020938	Identifier	safe_emalloc_string		2020746	0					
ANR	2020939	ArgumentList	char_count		2020746	1					
ANR	2020940	Argument	char_count		2020746	0					
ANR	2020941	Identifier	char_count		2020746	0					
ANR	2020942	Argument	to_len		2020746	1					
ANR	2020943	Identifier	to_len		2020746	0					
ANR	2020944	Argument	len + 1		2020746	2					
ANR	2020945	AdditiveExpression	len + 1		2020746	0		+			
ANR	2020946	Identifier	len		2020746	0					
ANR	2020947	PrimaryExpression	1		2020746	1					
ANR	2020948	ExpressionStatement	Z_TYPE_P ( result ) = IS_STRING	3658:1:87882:87910	2020746	8	True				
ANR	2020949	AssignmentExpression	Z_TYPE_P ( result ) = IS_STRING		2020746	0		=			
ANR	2020950	CallExpression	Z_TYPE_P ( result )		2020746	0					
ANR	2020951	Callee	Z_TYPE_P		2020746	0					
ANR	2020952	Identifier	Z_TYPE_P		2020746	0					
ANR	2020953	ArgumentList	result		2020746	1					
ANR	2020954	Argument	result		2020746	0					
ANR	2020955	Identifier	result		2020746	0					
ANR	2020956	Identifier	IS_STRING		2020746	1					
ANR	2020957	IfStatement	if ( case_sensitivity )		2020746	9					
ANR	2020958	Condition	case_sensitivity	3660:5:87918:87933	2020746	0	True				
ANR	2020959	Identifier	case_sensitivity		2020746	0					
ANR	2020960	CompoundStatement		33:2:752:789	2020746	1					
ANR	2020961	IdentifierDeclStatement	"char * p = str , * e = p + len , * s = str ;"	3661:2:87940:87977	2020746	0	True				
ANR	2020962	IdentifierDecl	* p = str		2020746	0					
ANR	2020963	IdentifierDeclType	char *		2020746	0					
ANR	2020964	Identifier	p		2020746	1					
ANR	2020965	AssignmentExpression	* p = str		2020746	2		=			
ANR	2020966	Identifier	str		2020746	0					
ANR	2020967	Identifier	str		2020746	1					
ANR	2020968	IdentifierDecl	* e = p + len		2020746	1					
ANR	2020969	IdentifierDeclType	char *		2020746	0					
ANR	2020970	Identifier	e		2020746	1					
ANR	2020971	AssignmentExpression	* e = p + len		2020746	2		=			
ANR	2020972	Identifier	e		2020746	0					
ANR	2020973	AdditiveExpression	p + len		2020746	1		+			
ANR	2020974	Identifier	p		2020746	0					
ANR	2020975	Identifier	len		2020746	1					
ANR	2020976	IdentifierDecl	* s = str		2020746	2					
ANR	2020977	IdentifierDeclType	char *		2020746	0					
ANR	2020978	Identifier	s		2020746	1					
ANR	2020979	AssignmentExpression	* s = str		2020746	2		=			
ANR	2020980	Identifier	str		2020746	0					
ANR	2020981	Identifier	str		2020746	1					
ANR	2020982	WhileStatement	"while ( ( p = memchr ( p , from , ( e - p ) ) ) )"		2020746	1					
ANR	2020983	Condition	"p = memchr ( p , from , ( e - p ) )"	3662:9:87988:88017	2020746	0	True				
ANR	2020984	AssignmentExpression	"p = memchr ( p , from , ( e - p ) )"		2020746	0		=			
ANR	2020985	Identifier	p		2020746	0					
ANR	2020986	CallExpression	"memchr ( p , from , ( e - p ) )"		2020746	1					
ANR	2020987	Callee	memchr		2020746	0					
ANR	2020988	Identifier	memchr		2020746	0					
ANR	2020989	ArgumentList	p		2020746	1					
ANR	2020990	Argument	p		2020746	0					
ANR	2020991	Identifier	p		2020746	0					
ANR	2020992	Argument	from		2020746	1					
ANR	2020993	Identifier	from		2020746	0					
ANR	2020994	Argument	e - p		2020746	2					
ANR	2020995	AdditiveExpression	e - p		2020746	0		-			
ANR	2020996	Identifier	e		2020746	0					
ANR	2020997	Identifier	p		2020746	1					
ANR	2020998	CompoundStatement		34:41:832:832	2020746	1					
ANR	2020999	ExpressionStatement	"memcpy ( target , s , ( p - s ) )"	3663:3:88025:88051	2020746	0	True				
ANR	2021000	CallExpression	"memcpy ( target , s , ( p - s ) )"		2020746	0					
ANR	2021001	Callee	memcpy		2020746	0					
ANR	2021002	Identifier	memcpy		2020746	0					
ANR	2021003	ArgumentList	target		2020746	1					
ANR	2021004	Argument	target		2020746	0					
ANR	2021005	Identifier	target		2020746	0					
ANR	2021006	Argument	s		2020746	1					
ANR	2021007	Identifier	s		2020746	0					
ANR	2021008	Argument	p - s		2020746	2					
ANR	2021009	AdditiveExpression	p - s		2020746	0		-			
ANR	2021010	Identifier	p		2020746	0					
ANR	2021011	Identifier	s		2020746	1					
ANR	2021012	ExpressionStatement	target += p - s	3664:3:88056:88071	2020746	1	True				
ANR	2021013	AssignmentExpression	target += p - s		2020746	0		+=			
ANR	2021014	Identifier	target		2020746	0					
ANR	2021015	AdditiveExpression	p - s		2020746	1		-			
ANR	2021016	Identifier	p		2020746	0					
ANR	2021017	Identifier	s		2020746	1					
ANR	2021018	ExpressionStatement	"memcpy ( target , to , to_len )"	3665:3:88076:88102	2020746	2	True				
ANR	2021019	CallExpression	"memcpy ( target , to , to_len )"		2020746	0					
ANR	2021020	Callee	memcpy		2020746	0					
ANR	2021021	Identifier	memcpy		2020746	0					
ANR	2021022	ArgumentList	target		2020746	1					
ANR	2021023	Argument	target		2020746	0					
ANR	2021024	Identifier	target		2020746	0					
ANR	2021025	Argument	to		2020746	1					
ANR	2021026	Identifier	to		2020746	0					
ANR	2021027	Argument	to_len		2020746	2					
ANR	2021028	Identifier	to_len		2020746	0					
ANR	2021029	ExpressionStatement	target += to_len	3666:3:88107:88123	2020746	3	True				
ANR	2021030	AssignmentExpression	target += to_len		2020746	0		+=			
ANR	2021031	Identifier	target		2020746	0					
ANR	2021032	Identifier	to_len		2020746	1					
ANR	2021033	ExpressionStatement	p ++	3667:3:88128:88131	2020746	4	True				
ANR	2021034	PostIncDecOperationExpression	p ++		2020746	0					
ANR	2021035	Identifier	p		2020746	0					
ANR	2021036	IncDec	++		2020746	1					
ANR	2021037	ExpressionStatement	s = p	3668:3:88136:88141	2020746	5	True				
ANR	2021038	AssignmentExpression	s = p		2020746	0		=			
ANR	2021039	Identifier	s		2020746	0					
ANR	2021040	Identifier	p		2020746	1					
ANR	2021041	IfStatement	if ( replace_count )		2020746	6					
ANR	2021042	Condition	replace_count	3669:7:88150:88162	2020746	0	True				
ANR	2021043	Identifier	replace_count		2020746	0					
ANR	2021044	CompoundStatement		41:22:977:977	2020746	1					
ANR	2021045	ExpressionStatement	* replace_count += 1	3670:4:88171:88190	2020746	0	True				
ANR	2021046	AssignmentExpression	* replace_count += 1		2020746	0		+=			
ANR	2021047	UnaryOperationExpression	* replace_count		2020746	0					
ANR	2021048	UnaryOperator	*		2020746	0					
ANR	2021049	Identifier	replace_count		2020746	1					
ANR	2021050	PrimaryExpression	1		2020746	1					
ANR	2021051	IfStatement	if ( s < e )		2020746	2					
ANR	2021052	Condition	s < e	3673:6:88207:88211	2020746	0	True				
ANR	2021053	RelationalExpression	s < e		2020746	0		<			
ANR	2021054	Identifier	s		2020746	0					
ANR	2021055	Identifier	e		2020746	1					
ANR	2021056	CompoundStatement		45:13:1026:1026	2020746	1					
ANR	2021057	ExpressionStatement	"memcpy ( target , s , ( e - s ) )"	3674:3:88219:88245	2020746	0	True				
ANR	2021058	CallExpression	"memcpy ( target , s , ( e - s ) )"		2020746	0					
ANR	2021059	Callee	memcpy		2020746	0					
ANR	2021060	Identifier	memcpy		2020746	0					
ANR	2021061	ArgumentList	target		2020746	1					
ANR	2021062	Argument	target		2020746	0					
ANR	2021063	Identifier	target		2020746	0					
ANR	2021064	Argument	s		2020746	1					
ANR	2021065	Identifier	s		2020746	0					
ANR	2021066	Argument	e - s		2020746	2					
ANR	2021067	AdditiveExpression	e - s		2020746	0		-			
ANR	2021068	Identifier	e		2020746	0					
ANR	2021069	Identifier	s		2020746	1					
ANR	2021070	ExpressionStatement	target += e - s	3675:3:88250:88265	2020746	1	True				
ANR	2021071	AssignmentExpression	target += e - s		2020746	0		+=			
ANR	2021072	Identifier	target		2020746	0					
ANR	2021073	AdditiveExpression	e - s		2020746	1		-			
ANR	2021074	Identifier	e		2020746	0					
ANR	2021075	Identifier	s		2020746	1					
ANR	2021076	ElseStatement	else		2020746	0					
ANR	2021077	CompoundStatement		49:8:1091:1091	2020746	0					
ANR	2021078	ForStatement	for ( source = str ; source < source_end ; source ++ )		2020746	0					
ANR	2021079	ForInit	source = str ;	3678:7:88288:88300	2020746	0	True				
ANR	2021080	AssignmentExpression	source = str		2020746	0		=			
ANR	2021081	Identifier	source		2020746	0					
ANR	2021082	Identifier	str		2020746	1					
ANR	2021083	Condition	source < source_end	3678:21:88302:88320	2020746	1	True				
ANR	2021084	RelationalExpression	source < source_end		2020746	0		<			
ANR	2021085	Identifier	source		2020746	0					
ANR	2021086	Identifier	source_end		2020746	1					
ANR	2021087	PostIncDecOperationExpression	source ++	3678:42:88323:88330	2020746	2	True				
ANR	2021088	Identifier	source		2020746	0					
ANR	2021089	IncDec	++		2020746	1					
ANR	2021090	CompoundStatement		50:52:1145:1145	2020746	3					
ANR	2021091	IfStatement	if ( tolower ( * source ) == tolower ( from ) )		2020746	0					
ANR	2021092	Condition	tolower ( * source ) == tolower ( from )	3679:7:88342:88374	2020746	0	True				
ANR	2021093	EqualityExpression	tolower ( * source ) == tolower ( from )		2020746	0		==			
ANR	2021094	CallExpression	tolower ( * source )		2020746	0					
ANR	2021095	Callee	tolower		2020746	0					
ANR	2021096	Identifier	tolower		2020746	0					
ANR	2021097	ArgumentList	* source		2020746	1					
ANR	2021098	Argument	* source		2020746	0					
ANR	2021099	UnaryOperationExpression	* source		2020746	0					
ANR	2021100	UnaryOperator	*		2020746	0					
ANR	2021101	Identifier	source		2020746	1					
ANR	2021102	CallExpression	tolower ( from )		2020746	1					
ANR	2021103	Callee	tolower		2020746	0					
ANR	2021104	Identifier	tolower		2020746	0					
ANR	2021105	ArgumentList	from		2020746	1					
ANR	2021106	Argument	from		2020746	0					
ANR	2021107	Identifier	from		2020746	0					
ANR	2021108	CompoundStatement		51:42:1189:1189	2020746	1					
ANR	2021109	ExpressionStatement	replaced = 1	3680:4:88383:88395	2020746	0	True				
ANR	2021110	AssignmentExpression	replaced = 1		2020746	0		=			
ANR	2021111	Identifier	replaced		2020746	0					
ANR	2021112	PrimaryExpression	1		2020746	1					
ANR	2021113	IfStatement	if ( replace_count )		2020746	1					
ANR	2021114	Condition	replace_count	3681:8:88405:88417	2020746	0	True				
ANR	2021115	Identifier	replace_count		2020746	0					
ANR	2021116	CompoundStatement		53:23:1232:1232	2020746	1					
ANR	2021117	ExpressionStatement	* replace_count += 1	3682:5:88427:88446	2020746	0	True				
ANR	2021118	AssignmentExpression	* replace_count += 1		2020746	0		+=			
ANR	2021119	UnaryOperationExpression	* replace_count		2020746	0					
ANR	2021120	UnaryOperator	*		2020746	0					
ANR	2021121	Identifier	replace_count		2020746	1					
ANR	2021122	PrimaryExpression	1		2020746	1					
ANR	2021123	ForStatement	"for ( tmp = to , tmp_end = tmp + to_len ; tmp < tmp_end ; tmp ++ )"		2020746	2					
ANR	2021124	ForInit	"tmp = to , tmp_end = tmp + to_len ;"	3684:9:88463:88493	2020746	0	True				
ANR	2021125	Expression	"tmp = to , tmp_end = tmp + to_len"		2020746	0					
ANR	2021126	AssignmentExpression	tmp = to		2020746	0		=			
ANR	2021127	Identifier	tmp		2020746	0					
ANR	2021128	Identifier	to		2020746	1					
ANR	2021129	AssignmentExpression	tmp_end = tmp + to_len		2020746	1		=			
ANR	2021130	Identifier	tmp_end		2020746	0					
ANR	2021131	AdditiveExpression	tmp + to_len		2020746	1		+			
ANR	2021132	Identifier	tmp		2020746	0					
ANR	2021133	Identifier	to_len		2020746	1					
ANR	2021134	Condition	tmp < tmp_end	3684:41:88495:88507	2020746	1	True				
ANR	2021135	RelationalExpression	tmp < tmp_end		2020746	0		<			
ANR	2021136	Identifier	tmp		2020746	0					
ANR	2021137	Identifier	tmp_end		2020746	1					
ANR	2021138	PostIncDecOperationExpression	tmp ++	3684:56:88510:88514	2020746	2	True				
ANR	2021139	Identifier	tmp		2020746	0					
ANR	2021140	IncDec	++		2020746	1					
ANR	2021141	CompoundStatement		56:63:1329:1329	2020746	3					
ANR	2021142	ExpressionStatement	* target = * tmp	3685:5:88524:88538	2020746	0	True				
ANR	2021143	AssignmentExpression	* target = * tmp		2020746	0		=			
ANR	2021144	UnaryOperationExpression	* target		2020746	0					
ANR	2021145	UnaryOperator	*		2020746	0					
ANR	2021146	Identifier	target		2020746	1					
ANR	2021147	UnaryOperationExpression	* tmp		2020746	1					
ANR	2021148	UnaryOperator	*		2020746	0					
ANR	2021149	Identifier	tmp		2020746	1					
ANR	2021150	ExpressionStatement	target ++	3686:5:88545:88553	2020746	1	True				
ANR	2021151	PostIncDecOperationExpression	target ++		2020746	0					
ANR	2021152	Identifier	target		2020746	0					
ANR	2021153	IncDec	++		2020746	1					
ANR	2021154	ElseStatement	else		2020746	0					
ANR	2021155	CompoundStatement		60:10:1383:1383	2020746	0					
ANR	2021156	ExpressionStatement	* target = * source	3689:4:88577:88594	2020746	0	True				
ANR	2021157	AssignmentExpression	* target = * source		2020746	0		=			
ANR	2021158	UnaryOperationExpression	* target		2020746	0					
ANR	2021159	UnaryOperator	*		2020746	0					
ANR	2021160	Identifier	target		2020746	1					
ANR	2021161	UnaryOperationExpression	* source		2020746	1					
ANR	2021162	UnaryOperator	*		2020746	0					
ANR	2021163	Identifier	source		2020746	1					
ANR	2021164	ExpressionStatement	target ++	3690:4:88600:88608	2020746	1	True				
ANR	2021165	PostIncDecOperationExpression	target ++		2020746	0					
ANR	2021166	Identifier	target		2020746	0					
ANR	2021167	IncDec	++		2020746	1					
ANR	2021168	ExpressionStatement	* target = 0	3694:1:88623:88634	2020746	10	True				
ANR	2021169	AssignmentExpression	* target = 0		2020746	0		=			
ANR	2021170	UnaryOperationExpression	* target		2020746	0					
ANR	2021171	UnaryOperator	*		2020746	0					
ANR	2021172	Identifier	target		2020746	1					
ANR	2021173	PrimaryExpression	0		2020746	1					
ANR	2021174	ReturnStatement	return replaced ;	3695:1:88637:88652	2020746	11	True				
ANR	2021175	Identifier	replaced		2020746	0					
ANR	2021176	ReturnType	PHPAPI int		2020746	1					
ANR	2021177	Identifier	php_char_to_str_ex		2020746	2					
ANR	2021178	ParameterList	"char * str , uint len , char from , char * to , int to_len , zval * result , int case_sensitivity , int * replace_count"		2020746	3					
ANR	2021179	Parameter	char * str	3628:30:87077:87085	2020746	0	True				
ANR	2021180	ParameterType	char *		2020746	0					
ANR	2021181	Identifier	str		2020746	1					
ANR	2021182	Parameter	uint len	3628:41:87088:87095	2020746	1	True				
ANR	2021183	ParameterType	uint		2020746	0					
ANR	2021184	Identifier	len		2020746	1					
ANR	2021185	Parameter	char from	3628:51:87098:87106	2020746	2	True				
ANR	2021186	ParameterType	char		2020746	0					
ANR	2021187	Identifier	from		2020746	1					
ANR	2021188	Parameter	char * to	3628:62:87109:87116	2020746	3	True				
ANR	2021189	ParameterType	char *		2020746	0					
ANR	2021190	Identifier	to		2020746	1					
ANR	2021191	Parameter	int to_len	3628:72:87119:87128	2020746	4	True				
ANR	2021192	ParameterType	int		2020746	0					
ANR	2021193	Identifier	to_len		2020746	1					
ANR	2021194	Parameter	zval * result	3628:84:87131:87142	2020746	5	True				
ANR	2021195	ParameterType	zval *		2020746	0					
ANR	2021196	Identifier	result		2020746	1					
ANR	2021197	Parameter	int case_sensitivity	3628:98:87145:87164	2020746	6	True				
ANR	2021198	ParameterType	int		2020746	0					
ANR	2021199	Identifier	case_sensitivity		2020746	1					
ANR	2021200	Parameter	int * replace_count	3628:120:87167:87184	2020746	7	True				
ANR	2021201	ParameterType	int *		2020746	0					
ANR	2021202	Identifier	replace_count		2020746	1					
ANR	2021203	CFGEntryNode	ENTRY		2020746		True				
ANR	2021204	CFGExitNode	EXIT		2020746		True				
ANR	2021205	Symbol	* tmp		2020746						
ANR	2021206	Symbol	* replace_count		2020746						
ANR	2021207	Symbol	tolower		2020746						
ANR	2021208	Symbol	source		2020746						
ANR	2021209	Symbol	result		2020746						
ANR	2021210	Symbol	replace_count		2020746						
ANR	2021211	Symbol	len		2020746						
ANR	2021212	Symbol	tmp		2020746						
ANR	2021213	Symbol	* source		2020746						
ANR	2021214	Symbol	tmp_end		2020746						
ANR	2021215	Symbol	from		2020746						
ANR	2021216	Symbol	Z_STRLEN_P		2020746						
ANR	2021217	Symbol	IS_STRING		2020746						
ANR	2021218	Symbol	NULL		2020746						
ANR	2021219	Symbol	e		2020746						
ANR	2021220	Symbol	char_count		2020746						
ANR	2021221	Symbol	replaced		2020746						
ANR	2021222	Symbol	to_len		2020746						
ANR	2021223	Symbol	Z_TYPE_P		2020746						
ANR	2021224	Symbol	Z_STRVAL_P		2020746						
ANR	2021225	Symbol	target		2020746						
ANR	2021226	Symbol	str		2020746						
ANR	2021227	Symbol	p		2020746						
ANR	2021228	Symbol	* target		2020746						
ANR	2021229	Symbol	source_end		2020746						
ANR	2021230	Symbol	E_ERROR		2020746						
ANR	2021231	Symbol	s		2020746						
ANR	2021232	Symbol	memchr		2020746						
ANR	2021233	Symbol	to		2020746						
ANR	2021234	Symbol	safe_emalloc_string		2020746						
ANR	2021235	Symbol	case_sensitivity		2020746						
ANR	2021236	Function	php_char_to_str	3701:0:88694:88864							
ANR	2021237	FunctionDef	"php_char_to_str (char * str , uint len , char from , char * to , int to_len , zval * result)"		2021236	0					
ANR	2021238	CompoundStatement		3702:0:88789:88864	2021236	0					
ANR	2021239	ReturnStatement	"return php_char_to_str_ex ( str , len , from , to , to_len , result , 1 , NULL ) ;"	3703:1:88792:88862	2021236	0	True				
ANR	2021240	CallExpression	"php_char_to_str_ex ( str , len , from , to , to_len , result , 1 , NULL )"		2021236	0					
ANR	2021241	Callee	php_char_to_str_ex		2021236	0					
ANR	2021242	Identifier	php_char_to_str_ex		2021236	0					
ANR	2021243	ArgumentList	str		2021236	1					
ANR	2021244	Argument	str		2021236	0					
ANR	2021245	Identifier	str		2021236	0					
ANR	2021246	Argument	len		2021236	1					
ANR	2021247	Identifier	len		2021236	0					
ANR	2021248	Argument	from		2021236	2					
ANR	2021249	Identifier	from		2021236	0					
ANR	2021250	Argument	to		2021236	3					
ANR	2021251	Identifier	to		2021236	0					
ANR	2021252	Argument	to_len		2021236	4					
ANR	2021253	Identifier	to_len		2021236	0					
ANR	2021254	Argument	result		2021236	5					
ANR	2021255	Identifier	result		2021236	0					
ANR	2021256	Argument	1		2021236	6					
ANR	2021257	PrimaryExpression	1		2021236	0					
ANR	2021258	Argument	NULL		2021236	7					
ANR	2021259	Identifier	NULL		2021236	0					
ANR	2021260	ReturnType	PHPAPI int		2021236	1					
ANR	2021261	Identifier	php_char_to_str		2021236	2					
ANR	2021262	ParameterList	"char * str , uint len , char from , char * to , int to_len , zval * result"		2021236	3					
ANR	2021263	Parameter	char * str	3701:27:88721:88729	2021236	0	True				
ANR	2021264	ParameterType	char *		2021236	0					
ANR	2021265	Identifier	str		2021236	1					
ANR	2021266	Parameter	uint len	3701:38:88732:88739	2021236	1	True				
ANR	2021267	ParameterType	uint		2021236	0					
ANR	2021268	Identifier	len		2021236	1					
ANR	2021269	Parameter	char from	3701:48:88742:88750	2021236	2	True				
ANR	2021270	ParameterType	char		2021236	0					
ANR	2021271	Identifier	from		2021236	1					
ANR	2021272	Parameter	char * to	3701:59:88753:88760	2021236	3	True				
ANR	2021273	ParameterType	char *		2021236	0					
ANR	2021274	Identifier	to		2021236	1					
ANR	2021275	Parameter	int to_len	3701:69:88763:88772	2021236	4	True				
ANR	2021276	ParameterType	int		2021236	0					
ANR	2021277	Identifier	to_len		2021236	1					
ANR	2021278	Parameter	zval * result	3701:81:88775:88786	2021236	5	True				
ANR	2021279	ParameterType	zval *		2021236	0					
ANR	2021280	Identifier	result		2021236	1					
ANR	2021281	CFGEntryNode	ENTRY		2021236		True				
ANR	2021282	CFGExitNode	EXIT		2021236		True				
ANR	2021283	Symbol	str		2021236						
ANR	2021284	Symbol	result		2021236						
ANR	2021285	Symbol	NULL		2021236						
ANR	2021286	Symbol	len		2021236						
ANR	2021287	Symbol	php_char_to_str_ex		2021236						
ANR	2021288	Symbol	from		2021236						
ANR	2021289	Symbol	to_len		2021236						
ANR	2021290	Symbol	to		2021236						
ANR	2021291	Function	php_str_to_str_ex	3709:0:88906:92902							
ANR	2021292	FunctionDef	"php_str_to_str_ex (char * haystack , int length , char * needle , int needle_len , char * str , int str_len , int * _new_length , int case_sensitivity , int * replace_count)"		2021291	0					
ANR	2021293	CompoundStatement		3711:0:89080:92902	2021291	0					
ANR	2021294	IdentifierDeclStatement	char * new_str ;	3712:1:89083:89096	2021291	0	True				
ANR	2021295	IdentifierDecl	* new_str		2021291	0					
ANR	2021296	IdentifierDeclType	char *		2021291	0					
ANR	2021297	Identifier	new_str		2021291	1					
ANR	2021298	IfStatement	if ( needle_len < length )		2021291	1					
ANR	2021299	Condition	needle_len < length	3714:5:89104:89122	2021291	0	True				
ANR	2021300	RelationalExpression	needle_len < length		2021291	0		<			
ANR	2021301	Identifier	needle_len		2021291	0					
ANR	2021302	Identifier	length		2021291	1					
ANR	2021303	CompoundStatement		6:2:103:122	2021291	1					
ANR	2021304	IdentifierDeclStatement	"char * end , * haystack_dup = NULL , * needle_dup = NULL ;"	3715:2:89129:89180	2021291	0	True				
ANR	2021305	IdentifierDecl	* end		2021291	0					
ANR	2021306	IdentifierDeclType	char *		2021291	0					
ANR	2021307	Identifier	end		2021291	1					
ANR	2021308	IdentifierDecl	* haystack_dup = NULL		2021291	1					
ANR	2021309	IdentifierDeclType	char *		2021291	0					
ANR	2021310	Identifier	haystack_dup		2021291	1					
ANR	2021311	AssignmentExpression	* haystack_dup = NULL		2021291	2		=			
ANR	2021312	Identifier	NULL		2021291	0					
ANR	2021313	Identifier	NULL		2021291	1					
ANR	2021314	IdentifierDecl	* needle_dup = NULL		2021291	2					
ANR	2021315	IdentifierDeclType	char *		2021291	0					
ANR	2021316	Identifier	needle_dup		2021291	1					
ANR	2021317	AssignmentExpression	* needle_dup = NULL		2021291	2		=			
ANR	2021318	Identifier	NULL		2021291	0					
ANR	2021319	Identifier	NULL		2021291	1					
ANR	2021320	IdentifierDeclStatement	"char * e , * s , * p , * r ;"	3716:2:89184:89203	2021291	1	True				
ANR	2021321	IdentifierDecl	* e		2021291	0					
ANR	2021322	IdentifierDeclType	char *		2021291	0					
ANR	2021323	Identifier	e		2021291	1					
ANR	2021324	IdentifierDecl	* s		2021291	1					
ANR	2021325	IdentifierDeclType	char *		2021291	0					
ANR	2021326	Identifier	s		2021291	1					
ANR	2021327	IdentifierDecl	* p		2021291	2					
ANR	2021328	IdentifierDeclType	char *		2021291	0					
ANR	2021329	Identifier	p		2021291	1					
ANR	2021330	IdentifierDecl	* r		2021291	3					
ANR	2021331	IdentifierDeclType	char *		2021291	0					
ANR	2021332	Identifier	r		2021291	1					
ANR	2021333	IfStatement	if ( needle_len == str_len )		2021291	2					
ANR	2021334	Condition	needle_len == str_len	3718:6:89212:89232	2021291	0	True				
ANR	2021335	EqualityExpression	needle_len == str_len		2021291	0		==			
ANR	2021336	Identifier	needle_len		2021291	0					
ANR	2021337	Identifier	str_len		2021291	1					
ANR	2021338	CompoundStatement		8:29:154:154	2021291	1					
ANR	2021339	ExpressionStatement	"new_str = estrndup ( haystack , length )"	3719:3:89240:89276	2021291	0	True				
ANR	2021340	AssignmentExpression	"new_str = estrndup ( haystack , length )"		2021291	0		=			
ANR	2021341	Identifier	new_str		2021291	0					
ANR	2021342	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2021343	Callee	estrndup		2021291	0					
ANR	2021344	Identifier	estrndup		2021291	0					
ANR	2021345	ArgumentList	haystack		2021291	1					
ANR	2021346	Argument	haystack		2021291	0					
ANR	2021347	Identifier	haystack		2021291	0					
ANR	2021348	Argument	length		2021291	1					
ANR	2021349	Identifier	length		2021291	0					
ANR	2021350	ExpressionStatement	* _new_length = length	3720:3:89281:89302	2021291	1	True				
ANR	2021351	AssignmentExpression	* _new_length = length		2021291	0		=			
ANR	2021352	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2021353	UnaryOperator	*		2021291	0					
ANR	2021354	Identifier	_new_length		2021291	1					
ANR	2021355	Identifier	length		2021291	1					
ANR	2021356	IfStatement	if ( case_sensitivity )		2021291	2					
ANR	2021357	Condition	case_sensitivity	3722:7:89312:89327	2021291	0	True				
ANR	2021358	Identifier	case_sensitivity		2021291	0					
ANR	2021359	CompoundStatement		12:25:249:249	2021291	1					
ANR	2021360	ExpressionStatement	end = new_str + length	3723:4:89336:89358	2021291	0	True				
ANR	2021361	AssignmentExpression	end = new_str + length		2021291	0		=			
ANR	2021362	Identifier	end		2021291	0					
ANR	2021363	AdditiveExpression	new_str + length		2021291	1		+			
ANR	2021364	Identifier	new_str		2021291	0					
ANR	2021365	Identifier	length		2021291	1					
ANR	2021366	ForStatement	"for ( p = new_str ; ( r = php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2021291	1					
ANR	2021367	ForInit	p = new_str ;	3724:9:89369:89380	2021291	0	True				
ANR	2021368	AssignmentExpression	p = new_str		2021291	0		=			
ANR	2021369	Identifier	p		2021291	0					
ANR	2021370	Identifier	new_str		2021291	1					
ANR	2021371	Condition	"r = php_memnstr ( p , needle , needle_len , end )"	3724:22:89382:89426	2021291	1	True				
ANR	2021372	AssignmentExpression	"r = php_memnstr ( p , needle , needle_len , end )"		2021291	0		=			
ANR	2021373	Identifier	r		2021291	0					
ANR	2021374	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2021291	1					
ANR	2021375	Callee	php_memnstr		2021291	0					
ANR	2021376	Identifier	php_memnstr		2021291	0					
ANR	2021377	ArgumentList	p		2021291	1					
ANR	2021378	Argument	p		2021291	0					
ANR	2021379	Identifier	p		2021291	0					
ANR	2021380	Argument	needle		2021291	1					
ANR	2021381	Identifier	needle		2021291	0					
ANR	2021382	Argument	needle_len		2021291	2					
ANR	2021383	Identifier	needle_len		2021291	0					
ANR	2021384	Argument	end		2021291	3					
ANR	2021385	Identifier	end		2021291	0					
ANR	2021386	AssignmentExpression	p = r + needle_len	3724:69:89429:89446	2021291	2	True	=			
ANR	2021387	Identifier	p		2021291	0					
ANR	2021388	AdditiveExpression	r + needle_len		2021291	1		+			
ANR	2021389	Identifier	r		2021291	0					
ANR	2021390	Identifier	needle_len		2021291	1					
ANR	2021391	CompoundStatement		14:89:368:368	2021291	3					
ANR	2021392	ExpressionStatement	"memcpy ( r , str , str_len )"	3725:5:89456:89479	2021291	0	True				
ANR	2021393	CallExpression	"memcpy ( r , str , str_len )"		2021291	0					
ANR	2021394	Callee	memcpy		2021291	0					
ANR	2021395	Identifier	memcpy		2021291	0					
ANR	2021396	ArgumentList	r		2021291	1					
ANR	2021397	Argument	r		2021291	0					
ANR	2021398	Identifier	r		2021291	0					
ANR	2021399	Argument	str		2021291	1					
ANR	2021400	Identifier	str		2021291	0					
ANR	2021401	Argument	str_len		2021291	2					
ANR	2021402	Identifier	str_len		2021291	0					
ANR	2021403	IfStatement	if ( replace_count )		2021291	1					
ANR	2021404	Condition	replace_count	3726:9:89490:89502	2021291	0	True				
ANR	2021405	Identifier	replace_count		2021291	0					
ANR	2021406	CompoundStatement		16:24:424:424	2021291	1					
ANR	2021407	ExpressionStatement	( * replace_count ) ++	3727:6:89513:89531	2021291	0	True				
ANR	2021408	PostIncDecOperationExpression	( * replace_count ) ++		2021291	0					
ANR	2021409	UnaryOperationExpression	* replace_count		2021291	0					
ANR	2021410	UnaryOperator	*		2021291	0					
ANR	2021411	Identifier	replace_count		2021291	1					
ANR	2021412	IncDec	++		2021291	1					
ANR	2021413	ElseStatement	else		2021291	0					
ANR	2021414	CompoundStatement		20:10:475:475	2021291	0					
ANR	2021415	ExpressionStatement	"haystack_dup = estrndup ( haystack , length )"	3731:4:89562:89603	2021291	0	True				
ANR	2021416	AssignmentExpression	"haystack_dup = estrndup ( haystack , length )"		2021291	0		=			
ANR	2021417	Identifier	haystack_dup		2021291	0					
ANR	2021418	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2021419	Callee	estrndup		2021291	0					
ANR	2021420	Identifier	estrndup		2021291	0					
ANR	2021421	ArgumentList	haystack		2021291	1					
ANR	2021422	Argument	haystack		2021291	0					
ANR	2021423	Identifier	haystack		2021291	0					
ANR	2021424	Argument	length		2021291	1					
ANR	2021425	Identifier	length		2021291	0					
ANR	2021426	ExpressionStatement	"needle_dup = estrndup ( needle , needle_len )"	3732:4:89609:89650	2021291	1	True				
ANR	2021427	AssignmentExpression	"needle_dup = estrndup ( needle , needle_len )"		2021291	0		=			
ANR	2021428	Identifier	needle_dup		2021291	0					
ANR	2021429	CallExpression	"estrndup ( needle , needle_len )"		2021291	1					
ANR	2021430	Callee	estrndup		2021291	0					
ANR	2021431	Identifier	estrndup		2021291	0					
ANR	2021432	ArgumentList	needle		2021291	1					
ANR	2021433	Argument	needle		2021291	0					
ANR	2021434	Identifier	needle		2021291	0					
ANR	2021435	Argument	needle_len		2021291	1					
ANR	2021436	Identifier	needle_len		2021291	0					
ANR	2021437	ExpressionStatement	"php_strtolower ( haystack_dup , length )"	3733:4:89656:89692	2021291	2	True				
ANR	2021438	CallExpression	"php_strtolower ( haystack_dup , length )"		2021291	0					
ANR	2021439	Callee	php_strtolower		2021291	0					
ANR	2021440	Identifier	php_strtolower		2021291	0					
ANR	2021441	ArgumentList	haystack_dup		2021291	1					
ANR	2021442	Argument	haystack_dup		2021291	0					
ANR	2021443	Identifier	haystack_dup		2021291	0					
ANR	2021444	Argument	length		2021291	1					
ANR	2021445	Identifier	length		2021291	0					
ANR	2021446	ExpressionStatement	"php_strtolower ( needle_dup , needle_len )"	3734:4:89698:89736	2021291	3	True				
ANR	2021447	CallExpression	"php_strtolower ( needle_dup , needle_len )"		2021291	0					
ANR	2021448	Callee	php_strtolower		2021291	0					
ANR	2021449	Identifier	php_strtolower		2021291	0					
ANR	2021450	ArgumentList	needle_dup		2021291	1					
ANR	2021451	Argument	needle_dup		2021291	0					
ANR	2021452	Identifier	needle_dup		2021291	0					
ANR	2021453	Argument	needle_len		2021291	1					
ANR	2021454	Identifier	needle_len		2021291	0					
ANR	2021455	ExpressionStatement	end = haystack_dup + length	3735:4:89742:89769	2021291	4	True				
ANR	2021456	AssignmentExpression	end = haystack_dup + length		2021291	0		=			
ANR	2021457	Identifier	end		2021291	0					
ANR	2021458	AdditiveExpression	haystack_dup + length		2021291	1		+			
ANR	2021459	Identifier	haystack_dup		2021291	0					
ANR	2021460	Identifier	length		2021291	1					
ANR	2021461	ForStatement	"for ( p = haystack_dup ; ( r = php_memnstr ( p , needle_dup , needle_len , end ) ) ; p = r + needle_len )"		2021291	5					
ANR	2021462	ForInit	p = haystack_dup ;	3736:9:89780:89796	2021291	0	True				
ANR	2021463	AssignmentExpression	p = haystack_dup		2021291	0		=			
ANR	2021464	Identifier	p		2021291	0					
ANR	2021465	Identifier	haystack_dup		2021291	1					
ANR	2021466	Condition	"r = php_memnstr ( p , needle_dup , needle_len , end )"	3736:27:89798:89846	2021291	1	True				
ANR	2021467	AssignmentExpression	"r = php_memnstr ( p , needle_dup , needle_len , end )"		2021291	0		=			
ANR	2021468	Identifier	r		2021291	0					
ANR	2021469	CallExpression	"php_memnstr ( p , needle_dup , needle_len , end )"		2021291	1					
ANR	2021470	Callee	php_memnstr		2021291	0					
ANR	2021471	Identifier	php_memnstr		2021291	0					
ANR	2021472	ArgumentList	p		2021291	1					
ANR	2021473	Argument	p		2021291	0					
ANR	2021474	Identifier	p		2021291	0					
ANR	2021475	Argument	needle_dup		2021291	1					
ANR	2021476	Identifier	needle_dup		2021291	0					
ANR	2021477	Argument	needle_len		2021291	2					
ANR	2021478	Identifier	needle_len		2021291	0					
ANR	2021479	Argument	end		2021291	3					
ANR	2021480	Identifier	end		2021291	0					
ANR	2021481	AssignmentExpression	p = r + needle_len	3736:78:89849:89866	2021291	2	True	=			
ANR	2021482	Identifier	p		2021291	0					
ANR	2021483	AdditiveExpression	r + needle_len		2021291	1		+			
ANR	2021484	Identifier	r		2021291	0					
ANR	2021485	Identifier	needle_len		2021291	1					
ANR	2021486	CompoundStatement		26:98:788:788	2021291	3					
ANR	2021487	ExpressionStatement	"memcpy ( new_str + ( r - haystack_dup ) , str , str_len )"	3737:5:89876:89926	2021291	0	True				
ANR	2021488	CallExpression	"memcpy ( new_str + ( r - haystack_dup ) , str , str_len )"		2021291	0					
ANR	2021489	Callee	memcpy		2021291	0					
ANR	2021490	Identifier	memcpy		2021291	0					
ANR	2021491	ArgumentList	new_str + ( r - haystack_dup )		2021291	1					
ANR	2021492	Argument	new_str + ( r - haystack_dup )		2021291	0					
ANR	2021493	AdditiveExpression	new_str + ( r - haystack_dup )		2021291	0		+			
ANR	2021494	Identifier	new_str		2021291	0					
ANR	2021495	AdditiveExpression	r - haystack_dup		2021291	1		-			
ANR	2021496	Identifier	r		2021291	0					
ANR	2021497	Identifier	haystack_dup		2021291	1					
ANR	2021498	Argument	str		2021291	1					
ANR	2021499	Identifier	str		2021291	0					
ANR	2021500	Argument	str_len		2021291	2					
ANR	2021501	Identifier	str_len		2021291	0					
ANR	2021502	IfStatement	if ( replace_count )		2021291	1					
ANR	2021503	Condition	replace_count	3738:9:89937:89949	2021291	0	True				
ANR	2021504	Identifier	replace_count		2021291	0					
ANR	2021505	CompoundStatement		28:24:871:871	2021291	1					
ANR	2021506	ExpressionStatement	( * replace_count ) ++	3739:6:89960:89978	2021291	0	True				
ANR	2021507	PostIncDecOperationExpression	( * replace_count ) ++		2021291	0					
ANR	2021508	UnaryOperationExpression	* replace_count		2021291	0					
ANR	2021509	UnaryOperator	*		2021291	0					
ANR	2021510	Identifier	replace_count		2021291	1					
ANR	2021511	IncDec	++		2021291	1					
ANR	2021512	ExpressionStatement	efree ( haystack_dup )	3742:4:89997:90016	2021291	6	True				
ANR	2021513	CallExpression	efree ( haystack_dup )		2021291	0					
ANR	2021514	Callee	efree		2021291	0					
ANR	2021515	Identifier	efree		2021291	0					
ANR	2021516	ArgumentList	haystack_dup		2021291	1					
ANR	2021517	Argument	haystack_dup		2021291	0					
ANR	2021518	Identifier	haystack_dup		2021291	0					
ANR	2021519	ExpressionStatement	efree ( needle_dup )	3743:4:90022:90039	2021291	7	True				
ANR	2021520	CallExpression	efree ( needle_dup )		2021291	0					
ANR	2021521	Callee	efree		2021291	0					
ANR	2021522	Identifier	efree		2021291	0					
ANR	2021523	ArgumentList	needle_dup		2021291	1					
ANR	2021524	Argument	needle_dup		2021291	0					
ANR	2021525	Identifier	needle_dup		2021291	0					
ANR	2021526	ReturnStatement	return new_str ;	3745:3:90049:90063	2021291	3	True				
ANR	2021527	Identifier	new_str		2021291	0					
ANR	2021528	ElseStatement	else		2021291	0					
ANR	2021529	CompoundStatement		36:9:993:993	2021291	0					
ANR	2021530	IfStatement	if ( ! case_sensitivity )		2021291	0					
ANR	2021531	Condition	! case_sensitivity	3747:7:90083:90099	2021291	0	True				
ANR	2021532	UnaryOperationExpression	! case_sensitivity		2021291	0					
ANR	2021533	UnaryOperator	!		2021291	0					
ANR	2021534	Identifier	case_sensitivity		2021291	1					
ANR	2021535	CompoundStatement		37:26:1021:1021	2021291	1					
ANR	2021536	ExpressionStatement	"haystack_dup = estrndup ( haystack , length )"	3748:4:90108:90149	2021291	0	True				
ANR	2021537	AssignmentExpression	"haystack_dup = estrndup ( haystack , length )"		2021291	0		=			
ANR	2021538	Identifier	haystack_dup		2021291	0					
ANR	2021539	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2021540	Callee	estrndup		2021291	0					
ANR	2021541	Identifier	estrndup		2021291	0					
ANR	2021542	ArgumentList	haystack		2021291	1					
ANR	2021543	Argument	haystack		2021291	0					
ANR	2021544	Identifier	haystack		2021291	0					
ANR	2021545	Argument	length		2021291	1					
ANR	2021546	Identifier	length		2021291	0					
ANR	2021547	ExpressionStatement	"needle_dup = estrndup ( needle , needle_len )"	3749:4:90155:90196	2021291	1	True				
ANR	2021548	AssignmentExpression	"needle_dup = estrndup ( needle , needle_len )"		2021291	0		=			
ANR	2021549	Identifier	needle_dup		2021291	0					
ANR	2021550	CallExpression	"estrndup ( needle , needle_len )"		2021291	1					
ANR	2021551	Callee	estrndup		2021291	0					
ANR	2021552	Identifier	estrndup		2021291	0					
ANR	2021553	ArgumentList	needle		2021291	1					
ANR	2021554	Argument	needle		2021291	0					
ANR	2021555	Identifier	needle		2021291	0					
ANR	2021556	Argument	needle_len		2021291	1					
ANR	2021557	Identifier	needle_len		2021291	0					
ANR	2021558	ExpressionStatement	"php_strtolower ( haystack_dup , length )"	3750:4:90202:90238	2021291	2	True				
ANR	2021559	CallExpression	"php_strtolower ( haystack_dup , length )"		2021291	0					
ANR	2021560	Callee	php_strtolower		2021291	0					
ANR	2021561	Identifier	php_strtolower		2021291	0					
ANR	2021562	ArgumentList	haystack_dup		2021291	1					
ANR	2021563	Argument	haystack_dup		2021291	0					
ANR	2021564	Identifier	haystack_dup		2021291	0					
ANR	2021565	Argument	length		2021291	1					
ANR	2021566	Identifier	length		2021291	0					
ANR	2021567	ExpressionStatement	"php_strtolower ( needle_dup , needle_len )"	3751:4:90244:90282	2021291	3	True				
ANR	2021568	CallExpression	"php_strtolower ( needle_dup , needle_len )"		2021291	0					
ANR	2021569	Callee	php_strtolower		2021291	0					
ANR	2021570	Identifier	php_strtolower		2021291	0					
ANR	2021571	ArgumentList	needle_dup		2021291	1					
ANR	2021572	Argument	needle_dup		2021291	0					
ANR	2021573	Identifier	needle_dup		2021291	0					
ANR	2021574	Argument	needle_len		2021291	1					
ANR	2021575	Identifier	needle_len		2021291	0					
ANR	2021576	IfStatement	if ( str_len < needle_len )		2021291	1					
ANR	2021577	Condition	str_len < needle_len	3754:7:90297:90316	2021291	0	True				
ANR	2021578	RelationalExpression	str_len < needle_len		2021291	0		<			
ANR	2021579	Identifier	str_len		2021291	0					
ANR	2021580	Identifier	needle_len		2021291	1					
ANR	2021581	CompoundStatement		44:29:1238:1238	2021291	1					
ANR	2021582	ExpressionStatement	new_str = emalloc ( length + 1 )	3755:4:90325:90354	2021291	0	True				
ANR	2021583	AssignmentExpression	new_str = emalloc ( length + 1 )		2021291	0		=			
ANR	2021584	Identifier	new_str		2021291	0					
ANR	2021585	CallExpression	emalloc ( length + 1 )		2021291	1					
ANR	2021586	Callee	emalloc		2021291	0					
ANR	2021587	Identifier	emalloc		2021291	0					
ANR	2021588	ArgumentList	length + 1		2021291	1					
ANR	2021589	Argument	length + 1		2021291	0					
ANR	2021590	AdditiveExpression	length + 1		2021291	0		+			
ANR	2021591	Identifier	length		2021291	0					
ANR	2021592	PrimaryExpression	1		2021291	1					
ANR	2021593	ElseStatement	else		2021291	0					
ANR	2021594	CompoundStatement		48:4:1310:1328	2021291	0					
ANR	2021595	IdentifierDeclStatement	int count = 0 ;	3757:4:90372:90385	2021291	0	True				
ANR	2021596	IdentifierDecl	count = 0		2021291	0					
ANR	2021597	IdentifierDeclType	int		2021291	0					
ANR	2021598	Identifier	count		2021291	1					
ANR	2021599	AssignmentExpression	count = 0		2021291	2		=			
ANR	2021600	Identifier	count		2021291	0					
ANR	2021601	PrimaryExpression	0		2021291	1					
ANR	2021602	IdentifierDeclStatement	"char * o , * n , * endp ;"	3758:4:90391:90409	2021291	1	True				
ANR	2021603	IdentifierDecl	* o		2021291	0					
ANR	2021604	IdentifierDeclType	char *		2021291	0					
ANR	2021605	Identifier	o		2021291	1					
ANR	2021606	IdentifierDecl	* n		2021291	1					
ANR	2021607	IdentifierDeclType	char *		2021291	0					
ANR	2021608	Identifier	n		2021291	1					
ANR	2021609	IdentifierDecl	* endp		2021291	2					
ANR	2021610	IdentifierDeclType	char *		2021291	0					
ANR	2021611	Identifier	endp		2021291	1					
ANR	2021612	IfStatement	if ( case_sensitivity )		2021291	2					
ANR	2021613	Condition	case_sensitivity	3760:8:90420:90435	2021291	0	True				
ANR	2021614	Identifier	case_sensitivity		2021291	0					
ANR	2021615	CompoundStatement		50:26:1357:1357	2021291	1					
ANR	2021616	ExpressionStatement	o = haystack	3761:5:90445:90457	2021291	0	True				
ANR	2021617	AssignmentExpression	o = haystack		2021291	0		=			
ANR	2021618	Identifier	o		2021291	0					
ANR	2021619	Identifier	haystack		2021291	1					
ANR	2021620	ExpressionStatement	n = needle	3762:5:90464:90474	2021291	1	True				
ANR	2021621	AssignmentExpression	n = needle		2021291	0		=			
ANR	2021622	Identifier	n		2021291	0					
ANR	2021623	Identifier	needle		2021291	1					
ANR	2021624	ElseStatement	else		2021291	0					
ANR	2021625	CompoundStatement		53:11:1406:1406	2021291	0					
ANR	2021626	ExpressionStatement	o = haystack_dup	3764:5:90494:90510	2021291	0	True				
ANR	2021627	AssignmentExpression	o = haystack_dup		2021291	0		=			
ANR	2021628	Identifier	o		2021291	0					
ANR	2021629	Identifier	haystack_dup		2021291	1					
ANR	2021630	ExpressionStatement	n = needle_dup	3765:5:90517:90531	2021291	1	True				
ANR	2021631	AssignmentExpression	n = needle_dup		2021291	0		=			
ANR	2021632	Identifier	n		2021291	0					
ANR	2021633	Identifier	needle_dup		2021291	1					
ANR	2021634	ExpressionStatement	endp = o + length	3767:4:90543:90560	2021291	3	True				
ANR	2021635	AssignmentExpression	endp = o + length		2021291	0		=			
ANR	2021636	Identifier	endp		2021291	0					
ANR	2021637	AdditiveExpression	o + length		2021291	1		+			
ANR	2021638	Identifier	o		2021291	0					
ANR	2021639	Identifier	length		2021291	1					
ANR	2021640	WhileStatement	"while ( ( o = php_memnstr ( o , n , needle_len , endp ) ) )"		2021291	4					
ANR	2021641	Condition	"o = php_memnstr ( o , n , needle_len , endp )"	3769:11:90574:90614	2021291	0	True				
ANR	2021642	AssignmentExpression	"o = php_memnstr ( o , n , needle_len , endp )"		2021291	0		=			
ANR	2021643	Identifier	o		2021291	0					
ANR	2021644	CallExpression	"php_memnstr ( o , n , needle_len , endp )"		2021291	1					
ANR	2021645	Callee	php_memnstr		2021291	0					
ANR	2021646	Identifier	php_memnstr		2021291	0					
ANR	2021647	ArgumentList	o		2021291	1					
ANR	2021648	Argument	o		2021291	0					
ANR	2021649	Identifier	o		2021291	0					
ANR	2021650	Argument	n		2021291	1					
ANR	2021651	Identifier	n		2021291	0					
ANR	2021652	Argument	needle_len		2021291	2					
ANR	2021653	Identifier	needle_len		2021291	0					
ANR	2021654	Argument	endp		2021291	3					
ANR	2021655	Identifier	endp		2021291	0					
ANR	2021656	CompoundStatement		59:54:1536:1536	2021291	1					
ANR	2021657	ExpressionStatement	o += needle_len	3770:5:90624:90639	2021291	0	True				
ANR	2021658	AssignmentExpression	o += needle_len		2021291	0		+=			
ANR	2021659	Identifier	o		2021291	0					
ANR	2021660	Identifier	needle_len		2021291	1					
ANR	2021661	ExpressionStatement	count ++	3771:5:90646:90653	2021291	1	True				
ANR	2021662	PostIncDecOperationExpression	count ++		2021291	0					
ANR	2021663	Identifier	count		2021291	0					
ANR	2021664	IncDec	++		2021291	1					
ANR	2021665	IfStatement	if ( count == 0 )		2021291	5					
ANR	2021666	Condition	count == 0	3773:8:90669:90678	2021291	0	True				
ANR	2021667	EqualityExpression	count == 0		2021291	0		==			
ANR	2021668	Identifier	count		2021291	0					
ANR	2021669	PrimaryExpression	0		2021291	1					
ANR	2021670	CompoundStatement		63:20:1600:1600	2021291	1					
ANR	2021671	IfStatement	if ( haystack_dup )		2021291	0					
ANR	2021672	Condition	haystack_dup	3775:9:90762:90773	2021291	0	True				
ANR	2021673	Identifier	haystack_dup		2021291	0					
ANR	2021674	CompoundStatement		65:23:1695:1695	2021291	1					
ANR	2021675	ExpressionStatement	efree ( haystack_dup )	3776:6:90784:90803	2021291	0	True				
ANR	2021676	CallExpression	efree ( haystack_dup )		2021291	0					
ANR	2021677	Callee	efree		2021291	0					
ANR	2021678	Identifier	efree		2021291	0					
ANR	2021679	ArgumentList	haystack_dup		2021291	1					
ANR	2021680	Argument	haystack_dup		2021291	0					
ANR	2021681	Identifier	haystack_dup		2021291	0					
ANR	2021682	IfStatement	if ( needle_dup )		2021291	1					
ANR	2021683	Condition	needle_dup	3778:9:90821:90830	2021291	0	True				
ANR	2021684	Identifier	needle_dup		2021291	0					
ANR	2021685	CompoundStatement		68:21:1752:1752	2021291	1					
ANR	2021686	ExpressionStatement	efree ( needle_dup )	3779:6:90841:90858	2021291	0	True				
ANR	2021687	CallExpression	efree ( needle_dup )		2021291	0					
ANR	2021688	Callee	efree		2021291	0					
ANR	2021689	Identifier	efree		2021291	0					
ANR	2021690	ArgumentList	needle_dup		2021291	1					
ANR	2021691	Argument	needle_dup		2021291	0					
ANR	2021692	Identifier	needle_dup		2021291	0					
ANR	2021693	ExpressionStatement	"new_str = estrndup ( haystack , length )"	3781:5:90872:90908	2021291	2	True				
ANR	2021694	AssignmentExpression	"new_str = estrndup ( haystack , length )"		2021291	0		=			
ANR	2021695	Identifier	new_str		2021291	0					
ANR	2021696	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2021697	Callee	estrndup		2021291	0					
ANR	2021698	Identifier	estrndup		2021291	0					
ANR	2021699	ArgumentList	haystack		2021291	1					
ANR	2021700	Argument	haystack		2021291	0					
ANR	2021701	Identifier	haystack		2021291	0					
ANR	2021702	Argument	length		2021291	1					
ANR	2021703	Identifier	length		2021291	0					
ANR	2021704	IfStatement	if ( _new_length )		2021291	3					
ANR	2021705	Condition	_new_length	3782:9:90919:90929	2021291	0	True				
ANR	2021706	Identifier	_new_length		2021291	0					
ANR	2021707	CompoundStatement		72:22:1851:1851	2021291	1					
ANR	2021708	ExpressionStatement	* _new_length = length	3783:6:90940:90961	2021291	0	True				
ANR	2021709	AssignmentExpression	* _new_length = length		2021291	0		=			
ANR	2021710	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2021711	UnaryOperator	*		2021291	0					
ANR	2021712	Identifier	_new_length		2021291	1					
ANR	2021713	Identifier	length		2021291	1					
ANR	2021714	ReturnStatement	return new_str ;	3785:5:90975:90989	2021291	4	True				
ANR	2021715	Identifier	new_str		2021291	0					
ANR	2021716	ElseStatement	else		2021291	0					
ANR	2021717	CompoundStatement		76:11:1921:1921	2021291	0					
ANR	2021718	ExpressionStatement	"new_str = safe_emalloc_string ( count , str_len - needle_len , length + 1 )"	3787:5:91009:91079	2021291	0	True				
ANR	2021719	AssignmentExpression	"new_str = safe_emalloc_string ( count , str_len - needle_len , length + 1 )"		2021291	0		=			
ANR	2021720	Identifier	new_str		2021291	0					
ANR	2021721	CallExpression	"safe_emalloc_string ( count , str_len - needle_len , length + 1 )"		2021291	1					
ANR	2021722	Callee	safe_emalloc_string		2021291	0					
ANR	2021723	Identifier	safe_emalloc_string		2021291	0					
ANR	2021724	ArgumentList	count		2021291	1					
ANR	2021725	Argument	count		2021291	0					
ANR	2021726	Identifier	count		2021291	0					
ANR	2021727	Argument	str_len - needle_len		2021291	1					
ANR	2021728	AdditiveExpression	str_len - needle_len		2021291	0		-			
ANR	2021729	Identifier	str_len		2021291	0					
ANR	2021730	Identifier	needle_len		2021291	1					
ANR	2021731	Argument	length + 1		2021291	2					
ANR	2021732	AdditiveExpression	length + 1		2021291	0		+			
ANR	2021733	Identifier	length		2021291	0					
ANR	2021734	PrimaryExpression	1		2021291	1					
ANR	2021735	ExpressionStatement	e = s = new_str	3791:3:91096:91111	2021291	2	True				
ANR	2021736	AssignmentExpression	e = s = new_str		2021291	0		=			
ANR	2021737	Identifier	e		2021291	0					
ANR	2021738	AssignmentExpression	s = new_str		2021291	1		=			
ANR	2021739	Identifier	s		2021291	0					
ANR	2021740	Identifier	new_str		2021291	1					
ANR	2021741	IfStatement	if ( case_sensitivity )		2021291	3					
ANR	2021742	Condition	case_sensitivity	3793:7:91121:91136	2021291	0	True				
ANR	2021743	Identifier	case_sensitivity		2021291	0					
ANR	2021744	CompoundStatement		83:25:2058:2058	2021291	1					
ANR	2021745	ExpressionStatement	end = haystack + length	3794:4:91145:91168	2021291	0	True				
ANR	2021746	AssignmentExpression	end = haystack + length		2021291	0		=			
ANR	2021747	Identifier	end		2021291	0					
ANR	2021748	AdditiveExpression	haystack + length		2021291	1		+			
ANR	2021749	Identifier	haystack		2021291	0					
ANR	2021750	Identifier	length		2021291	1					
ANR	2021751	ForStatement	"for ( p = haystack ; ( r = php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2021291	1					
ANR	2021752	ForInit	p = haystack ;	3795:9:91179:91191	2021291	0	True				
ANR	2021753	AssignmentExpression	p = haystack		2021291	0		=			
ANR	2021754	Identifier	p		2021291	0					
ANR	2021755	Identifier	haystack		2021291	1					
ANR	2021756	Condition	"r = php_memnstr ( p , needle , needle_len , end )"	3795:23:91193:91237	2021291	1	True				
ANR	2021757	AssignmentExpression	"r = php_memnstr ( p , needle , needle_len , end )"		2021291	0		=			
ANR	2021758	Identifier	r		2021291	0					
ANR	2021759	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2021291	1					
ANR	2021760	Callee	php_memnstr		2021291	0					
ANR	2021761	Identifier	php_memnstr		2021291	0					
ANR	2021762	ArgumentList	p		2021291	1					
ANR	2021763	Argument	p		2021291	0					
ANR	2021764	Identifier	p		2021291	0					
ANR	2021765	Argument	needle		2021291	1					
ANR	2021766	Identifier	needle		2021291	0					
ANR	2021767	Argument	needle_len		2021291	2					
ANR	2021768	Identifier	needle_len		2021291	0					
ANR	2021769	Argument	end		2021291	3					
ANR	2021770	Identifier	end		2021291	0					
ANR	2021771	AssignmentExpression	p = r + needle_len	3795:70:91240:91257	2021291	2	True	=			
ANR	2021772	Identifier	p		2021291	0					
ANR	2021773	AdditiveExpression	r + needle_len		2021291	1		+			
ANR	2021774	Identifier	r		2021291	0					
ANR	2021775	Identifier	needle_len		2021291	1					
ANR	2021776	CompoundStatement		85:90:2179:2179	2021291	3					
ANR	2021777	ExpressionStatement	"memcpy ( e , p , r - p )"	3796:5:91267:91286	2021291	0	True				
ANR	2021778	CallExpression	"memcpy ( e , p , r - p )"		2021291	0					
ANR	2021779	Callee	memcpy		2021291	0					
ANR	2021780	Identifier	memcpy		2021291	0					
ANR	2021781	ArgumentList	e		2021291	1					
ANR	2021782	Argument	e		2021291	0					
ANR	2021783	Identifier	e		2021291	0					
ANR	2021784	Argument	p		2021291	1					
ANR	2021785	Identifier	p		2021291	0					
ANR	2021786	Argument	r - p		2021291	2					
ANR	2021787	AdditiveExpression	r - p		2021291	0		-			
ANR	2021788	Identifier	r		2021291	0					
ANR	2021789	Identifier	p		2021291	1					
ANR	2021790	ExpressionStatement	e += r - p	3797:5:91293:91303	2021291	1	True				
ANR	2021791	AssignmentExpression	e += r - p		2021291	0		+=			
ANR	2021792	Identifier	e		2021291	0					
ANR	2021793	AdditiveExpression	r - p		2021291	1		-			
ANR	2021794	Identifier	r		2021291	0					
ANR	2021795	Identifier	p		2021291	1					
ANR	2021796	ExpressionStatement	"memcpy ( e , str , str_len )"	3798:5:91310:91333	2021291	2	True				
ANR	2021797	CallExpression	"memcpy ( e , str , str_len )"		2021291	0					
ANR	2021798	Callee	memcpy		2021291	0					
ANR	2021799	Identifier	memcpy		2021291	0					
ANR	2021800	ArgumentList	e		2021291	1					
ANR	2021801	Argument	e		2021291	0					
ANR	2021802	Identifier	e		2021291	0					
ANR	2021803	Argument	str		2021291	1					
ANR	2021804	Identifier	str		2021291	0					
ANR	2021805	Argument	str_len		2021291	2					
ANR	2021806	Identifier	str_len		2021291	0					
ANR	2021807	ExpressionStatement	e += str_len	3799:5:91340:91352	2021291	3	True				
ANR	2021808	AssignmentExpression	e += str_len		2021291	0		+=			
ANR	2021809	Identifier	e		2021291	0					
ANR	2021810	Identifier	str_len		2021291	1					
ANR	2021811	IfStatement	if ( replace_count )		2021291	4					
ANR	2021812	Condition	replace_count	3800:9:91363:91375	2021291	0	True				
ANR	2021813	Identifier	replace_count		2021291	0					
ANR	2021814	CompoundStatement		90:24:2297:2297	2021291	1					
ANR	2021815	ExpressionStatement	( * replace_count ) ++	3801:6:91386:91404	2021291	0	True				
ANR	2021816	PostIncDecOperationExpression	( * replace_count ) ++		2021291	0					
ANR	2021817	UnaryOperationExpression	* replace_count		2021291	0					
ANR	2021818	UnaryOperator	*		2021291	0					
ANR	2021819	Identifier	replace_count		2021291	1					
ANR	2021820	IncDec	++		2021291	1					
ANR	2021821	IfStatement	if ( p < end )		2021291	2					
ANR	2021822	Condition	p < end	3805:8:91428:91434	2021291	0	True				
ANR	2021823	RelationalExpression	p < end		2021291	0		<			
ANR	2021824	Identifier	p		2021291	0					
ANR	2021825	Identifier	end		2021291	1					
ANR	2021826	CompoundStatement		95:17:2356:2356	2021291	1					
ANR	2021827	ExpressionStatement	"memcpy ( e , p , end - p )"	3806:5:91444:91465	2021291	0	True				
ANR	2021828	CallExpression	"memcpy ( e , p , end - p )"		2021291	0					
ANR	2021829	Callee	memcpy		2021291	0					
ANR	2021830	Identifier	memcpy		2021291	0					
ANR	2021831	ArgumentList	e		2021291	1					
ANR	2021832	Argument	e		2021291	0					
ANR	2021833	Identifier	e		2021291	0					
ANR	2021834	Argument	p		2021291	1					
ANR	2021835	Identifier	p		2021291	0					
ANR	2021836	Argument	end - p		2021291	2					
ANR	2021837	AdditiveExpression	end - p		2021291	0		-			
ANR	2021838	Identifier	end		2021291	0					
ANR	2021839	Identifier	p		2021291	1					
ANR	2021840	ExpressionStatement	e += end - p	3807:5:91472:91484	2021291	1	True				
ANR	2021841	AssignmentExpression	e += end - p		2021291	0		+=			
ANR	2021842	Identifier	e		2021291	0					
ANR	2021843	AdditiveExpression	end - p		2021291	1		-			
ANR	2021844	Identifier	end		2021291	0					
ANR	2021845	Identifier	p		2021291	1					
ANR	2021846	ElseStatement	else		2021291	0					
ANR	2021847	CompoundStatement		99:10:2421:2421	2021291	0					
ANR	2021848	ExpressionStatement	end = haystack_dup + length	3810:4:91508:91535	2021291	0	True				
ANR	2021849	AssignmentExpression	end = haystack_dup + length		2021291	0		=			
ANR	2021850	Identifier	end		2021291	0					
ANR	2021851	AdditiveExpression	haystack_dup + length		2021291	1		+			
ANR	2021852	Identifier	haystack_dup		2021291	0					
ANR	2021853	Identifier	length		2021291	1					
ANR	2021854	ForStatement	"for ( p = haystack_dup ; ( r = php_memnstr ( p , needle_dup , needle_len , end ) ) ; p = r + needle_len )"		2021291	1					
ANR	2021855	ForInit	p = haystack_dup ;	3812:9:91547:91563	2021291	0	True				
ANR	2021856	AssignmentExpression	p = haystack_dup		2021291	0		=			
ANR	2021857	Identifier	p		2021291	0					
ANR	2021858	Identifier	haystack_dup		2021291	1					
ANR	2021859	Condition	"r = php_memnstr ( p , needle_dup , needle_len , end )"	3812:27:91565:91613	2021291	1	True				
ANR	2021860	AssignmentExpression	"r = php_memnstr ( p , needle_dup , needle_len , end )"		2021291	0		=			
ANR	2021861	Identifier	r		2021291	0					
ANR	2021862	CallExpression	"php_memnstr ( p , needle_dup , needle_len , end )"		2021291	1					
ANR	2021863	Callee	php_memnstr		2021291	0					
ANR	2021864	Identifier	php_memnstr		2021291	0					
ANR	2021865	ArgumentList	p		2021291	1					
ANR	2021866	Argument	p		2021291	0					
ANR	2021867	Identifier	p		2021291	0					
ANR	2021868	Argument	needle_dup		2021291	1					
ANR	2021869	Identifier	needle_dup		2021291	0					
ANR	2021870	Argument	needle_len		2021291	2					
ANR	2021871	Identifier	needle_len		2021291	0					
ANR	2021872	Argument	end		2021291	3					
ANR	2021873	Identifier	end		2021291	0					
ANR	2021874	AssignmentExpression	p = r + needle_len	3812:78:91616:91633	2021291	2	True	=			
ANR	2021875	Identifier	p		2021291	0					
ANR	2021876	AdditiveExpression	r + needle_len		2021291	1		+			
ANR	2021877	Identifier	r		2021291	0					
ANR	2021878	Identifier	needle_len		2021291	1					
ANR	2021879	CompoundStatement		102:98:2555:2555	2021291	3					
ANR	2021880	ExpressionStatement	"memcpy ( e , haystack + ( p - haystack_dup ) , r - p )"	3813:5:91643:91690	2021291	0	True				
ANR	2021881	CallExpression	"memcpy ( e , haystack + ( p - haystack_dup ) , r - p )"		2021291	0					
ANR	2021882	Callee	memcpy		2021291	0					
ANR	2021883	Identifier	memcpy		2021291	0					
ANR	2021884	ArgumentList	e		2021291	1					
ANR	2021885	Argument	e		2021291	0					
ANR	2021886	Identifier	e		2021291	0					
ANR	2021887	Argument	haystack + ( p - haystack_dup )		2021291	1					
ANR	2021888	AdditiveExpression	haystack + ( p - haystack_dup )		2021291	0		+			
ANR	2021889	Identifier	haystack		2021291	0					
ANR	2021890	AdditiveExpression	p - haystack_dup		2021291	1		-			
ANR	2021891	Identifier	p		2021291	0					
ANR	2021892	Identifier	haystack_dup		2021291	1					
ANR	2021893	Argument	r - p		2021291	2					
ANR	2021894	AdditiveExpression	r - p		2021291	0		-			
ANR	2021895	Identifier	r		2021291	0					
ANR	2021896	Identifier	p		2021291	1					
ANR	2021897	ExpressionStatement	e += r - p	3814:5:91697:91707	2021291	1	True				
ANR	2021898	AssignmentExpression	e += r - p		2021291	0		+=			
ANR	2021899	Identifier	e		2021291	0					
ANR	2021900	AdditiveExpression	r - p		2021291	1		-			
ANR	2021901	Identifier	r		2021291	0					
ANR	2021902	Identifier	p		2021291	1					
ANR	2021903	ExpressionStatement	"memcpy ( e , str , str_len )"	3815:5:91714:91737	2021291	2	True				
ANR	2021904	CallExpression	"memcpy ( e , str , str_len )"		2021291	0					
ANR	2021905	Callee	memcpy		2021291	0					
ANR	2021906	Identifier	memcpy		2021291	0					
ANR	2021907	ArgumentList	e		2021291	1					
ANR	2021908	Argument	e		2021291	0					
ANR	2021909	Identifier	e		2021291	0					
ANR	2021910	Argument	str		2021291	1					
ANR	2021911	Identifier	str		2021291	0					
ANR	2021912	Argument	str_len		2021291	2					
ANR	2021913	Identifier	str_len		2021291	0					
ANR	2021914	ExpressionStatement	e += str_len	3816:5:91744:91756	2021291	3	True				
ANR	2021915	AssignmentExpression	e += str_len		2021291	0		+=			
ANR	2021916	Identifier	e		2021291	0					
ANR	2021917	Identifier	str_len		2021291	1					
ANR	2021918	IfStatement	if ( replace_count )		2021291	4					
ANR	2021919	Condition	replace_count	3817:9:91767:91779	2021291	0	True				
ANR	2021920	Identifier	replace_count		2021291	0					
ANR	2021921	CompoundStatement		107:24:2701:2701	2021291	1					
ANR	2021922	ExpressionStatement	( * replace_count ) ++	3818:6:91790:91808	2021291	0	True				
ANR	2021923	PostIncDecOperationExpression	( * replace_count ) ++		2021291	0					
ANR	2021924	UnaryOperationExpression	* replace_count		2021291	0					
ANR	2021925	UnaryOperator	*		2021291	0					
ANR	2021926	Identifier	replace_count		2021291	1					
ANR	2021927	IncDec	++		2021291	1					
ANR	2021928	IfStatement	if ( p < end )		2021291	2					
ANR	2021929	Condition	p < end	3822:8:91832:91838	2021291	0	True				
ANR	2021930	RelationalExpression	p < end		2021291	0		<			
ANR	2021931	Identifier	p		2021291	0					
ANR	2021932	Identifier	end		2021291	1					
ANR	2021933	CompoundStatement		112:17:2760:2760	2021291	1					
ANR	2021934	ExpressionStatement	"memcpy ( e , haystack + ( p - haystack_dup ) , end - p )"	3823:5:91848:91897	2021291	0	True				
ANR	2021935	CallExpression	"memcpy ( e , haystack + ( p - haystack_dup ) , end - p )"		2021291	0					
ANR	2021936	Callee	memcpy		2021291	0					
ANR	2021937	Identifier	memcpy		2021291	0					
ANR	2021938	ArgumentList	e		2021291	1					
ANR	2021939	Argument	e		2021291	0					
ANR	2021940	Identifier	e		2021291	0					
ANR	2021941	Argument	haystack + ( p - haystack_dup )		2021291	1					
ANR	2021942	AdditiveExpression	haystack + ( p - haystack_dup )		2021291	0		+			
ANR	2021943	Identifier	haystack		2021291	0					
ANR	2021944	AdditiveExpression	p - haystack_dup		2021291	1		-			
ANR	2021945	Identifier	p		2021291	0					
ANR	2021946	Identifier	haystack_dup		2021291	1					
ANR	2021947	Argument	end - p		2021291	2					
ANR	2021948	AdditiveExpression	end - p		2021291	0		-			
ANR	2021949	Identifier	end		2021291	0					
ANR	2021950	Identifier	p		2021291	1					
ANR	2021951	ExpressionStatement	e += end - p	3824:5:91904:91916	2021291	1	True				
ANR	2021952	AssignmentExpression	e += end - p		2021291	0		+=			
ANR	2021953	Identifier	e		2021291	0					
ANR	2021954	AdditiveExpression	end - p		2021291	1		-			
ANR	2021955	Identifier	end		2021291	0					
ANR	2021956	Identifier	p		2021291	1					
ANR	2021957	IfStatement	if ( haystack_dup )		2021291	4					
ANR	2021958	Condition	haystack_dup	3828:7:91937:91948	2021291	0	True				
ANR	2021959	Identifier	haystack_dup		2021291	0					
ANR	2021960	CompoundStatement		118:21:2870:2870	2021291	1					
ANR	2021961	ExpressionStatement	efree ( haystack_dup )	3829:4:91957:91976	2021291	0	True				
ANR	2021962	CallExpression	efree ( haystack_dup )		2021291	0					
ANR	2021963	Callee	efree		2021291	0					
ANR	2021964	Identifier	efree		2021291	0					
ANR	2021965	ArgumentList	haystack_dup		2021291	1					
ANR	2021966	Argument	haystack_dup		2021291	0					
ANR	2021967	Identifier	haystack_dup		2021291	0					
ANR	2021968	IfStatement	if ( needle_dup )		2021291	5					
ANR	2021969	Condition	needle_dup	3831:7:91990:91999	2021291	0	True				
ANR	2021970	Identifier	needle_dup		2021291	0					
ANR	2021971	CompoundStatement		121:19:2921:2921	2021291	1					
ANR	2021972	ExpressionStatement	efree ( needle_dup )	3832:4:92008:92025	2021291	0	True				
ANR	2021973	CallExpression	efree ( needle_dup )		2021291	0					
ANR	2021974	Callee	efree		2021291	0					
ANR	2021975	Identifier	efree		2021291	0					
ANR	2021976	ArgumentList	needle_dup		2021291	1					
ANR	2021977	Argument	needle_dup		2021291	0					
ANR	2021978	Identifier	needle_dup		2021291	0					
ANR	2021979	ExpressionStatement	* e = '\\0'	3835:3:92036:92045	2021291	6	True				
ANR	2021980	AssignmentExpression	* e = '\\0'		2021291	0		=			
ANR	2021981	UnaryOperationExpression	* e		2021291	0					
ANR	2021982	UnaryOperator	*		2021291	0					
ANR	2021983	Identifier	e		2021291	1					
ANR	2021984	PrimaryExpression	'\\0'		2021291	1					
ANR	2021985	ExpressionStatement	* _new_length = e - s	3836:3:92050:92070	2021291	7	True				
ANR	2021986	AssignmentExpression	* _new_length = e - s		2021291	0		=			
ANR	2021987	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2021988	UnaryOperator	*		2021291	0					
ANR	2021989	Identifier	_new_length		2021291	1					
ANR	2021990	AdditiveExpression	e - s		2021291	1		-			
ANR	2021991	Identifier	e		2021291	0					
ANR	2021992	Identifier	s		2021291	1					
ANR	2021993	ExpressionStatement	"new_str = erealloc ( new_str , * _new_length + 1 )"	3838:3:92076:92121	2021291	8	True				
ANR	2021994	AssignmentExpression	"new_str = erealloc ( new_str , * _new_length + 1 )"		2021291	0		=			
ANR	2021995	Identifier	new_str		2021291	0					
ANR	2021996	CallExpression	"erealloc ( new_str , * _new_length + 1 )"		2021291	1					
ANR	2021997	Callee	erealloc		2021291	0					
ANR	2021998	Identifier	erealloc		2021291	0					
ANR	2021999	ArgumentList	new_str		2021291	1					
ANR	2022000	Argument	new_str		2021291	0					
ANR	2022001	Identifier	new_str		2021291	0					
ANR	2022002	Argument	* _new_length + 1		2021291	1					
ANR	2022003	AdditiveExpression	* _new_length + 1		2021291	0		+			
ANR	2022004	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2022005	UnaryOperator	*		2021291	0					
ANR	2022006	Identifier	_new_length		2021291	1					
ANR	2022007	PrimaryExpression	1		2021291	1					
ANR	2022008	ReturnStatement	return new_str ;	3839:3:92126:92140	2021291	9	True				
ANR	2022009	Identifier	new_str		2021291	0					
ANR	2022010	ElseStatement	else		2021291	0					
ANR	2022011	IfStatement	if ( needle_len > length )		2021291	0					
ANR	2022012	Condition	needle_len > length	3841:12:92158:92176	2021291	0	True				
ANR	2022013	RelationalExpression	needle_len > length		2021291	0		>			
ANR	2022014	Identifier	needle_len		2021291	0					
ANR	2022015	Identifier	length		2021291	1					
ANR	2022016	CompoundStatement		131:33:3098:3098	2021291	1					
ANR	2022017	Label	nothing_todo :	3842:0:92181:92193	2021291	0	True				
ANR	2022018	Identifier	nothing_todo		2021291	0					
ANR	2022019	ExpressionStatement	* _new_length = length	3843:2:92197:92218	2021291	1	True				
ANR	2022020	AssignmentExpression	* _new_length = length		2021291	0		=			
ANR	2022021	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2022022	UnaryOperator	*		2021291	0					
ANR	2022023	Identifier	_new_length		2021291	1					
ANR	2022024	Identifier	length		2021291	1					
ANR	2022025	ExpressionStatement	"new_str = estrndup ( haystack , length )"	3844:2:92222:92258	2021291	2	True				
ANR	2022026	AssignmentExpression	"new_str = estrndup ( haystack , length )"		2021291	0		=			
ANR	2022027	Identifier	new_str		2021291	0					
ANR	2022028	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2022029	Callee	estrndup		2021291	0					
ANR	2022030	Identifier	estrndup		2021291	0					
ANR	2022031	ArgumentList	haystack		2021291	1					
ANR	2022032	Argument	haystack		2021291	0					
ANR	2022033	Identifier	haystack		2021291	0					
ANR	2022034	Argument	length		2021291	1					
ANR	2022035	Identifier	length		2021291	0					
ANR	2022036	ReturnStatement	return new_str ;	3845:2:92262:92276	2021291	3	True				
ANR	2022037	Identifier	new_str		2021291	0					
ANR	2022038	ElseStatement	else		2021291	0					
ANR	2022039	CompoundStatement		136:8:3205:3205	2021291	0					
ANR	2022040	IfStatement	"if ( case_sensitivity && memcmp ( haystack , needle , length ) )"		2021291	0					
ANR	2022041	Condition	"case_sensitivity && memcmp ( haystack , needle , length )"	3847:6:92294:92345	2021291	0	True				
ANR	2022042	AndExpression	"case_sensitivity && memcmp ( haystack , needle , length )"		2021291	0		&&			
ANR	2022043	Identifier	case_sensitivity		2021291	0					
ANR	2022044	CallExpression	"memcmp ( haystack , needle , length )"		2021291	1					
ANR	2022045	Callee	memcmp		2021291	0					
ANR	2022046	Identifier	memcmp		2021291	0					
ANR	2022047	ArgumentList	haystack		2021291	1					
ANR	2022048	Argument	haystack		2021291	0					
ANR	2022049	Identifier	haystack		2021291	0					
ANR	2022050	Argument	needle		2021291	1					
ANR	2022051	Identifier	needle		2021291	0					
ANR	2022052	Argument	length		2021291	2					
ANR	2022053	Identifier	length		2021291	0					
ANR	2022054	CompoundStatement		137:60:3267:3267	2021291	1					
ANR	2022055	GotoStatement	goto nothing_todo ;	3848:3:92353:92370	2021291	0	True				
ANR	2022056	Identifier	nothing_todo		2021291	0					
ANR	2022057	ElseStatement	else		2021291	0					
ANR	2022058	IfStatement	if ( ! case_sensitivity )		2021291	0					
ANR	2022059	Condition	! case_sensitivity	3849:13:92385:92401	2021291	0	True				
ANR	2022060	UnaryOperationExpression	! case_sensitivity		2021291	0					
ANR	2022061	UnaryOperator	!		2021291	0					
ANR	2022062	Identifier	case_sensitivity		2021291	1					
ANR	2022063	CompoundStatement		140:3:3328:3355	2021291	1					
ANR	2022064	IdentifierDeclStatement	"char * l_haystack , * l_needle ;"	3850:3:92409:92436	2021291	0	True				
ANR	2022065	IdentifierDecl	* l_haystack		2021291	0					
ANR	2022066	IdentifierDeclType	char *		2021291	0					
ANR	2022067	Identifier	l_haystack		2021291	1					
ANR	2022068	IdentifierDecl	* l_needle		2021291	1					
ANR	2022069	IdentifierDeclType	char *		2021291	0					
ANR	2022070	Identifier	l_needle		2021291	1					
ANR	2022071	ExpressionStatement	"l_haystack = estrndup ( haystack , length )"	3852:3:92442:92481	2021291	1	True				
ANR	2022072	AssignmentExpression	"l_haystack = estrndup ( haystack , length )"		2021291	0		=			
ANR	2022073	Identifier	l_haystack		2021291	0					
ANR	2022074	CallExpression	"estrndup ( haystack , length )"		2021291	1					
ANR	2022075	Callee	estrndup		2021291	0					
ANR	2022076	Identifier	estrndup		2021291	0					
ANR	2022077	ArgumentList	haystack		2021291	1					
ANR	2022078	Argument	haystack		2021291	0					
ANR	2022079	Identifier	haystack		2021291	0					
ANR	2022080	Argument	length		2021291	1					
ANR	2022081	Identifier	length		2021291	0					
ANR	2022082	ExpressionStatement	"l_needle = estrndup ( needle , length )"	3853:3:92486:92521	2021291	2	True				
ANR	2022083	AssignmentExpression	"l_needle = estrndup ( needle , length )"		2021291	0		=			
ANR	2022084	Identifier	l_needle		2021291	0					
ANR	2022085	CallExpression	"estrndup ( needle , length )"		2021291	1					
ANR	2022086	Callee	estrndup		2021291	0					
ANR	2022087	Identifier	estrndup		2021291	0					
ANR	2022088	ArgumentList	needle		2021291	1					
ANR	2022089	Argument	needle		2021291	0					
ANR	2022090	Identifier	needle		2021291	0					
ANR	2022091	Argument	length		2021291	1					
ANR	2022092	Identifier	length		2021291	0					
ANR	2022093	ExpressionStatement	"php_strtolower ( l_haystack , length )"	3855:3:92527:92561	2021291	3	True				
ANR	2022094	CallExpression	"php_strtolower ( l_haystack , length )"		2021291	0					
ANR	2022095	Callee	php_strtolower		2021291	0					
ANR	2022096	Identifier	php_strtolower		2021291	0					
ANR	2022097	ArgumentList	l_haystack		2021291	1					
ANR	2022098	Argument	l_haystack		2021291	0					
ANR	2022099	Identifier	l_haystack		2021291	0					
ANR	2022100	Argument	length		2021291	1					
ANR	2022101	Identifier	length		2021291	0					
ANR	2022102	ExpressionStatement	"php_strtolower ( l_needle , length )"	3856:3:92566:92598	2021291	4	True				
ANR	2022103	CallExpression	"php_strtolower ( l_needle , length )"		2021291	0					
ANR	2022104	Callee	php_strtolower		2021291	0					
ANR	2022105	Identifier	php_strtolower		2021291	0					
ANR	2022106	ArgumentList	l_needle		2021291	1					
ANR	2022107	Argument	l_needle		2021291	0					
ANR	2022108	Identifier	l_needle		2021291	0					
ANR	2022109	Argument	length		2021291	1					
ANR	2022110	Identifier	length		2021291	0					
ANR	2022111	IfStatement	"if ( memcmp ( l_haystack , l_needle , length ) )"		2021291	5					
ANR	2022112	Condition	"memcmp ( l_haystack , l_needle , length )"	3858:7:92608:92643	2021291	0	True				
ANR	2022113	CallExpression	"memcmp ( l_haystack , l_needle , length )"		2021291	0					
ANR	2022114	Callee	memcmp		2021291	0					
ANR	2022115	Identifier	memcmp		2021291	0					
ANR	2022116	ArgumentList	l_haystack		2021291	1					
ANR	2022117	Argument	l_haystack		2021291	0					
ANR	2022118	Identifier	l_haystack		2021291	0					
ANR	2022119	Argument	l_needle		2021291	1					
ANR	2022120	Identifier	l_needle		2021291	0					
ANR	2022121	Argument	length		2021291	2					
ANR	2022122	Identifier	length		2021291	0					
ANR	2022123	CompoundStatement		148:45:3565:3565	2021291	1					
ANR	2022124	ExpressionStatement	efree ( l_haystack )	3859:4:92652:92669	2021291	0	True				
ANR	2022125	CallExpression	efree ( l_haystack )		2021291	0					
ANR	2022126	Callee	efree		2021291	0					
ANR	2022127	Identifier	efree		2021291	0					
ANR	2022128	ArgumentList	l_haystack		2021291	1					
ANR	2022129	Argument	l_haystack		2021291	0					
ANR	2022130	Identifier	l_haystack		2021291	0					
ANR	2022131	ExpressionStatement	efree ( l_needle )	3860:4:92675:92690	2021291	1	True				
ANR	2022132	CallExpression	efree ( l_needle )		2021291	0					
ANR	2022133	Callee	efree		2021291	0					
ANR	2022134	Identifier	efree		2021291	0					
ANR	2022135	ArgumentList	l_needle		2021291	1					
ANR	2022136	Argument	l_needle		2021291	0					
ANR	2022137	Identifier	l_needle		2021291	0					
ANR	2022138	GotoStatement	goto nothing_todo ;	3861:4:92696:92713	2021291	2	True				
ANR	2022139	Identifier	nothing_todo		2021291	0					
ANR	2022140	ExpressionStatement	efree ( l_haystack )	3863:3:92723:92740	2021291	6	True				
ANR	2022141	CallExpression	efree ( l_haystack )		2021291	0					
ANR	2022142	Callee	efree		2021291	0					
ANR	2022143	Identifier	efree		2021291	0					
ANR	2022144	ArgumentList	l_haystack		2021291	1					
ANR	2022145	Argument	l_haystack		2021291	0					
ANR	2022146	Identifier	l_haystack		2021291	0					
ANR	2022147	ExpressionStatement	efree ( l_needle )	3864:3:92745:92760	2021291	7	True				
ANR	2022148	CallExpression	efree ( l_needle )		2021291	0					
ANR	2022149	Callee	efree		2021291	0					
ANR	2022150	Identifier	efree		2021291	0					
ANR	2022151	ArgumentList	l_needle		2021291	1					
ANR	2022152	Argument	l_needle		2021291	0					
ANR	2022153	Identifier	l_needle		2021291	0					
ANR	2022154	ExpressionStatement	* _new_length = str_len	3867:2:92769:92791	2021291	1	True				
ANR	2022155	AssignmentExpression	* _new_length = str_len		2021291	0		=			
ANR	2022156	UnaryOperationExpression	* _new_length		2021291	0					
ANR	2022157	UnaryOperator	*		2021291	0					
ANR	2022158	Identifier	_new_length		2021291	1					
ANR	2022159	Identifier	str_len		2021291	1					
ANR	2022160	ExpressionStatement	"new_str = estrndup ( str , str_len )"	3868:2:92795:92827	2021291	2	True				
ANR	2022161	AssignmentExpression	"new_str = estrndup ( str , str_len )"		2021291	0		=			
ANR	2022162	Identifier	new_str		2021291	0					
ANR	2022163	CallExpression	"estrndup ( str , str_len )"		2021291	1					
ANR	2022164	Callee	estrndup		2021291	0					
ANR	2022165	Identifier	estrndup		2021291	0					
ANR	2022166	ArgumentList	str		2021291	1					
ANR	2022167	Argument	str		2021291	0					
ANR	2022168	Identifier	str		2021291	0					
ANR	2022169	Argument	str_len		2021291	1					
ANR	2022170	Identifier	str_len		2021291	0					
ANR	2022171	IfStatement	if ( replace_count )		2021291	3					
ANR	2022172	Condition	replace_count	3870:6:92836:92848	2021291	0	True				
ANR	2022173	Identifier	replace_count		2021291	0					
ANR	2022174	CompoundStatement		160:21:3770:3770	2021291	1					
ANR	2022175	ExpressionStatement	( * replace_count ) ++	3871:3:92856:92874	2021291	0	True				
ANR	2022176	PostIncDecOperationExpression	( * replace_count ) ++		2021291	0					
ANR	2022177	UnaryOperationExpression	* replace_count		2021291	0					
ANR	2022178	UnaryOperator	*		2021291	0					
ANR	2022179	Identifier	replace_count		2021291	1					
ANR	2022180	IncDec	++		2021291	1					
ANR	2022181	ReturnStatement	return new_str ;	3873:2:92882:92896	2021291	4	True				
ANR	2022182	Identifier	new_str		2021291	0					
ANR	2022183	ReturnType	PHPAPI char *		2021291	1					
ANR	2022184	Identifier	php_str_to_str_ex		2021291	2					
ANR	2022185	ParameterList	"char * haystack , int length , char * needle , int needle_len , char * str , int str_len , int * _new_length , int case_sensitivity , int * replace_count"		2021291	3					
ANR	2022186	Parameter	char * haystack	3709:31:88937:88950	2021291	0	True				
ANR	2022187	ParameterType	char *		2021291	0					
ANR	2022188	Identifier	haystack		2021291	1					
ANR	2022189	Parameter	int length	3709:47:88953:88962	2021291	1	True				
ANR	2022190	ParameterType	int		2021291	0					
ANR	2022191	Identifier	length		2021291	1					
ANR	2022192	Parameter	char * needle	3710:1:88966:88977	2021291	2	True				
ANR	2022193	ParameterType	char *		2021291	0					
ANR	2022194	Identifier	needle		2021291	1					
ANR	2022195	Parameter	int needle_len	3710:15:88980:88993	2021291	3	True				
ANR	2022196	ParameterType	int		2021291	0					
ANR	2022197	Identifier	needle_len		2021291	1					
ANR	2022198	Parameter	char * str	3710:31:88996:89004	2021291	4	True				
ANR	2022199	ParameterType	char *		2021291	0					
ANR	2022200	Identifier	str		2021291	1					
ANR	2022201	Parameter	int str_len	3710:42:89007:89017	2021291	5	True				
ANR	2022202	ParameterType	int		2021291	0					
ANR	2022203	Identifier	str_len		2021291	1					
ANR	2022204	Parameter	int * _new_length	3710:55:89020:89035	2021291	6	True				
ANR	2022205	ParameterType	int *		2021291	0					
ANR	2022206	Identifier	_new_length		2021291	1					
ANR	2022207	Parameter	int case_sensitivity	3710:73:89038:89057	2021291	7	True				
ANR	2022208	ParameterType	int		2021291	0					
ANR	2022209	Identifier	case_sensitivity		2021291	1					
ANR	2022210	Parameter	int * replace_count	3710:95:89060:89077	2021291	8	True				
ANR	2022211	ParameterType	int *		2021291	0					
ANR	2022212	Identifier	replace_count		2021291	1					
ANR	2022213	CFGEntryNode	ENTRY		2021291		True				
ANR	2022214	CFGExitNode	EXIT		2021291		True				
ANR	2022215	Symbol	* replace_count		2021291						
ANR	2022216	Symbol	* _new_length		2021291						
ANR	2022217	Symbol	l_haystack		2021291						
ANR	2022218	Symbol	replace_count		2021291						
ANR	2022219	Symbol	_new_length		2021291						
ANR	2022220	Symbol	new_str		2021291						
ANR	2022221	Symbol	estrndup		2021291						
ANR	2022222	Symbol	emalloc		2021291						
ANR	2022223	Symbol	haystack		2021291						
ANR	2022224	Symbol	memcmp		2021291						
ANR	2022225	Symbol	needle_dup		2021291						
ANR	2022226	Symbol	str_len		2021291						
ANR	2022227	Symbol	end		2021291						
ANR	2022228	Symbol	endp		2021291						
ANR	2022229	Symbol	erealloc		2021291						
ANR	2022230	Symbol	l_needle		2021291						
ANR	2022231	Symbol	NULL		2021291						
ANR	2022232	Symbol	haystack_dup		2021291						
ANR	2022233	Symbol	e		2021291						
ANR	2022234	Symbol	length		2021291						
ANR	2022235	Symbol	count		2021291						
ANR	2022236	Symbol	php_memnstr		2021291						
ANR	2022237	Symbol	n		2021291						
ANR	2022238	Symbol	o		2021291						
ANR	2022239	Symbol	* e		2021291						
ANR	2022240	Symbol	str		2021291						
ANR	2022241	Symbol	p		2021291						
ANR	2022242	Symbol	r		2021291						
ANR	2022243	Symbol	s		2021291						
ANR	2022244	Symbol	safe_emalloc_string		2021291						
ANR	2022245	Symbol	needle		2021291						
ANR	2022246	Symbol	needle_len		2021291						
ANR	2022247	Symbol	case_sensitivity		2021291						
ANR	2022248	Function	php_str_to_str	3881:0:92941:93173							
ANR	2022249	FunctionDef	"php_str_to_str (char * haystack , int length , char * needle , int needle_len , char * str , int str_len , int * _new_length)"		2022248	0					
ANR	2022250	CompoundStatement		3883:0:93070:93173	2022248	0					
ANR	2022251	ReturnStatement	"return php_str_to_str_ex ( haystack , length , needle , needle_len , str , str_len , _new_length , 1 , NULL ) ;"	3884:1:93073:93171	2022248	0	True				
ANR	2022252	CallExpression	"php_str_to_str_ex ( haystack , length , needle , needle_len , str , str_len , _new_length , 1 , NULL )"		2022248	0					
ANR	2022253	Callee	php_str_to_str_ex		2022248	0					
ANR	2022254	Identifier	php_str_to_str_ex		2022248	0					
ANR	2022255	ArgumentList	haystack		2022248	1					
ANR	2022256	Argument	haystack		2022248	0					
ANR	2022257	Identifier	haystack		2022248	0					
ANR	2022258	Argument	length		2022248	1					
ANR	2022259	Identifier	length		2022248	0					
ANR	2022260	Argument	needle		2022248	2					
ANR	2022261	Identifier	needle		2022248	0					
ANR	2022262	Argument	needle_len		2022248	3					
ANR	2022263	Identifier	needle_len		2022248	0					
ANR	2022264	Argument	str		2022248	4					
ANR	2022265	Identifier	str		2022248	0					
ANR	2022266	Argument	str_len		2022248	5					
ANR	2022267	Identifier	str_len		2022248	0					
ANR	2022268	Argument	_new_length		2022248	6					
ANR	2022269	Identifier	_new_length		2022248	0					
ANR	2022270	Argument	1		2022248	7					
ANR	2022271	PrimaryExpression	1		2022248	0					
ANR	2022272	Argument	NULL		2022248	8					
ANR	2022273	Identifier	NULL		2022248	0					
ANR	2022274	ReturnType	PHPAPI char *		2022248	1					
ANR	2022275	Identifier	php_str_to_str		2022248	2					
ANR	2022276	ParameterList	"char * haystack , int length , char * needle , int needle_len , char * str , int str_len , int * _new_length"		2022248	3					
ANR	2022277	Parameter	char * haystack	3881:28:92969:92982	2022248	0	True				
ANR	2022278	ParameterType	char *		2022248	0					
ANR	2022279	Identifier	haystack		2022248	1					
ANR	2022280	Parameter	int length	3881:44:92985:92994	2022248	1	True				
ANR	2022281	ParameterType	int		2022248	0					
ANR	2022282	Identifier	length		2022248	1					
ANR	2022283	Parameter	char * needle	3882:1:92998:93009	2022248	2	True				
ANR	2022284	ParameterType	char *		2022248	0					
ANR	2022285	Identifier	needle		2022248	1					
ANR	2022286	Parameter	int needle_len	3882:15:93012:93025	2022248	3	True				
ANR	2022287	ParameterType	int		2022248	0					
ANR	2022288	Identifier	needle_len		2022248	1					
ANR	2022289	Parameter	char * str	3882:31:93028:93036	2022248	4	True				
ANR	2022290	ParameterType	char *		2022248	0					
ANR	2022291	Identifier	str		2022248	1					
ANR	2022292	Parameter	int str_len	3882:42:93039:93049	2022248	5	True				
ANR	2022293	ParameterType	int		2022248	0					
ANR	2022294	Identifier	str_len		2022248	1					
ANR	2022295	Parameter	int * _new_length	3882:55:93052:93067	2022248	6	True				
ANR	2022296	ParameterType	int *		2022248	0					
ANR	2022297	Identifier	_new_length		2022248	1					
ANR	2022298	CFGEntryNode	ENTRY		2022248		True				
ANR	2022299	CFGExitNode	EXIT		2022248		True				
ANR	2022300	Symbol	str		2022248						
ANR	2022301	Symbol	_new_length		2022248						
ANR	2022302	Symbol	haystack		2022248						
ANR	2022303	Symbol	NULL		2022248						
ANR	2022304	Symbol	str_len		2022248						
ANR	2022305	Symbol	length		2022248						
ANR	2022306	Symbol	needle		2022248						
ANR	2022307	Symbol	php_str_to_str_ex		2022248						
ANR	2022308	Symbol	needle_len		2022248						
ANR	2022309	Function	php_str_replace_in_subject	3890:0:93224:96671							
ANR	2022310	FunctionDef	"php_str_replace_in_subject (zval * search , zval * replace , zval * * subject , zval * result , int case_sensitivity , int * replace_count)"		2022309	0					
ANR	2022311	CompoundStatement		3891:0:93364:96671	2022309	0					
ANR	2022312	IdentifierDeclStatement	"zval * * search_entry , * * replace_entry = NULL , temp_result ;"	3892:1:93367:93434	2022309	0	True				
ANR	2022313	IdentifierDecl	* * search_entry		2022309	0					
ANR	2022314	IdentifierDeclType	zval * *		2022309	0					
ANR	2022315	Identifier	search_entry		2022309	1					
ANR	2022316	IdentifierDecl	* * replace_entry = NULL		2022309	1					
ANR	2022317	IdentifierDeclType	zval * *		2022309	0					
ANR	2022318	Identifier	replace_entry		2022309	1					
ANR	2022319	AssignmentExpression	* * replace_entry = NULL		2022309	2		=			
ANR	2022320	Identifier	NULL		2022309	0					
ANR	2022321	Identifier	NULL		2022309	1					
ANR	2022322	IdentifierDecl	temp_result		2022309	2					
ANR	2022323	IdentifierDeclType	zval		2022309	0					
ANR	2022324	Identifier	temp_result		2022309	1					
ANR	2022325	IdentifierDeclStatement	char * replace_value = NULL ;	3895:1:93437:93464	2022309	1	True				
ANR	2022326	IdentifierDecl	* replace_value = NULL		2022309	0					
ANR	2022327	IdentifierDeclType	char *		2022309	0					
ANR	2022328	Identifier	replace_value		2022309	1					
ANR	2022329	AssignmentExpression	* replace_value = NULL		2022309	2		=			
ANR	2022330	Identifier	NULL		2022309	0					
ANR	2022331	Identifier	NULL		2022309	1					
ANR	2022332	IdentifierDeclStatement	int replace_len = 0 ;	3896:1:93467:93489	2022309	2	True				
ANR	2022333	IdentifierDecl	replace_len = 0		2022309	0					
ANR	2022334	IdentifierDeclType	int		2022309	0					
ANR	2022335	Identifier	replace_len		2022309	1					
ANR	2022336	AssignmentExpression	replace_len = 0		2022309	2		=			
ANR	2022337	Identifier	replace_len		2022309	0					
ANR	2022338	PrimaryExpression	0		2022309	1					
ANR	2022339	ExpressionStatement	convert_to_string_ex ( subject )	3899:1:93538:93567	2022309	3	True				
ANR	2022340	CallExpression	convert_to_string_ex ( subject )		2022309	0					
ANR	2022341	Callee	convert_to_string_ex		2022309	0					
ANR	2022342	Identifier	convert_to_string_ex		2022309	0					
ANR	2022343	ArgumentList	subject		2022309	1					
ANR	2022344	Argument	subject		2022309	0					
ANR	2022345	Identifier	subject		2022309	0					
ANR	2022346	ExpressionStatement	Z_TYPE_P ( result ) = IS_STRING	3900:1:93570:93598	2022309	4	True				
ANR	2022347	AssignmentExpression	Z_TYPE_P ( result ) = IS_STRING		2022309	0		=			
ANR	2022348	CallExpression	Z_TYPE_P ( result )		2022309	0					
ANR	2022349	Callee	Z_TYPE_P		2022309	0					
ANR	2022350	Identifier	Z_TYPE_P		2022309	0					
ANR	2022351	ArgumentList	result		2022309	1					
ANR	2022352	Argument	result		2022309	0					
ANR	2022353	Identifier	result		2022309	0					
ANR	2022354	Identifier	IS_STRING		2022309	1					
ANR	2022355	IfStatement	if ( Z_STRLEN_PP ( subject ) == 0 )		2022309	5					
ANR	2022356	Condition	Z_STRLEN_PP ( subject ) == 0	3901:5:93605:93629	2022309	0	True				
ANR	2022357	EqualityExpression	Z_STRLEN_PP ( subject ) == 0		2022309	0		==			
ANR	2022358	CallExpression	Z_STRLEN_PP ( subject )		2022309	0					
ANR	2022359	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022360	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022361	ArgumentList	subject		2022309	1					
ANR	2022362	Argument	subject		2022309	0					
ANR	2022363	Identifier	subject		2022309	0					
ANR	2022364	PrimaryExpression	0		2022309	1					
ANR	2022365	CompoundStatement		11:32:267:267	2022309	1					
ANR	2022366	ExpressionStatement	"ZVAL_STRINGL ( result , """" , 0 , 1 )"	3902:2:93636:93666	2022309	0	True				
ANR	2022367	CallExpression	"ZVAL_STRINGL ( result , """" , 0 , 1 )"		2022309	0					
ANR	2022368	Callee	ZVAL_STRINGL		2022309	0					
ANR	2022369	Identifier	ZVAL_STRINGL		2022309	0					
ANR	2022370	ArgumentList	result		2022309	1					
ANR	2022371	Argument	result		2022309	0					
ANR	2022372	Identifier	result		2022309	0					
ANR	2022373	Argument	""""""		2022309	1					
ANR	2022374	PrimaryExpression	""""""		2022309	0					
ANR	2022375	Argument	0		2022309	2					
ANR	2022376	PrimaryExpression	0		2022309	0					
ANR	2022377	Argument	1		2022309	3					
ANR	2022378	PrimaryExpression	1		2022309	0					
ANR	2022379	ReturnStatement	return ;	3903:2:93670:93676	2022309	1	True				
ANR	2022380	IfStatement	if ( Z_TYPE_P ( search ) == IS_ARRAY )		2022309	6					
ANR	2022381	Condition	Z_TYPE_P ( search ) == IS_ARRAY	3907:5:93716:93743	2022309	0	True				
ANR	2022382	EqualityExpression	Z_TYPE_P ( search ) == IS_ARRAY		2022309	0		==			
ANR	2022383	CallExpression	Z_TYPE_P ( search )		2022309	0					
ANR	2022384	Callee	Z_TYPE_P		2022309	0					
ANR	2022385	Identifier	Z_TYPE_P		2022309	0					
ANR	2022386	ArgumentList	search		2022309	1					
ANR	2022387	Argument	search		2022309	0					
ANR	2022388	Identifier	search		2022309	0					
ANR	2022389	Identifier	IS_ARRAY		2022309	1					
ANR	2022390	CompoundStatement		17:35:381:381	2022309	1					
ANR	2022391	ExpressionStatement	"MAKE_COPY_ZVAL ( subject , result )"	3909:2:93808:93839	2022309	0	True				
ANR	2022392	CallExpression	"MAKE_COPY_ZVAL ( subject , result )"		2022309	0					
ANR	2022393	Callee	MAKE_COPY_ZVAL		2022309	0					
ANR	2022394	Identifier	MAKE_COPY_ZVAL		2022309	0					
ANR	2022395	ArgumentList	subject		2022309	1					
ANR	2022396	Argument	subject		2022309	0					
ANR	2022397	Identifier	subject		2022309	0					
ANR	2022398	Argument	result		2022309	1					
ANR	2022399	Identifier	result		2022309	0					
ANR	2022400	ExpressionStatement	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( search ) )	3911:2:93844:93896	2022309	1	True				
ANR	2022401	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( search ) )		2022309	0					
ANR	2022402	Callee	zend_hash_internal_pointer_reset		2022309	0					
ANR	2022403	Identifier	zend_hash_internal_pointer_reset		2022309	0					
ANR	2022404	ArgumentList	Z_ARRVAL_P ( search )		2022309	1					
ANR	2022405	Argument	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022406	CallExpression	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022407	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022408	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022409	ArgumentList	search		2022309	1					
ANR	2022410	Argument	search		2022309	0					
ANR	2022411	Identifier	search		2022309	0					
ANR	2022412	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2022309	2					
ANR	2022413	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3913:6:93905:93933	2022309	0	True				
ANR	2022414	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2022309	0		==			
ANR	2022415	CallExpression	Z_TYPE_P ( replace )		2022309	0					
ANR	2022416	Callee	Z_TYPE_P		2022309	0					
ANR	2022417	Identifier	Z_TYPE_P		2022309	0					
ANR	2022418	ArgumentList	replace		2022309	1					
ANR	2022419	Argument	replace		2022309	0					
ANR	2022420	Identifier	replace		2022309	0					
ANR	2022421	Identifier	IS_ARRAY		2022309	1					
ANR	2022422	CompoundStatement		23:37:571:571	2022309	1					
ANR	2022423	ExpressionStatement	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( replace ) )	3914:3:93941:93994	2022309	0	True				
ANR	2022424	CallExpression	zend_hash_internal_pointer_reset ( Z_ARRVAL_P ( replace ) )		2022309	0					
ANR	2022425	Callee	zend_hash_internal_pointer_reset		2022309	0					
ANR	2022426	Identifier	zend_hash_internal_pointer_reset		2022309	0					
ANR	2022427	ArgumentList	Z_ARRVAL_P ( replace )		2022309	1					
ANR	2022428	Argument	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022429	CallExpression	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022430	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022431	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022432	ArgumentList	replace		2022309	1					
ANR	2022433	Argument	replace		2022309	0					
ANR	2022434	Identifier	replace		2022309	0					
ANR	2022435	ElseStatement	else		2022309	0					
ANR	2022436	CompoundStatement		25:9:640:640	2022309	0					
ANR	2022437	ExpressionStatement	replace_value = Z_STRVAL_P ( replace )	3917:3:94059:94094	2022309	0	True				
ANR	2022438	AssignmentExpression	replace_value = Z_STRVAL_P ( replace )		2022309	0		=			
ANR	2022439	Identifier	replace_value		2022309	0					
ANR	2022440	CallExpression	Z_STRVAL_P ( replace )		2022309	1					
ANR	2022441	Callee	Z_STRVAL_P		2022309	0					
ANR	2022442	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022443	ArgumentList	replace		2022309	1					
ANR	2022444	Argument	replace		2022309	0					
ANR	2022445	Identifier	replace		2022309	0					
ANR	2022446	ExpressionStatement	replace_len = Z_STRLEN_P ( replace )	3918:3:94099:94132	2022309	1	True				
ANR	2022447	AssignmentExpression	replace_len = Z_STRLEN_P ( replace )		2022309	0		=			
ANR	2022448	Identifier	replace_len		2022309	0					
ANR	2022449	CallExpression	Z_STRLEN_P ( replace )		2022309	1					
ANR	2022450	Callee	Z_STRLEN_P		2022309	0					
ANR	2022451	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022452	ArgumentList	replace		2022309	1					
ANR	2022453	Argument	replace		2022309	0					
ANR	2022454	Identifier	replace		2022309	0					
ANR	2022455	WhileStatement	"while ( zend_hash_get_current_data ( Z_ARRVAL_P ( search ) , ( void * * ) & search_entry ) == SUCCESS )"		2022309	3					
ANR	2022456	Condition	"zend_hash_get_current_data ( Z_ARRVAL_P ( search ) , ( void * * ) & search_entry ) == SUCCESS"	3922:9:94206:94287	2022309	0	True				
ANR	2022457	EqualityExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( search ) , ( void * * ) & search_entry ) == SUCCESS"		2022309	0		==			
ANR	2022458	CallExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( search ) , ( void * * ) & search_entry )"		2022309	0					
ANR	2022459	Callee	zend_hash_get_current_data		2022309	0					
ANR	2022460	Identifier	zend_hash_get_current_data		2022309	0					
ANR	2022461	ArgumentList	Z_ARRVAL_P ( search )		2022309	1					
ANR	2022462	Argument	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022463	CallExpression	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022464	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022465	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022466	ArgumentList	search		2022309	1					
ANR	2022467	Argument	search		2022309	0					
ANR	2022468	Identifier	search		2022309	0					
ANR	2022469	Argument	( void * * ) & search_entry		2022309	1					
ANR	2022470	CastExpression	( void * * ) & search_entry		2022309	0					
ANR	2022471	CastTarget	void * *		2022309	0					
ANR	2022472	UnaryOperationExpression	& search_entry		2022309	1					
ANR	2022473	UnaryOperator	&		2022309	0					
ANR	2022474	Identifier	search_entry		2022309	1					
ANR	2022475	Identifier	SUCCESS		2022309	1					
ANR	2022476	CompoundStatement		32:93:925:925	2022309	1					
ANR	2022477	ExpressionStatement	SEPARATE_ZVAL ( search_entry )	3924:3:94342:94369	2022309	0	True				
ANR	2022478	CallExpression	SEPARATE_ZVAL ( search_entry )		2022309	0					
ANR	2022479	Callee	SEPARATE_ZVAL		2022309	0					
ANR	2022480	Identifier	SEPARATE_ZVAL		2022309	0					
ANR	2022481	ArgumentList	search_entry		2022309	1					
ANR	2022482	Argument	search_entry		2022309	0					
ANR	2022483	Identifier	search_entry		2022309	0					
ANR	2022484	ExpressionStatement	convert_to_string ( * search_entry )	3925:3:94374:94406	2022309	1	True				
ANR	2022485	CallExpression	convert_to_string ( * search_entry )		2022309	0					
ANR	2022486	Callee	convert_to_string		2022309	0					
ANR	2022487	Identifier	convert_to_string		2022309	0					
ANR	2022488	ArgumentList	* search_entry		2022309	1					
ANR	2022489	Argument	* search_entry		2022309	0					
ANR	2022490	UnaryOperationExpression	* search_entry		2022309	0					
ANR	2022491	UnaryOperator	*		2022309	0					
ANR	2022492	Identifier	search_entry		2022309	1					
ANR	2022493	IfStatement	if ( Z_STRLEN_PP ( search_entry ) == 0 )		2022309	2					
ANR	2022494	Condition	Z_STRLEN_PP ( search_entry ) == 0	3926:7:94415:94444	2022309	0	True				
ANR	2022495	EqualityExpression	Z_STRLEN_PP ( search_entry ) == 0		2022309	0		==			
ANR	2022496	CallExpression	Z_STRLEN_PP ( search_entry )		2022309	0					
ANR	2022497	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022498	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022499	ArgumentList	search_entry		2022309	1					
ANR	2022500	Argument	search_entry		2022309	0					
ANR	2022501	Identifier	search_entry		2022309	0					
ANR	2022502	PrimaryExpression	0		2022309	1					
ANR	2022503	CompoundStatement		36:39:1082:1082	2022309	1					
ANR	2022504	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( search ) )	3927:4:94453:94495	2022309	0	True				
ANR	2022505	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( search ) )		2022309	0					
ANR	2022506	Callee	zend_hash_move_forward		2022309	0					
ANR	2022507	Identifier	zend_hash_move_forward		2022309	0					
ANR	2022508	ArgumentList	Z_ARRVAL_P ( search )		2022309	1					
ANR	2022509	Argument	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022510	CallExpression	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022511	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022512	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022513	ArgumentList	search		2022309	1					
ANR	2022514	Argument	search		2022309	0					
ANR	2022515	Identifier	search		2022309	0					
ANR	2022516	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2022309	1					
ANR	2022517	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3928:8:94505:94533	2022309	0	True				
ANR	2022518	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2022309	0		==			
ANR	2022519	CallExpression	Z_TYPE_P ( replace )		2022309	0					
ANR	2022520	Callee	Z_TYPE_P		2022309	0					
ANR	2022521	Identifier	Z_TYPE_P		2022309	0					
ANR	2022522	ArgumentList	replace		2022309	1					
ANR	2022523	Argument	replace		2022309	0					
ANR	2022524	Identifier	replace		2022309	0					
ANR	2022525	Identifier	IS_ARRAY		2022309	1					
ANR	2022526	CompoundStatement		38:39:1171:1171	2022309	1					
ANR	2022527	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( replace ) )	3929:5:94543:94586	2022309	0	True				
ANR	2022528	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( replace ) )		2022309	0					
ANR	2022529	Callee	zend_hash_move_forward		2022309	0					
ANR	2022530	Identifier	zend_hash_move_forward		2022309	0					
ANR	2022531	ArgumentList	Z_ARRVAL_P ( replace )		2022309	1					
ANR	2022532	Argument	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022533	CallExpression	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022534	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022535	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022536	ArgumentList	replace		2022309	1					
ANR	2022537	Argument	replace		2022309	0					
ANR	2022538	Identifier	replace		2022309	0					
ANR	2022539	ContinueStatement	continue ;	3931:4:94598:94606	2022309	2	True				
ANR	2022540	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2022309	3					
ANR	2022541	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3935:7:94654:94682	2022309	0	True				
ANR	2022542	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2022309	0		==			
ANR	2022543	CallExpression	Z_TYPE_P ( replace )		2022309	0					
ANR	2022544	Callee	Z_TYPE_P		2022309	0					
ANR	2022545	Identifier	Z_TYPE_P		2022309	0					
ANR	2022546	ArgumentList	replace		2022309	1					
ANR	2022547	Argument	replace		2022309	0					
ANR	2022548	Identifier	replace		2022309	0					
ANR	2022549	Identifier	IS_ARRAY		2022309	1					
ANR	2022550	CompoundStatement		45:38:1320:1320	2022309	1					
ANR	2022551	IfStatement	"if ( zend_hash_get_current_data ( Z_ARRVAL_P ( replace ) , ( void * * ) & replace_entry ) == SUCCESS )"		2022309	0					
ANR	2022552	Condition	"zend_hash_get_current_data ( Z_ARRVAL_P ( replace ) , ( void * * ) & replace_entry ) == SUCCESS"	3937:8:94723:94805	2022309	0	True				
ANR	2022553	EqualityExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( replace ) , ( void * * ) & replace_entry ) == SUCCESS"		2022309	0		==			
ANR	2022554	CallExpression	"zend_hash_get_current_data ( Z_ARRVAL_P ( replace ) , ( void * * ) & replace_entry )"		2022309	0					
ANR	2022555	Callee	zend_hash_get_current_data		2022309	0					
ANR	2022556	Identifier	zend_hash_get_current_data		2022309	0					
ANR	2022557	ArgumentList	Z_ARRVAL_P ( replace )		2022309	1					
ANR	2022558	Argument	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022559	CallExpression	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022560	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022561	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022562	ArgumentList	replace		2022309	1					
ANR	2022563	Argument	replace		2022309	0					
ANR	2022564	Identifier	replace		2022309	0					
ANR	2022565	Argument	( void * * ) & replace_entry		2022309	1					
ANR	2022566	CastExpression	( void * * ) & replace_entry		2022309	0					
ANR	2022567	CastTarget	void * *		2022309	0					
ANR	2022568	UnaryOperationExpression	& replace_entry		2022309	1					
ANR	2022569	UnaryOperator	&		2022309	0					
ANR	2022570	Identifier	replace_entry		2022309	1					
ANR	2022571	Identifier	SUCCESS		2022309	1					
ANR	2022572	CompoundStatement		47:93:1443:1443	2022309	1					
ANR	2022573	ExpressionStatement	convert_to_string_ex ( replace_entry )	3939:5:94864:94899	2022309	0	True				
ANR	2022574	CallExpression	convert_to_string_ex ( replace_entry )		2022309	0					
ANR	2022575	Callee	convert_to_string_ex		2022309	0					
ANR	2022576	Identifier	convert_to_string_ex		2022309	0					
ANR	2022577	ArgumentList	replace_entry		2022309	1					
ANR	2022578	Argument	replace_entry		2022309	0					
ANR	2022579	Identifier	replace_entry		2022309	0					
ANR	2022580	ExpressionStatement	replace_value = Z_STRVAL_PP ( replace_entry )	3942:5:94969:95011	2022309	1	True				
ANR	2022581	AssignmentExpression	replace_value = Z_STRVAL_PP ( replace_entry )		2022309	0		=			
ANR	2022582	Identifier	replace_value		2022309	0					
ANR	2022583	CallExpression	Z_STRVAL_PP ( replace_entry )		2022309	1					
ANR	2022584	Callee	Z_STRVAL_PP		2022309	0					
ANR	2022585	Identifier	Z_STRVAL_PP		2022309	0					
ANR	2022586	ArgumentList	replace_entry		2022309	1					
ANR	2022587	Argument	replace_entry		2022309	0					
ANR	2022588	Identifier	replace_entry		2022309	0					
ANR	2022589	ExpressionStatement	replace_len = Z_STRLEN_PP ( replace_entry )	3943:5:95018:95058	2022309	2	True				
ANR	2022590	AssignmentExpression	replace_len = Z_STRLEN_PP ( replace_entry )		2022309	0		=			
ANR	2022591	Identifier	replace_len		2022309	0					
ANR	2022592	CallExpression	Z_STRLEN_PP ( replace_entry )		2022309	1					
ANR	2022593	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022594	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022595	ArgumentList	replace_entry		2022309	1					
ANR	2022596	Argument	replace_entry		2022309	0					
ANR	2022597	Identifier	replace_entry		2022309	0					
ANR	2022598	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( replace ) )	3945:5:95066:95109	2022309	3	True				
ANR	2022599	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( replace ) )		2022309	0					
ANR	2022600	Callee	zend_hash_move_forward		2022309	0					
ANR	2022601	Identifier	zend_hash_move_forward		2022309	0					
ANR	2022602	ArgumentList	Z_ARRVAL_P ( replace )		2022309	1					
ANR	2022603	Argument	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022604	CallExpression	Z_ARRVAL_P ( replace )		2022309	0					
ANR	2022605	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022606	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022607	ArgumentList	replace		2022309	1					
ANR	2022608	Argument	replace		2022309	0					
ANR	2022609	Identifier	replace		2022309	0					
ANR	2022610	ElseStatement	else		2022309	0					
ANR	2022611	CompoundStatement		56:11:1757:1757	2022309	0					
ANR	2022612	ExpressionStatement	"replace_value = """""	3948:5:95199:95217	2022309	0	True				
ANR	2022613	AssignmentExpression	"replace_value = """""		2022309	0		=			
ANR	2022614	Identifier	replace_value		2022309	0					
ANR	2022615	PrimaryExpression	""""""		2022309	1					
ANR	2022616	ExpressionStatement	replace_len = 0	3949:5:95224:95239	2022309	1	True				
ANR	2022617	AssignmentExpression	replace_len = 0		2022309	0		=			
ANR	2022618	Identifier	replace_len		2022309	0					
ANR	2022619	PrimaryExpression	0		2022309	1					
ANR	2022620	IfStatement	if ( Z_STRLEN_PP ( search_entry ) == 1 )		2022309	4					
ANR	2022621	Condition	Z_STRLEN_PP ( search_entry ) == 1	3953:7:95260:95289	2022309	0	True				
ANR	2022622	EqualityExpression	Z_STRLEN_PP ( search_entry ) == 1		2022309	0		==			
ANR	2022623	CallExpression	Z_STRLEN_PP ( search_entry )		2022309	0					
ANR	2022624	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022625	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022626	ArgumentList	search_entry		2022309	1					
ANR	2022627	Argument	search_entry		2022309	0					
ANR	2022628	Identifier	search_entry		2022309	0					
ANR	2022629	PrimaryExpression	1		2022309	1					
ANR	2022630	CompoundStatement		63:39:1927:1927	2022309	1					
ANR	2022631	ExpressionStatement	"php_char_to_str_ex ( Z_STRVAL_P ( result ) , Z_STRLEN_P ( result ) , Z_STRVAL_PP ( search_entry ) [ 0 ] , replace_value , replace_len , & temp_result , case_sensitivity , replace_count )"	3954:4:95298:95517	2022309	0	True				
ANR	2022632	CallExpression	"php_char_to_str_ex ( Z_STRVAL_P ( result ) , Z_STRLEN_P ( result ) , Z_STRVAL_PP ( search_entry ) [ 0 ] , replace_value , replace_len , & temp_result , case_sensitivity , replace_count )"		2022309	0					
ANR	2022633	Callee	php_char_to_str_ex		2022309	0					
ANR	2022634	Identifier	php_char_to_str_ex		2022309	0					
ANR	2022635	ArgumentList	Z_STRVAL_P ( result )		2022309	1					
ANR	2022636	Argument	Z_STRVAL_P ( result )		2022309	0					
ANR	2022637	CallExpression	Z_STRVAL_P ( result )		2022309	0					
ANR	2022638	Callee	Z_STRVAL_P		2022309	0					
ANR	2022639	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022640	ArgumentList	result		2022309	1					
ANR	2022641	Argument	result		2022309	0					
ANR	2022642	Identifier	result		2022309	0					
ANR	2022643	Argument	Z_STRLEN_P ( result )		2022309	1					
ANR	2022644	CallExpression	Z_STRLEN_P ( result )		2022309	0					
ANR	2022645	Callee	Z_STRLEN_P		2022309	0					
ANR	2022646	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022647	ArgumentList	result		2022309	1					
ANR	2022648	Argument	result		2022309	0					
ANR	2022649	Identifier	result		2022309	0					
ANR	2022650	Argument	Z_STRVAL_PP ( search_entry ) [ 0 ]		2022309	2					
ANR	2022651	ArrayIndexing	Z_STRVAL_PP ( search_entry ) [ 0 ]		2022309	0					
ANR	2022652	CallExpression	Z_STRVAL_PP ( search_entry )		2022309	0					
ANR	2022653	Callee	Z_STRVAL_PP		2022309	0					
ANR	2022654	Identifier	Z_STRVAL_PP		2022309	0					
ANR	2022655	ArgumentList	search_entry		2022309	1					
ANR	2022656	Argument	search_entry		2022309	0					
ANR	2022657	Identifier	search_entry		2022309	0					
ANR	2022658	PrimaryExpression	0		2022309	1					
ANR	2022659	Argument	replace_value		2022309	3					
ANR	2022660	Identifier	replace_value		2022309	0					
ANR	2022661	Argument	replace_len		2022309	4					
ANR	2022662	Identifier	replace_len		2022309	0					
ANR	2022663	Argument	& temp_result		2022309	5					
ANR	2022664	UnaryOperationExpression	& temp_result		2022309	0					
ANR	2022665	UnaryOperator	&		2022309	0					
ANR	2022666	Identifier	temp_result		2022309	1					
ANR	2022667	Argument	case_sensitivity		2022309	6					
ANR	2022668	Identifier	case_sensitivity		2022309	0					
ANR	2022669	Argument	replace_count		2022309	7					
ANR	2022670	Identifier	replace_count		2022309	0					
ANR	2022671	ElseStatement	else		2022309	0					
ANR	2022672	IfStatement	if ( Z_STRLEN_PP ( search_entry ) > 1 )		2022309	0					
ANR	2022673	Condition	Z_STRLEN_PP ( search_entry ) > 1	3962:14:95533:95561	2022309	0	True				
ANR	2022674	RelationalExpression	Z_STRLEN_PP ( search_entry ) > 1		2022309	0		>			
ANR	2022675	CallExpression	Z_STRLEN_PP ( search_entry )		2022309	0					
ANR	2022676	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022677	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022678	ArgumentList	search_entry		2022309	1					
ANR	2022679	Argument	search_entry		2022309	0					
ANR	2022680	Identifier	search_entry		2022309	0					
ANR	2022681	PrimaryExpression	1		2022309	1					
ANR	2022682	CompoundStatement		72:45:2199:2199	2022309	1					
ANR	2022683	ExpressionStatement	"Z_STRVAL ( temp_result ) = php_str_to_str_ex ( Z_STRVAL_P ( result ) , Z_STRLEN_P ( result ) , Z_STRVAL_PP ( search_entry ) , Z_STRLEN_PP ( search_entry ) , replace_value , replace_len , & Z_STRLEN ( temp_result ) , case_sensitivity , replace_count )"	3963:4:95570:95824	2022309	0	True				
ANR	2022684	AssignmentExpression	"Z_STRVAL ( temp_result ) = php_str_to_str_ex ( Z_STRVAL_P ( result ) , Z_STRLEN_P ( result ) , Z_STRVAL_PP ( search_entry ) , Z_STRLEN_PP ( search_entry ) , replace_value , replace_len , & Z_STRLEN ( temp_result ) , case_sensitivity , replace_count )"		2022309	0		=			
ANR	2022685	CallExpression	Z_STRVAL ( temp_result )		2022309	0					
ANR	2022686	Callee	Z_STRVAL		2022309	0					
ANR	2022687	Identifier	Z_STRVAL		2022309	0					
ANR	2022688	ArgumentList	temp_result		2022309	1					
ANR	2022689	Argument	temp_result		2022309	0					
ANR	2022690	Identifier	temp_result		2022309	0					
ANR	2022691	CallExpression	"php_str_to_str_ex ( Z_STRVAL_P ( result ) , Z_STRLEN_P ( result ) , Z_STRVAL_PP ( search_entry ) , Z_STRLEN_PP ( search_entry ) , replace_value , replace_len , & Z_STRLEN ( temp_result ) , case_sensitivity , replace_count )"		2022309	1					
ANR	2022692	Callee	php_str_to_str_ex		2022309	0					
ANR	2022693	Identifier	php_str_to_str_ex		2022309	0					
ANR	2022694	ArgumentList	Z_STRVAL_P ( result )		2022309	1					
ANR	2022695	Argument	Z_STRVAL_P ( result )		2022309	0					
ANR	2022696	CallExpression	Z_STRVAL_P ( result )		2022309	0					
ANR	2022697	Callee	Z_STRVAL_P		2022309	0					
ANR	2022698	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022699	ArgumentList	result		2022309	1					
ANR	2022700	Argument	result		2022309	0					
ANR	2022701	Identifier	result		2022309	0					
ANR	2022702	Argument	Z_STRLEN_P ( result )		2022309	1					
ANR	2022703	CallExpression	Z_STRLEN_P ( result )		2022309	0					
ANR	2022704	Callee	Z_STRLEN_P		2022309	0					
ANR	2022705	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022706	ArgumentList	result		2022309	1					
ANR	2022707	Argument	result		2022309	0					
ANR	2022708	Identifier	result		2022309	0					
ANR	2022709	Argument	Z_STRVAL_PP ( search_entry )		2022309	2					
ANR	2022710	CallExpression	Z_STRVAL_PP ( search_entry )		2022309	0					
ANR	2022711	Callee	Z_STRVAL_PP		2022309	0					
ANR	2022712	Identifier	Z_STRVAL_PP		2022309	0					
ANR	2022713	ArgumentList	search_entry		2022309	1					
ANR	2022714	Argument	search_entry		2022309	0					
ANR	2022715	Identifier	search_entry		2022309	0					
ANR	2022716	Argument	Z_STRLEN_PP ( search_entry )		2022309	3					
ANR	2022717	CallExpression	Z_STRLEN_PP ( search_entry )		2022309	0					
ANR	2022718	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022719	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022720	ArgumentList	search_entry		2022309	1					
ANR	2022721	Argument	search_entry		2022309	0					
ANR	2022722	Identifier	search_entry		2022309	0					
ANR	2022723	Argument	replace_value		2022309	4					
ANR	2022724	Identifier	replace_value		2022309	0					
ANR	2022725	Argument	replace_len		2022309	5					
ANR	2022726	Identifier	replace_len		2022309	0					
ANR	2022727	Argument	& Z_STRLEN ( temp_result )		2022309	6					
ANR	2022728	UnaryOperationExpression	& Z_STRLEN ( temp_result )		2022309	0					
ANR	2022729	UnaryOperator	&		2022309	0					
ANR	2022730	CallExpression	Z_STRLEN ( temp_result )		2022309	1					
ANR	2022731	Callee	Z_STRLEN		2022309	0					
ANR	2022732	Identifier	Z_STRLEN		2022309	0					
ANR	2022733	ArgumentList	temp_result		2022309	1					
ANR	2022734	Argument	temp_result		2022309	0					
ANR	2022735	Identifier	temp_result		2022309	0					
ANR	2022736	Argument	case_sensitivity		2022309	7					
ANR	2022737	Identifier	case_sensitivity		2022309	0					
ANR	2022738	Argument	replace_count		2022309	8					
ANR	2022739	Identifier	replace_count		2022309	0					
ANR	2022740	ExpressionStatement	str_efree ( Z_STRVAL_P ( result ) )	3968:3:95835:95864	2022309	5	True				
ANR	2022741	CallExpression	str_efree ( Z_STRVAL_P ( result ) )		2022309	0					
ANR	2022742	Callee	str_efree		2022309	0					
ANR	2022743	Identifier	str_efree		2022309	0					
ANR	2022744	ArgumentList	Z_STRVAL_P ( result )		2022309	1					
ANR	2022745	Argument	Z_STRVAL_P ( result )		2022309	0					
ANR	2022746	CallExpression	Z_STRVAL_P ( result )		2022309	0					
ANR	2022747	Callee	Z_STRVAL_P		2022309	0					
ANR	2022748	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022749	ArgumentList	result		2022309	1					
ANR	2022750	Argument	result		2022309	0					
ANR	2022751	Identifier	result		2022309	0					
ANR	2022752	ExpressionStatement	Z_STRVAL_P ( result ) = Z_STRVAL ( temp_result )	3969:3:95869:95911	2022309	6	True				
ANR	2022753	AssignmentExpression	Z_STRVAL_P ( result ) = Z_STRVAL ( temp_result )		2022309	0		=			
ANR	2022754	CallExpression	Z_STRVAL_P ( result )		2022309	0					
ANR	2022755	Callee	Z_STRVAL_P		2022309	0					
ANR	2022756	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022757	ArgumentList	result		2022309	1					
ANR	2022758	Argument	result		2022309	0					
ANR	2022759	Identifier	result		2022309	0					
ANR	2022760	CallExpression	Z_STRVAL ( temp_result )		2022309	1					
ANR	2022761	Callee	Z_STRVAL		2022309	0					
ANR	2022762	Identifier	Z_STRVAL		2022309	0					
ANR	2022763	ArgumentList	temp_result		2022309	1					
ANR	2022764	Argument	temp_result		2022309	0					
ANR	2022765	Identifier	temp_result		2022309	0					
ANR	2022766	ExpressionStatement	Z_STRLEN_P ( result ) = Z_STRLEN ( temp_result )	3970:3:95916:95958	2022309	7	True				
ANR	2022767	AssignmentExpression	Z_STRLEN_P ( result ) = Z_STRLEN ( temp_result )		2022309	0		=			
ANR	2022768	CallExpression	Z_STRLEN_P ( result )		2022309	0					
ANR	2022769	Callee	Z_STRLEN_P		2022309	0					
ANR	2022770	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022771	ArgumentList	result		2022309	1					
ANR	2022772	Argument	result		2022309	0					
ANR	2022773	Identifier	result		2022309	0					
ANR	2022774	CallExpression	Z_STRLEN ( temp_result )		2022309	1					
ANR	2022775	Callee	Z_STRLEN		2022309	0					
ANR	2022776	Identifier	Z_STRLEN		2022309	0					
ANR	2022777	ArgumentList	temp_result		2022309	1					
ANR	2022778	Argument	temp_result		2022309	0					
ANR	2022779	Identifier	temp_result		2022309	0					
ANR	2022780	IfStatement	if ( Z_STRLEN_P ( result ) == 0 )		2022309	8					
ANR	2022781	Condition	Z_STRLEN_P ( result ) == 0	3972:7:95968:95990	2022309	0	True				
ANR	2022782	EqualityExpression	Z_STRLEN_P ( result ) == 0		2022309	0		==			
ANR	2022783	CallExpression	Z_STRLEN_P ( result )		2022309	0					
ANR	2022784	Callee	Z_STRLEN_P		2022309	0					
ANR	2022785	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022786	ArgumentList	result		2022309	1					
ANR	2022787	Argument	result		2022309	0					
ANR	2022788	Identifier	result		2022309	0					
ANR	2022789	PrimaryExpression	0		2022309	1					
ANR	2022790	CompoundStatement		82:32:2628:2628	2022309	1					
ANR	2022791	ReturnStatement	return ;	3973:4:95999:96005	2022309	0	True				
ANR	2022792	ExpressionStatement	zend_hash_move_forward ( Z_ARRVAL_P ( search ) )	3976:3:96016:96058	2022309	9	True				
ANR	2022793	CallExpression	zend_hash_move_forward ( Z_ARRVAL_P ( search ) )		2022309	0					
ANR	2022794	Callee	zend_hash_move_forward		2022309	0					
ANR	2022795	Identifier	zend_hash_move_forward		2022309	0					
ANR	2022796	ArgumentList	Z_ARRVAL_P ( search )		2022309	1					
ANR	2022797	Argument	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022798	CallExpression	Z_ARRVAL_P ( search )		2022309	0					
ANR	2022799	Callee	Z_ARRVAL_P		2022309	0					
ANR	2022800	Identifier	Z_ARRVAL_P		2022309	0					
ANR	2022801	ArgumentList	search		2022309	1					
ANR	2022802	Argument	search		2022309	0					
ANR	2022803	Identifier	search		2022309	0					
ANR	2022804	ElseStatement	else		2022309	0					
ANR	2022805	CompoundStatement		88:8:2707:2707	2022309	0					
ANR	2022806	IfStatement	if ( Z_STRLEN_P ( search ) == 1 )		2022309	0					
ANR	2022807	Condition	Z_STRLEN_P ( search ) == 1	3979:6:96080:96102	2022309	0	True				
ANR	2022808	EqualityExpression	Z_STRLEN_P ( search ) == 1		2022309	0		==			
ANR	2022809	CallExpression	Z_STRLEN_P ( search )		2022309	0					
ANR	2022810	Callee	Z_STRLEN_P		2022309	0					
ANR	2022811	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022812	ArgumentList	search		2022309	1					
ANR	2022813	Argument	search		2022309	0					
ANR	2022814	Identifier	search		2022309	0					
ANR	2022815	PrimaryExpression	1		2022309	1					
ANR	2022816	CompoundStatement		89:31:2740:2740	2022309	1					
ANR	2022817	ExpressionStatement	"php_char_to_str_ex ( Z_STRVAL_PP ( subject ) , Z_STRLEN_PP ( subject ) , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , result , case_sensitivity , replace_count )"	3980:3:96110:96327	2022309	0	True				
ANR	2022818	CallExpression	"php_char_to_str_ex ( Z_STRVAL_PP ( subject ) , Z_STRLEN_PP ( subject ) , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , result , case_sensitivity , replace_count )"		2022309	0					
ANR	2022819	Callee	php_char_to_str_ex		2022309	0					
ANR	2022820	Identifier	php_char_to_str_ex		2022309	0					
ANR	2022821	ArgumentList	Z_STRVAL_PP ( subject )		2022309	1					
ANR	2022822	Argument	Z_STRVAL_PP ( subject )		2022309	0					
ANR	2022823	CallExpression	Z_STRVAL_PP ( subject )		2022309	0					
ANR	2022824	Callee	Z_STRVAL_PP		2022309	0					
ANR	2022825	Identifier	Z_STRVAL_PP		2022309	0					
ANR	2022826	ArgumentList	subject		2022309	1					
ANR	2022827	Argument	subject		2022309	0					
ANR	2022828	Identifier	subject		2022309	0					
ANR	2022829	Argument	Z_STRLEN_PP ( subject )		2022309	1					
ANR	2022830	CallExpression	Z_STRLEN_PP ( subject )		2022309	0					
ANR	2022831	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022832	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022833	ArgumentList	subject		2022309	1					
ANR	2022834	Argument	subject		2022309	0					
ANR	2022835	Identifier	subject		2022309	0					
ANR	2022836	Argument	Z_STRVAL_P ( search ) [ 0 ]		2022309	2					
ANR	2022837	ArrayIndexing	Z_STRVAL_P ( search ) [ 0 ]		2022309	0					
ANR	2022838	CallExpression	Z_STRVAL_P ( search )		2022309	0					
ANR	2022839	Callee	Z_STRVAL_P		2022309	0					
ANR	2022840	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022841	ArgumentList	search		2022309	1					
ANR	2022842	Argument	search		2022309	0					
ANR	2022843	Identifier	search		2022309	0					
ANR	2022844	PrimaryExpression	0		2022309	1					
ANR	2022845	Argument	Z_STRVAL_P ( replace )		2022309	3					
ANR	2022846	CallExpression	Z_STRVAL_P ( replace )		2022309	0					
ANR	2022847	Callee	Z_STRVAL_P		2022309	0					
ANR	2022848	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022849	ArgumentList	replace		2022309	1					
ANR	2022850	Argument	replace		2022309	0					
ANR	2022851	Identifier	replace		2022309	0					
ANR	2022852	Argument	Z_STRLEN_P ( replace )		2022309	4					
ANR	2022853	CallExpression	Z_STRLEN_P ( replace )		2022309	0					
ANR	2022854	Callee	Z_STRLEN_P		2022309	0					
ANR	2022855	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022856	ArgumentList	replace		2022309	1					
ANR	2022857	Argument	replace		2022309	0					
ANR	2022858	Identifier	replace		2022309	0					
ANR	2022859	Argument	result		2022309	5					
ANR	2022860	Identifier	result		2022309	0					
ANR	2022861	Argument	case_sensitivity		2022309	6					
ANR	2022862	Identifier	case_sensitivity		2022309	0					
ANR	2022863	Argument	replace_count		2022309	7					
ANR	2022864	Identifier	replace_count		2022309	0					
ANR	2022865	ElseStatement	else		2022309	0					
ANR	2022866	IfStatement	if ( Z_STRLEN_P ( search ) > 1 )		2022309	0					
ANR	2022867	Condition	Z_STRLEN_P ( search ) > 1	3988:13:96342:96363	2022309	0	True				
ANR	2022868	RelationalExpression	Z_STRLEN_P ( search ) > 1		2022309	0		>			
ANR	2022869	CallExpression	Z_STRLEN_P ( search )		2022309	0					
ANR	2022870	Callee	Z_STRLEN_P		2022309	0					
ANR	2022871	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022872	ArgumentList	search		2022309	1					
ANR	2022873	Argument	search		2022309	0					
ANR	2022874	Identifier	search		2022309	0					
ANR	2022875	PrimaryExpression	1		2022309	1					
ANR	2022876	CompoundStatement		98:37:3001:3001	2022309	1					
ANR	2022877	ExpressionStatement	"Z_STRVAL_P ( result ) = php_str_to_str_ex ( Z_STRVAL_PP ( subject ) , Z_STRLEN_PP ( subject ) , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & Z_STRLEN_P ( result ) , case_sensitivity , replace_count )"	3989:3:96371:96615	2022309	0	True				
ANR	2022878	AssignmentExpression	"Z_STRVAL_P ( result ) = php_str_to_str_ex ( Z_STRVAL_PP ( subject ) , Z_STRLEN_PP ( subject ) , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & Z_STRLEN_P ( result ) , case_sensitivity , replace_count )"		2022309	0		=			
ANR	2022879	CallExpression	Z_STRVAL_P ( result )		2022309	0					
ANR	2022880	Callee	Z_STRVAL_P		2022309	0					
ANR	2022881	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022882	ArgumentList	result		2022309	1					
ANR	2022883	Argument	result		2022309	0					
ANR	2022884	Identifier	result		2022309	0					
ANR	2022885	CallExpression	"php_str_to_str_ex ( Z_STRVAL_PP ( subject ) , Z_STRLEN_PP ( subject ) , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & Z_STRLEN_P ( result ) , case_sensitivity , replace_count )"		2022309	1					
ANR	2022886	Callee	php_str_to_str_ex		2022309	0					
ANR	2022887	Identifier	php_str_to_str_ex		2022309	0					
ANR	2022888	ArgumentList	Z_STRVAL_PP ( subject )		2022309	1					
ANR	2022889	Argument	Z_STRVAL_PP ( subject )		2022309	0					
ANR	2022890	CallExpression	Z_STRVAL_PP ( subject )		2022309	0					
ANR	2022891	Callee	Z_STRVAL_PP		2022309	0					
ANR	2022892	Identifier	Z_STRVAL_PP		2022309	0					
ANR	2022893	ArgumentList	subject		2022309	1					
ANR	2022894	Argument	subject		2022309	0					
ANR	2022895	Identifier	subject		2022309	0					
ANR	2022896	Argument	Z_STRLEN_PP ( subject )		2022309	1					
ANR	2022897	CallExpression	Z_STRLEN_PP ( subject )		2022309	0					
ANR	2022898	Callee	Z_STRLEN_PP		2022309	0					
ANR	2022899	Identifier	Z_STRLEN_PP		2022309	0					
ANR	2022900	ArgumentList	subject		2022309	1					
ANR	2022901	Argument	subject		2022309	0					
ANR	2022902	Identifier	subject		2022309	0					
ANR	2022903	Argument	Z_STRVAL_P ( search )		2022309	2					
ANR	2022904	CallExpression	Z_STRVAL_P ( search )		2022309	0					
ANR	2022905	Callee	Z_STRVAL_P		2022309	0					
ANR	2022906	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022907	ArgumentList	search		2022309	1					
ANR	2022908	Argument	search		2022309	0					
ANR	2022909	Identifier	search		2022309	0					
ANR	2022910	Argument	Z_STRLEN_P ( search )		2022309	3					
ANR	2022911	CallExpression	Z_STRLEN_P ( search )		2022309	0					
ANR	2022912	Callee	Z_STRLEN_P		2022309	0					
ANR	2022913	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022914	ArgumentList	search		2022309	1					
ANR	2022915	Argument	search		2022309	0					
ANR	2022916	Identifier	search		2022309	0					
ANR	2022917	Argument	Z_STRVAL_P ( replace )		2022309	4					
ANR	2022918	CallExpression	Z_STRVAL_P ( replace )		2022309	0					
ANR	2022919	Callee	Z_STRVAL_P		2022309	0					
ANR	2022920	Identifier	Z_STRVAL_P		2022309	0					
ANR	2022921	ArgumentList	replace		2022309	1					
ANR	2022922	Argument	replace		2022309	0					
ANR	2022923	Identifier	replace		2022309	0					
ANR	2022924	Argument	Z_STRLEN_P ( replace )		2022309	5					
ANR	2022925	CallExpression	Z_STRLEN_P ( replace )		2022309	0					
ANR	2022926	Callee	Z_STRLEN_P		2022309	0					
ANR	2022927	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022928	ArgumentList	replace		2022309	1					
ANR	2022929	Argument	replace		2022309	0					
ANR	2022930	Identifier	replace		2022309	0					
ANR	2022931	Argument	& Z_STRLEN_P ( result )		2022309	6					
ANR	2022932	UnaryOperationExpression	& Z_STRLEN_P ( result )		2022309	0					
ANR	2022933	UnaryOperator	&		2022309	0					
ANR	2022934	CallExpression	Z_STRLEN_P ( result )		2022309	1					
ANR	2022935	Callee	Z_STRLEN_P		2022309	0					
ANR	2022936	Identifier	Z_STRLEN_P		2022309	0					
ANR	2022937	ArgumentList	result		2022309	1					
ANR	2022938	Argument	result		2022309	0					
ANR	2022939	Identifier	result		2022309	0					
ANR	2022940	Argument	case_sensitivity		2022309	7					
ANR	2022941	Identifier	case_sensitivity		2022309	0					
ANR	2022942	Argument	replace_count		2022309	8					
ANR	2022943	Identifier	replace_count		2022309	0					
ANR	2022944	ElseStatement	else		2022309	0					
ANR	2022945	CompoundStatement		102:9:3261:3261	2022309	0					
ANR	2022946	ExpressionStatement	"MAKE_COPY_ZVAL ( subject , result )"	3993:3:96631:96662	2022309	0	True				
ANR	2022947	CallExpression	"MAKE_COPY_ZVAL ( subject , result )"		2022309	0					
ANR	2022948	Callee	MAKE_COPY_ZVAL		2022309	0					
ANR	2022949	Identifier	MAKE_COPY_ZVAL		2022309	0					
ANR	2022950	ArgumentList	subject		2022309	1					
ANR	2022951	Argument	subject		2022309	0					
ANR	2022952	Identifier	subject		2022309	0					
ANR	2022953	Argument	result		2022309	1					
ANR	2022954	Identifier	result		2022309	0					
ANR	2022955	ReturnType	static void		2022309	1					
ANR	2022956	Identifier	php_str_replace_in_subject		2022309	2					
ANR	2022957	ParameterList	"zval * search , zval * replace , zval * * subject , zval * result , int case_sensitivity , int * replace_count"		2022309	3					
ANR	2022958	Parameter	zval * search	3890:39:93263:93274	2022309	0	True				
ANR	2022959	ParameterType	zval *		2022309	0					
ANR	2022960	Identifier	search		2022309	1					
ANR	2022961	Parameter	zval * replace	3890:53:93277:93289	2022309	1	True				
ANR	2022962	ParameterType	zval *		2022309	0					
ANR	2022963	Identifier	replace		2022309	1					
ANR	2022964	Parameter	zval * * subject	3890:68:93292:93305	2022309	2	True				
ANR	2022965	ParameterType	zval * *		2022309	0					
ANR	2022966	Identifier	subject		2022309	1					
ANR	2022967	Parameter	zval * result	3890:84:93308:93319	2022309	3	True				
ANR	2022968	ParameterType	zval *		2022309	0					
ANR	2022969	Identifier	result		2022309	1					
ANR	2022970	Parameter	int case_sensitivity	3890:98:93322:93341	2022309	4	True				
ANR	2022971	ParameterType	int		2022309	0					
ANR	2022972	Identifier	case_sensitivity		2022309	1					
ANR	2022973	Parameter	int * replace_count	3890:120:93344:93361	2022309	5	True				
ANR	2022974	ParameterType	int *		2022309	0					
ANR	2022975	Identifier	replace_count		2022309	1					
ANR	2022976	CFGEntryNode	ENTRY		2022309		True				
ANR	2022977	CFGExitNode	EXIT		2022309		True				
ANR	2022978	Symbol	* search_entry		2022309						
ANR	2022979	Symbol	subject		2022309						
ANR	2022980	Symbol	replace		2022309						
ANR	2022981	Symbol	& search_entry		2022309						
ANR	2022982	Symbol	& temp_result		2022309						
ANR	2022983	Symbol	search_entry		2022309						
ANR	2022984	Symbol	Z_STRLEN		2022309						
ANR	2022985	Symbol	php_str_to_str_ex		2022309						
ANR	2022986	Symbol	result		2022309						
ANR	2022987	Symbol	replace_count		2022309						
ANR	2022988	Symbol	* Z_STRVAL_PP		2022309						
ANR	2022989	Symbol	search		2022309						
ANR	2022990	Symbol	zend_hash_get_current_data		2022309						
ANR	2022991	Symbol	IS_ARRAY		2022309						
ANR	2022992	Symbol	& replace_entry		2022309						
ANR	2022993	Symbol	temp_result		2022309						
ANR	2022994	Symbol	replace_entry		2022309						
ANR	2022995	Symbol	Z_STRVAL		2022309						
ANR	2022996	Symbol	Z_STRVAL_PP		2022309						
ANR	2022997	Symbol	Z_STRLEN_P		2022309						
ANR	2022998	Symbol	IS_STRING		2022309						
ANR	2022999	Symbol	* Z_STRVAL_P		2022309						
ANR	2023000	Symbol	Z_ARRVAL_P		2022309						
ANR	2023001	Symbol	& Z_STRLEN_P		2022309						
ANR	2023002	Symbol	NULL		2022309						
ANR	2023003	Symbol	replace_len		2022309						
ANR	2023004	Symbol	SUCCESS		2022309						
ANR	2023005	Symbol	Z_TYPE_P		2022309						
ANR	2023006	Symbol	Z_STRLEN_PP		2022309						
ANR	2023007	Symbol	Z_STRVAL_P		2022309						
ANR	2023008	Symbol	& Z_STRLEN		2022309						
ANR	2023009	Symbol	case_sensitivity		2022309						
ANR	2023010	Symbol	replace_value		2022309						
ANR	2023011	DeclStmt									
ANR	2023012	Decl							zval	zval * *	subject
ANR	2023013	Decl							zval	zval * *	search
ANR	2023014	Decl							zval	zval * *	replace
ANR	2023015	Decl							zval	zval * *	subject_entry
ANR	2023016	Decl							zval	zval * *	zcount
ANR	2023017	DeclStmt									
ANR	2023018	Decl							zval	zval *	result
ANR	2023019	DeclStmt									
ANR	2023020	Decl							char	char *	string_key
ANR	2023021	DeclStmt									
ANR	2023022	Decl							uint	uint	string_key_len
ANR	2023023	DeclStmt									
ANR	2023024	Decl							ulong	ulong	num_key
ANR	2023025	DeclStmt									
ANR	2023026	Decl							int	int	count
ANR	2023027	DeclStmt									
ANR	2023028	Decl							int	int	argc
ANR	2023029	DeclStmt									
ANR	2023030	Decl							char	char *	str
ANR	2023031	DeclStmt									
ANR	2023032	Decl							char	char *	heb_str
ANR	2023033	Decl							char	char *	tmp
ANR	2023034	Decl							char	char *	target
ANR	2023035	Decl							char	char *	broken_str
ANR	2023036	DeclStmt									
ANR	2023037	Decl							int	int	block_start
ANR	2023038	Decl							int	int	block_end
ANR	2023039	Decl							int	int	block_type
ANR	2023040	Decl							int	int	block_length
ANR	2023041	Decl							int	int	i
ANR	2023042	DeclStmt									
ANR	2023043	Decl							long	long	max_chars
ANR	2023044	DeclStmt									
ANR	2023045	Decl							int	int	begin
ANR	2023046	Decl							int	int	end
ANR	2023047	Decl							int	int	char_count
ANR	2023048	Decl							int	int	orig_begin
ANR	2023049	DeclStmt									
ANR	2023050	Decl							int	int	str_len
ANR	2023051	DeclStmt									
ANR	2023052	Decl							int	int	new_char_count
ANR	2023053	Decl							int	int	new_begin
ANR	2023054	DeclStmt									
ANR	2023055	Decl							char	char *	tmp
ANR	2023056	Decl							char	char *	str
ANR	2023057	DeclStmt									
ANR	2023058	Decl							size_t	size_t	new_length
ANR	2023059	DeclStmt									
ANR	2023060	Decl							char	char *	end
ANR	2023061	Decl							char	char *	target
ANR	2023062	DeclStmt									
ANR	2023063	Decl							int	int	repl_cnt
ANR	2023064	DeclStmt									
ANR	2023065	Decl							int	int	str_len
ANR	2023066	DeclStmt									
ANR	2023067	Decl							zend_bool	zend_bool	is_xhtml
ANR	2023068	DeclStmt									
ANR	2023069	Decl							size_t	size_t	repl_len
ANR	2023070	DeclStmt									
ANR	2023071	Decl							repl_cnt	repl_cnt *	repl_len
ANR	2023072	DeclStmt									
ANR	2023073	Decl							char	char *	buf
ANR	2023074	DeclStmt									
ANR	2023075	Decl							char	char *	str
ANR	2023076	DeclStmt									
ANR	2023077	Decl							zval	zval * *	allow
ANR	2023078	DeclStmt									
ANR	2023079	Decl							char	char *	allowed_tags
ANR	2023080	DeclStmt									
ANR	2023081	Decl							int	int	allowed_tags_len
ANR	2023082	DeclStmt									
ANR	2023083	Decl							int	int	str_len
ANR	2023084	DeclStmt									
ANR	2023085	Decl							size_t	size_t	retval_len
ANR	2023086	DeclStmt									
ANR	2023087	Decl							zval	zval * * *	args
ANR	2023088	DeclStmt									
ANR	2023089	Decl							zval	zval * *	pcategory
ANR	2023090	Decl							zval	zval * *	plocale
ANR	2023091	DeclStmt									
ANR	2023092	Decl							int	int	num_args
ANR	2023093	Decl							int	int	cat
ANR	2023094	Decl							int	int	i
ANR	2023095	DeclStmt									
ANR	2023096	Decl							char	char *	loc
ANR	2023097	Decl							char	char *	retval
ANR	2023098	DeclStmt									
ANR	2023099	Decl							char	char *	category
ANR	2023100	DeclStmt									
ANR	2023101	Decl							char	char *	arg
ANR	2023102	DeclStmt									
ANR	2023103	Decl							zval	zval *	arrayArg
ANR	2023104	DeclStmt									
ANR	2023105	Decl							char	char *	res
ANR	2023106	DeclStmt									
ANR	2023107	Decl							int	int	arglen
ANR	2023108	DeclStmt									
ANR	2023109	Decl							zval	zval	tmp
ANR	2023110	DeclStmt									
ANR	2023111	Decl							zval	zval	ret
ANR	2023112	Function	php_tag_find	4536:0:109600:110397							
ANR	2023113	FunctionDef	"php_tag_find (char * tag , int len , char * set)"		2023112	0					
ANR	2023114	CompoundStatement		4536:48:109648:110397	2023112	0					
ANR	2023115	IdentifierDeclStatement	"char c , * n , * t ;"	4537:1:109651:109665	2023112	0	True				
ANR	2023116	IdentifierDecl	c		2023112	0					
ANR	2023117	IdentifierDeclType	char		2023112	0					
ANR	2023118	Identifier	c		2023112	1					
ANR	2023119	IdentifierDecl	* n		2023112	1					
ANR	2023120	IdentifierDeclType	char *		2023112	0					
ANR	2023121	Identifier	n		2023112	1					
ANR	2023122	IdentifierDecl	* t		2023112	2					
ANR	2023123	IdentifierDeclType	char *		2023112	0					
ANR	2023124	Identifier	t		2023112	1					
ANR	2023125	IdentifierDeclStatement	"int state = 0 , done = 0 ;"	4538:1:109668:109687	2023112	1	True				
ANR	2023126	IdentifierDecl	state = 0		2023112	0					
ANR	2023127	IdentifierDeclType	int		2023112	0					
ANR	2023128	Identifier	state		2023112	1					
ANR	2023129	AssignmentExpression	state = 0		2023112	2		=			
ANR	2023130	Identifier	state		2023112	0					
ANR	2023131	PrimaryExpression	0		2023112	1					
ANR	2023132	IdentifierDecl	done = 0		2023112	1					
ANR	2023133	IdentifierDeclType	int		2023112	0					
ANR	2023134	Identifier	done		2023112	1					
ANR	2023135	AssignmentExpression	done = 0		2023112	2		=			
ANR	2023136	Identifier	done		2023112	0					
ANR	2023137	PrimaryExpression	0		2023112	1					
ANR	2023138	IdentifierDeclStatement	char * norm ;	4539:1:109690:109700	2023112	2	True				
ANR	2023139	IdentifierDecl	* norm		2023112	0					
ANR	2023140	IdentifierDeclType	char *		2023112	0					
ANR	2023141	Identifier	norm		2023112	1					
ANR	2023142	IfStatement	if ( len <= 0 )		2023112	3					
ANR	2023143	Condition	len <= 0	4541:5:109708:109715	2023112	0	True				
ANR	2023144	RelationalExpression	len <= 0		2023112	0		<=			
ANR	2023145	Identifier	len		2023112	0					
ANR	2023146	PrimaryExpression	0		2023112	1					
ANR	2023147	CompoundStatement		6:15:69:69	2023112	1					
ANR	2023148	ReturnStatement	return 0 ;	4542:2:109722:109730	2023112	0	True				
ANR	2023149	PrimaryExpression	0		2023112	0					
ANR	2023150	ExpressionStatement	norm = emalloc ( len + 1 )	4545:1:109737:109758	2023112	4	True				
ANR	2023151	AssignmentExpression	norm = emalloc ( len + 1 )		2023112	0		=			
ANR	2023152	Identifier	norm		2023112	0					
ANR	2023153	CallExpression	emalloc ( len + 1 )		2023112	1					
ANR	2023154	Callee	emalloc		2023112	0					
ANR	2023155	Identifier	emalloc		2023112	0					
ANR	2023156	ArgumentList	len + 1		2023112	1					
ANR	2023157	Argument	len + 1		2023112	0					
ANR	2023158	AdditiveExpression	len + 1		2023112	0		+			
ANR	2023159	Identifier	len		2023112	0					
ANR	2023160	PrimaryExpression	1		2023112	1					
ANR	2023161	ExpressionStatement	n = norm	4547:1:109762:109770	2023112	5	True				
ANR	2023162	AssignmentExpression	n = norm		2023112	0		=			
ANR	2023163	Identifier	n		2023112	0					
ANR	2023164	Identifier	norm		2023112	1					
ANR	2023165	ExpressionStatement	t = tag	4548:1:109773:109780	2023112	6	True				
ANR	2023166	AssignmentExpression	t = tag		2023112	0		=			
ANR	2023167	Identifier	t		2023112	0					
ANR	2023168	Identifier	tag		2023112	1					
ANR	2023169	ExpressionStatement	c = tolower ( * t )	4549:1:109783:109798	2023112	7	True				
ANR	2023170	AssignmentExpression	c = tolower ( * t )		2023112	0		=			
ANR	2023171	Identifier	c		2023112	0					
ANR	2023172	CallExpression	tolower ( * t )		2023112	1					
ANR	2023173	Callee	tolower		2023112	0					
ANR	2023174	Identifier	tolower		2023112	0					
ANR	2023175	ArgumentList	* t		2023112	1					
ANR	2023176	Argument	* t		2023112	0					
ANR	2023177	UnaryOperationExpression	* t		2023112	0					
ANR	2023178	UnaryOperator	*		2023112	0					
ANR	2023179	Identifier	t		2023112	1					
ANR	2023180	WhileStatement	while ( ! done )		2023112	8					
ANR	2023181	Condition	! done	4555:8:109956:109960	2023112	0	True				
ANR	2023182	UnaryOperationExpression	! done		2023112	0					
ANR	2023183	UnaryOperator	!		2023112	0					
ANR	2023184	Identifier	done		2023112	1					
ANR	2023185	CompoundStatement		20:15:314:314	2023112	1					
ANR	2023186	SwitchStatement	switch ( c )		2023112	0					
ANR	2023187	Condition	c	4556:10:109975:109975	2023112	0	True				
ANR	2023188	Identifier	c		2023112	0					
ANR	2023189	CompoundStatement		21:13:329:329	2023112	1					
ANR	2023190	Label	case '<' :	4557:3:109983:109991	2023112	0	True				
ANR	2023191	ExpressionStatement	* ( n ++ ) = c	4558:4:109997:110007	2023112	1	True				
ANR	2023192	AssignmentExpression	* ( n ++ ) = c		2023112	0		=			
ANR	2023193	UnaryOperationExpression	* ( n ++ )		2023112	0					
ANR	2023194	UnaryOperator	*		2023112	0					
ANR	2023195	PostIncDecOperationExpression	n ++		2023112	1					
ANR	2023196	Identifier	n		2023112	0					
ANR	2023197	IncDec	++		2023112	1					
ANR	2023198	Identifier	c		2023112	1					
ANR	2023199	BreakStatement	break ;	4559:4:110013:110018	2023112	2	True				
ANR	2023200	Label	case '>' :	4560:3:110023:110031	2023112	3	True				
ANR	2023201	ExpressionStatement	done = 1	4561:4:110037:110044	2023112	4	True				
ANR	2023202	AssignmentExpression	done = 1		2023112	0		=			
ANR	2023203	Identifier	done		2023112	0					
ANR	2023204	PrimaryExpression	1		2023112	1					
ANR	2023205	BreakStatement	break ;	4562:4:110050:110055	2023112	5	True				
ANR	2023206	Label	default :	4563:3:110060:110067	2023112	6	True				
ANR	2023207	Identifier	default		2023112	0					
ANR	2023208	IfStatement	if ( ! isspace ( ( int ) c ) )		2023112	7					
ANR	2023209	Condition	! isspace ( ( int ) c )	4564:8:110077:110092	2023112	0	True				
ANR	2023210	UnaryOperationExpression	! isspace ( ( int ) c )		2023112	0					
ANR	2023211	UnaryOperator	!		2023112	0					
ANR	2023212	CallExpression	isspace ( ( int ) c )		2023112	1					
ANR	2023213	Callee	isspace		2023112	0					
ANR	2023214	Identifier	isspace		2023112	0					
ANR	2023215	ArgumentList	( int ) c		2023112	1					
ANR	2023216	Argument	( int ) c		2023112	0					
ANR	2023217	CastExpression	( int ) c		2023112	0					
ANR	2023218	CastTarget	int		2023112	0					
ANR	2023219	Identifier	c		2023112	1					
ANR	2023220	CompoundStatement		29:26:446:446	2023112	1					
ANR	2023221	IfStatement	if ( state == 0 )		2023112	0					
ANR	2023222	Condition	state == 0	4565:9:110106:110115	2023112	0	True				
ANR	2023223	EqualityExpression	state == 0		2023112	0		==			
ANR	2023224	Identifier	state		2023112	0					
ANR	2023225	PrimaryExpression	0		2023112	1					
ANR	2023226	CompoundStatement		30:21:469:469	2023112	1					
ANR	2023227	ExpressionStatement	state = 1	4566:6:110126:110133	2023112	0	True				
ANR	2023228	AssignmentExpression	state = 1		2023112	0		=			
ANR	2023229	Identifier	state		2023112	0					
ANR	2023230	PrimaryExpression	1		2023112	1					
ANR	2023231	IfStatement	if ( c != '/' )		2023112	1					
ANR	2023232	Condition	c != '/'	4568:9:110151:110158	2023112	0	True				
ANR	2023233	EqualityExpression	c != '/'		2023112	0		!=			
ANR	2023234	Identifier	c		2023112	0					
ANR	2023235	PrimaryExpression	'/'		2023112	1					
ANR	2023236	CompoundStatement		33:19:512:512	2023112	1					
ANR	2023237	ExpressionStatement	* ( n ++ ) = c	4569:6:110169:110179	2023112	0	True				
ANR	2023238	AssignmentExpression	* ( n ++ ) = c		2023112	0		=			
ANR	2023239	UnaryOperationExpression	* ( n ++ )		2023112	0					
ANR	2023240	UnaryOperator	*		2023112	0					
ANR	2023241	PostIncDecOperationExpression	n ++		2023112	1					
ANR	2023242	Identifier	n		2023112	0					
ANR	2023243	IncDec	++		2023112	1					
ANR	2023244	Identifier	c		2023112	1					
ANR	2023245	ElseStatement	else		2023112	0					
ANR	2023246	CompoundStatement		36:11:550:550	2023112	0					
ANR	2023247	IfStatement	if ( state == 1 )		2023112	0					
ANR	2023248	Condition	state == 1	4572:9:110210:110219	2023112	0	True				
ANR	2023249	EqualityExpression	state == 1		2023112	0		==			
ANR	2023250	Identifier	state		2023112	0					
ANR	2023251	PrimaryExpression	1		2023112	1					
ANR	2023252	ExpressionStatement	done = 1	4573:6:110228:110234	2023112	1	True				
ANR	2023253	AssignmentExpression	done = 1		2023112	0		=			
ANR	2023254	Identifier	done		2023112	0					
ANR	2023255	PrimaryExpression	1		2023112	1					
ANR	2023256	BreakStatement	break ;	4575:4:110246:110251	2023112	8	True				
ANR	2023257	ExpressionStatement	c = tolower ( * ( ++ t ) )	4577:2:110259:110278	2023112	1	True				
ANR	2023258	AssignmentExpression	c = tolower ( * ( ++ t ) )		2023112	0		=			
ANR	2023259	Identifier	c		2023112	0					
ANR	2023260	CallExpression	tolower ( * ( ++ t ) )		2023112	1					
ANR	2023261	Callee	tolower		2023112	0					
ANR	2023262	Identifier	tolower		2023112	0					
ANR	2023263	ArgumentList	* ( ++ t )		2023112	1					
ANR	2023264	Argument	* ( ++ t )		2023112	0					
ANR	2023265	UnaryOperationExpression	* ( ++ t )		2023112	0					
ANR	2023266	UnaryOperator	*		2023112	0					
ANR	2023267	UnaryExpression	++ t		2023112	1					
ANR	2023268	IncDec	++		2023112	0					
ANR	2023269	Identifier	t		2023112	1					
ANR	2023270	ExpressionStatement	* ( n ++ ) = '>'	4579:1:110284:110296	2023112	9	True				
ANR	2023271	AssignmentExpression	* ( n ++ ) = '>'		2023112	0		=			
ANR	2023272	UnaryOperationExpression	* ( n ++ )		2023112	0					
ANR	2023273	UnaryOperator	*		2023112	0					
ANR	2023274	PostIncDecOperationExpression	n ++		2023112	1					
ANR	2023275	Identifier	n		2023112	0					
ANR	2023276	IncDec	++		2023112	1					
ANR	2023277	PrimaryExpression	'>'		2023112	1					
ANR	2023278	ExpressionStatement	* n = '\\0'	4580:1:110299:110308	2023112	10	True				
ANR	2023279	AssignmentExpression	* n = '\\0'		2023112	0		=			
ANR	2023280	UnaryOperationExpression	* n		2023112	0					
ANR	2023281	UnaryOperator	*		2023112	0					
ANR	2023282	Identifier	n		2023112	1					
ANR	2023283	PrimaryExpression	'\\0'		2023112	1					
ANR	2023284	IfStatement	"if ( strstr ( set , norm ) )"		2023112	11					
ANR	2023285	Condition	"strstr ( set , norm )"	4581:5:110315:110331	2023112	0	True				
ANR	2023286	CallExpression	"strstr ( set , norm )"		2023112	0					
ANR	2023287	Callee	strstr		2023112	0					
ANR	2023288	Identifier	strstr		2023112	0					
ANR	2023289	ArgumentList	set		2023112	1					
ANR	2023290	Argument	set		2023112	0					
ANR	2023291	Identifier	set		2023112	0					
ANR	2023292	Argument	norm		2023112	1					
ANR	2023293	Identifier	norm		2023112	0					
ANR	2023294	CompoundStatement		46:24:685:685	2023112	1					
ANR	2023295	ExpressionStatement	done = 1	4582:2:110338:110344	2023112	0	True				
ANR	2023296	AssignmentExpression	done = 1		2023112	0		=			
ANR	2023297	Identifier	done		2023112	0					
ANR	2023298	PrimaryExpression	1		2023112	1					
ANR	2023299	ElseStatement	else		2023112	0					
ANR	2023300	CompoundStatement		48:8:705:705	2023112	0					
ANR	2023301	ExpressionStatement	done = 0	4584:2:110358:110364	2023112	0	True				
ANR	2023302	AssignmentExpression	done = 0		2023112	0		=			
ANR	2023303	Identifier	done		2023112	0					
ANR	2023304	PrimaryExpression	0		2023112	1					
ANR	2023305	ExpressionStatement	efree ( norm )	4586:1:110370:110381	2023112	12	True				
ANR	2023306	CallExpression	efree ( norm )		2023112	0					
ANR	2023307	Callee	efree		2023112	0					
ANR	2023308	Identifier	efree		2023112	0					
ANR	2023309	ArgumentList	norm		2023112	1					
ANR	2023310	Argument	norm		2023112	0					
ANR	2023311	Identifier	norm		2023112	0					
ANR	2023312	ReturnStatement	return done ;	4587:1:110384:110395	2023112	13	True				
ANR	2023313	Identifier	done		2023112	0					
ANR	2023314	ReturnType	int		2023112	1					
ANR	2023315	Identifier	php_tag_find		2023112	2					
ANR	2023316	ParameterList	"char * tag , int len , char * set"		2023112	3					
ANR	2023317	Parameter	char * tag	4536:17:109617:109625	2023112	0	True				
ANR	2023318	ParameterType	char *		2023112	0					
ANR	2023319	Identifier	tag		2023112	1					
ANR	2023320	Parameter	int len	4536:28:109628:109634	2023112	1	True				
ANR	2023321	ParameterType	int		2023112	0					
ANR	2023322	Identifier	len		2023112	1					
ANR	2023323	Parameter	char * set	4536:37:109637:109645	2023112	2	True				
ANR	2023324	ParameterType	char *		2023112	0					
ANR	2023325	Identifier	set		2023112	1					
ANR	2023326	CFGEntryNode	ENTRY		2023112		True				
ANR	2023327	CFGExitNode	EXIT		2023112		True				
ANR	2023328	Symbol	set		2023112						
ANR	2023329	Symbol	c		2023112						
ANR	2023330	Symbol	tolower		2023112						
ANR	2023331	Symbol	isspace		2023112						
ANR	2023332	Symbol	done		2023112						
ANR	2023333	Symbol	n		2023112						
ANR	2023334	Symbol	norm		2023112						
ANR	2023335	Symbol	emalloc		2023112						
ANR	2023336	Symbol	len		2023112						
ANR	2023337	Symbol	t		2023112						
ANR	2023338	Symbol	* ( n ++ )		2023112						
ANR	2023339	Symbol	* ( ++ t )		2023112						
ANR	2023340	Symbol	strstr		2023112						
ANR	2023341	Symbol	* n		2023112						
ANR	2023342	Symbol	tag		2023112						
ANR	2023343	Symbol	state		2023112						
ANR	2023344	Symbol	* t		2023112						
ANR	2023345	Function	php_strip_tags	4591:0:110410:110584							
ANR	2023346	FunctionDef	"php_strip_tags (char * rbuf , int len , int * stateptr , char * allow , int allow_len)"		2023345	0					
ANR	2023347	CompoundStatement		4592:0:110513:110584	2023345	0					
ANR	2023348	ReturnStatement	"return php_strip_tags_ex ( rbuf , len , stateptr , allow , allow_len , 0 ) ;"	4593:1:110516:110582	2023345	0	True				
ANR	2023349	CallExpression	"php_strip_tags_ex ( rbuf , len , stateptr , allow , allow_len , 0 )"		2023345	0					
ANR	2023350	Callee	php_strip_tags_ex		2023345	0					
ANR	2023351	Identifier	php_strip_tags_ex		2023345	0					
ANR	2023352	ArgumentList	rbuf		2023345	1					
ANR	2023353	Argument	rbuf		2023345	0					
ANR	2023354	Identifier	rbuf		2023345	0					
ANR	2023355	Argument	len		2023345	1					
ANR	2023356	Identifier	len		2023345	0					
ANR	2023357	Argument	stateptr		2023345	2					
ANR	2023358	Identifier	stateptr		2023345	0					
ANR	2023359	Argument	allow		2023345	3					
ANR	2023360	Identifier	allow		2023345	0					
ANR	2023361	Argument	allow_len		2023345	4					
ANR	2023362	Identifier	allow_len		2023345	0					
ANR	2023363	Argument	0		2023345	5					
ANR	2023364	PrimaryExpression	0		2023345	0					
ANR	2023365	ReturnType	PHPAPI size_t		2023345	1					
ANR	2023366	Identifier	php_strip_tags		2023345	2					
ANR	2023367	ParameterList	"char * rbuf , int len , int * stateptr , char * allow , int allow_len"		2023345	3					
ANR	2023368	Parameter	char * rbuf	4591:29:110439:110448	2023345	0	True				
ANR	2023369	ParameterType	char *		2023345	0					
ANR	2023370	Identifier	rbuf		2023345	1					
ANR	2023371	Parameter	int len	4591:41:110451:110457	2023345	1	True				
ANR	2023372	ParameterType	int		2023345	0					
ANR	2023373	Identifier	len		2023345	1					
ANR	2023374	Parameter	int * stateptr	4591:50:110460:110472	2023345	2	True				
ANR	2023375	ParameterType	int *		2023345	0					
ANR	2023376	Identifier	stateptr		2023345	1					
ANR	2023377	Parameter	char * allow	4591:65:110475:110485	2023345	3	True				
ANR	2023378	ParameterType	char *		2023345	0					
ANR	2023379	Identifier	allow		2023345	1					
ANR	2023380	Parameter	int allow_len	4591:78:110488:110500	2023345	4	True				
ANR	2023381	ParameterType	int		2023345	0					
ANR	2023382	Identifier	allow_len		2023345	1					
ANR	2023383	CFGEntryNode	ENTRY		2023345		True				
ANR	2023384	CFGExitNode	EXIT		2023345		True				
ANR	2023385	Symbol	allow		2023345						
ANR	2023386	Symbol	php_strip_tags_ex		2023345						
ANR	2023387	Symbol	rbuf		2023345						
ANR	2023388	Symbol	len		2023345						
ANR	2023389	Symbol	allow_len		2023345						
ANR	2023390	Symbol	stateptr		2023345						
ANR	2023391	Function	php_strip_tags_ex	4617:0:111238:116782							
ANR	2023392	FunctionDef	"php_strip_tags_ex (char * rbuf , int len , int * stateptr , char * allow , int allow_len , zend_bool allow_tag_spaces)"		2023391	0					
ANR	2023393	CompoundStatement		4618:0:111362:116782	2023391	0					
ANR	2023394	IdentifierDeclStatement	"char * tbuf , * buf , * p , * tp , * rp , c , lc ;"	4619:1:111365:111402	2023391	0	True				
ANR	2023395	IdentifierDecl	* tbuf		2023391	0					
ANR	2023396	IdentifierDeclType	char *		2023391	0					
ANR	2023397	Identifier	tbuf		2023391	1					
ANR	2023398	IdentifierDecl	* buf		2023391	1					
ANR	2023399	IdentifierDeclType	char *		2023391	0					
ANR	2023400	Identifier	buf		2023391	1					
ANR	2023401	IdentifierDecl	* p		2023391	2					
ANR	2023402	IdentifierDeclType	char *		2023391	0					
ANR	2023403	Identifier	p		2023391	1					
ANR	2023404	IdentifierDecl	* tp		2023391	3					
ANR	2023405	IdentifierDeclType	char *		2023391	0					
ANR	2023406	Identifier	tp		2023391	1					
ANR	2023407	IdentifierDecl	* rp		2023391	4					
ANR	2023408	IdentifierDeclType	char *		2023391	0					
ANR	2023409	Identifier	rp		2023391	1					
ANR	2023410	IdentifierDecl	c		2023391	5					
ANR	2023411	IdentifierDeclType	char		2023391	0					
ANR	2023412	Identifier	c		2023391	1					
ANR	2023413	IdentifierDecl	lc		2023391	6					
ANR	2023414	IdentifierDeclType	char		2023391	0					
ANR	2023415	Identifier	lc		2023391	1					
ANR	2023416	IdentifierDeclStatement	"int br , i = 0 , depth = 0 , in_q = 0 ;"	4620:1:111405:111435	2023391	1	True				
ANR	2023417	IdentifierDecl	br		2023391	0					
ANR	2023418	IdentifierDeclType	int		2023391	0					
ANR	2023419	Identifier	br		2023391	1					
ANR	2023420	IdentifierDecl	i = 0		2023391	1					
ANR	2023421	IdentifierDeclType	int		2023391	0					
ANR	2023422	Identifier	i		2023391	1					
ANR	2023423	AssignmentExpression	i = 0		2023391	2		=			
ANR	2023424	Identifier	i		2023391	0					
ANR	2023425	PrimaryExpression	0		2023391	1					
ANR	2023426	IdentifierDecl	depth = 0		2023391	2					
ANR	2023427	IdentifierDeclType	int		2023391	0					
ANR	2023428	Identifier	depth		2023391	1					
ANR	2023429	AssignmentExpression	depth = 0		2023391	2		=			
ANR	2023430	Identifier	depth		2023391	0					
ANR	2023431	PrimaryExpression	0		2023391	1					
ANR	2023432	IdentifierDecl	in_q = 0		2023391	3					
ANR	2023433	IdentifierDeclType	int		2023391	0					
ANR	2023434	Identifier	in_q		2023391	1					
ANR	2023435	AssignmentExpression	in_q = 0		2023391	2		=			
ANR	2023436	Identifier	in_q		2023391	0					
ANR	2023437	PrimaryExpression	0		2023391	1					
ANR	2023438	IdentifierDeclStatement	"int state = 0 , pos ;"	4621:1:111438:111456	2023391	2	True				
ANR	2023439	IdentifierDecl	state = 0		2023391	0					
ANR	2023440	IdentifierDeclType	int		2023391	0					
ANR	2023441	Identifier	state		2023391	1					
ANR	2023442	AssignmentExpression	state = 0		2023391	2		=			
ANR	2023443	Identifier	state		2023391	0					
ANR	2023444	PrimaryExpression	0		2023391	1					
ANR	2023445	IdentifierDecl	pos		2023391	1					
ANR	2023446	IdentifierDeclType	int		2023391	0					
ANR	2023447	Identifier	pos		2023391	1					
ANR	2023448	IdentifierDeclStatement	char * allow_free = NULL ;	4622:1:111459:111482	2023391	3	True				
ANR	2023449	IdentifierDecl	* allow_free = NULL		2023391	0					
ANR	2023450	IdentifierDeclType	char *		2023391	0					
ANR	2023451	Identifier	allow_free		2023391	1					
ANR	2023452	AssignmentExpression	* allow_free = NULL		2023391	2		=			
ANR	2023453	Identifier	NULL		2023391	0					
ANR	2023454	Identifier	NULL		2023391	1					
ANR	2023455	IdentifierDeclStatement	char is_xml = 0 ;	4623:1:111485:111500	2023391	4	True				
ANR	2023456	IdentifierDecl	is_xml = 0		2023391	0					
ANR	2023457	IdentifierDeclType	char		2023391	0					
ANR	2023458	Identifier	is_xml		2023391	1					
ANR	2023459	AssignmentExpression	is_xml = 0		2023391	2		=			
ANR	2023460	Identifier	is_xml		2023391	0					
ANR	2023461	PrimaryExpression	0		2023391	1					
ANR	2023462	IfStatement	if ( stateptr )		2023391	5					
ANR	2023463	Condition	stateptr	4625:5:111508:111515	2023391	0	True				
ANR	2023464	Identifier	stateptr		2023391	0					
ANR	2023465	ExpressionStatement	state = * stateptr	4626:2:111520:111537	2023391	1	True				
ANR	2023466	AssignmentExpression	state = * stateptr		2023391	0		=			
ANR	2023467	Identifier	state		2023391	0					
ANR	2023468	UnaryOperationExpression	* stateptr		2023391	1					
ANR	2023469	UnaryOperator	*		2023391	0					
ANR	2023470	Identifier	stateptr		2023391	1					
ANR	2023471	ExpressionStatement	"buf = estrndup ( rbuf , len )"	4628:1:111541:111566	2023391	6	True				
ANR	2023472	AssignmentExpression	"buf = estrndup ( rbuf , len )"		2023391	0		=			
ANR	2023473	Identifier	buf		2023391	0					
ANR	2023474	CallExpression	"estrndup ( rbuf , len )"		2023391	1					
ANR	2023475	Callee	estrndup		2023391	0					
ANR	2023476	Identifier	estrndup		2023391	0					
ANR	2023477	ArgumentList	rbuf		2023391	1					
ANR	2023478	Argument	rbuf		2023391	0					
ANR	2023479	Identifier	rbuf		2023391	0					
ANR	2023480	Argument	len		2023391	1					
ANR	2023481	Identifier	len		2023391	0					
ANR	2023482	ExpressionStatement	c = * buf	4629:1:111569:111577	2023391	7	True				
ANR	2023483	AssignmentExpression	c = * buf		2023391	0		=			
ANR	2023484	Identifier	c		2023391	0					
ANR	2023485	UnaryOperationExpression	* buf		2023391	1					
ANR	2023486	UnaryOperator	*		2023391	0					
ANR	2023487	Identifier	buf		2023391	1					
ANR	2023488	ExpressionStatement	lc = '\\0'	4630:1:111580:111589	2023391	8	True				
ANR	2023489	AssignmentExpression	lc = '\\0'		2023391	0		=			
ANR	2023490	Identifier	lc		2023391	0					
ANR	2023491	PrimaryExpression	'\\0'		2023391	1					
ANR	2023492	ExpressionStatement	p = buf	4631:1:111592:111599	2023391	9	True				
ANR	2023493	AssignmentExpression	p = buf		2023391	0		=			
ANR	2023494	Identifier	p		2023391	0					
ANR	2023495	Identifier	buf		2023391	1					
ANR	2023496	ExpressionStatement	rp = rbuf	4632:1:111602:111611	2023391	10	True				
ANR	2023497	AssignmentExpression	rp = rbuf		2023391	0		=			
ANR	2023498	Identifier	rp		2023391	0					
ANR	2023499	Identifier	rbuf		2023391	1					
ANR	2023500	ExpressionStatement	br = 0	4633:1:111614:111620	2023391	11	True				
ANR	2023501	AssignmentExpression	br = 0		2023391	0		=			
ANR	2023502	Identifier	br		2023391	0					
ANR	2023503	PrimaryExpression	0		2023391	1					
ANR	2023504	IfStatement	if ( allow )		2023391	12					
ANR	2023505	Condition	allow	4634:5:111627:111631	2023391	0	True				
ANR	2023506	Identifier	allow		2023391	0					
ANR	2023507	CompoundStatement		17:12:271:271	2023391	1					
ANR	2023508	IfStatement	if ( IS_INTERNED ( allow ) )		2023391	0					
ANR	2023509	Condition	IS_INTERNED ( allow )	4635:6:111642:111659	2023391	0	True				
ANR	2023510	CallExpression	IS_INTERNED ( allow )		2023391	0					
ANR	2023511	Callee	IS_INTERNED		2023391	0					
ANR	2023512	Identifier	IS_INTERNED		2023391	0					
ANR	2023513	ArgumentList	allow		2023391	1					
ANR	2023514	Argument	allow		2023391	0					
ANR	2023515	Identifier	allow		2023391	0					
ANR	2023516	CompoundStatement		18:26:299:299	2023391	1					
ANR	2023517	ExpressionStatement	"allow_free = allow = zend_str_tolower_dup ( allow , allow_len )"	4636:3:111667:111726	2023391	0	True				
ANR	2023518	AssignmentExpression	"allow_free = allow = zend_str_tolower_dup ( allow , allow_len )"		2023391	0		=			
ANR	2023519	Identifier	allow_free		2023391	0					
ANR	2023520	AssignmentExpression	"allow = zend_str_tolower_dup ( allow , allow_len )"		2023391	1		=			
ANR	2023521	Identifier	allow		2023391	0					
ANR	2023522	CallExpression	"zend_str_tolower_dup ( allow , allow_len )"		2023391	1					
ANR	2023523	Callee	zend_str_tolower_dup		2023391	0					
ANR	2023524	Identifier	zend_str_tolower_dup		2023391	0					
ANR	2023525	ArgumentList	allow		2023391	1					
ANR	2023526	Argument	allow		2023391	0					
ANR	2023527	Identifier	allow		2023391	0					
ANR	2023528	Argument	allow_len		2023391	1					
ANR	2023529	Identifier	allow_len		2023391	0					
ANR	2023530	ElseStatement	else		2023391	0					
ANR	2023531	CompoundStatement		20:9:374:374	2023391	0					
ANR	2023532	ExpressionStatement	allow_free = NULL	4638:3:111742:111759	2023391	0	True				
ANR	2023533	AssignmentExpression	allow_free = NULL		2023391	0		=			
ANR	2023534	Identifier	allow_free		2023391	0					
ANR	2023535	Identifier	NULL		2023391	1					
ANR	2023536	ExpressionStatement	"php_strtolower ( allow , allow_len )"	4639:3:111764:111796	2023391	1	True				
ANR	2023537	CallExpression	"php_strtolower ( allow , allow_len )"		2023391	0					
ANR	2023538	Callee	php_strtolower		2023391	0					
ANR	2023539	Identifier	php_strtolower		2023391	0					
ANR	2023540	ArgumentList	allow		2023391	1					
ANR	2023541	Argument	allow		2023391	0					
ANR	2023542	Identifier	allow		2023391	0					
ANR	2023543	Argument	allow_len		2023391	1					
ANR	2023544	Identifier	allow_len		2023391	0					
ANR	2023545	ExpressionStatement	tbuf = emalloc ( PHP_TAG_BUF_SIZE + 1 )	4641:2:111804:111840	2023391	1	True				
ANR	2023546	AssignmentExpression	tbuf = emalloc ( PHP_TAG_BUF_SIZE + 1 )		2023391	0		=			
ANR	2023547	Identifier	tbuf		2023391	0					
ANR	2023548	CallExpression	emalloc ( PHP_TAG_BUF_SIZE + 1 )		2023391	1					
ANR	2023549	Callee	emalloc		2023391	0					
ANR	2023550	Identifier	emalloc		2023391	0					
ANR	2023551	ArgumentList	PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2023552	Argument	PHP_TAG_BUF_SIZE + 1		2023391	0					
ANR	2023553	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2023554	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2023555	PrimaryExpression	1		2023391	1					
ANR	2023556	ExpressionStatement	tp = tbuf	4642:2:111844:111853	2023391	2	True				
ANR	2023557	AssignmentExpression	tp = tbuf		2023391	0		=			
ANR	2023558	Identifier	tp		2023391	0					
ANR	2023559	Identifier	tbuf		2023391	1					
ANR	2023560	ElseStatement	else		2023391	0					
ANR	2023561	CompoundStatement		26:8:500:500	2023391	0					
ANR	2023562	ExpressionStatement	tbuf = tp = NULL	4644:2:111867:111883	2023391	0	True				
ANR	2023563	AssignmentExpression	tbuf = tp = NULL		2023391	0		=			
ANR	2023564	Identifier	tbuf		2023391	0					
ANR	2023565	AssignmentExpression	tp = NULL		2023391	1		=			
ANR	2023566	Identifier	tp		2023391	0					
ANR	2023567	Identifier	NULL		2023391	1					
ANR	2023568	WhileStatement	while ( i < len )		2023391	13					
ANR	2023569	Condition	i < len	4647:8:111897:111903	2023391	0	True				
ANR	2023570	RelationalExpression	i < len		2023391	0		<			
ANR	2023571	Identifier	i		2023391	0					
ANR	2023572	Identifier	len		2023391	1					
ANR	2023573	CompoundStatement		30:17:543:543	2023391	1					
ANR	2023574	SwitchStatement	switch ( c )		2023391	0					
ANR	2023575	Condition	c	4648:10:111918:111918	2023391	0	True				
ANR	2023576	Identifier	c		2023391	0					
ANR	2023577	CompoundStatement		31:13:558:558	2023391	1					
ANR	2023578	Label	case '\\0' :	4649:3:111926:111935	2023391	0	True				
ANR	2023579	BreakStatement	break ;	4650:4:111941:111946	2023391	1	True				
ANR	2023580	Label	case '<' :	4651:3:111951:111959	2023391	2	True				
ANR	2023581	IfStatement	if ( in_q )		2023391	3					
ANR	2023582	Condition	in_q	4652:8:111969:111972	2023391	0	True				
ANR	2023583	Identifier	in_q		2023391	0					
ANR	2023584	CompoundStatement		35:14:612:612	2023391	1					
ANR	2023585	BreakStatement	break ;	4653:5:111982:111987	2023391	0	True				
ANR	2023586	IfStatement	if ( isspace ( * ( p + 1 ) ) && ! allow_tag_spaces )		2023391	4					
ANR	2023587	Condition	isspace ( * ( p + 1 ) ) && ! allow_tag_spaces	4655:8:112003:112040	2023391	0	True				
ANR	2023588	AndExpression	isspace ( * ( p + 1 ) ) && ! allow_tag_spaces		2023391	0		&&			
ANR	2023589	CallExpression	isspace ( * ( p + 1 ) )		2023391	0					
ANR	2023590	Callee	isspace		2023391	0					
ANR	2023591	Identifier	isspace		2023391	0					
ANR	2023592	ArgumentList	* ( p + 1 )		2023391	1					
ANR	2023593	Argument	* ( p + 1 )		2023391	0					
ANR	2023594	UnaryOperationExpression	* ( p + 1 )		2023391	0					
ANR	2023595	UnaryOperator	*		2023391	0					
ANR	2023596	AdditiveExpression	p + 1		2023391	1		+			
ANR	2023597	Identifier	p		2023391	0					
ANR	2023598	PrimaryExpression	1		2023391	1					
ANR	2023599	UnaryOperationExpression	! allow_tag_spaces		2023391	1					
ANR	2023600	UnaryOperator	!		2023391	0					
ANR	2023601	Identifier	allow_tag_spaces		2023391	1					
ANR	2023602	CompoundStatement		38:48:680:680	2023391	1					
ANR	2023603	GotoStatement	goto reg_char ;	4656:5:112050:112063	2023391	0	True				
ANR	2023604	Identifier	reg_char		2023391	0					
ANR	2023605	IfStatement	if ( state == 0 )		2023391	5					
ANR	2023606	Condition	state == 0	4658:8:112079:112088	2023391	0	True				
ANR	2023607	EqualityExpression	state == 0		2023391	0		==			
ANR	2023608	Identifier	state		2023391	0					
ANR	2023609	PrimaryExpression	0		2023391	1					
ANR	2023610	CompoundStatement		41:20:728:728	2023391	1					
ANR	2023611	ExpressionStatement	lc = '<'	4659:5:112098:112106	2023391	0	True				
ANR	2023612	AssignmentExpression	lc = '<'		2023391	0		=			
ANR	2023613	Identifier	lc		2023391	0					
ANR	2023614	PrimaryExpression	'<'		2023391	1					
ANR	2023615	ExpressionStatement	state = 1	4660:5:112113:112122	2023391	1	True				
ANR	2023616	AssignmentExpression	state = 1		2023391	0		=			
ANR	2023617	Identifier	state		2023391	0					
ANR	2023618	PrimaryExpression	1		2023391	1					
ANR	2023619	IfStatement	if ( allow )		2023391	2					
ANR	2023620	Condition	allow	4661:9:112133:112137	2023391	0	True				
ANR	2023621	Identifier	allow		2023391	0					
ANR	2023622	CompoundStatement		44:16:777:777	2023391	1					
ANR	2023623	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2023624	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4662:10:112152:112180	2023391	0	True				
ANR	2023625	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2023626	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023627	Identifier	tp		2023391	0					
ANR	2023628	Identifier	tbuf		2023391	1					
ANR	2023629	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2023630	CompoundStatement		45:41:820:820	2023391	1					
ANR	2023631	ExpressionStatement	pos = tp - tbuf	4663:7:112192:112207	2023391	0	True				
ANR	2023632	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2023633	Identifier	pos		2023391	0					
ANR	2023634	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2023635	Identifier	tp		2023391	0					
ANR	2023636	Identifier	tbuf		2023391	1					
ANR	2023637	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4664:7:112216:112273	2023391	1	True				
ANR	2023638	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2023639	Identifier	tbuf		2023391	0					
ANR	2023640	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2023641	Callee	erealloc		2023391	0					
ANR	2023642	Identifier	erealloc		2023391	0					
ANR	2023643	ArgumentList	tbuf		2023391	1					
ANR	2023644	Argument	tbuf		2023391	0					
ANR	2023645	Identifier	tbuf		2023391	0					
ANR	2023646	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2023647	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2023648	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023649	Identifier	tp		2023391	0					
ANR	2023650	Identifier	tbuf		2023391	1					
ANR	2023651	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2023652	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2023653	PrimaryExpression	1		2023391	1					
ANR	2023654	ExpressionStatement	tp = tbuf + pos	4665:7:112282:112297	2023391	2	True				
ANR	2023655	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2023656	Identifier	tp		2023391	0					
ANR	2023657	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2023658	Identifier	tbuf		2023391	0					
ANR	2023659	Identifier	pos		2023391	1					
ANR	2023660	ExpressionStatement	* ( tp ++ ) = '<'	4667:6:112313:112326	2023391	1	True				
ANR	2023661	AssignmentExpression	* ( tp ++ ) = '<'		2023391	0		=			
ANR	2023662	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2023663	UnaryOperator	*		2023391	0					
ANR	2023664	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2023665	Identifier	tp		2023391	0					
ANR	2023666	IncDec	++		2023391	1					
ANR	2023667	PrimaryExpression	'<'		2023391	1					
ANR	2023668	ElseStatement	else		2023391	0					
ANR	2023669	IfStatement	if ( state == 1 )		2023391	0					
ANR	2023670	Condition	state == 1	4669:15:112351:112360	2023391	0	True				
ANR	2023671	EqualityExpression	state == 1		2023391	0		==			
ANR	2023672	Identifier	state		2023391	0					
ANR	2023673	PrimaryExpression	1		2023391	1					
ANR	2023674	CompoundStatement		52:27:1000:1000	2023391	1					
ANR	2023675	ExpressionStatement	depth ++	4670:5:112370:112377	2023391	0	True				
ANR	2023676	PostIncDecOperationExpression	depth ++		2023391	0					
ANR	2023677	Identifier	depth		2023391	0					
ANR	2023678	IncDec	++		2023391	1					
ANR	2023679	BreakStatement	break ;	4672:4:112389:112394	2023391	6	True				
ANR	2023680	Label	case '(' :	4674:3:112400:112408	2023391	7	True				
ANR	2023681	IfStatement	if ( state == 2 )		2023391	8					
ANR	2023682	Condition	state == 2	4675:8:112418:112427	2023391	0	True				
ANR	2023683	EqualityExpression	state == 2		2023391	0		==			
ANR	2023684	Identifier	state		2023391	0					
ANR	2023685	PrimaryExpression	2		2023391	1					
ANR	2023686	CompoundStatement		58:20:1067:1067	2023391	1					
ANR	2023687	IfStatement	"if ( lc != '""' && lc != '\\'' )"		2023391	0					
ANR	2023688	Condition	"lc != '""' && lc != '\\''"	4676:9:112441:112463	2023391	0	True				
ANR	2023689	AndExpression	"lc != '""' && lc != '\\''"		2023391	0		&&			
ANR	2023690	EqualityExpression	"lc != '""'"		2023391	0		!=			
ANR	2023691	Identifier	lc		2023391	0					
ANR	2023692	PrimaryExpression	"'""'"		2023391	1					
ANR	2023693	EqualityExpression	lc != '\\''		2023391	1		!=			
ANR	2023694	Identifier	lc		2023391	0					
ANR	2023695	PrimaryExpression	'\\''		2023391	1					
ANR	2023696	CompoundStatement		59:34:1103:1103	2023391	1					
ANR	2023697	ExpressionStatement	lc = '('	4677:6:112474:112482	2023391	0	True				
ANR	2023698	AssignmentExpression	lc = '('		2023391	0		=			
ANR	2023699	Identifier	lc		2023391	0					
ANR	2023700	PrimaryExpression	'('		2023391	1					
ANR	2023701	ExpressionStatement	br ++	4678:6:112490:112494	2023391	1	True				
ANR	2023702	PostIncDecOperationExpression	br ++		2023391	0					
ANR	2023703	Identifier	br		2023391	0					
ANR	2023704	IncDec	++		2023391	1					
ANR	2023705	ElseStatement	else		2023391	0					
ANR	2023706	IfStatement	if ( allow && state == 1 )		2023391	0					
ANR	2023707	Condition	allow && state == 1	4680:15:112518:112536	2023391	0	True				
ANR	2023708	AndExpression	allow && state == 1		2023391	0		&&			
ANR	2023709	Identifier	allow		2023391	0					
ANR	2023710	EqualityExpression	state == 1		2023391	1		==			
ANR	2023711	Identifier	state		2023391	0					
ANR	2023712	PrimaryExpression	1		2023391	1					
ANR	2023713	CompoundStatement		63:36:1176:1176	2023391	1					
ANR	2023714	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2023715	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4681:9:112550:112578	2023391	0	True				
ANR	2023716	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2023717	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023718	Identifier	tp		2023391	0					
ANR	2023719	Identifier	tbuf		2023391	1					
ANR	2023720	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2023721	CompoundStatement		64:40:1218:1218	2023391	1					
ANR	2023722	ExpressionStatement	pos = tp - tbuf	4682:6:112589:112604	2023391	0	True				
ANR	2023723	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2023724	Identifier	pos		2023391	0					
ANR	2023725	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2023726	Identifier	tp		2023391	0					
ANR	2023727	Identifier	tbuf		2023391	1					
ANR	2023728	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4683:6:112612:112669	2023391	1	True				
ANR	2023729	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2023730	Identifier	tbuf		2023391	0					
ANR	2023731	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2023732	Callee	erealloc		2023391	0					
ANR	2023733	Identifier	erealloc		2023391	0					
ANR	2023734	ArgumentList	tbuf		2023391	1					
ANR	2023735	Argument	tbuf		2023391	0					
ANR	2023736	Identifier	tbuf		2023391	0					
ANR	2023737	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2023738	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2023739	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023740	Identifier	tp		2023391	0					
ANR	2023741	Identifier	tbuf		2023391	1					
ANR	2023742	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2023743	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2023744	PrimaryExpression	1		2023391	1					
ANR	2023745	ExpressionStatement	tp = tbuf + pos	4684:6:112677:112692	2023391	2	True				
ANR	2023746	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2023747	Identifier	tp		2023391	0					
ANR	2023748	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2023749	Identifier	tbuf		2023391	0					
ANR	2023750	Identifier	pos		2023391	1					
ANR	2023751	ExpressionStatement	* ( tp ++ ) = c	4686:5:112706:112717	2023391	1	True				
ANR	2023752	AssignmentExpression	* ( tp ++ ) = c		2023391	0		=			
ANR	2023753	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2023754	UnaryOperator	*		2023391	0					
ANR	2023755	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2023756	Identifier	tp		2023391	0					
ANR	2023757	IncDec	++		2023391	1					
ANR	2023758	Identifier	c		2023391	1					
ANR	2023759	ElseStatement	else		2023391	0					
ANR	2023760	IfStatement	if ( state == 0 )		2023391	0					
ANR	2023761	Condition	state == 0	4687:15:112734:112743	2023391	0	True				
ANR	2023762	EqualityExpression	state == 0		2023391	0		==			
ANR	2023763	Identifier	state		2023391	0					
ANR	2023764	PrimaryExpression	0		2023391	1					
ANR	2023765	CompoundStatement		70:27:1383:1383	2023391	1					
ANR	2023766	ExpressionStatement	* ( rp ++ ) = c	4688:5:112753:112764	2023391	0	True				
ANR	2023767	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2023768	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2023769	UnaryOperator	*		2023391	0					
ANR	2023770	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2023771	Identifier	rp		2023391	0					
ANR	2023772	IncDec	++		2023391	1					
ANR	2023773	Identifier	c		2023391	1					
ANR	2023774	BreakStatement	break ;	4690:4:112776:112781	2023391	9	True				
ANR	2023775	Label	case ')' :	4692:3:112787:112795	2023391	10	True				
ANR	2023776	IfStatement	if ( state == 2 )		2023391	11					
ANR	2023777	Condition	state == 2	4693:8:112805:112814	2023391	0	True				
ANR	2023778	EqualityExpression	state == 2		2023391	0		==			
ANR	2023779	Identifier	state		2023391	0					
ANR	2023780	PrimaryExpression	2		2023391	1					
ANR	2023781	CompoundStatement		76:20:1454:1454	2023391	1					
ANR	2023782	IfStatement	"if ( lc != '""' && lc != '\\'' )"		2023391	0					
ANR	2023783	Condition	"lc != '""' && lc != '\\''"	4694:9:112828:112850	2023391	0	True				
ANR	2023784	AndExpression	"lc != '""' && lc != '\\''"		2023391	0		&&			
ANR	2023785	EqualityExpression	"lc != '""'"		2023391	0		!=			
ANR	2023786	Identifier	lc		2023391	0					
ANR	2023787	PrimaryExpression	"'""'"		2023391	1					
ANR	2023788	EqualityExpression	lc != '\\''		2023391	1		!=			
ANR	2023789	Identifier	lc		2023391	0					
ANR	2023790	PrimaryExpression	'\\''		2023391	1					
ANR	2023791	CompoundStatement		77:34:1490:1490	2023391	1					
ANR	2023792	ExpressionStatement	lc = ')'	4695:6:112861:112869	2023391	0	True				
ANR	2023793	AssignmentExpression	lc = ')'		2023391	0		=			
ANR	2023794	Identifier	lc		2023391	0					
ANR	2023795	PrimaryExpression	')'		2023391	1					
ANR	2023796	ExpressionStatement	br --	4696:6:112877:112881	2023391	1	True				
ANR	2023797	PostIncDecOperationExpression	br --		2023391	0					
ANR	2023798	Identifier	br		2023391	0					
ANR	2023799	IncDec	--		2023391	1					
ANR	2023800	ElseStatement	else		2023391	0					
ANR	2023801	IfStatement	if ( allow && state == 1 )		2023391	0					
ANR	2023802	Condition	allow && state == 1	4698:15:112905:112923	2023391	0	True				
ANR	2023803	AndExpression	allow && state == 1		2023391	0		&&			
ANR	2023804	Identifier	allow		2023391	0					
ANR	2023805	EqualityExpression	state == 1		2023391	1		==			
ANR	2023806	Identifier	state		2023391	0					
ANR	2023807	PrimaryExpression	1		2023391	1					
ANR	2023808	CompoundStatement		81:36:1563:1563	2023391	1					
ANR	2023809	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2023810	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4699:9:112937:112965	2023391	0	True				
ANR	2023811	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2023812	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023813	Identifier	tp		2023391	0					
ANR	2023814	Identifier	tbuf		2023391	1					
ANR	2023815	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2023816	CompoundStatement		82:40:1605:1605	2023391	1					
ANR	2023817	ExpressionStatement	pos = tp - tbuf	4700:6:112976:112991	2023391	0	True				
ANR	2023818	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2023819	Identifier	pos		2023391	0					
ANR	2023820	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2023821	Identifier	tp		2023391	0					
ANR	2023822	Identifier	tbuf		2023391	1					
ANR	2023823	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4701:6:112999:113056	2023391	1	True				
ANR	2023824	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2023825	Identifier	tbuf		2023391	0					
ANR	2023826	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2023827	Callee	erealloc		2023391	0					
ANR	2023828	Identifier	erealloc		2023391	0					
ANR	2023829	ArgumentList	tbuf		2023391	1					
ANR	2023830	Argument	tbuf		2023391	0					
ANR	2023831	Identifier	tbuf		2023391	0					
ANR	2023832	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2023833	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2023834	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023835	Identifier	tp		2023391	0					
ANR	2023836	Identifier	tbuf		2023391	1					
ANR	2023837	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2023838	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2023839	PrimaryExpression	1		2023391	1					
ANR	2023840	ExpressionStatement	tp = tbuf + pos	4702:6:113064:113079	2023391	2	True				
ANR	2023841	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2023842	Identifier	tp		2023391	0					
ANR	2023843	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2023844	Identifier	tbuf		2023391	0					
ANR	2023845	Identifier	pos		2023391	1					
ANR	2023846	ExpressionStatement	* ( tp ++ ) = c	4704:5:113093:113104	2023391	1	True				
ANR	2023847	AssignmentExpression	* ( tp ++ ) = c		2023391	0		=			
ANR	2023848	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2023849	UnaryOperator	*		2023391	0					
ANR	2023850	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2023851	Identifier	tp		2023391	0					
ANR	2023852	IncDec	++		2023391	1					
ANR	2023853	Identifier	c		2023391	1					
ANR	2023854	ElseStatement	else		2023391	0					
ANR	2023855	IfStatement	if ( state == 0 )		2023391	0					
ANR	2023856	Condition	state == 0	4705:15:113121:113130	2023391	0	True				
ANR	2023857	EqualityExpression	state == 0		2023391	0		==			
ANR	2023858	Identifier	state		2023391	0					
ANR	2023859	PrimaryExpression	0		2023391	1					
ANR	2023860	CompoundStatement		88:27:1770:1770	2023391	1					
ANR	2023861	ExpressionStatement	* ( rp ++ ) = c	4706:5:113140:113151	2023391	0	True				
ANR	2023862	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2023863	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2023864	UnaryOperator	*		2023391	0					
ANR	2023865	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2023866	Identifier	rp		2023391	0					
ANR	2023867	IncDec	++		2023391	1					
ANR	2023868	Identifier	c		2023391	1					
ANR	2023869	BreakStatement	break ;	4708:4:113163:113168	2023391	12	True				
ANR	2023870	Label	case '>' :	4710:3:113174:113182	2023391	13	True				
ANR	2023871	IfStatement	if ( depth )		2023391	14					
ANR	2023872	Condition	depth	4711:8:113192:113196	2023391	0	True				
ANR	2023873	Identifier	depth		2023391	0					
ANR	2023874	CompoundStatement		94:15:1836:1836	2023391	1					
ANR	2023875	ExpressionStatement	depth --	4712:5:113206:113213	2023391	0	True				
ANR	2023876	PostIncDecOperationExpression	depth --		2023391	0					
ANR	2023877	Identifier	depth		2023391	0					
ANR	2023878	IncDec	--		2023391	1					
ANR	2023879	BreakStatement	break ;	4713:5:113220:113225	2023391	1	True				
ANR	2023880	IfStatement	if ( in_q )		2023391	15					
ANR	2023881	Condition	in_q	4716:8:113242:113245	2023391	0	True				
ANR	2023882	Identifier	in_q		2023391	0					
ANR	2023883	CompoundStatement		99:14:1885:1885	2023391	1					
ANR	2023884	BreakStatement	break ;	4717:5:113255:113260	2023391	0	True				
ANR	2023885	SwitchStatement	switch ( state )		2023391	16					
ANR	2023886	Condition	state	4720:12:113281:113285	2023391	0	True				
ANR	2023887	Identifier	state		2023391	0					
ANR	2023888	CompoundStatement		103:19:1925:1925	2023391	1					
ANR	2023889	Label	case 1 :	4721:5:113295:113301	2023391	0	True				
ANR	2023890	ExpressionStatement	lc = '>'	4722:6:113324:113332	2023391	1	True				
ANR	2023891	AssignmentExpression	lc = '>'		2023391	0		=			
ANR	2023892	Identifier	lc		2023391	0					
ANR	2023893	PrimaryExpression	'>'		2023391	1					
ANR	2023894	IfStatement	if ( is_xml && * ( p - 1 ) == '-' )		2023391	2					
ANR	2023895	Condition	is_xml && * ( p - 1 ) == '-'	4723:10:113344:113367	2023391	0	True				
ANR	2023896	AndExpression	is_xml && * ( p - 1 ) == '-'		2023391	0		&&			
ANR	2023897	Identifier	is_xml		2023391	0					
ANR	2023898	EqualityExpression	* ( p - 1 ) == '-'		2023391	1		==			
ANR	2023899	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2023900	UnaryOperator	*		2023391	0					
ANR	2023901	AdditiveExpression	p - 1		2023391	1		-			
ANR	2023902	Identifier	p		2023391	0					
ANR	2023903	PrimaryExpression	1		2023391	1					
ANR	2023904	PrimaryExpression	'-'		2023391	1					
ANR	2023905	CompoundStatement		106:36:2007:2007	2023391	1					
ANR	2023906	BreakStatement	break ;	4724:7:113379:113384	2023391	0	True				
ANR	2023907	ExpressionStatement	in_q = state = is_xml = 0	4726:6:113400:113425	2023391	3	True				
ANR	2023908	AssignmentExpression	in_q = state = is_xml = 0		2023391	0		=			
ANR	2023909	Identifier	in_q		2023391	0					
ANR	2023910	AssignmentExpression	state = is_xml = 0		2023391	1		=			
ANR	2023911	Identifier	state		2023391	0					
ANR	2023912	AssignmentExpression	is_xml = 0		2023391	1		=			
ANR	2023913	Identifier	is_xml		2023391	0					
ANR	2023914	PrimaryExpression	0		2023391	1					
ANR	2023915	IfStatement	if ( allow )		2023391	4					
ANR	2023916	Condition	allow	4727:10:113437:113441	2023391	0	True				
ANR	2023917	Identifier	allow		2023391	0					
ANR	2023918	CompoundStatement		110:17:2081:2081	2023391	1					
ANR	2023919	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2023920	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4728:11:113457:113485	2023391	0	True				
ANR	2023921	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2023922	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023923	Identifier	tp		2023391	0					
ANR	2023924	Identifier	tbuf		2023391	1					
ANR	2023925	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2023926	CompoundStatement		111:42:2125:2125	2023391	1					
ANR	2023927	ExpressionStatement	pos = tp - tbuf	4729:8:113498:113513	2023391	0	True				
ANR	2023928	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2023929	Identifier	pos		2023391	0					
ANR	2023930	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2023931	Identifier	tp		2023391	0					
ANR	2023932	Identifier	tbuf		2023391	1					
ANR	2023933	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4730:8:113523:113580	2023391	1	True				
ANR	2023934	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2023935	Identifier	tbuf		2023391	0					
ANR	2023936	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2023937	Callee	erealloc		2023391	0					
ANR	2023938	Identifier	erealloc		2023391	0					
ANR	2023939	ArgumentList	tbuf		2023391	1					
ANR	2023940	Argument	tbuf		2023391	0					
ANR	2023941	Identifier	tbuf		2023391	0					
ANR	2023942	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2023943	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2023944	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023945	Identifier	tp		2023391	0					
ANR	2023946	Identifier	tbuf		2023391	1					
ANR	2023947	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2023948	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2023949	PrimaryExpression	1		2023391	1					
ANR	2023950	ExpressionStatement	tp = tbuf + pos	4731:8:113590:113605	2023391	2	True				
ANR	2023951	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2023952	Identifier	tp		2023391	0					
ANR	2023953	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2023954	Identifier	tbuf		2023391	0					
ANR	2023955	Identifier	pos		2023391	1					
ANR	2023956	ExpressionStatement	* ( tp ++ ) = '>'	4733:7:113623:113636	2023391	1	True				
ANR	2023957	AssignmentExpression	* ( tp ++ ) = '>'		2023391	0		=			
ANR	2023958	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2023959	UnaryOperator	*		2023391	0					
ANR	2023960	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2023961	Identifier	tp		2023391	0					
ANR	2023962	IncDec	++		2023391	1					
ANR	2023963	PrimaryExpression	'>'		2023391	1					
ANR	2023964	ExpressionStatement	* tp = '\\0'	4734:7:113645:113653	2023391	2	True				
ANR	2023965	AssignmentExpression	* tp = '\\0'		2023391	0		=			
ANR	2023966	UnaryOperationExpression	* tp		2023391	0					
ANR	2023967	UnaryOperator	*		2023391	0					
ANR	2023968	Identifier	tp		2023391	1					
ANR	2023969	PrimaryExpression	'\\0'		2023391	1					
ANR	2023970	IfStatement	"if ( php_tag_find ( tbuf , tp - tbuf , allow ) )"		2023391	3					
ANR	2023971	Condition	"php_tag_find ( tbuf , tp - tbuf , allow )"	4735:11:113666:113699	2023391	0	True				
ANR	2023972	CallExpression	"php_tag_find ( tbuf , tp - tbuf , allow )"		2023391	0					
ANR	2023973	Callee	php_tag_find		2023391	0					
ANR	2023974	Identifier	php_tag_find		2023391	0					
ANR	2023975	ArgumentList	tbuf		2023391	1					
ANR	2023976	Argument	tbuf		2023391	0					
ANR	2023977	Identifier	tbuf		2023391	0					
ANR	2023978	Argument	tp - tbuf		2023391	1					
ANR	2023979	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023980	Identifier	tp		2023391	0					
ANR	2023981	Identifier	tbuf		2023391	1					
ANR	2023982	Argument	allow		2023391	2					
ANR	2023983	Identifier	allow		2023391	0					
ANR	2023984	CompoundStatement		118:47:2339:2339	2023391	1					
ANR	2023985	ExpressionStatement	"memcpy ( rp , tbuf , tp - tbuf )"	4736:8:113712:113737	2023391	0	True				
ANR	2023986	CallExpression	"memcpy ( rp , tbuf , tp - tbuf )"		2023391	0					
ANR	2023987	Callee	memcpy		2023391	0					
ANR	2023988	Identifier	memcpy		2023391	0					
ANR	2023989	ArgumentList	rp		2023391	1					
ANR	2023990	Argument	rp		2023391	0					
ANR	2023991	Identifier	rp		2023391	0					
ANR	2023992	Argument	tbuf		2023391	1					
ANR	2023993	Identifier	tbuf		2023391	0					
ANR	2023994	Argument	tp - tbuf		2023391	2					
ANR	2023995	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2023996	Identifier	tp		2023391	0					
ANR	2023997	Identifier	tbuf		2023391	1					
ANR	2023998	ExpressionStatement	rp += tp - tbuf	4737:8:113747:113760	2023391	1	True				
ANR	2023999	AssignmentExpression	rp += tp - tbuf		2023391	0		+=			
ANR	2024000	Identifier	rp		2023391	0					
ANR	2024001	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2024002	Identifier	tp		2023391	0					
ANR	2024003	Identifier	tbuf		2023391	1					
ANR	2024004	ExpressionStatement	tp = tbuf	4739:7:113778:113787	2023391	4	True				
ANR	2024005	AssignmentExpression	tp = tbuf		2023391	0		=			
ANR	2024006	Identifier	tp		2023391	0					
ANR	2024007	Identifier	tbuf		2023391	1					
ANR	2024008	BreakStatement	break ;	4741:6:113803:113808	2023391	5	True				
ANR	2024009	Label	case 2 :	4743:5:113816:113822	2023391	6	True				
ANR	2024010	IfStatement	"if ( ! br && lc != '\\""' && * ( p - 1 ) == '?' )"		2023391	7					
ANR	2024011	Condition	"! br && lc != '\\""' && * ( p - 1 ) == '?'"	4744:10:113844:113877	2023391	0	True				
ANR	2024012	AndExpression	"! br && lc != '\\""' && * ( p - 1 ) == '?'"		2023391	0		&&			
ANR	2024013	UnaryOperationExpression	! br		2023391	0					
ANR	2024014	UnaryOperator	!		2023391	0					
ANR	2024015	Identifier	br		2023391	1					
ANR	2024016	AndExpression	"lc != '\\""' && * ( p - 1 ) == '?'"		2023391	1		&&			
ANR	2024017	EqualityExpression	"lc != '\\""'"		2023391	0		!=			
ANR	2024018	Identifier	lc		2023391	0					
ANR	2024019	PrimaryExpression	"'\\""'"		2023391	1					
ANR	2024020	EqualityExpression	* ( p - 1 ) == '?'		2023391	1		==			
ANR	2024021	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024022	UnaryOperator	*		2023391	0					
ANR	2024023	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024024	Identifier	p		2023391	0					
ANR	2024025	PrimaryExpression	1		2023391	1					
ANR	2024026	PrimaryExpression	'?'		2023391	1					
ANR	2024027	CompoundStatement		127:46:2517:2517	2023391	1					
ANR	2024028	ExpressionStatement	in_q = state = 0	4745:7:113889:113905	2023391	0	True				
ANR	2024029	AssignmentExpression	in_q = state = 0		2023391	0		=			
ANR	2024030	Identifier	in_q		2023391	0					
ANR	2024031	AssignmentExpression	state = 0		2023391	1		=			
ANR	2024032	Identifier	state		2023391	0					
ANR	2024033	PrimaryExpression	0		2023391	1					
ANR	2024034	ExpressionStatement	tp = tbuf	4746:7:113914:113923	2023391	1	True				
ANR	2024035	AssignmentExpression	tp = tbuf		2023391	0		=			
ANR	2024036	Identifier	tp		2023391	0					
ANR	2024037	Identifier	tbuf		2023391	1					
ANR	2024038	BreakStatement	break ;	4748:6:113939:113944	2023391	8	True				
ANR	2024039	Label	case 3 :	4750:5:113952:113958	2023391	9	True				
ANR	2024040	ExpressionStatement	in_q = state = 0	4751:6:113966:113982	2023391	10	True				
ANR	2024041	AssignmentExpression	in_q = state = 0		2023391	0		=			
ANR	2024042	Identifier	in_q		2023391	0					
ANR	2024043	AssignmentExpression	state = 0		2023391	1		=			
ANR	2024044	Identifier	state		2023391	0					
ANR	2024045	PrimaryExpression	0		2023391	1					
ANR	2024046	ExpressionStatement	tp = tbuf	4752:6:113990:113999	2023391	11	True				
ANR	2024047	AssignmentExpression	tp = tbuf		2023391	0		=			
ANR	2024048	Identifier	tp		2023391	0					
ANR	2024049	Identifier	tbuf		2023391	1					
ANR	2024050	BreakStatement	break ;	4753:6:114007:114012	2023391	12	True				
ANR	2024051	Label	case 4 :	4755:5:114020:114026	2023391	13	True				
ANR	2024052	IfStatement	if ( p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-' )		2023391	14					
ANR	2024053	Condition	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-'	4756:10:114066:114111	2023391	0	True				
ANR	2024054	AndExpression	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-'		2023391	0		&&			
ANR	2024055	RelationalExpression	p >= buf + 2		2023391	0		>=			
ANR	2024056	Identifier	p		2023391	0					
ANR	2024057	AdditiveExpression	buf + 2		2023391	1		+			
ANR	2024058	Identifier	buf		2023391	0					
ANR	2024059	PrimaryExpression	2		2023391	1					
ANR	2024060	AndExpression	* ( p - 1 ) == '-' && * ( p - 2 ) == '-'		2023391	1		&&			
ANR	2024061	EqualityExpression	* ( p - 1 ) == '-'		2023391	0		==			
ANR	2024062	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024063	UnaryOperator	*		2023391	0					
ANR	2024064	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024065	Identifier	p		2023391	0					
ANR	2024066	PrimaryExpression	1		2023391	1					
ANR	2024067	PrimaryExpression	'-'		2023391	1					
ANR	2024068	EqualityExpression	* ( p - 2 ) == '-'		2023391	1		==			
ANR	2024069	UnaryOperationExpression	* ( p - 2 )		2023391	0					
ANR	2024070	UnaryOperator	*		2023391	0					
ANR	2024071	AdditiveExpression	p - 2		2023391	1		-			
ANR	2024072	Identifier	p		2023391	0					
ANR	2024073	PrimaryExpression	2		2023391	1					
ANR	2024074	PrimaryExpression	'-'		2023391	1					
ANR	2024075	CompoundStatement		139:58:2751:2751	2023391	1					
ANR	2024076	ExpressionStatement	in_q = state = 0	4757:7:114123:114139	2023391	0	True				
ANR	2024077	AssignmentExpression	in_q = state = 0		2023391	0		=			
ANR	2024078	Identifier	in_q		2023391	0					
ANR	2024079	AssignmentExpression	state = 0		2023391	1		=			
ANR	2024080	Identifier	state		2023391	0					
ANR	2024081	PrimaryExpression	0		2023391	1					
ANR	2024082	ExpressionStatement	tp = tbuf	4758:7:114148:114157	2023391	1	True				
ANR	2024083	AssignmentExpression	tp = tbuf		2023391	0		=			
ANR	2024084	Identifier	tp		2023391	0					
ANR	2024085	Identifier	tbuf		2023391	1					
ANR	2024086	BreakStatement	break ;	4760:6:114173:114178	2023391	15	True				
ANR	2024087	Label	default :	4762:5:114186:114193	2023391	16	True				
ANR	2024088	Identifier	default		2023391	0					
ANR	2024089	ExpressionStatement	* ( rp ++ ) = c	4763:6:114201:114212	2023391	17	True				
ANR	2024090	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2024091	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2024092	UnaryOperator	*		2023391	0					
ANR	2024093	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2024094	Identifier	rp		2023391	0					
ANR	2024095	IncDec	++		2023391	1					
ANR	2024096	Identifier	c		2023391	1					
ANR	2024097	BreakStatement	break ;	4764:6:114220:114225	2023391	18	True				
ANR	2024098	BreakStatement	break ;	4766:4:114237:114242	2023391	17	True				
ANR	2024099	Label	"case '""' :"	4768:3:114248:114256	2023391	18	True				
ANR	2024100	Label	case '\\'' :	4769:3:114261:114270	2023391	19	True				
ANR	2024101	IfStatement	if ( state == 4 )		2023391	20					
ANR	2024102	Condition	state == 4	4770:8:114280:114289	2023391	0	True				
ANR	2024103	EqualityExpression	state == 4		2023391	0		==			
ANR	2024104	Identifier	state		2023391	0					
ANR	2024105	PrimaryExpression	4		2023391	1					
ANR	2024106	CompoundStatement		153:20:2929:2929	2023391	1					
ANR	2024107	BreakStatement	break ;	4772:5:114334:114339	2023391	0	True				
ANR	2024108	ElseStatement	else		2023391	0					
ANR	2024109	IfStatement	if ( state == 2 && * ( p - 1 ) != '\\\\' )		2023391	0					
ANR	2024110	Condition	state == 2 && * ( p - 1 ) != '\\\\'	4773:15:114356:114383	2023391	0	True				
ANR	2024111	AndExpression	state == 2 && * ( p - 1 ) != '\\\\'		2023391	0		&&			
ANR	2024112	EqualityExpression	state == 2		2023391	0		==			
ANR	2024113	Identifier	state		2023391	0					
ANR	2024114	PrimaryExpression	2		2023391	1					
ANR	2024115	EqualityExpression	* ( p - 1 ) != '\\\\'		2023391	1		!=			
ANR	2024116	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024117	UnaryOperator	*		2023391	0					
ANR	2024118	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024119	Identifier	p		2023391	0					
ANR	2024120	PrimaryExpression	1		2023391	1					
ANR	2024121	PrimaryExpression	'\\\\'		2023391	1					
ANR	2024122	CompoundStatement		156:45:3023:3023	2023391	1					
ANR	2024123	IfStatement	if ( lc == c )		2023391	0					
ANR	2024124	Condition	lc == c	4774:9:114397:114403	2023391	0	True				
ANR	2024125	EqualityExpression	lc == c		2023391	0		==			
ANR	2024126	Identifier	lc		2023391	0					
ANR	2024127	Identifier	c		2023391	1					
ANR	2024128	CompoundStatement		157:18:3043:3043	2023391	1					
ANR	2024129	ExpressionStatement	lc = '\\0'	4775:6:114414:114423	2023391	0	True				
ANR	2024130	AssignmentExpression	lc = '\\0'		2023391	0		=			
ANR	2024131	Identifier	lc		2023391	0					
ANR	2024132	PrimaryExpression	'\\0'		2023391	1					
ANR	2024133	ElseStatement	else		2023391	0					
ANR	2024134	IfStatement	if ( lc != '\\\\' )		2023391	0					
ANR	2024135	Condition	lc != '\\\\'	4776:16:114441:114450	2023391	0	True				
ANR	2024136	EqualityExpression	lc != '\\\\'		2023391	0		!=			
ANR	2024137	Identifier	lc		2023391	0					
ANR	2024138	PrimaryExpression	'\\\\'		2023391	1					
ANR	2024139	CompoundStatement		159:28:3090:3090	2023391	1					
ANR	2024140	ExpressionStatement	lc = c	4777:6:114461:114467	2023391	0	True				
ANR	2024141	AssignmentExpression	lc = c		2023391	0		=			
ANR	2024142	Identifier	lc		2023391	0					
ANR	2024143	Identifier	c		2023391	1					
ANR	2024144	ElseStatement	else		2023391	0					
ANR	2024145	IfStatement	if ( state == 0 )		2023391	0					
ANR	2024146	Condition	state == 0	4779:15:114491:114500	2023391	0	True				
ANR	2024147	EqualityExpression	state == 0		2023391	0		==			
ANR	2024148	Identifier	state		2023391	0					
ANR	2024149	PrimaryExpression	0		2023391	1					
ANR	2024150	CompoundStatement		162:27:3140:3140	2023391	1					
ANR	2024151	ExpressionStatement	* ( rp ++ ) = c	4780:5:114510:114521	2023391	0	True				
ANR	2024152	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2024153	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2024154	UnaryOperator	*		2023391	0					
ANR	2024155	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2024156	Identifier	rp		2023391	0					
ANR	2024157	IncDec	++		2023391	1					
ANR	2024158	Identifier	c		2023391	1					
ANR	2024159	ElseStatement	else		2023391	0					
ANR	2024160	IfStatement	if ( allow && state == 1 )		2023391	0					
ANR	2024161	Condition	allow && state == 1	4781:15:114538:114556	2023391	0	True				
ANR	2024162	AndExpression	allow && state == 1		2023391	0		&&			
ANR	2024163	Identifier	allow		2023391	0					
ANR	2024164	EqualityExpression	state == 1		2023391	1		==			
ANR	2024165	Identifier	state		2023391	0					
ANR	2024166	PrimaryExpression	1		2023391	1					
ANR	2024167	CompoundStatement		164:36:3196:3196	2023391	1					
ANR	2024168	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2024169	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4782:9:114570:114598	2023391	0	True				
ANR	2024170	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2024171	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024172	Identifier	tp		2023391	0					
ANR	2024173	Identifier	tbuf		2023391	1					
ANR	2024174	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2024175	CompoundStatement		165:40:3238:3238	2023391	1					
ANR	2024176	ExpressionStatement	pos = tp - tbuf	4783:6:114609:114624	2023391	0	True				
ANR	2024177	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2024178	Identifier	pos		2023391	0					
ANR	2024179	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2024180	Identifier	tp		2023391	0					
ANR	2024181	Identifier	tbuf		2023391	1					
ANR	2024182	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4784:6:114632:114689	2023391	1	True				
ANR	2024183	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2024184	Identifier	tbuf		2023391	0					
ANR	2024185	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2024186	Callee	erealloc		2023391	0					
ANR	2024187	Identifier	erealloc		2023391	0					
ANR	2024188	ArgumentList	tbuf		2023391	1					
ANR	2024189	Argument	tbuf		2023391	0					
ANR	2024190	Identifier	tbuf		2023391	0					
ANR	2024191	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2024192	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2024193	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024194	Identifier	tp		2023391	0					
ANR	2024195	Identifier	tbuf		2023391	1					
ANR	2024196	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2024197	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2024198	PrimaryExpression	1		2023391	1					
ANR	2024199	ExpressionStatement	tp = tbuf + pos	4785:6:114697:114712	2023391	2	True				
ANR	2024200	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2024201	Identifier	tp		2023391	0					
ANR	2024202	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2024203	Identifier	tbuf		2023391	0					
ANR	2024204	Identifier	pos		2023391	1					
ANR	2024205	ExpressionStatement	* ( tp ++ ) = c	4787:5:114726:114737	2023391	1	True				
ANR	2024206	AssignmentExpression	* ( tp ++ ) = c		2023391	0		=			
ANR	2024207	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2024208	UnaryOperator	*		2023391	0					
ANR	2024209	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2024210	Identifier	tp		2023391	0					
ANR	2024211	IncDec	++		2023391	1					
ANR	2024212	Identifier	c		2023391	1					
ANR	2024213	IfStatement	if ( state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q ) )		2023391	21					
ANR	2024214	Condition	state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )	4789:8:114753:114828	2023391	0	True				
ANR	2024215	AndExpression	state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2023391	0		&&			
ANR	2024216	Identifier	state		2023391	0					
ANR	2024217	AndExpression	p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2023391	1		&&			
ANR	2024218	EqualityExpression	p != buf		2023391	0		!=			
ANR	2024219	Identifier	p		2023391	0					
ANR	2024220	Identifier	buf		2023391	1					
ANR	2024221	AndExpression	( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2023391	1		&&			
ANR	2024222	OrExpression	state == 1 || * ( p - 1 ) != '\\\\'		2023391	0		||			
ANR	2024223	EqualityExpression	state == 1		2023391	0		==			
ANR	2024224	Identifier	state		2023391	0					
ANR	2024225	PrimaryExpression	1		2023391	1					
ANR	2024226	EqualityExpression	* ( p - 1 ) != '\\\\'		2023391	1		!=			
ANR	2024227	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024228	UnaryOperator	*		2023391	0					
ANR	2024229	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024230	Identifier	p		2023391	0					
ANR	2024231	PrimaryExpression	1		2023391	1					
ANR	2024232	PrimaryExpression	'\\\\'		2023391	1					
ANR	2024233	OrExpression	! in_q || * p == in_q		2023391	1		||			
ANR	2024234	UnaryOperationExpression	! in_q		2023391	0					
ANR	2024235	UnaryOperator	!		2023391	0					
ANR	2024236	Identifier	in_q		2023391	1					
ANR	2024237	EqualityExpression	* p == in_q		2023391	1		==			
ANR	2024238	UnaryOperationExpression	* p		2023391	0					
ANR	2024239	UnaryOperator	*		2023391	0					
ANR	2024240	Identifier	p		2023391	1					
ANR	2024241	Identifier	in_q		2023391	1					
ANR	2024242	CompoundStatement		172:86:3468:3468	2023391	1					
ANR	2024243	IfStatement	if ( in_q )		2023391	0					
ANR	2024244	Condition	in_q	4790:9:114842:114845	2023391	0	True				
ANR	2024245	Identifier	in_q		2023391	0					
ANR	2024246	CompoundStatement		173:15:3485:3485	2023391	1					
ANR	2024247	ExpressionStatement	in_q = 0	4791:6:114856:114864	2023391	0	True				
ANR	2024248	AssignmentExpression	in_q = 0		2023391	0		=			
ANR	2024249	Identifier	in_q		2023391	0					
ANR	2024250	PrimaryExpression	0		2023391	1					
ANR	2024251	ElseStatement	else		2023391	0					
ANR	2024252	CompoundStatement		175:12:3515:3515	2023391	0					
ANR	2024253	ExpressionStatement	in_q = * p	4793:6:114886:114895	2023391	0	True				
ANR	2024254	AssignmentExpression	in_q = * p		2023391	0		=			
ANR	2024255	Identifier	in_q		2023391	0					
ANR	2024256	UnaryOperationExpression	* p		2023391	1					
ANR	2024257	UnaryOperator	*		2023391	0					
ANR	2024258	Identifier	p		2023391	1					
ANR	2024259	BreakStatement	break ;	4796:4:114914:114919	2023391	22	True				
ANR	2024260	Label	case '!' :	4798:3:114925:114933	2023391	23	True				
ANR	2024261	IfStatement	if ( state == 1 && * ( p - 1 ) == '<' )		2023391	24					
ANR	2024262	Condition	state == 1 && * ( p - 1 ) == '<'	4800:8:114997:115023	2023391	0	True				
ANR	2024263	AndExpression	state == 1 && * ( p - 1 ) == '<'		2023391	0		&&			
ANR	2024264	EqualityExpression	state == 1		2023391	0		==			
ANR	2024265	Identifier	state		2023391	0					
ANR	2024266	PrimaryExpression	1		2023391	1					
ANR	2024267	EqualityExpression	* ( p - 1 ) == '<'		2023391	1		==			
ANR	2024268	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024269	UnaryOperator	*		2023391	0					
ANR	2024270	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024271	Identifier	p		2023391	0					
ANR	2024272	PrimaryExpression	1		2023391	1					
ANR	2024273	PrimaryExpression	'<'		2023391	1					
ANR	2024274	CompoundStatement		183:37:3663:3663	2023391	1					
ANR	2024275	ExpressionStatement	state = 3	4801:5:115033:115042	2023391	0	True				
ANR	2024276	AssignmentExpression	state = 3		2023391	0		=			
ANR	2024277	Identifier	state		2023391	0					
ANR	2024278	PrimaryExpression	3		2023391	1					
ANR	2024279	ExpressionStatement	lc = c	4802:5:115049:115055	2023391	1	True				
ANR	2024280	AssignmentExpression	lc = c		2023391	0		=			
ANR	2024281	Identifier	lc		2023391	0					
ANR	2024282	Identifier	c		2023391	1					
ANR	2024283	ElseStatement	else		2023391	0					
ANR	2024284	CompoundStatement		186:11:3705:3705	2023391	0					
ANR	2024285	IfStatement	if ( state == 0 )		2023391	0					
ANR	2024286	Condition	state == 0	4804:9:115079:115088	2023391	0	True				
ANR	2024287	EqualityExpression	state == 0		2023391	0		==			
ANR	2024288	Identifier	state		2023391	0					
ANR	2024289	PrimaryExpression	0		2023391	1					
ANR	2024290	CompoundStatement		187:21:3728:3728	2023391	1					
ANR	2024291	ExpressionStatement	* ( rp ++ ) = c	4805:6:115099:115110	2023391	0	True				
ANR	2024292	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2024293	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2024294	UnaryOperator	*		2023391	0					
ANR	2024295	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2024296	Identifier	rp		2023391	0					
ANR	2024297	IncDec	++		2023391	1					
ANR	2024298	Identifier	c		2023391	1					
ANR	2024299	ElseStatement	else		2023391	0					
ANR	2024300	IfStatement	if ( allow && state == 1 )		2023391	0					
ANR	2024301	Condition	allow && state == 1	4806:16:115128:115146	2023391	0	True				
ANR	2024302	AndExpression	allow && state == 1		2023391	0		&&			
ANR	2024303	Identifier	allow		2023391	0					
ANR	2024304	EqualityExpression	state == 1		2023391	1		==			
ANR	2024305	Identifier	state		2023391	0					
ANR	2024306	PrimaryExpression	1		2023391	1					
ANR	2024307	CompoundStatement		189:37:3786:3786	2023391	1					
ANR	2024308	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2024309	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4807:10:115161:115189	2023391	0	True				
ANR	2024310	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2024311	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024312	Identifier	tp		2023391	0					
ANR	2024313	Identifier	tbuf		2023391	1					
ANR	2024314	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2024315	CompoundStatement		190:41:3829:3829	2023391	1					
ANR	2024316	ExpressionStatement	pos = tp - tbuf	4808:7:115201:115216	2023391	0	True				
ANR	2024317	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2024318	Identifier	pos		2023391	0					
ANR	2024319	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2024320	Identifier	tp		2023391	0					
ANR	2024321	Identifier	tbuf		2023391	1					
ANR	2024322	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4809:7:115225:115282	2023391	1	True				
ANR	2024323	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2024324	Identifier	tbuf		2023391	0					
ANR	2024325	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2024326	Callee	erealloc		2023391	0					
ANR	2024327	Identifier	erealloc		2023391	0					
ANR	2024328	ArgumentList	tbuf		2023391	1					
ANR	2024329	Argument	tbuf		2023391	0					
ANR	2024330	Identifier	tbuf		2023391	0					
ANR	2024331	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2024332	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2024333	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024334	Identifier	tp		2023391	0					
ANR	2024335	Identifier	tbuf		2023391	1					
ANR	2024336	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2024337	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2024338	PrimaryExpression	1		2023391	1					
ANR	2024339	ExpressionStatement	tp = tbuf + pos	4810:7:115291:115306	2023391	2	True				
ANR	2024340	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2024341	Identifier	tp		2023391	0					
ANR	2024342	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2024343	Identifier	tbuf		2023391	0					
ANR	2024344	Identifier	pos		2023391	1					
ANR	2024345	ExpressionStatement	* ( tp ++ ) = c	4812:6:115322:115333	2023391	1	True				
ANR	2024346	AssignmentExpression	* ( tp ++ ) = c		2023391	0		=			
ANR	2024347	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2024348	UnaryOperator	*		2023391	0					
ANR	2024349	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2024350	Identifier	tp		2023391	0					
ANR	2024351	IncDec	++		2023391	1					
ANR	2024352	Identifier	c		2023391	1					
ANR	2024353	BreakStatement	break ;	4815:4:115352:115357	2023391	25	True				
ANR	2024354	Label	case '-' :	4817:3:115363:115371	2023391	26	True				
ANR	2024355	IfStatement	if ( state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!' )		2023391	27					
ANR	2024356	Condition	state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'	4818:8:115381:115440	2023391	0	True				
ANR	2024357	AndExpression	state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2023391	0		&&			
ANR	2024358	EqualityExpression	state == 3		2023391	0		==			
ANR	2024359	Identifier	state		2023391	0					
ANR	2024360	PrimaryExpression	3		2023391	1					
ANR	2024361	AndExpression	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2023391	1		&&			
ANR	2024362	RelationalExpression	p >= buf + 2		2023391	0		>=			
ANR	2024363	Identifier	p		2023391	0					
ANR	2024364	AdditiveExpression	buf + 2		2023391	1		+			
ANR	2024365	Identifier	buf		2023391	0					
ANR	2024366	PrimaryExpression	2		2023391	1					
ANR	2024367	AndExpression	* ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2023391	1		&&			
ANR	2024368	EqualityExpression	* ( p - 1 ) == '-'		2023391	0		==			
ANR	2024369	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024370	UnaryOperator	*		2023391	0					
ANR	2024371	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024372	Identifier	p		2023391	0					
ANR	2024373	PrimaryExpression	1		2023391	1					
ANR	2024374	PrimaryExpression	'-'		2023391	1					
ANR	2024375	EqualityExpression	* ( p - 2 ) == '!'		2023391	1		==			
ANR	2024376	UnaryOperationExpression	* ( p - 2 )		2023391	0					
ANR	2024377	UnaryOperator	*		2023391	0					
ANR	2024378	AdditiveExpression	p - 2		2023391	1		-			
ANR	2024379	Identifier	p		2023391	0					
ANR	2024380	PrimaryExpression	2		2023391	1					
ANR	2024381	PrimaryExpression	'!'		2023391	1					
ANR	2024382	CompoundStatement		201:70:4080:4080	2023391	1					
ANR	2024383	ExpressionStatement	state = 4	4819:5:115450:115459	2023391	0	True				
ANR	2024384	AssignmentExpression	state = 4		2023391	0		=			
ANR	2024385	Identifier	state		2023391	0					
ANR	2024386	PrimaryExpression	4		2023391	1					
ANR	2024387	ElseStatement	else		2023391	0					
ANR	2024388	CompoundStatement		203:11:4109:4109	2023391	0					
ANR	2024389	GotoStatement	goto reg_char ;	4821:5:115479:115492	2023391	0	True				
ANR	2024390	Identifier	reg_char		2023391	0					
ANR	2024391	BreakStatement	break ;	4823:4:115504:115509	2023391	28	True				
ANR	2024392	Label	case '?' :	4825:3:115515:115523	2023391	29	True				
ANR	2024393	IfStatement	if ( state == 1 && * ( p - 1 ) == '<' )		2023391	30					
ANR	2024394	Condition	state == 1 && * ( p - 1 ) == '<'	4827:8:115534:115560	2023391	0	True				
ANR	2024395	AndExpression	state == 1 && * ( p - 1 ) == '<'		2023391	0		&&			
ANR	2024396	EqualityExpression	state == 1		2023391	0		==			
ANR	2024397	Identifier	state		2023391	0					
ANR	2024398	PrimaryExpression	1		2023391	1					
ANR	2024399	EqualityExpression	* ( p - 1 ) == '<'		2023391	1		==			
ANR	2024400	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024401	UnaryOperator	*		2023391	0					
ANR	2024402	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024403	Identifier	p		2023391	0					
ANR	2024404	PrimaryExpression	1		2023391	1					
ANR	2024405	PrimaryExpression	'<'		2023391	1					
ANR	2024406	CompoundStatement		210:37:4200:4200	2023391	1					
ANR	2024407	ExpressionStatement	br = 0	4828:5:115570:115574	2023391	0	True				
ANR	2024408	AssignmentExpression	br = 0		2023391	0		=			
ANR	2024409	Identifier	br		2023391	0					
ANR	2024410	PrimaryExpression	0		2023391	1					
ANR	2024411	ExpressionStatement	state = 2	4829:5:115581:115588	2023391	1	True				
ANR	2024412	AssignmentExpression	state = 2		2023391	0		=			
ANR	2024413	Identifier	state		2023391	0					
ANR	2024414	PrimaryExpression	2		2023391	1					
ANR	2024415	BreakStatement	break ;	4830:5:115595:115600	2023391	2	True				
ANR	2024416	Label	case 'E' :	4833:3:115612:115620	2023391	31	True				
ANR	2024417	Label	case 'e' :	4834:3:115625:115633	2023391	32	True				
ANR	2024418	IfStatement	if ( state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd' )		2023391	33					
ANR	2024419	Condition	state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'	4836:8:115672:115917	2023391	0	True				
ANR	2024420	AndExpression	state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	0		&&			
ANR	2024421	EqualityExpression	state == 3		2023391	0		==			
ANR	2024422	Identifier	state		2023391	0					
ANR	2024423	PrimaryExpression	3		2023391	1					
ANR	2024424	AndExpression	p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024425	RelationalExpression	p > buf + 6		2023391	0		>			
ANR	2024426	Identifier	p		2023391	0					
ANR	2024427	AdditiveExpression	buf + 6		2023391	1		+			
ANR	2024428	Identifier	buf		2023391	0					
ANR	2024429	PrimaryExpression	6		2023391	1					
ANR	2024430	AndExpression	tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024431	EqualityExpression	tolower ( * ( p - 1 ) ) == 'p'		2023391	0		==			
ANR	2024432	CallExpression	tolower ( * ( p - 1 ) )		2023391	0					
ANR	2024433	Callee	tolower		2023391	0					
ANR	2024434	Identifier	tolower		2023391	0					
ANR	2024435	ArgumentList	* ( p - 1 )		2023391	1					
ANR	2024436	Argument	* ( p - 1 )		2023391	0					
ANR	2024437	UnaryOperationExpression	* ( p - 1 )		2023391	0					
ANR	2024438	UnaryOperator	*		2023391	0					
ANR	2024439	AdditiveExpression	p - 1		2023391	1		-			
ANR	2024440	Identifier	p		2023391	0					
ANR	2024441	PrimaryExpression	1		2023391	1					
ANR	2024442	PrimaryExpression	'p'		2023391	1					
ANR	2024443	AndExpression	tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024444	EqualityExpression	tolower ( * ( p - 2 ) ) == 'y'		2023391	0		==			
ANR	2024445	CallExpression	tolower ( * ( p - 2 ) )		2023391	0					
ANR	2024446	Callee	tolower		2023391	0					
ANR	2024447	Identifier	tolower		2023391	0					
ANR	2024448	ArgumentList	* ( p - 2 )		2023391	1					
ANR	2024449	Argument	* ( p - 2 )		2023391	0					
ANR	2024450	UnaryOperationExpression	* ( p - 2 )		2023391	0					
ANR	2024451	UnaryOperator	*		2023391	0					
ANR	2024452	AdditiveExpression	p - 2		2023391	1		-			
ANR	2024453	Identifier	p		2023391	0					
ANR	2024454	PrimaryExpression	2		2023391	1					
ANR	2024455	PrimaryExpression	'y'		2023391	1					
ANR	2024456	AndExpression	tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024457	EqualityExpression	tolower ( * ( p - 3 ) ) == 't'		2023391	0		==			
ANR	2024458	CallExpression	tolower ( * ( p - 3 ) )		2023391	0					
ANR	2024459	Callee	tolower		2023391	0					
ANR	2024460	Identifier	tolower		2023391	0					
ANR	2024461	ArgumentList	* ( p - 3 )		2023391	1					
ANR	2024462	Argument	* ( p - 3 )		2023391	0					
ANR	2024463	UnaryOperationExpression	* ( p - 3 )		2023391	0					
ANR	2024464	UnaryOperator	*		2023391	0					
ANR	2024465	AdditiveExpression	p - 3		2023391	1		-			
ANR	2024466	Identifier	p		2023391	0					
ANR	2024467	PrimaryExpression	3		2023391	1					
ANR	2024468	PrimaryExpression	't'		2023391	1					
ANR	2024469	AndExpression	tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024470	EqualityExpression	tolower ( * ( p - 4 ) ) == 'c'		2023391	0		==			
ANR	2024471	CallExpression	tolower ( * ( p - 4 ) )		2023391	0					
ANR	2024472	Callee	tolower		2023391	0					
ANR	2024473	Identifier	tolower		2023391	0					
ANR	2024474	ArgumentList	* ( p - 4 )		2023391	1					
ANR	2024475	Argument	* ( p - 4 )		2023391	0					
ANR	2024476	UnaryOperationExpression	* ( p - 4 )		2023391	0					
ANR	2024477	UnaryOperator	*		2023391	0					
ANR	2024478	AdditiveExpression	p - 4		2023391	1		-			
ANR	2024479	Identifier	p		2023391	0					
ANR	2024480	PrimaryExpression	4		2023391	1					
ANR	2024481	PrimaryExpression	'c'		2023391	1					
ANR	2024482	AndExpression	tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2023391	1		&&			
ANR	2024483	EqualityExpression	tolower ( * ( p - 5 ) ) == 'o'		2023391	0		==			
ANR	2024484	CallExpression	tolower ( * ( p - 5 ) )		2023391	0					
ANR	2024485	Callee	tolower		2023391	0					
ANR	2024486	Identifier	tolower		2023391	0					
ANR	2024487	ArgumentList	* ( p - 5 )		2023391	1					
ANR	2024488	Argument	* ( p - 5 )		2023391	0					
ANR	2024489	UnaryOperationExpression	* ( p - 5 )		2023391	0					
ANR	2024490	UnaryOperator	*		2023391	0					
ANR	2024491	AdditiveExpression	p - 5		2023391	1		-			
ANR	2024492	Identifier	p		2023391	0					
ANR	2024493	PrimaryExpression	5		2023391	1					
ANR	2024494	PrimaryExpression	'o'		2023391	1					
ANR	2024495	EqualityExpression	tolower ( * ( p - 6 ) ) == 'd'		2023391	1		==			
ANR	2024496	CallExpression	tolower ( * ( p - 6 ) )		2023391	0					
ANR	2024497	Callee	tolower		2023391	0					
ANR	2024498	Identifier	tolower		2023391	0					
ANR	2024499	ArgumentList	* ( p - 6 )		2023391	1					
ANR	2024500	Argument	* ( p - 6 )		2023391	0					
ANR	2024501	UnaryOperationExpression	* ( p - 6 )		2023391	0					
ANR	2024502	UnaryOperator	*		2023391	0					
ANR	2024503	AdditiveExpression	p - 6		2023391	1		-			
ANR	2024504	Identifier	p		2023391	0					
ANR	2024505	PrimaryExpression	6		2023391	1					
ANR	2024506	PrimaryExpression	'd'		2023391	1					
ANR	2024507	CompoundStatement		225:38:4557:4557	2023391	1					
ANR	2024508	ExpressionStatement	state = 1	4843:5:115927:115936	2023391	0	True				
ANR	2024509	AssignmentExpression	state = 1		2023391	0		=			
ANR	2024510	Identifier	state		2023391	0					
ANR	2024511	PrimaryExpression	1		2023391	1					
ANR	2024512	BreakStatement	break ;	4844:5:115943:115948	2023391	1	True				
ANR	2024513	Label	case 'l' :	4848:3:115983:115991	2023391	34	True				
ANR	2024514	Label	case 'L' :	4849:3:115996:116004	2023391	35	True				
ANR	2024515	IfStatement	"if ( state == 2 && p > buf + 4 && strncasecmp ( p - 4 , ""<?xm"" , 4 ) == 0 )"		2023391	36					
ANR	2024516	Condition	"state == 2 && p > buf + 4 && strncasecmp ( p - 4 , ""<?xm"" , 4 ) == 0"	4855:8:116130:116188	2023391	0	True				
ANR	2024517	AndExpression	"state == 2 && p > buf + 4 && strncasecmp ( p - 4 , ""<?xm"" , 4 ) == 0"		2023391	0		&&			
ANR	2024518	EqualityExpression	state == 2		2023391	0		==			
ANR	2024519	Identifier	state		2023391	0					
ANR	2024520	PrimaryExpression	2		2023391	1					
ANR	2024521	AndExpression	"p > buf + 4 && strncasecmp ( p - 4 , ""<?xm"" , 4 ) == 0"		2023391	1		&&			
ANR	2024522	RelationalExpression	p > buf + 4		2023391	0		>			
ANR	2024523	Identifier	p		2023391	0					
ANR	2024524	AdditiveExpression	buf + 4		2023391	1		+			
ANR	2024525	Identifier	buf		2023391	0					
ANR	2024526	PrimaryExpression	4		2023391	1					
ANR	2024527	EqualityExpression	"strncasecmp ( p - 4 , ""<?xm"" , 4 ) == 0"		2023391	1		==			
ANR	2024528	CallExpression	"strncasecmp ( p - 4 , ""<?xm"" , 4 )"		2023391	0					
ANR	2024529	Callee	strncasecmp		2023391	0					
ANR	2024530	Identifier	strncasecmp		2023391	0					
ANR	2024531	ArgumentList	p - 4		2023391	1					
ANR	2024532	Argument	p - 4		2023391	0					
ANR	2024533	AdditiveExpression	p - 4		2023391	0		-			
ANR	2024534	Identifier	p		2023391	0					
ANR	2024535	PrimaryExpression	4		2023391	1					
ANR	2024536	Argument	"""<?xm"""		2023391	1					
ANR	2024537	PrimaryExpression	"""<?xm"""		2023391	0					
ANR	2024538	Argument	4		2023391	2					
ANR	2024539	PrimaryExpression	4		2023391	0					
ANR	2024540	PrimaryExpression	0		2023391	1					
ANR	2024541	CompoundStatement		238:69:4828:4828	2023391	1					
ANR	2024542	ExpressionStatement	state = 1	4856:5:116198:116207	2023391	0	True				
ANR	2024543	AssignmentExpression	state = 1		2023391	0		=			
ANR	2024544	Identifier	state		2023391	0					
ANR	2024545	PrimaryExpression	1		2023391	1					
ANR	2024546	ExpressionStatement	is_xml = 1	4856:16:116209:116217	2023391	1	True				
ANR	2024547	AssignmentExpression	is_xml = 1		2023391	0		=			
ANR	2024548	Identifier	is_xml		2023391	0					
ANR	2024549	PrimaryExpression	1		2023391	1					
ANR	2024550	BreakStatement	break ;	4857:5:116224:116229	2023391	2	True				
ANR	2024551	Label	default :	4861:3:116264:116271	2023391	37	True				
ANR	2024552	Identifier	default		2023391	0					
ANR	2024553	Label	reg_char :	4862:0:116273:116281	2023391	38	True				
ANR	2024554	Identifier	reg_char		2023391	0					
ANR	2024555	IfStatement	if ( state == 0 )		2023391	39					
ANR	2024556	Condition	state == 0	4863:8:116291:116300	2023391	0	True				
ANR	2024557	EqualityExpression	state == 0		2023391	0		==			
ANR	2024558	Identifier	state		2023391	0					
ANR	2024559	PrimaryExpression	0		2023391	1					
ANR	2024560	CompoundStatement		246:20:4940:4940	2023391	1					
ANR	2024561	ExpressionStatement	* ( rp ++ ) = c	4864:5:116310:116321	2023391	0	True				
ANR	2024562	AssignmentExpression	* ( rp ++ ) = c		2023391	0		=			
ANR	2024563	UnaryOperationExpression	* ( rp ++ )		2023391	0					
ANR	2024564	UnaryOperator	*		2023391	0					
ANR	2024565	PostIncDecOperationExpression	rp ++		2023391	1					
ANR	2024566	Identifier	rp		2023391	0					
ANR	2024567	IncDec	++		2023391	1					
ANR	2024568	Identifier	c		2023391	1					
ANR	2024569	ElseStatement	else		2023391	0					
ANR	2024570	IfStatement	if ( allow && state == 1 )		2023391	0					
ANR	2024571	Condition	allow && state == 1	4865:15:116338:116356	2023391	0	True				
ANR	2024572	AndExpression	allow && state == 1		2023391	0		&&			
ANR	2024573	Identifier	allow		2023391	0					
ANR	2024574	EqualityExpression	state == 1		2023391	1		==			
ANR	2024575	Identifier	state		2023391	0					
ANR	2024576	PrimaryExpression	1		2023391	1					
ANR	2024577	CompoundStatement		248:36:4996:4996	2023391	1					
ANR	2024578	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2023391	0					
ANR	2024579	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4866:9:116370:116398	2023391	0	True				
ANR	2024580	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2023391	0		>=			
ANR	2024581	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024582	Identifier	tp		2023391	0					
ANR	2024583	Identifier	tbuf		2023391	1					
ANR	2024584	Identifier	PHP_TAG_BUF_SIZE		2023391	1					
ANR	2024585	CompoundStatement		249:40:5038:5038	2023391	1					
ANR	2024586	ExpressionStatement	pos = tp - tbuf	4867:6:116409:116424	2023391	0	True				
ANR	2024587	AssignmentExpression	pos = tp - tbuf		2023391	0		=			
ANR	2024588	Identifier	pos		2023391	0					
ANR	2024589	AdditiveExpression	tp - tbuf		2023391	1		-			
ANR	2024590	Identifier	tp		2023391	0					
ANR	2024591	Identifier	tbuf		2023391	1					
ANR	2024592	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4868:6:116432:116489	2023391	1	True				
ANR	2024593	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	0		=			
ANR	2024594	Identifier	tbuf		2023391	0					
ANR	2024595	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2023391	1					
ANR	2024596	Callee	erealloc		2023391	0					
ANR	2024597	Identifier	erealloc		2023391	0					
ANR	2024598	ArgumentList	tbuf		2023391	1					
ANR	2024599	Argument	tbuf		2023391	0					
ANR	2024600	Identifier	tbuf		2023391	0					
ANR	2024601	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	1					
ANR	2024602	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2023391	0		+			
ANR	2024603	AdditiveExpression	tp - tbuf		2023391	0		-			
ANR	2024604	Identifier	tp		2023391	0					
ANR	2024605	Identifier	tbuf		2023391	1					
ANR	2024606	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2023391	1		+			
ANR	2024607	Identifier	PHP_TAG_BUF_SIZE		2023391	0					
ANR	2024608	PrimaryExpression	1		2023391	1					
ANR	2024609	ExpressionStatement	tp = tbuf + pos	4869:6:116497:116512	2023391	2	True				
ANR	2024610	AssignmentExpression	tp = tbuf + pos		2023391	0		=			
ANR	2024611	Identifier	tp		2023391	0					
ANR	2024612	AdditiveExpression	tbuf + pos		2023391	1		+			
ANR	2024613	Identifier	tbuf		2023391	0					
ANR	2024614	Identifier	pos		2023391	1					
ANR	2024615	ExpressionStatement	* ( tp ++ ) = c	4871:5:116526:116537	2023391	1	True				
ANR	2024616	AssignmentExpression	* ( tp ++ ) = c		2023391	0		=			
ANR	2024617	UnaryOperationExpression	* ( tp ++ )		2023391	0					
ANR	2024618	UnaryOperator	*		2023391	0					
ANR	2024619	PostIncDecOperationExpression	tp ++		2023391	1					
ANR	2024620	Identifier	tp		2023391	0					
ANR	2024621	IncDec	++		2023391	1					
ANR	2024622	Identifier	c		2023391	1					
ANR	2024623	BreakStatement	break ;	4873:4:116549:116554	2023391	40	True				
ANR	2024624	ExpressionStatement	c = * ( ++ p )	4875:2:116562:116572	2023391	1	True				
ANR	2024625	AssignmentExpression	c = * ( ++ p )		2023391	0		=			
ANR	2024626	Identifier	c		2023391	0					
ANR	2024627	UnaryOperationExpression	* ( ++ p )		2023391	1					
ANR	2024628	UnaryOperator	*		2023391	0					
ANR	2024629	UnaryExpression	++ p		2023391	1					
ANR	2024630	IncDec	++		2023391	0					
ANR	2024631	Identifier	p		2023391	1					
ANR	2024632	ExpressionStatement	i ++	4876:2:116576:116579	2023391	2	True				
ANR	2024633	PostIncDecOperationExpression	i ++		2023391	0					
ANR	2024634	Identifier	i		2023391	0					
ANR	2024635	IncDec	++		2023391	1					
ANR	2024636	IfStatement	if ( rp < rbuf + len )		2023391	14					
ANR	2024637	Condition	rp < rbuf + len	4878:5:116589:116603	2023391	0	True				
ANR	2024638	RelationalExpression	rp < rbuf + len		2023391	0		<			
ANR	2024639	Identifier	rp		2023391	0					
ANR	2024640	AdditiveExpression	rbuf + len		2023391	1		+			
ANR	2024641	Identifier	rbuf		2023391	0					
ANR	2024642	Identifier	len		2023391	1					
ANR	2024643	CompoundStatement		261:22:5243:5243	2023391	1					
ANR	2024644	ExpressionStatement	* rp = '\\0'	4879:2:116610:116620	2023391	0	True				
ANR	2024645	AssignmentExpression	* rp = '\\0'		2023391	0		=			
ANR	2024646	UnaryOperationExpression	* rp		2023391	0					
ANR	2024647	UnaryOperator	*		2023391	0					
ANR	2024648	Identifier	rp		2023391	1					
ANR	2024649	PrimaryExpression	'\\0'		2023391	1					
ANR	2024650	ExpressionStatement	efree ( buf )	4881:1:116626:116636	2023391	15	True				
ANR	2024651	CallExpression	efree ( buf )		2023391	0					
ANR	2024652	Callee	efree		2023391	0					
ANR	2024653	Identifier	efree		2023391	0					
ANR	2024654	ArgumentList	buf		2023391	1					
ANR	2024655	Argument	buf		2023391	0					
ANR	2024656	Identifier	buf		2023391	0					
ANR	2024657	IfStatement	if ( allow )		2023391	16					
ANR	2024658	Condition	allow	4882:5:116643:116647	2023391	0	True				
ANR	2024659	Identifier	allow		2023391	0					
ANR	2024660	CompoundStatement		265:12:5287:5287	2023391	1					
ANR	2024661	ExpressionStatement	efree ( tbuf )	4883:2:116654:116665	2023391	0	True				
ANR	2024662	CallExpression	efree ( tbuf )		2023391	0					
ANR	2024663	Callee	efree		2023391	0					
ANR	2024664	Identifier	efree		2023391	0					
ANR	2024665	ArgumentList	tbuf		2023391	1					
ANR	2024666	Argument	tbuf		2023391	0					
ANR	2024667	Identifier	tbuf		2023391	0					
ANR	2024668	IfStatement	if ( allow_free )		2023391	1					
ANR	2024669	Condition	allow_free	4884:6:116673:116682	2023391	0	True				
ANR	2024670	Identifier	allow_free		2023391	0					
ANR	2024671	CompoundStatement		267:18:5322:5322	2023391	1					
ANR	2024672	ExpressionStatement	efree ( allow_free )	4885:3:116690:116707	2023391	0	True				
ANR	2024673	CallExpression	efree ( allow_free )		2023391	0					
ANR	2024674	Callee	efree		2023391	0					
ANR	2024675	Identifier	efree		2023391	0					
ANR	2024676	ArgumentList	allow_free		2023391	1					
ANR	2024677	Argument	allow_free		2023391	0					
ANR	2024678	Identifier	allow_free		2023391	0					
ANR	2024679	IfStatement	if ( stateptr )		2023391	17					
ANR	2024680	Condition	stateptr	4888:5:116721:116728	2023391	0	True				
ANR	2024681	Identifier	stateptr		2023391	0					
ANR	2024682	ExpressionStatement	* stateptr = state	4889:2:116733:116750	2023391	1	True				
ANR	2024683	AssignmentExpression	* stateptr = state		2023391	0		=			
ANR	2024684	UnaryOperationExpression	* stateptr		2023391	0					
ANR	2024685	UnaryOperator	*		2023391	0					
ANR	2024686	Identifier	stateptr		2023391	1					
ANR	2024687	Identifier	state		2023391	1					
ANR	2024688	ReturnStatement	return ( size_t ) ( rp - rbuf ) ;	4891:1:116754:116780	2023391	18	True				
ANR	2024689	CastExpression	( size_t ) ( rp - rbuf )		2023391	0					
ANR	2024690	CastTarget	size_t		2023391	0					
ANR	2024691	AdditiveExpression	rp - rbuf		2023391	1		-			
ANR	2024692	Identifier	rp		2023391	0					
ANR	2024693	Identifier	rbuf		2023391	1					
ANR	2024694	ReturnType	PHPAPI size_t		2023391	1					
ANR	2024695	Identifier	php_strip_tags_ex		2023391	2					
ANR	2024696	ParameterList	"char * rbuf , int len , int * stateptr , char * allow , int allow_len , zend_bool allow_tag_spaces"		2023391	3					
ANR	2024697	Parameter	char * rbuf	4617:32:111270:111279	2023391	0	True				
ANR	2024698	ParameterType	char *		2023391	0					
ANR	2024699	Identifier	rbuf		2023391	1					
ANR	2024700	Parameter	int len	4617:44:111282:111288	2023391	1	True				
ANR	2024701	ParameterType	int		2023391	0					
ANR	2024702	Identifier	len		2023391	1					
ANR	2024703	Parameter	int * stateptr	4617:53:111291:111303	2023391	2	True				
ANR	2024704	ParameterType	int *		2023391	0					
ANR	2024705	Identifier	stateptr		2023391	1					
ANR	2024706	Parameter	char * allow	4617:68:111306:111316	2023391	3	True				
ANR	2024707	ParameterType	char *		2023391	0					
ANR	2024708	Identifier	allow		2023391	1					
ANR	2024709	Parameter	int allow_len	4617:81:111319:111331	2023391	4	True				
ANR	2024710	ParameterType	int		2023391	0					
ANR	2024711	Identifier	allow_len		2023391	1					
ANR	2024712	Parameter	zend_bool allow_tag_spaces	4617:96:111334:111359	2023391	5	True				
ANR	2024713	ParameterType	zend_bool		2023391	0					
ANR	2024714	Identifier	allow_tag_spaces		2023391	1					
ANR	2024715	CFGEntryNode	ENTRY		2023391		True				
ANR	2024716	CFGExitNode	EXIT		2023391		True				
ANR	2024717	Symbol	allow		2023391						
ANR	2024718	Symbol	* ( p - 1 )		2023391						
ANR	2024719	Symbol	* ( p - 2 )		2023391						
ANR	2024720	Symbol	* ( p - 3 )		2023391						
ANR	2024721	Symbol	tolower		2023391						
ANR	2024722	Symbol	* ( p - 4 )		2023391						
ANR	2024723	Symbol	* ( p - 5 )		2023391						
ANR	2024724	Symbol	* ( p - 6 )		2023391						
ANR	2024725	Symbol	strncasecmp		2023391						
ANR	2024726	Symbol	tbuf		2023391						
ANR	2024727	Symbol	* ( tp ++ )		2023391						
ANR	2024728	Symbol	br		2023391						
ANR	2024729	Symbol	estrndup		2023391						
ANR	2024730	Symbol	emalloc		2023391						
ANR	2024731	Symbol	len		2023391						
ANR	2024732	Symbol	allow_tag_spaces		2023391						
ANR	2024733	Symbol	pos		2023391						
ANR	2024734	Symbol	state		2023391						
ANR	2024735	Symbol	* ( rp ++ )		2023391						
ANR	2024736	Symbol	erealloc		2023391						
ANR	2024737	Symbol	* stateptr		2023391						
ANR	2024738	Symbol	zend_str_tolower_dup		2023391						
ANR	2024739	Symbol	* tp		2023391						
ANR	2024740	Symbol	allow_free		2023391						
ANR	2024741	Symbol	* buf		2023391						
ANR	2024742	Symbol	c		2023391						
ANR	2024743	Symbol	NULL		2023391						
ANR	2024744	Symbol	in_q		2023391						
ANR	2024745	Symbol	* rp		2023391						
ANR	2024746	Symbol	isspace		2023391						
ANR	2024747	Symbol	i		2023391						
ANR	2024748	Symbol	* ( p + 1 )		2023391						
ANR	2024749	Symbol	is_xml		2023391						
ANR	2024750	Symbol	allow_len		2023391						
ANR	2024751	Symbol	stateptr		2023391						
ANR	2024752	Symbol	p		2023391						
ANR	2024753	Symbol	buf		2023391						
ANR	2024754	Symbol	depth		2023391						
ANR	2024755	Symbol	rbuf		2023391						
ANR	2024756	Symbol	PHP_TAG_BUF_SIZE		2023391						
ANR	2024757	Symbol	lc		2023391						
ANR	2024758	Symbol	IS_INTERNED		2023391						
ANR	2024759	Symbol	* ( ++ p )		2023391						
ANR	2024760	Symbol	* p		2023391						
ANR	2024761	Symbol	tp		2023391						
ANR	2024762	Symbol	rp		2023391						
ANR	2024763	Symbol	php_tag_find		2023391						
ANR	2024764	DeclStmt									
ANR	2024765	Decl							char	char *	str
ANR	2024766	Decl							char	char	delim
ANR	2024767	Decl							char	char	enc
ANR	2024768	Decl							char	char	esc
ANR	2024769	DeclStmt									
ANR	2024770	Decl							char	char *	delim_str
ANR	2024771	Decl							char	char *	enc_str
ANR	2024772	Decl							char	char *	esc_str
ANR	2024773	DeclStmt									
ANR	2024774	Decl							int	int	str_len
ANR	2024775	Decl							int	int	delim_len
ANR	2024776	Decl							int	int	enc_len
ANR	2024777	Decl							int	int	esc_len
ANR	2024778	DeclStmt									
ANR	2024779	Decl							char	char *	input_str
ANR	2024780	DeclStmt									
ANR	2024781	Decl							int	int	input_len
ANR	2024782	DeclStmt									
ANR	2024783	Decl							long	long	mult
ANR	2024784	DeclStmt									
ANR	2024785	Decl							char	char *	result
ANR	2024786	DeclStmt									
ANR	2024787	Decl							size_t	size_t	result_len
ANR	2024788	DeclStmt									
ANR	2024789	Decl							input_len	input_len *	mult
ANR	2024790	DeclStmt									
ANR	2024791	Decl							char	char *	s
ANR	2024792	Decl							char	char *	e
ANR	2024793	Decl							char	char *	ee
ANR	2024794	DeclStmt									
ANR	2024795	Decl							int	int	l
ANR	2024796	DeclStmt									
ANR	2024797	Decl							char	char *	input
ANR	2024798	DeclStmt									
ANR	2024799	Decl							int	int [ 256 ]	chars
ANR	2024800	DeclStmt									
ANR	2024801	Decl							long	long	mymode
ANR	2024802	DeclStmt									
ANR	2024803	Decl							unsigned char	unsigned char *	buf
ANR	2024804	DeclStmt									
ANR	2024805	Decl							int	int	len
ANR	2024806	Decl							int	int	inx
ANR	2024807	DeclStmt									
ANR	2024808	Decl							char	char [ 256 ]	retstr
ANR	2024809	DeclStmt									
ANR	2024810	Decl							int	int	retlen
ANR	2024811	DeclStmt									
ANR	2024812	Decl							char	char *	s1
ANR	2024813	Decl							char	char *	s2
ANR	2024814	DeclStmt									
ANR	2024815	Decl							int	int	s1_len
ANR	2024816	Decl							int	int	s2_len
ANR	2024817	Function	string_natural_compare_function_ex	5057:0:120589:121269							
ANR	2024818	FunctionDef	"string_natural_compare_function_ex (zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive TSRMLS_DC)"		2024817	0					
ANR	2024819	CompoundStatement		5058:0:120719:121269	2024817	0					
ANR	2024820	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	5059:1:120722:120745	2024817	0	True				
ANR	2024821	IdentifierDecl	op1_copy		2024817	0					
ANR	2024822	IdentifierDeclType	zval		2024817	0					
ANR	2024823	Identifier	op1_copy		2024817	1					
ANR	2024824	IdentifierDecl	op2_copy		2024817	1					
ANR	2024825	IdentifierDeclType	zval		2024817	0					
ANR	2024826	Identifier	op2_copy		2024817	1					
ANR	2024827	IdentifierDeclStatement	"int use_copy1 = 0 , use_copy2 = 0 ;"	5060:1:120748:120780	2024817	1	True				
ANR	2024828	IdentifierDecl	use_copy1 = 0		2024817	0					
ANR	2024829	IdentifierDeclType	int		2024817	0					
ANR	2024830	Identifier	use_copy1		2024817	1					
ANR	2024831	AssignmentExpression	use_copy1 = 0		2024817	2		=			
ANR	2024832	Identifier	use_copy1		2024817	0					
ANR	2024833	PrimaryExpression	0		2024817	1					
ANR	2024834	IdentifierDecl	use_copy2 = 0		2024817	1					
ANR	2024835	IdentifierDeclType	int		2024817	0					
ANR	2024836	Identifier	use_copy2		2024817	1					
ANR	2024837	AssignmentExpression	use_copy2 = 0		2024817	2		=			
ANR	2024838	Identifier	use_copy2		2024817	0					
ANR	2024839	PrimaryExpression	0		2024817	1					
ANR	2024840	IfStatement	if ( Z_TYPE_P ( op1 ) != IS_STRING )		2024817	2					
ANR	2024841	Condition	Z_TYPE_P ( op1 ) != IS_STRING	5062:5:120788:120813	2024817	0	True				
ANR	2024842	EqualityExpression	Z_TYPE_P ( op1 ) != IS_STRING		2024817	0		!=			
ANR	2024843	CallExpression	Z_TYPE_P ( op1 )		2024817	0					
ANR	2024844	Callee	Z_TYPE_P		2024817	0					
ANR	2024845	Identifier	Z_TYPE_P		2024817	0					
ANR	2024846	ArgumentList	op1		2024817	1					
ANR	2024847	Argument	op1		2024817	0					
ANR	2024848	Identifier	op1		2024817	0					
ANR	2024849	Identifier	IS_STRING		2024817	1					
ANR	2024850	CompoundStatement		5:33:96:96	2024817	1					
ANR	2024851	ExpressionStatement	"zend_make_printable_zval ( op1 , & op1_copy , & use_copy1 )"	5063:2:120820:120872	2024817	0	True				
ANR	2024852	CallExpression	"zend_make_printable_zval ( op1 , & op1_copy , & use_copy1 )"		2024817	0					
ANR	2024853	Callee	zend_make_printable_zval		2024817	0					
ANR	2024854	Identifier	zend_make_printable_zval		2024817	0					
ANR	2024855	ArgumentList	op1		2024817	1					
ANR	2024856	Argument	op1		2024817	0					
ANR	2024857	Identifier	op1		2024817	0					
ANR	2024858	Argument	& op1_copy		2024817	1					
ANR	2024859	UnaryOperationExpression	& op1_copy		2024817	0					
ANR	2024860	UnaryOperator	&		2024817	0					
ANR	2024861	Identifier	op1_copy		2024817	1					
ANR	2024862	Argument	& use_copy1		2024817	2					
ANR	2024863	UnaryOperationExpression	& use_copy1		2024817	0					
ANR	2024864	UnaryOperator	&		2024817	0					
ANR	2024865	Identifier	use_copy1		2024817	1					
ANR	2024866	IfStatement	if ( Z_TYPE_P ( op2 ) != IS_STRING )		2024817	3					
ANR	2024867	Condition	Z_TYPE_P ( op2 ) != IS_STRING	5065:5:120882:120907	2024817	0	True				
ANR	2024868	EqualityExpression	Z_TYPE_P ( op2 ) != IS_STRING		2024817	0		!=			
ANR	2024869	CallExpression	Z_TYPE_P ( op2 )		2024817	0					
ANR	2024870	Callee	Z_TYPE_P		2024817	0					
ANR	2024871	Identifier	Z_TYPE_P		2024817	0					
ANR	2024872	ArgumentList	op2		2024817	1					
ANR	2024873	Argument	op2		2024817	0					
ANR	2024874	Identifier	op2		2024817	0					
ANR	2024875	Identifier	IS_STRING		2024817	1					
ANR	2024876	CompoundStatement		8:33:190:190	2024817	1					
ANR	2024877	ExpressionStatement	"zend_make_printable_zval ( op2 , & op2_copy , & use_copy2 )"	5066:2:120914:120966	2024817	0	True				
ANR	2024878	CallExpression	"zend_make_printable_zval ( op2 , & op2_copy , & use_copy2 )"		2024817	0					
ANR	2024879	Callee	zend_make_printable_zval		2024817	0					
ANR	2024880	Identifier	zend_make_printable_zval		2024817	0					
ANR	2024881	ArgumentList	op2		2024817	1					
ANR	2024882	Argument	op2		2024817	0					
ANR	2024883	Identifier	op2		2024817	0					
ANR	2024884	Argument	& op2_copy		2024817	1					
ANR	2024885	UnaryOperationExpression	& op2_copy		2024817	0					
ANR	2024886	UnaryOperator	&		2024817	0					
ANR	2024887	Identifier	op2_copy		2024817	1					
ANR	2024888	Argument	& use_copy2		2024817	2					
ANR	2024889	UnaryOperationExpression	& use_copy2		2024817	0					
ANR	2024890	UnaryOperator	&		2024817	0					
ANR	2024891	Identifier	use_copy2		2024817	1					
ANR	2024892	IfStatement	if ( use_copy1 )		2024817	4					
ANR	2024893	Condition	use_copy1	5069:5:120977:120985	2024817	0	True				
ANR	2024894	Identifier	use_copy1		2024817	0					
ANR	2024895	CompoundStatement		12:16:268:268	2024817	1					
ANR	2024896	ExpressionStatement	op1 = & op1_copy	5070:2:120992:121007	2024817	0	True				
ANR	2024897	AssignmentExpression	op1 = & op1_copy		2024817	0		=			
ANR	2024898	Identifier	op1		2024817	0					
ANR	2024899	UnaryOperationExpression	& op1_copy		2024817	1					
ANR	2024900	UnaryOperator	&		2024817	0					
ANR	2024901	Identifier	op1_copy		2024817	1					
ANR	2024902	IfStatement	if ( use_copy2 )		2024817	5					
ANR	2024903	Condition	use_copy2	5072:5:121017:121025	2024817	0	True				
ANR	2024904	Identifier	use_copy2		2024817	0					
ANR	2024905	CompoundStatement		15:16:308:308	2024817	1					
ANR	2024906	ExpressionStatement	op2 = & op2_copy	5073:2:121032:121047	2024817	0	True				
ANR	2024907	AssignmentExpression	op2 = & op2_copy		2024817	0		=			
ANR	2024908	Identifier	op2		2024817	0					
ANR	2024909	UnaryOperationExpression	& op2_copy		2024817	1					
ANR	2024910	UnaryOperator	&		2024817	0					
ANR	2024911	Identifier	op2_copy		2024817	1					
ANR	2024912	ExpressionStatement	"ZVAL_LONG ( result , strnatcmp_ex ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) , case_insensitive ) )"	5076:1:121054:121171	2024817	6	True				
ANR	2024913	CallExpression	"ZVAL_LONG ( result , strnatcmp_ex ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) , case_insensitive ) )"		2024817	0					
ANR	2024914	Callee	ZVAL_LONG		2024817	0					
ANR	2024915	Identifier	ZVAL_LONG		2024817	0					
ANR	2024916	ArgumentList	result		2024817	1					
ANR	2024917	Argument	result		2024817	0					
ANR	2024918	Identifier	result		2024817	0					
ANR	2024919	Argument	"strnatcmp_ex ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) , case_insensitive )"		2024817	1					
ANR	2024920	CallExpression	"strnatcmp_ex ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) , case_insensitive )"		2024817	0					
ANR	2024921	Callee	strnatcmp_ex		2024817	0					
ANR	2024922	Identifier	strnatcmp_ex		2024817	0					
ANR	2024923	ArgumentList	Z_STRVAL_P ( op1 )		2024817	1					
ANR	2024924	Argument	Z_STRVAL_P ( op1 )		2024817	0					
ANR	2024925	CallExpression	Z_STRVAL_P ( op1 )		2024817	0					
ANR	2024926	Callee	Z_STRVAL_P		2024817	0					
ANR	2024927	Identifier	Z_STRVAL_P		2024817	0					
ANR	2024928	ArgumentList	op1		2024817	1					
ANR	2024929	Argument	op1		2024817	0					
ANR	2024930	Identifier	op1		2024817	0					
ANR	2024931	Argument	Z_STRLEN_P ( op1 )		2024817	1					
ANR	2024932	CallExpression	Z_STRLEN_P ( op1 )		2024817	0					
ANR	2024933	Callee	Z_STRLEN_P		2024817	0					
ANR	2024934	Identifier	Z_STRLEN_P		2024817	0					
ANR	2024935	ArgumentList	op1		2024817	1					
ANR	2024936	Argument	op1		2024817	0					
ANR	2024937	Identifier	op1		2024817	0					
ANR	2024938	Argument	Z_STRVAL_P ( op2 )		2024817	2					
ANR	2024939	CallExpression	Z_STRVAL_P ( op2 )		2024817	0					
ANR	2024940	Callee	Z_STRVAL_P		2024817	0					
ANR	2024941	Identifier	Z_STRVAL_P		2024817	0					
ANR	2024942	ArgumentList	op2		2024817	1					
ANR	2024943	Argument	op2		2024817	0					
ANR	2024944	Identifier	op2		2024817	0					
ANR	2024945	Argument	Z_STRLEN_P ( op2 )		2024817	3					
ANR	2024946	CallExpression	Z_STRLEN_P ( op2 )		2024817	0					
ANR	2024947	Callee	Z_STRLEN_P		2024817	0					
ANR	2024948	Identifier	Z_STRLEN_P		2024817	0					
ANR	2024949	ArgumentList	op2		2024817	1					
ANR	2024950	Argument	op2		2024817	0					
ANR	2024951	Identifier	op2		2024817	0					
ANR	2024952	Argument	case_insensitive		2024817	4					
ANR	2024953	Identifier	case_insensitive		2024817	0					
ANR	2024954	IfStatement	if ( use_copy1 )		2024817	7					
ANR	2024955	Condition	use_copy1	5078:5:121179:121187	2024817	0	True				
ANR	2024956	Identifier	use_copy1		2024817	0					
ANR	2024957	CompoundStatement		21:16:470:470	2024817	1					
ANR	2024958	ExpressionStatement	zval_dtor ( op1 )	5079:2:121194:121208	2024817	0	True				
ANR	2024959	CallExpression	zval_dtor ( op1 )		2024817	0					
ANR	2024960	Callee	zval_dtor		2024817	0					
ANR	2024961	Identifier	zval_dtor		2024817	0					
ANR	2024962	ArgumentList	op1		2024817	1					
ANR	2024963	Argument	op1		2024817	0					
ANR	2024964	Identifier	op1		2024817	0					
ANR	2024965	IfStatement	if ( use_copy2 )		2024817	8					
ANR	2024966	Condition	use_copy2	5081:5:121218:121226	2024817	0	True				
ANR	2024967	Identifier	use_copy2		2024817	0					
ANR	2024968	CompoundStatement		24:16:509:509	2024817	1					
ANR	2024969	ExpressionStatement	zval_dtor ( op2 )	5082:2:121233:121247	2024817	0	True				
ANR	2024970	CallExpression	zval_dtor ( op2 )		2024817	0					
ANR	2024971	Callee	zval_dtor		2024817	0					
ANR	2024972	Identifier	zval_dtor		2024817	0					
ANR	2024973	ArgumentList	op2		2024817	1					
ANR	2024974	Argument	op2		2024817	0					
ANR	2024975	Identifier	op2		2024817	0					
ANR	2024976	ReturnStatement	return SUCCESS ;	5084:1:121253:121267	2024817	9	True				
ANR	2024977	Identifier	SUCCESS		2024817	0					
ANR	2024978	ReturnType	PHPAPI int		2024817	1					
ANR	2024979	Identifier	string_natural_compare_function_ex		2024817	2					
ANR	2024980	ParameterList	"zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive TSRMLS_DC"		2024817	3					
ANR	2024981	Parameter	zval * result	5057:46:120635:120646	2024817	0	True				
ANR	2024982	ParameterType	zval *		2024817	0					
ANR	2024983	Identifier	result		2024817	1					
ANR	2024984	Parameter	zval * op1	5057:60:120649:120657	2024817	1	True				
ANR	2024985	ParameterType	zval *		2024817	0					
ANR	2024986	Identifier	op1		2024817	1					
ANR	2024987	Parameter	zval * op2	5057:71:120660:120668	2024817	2	True				
ANR	2024988	ParameterType	zval *		2024817	0					
ANR	2024989	Identifier	op2		2024817	1					
ANR	2024990	Parameter	zend_bool case_insensitive TSRMLS_DC	5057:82:120671:120706	2024817	3	True				
ANR	2024991	ParameterType	zend_bool case_insensitive		2024817	0					
ANR	2024992	Identifier	TSRMLS_DC		2024817	1					
ANR	2024993	CFGEntryNode	ENTRY		2024817		True				
ANR	2024994	CFGExitNode	EXIT		2024817		True				
ANR	2024995	Symbol	use_copy1		2024817						
ANR	2024996	Symbol	use_copy2		2024817						
ANR	2024997	Symbol	SUCCESS		2024817						
ANR	2024998	Symbol	case_insensitive		2024817						
ANR	2024999	Symbol	op1_copy		2024817						
ANR	2025000	Symbol	& op1_copy		2024817						
ANR	2025001	Symbol	Z_TYPE_P		2024817						
ANR	2025002	Symbol	& use_copy2		2024817						
ANR	2025003	Symbol	TSRMLS_DC		2024817						
ANR	2025004	Symbol	& use_copy1		2024817						
ANR	2025005	Symbol	Z_STRVAL_P		2024817						
ANR	2025006	Symbol	strnatcmp_ex		2024817						
ANR	2025007	Symbol	result		2024817						
ANR	2025008	Symbol	op2		2024817						
ANR	2025009	Symbol	op1		2024817						
ANR	2025010	Symbol	& op2_copy		2024817						
ANR	2025011	Symbol	Z_STRLEN_P		2024817						
ANR	2025012	Symbol	op2_copy		2024817						
ANR	2025013	Symbol	IS_STRING		2024817						
ANR	2025014	DeclStmt									
ANR	2025015	Decl							zval	zval *	grouping
ANR	2025016	Decl							zval	zval *	mon_grouping
ANR	2025017	DeclStmt									
ANR	2025018	Decl							int	int	len
ANR	2025019	Decl							int	int	i
ANR	2025020	DeclStmt									
ANR	2025021	Decl							struct lconv	struct lconv	currlocdata
ANR	2025022	DeclStmt									
ANR	2025023	Decl							char	char *	haystack
ANR	2025024	Decl							char	char *	needle
ANR	2025025	DeclStmt									
ANR	2025026	Decl							long	long	offset
ANR	2025027	Decl							long	long	length
ANR	2025028	DeclStmt									
ANR	2025029	Decl							int	int	ac
ANR	2025030	DeclStmt									
ANR	2025031	Decl							int	int	count
ANR	2025032	DeclStmt									
ANR	2025033	Decl							int	int	haystack_len
ANR	2025034	Decl							int	int	needle_len
ANR	2025035	DeclStmt									
ANR	2025036	Decl							char	char *	p
ANR	2025037	Decl							char	char *	endp
ANR	2025038	Decl							char	char	cmp
ANR	2025039	DeclStmt									
ANR	2025040	Decl							char	char *	input
ANR	2025041	DeclStmt									
ANR	2025042	Decl							int	int	input_len
ANR	2025043	DeclStmt									
ANR	2025044	Decl							long	long	pad_length
ANR	2025045	DeclStmt									
ANR	2025046	Decl							size_t	size_t	num_pad_chars
ANR	2025047	DeclStmt									
ANR	2025048	Decl							char	char *	result
ANR	2025049	DeclStmt									
ANR	2025050	Decl							int	int	result_len
ANR	2025051	DeclStmt									
ANR	2025052	Decl							char	char *	pad_str_val
ANR	2025053	DeclStmt									
ANR	2025054	Decl							int	int	pad_str_len
ANR	2025055	DeclStmt									
ANR	2025056	Decl							long	long	pad_type_val
ANR	2025057	DeclStmt									
ANR	2025058	Decl							int	int	i
ANR	2025059	Decl							int	int	left_pad
ANR	2025060	Decl							int	int	right_pad
ANR	2025061	DeclStmt									
ANR	2025062	Decl							zval	zval * * *	args
ANR	2025063	DeclStmt									
ANR	2025064	Decl							char	char *	str
ANR	2025065	Decl							char	char *	format
ANR	2025066	DeclStmt									
ANR	2025067	Decl							int	int	str_len
ANR	2025068	Decl							int	int	format_len
ANR	2025069	Decl							int	int	result
ANR	2025070	Decl							int	int	num_args
ANR	2025071	DeclStmt									
ANR	2025072	Decl							char	char [ ]	rot13_from
ANR	2025073	DeclStmt									
ANR	2025074	Decl							char	char [ ]	rot13_to
ANR	2025075	DeclStmt									
ANR	2025076	Decl							char	char *	arg
ANR	2025077	DeclStmt									
ANR	2025078	Decl							int	int	arglen
ANR	2025079	Function	php_string_shuffle	5394:0:131102:131636							
ANR	2025080	FunctionDef	"php_string_shuffle (char * str , long len TSRMLS_DC)"		2025079	0					
ANR	2025081	CompoundStatement		5395:0:131174:131636	2025079	0					
ANR	2025082	IdentifierDeclStatement	"long n_elems , rnd_idx , n_left ;"	5396:1:131177:131206	2025079	0	True				
ANR	2025083	IdentifierDecl	n_elems		2025079	0					
ANR	2025084	IdentifierDeclType	long		2025079	0					
ANR	2025085	Identifier	n_elems		2025079	1					
ANR	2025086	IdentifierDecl	rnd_idx		2025079	1					
ANR	2025087	IdentifierDeclType	long		2025079	0					
ANR	2025088	Identifier	rnd_idx		2025079	1					
ANR	2025089	IdentifierDecl	n_left		2025079	2					
ANR	2025090	IdentifierDeclType	long		2025079	0					
ANR	2025091	Identifier	n_left		2025079	1					
ANR	2025092	IdentifierDeclStatement	char temp ;	5397:1:131209:131218	2025079	1	True				
ANR	2025093	IdentifierDecl	temp		2025079	0					
ANR	2025094	IdentifierDeclType	char		2025079	0					
ANR	2025095	Identifier	temp		2025079	1					
ANR	2025096	ExpressionStatement	n_elems = len	5400:1:131353:131366	2025079	2	True				
ANR	2025097	AssignmentExpression	n_elems = len		2025079	0		=			
ANR	2025098	Identifier	n_elems		2025079	0					
ANR	2025099	Identifier	len		2025079	1					
ANR	2025100	IfStatement	if ( n_elems <= 1 )		2025079	3					
ANR	2025101	Condition	n_elems <= 1	5402:5:131374:131385	2025079	0	True				
ANR	2025102	RelationalExpression	n_elems <= 1		2025079	0		<=			
ANR	2025103	Identifier	n_elems		2025079	0					
ANR	2025104	PrimaryExpression	1		2025079	1					
ANR	2025105	CompoundStatement		8:19:213:213	2025079	1					
ANR	2025106	ReturnStatement	return ;	5403:2:131392:131398	2025079	0	True				
ANR	2025107	ExpressionStatement	n_left = n_elems	5406:1:131405:131421	2025079	4	True				
ANR	2025108	AssignmentExpression	n_left = n_elems		2025079	0		=			
ANR	2025109	Identifier	n_left		2025079	0					
ANR	2025110	Identifier	n_elems		2025079	1					
ANR	2025111	WhileStatement	while ( -- n_left )		2025079	5					
ANR	2025112	Condition	-- n_left	5408:8:131432:131439	2025079	0	True				
ANR	2025113	UnaryExpression	-- n_left		2025079	0					
ANR	2025114	IncDec	--		2025079	0					
ANR	2025115	Identifier	n_left		2025079	1					
ANR	2025116	CompoundStatement		14:18:267:267	2025079	1					
ANR	2025117	ExpressionStatement	rnd_idx = php_rand ( TSRMLS_C )	5409:2:131446:131474	2025079	0	True				
ANR	2025118	AssignmentExpression	rnd_idx = php_rand ( TSRMLS_C )		2025079	0		=			
ANR	2025119	Identifier	rnd_idx		2025079	0					
ANR	2025120	CallExpression	php_rand ( TSRMLS_C )		2025079	1					
ANR	2025121	Callee	php_rand		2025079	0					
ANR	2025122	Identifier	php_rand		2025079	0					
ANR	2025123	ArgumentList	TSRMLS_C		2025079	1					
ANR	2025124	Argument	TSRMLS_C		2025079	0					
ANR	2025125	Identifier	TSRMLS_C		2025079	0					
ANR	2025126	ExpressionStatement	"RAND_RANGE ( rnd_idx , 0 , n_left , PHP_RAND_MAX )"	5410:2:131478:131522	2025079	1	True				
ANR	2025127	CallExpression	"RAND_RANGE ( rnd_idx , 0 , n_left , PHP_RAND_MAX )"		2025079	0					
ANR	2025128	Callee	RAND_RANGE		2025079	0					
ANR	2025129	Identifier	RAND_RANGE		2025079	0					
ANR	2025130	ArgumentList	rnd_idx		2025079	1					
ANR	2025131	Argument	rnd_idx		2025079	0					
ANR	2025132	Identifier	rnd_idx		2025079	0					
ANR	2025133	Argument	0		2025079	1					
ANR	2025134	PrimaryExpression	0		2025079	0					
ANR	2025135	Argument	n_left		2025079	2					
ANR	2025136	Identifier	n_left		2025079	0					
ANR	2025137	Argument	PHP_RAND_MAX		2025079	3					
ANR	2025138	Identifier	PHP_RAND_MAX		2025079	0					
ANR	2025139	IfStatement	if ( rnd_idx != n_left )		2025079	2					
ANR	2025140	Condition	rnd_idx != n_left	5411:6:131530:131546	2025079	0	True				
ANR	2025141	EqualityExpression	rnd_idx != n_left		2025079	0		!=			
ANR	2025142	Identifier	rnd_idx		2025079	0					
ANR	2025143	Identifier	n_left		2025079	1					
ANR	2025144	CompoundStatement		17:25:374:374	2025079	1					
ANR	2025145	ExpressionStatement	temp = str [ n_left ]	5412:3:131554:131572	2025079	0	True				
ANR	2025146	AssignmentExpression	temp = str [ n_left ]		2025079	0		=			
ANR	2025147	Identifier	temp		2025079	0					
ANR	2025148	ArrayIndexing	str [ n_left ]		2025079	1					
ANR	2025149	Identifier	str		2025079	0					
ANR	2025150	Identifier	n_left		2025079	1					
ANR	2025151	ExpressionStatement	str [ n_left ] = str [ rnd_idx ]	5413:3:131577:131603	2025079	1	True				
ANR	2025152	AssignmentExpression	str [ n_left ] = str [ rnd_idx ]		2025079	0		=			
ANR	2025153	ArrayIndexing	str [ n_left ]		2025079	0					
ANR	2025154	Identifier	str		2025079	0					
ANR	2025155	Identifier	n_left		2025079	1					
ANR	2025156	ArrayIndexing	str [ rnd_idx ]		2025079	1					
ANR	2025157	Identifier	str		2025079	0					
ANR	2025158	Identifier	rnd_idx		2025079	1					
ANR	2025159	ExpressionStatement	str [ rnd_idx ] = temp	5414:3:131608:131627	2025079	2	True				
ANR	2025160	AssignmentExpression	str [ rnd_idx ] = temp		2025079	0		=			
ANR	2025161	ArrayIndexing	str [ rnd_idx ]		2025079	0					
ANR	2025162	Identifier	str		2025079	0					
ANR	2025163	Identifier	rnd_idx		2025079	1					
ANR	2025164	Identifier	temp		2025079	1					
ANR	2025165	ReturnType	static void		2025079	1					
ANR	2025166	Identifier	php_string_shuffle		2025079	2					
ANR	2025167	ParameterList	"char * str , long len TSRMLS_DC"		2025079	3					
ANR	2025168	Parameter	char * str	5394:31:131133:131141	2025079	0	True				
ANR	2025169	ParameterType	char *		2025079	0					
ANR	2025170	Identifier	str		2025079	1					
ANR	2025171	Parameter	long len TSRMLS_DC	5394:42:131144:131161	2025079	1	True				
ANR	2025172	ParameterType	long len		2025079	0					
ANR	2025173	Identifier	TSRMLS_DC		2025079	1					
ANR	2025174	CFGEntryNode	ENTRY		2025079		True				
ANR	2025175	CFGExitNode	EXIT		2025079		True				
ANR	2025176	Symbol	temp		2025079						
ANR	2025177	Symbol	TSRMLS_DC		2025079						
ANR	2025178	Symbol	rnd_idx		2025079						
ANR	2025179	Symbol	str		2025079						
ANR	2025180	Symbol	TSRMLS_C		2025079						
ANR	2025181	Symbol	len		2025079						
ANR	2025182	Symbol	* n_left		2025079						
ANR	2025183	Symbol	php_rand		2025079						
ANR	2025184	Symbol	n_elems		2025079						
ANR	2025185	Symbol	PHP_RAND_MAX		2025079						
ANR	2025186	Symbol	* rnd_idx		2025079						
ANR	2025187	Symbol	n_left		2025079						
ANR	2025188	Symbol	* str		2025079						
ANR	2025189	DeclStmt									
ANR	2025190	Decl							char	char *	arg
ANR	2025191	DeclStmt									
ANR	2025192	Decl							int	int	arglen
ANR	2025193	DeclStmt									
ANR	2025194	Decl							char	char *	buf
ANR	2025195	Decl							char	char *	str
ANR	2025196	Decl							char	char *	char_list
ANR	2025197	Decl							char	char *	p
ANR	2025198	Decl							char	char *	e
ANR	2025199	Decl							char	char *	s
ANR	2025200	Decl							char	char [ 256 ]	ch
ANR	2025201	DeclStmt									
ANR	2025202	Decl							int	int	str_len
ANR	2025203	Decl							int	int	char_list_len
ANR	2025204	Decl							int	int	word_count
ANR	2025205	DeclStmt									
ANR	2025206	Decl							long	long	type
ANR	2025207	DeclStmt									
ANR	2025208	Decl							int	int	format_len
ANR	2025209	Decl							int	int	str_len
ANR	2025210	DeclStmt									
ANR	2025211	Decl							char	char *	format
ANR	2025212	Decl							char	char *	str
ANR	2025213	Decl							char	char *	p
ANR	2025214	Decl							char	char *	e
ANR	2025215	DeclStmt									
ANR	2025216	Decl							double	double	value
ANR	2025217	DeclStmt									
ANR	2025218	Decl							zend_bool	zend_bool	check
ANR	2025219	DeclStmt									
ANR	2025220	Decl							char	char *	str
ANR	2025221	DeclStmt									
ANR	2025222	Decl							int	int	str_len
ANR	2025223	DeclStmt									
ANR	2025224	Decl							long	long	split_length
ANR	2025225	DeclStmt									
ANR	2025226	Decl							char	char *	p
ANR	2025227	DeclStmt									
ANR	2025228	Decl							int	int	n_reg_segments
ANR	2025229	DeclStmt									
ANR	2025230	Decl							char	char *	haystack
ANR	2025231	Decl							char	char *	char_list
ANR	2025232	DeclStmt									
ANR	2025233	Decl							int	int	haystack_len
ANR	2025234	Decl							int	int	char_list_len
ANR	2025235	DeclStmt									
ANR	2025236	Decl							char	char *	haystack_ptr
ANR	2025237	Decl							char	char *	cl_ptr
ANR	2025238	DeclStmt									
ANR	2025239	Decl							char	char *	s1
ANR	2025240	Decl							char	char *	s2
ANR	2025241	DeclStmt									
ANR	2025242	Decl							int	int	s1_len
ANR	2025243	Decl							int	int	s2_len
ANR	2025244	DeclStmt									
ANR	2025245	Decl							long	long	offset
ANR	2025246	Decl							long	long	len
ANR	2025247	DeclStmt									
ANR	2025248	Decl							zend_bool	zend_bool	cs
ANR	2025249	DeclStmt									
ANR	2025250	Decl							uint	uint	cmp_len
