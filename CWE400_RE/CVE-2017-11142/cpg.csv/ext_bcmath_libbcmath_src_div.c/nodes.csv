command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	137420	File	data/converged/CVE-2017-11142_php-src/ext_bcmath_libbcmath_src_div.c								
ANR	137421	DeclStmt									
ANR	137422	Decl							unsigned char	unsigned char *	num
ANR	137423	DeclStmt									
ANR	137424	Decl							int	int	size
ANR	137425	Decl							int	int	digit
ANR	137426	DeclStmt									
ANR	137427	Decl							unsigned char	unsigned char *	result
ANR	137428	DeclStmt									
ANR	137429	Decl							int	int	carry
ANR	137430	Decl							int	int	value
ANR	137431	DeclStmt									
ANR	137432	Decl							unsigned char	unsigned char *	nptr
ANR	137433	Decl							unsigned char	unsigned char *	rptr
ANR	137434	Function	bc_divide	87:0:2528:7145							
ANR	137435	FunctionDef	"bc_divide (bc_num n1 , bc_num n2 , bc_num * quot , int scale TSRMLS_DC)"		137434	0					
ANR	137436	CompoundStatement		89:0:2600:7145	137434	0					
ANR	137437	IdentifierDeclStatement	bc_num qval ;	90:2:2604:2615	137434	0	True				
ANR	137438	IdentifierDecl	qval		137434	0					
ANR	137439	IdentifierDeclType	bc_num		137434	0					
ANR	137440	Identifier	qval		137434	1					
ANR	137441	IdentifierDeclStatement	"unsigned char * num1 , * num2 ;"	91:2:2619:2645	137434	1	True				
ANR	137442	IdentifierDecl	* num1		137434	0					
ANR	137443	IdentifierDeclType	unsigned char *		137434	0					
ANR	137444	Identifier	num1		137434	1					
ANR	137445	IdentifierDecl	* num2		137434	1					
ANR	137446	IdentifierDeclType	unsigned char *		137434	0					
ANR	137447	Identifier	num2		137434	1					
ANR	137448	IdentifierDeclStatement	"unsigned char * ptr1 , * ptr2 , * n2ptr , * qptr ;"	92:2:2649:2690	137434	2	True				
ANR	137449	IdentifierDecl	* ptr1		137434	0					
ANR	137450	IdentifierDeclType	unsigned char *		137434	0					
ANR	137451	Identifier	ptr1		137434	1					
ANR	137452	IdentifierDecl	* ptr2		137434	1					
ANR	137453	IdentifierDeclType	unsigned char *		137434	0					
ANR	137454	Identifier	ptr2		137434	1					
ANR	137455	IdentifierDecl	* n2ptr		137434	2					
ANR	137456	IdentifierDeclType	unsigned char *		137434	0					
ANR	137457	Identifier	n2ptr		137434	1					
ANR	137458	IdentifierDecl	* qptr		137434	3					
ANR	137459	IdentifierDeclType	unsigned char *		137434	0					
ANR	137460	Identifier	qptr		137434	1					
ANR	137461	IdentifierDeclStatement	"int scale1 , val ;"	93:2:2694:2710	137434	3	True				
ANR	137462	IdentifierDecl	scale1		137434	0					
ANR	137463	IdentifierDeclType	int		137434	0					
ANR	137464	Identifier	scale1		137434	1					
ANR	137465	IdentifierDecl	val		137434	1					
ANR	137466	IdentifierDeclType	int		137434	0					
ANR	137467	Identifier	val		137434	1					
ANR	137468	IdentifierDeclStatement	"unsigned int len1 , len2 , scale2 , qdigits , extra , count ;"	94:2:2714:2769	137434	4	True				
ANR	137469	IdentifierDecl	len1		137434	0					
ANR	137470	IdentifierDeclType	unsigned int		137434	0					
ANR	137471	Identifier	len1		137434	1					
ANR	137472	IdentifierDecl	len2		137434	1					
ANR	137473	IdentifierDeclType	unsigned int		137434	0					
ANR	137474	Identifier	len2		137434	1					
ANR	137475	IdentifierDecl	scale2		137434	2					
ANR	137476	IdentifierDeclType	unsigned int		137434	0					
ANR	137477	Identifier	scale2		137434	1					
ANR	137478	IdentifierDecl	qdigits		137434	3					
ANR	137479	IdentifierDeclType	unsigned int		137434	0					
ANR	137480	Identifier	qdigits		137434	1					
ANR	137481	IdentifierDecl	extra		137434	4					
ANR	137482	IdentifierDeclType	unsigned int		137434	0					
ANR	137483	Identifier	extra		137434	1					
ANR	137484	IdentifierDecl	count		137434	5					
ANR	137485	IdentifierDeclType	unsigned int		137434	0					
ANR	137486	Identifier	count		137434	1					
ANR	137487	IdentifierDeclStatement	"unsigned int qdig , qguess , borrow , carry ;"	95:2:2773:2814	137434	5	True				
ANR	137488	IdentifierDecl	qdig		137434	0					
ANR	137489	IdentifierDeclType	unsigned int		137434	0					
ANR	137490	Identifier	qdig		137434	1					
ANR	137491	IdentifierDecl	qguess		137434	1					
ANR	137492	IdentifierDeclType	unsigned int		137434	0					
ANR	137493	Identifier	qguess		137434	1					
ANR	137494	IdentifierDecl	borrow		137434	2					
ANR	137495	IdentifierDeclType	unsigned int		137434	0					
ANR	137496	Identifier	borrow		137434	1					
ANR	137497	IdentifierDecl	carry		137434	3					
ANR	137498	IdentifierDeclType	unsigned int		137434	0					
ANR	137499	Identifier	carry		137434	1					
ANR	137500	IdentifierDeclStatement	unsigned char * mval ;	96:2:2818:2837	137434	6	True				
ANR	137501	IdentifierDecl	* mval		137434	0					
ANR	137502	IdentifierDeclType	unsigned char *		137434	0					
ANR	137503	Identifier	mval		137434	1					
ANR	137504	IdentifierDeclStatement	char zero ;	97:2:2841:2850	137434	7	True				
ANR	137505	IdentifierDecl	zero		137434	0					
ANR	137506	IdentifierDeclType	char		137434	0					
ANR	137507	Identifier	zero		137434	1					
ANR	137508	IdentifierDeclStatement	unsigned int norm ;	98:2:2854:2872	137434	8	True				
ANR	137509	IdentifierDecl	norm		137434	0					
ANR	137510	IdentifierDeclType	unsigned int		137434	0					
ANR	137511	Identifier	norm		137434	1					
ANR	137512	Statement	if	101:2:2910:2911	137434	9	True				
ANR	137513	Statement	(	101:5:2913:2913	137434	10	True				
ANR	137514	Statement	bc_is_zero	101:6:2914:2923	137434	11	True				
ANR	137515	Statement	(	101:17:2925:2925	137434	12	True				
ANR	137516	Statement	n2	101:18:2926:2927	137434	13	True				
ANR	137517	Statement	TSRMLS_CC	101:21:2929:2937	137434	14	True				
ANR	137518	Statement	)	101:30:2938:2938	137434	15	True				
ANR	137519	Statement	)	101:31:2939:2939	137434	16	True				
ANR	137520	ReturnStatement	return - 1 ;	101:33:2941:2950	137434	17	True				
ANR	137521	UnaryOperationExpression	- 1		137434	0					
ANR	137522	UnaryOperator	-		137434	0					
ANR	137523	PrimaryExpression	1		137434	1					
ANR	137524	IfStatement	if ( n2 -> n_scale == 0 )		137434	18					
ANR	137525	Condition	n2 -> n_scale == 0	104:6:3017:3032	137434	0	True				
ANR	137526	EqualityExpression	n2 -> n_scale == 0		137434	0		==			
ANR	137527	PtrMemberAccess	n2 -> n_scale		137434	0					
ANR	137528	Identifier	n2		137434	0					
ANR	137529	Identifier	n_scale		137434	1					
ANR	137530	PrimaryExpression	0		137434	1					
ANR	137531	CompoundStatement		17:4:438:438	137434	1					
ANR	137532	IfStatement	if ( n2 -> n_len == 1 && * n2 -> n_value == 1 )		137434	0					
ANR	137533	Condition	n2 -> n_len == 1 && * n2 -> n_value == 1	106:10:3051:3085	137434	0	True				
ANR	137534	AndExpression	n2 -> n_len == 1 && * n2 -> n_value == 1		137434	0		&&			
ANR	137535	EqualityExpression	n2 -> n_len == 1		137434	0		==			
ANR	137536	PtrMemberAccess	n2 -> n_len		137434	0					
ANR	137537	Identifier	n2		137434	0					
ANR	137538	Identifier	n_len		137434	1					
ANR	137539	PrimaryExpression	1		137434	1					
ANR	137540	EqualityExpression	* n2 -> n_value == 1		137434	1		==			
ANR	137541	UnaryOperationExpression	* n2 -> n_value		137434	0					
ANR	137542	UnaryOperator	*		137434	0					
ANR	137543	PtrMemberAccess	n2 -> n_value		137434	1					
ANR	137544	Identifier	n2		137434	0					
ANR	137545	Identifier	n_value		137434	1					
ANR	137546	PrimaryExpression	1		137434	1					
ANR	137547	CompoundStatement		19:1:488:488	137434	1					
ANR	137548	ExpressionStatement	"qval = bc_new_num ( n1 -> n_len , scale )"	108:3:3094:3130	137434	0	True				
ANR	137549	AssignmentExpression	"qval = bc_new_num ( n1 -> n_len , scale )"		137434	0		=			
ANR	137550	Identifier	qval		137434	0					
ANR	137551	CallExpression	"bc_new_num ( n1 -> n_len , scale )"		137434	1					
ANR	137552	Callee	bc_new_num		137434	0					
ANR	137553	Identifier	bc_new_num		137434	0					
ANR	137554	ArgumentList	n1 -> n_len		137434	1					
ANR	137555	Argument	n1 -> n_len		137434	0					
ANR	137556	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137557	Identifier	n1		137434	0					
ANR	137558	Identifier	n_len		137434	1					
ANR	137559	Argument	scale		137434	1					
ANR	137560	Identifier	scale		137434	0					
ANR	137561	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	109:3:3135:3191	137434	1	True				
ANR	137562	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		137434	0		=			
ANR	137563	PtrMemberAccess	qval -> n_sign		137434	0					
ANR	137564	Identifier	qval		137434	0					
ANR	137565	Identifier	n_sign		137434	1					
ANR	137566	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		137434	1					
ANR	137567	Condition	n1 -> n_sign == n2 -> n_sign		137434	0					
ANR	137568	EqualityExpression	n1 -> n_sign == n2 -> n_sign		137434	0		==			
ANR	137569	PtrMemberAccess	n1 -> n_sign		137434	0					
ANR	137570	Identifier	n1		137434	0					
ANR	137571	Identifier	n_sign		137434	1					
ANR	137572	PtrMemberAccess	n2 -> n_sign		137434	1					
ANR	137573	Identifier	n2		137434	0					
ANR	137574	Identifier	n_sign		137434	1					
ANR	137575	Identifier	PLUS		137434	1					
ANR	137576	Identifier	MINUS		137434	2					
ANR	137577	ExpressionStatement	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"	110:3:3196:3238	137434	2	True				
ANR	137578	CallExpression	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"		137434	0					
ANR	137579	Callee	memset		137434	0					
ANR	137580	Identifier	memset		137434	0					
ANR	137581	ArgumentList	& qval -> n_value [ n1 -> n_len ]		137434	1					
ANR	137582	Argument	& qval -> n_value [ n1 -> n_len ]		137434	0					
ANR	137583	UnaryOperationExpression	& qval -> n_value [ n1 -> n_len ]		137434	0					
ANR	137584	UnaryOperator	&		137434	0					
ANR	137585	ArrayIndexing	qval -> n_value [ n1 -> n_len ]		137434	1					
ANR	137586	PtrMemberAccess	qval -> n_value		137434	0					
ANR	137587	Identifier	qval		137434	0					
ANR	137588	Identifier	n_value		137434	1					
ANR	137589	PtrMemberAccess	n1 -> n_len		137434	1					
ANR	137590	Identifier	n1		137434	0					
ANR	137591	Identifier	n_len		137434	1					
ANR	137592	Argument	0		137434	1					
ANR	137593	PrimaryExpression	0		137434	0					
ANR	137594	Argument	scale		137434	2					
ANR	137595	Identifier	scale		137434	0					
ANR	137596	ExpressionStatement	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"	111:3:3243:3318	137434	3	True				
ANR	137597	CallExpression	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"		137434	0					
ANR	137598	Callee	memcpy		137434	0					
ANR	137599	Identifier	memcpy		137434	0					
ANR	137600	ArgumentList	qval -> n_value		137434	1					
ANR	137601	Argument	qval -> n_value		137434	0					
ANR	137602	PtrMemberAccess	qval -> n_value		137434	0					
ANR	137603	Identifier	qval		137434	0					
ANR	137604	Identifier	n_value		137434	1					
ANR	137605	Argument	n1 -> n_value		137434	1					
ANR	137606	PtrMemberAccess	n1 -> n_value		137434	0					
ANR	137607	Identifier	n1		137434	0					
ANR	137608	Identifier	n_value		137434	1					
ANR	137609	Argument	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		137434	2					
ANR	137610	AdditiveExpression	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		137434	0		+			
ANR	137611	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137612	Identifier	n1		137434	0					
ANR	137613	Identifier	n_len		137434	1					
ANR	137614	CallExpression	"MIN ( n1 -> n_scale , scale )"		137434	1					
ANR	137615	Callee	MIN		137434	0					
ANR	137616	Identifier	MIN		137434	0					
ANR	137617	ArgumentList	n1 -> n_scale		137434	1					
ANR	137618	Argument	n1 -> n_scale		137434	0					
ANR	137619	PtrMemberAccess	n1 -> n_scale		137434	0					
ANR	137620	Identifier	n1		137434	0					
ANR	137621	Identifier	n_scale		137434	1					
ANR	137622	Argument	scale		137434	1					
ANR	137623	Identifier	scale		137434	0					
ANR	137624	ExpressionStatement	bc_free_num ( quot )	113:3:3323:3341	137434	4	True				
ANR	137625	CallExpression	bc_free_num ( quot )		137434	0					
ANR	137626	Callee	bc_free_num		137434	0					
ANR	137627	Identifier	bc_free_num		137434	0					
ANR	137628	ArgumentList	quot		137434	1					
ANR	137629	Argument	quot		137434	0					
ANR	137630	Identifier	quot		137434	0					
ANR	137631	ExpressionStatement	* quot = qval	114:3:3346:3358	137434	5	True				
ANR	137632	AssignmentExpression	* quot = qval		137434	0		=			
ANR	137633	UnaryOperationExpression	* quot		137434	0					
ANR	137634	UnaryOperator	*		137434	0					
ANR	137635	Identifier	quot		137434	1					
ANR	137636	Identifier	qval		137434	1					
ANR	137637	ExpressionStatement	scale2 = n2 -> n_scale	120:2:3516:3536	137434	19	True				
ANR	137638	AssignmentExpression	scale2 = n2 -> n_scale		137434	0		=			
ANR	137639	Identifier	scale2		137434	0					
ANR	137640	PtrMemberAccess	n2 -> n_scale		137434	1					
ANR	137641	Identifier	n2		137434	0					
ANR	137642	Identifier	n_scale		137434	1					
ANR	137643	ExpressionStatement	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1	121:2:3540:3596	137434	20	True				
ANR	137644	AssignmentExpression	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		137434	0		=			
ANR	137645	Identifier	n2ptr		137434	0					
ANR	137646	AdditiveExpression	( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		137434	1		+			
ANR	137647	CastExpression	( unsigned char * ) n2 -> n_value		137434	0					
ANR	137648	CastTarget	unsigned char *		137434	0					
ANR	137649	PtrMemberAccess	n2 -> n_value		137434	1					
ANR	137650	Identifier	n2		137434	0					
ANR	137651	Identifier	n_value		137434	1					
ANR	137652	AdditiveExpression	n2 -> n_len + scale2 - 1		137434	1		+			
ANR	137653	PtrMemberAccess	n2 -> n_len		137434	0					
ANR	137654	Identifier	n2		137434	0					
ANR	137655	Identifier	n_len		137434	1					
ANR	137656	AdditiveExpression	scale2 - 1		137434	1		-			
ANR	137657	Identifier	scale2		137434	0					
ANR	137658	PrimaryExpression	1		137434	1					
ANR	137659	WhileStatement	while ( ( scale2 > 0 ) && ( * n2ptr -- == 0 ) )		137434	21					
ANR	137660	Condition	( scale2 > 0 ) && ( * n2ptr -- == 0 )	122:9:3607:3637	137434	0	True				
ANR	137661	AndExpression	( scale2 > 0 ) && ( * n2ptr -- == 0 )		137434	0		&&			
ANR	137662	RelationalExpression	scale2 > 0		137434	0		>			
ANR	137663	Identifier	scale2		137434	0					
ANR	137664	PrimaryExpression	0		137434	1					
ANR	137665	EqualityExpression	* n2ptr -- == 0		137434	1		==			
ANR	137666	UnaryOperationExpression	* n2ptr --		137434	0					
ANR	137667	UnaryOperator	*		137434	0					
ANR	137668	PostIncDecOperationExpression	n2ptr --		137434	1					
ANR	137669	Identifier	n2ptr		137434	0					
ANR	137670	IncDec	--		137434	1					
ANR	137671	PrimaryExpression	0		137434	1					
ANR	137672	ExpressionStatement	scale2 --	122:42:3640:3648	137434	1	True				
ANR	137673	PostIncDecOperationExpression	scale2 --		137434	0					
ANR	137674	Identifier	scale2		137434	0					
ANR	137675	IncDec	--		137434	1					
ANR	137676	ExpressionStatement	len1 = n1 -> n_len + scale2	124:2:3653:3678	137434	22	True				
ANR	137677	AssignmentExpression	len1 = n1 -> n_len + scale2		137434	0		=			
ANR	137678	Identifier	len1		137434	0					
ANR	137679	AdditiveExpression	n1 -> n_len + scale2		137434	1		+			
ANR	137680	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137681	Identifier	n1		137434	0					
ANR	137682	Identifier	n_len		137434	1					
ANR	137683	Identifier	scale2		137434	1					
ANR	137684	ExpressionStatement	scale1 = n1 -> n_scale - scale2	125:2:3682:3711	137434	23	True				
ANR	137685	AssignmentExpression	scale1 = n1 -> n_scale - scale2		137434	0		=			
ANR	137686	Identifier	scale1		137434	0					
ANR	137687	AdditiveExpression	n1 -> n_scale - scale2		137434	1		-			
ANR	137688	PtrMemberAccess	n1 -> n_scale		137434	0					
ANR	137689	Identifier	n1		137434	0					
ANR	137690	Identifier	n_scale		137434	1					
ANR	137691	Identifier	scale2		137434	1					
ANR	137692	IfStatement	if ( scale1 < scale )		137434	24					
ANR	137693	Condition	scale1 < scale	126:6:3719:3732	137434	0	True				
ANR	137694	RelationalExpression	scale1 < scale		137434	0		<			
ANR	137695	Identifier	scale1		137434	0					
ANR	137696	Identifier	scale		137434	1					
ANR	137697	ExpressionStatement	extra = scale - scale1	127:4:3739:3761	137434	1	True				
ANR	137698	AssignmentExpression	extra = scale - scale1		137434	0		=			
ANR	137699	Identifier	extra		137434	0					
ANR	137700	AdditiveExpression	scale - scale1		137434	1		-			
ANR	137701	Identifier	scale		137434	0					
ANR	137702	Identifier	scale1		137434	1					
ANR	137703	ElseStatement	else		137434	0					
ANR	137704	ExpressionStatement	extra = 0	129:4:3774:3783	137434	0	True				
ANR	137705	AssignmentExpression	extra = 0		137434	0		=			
ANR	137706	Identifier	extra		137434	0					
ANR	137707	PrimaryExpression	0		137434	1					
ANR	137708	ExpressionStatement	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"	130:2:3787:3860	137434	25	True				
ANR	137709	AssignmentExpression	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		137434	0		=			
ANR	137710	Identifier	num1		137434	0					
ANR	137711	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		137434	1					
ANR	137712	CastTarget	unsigned char *		137434	0					
ANR	137713	CallExpression	"safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		137434	1					
ANR	137714	Callee	safe_emalloc		137434	0					
ANR	137715	Identifier	safe_emalloc		137434	0					
ANR	137716	ArgumentList	1		137434	1					
ANR	137717	Argument	1		137434	0					
ANR	137718	PrimaryExpression	1		137434	0					
ANR	137719	Argument	n1 -> n_len + n1 -> n_scale		137434	1					
ANR	137720	AdditiveExpression	n1 -> n_len + n1 -> n_scale		137434	0		+			
ANR	137721	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137722	Identifier	n1		137434	0					
ANR	137723	Identifier	n_len		137434	1					
ANR	137724	PtrMemberAccess	n1 -> n_scale		137434	1					
ANR	137725	Identifier	n1		137434	0					
ANR	137726	Identifier	n_scale		137434	1					
ANR	137727	Argument	extra + 2		137434	2					
ANR	137728	AdditiveExpression	extra + 2		137434	0		+			
ANR	137729	Identifier	extra		137434	0					
ANR	137730	PrimaryExpression	2		137434	1					
ANR	137731	IfStatement	if ( num1 == NULL )		137434	26					
ANR	137732	Condition	num1 == NULL	131:6:3868:3879	137434	0	True				
ANR	137733	EqualityExpression	num1 == NULL		137434	0		==			
ANR	137734	Identifier	num1		137434	0					
ANR	137735	Identifier	NULL		137434	1					
ANR	137736	ExpressionStatement	bc_out_of_memory ( )	131:20:3882:3900	137434	1	True				
ANR	137737	CallExpression	bc_out_of_memory ( )		137434	0					
ANR	137738	Callee	bc_out_of_memory		137434	0					
ANR	137739	Identifier	bc_out_of_memory		137434	0					
ANR	137740	ArgumentList			137434	1					
ANR	137741	ExpressionStatement	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"	132:2:3904:3951	137434	27	True				
ANR	137742	CallExpression	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"		137434	0					
ANR	137743	Callee	memset		137434	0					
ANR	137744	Identifier	memset		137434	0					
ANR	137745	ArgumentList	num1		137434	1					
ANR	137746	Argument	num1		137434	0					
ANR	137747	Identifier	num1		137434	0					
ANR	137748	Argument	0		137434	1					
ANR	137749	PrimaryExpression	0		137434	0					
ANR	137750	Argument	n1 -> n_len + n1 -> n_scale + extra + 2		137434	2					
ANR	137751	AdditiveExpression	n1 -> n_len + n1 -> n_scale + extra + 2		137434	0		+			
ANR	137752	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137753	Identifier	n1		137434	0					
ANR	137754	Identifier	n_len		137434	1					
ANR	137755	AdditiveExpression	n1 -> n_scale + extra + 2		137434	1		+			
ANR	137756	PtrMemberAccess	n1 -> n_scale		137434	0					
ANR	137757	Identifier	n1		137434	0					
ANR	137758	Identifier	n_scale		137434	1					
ANR	137759	AdditiveExpression	extra + 2		137434	1		+			
ANR	137760	Identifier	extra		137434	0					
ANR	137761	PrimaryExpression	2		137434	1					
ANR	137762	ExpressionStatement	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"	133:2:3955:4006	137434	28	True				
ANR	137763	CallExpression	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"		137434	0					
ANR	137764	Callee	memcpy		137434	0					
ANR	137765	Identifier	memcpy		137434	0					
ANR	137766	ArgumentList	num1 + 1		137434	1					
ANR	137767	Argument	num1 + 1		137434	0					
ANR	137768	AdditiveExpression	num1 + 1		137434	0		+			
ANR	137769	Identifier	num1		137434	0					
ANR	137770	PrimaryExpression	1		137434	1					
ANR	137771	Argument	n1 -> n_value		137434	1					
ANR	137772	PtrMemberAccess	n1 -> n_value		137434	0					
ANR	137773	Identifier	n1		137434	0					
ANR	137774	Identifier	n_value		137434	1					
ANR	137775	Argument	n1 -> n_len + n1 -> n_scale		137434	2					
ANR	137776	AdditiveExpression	n1 -> n_len + n1 -> n_scale		137434	0		+			
ANR	137777	PtrMemberAccess	n1 -> n_len		137434	0					
ANR	137778	Identifier	n1		137434	0					
ANR	137779	Identifier	n_len		137434	1					
ANR	137780	PtrMemberAccess	n1 -> n_scale		137434	1					
ANR	137781	Identifier	n1		137434	0					
ANR	137782	Identifier	n_scale		137434	1					
ANR	137783	ExpressionStatement	len2 = n2 -> n_len + scale2	135:2:4011:4036	137434	29	True				
ANR	137784	AssignmentExpression	len2 = n2 -> n_len + scale2		137434	0		=			
ANR	137785	Identifier	len2		137434	0					
ANR	137786	AdditiveExpression	n2 -> n_len + scale2		137434	1		+			
ANR	137787	PtrMemberAccess	n2 -> n_len		137434	0					
ANR	137788	Identifier	n2		137434	0					
ANR	137789	Identifier	n_len		137434	1					
ANR	137790	Identifier	scale2		137434	1					
ANR	137791	ExpressionStatement	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	136:2:4040:4090	137434	30	True				
ANR	137792	AssignmentExpression	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		137434	0		=			
ANR	137793	Identifier	num2		137434	0					
ANR	137794	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		137434	1					
ANR	137795	CastTarget	unsigned char *		137434	0					
ANR	137796	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		137434	1					
ANR	137797	Callee	safe_emalloc		137434	0					
ANR	137798	Identifier	safe_emalloc		137434	0					
ANR	137799	ArgumentList	1		137434	1					
ANR	137800	Argument	1		137434	0					
ANR	137801	PrimaryExpression	1		137434	0					
ANR	137802	Argument	len2		137434	1					
ANR	137803	Identifier	len2		137434	0					
ANR	137804	Argument	1		137434	2					
ANR	137805	PrimaryExpression	1		137434	0					
ANR	137806	IfStatement	if ( num2 == NULL )		137434	31					
ANR	137807	Condition	num2 == NULL	137:6:4098:4109	137434	0	True				
ANR	137808	EqualityExpression	num2 == NULL		137434	0		==			
ANR	137809	Identifier	num2		137434	0					
ANR	137810	Identifier	NULL		137434	1					
ANR	137811	ExpressionStatement	bc_out_of_memory ( )	137:20:4112:4130	137434	1	True				
ANR	137812	CallExpression	bc_out_of_memory ( )		137434	0					
ANR	137813	Callee	bc_out_of_memory		137434	0					
ANR	137814	Identifier	bc_out_of_memory		137434	0					
ANR	137815	ArgumentList			137434	1					
ANR	137816	ExpressionStatement	"memcpy ( num2 , n2 -> n_value , len2 )"	138:2:4134:4166	137434	32	True				
ANR	137817	CallExpression	"memcpy ( num2 , n2 -> n_value , len2 )"		137434	0					
ANR	137818	Callee	memcpy		137434	0					
ANR	137819	Identifier	memcpy		137434	0					
ANR	137820	ArgumentList	num2		137434	1					
ANR	137821	Argument	num2		137434	0					
ANR	137822	Identifier	num2		137434	0					
ANR	137823	Argument	n2 -> n_value		137434	1					
ANR	137824	PtrMemberAccess	n2 -> n_value		137434	0					
ANR	137825	Identifier	n2		137434	0					
ANR	137826	Identifier	n_value		137434	1					
ANR	137827	Argument	len2		137434	2					
ANR	137828	Identifier	len2		137434	0					
ANR	137829	ExpressionStatement	* ( num2 + len2 ) = 0	139:2:4170:4186	137434	33	True				
ANR	137830	AssignmentExpression	* ( num2 + len2 ) = 0		137434	0		=			
ANR	137831	UnaryOperationExpression	* ( num2 + len2 )		137434	0					
ANR	137832	UnaryOperator	*		137434	0					
ANR	137833	AdditiveExpression	num2 + len2		137434	1		+			
ANR	137834	Identifier	num2		137434	0					
ANR	137835	Identifier	len2		137434	1					
ANR	137836	PrimaryExpression	0		137434	1					
ANR	137837	ExpressionStatement	n2ptr = num2	140:2:4190:4202	137434	34	True				
ANR	137838	AssignmentExpression	n2ptr = num2		137434	0		=			
ANR	137839	Identifier	n2ptr		137434	0					
ANR	137840	Identifier	num2		137434	1					
ANR	137841	WhileStatement	while ( * n2ptr == 0 )		137434	35					
ANR	137842	Condition	* n2ptr == 0	141:9:4213:4223	137434	0	True				
ANR	137843	EqualityExpression	* n2ptr == 0		137434	0		==			
ANR	137844	UnaryOperationExpression	* n2ptr		137434	0					
ANR	137845	UnaryOperator	*		137434	0					
ANR	137846	Identifier	n2ptr		137434	1					
ANR	137847	PrimaryExpression	0		137434	1					
ANR	137848	CompoundStatement		54:4:1629:1629	137434	1					
ANR	137849	ExpressionStatement	n2ptr ++	143:6:4238:4245	137434	0	True				
ANR	137850	PostIncDecOperationExpression	n2ptr ++		137434	0					
ANR	137851	Identifier	n2ptr		137434	0					
ANR	137852	IncDec	++		137434	1					
ANR	137853	ExpressionStatement	len2 --	144:6:4253:4259	137434	1	True				
ANR	137854	PostIncDecOperationExpression	len2 --		137434	0					
ANR	137855	Identifier	len2		137434	0					
ANR	137856	IncDec	--		137434	1					
ANR	137857	IfStatement	if ( len2 > len1 + scale )		137434	36					
ANR	137858	Condition	len2 > len1 + scale	148:6:4323:4339	137434	0	True				
ANR	137859	RelationalExpression	len2 > len1 + scale		137434	0		>			
ANR	137860	Identifier	len2		137434	0					
ANR	137861	AdditiveExpression	len1 + scale		137434	1		+			
ANR	137862	Identifier	len1		137434	0					
ANR	137863	Identifier	scale		137434	1					
ANR	137864	CompoundStatement		61:4:1745:1745	137434	1					
ANR	137865	ExpressionStatement	qdigits = scale + 1	150:6:4354:4371	137434	0	True				
ANR	137866	AssignmentExpression	qdigits = scale + 1		137434	0		=			
ANR	137867	Identifier	qdigits		137434	0					
ANR	137868	AdditiveExpression	scale + 1		137434	1		+			
ANR	137869	Identifier	scale		137434	0					
ANR	137870	PrimaryExpression	1		137434	1					
ANR	137871	ExpressionStatement	zero = TRUE	151:6:4379:4390	137434	1	True				
ANR	137872	AssignmentExpression	zero = TRUE		137434	0		=			
ANR	137873	Identifier	zero		137434	0					
ANR	137874	Identifier	TRUE		137434	1					
ANR	137875	ElseStatement	else		137434	0					
ANR	137876	CompoundStatement		66:4:1808:1808	137434	0					
ANR	137877	ExpressionStatement	zero = FALSE	155:6:4417:4429	137434	0	True				
ANR	137878	AssignmentExpression	zero = FALSE		137434	0		=			
ANR	137879	Identifier	zero		137434	0					
ANR	137880	Identifier	FALSE		137434	1					
ANR	137881	IfStatement	if ( len2 > len1 )		137434	1					
ANR	137882	Condition	len2 > len1	156:10:4441:4449	137434	0	True				
ANR	137883	RelationalExpression	len2 > len1		137434	0		>			
ANR	137884	Identifier	len2		137434	0					
ANR	137885	Identifier	len1		137434	1					
ANR	137886	ExpressionStatement	qdigits = scale + 1	157:1:4453:4470	137434	1	True				
ANR	137887	AssignmentExpression	qdigits = scale + 1		137434	0		=			
ANR	137888	Identifier	qdigits		137434	0					
ANR	137889	AdditiveExpression	scale + 1		137434	1		+			
ANR	137890	Identifier	scale		137434	0					
ANR	137891	PrimaryExpression	1		137434	1					
ANR	137892	ElseStatement	else		137434	0					
ANR	137893	ExpressionStatement	qdigits = len1 - len2 + scale + 1	159:1:4523:4550	137434	0	True				
ANR	137894	AssignmentExpression	qdigits = len1 - len2 + scale + 1		137434	0		=			
ANR	137895	Identifier	qdigits		137434	0					
ANR	137896	AdditiveExpression	len1 - len2 + scale + 1		137434	1		-			
ANR	137897	Identifier	len1		137434	0					
ANR	137898	AdditiveExpression	len2 + scale + 1		137434	1		+			
ANR	137899	Identifier	len2		137434	0					
ANR	137900	AdditiveExpression	scale + 1		137434	1		+			
ANR	137901	Identifier	scale		137434	0					
ANR	137902	PrimaryExpression	1		137434	1					
ANR	137903	ExpressionStatement	"qval = bc_new_num ( qdigits - scale , scale )"	163:2:4617:4656	137434	37	True				
ANR	137904	AssignmentExpression	"qval = bc_new_num ( qdigits - scale , scale )"		137434	0		=			
ANR	137905	Identifier	qval		137434	0					
ANR	137906	CallExpression	"bc_new_num ( qdigits - scale , scale )"		137434	1					
ANR	137907	Callee	bc_new_num		137434	0					
ANR	137908	Identifier	bc_new_num		137434	0					
ANR	137909	ArgumentList	qdigits - scale		137434	1					
ANR	137910	Argument	qdigits - scale		137434	0					
ANR	137911	AdditiveExpression	qdigits - scale		137434	0		-			
ANR	137912	Identifier	qdigits		137434	0					
ANR	137913	Identifier	scale		137434	1					
ANR	137914	Argument	scale		137434	1					
ANR	137915	Identifier	scale		137434	0					
ANR	137916	ExpressionStatement	"memset ( qval -> n_value , 0 , qdigits )"	164:2:4660:4694	137434	38	True				
ANR	137917	CallExpression	"memset ( qval -> n_value , 0 , qdigits )"		137434	0					
ANR	137918	Callee	memset		137434	0					
ANR	137919	Identifier	memset		137434	0					
ANR	137920	ArgumentList	qval -> n_value		137434	1					
ANR	137921	Argument	qval -> n_value		137434	0					
ANR	137922	PtrMemberAccess	qval -> n_value		137434	0					
ANR	137923	Identifier	qval		137434	0					
ANR	137924	Identifier	n_value		137434	1					
ANR	137925	Argument	0		137434	1					
ANR	137926	PrimaryExpression	0		137434	0					
ANR	137927	Argument	qdigits		137434	2					
ANR	137928	Identifier	qdigits		137434	0					
ANR	137929	ExpressionStatement	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	167:2:4756:4806	137434	39	True				
ANR	137930	AssignmentExpression	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		137434	0		=			
ANR	137931	Identifier	mval		137434	0					
ANR	137932	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		137434	1					
ANR	137933	CastTarget	unsigned char *		137434	0					
ANR	137934	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		137434	1					
ANR	137935	Callee	safe_emalloc		137434	0					
ANR	137936	Identifier	safe_emalloc		137434	0					
ANR	137937	ArgumentList	1		137434	1					
ANR	137938	Argument	1		137434	0					
ANR	137939	PrimaryExpression	1		137434	0					
ANR	137940	Argument	len2		137434	1					
ANR	137941	Identifier	len2		137434	0					
ANR	137942	Argument	1		137434	2					
ANR	137943	PrimaryExpression	1		137434	0					
ANR	137944	IfStatement	if ( mval == NULL )		137434	40					
ANR	137945	Condition	mval == NULL	168:6:4814:4825	137434	0	True				
ANR	137946	EqualityExpression	mval == NULL		137434	0		==			
ANR	137947	Identifier	mval		137434	0					
ANR	137948	Identifier	NULL		137434	1					
ANR	137949	ExpressionStatement	bc_out_of_memory ( )	168:20:4828:4847	137434	1	True				
ANR	137950	CallExpression	bc_out_of_memory ( )		137434	0					
ANR	137951	Callee	bc_out_of_memory		137434	0					
ANR	137952	Identifier	bc_out_of_memory		137434	0					
ANR	137953	ArgumentList			137434	1					
ANR	137954	IfStatement	if ( ! zero )		137434	41					
ANR	137955	Condition	! zero	171:6:4899:4903	137434	0	True				
ANR	137956	UnaryOperationExpression	! zero		137434	0					
ANR	137957	UnaryOperator	!		137434	0					
ANR	137958	Identifier	zero		137434	1					
ANR	137959	CompoundStatement		84:4:2309:2309	137434	1					
ANR	137960	ExpressionStatement	norm = 10 / ( ( int ) * n2ptr + 1 )	174:6:4940:4970	137434	0	True				
ANR	137961	AssignmentExpression	norm = 10 / ( ( int ) * n2ptr + 1 )		137434	0		=			
ANR	137962	Identifier	norm		137434	0					
ANR	137963	MultiplicativeExpression	10 / ( ( int ) * n2ptr + 1 )		137434	1		/			
ANR	137964	PrimaryExpression	10		137434	0					
ANR	137965	AdditiveExpression	( int ) * n2ptr + 1		137434	1		+			
ANR	137966	CastExpression	( int ) * n2ptr		137434	0					
ANR	137967	CastTarget	int		137434	0					
ANR	137968	UnaryOperationExpression	* n2ptr		137434	1					
ANR	137969	UnaryOperator	*		137434	0					
ANR	137970	Identifier	n2ptr		137434	1					
ANR	137971	PrimaryExpression	1		137434	1					
ANR	137972	IfStatement	if ( norm != 1 )		137434	1					
ANR	137973	Condition	norm != 1	175:10:4982:4990	137434	0	True				
ANR	137974	EqualityExpression	norm != 1		137434	0		!=			
ANR	137975	Identifier	norm		137434	0					
ANR	137976	PrimaryExpression	1		137434	1					
ANR	137977	CompoundStatement		88:1:2393:2393	137434	1					
ANR	137978	ExpressionStatement	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"	177:3:4999:5048	137434	0	True				
ANR	137979	CallExpression	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"		137434	0					
ANR	137980	Callee	_one_mult		137434	0					
ANR	137981	Identifier	_one_mult		137434	0					
ANR	137982	ArgumentList	num1		137434	1					
ANR	137983	Argument	num1		137434	0					
ANR	137984	Identifier	num1		137434	0					
ANR	137985	Argument	len1 + scale1 + extra + 1		137434	1					
ANR	137986	AdditiveExpression	len1 + scale1 + extra + 1		137434	0		+			
ANR	137987	Identifier	len1		137434	0					
ANR	137988	AdditiveExpression	scale1 + extra + 1		137434	1		+			
ANR	137989	Identifier	scale1		137434	0					
ANR	137990	AdditiveExpression	extra + 1		137434	1		+			
ANR	137991	Identifier	extra		137434	0					
ANR	137992	PrimaryExpression	1		137434	1					
ANR	137993	Argument	norm		137434	2					
ANR	137994	Identifier	norm		137434	0					
ANR	137995	Argument	num1		137434	3					
ANR	137996	Identifier	num1		137434	0					
ANR	137997	ExpressionStatement	"_one_mult ( n2ptr , len2 , norm , n2ptr )"	178:3:5053:5089	137434	1	True				
ANR	137998	CallExpression	"_one_mult ( n2ptr , len2 , norm , n2ptr )"		137434	0					
ANR	137999	Callee	_one_mult		137434	0					
ANR	138000	Identifier	_one_mult		137434	0					
ANR	138001	ArgumentList	n2ptr		137434	1					
ANR	138002	Argument	n2ptr		137434	0					
ANR	138003	Identifier	n2ptr		137434	0					
ANR	138004	Argument	len2		137434	1					
ANR	138005	Identifier	len2		137434	0					
ANR	138006	Argument	norm		137434	2					
ANR	138007	Identifier	norm		137434	0					
ANR	138008	Argument	n2ptr		137434	3					
ANR	138009	Identifier	n2ptr		137434	0					
ANR	138010	ExpressionStatement	qdig = 0	182:6:5137:5145	137434	2	True				
ANR	138011	AssignmentExpression	qdig = 0		137434	0		=			
ANR	138012	Identifier	qdig		137434	0					
ANR	138013	PrimaryExpression	0		137434	1					
ANR	138014	IfStatement	if ( len2 > len1 )		137434	3					
ANR	138015	Condition	len2 > len1	183:10:5157:5167	137434	0	True				
ANR	138016	RelationalExpression	len2 > len1		137434	0		>			
ANR	138017	Identifier	len2		137434	0					
ANR	138018	Identifier	len1		137434	1					
ANR	138019	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value + len2 - len1	184:1:5171:5219	137434	1	True				
ANR	138020	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value + len2 - len1		137434	0		=			
ANR	138021	Identifier	qptr		137434	0					
ANR	138022	AdditiveExpression	( unsigned char * ) qval -> n_value + len2 - len1		137434	1		+			
ANR	138023	CastExpression	( unsigned char * ) qval -> n_value		137434	0					
ANR	138024	CastTarget	unsigned char *		137434	0					
ANR	138025	PtrMemberAccess	qval -> n_value		137434	1					
ANR	138026	Identifier	qval		137434	0					
ANR	138027	Identifier	n_value		137434	1					
ANR	138028	AdditiveExpression	len2 - len1		137434	1		-			
ANR	138029	Identifier	len2		137434	0					
ANR	138030	Identifier	len1		137434	1					
ANR	138031	ElseStatement	else		137434	0					
ANR	138032	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value	186:1:5233:5271	137434	0	True				
ANR	138033	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value		137434	0		=			
ANR	138034	Identifier	qptr		137434	0					
ANR	138035	CastExpression	( unsigned char * ) qval -> n_value		137434	1					
ANR	138036	CastTarget	unsigned char *		137434	0					
ANR	138037	PtrMemberAccess	qval -> n_value		137434	1					
ANR	138038	Identifier	qval		137434	0					
ANR	138039	Identifier	n_value		137434	1					
ANR	138040	WhileStatement	while ( qdig <= len1 + scale - len2 )		137434	4					
ANR	138041	Condition	qdig <= len1 + scale - len2	189:13:5304:5326	137434	0	True				
ANR	138042	RelationalExpression	qdig <= len1 + scale - len2		137434	0		<=			
ANR	138043	Identifier	qdig		137434	0					
ANR	138044	AdditiveExpression	len1 + scale - len2		137434	1		+			
ANR	138045	Identifier	len1		137434	0					
ANR	138046	AdditiveExpression	scale - len2		137434	1		-			
ANR	138047	Identifier	scale		137434	0					
ANR	138048	Identifier	len2		137434	1					
ANR	138049	CompoundStatement		102:1:2729:2729	137434	1					
ANR	138050	IfStatement	if ( * n2ptr == num1 [ qdig ] )		137434	0					
ANR	138051	Condition	* n2ptr == num1 [ qdig ]	192:7:5384:5403	137434	0	True				
ANR	138052	EqualityExpression	* n2ptr == num1 [ qdig ]		137434	0		==			
ANR	138053	UnaryOperationExpression	* n2ptr		137434	0					
ANR	138054	UnaryOperator	*		137434	0					
ANR	138055	Identifier	n2ptr		137434	1					
ANR	138056	ArrayIndexing	num1 [ qdig ]		137434	1					
ANR	138057	Identifier	num1		137434	0					
ANR	138058	Identifier	qdig		137434	1					
ANR	138059	ExpressionStatement	qguess = 9	193:5:5411:5421	137434	1	True				
ANR	138060	AssignmentExpression	qguess = 9		137434	0		=			
ANR	138061	Identifier	qguess		137434	0					
ANR	138062	PrimaryExpression	9		137434	1					
ANR	138063	ElseStatement	else		137434	0					
ANR	138064	ExpressionStatement	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr	195:5:5436:5484	137434	0	True				
ANR	138065	AssignmentExpression	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		137434	0		=			
ANR	138066	Identifier	qguess		137434	0					
ANR	138067	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		137434	1		/			
ANR	138068	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ]		137434	0		+			
ANR	138069	MultiplicativeExpression	num1 [ qdig ] * 10		137434	0		*			
ANR	138070	ArrayIndexing	num1 [ qdig ]		137434	0					
ANR	138071	Identifier	num1		137434	0					
ANR	138072	Identifier	qdig		137434	1					
ANR	138073	PrimaryExpression	10		137434	1					
ANR	138074	ArrayIndexing	num1 [ qdig + 1 ]		137434	1					
ANR	138075	Identifier	num1		137434	0					
ANR	138076	AdditiveExpression	qdig + 1		137434	1		+			
ANR	138077	Identifier	qdig		137434	0					
ANR	138078	PrimaryExpression	1		137434	1					
ANR	138079	UnaryOperationExpression	* n2ptr		137434	1					
ANR	138080	UnaryOperator	*		137434	0					
ANR	138081	Identifier	n2ptr		137434	1					
ANR	138082	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		137434	1					
ANR	138083	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	198:7:5516:5612	137434	0	True				
ANR	138084	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		137434	0		>			
ANR	138085	MultiplicativeExpression	n2ptr [ 1 ] * qguess		137434	0		*			
ANR	138086	ArrayIndexing	n2ptr [ 1 ]		137434	0					
ANR	138087	Identifier	n2ptr		137434	0					
ANR	138088	PrimaryExpression	1		137434	1					
ANR	138089	Identifier	qguess		137434	1					
ANR	138090	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		137434	1		+			
ANR	138091	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		137434	0		*			
ANR	138092	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		137434	0		+			
ANR	138093	MultiplicativeExpression	num1 [ qdig ] * 10		137434	0		*			
ANR	138094	ArrayIndexing	num1 [ qdig ]		137434	0					
ANR	138095	Identifier	num1		137434	0					
ANR	138096	Identifier	qdig		137434	1					
ANR	138097	PrimaryExpression	10		137434	1					
ANR	138098	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		137434	1		-			
ANR	138099	ArrayIndexing	num1 [ qdig + 1 ]		137434	0					
ANR	138100	Identifier	num1		137434	0					
ANR	138101	AdditiveExpression	qdig + 1		137434	1		+			
ANR	138102	Identifier	qdig		137434	0					
ANR	138103	PrimaryExpression	1		137434	1					
ANR	138104	MultiplicativeExpression	* n2ptr * qguess		137434	1		*			
ANR	138105	UnaryOperationExpression	* n2ptr		137434	0					
ANR	138106	UnaryOperator	*		137434	0					
ANR	138107	Identifier	n2ptr		137434	1					
ANR	138108	Identifier	qguess		137434	1					
ANR	138109	PrimaryExpression	10		137434	1					
ANR	138110	ArrayIndexing	num1 [ qdig + 2 ]		137434	1					
ANR	138111	Identifier	num1		137434	0					
ANR	138112	AdditiveExpression	qdig + 2		137434	1		+			
ANR	138113	Identifier	qdig		137434	0					
ANR	138114	PrimaryExpression	2		137434	1					
ANR	138115	CompoundStatement		113:5:3019:3019	137434	1					
ANR	138116	ExpressionStatement	qguess --	202:7:5629:5637	137434	0	True				
ANR	138117	PostIncDecOperationExpression	qguess --		137434	0					
ANR	138118	Identifier	qguess		137434	0					
ANR	138119	IncDec	--		137434	1					
ANR	138120	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		137434	1					
ANR	138121	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	204:11:5674:5763	137434	0	True				
ANR	138122	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		137434	0		>			
ANR	138123	MultiplicativeExpression	n2ptr [ 1 ] * qguess		137434	0		*			
ANR	138124	ArrayIndexing	n2ptr [ 1 ]		137434	0					
ANR	138125	Identifier	n2ptr		137434	0					
ANR	138126	PrimaryExpression	1		137434	1					
ANR	138127	Identifier	qguess		137434	1					
ANR	138128	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		137434	1		+			
ANR	138129	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		137434	0		*			
ANR	138130	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		137434	0		+			
ANR	138131	MultiplicativeExpression	num1 [ qdig ] * 10		137434	0		*			
ANR	138132	ArrayIndexing	num1 [ qdig ]		137434	0					
ANR	138133	Identifier	num1		137434	0					
ANR	138134	Identifier	qdig		137434	1					
ANR	138135	PrimaryExpression	10		137434	1					
ANR	138136	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		137434	1		-			
ANR	138137	ArrayIndexing	num1 [ qdig + 1 ]		137434	0					
ANR	138138	Identifier	num1		137434	0					
ANR	138139	AdditiveExpression	qdig + 1		137434	1		+			
ANR	138140	Identifier	qdig		137434	0					
ANR	138141	PrimaryExpression	1		137434	1					
ANR	138142	MultiplicativeExpression	* n2ptr * qguess		137434	1		*			
ANR	138143	UnaryOperationExpression	* n2ptr		137434	0					
ANR	138144	UnaryOperator	*		137434	0					
ANR	138145	Identifier	n2ptr		137434	1					
ANR	138146	Identifier	qguess		137434	1					
ANR	138147	PrimaryExpression	10		137434	1					
ANR	138148	ArrayIndexing	num1 [ qdig + 2 ]		137434	1					
ANR	138149	Identifier	num1		137434	0					
ANR	138150	AdditiveExpression	qdig + 2		137434	1		+			
ANR	138151	Identifier	qdig		137434	0					
ANR	138152	PrimaryExpression	2		137434	1					
ANR	138153	ExpressionStatement	qguess --	207:2:5768:5776	137434	1	True				
ANR	138154	PostIncDecOperationExpression	qguess --		137434	0					
ANR	138155	Identifier	qguess		137434	0					
ANR	138156	IncDec	--		137434	1					
ANR	138157	ExpressionStatement	borrow = 0	211:3:5821:5831	137434	2	True				
ANR	138158	AssignmentExpression	borrow = 0		137434	0		=			
ANR	138159	Identifier	borrow		137434	0					
ANR	138160	PrimaryExpression	0		137434	1					
ANR	138161	IfStatement	if ( qguess != 0 )		137434	3					
ANR	138162	Condition	qguess != 0	212:7:5840:5850	137434	0	True				
ANR	138163	EqualityExpression	qguess != 0		137434	0		!=			
ANR	138164	Identifier	qguess		137434	0					
ANR	138165	PrimaryExpression	0		137434	1					
ANR	138166	CompoundStatement		125:5:3257:3257	137434	1					
ANR	138167	ExpressionStatement	* mval = 0	214:7:5867:5876	137434	0	True				
ANR	138168	AssignmentExpression	* mval = 0		137434	0		=			
ANR	138169	UnaryOperationExpression	* mval		137434	0					
ANR	138170	UnaryOperator	*		137434	0					
ANR	138171	Identifier	mval		137434	1					
ANR	138172	PrimaryExpression	0		137434	1					
ANR	138173	ExpressionStatement	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"	215:7:5885:5924	137434	1	True				
ANR	138174	CallExpression	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"		137434	0					
ANR	138175	Callee	_one_mult		137434	0					
ANR	138176	Identifier	_one_mult		137434	0					
ANR	138177	ArgumentList	n2ptr		137434	1					
ANR	138178	Argument	n2ptr		137434	0					
ANR	138179	Identifier	n2ptr		137434	0					
ANR	138180	Argument	len2		137434	1					
ANR	138181	Identifier	len2		137434	0					
ANR	138182	Argument	qguess		137434	2					
ANR	138183	Identifier	qguess		137434	0					
ANR	138184	Argument	mval + 1		137434	3					
ANR	138185	AdditiveExpression	mval + 1		137434	0		+			
ANR	138186	Identifier	mval		137434	0					
ANR	138187	PrimaryExpression	1		137434	1					
ANR	138188	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	216:7:5933:5972	137434	2	True				
ANR	138189	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		137434	0		=			
ANR	138190	Identifier	ptr1		137434	0					
ANR	138191	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		137434	1		+			
ANR	138192	CastExpression	( unsigned char * ) num1		137434	0					
ANR	138193	CastTarget	unsigned char *		137434	0					
ANR	138194	Identifier	num1		137434	1					
ANR	138195	AdditiveExpression	qdig + len2		137434	1		+			
ANR	138196	Identifier	qdig		137434	0					
ANR	138197	Identifier	len2		137434	1					
ANR	138198	ExpressionStatement	ptr2 = ( unsigned char * ) mval + len2	217:7:5981:6015	137434	3	True				
ANR	138199	AssignmentExpression	ptr2 = ( unsigned char * ) mval + len2		137434	0		=			
ANR	138200	Identifier	ptr2		137434	0					
ANR	138201	AdditiveExpression	( unsigned char * ) mval + len2		137434	1		+			
ANR	138202	CastExpression	( unsigned char * ) mval		137434	0					
ANR	138203	CastTarget	unsigned char *		137434	0					
ANR	138204	Identifier	mval		137434	1					
ANR	138205	Identifier	len2		137434	1					
ANR	138206	ForStatement	for ( count = 0 ; count < len2 + 1 ; count ++ )		137434	4					
ANR	138207	ForInit	count = 0 ;	218:12:6029:6038	137434	0	True				
ANR	138208	AssignmentExpression	count = 0		137434	0		=			
ANR	138209	Identifier	count		137434	0					
ANR	138210	PrimaryExpression	0		137434	1					
ANR	138211	Condition	count < len2 + 1	218:23:6040:6053	137434	1	True				
ANR	138212	RelationalExpression	count < len2 + 1		137434	0		<			
ANR	138213	Identifier	count		137434	0					
ANR	138214	AdditiveExpression	len2 + 1		137434	1		+			
ANR	138215	Identifier	len2		137434	0					
ANR	138216	PrimaryExpression	1		137434	1					
ANR	138217	PostIncDecOperationExpression	count ++	218:39:6056:6062	137434	2	True				
ANR	138218	Identifier	count		137434	0					
ANR	138219	IncDec	++		137434	1					
ANR	138220	CompoundStatement		131:2:3466:3466	137434	3					
ANR	138221	ExpressionStatement	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow	220:4:6073:6115	137434	0	True				
ANR	138222	AssignmentExpression	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow		137434	0		=			
ANR	138223	Identifier	val		137434	0					
ANR	138224	AdditiveExpression	( int ) * ptr1 - ( int ) * ptr2 -- - borrow		137434	1		-			
ANR	138225	CastExpression	( int ) * ptr1		137434	0					
ANR	138226	CastTarget	int		137434	0					
ANR	138227	UnaryOperationExpression	* ptr1		137434	1					
ANR	138228	UnaryOperator	*		137434	0					
ANR	138229	Identifier	ptr1		137434	1					
ANR	138230	AdditiveExpression	( int ) * ptr2 -- - borrow		137434	1		-			
ANR	138231	CastExpression	( int ) * ptr2 --		137434	0					
ANR	138232	CastTarget	int		137434	0					
ANR	138233	UnaryOperationExpression	* ptr2 --		137434	1					
ANR	138234	UnaryOperator	*		137434	0					
ANR	138235	PostIncDecOperationExpression	ptr2 --		137434	1					
ANR	138236	Identifier	ptr2		137434	0					
ANR	138237	IncDec	--		137434	1					
ANR	138238	Identifier	borrow		137434	1					
ANR	138239	IfStatement	if ( val < 0 )		137434	1					
ANR	138240	Condition	val < 0	221:8:6125:6131	137434	0	True				
ANR	138241	RelationalExpression	val < 0		137434	0		<			
ANR	138242	Identifier	val		137434	0					
ANR	138243	PrimaryExpression	0		137434	1					
ANR	138244	CompoundStatement		134:6:3539:3539	137434	1					
ANR	138245	ExpressionStatement	val += 10	223:8:6150:6159	137434	0	True				
ANR	138246	AssignmentExpression	val += 10		137434	0		+=			
ANR	138247	Identifier	val		137434	0					
ANR	138248	PrimaryExpression	10		137434	1					
ANR	138249	ExpressionStatement	borrow = 1	224:8:6169:6179	137434	1	True				
ANR	138250	AssignmentExpression	borrow = 1		137434	0		=			
ANR	138251	Identifier	borrow		137434	0					
ANR	138252	PrimaryExpression	1		137434	1					
ANR	138253	ElseStatement	else		137434	0					
ANR	138254	ExpressionStatement	borrow = 0	227:6:6204:6214	137434	0	True				
ANR	138255	AssignmentExpression	borrow = 0		137434	0		=			
ANR	138256	Identifier	borrow		137434	0					
ANR	138257	PrimaryExpression	0		137434	1					
ANR	138258	ExpressionStatement	* ptr1 -- = val	228:4:6220:6233	137434	2	True				
ANR	138259	AssignmentExpression	* ptr1 -- = val		137434	0		=			
ANR	138260	UnaryOperationExpression	* ptr1 --		137434	0					
ANR	138261	UnaryOperator	*		137434	0					
ANR	138262	PostIncDecOperationExpression	ptr1 --		137434	1					
ANR	138263	Identifier	ptr1		137434	0					
ANR	138264	IncDec	--		137434	1					
ANR	138265	Identifier	val		137434	1					
ANR	138266	IfStatement	if ( borrow == 1 )		137434	4					
ANR	138267	Condition	borrow == 1	233:7:6289:6299	137434	0	True				
ANR	138268	EqualityExpression	borrow == 1		137434	0		==			
ANR	138269	Identifier	borrow		137434	0					
ANR	138270	PrimaryExpression	1		137434	1					
ANR	138271	CompoundStatement		146:5:3706:3706	137434	1					
ANR	138272	ExpressionStatement	qguess --	235:7:6316:6324	137434	0	True				
ANR	138273	PostIncDecOperationExpression	qguess --		137434	0					
ANR	138274	Identifier	qguess		137434	0					
ANR	138275	IncDec	--		137434	1					
ANR	138276	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	236:7:6333:6372	137434	1	True				
ANR	138277	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		137434	0		=			
ANR	138278	Identifier	ptr1		137434	0					
ANR	138279	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		137434	1		+			
ANR	138280	CastExpression	( unsigned char * ) num1		137434	0					
ANR	138281	CastTarget	unsigned char *		137434	0					
ANR	138282	Identifier	num1		137434	1					
ANR	138283	AdditiveExpression	qdig + len2		137434	1		+			
ANR	138284	Identifier	qdig		137434	0					
ANR	138285	Identifier	len2		137434	1					
ANR	138286	ExpressionStatement	ptr2 = ( unsigned char * ) n2ptr + len2 - 1	237:7:6381:6418	137434	2	True				
ANR	138287	AssignmentExpression	ptr2 = ( unsigned char * ) n2ptr + len2 - 1		137434	0		=			
ANR	138288	Identifier	ptr2		137434	0					
ANR	138289	AdditiveExpression	( unsigned char * ) n2ptr + len2 - 1		137434	1		+			
ANR	138290	CastExpression	( unsigned char * ) n2ptr		137434	0					
ANR	138291	CastTarget	unsigned char *		137434	0					
ANR	138292	Identifier	n2ptr		137434	1					
ANR	138293	AdditiveExpression	len2 - 1		137434	1		-			
ANR	138294	Identifier	len2		137434	0					
ANR	138295	PrimaryExpression	1		137434	1					
ANR	138296	ExpressionStatement	carry = 0	238:7:6427:6436	137434	3	True				
ANR	138297	AssignmentExpression	carry = 0		137434	0		=			
ANR	138298	Identifier	carry		137434	0					
ANR	138299	PrimaryExpression	0		137434	1					
ANR	138300	ForStatement	for ( count = 0 ; count < len2 ; count ++ )		137434	4					
ANR	138301	ForInit	count = 0 ;	239:12:6450:6459	137434	0	True				
ANR	138302	AssignmentExpression	count = 0		137434	0		=			
ANR	138303	Identifier	count		137434	0					
ANR	138304	PrimaryExpression	0		137434	1					
ANR	138305	Condition	count < len2	239:23:6461:6472	137434	1	True				
ANR	138306	RelationalExpression	count < len2		137434	0		<			
ANR	138307	Identifier	count		137434	0					
ANR	138308	Identifier	len2		137434	1					
ANR	138309	PostIncDecOperationExpression	count ++	239:37:6475:6481	137434	2	True				
ANR	138310	Identifier	count		137434	0					
ANR	138311	IncDec	++		137434	1					
ANR	138312	CompoundStatement		152:2:3885:3885	137434	3					
ANR	138313	ExpressionStatement	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry	241:4:6492:6533	137434	0	True				
ANR	138314	AssignmentExpression	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry		137434	0		=			
ANR	138315	Identifier	val		137434	0					
ANR	138316	AdditiveExpression	( int ) * ptr1 + ( int ) * ptr2 -- + carry		137434	1		+			
ANR	138317	CastExpression	( int ) * ptr1		137434	0					
ANR	138318	CastTarget	int		137434	0					
ANR	138319	UnaryOperationExpression	* ptr1		137434	1					
ANR	138320	UnaryOperator	*		137434	0					
ANR	138321	Identifier	ptr1		137434	1					
ANR	138322	AdditiveExpression	( int ) * ptr2 -- + carry		137434	1		+			
ANR	138323	CastExpression	( int ) * ptr2 --		137434	0					
ANR	138324	CastTarget	int		137434	0					
ANR	138325	UnaryOperationExpression	* ptr2 --		137434	1					
ANR	138326	UnaryOperator	*		137434	0					
ANR	138327	PostIncDecOperationExpression	ptr2 --		137434	1					
ANR	138328	Identifier	ptr2		137434	0					
ANR	138329	IncDec	--		137434	1					
ANR	138330	Identifier	carry		137434	1					
ANR	138331	IfStatement	if ( val > 9 )		137434	1					
ANR	138332	Condition	val > 9	242:8:6543:6549	137434	0	True				
ANR	138333	RelationalExpression	val > 9		137434	0		>			
ANR	138334	Identifier	val		137434	0					
ANR	138335	PrimaryExpression	9		137434	1					
ANR	138336	CompoundStatement		155:6:3957:3957	137434	1					
ANR	138337	ExpressionStatement	val -= 10	244:8:6568:6577	137434	0	True				
ANR	138338	AssignmentExpression	val -= 10		137434	0		-=			
ANR	138339	Identifier	val		137434	0					
ANR	138340	PrimaryExpression	10		137434	1					
ANR	138341	ExpressionStatement	carry = 1	245:8:6587:6596	137434	1	True				
ANR	138342	AssignmentExpression	carry = 1		137434	0		=			
ANR	138343	Identifier	carry		137434	0					
ANR	138344	PrimaryExpression	1		137434	1					
ANR	138345	ElseStatement	else		137434	0					
ANR	138346	ExpressionStatement	carry = 0	248:6:6621:6630	137434	0	True				
ANR	138347	AssignmentExpression	carry = 0		137434	0		=			
ANR	138348	Identifier	carry		137434	0					
ANR	138349	PrimaryExpression	0		137434	1					
ANR	138350	ExpressionStatement	* ptr1 -- = val	249:4:6636:6649	137434	2	True				
ANR	138351	AssignmentExpression	* ptr1 -- = val		137434	0		=			
ANR	138352	UnaryOperationExpression	* ptr1 --		137434	0					
ANR	138353	UnaryOperator	*		137434	0					
ANR	138354	PostIncDecOperationExpression	ptr1 --		137434	1					
ANR	138355	Identifier	ptr1		137434	0					
ANR	138356	IncDec	--		137434	1					
ANR	138357	Identifier	val		137434	1					
ANR	138358	IfStatement	if ( carry == 1 )		137434	5					
ANR	138359	Condition	carry == 1	251:11:6666:6675	137434	0	True				
ANR	138360	EqualityExpression	carry == 1		137434	0		==			
ANR	138361	Identifier	carry		137434	0					
ANR	138362	PrimaryExpression	1		137434	1					
ANR	138363	ExpressionStatement	* ptr1 = ( * ptr1 + 1 ) % 10	251:23:6678:6702	137434	1	True				
ANR	138364	AssignmentExpression	* ptr1 = ( * ptr1 + 1 ) % 10		137434	0		=			
ANR	138365	UnaryOperationExpression	* ptr1		137434	0					
ANR	138366	UnaryOperator	*		137434	0					
ANR	138367	Identifier	ptr1		137434	1					
ANR	138368	MultiplicativeExpression	( * ptr1 + 1 ) % 10		137434	1		%			
ANR	138369	AdditiveExpression	* ptr1 + 1		137434	0		+			
ANR	138370	UnaryOperationExpression	* ptr1		137434	0					
ANR	138371	UnaryOperator	*		137434	0					
ANR	138372	Identifier	ptr1		137434	1					
ANR	138373	PrimaryExpression	1		137434	1					
ANR	138374	PrimaryExpression	10		137434	1					
ANR	138375	ExpressionStatement	* qptr ++ = qguess	255:3:6756:6773	137434	5	True				
ANR	138376	AssignmentExpression	* qptr ++ = qguess		137434	0		=			
ANR	138377	UnaryOperationExpression	* qptr ++		137434	0					
ANR	138378	UnaryOperator	*		137434	0					
ANR	138379	PostIncDecOperationExpression	qptr ++		137434	1					
ANR	138380	Identifier	qptr		137434	0					
ANR	138381	IncDec	++		137434	1					
ANR	138382	Identifier	qguess		137434	1					
ANR	138383	ExpressionStatement	qdig ++	256:3:6778:6784	137434	6	True				
ANR	138384	PostIncDecOperationExpression	qdig ++		137434	0					
ANR	138385	Identifier	qdig		137434	0					
ANR	138386	IncDec	++		137434	1					
ANR	138387	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	261:2:6838:6896	137434	42	True				
ANR	138388	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		137434	0		=			
ANR	138389	PtrMemberAccess	qval -> n_sign		137434	0					
ANR	138390	Identifier	qval		137434	0					
ANR	138391	Identifier	n_sign		137434	1					
ANR	138392	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		137434	1					
ANR	138393	Condition	n1 -> n_sign == n2 -> n_sign		137434	0					
ANR	138394	EqualityExpression	n1 -> n_sign == n2 -> n_sign		137434	0		==			
ANR	138395	PtrMemberAccess	n1 -> n_sign		137434	0					
ANR	138396	Identifier	n1		137434	0					
ANR	138397	Identifier	n_sign		137434	1					
ANR	138398	PtrMemberAccess	n2 -> n_sign		137434	1					
ANR	138399	Identifier	n2		137434	0					
ANR	138400	Identifier	n_sign		137434	1					
ANR	138401	Identifier	PLUS		137434	1					
ANR	138402	Identifier	MINUS		137434	2					
ANR	138403	Statement	if	262:2:6900:6901	137434	43	True				
ANR	138404	Statement	(	262:5:6903:6903	137434	44	True				
ANR	138405	Statement	bc_is_zero	262:6:6904:6913	137434	45	True				
ANR	138406	Statement	(	262:17:6915:6915	137434	46	True				
ANR	138407	Statement	qval	262:18:6916:6919	137434	47	True				
ANR	138408	Statement	TSRMLS_CC	262:23:6921:6929	137434	48	True				
ANR	138409	Statement	)	262:32:6930:6930	137434	49	True				
ANR	138410	Statement	)	262:33:6931:6931	137434	50	True				
ANR	138411	ExpressionStatement	qval -> n_sign = PLUS	262:35:6933:6952	137434	51	True				
ANR	138412	AssignmentExpression	qval -> n_sign = PLUS		137434	0		=			
ANR	138413	PtrMemberAccess	qval -> n_sign		137434	0					
ANR	138414	Identifier	qval		137434	0					
ANR	138415	Identifier	n_sign		137434	1					
ANR	138416	Identifier	PLUS		137434	1					
ANR	138417	ExpressionStatement	_bc_rm_leading_zeros ( qval )	263:2:6956:6983	137434	52	True				
ANR	138418	CallExpression	_bc_rm_leading_zeros ( qval )		137434	0					
ANR	138419	Callee	_bc_rm_leading_zeros		137434	0					
ANR	138420	Identifier	_bc_rm_leading_zeros		137434	0					
ANR	138421	ArgumentList	qval		137434	1					
ANR	138422	Argument	qval		137434	0					
ANR	138423	Identifier	qval		137434	0					
ANR	138424	ExpressionStatement	bc_free_num ( quot )	264:2:6987:7005	137434	53	True				
ANR	138425	CallExpression	bc_free_num ( quot )		137434	0					
ANR	138426	Callee	bc_free_num		137434	0					
ANR	138427	Identifier	bc_free_num		137434	0					
ANR	138428	ArgumentList	quot		137434	1					
ANR	138429	Argument	quot		137434	0					
ANR	138430	Identifier	quot		137434	0					
ANR	138431	ExpressionStatement	* quot = qval	265:2:7009:7021	137434	54	True				
ANR	138432	AssignmentExpression	* quot = qval		137434	0		=			
ANR	138433	UnaryOperationExpression	* quot		137434	0					
ANR	138434	UnaryOperator	*		137434	0					
ANR	138435	Identifier	quot		137434	1					
ANR	138436	Identifier	qval		137434	1					
ANR	138437	ExpressionStatement	efree ( mval )	268:2:7062:7074	137434	55	True				
ANR	138438	CallExpression	efree ( mval )		137434	0					
ANR	138439	Callee	efree		137434	0					
ANR	138440	Identifier	efree		137434	0					
ANR	138441	ArgumentList	mval		137434	1					
ANR	138442	Argument	mval		137434	0					
ANR	138443	Identifier	mval		137434	0					
ANR	138444	ExpressionStatement	efree ( num1 )	269:2:7078:7090	137434	56	True				
ANR	138445	CallExpression	efree ( num1 )		137434	0					
ANR	138446	Callee	efree		137434	0					
ANR	138447	Identifier	efree		137434	0					
ANR	138448	ArgumentList	num1		137434	1					
ANR	138449	Argument	num1		137434	0					
ANR	138450	Identifier	num1		137434	0					
ANR	138451	ExpressionStatement	efree ( num2 )	270:2:7094:7106	137434	57	True				
ANR	138452	CallExpression	efree ( num2 )		137434	0					
ANR	138453	Callee	efree		137434	0					
ANR	138454	Identifier	efree		137434	0					
ANR	138455	ArgumentList	num2		137434	1					
ANR	138456	Argument	num2		137434	0					
ANR	138457	Identifier	num2		137434	0					
ANR	138458	ReturnStatement	return 0 ;	272:2:7111:7119	137434	58	True				
ANR	138459	PrimaryExpression	0		137434	0					
ANR	138460	ReturnType	int		137434	1					
ANR	138461	Identifier	bc_divide		137434	2					
ANR	138462	ParameterList	"bc_num n1 , bc_num n2 , bc_num * quot , int scale TSRMLS_DC"		137434	3					
ANR	138463	Parameter	bc_num n1	88:11:2543:2551	137434	0	True				
ANR	138464	ParameterType	bc_num		137434	0					
ANR	138465	Identifier	n1		137434	1					
ANR	138466	Parameter	bc_num n2	88:22:2554:2562	137434	1	True				
ANR	138467	ParameterType	bc_num		137434	0					
ANR	138468	Identifier	n2		137434	1					
ANR	138469	Parameter	bc_num * quot	88:33:2565:2576	137434	2	True				
ANR	138470	ParameterType	bc_num *		137434	0					
ANR	138471	Identifier	quot		137434	1					
ANR	138472	Parameter	int scale TSRMLS_DC	88:47:2579:2597	137434	3	True				
ANR	138473	ParameterType	int scale		137434	0					
ANR	138474	Identifier	TSRMLS_DC		137434	1					
ANR	138475	CFGEntryNode	ENTRY		137434		True				
ANR	138476	CFGExitNode	EXIT		137434		True				
ANR	138477	Symbol	* num2		137434						
ANR	138478	Symbol	n1		137434						
ANR	138479	Symbol	* num1		137434						
ANR	138480	Symbol	n2		137434						
ANR	138481	Symbol	* qdig		137434						
ANR	138482	Symbol	n2 -> n_sign		137434						
ANR	138483	Symbol	TSRMLS_DC		137434						
ANR	138484	Symbol	len1		137434						
ANR	138485	Symbol	* ptr1 --		137434						
ANR	138486	Symbol	len2		137434						
ANR	138487	Symbol	norm		137434						
ANR	138488	Symbol	MINUS		137434						
ANR	138489	Symbol	zero		137434						
ANR	138490	Symbol	n1 -> n_value		137434						
ANR	138491	Symbol	n1 -> n_scale		137434						
ANR	138492	Symbol	* ptr1		137434						
ANR	138493	Symbol	qval -> n_value		137434						
ANR	138494	Symbol	n1 -> n_len		137434						
ANR	138495	Symbol	* quot		137434						
ANR	138496	Symbol	val		137434						
ANR	138497	Symbol	NULL		137434						
ANR	138498	Symbol	qval		137434						
ANR	138499	Symbol	n2 -> n_scale		137434						
ANR	138500	Symbol	n1 -> n_sign		137434						
ANR	138501	Symbol	mval		137434						
ANR	138502	Symbol	count		137434						
ANR	138503	Symbol	* n2		137434						
ANR	138504	Symbol	TRUE		137434						
ANR	138505	Symbol	* n1		137434						
ANR	138506	Symbol	qdigits		137434						
ANR	138507	Symbol	* ptr2 --		137434						
ANR	138508	Symbol	ptr2		137434						
ANR	138509	Symbol	* n2 -> n_value		137434						
ANR	138510	Symbol	qguess		137434						
ANR	138511	Symbol	MIN		137434						
ANR	138512	Symbol	ptr1		137434						
ANR	138513	Symbol	* qptr ++		137434						
ANR	138514	Symbol	carry		137434						
ANR	138515	Symbol	quot		137434						
ANR	138516	Symbol	PLUS		137434						
ANR	138517	Symbol	qdig		137434						
ANR	138518	Symbol	* n2ptr --		137434						
ANR	138519	Symbol	scale		137434						
ANR	138520	Symbol	n2ptr		137434						
ANR	138521	Symbol	bc_new_num		137434						
ANR	138522	Symbol	* len2		137434						
ANR	138523	Symbol	extra		137434						
ANR	138524	Symbol	num1		137434						
ANR	138525	Symbol	num2		137434						
ANR	138526	Symbol	n2 -> n_value		137434						
ANR	138527	Symbol	* qval		137434						
ANR	138528	Symbol	* ( num2 + len2 )		137434						
ANR	138529	Symbol	qptr		137434						
ANR	138530	Symbol	n2 -> n_len		137434						
ANR	138531	Symbol	* mval		137434						
ANR	138532	Symbol	qval -> n_sign		137434						
ANR	138533	Symbol	* * n2		137434						
ANR	138534	Symbol	* n2ptr		137434						
ANR	138535	Symbol	scale2		137434						
ANR	138536	Symbol	scale1		137434						
ANR	138537	Symbol	borrow		137434						
ANR	138538	Symbol	FALSE		137434						
ANR	138539	Symbol	safe_emalloc		137434						
