command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1201242	File	data/converged/CVE-2017-11142_php-src/ext_phar_util.c								
ANR	1201243	DeclStmt									
ANR	1201244	Decl							char	char *	p
ANR	1201245	Decl							char	char *	ret
ANR	1201246	DeclStmt									
ANR	1201247	Decl							phar_entry_info	phar_entry_info *	link_entry
ANR	1201248	DeclStmt									
ANR	1201249	Decl							char	char *	link
ANR	1201250	Function	phar_get_efp	90:0:3008:3932							
ANR	1201251	FunctionDef	"phar_get_efp (phar_entry_info * entry , int follow_links TSRMLS_DC)"		1201250	0					
ANR	1201252	CompoundStatement		91:0:3095:3932	1201250	0					
ANR	1201253	IfStatement	if ( follow_links && entry -> link )		1201250	0					
ANR	1201254	Condition	follow_links && entry -> link	92:5:3102:3128	1201250	0	True				
ANR	1201255	AndExpression	follow_links && entry -> link		1201250	0		&&			
ANR	1201256	Identifier	follow_links		1201250	0					
ANR	1201257	PtrMemberAccess	entry -> link		1201250	1					
ANR	1201258	Identifier	entry		1201250	0					
ANR	1201259	Identifier	link		1201250	1					
ANR	1201260	CompoundStatement		2:34:35:35	1201250	1					
ANR	1201261	Statement	phar_entry_info	93:2:3135:3149	1201250	0	True				
ANR	1201262	Statement	*	93:18:3151:3151	1201250	1	True				
ANR	1201263	Statement	link_entry	93:19:3152:3161	1201250	2	True				
ANR	1201264	Statement	=	93:30:3163:3163	1201250	3	True				
ANR	1201265	Statement	phar_get_link_source	93:32:3165:3184	1201250	4	True				
ANR	1201266	Statement	(	93:52:3185:3185	1201250	5	True				
ANR	1201267	Statement	entry	93:53:3186:3190	1201250	6	True				
ANR	1201268	Statement	TSRMLS_CC	93:59:3192:3200	1201250	7	True				
ANR	1201269	Statement	)	93:68:3201:3201	1201250	8	True				
ANR	1201270	ExpressionStatement		93:69:3202:3202	1201250	9	True				
ANR	1201271	IfStatement	if ( link_entry && link_entry != entry )		1201250	10					
ANR	1201272	Condition	link_entry && link_entry != entry	95:6:3211:3243	1201250	0	True				
ANR	1201273	AndExpression	link_entry && link_entry != entry		1201250	0		&&			
ANR	1201274	Identifier	link_entry		1201250	0					
ANR	1201275	EqualityExpression	link_entry != entry		1201250	1		!=			
ANR	1201276	Identifier	link_entry		1201250	0					
ANR	1201277	Identifier	entry		1201250	1					
ANR	1201278	CompoundStatement		5:41:150:150	1201250	1					
ANR	1201279	Statement	return	96:3:3251:3256	1201250	0	True				
ANR	1201280	Statement	phar_get_efp	96:10:3258:3269	1201250	1	True				
ANR	1201281	Statement	(	96:22:3270:3270	1201250	2	True				
ANR	1201282	Statement	link_entry	96:23:3271:3280	1201250	3	True				
ANR	1201283	Statement	","	96:33:3281:3281	1201250	4	True				
ANR	1201284	Statement	1	96:35:3283:3283	1201250	5	True				
ANR	1201285	Statement	TSRMLS_CC	96:37:3285:3293	1201250	6	True				
ANR	1201286	Statement	)	96:46:3294:3294	1201250	7	True				
ANR	1201287	ExpressionStatement		96:47:3295:3295	1201250	8	True				
ANR	1201288	ElseStatement	else		1201250	0					
ANR	1201289	Statement	if	106:8:3597:3598	1201250	0	True				
ANR	1201290	Statement	if	100:1:3306:3307	1201250	1	True				
ANR	1201291	Statement	(	100:4:3309:3309	1201250	2	True				
ANR	1201292	Statement	phar_get_fp_type	100:5:3310:3325	1201250	3	True				
ANR	1201293	Statement	(	100:21:3326:3326	1201250	4	True				
ANR	1201294	Statement	entry	100:22:3327:3331	1201250	5	True				
ANR	1201295	Statement	TSRMLS_CC	100:28:3333:3341	1201250	6	True				
ANR	1201296	Statement	)	100:37:3342:3342	1201250	7	True				
ANR	1201297	Statement	==	100:39:3344:3345	1201250	8	True				
ANR	1201298	Statement	PHAR_FP	100:42:3347:3353	1201250	9	True				
ANR	1201299	Statement	)	100:49:3354:3354	1201250	10	True				
ANR	1201300	CompoundStatement		10:51:260:260	1201250	11					
ANR	1201301	Statement	if	101:2:3360:3361	1201250	0	True				
ANR	1201302	Statement	(	101:5:3363:3363	1201250	1	True				
ANR	1201303	Statement	!	101:6:3364:3364	1201250	2	True				
ANR	1201304	Statement	phar_get_entrypfp	101:7:3365:3381	1201250	3	True				
ANR	1201305	Statement	(	101:24:3382:3382	1201250	4	True				
ANR	1201306	Statement	entry	101:25:3383:3387	1201250	5	True				
ANR	1201307	Statement	TSRMLS_CC	101:31:3389:3397	1201250	6	True				
ANR	1201308	Statement	)	101:40:3398:3398	1201250	7	True				
ANR	1201309	Statement	)	101:41:3399:3399	1201250	8	True				
ANR	1201310	CompoundStatement		11:43:305:305	1201250	9					
ANR	1201311	Statement	phar_open_archive_fp	103:3:3495:3514	1201250	0	True				
ANR	1201312	Statement	(	103:23:3515:3515	1201250	1	True				
ANR	1201313	Statement	entry	103:24:3516:3520	1201250	2	True				
ANR	1201314	Statement	->	103:29:3521:3522	1201250	3	True				
ANR	1201315	Statement	phar	103:31:3523:3526	1201250	4	True				
ANR	1201316	Statement	TSRMLS_CC	103:36:3528:3536	1201250	5	True				
ANR	1201317	Statement	)	103:45:3537:3537	1201250	6	True				
ANR	1201318	ExpressionStatement		103:46:3538:3538	1201250	7	True				
ANR	1201319	Statement	return	105:2:3546:3551	1201250	10	True				
ANR	1201320	Statement	phar_get_entrypfp	105:9:3553:3569	1201250	11	True				
ANR	1201321	Statement	(	105:26:3570:3570	1201250	12	True				
ANR	1201322	Statement	entry	105:27:3571:3575	1201250	13	True				
ANR	1201323	Statement	TSRMLS_CC	105:33:3577:3585	1201250	14	True				
ANR	1201324	Statement	)	105:42:3586:3586	1201250	15	True				
ANR	1201325	ExpressionStatement		105:43:3587:3587	1201250	16	True				
ANR	1201326	Statement	(	106:11:3600:3600	1201250	12	True				
ANR	1201327	Statement	phar_get_fp_type	106:12:3601:3616	1201250	13	True				
ANR	1201328	Statement	(	106:28:3617:3617	1201250	14	True				
ANR	1201329	Statement	entry	106:29:3618:3622	1201250	15	True				
ANR	1201330	Statement	TSRMLS_CC	106:35:3624:3632	1201250	16	True				
ANR	1201331	Statement	)	106:44:3633:3633	1201250	17	True				
ANR	1201332	Statement	==	106:46:3635:3636	1201250	18	True				
ANR	1201333	Statement	PHAR_UFP	106:49:3638:3645	1201250	19	True				
ANR	1201334	Statement	)	106:57:3646:3646	1201250	20	True				
ANR	1201335	CompoundStatement		16:59:552:552	1201250	21					
ANR	1201336	Statement	return	107:2:3652:3657	1201250	0	True				
ANR	1201337	Statement	phar_get_entrypufp	107:9:3659:3676	1201250	1	True				
ANR	1201338	Statement	(	107:27:3677:3677	1201250	2	True				
ANR	1201339	Statement	entry	107:28:3678:3682	1201250	3	True				
ANR	1201340	Statement	TSRMLS_CC	107:34:3684:3692	1201250	4	True				
ANR	1201341	Statement	)	107:43:3693:3693	1201250	5	True				
ANR	1201342	ExpressionStatement		107:44:3694:3694	1201250	6	True				
ANR	1201343	ReturnType	php_stream *		1201250	1					
ANR	1201344	Identifier	phar_get_efp		1201250	2					
ANR	1201345	ParameterList	"phar_entry_info * entry , int follow_links TSRMLS_DC"		1201250	3					
ANR	1201346	Parameter	phar_entry_info * entry	90:25:3033:3054	1201250	0	True				
ANR	1201347	ParameterType	phar_entry_info *		1201250	0					
ANR	1201348	Identifier	entry		1201250	1					
ANR	1201349	Parameter	int follow_links TSRMLS_DC	90:49:3057:3082	1201250	1	True				
ANR	1201350	ParameterType	int follow_links		1201250	0					
ANR	1201351	Identifier	TSRMLS_DC		1201250	1					
ANR	1201352	CFGEntryNode	ENTRY		1201250		True				
ANR	1201353	CFGExitNode	EXIT		1201250		True				
ANR	1201354	Symbol	entry		1201250						
ANR	1201355	Symbol	link_entry		1201250						
ANR	1201356	Symbol	follow_links		1201250						
ANR	1201357	Symbol	TSRMLS_DC		1201250						
ANR	1201358	Symbol	entry -> link		1201250						
ANR	1201359	Symbol	* entry		1201250						
ANR	1201360	Function	phar_seek_efp	120:0:3945:4810							
ANR	1201361	FunctionDef	"phar_seek_efp (phar_entry_info * entry , off_t offset , int whence , off_t position , int follow_links TSRMLS_DC)"		1201360	0					
ANR	1201362	CompoundStatement		121:0:4067:4810	1201360	0					
ANR	1201363	Statement	php_stream	122:1:4070:4079	1201360	0	True				
ANR	1201364	Statement	*	122:12:4081:4081	1201360	1	True				
ANR	1201365	Statement	fp	122:13:4082:4083	1201360	2	True				
ANR	1201366	Statement	=	122:16:4085:4085	1201360	3	True				
ANR	1201367	Statement	phar_get_efp	122:18:4087:4098	1201360	4	True				
ANR	1201368	Statement	(	122:30:4099:4099	1201360	5	True				
ANR	1201369	Statement	entry	122:31:4100:4104	1201360	6	True				
ANR	1201370	Statement	","	122:36:4105:4105	1201360	7	True				
ANR	1201371	Statement	follow_links	122:38:4107:4118	1201360	8	True				
ANR	1201372	Statement	TSRMLS_CC	122:51:4120:4128	1201360	9	True				
ANR	1201373	Statement	)	122:60:4129:4129	1201360	10	True				
ANR	1201374	ExpressionStatement		122:61:4130:4130	1201360	11	True				
ANR	1201375	IdentifierDeclStatement	"off_t temp , eoffset ;"	123:1:4133:4152	1201360	12	True				
ANR	1201376	IdentifierDecl	temp		1201360	0					
ANR	1201377	IdentifierDeclType	off_t		1201360	0					
ANR	1201378	Identifier	temp		1201360	1					
ANR	1201379	IdentifierDecl	eoffset		1201360	1					
ANR	1201380	IdentifierDeclType	off_t		1201360	0					
ANR	1201381	Identifier	eoffset		1201360	1					
ANR	1201382	IfStatement	if ( ! fp )		1201360	13					
ANR	1201383	Condition	! fp	125:5:4160:4162	1201360	0	True				
ANR	1201384	UnaryOperationExpression	! fp		1201360	0					
ANR	1201385	UnaryOperator	!		1201360	0					
ANR	1201386	Identifier	fp		1201360	1					
ANR	1201387	CompoundStatement		5:10:97:97	1201360	1					
ANR	1201388	ReturnStatement	return - 1 ;	126:2:4169:4178	1201360	0	True				
ANR	1201389	UnaryOperationExpression	- 1		1201360	0					
ANR	1201390	UnaryOperator	-		1201360	0					
ANR	1201391	PrimaryExpression	1		1201360	1					
ANR	1201392	IfStatement	if ( follow_links )		1201360	14					
ANR	1201393	Condition	follow_links	129:5:4189:4200	1201360	0	True				
ANR	1201394	Identifier	follow_links		1201360	0					
ANR	1201395	CompoundStatement		10:2:139:157	1201360	1					
ANR	1201396	IdentifierDeclStatement	phar_entry_info * t ;	130:2:4207:4225	1201360	0	True				
ANR	1201397	IdentifierDecl	* t		1201360	0					
ANR	1201398	IdentifierDeclType	phar_entry_info *		1201360	0					
ANR	1201399	Identifier	t		1201360	1					
ANR	1201400	Statement	t	131:2:4229:4229	1201360	1	True				
ANR	1201401	Statement	=	131:4:4231:4231	1201360	2	True				
ANR	1201402	Statement	phar_get_link_source	131:6:4233:4252	1201360	3	True				
ANR	1201403	Statement	(	131:26:4253:4253	1201360	4	True				
ANR	1201404	Statement	entry	131:27:4254:4258	1201360	5	True				
ANR	1201405	Statement	TSRMLS_CC	131:33:4260:4268	1201360	6	True				
ANR	1201406	Statement	)	131:42:4269:4269	1201360	7	True				
ANR	1201407	ExpressionStatement		131:43:4270:4270	1201360	8	True				
ANR	1201408	IfStatement	if ( t )		1201360	9					
ANR	1201409	Condition	t	132:6:4278:4278	1201360	0	True				
ANR	1201410	Identifier	t		1201360	0					
ANR	1201411	CompoundStatement		12:9:213:213	1201360	1					
ANR	1201412	ExpressionStatement	entry = t	133:3:4286:4295	1201360	0	True				
ANR	1201413	AssignmentExpression	entry = t		1201360	0		=			
ANR	1201414	Identifier	entry		1201360	0					
ANR	1201415	Identifier	t		1201360	1					
ANR	1201416	IfStatement	if ( entry -> is_dir )		1201360	15					
ANR	1201417	Condition	entry -> is_dir	137:5:4310:4322	1201360	0	True				
ANR	1201418	PtrMemberAccess	entry -> is_dir		1201360	0					
ANR	1201419	Identifier	entry		1201360	0					
ANR	1201420	Identifier	is_dir		1201360	1					
ANR	1201421	CompoundStatement		17:20:257:257	1201360	1					
ANR	1201422	ReturnStatement	return 0 ;	138:2:4329:4337	1201360	0	True				
ANR	1201423	PrimaryExpression	0		1201360	0					
ANR	1201424	Statement	eoffset	141:1:4344:4350	1201360	16	True				
ANR	1201425	Statement	=	141:9:4352:4352	1201360	17	True				
ANR	1201426	Statement	phar_get_fp_offset	141:11:4354:4371	1201360	18	True				
ANR	1201427	Statement	(	141:29:4372:4372	1201360	19	True				
ANR	1201428	Statement	entry	141:30:4373:4377	1201360	20	True				
ANR	1201429	Statement	TSRMLS_CC	141:36:4379:4387	1201360	21	True				
ANR	1201430	Statement	)	141:45:4388:4388	1201360	22	True				
ANR	1201431	ExpressionStatement		141:46:4389:4389	1201360	23	True				
ANR	1201432	SwitchStatement	switch ( whence )		1201360	24					
ANR	1201433	Condition	whence	143:9:4401:4406	1201360	0	True				
ANR	1201434	Identifier	whence		1201360	0					
ANR	1201435	CompoundStatement		23:17:341:341	1201360	1					
ANR	1201436	Label	case SEEK_END :	144:2:4413:4426	1201360	0	True				
ANR	1201437	Identifier	SEEK_END		1201360	0					
ANR	1201438	ExpressionStatement	temp = eoffset + entry -> uncompressed_filesize + offset	145:3:4431:4485	1201360	1	True				
ANR	1201439	AssignmentExpression	temp = eoffset + entry -> uncompressed_filesize + offset		1201360	0		=			
ANR	1201440	Identifier	temp		1201360	0					
ANR	1201441	AdditiveExpression	eoffset + entry -> uncompressed_filesize + offset		1201360	1		+			
ANR	1201442	Identifier	eoffset		1201360	0					
ANR	1201443	AdditiveExpression	entry -> uncompressed_filesize + offset		1201360	1		+			
ANR	1201444	PtrMemberAccess	entry -> uncompressed_filesize		1201360	0					
ANR	1201445	Identifier	entry		1201360	0					
ANR	1201446	Identifier	uncompressed_filesize		1201360	1					
ANR	1201447	Identifier	offset		1201360	1					
ANR	1201448	BreakStatement	break ;	146:3:4490:4495	1201360	2	True				
ANR	1201449	Label	case SEEK_CUR :	147:2:4499:4512	1201360	3	True				
ANR	1201450	Identifier	SEEK_CUR		1201360	0					
ANR	1201451	ExpressionStatement	temp = eoffset + position + offset	148:3:4517:4551	1201360	4	True				
ANR	1201452	AssignmentExpression	temp = eoffset + position + offset		1201360	0		=			
ANR	1201453	Identifier	temp		1201360	0					
ANR	1201454	AdditiveExpression	eoffset + position + offset		1201360	1		+			
ANR	1201455	Identifier	eoffset		1201360	0					
ANR	1201456	AdditiveExpression	position + offset		1201360	1		+			
ANR	1201457	Identifier	position		1201360	0					
ANR	1201458	Identifier	offset		1201360	1					
ANR	1201459	BreakStatement	break ;	149:3:4556:4561	1201360	5	True				
ANR	1201460	Label	case SEEK_SET :	150:2:4565:4578	1201360	6	True				
ANR	1201461	Identifier	SEEK_SET		1201360	0					
ANR	1201462	ExpressionStatement	temp = eoffset + offset	151:3:4583:4606	1201360	7	True				
ANR	1201463	AssignmentExpression	temp = eoffset + offset		1201360	0		=			
ANR	1201464	Identifier	temp		1201360	0					
ANR	1201465	AdditiveExpression	eoffset + offset		1201360	1		+			
ANR	1201466	Identifier	eoffset		1201360	0					
ANR	1201467	Identifier	offset		1201360	1					
ANR	1201468	BreakStatement	break ;	152:3:4611:4616	1201360	8	True				
ANR	1201469	Label	default :	153:2:4620:4627	1201360	9	True				
ANR	1201470	Identifier	default		1201360	0					
ANR	1201471	ExpressionStatement	temp = 0	154:3:4632:4640	1201360	10	True				
ANR	1201472	AssignmentExpression	temp = 0		1201360	0		=			
ANR	1201473	Identifier	temp		1201360	0					
ANR	1201474	PrimaryExpression	0		1201360	1					
ANR	1201475	IfStatement	if ( temp > eoffset + ( off_t ) entry -> uncompressed_filesize )		1201360	25					
ANR	1201476	Condition	temp > eoffset + ( off_t ) entry -> uncompressed_filesize	157:5:4651:4703	1201360	0	True				
ANR	1201477	RelationalExpression	temp > eoffset + ( off_t ) entry -> uncompressed_filesize		1201360	0		>			
ANR	1201478	Identifier	temp		1201360	0					
ANR	1201479	AdditiveExpression	eoffset + ( off_t ) entry -> uncompressed_filesize		1201360	1		+			
ANR	1201480	Identifier	eoffset		1201360	0					
ANR	1201481	CastExpression	( off_t ) entry -> uncompressed_filesize		1201360	1					
ANR	1201482	CastTarget	off_t		1201360	0					
ANR	1201483	PtrMemberAccess	entry -> uncompressed_filesize		1201360	1					
ANR	1201484	Identifier	entry		1201360	0					
ANR	1201485	Identifier	uncompressed_filesize		1201360	1					
ANR	1201486	CompoundStatement		37:60:638:638	1201360	1					
ANR	1201487	ReturnStatement	return - 1 ;	158:2:4710:4719	1201360	0	True				
ANR	1201488	UnaryOperationExpression	- 1		1201360	0					
ANR	1201489	UnaryOperator	-		1201360	0					
ANR	1201490	PrimaryExpression	1		1201360	1					
ANR	1201491	IfStatement	if ( temp < eoffset )		1201360	26					
ANR	1201492	Condition	temp < eoffset	161:5:4730:4743	1201360	0	True				
ANR	1201493	RelationalExpression	temp < eoffset		1201360	0		<			
ANR	1201494	Identifier	temp		1201360	0					
ANR	1201495	Identifier	eoffset		1201360	1					
ANR	1201496	CompoundStatement		41:21:678:678	1201360	1					
ANR	1201497	ReturnStatement	return - 1 ;	162:2:4750:4759	1201360	0	True				
ANR	1201498	UnaryOperationExpression	- 1		1201360	0					
ANR	1201499	UnaryOperator	-		1201360	0					
ANR	1201500	PrimaryExpression	1		1201360	1					
ANR	1201501	ReturnStatement	"return php_stream_seek ( fp , temp , SEEK_SET ) ;"	165:1:4766:4808	1201360	27	True				
ANR	1201502	CallExpression	"php_stream_seek ( fp , temp , SEEK_SET )"		1201360	0					
ANR	1201503	Callee	php_stream_seek		1201360	0					
ANR	1201504	Identifier	php_stream_seek		1201360	0					
ANR	1201505	ArgumentList	fp		1201360	1					
ANR	1201506	Argument	fp		1201360	0					
ANR	1201507	Identifier	fp		1201360	0					
ANR	1201508	Argument	temp		1201360	1					
ANR	1201509	Identifier	temp		1201360	0					
ANR	1201510	Argument	SEEK_SET		1201360	2					
ANR	1201511	Identifier	SEEK_SET		1201360	0					
ANR	1201512	ReturnType	int		1201360	1					
ANR	1201513	Identifier	phar_seek_efp		1201360	2					
ANR	1201514	ParameterList	"phar_entry_info * entry , off_t offset , int whence , off_t position , int follow_links TSRMLS_DC"		1201360	3					
ANR	1201515	Parameter	phar_entry_info * entry	120:18:3963:3984	1201360	0	True				
ANR	1201516	ParameterType	phar_entry_info *		1201360	0					
ANR	1201517	Identifier	entry		1201360	1					
ANR	1201518	Parameter	off_t offset	120:42:3987:3998	1201360	1	True				
ANR	1201519	ParameterType	off_t		1201360	0					
ANR	1201520	Identifier	offset		1201360	1					
ANR	1201521	Parameter	int whence	120:56:4001:4010	1201360	2	True				
ANR	1201522	ParameterType	int		1201360	0					
ANR	1201523	Identifier	whence		1201360	1					
ANR	1201524	Parameter	off_t position	120:68:4013:4026	1201360	3	True				
ANR	1201525	ParameterType	off_t		1201360	0					
ANR	1201526	Identifier	position		1201360	1					
ANR	1201527	Parameter	int follow_links TSRMLS_DC	120:84:4029:4054	1201360	4	True				
ANR	1201528	ParameterType	int follow_links		1201360	0					
ANR	1201529	Identifier	TSRMLS_DC		1201360	1					
ANR	1201530	CFGEntryNode	ENTRY		1201360		True				
ANR	1201531	CFGExitNode	EXIT		1201360		True				
ANR	1201532	Symbol	SEEK_SET		1201360						
ANR	1201533	Symbol	temp		1201360						
ANR	1201534	Symbol	offset		1201360						
ANR	1201535	Symbol	whence		1201360						
ANR	1201536	Symbol	php_stream_seek		1201360						
ANR	1201537	Symbol	entry -> uncompressed_filesize		1201360						
ANR	1201538	Symbol	fp		1201360						
ANR	1201539	Symbol	TSRMLS_DC		1201360						
ANR	1201540	Symbol	entry		1201360						
ANR	1201541	Symbol	eoffset		1201360						
ANR	1201542	Symbol	t		1201360						
ANR	1201543	Symbol	follow_links		1201360						
ANR	1201544	Symbol	position		1201360						
ANR	1201545	Symbol	entry -> is_dir		1201360						
ANR	1201546	Symbol	* entry		1201360						
ANR	1201547	Function	phar_mount_entry	170:0:4898:7060							
ANR	1201548	FunctionDef	"phar_mount_entry (phar_archive_data * phar , char * filename , int filename_len , char * path , int path_len TSRMLS_DC)"		1201547	0					
ANR	1201549	CompoundStatement		171:0:5024:7060	1201547	0					
ANR	1201550	IdentifierDeclStatement	phar_entry_info entry = { 0 } ;	172:1:5027:5054	1201547	0	True				
ANR	1201551	IdentifierDecl	entry = { 0 }		1201547	0					
ANR	1201552	IdentifierDeclType	phar_entry_info		1201547	0					
ANR	1201553	Identifier	entry		1201547	1					
ANR	1201554	AssignmentExpression	entry = { 0 }		1201547	2		=			
ANR	1201555	Identifier	entry		1201547	0					
ANR	1201556	InitializerList	0		1201547	1					
ANR	1201557	PrimaryExpression	0		1201547	0					
ANR	1201558	IdentifierDeclStatement	php_stream_statbuf ssb ;	173:1:5057:5079	1201547	1	True				
ANR	1201559	IdentifierDecl	ssb		1201547	0					
ANR	1201560	IdentifierDeclType	php_stream_statbuf		1201547	0					
ANR	1201561	Identifier	ssb		1201547	1					
ANR	1201562	IdentifierDeclStatement	int is_phar ;	174:1:5082:5093	1201547	2	True				
ANR	1201563	IdentifierDecl	is_phar		1201547	0					
ANR	1201564	IdentifierDeclType	int		1201547	0					
ANR	1201565	Identifier	is_phar		1201547	1					
ANR	1201566	IdentifierDeclStatement	const char * err ;	175:1:5096:5111	1201547	3	True				
ANR	1201567	IdentifierDecl	* err		1201547	0					
ANR	1201568	IdentifierDeclType	const char *		1201547	0					
ANR	1201569	Identifier	err		1201547	1					
ANR	1201570	IfStatement	"if ( phar_path_check ( & path , & path_len , & err ) > pcr_is_ok )"		1201547	4					
ANR	1201571	Condition	"phar_path_check ( & path , & path_len , & err ) > pcr_is_ok"	177:5:5119:5169	1201547	0	True				
ANR	1201572	RelationalExpression	"phar_path_check ( & path , & path_len , & err ) > pcr_is_ok"		1201547	0		>			
ANR	1201573	CallExpression	"phar_path_check ( & path , & path_len , & err )"		1201547	0					
ANR	1201574	Callee	phar_path_check		1201547	0					
ANR	1201575	Identifier	phar_path_check		1201547	0					
ANR	1201576	ArgumentList	& path		1201547	1					
ANR	1201577	Argument	& path		1201547	0					
ANR	1201578	UnaryOperationExpression	& path		1201547	0					
ANR	1201579	UnaryOperator	&		1201547	0					
ANR	1201580	Identifier	path		1201547	1					
ANR	1201581	Argument	& path_len		1201547	1					
ANR	1201582	UnaryOperationExpression	& path_len		1201547	0					
ANR	1201583	UnaryOperator	&		1201547	0					
ANR	1201584	Identifier	path_len		1201547	1					
ANR	1201585	Argument	& err		1201547	2					
ANR	1201586	UnaryOperationExpression	& err		1201547	0					
ANR	1201587	UnaryOperator	&		1201547	0					
ANR	1201588	Identifier	err		1201547	1					
ANR	1201589	Identifier	pcr_is_ok		1201547	1					
ANR	1201590	CompoundStatement		7:58:147:147	1201547	1					
ANR	1201591	ReturnStatement	return FAILURE ;	178:2:5176:5190	1201547	0	True				
ANR	1201592	Identifier	FAILURE		1201547	0					
ANR	1201593	IfStatement	"if ( path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 ) )"		1201547	5					
ANR	1201594	Condition	"path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"	181:5:5201:5274	1201547	0	True				
ANR	1201595	AndExpression	"path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1201547	0		&&			
ANR	1201596	RelationalExpression	"path_len >= sizeof ( "".phar"" ) - 1"		1201547	0		>=			
ANR	1201597	Identifier	path_len		1201547	0					
ANR	1201598	AdditiveExpression	"sizeof ( "".phar"" ) - 1"		1201547	1		-			
ANR	1201599	SizeofExpression	"sizeof ( "".phar"" )"		1201547	0					
ANR	1201600	Sizeof	sizeof		1201547	0					
ANR	1201601	PrimaryExpression	""".phar"""		1201547	1					
ANR	1201602	PrimaryExpression	1		1201547	1					
ANR	1201603	UnaryOperationExpression	"! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1201547	1					
ANR	1201604	UnaryOperator	!		1201547	0					
ANR	1201605	CallExpression	"memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1201547	1					
ANR	1201606	Callee	memcmp		1201547	0					
ANR	1201607	Identifier	memcmp		1201547	0					
ANR	1201608	ArgumentList	path		1201547	1					
ANR	1201609	Argument	path		1201547	0					
ANR	1201610	Identifier	path		1201547	0					
ANR	1201611	Argument	""".phar"""		1201547	1					
ANR	1201612	PrimaryExpression	""".phar"""		1201547	0					
ANR	1201613	Argument	"sizeof ( "".phar"" ) - 1"		1201547	2					
ANR	1201614	AdditiveExpression	"sizeof ( "".phar"" ) - 1"		1201547	0		-			
ANR	1201615	SizeofExpression	"sizeof ( "".phar"" )"		1201547	0					
ANR	1201616	Sizeof	sizeof		1201547	0					
ANR	1201617	PrimaryExpression	""".phar"""		1201547	1					
ANR	1201618	PrimaryExpression	1		1201547	1					
ANR	1201619	CompoundStatement		11:81:252:252	1201547	1					
ANR	1201620	ReturnStatement	return FAILURE ;	183:2:5335:5349	1201547	0	True				
ANR	1201621	Identifier	FAILURE		1201547	0					
ANR	1201622	ExpressionStatement	"is_phar = ( filename_len > 7 && ! memcmp ( filename , ""phar://"" , 7 ) )"	186:1:5356:5419	1201547	6	True				
ANR	1201623	AssignmentExpression	"is_phar = ( filename_len > 7 && ! memcmp ( filename , ""phar://"" , 7 ) )"		1201547	0		=			
ANR	1201624	Identifier	is_phar		1201547	0					
ANR	1201625	AndExpression	"filename_len > 7 && ! memcmp ( filename , ""phar://"" , 7 )"		1201547	1		&&			
ANR	1201626	RelationalExpression	filename_len > 7		1201547	0		>			
ANR	1201627	Identifier	filename_len		1201547	0					
ANR	1201628	PrimaryExpression	7		1201547	1					
ANR	1201629	UnaryOperationExpression	"! memcmp ( filename , ""phar://"" , 7 )"		1201547	1					
ANR	1201630	UnaryOperator	!		1201547	0					
ANR	1201631	CallExpression	"memcmp ( filename , ""phar://"" , 7 )"		1201547	1					
ANR	1201632	Callee	memcmp		1201547	0					
ANR	1201633	Identifier	memcmp		1201547	0					
ANR	1201634	ArgumentList	filename		1201547	1					
ANR	1201635	Argument	filename		1201547	0					
ANR	1201636	Identifier	filename		1201547	0					
ANR	1201637	Argument	"""phar://"""		1201547	1					
ANR	1201638	PrimaryExpression	"""phar://"""		1201547	0					
ANR	1201639	Argument	7		1201547	2					
ANR	1201640	PrimaryExpression	7		1201547	0					
ANR	1201641	ExpressionStatement	entry . phar = phar	188:1:5423:5440	1201547	7	True				
ANR	1201642	AssignmentExpression	entry . phar = phar		1201547	0		=			
ANR	1201643	MemberAccess	entry . phar		1201547	0					
ANR	1201644	Identifier	entry		1201547	0					
ANR	1201645	Identifier	phar		1201547	1					
ANR	1201646	Identifier	phar		1201547	1					
ANR	1201647	ExpressionStatement	"entry . filename = estrndup ( path , path_len )"	189:1:5443:5484	1201547	8	True				
ANR	1201648	AssignmentExpression	"entry . filename = estrndup ( path , path_len )"		1201547	0		=			
ANR	1201649	MemberAccess	entry . filename		1201547	0					
ANR	1201650	Identifier	entry		1201547	0					
ANR	1201651	Identifier	filename		1201547	1					
ANR	1201652	CallExpression	"estrndup ( path , path_len )"		1201547	1					
ANR	1201653	Callee	estrndup		1201547	0					
ANR	1201654	Identifier	estrndup		1201547	0					
ANR	1201655	ArgumentList	path		1201547	1					
ANR	1201656	Argument	path		1201547	0					
ANR	1201657	Identifier	path		1201547	0					
ANR	1201658	Argument	path_len		1201547	1					
ANR	1201659	Identifier	path_len		1201547	0					
ANR	1201660	ExpressionStatement	"phar_unixify_path_separators ( entry . filename , path_len )"	191:1:5504:5558	1201547	9	True				
ANR	1201661	CallExpression	"phar_unixify_path_separators ( entry . filename , path_len )"		1201547	0					
ANR	1201662	Callee	phar_unixify_path_separators		1201547	0					
ANR	1201663	Identifier	phar_unixify_path_separators		1201547	0					
ANR	1201664	ArgumentList	entry . filename		1201547	1					
ANR	1201665	Argument	entry . filename		1201547	0					
ANR	1201666	MemberAccess	entry . filename		1201547	0					
ANR	1201667	Identifier	entry		1201547	0					
ANR	1201668	Identifier	filename		1201547	1					
ANR	1201669	Argument	path_len		1201547	1					
ANR	1201670	Identifier	path_len		1201547	0					
ANR	1201671	ExpressionStatement	entry . filename_len = path_len	193:1:5568:5597	1201547	10	True				
ANR	1201672	AssignmentExpression	entry . filename_len = path_len		1201547	0		=			
ANR	1201673	MemberAccess	entry . filename_len		1201547	0					
ANR	1201674	Identifier	entry		1201547	0					
ANR	1201675	Identifier	filename_len		1201547	1					
ANR	1201676	Identifier	path_len		1201547	1					
ANR	1201677	IfStatement	if ( is_phar )		1201547	11					
ANR	1201678	Condition	is_phar	194:5:5604:5610	1201547	0	True				
ANR	1201679	Identifier	is_phar		1201547	0					
ANR	1201680	CompoundStatement		24:14:588:588	1201547	1					
ANR	1201681	ExpressionStatement	"entry . tmp = estrndup ( filename , filename_len )"	195:2:5617:5661	1201547	0	True				
ANR	1201682	AssignmentExpression	"entry . tmp = estrndup ( filename , filename_len )"		1201547	0		=			
ANR	1201683	MemberAccess	entry . tmp		1201547	0					
ANR	1201684	Identifier	entry		1201547	0					
ANR	1201685	Identifier	tmp		1201547	1					
ANR	1201686	CallExpression	"estrndup ( filename , filename_len )"		1201547	1					
ANR	1201687	Callee	estrndup		1201547	0					
ANR	1201688	Identifier	estrndup		1201547	0					
ANR	1201689	ArgumentList	filename		1201547	1					
ANR	1201690	Argument	filename		1201547	0					
ANR	1201691	Identifier	filename		1201547	0					
ANR	1201692	Argument	filename_len		1201547	1					
ANR	1201693	Identifier	filename_len		1201547	0					
ANR	1201694	ElseStatement	else		1201547	0					
ANR	1201695	CompoundStatement		26:8:646:646	1201547	0					
ANR	1201696	Statement	entry	197:2:5675:5679	1201547	0	True				
ANR	1201697	Statement	.	197:7:5680:5680	1201547	1	True				
ANR	1201698	Statement	tmp	197:8:5681:5683	1201547	2	True				
ANR	1201699	Statement	=	197:12:5685:5685	1201547	3	True				
ANR	1201700	Statement	expand_filepath	197:14:5687:5701	1201547	4	True				
ANR	1201701	Statement	(	197:29:5702:5702	1201547	5	True				
ANR	1201702	Statement	filename	197:30:5703:5710	1201547	6	True				
ANR	1201703	Statement	","	197:38:5711:5711	1201547	7	True				
ANR	1201704	Statement	NULL	197:40:5713:5716	1201547	8	True				
ANR	1201705	Statement	TSRMLS_CC	197:45:5718:5726	1201547	9	True				
ANR	1201706	Statement	)	197:54:5727:5727	1201547	10	True				
ANR	1201707	ExpressionStatement		197:55:5728:5728	1201547	11	True				
ANR	1201708	IfStatement	if ( ! entry . tmp )		1201547	12					
ANR	1201709	Condition	! entry . tmp	198:6:5736:5745	1201547	0	True				
ANR	1201710	UnaryOperationExpression	! entry . tmp		1201547	0					
ANR	1201711	UnaryOperator	!		1201547	0					
ANR	1201712	MemberAccess	entry . tmp		1201547	1					
ANR	1201713	Identifier	entry		1201547	0					
ANR	1201714	Identifier	tmp		1201547	1					
ANR	1201715	CompoundStatement		28:18:723:723	1201547	1					
ANR	1201716	ExpressionStatement	"entry . tmp = estrndup ( filename , filename_len )"	199:3:5753:5797	1201547	0	True				
ANR	1201717	AssignmentExpression	"entry . tmp = estrndup ( filename , filename_len )"		1201547	0		=			
ANR	1201718	MemberAccess	entry . tmp		1201547	0					
ANR	1201719	Identifier	entry		1201547	0					
ANR	1201720	Identifier	tmp		1201547	1					
ANR	1201721	CallExpression	"estrndup ( filename , filename_len )"		1201547	1					
ANR	1201722	Callee	estrndup		1201547	0					
ANR	1201723	Identifier	estrndup		1201547	0					
ANR	1201724	ArgumentList	filename		1201547	1					
ANR	1201725	Argument	filename		1201547	0					
ANR	1201726	Identifier	filename		1201547	0					
ANR	1201727	Argument	filename_len		1201547	1					
ANR	1201728	Identifier	filename_len		1201547	0					
ANR	1201729	IfStatement	"if ( PG ( safe_mode ) && ! is_phar && ( ! php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR ) ) )"		1201547	12					
ANR	1201730	Condition	"PG ( safe_mode ) && ! is_phar && ( ! php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR ) )"	203:5:5842:5931	1201547	0	True				
ANR	1201731	AndExpression	"PG ( safe_mode ) && ! is_phar && ( ! php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR ) )"		1201547	0		&&			
ANR	1201732	CallExpression	PG ( safe_mode )		1201547	0					
ANR	1201733	Callee	PG		1201547	0					
ANR	1201734	Identifier	PG		1201547	0					
ANR	1201735	ArgumentList	safe_mode		1201547	1					
ANR	1201736	Argument	safe_mode		1201547	0					
ANR	1201737	Identifier	safe_mode		1201547	0					
ANR	1201738	AndExpression	"! is_phar && ( ! php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR ) )"		1201547	1		&&			
ANR	1201739	UnaryOperationExpression	! is_phar		1201547	0					
ANR	1201740	UnaryOperator	!		1201547	0					
ANR	1201741	Identifier	is_phar		1201547	1					
ANR	1201742	UnaryOperationExpression	"! php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR )"		1201547	1					
ANR	1201743	UnaryOperator	!		1201547	0					
ANR	1201744	CallExpression	"php_checkuid ( entry . tmp , NULL , CHECKUID_CHECK_FILE_AND_DIR )"		1201547	1					
ANR	1201745	Callee	php_checkuid		1201547	0					
ANR	1201746	Identifier	php_checkuid		1201547	0					
ANR	1201747	ArgumentList	entry . tmp		1201547	1					
ANR	1201748	Argument	entry . tmp		1201547	0					
ANR	1201749	MemberAccess	entry . tmp		1201547	0					
ANR	1201750	Identifier	entry		1201547	0					
ANR	1201751	Identifier	tmp		1201547	1					
ANR	1201752	Argument	NULL		1201547	1					
ANR	1201753	Identifier	NULL		1201547	0					
ANR	1201754	Argument	CHECKUID_CHECK_FILE_AND_DIR		1201547	2					
ANR	1201755	Identifier	CHECKUID_CHECK_FILE_AND_DIR		1201547	0					
ANR	1201756	CompoundStatement		33:97:909:909	1201547	1					
ANR	1201757	ExpressionStatement	efree ( entry . tmp )	204:2:5938:5954	1201547	0	True				
ANR	1201758	CallExpression	efree ( entry . tmp )		1201547	0					
ANR	1201759	Callee	efree		1201547	0					
ANR	1201760	Identifier	efree		1201547	0					
ANR	1201761	ArgumentList	entry . tmp		1201547	1					
ANR	1201762	Argument	entry . tmp		1201547	0					
ANR	1201763	MemberAccess	entry . tmp		1201547	0					
ANR	1201764	Identifier	entry		1201547	0					
ANR	1201765	Identifier	tmp		1201547	1					
ANR	1201766	ExpressionStatement	efree ( entry . filename )	205:2:5958:5979	1201547	1	True				
ANR	1201767	CallExpression	efree ( entry . filename )		1201547	0					
ANR	1201768	Callee	efree		1201547	0					
ANR	1201769	Identifier	efree		1201547	0					
ANR	1201770	ArgumentList	entry . filename		1201547	1					
ANR	1201771	Argument	entry . filename		1201547	0					
ANR	1201772	MemberAccess	entry . filename		1201547	0					
ANR	1201773	Identifier	entry		1201547	0					
ANR	1201774	Identifier	filename		1201547	1					
ANR	1201775	ReturnStatement	return FAILURE ;	206:2:5983:5997	1201547	2	True				
ANR	1201776	Identifier	FAILURE		1201547	0					
ANR	1201777	ExpressionStatement	filename = entry . tmp	209:1:6010:6030	1201547	13	True				
ANR	1201778	AssignmentExpression	filename = entry . tmp		1201547	0		=			
ANR	1201779	Identifier	filename		1201547	0					
ANR	1201780	MemberAccess	entry . tmp		1201547	1					
ANR	1201781	Identifier	entry		1201547	0					
ANR	1201782	Identifier	tmp		1201547	1					
ANR	1201783	Statement	if	212:1:6096:6097	1201547	14	True				
ANR	1201784	Statement	(	212:4:6099:6099	1201547	15	True				
ANR	1201785	Statement	!	212:5:6100:6100	1201547	16	True				
ANR	1201786	Statement	is_phar	212:6:6101:6107	1201547	17	True				
ANR	1201787	Statement	&&	212:14:6109:6110	1201547	18	True				
ANR	1201788	Statement	php_check_open_basedir	212:17:6112:6133	1201547	19	True				
ANR	1201789	Statement	(	212:39:6134:6134	1201547	20	True				
ANR	1201790	Statement	filename	212:40:6135:6142	1201547	21	True				
ANR	1201791	Statement	TSRMLS_CC	212:49:6144:6152	1201547	22	True				
ANR	1201792	Statement	)	212:58:6153:6153	1201547	23	True				
ANR	1201793	Statement	)	212:59:6154:6154	1201547	24	True				
ANR	1201794	CompoundStatement		42:61:1131:1131	1201547	25					
ANR	1201795	ExpressionStatement	efree ( entry . tmp )	213:2:6160:6176	1201547	0	True				
ANR	1201796	CallExpression	efree ( entry . tmp )		1201547	0					
ANR	1201797	Callee	efree		1201547	0					
ANR	1201798	Identifier	efree		1201547	0					
ANR	1201799	ArgumentList	entry . tmp		1201547	1					
ANR	1201800	Argument	entry . tmp		1201547	0					
ANR	1201801	MemberAccess	entry . tmp		1201547	0					
ANR	1201802	Identifier	entry		1201547	0					
ANR	1201803	Identifier	tmp		1201547	1					
ANR	1201804	ExpressionStatement	efree ( entry . filename )	214:2:6180:6201	1201547	1	True				
ANR	1201805	CallExpression	efree ( entry . filename )		1201547	0					
ANR	1201806	Callee	efree		1201547	0					
ANR	1201807	Identifier	efree		1201547	0					
ANR	1201808	ArgumentList	entry . filename		1201547	1					
ANR	1201809	Argument	entry . filename		1201547	0					
ANR	1201810	MemberAccess	entry . filename		1201547	0					
ANR	1201811	Identifier	entry		1201547	0					
ANR	1201812	Identifier	filename		1201547	1					
ANR	1201813	ReturnStatement	return FAILURE ;	215:2:6205:6219	1201547	2	True				
ANR	1201814	Identifier	FAILURE		1201547	0					
ANR	1201815	ExpressionStatement	entry . is_mounted = 1	218:1:6226:6246	1201547	26	True				
ANR	1201816	AssignmentExpression	entry . is_mounted = 1		1201547	0		=			
ANR	1201817	MemberAccess	entry . is_mounted		1201547	0					
ANR	1201818	Identifier	entry		1201547	0					
ANR	1201819	Identifier	is_mounted		1201547	1					
ANR	1201820	PrimaryExpression	1		1201547	1					
ANR	1201821	ExpressionStatement	entry . is_crc_checked = 1	219:1:6249:6273	1201547	27	True				
ANR	1201822	AssignmentExpression	entry . is_crc_checked = 1		1201547	0		=			
ANR	1201823	MemberAccess	entry . is_crc_checked		1201547	0					
ANR	1201824	Identifier	entry		1201547	0					
ANR	1201825	Identifier	is_crc_checked		1201547	1					
ANR	1201826	PrimaryExpression	1		1201547	1					
ANR	1201827	ExpressionStatement	entry . fp_type = PHAR_TMP	220:1:6276:6300	1201547	28	True				
ANR	1201828	AssignmentExpression	entry . fp_type = PHAR_TMP		1201547	0		=			
ANR	1201829	MemberAccess	entry . fp_type		1201547	0					
ANR	1201830	Identifier	entry		1201547	0					
ANR	1201831	Identifier	fp_type		1201547	1					
ANR	1201832	Identifier	PHAR_TMP		1201547	1					
ANR	1201833	IfStatement	"if ( SUCCESS != php_stream_stat_path ( filename , & ssb ) )"		1201547	29					
ANR	1201834	Condition	"SUCCESS != php_stream_stat_path ( filename , & ssb )"	222:5:6308:6354	1201547	0	True				
ANR	1201835	EqualityExpression	"SUCCESS != php_stream_stat_path ( filename , & ssb )"		1201547	0		!=			
ANR	1201836	Identifier	SUCCESS		1201547	0					
ANR	1201837	CallExpression	"php_stream_stat_path ( filename , & ssb )"		1201547	1					
ANR	1201838	Callee	php_stream_stat_path		1201547	0					
ANR	1201839	Identifier	php_stream_stat_path		1201547	0					
ANR	1201840	ArgumentList	filename		1201547	1					
ANR	1201841	Argument	filename		1201547	0					
ANR	1201842	Identifier	filename		1201547	0					
ANR	1201843	Argument	& ssb		1201547	1					
ANR	1201844	UnaryOperationExpression	& ssb		1201547	0					
ANR	1201845	UnaryOperator	&		1201547	0					
ANR	1201846	Identifier	ssb		1201547	1					
ANR	1201847	CompoundStatement		52:54:1332:1332	1201547	1					
ANR	1201848	ExpressionStatement	efree ( entry . tmp )	223:2:6361:6377	1201547	0	True				
ANR	1201849	CallExpression	efree ( entry . tmp )		1201547	0					
ANR	1201850	Callee	efree		1201547	0					
ANR	1201851	Identifier	efree		1201547	0					
ANR	1201852	ArgumentList	entry . tmp		1201547	1					
ANR	1201853	Argument	entry . tmp		1201547	0					
ANR	1201854	MemberAccess	entry . tmp		1201547	0					
ANR	1201855	Identifier	entry		1201547	0					
ANR	1201856	Identifier	tmp		1201547	1					
ANR	1201857	ExpressionStatement	efree ( entry . filename )	224:2:6381:6402	1201547	1	True				
ANR	1201858	CallExpression	efree ( entry . filename )		1201547	0					
ANR	1201859	Callee	efree		1201547	0					
ANR	1201860	Identifier	efree		1201547	0					
ANR	1201861	ArgumentList	entry . filename		1201547	1					
ANR	1201862	Argument	entry . filename		1201547	0					
ANR	1201863	MemberAccess	entry . filename		1201547	0					
ANR	1201864	Identifier	entry		1201547	0					
ANR	1201865	Identifier	filename		1201547	1					
ANR	1201866	ReturnStatement	return FAILURE ;	225:2:6406:6420	1201547	2	True				
ANR	1201867	Identifier	FAILURE		1201547	0					
ANR	1201868	IfStatement	if ( ssb . sb . st_mode & S_IFDIR )		1201547	30					
ANR	1201869	Condition	ssb . sb . st_mode & S_IFDIR	228:5:6431:6454	1201547	0	True				
ANR	1201870	BitAndExpression	ssb . sb . st_mode & S_IFDIR		1201547	0		&			
ANR	1201871	MemberAccess	ssb . sb . st_mode		1201547	0					
ANR	1201872	MemberAccess	ssb . sb		1201547	0					
ANR	1201873	Identifier	ssb		1201547	0					
ANR	1201874	Identifier	sb		1201547	1					
ANR	1201875	Identifier	st_mode		1201547	1					
ANR	1201876	Identifier	S_IFDIR		1201547	1					
ANR	1201877	CompoundStatement		58:31:1432:1432	1201547	1					
ANR	1201878	ExpressionStatement	entry . is_dir = 1	229:2:6461:6477	1201547	0	True				
ANR	1201879	AssignmentExpression	entry . is_dir = 1		1201547	0		=			
ANR	1201880	MemberAccess	entry . is_dir		1201547	0					
ANR	1201881	Identifier	entry		1201547	0					
ANR	1201882	Identifier	is_dir		1201547	1					
ANR	1201883	PrimaryExpression	1		1201547	1					
ANR	1201884	IfStatement	"if ( SUCCESS != zend_hash_add ( & phar -> mounted_dirs , entry . filename , path_len , ( void * ) & ( entry . filename ) , sizeof ( char * ) , NULL ) )"		1201547	1					
ANR	1201885	Condition	"SUCCESS != zend_hash_add ( & phar -> mounted_dirs , entry . filename , path_len , ( void * ) & ( entry . filename ) , sizeof ( char * ) , NULL )"	230:6:6485:6604	1201547	0	True				
ANR	1201886	EqualityExpression	"SUCCESS != zend_hash_add ( & phar -> mounted_dirs , entry . filename , path_len , ( void * ) & ( entry . filename ) , sizeof ( char * ) , NULL )"		1201547	0		!=			
ANR	1201887	Identifier	SUCCESS		1201547	0					
ANR	1201888	CallExpression	"zend_hash_add ( & phar -> mounted_dirs , entry . filename , path_len , ( void * ) & ( entry . filename ) , sizeof ( char * ) , NULL )"		1201547	1					
ANR	1201889	Callee	zend_hash_add		1201547	0					
ANR	1201890	Identifier	zend_hash_add		1201547	0					
ANR	1201891	ArgumentList	& phar -> mounted_dirs		1201547	1					
ANR	1201892	Argument	& phar -> mounted_dirs		1201547	0					
ANR	1201893	UnaryOperationExpression	& phar -> mounted_dirs		1201547	0					
ANR	1201894	UnaryOperator	&		1201547	0					
ANR	1201895	PtrMemberAccess	phar -> mounted_dirs		1201547	1					
ANR	1201896	Identifier	phar		1201547	0					
ANR	1201897	Identifier	mounted_dirs		1201547	1					
ANR	1201898	Argument	entry . filename		1201547	1					
ANR	1201899	MemberAccess	entry . filename		1201547	0					
ANR	1201900	Identifier	entry		1201547	0					
ANR	1201901	Identifier	filename		1201547	1					
ANR	1201902	Argument	path_len		1201547	2					
ANR	1201903	Identifier	path_len		1201547	0					
ANR	1201904	Argument	( void * ) & ( entry . filename )		1201547	3					
ANR	1201905	CastExpression	( void * ) & ( entry . filename )		1201547	0					
ANR	1201906	CastTarget	void *		1201547	0					
ANR	1201907	UnaryOperationExpression	& ( entry . filename )		1201547	1					
ANR	1201908	UnaryOperator	&		1201547	0					
ANR	1201909	MemberAccess	entry . filename		1201547	1					
ANR	1201910	Identifier	entry		1201547	0					
ANR	1201911	Identifier	filename		1201547	1					
ANR	1201912	Argument	sizeof ( char * )		1201547	4					
ANR	1201913	SizeofExpression	sizeof ( char * )		1201547	0					
ANR	1201914	Sizeof	sizeof		1201547	0					
ANR	1201915	SizeofOperand	char *		1201547	1					
ANR	1201916	Argument	NULL		1201547	5					
ANR	1201917	Identifier	NULL		1201547	0					
ANR	1201918	CompoundStatement		60:128:1582:1582	1201547	1					
ANR	1201919	ExpressionStatement	efree ( entry . tmp )	232:3:6647:6663	1201547	0	True				
ANR	1201920	CallExpression	efree ( entry . tmp )		1201547	0					
ANR	1201921	Callee	efree		1201547	0					
ANR	1201922	Identifier	efree		1201547	0					
ANR	1201923	ArgumentList	entry . tmp		1201547	1					
ANR	1201924	Argument	entry . tmp		1201547	0					
ANR	1201925	MemberAccess	entry . tmp		1201547	0					
ANR	1201926	Identifier	entry		1201547	0					
ANR	1201927	Identifier	tmp		1201547	1					
ANR	1201928	ExpressionStatement	efree ( entry . filename )	233:3:6668:6689	1201547	1	True				
ANR	1201929	CallExpression	efree ( entry . filename )		1201547	0					
ANR	1201930	Callee	efree		1201547	0					
ANR	1201931	Identifier	efree		1201547	0					
ANR	1201932	ArgumentList	entry . filename		1201547	1					
ANR	1201933	Argument	entry . filename		1201547	0					
ANR	1201934	MemberAccess	entry . filename		1201547	0					
ANR	1201935	Identifier	entry		1201547	0					
ANR	1201936	Identifier	filename		1201547	1					
ANR	1201937	ReturnStatement	return FAILURE ;	234:3:6694:6708	1201547	2	True				
ANR	1201938	Identifier	FAILURE		1201547	0					
ANR	1201939	ElseStatement	else		1201547	0					
ANR	1201940	CompoundStatement		66:8:1697:1697	1201547	0					
ANR	1201941	ExpressionStatement	entry . is_dir = 0	237:2:6726:6742	1201547	0	True				
ANR	1201942	AssignmentExpression	entry . is_dir = 0		1201547	0		=			
ANR	1201943	MemberAccess	entry . is_dir		1201547	0					
ANR	1201944	Identifier	entry		1201547	0					
ANR	1201945	Identifier	is_dir		1201547	1					
ANR	1201946	PrimaryExpression	0		1201547	1					
ANR	1201947	ExpressionStatement	entry . uncompressed_filesize = entry . compressed_filesize = ssb . sb . st_size	238:2:6746:6818	1201547	1	True				
ANR	1201948	AssignmentExpression	entry . uncompressed_filesize = entry . compressed_filesize = ssb . sb . st_size		1201547	0		=			
ANR	1201949	MemberAccess	entry . uncompressed_filesize		1201547	0					
ANR	1201950	Identifier	entry		1201547	0					
ANR	1201951	Identifier	uncompressed_filesize		1201547	1					
ANR	1201952	AssignmentExpression	entry . compressed_filesize = ssb . sb . st_size		1201547	1		=			
ANR	1201953	MemberAccess	entry . compressed_filesize		1201547	0					
ANR	1201954	Identifier	entry		1201547	0					
ANR	1201955	Identifier	compressed_filesize		1201547	1					
ANR	1201956	MemberAccess	ssb . sb . st_size		1201547	1					
ANR	1201957	MemberAccess	ssb . sb		1201547	0					
ANR	1201958	Identifier	ssb		1201547	0					
ANR	1201959	Identifier	sb		1201547	1					
ANR	1201960	Identifier	st_size		1201547	1					
ANR	1201961	ExpressionStatement	entry . flags = ssb . sb . st_mode	241:1:6825:6853	1201547	31	True				
ANR	1201962	AssignmentExpression	entry . flags = ssb . sb . st_mode		1201547	0		=			
ANR	1201963	MemberAccess	entry . flags		1201547	0					
ANR	1201964	Identifier	entry		1201547	0					
ANR	1201965	Identifier	flags		1201547	1					
ANR	1201966	MemberAccess	ssb . sb . st_mode		1201547	1					
ANR	1201967	MemberAccess	ssb . sb		1201547	0					
ANR	1201968	Identifier	ssb		1201547	0					
ANR	1201969	Identifier	sb		1201547	1					
ANR	1201970	Identifier	st_mode		1201547	1					
ANR	1201971	IfStatement	"if ( SUCCESS == zend_hash_add ( & phar -> manifest , entry . filename , path_len , ( void * ) & entry , sizeof ( phar_entry_info ) , NULL ) )"		1201547	32					
ANR	1201972	Condition	"SUCCESS == zend_hash_add ( & phar -> manifest , entry . filename , path_len , ( void * ) & entry , sizeof ( phar_entry_info ) , NULL )"	243:5:6861:6973	1201547	0	True				
ANR	1201973	EqualityExpression	"SUCCESS == zend_hash_add ( & phar -> manifest , entry . filename , path_len , ( void * ) & entry , sizeof ( phar_entry_info ) , NULL )"		1201547	0		==			
ANR	1201974	Identifier	SUCCESS		1201547	0					
ANR	1201975	CallExpression	"zend_hash_add ( & phar -> manifest , entry . filename , path_len , ( void * ) & entry , sizeof ( phar_entry_info ) , NULL )"		1201547	1					
ANR	1201976	Callee	zend_hash_add		1201547	0					
ANR	1201977	Identifier	zend_hash_add		1201547	0					
ANR	1201978	ArgumentList	& phar -> manifest		1201547	1					
ANR	1201979	Argument	& phar -> manifest		1201547	0					
ANR	1201980	UnaryOperationExpression	& phar -> manifest		1201547	0					
ANR	1201981	UnaryOperator	&		1201547	0					
ANR	1201982	PtrMemberAccess	phar -> manifest		1201547	1					
ANR	1201983	Identifier	phar		1201547	0					
ANR	1201984	Identifier	manifest		1201547	1					
ANR	1201985	Argument	entry . filename		1201547	1					
ANR	1201986	MemberAccess	entry . filename		1201547	0					
ANR	1201987	Identifier	entry		1201547	0					
ANR	1201988	Identifier	filename		1201547	1					
ANR	1201989	Argument	path_len		1201547	2					
ANR	1201990	Identifier	path_len		1201547	0					
ANR	1201991	Argument	( void * ) & entry		1201547	3					
ANR	1201992	CastExpression	( void * ) & entry		1201547	0					
ANR	1201993	CastTarget	void *		1201547	0					
ANR	1201994	UnaryOperationExpression	& entry		1201547	1					
ANR	1201995	UnaryOperator	&		1201547	0					
ANR	1201996	Identifier	entry		1201547	1					
ANR	1201997	Argument	sizeof ( phar_entry_info )		1201547	4					
ANR	1201998	SizeofExpression	sizeof ( phar_entry_info )		1201547	0					
ANR	1201999	Sizeof	sizeof		1201547	0					
ANR	1202000	SizeofOperand	phar_entry_info		1201547	1					
ANR	1202001	Argument	NULL		1201547	5					
ANR	1202002	Identifier	NULL		1201547	0					
ANR	1202003	CompoundStatement		73:120:1951:1951	1201547	1					
ANR	1202004	ReturnStatement	return SUCCESS ;	244:2:6980:6994	1201547	0	True				
ANR	1202005	Identifier	SUCCESS		1201547	0					
ANR	1202006	ExpressionStatement	efree ( entry . tmp )	247:1:7001:7017	1201547	33	True				
ANR	1202007	CallExpression	efree ( entry . tmp )		1201547	0					
ANR	1202008	Callee	efree		1201547	0					
ANR	1202009	Identifier	efree		1201547	0					
ANR	1202010	ArgumentList	entry . tmp		1201547	1					
ANR	1202011	Argument	entry . tmp		1201547	0					
ANR	1202012	MemberAccess	entry . tmp		1201547	0					
ANR	1202013	Identifier	entry		1201547	0					
ANR	1202014	Identifier	tmp		1201547	1					
ANR	1202015	ExpressionStatement	efree ( entry . filename )	248:1:7020:7041	1201547	34	True				
ANR	1202016	CallExpression	efree ( entry . filename )		1201547	0					
ANR	1202017	Callee	efree		1201547	0					
ANR	1202018	Identifier	efree		1201547	0					
ANR	1202019	ArgumentList	entry . filename		1201547	1					
ANR	1202020	Argument	entry . filename		1201547	0					
ANR	1202021	MemberAccess	entry . filename		1201547	0					
ANR	1202022	Identifier	entry		1201547	0					
ANR	1202023	Identifier	filename		1201547	1					
ANR	1202024	ReturnStatement	return FAILURE ;	249:1:7044:7058	1201547	35	True				
ANR	1202025	Identifier	FAILURE		1201547	0					
ANR	1202026	ReturnType	int		1201547	1					
ANR	1202027	Identifier	phar_mount_entry		1201547	2					
ANR	1202028	ParameterList	"phar_archive_data * phar , char * filename , int filename_len , char * path , int path_len TSRMLS_DC"		1201547	3					
ANR	1202029	Parameter	phar_archive_data * phar	170:21:4919:4941	1201547	0	True				
ANR	1202030	ParameterType	phar_archive_data *		1201547	0					
ANR	1202031	Identifier	phar		1201547	1					
ANR	1202032	Parameter	char * filename	170:46:4944:4957	1201547	1	True				
ANR	1202033	ParameterType	char *		1201547	0					
ANR	1202034	Identifier	filename		1201547	1					
ANR	1202035	Parameter	int filename_len	170:62:4960:4975	1201547	2	True				
ANR	1202036	ParameterType	int		1201547	0					
ANR	1202037	Identifier	filename_len		1201547	1					
ANR	1202038	Parameter	char * path	170:80:4978:4987	1201547	3	True				
ANR	1202039	ParameterType	char *		1201547	0					
ANR	1202040	Identifier	path		1201547	1					
ANR	1202041	Parameter	int path_len TSRMLS_DC	170:92:4990:5011	1201547	4	True				
ANR	1202042	ParameterType	int path_len		1201547	0					
ANR	1202043	Identifier	TSRMLS_DC		1201547	1					
ANR	1202044	CFGEntryNode	ENTRY		1201547		True				
ANR	1202045	CFGExitNode	EXIT		1201547		True				
ANR	1202046	Symbol	& phar -> mounted_dirs		1201547						
ANR	1202047	Symbol	ssb		1201547						
ANR	1202048	Symbol	entry . uncompressed_filesize		1201547						
ANR	1202049	Symbol	& phar -> manifest		1201547						
ANR	1202050	Symbol	is_phar		1201547						
ANR	1202051	Symbol	entry . flags		1201547						
ANR	1202052	Symbol	php_stream_stat_path		1201547						
ANR	1202053	Symbol	safe_mode		1201547						
ANR	1202054	Symbol	entry . filename		1201547						
ANR	1202055	Symbol	entry . is_dir		1201547						
ANR	1202056	Symbol	& err		1201547						
ANR	1202057	Symbol	TSRMLS_DC		1201547						
ANR	1202058	Symbol	entry . phar		1201547						
ANR	1202059	Symbol	entry . filename_len		1201547						
ANR	1202060	Symbol	& path		1201547						
ANR	1202061	Symbol	entry . is_mounted		1201547						
ANR	1202062	Symbol	path		1201547						
ANR	1202063	Symbol	estrndup		1201547						
ANR	1202064	Symbol	ssb . sb . st_mode		1201547						
ANR	1202065	Symbol	memcmp		1201547						
ANR	1202066	Symbol	pcr_is_ok		1201547						
ANR	1202067	Symbol	CHECKUID_CHECK_FILE_AND_DIR		1201547						
ANR	1202068	Symbol	filename_len		1201547						
ANR	1202069	Symbol	PHAR_TMP		1201547						
ANR	1202070	Symbol	entry . compressed_filesize		1201547						
ANR	1202071	Symbol	phar_path_check		1201547						
ANR	1202072	Symbol	phar		1201547						
ANR	1202073	Symbol	entry . tmp		1201547						
ANR	1202074	Symbol	path_len		1201547						
ANR	1202075	Symbol	NULL		1201547						
ANR	1202076	Symbol	SUCCESS		1201547						
ANR	1202077	Symbol	S_IFDIR		1201547						
ANR	1202078	Symbol	err		1201547						
ANR	1202079	Symbol	entry . is_crc_checked		1201547						
ANR	1202080	Symbol	php_checkuid		1201547						
ANR	1202081	Symbol	FAILURE		1201547						
ANR	1202082	Symbol	& ssb		1201547						
ANR	1202083	Symbol	& entry . filename		1201547						
ANR	1202084	Symbol	entry		1201547						
ANR	1202085	Symbol	& entry		1201547						
ANR	1202086	Symbol	filename		1201547						
ANR	1202087	Symbol	ssb . sb . st_size		1201547						
ANR	1202088	Symbol	entry . fp_type		1201547						
ANR	1202089	Symbol	zend_hash_add		1201547						
ANR	1202090	Symbol	PG		1201547						
ANR	1202091	Symbol	& path_len		1201547						
ANR	1202092	Symbol	ssb . sb		1201547						
ANR	1202093	DeclStmt									
ANR	1202094	Decl							char	char *	path
ANR	1202095	Decl							char	char *	fname
ANR	1202096	Decl							char	char *	arch
ANR	1202097	Decl							char	char *	entry
ANR	1202098	Decl							char	char *	ret
ANR	1202099	Decl							char	char *	test
ANR	1202100	DeclStmt									
ANR	1202101	Decl							int	int	arch_len
ANR	1202102	Decl							int	int	entry_len
ANR	1202103	Decl							int	int	fname_len
ANR	1202104	Decl							int	int	ret_len
ANR	1202105	DeclStmt									
ANR	1202106	Decl							phar_archive_data	phar_archive_data *	phar
ANR	1202107	DeclStmt									
ANR	1202108	Decl							int	int	try_len
ANR	1202109	Function	phar_get_entry_data	353:0:10037:14280							
ANR	1202110	FunctionDef	"phar_get_entry_data (phar_entry_data * * ret , char * fname , int fname_len , char * path , int path_len , const char * mode , char allow_dir , char * * error , int security TSRMLS_DC)"		1202109	0					
ANR	1202111	CompoundStatement		354:0:10220:14280	1202109	0					
ANR	1202112	IdentifierDeclStatement	phar_archive_data * phar ;	355:1:10223:10246	1202109	0	True				
ANR	1202113	IdentifierDecl	* phar		1202109	0					
ANR	1202114	IdentifierDeclType	phar_archive_data *		1202109	0					
ANR	1202115	Identifier	phar		1202109	1					
ANR	1202116	IdentifierDeclStatement	phar_entry_info * entry ;	356:1:10249:10271	1202109	1	True				
ANR	1202117	IdentifierDecl	* entry		1202109	0					
ANR	1202118	IdentifierDeclType	phar_entry_info *		1202109	0					
ANR	1202119	Identifier	entry		1202109	1					
ANR	1202120	IdentifierDeclStatement	int for_write = mode [ 0 ] != 'r' || mode [ 1 ] == '+' ;	357:1:10274:10323	1202109	2	True				
ANR	1202121	IdentifierDecl	for_write = mode [ 0 ] != 'r' || mode [ 1 ] == '+'		1202109	0					
ANR	1202122	IdentifierDeclType	int		1202109	0					
ANR	1202123	Identifier	for_write		1202109	1					
ANR	1202124	AssignmentExpression	for_write = mode [ 0 ] != 'r' || mode [ 1 ] == '+'		1202109	2		=			
ANR	1202125	Identifier	for_write		1202109	0					
ANR	1202126	OrExpression	mode [ 0 ] != 'r' || mode [ 1 ] == '+'		1202109	1		||			
ANR	1202127	EqualityExpression	mode [ 0 ] != 'r'		1202109	0		!=			
ANR	1202128	ArrayIndexing	mode [ 0 ]		1202109	0					
ANR	1202129	Identifier	mode		1202109	0					
ANR	1202130	PrimaryExpression	0		1202109	1					
ANR	1202131	PrimaryExpression	'r'		1202109	1					
ANR	1202132	EqualityExpression	mode [ 1 ] == '+'		1202109	1		==			
ANR	1202133	ArrayIndexing	mode [ 1 ]		1202109	0					
ANR	1202134	Identifier	mode		1202109	0					
ANR	1202135	PrimaryExpression	1		1202109	1					
ANR	1202136	PrimaryExpression	'+'		1202109	1					
ANR	1202137	IdentifierDeclStatement	int for_append = mode [ 0 ] == 'a' ;	358:1:10326:10357	1202109	3	True				
ANR	1202138	IdentifierDecl	for_append = mode [ 0 ] == 'a'		1202109	0					
ANR	1202139	IdentifierDeclType	int		1202109	0					
ANR	1202140	Identifier	for_append		1202109	1					
ANR	1202141	AssignmentExpression	for_append = mode [ 0 ] == 'a'		1202109	2		=			
ANR	1202142	Identifier	for_append		1202109	0					
ANR	1202143	EqualityExpression	mode [ 0 ] == 'a'		1202109	1		==			
ANR	1202144	ArrayIndexing	mode [ 0 ]		1202109	0					
ANR	1202145	Identifier	mode		1202109	0					
ANR	1202146	PrimaryExpression	0		1202109	1					
ANR	1202147	PrimaryExpression	'a'		1202109	1					
ANR	1202148	IdentifierDeclStatement	int for_create = mode [ 0 ] != 'r' ;	359:1:10360:10391	1202109	4	True				
ANR	1202149	IdentifierDecl	for_create = mode [ 0 ] != 'r'		1202109	0					
ANR	1202150	IdentifierDeclType	int		1202109	0					
ANR	1202151	Identifier	for_create		1202109	1					
ANR	1202152	AssignmentExpression	for_create = mode [ 0 ] != 'r'		1202109	2		=			
ANR	1202153	Identifier	for_create		1202109	0					
ANR	1202154	EqualityExpression	mode [ 0 ] != 'r'		1202109	1		!=			
ANR	1202155	ArrayIndexing	mode [ 0 ]		1202109	0					
ANR	1202156	Identifier	mode		1202109	0					
ANR	1202157	PrimaryExpression	0		1202109	1					
ANR	1202158	PrimaryExpression	'r'		1202109	1					
ANR	1202159	IdentifierDeclStatement	int for_trunc = mode [ 0 ] == 'w' ;	360:1:10394:10425	1202109	5	True				
ANR	1202160	IdentifierDecl	for_trunc = mode [ 0 ] == 'w'		1202109	0					
ANR	1202161	IdentifierDeclType	int		1202109	0					
ANR	1202162	Identifier	for_trunc		1202109	1					
ANR	1202163	AssignmentExpression	for_trunc = mode [ 0 ] == 'w'		1202109	2		=			
ANR	1202164	Identifier	for_trunc		1202109	0					
ANR	1202165	EqualityExpression	mode [ 0 ] == 'w'		1202109	1		==			
ANR	1202166	ArrayIndexing	mode [ 0 ]		1202109	0					
ANR	1202167	Identifier	mode		1202109	0					
ANR	1202168	PrimaryExpression	0		1202109	1					
ANR	1202169	PrimaryExpression	'w'		1202109	1					
ANR	1202170	IfStatement	if ( ! ret )		1202109	6					
ANR	1202171	Condition	! ret	362:5:10433:10436	1202109	0	True				
ANR	1202172	UnaryOperationExpression	! ret		1202109	0					
ANR	1202173	UnaryOperator	!		1202109	0					
ANR	1202174	Identifier	ret		1202109	1					
ANR	1202175	CompoundStatement		9:11:218:218	1202109	1					
ANR	1202176	ReturnStatement	return FAILURE ;	363:2:10443:10457	1202109	0	True				
ANR	1202177	Identifier	FAILURE		1202109	0					
ANR	1202178	ExpressionStatement	* ret = NULL	366:1:10464:10475	1202109	7	True				
ANR	1202179	AssignmentExpression	* ret = NULL		1202109	0		=			
ANR	1202180	UnaryOperationExpression	* ret		1202109	0					
ANR	1202181	UnaryOperator	*		1202109	0					
ANR	1202182	Identifier	ret		1202109	1					
ANR	1202183	Identifier	NULL		1202109	1					
ANR	1202184	IfStatement	if ( error )		1202109	8					
ANR	1202185	Condition	error	368:5:10483:10487	1202109	0	True				
ANR	1202186	Identifier	error		1202109	0					
ANR	1202187	CompoundStatement		15:12:269:269	1202109	1					
ANR	1202188	ExpressionStatement	* error = NULL	369:2:10494:10507	1202109	0	True				
ANR	1202189	AssignmentExpression	* error = NULL		1202109	0		=			
ANR	1202190	UnaryOperationExpression	* error		1202109	0					
ANR	1202191	UnaryOperator	*		1202109	0					
ANR	1202192	Identifier	error		1202109	1					
ANR	1202193	Identifier	NULL		1202109	1					
ANR	1202194	Statement	if	372:1:10514:10515	1202109	9	True				
ANR	1202195	Statement	(	372:4:10517:10517	1202109	10	True				
ANR	1202196	Statement	FAILURE	372:5:10518:10524	1202109	11	True				
ANR	1202197	Statement	==	372:13:10526:10527	1202109	12	True				
ANR	1202198	Statement	phar_get_archive	372:16:10529:10544	1202109	13	True				
ANR	1202199	Statement	(	372:32:10545:10545	1202109	14	True				
ANR	1202200	Statement	&	372:33:10546:10546	1202109	15	True				
ANR	1202201	Statement	phar	372:34:10547:10550	1202109	16	True				
ANR	1202202	Statement	","	372:38:10551:10551	1202109	17	True				
ANR	1202203	Statement	fname	372:40:10553:10557	1202109	18	True				
ANR	1202204	Statement	","	372:45:10558:10558	1202109	19	True				
ANR	1202205	Statement	fname_len	372:47:10560:10568	1202109	20	True				
ANR	1202206	Statement	","	372:56:10569:10569	1202109	21	True				
ANR	1202207	Statement	NULL	372:58:10571:10574	1202109	22	True				
ANR	1202208	Statement	","	372:62:10575:10575	1202109	23	True				
ANR	1202209	Statement	0	372:64:10577:10577	1202109	24	True				
ANR	1202210	Statement	","	372:65:10578:10578	1202109	25	True				
ANR	1202211	Statement	error	372:67:10580:10584	1202109	26	True				
ANR	1202212	Statement	TSRMLS_CC	372:73:10586:10594	1202109	27	True				
ANR	1202213	Statement	)	372:82:10595:10595	1202109	28	True				
ANR	1202214	Statement	)	372:83:10596:10596	1202109	29	True				
ANR	1202215	CompoundStatement		19:85:377:377	1202109	30					
ANR	1202216	ReturnStatement	return FAILURE ;	373:2:10602:10616	1202109	0	True				
ANR	1202217	Identifier	FAILURE		1202109	0					
ANR	1202218	IfStatement	if ( for_write && PHAR_G ( readonly ) && ! phar -> is_data )		1202109	31					
ANR	1202219	Condition	for_write && PHAR_G ( readonly ) && ! phar -> is_data	376:5:10627:10673	1202109	0	True				
ANR	1202220	AndExpression	for_write && PHAR_G ( readonly ) && ! phar -> is_data		1202109	0		&&			
ANR	1202221	Identifier	for_write		1202109	0					
ANR	1202222	AndExpression	PHAR_G ( readonly ) && ! phar -> is_data		1202109	1		&&			
ANR	1202223	CallExpression	PHAR_G ( readonly )		1202109	0					
ANR	1202224	Callee	PHAR_G		1202109	0					
ANR	1202225	Identifier	PHAR_G		1202109	0					
ANR	1202226	ArgumentList	readonly		1202109	1					
ANR	1202227	Argument	readonly		1202109	0					
ANR	1202228	Identifier	readonly		1202109	0					
ANR	1202229	UnaryOperationExpression	! phar -> is_data		1202109	1					
ANR	1202230	UnaryOperator	!		1202109	0					
ANR	1202231	PtrMemberAccess	phar -> is_data		1202109	1					
ANR	1202232	Identifier	phar		1202109	0					
ANR	1202233	Identifier	is_data		1202109	1					
ANR	1202234	CompoundStatement		23:54:455:455	1202109	1					
ANR	1202235	IfStatement	if ( error )		1202109	0					
ANR	1202236	Condition	error	377:6:10684:10688	1202109	0	True				
ANR	1202237	Identifier	error		1202109	0					
ANR	1202238	CompoundStatement		24:13:470:470	1202109	1					
ANR	1202239	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, disabled by ini setting"" , path , fname )"	378:3:10696:10826	1202109	0	True				
ANR	1202240	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, disabled by ini setting"" , path , fname )"		1202109	0					
ANR	1202241	Callee	spprintf		1202109	0					
ANR	1202242	Identifier	spprintf		1202109	0					
ANR	1202243	ArgumentList	error		1202109	1					
ANR	1202244	Argument	error		1202109	0					
ANR	1202245	Identifier	error		1202109	0					
ANR	1202246	Argument	4096		1202109	1					
ANR	1202247	PrimaryExpression	4096		1202109	0					
ANR	1202248	Argument	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, disabled by ini setting"""		1202109	2					
ANR	1202249	PrimaryExpression	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, disabled by ini setting"""		1202109	0					
ANR	1202250	Argument	path		1202109	3					
ANR	1202251	Identifier	path		1202109	0					
ANR	1202252	Argument	fname		1202109	4					
ANR	1202253	Identifier	fname		1202109	0					
ANR	1202254	ReturnStatement	return FAILURE ;	380:2:10834:10848	1202109	1	True				
ANR	1202255	Identifier	FAILURE		1202109	0					
ANR	1202256	IfStatement	if ( ! path_len )		1202109	32					
ANR	1202257	Condition	! path_len	383:5:10859:10867	1202109	0	True				
ANR	1202258	UnaryOperationExpression	! path_len		1202109	0					
ANR	1202259	UnaryOperator	!		1202109	0					
ANR	1202260	Identifier	path_len		1202109	1					
ANR	1202261	CompoundStatement		30:16:649:649	1202109	1					
ANR	1202262	IfStatement	if ( error )		1202109	0					
ANR	1202263	Condition	error	384:6:10878:10882	1202109	0	True				
ANR	1202264	Identifier	error		1202109	0					
ANR	1202265	CompoundStatement		31:13:664:664	1202109	1					
ANR	1202266	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""\\"" in phar \\""%s\\"" cannot be empty"" , fname )"	385:3:10890:10974	1202109	0	True				
ANR	1202267	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""\\"" in phar \\""%s\\"" cannot be empty"" , fname )"		1202109	0					
ANR	1202268	Callee	spprintf		1202109	0					
ANR	1202269	Identifier	spprintf		1202109	0					
ANR	1202270	ArgumentList	error		1202109	1					
ANR	1202271	Argument	error		1202109	0					
ANR	1202272	Identifier	error		1202109	0					
ANR	1202273	Argument	4096		1202109	1					
ANR	1202274	PrimaryExpression	4096		1202109	0					
ANR	1202275	Argument	"""phar error: file \\""\\"" in phar \\""%s\\"" cannot be empty"""		1202109	2					
ANR	1202276	PrimaryExpression	"""phar error: file \\""\\"" in phar \\""%s\\"" cannot be empty"""		1202109	0					
ANR	1202277	Argument	fname		1202109	3					
ANR	1202278	Identifier	fname		1202109	0					
ANR	1202279	ReturnStatement	return FAILURE ;	387:2:10982:10996	1202109	1	True				
ANR	1202280	Identifier	FAILURE		1202109	0					
ANR	1202281	Label	really_get_entry :	389:0:11001:11017	1202109	33	True				
ANR	1202282	Identifier	really_get_entry		1202109	0					
ANR	1202283	IfStatement	if ( allow_dir )		1202109	34					
ANR	1202284	Condition	allow_dir	390:5:11024:11032	1202109	0	True				
ANR	1202285	Identifier	allow_dir		1202109	0					
ANR	1202286	CompoundStatement		37:16:814:814	1202109	1					
ANR	1202287	Statement	if	391:2:11039:11040	1202109	0	True				
ANR	1202288	Statement	(	391:5:11042:11042	1202109	1	True				
ANR	1202289	Statement	(	391:6:11043:11043	1202109	2	True				
ANR	1202290	Statement	entry	391:7:11044:11048	1202109	3	True				
ANR	1202291	Statement	=	391:13:11050:11050	1202109	4	True				
ANR	1202292	Statement	phar_get_entry_info_dir	391:15:11052:11074	1202109	5	True				
ANR	1202293	Statement	(	391:38:11075:11075	1202109	6	True				
ANR	1202294	Statement	phar	391:39:11076:11079	1202109	7	True				
ANR	1202295	Statement	","	391:43:11080:11080	1202109	8	True				
ANR	1202296	Statement	path	391:45:11082:11085	1202109	9	True				
ANR	1202297	Statement	","	391:49:11086:11086	1202109	10	True				
ANR	1202298	Statement	path_len	391:51:11088:11095	1202109	11	True				
ANR	1202299	Statement	","	391:59:11096:11096	1202109	12	True				
ANR	1202300	Statement	allow_dir	391:61:11098:11106	1202109	13	True				
ANR	1202301	Statement	","	391:70:11107:11107	1202109	14	True				
ANR	1202302	Statement	for_create	391:72:11109:11118	1202109	15	True				
ANR	1202303	Statement	&&	391:83:11120:11121	1202109	16	True				
ANR	1202304	Statement	!	391:86:11123:11123	1202109	17	True				
ANR	1202305	Statement	PHAR_G	391:87:11124:11129	1202109	18	True				
ANR	1202306	Statement	(	391:93:11130:11130	1202109	19	True				
ANR	1202307	Statement	readonly	391:94:11131:11138	1202109	20	True				
ANR	1202308	Statement	)	391:102:11139:11139	1202109	21	True				
ANR	1202309	Statement	&&	391:104:11141:11142	1202109	22	True				
ANR	1202310	Statement	!	391:107:11144:11144	1202109	23	True				
ANR	1202311	Statement	phar	391:108:11145:11148	1202109	24	True				
ANR	1202312	Statement	->	391:112:11149:11150	1202109	25	True				
ANR	1202313	Statement	is_data	391:114:11151:11157	1202109	26	True				
ANR	1202314	Statement	?	391:122:11159:11159	1202109	27	True				
ANR	1202315	Label	NULL :	391:124:11161:11166	1202109	28	True				
ANR	1202316	Identifier	NULL		1202109	0					
ANR	1202317	Statement	error	391:131:11168:11172	1202109	29	True				
ANR	1202318	Statement	","	391:136:11173:11173	1202109	30	True				
ANR	1202319	Statement	security	391:138:11175:11182	1202109	31	True				
ANR	1202320	Statement	TSRMLS_CC	391:147:11184:11192	1202109	32	True				
ANR	1202321	Statement	)	391:156:11193:11193	1202109	33	True				
ANR	1202322	Statement	)	391:157:11194:11194	1202109	34	True				
ANR	1202323	Statement	==	391:159:11196:11197	1202109	35	True				
ANR	1202324	Statement	NULL	391:162:11199:11202	1202109	36	True				
ANR	1202325	Statement	)	391:166:11203:11203	1202109	37	True				
ANR	1202326	CompoundStatement		38:168:984:984	1202109	38					
ANR	1202327	IfStatement	if ( for_create && ( ! PHAR_G ( readonly ) || phar -> is_data ) )		1202109	0					
ANR	1202328	Condition	for_create && ( ! PHAR_G ( readonly ) || phar -> is_data )	392:7:11214:11263	1202109	0	True				
ANR	1202329	AndExpression	for_create && ( ! PHAR_G ( readonly ) || phar -> is_data )		1202109	0		&&			
ANR	1202330	Identifier	for_create		1202109	0					
ANR	1202331	OrExpression	! PHAR_G ( readonly ) || phar -> is_data		1202109	1		||			
ANR	1202332	UnaryOperationExpression	! PHAR_G ( readonly )		1202109	0					
ANR	1202333	UnaryOperator	!		1202109	0					
ANR	1202334	CallExpression	PHAR_G ( readonly )		1202109	1					
ANR	1202335	Callee	PHAR_G		1202109	0					
ANR	1202336	Identifier	PHAR_G		1202109	0					
ANR	1202337	ArgumentList	readonly		1202109	1					
ANR	1202338	Argument	readonly		1202109	0					
ANR	1202339	Identifier	readonly		1202109	0					
ANR	1202340	PtrMemberAccess	phar -> is_data		1202109	1					
ANR	1202341	Identifier	phar		1202109	0					
ANR	1202342	Identifier	is_data		1202109	1					
ANR	1202343	CompoundStatement		39:59:1045:1045	1202109	1					
ANR	1202344	ReturnStatement	return SUCCESS ;	393:4:11272:11286	1202109	0	True				
ANR	1202345	Identifier	SUCCESS		1202109	0					
ANR	1202346	ReturnStatement	return FAILURE ;	395:3:11296:11310	1202109	1	True				
ANR	1202347	Identifier	FAILURE		1202109	0					
ANR	1202348	ElseStatement	else		1202109	0					
ANR	1202349	CompoundStatement		44:8:1103:1103	1202109	0					
ANR	1202350	Statement	if	398:2:11328:11329	1202109	0	True				
ANR	1202351	Statement	(	398:5:11331:11331	1202109	1	True				
ANR	1202352	Statement	(	398:6:11332:11332	1202109	2	True				
ANR	1202353	Statement	entry	398:7:11333:11337	1202109	3	True				
ANR	1202354	Statement	=	398:13:11339:11339	1202109	4	True				
ANR	1202355	Statement	phar_get_entry_info	398:15:11341:11359	1202109	5	True				
ANR	1202356	Statement	(	398:34:11360:11360	1202109	6	True				
ANR	1202357	Statement	phar	398:35:11361:11364	1202109	7	True				
ANR	1202358	Statement	","	398:39:11365:11365	1202109	8	True				
ANR	1202359	Statement	path	398:41:11367:11370	1202109	9	True				
ANR	1202360	Statement	","	398:45:11371:11371	1202109	10	True				
ANR	1202361	Statement	path_len	398:47:11373:11380	1202109	11	True				
ANR	1202362	Statement	","	398:55:11381:11381	1202109	12	True				
ANR	1202363	Statement	for_create	398:57:11383:11392	1202109	13	True				
ANR	1202364	Statement	&&	398:68:11394:11395	1202109	14	True				
ANR	1202365	Statement	!	398:71:11397:11397	1202109	15	True				
ANR	1202366	Statement	PHAR_G	398:72:11398:11403	1202109	16	True				
ANR	1202367	Statement	(	398:78:11404:11404	1202109	17	True				
ANR	1202368	Statement	readonly	398:79:11405:11412	1202109	18	True				
ANR	1202369	Statement	)	398:87:11413:11413	1202109	19	True				
ANR	1202370	Statement	&&	398:89:11415:11416	1202109	20	True				
ANR	1202371	Statement	!	398:92:11418:11418	1202109	21	True				
ANR	1202372	Statement	phar	398:93:11419:11422	1202109	22	True				
ANR	1202373	Statement	->	398:97:11423:11424	1202109	23	True				
ANR	1202374	Statement	is_data	398:99:11425:11431	1202109	24	True				
ANR	1202375	Statement	?	398:107:11433:11433	1202109	25	True				
ANR	1202376	Label	NULL :	398:109:11435:11440	1202109	26	True				
ANR	1202377	Identifier	NULL		1202109	0					
ANR	1202378	Statement	error	398:116:11442:11446	1202109	27	True				
ANR	1202379	Statement	","	398:121:11447:11447	1202109	28	True				
ANR	1202380	Statement	security	398:123:11449:11456	1202109	29	True				
ANR	1202381	Statement	TSRMLS_CC	398:132:11458:11466	1202109	30	True				
ANR	1202382	Statement	)	398:141:11467:11467	1202109	31	True				
ANR	1202383	Statement	)	398:142:11468:11468	1202109	32	True				
ANR	1202384	Statement	==	398:144:11470:11471	1202109	33	True				
ANR	1202385	Statement	NULL	398:147:11473:11476	1202109	34	True				
ANR	1202386	Statement	)	398:151:11477:11477	1202109	35	True				
ANR	1202387	CompoundStatement		45:153:1258:1258	1202109	36					
ANR	1202388	IfStatement	if ( for_create && ( ! PHAR_G ( readonly ) || phar -> is_data ) )		1202109	0					
ANR	1202389	Condition	for_create && ( ! PHAR_G ( readonly ) || phar -> is_data )	399:7:11488:11537	1202109	0	True				
ANR	1202390	AndExpression	for_create && ( ! PHAR_G ( readonly ) || phar -> is_data )		1202109	0		&&			
ANR	1202391	Identifier	for_create		1202109	0					
ANR	1202392	OrExpression	! PHAR_G ( readonly ) || phar -> is_data		1202109	1		||			
ANR	1202393	UnaryOperationExpression	! PHAR_G ( readonly )		1202109	0					
ANR	1202394	UnaryOperator	!		1202109	0					
ANR	1202395	CallExpression	PHAR_G ( readonly )		1202109	1					
ANR	1202396	Callee	PHAR_G		1202109	0					
ANR	1202397	Identifier	PHAR_G		1202109	0					
ANR	1202398	ArgumentList	readonly		1202109	1					
ANR	1202399	Argument	readonly		1202109	0					
ANR	1202400	Identifier	readonly		1202109	0					
ANR	1202401	PtrMemberAccess	phar -> is_data		1202109	1					
ANR	1202402	Identifier	phar		1202109	0					
ANR	1202403	Identifier	is_data		1202109	1					
ANR	1202404	CompoundStatement		46:59:1319:1319	1202109	1					
ANR	1202405	ReturnStatement	return SUCCESS ;	400:4:11546:11560	1202109	0	True				
ANR	1202406	Identifier	SUCCESS		1202109	0					
ANR	1202407	ReturnStatement	return FAILURE ;	402:3:11570:11584	1202109	1	True				
ANR	1202408	Identifier	FAILURE		1202109	0					
ANR	1202409	IfStatement	if ( for_write && phar -> is_persistent )		1202109	35					
ANR	1202410	Condition	for_write && phar -> is_persistent	406:5:11599:11630	1202109	0	True				
ANR	1202411	AndExpression	for_write && phar -> is_persistent		1202109	0		&&			
ANR	1202412	Identifier	for_write		1202109	0					
ANR	1202413	PtrMemberAccess	phar -> is_persistent		1202109	1					
ANR	1202414	Identifier	phar		1202109	0					
ANR	1202415	Identifier	is_persistent		1202109	1					
ANR	1202416	CompoundStatement		53:39:1412:1412	1202109	1					
ANR	1202417	Statement	if	407:2:11637:11638	1202109	0	True				
ANR	1202418	Statement	(	407:5:11640:11640	1202109	1	True				
ANR	1202419	Statement	FAILURE	407:6:11641:11647	1202109	2	True				
ANR	1202420	Statement	==	407:14:11649:11650	1202109	3	True				
ANR	1202421	Statement	phar_copy_on_write	407:17:11652:11669	1202109	4	True				
ANR	1202422	Statement	(	407:35:11670:11670	1202109	5	True				
ANR	1202423	Statement	&	407:36:11671:11671	1202109	6	True				
ANR	1202424	Statement	phar	407:37:11672:11675	1202109	7	True				
ANR	1202425	Statement	TSRMLS_CC	407:42:11677:11685	1202109	8	True				
ANR	1202426	Statement	)	407:51:11686:11686	1202109	9	True				
ANR	1202427	Statement	)	407:52:11687:11687	1202109	10	True				
ANR	1202428	CompoundStatement		54:54:1468:1468	1202109	11					
ANR	1202429	IfStatement	if ( error )		1202109	0					
ANR	1202430	Condition	error	408:7:11698:11702	1202109	0	True				
ANR	1202431	Identifier	error		1202109	0					
ANR	1202432	CompoundStatement		55:14:1484:1484	1202109	1					
ANR	1202433	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, could not make cached phar writeable"" , path , fname )"	409:4:11711:11854	1202109	0	True				
ANR	1202434	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, could not make cached phar writeable"" , path , fname )"		1202109	0					
ANR	1202435	Callee	spprintf		1202109	0					
ANR	1202436	Identifier	spprintf		1202109	0					
ANR	1202437	ArgumentList	error		1202109	1					
ANR	1202438	Argument	error		1202109	0					
ANR	1202439	Identifier	error		1202109	0					
ANR	1202440	Argument	4096		1202109	1					
ANR	1202441	PrimaryExpression	4096		1202109	0					
ANR	1202442	Argument	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, could not make cached phar writeable"""		1202109	2					
ANR	1202443	PrimaryExpression	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, could not make cached phar writeable"""		1202109	0					
ANR	1202444	Argument	path		1202109	3					
ANR	1202445	Identifier	path		1202109	0					
ANR	1202446	Argument	fname		1202109	4					
ANR	1202447	Identifier	fname		1202109	0					
ANR	1202448	ReturnStatement	return FAILURE ;	411:3:11864:11878	1202109	1	True				
ANR	1202449	Identifier	FAILURE		1202109	0					
ANR	1202450	ElseStatement	else		1202109	0					
ANR	1202451	CompoundStatement		59:9:1668:1668	1202109	0					
ANR	1202452	GotoStatement	goto really_get_entry ;	413:3:11894:11915	1202109	0	True				
ANR	1202453	Identifier	really_get_entry		1202109	0					
ANR	1202454	IfStatement	if ( entry -> is_modified && ! for_write )		1202109	36					
ANR	1202455	Condition	entry -> is_modified && ! for_write	417:5:11930:11961	1202109	0	True				
ANR	1202456	AndExpression	entry -> is_modified && ! for_write		1202109	0		&&			
ANR	1202457	PtrMemberAccess	entry -> is_modified		1202109	0					
ANR	1202458	Identifier	entry		1202109	0					
ANR	1202459	Identifier	is_modified		1202109	1					
ANR	1202460	UnaryOperationExpression	! for_write		1202109	1					
ANR	1202461	UnaryOperator	!		1202109	0					
ANR	1202462	Identifier	for_write		1202109	1					
ANR	1202463	CompoundStatement		64:39:1743:1743	1202109	1					
ANR	1202464	IfStatement	if ( error )		1202109	0					
ANR	1202465	Condition	error	418:6:11972:11976	1202109	0	True				
ANR	1202466	Identifier	error		1202109	0					
ANR	1202467	CompoundStatement		65:13:1758:1758	1202109	1					
ANR	1202468	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for reading, writable file pointers are open"" , path , fname )"	419:3:11984:12122	1202109	0	True				
ANR	1202469	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for reading, writable file pointers are open"" , path , fname )"		1202109	0					
ANR	1202470	Callee	spprintf		1202109	0					
ANR	1202471	Identifier	spprintf		1202109	0					
ANR	1202472	ArgumentList	error		1202109	1					
ANR	1202473	Argument	error		1202109	0					
ANR	1202474	Identifier	error		1202109	0					
ANR	1202475	Argument	4096		1202109	1					
ANR	1202476	PrimaryExpression	4096		1202109	0					
ANR	1202477	Argument	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for reading, writable file pointers are open"""		1202109	2					
ANR	1202478	PrimaryExpression	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for reading, writable file pointers are open"""		1202109	0					
ANR	1202479	Argument	path		1202109	3					
ANR	1202480	Identifier	path		1202109	0					
ANR	1202481	Argument	fname		1202109	4					
ANR	1202482	Identifier	fname		1202109	0					
ANR	1202483	ReturnStatement	return FAILURE ;	421:2:12130:12144	1202109	1	True				
ANR	1202484	Identifier	FAILURE		1202109	0					
ANR	1202485	IfStatement	if ( entry -> fp_refcount && for_write )		1202109	37					
ANR	1202486	Condition	entry -> fp_refcount && for_write	424:5:12155:12185	1202109	0	True				
ANR	1202487	AndExpression	entry -> fp_refcount && for_write		1202109	0		&&			
ANR	1202488	PtrMemberAccess	entry -> fp_refcount		1202109	0					
ANR	1202489	Identifier	entry		1202109	0					
ANR	1202490	Identifier	fp_refcount		1202109	1					
ANR	1202491	Identifier	for_write		1202109	1					
ANR	1202492	CompoundStatement		71:38:1967:1967	1202109	1					
ANR	1202493	IfStatement	if ( error )		1202109	0					
ANR	1202494	Condition	error	425:6:12196:12200	1202109	0	True				
ANR	1202495	Identifier	error		1202109	0					
ANR	1202496	CompoundStatement		72:13:1982:1982	1202109	1					
ANR	1202497	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, readable file pointers are open"" , path , fname )"	426:3:12208:12346	1202109	0	True				
ANR	1202498	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, readable file pointers are open"" , path , fname )"		1202109	0					
ANR	1202499	Callee	spprintf		1202109	0					
ANR	1202500	Identifier	spprintf		1202109	0					
ANR	1202501	ArgumentList	error		1202109	1					
ANR	1202502	Argument	error		1202109	0					
ANR	1202503	Identifier	error		1202109	0					
ANR	1202504	Argument	4096		1202109	1					
ANR	1202505	PrimaryExpression	4096		1202109	0					
ANR	1202506	Argument	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, readable file pointers are open"""		1202109	2					
ANR	1202507	PrimaryExpression	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be opened for writing, readable file pointers are open"""		1202109	0					
ANR	1202508	Argument	path		1202109	3					
ANR	1202509	Identifier	path		1202109	0					
ANR	1202510	Argument	fname		1202109	4					
ANR	1202511	Identifier	fname		1202109	0					
ANR	1202512	ReturnStatement	return FAILURE ;	428:2:12354:12368	1202109	1	True				
ANR	1202513	Identifier	FAILURE		1202109	0					
ANR	1202514	IfStatement	if ( entry -> is_deleted )		1202109	38					
ANR	1202515	Condition	entry -> is_deleted	431:5:12379:12395	1202109	0	True				
ANR	1202516	PtrMemberAccess	entry -> is_deleted		1202109	0					
ANR	1202517	Identifier	entry		1202109	0					
ANR	1202518	Identifier	is_deleted		1202109	1					
ANR	1202519	CompoundStatement		78:24:2177:2177	1202109	1					
ANR	1202520	IfStatement	if ( ! for_create )		1202109	0					
ANR	1202521	Condition	! for_create	432:6:12406:12416	1202109	0	True				
ANR	1202522	UnaryOperationExpression	! for_create		1202109	0					
ANR	1202523	UnaryOperator	!		1202109	0					
ANR	1202524	Identifier	for_create		1202109	1					
ANR	1202525	CompoundStatement		79:19:2198:2198	1202109	1					
ANR	1202526	ReturnStatement	return FAILURE ;	433:3:12424:12438	1202109	0	True				
ANR	1202527	Identifier	FAILURE		1202109	0					
ANR	1202528	ExpressionStatement	entry -> is_deleted = 0	435:2:12446:12467	1202109	1	True				
ANR	1202529	AssignmentExpression	entry -> is_deleted = 0		1202109	0		=			
ANR	1202530	PtrMemberAccess	entry -> is_deleted		1202109	0					
ANR	1202531	Identifier	entry		1202109	0					
ANR	1202532	Identifier	is_deleted		1202109	1					
ANR	1202533	PrimaryExpression	0		1202109	1					
ANR	1202534	IfStatement	if ( entry -> is_dir )		1202109	39					
ANR	1202535	Condition	entry -> is_dir	438:5:12478:12490	1202109	0	True				
ANR	1202536	PtrMemberAccess	entry -> is_dir		1202109	0					
ANR	1202537	Identifier	entry		1202109	0					
ANR	1202538	Identifier	is_dir		1202109	1					
ANR	1202539	CompoundStatement		85:20:2272:2272	1202109	1					
ANR	1202540	ExpressionStatement	* ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )	439:2:12497:12556	1202109	0	True				
ANR	1202541	AssignmentExpression	* ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1202109	0		=			
ANR	1202542	UnaryOperationExpression	* ret		1202109	0					
ANR	1202543	UnaryOperator	*		1202109	0					
ANR	1202544	Identifier	ret		1202109	1					
ANR	1202545	CastExpression	( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1202109	1					
ANR	1202546	CastTarget	phar_entry_data *		1202109	0					
ANR	1202547	CallExpression	emalloc ( sizeof ( phar_entry_data ) )		1202109	1					
ANR	1202548	Callee	emalloc		1202109	0					
ANR	1202549	Identifier	emalloc		1202109	0					
ANR	1202550	ArgumentList	sizeof ( phar_entry_data )		1202109	1					
ANR	1202551	Argument	sizeof ( phar_entry_data )		1202109	0					
ANR	1202552	SizeofExpression	sizeof ( phar_entry_data )		1202109	0					
ANR	1202553	Sizeof	sizeof		1202109	0					
ANR	1202554	SizeofOperand	phar_entry_data		1202109	1					
ANR	1202555	ExpressionStatement	( * ret ) -> position = 0	440:2:12560:12580	1202109	1	True				
ANR	1202556	AssignmentExpression	( * ret ) -> position = 0		1202109	0		=			
ANR	1202557	PtrMemberAccess	( * ret ) -> position		1202109	0					
ANR	1202558	UnaryOperationExpression	* ret		1202109	0					
ANR	1202559	UnaryOperator	*		1202109	0					
ANR	1202560	Identifier	ret		1202109	1					
ANR	1202561	Identifier	position		1202109	1					
ANR	1202562	PrimaryExpression	0		1202109	1					
ANR	1202563	ExpressionStatement	( * ret ) -> fp = NULL	441:2:12584:12601	1202109	2	True				
ANR	1202564	AssignmentExpression	( * ret ) -> fp = NULL		1202109	0		=			
ANR	1202565	PtrMemberAccess	( * ret ) -> fp		1202109	0					
ANR	1202566	UnaryOperationExpression	* ret		1202109	0					
ANR	1202567	UnaryOperator	*		1202109	0					
ANR	1202568	Identifier	ret		1202109	1					
ANR	1202569	Identifier	fp		1202109	1					
ANR	1202570	Identifier	NULL		1202109	1					
ANR	1202571	ExpressionStatement	( * ret ) -> phar = phar	442:2:12605:12624	1202109	3	True				
ANR	1202572	AssignmentExpression	( * ret ) -> phar = phar		1202109	0		=			
ANR	1202573	PtrMemberAccess	( * ret ) -> phar		1202109	0					
ANR	1202574	UnaryOperationExpression	* ret		1202109	0					
ANR	1202575	UnaryOperator	*		1202109	0					
ANR	1202576	Identifier	ret		1202109	1					
ANR	1202577	Identifier	phar		1202109	1					
ANR	1202578	Identifier	phar		1202109	1					
ANR	1202579	ExpressionStatement	( * ret ) -> for_write = for_write	443:2:12628:12657	1202109	4	True				
ANR	1202580	AssignmentExpression	( * ret ) -> for_write = for_write		1202109	0		=			
ANR	1202581	PtrMemberAccess	( * ret ) -> for_write		1202109	0					
ANR	1202582	UnaryOperationExpression	* ret		1202109	0					
ANR	1202583	UnaryOperator	*		1202109	0					
ANR	1202584	Identifier	ret		1202109	1					
ANR	1202585	Identifier	for_write		1202109	1					
ANR	1202586	Identifier	for_write		1202109	1					
ANR	1202587	ExpressionStatement	( * ret ) -> internal_file = entry	444:2:12661:12690	1202109	5	True				
ANR	1202588	AssignmentExpression	( * ret ) -> internal_file = entry		1202109	0		=			
ANR	1202589	PtrMemberAccess	( * ret ) -> internal_file		1202109	0					
ANR	1202590	UnaryOperationExpression	* ret		1202109	0					
ANR	1202591	UnaryOperator	*		1202109	0					
ANR	1202592	Identifier	ret		1202109	1					
ANR	1202593	Identifier	internal_file		1202109	1					
ANR	1202594	Identifier	entry		1202109	1					
ANR	1202595	ExpressionStatement	( * ret ) -> is_zip = entry -> is_zip	445:2:12694:12724	1202109	6	True				
ANR	1202596	AssignmentExpression	( * ret ) -> is_zip = entry -> is_zip		1202109	0		=			
ANR	1202597	PtrMemberAccess	( * ret ) -> is_zip		1202109	0					
ANR	1202598	UnaryOperationExpression	* ret		1202109	0					
ANR	1202599	UnaryOperator	*		1202109	0					
ANR	1202600	Identifier	ret		1202109	1					
ANR	1202601	Identifier	is_zip		1202109	1					
ANR	1202602	PtrMemberAccess	entry -> is_zip		1202109	1					
ANR	1202603	Identifier	entry		1202109	0					
ANR	1202604	Identifier	is_zip		1202109	1					
ANR	1202605	ExpressionStatement	( * ret ) -> is_tar = entry -> is_tar	446:2:12728:12758	1202109	7	True				
ANR	1202606	AssignmentExpression	( * ret ) -> is_tar = entry -> is_tar		1202109	0		=			
ANR	1202607	PtrMemberAccess	( * ret ) -> is_tar		1202109	0					
ANR	1202608	UnaryOperationExpression	* ret		1202109	0					
ANR	1202609	UnaryOperator	*		1202109	0					
ANR	1202610	Identifier	ret		1202109	1					
ANR	1202611	Identifier	is_tar		1202109	1					
ANR	1202612	PtrMemberAccess	entry -> is_tar		1202109	1					
ANR	1202613	Identifier	entry		1202109	0					
ANR	1202614	Identifier	is_tar		1202109	1					
ANR	1202615	IfStatement	if ( ! phar -> is_persistent )		1202109	8					
ANR	1202616	Condition	! phar -> is_persistent	448:6:12767:12786	1202109	0	True				
ANR	1202617	UnaryOperationExpression	! phar -> is_persistent		1202109	0					
ANR	1202618	UnaryOperator	!		1202109	0					
ANR	1202619	PtrMemberAccess	phar -> is_persistent		1202109	1					
ANR	1202620	Identifier	phar		1202109	0					
ANR	1202621	Identifier	is_persistent		1202109	1					
ANR	1202622	CompoundStatement		95:28:2568:2568	1202109	1					
ANR	1202623	ExpressionStatement	++ ( entry -> phar -> refcount )	449:3:12794:12819	1202109	0	True				
ANR	1202624	UnaryExpression	++ ( entry -> phar -> refcount )		1202109	0					
ANR	1202625	IncDec	++		1202109	0					
ANR	1202626	PtrMemberAccess	entry -> phar -> refcount		1202109	1					
ANR	1202627	PtrMemberAccess	entry -> phar		1202109	0					
ANR	1202628	Identifier	entry		1202109	0					
ANR	1202629	Identifier	phar		1202109	1					
ANR	1202630	Identifier	refcount		1202109	1					
ANR	1202631	ExpressionStatement	++ ( entry -> fp_refcount )	450:3:12824:12846	1202109	1	True				
ANR	1202632	UnaryExpression	++ ( entry -> fp_refcount )		1202109	0					
ANR	1202633	IncDec	++		1202109	0					
ANR	1202634	PtrMemberAccess	entry -> fp_refcount		1202109	1					
ANR	1202635	Identifier	entry		1202109	0					
ANR	1202636	Identifier	fp_refcount		1202109	1					
ANR	1202637	ReturnStatement	return SUCCESS ;	453:2:12855:12869	1202109	9	True				
ANR	1202638	Identifier	SUCCESS		1202109	0					
ANR	1202639	IfStatement	if ( entry -> fp_type == PHAR_MOD )		1202109	40					
ANR	1202640	Condition	entry -> fp_type == PHAR_MOD	456:5:12880:12905	1202109	0	True				
ANR	1202641	EqualityExpression	entry -> fp_type == PHAR_MOD		1202109	0		==			
ANR	1202642	PtrMemberAccess	entry -> fp_type		1202109	0					
ANR	1202643	Identifier	entry		1202109	0					
ANR	1202644	Identifier	fp_type		1202109	1					
ANR	1202645	Identifier	PHAR_MOD		1202109	1					
ANR	1202646	CompoundStatement		103:33:2687:2687	1202109	1					
ANR	1202647	IfStatement	if ( for_trunc )		1202109	0					
ANR	1202648	Condition	for_trunc	457:6:12916:12924	1202109	0	True				
ANR	1202649	Identifier	for_trunc		1202109	0					
ANR	1202650	CompoundStatement		104:17:2706:2706	1202109	1					
ANR	1202651	Statement	if	458:3:12932:12933	1202109	0	True				
ANR	1202652	Statement	(	458:6:12935:12935	1202109	1	True				
ANR	1202653	Statement	FAILURE	458:7:12936:12942	1202109	2	True				
ANR	1202654	Statement	==	458:15:12944:12945	1202109	3	True				
ANR	1202655	Statement	phar_create_writeable_entry	458:18:12947:12973	1202109	4	True				
ANR	1202656	Statement	(	458:45:12974:12974	1202109	5	True				
ANR	1202657	Statement	phar	458:46:12975:12978	1202109	6	True				
ANR	1202658	Statement	","	458:50:12979:12979	1202109	7	True				
ANR	1202659	Statement	entry	458:52:12981:12985	1202109	8	True				
ANR	1202660	Statement	","	458:57:12986:12986	1202109	9	True				
ANR	1202661	Statement	error	458:59:12988:12992	1202109	10	True				
ANR	1202662	Statement	TSRMLS_CC	458:65:12994:13002	1202109	11	True				
ANR	1202663	Statement	)	458:74:13003:13003	1202109	12	True				
ANR	1202664	Statement	)	458:75:13004:13004	1202109	13	True				
ANR	1202665	CompoundStatement		105:77:2785:2785	1202109	14					
ANR	1202666	ReturnStatement	return FAILURE ;	459:4:13012:13026	1202109	0	True				
ANR	1202667	Identifier	FAILURE		1202109	0					
ANR	1202668	ElseStatement	else		1202109	0					
ANR	1202669	IfStatement	if ( for_append )		1202109	0					
ANR	1202670	Condition	for_append	461:13:13046:13055	1202109	0	True				
ANR	1202671	Identifier	for_append		1202109	0					
ANR	1202672	CompoundStatement		108:25:2837:2837	1202109	1					
ANR	1202673	Statement	phar_seek_efp	462:3:13063:13075	1202109	0	True				
ANR	1202674	Statement	(	462:16:13076:13076	1202109	1	True				
ANR	1202675	Statement	entry	462:17:13077:13081	1202109	2	True				
ANR	1202676	Statement	","	462:22:13082:13082	1202109	3	True				
ANR	1202677	Statement	0	462:24:13084:13084	1202109	4	True				
ANR	1202678	Statement	","	462:25:13085:13085	1202109	5	True				
ANR	1202679	Statement	SEEK_END	462:27:13087:13094	1202109	6	True				
ANR	1202680	Statement	","	462:35:13095:13095	1202109	7	True				
ANR	1202681	Statement	0	462:37:13097:13097	1202109	8	True				
ANR	1202682	Statement	","	462:38:13098:13098	1202109	9	True				
ANR	1202683	Statement	0	462:40:13100:13100	1202109	10	True				
ANR	1202684	Statement	TSRMLS_CC	462:42:13102:13110	1202109	11	True				
ANR	1202685	Statement	)	462:51:13111:13111	1202109	12	True				
ANR	1202686	ExpressionStatement		462:52:13112:13112	1202109	13	True				
ANR	1202687	ElseStatement	else		1202109	0					
ANR	1202688	CompoundStatement		111:8:2905:2905	1202109	0					
ANR	1202689	IfStatement	if ( for_write )		1202109	0					
ANR	1202690	Condition	for_write	465:6:13134:13142	1202109	0	True				
ANR	1202691	Identifier	for_write		1202109	0					
ANR	1202692	CompoundStatement		112:17:2924:2924	1202109	1					
ANR	1202693	IfStatement	if ( entry -> link )		1202109	0					
ANR	1202694	Condition	entry -> link	466:7:13154:13164	1202109	0	True				
ANR	1202695	PtrMemberAccess	entry -> link		1202109	0					
ANR	1202696	Identifier	entry		1202109	0					
ANR	1202697	Identifier	link		1202109	1					
ANR	1202698	CompoundStatement		113:20:2946:2946	1202109	1					
ANR	1202699	ExpressionStatement	efree ( entry -> link )	467:4:13173:13191	1202109	0	True				
ANR	1202700	CallExpression	efree ( entry -> link )		1202109	0					
ANR	1202701	Callee	efree		1202109	0					
ANR	1202702	Identifier	efree		1202109	0					
ANR	1202703	ArgumentList	entry -> link		1202109	1					
ANR	1202704	Argument	entry -> link		1202109	0					
ANR	1202705	PtrMemberAccess	entry -> link		1202109	0					
ANR	1202706	Identifier	entry		1202109	0					
ANR	1202707	Identifier	link		1202109	1					
ANR	1202708	ExpressionStatement	entry -> link = NULL	468:4:13197:13215	1202109	1	True				
ANR	1202709	AssignmentExpression	entry -> link = NULL		1202109	0		=			
ANR	1202710	PtrMemberAccess	entry -> link		1202109	0					
ANR	1202711	Identifier	entry		1202109	0					
ANR	1202712	Identifier	link		1202109	1					
ANR	1202713	Identifier	NULL		1202109	1					
ANR	1202714	ExpressionStatement	entry -> tar_type = ( entry -> is_tar ? TAR_FILE : '\\0' )	469:4:13221:13272	1202109	2	True				
ANR	1202715	AssignmentExpression	entry -> tar_type = ( entry -> is_tar ? TAR_FILE : '\\0' )		1202109	0		=			
ANR	1202716	PtrMemberAccess	entry -> tar_type		1202109	0					
ANR	1202717	Identifier	entry		1202109	0					
ANR	1202718	Identifier	tar_type		1202109	1					
ANR	1202719	ConditionalExpression	entry -> is_tar ? TAR_FILE : '\\0'		1202109	1					
ANR	1202720	Condition	entry -> is_tar		1202109	0					
ANR	1202721	PtrMemberAccess	entry -> is_tar		1202109	0					
ANR	1202722	Identifier	entry		1202109	0					
ANR	1202723	Identifier	is_tar		1202109	1					
ANR	1202724	Identifier	TAR_FILE		1202109	1					
ANR	1202725	PrimaryExpression	'\\0'		1202109	2					
ANR	1202726	IfStatement	if ( for_trunc )		1202109	1					
ANR	1202727	Condition	for_trunc	472:7:13287:13295	1202109	0	True				
ANR	1202728	Identifier	for_trunc		1202109	0					
ANR	1202729	CompoundStatement		119:18:3077:3077	1202109	1					
ANR	1202730	Statement	if	473:4:13304:13305	1202109	0	True				
ANR	1202731	Statement	(	473:7:13307:13307	1202109	1	True				
ANR	1202732	Statement	FAILURE	473:8:13308:13314	1202109	2	True				
ANR	1202733	Statement	==	473:16:13316:13317	1202109	3	True				
ANR	1202734	Statement	phar_create_writeable_entry	473:19:13319:13345	1202109	4	True				
ANR	1202735	Statement	(	473:46:13346:13346	1202109	5	True				
ANR	1202736	Statement	phar	473:47:13347:13350	1202109	6	True				
ANR	1202737	Statement	","	473:51:13351:13351	1202109	7	True				
ANR	1202738	Statement	entry	473:53:13353:13357	1202109	8	True				
ANR	1202739	Statement	","	473:58:13358:13358	1202109	9	True				
ANR	1202740	Statement	error	473:60:13360:13364	1202109	10	True				
ANR	1202741	Statement	TSRMLS_CC	473:66:13366:13374	1202109	11	True				
ANR	1202742	Statement	)	473:75:13375:13375	1202109	12	True				
ANR	1202743	Statement	)	473:76:13376:13376	1202109	13	True				
ANR	1202744	CompoundStatement		120:78:3157:3157	1202109	14					
ANR	1202745	ReturnStatement	return FAILURE ;	474:5:13385:13399	1202109	0	True				
ANR	1202746	Identifier	FAILURE		1202109	0					
ANR	1202747	ElseStatement	else		1202109	0					
ANR	1202748	CompoundStatement		123:10:3196:3196	1202109	0					
ANR	1202749	Statement	if	477:4:13423:13424	1202109	0	True				
ANR	1202750	Statement	(	477:7:13426:13426	1202109	1	True				
ANR	1202751	Statement	FAILURE	477:8:13427:13433	1202109	2	True				
ANR	1202752	Statement	==	477:16:13435:13436	1202109	3	True				
ANR	1202753	Statement	phar_separate_entry_fp	477:19:13438:13459	1202109	4	True				
ANR	1202754	Statement	(	477:41:13460:13460	1202109	5	True				
ANR	1202755	Statement	entry	477:42:13461:13465	1202109	6	True				
ANR	1202756	Statement	","	477:47:13466:13466	1202109	7	True				
ANR	1202757	Statement	error	477:49:13468:13472	1202109	8	True				
ANR	1202758	Statement	TSRMLS_CC	477:55:13474:13482	1202109	9	True				
ANR	1202759	Statement	)	477:64:13483:13483	1202109	10	True				
ANR	1202760	Statement	)	477:65:13484:13484	1202109	11	True				
ANR	1202761	CompoundStatement		124:67:3265:3265	1202109	12					
ANR	1202762	ReturnStatement	return FAILURE ;	478:5:13493:13507	1202109	0	True				
ANR	1202763	Identifier	FAILURE		1202109	0					
ANR	1202764	ElseStatement	else		1202109	0					
ANR	1202765	CompoundStatement		128:9:3308:3308	1202109	0					
ANR	1202766	Statement	if	482:3:13534:13535	1202109	0	True				
ANR	1202767	Statement	(	482:6:13537:13537	1202109	1	True				
ANR	1202768	Statement	FAILURE	482:7:13538:13544	1202109	2	True				
ANR	1202769	Statement	==	482:15:13546:13547	1202109	3	True				
ANR	1202770	Statement	phar_open_entry_fp	482:18:13549:13566	1202109	4	True				
ANR	1202771	Statement	(	482:36:13567:13567	1202109	5	True				
ANR	1202772	Statement	entry	482:37:13568:13572	1202109	6	True				
ANR	1202773	Statement	","	482:42:13573:13573	1202109	7	True				
ANR	1202774	Statement	error	482:44:13575:13579	1202109	8	True				
ANR	1202775	Statement	","	482:49:13580:13580	1202109	9	True				
ANR	1202776	Statement	1	482:51:13582:13582	1202109	10	True				
ANR	1202777	Statement	TSRMLS_CC	482:53:13584:13592	1202109	11	True				
ANR	1202778	Statement	)	482:62:13593:13593	1202109	12	True				
ANR	1202779	Statement	)	482:63:13594:13594	1202109	13	True				
ANR	1202780	CompoundStatement		129:65:3375:3375	1202109	14					
ANR	1202781	ReturnStatement	return FAILURE ;	483:4:13602:13616	1202109	0	True				
ANR	1202782	Identifier	FAILURE		1202109	0					
ANR	1202783	ExpressionStatement	* ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )	488:1:13632:13691	1202109	41	True				
ANR	1202784	AssignmentExpression	* ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1202109	0		=			
ANR	1202785	UnaryOperationExpression	* ret		1202109	0					
ANR	1202786	UnaryOperator	*		1202109	0					
ANR	1202787	Identifier	ret		1202109	1					
ANR	1202788	CastExpression	( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1202109	1					
ANR	1202789	CastTarget	phar_entry_data *		1202109	0					
ANR	1202790	CallExpression	emalloc ( sizeof ( phar_entry_data ) )		1202109	1					
ANR	1202791	Callee	emalloc		1202109	0					
ANR	1202792	Identifier	emalloc		1202109	0					
ANR	1202793	ArgumentList	sizeof ( phar_entry_data )		1202109	1					
ANR	1202794	Argument	sizeof ( phar_entry_data )		1202109	0					
ANR	1202795	SizeofExpression	sizeof ( phar_entry_data )		1202109	0					
ANR	1202796	Sizeof	sizeof		1202109	0					
ANR	1202797	SizeofOperand	phar_entry_data		1202109	1					
ANR	1202798	ExpressionStatement	( * ret ) -> position = 0	489:1:13694:13714	1202109	42	True				
ANR	1202799	AssignmentExpression	( * ret ) -> position = 0		1202109	0		=			
ANR	1202800	PtrMemberAccess	( * ret ) -> position		1202109	0					
ANR	1202801	UnaryOperationExpression	* ret		1202109	0					
ANR	1202802	UnaryOperator	*		1202109	0					
ANR	1202803	Identifier	ret		1202109	1					
ANR	1202804	Identifier	position		1202109	1					
ANR	1202805	PrimaryExpression	0		1202109	1					
ANR	1202806	ExpressionStatement	( * ret ) -> phar = phar	490:1:13717:13736	1202109	43	True				
ANR	1202807	AssignmentExpression	( * ret ) -> phar = phar		1202109	0		=			
ANR	1202808	PtrMemberAccess	( * ret ) -> phar		1202109	0					
ANR	1202809	UnaryOperationExpression	* ret		1202109	0					
ANR	1202810	UnaryOperator	*		1202109	0					
ANR	1202811	Identifier	ret		1202109	1					
ANR	1202812	Identifier	phar		1202109	1					
ANR	1202813	Identifier	phar		1202109	1					
ANR	1202814	ExpressionStatement	( * ret ) -> for_write = for_write	491:1:13739:13768	1202109	44	True				
ANR	1202815	AssignmentExpression	( * ret ) -> for_write = for_write		1202109	0		=			
ANR	1202816	PtrMemberAccess	( * ret ) -> for_write		1202109	0					
ANR	1202817	UnaryOperationExpression	* ret		1202109	0					
ANR	1202818	UnaryOperator	*		1202109	0					
ANR	1202819	Identifier	ret		1202109	1					
ANR	1202820	Identifier	for_write		1202109	1					
ANR	1202821	Identifier	for_write		1202109	1					
ANR	1202822	ExpressionStatement	( * ret ) -> internal_file = entry	492:1:13771:13800	1202109	45	True				
ANR	1202823	AssignmentExpression	( * ret ) -> internal_file = entry		1202109	0		=			
ANR	1202824	PtrMemberAccess	( * ret ) -> internal_file		1202109	0					
ANR	1202825	UnaryOperationExpression	* ret		1202109	0					
ANR	1202826	UnaryOperator	*		1202109	0					
ANR	1202827	Identifier	ret		1202109	1					
ANR	1202828	Identifier	internal_file		1202109	1					
ANR	1202829	Identifier	entry		1202109	1					
ANR	1202830	ExpressionStatement	( * ret ) -> is_zip = entry -> is_zip	493:1:13803:13833	1202109	46	True				
ANR	1202831	AssignmentExpression	( * ret ) -> is_zip = entry -> is_zip		1202109	0		=			
ANR	1202832	PtrMemberAccess	( * ret ) -> is_zip		1202109	0					
ANR	1202833	UnaryOperationExpression	* ret		1202109	0					
ANR	1202834	UnaryOperator	*		1202109	0					
ANR	1202835	Identifier	ret		1202109	1					
ANR	1202836	Identifier	is_zip		1202109	1					
ANR	1202837	PtrMemberAccess	entry -> is_zip		1202109	1					
ANR	1202838	Identifier	entry		1202109	0					
ANR	1202839	Identifier	is_zip		1202109	1					
ANR	1202840	ExpressionStatement	( * ret ) -> is_tar = entry -> is_tar	494:1:13836:13866	1202109	47	True				
ANR	1202841	AssignmentExpression	( * ret ) -> is_tar = entry -> is_tar		1202109	0		=			
ANR	1202842	PtrMemberAccess	( * ret ) -> is_tar		1202109	0					
ANR	1202843	UnaryOperationExpression	* ret		1202109	0					
ANR	1202844	UnaryOperator	*		1202109	0					
ANR	1202845	Identifier	ret		1202109	1					
ANR	1202846	Identifier	is_tar		1202109	1					
ANR	1202847	PtrMemberAccess	entry -> is_tar		1202109	1					
ANR	1202848	Identifier	entry		1202109	0					
ANR	1202849	Identifier	is_tar		1202109	1					
ANR	1202850	Statement	(	495:1:13869:13869	1202109	48	True				
ANR	1202851	Statement	*	495:2:13870:13870	1202109	49	True				
ANR	1202852	Statement	ret	495:3:13871:13873	1202109	50	True				
ANR	1202853	Statement	)	495:6:13874:13874	1202109	51	True				
ANR	1202854	Statement	->	495:7:13875:13876	1202109	52	True				
ANR	1202855	Statement	fp	495:9:13877:13878	1202109	53	True				
ANR	1202856	Statement	=	495:12:13880:13880	1202109	54	True				
ANR	1202857	Statement	phar_get_efp	495:14:13882:13893	1202109	55	True				
ANR	1202858	Statement	(	495:26:13894:13894	1202109	56	True				
ANR	1202859	Statement	entry	495:27:13895:13899	1202109	57	True				
ANR	1202860	Statement	","	495:32:13900:13900	1202109	58	True				
ANR	1202861	Statement	1	495:34:13902:13902	1202109	59	True				
ANR	1202862	Statement	TSRMLS_CC	495:36:13904:13912	1202109	60	True				
ANR	1202863	Statement	)	495:45:13913:13913	1202109	61	True				
ANR	1202864	ExpressionStatement		495:46:13914:13914	1202109	62	True				
ANR	1202865	IfStatement	if ( entry -> link )		1202109	63					
ANR	1202866	Condition	entry -> link	496:5:13921:13931	1202109	0	True				
ANR	1202867	PtrMemberAccess	entry -> link		1202109	0					
ANR	1202868	Identifier	entry		1202109	0					
ANR	1202869	Identifier	link		1202109	1					
ANR	1202870	CompoundStatement		143:18:3713:3713	1202109	1					
ANR	1202871	Statement	phar_entry_info	497:2:13938:13952	1202109	0	True				
ANR	1202872	Statement	*	497:18:13954:13954	1202109	1	True				
ANR	1202873	Statement	link	497:19:13955:13958	1202109	2	True				
ANR	1202874	Statement	=	497:24:13960:13960	1202109	3	True				
ANR	1202875	Statement	phar_get_link_source	497:26:13962:13981	1202109	4	True				
ANR	1202876	Statement	(	497:46:13982:13982	1202109	5	True				
ANR	1202877	Statement	entry	497:47:13983:13987	1202109	6	True				
ANR	1202878	Statement	TSRMLS_CC	497:53:13989:13997	1202109	7	True				
ANR	1202879	Statement	)	497:62:13998:13998	1202109	8	True				
ANR	1202880	ExpressionStatement		497:63:13999:13999	1202109	9	True				
ANR	1202881	IfStatement	if ( ! link )		1202109	10					
ANR	1202882	Condition	! link	498:5:14006:14010	1202109	0	True				
ANR	1202883	UnaryOperationExpression	! link		1202109	0					
ANR	1202884	UnaryOperator	!		1202109	0					
ANR	1202885	Identifier	link		1202109	1					
ANR	1202886	CompoundStatement		145:12:3792:3792	1202109	1					
ANR	1202887	ExpressionStatement	efree ( * ret )	499:3:14018:14029	1202109	0	True				
ANR	1202888	CallExpression	efree ( * ret )		1202109	0					
ANR	1202889	Callee	efree		1202109	0					
ANR	1202890	Identifier	efree		1202109	0					
ANR	1202891	ArgumentList	* ret		1202109	1					
ANR	1202892	Argument	* ret		1202109	0					
ANR	1202893	UnaryOperationExpression	* ret		1202109	0					
ANR	1202894	UnaryOperator	*		1202109	0					
ANR	1202895	Identifier	ret		1202109	1					
ANR	1202896	ReturnStatement	return FAILURE ;	500:3:14034:14048	1202109	1	True				
ANR	1202897	Identifier	FAILURE		1202109	0					
ANR	1202898	Statement	(	502:2:14056:14056	1202109	11	True				
ANR	1202899	Statement	*	502:3:14057:14057	1202109	12	True				
ANR	1202900	Statement	ret	502:4:14058:14060	1202109	13	True				
ANR	1202901	Statement	)	502:7:14061:14061	1202109	14	True				
ANR	1202902	Statement	->	502:8:14062:14063	1202109	15	True				
ANR	1202903	Statement	zero	502:10:14064:14067	1202109	16	True				
ANR	1202904	Statement	=	502:15:14069:14069	1202109	17	True				
ANR	1202905	Statement	phar_get_fp_offset	502:17:14071:14088	1202109	18	True				
ANR	1202906	Statement	(	502:35:14089:14089	1202109	19	True				
ANR	1202907	Statement	link	502:36:14090:14093	1202109	20	True				
ANR	1202908	Statement	TSRMLS_CC	502:41:14095:14103	1202109	21	True				
ANR	1202909	Statement	)	502:50:14104:14104	1202109	22	True				
ANR	1202910	ExpressionStatement		502:51:14105:14105	1202109	23	True				
ANR	1202911	ElseStatement	else		1202109	0					
ANR	1202912	CompoundStatement		150:8:3894:3894	1202109	0					
ANR	1202913	Statement	(	504:2:14119:14119	1202109	0	True				
ANR	1202914	Statement	*	504:3:14120:14120	1202109	1	True				
ANR	1202915	Statement	ret	504:4:14121:14123	1202109	2	True				
ANR	1202916	Statement	)	504:7:14124:14124	1202109	3	True				
ANR	1202917	Statement	->	504:8:14125:14126	1202109	4	True				
ANR	1202918	Statement	zero	504:10:14127:14130	1202109	5	True				
ANR	1202919	Statement	=	504:15:14132:14132	1202109	6	True				
ANR	1202920	Statement	phar_get_fp_offset	504:17:14134:14151	1202109	7	True				
ANR	1202921	Statement	(	504:35:14152:14152	1202109	8	True				
ANR	1202922	Statement	entry	504:36:14153:14157	1202109	9	True				
ANR	1202923	Statement	TSRMLS_CC	504:42:14159:14167	1202109	10	True				
ANR	1202924	Statement	)	504:51:14168:14168	1202109	11	True				
ANR	1202925	ExpressionStatement		504:52:14169:14169	1202109	12	True				
ANR	1202926	IfStatement	if ( ! phar -> is_persistent )		1202109	64					
ANR	1202927	Condition	! phar -> is_persistent	507:5:14180:14199	1202109	0	True				
ANR	1202928	UnaryOperationExpression	! phar -> is_persistent		1202109	0					
ANR	1202929	UnaryOperator	!		1202109	0					
ANR	1202930	PtrMemberAccess	phar -> is_persistent		1202109	1					
ANR	1202931	Identifier	phar		1202109	0					
ANR	1202932	Identifier	is_persistent		1202109	1					
ANR	1202933	CompoundStatement		154:27:3981:3981	1202109	1					
ANR	1202934	ExpressionStatement	++ ( entry -> fp_refcount )	508:2:14206:14228	1202109	0	True				
ANR	1202935	UnaryExpression	++ ( entry -> fp_refcount )		1202109	0					
ANR	1202936	IncDec	++		1202109	0					
ANR	1202937	PtrMemberAccess	entry -> fp_refcount		1202109	1					
ANR	1202938	Identifier	entry		1202109	0					
ANR	1202939	Identifier	fp_refcount		1202109	1					
ANR	1202940	ExpressionStatement	++ ( entry -> phar -> refcount )	509:2:14232:14257	1202109	1	True				
ANR	1202941	UnaryExpression	++ ( entry -> phar -> refcount )		1202109	0					
ANR	1202942	IncDec	++		1202109	0					
ANR	1202943	PtrMemberAccess	entry -> phar -> refcount		1202109	1					
ANR	1202944	PtrMemberAccess	entry -> phar		1202109	0					
ANR	1202945	Identifier	entry		1202109	0					
ANR	1202946	Identifier	phar		1202109	1					
ANR	1202947	Identifier	refcount		1202109	1					
ANR	1202948	ReturnStatement	return SUCCESS ;	512:1:14264:14278	1202109	65	True				
ANR	1202949	Identifier	SUCCESS		1202109	0					
ANR	1202950	ReturnType	int		1202109	1					
ANR	1202951	Identifier	phar_get_entry_data		1202109	2					
ANR	1202952	ParameterList	"phar_entry_data * * ret , char * fname , int fname_len , char * path , int path_len , const char * mode , char allow_dir , char * * error , int security TSRMLS_DC"		1202109	3					
ANR	1202953	Parameter	phar_entry_data * * ret	353:24:10061:10081	1202109	0	True				
ANR	1202954	ParameterType	phar_entry_data * *		1202109	0					
ANR	1202955	Identifier	ret		1202109	1					
ANR	1202956	Parameter	char * fname	353:47:10084:10094	1202109	1	True				
ANR	1202957	ParameterType	char *		1202109	0					
ANR	1202958	Identifier	fname		1202109	1					
ANR	1202959	Parameter	int fname_len	353:60:10097:10109	1202109	2	True				
ANR	1202960	ParameterType	int		1202109	0					
ANR	1202961	Identifier	fname_len		1202109	1					
ANR	1202962	Parameter	char * path	353:75:10112:10121	1202109	3	True				
ANR	1202963	ParameterType	char *		1202109	0					
ANR	1202964	Identifier	path		1202109	1					
ANR	1202965	Parameter	int path_len	353:87:10124:10135	1202109	4	True				
ANR	1202966	ParameterType	int		1202109	0					
ANR	1202967	Identifier	path_len		1202109	1					
ANR	1202968	Parameter	const char * mode	353:101:10138:10153	1202109	5	True				
ANR	1202969	ParameterType	const char *		1202109	0					
ANR	1202970	Identifier	mode		1202109	1					
ANR	1202971	Parameter	char allow_dir	353:119:10156:10169	1202109	6	True				
ANR	1202972	ParameterType	char		1202109	0					
ANR	1202973	Identifier	allow_dir		1202109	1					
ANR	1202974	Parameter	char * * error	353:135:10172:10183	1202109	7	True				
ANR	1202975	ParameterType	char * *		1202109	0					
ANR	1202976	Identifier	error		1202109	1					
ANR	1202977	Parameter	int security TSRMLS_DC	353:149:10186:10207	1202109	8	True				
ANR	1202978	ParameterType	int security		1202109	0					
ANR	1202979	Identifier	TSRMLS_DC		1202109	1					
ANR	1202980	CFGEntryNode	ENTRY		1202109		True				
ANR	1202981	CFGExitNode	EXIT		1202109		True				
ANR	1202982	Symbol	( * ret ) -> phar		1202109						
ANR	1202983	Symbol	( * ret ) -> for_write		1202109						
ANR	1202984	Symbol	entry -> is_zip		1202109						
ANR	1202985	Symbol	TSRMLS_DC		1202109						
ANR	1202986	Symbol	mode		1202109						
ANR	1202987	Symbol	path		1202109						
ANR	1202988	Symbol	readonly		1202109						
ANR	1202989	Symbol	entry -> is_tar		1202109						
ANR	1202990	Symbol	for_trunc		1202109						
ANR	1202991	Symbol	entry -> is_deleted		1202109						
ANR	1202992	Symbol	entry -> phar		1202109						
ANR	1202993	Symbol	phar		1202109						
ANR	1202994	Symbol	ret		1202109						
ANR	1202995	Symbol	fname		1202109						
ANR	1202996	Symbol	phar -> is_data		1202109						
ANR	1202997	Symbol	entry -> fp_refcount		1202109						
ANR	1202998	Symbol	for_write		1202109						
ANR	1202999	Symbol	NULL		1202109						
ANR	1203000	Symbol	( * ret ) -> is_zip		1202109						
ANR	1203001	Symbol	allow_dir		1202109						
ANR	1203002	Symbol	entry -> is_modified		1202109						
ANR	1203003	Symbol	PHAR_G		1202109						
ANR	1203004	Symbol	entry -> fp_type		1202109						
ANR	1203005	Symbol	( * ret ) -> is_tar		1202109						
ANR	1203006	Symbol	entry		1202109						
ANR	1203007	Symbol	( * ret ) -> fp		1202109						
ANR	1203008	Symbol	* error		1202109						
ANR	1203009	Symbol	for_create		1202109						
ANR	1203010	Symbol	entry -> tar_type		1202109						
ANR	1203011	Symbol	fname_len		1202109						
ANR	1203012	Symbol	entry -> is_dir		1202109						
ANR	1203013	Symbol	link		1202109						
ANR	1203014	Symbol	* ret		1202109						
ANR	1203015	Symbol	error		1202109						
ANR	1203016	Symbol	entry -> link		1202109						
ANR	1203017	Symbol	emalloc		1202109						
ANR	1203018	Symbol	phar -> is_persistent		1202109						
ANR	1203019	Symbol	TAR_FILE		1202109						
ANR	1203020	Symbol	for_append		1202109						
ANR	1203021	Symbol	( * ret ) -> internal_file		1202109						
ANR	1203022	Symbol	* entry		1202109						
ANR	1203023	Symbol	( * ret ) -> position		1202109						
ANR	1203024	Symbol	path_len		1202109						
ANR	1203025	Symbol	SUCCESS		1202109						
ANR	1203026	Symbol	FAILURE		1202109						
ANR	1203027	Symbol	* * ret		1202109						
ANR	1203028	Symbol	PHAR_MOD		1202109						
ANR	1203029	Symbol	* mode		1202109						
ANR	1203030	Symbol	* phar		1202109						
ANR	1203031	Function	phar_get_or_create_entry_data	519:0:14382:17262							
ANR	1203032	FunctionDef	"phar_get_or_create_entry_data (char * fname , int fname_len , char * path , int path_len , const char * mode , char allow_dir , char * * error , int security TSRMLS_DC)"		1203031	0					
ANR	1203033	CompoundStatement		520:0:14565:17262	1203031	0					
ANR	1203034	IdentifierDeclStatement	phar_archive_data * phar ;	521:1:14568:14591	1203031	0	True				
ANR	1203035	IdentifierDecl	* phar		1203031	0					
ANR	1203036	IdentifierDeclType	phar_archive_data *		1203031	0					
ANR	1203037	Identifier	phar		1203031	1					
ANR	1203038	IdentifierDeclStatement	"phar_entry_info * entry , etemp ;"	522:1:14594:14623	1203031	1	True				
ANR	1203039	IdentifierDecl	* entry		1203031	0					
ANR	1203040	IdentifierDeclType	phar_entry_info *		1203031	0					
ANR	1203041	Identifier	entry		1203031	1					
ANR	1203042	IdentifierDecl	etemp		1203031	1					
ANR	1203043	IdentifierDeclType	phar_entry_info		1203031	0					
ANR	1203044	Identifier	etemp		1203031	1					
ANR	1203045	IdentifierDeclStatement	phar_entry_data * ret ;	523:1:14626:14646	1203031	2	True				
ANR	1203046	IdentifierDecl	* ret		1203031	0					
ANR	1203047	IdentifierDeclType	phar_entry_data *		1203031	0					
ANR	1203048	Identifier	ret		1203031	1					
ANR	1203049	IdentifierDeclStatement	const char * pcr_error ;	524:1:14649:14670	1203031	3	True				
ANR	1203050	IdentifierDecl	* pcr_error		1203031	0					
ANR	1203051	IdentifierDeclType	const char *		1203031	0					
ANR	1203052	Identifier	pcr_error		1203031	1					
ANR	1203053	IdentifierDeclStatement	char is_dir ;	525:1:14673:14684	1203031	4	True				
ANR	1203054	IdentifierDecl	is_dir		1203031	0					
ANR	1203055	IdentifierDeclType	char		1203031	0					
ANR	1203056	Identifier	is_dir		1203031	1					
ANR	1203057	ExpressionStatement	"phar_unixify_path_separators ( path , path_len )"	528:1:14705:14749	1203031	5	True				
ANR	1203058	CallExpression	"phar_unixify_path_separators ( path , path_len )"		1203031	0					
ANR	1203059	Callee	phar_unixify_path_separators		1203031	0					
ANR	1203060	Identifier	phar_unixify_path_separators		1203031	0					
ANR	1203061	ArgumentList	path		1203031	1					
ANR	1203062	Argument	path		1203031	0					
ANR	1203063	Identifier	path		1203031	0					
ANR	1203064	Argument	path_len		1203031	1					
ANR	1203065	Identifier	path_len		1203031	0					
ANR	1203066	ExpressionStatement	is_dir = ( path_len && path [ path_len - 1 ] == '/' ) ? 1 : 0	531:1:14760:14816	1203031	6	True				
ANR	1203067	AssignmentExpression	is_dir = ( path_len && path [ path_len - 1 ] == '/' ) ? 1 : 0		1203031	0		=			
ANR	1203068	Identifier	is_dir		1203031	0					
ANR	1203069	ConditionalExpression	( path_len && path [ path_len - 1 ] == '/' ) ? 1 : 0		1203031	1					
ANR	1203070	Condition	path_len && path [ path_len - 1 ] == '/'		1203031	0					
ANR	1203071	AndExpression	path_len && path [ path_len - 1 ] == '/'		1203031	0		&&			
ANR	1203072	Identifier	path_len		1203031	0					
ANR	1203073	EqualityExpression	path [ path_len - 1 ] == '/'		1203031	1		==			
ANR	1203074	ArrayIndexing	path [ path_len - 1 ]		1203031	0					
ANR	1203075	Identifier	path		1203031	0					
ANR	1203076	AdditiveExpression	path_len - 1		1203031	1		-			
ANR	1203077	Identifier	path_len		1203031	0					
ANR	1203078	PrimaryExpression	1		1203031	1					
ANR	1203079	PrimaryExpression	'/'		1203031	1					
ANR	1203080	PrimaryExpression	1		1203031	1					
ANR	1203081	PrimaryExpression	0		1203031	2					
ANR	1203082	Statement	if	533:1:14820:14821	1203031	7	True				
ANR	1203083	Statement	(	533:4:14823:14823	1203031	8	True				
ANR	1203084	Statement	FAILURE	533:5:14824:14830	1203031	9	True				
ANR	1203085	Statement	==	533:13:14832:14833	1203031	10	True				
ANR	1203086	Statement	phar_get_archive	533:16:14835:14850	1203031	11	True				
ANR	1203087	Statement	(	533:32:14851:14851	1203031	12	True				
ANR	1203088	Statement	&	533:33:14852:14852	1203031	13	True				
ANR	1203089	Statement	phar	533:34:14853:14856	1203031	14	True				
ANR	1203090	Statement	","	533:38:14857:14857	1203031	15	True				
ANR	1203091	Statement	fname	533:40:14859:14863	1203031	16	True				
ANR	1203092	Statement	","	533:45:14864:14864	1203031	17	True				
ANR	1203093	Statement	fname_len	533:47:14866:14874	1203031	18	True				
ANR	1203094	Statement	","	533:56:14875:14875	1203031	19	True				
ANR	1203095	Statement	NULL	533:58:14877:14880	1203031	20	True				
ANR	1203096	Statement	","	533:62:14881:14881	1203031	21	True				
ANR	1203097	Statement	0	533:64:14883:14883	1203031	22	True				
ANR	1203098	Statement	","	533:65:14884:14884	1203031	23	True				
ANR	1203099	Statement	error	533:67:14886:14890	1203031	24	True				
ANR	1203100	Statement	TSRMLS_CC	533:73:14892:14900	1203031	25	True				
ANR	1203101	Statement	)	533:82:14901:14901	1203031	26	True				
ANR	1203102	Statement	)	533:83:14902:14902	1203031	27	True				
ANR	1203103	CompoundStatement		14:85:338:338	1203031	28					
ANR	1203104	ReturnStatement	return NULL ;	534:2:14908:14919	1203031	0	True				
ANR	1203105	Identifier	NULL		1203031	0					
ANR	1203106	Statement	if	537:1:14926:14927	1203031	29	True				
ANR	1203107	Statement	(	537:4:14929:14929	1203031	30	True				
ANR	1203108	Statement	FAILURE	537:5:14930:14936	1203031	31	True				
ANR	1203109	Statement	==	537:13:14938:14939	1203031	32	True				
ANR	1203110	Statement	phar_get_entry_data	537:16:14941:14959	1203031	33	True				
ANR	1203111	Statement	(	537:35:14960:14960	1203031	34	True				
ANR	1203112	Statement	&	537:36:14961:14961	1203031	35	True				
ANR	1203113	Statement	ret	537:37:14962:14964	1203031	36	True				
ANR	1203114	Statement	","	537:40:14965:14965	1203031	37	True				
ANR	1203115	Statement	fname	537:42:14967:14971	1203031	38	True				
ANR	1203116	Statement	","	537:47:14972:14972	1203031	39	True				
ANR	1203117	Statement	fname_len	537:49:14974:14982	1203031	40	True				
ANR	1203118	Statement	","	537:58:14983:14983	1203031	41	True				
ANR	1203119	Statement	path	537:60:14985:14988	1203031	42	True				
ANR	1203120	Statement	","	537:64:14989:14989	1203031	43	True				
ANR	1203121	Statement	path_len	537:66:14991:14998	1203031	44	True				
ANR	1203122	Statement	","	537:74:14999:14999	1203031	45	True				
ANR	1203123	Statement	mode	537:76:15001:15004	1203031	46	True				
ANR	1203124	Statement	","	537:80:15005:15005	1203031	47	True				
ANR	1203125	Statement	allow_dir	537:82:15007:15015	1203031	48	True				
ANR	1203126	Statement	","	537:91:15016:15016	1203031	49	True				
ANR	1203127	Statement	error	537:93:15018:15022	1203031	50	True				
ANR	1203128	Statement	","	537:98:15023:15023	1203031	51	True				
ANR	1203129	Statement	security	537:100:15025:15032	1203031	52	True				
ANR	1203130	Statement	TSRMLS_CC	537:109:15034:15042	1203031	53	True				
ANR	1203131	Statement	)	537:118:15043:15043	1203031	54	True				
ANR	1203132	Statement	)	537:119:15044:15044	1203031	55	True				
ANR	1203133	CompoundStatement		18:121:480:480	1203031	56					
ANR	1203134	ReturnStatement	return NULL ;	538:2:15050:15061	1203031	0	True				
ANR	1203135	Identifier	NULL		1203031	0					
ANR	1203136	IfStatement	"if ( phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok )"		1203031	57					
ANR	1203137	Condition	"phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok"	543:5:15105:15161	1203031	0	True				
ANR	1203138	RelationalExpression	"phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok"		1203031	0		>			
ANR	1203139	CallExpression	"phar_path_check ( & path , & path_len , & pcr_error )"		1203031	0					
ANR	1203140	Callee	phar_path_check		1203031	0					
ANR	1203141	Identifier	phar_path_check		1203031	0					
ANR	1203142	ArgumentList	& path		1203031	1					
ANR	1203143	Argument	& path		1203031	0					
ANR	1203144	UnaryOperationExpression	& path		1203031	0					
ANR	1203145	UnaryOperator	&		1203031	0					
ANR	1203146	Identifier	path		1203031	1					
ANR	1203147	Argument	& path_len		1203031	1					
ANR	1203148	UnaryOperationExpression	& path_len		1203031	0					
ANR	1203149	UnaryOperator	&		1203031	0					
ANR	1203150	Identifier	path_len		1203031	1					
ANR	1203151	Argument	& pcr_error		1203031	2					
ANR	1203152	UnaryOperationExpression	& pcr_error		1203031	0					
ANR	1203153	UnaryOperator	&		1203031	0					
ANR	1203154	Identifier	pcr_error		1203031	1					
ANR	1203155	Identifier	pcr_is_ok		1203031	1					
ANR	1203156	CompoundStatement		24:64:598:598	1203031	1					
ANR	1203157	IfStatement	if ( error )		1203031	0					
ANR	1203158	Condition	error	544:6:15172:15176	1203031	0	True				
ANR	1203159	Identifier	error		1203031	0					
ANR	1203160	CompoundStatement		25:13:613:613	1203031	1					
ANR	1203161	ExpressionStatement	"spprintf ( error , 0 , ""phar error: invalid path \\""%s\\"" contains %s"" , path , pcr_error )"	545:3:15184:15266	1203031	0	True				
ANR	1203162	CallExpression	"spprintf ( error , 0 , ""phar error: invalid path \\""%s\\"" contains %s"" , path , pcr_error )"		1203031	0					
ANR	1203163	Callee	spprintf		1203031	0					
ANR	1203164	Identifier	spprintf		1203031	0					
ANR	1203165	ArgumentList	error		1203031	1					
ANR	1203166	Argument	error		1203031	0					
ANR	1203167	Identifier	error		1203031	0					
ANR	1203168	Argument	0		1203031	1					
ANR	1203169	PrimaryExpression	0		1203031	0					
ANR	1203170	Argument	"""phar error: invalid path \\""%s\\"" contains %s"""		1203031	2					
ANR	1203171	PrimaryExpression	"""phar error: invalid path \\""%s\\"" contains %s"""		1203031	0					
ANR	1203172	Argument	path		1203031	3					
ANR	1203173	Identifier	path		1203031	0					
ANR	1203174	Argument	pcr_error		1203031	4					
ANR	1203175	Identifier	pcr_error		1203031	0					
ANR	1203176	ReturnStatement	return NULL ;	547:2:15274:15285	1203031	1	True				
ANR	1203177	Identifier	NULL		1203031	0					
ANR	1203178	Statement	if	550:1:15292:15293	1203031	58	True				
ANR	1203179	Statement	(	550:4:15295:15295	1203031	59	True				
ANR	1203180	Statement	phar	550:5:15296:15299	1203031	60	True				
ANR	1203181	Statement	->	550:9:15300:15301	1203031	61	True				
ANR	1203182	Statement	is_persistent	550:11:15302:15314	1203031	62	True				
ANR	1203183	Statement	&&	550:25:15316:15317	1203031	63	True				
ANR	1203184	Statement	FAILURE	550:28:15319:15325	1203031	64	True				
ANR	1203185	Statement	==	550:36:15327:15328	1203031	65	True				
ANR	1203186	Statement	phar_copy_on_write	550:39:15330:15347	1203031	66	True				
ANR	1203187	Statement	(	550:57:15348:15348	1203031	67	True				
ANR	1203188	Statement	&	550:58:15349:15349	1203031	68	True				
ANR	1203189	Statement	phar	550:59:15350:15353	1203031	69	True				
ANR	1203190	Statement	TSRMLS_CC	550:64:15355:15363	1203031	70	True				
ANR	1203191	Statement	)	550:73:15364:15364	1203031	71	True				
ANR	1203192	Statement	)	550:74:15365:15365	1203031	72	True				
ANR	1203193	CompoundStatement		31:76:801:801	1203031	73					
ANR	1203194	IfStatement	if ( error )		1203031	0					
ANR	1203195	Condition	error	551:6:15375:15379	1203031	0	True				
ANR	1203196	Identifier	error		1203031	0					
ANR	1203197	CompoundStatement		32:13:816:816	1203031	1					
ANR	1203198	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be created, could not make cached phar writeable"" , path , fname )"	552:3:15387:15519	1203031	0	True				
ANR	1203199	CallExpression	"spprintf ( error , 4096 , ""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be created, could not make cached phar writeable"" , path , fname )"		1203031	0					
ANR	1203200	Callee	spprintf		1203031	0					
ANR	1203201	Identifier	spprintf		1203031	0					
ANR	1203202	ArgumentList	error		1203031	1					
ANR	1203203	Argument	error		1203031	0					
ANR	1203204	Identifier	error		1203031	0					
ANR	1203205	Argument	4096		1203031	1					
ANR	1203206	PrimaryExpression	4096		1203031	0					
ANR	1203207	Argument	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be created, could not make cached phar writeable"""		1203031	2					
ANR	1203208	PrimaryExpression	"""phar error: file \\""%s\\"" in phar \\""%s\\"" cannot be created, could not make cached phar writeable"""		1203031	0					
ANR	1203209	Argument	path		1203031	3					
ANR	1203210	Identifier	path		1203031	0					
ANR	1203211	Argument	fname		1203031	4					
ANR	1203212	Identifier	fname		1203031	0					
ANR	1203213	ReturnStatement	return NULL ;	554:2:15527:15538	1203031	1	True				
ANR	1203214	Identifier	NULL		1203031	0					
ANR	1203215	ExpressionStatement	ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )	558:1:15582:15640	1203031	74	True				
ANR	1203216	AssignmentExpression	ret = ( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1203031	0		=			
ANR	1203217	Identifier	ret		1203031	0					
ANR	1203218	CastExpression	( phar_entry_data * ) emalloc ( sizeof ( phar_entry_data ) )		1203031	1					
ANR	1203219	CastTarget	phar_entry_data *		1203031	0					
ANR	1203220	CallExpression	emalloc ( sizeof ( phar_entry_data ) )		1203031	1					
ANR	1203221	Callee	emalloc		1203031	0					
ANR	1203222	Identifier	emalloc		1203031	0					
ANR	1203223	ArgumentList	sizeof ( phar_entry_data )		1203031	1					
ANR	1203224	Argument	sizeof ( phar_entry_data )		1203031	0					
ANR	1203225	SizeofExpression	sizeof ( phar_entry_data )		1203031	0					
ANR	1203226	Sizeof	sizeof		1203031	0					
ANR	1203227	SizeofOperand	phar_entry_data		1203031	1					
ANR	1203228	ExpressionStatement	"memset ( & etemp , 0 , sizeof ( phar_entry_info ) )"	561:1:15687:15729	1203031	75	True				
ANR	1203229	CallExpression	"memset ( & etemp , 0 , sizeof ( phar_entry_info ) )"		1203031	0					
ANR	1203230	Callee	memset		1203031	0					
ANR	1203231	Identifier	memset		1203031	0					
ANR	1203232	ArgumentList	& etemp		1203031	1					
ANR	1203233	Argument	& etemp		1203031	0					
ANR	1203234	UnaryOperationExpression	& etemp		1203031	0					
ANR	1203235	UnaryOperator	&		1203031	0					
ANR	1203236	Identifier	etemp		1203031	1					
ANR	1203237	Argument	0		1203031	1					
ANR	1203238	PrimaryExpression	0		1203031	0					
ANR	1203239	Argument	sizeof ( phar_entry_info )		1203031	2					
ANR	1203240	SizeofExpression	sizeof ( phar_entry_info )		1203031	0					
ANR	1203241	Sizeof	sizeof		1203031	0					
ANR	1203242	SizeofOperand	phar_entry_info		1203031	1					
ANR	1203243	ExpressionStatement	etemp . filename_len = path_len	562:1:15732:15761	1203031	76	True				
ANR	1203244	AssignmentExpression	etemp . filename_len = path_len		1203031	0		=			
ANR	1203245	MemberAccess	etemp . filename_len		1203031	0					
ANR	1203246	Identifier	etemp		1203031	0					
ANR	1203247	Identifier	filename_len		1203031	1					
ANR	1203248	Identifier	path_len		1203031	1					
ANR	1203249	ExpressionStatement	etemp . fp_type = PHAR_MOD	563:1:15764:15788	1203031	77	True				
ANR	1203250	AssignmentExpression	etemp . fp_type = PHAR_MOD		1203031	0		=			
ANR	1203251	MemberAccess	etemp . fp_type		1203031	0					
ANR	1203252	Identifier	etemp		1203031	0					
ANR	1203253	Identifier	fp_type		1203031	1					
ANR	1203254	Identifier	PHAR_MOD		1203031	1					
ANR	1203255	ExpressionStatement	etemp . fp = php_stream_fopen_tmpfile ( )	564:1:15791:15828	1203031	78	True				
ANR	1203256	AssignmentExpression	etemp . fp = php_stream_fopen_tmpfile ( )		1203031	0		=			
ANR	1203257	MemberAccess	etemp . fp		1203031	0					
ANR	1203258	Identifier	etemp		1203031	0					
ANR	1203259	Identifier	fp		1203031	1					
ANR	1203260	CallExpression	php_stream_fopen_tmpfile ( )		1203031	1					
ANR	1203261	Callee	php_stream_fopen_tmpfile		1203031	0					
ANR	1203262	Identifier	php_stream_fopen_tmpfile		1203031	0					
ANR	1203263	ArgumentList			1203031	1					
ANR	1203264	IfStatement	if ( ! etemp . fp )		1203031	79					
ANR	1203265	Condition	! etemp . fp	566:5:15836:15844	1203031	0	True				
ANR	1203266	UnaryOperationExpression	! etemp . fp		1203031	0					
ANR	1203267	UnaryOperator	!		1203031	0					
ANR	1203268	MemberAccess	etemp . fp		1203031	1					
ANR	1203269	Identifier	etemp		1203031	0					
ANR	1203270	Identifier	fp		1203031	1					
ANR	1203271	CompoundStatement		47:16:1281:1281	1203031	1					
ANR	1203272	IfStatement	if ( error )		1203031	0					
ANR	1203273	Condition	error	567:6:15855:15859	1203031	0	True				
ANR	1203274	Identifier	error		1203031	0					
ANR	1203275	CompoundStatement		48:13:1296:1296	1203031	1					
ANR	1203276	ExpressionStatement	"spprintf ( error , 0 , ""phar error: unable to create temporary file"" )"	568:3:15867:15932	1203031	0	True				
ANR	1203277	CallExpression	"spprintf ( error , 0 , ""phar error: unable to create temporary file"" )"		1203031	0					
ANR	1203278	Callee	spprintf		1203031	0					
ANR	1203279	Identifier	spprintf		1203031	0					
ANR	1203280	ArgumentList	error		1203031	1					
ANR	1203281	Argument	error		1203031	0					
ANR	1203282	Identifier	error		1203031	0					
ANR	1203283	Argument	0		1203031	1					
ANR	1203284	PrimaryExpression	0		1203031	0					
ANR	1203285	Argument	"""phar error: unable to create temporary file"""		1203031	2					
ANR	1203286	PrimaryExpression	"""phar error: unable to create temporary file"""		1203031	0					
ANR	1203287	ExpressionStatement	efree ( ret )	570:2:15940:15950	1203031	1	True				
ANR	1203288	CallExpression	efree ( ret )		1203031	0					
ANR	1203289	Callee	efree		1203031	0					
ANR	1203290	Identifier	efree		1203031	0					
ANR	1203291	ArgumentList	ret		1203031	1					
ANR	1203292	Argument	ret		1203031	0					
ANR	1203293	Identifier	ret		1203031	0					
ANR	1203294	ReturnStatement	return NULL ;	571:2:15954:15965	1203031	2	True				
ANR	1203295	Identifier	NULL		1203031	0					
ANR	1203296	ExpressionStatement	etemp . fp_refcount = 1	574:1:15972:15993	1203031	80	True				
ANR	1203297	AssignmentExpression	etemp . fp_refcount = 1		1203031	0		=			
ANR	1203298	MemberAccess	etemp . fp_refcount		1203031	0					
ANR	1203299	Identifier	etemp		1203031	0					
ANR	1203300	Identifier	fp_refcount		1203031	1					
ANR	1203301	PrimaryExpression	1		1203031	1					
ANR	1203302	IfStatement	if ( allow_dir == 2 )		1203031	81					
ANR	1203303	Condition	allow_dir == 2	576:5:16001:16014	1203031	0	True				
ANR	1203304	EqualityExpression	allow_dir == 2		1203031	0		==			
ANR	1203305	Identifier	allow_dir		1203031	0					
ANR	1203306	PrimaryExpression	2		1203031	1					
ANR	1203307	CompoundStatement		57:21:1451:1451	1203031	1					
ANR	1203308	ExpressionStatement	etemp . is_dir = 1	577:2:16021:16037	1203031	0	True				
ANR	1203309	AssignmentExpression	etemp . is_dir = 1		1203031	0		=			
ANR	1203310	MemberAccess	etemp . is_dir		1203031	0					
ANR	1203311	Identifier	etemp		1203031	0					
ANR	1203312	Identifier	is_dir		1203031	1					
ANR	1203313	PrimaryExpression	1		1203031	1					
ANR	1203314	ExpressionStatement	etemp . flags = etemp . old_flags = PHAR_ENT_PERM_DEF_DIR	578:2:16041:16094	1203031	1	True				
ANR	1203315	AssignmentExpression	etemp . flags = etemp . old_flags = PHAR_ENT_PERM_DEF_DIR		1203031	0		=			
ANR	1203316	MemberAccess	etemp . flags		1203031	0					
ANR	1203317	Identifier	etemp		1203031	0					
ANR	1203318	Identifier	flags		1203031	1					
ANR	1203319	AssignmentExpression	etemp . old_flags = PHAR_ENT_PERM_DEF_DIR		1203031	1		=			
ANR	1203320	MemberAccess	etemp . old_flags		1203031	0					
ANR	1203321	Identifier	etemp		1203031	0					
ANR	1203322	Identifier	old_flags		1203031	1					
ANR	1203323	Identifier	PHAR_ENT_PERM_DEF_DIR		1203031	1					
ANR	1203324	ElseStatement	else		1203031	0					
ANR	1203325	CompoundStatement		60:8:1538:1538	1203031	0					
ANR	1203326	ExpressionStatement	etemp . flags = etemp . old_flags = PHAR_ENT_PERM_DEF_FILE	580:2:16108:16162	1203031	0	True				
ANR	1203327	AssignmentExpression	etemp . flags = etemp . old_flags = PHAR_ENT_PERM_DEF_FILE		1203031	0		=			
ANR	1203328	MemberAccess	etemp . flags		1203031	0					
ANR	1203329	Identifier	etemp		1203031	0					
ANR	1203330	Identifier	flags		1203031	1					
ANR	1203331	AssignmentExpression	etemp . old_flags = PHAR_ENT_PERM_DEF_FILE		1203031	1		=			
ANR	1203332	MemberAccess	etemp . old_flags		1203031	0					
ANR	1203333	Identifier	etemp		1203031	0					
ANR	1203334	Identifier	old_flags		1203031	1					
ANR	1203335	Identifier	PHAR_ENT_PERM_DEF_FILE		1203031	1					
ANR	1203336	IfStatement	if ( is_dir )		1203031	82					
ANR	1203337	Condition	is_dir	582:5:16172:16177	1203031	0	True				
ANR	1203338	Identifier	is_dir		1203031	0					
ANR	1203339	CompoundStatement		63:13:1614:1614	1203031	1					
ANR	1203340	ExpressionStatement	etemp . filename_len --	583:2:16184:16204	1203031	0	True				
ANR	1203341	PostIncDecOperationExpression	etemp . filename_len --		1203031	0					
ANR	1203342	MemberAccess	etemp . filename_len		1203031	0					
ANR	1203343	Identifier	etemp		1203031	0					
ANR	1203344	Identifier	filename_len		1203031	1					
ANR	1203345	IncDec	--		1203031	1					
ANR	1203346	ExpressionStatement	path_len --	584:2:16231:16241	1203031	1	True				
ANR	1203347	PostIncDecOperationExpression	path_len --		1203031	0					
ANR	1203348	Identifier	path_len		1203031	0					
ANR	1203349	IncDec	--		1203031	1					
ANR	1203350	Statement	phar_add_virtual_dirs	587:1:16248:16268	1203031	83	True				
ANR	1203351	Statement	(	587:22:16269:16269	1203031	84	True				
ANR	1203352	Statement	phar	587:23:16270:16273	1203031	85	True				
ANR	1203353	Statement	","	587:27:16274:16274	1203031	86	True				
ANR	1203354	Statement	path	587:29:16276:16279	1203031	87	True				
ANR	1203355	Statement	","	587:33:16280:16280	1203031	88	True				
ANR	1203356	Statement	path_len	587:35:16282:16289	1203031	89	True				
ANR	1203357	Statement	TSRMLS_CC	587:44:16291:16299	1203031	90	True				
ANR	1203358	Statement	)	587:53:16300:16300	1203031	91	True				
ANR	1203359	ExpressionStatement		587:54:16301:16301	1203031	92	True				
ANR	1203360	ExpressionStatement	etemp . is_modified = 1	588:1:16304:16325	1203031	93	True				
ANR	1203361	AssignmentExpression	etemp . is_modified = 1		1203031	0		=			
ANR	1203362	MemberAccess	etemp . is_modified		1203031	0					
ANR	1203363	Identifier	etemp		1203031	0					
ANR	1203364	Identifier	is_modified		1203031	1					
ANR	1203365	PrimaryExpression	1		1203031	1					
ANR	1203366	ExpressionStatement	etemp . timestamp = time ( 0 )	589:1:16328:16353	1203031	94	True				
ANR	1203367	AssignmentExpression	etemp . timestamp = time ( 0 )		1203031	0		=			
ANR	1203368	MemberAccess	etemp . timestamp		1203031	0					
ANR	1203369	Identifier	etemp		1203031	0					
ANR	1203370	Identifier	timestamp		1203031	1					
ANR	1203371	CallExpression	time ( 0 )		1203031	1					
ANR	1203372	Callee	time		1203031	0					
ANR	1203373	Identifier	time		1203031	0					
ANR	1203374	ArgumentList	0		1203031	1					
ANR	1203375	Argument	0		1203031	0					
ANR	1203376	PrimaryExpression	0		1203031	0					
ANR	1203377	ExpressionStatement	etemp . is_crc_checked = 1	590:1:16356:16380	1203031	95	True				
ANR	1203378	AssignmentExpression	etemp . is_crc_checked = 1		1203031	0		=			
ANR	1203379	MemberAccess	etemp . is_crc_checked		1203031	0					
ANR	1203380	Identifier	etemp		1203031	0					
ANR	1203381	Identifier	is_crc_checked		1203031	1					
ANR	1203382	PrimaryExpression	1		1203031	1					
ANR	1203383	ExpressionStatement	etemp . phar = phar	591:1:16383:16400	1203031	96	True				
ANR	1203384	AssignmentExpression	etemp . phar = phar		1203031	0		=			
ANR	1203385	MemberAccess	etemp . phar		1203031	0					
ANR	1203386	Identifier	etemp		1203031	0					
ANR	1203387	Identifier	phar		1203031	1					
ANR	1203388	Identifier	phar		1203031	1					
ANR	1203389	ExpressionStatement	"etemp . filename = estrndup ( path , path_len )"	592:1:16403:16444	1203031	97	True				
ANR	1203390	AssignmentExpression	"etemp . filename = estrndup ( path , path_len )"		1203031	0		=			
ANR	1203391	MemberAccess	etemp . filename		1203031	0					
ANR	1203392	Identifier	etemp		1203031	0					
ANR	1203393	Identifier	filename		1203031	1					
ANR	1203394	CallExpression	"estrndup ( path , path_len )"		1203031	1					
ANR	1203395	Callee	estrndup		1203031	0					
ANR	1203396	Identifier	estrndup		1203031	0					
ANR	1203397	ArgumentList	path		1203031	1					
ANR	1203398	Argument	path		1203031	0					
ANR	1203399	Identifier	path		1203031	0					
ANR	1203400	Argument	path_len		1203031	1					
ANR	1203401	Identifier	path_len		1203031	0					
ANR	1203402	ExpressionStatement	etemp . is_zip = phar -> is_zip	593:1:16447:16474	1203031	98	True				
ANR	1203403	AssignmentExpression	etemp . is_zip = phar -> is_zip		1203031	0		=			
ANR	1203404	MemberAccess	etemp . is_zip		1203031	0					
ANR	1203405	Identifier	etemp		1203031	0					
ANR	1203406	Identifier	is_zip		1203031	1					
ANR	1203407	PtrMemberAccess	phar -> is_zip		1203031	1					
ANR	1203408	Identifier	phar		1203031	0					
ANR	1203409	Identifier	is_zip		1203031	1					
ANR	1203410	IfStatement	if ( phar -> is_tar )		1203031	99					
ANR	1203411	Condition	phar -> is_tar	595:5:16482:16493	1203031	0	True				
ANR	1203412	PtrMemberAccess	phar -> is_tar		1203031	0					
ANR	1203413	Identifier	phar		1203031	0					
ANR	1203414	Identifier	is_tar		1203031	1					
ANR	1203415	CompoundStatement		76:19:1930:1930	1203031	1					
ANR	1203416	ExpressionStatement	etemp . is_tar = phar -> is_tar	596:2:16500:16527	1203031	0	True				
ANR	1203417	AssignmentExpression	etemp . is_tar = phar -> is_tar		1203031	0		=			
ANR	1203418	MemberAccess	etemp . is_tar		1203031	0					
ANR	1203419	Identifier	etemp		1203031	0					
ANR	1203420	Identifier	is_tar		1203031	1					
ANR	1203421	PtrMemberAccess	phar -> is_tar		1203031	1					
ANR	1203422	Identifier	phar		1203031	0					
ANR	1203423	Identifier	is_tar		1203031	1					
ANR	1203424	ExpressionStatement	etemp . tar_type = etemp . is_dir ? TAR_DIR : TAR_FILE	597:2:16531:16581	1203031	1	True				
ANR	1203425	AssignmentExpression	etemp . tar_type = etemp . is_dir ? TAR_DIR : TAR_FILE		1203031	0		=			
ANR	1203426	MemberAccess	etemp . tar_type		1203031	0					
ANR	1203427	Identifier	etemp		1203031	0					
ANR	1203428	Identifier	tar_type		1203031	1					
ANR	1203429	ConditionalExpression	etemp . is_dir ? TAR_DIR : TAR_FILE		1203031	1					
ANR	1203430	Condition	etemp . is_dir		1203031	0					
ANR	1203431	MemberAccess	etemp . is_dir		1203031	0					
ANR	1203432	Identifier	etemp		1203031	0					
ANR	1203433	Identifier	is_dir		1203031	1					
ANR	1203434	Identifier	TAR_DIR		1203031	1					
ANR	1203435	Identifier	TAR_FILE		1203031	2					
ANR	1203436	IfStatement	"if ( FAILURE == zend_hash_add ( & phar -> manifest , etemp . filename , path_len , ( void * ) & etemp , sizeof ( phar_entry_info ) , ( void * * ) & entry ) )"		1203031	100					
ANR	1203437	Condition	"FAILURE == zend_hash_add ( & phar -> manifest , etemp . filename , path_len , ( void * ) & etemp , sizeof ( phar_entry_info ) , ( void * * ) & entry )"	600:5:16592:16716	1203031	0	True				
ANR	1203438	EqualityExpression	"FAILURE == zend_hash_add ( & phar -> manifest , etemp . filename , path_len , ( void * ) & etemp , sizeof ( phar_entry_info ) , ( void * * ) & entry )"		1203031	0		==			
ANR	1203439	Identifier	FAILURE		1203031	0					
ANR	1203440	CallExpression	"zend_hash_add ( & phar -> manifest , etemp . filename , path_len , ( void * ) & etemp , sizeof ( phar_entry_info ) , ( void * * ) & entry )"		1203031	1					
ANR	1203441	Callee	zend_hash_add		1203031	0					
ANR	1203442	Identifier	zend_hash_add		1203031	0					
ANR	1203443	ArgumentList	& phar -> manifest		1203031	1					
ANR	1203444	Argument	& phar -> manifest		1203031	0					
ANR	1203445	UnaryOperationExpression	& phar -> manifest		1203031	0					
ANR	1203446	UnaryOperator	&		1203031	0					
ANR	1203447	PtrMemberAccess	phar -> manifest		1203031	1					
ANR	1203448	Identifier	phar		1203031	0					
ANR	1203449	Identifier	manifest		1203031	1					
ANR	1203450	Argument	etemp . filename		1203031	1					
ANR	1203451	MemberAccess	etemp . filename		1203031	0					
ANR	1203452	Identifier	etemp		1203031	0					
ANR	1203453	Identifier	filename		1203031	1					
ANR	1203454	Argument	path_len		1203031	2					
ANR	1203455	Identifier	path_len		1203031	0					
ANR	1203456	Argument	( void * ) & etemp		1203031	3					
ANR	1203457	CastExpression	( void * ) & etemp		1203031	0					
ANR	1203458	CastTarget	void *		1203031	0					
ANR	1203459	UnaryOperationExpression	& etemp		1203031	1					
ANR	1203460	UnaryOperator	&		1203031	0					
ANR	1203461	Identifier	etemp		1203031	1					
ANR	1203462	Argument	sizeof ( phar_entry_info )		1203031	4					
ANR	1203463	SizeofExpression	sizeof ( phar_entry_info )		1203031	0					
ANR	1203464	Sizeof	sizeof		1203031	0					
ANR	1203465	SizeofOperand	phar_entry_info		1203031	1					
ANR	1203466	Argument	( void * * ) & entry		1203031	5					
ANR	1203467	CastExpression	( void * * ) & entry		1203031	0					
ANR	1203468	CastTarget	void * *		1203031	0					
ANR	1203469	UnaryOperationExpression	& entry		1203031	1					
ANR	1203470	UnaryOperator	&		1203031	0					
ANR	1203471	Identifier	entry		1203031	1					
ANR	1203472	CompoundStatement		81:132:2153:2153	1203031	1					
ANR	1203473	ExpressionStatement	php_stream_close ( etemp . fp )	601:2:16723:16749	1203031	0	True				
ANR	1203474	CallExpression	php_stream_close ( etemp . fp )		1203031	0					
ANR	1203475	Callee	php_stream_close		1203031	0					
ANR	1203476	Identifier	php_stream_close		1203031	0					
ANR	1203477	ArgumentList	etemp . fp		1203031	1					
ANR	1203478	Argument	etemp . fp		1203031	0					
ANR	1203479	MemberAccess	etemp . fp		1203031	0					
ANR	1203480	Identifier	etemp		1203031	0					
ANR	1203481	Identifier	fp		1203031	1					
ANR	1203482	IfStatement	if ( error )		1203031	1					
ANR	1203483	Condition	error	602:6:16757:16761	1203031	0	True				
ANR	1203484	Identifier	error		1203031	0					
ANR	1203485	CompoundStatement		83:13:2198:2198	1203031	1					
ANR	1203486	ExpressionStatement	"spprintf ( error , 0 , ""phar error: unable to add new entry \\""%s\\"" to phar \\""%s\\"""" , etemp . filename , phar -> fname )"	603:3:16769:16877	1203031	0	True				
ANR	1203487	CallExpression	"spprintf ( error , 0 , ""phar error: unable to add new entry \\""%s\\"" to phar \\""%s\\"""" , etemp . filename , phar -> fname )"		1203031	0					
ANR	1203488	Callee	spprintf		1203031	0					
ANR	1203489	Identifier	spprintf		1203031	0					
ANR	1203490	ArgumentList	error		1203031	1					
ANR	1203491	Argument	error		1203031	0					
ANR	1203492	Identifier	error		1203031	0					
ANR	1203493	Argument	0		1203031	1					
ANR	1203494	PrimaryExpression	0		1203031	0					
ANR	1203495	Argument	"""phar error: unable to add new entry \\""%s\\"" to phar \\""%s\\"""""		1203031	2					
ANR	1203496	PrimaryExpression	"""phar error: unable to add new entry \\""%s\\"" to phar \\""%s\\"""""		1203031	0					
ANR	1203497	Argument	etemp . filename		1203031	3					
ANR	1203498	MemberAccess	etemp . filename		1203031	0					
ANR	1203499	Identifier	etemp		1203031	0					
ANR	1203500	Identifier	filename		1203031	1					
ANR	1203501	Argument	phar -> fname		1203031	4					
ANR	1203502	PtrMemberAccess	phar -> fname		1203031	0					
ANR	1203503	Identifier	phar		1203031	0					
ANR	1203504	Identifier	fname		1203031	1					
ANR	1203505	ExpressionStatement	efree ( ret )	605:2:16885:16895	1203031	2	True				
ANR	1203506	CallExpression	efree ( ret )		1203031	0					
ANR	1203507	Callee	efree		1203031	0					
ANR	1203508	Identifier	efree		1203031	0					
ANR	1203509	ArgumentList	ret		1203031	1					
ANR	1203510	Argument	ret		1203031	0					
ANR	1203511	Identifier	ret		1203031	0					
ANR	1203512	ExpressionStatement	efree ( etemp . filename )	606:2:16899:16920	1203031	3	True				
ANR	1203513	CallExpression	efree ( etemp . filename )		1203031	0					
ANR	1203514	Callee	efree		1203031	0					
ANR	1203515	Identifier	efree		1203031	0					
ANR	1203516	ArgumentList	etemp . filename		1203031	1					
ANR	1203517	Argument	etemp . filename		1203031	0					
ANR	1203518	MemberAccess	etemp . filename		1203031	0					
ANR	1203519	Identifier	etemp		1203031	0					
ANR	1203520	Identifier	filename		1203031	1					
ANR	1203521	ReturnStatement	return NULL ;	607:2:16924:16935	1203031	4	True				
ANR	1203522	Identifier	NULL		1203031	0					
ANR	1203523	IfStatement	if ( ! entry )		1203031	101					
ANR	1203524	Condition	! entry	610:5:16946:16951	1203031	0	True				
ANR	1203525	UnaryOperationExpression	! entry		1203031	0					
ANR	1203526	UnaryOperator	!		1203031	0					
ANR	1203527	Identifier	entry		1203031	1					
ANR	1203528	CompoundStatement		91:13:2388:2388	1203031	1					
ANR	1203529	ExpressionStatement	php_stream_close ( etemp . fp )	611:2:16958:16984	1203031	0	True				
ANR	1203530	CallExpression	php_stream_close ( etemp . fp )		1203031	0					
ANR	1203531	Callee	php_stream_close		1203031	0					
ANR	1203532	Identifier	php_stream_close		1203031	0					
ANR	1203533	ArgumentList	etemp . fp		1203031	1					
ANR	1203534	Argument	etemp . fp		1203031	0					
ANR	1203535	MemberAccess	etemp . fp		1203031	0					
ANR	1203536	Identifier	etemp		1203031	0					
ANR	1203537	Identifier	fp		1203031	1					
ANR	1203538	ExpressionStatement	efree ( etemp . filename )	612:2:16988:17009	1203031	1	True				
ANR	1203539	CallExpression	efree ( etemp . filename )		1203031	0					
ANR	1203540	Callee	efree		1203031	0					
ANR	1203541	Identifier	efree		1203031	0					
ANR	1203542	ArgumentList	etemp . filename		1203031	1					
ANR	1203543	Argument	etemp . filename		1203031	0					
ANR	1203544	MemberAccess	etemp . filename		1203031	0					
ANR	1203545	Identifier	etemp		1203031	0					
ANR	1203546	Identifier	filename		1203031	1					
ANR	1203547	ExpressionStatement	efree ( ret )	613:2:17013:17023	1203031	2	True				
ANR	1203548	CallExpression	efree ( ret )		1203031	0					
ANR	1203549	Callee	efree		1203031	0					
ANR	1203550	Identifier	efree		1203031	0					
ANR	1203551	ArgumentList	ret		1203031	1					
ANR	1203552	Argument	ret		1203031	0					
ANR	1203553	Identifier	ret		1203031	0					
ANR	1203554	ReturnStatement	return NULL ;	614:2:17027:17038	1203031	3	True				
ANR	1203555	Identifier	NULL		1203031	0					
ANR	1203556	ExpressionStatement	++ ( phar -> refcount )	617:1:17045:17063	1203031	102	True				
ANR	1203557	UnaryExpression	++ ( phar -> refcount )		1203031	0					
ANR	1203558	IncDec	++		1203031	0					
ANR	1203559	PtrMemberAccess	phar -> refcount		1203031	1					
ANR	1203560	Identifier	phar		1203031	0					
ANR	1203561	Identifier	refcount		1203031	1					
ANR	1203562	ExpressionStatement	ret -> phar = phar	618:1:17066:17082	1203031	103	True				
ANR	1203563	AssignmentExpression	ret -> phar = phar		1203031	0		=			
ANR	1203564	PtrMemberAccess	ret -> phar		1203031	0					
ANR	1203565	Identifier	ret		1203031	0					
ANR	1203566	Identifier	phar		1203031	1					
ANR	1203567	Identifier	phar		1203031	1					
ANR	1203568	ExpressionStatement	ret -> fp = entry -> fp	619:1:17085:17104	1203031	104	True				
ANR	1203569	AssignmentExpression	ret -> fp = entry -> fp		1203031	0		=			
ANR	1203570	PtrMemberAccess	ret -> fp		1203031	0					
ANR	1203571	Identifier	ret		1203031	0					
ANR	1203572	Identifier	fp		1203031	1					
ANR	1203573	PtrMemberAccess	entry -> fp		1203031	1					
ANR	1203574	Identifier	entry		1203031	0					
ANR	1203575	Identifier	fp		1203031	1					
ANR	1203576	ExpressionStatement	ret -> position = ret -> zero = 0	620:1:17107:17136	1203031	105	True				
ANR	1203577	AssignmentExpression	ret -> position = ret -> zero = 0		1203031	0		=			
ANR	1203578	PtrMemberAccess	ret -> position		1203031	0					
ANR	1203579	Identifier	ret		1203031	0					
ANR	1203580	Identifier	position		1203031	1					
ANR	1203581	AssignmentExpression	ret -> zero = 0		1203031	1		=			
ANR	1203582	PtrMemberAccess	ret -> zero		1203031	0					
ANR	1203583	Identifier	ret		1203031	0					
ANR	1203584	Identifier	zero		1203031	1					
ANR	1203585	PrimaryExpression	0		1203031	1					
ANR	1203586	ExpressionStatement	ret -> for_write = 1	621:1:17139:17157	1203031	106	True				
ANR	1203587	AssignmentExpression	ret -> for_write = 1		1203031	0		=			
ANR	1203588	PtrMemberAccess	ret -> for_write		1203031	0					
ANR	1203589	Identifier	ret		1203031	0					
ANR	1203590	Identifier	for_write		1203031	1					
ANR	1203591	PrimaryExpression	1		1203031	1					
ANR	1203592	ExpressionStatement	ret -> is_zip = entry -> is_zip	622:1:17160:17187	1203031	107	True				
ANR	1203593	AssignmentExpression	ret -> is_zip = entry -> is_zip		1203031	0		=			
ANR	1203594	PtrMemberAccess	ret -> is_zip		1203031	0					
ANR	1203595	Identifier	ret		1203031	0					
ANR	1203596	Identifier	is_zip		1203031	1					
ANR	1203597	PtrMemberAccess	entry -> is_zip		1203031	1					
ANR	1203598	Identifier	entry		1203031	0					
ANR	1203599	Identifier	is_zip		1203031	1					
ANR	1203600	ExpressionStatement	ret -> is_tar = entry -> is_tar	623:1:17190:17217	1203031	108	True				
ANR	1203601	AssignmentExpression	ret -> is_tar = entry -> is_tar		1203031	0		=			
ANR	1203602	PtrMemberAccess	ret -> is_tar		1203031	0					
ANR	1203603	Identifier	ret		1203031	0					
ANR	1203604	Identifier	is_tar		1203031	1					
ANR	1203605	PtrMemberAccess	entry -> is_tar		1203031	1					
ANR	1203606	Identifier	entry		1203031	0					
ANR	1203607	Identifier	is_tar		1203031	1					
ANR	1203608	ExpressionStatement	ret -> internal_file = entry	624:1:17220:17246	1203031	109	True				
ANR	1203609	AssignmentExpression	ret -> internal_file = entry		1203031	0		=			
ANR	1203610	PtrMemberAccess	ret -> internal_file		1203031	0					
ANR	1203611	Identifier	ret		1203031	0					
ANR	1203612	Identifier	internal_file		1203031	1					
ANR	1203613	Identifier	entry		1203031	1					
ANR	1203614	ReturnStatement	return ret ;	626:1:17250:17260	1203031	110	True				
ANR	1203615	Identifier	ret		1203031	0					
ANR	1203616	ReturnType	phar_entry_data *		1203031	1					
ANR	1203617	Identifier	phar_get_or_create_entry_data		1203031	2					
ANR	1203618	ParameterList	"char * fname , int fname_len , char * path , int path_len , const char * mode , char allow_dir , char * * error , int security TSRMLS_DC"		1203031	3					
ANR	1203619	Parameter	char * fname	519:47:14429:14439	1203031	0	True				
ANR	1203620	ParameterType	char *		1203031	0					
ANR	1203621	Identifier	fname		1203031	1					
ANR	1203622	Parameter	int fname_len	519:60:14442:14454	1203031	1	True				
ANR	1203623	ParameterType	int		1203031	0					
ANR	1203624	Identifier	fname_len		1203031	1					
ANR	1203625	Parameter	char * path	519:75:14457:14466	1203031	2	True				
ANR	1203626	ParameterType	char *		1203031	0					
ANR	1203627	Identifier	path		1203031	1					
ANR	1203628	Parameter	int path_len	519:87:14469:14480	1203031	3	True				
ANR	1203629	ParameterType	int		1203031	0					
ANR	1203630	Identifier	path_len		1203031	1					
ANR	1203631	Parameter	const char * mode	519:101:14483:14498	1203031	4	True				
ANR	1203632	ParameterType	const char *		1203031	0					
ANR	1203633	Identifier	mode		1203031	1					
ANR	1203634	Parameter	char allow_dir	519:119:14501:14514	1203031	5	True				
ANR	1203635	ParameterType	char		1203031	0					
ANR	1203636	Identifier	allow_dir		1203031	1					
ANR	1203637	Parameter	char * * error	519:135:14517:14528	1203031	6	True				
ANR	1203638	ParameterType	char * *		1203031	0					
ANR	1203639	Identifier	error		1203031	1					
ANR	1203640	Parameter	int security TSRMLS_DC	519:149:14531:14552	1203031	7	True				
ANR	1203641	ParameterType	int security		1203031	0					
ANR	1203642	Identifier	TSRMLS_DC		1203031	1					
ANR	1203643	CFGEntryNode	ENTRY		1203031		True				
ANR	1203644	CFGExitNode	EXIT		1203031		True				
ANR	1203645	Symbol	ret -> zero		1203031						
ANR	1203646	Symbol	* path_len		1203031						
ANR	1203647	Symbol	etemp . filename		1203031						
ANR	1203648	Symbol	entry -> is_zip		1203031						
ANR	1203649	Symbol	ret -> phar		1203031						
ANR	1203650	Symbol	TSRMLS_DC		1203031						
ANR	1203651	Symbol	etemp . timestamp		1203031						
ANR	1203652	Symbol	ret -> fp		1203031						
ANR	1203653	Symbol	php_stream_fopen_tmpfile		1203031						
ANR	1203654	Symbol	mode		1203031						
ANR	1203655	Symbol	& path		1203031						
ANR	1203656	Symbol	path		1203031						
ANR	1203657	Symbol	pcr_is_ok		1203031						
ANR	1203658	Symbol	TAR_DIR		1203031						
ANR	1203659	Symbol	entry -> is_tar		1203031						
ANR	1203660	Symbol	PHAR_ENT_PERM_DEF_FILE		1203031						
ANR	1203661	Symbol	phar		1203031						
ANR	1203662	Symbol	etemp . tar_type		1203031						
ANR	1203663	Symbol	ret		1203031						
ANR	1203664	Symbol	fname		1203031						
ANR	1203665	Symbol	NULL		1203031						
ANR	1203666	Symbol	& pcr_error		1203031						
ANR	1203667	Symbol	ret -> for_write		1203031						
ANR	1203668	Symbol	allow_dir		1203031						
ANR	1203669	Symbol	PHAR_ENT_PERM_DEF_DIR		1203031						
ANR	1203670	Symbol	etemp . fp_type		1203031						
ANR	1203671	Symbol	entry		1203031						
ANR	1203672	Symbol	& etemp		1203031						
ANR	1203673	Symbol	etemp . is_crc_checked		1203031						
ANR	1203674	Symbol	etemp . is_zip		1203031						
ANR	1203675	Symbol	phar -> is_tar		1203031						
ANR	1203676	Symbol	etemp . phar		1203031						
ANR	1203677	Symbol	& path_len		1203031						
ANR	1203678	Symbol	etemp . is_tar		1203031						
ANR	1203679	Symbol	fname_len		1203031						
ANR	1203680	Symbol	phar -> is_zip		1203031						
ANR	1203681	Symbol	etemp . flags		1203031						
ANR	1203682	Symbol	etemp . is_dir		1203031						
ANR	1203683	Symbol	& phar -> manifest		1203031						
ANR	1203684	Symbol	pcr_error		1203031						
ANR	1203685	Symbol	* ret		1203031						
ANR	1203686	Symbol	error		1203031						
ANR	1203687	Symbol	etemp . is_modified		1203031						
ANR	1203688	Symbol	emalloc		1203031						
ANR	1203689	Symbol	etemp . fp		1203031						
ANR	1203690	Symbol	estrndup		1203031						
ANR	1203691	Symbol	ret -> internal_file		1203031						
ANR	1203692	Symbol	is_dir		1203031						
ANR	1203693	Symbol	TAR_FILE		1203031						
ANR	1203694	Symbol	ret -> is_zip		1203031						
ANR	1203695	Symbol	phar_path_check		1203031						
ANR	1203696	Symbol	* entry		1203031						
ANR	1203697	Symbol	ret -> position		1203031						
ANR	1203698	Symbol	path_len		1203031						
ANR	1203699	Symbol	ret -> is_tar		1203031						
ANR	1203700	Symbol	etemp . filename_len		1203031						
ANR	1203701	Symbol	etemp . old_flags		1203031						
ANR	1203702	Symbol	FAILURE		1203031						
ANR	1203703	Symbol	& entry		1203031						
ANR	1203704	Symbol	phar -> fname		1203031						
ANR	1203705	Symbol	PHAR_MOD		1203031						
ANR	1203706	Symbol	zend_hash_add		1203031						
ANR	1203707	Symbol	* path		1203031						
ANR	1203708	Symbol	etemp . fp_refcount		1203031						
ANR	1203709	Symbol	time		1203031						
ANR	1203710	Symbol	etemp		1203031						
ANR	1203711	Symbol	* phar		1203031						
ANR	1203712	Symbol	entry -> fp		1203031						
ANR	1203713	DeclStmt									
ANR	1203714	Decl							phar_entry_info	phar_entry_info *	link
ANR	1203715	Function	phar_open_entry_fp	696:0:19029:22797							
ANR	1203716	FunctionDef	"phar_open_entry_fp (phar_entry_info * entry , char * * error , int follow_links TSRMLS_DC)"		1203715	0					
ANR	1203717	CompoundStatement		697:0:19128:22797	1203715	0					
ANR	1203718	IdentifierDeclStatement	php_stream_filter * filter ;	698:1:19131:19156	1203715	0	True				
ANR	1203719	IdentifierDecl	* filter		1203715	0					
ANR	1203720	IdentifierDeclType	php_stream_filter *		1203715	0					
ANR	1203721	Identifier	filter		1203715	1					
ANR	1203722	IdentifierDeclStatement	phar_archive_data * phar = entry -> phar ;	699:1:19159:19196	1203715	1	True				
ANR	1203723	IdentifierDecl	* phar = entry -> phar		1203715	0					
ANR	1203724	IdentifierDeclType	phar_archive_data *		1203715	0					
ANR	1203725	Identifier	phar		1203715	1					
ANR	1203726	AssignmentExpression	* phar = entry -> phar		1203715	2		=			
ANR	1203727	Identifier	phar		1203715	0					
ANR	1203728	PtrMemberAccess	entry -> phar		1203715	1					
ANR	1203729	Identifier	entry		1203715	0					
ANR	1203730	Identifier	phar		1203715	1					
ANR	1203731	IdentifierDeclStatement	char * filtername ;	700:1:19199:19215	1203715	2	True				
ANR	1203732	IdentifierDecl	* filtername		1203715	0					
ANR	1203733	IdentifierDeclType	char *		1203715	0					
ANR	1203734	Identifier	filtername		1203715	1					
ANR	1203735	IdentifierDeclStatement	off_t loc ;	701:1:19218:19227	1203715	3	True				
ANR	1203736	IdentifierDecl	loc		1203715	0					
ANR	1203737	IdentifierDeclType	off_t		1203715	0					
ANR	1203738	Identifier	loc		1203715	1					
ANR	1203739	IdentifierDeclStatement	php_stream * ufp ;	702:1:19230:19245	1203715	4	True				
ANR	1203740	IdentifierDecl	* ufp		1203715	0					
ANR	1203741	IdentifierDeclType	php_stream *		1203715	0					
ANR	1203742	Identifier	ufp		1203715	1					
ANR	1203743	IdentifierDeclStatement	phar_entry_data dummy ;	703:1:19248:19269	1203715	5	True				
ANR	1203744	IdentifierDecl	dummy		1203715	0					
ANR	1203745	IdentifierDeclType	phar_entry_data		1203715	0					
ANR	1203746	Identifier	dummy		1203715	1					
ANR	1203747	IfStatement	if ( follow_links && entry -> link )		1203715	6					
ANR	1203748	Condition	follow_links && entry -> link	705:5:19277:19303	1203715	0	True				
ANR	1203749	AndExpression	follow_links && entry -> link		1203715	0		&&			
ANR	1203750	Identifier	follow_links		1203715	0					
ANR	1203751	PtrMemberAccess	entry -> link		1203715	1					
ANR	1203752	Identifier	entry		1203715	0					
ANR	1203753	Identifier	link		1203715	1					
ANR	1203754	CompoundStatement		9:34:177:177	1203715	1					
ANR	1203755	Statement	phar_entry_info	706:2:19310:19324	1203715	0	True				
ANR	1203756	Statement	*	706:18:19326:19326	1203715	1	True				
ANR	1203757	Statement	link_entry	706:19:19327:19336	1203715	2	True				
ANR	1203758	Statement	=	706:30:19338:19338	1203715	3	True				
ANR	1203759	Statement	phar_get_link_source	706:32:19340:19359	1203715	4	True				
ANR	1203760	Statement	(	706:52:19360:19360	1203715	5	True				
ANR	1203761	Statement	entry	706:53:19361:19365	1203715	6	True				
ANR	1203762	Statement	TSRMLS_CC	706:59:19367:19375	1203715	7	True				
ANR	1203763	Statement	)	706:68:19376:19376	1203715	8	True				
ANR	1203764	ExpressionStatement		706:69:19377:19377	1203715	9	True				
ANR	1203765	IfStatement	if ( link_entry && link_entry != entry )		1203715	10					
ANR	1203766	Condition	link_entry && link_entry != entry	707:6:19385:19417	1203715	0	True				
ANR	1203767	AndExpression	link_entry && link_entry != entry		1203715	0		&&			
ANR	1203768	Identifier	link_entry		1203715	0					
ANR	1203769	EqualityExpression	link_entry != entry		1203715	1		!=			
ANR	1203770	Identifier	link_entry		1203715	0					
ANR	1203771	Identifier	entry		1203715	1					
ANR	1203772	CompoundStatement		11:41:291:291	1203715	1					
ANR	1203773	Statement	return	708:3:19425:19430	1203715	0	True				
ANR	1203774	Statement	phar_open_entry_fp	708:10:19432:19449	1203715	1	True				
ANR	1203775	Statement	(	708:28:19450:19450	1203715	2	True				
ANR	1203776	Statement	link_entry	708:29:19451:19460	1203715	3	True				
ANR	1203777	Statement	","	708:39:19461:19461	1203715	4	True				
ANR	1203778	Statement	error	708:41:19463:19467	1203715	5	True				
ANR	1203779	Statement	","	708:46:19468:19468	1203715	6	True				
ANR	1203780	Statement	1	708:48:19470:19470	1203715	7	True				
ANR	1203781	Statement	TSRMLS_CC	708:50:19472:19480	1203715	8	True				
ANR	1203782	Statement	)	708:59:19481:19481	1203715	9	True				
ANR	1203783	ExpressionStatement		708:60:19482:19482	1203715	10	True				
ANR	1203784	IfStatement	if ( entry -> is_modified )		1203715	7					
ANR	1203785	Condition	entry -> is_modified	712:5:19497:19514	1203715	0	True				
ANR	1203786	PtrMemberAccess	entry -> is_modified		1203715	0					
ANR	1203787	Identifier	entry		1203715	0					
ANR	1203788	Identifier	is_modified		1203715	1					
ANR	1203789	CompoundStatement		16:25:388:388	1203715	1					
ANR	1203790	ReturnStatement	return SUCCESS ;	713:2:19521:19535	1203715	0	True				
ANR	1203791	Identifier	SUCCESS		1203715	0					
ANR	1203792	IfStatement	if ( entry -> fp_type == PHAR_TMP )		1203715	8					
ANR	1203793	Condition	entry -> fp_type == PHAR_TMP	716:5:19546:19571	1203715	0	True				
ANR	1203794	EqualityExpression	entry -> fp_type == PHAR_TMP		1203715	0		==			
ANR	1203795	PtrMemberAccess	entry -> fp_type		1203715	0					
ANR	1203796	Identifier	entry		1203715	0					
ANR	1203797	Identifier	fp_type		1203715	1					
ANR	1203798	Identifier	PHAR_TMP		1203715	1					
ANR	1203799	CompoundStatement		20:33:445:445	1203715	1					
ANR	1203800	IfStatement	if ( ! entry -> fp )		1203715	0					
ANR	1203801	Condition	! entry -> fp	717:6:19582:19591	1203715	0	True				
ANR	1203802	UnaryOperationExpression	! entry -> fp		1203715	0					
ANR	1203803	UnaryOperator	!		1203715	0					
ANR	1203804	PtrMemberAccess	entry -> fp		1203715	1					
ANR	1203805	Identifier	entry		1203715	0					
ANR	1203806	Identifier	fp		1203715	1					
ANR	1203807	CompoundStatement		21:18:465:465	1203715	1					
ANR	1203808	ExpressionStatement	"entry -> fp = php_stream_open_wrapper ( entry -> tmp , ""rb"" , STREAM_MUST_SEEK | 0 , NULL )"	718:3:19599:19678	1203715	0	True				
ANR	1203809	AssignmentExpression	"entry -> fp = php_stream_open_wrapper ( entry -> tmp , ""rb"" , STREAM_MUST_SEEK | 0 , NULL )"		1203715	0		=			
ANR	1203810	PtrMemberAccess	entry -> fp		1203715	0					
ANR	1203811	Identifier	entry		1203715	0					
ANR	1203812	Identifier	fp		1203715	1					
ANR	1203813	CallExpression	"php_stream_open_wrapper ( entry -> tmp , ""rb"" , STREAM_MUST_SEEK | 0 , NULL )"		1203715	1					
ANR	1203814	Callee	php_stream_open_wrapper		1203715	0					
ANR	1203815	Identifier	php_stream_open_wrapper		1203715	0					
ANR	1203816	ArgumentList	entry -> tmp		1203715	1					
ANR	1203817	Argument	entry -> tmp		1203715	0					
ANR	1203818	PtrMemberAccess	entry -> tmp		1203715	0					
ANR	1203819	Identifier	entry		1203715	0					
ANR	1203820	Identifier	tmp		1203715	1					
ANR	1203821	Argument	"""rb"""		1203715	1					
ANR	1203822	PrimaryExpression	"""rb"""		1203715	0					
ANR	1203823	Argument	STREAM_MUST_SEEK | 0		1203715	2					
ANR	1203824	InclusiveOrExpression	STREAM_MUST_SEEK | 0		1203715	0		|			
ANR	1203825	Identifier	STREAM_MUST_SEEK		1203715	0					
ANR	1203826	PrimaryExpression	0		1203715	1					
ANR	1203827	Argument	NULL		1203715	3					
ANR	1203828	Identifier	NULL		1203715	0					
ANR	1203829	ReturnStatement	return SUCCESS ;	720:2:19686:19700	1203715	1	True				
ANR	1203830	Identifier	SUCCESS		1203715	0					
ANR	1203831	IfStatement	if ( entry -> fp_type != PHAR_FP )		1203715	9					
ANR	1203832	Condition	entry -> fp_type != PHAR_FP	723:5:19711:19735	1203715	0	True				
ANR	1203833	EqualityExpression	entry -> fp_type != PHAR_FP		1203715	0		!=			
ANR	1203834	PtrMemberAccess	entry -> fp_type		1203715	0					
ANR	1203835	Identifier	entry		1203715	0					
ANR	1203836	Identifier	fp_type		1203715	1					
ANR	1203837	Identifier	PHAR_FP		1203715	1					
ANR	1203838	CompoundStatement		27:32:609:609	1203715	1					
ANR	1203839	ReturnStatement	return SUCCESS ;	725:2:19791:19805	1203715	0	True				
ANR	1203840	Identifier	SUCCESS		1203715	0					
ANR	1203841	Statement	if	728:1:19812:19813	1203715	10	True				
ANR	1203842	Statement	(	728:4:19815:19815	1203715	11	True				
ANR	1203843	Statement	!	728:5:19816:19816	1203715	12	True				
ANR	1203844	Statement	phar_get_pharfp	728:6:19817:19831	1203715	13	True				
ANR	1203845	Statement	(	728:21:19832:19832	1203715	14	True				
ANR	1203846	Statement	phar	728:22:19833:19836	1203715	15	True				
ANR	1203847	Statement	TSRMLS_CC	728:27:19838:19846	1203715	16	True				
ANR	1203848	Statement	)	728:36:19847:19847	1203715	17	True				
ANR	1203849	Statement	)	728:37:19848:19848	1203715	18	True				
ANR	1203850	CompoundStatement		32:39:721:721	1203715	19					
ANR	1203851	Statement	if	729:2:19854:19855	1203715	0	True				
ANR	1203852	Statement	(	729:5:19857:19857	1203715	1	True				
ANR	1203853	Statement	FAILURE	729:6:19858:19864	1203715	2	True				
ANR	1203854	Statement	==	729:14:19866:19867	1203715	3	True				
ANR	1203855	Statement	phar_open_archive_fp	729:17:19869:19888	1203715	4	True				
ANR	1203856	Statement	(	729:37:19889:19889	1203715	5	True				
ANR	1203857	Statement	phar	729:38:19890:19893	1203715	6	True				
ANR	1203858	Statement	TSRMLS_CC	729:43:19895:19903	1203715	7	True				
ANR	1203859	Statement	)	729:52:19904:19904	1203715	8	True				
ANR	1203860	Statement	)	729:53:19905:19905	1203715	9	True				
ANR	1203861	CompoundStatement		33:55:778:778	1203715	10					
ANR	1203862	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: Cannot open phar archive \\""%s\\"" for reading"" , phar -> fname )"	730:3:19912:20005	1203715	0	True				
ANR	1203863	CallExpression	"spprintf ( error , 4096 , ""phar error: Cannot open phar archive \\""%s\\"" for reading"" , phar -> fname )"		1203715	0					
ANR	1203864	Callee	spprintf		1203715	0					
ANR	1203865	Identifier	spprintf		1203715	0					
ANR	1203866	ArgumentList	error		1203715	1					
ANR	1203867	Argument	error		1203715	0					
ANR	1203868	Identifier	error		1203715	0					
ANR	1203869	Argument	4096		1203715	1					
ANR	1203870	PrimaryExpression	4096		1203715	0					
ANR	1203871	Argument	"""phar error: Cannot open phar archive \\""%s\\"" for reading"""		1203715	2					
ANR	1203872	PrimaryExpression	"""phar error: Cannot open phar archive \\""%s\\"" for reading"""		1203715	0					
ANR	1203873	Argument	phar -> fname		1203715	3					
ANR	1203874	PtrMemberAccess	phar -> fname		1203715	0					
ANR	1203875	Identifier	phar		1203715	0					
ANR	1203876	Identifier	fname		1203715	1					
ANR	1203877	ReturnStatement	return FAILURE ;	731:3:20010:20024	1203715	1	True				
ANR	1203878	Identifier	FAILURE		1203715	0					
ANR	1203879	IfStatement	if ( ( entry -> old_flags && ! ( entry -> old_flags & PHAR_ENT_COMPRESSION_MASK ) ) || ! ( entry -> flags & PHAR_ENT_COMPRESSION_MASK ) )		1203715	20					
ANR	1203880	Condition	( entry -> old_flags && ! ( entry -> old_flags & PHAR_ENT_COMPRESSION_MASK ) ) || ! ( entry -> flags & PHAR_ENT_COMPRESSION_MASK )	735:5:20039:20154	1203715	0	True				
ANR	1203881	OrExpression	( entry -> old_flags && ! ( entry -> old_flags & PHAR_ENT_COMPRESSION_MASK ) ) || ! ( entry -> flags & PHAR_ENT_COMPRESSION_MASK )		1203715	0		||			
ANR	1203882	AndExpression	entry -> old_flags && ! ( entry -> old_flags & PHAR_ENT_COMPRESSION_MASK )		1203715	0		&&			
ANR	1203883	PtrMemberAccess	entry -> old_flags		1203715	0					
ANR	1203884	Identifier	entry		1203715	0					
ANR	1203885	Identifier	old_flags		1203715	1					
ANR	1203886	UnaryOperationExpression	! ( entry -> old_flags & PHAR_ENT_COMPRESSION_MASK )		1203715	1					
ANR	1203887	UnaryOperator	!		1203715	0					
ANR	1203888	BitAndExpression	entry -> old_flags & PHAR_ENT_COMPRESSION_MASK		1203715	1		&			
ANR	1203889	PtrMemberAccess	entry -> old_flags		1203715	0					
ANR	1203890	Identifier	entry		1203715	0					
ANR	1203891	Identifier	old_flags		1203715	1					
ANR	1203892	Identifier	PHAR_ENT_COMPRESSION_MASK		1203715	1					
ANR	1203893	UnaryOperationExpression	! ( entry -> flags & PHAR_ENT_COMPRESSION_MASK )		1203715	1					
ANR	1203894	UnaryOperator	!		1203715	0					
ANR	1203895	BitAndExpression	entry -> flags & PHAR_ENT_COMPRESSION_MASK		1203715	1		&			
ANR	1203896	PtrMemberAccess	entry -> flags		1203715	0					
ANR	1203897	Identifier	entry		1203715	0					
ANR	1203898	Identifier	flags		1203715	1					
ANR	1203899	Identifier	PHAR_ENT_COMPRESSION_MASK		1203715	1					
ANR	1203900	CompoundStatement		39:123:1028:1028	1203715	1					
ANR	1203901	ExpressionStatement	dummy . internal_file = entry	736:2:20161:20188	1203715	0	True				
ANR	1203902	AssignmentExpression	dummy . internal_file = entry		1203715	0		=			
ANR	1203903	MemberAccess	dummy . internal_file		1203715	0					
ANR	1203904	Identifier	dummy		1203715	0					
ANR	1203905	Identifier	internal_file		1203715	1					
ANR	1203906	Identifier	entry		1203715	1					
ANR	1203907	ExpressionStatement	dummy . phar = phar	737:2:20192:20209	1203715	1	True				
ANR	1203908	AssignmentExpression	dummy . phar = phar		1203715	0		=			
ANR	1203909	MemberAccess	dummy . phar		1203715	0					
ANR	1203910	Identifier	dummy		1203715	0					
ANR	1203911	Identifier	phar		1203715	1					
ANR	1203912	Identifier	phar		1203715	1					
ANR	1203913	ExpressionStatement	dummy . zero = entry -> offset	738:2:20213:20239	1203715	2	True				
ANR	1203914	AssignmentExpression	dummy . zero = entry -> offset		1203715	0		=			
ANR	1203915	MemberAccess	dummy . zero		1203715	0					
ANR	1203916	Identifier	dummy		1203715	0					
ANR	1203917	Identifier	zero		1203715	1					
ANR	1203918	PtrMemberAccess	entry -> offset		1203715	1					
ANR	1203919	Identifier	entry		1203715	0					
ANR	1203920	Identifier	offset		1203715	1					
ANR	1203921	Statement	dummy	739:2:20243:20247	1203715	3	True				
ANR	1203922	Statement	.	739:7:20248:20248	1203715	4	True				
ANR	1203923	Statement	fp	739:8:20249:20250	1203715	5	True				
ANR	1203924	Statement	=	739:11:20252:20252	1203715	6	True				
ANR	1203925	Statement	phar_get_pharfp	739:13:20254:20268	1203715	7	True				
ANR	1203926	Statement	(	739:28:20269:20269	1203715	8	True				
ANR	1203927	Statement	phar	739:29:20270:20273	1203715	9	True				
ANR	1203928	Statement	TSRMLS_CC	739:34:20275:20283	1203715	10	True				
ANR	1203929	Statement	)	739:43:20284:20284	1203715	11	True				
ANR	1203930	ExpressionStatement		739:44:20285:20285	1203715	12	True				
ANR	1203931	Statement	if	740:2:20289:20290	1203715	13	True				
ANR	1203932	Statement	(	740:5:20292:20292	1203715	14	True				
ANR	1203933	Statement	FAILURE	740:6:20293:20299	1203715	15	True				
ANR	1203934	Statement	==	740:14:20301:20302	1203715	16	True				
ANR	1203935	Statement	phar_postprocess_file	740:17:20304:20324	1203715	17	True				
ANR	1203936	Statement	(	740:38:20325:20325	1203715	18	True				
ANR	1203937	Statement	&	740:39:20326:20326	1203715	19	True				
ANR	1203938	Statement	dummy	740:40:20327:20331	1203715	20	True				
ANR	1203939	Statement	","	740:45:20332:20332	1203715	21	True				
ANR	1203940	Statement	entry	740:47:20334:20338	1203715	22	True				
ANR	1203941	Statement	->	740:52:20339:20340	1203715	23	True				
ANR	1203942	Statement	crc32	740:54:20341:20345	1203715	24	True				
ANR	1203943	Statement	","	740:59:20346:20346	1203715	25	True				
ANR	1203944	Statement	error	740:61:20348:20352	1203715	26	True				
ANR	1203945	Statement	","	740:66:20353:20353	1203715	27	True				
ANR	1203946	Statement	1	740:68:20355:20355	1203715	28	True				
ANR	1203947	Statement	TSRMLS_CC	740:70:20357:20365	1203715	29	True				
ANR	1203948	Statement	)	740:79:20366:20366	1203715	30	True				
ANR	1203949	Statement	)	740:80:20367:20367	1203715	31	True				
ANR	1203950	CompoundStatement		44:82:1240:1240	1203715	32					
ANR	1203951	ReturnStatement	return FAILURE ;	741:3:20374:20388	1203715	0	True				
ANR	1203952	Identifier	FAILURE		1203715	0					
ANR	1203953	ReturnStatement	return SUCCESS ;	743:2:20396:20410	1203715	33	True				
ANR	1203954	Identifier	SUCCESS		1203715	0					
ANR	1203955	Statement	if	746:1:20417:20418	1203715	21	True				
ANR	1203956	Statement	(	746:4:20420:20420	1203715	22	True				
ANR	1203957	Statement	!	746:5:20421:20421	1203715	23	True				
ANR	1203958	Statement	phar_get_entrypufp	746:6:20422:20439	1203715	24	True				
ANR	1203959	Statement	(	746:24:20440:20440	1203715	25	True				
ANR	1203960	Statement	entry	746:25:20441:20445	1203715	26	True				
ANR	1203961	Statement	TSRMLS_CC	746:31:20447:20455	1203715	27	True				
ANR	1203962	Statement	)	746:40:20456:20456	1203715	28	True				
ANR	1203963	Statement	)	746:41:20457:20457	1203715	29	True				
ANR	1203964	CompoundStatement		50:43:1330:1330	1203715	30					
ANR	1203965	Statement	phar_set_entrypufp	747:2:20463:20480	1203715	0	True				
ANR	1203966	Statement	(	747:20:20481:20481	1203715	1	True				
ANR	1203967	Statement	entry	747:21:20482:20486	1203715	2	True				
ANR	1203968	Statement	","	747:26:20487:20487	1203715	3	True				
ANR	1203969	Statement	php_stream_fopen_tmpfile	747:28:20489:20512	1203715	4	True				
ANR	1203970	Statement	(	747:52:20513:20513	1203715	5	True				
ANR	1203971	Statement	)	747:53:20514:20514	1203715	6	True				
ANR	1203972	Statement	TSRMLS_CC	747:55:20516:20524	1203715	7	True				
ANR	1203973	Statement	)	747:64:20525:20525	1203715	8	True				
ANR	1203974	ExpressionStatement		747:65:20526:20526	1203715	9	True				
ANR	1203975	Statement	if	748:2:20530:20531	1203715	10	True				
ANR	1203976	Statement	(	748:5:20533:20533	1203715	11	True				
ANR	1203977	Statement	!	748:6:20534:20534	1203715	12	True				
ANR	1203978	Statement	phar_get_entrypufp	748:7:20535:20552	1203715	13	True				
ANR	1203979	Statement	(	748:25:20553:20553	1203715	14	True				
ANR	1203980	Statement	entry	748:26:20554:20558	1203715	15	True				
ANR	1203981	Statement	TSRMLS_CC	748:32:20560:20568	1203715	16	True				
ANR	1203982	Statement	)	748:41:20569:20569	1203715	17	True				
ANR	1203983	Statement	)	748:42:20570:20570	1203715	18	True				
ANR	1203984	CompoundStatement		52:44:1443:1443	1203715	19					
ANR	1203985	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: Cannot open temporary file for decompressing phar archive \\""%s\\"" file \\""%s\\"""" , phar -> fname , entry -> filename )"	749:3:20577:20720	1203715	0	True				
ANR	1203986	CallExpression	"spprintf ( error , 4096 , ""phar error: Cannot open temporary file for decompressing phar archive \\""%s\\"" file \\""%s\\"""" , phar -> fname , entry -> filename )"		1203715	0					
ANR	1203987	Callee	spprintf		1203715	0					
ANR	1203988	Identifier	spprintf		1203715	0					
ANR	1203989	ArgumentList	error		1203715	1					
ANR	1203990	Argument	error		1203715	0					
ANR	1203991	Identifier	error		1203715	0					
ANR	1203992	Argument	4096		1203715	1					
ANR	1203993	PrimaryExpression	4096		1203715	0					
ANR	1203994	Argument	"""phar error: Cannot open temporary file for decompressing phar archive \\""%s\\"" file \\""%s\\"""""		1203715	2					
ANR	1203995	PrimaryExpression	"""phar error: Cannot open temporary file for decompressing phar archive \\""%s\\"" file \\""%s\\"""""		1203715	0					
ANR	1203996	Argument	phar -> fname		1203715	3					
ANR	1203997	PtrMemberAccess	phar -> fname		1203715	0					
ANR	1203998	Identifier	phar		1203715	0					
ANR	1203999	Identifier	fname		1203715	1					
ANR	1204000	Argument	entry -> filename		1203715	4					
ANR	1204001	PtrMemberAccess	entry -> filename		1203715	0					
ANR	1204002	Identifier	entry		1203715	0					
ANR	1204003	Identifier	filename		1203715	1					
ANR	1204004	ReturnStatement	return FAILURE ;	750:3:20725:20739	1203715	1	True				
ANR	1204005	Identifier	FAILURE		1203715	0					
ANR	1204006	ExpressionStatement	dummy . internal_file = entry	754:1:20750:20777	1203715	31	True				
ANR	1204007	AssignmentExpression	dummy . internal_file = entry		1203715	0		=			
ANR	1204008	MemberAccess	dummy . internal_file		1203715	0					
ANR	1204009	Identifier	dummy		1203715	0					
ANR	1204010	Identifier	internal_file		1203715	1					
ANR	1204011	Identifier	entry		1203715	1					
ANR	1204012	ExpressionStatement	dummy . phar = phar	755:1:20780:20797	1203715	32	True				
ANR	1204013	AssignmentExpression	dummy . phar = phar		1203715	0		=			
ANR	1204014	MemberAccess	dummy . phar		1203715	0					
ANR	1204015	Identifier	dummy		1203715	0					
ANR	1204016	Identifier	phar		1203715	1					
ANR	1204017	Identifier	phar		1203715	1					
ANR	1204018	ExpressionStatement	dummy . zero = entry -> offset	756:1:20800:20826	1203715	33	True				
ANR	1204019	AssignmentExpression	dummy . zero = entry -> offset		1203715	0		=			
ANR	1204020	MemberAccess	dummy . zero		1203715	0					
ANR	1204021	Identifier	dummy		1203715	0					
ANR	1204022	Identifier	zero		1203715	1					
ANR	1204023	PtrMemberAccess	entry -> offset		1203715	1					
ANR	1204024	Identifier	entry		1203715	0					
ANR	1204025	Identifier	offset		1203715	1					
ANR	1204026	Statement	dummy	757:1:20829:20833	1203715	34	True				
ANR	1204027	Statement	.	757:6:20834:20834	1203715	35	True				
ANR	1204028	Statement	fp	757:7:20835:20836	1203715	36	True				
ANR	1204029	Statement	=	757:10:20838:20838	1203715	37	True				
ANR	1204030	Statement	phar_get_pharfp	757:12:20840:20854	1203715	38	True				
ANR	1204031	Statement	(	757:27:20855:20855	1203715	39	True				
ANR	1204032	Statement	phar	757:28:20856:20859	1203715	40	True				
ANR	1204033	Statement	TSRMLS_CC	757:33:20861:20869	1203715	41	True				
ANR	1204034	Statement	)	757:42:20870:20870	1203715	42	True				
ANR	1204035	ExpressionStatement		757:43:20871:20871	1203715	43	True				
ANR	1204036	Statement	if	758:1:20874:20875	1203715	44	True				
ANR	1204037	Statement	(	758:4:20877:20877	1203715	45	True				
ANR	1204038	Statement	FAILURE	758:5:20878:20884	1203715	46	True				
ANR	1204039	Statement	==	758:13:20886:20887	1203715	47	True				
ANR	1204040	Statement	phar_postprocess_file	758:16:20889:20909	1203715	48	True				
ANR	1204041	Statement	(	758:37:20910:20910	1203715	49	True				
ANR	1204042	Statement	&	758:38:20911:20911	1203715	50	True				
ANR	1204043	Statement	dummy	758:39:20912:20916	1203715	51	True				
ANR	1204044	Statement	","	758:44:20917:20917	1203715	52	True				
ANR	1204045	Statement	entry	758:46:20919:20923	1203715	53	True				
ANR	1204046	Statement	->	758:51:20924:20925	1203715	54	True				
ANR	1204047	Statement	crc32	758:53:20926:20930	1203715	55	True				
ANR	1204048	Statement	","	758:58:20931:20931	1203715	56	True				
ANR	1204049	Statement	error	758:60:20933:20937	1203715	57	True				
ANR	1204050	Statement	","	758:65:20938:20938	1203715	58	True				
ANR	1204051	Statement	1	758:67:20940:20940	1203715	59	True				
ANR	1204052	Statement	TSRMLS_CC	758:69:20942:20950	1203715	60	True				
ANR	1204053	Statement	)	758:78:20951:20951	1203715	61	True				
ANR	1204054	Statement	)	758:79:20952:20952	1203715	62	True				
ANR	1204055	CompoundStatement		62:81:1825:1825	1203715	63					
ANR	1204056	ReturnStatement	return FAILURE ;	759:2:20958:20972	1203715	0	True				
ANR	1204057	Identifier	FAILURE		1203715	0					
ANR	1204058	Statement	ufp	762:1:20979:20981	1203715	64	True				
ANR	1204059	Statement	=	762:5:20983:20983	1203715	65	True				
ANR	1204060	Statement	phar_get_entrypufp	762:7:20985:21002	1203715	66	True				
ANR	1204061	Statement	(	762:25:21003:21003	1203715	67	True				
ANR	1204062	Statement	entry	762:26:21004:21008	1203715	68	True				
ANR	1204063	Statement	TSRMLS_CC	762:32:21010:21018	1203715	69	True				
ANR	1204064	Statement	)	762:41:21019:21019	1203715	70	True				
ANR	1204065	ExpressionStatement		762:42:21020:21020	1203715	71	True				
ANR	1204066	IfStatement	"if ( ( filtername = phar_decompress_filter ( entry , 0 ) ) != NULL )"		1203715	72					
ANR	1204067	Condition	"( filtername = phar_decompress_filter ( entry , 0 ) ) != NULL"	764:5:21028:21082	1203715	0	True				
ANR	1204068	EqualityExpression	"( filtername = phar_decompress_filter ( entry , 0 ) ) != NULL"		1203715	0		!=			
ANR	1204069	AssignmentExpression	"filtername = phar_decompress_filter ( entry , 0 )"		1203715	0		=			
ANR	1204070	Identifier	filtername		1203715	0					
ANR	1204071	CallExpression	"phar_decompress_filter ( entry , 0 )"		1203715	1					
ANR	1204072	Callee	phar_decompress_filter		1203715	0					
ANR	1204073	Identifier	phar_decompress_filter		1203715	0					
ANR	1204074	ArgumentList	entry		1203715	1					
ANR	1204075	Argument	entry		1203715	0					
ANR	1204076	Identifier	entry		1203715	0					
ANR	1204077	Argument	0		1203715	1					
ANR	1204078	PrimaryExpression	0		1203715	0					
ANR	1204079	Identifier	NULL		1203715	1					
ANR	1204080	CompoundStatement		68:62:1956:1956	1203715	1					
ANR	1204081	Statement	filter	765:2:21089:21094	1203715	0	True				
ANR	1204082	Statement	=	765:9:21096:21096	1203715	1	True				
ANR	1204083	Statement	php_stream_filter_create	765:11:21098:21121	1203715	2	True				
ANR	1204084	Statement	(	765:35:21122:21122	1203715	3	True				
ANR	1204085	Statement	filtername	765:36:21123:21132	1203715	4	True				
ANR	1204086	Statement	","	765:46:21133:21133	1203715	5	True				
ANR	1204087	Statement	NULL	765:48:21135:21138	1203715	6	True				
ANR	1204088	Statement	","	765:52:21139:21139	1203715	7	True				
ANR	1204089	Statement	0	765:54:21141:21141	1203715	8	True				
ANR	1204090	Statement	TSRMLS_CC	765:56:21143:21151	1203715	9	True				
ANR	1204091	Statement	)	765:65:21152:21152	1203715	10	True				
ANR	1204092	ExpressionStatement		765:66:21153:21153	1203715	11	True				
ANR	1204093	ElseStatement	else		1203715	0					
ANR	1204094	CompoundStatement		70:8:2034:2034	1203715	0					
ANR	1204095	ExpressionStatement	filter = NULL	767:2:21167:21180	1203715	0	True				
ANR	1204096	AssignmentExpression	filter = NULL		1203715	0		=			
ANR	1204097	Identifier	filter		1203715	0					
ANR	1204098	Identifier	NULL		1203715	1					
ANR	1204099	IfStatement	if ( ! filter )		1203715	73					
ANR	1204100	Condition	! filter	770:5:21191:21197	1203715	0	True				
ANR	1204101	UnaryOperationExpression	! filter		1203715	0					
ANR	1204102	UnaryOperator	!		1203715	0					
ANR	1204103	Identifier	filter		1203715	1					
ANR	1204104	CompoundStatement		74:14:2071:2071	1203715	1					
ANR	1204105	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: unable to read phar \\""%s\\"" (cannot create %s filter while decompressing file \\""%s\\"")"" , phar -> fname , phar_decompress_filter ( entry , 1 ) , entry -> filename )"	771:2:21204:21389	1203715	0	True				
ANR	1204106	CallExpression	"spprintf ( error , 4096 , ""phar error: unable to read phar \\""%s\\"" (cannot create %s filter while decompressing file \\""%s\\"")"" , phar -> fname , phar_decompress_filter ( entry , 1 ) , entry -> filename )"		1203715	0					
ANR	1204107	Callee	spprintf		1203715	0					
ANR	1204108	Identifier	spprintf		1203715	0					
ANR	1204109	ArgumentList	error		1203715	1					
ANR	1204110	Argument	error		1203715	0					
ANR	1204111	Identifier	error		1203715	0					
ANR	1204112	Argument	4096		1203715	1					
ANR	1204113	PrimaryExpression	4096		1203715	0					
ANR	1204114	Argument	"""phar error: unable to read phar \\""%s\\"" (cannot create %s filter while decompressing file \\""%s\\"")"""		1203715	2					
ANR	1204115	PrimaryExpression	"""phar error: unable to read phar \\""%s\\"" (cannot create %s filter while decompressing file \\""%s\\"")"""		1203715	0					
ANR	1204116	Argument	phar -> fname		1203715	3					
ANR	1204117	PtrMemberAccess	phar -> fname		1203715	0					
ANR	1204118	Identifier	phar		1203715	0					
ANR	1204119	Identifier	fname		1203715	1					
ANR	1204120	Argument	"phar_decompress_filter ( entry , 1 )"		1203715	4					
ANR	1204121	CallExpression	"phar_decompress_filter ( entry , 1 )"		1203715	0					
ANR	1204122	Callee	phar_decompress_filter		1203715	0					
ANR	1204123	Identifier	phar_decompress_filter		1203715	0					
ANR	1204124	ArgumentList	entry		1203715	1					
ANR	1204125	Argument	entry		1203715	0					
ANR	1204126	Identifier	entry		1203715	0					
ANR	1204127	Argument	1		1203715	1					
ANR	1204128	PrimaryExpression	1		1203715	0					
ANR	1204129	Argument	entry -> filename		1203715	5					
ANR	1204130	PtrMemberAccess	entry -> filename		1203715	0					
ANR	1204131	Identifier	entry		1203715	0					
ANR	1204132	Identifier	filename		1203715	1					
ANR	1204133	ReturnStatement	return FAILURE ;	772:2:21393:21407	1203715	1	True				
ANR	1204134	Identifier	FAILURE		1203715	0					
ANR	1204135	ExpressionStatement	"php_stream_seek ( ufp , 0 , SEEK_END )"	777:1:21511:21544	1203715	74	True				
ANR	1204136	CallExpression	"php_stream_seek ( ufp , 0 , SEEK_END )"		1203715	0					
ANR	1204137	Callee	php_stream_seek		1203715	0					
ANR	1204138	Identifier	php_stream_seek		1203715	0					
ANR	1204139	ArgumentList	ufp		1203715	1					
ANR	1204140	Argument	ufp		1203715	0					
ANR	1204141	Identifier	ufp		1203715	0					
ANR	1204142	Argument	0		1203715	1					
ANR	1204143	PrimaryExpression	0		1203715	0					
ANR	1204144	Argument	SEEK_END		1203715	2					
ANR	1204145	Identifier	SEEK_END		1203715	0					
ANR	1204146	ExpressionStatement	loc = php_stream_tell ( ufp )	778:1:21547:21573	1203715	75	True				
ANR	1204147	AssignmentExpression	loc = php_stream_tell ( ufp )		1203715	0		=			
ANR	1204148	Identifier	loc		1203715	0					
ANR	1204149	CallExpression	php_stream_tell ( ufp )		1203715	1					
ANR	1204150	Callee	php_stream_tell		1203715	0					
ANR	1204151	Identifier	php_stream_tell		1203715	0					
ANR	1204152	ArgumentList	ufp		1203715	1					
ANR	1204153	Argument	ufp		1203715	0					
ANR	1204154	Identifier	ufp		1203715	0					
ANR	1204155	ExpressionStatement	"php_stream_filter_append ( & ufp -> writefilters , filter )"	779:1:21576:21628	1203715	76	True				
ANR	1204156	CallExpression	"php_stream_filter_append ( & ufp -> writefilters , filter )"		1203715	0					
ANR	1204157	Callee	php_stream_filter_append		1203715	0					
ANR	1204158	Identifier	php_stream_filter_append		1203715	0					
ANR	1204159	ArgumentList	& ufp -> writefilters		1203715	1					
ANR	1204160	Argument	& ufp -> writefilters		1203715	0					
ANR	1204161	UnaryOperationExpression	& ufp -> writefilters		1203715	0					
ANR	1204162	UnaryOperator	&		1203715	0					
ANR	1204163	PtrMemberAccess	ufp -> writefilters		1203715	1					
ANR	1204164	Identifier	ufp		1203715	0					
ANR	1204165	Identifier	writefilters		1203715	1					
ANR	1204166	Argument	filter		1203715	1					
ANR	1204167	Identifier	filter		1203715	0					
ANR	1204168	Statement	php_stream_seek	780:1:21631:21645	1203715	77	True				
ANR	1204169	Statement	(	780:16:21646:21646	1203715	78	True				
ANR	1204170	Statement	phar_get_entrypfp	780:17:21647:21663	1203715	79	True				
ANR	1204171	Statement	(	780:34:21664:21664	1203715	80	True				
ANR	1204172	Statement	entry	780:35:21665:21669	1203715	81	True				
ANR	1204173	Statement	TSRMLS_CC	780:41:21671:21679	1203715	82	True				
ANR	1204174	Statement	)	780:50:21680:21680	1203715	83	True				
ANR	1204175	Statement	","	780:51:21681:21681	1203715	84	True				
ANR	1204176	Statement	phar_get_fp_offset	780:53:21683:21700	1203715	85	True				
ANR	1204177	Statement	(	780:71:21701:21701	1203715	86	True				
ANR	1204178	Statement	entry	780:72:21702:21706	1203715	87	True				
ANR	1204179	Statement	TSRMLS_CC	780:78:21708:21716	1203715	88	True				
ANR	1204180	Statement	)	780:87:21717:21717	1203715	89	True				
ANR	1204181	Statement	","	780:88:21718:21718	1203715	90	True				
ANR	1204182	Statement	SEEK_SET	780:90:21720:21727	1203715	91	True				
ANR	1204183	Statement	)	780:98:21728:21728	1203715	92	True				
ANR	1204184	ExpressionStatement		780:99:21729:21729	1203715	93	True				
ANR	1204185	IfStatement	if ( entry -> uncompressed_filesize )		1203715	94					
ANR	1204186	Condition	entry -> uncompressed_filesize	782:5:21737:21764	1203715	0	True				
ANR	1204187	PtrMemberAccess	entry -> uncompressed_filesize		1203715	0					
ANR	1204188	Identifier	entry		1203715	0					
ANR	1204189	Identifier	uncompressed_filesize		1203715	1					
ANR	1204190	CompoundStatement		86:35:2638:2638	1203715	1					
ANR	1204191	Statement	if	783:2:21771:21772	1203715	0	True				
ANR	1204192	Statement	(	783:5:21774:21774	1203715	1	True				
ANR	1204193	Statement	SUCCESS	783:6:21775:21781	1203715	2	True				
ANR	1204194	Statement	!=	783:14:21783:21784	1203715	3	True				
ANR	1204195	Statement	php_stream_copy_to_stream_ex	783:17:21786:21813	1203715	4	True				
ANR	1204196	Statement	(	783:45:21814:21814	1203715	5	True				
ANR	1204197	Statement	phar_get_entrypfp	783:46:21815:21831	1203715	6	True				
ANR	1204198	Statement	(	783:63:21832:21832	1203715	7	True				
ANR	1204199	Statement	entry	783:64:21833:21837	1203715	8	True				
ANR	1204200	Statement	TSRMLS_CC	783:70:21839:21847	1203715	9	True				
ANR	1204201	Statement	)	783:79:21848:21848	1203715	10	True				
ANR	1204202	Statement	","	783:80:21849:21849	1203715	11	True				
ANR	1204203	Statement	ufp	783:82:21851:21853	1203715	12	True				
ANR	1204204	Statement	","	783:85:21854:21854	1203715	13	True				
ANR	1204205	Statement	entry	783:87:21856:21860	1203715	14	True				
ANR	1204206	Statement	->	783:92:21861:21862	1203715	15	True				
ANR	1204207	Statement	compressed_filesize	783:94:21863:21881	1203715	16	True				
ANR	1204208	Statement	","	783:113:21882:21882	1203715	17	True				
ANR	1204209	Statement	NULL	783:115:21884:21887	1203715	18	True				
ANR	1204210	Statement	)	783:119:21888:21888	1203715	19	True				
ANR	1204211	Statement	)	783:120:21889:21889	1203715	20	True				
ANR	1204212	CompoundStatement		87:122:2762:2762	1203715	21					
ANR	1204213	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"" , phar -> fname , entry -> filename )"	784:3:21896:22039	1203715	0	True				
ANR	1204214	CallExpression	"spprintf ( error , 4096 , ""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"" , phar -> fname , entry -> filename )"		1203715	0					
ANR	1204215	Callee	spprintf		1203715	0					
ANR	1204216	Identifier	spprintf		1203715	0					
ANR	1204217	ArgumentList	error		1203715	1					
ANR	1204218	Argument	error		1203715	0					
ANR	1204219	Identifier	error		1203715	0					
ANR	1204220	Argument	4096		1203715	1					
ANR	1204221	PrimaryExpression	4096		1203715	0					
ANR	1204222	Argument	"""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"""		1203715	2					
ANR	1204223	PrimaryExpression	"""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"""		1203715	0					
ANR	1204224	Argument	phar -> fname		1203715	3					
ANR	1204225	PtrMemberAccess	phar -> fname		1203715	0					
ANR	1204226	Identifier	phar		1203715	0					
ANR	1204227	Identifier	fname		1203715	1					
ANR	1204228	Argument	entry -> filename		1203715	4					
ANR	1204229	PtrMemberAccess	entry -> filename		1203715	0					
ANR	1204230	Identifier	entry		1203715	0					
ANR	1204231	Identifier	filename		1203715	1					
ANR	1204232	Statement	php_stream_filter_remove	785:3:22044:22067	1203715	1	True				
ANR	1204233	Statement	(	785:27:22068:22068	1203715	2	True				
ANR	1204234	Statement	filter	785:28:22069:22074	1203715	3	True				
ANR	1204235	Statement	","	785:34:22075:22075	1203715	4	True				
ANR	1204236	Statement	1	785:36:22077:22077	1203715	5	True				
ANR	1204237	Statement	TSRMLS_CC	785:38:22079:22087	1203715	6	True				
ANR	1204238	Statement	)	785:47:22088:22088	1203715	7	True				
ANR	1204239	ExpressionStatement		785:48:22089:22089	1203715	8	True				
ANR	1204240	ReturnStatement	return FAILURE ;	786:3:22094:22108	1203715	9	True				
ANR	1204241	Identifier	FAILURE		1203715	0					
ANR	1204242	ExpressionStatement	"php_stream_filter_flush ( filter , 1 )"	790:1:22119:22153	1203715	95	True				
ANR	1204243	CallExpression	"php_stream_filter_flush ( filter , 1 )"		1203715	0					
ANR	1204244	Callee	php_stream_filter_flush		1203715	0					
ANR	1204245	Identifier	php_stream_filter_flush		1203715	0					
ANR	1204246	ArgumentList	filter		1203715	1					
ANR	1204247	Argument	filter		1203715	0					
ANR	1204248	Identifier	filter		1203715	0					
ANR	1204249	Argument	1		1203715	1					
ANR	1204250	PrimaryExpression	1		1203715	0					
ANR	1204251	ExpressionStatement	php_stream_flush ( ufp )	791:1:22156:22177	1203715	96	True				
ANR	1204252	CallExpression	php_stream_flush ( ufp )		1203715	0					
ANR	1204253	Callee	php_stream_flush		1203715	0					
ANR	1204254	Identifier	php_stream_flush		1203715	0					
ANR	1204255	ArgumentList	ufp		1203715	1					
ANR	1204256	Argument	ufp		1203715	0					
ANR	1204257	Identifier	ufp		1203715	0					
ANR	1204258	Statement	php_stream_filter_remove	792:1:22180:22203	1203715	97	True				
ANR	1204259	Statement	(	792:25:22204:22204	1203715	98	True				
ANR	1204260	Statement	filter	792:26:22205:22210	1203715	99	True				
ANR	1204261	Statement	","	792:32:22211:22211	1203715	100	True				
ANR	1204262	Statement	1	792:34:22213:22213	1203715	101	True				
ANR	1204263	Statement	TSRMLS_CC	792:36:22215:22223	1203715	102	True				
ANR	1204264	Statement	)	792:45:22224:22224	1203715	103	True				
ANR	1204265	ExpressionStatement		792:46:22225:22225	1203715	104	True				
ANR	1204266	IfStatement	if ( php_stream_tell ( ufp ) - loc != ( off_t ) entry -> uncompressed_filesize )		1203715	105					
ANR	1204267	Condition	php_stream_tell ( ufp ) - loc != ( off_t ) entry -> uncompressed_filesize	794:5:22233:22298	1203715	0	True				
ANR	1204268	EqualityExpression	php_stream_tell ( ufp ) - loc != ( off_t ) entry -> uncompressed_filesize		1203715	0		!=			
ANR	1204269	AdditiveExpression	php_stream_tell ( ufp ) - loc		1203715	0		-			
ANR	1204270	CallExpression	php_stream_tell ( ufp )		1203715	0					
ANR	1204271	Callee	php_stream_tell		1203715	0					
ANR	1204272	Identifier	php_stream_tell		1203715	0					
ANR	1204273	ArgumentList	ufp		1203715	1					
ANR	1204274	Argument	ufp		1203715	0					
ANR	1204275	Identifier	ufp		1203715	0					
ANR	1204276	Identifier	loc		1203715	1					
ANR	1204277	CastExpression	( off_t ) entry -> uncompressed_filesize		1203715	1					
ANR	1204278	CastTarget	off_t		1203715	0					
ANR	1204279	PtrMemberAccess	entry -> uncompressed_filesize		1203715	1					
ANR	1204280	Identifier	entry		1203715	0					
ANR	1204281	Identifier	uncompressed_filesize		1203715	1					
ANR	1204282	CompoundStatement		98:73:3172:3172	1203715	1					
ANR	1204283	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"" , phar -> fname , entry -> filename )"	795:2:22305:22448	1203715	0	True				
ANR	1204284	CallExpression	"spprintf ( error , 4096 , ""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"" , phar -> fname , entry -> filename )"		1203715	0					
ANR	1204285	Callee	spprintf		1203715	0					
ANR	1204286	Identifier	spprintf		1203715	0					
ANR	1204287	ArgumentList	error		1203715	1					
ANR	1204288	Argument	error		1203715	0					
ANR	1204289	Identifier	error		1203715	0					
ANR	1204290	Argument	4096		1203715	1					
ANR	1204291	PrimaryExpression	4096		1203715	0					
ANR	1204292	Argument	"""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"""		1203715	2					
ANR	1204293	PrimaryExpression	"""phar error: internal corruption of phar \\""%s\\"" (actual filesize mismatch on file \\""%s\\"")"""		1203715	0					
ANR	1204294	Argument	phar -> fname		1203715	3					
ANR	1204295	PtrMemberAccess	phar -> fname		1203715	0					
ANR	1204296	Identifier	phar		1203715	0					
ANR	1204297	Identifier	fname		1203715	1					
ANR	1204298	Argument	entry -> filename		1203715	4					
ANR	1204299	PtrMemberAccess	entry -> filename		1203715	0					
ANR	1204300	Identifier	entry		1203715	0					
ANR	1204301	Identifier	filename		1203715	1					
ANR	1204302	ReturnStatement	return FAILURE ;	796:2:22452:22466	1203715	1	True				
ANR	1204303	Identifier	FAILURE		1203715	0					
ANR	1204304	ExpressionStatement	entry -> old_flags = entry -> flags	799:1:22473:22504	1203715	106	True				
ANR	1204305	AssignmentExpression	entry -> old_flags = entry -> flags		1203715	0		=			
ANR	1204306	PtrMemberAccess	entry -> old_flags		1203715	0					
ANR	1204307	Identifier	entry		1203715	0					
ANR	1204308	Identifier	old_flags		1203715	1					
ANR	1204309	PtrMemberAccess	entry -> flags		1203715	1					
ANR	1204310	Identifier	entry		1203715	0					
ANR	1204311	Identifier	flags		1203715	1					
ANR	1204312	Statement	phar_set_fp_type	802:1:22580:22595	1203715	107	True				
ANR	1204313	Statement	(	802:17:22596:22596	1203715	108	True				
ANR	1204314	Statement	entry	802:18:22597:22601	1203715	109	True				
ANR	1204315	Statement	","	802:23:22602:22602	1203715	110	True				
ANR	1204316	Statement	PHAR_UFP	802:25:22604:22611	1203715	111	True				
ANR	1204317	Statement	","	802:33:22612:22612	1203715	112	True				
ANR	1204318	Statement	loc	802:35:22614:22616	1203715	113	True				
ANR	1204319	Statement	TSRMLS_CC	802:39:22618:22626	1203715	114	True				
ANR	1204320	Statement	)	802:48:22627:22627	1203715	115	True				
ANR	1204321	ExpressionStatement		802:49:22628:22628	1203715	116	True				
ANR	1204322	ExpressionStatement	dummy . zero = entry -> offset	803:1:22631:22657	1203715	117	True				
ANR	1204323	AssignmentExpression	dummy . zero = entry -> offset		1203715	0		=			
ANR	1204324	MemberAccess	dummy . zero		1203715	0					
ANR	1204325	Identifier	dummy		1203715	0					
ANR	1204326	Identifier	zero		1203715	1					
ANR	1204327	PtrMemberAccess	entry -> offset		1203715	1					
ANR	1204328	Identifier	entry		1203715	0					
ANR	1204329	Identifier	offset		1203715	1					
ANR	1204330	ExpressionStatement	dummy . fp = ufp	804:1:22660:22674	1203715	118	True				
ANR	1204331	AssignmentExpression	dummy . fp = ufp		1203715	0		=			
ANR	1204332	MemberAccess	dummy . fp		1203715	0					
ANR	1204333	Identifier	dummy		1203715	0					
ANR	1204334	Identifier	fp		1203715	1					
ANR	1204335	Identifier	ufp		1203715	1					
ANR	1204336	Statement	if	805:1:22677:22678	1203715	119	True				
ANR	1204337	Statement	(	805:4:22680:22680	1203715	120	True				
ANR	1204338	Statement	FAILURE	805:5:22681:22687	1203715	121	True				
ANR	1204339	Statement	==	805:13:22689:22690	1203715	122	True				
ANR	1204340	Statement	phar_postprocess_file	805:16:22692:22712	1203715	123	True				
ANR	1204341	Statement	(	805:37:22713:22713	1203715	124	True				
ANR	1204342	Statement	&	805:38:22714:22714	1203715	125	True				
ANR	1204343	Statement	dummy	805:39:22715:22719	1203715	126	True				
ANR	1204344	Statement	","	805:44:22720:22720	1203715	127	True				
ANR	1204345	Statement	entry	805:46:22722:22726	1203715	128	True				
ANR	1204346	Statement	->	805:51:22727:22728	1203715	129	True				
ANR	1204347	Statement	crc32	805:53:22729:22733	1203715	130	True				
ANR	1204348	Statement	","	805:58:22734:22734	1203715	131	True				
ANR	1204349	Statement	error	805:60:22736:22740	1203715	132	True				
ANR	1204350	Statement	","	805:65:22741:22741	1203715	133	True				
ANR	1204351	Statement	0	805:67:22743:22743	1203715	134	True				
ANR	1204352	Statement	TSRMLS_CC	805:69:22745:22753	1203715	135	True				
ANR	1204353	Statement	)	805:78:22754:22754	1203715	136	True				
ANR	1204354	Statement	)	805:79:22755:22755	1203715	137	True				
ANR	1204355	CompoundStatement		109:81:3628:3628	1203715	138					
ANR	1204356	ReturnStatement	return FAILURE ;	806:2:22761:22775	1203715	0	True				
ANR	1204357	Identifier	FAILURE		1203715	0					
ANR	1204358	ReturnStatement	return SUCCESS ;	808:1:22781:22795	1203715	139	True				
ANR	1204359	Identifier	SUCCESS		1203715	0					
ANR	1204360	ReturnType	int		1203715	1					
ANR	1204361	Identifier	phar_open_entry_fp		1203715	2					
ANR	1204362	ParameterList	"phar_entry_info * entry , char * * error , int follow_links TSRMLS_DC"		1203715	3					
ANR	1204363	Parameter	phar_entry_info * entry	696:23:19052:19073	1203715	0	True				
ANR	1204364	ParameterType	phar_entry_info *		1203715	0					
ANR	1204365	Identifier	entry		1203715	1					
ANR	1204366	Parameter	char * * error	696:47:19076:19087	1203715	1	True				
ANR	1204367	ParameterType	char * *		1203715	0					
ANR	1204368	Identifier	error		1203715	1					
ANR	1204369	Parameter	int follow_links TSRMLS_DC	696:61:19090:19115	1203715	2	True				
ANR	1204370	ParameterType	int follow_links		1203715	0					
ANR	1204371	Identifier	TSRMLS_DC		1203715	1					
ANR	1204372	CFGEntryNode	ENTRY		1203715		True				
ANR	1204373	CFGExitNode	EXIT		1203715		True				
ANR	1204374	Symbol	loc		1203715						
ANR	1204375	Symbol	entry -> tmp		1203715						
ANR	1204376	Symbol	link_entry		1203715						
ANR	1204377	Symbol	dummy . fp		1203715						
ANR	1204378	Symbol	error		1203715						
ANR	1204379	Symbol	TSRMLS_DC		1203715						
ANR	1204380	Symbol	entry -> old_flags		1203715						
ANR	1204381	Symbol	entry -> link		1203715						
ANR	1204382	Symbol	dummy		1203715						
ANR	1204383	Symbol	php_stream_open_wrapper		1203715						
ANR	1204384	Symbol	dummy . zero		1203715						
ANR	1204385	Symbol	php_stream_tell		1203715						
ANR	1204386	Symbol	follow_links		1203715						
ANR	1204387	Symbol	PHAR_TMP		1203715						
ANR	1204388	Symbol	entry -> offset		1203715						
ANR	1204389	Symbol	entry -> phar		1203715						
ANR	1204390	Symbol	phar		1203715						
ANR	1204391	Symbol	* entry		1203715						
ANR	1204392	Symbol	SUCCESS		1203715						
ANR	1204393	Symbol	NULL		1203715						
ANR	1204394	Symbol	entry -> is_modified		1203715						
ANR	1204395	Symbol	entry -> fp_type		1203715						
ANR	1204396	Symbol	phar_decompress_filter		1203715						
ANR	1204397	Symbol	& ufp -> writefilters		1203715						
ANR	1204398	Symbol	entry -> uncompressed_filesize		1203715						
ANR	1204399	Symbol	PHAR_FP		1203715						
ANR	1204400	Symbol	entry -> filename		1203715						
ANR	1204401	Symbol	entry -> flags		1203715						
ANR	1204402	Symbol	FAILURE		1203715						
ANR	1204403	Symbol	dummy . phar		1203715						
ANR	1204404	Symbol	STREAM_MUST_SEEK		1203715						
ANR	1204405	Symbol	SEEK_END		1203715						
ANR	1204406	Symbol	filter		1203715						
ANR	1204407	Symbol	entry		1203715						
ANR	1204408	Symbol	phar -> fname		1203715						
ANR	1204409	Symbol	dummy . internal_file		1203715						
ANR	1204410	Symbol	PHAR_ENT_COMPRESSION_MASK		1203715						
ANR	1204411	Symbol	filtername		1203715						
ANR	1204412	Symbol	* phar		1203715						
ANR	1204413	Symbol	ufp		1203715						
ANR	1204414	Symbol	entry -> fp		1203715						
ANR	1204415	DeclStmt									
ANR	1204416	Decl							php_stream	php_stream *	fp
ANR	1204417	DeclStmt									
ANR	1204418	Decl							phar_entry_info	phar_entry_info *	link
ANR	1204419	DeclStmt									
ANR	1204420	Decl							phar_archive_data	phar_archive_data * *	fd_ptr
ANR	1204421	Function	phar_free_alias	943:0:26164:26650							
ANR	1204422	FunctionDef	"phar_free_alias (phar_archive_data * phar , char * alias , int alias_len TSRMLS_DC)"		1204421	0					
ANR	1204423	CompoundStatement		944:0:26257:26650	1204421	0					
ANR	1204424	IfStatement	if ( phar -> refcount || phar -> is_persistent )		1204421	0					
ANR	1204425	Condition	phar -> refcount || phar -> is_persistent	945:5:26264:26300	1204421	0	True				
ANR	1204426	OrExpression	phar -> refcount || phar -> is_persistent		1204421	0		||			
ANR	1204427	PtrMemberAccess	phar -> refcount		1204421	0					
ANR	1204428	Identifier	phar		1204421	0					
ANR	1204429	Identifier	refcount		1204421	1					
ANR	1204430	PtrMemberAccess	phar -> is_persistent		1204421	1					
ANR	1204431	Identifier	phar		1204421	0					
ANR	1204432	Identifier	is_persistent		1204421	1					
ANR	1204433	CompoundStatement		2:44:45:45	1204421	1					
ANR	1204434	ReturnStatement	return FAILURE ;	946:2:26307:26321	1204421	0	True				
ANR	1204435	Identifier	FAILURE		1204421	0					
ANR	1204436	IfStatement	"if ( zend_hash_del ( & ( PHAR_GLOBALS -> phar_fname_map ) , phar -> fname , phar -> fname_len ) != SUCCESS )"		1204421	1					
ANR	1204437	Condition	"zend_hash_del ( & ( PHAR_GLOBALS -> phar_fname_map ) , phar -> fname , phar -> fname_len ) != SUCCESS"	950:5:26410:26496	1204421	0	True				
ANR	1204438	EqualityExpression	"zend_hash_del ( & ( PHAR_GLOBALS -> phar_fname_map ) , phar -> fname , phar -> fname_len ) != SUCCESS"		1204421	0		!=			
ANR	1204439	CallExpression	"zend_hash_del ( & ( PHAR_GLOBALS -> phar_fname_map ) , phar -> fname , phar -> fname_len )"		1204421	0					
ANR	1204440	Callee	zend_hash_del		1204421	0					
ANR	1204441	Identifier	zend_hash_del		1204421	0					
ANR	1204442	ArgumentList	& ( PHAR_GLOBALS -> phar_fname_map )		1204421	1					
ANR	1204443	Argument	& ( PHAR_GLOBALS -> phar_fname_map )		1204421	0					
ANR	1204444	UnaryOperationExpression	& ( PHAR_GLOBALS -> phar_fname_map )		1204421	0					
ANR	1204445	UnaryOperator	&		1204421	0					
ANR	1204446	PtrMemberAccess	PHAR_GLOBALS -> phar_fname_map		1204421	1					
ANR	1204447	Identifier	PHAR_GLOBALS		1204421	0					
ANR	1204448	Identifier	phar_fname_map		1204421	1					
ANR	1204449	Argument	phar -> fname		1204421	1					
ANR	1204450	PtrMemberAccess	phar -> fname		1204421	0					
ANR	1204451	Identifier	phar		1204421	0					
ANR	1204452	Identifier	fname		1204421	1					
ANR	1204453	Argument	phar -> fname_len		1204421	2					
ANR	1204454	PtrMemberAccess	phar -> fname_len		1204421	0					
ANR	1204455	Identifier	phar		1204421	0					
ANR	1204456	Identifier	fname_len		1204421	1					
ANR	1204457	Identifier	SUCCESS		1204421	1					
ANR	1204458	CompoundStatement		7:94:241:241	1204421	1					
ANR	1204459	ReturnStatement	return FAILURE ;	951:2:26503:26517	1204421	0	True				
ANR	1204460	Identifier	FAILURE		1204421	0					
ANR	1204461	ExpressionStatement	PHAR_G ( last_phar ) = NULL	955:1:26553:26577	1204421	2	True				
ANR	1204462	AssignmentExpression	PHAR_G ( last_phar ) = NULL		1204421	0		=			
ANR	1204463	CallExpression	PHAR_G ( last_phar )		1204421	0					
ANR	1204464	Callee	PHAR_G		1204421	0					
ANR	1204465	Identifier	PHAR_G		1204421	0					
ANR	1204466	ArgumentList	last_phar		1204421	1					
ANR	1204467	Argument	last_phar		1204421	0					
ANR	1204468	Identifier	last_phar		1204421	0					
ANR	1204469	Identifier	NULL		1204421	1					
ANR	1204470	ExpressionStatement	PHAR_G ( last_phar_name ) = PHAR_G ( last_alias ) = NULL	956:1:26580:26630	1204421	3	True				
ANR	1204471	AssignmentExpression	PHAR_G ( last_phar_name ) = PHAR_G ( last_alias ) = NULL		1204421	0		=			
ANR	1204472	CallExpression	PHAR_G ( last_phar_name )		1204421	0					
ANR	1204473	Callee	PHAR_G		1204421	0					
ANR	1204474	Identifier	PHAR_G		1204421	0					
ANR	1204475	ArgumentList	last_phar_name		1204421	1					
ANR	1204476	Argument	last_phar_name		1204421	0					
ANR	1204477	Identifier	last_phar_name		1204421	0					
ANR	1204478	AssignmentExpression	PHAR_G ( last_alias ) = NULL		1204421	1		=			
ANR	1204479	CallExpression	PHAR_G ( last_alias )		1204421	0					
ANR	1204480	Callee	PHAR_G		1204421	0					
ANR	1204481	Identifier	PHAR_G		1204421	0					
ANR	1204482	ArgumentList	last_alias		1204421	1					
ANR	1204483	Argument	last_alias		1204421	0					
ANR	1204484	Identifier	last_alias		1204421	0					
ANR	1204485	Identifier	NULL		1204421	1					
ANR	1204486	ReturnStatement	return SUCCESS ;	958:1:26634:26648	1204421	4	True				
ANR	1204487	Identifier	SUCCESS		1204421	0					
ANR	1204488	ReturnType	int		1204421	1					
ANR	1204489	Identifier	phar_free_alias		1204421	2					
ANR	1204490	ParameterList	"phar_archive_data * phar , char * alias , int alias_len TSRMLS_DC"		1204421	3					
ANR	1204491	Parameter	phar_archive_data * phar	943:20:26184:26206	1204421	0	True				
ANR	1204492	ParameterType	phar_archive_data *		1204421	0					
ANR	1204493	Identifier	phar		1204421	1					
ANR	1204494	Parameter	char * alias	943:45:26209:26219	1204421	1	True				
ANR	1204495	ParameterType	char *		1204421	0					
ANR	1204496	Identifier	alias		1204421	1					
ANR	1204497	Parameter	int alias_len TSRMLS_DC	943:58:26222:26244	1204421	2	True				
ANR	1204498	ParameterType	int alias_len		1204421	0					
ANR	1204499	Identifier	TSRMLS_DC		1204421	1					
ANR	1204500	CFGEntryNode	ENTRY		1204421		True				
ANR	1204501	CFGExitNode	EXIT		1204421		True				
ANR	1204502	Symbol	SUCCESS		1204421						
ANR	1204503	Symbol	PHAR_GLOBALS		1204421						
ANR	1204504	Symbol	zend_hash_del		1204421						
ANR	1204505	Symbol	NULL		1204421						
ANR	1204506	Symbol	PHAR_G		1204421						
ANR	1204507	Symbol	phar -> fname_len		1204421						
ANR	1204508	Symbol	last_phar		1204421						
ANR	1204509	Symbol	TSRMLS_DC		1204421						
ANR	1204510	Symbol	FAILURE		1204421						
ANR	1204511	Symbol	last_alias		1204421						
ANR	1204512	Symbol	phar -> refcount		1204421						
ANR	1204513	Symbol	phar -> fname		1204421						
ANR	1204514	Symbol	phar -> is_persistent		1204421						
ANR	1204515	Symbol	alias		1204421						
ANR	1204516	Symbol	last_phar_name		1204421						
ANR	1204517	Symbol	& PHAR_GLOBALS -> phar_fname_map		1204421						
ANR	1204518	Symbol	phar		1204421						
ANR	1204519	Symbol	* phar		1204421						
ANR	1204520	DeclStmt									
ANR	1204521	Decl							phar_archive_data	phar_archive_data *	fd
ANR	1204522	Decl							phar_archive_data	phar_archive_data * *	fd_ptr
ANR	1204523	DeclStmt									
ANR	1204524	Decl							char	char *	my_realpath
ANR	1204525	Decl							char	char *	save
ANR	1204526	DeclStmt									
ANR	1204527	Decl							int	int	save_len
ANR	1204528	DeclStmt									
ANR	1204529	Decl							ulong	ulong	fhash
ANR	1204530	Decl							ulong	ulong	ahash
ANR	1204531	Function	phar_compress_filter	1174:0:33397:33705							
ANR	1204532	FunctionDef	"phar_compress_filter (phar_entry_info * entry , int return_unknown)"		1204531	0					
ANR	1204533	CompoundStatement		1175:0:33480:33705	1204531	0					
ANR	1204534	SwitchStatement	switch ( entry -> flags & PHAR_ENT_COMPRESSION_MASK )		1204531	0					
ANR	1204535	Condition	entry -> flags & PHAR_ENT_COMPRESSION_MASK	1176:9:33491:33530	1204531	0	True				
ANR	1204536	BitAndExpression	entry -> flags & PHAR_ENT_COMPRESSION_MASK		1204531	0		&			
ANR	1204537	PtrMemberAccess	entry -> flags		1204531	0					
ANR	1204538	Identifier	entry		1204531	0					
ANR	1204539	Identifier	flags		1204531	1					
ANR	1204540	Identifier	PHAR_ENT_COMPRESSION_MASK		1204531	1					
ANR	1204541	CompoundStatement		2:51:52:52	1204531	1					
ANR	1204542	Label	case PHAR_ENT_COMPRESSED_GZ :	1177:1:33536:33563	1204531	0	True				
ANR	1204543	Identifier	PHAR_ENT_COMPRESSED_GZ		1204531	0					
ANR	1204544	ReturnStatement	"return ""zlib.deflate"" ;"	1178:2:33567:33588	1204531	1	True				
ANR	1204545	PrimaryExpression	"""zlib.deflate"""		1204531	0					
ANR	1204546	Label	case PHAR_ENT_COMPRESSED_BZ2 :	1179:1:33591:33619	1204531	2	True				
ANR	1204547	Identifier	PHAR_ENT_COMPRESSED_BZ2		1204531	0					
ANR	1204548	ReturnStatement	"return ""bzip2.compress"" ;"	1180:2:33623:33646	1204531	3	True				
ANR	1204549	PrimaryExpression	"""bzip2.compress"""		1204531	0					
ANR	1204550	Label	default :	1181:1:33649:33656	1204531	4	True				
ANR	1204551	Identifier	default		1204531	0					
ANR	1204552	ReturnStatement	"return return_unknown ? ""unknown"" : NULL ;"	1182:2:33660:33700	1204531	5	True				
ANR	1204553	ConditionalExpression	"return_unknown ? ""unknown"" : NULL"		1204531	0					
ANR	1204554	Condition	return_unknown		1204531	0					
ANR	1204555	Identifier	return_unknown		1204531	0					
ANR	1204556	PrimaryExpression	"""unknown"""		1204531	1					
ANR	1204557	Identifier	NULL		1204531	2					
ANR	1204558	ReturnType	char *		1204531	1					
ANR	1204559	Identifier	phar_compress_filter		1204531	2					
ANR	1204560	ParameterList	"phar_entry_info * entry , int return_unknown"		1204531	3					
ANR	1204561	Parameter	phar_entry_info * entry	1174:28:33425:33447	1204531	0	True				
ANR	1204562	ParameterType	phar_entry_info *		1204531	0					
ANR	1204563	Identifier	entry		1204531	1					
ANR	1204564	Parameter	int return_unknown	1174:53:33450:33467	1204531	1	True				
ANR	1204565	ParameterType	int		1204531	0					
ANR	1204566	Identifier	return_unknown		1204531	1					
ANR	1204567	CFGEntryNode	ENTRY		1204531		True				
ANR	1204568	CFGExitNode	EXIT		1204531		True				
ANR	1204569	Symbol	return_unknown		1204531						
ANR	1204570	Symbol	entry		1204531						
ANR	1204571	Symbol	NULL		1204531						
ANR	1204572	Symbol	PHAR_ENT_COMPRESSION_MASK		1204531						
ANR	1204573	Symbol	entry -> flags		1204531						
ANR	1204574	Symbol	* entry		1204531						
ANR	1204575	Function	phar_decompress_filter	1190:0:33808:34232							
ANR	1204576	FunctionDef	"phar_decompress_filter (phar_entry_info * entry , int return_unknown)"		1204575	0					
ANR	1204577	CompoundStatement		1191:0:33893:34232	1204575	0					
ANR	1204578	IdentifierDeclStatement	php_uint32 flags ;	1192:1:33896:33912	1204575	0	True				
ANR	1204579	IdentifierDecl	flags		1204575	0					
ANR	1204580	IdentifierDeclType	php_uint32		1204575	0					
ANR	1204581	Identifier	flags		1204575	1					
ANR	1204582	IfStatement	if ( entry -> is_modified )		1204575	1					
ANR	1204583	Condition	entry -> is_modified	1194:5:33920:33937	1204575	0	True				
ANR	1204584	PtrMemberAccess	entry -> is_modified		1204575	0					
ANR	1204585	Identifier	entry		1204575	0					
ANR	1204586	Identifier	is_modified		1204575	1					
ANR	1204587	CompoundStatement		4:25:46:46	1204575	1					
ANR	1204588	ExpressionStatement	flags = entry -> old_flags	1195:2:33944:33968	1204575	0	True				
ANR	1204589	AssignmentExpression	flags = entry -> old_flags		1204575	0		=			
ANR	1204590	Identifier	flags		1204575	0					
ANR	1204591	PtrMemberAccess	entry -> old_flags		1204575	1					
ANR	1204592	Identifier	entry		1204575	0					
ANR	1204593	Identifier	old_flags		1204575	1					
ANR	1204594	ElseStatement	else		1204575	0					
ANR	1204595	CompoundStatement		6:8:84:84	1204575	0					
ANR	1204596	ExpressionStatement	flags = entry -> flags	1197:2:33982:34002	1204575	0	True				
ANR	1204597	AssignmentExpression	flags = entry -> flags		1204575	0		=			
ANR	1204598	Identifier	flags		1204575	0					
ANR	1204599	PtrMemberAccess	entry -> flags		1204575	1					
ANR	1204600	Identifier	entry		1204575	0					
ANR	1204601	Identifier	flags		1204575	1					
ANR	1204602	SwitchStatement	switch ( flags & PHAR_ENT_COMPRESSION_MASK )		1204575	2					
ANR	1204603	Condition	flags & PHAR_ENT_COMPRESSION_MASK	1200:9:34017:34049	1204575	0	True				
ANR	1204604	BitAndExpression	flags & PHAR_ENT_COMPRESSION_MASK		1204575	0		&			
ANR	1204605	Identifier	flags		1204575	0					
ANR	1204606	Identifier	PHAR_ENT_COMPRESSION_MASK		1204575	1					
ANR	1204607	CompoundStatement		10:44:158:158	1204575	1					
ANR	1204608	Label	case PHAR_ENT_COMPRESSED_GZ :	1201:2:34056:34083	1204575	0	True				
ANR	1204609	Identifier	PHAR_ENT_COMPRESSED_GZ		1204575	0					
ANR	1204610	ReturnStatement	"return ""zlib.inflate"" ;"	1202:3:34088:34109	1204575	1	True				
ANR	1204611	PrimaryExpression	"""zlib.inflate"""		1204575	0					
ANR	1204612	Label	case PHAR_ENT_COMPRESSED_BZ2 :	1203:2:34113:34141	1204575	2	True				
ANR	1204613	Identifier	PHAR_ENT_COMPRESSED_BZ2		1204575	0					
ANR	1204614	ReturnStatement	"return ""bzip2.decompress"" ;"	1204:3:34146:34171	1204575	3	True				
ANR	1204615	PrimaryExpression	"""bzip2.decompress"""		1204575	0					
ANR	1204616	Label	default :	1205:2:34175:34182	1204575	4	True				
ANR	1204617	Identifier	default		1204575	0					
ANR	1204618	ReturnStatement	"return return_unknown ? ""unknown"" : NULL ;"	1206:3:34187:34227	1204575	5	True				
ANR	1204619	ConditionalExpression	"return_unknown ? ""unknown"" : NULL"		1204575	0					
ANR	1204620	Condition	return_unknown		1204575	0					
ANR	1204621	Identifier	return_unknown		1204575	0					
ANR	1204622	PrimaryExpression	"""unknown"""		1204575	1					
ANR	1204623	Identifier	NULL		1204575	2					
ANR	1204624	ReturnType	char *		1204575	1					
ANR	1204625	Identifier	phar_decompress_filter		1204575	2					
ANR	1204626	ParameterList	"phar_entry_info * entry , int return_unknown"		1204575	3					
ANR	1204627	Parameter	phar_entry_info * entry	1190:30:33838:33860	1204575	0	True				
ANR	1204628	ParameterType	phar_entry_info *		1204575	0					
ANR	1204629	Identifier	entry		1204575	1					
ANR	1204630	Parameter	int return_unknown	1190:55:33863:33880	1204575	1	True				
ANR	1204631	ParameterType	int		1204575	0					
ANR	1204632	Identifier	return_unknown		1204575	1					
ANR	1204633	CFGEntryNode	ENTRY		1204575		True				
ANR	1204634	CFGExitNode	EXIT		1204575		True				
ANR	1204635	Symbol	return_unknown		1204575						
ANR	1204636	Symbol	entry		1204575						
ANR	1204637	Symbol	NULL		1204575						
ANR	1204638	Symbol	entry -> is_modified		1204575						
ANR	1204639	Symbol	PHAR_ENT_COMPRESSION_MASK		1204575						
ANR	1204640	Symbol	flags		1204575						
ANR	1204641	Symbol	entry -> flags		1204575						
ANR	1204642	Symbol	entry -> old_flags		1204575						
ANR	1204643	Symbol	* entry		1204575						
ANR	1204644	Function	phar_get_entry_info	1214:0:34338:34561							
ANR	1204645	FunctionDef	"phar_get_entry_info (phar_archive_data * phar , char * path , int path_len , char * * error , int security TSRMLS_DC)"		1204644	0					
ANR	1204646	CompoundStatement		1215:0:34474:34561	1204644	0					
ANR	1204647	Statement	return	1216:1:34477:34482	1204644	0	True				
ANR	1204648	Statement	phar_get_entry_info_dir	1216:8:34484:34506	1204644	1	True				
ANR	1204649	Statement	(	1216:31:34507:34507	1204644	2	True				
ANR	1204650	Statement	phar	1216:32:34508:34511	1204644	3	True				
ANR	1204651	Statement	","	1216:36:34512:34512	1204644	4	True				
ANR	1204652	Statement	path	1216:38:34514:34517	1204644	5	True				
ANR	1204653	Statement	","	1216:42:34518:34518	1204644	6	True				
ANR	1204654	Statement	path_len	1216:44:34520:34527	1204644	7	True				
ANR	1204655	Statement	","	1216:52:34528:34528	1204644	8	True				
ANR	1204656	Statement	0	1216:54:34530:34530	1204644	9	True				
ANR	1204657	Statement	","	1216:55:34531:34531	1204644	10	True				
ANR	1204658	Statement	error	1216:57:34533:34537	1204644	11	True				
ANR	1204659	Statement	","	1216:62:34538:34538	1204644	12	True				
ANR	1204660	Statement	security	1216:64:34540:34547	1204644	13	True				
ANR	1204661	Statement	TSRMLS_CC	1216:73:34549:34557	1204644	14	True				
ANR	1204662	Statement	)	1216:82:34558:34558	1204644	15	True				
ANR	1204663	ExpressionStatement		1216:83:34559:34559	1204644	16	True				
ANR	1204664	ReturnType	phar_entry_info *		1204644	1					
ANR	1204665	Identifier	phar_get_entry_info		1204644	2					
ANR	1204666	ParameterList	"phar_archive_data * phar , char * path , int path_len , char * * error , int security TSRMLS_DC"		1204644	3					
ANR	1204667	Parameter	phar_archive_data * phar	1214:37:34375:34397	1204644	0	True				
ANR	1204668	ParameterType	phar_archive_data *		1204644	0					
ANR	1204669	Identifier	phar		1204644	1					
ANR	1204670	Parameter	char * path	1214:62:34400:34409	1204644	1	True				
ANR	1204671	ParameterType	char *		1204644	0					
ANR	1204672	Identifier	path		1204644	1					
ANR	1204673	Parameter	int path_len	1214:74:34412:34423	1204644	2	True				
ANR	1204674	ParameterType	int		1204644	0					
ANR	1204675	Identifier	path_len		1204644	1					
ANR	1204676	Parameter	char * * error	1214:88:34426:34437	1204644	3	True				
ANR	1204677	ParameterType	char * *		1204644	0					
ANR	1204678	Identifier	error		1204644	1					
ANR	1204679	Parameter	int security TSRMLS_DC	1214:102:34440:34461	1204644	4	True				
ANR	1204680	ParameterType	int security		1204644	0					
ANR	1204681	Identifier	TSRMLS_DC		1204644	1					
ANR	1204682	CFGEntryNode	ENTRY		1204644		True				
ANR	1204683	CFGExitNode	EXIT		1204644		True				
ANR	1204684	Symbol	path		1204644						
ANR	1204685	Symbol	path_len		1204644						
ANR	1204686	Symbol	error		1204644						
ANR	1204687	Symbol	phar		1204644						
ANR	1204688	Symbol	TSRMLS_DC		1204644						
ANR	1204689	Function	phar_get_entry_info_dir	1224:0:34827:39319							
ANR	1204690	FunctionDef	"phar_get_entry_info_dir (phar_archive_data * phar , char * path , int path_len , char dir , char * * error , int security TSRMLS_DC)"		1204689	0					
ANR	1204691	CompoundStatement		1225:0:34977:39319	1204689	0					
ANR	1204692	IdentifierDeclStatement	const char * pcr_error ;	1226:1:34980:35001	1204689	0	True				
ANR	1204693	IdentifierDecl	* pcr_error		1204689	0					
ANR	1204694	IdentifierDeclType	const char *		1204689	0					
ANR	1204695	Identifier	pcr_error		1204689	1					
ANR	1204696	IdentifierDeclStatement	phar_entry_info * entry ;	1227:1:35004:35026	1204689	1	True				
ANR	1204697	IdentifierDecl	* entry		1204689	0					
ANR	1204698	IdentifierDeclType	phar_entry_info *		1204689	0					
ANR	1204699	Identifier	entry		1204689	1					
ANR	1204700	IdentifierDeclStatement	int is_dir ;	1228:1:35029:35039	1204689	2	True				
ANR	1204701	IdentifierDecl	is_dir		1204689	0					
ANR	1204702	IdentifierDeclType	int		1204689	0					
ANR	1204703	Identifier	is_dir		1204689	1					
ANR	1204704	ExpressionStatement	"phar_unixify_path_separators ( path , path_len )"	1231:1:35060:35104	1204689	3	True				
ANR	1204705	CallExpression	"phar_unixify_path_separators ( path , path_len )"		1204689	0					
ANR	1204706	Callee	phar_unixify_path_separators		1204689	0					
ANR	1204707	Identifier	phar_unixify_path_separators		1204689	0					
ANR	1204708	ArgumentList	path		1204689	1					
ANR	1204709	Argument	path		1204689	0					
ANR	1204710	Identifier	path		1204689	0					
ANR	1204711	Argument	path_len		1204689	1					
ANR	1204712	Identifier	path_len		1204689	0					
ANR	1204713	ExpressionStatement	is_dir = ( path_len && ( path [ path_len - 1 ] == '/' ) ) ? 1 : 0	1234:1:35115:35173	1204689	4	True				
ANR	1204714	AssignmentExpression	is_dir = ( path_len && ( path [ path_len - 1 ] == '/' ) ) ? 1 : 0		1204689	0		=			
ANR	1204715	Identifier	is_dir		1204689	0					
ANR	1204716	ConditionalExpression	( path_len && ( path [ path_len - 1 ] == '/' ) ) ? 1 : 0		1204689	1					
ANR	1204717	Condition	path_len && ( path [ path_len - 1 ] == '/' )		1204689	0					
ANR	1204718	AndExpression	path_len && ( path [ path_len - 1 ] == '/' )		1204689	0		&&			
ANR	1204719	Identifier	path_len		1204689	0					
ANR	1204720	EqualityExpression	path [ path_len - 1 ] == '/'		1204689	1		==			
ANR	1204721	ArrayIndexing	path [ path_len - 1 ]		1204689	0					
ANR	1204722	Identifier	path		1204689	0					
ANR	1204723	AdditiveExpression	path_len - 1		1204689	1		-			
ANR	1204724	Identifier	path_len		1204689	0					
ANR	1204725	PrimaryExpression	1		1204689	1					
ANR	1204726	PrimaryExpression	'/'		1204689	1					
ANR	1204727	PrimaryExpression	1		1204689	1					
ANR	1204728	PrimaryExpression	0		1204689	2					
ANR	1204729	IfStatement	if ( error )		1204689	5					
ANR	1204730	Condition	error	1236:5:35181:35185	1204689	0	True				
ANR	1204731	Identifier	error		1204689	0					
ANR	1204732	CompoundStatement		12:12:210:210	1204689	1					
ANR	1204733	ExpressionStatement	* error = NULL	1237:2:35192:35205	1204689	0	True				
ANR	1204734	AssignmentExpression	* error = NULL		1204689	0		=			
ANR	1204735	UnaryOperationExpression	* error		1204689	0					
ANR	1204736	UnaryOperator	*		1204689	0					
ANR	1204737	Identifier	error		1204689	1					
ANR	1204738	Identifier	NULL		1204689	1					
ANR	1204739	IfStatement	"if ( security && path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 ) )"		1204689	6					
ANR	1204740	Condition	"security && path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"	1240:5:35216:35301	1204689	0	True				
ANR	1204741	AndExpression	"security && path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1204689	0		&&			
ANR	1204742	Identifier	security		1204689	0					
ANR	1204743	AndExpression	"path_len >= sizeof ( "".phar"" ) - 1 && ! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1204689	1		&&			
ANR	1204744	RelationalExpression	"path_len >= sizeof ( "".phar"" ) - 1"		1204689	0		>=			
ANR	1204745	Identifier	path_len		1204689	0					
ANR	1204746	AdditiveExpression	"sizeof ( "".phar"" ) - 1"		1204689	1		-			
ANR	1204747	SizeofExpression	"sizeof ( "".phar"" )"		1204689	0					
ANR	1204748	Sizeof	sizeof		1204689	0					
ANR	1204749	PrimaryExpression	""".phar"""		1204689	1					
ANR	1204750	PrimaryExpression	1		1204689	1					
ANR	1204751	UnaryOperationExpression	"! memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1204689	1					
ANR	1204752	UnaryOperator	!		1204689	0					
ANR	1204753	CallExpression	"memcmp ( path , "".phar"" , sizeof ( "".phar"" ) - 1 )"		1204689	1					
ANR	1204754	Callee	memcmp		1204689	0					
ANR	1204755	Identifier	memcmp		1204689	0					
ANR	1204756	ArgumentList	path		1204689	1					
ANR	1204757	Argument	path		1204689	0					
ANR	1204758	Identifier	path		1204689	0					
ANR	1204759	Argument	""".phar"""		1204689	1					
ANR	1204760	PrimaryExpression	""".phar"""		1204689	0					
ANR	1204761	Argument	"sizeof ( "".phar"" ) - 1"		1204689	2					
ANR	1204762	AdditiveExpression	"sizeof ( "".phar"" ) - 1"		1204689	0		-			
ANR	1204763	SizeofExpression	"sizeof ( "".phar"" )"		1204689	0					
ANR	1204764	Sizeof	sizeof		1204689	0					
ANR	1204765	PrimaryExpression	""".phar"""		1204689	1					
ANR	1204766	PrimaryExpression	1		1204689	1					
ANR	1204767	CompoundStatement		16:93:326:326	1204689	1					
ANR	1204768	IfStatement	if ( error )		1204689	0					
ANR	1204769	Condition	error	1241:6:35312:35316	1204689	0	True				
ANR	1204770	Identifier	error		1204689	0					
ANR	1204771	CompoundStatement		17:13:341:341	1204689	1					
ANR	1204772	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: cannot directly access magic \\"".phar\\"" directory or files within it"" )"	1242:3:35324:35428	1204689	0	True				
ANR	1204773	CallExpression	"spprintf ( error , 4096 , ""phar error: cannot directly access magic \\"".phar\\"" directory or files within it"" )"		1204689	0					
ANR	1204774	Callee	spprintf		1204689	0					
ANR	1204775	Identifier	spprintf		1204689	0					
ANR	1204776	ArgumentList	error		1204689	1					
ANR	1204777	Argument	error		1204689	0					
ANR	1204778	Identifier	error		1204689	0					
ANR	1204779	Argument	4096		1204689	1					
ANR	1204780	PrimaryExpression	4096		1204689	0					
ANR	1204781	Argument	"""phar error: cannot directly access magic \\"".phar\\"" directory or files within it"""		1204689	2					
ANR	1204782	PrimaryExpression	"""phar error: cannot directly access magic \\"".phar\\"" directory or files within it"""		1204689	0					
ANR	1204783	ReturnStatement	return NULL ;	1244:2:35436:35447	1204689	1	True				
ANR	1204784	Identifier	NULL		1204689	0					
ANR	1204785	IfStatement	if ( ! path_len && ! dir )		1204689	7					
ANR	1204786	Condition	! path_len && ! dir	1247:5:35458:35474	1204689	0	True				
ANR	1204787	AndExpression	! path_len && ! dir		1204689	0		&&			
ANR	1204788	UnaryOperationExpression	! path_len		1204689	0					
ANR	1204789	UnaryOperator	!		1204689	0					
ANR	1204790	Identifier	path_len		1204689	1					
ANR	1204791	UnaryOperationExpression	! dir		1204689	1					
ANR	1204792	UnaryOperator	!		1204689	0					
ANR	1204793	Identifier	dir		1204689	1					
ANR	1204794	CompoundStatement		23:24:499:499	1204689	1					
ANR	1204795	IfStatement	if ( error )		1204689	0					
ANR	1204796	Condition	error	1248:6:35485:35489	1204689	0	True				
ANR	1204797	Identifier	error		1204689	0					
ANR	1204798	CompoundStatement		24:13:514:514	1204689	1					
ANR	1204799	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: invalid path \\""%s\\"" must not be empty"" , path )"	1249:3:35497:35577	1204689	0	True				
ANR	1204800	CallExpression	"spprintf ( error , 4096 , ""phar error: invalid path \\""%s\\"" must not be empty"" , path )"		1204689	0					
ANR	1204801	Callee	spprintf		1204689	0					
ANR	1204802	Identifier	spprintf		1204689	0					
ANR	1204803	ArgumentList	error		1204689	1					
ANR	1204804	Argument	error		1204689	0					
ANR	1204805	Identifier	error		1204689	0					
ANR	1204806	Argument	4096		1204689	1					
ANR	1204807	PrimaryExpression	4096		1204689	0					
ANR	1204808	Argument	"""phar error: invalid path \\""%s\\"" must not be empty"""		1204689	2					
ANR	1204809	PrimaryExpression	"""phar error: invalid path \\""%s\\"" must not be empty"""		1204689	0					
ANR	1204810	Argument	path		1204689	3					
ANR	1204811	Identifier	path		1204689	0					
ANR	1204812	ReturnStatement	return NULL ;	1251:2:35585:35596	1204689	1	True				
ANR	1204813	Identifier	NULL		1204689	0					
ANR	1204814	IfStatement	"if ( phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok )"		1204689	8					
ANR	1204815	Condition	"phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok"	1254:5:35607:35663	1204689	0	True				
ANR	1204816	RelationalExpression	"phar_path_check ( & path , & path_len , & pcr_error ) > pcr_is_ok"		1204689	0		>			
ANR	1204817	CallExpression	"phar_path_check ( & path , & path_len , & pcr_error )"		1204689	0					
ANR	1204818	Callee	phar_path_check		1204689	0					
ANR	1204819	Identifier	phar_path_check		1204689	0					
ANR	1204820	ArgumentList	& path		1204689	1					
ANR	1204821	Argument	& path		1204689	0					
ANR	1204822	UnaryOperationExpression	& path		1204689	0					
ANR	1204823	UnaryOperator	&		1204689	0					
ANR	1204824	Identifier	path		1204689	1					
ANR	1204825	Argument	& path_len		1204689	1					
ANR	1204826	UnaryOperationExpression	& path_len		1204689	0					
ANR	1204827	UnaryOperator	&		1204689	0					
ANR	1204828	Identifier	path_len		1204689	1					
ANR	1204829	Argument	& pcr_error		1204689	2					
ANR	1204830	UnaryOperationExpression	& pcr_error		1204689	0					
ANR	1204831	UnaryOperator	&		1204689	0					
ANR	1204832	Identifier	pcr_error		1204689	1					
ANR	1204833	Identifier	pcr_is_ok		1204689	1					
ANR	1204834	CompoundStatement		30:64:688:688	1204689	1					
ANR	1204835	IfStatement	if ( error )		1204689	0					
ANR	1204836	Condition	error	1255:6:35674:35678	1204689	0	True				
ANR	1204837	Identifier	error		1204689	0					
ANR	1204838	CompoundStatement		31:13:703:703	1204689	1					
ANR	1204839	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: invalid path \\""%s\\"" contains %s"" , path , pcr_error )"	1256:3:35686:35771	1204689	0	True				
ANR	1204840	CallExpression	"spprintf ( error , 4096 , ""phar error: invalid path \\""%s\\"" contains %s"" , path , pcr_error )"		1204689	0					
ANR	1204841	Callee	spprintf		1204689	0					
ANR	1204842	Identifier	spprintf		1204689	0					
ANR	1204843	ArgumentList	error		1204689	1					
ANR	1204844	Argument	error		1204689	0					
ANR	1204845	Identifier	error		1204689	0					
ANR	1204846	Argument	4096		1204689	1					
ANR	1204847	PrimaryExpression	4096		1204689	0					
ANR	1204848	Argument	"""phar error: invalid path \\""%s\\"" contains %s"""		1204689	2					
ANR	1204849	PrimaryExpression	"""phar error: invalid path \\""%s\\"" contains %s"""		1204689	0					
ANR	1204850	Argument	path		1204689	3					
ANR	1204851	Identifier	path		1204689	0					
ANR	1204852	Argument	pcr_error		1204689	4					
ANR	1204853	Identifier	pcr_error		1204689	0					
ANR	1204854	ReturnStatement	return NULL ;	1258:2:35779:35790	1204689	1	True				
ANR	1204855	Identifier	NULL		1204689	0					
ANR	1204856	IfStatement	if ( ! phar -> manifest . arBuckets )		1204689	9					
ANR	1204857	Condition	! phar -> manifest . arBuckets	1261:5:35801:35825	1204689	0	True				
ANR	1204858	UnaryOperationExpression	! phar -> manifest . arBuckets		1204689	0					
ANR	1204859	UnaryOperator	!		1204689	0					
ANR	1204860	MemberAccess	phar -> manifest . arBuckets		1204689	1					
ANR	1204861	PtrMemberAccess	phar -> manifest		1204689	0					
ANR	1204862	Identifier	phar		1204689	0					
ANR	1204863	Identifier	manifest		1204689	1					
ANR	1204864	Identifier	arBuckets		1204689	1					
ANR	1204865	CompoundStatement		37:32:850:850	1204689	1					
ANR	1204866	ReturnStatement	return NULL ;	1262:2:35832:35843	1204689	0	True				
ANR	1204867	Identifier	NULL		1204689	0					
ANR	1204868	IfStatement	if ( is_dir )		1204689	10					
ANR	1204869	Condition	is_dir	1265:5:35854:35859	1204689	0	True				
ANR	1204870	Identifier	is_dir		1204689	0					
ANR	1204871	CompoundStatement		41:13:884:884	1204689	1					
ANR	1204872	IfStatement	if ( ! path_len || path_len == 1 )		1204689	0					
ANR	1204873	Condition	! path_len || path_len == 1	1266:6:35870:35895	1204689	0	True				
ANR	1204874	OrExpression	! path_len || path_len == 1		1204689	0		||			
ANR	1204875	UnaryOperationExpression	! path_len		1204689	0					
ANR	1204876	UnaryOperator	!		1204689	0					
ANR	1204877	Identifier	path_len		1204689	1					
ANR	1204878	EqualityExpression	path_len == 1		1204689	1		==			
ANR	1204879	Identifier	path_len		1204689	0					
ANR	1204880	PrimaryExpression	1		1204689	1					
ANR	1204881	CompoundStatement		42:34:920:920	1204689	1					
ANR	1204882	ReturnStatement	return NULL ;	1267:3:35903:35914	1204689	0	True				
ANR	1204883	Identifier	NULL		1204689	0					
ANR	1204884	ExpressionStatement	path_len --	1269:2:35922:35932	1204689	1	True				
ANR	1204885	PostIncDecOperationExpression	path_len --		1204689	0					
ANR	1204886	Identifier	path_len		1204689	0					
ANR	1204887	IncDec	--		1204689	1					
ANR	1204888	IfStatement	"if ( SUCCESS == zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry ) )"		1204689	11					
ANR	1204889	Condition	"SUCCESS == zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"	1272:5:35943:36016	1204689	0	True				
ANR	1204890	EqualityExpression	"SUCCESS == zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"		1204689	0		==			
ANR	1204891	Identifier	SUCCESS		1204689	0					
ANR	1204892	CallExpression	"zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"		1204689	1					
ANR	1204893	Callee	zend_hash_find		1204689	0					
ANR	1204894	Identifier	zend_hash_find		1204689	0					
ANR	1204895	ArgumentList	& phar -> manifest		1204689	1					
ANR	1204896	Argument	& phar -> manifest		1204689	0					
ANR	1204897	UnaryOperationExpression	& phar -> manifest		1204689	0					
ANR	1204898	UnaryOperator	&		1204689	0					
ANR	1204899	PtrMemberAccess	phar -> manifest		1204689	1					
ANR	1204900	Identifier	phar		1204689	0					
ANR	1204901	Identifier	manifest		1204689	1					
ANR	1204902	Argument	path		1204689	1					
ANR	1204903	Identifier	path		1204689	0					
ANR	1204904	Argument	path_len		1204689	2					
ANR	1204905	Identifier	path_len		1204689	0					
ANR	1204906	Argument	( void * * ) & entry		1204689	3					
ANR	1204907	CastExpression	( void * * ) & entry		1204689	0					
ANR	1204908	CastTarget	void * *		1204689	0					
ANR	1204909	UnaryOperationExpression	& entry		1204689	1					
ANR	1204910	UnaryOperator	&		1204689	0					
ANR	1204911	Identifier	entry		1204689	1					
ANR	1204912	CompoundStatement		48:81:1041:1041	1204689	1					
ANR	1204913	IfStatement	if ( entry -> is_deleted )		1204689	0					
ANR	1204914	Condition	entry -> is_deleted	1273:6:36027:36043	1204689	0	True				
ANR	1204915	PtrMemberAccess	entry -> is_deleted		1204689	0					
ANR	1204916	Identifier	entry		1204689	0					
ANR	1204917	Identifier	is_deleted		1204689	1					
ANR	1204918	CompoundStatement		49:25:1068:1068	1204689	1					
ANR	1204919	ReturnStatement	return NULL ;	1275:3:36115:36126	1204689	0	True				
ANR	1204920	Identifier	NULL		1204689	0					
ANR	1204921	IfStatement	if ( entry -> is_dir && ! dir )		1204689	1					
ANR	1204922	Condition	entry -> is_dir && ! dir	1277:6:36138:36158	1204689	0	True				
ANR	1204923	AndExpression	entry -> is_dir && ! dir		1204689	0		&&			
ANR	1204924	PtrMemberAccess	entry -> is_dir		1204689	0					
ANR	1204925	Identifier	entry		1204689	0					
ANR	1204926	Identifier	is_dir		1204689	1					
ANR	1204927	UnaryOperationExpression	! dir		1204689	1					
ANR	1204928	UnaryOperator	!		1204689	0					
ANR	1204929	Identifier	dir		1204689	1					
ANR	1204930	CompoundStatement		53:29:1183:1183	1204689	1					
ANR	1204931	IfStatement	if ( error )		1204689	0					
ANR	1204932	Condition	error	1278:7:36170:36174	1204689	0	True				
ANR	1204933	Identifier	error		1204689	0					
ANR	1204934	CompoundStatement		54:14:1199:1199	1204689	1					
ANR	1204935	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" is a directory"" , path )"	1279:4:36183:36252	1204689	0	True				
ANR	1204936	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" is a directory"" , path )"		1204689	0					
ANR	1204937	Callee	spprintf		1204689	0					
ANR	1204938	Identifier	spprintf		1204689	0					
ANR	1204939	ArgumentList	error		1204689	1					
ANR	1204940	Argument	error		1204689	0					
ANR	1204941	Identifier	error		1204689	0					
ANR	1204942	Argument	4096		1204689	1					
ANR	1204943	PrimaryExpression	4096		1204689	0					
ANR	1204944	Argument	"""phar error: path \\""%s\\"" is a directory"""		1204689	2					
ANR	1204945	PrimaryExpression	"""phar error: path \\""%s\\"" is a directory"""		1204689	0					
ANR	1204946	Argument	path		1204689	3					
ANR	1204947	Identifier	path		1204689	0					
ANR	1204948	ReturnStatement	return NULL ;	1281:3:36262:36273	1204689	1	True				
ANR	1204949	Identifier	NULL		1204689	0					
ANR	1204950	IfStatement	if ( ! entry -> is_dir && dir == 2 )		1204689	2					
ANR	1204951	Condition	! entry -> is_dir && dir == 2	1283:6:36285:36310	1204689	0	True				
ANR	1204952	AndExpression	! entry -> is_dir && dir == 2		1204689	0		&&			
ANR	1204953	UnaryOperationExpression	! entry -> is_dir		1204689	0					
ANR	1204954	UnaryOperator	!		1204689	0					
ANR	1204955	PtrMemberAccess	entry -> is_dir		1204689	1					
ANR	1204956	Identifier	entry		1204689	0					
ANR	1204957	Identifier	is_dir		1204689	1					
ANR	1204958	EqualityExpression	dir == 2		1204689	1		==			
ANR	1204959	Identifier	dir		1204689	0					
ANR	1204960	PrimaryExpression	2		1204689	1					
ANR	1204961	CompoundStatement		59:34:1335:1335	1204689	1					
ANR	1204962	IfStatement	if ( error )		1204689	0					
ANR	1204963	Condition	error	1285:7:36378:36382	1204689	0	True				
ANR	1204964	Identifier	error		1204689	0					
ANR	1204965	CompoundStatement		61:14:1407:1407	1204689	1					
ANR	1204966	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists and is a not a directory"" , path )"	1286:4:36391:36477	1204689	0	True				
ANR	1204967	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists and is a not a directory"" , path )"		1204689	0					
ANR	1204968	Callee	spprintf		1204689	0					
ANR	1204969	Identifier	spprintf		1204689	0					
ANR	1204970	ArgumentList	error		1204689	1					
ANR	1204971	Argument	error		1204689	0					
ANR	1204972	Identifier	error		1204689	0					
ANR	1204973	Argument	4096		1204689	1					
ANR	1204974	PrimaryExpression	4096		1204689	0					
ANR	1204975	Argument	"""phar error: path \\""%s\\"" exists and is a not a directory"""		1204689	2					
ANR	1204976	PrimaryExpression	"""phar error: path \\""%s\\"" exists and is a not a directory"""		1204689	0					
ANR	1204977	Argument	path		1204689	3					
ANR	1204978	Identifier	path		1204689	0					
ANR	1204979	ReturnStatement	return NULL ;	1288:3:36487:36498	1204689	1	True				
ANR	1204980	Identifier	NULL		1204689	0					
ANR	1204981	ReturnStatement	return entry ;	1290:2:36506:36518	1204689	3	True				
ANR	1204982	Identifier	entry		1204689	0					
ANR	1204983	IfStatement	if ( dir )		1204689	12					
ANR	1204984	Condition	dir	1293:5:36529:36531	1204689	0	True				
ANR	1204985	Identifier	dir		1204689	0					
ANR	1204986	CompoundStatement		69:10:1556:1556	1204689	1					
ANR	1204987	IfStatement	"if ( zend_hash_exists ( & phar -> virtual_dirs , path , path_len ) )"		1204689	0					
ANR	1204988	Condition	"zend_hash_exists ( & phar -> virtual_dirs , path , path_len )"	1294:6:36542:36594	1204689	0	True				
ANR	1204989	CallExpression	"zend_hash_exists ( & phar -> virtual_dirs , path , path_len )"		1204689	0					
ANR	1204990	Callee	zend_hash_exists		1204689	0					
ANR	1204991	Identifier	zend_hash_exists		1204689	0					
ANR	1204992	ArgumentList	& phar -> virtual_dirs		1204689	1					
ANR	1204993	Argument	& phar -> virtual_dirs		1204689	0					
ANR	1204994	UnaryOperationExpression	& phar -> virtual_dirs		1204689	0					
ANR	1204995	UnaryOperator	&		1204689	0					
ANR	1204996	PtrMemberAccess	phar -> virtual_dirs		1204689	1					
ANR	1204997	Identifier	phar		1204689	0					
ANR	1204998	Identifier	virtual_dirs		1204689	1					
ANR	1204999	Argument	path		1204689	1					
ANR	1205000	Identifier	path		1204689	0					
ANR	1205001	Argument	path_len		1204689	2					
ANR	1205002	Identifier	path_len		1204689	0					
ANR	1205003	CompoundStatement		70:61:1619:1619	1204689	1					
ANR	1205004	ExpressionStatement	"entry = ( phar_entry_info * ) ecalloc ( 1 , sizeof ( phar_entry_info ) )"	1296:3:36670:36733	1204689	0	True				
ANR	1205005	AssignmentExpression	"entry = ( phar_entry_info * ) ecalloc ( 1 , sizeof ( phar_entry_info ) )"		1204689	0		=			
ANR	1205006	Identifier	entry		1204689	0					
ANR	1205007	CastExpression	"( phar_entry_info * ) ecalloc ( 1 , sizeof ( phar_entry_info ) )"		1204689	1					
ANR	1205008	CastTarget	phar_entry_info *		1204689	0					
ANR	1205009	CallExpression	"ecalloc ( 1 , sizeof ( phar_entry_info ) )"		1204689	1					
ANR	1205010	Callee	ecalloc		1204689	0					
ANR	1205011	Identifier	ecalloc		1204689	0					
ANR	1205012	ArgumentList	1		1204689	1					
ANR	1205013	Argument	1		1204689	0					
ANR	1205014	PrimaryExpression	1		1204689	0					
ANR	1205015	Argument	sizeof ( phar_entry_info )		1204689	1					
ANR	1205016	SizeofExpression	sizeof ( phar_entry_info )		1204689	0					
ANR	1205017	Sizeof	sizeof		1204689	0					
ANR	1205018	SizeofOperand	phar_entry_info		1204689	1					
ANR	1205019	ExpressionStatement	entry -> is_temp_dir = entry -> is_dir = 1	1298:3:36817:36855	1204689	1	True				
ANR	1205020	AssignmentExpression	entry -> is_temp_dir = entry -> is_dir = 1		1204689	0		=			
ANR	1205021	PtrMemberAccess	entry -> is_temp_dir		1204689	0					
ANR	1205022	Identifier	entry		1204689	0					
ANR	1205023	Identifier	is_temp_dir		1204689	1					
ANR	1205024	AssignmentExpression	entry -> is_dir = 1		1204689	1		=			
ANR	1205025	PtrMemberAccess	entry -> is_dir		1204689	0					
ANR	1205026	Identifier	entry		1204689	0					
ANR	1205027	Identifier	is_dir		1204689	1					
ANR	1205028	PrimaryExpression	1		1204689	1					
ANR	1205029	ExpressionStatement	"entry -> filename = ( char * ) estrndup ( path , path_len + 1 )"	1299:3:36860:36915	1204689	2	True				
ANR	1205030	AssignmentExpression	"entry -> filename = ( char * ) estrndup ( path , path_len + 1 )"		1204689	0		=			
ANR	1205031	PtrMemberAccess	entry -> filename		1204689	0					
ANR	1205032	Identifier	entry		1204689	0					
ANR	1205033	Identifier	filename		1204689	1					
ANR	1205034	CastExpression	"( char * ) estrndup ( path , path_len + 1 )"		1204689	1					
ANR	1205035	CastTarget	char *		1204689	0					
ANR	1205036	CallExpression	"estrndup ( path , path_len + 1 )"		1204689	1					
ANR	1205037	Callee	estrndup		1204689	0					
ANR	1205038	Identifier	estrndup		1204689	0					
ANR	1205039	ArgumentList	path		1204689	1					
ANR	1205040	Argument	path		1204689	0					
ANR	1205041	Identifier	path		1204689	0					
ANR	1205042	Argument	path_len + 1		1204689	1					
ANR	1205043	AdditiveExpression	path_len + 1		1204689	0		+			
ANR	1205044	Identifier	path_len		1204689	0					
ANR	1205045	PrimaryExpression	1		1204689	1					
ANR	1205046	ExpressionStatement	entry -> filename_len = path_len	1300:3:36920:36950	1204689	3	True				
ANR	1205047	AssignmentExpression	entry -> filename_len = path_len		1204689	0		=			
ANR	1205048	PtrMemberAccess	entry -> filename_len		1204689	0					
ANR	1205049	Identifier	entry		1204689	0					
ANR	1205050	Identifier	filename_len		1204689	1					
ANR	1205051	Identifier	path_len		1204689	1					
ANR	1205052	ExpressionStatement	entry -> phar = phar	1301:3:36955:36973	1204689	4	True				
ANR	1205053	AssignmentExpression	entry -> phar = phar		1204689	0		=			
ANR	1205054	PtrMemberAccess	entry -> phar		1204689	0					
ANR	1205055	Identifier	entry		1204689	0					
ANR	1205056	Identifier	phar		1204689	1					
ANR	1205057	Identifier	phar		1204689	1					
ANR	1205058	ReturnStatement	return entry ;	1302:3:36978:36990	1204689	5	True				
ANR	1205059	Identifier	entry		1204689	0					
ANR	1205060	IfStatement	if ( phar -> mounted_dirs . arBuckets && zend_hash_num_elements ( & phar -> mounted_dirs ) )		1204689	13					
ANR	1205061	Condition	phar -> mounted_dirs . arBuckets && zend_hash_num_elements ( & phar -> mounted_dirs )	1306:5:37005:37079	1204689	0	True				
ANR	1205062	AndExpression	phar -> mounted_dirs . arBuckets && zend_hash_num_elements ( & phar -> mounted_dirs )		1204689	0		&&			
ANR	1205063	MemberAccess	phar -> mounted_dirs . arBuckets		1204689	0					
ANR	1205064	PtrMemberAccess	phar -> mounted_dirs		1204689	0					
ANR	1205065	Identifier	phar		1204689	0					
ANR	1205066	Identifier	mounted_dirs		1204689	1					
ANR	1205067	Identifier	arBuckets		1204689	1					
ANR	1205068	CallExpression	zend_hash_num_elements ( & phar -> mounted_dirs )		1204689	1					
ANR	1205069	Callee	zend_hash_num_elements		1204689	0					
ANR	1205070	Identifier	zend_hash_num_elements		1204689	0					
ANR	1205071	ArgumentList	& phar -> mounted_dirs		1204689	1					
ANR	1205072	Argument	& phar -> mounted_dirs		1204689	0					
ANR	1205073	UnaryOperationExpression	& phar -> mounted_dirs		1204689	0					
ANR	1205074	UnaryOperator	&		1204689	0					
ANR	1205075	PtrMemberAccess	phar -> mounted_dirs		1204689	1					
ANR	1205076	Identifier	phar		1204689	0					
ANR	1205077	Identifier	mounted_dirs		1204689	1					
ANR	1205078	CompoundStatement		85:2:2141:2152	1204689	1					
ANR	1205079	IdentifierDeclStatement	char * str_key ;	1307:2:37086:37099	1204689	0	True				
ANR	1205080	IdentifierDecl	* str_key		1204689	0					
ANR	1205081	IdentifierDeclType	char *		1204689	0					
ANR	1205082	Identifier	str_key		1204689	1					
ANR	1205083	IdentifierDeclStatement	ulong unused ;	1308:2:37103:37115	1204689	1	True				
ANR	1205084	IdentifierDecl	unused		1204689	0					
ANR	1205085	IdentifierDeclType	ulong		1204689	0					
ANR	1205086	Identifier	unused		1204689	1					
ANR	1205087	IdentifierDeclStatement	uint keylen ;	1309:2:37119:37130	1204689	2	True				
ANR	1205088	IdentifierDecl	keylen		1204689	0					
ANR	1205089	IdentifierDeclType	uint		1204689	0					
ANR	1205090	Identifier	keylen		1204689	1					
ANR	1205091	ExpressionStatement	zend_hash_internal_pointer_reset ( & phar -> mounted_dirs )	1311:2:37135:37188	1204689	3	True				
ANR	1205092	CallExpression	zend_hash_internal_pointer_reset ( & phar -> mounted_dirs )		1204689	0					
ANR	1205093	Callee	zend_hash_internal_pointer_reset		1204689	0					
ANR	1205094	Identifier	zend_hash_internal_pointer_reset		1204689	0					
ANR	1205095	ArgumentList	& phar -> mounted_dirs		1204689	1					
ANR	1205096	Argument	& phar -> mounted_dirs		1204689	0					
ANR	1205097	UnaryOperationExpression	& phar -> mounted_dirs		1204689	0					
ANR	1205098	UnaryOperator	&		1204689	0					
ANR	1205099	PtrMemberAccess	phar -> mounted_dirs		1204689	1					
ANR	1205100	Identifier	phar		1204689	0					
ANR	1205101	Identifier	mounted_dirs		1204689	1					
ANR	1205102	WhileStatement	while ( FAILURE != zend_hash_has_more_elements ( & phar -> mounted_dirs ) )		1204689	4					
ANR	1205103	Condition	FAILURE != zend_hash_has_more_elements ( & phar -> mounted_dirs )	1312:9:37199:37257	1204689	0	True				
ANR	1205104	EqualityExpression	FAILURE != zend_hash_has_more_elements ( & phar -> mounted_dirs )		1204689	0		!=			
ANR	1205105	Identifier	FAILURE		1204689	0					
ANR	1205106	CallExpression	zend_hash_has_more_elements ( & phar -> mounted_dirs )		1204689	1					
ANR	1205107	Callee	zend_hash_has_more_elements		1204689	0					
ANR	1205108	Identifier	zend_hash_has_more_elements		1204689	0					
ANR	1205109	ArgumentList	& phar -> mounted_dirs		1204689	1					
ANR	1205110	Argument	& phar -> mounted_dirs		1204689	0					
ANR	1205111	UnaryOperationExpression	& phar -> mounted_dirs		1204689	0					
ANR	1205112	UnaryOperator	&		1204689	0					
ANR	1205113	PtrMemberAccess	phar -> mounted_dirs		1204689	1					
ANR	1205114	Identifier	phar		1204689	0					
ANR	1205115	Identifier	mounted_dirs		1204689	1					
ANR	1205116	CompoundStatement		88:70:2282:2282	1204689	1					
ANR	1205117	IfStatement	"if ( HASH_KEY_NON_EXISTENT == zend_hash_get_current_key_ex ( & phar -> mounted_dirs , & str_key , & keylen , & unused , 0 , NULL ) )"		1204689	0					
ANR	1205118	Condition	"HASH_KEY_NON_EXISTENT == zend_hash_get_current_key_ex ( & phar -> mounted_dirs , & str_key , & keylen , & unused , 0 , NULL )"	1313:7:37269:37379	1204689	0	True				
ANR	1205119	EqualityExpression	"HASH_KEY_NON_EXISTENT == zend_hash_get_current_key_ex ( & phar -> mounted_dirs , & str_key , & keylen , & unused , 0 , NULL )"		1204689	0		==			
ANR	1205120	Identifier	HASH_KEY_NON_EXISTENT		1204689	0					
ANR	1205121	CallExpression	"zend_hash_get_current_key_ex ( & phar -> mounted_dirs , & str_key , & keylen , & unused , 0 , NULL )"		1204689	1					
ANR	1205122	Callee	zend_hash_get_current_key_ex		1204689	0					
ANR	1205123	Identifier	zend_hash_get_current_key_ex		1204689	0					
ANR	1205124	ArgumentList	& phar -> mounted_dirs		1204689	1					
ANR	1205125	Argument	& phar -> mounted_dirs		1204689	0					
ANR	1205126	UnaryOperationExpression	& phar -> mounted_dirs		1204689	0					
ANR	1205127	UnaryOperator	&		1204689	0					
ANR	1205128	PtrMemberAccess	phar -> mounted_dirs		1204689	1					
ANR	1205129	Identifier	phar		1204689	0					
ANR	1205130	Identifier	mounted_dirs		1204689	1					
ANR	1205131	Argument	& str_key		1204689	1					
ANR	1205132	UnaryOperationExpression	& str_key		1204689	0					
ANR	1205133	UnaryOperator	&		1204689	0					
ANR	1205134	Identifier	str_key		1204689	1					
ANR	1205135	Argument	& keylen		1204689	2					
ANR	1205136	UnaryOperationExpression	& keylen		1204689	0					
ANR	1205137	UnaryOperator	&		1204689	0					
ANR	1205138	Identifier	keylen		1204689	1					
ANR	1205139	Argument	& unused		1204689	3					
ANR	1205140	UnaryOperationExpression	& unused		1204689	0					
ANR	1205141	UnaryOperator	&		1204689	0					
ANR	1205142	Identifier	unused		1204689	1					
ANR	1205143	Argument	0		1204689	4					
ANR	1205144	PrimaryExpression	0		1204689	0					
ANR	1205145	Argument	NULL		1204689	5					
ANR	1205146	Identifier	NULL		1204689	0					
ANR	1205147	CompoundStatement		89:120:2404:2404	1204689	1					
ANR	1205148	BreakStatement	break ;	1314:4:37388:37393	1204689	0	True				
ANR	1205149	IfStatement	"if ( ( int ) keylen >= path_len || strncmp ( str_key , path , keylen ) )"		1204689	1					
ANR	1205150	Condition	"( int ) keylen >= path_len || strncmp ( str_key , path , keylen )"	1317:7:37408:37464	1204689	0	True				
ANR	1205151	OrExpression	"( int ) keylen >= path_len || strncmp ( str_key , path , keylen )"		1204689	0		||			
ANR	1205152	RelationalExpression	( int ) keylen >= path_len		1204689	0		>=			
ANR	1205153	CastExpression	( int ) keylen		1204689	0					
ANR	1205154	CastTarget	int		1204689	0					
ANR	1205155	Identifier	keylen		1204689	1					
ANR	1205156	Identifier	path_len		1204689	1					
ANR	1205157	CallExpression	"strncmp ( str_key , path , keylen )"		1204689	1					
ANR	1205158	Callee	strncmp		1204689	0					
ANR	1205159	Identifier	strncmp		1204689	0					
ANR	1205160	ArgumentList	str_key		1204689	1					
ANR	1205161	Argument	str_key		1204689	0					
ANR	1205162	Identifier	str_key		1204689	0					
ANR	1205163	Argument	path		1204689	1					
ANR	1205164	Identifier	path		1204689	0					
ANR	1205165	Argument	keylen		1204689	2					
ANR	1205166	Identifier	keylen		1204689	0					
ANR	1205167	CompoundStatement		93:66:2489:2489	1204689	1					
ANR	1205168	ContinueStatement	continue ;	1318:4:37473:37481	1204689	0	True				
ANR	1205169	ElseStatement	else		1204689	0					
ANR	1205170	CompoundStatement		98:4:2555:2577	1204689	0					
ANR	1205171	IdentifierDeclStatement	char * test ;	1320:4:37499:37509	1204689	0	True				
ANR	1205172	IdentifierDecl	* test		1204689	0					
ANR	1205173	IdentifierDeclType	char *		1204689	0					
ANR	1205174	Identifier	test		1204689	1					
ANR	1205175	IdentifierDeclStatement	int test_len ;	1321:4:37515:37527	1204689	1	True				
ANR	1205176	IdentifierDecl	test_len		1204689	0					
ANR	1205177	IdentifierDeclType	int		1204689	0					
ANR	1205178	Identifier	test_len		1204689	1					
ANR	1205179	IdentifierDeclStatement	php_stream_statbuf ssb ;	1322:4:37533:37555	1204689	2	True				
ANR	1205180	IdentifierDecl	ssb		1204689	0					
ANR	1205181	IdentifierDeclType	php_stream_statbuf		1204689	0					
ANR	1205182	Identifier	ssb		1204689	1					
ANR	1205183	IfStatement	"if ( SUCCESS != zend_hash_find ( & phar -> manifest , str_key , keylen , ( void * * ) & entry ) )"		1204689	3					
ANR	1205184	Condition	"SUCCESS != zend_hash_find ( & phar -> manifest , str_key , keylen , ( void * * ) & entry )"	1324:8:37566:37642	1204689	0	True				
ANR	1205185	EqualityExpression	"SUCCESS != zend_hash_find ( & phar -> manifest , str_key , keylen , ( void * * ) & entry )"		1204689	0		!=			
ANR	1205186	Identifier	SUCCESS		1204689	0					
ANR	1205187	CallExpression	"zend_hash_find ( & phar -> manifest , str_key , keylen , ( void * * ) & entry )"		1204689	1					
ANR	1205188	Callee	zend_hash_find		1204689	0					
ANR	1205189	Identifier	zend_hash_find		1204689	0					
ANR	1205190	ArgumentList	& phar -> manifest		1204689	1					
ANR	1205191	Argument	& phar -> manifest		1204689	0					
ANR	1205192	UnaryOperationExpression	& phar -> manifest		1204689	0					
ANR	1205193	UnaryOperator	&		1204689	0					
ANR	1205194	PtrMemberAccess	phar -> manifest		1204689	1					
ANR	1205195	Identifier	phar		1204689	0					
ANR	1205196	Identifier	manifest		1204689	1					
ANR	1205197	Argument	str_key		1204689	1					
ANR	1205198	Identifier	str_key		1204689	0					
ANR	1205199	Argument	keylen		1204689	2					
ANR	1205200	Identifier	keylen		1204689	0					
ANR	1205201	Argument	( void * * ) & entry		1204689	3					
ANR	1205202	CastExpression	( void * * ) & entry		1204689	0					
ANR	1205203	CastTarget	void * *		1204689	0					
ANR	1205204	UnaryOperationExpression	& entry		1204689	1					
ANR	1205205	UnaryOperator	&		1204689	0					
ANR	1205206	Identifier	entry		1204689	1					
ANR	1205207	CompoundStatement		100:87:2667:2667	1204689	1					
ANR	1205208	IfStatement	if ( error )		1204689	0					
ANR	1205209	Condition	error	1325:9:37656:37660	1204689	0	True				
ANR	1205210	Identifier	error		1204689	0					
ANR	1205211	CompoundStatement		101:16:2685:2685	1204689	1					
ANR	1205212	ExpressionStatement	"spprintf ( error , 4096 , ""phar internal error: mounted path \\""%s\\"" could not be retrieved from manifest"" , str_key )"	1326:6:37671:37782	1204689	0	True				
ANR	1205213	CallExpression	"spprintf ( error , 4096 , ""phar internal error: mounted path \\""%s\\"" could not be retrieved from manifest"" , str_key )"		1204689	0					
ANR	1205214	Callee	spprintf		1204689	0					
ANR	1205215	Identifier	spprintf		1204689	0					
ANR	1205216	ArgumentList	error		1204689	1					
ANR	1205217	Argument	error		1204689	0					
ANR	1205218	Identifier	error		1204689	0					
ANR	1205219	Argument	4096		1204689	1					
ANR	1205220	PrimaryExpression	4096		1204689	0					
ANR	1205221	Argument	"""phar internal error: mounted path \\""%s\\"" could not be retrieved from manifest"""		1204689	2					
ANR	1205222	PrimaryExpression	"""phar internal error: mounted path \\""%s\\"" could not be retrieved from manifest"""		1204689	0					
ANR	1205223	Argument	str_key		1204689	3					
ANR	1205224	Identifier	str_key		1204689	0					
ANR	1205225	ReturnStatement	return NULL ;	1328:5:37796:37807	1204689	1	True				
ANR	1205226	Identifier	NULL		1204689	0					
ANR	1205227	IfStatement	if ( ! entry -> tmp || ! entry -> is_mounted )		1204689	4					
ANR	1205228	Condition	! entry -> tmp || ! entry -> is_mounted	1331:8:37824:37856	1204689	0	True				
ANR	1205229	OrExpression	! entry -> tmp || ! entry -> is_mounted		1204689	0		||			
ANR	1205230	UnaryOperationExpression	! entry -> tmp		1204689	0					
ANR	1205231	UnaryOperator	!		1204689	0					
ANR	1205232	PtrMemberAccess	entry -> tmp		1204689	1					
ANR	1205233	Identifier	entry		1204689	0					
ANR	1205234	Identifier	tmp		1204689	1					
ANR	1205235	UnaryOperationExpression	! entry -> is_mounted		1204689	1					
ANR	1205236	UnaryOperator	!		1204689	0					
ANR	1205237	PtrMemberAccess	entry -> is_mounted		1204689	1					
ANR	1205238	Identifier	entry		1204689	0					
ANR	1205239	Identifier	is_mounted		1204689	1					
ANR	1205240	CompoundStatement		107:43:2881:2881	1204689	1					
ANR	1205241	IfStatement	if ( error )		1204689	0					
ANR	1205242	Condition	error	1332:9:37870:37874	1204689	0	True				
ANR	1205243	Identifier	error		1204689	0					
ANR	1205244	CompoundStatement		108:16:2899:2899	1204689	1					
ANR	1205245	ExpressionStatement	"spprintf ( error , 4096 , ""phar internal error: mounted path \\""%s\\"" is not properly initialized as a mounted path"" , str_key )"	1333:6:37885:38005	1204689	0	True				
ANR	1205246	CallExpression	"spprintf ( error , 4096 , ""phar internal error: mounted path \\""%s\\"" is not properly initialized as a mounted path"" , str_key )"		1204689	0					
ANR	1205247	Callee	spprintf		1204689	0					
ANR	1205248	Identifier	spprintf		1204689	0					
ANR	1205249	ArgumentList	error		1204689	1					
ANR	1205250	Argument	error		1204689	0					
ANR	1205251	Identifier	error		1204689	0					
ANR	1205252	Argument	4096		1204689	1					
ANR	1205253	PrimaryExpression	4096		1204689	0					
ANR	1205254	Argument	"""phar internal error: mounted path \\""%s\\"" is not properly initialized as a mounted path"""		1204689	2					
ANR	1205255	PrimaryExpression	"""phar internal error: mounted path \\""%s\\"" is not properly initialized as a mounted path"""		1204689	0					
ANR	1205256	Argument	str_key		1204689	3					
ANR	1205257	Identifier	str_key		1204689	0					
ANR	1205258	ReturnStatement	return NULL ;	1335:5:38019:38030	1204689	1	True				
ANR	1205259	Identifier	NULL		1204689	0					
ANR	1205260	ExpressionStatement	"test_len = spprintf ( & test , MAXPATHLEN , ""%s%s"" , entry -> tmp , path + keylen )"	1338:4:38043:38116	1204689	5	True				
ANR	1205261	AssignmentExpression	"test_len = spprintf ( & test , MAXPATHLEN , ""%s%s"" , entry -> tmp , path + keylen )"		1204689	0		=			
ANR	1205262	Identifier	test_len		1204689	0					
ANR	1205263	CallExpression	"spprintf ( & test , MAXPATHLEN , ""%s%s"" , entry -> tmp , path + keylen )"		1204689	1					
ANR	1205264	Callee	spprintf		1204689	0					
ANR	1205265	Identifier	spprintf		1204689	0					
ANR	1205266	ArgumentList	& test		1204689	1					
ANR	1205267	Argument	& test		1204689	0					
ANR	1205268	UnaryOperationExpression	& test		1204689	0					
ANR	1205269	UnaryOperator	&		1204689	0					
ANR	1205270	Identifier	test		1204689	1					
ANR	1205271	Argument	MAXPATHLEN		1204689	1					
ANR	1205272	Identifier	MAXPATHLEN		1204689	0					
ANR	1205273	Argument	"""%s%s"""		1204689	2					
ANR	1205274	PrimaryExpression	"""%s%s"""		1204689	0					
ANR	1205275	Argument	entry -> tmp		1204689	3					
ANR	1205276	PtrMemberAccess	entry -> tmp		1204689	0					
ANR	1205277	Identifier	entry		1204689	0					
ANR	1205278	Identifier	tmp		1204689	1					
ANR	1205279	Argument	path + keylen		1204689	4					
ANR	1205280	AdditiveExpression	path + keylen		1204689	0		+			
ANR	1205281	Identifier	path		1204689	0					
ANR	1205282	Identifier	keylen		1204689	1					
ANR	1205283	IfStatement	"if ( SUCCESS != php_stream_stat_path ( test , & ssb ) )"		1204689	6					
ANR	1205284	Condition	"SUCCESS != php_stream_stat_path ( test , & ssb )"	1340:8:38127:38169	1204689	0	True				
ANR	1205285	EqualityExpression	"SUCCESS != php_stream_stat_path ( test , & ssb )"		1204689	0		!=			
ANR	1205286	Identifier	SUCCESS		1204689	0					
ANR	1205287	CallExpression	"php_stream_stat_path ( test , & ssb )"		1204689	1					
ANR	1205288	Callee	php_stream_stat_path		1204689	0					
ANR	1205289	Identifier	php_stream_stat_path		1204689	0					
ANR	1205290	ArgumentList	test		1204689	1					
ANR	1205291	Argument	test		1204689	0					
ANR	1205292	Identifier	test		1204689	0					
ANR	1205293	Argument	& ssb		1204689	1					
ANR	1205294	UnaryOperationExpression	& ssb		1204689	0					
ANR	1205295	UnaryOperator	&		1204689	0					
ANR	1205296	Identifier	ssb		1204689	1					
ANR	1205297	CompoundStatement		116:53:3194:3194	1204689	1					
ANR	1205298	ExpressionStatement	efree ( test )	1341:5:38179:38190	1204689	0	True				
ANR	1205299	CallExpression	efree ( test )		1204689	0					
ANR	1205300	Callee	efree		1204689	0					
ANR	1205301	Identifier	efree		1204689	0					
ANR	1205302	ArgumentList	test		1204689	1					
ANR	1205303	Argument	test		1204689	0					
ANR	1205304	Identifier	test		1204689	0					
ANR	1205305	ReturnStatement	return NULL ;	1342:5:38197:38208	1204689	1	True				
ANR	1205306	Identifier	NULL		1204689	0					
ANR	1205307	IfStatement	if ( ssb . sb . st_mode & S_IFDIR && ! dir )		1204689	7					
ANR	1205308	Condition	ssb . sb . st_mode & S_IFDIR && ! dir	1345:8:38225:38256	1204689	0	True				
ANR	1205309	AndExpression	ssb . sb . st_mode & S_IFDIR && ! dir		1204689	0		&&			
ANR	1205310	BitAndExpression	ssb . sb . st_mode & S_IFDIR		1204689	0		&			
ANR	1205311	MemberAccess	ssb . sb . st_mode		1204689	0					
ANR	1205312	MemberAccess	ssb . sb		1204689	0					
ANR	1205313	Identifier	ssb		1204689	0					
ANR	1205314	Identifier	sb		1204689	1					
ANR	1205315	Identifier	st_mode		1204689	1					
ANR	1205316	Identifier	S_IFDIR		1204689	1					
ANR	1205317	UnaryOperationExpression	! dir		1204689	1					
ANR	1205318	UnaryOperator	!		1204689	0					
ANR	1205319	Identifier	dir		1204689	1					
ANR	1205320	CompoundStatement		121:42:3281:3281	1204689	1					
ANR	1205321	ExpressionStatement	efree ( test )	1346:5:38266:38277	1204689	0	True				
ANR	1205322	CallExpression	efree ( test )		1204689	0					
ANR	1205323	Callee	efree		1204689	0					
ANR	1205324	Identifier	efree		1204689	0					
ANR	1205325	ArgumentList	test		1204689	1					
ANR	1205326	Argument	test		1204689	0					
ANR	1205327	Identifier	test		1204689	0					
ANR	1205328	IfStatement	if ( error )		1204689	1					
ANR	1205329	Condition	error	1347:9:38288:38292	1204689	0	True				
ANR	1205330	Identifier	error		1204689	0					
ANR	1205331	CompoundStatement		123:16:3317:3317	1204689	1					
ANR	1205332	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" is a directory"" , path )"	1348:6:38303:38372	1204689	0	True				
ANR	1205333	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" is a directory"" , path )"		1204689	0					
ANR	1205334	Callee	spprintf		1204689	0					
ANR	1205335	Identifier	spprintf		1204689	0					
ANR	1205336	ArgumentList	error		1204689	1					
ANR	1205337	Argument	error		1204689	0					
ANR	1205338	Identifier	error		1204689	0					
ANR	1205339	Argument	4096		1204689	1					
ANR	1205340	PrimaryExpression	4096		1204689	0					
ANR	1205341	Argument	"""phar error: path \\""%s\\"" is a directory"""		1204689	2					
ANR	1205342	PrimaryExpression	"""phar error: path \\""%s\\"" is a directory"""		1204689	0					
ANR	1205343	Argument	path		1204689	3					
ANR	1205344	Identifier	path		1204689	0					
ANR	1205345	ReturnStatement	return NULL ;	1350:5:38386:38397	1204689	2	True				
ANR	1205346	Identifier	NULL		1204689	0					
ANR	1205347	IfStatement	if ( ( ssb . sb . st_mode & S_IFDIR ) == 0 && dir )		1204689	8					
ANR	1205348	Condition	( ssb . sb . st_mode & S_IFDIR ) == 0 && dir	1353:8:38414:38451	1204689	0	True				
ANR	1205349	AndExpression	( ssb . sb . st_mode & S_IFDIR ) == 0 && dir		1204689	0		&&			
ANR	1205350	EqualityExpression	( ssb . sb . st_mode & S_IFDIR ) == 0		1204689	0		==			
ANR	1205351	BitAndExpression	ssb . sb . st_mode & S_IFDIR		1204689	0		&			
ANR	1205352	MemberAccess	ssb . sb . st_mode		1204689	0					
ANR	1205353	MemberAccess	ssb . sb		1204689	0					
ANR	1205354	Identifier	ssb		1204689	0					
ANR	1205355	Identifier	sb		1204689	1					
ANR	1205356	Identifier	st_mode		1204689	1					
ANR	1205357	Identifier	S_IFDIR		1204689	1					
ANR	1205358	PrimaryExpression	0		1204689	1					
ANR	1205359	Identifier	dir		1204689	1					
ANR	1205360	CompoundStatement		129:48:3476:3476	1204689	1					
ANR	1205361	ExpressionStatement	efree ( test )	1354:5:38461:38472	1204689	0	True				
ANR	1205362	CallExpression	efree ( test )		1204689	0					
ANR	1205363	Callee	efree		1204689	0					
ANR	1205364	Identifier	efree		1204689	0					
ANR	1205365	ArgumentList	test		1204689	1					
ANR	1205366	Argument	test		1204689	0					
ANR	1205367	Identifier	test		1204689	0					
ANR	1205368	IfStatement	if ( error )		1204689	1					
ANR	1205369	Condition	error	1356:9:38541:38545	1204689	0	True				
ANR	1205370	Identifier	error		1204689	0					
ANR	1205371	CompoundStatement		132:16:3570:3570	1204689	1					
ANR	1205372	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists and is a not a directory"" , path )"	1357:6:38556:38642	1204689	0	True				
ANR	1205373	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists and is a not a directory"" , path )"		1204689	0					
ANR	1205374	Callee	spprintf		1204689	0					
ANR	1205375	Identifier	spprintf		1204689	0					
ANR	1205376	ArgumentList	error		1204689	1					
ANR	1205377	Argument	error		1204689	0					
ANR	1205378	Identifier	error		1204689	0					
ANR	1205379	Argument	4096		1204689	1					
ANR	1205380	PrimaryExpression	4096		1204689	0					
ANR	1205381	Argument	"""phar error: path \\""%s\\"" exists and is a not a directory"""		1204689	2					
ANR	1205382	PrimaryExpression	"""phar error: path \\""%s\\"" exists and is a not a directory"""		1204689	0					
ANR	1205383	Argument	path		1204689	3					
ANR	1205384	Identifier	path		1204689	0					
ANR	1205385	ReturnStatement	return NULL ;	1359:5:38656:38667	1204689	2	True				
ANR	1205386	Identifier	NULL		1204689	0					
ANR	1205387	Statement	if	1363:4:38718:38719	1204689	9	True				
ANR	1205388	Statement	(	1363:7:38721:38721	1204689	10	True				
ANR	1205389	Statement	SUCCESS	1363:8:38722:38728	1204689	11	True				
ANR	1205390	Statement	!=	1363:16:38730:38731	1204689	12	True				
ANR	1205391	Statement	phar_mount_entry	1363:19:38733:38748	1204689	13	True				
ANR	1205392	Statement	(	1363:35:38749:38749	1204689	14	True				
ANR	1205393	Statement	phar	1363:36:38750:38753	1204689	15	True				
ANR	1205394	Statement	","	1363:40:38754:38754	1204689	16	True				
ANR	1205395	Statement	test	1363:42:38756:38759	1204689	17	True				
ANR	1205396	Statement	","	1363:46:38760:38760	1204689	18	True				
ANR	1205397	Statement	test_len	1363:48:38762:38769	1204689	19	True				
ANR	1205398	Statement	","	1363:56:38770:38770	1204689	20	True				
ANR	1205399	Statement	path	1363:58:38772:38775	1204689	21	True				
ANR	1205400	Statement	","	1363:62:38776:38776	1204689	22	True				
ANR	1205401	Statement	path_len	1363:64:38778:38785	1204689	23	True				
ANR	1205402	Statement	TSRMLS_CC	1363:73:38787:38795	1204689	24	True				
ANR	1205403	Statement	)	1363:82:38796:38796	1204689	25	True				
ANR	1205404	Statement	)	1363:83:38797:38797	1204689	26	True				
ANR	1205405	CompoundStatement		139:85:3821:3821	1204689	27					
ANR	1205406	ExpressionStatement	efree ( test )	1364:5:38806:38817	1204689	0	True				
ANR	1205407	CallExpression	efree ( test )		1204689	0					
ANR	1205408	Callee	efree		1204689	0					
ANR	1205409	Identifier	efree		1204689	0					
ANR	1205410	ArgumentList	test		1204689	1					
ANR	1205411	Argument	test		1204689	0					
ANR	1205412	Identifier	test		1204689	0					
ANR	1205413	IfStatement	if ( error )		1204689	1					
ANR	1205414	Condition	error	1365:9:38828:38832	1204689	0	True				
ANR	1205415	Identifier	error		1204689	0					
ANR	1205416	CompoundStatement		141:16:3857:3857	1204689	1					
ANR	1205417	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be mounted"" , path , test )"	1366:6:38843:38950	1204689	0	True				
ANR	1205418	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be mounted"" , path , test )"		1204689	0					
ANR	1205419	Callee	spprintf		1204689	0					
ANR	1205420	Identifier	spprintf		1204689	0					
ANR	1205421	ArgumentList	error		1204689	1					
ANR	1205422	Argument	error		1204689	0					
ANR	1205423	Identifier	error		1204689	0					
ANR	1205424	Argument	4096		1204689	1					
ANR	1205425	PrimaryExpression	4096		1204689	0					
ANR	1205426	Argument	"""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be mounted"""		1204689	2					
ANR	1205427	PrimaryExpression	"""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be mounted"""		1204689	0					
ANR	1205428	Argument	path		1204689	3					
ANR	1205429	Identifier	path		1204689	0					
ANR	1205430	Argument	test		1204689	4					
ANR	1205431	Identifier	test		1204689	0					
ANR	1205432	ReturnStatement	return NULL ;	1368:5:38964:38975	1204689	2	True				
ANR	1205433	Identifier	NULL		1204689	0					
ANR	1205434	ExpressionStatement	efree ( test )	1371:4:38988:38999	1204689	28	True				
ANR	1205435	CallExpression	efree ( test )		1204689	0					
ANR	1205436	Callee	efree		1204689	0					
ANR	1205437	Identifier	efree		1204689	0					
ANR	1205438	ArgumentList	test		1204689	1					
ANR	1205439	Argument	test		1204689	0					
ANR	1205440	Identifier	test		1204689	0					
ANR	1205441	IfStatement	"if ( SUCCESS != zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry ) )"		1204689	29					
ANR	1205442	Condition	"SUCCESS != zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"	1373:8:39010:39083	1204689	0	True				
ANR	1205443	EqualityExpression	"SUCCESS != zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"		1204689	0		!=			
ANR	1205444	Identifier	SUCCESS		1204689	0					
ANR	1205445	CallExpression	"zend_hash_find ( & phar -> manifest , path , path_len , ( void * * ) & entry )"		1204689	1					
ANR	1205446	Callee	zend_hash_find		1204689	0					
ANR	1205447	Identifier	zend_hash_find		1204689	0					
ANR	1205448	ArgumentList	& phar -> manifest		1204689	1					
ANR	1205449	Argument	& phar -> manifest		1204689	0					
ANR	1205450	UnaryOperationExpression	& phar -> manifest		1204689	0					
ANR	1205451	UnaryOperator	&		1204689	0					
ANR	1205452	PtrMemberAccess	phar -> manifest		1204689	1					
ANR	1205453	Identifier	phar		1204689	0					
ANR	1205454	Identifier	manifest		1204689	1					
ANR	1205455	Argument	path		1204689	1					
ANR	1205456	Identifier	path		1204689	0					
ANR	1205457	Argument	path_len		1204689	2					
ANR	1205458	Identifier	path_len		1204689	0					
ANR	1205459	Argument	( void * * ) & entry		1204689	3					
ANR	1205460	CastExpression	( void * * ) & entry		1204689	0					
ANR	1205461	CastTarget	void * *		1204689	0					
ANR	1205462	UnaryOperationExpression	& entry		1204689	1					
ANR	1205463	UnaryOperator	&		1204689	0					
ANR	1205464	Identifier	entry		1204689	1					
ANR	1205465	CompoundStatement		149:84:4108:4108	1204689	1					
ANR	1205466	IfStatement	if ( error )		1204689	0					
ANR	1205467	Condition	error	1374:9:39097:39101	1204689	0	True				
ANR	1205468	Identifier	error		1204689	0					
ANR	1205469	CompoundStatement		150:16:4126:4126	1204689	1					
ANR	1205470	ExpressionStatement	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be retrieved after being mounted"" , path , test )"	1375:6:39112:39241	1204689	0	True				
ANR	1205471	CallExpression	"spprintf ( error , 4096 , ""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be retrieved after being mounted"" , path , test )"		1204689	0					
ANR	1205472	Callee	spprintf		1204689	0					
ANR	1205473	Identifier	spprintf		1204689	0					
ANR	1205474	ArgumentList	error		1204689	1					
ANR	1205475	Argument	error		1204689	0					
ANR	1205476	Identifier	error		1204689	0					
ANR	1205477	Argument	4096		1204689	1					
ANR	1205478	PrimaryExpression	4096		1204689	0					
ANR	1205479	Argument	"""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be retrieved after being mounted"""		1204689	2					
ANR	1205480	PrimaryExpression	"""phar error: path \\""%s\\"" exists as file \\""%s\\"" and could not be retrieved after being mounted"""		1204689	0					
ANR	1205481	Argument	path		1204689	3					
ANR	1205482	Identifier	path		1204689	0					
ANR	1205483	Argument	test		1204689	4					
ANR	1205484	Identifier	test		1204689	0					
ANR	1205485	ReturnStatement	return NULL ;	1377:5:39255:39266	1204689	1	True				
ANR	1205486	Identifier	NULL		1204689	0					
ANR	1205487	ReturnStatement	return entry ;	1379:4:39278:39290	1204689	30	True				
ANR	1205488	Identifier	entry		1204689	0					
ANR	1205489	ReturnStatement	return NULL ;	1384:1:39306:39317	1204689	14	True				
ANR	1205490	Identifier	NULL		1204689	0					
ANR	1205491	ReturnType	phar_entry_info *		1204689	1					
ANR	1205492	Identifier	phar_get_entry_info_dir		1204689	2					
ANR	1205493	ParameterList	"phar_archive_data * phar , char * path , int path_len , char dir , char * * error , int security TSRMLS_DC"		1204689	3					
ANR	1205494	Parameter	phar_archive_data * phar	1224:41:34868:34890	1204689	0	True				
ANR	1205495	ParameterType	phar_archive_data *		1204689	0					
ANR	1205496	Identifier	phar		1204689	1					
ANR	1205497	Parameter	char * path	1224:66:34893:34902	1204689	1	True				
ANR	1205498	ParameterType	char *		1204689	0					
ANR	1205499	Identifier	path		1204689	1					
ANR	1205500	Parameter	int path_len	1224:78:34905:34916	1204689	2	True				
ANR	1205501	ParameterType	int		1204689	0					
ANR	1205502	Identifier	path_len		1204689	1					
ANR	1205503	Parameter	char dir	1224:92:34919:34926	1204689	3	True				
ANR	1205504	ParameterType	char		1204689	0					
ANR	1205505	Identifier	dir		1204689	1					
ANR	1205506	Parameter	char * * error	1224:102:34929:34940	1204689	4	True				
ANR	1205507	ParameterType	char * *		1204689	0					
ANR	1205508	Identifier	error		1204689	1					
ANR	1205509	Parameter	int security TSRMLS_DC	1224:116:34943:34964	1204689	5	True				
ANR	1205510	ParameterType	int security		1204689	0					
ANR	1205511	Identifier	TSRMLS_DC		1204689	1					
ANR	1205512	CFGEntryNode	ENTRY		1204689		True				
ANR	1205513	CFGExitNode	EXIT		1204689		True				
ANR	1205514	Symbol	zend_hash_has_more_elements		1204689						
ANR	1205515	Symbol	spprintf		1204689						
ANR	1205516	Symbol	* path_len		1204689						
ANR	1205517	Symbol	phar -> mounted_dirs		1204689						
ANR	1205518	Symbol	& keylen		1204689						
ANR	1205519	Symbol	& phar -> virtual_dirs		1204689						
ANR	1205520	Symbol	str_key		1204689						
ANR	1205521	Symbol	ssb		1204689						
ANR	1205522	Symbol	entry -> tmp		1204689						
ANR	1205523	Symbol	php_stream_stat_path		1204689						
ANR	1205524	Symbol	keylen		1204689						
ANR	1205525	Symbol	zend_hash_exists		1204689						
ANR	1205526	Symbol	phar -> mounted_dirs . arBuckets		1204689						
ANR	1205527	Symbol	dir		1204689						
ANR	1205528	Symbol	phar -> manifest . arBuckets		1204689						
ANR	1205529	Symbol	TSRMLS_DC		1204689						
ANR	1205530	Symbol	& path		1204689						
ANR	1205531	Symbol	path		1204689						
ANR	1205532	Symbol	zend_hash_find		1204689						
ANR	1205533	Symbol	strncmp		1204689						
ANR	1205534	Symbol	MAXPATHLEN		1204689						
ANR	1205535	Symbol	memcmp		1204689						
ANR	1205536	Symbol	pcr_is_ok		1204689						
ANR	1205537	Symbol	phar -> manifest		1204689						
ANR	1205538	Symbol	ecalloc		1204689						
ANR	1205539	Symbol	entry -> is_deleted		1204689						
ANR	1205540	Symbol	entry -> phar		1204689						
ANR	1205541	Symbol	phar		1204689						
ANR	1205542	Symbol	& test		1204689						
ANR	1205543	Symbol	NULL		1204689						
ANR	1205544	Symbol	& pcr_error		1204689						
ANR	1205545	Symbol	S_IFDIR		1204689						
ANR	1205546	Symbol	test		1204689						
ANR	1205547	Symbol	zend_hash_get_current_key_ex		1204689						
ANR	1205548	Symbol	entry -> filename		1204689						
ANR	1205549	Symbol	& ssb		1204689						
ANR	1205550	Symbol	& unused		1204689						
ANR	1205551	Symbol	entry		1204689						
ANR	1205552	Symbol	* error		1204689						
ANR	1205553	Symbol	& path_len		1204689						
ANR	1205554	Symbol	entry -> filename_len		1204689						
ANR	1205555	Symbol	unused		1204689						
ANR	1205556	Symbol	entry -> is_dir		1204689						
ANR	1205557	Symbol	& phar -> mounted_dirs		1204689						
ANR	1205558	Symbol	test_len		1204689						
ANR	1205559	Symbol	& phar -> manifest		1204689						
ANR	1205560	Symbol	pcr_error		1204689						
ANR	1205561	Symbol	error		1204689						
ANR	1205562	Symbol	security		1204689						
ANR	1205563	Symbol	estrndup		1204689						
ANR	1205564	Symbol	ssb . sb . st_mode		1204689						
ANR	1205565	Symbol	is_dir		1204689						
ANR	1205566	Symbol	phar_path_check		1204689						
ANR	1205567	Symbol	* entry		1204689						
ANR	1205568	Symbol	path_len		1204689						
ANR	1205569	Symbol	SUCCESS		1204689						
ANR	1205570	Symbol	zend_hash_num_elements		1204689						
ANR	1205571	Symbol	entry -> is_temp_dir		1204689						
ANR	1205572	Symbol	HASH_KEY_NON_EXISTENT		1204689						
ANR	1205573	Symbol	FAILURE		1204689						
ANR	1205574	Symbol	entry -> is_mounted		1204689						
ANR	1205575	Symbol	& entry		1204689						
ANR	1205576	Symbol	& str_key		1204689						
ANR	1205577	Symbol	ssb . sb		1204689						
ANR	1205578	Symbol	* path		1204689						
ANR	1205579	Symbol	* phar		1204689						
ANR	1205580	DeclStmt									
ANR	1205581	Decl							const char	const char [ ]	hexChars
ANR	1205582	DeclStmt									
ANR	1205583	Decl							int	int	pos
ANR	1205584	DeclStmt									
ANR	1205585	Decl							size_t	size_t	len
ANR	1205586	DeclStmt									
ANR	1205587	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	1205588	DeclStmt									
ANR	1205589	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fcc
ANR	1205590	DeclStmt									
ANR	1205591	Decl							zval	zval *	zdata
ANR	1205592	Decl							zval	zval *	zsig
ANR	1205593	Decl							zval	zval *	zkey
ANR	1205594	Decl							zval	zval *	retval_ptr
ANR	1205595	Decl							zval	zval * * [ 3 ]	zp
ANR	1205596	Decl							zval	zval *	openssl
ANR	1205597	DeclStmt									
ANR	1205598	Decl							int	int	read_size
ANR	1205599	Decl							int	int	len
ANR	1205600	DeclStmt									
ANR	1205601	Decl							off_t	off_t	read_len
ANR	1205602	DeclStmt									
ANR	1205603	Decl							unsigned char	unsigned char [ 1024 ]	buf
ANR	1205604	DeclStmt									
ANR	1205605	Decl							BIO	BIO *	in
ANR	1205606	DeclStmt									
ANR	1205607	Decl							EVP_PKEY	EVP_PKEY *	key
ANR	1205608	DeclStmt									
ANR	1205609	Decl							EVP_MD	EVP_MD *	mdtype
ANR	1205610	DeclStmt									
ANR	1205611	Decl							EVP_MD_CTX	EVP_MD_CTX	md_ctx
ANR	1205612	DeclStmt									
ANR	1205613	Decl							int	int	tempsig
ANR	1205614	DeclStmt									
ANR	1205615	Decl							php_uint32	php_uint32	pubkey_len
ANR	1205616	DeclStmt									
ANR	1205617	Decl							char	char *	pubkey
ANR	1205618	Decl							char	char *	pfile
ANR	1205619	DeclStmt									
ANR	1205620	Decl							php_stream	php_stream *	pfp
ANR	1205621	DeclStmt									
ANR	1205622	Decl							unsigned char	unsigned char [ 64 ]	digest
ANR	1205623	DeclStmt									
ANR	1205624	Decl							PHP_SHA512_CTX	PHP_SHA512_CTX	context
ANR	1205625	DeclStmt									
ANR	1205626	Decl							unsigned char	unsigned char [ 32 ]	digest
ANR	1205627	DeclStmt									
ANR	1205628	Decl							PHP_SHA256_CTX	PHP_SHA256_CTX	context
ANR	1205629	DeclStmt									
ANR	1205630	Decl							unsigned char	unsigned char [ 20 ]	digest
ANR	1205631	DeclStmt									
ANR	1205632	Decl							PHP_SHA1_CTX	PHP_SHA1_CTX	context
ANR	1205633	DeclStmt									
ANR	1205634	Decl							unsigned char	unsigned char [ 16 ]	digest
ANR	1205635	DeclStmt									
ANR	1205636	Decl							PHP_MD5_CTX	PHP_MD5_CTX	context
ANR	1205637	DeclStmt									
ANR	1205638	Decl							unsigned char	unsigned char [ 1024 ]	buf
ANR	1205639	DeclStmt									
ANR	1205640	Decl							int	int	sig_len
ANR	1205641	DeclStmt									
ANR	1205642	Decl							unsigned char	unsigned char [ 64 ]	digest
ANR	1205643	DeclStmt									
ANR	1205644	Decl							PHP_SHA512_CTX	PHP_SHA512_CTX	context
ANR	1205645	DeclStmt									
ANR	1205646	Decl							unsigned char	unsigned char [ 32 ]	digest
ANR	1205647	DeclStmt									
ANR	1205648	Decl							PHP_SHA256_CTX	PHP_SHA256_CTX	context
ANR	1205649	DeclStmt									
ANR	1205650	Decl							int	int	siglen
ANR	1205651	DeclStmt									
ANR	1205652	Decl							unsigned char	unsigned char *	sigbuf
ANR	1205653	DeclStmt									
ANR	1205654	Decl							BIO	BIO *	in
ANR	1205655	DeclStmt									
ANR	1205656	Decl							EVP_PKEY	EVP_PKEY *	key
ANR	1205657	DeclStmt									
ANR	1205658	Decl							EVP_MD_CTX	EVP_MD_CTX *	md_ctx
ANR	1205659	DeclStmt									
ANR	1205660	Decl							unsigned char	unsigned char [ 20 ]	digest
ANR	1205661	DeclStmt									
ANR	1205662	Decl							PHP_SHA1_CTX	PHP_SHA1_CTX	context
ANR	1205663	DeclStmt									
ANR	1205664	Decl							unsigned char	unsigned char [ 16 ]	digest
ANR	1205665	DeclStmt									
ANR	1205666	Decl							PHP_MD5_CTX	PHP_MD5_CTX	context
ANR	1205667	Function	phar_add_virtual_dirs	1995:0:53351:53693							
ANR	1205668	FunctionDef	"phar_add_virtual_dirs (phar_archive_data * phar , char * filename , int filename_len TSRMLS_DC)"		1205667	0					
ANR	1205669	CompoundStatement		1996:0:53457:53693	1205667	0					
ANR	1205670	IdentifierDeclStatement	const char * s ;	1997:1:53460:53473	1205667	0	True				
ANR	1205671	IdentifierDecl	* s		1205667	0					
ANR	1205672	IdentifierDeclType	const char *		1205667	0					
ANR	1205673	Identifier	s		1205667	1					
ANR	1205674	WhileStatement	"while ( ( s = zend_memrchr ( filename , '/' , filename_len ) ) )"		1205667	1					
ANR	1205675	Condition	"s = zend_memrchr ( filename , '/' , filename_len )"	1999:8:53484:53530	1205667	0	True				
ANR	1205676	AssignmentExpression	"s = zend_memrchr ( filename , '/' , filename_len )"		1205667	0		=			
ANR	1205677	Identifier	s		1205667	0					
ANR	1205678	CallExpression	"zend_memrchr ( filename , '/' , filename_len )"		1205667	1					
ANR	1205679	Callee	zend_memrchr		1205667	0					
ANR	1205680	Identifier	zend_memrchr		1205667	0					
ANR	1205681	ArgumentList	filename		1205667	1					
ANR	1205682	Argument	filename		1205667	0					
ANR	1205683	Identifier	filename		1205667	0					
ANR	1205684	Argument	'/'		1205667	1					
ANR	1205685	PrimaryExpression	'/'		1205667	0					
ANR	1205686	Argument	filename_len		1205667	2					
ANR	1205687	Identifier	filename_len		1205667	0					
ANR	1205688	CompoundStatement		4:57:75:75	1205667	1					
ANR	1205689	ExpressionStatement	filename_len = s - filename	2000:2:53537:53564	1205667	0	True				
ANR	1205690	AssignmentExpression	filename_len = s - filename		1205667	0		=			
ANR	1205691	Identifier	filename_len		1205667	0					
ANR	1205692	AdditiveExpression	s - filename		1205667	1		-			
ANR	1205693	Identifier	s		1205667	0					
ANR	1205694	Identifier	filename		1205667	1					
ANR	1205695	IfStatement	"if ( ! filename_len || FAILURE == zend_hash_add_empty_element ( & phar -> virtual_dirs , filename , filename_len ) )"		1205667	1					
ANR	1205696	Condition	"! filename_len || FAILURE == zend_hash_add_empty_element ( & phar -> virtual_dirs , filename , filename_len )"	2001:6:53572:53671	1205667	0	True				
ANR	1205697	OrExpression	"! filename_len || FAILURE == zend_hash_add_empty_element ( & phar -> virtual_dirs , filename , filename_len )"		1205667	0		||			
ANR	1205698	UnaryOperationExpression	! filename_len		1205667	0					
ANR	1205699	UnaryOperator	!		1205667	0					
ANR	1205700	Identifier	filename_len		1205667	1					
ANR	1205701	EqualityExpression	"FAILURE == zend_hash_add_empty_element ( & phar -> virtual_dirs , filename , filename_len )"		1205667	1		==			
ANR	1205702	Identifier	FAILURE		1205667	0					
ANR	1205703	CallExpression	"zend_hash_add_empty_element ( & phar -> virtual_dirs , filename , filename_len )"		1205667	1					
ANR	1205704	Callee	zend_hash_add_empty_element		1205667	0					
ANR	1205705	Identifier	zend_hash_add_empty_element		1205667	0					
ANR	1205706	ArgumentList	& phar -> virtual_dirs		1205667	1					
ANR	1205707	Argument	& phar -> virtual_dirs		1205667	0					
ANR	1205708	UnaryOperationExpression	& phar -> virtual_dirs		1205667	0					
ANR	1205709	UnaryOperator	&		1205667	0					
ANR	1205710	PtrMemberAccess	phar -> virtual_dirs		1205667	1					
ANR	1205711	Identifier	phar		1205667	0					
ANR	1205712	Identifier	virtual_dirs		1205667	1					
ANR	1205713	Argument	filename		1205667	1					
ANR	1205714	Identifier	filename		1205667	0					
ANR	1205715	Argument	filename_len		1205667	2					
ANR	1205716	Identifier	filename_len		1205667	0					
ANR	1205717	CompoundStatement		6:108:216:216	1205667	1					
ANR	1205718	BreakStatement	break ;	2002:3:53679:53684	1205667	0	True				
ANR	1205719	ReturnType	void		1205667	1					
ANR	1205720	Identifier	phar_add_virtual_dirs		1205667	2					
ANR	1205721	ParameterList	"phar_archive_data * phar , char * filename , int filename_len TSRMLS_DC"		1205667	3					
ANR	1205722	Parameter	phar_archive_data * phar	1995:27:53378:53400	1205667	0	True				
ANR	1205723	ParameterType	phar_archive_data *		1205667	0					
ANR	1205724	Identifier	phar		1205667	1					
ANR	1205725	Parameter	char * filename	1995:52:53403:53416	1205667	1	True				
ANR	1205726	ParameterType	char *		1205667	0					
ANR	1205727	Identifier	filename		1205667	1					
ANR	1205728	Parameter	int filename_len TSRMLS_DC	1995:68:53419:53444	1205667	2	True				
ANR	1205729	ParameterType	int filename_len		1205667	0					
ANR	1205730	Identifier	TSRMLS_DC		1205667	1					
ANR	1205731	CFGEntryNode	ENTRY		1205667		True				
ANR	1205732	CFGExitNode	EXIT		1205667		True				
ANR	1205733	Symbol	zend_memrchr		1205667						
ANR	1205734	Symbol	filename		1205667						
ANR	1205735	Symbol	s		1205667						
ANR	1205736	Symbol	& phar -> virtual_dirs		1205667						
ANR	1205737	Symbol	zend_hash_add_empty_element		1205667						
ANR	1205738	Symbol	filename_len		1205667						
ANR	1205739	Symbol	phar		1205667						
ANR	1205740	Symbol	TSRMLS_DC		1205667						
ANR	1205741	Symbol	FAILURE		1205667						
ANR	1205742	Function	phar_update_cached_entry	2008:0:53706:54709							
ANR	1205743	FunctionDef	"phar_update_cached_entry (void * data , void * argument)"		1205742	0					
ANR	1205744	CompoundStatement		2009:0:53780:54709	1205742	0					
ANR	1205745	IdentifierDeclStatement	phar_entry_info * entry = ( phar_entry_info * ) data ;	2010:1:53783:53831	1205742	0	True				
ANR	1205746	IdentifierDecl	* entry = ( phar_entry_info * ) data		1205742	0					
ANR	1205747	IdentifierDeclType	phar_entry_info *		1205742	0					
ANR	1205748	Identifier	entry		1205742	1					
ANR	1205749	AssignmentExpression	* entry = ( phar_entry_info * ) data		1205742	2		=			
ANR	1205750	Identifier	entry		1205742	0					
ANR	1205751	CastExpression	( phar_entry_info * ) data		1205742	1					
ANR	1205752	CastTarget	phar_entry_info *		1205742	0					
ANR	1205753	Identifier	data		1205742	1					
ANR	1205754	ExpressionStatement	TSRMLS_FETCH ( )	2011:1:53834:53848	1205742	1	True				
ANR	1205755	CallExpression	TSRMLS_FETCH ( )		1205742	0					
ANR	1205756	Callee	TSRMLS_FETCH		1205742	0					
ANR	1205757	Identifier	TSRMLS_FETCH		1205742	0					
ANR	1205758	ArgumentList			1205742	1					
ANR	1205759	ExpressionStatement	entry -> phar = ( phar_archive_data * ) argument	2013:1:53852:53895	1205742	2	True				
ANR	1205760	AssignmentExpression	entry -> phar = ( phar_archive_data * ) argument		1205742	0		=			
ANR	1205761	PtrMemberAccess	entry -> phar		1205742	0					
ANR	1205762	Identifier	entry		1205742	0					
ANR	1205763	Identifier	phar		1205742	1					
ANR	1205764	CastExpression	( phar_archive_data * ) argument		1205742	1					
ANR	1205765	CastTarget	phar_archive_data *		1205742	0					
ANR	1205766	Identifier	argument		1205742	1					
ANR	1205767	IfStatement	if ( entry -> link )		1205742	3					
ANR	1205768	Condition	entry -> link	2015:5:53903:53913	1205742	0	True				
ANR	1205769	PtrMemberAccess	entry -> link		1205742	0					
ANR	1205770	Identifier	entry		1205742	0					
ANR	1205771	Identifier	link		1205742	1					
ANR	1205772	CompoundStatement		7:18:135:135	1205742	1					
ANR	1205773	ExpressionStatement	entry -> link = estrdup ( entry -> link )	2016:2:53920:53954	1205742	0	True				
ANR	1205774	AssignmentExpression	entry -> link = estrdup ( entry -> link )		1205742	0		=			
ANR	1205775	PtrMemberAccess	entry -> link		1205742	0					
ANR	1205776	Identifier	entry		1205742	0					
ANR	1205777	Identifier	link		1205742	1					
ANR	1205778	CallExpression	estrdup ( entry -> link )		1205742	1					
ANR	1205779	Callee	estrdup		1205742	0					
ANR	1205780	Identifier	estrdup		1205742	0					
ANR	1205781	ArgumentList	entry -> link		1205742	1					
ANR	1205782	Argument	entry -> link		1205742	0					
ANR	1205783	PtrMemberAccess	entry -> link		1205742	0					
ANR	1205784	Identifier	entry		1205742	0					
ANR	1205785	Identifier	link		1205742	1					
ANR	1205786	IfStatement	if ( entry -> tmp )		1205742	4					
ANR	1205787	Condition	entry -> tmp	2019:5:53965:53974	1205742	0	True				
ANR	1205788	PtrMemberAccess	entry -> tmp		1205742	0					
ANR	1205789	Identifier	entry		1205742	0					
ANR	1205790	Identifier	tmp		1205742	1					
ANR	1205791	CompoundStatement		11:17:196:196	1205742	1					
ANR	1205792	ExpressionStatement	entry -> tmp = estrdup ( entry -> tmp )	2020:2:53981:54013	1205742	0	True				
ANR	1205793	AssignmentExpression	entry -> tmp = estrdup ( entry -> tmp )		1205742	0		=			
ANR	1205794	PtrMemberAccess	entry -> tmp		1205742	0					
ANR	1205795	Identifier	entry		1205742	0					
ANR	1205796	Identifier	tmp		1205742	1					
ANR	1205797	CallExpression	estrdup ( entry -> tmp )		1205742	1					
ANR	1205798	Callee	estrdup		1205742	0					
ANR	1205799	Identifier	estrdup		1205742	0					
ANR	1205800	ArgumentList	entry -> tmp		1205742	1					
ANR	1205801	Argument	entry -> tmp		1205742	0					
ANR	1205802	PtrMemberAccess	entry -> tmp		1205742	0					
ANR	1205803	Identifier	entry		1205742	0					
ANR	1205804	Identifier	tmp		1205742	1					
ANR	1205805	ExpressionStatement	entry -> metadata_str . c = 0	2023:1:54020:54045	1205742	5	True				
ANR	1205806	AssignmentExpression	entry -> metadata_str . c = 0		1205742	0		=			
ANR	1205807	MemberAccess	entry -> metadata_str . c		1205742	0					
ANR	1205808	PtrMemberAccess	entry -> metadata_str		1205742	0					
ANR	1205809	Identifier	entry		1205742	0					
ANR	1205810	Identifier	metadata_str		1205742	1					
ANR	1205811	Identifier	c		1205742	1					
ANR	1205812	PrimaryExpression	0		1205742	1					
ANR	1205813	ExpressionStatement	"entry -> filename = estrndup ( entry -> filename , entry -> filename_len )"	2024:1:54048:54112	1205742	6	True				
ANR	1205814	AssignmentExpression	"entry -> filename = estrndup ( entry -> filename , entry -> filename_len )"		1205742	0		=			
ANR	1205815	PtrMemberAccess	entry -> filename		1205742	0					
ANR	1205816	Identifier	entry		1205742	0					
ANR	1205817	Identifier	filename		1205742	1					
ANR	1205818	CallExpression	"estrndup ( entry -> filename , entry -> filename_len )"		1205742	1					
ANR	1205819	Callee	estrndup		1205742	0					
ANR	1205820	Identifier	estrndup		1205742	0					
ANR	1205821	ArgumentList	entry -> filename		1205742	1					
ANR	1205822	Argument	entry -> filename		1205742	0					
ANR	1205823	PtrMemberAccess	entry -> filename		1205742	0					
ANR	1205824	Identifier	entry		1205742	0					
ANR	1205825	Identifier	filename		1205742	1					
ANR	1205826	Argument	entry -> filename_len		1205742	1					
ANR	1205827	PtrMemberAccess	entry -> filename_len		1205742	0					
ANR	1205828	Identifier	entry		1205742	0					
ANR	1205829	Identifier	filename_len		1205742	1					
ANR	1205830	ExpressionStatement	entry -> is_persistent = 0	2025:1:54115:54139	1205742	7	True				
ANR	1205831	AssignmentExpression	entry -> is_persistent = 0		1205742	0		=			
ANR	1205832	PtrMemberAccess	entry -> is_persistent		1205742	0					
ANR	1205833	Identifier	entry		1205742	0					
ANR	1205834	Identifier	is_persistent		1205742	1					
ANR	1205835	PrimaryExpression	0		1205742	1					
ANR	1205836	IfStatement	if ( entry -> metadata )		1205742	8					
ANR	1205837	Condition	entry -> metadata	2027:5:54147:54161	1205742	0	True				
ANR	1205838	PtrMemberAccess	entry -> metadata		1205742	0					
ANR	1205839	Identifier	entry		1205742	0					
ANR	1205840	Identifier	metadata		1205742	1					
ANR	1205841	CompoundStatement		19:22:383:383	1205742	1					
ANR	1205842	IfStatement	if ( entry -> metadata_len )		1205742	0					
ANR	1205843	Condition	entry -> metadata_len	2028:6:54172:54190	1205742	0	True				
ANR	1205844	PtrMemberAccess	entry -> metadata_len		1205742	0					
ANR	1205845	Identifier	entry		1205742	0					
ANR	1205846	Identifier	metadata_len		1205742	1					
ANR	1205847	CompoundStatement		21:3:417:484	1205742	1					
ANR	1205848	IdentifierDeclStatement	"char * buf = estrndup ( ( char * ) entry -> metadata , entry -> metadata_len ) ;"	2029:3:54198:54265	1205742	0	True				
ANR	1205849	IdentifierDecl	"* buf = estrndup ( ( char * ) entry -> metadata , entry -> metadata_len )"		1205742	0					
ANR	1205850	IdentifierDeclType	char *		1205742	0					
ANR	1205851	Identifier	buf		1205742	1					
ANR	1205852	AssignmentExpression	"* buf = estrndup ( ( char * ) entry -> metadata , entry -> metadata_len )"		1205742	2		=			
ANR	1205853	Identifier	buf		1205742	0					
ANR	1205854	CallExpression	"estrndup ( ( char * ) entry -> metadata , entry -> metadata_len )"		1205742	1					
ANR	1205855	Callee	estrndup		1205742	0					
ANR	1205856	Identifier	estrndup		1205742	0					
ANR	1205857	ArgumentList	( char * ) entry -> metadata		1205742	1					
ANR	1205858	Argument	( char * ) entry -> metadata		1205742	0					
ANR	1205859	CastExpression	( char * ) entry -> metadata		1205742	0					
ANR	1205860	CastTarget	char *		1205742	0					
ANR	1205861	PtrMemberAccess	entry -> metadata		1205742	1					
ANR	1205862	Identifier	entry		1205742	0					
ANR	1205863	Identifier	metadata		1205742	1					
ANR	1205864	Argument	entry -> metadata_len		1205742	1					
ANR	1205865	PtrMemberAccess	entry -> metadata_len		1205742	0					
ANR	1205866	Identifier	entry		1205742	0					
ANR	1205867	Identifier	metadata_len		1205742	1					
ANR	1205868	Statement	phar_parse_metadata	2031:3:54323:54341	1205742	1	True				
ANR	1205869	Statement	(	2031:22:54342:54342	1205742	2	True				
ANR	1205870	Statement	(	2031:23:54343:54343	1205742	3	True				
ANR	1205871	Statement	char	2031:24:54344:54347	1205742	4	True				
ANR	1205872	Statement	*	2031:29:54349:54349	1205742	5	True				
ANR	1205873	Statement	*	2031:30:54350:54350	1205742	6	True				
ANR	1205874	Statement	)	2031:31:54351:54351	1205742	7	True				
ANR	1205875	Statement	&	2031:33:54353:54353	1205742	8	True				
ANR	1205876	Statement	buf	2031:34:54354:54356	1205742	9	True				
ANR	1205877	Statement	","	2031:37:54357:54357	1205742	10	True				
ANR	1205878	Statement	&	2031:39:54359:54359	1205742	11	True				
ANR	1205879	Statement	entry	2031:40:54360:54364	1205742	12	True				
ANR	1205880	Statement	->	2031:45:54365:54366	1205742	13	True				
ANR	1205881	Statement	metadata	2031:47:54367:54374	1205742	14	True				
ANR	1205882	Statement	","	2031:55:54375:54375	1205742	15	True				
ANR	1205883	Statement	entry	2031:57:54377:54381	1205742	16	True				
ANR	1205884	Statement	->	2031:62:54382:54383	1205742	17	True				
ANR	1205885	Statement	metadata_len	2031:64:54384:54395	1205742	18	True				
ANR	1205886	Statement	TSRMLS_CC	2031:77:54397:54405	1205742	19	True				
ANR	1205887	Statement	)	2031:86:54406:54406	1205742	20	True				
ANR	1205888	ExpressionStatement		2031:87:54407:54407	1205742	21	True				
ANR	1205889	ExpressionStatement	efree ( buf )	2032:3:54412:54422	1205742	22	True				
ANR	1205890	CallExpression	efree ( buf )		1205742	0					
ANR	1205891	Callee	efree		1205742	0					
ANR	1205892	Identifier	efree		1205742	0					
ANR	1205893	ArgumentList	buf		1205742	1					
ANR	1205894	Argument	buf		1205742	0					
ANR	1205895	Identifier	buf		1205742	0					
ANR	1205896	ElseStatement	else		1205742	0					
ANR	1205897	CompoundStatement		26:3:657:664	1205742	0					
ANR	1205898	IdentifierDeclStatement	zval * t ;	2034:3:54438:54445	1205742	0	True				
ANR	1205899	IdentifierDecl	* t		1205742	0					
ANR	1205900	IdentifierDeclType	zval *		1205742	0					
ANR	1205901	Identifier	t		1205742	1					
ANR	1205902	ExpressionStatement	t = entry -> metadata	2036:3:54451:54470	1205742	1	True				
ANR	1205903	AssignmentExpression	t = entry -> metadata		1205742	0		=			
ANR	1205904	Identifier	t		1205742	0					
ANR	1205905	PtrMemberAccess	entry -> metadata		1205742	1					
ANR	1205906	Identifier	entry		1205742	0					
ANR	1205907	Identifier	metadata		1205742	1					
ANR	1205908	ExpressionStatement	ALLOC_ZVAL ( entry -> metadata )	2037:3:54475:54502	1205742	2	True				
ANR	1205909	CallExpression	ALLOC_ZVAL ( entry -> metadata )		1205742	0					
ANR	1205910	Callee	ALLOC_ZVAL		1205742	0					
ANR	1205911	Identifier	ALLOC_ZVAL		1205742	0					
ANR	1205912	ArgumentList	entry -> metadata		1205742	1					
ANR	1205913	Argument	entry -> metadata		1205742	0					
ANR	1205914	PtrMemberAccess	entry -> metadata		1205742	0					
ANR	1205915	Identifier	entry		1205742	0					
ANR	1205916	Identifier	metadata		1205742	1					
ANR	1205917	ExpressionStatement	* entry -> metadata = * t	2038:3:54507:54528	1205742	3	True				
ANR	1205918	AssignmentExpression	* entry -> metadata = * t		1205742	0		=			
ANR	1205919	UnaryOperationExpression	* entry -> metadata		1205742	0					
ANR	1205920	UnaryOperator	*		1205742	0					
ANR	1205921	PtrMemberAccess	entry -> metadata		1205742	1					
ANR	1205922	Identifier	entry		1205742	0					
ANR	1205923	Identifier	metadata		1205742	1					
ANR	1205924	UnaryOperationExpression	* t		1205742	1					
ANR	1205925	UnaryOperator	*		1205742	0					
ANR	1205926	Identifier	t		1205742	1					
ANR	1205927	ExpressionStatement	zval_copy_ctor ( entry -> metadata )	2039:3:54533:54564	1205742	4	True				
ANR	1205928	CallExpression	zval_copy_ctor ( entry -> metadata )		1205742	0					
ANR	1205929	Callee	zval_copy_ctor		1205742	0					
ANR	1205930	Identifier	zval_copy_ctor		1205742	0					
ANR	1205931	ArgumentList	entry -> metadata		1205742	1					
ANR	1205932	Argument	entry -> metadata		1205742	0					
ANR	1205933	PtrMemberAccess	entry -> metadata		1205742	0					
ANR	1205934	Identifier	entry		1205742	0					
ANR	1205935	Identifier	metadata		1205742	1					
ANR	1205936	ExpressionStatement	"Z_SET_REFCOUNT_P ( entry -> metadata , 1 )"	2040:3:54569:54605	1205742	5	True				
ANR	1205937	CallExpression	"Z_SET_REFCOUNT_P ( entry -> metadata , 1 )"		1205742	0					
ANR	1205938	Callee	Z_SET_REFCOUNT_P		1205742	0					
ANR	1205939	Identifier	Z_SET_REFCOUNT_P		1205742	0					
ANR	1205940	ArgumentList	entry -> metadata		1205742	1					
ANR	1205941	Argument	entry -> metadata		1205742	0					
ANR	1205942	PtrMemberAccess	entry -> metadata		1205742	0					
ANR	1205943	Identifier	entry		1205742	0					
ANR	1205944	Identifier	metadata		1205742	1					
ANR	1205945	Argument	1		1205742	1					
ANR	1205946	PrimaryExpression	1		1205742	0					
ANR	1205947	ExpressionStatement	entry -> metadata_str . c = NULL	2041:3:54610:54638	1205742	6	True				
ANR	1205948	AssignmentExpression	entry -> metadata_str . c = NULL		1205742	0		=			
ANR	1205949	MemberAccess	entry -> metadata_str . c		1205742	0					
ANR	1205950	PtrMemberAccess	entry -> metadata_str		1205742	0					
ANR	1205951	Identifier	entry		1205742	0					
ANR	1205952	Identifier	metadata_str		1205742	1					
ANR	1205953	Identifier	c		1205742	1					
ANR	1205954	Identifier	NULL		1205742	1					
ANR	1205955	ExpressionStatement	entry -> metadata_str . len = 0	2042:3:54643:54670	1205742	7	True				
ANR	1205956	AssignmentExpression	entry -> metadata_str . len = 0		1205742	0		=			
ANR	1205957	MemberAccess	entry -> metadata_str . len		1205742	0					
ANR	1205958	PtrMemberAccess	entry -> metadata_str		1205742	0					
ANR	1205959	Identifier	entry		1205742	0					
ANR	1205960	Identifier	metadata_str		1205742	1					
ANR	1205961	Identifier	len		1205742	1					
ANR	1205962	PrimaryExpression	0		1205742	1					
ANR	1205963	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	2045:1:54680:54707	1205742	9	True				
ANR	1205964	Identifier	ZEND_HASH_APPLY_KEEP		1205742	0					
ANR	1205965	ReturnType	static int		1205742	1					
ANR	1205966	Identifier	phar_update_cached_entry		1205742	2					
ANR	1205967	ParameterList	"void * data , void * argument"		1205742	3					
ANR	1205968	Parameter	void * data	2008:36:53742:53751	1205742	0	True				
ANR	1205969	ParameterType	void *		1205742	0					
ANR	1205970	Identifier	data		1205742	1					
ANR	1205971	Parameter	void * argument	2008:48:53754:53767	1205742	1	True				
ANR	1205972	ParameterType	void *		1205742	0					
ANR	1205973	Identifier	argument		1205742	1					
ANR	1205974	CFGEntryNode	ENTRY		1205742		True				
ANR	1205975	CFGExitNode	EXIT		1205742		True				
ANR	1205976	Symbol	argument		1205742						
ANR	1205977	Symbol	entry -> tmp		1205742						
ANR	1205978	Symbol	NULL		1205742						
ANR	1205979	Symbol	data		1205742						
ANR	1205980	Symbol	* * entry		1205742						
ANR	1205981	Symbol	entry -> filename		1205742						
ANR	1205982	Symbol	entry -> metadata		1205742						
ANR	1205983	Symbol	entry -> metadata_str . len		1205742						
ANR	1205984	Symbol	entry -> link		1205742						
ANR	1205985	Symbol	entry		1205742						
ANR	1205986	Symbol	ZEND_HASH_APPLY_KEEP		1205742						
ANR	1205987	Symbol	entry -> metadata_str . c		1205742						
ANR	1205988	Symbol	estrndup		1205742						
ANR	1205989	Symbol	buf		1205742						
ANR	1205990	Symbol	t		1205742						
ANR	1205991	Symbol	* entry -> metadata		1205742						
ANR	1205992	Symbol	estrdup		1205742						
ANR	1205993	Symbol	entry -> filename_len		1205742						
ANR	1205994	Symbol	entry -> metadata_str		1205742						
ANR	1205995	Symbol	entry -> phar		1205742						
ANR	1205996	Symbol	entry -> is_persistent		1205742						
ANR	1205997	Symbol	entry -> metadata_len		1205742						
ANR	1205998	Symbol	* t		1205742						
ANR	1205999	Symbol	* entry		1205742						
ANR	1206000	DeclStmt									
ANR	1206001	Decl							phar_archive_data	phar_archive_data *	phar
ANR	1206002	DeclStmt									
ANR	1206003	Decl							HashTable	HashTable	newmanifest
ANR	1206004	DeclStmt									
ANR	1206005	Decl							char	char *	fname
ANR	1206006	DeclStmt									
ANR	1206007	Decl							phar_archive_object	phar_archive_object * *	objphar
ANR	1206008	DeclStmt									
ANR	1206009	Decl							char	char *	buf
ANR	1206010	DeclStmt									
ANR	1206011	Decl							zval	zval *	t
ANR	1206012	DeclStmt									
ANR	1206013	Decl							phar_archive_data	phar_archive_data * *	newpphar
ANR	1206014	Decl							phar_archive_data	phar_archive_data *	newphar
