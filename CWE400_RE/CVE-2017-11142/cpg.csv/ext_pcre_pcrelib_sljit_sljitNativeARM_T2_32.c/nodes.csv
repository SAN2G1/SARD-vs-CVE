command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1037401	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeARM_T2_32.c								
ANR	1037402	Function	sljit_get_platform_name	27:0:1455:1566							
ANR	1037403	FunctionDef	sljit_get_platform_name ()		1037402	0					
ANR	1037404	CompoundStatement		28:0:1528:1566	1037402	0					
ANR	1037405	Statement	return	29:1:1531:1536	1037402	0	True				
ANR	1037406	Statement	"""ARM-Thumb2"""	29:8:1538:1549	1037402	1	True				
ANR	1037407	ExpressionStatement	SLJIT_CPUINFO	29:21:1551:1564	1037402	2	True				
ANR	1037408	Identifier	SLJIT_CPUINFO		1037402	0					
ANR	1037409	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1037402	1					
ANR	1037410	Identifier	sljit_get_platform_name		1037402	2					
ANR	1037411	ParameterList			1037402	3					
ANR	1037412	CFGEntryNode	ENTRY		1037402		True				
ANR	1037413	CFGExitNode	EXIT		1037402		True				
ANR	1037414	DeclStmt									
ANR	1037415	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1037416	DeclStmt									
ANR	1037417	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 6 ]	reg_map
ANR	1037418	Function	push_inst16	184:0:5875:6138							
ANR	1037419	FunctionDef	"push_inst16 (struct sljit_compiler * compiler , sljit_ins inst)"		1037418	0					
ANR	1037420	CompoundStatement		185:0:5952:6138	1037418	0					
ANR	1037421	IdentifierDeclStatement	sljit_uh * ptr ;	186:1:5955:5968	1037418	0	True				
ANR	1037422	IdentifierDecl	* ptr		1037418	0					
ANR	1037423	IdentifierDeclType	sljit_uh *		1037418	0					
ANR	1037424	Identifier	ptr		1037418	1					
ANR	1037425	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & 0xffff0000 ) )	187:1:5971:6005	1037418	1	True				
ANR	1037426	CallExpression	SLJIT_ASSERT ( ! ( inst & 0xffff0000 ) )		1037418	0					
ANR	1037427	Callee	SLJIT_ASSERT		1037418	0					
ANR	1037428	Identifier	SLJIT_ASSERT		1037418	0					
ANR	1037429	ArgumentList	! ( inst & 0xffff0000 )		1037418	1					
ANR	1037430	Argument	! ( inst & 0xffff0000 )		1037418	0					
ANR	1037431	UnaryOperationExpression	! ( inst & 0xffff0000 )		1037418	0					
ANR	1037432	UnaryOperator	!		1037418	0					
ANR	1037433	BitAndExpression	inst & 0xffff0000		1037418	1		&			
ANR	1037434	Identifier	inst		1037418	0					
ANR	1037435	PrimaryExpression	0xffff0000		1037418	1					
ANR	1037436	ExpressionStatement	"ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"	189:1:6009:6064	1037418	2	True				
ANR	1037437	AssignmentExpression	"ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1037418	0		=			
ANR	1037438	Identifier	ptr		1037418	0					
ANR	1037439	CastExpression	"( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1037418	1					
ANR	1037440	CastTarget	sljit_uh *		1037418	0					
ANR	1037441	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uh ) )"		1037418	1					
ANR	1037442	Callee	ensure_buf		1037418	0					
ANR	1037443	Identifier	ensure_buf		1037418	0					
ANR	1037444	ArgumentList	compiler		1037418	1					
ANR	1037445	Argument	compiler		1037418	0					
ANR	1037446	Identifier	compiler		1037418	0					
ANR	1037447	Argument	sizeof ( sljit_uh )		1037418	1					
ANR	1037448	SizeofExpression	sizeof ( sljit_uh )		1037418	0					
ANR	1037449	Sizeof	sizeof		1037418	0					
ANR	1037450	SizeofOperand	sljit_uh		1037418	1					
ANR	1037451	ExpressionStatement	FAIL_IF ( ! ptr )	190:1:6067:6080	1037418	3	True				
ANR	1037452	CallExpression	FAIL_IF ( ! ptr )		1037418	0					
ANR	1037453	Callee	FAIL_IF		1037418	0					
ANR	1037454	Identifier	FAIL_IF		1037418	0					
ANR	1037455	ArgumentList	! ptr		1037418	1					
ANR	1037456	Argument	! ptr		1037418	0					
ANR	1037457	UnaryOperationExpression	! ptr		1037418	0					
ANR	1037458	UnaryOperator	!		1037418	0					
ANR	1037459	Identifier	ptr		1037418	1					
ANR	1037460	ExpressionStatement	* ptr = inst	191:1:6083:6094	1037418	4	True				
ANR	1037461	AssignmentExpression	* ptr = inst		1037418	0		=			
ANR	1037462	UnaryOperationExpression	* ptr		1037418	0					
ANR	1037463	UnaryOperator	*		1037418	0					
ANR	1037464	Identifier	ptr		1037418	1					
ANR	1037465	Identifier	inst		1037418	1					
ANR	1037466	ExpressionStatement	compiler -> size ++	192:1:6097:6113	1037418	5	True				
ANR	1037467	PostIncDecOperationExpression	compiler -> size ++		1037418	0					
ANR	1037468	PtrMemberAccess	compiler -> size		1037418	0					
ANR	1037469	Identifier	compiler		1037418	0					
ANR	1037470	Identifier	size		1037418	1					
ANR	1037471	IncDec	++		1037418	1					
ANR	1037472	ReturnStatement	return SLJIT_SUCCESS ;	193:1:6116:6136	1037418	6	True				
ANR	1037473	Identifier	SLJIT_SUCCESS		1037418	0					
ANR	1037474	ReturnType	static sljit_si		1037418	1					
ANR	1037475	Identifier	push_inst16		1037418	2					
ANR	1037476	ParameterList	"struct sljit_compiler * compiler , sljit_ins inst"		1037418	3					
ANR	1037477	Parameter	struct sljit_compiler * compiler	184:28:5903:5933	1037418	0	True				
ANR	1037478	ParameterType	struct sljit_compiler *		1037418	0					
ANR	1037479	Identifier	compiler		1037418	1					
ANR	1037480	Parameter	sljit_ins inst	184:61:5936:5949	1037418	1	True				
ANR	1037481	ParameterType	sljit_ins		1037418	0					
ANR	1037482	Identifier	inst		1037418	1					
ANR	1037483	CFGEntryNode	ENTRY		1037418		True				
ANR	1037484	CFGExitNode	EXIT		1037418		True				
ANR	1037485	Symbol	compiler -> size		1037418						
ANR	1037486	Symbol	inst		1037418						
ANR	1037487	Symbol	ensure_buf		1037418						
ANR	1037488	Symbol	* ptr		1037418						
ANR	1037489	Symbol	SLJIT_SUCCESS		1037418						
ANR	1037490	Symbol	* compiler		1037418						
ANR	1037491	Symbol	compiler		1037418						
ANR	1037492	Symbol	ptr		1037418						
ANR	1037493	Function	push_inst32	196:0:6141:6386							
ANR	1037494	FunctionDef	"push_inst32 (struct sljit_compiler * compiler , sljit_ins inst)"		1037493	0					
ANR	1037495	CompoundStatement		197:0:6218:6386	1037493	0					
ANR	1037496	IdentifierDeclStatement	"sljit_uh * ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	198:1:6221:6287	1037493	0	True				
ANR	1037497	IdentifierDecl	"* ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1037493	0					
ANR	1037498	IdentifierDeclType	sljit_uh *		1037493	0					
ANR	1037499	Identifier	ptr		1037493	1					
ANR	1037500	AssignmentExpression	"* ptr = ( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1037493	2		=			
ANR	1037501	Identifier	ptr		1037493	0					
ANR	1037502	CastExpression	"( sljit_uh * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1037493	1					
ANR	1037503	CastTarget	sljit_uh *		1037493	0					
ANR	1037504	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1037493	1					
ANR	1037505	Callee	ensure_buf		1037493	0					
ANR	1037506	Identifier	ensure_buf		1037493	0					
ANR	1037507	ArgumentList	compiler		1037493	1					
ANR	1037508	Argument	compiler		1037493	0					
ANR	1037509	Identifier	compiler		1037493	0					
ANR	1037510	Argument	sizeof ( sljit_ins )		1037493	1					
ANR	1037511	SizeofExpression	sizeof ( sljit_ins )		1037493	0					
ANR	1037512	Sizeof	sizeof		1037493	0					
ANR	1037513	SizeofOperand	sljit_ins		1037493	1					
ANR	1037514	ExpressionStatement	FAIL_IF ( ! ptr )	199:1:6290:6303	1037493	1	True				
ANR	1037515	CallExpression	FAIL_IF ( ! ptr )		1037493	0					
ANR	1037516	Callee	FAIL_IF		1037493	0					
ANR	1037517	Identifier	FAIL_IF		1037493	0					
ANR	1037518	ArgumentList	! ptr		1037493	1					
ANR	1037519	Argument	! ptr		1037493	0					
ANR	1037520	UnaryOperationExpression	! ptr		1037493	0					
ANR	1037521	UnaryOperator	!		1037493	0					
ANR	1037522	Identifier	ptr		1037493	1					
ANR	1037523	ExpressionStatement	* ptr ++ = inst >> 16	200:1:6306:6325	1037493	2	True				
ANR	1037524	AssignmentExpression	* ptr ++ = inst >> 16		1037493	0		=			
ANR	1037525	UnaryOperationExpression	* ptr ++		1037493	0					
ANR	1037526	UnaryOperator	*		1037493	0					
ANR	1037527	PostIncDecOperationExpression	ptr ++		1037493	1					
ANR	1037528	Identifier	ptr		1037493	0					
ANR	1037529	IncDec	++		1037493	1					
ANR	1037530	ShiftExpression	inst >> 16		1037493	1		>>			
ANR	1037531	Identifier	inst		1037493	0					
ANR	1037532	PrimaryExpression	16		1037493	1					
ANR	1037533	ExpressionStatement	* ptr = inst	201:1:6328:6339	1037493	3	True				
ANR	1037534	AssignmentExpression	* ptr = inst		1037493	0		=			
ANR	1037535	UnaryOperationExpression	* ptr		1037493	0					
ANR	1037536	UnaryOperator	*		1037493	0					
ANR	1037537	Identifier	ptr		1037493	1					
ANR	1037538	Identifier	inst		1037493	1					
ANR	1037539	ExpressionStatement	compiler -> size += 2	202:1:6342:6361	1037493	4	True				
ANR	1037540	AssignmentExpression	compiler -> size += 2		1037493	0		+=			
ANR	1037541	PtrMemberAccess	compiler -> size		1037493	0					
ANR	1037542	Identifier	compiler		1037493	0					
ANR	1037543	Identifier	size		1037493	1					
ANR	1037544	PrimaryExpression	2		1037493	1					
ANR	1037545	ReturnStatement	return SLJIT_SUCCESS ;	203:1:6364:6384	1037493	5	True				
ANR	1037546	Identifier	SLJIT_SUCCESS		1037493	0					
ANR	1037547	ReturnType	static sljit_si		1037493	1					
ANR	1037548	Identifier	push_inst32		1037493	2					
ANR	1037549	ParameterList	"struct sljit_compiler * compiler , sljit_ins inst"		1037493	3					
ANR	1037550	Parameter	struct sljit_compiler * compiler	196:28:6169:6199	1037493	0	True				
ANR	1037551	ParameterType	struct sljit_compiler *		1037493	0					
ANR	1037552	Identifier	compiler		1037493	1					
ANR	1037553	Parameter	sljit_ins inst	196:61:6202:6215	1037493	1	True				
ANR	1037554	ParameterType	sljit_ins		1037493	0					
ANR	1037555	Identifier	inst		1037493	1					
ANR	1037556	CFGEntryNode	ENTRY		1037493		True				
ANR	1037557	CFGExitNode	EXIT		1037493		True				
ANR	1037558	Symbol	compiler -> size		1037493						
ANR	1037559	Symbol	* ptr ++		1037493						
ANR	1037560	Symbol	inst		1037493						
ANR	1037561	Symbol	ensure_buf		1037493						
ANR	1037562	Symbol	* ptr		1037493						
ANR	1037563	Symbol	SLJIT_SUCCESS		1037493						
ANR	1037564	Symbol	* compiler		1037493						
ANR	1037565	Symbol	compiler		1037493						
ANR	1037566	Symbol	ptr		1037493						
ANR	1037567	Function	emit_imm32_const	206:0:6389:6823							
ANR	1037568	FunctionDef	"emit_imm32_const (struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm)"		1037567	0					
ANR	1037569	CompoundStatement		207:0:6496:6823	1037567	0					
ANR	1037570	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"	208:1:6499:6646	1037567	0	True				
ANR	1037571	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"		1037567	0					
ANR	1037572	Callee	FAIL_IF		1037567	0					
ANR	1037573	Identifier	FAIL_IF		1037567	0					
ANR	1037574	ArgumentList	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1037567	1					
ANR	1037575	Argument	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1037567	0					
ANR	1037576	CallExpression	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1037567	0					
ANR	1037577	Callee	push_inst32		1037567	0					
ANR	1037578	Identifier	push_inst32		1037567	0					
ANR	1037579	ArgumentList	compiler		1037567	1					
ANR	1037580	Argument	compiler		1037567	0					
ANR	1037581	Identifier	compiler		1037567	0					
ANR	1037582	Argument	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	1					
ANR	1037583	InclusiveOrExpression	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	0		|			
ANR	1037584	Identifier	MOVW		1037567	0					
ANR	1037585	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	1		|			
ANR	1037586	CallExpression	RD4 ( dst )		1037567	0					
ANR	1037587	Callee	RD4		1037567	0					
ANR	1037588	Identifier	RD4		1037567	0					
ANR	1037589	ArgumentList	dst		1037567	1					
ANR	1037590	Argument	dst		1037567	0					
ANR	1037591	Identifier	dst		1037567	0					
ANR	1037592	InclusiveOrExpression	"COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	1		|			
ANR	1037593	CallExpression	"COPY_BITS ( imm , 12 , 16 , 4 )"		1037567	0					
ANR	1037594	Callee	COPY_BITS		1037567	0					
ANR	1037595	Identifier	COPY_BITS		1037567	0					
ANR	1037596	ArgumentList	imm		1037567	1					
ANR	1037597	Argument	imm		1037567	0					
ANR	1037598	Identifier	imm		1037567	0					
ANR	1037599	Argument	12		1037567	1					
ANR	1037600	PrimaryExpression	12		1037567	0					
ANR	1037601	Argument	16		1037567	2					
ANR	1037602	PrimaryExpression	16		1037567	0					
ANR	1037603	Argument	4		1037567	3					
ANR	1037604	PrimaryExpression	4		1037567	0					
ANR	1037605	InclusiveOrExpression	"COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	1		|			
ANR	1037606	CallExpression	"COPY_BITS ( imm , 11 , 26 , 1 )"		1037567	0					
ANR	1037607	Callee	COPY_BITS		1037567	0					
ANR	1037608	Identifier	COPY_BITS		1037567	0					
ANR	1037609	ArgumentList	imm		1037567	1					
ANR	1037610	Argument	imm		1037567	0					
ANR	1037611	Identifier	imm		1037567	0					
ANR	1037612	Argument	11		1037567	1					
ANR	1037613	PrimaryExpression	11		1037567	0					
ANR	1037614	Argument	26		1037567	2					
ANR	1037615	PrimaryExpression	26		1037567	0					
ANR	1037616	Argument	1		1037567	3					
ANR	1037617	PrimaryExpression	1		1037567	0					
ANR	1037618	InclusiveOrExpression	"COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1037567	1		|			
ANR	1037619	CallExpression	"COPY_BITS ( imm , 8 , 12 , 3 )"		1037567	0					
ANR	1037620	Callee	COPY_BITS		1037567	0					
ANR	1037621	Identifier	COPY_BITS		1037567	0					
ANR	1037622	ArgumentList	imm		1037567	1					
ANR	1037623	Argument	imm		1037567	0					
ANR	1037624	Identifier	imm		1037567	0					
ANR	1037625	Argument	8		1037567	1					
ANR	1037626	PrimaryExpression	8		1037567	0					
ANR	1037627	Argument	12		1037567	2					
ANR	1037628	PrimaryExpression	12		1037567	0					
ANR	1037629	Argument	3		1037567	3					
ANR	1037630	PrimaryExpression	3		1037567	0					
ANR	1037631	BitAndExpression	imm & 0xff		1037567	1		&			
ANR	1037632	Identifier	imm		1037567	0					
ANR	1037633	PrimaryExpression	0xff		1037567	1					
ANR	1037634	ReturnStatement	"return push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) ) ;"	210:1:6649:6821	1037567	1	True				
ANR	1037635	CallExpression	"push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) )"		1037567	0					
ANR	1037636	Callee	push_inst32		1037567	0					
ANR	1037637	Identifier	push_inst32		1037567	0					
ANR	1037638	ArgumentList	compiler		1037567	1					
ANR	1037639	Argument	compiler		1037567	0					
ANR	1037640	Identifier	compiler		1037567	0					
ANR	1037641	Argument	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	1					
ANR	1037642	InclusiveOrExpression	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	0		|			
ANR	1037643	Identifier	MOVT		1037567	0					
ANR	1037644	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	1		|			
ANR	1037645	CallExpression	RD4 ( dst )		1037567	0					
ANR	1037646	Callee	RD4		1037567	0					
ANR	1037647	Identifier	RD4		1037567	0					
ANR	1037648	ArgumentList	dst		1037567	1					
ANR	1037649	Argument	dst		1037567	0					
ANR	1037650	Identifier	dst		1037567	0					
ANR	1037651	InclusiveOrExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	1		|			
ANR	1037652	CallExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 )"		1037567	0					
ANR	1037653	Callee	COPY_BITS		1037567	0					
ANR	1037654	Identifier	COPY_BITS		1037567	0					
ANR	1037655	ArgumentList	imm		1037567	1					
ANR	1037656	Argument	imm		1037567	0					
ANR	1037657	Identifier	imm		1037567	0					
ANR	1037658	Argument	12 + 16		1037567	1					
ANR	1037659	AdditiveExpression	12 + 16		1037567	0		+			
ANR	1037660	PrimaryExpression	12		1037567	0					
ANR	1037661	PrimaryExpression	16		1037567	1					
ANR	1037662	Argument	16		1037567	2					
ANR	1037663	PrimaryExpression	16		1037567	0					
ANR	1037664	Argument	4		1037567	3					
ANR	1037665	PrimaryExpression	4		1037567	0					
ANR	1037666	InclusiveOrExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	1		|			
ANR	1037667	CallExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 )"		1037567	0					
ANR	1037668	Callee	COPY_BITS		1037567	0					
ANR	1037669	Identifier	COPY_BITS		1037567	0					
ANR	1037670	ArgumentList	imm		1037567	1					
ANR	1037671	Argument	imm		1037567	0					
ANR	1037672	Identifier	imm		1037567	0					
ANR	1037673	Argument	11 + 16		1037567	1					
ANR	1037674	AdditiveExpression	11 + 16		1037567	0		+			
ANR	1037675	PrimaryExpression	11		1037567	0					
ANR	1037676	PrimaryExpression	16		1037567	1					
ANR	1037677	Argument	26		1037567	2					
ANR	1037678	PrimaryExpression	26		1037567	0					
ANR	1037679	Argument	1		1037567	3					
ANR	1037680	PrimaryExpression	1		1037567	0					
ANR	1037681	InclusiveOrExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1037567	1		|			
ANR	1037682	CallExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 )"		1037567	0					
ANR	1037683	Callee	COPY_BITS		1037567	0					
ANR	1037684	Identifier	COPY_BITS		1037567	0					
ANR	1037685	ArgumentList	imm		1037567	1					
ANR	1037686	Argument	imm		1037567	0					
ANR	1037687	Identifier	imm		1037567	0					
ANR	1037688	Argument	8 + 16		1037567	1					
ANR	1037689	AdditiveExpression	8 + 16		1037567	0		+			
ANR	1037690	PrimaryExpression	8		1037567	0					
ANR	1037691	PrimaryExpression	16		1037567	1					
ANR	1037692	Argument	12		1037567	2					
ANR	1037693	PrimaryExpression	12		1037567	0					
ANR	1037694	Argument	3		1037567	3					
ANR	1037695	PrimaryExpression	3		1037567	0					
ANR	1037696	ShiftExpression	( imm & 0xff0000 ) >> 16		1037567	1		>>			
ANR	1037697	BitAndExpression	imm & 0xff0000		1037567	0		&			
ANR	1037698	Identifier	imm		1037567	0					
ANR	1037699	PrimaryExpression	0xff0000		1037567	1					
ANR	1037700	PrimaryExpression	16		1037567	1					
ANR	1037701	ReturnType	static SLJIT_INLINE sljit_si		1037567	1					
ANR	1037702	Identifier	emit_imm32_const		1037567	2					
ANR	1037703	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm"		1037567	3					
ANR	1037704	Parameter	struct sljit_compiler * compiler	206:46:6435:6465	1037567	0	True				
ANR	1037705	ParameterType	struct sljit_compiler *		1037567	0					
ANR	1037706	Identifier	compiler		1037567	1					
ANR	1037707	Parameter	sljit_si dst	206:79:6468:6479	1037567	1	True				
ANR	1037708	ParameterType	sljit_si		1037567	0					
ANR	1037709	Identifier	dst		1037567	1					
ANR	1037710	Parameter	sljit_uw imm	206:93:6482:6493	1037567	2	True				
ANR	1037711	ParameterType	sljit_uw		1037567	0					
ANR	1037712	Identifier	imm		1037567	1					
ANR	1037713	CFGEntryNode	ENTRY		1037567		True				
ANR	1037714	CFGExitNode	EXIT		1037567		True				
ANR	1037715	Symbol	COPY_BITS		1037567						
ANR	1037716	Symbol	RD4		1037567						
ANR	1037717	Symbol	dst		1037567						
ANR	1037718	Symbol	MOVT		1037567						
ANR	1037719	Symbol	MOVW		1037567						
ANR	1037720	Symbol	imm		1037567						
ANR	1037721	Symbol	compiler		1037567						
ANR	1037722	Symbol	push_inst32		1037567						
ANR	1037723	Function	modify_imm32_const	214:0:6826:7397							
ANR	1037724	FunctionDef	"modify_imm32_const (sljit_uh * inst , sljit_uw new_imm)"		1037723	0					
ANR	1037725	CompoundStatement		215:0:6904:7397	1037723	0					
ANR	1037726	IdentifierDeclStatement	sljit_si dst = inst [ 1 ] & 0x0f00 ;	216:1:6907:6938	1037723	0	True				
ANR	1037727	IdentifierDecl	dst = inst [ 1 ] & 0x0f00		1037723	0					
ANR	1037728	IdentifierDeclType	sljit_si		1037723	0					
ANR	1037729	Identifier	dst		1037723	1					
ANR	1037730	AssignmentExpression	dst = inst [ 1 ] & 0x0f00		1037723	2		=			
ANR	1037731	Identifier	dst		1037723	0					
ANR	1037732	BitAndExpression	inst [ 1 ] & 0x0f00		1037723	1		&			
ANR	1037733	ArrayIndexing	inst [ 1 ]		1037723	0					
ANR	1037734	Identifier	inst		1037723	0					
ANR	1037735	PrimaryExpression	1		1037723	1					
ANR	1037736	PrimaryExpression	0x0f00		1037723	1					
ANR	1037737	ExpressionStatement	SLJIT_ASSERT ( ( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 ) )	217:1:6941:7060	1037723	1	True				
ANR	1037738	CallExpression	SLJIT_ASSERT ( ( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 ) )		1037723	0					
ANR	1037739	Callee	SLJIT_ASSERT		1037723	0					
ANR	1037740	Identifier	SLJIT_ASSERT		1037723	0					
ANR	1037741	ArgumentList	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1037723	1					
ANR	1037742	Argument	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1037723	0					
ANR	1037743	AndExpression	( ( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 ) ) && ( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1037723	0		&&			
ANR	1037744	EqualityExpression	( inst [ 0 ] & 0xfbf0 ) == ( MOVW >> 16 )		1037723	0		==			
ANR	1037745	BitAndExpression	inst [ 0 ] & 0xfbf0		1037723	0		&			
ANR	1037746	ArrayIndexing	inst [ 0 ]		1037723	0					
ANR	1037747	Identifier	inst		1037723	0					
ANR	1037748	PrimaryExpression	0		1037723	1					
ANR	1037749	PrimaryExpression	0xfbf0		1037723	1					
ANR	1037750	ShiftExpression	MOVW >> 16		1037723	1		>>			
ANR	1037751	Identifier	MOVW		1037723	0					
ANR	1037752	PrimaryExpression	16		1037723	1					
ANR	1037753	AndExpression	( ( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 ) ) && dst == ( inst [ 3 ] & 0x0f00 )		1037723	1		&&			
ANR	1037754	EqualityExpression	( inst [ 2 ] & 0xfbf0 ) == ( MOVT >> 16 )		1037723	0		==			
ANR	1037755	BitAndExpression	inst [ 2 ] & 0xfbf0		1037723	0		&			
ANR	1037756	ArrayIndexing	inst [ 2 ]		1037723	0					
ANR	1037757	Identifier	inst		1037723	0					
ANR	1037758	PrimaryExpression	2		1037723	1					
ANR	1037759	PrimaryExpression	0xfbf0		1037723	1					
ANR	1037760	ShiftExpression	MOVT >> 16		1037723	1		>>			
ANR	1037761	Identifier	MOVT		1037723	0					
ANR	1037762	PrimaryExpression	16		1037723	1					
ANR	1037763	EqualityExpression	dst == ( inst [ 3 ] & 0x0f00 )		1037723	1		==			
ANR	1037764	Identifier	dst		1037723	0					
ANR	1037765	BitAndExpression	inst [ 3 ] & 0x0f00		1037723	1		&			
ANR	1037766	ArrayIndexing	inst [ 3 ]		1037723	0					
ANR	1037767	Identifier	inst		1037723	0					
ANR	1037768	PrimaryExpression	3		1037723	1					
ANR	1037769	PrimaryExpression	0x0f00		1037723	1					
ANR	1037770	ExpressionStatement	"inst [ 0 ] = ( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"	218:1:7063:7148	1037723	2	True				
ANR	1037771	AssignmentExpression	"inst [ 0 ] = ( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1037723	0		=			
ANR	1037772	ArrayIndexing	inst [ 0 ]		1037723	0					
ANR	1037773	Identifier	inst		1037723	0					
ANR	1037774	PrimaryExpression	0		1037723	1					
ANR	1037775	InclusiveOrExpression	"( MOVW >> 16 ) | COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1037723	1		|			
ANR	1037776	ShiftExpression	MOVW >> 16		1037723	0		>>			
ANR	1037777	Identifier	MOVW		1037723	0					
ANR	1037778	PrimaryExpression	16		1037723	1					
ANR	1037779	InclusiveOrExpression	"COPY_BITS ( new_imm , 12 , 0 , 4 ) | COPY_BITS ( new_imm , 11 , 10 , 1 )"		1037723	1		|			
ANR	1037780	CallExpression	"COPY_BITS ( new_imm , 12 , 0 , 4 )"		1037723	0					
ANR	1037781	Callee	COPY_BITS		1037723	0					
ANR	1037782	Identifier	COPY_BITS		1037723	0					
ANR	1037783	ArgumentList	new_imm		1037723	1					
ANR	1037784	Argument	new_imm		1037723	0					
ANR	1037785	Identifier	new_imm		1037723	0					
ANR	1037786	Argument	12		1037723	1					
ANR	1037787	PrimaryExpression	12		1037723	0					
ANR	1037788	Argument	0		1037723	2					
ANR	1037789	PrimaryExpression	0		1037723	0					
ANR	1037790	Argument	4		1037723	3					
ANR	1037791	PrimaryExpression	4		1037723	0					
ANR	1037792	CallExpression	"COPY_BITS ( new_imm , 11 , 10 , 1 )"		1037723	1					
ANR	1037793	Callee	COPY_BITS		1037723	0					
ANR	1037794	Identifier	COPY_BITS		1037723	0					
ANR	1037795	ArgumentList	new_imm		1037723	1					
ANR	1037796	Argument	new_imm		1037723	0					
ANR	1037797	Identifier	new_imm		1037723	0					
ANR	1037798	Argument	11		1037723	1					
ANR	1037799	PrimaryExpression	11		1037723	0					
ANR	1037800	Argument	10		1037723	2					
ANR	1037801	PrimaryExpression	10		1037723	0					
ANR	1037802	Argument	1		1037723	3					
ANR	1037803	PrimaryExpression	1		1037723	0					
ANR	1037804	ExpressionStatement	"inst [ 1 ] = dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"	219:1:7151:7214	1037723	3	True				
ANR	1037805	AssignmentExpression	"inst [ 1 ] = dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1037723	0		=			
ANR	1037806	ArrayIndexing	inst [ 1 ]		1037723	0					
ANR	1037807	Identifier	inst		1037723	0					
ANR	1037808	PrimaryExpression	1		1037723	1					
ANR	1037809	InclusiveOrExpression	"dst | COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1037723	1		|			
ANR	1037810	Identifier	dst		1037723	0					
ANR	1037811	InclusiveOrExpression	"COPY_BITS ( new_imm , 8 , 12 , 3 ) | ( new_imm & 0xff )"		1037723	1		|			
ANR	1037812	CallExpression	"COPY_BITS ( new_imm , 8 , 12 , 3 )"		1037723	0					
ANR	1037813	Callee	COPY_BITS		1037723	0					
ANR	1037814	Identifier	COPY_BITS		1037723	0					
ANR	1037815	ArgumentList	new_imm		1037723	1					
ANR	1037816	Argument	new_imm		1037723	0					
ANR	1037817	Identifier	new_imm		1037723	0					
ANR	1037818	Argument	8		1037723	1					
ANR	1037819	PrimaryExpression	8		1037723	0					
ANR	1037820	Argument	12		1037723	2					
ANR	1037821	PrimaryExpression	12		1037723	0					
ANR	1037822	Argument	3		1037723	3					
ANR	1037823	PrimaryExpression	3		1037723	0					
ANR	1037824	BitAndExpression	new_imm & 0xff		1037723	1		&			
ANR	1037825	Identifier	new_imm		1037723	0					
ANR	1037826	PrimaryExpression	0xff		1037723	1					
ANR	1037827	ExpressionStatement	"inst [ 2 ] = ( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"	220:1:7217:7312	1037723	4	True				
ANR	1037828	AssignmentExpression	"inst [ 2 ] = ( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1037723	0		=			
ANR	1037829	ArrayIndexing	inst [ 2 ]		1037723	0					
ANR	1037830	Identifier	inst		1037723	0					
ANR	1037831	PrimaryExpression	2		1037723	1					
ANR	1037832	InclusiveOrExpression	"( MOVT >> 16 ) | COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1037723	1		|			
ANR	1037833	ShiftExpression	MOVT >> 16		1037723	0		>>			
ANR	1037834	Identifier	MOVT		1037723	0					
ANR	1037835	PrimaryExpression	16		1037723	1					
ANR	1037836	InclusiveOrExpression	"COPY_BITS ( new_imm , 12 + 16 , 0 , 4 ) | COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1037723	1		|			
ANR	1037837	CallExpression	"COPY_BITS ( new_imm , 12 + 16 , 0 , 4 )"		1037723	0					
ANR	1037838	Callee	COPY_BITS		1037723	0					
ANR	1037839	Identifier	COPY_BITS		1037723	0					
ANR	1037840	ArgumentList	new_imm		1037723	1					
ANR	1037841	Argument	new_imm		1037723	0					
ANR	1037842	Identifier	new_imm		1037723	0					
ANR	1037843	Argument	12 + 16		1037723	1					
ANR	1037844	AdditiveExpression	12 + 16		1037723	0		+			
ANR	1037845	PrimaryExpression	12		1037723	0					
ANR	1037846	PrimaryExpression	16		1037723	1					
ANR	1037847	Argument	0		1037723	2					
ANR	1037848	PrimaryExpression	0		1037723	0					
ANR	1037849	Argument	4		1037723	3					
ANR	1037850	PrimaryExpression	4		1037723	0					
ANR	1037851	CallExpression	"COPY_BITS ( new_imm , 11 + 16 , 10 , 1 )"		1037723	1					
ANR	1037852	Callee	COPY_BITS		1037723	0					
ANR	1037853	Identifier	COPY_BITS		1037723	0					
ANR	1037854	ArgumentList	new_imm		1037723	1					
ANR	1037855	Argument	new_imm		1037723	0					
ANR	1037856	Identifier	new_imm		1037723	0					
ANR	1037857	Argument	11 + 16		1037723	1					
ANR	1037858	AdditiveExpression	11 + 16		1037723	0		+			
ANR	1037859	PrimaryExpression	11		1037723	0					
ANR	1037860	PrimaryExpression	16		1037723	1					
ANR	1037861	Argument	10		1037723	2					
ANR	1037862	PrimaryExpression	10		1037723	0					
ANR	1037863	Argument	1		1037723	3					
ANR	1037864	PrimaryExpression	1		1037723	0					
ANR	1037865	ExpressionStatement	"inst [ 3 ] = dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"	221:1:7315:7395	1037723	5	True				
ANR	1037866	AssignmentExpression	"inst [ 3 ] = dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1037723	0		=			
ANR	1037867	ArrayIndexing	inst [ 3 ]		1037723	0					
ANR	1037868	Identifier	inst		1037723	0					
ANR	1037869	PrimaryExpression	3		1037723	1					
ANR	1037870	InclusiveOrExpression	"dst | COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1037723	1		|			
ANR	1037871	Identifier	dst		1037723	0					
ANR	1037872	InclusiveOrExpression	"COPY_BITS ( new_imm , 8 + 16 , 12 , 3 ) | ( ( new_imm & 0xff0000 ) >> 16 )"		1037723	1		|			
ANR	1037873	CallExpression	"COPY_BITS ( new_imm , 8 + 16 , 12 , 3 )"		1037723	0					
ANR	1037874	Callee	COPY_BITS		1037723	0					
ANR	1037875	Identifier	COPY_BITS		1037723	0					
ANR	1037876	ArgumentList	new_imm		1037723	1					
ANR	1037877	Argument	new_imm		1037723	0					
ANR	1037878	Identifier	new_imm		1037723	0					
ANR	1037879	Argument	8 + 16		1037723	1					
ANR	1037880	AdditiveExpression	8 + 16		1037723	0		+			
ANR	1037881	PrimaryExpression	8		1037723	0					
ANR	1037882	PrimaryExpression	16		1037723	1					
ANR	1037883	Argument	12		1037723	2					
ANR	1037884	PrimaryExpression	12		1037723	0					
ANR	1037885	Argument	3		1037723	3					
ANR	1037886	PrimaryExpression	3		1037723	0					
ANR	1037887	ShiftExpression	( new_imm & 0xff0000 ) >> 16		1037723	1		>>			
ANR	1037888	BitAndExpression	new_imm & 0xff0000		1037723	0		&			
ANR	1037889	Identifier	new_imm		1037723	0					
ANR	1037890	PrimaryExpression	0xff0000		1037723	1					
ANR	1037891	PrimaryExpression	16		1037723	1					
ANR	1037892	ReturnType	static SLJIT_INLINE void		1037723	1					
ANR	1037893	Identifier	modify_imm32_const		1037723	2					
ANR	1037894	ParameterList	"sljit_uh * inst , sljit_uw new_imm"		1037723	3					
ANR	1037895	Parameter	sljit_uh * inst	214:44:6870:6883	1037723	0	True				
ANR	1037896	ParameterType	sljit_uh *		1037723	0					
ANR	1037897	Identifier	inst		1037723	1					
ANR	1037898	Parameter	sljit_uw new_imm	214:60:6886:6901	1037723	1	True				
ANR	1037899	ParameterType	sljit_uw		1037723	0					
ANR	1037900	Identifier	new_imm		1037723	1					
ANR	1037901	CFGEntryNode	ENTRY		1037723		True				
ANR	1037902	CFGExitNode	EXIT		1037723		True				
ANR	1037903	Symbol	COPY_BITS		1037723						
ANR	1037904	Symbol	* inst		1037723						
ANR	1037905	Symbol	dst		1037723						
ANR	1037906	Symbol	MOVT		1037723						
ANR	1037907	Symbol	inst		1037723						
ANR	1037908	Symbol	MOVW		1037723						
ANR	1037909	Symbol	new_imm		1037723						
ANR	1037910	Function	detect_jump_type	224:0:7400:8645							
ANR	1037911	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_uh * code_ptr , sljit_uh * code)"		1037910	0					
ANR	1037912	CompoundStatement		225:0:7507:8645	1037910	0					
ANR	1037913	IdentifierDeclStatement	sljit_sw diff ;	226:1:7510:7523	1037910	0	True				
ANR	1037914	IdentifierDecl	diff		1037910	0					
ANR	1037915	IdentifierDeclType	sljit_sw		1037910	0					
ANR	1037916	Identifier	diff		1037910	1					
ANR	1037917	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1037910	1					
ANR	1037918	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	228:5:7531:7565	1037910	0	True				
ANR	1037919	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1037910	0		&			
ANR	1037920	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1037921	Identifier	jump		1037910	0					
ANR	1037922	Identifier	flags		1037910	1					
ANR	1037923	Identifier	SLJIT_REWRITABLE_JUMP		1037910	1					
ANR	1037924	ReturnStatement	return 0 ;	229:2:7570:7578	1037910	1	True				
ANR	1037925	PrimaryExpression	0		1037910	0					
ANR	1037926	IfStatement	if ( jump -> flags & JUMP_ADDR )		1037910	2					
ANR	1037927	Condition	jump -> flags & JUMP_ADDR	231:5:7586:7608	1037910	0	True				
ANR	1037928	BitAndExpression	jump -> flags & JUMP_ADDR		1037910	0		&			
ANR	1037929	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1037930	Identifier	jump		1037910	0					
ANR	1037931	Identifier	flags		1037910	1					
ANR	1037932	Identifier	JUMP_ADDR		1037910	1					
ANR	1037933	CompoundStatement		7:30:103:103	1037910	1					
ANR	1037934	IfStatement	if ( ! ( jump -> u . target & 0x1 ) )		1037910	0					
ANR	1037935	Condition	! ( jump -> u . target & 0x1 )	233:6:7668:7690	1037910	0	True				
ANR	1037936	UnaryOperationExpression	! ( jump -> u . target & 0x1 )		1037910	0					
ANR	1037937	UnaryOperator	!		1037910	0					
ANR	1037938	BitAndExpression	jump -> u . target & 0x1		1037910	1		&			
ANR	1037939	MemberAccess	jump -> u . target		1037910	0					
ANR	1037940	PtrMemberAccess	jump -> u		1037910	0					
ANR	1037941	Identifier	jump		1037910	0					
ANR	1037942	Identifier	u		1037910	1					
ANR	1037943	Identifier	target		1037910	1					
ANR	1037944	PrimaryExpression	0x1		1037910	1					
ANR	1037945	ReturnStatement	return 0 ;	234:3:7696:7704	1037910	1	True				
ANR	1037946	PrimaryExpression	0		1037910	0					
ANR	1037947	ExpressionStatement	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1	235:2:7708:7773	1037910	1	True				
ANR	1037948	AssignmentExpression	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1037910	0		=			
ANR	1037949	Identifier	diff		1037910	0					
ANR	1037950	ShiftExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1037910	1		>>			
ANR	1037951	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 )		1037910	0		-			
ANR	1037952	CastExpression	( sljit_sw ) jump -> u . target		1037910	0					
ANR	1037953	CastTarget	sljit_sw		1037910	0					
ANR	1037954	MemberAccess	jump -> u . target		1037910	1					
ANR	1037955	PtrMemberAccess	jump -> u		1037910	0					
ANR	1037956	Identifier	jump		1037910	0					
ANR	1037957	Identifier	u		1037910	1					
ANR	1037958	Identifier	target		1037910	1					
ANR	1037959	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1037910	1					
ANR	1037960	CastTarget	sljit_sw		1037910	0					
ANR	1037961	AdditiveExpression	code_ptr + 2		1037910	1		+			
ANR	1037962	Identifier	code_ptr		1037910	0					
ANR	1037963	PrimaryExpression	2		1037910	1					
ANR	1037964	PrimaryExpression	1		1037910	1					
ANR	1037965	ElseStatement	else		1037910	0					
ANR	1037966	CompoundStatement		13:6:276:276	1037910	0					
ANR	1037967	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	238:2:7788:7826	1037910	0	True				
ANR	1037968	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1037910	0					
ANR	1037969	Callee	SLJIT_ASSERT		1037910	0					
ANR	1037970	Identifier	SLJIT_ASSERT		1037910	0					
ANR	1037971	ArgumentList	jump -> flags & JUMP_LABEL		1037910	1					
ANR	1037972	Argument	jump -> flags & JUMP_LABEL		1037910	0					
ANR	1037973	BitAndExpression	jump -> flags & JUMP_LABEL		1037910	0		&			
ANR	1037974	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1037975	Identifier	jump		1037910	0					
ANR	1037976	Identifier	flags		1037910	1					
ANR	1037977	Identifier	JUMP_LABEL		1037910	1					
ANR	1037978	ExpressionStatement	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1	239:2:7830:7909	1037910	1	True				
ANR	1037979	AssignmentExpression	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1037910	0		=			
ANR	1037980	Identifier	diff		1037910	0					
ANR	1037981	ShiftExpression	( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) ) >> 1		1037910	1		>>			
ANR	1037982	AdditiveExpression	( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 )		1037910	0		-			
ANR	1037983	CastExpression	( sljit_sw ) ( code + jump -> u . label -> size )		1037910	0					
ANR	1037984	CastTarget	sljit_sw		1037910	0					
ANR	1037985	AdditiveExpression	code + jump -> u . label -> size		1037910	1		+			
ANR	1037986	Identifier	code		1037910	0					
ANR	1037987	PtrMemberAccess	jump -> u . label -> size		1037910	1					
ANR	1037988	MemberAccess	jump -> u . label		1037910	0					
ANR	1037989	PtrMemberAccess	jump -> u		1037910	0					
ANR	1037990	Identifier	jump		1037910	0					
ANR	1037991	Identifier	u		1037910	1					
ANR	1037992	Identifier	label		1037910	1					
ANR	1037993	Identifier	size		1037910	1					
ANR	1037994	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1037910	1					
ANR	1037995	CastTarget	sljit_sw		1037910	0					
ANR	1037996	AdditiveExpression	code_ptr + 2		1037910	1		+			
ANR	1037997	Identifier	code_ptr		1037910	0					
ANR	1037998	PrimaryExpression	2		1037910	1					
ANR	1037999	PrimaryExpression	1		1037910	1					
ANR	1038000	IfStatement	if ( jump -> flags & IS_COND )		1037910	3					
ANR	1038001	Condition	jump -> flags & IS_COND	242:5:7920:7940	1037910	0	True				
ANR	1038002	BitAndExpression	jump -> flags & IS_COND		1037910	0		&			
ANR	1038003	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038004	Identifier	jump		1037910	0					
ANR	1038005	Identifier	flags		1037910	1					
ANR	1038006	Identifier	IS_COND		1037910	1					
ANR	1038007	CompoundStatement		18:28:435:435	1037910	1					
ANR	1038008	ExpressionStatement	SLJIT_ASSERT ( ! ( jump -> flags & IS_BL ) )	243:2:7947:7983	1037910	0	True				
ANR	1038009	CallExpression	SLJIT_ASSERT ( ! ( jump -> flags & IS_BL ) )		1037910	0					
ANR	1038010	Callee	SLJIT_ASSERT		1037910	0					
ANR	1038011	Identifier	SLJIT_ASSERT		1037910	0					
ANR	1038012	ArgumentList	! ( jump -> flags & IS_BL )		1037910	1					
ANR	1038013	Argument	! ( jump -> flags & IS_BL )		1037910	0					
ANR	1038014	UnaryOperationExpression	! ( jump -> flags & IS_BL )		1037910	0					
ANR	1038015	UnaryOperator	!		1037910	0					
ANR	1038016	BitAndExpression	jump -> flags & IS_BL		1037910	1		&			
ANR	1038017	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038018	Identifier	jump		1037910	0					
ANR	1038019	Identifier	flags		1037910	1					
ANR	1038020	Identifier	IS_BL		1037910	1					
ANR	1038021	IfStatement	if ( diff <= 127 && diff >= - 128 )		1037910	1					
ANR	1038022	Condition	diff <= 127 && diff >= - 128	244:6:7991:8017	1037910	0	True				
ANR	1038023	AndExpression	diff <= 127 && diff >= - 128		1037910	0		&&			
ANR	1038024	RelationalExpression	diff <= 127		1037910	0		<=			
ANR	1038025	Identifier	diff		1037910	0					
ANR	1038026	PrimaryExpression	127		1037910	1					
ANR	1038027	RelationalExpression	diff >= - 128		1037910	1		>=			
ANR	1038028	Identifier	diff		1037910	0					
ANR	1038029	UnaryOperationExpression	- 128		1037910	1					
ANR	1038030	UnaryOperator	-		1037910	0					
ANR	1038031	PrimaryExpression	128		1037910	1					
ANR	1038032	CompoundStatement		20:35:512:512	1037910	1					
ANR	1038033	ExpressionStatement	jump -> flags |= PATCH_TYPE1	245:3:8025:8051	1037910	0	True				
ANR	1038034	AssignmentExpression	jump -> flags |= PATCH_TYPE1		1037910	0		|=			
ANR	1038035	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038036	Identifier	jump		1037910	0					
ANR	1038037	Identifier	flags		1037910	1					
ANR	1038038	Identifier	PATCH_TYPE1		1037910	1					
ANR	1038039	ReturnStatement	return 5 ;	246:3:8056:8064	1037910	1	True				
ANR	1038040	PrimaryExpression	5		1037910	0					
ANR	1038041	IfStatement	if ( diff <= 524287 && diff >= - 524288 )		1037910	2					
ANR	1038042	Condition	diff <= 524287 && diff >= - 524288	248:6:8076:8108	1037910	0	True				
ANR	1038043	AndExpression	diff <= 524287 && diff >= - 524288		1037910	0		&&			
ANR	1038044	RelationalExpression	diff <= 524287		1037910	0		<=			
ANR	1038045	Identifier	diff		1037910	0					
ANR	1038046	PrimaryExpression	524287		1037910	1					
ANR	1038047	RelationalExpression	diff >= - 524288		1037910	1		>=			
ANR	1038048	Identifier	diff		1037910	0					
ANR	1038049	UnaryOperationExpression	- 524288		1037910	1					
ANR	1038050	UnaryOperator	-		1037910	0					
ANR	1038051	PrimaryExpression	524288		1037910	1					
ANR	1038052	CompoundStatement		24:41:603:603	1037910	1					
ANR	1038053	ExpressionStatement	jump -> flags |= PATCH_TYPE2	249:3:8116:8142	1037910	0	True				
ANR	1038054	AssignmentExpression	jump -> flags |= PATCH_TYPE2		1037910	0		|=			
ANR	1038055	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038056	Identifier	jump		1037910	0					
ANR	1038057	Identifier	flags		1037910	1					
ANR	1038058	Identifier	PATCH_TYPE2		1037910	1					
ANR	1038059	ReturnStatement	return 4 ;	250:3:8147:8155	1037910	1	True				
ANR	1038060	PrimaryExpression	4		1037910	0					
ANR	1038061	ExpressionStatement	diff --	253:2:8212:8218	1037910	3	True				
ANR	1038062	PostIncDecOperationExpression	diff --		1037910	0					
ANR	1038063	Identifier	diff		1037910	0					
ANR	1038064	IncDec	--		1037910	1					
ANR	1038065	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1037910	4					
ANR	1038066	Condition	diff <= 8388607 && diff >= - 8388608	254:6:8226:8260	1037910	0	True				
ANR	1038067	AndExpression	diff <= 8388607 && diff >= - 8388608		1037910	0		&&			
ANR	1038068	RelationalExpression	diff <= 8388607		1037910	0		<=			
ANR	1038069	Identifier	diff		1037910	0					
ANR	1038070	PrimaryExpression	8388607		1037910	1					
ANR	1038071	RelationalExpression	diff >= - 8388608		1037910	1		>=			
ANR	1038072	Identifier	diff		1037910	0					
ANR	1038073	UnaryOperationExpression	- 8388608		1037910	1					
ANR	1038074	UnaryOperator	-		1037910	0					
ANR	1038075	PrimaryExpression	8388608		1037910	1					
ANR	1038076	CompoundStatement		30:43:755:755	1037910	1					
ANR	1038077	ExpressionStatement	jump -> flags |= PATCH_TYPE3	255:3:8268:8294	1037910	0	True				
ANR	1038078	AssignmentExpression	jump -> flags |= PATCH_TYPE3		1037910	0		|=			
ANR	1038079	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038080	Identifier	jump		1037910	0					
ANR	1038081	Identifier	flags		1037910	1					
ANR	1038082	Identifier	PATCH_TYPE3		1037910	1					
ANR	1038083	ReturnStatement	return 3 ;	256:3:8299:8307	1037910	1	True				
ANR	1038084	PrimaryExpression	3		1037910	0					
ANR	1038085	ElseStatement	else		1037910	0					
ANR	1038086	IfStatement	if ( jump -> flags & IS_BL )		1037910	0					
ANR	1038087	Condition	jump -> flags & IS_BL	259:10:8326:8344	1037910	0	True				
ANR	1038088	BitAndExpression	jump -> flags & IS_BL		1037910	0		&			
ANR	1038089	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038090	Identifier	jump		1037910	0					
ANR	1038091	Identifier	flags		1037910	1					
ANR	1038092	Identifier	IS_BL		1037910	1					
ANR	1038093	CompoundStatement		35:31:839:839	1037910	1					
ANR	1038094	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1037910	0					
ANR	1038095	Condition	diff <= 8388607 && diff >= - 8388608	260:6:8355:8389	1037910	0	True				
ANR	1038096	AndExpression	diff <= 8388607 && diff >= - 8388608		1037910	0		&&			
ANR	1038097	RelationalExpression	diff <= 8388607		1037910	0		<=			
ANR	1038098	Identifier	diff		1037910	0					
ANR	1038099	PrimaryExpression	8388607		1037910	1					
ANR	1038100	RelationalExpression	diff >= - 8388608		1037910	1		>=			
ANR	1038101	Identifier	diff		1037910	0					
ANR	1038102	UnaryOperationExpression	- 8388608		1037910	1					
ANR	1038103	UnaryOperator	-		1037910	0					
ANR	1038104	PrimaryExpression	8388608		1037910	1					
ANR	1038105	CompoundStatement		36:43:884:884	1037910	1					
ANR	1038106	ExpressionStatement	jump -> flags |= PATCH_BL	261:3:8397:8420	1037910	0	True				
ANR	1038107	AssignmentExpression	jump -> flags |= PATCH_BL		1037910	0		|=			
ANR	1038108	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038109	Identifier	jump		1037910	0					
ANR	1038110	Identifier	flags		1037910	1					
ANR	1038111	Identifier	PATCH_BL		1037910	1					
ANR	1038112	ReturnStatement	return 3 ;	262:3:8425:8433	1037910	1	True				
ANR	1038113	PrimaryExpression	3		1037910	0					
ANR	1038114	ElseStatement	else		1037910	0					
ANR	1038115	CompoundStatement		41:6:940:940	1037910	0					
ANR	1038116	IfStatement	if ( diff <= 1023 && diff >= - 1024 )		1037910	0					
ANR	1038117	Condition	diff <= 1023 && diff >= - 1024	266:6:8456:8484	1037910	0	True				
ANR	1038118	AndExpression	diff <= 1023 && diff >= - 1024		1037910	0		&&			
ANR	1038119	RelationalExpression	diff <= 1023		1037910	0		<=			
ANR	1038120	Identifier	diff		1037910	0					
ANR	1038121	PrimaryExpression	1023		1037910	1					
ANR	1038122	RelationalExpression	diff >= - 1024		1037910	1		>=			
ANR	1038123	Identifier	diff		1037910	0					
ANR	1038124	UnaryOperationExpression	- 1024		1037910	1					
ANR	1038125	UnaryOperator	-		1037910	0					
ANR	1038126	PrimaryExpression	1024		1037910	1					
ANR	1038127	CompoundStatement		42:37:979:979	1037910	1					
ANR	1038128	ExpressionStatement	jump -> flags |= PATCH_TYPE4	267:3:8492:8518	1037910	0	True				
ANR	1038129	AssignmentExpression	jump -> flags |= PATCH_TYPE4		1037910	0		|=			
ANR	1038130	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038131	Identifier	jump		1037910	0					
ANR	1038132	Identifier	flags		1037910	1					
ANR	1038133	Identifier	PATCH_TYPE4		1037910	1					
ANR	1038134	ReturnStatement	return 4 ;	268:3:8523:8531	1037910	1	True				
ANR	1038135	PrimaryExpression	4		1037910	0					
ANR	1038136	IfStatement	if ( diff <= 8388607 && diff >= - 8388608 )		1037910	1					
ANR	1038137	Condition	diff <= 8388607 && diff >= - 8388608	270:6:8543:8577	1037910	0	True				
ANR	1038138	AndExpression	diff <= 8388607 && diff >= - 8388608		1037910	0		&&			
ANR	1038139	RelationalExpression	diff <= 8388607		1037910	0		<=			
ANR	1038140	Identifier	diff		1037910	0					
ANR	1038141	PrimaryExpression	8388607		1037910	1					
ANR	1038142	RelationalExpression	diff >= - 8388608		1037910	1		>=			
ANR	1038143	Identifier	diff		1037910	0					
ANR	1038144	UnaryOperationExpression	- 8388608		1037910	1					
ANR	1038145	UnaryOperator	-		1037910	0					
ANR	1038146	PrimaryExpression	8388608		1037910	1					
ANR	1038147	CompoundStatement		46:43:1072:1072	1037910	1					
ANR	1038148	ExpressionStatement	jump -> flags |= PATCH_TYPE5	271:3:8585:8611	1037910	0	True				
ANR	1038149	AssignmentExpression	jump -> flags |= PATCH_TYPE5		1037910	0		|=			
ANR	1038150	PtrMemberAccess	jump -> flags		1037910	0					
ANR	1038151	Identifier	jump		1037910	0					
ANR	1038152	Identifier	flags		1037910	1					
ANR	1038153	Identifier	PATCH_TYPE5		1037910	1					
ANR	1038154	ReturnStatement	return 3 ;	272:3:8616:8624	1037910	1	True				
ANR	1038155	PrimaryExpression	3		1037910	0					
ANR	1038156	ReturnStatement	return 0 ;	276:1:8635:8643	1037910	4	True				
ANR	1038157	PrimaryExpression	0		1037910	0					
ANR	1038158	ReturnType	static SLJIT_INLINE sljit_si		1037910	1					
ANR	1038159	Identifier	detect_jump_type		1037910	2					
ANR	1038160	ParameterList	"struct sljit_jump * jump , sljit_uh * code_ptr , sljit_uh * code"		1037910	3					
ANR	1038161	Parameter	struct sljit_jump * jump	224:46:7446:7468	1037910	0	True				
ANR	1038162	ParameterType	struct sljit_jump *		1037910	0					
ANR	1038163	Identifier	jump		1037910	1					
ANR	1038164	Parameter	sljit_uh * code_ptr	224:71:7471:7488	1037910	1	True				
ANR	1038165	ParameterType	sljit_uh *		1037910	0					
ANR	1038166	Identifier	code_ptr		1037910	1					
ANR	1038167	Parameter	sljit_uh * code	224:91:7491:7504	1037910	2	True				
ANR	1038168	ParameterType	sljit_uh *		1037910	0					
ANR	1038169	Identifier	code		1037910	1					
ANR	1038170	CFGEntryNode	ENTRY		1037910		True				
ANR	1038171	CFGExitNode	EXIT		1037910		True				
ANR	1038172	Symbol	jump -> u . label -> size		1037910						
ANR	1038173	Symbol	code		1037910						
ANR	1038174	Symbol	* * jump		1037910						
ANR	1038175	Symbol	PATCH_TYPE5		1037910						
ANR	1038176	Symbol	* jump		1037910						
ANR	1038177	Symbol	PATCH_TYPE4		1037910						
ANR	1038178	Symbol	jump -> u		1037910						
ANR	1038179	Symbol	PATCH_TYPE3		1037910						
ANR	1038180	Symbol	PATCH_TYPE2		1037910						
ANR	1038181	Symbol	PATCH_TYPE1		1037910						
ANR	1038182	Symbol	jump -> flags		1037910						
ANR	1038183	Symbol	JUMP_LABEL		1037910						
ANR	1038184	Symbol	diff		1037910						
ANR	1038185	Symbol	JUMP_ADDR		1037910						
ANR	1038186	Symbol	* jump -> u . label		1037910						
ANR	1038187	Symbol	* jump -> u		1037910						
ANR	1038188	Symbol	code_ptr		1037910						
ANR	1038189	Symbol	IS_COND		1037910						
ANR	1038190	Symbol	IS_BL		1037910						
ANR	1038191	Symbol	jump -> u . target		1037910						
ANR	1038192	Symbol	SLJIT_REWRITABLE_JUMP		1037910						
ANR	1038193	Symbol	jump -> u . label		1037910						
ANR	1038194	Symbol	PATCH_BL		1037910						
ANR	1038195	Symbol	jump		1037910						
ANR	1038196	Function	set_jump_instruction	279:0:8648:10680							
ANR	1038197	FunctionDef	set_jump_instruction (struct sljit_jump * jump)		1038196	0					
ANR	1038198	CompoundStatement		280:0:8719:10680	1038196	0					
ANR	1038199	IdentifierDeclStatement	sljit_si type = ( jump -> flags >> 4 ) & 0xf ;	281:1:8722:8762	1038196	0	True				
ANR	1038200	IdentifierDecl	type = ( jump -> flags >> 4 ) & 0xf		1038196	0					
ANR	1038201	IdentifierDeclType	sljit_si		1038196	0					
ANR	1038202	Identifier	type		1038196	1					
ANR	1038203	AssignmentExpression	type = ( jump -> flags >> 4 ) & 0xf		1038196	2		=			
ANR	1038204	Identifier	type		1038196	0					
ANR	1038205	BitAndExpression	( jump -> flags >> 4 ) & 0xf		1038196	1		&			
ANR	1038206	ShiftExpression	jump -> flags >> 4		1038196	0		>>			
ANR	1038207	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038208	Identifier	jump		1038196	0					
ANR	1038209	Identifier	flags		1038196	1					
ANR	1038210	PrimaryExpression	4		1038196	1					
ANR	1038211	PrimaryExpression	0xf		1038196	1					
ANR	1038212	IdentifierDeclStatement	sljit_sw diff ;	282:1:8765:8778	1038196	1	True				
ANR	1038213	IdentifierDecl	diff		1038196	0					
ANR	1038214	IdentifierDeclType	sljit_sw		1038196	0					
ANR	1038215	Identifier	diff		1038196	1					
ANR	1038216	IdentifierDeclStatement	sljit_uh * jump_inst ;	283:1:8781:8800	1038196	2	True				
ANR	1038217	IdentifierDecl	* jump_inst		1038196	0					
ANR	1038218	IdentifierDeclType	sljit_uh *		1038196	0					
ANR	1038219	Identifier	jump_inst		1038196	1					
ANR	1038220	IdentifierDeclStatement	"sljit_si s , j1 , j2 ;"	284:1:8803:8821	1038196	3	True				
ANR	1038221	IdentifierDecl	s		1038196	0					
ANR	1038222	IdentifierDeclType	sljit_si		1038196	0					
ANR	1038223	Identifier	s		1038196	1					
ANR	1038224	IdentifierDecl	j1		1038196	1					
ANR	1038225	IdentifierDeclType	sljit_si		1038196	0					
ANR	1038226	Identifier	j1		1038196	1					
ANR	1038227	IdentifierDecl	j2		1038196	2					
ANR	1038228	IdentifierDeclType	sljit_si		1038196	0					
ANR	1038229	Identifier	j2		1038196	1					
ANR	1038230	IfStatement	if ( SLJIT_UNLIKELY ( type == 0 ) )		1038196	4					
ANR	1038231	Condition	SLJIT_UNLIKELY ( type == 0 )	286:5:8829:8853	1038196	0	True				
ANR	1038232	CallExpression	SLJIT_UNLIKELY ( type == 0 )		1038196	0					
ANR	1038233	Callee	SLJIT_UNLIKELY		1038196	0					
ANR	1038234	Identifier	SLJIT_UNLIKELY		1038196	0					
ANR	1038235	ArgumentList	type == 0		1038196	1					
ANR	1038236	Argument	type == 0		1038196	0					
ANR	1038237	EqualityExpression	type == 0		1038196	0		==			
ANR	1038238	Identifier	type		1038196	0					
ANR	1038239	PrimaryExpression	0		1038196	1					
ANR	1038240	CompoundStatement		7:32:136:136	1038196	1					
ANR	1038241	ExpressionStatement	"modify_imm32_const ( ( sljit_uh * ) jump -> addr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target )"	287:2:8860:8968	1038196	0	True				
ANR	1038242	CallExpression	"modify_imm32_const ( ( sljit_uh * ) jump -> addr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target )"		1038196	0					
ANR	1038243	Callee	modify_imm32_const		1038196	0					
ANR	1038244	Identifier	modify_imm32_const		1038196	0					
ANR	1038245	ArgumentList	( sljit_uh * ) jump -> addr		1038196	1					
ANR	1038246	Argument	( sljit_uh * ) jump -> addr		1038196	0					
ANR	1038247	CastExpression	( sljit_uh * ) jump -> addr		1038196	0					
ANR	1038248	CastTarget	sljit_uh *		1038196	0					
ANR	1038249	PtrMemberAccess	jump -> addr		1038196	1					
ANR	1038250	Identifier	jump		1038196	0					
ANR	1038251	Identifier	addr		1038196	1					
ANR	1038252	Argument	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1038196	1					
ANR	1038253	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1038196	0					
ANR	1038254	Condition	jump -> flags & JUMP_LABEL		1038196	0					
ANR	1038255	BitAndExpression	jump -> flags & JUMP_LABEL		1038196	0		&			
ANR	1038256	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038257	Identifier	jump		1038196	0					
ANR	1038258	Identifier	flags		1038196	1					
ANR	1038259	Identifier	JUMP_LABEL		1038196	1					
ANR	1038260	PtrMemberAccess	jump -> u . label -> addr		1038196	1					
ANR	1038261	MemberAccess	jump -> u . label		1038196	0					
ANR	1038262	PtrMemberAccess	jump -> u		1038196	0					
ANR	1038263	Identifier	jump		1038196	0					
ANR	1038264	Identifier	u		1038196	1					
ANR	1038265	Identifier	label		1038196	1					
ANR	1038266	Identifier	addr		1038196	1					
ANR	1038267	MemberAccess	jump -> u . target		1038196	2					
ANR	1038268	PtrMemberAccess	jump -> u		1038196	0					
ANR	1038269	Identifier	jump		1038196	0					
ANR	1038270	Identifier	u		1038196	1					
ANR	1038271	Identifier	target		1038196	1					
ANR	1038272	ReturnStatement	return ;	288:2:8972:8978	1038196	1	True				
ANR	1038273	IfStatement	if ( jump -> flags & JUMP_ADDR )		1038196	5					
ANR	1038274	Condition	jump -> flags & JUMP_ADDR	291:5:8989:9011	1038196	0	True				
ANR	1038275	BitAndExpression	jump -> flags & JUMP_ADDR		1038196	0		&			
ANR	1038276	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038277	Identifier	jump		1038196	0					
ANR	1038278	Identifier	flags		1038196	1					
ANR	1038279	Identifier	JUMP_ADDR		1038196	1					
ANR	1038280	CompoundStatement		12:30:294:294	1038196	1					
ANR	1038281	ExpressionStatement	SLJIT_ASSERT ( jump -> u . target & 0x1 )	292:2:9018:9052	1038196	0	True				
ANR	1038282	CallExpression	SLJIT_ASSERT ( jump -> u . target & 0x1 )		1038196	0					
ANR	1038283	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038284	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038285	ArgumentList	jump -> u . target & 0x1		1038196	1					
ANR	1038286	Argument	jump -> u . target & 0x1		1038196	0					
ANR	1038287	BitAndExpression	jump -> u . target & 0x1		1038196	0		&			
ANR	1038288	MemberAccess	jump -> u . target		1038196	0					
ANR	1038289	PtrMemberAccess	jump -> u		1038196	0					
ANR	1038290	Identifier	jump		1038196	0					
ANR	1038291	Identifier	u		1038196	1					
ANR	1038292	Identifier	target		1038196	1					
ANR	1038293	PrimaryExpression	0x1		1038196	1					
ANR	1038294	ExpressionStatement	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1	293:2:9056:9123	1038196	1	True				
ANR	1038295	AssignmentExpression	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1038196	0		=			
ANR	1038296	Identifier	diff		1038196	0					
ANR	1038297	ShiftExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1038196	1		>>			
ANR	1038298	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( jump -> addr + 4 )		1038196	0		-			
ANR	1038299	CastExpression	( sljit_sw ) jump -> u . target		1038196	0					
ANR	1038300	CastTarget	sljit_sw		1038196	0					
ANR	1038301	MemberAccess	jump -> u . target		1038196	1					
ANR	1038302	PtrMemberAccess	jump -> u		1038196	0					
ANR	1038303	Identifier	jump		1038196	0					
ANR	1038304	Identifier	u		1038196	1					
ANR	1038305	Identifier	target		1038196	1					
ANR	1038306	CastExpression	( sljit_sw ) ( jump -> addr + 4 )		1038196	1					
ANR	1038307	CastTarget	sljit_sw		1038196	0					
ANR	1038308	AdditiveExpression	jump -> addr + 4		1038196	1		+			
ANR	1038309	PtrMemberAccess	jump -> addr		1038196	0					
ANR	1038310	Identifier	jump		1038196	0					
ANR	1038311	Identifier	addr		1038196	1					
ANR	1038312	PrimaryExpression	4		1038196	1					
ANR	1038313	PrimaryExpression	1		1038196	1					
ANR	1038314	ElseStatement	else		1038196	0					
ANR	1038315	ExpressionStatement	diff = ( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1	296:2:9136:9210	1038196	0	True				
ANR	1038316	AssignmentExpression	diff = ( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1038196	0		=			
ANR	1038317	Identifier	diff		1038196	0					
ANR	1038318	ShiftExpression	( ( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 ) ) >> 1		1038196	1		>>			
ANR	1038319	AdditiveExpression	( sljit_sw ) ( jump -> u . label -> addr ) - ( sljit_sw ) ( jump -> addr + 4 )		1038196	0		-			
ANR	1038320	CastExpression	( sljit_sw ) ( jump -> u . label -> addr )		1038196	0					
ANR	1038321	CastTarget	sljit_sw		1038196	0					
ANR	1038322	PtrMemberAccess	jump -> u . label -> addr		1038196	1					
ANR	1038323	MemberAccess	jump -> u . label		1038196	0					
ANR	1038324	PtrMemberAccess	jump -> u		1038196	0					
ANR	1038325	Identifier	jump		1038196	0					
ANR	1038326	Identifier	u		1038196	1					
ANR	1038327	Identifier	label		1038196	1					
ANR	1038328	Identifier	addr		1038196	1					
ANR	1038329	CastExpression	( sljit_sw ) ( jump -> addr + 4 )		1038196	1					
ANR	1038330	CastTarget	sljit_sw		1038196	0					
ANR	1038331	AdditiveExpression	jump -> addr + 4		1038196	1		+			
ANR	1038332	PtrMemberAccess	jump -> addr		1038196	0					
ANR	1038333	Identifier	jump		1038196	0					
ANR	1038334	Identifier	addr		1038196	1					
ANR	1038335	PrimaryExpression	4		1038196	1					
ANR	1038336	PrimaryExpression	1		1038196	1					
ANR	1038337	ExpressionStatement	jump_inst = ( sljit_uh * ) jump -> addr	297:1:9213:9246	1038196	6	True				
ANR	1038338	AssignmentExpression	jump_inst = ( sljit_uh * ) jump -> addr		1038196	0		=			
ANR	1038339	Identifier	jump_inst		1038196	0					
ANR	1038340	CastExpression	( sljit_uh * ) jump -> addr		1038196	1					
ANR	1038341	CastTarget	sljit_uh *		1038196	0					
ANR	1038342	PtrMemberAccess	jump -> addr		1038196	1					
ANR	1038343	Identifier	jump		1038196	0					
ANR	1038344	Identifier	addr		1038196	1					
ANR	1038345	SwitchStatement	switch ( type )		1038196	7					
ANR	1038346	Condition	type	299:9:9258:9261	1038196	0	True				
ANR	1038347	Identifier	type		1038196	0					
ANR	1038348	CompoundStatement		20:15:544:544	1038196	1					
ANR	1038349	Label	case 1 :	300:1:9267:9273	1038196	0	True				
ANR	1038350	ExpressionStatement	SLJIT_ASSERT ( diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND ) )	302:2:9316:9384	1038196	1	True				
ANR	1038351	CallExpression	SLJIT_ASSERT ( diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND ) )		1038196	0					
ANR	1038352	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038353	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038354	ArgumentList	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1038196	1					
ANR	1038355	Argument	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1038196	0					
ANR	1038356	AndExpression	diff <= 127 && diff >= - 128 && ( jump -> flags & IS_COND )		1038196	0		&&			
ANR	1038357	RelationalExpression	diff <= 127		1038196	0		<=			
ANR	1038358	Identifier	diff		1038196	0					
ANR	1038359	PrimaryExpression	127		1038196	1					
ANR	1038360	AndExpression	diff >= - 128 && ( jump -> flags & IS_COND )		1038196	1		&&			
ANR	1038361	RelationalExpression	diff >= - 128		1038196	0		>=			
ANR	1038362	Identifier	diff		1038196	0					
ANR	1038363	UnaryOperationExpression	- 128		1038196	1					
ANR	1038364	UnaryOperator	-		1038196	0					
ANR	1038365	PrimaryExpression	128		1038196	1					
ANR	1038366	BitAndExpression	jump -> flags & IS_COND		1038196	1		&			
ANR	1038367	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038368	Identifier	jump		1038196	0					
ANR	1038369	Identifier	flags		1038196	1					
ANR	1038370	Identifier	IS_COND		1038196	1					
ANR	1038371	ExpressionStatement	jump_inst [ 0 ] = 0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )	303:2:9388:9449	1038196	2	True				
ANR	1038372	AssignmentExpression	jump_inst [ 0 ] = 0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )		1038196	0		=			
ANR	1038373	ArrayIndexing	jump_inst [ 0 ]		1038196	0					
ANR	1038374	Identifier	jump_inst		1038196	0					
ANR	1038375	PrimaryExpression	0		1038196	1					
ANR	1038376	InclusiveOrExpression	0xd000 | ( jump -> flags & 0xf00 ) | ( diff & 0xff )		1038196	1		|			
ANR	1038377	PrimaryExpression	0xd000		1038196	0					
ANR	1038378	InclusiveOrExpression	( jump -> flags & 0xf00 ) | ( diff & 0xff )		1038196	1		|			
ANR	1038379	BitAndExpression	jump -> flags & 0xf00		1038196	0		&			
ANR	1038380	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038381	Identifier	jump		1038196	0					
ANR	1038382	Identifier	flags		1038196	1					
ANR	1038383	PrimaryExpression	0xf00		1038196	1					
ANR	1038384	BitAndExpression	diff & 0xff		1038196	1		&			
ANR	1038385	Identifier	diff		1038196	0					
ANR	1038386	PrimaryExpression	0xff		1038196	1					
ANR	1038387	ReturnStatement	return ;	304:2:9453:9459	1038196	3	True				
ANR	1038388	Label	case 2 :	305:1:9462:9468	1038196	4	True				
ANR	1038389	ExpressionStatement	SLJIT_ASSERT ( diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND ) )	307:2:9511:9585	1038196	5	True				
ANR	1038390	CallExpression	SLJIT_ASSERT ( diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND ) )		1038196	0					
ANR	1038391	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038392	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038393	ArgumentList	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1038196	1					
ANR	1038394	Argument	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1038196	0					
ANR	1038395	AndExpression	diff <= 524287 && diff >= - 524288 && ( jump -> flags & IS_COND )		1038196	0		&&			
ANR	1038396	RelationalExpression	diff <= 524287		1038196	0		<=			
ANR	1038397	Identifier	diff		1038196	0					
ANR	1038398	PrimaryExpression	524287		1038196	1					
ANR	1038399	AndExpression	diff >= - 524288 && ( jump -> flags & IS_COND )		1038196	1		&&			
ANR	1038400	RelationalExpression	diff >= - 524288		1038196	0		>=			
ANR	1038401	Identifier	diff		1038196	0					
ANR	1038402	UnaryOperationExpression	- 524288		1038196	1					
ANR	1038403	UnaryOperator	-		1038196	0					
ANR	1038404	PrimaryExpression	524288		1038196	1					
ANR	1038405	BitAndExpression	jump -> flags & IS_COND		1038196	1		&			
ANR	1038406	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038407	Identifier	jump		1038196	0					
ANR	1038408	Identifier	flags		1038196	1					
ANR	1038409	Identifier	IS_COND		1038196	1					
ANR	1038410	ExpressionStatement	"jump_inst [ 0 ] = 0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"	308:2:9589:9701	1038196	6	True				
ANR	1038411	AssignmentExpression	"jump_inst [ 0 ] = 0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1038196	0		=			
ANR	1038412	ArrayIndexing	jump_inst [ 0 ]		1038196	0					
ANR	1038413	Identifier	jump_inst		1038196	0					
ANR	1038414	PrimaryExpression	0		1038196	1					
ANR	1038415	InclusiveOrExpression	"0xf000 | COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1038196	1		|			
ANR	1038416	PrimaryExpression	0xf000		1038196	0					
ANR	1038417	InclusiveOrExpression	"COPY_BITS ( jump -> flags , 8 , 6 , 4 ) | COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1038196	1		|			
ANR	1038418	CallExpression	"COPY_BITS ( jump -> flags , 8 , 6 , 4 )"		1038196	0					
ANR	1038419	Callee	COPY_BITS		1038196	0					
ANR	1038420	Identifier	COPY_BITS		1038196	0					
ANR	1038421	ArgumentList	jump -> flags		1038196	1					
ANR	1038422	Argument	jump -> flags		1038196	0					
ANR	1038423	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038424	Identifier	jump		1038196	0					
ANR	1038425	Identifier	flags		1038196	1					
ANR	1038426	Argument	8		1038196	1					
ANR	1038427	PrimaryExpression	8		1038196	0					
ANR	1038428	Argument	6		1038196	2					
ANR	1038429	PrimaryExpression	6		1038196	0					
ANR	1038430	Argument	4		1038196	3					
ANR	1038431	PrimaryExpression	4		1038196	0					
ANR	1038432	InclusiveOrExpression	"COPY_BITS ( diff , 11 , 0 , 6 ) | COPY_BITS ( diff , 19 , 10 , 1 )"		1038196	1		|			
ANR	1038433	CallExpression	"COPY_BITS ( diff , 11 , 0 , 6 )"		1038196	0					
ANR	1038434	Callee	COPY_BITS		1038196	0					
ANR	1038435	Identifier	COPY_BITS		1038196	0					
ANR	1038436	ArgumentList	diff		1038196	1					
ANR	1038437	Argument	diff		1038196	0					
ANR	1038438	Identifier	diff		1038196	0					
ANR	1038439	Argument	11		1038196	1					
ANR	1038440	PrimaryExpression	11		1038196	0					
ANR	1038441	Argument	0		1038196	2					
ANR	1038442	PrimaryExpression	0		1038196	0					
ANR	1038443	Argument	6		1038196	3					
ANR	1038444	PrimaryExpression	6		1038196	0					
ANR	1038445	CallExpression	"COPY_BITS ( diff , 19 , 10 , 1 )"		1038196	1					
ANR	1038446	Callee	COPY_BITS		1038196	0					
ANR	1038447	Identifier	COPY_BITS		1038196	0					
ANR	1038448	ArgumentList	diff		1038196	1					
ANR	1038449	Argument	diff		1038196	0					
ANR	1038450	Identifier	diff		1038196	0					
ANR	1038451	Argument	19		1038196	1					
ANR	1038452	PrimaryExpression	19		1038196	0					
ANR	1038453	Argument	10		1038196	2					
ANR	1038454	PrimaryExpression	10		1038196	0					
ANR	1038455	Argument	1		1038196	3					
ANR	1038456	PrimaryExpression	1		1038196	0					
ANR	1038457	ExpressionStatement	"jump_inst [ 1 ] = 0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"	309:2:9705:9801	1038196	7	True				
ANR	1038458	AssignmentExpression	"jump_inst [ 1 ] = 0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1038196	0		=			
ANR	1038459	ArrayIndexing	jump_inst [ 1 ]		1038196	0					
ANR	1038460	Identifier	jump_inst		1038196	0					
ANR	1038461	PrimaryExpression	1		1038196	1					
ANR	1038462	InclusiveOrExpression	"0x8000 | COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1038196	1		|			
ANR	1038463	PrimaryExpression	0x8000		1038196	0					
ANR	1038464	InclusiveOrExpression	"COPY_BITS ( diff , 17 , 13 , 1 ) | COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1038196	1		|			
ANR	1038465	CallExpression	"COPY_BITS ( diff , 17 , 13 , 1 )"		1038196	0					
ANR	1038466	Callee	COPY_BITS		1038196	0					
ANR	1038467	Identifier	COPY_BITS		1038196	0					
ANR	1038468	ArgumentList	diff		1038196	1					
ANR	1038469	Argument	diff		1038196	0					
ANR	1038470	Identifier	diff		1038196	0					
ANR	1038471	Argument	17		1038196	1					
ANR	1038472	PrimaryExpression	17		1038196	0					
ANR	1038473	Argument	13		1038196	2					
ANR	1038474	PrimaryExpression	13		1038196	0					
ANR	1038475	Argument	1		1038196	3					
ANR	1038476	PrimaryExpression	1		1038196	0					
ANR	1038477	InclusiveOrExpression	"COPY_BITS ( diff , 18 , 11 , 1 ) | ( diff & 0x7ff )"		1038196	1		|			
ANR	1038478	CallExpression	"COPY_BITS ( diff , 18 , 11 , 1 )"		1038196	0					
ANR	1038479	Callee	COPY_BITS		1038196	0					
ANR	1038480	Identifier	COPY_BITS		1038196	0					
ANR	1038481	ArgumentList	diff		1038196	1					
ANR	1038482	Argument	diff		1038196	0					
ANR	1038483	Identifier	diff		1038196	0					
ANR	1038484	Argument	18		1038196	1					
ANR	1038485	PrimaryExpression	18		1038196	0					
ANR	1038486	Argument	11		1038196	2					
ANR	1038487	PrimaryExpression	11		1038196	0					
ANR	1038488	Argument	1		1038196	3					
ANR	1038489	PrimaryExpression	1		1038196	0					
ANR	1038490	BitAndExpression	diff & 0x7ff		1038196	1		&			
ANR	1038491	Identifier	diff		1038196	0					
ANR	1038492	PrimaryExpression	0x7ff		1038196	1					
ANR	1038493	ReturnStatement	return ;	310:2:9805:9811	1038196	8	True				
ANR	1038494	Label	case 3 :	311:1:9814:9820	1038196	9	True				
ANR	1038495	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & IS_COND )	312:2:9824:9859	1038196	10	True				
ANR	1038496	CallExpression	SLJIT_ASSERT ( jump -> flags & IS_COND )		1038196	0					
ANR	1038497	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038498	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038499	ArgumentList	jump -> flags & IS_COND		1038196	1					
ANR	1038500	Argument	jump -> flags & IS_COND		1038196	0					
ANR	1038501	BitAndExpression	jump -> flags & IS_COND		1038196	0		&			
ANR	1038502	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038503	Identifier	jump		1038196	0					
ANR	1038504	Identifier	flags		1038196	1					
ANR	1038505	Identifier	IS_COND		1038196	1					
ANR	1038506	ExpressionStatement	* jump_inst ++ = IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8	313:2:9863:9916	1038196	11	True				
ANR	1038507	AssignmentExpression	* jump_inst ++ = IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1038196	0		=			
ANR	1038508	UnaryOperationExpression	* jump_inst ++		1038196	0					
ANR	1038509	UnaryOperator	*		1038196	0					
ANR	1038510	PostIncDecOperationExpression	jump_inst ++		1038196	1					
ANR	1038511	Identifier	jump_inst		1038196	0					
ANR	1038512	IncDec	++		1038196	1					
ANR	1038513	InclusiveOrExpression	IT | ( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1038196	1		|			
ANR	1038514	Identifier	IT		1038196	0					
ANR	1038515	InclusiveOrExpression	( ( jump -> flags >> 4 ) & 0xf0 ) | 0x8		1038196	1		|			
ANR	1038516	BitAndExpression	( jump -> flags >> 4 ) & 0xf0		1038196	0		&			
ANR	1038517	ShiftExpression	jump -> flags >> 4		1038196	0		>>			
ANR	1038518	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038519	Identifier	jump		1038196	0					
ANR	1038520	Identifier	flags		1038196	1					
ANR	1038521	PrimaryExpression	4		1038196	1					
ANR	1038522	PrimaryExpression	0xf0		1038196	1					
ANR	1038523	PrimaryExpression	0x8		1038196	1					
ANR	1038524	ExpressionStatement	diff --	314:2:9920:9926	1038196	12	True				
ANR	1038525	PostIncDecOperationExpression	diff --		1038196	0					
ANR	1038526	Identifier	diff		1038196	0					
ANR	1038527	IncDec	--		1038196	1					
ANR	1038528	ExpressionStatement	type = 5	315:2:9930:9938	1038196	13	True				
ANR	1038529	AssignmentExpression	type = 5		1038196	0		=			
ANR	1038530	Identifier	type		1038196	0					
ANR	1038531	PrimaryExpression	5		1038196	1					
ANR	1038532	BreakStatement	break ;	316:2:9942:9947	1038196	14	True				
ANR	1038533	Label	case 4 :	317:1:9950:9956	1038196	15	True				
ANR	1038534	ExpressionStatement	SLJIT_ASSERT ( diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND ) )	319:2:9999:10070	1038196	16	True				
ANR	1038535	CallExpression	SLJIT_ASSERT ( diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND ) )		1038196	0					
ANR	1038536	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038537	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038538	ArgumentList	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1038196	1					
ANR	1038539	Argument	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1038196	0					
ANR	1038540	AndExpression	diff <= 1023 && diff >= - 1024 && ! ( jump -> flags & IS_COND )		1038196	0		&&			
ANR	1038541	RelationalExpression	diff <= 1023		1038196	0		<=			
ANR	1038542	Identifier	diff		1038196	0					
ANR	1038543	PrimaryExpression	1023		1038196	1					
ANR	1038544	AndExpression	diff >= - 1024 && ! ( jump -> flags & IS_COND )		1038196	1		&&			
ANR	1038545	RelationalExpression	diff >= - 1024		1038196	0		>=			
ANR	1038546	Identifier	diff		1038196	0					
ANR	1038547	UnaryOperationExpression	- 1024		1038196	1					
ANR	1038548	UnaryOperator	-		1038196	0					
ANR	1038549	PrimaryExpression	1024		1038196	1					
ANR	1038550	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1038196	1					
ANR	1038551	UnaryOperator	!		1038196	0					
ANR	1038552	BitAndExpression	jump -> flags & IS_COND		1038196	1		&			
ANR	1038553	PtrMemberAccess	jump -> flags		1038196	0					
ANR	1038554	Identifier	jump		1038196	0					
ANR	1038555	Identifier	flags		1038196	1					
ANR	1038556	Identifier	IS_COND		1038196	1					
ANR	1038557	ExpressionStatement	jump_inst [ 0 ] = 0xe000 | ( diff & 0x7ff )	320:2:10074:10112	1038196	17	True				
ANR	1038558	AssignmentExpression	jump_inst [ 0 ] = 0xe000 | ( diff & 0x7ff )		1038196	0		=			
ANR	1038559	ArrayIndexing	jump_inst [ 0 ]		1038196	0					
ANR	1038560	Identifier	jump_inst		1038196	0					
ANR	1038561	PrimaryExpression	0		1038196	1					
ANR	1038562	InclusiveOrExpression	0xe000 | ( diff & 0x7ff )		1038196	1		|			
ANR	1038563	PrimaryExpression	0xe000		1038196	0					
ANR	1038564	BitAndExpression	diff & 0x7ff		1038196	1		&			
ANR	1038565	Identifier	diff		1038196	0					
ANR	1038566	PrimaryExpression	0x7ff		1038196	1					
ANR	1038567	ReturnStatement	return ;	321:2:10116:10122	1038196	18	True				
ANR	1038568	ExpressionStatement	SLJIT_ASSERT ( diff <= 8388607 && diff >= - 8388608 )	324:1:10129:10178	1038196	8	True				
ANR	1038569	CallExpression	SLJIT_ASSERT ( diff <= 8388607 && diff >= - 8388608 )		1038196	0					
ANR	1038570	Callee	SLJIT_ASSERT		1038196	0					
ANR	1038571	Identifier	SLJIT_ASSERT		1038196	0					
ANR	1038572	ArgumentList	diff <= 8388607 && diff >= - 8388608		1038196	1					
ANR	1038573	Argument	diff <= 8388607 && diff >= - 8388608		1038196	0					
ANR	1038574	AndExpression	diff <= 8388607 && diff >= - 8388608		1038196	0		&&			
ANR	1038575	RelationalExpression	diff <= 8388607		1038196	0		<=			
ANR	1038576	Identifier	diff		1038196	0					
ANR	1038577	PrimaryExpression	8388607		1038196	1					
ANR	1038578	RelationalExpression	diff >= - 8388608		1038196	1		>=			
ANR	1038579	Identifier	diff		1038196	0					
ANR	1038580	UnaryOperationExpression	- 8388608		1038196	1					
ANR	1038581	UnaryOperator	-		1038196	0					
ANR	1038582	PrimaryExpression	8388608		1038196	1					
ANR	1038583	ExpressionStatement	s = ( diff >> 23 ) & 0x1	327:1:10235:10257	1038196	9	True				
ANR	1038584	AssignmentExpression	s = ( diff >> 23 ) & 0x1		1038196	0		=			
ANR	1038585	Identifier	s		1038196	0					
ANR	1038586	BitAndExpression	( diff >> 23 ) & 0x1		1038196	1		&			
ANR	1038587	ShiftExpression	diff >> 23		1038196	0		>>			
ANR	1038588	Identifier	diff		1038196	0					
ANR	1038589	PrimaryExpression	23		1038196	1					
ANR	1038590	PrimaryExpression	0x1		1038196	1					
ANR	1038591	ExpressionStatement	j1 = ( ~ ( diff >> 21 ) ^ s ) & 0x1	328:1:10260:10290	1038196	10	True				
ANR	1038592	AssignmentExpression	j1 = ( ~ ( diff >> 21 ) ^ s ) & 0x1		1038196	0		=			
ANR	1038593	Identifier	j1		1038196	0					
ANR	1038594	BitAndExpression	( ~ ( diff >> 21 ) ^ s ) & 0x1		1038196	1		&			
ANR	1038595	ExclusiveOrExpression	~ ( diff >> 21 ) ^ s		1038196	0		^			
ANR	1038596	UnaryOperationExpression	~ ( diff >> 21 )		1038196	0					
ANR	1038597	UnaryOperator	~		1038196	0					
ANR	1038598	ShiftExpression	diff >> 21		1038196	1		>>			
ANR	1038599	Identifier	diff		1038196	0					
ANR	1038600	PrimaryExpression	21		1038196	1					
ANR	1038601	Identifier	s		1038196	1					
ANR	1038602	PrimaryExpression	0x1		1038196	1					
ANR	1038603	ExpressionStatement	j2 = ( ~ ( diff >> 22 ) ^ s ) & 0x1	329:1:10293:10323	1038196	11	True				
ANR	1038604	AssignmentExpression	j2 = ( ~ ( diff >> 22 ) ^ s ) & 0x1		1038196	0		=			
ANR	1038605	Identifier	j2		1038196	0					
ANR	1038606	BitAndExpression	( ~ ( diff >> 22 ) ^ s ) & 0x1		1038196	1		&			
ANR	1038607	ExclusiveOrExpression	~ ( diff >> 22 ) ^ s		1038196	0		^			
ANR	1038608	UnaryOperationExpression	~ ( diff >> 22 )		1038196	0					
ANR	1038609	UnaryOperator	~		1038196	0					
ANR	1038610	ShiftExpression	diff >> 22		1038196	1		>>			
ANR	1038611	Identifier	diff		1038196	0					
ANR	1038612	PrimaryExpression	22		1038196	1					
ANR	1038613	Identifier	s		1038196	1					
ANR	1038614	PrimaryExpression	0x1		1038196	1					
ANR	1038615	ExpressionStatement	"jump_inst [ 0 ] = 0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"	330:1:10326:10388	1038196	12	True				
ANR	1038616	AssignmentExpression	"jump_inst [ 0 ] = 0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1038196	0		=			
ANR	1038617	ArrayIndexing	jump_inst [ 0 ]		1038196	0					
ANR	1038618	Identifier	jump_inst		1038196	0					
ANR	1038619	PrimaryExpression	0		1038196	1					
ANR	1038620	InclusiveOrExpression	"0xf000 | ( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1038196	1		|			
ANR	1038621	PrimaryExpression	0xf000		1038196	0					
ANR	1038622	InclusiveOrExpression	"( s << 10 ) | COPY_BITS ( diff , 11 , 0 , 10 )"		1038196	1		|			
ANR	1038623	ShiftExpression	s << 10		1038196	0		<<			
ANR	1038624	Identifier	s		1038196	0					
ANR	1038625	PrimaryExpression	10		1038196	1					
ANR	1038626	CallExpression	"COPY_BITS ( diff , 11 , 0 , 10 )"		1038196	1					
ANR	1038627	Callee	COPY_BITS		1038196	0					
ANR	1038628	Identifier	COPY_BITS		1038196	0					
ANR	1038629	ArgumentList	diff		1038196	1					
ANR	1038630	Argument	diff		1038196	0					
ANR	1038631	Identifier	diff		1038196	0					
ANR	1038632	Argument	11		1038196	1					
ANR	1038633	PrimaryExpression	11		1038196	0					
ANR	1038634	Argument	0		1038196	2					
ANR	1038635	PrimaryExpression	0		1038196	0					
ANR	1038636	Argument	10		1038196	3					
ANR	1038637	PrimaryExpression	10		1038196	0					
ANR	1038638	ExpressionStatement	jump_inst [ 1 ] = ( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )	331:1:10391:10446	1038196	13	True				
ANR	1038639	AssignmentExpression	jump_inst [ 1 ] = ( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )		1038196	0		=			
ANR	1038640	ArrayIndexing	jump_inst [ 1 ]		1038196	0					
ANR	1038641	Identifier	jump_inst		1038196	0					
ANR	1038642	PrimaryExpression	1		1038196	1					
ANR	1038643	InclusiveOrExpression	( j1 << 13 ) | ( j2 << 11 ) | ( diff & 0x7ff )		1038196	1		|			
ANR	1038644	ShiftExpression	j1 << 13		1038196	0		<<			
ANR	1038645	Identifier	j1		1038196	0					
ANR	1038646	PrimaryExpression	13		1038196	1					
ANR	1038647	InclusiveOrExpression	( j2 << 11 ) | ( diff & 0x7ff )		1038196	1		|			
ANR	1038648	ShiftExpression	j2 << 11		1038196	0		<<			
ANR	1038649	Identifier	j2		1038196	0					
ANR	1038650	PrimaryExpression	11		1038196	1					
ANR	1038651	BitAndExpression	diff & 0x7ff		1038196	1		&			
ANR	1038652	Identifier	diff		1038196	0					
ANR	1038653	PrimaryExpression	0x7ff		1038196	1					
ANR	1038654	IfStatement	if ( type == 5 )		1038196	14					
ANR	1038655	Condition	type == 5	334:5:10492:10500	1038196	0	True				
ANR	1038656	EqualityExpression	type == 5		1038196	0		==			
ANR	1038657	Identifier	type		1038196	0					
ANR	1038658	PrimaryExpression	5		1038196	1					
ANR	1038659	ExpressionStatement	jump_inst [ 1 ] |= 0x9000	335:2:10542:10564	1038196	1	True				
ANR	1038660	AssignmentExpression	jump_inst [ 1 ] |= 0x9000		1038196	0		|=			
ANR	1038661	ArrayIndexing	jump_inst [ 1 ]		1038196	0					
ANR	1038662	Identifier	jump_inst		1038196	0					
ANR	1038663	PrimaryExpression	1		1038196	1					
ANR	1038664	PrimaryExpression	0x9000		1038196	1					
ANR	1038665	ElseStatement	else		1038196	0					
ANR	1038666	IfStatement	if ( type == 6 )		1038196	0					
ANR	1038667	Condition	type == 6	336:10:10576:10584	1038196	0	True				
ANR	1038668	EqualityExpression	type == 6		1038196	0		==			
ANR	1038669	Identifier	type		1038196	0					
ANR	1038670	PrimaryExpression	6		1038196	1					
ANR	1038671	ExpressionStatement	jump_inst [ 1 ] |= 0xd000	337:2:10627:10649	1038196	1	True				
ANR	1038672	AssignmentExpression	jump_inst [ 1 ] |= 0xd000		1038196	0		|=			
ANR	1038673	ArrayIndexing	jump_inst [ 1 ]		1038196	0					
ANR	1038674	Identifier	jump_inst		1038196	0					
ANR	1038675	PrimaryExpression	1		1038196	1					
ANR	1038676	PrimaryExpression	0xd000		1038196	1					
ANR	1038677	ElseStatement	else		1038196	0					
ANR	1038678	ExpressionStatement	SLJIT_ASSERT_STOP ( )	339:2:10659:10678	1038196	0	True				
ANR	1038679	CallExpression	SLJIT_ASSERT_STOP ( )		1038196	0					
ANR	1038680	Callee	SLJIT_ASSERT_STOP		1038196	0					
ANR	1038681	Identifier	SLJIT_ASSERT_STOP		1038196	0					
ANR	1038682	ArgumentList			1038196	1					
ANR	1038683	ReturnType	static SLJIT_INLINE void		1038196	1					
ANR	1038684	Identifier	set_jump_instruction		1038196	2					
ANR	1038685	ParameterList	struct sljit_jump * jump		1038196	3					
ANR	1038686	Parameter	struct sljit_jump * jump	279:46:8694:8716	1038196	0	True				
ANR	1038687	ParameterType	struct sljit_jump *		1038196	0					
ANR	1038688	Identifier	jump		1038196	1					
ANR	1038689	CFGEntryNode	ENTRY		1038196		True				
ANR	1038690	CFGExitNode	EXIT		1038196		True				
ANR	1038691	Symbol	COPY_BITS		1038196						
ANR	1038692	Symbol	* * jump		1038196						
ANR	1038693	Symbol	* jump		1038196						
ANR	1038694	Symbol	* jump_inst		1038196						
ANR	1038695	Symbol	jump -> u		1038196						
ANR	1038696	Symbol	j1		1038196						
ANR	1038697	Symbol	jump -> flags		1038196						
ANR	1038698	Symbol	j2		1038196						
ANR	1038699	Symbol	JUMP_LABEL		1038196						
ANR	1038700	Symbol	JUMP_ADDR		1038196						
ANR	1038701	Symbol	type		1038196						
ANR	1038702	Symbol	* jump_inst ++		1038196						
ANR	1038703	Symbol	jump		1038196						
ANR	1038704	Symbol	jump_inst		1038196						
ANR	1038705	Symbol	diff		1038196						
ANR	1038706	Symbol	jump -> addr		1038196						
ANR	1038707	Symbol	IT		1038196						
ANR	1038708	Symbol	* jump -> u . label		1038196						
ANR	1038709	Symbol	s		1038196						
ANR	1038710	Symbol	* jump -> u		1038196						
ANR	1038711	Symbol	IS_COND		1038196						
ANR	1038712	Symbol	jump -> u . target		1038196						
ANR	1038713	Symbol	jump -> u . label -> addr		1038196						
ANR	1038714	Symbol	jump -> u . label		1038196						
ANR	1038715	Symbol	SLJIT_UNLIKELY		1038196						
ANR	1038716	Function	sljit_generate_code	342:0:10683:12827							
ANR	1038717	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1038716	0					
ANR	1038718	CompoundStatement		343:0:10767:12827	1038716	0					
ANR	1038719	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	344:1:10770:10803	1038716	0	True				
ANR	1038720	IdentifierDecl	* buf		1038716	0					
ANR	1038721	IdentifierDeclType	struct sljit_memory_fragment *		1038716	0					
ANR	1038722	Identifier	buf		1038716	1					
ANR	1038723	IdentifierDeclStatement	sljit_uh * code ;	345:1:10806:10820	1038716	1	True				
ANR	1038724	IdentifierDecl	* code		1038716	0					
ANR	1038725	IdentifierDeclType	sljit_uh *		1038716	0					
ANR	1038726	Identifier	code		1038716	1					
ANR	1038727	IdentifierDeclStatement	sljit_uh * code_ptr ;	346:1:10823:10841	1038716	2	True				
ANR	1038728	IdentifierDecl	* code_ptr		1038716	0					
ANR	1038729	IdentifierDeclType	sljit_uh *		1038716	0					
ANR	1038730	Identifier	code_ptr		1038716	1					
ANR	1038731	IdentifierDeclStatement	sljit_uh * buf_ptr ;	347:1:10844:10861	1038716	3	True				
ANR	1038732	IdentifierDecl	* buf_ptr		1038716	0					
ANR	1038733	IdentifierDeclType	sljit_uh *		1038716	0					
ANR	1038734	Identifier	buf_ptr		1038716	1					
ANR	1038735	IdentifierDeclStatement	sljit_uh * buf_end ;	348:1:10864:10881	1038716	4	True				
ANR	1038736	IdentifierDecl	* buf_end		1038716	0					
ANR	1038737	IdentifierDeclType	sljit_uh *		1038716	0					
ANR	1038738	Identifier	buf_end		1038716	1					
ANR	1038739	IdentifierDeclStatement	sljit_uw half_count ;	349:1:10884:10903	1038716	5	True				
ANR	1038740	IdentifierDecl	half_count		1038716	0					
ANR	1038741	IdentifierDeclType	sljit_uw		1038716	0					
ANR	1038742	Identifier	half_count		1038716	1					
ANR	1038743	IdentifierDeclStatement	struct sljit_label * label ;	351:1:10907:10932	1038716	6	True				
ANR	1038744	IdentifierDecl	* label		1038716	0					
ANR	1038745	IdentifierDeclType	struct sljit_label *		1038716	0					
ANR	1038746	Identifier	label		1038716	1					
ANR	1038747	IdentifierDeclStatement	struct sljit_jump * jump ;	352:1:10935:10958	1038716	7	True				
ANR	1038748	IdentifierDecl	* jump		1038716	0					
ANR	1038749	IdentifierDeclType	struct sljit_jump *		1038716	0					
ANR	1038750	Identifier	jump		1038716	1					
ANR	1038751	IdentifierDeclStatement	struct sljit_const * const_ ;	353:1:10961:10987	1038716	8	True				
ANR	1038752	IdentifierDecl	* const_		1038716	0					
ANR	1038753	IdentifierDeclType	struct sljit_const *		1038716	0					
ANR	1038754	Identifier	const_		1038716	1					
ANR	1038755	ExpressionStatement	CHECK_ERROR_PTR ( )	355:1:10991:11008	1038716	9	True				
ANR	1038756	CallExpression	CHECK_ERROR_PTR ( )		1038716	0					
ANR	1038757	Callee	CHECK_ERROR_PTR		1038716	0					
ANR	1038758	Identifier	CHECK_ERROR_PTR		1038716	0					
ANR	1038759	ArgumentList			1038716	1					
ANR	1038760	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	356:1:11011:11057	1038716	10	True				
ANR	1038761	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1038716	0					
ANR	1038762	Callee	CHECK_PTR		1038716	0					
ANR	1038763	Identifier	CHECK_PTR		1038716	0					
ANR	1038764	ArgumentList	check_sljit_generate_code ( compiler )		1038716	1					
ANR	1038765	Argument	check_sljit_generate_code ( compiler )		1038716	0					
ANR	1038766	CallExpression	check_sljit_generate_code ( compiler )		1038716	0					
ANR	1038767	Callee	check_sljit_generate_code		1038716	0					
ANR	1038768	Identifier	check_sljit_generate_code		1038716	0					
ANR	1038769	ArgumentList	compiler		1038716	1					
ANR	1038770	Argument	compiler		1038716	0					
ANR	1038771	Identifier	compiler		1038716	0					
ANR	1038772	ExpressionStatement	reverse_buf ( compiler )	357:1:11060:11081	1038716	11	True				
ANR	1038773	CallExpression	reverse_buf ( compiler )		1038716	0					
ANR	1038774	Callee	reverse_buf		1038716	0					
ANR	1038775	Identifier	reverse_buf		1038716	0					
ANR	1038776	ArgumentList	compiler		1038716	1					
ANR	1038777	Argument	compiler		1038716	0					
ANR	1038778	Identifier	compiler		1038716	0					
ANR	1038779	ExpressionStatement	code = ( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )	359:1:11085:11155	1038716	12	True				
ANR	1038780	AssignmentExpression	code = ( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1038716	0		=			
ANR	1038781	Identifier	code		1038716	0					
ANR	1038782	CastExpression	( sljit_uh * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1038716	1					
ANR	1038783	CastTarget	sljit_uh *		1038716	0					
ANR	1038784	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_uh ) )		1038716	1					
ANR	1038785	Callee	SLJIT_MALLOC_EXEC		1038716	0					
ANR	1038786	Identifier	SLJIT_MALLOC_EXEC		1038716	0					
ANR	1038787	ArgumentList	compiler -> size * sizeof ( sljit_uh )		1038716	1					
ANR	1038788	Argument	compiler -> size * sizeof ( sljit_uh )		1038716	0					
ANR	1038789	MultiplicativeExpression	compiler -> size * sizeof ( sljit_uh )		1038716	0		*			
ANR	1038790	PtrMemberAccess	compiler -> size		1038716	0					
ANR	1038791	Identifier	compiler		1038716	0					
ANR	1038792	Identifier	size		1038716	1					
ANR	1038793	SizeofExpression	sizeof ( sljit_uh )		1038716	1					
ANR	1038794	Sizeof	sizeof		1038716	0					
ANR	1038795	SizeofOperand	sljit_uh		1038716	1					
ANR	1038796	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	360:1:11158:11185	1038716	13	True				
ANR	1038797	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1038716	0					
ANR	1038798	Callee	PTR_FAIL_WITH_EXEC_IF		1038716	0					
ANR	1038799	Identifier	PTR_FAIL_WITH_EXEC_IF		1038716	0					
ANR	1038800	ArgumentList	code		1038716	1					
ANR	1038801	Argument	code		1038716	0					
ANR	1038802	Identifier	code		1038716	0					
ANR	1038803	ExpressionStatement	buf = compiler -> buf	361:1:11188:11207	1038716	14	True				
ANR	1038804	AssignmentExpression	buf = compiler -> buf		1038716	0		=			
ANR	1038805	Identifier	buf		1038716	0					
ANR	1038806	PtrMemberAccess	compiler -> buf		1038716	1					
ANR	1038807	Identifier	compiler		1038716	0					
ANR	1038808	Identifier	buf		1038716	1					
ANR	1038809	ExpressionStatement	code_ptr = code	363:1:11211:11226	1038716	15	True				
ANR	1038810	AssignmentExpression	code_ptr = code		1038716	0		=			
ANR	1038811	Identifier	code_ptr		1038716	0					
ANR	1038812	Identifier	code		1038716	1					
ANR	1038813	ExpressionStatement	half_count = 0	364:1:11229:11243	1038716	16	True				
ANR	1038814	AssignmentExpression	half_count = 0		1038716	0		=			
ANR	1038815	Identifier	half_count		1038716	0					
ANR	1038816	PrimaryExpression	0		1038716	1					
ANR	1038817	ExpressionStatement	label = compiler -> labels	365:1:11246:11270	1038716	17	True				
ANR	1038818	AssignmentExpression	label = compiler -> labels		1038716	0		=			
ANR	1038819	Identifier	label		1038716	0					
ANR	1038820	PtrMemberAccess	compiler -> labels		1038716	1					
ANR	1038821	Identifier	compiler		1038716	0					
ANR	1038822	Identifier	labels		1038716	1					
ANR	1038823	ExpressionStatement	jump = compiler -> jumps	366:1:11273:11295	1038716	18	True				
ANR	1038824	AssignmentExpression	jump = compiler -> jumps		1038716	0		=			
ANR	1038825	Identifier	jump		1038716	0					
ANR	1038826	PtrMemberAccess	compiler -> jumps		1038716	1					
ANR	1038827	Identifier	compiler		1038716	0					
ANR	1038828	Identifier	jumps		1038716	1					
ANR	1038829	ExpressionStatement	const_ = compiler -> consts	367:1:11298:11323	1038716	19	True				
ANR	1038830	AssignmentExpression	const_ = compiler -> consts		1038716	0		=			
ANR	1038831	Identifier	const_		1038716	0					
ANR	1038832	PtrMemberAccess	compiler -> consts		1038716	1					
ANR	1038833	Identifier	compiler		1038716	0					
ANR	1038834	Identifier	consts		1038716	1					
ANR	1038835	DoStatement	do		1038716	20					
ANR	1038836	CompoundStatement		27:4:562:562	1038716	0					
ANR	1038837	ExpressionStatement	buf_ptr = ( sljit_uh * ) buf -> memory	370:2:11334:11366	1038716	0	True				
ANR	1038838	AssignmentExpression	buf_ptr = ( sljit_uh * ) buf -> memory		1038716	0		=			
ANR	1038839	Identifier	buf_ptr		1038716	0					
ANR	1038840	CastExpression	( sljit_uh * ) buf -> memory		1038716	1					
ANR	1038841	CastTarget	sljit_uh *		1038716	0					
ANR	1038842	PtrMemberAccess	buf -> memory		1038716	1					
ANR	1038843	Identifier	buf		1038716	0					
ANR	1038844	Identifier	memory		1038716	1					
ANR	1038845	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 1 )	371:2:11370:11411	1038716	1	True				
ANR	1038846	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 1 )		1038716	0		=			
ANR	1038847	Identifier	buf_end		1038716	0					
ANR	1038848	AdditiveExpression	buf_ptr + ( buf -> used_size >> 1 )		1038716	1		+			
ANR	1038849	Identifier	buf_ptr		1038716	0					
ANR	1038850	ShiftExpression	buf -> used_size >> 1		1038716	1		>>			
ANR	1038851	PtrMemberAccess	buf -> used_size		1038716	0					
ANR	1038852	Identifier	buf		1038716	0					
ANR	1038853	Identifier	used_size		1038716	1					
ANR	1038854	PrimaryExpression	1		1038716	1					
ANR	1038855	DoStatement	do		1038716	2					
ANR	1038856	CompoundStatement		30:5:650:650	1038716	0					
ANR	1038857	ExpressionStatement	* code_ptr = * buf_ptr ++	373:3:11423:11445	1038716	0	True				
ANR	1038858	AssignmentExpression	* code_ptr = * buf_ptr ++		1038716	0		=			
ANR	1038859	UnaryOperationExpression	* code_ptr		1038716	0					
ANR	1038860	UnaryOperator	*		1038716	0					
ANR	1038861	Identifier	code_ptr		1038716	1					
ANR	1038862	UnaryOperationExpression	* buf_ptr ++		1038716	1					
ANR	1038863	UnaryOperator	*		1038716	0					
ANR	1038864	PostIncDecOperationExpression	buf_ptr ++		1038716	1					
ANR	1038865	Identifier	buf_ptr		1038716	0					
ANR	1038866	IncDec	++		1038716	1					
ANR	1038867	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= half_count )	375:3:11506:11555	1038716	1	True				
ANR	1038868	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= half_count )		1038716	0					
ANR	1038869	Callee	SLJIT_ASSERT		1038716	0					
ANR	1038870	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1038871	ArgumentList	! label || label -> size >= half_count		1038716	1					
ANR	1038872	Argument	! label || label -> size >= half_count		1038716	0					
ANR	1038873	OrExpression	! label || label -> size >= half_count		1038716	0		||			
ANR	1038874	UnaryOperationExpression	! label		1038716	0					
ANR	1038875	UnaryOperator	!		1038716	0					
ANR	1038876	Identifier	label		1038716	1					
ANR	1038877	RelationalExpression	label -> size >= half_count		1038716	1		>=			
ANR	1038878	PtrMemberAccess	label -> size		1038716	0					
ANR	1038879	Identifier	label		1038716	0					
ANR	1038880	Identifier	size		1038716	1					
ANR	1038881	Identifier	half_count		1038716	1					
ANR	1038882	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= half_count )	376:3:11560:11607	1038716	2	True				
ANR	1038883	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= half_count )		1038716	0					
ANR	1038884	Callee	SLJIT_ASSERT		1038716	0					
ANR	1038885	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1038886	ArgumentList	! jump || jump -> addr >= half_count		1038716	1					
ANR	1038887	Argument	! jump || jump -> addr >= half_count		1038716	0					
ANR	1038888	OrExpression	! jump || jump -> addr >= half_count		1038716	0		||			
ANR	1038889	UnaryOperationExpression	! jump		1038716	0					
ANR	1038890	UnaryOperator	!		1038716	0					
ANR	1038891	Identifier	jump		1038716	1					
ANR	1038892	RelationalExpression	jump -> addr >= half_count		1038716	1		>=			
ANR	1038893	PtrMemberAccess	jump -> addr		1038716	0					
ANR	1038894	Identifier	jump		1038716	0					
ANR	1038895	Identifier	addr		1038716	1					
ANR	1038896	Identifier	half_count		1038716	1					
ANR	1038897	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= half_count )	377:3:11612:11663	1038716	3	True				
ANR	1038898	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= half_count )		1038716	0					
ANR	1038899	Callee	SLJIT_ASSERT		1038716	0					
ANR	1038900	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1038901	ArgumentList	! const_ || const_ -> addr >= half_count		1038716	1					
ANR	1038902	Argument	! const_ || const_ -> addr >= half_count		1038716	0					
ANR	1038903	OrExpression	! const_ || const_ -> addr >= half_count		1038716	0		||			
ANR	1038904	UnaryOperationExpression	! const_		1038716	0					
ANR	1038905	UnaryOperator	!		1038716	0					
ANR	1038906	Identifier	const_		1038716	1					
ANR	1038907	RelationalExpression	const_ -> addr >= half_count		1038716	1		>=			
ANR	1038908	PtrMemberAccess	const_ -> addr		1038716	0					
ANR	1038909	Identifier	const_		1038716	0					
ANR	1038910	Identifier	addr		1038716	1					
ANR	1038911	Identifier	half_count		1038716	1					
ANR	1038912	IfStatement	if ( label && label -> size == half_count )		1038716	4					
ANR	1038913	Condition	label && label -> size == half_count	378:7:11672:11705	1038716	0	True				
ANR	1038914	AndExpression	label && label -> size == half_count		1038716	0		&&			
ANR	1038915	Identifier	label		1038716	0					
ANR	1038916	EqualityExpression	label -> size == half_count		1038716	1		==			
ANR	1038917	PtrMemberAccess	label -> size		1038716	0					
ANR	1038918	Identifier	label		1038716	0					
ANR	1038919	Identifier	size		1038716	1					
ANR	1038920	Identifier	half_count		1038716	1					
ANR	1038921	CompoundStatement		36:43:940:940	1038716	1					
ANR	1038922	ExpressionStatement	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1	379:4:11714:11754	1038716	0	True				
ANR	1038923	AssignmentExpression	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1		1038716	0		=			
ANR	1038924	PtrMemberAccess	label -> addr		1038716	0					
ANR	1038925	Identifier	label		1038716	0					
ANR	1038926	Identifier	addr		1038716	1					
ANR	1038927	InclusiveOrExpression	( ( sljit_uw ) code_ptr ) | 0x1		1038716	1		|			
ANR	1038928	CastExpression	( sljit_uw ) code_ptr		1038716	0					
ANR	1038929	CastTarget	sljit_uw		1038716	0					
ANR	1038930	Identifier	code_ptr		1038716	1					
ANR	1038931	PrimaryExpression	0x1		1038716	1					
ANR	1038932	ExpressionStatement	label -> size = code_ptr - code	380:4:11760:11789	1038716	1	True				
ANR	1038933	AssignmentExpression	label -> size = code_ptr - code		1038716	0		=			
ANR	1038934	PtrMemberAccess	label -> size		1038716	0					
ANR	1038935	Identifier	label		1038716	0					
ANR	1038936	Identifier	size		1038716	1					
ANR	1038937	AdditiveExpression	code_ptr - code		1038716	1		-			
ANR	1038938	Identifier	code_ptr		1038716	0					
ANR	1038939	Identifier	code		1038716	1					
ANR	1038940	ExpressionStatement	label = label -> next	381:4:11795:11814	1038716	2	True				
ANR	1038941	AssignmentExpression	label = label -> next		1038716	0		=			
ANR	1038942	Identifier	label		1038716	0					
ANR	1038943	PtrMemberAccess	label -> next		1038716	1					
ANR	1038944	Identifier	label		1038716	0					
ANR	1038945	Identifier	next		1038716	1					
ANR	1038946	IfStatement	if ( jump && jump -> addr == half_count )		1038716	5					
ANR	1038947	Condition	jump && jump -> addr == half_count	383:7:11828:11859	1038716	0	True				
ANR	1038948	AndExpression	jump && jump -> addr == half_count		1038716	0		&&			
ANR	1038949	Identifier	jump		1038716	0					
ANR	1038950	EqualityExpression	jump -> addr == half_count		1038716	1		==			
ANR	1038951	PtrMemberAccess	jump -> addr		1038716	0					
ANR	1038952	Identifier	jump		1038716	0					
ANR	1038953	Identifier	addr		1038716	1					
ANR	1038954	Identifier	half_count		1038716	1					
ANR	1038955	CompoundStatement		41:41:1094:1094	1038716	1					
ANR	1038956	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )	384:5:11869:11937	1038716	0	True				
ANR	1038957	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )		1038716	0		=			
ANR	1038958	PtrMemberAccess	jump -> addr		1038716	0					
ANR	1038959	Identifier	jump		1038716	0					
ANR	1038960	Identifier	addr		1038716	1					
ANR	1038961	AdditiveExpression	( sljit_uw ) code_ptr - ( ( jump -> flags & IS_COND ) ? 10 : 8 )		1038716	1		-			
ANR	1038962	CastExpression	( sljit_uw ) code_ptr		1038716	0					
ANR	1038963	CastTarget	sljit_uw		1038716	0					
ANR	1038964	Identifier	code_ptr		1038716	1					
ANR	1038965	ConditionalExpression	( jump -> flags & IS_COND ) ? 10 : 8		1038716	1					
ANR	1038966	Condition	jump -> flags & IS_COND		1038716	0					
ANR	1038967	BitAndExpression	jump -> flags & IS_COND		1038716	0		&			
ANR	1038968	PtrMemberAccess	jump -> flags		1038716	0					
ANR	1038969	Identifier	jump		1038716	0					
ANR	1038970	Identifier	flags		1038716	1					
ANR	1038971	Identifier	IS_COND		1038716	1					
ANR	1038972	PrimaryExpression	10		1038716	1					
ANR	1038973	PrimaryExpression	8		1038716	2					
ANR	1038974	ExpressionStatement	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"	385:5:11944:11994	1038716	1	True				
ANR	1038975	AssignmentExpression	"code_ptr -= detect_jump_type ( jump , code_ptr , code )"		1038716	0		-=			
ANR	1038976	Identifier	code_ptr		1038716	0					
ANR	1038977	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1038716	1					
ANR	1038978	Callee	detect_jump_type		1038716	0					
ANR	1038979	Identifier	detect_jump_type		1038716	0					
ANR	1038980	ArgumentList	jump		1038716	1					
ANR	1038981	Argument	jump		1038716	0					
ANR	1038982	Identifier	jump		1038716	0					
ANR	1038983	Argument	code_ptr		1038716	1					
ANR	1038984	Identifier	code_ptr		1038716	0					
ANR	1038985	Argument	code		1038716	2					
ANR	1038986	Identifier	code		1038716	0					
ANR	1038987	ExpressionStatement	jump = jump -> next	386:5:12001:12018	1038716	2	True				
ANR	1038988	AssignmentExpression	jump = jump -> next		1038716	0		=			
ANR	1038989	Identifier	jump		1038716	0					
ANR	1038990	PtrMemberAccess	jump -> next		1038716	1					
ANR	1038991	Identifier	jump		1038716	0					
ANR	1038992	Identifier	next		1038716	1					
ANR	1038993	IfStatement	if ( const_ && const_ -> addr == half_count )		1038716	6					
ANR	1038994	Condition	const_ && const_ -> addr == half_count	388:7:12032:12067	1038716	0	True				
ANR	1038995	AndExpression	const_ && const_ -> addr == half_count		1038716	0		&&			
ANR	1038996	Identifier	const_		1038716	0					
ANR	1038997	EqualityExpression	const_ -> addr == half_count		1038716	1		==			
ANR	1038998	PtrMemberAccess	const_ -> addr		1038716	0					
ANR	1038999	Identifier	const_		1038716	0					
ANR	1039000	Identifier	addr		1038716	1					
ANR	1039001	Identifier	half_count		1038716	1					
ANR	1039002	CompoundStatement		46:45:1302:1302	1038716	1					
ANR	1039003	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	389:4:12076:12109	1038716	0	True				
ANR	1039004	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1038716	0		=			
ANR	1039005	PtrMemberAccess	const_ -> addr		1038716	0					
ANR	1039006	Identifier	const_		1038716	0					
ANR	1039007	Identifier	addr		1038716	1					
ANR	1039008	CastExpression	( sljit_uw ) code_ptr		1038716	1					
ANR	1039009	CastTarget	sljit_uw		1038716	0					
ANR	1039010	Identifier	code_ptr		1038716	1					
ANR	1039011	ExpressionStatement	const_ = const_ -> next	390:4:12115:12136	1038716	1	True				
ANR	1039012	AssignmentExpression	const_ = const_ -> next		1038716	0		=			
ANR	1039013	Identifier	const_		1038716	0					
ANR	1039014	PtrMemberAccess	const_ -> next		1038716	1					
ANR	1039015	Identifier	const_		1038716	0					
ANR	1039016	Identifier	next		1038716	1					
ANR	1039017	ExpressionStatement	code_ptr ++	392:3:12146:12157	1038716	7	True				
ANR	1039018	PostIncDecOperationExpression	code_ptr ++		1038716	0					
ANR	1039019	Identifier	code_ptr		1038716	0					
ANR	1039020	IncDec	++		1038716	1					
ANR	1039021	ExpressionStatement	half_count ++	393:3:12162:12175	1038716	8	True				
ANR	1039022	PostIncDecOperationExpression	half_count ++		1038716	0					
ANR	1039023	Identifier	half_count		1038716	0					
ANR	1039024	IncDec	++		1038716	1					
ANR	1039025	Condition	buf_ptr < buf_end	394:11:12188:12204	1038716	1	True				
ANR	1039026	RelationalExpression	buf_ptr < buf_end		1038716	0		<			
ANR	1039027	Identifier	buf_ptr		1038716	0					
ANR	1039028	Identifier	buf_end		1038716	1					
ANR	1039029	ExpressionStatement	buf = buf -> next	396:2:12211:12226	1038716	3	True				
ANR	1039030	AssignmentExpression	buf = buf -> next		1038716	0		=			
ANR	1039031	Identifier	buf		1038716	0					
ANR	1039032	PtrMemberAccess	buf -> next		1038716	1					
ANR	1039033	Identifier	buf		1038716	0					
ANR	1039034	Identifier	next		1038716	1					
ANR	1039035	Condition	buf	397:10:12238:12240	1038716	1	True				
ANR	1039036	Identifier	buf		1038716	0					
ANR	1039037	IfStatement	if ( label && label -> size == half_count )		1038716	21					
ANR	1039038	Condition	label && label -> size == half_count	399:5:12250:12283	1038716	0	True				
ANR	1039039	AndExpression	label && label -> size == half_count		1038716	0		&&			
ANR	1039040	Identifier	label		1038716	0					
ANR	1039041	EqualityExpression	label -> size == half_count		1038716	1		==			
ANR	1039042	PtrMemberAccess	label -> size		1038716	0					
ANR	1039043	Identifier	label		1038716	0					
ANR	1039044	Identifier	size		1038716	1					
ANR	1039045	Identifier	half_count		1038716	1					
ANR	1039046	CompoundStatement		57:41:1518:1518	1038716	1					
ANR	1039047	ExpressionStatement	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1	400:2:12290:12330	1038716	0	True				
ANR	1039048	AssignmentExpression	label -> addr = ( ( sljit_uw ) code_ptr ) | 0x1		1038716	0		=			
ANR	1039049	PtrMemberAccess	label -> addr		1038716	0					
ANR	1039050	Identifier	label		1038716	0					
ANR	1039051	Identifier	addr		1038716	1					
ANR	1039052	InclusiveOrExpression	( ( sljit_uw ) code_ptr ) | 0x1		1038716	1		|			
ANR	1039053	CastExpression	( sljit_uw ) code_ptr		1038716	0					
ANR	1039054	CastTarget	sljit_uw		1038716	0					
ANR	1039055	Identifier	code_ptr		1038716	1					
ANR	1039056	PrimaryExpression	0x1		1038716	1					
ANR	1039057	ExpressionStatement	label -> size = code_ptr - code	401:2:12334:12363	1038716	1	True				
ANR	1039058	AssignmentExpression	label -> size = code_ptr - code		1038716	0		=			
ANR	1039059	PtrMemberAccess	label -> size		1038716	0					
ANR	1039060	Identifier	label		1038716	0					
ANR	1039061	Identifier	size		1038716	1					
ANR	1039062	AdditiveExpression	code_ptr - code		1038716	1		-			
ANR	1039063	Identifier	code_ptr		1038716	0					
ANR	1039064	Identifier	code		1038716	1					
ANR	1039065	ExpressionStatement	label = label -> next	402:2:12367:12386	1038716	2	True				
ANR	1039066	AssignmentExpression	label = label -> next		1038716	0		=			
ANR	1039067	Identifier	label		1038716	0					
ANR	1039068	PtrMemberAccess	label -> next		1038716	1					
ANR	1039069	Identifier	label		1038716	0					
ANR	1039070	Identifier	next		1038716	1					
ANR	1039071	ExpressionStatement	SLJIT_ASSERT ( ! label )	405:1:12393:12413	1038716	22	True				
ANR	1039072	CallExpression	SLJIT_ASSERT ( ! label )		1038716	0					
ANR	1039073	Callee	SLJIT_ASSERT		1038716	0					
ANR	1039074	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1039075	ArgumentList	! label		1038716	1					
ANR	1039076	Argument	! label		1038716	0					
ANR	1039077	UnaryOperationExpression	! label		1038716	0					
ANR	1039078	UnaryOperator	!		1038716	0					
ANR	1039079	Identifier	label		1038716	1					
ANR	1039080	ExpressionStatement	SLJIT_ASSERT ( ! jump )	406:1:12416:12435	1038716	23	True				
ANR	1039081	CallExpression	SLJIT_ASSERT ( ! jump )		1038716	0					
ANR	1039082	Callee	SLJIT_ASSERT		1038716	0					
ANR	1039083	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1039084	ArgumentList	! jump		1038716	1					
ANR	1039085	Argument	! jump		1038716	0					
ANR	1039086	UnaryOperationExpression	! jump		1038716	0					
ANR	1039087	UnaryOperator	!		1038716	0					
ANR	1039088	Identifier	jump		1038716	1					
ANR	1039089	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	407:1:12438:12459	1038716	24	True				
ANR	1039090	CallExpression	SLJIT_ASSERT ( ! const_ )		1038716	0					
ANR	1039091	Callee	SLJIT_ASSERT		1038716	0					
ANR	1039092	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1039093	ArgumentList	! const_		1038716	1					
ANR	1039094	Argument	! const_		1038716	0					
ANR	1039095	UnaryOperationExpression	! const_		1038716	0					
ANR	1039096	UnaryOperator	!		1038716	0					
ANR	1039097	Identifier	const_		1038716	1					
ANR	1039098	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	408:1:12462:12519	1038716	25	True				
ANR	1039099	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1038716	0					
ANR	1039100	Callee	SLJIT_ASSERT		1038716	0					
ANR	1039101	Identifier	SLJIT_ASSERT		1038716	0					
ANR	1039102	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1038716	1					
ANR	1039103	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1038716	0					
ANR	1039104	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1038716	0		<=			
ANR	1039105	AdditiveExpression	code_ptr - code		1038716	0		-			
ANR	1039106	Identifier	code_ptr		1038716	0					
ANR	1039107	Identifier	code		1038716	1					
ANR	1039108	CastExpression	( sljit_sw ) compiler -> size		1038716	1					
ANR	1039109	CastTarget	sljit_sw		1038716	0					
ANR	1039110	PtrMemberAccess	compiler -> size		1038716	1					
ANR	1039111	Identifier	compiler		1038716	0					
ANR	1039112	Identifier	size		1038716	1					
ANR	1039113	ExpressionStatement	jump = compiler -> jumps	410:1:12523:12545	1038716	26	True				
ANR	1039114	AssignmentExpression	jump = compiler -> jumps		1038716	0		=			
ANR	1039115	Identifier	jump		1038716	0					
ANR	1039116	PtrMemberAccess	compiler -> jumps		1038716	1					
ANR	1039117	Identifier	compiler		1038716	0					
ANR	1039118	Identifier	jumps		1038716	1					
ANR	1039119	WhileStatement	while ( jump )		1038716	27					
ANR	1039120	Condition	jump	411:8:12555:12558	1038716	0	True				
ANR	1039121	Identifier	jump		1038716	0					
ANR	1039122	CompoundStatement		69:14:1793:1793	1038716	1					
ANR	1039123	ExpressionStatement	set_jump_instruction ( jump )	412:2:12565:12591	1038716	0	True				
ANR	1039124	CallExpression	set_jump_instruction ( jump )		1038716	0					
ANR	1039125	Callee	set_jump_instruction		1038716	0					
ANR	1039126	Identifier	set_jump_instruction		1038716	0					
ANR	1039127	ArgumentList	jump		1038716	1					
ANR	1039128	Argument	jump		1038716	0					
ANR	1039129	Identifier	jump		1038716	0					
ANR	1039130	ExpressionStatement	jump = jump -> next	413:2:12595:12612	1038716	1	True				
ANR	1039131	AssignmentExpression	jump = jump -> next		1038716	0		=			
ANR	1039132	Identifier	jump		1038716	0					
ANR	1039133	PtrMemberAccess	jump -> next		1038716	1					
ANR	1039134	Identifier	jump		1038716	0					
ANR	1039135	Identifier	next		1038716	1					
ANR	1039136	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	416:1:12619:12655	1038716	28	True				
ANR	1039137	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1038716	0		=			
ANR	1039138	PtrMemberAccess	compiler -> error		1038716	0					
ANR	1039139	Identifier	compiler		1038716	0					
ANR	1039140	Identifier	error		1038716	1					
ANR	1039141	Identifier	SLJIT_ERR_COMPILED		1038716	1					
ANR	1039142	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uh )	417:1:12658:12722	1038716	29	True				
ANR	1039143	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uh )		1038716	0		=			
ANR	1039144	PtrMemberAccess	compiler -> executable_size		1038716	0					
ANR	1039145	Identifier	compiler		1038716	0					
ANR	1039146	Identifier	executable_size		1038716	1					
ANR	1039147	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_uh )		1038716	1		*			
ANR	1039148	AdditiveExpression	code_ptr - code		1038716	0		-			
ANR	1039149	Identifier	code_ptr		1038716	0					
ANR	1039150	Identifier	code		1038716	1					
ANR	1039151	SizeofExpression	sizeof ( sljit_uh )		1038716	1					
ANR	1039152	Sizeof	sizeof		1038716	0					
ANR	1039153	SizeofOperand	sljit_uh		1038716	1					
ANR	1039154	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	418:1:12725:12758	1038716	30	True				
ANR	1039155	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1038716	0					
ANR	1039156	Callee	SLJIT_CACHE_FLUSH		1038716	0					
ANR	1039157	Identifier	SLJIT_CACHE_FLUSH		1038716	0					
ANR	1039158	ArgumentList	code		1038716	1					
ANR	1039159	Argument	code		1038716	0					
ANR	1039160	Identifier	code		1038716	0					
ANR	1039161	Argument	code_ptr		1038716	1					
ANR	1039162	Identifier	code_ptr		1038716	0					
ANR	1039163	ReturnStatement	return ( void * ) ( ( sljit_uw ) code | 0x1 ) ;	420:1:12789:12825	1038716	31	True				
ANR	1039164	CastExpression	( void * ) ( ( sljit_uw ) code | 0x1 )		1038716	0					
ANR	1039165	CastTarget	void *		1038716	0					
ANR	1039166	InclusiveOrExpression	( sljit_uw ) code | 0x1		1038716	1		|			
ANR	1039167	CastExpression	( sljit_uw ) code		1038716	0					
ANR	1039168	CastTarget	sljit_uw		1038716	0					
ANR	1039169	Identifier	code		1038716	1					
ANR	1039170	PrimaryExpression	0x1		1038716	1					
ANR	1039171	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1038716	1					
ANR	1039172	Identifier	sljit_generate_code		1038716	2					
ANR	1039173	ParameterList	struct sljit_compiler * compiler		1038716	3					
ANR	1039174	Parameter	struct sljit_compiler * compiler	342:51:10734:10764	1038716	0	True				
ANR	1039175	ParameterType	struct sljit_compiler *		1038716	0					
ANR	1039176	Identifier	compiler		1038716	1					
ANR	1039177	CFGEntryNode	ENTRY		1038716		True				
ANR	1039178	CFGExitNode	EXIT		1038716		True				
ANR	1039179	Symbol	half_count		1038716						
ANR	1039180	Symbol	label -> addr		1038716						
ANR	1039181	Symbol	code		1038716						
ANR	1039182	Symbol	* jump		1038716						
ANR	1039183	Symbol	compiler -> buf		1038716						
ANR	1039184	Symbol	jump -> flags		1038716						
ANR	1039185	Symbol	SLJIT_MALLOC_EXEC		1038716						
ANR	1039186	Symbol	label -> next		1038716						
ANR	1039187	Symbol	* compiler		1038716						
ANR	1039188	Symbol	const_ -> next		1038716						
ANR	1039189	Symbol	const_ -> addr		1038716						
ANR	1039190	Symbol	code_ptr		1038716						
ANR	1039191	Symbol	buf -> next		1038716						
ANR	1039192	Symbol	compiler		1038716						
ANR	1039193	Symbol	buf_end		1038716						
ANR	1039194	Symbol	compiler -> executable_size		1038716						
ANR	1039195	Symbol	jump		1038716						
ANR	1039196	Symbol	buf -> used_size		1038716						
ANR	1039197	Symbol	check_sljit_generate_code		1038716						
ANR	1039198	Symbol	* buf		1038716						
ANR	1039199	Symbol	const_		1038716						
ANR	1039200	Symbol	compiler -> labels		1038716						
ANR	1039201	Symbol	compiler -> consts		1038716						
ANR	1039202	Symbol	buf -> memory		1038716						
ANR	1039203	Symbol	detect_jump_type		1038716						
ANR	1039204	Symbol	* buf_ptr ++		1038716						
ANR	1039205	Symbol	jump -> addr		1038716						
ANR	1039206	Symbol	* const_		1038716						
ANR	1039207	Symbol	label		1038716						
ANR	1039208	Symbol	buf_ptr		1038716						
ANR	1039209	Symbol	* code_ptr		1038716						
ANR	1039210	Symbol	buf		1038716						
ANR	1039211	Symbol	compiler -> size		1038716						
ANR	1039212	Symbol	IS_COND		1038716						
ANR	1039213	Symbol	compiler -> jumps		1038716						
ANR	1039214	Symbol	label -> size		1038716						
ANR	1039215	Symbol	jump -> next		1038716						
ANR	1039216	Symbol	SLJIT_ERR_COMPILED		1038716						
ANR	1039217	Symbol	compiler -> error		1038716						
ANR	1039218	Symbol	* label		1038716						
ANR	1039219	Function	get_imm	428:0:13090:14122							
ANR	1039220	FunctionDef	get_imm (sljit_uw imm)		1039219	0					
ANR	1039221	CompoundStatement		429:0:13128:14122	1039219	0					
ANR	1039222	IdentifierDeclStatement	sljit_si counter ;	431:1:13160:13176	1039219	0	True				
ANR	1039223	IdentifierDecl	counter		1039219	0					
ANR	1039224	IdentifierDeclType	sljit_si		1039219	0					
ANR	1039225	Identifier	counter		1039219	1					
ANR	1039226	IfStatement	if ( imm <= 0xff )		1039219	1					
ANR	1039227	Condition	imm <= 0xff	433:5:13184:13194	1039219	0	True				
ANR	1039228	RelationalExpression	imm <= 0xff		1039219	0		<=			
ANR	1039229	Identifier	imm		1039219	0					
ANR	1039230	PrimaryExpression	0xff		1039219	1					
ANR	1039231	ReturnStatement	return imm ;	434:2:13199:13209	1039219	1	True				
ANR	1039232	Identifier	imm		1039219	0					
ANR	1039233	IfStatement	if ( ( imm & 0xffff ) == ( imm >> 16 ) )		1039219	2					
ANR	1039234	Condition	( imm & 0xffff ) == ( imm >> 16 )	436:5:13217:13245	1039219	0	True				
ANR	1039235	EqualityExpression	( imm & 0xffff ) == ( imm >> 16 )		1039219	0		==			
ANR	1039236	BitAndExpression	imm & 0xffff		1039219	0		&			
ANR	1039237	Identifier	imm		1039219	0					
ANR	1039238	PrimaryExpression	0xffff		1039219	1					
ANR	1039239	ShiftExpression	imm >> 16		1039219	1		>>			
ANR	1039240	Identifier	imm		1039219	0					
ANR	1039241	PrimaryExpression	16		1039219	1					
ANR	1039242	CompoundStatement		8:36:119:119	1039219	1					
ANR	1039243	IfStatement	if ( ! ( imm & 0xff00 ) )		1039219	0					
ANR	1039244	Condition	! ( imm & 0xff00 )	438:6:13284:13298	1039219	0	True				
ANR	1039245	UnaryOperationExpression	! ( imm & 0xff00 )		1039219	0					
ANR	1039246	UnaryOperator	!		1039219	0					
ANR	1039247	BitAndExpression	imm & 0xff00		1039219	1		&			
ANR	1039248	Identifier	imm		1039219	0					
ANR	1039249	PrimaryExpression	0xff00		1039219	1					
ANR	1039250	ReturnStatement	return ( 1 << 12 ) | ( imm & 0xff ) ;	439:3:13304:13335	1039219	1	True				
ANR	1039251	InclusiveOrExpression	( 1 << 12 ) | ( imm & 0xff )		1039219	0		|			
ANR	1039252	ShiftExpression	1 << 12		1039219	0		<<			
ANR	1039253	PrimaryExpression	1		1039219	0					
ANR	1039254	PrimaryExpression	12		1039219	1					
ANR	1039255	BitAndExpression	imm & 0xff		1039219	1		&			
ANR	1039256	Identifier	imm		1039219	0					
ANR	1039257	PrimaryExpression	0xff		1039219	1					
ANR	1039258	IfStatement	if ( ! ( imm & 0xff ) )		1039219	1					
ANR	1039259	Condition	! ( imm & 0xff )	440:6:13343:13355	1039219	0	True				
ANR	1039260	UnaryOperationExpression	! ( imm & 0xff )		1039219	0					
ANR	1039261	UnaryOperator	!		1039219	0					
ANR	1039262	BitAndExpression	imm & 0xff		1039219	1		&			
ANR	1039263	Identifier	imm		1039219	0					
ANR	1039264	PrimaryExpression	0xff		1039219	1					
ANR	1039265	ReturnStatement	return ( 2 << 12 ) | ( ( imm >> 8 ) & 0xff ) ;	441:3:13361:13399	1039219	1	True				
ANR	1039266	InclusiveOrExpression	( 2 << 12 ) | ( ( imm >> 8 ) & 0xff )		1039219	0		|			
ANR	1039267	ShiftExpression	2 << 12		1039219	0		<<			
ANR	1039268	PrimaryExpression	2		1039219	0					
ANR	1039269	PrimaryExpression	12		1039219	1					
ANR	1039270	BitAndExpression	( imm >> 8 ) & 0xff		1039219	1		&			
ANR	1039271	ShiftExpression	imm >> 8		1039219	0		>>			
ANR	1039272	Identifier	imm		1039219	0					
ANR	1039273	PrimaryExpression	8		1039219	1					
ANR	1039274	PrimaryExpression	0xff		1039219	1					
ANR	1039275	IfStatement	if ( ( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 ) )		1039219	2					
ANR	1039276	Condition	( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 )	442:6:13407:13443	1039219	0	True				
ANR	1039277	EqualityExpression	( imm & 0xff00 ) == ( ( imm & 0xff ) << 8 )		1039219	0		==			
ANR	1039278	BitAndExpression	imm & 0xff00		1039219	0		&			
ANR	1039279	Identifier	imm		1039219	0					
ANR	1039280	PrimaryExpression	0xff00		1039219	1					
ANR	1039281	ShiftExpression	( imm & 0xff ) << 8		1039219	1		<<			
ANR	1039282	BitAndExpression	imm & 0xff		1039219	0		&			
ANR	1039283	Identifier	imm		1039219	0					
ANR	1039284	PrimaryExpression	0xff		1039219	1					
ANR	1039285	PrimaryExpression	8		1039219	1					
ANR	1039286	ReturnStatement	return ( 3 << 12 ) | ( imm & 0xff ) ;	443:3:13449:13480	1039219	1	True				
ANR	1039287	InclusiveOrExpression	( 3 << 12 ) | ( imm & 0xff )		1039219	0		|			
ANR	1039288	ShiftExpression	3 << 12		1039219	0		<<			
ANR	1039289	PrimaryExpression	3		1039219	0					
ANR	1039290	PrimaryExpression	12		1039219	1					
ANR	1039291	BitAndExpression	imm & 0xff		1039219	1		&			
ANR	1039292	Identifier	imm		1039219	0					
ANR	1039293	PrimaryExpression	0xff		1039219	1					
ANR	1039294	ExpressionStatement	counter = 8	447:1:13539:13550	1039219	3	True				
ANR	1039295	AssignmentExpression	counter = 8		1039219	0		=			
ANR	1039296	Identifier	counter		1039219	0					
ANR	1039297	PrimaryExpression	8		1039219	1					
ANR	1039298	IfStatement	if ( ! ( imm & 0xffff0000 ) )		1039219	4					
ANR	1039299	Condition	! ( imm & 0xffff0000 )	448:5:13557:13575	1039219	0	True				
ANR	1039300	UnaryOperationExpression	! ( imm & 0xffff0000 )		1039219	0					
ANR	1039301	UnaryOperator	!		1039219	0					
ANR	1039302	BitAndExpression	imm & 0xffff0000		1039219	1		&			
ANR	1039303	Identifier	imm		1039219	0					
ANR	1039304	PrimaryExpression	0xffff0000		1039219	1					
ANR	1039305	CompoundStatement		20:26:449:449	1039219	1					
ANR	1039306	ExpressionStatement	counter += 16	449:2:13582:13595	1039219	0	True				
ANR	1039307	AssignmentExpression	counter += 16		1039219	0		+=			
ANR	1039308	Identifier	counter		1039219	0					
ANR	1039309	PrimaryExpression	16		1039219	1					
ANR	1039310	ExpressionStatement	imm <<= 16	450:2:13599:13609	1039219	1	True				
ANR	1039311	AssignmentExpression	imm <<= 16		1039219	0		<<=			
ANR	1039312	Identifier	imm		1039219	0					
ANR	1039313	PrimaryExpression	16		1039219	1					
ANR	1039314	IfStatement	if ( ! ( imm & 0xff000000 ) )		1039219	5					
ANR	1039315	Condition	! ( imm & 0xff000000 )	452:5:13619:13637	1039219	0	True				
ANR	1039316	UnaryOperationExpression	! ( imm & 0xff000000 )		1039219	0					
ANR	1039317	UnaryOperator	!		1039219	0					
ANR	1039318	BitAndExpression	imm & 0xff000000		1039219	1		&			
ANR	1039319	Identifier	imm		1039219	0					
ANR	1039320	PrimaryExpression	0xff000000		1039219	1					
ANR	1039321	CompoundStatement		24:26:511:511	1039219	1					
ANR	1039322	ExpressionStatement	counter += 8	453:2:13644:13656	1039219	0	True				
ANR	1039323	AssignmentExpression	counter += 8		1039219	0		+=			
ANR	1039324	Identifier	counter		1039219	0					
ANR	1039325	PrimaryExpression	8		1039219	1					
ANR	1039326	ExpressionStatement	imm <<= 8	454:2:13660:13669	1039219	1	True				
ANR	1039327	AssignmentExpression	imm <<= 8		1039219	0		<<=			
ANR	1039328	Identifier	imm		1039219	0					
ANR	1039329	PrimaryExpression	8		1039219	1					
ANR	1039330	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1039219	6					
ANR	1039331	Condition	! ( imm & 0xf0000000 )	456:5:13679:13697	1039219	0	True				
ANR	1039332	UnaryOperationExpression	! ( imm & 0xf0000000 )		1039219	0					
ANR	1039333	UnaryOperator	!		1039219	0					
ANR	1039334	BitAndExpression	imm & 0xf0000000		1039219	1		&			
ANR	1039335	Identifier	imm		1039219	0					
ANR	1039336	PrimaryExpression	0xf0000000		1039219	1					
ANR	1039337	CompoundStatement		28:26:571:571	1039219	1					
ANR	1039338	ExpressionStatement	counter += 4	457:2:13704:13716	1039219	0	True				
ANR	1039339	AssignmentExpression	counter += 4		1039219	0		+=			
ANR	1039340	Identifier	counter		1039219	0					
ANR	1039341	PrimaryExpression	4		1039219	1					
ANR	1039342	ExpressionStatement	imm <<= 4	458:2:13720:13729	1039219	1	True				
ANR	1039343	AssignmentExpression	imm <<= 4		1039219	0		<<=			
ANR	1039344	Identifier	imm		1039219	0					
ANR	1039345	PrimaryExpression	4		1039219	1					
ANR	1039346	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1039219	7					
ANR	1039347	Condition	! ( imm & 0xc0000000 )	460:5:13739:13757	1039219	0	True				
ANR	1039348	UnaryOperationExpression	! ( imm & 0xc0000000 )		1039219	0					
ANR	1039349	UnaryOperator	!		1039219	0					
ANR	1039350	BitAndExpression	imm & 0xc0000000		1039219	1		&			
ANR	1039351	Identifier	imm		1039219	0					
ANR	1039352	PrimaryExpression	0xc0000000		1039219	1					
ANR	1039353	CompoundStatement		32:26:631:631	1039219	1					
ANR	1039354	ExpressionStatement	counter += 2	461:2:13764:13776	1039219	0	True				
ANR	1039355	AssignmentExpression	counter += 2		1039219	0		+=			
ANR	1039356	Identifier	counter		1039219	0					
ANR	1039357	PrimaryExpression	2		1039219	1					
ANR	1039358	ExpressionStatement	imm <<= 2	462:2:13780:13789	1039219	1	True				
ANR	1039359	AssignmentExpression	imm <<= 2		1039219	0		<<=			
ANR	1039360	Identifier	imm		1039219	0					
ANR	1039361	PrimaryExpression	2		1039219	1					
ANR	1039362	IfStatement	if ( ! ( imm & 0x80000000 ) )		1039219	8					
ANR	1039363	Condition	! ( imm & 0x80000000 )	464:5:13799:13817	1039219	0	True				
ANR	1039364	UnaryOperationExpression	! ( imm & 0x80000000 )		1039219	0					
ANR	1039365	UnaryOperator	!		1039219	0					
ANR	1039366	BitAndExpression	imm & 0x80000000		1039219	1		&			
ANR	1039367	Identifier	imm		1039219	0					
ANR	1039368	PrimaryExpression	0x80000000		1039219	1					
ANR	1039369	CompoundStatement		36:26:691:691	1039219	1					
ANR	1039370	ExpressionStatement	counter += 1	465:2:13824:13836	1039219	0	True				
ANR	1039371	AssignmentExpression	counter += 1		1039219	0		+=			
ANR	1039372	Identifier	counter		1039219	0					
ANR	1039373	PrimaryExpression	1		1039219	1					
ANR	1039374	ExpressionStatement	imm <<= 1	466:2:13840:13849	1039219	1	True				
ANR	1039375	AssignmentExpression	imm <<= 1		1039219	0		<<=			
ANR	1039376	Identifier	imm		1039219	0					
ANR	1039377	PrimaryExpression	1		1039219	1					
ANR	1039378	ExpressionStatement	SLJIT_ASSERT ( counter <= 31 )	469:1:13899:13926	1039219	9	True				
ANR	1039379	CallExpression	SLJIT_ASSERT ( counter <= 31 )		1039219	0					
ANR	1039380	Callee	SLJIT_ASSERT		1039219	0					
ANR	1039381	Identifier	SLJIT_ASSERT		1039219	0					
ANR	1039382	ArgumentList	counter <= 31		1039219	1					
ANR	1039383	Argument	counter <= 31		1039219	0					
ANR	1039384	RelationalExpression	counter <= 31		1039219	0		<=			
ANR	1039385	Identifier	counter		1039219	0					
ANR	1039386	PrimaryExpression	31		1039219	1					
ANR	1039387	IfStatement	if ( imm & 0x00ffffff )		1039219	10					
ANR	1039388	Condition	imm & 0x00ffffff	471:5:13934:13949	1039219	0	True				
ANR	1039389	BitAndExpression	imm & 0x00ffffff		1039219	0		&			
ANR	1039390	Identifier	imm		1039219	0					
ANR	1039391	PrimaryExpression	0x00ffffff		1039219	1					
ANR	1039392	ReturnStatement	return INVALID_IMM ;	472:2:13954:13972	1039219	1	True				
ANR	1039393	Identifier	INVALID_IMM		1039219	0					
ANR	1039394	ReturnStatement	"return ( ( imm >> 24 ) & 0x7f ) | COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 ) ;"	474:1:14001:14120	1039219	11	True				
ANR	1039395	InclusiveOrExpression	"( ( imm >> 24 ) & 0x7f ) | COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1039219	0		|			
ANR	1039396	BitAndExpression	( imm >> 24 ) & 0x7f		1039219	0		&			
ANR	1039397	ShiftExpression	imm >> 24		1039219	0		>>			
ANR	1039398	Identifier	imm		1039219	0					
ANR	1039399	PrimaryExpression	24		1039219	1					
ANR	1039400	PrimaryExpression	0x7f		1039219	1					
ANR	1039401	InclusiveOrExpression	"COPY_BITS ( counter , 4 , 26 , 1 ) | COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1039219	1		|			
ANR	1039402	CallExpression	"COPY_BITS ( counter , 4 , 26 , 1 )"		1039219	0					
ANR	1039403	Callee	COPY_BITS		1039219	0					
ANR	1039404	Identifier	COPY_BITS		1039219	0					
ANR	1039405	ArgumentList	counter		1039219	1					
ANR	1039406	Argument	counter		1039219	0					
ANR	1039407	Identifier	counter		1039219	0					
ANR	1039408	Argument	4		1039219	1					
ANR	1039409	PrimaryExpression	4		1039219	0					
ANR	1039410	Argument	26		1039219	2					
ANR	1039411	PrimaryExpression	26		1039219	0					
ANR	1039412	Argument	1		1039219	3					
ANR	1039413	PrimaryExpression	1		1039219	0					
ANR	1039414	InclusiveOrExpression	"COPY_BITS ( counter , 1 , 12 , 3 ) | COPY_BITS ( counter , 0 , 7 , 1 )"		1039219	1		|			
ANR	1039415	CallExpression	"COPY_BITS ( counter , 1 , 12 , 3 )"		1039219	0					
ANR	1039416	Callee	COPY_BITS		1039219	0					
ANR	1039417	Identifier	COPY_BITS		1039219	0					
ANR	1039418	ArgumentList	counter		1039219	1					
ANR	1039419	Argument	counter		1039219	0					
ANR	1039420	Identifier	counter		1039219	0					
ANR	1039421	Argument	1		1039219	1					
ANR	1039422	PrimaryExpression	1		1039219	0					
ANR	1039423	Argument	12		1039219	2					
ANR	1039424	PrimaryExpression	12		1039219	0					
ANR	1039425	Argument	3		1039219	3					
ANR	1039426	PrimaryExpression	3		1039219	0					
ANR	1039427	CallExpression	"COPY_BITS ( counter , 0 , 7 , 1 )"		1039219	1					
ANR	1039428	Callee	COPY_BITS		1039219	0					
ANR	1039429	Identifier	COPY_BITS		1039219	0					
ANR	1039430	ArgumentList	counter		1039219	1					
ANR	1039431	Argument	counter		1039219	0					
ANR	1039432	Identifier	counter		1039219	0					
ANR	1039433	Argument	0		1039219	1					
ANR	1039434	PrimaryExpression	0		1039219	0					
ANR	1039435	Argument	7		1039219	2					
ANR	1039436	PrimaryExpression	7		1039219	0					
ANR	1039437	Argument	1		1039219	3					
ANR	1039438	PrimaryExpression	1		1039219	0					
ANR	1039439	ReturnType	static sljit_uw		1039219	1					
ANR	1039440	Identifier	get_imm		1039219	2					
ANR	1039441	ParameterList	sljit_uw imm		1039219	3					
ANR	1039442	Parameter	sljit_uw imm	428:24:13114:13125	1039219	0	True				
ANR	1039443	ParameterType	sljit_uw		1039219	0					
ANR	1039444	Identifier	imm		1039219	1					
ANR	1039445	CFGEntryNode	ENTRY		1039219		True				
ANR	1039446	CFGExitNode	EXIT		1039219		True				
ANR	1039447	Symbol	COPY_BITS		1039219						
ANR	1039448	Symbol	INVALID_IMM		1039219						
ANR	1039449	Symbol	imm		1039219						
ANR	1039450	Symbol	counter		1039219						
ANR	1039451	Function	load_immediate	477:0:14125:14924							
ANR	1039452	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm)"		1039451	0					
ANR	1039453	CompoundStatement		478:0:14217:14924	1039451	0					
ANR	1039454	IdentifierDeclStatement	sljit_uw tmp ;	479:1:14220:14232	1039451	0	True				
ANR	1039455	IdentifierDecl	tmp		1039451	0					
ANR	1039456	IdentifierDeclType	sljit_uw		1039451	0					
ANR	1039457	Identifier	tmp		1039451	1					
ANR	1039458	IfStatement	if ( imm >= 0x10000 )		1039451	1					
ANR	1039459	Condition	imm >= 0x10000	481:5:14240:14253	1039451	0	True				
ANR	1039460	RelationalExpression	imm >= 0x10000		1039451	0		>=			
ANR	1039461	Identifier	imm		1039451	0					
ANR	1039462	PrimaryExpression	0x10000		1039451	1					
ANR	1039463	CompoundStatement		4:21:38:38	1039451	1					
ANR	1039464	ExpressionStatement	tmp = get_imm ( imm )	482:2:14260:14278	1039451	0	True				
ANR	1039465	AssignmentExpression	tmp = get_imm ( imm )		1039451	0		=			
ANR	1039466	Identifier	tmp		1039451	0					
ANR	1039467	CallExpression	get_imm ( imm )		1039451	1					
ANR	1039468	Callee	get_imm		1039451	0					
ANR	1039469	Identifier	get_imm		1039451	0					
ANR	1039470	ArgumentList	imm		1039451	1					
ANR	1039471	Argument	imm		1039451	0					
ANR	1039472	Identifier	imm		1039451	0					
ANR	1039473	IfStatement	if ( tmp != INVALID_IMM )		1039451	1					
ANR	1039474	Condition	tmp != INVALID_IMM	483:6:14286:14303	1039451	0	True				
ANR	1039475	EqualityExpression	tmp != INVALID_IMM		1039451	0		!=			
ANR	1039476	Identifier	tmp		1039451	0					
ANR	1039477	Identifier	INVALID_IMM		1039451	1					
ANR	1039478	ReturnStatement	"return push_inst32 ( compiler , MOV_WI | RD4 ( dst ) | tmp ) ;"	484:3:14309:14362	1039451	1	True				
ANR	1039479	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst ) | tmp )"		1039451	0					
ANR	1039480	Callee	push_inst32		1039451	0					
ANR	1039481	Identifier	push_inst32		1039451	0					
ANR	1039482	ArgumentList	compiler		1039451	1					
ANR	1039483	Argument	compiler		1039451	0					
ANR	1039484	Identifier	compiler		1039451	0					
ANR	1039485	Argument	MOV_WI | RD4 ( dst ) | tmp		1039451	1					
ANR	1039486	InclusiveOrExpression	MOV_WI | RD4 ( dst ) | tmp		1039451	0		|			
ANR	1039487	Identifier	MOV_WI		1039451	0					
ANR	1039488	InclusiveOrExpression	RD4 ( dst ) | tmp		1039451	1		|			
ANR	1039489	CallExpression	RD4 ( dst )		1039451	0					
ANR	1039490	Callee	RD4		1039451	0					
ANR	1039491	Identifier	RD4		1039451	0					
ANR	1039492	ArgumentList	dst		1039451	1					
ANR	1039493	Argument	dst		1039451	0					
ANR	1039494	Identifier	dst		1039451	0					
ANR	1039495	Identifier	tmp		1039451	1					
ANR	1039496	ExpressionStatement	tmp = get_imm ( ~imm )	485:2:14366:14385	1039451	2	True				
ANR	1039497	AssignmentExpression	tmp = get_imm ( ~imm )		1039451	0		=			
ANR	1039498	Identifier	tmp		1039451	0					
ANR	1039499	CallExpression	get_imm ( ~imm )		1039451	1					
ANR	1039500	Callee	get_imm		1039451	0					
ANR	1039501	Identifier	get_imm		1039451	0					
ANR	1039502	ArgumentList	~imm		1039451	1					
ANR	1039503	Argument	~imm		1039451	0					
ANR	1039504	Identifier	~imm		1039451	0					
ANR	1039505	IfStatement	if ( tmp != INVALID_IMM )		1039451	3					
ANR	1039506	Condition	tmp != INVALID_IMM	486:6:14393:14410	1039451	0	True				
ANR	1039507	EqualityExpression	tmp != INVALID_IMM		1039451	0		!=			
ANR	1039508	Identifier	tmp		1039451	0					
ANR	1039509	Identifier	INVALID_IMM		1039451	1					
ANR	1039510	ReturnStatement	"return push_inst32 ( compiler , MVN_WI | RD4 ( dst ) | tmp ) ;"	487:3:14416:14469	1039451	1	True				
ANR	1039511	CallExpression	"push_inst32 ( compiler , MVN_WI | RD4 ( dst ) | tmp )"		1039451	0					
ANR	1039512	Callee	push_inst32		1039451	0					
ANR	1039513	Identifier	push_inst32		1039451	0					
ANR	1039514	ArgumentList	compiler		1039451	1					
ANR	1039515	Argument	compiler		1039451	0					
ANR	1039516	Identifier	compiler		1039451	0					
ANR	1039517	Argument	MVN_WI | RD4 ( dst ) | tmp		1039451	1					
ANR	1039518	InclusiveOrExpression	MVN_WI | RD4 ( dst ) | tmp		1039451	0		|			
ANR	1039519	Identifier	MVN_WI		1039451	0					
ANR	1039520	InclusiveOrExpression	RD4 ( dst ) | tmp		1039451	1		|			
ANR	1039521	CallExpression	RD4 ( dst )		1039451	0					
ANR	1039522	Callee	RD4		1039451	0					
ANR	1039523	Identifier	RD4		1039451	0					
ANR	1039524	ArgumentList	dst		1039451	1					
ANR	1039525	Argument	dst		1039451	0					
ANR	1039526	Identifier	dst		1039451	0					
ANR	1039527	Identifier	tmp		1039451	1					
ANR	1039528	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"	491:1:14521:14668	1039451	2	True				
ANR	1039529	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) ) )"		1039451	0					
ANR	1039530	Callee	FAIL_IF		1039451	0					
ANR	1039531	Identifier	FAIL_IF		1039451	0					
ANR	1039532	ArgumentList	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1039451	1					
ANR	1039533	Argument	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1039451	0					
ANR	1039534	CallExpression	"push_inst32 ( compiler , MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff ) )"		1039451	0					
ANR	1039535	Callee	push_inst32		1039451	0					
ANR	1039536	Identifier	push_inst32		1039451	0					
ANR	1039537	ArgumentList	compiler		1039451	1					
ANR	1039538	Argument	compiler		1039451	0					
ANR	1039539	Identifier	compiler		1039451	0					
ANR	1039540	Argument	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	1					
ANR	1039541	InclusiveOrExpression	"MOVW | RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	0		|			
ANR	1039542	Identifier	MOVW		1039451	0					
ANR	1039543	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	1		|			
ANR	1039544	CallExpression	RD4 ( dst )		1039451	0					
ANR	1039545	Callee	RD4		1039451	0					
ANR	1039546	Identifier	RD4		1039451	0					
ANR	1039547	ArgumentList	dst		1039451	1					
ANR	1039548	Argument	dst		1039451	0					
ANR	1039549	Identifier	dst		1039451	0					
ANR	1039550	InclusiveOrExpression	"COPY_BITS ( imm , 12 , 16 , 4 ) | COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	1		|			
ANR	1039551	CallExpression	"COPY_BITS ( imm , 12 , 16 , 4 )"		1039451	0					
ANR	1039552	Callee	COPY_BITS		1039451	0					
ANR	1039553	Identifier	COPY_BITS		1039451	0					
ANR	1039554	ArgumentList	imm		1039451	1					
ANR	1039555	Argument	imm		1039451	0					
ANR	1039556	Identifier	imm		1039451	0					
ANR	1039557	Argument	12		1039451	1					
ANR	1039558	PrimaryExpression	12		1039451	0					
ANR	1039559	Argument	16		1039451	2					
ANR	1039560	PrimaryExpression	16		1039451	0					
ANR	1039561	Argument	4		1039451	3					
ANR	1039562	PrimaryExpression	4		1039451	0					
ANR	1039563	InclusiveOrExpression	"COPY_BITS ( imm , 11 , 26 , 1 ) | COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	1		|			
ANR	1039564	CallExpression	"COPY_BITS ( imm , 11 , 26 , 1 )"		1039451	0					
ANR	1039565	Callee	COPY_BITS		1039451	0					
ANR	1039566	Identifier	COPY_BITS		1039451	0					
ANR	1039567	ArgumentList	imm		1039451	1					
ANR	1039568	Argument	imm		1039451	0					
ANR	1039569	Identifier	imm		1039451	0					
ANR	1039570	Argument	11		1039451	1					
ANR	1039571	PrimaryExpression	11		1039451	0					
ANR	1039572	Argument	26		1039451	2					
ANR	1039573	PrimaryExpression	26		1039451	0					
ANR	1039574	Argument	1		1039451	3					
ANR	1039575	PrimaryExpression	1		1039451	0					
ANR	1039576	InclusiveOrExpression	"COPY_BITS ( imm , 8 , 12 , 3 ) | ( imm & 0xff )"		1039451	1		|			
ANR	1039577	CallExpression	"COPY_BITS ( imm , 8 , 12 , 3 )"		1039451	0					
ANR	1039578	Callee	COPY_BITS		1039451	0					
ANR	1039579	Identifier	COPY_BITS		1039451	0					
ANR	1039580	ArgumentList	imm		1039451	1					
ANR	1039581	Argument	imm		1039451	0					
ANR	1039582	Identifier	imm		1039451	0					
ANR	1039583	Argument	8		1039451	1					
ANR	1039584	PrimaryExpression	8		1039451	0					
ANR	1039585	Argument	12		1039451	2					
ANR	1039586	PrimaryExpression	12		1039451	0					
ANR	1039587	Argument	3		1039451	3					
ANR	1039588	PrimaryExpression	3		1039451	0					
ANR	1039589	BitAndExpression	imm & 0xff		1039451	1		&			
ANR	1039590	Identifier	imm		1039451	0					
ANR	1039591	PrimaryExpression	0xff		1039451	1					
ANR	1039592	IfStatement	if ( imm >= 0x10000 )		1039451	3					
ANR	1039593	Condition	imm >= 0x10000	495:5:14708:14721	1039451	0	True				
ANR	1039594	RelationalExpression	imm >= 0x10000		1039451	0		>=			
ANR	1039595	Identifier	imm		1039451	0					
ANR	1039596	PrimaryExpression	0x10000		1039451	1					
ANR	1039597	ReturnStatement	"return push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) ) ;"	496:2:14726:14899	1039451	1	True				
ANR	1039598	CallExpression	"push_inst32 ( compiler , MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 ) )"		1039451	0					
ANR	1039599	Callee	push_inst32		1039451	0					
ANR	1039600	Identifier	push_inst32		1039451	0					
ANR	1039601	ArgumentList	compiler		1039451	1					
ANR	1039602	Argument	compiler		1039451	0					
ANR	1039603	Identifier	compiler		1039451	0					
ANR	1039604	Argument	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	1					
ANR	1039605	InclusiveOrExpression	"MOVT | RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	0		|			
ANR	1039606	Identifier	MOVT		1039451	0					
ANR	1039607	InclusiveOrExpression	"RD4 ( dst ) | COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	1		|			
ANR	1039608	CallExpression	RD4 ( dst )		1039451	0					
ANR	1039609	Callee	RD4		1039451	0					
ANR	1039610	Identifier	RD4		1039451	0					
ANR	1039611	ArgumentList	dst		1039451	1					
ANR	1039612	Argument	dst		1039451	0					
ANR	1039613	Identifier	dst		1039451	0					
ANR	1039614	InclusiveOrExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 ) | COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	1		|			
ANR	1039615	CallExpression	"COPY_BITS ( imm , 12 + 16 , 16 , 4 )"		1039451	0					
ANR	1039616	Callee	COPY_BITS		1039451	0					
ANR	1039617	Identifier	COPY_BITS		1039451	0					
ANR	1039618	ArgumentList	imm		1039451	1					
ANR	1039619	Argument	imm		1039451	0					
ANR	1039620	Identifier	imm		1039451	0					
ANR	1039621	Argument	12 + 16		1039451	1					
ANR	1039622	AdditiveExpression	12 + 16		1039451	0		+			
ANR	1039623	PrimaryExpression	12		1039451	0					
ANR	1039624	PrimaryExpression	16		1039451	1					
ANR	1039625	Argument	16		1039451	2					
ANR	1039626	PrimaryExpression	16		1039451	0					
ANR	1039627	Argument	4		1039451	3					
ANR	1039628	PrimaryExpression	4		1039451	0					
ANR	1039629	InclusiveOrExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 ) | COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	1		|			
ANR	1039630	CallExpression	"COPY_BITS ( imm , 11 + 16 , 26 , 1 )"		1039451	0					
ANR	1039631	Callee	COPY_BITS		1039451	0					
ANR	1039632	Identifier	COPY_BITS		1039451	0					
ANR	1039633	ArgumentList	imm		1039451	1					
ANR	1039634	Argument	imm		1039451	0					
ANR	1039635	Identifier	imm		1039451	0					
ANR	1039636	Argument	11 + 16		1039451	1					
ANR	1039637	AdditiveExpression	11 + 16		1039451	0		+			
ANR	1039638	PrimaryExpression	11		1039451	0					
ANR	1039639	PrimaryExpression	16		1039451	1					
ANR	1039640	Argument	26		1039451	2					
ANR	1039641	PrimaryExpression	26		1039451	0					
ANR	1039642	Argument	1		1039451	3					
ANR	1039643	PrimaryExpression	1		1039451	0					
ANR	1039644	InclusiveOrExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 ) | ( ( imm & 0xff0000 ) >> 16 )"		1039451	1		|			
ANR	1039645	CallExpression	"COPY_BITS ( imm , 8 + 16 , 12 , 3 )"		1039451	0					
ANR	1039646	Callee	COPY_BITS		1039451	0					
ANR	1039647	Identifier	COPY_BITS		1039451	0					
ANR	1039648	ArgumentList	imm		1039451	1					
ANR	1039649	Argument	imm		1039451	0					
ANR	1039650	Identifier	imm		1039451	0					
ANR	1039651	Argument	8 + 16		1039451	1					
ANR	1039652	AdditiveExpression	8 + 16		1039451	0		+			
ANR	1039653	PrimaryExpression	8		1039451	0					
ANR	1039654	PrimaryExpression	16		1039451	1					
ANR	1039655	Argument	12		1039451	2					
ANR	1039656	PrimaryExpression	12		1039451	0					
ANR	1039657	Argument	3		1039451	3					
ANR	1039658	PrimaryExpression	3		1039451	0					
ANR	1039659	ShiftExpression	( imm & 0xff0000 ) >> 16		1039451	1		>>			
ANR	1039660	BitAndExpression	imm & 0xff0000		1039451	0		&			
ANR	1039661	Identifier	imm		1039451	0					
ANR	1039662	PrimaryExpression	0xff0000		1039451	1					
ANR	1039663	PrimaryExpression	16		1039451	1					
ANR	1039664	ReturnStatement	return SLJIT_SUCCESS ;	498:1:14902:14922	1039451	4	True				
ANR	1039665	Identifier	SLJIT_SUCCESS		1039451	0					
ANR	1039666	ReturnType	static sljit_si		1039451	1					
ANR	1039667	Identifier	load_immediate		1039451	2					
ANR	1039668	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_uw imm"		1039451	3					
ANR	1039669	Parameter	struct sljit_compiler * compiler	477:31:14156:14186	1039451	0	True				
ANR	1039670	ParameterType	struct sljit_compiler *		1039451	0					
ANR	1039671	Identifier	compiler		1039451	1					
ANR	1039672	Parameter	sljit_si dst	477:64:14189:14200	1039451	1	True				
ANR	1039673	ParameterType	sljit_si		1039451	0					
ANR	1039674	Identifier	dst		1039451	1					
ANR	1039675	Parameter	sljit_uw imm	477:78:14203:14214	1039451	2	True				
ANR	1039676	ParameterType	sljit_uw		1039451	0					
ANR	1039677	Identifier	imm		1039451	1					
ANR	1039678	CFGEntryNode	ENTRY		1039451		True				
ANR	1039679	CFGExitNode	EXIT		1039451		True				
ANR	1039680	Symbol	COPY_BITS		1039451						
ANR	1039681	Symbol	RD4		1039451						
ANR	1039682	Symbol	dst		1039451						
ANR	1039683	Symbol	MOVT		1039451						
ANR	1039684	Symbol	MOVW		1039451						
ANR	1039685	Symbol	imm		1039451						
ANR	1039686	Symbol	MVN_WI		1039451						
ANR	1039687	Symbol	get_imm		1039451						
ANR	1039688	Symbol	SLJIT_SUCCESS		1039451						
ANR	1039689	Symbol	~imm		1039451						
ANR	1039690	Symbol	tmp		1039451						
ANR	1039691	Symbol	INVALID_IMM		1039451						
ANR	1039692	Symbol	MOV_WI		1039451						
ANR	1039693	Symbol	compiler		1039451						
ANR	1039694	Symbol	push_inst32		1039451						
ANR	1039695	Function	emit_op_imm	511:0:15253:26343							
ANR	1039696	FunctionDef	"emit_op_imm (struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_uw arg1 , sljit_uw arg2)"		1039695	0					
ANR	1039697	CompoundStatement		512:0:15374:26343	1039695	0					
ANR	1039698	IdentifierDeclStatement	sljit_si reg ;	516:1:15497:15509	1039695	0	True				
ANR	1039699	IdentifierDecl	reg		1039695	0					
ANR	1039700	IdentifierDeclType	sljit_si		1039695	0					
ANR	1039701	Identifier	reg		1039695	1					
ANR	1039702	IdentifierDeclStatement	"sljit_uw imm , nimm ;"	517:1:15512:15530	1039695	1	True				
ANR	1039703	IdentifierDecl	imm		1039695	0					
ANR	1039704	IdentifierDeclType	sljit_uw		1039695	0					
ANR	1039705	Identifier	imm		1039695	1					
ANR	1039706	IdentifierDecl	nimm		1039695	1					
ANR	1039707	IdentifierDeclType	sljit_uw		1039695	0					
ANR	1039708	Identifier	nimm		1039695	1					
ANR	1039709	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) ) )		1039695	2					
ANR	1039710	Condition	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )	519:5:15538:15609	1039695	0	True				
ANR	1039711	CallExpression	SLJIT_UNLIKELY ( ( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM ) )		1039695	0					
ANR	1039712	Callee	SLJIT_UNLIKELY		1039695	0					
ANR	1039713	Identifier	SLJIT_UNLIKELY		1039695	0					
ANR	1039714	ArgumentList	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1039695	1					
ANR	1039715	Argument	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1039695	0					
ANR	1039716	EqualityExpression	( flags & ( ARG1_IMM | ARG2_IMM ) ) == ( ARG1_IMM | ARG2_IMM )		1039695	0		==			
ANR	1039717	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1039695	0		&			
ANR	1039718	Identifier	flags		1039695	0					
ANR	1039719	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1039695	1		|			
ANR	1039720	Identifier	ARG1_IMM		1039695	0					
ANR	1039721	Identifier	ARG2_IMM		1039695	1					
ANR	1039722	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1039695	1		|			
ANR	1039723	Identifier	ARG1_IMM		1039695	0					
ANR	1039724	Identifier	ARG2_IMM		1039695	1					
ANR	1039725	CompoundStatement		8:79:237:237	1039695	1					
ANR	1039726	ExpressionStatement	flags &= ~ARG1_IMM	521:2:15645:15663	1039695	0	True				
ANR	1039727	AssignmentExpression	flags &= ~ARG1_IMM		1039695	0		&=			
ANR	1039728	Identifier	flags		1039695	0					
ANR	1039729	Identifier	~ARG1_IMM		1039695	1					
ANR	1039730	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	522:2:15667:15716	1039695	1	True				
ANR	1039731	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1039695	0					
ANR	1039732	Callee	FAIL_IF		1039695	0					
ANR	1039733	Identifier	FAIL_IF		1039695	0					
ANR	1039734	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	1					
ANR	1039735	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	0					
ANR	1039736	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	0					
ANR	1039737	Callee	load_immediate		1039695	0					
ANR	1039738	Identifier	load_immediate		1039695	0					
ANR	1039739	ArgumentList	compiler		1039695	1					
ANR	1039740	Argument	compiler		1039695	0					
ANR	1039741	Identifier	compiler		1039695	0					
ANR	1039742	Argument	TMP_REG1		1039695	1					
ANR	1039743	Identifier	TMP_REG1		1039695	0					
ANR	1039744	Argument	arg1		1039695	2					
ANR	1039745	Identifier	arg1		1039695	0					
ANR	1039746	ExpressionStatement	arg1 = TMP_REG1	523:2:15720:15735	1039695	2	True				
ANR	1039747	AssignmentExpression	arg1 = TMP_REG1		1039695	0		=			
ANR	1039748	Identifier	arg1		1039695	0					
ANR	1039749	Identifier	TMP_REG1		1039695	1					
ANR	1039750	IfStatement	if ( flags & ( ARG1_IMM | ARG2_IMM ) )		1039695	3					
ANR	1039751	Condition	flags & ( ARG1_IMM | ARG2_IMM )	526:5:15746:15774	1039695	0	True				
ANR	1039752	BitAndExpression	flags & ( ARG1_IMM | ARG2_IMM )		1039695	0		&			
ANR	1039753	Identifier	flags		1039695	0					
ANR	1039754	InclusiveOrExpression	ARG1_IMM | ARG2_IMM		1039695	1		|			
ANR	1039755	Identifier	ARG1_IMM		1039695	0					
ANR	1039756	Identifier	ARG2_IMM		1039695	1					
ANR	1039757	CompoundStatement		15:36:402:402	1039695	1					
ANR	1039758	ExpressionStatement	reg = ( flags & ARG2_IMM ) ? arg1 : arg2	527:2:15781:15819	1039695	0	True				
ANR	1039759	AssignmentExpression	reg = ( flags & ARG2_IMM ) ? arg1 : arg2		1039695	0		=			
ANR	1039760	Identifier	reg		1039695	0					
ANR	1039761	ConditionalExpression	( flags & ARG2_IMM ) ? arg1 : arg2		1039695	1					
ANR	1039762	Condition	flags & ARG2_IMM		1039695	0					
ANR	1039763	BitAndExpression	flags & ARG2_IMM		1039695	0		&			
ANR	1039764	Identifier	flags		1039695	0					
ANR	1039765	Identifier	ARG2_IMM		1039695	1					
ANR	1039766	Identifier	arg1		1039695	1					
ANR	1039767	Identifier	arg2		1039695	2					
ANR	1039768	ExpressionStatement	imm = ( flags & ARG2_IMM ) ? arg2 : arg1	528:2:15823:15861	1039695	1	True				
ANR	1039769	AssignmentExpression	imm = ( flags & ARG2_IMM ) ? arg2 : arg1		1039695	0		=			
ANR	1039770	Identifier	imm		1039695	0					
ANR	1039771	ConditionalExpression	( flags & ARG2_IMM ) ? arg2 : arg1		1039695	1					
ANR	1039772	Condition	flags & ARG2_IMM		1039695	0					
ANR	1039773	BitAndExpression	flags & ARG2_IMM		1039695	0		&			
ANR	1039774	Identifier	flags		1039695	0					
ANR	1039775	Identifier	ARG2_IMM		1039695	1					
ANR	1039776	Identifier	arg2		1039695	1					
ANR	1039777	Identifier	arg1		1039695	2					
ANR	1039778	SwitchStatement	switch ( flags & 0xffff )		1039695	2					
ANR	1039779	Condition	flags & 0xffff	530:10:15874:15887	1039695	0	True				
ANR	1039780	BitAndExpression	flags & 0xffff		1039695	0		&			
ANR	1039781	Identifier	flags		1039695	0					
ANR	1039782	PrimaryExpression	0xffff		1039695	1					
ANR	1039783	CompoundStatement		19:26:515:515	1039695	1					
ANR	1039784	Label	case SLJIT_CLZ :	531:2:15894:15908	1039695	0	True				
ANR	1039785	Identifier	SLJIT_CLZ		1039695	0					
ANR	1039786	Label	case SLJIT_MUL :	532:2:15912:15926	1039695	1	True				
ANR	1039787	Identifier	SLJIT_MUL		1039695	0					
ANR	1039788	BreakStatement	break ;	534:3:15972:15977	1039695	2	True				
ANR	1039789	Label	case SLJIT_MOV :	535:2:15981:15995	1039695	3	True				
ANR	1039790	Identifier	SLJIT_MOV		1039695	0					
ANR	1039791	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )	536:3:16000:16076	1039695	4	True				
ANR	1039792	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1039793	Callee	SLJIT_ASSERT		1039695	0					
ANR	1039794	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1039795	ArgumentList	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1039695	1					
ANR	1039796	Argument	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1039695	0					
ANR	1039797	AndExpression	! ( flags & SET_FLAGS ) && ( flags & ARG2_IMM ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1039798	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1039799	UnaryOperator	!		1039695	0					
ANR	1039800	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1039801	Identifier	flags		1039695	0					
ANR	1039802	Identifier	SET_FLAGS		1039695	1					
ANR	1039803	AndExpression	( flags & ARG2_IMM ) && arg1 == TMP_REG1		1039695	1		&&			
ANR	1039804	BitAndExpression	flags & ARG2_IMM		1039695	0		&			
ANR	1039805	Identifier	flags		1039695	0					
ANR	1039806	Identifier	ARG2_IMM		1039695	1					
ANR	1039807	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1039808	Identifier	arg1		1039695	0					
ANR	1039809	Identifier	TMP_REG1		1039695	1					
ANR	1039810	ReturnStatement	"return load_immediate ( compiler , dst , imm ) ;"	537:3:16081:16122	1039695	5	True				
ANR	1039811	CallExpression	"load_immediate ( compiler , dst , imm )"		1039695	0					
ANR	1039812	Callee	load_immediate		1039695	0					
ANR	1039813	Identifier	load_immediate		1039695	0					
ANR	1039814	ArgumentList	compiler		1039695	1					
ANR	1039815	Argument	compiler		1039695	0					
ANR	1039816	Identifier	compiler		1039695	0					
ANR	1039817	Argument	dst		1039695	1					
ANR	1039818	Identifier	dst		1039695	0					
ANR	1039819	Argument	imm		1039695	2					
ANR	1039820	Identifier	imm		1039695	0					
ANR	1039821	Label	case SLJIT_NOT :	538:2:16126:16140	1039695	6	True				
ANR	1039822	Identifier	SLJIT_NOT		1039695	0					
ANR	1039823	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1039695	7					
ANR	1039824	Condition	! ( flags & SET_FLAGS )	539:7:16149:16168	1039695	0	True				
ANR	1039825	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1039826	UnaryOperator	!		1039695	0					
ANR	1039827	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1039828	Identifier	flags		1039695	0					
ANR	1039829	Identifier	SET_FLAGS		1039695	1					
ANR	1039830	ReturnStatement	"return load_immediate ( compiler , dst , ~imm ) ;"	540:4:16175:16217	1039695	1	True				
ANR	1039831	CallExpression	"load_immediate ( compiler , dst , ~imm )"		1039695	0					
ANR	1039832	Callee	load_immediate		1039695	0					
ANR	1039833	Identifier	load_immediate		1039695	0					
ANR	1039834	ArgumentList	compiler		1039695	1					
ANR	1039835	Argument	compiler		1039695	0					
ANR	1039836	Identifier	compiler		1039695	0					
ANR	1039837	Argument	dst		1039695	1					
ANR	1039838	Identifier	dst		1039695	0					
ANR	1039839	Argument	~imm		1039695	2					
ANR	1039840	Identifier	~imm		1039695	0					
ANR	1039841	BreakStatement	break ;	543:3:16393:16398	1039695	8	True				
ANR	1039842	Label	case SLJIT_ADD :	544:2:16402:16416	1039695	9	True				
ANR	1039843	Identifier	SLJIT_ADD		1039695	0					
ANR	1039844	ExpressionStatement	nimm = - imm	545:3:16421:16432	1039695	10	True				
ANR	1039845	AssignmentExpression	nimm = - imm		1039695	0		=			
ANR	1039846	Identifier	nimm		1039695	0					
ANR	1039847	UnaryOperationExpression	- imm		1039695	1					
ANR	1039848	UnaryOperator	-		1039695	0					
ANR	1039849	Identifier	imm		1039695	1					
ANR	1039850	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst ) )"		1039695	11					
ANR	1039851	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"	546:7:16441:16487	1039695	0	True				
ANR	1039852	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"		1039695	0		&&			
ANR	1039853	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1039854	UnaryOperator	!		1039695	0					
ANR	1039855	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1039856	Identifier	flags		1039695	0					
ANR	1039857	Identifier	KEEP_FLAGS		1039695	1					
ANR	1039858	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1039695	1					
ANR	1039859	Callee	IS_2_LO_REGS		1039695	0					
ANR	1039860	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1039861	ArgumentList	reg		1039695	1					
ANR	1039862	Argument	reg		1039695	0					
ANR	1039863	Identifier	reg		1039695	0					
ANR	1039864	Argument	dst		1039695	1					
ANR	1039865	Identifier	dst		1039695	0					
ANR	1039866	CompoundStatement		35:56:1115:1115	1039695	1					
ANR	1039867	IfStatement	if ( imm <= 0x7 )		1039695	0					
ANR	1039868	Condition	imm <= 0x7	547:8:16500:16509	1039695	0	True				
ANR	1039869	RelationalExpression	imm <= 0x7		1039695	0		<=			
ANR	1039870	Identifier	imm		1039695	0					
ANR	1039871	PrimaryExpression	0x7		1039695	1					
ANR	1039872	ReturnStatement	"return push_inst16 ( compiler , ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	548:5:16517:16587	1039695	1	True				
ANR	1039873	CallExpression	"push_inst16 ( compiler , ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1039874	Callee	push_inst16		1039695	0					
ANR	1039875	Identifier	push_inst16		1039695	0					
ANR	1039876	ArgumentList	compiler		1039695	1					
ANR	1039877	Argument	compiler		1039695	0					
ANR	1039878	Identifier	compiler		1039695	0					
ANR	1039879	Argument	ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1039880	InclusiveOrExpression	ADDSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1039881	Identifier	ADDSI3		1039695	0					
ANR	1039882	InclusiveOrExpression	IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1039883	CallExpression	IMM3 ( imm )		1039695	0					
ANR	1039884	Callee	IMM3		1039695	0					
ANR	1039885	Identifier	IMM3		1039695	0					
ANR	1039886	ArgumentList	imm		1039695	1					
ANR	1039887	Argument	imm		1039695	0					
ANR	1039888	Identifier	imm		1039695	0					
ANR	1039889	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1039890	CallExpression	RD3 ( dst )		1039695	0					
ANR	1039891	Callee	RD3		1039695	0					
ANR	1039892	Identifier	RD3		1039695	0					
ANR	1039893	ArgumentList	dst		1039695	1					
ANR	1039894	Argument	dst		1039695	0					
ANR	1039895	Identifier	dst		1039695	0					
ANR	1039896	CallExpression	RN3 ( reg )		1039695	1					
ANR	1039897	Callee	RN3		1039695	0					
ANR	1039898	Identifier	RN3		1039695	0					
ANR	1039899	ArgumentList	reg		1039695	1					
ANR	1039900	Argument	reg		1039695	0					
ANR	1039901	Identifier	reg		1039695	0					
ANR	1039902	IfStatement	if ( nimm <= 0x7 )		1039695	1					
ANR	1039903	Condition	nimm <= 0x7	549:8:16597:16607	1039695	0	True				
ANR	1039904	RelationalExpression	nimm <= 0x7		1039695	0		<=			
ANR	1039905	Identifier	nimm		1039695	0					
ANR	1039906	PrimaryExpression	0x7		1039695	1					
ANR	1039907	ReturnStatement	"return push_inst16 ( compiler , SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	550:5:16615:16686	1039695	1	True				
ANR	1039908	CallExpression	"push_inst16 ( compiler , SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1039909	Callee	push_inst16		1039695	0					
ANR	1039910	Identifier	push_inst16		1039695	0					
ANR	1039911	ArgumentList	compiler		1039695	1					
ANR	1039912	Argument	compiler		1039695	0					
ANR	1039913	Identifier	compiler		1039695	0					
ANR	1039914	Argument	SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1039915	InclusiveOrExpression	SUBSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1039916	Identifier	SUBSI3		1039695	0					
ANR	1039917	InclusiveOrExpression	IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1039918	CallExpression	IMM3 ( nimm )		1039695	0					
ANR	1039919	Callee	IMM3		1039695	0					
ANR	1039920	Identifier	IMM3		1039695	0					
ANR	1039921	ArgumentList	nimm		1039695	1					
ANR	1039922	Argument	nimm		1039695	0					
ANR	1039923	Identifier	nimm		1039695	0					
ANR	1039924	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1039925	CallExpression	RD3 ( dst )		1039695	0					
ANR	1039926	Callee	RD3		1039695	0					
ANR	1039927	Identifier	RD3		1039695	0					
ANR	1039928	ArgumentList	dst		1039695	1					
ANR	1039929	Argument	dst		1039695	0					
ANR	1039930	Identifier	dst		1039695	0					
ANR	1039931	CallExpression	RN3 ( reg )		1039695	1					
ANR	1039932	Callee	RN3		1039695	0					
ANR	1039933	Identifier	RN3		1039695	0					
ANR	1039934	ArgumentList	reg		1039695	1					
ANR	1039935	Argument	reg		1039695	0					
ANR	1039936	Identifier	reg		1039695	0					
ANR	1039937	IfStatement	if ( reg == dst )		1039695	2					
ANR	1039938	Condition	reg == dst	551:8:16696:16705	1039695	0	True				
ANR	1039939	EqualityExpression	reg == dst		1039695	0		==			
ANR	1039940	Identifier	reg		1039695	0					
ANR	1039941	Identifier	dst		1039695	1					
ANR	1039942	CompoundStatement		40:20:1333:1333	1039695	1					
ANR	1039943	IfStatement	if ( imm <= 0xff )		1039695	0					
ANR	1039944	Condition	imm <= 0xff	552:9:16719:16729	1039695	0	True				
ANR	1039945	RelationalExpression	imm <= 0xff		1039695	0		<=			
ANR	1039946	Identifier	imm		1039695	0					
ANR	1039947	PrimaryExpression	0xff		1039695	1					
ANR	1039948	ReturnStatement	"return push_inst16 ( compiler , ADDSI8 | IMM8 ( imm ) | RDN3 ( dst ) ) ;"	553:6:16738:16798	1039695	1	True				
ANR	1039949	CallExpression	"push_inst16 ( compiler , ADDSI8 | IMM8 ( imm ) | RDN3 ( dst ) )"		1039695	0					
ANR	1039950	Callee	push_inst16		1039695	0					
ANR	1039951	Identifier	push_inst16		1039695	0					
ANR	1039952	ArgumentList	compiler		1039695	1					
ANR	1039953	Argument	compiler		1039695	0					
ANR	1039954	Identifier	compiler		1039695	0					
ANR	1039955	Argument	ADDSI8 | IMM8 ( imm ) | RDN3 ( dst )		1039695	1					
ANR	1039956	InclusiveOrExpression	ADDSI8 | IMM8 ( imm ) | RDN3 ( dst )		1039695	0		|			
ANR	1039957	Identifier	ADDSI8		1039695	0					
ANR	1039958	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( dst )		1039695	1		|			
ANR	1039959	CallExpression	IMM8 ( imm )		1039695	0					
ANR	1039960	Callee	IMM8		1039695	0					
ANR	1039961	Identifier	IMM8		1039695	0					
ANR	1039962	ArgumentList	imm		1039695	1					
ANR	1039963	Argument	imm		1039695	0					
ANR	1039964	Identifier	imm		1039695	0					
ANR	1039965	CallExpression	RDN3 ( dst )		1039695	1					
ANR	1039966	Callee	RDN3		1039695	0					
ANR	1039967	Identifier	RDN3		1039695	0					
ANR	1039968	ArgumentList	dst		1039695	1					
ANR	1039969	Argument	dst		1039695	0					
ANR	1039970	Identifier	dst		1039695	0					
ANR	1039971	IfStatement	if ( nimm <= 0xff )		1039695	1					
ANR	1039972	Condition	nimm <= 0xff	554:9:16809:16820	1039695	0	True				
ANR	1039973	RelationalExpression	nimm <= 0xff		1039695	0		<=			
ANR	1039974	Identifier	nimm		1039695	0					
ANR	1039975	PrimaryExpression	0xff		1039695	1					
ANR	1039976	ReturnStatement	"return push_inst16 ( compiler , SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst ) ) ;"	555:6:16829:16890	1039695	1	True				
ANR	1039977	CallExpression	"push_inst16 ( compiler , SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst ) )"		1039695	0					
ANR	1039978	Callee	push_inst16		1039695	0					
ANR	1039979	Identifier	push_inst16		1039695	0					
ANR	1039980	ArgumentList	compiler		1039695	1					
ANR	1039981	Argument	compiler		1039695	0					
ANR	1039982	Identifier	compiler		1039695	0					
ANR	1039983	Argument	SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1039695	1					
ANR	1039984	InclusiveOrExpression	SUBSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1039695	0		|			
ANR	1039985	Identifier	SUBSI8		1039695	0					
ANR	1039986	InclusiveOrExpression	IMM8 ( nimm ) | RDN3 ( dst )		1039695	1		|			
ANR	1039987	CallExpression	IMM8 ( nimm )		1039695	0					
ANR	1039988	Callee	IMM8		1039695	0					
ANR	1039989	Identifier	IMM8		1039695	0					
ANR	1039990	ArgumentList	nimm		1039695	1					
ANR	1039991	Argument	nimm		1039695	0					
ANR	1039992	Identifier	nimm		1039695	0					
ANR	1039993	CallExpression	RDN3 ( dst )		1039695	1					
ANR	1039994	Callee	RDN3		1039695	0					
ANR	1039995	Identifier	RDN3		1039695	0					
ANR	1039996	ArgumentList	dst		1039695	1					
ANR	1039997	Argument	dst		1039695	0					
ANR	1039998	Identifier	dst		1039695	0					
ANR	1039999	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1039695	12					
ANR	1040000	Condition	! ( flags & SET_FLAGS )	558:7:16910:16929	1039695	0	True				
ANR	1040001	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1040002	UnaryOperator	!		1039695	0					
ANR	1040003	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1040004	Identifier	flags		1039695	0					
ANR	1040005	Identifier	SET_FLAGS		1039695	1					
ANR	1040006	CompoundStatement		47:29:1557:1557	1039695	1					
ANR	1040007	IfStatement	if ( imm <= 0xfff )		1039695	0					
ANR	1040008	Condition	imm <= 0xfff	559:8:16942:16953	1039695	0	True				
ANR	1040009	RelationalExpression	imm <= 0xfff		1039695	0		<=			
ANR	1040010	Identifier	imm		1039695	0					
ANR	1040011	PrimaryExpression	0xfff		1039695	1					
ANR	1040012	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) ) ;"	560:5:16961:17031	1039695	1	True				
ANR	1040013	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) )"		1039695	0					
ANR	1040014	Callee	push_inst32		1039695	0					
ANR	1040015	Identifier	push_inst32		1039695	0					
ANR	1040016	ArgumentList	compiler		1039695	1					
ANR	1040017	Argument	compiler		1039695	0					
ANR	1040018	Identifier	compiler		1039695	0					
ANR	1040019	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	1					
ANR	1040020	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	0		|			
ANR	1040021	Identifier	ADDWI		1039695	0					
ANR	1040022	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	1		|			
ANR	1040023	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040024	Callee	RD4		1039695	0					
ANR	1040025	Identifier	RD4		1039695	0					
ANR	1040026	ArgumentList	dst		1039695	1					
ANR	1040027	Argument	dst		1039695	0					
ANR	1040028	Identifier	dst		1039695	0					
ANR	1040029	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( imm )		1039695	1		|			
ANR	1040030	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040031	Callee	RN4		1039695	0					
ANR	1040032	Identifier	RN4		1039695	0					
ANR	1040033	ArgumentList	reg		1039695	1					
ANR	1040034	Argument	reg		1039695	0					
ANR	1040035	Identifier	reg		1039695	0					
ANR	1040036	CallExpression	IMM12 ( imm )		1039695	1					
ANR	1040037	Callee	IMM12		1039695	0					
ANR	1040038	Identifier	IMM12		1039695	0					
ANR	1040039	ArgumentList	imm		1039695	1					
ANR	1040040	Argument	imm		1039695	0					
ANR	1040041	Identifier	imm		1039695	0					
ANR	1040042	IfStatement	if ( nimm <= 0xfff )		1039695	1					
ANR	1040043	Condition	nimm <= 0xfff	561:8:17041:17053	1039695	0	True				
ANR	1040044	RelationalExpression	nimm <= 0xfff		1039695	0		<=			
ANR	1040045	Identifier	nimm		1039695	0					
ANR	1040046	PrimaryExpression	0xfff		1039695	1					
ANR	1040047	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) ) ;"	562:5:17061:17132	1039695	1	True				
ANR	1040048	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) )"		1039695	0					
ANR	1040049	Callee	push_inst32		1039695	0					
ANR	1040050	Identifier	push_inst32		1039695	0					
ANR	1040051	ArgumentList	compiler		1039695	1					
ANR	1040052	Argument	compiler		1039695	0					
ANR	1040053	Identifier	compiler		1039695	0					
ANR	1040054	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	1					
ANR	1040055	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	0		|			
ANR	1040056	Identifier	SUBWI		1039695	0					
ANR	1040057	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	1		|			
ANR	1040058	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040059	Callee	RD4		1039695	0					
ANR	1040060	Identifier	RD4		1039695	0					
ANR	1040061	ArgumentList	dst		1039695	1					
ANR	1040062	Argument	dst		1039695	0					
ANR	1040063	Identifier	dst		1039695	0					
ANR	1040064	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( nimm )		1039695	1		|			
ANR	1040065	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040066	Callee	RN4		1039695	0					
ANR	1040067	Identifier	RN4		1039695	0					
ANR	1040068	ArgumentList	reg		1039695	1					
ANR	1040069	Argument	reg		1039695	0					
ANR	1040070	Identifier	reg		1039695	0					
ANR	1040071	CallExpression	IMM12 ( nimm )		1039695	1					
ANR	1040072	Callee	IMM12		1039695	0					
ANR	1040073	Identifier	IMM12		1039695	0					
ANR	1040074	ArgumentList	nimm		1039695	1					
ANR	1040075	Argument	nimm		1039695	0					
ANR	1040076	Identifier	nimm		1039695	0					
ANR	1040077	ExpressionStatement	imm = get_imm ( imm )	564:3:17142:17160	1039695	13	True				
ANR	1040078	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040079	Identifier	imm		1039695	0					
ANR	1040080	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040081	Callee	get_imm		1039695	0					
ANR	1040082	Identifier	get_imm		1039695	0					
ANR	1040083	ArgumentList	imm		1039695	1					
ANR	1040084	Argument	imm		1039695	0					
ANR	1040085	Identifier	imm		1039695	0					
ANR	1040086	IfStatement	if ( imm != INVALID_IMM )		1039695	14					
ANR	1040087	Condition	imm != INVALID_IMM	565:7:17169:17186	1039695	0	True				
ANR	1040088	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040089	Identifier	imm		1039695	0					
ANR	1040090	Identifier	INVALID_IMM		1039695	1					
ANR	1040091	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	566:4:17193:17279	1039695	1	True				
ANR	1040092	CallExpression	"push_inst32 ( compiler , ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040093	Callee	push_inst32		1039695	0					
ANR	1040094	Identifier	push_inst32		1039695	0					
ANR	1040095	ArgumentList	compiler		1039695	1					
ANR	1040096	Argument	compiler		1039695	0					
ANR	1040097	Identifier	compiler		1039695	0					
ANR	1040098	Argument	ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040099	InclusiveOrExpression	ADD_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040100	Identifier	ADD_WI		1039695	0					
ANR	1040101	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040102	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040103	Identifier	flags		1039695	0					
ANR	1040104	Identifier	SET_FLAGS		1039695	1					
ANR	1040105	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040106	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040107	Callee	RD4		1039695	0					
ANR	1040108	Identifier	RD4		1039695	0					
ANR	1040109	ArgumentList	dst		1039695	1					
ANR	1040110	Argument	dst		1039695	0					
ANR	1040111	Identifier	dst		1039695	0					
ANR	1040112	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040113	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040114	Callee	RN4		1039695	0					
ANR	1040115	Identifier	RN4		1039695	0					
ANR	1040116	ArgumentList	reg		1039695	1					
ANR	1040117	Argument	reg		1039695	0					
ANR	1040118	Identifier	reg		1039695	0					
ANR	1040119	Identifier	imm		1039695	1					
ANR	1040120	BreakStatement	break ;	567:3:17284:17289	1039695	15	True				
ANR	1040121	Label	case SLJIT_ADDC :	568:2:17293:17308	1039695	16	True				
ANR	1040122	Identifier	SLJIT_ADDC		1039695	0					
ANR	1040123	ExpressionStatement	imm = get_imm ( imm )	569:3:17313:17331	1039695	17	True				
ANR	1040124	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040125	Identifier	imm		1039695	0					
ANR	1040126	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040127	Callee	get_imm		1039695	0					
ANR	1040128	Identifier	get_imm		1039695	0					
ANR	1040129	ArgumentList	imm		1039695	1					
ANR	1040130	Argument	imm		1039695	0					
ANR	1040131	Identifier	imm		1039695	0					
ANR	1040132	IfStatement	if ( imm != INVALID_IMM )		1039695	18					
ANR	1040133	Condition	imm != INVALID_IMM	570:7:17340:17357	1039695	0	True				
ANR	1040134	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040135	Identifier	imm		1039695	0					
ANR	1040136	Identifier	INVALID_IMM		1039695	1					
ANR	1040137	ReturnStatement	"return push_inst32 ( compiler , ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	571:4:17364:17448	1039695	1	True				
ANR	1040138	CallExpression	"push_inst32 ( compiler , ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040139	Callee	push_inst32		1039695	0					
ANR	1040140	Identifier	push_inst32		1039695	0					
ANR	1040141	ArgumentList	compiler		1039695	1					
ANR	1040142	Argument	compiler		1039695	0					
ANR	1040143	Identifier	compiler		1039695	0					
ANR	1040144	Argument	ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040145	InclusiveOrExpression	ADCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040146	Identifier	ADCI		1039695	0					
ANR	1040147	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040148	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040149	Identifier	flags		1039695	0					
ANR	1040150	Identifier	SET_FLAGS		1039695	1					
ANR	1040151	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040152	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040153	Callee	RD4		1039695	0					
ANR	1040154	Identifier	RD4		1039695	0					
ANR	1040155	ArgumentList	dst		1039695	1					
ANR	1040156	Argument	dst		1039695	0					
ANR	1040157	Identifier	dst		1039695	0					
ANR	1040158	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040159	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040160	Callee	RN4		1039695	0					
ANR	1040161	Identifier	RN4		1039695	0					
ANR	1040162	ArgumentList	reg		1039695	1					
ANR	1040163	Argument	reg		1039695	0					
ANR	1040164	Identifier	reg		1039695	0					
ANR	1040165	Identifier	imm		1039695	1					
ANR	1040166	BreakStatement	break ;	572:3:17453:17458	1039695	19	True				
ANR	1040167	Label	case SLJIT_SUB :	573:2:17462:17476	1039695	20	True				
ANR	1040168	Identifier	SLJIT_SUB		1039695	0					
ANR	1040169	IfStatement	if ( flags & ARG1_IMM )		1039695	21					
ANR	1040170	Condition	flags & ARG1_IMM	574:7:17485:17500	1039695	0	True				
ANR	1040171	BitAndExpression	flags & ARG1_IMM		1039695	0		&			
ANR	1040172	Identifier	flags		1039695	0					
ANR	1040173	Identifier	ARG1_IMM		1039695	1					
ANR	1040174	CompoundStatement		63:25:2128:2128	1039695	1					
ANR	1040175	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst ) )"		1039695	0					
ANR	1040176	Condition	"! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst )"	575:8:17513:17571	1039695	0	True				
ANR	1040177	AndExpression	"! ( flags & KEEP_FLAGS ) && imm == 0 && IS_2_LO_REGS ( reg , dst )"		1039695	0		&&			
ANR	1040178	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1040179	UnaryOperator	!		1039695	0					
ANR	1040180	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1040181	Identifier	flags		1039695	0					
ANR	1040182	Identifier	KEEP_FLAGS		1039695	1					
ANR	1040183	AndExpression	"imm == 0 && IS_2_LO_REGS ( reg , dst )"		1039695	1		&&			
ANR	1040184	EqualityExpression	imm == 0		1039695	0		==			
ANR	1040185	Identifier	imm		1039695	0					
ANR	1040186	PrimaryExpression	0		1039695	1					
ANR	1040187	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1039695	1					
ANR	1040188	Callee	IS_2_LO_REGS		1039695	0					
ANR	1040189	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1040190	ArgumentList	reg		1039695	1					
ANR	1040191	Argument	reg		1039695	0					
ANR	1040192	Identifier	reg		1039695	0					
ANR	1040193	Argument	dst		1039695	1					
ANR	1040194	Identifier	dst		1039695	0					
ANR	1040195	ReturnStatement	"return push_inst16 ( compiler , RSBSI | RD3 ( dst ) | RN3 ( reg ) ) ;"	576:5:17579:17636	1039695	1	True				
ANR	1040196	CallExpression	"push_inst16 ( compiler , RSBSI | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1040197	Callee	push_inst16		1039695	0					
ANR	1040198	Identifier	push_inst16		1039695	0					
ANR	1040199	ArgumentList	compiler		1039695	1					
ANR	1040200	Argument	compiler		1039695	0					
ANR	1040201	Identifier	compiler		1039695	0					
ANR	1040202	Argument	RSBSI | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1040203	InclusiveOrExpression	RSBSI | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1040204	Identifier	RSBSI		1039695	0					
ANR	1040205	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040206	CallExpression	RD3 ( dst )		1039695	0					
ANR	1040207	Callee	RD3		1039695	0					
ANR	1040208	Identifier	RD3		1039695	0					
ANR	1040209	ArgumentList	dst		1039695	1					
ANR	1040210	Argument	dst		1039695	0					
ANR	1040211	Identifier	dst		1039695	0					
ANR	1040212	CallExpression	RN3 ( reg )		1039695	1					
ANR	1040213	Callee	RN3		1039695	0					
ANR	1040214	Identifier	RN3		1039695	0					
ANR	1040215	ArgumentList	reg		1039695	1					
ANR	1040216	Argument	reg		1039695	0					
ANR	1040217	Identifier	reg		1039695	0					
ANR	1040218	ExpressionStatement	imm = get_imm ( imm )	577:4:17642:17660	1039695	1	True				
ANR	1040219	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040220	Identifier	imm		1039695	0					
ANR	1040221	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040222	Callee	get_imm		1039695	0					
ANR	1040223	Identifier	get_imm		1039695	0					
ANR	1040224	ArgumentList	imm		1039695	1					
ANR	1040225	Argument	imm		1039695	0					
ANR	1040226	Identifier	imm		1039695	0					
ANR	1040227	IfStatement	if ( imm != INVALID_IMM )		1039695	2					
ANR	1040228	Condition	imm != INVALID_IMM	578:8:17670:17687	1039695	0	True				
ANR	1040229	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040230	Identifier	imm		1039695	0					
ANR	1040231	Identifier	INVALID_IMM		1039695	1					
ANR	1040232	ReturnStatement	"return push_inst32 ( compiler , RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	579:5:17695:17781	1039695	1	True				
ANR	1040233	CallExpression	"push_inst32 ( compiler , RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040234	Callee	push_inst32		1039695	0					
ANR	1040235	Identifier	push_inst32		1039695	0					
ANR	1040236	ArgumentList	compiler		1039695	1					
ANR	1040237	Argument	compiler		1039695	0					
ANR	1040238	Identifier	compiler		1039695	0					
ANR	1040239	Argument	RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040240	InclusiveOrExpression	RSB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040241	Identifier	RSB_WI		1039695	0					
ANR	1040242	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040243	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040244	Identifier	flags		1039695	0					
ANR	1040245	Identifier	SET_FLAGS		1039695	1					
ANR	1040246	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040247	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040248	Callee	RD4		1039695	0					
ANR	1040249	Identifier	RD4		1039695	0					
ANR	1040250	ArgumentList	dst		1039695	1					
ANR	1040251	Argument	dst		1039695	0					
ANR	1040252	Identifier	dst		1039695	0					
ANR	1040253	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040254	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040255	Callee	RN4		1039695	0					
ANR	1040256	Identifier	RN4		1039695	0					
ANR	1040257	ArgumentList	reg		1039695	1					
ANR	1040258	Argument	reg		1039695	0					
ANR	1040259	Identifier	reg		1039695	0					
ANR	1040260	Identifier	imm		1039695	1					
ANR	1040261	BreakStatement	break ;	580:4:17787:17792	1039695	3	True				
ANR	1040262	ExpressionStatement	nimm = - imm	582:3:17802:17813	1039695	22	True				
ANR	1040263	AssignmentExpression	nimm = - imm		1039695	0		=			
ANR	1040264	Identifier	nimm		1039695	0					
ANR	1040265	UnaryOperationExpression	- imm		1039695	1					
ANR	1040266	UnaryOperator	-		1039695	0					
ANR	1040267	Identifier	imm		1039695	1					
ANR	1040268	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst ) )"		1039695	23					
ANR	1040269	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"	583:7:17822:17868	1039695	0	True				
ANR	1040270	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( reg , dst )"		1039695	0		&&			
ANR	1040271	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1040272	UnaryOperator	!		1039695	0					
ANR	1040273	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1040274	Identifier	flags		1039695	0					
ANR	1040275	Identifier	KEEP_FLAGS		1039695	1					
ANR	1040276	CallExpression	"IS_2_LO_REGS ( reg , dst )"		1039695	1					
ANR	1040277	Callee	IS_2_LO_REGS		1039695	0					
ANR	1040278	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1040279	ArgumentList	reg		1039695	1					
ANR	1040280	Argument	reg		1039695	0					
ANR	1040281	Identifier	reg		1039695	0					
ANR	1040282	Argument	dst		1039695	1					
ANR	1040283	Identifier	dst		1039695	0					
ANR	1040284	CompoundStatement		72:56:2496:2496	1039695	1					
ANR	1040285	IfStatement	if ( imm <= 0x7 )		1039695	0					
ANR	1040286	Condition	imm <= 0x7	584:8:17881:17890	1039695	0	True				
ANR	1040287	RelationalExpression	imm <= 0x7		1039695	0		<=			
ANR	1040288	Identifier	imm		1039695	0					
ANR	1040289	PrimaryExpression	0x7		1039695	1					
ANR	1040290	ReturnStatement	"return push_inst16 ( compiler , SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	585:5:17898:17968	1039695	1	True				
ANR	1040291	CallExpression	"push_inst16 ( compiler , SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1040292	Callee	push_inst16		1039695	0					
ANR	1040293	Identifier	push_inst16		1039695	0					
ANR	1040294	ArgumentList	compiler		1039695	1					
ANR	1040295	Argument	compiler		1039695	0					
ANR	1040296	Identifier	compiler		1039695	0					
ANR	1040297	Argument	SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1040298	InclusiveOrExpression	SUBSI3 | IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1040299	Identifier	SUBSI3		1039695	0					
ANR	1040300	InclusiveOrExpression	IMM3 ( imm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040301	CallExpression	IMM3 ( imm )		1039695	0					
ANR	1040302	Callee	IMM3		1039695	0					
ANR	1040303	Identifier	IMM3		1039695	0					
ANR	1040304	ArgumentList	imm		1039695	1					
ANR	1040305	Argument	imm		1039695	0					
ANR	1040306	Identifier	imm		1039695	0					
ANR	1040307	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040308	CallExpression	RD3 ( dst )		1039695	0					
ANR	1040309	Callee	RD3		1039695	0					
ANR	1040310	Identifier	RD3		1039695	0					
ANR	1040311	ArgumentList	dst		1039695	1					
ANR	1040312	Argument	dst		1039695	0					
ANR	1040313	Identifier	dst		1039695	0					
ANR	1040314	CallExpression	RN3 ( reg )		1039695	1					
ANR	1040315	Callee	RN3		1039695	0					
ANR	1040316	Identifier	RN3		1039695	0					
ANR	1040317	ArgumentList	reg		1039695	1					
ANR	1040318	Argument	reg		1039695	0					
ANR	1040319	Identifier	reg		1039695	0					
ANR	1040320	IfStatement	if ( nimm <= 0x7 )		1039695	1					
ANR	1040321	Condition	nimm <= 0x7	586:8:17978:17988	1039695	0	True				
ANR	1040322	RelationalExpression	nimm <= 0x7		1039695	0		<=			
ANR	1040323	Identifier	nimm		1039695	0					
ANR	1040324	PrimaryExpression	0x7		1039695	1					
ANR	1040325	ReturnStatement	"return push_inst16 ( compiler , ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) ) ;"	587:5:17996:18067	1039695	1	True				
ANR	1040326	CallExpression	"push_inst16 ( compiler , ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1040327	Callee	push_inst16		1039695	0					
ANR	1040328	Identifier	push_inst16		1039695	0					
ANR	1040329	ArgumentList	compiler		1039695	1					
ANR	1040330	Argument	compiler		1039695	0					
ANR	1040331	Identifier	compiler		1039695	0					
ANR	1040332	Argument	ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1040333	InclusiveOrExpression	ADDSI3 | IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1040334	Identifier	ADDSI3		1039695	0					
ANR	1040335	InclusiveOrExpression	IMM3 ( nimm ) | RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040336	CallExpression	IMM3 ( nimm )		1039695	0					
ANR	1040337	Callee	IMM3		1039695	0					
ANR	1040338	Identifier	IMM3		1039695	0					
ANR	1040339	ArgumentList	nimm		1039695	1					
ANR	1040340	Argument	nimm		1039695	0					
ANR	1040341	Identifier	nimm		1039695	0					
ANR	1040342	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040343	CallExpression	RD3 ( dst )		1039695	0					
ANR	1040344	Callee	RD3		1039695	0					
ANR	1040345	Identifier	RD3		1039695	0					
ANR	1040346	ArgumentList	dst		1039695	1					
ANR	1040347	Argument	dst		1039695	0					
ANR	1040348	Identifier	dst		1039695	0					
ANR	1040349	CallExpression	RN3 ( reg )		1039695	1					
ANR	1040350	Callee	RN3		1039695	0					
ANR	1040351	Identifier	RN3		1039695	0					
ANR	1040352	ArgumentList	reg		1039695	1					
ANR	1040353	Argument	reg		1039695	0					
ANR	1040354	Identifier	reg		1039695	0					
ANR	1040355	IfStatement	if ( reg == dst )		1039695	2					
ANR	1040356	Condition	reg == dst	588:8:18077:18086	1039695	0	True				
ANR	1040357	EqualityExpression	reg == dst		1039695	0		==			
ANR	1040358	Identifier	reg		1039695	0					
ANR	1040359	Identifier	dst		1039695	1					
ANR	1040360	CompoundStatement		77:20:2714:2714	1039695	1					
ANR	1040361	IfStatement	if ( imm <= 0xff )		1039695	0					
ANR	1040362	Condition	imm <= 0xff	589:9:18100:18110	1039695	0	True				
ANR	1040363	RelationalExpression	imm <= 0xff		1039695	0		<=			
ANR	1040364	Identifier	imm		1039695	0					
ANR	1040365	PrimaryExpression	0xff		1039695	1					
ANR	1040366	ReturnStatement	"return push_inst16 ( compiler , SUBSI8 | IMM8 ( imm ) | RDN3 ( dst ) ) ;"	590:6:18119:18179	1039695	1	True				
ANR	1040367	CallExpression	"push_inst16 ( compiler , SUBSI8 | IMM8 ( imm ) | RDN3 ( dst ) )"		1039695	0					
ANR	1040368	Callee	push_inst16		1039695	0					
ANR	1040369	Identifier	push_inst16		1039695	0					
ANR	1040370	ArgumentList	compiler		1039695	1					
ANR	1040371	Argument	compiler		1039695	0					
ANR	1040372	Identifier	compiler		1039695	0					
ANR	1040373	Argument	SUBSI8 | IMM8 ( imm ) | RDN3 ( dst )		1039695	1					
ANR	1040374	InclusiveOrExpression	SUBSI8 | IMM8 ( imm ) | RDN3 ( dst )		1039695	0		|			
ANR	1040375	Identifier	SUBSI8		1039695	0					
ANR	1040376	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( dst )		1039695	1		|			
ANR	1040377	CallExpression	IMM8 ( imm )		1039695	0					
ANR	1040378	Callee	IMM8		1039695	0					
ANR	1040379	Identifier	IMM8		1039695	0					
ANR	1040380	ArgumentList	imm		1039695	1					
ANR	1040381	Argument	imm		1039695	0					
ANR	1040382	Identifier	imm		1039695	0					
ANR	1040383	CallExpression	RDN3 ( dst )		1039695	1					
ANR	1040384	Callee	RDN3		1039695	0					
ANR	1040385	Identifier	RDN3		1039695	0					
ANR	1040386	ArgumentList	dst		1039695	1					
ANR	1040387	Argument	dst		1039695	0					
ANR	1040388	Identifier	dst		1039695	0					
ANR	1040389	IfStatement	if ( nimm <= 0xff )		1039695	1					
ANR	1040390	Condition	nimm <= 0xff	591:9:18190:18201	1039695	0	True				
ANR	1040391	RelationalExpression	nimm <= 0xff		1039695	0		<=			
ANR	1040392	Identifier	nimm		1039695	0					
ANR	1040393	PrimaryExpression	0xff		1039695	1					
ANR	1040394	ReturnStatement	"return push_inst16 ( compiler , ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst ) ) ;"	592:6:18210:18271	1039695	1	True				
ANR	1040395	CallExpression	"push_inst16 ( compiler , ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst ) )"		1039695	0					
ANR	1040396	Callee	push_inst16		1039695	0					
ANR	1040397	Identifier	push_inst16		1039695	0					
ANR	1040398	ArgumentList	compiler		1039695	1					
ANR	1040399	Argument	compiler		1039695	0					
ANR	1040400	Identifier	compiler		1039695	0					
ANR	1040401	Argument	ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1039695	1					
ANR	1040402	InclusiveOrExpression	ADDSI8 | IMM8 ( nimm ) | RDN3 ( dst )		1039695	0		|			
ANR	1040403	Identifier	ADDSI8		1039695	0					
ANR	1040404	InclusiveOrExpression	IMM8 ( nimm ) | RDN3 ( dst )		1039695	1		|			
ANR	1040405	CallExpression	IMM8 ( nimm )		1039695	0					
ANR	1040406	Callee	IMM8		1039695	0					
ANR	1040407	Identifier	IMM8		1039695	0					
ANR	1040408	ArgumentList	nimm		1039695	1					
ANR	1040409	Argument	nimm		1039695	0					
ANR	1040410	Identifier	nimm		1039695	0					
ANR	1040411	CallExpression	RDN3 ( dst )		1039695	1					
ANR	1040412	Callee	RDN3		1039695	0					
ANR	1040413	Identifier	RDN3		1039695	0					
ANR	1040414	ArgumentList	dst		1039695	1					
ANR	1040415	Argument	dst		1039695	0					
ANR	1040416	Identifier	dst		1039695	0					
ANR	1040417	IfStatement	if ( imm <= 0xff && ( flags & UNUSED_RETURN ) )		1039695	3					
ANR	1040418	Condition	imm <= 0xff && ( flags & UNUSED_RETURN )	594:8:18287:18324	1039695	0	True				
ANR	1040419	AndExpression	imm <= 0xff && ( flags & UNUSED_RETURN )		1039695	0		&&			
ANR	1040420	RelationalExpression	imm <= 0xff		1039695	0		<=			
ANR	1040421	Identifier	imm		1039695	0					
ANR	1040422	PrimaryExpression	0xff		1039695	1					
ANR	1040423	BitAndExpression	flags & UNUSED_RETURN		1039695	1		&			
ANR	1040424	Identifier	flags		1039695	0					
ANR	1040425	Identifier	UNUSED_RETURN		1039695	1					
ANR	1040426	ReturnStatement	"return push_inst16 ( compiler , CMPI | IMM8 ( imm ) | RDN3 ( reg ) ) ;"	595:5:18332:18390	1039695	1	True				
ANR	1040427	CallExpression	"push_inst16 ( compiler , CMPI | IMM8 ( imm ) | RDN3 ( reg ) )"		1039695	0					
ANR	1040428	Callee	push_inst16		1039695	0					
ANR	1040429	Identifier	push_inst16		1039695	0					
ANR	1040430	ArgumentList	compiler		1039695	1					
ANR	1040431	Argument	compiler		1039695	0					
ANR	1040432	Identifier	compiler		1039695	0					
ANR	1040433	Argument	CMPI | IMM8 ( imm ) | RDN3 ( reg )		1039695	1					
ANR	1040434	InclusiveOrExpression	CMPI | IMM8 ( imm ) | RDN3 ( reg )		1039695	0		|			
ANR	1040435	Identifier	CMPI		1039695	0					
ANR	1040436	InclusiveOrExpression	IMM8 ( imm ) | RDN3 ( reg )		1039695	1		|			
ANR	1040437	CallExpression	IMM8 ( imm )		1039695	0					
ANR	1040438	Callee	IMM8		1039695	0					
ANR	1040439	Identifier	IMM8		1039695	0					
ANR	1040440	ArgumentList	imm		1039695	1					
ANR	1040441	Argument	imm		1039695	0					
ANR	1040442	Identifier	imm		1039695	0					
ANR	1040443	CallExpression	RDN3 ( reg )		1039695	1					
ANR	1040444	Callee	RDN3		1039695	0					
ANR	1040445	Identifier	RDN3		1039695	0					
ANR	1040446	ArgumentList	reg		1039695	1					
ANR	1040447	Argument	reg		1039695	0					
ANR	1040448	Identifier	reg		1039695	0					
ANR	1040449	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1039695	24					
ANR	1040450	Condition	! ( flags & SET_FLAGS )	597:7:18404:18423	1039695	0	True				
ANR	1040451	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1040452	UnaryOperator	!		1039695	0					
ANR	1040453	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1040454	Identifier	flags		1039695	0					
ANR	1040455	Identifier	SET_FLAGS		1039695	1					
ANR	1040456	CompoundStatement		86:29:3051:3051	1039695	1					
ANR	1040457	IfStatement	if ( imm <= 0xfff )		1039695	0					
ANR	1040458	Condition	imm <= 0xfff	598:8:18436:18447	1039695	0	True				
ANR	1040459	RelationalExpression	imm <= 0xfff		1039695	0		<=			
ANR	1040460	Identifier	imm		1039695	0					
ANR	1040461	PrimaryExpression	0xfff		1039695	1					
ANR	1040462	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) ) ;"	599:5:18455:18525	1039695	1	True				
ANR	1040463	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm ) )"		1039695	0					
ANR	1040464	Callee	push_inst32		1039695	0					
ANR	1040465	Identifier	push_inst32		1039695	0					
ANR	1040466	ArgumentList	compiler		1039695	1					
ANR	1040467	Argument	compiler		1039695	0					
ANR	1040468	Identifier	compiler		1039695	0					
ANR	1040469	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	1					
ANR	1040470	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	0		|			
ANR	1040471	Identifier	SUBWI		1039695	0					
ANR	1040472	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( imm )		1039695	1		|			
ANR	1040473	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040474	Callee	RD4		1039695	0					
ANR	1040475	Identifier	RD4		1039695	0					
ANR	1040476	ArgumentList	dst		1039695	1					
ANR	1040477	Argument	dst		1039695	0					
ANR	1040478	Identifier	dst		1039695	0					
ANR	1040479	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( imm )		1039695	1		|			
ANR	1040480	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040481	Callee	RN4		1039695	0					
ANR	1040482	Identifier	RN4		1039695	0					
ANR	1040483	ArgumentList	reg		1039695	1					
ANR	1040484	Argument	reg		1039695	0					
ANR	1040485	Identifier	reg		1039695	0					
ANR	1040486	CallExpression	IMM12 ( imm )		1039695	1					
ANR	1040487	Callee	IMM12		1039695	0					
ANR	1040488	Identifier	IMM12		1039695	0					
ANR	1040489	ArgumentList	imm		1039695	1					
ANR	1040490	Argument	imm		1039695	0					
ANR	1040491	Identifier	imm		1039695	0					
ANR	1040492	IfStatement	if ( nimm <= 0xfff )		1039695	1					
ANR	1040493	Condition	nimm <= 0xfff	600:8:18535:18547	1039695	0	True				
ANR	1040494	RelationalExpression	nimm <= 0xfff		1039695	0		<=			
ANR	1040495	Identifier	nimm		1039695	0					
ANR	1040496	PrimaryExpression	0xfff		1039695	1					
ANR	1040497	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) ) ;"	601:5:18555:18626	1039695	1	True				
ANR	1040498	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm ) )"		1039695	0					
ANR	1040499	Callee	push_inst32		1039695	0					
ANR	1040500	Identifier	push_inst32		1039695	0					
ANR	1040501	ArgumentList	compiler		1039695	1					
ANR	1040502	Argument	compiler		1039695	0					
ANR	1040503	Identifier	compiler		1039695	0					
ANR	1040504	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	1					
ANR	1040505	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	0		|			
ANR	1040506	Identifier	ADDWI		1039695	0					
ANR	1040507	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( nimm )		1039695	1		|			
ANR	1040508	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040509	Callee	RD4		1039695	0					
ANR	1040510	Identifier	RD4		1039695	0					
ANR	1040511	ArgumentList	dst		1039695	1					
ANR	1040512	Argument	dst		1039695	0					
ANR	1040513	Identifier	dst		1039695	0					
ANR	1040514	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( nimm )		1039695	1		|			
ANR	1040515	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040516	Callee	RN4		1039695	0					
ANR	1040517	Identifier	RN4		1039695	0					
ANR	1040518	ArgumentList	reg		1039695	1					
ANR	1040519	Argument	reg		1039695	0					
ANR	1040520	Identifier	reg		1039695	0					
ANR	1040521	CallExpression	IMM12 ( nimm )		1039695	1					
ANR	1040522	Callee	IMM12		1039695	0					
ANR	1040523	Identifier	IMM12		1039695	0					
ANR	1040524	ArgumentList	nimm		1039695	1					
ANR	1040525	Argument	nimm		1039695	0					
ANR	1040526	Identifier	nimm		1039695	0					
ANR	1040527	ExpressionStatement	imm = get_imm ( imm )	603:3:18636:18654	1039695	25	True				
ANR	1040528	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040529	Identifier	imm		1039695	0					
ANR	1040530	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040531	Callee	get_imm		1039695	0					
ANR	1040532	Identifier	get_imm		1039695	0					
ANR	1040533	ArgumentList	imm		1039695	1					
ANR	1040534	Argument	imm		1039695	0					
ANR	1040535	Identifier	imm		1039695	0					
ANR	1040536	IfStatement	if ( imm != INVALID_IMM )		1039695	26					
ANR	1040537	Condition	imm != INVALID_IMM	604:7:18663:18680	1039695	0	True				
ANR	1040538	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040539	Identifier	imm		1039695	0					
ANR	1040540	Identifier	INVALID_IMM		1039695	1					
ANR	1040541	ReturnStatement	"return push_inst32 ( compiler , SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	605:4:18687:18773	1039695	1	True				
ANR	1040542	CallExpression	"push_inst32 ( compiler , SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040543	Callee	push_inst32		1039695	0					
ANR	1040544	Identifier	push_inst32		1039695	0					
ANR	1040545	ArgumentList	compiler		1039695	1					
ANR	1040546	Argument	compiler		1039695	0					
ANR	1040547	Identifier	compiler		1039695	0					
ANR	1040548	Argument	SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040549	InclusiveOrExpression	SUB_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040550	Identifier	SUB_WI		1039695	0					
ANR	1040551	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040552	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040553	Identifier	flags		1039695	0					
ANR	1040554	Identifier	SET_FLAGS		1039695	1					
ANR	1040555	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040556	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040557	Callee	RD4		1039695	0					
ANR	1040558	Identifier	RD4		1039695	0					
ANR	1040559	ArgumentList	dst		1039695	1					
ANR	1040560	Argument	dst		1039695	0					
ANR	1040561	Identifier	dst		1039695	0					
ANR	1040562	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040563	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040564	Callee	RN4		1039695	0					
ANR	1040565	Identifier	RN4		1039695	0					
ANR	1040566	ArgumentList	reg		1039695	1					
ANR	1040567	Argument	reg		1039695	0					
ANR	1040568	Identifier	reg		1039695	0					
ANR	1040569	Identifier	imm		1039695	1					
ANR	1040570	BreakStatement	break ;	606:3:18778:18783	1039695	27	True				
ANR	1040571	Label	case SLJIT_SUBC :	607:2:18787:18802	1039695	28	True				
ANR	1040572	Identifier	SLJIT_SUBC		1039695	0					
ANR	1040573	IfStatement	if ( flags & ARG1_IMM )		1039695	29					
ANR	1040574	Condition	flags & ARG1_IMM	608:7:18811:18826	1039695	0	True				
ANR	1040575	BitAndExpression	flags & ARG1_IMM		1039695	0		&			
ANR	1040576	Identifier	flags		1039695	0					
ANR	1040577	Identifier	ARG1_IMM		1039695	1					
ANR	1040578	BreakStatement	break ;	609:4:18833:18838	1039695	1	True				
ANR	1040579	ExpressionStatement	imm = get_imm ( imm )	610:3:18843:18861	1039695	30	True				
ANR	1040580	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040581	Identifier	imm		1039695	0					
ANR	1040582	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040583	Callee	get_imm		1039695	0					
ANR	1040584	Identifier	get_imm		1039695	0					
ANR	1040585	ArgumentList	imm		1039695	1					
ANR	1040586	Argument	imm		1039695	0					
ANR	1040587	Identifier	imm		1039695	0					
ANR	1040588	IfStatement	if ( imm != INVALID_IMM )		1039695	31					
ANR	1040589	Condition	imm != INVALID_IMM	611:7:18870:18887	1039695	0	True				
ANR	1040590	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040591	Identifier	imm		1039695	0					
ANR	1040592	Identifier	INVALID_IMM		1039695	1					
ANR	1040593	ReturnStatement	"return push_inst32 ( compiler , SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	612:4:18894:18978	1039695	1	True				
ANR	1040594	CallExpression	"push_inst32 ( compiler , SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040595	Callee	push_inst32		1039695	0					
ANR	1040596	Identifier	push_inst32		1039695	0					
ANR	1040597	ArgumentList	compiler		1039695	1					
ANR	1040598	Argument	compiler		1039695	0					
ANR	1040599	Identifier	compiler		1039695	0					
ANR	1040600	Argument	SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040601	InclusiveOrExpression	SBCI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040602	Identifier	SBCI		1039695	0					
ANR	1040603	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040604	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040605	Identifier	flags		1039695	0					
ANR	1040606	Identifier	SET_FLAGS		1039695	1					
ANR	1040607	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040608	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040609	Callee	RD4		1039695	0					
ANR	1040610	Identifier	RD4		1039695	0					
ANR	1040611	ArgumentList	dst		1039695	1					
ANR	1040612	Argument	dst		1039695	0					
ANR	1040613	Identifier	dst		1039695	0					
ANR	1040614	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040615	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040616	Callee	RN4		1039695	0					
ANR	1040617	Identifier	RN4		1039695	0					
ANR	1040618	ArgumentList	reg		1039695	1					
ANR	1040619	Argument	reg		1039695	0					
ANR	1040620	Identifier	reg		1039695	0					
ANR	1040621	Identifier	imm		1039695	1					
ANR	1040622	BreakStatement	break ;	613:3:18983:18988	1039695	32	True				
ANR	1040623	Label	case SLJIT_AND :	614:2:18992:19006	1039695	33	True				
ANR	1040624	Identifier	SLJIT_AND		1039695	0					
ANR	1040625	ExpressionStatement	nimm = get_imm ( imm )	615:3:19011:19030	1039695	34	True				
ANR	1040626	AssignmentExpression	nimm = get_imm ( imm )		1039695	0		=			
ANR	1040627	Identifier	nimm		1039695	0					
ANR	1040628	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040629	Callee	get_imm		1039695	0					
ANR	1040630	Identifier	get_imm		1039695	0					
ANR	1040631	ArgumentList	imm		1039695	1					
ANR	1040632	Argument	imm		1039695	0					
ANR	1040633	Identifier	imm		1039695	0					
ANR	1040634	IfStatement	if ( nimm != INVALID_IMM )		1039695	35					
ANR	1040635	Condition	nimm != INVALID_IMM	616:7:19039:19057	1039695	0	True				
ANR	1040636	EqualityExpression	nimm != INVALID_IMM		1039695	0		!=			
ANR	1040637	Identifier	nimm		1039695	0					
ANR	1040638	Identifier	INVALID_IMM		1039695	1					
ANR	1040639	ReturnStatement	"return push_inst32 ( compiler , ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm ) ;"	617:4:19064:19149	1039695	1	True				
ANR	1040640	CallExpression	"push_inst32 ( compiler , ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm )"		1039695	0					
ANR	1040641	Callee	push_inst32		1039695	0					
ANR	1040642	Identifier	push_inst32		1039695	0					
ANR	1040643	ArgumentList	compiler		1039695	1					
ANR	1040644	Argument	compiler		1039695	0					
ANR	1040645	Identifier	compiler		1039695	0					
ANR	1040646	Argument	ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1					
ANR	1040647	InclusiveOrExpression	ANDI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	0		|			
ANR	1040648	Identifier	ANDI		1039695	0					
ANR	1040649	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040650	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040651	Identifier	flags		1039695	0					
ANR	1040652	Identifier	SET_FLAGS		1039695	1					
ANR	1040653	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040654	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040655	Callee	RD4		1039695	0					
ANR	1040656	Identifier	RD4		1039695	0					
ANR	1040657	ArgumentList	dst		1039695	1					
ANR	1040658	Argument	dst		1039695	0					
ANR	1040659	Identifier	dst		1039695	0					
ANR	1040660	InclusiveOrExpression	RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040661	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040662	Callee	RN4		1039695	0					
ANR	1040663	Identifier	RN4		1039695	0					
ANR	1040664	ArgumentList	reg		1039695	1					
ANR	1040665	Argument	reg		1039695	0					
ANR	1040666	Identifier	reg		1039695	0					
ANR	1040667	Identifier	nimm		1039695	1					
ANR	1040668	ExpressionStatement	imm = get_imm ( imm )	618:3:19154:19172	1039695	36	True				
ANR	1040669	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040670	Identifier	imm		1039695	0					
ANR	1040671	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040672	Callee	get_imm		1039695	0					
ANR	1040673	Identifier	get_imm		1039695	0					
ANR	1040674	ArgumentList	imm		1039695	1					
ANR	1040675	Argument	imm		1039695	0					
ANR	1040676	Identifier	imm		1039695	0					
ANR	1040677	IfStatement	if ( imm != INVALID_IMM )		1039695	37					
ANR	1040678	Condition	imm != INVALID_IMM	619:7:19181:19198	1039695	0	True				
ANR	1040679	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040680	Identifier	imm		1039695	0					
ANR	1040681	Identifier	INVALID_IMM		1039695	1					
ANR	1040682	ReturnStatement	"return push_inst32 ( compiler , BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	620:4:19205:19289	1039695	1	True				
ANR	1040683	CallExpression	"push_inst32 ( compiler , BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040684	Callee	push_inst32		1039695	0					
ANR	1040685	Identifier	push_inst32		1039695	0					
ANR	1040686	ArgumentList	compiler		1039695	1					
ANR	1040687	Argument	compiler		1039695	0					
ANR	1040688	Identifier	compiler		1039695	0					
ANR	1040689	Argument	BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040690	InclusiveOrExpression	BICI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040691	Identifier	BICI		1039695	0					
ANR	1040692	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040693	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040694	Identifier	flags		1039695	0					
ANR	1040695	Identifier	SET_FLAGS		1039695	1					
ANR	1040696	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040697	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040698	Callee	RD4		1039695	0					
ANR	1040699	Identifier	RD4		1039695	0					
ANR	1040700	ArgumentList	dst		1039695	1					
ANR	1040701	Argument	dst		1039695	0					
ANR	1040702	Identifier	dst		1039695	0					
ANR	1040703	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040704	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040705	Callee	RN4		1039695	0					
ANR	1040706	Identifier	RN4		1039695	0					
ANR	1040707	ArgumentList	reg		1039695	1					
ANR	1040708	Argument	reg		1039695	0					
ANR	1040709	Identifier	reg		1039695	0					
ANR	1040710	Identifier	imm		1039695	1					
ANR	1040711	BreakStatement	break ;	621:3:19294:19299	1039695	38	True				
ANR	1040712	Label	case SLJIT_OR :	622:2:19303:19316	1039695	39	True				
ANR	1040713	Identifier	SLJIT_OR		1039695	0					
ANR	1040714	ExpressionStatement	nimm = get_imm ( imm )	623:3:19321:19340	1039695	40	True				
ANR	1040715	AssignmentExpression	nimm = get_imm ( imm )		1039695	0		=			
ANR	1040716	Identifier	nimm		1039695	0					
ANR	1040717	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040718	Callee	get_imm		1039695	0					
ANR	1040719	Identifier	get_imm		1039695	0					
ANR	1040720	ArgumentList	imm		1039695	1					
ANR	1040721	Argument	imm		1039695	0					
ANR	1040722	Identifier	imm		1039695	0					
ANR	1040723	IfStatement	if ( nimm != INVALID_IMM )		1039695	41					
ANR	1040724	Condition	nimm != INVALID_IMM	624:7:19349:19367	1039695	0	True				
ANR	1040725	EqualityExpression	nimm != INVALID_IMM		1039695	0		!=			
ANR	1040726	Identifier	nimm		1039695	0					
ANR	1040727	Identifier	INVALID_IMM		1039695	1					
ANR	1040728	ReturnStatement	"return push_inst32 ( compiler , ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm ) ;"	625:4:19374:19459	1039695	1	True				
ANR	1040729	CallExpression	"push_inst32 ( compiler , ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm )"		1039695	0					
ANR	1040730	Callee	push_inst32		1039695	0					
ANR	1040731	Identifier	push_inst32		1039695	0					
ANR	1040732	ArgumentList	compiler		1039695	1					
ANR	1040733	Argument	compiler		1039695	0					
ANR	1040734	Identifier	compiler		1039695	0					
ANR	1040735	Argument	ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1					
ANR	1040736	InclusiveOrExpression	ORRI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	0		|			
ANR	1040737	Identifier	ORRI		1039695	0					
ANR	1040738	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040739	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040740	Identifier	flags		1039695	0					
ANR	1040741	Identifier	SET_FLAGS		1039695	1					
ANR	1040742	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040743	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040744	Callee	RD4		1039695	0					
ANR	1040745	Identifier	RD4		1039695	0					
ANR	1040746	ArgumentList	dst		1039695	1					
ANR	1040747	Argument	dst		1039695	0					
ANR	1040748	Identifier	dst		1039695	0					
ANR	1040749	InclusiveOrExpression	RN4 ( reg ) | nimm		1039695	1		|			
ANR	1040750	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040751	Callee	RN4		1039695	0					
ANR	1040752	Identifier	RN4		1039695	0					
ANR	1040753	ArgumentList	reg		1039695	1					
ANR	1040754	Argument	reg		1039695	0					
ANR	1040755	Identifier	reg		1039695	0					
ANR	1040756	Identifier	nimm		1039695	1					
ANR	1040757	ExpressionStatement	imm = get_imm ( imm )	626:3:19464:19482	1039695	42	True				
ANR	1040758	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040759	Identifier	imm		1039695	0					
ANR	1040760	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040761	Callee	get_imm		1039695	0					
ANR	1040762	Identifier	get_imm		1039695	0					
ANR	1040763	ArgumentList	imm		1039695	1					
ANR	1040764	Argument	imm		1039695	0					
ANR	1040765	Identifier	imm		1039695	0					
ANR	1040766	IfStatement	if ( imm != INVALID_IMM )		1039695	43					
ANR	1040767	Condition	imm != INVALID_IMM	627:7:19491:19508	1039695	0	True				
ANR	1040768	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040769	Identifier	imm		1039695	0					
ANR	1040770	Identifier	INVALID_IMM		1039695	1					
ANR	1040771	ReturnStatement	"return push_inst32 ( compiler , ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	628:4:19515:19599	1039695	1	True				
ANR	1040772	CallExpression	"push_inst32 ( compiler , ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040773	Callee	push_inst32		1039695	0					
ANR	1040774	Identifier	push_inst32		1039695	0					
ANR	1040775	ArgumentList	compiler		1039695	1					
ANR	1040776	Argument	compiler		1039695	0					
ANR	1040777	Identifier	compiler		1039695	0					
ANR	1040778	Argument	ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040779	InclusiveOrExpression	ORNI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040780	Identifier	ORNI		1039695	0					
ANR	1040781	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040782	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040783	Identifier	flags		1039695	0					
ANR	1040784	Identifier	SET_FLAGS		1039695	1					
ANR	1040785	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040786	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040787	Callee	RD4		1039695	0					
ANR	1040788	Identifier	RD4		1039695	0					
ANR	1040789	ArgumentList	dst		1039695	1					
ANR	1040790	Argument	dst		1039695	0					
ANR	1040791	Identifier	dst		1039695	0					
ANR	1040792	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040793	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040794	Callee	RN4		1039695	0					
ANR	1040795	Identifier	RN4		1039695	0					
ANR	1040796	ArgumentList	reg		1039695	1					
ANR	1040797	Argument	reg		1039695	0					
ANR	1040798	Identifier	reg		1039695	0					
ANR	1040799	Identifier	imm		1039695	1					
ANR	1040800	BreakStatement	break ;	629:3:19604:19609	1039695	44	True				
ANR	1040801	Label	case SLJIT_XOR :	630:2:19613:19627	1039695	45	True				
ANR	1040802	Identifier	SLJIT_XOR		1039695	0					
ANR	1040803	ExpressionStatement	imm = get_imm ( imm )	631:3:19632:19650	1039695	46	True				
ANR	1040804	AssignmentExpression	imm = get_imm ( imm )		1039695	0		=			
ANR	1040805	Identifier	imm		1039695	0					
ANR	1040806	CallExpression	get_imm ( imm )		1039695	1					
ANR	1040807	Callee	get_imm		1039695	0					
ANR	1040808	Identifier	get_imm		1039695	0					
ANR	1040809	ArgumentList	imm		1039695	1					
ANR	1040810	Argument	imm		1039695	0					
ANR	1040811	Identifier	imm		1039695	0					
ANR	1040812	IfStatement	if ( imm != INVALID_IMM )		1039695	47					
ANR	1040813	Condition	imm != INVALID_IMM	632:7:19659:19676	1039695	0	True				
ANR	1040814	EqualityExpression	imm != INVALID_IMM		1039695	0		!=			
ANR	1040815	Identifier	imm		1039695	0					
ANR	1040816	Identifier	INVALID_IMM		1039695	1					
ANR	1040817	ReturnStatement	"return push_inst32 ( compiler , EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm ) ;"	633:4:19683:19767	1039695	1	True				
ANR	1040818	CallExpression	"push_inst32 ( compiler , EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm )"		1039695	0					
ANR	1040819	Callee	push_inst32		1039695	0					
ANR	1040820	Identifier	push_inst32		1039695	0					
ANR	1040821	ArgumentList	compiler		1039695	1					
ANR	1040822	Argument	compiler		1039695	0					
ANR	1040823	Identifier	compiler		1039695	0					
ANR	1040824	Argument	EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1					
ANR	1040825	InclusiveOrExpression	EORI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	0		|			
ANR	1040826	Identifier	EORI		1039695	0					
ANR	1040827	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040828	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1040829	Identifier	flags		1039695	0					
ANR	1040830	Identifier	SET_FLAGS		1039695	1					
ANR	1040831	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | imm		1039695	1		|			
ANR	1040832	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040833	Callee	RD4		1039695	0					
ANR	1040834	Identifier	RD4		1039695	0					
ANR	1040835	ArgumentList	dst		1039695	1					
ANR	1040836	Argument	dst		1039695	0					
ANR	1040837	Identifier	dst		1039695	0					
ANR	1040838	InclusiveOrExpression	RN4 ( reg ) | imm		1039695	1		|			
ANR	1040839	CallExpression	RN4 ( reg )		1039695	0					
ANR	1040840	Callee	RN4		1039695	0					
ANR	1040841	Identifier	RN4		1039695	0					
ANR	1040842	ArgumentList	reg		1039695	1					
ANR	1040843	Argument	reg		1039695	0					
ANR	1040844	Identifier	reg		1039695	0					
ANR	1040845	Identifier	imm		1039695	1					
ANR	1040846	BreakStatement	break ;	634:3:19772:19777	1039695	48	True				
ANR	1040847	Label	case SLJIT_SHL :	635:2:19781:19795	1039695	49	True				
ANR	1040848	Identifier	SLJIT_SHL		1039695	0					
ANR	1040849	Label	case SLJIT_LSHR :	636:2:19799:19814	1039695	50	True				
ANR	1040850	Identifier	SLJIT_LSHR		1039695	0					
ANR	1040851	Label	case SLJIT_ASHR :	637:2:19818:19833	1039695	51	True				
ANR	1040852	Identifier	SLJIT_ASHR		1039695	0					
ANR	1040853	IfStatement	if ( flags & ARG1_IMM )		1039695	52					
ANR	1040854	Condition	flags & ARG1_IMM	638:7:19842:19857	1039695	0	True				
ANR	1040855	BitAndExpression	flags & ARG1_IMM		1039695	0		&			
ANR	1040856	Identifier	flags		1039695	0					
ANR	1040857	Identifier	ARG1_IMM		1039695	1					
ANR	1040858	BreakStatement	break ;	639:4:19864:19869	1039695	1	True				
ANR	1040859	ExpressionStatement	imm &= 0x1f	640:3:19874:19885	1039695	53	True				
ANR	1040860	AssignmentExpression	imm &= 0x1f		1039695	0		&=			
ANR	1040861	Identifier	imm		1039695	0					
ANR	1040862	PrimaryExpression	0x1f		1039695	1					
ANR	1040863	IfStatement	if ( imm == 0 )		1039695	54					
ANR	1040864	Condition	imm == 0	641:7:19894:19901	1039695	0	True				
ANR	1040865	EqualityExpression	imm == 0		1039695	0		==			
ANR	1040866	Identifier	imm		1039695	0					
ANR	1040867	PrimaryExpression	0		1039695	1					
ANR	1040868	CompoundStatement		130:17:4529:4529	1039695	1					
ANR	1040869	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1039695	0					
ANR	1040870	Condition	! ( flags & SET_FLAGS )	642:8:19914:19933	1039695	0	True				
ANR	1040871	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1040872	UnaryOperator	!		1039695	0					
ANR	1040873	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1040874	Identifier	flags		1039695	0					
ANR	1040875	Identifier	SET_FLAGS		1039695	1					
ANR	1040876	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , reg ) ) ;"	643:5:19941:19997	1039695	1	True				
ANR	1040877	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , reg ) )"		1039695	0					
ANR	1040878	Callee	push_inst16		1039695	0					
ANR	1040879	Identifier	push_inst16		1039695	0					
ANR	1040880	ArgumentList	compiler		1039695	1					
ANR	1040881	Argument	compiler		1039695	0					
ANR	1040882	Identifier	compiler		1039695	0					
ANR	1040883	Argument	"MOV | SET_REGS44 ( dst , reg )"		1039695	1					
ANR	1040884	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , reg )"		1039695	0		|			
ANR	1040885	Identifier	MOV		1039695	0					
ANR	1040886	CallExpression	"SET_REGS44 ( dst , reg )"		1039695	1					
ANR	1040887	Callee	SET_REGS44		1039695	0					
ANR	1040888	Identifier	SET_REGS44		1039695	0					
ANR	1040889	ArgumentList	dst		1039695	1					
ANR	1040890	Argument	dst		1039695	0					
ANR	1040891	Identifier	dst		1039695	0					
ANR	1040892	Argument	reg		1039695	1					
ANR	1040893	Identifier	reg		1039695	0					
ANR	1040894	IfStatement	"if ( IS_2_LO_REGS ( dst , reg ) )"		1039695	1					
ANR	1040895	Condition	"IS_2_LO_REGS ( dst , reg )"	644:8:20007:20028	1039695	0	True				
ANR	1040896	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1039695	0					
ANR	1040897	Callee	IS_2_LO_REGS		1039695	0					
ANR	1040898	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1040899	ArgumentList	dst		1039695	1					
ANR	1040900	Argument	dst		1039695	0					
ANR	1040901	Identifier	dst		1039695	0					
ANR	1040902	Argument	reg		1039695	1					
ANR	1040903	Identifier	reg		1039695	0					
ANR	1040904	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( dst ) | RN3 ( reg ) ) ;"	645:5:20036:20092	1039695	1	True				
ANR	1040905	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( dst ) | RN3 ( reg ) )"		1039695	0					
ANR	1040906	Callee	push_inst16		1039695	0					
ANR	1040907	Identifier	push_inst16		1039695	0					
ANR	1040908	ArgumentList	compiler		1039695	1					
ANR	1040909	Argument	compiler		1039695	0					
ANR	1040910	Identifier	compiler		1039695	0					
ANR	1040911	Argument	MOVS | RD3 ( dst ) | RN3 ( reg )		1039695	1					
ANR	1040912	InclusiveOrExpression	MOVS | RD3 ( dst ) | RN3 ( reg )		1039695	0		|			
ANR	1040913	Identifier	MOVS		1039695	0					
ANR	1040914	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg )		1039695	1		|			
ANR	1040915	CallExpression	RD3 ( dst )		1039695	0					
ANR	1040916	Callee	RD3		1039695	0					
ANR	1040917	Identifier	RD3		1039695	0					
ANR	1040918	ArgumentList	dst		1039695	1					
ANR	1040919	Argument	dst		1039695	0					
ANR	1040920	Identifier	dst		1039695	0					
ANR	1040921	CallExpression	RN3 ( reg )		1039695	1					
ANR	1040922	Callee	RN3		1039695	0					
ANR	1040923	Identifier	RN3		1039695	0					
ANR	1040924	ArgumentList	reg		1039695	1					
ANR	1040925	Argument	reg		1039695	0					
ANR	1040926	Identifier	reg		1039695	0					
ANR	1040927	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg ) ) ;"	646:4:20098:20167	1039695	2	True				
ANR	1040928	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg ) )"		1039695	0					
ANR	1040929	Callee	push_inst32		1039695	0					
ANR	1040930	Identifier	push_inst32		1039695	0					
ANR	1040931	ArgumentList	compiler		1039695	1					
ANR	1040932	Argument	compiler		1039695	0					
ANR	1040933	Identifier	compiler		1039695	0					
ANR	1040934	Argument	MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1039695	1					
ANR	1040935	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1039695	0		|			
ANR	1040936	Identifier	MOV_W		1039695	0					
ANR	1040937	InclusiveOrExpression	SET_FLAGS | RD4 ( dst ) | RM4 ( reg )		1039695	1		|			
ANR	1040938	Identifier	SET_FLAGS		1039695	0					
ANR	1040939	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg )		1039695	1		|			
ANR	1040940	CallExpression	RD4 ( dst )		1039695	0					
ANR	1040941	Callee	RD4		1039695	0					
ANR	1040942	Identifier	RD4		1039695	0					
ANR	1040943	ArgumentList	dst		1039695	1					
ANR	1040944	Argument	dst		1039695	0					
ANR	1040945	Identifier	dst		1039695	0					
ANR	1040946	CallExpression	RM4 ( reg )		1039695	1					
ANR	1040947	Callee	RM4		1039695	0					
ANR	1040948	Identifier	RM4		1039695	0					
ANR	1040949	ArgumentList	reg		1039695	1					
ANR	1040950	Argument	reg		1039695	0					
ANR	1040951	Identifier	reg		1039695	0					
ANR	1040952	SwitchStatement	switch ( flags & 0xffff )		1039695	55					
ANR	1040953	Condition	flags & 0xffff	648:11:20185:20198	1039695	0	True				
ANR	1040954	BitAndExpression	flags & 0xffff		1039695	0		&			
ANR	1040955	Identifier	flags		1039695	0					
ANR	1040956	PrimaryExpression	0xffff		1039695	1					
ANR	1040957	CompoundStatement		137:27:4826:4826	1039695	1					
ANR	1040958	Label	case SLJIT_SHL :	649:3:20206:20220	1039695	0	True				
ANR	1040959	Identifier	SLJIT_SHL		1039695	0					
ANR	1040960	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1039695	1					
ANR	1040961	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	650:8:20230:20276	1039695	0	True				
ANR	1040962	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1039695	0		&&			
ANR	1040963	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1040964	UnaryOperator	!		1039695	0					
ANR	1040965	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1040966	Identifier	flags		1039695	0					
ANR	1040967	Identifier	KEEP_FLAGS		1039695	1					
ANR	1040968	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1039695	1					
ANR	1040969	Callee	IS_2_LO_REGS		1039695	0					
ANR	1040970	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1040971	ArgumentList	dst		1039695	1					
ANR	1040972	Argument	dst		1039695	0					
ANR	1040973	Identifier	dst		1039695	0					
ANR	1040974	Argument	reg		1039695	1					
ANR	1040975	Identifier	reg		1039695	0					
ANR	1040976	ReturnStatement	"return push_inst16 ( compiler , LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	651:5:20284:20354	1039695	1	True				
ANR	1040977	CallExpression	"push_inst16 ( compiler , LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1039695	0					
ANR	1040978	Callee	push_inst16		1039695	0					
ANR	1040979	Identifier	push_inst16		1039695	0					
ANR	1040980	ArgumentList	compiler		1039695	1					
ANR	1040981	Argument	compiler		1039695	0					
ANR	1040982	Identifier	compiler		1039695	0					
ANR	1040983	Argument	LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1					
ANR	1040984	InclusiveOrExpression	LSLSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	0		|			
ANR	1040985	Identifier	LSLSI		1039695	0					
ANR	1040986	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1040987	CallExpression	RD3 ( dst )		1039695	0					
ANR	1040988	Callee	RD3		1039695	0					
ANR	1040989	Identifier	RD3		1039695	0					
ANR	1040990	ArgumentList	dst		1039695	1					
ANR	1040991	Argument	dst		1039695	0					
ANR	1040992	Identifier	dst		1039695	0					
ANR	1040993	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1040994	CallExpression	RN3 ( reg )		1039695	0					
ANR	1040995	Callee	RN3		1039695	0					
ANR	1040996	Identifier	RN3		1039695	0					
ANR	1040997	ArgumentList	reg		1039695	1					
ANR	1040998	Argument	reg		1039695	0					
ANR	1040999	Identifier	reg		1039695	0					
ANR	1041000	ShiftExpression	imm << 6		1039695	1		<<			
ANR	1041001	Identifier	imm		1039695	0					
ANR	1041002	PrimaryExpression	6		1039695	1					
ANR	1041003	ReturnStatement	"return push_inst32 ( compiler , LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	652:4:20360:20452	1039695	2	True				
ANR	1041004	CallExpression	"push_inst32 ( compiler , LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1039695	0					
ANR	1041005	Callee	push_inst32		1039695	0					
ANR	1041006	Identifier	push_inst32		1039695	0					
ANR	1041007	ArgumentList	compiler		1039695	1					
ANR	1041008	Argument	compiler		1039695	0					
ANR	1041009	Identifier	compiler		1039695	0					
ANR	1041010	Argument	LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1					
ANR	1041011	InclusiveOrExpression	LSL_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	0		|			
ANR	1041012	Identifier	LSL_WI		1039695	0					
ANR	1041013	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041014	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041015	Identifier	flags		1039695	0					
ANR	1041016	Identifier	SET_FLAGS		1039695	1					
ANR	1041017	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041018	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041019	Callee	RD4		1039695	0					
ANR	1041020	Identifier	RD4		1039695	0					
ANR	1041021	ArgumentList	dst		1039695	1					
ANR	1041022	Argument	dst		1039695	0					
ANR	1041023	Identifier	dst		1039695	0					
ANR	1041024	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041025	CallExpression	RM4 ( reg )		1039695	0					
ANR	1041026	Callee	RM4		1039695	0					
ANR	1041027	Identifier	RM4		1039695	0					
ANR	1041028	ArgumentList	reg		1039695	1					
ANR	1041029	Argument	reg		1039695	0					
ANR	1041030	Identifier	reg		1039695	0					
ANR	1041031	CallExpression	IMM5 ( imm )		1039695	1					
ANR	1041032	Callee	IMM5		1039695	0					
ANR	1041033	Identifier	IMM5		1039695	0					
ANR	1041034	ArgumentList	imm		1039695	1					
ANR	1041035	Argument	imm		1039695	0					
ANR	1041036	Identifier	imm		1039695	0					
ANR	1041037	Label	case SLJIT_LSHR :	653:3:20457:20472	1039695	3	True				
ANR	1041038	Identifier	SLJIT_LSHR		1039695	0					
ANR	1041039	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1039695	4					
ANR	1041040	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	654:8:20482:20528	1039695	0	True				
ANR	1041041	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1039695	0		&&			
ANR	1041042	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041043	UnaryOperator	!		1039695	0					
ANR	1041044	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041045	Identifier	flags		1039695	0					
ANR	1041046	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041047	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1039695	1					
ANR	1041048	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041049	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041050	ArgumentList	dst		1039695	1					
ANR	1041051	Argument	dst		1039695	0					
ANR	1041052	Identifier	dst		1039695	0					
ANR	1041053	Argument	reg		1039695	1					
ANR	1041054	Identifier	reg		1039695	0					
ANR	1041055	ReturnStatement	"return push_inst16 ( compiler , LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	655:5:20536:20606	1039695	1	True				
ANR	1041056	CallExpression	"push_inst16 ( compiler , LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1039695	0					
ANR	1041057	Callee	push_inst16		1039695	0					
ANR	1041058	Identifier	push_inst16		1039695	0					
ANR	1041059	ArgumentList	compiler		1039695	1					
ANR	1041060	Argument	compiler		1039695	0					
ANR	1041061	Identifier	compiler		1039695	0					
ANR	1041062	Argument	LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1					
ANR	1041063	InclusiveOrExpression	LSRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	0		|			
ANR	1041064	Identifier	LSRSI		1039695	0					
ANR	1041065	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1041066	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041067	Callee	RD3		1039695	0					
ANR	1041068	Identifier	RD3		1039695	0					
ANR	1041069	ArgumentList	dst		1039695	1					
ANR	1041070	Argument	dst		1039695	0					
ANR	1041071	Identifier	dst		1039695	0					
ANR	1041072	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1041073	CallExpression	RN3 ( reg )		1039695	0					
ANR	1041074	Callee	RN3		1039695	0					
ANR	1041075	Identifier	RN3		1039695	0					
ANR	1041076	ArgumentList	reg		1039695	1					
ANR	1041077	Argument	reg		1039695	0					
ANR	1041078	Identifier	reg		1039695	0					
ANR	1041079	ShiftExpression	imm << 6		1039695	1		<<			
ANR	1041080	Identifier	imm		1039695	0					
ANR	1041081	PrimaryExpression	6		1039695	1					
ANR	1041082	ReturnStatement	"return push_inst32 ( compiler , LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	656:4:20612:20704	1039695	5	True				
ANR	1041083	CallExpression	"push_inst32 ( compiler , LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1039695	0					
ANR	1041084	Callee	push_inst32		1039695	0					
ANR	1041085	Identifier	push_inst32		1039695	0					
ANR	1041086	ArgumentList	compiler		1039695	1					
ANR	1041087	Argument	compiler		1039695	0					
ANR	1041088	Identifier	compiler		1039695	0					
ANR	1041089	Argument	LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1					
ANR	1041090	InclusiveOrExpression	LSR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	0		|			
ANR	1041091	Identifier	LSR_WI		1039695	0					
ANR	1041092	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041093	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041094	Identifier	flags		1039695	0					
ANR	1041095	Identifier	SET_FLAGS		1039695	1					
ANR	1041096	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041097	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041098	Callee	RD4		1039695	0					
ANR	1041099	Identifier	RD4		1039695	0					
ANR	1041100	ArgumentList	dst		1039695	1					
ANR	1041101	Argument	dst		1039695	0					
ANR	1041102	Identifier	dst		1039695	0					
ANR	1041103	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041104	CallExpression	RM4 ( reg )		1039695	0					
ANR	1041105	Callee	RM4		1039695	0					
ANR	1041106	Identifier	RM4		1039695	0					
ANR	1041107	ArgumentList	reg		1039695	1					
ANR	1041108	Argument	reg		1039695	0					
ANR	1041109	Identifier	reg		1039695	0					
ANR	1041110	CallExpression	IMM5 ( imm )		1039695	1					
ANR	1041111	Callee	IMM5		1039695	0					
ANR	1041112	Identifier	IMM5		1039695	0					
ANR	1041113	ArgumentList	imm		1039695	1					
ANR	1041114	Argument	imm		1039695	0					
ANR	1041115	Identifier	imm		1039695	0					
ANR	1041116	Label	default :	657:3:20709:20716	1039695	6	True				
ANR	1041117	Identifier	default		1039695	0					
ANR	1041118	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg ) )"		1039695	7					
ANR	1041119	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"	658:8:20743:20789	1039695	0	True				
ANR	1041120	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , reg )"		1039695	0		&&			
ANR	1041121	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041122	UnaryOperator	!		1039695	0					
ANR	1041123	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041124	Identifier	flags		1039695	0					
ANR	1041125	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041126	CallExpression	"IS_2_LO_REGS ( dst , reg )"		1039695	1					
ANR	1041127	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041128	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041129	ArgumentList	dst		1039695	1					
ANR	1041130	Argument	dst		1039695	0					
ANR	1041131	Identifier	dst		1039695	0					
ANR	1041132	Argument	reg		1039695	1					
ANR	1041133	Identifier	reg		1039695	0					
ANR	1041134	ReturnStatement	"return push_inst16 ( compiler , ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) ) ;"	659:5:20797:20867	1039695	1	True				
ANR	1041135	CallExpression	"push_inst16 ( compiler , ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 ) )"		1039695	0					
ANR	1041136	Callee	push_inst16		1039695	0					
ANR	1041137	Identifier	push_inst16		1039695	0					
ANR	1041138	ArgumentList	compiler		1039695	1					
ANR	1041139	Argument	compiler		1039695	0					
ANR	1041140	Identifier	compiler		1039695	0					
ANR	1041141	Argument	ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1					
ANR	1041142	InclusiveOrExpression	ASRSI | RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	0		|			
ANR	1041143	Identifier	ASRSI		1039695	0					
ANR	1041144	InclusiveOrExpression	RD3 ( dst ) | RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1041145	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041146	Callee	RD3		1039695	0					
ANR	1041147	Identifier	RD3		1039695	0					
ANR	1041148	ArgumentList	dst		1039695	1					
ANR	1041149	Argument	dst		1039695	0					
ANR	1041150	Identifier	dst		1039695	0					
ANR	1041151	InclusiveOrExpression	RN3 ( reg ) | ( imm << 6 )		1039695	1		|			
ANR	1041152	CallExpression	RN3 ( reg )		1039695	0					
ANR	1041153	Callee	RN3		1039695	0					
ANR	1041154	Identifier	RN3		1039695	0					
ANR	1041155	ArgumentList	reg		1039695	1					
ANR	1041156	Argument	reg		1039695	0					
ANR	1041157	Identifier	reg		1039695	0					
ANR	1041158	ShiftExpression	imm << 6		1039695	1		<<			
ANR	1041159	Identifier	imm		1039695	0					
ANR	1041160	PrimaryExpression	6		1039695	1					
ANR	1041161	ReturnStatement	"return push_inst32 ( compiler , ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) ) ;"	660:4:20873:20965	1039695	8	True				
ANR	1041162	CallExpression	"push_inst32 ( compiler , ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm ) )"		1039695	0					
ANR	1041163	Callee	push_inst32		1039695	0					
ANR	1041164	Identifier	push_inst32		1039695	0					
ANR	1041165	ArgumentList	compiler		1039695	1					
ANR	1041166	Argument	compiler		1039695	0					
ANR	1041167	Identifier	compiler		1039695	0					
ANR	1041168	Argument	ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1					
ANR	1041169	InclusiveOrExpression	ASR_WI | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	0		|			
ANR	1041170	Identifier	ASR_WI		1039695	0					
ANR	1041171	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041172	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041173	Identifier	flags		1039695	0					
ANR	1041174	Identifier	SET_FLAGS		1039695	1					
ANR	1041175	InclusiveOrExpression	RD4 ( dst ) | RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041176	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041177	Callee	RD4		1039695	0					
ANR	1041178	Identifier	RD4		1039695	0					
ANR	1041179	ArgumentList	dst		1039695	1					
ANR	1041180	Argument	dst		1039695	0					
ANR	1041181	Identifier	dst		1039695	0					
ANR	1041182	InclusiveOrExpression	RM4 ( reg ) | IMM5 ( imm )		1039695	1		|			
ANR	1041183	CallExpression	RM4 ( reg )		1039695	0					
ANR	1041184	Callee	RM4		1039695	0					
ANR	1041185	Identifier	RM4		1039695	0					
ANR	1041186	ArgumentList	reg		1039695	1					
ANR	1041187	Argument	reg		1039695	0					
ANR	1041188	Identifier	reg		1039695	0					
ANR	1041189	CallExpression	IMM5 ( imm )		1039695	1					
ANR	1041190	Callee	IMM5		1039695	0					
ANR	1041191	Identifier	IMM5		1039695	0					
ANR	1041192	ArgumentList	imm		1039695	1					
ANR	1041193	Argument	imm		1039695	0					
ANR	1041194	Identifier	imm		1039695	0					
ANR	1041195	Label	default :	662:2:20974:20981	1039695	56	True				
ANR	1041196	Identifier	default		1039695	0					
ANR	1041197	ExpressionStatement	SLJIT_ASSERT_STOP ( )	663:3:20986:21005	1039695	57	True				
ANR	1041198	CallExpression	SLJIT_ASSERT_STOP ( )		1039695	0					
ANR	1041199	Callee	SLJIT_ASSERT_STOP		1039695	0					
ANR	1041200	Identifier	SLJIT_ASSERT_STOP		1039695	0					
ANR	1041201	ArgumentList			1039695	1					
ANR	1041202	BreakStatement	break ;	664:3:21010:21015	1039695	58	True				
ANR	1041203	IfStatement	if ( flags & ARG2_IMM )		1039695	3					
ANR	1041204	Condition	flags & ARG2_IMM	667:6:21028:21043	1039695	0	True				
ANR	1041205	BitAndExpression	flags & ARG2_IMM		1039695	0		&			
ANR	1041206	Identifier	flags		1039695	0					
ANR	1041207	Identifier	ARG2_IMM		1039695	1					
ANR	1041208	CompoundStatement		156:24:5671:5671	1039695	1					
ANR	1041209	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"	668:3:21051:21100	1039695	0	True				
ANR	1041210	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , arg2 ) )"		1039695	0					
ANR	1041211	Callee	FAIL_IF		1039695	0					
ANR	1041212	Identifier	FAIL_IF		1039695	0					
ANR	1041213	ArgumentList	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1039695	1					
ANR	1041214	Argument	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1039695	0					
ANR	1041215	CallExpression	"load_immediate ( compiler , TMP_REG2 , arg2 )"		1039695	0					
ANR	1041216	Callee	load_immediate		1039695	0					
ANR	1041217	Identifier	load_immediate		1039695	0					
ANR	1041218	ArgumentList	compiler		1039695	1					
ANR	1041219	Argument	compiler		1039695	0					
ANR	1041220	Identifier	compiler		1039695	0					
ANR	1041221	Argument	TMP_REG2		1039695	1					
ANR	1041222	Identifier	TMP_REG2		1039695	0					
ANR	1041223	Argument	arg2		1039695	2					
ANR	1041224	Identifier	arg2		1039695	0					
ANR	1041225	ExpressionStatement	arg2 = TMP_REG2	669:3:21105:21120	1039695	1	True				
ANR	1041226	AssignmentExpression	arg2 = TMP_REG2		1039695	0		=			
ANR	1041227	Identifier	arg2		1039695	0					
ANR	1041228	Identifier	TMP_REG2		1039695	1					
ANR	1041229	ElseStatement	else		1039695	0					
ANR	1041230	CompoundStatement		160:7:5758:5758	1039695	0					
ANR	1041231	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"	672:3:21138:21187	1039695	0	True				
ANR	1041232	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , arg1 ) )"		1039695	0					
ANR	1041233	Callee	FAIL_IF		1039695	0					
ANR	1041234	Identifier	FAIL_IF		1039695	0					
ANR	1041235	ArgumentList	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	1					
ANR	1041236	Argument	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	0					
ANR	1041237	CallExpression	"load_immediate ( compiler , TMP_REG1 , arg1 )"		1039695	0					
ANR	1041238	Callee	load_immediate		1039695	0					
ANR	1041239	Identifier	load_immediate		1039695	0					
ANR	1041240	ArgumentList	compiler		1039695	1					
ANR	1041241	Argument	compiler		1039695	0					
ANR	1041242	Identifier	compiler		1039695	0					
ANR	1041243	Argument	TMP_REG1		1039695	1					
ANR	1041244	Identifier	TMP_REG1		1039695	0					
ANR	1041245	Argument	arg1		1039695	2					
ANR	1041246	Identifier	arg1		1039695	0					
ANR	1041247	ExpressionStatement	arg1 = TMP_REG1	673:3:21192:21207	1039695	1	True				
ANR	1041248	AssignmentExpression	arg1 = TMP_REG1		1039695	0		=			
ANR	1041249	Identifier	arg1		1039695	0					
ANR	1041250	Identifier	TMP_REG1		1039695	1					
ANR	1041251	SwitchStatement	switch ( flags & 0xffff )		1039695	4					
ANR	1041252	Condition	flags & 0xffff	678:9:21263:21276	1039695	0	True				
ANR	1041253	BitAndExpression	flags & 0xffff		1039695	0		&			
ANR	1041254	Identifier	flags		1039695	0					
ANR	1041255	PrimaryExpression	0xffff		1039695	1					
ANR	1041256	CompoundStatement		167:25:5904:5904	1039695	1					
ANR	1041257	Label	case SLJIT_MOV :	679:1:21282:21296	1039695	0	True				
ANR	1041258	Identifier	SLJIT_MOV		1039695	0					
ANR	1041259	Label	case SLJIT_MOV_UI :	680:1:21299:21316	1039695	1	True				
ANR	1041260	Identifier	SLJIT_MOV_UI		1039695	0					
ANR	1041261	Label	case SLJIT_MOV_SI :	681:1:21319:21336	1039695	2	True				
ANR	1041262	Identifier	SLJIT_MOV_SI		1039695	0					
ANR	1041263	Label	case SLJIT_MOV_P :	682:1:21339:21355	1039695	3	True				
ANR	1041264	Identifier	SLJIT_MOV_P		1039695	0					
ANR	1041265	Label	case SLJIT_MOVU :	683:1:21358:21373	1039695	4	True				
ANR	1041266	Identifier	SLJIT_MOVU		1039695	0					
ANR	1041267	Label	case SLJIT_MOVU_UI :	684:1:21376:21394	1039695	5	True				
ANR	1041268	Identifier	SLJIT_MOVU_UI		1039695	0					
ANR	1041269	Label	case SLJIT_MOVU_SI :	685:1:21397:21415	1039695	6	True				
ANR	1041270	Identifier	SLJIT_MOVU_SI		1039695	0					
ANR	1041271	Label	case SLJIT_MOVU_P :	686:1:21418:21435	1039695	7	True				
ANR	1041272	Identifier	SLJIT_MOVU_P		1039695	0					
ANR	1041273	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	687:2:21439:21493	1039695	8	True				
ANR	1041274	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1041275	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041276	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041277	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	1					
ANR	1041278	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0					
ANR	1041279	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1041280	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1041281	UnaryOperator	!		1039695	0					
ANR	1041282	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041283	Identifier	flags		1039695	0					
ANR	1041284	Identifier	SET_FLAGS		1039695	1					
ANR	1041285	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1041286	Identifier	arg1		1039695	0					
ANR	1041287	Identifier	TMP_REG1		1039695	1					
ANR	1041288	IfStatement	if ( dst == arg2 )		1039695	9					
ANR	1041289	Condition	dst == arg2	688:6:21501:21511	1039695	0	True				
ANR	1041290	EqualityExpression	dst == arg2		1039695	0		==			
ANR	1041291	Identifier	dst		1039695	0					
ANR	1041292	Identifier	arg2		1039695	1					
ANR	1041293	ReturnStatement	return SLJIT_SUCCESS ;	689:3:21517:21537	1039695	1	True				
ANR	1041294	Identifier	SLJIT_SUCCESS		1039695	0					
ANR	1041295	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , arg2 ) ) ;"	690:2:21541:21598	1039695	10	True				
ANR	1041296	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , arg2 ) )"		1039695	0					
ANR	1041297	Callee	push_inst16		1039695	0					
ANR	1041298	Identifier	push_inst16		1039695	0					
ANR	1041299	ArgumentList	compiler		1039695	1					
ANR	1041300	Argument	compiler		1039695	0					
ANR	1041301	Identifier	compiler		1039695	0					
ANR	1041302	Argument	"MOV | SET_REGS44 ( dst , arg2 )"		1039695	1					
ANR	1041303	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , arg2 )"		1039695	0		|			
ANR	1041304	Identifier	MOV		1039695	0					
ANR	1041305	CallExpression	"SET_REGS44 ( dst , arg2 )"		1039695	1					
ANR	1041306	Callee	SET_REGS44		1039695	0					
ANR	1041307	Identifier	SET_REGS44		1039695	0					
ANR	1041308	ArgumentList	dst		1039695	1					
ANR	1041309	Argument	dst		1039695	0					
ANR	1041310	Identifier	dst		1039695	0					
ANR	1041311	Argument	arg2		1039695	1					
ANR	1041312	Identifier	arg2		1039695	0					
ANR	1041313	Label	case SLJIT_MOV_UB :	691:1:21601:21618	1039695	11	True				
ANR	1041314	Identifier	SLJIT_MOV_UB		1039695	0					
ANR	1041315	Label	case SLJIT_MOVU_UB :	692:1:21621:21639	1039695	12	True				
ANR	1041316	Identifier	SLJIT_MOVU_UB		1039695	0					
ANR	1041317	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	693:2:21643:21697	1039695	13	True				
ANR	1041318	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1041319	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041320	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041321	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	1					
ANR	1041322	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0					
ANR	1041323	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1041324	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1041325	UnaryOperator	!		1039695	0					
ANR	1041326	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041327	Identifier	flags		1039695	0					
ANR	1041328	Identifier	SET_FLAGS		1039695	1					
ANR	1041329	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1041330	Identifier	arg1		1039695	0					
ANR	1041331	Identifier	TMP_REG1		1039695	1					
ANR	1041332	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1039695	14					
ANR	1041333	Condition	"IS_2_LO_REGS ( dst , arg2 )"	694:6:21705:21727	1039695	0	True				
ANR	1041334	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	0					
ANR	1041335	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041336	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041337	ArgumentList	dst		1039695	1					
ANR	1041338	Argument	dst		1039695	0					
ANR	1041339	Identifier	dst		1039695	0					
ANR	1041340	Argument	arg2		1039695	1					
ANR	1041341	Identifier	arg2		1039695	0					
ANR	1041342	ReturnStatement	"return push_inst16 ( compiler , UXTB | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	695:3:21733:21790	1039695	1	True				
ANR	1041343	CallExpression	"push_inst16 ( compiler , UXTB | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041344	Callee	push_inst16		1039695	0					
ANR	1041345	Identifier	push_inst16		1039695	0					
ANR	1041346	ArgumentList	compiler		1039695	1					
ANR	1041347	Argument	compiler		1039695	0					
ANR	1041348	Identifier	compiler		1039695	0					
ANR	1041349	Argument	UXTB | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041350	InclusiveOrExpression	UXTB | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041351	Identifier	UXTB		1039695	0					
ANR	1041352	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041353	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041354	Callee	RD3		1039695	0					
ANR	1041355	Identifier	RD3		1039695	0					
ANR	1041356	ArgumentList	dst		1039695	1					
ANR	1041357	Argument	dst		1039695	0					
ANR	1041358	Identifier	dst		1039695	0					
ANR	1041359	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041360	Callee	RN3		1039695	0					
ANR	1041361	Identifier	RN3		1039695	0					
ANR	1041362	ArgumentList	arg2		1039695	1					
ANR	1041363	Argument	arg2		1039695	0					
ANR	1041364	Identifier	arg2		1039695	0					
ANR	1041365	ReturnStatement	"return push_inst32 ( compiler , UXTB_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	696:2:21794:21853	1039695	15	True				
ANR	1041366	CallExpression	"push_inst32 ( compiler , UXTB_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041367	Callee	push_inst32		1039695	0					
ANR	1041368	Identifier	push_inst32		1039695	0					
ANR	1041369	ArgumentList	compiler		1039695	1					
ANR	1041370	Argument	compiler		1039695	0					
ANR	1041371	Identifier	compiler		1039695	0					
ANR	1041372	Argument	UXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041373	InclusiveOrExpression	UXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041374	Identifier	UXTB_W		1039695	0					
ANR	1041375	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041376	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041377	Callee	RD4		1039695	0					
ANR	1041378	Identifier	RD4		1039695	0					
ANR	1041379	ArgumentList	dst		1039695	1					
ANR	1041380	Argument	dst		1039695	0					
ANR	1041381	Identifier	dst		1039695	0					
ANR	1041382	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041383	Callee	RM4		1039695	0					
ANR	1041384	Identifier	RM4		1039695	0					
ANR	1041385	ArgumentList	arg2		1039695	1					
ANR	1041386	Argument	arg2		1039695	0					
ANR	1041387	Identifier	arg2		1039695	0					
ANR	1041388	Label	case SLJIT_MOV_SB :	697:1:21856:21873	1039695	16	True				
ANR	1041389	Identifier	SLJIT_MOV_SB		1039695	0					
ANR	1041390	Label	case SLJIT_MOVU_SB :	698:1:21876:21894	1039695	17	True				
ANR	1041391	Identifier	SLJIT_MOVU_SB		1039695	0					
ANR	1041392	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	699:2:21898:21952	1039695	18	True				
ANR	1041393	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1041394	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041395	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041396	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	1					
ANR	1041397	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0					
ANR	1041398	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1041399	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1041400	UnaryOperator	!		1039695	0					
ANR	1041401	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041402	Identifier	flags		1039695	0					
ANR	1041403	Identifier	SET_FLAGS		1039695	1					
ANR	1041404	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1041405	Identifier	arg1		1039695	0					
ANR	1041406	Identifier	TMP_REG1		1039695	1					
ANR	1041407	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1039695	19					
ANR	1041408	Condition	"IS_2_LO_REGS ( dst , arg2 )"	700:6:21960:21982	1039695	0	True				
ANR	1041409	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	0					
ANR	1041410	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041411	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041412	ArgumentList	dst		1039695	1					
ANR	1041413	Argument	dst		1039695	0					
ANR	1041414	Identifier	dst		1039695	0					
ANR	1041415	Argument	arg2		1039695	1					
ANR	1041416	Identifier	arg2		1039695	0					
ANR	1041417	ReturnStatement	"return push_inst16 ( compiler , SXTB | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	701:3:21988:22045	1039695	1	True				
ANR	1041418	CallExpression	"push_inst16 ( compiler , SXTB | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041419	Callee	push_inst16		1039695	0					
ANR	1041420	Identifier	push_inst16		1039695	0					
ANR	1041421	ArgumentList	compiler		1039695	1					
ANR	1041422	Argument	compiler		1039695	0					
ANR	1041423	Identifier	compiler		1039695	0					
ANR	1041424	Argument	SXTB | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041425	InclusiveOrExpression	SXTB | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041426	Identifier	SXTB		1039695	0					
ANR	1041427	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041428	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041429	Callee	RD3		1039695	0					
ANR	1041430	Identifier	RD3		1039695	0					
ANR	1041431	ArgumentList	dst		1039695	1					
ANR	1041432	Argument	dst		1039695	0					
ANR	1041433	Identifier	dst		1039695	0					
ANR	1041434	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041435	Callee	RN3		1039695	0					
ANR	1041436	Identifier	RN3		1039695	0					
ANR	1041437	ArgumentList	arg2		1039695	1					
ANR	1041438	Argument	arg2		1039695	0					
ANR	1041439	Identifier	arg2		1039695	0					
ANR	1041440	ReturnStatement	"return push_inst32 ( compiler , SXTB_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	702:2:22049:22108	1039695	20	True				
ANR	1041441	CallExpression	"push_inst32 ( compiler , SXTB_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041442	Callee	push_inst32		1039695	0					
ANR	1041443	Identifier	push_inst32		1039695	0					
ANR	1041444	ArgumentList	compiler		1039695	1					
ANR	1041445	Argument	compiler		1039695	0					
ANR	1041446	Identifier	compiler		1039695	0					
ANR	1041447	Argument	SXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041448	InclusiveOrExpression	SXTB_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041449	Identifier	SXTB_W		1039695	0					
ANR	1041450	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041451	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041452	Callee	RD4		1039695	0					
ANR	1041453	Identifier	RD4		1039695	0					
ANR	1041454	ArgumentList	dst		1039695	1					
ANR	1041455	Argument	dst		1039695	0					
ANR	1041456	Identifier	dst		1039695	0					
ANR	1041457	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041458	Callee	RM4		1039695	0					
ANR	1041459	Identifier	RM4		1039695	0					
ANR	1041460	ArgumentList	arg2		1039695	1					
ANR	1041461	Argument	arg2		1039695	0					
ANR	1041462	Identifier	arg2		1039695	0					
ANR	1041463	Label	case SLJIT_MOV_UH :	703:1:22111:22128	1039695	21	True				
ANR	1041464	Identifier	SLJIT_MOV_UH		1039695	0					
ANR	1041465	Label	case SLJIT_MOVU_UH :	704:1:22131:22149	1039695	22	True				
ANR	1041466	Identifier	SLJIT_MOVU_UH		1039695	0					
ANR	1041467	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	705:2:22153:22207	1039695	23	True				
ANR	1041468	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1041469	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041470	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041471	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	1					
ANR	1041472	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0					
ANR	1041473	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1041474	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1041475	UnaryOperator	!		1039695	0					
ANR	1041476	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041477	Identifier	flags		1039695	0					
ANR	1041478	Identifier	SET_FLAGS		1039695	1					
ANR	1041479	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1041480	Identifier	arg1		1039695	0					
ANR	1041481	Identifier	TMP_REG1		1039695	1					
ANR	1041482	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1039695	24					
ANR	1041483	Condition	"IS_2_LO_REGS ( dst , arg2 )"	706:6:22215:22237	1039695	0	True				
ANR	1041484	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	0					
ANR	1041485	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041486	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041487	ArgumentList	dst		1039695	1					
ANR	1041488	Argument	dst		1039695	0					
ANR	1041489	Identifier	dst		1039695	0					
ANR	1041490	Argument	arg2		1039695	1					
ANR	1041491	Identifier	arg2		1039695	0					
ANR	1041492	ReturnStatement	"return push_inst16 ( compiler , UXTH | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	707:3:22243:22300	1039695	1	True				
ANR	1041493	CallExpression	"push_inst16 ( compiler , UXTH | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041494	Callee	push_inst16		1039695	0					
ANR	1041495	Identifier	push_inst16		1039695	0					
ANR	1041496	ArgumentList	compiler		1039695	1					
ANR	1041497	Argument	compiler		1039695	0					
ANR	1041498	Identifier	compiler		1039695	0					
ANR	1041499	Argument	UXTH | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041500	InclusiveOrExpression	UXTH | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041501	Identifier	UXTH		1039695	0					
ANR	1041502	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041503	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041504	Callee	RD3		1039695	0					
ANR	1041505	Identifier	RD3		1039695	0					
ANR	1041506	ArgumentList	dst		1039695	1					
ANR	1041507	Argument	dst		1039695	0					
ANR	1041508	Identifier	dst		1039695	0					
ANR	1041509	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041510	Callee	RN3		1039695	0					
ANR	1041511	Identifier	RN3		1039695	0					
ANR	1041512	ArgumentList	arg2		1039695	1					
ANR	1041513	Argument	arg2		1039695	0					
ANR	1041514	Identifier	arg2		1039695	0					
ANR	1041515	ReturnStatement	"return push_inst32 ( compiler , UXTH_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	708:2:22304:22363	1039695	25	True				
ANR	1041516	CallExpression	"push_inst32 ( compiler , UXTH_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041517	Callee	push_inst32		1039695	0					
ANR	1041518	Identifier	push_inst32		1039695	0					
ANR	1041519	ArgumentList	compiler		1039695	1					
ANR	1041520	Argument	compiler		1039695	0					
ANR	1041521	Identifier	compiler		1039695	0					
ANR	1041522	Argument	UXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041523	InclusiveOrExpression	UXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041524	Identifier	UXTH_W		1039695	0					
ANR	1041525	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041526	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041527	Callee	RD4		1039695	0					
ANR	1041528	Identifier	RD4		1039695	0					
ANR	1041529	ArgumentList	dst		1039695	1					
ANR	1041530	Argument	dst		1039695	0					
ANR	1041531	Identifier	dst		1039695	0					
ANR	1041532	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041533	Callee	RM4		1039695	0					
ANR	1041534	Identifier	RM4		1039695	0					
ANR	1041535	ArgumentList	arg2		1039695	1					
ANR	1041536	Argument	arg2		1039695	0					
ANR	1041537	Identifier	arg2		1039695	0					
ANR	1041538	Label	case SLJIT_MOV_SH :	709:1:22366:22383	1039695	26	True				
ANR	1041539	Identifier	SLJIT_MOV_SH		1039695	0					
ANR	1041540	Label	case SLJIT_MOVU_SH :	710:1:22386:22404	1039695	27	True				
ANR	1041541	Identifier	SLJIT_MOVU_SH		1039695	0					
ANR	1041542	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )	711:2:22408:22462	1039695	28	True				
ANR	1041543	CallExpression	SLJIT_ASSERT ( ! ( flags & SET_FLAGS ) && arg1 == TMP_REG1 )		1039695	0					
ANR	1041544	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041545	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041546	ArgumentList	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	1					
ANR	1041547	Argument	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0					
ANR	1041548	AndExpression	! ( flags & SET_FLAGS ) && arg1 == TMP_REG1		1039695	0		&&			
ANR	1041549	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1041550	UnaryOperator	!		1039695	0					
ANR	1041551	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041552	Identifier	flags		1039695	0					
ANR	1041553	Identifier	SET_FLAGS		1039695	1					
ANR	1041554	EqualityExpression	arg1 == TMP_REG1		1039695	1		==			
ANR	1041555	Identifier	arg1		1039695	0					
ANR	1041556	Identifier	TMP_REG1		1039695	1					
ANR	1041557	IfStatement	"if ( IS_2_LO_REGS ( dst , arg2 ) )"		1039695	29					
ANR	1041558	Condition	"IS_2_LO_REGS ( dst , arg2 )"	712:6:22470:22492	1039695	0	True				
ANR	1041559	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	0					
ANR	1041560	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041561	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041562	ArgumentList	dst		1039695	1					
ANR	1041563	Argument	dst		1039695	0					
ANR	1041564	Identifier	dst		1039695	0					
ANR	1041565	Argument	arg2		1039695	1					
ANR	1041566	Identifier	arg2		1039695	0					
ANR	1041567	ReturnStatement	"return push_inst16 ( compiler , SXTH | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	713:3:22498:22555	1039695	1	True				
ANR	1041568	CallExpression	"push_inst16 ( compiler , SXTH | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041569	Callee	push_inst16		1039695	0					
ANR	1041570	Identifier	push_inst16		1039695	0					
ANR	1041571	ArgumentList	compiler		1039695	1					
ANR	1041572	Argument	compiler		1039695	0					
ANR	1041573	Identifier	compiler		1039695	0					
ANR	1041574	Argument	SXTH | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041575	InclusiveOrExpression	SXTH | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041576	Identifier	SXTH		1039695	0					
ANR	1041577	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041578	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041579	Callee	RD3		1039695	0					
ANR	1041580	Identifier	RD3		1039695	0					
ANR	1041581	ArgumentList	dst		1039695	1					
ANR	1041582	Argument	dst		1039695	0					
ANR	1041583	Identifier	dst		1039695	0					
ANR	1041584	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041585	Callee	RN3		1039695	0					
ANR	1041586	Identifier	RN3		1039695	0					
ANR	1041587	ArgumentList	arg2		1039695	1					
ANR	1041588	Argument	arg2		1039695	0					
ANR	1041589	Identifier	arg2		1039695	0					
ANR	1041590	ReturnStatement	"return push_inst32 ( compiler , SXTH_W | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	714:2:22559:22618	1039695	30	True				
ANR	1041591	CallExpression	"push_inst32 ( compiler , SXTH_W | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041592	Callee	push_inst32		1039695	0					
ANR	1041593	Identifier	push_inst32		1039695	0					
ANR	1041594	ArgumentList	compiler		1039695	1					
ANR	1041595	Argument	compiler		1039695	0					
ANR	1041596	Identifier	compiler		1039695	0					
ANR	1041597	Argument	SXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041598	InclusiveOrExpression	SXTH_W | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041599	Identifier	SXTH_W		1039695	0					
ANR	1041600	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041601	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041602	Callee	RD4		1039695	0					
ANR	1041603	Identifier	RD4		1039695	0					
ANR	1041604	ArgumentList	dst		1039695	1					
ANR	1041605	Argument	dst		1039695	0					
ANR	1041606	Identifier	dst		1039695	0					
ANR	1041607	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041608	Callee	RM4		1039695	0					
ANR	1041609	Identifier	RM4		1039695	0					
ANR	1041610	ArgumentList	arg2		1039695	1					
ANR	1041611	Argument	arg2		1039695	0					
ANR	1041612	Identifier	arg2		1039695	0					
ANR	1041613	Label	case SLJIT_NOT :	715:1:22621:22635	1039695	31	True				
ANR	1041614	Identifier	SLJIT_NOT		1039695	0					
ANR	1041615	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	716:2:22639:22669	1039695	32	True				
ANR	1041616	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1039695	0					
ANR	1041617	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041618	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041619	ArgumentList	arg1 == TMP_REG1		1039695	1					
ANR	1041620	Argument	arg1 == TMP_REG1		1039695	0					
ANR	1041621	EqualityExpression	arg1 == TMP_REG1		1039695	0		==			
ANR	1041622	Identifier	arg1		1039695	0					
ANR	1041623	Identifier	TMP_REG1		1039695	1					
ANR	1041624	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	33					
ANR	1041625	Condition	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	717:6:22677:22724	1039695	0	True				
ANR	1041626	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1041627	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041628	UnaryOperator	!		1039695	0					
ANR	1041629	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041630	Identifier	flags		1039695	0					
ANR	1041631	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041632	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1041633	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041634	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041635	ArgumentList	dst		1039695	1					
ANR	1041636	Argument	dst		1039695	0					
ANR	1041637	Identifier	dst		1039695	0					
ANR	1041638	Argument	arg2		1039695	1					
ANR	1041639	Identifier	arg2		1039695	0					
ANR	1041640	ReturnStatement	"return push_inst16 ( compiler , MVNS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	718:3:22730:22787	1039695	1	True				
ANR	1041641	CallExpression	"push_inst16 ( compiler , MVNS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041642	Callee	push_inst16		1039695	0					
ANR	1041643	Identifier	push_inst16		1039695	0					
ANR	1041644	ArgumentList	compiler		1039695	1					
ANR	1041645	Argument	compiler		1039695	0					
ANR	1041646	Identifier	compiler		1039695	0					
ANR	1041647	Argument	MVNS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041648	InclusiveOrExpression	MVNS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041649	Identifier	MVNS		1039695	0					
ANR	1041650	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041651	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041652	Callee	RD3		1039695	0					
ANR	1041653	Identifier	RD3		1039695	0					
ANR	1041654	ArgumentList	dst		1039695	1					
ANR	1041655	Argument	dst		1039695	0					
ANR	1041656	Identifier	dst		1039695	0					
ANR	1041657	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041658	Callee	RN3		1039695	0					
ANR	1041659	Identifier	RN3		1039695	0					
ANR	1041660	ArgumentList	arg2		1039695	1					
ANR	1041661	Argument	arg2		1039695	0					
ANR	1041662	Identifier	arg2		1039695	0					
ANR	1041663	ReturnStatement	"return push_inst32 ( compiler , MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 ) ) ;"	719:2:22791:22871	1039695	34	True				
ANR	1041664	CallExpression	"push_inst32 ( compiler , MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041665	Callee	push_inst32		1039695	0					
ANR	1041666	Identifier	push_inst32		1039695	0					
ANR	1041667	ArgumentList	compiler		1039695	1					
ANR	1041668	Argument	compiler		1039695	0					
ANR	1041669	Identifier	compiler		1039695	0					
ANR	1041670	Argument	MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041671	InclusiveOrExpression	MVN_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041672	Identifier	MVN_W		1039695	0					
ANR	1041673	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041674	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041675	Identifier	flags		1039695	0					
ANR	1041676	Identifier	SET_FLAGS		1039695	1					
ANR	1041677	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041678	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041679	Callee	RD4		1039695	0					
ANR	1041680	Identifier	RD4		1039695	0					
ANR	1041681	ArgumentList	dst		1039695	1					
ANR	1041682	Argument	dst		1039695	0					
ANR	1041683	Identifier	dst		1039695	0					
ANR	1041684	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041685	Callee	RM4		1039695	0					
ANR	1041686	Identifier	RM4		1039695	0					
ANR	1041687	ArgumentList	arg2		1039695	1					
ANR	1041688	Argument	arg2		1039695	0					
ANR	1041689	Identifier	arg2		1039695	0					
ANR	1041690	Label	case SLJIT_CLZ :	720:1:22874:22888	1039695	35	True				
ANR	1041691	Identifier	SLJIT_CLZ		1039695	0					
ANR	1041692	ExpressionStatement	SLJIT_ASSERT ( arg1 == TMP_REG1 )	721:2:22892:22922	1039695	36	True				
ANR	1041693	CallExpression	SLJIT_ASSERT ( arg1 == TMP_REG1 )		1039695	0					
ANR	1041694	Callee	SLJIT_ASSERT		1039695	0					
ANR	1041695	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1041696	ArgumentList	arg1 == TMP_REG1		1039695	1					
ANR	1041697	Argument	arg1 == TMP_REG1		1039695	0					
ANR	1041698	EqualityExpression	arg1 == TMP_REG1		1039695	0		==			
ANR	1041699	Identifier	arg1		1039695	0					
ANR	1041700	Identifier	TMP_REG1		1039695	1					
ANR	1041701	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) ) )"	722:2:22926:22996	1039695	37	True				
ANR	1041702	CallExpression	"FAIL_IF ( push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) ) )"		1039695	0					
ANR	1041703	Callee	FAIL_IF		1039695	0					
ANR	1041704	Identifier	FAIL_IF		1039695	0					
ANR	1041705	ArgumentList	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	1					
ANR	1041706	Argument	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041707	CallExpression	"push_inst32 ( compiler , CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041708	Callee	push_inst32		1039695	0					
ANR	1041709	Identifier	push_inst32		1039695	0					
ANR	1041710	ArgumentList	compiler		1039695	1					
ANR	1041711	Argument	compiler		1039695	0					
ANR	1041712	Identifier	compiler		1039695	0					
ANR	1041713	Argument	CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	1					
ANR	1041714	InclusiveOrExpression	CLZ | RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041715	Identifier	CLZ		1039695	0					
ANR	1041716	InclusiveOrExpression	RN4 ( arg2 ) | RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041717	CallExpression	RN4 ( arg2 )		1039695	0					
ANR	1041718	Callee	RN4		1039695	0					
ANR	1041719	Identifier	RN4		1039695	0					
ANR	1041720	ArgumentList	arg2		1039695	1					
ANR	1041721	Argument	arg2		1039695	0					
ANR	1041722	Identifier	arg2		1039695	0					
ANR	1041723	InclusiveOrExpression	RD4 ( dst ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041724	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041725	Callee	RD4		1039695	0					
ANR	1041726	Identifier	RD4		1039695	0					
ANR	1041727	ArgumentList	dst		1039695	1					
ANR	1041728	Argument	dst		1039695	0					
ANR	1041729	Identifier	dst		1039695	0					
ANR	1041730	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041731	Callee	RM4		1039695	0					
ANR	1041732	Identifier	RM4		1039695	0					
ANR	1041733	ArgumentList	arg2		1039695	1					
ANR	1041734	Argument	arg2		1039695	0					
ANR	1041735	Identifier	arg2		1039695	0					
ANR	1041736	IfStatement	if ( flags & SET_FLAGS )		1039695	38					
ANR	1041737	Condition	flags & SET_FLAGS	723:6:23004:23020	1039695	0	True				
ANR	1041738	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041739	Identifier	flags		1039695	0					
ANR	1041740	Identifier	SET_FLAGS		1039695	1					
ANR	1041741	CompoundStatement		212:25:7648:7648	1039695	1					
ANR	1041742	IfStatement	if ( reg_map [ dst ] <= 7 )		1039695	0					
ANR	1041743	Condition	reg_map [ dst ] <= 7	724:7:23032:23048	1039695	0	True				
ANR	1041744	RelationalExpression	reg_map [ dst ] <= 7		1039695	0		<=			
ANR	1041745	ArrayIndexing	reg_map [ dst ]		1039695	0					
ANR	1041746	Identifier	reg_map		1039695	0					
ANR	1041747	Identifier	dst		1039695	1					
ANR	1041748	PrimaryExpression	7		1039695	1					
ANR	1041749	ReturnStatement	"return push_inst16 ( compiler , CMPI | RDN3 ( dst ) ) ;"	725:4:23055:23101	1039695	1	True				
ANR	1041750	CallExpression	"push_inst16 ( compiler , CMPI | RDN3 ( dst ) )"		1039695	0					
ANR	1041751	Callee	push_inst16		1039695	0					
ANR	1041752	Identifier	push_inst16		1039695	0					
ANR	1041753	ArgumentList	compiler		1039695	1					
ANR	1041754	Argument	compiler		1039695	0					
ANR	1041755	Identifier	compiler		1039695	0					
ANR	1041756	Argument	CMPI | RDN3 ( dst )		1039695	1					
ANR	1041757	InclusiveOrExpression	CMPI | RDN3 ( dst )		1039695	0		|			
ANR	1041758	Identifier	CMPI		1039695	0					
ANR	1041759	CallExpression	RDN3 ( dst )		1039695	1					
ANR	1041760	Callee	RDN3		1039695	0					
ANR	1041761	Identifier	RDN3		1039695	0					
ANR	1041762	ArgumentList	dst		1039695	1					
ANR	1041763	Argument	dst		1039695	0					
ANR	1041764	Identifier	dst		1039695	0					
ANR	1041765	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst ) ) ;"	726:3:23106:23176	1039695	1	True				
ANR	1041766	CallExpression	"push_inst32 ( compiler , ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst ) )"		1039695	0					
ANR	1041767	Callee	push_inst32		1039695	0					
ANR	1041768	Identifier	push_inst32		1039695	0					
ANR	1041769	ArgumentList	compiler		1039695	1					
ANR	1041770	Argument	compiler		1039695	0					
ANR	1041771	Identifier	compiler		1039695	0					
ANR	1041772	Argument	ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1039695	1					
ANR	1041773	InclusiveOrExpression	ADD_WI | SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1039695	0		|			
ANR	1041774	Identifier	ADD_WI		1039695	0					
ANR	1041775	InclusiveOrExpression	SET_FLAGS | RN4 ( dst ) | RD4 ( dst )		1039695	1		|			
ANR	1041776	Identifier	SET_FLAGS		1039695	0					
ANR	1041777	InclusiveOrExpression	RN4 ( dst ) | RD4 ( dst )		1039695	1		|			
ANR	1041778	CallExpression	RN4 ( dst )		1039695	0					
ANR	1041779	Callee	RN4		1039695	0					
ANR	1041780	Identifier	RN4		1039695	0					
ANR	1041781	ArgumentList	dst		1039695	1					
ANR	1041782	Argument	dst		1039695	0					
ANR	1041783	Identifier	dst		1039695	0					
ANR	1041784	CallExpression	RD4 ( dst )		1039695	1					
ANR	1041785	Callee	RD4		1039695	0					
ANR	1041786	Identifier	RD4		1039695	0					
ANR	1041787	ArgumentList	dst		1039695	1					
ANR	1041788	Argument	dst		1039695	0					
ANR	1041789	Identifier	dst		1039695	0					
ANR	1041790	ReturnStatement	return SLJIT_SUCCESS ;	728:2:23184:23204	1039695	39	True				
ANR	1041791	Identifier	SLJIT_SUCCESS		1039695	0					
ANR	1041792	Label	case SLJIT_ADD :	729:1:23207:23221	1039695	40	True				
ANR	1041793	Identifier	SLJIT_ADD		1039695	0					
ANR	1041794	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 ) )"		1039695	41					
ANR	1041795	Condition	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"	730:6:23229:23282	1039695	0	True				
ANR	1041796	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"		1039695	0		&&			
ANR	1041797	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041798	UnaryOperator	!		1039695	0					
ANR	1041799	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041800	Identifier	flags		1039695	0					
ANR	1041801	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041802	CallExpression	"IS_3_LO_REGS ( dst , arg1 , arg2 )"		1039695	1					
ANR	1041803	Callee	IS_3_LO_REGS		1039695	0					
ANR	1041804	Identifier	IS_3_LO_REGS		1039695	0					
ANR	1041805	ArgumentList	dst		1039695	1					
ANR	1041806	Argument	dst		1039695	0					
ANR	1041807	Identifier	dst		1039695	0					
ANR	1041808	Argument	arg1		1039695	1					
ANR	1041809	Identifier	arg1		1039695	0					
ANR	1041810	Argument	arg2		1039695	2					
ANR	1041811	Identifier	arg2		1039695	0					
ANR	1041812	ReturnStatement	"return push_inst16 ( compiler , ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) ) ;"	731:3:23288:23357	1039695	1	True				
ANR	1041813	CallExpression	"push_inst16 ( compiler , ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) )"		1039695	0					
ANR	1041814	Callee	push_inst16		1039695	0					
ANR	1041815	Identifier	push_inst16		1039695	0					
ANR	1041816	ArgumentList	compiler		1039695	1					
ANR	1041817	Argument	compiler		1039695	0					
ANR	1041818	Identifier	compiler		1039695	0					
ANR	1041819	Argument	ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1					
ANR	1041820	InclusiveOrExpression	ADDS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	0		|			
ANR	1041821	Identifier	ADDS		1039695	0					
ANR	1041822	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1		|			
ANR	1041823	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041824	Callee	RD3		1039695	0					
ANR	1041825	Identifier	RD3		1039695	0					
ANR	1041826	ArgumentList	dst		1039695	1					
ANR	1041827	Argument	dst		1039695	0					
ANR	1041828	Identifier	dst		1039695	0					
ANR	1041829	InclusiveOrExpression	RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1		|			
ANR	1041830	CallExpression	RN3 ( arg1 )		1039695	0					
ANR	1041831	Callee	RN3		1039695	0					
ANR	1041832	Identifier	RN3		1039695	0					
ANR	1041833	ArgumentList	arg1		1039695	1					
ANR	1041834	Argument	arg1		1039695	0					
ANR	1041835	Identifier	arg1		1039695	0					
ANR	1041836	CallExpression	RM3 ( arg2 )		1039695	1					
ANR	1041837	Callee	RM3		1039695	0					
ANR	1041838	Identifier	RM3		1039695	0					
ANR	1041839	ArgumentList	arg2		1039695	1					
ANR	1041840	Argument	arg2		1039695	0					
ANR	1041841	Identifier	arg2		1039695	0					
ANR	1041842	IfStatement	if ( dst == arg1 && ! ( flags & SET_FLAGS ) )		1039695	42					
ANR	1041843	Condition	dst == arg1 && ! ( flags & SET_FLAGS )	732:6:23365:23399	1039695	0	True				
ANR	1041844	AndExpression	dst == arg1 && ! ( flags & SET_FLAGS )		1039695	0		&&			
ANR	1041845	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1041846	Identifier	dst		1039695	0					
ANR	1041847	Identifier	arg1		1039695	1					
ANR	1041848	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	1					
ANR	1041849	UnaryOperator	!		1039695	0					
ANR	1041850	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1041851	Identifier	flags		1039695	0					
ANR	1041852	Identifier	SET_FLAGS		1039695	1					
ANR	1041853	ReturnStatement	"return push_inst16 ( compiler , ADD | SET_REGS44 ( dst , arg2 ) ) ;"	733:3:23405:23462	1039695	1	True				
ANR	1041854	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( dst , arg2 ) )"		1039695	0					
ANR	1041855	Callee	push_inst16		1039695	0					
ANR	1041856	Identifier	push_inst16		1039695	0					
ANR	1041857	ArgumentList	compiler		1039695	1					
ANR	1041858	Argument	compiler		1039695	0					
ANR	1041859	Identifier	compiler		1039695	0					
ANR	1041860	Argument	"ADD | SET_REGS44 ( dst , arg2 )"		1039695	1					
ANR	1041861	InclusiveOrExpression	"ADD | SET_REGS44 ( dst , arg2 )"		1039695	0		|			
ANR	1041862	Identifier	ADD		1039695	0					
ANR	1041863	CallExpression	"SET_REGS44 ( dst , arg2 )"		1039695	1					
ANR	1041864	Callee	SET_REGS44		1039695	0					
ANR	1041865	Identifier	SET_REGS44		1039695	0					
ANR	1041866	ArgumentList	dst		1039695	1					
ANR	1041867	Argument	dst		1039695	0					
ANR	1041868	Identifier	dst		1039695	0					
ANR	1041869	Argument	arg2		1039695	1					
ANR	1041870	Identifier	arg2		1039695	0					
ANR	1041871	ReturnStatement	"return push_inst32 ( compiler , ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	734:2:23466:23558	1039695	43	True				
ANR	1041872	CallExpression	"push_inst32 ( compiler , ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041873	Callee	push_inst32		1039695	0					
ANR	1041874	Identifier	push_inst32		1039695	0					
ANR	1041875	ArgumentList	compiler		1039695	1					
ANR	1041876	Argument	compiler		1039695	0					
ANR	1041877	Identifier	compiler		1039695	0					
ANR	1041878	Argument	ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1041879	InclusiveOrExpression	ADD_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041880	Identifier	ADD_W		1039695	0					
ANR	1041881	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041882	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041883	Identifier	flags		1039695	0					
ANR	1041884	Identifier	SET_FLAGS		1039695	1					
ANR	1041885	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041886	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041887	Callee	RD4		1039695	0					
ANR	1041888	Identifier	RD4		1039695	0					
ANR	1041889	ArgumentList	dst		1039695	1					
ANR	1041890	Argument	dst		1039695	0					
ANR	1041891	Identifier	dst		1039695	0					
ANR	1041892	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041893	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1041894	Callee	RN4		1039695	0					
ANR	1041895	Identifier	RN4		1039695	0					
ANR	1041896	ArgumentList	arg1		1039695	1					
ANR	1041897	Argument	arg1		1039695	0					
ANR	1041898	Identifier	arg1		1039695	0					
ANR	1041899	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041900	Callee	RM4		1039695	0					
ANR	1041901	Identifier	RM4		1039695	0					
ANR	1041902	ArgumentList	arg2		1039695	1					
ANR	1041903	Argument	arg2		1039695	0					
ANR	1041904	Identifier	arg2		1039695	0					
ANR	1041905	Label	case SLJIT_ADDC :	735:1:23561:23576	1039695	44	True				
ANR	1041906	Identifier	SLJIT_ADDC		1039695	0					
ANR	1041907	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	45					
ANR	1041908	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	736:6:23584:23646	1039695	0	True				
ANR	1041909	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1041910	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1041911	Identifier	dst		1039695	0					
ANR	1041912	Identifier	arg1		1039695	1					
ANR	1041913	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1041914	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041915	UnaryOperator	!		1039695	0					
ANR	1041916	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041917	Identifier	flags		1039695	0					
ANR	1041918	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041919	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1041920	Callee	IS_2_LO_REGS		1039695	0					
ANR	1041921	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1041922	ArgumentList	dst		1039695	1					
ANR	1041923	Argument	dst		1039695	0					
ANR	1041924	Identifier	dst		1039695	0					
ANR	1041925	Argument	arg2		1039695	1					
ANR	1041926	Identifier	arg2		1039695	0					
ANR	1041927	ReturnStatement	"return push_inst16 ( compiler , ADCS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	737:3:23652:23709	1039695	1	True				
ANR	1041928	CallExpression	"push_inst16 ( compiler , ADCS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1041929	Callee	push_inst16		1039695	0					
ANR	1041930	Identifier	push_inst16		1039695	0					
ANR	1041931	ArgumentList	compiler		1039695	1					
ANR	1041932	Argument	compiler		1039695	0					
ANR	1041933	Identifier	compiler		1039695	0					
ANR	1041934	Argument	ADCS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1041935	InclusiveOrExpression	ADCS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1041936	Identifier	ADCS		1039695	0					
ANR	1041937	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1041938	CallExpression	RD3 ( dst )		1039695	0					
ANR	1041939	Callee	RD3		1039695	0					
ANR	1041940	Identifier	RD3		1039695	0					
ANR	1041941	ArgumentList	dst		1039695	1					
ANR	1041942	Argument	dst		1039695	0					
ANR	1041943	Identifier	dst		1039695	0					
ANR	1041944	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1041945	Callee	RN3		1039695	0					
ANR	1041946	Identifier	RN3		1039695	0					
ANR	1041947	ArgumentList	arg2		1039695	1					
ANR	1041948	Argument	arg2		1039695	0					
ANR	1041949	Identifier	arg2		1039695	0					
ANR	1041950	ReturnStatement	"return push_inst32 ( compiler , ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	738:2:23713:23805	1039695	46	True				
ANR	1041951	CallExpression	"push_inst32 ( compiler , ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1041952	Callee	push_inst32		1039695	0					
ANR	1041953	Identifier	push_inst32		1039695	0					
ANR	1041954	ArgumentList	compiler		1039695	1					
ANR	1041955	Argument	compiler		1039695	0					
ANR	1041956	Identifier	compiler		1039695	0					
ANR	1041957	Argument	ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1041958	InclusiveOrExpression	ADC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1041959	Identifier	ADC_W		1039695	0					
ANR	1041960	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041961	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1041962	Identifier	flags		1039695	0					
ANR	1041963	Identifier	SET_FLAGS		1039695	1					
ANR	1041964	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041965	CallExpression	RD4 ( dst )		1039695	0					
ANR	1041966	Callee	RD4		1039695	0					
ANR	1041967	Identifier	RD4		1039695	0					
ANR	1041968	ArgumentList	dst		1039695	1					
ANR	1041969	Argument	dst		1039695	0					
ANR	1041970	Identifier	dst		1039695	0					
ANR	1041971	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1041972	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1041973	Callee	RN4		1039695	0					
ANR	1041974	Identifier	RN4		1039695	0					
ANR	1041975	ArgumentList	arg1		1039695	1					
ANR	1041976	Argument	arg1		1039695	0					
ANR	1041977	Identifier	arg1		1039695	0					
ANR	1041978	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1041979	Callee	RM4		1039695	0					
ANR	1041980	Identifier	RM4		1039695	0					
ANR	1041981	ArgumentList	arg2		1039695	1					
ANR	1041982	Argument	arg2		1039695	0					
ANR	1041983	Identifier	arg2		1039695	0					
ANR	1041984	Label	case SLJIT_SUB :	739:1:23808:23822	1039695	47	True				
ANR	1041985	Identifier	SLJIT_SUB		1039695	0					
ANR	1041986	IfStatement	"if ( ! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 ) )"		1039695	48					
ANR	1041987	Condition	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"	740:6:23830:23883	1039695	0	True				
ANR	1041988	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_3_LO_REGS ( dst , arg1 , arg2 )"		1039695	0		&&			
ANR	1041989	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1041990	UnaryOperator	!		1039695	0					
ANR	1041991	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1041992	Identifier	flags		1039695	0					
ANR	1041993	Identifier	KEEP_FLAGS		1039695	1					
ANR	1041994	CallExpression	"IS_3_LO_REGS ( dst , arg1 , arg2 )"		1039695	1					
ANR	1041995	Callee	IS_3_LO_REGS		1039695	0					
ANR	1041996	Identifier	IS_3_LO_REGS		1039695	0					
ANR	1041997	ArgumentList	dst		1039695	1					
ANR	1041998	Argument	dst		1039695	0					
ANR	1041999	Identifier	dst		1039695	0					
ANR	1042000	Argument	arg1		1039695	1					
ANR	1042001	Identifier	arg1		1039695	0					
ANR	1042002	Argument	arg2		1039695	2					
ANR	1042003	Identifier	arg2		1039695	0					
ANR	1042004	ReturnStatement	"return push_inst16 ( compiler , SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) ) ;"	741:3:23889:23958	1039695	1	True				
ANR	1042005	CallExpression	"push_inst16 ( compiler , SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 ) )"		1039695	0					
ANR	1042006	Callee	push_inst16		1039695	0					
ANR	1042007	Identifier	push_inst16		1039695	0					
ANR	1042008	ArgumentList	compiler		1039695	1					
ANR	1042009	Argument	compiler		1039695	0					
ANR	1042010	Identifier	compiler		1039695	0					
ANR	1042011	Argument	SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1					
ANR	1042012	InclusiveOrExpression	SUBS | RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	0		|			
ANR	1042013	Identifier	SUBS		1039695	0					
ANR	1042014	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1		|			
ANR	1042015	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042016	Callee	RD3		1039695	0					
ANR	1042017	Identifier	RD3		1039695	0					
ANR	1042018	ArgumentList	dst		1039695	1					
ANR	1042019	Argument	dst		1039695	0					
ANR	1042020	Identifier	dst		1039695	0					
ANR	1042021	InclusiveOrExpression	RN3 ( arg1 ) | RM3 ( arg2 )		1039695	1		|			
ANR	1042022	CallExpression	RN3 ( arg1 )		1039695	0					
ANR	1042023	Callee	RN3		1039695	0					
ANR	1042024	Identifier	RN3		1039695	0					
ANR	1042025	ArgumentList	arg1		1039695	1					
ANR	1042026	Argument	arg1		1039695	0					
ANR	1042027	Identifier	arg1		1039695	0					
ANR	1042028	CallExpression	RM3 ( arg2 )		1039695	1					
ANR	1042029	Callee	RM3		1039695	0					
ANR	1042030	Identifier	RM3		1039695	0					
ANR	1042031	ArgumentList	arg2		1039695	1					
ANR	1042032	Argument	arg2		1039695	0					
ANR	1042033	Identifier	arg2		1039695	0					
ANR	1042034	ReturnStatement	"return push_inst32 ( compiler , SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	742:2:23962:24054	1039695	49	True				
ANR	1042035	CallExpression	"push_inst32 ( compiler , SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042036	Callee	push_inst32		1039695	0					
ANR	1042037	Identifier	push_inst32		1039695	0					
ANR	1042038	ArgumentList	compiler		1039695	1					
ANR	1042039	Argument	compiler		1039695	0					
ANR	1042040	Identifier	compiler		1039695	0					
ANR	1042041	Argument	SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042042	InclusiveOrExpression	SUB_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042043	Identifier	SUB_W		1039695	0					
ANR	1042044	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042045	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042046	Identifier	flags		1039695	0					
ANR	1042047	Identifier	SET_FLAGS		1039695	1					
ANR	1042048	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042049	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042050	Callee	RD4		1039695	0					
ANR	1042051	Identifier	RD4		1039695	0					
ANR	1042052	ArgumentList	dst		1039695	1					
ANR	1042053	Argument	dst		1039695	0					
ANR	1042054	Identifier	dst		1039695	0					
ANR	1042055	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042056	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042057	Callee	RN4		1039695	0					
ANR	1042058	Identifier	RN4		1039695	0					
ANR	1042059	ArgumentList	arg1		1039695	1					
ANR	1042060	Argument	arg1		1039695	0					
ANR	1042061	Identifier	arg1		1039695	0					
ANR	1042062	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042063	Callee	RM4		1039695	0					
ANR	1042064	Identifier	RM4		1039695	0					
ANR	1042065	ArgumentList	arg2		1039695	1					
ANR	1042066	Argument	arg2		1039695	0					
ANR	1042067	Identifier	arg2		1039695	0					
ANR	1042068	Label	case SLJIT_SUBC :	743:1:24057:24072	1039695	50	True				
ANR	1042069	Identifier	SLJIT_SUBC		1039695	0					
ANR	1042070	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	51					
ANR	1042071	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	744:6:24080:24142	1039695	0	True				
ANR	1042072	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042073	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042074	Identifier	dst		1039695	0					
ANR	1042075	Identifier	arg1		1039695	1					
ANR	1042076	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042077	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042078	UnaryOperator	!		1039695	0					
ANR	1042079	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042080	Identifier	flags		1039695	0					
ANR	1042081	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042082	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042083	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042084	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042085	ArgumentList	dst		1039695	1					
ANR	1042086	Argument	dst		1039695	0					
ANR	1042087	Identifier	dst		1039695	0					
ANR	1042088	Argument	arg2		1039695	1					
ANR	1042089	Identifier	arg2		1039695	0					
ANR	1042090	ReturnStatement	"return push_inst16 ( compiler , SBCS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	745:3:24148:24205	1039695	1	True				
ANR	1042091	CallExpression	"push_inst16 ( compiler , SBCS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042092	Callee	push_inst16		1039695	0					
ANR	1042093	Identifier	push_inst16		1039695	0					
ANR	1042094	ArgumentList	compiler		1039695	1					
ANR	1042095	Argument	compiler		1039695	0					
ANR	1042096	Identifier	compiler		1039695	0					
ANR	1042097	Argument	SBCS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042098	InclusiveOrExpression	SBCS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042099	Identifier	SBCS		1039695	0					
ANR	1042100	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042101	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042102	Callee	RD3		1039695	0					
ANR	1042103	Identifier	RD3		1039695	0					
ANR	1042104	ArgumentList	dst		1039695	1					
ANR	1042105	Argument	dst		1039695	0					
ANR	1042106	Identifier	dst		1039695	0					
ANR	1042107	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042108	Callee	RN3		1039695	0					
ANR	1042109	Identifier	RN3		1039695	0					
ANR	1042110	ArgumentList	arg2		1039695	1					
ANR	1042111	Argument	arg2		1039695	0					
ANR	1042112	Identifier	arg2		1039695	0					
ANR	1042113	ReturnStatement	"return push_inst32 ( compiler , SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	746:2:24209:24301	1039695	52	True				
ANR	1042114	CallExpression	"push_inst32 ( compiler , SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042115	Callee	push_inst32		1039695	0					
ANR	1042116	Identifier	push_inst32		1039695	0					
ANR	1042117	ArgumentList	compiler		1039695	1					
ANR	1042118	Argument	compiler		1039695	0					
ANR	1042119	Identifier	compiler		1039695	0					
ANR	1042120	Argument	SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042121	InclusiveOrExpression	SBC_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042122	Identifier	SBC_W		1039695	0					
ANR	1042123	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042124	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042125	Identifier	flags		1039695	0					
ANR	1042126	Identifier	SET_FLAGS		1039695	1					
ANR	1042127	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042128	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042129	Callee	RD4		1039695	0					
ANR	1042130	Identifier	RD4		1039695	0					
ANR	1042131	ArgumentList	dst		1039695	1					
ANR	1042132	Argument	dst		1039695	0					
ANR	1042133	Identifier	dst		1039695	0					
ANR	1042134	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042135	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042136	Callee	RN4		1039695	0					
ANR	1042137	Identifier	RN4		1039695	0					
ANR	1042138	ArgumentList	arg1		1039695	1					
ANR	1042139	Argument	arg1		1039695	0					
ANR	1042140	Identifier	arg1		1039695	0					
ANR	1042141	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042142	Callee	RM4		1039695	0					
ANR	1042143	Identifier	RM4		1039695	0					
ANR	1042144	ArgumentList	arg2		1039695	1					
ANR	1042145	Argument	arg2		1039695	0					
ANR	1042146	Identifier	arg2		1039695	0					
ANR	1042147	Label	case SLJIT_MUL :	747:1:24304:24318	1039695	53	True				
ANR	1042148	Identifier	SLJIT_MUL		1039695	0					
ANR	1042149	IfStatement	if ( ! ( flags & SET_FLAGS ) )		1039695	54					
ANR	1042150	Condition	! ( flags & SET_FLAGS )	748:6:24326:24345	1039695	0	True				
ANR	1042151	UnaryOperationExpression	! ( flags & SET_FLAGS )		1039695	0					
ANR	1042152	UnaryOperator	!		1039695	0					
ANR	1042153	BitAndExpression	flags & SET_FLAGS		1039695	1		&			
ANR	1042154	Identifier	flags		1039695	0					
ANR	1042155	Identifier	SET_FLAGS		1039695	1					
ANR	1042156	ReturnStatement	"return push_inst32 ( compiler , MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	749:3:24351:24419	1039695	1	True				
ANR	1042157	CallExpression	"push_inst32 ( compiler , MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042158	Callee	push_inst32		1039695	0					
ANR	1042159	Identifier	push_inst32		1039695	0					
ANR	1042160	ArgumentList	compiler		1039695	1					
ANR	1042161	Argument	compiler		1039695	0					
ANR	1042162	Identifier	compiler		1039695	0					
ANR	1042163	Argument	MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042164	InclusiveOrExpression	MUL | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042165	Identifier	MUL		1039695	0					
ANR	1042166	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042167	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042168	Callee	RD4		1039695	0					
ANR	1042169	Identifier	RD4		1039695	0					
ANR	1042170	ArgumentList	dst		1039695	1					
ANR	1042171	Argument	dst		1039695	0					
ANR	1042172	Identifier	dst		1039695	0					
ANR	1042173	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042174	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042175	Callee	RN4		1039695	0					
ANR	1042176	Identifier	RN4		1039695	0					
ANR	1042177	ArgumentList	arg1		1039695	1					
ANR	1042178	Argument	arg1		1039695	0					
ANR	1042179	Identifier	arg1		1039695	0					
ANR	1042180	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042181	Callee	RM4		1039695	0					
ANR	1042182	Identifier	RM4		1039695	0					
ANR	1042183	ArgumentList	arg2		1039695	1					
ANR	1042184	Argument	arg2		1039695	0					
ANR	1042185	Identifier	arg2		1039695	0					
ANR	1042186	ExpressionStatement	SLJIT_ASSERT ( reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2 )	750:2:24423:24478	1039695	55	True				
ANR	1042187	CallExpression	SLJIT_ASSERT ( reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2 )		1039695	0					
ANR	1042188	Callee	SLJIT_ASSERT		1039695	0					
ANR	1042189	Identifier	SLJIT_ASSERT		1039695	0					
ANR	1042190	ArgumentList	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1039695	1					
ANR	1042191	Argument	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1039695	0					
ANR	1042192	AndExpression	reg_map [ TMP_REG2 ] <= 7 && dst != TMP_REG2		1039695	0		&&			
ANR	1042193	RelationalExpression	reg_map [ TMP_REG2 ] <= 7		1039695	0		<=			
ANR	1042194	ArrayIndexing	reg_map [ TMP_REG2 ]		1039695	0					
ANR	1042195	Identifier	reg_map		1039695	0					
ANR	1042196	Identifier	TMP_REG2		1039695	1					
ANR	1042197	PrimaryExpression	7		1039695	1					
ANR	1042198	EqualityExpression	dst != TMP_REG2		1039695	1		!=			
ANR	1042199	Identifier	dst		1039695	0					
ANR	1042200	Identifier	TMP_REG2		1039695	1					
ANR	1042201	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) )"	751:2:24482:24570	1039695	56	True				
ANR	1042202	CallExpression	"FAIL_IF ( push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) )"		1039695	0					
ANR	1042203	Callee	FAIL_IF		1039695	0					
ANR	1042204	Identifier	FAIL_IF		1039695	0					
ANR	1042205	ArgumentList	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	1					
ANR	1042206	Argument	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042207	CallExpression	"push_inst32 ( compiler , SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042208	Callee	push_inst32		1039695	0					
ANR	1042209	Identifier	push_inst32		1039695	0					
ANR	1042210	ArgumentList	compiler		1039695	1					
ANR	1042211	Argument	compiler		1039695	0					
ANR	1042212	Identifier	compiler		1039695	0					
ANR	1042213	Argument	SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042214	InclusiveOrExpression	SMULL | RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042215	Identifier	SMULL		1039695	0					
ANR	1042216	InclusiveOrExpression	RT4 ( dst ) | RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042217	CallExpression	RT4 ( dst )		1039695	0					
ANR	1042218	Callee	RT4		1039695	0					
ANR	1042219	Identifier	RT4		1039695	0					
ANR	1042220	ArgumentList	dst		1039695	1					
ANR	1042221	Argument	dst		1039695	0					
ANR	1042222	Identifier	dst		1039695	0					
ANR	1042223	InclusiveOrExpression	RD4 ( TMP_REG2 ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042224	CallExpression	RD4 ( TMP_REG2 )		1039695	0					
ANR	1042225	Callee	RD4		1039695	0					
ANR	1042226	Identifier	RD4		1039695	0					
ANR	1042227	ArgumentList	TMP_REG2		1039695	1					
ANR	1042228	Argument	TMP_REG2		1039695	0					
ANR	1042229	Identifier	TMP_REG2		1039695	0					
ANR	1042230	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042231	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042232	Callee	RN4		1039695	0					
ANR	1042233	Identifier	RN4		1039695	0					
ANR	1042234	ArgumentList	arg1		1039695	1					
ANR	1042235	Argument	arg1		1039695	0					
ANR	1042236	Identifier	arg1		1039695	0					
ANR	1042237	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042238	Callee	RM4		1039695	0					
ANR	1042239	Identifier	RM4		1039695	0					
ANR	1042240	ArgumentList	arg2		1039695	1					
ANR	1042241	Argument	arg2		1039695	0					
ANR	1042242	Identifier	arg2		1039695	0					
ANR	1042243	ReturnStatement	"return push_inst32 ( compiler , CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst ) ) ;"	753:2:24609:24680	1039695	57	True				
ANR	1042244	CallExpression	"push_inst32 ( compiler , CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst ) )"		1039695	0					
ANR	1042245	Callee	push_inst32		1039695	0					
ANR	1042246	Identifier	push_inst32		1039695	0					
ANR	1042247	ArgumentList	compiler		1039695	1					
ANR	1042248	Argument	compiler		1039695	0					
ANR	1042249	Identifier	compiler		1039695	0					
ANR	1042250	Argument	CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1039695	1					
ANR	1042251	InclusiveOrExpression	CMP_W | RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1039695	0		|			
ANR	1042252	Identifier	CMP_W		1039695	0					
ANR	1042253	InclusiveOrExpression	RN4 ( TMP_REG2 ) | 0x70e0 | RM4 ( dst )		1039695	1		|			
ANR	1042254	CallExpression	RN4 ( TMP_REG2 )		1039695	0					
ANR	1042255	Callee	RN4		1039695	0					
ANR	1042256	Identifier	RN4		1039695	0					
ANR	1042257	ArgumentList	TMP_REG2		1039695	1					
ANR	1042258	Argument	TMP_REG2		1039695	0					
ANR	1042259	Identifier	TMP_REG2		1039695	0					
ANR	1042260	InclusiveOrExpression	0x70e0 | RM4 ( dst )		1039695	1		|			
ANR	1042261	PrimaryExpression	0x70e0		1039695	0					
ANR	1042262	CallExpression	RM4 ( dst )		1039695	1					
ANR	1042263	Callee	RM4		1039695	0					
ANR	1042264	Identifier	RM4		1039695	0					
ANR	1042265	ArgumentList	dst		1039695	1					
ANR	1042266	Argument	dst		1039695	0					
ANR	1042267	Identifier	dst		1039695	0					
ANR	1042268	Label	case SLJIT_AND :	754:1:24683:24697	1039695	58	True				
ANR	1042269	Identifier	SLJIT_AND		1039695	0					
ANR	1042270	IfStatement	if ( ! ( flags & KEEP_FLAGS ) )		1039695	59					
ANR	1042271	Condition	! ( flags & KEEP_FLAGS )	755:6:24705:24725	1039695	0	True				
ANR	1042272	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042273	UnaryOperator	!		1039695	0					
ANR	1042274	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042275	Identifier	flags		1039695	0					
ANR	1042276	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042277	CompoundStatement		244:29:9353:9353	1039695	1					
ANR	1042278	IfStatement	"if ( dst == arg1 && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	0					
ANR	1042279	Condition	"dst == arg1 && IS_2_LO_REGS ( dst , arg2 )"	756:7:24737:24774	1039695	0	True				
ANR	1042280	AndExpression	"dst == arg1 && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042281	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042282	Identifier	dst		1039695	0					
ANR	1042283	Identifier	arg1		1039695	1					
ANR	1042284	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042285	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042286	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042287	ArgumentList	dst		1039695	1					
ANR	1042288	Argument	dst		1039695	0					
ANR	1042289	Identifier	dst		1039695	0					
ANR	1042290	Argument	arg2		1039695	1					
ANR	1042291	Identifier	arg2		1039695	0					
ANR	1042292	ReturnStatement	"return push_inst16 ( compiler , ANDS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	757:4:24781:24838	1039695	1	True				
ANR	1042293	CallExpression	"push_inst16 ( compiler , ANDS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042294	Callee	push_inst16		1039695	0					
ANR	1042295	Identifier	push_inst16		1039695	0					
ANR	1042296	ArgumentList	compiler		1039695	1					
ANR	1042297	Argument	compiler		1039695	0					
ANR	1042298	Identifier	compiler		1039695	0					
ANR	1042299	Argument	ANDS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042300	InclusiveOrExpression	ANDS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042301	Identifier	ANDS		1039695	0					
ANR	1042302	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042303	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042304	Callee	RD3		1039695	0					
ANR	1042305	Identifier	RD3		1039695	0					
ANR	1042306	ArgumentList	dst		1039695	1					
ANR	1042307	Argument	dst		1039695	0					
ANR	1042308	Identifier	dst		1039695	0					
ANR	1042309	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042310	Callee	RN3		1039695	0					
ANR	1042311	Identifier	RN3		1039695	0					
ANR	1042312	ArgumentList	arg2		1039695	1					
ANR	1042313	Argument	arg2		1039695	0					
ANR	1042314	Identifier	arg2		1039695	0					
ANR	1042315	IfStatement	"if ( ( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 ) )"		1039695	1					
ANR	1042316	Condition	"( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 )"	758:7:24847:24897	1039695	0	True				
ANR	1042317	AndExpression	"( flags & UNUSED_RETURN ) && IS_2_LO_REGS ( arg1 , arg2 )"		1039695	0		&&			
ANR	1042318	BitAndExpression	flags & UNUSED_RETURN		1039695	0		&			
ANR	1042319	Identifier	flags		1039695	0					
ANR	1042320	Identifier	UNUSED_RETURN		1039695	1					
ANR	1042321	CallExpression	"IS_2_LO_REGS ( arg1 , arg2 )"		1039695	1					
ANR	1042322	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042323	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042324	ArgumentList	arg1		1039695	1					
ANR	1042325	Argument	arg1		1039695	0					
ANR	1042326	Identifier	arg1		1039695	0					
ANR	1042327	Argument	arg2		1039695	1					
ANR	1042328	Identifier	arg2		1039695	0					
ANR	1042329	ReturnStatement	"return push_inst16 ( compiler , TST | RD3 ( arg1 ) | RN3 ( arg2 ) ) ;"	759:4:24904:24961	1039695	1	True				
ANR	1042330	CallExpression	"push_inst16 ( compiler , TST | RD3 ( arg1 ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042331	Callee	push_inst16		1039695	0					
ANR	1042332	Identifier	push_inst16		1039695	0					
ANR	1042333	ArgumentList	compiler		1039695	1					
ANR	1042334	Argument	compiler		1039695	0					
ANR	1042335	Identifier	compiler		1039695	0					
ANR	1042336	Argument	TST | RD3 ( arg1 ) | RN3 ( arg2 )		1039695	1					
ANR	1042337	InclusiveOrExpression	TST | RD3 ( arg1 ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042338	Identifier	TST		1039695	0					
ANR	1042339	InclusiveOrExpression	RD3 ( arg1 ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042340	CallExpression	RD3 ( arg1 )		1039695	0					
ANR	1042341	Callee	RD3		1039695	0					
ANR	1042342	Identifier	RD3		1039695	0					
ANR	1042343	ArgumentList	arg1		1039695	1					
ANR	1042344	Argument	arg1		1039695	0					
ANR	1042345	Identifier	arg1		1039695	0					
ANR	1042346	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042347	Callee	RN3		1039695	0					
ANR	1042348	Identifier	RN3		1039695	0					
ANR	1042349	ArgumentList	arg2		1039695	1					
ANR	1042350	Argument	arg2		1039695	0					
ANR	1042351	Identifier	arg2		1039695	0					
ANR	1042352	ReturnStatement	"return push_inst32 ( compiler , AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	761:2:24969:25061	1039695	60	True				
ANR	1042353	CallExpression	"push_inst32 ( compiler , AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042354	Callee	push_inst32		1039695	0					
ANR	1042355	Identifier	push_inst32		1039695	0					
ANR	1042356	ArgumentList	compiler		1039695	1					
ANR	1042357	Argument	compiler		1039695	0					
ANR	1042358	Identifier	compiler		1039695	0					
ANR	1042359	Argument	AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042360	InclusiveOrExpression	AND_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042361	Identifier	AND_W		1039695	0					
ANR	1042362	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042363	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042364	Identifier	flags		1039695	0					
ANR	1042365	Identifier	SET_FLAGS		1039695	1					
ANR	1042366	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042367	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042368	Callee	RD4		1039695	0					
ANR	1042369	Identifier	RD4		1039695	0					
ANR	1042370	ArgumentList	dst		1039695	1					
ANR	1042371	Argument	dst		1039695	0					
ANR	1042372	Identifier	dst		1039695	0					
ANR	1042373	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042374	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042375	Callee	RN4		1039695	0					
ANR	1042376	Identifier	RN4		1039695	0					
ANR	1042377	ArgumentList	arg1		1039695	1					
ANR	1042378	Argument	arg1		1039695	0					
ANR	1042379	Identifier	arg1		1039695	0					
ANR	1042380	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042381	Callee	RM4		1039695	0					
ANR	1042382	Identifier	RM4		1039695	0					
ANR	1042383	ArgumentList	arg2		1039695	1					
ANR	1042384	Argument	arg2		1039695	0					
ANR	1042385	Identifier	arg2		1039695	0					
ANR	1042386	Label	case SLJIT_OR :	762:1:25064:25077	1039695	61	True				
ANR	1042387	Identifier	SLJIT_OR		1039695	0					
ANR	1042388	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	62					
ANR	1042389	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	763:6:25085:25147	1039695	0	True				
ANR	1042390	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042391	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042392	Identifier	dst		1039695	0					
ANR	1042393	Identifier	arg1		1039695	1					
ANR	1042394	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042395	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042396	UnaryOperator	!		1039695	0					
ANR	1042397	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042398	Identifier	flags		1039695	0					
ANR	1042399	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042400	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042401	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042402	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042403	ArgumentList	dst		1039695	1					
ANR	1042404	Argument	dst		1039695	0					
ANR	1042405	Identifier	dst		1039695	0					
ANR	1042406	Argument	arg2		1039695	1					
ANR	1042407	Identifier	arg2		1039695	0					
ANR	1042408	ReturnStatement	"return push_inst16 ( compiler , ORRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	764:3:25153:25210	1039695	1	True				
ANR	1042409	CallExpression	"push_inst16 ( compiler , ORRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042410	Callee	push_inst16		1039695	0					
ANR	1042411	Identifier	push_inst16		1039695	0					
ANR	1042412	ArgumentList	compiler		1039695	1					
ANR	1042413	Argument	compiler		1039695	0					
ANR	1042414	Identifier	compiler		1039695	0					
ANR	1042415	Argument	ORRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042416	InclusiveOrExpression	ORRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042417	Identifier	ORRS		1039695	0					
ANR	1042418	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042419	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042420	Callee	RD3		1039695	0					
ANR	1042421	Identifier	RD3		1039695	0					
ANR	1042422	ArgumentList	dst		1039695	1					
ANR	1042423	Argument	dst		1039695	0					
ANR	1042424	Identifier	dst		1039695	0					
ANR	1042425	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042426	Callee	RN3		1039695	0					
ANR	1042427	Identifier	RN3		1039695	0					
ANR	1042428	ArgumentList	arg2		1039695	1					
ANR	1042429	Argument	arg2		1039695	0					
ANR	1042430	Identifier	arg2		1039695	0					
ANR	1042431	ReturnStatement	"return push_inst32 ( compiler , ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	765:2:25214:25306	1039695	63	True				
ANR	1042432	CallExpression	"push_inst32 ( compiler , ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042433	Callee	push_inst32		1039695	0					
ANR	1042434	Identifier	push_inst32		1039695	0					
ANR	1042435	ArgumentList	compiler		1039695	1					
ANR	1042436	Argument	compiler		1039695	0					
ANR	1042437	Identifier	compiler		1039695	0					
ANR	1042438	Argument	ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042439	InclusiveOrExpression	ORR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042440	Identifier	ORR_W		1039695	0					
ANR	1042441	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042442	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042443	Identifier	flags		1039695	0					
ANR	1042444	Identifier	SET_FLAGS		1039695	1					
ANR	1042445	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042446	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042447	Callee	RD4		1039695	0					
ANR	1042448	Identifier	RD4		1039695	0					
ANR	1042449	ArgumentList	dst		1039695	1					
ANR	1042450	Argument	dst		1039695	0					
ANR	1042451	Identifier	dst		1039695	0					
ANR	1042452	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042453	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042454	Callee	RN4		1039695	0					
ANR	1042455	Identifier	RN4		1039695	0					
ANR	1042456	ArgumentList	arg1		1039695	1					
ANR	1042457	Argument	arg1		1039695	0					
ANR	1042458	Identifier	arg1		1039695	0					
ANR	1042459	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042460	Callee	RM4		1039695	0					
ANR	1042461	Identifier	RM4		1039695	0					
ANR	1042462	ArgumentList	arg2		1039695	1					
ANR	1042463	Argument	arg2		1039695	0					
ANR	1042464	Identifier	arg2		1039695	0					
ANR	1042465	Label	case SLJIT_XOR :	766:1:25309:25323	1039695	64	True				
ANR	1042466	Identifier	SLJIT_XOR		1039695	0					
ANR	1042467	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	65					
ANR	1042468	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	767:6:25331:25393	1039695	0	True				
ANR	1042469	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042470	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042471	Identifier	dst		1039695	0					
ANR	1042472	Identifier	arg1		1039695	1					
ANR	1042473	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042474	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042475	UnaryOperator	!		1039695	0					
ANR	1042476	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042477	Identifier	flags		1039695	0					
ANR	1042478	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042479	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042480	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042481	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042482	ArgumentList	dst		1039695	1					
ANR	1042483	Argument	dst		1039695	0					
ANR	1042484	Identifier	dst		1039695	0					
ANR	1042485	Argument	arg2		1039695	1					
ANR	1042486	Identifier	arg2		1039695	0					
ANR	1042487	ReturnStatement	"return push_inst16 ( compiler , EORS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	768:3:25399:25456	1039695	1	True				
ANR	1042488	CallExpression	"push_inst16 ( compiler , EORS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042489	Callee	push_inst16		1039695	0					
ANR	1042490	Identifier	push_inst16		1039695	0					
ANR	1042491	ArgumentList	compiler		1039695	1					
ANR	1042492	Argument	compiler		1039695	0					
ANR	1042493	Identifier	compiler		1039695	0					
ANR	1042494	Argument	EORS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042495	InclusiveOrExpression	EORS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042496	Identifier	EORS		1039695	0					
ANR	1042497	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042498	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042499	Callee	RD3		1039695	0					
ANR	1042500	Identifier	RD3		1039695	0					
ANR	1042501	ArgumentList	dst		1039695	1					
ANR	1042502	Argument	dst		1039695	0					
ANR	1042503	Identifier	dst		1039695	0					
ANR	1042504	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042505	Callee	RN3		1039695	0					
ANR	1042506	Identifier	RN3		1039695	0					
ANR	1042507	ArgumentList	arg2		1039695	1					
ANR	1042508	Argument	arg2		1039695	0					
ANR	1042509	Identifier	arg2		1039695	0					
ANR	1042510	ReturnStatement	"return push_inst32 ( compiler , EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	769:2:25460:25552	1039695	66	True				
ANR	1042511	CallExpression	"push_inst32 ( compiler , EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042512	Callee	push_inst32		1039695	0					
ANR	1042513	Identifier	push_inst32		1039695	0					
ANR	1042514	ArgumentList	compiler		1039695	1					
ANR	1042515	Argument	compiler		1039695	0					
ANR	1042516	Identifier	compiler		1039695	0					
ANR	1042517	Argument	EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042518	InclusiveOrExpression	EOR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042519	Identifier	EOR_W		1039695	0					
ANR	1042520	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042521	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042522	Identifier	flags		1039695	0					
ANR	1042523	Identifier	SET_FLAGS		1039695	1					
ANR	1042524	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042525	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042526	Callee	RD4		1039695	0					
ANR	1042527	Identifier	RD4		1039695	0					
ANR	1042528	ArgumentList	dst		1039695	1					
ANR	1042529	Argument	dst		1039695	0					
ANR	1042530	Identifier	dst		1039695	0					
ANR	1042531	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042532	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042533	Callee	RN4		1039695	0					
ANR	1042534	Identifier	RN4		1039695	0					
ANR	1042535	ArgumentList	arg1		1039695	1					
ANR	1042536	Argument	arg1		1039695	0					
ANR	1042537	Identifier	arg1		1039695	0					
ANR	1042538	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042539	Callee	RM4		1039695	0					
ANR	1042540	Identifier	RM4		1039695	0					
ANR	1042541	ArgumentList	arg2		1039695	1					
ANR	1042542	Argument	arg2		1039695	0					
ANR	1042543	Identifier	arg2		1039695	0					
ANR	1042544	Label	case SLJIT_SHL :	770:1:25555:25569	1039695	67	True				
ANR	1042545	Identifier	SLJIT_SHL		1039695	0					
ANR	1042546	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	68					
ANR	1042547	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	771:6:25577:25639	1039695	0	True				
ANR	1042548	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042549	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042550	Identifier	dst		1039695	0					
ANR	1042551	Identifier	arg1		1039695	1					
ANR	1042552	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042553	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042554	UnaryOperator	!		1039695	0					
ANR	1042555	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042556	Identifier	flags		1039695	0					
ANR	1042557	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042558	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042559	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042560	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042561	ArgumentList	dst		1039695	1					
ANR	1042562	Argument	dst		1039695	0					
ANR	1042563	Identifier	dst		1039695	0					
ANR	1042564	Argument	arg2		1039695	1					
ANR	1042565	Identifier	arg2		1039695	0					
ANR	1042566	ReturnStatement	"return push_inst16 ( compiler , LSLS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	772:3:25645:25702	1039695	1	True				
ANR	1042567	CallExpression	"push_inst16 ( compiler , LSLS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042568	Callee	push_inst16		1039695	0					
ANR	1042569	Identifier	push_inst16		1039695	0					
ANR	1042570	ArgumentList	compiler		1039695	1					
ANR	1042571	Argument	compiler		1039695	0					
ANR	1042572	Identifier	compiler		1039695	0					
ANR	1042573	Argument	LSLS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042574	InclusiveOrExpression	LSLS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042575	Identifier	LSLS		1039695	0					
ANR	1042576	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042577	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042578	Callee	RD3		1039695	0					
ANR	1042579	Identifier	RD3		1039695	0					
ANR	1042580	ArgumentList	dst		1039695	1					
ANR	1042581	Argument	dst		1039695	0					
ANR	1042582	Identifier	dst		1039695	0					
ANR	1042583	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042584	Callee	RN3		1039695	0					
ANR	1042585	Identifier	RN3		1039695	0					
ANR	1042586	ArgumentList	arg2		1039695	1					
ANR	1042587	Argument	arg2		1039695	0					
ANR	1042588	Identifier	arg2		1039695	0					
ANR	1042589	ReturnStatement	"return push_inst32 ( compiler , LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	773:2:25706:25798	1039695	69	True				
ANR	1042590	CallExpression	"push_inst32 ( compiler , LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042591	Callee	push_inst32		1039695	0					
ANR	1042592	Identifier	push_inst32		1039695	0					
ANR	1042593	ArgumentList	compiler		1039695	1					
ANR	1042594	Argument	compiler		1039695	0					
ANR	1042595	Identifier	compiler		1039695	0					
ANR	1042596	Argument	LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042597	InclusiveOrExpression	LSL_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042598	Identifier	LSL_W		1039695	0					
ANR	1042599	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042600	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042601	Identifier	flags		1039695	0					
ANR	1042602	Identifier	SET_FLAGS		1039695	1					
ANR	1042603	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042604	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042605	Callee	RD4		1039695	0					
ANR	1042606	Identifier	RD4		1039695	0					
ANR	1042607	ArgumentList	dst		1039695	1					
ANR	1042608	Argument	dst		1039695	0					
ANR	1042609	Identifier	dst		1039695	0					
ANR	1042610	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042611	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042612	Callee	RN4		1039695	0					
ANR	1042613	Identifier	RN4		1039695	0					
ANR	1042614	ArgumentList	arg1		1039695	1					
ANR	1042615	Argument	arg1		1039695	0					
ANR	1042616	Identifier	arg1		1039695	0					
ANR	1042617	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042618	Callee	RM4		1039695	0					
ANR	1042619	Identifier	RM4		1039695	0					
ANR	1042620	ArgumentList	arg2		1039695	1					
ANR	1042621	Argument	arg2		1039695	0					
ANR	1042622	Identifier	arg2		1039695	0					
ANR	1042623	Label	case SLJIT_LSHR :	774:1:25801:25816	1039695	70	True				
ANR	1042624	Identifier	SLJIT_LSHR		1039695	0					
ANR	1042625	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	71					
ANR	1042626	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	775:6:25824:25886	1039695	0	True				
ANR	1042627	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042628	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042629	Identifier	dst		1039695	0					
ANR	1042630	Identifier	arg1		1039695	1					
ANR	1042631	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042632	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042633	UnaryOperator	!		1039695	0					
ANR	1042634	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042635	Identifier	flags		1039695	0					
ANR	1042636	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042637	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042638	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042639	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042640	ArgumentList	dst		1039695	1					
ANR	1042641	Argument	dst		1039695	0					
ANR	1042642	Identifier	dst		1039695	0					
ANR	1042643	Argument	arg2		1039695	1					
ANR	1042644	Identifier	arg2		1039695	0					
ANR	1042645	ReturnStatement	"return push_inst16 ( compiler , LSRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	776:3:25892:25949	1039695	1	True				
ANR	1042646	CallExpression	"push_inst16 ( compiler , LSRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042647	Callee	push_inst16		1039695	0					
ANR	1042648	Identifier	push_inst16		1039695	0					
ANR	1042649	ArgumentList	compiler		1039695	1					
ANR	1042650	Argument	compiler		1039695	0					
ANR	1042651	Identifier	compiler		1039695	0					
ANR	1042652	Argument	LSRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042653	InclusiveOrExpression	LSRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042654	Identifier	LSRS		1039695	0					
ANR	1042655	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042656	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042657	Callee	RD3		1039695	0					
ANR	1042658	Identifier	RD3		1039695	0					
ANR	1042659	ArgumentList	dst		1039695	1					
ANR	1042660	Argument	dst		1039695	0					
ANR	1042661	Identifier	dst		1039695	0					
ANR	1042662	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042663	Callee	RN3		1039695	0					
ANR	1042664	Identifier	RN3		1039695	0					
ANR	1042665	ArgumentList	arg2		1039695	1					
ANR	1042666	Argument	arg2		1039695	0					
ANR	1042667	Identifier	arg2		1039695	0					
ANR	1042668	ReturnStatement	"return push_inst32 ( compiler , LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	777:2:25953:26045	1039695	72	True				
ANR	1042669	CallExpression	"push_inst32 ( compiler , LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042670	Callee	push_inst32		1039695	0					
ANR	1042671	Identifier	push_inst32		1039695	0					
ANR	1042672	ArgumentList	compiler		1039695	1					
ANR	1042673	Argument	compiler		1039695	0					
ANR	1042674	Identifier	compiler		1039695	0					
ANR	1042675	Argument	LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042676	InclusiveOrExpression	LSR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042677	Identifier	LSR_W		1039695	0					
ANR	1042678	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042679	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042680	Identifier	flags		1039695	0					
ANR	1042681	Identifier	SET_FLAGS		1039695	1					
ANR	1042682	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042683	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042684	Callee	RD4		1039695	0					
ANR	1042685	Identifier	RD4		1039695	0					
ANR	1042686	ArgumentList	dst		1039695	1					
ANR	1042687	Argument	dst		1039695	0					
ANR	1042688	Identifier	dst		1039695	0					
ANR	1042689	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042690	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042691	Callee	RN4		1039695	0					
ANR	1042692	Identifier	RN4		1039695	0					
ANR	1042693	ArgumentList	arg1		1039695	1					
ANR	1042694	Argument	arg1		1039695	0					
ANR	1042695	Identifier	arg1		1039695	0					
ANR	1042696	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042697	Callee	RM4		1039695	0					
ANR	1042698	Identifier	RM4		1039695	0					
ANR	1042699	ArgumentList	arg2		1039695	1					
ANR	1042700	Argument	arg2		1039695	0					
ANR	1042701	Identifier	arg2		1039695	0					
ANR	1042702	Label	case SLJIT_ASHR :	778:1:26048:26063	1039695	73	True				
ANR	1042703	Identifier	SLJIT_ASHR		1039695	0					
ANR	1042704	IfStatement	"if ( dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 ) )"		1039695	74					
ANR	1042705	Condition	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"	779:6:26071:26133	1039695	0	True				
ANR	1042706	AndExpression	"dst == arg1 && ! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	0		&&			
ANR	1042707	EqualityExpression	dst == arg1		1039695	0		==			
ANR	1042708	Identifier	dst		1039695	0					
ANR	1042709	Identifier	arg1		1039695	1					
ANR	1042710	AndExpression	"! ( flags & KEEP_FLAGS ) && IS_2_LO_REGS ( dst , arg2 )"		1039695	1		&&			
ANR	1042711	UnaryOperationExpression	! ( flags & KEEP_FLAGS )		1039695	0					
ANR	1042712	UnaryOperator	!		1039695	0					
ANR	1042713	BitAndExpression	flags & KEEP_FLAGS		1039695	1		&			
ANR	1042714	Identifier	flags		1039695	0					
ANR	1042715	Identifier	KEEP_FLAGS		1039695	1					
ANR	1042716	CallExpression	"IS_2_LO_REGS ( dst , arg2 )"		1039695	1					
ANR	1042717	Callee	IS_2_LO_REGS		1039695	0					
ANR	1042718	Identifier	IS_2_LO_REGS		1039695	0					
ANR	1042719	ArgumentList	dst		1039695	1					
ANR	1042720	Argument	dst		1039695	0					
ANR	1042721	Identifier	dst		1039695	0					
ANR	1042722	Argument	arg2		1039695	1					
ANR	1042723	Identifier	arg2		1039695	0					
ANR	1042724	ReturnStatement	"return push_inst16 ( compiler , ASRS | RD3 ( dst ) | RN3 ( arg2 ) ) ;"	780:3:26139:26196	1039695	1	True				
ANR	1042725	CallExpression	"push_inst16 ( compiler , ASRS | RD3 ( dst ) | RN3 ( arg2 ) )"		1039695	0					
ANR	1042726	Callee	push_inst16		1039695	0					
ANR	1042727	Identifier	push_inst16		1039695	0					
ANR	1042728	ArgumentList	compiler		1039695	1					
ANR	1042729	Argument	compiler		1039695	0					
ANR	1042730	Identifier	compiler		1039695	0					
ANR	1042731	Argument	ASRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	1					
ANR	1042732	InclusiveOrExpression	ASRS | RD3 ( dst ) | RN3 ( arg2 )		1039695	0		|			
ANR	1042733	Identifier	ASRS		1039695	0					
ANR	1042734	InclusiveOrExpression	RD3 ( dst ) | RN3 ( arg2 )		1039695	1		|			
ANR	1042735	CallExpression	RD3 ( dst )		1039695	0					
ANR	1042736	Callee	RD3		1039695	0					
ANR	1042737	Identifier	RD3		1039695	0					
ANR	1042738	ArgumentList	dst		1039695	1					
ANR	1042739	Argument	dst		1039695	0					
ANR	1042740	Identifier	dst		1039695	0					
ANR	1042741	CallExpression	RN3 ( arg2 )		1039695	1					
ANR	1042742	Callee	RN3		1039695	0					
ANR	1042743	Identifier	RN3		1039695	0					
ANR	1042744	ArgumentList	arg2		1039695	1					
ANR	1042745	Argument	arg2		1039695	0					
ANR	1042746	Identifier	arg2		1039695	0					
ANR	1042747	ReturnStatement	"return push_inst32 ( compiler , ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) ) ;"	781:2:26200:26292	1039695	75	True				
ANR	1042748	CallExpression	"push_inst32 ( compiler , ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 ) )"		1039695	0					
ANR	1042749	Callee	push_inst32		1039695	0					
ANR	1042750	Identifier	push_inst32		1039695	0					
ANR	1042751	ArgumentList	compiler		1039695	1					
ANR	1042752	Argument	compiler		1039695	0					
ANR	1042753	Identifier	compiler		1039695	0					
ANR	1042754	Argument	ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1					
ANR	1042755	InclusiveOrExpression	ASR_W | ( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	0		|			
ANR	1042756	Identifier	ASR_W		1039695	0					
ANR	1042757	InclusiveOrExpression	( flags & SET_FLAGS ) | RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042758	BitAndExpression	flags & SET_FLAGS		1039695	0		&			
ANR	1042759	Identifier	flags		1039695	0					
ANR	1042760	Identifier	SET_FLAGS		1039695	1					
ANR	1042761	InclusiveOrExpression	RD4 ( dst ) | RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042762	CallExpression	RD4 ( dst )		1039695	0					
ANR	1042763	Callee	RD4		1039695	0					
ANR	1042764	Identifier	RD4		1039695	0					
ANR	1042765	ArgumentList	dst		1039695	1					
ANR	1042766	Argument	dst		1039695	0					
ANR	1042767	Identifier	dst		1039695	0					
ANR	1042768	InclusiveOrExpression	RN4 ( arg1 ) | RM4 ( arg2 )		1039695	1		|			
ANR	1042769	CallExpression	RN4 ( arg1 )		1039695	0					
ANR	1042770	Callee	RN4		1039695	0					
ANR	1042771	Identifier	RN4		1039695	0					
ANR	1042772	ArgumentList	arg1		1039695	1					
ANR	1042773	Argument	arg1		1039695	0					
ANR	1042774	Identifier	arg1		1039695	0					
ANR	1042775	CallExpression	RM4 ( arg2 )		1039695	1					
ANR	1042776	Callee	RM4		1039695	0					
ANR	1042777	Identifier	RM4		1039695	0					
ANR	1042778	ArgumentList	arg2		1039695	1					
ANR	1042779	Argument	arg2		1039695	0					
ANR	1042780	Identifier	arg2		1039695	0					
ANR	1042781	ExpressionStatement	SLJIT_ASSERT_STOP ( )	784:1:26299:26318	1039695	5	True				
ANR	1042782	CallExpression	SLJIT_ASSERT_STOP ( )		1039695	0					
ANR	1042783	Callee	SLJIT_ASSERT_STOP		1039695	0					
ANR	1042784	Identifier	SLJIT_ASSERT_STOP		1039695	0					
ANR	1042785	ArgumentList			1039695	1					
ANR	1042786	ReturnStatement	return SLJIT_SUCCESS ;	785:1:26321:26341	1039695	6	True				
ANR	1042787	Identifier	SLJIT_SUCCESS		1039695	0					
ANR	1042788	ReturnType	static sljit_si		1039695	1					
ANR	1042789	Identifier	emit_op_imm		1039695	2					
ANR	1042790	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si dst , sljit_uw arg1 , sljit_uw arg2"		1039695	3					
ANR	1042791	Parameter	struct sljit_compiler * compiler	511:28:15281:15311	1039695	0	True				
ANR	1042792	ParameterType	struct sljit_compiler *		1039695	0					
ANR	1042793	Identifier	compiler		1039695	1					
ANR	1042794	Parameter	sljit_si flags	511:61:15314:15327	1039695	1	True				
ANR	1042795	ParameterType	sljit_si		1039695	0					
ANR	1042796	Identifier	flags		1039695	1					
ANR	1042797	Parameter	sljit_si dst	511:77:15330:15341	1039695	2	True				
ANR	1042798	ParameterType	sljit_si		1039695	0					
ANR	1042799	Identifier	dst		1039695	1					
ANR	1042800	Parameter	sljit_uw arg1	511:91:15344:15356	1039695	3	True				
ANR	1042801	ParameterType	sljit_uw		1039695	0					
ANR	1042802	Identifier	arg1		1039695	1					
ANR	1042803	Parameter	sljit_uw arg2	511:106:15359:15371	1039695	4	True				
ANR	1042804	ParameterType	sljit_uw		1039695	0					
ANR	1042805	Identifier	arg2		1039695	1					
ANR	1042806	CFGEntryNode	ENTRY		1039695		True				
ANR	1042807	CFGExitNode	EXIT		1039695		True				
ANR	1042808	Symbol	~ARG1_IMM		1039695						
ANR	1042809	Symbol	push_inst16		1039695						
ANR	1042810	Symbol	SXTB_W		1039695						
ANR	1042811	Symbol	MVNS		1039695						
ANR	1042812	Symbol	ASRSI		1039695						
ANR	1042813	Symbol	CLZ		1039695						
ANR	1042814	Symbol	SUBSI3		1039695						
ANR	1042815	Symbol	LSRSI		1039695						
ANR	1042816	Symbol	SUBS		1039695						
ANR	1042817	Symbol	SBC_W		1039695						
ANR	1042818	Symbol	* TMP_REG2		1039695						
ANR	1042819	Symbol	LSRS		1039695						
ANR	1042820	Symbol	* reg_map		1039695						
ANR	1042821	Symbol	RSB_WI		1039695						
ANR	1042822	Symbol	EOR_W		1039695						
ANR	1042823	Symbol	RT4		1039695						
ANR	1042824	Symbol	MVN_W		1039695						
ANR	1042825	Symbol	IS_2_LO_REGS		1039695						
ANR	1042826	Symbol	SUB_WI		1039695						
ANR	1042827	Symbol	RD3		1039695						
ANR	1042828	Symbol	EORI		1039695						
ANR	1042829	Symbol	SUB_W		1039695						
ANR	1042830	Symbol	ORRS		1039695						
ANR	1042831	Symbol	RD4		1039695						
ANR	1042832	Symbol	flags		1039695						
ANR	1042833	Symbol	ADDSI8		1039695						
ANR	1042834	Symbol	UNUSED_RETURN		1039695						
ANR	1042835	Symbol	SUBWI		1039695						
ANR	1042836	Symbol	EORS		1039695						
ANR	1042837	Symbol	SMULL		1039695						
ANR	1042838	Symbol	RM4		1039695						
ANR	1042839	Symbol	RM3		1039695						
ANR	1042840	Symbol	push_inst32		1039695						
ANR	1042841	Symbol	ANDS		1039695						
ANR	1042842	Symbol	UXTH_W		1039695						
ANR	1042843	Symbol	LSL_W		1039695						
ANR	1042844	Symbol	SLJIT_SUCCESS		1039695						
ANR	1042845	Symbol	ANDI		1039695						
ANR	1042846	Symbol	LSLS		1039695						
ANR	1042847	Symbol	UXTH		1039695						
ANR	1042848	Symbol	IS_3_LO_REGS		1039695						
ANR	1042849	Symbol	RDN3		1039695						
ANR	1042850	Symbol	RN3		1039695						
ANR	1042851	Symbol	UXTB		1039695						
ANR	1042852	Symbol	AND_W		1039695						
ANR	1042853	Symbol	RN4		1039695						
ANR	1042854	Symbol	ORRI		1039695						
ANR	1042855	Symbol	TMP_REG2		1039695						
ANR	1042856	Symbol	ADD		1039695						
ANR	1042857	Symbol	TMP_REG1		1039695						
ANR	1042858	Symbol	ASR_W		1039695						
ANR	1042859	Symbol	IMM3		1039695						
ANR	1042860	Symbol	reg_map		1039695						
ANR	1042861	Symbol	IMM8		1039695						
ANR	1042862	Symbol	IMM5		1039695						
ANR	1042863	Symbol	LSR_WI		1039695						
ANR	1042864	Symbol	SXTH_W		1039695						
ANR	1042865	Symbol	* dst		1039695						
ANR	1042866	Symbol	reg		1039695						
ANR	1042867	Symbol	LSR_W		1039695						
ANR	1042868	Symbol	ORR_W		1039695						
ANR	1042869	Symbol	KEEP_FLAGS		1039695						
ANR	1042870	Symbol	ADD_WI		1039695						
ANR	1042871	Symbol	RSBSI		1039695						
ANR	1042872	Symbol	ADDWI		1039695						
ANR	1042873	Symbol	IMM12		1039695						
ANR	1042874	Symbol	MUL		1039695						
ANR	1042875	Symbol	ARG2_IMM		1039695						
ANR	1042876	Symbol	nimm		1039695						
ANR	1042877	Symbol	ADD_W		1039695						
ANR	1042878	Symbol	CMP_W		1039695						
ANR	1042879	Symbol	SET_FLAGS		1039695						
ANR	1042880	Symbol	MOV_W		1039695						
ANR	1042881	Symbol	arg2		1039695						
ANR	1042882	Symbol	~imm		1039695						
ANR	1042883	Symbol	ASR_WI		1039695						
ANR	1042884	Symbol	SXTB		1039695						
ANR	1042885	Symbol	TST		1039695						
ANR	1042886	Symbol	ADDSI3		1039695						
ANR	1042887	Symbol	arg1		1039695						
ANR	1042888	Symbol	SXTH		1039695						
ANR	1042889	Symbol	SLJIT_UNLIKELY		1039695						
ANR	1042890	Symbol	dst		1039695						
ANR	1042891	Symbol	imm		1039695						
ANR	1042892	Symbol	LSL_WI		1039695						
ANR	1042893	Symbol	ADCS		1039695						
ANR	1042894	Symbol	SBCI		1039695						
ANR	1042895	Symbol	SET_REGS44		1039695						
ANR	1042896	Symbol	load_immediate		1039695						
ANR	1042897	Symbol	INVALID_IMM		1039695						
ANR	1042898	Symbol	ARG1_IMM		1039695						
ANR	1042899	Symbol	ADCI		1039695						
ANR	1042900	Symbol	SBCS		1039695						
ANR	1042901	Symbol	compiler		1039695						
ANR	1042902	Symbol	UXTB_W		1039695						
ANR	1042903	Symbol	get_imm		1039695						
ANR	1042904	Symbol	ADC_W		1039695						
ANR	1042905	Symbol	ADDS		1039695						
ANR	1042906	Symbol	SUBSI8		1039695						
ANR	1042907	Symbol	ASRS		1039695						
ANR	1042908	Symbol	LSLSI		1039695						
ANR	1042909	Symbol	BICI		1039695						
ANR	1042910	Symbol	MOV		1039695						
ANR	1042911	Symbol	ORNI		1039695						
ANR	1042912	Symbol	MOVS		1039695						
ANR	1042913	Symbol	CMPI		1039695						
ANR	1042914	DeclStmt									
ANR	1042915	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem16
ANR	1042916	DeclStmt									
ANR	1042917	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem16_imm5
ANR	1042918	DeclStmt									
ANR	1042919	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 12 ]	sljit_mem32
ANR	1042920	Function	emit_set_delta	870:0:28330:28970							
ANR	1042921	FunctionDef	"emit_set_delta (struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value)"		1042920	0					
ANR	1042922	CompoundStatement		871:0:28438:28970	1042920	0					
ANR	1042923	IfStatement	if ( value >= 0 )		1042920	0					
ANR	1042924	Condition	value >= 0	872:5:28445:28454	1042920	0	True				
ANR	1042925	RelationalExpression	value >= 0		1042920	0		>=			
ANR	1042926	Identifier	value		1042920	0					
ANR	1042927	PrimaryExpression	0		1042920	1					
ANR	1042928	CompoundStatement		2:17:18:18	1042920	1					
ANR	1042929	IfStatement	if ( value <= 0xfff )		1042920	0					
ANR	1042930	Condition	value <= 0xfff	873:6:28465:28478	1042920	0	True				
ANR	1042931	RelationalExpression	value <= 0xfff		1042920	0		<=			
ANR	1042932	Identifier	value		1042920	0					
ANR	1042933	PrimaryExpression	0xfff		1042920	1					
ANR	1042934	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) ) ;"	874:3:28484:28556	1042920	1	True				
ANR	1042935	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) )"		1042920	0					
ANR	1042936	Callee	push_inst32		1042920	0					
ANR	1042937	Identifier	push_inst32		1042920	0					
ANR	1042938	ArgumentList	compiler		1042920	1					
ANR	1042939	Argument	compiler		1042920	0					
ANR	1042940	Identifier	compiler		1042920	0					
ANR	1042941	Argument	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	1					
ANR	1042942	InclusiveOrExpression	ADDWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	0		|			
ANR	1042943	Identifier	ADDWI		1042920	0					
ANR	1042944	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	1		|			
ANR	1042945	CallExpression	RD4 ( dst )		1042920	0					
ANR	1042946	Callee	RD4		1042920	0					
ANR	1042947	Identifier	RD4		1042920	0					
ANR	1042948	ArgumentList	dst		1042920	1					
ANR	1042949	Argument	dst		1042920	0					
ANR	1042950	Identifier	dst		1042920	0					
ANR	1042951	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( value )		1042920	1		|			
ANR	1042952	CallExpression	RN4 ( reg )		1042920	0					
ANR	1042953	Callee	RN4		1042920	0					
ANR	1042954	Identifier	RN4		1042920	0					
ANR	1042955	ArgumentList	reg		1042920	1					
ANR	1042956	Argument	reg		1042920	0					
ANR	1042957	Identifier	reg		1042920	0					
ANR	1042958	CallExpression	IMM12 ( value )		1042920	1					
ANR	1042959	Callee	IMM12		1042920	0					
ANR	1042960	Identifier	IMM12		1042920	0					
ANR	1042961	ArgumentList	value		1042920	1					
ANR	1042962	Argument	value		1042920	0					
ANR	1042963	Identifier	value		1042920	0					
ANR	1042964	ExpressionStatement	value = get_imm ( value )	875:2:28560:28582	1042920	1	True				
ANR	1042965	AssignmentExpression	value = get_imm ( value )		1042920	0		=			
ANR	1042966	Identifier	value		1042920	0					
ANR	1042967	CallExpression	get_imm ( value )		1042920	1					
ANR	1042968	Callee	get_imm		1042920	0					
ANR	1042969	Identifier	get_imm		1042920	0					
ANR	1042970	ArgumentList	value		1042920	1					
ANR	1042971	Argument	value		1042920	0					
ANR	1042972	Identifier	value		1042920	0					
ANR	1042973	IfStatement	if ( value != INVALID_IMM )		1042920	2					
ANR	1042974	Condition	value != INVALID_IMM	876:6:28590:28609	1042920	0	True				
ANR	1042975	EqualityExpression	value != INVALID_IMM		1042920	0		!=			
ANR	1042976	Identifier	value		1042920	0					
ANR	1042977	Identifier	INVALID_IMM		1042920	1					
ANR	1042978	ReturnStatement	"return push_inst32 ( compiler , ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value ) ;"	877:3:28615:28681	1042920	1	True				
ANR	1042979	CallExpression	"push_inst32 ( compiler , ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value )"		1042920	0					
ANR	1042980	Callee	push_inst32		1042920	0					
ANR	1042981	Identifier	push_inst32		1042920	0					
ANR	1042982	ArgumentList	compiler		1042920	1					
ANR	1042983	Argument	compiler		1042920	0					
ANR	1042984	Identifier	compiler		1042920	0					
ANR	1042985	Argument	ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value		1042920	1					
ANR	1042986	InclusiveOrExpression	ADD_WI | RD4 ( dst ) | RN4 ( reg ) | value		1042920	0		|			
ANR	1042987	Identifier	ADD_WI		1042920	0					
ANR	1042988	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | value		1042920	1		|			
ANR	1042989	CallExpression	RD4 ( dst )		1042920	0					
ANR	1042990	Callee	RD4		1042920	0					
ANR	1042991	Identifier	RD4		1042920	0					
ANR	1042992	ArgumentList	dst		1042920	1					
ANR	1042993	Argument	dst		1042920	0					
ANR	1042994	Identifier	dst		1042920	0					
ANR	1042995	InclusiveOrExpression	RN4 ( reg ) | value		1042920	1		|			
ANR	1042996	CallExpression	RN4 ( reg )		1042920	0					
ANR	1042997	Callee	RN4		1042920	0					
ANR	1042998	Identifier	RN4		1042920	0					
ANR	1042999	ArgumentList	reg		1042920	1					
ANR	1043000	Argument	reg		1042920	0					
ANR	1043001	Identifier	reg		1042920	0					
ANR	1043002	Identifier	value		1042920	1					
ANR	1043003	ElseStatement	else		1042920	0					
ANR	1043004	CompoundStatement		9:6:253:253	1042920	0					
ANR	1043005	ExpressionStatement	value = - value	880:2:28696:28710	1042920	0	True				
ANR	1043006	AssignmentExpression	value = - value		1042920	0		=			
ANR	1043007	Identifier	value		1042920	0					
ANR	1043008	UnaryOperationExpression	- value		1042920	1					
ANR	1043009	UnaryOperator	-		1042920	0					
ANR	1043010	Identifier	value		1042920	1					
ANR	1043011	IfStatement	if ( value <= 0xfff )		1042920	1					
ANR	1043012	Condition	value <= 0xfff	881:6:28718:28731	1042920	0	True				
ANR	1043013	RelationalExpression	value <= 0xfff		1042920	0		<=			
ANR	1043014	Identifier	value		1042920	0					
ANR	1043015	PrimaryExpression	0xfff		1042920	1					
ANR	1043016	ReturnStatement	"return push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) ) ;"	882:3:28737:28809	1042920	1	True				
ANR	1043017	CallExpression	"push_inst32 ( compiler , SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value ) )"		1042920	0					
ANR	1043018	Callee	push_inst32		1042920	0					
ANR	1043019	Identifier	push_inst32		1042920	0					
ANR	1043020	ArgumentList	compiler		1042920	1					
ANR	1043021	Argument	compiler		1042920	0					
ANR	1043022	Identifier	compiler		1042920	0					
ANR	1043023	Argument	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	1					
ANR	1043024	InclusiveOrExpression	SUBWI | RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	0		|			
ANR	1043025	Identifier	SUBWI		1042920	0					
ANR	1043026	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | IMM12 ( value )		1042920	1		|			
ANR	1043027	CallExpression	RD4 ( dst )		1042920	0					
ANR	1043028	Callee	RD4		1042920	0					
ANR	1043029	Identifier	RD4		1042920	0					
ANR	1043030	ArgumentList	dst		1042920	1					
ANR	1043031	Argument	dst		1042920	0					
ANR	1043032	Identifier	dst		1042920	0					
ANR	1043033	InclusiveOrExpression	RN4 ( reg ) | IMM12 ( value )		1042920	1		|			
ANR	1043034	CallExpression	RN4 ( reg )		1042920	0					
ANR	1043035	Callee	RN4		1042920	0					
ANR	1043036	Identifier	RN4		1042920	0					
ANR	1043037	ArgumentList	reg		1042920	1					
ANR	1043038	Argument	reg		1042920	0					
ANR	1043039	Identifier	reg		1042920	0					
ANR	1043040	CallExpression	IMM12 ( value )		1042920	1					
ANR	1043041	Callee	IMM12		1042920	0					
ANR	1043042	Identifier	IMM12		1042920	0					
ANR	1043043	ArgumentList	value		1042920	1					
ANR	1043044	Argument	value		1042920	0					
ANR	1043045	Identifier	value		1042920	0					
ANR	1043046	ExpressionStatement	value = get_imm ( value )	883:2:28813:28835	1042920	2	True				
ANR	1043047	AssignmentExpression	value = get_imm ( value )		1042920	0		=			
ANR	1043048	Identifier	value		1042920	0					
ANR	1043049	CallExpression	get_imm ( value )		1042920	1					
ANR	1043050	Callee	get_imm		1042920	0					
ANR	1043051	Identifier	get_imm		1042920	0					
ANR	1043052	ArgumentList	value		1042920	1					
ANR	1043053	Argument	value		1042920	0					
ANR	1043054	Identifier	value		1042920	0					
ANR	1043055	IfStatement	if ( value != INVALID_IMM )		1042920	3					
ANR	1043056	Condition	value != INVALID_IMM	884:6:28843:28862	1042920	0	True				
ANR	1043057	EqualityExpression	value != INVALID_IMM		1042920	0		!=			
ANR	1043058	Identifier	value		1042920	0					
ANR	1043059	Identifier	INVALID_IMM		1042920	1					
ANR	1043060	ReturnStatement	"return push_inst32 ( compiler , SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value ) ;"	885:3:28868:28934	1042920	1	True				
ANR	1043061	CallExpression	"push_inst32 ( compiler , SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value )"		1042920	0					
ANR	1043062	Callee	push_inst32		1042920	0					
ANR	1043063	Identifier	push_inst32		1042920	0					
ANR	1043064	ArgumentList	compiler		1042920	1					
ANR	1043065	Argument	compiler		1042920	0					
ANR	1043066	Identifier	compiler		1042920	0					
ANR	1043067	Argument	SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value		1042920	1					
ANR	1043068	InclusiveOrExpression	SUB_WI | RD4 ( dst ) | RN4 ( reg ) | value		1042920	0		|			
ANR	1043069	Identifier	SUB_WI		1042920	0					
ANR	1043070	InclusiveOrExpression	RD4 ( dst ) | RN4 ( reg ) | value		1042920	1		|			
ANR	1043071	CallExpression	RD4 ( dst )		1042920	0					
ANR	1043072	Callee	RD4		1042920	0					
ANR	1043073	Identifier	RD4		1042920	0					
ANR	1043074	ArgumentList	dst		1042920	1					
ANR	1043075	Argument	dst		1042920	0					
ANR	1043076	Identifier	dst		1042920	0					
ANR	1043077	InclusiveOrExpression	RN4 ( reg ) | value		1042920	1		|			
ANR	1043078	CallExpression	RN4 ( reg )		1042920	0					
ANR	1043079	Callee	RN4		1042920	0					
ANR	1043080	Identifier	RN4		1042920	0					
ANR	1043081	ArgumentList	reg		1042920	1					
ANR	1043082	Argument	reg		1042920	0					
ANR	1043083	Identifier	reg		1042920	0					
ANR	1043084	Identifier	value		1042920	1					
ANR	1043085	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	887:1:28940:28968	1042920	1	True				
ANR	1043086	Identifier	SLJIT_ERR_UNSUPPORTED		1042920	0					
ANR	1043087	ReturnType	static sljit_si		1042920	1					
ANR	1043088	Identifier	emit_set_delta		1042920	2					
ANR	1043089	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value"		1042920	3					
ANR	1043090	Parameter	struct sljit_compiler * compiler	870:31:28361:28391	1042920	0	True				
ANR	1043091	ParameterType	struct sljit_compiler *		1042920	0					
ANR	1043092	Identifier	compiler		1042920	1					
ANR	1043093	Parameter	sljit_si dst	870:64:28394:28405	1042920	1	True				
ANR	1043094	ParameterType	sljit_si		1042920	0					
ANR	1043095	Identifier	dst		1042920	1					
ANR	1043096	Parameter	sljit_si reg	870:78:28408:28419	1042920	2	True				
ANR	1043097	ParameterType	sljit_si		1042920	0					
ANR	1043098	Identifier	reg		1042920	1					
ANR	1043099	Parameter	sljit_sw value	870:92:28422:28435	1042920	3	True				
ANR	1043100	ParameterType	sljit_sw		1042920	0					
ANR	1043101	Identifier	value		1042920	1					
ANR	1043102	CFGEntryNode	ENTRY		1042920		True				
ANR	1043103	CFGExitNode	EXIT		1042920		True				
ANR	1043104	Symbol	ADDWI		1042920						
ANR	1043105	Symbol	IMM12		1042920						
ANR	1043106	Symbol	RD4		1042920						
ANR	1043107	Symbol	dst		1042920						
ANR	1043108	Symbol	get_imm		1042920						
ANR	1043109	Symbol	SUBWI		1042920						
ANR	1043110	Symbol	reg		1042920						
ANR	1043111	Symbol	INVALID_IMM		1042920						
ANR	1043112	Symbol	RN4		1042920						
ANR	1043113	Symbol	ADD_WI		1042920						
ANR	1043114	Symbol	compiler		1042920						
ANR	1043115	Symbol	value		1042920						
ANR	1043116	Symbol	push_inst32		1042920						
ANR	1043117	Symbol	SUB_WI		1042920						
ANR	1043118	Symbol	SLJIT_ERR_UNSUPPORTED		1042920						
ANR	1043119	Function	getput_arg_fast	891:0:29033:31207							
ANR	1043120	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1043119	0					
ANR	1043121	CompoundStatement		892:0:29157:31207	1043119	0					
ANR	1043122	IdentifierDeclStatement	"sljit_si other_r , shift ;"	893:1:29160:29183	1043119	0	True				
ANR	1043123	IdentifierDecl	other_r		1043119	0					
ANR	1043124	IdentifierDeclType	sljit_si		1043119	0					
ANR	1043125	Identifier	other_r		1043119	1					
ANR	1043126	IdentifierDecl	shift		1043119	1					
ANR	1043127	IdentifierDeclType	sljit_si		1043119	0					
ANR	1043128	Identifier	shift		1043119	1					
ANR	1043129	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	895:1:29187:29216	1043119	1	True				
ANR	1043130	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1043119	0					
ANR	1043131	Callee	SLJIT_ASSERT		1043119	0					
ANR	1043132	Identifier	SLJIT_ASSERT		1043119	0					
ANR	1043133	ArgumentList	arg & SLJIT_MEM		1043119	1					
ANR	1043134	Argument	arg & SLJIT_MEM		1043119	0					
ANR	1043135	BitAndExpression	arg & SLJIT_MEM		1043119	0		&			
ANR	1043136	Identifier	arg		1043119	0					
ANR	1043137	Identifier	SLJIT_MEM		1043119	1					
ANR	1043138	IfStatement	if ( SLJIT_UNLIKELY ( flags & UPDATE ) )		1043119	2					
ANR	1043139	Condition	SLJIT_UNLIKELY ( flags & UPDATE )	897:5:29224:29253	1043119	0	True				
ANR	1043140	CallExpression	SLJIT_UNLIKELY ( flags & UPDATE )		1043119	0					
ANR	1043141	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043142	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043143	ArgumentList	flags & UPDATE		1043119	1					
ANR	1043144	Argument	flags & UPDATE		1043119	0					
ANR	1043145	BitAndExpression	flags & UPDATE		1043119	0		&			
ANR	1043146	Identifier	flags		1043119	0					
ANR	1043147	Identifier	UPDATE		1043119	1					
ANR	1043148	CompoundStatement		6:37:98:98	1043119	1					
ANR	1043149	IfStatement	if ( ( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff )		1043119	0					
ANR	1043150	Condition	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff	898:6:29264:29338	1043119	0	True				
ANR	1043151	AndExpression	( arg & REG_MASK ) && ! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff		1043119	0		&&			
ANR	1043152	BitAndExpression	arg & REG_MASK		1043119	0		&			
ANR	1043153	Identifier	arg		1043119	0					
ANR	1043154	Identifier	REG_MASK		1043119	1					
ANR	1043155	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= 0xff && argw >= - 0xff		1043119	1		&&			
ANR	1043156	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1043119	0					
ANR	1043157	UnaryOperator	!		1043119	0					
ANR	1043158	BitAndExpression	arg & OFFS_REG_MASK		1043119	1		&			
ANR	1043159	Identifier	arg		1043119	0					
ANR	1043160	Identifier	OFFS_REG_MASK		1043119	1					
ANR	1043161	AndExpression	argw <= 0xff && argw >= - 0xff		1043119	1		&&			
ANR	1043162	RelationalExpression	argw <= 0xff		1043119	0		<=			
ANR	1043163	Identifier	argw		1043119	0					
ANR	1043164	PrimaryExpression	0xff		1043119	1					
ANR	1043165	RelationalExpression	argw >= - 0xff		1043119	1		>=			
ANR	1043166	Identifier	argw		1043119	0					
ANR	1043167	UnaryOperationExpression	- 0xff		1043119	1					
ANR	1043168	UnaryOperator	-		1043119	0					
ANR	1043169	PrimaryExpression	0xff		1043119	1					
ANR	1043170	CompoundStatement		7:83:183:183	1043119	1					
ANR	1043171	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1043119	0					
ANR	1043172	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	899:7:29350:29381	1043119	0	True				
ANR	1043173	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1043119	0					
ANR	1043174	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043175	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043176	ArgumentList	flags & ARG_TEST		1043119	1					
ANR	1043177	Argument	flags & ARG_TEST		1043119	0					
ANR	1043178	BitAndExpression	flags & ARG_TEST		1043119	0		&			
ANR	1043179	Identifier	flags		1043119	0					
ANR	1043180	Identifier	ARG_TEST		1043119	1					
ANR	1043181	ReturnStatement	return 1 ;	900:4:29388:29396	1043119	1	True				
ANR	1043182	PrimaryExpression	1		1043119	0					
ANR	1043183	ExpressionStatement	flags &= ~UPDATE	902:3:29402:29418	1043119	1	True				
ANR	1043184	AssignmentExpression	flags &= ~UPDATE		1043119	0		&=			
ANR	1043185	Identifier	flags		1043119	0					
ANR	1043186	Identifier	~UPDATE		1043119	1					
ANR	1043187	ExpressionStatement	arg &= 0xf	903:3:29423:29433	1043119	2	True				
ANR	1043188	AssignmentExpression	arg &= 0xf		1043119	0		&=			
ANR	1043189	Identifier	arg		1043119	0					
ANR	1043190	PrimaryExpression	0xf		1043119	1					
ANR	1043191	IfStatement	if ( argw >= 0 )		1043119	3					
ANR	1043192	Condition	argw >= 0	904:7:29442:29450	1043119	0	True				
ANR	1043193	RelationalExpression	argw >= 0		1043119	0		>=			
ANR	1043194	Identifier	argw		1043119	0					
ANR	1043195	PrimaryExpression	0		1043119	1					
ANR	1043196	ExpressionStatement	argw |= 0x200	905:4:29457:29470	1043119	1	True				
ANR	1043197	AssignmentExpression	argw |= 0x200		1043119	0		|=			
ANR	1043198	Identifier	argw		1043119	0					
ANR	1043199	PrimaryExpression	0x200		1043119	1					
ANR	1043200	ElseStatement	else		1043119	0					
ANR	1043201	CompoundStatement		15:8:322:322	1043119	0					
ANR	1043202	ExpressionStatement	argw = - argw	907:4:29486:29498	1043119	0	True				
ANR	1043203	AssignmentExpression	argw = - argw		1043119	0		=			
ANR	1043204	Identifier	argw		1043119	0					
ANR	1043205	UnaryOperationExpression	- argw		1043119	1					
ANR	1043206	UnaryOperator	-		1043119	0					
ANR	1043207	Identifier	argw		1043119	1					
ANR	1043208	ExpressionStatement	SLJIT_ASSERT ( argw >= 0 && ( argw & 0xff ) <= 0xff )	910:3:29509:29557	1043119	4	True				
ANR	1043209	CallExpression	SLJIT_ASSERT ( argw >= 0 && ( argw & 0xff ) <= 0xff )		1043119	0					
ANR	1043210	Callee	SLJIT_ASSERT		1043119	0					
ANR	1043211	Identifier	SLJIT_ASSERT		1043119	0					
ANR	1043212	ArgumentList	argw >= 0 && ( argw & 0xff ) <= 0xff		1043119	1					
ANR	1043213	Argument	argw >= 0 && ( argw & 0xff ) <= 0xff		1043119	0					
ANR	1043214	AndExpression	argw >= 0 && ( argw & 0xff ) <= 0xff		1043119	0		&&			
ANR	1043215	RelationalExpression	argw >= 0		1043119	0		>=			
ANR	1043216	Identifier	argw		1043119	0					
ANR	1043217	PrimaryExpression	0		1043119	1					
ANR	1043218	RelationalExpression	( argw & 0xff ) <= 0xff		1043119	1		<=			
ANR	1043219	BitAndExpression	argw & 0xff		1043119	0		&			
ANR	1043220	Identifier	argw		1043119	0					
ANR	1043221	PrimaryExpression	0xff		1043119	1					
ANR	1043222	PrimaryExpression	0xff		1043119	1					
ANR	1043223	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw ) )"	911:3:29562:29660	1043119	5	True				
ANR	1043224	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw ) )"		1043119	0					
ANR	1043225	Callee	FAIL_IF		1043119	0					
ANR	1043226	Identifier	FAIL_IF		1043119	0					
ANR	1043227	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1043119	1					
ANR	1043228	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1043119	0					
ANR	1043229	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw )"		1043119	0					
ANR	1043230	Callee	push_inst32		1043119	0					
ANR	1043231	Identifier	push_inst32		1043119	0					
ANR	1043232	ArgumentList	compiler		1043119	1					
ANR	1043233	Argument	compiler		1043119	0					
ANR	1043234	Identifier	compiler		1043119	0					
ANR	1043235	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1043119	1					
ANR	1043236	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1043119	0		|			
ANR	1043237	ArrayIndexing	sljit_mem32 [ flags ]		1043119	0					
ANR	1043238	Identifier	sljit_mem32		1043119	0					
ANR	1043239	Identifier	flags		1043119	1					
ANR	1043240	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1043119	1		|			
ANR	1043241	Identifier	MEM_IMM8		1043119	0					
ANR	1043242	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | 0x100 | argw		1043119	1		|			
ANR	1043243	CallExpression	RT4 ( reg )		1043119	0					
ANR	1043244	Callee	RT4		1043119	0					
ANR	1043245	Identifier	RT4		1043119	0					
ANR	1043246	ArgumentList	reg		1043119	1					
ANR	1043247	Argument	reg		1043119	0					
ANR	1043248	Identifier	reg		1043119	0					
ANR	1043249	InclusiveOrExpression	RN4 ( arg ) | 0x100 | argw		1043119	1		|			
ANR	1043250	CallExpression	RN4 ( arg )		1043119	0					
ANR	1043251	Callee	RN4		1043119	0					
ANR	1043252	Identifier	RN4		1043119	0					
ANR	1043253	ArgumentList	arg		1043119	1					
ANR	1043254	Argument	arg		1043119	0					
ANR	1043255	Identifier	arg		1043119	0					
ANR	1043256	InclusiveOrExpression	0x100 | argw		1043119	1		|			
ANR	1043257	PrimaryExpression	0x100		1043119	0					
ANR	1043258	Identifier	argw		1043119	1					
ANR	1043259	ReturnStatement	return - 1 ;	912:3:29665:29674	1043119	6	True				
ANR	1043260	UnaryOperationExpression	- 1		1043119	0					
ANR	1043261	UnaryOperator	-		1043119	0					
ANR	1043262	PrimaryExpression	1		1043119	1					
ANR	1043263	ReturnStatement	return 0 ;	914:2:29682:29690	1043119	1	True				
ANR	1043264	PrimaryExpression	0		1043119	0					
ANR	1043265	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1043119	3					
ANR	1043266	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	917:5:29701:29735	1043119	0	True				
ANR	1043267	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1043119	0					
ANR	1043268	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043269	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043270	ArgumentList	arg & OFFS_REG_MASK		1043119	1					
ANR	1043271	Argument	arg & OFFS_REG_MASK		1043119	0					
ANR	1043272	BitAndExpression	arg & OFFS_REG_MASK		1043119	0		&			
ANR	1043273	Identifier	arg		1043119	0					
ANR	1043274	Identifier	OFFS_REG_MASK		1043119	1					
ANR	1043275	CompoundStatement		26:42:580:580	1043119	1					
ANR	1043276	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1043119	0					
ANR	1043277	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	918:6:29746:29777	1043119	0	True				
ANR	1043278	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1043119	0					
ANR	1043279	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043280	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043281	ArgumentList	flags & ARG_TEST		1043119	1					
ANR	1043282	Argument	flags & ARG_TEST		1043119	0					
ANR	1043283	BitAndExpression	flags & ARG_TEST		1043119	0		&			
ANR	1043284	Identifier	flags		1043119	0					
ANR	1043285	Identifier	ARG_TEST		1043119	1					
ANR	1043286	ReturnStatement	return 1 ;	919:3:29783:29791	1043119	1	True				
ANR	1043287	PrimaryExpression	1		1043119	0					
ANR	1043288	ExpressionStatement	argw &= 0x3	921:2:29796:29807	1043119	1	True				
ANR	1043289	AssignmentExpression	argw &= 0x3		1043119	0		&=			
ANR	1043290	Identifier	argw		1043119	0					
ANR	1043291	PrimaryExpression	0x3		1043119	1					
ANR	1043292	ExpressionStatement	other_r = OFFS_REG ( arg )	922:2:29811:29834	1043119	2	True				
ANR	1043293	AssignmentExpression	other_r = OFFS_REG ( arg )		1043119	0		=			
ANR	1043294	Identifier	other_r		1043119	0					
ANR	1043295	CallExpression	OFFS_REG ( arg )		1043119	1					
ANR	1043296	Callee	OFFS_REG		1043119	0					
ANR	1043297	Identifier	OFFS_REG		1043119	0					
ANR	1043298	ArgumentList	arg		1043119	1					
ANR	1043299	Argument	arg		1043119	0					
ANR	1043300	Identifier	arg		1043119	0					
ANR	1043301	ExpressionStatement	arg &= 0xf	923:2:29838:29848	1043119	3	True				
ANR	1043302	AssignmentExpression	arg &= 0xf		1043119	0		&=			
ANR	1043303	Identifier	arg		1043119	0					
ANR	1043304	PrimaryExpression	0xf		1043119	1					
ANR	1043305	IfStatement	"if ( ! argw && IS_3_LO_REGS ( reg , arg , other_r ) )"		1043119	4					
ANR	1043306	Condition	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"	925:6:29857:29896	1043119	0	True				
ANR	1043307	AndExpression	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"		1043119	0		&&			
ANR	1043308	UnaryOperationExpression	! argw		1043119	0					
ANR	1043309	UnaryOperator	!		1043119	0					
ANR	1043310	Identifier	argw		1043119	1					
ANR	1043311	CallExpression	"IS_3_LO_REGS ( reg , arg , other_r )"		1043119	1					
ANR	1043312	Callee	IS_3_LO_REGS		1043119	0					
ANR	1043313	Identifier	IS_3_LO_REGS		1043119	0					
ANR	1043314	ArgumentList	reg		1043119	1					
ANR	1043315	Argument	reg		1043119	0					
ANR	1043316	Identifier	reg		1043119	0					
ANR	1043317	Argument	arg		1043119	1					
ANR	1043318	Identifier	arg		1043119	0					
ANR	1043319	Argument	other_r		1043119	2					
ANR	1043320	Identifier	other_r		1043119	0					
ANR	1043321	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"	926:3:29902:29989	1043119	1	True				
ANR	1043322	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"		1043119	0					
ANR	1043323	Callee	FAIL_IF		1043119	0					
ANR	1043324	Identifier	FAIL_IF		1043119	0					
ANR	1043325	ArgumentList	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043119	1					
ANR	1043326	Argument	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043119	0					
ANR	1043327	CallExpression	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043119	0					
ANR	1043328	Callee	push_inst16		1043119	0					
ANR	1043329	Identifier	push_inst16		1043119	0					
ANR	1043330	ArgumentList	compiler		1043119	1					
ANR	1043331	Argument	compiler		1043119	0					
ANR	1043332	Identifier	compiler		1043119	0					
ANR	1043333	Argument	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043119	1					
ANR	1043334	InclusiveOrExpression	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043119	0		|			
ANR	1043335	ArrayIndexing	sljit_mem16 [ flags ]		1043119	0					
ANR	1043336	Identifier	sljit_mem16		1043119	0					
ANR	1043337	Identifier	flags		1043119	1					
ANR	1043338	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043119	1		|			
ANR	1043339	CallExpression	RD3 ( reg )		1043119	0					
ANR	1043340	Callee	RD3		1043119	0					
ANR	1043341	Identifier	RD3		1043119	0					
ANR	1043342	ArgumentList	reg		1043119	1					
ANR	1043343	Argument	reg		1043119	0					
ANR	1043344	Identifier	reg		1043119	0					
ANR	1043345	InclusiveOrExpression	RN3 ( arg ) | RM3 ( other_r )		1043119	1		|			
ANR	1043346	CallExpression	RN3 ( arg )		1043119	0					
ANR	1043347	Callee	RN3		1043119	0					
ANR	1043348	Identifier	RN3		1043119	0					
ANR	1043349	ArgumentList	arg		1043119	1					
ANR	1043350	Argument	arg		1043119	0					
ANR	1043351	Identifier	arg		1043119	0					
ANR	1043352	CallExpression	RM3 ( other_r )		1043119	1					
ANR	1043353	Callee	RM3		1043119	0					
ANR	1043354	Identifier	RM3		1043119	0					
ANR	1043355	ArgumentList	other_r		1043119	1					
ANR	1043356	Argument	other_r		1043119	0					
ANR	1043357	Identifier	other_r		1043119	0					
ANR	1043358	ElseStatement	else		1043119	0					
ANR	1043359	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"	928:3:30001:30102	1043119	0	True				
ANR	1043360	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"		1043119	0					
ANR	1043361	Callee	FAIL_IF		1043119	0					
ANR	1043362	Identifier	FAIL_IF		1043119	0					
ANR	1043363	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043119	1					
ANR	1043364	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043119	0					
ANR	1043365	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043119	0					
ANR	1043366	Callee	push_inst32		1043119	0					
ANR	1043367	Identifier	push_inst32		1043119	0					
ANR	1043368	ArgumentList	compiler		1043119	1					
ANR	1043369	Argument	compiler		1043119	0					
ANR	1043370	Identifier	compiler		1043119	0					
ANR	1043371	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043119	1					
ANR	1043372	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043119	0		|			
ANR	1043373	ArrayIndexing	sljit_mem32 [ flags ]		1043119	0					
ANR	1043374	Identifier	sljit_mem32		1043119	0					
ANR	1043375	Identifier	flags		1043119	1					
ANR	1043376	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043119	1		|			
ANR	1043377	CallExpression	RT4 ( reg )		1043119	0					
ANR	1043378	Callee	RT4		1043119	0					
ANR	1043379	Identifier	RT4		1043119	0					
ANR	1043380	ArgumentList	reg		1043119	1					
ANR	1043381	Argument	reg		1043119	0					
ANR	1043382	Identifier	reg		1043119	0					
ANR	1043383	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043119	1		|			
ANR	1043384	CallExpression	RN4 ( arg )		1043119	0					
ANR	1043385	Callee	RN4		1043119	0					
ANR	1043386	Identifier	RN4		1043119	0					
ANR	1043387	ArgumentList	arg		1043119	1					
ANR	1043388	Argument	arg		1043119	0					
ANR	1043389	Identifier	arg		1043119	0					
ANR	1043390	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 4 )		1043119	1		|			
ANR	1043391	CallExpression	RM4 ( other_r )		1043119	0					
ANR	1043392	Callee	RM4		1043119	0					
ANR	1043393	Identifier	RM4		1043119	0					
ANR	1043394	ArgumentList	other_r		1043119	1					
ANR	1043395	Argument	other_r		1043119	0					
ANR	1043396	Identifier	other_r		1043119	0					
ANR	1043397	ShiftExpression	argw << 4		1043119	1		<<			
ANR	1043398	Identifier	argw		1043119	0					
ANR	1043399	PrimaryExpression	4		1043119	1					
ANR	1043400	ReturnStatement	return - 1 ;	929:2:30106:30115	1043119	5	True				
ANR	1043401	UnaryOperationExpression	- 1		1043119	0					
ANR	1043402	UnaryOperator	-		1043119	0					
ANR	1043403	PrimaryExpression	1		1043119	1					
ANR	1043404	IfStatement	if ( ! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff )		1043119	4					
ANR	1043405	Condition	! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff	932:5:30126:30174	1043119	0	True				
ANR	1043406	OrExpression	! ( arg & REG_MASK ) || argw > 0xfff || argw < - 0xff		1043119	0		||			
ANR	1043407	UnaryOperationExpression	! ( arg & REG_MASK )		1043119	0					
ANR	1043408	UnaryOperator	!		1043119	0					
ANR	1043409	BitAndExpression	arg & REG_MASK		1043119	1		&			
ANR	1043410	Identifier	arg		1043119	0					
ANR	1043411	Identifier	REG_MASK		1043119	1					
ANR	1043412	OrExpression	argw > 0xfff || argw < - 0xff		1043119	1		||			
ANR	1043413	RelationalExpression	argw > 0xfff		1043119	0		>			
ANR	1043414	Identifier	argw		1043119	0					
ANR	1043415	PrimaryExpression	0xfff		1043119	1					
ANR	1043416	RelationalExpression	argw < - 0xff		1043119	1		<			
ANR	1043417	Identifier	argw		1043119	0					
ANR	1043418	UnaryOperationExpression	- 0xff		1043119	1					
ANR	1043419	UnaryOperator	-		1043119	0					
ANR	1043420	PrimaryExpression	0xff		1043119	1					
ANR	1043421	ReturnStatement	return 0 ;	933:2:30179:30187	1043119	1	True				
ANR	1043422	PrimaryExpression	0		1043119	0					
ANR	1043423	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1043119	5					
ANR	1043424	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	935:5:30195:30226	1043119	0	True				
ANR	1043425	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1043119	0					
ANR	1043426	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043427	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043428	ArgumentList	flags & ARG_TEST		1043119	1					
ANR	1043429	Argument	flags & ARG_TEST		1043119	0					
ANR	1043430	BitAndExpression	flags & ARG_TEST		1043119	0		&			
ANR	1043431	Identifier	flags		1043119	0					
ANR	1043432	Identifier	ARG_TEST		1043119	1					
ANR	1043433	ReturnStatement	return 1 ;	936:2:30231:30239	1043119	1	True				
ANR	1043434	PrimaryExpression	1		1043119	0					
ANR	1043435	ExpressionStatement	arg &= 0xf	938:1:30243:30253	1043119	6	True				
ANR	1043436	AssignmentExpression	arg &= 0xf		1043119	0		&=			
ANR	1043437	Identifier	arg		1043119	0					
ANR	1043438	PrimaryExpression	0xf		1043119	1					
ANR	1043439	IfStatement	"if ( IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ] )"		1043119	7					
ANR	1043440	Condition	"IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ]"	939:5:30260:30308	1043119	0	True				
ANR	1043441	AndExpression	"IS_2_LO_REGS ( reg , arg ) && sljit_mem16_imm5 [ flags ]"		1043119	0		&&			
ANR	1043442	CallExpression	"IS_2_LO_REGS ( reg , arg )"		1043119	0					
ANR	1043443	Callee	IS_2_LO_REGS		1043119	0					
ANR	1043444	Identifier	IS_2_LO_REGS		1043119	0					
ANR	1043445	ArgumentList	reg		1043119	1					
ANR	1043446	Argument	reg		1043119	0					
ANR	1043447	Identifier	reg		1043119	0					
ANR	1043448	Argument	arg		1043119	1					
ANR	1043449	Identifier	arg		1043119	0					
ANR	1043450	ArrayIndexing	sljit_mem16_imm5 [ flags ]		1043119	1					
ANR	1043451	Identifier	sljit_mem16_imm5		1043119	0					
ANR	1043452	Identifier	flags		1043119	1					
ANR	1043453	CompoundStatement		48:56:1153:1153	1043119	1					
ANR	1043454	ExpressionStatement	shift = 3	940:2:30315:30324	1043119	0	True				
ANR	1043455	AssignmentExpression	shift = 3		1043119	0		=			
ANR	1043456	Identifier	shift		1043119	0					
ANR	1043457	PrimaryExpression	3		1043119	1					
ANR	1043458	IfStatement	if ( IS_WORD_SIZE ( flags ) )		1043119	1					
ANR	1043459	Condition	IS_WORD_SIZE ( flags )	941:6:30332:30350	1043119	0	True				
ANR	1043460	CallExpression	IS_WORD_SIZE ( flags )		1043119	0					
ANR	1043461	Callee	IS_WORD_SIZE		1043119	0					
ANR	1043462	Identifier	IS_WORD_SIZE		1043119	0					
ANR	1043463	ArgumentList	flags		1043119	1					
ANR	1043464	Argument	flags		1043119	0					
ANR	1043465	Identifier	flags		1043119	0					
ANR	1043466	CompoundStatement		50:27:1195:1195	1043119	1					
ANR	1043467	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 2 ) )"		1043119	0					
ANR	1043468	Condition	"OFFSET_CHECK ( 0x1f , 2 )"	942:7:30362:30382	1043119	0	True				
ANR	1043469	CallExpression	"OFFSET_CHECK ( 0x1f , 2 )"		1043119	0					
ANR	1043470	Callee	OFFSET_CHECK		1043119	0					
ANR	1043471	Identifier	OFFSET_CHECK		1043119	0					
ANR	1043472	ArgumentList	0x1f		1043119	1					
ANR	1043473	Argument	0x1f		1043119	0					
ANR	1043474	PrimaryExpression	0x1f		1043119	0					
ANR	1043475	Argument	2		1043119	1					
ANR	1043476	PrimaryExpression	2		1043119	0					
ANR	1043477	ExpressionStatement	shift = 2	943:4:30389:30398	1043119	1	True				
ANR	1043478	AssignmentExpression	shift = 2		1043119	0		=			
ANR	1043479	Identifier	shift		1043119	0					
ANR	1043480	PrimaryExpression	2		1043119	1					
ANR	1043481	ElseStatement	else		1043119	0					
ANR	1043482	IfStatement	if ( flags & BYTE_SIZE )		1043119	0					
ANR	1043483	Condition	flags & BYTE_SIZE	945:11:30415:30431	1043119	0	True				
ANR	1043484	BitAndExpression	flags & BYTE_SIZE		1043119	0		&			
ANR	1043485	Identifier	flags		1043119	0					
ANR	1043486	Identifier	BYTE_SIZE		1043119	1					
ANR	1043487	CompoundStatement		55:2:1278:1278	1043119	1					
ANR	1043488	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 0 ) )"		1043119	0					
ANR	1043489	Condition	"OFFSET_CHECK ( 0x1f , 0 )"	947:7:30445:30465	1043119	0	True				
ANR	1043490	CallExpression	"OFFSET_CHECK ( 0x1f , 0 )"		1043119	0					
ANR	1043491	Callee	OFFSET_CHECK		1043119	0					
ANR	1043492	Identifier	OFFSET_CHECK		1043119	0					
ANR	1043493	ArgumentList	0x1f		1043119	1					
ANR	1043494	Argument	0x1f		1043119	0					
ANR	1043495	PrimaryExpression	0x1f		1043119	0					
ANR	1043496	Argument	0		1043119	1					
ANR	1043497	PrimaryExpression	0		1043119	0					
ANR	1043498	ExpressionStatement	shift = 0	948:4:30472:30481	1043119	1	True				
ANR	1043499	AssignmentExpression	shift = 0		1043119	0		=			
ANR	1043500	Identifier	shift		1043119	0					
ANR	1043501	PrimaryExpression	0		1043119	1					
ANR	1043502	ElseStatement	else		1043119	0					
ANR	1043503	CompoundStatement		59:7:1336:1336	1043119	0					
ANR	1043504	ExpressionStatement	SLJIT_ASSERT ( flags & HALF_SIZE )	951:3:30499:30530	1043119	0	True				
ANR	1043505	CallExpression	SLJIT_ASSERT ( flags & HALF_SIZE )		1043119	0					
ANR	1043506	Callee	SLJIT_ASSERT		1043119	0					
ANR	1043507	Identifier	SLJIT_ASSERT		1043119	0					
ANR	1043508	ArgumentList	flags & HALF_SIZE		1043119	1					
ANR	1043509	Argument	flags & HALF_SIZE		1043119	0					
ANR	1043510	BitAndExpression	flags & HALF_SIZE		1043119	0		&			
ANR	1043511	Identifier	flags		1043119	0					
ANR	1043512	Identifier	HALF_SIZE		1043119	1					
ANR	1043513	IfStatement	"if ( OFFSET_CHECK ( 0x1f , 1 ) )"		1043119	1					
ANR	1043514	Condition	"OFFSET_CHECK ( 0x1f , 1 )"	952:7:30539:30559	1043119	0	True				
ANR	1043515	CallExpression	"OFFSET_CHECK ( 0x1f , 1 )"		1043119	0					
ANR	1043516	Callee	OFFSET_CHECK		1043119	0					
ANR	1043517	Identifier	OFFSET_CHECK		1043119	0					
ANR	1043518	ArgumentList	0x1f		1043119	1					
ANR	1043519	Argument	0x1f		1043119	0					
ANR	1043520	PrimaryExpression	0x1f		1043119	0					
ANR	1043521	Argument	1		1043119	1					
ANR	1043522	PrimaryExpression	1		1043119	0					
ANR	1043523	ExpressionStatement	shift = 1	953:4:30566:30575	1043119	1	True				
ANR	1043524	AssignmentExpression	shift = 1		1043119	0		=			
ANR	1043525	Identifier	shift		1043119	0					
ANR	1043526	PrimaryExpression	1		1043119	1					
ANR	1043527	IfStatement	if ( shift != 3 )		1043119	2					
ANR	1043528	Condition	shift != 3	956:6:30588:30597	1043119	0	True				
ANR	1043529	EqualityExpression	shift != 3		1043119	0		!=			
ANR	1043530	Identifier	shift		1043119	0					
ANR	1043531	PrimaryExpression	3		1043119	1					
ANR	1043532	CompoundStatement		65:18:1442:1442	1043119	1					
ANR	1043533	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) ) )"	957:3:30605:30706	1043119	0	True				
ANR	1043534	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) ) )"		1043119	0					
ANR	1043535	Callee	FAIL_IF		1043119	0					
ANR	1043536	Identifier	FAIL_IF		1043119	0					
ANR	1043537	ArgumentList	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1043119	1					
ANR	1043538	Argument	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1043119	0					
ANR	1043539	CallExpression	"push_inst16 ( compiler , sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) ) )"		1043119	0					
ANR	1043540	Callee	push_inst16		1043119	0					
ANR	1043541	Identifier	push_inst16		1043119	0					
ANR	1043542	ArgumentList	compiler		1043119	1					
ANR	1043543	Argument	compiler		1043119	0					
ANR	1043544	Identifier	compiler		1043119	0					
ANR	1043545	Argument	sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1043119	1					
ANR	1043546	InclusiveOrExpression	sljit_mem16_imm5 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1043119	0		|			
ANR	1043547	ArrayIndexing	sljit_mem16_imm5 [ flags ]		1043119	0					
ANR	1043548	Identifier	sljit_mem16_imm5		1043119	0					
ANR	1043549	Identifier	flags		1043119	1					
ANR	1043550	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | ( argw << ( 6 - shift ) )		1043119	1		|			
ANR	1043551	CallExpression	RD3 ( reg )		1043119	0					
ANR	1043552	Callee	RD3		1043119	0					
ANR	1043553	Identifier	RD3		1043119	0					
ANR	1043554	ArgumentList	reg		1043119	1					
ANR	1043555	Argument	reg		1043119	0					
ANR	1043556	Identifier	reg		1043119	0					
ANR	1043557	InclusiveOrExpression	RN3 ( arg ) | ( argw << ( 6 - shift ) )		1043119	1		|			
ANR	1043558	CallExpression	RN3 ( arg )		1043119	0					
ANR	1043559	Callee	RN3		1043119	0					
ANR	1043560	Identifier	RN3		1043119	0					
ANR	1043561	ArgumentList	arg		1043119	1					
ANR	1043562	Argument	arg		1043119	0					
ANR	1043563	Identifier	arg		1043119	0					
ANR	1043564	ShiftExpression	argw << ( 6 - shift )		1043119	1		<<			
ANR	1043565	Identifier	argw		1043119	0					
ANR	1043566	AdditiveExpression	6 - shift		1043119	1		-			
ANR	1043567	PrimaryExpression	6		1043119	0					
ANR	1043568	Identifier	shift		1043119	1					
ANR	1043569	ReturnStatement	return - 1 ;	958:3:30711:30720	1043119	1	True				
ANR	1043570	UnaryOperationExpression	- 1		1043119	0					
ANR	1043571	UnaryOperator	-		1043119	0					
ANR	1043572	PrimaryExpression	1		1043119	1					
ANR	1043573	IfStatement	"if ( SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7 )"		1043119	8					
ANR	1043574	Condition	"SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"	963:5:30762:30861	1043119	0	True				
ANR	1043575	AndExpression	"SLJIT_UNLIKELY ( arg == SLJIT_SP ) && OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"		1043119	0		&&			
ANR	1043576	CallExpression	SLJIT_UNLIKELY ( arg == SLJIT_SP )		1043119	0					
ANR	1043577	Callee	SLJIT_UNLIKELY		1043119	0					
ANR	1043578	Identifier	SLJIT_UNLIKELY		1043119	0					
ANR	1043579	ArgumentList	arg == SLJIT_SP		1043119	1					
ANR	1043580	Argument	arg == SLJIT_SP		1043119	0					
ANR	1043581	EqualityExpression	arg == SLJIT_SP		1043119	0		==			
ANR	1043582	Identifier	arg		1043119	0					
ANR	1043583	Identifier	SLJIT_SP		1043119	1					
ANR	1043584	AndExpression	"OFFSET_CHECK ( 0xff , 2 ) && IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7"		1043119	1		&&			
ANR	1043585	CallExpression	"OFFSET_CHECK ( 0xff , 2 )"		1043119	0					
ANR	1043586	Callee	OFFSET_CHECK		1043119	0					
ANR	1043587	Identifier	OFFSET_CHECK		1043119	0					
ANR	1043588	ArgumentList	0xff		1043119	1					
ANR	1043589	Argument	0xff		1043119	0					
ANR	1043590	PrimaryExpression	0xff		1043119	0					
ANR	1043591	Argument	2		1043119	1					
ANR	1043592	PrimaryExpression	2		1043119	0					
ANR	1043593	AndExpression	IS_WORD_SIZE ( flags ) && reg_map [ reg ] <= 7		1043119	1		&&			
ANR	1043594	CallExpression	IS_WORD_SIZE ( flags )		1043119	0					
ANR	1043595	Callee	IS_WORD_SIZE		1043119	0					
ANR	1043596	Identifier	IS_WORD_SIZE		1043119	0					
ANR	1043597	ArgumentList	flags		1043119	1					
ANR	1043598	Argument	flags		1043119	0					
ANR	1043599	Identifier	flags		1043119	0					
ANR	1043600	RelationalExpression	reg_map [ reg ] <= 7		1043119	1		<=			
ANR	1043601	ArrayIndexing	reg_map [ reg ]		1043119	0					
ANR	1043602	Identifier	reg_map		1043119	0					
ANR	1043603	Identifier	reg		1043119	1					
ANR	1043604	PrimaryExpression	7		1043119	1					
ANR	1043605	CompoundStatement		72:107:1706:1706	1043119	1					
ANR	1043606	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) ) )"	964:2:30868:30964	1043119	0	True				
ANR	1043607	CallExpression	"FAIL_IF ( push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) ) )"		1043119	0					
ANR	1043608	Callee	FAIL_IF		1043119	0					
ANR	1043609	Identifier	FAIL_IF		1043119	0					
ANR	1043610	ArgumentList	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1043119	1					
ANR	1043611	Argument	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1043119	0					
ANR	1043612	CallExpression	"push_inst16 ( compiler , STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 ) )"		1043119	0					
ANR	1043613	Callee	push_inst16		1043119	0					
ANR	1043614	Identifier	push_inst16		1043119	0					
ANR	1043615	ArgumentList	compiler		1043119	1					
ANR	1043616	Argument	compiler		1043119	0					
ANR	1043617	Identifier	compiler		1043119	0					
ANR	1043618	Argument	STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1043119	1					
ANR	1043619	InclusiveOrExpression	STR_SP | ( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1043119	0		|			
ANR	1043620	Identifier	STR_SP		1043119	0					
ANR	1043621	InclusiveOrExpression	( ( flags & STORE ) ? 0 : 0x800 ) | RDN3 ( reg ) | ( argw >> 2 )		1043119	1		|			
ANR	1043622	ConditionalExpression	( flags & STORE ) ? 0 : 0x800		1043119	0					
ANR	1043623	Condition	flags & STORE		1043119	0					
ANR	1043624	BitAndExpression	flags & STORE		1043119	0		&			
ANR	1043625	Identifier	flags		1043119	0					
ANR	1043626	Identifier	STORE		1043119	1					
ANR	1043627	PrimaryExpression	0		1043119	1					
ANR	1043628	PrimaryExpression	0x800		1043119	2					
ANR	1043629	InclusiveOrExpression	RDN3 ( reg ) | ( argw >> 2 )		1043119	1		|			
ANR	1043630	CallExpression	RDN3 ( reg )		1043119	0					
ANR	1043631	Callee	RDN3		1043119	0					
ANR	1043632	Identifier	RDN3		1043119	0					
ANR	1043633	ArgumentList	reg		1043119	1					
ANR	1043634	Argument	reg		1043119	0					
ANR	1043635	Identifier	reg		1043119	0					
ANR	1043636	ShiftExpression	argw >> 2		1043119	1		>>			
ANR	1043637	Identifier	argw		1043119	0					
ANR	1043638	PrimaryExpression	2		1043119	1					
ANR	1043639	ReturnStatement	return - 1 ;	965:2:30968:30977	1043119	1	True				
ANR	1043640	UnaryOperationExpression	- 1		1043119	0					
ANR	1043641	UnaryOperator	-		1043119	0					
ANR	1043642	PrimaryExpression	1		1043119	1					
ANR	1043643	IfStatement	if ( argw >= 0 )		1043119	9					
ANR	1043644	Condition	argw >= 0	968:5:30988:30996	1043119	0	True				
ANR	1043645	RelationalExpression	argw >= 0		1043119	0		>=			
ANR	1043646	Identifier	argw		1043119	0					
ANR	1043647	PrimaryExpression	0		1043119	1					
ANR	1043648	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"	969:2:31001:31092	1043119	1	True				
ANR	1043649	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"		1043119	0					
ANR	1043650	Callee	FAIL_IF		1043119	0					
ANR	1043651	Identifier	FAIL_IF		1043119	0					
ANR	1043652	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043119	1					
ANR	1043653	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043119	0					
ANR	1043654	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043119	0					
ANR	1043655	Callee	push_inst32		1043119	0					
ANR	1043656	Identifier	push_inst32		1043119	0					
ANR	1043657	ArgumentList	compiler		1043119	1					
ANR	1043658	Argument	compiler		1043119	0					
ANR	1043659	Identifier	compiler		1043119	0					
ANR	1043660	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043119	1					
ANR	1043661	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043119	0		|			
ANR	1043662	ArrayIndexing	sljit_mem32 [ flags ]		1043119	0					
ANR	1043663	Identifier	sljit_mem32		1043119	0					
ANR	1043664	Identifier	flags		1043119	1					
ANR	1043665	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043119	1		|			
ANR	1043666	Identifier	MEM_IMM12		1043119	0					
ANR	1043667	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | argw		1043119	1		|			
ANR	1043668	CallExpression	RT4 ( reg )		1043119	0					
ANR	1043669	Callee	RT4		1043119	0					
ANR	1043670	Identifier	RT4		1043119	0					
ANR	1043671	ArgumentList	reg		1043119	1					
ANR	1043672	Argument	reg		1043119	0					
ANR	1043673	Identifier	reg		1043119	0					
ANR	1043674	InclusiveOrExpression	RN4 ( arg ) | argw		1043119	1		|			
ANR	1043675	CallExpression	RN4 ( arg )		1043119	0					
ANR	1043676	Callee	RN4		1043119	0					
ANR	1043677	Identifier	RN4		1043119	0					
ANR	1043678	ArgumentList	arg		1043119	1					
ANR	1043679	Argument	arg		1043119	0					
ANR	1043680	Identifier	arg		1043119	0					
ANR	1043681	Identifier	argw		1043119	1					
ANR	1043682	ElseStatement	else		1043119	0					
ANR	1043683	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw ) )"	971:2:31102:31193	1043119	0	True				
ANR	1043684	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw ) )"		1043119	0					
ANR	1043685	Callee	FAIL_IF		1043119	0					
ANR	1043686	Identifier	FAIL_IF		1043119	0					
ANR	1043687	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1043119	1					
ANR	1043688	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1043119	0					
ANR	1043689	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw )"		1043119	0					
ANR	1043690	Callee	push_inst32		1043119	0					
ANR	1043691	Identifier	push_inst32		1043119	0					
ANR	1043692	ArgumentList	compiler		1043119	1					
ANR	1043693	Argument	compiler		1043119	0					
ANR	1043694	Identifier	compiler		1043119	0					
ANR	1043695	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1043119	1					
ANR	1043696	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1043119	0		|			
ANR	1043697	ArrayIndexing	sljit_mem32 [ flags ]		1043119	0					
ANR	1043698	Identifier	sljit_mem32		1043119	0					
ANR	1043699	Identifier	flags		1043119	1					
ANR	1043700	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( arg ) | - argw		1043119	1		|			
ANR	1043701	Identifier	MEM_IMM8		1043119	0					
ANR	1043702	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | - argw		1043119	1		|			
ANR	1043703	CallExpression	RT4 ( reg )		1043119	0					
ANR	1043704	Callee	RT4		1043119	0					
ANR	1043705	Identifier	RT4		1043119	0					
ANR	1043706	ArgumentList	reg		1043119	1					
ANR	1043707	Argument	reg		1043119	0					
ANR	1043708	Identifier	reg		1043119	0					
ANR	1043709	InclusiveOrExpression	RN4 ( arg ) | - argw		1043119	1		|			
ANR	1043710	CallExpression	RN4 ( arg )		1043119	0					
ANR	1043711	Callee	RN4		1043119	0					
ANR	1043712	Identifier	RN4		1043119	0					
ANR	1043713	ArgumentList	arg		1043119	1					
ANR	1043714	Argument	arg		1043119	0					
ANR	1043715	Identifier	arg		1043119	0					
ANR	1043716	UnaryOperationExpression	- argw		1043119	1					
ANR	1043717	UnaryOperator	-		1043119	0					
ANR	1043718	Identifier	argw		1043119	1					
ANR	1043719	ReturnStatement	return - 1 ;	972:1:31196:31205	1043119	10	True				
ANR	1043720	UnaryOperationExpression	- 1		1043119	0					
ANR	1043721	UnaryOperator	-		1043119	0					
ANR	1043722	PrimaryExpression	1		1043119	1					
ANR	1043723	ReturnType	static sljit_si		1043119	1					
ANR	1043724	Identifier	getput_arg_fast		1043119	2					
ANR	1043725	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1043119	3					
ANR	1043726	Parameter	struct sljit_compiler * compiler	891:32:29065:29095	1043119	0	True				
ANR	1043727	ParameterType	struct sljit_compiler *		1043119	0					
ANR	1043728	Identifier	compiler		1043119	1					
ANR	1043729	Parameter	sljit_si flags	891:65:29098:29111	1043119	1	True				
ANR	1043730	ParameterType	sljit_si		1043119	0					
ANR	1043731	Identifier	flags		1043119	1					
ANR	1043732	Parameter	sljit_si reg	891:81:29114:29125	1043119	2	True				
ANR	1043733	ParameterType	sljit_si		1043119	0					
ANR	1043734	Identifier	reg		1043119	1					
ANR	1043735	Parameter	sljit_si arg	891:95:29128:29139	1043119	3	True				
ANR	1043736	ParameterType	sljit_si		1043119	0					
ANR	1043737	Identifier	arg		1043119	1					
ANR	1043738	Parameter	sljit_sw argw	891:109:29142:29154	1043119	4	True				
ANR	1043739	ParameterType	sljit_sw		1043119	0					
ANR	1043740	Identifier	argw		1043119	1					
ANR	1043741	CFGEntryNode	ENTRY		1043119		True				
ANR	1043742	CFGExitNode	EXIT		1043119		True				
ANR	1043743	Symbol	RD3		1043119						
ANR	1043744	Symbol	BYTE_SIZE		1043119						
ANR	1043745	Symbol	SLJIT_MEM		1043119						
ANR	1043746	Symbol	shift		1043119						
ANR	1043747	Symbol	push_inst16		1043119						
ANR	1043748	Symbol	flags		1043119						
ANR	1043749	Symbol	reg_map		1043119						
ANR	1043750	Symbol	MEM_IMM12		1043119						
ANR	1043751	Symbol	argw		1043119						
ANR	1043752	Symbol	ARG_TEST		1043119						
ANR	1043753	Symbol	SLJIT_SP		1043119						
ANR	1043754	Symbol	* sljit_mem16_imm5		1043119						
ANR	1043755	Symbol	reg		1043119						
ANR	1043756	Symbol	arg		1043119						
ANR	1043757	Symbol	HALF_SIZE		1043119						
ANR	1043758	Symbol	RM4		1043119						
ANR	1043759	Symbol	sljit_mem32		1043119						
ANR	1043760	Symbol	RM3		1043119						
ANR	1043761	Symbol	UPDATE		1043119						
ANR	1043762	Symbol	* sljit_mem16		1043119						
ANR	1043763	Symbol	compiler		1043119						
ANR	1043764	Symbol	push_inst32		1043119						
ANR	1043765	Symbol	sljit_mem16		1043119						
ANR	1043766	Symbol	* sljit_mem32		1043119						
ANR	1043767	Symbol	* flags		1043119						
ANR	1043768	Symbol	REG_MASK		1043119						
ANR	1043769	Symbol	~UPDATE		1043119						
ANR	1043770	Symbol	STR_SP		1043119						
ANR	1043771	Symbol	sljit_mem16_imm5		1043119						
ANR	1043772	Symbol	OFFS_REG_MASK		1043119						
ANR	1043773	Symbol	other_r		1043119						
ANR	1043774	Symbol	* reg_map		1043119						
ANR	1043775	Symbol	IS_3_LO_REGS		1043119						
ANR	1043776	Symbol	RDN3		1043119						
ANR	1043777	Symbol	MEM_IMM8		1043119						
ANR	1043778	Symbol	RT4		1043119						
ANR	1043779	Symbol	RN3		1043119						
ANR	1043780	Symbol	IS_WORD_SIZE		1043119						
ANR	1043781	Symbol	OFFSET_CHECK		1043119						
ANR	1043782	Symbol	STORE		1043119						
ANR	1043783	Symbol	RN4		1043119						
ANR	1043784	Symbol	OFFS_REG		1043119						
ANR	1043785	Symbol	IS_2_LO_REGS		1043119						
ANR	1043786	Symbol	* reg		1043119						
ANR	1043787	Symbol	SLJIT_UNLIKELY		1043119						
ANR	1043788	Function	can_cache	978:0:31360:31805							
ANR	1043789	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1043788	0					
ANR	1043790	CompoundStatement		979:0:31454:31805	1043788	0					
ANR	1043791	IdentifierDeclStatement	sljit_sw diff ;	980:1:31457:31470	1043788	0	True				
ANR	1043792	IdentifierDecl	diff		1043788	0					
ANR	1043793	IdentifierDeclType	sljit_sw		1043788	0					
ANR	1043794	Identifier	diff		1043788	1					
ANR	1043795	IfStatement	if ( ( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM ) )		1043788	1					
ANR	1043796	Condition	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )	981:5:31477:31524	1043788	0	True				
ANR	1043797	OrExpression	( arg & OFFS_REG_MASK ) || ! ( next_arg & SLJIT_MEM )		1043788	0		||			
ANR	1043798	BitAndExpression	arg & OFFS_REG_MASK		1043788	0		&			
ANR	1043799	Identifier	arg		1043788	0					
ANR	1043800	Identifier	OFFS_REG_MASK		1043788	1					
ANR	1043801	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1043788	1					
ANR	1043802	UnaryOperator	!		1043788	0					
ANR	1043803	BitAndExpression	next_arg & SLJIT_MEM		1043788	1		&			
ANR	1043804	Identifier	next_arg		1043788	0					
ANR	1043805	Identifier	SLJIT_MEM		1043788	1					
ANR	1043806	ReturnStatement	return 0 ;	982:2:31529:31537	1043788	1	True				
ANR	1043807	PrimaryExpression	0		1043788	0					
ANR	1043808	IfStatement	if ( ! ( arg & REG_MASK ) )		1043788	2					
ANR	1043809	Condition	! ( arg & REG_MASK )	984:5:31545:31561	1043788	0	True				
ANR	1043810	UnaryOperationExpression	! ( arg & REG_MASK )		1043788	0					
ANR	1043811	UnaryOperator	!		1043788	0					
ANR	1043812	BitAndExpression	arg & REG_MASK		1043788	1		&			
ANR	1043813	Identifier	arg		1043788	0					
ANR	1043814	Identifier	REG_MASK		1043788	1					
ANR	1043815	CompoundStatement		6:24:109:109	1043788	1					
ANR	1043816	ExpressionStatement	diff = argw - next_argw	985:2:31568:31591	1043788	0	True				
ANR	1043817	AssignmentExpression	diff = argw - next_argw		1043788	0		=			
ANR	1043818	Identifier	diff		1043788	0					
ANR	1043819	AdditiveExpression	argw - next_argw		1043788	1		-			
ANR	1043820	Identifier	argw		1043788	0					
ANR	1043821	Identifier	next_argw		1043788	1					
ANR	1043822	IfStatement	if ( diff <= 0xfff && diff >= - 0xfff )		1043788	1					
ANR	1043823	Condition	diff <= 0xfff && diff >= - 0xfff	986:6:31599:31629	1043788	0	True				
ANR	1043824	AndExpression	diff <= 0xfff && diff >= - 0xfff		1043788	0		&&			
ANR	1043825	RelationalExpression	diff <= 0xfff		1043788	0		<=			
ANR	1043826	Identifier	diff		1043788	0					
ANR	1043827	PrimaryExpression	0xfff		1043788	1					
ANR	1043828	RelationalExpression	diff >= - 0xfff		1043788	1		>=			
ANR	1043829	Identifier	diff		1043788	0					
ANR	1043830	UnaryOperationExpression	- 0xfff		1043788	1					
ANR	1043831	UnaryOperator	-		1043788	0					
ANR	1043832	PrimaryExpression	0xfff		1043788	1					
ANR	1043833	ReturnStatement	return 1 ;	987:3:31635:31643	1043788	1	True				
ANR	1043834	PrimaryExpression	1		1043788	0					
ANR	1043835	ReturnStatement	return 0 ;	988:2:31647:31655	1043788	2	True				
ANR	1043836	PrimaryExpression	0		1043788	0					
ANR	1043837	IfStatement	if ( argw == next_argw )		1043788	3					
ANR	1043838	Condition	argw == next_argw	991:5:31666:31682	1043788	0	True				
ANR	1043839	EqualityExpression	argw == next_argw		1043788	0		==			
ANR	1043840	Identifier	argw		1043788	0					
ANR	1043841	Identifier	next_argw		1043788	1					
ANR	1043842	ReturnStatement	return 1 ;	992:2:31687:31695	1043788	1	True				
ANR	1043843	PrimaryExpression	1		1043788	0					
ANR	1043844	ExpressionStatement	diff = argw - next_argw	994:1:31699:31722	1043788	4	True				
ANR	1043845	AssignmentExpression	diff = argw - next_argw		1043788	0		=			
ANR	1043846	Identifier	diff		1043788	0					
ANR	1043847	AdditiveExpression	argw - next_argw		1043788	1		-			
ANR	1043848	Identifier	argw		1043788	0					
ANR	1043849	Identifier	next_argw		1043788	1					
ANR	1043850	IfStatement	if ( arg == next_arg && diff <= 0xfff && diff >= - 0xfff )		1043788	5					
ANR	1043851	Condition	arg == next_arg && diff <= 0xfff && diff >= - 0xfff	995:5:31729:31778	1043788	0	True				
ANR	1043852	AndExpression	arg == next_arg && diff <= 0xfff && diff >= - 0xfff		1043788	0		&&			
ANR	1043853	EqualityExpression	arg == next_arg		1043788	0		==			
ANR	1043854	Identifier	arg		1043788	0					
ANR	1043855	Identifier	next_arg		1043788	1					
ANR	1043856	AndExpression	diff <= 0xfff && diff >= - 0xfff		1043788	1		&&			
ANR	1043857	RelationalExpression	diff <= 0xfff		1043788	0		<=			
ANR	1043858	Identifier	diff		1043788	0					
ANR	1043859	PrimaryExpression	0xfff		1043788	1					
ANR	1043860	RelationalExpression	diff >= - 0xfff		1043788	1		>=			
ANR	1043861	Identifier	diff		1043788	0					
ANR	1043862	UnaryOperationExpression	- 0xfff		1043788	1					
ANR	1043863	UnaryOperator	-		1043788	0					
ANR	1043864	PrimaryExpression	0xfff		1043788	1					
ANR	1043865	ReturnStatement	return 1 ;	996:2:31783:31791	1043788	1	True				
ANR	1043866	PrimaryExpression	1		1043788	0					
ANR	1043867	ReturnStatement	return 0 ;	998:1:31795:31803	1043788	6	True				
ANR	1043868	PrimaryExpression	0		1043788	0					
ANR	1043869	ReturnType	static sljit_si		1043788	1					
ANR	1043870	Identifier	can_cache		1043788	2					
ANR	1043871	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1043788	3					
ANR	1043872	Parameter	sljit_si arg	978:26:31386:31397	1043788	0	True				
ANR	1043873	ParameterType	sljit_si		1043788	0					
ANR	1043874	Identifier	arg		1043788	1					
ANR	1043875	Parameter	sljit_sw argw	978:40:31400:31412	1043788	1	True				
ANR	1043876	ParameterType	sljit_sw		1043788	0					
ANR	1043877	Identifier	argw		1043788	1					
ANR	1043878	Parameter	sljit_si next_arg	978:55:31415:31431	1043788	2	True				
ANR	1043879	ParameterType	sljit_si		1043788	0					
ANR	1043880	Identifier	next_arg		1043788	1					
ANR	1043881	Parameter	sljit_sw next_argw	978:74:31434:31451	1043788	3	True				
ANR	1043882	ParameterType	sljit_sw		1043788	0					
ANR	1043883	Identifier	next_argw		1043788	1					
ANR	1043884	CFGEntryNode	ENTRY		1043788		True				
ANR	1043885	CFGExitNode	EXIT		1043788		True				
ANR	1043886	Symbol	next_arg		1043788						
ANR	1043887	Symbol	REG_MASK		1043788						
ANR	1043888	Symbol	SLJIT_MEM		1043788						
ANR	1043889	Symbol	arg		1043788						
ANR	1043890	Symbol	OFFS_REG_MASK		1043788						
ANR	1043891	Symbol	next_argw		1043788						
ANR	1043892	Symbol	diff		1043788						
ANR	1043893	Symbol	argw		1043788						
ANR	1043894	Function	getput_arg	1002:0:31868:35507							
ANR	1043895	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1043894	0					
ANR	1043896	CompoundStatement		1004:0:32027:35507	1043894	0					
ANR	1043897	IdentifierDeclStatement	"sljit_si tmp_r , other_r ;"	1005:1:32030:32053	1043894	0	True				
ANR	1043898	IdentifierDecl	tmp_r		1043894	0					
ANR	1043899	IdentifierDeclType	sljit_si		1043894	0					
ANR	1043900	Identifier	tmp_r		1043894	1					
ANR	1043901	IdentifierDecl	other_r		1043894	1					
ANR	1043902	IdentifierDeclType	sljit_si		1043894	0					
ANR	1043903	Identifier	other_r		1043894	1					
ANR	1043904	IdentifierDeclStatement	sljit_sw diff ;	1006:1:32056:32069	1043894	1	True				
ANR	1043905	IdentifierDecl	diff		1043894	0					
ANR	1043906	IdentifierDeclType	sljit_sw		1043894	0					
ANR	1043907	Identifier	diff		1043894	1					
ANR	1043908	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1008:1:32073:32102	1043894	2	True				
ANR	1043909	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1043894	0					
ANR	1043910	Callee	SLJIT_ASSERT		1043894	0					
ANR	1043911	Identifier	SLJIT_ASSERT		1043894	0					
ANR	1043912	ArgumentList	arg & SLJIT_MEM		1043894	1					
ANR	1043913	Argument	arg & SLJIT_MEM		1043894	0					
ANR	1043914	BitAndExpression	arg & SLJIT_MEM		1043894	0		&			
ANR	1043915	Identifier	arg		1043894	0					
ANR	1043916	Identifier	SLJIT_MEM		1043894	1					
ANR	1043917	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1043894	3					
ANR	1043918	Condition	! ( next_arg & SLJIT_MEM )	1009:5:32109:32131	1043894	0	True				
ANR	1043919	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1043894	0					
ANR	1043920	UnaryOperator	!		1043894	0					
ANR	1043921	BitAndExpression	next_arg & SLJIT_MEM		1043894	1		&			
ANR	1043922	Identifier	next_arg		1043894	0					
ANR	1043923	Identifier	SLJIT_MEM		1043894	1					
ANR	1043924	CompoundStatement		6:30:106:106	1043894	1					
ANR	1043925	ExpressionStatement	next_arg = 0	1010:2:32138:32150	1043894	0	True				
ANR	1043926	AssignmentExpression	next_arg = 0		1043894	0		=			
ANR	1043927	Identifier	next_arg		1043894	0					
ANR	1043928	PrimaryExpression	0		1043894	1					
ANR	1043929	ExpressionStatement	next_argw = 0	1011:2:32154:32167	1043894	1	True				
ANR	1043930	AssignmentExpression	next_argw = 0		1043894	0		=			
ANR	1043931	Identifier	next_argw		1043894	0					
ANR	1043932	PrimaryExpression	0		1043894	1					
ANR	1043933	ExpressionStatement	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg	1014:1:32174:32214	1043894	4	True				
ANR	1043934	AssignmentExpression	tmp_r = ( flags & STORE ) ? TMP_REG3 : reg		1043894	0		=			
ANR	1043935	Identifier	tmp_r		1043894	0					
ANR	1043936	ConditionalExpression	( flags & STORE ) ? TMP_REG3 : reg		1043894	1					
ANR	1043937	Condition	flags & STORE		1043894	0					
ANR	1043938	BitAndExpression	flags & STORE		1043894	0		&			
ANR	1043939	Identifier	flags		1043894	0					
ANR	1043940	Identifier	STORE		1043894	1					
ANR	1043941	Identifier	TMP_REG3		1043894	1					
ANR	1043942	Identifier	reg		1043894	2					
ANR	1043943	IfStatement	if ( SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) ) )		1043894	5					
ANR	1043944	Condition	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )	1016:5:32222:32273	1043894	0	True				
ANR	1043945	CallExpression	SLJIT_UNLIKELY ( ( flags & UPDATE ) && ( arg & REG_MASK ) )		1043894	0					
ANR	1043946	Callee	SLJIT_UNLIKELY		1043894	0					
ANR	1043947	Identifier	SLJIT_UNLIKELY		1043894	0					
ANR	1043948	ArgumentList	( flags & UPDATE ) && ( arg & REG_MASK )		1043894	1					
ANR	1043949	Argument	( flags & UPDATE ) && ( arg & REG_MASK )		1043894	0					
ANR	1043950	AndExpression	( flags & UPDATE ) && ( arg & REG_MASK )		1043894	0		&&			
ANR	1043951	BitAndExpression	flags & UPDATE		1043894	0		&			
ANR	1043952	Identifier	flags		1043894	0					
ANR	1043953	Identifier	UPDATE		1043894	1					
ANR	1043954	BitAndExpression	arg & REG_MASK		1043894	1		&			
ANR	1043955	Identifier	arg		1043894	0					
ANR	1043956	Identifier	REG_MASK		1043894	1					
ANR	1043957	CompoundStatement		13:59:248:248	1043894	1					
ANR	1043958	ExpressionStatement	other_r = OFFS_REG ( arg )	1019:2:32369:32392	1043894	0	True				
ANR	1043959	AssignmentExpression	other_r = OFFS_REG ( arg )		1043894	0		=			
ANR	1043960	Identifier	other_r		1043894	0					
ANR	1043961	CallExpression	OFFS_REG ( arg )		1043894	1					
ANR	1043962	Callee	OFFS_REG		1043894	0					
ANR	1043963	Identifier	OFFS_REG		1043894	0					
ANR	1043964	ArgumentList	arg		1043894	1					
ANR	1043965	Argument	arg		1043894	0					
ANR	1043966	Identifier	arg		1043894	0					
ANR	1043967	ExpressionStatement	arg &= 0xf	1020:2:32396:32406	1043894	1	True				
ANR	1043968	AssignmentExpression	arg &= 0xf		1043894	0		&=			
ANR	1043969	Identifier	arg		1043894	0					
ANR	1043970	PrimaryExpression	0xf		1043894	1					
ANR	1043971	ExpressionStatement	flags &= ~UPDATE	1021:2:32410:32426	1043894	2	True				
ANR	1043972	AssignmentExpression	flags &= ~UPDATE		1043894	0		&=			
ANR	1043973	Identifier	flags		1043894	0					
ANR	1043974	Identifier	~UPDATE		1043894	1					
ANR	1043975	IfStatement	if ( ! other_r )		1043894	3					
ANR	1043976	Condition	! other_r	1023:6:32435:32442	1043894	0	True				
ANR	1043977	UnaryOperationExpression	! other_r		1043894	0					
ANR	1043978	UnaryOperator	!		1043894	0					
ANR	1043979	Identifier	other_r		1043894	1					
ANR	1043980	CompoundStatement		20:16:417:417	1043894	1					
ANR	1043981	IfStatement	if ( ! ( argw & ~0xfff ) )		1043894	0					
ANR	1043982	Condition	! ( argw & ~0xfff )	1024:7:32454:32469	1043894	0	True				
ANR	1043983	UnaryOperationExpression	! ( argw & ~0xfff )		1043894	0					
ANR	1043984	UnaryOperator	!		1043894	0					
ANR	1043985	BitAndExpression	argw & ~0xfff		1043894	1		&			
ANR	1043986	Identifier	argw		1043894	0					
ANR	1043987	Identifier	~0xfff		1043894	1					
ANR	1043988	CompoundStatement		21:25:444:444	1043894	1					
ANR	1043989	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"	1025:4:32478:32569	1043894	0	True				
ANR	1043990	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw ) )"		1043894	0					
ANR	1043991	Callee	FAIL_IF		1043894	0					
ANR	1043992	Identifier	FAIL_IF		1043894	0					
ANR	1043993	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043894	1					
ANR	1043994	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043894	0					
ANR	1043995	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw )"		1043894	0					
ANR	1043996	Callee	push_inst32		1043894	0					
ANR	1043997	Identifier	push_inst32		1043894	0					
ANR	1043998	ArgumentList	compiler		1043894	1					
ANR	1043999	Argument	compiler		1043894	0					
ANR	1044000	Identifier	compiler		1043894	0					
ANR	1044001	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043894	1					
ANR	1044002	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043894	0		|			
ANR	1044003	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044004	Identifier	sljit_mem32		1043894	0					
ANR	1044005	Identifier	flags		1043894	1					
ANR	1044006	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( arg ) | argw		1043894	1		|			
ANR	1044007	Identifier	MEM_IMM12		1043894	0					
ANR	1044008	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | argw		1043894	1		|			
ANR	1044009	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044010	Callee	RT4		1043894	0					
ANR	1044011	Identifier	RT4		1043894	0					
ANR	1044012	ArgumentList	reg		1043894	1					
ANR	1044013	Argument	reg		1043894	0					
ANR	1044014	Identifier	reg		1043894	0					
ANR	1044015	InclusiveOrExpression	RN4 ( arg ) | argw		1043894	1		|			
ANR	1044016	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044017	Callee	RN4		1043894	0					
ANR	1044018	Identifier	RN4		1043894	0					
ANR	1044019	ArgumentList	arg		1043894	1					
ANR	1044020	Argument	arg		1043894	0					
ANR	1044021	Identifier	arg		1043894	0					
ANR	1044022	Identifier	argw		1043894	1					
ANR	1044023	ReturnStatement	"return push_inst32 ( compiler , ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw ) ) ;"	1026:4:32575:32646	1043894	1	True				
ANR	1044024	CallExpression	"push_inst32 ( compiler , ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw ) )"		1043894	0					
ANR	1044025	Callee	push_inst32		1043894	0					
ANR	1044026	Identifier	push_inst32		1043894	0					
ANR	1044027	ArgumentList	compiler		1043894	1					
ANR	1044028	Argument	compiler		1043894	0					
ANR	1044029	Identifier	compiler		1043894	0					
ANR	1044030	Argument	ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1043894	1					
ANR	1044031	InclusiveOrExpression	ADDWI | RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1043894	0		|			
ANR	1044032	Identifier	ADDWI		1043894	0					
ANR	1044033	InclusiveOrExpression	RD4 ( arg ) | RN4 ( arg ) | IMM12 ( argw )		1043894	1		|			
ANR	1044034	CallExpression	RD4 ( arg )		1043894	0					
ANR	1044035	Callee	RD4		1043894	0					
ANR	1044036	Identifier	RD4		1043894	0					
ANR	1044037	ArgumentList	arg		1043894	1					
ANR	1044038	Argument	arg		1043894	0					
ANR	1044039	Identifier	arg		1043894	0					
ANR	1044040	InclusiveOrExpression	RN4 ( arg ) | IMM12 ( argw )		1043894	1		|			
ANR	1044041	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044042	Callee	RN4		1043894	0					
ANR	1044043	Identifier	RN4		1043894	0					
ANR	1044044	ArgumentList	arg		1043894	1					
ANR	1044045	Argument	arg		1043894	0					
ANR	1044046	Identifier	arg		1043894	0					
ANR	1044047	CallExpression	IMM12 ( argw )		1043894	1					
ANR	1044048	Callee	IMM12		1043894	0					
ANR	1044049	Identifier	IMM12		1043894	0					
ANR	1044050	ArgumentList	argw		1043894	1					
ANR	1044051	Argument	argw		1043894	0					
ANR	1044052	Identifier	argw		1043894	0					
ANR	1044053	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM )		1043894	1					
ANR	1044054	Condition	compiler -> cache_arg == SLJIT_MEM	1029:7:32661:32692	1043894	0	True				
ANR	1044055	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1043894	0		==			
ANR	1044056	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044057	Identifier	compiler		1043894	0					
ANR	1044058	Identifier	cache_arg		1043894	1					
ANR	1044059	Identifier	SLJIT_MEM		1043894	1					
ANR	1044060	CompoundStatement		26:41:667:667	1043894	1					
ANR	1044061	IfStatement	if ( argw == compiler -> cache_argw )		1043894	0					
ANR	1044062	Condition	argw == compiler -> cache_argw	1030:8:32705:32732	1043894	0	True				
ANR	1044063	EqualityExpression	argw == compiler -> cache_argw		1043894	0		==			
ANR	1044064	Identifier	argw		1043894	0					
ANR	1044065	PtrMemberAccess	compiler -> cache_argw		1043894	1					
ANR	1044066	Identifier	compiler		1043894	0					
ANR	1044067	Identifier	cache_argw		1043894	1					
ANR	1044068	CompoundStatement		27:38:707:707	1043894	1					
ANR	1044069	ExpressionStatement	other_r = TMP_REG3	1031:5:32742:32760	1043894	0	True				
ANR	1044070	AssignmentExpression	other_r = TMP_REG3		1043894	0		=			
ANR	1044071	Identifier	other_r		1043894	0					
ANR	1044072	Identifier	TMP_REG3		1043894	1					
ANR	1044073	ExpressionStatement	argw = 0	1032:5:32767:32775	1043894	1	True				
ANR	1044074	AssignmentExpression	argw = 0		1043894	0		=			
ANR	1044075	Identifier	argw		1043894	0					
ANR	1044076	PrimaryExpression	0		1043894	1					
ANR	1044077	ElseStatement	else		1043894	0					
ANR	1044078	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1043894	0					
ANR	1044079	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1034:13:32796:32893	1043894	0	True				
ANR	1044080	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1043894	0		!=			
ANR	1044081	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1043894	0					
ANR	1044082	Callee	emit_set_delta		1043894	0					
ANR	1044083	Identifier	emit_set_delta		1043894	0					
ANR	1044084	ArgumentList	compiler		1043894	1					
ANR	1044085	Argument	compiler		1043894	0					
ANR	1044086	Identifier	compiler		1043894	0					
ANR	1044087	Argument	TMP_REG3		1043894	1					
ANR	1044088	Identifier	TMP_REG3		1043894	0					
ANR	1044089	Argument	TMP_REG3		1043894	2					
ANR	1044090	Identifier	TMP_REG3		1043894	0					
ANR	1044091	Argument	argw - compiler -> cache_argw		1043894	3					
ANR	1044092	AdditiveExpression	argw - compiler -> cache_argw		1043894	0		-			
ANR	1044093	Identifier	argw		1043894	0					
ANR	1044094	PtrMemberAccess	compiler -> cache_argw		1043894	1					
ANR	1044095	Identifier	compiler		1043894	0					
ANR	1044096	Identifier	cache_argw		1043894	1					
ANR	1044097	Identifier	SLJIT_ERR_UNSUPPORTED		1043894	1					
ANR	1044098	CompoundStatement		31:113:868:868	1043894	1					
ANR	1044099	ExpressionStatement	FAIL_IF ( compiler -> error )	1035:5:32903:32927	1043894	0	True				
ANR	1044100	CallExpression	FAIL_IF ( compiler -> error )		1043894	0					
ANR	1044101	Callee	FAIL_IF		1043894	0					
ANR	1044102	Identifier	FAIL_IF		1043894	0					
ANR	1044103	ArgumentList	compiler -> error		1043894	1					
ANR	1044104	Argument	compiler -> error		1043894	0					
ANR	1044105	PtrMemberAccess	compiler -> error		1043894	0					
ANR	1044106	Identifier	compiler		1043894	0					
ANR	1044107	Identifier	error		1043894	1					
ANR	1044108	ExpressionStatement	compiler -> cache_argw = argw	1036:5:32934:32961	1043894	1	True				
ANR	1044109	AssignmentExpression	compiler -> cache_argw = argw		1043894	0		=			
ANR	1044110	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044111	Identifier	compiler		1043894	0					
ANR	1044112	Identifier	cache_argw		1043894	1					
ANR	1044113	Identifier	argw		1043894	1					
ANR	1044114	ExpressionStatement	other_r = TMP_REG3	1037:5:32968:32986	1043894	2	True				
ANR	1044115	AssignmentExpression	other_r = TMP_REG3		1043894	0		=			
ANR	1044116	Identifier	other_r		1043894	0					
ANR	1044117	Identifier	TMP_REG3		1043894	1					
ANR	1044118	ExpressionStatement	argw = 0	1038:5:32993:33001	1043894	3	True				
ANR	1044119	AssignmentExpression	argw = 0		1043894	0		=			
ANR	1044120	Identifier	argw		1043894	0					
ANR	1044121	PrimaryExpression	0		1043894	1					
ANR	1044122	IfStatement	if ( argw )		1043894	2					
ANR	1044123	Condition	argw	1042:7:33022:33025	1043894	0	True				
ANR	1044124	Identifier	argw		1043894	0					
ANR	1044125	CompoundStatement		39:13:1000:1000	1043894	1					
ANR	1044126	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1043:4:33034:33083	1043894	0	True				
ANR	1044127	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1043894	0					
ANR	1044128	Callee	FAIL_IF		1043894	0					
ANR	1044129	Identifier	FAIL_IF		1043894	0					
ANR	1044130	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	1					
ANR	1044131	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	0					
ANR	1044132	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	0					
ANR	1044133	Callee	load_immediate		1043894	0					
ANR	1044134	Identifier	load_immediate		1043894	0					
ANR	1044135	ArgumentList	compiler		1043894	1					
ANR	1044136	Argument	compiler		1043894	0					
ANR	1044137	Identifier	compiler		1043894	0					
ANR	1044138	Argument	TMP_REG3		1043894	1					
ANR	1044139	Identifier	TMP_REG3		1043894	0					
ANR	1044140	Argument	argw		1043894	2					
ANR	1044141	Identifier	argw		1043894	0					
ANR	1044142	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1044:4:33089:33120	1043894	1	True				
ANR	1044143	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1043894	0		=			
ANR	1044144	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044145	Identifier	compiler		1043894	0					
ANR	1044146	Identifier	cache_arg		1043894	1					
ANR	1044147	Identifier	SLJIT_MEM		1043894	1					
ANR	1044148	ExpressionStatement	compiler -> cache_argw = argw	1045:4:33126:33153	1043894	2	True				
ANR	1044149	AssignmentExpression	compiler -> cache_argw = argw		1043894	0		=			
ANR	1044150	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044151	Identifier	compiler		1043894	0					
ANR	1044152	Identifier	cache_argw		1043894	1					
ANR	1044153	Identifier	argw		1043894	1					
ANR	1044154	ExpressionStatement	other_r = TMP_REG3	1046:4:33159:33177	1043894	3	True				
ANR	1044155	AssignmentExpression	other_r = TMP_REG3		1043894	0		=			
ANR	1044156	Identifier	other_r		1043894	0					
ANR	1044157	Identifier	TMP_REG3		1043894	1					
ANR	1044158	ExpressionStatement	argw = 0	1047:4:33183:33191	1043894	4	True				
ANR	1044159	AssignmentExpression	argw = 0		1043894	0		=			
ANR	1044160	Identifier	argw		1043894	0					
ANR	1044161	PrimaryExpression	0		1043894	1					
ANR	1044162	ExpressionStatement	argw &= 0x3	1051:2:33205:33216	1043894	4	True				
ANR	1044163	AssignmentExpression	argw &= 0x3		1043894	0		&=			
ANR	1044164	Identifier	argw		1043894	0					
ANR	1044165	PrimaryExpression	0x3		1043894	1					
ANR	1044166	IfStatement	"if ( ! argw && IS_3_LO_REGS ( reg , arg , other_r ) )"		1043894	5					
ANR	1044167	Condition	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"	1052:6:33224:33263	1043894	0	True				
ANR	1044168	AndExpression	"! argw && IS_3_LO_REGS ( reg , arg , other_r )"		1043894	0		&&			
ANR	1044169	UnaryOperationExpression	! argw		1043894	0					
ANR	1044170	UnaryOperator	!		1043894	0					
ANR	1044171	Identifier	argw		1043894	1					
ANR	1044172	CallExpression	"IS_3_LO_REGS ( reg , arg , other_r )"		1043894	1					
ANR	1044173	Callee	IS_3_LO_REGS		1043894	0					
ANR	1044174	Identifier	IS_3_LO_REGS		1043894	0					
ANR	1044175	ArgumentList	reg		1043894	1					
ANR	1044176	Argument	reg		1043894	0					
ANR	1044177	Identifier	reg		1043894	0					
ANR	1044178	Argument	arg		1043894	1					
ANR	1044179	Identifier	arg		1043894	0					
ANR	1044180	Argument	other_r		1043894	2					
ANR	1044181	Identifier	other_r		1043894	0					
ANR	1044182	CompoundStatement		49:48:1238:1238	1043894	1					
ANR	1044183	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"	1053:3:33271:33358	1043894	0	True				
ANR	1044184	CallExpression	"FAIL_IF ( push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) ) )"		1043894	0					
ANR	1044185	Callee	FAIL_IF		1043894	0					
ANR	1044186	Identifier	FAIL_IF		1043894	0					
ANR	1044187	ArgumentList	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043894	1					
ANR	1044188	Argument	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043894	0					
ANR	1044189	CallExpression	"push_inst16 ( compiler , sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r ) )"		1043894	0					
ANR	1044190	Callee	push_inst16		1043894	0					
ANR	1044191	Identifier	push_inst16		1043894	0					
ANR	1044192	ArgumentList	compiler		1043894	1					
ANR	1044193	Argument	compiler		1043894	0					
ANR	1044194	Identifier	compiler		1043894	0					
ANR	1044195	Argument	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043894	1					
ANR	1044196	InclusiveOrExpression	sljit_mem16 [ flags ] | RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043894	0		|			
ANR	1044197	ArrayIndexing	sljit_mem16 [ flags ]		1043894	0					
ANR	1044198	Identifier	sljit_mem16		1043894	0					
ANR	1044199	Identifier	flags		1043894	1					
ANR	1044200	InclusiveOrExpression	RD3 ( reg ) | RN3 ( arg ) | RM3 ( other_r )		1043894	1		|			
ANR	1044201	CallExpression	RD3 ( reg )		1043894	0					
ANR	1044202	Callee	RD3		1043894	0					
ANR	1044203	Identifier	RD3		1043894	0					
ANR	1044204	ArgumentList	reg		1043894	1					
ANR	1044205	Argument	reg		1043894	0					
ANR	1044206	Identifier	reg		1043894	0					
ANR	1044207	InclusiveOrExpression	RN3 ( arg ) | RM3 ( other_r )		1043894	1		|			
ANR	1044208	CallExpression	RN3 ( arg )		1043894	0					
ANR	1044209	Callee	RN3		1043894	0					
ANR	1044210	Identifier	RN3		1043894	0					
ANR	1044211	ArgumentList	arg		1043894	1					
ANR	1044212	Argument	arg		1043894	0					
ANR	1044213	Identifier	arg		1043894	0					
ANR	1044214	CallExpression	RM3 ( other_r )		1043894	1					
ANR	1044215	Callee	RM3		1043894	0					
ANR	1044216	Identifier	RM3		1043894	0					
ANR	1044217	ArgumentList	other_r		1043894	1					
ANR	1044218	Argument	other_r		1043894	0					
ANR	1044219	Identifier	other_r		1043894	0					
ANR	1044220	ReturnStatement	"return push_inst16 ( compiler , ADD | SET_REGS44 ( arg , other_r ) ) ;"	1054:3:33363:33423	1043894	1	True				
ANR	1044221	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( arg , other_r ) )"		1043894	0					
ANR	1044222	Callee	push_inst16		1043894	0					
ANR	1044223	Identifier	push_inst16		1043894	0					
ANR	1044224	ArgumentList	compiler		1043894	1					
ANR	1044225	Argument	compiler		1043894	0					
ANR	1044226	Identifier	compiler		1043894	0					
ANR	1044227	Argument	"ADD | SET_REGS44 ( arg , other_r )"		1043894	1					
ANR	1044228	InclusiveOrExpression	"ADD | SET_REGS44 ( arg , other_r )"		1043894	0		|			
ANR	1044229	Identifier	ADD		1043894	0					
ANR	1044230	CallExpression	"SET_REGS44 ( arg , other_r )"		1043894	1					
ANR	1044231	Callee	SET_REGS44		1043894	0					
ANR	1044232	Identifier	SET_REGS44		1043894	0					
ANR	1044233	ArgumentList	arg		1043894	1					
ANR	1044234	Argument	arg		1043894	0					
ANR	1044235	Identifier	arg		1043894	0					
ANR	1044236	Argument	other_r		1043894	1					
ANR	1044237	Identifier	other_r		1043894	0					
ANR	1044238	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"	1056:2:33431:33532	1043894	6	True				
ANR	1044239	CallExpression	"FAIL_IF ( push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) ) )"		1043894	0					
ANR	1044240	Callee	FAIL_IF		1043894	0					
ANR	1044241	Identifier	FAIL_IF		1043894	0					
ANR	1044242	ArgumentList	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043894	1					
ANR	1044243	Argument	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043894	0					
ANR	1044244	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 ) )"		1043894	0					
ANR	1044245	Callee	push_inst32		1043894	0					
ANR	1044246	Identifier	push_inst32		1043894	0					
ANR	1044247	ArgumentList	compiler		1043894	1					
ANR	1044248	Argument	compiler		1043894	0					
ANR	1044249	Identifier	compiler		1043894	0					
ANR	1044250	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043894	1					
ANR	1044251	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043894	0		|			
ANR	1044252	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044253	Identifier	sljit_mem32		1043894	0					
ANR	1044254	Identifier	flags		1043894	1					
ANR	1044255	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043894	1		|			
ANR	1044256	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044257	Callee	RT4		1043894	0					
ANR	1044258	Identifier	RT4		1043894	0					
ANR	1044259	ArgumentList	reg		1043894	1					
ANR	1044260	Argument	reg		1043894	0					
ANR	1044261	Identifier	reg		1043894	0					
ANR	1044262	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 4 )		1043894	1		|			
ANR	1044263	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044264	Callee	RN4		1043894	0					
ANR	1044265	Identifier	RN4		1043894	0					
ANR	1044266	ArgumentList	arg		1043894	1					
ANR	1044267	Argument	arg		1043894	0					
ANR	1044268	Identifier	arg		1043894	0					
ANR	1044269	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 4 )		1043894	1		|			
ANR	1044270	CallExpression	RM4 ( other_r )		1043894	0					
ANR	1044271	Callee	RM4		1043894	0					
ANR	1044272	Identifier	RM4		1043894	0					
ANR	1044273	ArgumentList	other_r		1043894	1					
ANR	1044274	Argument	other_r		1043894	0					
ANR	1044275	Identifier	other_r		1043894	0					
ANR	1044276	ShiftExpression	argw << 4		1043894	1		<<			
ANR	1044277	Identifier	argw		1043894	0					
ANR	1044278	PrimaryExpression	4		1043894	1					
ANR	1044279	ReturnStatement	"return push_inst32 ( compiler , ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 ) ) ;"	1057:2:33536:33622	1043894	7	True				
ANR	1044280	CallExpression	"push_inst32 ( compiler , ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 ) )"		1043894	0					
ANR	1044281	Callee	push_inst32		1043894	0					
ANR	1044282	Identifier	push_inst32		1043894	0					
ANR	1044283	ArgumentList	compiler		1043894	1					
ANR	1044284	Argument	compiler		1043894	0					
ANR	1044285	Identifier	compiler		1043894	0					
ANR	1044286	Argument	ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1043894	1					
ANR	1044287	InclusiveOrExpression	ADD_W | RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1043894	0		|			
ANR	1044288	Identifier	ADD_W		1043894	0					
ANR	1044289	InclusiveOrExpression	RD4 ( arg ) | RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1043894	1		|			
ANR	1044290	CallExpression	RD4 ( arg )		1043894	0					
ANR	1044291	Callee	RD4		1043894	0					
ANR	1044292	Identifier	RD4		1043894	0					
ANR	1044293	ArgumentList	arg		1043894	1					
ANR	1044294	Argument	arg		1043894	0					
ANR	1044295	Identifier	arg		1043894	0					
ANR	1044296	InclusiveOrExpression	RN4 ( arg ) | RM4 ( other_r ) | ( argw << 6 )		1043894	1		|			
ANR	1044297	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044298	Callee	RN4		1043894	0					
ANR	1044299	Identifier	RN4		1043894	0					
ANR	1044300	ArgumentList	arg		1043894	1					
ANR	1044301	Argument	arg		1043894	0					
ANR	1044302	Identifier	arg		1043894	0					
ANR	1044303	InclusiveOrExpression	RM4 ( other_r ) | ( argw << 6 )		1043894	1		|			
ANR	1044304	CallExpression	RM4 ( other_r )		1043894	0					
ANR	1044305	Callee	RM4		1043894	0					
ANR	1044306	Identifier	RM4		1043894	0					
ANR	1044307	ArgumentList	other_r		1043894	1					
ANR	1044308	Argument	other_r		1043894	0					
ANR	1044309	Identifier	other_r		1043894	0					
ANR	1044310	ShiftExpression	argw << 6		1043894	1		<<			
ANR	1044311	Identifier	argw		1043894	0					
ANR	1044312	PrimaryExpression	6		1043894	1					
ANR	1044313	ExpressionStatement	flags &= ~UPDATE	1059:1:33628:33644	1043894	6	True				
ANR	1044314	AssignmentExpression	flags &= ~UPDATE		1043894	0		&=			
ANR	1044315	Identifier	flags		1043894	0					
ANR	1044316	Identifier	~UPDATE		1043894	1					
ANR	1044317	ExpressionStatement	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )	1061:1:33648:33684	1043894	7	True				
ANR	1044318	CallExpression	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )		1043894	0					
ANR	1044319	Callee	SLJIT_ASSERT		1043894	0					
ANR	1044320	Identifier	SLJIT_ASSERT		1043894	0					
ANR	1044321	ArgumentList	! ( arg & OFFS_REG_MASK )		1043894	1					
ANR	1044322	Argument	! ( arg & OFFS_REG_MASK )		1043894	0					
ANR	1044323	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1043894	0					
ANR	1044324	UnaryOperator	!		1043894	0					
ANR	1044325	BitAndExpression	arg & OFFS_REG_MASK		1043894	1		&			
ANR	1044326	Identifier	arg		1043894	0					
ANR	1044327	Identifier	OFFS_REG_MASK		1043894	1					
ANR	1044328	IfStatement	if ( compiler -> cache_arg == arg )		1043894	8					
ANR	1044329	Condition	compiler -> cache_arg == arg	1063:5:33692:33717	1043894	0	True				
ANR	1044330	EqualityExpression	compiler -> cache_arg == arg		1043894	0		==			
ANR	1044331	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044332	Identifier	compiler		1043894	0					
ANR	1044333	Identifier	cache_arg		1043894	1					
ANR	1044334	Identifier	arg		1043894	1					
ANR	1044335	CompoundStatement		60:33:1692:1692	1043894	1					
ANR	1044336	ExpressionStatement	diff = argw - compiler -> cache_argw	1064:2:33724:33758	1043894	0	True				
ANR	1044337	AssignmentExpression	diff = argw - compiler -> cache_argw		1043894	0		=			
ANR	1044338	Identifier	diff		1043894	0					
ANR	1044339	AdditiveExpression	argw - compiler -> cache_argw		1043894	1		-			
ANR	1044340	Identifier	argw		1043894	0					
ANR	1044341	PtrMemberAccess	compiler -> cache_argw		1043894	1					
ANR	1044342	Identifier	compiler		1043894	0					
ANR	1044343	Identifier	cache_argw		1043894	1					
ANR	1044344	IfStatement	if ( ! ( diff & ~0xfff ) )		1043894	1					
ANR	1044345	Condition	! ( diff & ~0xfff )	1065:6:33766:33781	1043894	0	True				
ANR	1044346	UnaryOperationExpression	! ( diff & ~0xfff )		1043894	0					
ANR	1044347	UnaryOperator	!		1043894	0					
ANR	1044348	BitAndExpression	diff & ~0xfff		1043894	1		&			
ANR	1044349	Identifier	diff		1043894	0					
ANR	1044350	Identifier	~0xfff		1043894	1					
ANR	1044351	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff ) ;"	1066:3:33787:33881	1043894	1	True				
ANR	1044352	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff )"		1043894	0					
ANR	1044353	Callee	push_inst32		1043894	0					
ANR	1044354	Identifier	push_inst32		1043894	0					
ANR	1044355	ArgumentList	compiler		1043894	1					
ANR	1044356	Argument	compiler		1043894	0					
ANR	1044357	Identifier	compiler		1043894	0					
ANR	1044358	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1043894	1					
ANR	1044359	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1043894	0		|			
ANR	1044360	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044361	Identifier	sljit_mem32		1043894	0					
ANR	1044362	Identifier	flags		1043894	1					
ANR	1044363	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1043894	1		|			
ANR	1044364	Identifier	MEM_IMM12		1043894	0					
ANR	1044365	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | diff		1043894	1		|			
ANR	1044366	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044367	Callee	RT4		1043894	0					
ANR	1044368	Identifier	RT4		1043894	0					
ANR	1044369	ArgumentList	reg		1043894	1					
ANR	1044370	Argument	reg		1043894	0					
ANR	1044371	Identifier	reg		1043894	0					
ANR	1044372	InclusiveOrExpression	RN4 ( TMP_REG3 ) | diff		1043894	1		|			
ANR	1044373	CallExpression	RN4 ( TMP_REG3 )		1043894	0					
ANR	1044374	Callee	RN4		1043894	0					
ANR	1044375	Identifier	RN4		1043894	0					
ANR	1044376	ArgumentList	TMP_REG3		1043894	1					
ANR	1044377	Argument	TMP_REG3		1043894	0					
ANR	1044378	Identifier	TMP_REG3		1043894	0					
ANR	1044379	Identifier	diff		1043894	1					
ANR	1044380	IfStatement	if ( ! ( ( compiler -> cache_argw - argw ) & ~0xff ) )		1043894	2					
ANR	1044381	Condition	! ( ( compiler -> cache_argw - argw ) & ~0xff )	1067:6:33889:33928	1043894	0	True				
ANR	1044382	UnaryOperationExpression	! ( ( compiler -> cache_argw - argw ) & ~0xff )		1043894	0					
ANR	1044383	UnaryOperator	!		1043894	0					
ANR	1044384	BitAndExpression	( compiler -> cache_argw - argw ) & ~0xff		1043894	1		&			
ANR	1044385	AdditiveExpression	compiler -> cache_argw - argw		1043894	0		-			
ANR	1044386	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044387	Identifier	compiler		1043894	0					
ANR	1044388	Identifier	cache_argw		1043894	1					
ANR	1044389	Identifier	argw		1043894	1					
ANR	1044390	Identifier	~0xff		1043894	1					
ANR	1044391	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw ) ) ;"	1068:3:33934:34052	1043894	1	True				
ANR	1044392	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw ) )"		1043894	0					
ANR	1044393	Callee	push_inst32		1043894	0					
ANR	1044394	Identifier	push_inst32		1043894	0					
ANR	1044395	ArgumentList	compiler		1043894	1					
ANR	1044396	Argument	compiler		1043894	0					
ANR	1044397	Identifier	compiler		1043894	0					
ANR	1044398	Argument	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1043894	1					
ANR	1044399	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1043894	0		|			
ANR	1044400	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044401	Identifier	sljit_mem32		1043894	0					
ANR	1044402	Identifier	flags		1043894	1					
ANR	1044403	InclusiveOrExpression	MEM_IMM8 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1043894	1		|			
ANR	1044404	Identifier	MEM_IMM8		1043894	0					
ANR	1044405	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1043894	1		|			
ANR	1044406	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044407	Callee	RT4		1043894	0					
ANR	1044408	Identifier	RT4		1043894	0					
ANR	1044409	ArgumentList	reg		1043894	1					
ANR	1044410	Argument	reg		1043894	0					
ANR	1044411	Identifier	reg		1043894	0					
ANR	1044412	InclusiveOrExpression	RN4 ( TMP_REG3 ) | ( compiler -> cache_argw - argw )		1043894	1		|			
ANR	1044413	CallExpression	RN4 ( TMP_REG3 )		1043894	0					
ANR	1044414	Callee	RN4		1043894	0					
ANR	1044415	Identifier	RN4		1043894	0					
ANR	1044416	ArgumentList	TMP_REG3		1043894	1					
ANR	1044417	Argument	TMP_REG3		1043894	0					
ANR	1044418	Identifier	TMP_REG3		1043894	0					
ANR	1044419	AdditiveExpression	compiler -> cache_argw - argw		1043894	1		-			
ANR	1044420	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044421	Identifier	compiler		1043894	0					
ANR	1044422	Identifier	cache_argw		1043894	1					
ANR	1044423	Identifier	argw		1043894	1					
ANR	1044424	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED )"		1043894	3					
ANR	1044425	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"	1069:6:34060:34134	1043894	0	True				
ANR	1044426	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff ) != SLJIT_ERR_UNSUPPORTED"		1043894	0		!=			
ANR	1044427	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , diff )"		1043894	0					
ANR	1044428	Callee	emit_set_delta		1043894	0					
ANR	1044429	Identifier	emit_set_delta		1043894	0					
ANR	1044430	ArgumentList	compiler		1043894	1					
ANR	1044431	Argument	compiler		1043894	0					
ANR	1044432	Identifier	compiler		1043894	0					
ANR	1044433	Argument	TMP_REG3		1043894	1					
ANR	1044434	Identifier	TMP_REG3		1043894	0					
ANR	1044435	Argument	TMP_REG3		1043894	2					
ANR	1044436	Identifier	TMP_REG3		1043894	0					
ANR	1044437	Argument	diff		1043894	3					
ANR	1044438	Identifier	diff		1043894	0					
ANR	1044439	Identifier	SLJIT_ERR_UNSUPPORTED		1043894	1					
ANR	1044440	CompoundStatement		66:83:2109:2109	1043894	1					
ANR	1044441	ExpressionStatement	FAIL_IF ( compiler -> error )	1070:3:34142:34166	1043894	0	True				
ANR	1044442	CallExpression	FAIL_IF ( compiler -> error )		1043894	0					
ANR	1044443	Callee	FAIL_IF		1043894	0					
ANR	1044444	Identifier	FAIL_IF		1043894	0					
ANR	1044445	ArgumentList	compiler -> error		1043894	1					
ANR	1044446	Argument	compiler -> error		1043894	0					
ANR	1044447	PtrMemberAccess	compiler -> error		1043894	0					
ANR	1044448	Identifier	compiler		1043894	0					
ANR	1044449	Identifier	error		1043894	1					
ANR	1044450	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 ) ;"	1071:3:34171:34262	1043894	1	True				
ANR	1044451	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 )"		1043894	0					
ANR	1044452	Callee	push_inst32		1043894	0					
ANR	1044453	Identifier	push_inst32		1043894	0					
ANR	1044454	ArgumentList	compiler		1043894	1					
ANR	1044455	Argument	compiler		1043894	0					
ANR	1044456	Identifier	compiler		1043894	0					
ANR	1044457	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1					
ANR	1044458	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	0		|			
ANR	1044459	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044460	Identifier	sljit_mem32		1043894	0					
ANR	1044461	Identifier	flags		1043894	1					
ANR	1044462	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044463	Identifier	MEM_IMM12		1043894	0					
ANR	1044464	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044465	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044466	Callee	RT4		1043894	0					
ANR	1044467	Identifier	RT4		1043894	0					
ANR	1044468	ArgumentList	reg		1043894	1					
ANR	1044469	Argument	reg		1043894	0					
ANR	1044470	Identifier	reg		1043894	0					
ANR	1044471	InclusiveOrExpression	RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044472	CallExpression	RN4 ( TMP_REG3 )		1043894	0					
ANR	1044473	Callee	RN4		1043894	0					
ANR	1044474	Identifier	RN4		1043894	0					
ANR	1044475	ArgumentList	TMP_REG3		1043894	1					
ANR	1044476	Argument	TMP_REG3		1043894	0					
ANR	1044477	Identifier	TMP_REG3		1043894	0					
ANR	1044478	PrimaryExpression	0		1043894	1					
ANR	1044479	ExpressionStatement	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )	1075:1:34273:34344	1043894	9	True				
ANR	1044480	AssignmentExpression	next_arg = ( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )		1043894	0		=			
ANR	1044481	Identifier	next_arg		1043894	0					
ANR	1044482	AndExpression	( arg & REG_MASK ) && ( arg == next_arg ) && ( argw != next_argw )		1043894	1		&&			
ANR	1044483	BitAndExpression	arg & REG_MASK		1043894	0		&			
ANR	1044484	Identifier	arg		1043894	0					
ANR	1044485	Identifier	REG_MASK		1043894	1					
ANR	1044486	AndExpression	( arg == next_arg ) && ( argw != next_argw )		1043894	1		&&			
ANR	1044487	EqualityExpression	arg == next_arg		1043894	0		==			
ANR	1044488	Identifier	arg		1043894	0					
ANR	1044489	Identifier	next_arg		1043894	1					
ANR	1044490	EqualityExpression	argw != next_argw		1043894	1		!=			
ANR	1044491	Identifier	argw		1043894	0					
ANR	1044492	Identifier	next_argw		1043894	1					
ANR	1044493	ExpressionStatement	arg &= 0xf	1076:1:34347:34357	1043894	10	True				
ANR	1044494	AssignmentExpression	arg &= 0xf		1043894	0		&=			
ANR	1044495	Identifier	arg		1043894	0					
ANR	1044496	PrimaryExpression	0xf		1043894	1					
ANR	1044497	IfStatement	if ( arg && compiler -> cache_arg == SLJIT_MEM )		1043894	11					
ANR	1044498	Condition	arg && compiler -> cache_arg == SLJIT_MEM	1077:5:34364:34402	1043894	0	True				
ANR	1044499	AndExpression	arg && compiler -> cache_arg == SLJIT_MEM		1043894	0		&&			
ANR	1044500	Identifier	arg		1043894	0					
ANR	1044501	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1043894	1		==			
ANR	1044502	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044503	Identifier	compiler		1043894	0					
ANR	1044504	Identifier	cache_arg		1043894	1					
ANR	1044505	Identifier	SLJIT_MEM		1043894	1					
ANR	1044506	CompoundStatement		74:46:2377:2377	1043894	1					
ANR	1044507	IfStatement	if ( compiler -> cache_argw == argw )		1043894	0					
ANR	1044508	Condition	compiler -> cache_argw == argw	1078:6:34413:34440	1043894	0	True				
ANR	1044509	EqualityExpression	compiler -> cache_argw == argw		1043894	0		==			
ANR	1044510	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044511	Identifier	compiler		1043894	0					
ANR	1044512	Identifier	cache_argw		1043894	1					
ANR	1044513	Identifier	argw		1043894	1					
ANR	1044514	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1079:3:34446:34532	1043894	1	True				
ANR	1044515	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1043894	0					
ANR	1044516	Callee	push_inst32		1043894	0					
ANR	1044517	Identifier	push_inst32		1043894	0					
ANR	1044518	ArgumentList	compiler		1043894	1					
ANR	1044519	Argument	compiler		1043894	0					
ANR	1044520	Identifier	compiler		1043894	0					
ANR	1044521	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1					
ANR	1044522	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	0		|			
ANR	1044523	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044524	Identifier	sljit_mem32		1043894	0					
ANR	1044525	Identifier	flags		1043894	1					
ANR	1044526	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044527	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044528	Callee	RT4		1043894	0					
ANR	1044529	Identifier	RT4		1043894	0					
ANR	1044530	ArgumentList	reg		1043894	1					
ANR	1044531	Argument	reg		1043894	0					
ANR	1044532	Identifier	reg		1043894	0					
ANR	1044533	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044534	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044535	Callee	RN4		1043894	0					
ANR	1044536	Identifier	RN4		1043894	0					
ANR	1044537	ArgumentList	arg		1043894	1					
ANR	1044538	Argument	arg		1043894	0					
ANR	1044539	Identifier	arg		1043894	0					
ANR	1044540	CallExpression	RM4 ( TMP_REG3 )		1043894	1					
ANR	1044541	Callee	RM4		1043894	0					
ANR	1044542	Identifier	RM4		1043894	0					
ANR	1044543	ArgumentList	TMP_REG3		1043894	1					
ANR	1044544	Argument	TMP_REG3		1043894	0					
ANR	1044545	Identifier	TMP_REG3		1043894	0					
ANR	1044546	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED )"		1043894	1					
ANR	1044547	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"	1080:6:34540:34637	1043894	0	True				
ANR	1044548	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw ) != SLJIT_ERR_UNSUPPORTED"		1043894	0		!=			
ANR	1044549	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , argw - compiler -> cache_argw )"		1043894	0					
ANR	1044550	Callee	emit_set_delta		1043894	0					
ANR	1044551	Identifier	emit_set_delta		1043894	0					
ANR	1044552	ArgumentList	compiler		1043894	1					
ANR	1044553	Argument	compiler		1043894	0					
ANR	1044554	Identifier	compiler		1043894	0					
ANR	1044555	Argument	TMP_REG3		1043894	1					
ANR	1044556	Identifier	TMP_REG3		1043894	0					
ANR	1044557	Argument	TMP_REG3		1043894	2					
ANR	1044558	Identifier	TMP_REG3		1043894	0					
ANR	1044559	Argument	argw - compiler -> cache_argw		1043894	3					
ANR	1044560	AdditiveExpression	argw - compiler -> cache_argw		1043894	0		-			
ANR	1044561	Identifier	argw		1043894	0					
ANR	1044562	PtrMemberAccess	compiler -> cache_argw		1043894	1					
ANR	1044563	Identifier	compiler		1043894	0					
ANR	1044564	Identifier	cache_argw		1043894	1					
ANR	1044565	Identifier	SLJIT_ERR_UNSUPPORTED		1043894	1					
ANR	1044566	CompoundStatement		77:106:2612:2612	1043894	1					
ANR	1044567	ExpressionStatement	FAIL_IF ( compiler -> error )	1081:3:34645:34669	1043894	0	True				
ANR	1044568	CallExpression	FAIL_IF ( compiler -> error )		1043894	0					
ANR	1044569	Callee	FAIL_IF		1043894	0					
ANR	1044570	Identifier	FAIL_IF		1043894	0					
ANR	1044571	ArgumentList	compiler -> error		1043894	1					
ANR	1044572	Argument	compiler -> error		1043894	0					
ANR	1044573	PtrMemberAccess	compiler -> error		1043894	0					
ANR	1044574	Identifier	compiler		1043894	0					
ANR	1044575	Identifier	error		1043894	1					
ANR	1044576	ExpressionStatement	compiler -> cache_argw = argw	1082:3:34674:34701	1043894	1	True				
ANR	1044577	AssignmentExpression	compiler -> cache_argw = argw		1043894	0		=			
ANR	1044578	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044579	Identifier	compiler		1043894	0					
ANR	1044580	Identifier	cache_argw		1043894	1					
ANR	1044581	Identifier	argw		1043894	1					
ANR	1044582	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1083:3:34706:34792	1043894	2	True				
ANR	1044583	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1043894	0					
ANR	1044584	Callee	push_inst32		1043894	0					
ANR	1044585	Identifier	push_inst32		1043894	0					
ANR	1044586	ArgumentList	compiler		1043894	1					
ANR	1044587	Argument	compiler		1043894	0					
ANR	1044588	Identifier	compiler		1043894	0					
ANR	1044589	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1					
ANR	1044590	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	0		|			
ANR	1044591	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044592	Identifier	sljit_mem32		1043894	0					
ANR	1044593	Identifier	flags		1043894	1					
ANR	1044594	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044595	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044596	Callee	RT4		1043894	0					
ANR	1044597	Identifier	RT4		1043894	0					
ANR	1044598	ArgumentList	reg		1043894	1					
ANR	1044599	Argument	reg		1043894	0					
ANR	1044600	Identifier	reg		1043894	0					
ANR	1044601	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044602	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044603	Callee	RN4		1043894	0					
ANR	1044604	Identifier	RN4		1043894	0					
ANR	1044605	ArgumentList	arg		1043894	1					
ANR	1044606	Argument	arg		1043894	0					
ANR	1044607	Identifier	arg		1043894	0					
ANR	1044608	CallExpression	RM4 ( TMP_REG3 )		1043894	1					
ANR	1044609	Callee	RM4		1043894	0					
ANR	1044610	Identifier	RM4		1043894	0					
ANR	1044611	ArgumentList	TMP_REG3		1043894	1					
ANR	1044612	Argument	TMP_REG3		1043894	0					
ANR	1044613	Identifier	TMP_REG3		1043894	0					
ANR	1044614	ExpressionStatement	compiler -> cache_argw = argw	1087:1:34803:34830	1043894	12	True				
ANR	1044615	AssignmentExpression	compiler -> cache_argw = argw		1043894	0		=			
ANR	1044616	PtrMemberAccess	compiler -> cache_argw		1043894	0					
ANR	1044617	Identifier	compiler		1043894	0					
ANR	1044618	Identifier	cache_argw		1043894	1					
ANR	1044619	Identifier	argw		1043894	1					
ANR	1044620	IfStatement	"if ( next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED )"		1043894	13					
ANR	1044621	Condition	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"	1088:5:34837:34918	1043894	0	True				
ANR	1044622	AndExpression	"next_arg && emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1043894	0		&&			
ANR	1044623	Identifier	next_arg		1043894	0					
ANR	1044624	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw ) != SLJIT_ERR_UNSUPPORTED"		1043894	1		!=			
ANR	1044625	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , arg , argw )"		1043894	0					
ANR	1044626	Callee	emit_set_delta		1043894	0					
ANR	1044627	Identifier	emit_set_delta		1043894	0					
ANR	1044628	ArgumentList	compiler		1043894	1					
ANR	1044629	Argument	compiler		1043894	0					
ANR	1044630	Identifier	compiler		1043894	0					
ANR	1044631	Argument	TMP_REG3		1043894	1					
ANR	1044632	Identifier	TMP_REG3		1043894	0					
ANR	1044633	Argument	arg		1043894	2					
ANR	1044634	Identifier	arg		1043894	0					
ANR	1044635	Argument	argw		1043894	3					
ANR	1044636	Identifier	argw		1043894	0					
ANR	1044637	Identifier	SLJIT_ERR_UNSUPPORTED		1043894	1					
ANR	1044638	CompoundStatement		85:89:2893:2893	1043894	1					
ANR	1044639	ExpressionStatement	FAIL_IF ( compiler -> error )	1089:2:34925:34949	1043894	0	True				
ANR	1044640	CallExpression	FAIL_IF ( compiler -> error )		1043894	0					
ANR	1044641	Callee	FAIL_IF		1043894	0					
ANR	1044642	Identifier	FAIL_IF		1043894	0					
ANR	1044643	ArgumentList	compiler -> error		1043894	1					
ANR	1044644	Argument	compiler -> error		1043894	0					
ANR	1044645	PtrMemberAccess	compiler -> error		1043894	0					
ANR	1044646	Identifier	compiler		1043894	0					
ANR	1044647	Identifier	error		1043894	1					
ANR	1044648	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1090:2:34953:34990	1043894	1	True				
ANR	1044649	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1043894	0		=			
ANR	1044650	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044651	Identifier	compiler		1043894	0					
ANR	1044652	Identifier	cache_arg		1043894	1					
ANR	1044653	InclusiveOrExpression	SLJIT_MEM | arg		1043894	1		|			
ANR	1044654	Identifier	SLJIT_MEM		1043894	0					
ANR	1044655	Identifier	arg		1043894	1					
ANR	1044656	ExpressionStatement	arg = 0	1091:2:34994:35001	1043894	2	True				
ANR	1044657	AssignmentExpression	arg = 0		1043894	0		=			
ANR	1044658	Identifier	arg		1043894	0					
ANR	1044659	PrimaryExpression	0		1043894	1					
ANR	1044660	ElseStatement	else		1043894	0					
ANR	1044661	CompoundStatement		90:6:2984:2984	1043894	0					
ANR	1044662	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1094:2:35016:35065	1043894	0	True				
ANR	1044663	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1043894	0					
ANR	1044664	Callee	FAIL_IF		1043894	0					
ANR	1044665	Identifier	FAIL_IF		1043894	0					
ANR	1044666	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	1					
ANR	1044667	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	0					
ANR	1044668	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1043894	0					
ANR	1044669	Callee	load_immediate		1043894	0					
ANR	1044670	Identifier	load_immediate		1043894	0					
ANR	1044671	ArgumentList	compiler		1043894	1					
ANR	1044672	Argument	compiler		1043894	0					
ANR	1044673	Identifier	compiler		1043894	0					
ANR	1044674	Argument	TMP_REG3		1043894	1					
ANR	1044675	Identifier	TMP_REG3		1043894	0					
ANR	1044676	Argument	argw		1043894	2					
ANR	1044677	Identifier	argw		1043894	0					
ANR	1044678	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1095:2:35069:35100	1043894	1	True				
ANR	1044679	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1043894	0		=			
ANR	1044680	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044681	Identifier	compiler		1043894	0					
ANR	1044682	Identifier	cache_arg		1043894	1					
ANR	1044683	Identifier	SLJIT_MEM		1043894	1					
ANR	1044684	ExpressionStatement	diff = argw - next_argw	1097:2:35105:35128	1043894	2	True				
ANR	1044685	AssignmentExpression	diff = argw - next_argw		1043894	0		=			
ANR	1044686	Identifier	diff		1043894	0					
ANR	1044687	AdditiveExpression	argw - next_argw		1043894	1		-			
ANR	1044688	Identifier	argw		1043894	0					
ANR	1044689	Identifier	next_argw		1043894	1					
ANR	1044690	IfStatement	if ( next_arg && diff <= 0xfff && diff >= - 0xfff )		1043894	3					
ANR	1044691	Condition	next_arg && diff <= 0xfff && diff >= - 0xfff	1098:6:35136:35178	1043894	0	True				
ANR	1044692	AndExpression	next_arg && diff <= 0xfff && diff >= - 0xfff		1043894	0		&&			
ANR	1044693	Identifier	next_arg		1043894	0					
ANR	1044694	AndExpression	diff <= 0xfff && diff >= - 0xfff		1043894	1		&&			
ANR	1044695	RelationalExpression	diff <= 0xfff		1043894	0		<=			
ANR	1044696	Identifier	diff		1043894	0					
ANR	1044697	PrimaryExpression	0xfff		1043894	1					
ANR	1044698	RelationalExpression	diff >= - 0xfff		1043894	1		>=			
ANR	1044699	Identifier	diff		1043894	0					
ANR	1044700	UnaryOperationExpression	- 0xfff		1043894	1					
ANR	1044701	UnaryOperator	-		1043894	0					
ANR	1044702	PrimaryExpression	0xfff		1043894	1					
ANR	1044703	CompoundStatement		95:51:3153:3153	1043894	1					
ANR	1044704	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) ) )"	1099:3:35186:35249	1043894	0	True				
ANR	1044705	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) ) )"		1043894	0					
ANR	1044706	Callee	FAIL_IF		1043894	0					
ANR	1044707	Identifier	FAIL_IF		1043894	0					
ANR	1044708	ArgumentList	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1043894	1					
ANR	1044709	Argument	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1043894	0					
ANR	1044710	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , arg ) )"		1043894	0					
ANR	1044711	Callee	push_inst16		1043894	0					
ANR	1044712	Identifier	push_inst16		1043894	0					
ANR	1044713	ArgumentList	compiler		1043894	1					
ANR	1044714	Argument	compiler		1043894	0					
ANR	1044715	Identifier	compiler		1043894	0					
ANR	1044716	Argument	"ADD | SET_REGS44 ( TMP_REG3 , arg )"		1043894	1					
ANR	1044717	InclusiveOrExpression	"ADD | SET_REGS44 ( TMP_REG3 , arg )"		1043894	0		|			
ANR	1044718	Identifier	ADD		1043894	0					
ANR	1044719	CallExpression	"SET_REGS44 ( TMP_REG3 , arg )"		1043894	1					
ANR	1044720	Callee	SET_REGS44		1043894	0					
ANR	1044721	Identifier	SET_REGS44		1043894	0					
ANR	1044722	ArgumentList	TMP_REG3		1043894	1					
ANR	1044723	Argument	TMP_REG3		1043894	0					
ANR	1044724	Identifier	TMP_REG3		1043894	0					
ANR	1044725	Argument	arg		1043894	1					
ANR	1044726	Identifier	arg		1043894	0					
ANR	1044727	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1100:3:35254:35291	1043894	1	True				
ANR	1044728	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1043894	0		=			
ANR	1044729	PtrMemberAccess	compiler -> cache_arg		1043894	0					
ANR	1044730	Identifier	compiler		1043894	0					
ANR	1044731	Identifier	cache_arg		1043894	1					
ANR	1044732	InclusiveOrExpression	SLJIT_MEM | arg		1043894	1		|			
ANR	1044733	Identifier	SLJIT_MEM		1043894	0					
ANR	1044734	Identifier	arg		1043894	1					
ANR	1044735	ExpressionStatement	arg = 0	1101:3:35296:35303	1043894	2	True				
ANR	1044736	AssignmentExpression	arg = 0		1043894	0		=			
ANR	1044737	Identifier	arg		1043894	0					
ANR	1044738	PrimaryExpression	0		1043894	1					
ANR	1044739	IfStatement	if ( arg )		1043894	14					
ANR	1044740	Condition	arg	1105:5:35318:35320	1043894	0	True				
ANR	1044741	Identifier	arg		1043894	0					
ANR	1044742	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) ) ;"	1106:2:35325:35411	1043894	1	True				
ANR	1044743	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 ) )"		1043894	0					
ANR	1044744	Callee	push_inst32		1043894	0					
ANR	1044745	Identifier	push_inst32		1043894	0					
ANR	1044746	ArgumentList	compiler		1043894	1					
ANR	1044747	Argument	compiler		1043894	0					
ANR	1044748	Identifier	compiler		1043894	0					
ANR	1044749	Argument	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1					
ANR	1044750	InclusiveOrExpression	sljit_mem32 [ flags ] | RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	0		|			
ANR	1044751	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044752	Identifier	sljit_mem32		1043894	0					
ANR	1044753	Identifier	flags		1043894	1					
ANR	1044754	InclusiveOrExpression	RT4 ( reg ) | RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044755	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044756	Callee	RT4		1043894	0					
ANR	1044757	Identifier	RT4		1043894	0					
ANR	1044758	ArgumentList	reg		1043894	1					
ANR	1044759	Argument	reg		1043894	0					
ANR	1044760	Identifier	reg		1043894	0					
ANR	1044761	InclusiveOrExpression	RN4 ( arg ) | RM4 ( TMP_REG3 )		1043894	1		|			
ANR	1044762	CallExpression	RN4 ( arg )		1043894	0					
ANR	1044763	Callee	RN4		1043894	0					
ANR	1044764	Identifier	RN4		1043894	0					
ANR	1044765	ArgumentList	arg		1043894	1					
ANR	1044766	Argument	arg		1043894	0					
ANR	1044767	Identifier	arg		1043894	0					
ANR	1044768	CallExpression	RM4 ( TMP_REG3 )		1043894	1					
ANR	1044769	Callee	RM4		1043894	0					
ANR	1044770	Identifier	RM4		1043894	0					
ANR	1044771	ArgumentList	TMP_REG3		1043894	1					
ANR	1044772	Argument	TMP_REG3		1043894	0					
ANR	1044773	Identifier	TMP_REG3		1043894	0					
ANR	1044774	ReturnStatement	"return push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 ) ;"	1107:1:35414:35505	1043894	15	True				
ANR	1044775	CallExpression	"push_inst32 ( compiler , sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0 )"		1043894	0					
ANR	1044776	Callee	push_inst32		1043894	0					
ANR	1044777	Identifier	push_inst32		1043894	0					
ANR	1044778	ArgumentList	compiler		1043894	1					
ANR	1044779	Argument	compiler		1043894	0					
ANR	1044780	Identifier	compiler		1043894	0					
ANR	1044781	Argument	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1					
ANR	1044782	InclusiveOrExpression	sljit_mem32 [ flags ] | MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	0		|			
ANR	1044783	ArrayIndexing	sljit_mem32 [ flags ]		1043894	0					
ANR	1044784	Identifier	sljit_mem32		1043894	0					
ANR	1044785	Identifier	flags		1043894	1					
ANR	1044786	InclusiveOrExpression	MEM_IMM12 | RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044787	Identifier	MEM_IMM12		1043894	0					
ANR	1044788	InclusiveOrExpression	RT4 ( reg ) | RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044789	CallExpression	RT4 ( reg )		1043894	0					
ANR	1044790	Callee	RT4		1043894	0					
ANR	1044791	Identifier	RT4		1043894	0					
ANR	1044792	ArgumentList	reg		1043894	1					
ANR	1044793	Argument	reg		1043894	0					
ANR	1044794	Identifier	reg		1043894	0					
ANR	1044795	InclusiveOrExpression	RN4 ( TMP_REG3 ) | 0		1043894	1		|			
ANR	1044796	CallExpression	RN4 ( TMP_REG3 )		1043894	0					
ANR	1044797	Callee	RN4		1043894	0					
ANR	1044798	Identifier	RN4		1043894	0					
ANR	1044799	ArgumentList	TMP_REG3		1043894	1					
ANR	1044800	Argument	TMP_REG3		1043894	0					
ANR	1044801	Identifier	TMP_REG3		1043894	0					
ANR	1044802	PrimaryExpression	0		1043894	1					
ANR	1044803	ReturnType	static sljit_si		1043894	1					
ANR	1044804	Identifier	getput_arg		1043894	2					
ANR	1044805	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1043894	3					
ANR	1044806	Parameter	struct sljit_compiler * compiler	1002:27:31895:31925	1043894	0	True				
ANR	1044807	ParameterType	struct sljit_compiler *		1043894	0					
ANR	1044808	Identifier	compiler		1043894	1					
ANR	1044809	Parameter	sljit_si flags	1002:60:31928:31941	1043894	1	True				
ANR	1044810	ParameterType	sljit_si		1043894	0					
ANR	1044811	Identifier	flags		1043894	1					
ANR	1044812	Parameter	sljit_si reg	1002:76:31944:31955	1043894	2	True				
ANR	1044813	ParameterType	sljit_si		1043894	0					
ANR	1044814	Identifier	reg		1043894	1					
ANR	1044815	Parameter	sljit_si arg	1003:1:31959:31970	1043894	3	True				
ANR	1044816	ParameterType	sljit_si		1043894	0					
ANR	1044817	Identifier	arg		1043894	1					
ANR	1044818	Parameter	sljit_sw argw	1003:15:31973:31985	1043894	4	True				
ANR	1044819	ParameterType	sljit_sw		1043894	0					
ANR	1044820	Identifier	argw		1043894	1					
ANR	1044821	Parameter	sljit_si next_arg	1003:30:31988:32004	1043894	5	True				
ANR	1044822	ParameterType	sljit_si		1043894	0					
ANR	1044823	Identifier	next_arg		1043894	1					
ANR	1044824	Parameter	sljit_sw next_argw	1003:49:32007:32024	1043894	6	True				
ANR	1044825	ParameterType	sljit_sw		1043894	0					
ANR	1044826	Identifier	next_argw		1043894	1					
ANR	1044827	CFGEntryNode	ENTRY		1043894		True				
ANR	1044828	CFGExitNode	EXIT		1043894		True				
ANR	1044829	Symbol	TMP_REG3		1043894						
ANR	1044830	Symbol	ADD		1043894						
ANR	1044831	Symbol	~0xff		1043894						
ANR	1044832	Symbol	SLJIT_MEM		1043894						
ANR	1044833	Symbol	push_inst16		1043894						
ANR	1044834	Symbol	* compiler		1043894						
ANR	1044835	Symbol	emit_set_delta		1043894						
ANR	1044836	Symbol	reg		1043894						
ANR	1044837	Symbol	sljit_mem32		1043894						
ANR	1044838	Symbol	* sljit_mem32		1043894						
ANR	1044839	Symbol	ADDWI		1043894						
ANR	1044840	Symbol	* flags		1043894						
ANR	1044841	Symbol	IMM12		1043894						
ANR	1044842	Symbol	~UPDATE		1043894						
ANR	1044843	Symbol	compiler -> cache_arg		1043894						
ANR	1044844	Symbol	OFFS_REG_MASK		1043894						
ANR	1044845	Symbol	next_argw		1043894						
ANR	1044846	Symbol	diff		1043894						
ANR	1044847	Symbol	ADD_W		1043894						
ANR	1044848	Symbol	other_r		1043894						
ANR	1044849	Symbol	RT4		1043894						
ANR	1044850	Symbol	OFFS_REG		1043894						
ANR	1044851	Symbol	SLJIT_UNLIKELY		1043894						
ANR	1044852	Symbol	RD3		1043894						
ANR	1044853	Symbol	compiler -> cache_argw		1043894						
ANR	1044854	Symbol	RD4		1043894						
ANR	1044855	Symbol	flags		1043894						
ANR	1044856	Symbol	MEM_IMM12		1043894						
ANR	1044857	Symbol	argw		1043894						
ANR	1044858	Symbol	SET_REGS44		1043894						
ANR	1044859	Symbol	load_immediate		1043894						
ANR	1044860	Symbol	arg		1043894						
ANR	1044861	Symbol	RM4		1043894						
ANR	1044862	Symbol	RM3		1043894						
ANR	1044863	Symbol	UPDATE		1043894						
ANR	1044864	Symbol	* sljit_mem16		1043894						
ANR	1044865	Symbol	compiler		1043894						
ANR	1044866	Symbol	push_inst32		1043894						
ANR	1044867	Symbol	tmp_r		1043894						
ANR	1044868	Symbol	sljit_mem16		1043894						
ANR	1044869	Symbol	next_arg		1043894						
ANR	1044870	Symbol	REG_MASK		1043894						
ANR	1044871	Symbol	IS_3_LO_REGS		1043894						
ANR	1044872	Symbol	MEM_IMM8		1043894						
ANR	1044873	Symbol	RN3		1043894						
ANR	1044874	Symbol	STORE		1043894						
ANR	1044875	Symbol	RN4		1043894						
ANR	1044876	Symbol	compiler -> error		1043894						
ANR	1044877	Symbol	~0xfff		1043894						
ANR	1044878	Symbol	SLJIT_ERR_UNSUPPORTED		1043894						
ANR	1044879	Function	emit_op_mem	1110:0:35510:35838							
ANR	1044880	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1044879	0					
ANR	1044881	CompoundStatement		1111:0:35643:35838	1044879	0					
ANR	1044882	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg , argw ) )"		1044879	0					
ANR	1044883	Condition	"getput_arg_fast ( compiler , flags , reg , arg , argw )"	1112:5:35650:35697	1044879	0	True				
ANR	1044884	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg , argw )"		1044879	0					
ANR	1044885	Callee	getput_arg_fast		1044879	0					
ANR	1044886	Identifier	getput_arg_fast		1044879	0					
ANR	1044887	ArgumentList	compiler		1044879	1					
ANR	1044888	Argument	compiler		1044879	0					
ANR	1044889	Identifier	compiler		1044879	0					
ANR	1044890	Argument	flags		1044879	1					
ANR	1044891	Identifier	flags		1044879	0					
ANR	1044892	Argument	reg		1044879	2					
ANR	1044893	Identifier	reg		1044879	0					
ANR	1044894	Argument	arg		1044879	3					
ANR	1044895	Identifier	arg		1044879	0					
ANR	1044896	Argument	argw		1044879	4					
ANR	1044897	Identifier	argw		1044879	0					
ANR	1044898	ReturnStatement	return compiler -> error ;	1113:2:35702:35724	1044879	1	True				
ANR	1044899	PtrMemberAccess	compiler -> error		1044879	0					
ANR	1044900	Identifier	compiler		1044879	0					
ANR	1044901	Identifier	error		1044879	1					
ANR	1044902	ExpressionStatement	compiler -> cache_arg = 0	1114:1:35727:35750	1044879	1	True				
ANR	1044903	AssignmentExpression	compiler -> cache_arg = 0		1044879	0		=			
ANR	1044904	PtrMemberAccess	compiler -> cache_arg		1044879	0					
ANR	1044905	Identifier	compiler		1044879	0					
ANR	1044906	Identifier	cache_arg		1044879	1					
ANR	1044907	PrimaryExpression	0		1044879	1					
ANR	1044908	ExpressionStatement	compiler -> cache_argw = 0	1115:1:35753:35777	1044879	2	True				
ANR	1044909	AssignmentExpression	compiler -> cache_argw = 0		1044879	0		=			
ANR	1044910	PtrMemberAccess	compiler -> cache_argw		1044879	0					
ANR	1044911	Identifier	compiler		1044879	0					
ANR	1044912	Identifier	cache_argw		1044879	1					
ANR	1044913	PrimaryExpression	0		1044879	1					
ANR	1044914	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 ) ;"	1116:1:35780:35836	1044879	3	True				
ANR	1044915	CallExpression	"getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 )"		1044879	0					
ANR	1044916	Callee	getput_arg		1044879	0					
ANR	1044917	Identifier	getput_arg		1044879	0					
ANR	1044918	ArgumentList	compiler		1044879	1					
ANR	1044919	Argument	compiler		1044879	0					
ANR	1044920	Identifier	compiler		1044879	0					
ANR	1044921	Argument	flags		1044879	1					
ANR	1044922	Identifier	flags		1044879	0					
ANR	1044923	Argument	reg		1044879	2					
ANR	1044924	Identifier	reg		1044879	0					
ANR	1044925	Argument	arg		1044879	3					
ANR	1044926	Identifier	arg		1044879	0					
ANR	1044927	Argument	argw		1044879	4					
ANR	1044928	Identifier	argw		1044879	0					
ANR	1044929	Argument	0		1044879	5					
ANR	1044930	PrimaryExpression	0		1044879	0					
ANR	1044931	Argument	0		1044879	6					
ANR	1044932	PrimaryExpression	0		1044879	0					
ANR	1044933	ReturnType	static SLJIT_INLINE sljit_si		1044879	1					
ANR	1044934	Identifier	emit_op_mem		1044879	2					
ANR	1044935	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1044879	3					
ANR	1044936	Parameter	struct sljit_compiler * compiler	1110:41:35551:35581	1044879	0	True				
ANR	1044937	ParameterType	struct sljit_compiler *		1044879	0					
ANR	1044938	Identifier	compiler		1044879	1					
ANR	1044939	Parameter	sljit_si flags	1110:74:35584:35597	1044879	1	True				
ANR	1044940	ParameterType	sljit_si		1044879	0					
ANR	1044941	Identifier	flags		1044879	1					
ANR	1044942	Parameter	sljit_si reg	1110:90:35600:35611	1044879	2	True				
ANR	1044943	ParameterType	sljit_si		1044879	0					
ANR	1044944	Identifier	reg		1044879	1					
ANR	1044945	Parameter	sljit_si arg	1110:104:35614:35625	1044879	3	True				
ANR	1044946	ParameterType	sljit_si		1044879	0					
ANR	1044947	Identifier	arg		1044879	1					
ANR	1044948	Parameter	sljit_sw argw	1110:118:35628:35640	1044879	4	True				
ANR	1044949	ParameterType	sljit_sw		1044879	0					
ANR	1044950	Identifier	argw		1044879	1					
ANR	1044951	CFGEntryNode	ENTRY		1044879		True				
ANR	1044952	CFGExitNode	EXIT		1044879		True				
ANR	1044953	Symbol	compiler -> cache_argw		1044879						
ANR	1044954	Symbol	getput_arg		1044879						
ANR	1044955	Symbol	reg		1044879						
ANR	1044956	Symbol	compiler -> cache_arg		1044879						
ANR	1044957	Symbol	arg		1044879						
ANR	1044958	Symbol	flags		1044879						
ANR	1044959	Symbol	* compiler		1044879						
ANR	1044960	Symbol	compiler		1044879						
ANR	1044961	Symbol	argw		1044879						
ANR	1044962	Symbol	getput_arg_fast		1044879						
ANR	1044963	Symbol	compiler -> error		1044879						
ANR	1044964	Function	emit_op_mem2	1119:0:35841:36161							
ANR	1044965	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1044964	0					
ANR	1044966	CompoundStatement		1120:0:36008:36161	1044964	0					
ANR	1044967	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1044964	0					
ANR	1044968	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1121:5:36015:36064	1044964	0	True				
ANR	1044969	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1044964	0					
ANR	1044970	Callee	getput_arg_fast		1044964	0					
ANR	1044971	Identifier	getput_arg_fast		1044964	0					
ANR	1044972	ArgumentList	compiler		1044964	1					
ANR	1044973	Argument	compiler		1044964	0					
ANR	1044974	Identifier	compiler		1044964	0					
ANR	1044975	Argument	flags		1044964	1					
ANR	1044976	Identifier	flags		1044964	0					
ANR	1044977	Argument	reg		1044964	2					
ANR	1044978	Identifier	reg		1044964	0					
ANR	1044979	Argument	arg1		1044964	3					
ANR	1044980	Identifier	arg1		1044964	0					
ANR	1044981	Argument	arg1w		1044964	4					
ANR	1044982	Identifier	arg1w		1044964	0					
ANR	1044983	ReturnStatement	return compiler -> error ;	1122:2:36069:36091	1044964	1	True				
ANR	1044984	PtrMemberAccess	compiler -> error		1044964	0					
ANR	1044985	Identifier	compiler		1044964	0					
ANR	1044986	Identifier	error		1044964	1					
ANR	1044987	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1123:1:36094:36159	1044964	1	True				
ANR	1044988	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1044964	0					
ANR	1044989	Callee	getput_arg		1044964	0					
ANR	1044990	Identifier	getput_arg		1044964	0					
ANR	1044991	ArgumentList	compiler		1044964	1					
ANR	1044992	Argument	compiler		1044964	0					
ANR	1044993	Identifier	compiler		1044964	0					
ANR	1044994	Argument	flags		1044964	1					
ANR	1044995	Identifier	flags		1044964	0					
ANR	1044996	Argument	reg		1044964	2					
ANR	1044997	Identifier	reg		1044964	0					
ANR	1044998	Argument	arg1		1044964	3					
ANR	1044999	Identifier	arg1		1044964	0					
ANR	1045000	Argument	arg1w		1044964	4					
ANR	1045001	Identifier	arg1w		1044964	0					
ANR	1045002	Argument	arg2		1044964	5					
ANR	1045003	Identifier	arg2		1044964	0					
ANR	1045004	Argument	arg2w		1044964	6					
ANR	1045005	Identifier	arg2w		1044964	0					
ANR	1045006	ReturnType	static SLJIT_INLINE sljit_si		1044964	1					
ANR	1045007	Identifier	emit_op_mem2		1044964	2					
ANR	1045008	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1044964	3					
ANR	1045009	Parameter	struct sljit_compiler * compiler	1119:42:35883:35913	1044964	0	True				
ANR	1045010	ParameterType	struct sljit_compiler *		1044964	0					
ANR	1045011	Identifier	compiler		1044964	1					
ANR	1045012	Parameter	sljit_si flags	1119:75:35916:35929	1044964	1	True				
ANR	1045013	ParameterType	sljit_si		1044964	0					
ANR	1045014	Identifier	flags		1044964	1					
ANR	1045015	Parameter	sljit_si reg	1119:91:35932:35943	1044964	2	True				
ANR	1045016	ParameterType	sljit_si		1044964	0					
ANR	1045017	Identifier	reg		1044964	1					
ANR	1045018	Parameter	sljit_si arg1	1119:105:35946:35958	1044964	3	True				
ANR	1045019	ParameterType	sljit_si		1044964	0					
ANR	1045020	Identifier	arg1		1044964	1					
ANR	1045021	Parameter	sljit_sw arg1w	1119:120:35961:35974	1044964	4	True				
ANR	1045022	ParameterType	sljit_sw		1044964	0					
ANR	1045023	Identifier	arg1w		1044964	1					
ANR	1045024	Parameter	sljit_si arg2	1119:136:35977:35989	1044964	5	True				
ANR	1045025	ParameterType	sljit_si		1044964	0					
ANR	1045026	Identifier	arg2		1044964	1					
ANR	1045027	Parameter	sljit_sw arg2w	1119:151:35992:36005	1044964	6	True				
ANR	1045028	ParameterType	sljit_sw		1044964	0					
ANR	1045029	Identifier	arg2w		1044964	1					
ANR	1045030	CFGEntryNode	ENTRY		1044964		True				
ANR	1045031	CFGExitNode	EXIT		1044964		True				
ANR	1045032	Symbol	arg1w		1044964						
ANR	1045033	Symbol	arg2		1044964						
ANR	1045034	Symbol	getput_arg		1044964						
ANR	1045035	Symbol	reg		1044964						
ANR	1045036	Symbol	arg1		1044964						
ANR	1045037	Symbol	arg2w		1044964						
ANR	1045038	Symbol	flags		1044964						
ANR	1045039	Symbol	* compiler		1044964						
ANR	1045040	Symbol	compiler		1044964						
ANR	1045041	Symbol	getput_arg_fast		1044964						
ANR	1045042	Symbol	compiler -> error		1044964						
ANR	1045043	Function	sljit_emit_enter	1130:0:36393:37968							
ANR	1045044	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1045043	0					
ANR	1045045	CompoundStatement		1133:0:36609:37968	1045043	0					
ANR	1045046	IdentifierDeclStatement	"sljit_si size , i , tmp ;"	1134:1:36612:36633	1045043	0	True				
ANR	1045047	IdentifierDecl	size		1045043	0					
ANR	1045048	IdentifierDeclType	sljit_si		1045043	0					
ANR	1045049	Identifier	size		1045043	1					
ANR	1045050	IdentifierDecl	i		1045043	1					
ANR	1045051	IdentifierDeclType	sljit_si		1045043	0					
ANR	1045052	Identifier	i		1045043	1					
ANR	1045053	IdentifierDecl	tmp		1045043	2					
ANR	1045054	IdentifierDeclType	sljit_si		1045043	0					
ANR	1045055	Identifier	tmp		1045043	1					
ANR	1045056	IdentifierDeclStatement	sljit_ins push ;	1135:1:36636:36650	1045043	1	True				
ANR	1045057	IdentifierDecl	push		1045043	0					
ANR	1045058	IdentifierDeclType	sljit_ins		1045043	0					
ANR	1045059	Identifier	push		1045043	1					
ANR	1045060	ExpressionStatement	CHECK_ERROR ( )	1137:1:36654:36667	1045043	2	True				
ANR	1045061	CallExpression	CHECK_ERROR ( )		1045043	0					
ANR	1045062	Callee	CHECK_ERROR		1045043	0					
ANR	1045063	Identifier	CHECK_ERROR		1045043	0					
ANR	1045064	ArgumentList			1045043	1					
ANR	1045065	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1138:1:36670:36776	1045043	3	True				
ANR	1045066	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1045043	0					
ANR	1045067	Callee	CHECK		1045043	0					
ANR	1045068	Identifier	CHECK		1045043	0					
ANR	1045069	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045043	1					
ANR	1045070	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045043	0					
ANR	1045071	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045043	0					
ANR	1045072	Callee	check_sljit_emit_enter		1045043	0					
ANR	1045073	Identifier	check_sljit_emit_enter		1045043	0					
ANR	1045074	ArgumentList	compiler		1045043	1					
ANR	1045075	Argument	compiler		1045043	0					
ANR	1045076	Identifier	compiler		1045043	0					
ANR	1045077	Argument	options		1045043	1					
ANR	1045078	Identifier	options		1045043	0					
ANR	1045079	Argument	args		1045043	2					
ANR	1045080	Identifier	args		1045043	0					
ANR	1045081	Argument	scratches		1045043	3					
ANR	1045082	Identifier	scratches		1045043	0					
ANR	1045083	Argument	saveds		1045043	4					
ANR	1045084	Identifier	saveds		1045043	0					
ANR	1045085	Argument	fscratches		1045043	5					
ANR	1045086	Identifier	fscratches		1045043	0					
ANR	1045087	Argument	fsaveds		1045043	6					
ANR	1045088	Identifier	fsaveds		1045043	0					
ANR	1045089	Argument	local_size		1045043	7					
ANR	1045090	Identifier	local_size		1045043	0					
ANR	1045091	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1139:1:36779:36870	1045043	4	True				
ANR	1045092	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045043	0					
ANR	1045093	Callee	set_emit_enter		1045043	0					
ANR	1045094	Identifier	set_emit_enter		1045043	0					
ANR	1045095	ArgumentList	compiler		1045043	1					
ANR	1045096	Argument	compiler		1045043	0					
ANR	1045097	Identifier	compiler		1045043	0					
ANR	1045098	Argument	options		1045043	1					
ANR	1045099	Identifier	options		1045043	0					
ANR	1045100	Argument	args		1045043	2					
ANR	1045101	Identifier	args		1045043	0					
ANR	1045102	Argument	scratches		1045043	3					
ANR	1045103	Identifier	scratches		1045043	0					
ANR	1045104	Argument	saveds		1045043	4					
ANR	1045105	Identifier	saveds		1045043	0					
ANR	1045106	Argument	fscratches		1045043	5					
ANR	1045107	Identifier	fscratches		1045043	0					
ANR	1045108	Argument	fsaveds		1045043	6					
ANR	1045109	Identifier	fsaveds		1045043	0					
ANR	1045110	Argument	local_size		1045043	7					
ANR	1045111	Identifier	local_size		1045043	0					
ANR	1045112	ExpressionStatement	push = ( 1 << 4 )	1141:1:36874:36889	1045043	5	True				
ANR	1045113	AssignmentExpression	push = ( 1 << 4 )		1045043	0		=			
ANR	1045114	Identifier	push		1045043	0					
ANR	1045115	ShiftExpression	1 << 4		1045043	1		<<			
ANR	1045116	PrimaryExpression	1		1045043	0					
ANR	1045117	PrimaryExpression	4		1045043	1					
ANR	1045118	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	1143:1:36893:36989	1045043	6	True				
ANR	1045119	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1045043	0		=			
ANR	1045120	Identifier	tmp		1045043	0					
ANR	1045121	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1045043	1					
ANR	1045122	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1045043	0					
ANR	1045123	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1045043	0		<			
ANR	1045124	Identifier	saveds		1045043	0					
ANR	1045125	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1045043	1					
ANR	1045126	AdditiveExpression	SLJIT_S0 + 1 - saveds		1045043	1		+			
ANR	1045127	Identifier	SLJIT_S0		1045043	0					
ANR	1045128	AdditiveExpression	1 - saveds		1045043	1		-			
ANR	1045129	PrimaryExpression	1		1045043	0					
ANR	1045130	Identifier	saveds		1045043	1					
ANR	1045131	Identifier	SLJIT_FIRST_SAVED_REG		1045043	2					
ANR	1045132	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1045043	7					
ANR	1045133	ForInit	i = SLJIT_S0 ;	1144:6:36997:37009	1045043	0	True				
ANR	1045134	AssignmentExpression	i = SLJIT_S0		1045043	0		=			
ANR	1045135	Identifier	i		1045043	0					
ANR	1045136	Identifier	SLJIT_S0		1045043	1					
ANR	1045137	Condition	i >= tmp	1144:20:37011:37018	1045043	1	True				
ANR	1045138	RelationalExpression	i >= tmp		1045043	0		>=			
ANR	1045139	Identifier	i		1045043	0					
ANR	1045140	Identifier	tmp		1045043	1					
ANR	1045141	PostIncDecOperationExpression	i --	1144:30:37021:37023	1045043	2	True				
ANR	1045142	Identifier	i		1045043	0					
ANR	1045143	IncDec	--		1045043	1					
ANR	1045144	ExpressionStatement	push |= 1 << reg_map [ i ]	1145:2:37028:37051	1045043	3	True				
ANR	1045145	AssignmentExpression	push |= 1 << reg_map [ i ]		1045043	0		|=			
ANR	1045146	Identifier	push		1045043	0					
ANR	1045147	ShiftExpression	1 << reg_map [ i ]		1045043	1		<<			
ANR	1045148	PrimaryExpression	1		1045043	0					
ANR	1045149	ArrayIndexing	reg_map [ i ]		1045043	1					
ANR	1045150	Identifier	reg_map		1045043	0					
ANR	1045151	Identifier	i		1045043	1					
ANR	1045152	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1045043	8					
ANR	1045153	ForInit	i = scratches ;	1147:6:37060:37073	1045043	0	True				
ANR	1045154	AssignmentExpression	i = scratches		1045043	0		=			
ANR	1045155	Identifier	i		1045043	0					
ANR	1045156	Identifier	scratches		1045043	1					
ANR	1045157	Condition	i >= SLJIT_FIRST_SAVED_REG	1147:21:37075:37100	1045043	1	True				
ANR	1045158	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1045043	0		>=			
ANR	1045159	Identifier	i		1045043	0					
ANR	1045160	Identifier	SLJIT_FIRST_SAVED_REG		1045043	1					
ANR	1045161	PostIncDecOperationExpression	i --	1147:49:37103:37105	1045043	2	True				
ANR	1045162	Identifier	i		1045043	0					
ANR	1045163	IncDec	--		1045043	1					
ANR	1045164	ExpressionStatement	push |= 1 << reg_map [ i ]	1148:2:37110:37133	1045043	3	True				
ANR	1045165	AssignmentExpression	push |= 1 << reg_map [ i ]		1045043	0		|=			
ANR	1045166	Identifier	push		1045043	0					
ANR	1045167	ShiftExpression	1 << reg_map [ i ]		1045043	1		<<			
ANR	1045168	PrimaryExpression	1		1045043	0					
ANR	1045169	ArrayIndexing	reg_map [ i ]		1045043	1					
ANR	1045170	Identifier	reg_map		1045043	0					
ANR	1045171	Identifier	i		1045043	1					
ANR	1045172	ExpressionStatement	"FAIL_IF ( ( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push ) )"	1150:1:37137:37264	1045043	9	True				
ANR	1045173	CallExpression	"FAIL_IF ( ( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push ) )"		1045043	0					
ANR	1045174	Callee	FAIL_IF		1045043	0					
ANR	1045175	Identifier	FAIL_IF		1045043	0					
ANR	1045176	ArgumentList	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1045043	1					
ANR	1045177	Argument	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1045043	0					
ANR	1045178	ConditionalExpression	"( push & 0xff00 ) ? push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push ) : push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1045043	0					
ANR	1045179	Condition	push & 0xff00		1045043	0					
ANR	1045180	BitAndExpression	push & 0xff00		1045043	0		&			
ANR	1045181	Identifier	push		1045043	0					
ANR	1045182	PrimaryExpression	0xff00		1045043	1					
ANR	1045183	CallExpression	"push_inst32 ( compiler , PUSH_W | ( 1 << 14 ) | push )"		1045043	1					
ANR	1045184	Callee	push_inst32		1045043	0					
ANR	1045185	Identifier	push_inst32		1045043	0					
ANR	1045186	ArgumentList	compiler		1045043	1					
ANR	1045187	Argument	compiler		1045043	0					
ANR	1045188	Identifier	compiler		1045043	0					
ANR	1045189	Argument	PUSH_W | ( 1 << 14 ) | push		1045043	1					
ANR	1045190	InclusiveOrExpression	PUSH_W | ( 1 << 14 ) | push		1045043	0		|			
ANR	1045191	Identifier	PUSH_W		1045043	0					
ANR	1045192	InclusiveOrExpression	( 1 << 14 ) | push		1045043	1		|			
ANR	1045193	ShiftExpression	1 << 14		1045043	0		<<			
ANR	1045194	PrimaryExpression	1		1045043	0					
ANR	1045195	PrimaryExpression	14		1045043	1					
ANR	1045196	Identifier	push		1045043	1					
ANR	1045197	CallExpression	"push_inst16 ( compiler , PUSH | ( 1 << 8 ) | push )"		1045043	2					
ANR	1045198	Callee	push_inst16		1045043	0					
ANR	1045199	Identifier	push_inst16		1045043	0					
ANR	1045200	ArgumentList	compiler		1045043	1					
ANR	1045201	Argument	compiler		1045043	0					
ANR	1045202	Identifier	compiler		1045043	0					
ANR	1045203	Argument	PUSH | ( 1 << 8 ) | push		1045043	1					
ANR	1045204	InclusiveOrExpression	PUSH | ( 1 << 8 ) | push		1045043	0		|			
ANR	1045205	Identifier	PUSH		1045043	0					
ANR	1045206	InclusiveOrExpression	( 1 << 8 ) | push		1045043	1		|			
ANR	1045207	ShiftExpression	1 << 8		1045043	0		<<			
ANR	1045208	PrimaryExpression	1		1045043	0					
ANR	1045209	PrimaryExpression	8		1045043	1					
ANR	1045210	Identifier	push		1045043	1					
ANR	1045211	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"	1155:1:37318:37371	1045043	10	True				
ANR	1045212	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1045043	0		=			
ANR	1045213	Identifier	size		1045043	0					
ANR	1045214	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1045043	1					
ANR	1045215	Callee	GET_SAVED_REGISTERS_SIZE		1045043	0					
ANR	1045216	Identifier	GET_SAVED_REGISTERS_SIZE		1045043	0					
ANR	1045217	ArgumentList	scratches		1045043	1					
ANR	1045218	Argument	scratches		1045043	0					
ANR	1045219	Identifier	scratches		1045043	0					
ANR	1045220	Argument	saveds		1045043	1					
ANR	1045221	Identifier	saveds		1045043	0					
ANR	1045222	Argument	2		1045043	2					
ANR	1045223	PrimaryExpression	2		1045043	0					
ANR	1045224	ExpressionStatement	local_size = ( ( size + local_size + 7 ) & ~7 ) - size	1156:1:37374:37424	1045043	11	True				
ANR	1045225	AssignmentExpression	local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1045043	0		=			
ANR	1045226	Identifier	local_size		1045043	0					
ANR	1045227	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1045043	1		-			
ANR	1045228	BitAndExpression	( size + local_size + 7 ) & ~7		1045043	0		&			
ANR	1045229	AdditiveExpression	size + local_size + 7		1045043	0		+			
ANR	1045230	Identifier	size		1045043	0					
ANR	1045231	AdditiveExpression	local_size + 7		1045043	1		+			
ANR	1045232	Identifier	local_size		1045043	0					
ANR	1045233	PrimaryExpression	7		1045043	1					
ANR	1045234	Identifier	~7		1045043	1					
ANR	1045235	Identifier	size		1045043	1					
ANR	1045236	ExpressionStatement	compiler -> local_size = local_size	1157:1:37427:37460	1045043	12	True				
ANR	1045237	AssignmentExpression	compiler -> local_size = local_size		1045043	0		=			
ANR	1045238	PtrMemberAccess	compiler -> local_size		1045043	0					
ANR	1045239	Identifier	compiler		1045043	0					
ANR	1045240	Identifier	local_size		1045043	1					
ANR	1045241	Identifier	local_size		1045043	1					
ANR	1045242	IfStatement	if ( local_size > 0 )		1045043	13					
ANR	1045243	Condition	local_size > 0	1158:5:37467:37480	1045043	0	True				
ANR	1045244	RelationalExpression	local_size > 0		1045043	0		>			
ANR	1045245	Identifier	local_size		1045043	0					
ANR	1045246	PrimaryExpression	0		1045043	1					
ANR	1045247	CompoundStatement		26:21:873:873	1045043	1					
ANR	1045248	IfStatement	if ( local_size <= ( 127 << 2 ) )		1045043	0					
ANR	1045249	Condition	local_size <= ( 127 << 2 )	1159:6:37491:37514	1045043	0	True				
ANR	1045250	RelationalExpression	local_size <= ( 127 << 2 )		1045043	0		<=			
ANR	1045251	Identifier	local_size		1045043	0					
ANR	1045252	ShiftExpression	127 << 2		1045043	1		<<			
ANR	1045253	PrimaryExpression	127		1045043	0					
ANR	1045254	PrimaryExpression	2		1045043	1					
ANR	1045255	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) ) )"	1160:3:37520:37578	1045043	1	True				
ANR	1045256	CallExpression	"FAIL_IF ( push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) ) )"		1045043	0					
ANR	1045257	Callee	FAIL_IF		1045043	0					
ANR	1045258	Identifier	FAIL_IF		1045043	0					
ANR	1045259	ArgumentList	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1045043	1					
ANR	1045260	Argument	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1045043	0					
ANR	1045261	CallExpression	"push_inst16 ( compiler , SUB_SP | ( local_size >> 2 ) )"		1045043	0					
ANR	1045262	Callee	push_inst16		1045043	0					
ANR	1045263	Identifier	push_inst16		1045043	0					
ANR	1045264	ArgumentList	compiler		1045043	1					
ANR	1045265	Argument	compiler		1045043	0					
ANR	1045266	Identifier	compiler		1045043	0					
ANR	1045267	Argument	SUB_SP | ( local_size >> 2 )		1045043	1					
ANR	1045268	InclusiveOrExpression	SUB_SP | ( local_size >> 2 )		1045043	0		|			
ANR	1045269	Identifier	SUB_SP		1045043	0					
ANR	1045270	ShiftExpression	local_size >> 2		1045043	1		>>			
ANR	1045271	Identifier	local_size		1045043	0					
ANR	1045272	PrimaryExpression	2		1045043	1					
ANR	1045273	ElseStatement	else		1045043	0					
ANR	1045274	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size ) )"	1162:3:37590:37674	1045043	0	True				
ANR	1045275	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size ) )"		1045043	0					
ANR	1045276	Callee	FAIL_IF		1045043	0					
ANR	1045277	Identifier	FAIL_IF		1045043	0					
ANR	1045278	ArgumentList	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1045043	1					
ANR	1045279	Argument	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1045043	0					
ANR	1045280	CallExpression	"emit_op_imm ( compiler , SLJIT_SUB | ARG2_IMM , SLJIT_SP , SLJIT_SP , local_size )"		1045043	0					
ANR	1045281	Callee	emit_op_imm		1045043	0					
ANR	1045282	Identifier	emit_op_imm		1045043	0					
ANR	1045283	ArgumentList	compiler		1045043	1					
ANR	1045284	Argument	compiler		1045043	0					
ANR	1045285	Identifier	compiler		1045043	0					
ANR	1045286	Argument	SLJIT_SUB | ARG2_IMM		1045043	1					
ANR	1045287	InclusiveOrExpression	SLJIT_SUB | ARG2_IMM		1045043	0		|			
ANR	1045288	Identifier	SLJIT_SUB		1045043	0					
ANR	1045289	Identifier	ARG2_IMM		1045043	1					
ANR	1045290	Argument	SLJIT_SP		1045043	2					
ANR	1045291	Identifier	SLJIT_SP		1045043	0					
ANR	1045292	Argument	SLJIT_SP		1045043	3					
ANR	1045293	Identifier	SLJIT_SP		1045043	0					
ANR	1045294	Argument	local_size		1045043	4					
ANR	1045295	Identifier	local_size		1045043	0					
ANR	1045296	IfStatement	if ( args >= 1 )		1045043	14					
ANR	1045297	Condition	args >= 1	1165:5:37685:37693	1045043	0	True				
ANR	1045298	RelationalExpression	args >= 1		1045043	0		>=			
ANR	1045299	Identifier	args		1045043	0					
ANR	1045300	PrimaryExpression	1		1045043	1					
ANR	1045301	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) ) )"	1166:2:37698:37766	1045043	1	True				
ANR	1045302	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) ) )"		1045043	0					
ANR	1045303	Callee	FAIL_IF		1045043	0					
ANR	1045304	Identifier	FAIL_IF		1045043	0					
ANR	1045305	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1045043	1					
ANR	1045306	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1045043	0					
ANR	1045307	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 ) )"		1045043	0					
ANR	1045308	Callee	push_inst16		1045043	0					
ANR	1045309	Identifier	push_inst16		1045043	0					
ANR	1045310	ArgumentList	compiler		1045043	1					
ANR	1045311	Argument	compiler		1045043	0					
ANR	1045312	Identifier	compiler		1045043	0					
ANR	1045313	Argument	"MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1045043	1					
ANR	1045314	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1045043	0		|			
ANR	1045315	Identifier	MOV		1045043	0					
ANR	1045316	CallExpression	"SET_REGS44 ( SLJIT_S0 , SLJIT_R0 )"		1045043	1					
ANR	1045317	Callee	SET_REGS44		1045043	0					
ANR	1045318	Identifier	SET_REGS44		1045043	0					
ANR	1045319	ArgumentList	SLJIT_S0		1045043	1					
ANR	1045320	Argument	SLJIT_S0		1045043	0					
ANR	1045321	Identifier	SLJIT_S0		1045043	0					
ANR	1045322	Argument	SLJIT_R0		1045043	1					
ANR	1045323	Identifier	SLJIT_R0		1045043	0					
ANR	1045324	IfStatement	if ( args >= 2 )		1045043	15					
ANR	1045325	Condition	args >= 2	1167:5:37773:37781	1045043	0	True				
ANR	1045326	RelationalExpression	args >= 2		1045043	0		>=			
ANR	1045327	Identifier	args		1045043	0					
ANR	1045328	PrimaryExpression	2		1045043	1					
ANR	1045329	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) ) )"	1168:2:37786:37854	1045043	1	True				
ANR	1045330	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) ) )"		1045043	0					
ANR	1045331	Callee	FAIL_IF		1045043	0					
ANR	1045332	Identifier	FAIL_IF		1045043	0					
ANR	1045333	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1045043	1					
ANR	1045334	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1045043	0					
ANR	1045335	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 ) )"		1045043	0					
ANR	1045336	Callee	push_inst16		1045043	0					
ANR	1045337	Identifier	push_inst16		1045043	0					
ANR	1045338	ArgumentList	compiler		1045043	1					
ANR	1045339	Argument	compiler		1045043	0					
ANR	1045340	Identifier	compiler		1045043	0					
ANR	1045341	Argument	"MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1045043	1					
ANR	1045342	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1045043	0		|			
ANR	1045343	Identifier	MOV		1045043	0					
ANR	1045344	CallExpression	"SET_REGS44 ( SLJIT_S1 , SLJIT_R1 )"		1045043	1					
ANR	1045345	Callee	SET_REGS44		1045043	0					
ANR	1045346	Identifier	SET_REGS44		1045043	0					
ANR	1045347	ArgumentList	SLJIT_S1		1045043	1					
ANR	1045348	Argument	SLJIT_S1		1045043	0					
ANR	1045349	Identifier	SLJIT_S1		1045043	0					
ANR	1045350	Argument	SLJIT_R1		1045043	1					
ANR	1045351	Identifier	SLJIT_R1		1045043	0					
ANR	1045352	IfStatement	if ( args >= 3 )		1045043	16					
ANR	1045353	Condition	args >= 3	1169:5:37861:37869	1045043	0	True				
ANR	1045354	RelationalExpression	args >= 3		1045043	0		>=			
ANR	1045355	Identifier	args		1045043	0					
ANR	1045356	PrimaryExpression	3		1045043	1					
ANR	1045357	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) ) )"	1170:2:37874:37942	1045043	1	True				
ANR	1045358	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) ) )"		1045043	0					
ANR	1045359	Callee	FAIL_IF		1045043	0					
ANR	1045360	Identifier	FAIL_IF		1045043	0					
ANR	1045361	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1045043	1					
ANR	1045362	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1045043	0					
ANR	1045363	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 ) )"		1045043	0					
ANR	1045364	Callee	push_inst16		1045043	0					
ANR	1045365	Identifier	push_inst16		1045043	0					
ANR	1045366	ArgumentList	compiler		1045043	1					
ANR	1045367	Argument	compiler		1045043	0					
ANR	1045368	Identifier	compiler		1045043	0					
ANR	1045369	Argument	"MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1045043	1					
ANR	1045370	InclusiveOrExpression	"MOV | SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1045043	0		|			
ANR	1045371	Identifier	MOV		1045043	0					
ANR	1045372	CallExpression	"SET_REGS44 ( SLJIT_S2 , SLJIT_R2 )"		1045043	1					
ANR	1045373	Callee	SET_REGS44		1045043	0					
ANR	1045374	Identifier	SET_REGS44		1045043	0					
ANR	1045375	ArgumentList	SLJIT_S2		1045043	1					
ANR	1045376	Argument	SLJIT_S2		1045043	0					
ANR	1045377	Identifier	SLJIT_S2		1045043	0					
ANR	1045378	Argument	SLJIT_R2		1045043	1					
ANR	1045379	Identifier	SLJIT_R2		1045043	0					
ANR	1045380	ReturnStatement	return SLJIT_SUCCESS ;	1172:1:37946:37966	1045043	17	True				
ANR	1045381	Identifier	SLJIT_SUCCESS		1045043	0					
ANR	1045382	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1045043	1					
ANR	1045383	Identifier	sljit_emit_enter		1045043	2					
ANR	1045384	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1045043	3					
ANR	1045385	Parameter	struct sljit_compiler * compiler	1130:51:36444:36474	1045043	0	True				
ANR	1045386	ParameterType	struct sljit_compiler *		1045043	0					
ANR	1045387	Identifier	compiler		1045043	1					
ANR	1045388	Parameter	sljit_si options	1131:1:36478:36493	1045043	1	True				
ANR	1045389	ParameterType	sljit_si		1045043	0					
ANR	1045390	Identifier	options		1045043	1					
ANR	1045391	Parameter	sljit_si args	1131:19:36496:36508	1045043	2	True				
ANR	1045392	ParameterType	sljit_si		1045043	0					
ANR	1045393	Identifier	args		1045043	1					
ANR	1045394	Parameter	sljit_si scratches	1131:34:36511:36528	1045043	3	True				
ANR	1045395	ParameterType	sljit_si		1045043	0					
ANR	1045396	Identifier	scratches		1045043	1					
ANR	1045397	Parameter	sljit_si saveds	1131:54:36531:36545	1045043	4	True				
ANR	1045398	ParameterType	sljit_si		1045043	0					
ANR	1045399	Identifier	saveds		1045043	1					
ANR	1045400	Parameter	sljit_si fscratches	1132:1:36549:36567	1045043	5	True				
ANR	1045401	ParameterType	sljit_si		1045043	0					
ANR	1045402	Identifier	fscratches		1045043	1					
ANR	1045403	Parameter	sljit_si fsaveds	1132:22:36570:36585	1045043	6	True				
ANR	1045404	ParameterType	sljit_si		1045043	0					
ANR	1045405	Identifier	fsaveds		1045043	1					
ANR	1045406	Parameter	sljit_si local_size	1132:40:36588:36606	1045043	7	True				
ANR	1045407	ParameterType	sljit_si		1045043	0					
ANR	1045408	Identifier	local_size		1045043	1					
ANR	1045409	CFGEntryNode	ENTRY		1045043		True				
ANR	1045410	CFGExitNode	EXIT		1045043		True				
ANR	1045411	Symbol	scratches		1045043						
ANR	1045412	Symbol	saveds		1045043						
ANR	1045413	Symbol	push_inst16		1045043						
ANR	1045414	Symbol	reg_map		1045043						
ANR	1045415	Symbol	check_sljit_emit_enter		1045043						
ANR	1045416	Symbol	* compiler		1045043						
ANR	1045417	Symbol	SLJIT_R1		1045043						
ANR	1045418	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1045043						
ANR	1045419	Symbol	SLJIT_R2		1045043						
ANR	1045420	Symbol	SLJIT_SP		1045043						
ANR	1045421	Symbol	SLJIT_R0		1045043						
ANR	1045422	Symbol	SET_REGS44		1045043						
ANR	1045423	Symbol	tmp		1045043						
ANR	1045424	Symbol	options		1045043						
ANR	1045425	Symbol	compiler		1045043						
ANR	1045426	Symbol	push_inst32		1045043						
ANR	1045427	Symbol	emit_op_imm		1045043						
ANR	1045428	Symbol	GET_SAVED_REGISTERS_SIZE		1045043						
ANR	1045429	Symbol	local_size		1045043						
ANR	1045430	Symbol	ARG2_IMM		1045043						
ANR	1045431	Symbol	i		1045043						
ANR	1045432	Symbol	SLJIT_SUB		1045043						
ANR	1045433	Symbol	PUSH_W		1045043						
ANR	1045434	Symbol	SLJIT_SUCCESS		1045043						
ANR	1045435	Symbol	* reg_map		1045043						
ANR	1045436	Symbol	SLJIT_S2		1045043						
ANR	1045437	Symbol	push		1045043						
ANR	1045438	Symbol	SLJIT_S0		1045043						
ANR	1045439	Symbol	SLJIT_S1		1045043						
ANR	1045440	Symbol	args		1045043						
ANR	1045441	Symbol	fscratches		1045043						
ANR	1045442	Symbol	* i		1045043						
ANR	1045443	Symbol	compiler -> local_size		1045043						
ANR	1045444	Symbol	SUB_SP		1045043						
ANR	1045445	Symbol	fsaveds		1045043						
ANR	1045446	Symbol	size		1045043						
ANR	1045447	Symbol	MOV		1045043						
ANR	1045448	Symbol	SLJIT_FIRST_SAVED_REG		1045043						
ANR	1045449	Symbol	~7		1045043						
ANR	1045450	Symbol	PUSH		1045043						
ANR	1045451	Function	sljit_set_context	1175:0:37971:38571							
ANR	1045452	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1045451	0					
ANR	1045453	CompoundStatement		1178:0:38188:38571	1045451	0					
ANR	1045454	IdentifierDeclStatement	sljit_si size ;	1179:1:38191:38204	1045451	0	True				
ANR	1045455	IdentifierDecl	size		1045451	0					
ANR	1045456	IdentifierDeclType	sljit_si		1045451	0					
ANR	1045457	Identifier	size		1045451	1					
ANR	1045458	ExpressionStatement	CHECK_ERROR ( )	1181:1:38208:38221	1045451	1	True				
ANR	1045459	CallExpression	CHECK_ERROR ( )		1045451	0					
ANR	1045460	Callee	CHECK_ERROR		1045451	0					
ANR	1045461	Identifier	CHECK_ERROR		1045451	0					
ANR	1045462	ArgumentList			1045451	1					
ANR	1045463	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	1182:1:38224:38331	1045451	2	True				
ANR	1045464	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1045451	0					
ANR	1045465	Callee	CHECK		1045451	0					
ANR	1045466	Identifier	CHECK		1045451	0					
ANR	1045467	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045451	1					
ANR	1045468	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045451	0					
ANR	1045469	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045451	0					
ANR	1045470	Callee	check_sljit_set_context		1045451	0					
ANR	1045471	Identifier	check_sljit_set_context		1045451	0					
ANR	1045472	ArgumentList	compiler		1045451	1					
ANR	1045473	Argument	compiler		1045451	0					
ANR	1045474	Identifier	compiler		1045451	0					
ANR	1045475	Argument	options		1045451	1					
ANR	1045476	Identifier	options		1045451	0					
ANR	1045477	Argument	args		1045451	2					
ANR	1045478	Identifier	args		1045451	0					
ANR	1045479	Argument	scratches		1045451	3					
ANR	1045480	Identifier	scratches		1045451	0					
ANR	1045481	Argument	saveds		1045451	4					
ANR	1045482	Identifier	saveds		1045451	0					
ANR	1045483	Argument	fscratches		1045451	5					
ANR	1045484	Identifier	fscratches		1045451	0					
ANR	1045485	Argument	fsaveds		1045451	6					
ANR	1045486	Identifier	fsaveds		1045451	0					
ANR	1045487	Argument	local_size		1045451	7					
ANR	1045488	Identifier	local_size		1045451	0					
ANR	1045489	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1183:1:38334:38426	1045451	3	True				
ANR	1045490	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1045451	0					
ANR	1045491	Callee	set_set_context		1045451	0					
ANR	1045492	Identifier	set_set_context		1045451	0					
ANR	1045493	ArgumentList	compiler		1045451	1					
ANR	1045494	Argument	compiler		1045451	0					
ANR	1045495	Identifier	compiler		1045451	0					
ANR	1045496	Argument	options		1045451	1					
ANR	1045497	Identifier	options		1045451	0					
ANR	1045498	Argument	args		1045451	2					
ANR	1045499	Identifier	args		1045451	0					
ANR	1045500	Argument	scratches		1045451	3					
ANR	1045501	Identifier	scratches		1045451	0					
ANR	1045502	Argument	saveds		1045451	4					
ANR	1045503	Identifier	saveds		1045451	0					
ANR	1045504	Argument	fscratches		1045451	5					
ANR	1045505	Identifier	fscratches		1045451	0					
ANR	1045506	Argument	fsaveds		1045451	6					
ANR	1045507	Identifier	fsaveds		1045451	0					
ANR	1045508	Argument	local_size		1045451	7					
ANR	1045509	Identifier	local_size		1045451	0					
ANR	1045510	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"	1185:1:38430:38483	1045451	4	True				
ANR	1045511	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1045451	0		=			
ANR	1045512	Identifier	size		1045451	0					
ANR	1045513	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 2 )"		1045451	1					
ANR	1045514	Callee	GET_SAVED_REGISTERS_SIZE		1045451	0					
ANR	1045515	Identifier	GET_SAVED_REGISTERS_SIZE		1045451	0					
ANR	1045516	ArgumentList	scratches		1045451	1					
ANR	1045517	Argument	scratches		1045451	0					
ANR	1045518	Identifier	scratches		1045451	0					
ANR	1045519	Argument	saveds		1045451	1					
ANR	1045520	Identifier	saveds		1045451	0					
ANR	1045521	Argument	2		1045451	2					
ANR	1045522	PrimaryExpression	2		1045451	0					
ANR	1045523	ExpressionStatement	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size	1186:1:38486:38546	1045451	5	True				
ANR	1045524	AssignmentExpression	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1045451	0		=			
ANR	1045525	PtrMemberAccess	compiler -> local_size		1045451	0					
ANR	1045526	Identifier	compiler		1045451	0					
ANR	1045527	Identifier	local_size		1045451	1					
ANR	1045528	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1045451	1		-			
ANR	1045529	BitAndExpression	( size + local_size + 7 ) & ~7		1045451	0		&			
ANR	1045530	AdditiveExpression	size + local_size + 7		1045451	0		+			
ANR	1045531	Identifier	size		1045451	0					
ANR	1045532	AdditiveExpression	local_size + 7		1045451	1		+			
ANR	1045533	Identifier	local_size		1045451	0					
ANR	1045534	PrimaryExpression	7		1045451	1					
ANR	1045535	Identifier	~7		1045451	1					
ANR	1045536	Identifier	size		1045451	1					
ANR	1045537	ReturnStatement	return SLJIT_SUCCESS ;	1187:1:38549:38569	1045451	6	True				
ANR	1045538	Identifier	SLJIT_SUCCESS		1045451	0					
ANR	1045539	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1045451	1					
ANR	1045540	Identifier	sljit_set_context		1045451	2					
ANR	1045541	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1045451	3					
ANR	1045542	Parameter	struct sljit_compiler * compiler	1175:52:38023:38053	1045451	0	True				
ANR	1045543	ParameterType	struct sljit_compiler *		1045451	0					
ANR	1045544	Identifier	compiler		1045451	1					
ANR	1045545	Parameter	sljit_si options	1176:1:38057:38072	1045451	1	True				
ANR	1045546	ParameterType	sljit_si		1045451	0					
ANR	1045547	Identifier	options		1045451	1					
ANR	1045548	Parameter	sljit_si args	1176:19:38075:38087	1045451	2	True				
ANR	1045549	ParameterType	sljit_si		1045451	0					
ANR	1045550	Identifier	args		1045451	1					
ANR	1045551	Parameter	sljit_si scratches	1176:34:38090:38107	1045451	3	True				
ANR	1045552	ParameterType	sljit_si		1045451	0					
ANR	1045553	Identifier	scratches		1045451	1					
ANR	1045554	Parameter	sljit_si saveds	1176:54:38110:38124	1045451	4	True				
ANR	1045555	ParameterType	sljit_si		1045451	0					
ANR	1045556	Identifier	saveds		1045451	1					
ANR	1045557	Parameter	sljit_si fscratches	1177:1:38128:38146	1045451	5	True				
ANR	1045558	ParameterType	sljit_si		1045451	0					
ANR	1045559	Identifier	fscratches		1045451	1					
ANR	1045560	Parameter	sljit_si fsaveds	1177:22:38149:38164	1045451	6	True				
ANR	1045561	ParameterType	sljit_si		1045451	0					
ANR	1045562	Identifier	fsaveds		1045451	1					
ANR	1045563	Parameter	sljit_si local_size	1177:40:38167:38185	1045451	7	True				
ANR	1045564	ParameterType	sljit_si		1045451	0					
ANR	1045565	Identifier	local_size		1045451	1					
ANR	1045566	CFGEntryNode	ENTRY		1045451		True				
ANR	1045567	CFGExitNode	EXIT		1045451		True				
ANR	1045568	Symbol	GET_SAVED_REGISTERS_SIZE		1045451						
ANR	1045569	Symbol	local_size		1045451						
ANR	1045570	Symbol	scratches		1045451						
ANR	1045571	Symbol	saveds		1045451						
ANR	1045572	Symbol	check_sljit_set_context		1045451						
ANR	1045573	Symbol	SLJIT_SUCCESS		1045451						
ANR	1045574	Symbol	* compiler		1045451						
ANR	1045575	Symbol	args		1045451						
ANR	1045576	Symbol	fscratches		1045451						
ANR	1045577	Symbol	compiler -> local_size		1045451						
ANR	1045578	Symbol	fsaveds		1045451						
ANR	1045579	Symbol	size		1045451						
ANR	1045580	Symbol	options		1045451						
ANR	1045581	Symbol	~7		1045451						
ANR	1045582	Symbol	compiler		1045451						
ANR	1045583	Function	sljit_emit_return	1190:0:38574:39544							
ANR	1045584	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1045583	0					
ANR	1045585	CompoundStatement		1191:0:38701:39544	1045583	0					
ANR	1045586	IdentifierDeclStatement	"sljit_si i , tmp ;"	1192:1:38704:38719	1045583	0	True				
ANR	1045587	IdentifierDecl	i		1045583	0					
ANR	1045588	IdentifierDeclType	sljit_si		1045583	0					
ANR	1045589	Identifier	i		1045583	1					
ANR	1045590	IdentifierDecl	tmp		1045583	1					
ANR	1045591	IdentifierDeclType	sljit_si		1045583	0					
ANR	1045592	Identifier	tmp		1045583	1					
ANR	1045593	IdentifierDeclStatement	sljit_ins pop ;	1193:1:38722:38735	1045583	1	True				
ANR	1045594	IdentifierDecl	pop		1045583	0					
ANR	1045595	IdentifierDeclType	sljit_ins		1045583	0					
ANR	1045596	Identifier	pop		1045583	1					
ANR	1045597	ExpressionStatement	CHECK_ERROR ( )	1195:1:38739:38752	1045583	2	True				
ANR	1045598	CallExpression	CHECK_ERROR ( )		1045583	0					
ANR	1045599	Callee	CHECK_ERROR		1045583	0					
ANR	1045600	Identifier	CHECK_ERROR		1045583	0					
ANR	1045601	ArgumentList			1045583	1					
ANR	1045602	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	1196:1:38755:38810	1045583	3	True				
ANR	1045603	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1045583	0					
ANR	1045604	Callee	CHECK		1045583	0					
ANR	1045605	Identifier	CHECK		1045583	0					
ANR	1045606	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1045583	1					
ANR	1045607	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1045583	0					
ANR	1045608	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1045583	0					
ANR	1045609	Callee	check_sljit_emit_return		1045583	0					
ANR	1045610	Identifier	check_sljit_emit_return		1045583	0					
ANR	1045611	ArgumentList	compiler		1045583	1					
ANR	1045612	Argument	compiler		1045583	0					
ANR	1045613	Identifier	compiler		1045583	0					
ANR	1045614	Argument	op		1045583	1					
ANR	1045615	Identifier	op		1045583	0					
ANR	1045616	Argument	src		1045583	2					
ANR	1045617	Identifier	src		1045583	0					
ANR	1045618	Argument	srcw		1045583	3					
ANR	1045619	Identifier	srcw		1045583	0					
ANR	1045620	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	1198:1:38814:38870	1045583	4	True				
ANR	1045621	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1045583	0					
ANR	1045622	Callee	FAIL_IF		1045583	0					
ANR	1045623	Identifier	FAIL_IF		1045583	0					
ANR	1045624	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1045583	1					
ANR	1045625	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1045583	0					
ANR	1045626	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1045583	0					
ANR	1045627	Callee	emit_mov_before_return		1045583	0					
ANR	1045628	Identifier	emit_mov_before_return		1045583	0					
ANR	1045629	ArgumentList	compiler		1045583	1					
ANR	1045630	Argument	compiler		1045583	0					
ANR	1045631	Identifier	compiler		1045583	0					
ANR	1045632	Argument	op		1045583	1					
ANR	1045633	Identifier	op		1045583	0					
ANR	1045634	Argument	src		1045583	2					
ANR	1045635	Identifier	src		1045583	0					
ANR	1045636	Argument	srcw		1045583	3					
ANR	1045637	Identifier	srcw		1045583	0					
ANR	1045638	IfStatement	if ( compiler -> local_size > 0 )		1045583	5					
ANR	1045639	Condition	compiler -> local_size > 0	1200:5:38878:38901	1045583	0	True				
ANR	1045640	RelationalExpression	compiler -> local_size > 0		1045583	0		>			
ANR	1045641	PtrMemberAccess	compiler -> local_size		1045583	0					
ANR	1045642	Identifier	compiler		1045583	0					
ANR	1045643	Identifier	local_size		1045583	1					
ANR	1045644	PrimaryExpression	0		1045583	1					
ANR	1045645	CompoundStatement		10:31:202:202	1045583	1					
ANR	1045646	IfStatement	if ( compiler -> local_size <= ( 127 << 2 ) )		1045583	0					
ANR	1045647	Condition	compiler -> local_size <= ( 127 << 2 )	1201:6:38912:38945	1045583	0	True				
ANR	1045648	RelationalExpression	compiler -> local_size <= ( 127 << 2 )		1045583	0		<=			
ANR	1045649	PtrMemberAccess	compiler -> local_size		1045583	0					
ANR	1045650	Identifier	compiler		1045583	0					
ANR	1045651	Identifier	local_size		1045583	1					
ANR	1045652	ShiftExpression	127 << 2		1045583	1		<<			
ANR	1045653	PrimaryExpression	127		1045583	0					
ANR	1045654	PrimaryExpression	2		1045583	1					
ANR	1045655	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) ) )"	1202:3:38951:39019	1045583	1	True				
ANR	1045656	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) ) )"		1045583	0					
ANR	1045657	Callee	FAIL_IF		1045583	0					
ANR	1045658	Identifier	FAIL_IF		1045583	0					
ANR	1045659	ArgumentList	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1045583	1					
ANR	1045660	Argument	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1045583	0					
ANR	1045661	CallExpression	"push_inst16 ( compiler , ADD_SP | ( compiler -> local_size >> 2 ) )"		1045583	0					
ANR	1045662	Callee	push_inst16		1045583	0					
ANR	1045663	Identifier	push_inst16		1045583	0					
ANR	1045664	ArgumentList	compiler		1045583	1					
ANR	1045665	Argument	compiler		1045583	0					
ANR	1045666	Identifier	compiler		1045583	0					
ANR	1045667	Argument	ADD_SP | ( compiler -> local_size >> 2 )		1045583	1					
ANR	1045668	InclusiveOrExpression	ADD_SP | ( compiler -> local_size >> 2 )		1045583	0		|			
ANR	1045669	Identifier	ADD_SP		1045583	0					
ANR	1045670	ShiftExpression	compiler -> local_size >> 2		1045583	1		>>			
ANR	1045671	PtrMemberAccess	compiler -> local_size		1045583	0					
ANR	1045672	Identifier	compiler		1045583	0					
ANR	1045673	Identifier	local_size		1045583	1					
ANR	1045674	PrimaryExpression	2		1045583	1					
ANR	1045675	ElseStatement	else		1045583	0					
ANR	1045676	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size ) )"	1204:3:39031:39125	1045583	0	True				
ANR	1045677	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size ) )"		1045583	0					
ANR	1045678	Callee	FAIL_IF		1045583	0					
ANR	1045679	Identifier	FAIL_IF		1045583	0					
ANR	1045680	ArgumentList	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1045583	1					
ANR	1045681	Argument	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1045583	0					
ANR	1045682	CallExpression	"emit_op_imm ( compiler , SLJIT_ADD | ARG2_IMM , SLJIT_SP , SLJIT_SP , compiler -> local_size )"		1045583	0					
ANR	1045683	Callee	emit_op_imm		1045583	0					
ANR	1045684	Identifier	emit_op_imm		1045583	0					
ANR	1045685	ArgumentList	compiler		1045583	1					
ANR	1045686	Argument	compiler		1045583	0					
ANR	1045687	Identifier	compiler		1045583	0					
ANR	1045688	Argument	SLJIT_ADD | ARG2_IMM		1045583	1					
ANR	1045689	InclusiveOrExpression	SLJIT_ADD | ARG2_IMM		1045583	0		|			
ANR	1045690	Identifier	SLJIT_ADD		1045583	0					
ANR	1045691	Identifier	ARG2_IMM		1045583	1					
ANR	1045692	Argument	SLJIT_SP		1045583	2					
ANR	1045693	Identifier	SLJIT_SP		1045583	0					
ANR	1045694	Argument	SLJIT_SP		1045583	3					
ANR	1045695	Identifier	SLJIT_SP		1045583	0					
ANR	1045696	Argument	compiler -> local_size		1045583	4					
ANR	1045697	PtrMemberAccess	compiler -> local_size		1045583	0					
ANR	1045698	Identifier	compiler		1045583	0					
ANR	1045699	Identifier	local_size		1045583	1					
ANR	1045700	ExpressionStatement	pop = ( 1 << 4 )	1207:1:39132:39146	1045583	6	True				
ANR	1045701	AssignmentExpression	pop = ( 1 << 4 )		1045583	0		=			
ANR	1045702	Identifier	pop		1045583	0					
ANR	1045703	ShiftExpression	1 << 4		1045583	1		<<			
ANR	1045704	PrimaryExpression	1		1045583	0					
ANR	1045705	PrimaryExpression	4		1045583	1					
ANR	1045706	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	1209:1:39150:39266	1045583	7	True				
ANR	1045707	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1045583	0		=			
ANR	1045708	Identifier	tmp		1045583	0					
ANR	1045709	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1045583	1					
ANR	1045710	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1045583	0					
ANR	1045711	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1045583	0		<			
ANR	1045712	PtrMemberAccess	compiler -> saveds		1045583	0					
ANR	1045713	Identifier	compiler		1045583	0					
ANR	1045714	Identifier	saveds		1045583	1					
ANR	1045715	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1045583	1					
ANR	1045716	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1045583	1		+			
ANR	1045717	Identifier	SLJIT_S0		1045583	0					
ANR	1045718	AdditiveExpression	1 - compiler -> saveds		1045583	1		-			
ANR	1045719	PrimaryExpression	1		1045583	0					
ANR	1045720	PtrMemberAccess	compiler -> saveds		1045583	1					
ANR	1045721	Identifier	compiler		1045583	0					
ANR	1045722	Identifier	saveds		1045583	1					
ANR	1045723	Identifier	SLJIT_FIRST_SAVED_REG		1045583	2					
ANR	1045724	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1045583	8					
ANR	1045725	ForInit	i = SLJIT_S0 ;	1210:6:39274:39286	1045583	0	True				
ANR	1045726	AssignmentExpression	i = SLJIT_S0		1045583	0		=			
ANR	1045727	Identifier	i		1045583	0					
ANR	1045728	Identifier	SLJIT_S0		1045583	1					
ANR	1045729	Condition	i >= tmp	1210:20:39288:39295	1045583	1	True				
ANR	1045730	RelationalExpression	i >= tmp		1045583	0		>=			
ANR	1045731	Identifier	i		1045583	0					
ANR	1045732	Identifier	tmp		1045583	1					
ANR	1045733	PostIncDecOperationExpression	i --	1210:30:39298:39300	1045583	2	True				
ANR	1045734	Identifier	i		1045583	0					
ANR	1045735	IncDec	--		1045583	1					
ANR	1045736	ExpressionStatement	pop |= 1 << reg_map [ i ]	1211:2:39305:39327	1045583	3	True				
ANR	1045737	AssignmentExpression	pop |= 1 << reg_map [ i ]		1045583	0		|=			
ANR	1045738	Identifier	pop		1045583	0					
ANR	1045739	ShiftExpression	1 << reg_map [ i ]		1045583	1		<<			
ANR	1045740	PrimaryExpression	1		1045583	0					
ANR	1045741	ArrayIndexing	reg_map [ i ]		1045583	1					
ANR	1045742	Identifier	reg_map		1045583	0					
ANR	1045743	Identifier	i		1045583	1					
ANR	1045744	ForStatement	for ( i = compiler -> scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1045583	9					
ANR	1045745	ForInit	i = compiler -> scratches ;	1213:6:39336:39359	1045583	0	True				
ANR	1045746	AssignmentExpression	i = compiler -> scratches		1045583	0		=			
ANR	1045747	Identifier	i		1045583	0					
ANR	1045748	PtrMemberAccess	compiler -> scratches		1045583	1					
ANR	1045749	Identifier	compiler		1045583	0					
ANR	1045750	Identifier	scratches		1045583	1					
ANR	1045751	Condition	i >= SLJIT_FIRST_SAVED_REG	1213:31:39361:39386	1045583	1	True				
ANR	1045752	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1045583	0		>=			
ANR	1045753	Identifier	i		1045583	0					
ANR	1045754	Identifier	SLJIT_FIRST_SAVED_REG		1045583	1					
ANR	1045755	PostIncDecOperationExpression	i --	1213:59:39389:39391	1045583	2	True				
ANR	1045756	Identifier	i		1045583	0					
ANR	1045757	IncDec	--		1045583	1					
ANR	1045758	ExpressionStatement	pop |= 1 << reg_map [ i ]	1214:2:39396:39418	1045583	3	True				
ANR	1045759	AssignmentExpression	pop |= 1 << reg_map [ i ]		1045583	0		|=			
ANR	1045760	Identifier	pop		1045583	0					
ANR	1045761	ShiftExpression	1 << reg_map [ i ]		1045583	1		<<			
ANR	1045762	PrimaryExpression	1		1045583	0					
ANR	1045763	ArrayIndexing	reg_map [ i ]		1045583	1					
ANR	1045764	Identifier	reg_map		1045583	0					
ANR	1045765	Identifier	i		1045583	1					
ANR	1045766	ReturnStatement	"return ( pop & 0xff00 ) ? push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop ) : push_inst16 ( compiler , POP | ( 1 << 8 ) | pop ) ;"	1216:1:39422:39542	1045583	10	True				
ANR	1045767	ConditionalExpression	"( pop & 0xff00 ) ? push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop ) : push_inst16 ( compiler , POP | ( 1 << 8 ) | pop )"		1045583	0					
ANR	1045768	Condition	pop & 0xff00		1045583	0					
ANR	1045769	BitAndExpression	pop & 0xff00		1045583	0		&			
ANR	1045770	Identifier	pop		1045583	0					
ANR	1045771	PrimaryExpression	0xff00		1045583	1					
ANR	1045772	CallExpression	"push_inst32 ( compiler , POP_W | ( 1 << 15 ) | pop )"		1045583	1					
ANR	1045773	Callee	push_inst32		1045583	0					
ANR	1045774	Identifier	push_inst32		1045583	0					
ANR	1045775	ArgumentList	compiler		1045583	1					
ANR	1045776	Argument	compiler		1045583	0					
ANR	1045777	Identifier	compiler		1045583	0					
ANR	1045778	Argument	POP_W | ( 1 << 15 ) | pop		1045583	1					
ANR	1045779	InclusiveOrExpression	POP_W | ( 1 << 15 ) | pop		1045583	0		|			
ANR	1045780	Identifier	POP_W		1045583	0					
ANR	1045781	InclusiveOrExpression	( 1 << 15 ) | pop		1045583	1		|			
ANR	1045782	ShiftExpression	1 << 15		1045583	0		<<			
ANR	1045783	PrimaryExpression	1		1045583	0					
ANR	1045784	PrimaryExpression	15		1045583	1					
ANR	1045785	Identifier	pop		1045583	1					
ANR	1045786	CallExpression	"push_inst16 ( compiler , POP | ( 1 << 8 ) | pop )"		1045583	2					
ANR	1045787	Callee	push_inst16		1045583	0					
ANR	1045788	Identifier	push_inst16		1045583	0					
ANR	1045789	ArgumentList	compiler		1045583	1					
ANR	1045790	Argument	compiler		1045583	0					
ANR	1045791	Identifier	compiler		1045583	0					
ANR	1045792	Argument	POP | ( 1 << 8 ) | pop		1045583	1					
ANR	1045793	InclusiveOrExpression	POP | ( 1 << 8 ) | pop		1045583	0		|			
ANR	1045794	Identifier	POP		1045583	0					
ANR	1045795	InclusiveOrExpression	( 1 << 8 ) | pop		1045583	1		|			
ANR	1045796	ShiftExpression	1 << 8		1045583	0		<<			
ANR	1045797	PrimaryExpression	1		1045583	0					
ANR	1045798	PrimaryExpression	8		1045583	1					
ANR	1045799	Identifier	pop		1045583	1					
ANR	1045800	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1045583	1					
ANR	1045801	Identifier	sljit_emit_return		1045583	2					
ANR	1045802	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1045583	3					
ANR	1045803	Parameter	struct sljit_compiler * compiler	1190:52:38626:38656	1045583	0	True				
ANR	1045804	ParameterType	struct sljit_compiler *		1045583	0					
ANR	1045805	Identifier	compiler		1045583	1					
ANR	1045806	Parameter	sljit_si op	1190:85:38659:38669	1045583	1	True				
ANR	1045807	ParameterType	sljit_si		1045583	0					
ANR	1045808	Identifier	op		1045583	1					
ANR	1045809	Parameter	sljit_si src	1190:98:38672:38683	1045583	2	True				
ANR	1045810	ParameterType	sljit_si		1045583	0					
ANR	1045811	Identifier	src		1045583	1					
ANR	1045812	Parameter	sljit_sw srcw	1190:112:38686:38698	1045583	3	True				
ANR	1045813	ParameterType	sljit_sw		1045583	0					
ANR	1045814	Identifier	srcw		1045583	1					
ANR	1045815	CFGEntryNode	ENTRY		1045583		True				
ANR	1045816	CFGExitNode	EXIT		1045583		True				
ANR	1045817	Symbol	compiler -> scratches		1045583						
ANR	1045818	Symbol	POP_W		1045583						
ANR	1045819	Symbol	push_inst16		1045583						
ANR	1045820	Symbol	reg_map		1045583						
ANR	1045821	Symbol	SLJIT_ADD		1045583						
ANR	1045822	Symbol	* compiler		1045583						
ANR	1045823	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1045583						
ANR	1045824	Symbol	SLJIT_SP		1045583						
ANR	1045825	Symbol	pop		1045583						
ANR	1045826	Symbol	ADD_SP		1045583						
ANR	1045827	Symbol	check_sljit_emit_return		1045583						
ANR	1045828	Symbol	tmp		1045583						
ANR	1045829	Symbol	compiler		1045583						
ANR	1045830	Symbol	emit_op_imm		1045583						
ANR	1045831	Symbol	push_inst32		1045583						
ANR	1045832	Symbol	op		1045583						
ANR	1045833	Symbol	src		1045583						
ANR	1045834	Symbol	srcw		1045583						
ANR	1045835	Symbol	ARG2_IMM		1045583						
ANR	1045836	Symbol	i		1045583						
ANR	1045837	Symbol	* reg_map		1045583						
ANR	1045838	Symbol	SLJIT_S0		1045583						
ANR	1045839	Symbol	POP		1045583						
ANR	1045840	Symbol	compiler -> local_size		1045583						
ANR	1045841	Symbol	compiler -> saveds		1045583						
ANR	1045842	Symbol	* i		1045583						
ANR	1045843	Symbol	SLJIT_FIRST_SAVED_REG		1045583						
ANR	1045844	Symbol	emit_mov_before_return		1045583						
ANR	1045845	DeclStmt									
ANR	1045846	Decl							extern int	"extern int ( int numerator , int denominator )"	__aeabi_idivmod
ANR	1045847	Function	sljit_emit_op0	1240:0:40075:42547							
ANR	1045848	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1045847	0					
ANR	1045849	CompoundStatement		1241:0:40170:42547	1045847	0					
ANR	1045850	IdentifierDeclStatement	sljit_sw saved_reg_list [ 3 ] ;	1242:1:40173:40199	1045847	0	True				
ANR	1045851	IdentifierDecl	saved_reg_list [ 3 ]		1045847	0					
ANR	1045852	IdentifierDeclType	sljit_sw [ 3 ]		1045847	0					
ANR	1045853	Identifier	saved_reg_list		1045847	1					
ANR	1045854	PrimaryExpression	3		1045847	2					
ANR	1045855	IdentifierDeclStatement	sljit_sw saved_reg_count ;	1243:1:40202:40226	1045847	1	True				
ANR	1045856	IdentifierDecl	saved_reg_count		1045847	0					
ANR	1045857	IdentifierDeclType	sljit_sw		1045847	0					
ANR	1045858	Identifier	saved_reg_count		1045847	1					
ANR	1045859	ExpressionStatement	CHECK_ERROR ( )	1245:1:40230:40243	1045847	2	True				
ANR	1045860	CallExpression	CHECK_ERROR ( )		1045847	0					
ANR	1045861	Callee	CHECK_ERROR		1045847	0					
ANR	1045862	Identifier	CHECK_ERROR		1045847	0					
ANR	1045863	ArgumentList			1045847	1					
ANR	1045864	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1246:1:40246:40287	1045847	3	True				
ANR	1045865	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1045847	0					
ANR	1045866	Callee	CHECK		1045847	0					
ANR	1045867	Identifier	CHECK		1045847	0					
ANR	1045868	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1045847	1					
ANR	1045869	Argument	"check_sljit_emit_op0 ( compiler , op )"		1045847	0					
ANR	1045870	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1045847	0					
ANR	1045871	Callee	check_sljit_emit_op0		1045847	0					
ANR	1045872	Identifier	check_sljit_emit_op0		1045847	0					
ANR	1045873	ArgumentList	compiler		1045847	1					
ANR	1045874	Argument	compiler		1045847	0					
ANR	1045875	Identifier	compiler		1045847	0					
ANR	1045876	Argument	op		1045847	1					
ANR	1045877	Identifier	op		1045847	0					
ANR	1045878	ExpressionStatement	op = GET_OPCODE ( op )	1248:1:40291:40310	1045847	4	True				
ANR	1045879	AssignmentExpression	op = GET_OPCODE ( op )		1045847	0		=			
ANR	1045880	Identifier	op		1045847	0					
ANR	1045881	CallExpression	GET_OPCODE ( op )		1045847	1					
ANR	1045882	Callee	GET_OPCODE		1045847	0					
ANR	1045883	Identifier	GET_OPCODE		1045847	0					
ANR	1045884	ArgumentList	op		1045847	1					
ANR	1045885	Argument	op		1045847	0					
ANR	1045886	Identifier	op		1045847	0					
ANR	1045887	SwitchStatement	switch ( op )		1045847	5					
ANR	1045888	Condition	op	1249:9:40321:40322	1045847	0	True				
ANR	1045889	Identifier	op		1045847	0					
ANR	1045890	CompoundStatement		9:13:154:154	1045847	1					
ANR	1045891	Label	case SLJIT_BREAKPOINT :	1250:1:40328:40349	1045847	0	True				
ANR	1045892	Identifier	SLJIT_BREAKPOINT		1045847	0					
ANR	1045893	ReturnStatement	"return push_inst16 ( compiler , BKPT ) ;"	1251:2:40353:40387	1045847	1	True				
ANR	1045894	CallExpression	"push_inst16 ( compiler , BKPT )"		1045847	0					
ANR	1045895	Callee	push_inst16		1045847	0					
ANR	1045896	Identifier	push_inst16		1045847	0					
ANR	1045897	ArgumentList	compiler		1045847	1					
ANR	1045898	Argument	compiler		1045847	0					
ANR	1045899	Identifier	compiler		1045847	0					
ANR	1045900	Argument	BKPT		1045847	1					
ANR	1045901	Identifier	BKPT		1045847	0					
ANR	1045902	Label	case SLJIT_NOP :	1252:1:40390:40404	1045847	2	True				
ANR	1045903	Identifier	SLJIT_NOP		1045847	0					
ANR	1045904	ReturnStatement	"return push_inst16 ( compiler , NOP ) ;"	1253:2:40408:40441	1045847	3	True				
ANR	1045905	CallExpression	"push_inst16 ( compiler , NOP )"		1045847	0					
ANR	1045906	Callee	push_inst16		1045847	0					
ANR	1045907	Identifier	push_inst16		1045847	0					
ANR	1045908	ArgumentList	compiler		1045847	1					
ANR	1045909	Argument	compiler		1045847	0					
ANR	1045910	Identifier	compiler		1045847	0					
ANR	1045911	Argument	NOP		1045847	1					
ANR	1045912	Identifier	NOP		1045847	0					
ANR	1045913	Label	case SLJIT_LUMUL :	1254:1:40444:40460	1045847	4	True				
ANR	1045914	Identifier	SLJIT_LUMUL		1045847	0					
ANR	1045915	Label	case SLJIT_LSMUL :	1255:1:40463:40479	1045847	5	True				
ANR	1045916	Identifier	SLJIT_LSMUL		1045847	0					
ANR	1045917	ReturnStatement	"return push_inst32 ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ] ) ;"	1256:2:40483:40663	1045847	6	True				
ANR	1045918	CallExpression	"push_inst32 ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ] )"		1045847	0					
ANR	1045919	Callee	push_inst32		1045847	0					
ANR	1045920	Identifier	push_inst32		1045847	0					
ANR	1045921	ArgumentList	compiler		1045847	1					
ANR	1045922	Argument	compiler		1045847	0					
ANR	1045923	Identifier	compiler		1045847	0					
ANR	1045924	Argument	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1045847	1					
ANR	1045925	InclusiveOrExpression	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1045847	0		|			
ANR	1045926	ConditionalExpression	op == SLJIT_LUMUL ? UMULL : SMULL		1045847	0					
ANR	1045927	Condition	op == SLJIT_LUMUL		1045847	0					
ANR	1045928	EqualityExpression	op == SLJIT_LUMUL		1045847	0		==			
ANR	1045929	Identifier	op		1045847	0					
ANR	1045930	Identifier	SLJIT_LUMUL		1045847	1					
ANR	1045931	Identifier	UMULL		1045847	1					
ANR	1045932	Identifier	SMULL		1045847	2					
ANR	1045933	InclusiveOrExpression	( reg_map [ SLJIT_R1 ] << 8 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1045847	1		|			
ANR	1045934	ShiftExpression	reg_map [ SLJIT_R1 ] << 8		1045847	0		<<			
ANR	1045935	ArrayIndexing	reg_map [ SLJIT_R1 ]		1045847	0					
ANR	1045936	Identifier	reg_map		1045847	0					
ANR	1045937	Identifier	SLJIT_R1		1045847	1					
ANR	1045938	PrimaryExpression	8		1045847	1					
ANR	1045939	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1045847	1		|			
ANR	1045940	ShiftExpression	reg_map [ SLJIT_R0 ] << 12		1045847	0		<<			
ANR	1045941	ArrayIndexing	reg_map [ SLJIT_R0 ]		1045847	0					
ANR	1045942	Identifier	reg_map		1045847	0					
ANR	1045943	Identifier	SLJIT_R0		1045847	1					
ANR	1045944	PrimaryExpression	12		1045847	1					
ANR	1045945	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 16 ) | reg_map [ SLJIT_R1 ]		1045847	1		|			
ANR	1045946	ShiftExpression	reg_map [ SLJIT_R0 ] << 16		1045847	0		<<			
ANR	1045947	ArrayIndexing	reg_map [ SLJIT_R0 ]		1045847	0					
ANR	1045948	Identifier	reg_map		1045847	0					
ANR	1045949	Identifier	SLJIT_R0		1045847	1					
ANR	1045950	PrimaryExpression	16		1045847	1					
ANR	1045951	ArrayIndexing	reg_map [ SLJIT_R1 ]		1045847	1					
ANR	1045952	Identifier	reg_map		1045847	0					
ANR	1045953	Identifier	SLJIT_R1		1045847	1					
ANR	1045954	Label	case SLJIT_UDIVMOD :	1261:1:40666:40684	1045847	7	True				
ANR	1045955	Identifier	SLJIT_UDIVMOD		1045847	0					
ANR	1045956	Label	case SLJIT_SDIVMOD :	1262:1:40687:40705	1045847	8	True				
ANR	1045957	Identifier	SLJIT_SDIVMOD		1045847	0					
ANR	1045958	Label	case SLJIT_UDIVI :	1263:1:40708:40724	1045847	9	True				
ANR	1045959	Identifier	SLJIT_UDIVI		1045847	0					
ANR	1045960	Label	case SLJIT_SDIVI :	1264:1:40727:40743	1045847	10	True				
ANR	1045961	Identifier	SLJIT_SDIVI		1045847	0					
ANR	1045962	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"	1265:2:40747:40861	1045847	11	True				
ANR	1045963	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"		1045847	0					
ANR	1045964	Callee	SLJIT_COMPILE_ASSERT		1045847	0					
ANR	1045965	Identifier	SLJIT_COMPILE_ASSERT		1045847	0					
ANR	1045966	ArgumentList	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1045847	1					
ANR	1045967	Argument	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1045847	0					
ANR	1045968	AndExpression	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1045847	0		&&			
ANR	1045969	EqualityExpression	( SLJIT_UDIVMOD & 0x2 ) == 0		1045847	0		==			
ANR	1045970	BitAndExpression	SLJIT_UDIVMOD & 0x2		1045847	0		&			
ANR	1045971	Identifier	SLJIT_UDIVMOD		1045847	0					
ANR	1045972	PrimaryExpression	0x2		1045847	1					
ANR	1045973	PrimaryExpression	0		1045847	1					
ANR	1045974	EqualityExpression	SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1045847	1		==			
ANR	1045975	AdditiveExpression	SLJIT_UDIVI - 0x2		1045847	0		-			
ANR	1045976	Identifier	SLJIT_UDIVI		1045847	0					
ANR	1045977	PrimaryExpression	0x2		1045847	1					
ANR	1045978	Identifier	SLJIT_UDIVMOD		1045847	1					
ANR	1045979	Argument	bad_div_opcode_assignments		1045847	1					
ANR	1045980	Identifier	bad_div_opcode_assignments		1045847	0					
ANR	1045981	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( reg_map [ 2 ] == 1 && reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12 , bad_register_mapping )"	1266:2:40865:40963	1045847	12	True				
ANR	1045982	CallExpression	"SLJIT_COMPILE_ASSERT ( reg_map [ 2 ] == 1 && reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12 , bad_register_mapping )"		1045847	0					
ANR	1045983	Callee	SLJIT_COMPILE_ASSERT		1045847	0					
ANR	1045984	Identifier	SLJIT_COMPILE_ASSERT		1045847	0					
ANR	1045985	ArgumentList	reg_map [ 2 ] == 1 && reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12		1045847	1					
ANR	1045986	Argument	reg_map [ 2 ] == 1 && reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12		1045847	0					
ANR	1045987	AndExpression	reg_map [ 2 ] == 1 && reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12		1045847	0		&&			
ANR	1045988	EqualityExpression	reg_map [ 2 ] == 1		1045847	0		==			
ANR	1045989	ArrayIndexing	reg_map [ 2 ]		1045847	0					
ANR	1045990	Identifier	reg_map		1045847	0					
ANR	1045991	PrimaryExpression	2		1045847	1					
ANR	1045992	PrimaryExpression	1		1045847	1					
ANR	1045993	AndExpression	reg_map [ 3 ] == 2 && reg_map [ 4 ] == 12		1045847	1		&&			
ANR	1045994	EqualityExpression	reg_map [ 3 ] == 2		1045847	0		==			
ANR	1045995	ArrayIndexing	reg_map [ 3 ]		1045847	0					
ANR	1045996	Identifier	reg_map		1045847	0					
ANR	1045997	PrimaryExpression	3		1045847	1					
ANR	1045998	PrimaryExpression	2		1045847	1					
ANR	1045999	EqualityExpression	reg_map [ 4 ] == 12		1045847	1		==			
ANR	1046000	ArrayIndexing	reg_map [ 4 ]		1045847	0					
ANR	1046001	Identifier	reg_map		1045847	0					
ANR	1046002	PrimaryExpression	4		1045847	1					
ANR	1046003	PrimaryExpression	12		1045847	1					
ANR	1046004	Argument	bad_register_mapping		1045847	1					
ANR	1046005	Identifier	bad_register_mapping		1045847	0					
ANR	1046006	ExpressionStatement	saved_reg_count = 0	1268:2:40968:40987	1045847	13	True				
ANR	1046007	AssignmentExpression	saved_reg_count = 0		1045847	0		=			
ANR	1046008	Identifier	saved_reg_count		1045847	0					
ANR	1046009	PrimaryExpression	0		1045847	1					
ANR	1046010	IfStatement	if ( compiler -> scratches >= 4 )		1045847	14					
ANR	1046011	Condition	compiler -> scratches >= 4	1269:6:40995:41018	1045847	0	True				
ANR	1046012	RelationalExpression	compiler -> scratches >= 4		1045847	0		>=			
ANR	1046013	PtrMemberAccess	compiler -> scratches		1045847	0					
ANR	1046014	Identifier	compiler		1045847	0					
ANR	1046015	Identifier	scratches		1045847	1					
ANR	1046016	PrimaryExpression	4		1045847	1					
ANR	1046017	ExpressionStatement	saved_reg_list [ saved_reg_count ++ ] = 12	1270:3:41024:41062	1045847	1	True				
ANR	1046018	AssignmentExpression	saved_reg_list [ saved_reg_count ++ ] = 12		1045847	0		=			
ANR	1046019	ArrayIndexing	saved_reg_list [ saved_reg_count ++ ]		1045847	0					
ANR	1046020	Identifier	saved_reg_list		1045847	0					
ANR	1046021	PostIncDecOperationExpression	saved_reg_count ++		1045847	1					
ANR	1046022	Identifier	saved_reg_count		1045847	0					
ANR	1046023	IncDec	++		1045847	1					
ANR	1046024	PrimaryExpression	12		1045847	1					
ANR	1046025	IfStatement	if ( compiler -> scratches >= 3 )		1045847	15					
ANR	1046026	Condition	compiler -> scratches >= 3	1271:6:41070:41093	1045847	0	True				
ANR	1046027	RelationalExpression	compiler -> scratches >= 3		1045847	0		>=			
ANR	1046028	PtrMemberAccess	compiler -> scratches		1045847	0					
ANR	1046029	Identifier	compiler		1045847	0					
ANR	1046030	Identifier	scratches		1045847	1					
ANR	1046031	PrimaryExpression	3		1045847	1					
ANR	1046032	ExpressionStatement	saved_reg_list [ saved_reg_count ++ ] = 2	1272:3:41099:41136	1045847	1	True				
ANR	1046033	AssignmentExpression	saved_reg_list [ saved_reg_count ++ ] = 2		1045847	0		=			
ANR	1046034	ArrayIndexing	saved_reg_list [ saved_reg_count ++ ]		1045847	0					
ANR	1046035	Identifier	saved_reg_list		1045847	0					
ANR	1046036	PostIncDecOperationExpression	saved_reg_count ++		1045847	1					
ANR	1046037	Identifier	saved_reg_count		1045847	0					
ANR	1046038	IncDec	++		1045847	1					
ANR	1046039	PrimaryExpression	2		1045847	1					
ANR	1046040	IfStatement	if ( op >= SLJIT_UDIVI )		1045847	16					
ANR	1046041	Condition	op >= SLJIT_UDIVI	1273:6:41144:41160	1045847	0	True				
ANR	1046042	RelationalExpression	op >= SLJIT_UDIVI		1045847	0		>=			
ANR	1046043	Identifier	op		1045847	0					
ANR	1046044	Identifier	SLJIT_UDIVI		1045847	1					
ANR	1046045	ExpressionStatement	saved_reg_list [ saved_reg_count ++ ] = 1	1274:3:41166:41203	1045847	1	True				
ANR	1046046	AssignmentExpression	saved_reg_list [ saved_reg_count ++ ] = 1		1045847	0		=			
ANR	1046047	ArrayIndexing	saved_reg_list [ saved_reg_count ++ ]		1045847	0					
ANR	1046048	Identifier	saved_reg_list		1045847	0					
ANR	1046049	PostIncDecOperationExpression	saved_reg_count ++		1045847	1					
ANR	1046050	Identifier	saved_reg_count		1045847	0					
ANR	1046051	IncDec	++		1045847	1					
ANR	1046052	PrimaryExpression	1		1045847	1					
ANR	1046053	IfStatement	if ( saved_reg_count > 0 )		1045847	17					
ANR	1046054	Condition	saved_reg_count > 0	1276:6:41212:41230	1045847	0	True				
ANR	1046055	RelationalExpression	saved_reg_count > 0		1045847	0		>			
ANR	1046056	Identifier	saved_reg_count		1045847	0					
ANR	1046057	PrimaryExpression	0		1045847	1					
ANR	1046058	CompoundStatement		36:27:1062:1062	1045847	1					
ANR	1046059	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , 0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) ) )"	1277:3:41238:41377	1045847	0	True				
ANR	1046060	CallExpression	"FAIL_IF ( push_inst32 ( compiler , 0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) ) )"		1045847	0					
ANR	1046061	Callee	FAIL_IF		1045847	0					
ANR	1046062	Identifier	FAIL_IF		1045847	0					
ANR	1046063	ArgumentList	"push_inst32 ( compiler , 0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) )"		1045847	1					
ANR	1046064	Argument	"push_inst32 ( compiler , 0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) )"		1045847	0					
ANR	1046065	CallExpression	"push_inst32 ( compiler , 0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) )"		1045847	0					
ANR	1046066	Callee	push_inst32		1045847	0					
ANR	1046067	Identifier	push_inst32		1045847	0					
ANR	1046068	ArgumentList	compiler		1045847	1					
ANR	1046069	Argument	compiler		1045847	0					
ANR	1046070	Identifier	compiler		1045847	0					
ANR	1046071	Argument	0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	1					
ANR	1046072	InclusiveOrExpression	0xf84d0d00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	0		|			
ANR	1046073	PrimaryExpression	0xf84d0d00		1045847	0					
ANR	1046074	InclusiveOrExpression	( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	1		|			
ANR	1046075	ConditionalExpression	saved_reg_count >= 3 ? 16 : 8		1045847	0					
ANR	1046076	Condition	saved_reg_count >= 3		1045847	0					
ANR	1046077	RelationalExpression	saved_reg_count >= 3		1045847	0		>=			
ANR	1046078	Identifier	saved_reg_count		1045847	0					
ANR	1046079	PrimaryExpression	3		1045847	1					
ANR	1046080	PrimaryExpression	16		1045847	1					
ANR	1046081	PrimaryExpression	8		1045847	2					
ANR	1046082	ShiftExpression	saved_reg_list [ 0 ] << 12		1045847	1		<<			
ANR	1046083	ArrayIndexing	saved_reg_list [ 0 ]		1045847	0					
ANR	1046084	Identifier	saved_reg_list		1045847	0					
ANR	1046085	PrimaryExpression	0		1045847	1					
ANR	1046086	PrimaryExpression	12		1045847	1					
ANR	1046087	IfStatement	if ( saved_reg_count >= 2 )		1045847	1					
ANR	1046088	Condition	saved_reg_count >= 2	1279:7:41386:41405	1045847	0	True				
ANR	1046089	RelationalExpression	saved_reg_count >= 2		1045847	0		>=			
ANR	1046090	Identifier	saved_reg_count		1045847	0					
ANR	1046091	PrimaryExpression	2		1045847	1					
ANR	1046092	CompoundStatement		39:29:1237:1237	1045847	1					
ANR	1046093	ExpressionStatement	SLJIT_ASSERT ( saved_reg_list [ 1 ] < 8 )	1280:4:41414:41449	1045847	0	True				
ANR	1046094	CallExpression	SLJIT_ASSERT ( saved_reg_list [ 1 ] < 8 )		1045847	0					
ANR	1046095	Callee	SLJIT_ASSERT		1045847	0					
ANR	1046096	Identifier	SLJIT_ASSERT		1045847	0					
ANR	1046097	ArgumentList	saved_reg_list [ 1 ] < 8		1045847	1					
ANR	1046098	Argument	saved_reg_list [ 1 ] < 8		1045847	0					
ANR	1046099	RelationalExpression	saved_reg_list [ 1 ] < 8		1045847	0		<			
ANR	1046100	ArrayIndexing	saved_reg_list [ 1 ]		1045847	0					
ANR	1046101	Identifier	saved_reg_list		1045847	0					
ANR	1046102	PrimaryExpression	1		1045847	1					
ANR	1046103	PrimaryExpression	8		1045847	1					
ANR	1046104	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , 0x9001 | ( saved_reg_list [ 1 ] << 8 ) ) )"	1281:4:41455:41543	1045847	1	True				
ANR	1046105	CallExpression	"FAIL_IF ( push_inst16 ( compiler , 0x9001 | ( saved_reg_list [ 1 ] << 8 ) ) )"		1045847	0					
ANR	1046106	Callee	FAIL_IF		1045847	0					
ANR	1046107	Identifier	FAIL_IF		1045847	0					
ANR	1046108	ArgumentList	"push_inst16 ( compiler , 0x9001 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	1					
ANR	1046109	Argument	"push_inst16 ( compiler , 0x9001 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	0					
ANR	1046110	CallExpression	"push_inst16 ( compiler , 0x9001 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	0					
ANR	1046111	Callee	push_inst16		1045847	0					
ANR	1046112	Identifier	push_inst16		1045847	0					
ANR	1046113	ArgumentList	compiler		1045847	1					
ANR	1046114	Argument	compiler		1045847	0					
ANR	1046115	Identifier	compiler		1045847	0					
ANR	1046116	Argument	0x9001 | ( saved_reg_list [ 1 ] << 8 )		1045847	1					
ANR	1046117	InclusiveOrExpression	0x9001 | ( saved_reg_list [ 1 ] << 8 )		1045847	0		|			
ANR	1046118	PrimaryExpression	0x9001		1045847	0					
ANR	1046119	ShiftExpression	saved_reg_list [ 1 ] << 8		1045847	1		<<			
ANR	1046120	ArrayIndexing	saved_reg_list [ 1 ]		1045847	0					
ANR	1046121	Identifier	saved_reg_list		1045847	0					
ANR	1046122	PrimaryExpression	1		1045847	1					
ANR	1046123	PrimaryExpression	8		1045847	1					
ANR	1046124	IfStatement	if ( saved_reg_count >= 3 )		1045847	2					
ANR	1046125	Condition	saved_reg_count >= 3	1283:7:41557:41576	1045847	0	True				
ANR	1046126	RelationalExpression	saved_reg_count >= 3		1045847	0		>=			
ANR	1046127	Identifier	saved_reg_count		1045847	0					
ANR	1046128	PrimaryExpression	3		1045847	1					
ANR	1046129	CompoundStatement		43:29:1408:1408	1045847	1					
ANR	1046130	ExpressionStatement	SLJIT_ASSERT ( saved_reg_list [ 2 ] < 8 )	1284:4:41585:41620	1045847	0	True				
ANR	1046131	CallExpression	SLJIT_ASSERT ( saved_reg_list [ 2 ] < 8 )		1045847	0					
ANR	1046132	Callee	SLJIT_ASSERT		1045847	0					
ANR	1046133	Identifier	SLJIT_ASSERT		1045847	0					
ANR	1046134	ArgumentList	saved_reg_list [ 2 ] < 8		1045847	1					
ANR	1046135	Argument	saved_reg_list [ 2 ] < 8		1045847	0					
ANR	1046136	RelationalExpression	saved_reg_list [ 2 ] < 8		1045847	0		<			
ANR	1046137	ArrayIndexing	saved_reg_list [ 2 ]		1045847	0					
ANR	1046138	Identifier	saved_reg_list		1045847	0					
ANR	1046139	PrimaryExpression	2		1045847	1					
ANR	1046140	PrimaryExpression	8		1045847	1					
ANR	1046141	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , 0x9002 | ( saved_reg_list [ 2 ] << 8 ) ) )"	1285:4:41626:41714	1045847	1	True				
ANR	1046142	CallExpression	"FAIL_IF ( push_inst16 ( compiler , 0x9002 | ( saved_reg_list [ 2 ] << 8 ) ) )"		1045847	0					
ANR	1046143	Callee	FAIL_IF		1045847	0					
ANR	1046144	Identifier	FAIL_IF		1045847	0					
ANR	1046145	ArgumentList	"push_inst16 ( compiler , 0x9002 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	1					
ANR	1046146	Argument	"push_inst16 ( compiler , 0x9002 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	0					
ANR	1046147	CallExpression	"push_inst16 ( compiler , 0x9002 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	0					
ANR	1046148	Callee	push_inst16		1045847	0					
ANR	1046149	Identifier	push_inst16		1045847	0					
ANR	1046150	ArgumentList	compiler		1045847	1					
ANR	1046151	Argument	compiler		1045847	0					
ANR	1046152	Identifier	compiler		1045847	0					
ANR	1046153	Argument	0x9002 | ( saved_reg_list [ 2 ] << 8 )		1045847	1					
ANR	1046154	InclusiveOrExpression	0x9002 | ( saved_reg_list [ 2 ] << 8 )		1045847	0		|			
ANR	1046155	PrimaryExpression	0x9002		1045847	0					
ANR	1046156	ShiftExpression	saved_reg_list [ 2 ] << 8		1045847	1		<<			
ANR	1046157	ArrayIndexing	saved_reg_list [ 2 ]		1045847	0					
ANR	1046158	Identifier	saved_reg_list		1045847	0					
ANR	1046159	PrimaryExpression	2		1045847	1					
ANR	1046160	PrimaryExpression	8		1045847	1					
ANR	1046161	ExpressionStatement	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( ( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"	1290:2:41750:41920	1045847	18	True				
ANR	1046162	CallExpression	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( ( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"		1045847	0					
ANR	1046163	Callee	FAIL_IF		1045847	0					
ANR	1046164	Identifier	FAIL_IF		1045847	0					
ANR	1046165	ArgumentList	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( ( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1045847	1					
ANR	1046166	Argument	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( ( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1045847	0					
ANR	1046167	CallExpression	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( ( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1045847	0					
ANR	1046168	Callee	sljit_emit_ijump		1045847	0					
ANR	1046169	Identifier	sljit_emit_ijump		1045847	0					
ANR	1046170	ArgumentList	compiler		1045847	1					
ANR	1046171	Argument	compiler		1045847	0					
ANR	1046172	Identifier	compiler		1045847	0					
ANR	1046173	Argument	SLJIT_FAST_CALL		1045847	1					
ANR	1046174	Identifier	SLJIT_FAST_CALL		1045847	0					
ANR	1046175	Argument	SLJIT_IMM		1045847	2					
ANR	1046176	Identifier	SLJIT_IMM		1045847	0					
ANR	1046177	Argument	( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1045847	3					
ANR	1046178	ConditionalExpression	( op | 0x2 ) == SLJIT_UDIVI ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1045847	0					
ANR	1046179	Condition	( op | 0x2 ) == SLJIT_UDIVI		1045847	0					
ANR	1046180	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1045847	0		==			
ANR	1046181	InclusiveOrExpression	op | 0x2		1045847	0		|			
ANR	1046182	Identifier	op		1045847	0					
ANR	1046183	PrimaryExpression	0x2		1045847	1					
ANR	1046184	Identifier	SLJIT_UDIVI		1045847	1					
ANR	1046185	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_uidivmod )		1045847	1					
ANR	1046186	Callee	SLJIT_FUNC_OFFSET		1045847	0					
ANR	1046187	Identifier	SLJIT_FUNC_OFFSET		1045847	0					
ANR	1046188	ArgumentList	__aeabi_uidivmod		1045847	1					
ANR	1046189	Argument	__aeabi_uidivmod		1045847	0					
ANR	1046190	Identifier	__aeabi_uidivmod		1045847	0					
ANR	1046191	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1045847	2					
ANR	1046192	Callee	SLJIT_FUNC_OFFSET		1045847	0					
ANR	1046193	Identifier	SLJIT_FUNC_OFFSET		1045847	0					
ANR	1046194	ArgumentList	__aeabi_idivmod		1045847	1					
ANR	1046195	Argument	__aeabi_idivmod		1045847	0					
ANR	1046196	Identifier	__aeabi_idivmod		1045847	0					
ANR	1046197	IfStatement	if ( saved_reg_count > 0 )		1045847	19					
ANR	1046198	Condition	saved_reg_count > 0	1296:6:41988:42006	1045847	0	True				
ANR	1046199	RelationalExpression	saved_reg_count > 0		1045847	0		>			
ANR	1046200	Identifier	saved_reg_count		1045847	0					
ANR	1046201	PrimaryExpression	0		1045847	1					
ANR	1046202	CompoundStatement		56:27:1838:1838	1045847	1					
ANR	1046203	IfStatement	if ( saved_reg_count >= 3 )		1045847	0					
ANR	1046204	Condition	saved_reg_count >= 3	1297:7:42018:42037	1045847	0	True				
ANR	1046205	RelationalExpression	saved_reg_count >= 3		1045847	0		>=			
ANR	1046206	Identifier	saved_reg_count		1045847	0					
ANR	1046207	PrimaryExpression	3		1045847	1					
ANR	1046208	CompoundStatement		57:29:1869:1869	1045847	1					
ANR	1046209	ExpressionStatement	SLJIT_ASSERT ( saved_reg_list [ 2 ] < 8 )	1298:4:42046:42081	1045847	0	True				
ANR	1046210	CallExpression	SLJIT_ASSERT ( saved_reg_list [ 2 ] < 8 )		1045847	0					
ANR	1046211	Callee	SLJIT_ASSERT		1045847	0					
ANR	1046212	Identifier	SLJIT_ASSERT		1045847	0					
ANR	1046213	ArgumentList	saved_reg_list [ 2 ] < 8		1045847	1					
ANR	1046214	Argument	saved_reg_list [ 2 ] < 8		1045847	0					
ANR	1046215	RelationalExpression	saved_reg_list [ 2 ] < 8		1045847	0		<			
ANR	1046216	ArrayIndexing	saved_reg_list [ 2 ]		1045847	0					
ANR	1046217	Identifier	saved_reg_list		1045847	0					
ANR	1046218	PrimaryExpression	2		1045847	1					
ANR	1046219	PrimaryExpression	8		1045847	1					
ANR	1046220	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , 0x9802 | ( saved_reg_list [ 2 ] << 8 ) ) )"	1299:4:42087:42175	1045847	1	True				
ANR	1046221	CallExpression	"FAIL_IF ( push_inst16 ( compiler , 0x9802 | ( saved_reg_list [ 2 ] << 8 ) ) )"		1045847	0					
ANR	1046222	Callee	FAIL_IF		1045847	0					
ANR	1046223	Identifier	FAIL_IF		1045847	0					
ANR	1046224	ArgumentList	"push_inst16 ( compiler , 0x9802 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	1					
ANR	1046225	Argument	"push_inst16 ( compiler , 0x9802 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	0					
ANR	1046226	CallExpression	"push_inst16 ( compiler , 0x9802 | ( saved_reg_list [ 2 ] << 8 ) )"		1045847	0					
ANR	1046227	Callee	push_inst16		1045847	0					
ANR	1046228	Identifier	push_inst16		1045847	0					
ANR	1046229	ArgumentList	compiler		1045847	1					
ANR	1046230	Argument	compiler		1045847	0					
ANR	1046231	Identifier	compiler		1045847	0					
ANR	1046232	Argument	0x9802 | ( saved_reg_list [ 2 ] << 8 )		1045847	1					
ANR	1046233	InclusiveOrExpression	0x9802 | ( saved_reg_list [ 2 ] << 8 )		1045847	0		|			
ANR	1046234	PrimaryExpression	0x9802		1045847	0					
ANR	1046235	ShiftExpression	saved_reg_list [ 2 ] << 8		1045847	1		<<			
ANR	1046236	ArrayIndexing	saved_reg_list [ 2 ]		1045847	0					
ANR	1046237	Identifier	saved_reg_list		1045847	0					
ANR	1046238	PrimaryExpression	2		1045847	1					
ANR	1046239	PrimaryExpression	8		1045847	1					
ANR	1046240	IfStatement	if ( saved_reg_count >= 2 )		1045847	1					
ANR	1046241	Condition	saved_reg_count >= 2	1301:7:42189:42208	1045847	0	True				
ANR	1046242	RelationalExpression	saved_reg_count >= 2		1045847	0		>=			
ANR	1046243	Identifier	saved_reg_count		1045847	0					
ANR	1046244	PrimaryExpression	2		1045847	1					
ANR	1046245	CompoundStatement		61:29:2040:2040	1045847	1					
ANR	1046246	ExpressionStatement	SLJIT_ASSERT ( saved_reg_list [ 1 ] < 8 )	1302:4:42217:42252	1045847	0	True				
ANR	1046247	CallExpression	SLJIT_ASSERT ( saved_reg_list [ 1 ] < 8 )		1045847	0					
ANR	1046248	Callee	SLJIT_ASSERT		1045847	0					
ANR	1046249	Identifier	SLJIT_ASSERT		1045847	0					
ANR	1046250	ArgumentList	saved_reg_list [ 1 ] < 8		1045847	1					
ANR	1046251	Argument	saved_reg_list [ 1 ] < 8		1045847	0					
ANR	1046252	RelationalExpression	saved_reg_list [ 1 ] < 8		1045847	0		<			
ANR	1046253	ArrayIndexing	saved_reg_list [ 1 ]		1045847	0					
ANR	1046254	Identifier	saved_reg_list		1045847	0					
ANR	1046255	PrimaryExpression	1		1045847	1					
ANR	1046256	PrimaryExpression	8		1045847	1					
ANR	1046257	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , 0x9801 | ( saved_reg_list [ 1 ] << 8 ) ) )"	1303:4:42258:42346	1045847	1	True				
ANR	1046258	CallExpression	"FAIL_IF ( push_inst16 ( compiler , 0x9801 | ( saved_reg_list [ 1 ] << 8 ) ) )"		1045847	0					
ANR	1046259	Callee	FAIL_IF		1045847	0					
ANR	1046260	Identifier	FAIL_IF		1045847	0					
ANR	1046261	ArgumentList	"push_inst16 ( compiler , 0x9801 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	1					
ANR	1046262	Argument	"push_inst16 ( compiler , 0x9801 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	0					
ANR	1046263	CallExpression	"push_inst16 ( compiler , 0x9801 | ( saved_reg_list [ 1 ] << 8 ) )"		1045847	0					
ANR	1046264	Callee	push_inst16		1045847	0					
ANR	1046265	Identifier	push_inst16		1045847	0					
ANR	1046266	ArgumentList	compiler		1045847	1					
ANR	1046267	Argument	compiler		1045847	0					
ANR	1046268	Identifier	compiler		1045847	0					
ANR	1046269	Argument	0x9801 | ( saved_reg_list [ 1 ] << 8 )		1045847	1					
ANR	1046270	InclusiveOrExpression	0x9801 | ( saved_reg_list [ 1 ] << 8 )		1045847	0		|			
ANR	1046271	PrimaryExpression	0x9801		1045847	0					
ANR	1046272	ShiftExpression	saved_reg_list [ 1 ] << 8		1045847	1		<<			
ANR	1046273	ArrayIndexing	saved_reg_list [ 1 ]		1045847	0					
ANR	1046274	Identifier	saved_reg_list		1045847	0					
ANR	1046275	PrimaryExpression	1		1045847	1					
ANR	1046276	PrimaryExpression	8		1045847	1					
ANR	1046277	ReturnStatement	"return push_inst32 ( compiler , 0xf85d0b00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) ) ;"	1305:3:42356:42490	1045847	2	True				
ANR	1046278	CallExpression	"push_inst32 ( compiler , 0xf85d0b00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 ) )"		1045847	0					
ANR	1046279	Callee	push_inst32		1045847	0					
ANR	1046280	Identifier	push_inst32		1045847	0					
ANR	1046281	ArgumentList	compiler		1045847	1					
ANR	1046282	Argument	compiler		1045847	0					
ANR	1046283	Identifier	compiler		1045847	0					
ANR	1046284	Argument	0xf85d0b00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	1					
ANR	1046285	InclusiveOrExpression	0xf85d0b00 | ( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	0		|			
ANR	1046286	PrimaryExpression	0xf85d0b00		1045847	0					
ANR	1046287	InclusiveOrExpression	( saved_reg_count >= 3 ? 16 : 8 ) | ( saved_reg_list [ 0 ] << 12 )		1045847	1		|			
ANR	1046288	ConditionalExpression	saved_reg_count >= 3 ? 16 : 8		1045847	0					
ANR	1046289	Condition	saved_reg_count >= 3		1045847	0					
ANR	1046290	RelationalExpression	saved_reg_count >= 3		1045847	0		>=			
ANR	1046291	Identifier	saved_reg_count		1045847	0					
ANR	1046292	PrimaryExpression	3		1045847	1					
ANR	1046293	PrimaryExpression	16		1045847	1					
ANR	1046294	PrimaryExpression	8		1045847	2					
ANR	1046295	ShiftExpression	saved_reg_list [ 0 ] << 12		1045847	1		<<			
ANR	1046296	ArrayIndexing	saved_reg_list [ 0 ]		1045847	0					
ANR	1046297	Identifier	saved_reg_list		1045847	0					
ANR	1046298	PrimaryExpression	0		1045847	1					
ANR	1046299	PrimaryExpression	12		1045847	1					
ANR	1046300	ReturnStatement	return SLJIT_SUCCESS ;	1308:2:42498:42518	1045847	20	True				
ANR	1046301	Identifier	SLJIT_SUCCESS		1045847	0					
ANR	1046302	ReturnStatement	return SLJIT_SUCCESS ;	1311:1:42525:42545	1045847	6	True				
ANR	1046303	Identifier	SLJIT_SUCCESS		1045847	0					
ANR	1046304	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1045847	1					
ANR	1046305	Identifier	sljit_emit_op0		1045847	2					
ANR	1046306	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1045847	3					
ANR	1046307	Parameter	struct sljit_compiler * compiler	1240:49:40124:40154	1045847	0	True				
ANR	1046308	ParameterType	struct sljit_compiler *		1045847	0					
ANR	1046309	Identifier	compiler		1045847	1					
ANR	1046310	Parameter	sljit_si op	1240:82:40157:40167	1045847	1	True				
ANR	1046311	ParameterType	sljit_si		1045847	0					
ANR	1046312	Identifier	op		1045847	1					
ANR	1046313	CFGEntryNode	ENTRY		1045847		True				
ANR	1046314	CFGExitNode	EXIT		1045847		True				
ANR	1046315	Symbol	compiler -> scratches		1045847						
ANR	1046316	Symbol	__aeabi_uidivmod		1045847						
ANR	1046317	Symbol	push_inst16		1045847						
ANR	1046318	Symbol	sljit_emit_ijump		1045847						
ANR	1046319	Symbol	SLJIT_LUMUL		1045847						
ANR	1046320	Symbol	reg_map		1045847						
ANR	1046321	Symbol	bad_register_mapping		1045847						
ANR	1046322	Symbol	* compiler		1045847						
ANR	1046323	Symbol	SLJIT_R1		1045847						
ANR	1046324	Symbol	saved_reg_count		1045847						
ANR	1046325	Symbol	SMULL		1045847						
ANR	1046326	Symbol	bad_div_opcode_assignments		1045847						
ANR	1046327	Symbol	GET_OPCODE		1045847						
ANR	1046328	Symbol	SLJIT_R0		1045847						
ANR	1046329	Symbol	SLJIT_FUNC_OFFSET		1045847						
ANR	1046330	Symbol	* SLJIT_R1		1045847						
ANR	1046331	Symbol	BKPT		1045847						
ANR	1046332	Symbol	SLJIT_UDIVMOD		1045847						
ANR	1046333	Symbol	SLJIT_IMM		1045847						
ANR	1046334	Symbol	SLJIT_FAST_CALL		1045847						
ANR	1046335	Symbol	compiler		1045847						
ANR	1046336	Symbol	push_inst32		1045847						
ANR	1046337	Symbol	* SLJIT_R0		1045847						
ANR	1046338	Symbol	op		1045847						
ANR	1046339	Symbol	saved_reg_list		1045847						
ANR	1046340	Symbol	check_sljit_emit_op0		1045847						
ANR	1046341	Symbol	SLJIT_SUCCESS		1045847						
ANR	1046342	Symbol	* reg_map		1045847						
ANR	1046343	Symbol	SLJIT_UDIVI		1045847						
ANR	1046344	Symbol	NOP		1045847						
ANR	1046345	Symbol	UMULL		1045847						
ANR	1046346	Symbol	__aeabi_idivmod		1045847						
ANR	1046347	Symbol	* saved_reg_list		1045847						
ANR	1046348	Function	sljit_emit_op1	1314:0:42550:45899							
ANR	1046349	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1046348	0					
ANR	1046350	CompoundStatement		1317:0:42705:45899	1046348	0					
ANR	1046351	IdentifierDeclStatement	"sljit_si dst_r , flags ;"	1318:1:42708:42729	1046348	0	True				
ANR	1046352	IdentifierDecl	dst_r		1046348	0					
ANR	1046353	IdentifierDeclType	sljit_si		1046348	0					
ANR	1046354	Identifier	dst_r		1046348	1					
ANR	1046355	IdentifierDecl	flags		1046348	1					
ANR	1046356	IdentifierDeclType	sljit_si		1046348	0					
ANR	1046357	Identifier	flags		1046348	1					
ANR	1046358	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1319:1:42732:42769	1046348	1	True				
ANR	1046359	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1046348	0					
ANR	1046360	IdentifierDeclType	sljit_si		1046348	0					
ANR	1046361	Identifier	op_flags		1046348	1					
ANR	1046362	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1046348	2		=			
ANR	1046363	Identifier	op_flags		1046348	0					
ANR	1046364	CallExpression	GET_ALL_FLAGS ( op )		1046348	1					
ANR	1046365	Callee	GET_ALL_FLAGS		1046348	0					
ANR	1046366	Identifier	GET_ALL_FLAGS		1046348	0					
ANR	1046367	ArgumentList	op		1046348	1					
ANR	1046368	Argument	op		1046348	0					
ANR	1046369	Identifier	op		1046348	0					
ANR	1046370	ExpressionStatement	CHECK_ERROR ( )	1321:1:42773:42786	1046348	2	True				
ANR	1046371	CallExpression	CHECK_ERROR ( )		1046348	0					
ANR	1046372	Callee	CHECK_ERROR		1046348	0					
ANR	1046373	Identifier	CHECK_ERROR		1046348	0					
ANR	1046374	ArgumentList			1046348	1					
ANR	1046375	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1322:1:42789:42852	1046348	3	True				
ANR	1046376	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1046348	0					
ANR	1046377	Callee	CHECK		1046348	0					
ANR	1046378	Identifier	CHECK		1046348	0					
ANR	1046379	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1046348	1					
ANR	1046380	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1046348	0					
ANR	1046381	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1046348	0					
ANR	1046382	Callee	check_sljit_emit_op1		1046348	0					
ANR	1046383	Identifier	check_sljit_emit_op1		1046348	0					
ANR	1046384	ArgumentList	compiler		1046348	1					
ANR	1046385	Argument	compiler		1046348	0					
ANR	1046386	Identifier	compiler		1046348	0					
ANR	1046387	Argument	op		1046348	1					
ANR	1046388	Identifier	op		1046348	0					
ANR	1046389	Argument	dst		1046348	2					
ANR	1046390	Identifier	dst		1046348	0					
ANR	1046391	Argument	dstw		1046348	3					
ANR	1046392	Identifier	dstw		1046348	0					
ANR	1046393	Argument	src		1046348	4					
ANR	1046394	Identifier	src		1046348	0					
ANR	1046395	Argument	srcw		1046348	5					
ANR	1046396	Identifier	srcw		1046348	0					
ANR	1046397	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1323:1:42855:42885	1046348	4	True				
ANR	1046398	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1046348	0					
ANR	1046399	Callee	ADJUST_LOCAL_OFFSET		1046348	0					
ANR	1046400	Identifier	ADJUST_LOCAL_OFFSET		1046348	0					
ANR	1046401	ArgumentList	dst		1046348	1					
ANR	1046402	Argument	dst		1046348	0					
ANR	1046403	Identifier	dst		1046348	0					
ANR	1046404	Argument	dstw		1046348	1					
ANR	1046405	Identifier	dstw		1046348	0					
ANR	1046406	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1324:1:42888:42918	1046348	5	True				
ANR	1046407	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1046348	0					
ANR	1046408	Callee	ADJUST_LOCAL_OFFSET		1046348	0					
ANR	1046409	Identifier	ADJUST_LOCAL_OFFSET		1046348	0					
ANR	1046410	ArgumentList	src		1046348	1					
ANR	1046411	Argument	src		1046348	0					
ANR	1046412	Identifier	src		1046348	0					
ANR	1046413	Argument	srcw		1046348	1					
ANR	1046414	Identifier	srcw		1046348	0					
ANR	1046415	ExpressionStatement	compiler -> cache_arg = 0	1326:1:42922:42945	1046348	6	True				
ANR	1046416	AssignmentExpression	compiler -> cache_arg = 0		1046348	0		=			
ANR	1046417	PtrMemberAccess	compiler -> cache_arg		1046348	0					
ANR	1046418	Identifier	compiler		1046348	0					
ANR	1046419	Identifier	cache_arg		1046348	1					
ANR	1046420	PrimaryExpression	0		1046348	1					
ANR	1046421	ExpressionStatement	compiler -> cache_argw = 0	1327:1:42948:42972	1046348	7	True				
ANR	1046422	AssignmentExpression	compiler -> cache_argw = 0		1046348	0		=			
ANR	1046423	PtrMemberAccess	compiler -> cache_argw		1046348	0					
ANR	1046424	Identifier	compiler		1046348	0					
ANR	1046425	Identifier	cache_argw		1046348	1					
ANR	1046426	PrimaryExpression	0		1046348	1					
ANR	1046427	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1329:1:42976:43017	1046348	8	True				
ANR	1046428	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1046348	0		=			
ANR	1046429	Identifier	dst_r		1046348	0					
ANR	1046430	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1046348	1					
ANR	1046431	Condition	SLOW_IS_REG ( dst )		1046348	0					
ANR	1046432	CallExpression	SLOW_IS_REG ( dst )		1046348	0					
ANR	1046433	Callee	SLOW_IS_REG		1046348	0					
ANR	1046434	Identifier	SLOW_IS_REG		1046348	0					
ANR	1046435	ArgumentList	dst		1046348	1					
ANR	1046436	Argument	dst		1046348	0					
ANR	1046437	Identifier	dst		1046348	0					
ANR	1046438	Identifier	dst		1046348	1					
ANR	1046439	Identifier	TMP_REG1		1046348	2					
ANR	1046440	ExpressionStatement	op = GET_OPCODE ( op )	1331:1:43021:43040	1046348	9	True				
ANR	1046441	AssignmentExpression	op = GET_OPCODE ( op )		1046348	0		=			
ANR	1046442	Identifier	op		1046348	0					
ANR	1046443	CallExpression	GET_OPCODE ( op )		1046348	1					
ANR	1046444	Callee	GET_OPCODE		1046348	0					
ANR	1046445	Identifier	GET_OPCODE		1046348	0					
ANR	1046446	ArgumentList	op		1046348	1					
ANR	1046447	Argument	op		1046348	0					
ANR	1046448	Identifier	op		1046348	0					
ANR	1046449	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_P )		1046348	10					
ANR	1046450	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_P	1332:5:43047:43083	1046348	0	True				
ANR	1046451	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_P		1046348	0		&&			
ANR	1046452	RelationalExpression	op >= SLJIT_MOV		1046348	0		>=			
ANR	1046453	Identifier	op		1046348	0					
ANR	1046454	Identifier	SLJIT_MOV		1046348	1					
ANR	1046455	RelationalExpression	op <= SLJIT_MOVU_P		1046348	1		<=			
ANR	1046456	Identifier	op		1046348	0					
ANR	1046457	Identifier	SLJIT_MOVU_P		1046348	1					
ANR	1046458	CompoundStatement		16:44:380:380	1046348	1					
ANR	1046459	SwitchStatement	switch ( op )		1046348	0					
ANR	1046460	Condition	op	1333:10:43098:43099	1046348	0	True				
ANR	1046461	Identifier	op		1046348	0					
ANR	1046462	CompoundStatement		17:14:396:396	1046348	1					
ANR	1046463	Label	case SLJIT_MOV :	1334:2:43106:43120	1046348	0	True				
ANR	1046464	Identifier	SLJIT_MOV		1046348	0					
ANR	1046465	Label	case SLJIT_MOV_UI :	1335:2:43124:43141	1046348	1	True				
ANR	1046466	Identifier	SLJIT_MOV_UI		1046348	0					
ANR	1046467	Label	case SLJIT_MOV_SI :	1336:2:43145:43162	1046348	2	True				
ANR	1046468	Identifier	SLJIT_MOV_SI		1046348	0					
ANR	1046469	Label	case SLJIT_MOV_P :	1337:2:43166:43182	1046348	3	True				
ANR	1046470	Identifier	SLJIT_MOV_P		1046348	0					
ANR	1046471	ExpressionStatement	flags = WORD_SIZE	1338:3:43187:43204	1046348	4	True				
ANR	1046472	AssignmentExpression	flags = WORD_SIZE		1046348	0		=			
ANR	1046473	Identifier	flags		1046348	0					
ANR	1046474	Identifier	WORD_SIZE		1046348	1					
ANR	1046475	BreakStatement	break ;	1339:3:43209:43214	1046348	5	True				
ANR	1046476	Label	case SLJIT_MOV_UB :	1340:2:43218:43235	1046348	6	True				
ANR	1046477	Identifier	SLJIT_MOV_UB		1046348	0					
ANR	1046478	ExpressionStatement	flags = BYTE_SIZE	1341:3:43240:43257	1046348	7	True				
ANR	1046479	AssignmentExpression	flags = BYTE_SIZE		1046348	0		=			
ANR	1046480	Identifier	flags		1046348	0					
ANR	1046481	Identifier	BYTE_SIZE		1046348	1					
ANR	1046482	IfStatement	if ( src & SLJIT_IMM )		1046348	8					
ANR	1046483	Condition	src & SLJIT_IMM	1342:7:43266:43280	1046348	0	True				
ANR	1046484	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046485	Identifier	src		1046348	0					
ANR	1046486	Identifier	SLJIT_IMM		1046348	1					
ANR	1046487	ExpressionStatement	srcw = ( sljit_ub ) srcw	1343:4:43287:43308	1046348	1	True				
ANR	1046488	AssignmentExpression	srcw = ( sljit_ub ) srcw		1046348	0		=			
ANR	1046489	Identifier	srcw		1046348	0					
ANR	1046490	CastExpression	( sljit_ub ) srcw		1046348	1					
ANR	1046491	CastTarget	sljit_ub		1046348	0					
ANR	1046492	Identifier	srcw		1046348	1					
ANR	1046493	BreakStatement	break ;	1344:3:43313:43318	1046348	9	True				
ANR	1046494	Label	case SLJIT_MOV_SB :	1345:2:43322:43339	1046348	10	True				
ANR	1046495	Identifier	SLJIT_MOV_SB		1046348	0					
ANR	1046496	ExpressionStatement	flags = BYTE_SIZE | SIGNED	1346:3:43344:43370	1046348	11	True				
ANR	1046497	AssignmentExpression	flags = BYTE_SIZE | SIGNED		1046348	0		=			
ANR	1046498	Identifier	flags		1046348	0					
ANR	1046499	InclusiveOrExpression	BYTE_SIZE | SIGNED		1046348	1		|			
ANR	1046500	Identifier	BYTE_SIZE		1046348	0					
ANR	1046501	Identifier	SIGNED		1046348	1					
ANR	1046502	IfStatement	if ( src & SLJIT_IMM )		1046348	12					
ANR	1046503	Condition	src & SLJIT_IMM	1347:7:43379:43393	1046348	0	True				
ANR	1046504	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046505	Identifier	src		1046348	0					
ANR	1046506	Identifier	SLJIT_IMM		1046348	1					
ANR	1046507	ExpressionStatement	srcw = ( sljit_sb ) srcw	1348:4:43400:43421	1046348	1	True				
ANR	1046508	AssignmentExpression	srcw = ( sljit_sb ) srcw		1046348	0		=			
ANR	1046509	Identifier	srcw		1046348	0					
ANR	1046510	CastExpression	( sljit_sb ) srcw		1046348	1					
ANR	1046511	CastTarget	sljit_sb		1046348	0					
ANR	1046512	Identifier	srcw		1046348	1					
ANR	1046513	BreakStatement	break ;	1349:3:43426:43431	1046348	13	True				
ANR	1046514	Label	case SLJIT_MOV_UH :	1350:2:43435:43452	1046348	14	True				
ANR	1046515	Identifier	SLJIT_MOV_UH		1046348	0					
ANR	1046516	ExpressionStatement	flags = HALF_SIZE	1351:3:43457:43474	1046348	15	True				
ANR	1046517	AssignmentExpression	flags = HALF_SIZE		1046348	0		=			
ANR	1046518	Identifier	flags		1046348	0					
ANR	1046519	Identifier	HALF_SIZE		1046348	1					
ANR	1046520	IfStatement	if ( src & SLJIT_IMM )		1046348	16					
ANR	1046521	Condition	src & SLJIT_IMM	1352:7:43483:43497	1046348	0	True				
ANR	1046522	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046523	Identifier	src		1046348	0					
ANR	1046524	Identifier	SLJIT_IMM		1046348	1					
ANR	1046525	ExpressionStatement	srcw = ( sljit_uh ) srcw	1353:4:43504:43525	1046348	1	True				
ANR	1046526	AssignmentExpression	srcw = ( sljit_uh ) srcw		1046348	0		=			
ANR	1046527	Identifier	srcw		1046348	0					
ANR	1046528	CastExpression	( sljit_uh ) srcw		1046348	1					
ANR	1046529	CastTarget	sljit_uh		1046348	0					
ANR	1046530	Identifier	srcw		1046348	1					
ANR	1046531	BreakStatement	break ;	1354:3:43530:43535	1046348	17	True				
ANR	1046532	Label	case SLJIT_MOV_SH :	1355:2:43539:43556	1046348	18	True				
ANR	1046533	Identifier	SLJIT_MOV_SH		1046348	0					
ANR	1046534	ExpressionStatement	flags = HALF_SIZE | SIGNED	1356:3:43561:43587	1046348	19	True				
ANR	1046535	AssignmentExpression	flags = HALF_SIZE | SIGNED		1046348	0		=			
ANR	1046536	Identifier	flags		1046348	0					
ANR	1046537	InclusiveOrExpression	HALF_SIZE | SIGNED		1046348	1		|			
ANR	1046538	Identifier	HALF_SIZE		1046348	0					
ANR	1046539	Identifier	SIGNED		1046348	1					
ANR	1046540	IfStatement	if ( src & SLJIT_IMM )		1046348	20					
ANR	1046541	Condition	src & SLJIT_IMM	1357:7:43596:43610	1046348	0	True				
ANR	1046542	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046543	Identifier	src		1046348	0					
ANR	1046544	Identifier	SLJIT_IMM		1046348	1					
ANR	1046545	ExpressionStatement	srcw = ( sljit_sh ) srcw	1358:4:43617:43638	1046348	1	True				
ANR	1046546	AssignmentExpression	srcw = ( sljit_sh ) srcw		1046348	0		=			
ANR	1046547	Identifier	srcw		1046348	0					
ANR	1046548	CastExpression	( sljit_sh ) srcw		1046348	1					
ANR	1046549	CastTarget	sljit_sh		1046348	0					
ANR	1046550	Identifier	srcw		1046348	1					
ANR	1046551	BreakStatement	break ;	1359:3:43643:43648	1046348	21	True				
ANR	1046552	Label	case SLJIT_MOVU :	1360:2:43652:43667	1046348	22	True				
ANR	1046553	Identifier	SLJIT_MOVU		1046348	0					
ANR	1046554	Label	case SLJIT_MOVU_UI :	1361:2:43671:43689	1046348	23	True				
ANR	1046555	Identifier	SLJIT_MOVU_UI		1046348	0					
ANR	1046556	Label	case SLJIT_MOVU_SI :	1362:2:43693:43711	1046348	24	True				
ANR	1046557	Identifier	SLJIT_MOVU_SI		1046348	0					
ANR	1046558	Label	case SLJIT_MOVU_P :	1363:2:43715:43732	1046348	25	True				
ANR	1046559	Identifier	SLJIT_MOVU_P		1046348	0					
ANR	1046560	ExpressionStatement	flags = WORD_SIZE | UPDATE	1364:3:43737:43763	1046348	26	True				
ANR	1046561	AssignmentExpression	flags = WORD_SIZE | UPDATE		1046348	0		=			
ANR	1046562	Identifier	flags		1046348	0					
ANR	1046563	InclusiveOrExpression	WORD_SIZE | UPDATE		1046348	1		|			
ANR	1046564	Identifier	WORD_SIZE		1046348	0					
ANR	1046565	Identifier	UPDATE		1046348	1					
ANR	1046566	BreakStatement	break ;	1365:3:43768:43773	1046348	27	True				
ANR	1046567	Label	case SLJIT_MOVU_UB :	1366:2:43777:43795	1046348	28	True				
ANR	1046568	Identifier	SLJIT_MOVU_UB		1046348	0					
ANR	1046569	ExpressionStatement	flags = BYTE_SIZE | UPDATE	1367:3:43800:43826	1046348	29	True				
ANR	1046570	AssignmentExpression	flags = BYTE_SIZE | UPDATE		1046348	0		=			
ANR	1046571	Identifier	flags		1046348	0					
ANR	1046572	InclusiveOrExpression	BYTE_SIZE | UPDATE		1046348	1		|			
ANR	1046573	Identifier	BYTE_SIZE		1046348	0					
ANR	1046574	Identifier	UPDATE		1046348	1					
ANR	1046575	IfStatement	if ( src & SLJIT_IMM )		1046348	30					
ANR	1046576	Condition	src & SLJIT_IMM	1368:7:43835:43849	1046348	0	True				
ANR	1046577	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046578	Identifier	src		1046348	0					
ANR	1046579	Identifier	SLJIT_IMM		1046348	1					
ANR	1046580	ExpressionStatement	srcw = ( sljit_ub ) srcw	1369:4:43856:43877	1046348	1	True				
ANR	1046581	AssignmentExpression	srcw = ( sljit_ub ) srcw		1046348	0		=			
ANR	1046582	Identifier	srcw		1046348	0					
ANR	1046583	CastExpression	( sljit_ub ) srcw		1046348	1					
ANR	1046584	CastTarget	sljit_ub		1046348	0					
ANR	1046585	Identifier	srcw		1046348	1					
ANR	1046586	BreakStatement	break ;	1370:3:43882:43887	1046348	31	True				
ANR	1046587	Label	case SLJIT_MOVU_SB :	1371:2:43891:43909	1046348	32	True				
ANR	1046588	Identifier	SLJIT_MOVU_SB		1046348	0					
ANR	1046589	ExpressionStatement	flags = BYTE_SIZE | SIGNED | UPDATE	1372:3:43914:43949	1046348	33	True				
ANR	1046590	AssignmentExpression	flags = BYTE_SIZE | SIGNED | UPDATE		1046348	0		=			
ANR	1046591	Identifier	flags		1046348	0					
ANR	1046592	InclusiveOrExpression	BYTE_SIZE | SIGNED | UPDATE		1046348	1		|			
ANR	1046593	Identifier	BYTE_SIZE		1046348	0					
ANR	1046594	InclusiveOrExpression	SIGNED | UPDATE		1046348	1		|			
ANR	1046595	Identifier	SIGNED		1046348	0					
ANR	1046596	Identifier	UPDATE		1046348	1					
ANR	1046597	IfStatement	if ( src & SLJIT_IMM )		1046348	34					
ANR	1046598	Condition	src & SLJIT_IMM	1373:7:43958:43972	1046348	0	True				
ANR	1046599	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046600	Identifier	src		1046348	0					
ANR	1046601	Identifier	SLJIT_IMM		1046348	1					
ANR	1046602	ExpressionStatement	srcw = ( sljit_sb ) srcw	1374:4:43979:44000	1046348	1	True				
ANR	1046603	AssignmentExpression	srcw = ( sljit_sb ) srcw		1046348	0		=			
ANR	1046604	Identifier	srcw		1046348	0					
ANR	1046605	CastExpression	( sljit_sb ) srcw		1046348	1					
ANR	1046606	CastTarget	sljit_sb		1046348	0					
ANR	1046607	Identifier	srcw		1046348	1					
ANR	1046608	BreakStatement	break ;	1375:3:44005:44010	1046348	35	True				
ANR	1046609	Label	case SLJIT_MOVU_UH :	1376:2:44014:44032	1046348	36	True				
ANR	1046610	Identifier	SLJIT_MOVU_UH		1046348	0					
ANR	1046611	ExpressionStatement	flags = HALF_SIZE | UPDATE	1377:3:44037:44063	1046348	37	True				
ANR	1046612	AssignmentExpression	flags = HALF_SIZE | UPDATE		1046348	0		=			
ANR	1046613	Identifier	flags		1046348	0					
ANR	1046614	InclusiveOrExpression	HALF_SIZE | UPDATE		1046348	1		|			
ANR	1046615	Identifier	HALF_SIZE		1046348	0					
ANR	1046616	Identifier	UPDATE		1046348	1					
ANR	1046617	IfStatement	if ( src & SLJIT_IMM )		1046348	38					
ANR	1046618	Condition	src & SLJIT_IMM	1378:7:44072:44086	1046348	0	True				
ANR	1046619	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046620	Identifier	src		1046348	0					
ANR	1046621	Identifier	SLJIT_IMM		1046348	1					
ANR	1046622	ExpressionStatement	srcw = ( sljit_uh ) srcw	1379:4:44093:44114	1046348	1	True				
ANR	1046623	AssignmentExpression	srcw = ( sljit_uh ) srcw		1046348	0		=			
ANR	1046624	Identifier	srcw		1046348	0					
ANR	1046625	CastExpression	( sljit_uh ) srcw		1046348	1					
ANR	1046626	CastTarget	sljit_uh		1046348	0					
ANR	1046627	Identifier	srcw		1046348	1					
ANR	1046628	BreakStatement	break ;	1380:3:44119:44124	1046348	39	True				
ANR	1046629	Label	case SLJIT_MOVU_SH :	1381:2:44128:44146	1046348	40	True				
ANR	1046630	Identifier	SLJIT_MOVU_SH		1046348	0					
ANR	1046631	ExpressionStatement	flags = HALF_SIZE | SIGNED | UPDATE	1382:3:44151:44186	1046348	41	True				
ANR	1046632	AssignmentExpression	flags = HALF_SIZE | SIGNED | UPDATE		1046348	0		=			
ANR	1046633	Identifier	flags		1046348	0					
ANR	1046634	InclusiveOrExpression	HALF_SIZE | SIGNED | UPDATE		1046348	1		|			
ANR	1046635	Identifier	HALF_SIZE		1046348	0					
ANR	1046636	InclusiveOrExpression	SIGNED | UPDATE		1046348	1		|			
ANR	1046637	Identifier	SIGNED		1046348	0					
ANR	1046638	Identifier	UPDATE		1046348	1					
ANR	1046639	IfStatement	if ( src & SLJIT_IMM )		1046348	42					
ANR	1046640	Condition	src & SLJIT_IMM	1383:7:44195:44209	1046348	0	True				
ANR	1046641	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046642	Identifier	src		1046348	0					
ANR	1046643	Identifier	SLJIT_IMM		1046348	1					
ANR	1046644	ExpressionStatement	srcw = ( sljit_sh ) srcw	1384:4:44216:44237	1046348	1	True				
ANR	1046645	AssignmentExpression	srcw = ( sljit_sh ) srcw		1046348	0		=			
ANR	1046646	Identifier	srcw		1046348	0					
ANR	1046647	CastExpression	( sljit_sh ) srcw		1046348	1					
ANR	1046648	CastTarget	sljit_sh		1046348	0					
ANR	1046649	Identifier	srcw		1046348	1					
ANR	1046650	BreakStatement	break ;	1385:3:44242:44247	1046348	43	True				
ANR	1046651	Label	default :	1386:2:44251:44258	1046348	44	True				
ANR	1046652	Identifier	default		1046348	0					
ANR	1046653	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1387:3:44263:44282	1046348	45	True				
ANR	1046654	CallExpression	SLJIT_ASSERT_STOP ( )		1046348	0					
ANR	1046655	Callee	SLJIT_ASSERT_STOP		1046348	0					
ANR	1046656	Identifier	SLJIT_ASSERT_STOP		1046348	0					
ANR	1046657	ArgumentList			1046348	1					
ANR	1046658	ExpressionStatement	flags = 0	1388:3:44287:44296	1046348	46	True				
ANR	1046659	AssignmentExpression	flags = 0		1046348	0		=			
ANR	1046660	Identifier	flags		1046348	0					
ANR	1046661	PrimaryExpression	0		1046348	1					
ANR	1046662	BreakStatement	break ;	1389:3:44301:44306	1046348	47	True				
ANR	1046663	IfStatement	if ( src & SLJIT_IMM )		1046348	1					
ANR	1046664	Condition	src & SLJIT_IMM	1392:6:44319:44333	1046348	0	True				
ANR	1046665	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046666	Identifier	src		1046348	0					
ANR	1046667	Identifier	SLJIT_IMM		1046348	1					
ANR	1046668	ExpressionStatement	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"	1393:3:44339:44414	1046348	1	True				
ANR	1046669	CallExpression	"FAIL_IF ( emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw ) )"		1046348	0					
ANR	1046670	Callee	FAIL_IF		1046348	0					
ANR	1046671	Identifier	FAIL_IF		1046348	0					
ANR	1046672	ArgumentList	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1046348	1					
ANR	1046673	Argument	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1046348	0					
ANR	1046674	CallExpression	"emit_op_imm ( compiler , SLJIT_MOV | ARG2_IMM , dst_r , TMP_REG1 , srcw )"		1046348	0					
ANR	1046675	Callee	emit_op_imm		1046348	0					
ANR	1046676	Identifier	emit_op_imm		1046348	0					
ANR	1046677	ArgumentList	compiler		1046348	1					
ANR	1046678	Argument	compiler		1046348	0					
ANR	1046679	Identifier	compiler		1046348	0					
ANR	1046680	Argument	SLJIT_MOV | ARG2_IMM		1046348	1					
ANR	1046681	InclusiveOrExpression	SLJIT_MOV | ARG2_IMM		1046348	0		|			
ANR	1046682	Identifier	SLJIT_MOV		1046348	0					
ANR	1046683	Identifier	ARG2_IMM		1046348	1					
ANR	1046684	Argument	dst_r		1046348	2					
ANR	1046685	Identifier	dst_r		1046348	0					
ANR	1046686	Argument	TMP_REG1		1046348	3					
ANR	1046687	Identifier	TMP_REG1		1046348	0					
ANR	1046688	Argument	srcw		1046348	4					
ANR	1046689	Identifier	srcw		1046348	0					
ANR	1046690	ElseStatement	else		1046348	0					
ANR	1046691	IfStatement	if ( src & SLJIT_MEM )		1046348	0					
ANR	1046692	Condition	src & SLJIT_MEM	1394:11:44427:44441	1046348	0	True				
ANR	1046693	BitAndExpression	src & SLJIT_MEM		1046348	0		&			
ANR	1046694	Identifier	src		1046348	0					
ANR	1046695	Identifier	SLJIT_MEM		1046348	1					
ANR	1046696	CompoundStatement		78:28:1738:1738	1046348	1					
ANR	1046697	IfStatement	"if ( getput_arg_fast ( compiler , flags , dst_r , src , srcw ) )"		1046348	0					
ANR	1046698	Condition	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"	1395:7:44453:44502	1046348	0	True				
ANR	1046699	CallExpression	"getput_arg_fast ( compiler , flags , dst_r , src , srcw )"		1046348	0					
ANR	1046700	Callee	getput_arg_fast		1046348	0					
ANR	1046701	Identifier	getput_arg_fast		1046348	0					
ANR	1046702	ArgumentList	compiler		1046348	1					
ANR	1046703	Argument	compiler		1046348	0					
ANR	1046704	Identifier	compiler		1046348	0					
ANR	1046705	Argument	flags		1046348	1					
ANR	1046706	Identifier	flags		1046348	0					
ANR	1046707	Argument	dst_r		1046348	2					
ANR	1046708	Identifier	dst_r		1046348	0					
ANR	1046709	Argument	src		1046348	3					
ANR	1046710	Identifier	src		1046348	0					
ANR	1046711	Argument	srcw		1046348	4					
ANR	1046712	Identifier	srcw		1046348	0					
ANR	1046713	ExpressionStatement	FAIL_IF ( compiler -> error )	1396:4:44509:44533	1046348	1	True				
ANR	1046714	CallExpression	FAIL_IF ( compiler -> error )		1046348	0					
ANR	1046715	Callee	FAIL_IF		1046348	0					
ANR	1046716	Identifier	FAIL_IF		1046348	0					
ANR	1046717	ArgumentList	compiler -> error		1046348	1					
ANR	1046718	Argument	compiler -> error		1046348	0					
ANR	1046719	PtrMemberAccess	compiler -> error		1046348	0					
ANR	1046720	Identifier	compiler		1046348	0					
ANR	1046721	Identifier	error		1046348	1					
ANR	1046722	ElseStatement	else		1046348	0					
ANR	1046723	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"	1398:4:44547:44612	1046348	0	True				
ANR	1046724	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw ) )"		1046348	0					
ANR	1046725	Callee	FAIL_IF		1046348	0					
ANR	1046726	Identifier	FAIL_IF		1046348	0					
ANR	1046727	ArgumentList	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1046348	1					
ANR	1046728	Argument	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1046348	0					
ANR	1046729	CallExpression	"getput_arg ( compiler , flags , dst_r , src , srcw , dst , dstw )"		1046348	0					
ANR	1046730	Callee	getput_arg		1046348	0					
ANR	1046731	Identifier	getput_arg		1046348	0					
ANR	1046732	ArgumentList	compiler		1046348	1					
ANR	1046733	Argument	compiler		1046348	0					
ANR	1046734	Identifier	compiler		1046348	0					
ANR	1046735	Argument	flags		1046348	1					
ANR	1046736	Identifier	flags		1046348	0					
ANR	1046737	Argument	dst_r		1046348	2					
ANR	1046738	Identifier	dst_r		1046348	0					
ANR	1046739	Argument	src		1046348	3					
ANR	1046740	Identifier	src		1046348	0					
ANR	1046741	Argument	srcw		1046348	4					
ANR	1046742	Identifier	srcw		1046348	0					
ANR	1046743	Argument	dst		1046348	5					
ANR	1046744	Identifier	dst		1046348	0					
ANR	1046745	Argument	dstw		1046348	6					
ANR	1046746	Identifier	dstw		1046348	0					
ANR	1046747	ElseStatement	else		1046348	0					
ANR	1046748	CompoundStatement		83:9:1917:1917	1046348	0					
ANR	1046749	IfStatement	if ( dst_r != TMP_REG1 )		1046348	0					
ANR	1046750	Condition	dst_r != TMP_REG1	1400:7:44632:44648	1046348	0	True				
ANR	1046751	EqualityExpression	dst_r != TMP_REG1		1046348	0		!=			
ANR	1046752	Identifier	dst_r		1046348	0					
ANR	1046753	Identifier	TMP_REG1		1046348	1					
ANR	1046754	ReturnStatement	"return emit_op_imm ( compiler , op , dst_r , TMP_REG1 , src ) ;"	1401:4:44655:44709	1046348	1	True				
ANR	1046755	CallExpression	"emit_op_imm ( compiler , op , dst_r , TMP_REG1 , src )"		1046348	0					
ANR	1046756	Callee	emit_op_imm		1046348	0					
ANR	1046757	Identifier	emit_op_imm		1046348	0					
ANR	1046758	ArgumentList	compiler		1046348	1					
ANR	1046759	Argument	compiler		1046348	0					
ANR	1046760	Identifier	compiler		1046348	0					
ANR	1046761	Argument	op		1046348	1					
ANR	1046762	Identifier	op		1046348	0					
ANR	1046763	Argument	dst_r		1046348	2					
ANR	1046764	Identifier	dst_r		1046348	0					
ANR	1046765	Argument	TMP_REG1		1046348	3					
ANR	1046766	Identifier	TMP_REG1		1046348	0					
ANR	1046767	Argument	src		1046348	4					
ANR	1046768	Identifier	src		1046348	0					
ANR	1046769	ExpressionStatement	dst_r = src	1402:3:44714:44725	1046348	1	True				
ANR	1046770	AssignmentExpression	dst_r = src		1046348	0		=			
ANR	1046771	Identifier	dst_r		1046348	0					
ANR	1046772	Identifier	src		1046348	1					
ANR	1046773	IfStatement	if ( dst & SLJIT_MEM )		1046348	2					
ANR	1046774	Condition	dst & SLJIT_MEM	1405:6:44738:44752	1046348	0	True				
ANR	1046775	BitAndExpression	dst & SLJIT_MEM		1046348	0		&			
ANR	1046776	Identifier	dst		1046348	0					
ANR	1046777	Identifier	SLJIT_MEM		1046348	1					
ANR	1046778	CompoundStatement		89:23:2049:2049	1046348	1					
ANR	1046779	IfStatement	"if ( getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw ) )"		1046348	0					
ANR	1046780	Condition	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"	1406:7:44764:44821	1046348	0	True				
ANR	1046781	CallExpression	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"		1046348	0					
ANR	1046782	Callee	getput_arg_fast		1046348	0					
ANR	1046783	Identifier	getput_arg_fast		1046348	0					
ANR	1046784	ArgumentList	compiler		1046348	1					
ANR	1046785	Argument	compiler		1046348	0					
ANR	1046786	Identifier	compiler		1046348	0					
ANR	1046787	Argument	flags | STORE		1046348	1					
ANR	1046788	InclusiveOrExpression	flags | STORE		1046348	0		|			
ANR	1046789	Identifier	flags		1046348	0					
ANR	1046790	Identifier	STORE		1046348	1					
ANR	1046791	Argument	dst_r		1046348	2					
ANR	1046792	Identifier	dst_r		1046348	0					
ANR	1046793	Argument	dst		1046348	3					
ANR	1046794	Identifier	dst		1046348	0					
ANR	1046795	Argument	dstw		1046348	4					
ANR	1046796	Identifier	dstw		1046348	0					
ANR	1046797	ReturnStatement	return compiler -> error ;	1407:4:44828:44850	1046348	1	True				
ANR	1046798	PtrMemberAccess	compiler -> error		1046348	0					
ANR	1046799	Identifier	compiler		1046348	0					
ANR	1046800	Identifier	error		1046348	1					
ANR	1046801	ElseStatement	else		1046348	0					
ANR	1046802	ReturnStatement	"return getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1409:4:44864:44930	1046348	0	True				
ANR	1046803	CallExpression	"getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1046348	0					
ANR	1046804	Callee	getput_arg		1046348	0					
ANR	1046805	Identifier	getput_arg		1046348	0					
ANR	1046806	ArgumentList	compiler		1046348	1					
ANR	1046807	Argument	compiler		1046348	0					
ANR	1046808	Identifier	compiler		1046348	0					
ANR	1046809	Argument	flags | STORE		1046348	1					
ANR	1046810	InclusiveOrExpression	flags | STORE		1046348	0		|			
ANR	1046811	Identifier	flags		1046348	0					
ANR	1046812	Identifier	STORE		1046348	1					
ANR	1046813	Argument	dst_r		1046348	2					
ANR	1046814	Identifier	dst_r		1046348	0					
ANR	1046815	Argument	dst		1046348	3					
ANR	1046816	Identifier	dst		1046348	0					
ANR	1046817	Argument	dstw		1046348	4					
ANR	1046818	Identifier	dstw		1046348	0					
ANR	1046819	Argument	0		1046348	5					
ANR	1046820	PrimaryExpression	0		1046348	0					
ANR	1046821	Argument	0		1046348	6					
ANR	1046822	PrimaryExpression	0		1046348	0					
ANR	1046823	ReturnStatement	return SLJIT_SUCCESS ;	1411:2:44938:44958	1046348	3	True				
ANR	1046824	Identifier	SLJIT_SUCCESS		1046348	0					
ANR	1046825	IfStatement	if ( op == SLJIT_NEG )		1046348	11					
ANR	1046826	Condition	op == SLJIT_NEG	1414:5:44969:44983	1046348	0	True				
ANR	1046827	EqualityExpression	op == SLJIT_NEG		1046348	0		==			
ANR	1046828	Identifier	op		1046348	0					
ANR	1046829	Identifier	SLJIT_NEG		1046348	1					
ANR	1046830	CompoundStatement		98:22:2280:2280	1046348	1					
ANR	1046831	Statement	||	1416:3:45038:45039	1046348	0	True				
ANR	1046832	Statement	(	1416:6:45041:45041	1046348	1	True				
ANR	1046833	Statement	defined	1416:7:45042:45048	1046348	2	True				
ANR	1046834	Statement	SLJIT_ARGUMENT_CHECKS	1416:15:45050:45070	1046348	3	True				
ANR	1046835	Statement	&&	1416:37:45072:45073	1046348	4	True				
ANR	1046836	Statement	SLJIT_ARGUMENT_CHECKS	1416:40:45075:45095	1046348	5	True				
ANR	1046837	Statement	)	1416:61:45096:45096	1046348	6	True				
ANR	1046838	ExpressionStatement	compiler -> skip_checks = 1	1417:2:45100:45125	1046348	7	True				
ANR	1046839	AssignmentExpression	compiler -> skip_checks = 1		1046348	0		=			
ANR	1046840	PtrMemberAccess	compiler -> skip_checks		1046348	0					
ANR	1046841	Identifier	compiler		1046348	0					
ANR	1046842	Identifier	skip_checks		1046348	1					
ANR	1046843	PrimaryExpression	1		1046348	1					
ANR	1046844	ReturnStatement	"return sljit_emit_op2 ( compiler , SLJIT_SUB | op_flags , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	1419:2:45136:45225	1046348	8	True				
ANR	1046845	CallExpression	"sljit_emit_op2 ( compiler , SLJIT_SUB | op_flags , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1046348	0					
ANR	1046846	Callee	sljit_emit_op2		1046348	0					
ANR	1046847	Identifier	sljit_emit_op2		1046348	0					
ANR	1046848	ArgumentList	compiler		1046348	1					
ANR	1046849	Argument	compiler		1046348	0					
ANR	1046850	Identifier	compiler		1046348	0					
ANR	1046851	Argument	SLJIT_SUB | op_flags		1046348	1					
ANR	1046852	InclusiveOrExpression	SLJIT_SUB | op_flags		1046348	0		|			
ANR	1046853	Identifier	SLJIT_SUB		1046348	0					
ANR	1046854	Identifier	op_flags		1046348	1					
ANR	1046855	Argument	dst		1046348	2					
ANR	1046856	Identifier	dst		1046348	0					
ANR	1046857	Argument	dstw		1046348	3					
ANR	1046858	Identifier	dstw		1046348	0					
ANR	1046859	Argument	SLJIT_IMM		1046348	4					
ANR	1046860	Identifier	SLJIT_IMM		1046348	0					
ANR	1046861	Argument	0		1046348	5					
ANR	1046862	PrimaryExpression	0		1046348	0					
ANR	1046863	Argument	src		1046348	6					
ANR	1046864	Identifier	src		1046348	0					
ANR	1046865	Argument	srcw		1046348	7					
ANR	1046866	Identifier	srcw		1046348	0					
ANR	1046867	ExpressionStatement	flags = ( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )	1422:1:45232:45328	1046348	12	True				
ANR	1046868	AssignmentExpression	flags = ( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1046348	0		=			
ANR	1046869	Identifier	flags		1046348	0					
ANR	1046870	InclusiveOrExpression	( GET_FLAGS ( op_flags ) ? SET_FLAGS : 0 ) | ( ( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1046348	1		|			
ANR	1046871	ConditionalExpression	GET_FLAGS ( op_flags ) ? SET_FLAGS : 0		1046348	0					
ANR	1046872	Condition	GET_FLAGS ( op_flags )		1046348	0					
ANR	1046873	CallExpression	GET_FLAGS ( op_flags )		1046348	0					
ANR	1046874	Callee	GET_FLAGS		1046348	0					
ANR	1046875	Identifier	GET_FLAGS		1046348	0					
ANR	1046876	ArgumentList	op_flags		1046348	1					
ANR	1046877	Argument	op_flags		1046348	0					
ANR	1046878	Identifier	op_flags		1046348	0					
ANR	1046879	Identifier	SET_FLAGS		1046348	1					
ANR	1046880	PrimaryExpression	0		1046348	2					
ANR	1046881	ConditionalExpression	( op_flags & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0		1046348	1					
ANR	1046882	Condition	op_flags & SLJIT_KEEP_FLAGS		1046348	0					
ANR	1046883	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1046348	0		&			
ANR	1046884	Identifier	op_flags		1046348	0					
ANR	1046885	Identifier	SLJIT_KEEP_FLAGS		1046348	1					
ANR	1046886	Identifier	KEEP_FLAGS		1046348	1					
ANR	1046887	PrimaryExpression	0		1046348	2					
ANR	1046888	IfStatement	if ( src & SLJIT_MEM )		1046348	13					
ANR	1046889	Condition	src & SLJIT_MEM	1423:5:45335:45349	1046348	0	True				
ANR	1046890	BitAndExpression	src & SLJIT_MEM		1046348	0		&			
ANR	1046891	Identifier	src		1046348	0					
ANR	1046892	Identifier	SLJIT_MEM		1046348	1					
ANR	1046893	CompoundStatement		107:22:2646:2646	1046348	1					
ANR	1046894	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw ) )"		1046348	0					
ANR	1046895	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw )"	1424:6:45360:45416	1046348	0	True				
ANR	1046896	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src , srcw )"		1046348	0					
ANR	1046897	Callee	getput_arg_fast		1046348	0					
ANR	1046898	Identifier	getput_arg_fast		1046348	0					
ANR	1046899	ArgumentList	compiler		1046348	1					
ANR	1046900	Argument	compiler		1046348	0					
ANR	1046901	Identifier	compiler		1046348	0					
ANR	1046902	Argument	WORD_SIZE		1046348	1					
ANR	1046903	Identifier	WORD_SIZE		1046348	0					
ANR	1046904	Argument	TMP_REG2		1046348	2					
ANR	1046905	Identifier	TMP_REG2		1046348	0					
ANR	1046906	Argument	src		1046348	3					
ANR	1046907	Identifier	src		1046348	0					
ANR	1046908	Argument	srcw		1046348	4					
ANR	1046909	Identifier	srcw		1046348	0					
ANR	1046910	ExpressionStatement	FAIL_IF ( compiler -> error )	1425:3:45422:45446	1046348	1	True				
ANR	1046911	CallExpression	FAIL_IF ( compiler -> error )		1046348	0					
ANR	1046912	Callee	FAIL_IF		1046348	0					
ANR	1046913	Identifier	FAIL_IF		1046348	0					
ANR	1046914	ArgumentList	compiler -> error		1046348	1					
ANR	1046915	Argument	compiler -> error		1046348	0					
ANR	1046916	PtrMemberAccess	compiler -> error		1046348	0					
ANR	1046917	Identifier	compiler		1046348	0					
ANR	1046918	Identifier	error		1046348	1					
ANR	1046919	ElseStatement	else		1046348	0					
ANR	1046920	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"	1427:3:45458:45530	1046348	0	True				
ANR	1046921	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"		1046348	0					
ANR	1046922	Callee	FAIL_IF		1046348	0					
ANR	1046923	Identifier	FAIL_IF		1046348	0					
ANR	1046924	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1046348	1					
ANR	1046925	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1046348	0					
ANR	1046926	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1046348	0					
ANR	1046927	Callee	getput_arg		1046348	0					
ANR	1046928	Identifier	getput_arg		1046348	0					
ANR	1046929	ArgumentList	compiler		1046348	1					
ANR	1046930	Argument	compiler		1046348	0					
ANR	1046931	Identifier	compiler		1046348	0					
ANR	1046932	Argument	WORD_SIZE		1046348	1					
ANR	1046933	Identifier	WORD_SIZE		1046348	0					
ANR	1046934	Argument	TMP_REG2		1046348	2					
ANR	1046935	Identifier	TMP_REG2		1046348	0					
ANR	1046936	Argument	src		1046348	3					
ANR	1046937	Identifier	src		1046348	0					
ANR	1046938	Argument	srcw		1046348	4					
ANR	1046939	Identifier	srcw		1046348	0					
ANR	1046940	Argument	dst		1046348	5					
ANR	1046941	Identifier	dst		1046348	0					
ANR	1046942	Argument	dstw		1046348	6					
ANR	1046943	Identifier	dstw		1046348	0					
ANR	1046944	ExpressionStatement	src = TMP_REG2	1428:2:45534:45548	1046348	1	True				
ANR	1046945	AssignmentExpression	src = TMP_REG2		1046348	0		=			
ANR	1046946	Identifier	src		1046348	0					
ANR	1046947	Identifier	TMP_REG2		1046348	1					
ANR	1046948	IfStatement	if ( src & SLJIT_IMM )		1046348	14					
ANR	1046949	Condition	src & SLJIT_IMM	1431:5:45559:45573	1046348	0	True				
ANR	1046950	BitAndExpression	src & SLJIT_IMM		1046348	0		&			
ANR	1046951	Identifier	src		1046348	0					
ANR	1046952	Identifier	SLJIT_IMM		1046348	1					
ANR	1046953	ExpressionStatement	flags |= ARG2_IMM	1432:2:45578:45595	1046348	1	True				
ANR	1046954	AssignmentExpression	flags |= ARG2_IMM		1046348	0		|=			
ANR	1046955	Identifier	flags		1046348	0					
ANR	1046956	Identifier	ARG2_IMM		1046348	1					
ANR	1046957	ElseStatement	else		1046348	0					
ANR	1046958	ExpressionStatement	srcw = src	1434:2:45605:45615	1046348	0	True				
ANR	1046959	AssignmentExpression	srcw = src		1046348	0		=			
ANR	1046960	Identifier	srcw		1046348	0					
ANR	1046961	Identifier	src		1046348	1					
ANR	1046962	ExpressionStatement	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"	1436:1:45619:45675	1046348	15	True				
ANR	1046963	CallExpression	"emit_op_imm ( compiler , flags | op , dst_r , TMP_REG1 , srcw )"		1046348	0					
ANR	1046964	Callee	emit_op_imm		1046348	0					
ANR	1046965	Identifier	emit_op_imm		1046348	0					
ANR	1046966	ArgumentList	compiler		1046348	1					
ANR	1046967	Argument	compiler		1046348	0					
ANR	1046968	Identifier	compiler		1046348	0					
ANR	1046969	Argument	flags | op		1046348	1					
ANR	1046970	InclusiveOrExpression	flags | op		1046348	0		|			
ANR	1046971	Identifier	flags		1046348	0					
ANR	1046972	Identifier	op		1046348	1					
ANR	1046973	Argument	dst_r		1046348	2					
ANR	1046974	Identifier	dst_r		1046348	0					
ANR	1046975	Argument	TMP_REG1		1046348	3					
ANR	1046976	Identifier	TMP_REG1		1046348	0					
ANR	1046977	Argument	srcw		1046348	4					
ANR	1046978	Identifier	srcw		1046348	0					
ANR	1046979	IfStatement	if ( dst & SLJIT_MEM )		1046348	16					
ANR	1046980	Condition	dst & SLJIT_MEM	1438:5:45683:45697	1046348	0	True				
ANR	1046981	BitAndExpression	dst & SLJIT_MEM		1046348	0		&			
ANR	1046982	Identifier	dst		1046348	0					
ANR	1046983	Identifier	SLJIT_MEM		1046348	1					
ANR	1046984	CompoundStatement		122:22:2994:2994	1046348	1					
ANR	1046985	IfStatement	"if ( getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw ) )"		1046348	0					
ANR	1046986	Condition	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"	1439:6:45708:45765	1046348	0	True				
ANR	1046987	CallExpression	"getput_arg_fast ( compiler , flags | STORE , dst_r , dst , dstw )"		1046348	0					
ANR	1046988	Callee	getput_arg_fast		1046348	0					
ANR	1046989	Identifier	getput_arg_fast		1046348	0					
ANR	1046990	ArgumentList	compiler		1046348	1					
ANR	1046991	Argument	compiler		1046348	0					
ANR	1046992	Identifier	compiler		1046348	0					
ANR	1046993	Argument	flags | STORE		1046348	1					
ANR	1046994	InclusiveOrExpression	flags | STORE		1046348	0		|			
ANR	1046995	Identifier	flags		1046348	0					
ANR	1046996	Identifier	STORE		1046348	1					
ANR	1046997	Argument	dst_r		1046348	2					
ANR	1046998	Identifier	dst_r		1046348	0					
ANR	1046999	Argument	dst		1046348	3					
ANR	1047000	Identifier	dst		1046348	0					
ANR	1047001	Argument	dstw		1046348	4					
ANR	1047002	Identifier	dstw		1046348	0					
ANR	1047003	ReturnStatement	return compiler -> error ;	1440:3:45771:45793	1046348	1	True				
ANR	1047004	PtrMemberAccess	compiler -> error		1046348	0					
ANR	1047005	Identifier	compiler		1046348	0					
ANR	1047006	Identifier	error		1046348	1					
ANR	1047007	ElseStatement	else		1046348	0					
ANR	1047008	ReturnStatement	"return getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 ) ;"	1442:3:45805:45871	1046348	0	True				
ANR	1047009	CallExpression	"getput_arg ( compiler , flags | STORE , dst_r , dst , dstw , 0 , 0 )"		1046348	0					
ANR	1047010	Callee	getput_arg		1046348	0					
ANR	1047011	Identifier	getput_arg		1046348	0					
ANR	1047012	ArgumentList	compiler		1046348	1					
ANR	1047013	Argument	compiler		1046348	0					
ANR	1047014	Identifier	compiler		1046348	0					
ANR	1047015	Argument	flags | STORE		1046348	1					
ANR	1047016	InclusiveOrExpression	flags | STORE		1046348	0		|			
ANR	1047017	Identifier	flags		1046348	0					
ANR	1047018	Identifier	STORE		1046348	1					
ANR	1047019	Argument	dst_r		1046348	2					
ANR	1047020	Identifier	dst_r		1046348	0					
ANR	1047021	Argument	dst		1046348	3					
ANR	1047022	Identifier	dst		1046348	0					
ANR	1047023	Argument	dstw		1046348	4					
ANR	1047024	Identifier	dstw		1046348	0					
ANR	1047025	Argument	0		1046348	5					
ANR	1047026	PrimaryExpression	0		1046348	0					
ANR	1047027	Argument	0		1046348	6					
ANR	1047028	PrimaryExpression	0		1046348	0					
ANR	1047029	ReturnStatement	return SLJIT_SUCCESS ;	1444:1:45877:45897	1046348	17	True				
ANR	1047030	Identifier	SLJIT_SUCCESS		1046348	0					
ANR	1047031	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1046348	1					
ANR	1047032	Identifier	sljit_emit_op1		1046348	2					
ANR	1047033	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1046348	3					
ANR	1047034	Parameter	struct sljit_compiler * compiler	1314:49:42599:42629	1046348	0	True				
ANR	1047035	ParameterType	struct sljit_compiler *		1046348	0					
ANR	1047036	Identifier	compiler		1046348	1					
ANR	1047037	Parameter	sljit_si op	1314:82:42632:42642	1046348	1	True				
ANR	1047038	ParameterType	sljit_si		1046348	0					
ANR	1047039	Identifier	op		1046348	1					
ANR	1047040	Parameter	sljit_si dst	1315:1:42646:42657	1046348	2	True				
ANR	1047041	ParameterType	sljit_si		1046348	0					
ANR	1047042	Identifier	dst		1046348	1					
ANR	1047043	Parameter	sljit_sw dstw	1315:15:42660:42672	1046348	3	True				
ANR	1047044	ParameterType	sljit_sw		1046348	0					
ANR	1047045	Identifier	dstw		1046348	1					
ANR	1047046	Parameter	sljit_si src	1316:1:42676:42687	1046348	4	True				
ANR	1047047	ParameterType	sljit_si		1046348	0					
ANR	1047048	Identifier	src		1046348	1					
ANR	1047049	Parameter	sljit_sw srcw	1316:15:42690:42702	1046348	5	True				
ANR	1047050	ParameterType	sljit_sw		1046348	0					
ANR	1047051	Identifier	srcw		1046348	1					
ANR	1047052	CFGEntryNode	ENTRY		1046348		True				
ANR	1047053	CFGExitNode	EXIT		1046348		True				
ANR	1047054	Symbol	BYTE_SIZE		1046348						
ANR	1047055	Symbol	TMP_REG2		1046348						
ANR	1047056	Symbol	compiler -> cache_argw		1046348						
ANR	1047057	Symbol	TMP_REG1		1046348						
ANR	1047058	Symbol	sljit_emit_op2		1046348						
ANR	1047059	Symbol	dst		1046348						
ANR	1047060	Symbol	SLJIT_MOV		1046348						
ANR	1047061	Symbol	SLJIT_MEM		1046348						
ANR	1047062	Symbol	flags		1046348						
ANR	1047063	Symbol	SLOW_IS_REG		1046348						
ANR	1047064	Symbol	* compiler		1046348						
ANR	1047065	Symbol	dst_r		1046348						
ANR	1047066	Symbol	GET_OPCODE		1046348						
ANR	1047067	Symbol	GET_FLAGS		1046348						
ANR	1047068	Symbol	GET_ALL_FLAGS		1046348						
ANR	1047069	Symbol	SLJIT_IMM		1046348						
ANR	1047070	Symbol	SIGNED		1046348						
ANR	1047071	Symbol	getput_arg		1046348						
ANR	1047072	Symbol	SLJIT_KEEP_FLAGS		1046348						
ANR	1047073	Symbol	HALF_SIZE		1046348						
ANR	1047074	Symbol	SLJIT_NEG		1046348						
ANR	1047075	Symbol	KEEP_FLAGS		1046348						
ANR	1047076	Symbol	UPDATE		1046348						
ANR	1047077	Symbol	compiler		1046348						
ANR	1047078	Symbol	emit_op_imm		1046348						
ANR	1047079	Symbol	SLJIT_MOVU_P		1046348						
ANR	1047080	Symbol	op		1046348						
ANR	1047081	Symbol	op_flags		1046348						
ANR	1047082	Symbol	src		1046348						
ANR	1047083	Symbol	check_sljit_emit_op1		1046348						
ANR	1047084	Symbol	srcw		1046348						
ANR	1047085	Symbol	compiler -> cache_arg		1046348						
ANR	1047086	Symbol	ARG2_IMM		1046348						
ANR	1047087	Symbol	SLJIT_SUB		1046348						
ANR	1047088	Symbol	SLJIT_SUCCESS		1046348						
ANR	1047089	Symbol	SET_FLAGS		1046348						
ANR	1047090	Symbol	STORE		1046348						
ANR	1047091	Symbol	compiler -> skip_checks		1046348						
ANR	1047092	Symbol	getput_arg_fast		1046348						
ANR	1047093	Symbol	dstw		1046348						
ANR	1047094	Symbol	compiler -> error		1046348						
ANR	1047095	Symbol	WORD_SIZE		1046348						
ANR	1047096	Function	sljit_emit_op2	1447:0:45902:48245							
ANR	1047097	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1047096	0					
ANR	1047098	CompoundStatement		1451:0:46091:48245	1047096	0					
ANR	1047099	IdentifierDeclStatement	"sljit_si dst_r , flags ;"	1452:1:46094:46115	1047096	0	True				
ANR	1047100	IdentifierDecl	dst_r		1047096	0					
ANR	1047101	IdentifierDeclType	sljit_si		1047096	0					
ANR	1047102	Identifier	dst_r		1047096	1					
ANR	1047103	IdentifierDecl	flags		1047096	1					
ANR	1047104	IdentifierDeclType	sljit_si		1047096	0					
ANR	1047105	Identifier	flags		1047096	1					
ANR	1047106	ExpressionStatement	CHECK_ERROR ( )	1454:1:46119:46132	1047096	1	True				
ANR	1047107	CallExpression	CHECK_ERROR ( )		1047096	0					
ANR	1047108	Callee	CHECK_ERROR		1047096	0					
ANR	1047109	Identifier	CHECK_ERROR		1047096	0					
ANR	1047110	ArgumentList			1047096	1					
ANR	1047111	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1455:1:46135:46213	1047096	2	True				
ANR	1047112	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1047096	0					
ANR	1047113	Callee	CHECK		1047096	0					
ANR	1047114	Identifier	CHECK		1047096	0					
ANR	1047115	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1047096	1					
ANR	1047116	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1047096	0					
ANR	1047117	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1047096	0					
ANR	1047118	Callee	check_sljit_emit_op2		1047096	0					
ANR	1047119	Identifier	check_sljit_emit_op2		1047096	0					
ANR	1047120	ArgumentList	compiler		1047096	1					
ANR	1047121	Argument	compiler		1047096	0					
ANR	1047122	Identifier	compiler		1047096	0					
ANR	1047123	Argument	op		1047096	1					
ANR	1047124	Identifier	op		1047096	0					
ANR	1047125	Argument	dst		1047096	2					
ANR	1047126	Identifier	dst		1047096	0					
ANR	1047127	Argument	dstw		1047096	3					
ANR	1047128	Identifier	dstw		1047096	0					
ANR	1047129	Argument	src1		1047096	4					
ANR	1047130	Identifier	src1		1047096	0					
ANR	1047131	Argument	src1w		1047096	5					
ANR	1047132	Identifier	src1w		1047096	0					
ANR	1047133	Argument	src2		1047096	6					
ANR	1047134	Identifier	src2		1047096	0					
ANR	1047135	Argument	src2w		1047096	7					
ANR	1047136	Identifier	src2w		1047096	0					
ANR	1047137	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1456:1:46216:46246	1047096	3	True				
ANR	1047138	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1047096	0					
ANR	1047139	Callee	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047140	Identifier	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047141	ArgumentList	dst		1047096	1					
ANR	1047142	Argument	dst		1047096	0					
ANR	1047143	Identifier	dst		1047096	0					
ANR	1047144	Argument	dstw		1047096	1					
ANR	1047145	Identifier	dstw		1047096	0					
ANR	1047146	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1457:1:46249:46281	1047096	4	True				
ANR	1047147	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1047096	0					
ANR	1047148	Callee	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047149	Identifier	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047150	ArgumentList	src1		1047096	1					
ANR	1047151	Argument	src1		1047096	0					
ANR	1047152	Identifier	src1		1047096	0					
ANR	1047153	Argument	src1w		1047096	1					
ANR	1047154	Identifier	src1w		1047096	0					
ANR	1047155	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1458:1:46284:46316	1047096	5	True				
ANR	1047156	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1047096	0					
ANR	1047157	Callee	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047158	Identifier	ADJUST_LOCAL_OFFSET		1047096	0					
ANR	1047159	ArgumentList	src2		1047096	1					
ANR	1047160	Argument	src2		1047096	0					
ANR	1047161	Identifier	src2		1047096	0					
ANR	1047162	Argument	src2w		1047096	1					
ANR	1047163	Identifier	src2w		1047096	0					
ANR	1047164	ExpressionStatement	compiler -> cache_arg = 0	1460:1:46320:46343	1047096	6	True				
ANR	1047165	AssignmentExpression	compiler -> cache_arg = 0		1047096	0		=			
ANR	1047166	PtrMemberAccess	compiler -> cache_arg		1047096	0					
ANR	1047167	Identifier	compiler		1047096	0					
ANR	1047168	Identifier	cache_arg		1047096	1					
ANR	1047169	PrimaryExpression	0		1047096	1					
ANR	1047170	ExpressionStatement	compiler -> cache_argw = 0	1461:1:46346:46370	1047096	7	True				
ANR	1047171	AssignmentExpression	compiler -> cache_argw = 0		1047096	0		=			
ANR	1047172	PtrMemberAccess	compiler -> cache_argw		1047096	0					
ANR	1047173	Identifier	compiler		1047096	0					
ANR	1047174	Identifier	cache_argw		1047096	1					
ANR	1047175	PrimaryExpression	0		1047096	1					
ANR	1047176	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	1463:1:46374:46415	1047096	8	True				
ANR	1047177	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1047096	0		=			
ANR	1047178	Identifier	dst_r		1047096	0					
ANR	1047179	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1047096	1					
ANR	1047180	Condition	SLOW_IS_REG ( dst )		1047096	0					
ANR	1047181	CallExpression	SLOW_IS_REG ( dst )		1047096	0					
ANR	1047182	Callee	SLOW_IS_REG		1047096	0					
ANR	1047183	Identifier	SLOW_IS_REG		1047096	0					
ANR	1047184	ArgumentList	dst		1047096	1					
ANR	1047185	Argument	dst		1047096	0					
ANR	1047186	Identifier	dst		1047096	0					
ANR	1047187	Identifier	dst		1047096	1					
ANR	1047188	Identifier	TMP_REG1		1047096	2					
ANR	1047189	ExpressionStatement	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )	1464:1:46418:46502	1047096	9	True				
ANR	1047190	AssignmentExpression	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1047096	0		=			
ANR	1047191	Identifier	flags		1047096	0					
ANR	1047192	InclusiveOrExpression	( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) | ( ( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0 )		1047096	1		|			
ANR	1047193	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1047096	0					
ANR	1047194	Condition	GET_FLAGS ( op )		1047096	0					
ANR	1047195	CallExpression	GET_FLAGS ( op )		1047096	0					
ANR	1047196	Callee	GET_FLAGS		1047096	0					
ANR	1047197	Identifier	GET_FLAGS		1047096	0					
ANR	1047198	ArgumentList	op		1047096	1					
ANR	1047199	Argument	op		1047096	0					
ANR	1047200	Identifier	op		1047096	0					
ANR	1047201	Identifier	SET_FLAGS		1047096	1					
ANR	1047202	PrimaryExpression	0		1047096	2					
ANR	1047203	ConditionalExpression	( op & SLJIT_KEEP_FLAGS ) ? KEEP_FLAGS : 0		1047096	1					
ANR	1047204	Condition	op & SLJIT_KEEP_FLAGS		1047096	0					
ANR	1047205	BitAndExpression	op & SLJIT_KEEP_FLAGS		1047096	0		&			
ANR	1047206	Identifier	op		1047096	0					
ANR	1047207	Identifier	SLJIT_KEEP_FLAGS		1047096	1					
ANR	1047208	Identifier	KEEP_FLAGS		1047096	1					
ANR	1047209	PrimaryExpression	0		1047096	2					
ANR	1047210	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw ) )"		1047096	10					
ANR	1047211	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"	1466:5:46510:46607	1047096	0	True				
ANR	1047212	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1047096	0		&&			
ANR	1047213	BitAndExpression	dst & SLJIT_MEM		1047096	0		&			
ANR	1047214	Identifier	dst		1047096	0					
ANR	1047215	Identifier	SLJIT_MEM		1047096	1					
ANR	1047216	UnaryOperationExpression	"! getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1047096	1					
ANR	1047217	UnaryOperator	!		1047096	0					
ANR	1047218	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE | ARG_TEST , TMP_REG1 , dst , dstw )"		1047096	1					
ANR	1047219	Callee	getput_arg_fast		1047096	0					
ANR	1047220	Identifier	getput_arg_fast		1047096	0					
ANR	1047221	ArgumentList	compiler		1047096	1					
ANR	1047222	Argument	compiler		1047096	0					
ANR	1047223	Identifier	compiler		1047096	0					
ANR	1047224	Argument	WORD_SIZE | STORE | ARG_TEST		1047096	1					
ANR	1047225	InclusiveOrExpression	WORD_SIZE | STORE | ARG_TEST		1047096	0		|			
ANR	1047226	Identifier	WORD_SIZE		1047096	0					
ANR	1047227	InclusiveOrExpression	STORE | ARG_TEST		1047096	1		|			
ANR	1047228	Identifier	STORE		1047096	0					
ANR	1047229	Identifier	ARG_TEST		1047096	1					
ANR	1047230	Argument	TMP_REG1		1047096	2					
ANR	1047231	Identifier	TMP_REG1		1047096	0					
ANR	1047232	Argument	dst		1047096	3					
ANR	1047233	Identifier	dst		1047096	0					
ANR	1047234	Argument	dstw		1047096	4					
ANR	1047235	Identifier	dstw		1047096	0					
ANR	1047236	ExpressionStatement	flags |= SLOW_DEST	1467:2:46612:46630	1047096	1	True				
ANR	1047237	AssignmentExpression	flags |= SLOW_DEST		1047096	0		|=			
ANR	1047238	Identifier	flags		1047096	0					
ANR	1047239	Identifier	SLOW_DEST		1047096	1					
ANR	1047240	IfStatement	if ( src1 & SLJIT_MEM )		1047096	11					
ANR	1047241	Condition	src1 & SLJIT_MEM	1469:5:46638:46653	1047096	0	True				
ANR	1047242	BitAndExpression	src1 & SLJIT_MEM		1047096	0		&			
ANR	1047243	Identifier	src1		1047096	0					
ANR	1047244	Identifier	SLJIT_MEM		1047096	1					
ANR	1047245	CompoundStatement		19:23:564:564	1047096	1					
ANR	1047246	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w ) )"		1047096	0					
ANR	1047247	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w )"	1470:6:46664:46722	1047096	0	True				
ANR	1047248	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w )"		1047096	0					
ANR	1047249	Callee	getput_arg_fast		1047096	0					
ANR	1047250	Identifier	getput_arg_fast		1047096	0					
ANR	1047251	ArgumentList	compiler		1047096	1					
ANR	1047252	Argument	compiler		1047096	0					
ANR	1047253	Identifier	compiler		1047096	0					
ANR	1047254	Argument	WORD_SIZE		1047096	1					
ANR	1047255	Identifier	WORD_SIZE		1047096	0					
ANR	1047256	Argument	TMP_REG1		1047096	2					
ANR	1047257	Identifier	TMP_REG1		1047096	0					
ANR	1047258	Argument	src1		1047096	3					
ANR	1047259	Identifier	src1		1047096	0					
ANR	1047260	Argument	src1w		1047096	4					
ANR	1047261	Identifier	src1w		1047096	0					
ANR	1047262	ExpressionStatement	FAIL_IF ( compiler -> error )	1471:3:46728:46752	1047096	1	True				
ANR	1047263	CallExpression	FAIL_IF ( compiler -> error )		1047096	0					
ANR	1047264	Callee	FAIL_IF		1047096	0					
ANR	1047265	Identifier	FAIL_IF		1047096	0					
ANR	1047266	ArgumentList	compiler -> error		1047096	1					
ANR	1047267	Argument	compiler -> error		1047096	0					
ANR	1047268	PtrMemberAccess	compiler -> error		1047096	0					
ANR	1047269	Identifier	compiler		1047096	0					
ANR	1047270	Identifier	error		1047096	1					
ANR	1047271	ElseStatement	else		1047096	0					
ANR	1047272	ExpressionStatement	flags |= SLOW_SRC1	1473:3:46764:46782	1047096	0	True				
ANR	1047273	AssignmentExpression	flags |= SLOW_SRC1		1047096	0		|=			
ANR	1047274	Identifier	flags		1047096	0					
ANR	1047275	Identifier	SLOW_SRC1		1047096	1					
ANR	1047276	IfStatement	if ( src2 & SLJIT_MEM )		1047096	12					
ANR	1047277	Condition	src2 & SLJIT_MEM	1475:5:46792:46807	1047096	0	True				
ANR	1047278	BitAndExpression	src2 & SLJIT_MEM		1047096	0		&			
ANR	1047279	Identifier	src2		1047096	0					
ANR	1047280	Identifier	SLJIT_MEM		1047096	1					
ANR	1047281	CompoundStatement		25:23:718:718	1047096	1					
ANR	1047282	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w ) )"		1047096	0					
ANR	1047283	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w )"	1476:6:46818:46876	1047096	0	True				
ANR	1047284	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w )"		1047096	0					
ANR	1047285	Callee	getput_arg_fast		1047096	0					
ANR	1047286	Identifier	getput_arg_fast		1047096	0					
ANR	1047287	ArgumentList	compiler		1047096	1					
ANR	1047288	Argument	compiler		1047096	0					
ANR	1047289	Identifier	compiler		1047096	0					
ANR	1047290	Argument	WORD_SIZE		1047096	1					
ANR	1047291	Identifier	WORD_SIZE		1047096	0					
ANR	1047292	Argument	TMP_REG2		1047096	2					
ANR	1047293	Identifier	TMP_REG2		1047096	0					
ANR	1047294	Argument	src2		1047096	3					
ANR	1047295	Identifier	src2		1047096	0					
ANR	1047296	Argument	src2w		1047096	4					
ANR	1047297	Identifier	src2w		1047096	0					
ANR	1047298	ExpressionStatement	FAIL_IF ( compiler -> error )	1477:3:46882:46906	1047096	1	True				
ANR	1047299	CallExpression	FAIL_IF ( compiler -> error )		1047096	0					
ANR	1047300	Callee	FAIL_IF		1047096	0					
ANR	1047301	Identifier	FAIL_IF		1047096	0					
ANR	1047302	ArgumentList	compiler -> error		1047096	1					
ANR	1047303	Argument	compiler -> error		1047096	0					
ANR	1047304	PtrMemberAccess	compiler -> error		1047096	0					
ANR	1047305	Identifier	compiler		1047096	0					
ANR	1047306	Identifier	error		1047096	1					
ANR	1047307	ElseStatement	else		1047096	0					
ANR	1047308	ExpressionStatement	flags |= SLOW_SRC2	1479:3:46918:46936	1047096	0	True				
ANR	1047309	AssignmentExpression	flags |= SLOW_SRC2		1047096	0		|=			
ANR	1047310	Identifier	flags		1047096	0					
ANR	1047311	Identifier	SLOW_SRC2		1047096	1					
ANR	1047312	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1047096	13					
ANR	1047313	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1482:5:46947:47006	1047096	0	True				
ANR	1047314	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1047096	0		==			
ANR	1047315	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1047096	0		&			
ANR	1047316	Identifier	flags		1047096	0					
ANR	1047317	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1047096	1		|			
ANR	1047318	Identifier	SLOW_SRC1		1047096	0					
ANR	1047319	Identifier	SLOW_SRC2		1047096	1					
ANR	1047320	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1047096	1		|			
ANR	1047321	Identifier	SLOW_SRC1		1047096	0					
ANR	1047322	Identifier	SLOW_SRC2		1047096	1					
ANR	1047323	CompoundStatement		32:67:917:917	1047096	1					
ANR	1047324	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1047096	0					
ANR	1047325	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1483:6:47017:47089	1047096	0	True				
ANR	1047326	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1047096	0		&&			
ANR	1047327	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1047096	0					
ANR	1047328	UnaryOperator	!		1047096	0					
ANR	1047329	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1047096	1					
ANR	1047330	Callee	can_cache		1047096	0					
ANR	1047331	Identifier	can_cache		1047096	0					
ANR	1047332	ArgumentList	src1		1047096	1					
ANR	1047333	Argument	src1		1047096	0					
ANR	1047334	Identifier	src1		1047096	0					
ANR	1047335	Argument	src1w		1047096	1					
ANR	1047336	Identifier	src1w		1047096	0					
ANR	1047337	Argument	src2		1047096	2					
ANR	1047338	Identifier	src2		1047096	0					
ANR	1047339	Argument	src2w		1047096	3					
ANR	1047340	Identifier	src2w		1047096	0					
ANR	1047341	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1047096	1					
ANR	1047342	Callee	can_cache		1047096	0					
ANR	1047343	Identifier	can_cache		1047096	0					
ANR	1047344	ArgumentList	src1		1047096	1					
ANR	1047345	Argument	src1		1047096	0					
ANR	1047346	Identifier	src1		1047096	0					
ANR	1047347	Argument	src1w		1047096	1					
ANR	1047348	Identifier	src1w		1047096	0					
ANR	1047349	Argument	dst		1047096	2					
ANR	1047350	Identifier	dst		1047096	0					
ANR	1047351	Argument	dstw		1047096	3					
ANR	1047352	Identifier	dstw		1047096	0					
ANR	1047353	CompoundStatement		33:81:1000:1000	1047096	1					
ANR	1047354	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	1484:3:47097:47173	1047096	0	True				
ANR	1047355	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1047096	0					
ANR	1047356	Callee	FAIL_IF		1047096	0					
ANR	1047357	Identifier	FAIL_IF		1047096	0					
ANR	1047358	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1047096	1					
ANR	1047359	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1047096	0					
ANR	1047360	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , src1 , src1w )"		1047096	0					
ANR	1047361	Callee	getput_arg		1047096	0					
ANR	1047362	Identifier	getput_arg		1047096	0					
ANR	1047363	ArgumentList	compiler		1047096	1					
ANR	1047364	Argument	compiler		1047096	0					
ANR	1047365	Identifier	compiler		1047096	0					
ANR	1047366	Argument	WORD_SIZE		1047096	1					
ANR	1047367	Identifier	WORD_SIZE		1047096	0					
ANR	1047368	Argument	TMP_REG2		1047096	2					
ANR	1047369	Identifier	TMP_REG2		1047096	0					
ANR	1047370	Argument	src2		1047096	3					
ANR	1047371	Identifier	src2		1047096	0					
ANR	1047372	Argument	src2w		1047096	4					
ANR	1047373	Identifier	src2w		1047096	0					
ANR	1047374	Argument	src1		1047096	5					
ANR	1047375	Identifier	src1		1047096	0					
ANR	1047376	Argument	src1w		1047096	6					
ANR	1047377	Identifier	src1w		1047096	0					
ANR	1047378	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1485:3:47178:47252	1047096	1	True				
ANR	1047379	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1047096	0					
ANR	1047380	Callee	FAIL_IF		1047096	0					
ANR	1047381	Identifier	FAIL_IF		1047096	0					
ANR	1047382	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	1					
ANR	1047383	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	0					
ANR	1047384	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	0					
ANR	1047385	Callee	getput_arg		1047096	0					
ANR	1047386	Identifier	getput_arg		1047096	0					
ANR	1047387	ArgumentList	compiler		1047096	1					
ANR	1047388	Argument	compiler		1047096	0					
ANR	1047389	Identifier	compiler		1047096	0					
ANR	1047390	Argument	WORD_SIZE		1047096	1					
ANR	1047391	Identifier	WORD_SIZE		1047096	0					
ANR	1047392	Argument	TMP_REG1		1047096	2					
ANR	1047393	Identifier	TMP_REG1		1047096	0					
ANR	1047394	Argument	src1		1047096	3					
ANR	1047395	Identifier	src1		1047096	0					
ANR	1047396	Argument	src1w		1047096	4					
ANR	1047397	Identifier	src1w		1047096	0					
ANR	1047398	Argument	dst		1047096	5					
ANR	1047399	Identifier	dst		1047096	0					
ANR	1047400	Argument	dstw		1047096	6					
ANR	1047401	Identifier	dstw		1047096	0					
ANR	1047402	ElseStatement	else		1047096	0					
ANR	1047403	CompoundStatement		37:7:1173:1173	1047096	0					
ANR	1047404	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1488:3:47270:47346	1047096	0	True				
ANR	1047405	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1047096	0					
ANR	1047406	Callee	FAIL_IF		1047096	0					
ANR	1047407	Identifier	FAIL_IF		1047096	0					
ANR	1047408	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1047096	1					
ANR	1047409	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1047096	0					
ANR	1047410	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , src2 , src2w )"		1047096	0					
ANR	1047411	Callee	getput_arg		1047096	0					
ANR	1047412	Identifier	getput_arg		1047096	0					
ANR	1047413	ArgumentList	compiler		1047096	1					
ANR	1047414	Argument	compiler		1047096	0					
ANR	1047415	Identifier	compiler		1047096	0					
ANR	1047416	Argument	WORD_SIZE		1047096	1					
ANR	1047417	Identifier	WORD_SIZE		1047096	0					
ANR	1047418	Argument	TMP_REG1		1047096	2					
ANR	1047419	Identifier	TMP_REG1		1047096	0					
ANR	1047420	Argument	src1		1047096	3					
ANR	1047421	Identifier	src1		1047096	0					
ANR	1047422	Argument	src1w		1047096	4					
ANR	1047423	Identifier	src1w		1047096	0					
ANR	1047424	Argument	src2		1047096	5					
ANR	1047425	Identifier	src2		1047096	0					
ANR	1047426	Argument	src2w		1047096	6					
ANR	1047427	Identifier	src2w		1047096	0					
ANR	1047428	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1489:3:47351:47425	1047096	1	True				
ANR	1047429	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1047096	0					
ANR	1047430	Callee	FAIL_IF		1047096	0					
ANR	1047431	Identifier	FAIL_IF		1047096	0					
ANR	1047432	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	1					
ANR	1047433	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	0					
ANR	1047434	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	0					
ANR	1047435	Callee	getput_arg		1047096	0					
ANR	1047436	Identifier	getput_arg		1047096	0					
ANR	1047437	ArgumentList	compiler		1047096	1					
ANR	1047438	Argument	compiler		1047096	0					
ANR	1047439	Identifier	compiler		1047096	0					
ANR	1047440	Argument	WORD_SIZE		1047096	1					
ANR	1047441	Identifier	WORD_SIZE		1047096	0					
ANR	1047442	Argument	TMP_REG2		1047096	2					
ANR	1047443	Identifier	TMP_REG2		1047096	0					
ANR	1047444	Argument	src2		1047096	3					
ANR	1047445	Identifier	src2		1047096	0					
ANR	1047446	Argument	src2w		1047096	4					
ANR	1047447	Identifier	src2w		1047096	0					
ANR	1047448	Argument	dst		1047096	5					
ANR	1047449	Identifier	dst		1047096	0					
ANR	1047450	Argument	dstw		1047096	6					
ANR	1047451	Identifier	dstw		1047096	0					
ANR	1047452	ElseStatement	else		1047096	0					
ANR	1047453	IfStatement	if ( flags & SLOW_SRC1 )		1047096	0					
ANR	1047454	Condition	flags & SLOW_SRC1	1492:10:47444:47460	1047096	0	True				
ANR	1047455	BitAndExpression	flags & SLOW_SRC1		1047096	0		&			
ANR	1047456	Identifier	flags		1047096	0					
ANR	1047457	Identifier	SLOW_SRC1		1047096	1					
ANR	1047458	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1493:2:47465:47539	1047096	1	True				
ANR	1047459	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1047096	0					
ANR	1047460	Callee	FAIL_IF		1047096	0					
ANR	1047461	Identifier	FAIL_IF		1047096	0					
ANR	1047462	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	1					
ANR	1047463	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	0					
ANR	1047464	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG1 , src1 , src1w , dst , dstw )"		1047096	0					
ANR	1047465	Callee	getput_arg		1047096	0					
ANR	1047466	Identifier	getput_arg		1047096	0					
ANR	1047467	ArgumentList	compiler		1047096	1					
ANR	1047468	Argument	compiler		1047096	0					
ANR	1047469	Identifier	compiler		1047096	0					
ANR	1047470	Argument	WORD_SIZE		1047096	1					
ANR	1047471	Identifier	WORD_SIZE		1047096	0					
ANR	1047472	Argument	TMP_REG1		1047096	2					
ANR	1047473	Identifier	TMP_REG1		1047096	0					
ANR	1047474	Argument	src1		1047096	3					
ANR	1047475	Identifier	src1		1047096	0					
ANR	1047476	Argument	src1w		1047096	4					
ANR	1047477	Identifier	src1w		1047096	0					
ANR	1047478	Argument	dst		1047096	5					
ANR	1047479	Identifier	dst		1047096	0					
ANR	1047480	Argument	dstw		1047096	6					
ANR	1047481	Identifier	dstw		1047096	0					
ANR	1047482	ElseStatement	else		1047096	0					
ANR	1047483	IfStatement	if ( flags & SLOW_SRC2 )		1047096	0					
ANR	1047484	Condition	flags & SLOW_SRC2	1494:10:47551:47567	1047096	0	True				
ANR	1047485	BitAndExpression	flags & SLOW_SRC2		1047096	0		&			
ANR	1047486	Identifier	flags		1047096	0					
ANR	1047487	Identifier	SLOW_SRC2		1047096	1					
ANR	1047488	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1495:2:47572:47646	1047096	1	True				
ANR	1047489	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1047096	0					
ANR	1047490	Callee	FAIL_IF		1047096	0					
ANR	1047491	Identifier	FAIL_IF		1047096	0					
ANR	1047492	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	1					
ANR	1047493	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	0					
ANR	1047494	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src2 , src2w , dst , dstw )"		1047096	0					
ANR	1047495	Callee	getput_arg		1047096	0					
ANR	1047496	Identifier	getput_arg		1047096	0					
ANR	1047497	ArgumentList	compiler		1047096	1					
ANR	1047498	Argument	compiler		1047096	0					
ANR	1047499	Identifier	compiler		1047096	0					
ANR	1047500	Argument	WORD_SIZE		1047096	1					
ANR	1047501	Identifier	WORD_SIZE		1047096	0					
ANR	1047502	Argument	TMP_REG2		1047096	2					
ANR	1047503	Identifier	TMP_REG2		1047096	0					
ANR	1047504	Argument	src2		1047096	3					
ANR	1047505	Identifier	src2		1047096	0					
ANR	1047506	Argument	src2w		1047096	4					
ANR	1047507	Identifier	src2w		1047096	0					
ANR	1047508	Argument	dst		1047096	5					
ANR	1047509	Identifier	dst		1047096	0					
ANR	1047510	Argument	dstw		1047096	6					
ANR	1047511	Identifier	dstw		1047096	0					
ANR	1047512	IfStatement	if ( src1 & SLJIT_MEM )		1047096	14					
ANR	1047513	Condition	src1 & SLJIT_MEM	1497:5:47654:47669	1047096	0	True				
ANR	1047514	BitAndExpression	src1 & SLJIT_MEM		1047096	0		&			
ANR	1047515	Identifier	src1		1047096	0					
ANR	1047516	Identifier	SLJIT_MEM		1047096	1					
ANR	1047517	ExpressionStatement	src1 = TMP_REG1	1498:2:47674:47689	1047096	1	True				
ANR	1047518	AssignmentExpression	src1 = TMP_REG1		1047096	0		=			
ANR	1047519	Identifier	src1		1047096	0					
ANR	1047520	Identifier	TMP_REG1		1047096	1					
ANR	1047521	IfStatement	if ( src2 & SLJIT_MEM )		1047096	15					
ANR	1047522	Condition	src2 & SLJIT_MEM	1499:5:47696:47711	1047096	0	True				
ANR	1047523	BitAndExpression	src2 & SLJIT_MEM		1047096	0		&			
ANR	1047524	Identifier	src2		1047096	0					
ANR	1047525	Identifier	SLJIT_MEM		1047096	1					
ANR	1047526	ExpressionStatement	src2 = TMP_REG2	1500:2:47716:47731	1047096	1	True				
ANR	1047527	AssignmentExpression	src2 = TMP_REG2		1047096	0		=			
ANR	1047528	Identifier	src2		1047096	0					
ANR	1047529	Identifier	TMP_REG2		1047096	1					
ANR	1047530	IfStatement	if ( src1 & SLJIT_IMM )		1047096	16					
ANR	1047531	Condition	src1 & SLJIT_IMM	1502:5:47739:47754	1047096	0	True				
ANR	1047532	BitAndExpression	src1 & SLJIT_IMM		1047096	0		&			
ANR	1047533	Identifier	src1		1047096	0					
ANR	1047534	Identifier	SLJIT_IMM		1047096	1					
ANR	1047535	ExpressionStatement	flags |= ARG1_IMM	1503:2:47759:47776	1047096	1	True				
ANR	1047536	AssignmentExpression	flags |= ARG1_IMM		1047096	0		|=			
ANR	1047537	Identifier	flags		1047096	0					
ANR	1047538	Identifier	ARG1_IMM		1047096	1					
ANR	1047539	ElseStatement	else		1047096	0					
ANR	1047540	ExpressionStatement	src1w = src1	1505:2:47786:47798	1047096	0	True				
ANR	1047541	AssignmentExpression	src1w = src1		1047096	0		=			
ANR	1047542	Identifier	src1w		1047096	0					
ANR	1047543	Identifier	src1		1047096	1					
ANR	1047544	IfStatement	if ( src2 & SLJIT_IMM )		1047096	17					
ANR	1047545	Condition	src2 & SLJIT_IMM	1506:5:47805:47820	1047096	0	True				
ANR	1047546	BitAndExpression	src2 & SLJIT_IMM		1047096	0		&			
ANR	1047547	Identifier	src2		1047096	0					
ANR	1047548	Identifier	SLJIT_IMM		1047096	1					
ANR	1047549	ExpressionStatement	flags |= ARG2_IMM	1507:2:47825:47842	1047096	1	True				
ANR	1047550	AssignmentExpression	flags |= ARG2_IMM		1047096	0		|=			
ANR	1047551	Identifier	flags		1047096	0					
ANR	1047552	Identifier	ARG2_IMM		1047096	1					
ANR	1047553	ElseStatement	else		1047096	0					
ANR	1047554	ExpressionStatement	src2w = src2	1509:2:47852:47864	1047096	0	True				
ANR	1047555	AssignmentExpression	src2w = src2		1047096	0		=			
ANR	1047556	Identifier	src2w		1047096	0					
ANR	1047557	Identifier	src2		1047096	1					
ANR	1047558	IfStatement	if ( dst == SLJIT_UNUSED )		1047096	18					
ANR	1047559	Condition	dst == SLJIT_UNUSED	1511:5:47872:47890	1047096	0	True				
ANR	1047560	EqualityExpression	dst == SLJIT_UNUSED		1047096	0		==			
ANR	1047561	Identifier	dst		1047096	0					
ANR	1047562	Identifier	SLJIT_UNUSED		1047096	1					
ANR	1047563	ExpressionStatement	flags |= UNUSED_RETURN	1512:2:47895:47917	1047096	1	True				
ANR	1047564	AssignmentExpression	flags |= UNUSED_RETURN		1047096	0		|=			
ANR	1047565	Identifier	flags		1047096	0					
ANR	1047566	Identifier	UNUSED_RETURN		1047096	1					
ANR	1047567	ExpressionStatement	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"	1514:1:47921:47987	1047096	19	True				
ANR	1047568	CallExpression	"emit_op_imm ( compiler , flags | GET_OPCODE ( op ) , dst_r , src1w , src2w )"		1047096	0					
ANR	1047569	Callee	emit_op_imm		1047096	0					
ANR	1047570	Identifier	emit_op_imm		1047096	0					
ANR	1047571	ArgumentList	compiler		1047096	1					
ANR	1047572	Argument	compiler		1047096	0					
ANR	1047573	Identifier	compiler		1047096	0					
ANR	1047574	Argument	flags | GET_OPCODE ( op )		1047096	1					
ANR	1047575	InclusiveOrExpression	flags | GET_OPCODE ( op )		1047096	0		|			
ANR	1047576	Identifier	flags		1047096	0					
ANR	1047577	CallExpression	GET_OPCODE ( op )		1047096	1					
ANR	1047578	Callee	GET_OPCODE		1047096	0					
ANR	1047579	Identifier	GET_OPCODE		1047096	0					
ANR	1047580	ArgumentList	op		1047096	1					
ANR	1047581	Argument	op		1047096	0					
ANR	1047582	Identifier	op		1047096	0					
ANR	1047583	Argument	dst_r		1047096	2					
ANR	1047584	Identifier	dst_r		1047096	0					
ANR	1047585	Argument	src1w		1047096	3					
ANR	1047586	Identifier	src1w		1047096	0					
ANR	1047587	Argument	src2w		1047096	4					
ANR	1047588	Identifier	src2w		1047096	0					
ANR	1047589	IfStatement	if ( dst & SLJIT_MEM )		1047096	20					
ANR	1047590	Condition	dst & SLJIT_MEM	1516:5:47995:48009	1047096	0	True				
ANR	1047591	BitAndExpression	dst & SLJIT_MEM		1047096	0		&			
ANR	1047592	Identifier	dst		1047096	0					
ANR	1047593	Identifier	SLJIT_MEM		1047096	1					
ANR	1047594	CompoundStatement		66:22:1920:1920	1047096	1					
ANR	1047595	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1047096	0					
ANR	1047596	Condition	! ( flags & SLOW_DEST )	1517:6:48020:48039	1047096	0	True				
ANR	1047597	UnaryOperationExpression	! ( flags & SLOW_DEST )		1047096	0					
ANR	1047598	UnaryOperator	!		1047096	0					
ANR	1047599	BitAndExpression	flags & SLOW_DEST		1047096	1		&			
ANR	1047600	Identifier	flags		1047096	0					
ANR	1047601	Identifier	SLOW_DEST		1047096	1					
ANR	1047602	CompoundStatement		67:28:1950:1950	1047096	1					
ANR	1047603	ExpressionStatement	"getput_arg_fast ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"	1518:3:48047:48109	1047096	0	True				
ANR	1047604	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1047096	0					
ANR	1047605	Callee	getput_arg_fast		1047096	0					
ANR	1047606	Identifier	getput_arg_fast		1047096	0					
ANR	1047607	ArgumentList	compiler		1047096	1					
ANR	1047608	Argument	compiler		1047096	0					
ANR	1047609	Identifier	compiler		1047096	0					
ANR	1047610	Argument	WORD_SIZE | STORE		1047096	1					
ANR	1047611	InclusiveOrExpression	WORD_SIZE | STORE		1047096	0		|			
ANR	1047612	Identifier	WORD_SIZE		1047096	0					
ANR	1047613	Identifier	STORE		1047096	1					
ANR	1047614	Argument	dst_r		1047096	2					
ANR	1047615	Identifier	dst_r		1047096	0					
ANR	1047616	Argument	dst		1047096	3					
ANR	1047617	Identifier	dst		1047096	0					
ANR	1047618	Argument	dstw		1047096	4					
ANR	1047619	Identifier	dstw		1047096	0					
ANR	1047620	ReturnStatement	return compiler -> error ;	1519:3:48114:48136	1047096	1	True				
ANR	1047621	PtrMemberAccess	compiler -> error		1047096	0					
ANR	1047622	Identifier	compiler		1047096	0					
ANR	1047623	Identifier	error		1047096	1					
ANR	1047624	ReturnStatement	"return getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG1 , dst , dstw , 0 , 0 ) ;"	1521:2:48144:48217	1047096	1	True				
ANR	1047625	CallExpression	"getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG1 , dst , dstw , 0 , 0 )"		1047096	0					
ANR	1047626	Callee	getput_arg		1047096	0					
ANR	1047627	Identifier	getput_arg		1047096	0					
ANR	1047628	ArgumentList	compiler		1047096	1					
ANR	1047629	Argument	compiler		1047096	0					
ANR	1047630	Identifier	compiler		1047096	0					
ANR	1047631	Argument	WORD_SIZE | STORE		1047096	1					
ANR	1047632	InclusiveOrExpression	WORD_SIZE | STORE		1047096	0		|			
ANR	1047633	Identifier	WORD_SIZE		1047096	0					
ANR	1047634	Identifier	STORE		1047096	1					
ANR	1047635	Argument	TMP_REG1		1047096	2					
ANR	1047636	Identifier	TMP_REG1		1047096	0					
ANR	1047637	Argument	dst		1047096	3					
ANR	1047638	Identifier	dst		1047096	0					
ANR	1047639	Argument	dstw		1047096	4					
ANR	1047640	Identifier	dstw		1047096	0					
ANR	1047641	Argument	0		1047096	5					
ANR	1047642	PrimaryExpression	0		1047096	0					
ANR	1047643	Argument	0		1047096	6					
ANR	1047644	PrimaryExpression	0		1047096	0					
ANR	1047645	ReturnStatement	return SLJIT_SUCCESS ;	1523:1:48223:48243	1047096	21	True				
ANR	1047646	Identifier	SLJIT_SUCCESS		1047096	0					
ANR	1047647	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1047096	1					
ANR	1047648	Identifier	sljit_emit_op2		1047096	2					
ANR	1047649	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1047096	3					
ANR	1047650	Parameter	struct sljit_compiler * compiler	1447:49:45951:45981	1047096	0	True				
ANR	1047651	ParameterType	struct sljit_compiler *		1047096	0					
ANR	1047652	Identifier	compiler		1047096	1					
ANR	1047653	Parameter	sljit_si op	1447:82:45984:45994	1047096	1	True				
ANR	1047654	ParameterType	sljit_si		1047096	0					
ANR	1047655	Identifier	op		1047096	1					
ANR	1047656	Parameter	sljit_si dst	1448:1:45998:46009	1047096	2	True				
ANR	1047657	ParameterType	sljit_si		1047096	0					
ANR	1047658	Identifier	dst		1047096	1					
ANR	1047659	Parameter	sljit_sw dstw	1448:15:46012:46024	1047096	3	True				
ANR	1047660	ParameterType	sljit_sw		1047096	0					
ANR	1047661	Identifier	dstw		1047096	1					
ANR	1047662	Parameter	sljit_si src1	1449:1:46028:46040	1047096	4	True				
ANR	1047663	ParameterType	sljit_si		1047096	0					
ANR	1047664	Identifier	src1		1047096	1					
ANR	1047665	Parameter	sljit_sw src1w	1449:16:46043:46056	1047096	5	True				
ANR	1047666	ParameterType	sljit_sw		1047096	0					
ANR	1047667	Identifier	src1w		1047096	1					
ANR	1047668	Parameter	sljit_si src2	1450:1:46060:46072	1047096	6	True				
ANR	1047669	ParameterType	sljit_si		1047096	0					
ANR	1047670	Identifier	src2		1047096	1					
ANR	1047671	Parameter	sljit_sw src2w	1450:16:46075:46088	1047096	7	True				
ANR	1047672	ParameterType	sljit_sw		1047096	0					
ANR	1047673	Identifier	src2w		1047096	1					
ANR	1047674	CFGEntryNode	ENTRY		1047096		True				
ANR	1047675	CFGExitNode	EXIT		1047096		True				
ANR	1047676	Symbol	SLOW_SRC2		1047096						
ANR	1047677	Symbol	TMP_REG2		1047096						
ANR	1047678	Symbol	compiler -> cache_argw		1047096						
ANR	1047679	Symbol	TMP_REG1		1047096						
ANR	1047680	Symbol	src1w		1047096						
ANR	1047681	Symbol	dst		1047096						
ANR	1047682	Symbol	SLOW_DEST		1047096						
ANR	1047683	Symbol	SLJIT_MEM		1047096						
ANR	1047684	Symbol	SLOW_SRC1		1047096						
ANR	1047685	Symbol	flags		1047096						
ANR	1047686	Symbol	SLOW_IS_REG		1047096						
ANR	1047687	Symbol	UNUSED_RETURN		1047096						
ANR	1047688	Symbol	* compiler		1047096						
ANR	1047689	Symbol	ARG_TEST		1047096						
ANR	1047690	Symbol	dst_r		1047096						
ANR	1047691	Symbol	GET_FLAGS		1047096						
ANR	1047692	Symbol	GET_OPCODE		1047096						
ANR	1047693	Symbol	SLJIT_IMM		1047096						
ANR	1047694	Symbol	SLJIT_KEEP_FLAGS		1047096						
ANR	1047695	Symbol	getput_arg		1047096						
ANR	1047696	Symbol	ARG1_IMM		1047096						
ANR	1047697	Symbol	KEEP_FLAGS		1047096						
ANR	1047698	Symbol	compiler		1047096						
ANR	1047699	Symbol	src2w		1047096						
ANR	1047700	Symbol	can_cache		1047096						
ANR	1047701	Symbol	op		1047096						
ANR	1047702	Symbol	check_sljit_emit_op2		1047096						
ANR	1047703	Symbol	compiler -> cache_arg		1047096						
ANR	1047704	Symbol	ARG2_IMM		1047096						
ANR	1047705	Symbol	SLJIT_SUCCESS		1047096						
ANR	1047706	Symbol	SET_FLAGS		1047096						
ANR	1047707	Symbol	SLJIT_UNUSED		1047096						
ANR	1047708	Symbol	src1		1047096						
ANR	1047709	Symbol	STORE		1047096						
ANR	1047710	Symbol	src2		1047096						
ANR	1047711	Symbol	getput_arg_fast		1047096						
ANR	1047712	Symbol	dstw		1047096						
ANR	1047713	Symbol	compiler -> error		1047096						
ANR	1047714	Symbol	WORD_SIZE		1047096						
ANR	1047715	Function	sljit_get_register_index	1526:0:48248:48400							
ANR	1047716	FunctionDef	sljit_get_register_index (sljit_si reg)		1047715	0					
ANR	1047717	CompoundStatement		1527:0:48321:48400	1047715	0					
ANR	1047718	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1528:1:48324:48376	1047715	0	True				
ANR	1047719	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1047715	0					
ANR	1047720	Callee	CHECK_REG_INDEX		1047715	0					
ANR	1047721	Identifier	CHECK_REG_INDEX		1047715	0					
ANR	1047722	ArgumentList	check_sljit_get_register_index ( reg )		1047715	1					
ANR	1047723	Argument	check_sljit_get_register_index ( reg )		1047715	0					
ANR	1047724	CallExpression	check_sljit_get_register_index ( reg )		1047715	0					
ANR	1047725	Callee	check_sljit_get_register_index		1047715	0					
ANR	1047726	Identifier	check_sljit_get_register_index		1047715	0					
ANR	1047727	ArgumentList	reg		1047715	1					
ANR	1047728	Argument	reg		1047715	0					
ANR	1047729	Identifier	reg		1047715	0					
ANR	1047730	ReturnStatement	return reg_map [ reg ] ;	1529:1:48379:48398	1047715	1	True				
ANR	1047731	ArrayIndexing	reg_map [ reg ]		1047715	0					
ANR	1047732	Identifier	reg_map		1047715	0					
ANR	1047733	Identifier	reg		1047715	1					
ANR	1047734	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1047715	1					
ANR	1047735	Identifier	sljit_get_register_index		1047715	2					
ANR	1047736	ParameterList	sljit_si reg		1047715	3					
ANR	1047737	Parameter	sljit_si reg	1526:59:48307:48318	1047715	0	True				
ANR	1047738	ParameterType	sljit_si		1047715	0					
ANR	1047739	Identifier	reg		1047715	1					
ANR	1047740	CFGEntryNode	ENTRY		1047715		True				
ANR	1047741	CFGExitNode	EXIT		1047715		True				
ANR	1047742	Symbol	reg		1047715						
ANR	1047743	Symbol	reg_map		1047715						
ANR	1047744	Symbol	* reg_map		1047715						
ANR	1047745	Symbol	* reg		1047715						
ANR	1047746	Symbol	check_sljit_get_register_index		1047715						
ANR	1047747	Function	sljit_get_float_register_index	1532:0:48403:48563							
ANR	1047748	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1047747	0					
ANR	1047749	CompoundStatement		1533:0:48482:48563	1047747	0					
ANR	1047750	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1534:1:48485:48543	1047747	0	True				
ANR	1047751	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1047747	0					
ANR	1047752	Callee	CHECK_REG_INDEX		1047747	0					
ANR	1047753	Identifier	CHECK_REG_INDEX		1047747	0					
ANR	1047754	ArgumentList	check_sljit_get_float_register_index ( reg )		1047747	1					
ANR	1047755	Argument	check_sljit_get_float_register_index ( reg )		1047747	0					
ANR	1047756	CallExpression	check_sljit_get_float_register_index ( reg )		1047747	0					
ANR	1047757	Callee	check_sljit_get_float_register_index		1047747	0					
ANR	1047758	Identifier	check_sljit_get_float_register_index		1047747	0					
ANR	1047759	ArgumentList	reg		1047747	1					
ANR	1047760	Argument	reg		1047747	0					
ANR	1047761	Identifier	reg		1047747	0					
ANR	1047762	ReturnStatement	return reg << 1 ;	1535:1:48546:48561	1047747	1	True				
ANR	1047763	ShiftExpression	reg << 1		1047747	0		<<			
ANR	1047764	Identifier	reg		1047747	0					
ANR	1047765	PrimaryExpression	1		1047747	1					
ANR	1047766	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1047747	1					
ANR	1047767	Identifier	sljit_get_float_register_index		1047747	2					
ANR	1047768	ParameterList	sljit_si reg		1047747	3					
ANR	1047769	Parameter	sljit_si reg	1532:65:48468:48479	1047747	0	True				
ANR	1047770	ParameterType	sljit_si		1047747	0					
ANR	1047771	Identifier	reg		1047747	1					
ANR	1047772	CFGEntryNode	ENTRY		1047747		True				
ANR	1047773	CFGExitNode	EXIT		1047747		True				
ANR	1047774	Symbol	reg		1047747						
ANR	1047775	Symbol	check_sljit_get_float_register_index		1047747						
ANR	1047776	Function	sljit_emit_op_custom	1538:0:48566:48903							
ANR	1047777	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1047776	0					
ANR	1047778	CompoundStatement		1540:0:48689:48903	1047776	0					
ANR	1047779	ExpressionStatement	CHECK_ERROR ( )	1541:1:48692:48705	1047776	0	True				
ANR	1047780	CallExpression	CHECK_ERROR ( )		1047776	0					
ANR	1047781	Callee	CHECK_ERROR		1047776	0					
ANR	1047782	Identifier	CHECK_ERROR		1047776	0					
ANR	1047783	ArgumentList			1047776	1					
ANR	1047784	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1542:1:48708:48770	1047776	1	True				
ANR	1047785	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1047776	0					
ANR	1047786	Callee	CHECK		1047776	0					
ANR	1047787	Identifier	CHECK		1047776	0					
ANR	1047788	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1047776	1					
ANR	1047789	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1047776	0					
ANR	1047790	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1047776	0					
ANR	1047791	Callee	check_sljit_emit_op_custom		1047776	0					
ANR	1047792	Identifier	check_sljit_emit_op_custom		1047776	0					
ANR	1047793	ArgumentList	compiler		1047776	1					
ANR	1047794	Argument	compiler		1047776	0					
ANR	1047795	Identifier	compiler		1047776	0					
ANR	1047796	Argument	instruction		1047776	1					
ANR	1047797	Identifier	instruction		1047776	0					
ANR	1047798	Argument	size		1047776	2					
ANR	1047799	Identifier	size		1047776	0					
ANR	1047800	IfStatement	if ( size == 2 )		1047776	2					
ANR	1047801	Condition	size == 2	1544:5:48778:48786	1047776	0	True				
ANR	1047802	EqualityExpression	size == 2		1047776	0		==			
ANR	1047803	Identifier	size		1047776	0					
ANR	1047804	PrimaryExpression	2		1047776	1					
ANR	1047805	ReturnStatement	"return push_inst16 ( compiler , * ( sljit_uh * ) instruction ) ;"	1545:2:48791:48844	1047776	1	True				
ANR	1047806	CallExpression	"push_inst16 ( compiler , * ( sljit_uh * ) instruction )"		1047776	0					
ANR	1047807	Callee	push_inst16		1047776	0					
ANR	1047808	Identifier	push_inst16		1047776	0					
ANR	1047809	ArgumentList	compiler		1047776	1					
ANR	1047810	Argument	compiler		1047776	0					
ANR	1047811	Identifier	compiler		1047776	0					
ANR	1047812	Argument	* ( sljit_uh * ) instruction		1047776	1					
ANR	1047813	UnaryOperationExpression	* ( sljit_uh * ) instruction		1047776	0					
ANR	1047814	UnaryOperator	*		1047776	0					
ANR	1047815	CastExpression	( sljit_uh * ) instruction		1047776	1					
ANR	1047816	CastTarget	sljit_uh *		1047776	0					
ANR	1047817	Identifier	instruction		1047776	1					
ANR	1047818	ReturnStatement	"return push_inst32 ( compiler , * ( sljit_ins * ) instruction ) ;"	1546:1:48847:48901	1047776	3	True				
ANR	1047819	CallExpression	"push_inst32 ( compiler , * ( sljit_ins * ) instruction )"		1047776	0					
ANR	1047820	Callee	push_inst32		1047776	0					
ANR	1047821	Identifier	push_inst32		1047776	0					
ANR	1047822	ArgumentList	compiler		1047776	1					
ANR	1047823	Argument	compiler		1047776	0					
ANR	1047824	Identifier	compiler		1047776	0					
ANR	1047825	Argument	* ( sljit_ins * ) instruction		1047776	1					
ANR	1047826	UnaryOperationExpression	* ( sljit_ins * ) instruction		1047776	0					
ANR	1047827	UnaryOperator	*		1047776	0					
ANR	1047828	CastExpression	( sljit_ins * ) instruction		1047776	1					
ANR	1047829	CastTarget	sljit_ins *		1047776	0					
ANR	1047830	Identifier	instruction		1047776	1					
ANR	1047831	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1047776	1					
ANR	1047832	Identifier	sljit_emit_op_custom		1047776	2					
ANR	1047833	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1047776	3					
ANR	1047834	Parameter	struct sljit_compiler * compiler	1538:55:48621:48651	1047776	0	True				
ANR	1047835	ParameterType	struct sljit_compiler *		1047776	0					
ANR	1047836	Identifier	compiler		1047776	1					
ANR	1047837	Parameter	void * instruction	1539:1:48655:48671	1047776	1	True				
ANR	1047838	ParameterType	void *		1047776	0					
ANR	1047839	Identifier	instruction		1047776	1					
ANR	1047840	Parameter	sljit_si size	1539:20:48674:48686	1047776	2	True				
ANR	1047841	ParameterType	sljit_si		1047776	0					
ANR	1047842	Identifier	size		1047776	1					
ANR	1047843	CFGEntryNode	ENTRY		1047776		True				
ANR	1047844	CFGExitNode	EXIT		1047776		True				
ANR	1047845	Symbol	size		1047776						
ANR	1047846	Symbol	* instruction		1047776						
ANR	1047847	Symbol	* ( sljit_ins * ) instruction		1047776						
ANR	1047848	Symbol	instruction		1047776						
ANR	1047849	Symbol	* ( sljit_uh * ) instruction		1047776						
ANR	1047850	Symbol	check_sljit_emit_op_custom		1047776						
ANR	1047851	Symbol	push_inst16		1047776						
ANR	1047852	Symbol	compiler		1047776						
ANR	1047853	Symbol	push_inst32		1047776						
ANR	1047854	Function	sljit_is_fpu_available	1553:0:49135:49315							
ANR	1047855	FunctionDef	sljit_is_fpu_available ()		1047854	0					
ANR	1047856	CompoundStatement		1554:0:49198:49315	1047854	0					
ANR	1047857	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1556:1:49231:49260	1047854	0	True				
ANR	1047858	Identifier	SLJIT_IS_FPU_AVAILABLE		1047854	0					
ANR	1047859	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1047854	1					
ANR	1047860	Identifier	sljit_is_fpu_available		1047854	2					
ANR	1047861	ParameterList			1047854	3					
ANR	1047862	CFGEntryNode	ENTRY		1047854		True				
ANR	1047863	CFGExitNode	EXIT		1047854		True				
ANR	1047864	Symbol	SLJIT_IS_FPU_AVAILABLE		1047854						
ANR	1047865	Function	emit_fop_mem	1565:0:49346:51728							
ANR	1047866	FunctionDef	"emit_fop_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1047865	0					
ANR	1047867	CompoundStatement		1566:0:49467:51728	1047865	0					
ANR	1047868	IdentifierDeclStatement	sljit_sw tmp ;	1567:1:49470:49482	1047865	0	True				
ANR	1047869	IdentifierDecl	tmp		1047865	0					
ANR	1047870	IdentifierDeclType	sljit_sw		1047865	0					
ANR	1047871	Identifier	tmp		1047865	1					
ANR	1047872	IdentifierDeclStatement	sljit_uw imm ;	1568:1:49485:49497	1047865	1	True				
ANR	1047873	IdentifierDecl	imm		1047865	0					
ANR	1047874	IdentifierDeclType	sljit_uw		1047865	0					
ANR	1047875	Identifier	imm		1047865	1					
ANR	1047876	IdentifierDeclStatement	sljit_sw inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) ) ;	1569:1:49500:49565	1047865	2	True				
ANR	1047877	IdentifierDecl	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1047865	0					
ANR	1047878	IdentifierDeclType	sljit_sw		1047865	0					
ANR	1047879	Identifier	inst		1047865	1					
ANR	1047880	AssignmentExpression	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1047865	2		=			
ANR	1047881	Identifier	inst		1047865	0					
ANR	1047882	InclusiveOrExpression	VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1047865	1		|			
ANR	1047883	Identifier	VSTR_F32		1047865	0					
ANR	1047884	BitAndExpression	flags & ( SLJIT_SINGLE_OP | FPU_LOAD )		1047865	1		&			
ANR	1047885	Identifier	flags		1047865	0					
ANR	1047886	InclusiveOrExpression	SLJIT_SINGLE_OP | FPU_LOAD		1047865	1		|			
ANR	1047887	Identifier	SLJIT_SINGLE_OP		1047865	0					
ANR	1047888	Identifier	FPU_LOAD		1047865	1					
ANR	1047889	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1571:1:49569:49598	1047865	3	True				
ANR	1047890	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1047865	0					
ANR	1047891	Callee	SLJIT_ASSERT		1047865	0					
ANR	1047892	Identifier	SLJIT_ASSERT		1047865	0					
ANR	1047893	ArgumentList	arg & SLJIT_MEM		1047865	1					
ANR	1047894	Argument	arg & SLJIT_MEM		1047865	0					
ANR	1047895	BitAndExpression	arg & SLJIT_MEM		1047865	0		&			
ANR	1047896	Identifier	arg		1047865	0					
ANR	1047897	Identifier	SLJIT_MEM		1047865	1					
ANR	1047898	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1047865	4					
ANR	1047899	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	1574:5:49636:49670	1047865	0	True				
ANR	1047900	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1047865	0					
ANR	1047901	Callee	SLJIT_UNLIKELY		1047865	0					
ANR	1047902	Identifier	SLJIT_UNLIKELY		1047865	0					
ANR	1047903	ArgumentList	arg & OFFS_REG_MASK		1047865	1					
ANR	1047904	Argument	arg & OFFS_REG_MASK		1047865	0					
ANR	1047905	BitAndExpression	arg & OFFS_REG_MASK		1047865	0		&			
ANR	1047906	Identifier	arg		1047865	0					
ANR	1047907	Identifier	OFFS_REG_MASK		1047865	1					
ANR	1047908	CompoundStatement		9:42:205:205	1047865	1					
ANR	1047909	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) ) )"	1575:2:49677:49795	1047865	0	True				
ANR	1047910	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) ) )"		1047865	0					
ANR	1047911	Callee	FAIL_IF		1047865	0					
ANR	1047912	Identifier	FAIL_IF		1047865	0					
ANR	1047913	ArgumentList	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1047865	1					
ANR	1047914	Argument	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1047865	0					
ANR	1047915	CallExpression	"push_inst32 ( compiler , ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 ) )"		1047865	0					
ANR	1047916	Callee	push_inst32		1047865	0					
ANR	1047917	Identifier	push_inst32		1047865	0					
ANR	1047918	ArgumentList	compiler		1047865	1					
ANR	1047919	Argument	compiler		1047865	0					
ANR	1047920	Identifier	compiler		1047865	0					
ANR	1047921	Argument	ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1047865	1					
ANR	1047922	InclusiveOrExpression	ADD_W | RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1047865	0		|			
ANR	1047923	Identifier	ADD_W		1047865	0					
ANR	1047924	InclusiveOrExpression	RD4 ( TMP_REG2 ) | RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1047865	1		|			
ANR	1047925	CallExpression	RD4 ( TMP_REG2 )		1047865	0					
ANR	1047926	Callee	RD4		1047865	0					
ANR	1047927	Identifier	RD4		1047865	0					
ANR	1047928	ArgumentList	TMP_REG2		1047865	1					
ANR	1047929	Argument	TMP_REG2		1047865	0					
ANR	1047930	Identifier	TMP_REG2		1047865	0					
ANR	1047931	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1047865	1		|			
ANR	1047932	CallExpression	RN4 ( arg & REG_MASK )		1047865	0					
ANR	1047933	Callee	RN4		1047865	0					
ANR	1047934	Identifier	RN4		1047865	0					
ANR	1047935	ArgumentList	arg & REG_MASK		1047865	1					
ANR	1047936	Argument	arg & REG_MASK		1047865	0					
ANR	1047937	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1047938	Identifier	arg		1047865	0					
ANR	1047939	Identifier	REG_MASK		1047865	1					
ANR	1047940	InclusiveOrExpression	RM4 ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 6 )		1047865	1		|			
ANR	1047941	CallExpression	RM4 ( OFFS_REG ( arg ) )		1047865	0					
ANR	1047942	Callee	RM4		1047865	0					
ANR	1047943	Identifier	RM4		1047865	0					
ANR	1047944	ArgumentList	OFFS_REG ( arg )		1047865	1					
ANR	1047945	Argument	OFFS_REG ( arg )		1047865	0					
ANR	1047946	CallExpression	OFFS_REG ( arg )		1047865	0					
ANR	1047947	Callee	OFFS_REG		1047865	0					
ANR	1047948	Identifier	OFFS_REG		1047865	0					
ANR	1047949	ArgumentList	arg		1047865	1					
ANR	1047950	Argument	arg		1047865	0					
ANR	1047951	Identifier	arg		1047865	0					
ANR	1047952	ShiftExpression	( argw & 0x3 ) << 6		1047865	1		<<			
ANR	1047953	BitAndExpression	argw & 0x3		1047865	0		&			
ANR	1047954	Identifier	argw		1047865	0					
ANR	1047955	PrimaryExpression	0x3		1047865	1					
ANR	1047956	PrimaryExpression	6		1047865	1					
ANR	1047957	ExpressionStatement	arg = SLJIT_MEM | TMP_REG2	1576:2:49799:49825	1047865	1	True				
ANR	1047958	AssignmentExpression	arg = SLJIT_MEM | TMP_REG2		1047865	0		=			
ANR	1047959	Identifier	arg		1047865	0					
ANR	1047960	InclusiveOrExpression	SLJIT_MEM | TMP_REG2		1047865	1		|			
ANR	1047961	Identifier	SLJIT_MEM		1047865	0					
ANR	1047962	Identifier	TMP_REG2		1047865	1					
ANR	1047963	ExpressionStatement	argw = 0	1577:2:49829:49837	1047865	2	True				
ANR	1047964	AssignmentExpression	argw = 0		1047865	0		=			
ANR	1047965	Identifier	argw		1047865	0					
ANR	1047966	PrimaryExpression	0		1047865	1					
ANR	1047967	IfStatement	if ( ( arg & REG_MASK ) && ( argw & 0x3 ) == 0 )		1047865	5					
ANR	1047968	Condition	( arg & REG_MASK ) && ( argw & 0x3 ) == 0	1580:5:49848:49884	1047865	0	True				
ANR	1047969	AndExpression	( arg & REG_MASK ) && ( argw & 0x3 ) == 0		1047865	0		&&			
ANR	1047970	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1047971	Identifier	arg		1047865	0					
ANR	1047972	Identifier	REG_MASK		1047865	1					
ANR	1047973	EqualityExpression	( argw & 0x3 ) == 0		1047865	1		==			
ANR	1047974	BitAndExpression	argw & 0x3		1047865	0		&			
ANR	1047975	Identifier	argw		1047865	0					
ANR	1047976	PrimaryExpression	0x3		1047865	1					
ANR	1047977	PrimaryExpression	0		1047865	1					
ANR	1047978	CompoundStatement		15:44:419:419	1047865	1					
ANR	1047979	IfStatement	if ( ! ( argw & ~0x3fc ) )		1047865	0					
ANR	1047980	Condition	! ( argw & ~0x3fc )	1581:6:49895:49910	1047865	0	True				
ANR	1047981	UnaryOperationExpression	! ( argw & ~0x3fc )		1047865	0					
ANR	1047982	UnaryOperator	!		1047865	0					
ANR	1047983	BitAndExpression	argw & ~0x3fc		1047865	1		&			
ANR	1047984	Identifier	argw		1047865	0					
ANR	1047985	Identifier	~0x3fc		1047865	1					
ANR	1047986	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 ) ) ;"	1582:3:49916:50008	1047865	1	True				
ANR	1047987	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 ) )"		1047865	0					
ANR	1047988	Callee	push_inst32		1047865	0					
ANR	1047989	Identifier	push_inst32		1047865	0					
ANR	1047990	ArgumentList	compiler		1047865	1					
ANR	1047991	Argument	compiler		1047865	0					
ANR	1047992	Identifier	compiler		1047865	0					
ANR	1047993	Argument	inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1047865	1					
ANR	1047994	InclusiveOrExpression	inst | 0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1047865	0		|			
ANR	1047995	Identifier	inst		1047865	0					
ANR	1047996	InclusiveOrExpression	0x800000 | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1047865	1		|			
ANR	1047997	PrimaryExpression	0x800000		1047865	0					
ANR	1047998	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( argw >> 2 )		1047865	1		|			
ANR	1047999	CallExpression	RN4 ( arg & REG_MASK )		1047865	0					
ANR	1048000	Callee	RN4		1047865	0					
ANR	1048001	Identifier	RN4		1047865	0					
ANR	1048002	ArgumentList	arg & REG_MASK		1047865	1					
ANR	1048003	Argument	arg & REG_MASK		1047865	0					
ANR	1048004	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048005	Identifier	arg		1047865	0					
ANR	1048006	Identifier	REG_MASK		1047865	1					
ANR	1048007	InclusiveOrExpression	DD4 ( reg ) | ( argw >> 2 )		1047865	1		|			
ANR	1048008	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048009	Callee	DD4		1047865	0					
ANR	1048010	Identifier	DD4		1047865	0					
ANR	1048011	ArgumentList	reg		1047865	1					
ANR	1048012	Argument	reg		1047865	0					
ANR	1048013	Identifier	reg		1047865	0					
ANR	1048014	ShiftExpression	argw >> 2		1047865	1		>>			
ANR	1048015	Identifier	argw		1047865	0					
ANR	1048016	PrimaryExpression	2		1047865	1					
ANR	1048017	IfStatement	if ( ! ( - argw & ~0x3fc ) )		1047865	1					
ANR	1048018	Condition	! ( - argw & ~0x3fc )	1583:6:50016:50032	1047865	0	True				
ANR	1048019	UnaryOperationExpression	! ( - argw & ~0x3fc )		1047865	0					
ANR	1048020	UnaryOperator	!		1047865	0					
ANR	1048021	BitAndExpression	- argw & ~0x3fc		1047865	1		&			
ANR	1048022	UnaryOperationExpression	- argw		1047865	0					
ANR	1048023	UnaryOperator	-		1047865	0					
ANR	1048024	Identifier	argw		1047865	1					
ANR	1048025	Identifier	~0x3fc		1047865	1					
ANR	1048026	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 ) ) ;"	1584:3:50038:50120	1047865	1	True				
ANR	1048027	CallExpression	"push_inst32 ( compiler , inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 ) )"		1047865	0					
ANR	1048028	Callee	push_inst32		1047865	0					
ANR	1048029	Identifier	push_inst32		1047865	0					
ANR	1048030	ArgumentList	compiler		1047865	1					
ANR	1048031	Argument	compiler		1047865	0					
ANR	1048032	Identifier	compiler		1047865	0					
ANR	1048033	Argument	inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1047865	1					
ANR	1048034	InclusiveOrExpression	inst | RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1047865	0		|			
ANR	1048035	Identifier	inst		1047865	0					
ANR	1048036	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | DD4 ( reg ) | ( - argw >> 2 )		1047865	1		|			
ANR	1048037	CallExpression	RN4 ( arg & REG_MASK )		1047865	0					
ANR	1048038	Callee	RN4		1047865	0					
ANR	1048039	Identifier	RN4		1047865	0					
ANR	1048040	ArgumentList	arg & REG_MASK		1047865	1					
ANR	1048041	Argument	arg & REG_MASK		1047865	0					
ANR	1048042	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048043	Identifier	arg		1047865	0					
ANR	1048044	Identifier	REG_MASK		1047865	1					
ANR	1048045	InclusiveOrExpression	DD4 ( reg ) | ( - argw >> 2 )		1047865	1		|			
ANR	1048046	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048047	Callee	DD4		1047865	0					
ANR	1048048	Identifier	DD4		1047865	0					
ANR	1048049	ArgumentList	reg		1047865	1					
ANR	1048050	Argument	reg		1047865	0					
ANR	1048051	Identifier	reg		1047865	0					
ANR	1048052	ShiftExpression	- argw >> 2		1047865	1		>>			
ANR	1048053	UnaryOperationExpression	- argw		1047865	0					
ANR	1048054	UnaryOperator	-		1047865	0					
ANR	1048055	Identifier	argw		1047865	1					
ANR	1048056	PrimaryExpression	2		1047865	1					
ANR	1048057	ExpressionStatement	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )	1588:1:50145:50181	1047865	6	True				
ANR	1048058	CallExpression	SLJIT_ASSERT ( ! ( arg & OFFS_REG_MASK ) )		1047865	0					
ANR	1048059	Callee	SLJIT_ASSERT		1047865	0					
ANR	1048060	Identifier	SLJIT_ASSERT		1047865	0					
ANR	1048061	ArgumentList	! ( arg & OFFS_REG_MASK )		1047865	1					
ANR	1048062	Argument	! ( arg & OFFS_REG_MASK )		1047865	0					
ANR	1048063	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1047865	0					
ANR	1048064	UnaryOperator	!		1047865	0					
ANR	1048065	BitAndExpression	arg & OFFS_REG_MASK		1047865	1		&			
ANR	1048066	Identifier	arg		1047865	0					
ANR	1048067	Identifier	OFFS_REG_MASK		1047865	1					
ANR	1048068	IfStatement	if ( compiler -> cache_arg == arg )		1047865	7					
ANR	1048069	Condition	compiler -> cache_arg == arg	1589:5:50188:50213	1047865	0	True				
ANR	1048070	EqualityExpression	compiler -> cache_arg == arg		1047865	0		==			
ANR	1048071	PtrMemberAccess	compiler -> cache_arg		1047865	0					
ANR	1048072	Identifier	compiler		1047865	0					
ANR	1048073	Identifier	cache_arg		1047865	1					
ANR	1048074	Identifier	arg		1047865	1					
ANR	1048075	CompoundStatement		24:33:748:748	1047865	1					
ANR	1048076	ExpressionStatement	tmp = argw - compiler -> cache_argw	1590:2:50220:50253	1047865	0	True				
ANR	1048077	AssignmentExpression	tmp = argw - compiler -> cache_argw		1047865	0		=			
ANR	1048078	Identifier	tmp		1047865	0					
ANR	1048079	AdditiveExpression	argw - compiler -> cache_argw		1047865	1		-			
ANR	1048080	Identifier	argw		1047865	0					
ANR	1048081	PtrMemberAccess	compiler -> cache_argw		1047865	1					
ANR	1048082	Identifier	compiler		1047865	0					
ANR	1048083	Identifier	cache_argw		1047865	1					
ANR	1048084	IfStatement	if ( ! ( tmp & ~0x3fc ) )		1047865	1					
ANR	1048085	Condition	! ( tmp & ~0x3fc )	1591:6:50261:50275	1047865	0	True				
ANR	1048086	UnaryOperationExpression	! ( tmp & ~0x3fc )		1047865	0					
ANR	1048087	UnaryOperator	!		1047865	0					
ANR	1048088	BitAndExpression	tmp & ~0x3fc		1047865	1		&			
ANR	1048089	Identifier	tmp		1047865	0					
ANR	1048090	Identifier	~0x3fc		1047865	1					
ANR	1048091	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 ) ) ;"	1592:3:50281:50366	1047865	1	True				
ANR	1048092	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 ) )"		1047865	0					
ANR	1048093	Callee	push_inst32		1047865	0					
ANR	1048094	Identifier	push_inst32		1047865	0					
ANR	1048095	ArgumentList	compiler		1047865	1					
ANR	1048096	Argument	compiler		1047865	0					
ANR	1048097	Identifier	compiler		1047865	0					
ANR	1048098	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1047865	1					
ANR	1048099	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1047865	0		|			
ANR	1048100	Identifier	inst		1047865	0					
ANR	1048101	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1047865	1		|			
ANR	1048102	PrimaryExpression	0x800000		1047865	0					
ANR	1048103	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( tmp >> 2 )		1047865	1		|			
ANR	1048104	CallExpression	RN4 ( TMP_REG3 )		1047865	0					
ANR	1048105	Callee	RN4		1047865	0					
ANR	1048106	Identifier	RN4		1047865	0					
ANR	1048107	ArgumentList	TMP_REG3		1047865	1					
ANR	1048108	Argument	TMP_REG3		1047865	0					
ANR	1048109	Identifier	TMP_REG3		1047865	0					
ANR	1048110	InclusiveOrExpression	DD4 ( reg ) | ( tmp >> 2 )		1047865	1		|			
ANR	1048111	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048112	Callee	DD4		1047865	0					
ANR	1048113	Identifier	DD4		1047865	0					
ANR	1048114	ArgumentList	reg		1047865	1					
ANR	1048115	Argument	reg		1047865	0					
ANR	1048116	Identifier	reg		1047865	0					
ANR	1048117	ShiftExpression	tmp >> 2		1047865	1		>>			
ANR	1048118	Identifier	tmp		1047865	0					
ANR	1048119	PrimaryExpression	2		1047865	1					
ANR	1048120	IfStatement	if ( ! ( - tmp & ~0x3fc ) )		1047865	2					
ANR	1048121	Condition	! ( - tmp & ~0x3fc )	1593:6:50374:50389	1047865	0	True				
ANR	1048122	UnaryOperationExpression	! ( - tmp & ~0x3fc )		1047865	0					
ANR	1048123	UnaryOperator	!		1047865	0					
ANR	1048124	BitAndExpression	- tmp & ~0x3fc		1047865	1		&			
ANR	1048125	UnaryOperationExpression	- tmp		1047865	0					
ANR	1048126	UnaryOperator	-		1047865	0					
ANR	1048127	Identifier	tmp		1047865	1					
ANR	1048128	Identifier	~0x3fc		1047865	1					
ANR	1048129	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 ) ) ;"	1594:3:50395:50470	1047865	1	True				
ANR	1048130	CallExpression	"push_inst32 ( compiler , inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 ) )"		1047865	0					
ANR	1048131	Callee	push_inst32		1047865	0					
ANR	1048132	Identifier	push_inst32		1047865	0					
ANR	1048133	ArgumentList	compiler		1047865	1					
ANR	1048134	Argument	compiler		1047865	0					
ANR	1048135	Identifier	compiler		1047865	0					
ANR	1048136	Argument	inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1047865	1					
ANR	1048137	InclusiveOrExpression	inst | RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1047865	0		|			
ANR	1048138	Identifier	inst		1047865	0					
ANR	1048139	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg ) | ( - tmp >> 2 )		1047865	1		|			
ANR	1048140	CallExpression	RN4 ( TMP_REG3 )		1047865	0					
ANR	1048141	Callee	RN4		1047865	0					
ANR	1048142	Identifier	RN4		1047865	0					
ANR	1048143	ArgumentList	TMP_REG3		1047865	1					
ANR	1048144	Argument	TMP_REG3		1047865	0					
ANR	1048145	Identifier	TMP_REG3		1047865	0					
ANR	1048146	InclusiveOrExpression	DD4 ( reg ) | ( - tmp >> 2 )		1047865	1		|			
ANR	1048147	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048148	Callee	DD4		1047865	0					
ANR	1048149	Identifier	DD4		1047865	0					
ANR	1048150	ArgumentList	reg		1047865	1					
ANR	1048151	Argument	reg		1047865	0					
ANR	1048152	Identifier	reg		1047865	0					
ANR	1048153	ShiftExpression	- tmp >> 2		1047865	1		>>			
ANR	1048154	UnaryOperationExpression	- tmp		1047865	0					
ANR	1048155	UnaryOperator	-		1047865	0					
ANR	1048156	Identifier	tmp		1047865	1					
ANR	1048157	PrimaryExpression	2		1047865	1					
ANR	1048158	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED )"		1047865	3					
ANR	1048159	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"	1595:6:50478:50551	1047865	0	True				
ANR	1048160	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"		1047865	0		!=			
ANR	1048161	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp )"		1047865	0					
ANR	1048162	Callee	emit_set_delta		1047865	0					
ANR	1048163	Identifier	emit_set_delta		1047865	0					
ANR	1048164	ArgumentList	compiler		1047865	1					
ANR	1048165	Argument	compiler		1047865	0					
ANR	1048166	Identifier	compiler		1047865	0					
ANR	1048167	Argument	TMP_REG3		1047865	1					
ANR	1048168	Identifier	TMP_REG3		1047865	0					
ANR	1048169	Argument	TMP_REG3		1047865	2					
ANR	1048170	Identifier	TMP_REG3		1047865	0					
ANR	1048171	Argument	tmp		1047865	3					
ANR	1048172	Identifier	tmp		1047865	0					
ANR	1048173	Identifier	SLJIT_ERR_UNSUPPORTED		1047865	1					
ANR	1048174	CompoundStatement		30:82:1086:1086	1047865	1					
ANR	1048175	ExpressionStatement	FAIL_IF ( compiler -> error )	1596:3:50559:50583	1047865	0	True				
ANR	1048176	CallExpression	FAIL_IF ( compiler -> error )		1047865	0					
ANR	1048177	Callee	FAIL_IF		1047865	0					
ANR	1048178	Identifier	FAIL_IF		1047865	0					
ANR	1048179	ArgumentList	compiler -> error		1047865	1					
ANR	1048180	Argument	compiler -> error		1047865	0					
ANR	1048181	PtrMemberAccess	compiler -> error		1047865	0					
ANR	1048182	Identifier	compiler		1047865	0					
ANR	1048183	Identifier	error		1047865	1					
ANR	1048184	ExpressionStatement	compiler -> cache_argw = argw	1597:3:50588:50615	1047865	1	True				
ANR	1048185	AssignmentExpression	compiler -> cache_argw = argw		1047865	0		=			
ANR	1048186	PtrMemberAccess	compiler -> cache_argw		1047865	0					
ANR	1048187	Identifier	compiler		1047865	0					
ANR	1048188	Identifier	cache_argw		1047865	1					
ANR	1048189	Identifier	argw		1047865	1					
ANR	1048190	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) ) ;"	1598:3:50620:50692	1047865	2	True				
ANR	1048191	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) )"		1047865	0					
ANR	1048192	Callee	push_inst32		1047865	0					
ANR	1048193	Identifier	push_inst32		1047865	0					
ANR	1048194	ArgumentList	compiler		1047865	1					
ANR	1048195	Argument	compiler		1047865	0					
ANR	1048196	Identifier	compiler		1047865	0					
ANR	1048197	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1					
ANR	1048198	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	0		|			
ANR	1048199	Identifier	inst		1047865	0					
ANR	1048200	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1		|			
ANR	1048201	PrimaryExpression	0x800000		1047865	0					
ANR	1048202	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1		|			
ANR	1048203	CallExpression	RN4 ( TMP_REG3 )		1047865	0					
ANR	1048204	Callee	RN4		1047865	0					
ANR	1048205	Identifier	RN4		1047865	0					
ANR	1048206	ArgumentList	TMP_REG3		1047865	1					
ANR	1048207	Argument	TMP_REG3		1047865	0					
ANR	1048208	Identifier	TMP_REG3		1047865	0					
ANR	1048209	CallExpression	DD4 ( reg )		1047865	1					
ANR	1048210	Callee	DD4		1047865	0					
ANR	1048211	Identifier	DD4		1047865	0					
ANR	1048212	ArgumentList	reg		1047865	1					
ANR	1048213	Argument	reg		1047865	0					
ANR	1048214	Identifier	reg		1047865	0					
ANR	1048215	IfStatement	if ( arg & REG_MASK )		1047865	8					
ANR	1048216	Condition	arg & REG_MASK	1602:5:50707:50720	1047865	0	True				
ANR	1048217	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048218	Identifier	arg		1047865	0					
ANR	1048219	Identifier	REG_MASK		1047865	1					
ANR	1048220	CompoundStatement		37:21:1255:1255	1047865	1					
ANR	1048221	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED )"		1047865	0					
ANR	1048222	Condition	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"	1603:6:50731:50811	1047865	0	True				
ANR	1048223	EqualityExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"		1047865	0		!=			
ANR	1048224	CallExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw )"		1047865	0					
ANR	1048225	Callee	emit_set_delta		1047865	0					
ANR	1048226	Identifier	emit_set_delta		1047865	0					
ANR	1048227	ArgumentList	compiler		1047865	1					
ANR	1048228	Argument	compiler		1047865	0					
ANR	1048229	Identifier	compiler		1047865	0					
ANR	1048230	Argument	TMP_REG1		1047865	1					
ANR	1048231	Identifier	TMP_REG1		1047865	0					
ANR	1048232	Argument	arg & REG_MASK		1047865	2					
ANR	1048233	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048234	Identifier	arg		1047865	0					
ANR	1048235	Identifier	REG_MASK		1047865	1					
ANR	1048236	Argument	argw		1047865	3					
ANR	1048237	Identifier	argw		1047865	0					
ANR	1048238	Identifier	SLJIT_ERR_UNSUPPORTED		1047865	1					
ANR	1048239	CompoundStatement		38:89:1346:1346	1047865	1					
ANR	1048240	ExpressionStatement	FAIL_IF ( compiler -> error )	1604:3:50819:50843	1047865	0	True				
ANR	1048241	CallExpression	FAIL_IF ( compiler -> error )		1047865	0					
ANR	1048242	Callee	FAIL_IF		1047865	0					
ANR	1048243	Identifier	FAIL_IF		1047865	0					
ANR	1048244	ArgumentList	compiler -> error		1047865	1					
ANR	1048245	Argument	compiler -> error		1047865	0					
ANR	1048246	PtrMemberAccess	compiler -> error		1047865	0					
ANR	1048247	Identifier	compiler		1047865	0					
ANR	1048248	Identifier	error		1047865	1					
ANR	1048249	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) ) ;"	1605:3:50848:50920	1047865	1	True				
ANR	1048250	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) )"		1047865	0					
ANR	1048251	Callee	push_inst32		1047865	0					
ANR	1048252	Identifier	push_inst32		1047865	0					
ANR	1048253	ArgumentList	compiler		1047865	1					
ANR	1048254	Argument	compiler		1047865	0					
ANR	1048255	Identifier	compiler		1047865	0					
ANR	1048256	Argument	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1047865	1					
ANR	1048257	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1047865	0		|			
ANR	1048258	Identifier	inst		1047865	0					
ANR	1048259	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg )		1047865	1		|			
ANR	1048260	PrimaryExpression	0x800000		1047865	0					
ANR	1048261	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg )		1047865	1		|			
ANR	1048262	CallExpression	RN4 ( TMP_REG1 )		1047865	0					
ANR	1048263	Callee	RN4		1047865	0					
ANR	1048264	Identifier	RN4		1047865	0					
ANR	1048265	ArgumentList	TMP_REG1		1047865	1					
ANR	1048266	Argument	TMP_REG1		1047865	0					
ANR	1048267	Identifier	TMP_REG1		1047865	0					
ANR	1048268	CallExpression	DD4 ( reg )		1047865	1					
ANR	1048269	Callee	DD4		1047865	0					
ANR	1048270	Identifier	DD4		1047865	0					
ANR	1048271	ArgumentList	reg		1047865	1					
ANR	1048272	Argument	reg		1047865	0					
ANR	1048273	Identifier	reg		1047865	0					
ANR	1048274	ExpressionStatement	imm = get_imm ( argw & ~0x3fc )	1607:2:50928:50956	1047865	1	True				
ANR	1048275	AssignmentExpression	imm = get_imm ( argw & ~0x3fc )		1047865	0		=			
ANR	1048276	Identifier	imm		1047865	0					
ANR	1048277	CallExpression	get_imm ( argw & ~0x3fc )		1047865	1					
ANR	1048278	Callee	get_imm		1047865	0					
ANR	1048279	Identifier	get_imm		1047865	0					
ANR	1048280	ArgumentList	argw & ~0x3fc		1047865	1					
ANR	1048281	Argument	argw & ~0x3fc		1047865	0					
ANR	1048282	BitAndExpression	argw & ~0x3fc		1047865	0		&			
ANR	1048283	Identifier	argw		1047865	0					
ANR	1048284	Identifier	~0x3fc		1047865	1					
ANR	1048285	IfStatement	if ( imm != INVALID_IMM )		1047865	2					
ANR	1048286	Condition	imm != INVALID_IMM	1608:6:50964:50981	1047865	0	True				
ANR	1048287	EqualityExpression	imm != INVALID_IMM		1047865	0		!=			
ANR	1048288	Identifier	imm		1047865	0					
ANR	1048289	Identifier	INVALID_IMM		1047865	1					
ANR	1048290	CompoundStatement		43:26:1516:1516	1047865	1					
ANR	1048291	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"	1609:3:50989:51071	1047865	0	True				
ANR	1048292	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"		1047865	0					
ANR	1048293	Callee	FAIL_IF		1047865	0					
ANR	1048294	Identifier	FAIL_IF		1047865	0					
ANR	1048295	ArgumentList	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	1					
ANR	1048296	Argument	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	0					
ANR	1048297	CallExpression	"push_inst32 ( compiler , ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	0					
ANR	1048298	Callee	push_inst32		1047865	0					
ANR	1048299	Identifier	push_inst32		1047865	0					
ANR	1048300	ArgumentList	compiler		1047865	1					
ANR	1048301	Argument	compiler		1047865	0					
ANR	1048302	Identifier	compiler		1047865	0					
ANR	1048303	Argument	ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	1					
ANR	1048304	InclusiveOrExpression	ADD_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	0		|			
ANR	1048305	Identifier	ADD_WI		1047865	0					
ANR	1048306	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	1		|			
ANR	1048307	CallExpression	RD4 ( TMP_REG1 )		1047865	0					
ANR	1048308	Callee	RD4		1047865	0					
ANR	1048309	Identifier	RD4		1047865	0					
ANR	1048310	ArgumentList	TMP_REG1		1047865	1					
ANR	1048311	Argument	TMP_REG1		1047865	0					
ANR	1048312	Identifier	TMP_REG1		1047865	0					
ANR	1048313	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | imm		1047865	1		|			
ANR	1048314	CallExpression	RN4 ( arg & REG_MASK )		1047865	0					
ANR	1048315	Callee	RN4		1047865	0					
ANR	1048316	Identifier	RN4		1047865	0					
ANR	1048317	ArgumentList	arg & REG_MASK		1047865	1					
ANR	1048318	Argument	arg & REG_MASK		1047865	0					
ANR	1048319	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048320	Identifier	arg		1047865	0					
ANR	1048321	Identifier	REG_MASK		1047865	1					
ANR	1048322	Identifier	imm		1047865	1					
ANR	1048323	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) ) ;"	1610:3:51076:51172	1047865	1	True				
ANR	1048324	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) )"		1047865	0					
ANR	1048325	Callee	push_inst32		1047865	0					
ANR	1048326	Identifier	push_inst32		1047865	0					
ANR	1048327	ArgumentList	compiler		1047865	1					
ANR	1048328	Argument	compiler		1047865	0					
ANR	1048329	Identifier	compiler		1047865	0					
ANR	1048330	Argument	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1					
ANR	1048331	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	0		|			
ANR	1048332	Identifier	inst		1047865	0					
ANR	1048333	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1		|			
ANR	1048334	PrimaryExpression	0x800000		1047865	0					
ANR	1048335	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1		|			
ANR	1048336	CallExpression	RN4 ( TMP_REG1 )		1047865	0					
ANR	1048337	Callee	RN4		1047865	0					
ANR	1048338	Identifier	RN4		1047865	0					
ANR	1048339	ArgumentList	TMP_REG1		1047865	1					
ANR	1048340	Argument	TMP_REG1		1047865	0					
ANR	1048341	Identifier	TMP_REG1		1047865	0					
ANR	1048342	InclusiveOrExpression	DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1		|			
ANR	1048343	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048344	Callee	DD4		1047865	0					
ANR	1048345	Identifier	DD4		1047865	0					
ANR	1048346	ArgumentList	reg		1047865	1					
ANR	1048347	Argument	reg		1047865	0					
ANR	1048348	Identifier	reg		1047865	0					
ANR	1048349	ShiftExpression	( argw & 0x3fc ) >> 2		1047865	1		>>			
ANR	1048350	BitAndExpression	argw & 0x3fc		1047865	0		&			
ANR	1048351	Identifier	argw		1047865	0					
ANR	1048352	PrimaryExpression	0x3fc		1047865	1					
ANR	1048353	PrimaryExpression	2		1047865	1					
ANR	1048354	ExpressionStatement	imm = get_imm ( - argw & ~0x3fc )	1612:2:51180:51209	1047865	3	True				
ANR	1048355	AssignmentExpression	imm = get_imm ( - argw & ~0x3fc )		1047865	0		=			
ANR	1048356	Identifier	imm		1047865	0					
ANR	1048357	CallExpression	get_imm ( - argw & ~0x3fc )		1047865	1					
ANR	1048358	Callee	get_imm		1047865	0					
ANR	1048359	Identifier	get_imm		1047865	0					
ANR	1048360	ArgumentList	- argw & ~0x3fc		1047865	1					
ANR	1048361	Argument	- argw & ~0x3fc		1047865	0					
ANR	1048362	BitAndExpression	- argw & ~0x3fc		1047865	0		&			
ANR	1048363	UnaryOperationExpression	- argw		1047865	0					
ANR	1048364	UnaryOperator	-		1047865	0					
ANR	1048365	Identifier	argw		1047865	1					
ANR	1048366	Identifier	~0x3fc		1047865	1					
ANR	1048367	IfStatement	if ( imm != INVALID_IMM )		1047865	4					
ANR	1048368	Condition	imm != INVALID_IMM	1613:6:51217:51234	1047865	0	True				
ANR	1048369	EqualityExpression	imm != INVALID_IMM		1047865	0		!=			
ANR	1048370	Identifier	imm		1047865	0					
ANR	1048371	Identifier	INVALID_IMM		1047865	1					
ANR	1048372	CompoundStatement		48:26:1769:1769	1047865	1					
ANR	1048373	ExpressionStatement	argw = - argw	1614:3:51242:51254	1047865	0	True				
ANR	1048374	AssignmentExpression	argw = - argw		1047865	0		=			
ANR	1048375	Identifier	argw		1047865	0					
ANR	1048376	UnaryOperationExpression	- argw		1047865	1					
ANR	1048377	UnaryOperator	-		1047865	0					
ANR	1048378	Identifier	argw		1047865	1					
ANR	1048379	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"	1615:3:51259:51341	1047865	1	True				
ANR	1048380	CallExpression	"FAIL_IF ( push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm ) )"		1047865	0					
ANR	1048381	Callee	FAIL_IF		1047865	0					
ANR	1048382	Identifier	FAIL_IF		1047865	0					
ANR	1048383	ArgumentList	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	1					
ANR	1048384	Argument	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	0					
ANR	1048385	CallExpression	"push_inst32 ( compiler , SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm )"		1047865	0					
ANR	1048386	Callee	push_inst32		1047865	0					
ANR	1048387	Identifier	push_inst32		1047865	0					
ANR	1048388	ArgumentList	compiler		1047865	1					
ANR	1048389	Argument	compiler		1047865	0					
ANR	1048390	Identifier	compiler		1047865	0					
ANR	1048391	Argument	SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	1					
ANR	1048392	InclusiveOrExpression	SUB_WI | RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	0		|			
ANR	1048393	Identifier	SUB_WI		1047865	0					
ANR	1048394	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RN4 ( arg & REG_MASK ) | imm		1047865	1		|			
ANR	1048395	CallExpression	RD4 ( TMP_REG1 )		1047865	0					
ANR	1048396	Callee	RD4		1047865	0					
ANR	1048397	Identifier	RD4		1047865	0					
ANR	1048398	ArgumentList	TMP_REG1		1047865	1					
ANR	1048399	Argument	TMP_REG1		1047865	0					
ANR	1048400	Identifier	TMP_REG1		1047865	0					
ANR	1048401	InclusiveOrExpression	RN4 ( arg & REG_MASK ) | imm		1047865	1		|			
ANR	1048402	CallExpression	RN4 ( arg & REG_MASK )		1047865	0					
ANR	1048403	Callee	RN4		1047865	0					
ANR	1048404	Identifier	RN4		1047865	0					
ANR	1048405	ArgumentList	arg & REG_MASK		1047865	1					
ANR	1048406	Argument	arg & REG_MASK		1047865	0					
ANR	1048407	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048408	Identifier	arg		1047865	0					
ANR	1048409	Identifier	REG_MASK		1047865	1					
ANR	1048410	Identifier	imm		1047865	1					
ANR	1048411	ReturnStatement	"return push_inst32 ( compiler , inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) ) ;"	1616:3:51346:51431	1047865	2	True				
ANR	1048412	CallExpression	"push_inst32 ( compiler , inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 ) )"		1047865	0					
ANR	1048413	Callee	push_inst32		1047865	0					
ANR	1048414	Identifier	push_inst32		1047865	0					
ANR	1048415	ArgumentList	compiler		1047865	1					
ANR	1048416	Argument	compiler		1047865	0					
ANR	1048417	Identifier	compiler		1047865	0					
ANR	1048418	Argument	inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1					
ANR	1048419	InclusiveOrExpression	inst | RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	0		|			
ANR	1048420	Identifier	inst		1047865	0					
ANR	1048421	InclusiveOrExpression	RN4 ( TMP_REG1 ) | DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1		|			
ANR	1048422	CallExpression	RN4 ( TMP_REG1 )		1047865	0					
ANR	1048423	Callee	RN4		1047865	0					
ANR	1048424	Identifier	RN4		1047865	0					
ANR	1048425	ArgumentList	TMP_REG1		1047865	1					
ANR	1048426	Argument	TMP_REG1		1047865	0					
ANR	1048427	Identifier	TMP_REG1		1047865	0					
ANR	1048428	InclusiveOrExpression	DD4 ( reg ) | ( ( argw & 0x3fc ) >> 2 )		1047865	1		|			
ANR	1048429	CallExpression	DD4 ( reg )		1047865	0					
ANR	1048430	Callee	DD4		1047865	0					
ANR	1048431	Identifier	DD4		1047865	0					
ANR	1048432	ArgumentList	reg		1047865	1					
ANR	1048433	Argument	reg		1047865	0					
ANR	1048434	Identifier	reg		1047865	0					
ANR	1048435	ShiftExpression	( argw & 0x3fc ) >> 2		1047865	1		>>			
ANR	1048436	BitAndExpression	argw & 0x3fc		1047865	0		&			
ANR	1048437	Identifier	argw		1047865	0					
ANR	1048438	PrimaryExpression	0x3fc		1047865	1					
ANR	1048439	PrimaryExpression	2		1047865	1					
ANR	1048440	ExpressionStatement	compiler -> cache_arg = arg	1620:1:51442:51467	1047865	9	True				
ANR	1048441	AssignmentExpression	compiler -> cache_arg = arg		1047865	0		=			
ANR	1048442	PtrMemberAccess	compiler -> cache_arg		1047865	0					
ANR	1048443	Identifier	compiler		1047865	0					
ANR	1048444	Identifier	cache_arg		1047865	1					
ANR	1048445	Identifier	arg		1047865	1					
ANR	1048446	ExpressionStatement	compiler -> cache_argw = argw	1621:1:51470:51497	1047865	10	True				
ANR	1048447	AssignmentExpression	compiler -> cache_argw = argw		1047865	0		=			
ANR	1048448	PtrMemberAccess	compiler -> cache_argw		1047865	0					
ANR	1048449	Identifier	compiler		1047865	0					
ANR	1048450	Identifier	cache_argw		1047865	1					
ANR	1048451	Identifier	argw		1047865	1					
ANR	1048452	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1623:1:51501:51550	1047865	11	True				
ANR	1048453	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1047865	0					
ANR	1048454	Callee	FAIL_IF		1047865	0					
ANR	1048455	Identifier	FAIL_IF		1047865	0					
ANR	1048456	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1047865	1					
ANR	1048457	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1047865	0					
ANR	1048458	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1047865	0					
ANR	1048459	Callee	load_immediate		1047865	0					
ANR	1048460	Identifier	load_immediate		1047865	0					
ANR	1048461	ArgumentList	compiler		1047865	1					
ANR	1048462	Argument	compiler		1047865	0					
ANR	1048463	Identifier	compiler		1047865	0					
ANR	1048464	Argument	TMP_REG3		1047865	1					
ANR	1048465	Identifier	TMP_REG3		1047865	0					
ANR	1048466	Argument	argw		1047865	2					
ANR	1048467	Identifier	argw		1047865	0					
ANR	1048468	IfStatement	if ( arg & REG_MASK )		1047865	12					
ANR	1048469	Condition	arg & REG_MASK	1624:5:51557:51570	1047865	0	True				
ANR	1048470	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048471	Identifier	arg		1047865	0					
ANR	1048472	Identifier	REG_MASK		1047865	1					
ANR	1048473	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) ) )"	1625:2:51575:51651	1047865	1	True				
ANR	1048474	CallExpression	"FAIL_IF ( push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) ) )"		1047865	0					
ANR	1048475	Callee	FAIL_IF		1047865	0					
ANR	1048476	Identifier	FAIL_IF		1047865	0					
ANR	1048477	ArgumentList	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1047865	1					
ANR	1048478	Argument	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1047865	0					
ANR	1048479	CallExpression	"push_inst16 ( compiler , ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) ) )"		1047865	0					
ANR	1048480	Callee	push_inst16		1047865	0					
ANR	1048481	Identifier	push_inst16		1047865	0					
ANR	1048482	ArgumentList	compiler		1047865	1					
ANR	1048483	Argument	compiler		1047865	0					
ANR	1048484	Identifier	compiler		1047865	0					
ANR	1048485	Argument	"ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1047865	1					
ANR	1048486	InclusiveOrExpression	"ADD | SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1047865	0		|			
ANR	1048487	Identifier	ADD		1047865	0					
ANR	1048488	CallExpression	"SET_REGS44 ( TMP_REG3 , ( arg & REG_MASK ) )"		1047865	1					
ANR	1048489	Callee	SET_REGS44		1047865	0					
ANR	1048490	Identifier	SET_REGS44		1047865	0					
ANR	1048491	ArgumentList	TMP_REG3		1047865	1					
ANR	1048492	Argument	TMP_REG3		1047865	0					
ANR	1048493	Identifier	TMP_REG3		1047865	0					
ANR	1048494	Argument	arg & REG_MASK		1047865	1					
ANR	1048495	BitAndExpression	arg & REG_MASK		1047865	0		&			
ANR	1048496	Identifier	arg		1047865	0					
ANR	1048497	Identifier	REG_MASK		1047865	1					
ANR	1048498	ReturnStatement	"return push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) ) ;"	1626:1:51654:51726	1047865	13	True				
ANR	1048499	CallExpression	"push_inst32 ( compiler , inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg ) )"		1047865	0					
ANR	1048500	Callee	push_inst32		1047865	0					
ANR	1048501	Identifier	push_inst32		1047865	0					
ANR	1048502	ArgumentList	compiler		1047865	1					
ANR	1048503	Argument	compiler		1047865	0					
ANR	1048504	Identifier	compiler		1047865	0					
ANR	1048505	Argument	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1					
ANR	1048506	InclusiveOrExpression	inst | 0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	0		|			
ANR	1048507	Identifier	inst		1047865	0					
ANR	1048508	InclusiveOrExpression	0x800000 | RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1		|			
ANR	1048509	PrimaryExpression	0x800000		1047865	0					
ANR	1048510	InclusiveOrExpression	RN4 ( TMP_REG3 ) | DD4 ( reg )		1047865	1		|			
ANR	1048511	CallExpression	RN4 ( TMP_REG3 )		1047865	0					
ANR	1048512	Callee	RN4		1047865	0					
ANR	1048513	Identifier	RN4		1047865	0					
ANR	1048514	ArgumentList	TMP_REG3		1047865	1					
ANR	1048515	Argument	TMP_REG3		1047865	0					
ANR	1048516	Identifier	TMP_REG3		1047865	0					
ANR	1048517	CallExpression	DD4 ( reg )		1047865	1					
ANR	1048518	Callee	DD4		1047865	0					
ANR	1048519	Identifier	DD4		1047865	0					
ANR	1048520	ArgumentList	reg		1047865	1					
ANR	1048521	Argument	reg		1047865	0					
ANR	1048522	Identifier	reg		1047865	0					
ANR	1048523	ReturnType	static sljit_si		1047865	1					
ANR	1048524	Identifier	emit_fop_mem		1047865	2					
ANR	1048525	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1047865	3					
ANR	1048526	Parameter	struct sljit_compiler * compiler	1565:29:49375:49405	1047865	0	True				
ANR	1048527	ParameterType	struct sljit_compiler *		1047865	0					
ANR	1048528	Identifier	compiler		1047865	1					
ANR	1048529	Parameter	sljit_si flags	1565:62:49408:49421	1047865	1	True				
ANR	1048530	ParameterType	sljit_si		1047865	0					
ANR	1048531	Identifier	flags		1047865	1					
ANR	1048532	Parameter	sljit_si reg	1565:78:49424:49435	1047865	2	True				
ANR	1048533	ParameterType	sljit_si		1047865	0					
ANR	1048534	Identifier	reg		1047865	1					
ANR	1048535	Parameter	sljit_si arg	1565:92:49438:49449	1047865	3	True				
ANR	1048536	ParameterType	sljit_si		1047865	0					
ANR	1048537	Identifier	arg		1047865	1					
ANR	1048538	Parameter	sljit_sw argw	1565:106:49452:49464	1047865	4	True				
ANR	1048539	ParameterType	sljit_sw		1047865	0					
ANR	1048540	Identifier	argw		1047865	1					
ANR	1048541	CFGEntryNode	ENTRY		1047865		True				
ANR	1048542	CFGExitNode	EXIT		1047865		True				
ANR	1048543	Symbol	TMP_REG3		1047865						
ANR	1048544	Symbol	TMP_REG2		1047865						
ANR	1048545	Symbol	ADD		1047865						
ANR	1048546	Symbol	compiler -> cache_argw		1047865						
ANR	1048547	Symbol	TMP_REG1		1047865						
ANR	1048548	Symbol	RD4		1047865						
ANR	1048549	Symbol	SLJIT_MEM		1047865						
ANR	1048550	Symbol	push_inst16		1047865						
ANR	1048551	Symbol	flags		1047865						
ANR	1048552	Symbol	imm		1047865						
ANR	1048553	Symbol	* compiler		1047865						
ANR	1048554	Symbol	argw		1047865						
ANR	1048555	Symbol	emit_set_delta		1047865						
ANR	1048556	Symbol	SET_REGS44		1047865						
ANR	1048557	Symbol	load_immediate		1047865						
ANR	1048558	Symbol	reg		1047865						
ANR	1048559	Symbol	tmp		1047865						
ANR	1048560	Symbol	INVALID_IMM		1047865						
ANR	1048561	Symbol	arg		1047865						
ANR	1048562	Symbol	RM4		1047865						
ANR	1048563	Symbol	ADD_WI		1047865						
ANR	1048564	Symbol	compiler		1047865						
ANR	1048565	Symbol	push_inst32		1047865						
ANR	1048566	Symbol	REG_MASK		1047865						
ANR	1048567	Symbol	compiler -> cache_arg		1047865						
ANR	1048568	Symbol	SLJIT_SINGLE_OP		1047865						
ANR	1048569	Symbol	OFFS_REG_MASK		1047865						
ANR	1048570	Symbol	ADD_W		1047865						
ANR	1048571	Symbol	get_imm		1047865						
ANR	1048572	Symbol	VSTR_F32		1047865						
ANR	1048573	Symbol	~0x3fc		1047865						
ANR	1048574	Symbol	FPU_LOAD		1047865						
ANR	1048575	Symbol	DD4		1047865						
ANR	1048576	Symbol	inst		1047865						
ANR	1048577	Symbol	RN4		1047865						
ANR	1048578	Symbol	OFFS_REG		1047865						
ANR	1048579	Symbol	compiler -> error		1047865						
ANR	1048580	Symbol	SUB_WI		1047865						
ANR	1048581	Symbol	SLJIT_UNLIKELY		1047865						
ANR	1048582	Symbol	SLJIT_ERR_UNSUPPORTED		1047865						
ANR	1048583	Function	sljit_emit_fop1_convw_fromd	1629:0:51731:52398							
ANR	1048584	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1048583	0					
ANR	1048585	CompoundStatement		1632:0:51894:52398	1048583	0					
ANR	1048586	IfStatement	if ( src & SLJIT_MEM )		1048583	0					
ANR	1048587	Condition	src & SLJIT_MEM	1633:5:51901:51915	1048583	0	True				
ANR	1048588	BitAndExpression	src & SLJIT_MEM		1048583	0		&			
ANR	1048589	Identifier	src		1048583	0					
ANR	1048590	Identifier	SLJIT_MEM		1048583	1					
ANR	1048591	CompoundStatement		2:22:23:23	1048583	1					
ANR	1048592	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"	1634:2:51922:52010	1048583	0	True				
ANR	1048593	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1048583	0					
ANR	1048594	Callee	FAIL_IF		1048583	0					
ANR	1048595	Identifier	FAIL_IF		1048583	0					
ANR	1048596	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1048583	1					
ANR	1048597	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1048583	0					
ANR	1048598	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1048583	0					
ANR	1048599	Callee	emit_fop_mem		1048583	0					
ANR	1048600	Identifier	emit_fop_mem		1048583	0					
ANR	1048601	ArgumentList	compiler		1048583	1					
ANR	1048602	Argument	compiler		1048583	0					
ANR	1048603	Identifier	compiler		1048583	0					
ANR	1048604	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048583	1					
ANR	1048605	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048583	0		|			
ANR	1048606	BitAndExpression	op & SLJIT_SINGLE_OP		1048583	0		&			
ANR	1048607	Identifier	op		1048583	0					
ANR	1048608	Identifier	SLJIT_SINGLE_OP		1048583	1					
ANR	1048609	Identifier	FPU_LOAD		1048583	1					
ANR	1048610	Argument	TMP_FREG1		1048583	2					
ANR	1048611	Identifier	TMP_FREG1		1048583	0					
ANR	1048612	Argument	src		1048583	3					
ANR	1048613	Identifier	src		1048583	0					
ANR	1048614	Argument	srcw		1048583	4					
ANR	1048615	Identifier	srcw		1048583	0					
ANR	1048616	ExpressionStatement	src = TMP_FREG1	1635:2:52014:52029	1048583	1	True				
ANR	1048617	AssignmentExpression	src = TMP_FREG1		1048583	0		=			
ANR	1048618	Identifier	src		1048583	0					
ANR	1048619	Identifier	TMP_FREG1		1048583	1					
ANR	1048620	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) ) )"	1638:1:52036:52133	1048583	1	True				
ANR	1048621	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) ) )"		1048583	0					
ANR	1048622	Callee	FAIL_IF		1048583	0					
ANR	1048623	Identifier	FAIL_IF		1048583	0					
ANR	1048624	ArgumentList	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1048583	1					
ANR	1048625	Argument	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1048583	0					
ANR	1048626	CallExpression	"push_inst32 ( compiler , VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src ) )"		1048583	0					
ANR	1048627	Callee	push_inst32		1048583	0					
ANR	1048628	Identifier	push_inst32		1048583	0					
ANR	1048629	ArgumentList	compiler		1048583	1					
ANR	1048630	Argument	compiler		1048583	0					
ANR	1048631	Identifier	compiler		1048583	0					
ANR	1048632	Argument	VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1048583	1					
ANR	1048633	InclusiveOrExpression	VCVT_S32_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1048583	0		|			
ANR	1048634	Identifier	VCVT_S32_F32		1048583	0					
ANR	1048635	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( TMP_FREG1 ) | DM4 ( src )		1048583	1		|			
ANR	1048636	BitAndExpression	op & SLJIT_SINGLE_OP		1048583	0		&			
ANR	1048637	Identifier	op		1048583	0					
ANR	1048638	Identifier	SLJIT_SINGLE_OP		1048583	1					
ANR	1048639	InclusiveOrExpression	DD4 ( TMP_FREG1 ) | DM4 ( src )		1048583	1		|			
ANR	1048640	CallExpression	DD4 ( TMP_FREG1 )		1048583	0					
ANR	1048641	Callee	DD4		1048583	0					
ANR	1048642	Identifier	DD4		1048583	0					
ANR	1048643	ArgumentList	TMP_FREG1		1048583	1					
ANR	1048644	Argument	TMP_FREG1		1048583	0					
ANR	1048645	Identifier	TMP_FREG1		1048583	0					
ANR	1048646	CallExpression	DM4 ( src )		1048583	1					
ANR	1048647	Callee	DM4		1048583	0					
ANR	1048648	Identifier	DM4		1048583	0					
ANR	1048649	ArgumentList	src		1048583	1					
ANR	1048650	Argument	src		1048583	0					
ANR	1048651	Identifier	src		1048583	0					
ANR	1048652	IfStatement	if ( dst == SLJIT_UNUSED )		1048583	2					
ANR	1048653	Condition	dst == SLJIT_UNUSED	1640:5:52141:52159	1048583	0	True				
ANR	1048654	EqualityExpression	dst == SLJIT_UNUSED		1048583	0		==			
ANR	1048655	Identifier	dst		1048583	0					
ANR	1048656	Identifier	SLJIT_UNUSED		1048583	1					
ANR	1048657	ReturnStatement	return SLJIT_SUCCESS ;	1641:2:52164:52184	1048583	1	True				
ANR	1048658	Identifier	SLJIT_SUCCESS		1048583	0					
ANR	1048659	IfStatement	if ( FAST_IS_REG ( dst ) )		1048583	3					
ANR	1048660	Condition	FAST_IS_REG ( dst )	1643:5:52192:52207	1048583	0	True				
ANR	1048661	CallExpression	FAST_IS_REG ( dst )		1048583	0					
ANR	1048662	Callee	FAST_IS_REG		1048583	0					
ANR	1048663	Identifier	FAST_IS_REG		1048583	0					
ANR	1048664	ArgumentList	dst		1048583	1					
ANR	1048665	Argument	dst		1048583	0					
ANR	1048666	Identifier	dst		1048583	0					
ANR	1048667	ReturnStatement	"return push_inst32 ( compiler , VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 ) ) ;"	1644:2:52212:52286	1048583	1	True				
ANR	1048668	CallExpression	"push_inst32 ( compiler , VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 ) )"		1048583	0					
ANR	1048669	Callee	push_inst32		1048583	0					
ANR	1048670	Identifier	push_inst32		1048583	0					
ANR	1048671	ArgumentList	compiler		1048583	1					
ANR	1048672	Argument	compiler		1048583	0					
ANR	1048673	Identifier	compiler		1048583	0					
ANR	1048674	Argument	VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1048583	1					
ANR	1048675	InclusiveOrExpression	VMOV | ( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1048583	0		|			
ANR	1048676	Identifier	VMOV		1048583	0					
ANR	1048677	InclusiveOrExpression	( 1 << 20 ) | RT4 ( dst ) | DN4 ( TMP_FREG1 )		1048583	1		|			
ANR	1048678	ShiftExpression	1 << 20		1048583	0		<<			
ANR	1048679	PrimaryExpression	1		1048583	0					
ANR	1048680	PrimaryExpression	20		1048583	1					
ANR	1048681	InclusiveOrExpression	RT4 ( dst ) | DN4 ( TMP_FREG1 )		1048583	1		|			
ANR	1048682	CallExpression	RT4 ( dst )		1048583	0					
ANR	1048683	Callee	RT4		1048583	0					
ANR	1048684	Identifier	RT4		1048583	0					
ANR	1048685	ArgumentList	dst		1048583	1					
ANR	1048686	Argument	dst		1048583	0					
ANR	1048687	Identifier	dst		1048583	0					
ANR	1048688	CallExpression	DN4 ( TMP_FREG1 )		1048583	1					
ANR	1048689	Callee	DN4		1048583	0					
ANR	1048690	Identifier	DN4		1048583	0					
ANR	1048691	ArgumentList	TMP_FREG1		1048583	1					
ANR	1048692	Argument	TMP_FREG1		1048583	0					
ANR	1048693	Identifier	TMP_FREG1		1048583	0					
ANR	1048694	ReturnStatement	"return emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw ) ;"	1647:1:52342:52396	1048583	4	True				
ANR	1048695	CallExpression	"emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw )"		1048583	0					
ANR	1048696	Callee	emit_fop_mem		1048583	0					
ANR	1048697	Identifier	emit_fop_mem		1048583	0					
ANR	1048698	ArgumentList	compiler		1048583	1					
ANR	1048699	Argument	compiler		1048583	0					
ANR	1048700	Identifier	compiler		1048583	0					
ANR	1048701	Argument	0		1048583	1					
ANR	1048702	PrimaryExpression	0		1048583	0					
ANR	1048703	Argument	TMP_FREG1		1048583	2					
ANR	1048704	Identifier	TMP_FREG1		1048583	0					
ANR	1048705	Argument	dst		1048583	3					
ANR	1048706	Identifier	dst		1048583	0					
ANR	1048707	Argument	dstw		1048583	4					
ANR	1048708	Identifier	dstw		1048583	0					
ANR	1048709	ReturnType	static SLJIT_INLINE sljit_si		1048583	1					
ANR	1048710	Identifier	sljit_emit_fop1_convw_fromd		1048583	2					
ANR	1048711	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1048583	3					
ANR	1048712	Parameter	struct sljit_compiler * compiler	1629:57:51788:51818	1048583	0	True				
ANR	1048713	ParameterType	struct sljit_compiler *		1048583	0					
ANR	1048714	Identifier	compiler		1048583	1					
ANR	1048715	Parameter	sljit_si op	1629:90:51821:51831	1048583	1	True				
ANR	1048716	ParameterType	sljit_si		1048583	0					
ANR	1048717	Identifier	op		1048583	1					
ANR	1048718	Parameter	sljit_si dst	1630:1:51835:51846	1048583	2	True				
ANR	1048719	ParameterType	sljit_si		1048583	0					
ANR	1048720	Identifier	dst		1048583	1					
ANR	1048721	Parameter	sljit_sw dstw	1630:15:51849:51861	1048583	3	True				
ANR	1048722	ParameterType	sljit_sw		1048583	0					
ANR	1048723	Identifier	dstw		1048583	1					
ANR	1048724	Parameter	sljit_si src	1631:1:51865:51876	1048583	4	True				
ANR	1048725	ParameterType	sljit_si		1048583	0					
ANR	1048726	Identifier	src		1048583	1					
ANR	1048727	Parameter	sljit_sw srcw	1631:15:51879:51891	1048583	5	True				
ANR	1048728	ParameterType	sljit_sw		1048583	0					
ANR	1048729	Identifier	srcw		1048583	1					
ANR	1048730	CFGEntryNode	ENTRY		1048583		True				
ANR	1048731	CFGExitNode	EXIT		1048583		True				
ANR	1048732	Symbol	op		1048583						
ANR	1048733	Symbol	FAST_IS_REG		1048583						
ANR	1048734	Symbol	dst		1048583						
ANR	1048735	Symbol	src		1048583						
ANR	1048736	Symbol	TMP_FREG1		1048583						
ANR	1048737	Symbol	srcw		1048583						
ANR	1048738	Symbol	SLJIT_MEM		1048583						
ANR	1048739	Symbol	SLJIT_SINGLE_OP		1048583						
ANR	1048740	Symbol	DM4		1048583						
ANR	1048741	Symbol	SLJIT_SUCCESS		1048583						
ANR	1048742	Symbol	DN4		1048583						
ANR	1048743	Symbol	RT4		1048583						
ANR	1048744	Symbol	SLJIT_UNUSED		1048583						
ANR	1048745	Symbol	FPU_LOAD		1048583						
ANR	1048746	Symbol	emit_fop_mem		1048583						
ANR	1048747	Symbol	DD4		1048583						
ANR	1048748	Symbol	VCVT_S32_F32		1048583						
ANR	1048749	Symbol	VMOV		1048583						
ANR	1048750	Symbol	compiler		1048583						
ANR	1048751	Symbol	dstw		1048583						
ANR	1048752	Symbol	push_inst32		1048583						
ANR	1048753	Function	sljit_emit_fop1_convd_fromw	1650:0:52401:53228							
ANR	1048754	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1048753	0					
ANR	1048755	CompoundStatement		1653:0:52564:53228	1048753	0					
ANR	1048756	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	1654:1:52567:52618	1048753	0	True				
ANR	1048757	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1048753	0					
ANR	1048758	IdentifierDeclType	sljit_si		1048753	0					
ANR	1048759	Identifier	dst_r		1048753	1					
ANR	1048760	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1048753	2		=			
ANR	1048761	Identifier	dst_r		1048753	0					
ANR	1048762	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1048753	1					
ANR	1048763	Condition	FAST_IS_REG ( dst )		1048753	0					
ANR	1048764	CallExpression	FAST_IS_REG ( dst )		1048753	0					
ANR	1048765	Callee	FAST_IS_REG		1048753	0					
ANR	1048766	Identifier	FAST_IS_REG		1048753	0					
ANR	1048767	ArgumentList	dst		1048753	1					
ANR	1048768	Argument	dst		1048753	0					
ANR	1048769	Identifier	dst		1048753	0					
ANR	1048770	Identifier	dst		1048753	1					
ANR	1048771	Identifier	TMP_FREG1		1048753	2					
ANR	1048772	IfStatement	if ( FAST_IS_REG ( src ) )		1048753	1					
ANR	1048773	Condition	FAST_IS_REG ( src )	1656:5:52626:52641	1048753	0	True				
ANR	1048774	CallExpression	FAST_IS_REG ( src )		1048753	0					
ANR	1048775	Callee	FAST_IS_REG		1048753	0					
ANR	1048776	Identifier	FAST_IS_REG		1048753	0					
ANR	1048777	ArgumentList	src		1048753	1					
ANR	1048778	Argument	src		1048753	0					
ANR	1048779	Identifier	src		1048753	0					
ANR	1048780	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) ) )"	1657:2:52646:52710	1048753	1	True				
ANR	1048781	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) ) )"		1048753	0					
ANR	1048782	Callee	FAIL_IF		1048753	0					
ANR	1048783	Identifier	FAIL_IF		1048753	0					
ANR	1048784	ArgumentList	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1048753	1					
ANR	1048785	Argument	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048786	CallExpression	"push_inst32 ( compiler , VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048787	Callee	push_inst32		1048753	0					
ANR	1048788	Identifier	push_inst32		1048753	0					
ANR	1048789	ArgumentList	compiler		1048753	1					
ANR	1048790	Argument	compiler		1048753	0					
ANR	1048791	Identifier	compiler		1048753	0					
ANR	1048792	Argument	VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 )		1048753	1					
ANR	1048793	InclusiveOrExpression	VMOV | RT4 ( src ) | DN4 ( TMP_FREG1 )		1048753	0		|			
ANR	1048794	Identifier	VMOV		1048753	0					
ANR	1048795	InclusiveOrExpression	RT4 ( src ) | DN4 ( TMP_FREG1 )		1048753	1		|			
ANR	1048796	CallExpression	RT4 ( src )		1048753	0					
ANR	1048797	Callee	RT4		1048753	0					
ANR	1048798	Identifier	RT4		1048753	0					
ANR	1048799	ArgumentList	src		1048753	1					
ANR	1048800	Argument	src		1048753	0					
ANR	1048801	Identifier	src		1048753	0					
ANR	1048802	CallExpression	DN4 ( TMP_FREG1 )		1048753	1					
ANR	1048803	Callee	DN4		1048753	0					
ANR	1048804	Identifier	DN4		1048753	0					
ANR	1048805	ArgumentList	TMP_FREG1		1048753	1					
ANR	1048806	Argument	TMP_FREG1		1048753	0					
ANR	1048807	Identifier	TMP_FREG1		1048753	0					
ANR	1048808	ElseStatement	else		1048753	0					
ANR	1048809	IfStatement	if ( src & SLJIT_MEM )		1048753	0					
ANR	1048810	Condition	src & SLJIT_MEM	1658:10:52722:52736	1048753	0	True				
ANR	1048811	BitAndExpression	src & SLJIT_MEM		1048753	0		&			
ANR	1048812	Identifier	src		1048753	0					
ANR	1048813	Identifier	SLJIT_MEM		1048753	1					
ANR	1048814	CompoundStatement		6:27:174:174	1048753	1					
ANR	1048815	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"	1660:2:52795:52858	1048753	0	True				
ANR	1048816	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1048753	0					
ANR	1048817	Callee	FAIL_IF		1048753	0					
ANR	1048818	Identifier	FAIL_IF		1048753	0					
ANR	1048819	ArgumentList	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1048753	1					
ANR	1048820	Argument	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1048753	0					
ANR	1048821	CallExpression	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1048753	0					
ANR	1048822	Callee	emit_fop_mem		1048753	0					
ANR	1048823	Identifier	emit_fop_mem		1048753	0					
ANR	1048824	ArgumentList	compiler		1048753	1					
ANR	1048825	Argument	compiler		1048753	0					
ANR	1048826	Identifier	compiler		1048753	0					
ANR	1048827	Argument	FPU_LOAD		1048753	1					
ANR	1048828	Identifier	FPU_LOAD		1048753	0					
ANR	1048829	Argument	TMP_FREG1		1048753	2					
ANR	1048830	Identifier	TMP_FREG1		1048753	0					
ANR	1048831	Argument	src		1048753	3					
ANR	1048832	Identifier	src		1048753	0					
ANR	1048833	Argument	srcw		1048753	4					
ANR	1048834	Identifier	srcw		1048753	0					
ANR	1048835	ElseStatement	else		1048753	0					
ANR	1048836	CompoundStatement		10:6:304:304	1048753	0					
ANR	1048837	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1663:2:52873:52922	1048753	0	True				
ANR	1048838	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1048753	0					
ANR	1048839	Callee	FAIL_IF		1048753	0					
ANR	1048840	Identifier	FAIL_IF		1048753	0					
ANR	1048841	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1048753	1					
ANR	1048842	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1048753	0					
ANR	1048843	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1048753	0					
ANR	1048844	Callee	load_immediate		1048753	0					
ANR	1048845	Identifier	load_immediate		1048753	0					
ANR	1048846	ArgumentList	compiler		1048753	1					
ANR	1048847	Argument	compiler		1048753	0					
ANR	1048848	Identifier	compiler		1048753	0					
ANR	1048849	Argument	TMP_REG1		1048753	1					
ANR	1048850	Identifier	TMP_REG1		1048753	0					
ANR	1048851	Argument	srcw		1048753	2					
ANR	1048852	Identifier	srcw		1048753	0					
ANR	1048853	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) ) )"	1664:2:52926:52995	1048753	1	True				
ANR	1048854	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) ) )"		1048753	0					
ANR	1048855	Callee	FAIL_IF		1048753	0					
ANR	1048856	Identifier	FAIL_IF		1048753	0					
ANR	1048857	ArgumentList	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1048753	1					
ANR	1048858	Argument	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048859	CallExpression	"push_inst32 ( compiler , VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048860	Callee	push_inst32		1048753	0					
ANR	1048861	Identifier	push_inst32		1048753	0					
ANR	1048862	ArgumentList	compiler		1048753	1					
ANR	1048863	Argument	compiler		1048753	0					
ANR	1048864	Identifier	compiler		1048753	0					
ANR	1048865	Argument	VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1048753	1					
ANR	1048866	InclusiveOrExpression	VMOV | RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1048753	0		|			
ANR	1048867	Identifier	VMOV		1048753	0					
ANR	1048868	InclusiveOrExpression	RT4 ( TMP_REG1 ) | DN4 ( TMP_FREG1 )		1048753	1		|			
ANR	1048869	CallExpression	RT4 ( TMP_REG1 )		1048753	0					
ANR	1048870	Callee	RT4		1048753	0					
ANR	1048871	Identifier	RT4		1048753	0					
ANR	1048872	ArgumentList	TMP_REG1		1048753	1					
ANR	1048873	Argument	TMP_REG1		1048753	0					
ANR	1048874	Identifier	TMP_REG1		1048753	0					
ANR	1048875	CallExpression	DN4 ( TMP_FREG1 )		1048753	1					
ANR	1048876	Callee	DN4		1048753	0					
ANR	1048877	Identifier	DN4		1048753	0					
ANR	1048878	ArgumentList	TMP_FREG1		1048753	1					
ANR	1048879	Argument	TMP_FREG1		1048753	0					
ANR	1048880	Identifier	TMP_FREG1		1048753	0					
ANR	1048881	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) ) )"	1667:1:53002:53101	1048753	2	True				
ANR	1048882	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) ) )"		1048753	0					
ANR	1048883	Callee	FAIL_IF		1048753	0					
ANR	1048884	Identifier	FAIL_IF		1048753	0					
ANR	1048885	ArgumentList	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1048753	1					
ANR	1048886	Argument	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048887	CallExpression	"push_inst32 ( compiler , VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 ) )"		1048753	0					
ANR	1048888	Callee	push_inst32		1048753	0					
ANR	1048889	Identifier	push_inst32		1048753	0					
ANR	1048890	ArgumentList	compiler		1048753	1					
ANR	1048891	Argument	compiler		1048753	0					
ANR	1048892	Identifier	compiler		1048753	0					
ANR	1048893	Argument	VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1048753	1					
ANR	1048894	InclusiveOrExpression	VCVT_F32_S32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1048753	0		|			
ANR	1048895	Identifier	VCVT_F32_S32		1048753	0					
ANR	1048896	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1048753	1		|			
ANR	1048897	BitAndExpression	op & SLJIT_SINGLE_OP		1048753	0		&			
ANR	1048898	Identifier	op		1048753	0					
ANR	1048899	Identifier	SLJIT_SINGLE_OP		1048753	1					
ANR	1048900	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( TMP_FREG1 )		1048753	1		|			
ANR	1048901	CallExpression	DD4 ( dst_r )		1048753	0					
ANR	1048902	Callee	DD4		1048753	0					
ANR	1048903	Identifier	DD4		1048753	0					
ANR	1048904	ArgumentList	dst_r		1048753	1					
ANR	1048905	Argument	dst_r		1048753	0					
ANR	1048906	Identifier	dst_r		1048753	0					
ANR	1048907	CallExpression	DM4 ( TMP_FREG1 )		1048753	1					
ANR	1048908	Callee	DM4		1048753	0					
ANR	1048909	Identifier	DM4		1048753	0					
ANR	1048910	ArgumentList	TMP_FREG1		1048753	1					
ANR	1048911	Argument	TMP_FREG1		1048753	0					
ANR	1048912	Identifier	TMP_FREG1		1048753	0					
ANR	1048913	IfStatement	if ( dst & SLJIT_MEM )		1048753	3					
ANR	1048914	Condition	dst & SLJIT_MEM	1669:5:53109:53123	1048753	0	True				
ANR	1048915	BitAndExpression	dst & SLJIT_MEM		1048753	0		&			
ANR	1048916	Identifier	dst		1048753	0					
ANR	1048917	Identifier	SLJIT_MEM		1048753	1					
ANR	1048918	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) ;"	1670:2:53128:53203	1048753	1	True				
ANR	1048919	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1048753	0					
ANR	1048920	Callee	emit_fop_mem		1048753	0					
ANR	1048921	Identifier	emit_fop_mem		1048753	0					
ANR	1048922	ArgumentList	compiler		1048753	1					
ANR	1048923	Argument	compiler		1048753	0					
ANR	1048924	Identifier	compiler		1048753	0					
ANR	1048925	Argument	op & SLJIT_SINGLE_OP		1048753	1					
ANR	1048926	BitAndExpression	op & SLJIT_SINGLE_OP		1048753	0		&			
ANR	1048927	Identifier	op		1048753	0					
ANR	1048928	Identifier	SLJIT_SINGLE_OP		1048753	1					
ANR	1048929	Argument	TMP_FREG1		1048753	2					
ANR	1048930	Identifier	TMP_FREG1		1048753	0					
ANR	1048931	Argument	dst		1048753	3					
ANR	1048932	Identifier	dst		1048753	0					
ANR	1048933	Argument	dstw		1048753	4					
ANR	1048934	Identifier	dstw		1048753	0					
ANR	1048935	ReturnStatement	return SLJIT_SUCCESS ;	1671:1:53206:53226	1048753	4	True				
ANR	1048936	Identifier	SLJIT_SUCCESS		1048753	0					
ANR	1048937	ReturnType	static SLJIT_INLINE sljit_si		1048753	1					
ANR	1048938	Identifier	sljit_emit_fop1_convd_fromw		1048753	2					
ANR	1048939	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1048753	3					
ANR	1048940	Parameter	struct sljit_compiler * compiler	1650:57:52458:52488	1048753	0	True				
ANR	1048941	ParameterType	struct sljit_compiler *		1048753	0					
ANR	1048942	Identifier	compiler		1048753	1					
ANR	1048943	Parameter	sljit_si op	1650:90:52491:52501	1048753	1	True				
ANR	1048944	ParameterType	sljit_si		1048753	0					
ANR	1048945	Identifier	op		1048753	1					
ANR	1048946	Parameter	sljit_si dst	1651:1:52505:52516	1048753	2	True				
ANR	1048947	ParameterType	sljit_si		1048753	0					
ANR	1048948	Identifier	dst		1048753	1					
ANR	1048949	Parameter	sljit_sw dstw	1651:15:52519:52531	1048753	3	True				
ANR	1048950	ParameterType	sljit_sw		1048753	0					
ANR	1048951	Identifier	dstw		1048753	1					
ANR	1048952	Parameter	sljit_si src	1652:1:52535:52546	1048753	4	True				
ANR	1048953	ParameterType	sljit_si		1048753	0					
ANR	1048954	Identifier	src		1048753	1					
ANR	1048955	Parameter	sljit_sw srcw	1652:15:52549:52561	1048753	5	True				
ANR	1048956	ParameterType	sljit_sw		1048753	0					
ANR	1048957	Identifier	srcw		1048753	1					
ANR	1048958	CFGEntryNode	ENTRY		1048753		True				
ANR	1048959	CFGExitNode	EXIT		1048753		True				
ANR	1048960	Symbol	op		1048753						
ANR	1048961	Symbol	TMP_REG1		1048753						
ANR	1048962	Symbol	FAST_IS_REG		1048753						
ANR	1048963	Symbol	dst		1048753						
ANR	1048964	Symbol	VCVT_F32_S32		1048753						
ANR	1048965	Symbol	src		1048753						
ANR	1048966	Symbol	TMP_FREG1		1048753						
ANR	1048967	Symbol	srcw		1048753						
ANR	1048968	Symbol	SLJIT_MEM		1048753						
ANR	1048969	Symbol	SLJIT_SINGLE_OP		1048753						
ANR	1048970	Symbol	DM4		1048753						
ANR	1048971	Symbol	SLJIT_SUCCESS		1048753						
ANR	1048972	Symbol	DN4		1048753						
ANR	1048973	Symbol	dst_r		1048753						
ANR	1048974	Symbol	RT4		1048753						
ANR	1048975	Symbol	load_immediate		1048753						
ANR	1048976	Symbol	emit_fop_mem		1048753						
ANR	1048977	Symbol	FPU_LOAD		1048753						
ANR	1048978	Symbol	DD4		1048753						
ANR	1048979	Symbol	VMOV		1048753						
ANR	1048980	Symbol	compiler		1048753						
ANR	1048981	Symbol	dstw		1048753						
ANR	1048982	Symbol	push_inst32		1048753						
ANR	1048983	Function	sljit_emit_fop1_cmp	1674:0:53231:53789							
ANR	1048984	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1048983	0					
ANR	1048985	CompoundStatement		1677:0:53390:53789	1048983	0					
ANR	1048986	IfStatement	if ( src1 & SLJIT_MEM )		1048983	0					
ANR	1048987	Condition	src1 & SLJIT_MEM	1678:5:53397:53412	1048983	0	True				
ANR	1048988	BitAndExpression	src1 & SLJIT_MEM		1048983	0		&			
ANR	1048989	Identifier	src1		1048983	0					
ANR	1048990	Identifier	SLJIT_MEM		1048983	1					
ANR	1048991	CompoundStatement		2:23:24:24	1048983	1					
ANR	1048992	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"	1679:2:53419:53500	1048983	0	True				
ANR	1048993	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1048983	0					
ANR	1048994	Callee	emit_fop_mem		1048983	0					
ANR	1048995	Identifier	emit_fop_mem		1048983	0					
ANR	1048996	ArgumentList	compiler		1048983	1					
ANR	1048997	Argument	compiler		1048983	0					
ANR	1048998	Identifier	compiler		1048983	0					
ANR	1048999	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048983	1					
ANR	1049000	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048983	0		|			
ANR	1049001	BitAndExpression	op & SLJIT_SINGLE_OP		1048983	0		&			
ANR	1049002	Identifier	op		1048983	0					
ANR	1049003	Identifier	SLJIT_SINGLE_OP		1048983	1					
ANR	1049004	Identifier	FPU_LOAD		1048983	1					
ANR	1049005	Argument	TMP_FREG1		1048983	2					
ANR	1049006	Identifier	TMP_FREG1		1048983	0					
ANR	1049007	Argument	src1		1048983	3					
ANR	1049008	Identifier	src1		1048983	0					
ANR	1049009	Argument	src1w		1048983	4					
ANR	1049010	Identifier	src1w		1048983	0					
ANR	1049011	ExpressionStatement	src1 = TMP_FREG1	1680:2:53504:53520	1048983	1	True				
ANR	1049012	AssignmentExpression	src1 = TMP_FREG1		1048983	0		=			
ANR	1049013	Identifier	src1		1048983	0					
ANR	1049014	Identifier	TMP_FREG1		1048983	1					
ANR	1049015	IfStatement	if ( src2 & SLJIT_MEM )		1048983	1					
ANR	1049016	Condition	src2 & SLJIT_MEM	1683:5:53531:53546	1048983	0	True				
ANR	1049017	BitAndExpression	src2 & SLJIT_MEM		1048983	0		&			
ANR	1049018	Identifier	src2		1048983	0					
ANR	1049019	Identifier	SLJIT_MEM		1048983	1					
ANR	1049020	CompoundStatement		7:23:158:158	1048983	1					
ANR	1049021	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"	1684:2:53553:53634	1048983	0	True				
ANR	1049022	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1048983	0					
ANR	1049023	Callee	emit_fop_mem		1048983	0					
ANR	1049024	Identifier	emit_fop_mem		1048983	0					
ANR	1049025	ArgumentList	compiler		1048983	1					
ANR	1049026	Argument	compiler		1048983	0					
ANR	1049027	Identifier	compiler		1048983	0					
ANR	1049028	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048983	1					
ANR	1049029	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1048983	0		|			
ANR	1049030	BitAndExpression	op & SLJIT_SINGLE_OP		1048983	0		&			
ANR	1049031	Identifier	op		1048983	0					
ANR	1049032	Identifier	SLJIT_SINGLE_OP		1048983	1					
ANR	1049033	Identifier	FPU_LOAD		1048983	1					
ANR	1049034	Argument	TMP_FREG2		1048983	2					
ANR	1049035	Identifier	TMP_FREG2		1048983	0					
ANR	1049036	Argument	src2		1048983	3					
ANR	1049037	Identifier	src2		1048983	0					
ANR	1049038	Argument	src2w		1048983	4					
ANR	1049039	Identifier	src2w		1048983	0					
ANR	1049040	ExpressionStatement	src2 = TMP_FREG2	1685:2:53638:53654	1048983	1	True				
ANR	1049041	AssignmentExpression	src2 = TMP_FREG2		1048983	0		=			
ANR	1049042	Identifier	src2		1048983	0					
ANR	1049043	Identifier	TMP_FREG2		1048983	1					
ANR	1049044	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) ) )"	1688:1:53661:53750	1048983	2	True				
ANR	1049045	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) ) )"		1048983	0					
ANR	1049046	Callee	FAIL_IF		1048983	0					
ANR	1049047	Identifier	FAIL_IF		1048983	0					
ANR	1049048	ArgumentList	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1048983	1					
ANR	1049049	Argument	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1048983	0					
ANR	1049050	CallExpression	"push_inst32 ( compiler , VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 ) )"		1048983	0					
ANR	1049051	Callee	push_inst32		1048983	0					
ANR	1049052	Identifier	push_inst32		1048983	0					
ANR	1049053	ArgumentList	compiler		1048983	1					
ANR	1049054	Argument	compiler		1048983	0					
ANR	1049055	Identifier	compiler		1048983	0					
ANR	1049056	Argument	VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1048983	1					
ANR	1049057	InclusiveOrExpression	VCMP_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1048983	0		|			
ANR	1049058	Identifier	VCMP_F32		1048983	0					
ANR	1049059	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( src1 ) | DM4 ( src2 )		1048983	1		|			
ANR	1049060	BitAndExpression	op & SLJIT_SINGLE_OP		1048983	0		&			
ANR	1049061	Identifier	op		1048983	0					
ANR	1049062	Identifier	SLJIT_SINGLE_OP		1048983	1					
ANR	1049063	InclusiveOrExpression	DD4 ( src1 ) | DM4 ( src2 )		1048983	1		|			
ANR	1049064	CallExpression	DD4 ( src1 )		1048983	0					
ANR	1049065	Callee	DD4		1048983	0					
ANR	1049066	Identifier	DD4		1048983	0					
ANR	1049067	ArgumentList	src1		1048983	1					
ANR	1049068	Argument	src1		1048983	0					
ANR	1049069	Identifier	src1		1048983	0					
ANR	1049070	CallExpression	DM4 ( src2 )		1048983	1					
ANR	1049071	Callee	DM4		1048983	0					
ANR	1049072	Identifier	DM4		1048983	0					
ANR	1049073	ArgumentList	src2		1048983	1					
ANR	1049074	Argument	src2		1048983	0					
ANR	1049075	Identifier	src2		1048983	0					
ANR	1049076	ReturnStatement	"return push_inst32 ( compiler , VMRS ) ;"	1689:1:53753:53787	1048983	3	True				
ANR	1049077	CallExpression	"push_inst32 ( compiler , VMRS )"		1048983	0					
ANR	1049078	Callee	push_inst32		1048983	0					
ANR	1049079	Identifier	push_inst32		1048983	0					
ANR	1049080	ArgumentList	compiler		1048983	1					
ANR	1049081	Argument	compiler		1048983	0					
ANR	1049082	Identifier	compiler		1048983	0					
ANR	1049083	Argument	VMRS		1048983	1					
ANR	1049084	Identifier	VMRS		1048983	0					
ANR	1049085	ReturnType	static SLJIT_INLINE sljit_si		1048983	1					
ANR	1049086	Identifier	sljit_emit_fop1_cmp		1048983	2					
ANR	1049087	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1048983	3					
ANR	1049088	Parameter	struct sljit_compiler * compiler	1674:49:53280:53310	1048983	0	True				
ANR	1049089	ParameterType	struct sljit_compiler *		1048983	0					
ANR	1049090	Identifier	compiler		1048983	1					
ANR	1049091	Parameter	sljit_si op	1674:82:53313:53323	1048983	1	True				
ANR	1049092	ParameterType	sljit_si		1048983	0					
ANR	1049093	Identifier	op		1048983	1					
ANR	1049094	Parameter	sljit_si src1	1675:1:53327:53339	1048983	2	True				
ANR	1049095	ParameterType	sljit_si		1048983	0					
ANR	1049096	Identifier	src1		1048983	1					
ANR	1049097	Parameter	sljit_sw src1w	1675:16:53342:53355	1048983	3	True				
ANR	1049098	ParameterType	sljit_sw		1048983	0					
ANR	1049099	Identifier	src1w		1048983	1					
ANR	1049100	Parameter	sljit_si src2	1676:1:53359:53371	1048983	4	True				
ANR	1049101	ParameterType	sljit_si		1048983	0					
ANR	1049102	Identifier	src2		1048983	1					
ANR	1049103	Parameter	sljit_sw src2w	1676:16:53374:53387	1048983	5	True				
ANR	1049104	ParameterType	sljit_sw		1048983	0					
ANR	1049105	Identifier	src2w		1048983	1					
ANR	1049106	CFGEntryNode	ENTRY		1048983		True				
ANR	1049107	CFGExitNode	EXIT		1048983		True				
ANR	1049108	Symbol	src2w		1048983						
ANR	1049109	Symbol	op		1048983						
ANR	1049110	Symbol	TMP_FREG2		1048983						
ANR	1049111	Symbol	src1w		1048983						
ANR	1049112	Symbol	TMP_FREG1		1048983						
ANR	1049113	Symbol	SLJIT_MEM		1048983						
ANR	1049114	Symbol	SLJIT_SINGLE_OP		1048983						
ANR	1049115	Symbol	VCMP_F32		1048983						
ANR	1049116	Symbol	DM4		1048983						
ANR	1049117	Symbol	VMRS		1048983						
ANR	1049118	Symbol	FPU_LOAD		1048983						
ANR	1049119	Symbol	DD4		1048983						
ANR	1049120	Symbol	src1		1048983						
ANR	1049121	Symbol	src2		1048983						
ANR	1049122	Symbol	compiler		1048983						
ANR	1049123	Symbol	push_inst32		1048983						
ANR	1049124	Function	sljit_emit_fop1	1692:0:53792:55170							
ANR	1049125	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1049124	0					
ANR	1049126	CompoundStatement		1695:0:53948:55170	1049124	0					
ANR	1049127	IdentifierDeclStatement	sljit_si dst_r ;	1696:1:53951:53965	1049124	0	True				
ANR	1049128	IdentifierDecl	dst_r		1049124	0					
ANR	1049129	IdentifierDeclType	sljit_si		1049124	0					
ANR	1049130	Identifier	dst_r		1049124	1					
ANR	1049131	ExpressionStatement	CHECK_ERROR ( )	1698:1:53969:53982	1049124	1	True				
ANR	1049132	CallExpression	CHECK_ERROR ( )		1049124	0					
ANR	1049133	Callee	CHECK_ERROR		1049124	0					
ANR	1049134	Identifier	CHECK_ERROR		1049124	0					
ANR	1049135	ArgumentList			1049124	1					
ANR	1049136	ExpressionStatement	compiler -> cache_arg = 0	1699:1:53985:54008	1049124	2	True				
ANR	1049137	AssignmentExpression	compiler -> cache_arg = 0		1049124	0		=			
ANR	1049138	PtrMemberAccess	compiler -> cache_arg		1049124	0					
ANR	1049139	Identifier	compiler		1049124	0					
ANR	1049140	Identifier	cache_arg		1049124	1					
ANR	1049141	PrimaryExpression	0		1049124	1					
ANR	1049142	ExpressionStatement	compiler -> cache_argw = 0	1700:1:54011:54035	1049124	3	True				
ANR	1049143	AssignmentExpression	compiler -> cache_argw = 0		1049124	0		=			
ANR	1049144	PtrMemberAccess	compiler -> cache_argw		1049124	0					
ANR	1049145	Identifier	compiler		1049124	0					
ANR	1049146	Identifier	cache_argw		1049124	1					
ANR	1049147	PrimaryExpression	0		1049124	1					
ANR	1049148	IfStatement	if ( GET_OPCODE ( op ) != SLJIT_CONVD_FROMS )		1049124	4					
ANR	1049149	Condition	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS	1701:5:54042:54076	1049124	0	True				
ANR	1049150	EqualityExpression	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS		1049124	0		!=			
ANR	1049151	CallExpression	GET_OPCODE ( op )		1049124	0					
ANR	1049152	Callee	GET_OPCODE		1049124	0					
ANR	1049153	Identifier	GET_OPCODE		1049124	0					
ANR	1049154	ArgumentList	op		1049124	1					
ANR	1049155	Argument	op		1049124	0					
ANR	1049156	Identifier	op		1049124	0					
ANR	1049157	Identifier	SLJIT_CONVD_FROMS		1049124	1					
ANR	1049158	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1702:2:54081:54102	1049124	1	True				
ANR	1049159	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1049124	0		^=			
ANR	1049160	Identifier	op		1049124	0					
ANR	1049161	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049162	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"	1704:1:54106:54180	1049124	5	True				
ANR	1049163	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"		1049124	0					
ANR	1049164	Callee	SLJIT_COMPILE_ASSERT		1049124	0					
ANR	1049165	Identifier	SLJIT_COMPILE_ASSERT		1049124	0					
ANR	1049166	ArgumentList	SLJIT_SINGLE_OP == 0x100		1049124	1					
ANR	1049167	Argument	SLJIT_SINGLE_OP == 0x100		1049124	0					
ANR	1049168	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1049124	0		==			
ANR	1049169	Identifier	SLJIT_SINGLE_OP		1049124	0					
ANR	1049170	PrimaryExpression	0x100		1049124	1					
ANR	1049171	Argument	float_transfer_bit_error		1049124	1					
ANR	1049172	Identifier	float_transfer_bit_error		1049124	0					
ANR	1049173	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1705:1:54183:54252	1049124	6	True				
ANR	1049174	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1049124	0					
ANR	1049175	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1049124	0					
ANR	1049176	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1049124	0					
ANR	1049177	ArgumentList	compiler		1049124	1					
ANR	1049178	Argument	compiler		1049124	0					
ANR	1049179	Identifier	compiler		1049124	0					
ANR	1049180	Argument	op		1049124	1					
ANR	1049181	Identifier	op		1049124	0					
ANR	1049182	Argument	dst		1049124	2					
ANR	1049183	Identifier	dst		1049124	0					
ANR	1049184	Argument	dstw		1049124	3					
ANR	1049185	Identifier	dstw		1049124	0					
ANR	1049186	Argument	src		1049124	4					
ANR	1049187	Identifier	src		1049124	0					
ANR	1049188	Argument	srcw		1049124	5					
ANR	1049189	Identifier	srcw		1049124	0					
ANR	1049190	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1707:1:54256:54298	1049124	7	True				
ANR	1049191	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1049124	0		=			
ANR	1049192	Identifier	dst_r		1049124	0					
ANR	1049193	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1049124	1					
ANR	1049194	Condition	FAST_IS_REG ( dst )		1049124	0					
ANR	1049195	CallExpression	FAST_IS_REG ( dst )		1049124	0					
ANR	1049196	Callee	FAST_IS_REG		1049124	0					
ANR	1049197	Identifier	FAST_IS_REG		1049124	0					
ANR	1049198	ArgumentList	dst		1049124	1					
ANR	1049199	Argument	dst		1049124	0					
ANR	1049200	Identifier	dst		1049124	0					
ANR	1049201	Identifier	dst		1049124	1					
ANR	1049202	Identifier	TMP_FREG1		1049124	2					
ANR	1049203	IfStatement	if ( src & SLJIT_MEM )		1049124	8					
ANR	1049204	Condition	src & SLJIT_MEM	1709:5:54306:54320	1049124	0	True				
ANR	1049205	BitAndExpression	src & SLJIT_MEM		1049124	0		&			
ANR	1049206	Identifier	src		1049124	0					
ANR	1049207	Identifier	SLJIT_MEM		1049124	1					
ANR	1049208	CompoundStatement		15:22:374:374	1049124	1					
ANR	1049209	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"	1710:2:54327:54402	1049124	0	True				
ANR	1049210	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"		1049124	0					
ANR	1049211	Callee	emit_fop_mem		1049124	0					
ANR	1049212	Identifier	emit_fop_mem		1049124	0					
ANR	1049213	ArgumentList	compiler		1049124	1					
ANR	1049214	Argument	compiler		1049124	0					
ANR	1049215	Identifier	compiler		1049124	0					
ANR	1049216	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049124	1					
ANR	1049217	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049124	0		|			
ANR	1049218	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049219	Identifier	op		1049124	0					
ANR	1049220	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049221	Identifier	FPU_LOAD		1049124	1					
ANR	1049222	Argument	dst_r		1049124	2					
ANR	1049223	Identifier	dst_r		1049124	0					
ANR	1049224	Argument	src		1049124	3					
ANR	1049225	Identifier	src		1049124	0					
ANR	1049226	Argument	srcw		1049124	4					
ANR	1049227	Identifier	srcw		1049124	0					
ANR	1049228	ExpressionStatement	src = dst_r	1711:2:54406:54417	1049124	1	True				
ANR	1049229	AssignmentExpression	src = dst_r		1049124	0		=			
ANR	1049230	Identifier	src		1049124	0					
ANR	1049231	Identifier	dst_r		1049124	1					
ANR	1049232	SwitchStatement	switch ( GET_OPCODE ( op ) )		1049124	9					
ANR	1049233	Condition	GET_OPCODE ( op )	1714:9:54432:54445	1049124	0	True				
ANR	1049234	CallExpression	GET_OPCODE ( op )		1049124	0					
ANR	1049235	Callee	GET_OPCODE		1049124	0					
ANR	1049236	Identifier	GET_OPCODE		1049124	0					
ANR	1049237	ArgumentList	op		1049124	1					
ANR	1049238	Argument	op		1049124	0					
ANR	1049239	Identifier	op		1049124	0					
ANR	1049240	CompoundStatement		20:25:499:499	1049124	1					
ANR	1049241	Label	case SLJIT_DMOV :	1715:1:54451:54466	1049124	0	True				
ANR	1049242	Identifier	SLJIT_DMOV		1049124	0					
ANR	1049243	IfStatement	if ( src != dst_r )		1049124	1					
ANR	1049244	Condition	src != dst_r	1716:6:54474:54485	1049124	0	True				
ANR	1049245	EqualityExpression	src != dst_r		1049124	0		!=			
ANR	1049246	Identifier	src		1049124	0					
ANR	1049247	Identifier	dst_r		1049124	1					
ANR	1049248	CompoundStatement		22:20:539:539	1049124	1					
ANR	1049249	IfStatement	if ( dst_r != TMP_FREG1 )		1049124	0					
ANR	1049250	Condition	dst_r != TMP_FREG1	1717:7:54497:54514	1049124	0	True				
ANR	1049251	EqualityExpression	dst_r != TMP_FREG1		1049124	0		!=			
ANR	1049252	Identifier	dst_r		1049124	0					
ANR	1049253	Identifier	TMP_FREG1		1049124	1					
ANR	1049254	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1718:4:54521:54610	1049124	1	True				
ANR	1049255	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1049124	0					
ANR	1049256	Callee	FAIL_IF		1049124	0					
ANR	1049257	Identifier	FAIL_IF		1049124	0					
ANR	1049258	ArgumentList	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	1					
ANR	1049259	Argument	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049260	CallExpression	"push_inst32 ( compiler , VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049261	Callee	push_inst32		1049124	0					
ANR	1049262	Identifier	push_inst32		1049124	0					
ANR	1049263	ArgumentList	compiler		1049124	1					
ANR	1049264	Argument	compiler		1049124	0					
ANR	1049265	Identifier	compiler		1049124	0					
ANR	1049266	Argument	VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1					
ANR	1049267	InclusiveOrExpression	VMOV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	0		|			
ANR	1049268	Identifier	VMOV_F32		1049124	0					
ANR	1049269	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049270	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049271	Identifier	op		1049124	0					
ANR	1049272	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049273	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049274	CallExpression	DD4 ( dst_r )		1049124	0					
ANR	1049275	Callee	DD4		1049124	0					
ANR	1049276	Identifier	DD4		1049124	0					
ANR	1049277	ArgumentList	dst_r		1049124	1					
ANR	1049278	Argument	dst_r		1049124	0					
ANR	1049279	Identifier	dst_r		1049124	0					
ANR	1049280	CallExpression	DM4 ( src )		1049124	1					
ANR	1049281	Callee	DM4		1049124	0					
ANR	1049282	Identifier	DM4		1049124	0					
ANR	1049283	ArgumentList	src		1049124	1					
ANR	1049284	Argument	src		1049124	0					
ANR	1049285	Identifier	src		1049124	0					
ANR	1049286	ElseStatement	else		1049124	0					
ANR	1049287	ExpressionStatement	dst_r = src	1720:4:54624:54635	1049124	0	True				
ANR	1049288	AssignmentExpression	dst_r = src		1049124	0		=			
ANR	1049289	Identifier	dst_r		1049124	0					
ANR	1049290	Identifier	src		1049124	1					
ANR	1049291	BreakStatement	break ;	1722:2:54643:54648	1049124	2	True				
ANR	1049292	Label	case SLJIT_DNEG :	1723:1:54651:54666	1049124	3	True				
ANR	1049293	Identifier	SLJIT_DNEG		1049124	0					
ANR	1049294	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1724:2:54670:54759	1049124	4	True				
ANR	1049295	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1049124	0					
ANR	1049296	Callee	FAIL_IF		1049124	0					
ANR	1049297	Identifier	FAIL_IF		1049124	0					
ANR	1049298	ArgumentList	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	1					
ANR	1049299	Argument	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049300	CallExpression	"push_inst32 ( compiler , VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049301	Callee	push_inst32		1049124	0					
ANR	1049302	Identifier	push_inst32		1049124	0					
ANR	1049303	ArgumentList	compiler		1049124	1					
ANR	1049304	Argument	compiler		1049124	0					
ANR	1049305	Identifier	compiler		1049124	0					
ANR	1049306	Argument	VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1					
ANR	1049307	InclusiveOrExpression	VNEG_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	0		|			
ANR	1049308	Identifier	VNEG_F32		1049124	0					
ANR	1049309	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049310	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049311	Identifier	op		1049124	0					
ANR	1049312	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049313	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049314	CallExpression	DD4 ( dst_r )		1049124	0					
ANR	1049315	Callee	DD4		1049124	0					
ANR	1049316	Identifier	DD4		1049124	0					
ANR	1049317	ArgumentList	dst_r		1049124	1					
ANR	1049318	Argument	dst_r		1049124	0					
ANR	1049319	Identifier	dst_r		1049124	0					
ANR	1049320	CallExpression	DM4 ( src )		1049124	1					
ANR	1049321	Callee	DM4		1049124	0					
ANR	1049322	Identifier	DM4		1049124	0					
ANR	1049323	ArgumentList	src		1049124	1					
ANR	1049324	Argument	src		1049124	0					
ANR	1049325	Identifier	src		1049124	0					
ANR	1049326	BreakStatement	break ;	1725:2:54763:54768	1049124	5	True				
ANR	1049327	Label	case SLJIT_DABS :	1726:1:54771:54786	1049124	6	True				
ANR	1049328	Identifier	SLJIT_DABS		1049124	0					
ANR	1049329	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1727:2:54790:54879	1049124	7	True				
ANR	1049330	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1049124	0					
ANR	1049331	Callee	FAIL_IF		1049124	0					
ANR	1049332	Identifier	FAIL_IF		1049124	0					
ANR	1049333	ArgumentList	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	1					
ANR	1049334	Argument	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049335	CallExpression	"push_inst32 ( compiler , VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049336	Callee	push_inst32		1049124	0					
ANR	1049337	Identifier	push_inst32		1049124	0					
ANR	1049338	ArgumentList	compiler		1049124	1					
ANR	1049339	Argument	compiler		1049124	0					
ANR	1049340	Identifier	compiler		1049124	0					
ANR	1049341	Argument	VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1					
ANR	1049342	InclusiveOrExpression	VABS_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	0		|			
ANR	1049343	Identifier	VABS_F32		1049124	0					
ANR	1049344	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049345	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049346	Identifier	op		1049124	0					
ANR	1049347	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049348	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049349	CallExpression	DD4 ( dst_r )		1049124	0					
ANR	1049350	Callee	DD4		1049124	0					
ANR	1049351	Identifier	DD4		1049124	0					
ANR	1049352	ArgumentList	dst_r		1049124	1					
ANR	1049353	Argument	dst_r		1049124	0					
ANR	1049354	Identifier	dst_r		1049124	0					
ANR	1049355	CallExpression	DM4 ( src )		1049124	1					
ANR	1049356	Callee	DM4		1049124	0					
ANR	1049357	Identifier	DM4		1049124	0					
ANR	1049358	ArgumentList	src		1049124	1					
ANR	1049359	Argument	src		1049124	0					
ANR	1049360	Identifier	src		1049124	0					
ANR	1049361	BreakStatement	break ;	1728:2:54883:54888	1049124	8	True				
ANR	1049362	Label	case SLJIT_CONVD_FROMS :	1729:1:54891:54913	1049124	9	True				
ANR	1049363	Identifier	SLJIT_CONVD_FROMS		1049124	0					
ANR	1049364	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"	1730:2:54917:55010	1049124	10	True				
ANR	1049365	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) ) )"		1049124	0					
ANR	1049366	Callee	FAIL_IF		1049124	0					
ANR	1049367	Identifier	FAIL_IF		1049124	0					
ANR	1049368	ArgumentList	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	1					
ANR	1049369	Argument	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049370	CallExpression	"push_inst32 ( compiler , VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src ) )"		1049124	0					
ANR	1049371	Callee	push_inst32		1049124	0					
ANR	1049372	Identifier	push_inst32		1049124	0					
ANR	1049373	ArgumentList	compiler		1049124	1					
ANR	1049374	Argument	compiler		1049124	0					
ANR	1049375	Identifier	compiler		1049124	0					
ANR	1049376	Argument	VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1					
ANR	1049377	InclusiveOrExpression	VCVT_F64_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	0		|			
ANR	1049378	Identifier	VCVT_F64_F32		1049124	0					
ANR	1049379	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049380	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049381	Identifier	op		1049124	0					
ANR	1049382	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049383	InclusiveOrExpression	DD4 ( dst_r ) | DM4 ( src )		1049124	1		|			
ANR	1049384	CallExpression	DD4 ( dst_r )		1049124	0					
ANR	1049385	Callee	DD4		1049124	0					
ANR	1049386	Identifier	DD4		1049124	0					
ANR	1049387	ArgumentList	dst_r		1049124	1					
ANR	1049388	Argument	dst_r		1049124	0					
ANR	1049389	Identifier	dst_r		1049124	0					
ANR	1049390	CallExpression	DM4 ( src )		1049124	1					
ANR	1049391	Callee	DM4		1049124	0					
ANR	1049392	Identifier	DM4		1049124	0					
ANR	1049393	ArgumentList	src		1049124	1					
ANR	1049394	Argument	src		1049124	0					
ANR	1049395	Identifier	src		1049124	0					
ANR	1049396	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1731:2:55014:55035	1049124	11	True				
ANR	1049397	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1049124	0		^=			
ANR	1049398	Identifier	op		1049124	0					
ANR	1049399	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049400	BreakStatement	break ;	1732:2:55039:55044	1049124	12	True				
ANR	1049401	IfStatement	if ( dst & SLJIT_MEM )		1049124	10					
ANR	1049402	Condition	dst & SLJIT_MEM	1735:5:55055:55069	1049124	0	True				
ANR	1049403	BitAndExpression	dst & SLJIT_MEM		1049124	0		&			
ANR	1049404	Identifier	dst		1049124	0					
ANR	1049405	Identifier	SLJIT_MEM		1049124	1					
ANR	1049406	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw ) ;"	1736:2:55074:55145	1049124	1	True				
ANR	1049407	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw )"		1049124	0					
ANR	1049408	Callee	emit_fop_mem		1049124	0					
ANR	1049409	Identifier	emit_fop_mem		1049124	0					
ANR	1049410	ArgumentList	compiler		1049124	1					
ANR	1049411	Argument	compiler		1049124	0					
ANR	1049412	Identifier	compiler		1049124	0					
ANR	1049413	Argument	op & SLJIT_SINGLE_OP		1049124	1					
ANR	1049414	BitAndExpression	op & SLJIT_SINGLE_OP		1049124	0		&			
ANR	1049415	Identifier	op		1049124	0					
ANR	1049416	Identifier	SLJIT_SINGLE_OP		1049124	1					
ANR	1049417	Argument	dst_r		1049124	2					
ANR	1049418	Identifier	dst_r		1049124	0					
ANR	1049419	Argument	dst		1049124	3					
ANR	1049420	Identifier	dst		1049124	0					
ANR	1049421	Argument	dstw		1049124	4					
ANR	1049422	Identifier	dstw		1049124	0					
ANR	1049423	ReturnStatement	return SLJIT_SUCCESS ;	1737:1:55148:55168	1049124	11	True				
ANR	1049424	Identifier	SLJIT_SUCCESS		1049124	0					
ANR	1049425	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1049124	1					
ANR	1049426	Identifier	sljit_emit_fop1		1049124	2					
ANR	1049427	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1049124	3					
ANR	1049428	Parameter	struct sljit_compiler * compiler	1692:50:53842:53872	1049124	0	True				
ANR	1049429	ParameterType	struct sljit_compiler *		1049124	0					
ANR	1049430	Identifier	compiler		1049124	1					
ANR	1049431	Parameter	sljit_si op	1692:83:53875:53885	1049124	1	True				
ANR	1049432	ParameterType	sljit_si		1049124	0					
ANR	1049433	Identifier	op		1049124	1					
ANR	1049434	Parameter	sljit_si dst	1693:1:53889:53900	1049124	2	True				
ANR	1049435	ParameterType	sljit_si		1049124	0					
ANR	1049436	Identifier	dst		1049124	1					
ANR	1049437	Parameter	sljit_sw dstw	1693:15:53903:53915	1049124	3	True				
ANR	1049438	ParameterType	sljit_sw		1049124	0					
ANR	1049439	Identifier	dstw		1049124	1					
ANR	1049440	Parameter	sljit_si src	1694:1:53919:53930	1049124	4	True				
ANR	1049441	ParameterType	sljit_si		1049124	0					
ANR	1049442	Identifier	src		1049124	1					
ANR	1049443	Parameter	sljit_sw srcw	1694:15:53933:53945	1049124	5	True				
ANR	1049444	ParameterType	sljit_sw		1049124	0					
ANR	1049445	Identifier	srcw		1049124	1					
ANR	1049446	CFGEntryNode	ENTRY		1049124		True				
ANR	1049447	CFGExitNode	EXIT		1049124		True				
ANR	1049448	Symbol	compiler -> cache_argw		1049124						
ANR	1049449	Symbol	dst		1049124						
ANR	1049450	Symbol	TMP_FREG1		1049124						
ANR	1049451	Symbol	SLJIT_MEM		1049124						
ANR	1049452	Symbol	SLJIT_CONVD_FROMS		1049124						
ANR	1049453	Symbol	DM4		1049124						
ANR	1049454	Symbol	* compiler		1049124						
ANR	1049455	Symbol	VCVT_F64_F32		1049124						
ANR	1049456	Symbol	dst_r		1049124						
ANR	1049457	Symbol	GET_OPCODE		1049124						
ANR	1049458	Symbol	VABS_F32		1049124						
ANR	1049459	Symbol	emit_fop_mem		1049124						
ANR	1049460	Symbol	float_transfer_bit_error		1049124						
ANR	1049461	Symbol	compiler		1049124						
ANR	1049462	Symbol	push_inst32		1049124						
ANR	1049463	Symbol	VNEG_F32		1049124						
ANR	1049464	Symbol	VMOV_F32		1049124						
ANR	1049465	Symbol	op		1049124						
ANR	1049466	Symbol	FAST_IS_REG		1049124						
ANR	1049467	Symbol	src		1049124						
ANR	1049468	Symbol	srcw		1049124						
ANR	1049469	Symbol	compiler -> cache_arg		1049124						
ANR	1049470	Symbol	SLJIT_SINGLE_OP		1049124						
ANR	1049471	Symbol	SLJIT_SUCCESS		1049124						
ANR	1049472	Symbol	FPU_LOAD		1049124						
ANR	1049473	Symbol	DD4		1049124						
ANR	1049474	Symbol	dstw		1049124						
ANR	1049475	Function	sljit_emit_fop2	1740:0:55173:56665							
ANR	1049476	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1049475	0					
ANR	1049477	CompoundStatement		1744:0:55363:56665	1049475	0					
ANR	1049478	IdentifierDeclStatement	sljit_si dst_r ;	1745:1:55366:55380	1049475	0	True				
ANR	1049479	IdentifierDecl	dst_r		1049475	0					
ANR	1049480	IdentifierDeclType	sljit_si		1049475	0					
ANR	1049481	Identifier	dst_r		1049475	1					
ANR	1049482	ExpressionStatement	CHECK_ERROR ( )	1747:1:55384:55397	1049475	1	True				
ANR	1049483	CallExpression	CHECK_ERROR ( )		1049475	0					
ANR	1049484	Callee	CHECK_ERROR		1049475	0					
ANR	1049485	Identifier	CHECK_ERROR		1049475	0					
ANR	1049486	ArgumentList			1049475	1					
ANR	1049487	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1748:1:55400:55479	1049475	2	True				
ANR	1049488	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1049475	0					
ANR	1049489	Callee	CHECK		1049475	0					
ANR	1049490	Identifier	CHECK		1049475	0					
ANR	1049491	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1049475	1					
ANR	1049492	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1049475	0					
ANR	1049493	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1049475	0					
ANR	1049494	Callee	check_sljit_emit_fop2		1049475	0					
ANR	1049495	Identifier	check_sljit_emit_fop2		1049475	0					
ANR	1049496	ArgumentList	compiler		1049475	1					
ANR	1049497	Argument	compiler		1049475	0					
ANR	1049498	Identifier	compiler		1049475	0					
ANR	1049499	Argument	op		1049475	1					
ANR	1049500	Identifier	op		1049475	0					
ANR	1049501	Argument	dst		1049475	2					
ANR	1049502	Identifier	dst		1049475	0					
ANR	1049503	Argument	dstw		1049475	3					
ANR	1049504	Identifier	dstw		1049475	0					
ANR	1049505	Argument	src1		1049475	4					
ANR	1049506	Identifier	src1		1049475	0					
ANR	1049507	Argument	src1w		1049475	5					
ANR	1049508	Identifier	src1w		1049475	0					
ANR	1049509	Argument	src2		1049475	6					
ANR	1049510	Identifier	src2		1049475	0					
ANR	1049511	Argument	src2w		1049475	7					
ANR	1049512	Identifier	src2w		1049475	0					
ANR	1049513	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1749:1:55482:55512	1049475	3	True				
ANR	1049514	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1049475	0					
ANR	1049515	Callee	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049516	Identifier	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049517	ArgumentList	dst		1049475	1					
ANR	1049518	Argument	dst		1049475	0					
ANR	1049519	Identifier	dst		1049475	0					
ANR	1049520	Argument	dstw		1049475	1					
ANR	1049521	Identifier	dstw		1049475	0					
ANR	1049522	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1750:1:55515:55547	1049475	4	True				
ANR	1049523	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1049475	0					
ANR	1049524	Callee	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049525	Identifier	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049526	ArgumentList	src1		1049475	1					
ANR	1049527	Argument	src1		1049475	0					
ANR	1049528	Identifier	src1		1049475	0					
ANR	1049529	Argument	src1w		1049475	1					
ANR	1049530	Identifier	src1w		1049475	0					
ANR	1049531	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1751:1:55550:55582	1049475	5	True				
ANR	1049532	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1049475	0					
ANR	1049533	Callee	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049534	Identifier	ADJUST_LOCAL_OFFSET		1049475	0					
ANR	1049535	ArgumentList	src2		1049475	1					
ANR	1049536	Argument	src2		1049475	0					
ANR	1049537	Identifier	src2		1049475	0					
ANR	1049538	Argument	src2w		1049475	1					
ANR	1049539	Identifier	src2w		1049475	0					
ANR	1049540	ExpressionStatement	compiler -> cache_arg = 0	1753:1:55586:55609	1049475	6	True				
ANR	1049541	AssignmentExpression	compiler -> cache_arg = 0		1049475	0		=			
ANR	1049542	PtrMemberAccess	compiler -> cache_arg		1049475	0					
ANR	1049543	Identifier	compiler		1049475	0					
ANR	1049544	Identifier	cache_arg		1049475	1					
ANR	1049545	PrimaryExpression	0		1049475	1					
ANR	1049546	ExpressionStatement	compiler -> cache_argw = 0	1754:1:55612:55636	1049475	7	True				
ANR	1049547	AssignmentExpression	compiler -> cache_argw = 0		1049475	0		=			
ANR	1049548	PtrMemberAccess	compiler -> cache_argw		1049475	0					
ANR	1049549	Identifier	compiler		1049475	0					
ANR	1049550	Identifier	cache_argw		1049475	1					
ANR	1049551	PrimaryExpression	0		1049475	1					
ANR	1049552	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1755:1:55639:55660	1049475	8	True				
ANR	1049553	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1049475	0		^=			
ANR	1049554	Identifier	op		1049475	0					
ANR	1049555	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049556	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1757:1:55664:55706	1049475	9	True				
ANR	1049557	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1049475	0		=			
ANR	1049558	Identifier	dst_r		1049475	0					
ANR	1049559	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1049475	1					
ANR	1049560	Condition	FAST_IS_REG ( dst )		1049475	0					
ANR	1049561	CallExpression	FAST_IS_REG ( dst )		1049475	0					
ANR	1049562	Callee	FAST_IS_REG		1049475	0					
ANR	1049563	Identifier	FAST_IS_REG		1049475	0					
ANR	1049564	ArgumentList	dst		1049475	1					
ANR	1049565	Argument	dst		1049475	0					
ANR	1049566	Identifier	dst		1049475	0					
ANR	1049567	Identifier	dst		1049475	1					
ANR	1049568	Identifier	TMP_FREG1		1049475	2					
ANR	1049569	IfStatement	if ( src1 & SLJIT_MEM )		1049475	10					
ANR	1049570	Condition	src1 & SLJIT_MEM	1758:5:55713:55728	1049475	0	True				
ANR	1049571	BitAndExpression	src1 & SLJIT_MEM		1049475	0		&			
ANR	1049572	Identifier	src1		1049475	0					
ANR	1049573	Identifier	SLJIT_MEM		1049475	1					
ANR	1049574	CompoundStatement		15:23:367:367	1049475	1					
ANR	1049575	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"	1759:2:55735:55816	1049475	0	True				
ANR	1049576	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1049475	0					
ANR	1049577	Callee	emit_fop_mem		1049475	0					
ANR	1049578	Identifier	emit_fop_mem		1049475	0					
ANR	1049579	ArgumentList	compiler		1049475	1					
ANR	1049580	Argument	compiler		1049475	0					
ANR	1049581	Identifier	compiler		1049475	0					
ANR	1049582	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049475	1					
ANR	1049583	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049475	0		|			
ANR	1049584	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049585	Identifier	op		1049475	0					
ANR	1049586	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049587	Identifier	FPU_LOAD		1049475	1					
ANR	1049588	Argument	TMP_FREG1		1049475	2					
ANR	1049589	Identifier	TMP_FREG1		1049475	0					
ANR	1049590	Argument	src1		1049475	3					
ANR	1049591	Identifier	src1		1049475	0					
ANR	1049592	Argument	src1w		1049475	4					
ANR	1049593	Identifier	src1w		1049475	0					
ANR	1049594	ExpressionStatement	src1 = TMP_FREG1	1760:2:55820:55836	1049475	1	True				
ANR	1049595	AssignmentExpression	src1 = TMP_FREG1		1049475	0		=			
ANR	1049596	Identifier	src1		1049475	0					
ANR	1049597	Identifier	TMP_FREG1		1049475	1					
ANR	1049598	IfStatement	if ( src2 & SLJIT_MEM )		1049475	11					
ANR	1049599	Condition	src2 & SLJIT_MEM	1762:5:55846:55861	1049475	0	True				
ANR	1049600	BitAndExpression	src2 & SLJIT_MEM		1049475	0		&			
ANR	1049601	Identifier	src2		1049475	0					
ANR	1049602	Identifier	SLJIT_MEM		1049475	1					
ANR	1049603	CompoundStatement		19:23:500:500	1049475	1					
ANR	1049604	ExpressionStatement	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"	1763:2:55868:55949	1049475	0	True				
ANR	1049605	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1049475	0					
ANR	1049606	Callee	emit_fop_mem		1049475	0					
ANR	1049607	Identifier	emit_fop_mem		1049475	0					
ANR	1049608	ArgumentList	compiler		1049475	1					
ANR	1049609	Argument	compiler		1049475	0					
ANR	1049610	Identifier	compiler		1049475	0					
ANR	1049611	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049475	1					
ANR	1049612	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1049475	0		|			
ANR	1049613	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049614	Identifier	op		1049475	0					
ANR	1049615	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049616	Identifier	FPU_LOAD		1049475	1					
ANR	1049617	Argument	TMP_FREG2		1049475	2					
ANR	1049618	Identifier	TMP_FREG2		1049475	0					
ANR	1049619	Argument	src2		1049475	3					
ANR	1049620	Identifier	src2		1049475	0					
ANR	1049621	Argument	src2w		1049475	4					
ANR	1049622	Identifier	src2w		1049475	0					
ANR	1049623	ExpressionStatement	src2 = TMP_FREG2	1764:2:55953:55969	1049475	1	True				
ANR	1049624	AssignmentExpression	src2 = TMP_FREG2		1049475	0		=			
ANR	1049625	Identifier	src2		1049475	0					
ANR	1049626	Identifier	TMP_FREG2		1049475	1					
ANR	1049627	SwitchStatement	switch ( GET_OPCODE ( op ) )		1049475	12					
ANR	1049628	Condition	GET_OPCODE ( op )	1767:9:55984:55997	1049475	0	True				
ANR	1049629	CallExpression	GET_OPCODE ( op )		1049475	0					
ANR	1049630	Callee	GET_OPCODE		1049475	0					
ANR	1049631	Identifier	GET_OPCODE		1049475	0					
ANR	1049632	ArgumentList	op		1049475	1					
ANR	1049633	Argument	op		1049475	0					
ANR	1049634	Identifier	op		1049475	0					
ANR	1049635	CompoundStatement		24:25:636:636	1049475	1					
ANR	1049636	Label	case SLJIT_DADD :	1768:1:56003:56018	1049475	0	True				
ANR	1049637	Identifier	SLJIT_DADD		1049475	0					
ANR	1049638	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1769:2:56022:56124	1049475	1	True				
ANR	1049639	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1049475	0					
ANR	1049640	Callee	FAIL_IF		1049475	0					
ANR	1049641	Identifier	FAIL_IF		1049475	0					
ANR	1049642	ArgumentList	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	1					
ANR	1049643	Argument	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049644	CallExpression	"push_inst32 ( compiler , VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049645	Callee	push_inst32		1049475	0					
ANR	1049646	Identifier	push_inst32		1049475	0					
ANR	1049647	ArgumentList	compiler		1049475	1					
ANR	1049648	Argument	compiler		1049475	0					
ANR	1049649	Identifier	compiler		1049475	0					
ANR	1049650	Argument	VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1					
ANR	1049651	InclusiveOrExpression	VADD_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	0		|			
ANR	1049652	Identifier	VADD_F32		1049475	0					
ANR	1049653	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049654	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049655	Identifier	op		1049475	0					
ANR	1049656	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049657	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049658	CallExpression	DD4 ( dst_r )		1049475	0					
ANR	1049659	Callee	DD4		1049475	0					
ANR	1049660	Identifier	DD4		1049475	0					
ANR	1049661	ArgumentList	dst_r		1049475	1					
ANR	1049662	Argument	dst_r		1049475	0					
ANR	1049663	Identifier	dst_r		1049475	0					
ANR	1049664	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049665	CallExpression	DN4 ( src1 )		1049475	0					
ANR	1049666	Callee	DN4		1049475	0					
ANR	1049667	Identifier	DN4		1049475	0					
ANR	1049668	ArgumentList	src1		1049475	1					
ANR	1049669	Argument	src1		1049475	0					
ANR	1049670	Identifier	src1		1049475	0					
ANR	1049671	CallExpression	DM4 ( src2 )		1049475	1					
ANR	1049672	Callee	DM4		1049475	0					
ANR	1049673	Identifier	DM4		1049475	0					
ANR	1049674	ArgumentList	src2		1049475	1					
ANR	1049675	Argument	src2		1049475	0					
ANR	1049676	Identifier	src2		1049475	0					
ANR	1049677	BreakStatement	break ;	1770:2:56128:56133	1049475	2	True				
ANR	1049678	Label	case SLJIT_DSUB :	1771:1:56136:56151	1049475	3	True				
ANR	1049679	Identifier	SLJIT_DSUB		1049475	0					
ANR	1049680	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1772:2:56155:56257	1049475	4	True				
ANR	1049681	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1049475	0					
ANR	1049682	Callee	FAIL_IF		1049475	0					
ANR	1049683	Identifier	FAIL_IF		1049475	0					
ANR	1049684	ArgumentList	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	1					
ANR	1049685	Argument	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049686	CallExpression	"push_inst32 ( compiler , VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049687	Callee	push_inst32		1049475	0					
ANR	1049688	Identifier	push_inst32		1049475	0					
ANR	1049689	ArgumentList	compiler		1049475	1					
ANR	1049690	Argument	compiler		1049475	0					
ANR	1049691	Identifier	compiler		1049475	0					
ANR	1049692	Argument	VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1					
ANR	1049693	InclusiveOrExpression	VSUB_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	0		|			
ANR	1049694	Identifier	VSUB_F32		1049475	0					
ANR	1049695	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049696	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049697	Identifier	op		1049475	0					
ANR	1049698	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049699	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049700	CallExpression	DD4 ( dst_r )		1049475	0					
ANR	1049701	Callee	DD4		1049475	0					
ANR	1049702	Identifier	DD4		1049475	0					
ANR	1049703	ArgumentList	dst_r		1049475	1					
ANR	1049704	Argument	dst_r		1049475	0					
ANR	1049705	Identifier	dst_r		1049475	0					
ANR	1049706	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049707	CallExpression	DN4 ( src1 )		1049475	0					
ANR	1049708	Callee	DN4		1049475	0					
ANR	1049709	Identifier	DN4		1049475	0					
ANR	1049710	ArgumentList	src1		1049475	1					
ANR	1049711	Argument	src1		1049475	0					
ANR	1049712	Identifier	src1		1049475	0					
ANR	1049713	CallExpression	DM4 ( src2 )		1049475	1					
ANR	1049714	Callee	DM4		1049475	0					
ANR	1049715	Identifier	DM4		1049475	0					
ANR	1049716	ArgumentList	src2		1049475	1					
ANR	1049717	Argument	src2		1049475	0					
ANR	1049718	Identifier	src2		1049475	0					
ANR	1049719	BreakStatement	break ;	1773:2:56261:56266	1049475	5	True				
ANR	1049720	Label	case SLJIT_DMUL :	1774:1:56269:56284	1049475	6	True				
ANR	1049721	Identifier	SLJIT_DMUL		1049475	0					
ANR	1049722	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1775:2:56288:56390	1049475	7	True				
ANR	1049723	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1049475	0					
ANR	1049724	Callee	FAIL_IF		1049475	0					
ANR	1049725	Identifier	FAIL_IF		1049475	0					
ANR	1049726	ArgumentList	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	1					
ANR	1049727	Argument	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049728	CallExpression	"push_inst32 ( compiler , VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049729	Callee	push_inst32		1049475	0					
ANR	1049730	Identifier	push_inst32		1049475	0					
ANR	1049731	ArgumentList	compiler		1049475	1					
ANR	1049732	Argument	compiler		1049475	0					
ANR	1049733	Identifier	compiler		1049475	0					
ANR	1049734	Argument	VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1					
ANR	1049735	InclusiveOrExpression	VMUL_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	0		|			
ANR	1049736	Identifier	VMUL_F32		1049475	0					
ANR	1049737	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049738	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049739	Identifier	op		1049475	0					
ANR	1049740	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049741	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049742	CallExpression	DD4 ( dst_r )		1049475	0					
ANR	1049743	Callee	DD4		1049475	0					
ANR	1049744	Identifier	DD4		1049475	0					
ANR	1049745	ArgumentList	dst_r		1049475	1					
ANR	1049746	Argument	dst_r		1049475	0					
ANR	1049747	Identifier	dst_r		1049475	0					
ANR	1049748	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049749	CallExpression	DN4 ( src1 )		1049475	0					
ANR	1049750	Callee	DN4		1049475	0					
ANR	1049751	Identifier	DN4		1049475	0					
ANR	1049752	ArgumentList	src1		1049475	1					
ANR	1049753	Argument	src1		1049475	0					
ANR	1049754	Identifier	src1		1049475	0					
ANR	1049755	CallExpression	DM4 ( src2 )		1049475	1					
ANR	1049756	Callee	DM4		1049475	0					
ANR	1049757	Identifier	DM4		1049475	0					
ANR	1049758	ArgumentList	src2		1049475	1					
ANR	1049759	Argument	src2		1049475	0					
ANR	1049760	Identifier	src2		1049475	0					
ANR	1049761	BreakStatement	break ;	1776:2:56394:56399	1049475	8	True				
ANR	1049762	Label	case SLJIT_DDIV :	1777:1:56402:56417	1049475	9	True				
ANR	1049763	Identifier	SLJIT_DDIV		1049475	0					
ANR	1049764	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"	1778:2:56421:56523	1049475	10	True				
ANR	1049765	CallExpression	"FAIL_IF ( push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) ) )"		1049475	0					
ANR	1049766	Callee	FAIL_IF		1049475	0					
ANR	1049767	Identifier	FAIL_IF		1049475	0					
ANR	1049768	ArgumentList	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	1					
ANR	1049769	Argument	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049770	CallExpression	"push_inst32 ( compiler , VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 ) )"		1049475	0					
ANR	1049771	Callee	push_inst32		1049475	0					
ANR	1049772	Identifier	push_inst32		1049475	0					
ANR	1049773	ArgumentList	compiler		1049475	1					
ANR	1049774	Argument	compiler		1049475	0					
ANR	1049775	Identifier	compiler		1049475	0					
ANR	1049776	Argument	VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1					
ANR	1049777	InclusiveOrExpression	VDIV_F32 | ( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	0		|			
ANR	1049778	Identifier	VDIV_F32		1049475	0					
ANR	1049779	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049780	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049781	Identifier	op		1049475	0					
ANR	1049782	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049783	InclusiveOrExpression	DD4 ( dst_r ) | DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049784	CallExpression	DD4 ( dst_r )		1049475	0					
ANR	1049785	Callee	DD4		1049475	0					
ANR	1049786	Identifier	DD4		1049475	0					
ANR	1049787	ArgumentList	dst_r		1049475	1					
ANR	1049788	Argument	dst_r		1049475	0					
ANR	1049789	Identifier	dst_r		1049475	0					
ANR	1049790	InclusiveOrExpression	DN4 ( src1 ) | DM4 ( src2 )		1049475	1		|			
ANR	1049791	CallExpression	DN4 ( src1 )		1049475	0					
ANR	1049792	Callee	DN4		1049475	0					
ANR	1049793	Identifier	DN4		1049475	0					
ANR	1049794	ArgumentList	src1		1049475	1					
ANR	1049795	Argument	src1		1049475	0					
ANR	1049796	Identifier	src1		1049475	0					
ANR	1049797	CallExpression	DM4 ( src2 )		1049475	1					
ANR	1049798	Callee	DM4		1049475	0					
ANR	1049799	Identifier	DM4		1049475	0					
ANR	1049800	ArgumentList	src2		1049475	1					
ANR	1049801	Argument	src2		1049475	0					
ANR	1049802	Identifier	src2		1049475	0					
ANR	1049803	BreakStatement	break ;	1779:2:56527:56532	1049475	11	True				
ANR	1049804	IfStatement	if ( ! ( dst & SLJIT_MEM ) )		1049475	13					
ANR	1049805	Condition	! ( dst & SLJIT_MEM )	1782:5:56543:56560	1049475	0	True				
ANR	1049806	UnaryOperationExpression	! ( dst & SLJIT_MEM )		1049475	0					
ANR	1049807	UnaryOperator	!		1049475	0					
ANR	1049808	BitAndExpression	dst & SLJIT_MEM		1049475	1		&			
ANR	1049809	Identifier	dst		1049475	0					
ANR	1049810	Identifier	SLJIT_MEM		1049475	1					
ANR	1049811	ReturnStatement	return SLJIT_SUCCESS ;	1783:2:56565:56585	1049475	1	True				
ANR	1049812	Identifier	SLJIT_SUCCESS		1049475	0					
ANR	1049813	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) ;"	1784:1:56588:56663	1049475	14	True				
ANR	1049814	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1049475	0					
ANR	1049815	Callee	emit_fop_mem		1049475	0					
ANR	1049816	Identifier	emit_fop_mem		1049475	0					
ANR	1049817	ArgumentList	compiler		1049475	1					
ANR	1049818	Argument	compiler		1049475	0					
ANR	1049819	Identifier	compiler		1049475	0					
ANR	1049820	Argument	op & SLJIT_SINGLE_OP		1049475	1					
ANR	1049821	BitAndExpression	op & SLJIT_SINGLE_OP		1049475	0		&			
ANR	1049822	Identifier	op		1049475	0					
ANR	1049823	Identifier	SLJIT_SINGLE_OP		1049475	1					
ANR	1049824	Argument	TMP_FREG1		1049475	2					
ANR	1049825	Identifier	TMP_FREG1		1049475	0					
ANR	1049826	Argument	dst		1049475	3					
ANR	1049827	Identifier	dst		1049475	0					
ANR	1049828	Argument	dstw		1049475	4					
ANR	1049829	Identifier	dstw		1049475	0					
ANR	1049830	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1049475	1					
ANR	1049831	Identifier	sljit_emit_fop2		1049475	2					
ANR	1049832	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1049475	3					
ANR	1049833	Parameter	struct sljit_compiler * compiler	1740:50:55223:55253	1049475	0	True				
ANR	1049834	ParameterType	struct sljit_compiler *		1049475	0					
ANR	1049835	Identifier	compiler		1049475	1					
ANR	1049836	Parameter	sljit_si op	1740:83:55256:55266	1049475	1	True				
ANR	1049837	ParameterType	sljit_si		1049475	0					
ANR	1049838	Identifier	op		1049475	1					
ANR	1049839	Parameter	sljit_si dst	1741:1:55270:55281	1049475	2	True				
ANR	1049840	ParameterType	sljit_si		1049475	0					
ANR	1049841	Identifier	dst		1049475	1					
ANR	1049842	Parameter	sljit_sw dstw	1741:15:55284:55296	1049475	3	True				
ANR	1049843	ParameterType	sljit_sw		1049475	0					
ANR	1049844	Identifier	dstw		1049475	1					
ANR	1049845	Parameter	sljit_si src1	1742:1:55300:55312	1049475	4	True				
ANR	1049846	ParameterType	sljit_si		1049475	0					
ANR	1049847	Identifier	src1		1049475	1					
ANR	1049848	Parameter	sljit_sw src1w	1742:16:55315:55328	1049475	5	True				
ANR	1049849	ParameterType	sljit_sw		1049475	0					
ANR	1049850	Identifier	src1w		1049475	1					
ANR	1049851	Parameter	sljit_si src2	1743:1:55332:55344	1049475	6	True				
ANR	1049852	ParameterType	sljit_si		1049475	0					
ANR	1049853	Identifier	src2		1049475	1					
ANR	1049854	Parameter	sljit_sw src2w	1743:16:55347:55360	1049475	7	True				
ANR	1049855	ParameterType	sljit_sw		1049475	0					
ANR	1049856	Identifier	src2w		1049475	1					
ANR	1049857	CFGEntryNode	ENTRY		1049475		True				
ANR	1049858	CFGExitNode	EXIT		1049475		True				
ANR	1049859	Symbol	compiler -> cache_argw		1049475						
ANR	1049860	Symbol	TMP_FREG2		1049475						
ANR	1049861	Symbol	src1w		1049475						
ANR	1049862	Symbol	dst		1049475						
ANR	1049863	Symbol	TMP_FREG1		1049475						
ANR	1049864	Symbol	SLJIT_MEM		1049475						
ANR	1049865	Symbol	VDIV_F32		1049475						
ANR	1049866	Symbol	DM4		1049475						
ANR	1049867	Symbol	* compiler		1049475						
ANR	1049868	Symbol	dst_r		1049475						
ANR	1049869	Symbol	GET_OPCODE		1049475						
ANR	1049870	Symbol	VSUB_F32		1049475						
ANR	1049871	Symbol	emit_fop_mem		1049475						
ANR	1049872	Symbol	compiler		1049475						
ANR	1049873	Symbol	push_inst32		1049475						
ANR	1049874	Symbol	VADD_F32		1049475						
ANR	1049875	Symbol	src2w		1049475						
ANR	1049876	Symbol	op		1049475						
ANR	1049877	Symbol	FAST_IS_REG		1049475						
ANR	1049878	Symbol	compiler -> cache_arg		1049475						
ANR	1049879	Symbol	SLJIT_SINGLE_OP		1049475						
ANR	1049880	Symbol	SLJIT_SUCCESS		1049475						
ANR	1049881	Symbol	check_sljit_emit_fop2		1049475						
ANR	1049882	Symbol	DN4		1049475						
ANR	1049883	Symbol	FPU_LOAD		1049475						
ANR	1049884	Symbol	DD4		1049475						
ANR	1049885	Symbol	src1		1049475						
ANR	1049886	Symbol	VMUL_F32		1049475						
ANR	1049887	Symbol	src2		1049475						
ANR	1049888	Symbol	dstw		1049475						
ANR	1049889	Function	sljit_emit_fast_enter	1787:1:56669:57679							
ANR	1049890	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1049889	0					
ANR	1049891	CompoundStatement		1794:0:57032:57679	1049889	0					
ANR	1049892	ExpressionStatement	CHECK_ERROR ( )	1795:1:57035:57048	1049889	0	True				
ANR	1049893	CallExpression	CHECK_ERROR ( )		1049889	0					
ANR	1049894	Callee	CHECK_ERROR		1049889	0					
ANR	1049895	Identifier	CHECK_ERROR		1049889	0					
ANR	1049896	ArgumentList			1049889	1					
ANR	1049897	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1796:1:57051:57106	1049889	1	True				
ANR	1049898	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1049889	0					
ANR	1049899	Callee	CHECK		1049889	0					
ANR	1049900	Identifier	CHECK		1049889	0					
ANR	1049901	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1049889	1					
ANR	1049902	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1049889	0					
ANR	1049903	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1049889	0					
ANR	1049904	Callee	check_sljit_emit_fast_enter		1049889	0					
ANR	1049905	Identifier	check_sljit_emit_fast_enter		1049889	0					
ANR	1049906	ArgumentList	compiler		1049889	1					
ANR	1049907	Argument	compiler		1049889	0					
ANR	1049908	Identifier	compiler		1049889	0					
ANR	1049909	Argument	dst		1049889	1					
ANR	1049910	Identifier	dst		1049889	0					
ANR	1049911	Argument	dstw		1049889	2					
ANR	1049912	Identifier	dstw		1049889	0					
ANR	1049913	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1797:1:57109:57139	1049889	2	True				
ANR	1049914	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1049889	0					
ANR	1049915	Callee	ADJUST_LOCAL_OFFSET		1049889	0					
ANR	1049916	Identifier	ADJUST_LOCAL_OFFSET		1049889	0					
ANR	1049917	ArgumentList	dst		1049889	1					
ANR	1049918	Argument	dst		1049889	0					
ANR	1049919	Identifier	dst		1049889	0					
ANR	1049920	Argument	dstw		1049889	1					
ANR	1049921	Identifier	dstw		1049889	0					
ANR	1049922	IfStatement	if ( dst == SLJIT_UNUSED )		1049889	3					
ANR	1049923	Condition	dst == SLJIT_UNUSED	1800:5:57194:57212	1049889	0	True				
ANR	1049924	EqualityExpression	dst == SLJIT_UNUSED		1049889	0		==			
ANR	1049925	Identifier	dst		1049889	0					
ANR	1049926	Identifier	SLJIT_UNUSED		1049889	1					
ANR	1049927	ReturnStatement	return SLJIT_SUCCESS ;	1801:2:57217:57237	1049889	1	True				
ANR	1049928	Identifier	SLJIT_SUCCESS		1049889	0					
ANR	1049929	IfStatement	if ( FAST_IS_REG ( dst ) )		1049889	4					
ANR	1049930	Condition	FAST_IS_REG ( dst )	1803:5:57245:57260	1049889	0	True				
ANR	1049931	CallExpression	FAST_IS_REG ( dst )		1049889	0					
ANR	1049932	Callee	FAST_IS_REG		1049889	0					
ANR	1049933	Identifier	FAST_IS_REG		1049889	0					
ANR	1049934	ArgumentList	dst		1049889	1					
ANR	1049935	Argument	dst		1049889	0					
ANR	1049936	Identifier	dst		1049889	0					
ANR	1049937	ReturnStatement	"return push_inst16 ( compiler , MOV | SET_REGS44 ( dst , TMP_REG3 ) ) ;"	1804:2:57265:57326	1049889	1	True				
ANR	1049938	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( dst , TMP_REG3 ) )"		1049889	0					
ANR	1049939	Callee	push_inst16		1049889	0					
ANR	1049940	Identifier	push_inst16		1049889	0					
ANR	1049941	ArgumentList	compiler		1049889	1					
ANR	1049942	Argument	compiler		1049889	0					
ANR	1049943	Identifier	compiler		1049889	0					
ANR	1049944	Argument	"MOV | SET_REGS44 ( dst , TMP_REG3 )"		1049889	1					
ANR	1049945	InclusiveOrExpression	"MOV | SET_REGS44 ( dst , TMP_REG3 )"		1049889	0		|			
ANR	1049946	Identifier	MOV		1049889	0					
ANR	1049947	CallExpression	"SET_REGS44 ( dst , TMP_REG3 )"		1049889	1					
ANR	1049948	Callee	SET_REGS44		1049889	0					
ANR	1049949	Identifier	SET_REGS44		1049889	0					
ANR	1049950	ArgumentList	dst		1049889	1					
ANR	1049951	Argument	dst		1049889	0					
ANR	1049952	Identifier	dst		1049889	0					
ANR	1049953	Argument	TMP_REG3		1049889	1					
ANR	1049954	Identifier	TMP_REG3		1049889	0					
ANR	1049955	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw ) )"		1049889	5					
ANR	1049956	Condition	"getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw )"	1807:5:57349:57413	1049889	0	True				
ANR	1049957	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE | STORE , TMP_REG3 , dst , dstw )"		1049889	0					
ANR	1049958	Callee	getput_arg_fast		1049889	0					
ANR	1049959	Identifier	getput_arg_fast		1049889	0					
ANR	1049960	ArgumentList	compiler		1049889	1					
ANR	1049961	Argument	compiler		1049889	0					
ANR	1049962	Identifier	compiler		1049889	0					
ANR	1049963	Argument	WORD_SIZE | STORE		1049889	1					
ANR	1049964	InclusiveOrExpression	WORD_SIZE | STORE		1049889	0		|			
ANR	1049965	Identifier	WORD_SIZE		1049889	0					
ANR	1049966	Identifier	STORE		1049889	1					
ANR	1049967	Argument	TMP_REG3		1049889	2					
ANR	1049968	Identifier	TMP_REG3		1049889	0					
ANR	1049969	Argument	dst		1049889	3					
ANR	1049970	Identifier	dst		1049889	0					
ANR	1049971	Argument	dstw		1049889	4					
ANR	1049972	Identifier	dstw		1049889	0					
ANR	1049973	ReturnStatement	return compiler -> error ;	1808:2:57418:57440	1049889	1	True				
ANR	1049974	PtrMemberAccess	compiler -> error		1049889	0					
ANR	1049975	Identifier	compiler		1049889	0					
ANR	1049976	Identifier	error		1049889	1					
ANR	1049977	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) ) )"	1810:1:57480:57548	1049889	6	True				
ANR	1049978	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) ) )"		1049889	0					
ANR	1049979	Callee	FAIL_IF		1049889	0					
ANR	1049980	Identifier	FAIL_IF		1049889	0					
ANR	1049981	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1049889	1					
ANR	1049982	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1049889	0					
ANR	1049983	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 ) )"		1049889	0					
ANR	1049984	Callee	push_inst16		1049889	0					
ANR	1049985	Identifier	push_inst16		1049889	0					
ANR	1049986	ArgumentList	compiler		1049889	1					
ANR	1049987	Argument	compiler		1049889	0					
ANR	1049988	Identifier	compiler		1049889	0					
ANR	1049989	Argument	"MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1049889	1					
ANR	1049990	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1049889	0		|			
ANR	1049991	Identifier	MOV		1049889	0					
ANR	1049992	CallExpression	"SET_REGS44 ( TMP_REG2 , TMP_REG3 )"		1049889	1					
ANR	1049993	Callee	SET_REGS44		1049889	0					
ANR	1049994	Identifier	SET_REGS44		1049889	0					
ANR	1049995	ArgumentList	TMP_REG2		1049889	1					
ANR	1049996	Argument	TMP_REG2		1049889	0					
ANR	1049997	Identifier	TMP_REG2		1049889	0					
ANR	1049998	Argument	TMP_REG3		1049889	1					
ANR	1049999	Identifier	TMP_REG3		1049889	0					
ANR	1050000	ExpressionStatement	compiler -> cache_arg = 0	1811:1:57551:57574	1049889	7	True				
ANR	1050001	AssignmentExpression	compiler -> cache_arg = 0		1049889	0		=			
ANR	1050002	PtrMemberAccess	compiler -> cache_arg		1049889	0					
ANR	1050003	Identifier	compiler		1049889	0					
ANR	1050004	Identifier	cache_arg		1049889	1					
ANR	1050005	PrimaryExpression	0		1049889	1					
ANR	1050006	ExpressionStatement	compiler -> cache_argw = 0	1812:1:57577:57601	1049889	8	True				
ANR	1050007	AssignmentExpression	compiler -> cache_argw = 0		1049889	0		=			
ANR	1050008	PtrMemberAccess	compiler -> cache_argw		1049889	0					
ANR	1050009	Identifier	compiler		1049889	0					
ANR	1050010	Identifier	cache_argw		1049889	1					
ANR	1050011	PrimaryExpression	0		1049889	1					
ANR	1050012	ReturnStatement	"return getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) ;"	1813:1:57604:57677	1049889	9	True				
ANR	1050013	CallExpression	"getput_arg ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1049889	0					
ANR	1050014	Callee	getput_arg		1049889	0					
ANR	1050015	Identifier	getput_arg		1049889	0					
ANR	1050016	ArgumentList	compiler		1049889	1					
ANR	1050017	Argument	compiler		1049889	0					
ANR	1050018	Identifier	compiler		1049889	0					
ANR	1050019	Argument	WORD_SIZE | STORE		1049889	1					
ANR	1050020	InclusiveOrExpression	WORD_SIZE | STORE		1049889	0		|			
ANR	1050021	Identifier	WORD_SIZE		1049889	0					
ANR	1050022	Identifier	STORE		1049889	1					
ANR	1050023	Argument	TMP_REG2		1049889	2					
ANR	1050024	Identifier	TMP_REG2		1049889	0					
ANR	1050025	Argument	dst		1049889	3					
ANR	1050026	Identifier	dst		1049889	0					
ANR	1050027	Argument	dstw		1049889	4					
ANR	1050028	Identifier	dstw		1049889	0					
ANR	1050029	Argument	0		1049889	5					
ANR	1050030	PrimaryExpression	0		1049889	0					
ANR	1050031	Argument	0		1049889	6					
ANR	1050032	PrimaryExpression	0		1049889	0					
ANR	1050033	ReturnType	undef FPU_LOAD SLJIT_API_FUNC_ATTRIBUTE sljit_si		1049889	1					
ANR	1050034	Identifier	sljit_emit_fast_enter		1049889	2					
ANR	1050035	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1049889	3					
ANR	1050036	Parameter	struct sljit_compiler * compiler	1793:56:56970:57000	1049889	0	True				
ANR	1050037	ParameterType	struct sljit_compiler *		1049889	0					
ANR	1050038	Identifier	compiler		1049889	1					
ANR	1050039	Parameter	sljit_si dst	1793:89:57003:57014	1049889	1	True				
ANR	1050040	ParameterType	sljit_si		1049889	0					
ANR	1050041	Identifier	dst		1049889	1					
ANR	1050042	Parameter	sljit_sw dstw	1793:103:57017:57029	1049889	2	True				
ANR	1050043	ParameterType	sljit_sw		1049889	0					
ANR	1050044	Identifier	dstw		1049889	1					
ANR	1050045	CFGEntryNode	ENTRY		1049889		True				
ANR	1050046	CFGExitNode	EXIT		1049889		True				
ANR	1050047	Symbol	TMP_REG3		1049889						
ANR	1050048	Symbol	TMP_REG2		1049889						
ANR	1050049	Symbol	check_sljit_emit_fast_enter		1049889						
ANR	1050050	Symbol	compiler -> cache_argw		1049889						
ANR	1050051	Symbol	FAST_IS_REG		1049889						
ANR	1050052	Symbol	dst		1049889						
ANR	1050053	Symbol	compiler -> cache_arg		1049889						
ANR	1050054	Symbol	push_inst16		1049889						
ANR	1050055	Symbol	SLJIT_SUCCESS		1049889						
ANR	1050056	Symbol	* compiler		1049889						
ANR	1050057	Symbol	SET_REGS44		1049889						
ANR	1050058	Symbol	SLJIT_UNUSED		1049889						
ANR	1050059	Symbol	getput_arg		1049889						
ANR	1050060	Symbol	MOV		1049889						
ANR	1050061	Symbol	STORE		1049889						
ANR	1050062	Symbol	compiler		1049889						
ANR	1050063	Symbol	getput_arg_fast		1049889						
ANR	1050064	Symbol	dstw		1049889						
ANR	1050065	Symbol	compiler -> error		1049889						
ANR	1050066	Symbol	WORD_SIZE		1049889						
ANR	1050067	Function	sljit_emit_fast_return	1816:0:57682:58475							
ANR	1050068	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1050067	0					
ANR	1050069	CompoundStatement		1817:0:57801:58475	1050067	0					
ANR	1050070	ExpressionStatement	CHECK_ERROR ( )	1818:1:57804:57817	1050067	0	True				
ANR	1050071	CallExpression	CHECK_ERROR ( )		1050067	0					
ANR	1050072	Callee	CHECK_ERROR		1050067	0					
ANR	1050073	Identifier	CHECK_ERROR		1050067	0					
ANR	1050074	ArgumentList			1050067	1					
ANR	1050075	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1819:1:57820:57876	1050067	1	True				
ANR	1050076	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1050067	0					
ANR	1050077	Callee	CHECK		1050067	0					
ANR	1050078	Identifier	CHECK		1050067	0					
ANR	1050079	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1050067	1					
ANR	1050080	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1050067	0					
ANR	1050081	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1050067	0					
ANR	1050082	Callee	check_sljit_emit_fast_return		1050067	0					
ANR	1050083	Identifier	check_sljit_emit_fast_return		1050067	0					
ANR	1050084	ArgumentList	compiler		1050067	1					
ANR	1050085	Argument	compiler		1050067	0					
ANR	1050086	Identifier	compiler		1050067	0					
ANR	1050087	Argument	src		1050067	1					
ANR	1050088	Identifier	src		1050067	0					
ANR	1050089	Argument	srcw		1050067	2					
ANR	1050090	Identifier	srcw		1050067	0					
ANR	1050091	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1820:1:57879:57909	1050067	2	True				
ANR	1050092	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1050067	0					
ANR	1050093	Callee	ADJUST_LOCAL_OFFSET		1050067	0					
ANR	1050094	Identifier	ADJUST_LOCAL_OFFSET		1050067	0					
ANR	1050095	ArgumentList	src		1050067	1					
ANR	1050096	Argument	src		1050067	0					
ANR	1050097	Identifier	src		1050067	0					
ANR	1050098	Argument	srcw		1050067	1					
ANR	1050099	Identifier	srcw		1050067	0					
ANR	1050100	IfStatement	if ( FAST_IS_REG ( src ) )		1050067	3					
ANR	1050101	Condition	FAST_IS_REG ( src )	1822:5:57917:57932	1050067	0	True				
ANR	1050102	CallExpression	FAST_IS_REG ( src )		1050067	0					
ANR	1050103	Callee	FAST_IS_REG		1050067	0					
ANR	1050104	Identifier	FAST_IS_REG		1050067	0					
ANR	1050105	ArgumentList	src		1050067	1					
ANR	1050106	Argument	src		1050067	0					
ANR	1050107	Identifier	src		1050067	0					
ANR	1050108	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) ) )"	1823:2:57937:58000	1050067	1	True				
ANR	1050109	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) ) )"		1050067	0					
ANR	1050110	Callee	FAIL_IF		1050067	0					
ANR	1050111	Identifier	FAIL_IF		1050067	0					
ANR	1050112	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1050067	1					
ANR	1050113	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1050067	0					
ANR	1050114	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , src ) )"		1050067	0					
ANR	1050115	Callee	push_inst16		1050067	0					
ANR	1050116	Identifier	push_inst16		1050067	0					
ANR	1050117	ArgumentList	compiler		1050067	1					
ANR	1050118	Argument	compiler		1050067	0					
ANR	1050119	Identifier	compiler		1050067	0					
ANR	1050120	Argument	"MOV | SET_REGS44 ( TMP_REG3 , src )"		1050067	1					
ANR	1050121	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG3 , src )"		1050067	0		|			
ANR	1050122	Identifier	MOV		1050067	0					
ANR	1050123	CallExpression	"SET_REGS44 ( TMP_REG3 , src )"		1050067	1					
ANR	1050124	Callee	SET_REGS44		1050067	0					
ANR	1050125	Identifier	SET_REGS44		1050067	0					
ANR	1050126	ArgumentList	TMP_REG3		1050067	1					
ANR	1050127	Argument	TMP_REG3		1050067	0					
ANR	1050128	Identifier	TMP_REG3		1050067	0					
ANR	1050129	Argument	src		1050067	1					
ANR	1050130	Identifier	src		1050067	0					
ANR	1050131	ElseStatement	else		1050067	0					
ANR	1050132	IfStatement	if ( src & SLJIT_MEM )		1050067	0					
ANR	1050133	Condition	src & SLJIT_MEM	1824:10:58012:58026	1050067	0	True				
ANR	1050134	BitAndExpression	src & SLJIT_MEM		1050067	0		&			
ANR	1050135	Identifier	src		1050067	0					
ANR	1050136	Identifier	SLJIT_MEM		1050067	1					
ANR	1050137	CompoundStatement		8:27:227:227	1050067	1					
ANR	1050138	IfStatement	"if ( getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw ) )"		1050067	0					
ANR	1050139	Condition	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw )"	1825:6:58037:58093	1050067	0	True				
ANR	1050140	CallExpression	"getput_arg_fast ( compiler , WORD_SIZE , TMP_REG3 , src , srcw )"		1050067	0					
ANR	1050141	Callee	getput_arg_fast		1050067	0					
ANR	1050142	Identifier	getput_arg_fast		1050067	0					
ANR	1050143	ArgumentList	compiler		1050067	1					
ANR	1050144	Argument	compiler		1050067	0					
ANR	1050145	Identifier	compiler		1050067	0					
ANR	1050146	Argument	WORD_SIZE		1050067	1					
ANR	1050147	Identifier	WORD_SIZE		1050067	0					
ANR	1050148	Argument	TMP_REG3		1050067	2					
ANR	1050149	Identifier	TMP_REG3		1050067	0					
ANR	1050150	Argument	src		1050067	3					
ANR	1050151	Identifier	src		1050067	0					
ANR	1050152	Argument	srcw		1050067	4					
ANR	1050153	Identifier	srcw		1050067	0					
ANR	1050154	ExpressionStatement	FAIL_IF ( compiler -> error )	1826:3:58099:58123	1050067	1	True				
ANR	1050155	CallExpression	FAIL_IF ( compiler -> error )		1050067	0					
ANR	1050156	Callee	FAIL_IF		1050067	0					
ANR	1050157	Identifier	FAIL_IF		1050067	0					
ANR	1050158	ArgumentList	compiler -> error		1050067	1					
ANR	1050159	Argument	compiler -> error		1050067	0					
ANR	1050160	PtrMemberAccess	compiler -> error		1050067	0					
ANR	1050161	Identifier	compiler		1050067	0					
ANR	1050162	Identifier	error		1050067	1					
ANR	1050163	ElseStatement	else		1050067	0					
ANR	1050164	CompoundStatement		11:7:330:330	1050067	0					
ANR	1050165	ExpressionStatement	compiler -> cache_arg = 0	1828:3:58137:58160	1050067	0	True				
ANR	1050166	AssignmentExpression	compiler -> cache_arg = 0		1050067	0		=			
ANR	1050167	PtrMemberAccess	compiler -> cache_arg		1050067	0					
ANR	1050168	Identifier	compiler		1050067	0					
ANR	1050169	Identifier	cache_arg		1050067	1					
ANR	1050170	PrimaryExpression	0		1050067	1					
ANR	1050171	ExpressionStatement	compiler -> cache_argw = 0	1829:3:58165:58189	1050067	1	True				
ANR	1050172	AssignmentExpression	compiler -> cache_argw = 0		1050067	0		=			
ANR	1050173	PtrMemberAccess	compiler -> cache_argw		1050067	0					
ANR	1050174	Identifier	compiler		1050067	0					
ANR	1050175	Identifier	cache_argw		1050067	1					
ANR	1050176	PrimaryExpression	0		1050067	1					
ANR	1050177	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 ) )"	1830:3:58194:58261	1050067	2	True				
ANR	1050178	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 ) )"		1050067	0					
ANR	1050179	Callee	FAIL_IF		1050067	0					
ANR	1050180	Identifier	FAIL_IF		1050067	0					
ANR	1050181	ArgumentList	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1050067	1					
ANR	1050182	Argument	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1050067	0					
ANR	1050183	CallExpression	"getput_arg ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , 0 , 0 )"		1050067	0					
ANR	1050184	Callee	getput_arg		1050067	0					
ANR	1050185	Identifier	getput_arg		1050067	0					
ANR	1050186	ArgumentList	compiler		1050067	1					
ANR	1050187	Argument	compiler		1050067	0					
ANR	1050188	Identifier	compiler		1050067	0					
ANR	1050189	Argument	WORD_SIZE		1050067	1					
ANR	1050190	Identifier	WORD_SIZE		1050067	0					
ANR	1050191	Argument	TMP_REG2		1050067	2					
ANR	1050192	Identifier	TMP_REG2		1050067	0					
ANR	1050193	Argument	src		1050067	3					
ANR	1050194	Identifier	src		1050067	0					
ANR	1050195	Argument	srcw		1050067	4					
ANR	1050196	Identifier	srcw		1050067	0					
ANR	1050197	Argument	0		1050067	5					
ANR	1050198	PrimaryExpression	0		1050067	0					
ANR	1050199	Argument	0		1050067	6					
ANR	1050200	PrimaryExpression	0		1050067	0					
ANR	1050201	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) ) )"	1831:3:58266:58334	1050067	3	True				
ANR	1050202	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) ) )"		1050067	0					
ANR	1050203	Callee	FAIL_IF		1050067	0					
ANR	1050204	Identifier	FAIL_IF		1050067	0					
ANR	1050205	ArgumentList	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1050067	1					
ANR	1050206	Argument	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1050067	0					
ANR	1050207	CallExpression	"push_inst16 ( compiler , MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 ) )"		1050067	0					
ANR	1050208	Callee	push_inst16		1050067	0					
ANR	1050209	Identifier	push_inst16		1050067	0					
ANR	1050210	ArgumentList	compiler		1050067	1					
ANR	1050211	Argument	compiler		1050067	0					
ANR	1050212	Identifier	compiler		1050067	0					
ANR	1050213	Argument	"MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1050067	1					
ANR	1050214	InclusiveOrExpression	"MOV | SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1050067	0		|			
ANR	1050215	Identifier	MOV		1050067	0					
ANR	1050216	CallExpression	"SET_REGS44 ( TMP_REG3 , TMP_REG2 )"		1050067	1					
ANR	1050217	Callee	SET_REGS44		1050067	0					
ANR	1050218	Identifier	SET_REGS44		1050067	0					
ANR	1050219	ArgumentList	TMP_REG3		1050067	1					
ANR	1050220	Argument	TMP_REG3		1050067	0					
ANR	1050221	Identifier	TMP_REG3		1050067	0					
ANR	1050222	Argument	TMP_REG2		1050067	1					
ANR	1050223	Identifier	TMP_REG2		1050067	0					
ANR	1050224	ElseStatement	else		1050067	0					
ANR	1050225	IfStatement	if ( src & SLJIT_IMM )		1050067	0					
ANR	1050226	Condition	src & SLJIT_IMM	1834:10:58353:58367	1050067	0	True				
ANR	1050227	BitAndExpression	src & SLJIT_IMM		1050067	0		&			
ANR	1050228	Identifier	src		1050067	0					
ANR	1050229	Identifier	SLJIT_IMM		1050067	1					
ANR	1050230	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"	1835:2:58372:58421	1050067	1	True				
ANR	1050231	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"		1050067	0					
ANR	1050232	Callee	FAIL_IF		1050067	0					
ANR	1050233	Identifier	FAIL_IF		1050067	0					
ANR	1050234	ArgumentList	"load_immediate ( compiler , TMP_REG3 , srcw )"		1050067	1					
ANR	1050235	Argument	"load_immediate ( compiler , TMP_REG3 , srcw )"		1050067	0					
ANR	1050236	CallExpression	"load_immediate ( compiler , TMP_REG3 , srcw )"		1050067	0					
ANR	1050237	Callee	load_immediate		1050067	0					
ANR	1050238	Identifier	load_immediate		1050067	0					
ANR	1050239	ArgumentList	compiler		1050067	1					
ANR	1050240	Argument	compiler		1050067	0					
ANR	1050241	Identifier	compiler		1050067	0					
ANR	1050242	Argument	TMP_REG3		1050067	1					
ANR	1050243	Identifier	TMP_REG3		1050067	0					
ANR	1050244	Argument	srcw		1050067	2					
ANR	1050245	Identifier	srcw		1050067	0					
ANR	1050246	ReturnStatement	"return push_inst16 ( compiler , BLX | RN3 ( TMP_REG3 ) ) ;"	1836:1:58424:58473	1050067	4	True				
ANR	1050247	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG3 ) )"		1050067	0					
ANR	1050248	Callee	push_inst16		1050067	0					
ANR	1050249	Identifier	push_inst16		1050067	0					
ANR	1050250	ArgumentList	compiler		1050067	1					
ANR	1050251	Argument	compiler		1050067	0					
ANR	1050252	Identifier	compiler		1050067	0					
ANR	1050253	Argument	BLX | RN3 ( TMP_REG3 )		1050067	1					
ANR	1050254	InclusiveOrExpression	BLX | RN3 ( TMP_REG3 )		1050067	0		|			
ANR	1050255	Identifier	BLX		1050067	0					
ANR	1050256	CallExpression	RN3 ( TMP_REG3 )		1050067	1					
ANR	1050257	Callee	RN3		1050067	0					
ANR	1050258	Identifier	RN3		1050067	0					
ANR	1050259	ArgumentList	TMP_REG3		1050067	1					
ANR	1050260	Argument	TMP_REG3		1050067	0					
ANR	1050261	Identifier	TMP_REG3		1050067	0					
ANR	1050262	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1050067	1					
ANR	1050263	Identifier	sljit_emit_fast_return		1050067	2					
ANR	1050264	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1050067	3					
ANR	1050265	Parameter	struct sljit_compiler * compiler	1816:57:57739:57769	1050067	0	True				
ANR	1050266	ParameterType	struct sljit_compiler *		1050067	0					
ANR	1050267	Identifier	compiler		1050067	1					
ANR	1050268	Parameter	sljit_si src	1816:90:57772:57783	1050067	1	True				
ANR	1050269	ParameterType	sljit_si		1050067	0					
ANR	1050270	Identifier	src		1050067	1					
ANR	1050271	Parameter	sljit_sw srcw	1816:104:57786:57798	1050067	2	True				
ANR	1050272	ParameterType	sljit_sw		1050067	0					
ANR	1050273	Identifier	srcw		1050067	1					
ANR	1050274	CFGEntryNode	ENTRY		1050067		True				
ANR	1050275	CFGExitNode	EXIT		1050067		True				
ANR	1050276	Symbol	TMP_REG3		1050067						
ANR	1050277	Symbol	TMP_REG2		1050067						
ANR	1050278	Symbol	compiler -> cache_argw		1050067						
ANR	1050279	Symbol	FAST_IS_REG		1050067						
ANR	1050280	Symbol	src		1050067						
ANR	1050281	Symbol	srcw		1050067						
ANR	1050282	Symbol	SLJIT_MEM		1050067						
ANR	1050283	Symbol	compiler -> cache_arg		1050067						
ANR	1050284	Symbol	push_inst16		1050067						
ANR	1050285	Symbol	* compiler		1050067						
ANR	1050286	Symbol	BLX		1050067						
ANR	1050287	Symbol	SLJIT_IMM		1050067						
ANR	1050288	Symbol	SET_REGS44		1050067						
ANR	1050289	Symbol	check_sljit_emit_fast_return		1050067						
ANR	1050290	Symbol	getput_arg		1050067						
ANR	1050291	Symbol	load_immediate		1050067						
ANR	1050292	Symbol	MOV		1050067						
ANR	1050293	Symbol	RN3		1050067						
ANR	1050294	Symbol	compiler		1050067						
ANR	1050295	Symbol	getput_arg_fast		1050067						
ANR	1050296	Symbol	compiler -> error		1050067						
ANR	1050297	Symbol	WORD_SIZE		1050067						
ANR	1050298	Function	get_cc	1843:0:58707:59545							
ANR	1050299	FunctionDef	get_cc (sljit_si type)		1050298	0					
ANR	1050300	CompoundStatement		1844:0:58745:59545	1050298	0					
ANR	1050301	SwitchStatement	switch ( type )		1050298	0					
ANR	1050302	Condition	type	1845:9:58756:58759	1050298	0	True				
ANR	1050303	Identifier	type		1050298	0					
ANR	1050304	CompoundStatement		2:15:16:16	1050298	1					
ANR	1050305	Label	case SLJIT_EQUAL :	1846:1:58765:58781	1050298	0	True				
ANR	1050306	Identifier	SLJIT_EQUAL		1050298	0					
ANR	1050307	Label	case SLJIT_MUL_NOT_OVERFLOW :	1847:1:58784:58811	1050298	1	True				
ANR	1050308	Identifier	SLJIT_MUL_NOT_OVERFLOW		1050298	0					
ANR	1050309	Label	case SLJIT_D_EQUAL :	1848:1:58814:58832	1050298	2	True				
ANR	1050310	Identifier	SLJIT_D_EQUAL		1050298	0					
ANR	1050311	ReturnStatement	return 0x0 ;	1849:2:58836:58846	1050298	3	True				
ANR	1050312	PrimaryExpression	0x0		1050298	0					
ANR	1050313	Label	case SLJIT_NOT_EQUAL :	1851:1:58850:58870	1050298	4	True				
ANR	1050314	Identifier	SLJIT_NOT_EQUAL		1050298	0					
ANR	1050315	Label	case SLJIT_MUL_OVERFLOW :	1852:1:58873:58896	1050298	5	True				
ANR	1050316	Identifier	SLJIT_MUL_OVERFLOW		1050298	0					
ANR	1050317	Label	case SLJIT_D_NOT_EQUAL :	1853:1:58899:58921	1050298	6	True				
ANR	1050318	Identifier	SLJIT_D_NOT_EQUAL		1050298	0					
ANR	1050319	ReturnStatement	return 0x1 ;	1854:2:58925:58935	1050298	7	True				
ANR	1050320	PrimaryExpression	0x1		1050298	0					
ANR	1050321	Label	case SLJIT_LESS :	1856:1:58939:58954	1050298	8	True				
ANR	1050322	Identifier	SLJIT_LESS		1050298	0					
ANR	1050323	Label	case SLJIT_D_LESS :	1857:1:58957:58974	1050298	9	True				
ANR	1050324	Identifier	SLJIT_D_LESS		1050298	0					
ANR	1050325	ReturnStatement	return 0x3 ;	1858:2:58978:58988	1050298	10	True				
ANR	1050326	PrimaryExpression	0x3		1050298	0					
ANR	1050327	Label	case SLJIT_GREATER_EQUAL :	1860:1:58992:59016	1050298	11	True				
ANR	1050328	Identifier	SLJIT_GREATER_EQUAL		1050298	0					
ANR	1050329	Label	case SLJIT_D_GREATER_EQUAL :	1861:1:59019:59045	1050298	12	True				
ANR	1050330	Identifier	SLJIT_D_GREATER_EQUAL		1050298	0					
ANR	1050331	ReturnStatement	return 0x2 ;	1862:2:59049:59059	1050298	13	True				
ANR	1050332	PrimaryExpression	0x2		1050298	0					
ANR	1050333	Label	case SLJIT_GREATER :	1864:1:59063:59081	1050298	14	True				
ANR	1050334	Identifier	SLJIT_GREATER		1050298	0					
ANR	1050335	Label	case SLJIT_D_GREATER :	1865:1:59084:59104	1050298	15	True				
ANR	1050336	Identifier	SLJIT_D_GREATER		1050298	0					
ANR	1050337	ReturnStatement	return 0x8 ;	1866:2:59108:59118	1050298	16	True				
ANR	1050338	PrimaryExpression	0x8		1050298	0					
ANR	1050339	Label	case SLJIT_LESS_EQUAL :	1868:1:59122:59143	1050298	17	True				
ANR	1050340	Identifier	SLJIT_LESS_EQUAL		1050298	0					
ANR	1050341	Label	case SLJIT_D_LESS_EQUAL :	1869:1:59146:59169	1050298	18	True				
ANR	1050342	Identifier	SLJIT_D_LESS_EQUAL		1050298	0					
ANR	1050343	ReturnStatement	return 0x9 ;	1870:2:59173:59183	1050298	19	True				
ANR	1050344	PrimaryExpression	0x9		1050298	0					
ANR	1050345	Label	case SLJIT_SIG_LESS :	1872:1:59187:59206	1050298	20	True				
ANR	1050346	Identifier	SLJIT_SIG_LESS		1050298	0					
ANR	1050347	ReturnStatement	return 0xb ;	1873:2:59210:59220	1050298	21	True				
ANR	1050348	PrimaryExpression	0xb		1050298	0					
ANR	1050349	Label	case SLJIT_SIG_GREATER_EQUAL :	1875:1:59224:59252	1050298	22	True				
ANR	1050350	Identifier	SLJIT_SIG_GREATER_EQUAL		1050298	0					
ANR	1050351	ReturnStatement	return 0xa ;	1876:2:59256:59266	1050298	23	True				
ANR	1050352	PrimaryExpression	0xa		1050298	0					
ANR	1050353	Label	case SLJIT_SIG_GREATER :	1878:1:59270:59292	1050298	24	True				
ANR	1050354	Identifier	SLJIT_SIG_GREATER		1050298	0					
ANR	1050355	ReturnStatement	return 0xc ;	1879:2:59296:59306	1050298	25	True				
ANR	1050356	PrimaryExpression	0xc		1050298	0					
ANR	1050357	Label	case SLJIT_SIG_LESS_EQUAL :	1881:1:59310:59335	1050298	26	True				
ANR	1050358	Identifier	SLJIT_SIG_LESS_EQUAL		1050298	0					
ANR	1050359	ReturnStatement	return 0xd ;	1882:2:59339:59349	1050298	27	True				
ANR	1050360	PrimaryExpression	0xd		1050298	0					
ANR	1050361	Label	case SLJIT_OVERFLOW :	1884:1:59353:59372	1050298	28	True				
ANR	1050362	Identifier	SLJIT_OVERFLOW		1050298	0					
ANR	1050363	Label	case SLJIT_D_UNORDERED :	1885:1:59375:59397	1050298	29	True				
ANR	1050364	Identifier	SLJIT_D_UNORDERED		1050298	0					
ANR	1050365	ReturnStatement	return 0x6 ;	1886:2:59401:59411	1050298	30	True				
ANR	1050366	PrimaryExpression	0x6		1050298	0					
ANR	1050367	Label	case SLJIT_NOT_OVERFLOW :	1888:1:59415:59438	1050298	31	True				
ANR	1050368	Identifier	SLJIT_NOT_OVERFLOW		1050298	0					
ANR	1050369	Label	case SLJIT_D_ORDERED :	1889:1:59441:59461	1050298	32	True				
ANR	1050370	Identifier	SLJIT_D_ORDERED		1050298	0					
ANR	1050371	ReturnStatement	return 0x7 ;	1890:2:59465:59475	1050298	33	True				
ANR	1050372	PrimaryExpression	0x7		1050298	0					
ANR	1050373	Label	default :	1892:1:59479:59486	1050298	34	True				
ANR	1050374	Identifier	default		1050298	0					
ANR	1050375	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1893:2:59507:59526	1050298	35	True				
ANR	1050376	CallExpression	SLJIT_ASSERT_STOP ( )		1050298	0					
ANR	1050377	Callee	SLJIT_ASSERT_STOP		1050298	0					
ANR	1050378	Identifier	SLJIT_ASSERT_STOP		1050298	0					
ANR	1050379	ArgumentList			1050298	1					
ANR	1050380	ReturnStatement	return 0xe ;	1894:2:59530:59540	1050298	36	True				
ANR	1050381	PrimaryExpression	0xe		1050298	0					
ANR	1050382	ReturnType	static sljit_uw		1050298	1					
ANR	1050383	Identifier	get_cc		1050298	2					
ANR	1050384	ParameterList	sljit_si type		1050298	3					
ANR	1050385	Parameter	sljit_si type	1843:23:58730:58742	1050298	0	True				
ANR	1050386	ParameterType	sljit_si		1050298	0					
ANR	1050387	Identifier	type		1050298	1					
ANR	1050388	CFGEntryNode	ENTRY		1050298		True				
ANR	1050389	CFGExitNode	EXIT		1050298		True				
ANR	1050390	Symbol	type		1050298						
ANR	1050391	Function	sljit_emit_label	1898:25:59573:59995							
ANR	1050392	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1050391	0					
ANR	1050393	CompoundStatement		1899:0:59643:59995	1050391	0					
ANR	1050394	IdentifierDeclStatement	struct sljit_label * label ;	1900:1:59646:59671	1050391	0	True				
ANR	1050395	IdentifierDecl	* label		1050391	0					
ANR	1050396	IdentifierDeclType	struct sljit_label *		1050391	0					
ANR	1050397	Identifier	label		1050391	1					
ANR	1050398	ExpressionStatement	CHECK_ERROR_PTR ( )	1902:1:59675:59692	1050391	1	True				
ANR	1050399	CallExpression	CHECK_ERROR_PTR ( )		1050391	0					
ANR	1050400	Callee	CHECK_ERROR_PTR		1050391	0					
ANR	1050401	Identifier	CHECK_ERROR_PTR		1050391	0					
ANR	1050402	ArgumentList			1050391	1					
ANR	1050403	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	1903:1:59695:59738	1050391	2	True				
ANR	1050404	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1050391	0					
ANR	1050405	Callee	CHECK_PTR		1050391	0					
ANR	1050406	Identifier	CHECK_PTR		1050391	0					
ANR	1050407	ArgumentList	check_sljit_emit_label ( compiler )		1050391	1					
ANR	1050408	Argument	check_sljit_emit_label ( compiler )		1050391	0					
ANR	1050409	CallExpression	check_sljit_emit_label ( compiler )		1050391	0					
ANR	1050410	Callee	check_sljit_emit_label		1050391	0					
ANR	1050411	Identifier	check_sljit_emit_label		1050391	0					
ANR	1050412	ArgumentList	compiler		1050391	1					
ANR	1050413	Argument	compiler		1050391	0					
ANR	1050414	Identifier	compiler		1050391	0					
ANR	1050415	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1050391	3					
ANR	1050416	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	1905:5:59746:59813	1050391	0	True				
ANR	1050417	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1050391	0		&&			
ANR	1050418	PtrMemberAccess	compiler -> last_label		1050391	0					
ANR	1050419	Identifier	compiler		1050391	0					
ANR	1050420	Identifier	last_label		1050391	1					
ANR	1050421	EqualityExpression	compiler -> last_label -> size == compiler -> size		1050391	1		==			
ANR	1050422	PtrMemberAccess	compiler -> last_label -> size		1050391	0					
ANR	1050423	PtrMemberAccess	compiler -> last_label		1050391	0					
ANR	1050424	Identifier	compiler		1050391	0					
ANR	1050425	Identifier	last_label		1050391	1					
ANR	1050426	Identifier	size		1050391	1					
ANR	1050427	PtrMemberAccess	compiler -> size		1050391	1					
ANR	1050428	Identifier	compiler		1050391	0					
ANR	1050429	Identifier	size		1050391	1					
ANR	1050430	ReturnStatement	return compiler -> last_label ;	1906:2:59818:59845	1050391	1	True				
ANR	1050431	PtrMemberAccess	compiler -> last_label		1050391	0					
ANR	1050432	Identifier	compiler		1050391	0					
ANR	1050433	Identifier	last_label		1050391	1					
ANR	1050434	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	1908:1:59849:59927	1050391	4	True				
ANR	1050435	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1050391	0		=			
ANR	1050436	Identifier	label		1050391	0					
ANR	1050437	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1050391	1					
ANR	1050438	CastTarget	struct sljit_label *		1050391	0					
ANR	1050439	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1050391	1					
ANR	1050440	Callee	ensure_abuf		1050391	0					
ANR	1050441	Identifier	ensure_abuf		1050391	0					
ANR	1050442	ArgumentList	compiler		1050391	1					
ANR	1050443	Argument	compiler		1050391	0					
ANR	1050444	Identifier	compiler		1050391	0					
ANR	1050445	Argument	sizeof ( struct sljit_label )		1050391	1					
ANR	1050446	SizeofExpression	sizeof ( struct sljit_label )		1050391	0					
ANR	1050447	Sizeof	sizeof		1050391	0					
ANR	1050448	SizeofOperand	struct sljit_label		1050391	1					
ANR	1050449	ExpressionStatement	PTR_FAIL_IF ( ! label )	1909:1:59930:59949	1050391	5	True				
ANR	1050450	CallExpression	PTR_FAIL_IF ( ! label )		1050391	0					
ANR	1050451	Callee	PTR_FAIL_IF		1050391	0					
ANR	1050452	Identifier	PTR_FAIL_IF		1050391	0					
ANR	1050453	ArgumentList	! label		1050391	1					
ANR	1050454	Argument	! label		1050391	0					
ANR	1050455	UnaryOperationExpression	! label		1050391	0					
ANR	1050456	UnaryOperator	!		1050391	0					
ANR	1050457	Identifier	label		1050391	1					
ANR	1050458	ExpressionStatement	"set_label ( label , compiler )"	1910:1:59952:59978	1050391	6	True				
ANR	1050459	CallExpression	"set_label ( label , compiler )"		1050391	0					
ANR	1050460	Callee	set_label		1050391	0					
ANR	1050461	Identifier	set_label		1050391	0					
ANR	1050462	ArgumentList	label		1050391	1					
ANR	1050463	Argument	label		1050391	0					
ANR	1050464	Identifier	label		1050391	0					
ANR	1050465	Argument	compiler		1050391	1					
ANR	1050466	Identifier	compiler		1050391	0					
ANR	1050467	ReturnStatement	return label ;	1911:1:59981:59993	1050391	7	True				
ANR	1050468	Identifier	label		1050391	0					
ANR	1050469	ReturnType	struct sljit_label *		1050391	1					
ANR	1050470	Identifier	sljit_emit_label		1050391	2					
ANR	1050471	ParameterList	struct sljit_compiler * compiler		1050391	3					
ANR	1050472	Parameter	struct sljit_compiler * compiler	1898:62:59610:59640	1050391	0	True				
ANR	1050473	ParameterType	struct sljit_compiler *		1050391	0					
ANR	1050474	Identifier	compiler		1050391	1					
ANR	1050475	CFGEntryNode	ENTRY		1050391		True				
ANR	1050476	CFGExitNode	EXIT		1050391		True				
ANR	1050477	Symbol	compiler -> last_label -> size		1050391						
ANR	1050478	Symbol	* compiler -> last_label		1050391						
ANR	1050479	Symbol	compiler -> last_label		1050391						
ANR	1050480	Symbol	* * compiler		1050391						
ANR	1050481	Symbol	compiler -> size		1050391						
ANR	1050482	Symbol	check_sljit_emit_label		1050391						
ANR	1050483	Symbol	label		1050391						
ANR	1050484	Symbol	* compiler		1050391						
ANR	1050485	Symbol	ensure_abuf		1050391						
ANR	1050486	Symbol	compiler		1050391						
ANR	1050487	Function	sljit_emit_jump	1914:25:60023:60887							
ANR	1050488	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1050487	0					
ANR	1050489	CompoundStatement		1915:0:60106:60887	1050487	0					
ANR	1050490	IdentifierDeclStatement	struct sljit_jump * jump ;	1916:1:60109:60132	1050487	0	True				
ANR	1050491	IdentifierDecl	* jump		1050487	0					
ANR	1050492	IdentifierDeclType	struct sljit_jump *		1050487	0					
ANR	1050493	Identifier	jump		1050487	1					
ANR	1050494	IdentifierDeclStatement	sljit_ins cc ;	1917:1:60135:60147	1050487	1	True				
ANR	1050495	IdentifierDecl	cc		1050487	0					
ANR	1050496	IdentifierDeclType	sljit_ins		1050487	0					
ANR	1050497	Identifier	cc		1050487	1					
ANR	1050498	ExpressionStatement	CHECK_ERROR_PTR ( )	1919:1:60151:60168	1050487	2	True				
ANR	1050499	CallExpression	CHECK_ERROR_PTR ( )		1050487	0					
ANR	1050500	Callee	CHECK_ERROR_PTR		1050487	0					
ANR	1050501	Identifier	CHECK_ERROR_PTR		1050487	0					
ANR	1050502	ArgumentList			1050487	1					
ANR	1050503	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	1920:1:60171:60219	1050487	3	True				
ANR	1050504	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1050487	0					
ANR	1050505	Callee	CHECK_PTR		1050487	0					
ANR	1050506	Identifier	CHECK_PTR		1050487	0					
ANR	1050507	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1050487	1					
ANR	1050508	Argument	"check_sljit_emit_jump ( compiler , type )"		1050487	0					
ANR	1050509	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1050487	0					
ANR	1050510	Callee	check_sljit_emit_jump		1050487	0					
ANR	1050511	Identifier	check_sljit_emit_jump		1050487	0					
ANR	1050512	ArgumentList	compiler		1050487	1					
ANR	1050513	Argument	compiler		1050487	0					
ANR	1050514	Identifier	compiler		1050487	0					
ANR	1050515	Argument	type		1050487	1					
ANR	1050516	Identifier	type		1050487	0					
ANR	1050517	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1922:1:60223:60298	1050487	4	True				
ANR	1050518	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050487	0		=			
ANR	1050519	Identifier	jump		1050487	0					
ANR	1050520	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050487	1					
ANR	1050521	CastTarget	struct sljit_jump *		1050487	0					
ANR	1050522	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050487	1					
ANR	1050523	Callee	ensure_abuf		1050487	0					
ANR	1050524	Identifier	ensure_abuf		1050487	0					
ANR	1050525	ArgumentList	compiler		1050487	1					
ANR	1050526	Argument	compiler		1050487	0					
ANR	1050527	Identifier	compiler		1050487	0					
ANR	1050528	Argument	sizeof ( struct sljit_jump )		1050487	1					
ANR	1050529	SizeofExpression	sizeof ( struct sljit_jump )		1050487	0					
ANR	1050530	Sizeof	sizeof		1050487	0					
ANR	1050531	SizeofOperand	struct sljit_jump		1050487	1					
ANR	1050532	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1923:1:60301:60319	1050487	5	True				
ANR	1050533	CallExpression	PTR_FAIL_IF ( ! jump )		1050487	0					
ANR	1050534	Callee	PTR_FAIL_IF		1050487	0					
ANR	1050535	Identifier	PTR_FAIL_IF		1050487	0					
ANR	1050536	ArgumentList	! jump		1050487	1					
ANR	1050537	Argument	! jump		1050487	0					
ANR	1050538	UnaryOperationExpression	! jump		1050487	0					
ANR	1050539	UnaryOperator	!		1050487	0					
ANR	1050540	Identifier	jump		1050487	1					
ANR	1050541	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1924:1:60322:60376	1050487	6	True				
ANR	1050542	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1050487	0					
ANR	1050543	Callee	set_jump		1050487	0					
ANR	1050544	Identifier	set_jump		1050487	0					
ANR	1050545	ArgumentList	jump		1050487	1					
ANR	1050546	Argument	jump		1050487	0					
ANR	1050547	Identifier	jump		1050487	0					
ANR	1050548	Argument	compiler		1050487	1					
ANR	1050549	Identifier	compiler		1050487	0					
ANR	1050550	Argument	type & SLJIT_REWRITABLE_JUMP		1050487	2					
ANR	1050551	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1050487	0		&			
ANR	1050552	Identifier	type		1050487	0					
ANR	1050553	Identifier	SLJIT_REWRITABLE_JUMP		1050487	1					
ANR	1050554	ExpressionStatement	type &= 0xff	1925:1:60379:60391	1050487	7	True				
ANR	1050555	AssignmentExpression	type &= 0xff		1050487	0		&=			
ANR	1050556	Identifier	type		1050487	0					
ANR	1050557	PrimaryExpression	0xff		1050487	1					
ANR	1050558	ExpressionStatement	"PTR_FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"	1928:1:60448:60500	1050487	8	True				
ANR	1050559	CallExpression	"PTR_FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"		1050487	0					
ANR	1050560	Callee	PTR_FAIL_IF		1050487	0					
ANR	1050561	Identifier	PTR_FAIL_IF		1050487	0					
ANR	1050562	ArgumentList	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050487	1					
ANR	1050563	Argument	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050487	0					
ANR	1050564	CallExpression	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050487	0					
ANR	1050565	Callee	emit_imm32_const		1050487	0					
ANR	1050566	Identifier	emit_imm32_const		1050487	0					
ANR	1050567	ArgumentList	compiler		1050487	1					
ANR	1050568	Argument	compiler		1050487	0					
ANR	1050569	Identifier	compiler		1050487	0					
ANR	1050570	Argument	TMP_REG1		1050487	1					
ANR	1050571	Identifier	TMP_REG1		1050487	0					
ANR	1050572	Argument	0		1050487	2					
ANR	1050573	PrimaryExpression	0		1050487	0					
ANR	1050574	IfStatement	if ( type < SLJIT_JUMP )		1050487	9					
ANR	1050575	Condition	type < SLJIT_JUMP	1929:5:60507:60523	1050487	0	True				
ANR	1050576	RelationalExpression	type < SLJIT_JUMP		1050487	0		<			
ANR	1050577	Identifier	type		1050487	0					
ANR	1050578	Identifier	SLJIT_JUMP		1050487	1					
ANR	1050579	CompoundStatement		15:24:419:419	1050487	1					
ANR	1050580	ExpressionStatement	jump -> flags |= IS_COND	1930:2:60530:60552	1050487	0	True				
ANR	1050581	AssignmentExpression	jump -> flags |= IS_COND		1050487	0		|=			
ANR	1050582	PtrMemberAccess	jump -> flags		1050487	0					
ANR	1050583	Identifier	jump		1050487	0					
ANR	1050584	Identifier	flags		1050487	1					
ANR	1050585	Identifier	IS_COND		1050487	1					
ANR	1050586	ExpressionStatement	cc = get_cc ( type )	1931:2:60556:60573	1050487	1	True				
ANR	1050587	AssignmentExpression	cc = get_cc ( type )		1050487	0		=			
ANR	1050588	Identifier	cc		1050487	0					
ANR	1050589	CallExpression	get_cc ( type )		1050487	1					
ANR	1050590	Callee	get_cc		1050487	0					
ANR	1050591	Identifier	get_cc		1050487	0					
ANR	1050592	ArgumentList	type		1050487	1					
ANR	1050593	Argument	type		1050487	0					
ANR	1050594	Identifier	type		1050487	0					
ANR	1050595	ExpressionStatement	jump -> flags |= cc << 8	1932:2:60577:60599	1050487	2	True				
ANR	1050596	AssignmentExpression	jump -> flags |= cc << 8		1050487	0		|=			
ANR	1050597	PtrMemberAccess	jump -> flags		1050487	0					
ANR	1050598	Identifier	jump		1050487	0					
ANR	1050599	Identifier	flags		1050487	1					
ANR	1050600	ShiftExpression	cc << 8		1050487	1		<<			
ANR	1050601	Identifier	cc		1050487	0					
ANR	1050602	PrimaryExpression	8		1050487	1					
ANR	1050603	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	1933:2:60603:60659	1050487	3	True				
ANR	1050604	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1050487	0					
ANR	1050605	Callee	PTR_FAIL_IF		1050487	0					
ANR	1050606	Identifier	PTR_FAIL_IF		1050487	0					
ANR	1050607	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050487	1					
ANR	1050608	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050487	0					
ANR	1050609	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050487	0					
ANR	1050610	Callee	push_inst16		1050487	0					
ANR	1050611	Identifier	push_inst16		1050487	0					
ANR	1050612	ArgumentList	compiler		1050487	1					
ANR	1050613	Argument	compiler		1050487	0					
ANR	1050614	Identifier	compiler		1050487	0					
ANR	1050615	Argument	IT | ( cc << 4 ) | 0x8		1050487	1					
ANR	1050616	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1050487	0		|			
ANR	1050617	Identifier	IT		1050487	0					
ANR	1050618	InclusiveOrExpression	( cc << 4 ) | 0x8		1050487	1		|			
ANR	1050619	ShiftExpression	cc << 4		1050487	0		<<			
ANR	1050620	Identifier	cc		1050487	0					
ANR	1050621	PrimaryExpression	4		1050487	1					
ANR	1050622	PrimaryExpression	0x8		1050487	1					
ANR	1050623	ExpressionStatement	jump -> addr = compiler -> size	1936:1:60666:60693	1050487	10	True				
ANR	1050624	AssignmentExpression	jump -> addr = compiler -> size		1050487	0		=			
ANR	1050625	PtrMemberAccess	jump -> addr		1050487	0					
ANR	1050626	Identifier	jump		1050487	0					
ANR	1050627	Identifier	addr		1050487	1					
ANR	1050628	PtrMemberAccess	compiler -> size		1050487	1					
ANR	1050629	Identifier	compiler		1050487	0					
ANR	1050630	Identifier	size		1050487	1					
ANR	1050631	IfStatement	if ( type <= SLJIT_JUMP )		1050487	11					
ANR	1050632	Condition	type <= SLJIT_JUMP	1937:5:60700:60717	1050487	0	True				
ANR	1050633	RelationalExpression	type <= SLJIT_JUMP		1050487	0		<=			
ANR	1050634	Identifier	type		1050487	0					
ANR	1050635	Identifier	SLJIT_JUMP		1050487	1					
ANR	1050636	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) ) )"	1938:2:60722:60776	1050487	1	True				
ANR	1050637	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) ) )"		1050487	0					
ANR	1050638	Callee	PTR_FAIL_IF		1050487	0					
ANR	1050639	Identifier	PTR_FAIL_IF		1050487	0					
ANR	1050640	ArgumentList	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1050487	1					
ANR	1050641	Argument	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1050487	0					
ANR	1050642	CallExpression	"push_inst16 ( compiler , BX | RN3 ( TMP_REG1 ) )"		1050487	0					
ANR	1050643	Callee	push_inst16		1050487	0					
ANR	1050644	Identifier	push_inst16		1050487	0					
ANR	1050645	ArgumentList	compiler		1050487	1					
ANR	1050646	Argument	compiler		1050487	0					
ANR	1050647	Identifier	compiler		1050487	0					
ANR	1050648	Argument	BX | RN3 ( TMP_REG1 )		1050487	1					
ANR	1050649	InclusiveOrExpression	BX | RN3 ( TMP_REG1 )		1050487	0		|			
ANR	1050650	Identifier	BX		1050487	0					
ANR	1050651	CallExpression	RN3 ( TMP_REG1 )		1050487	1					
ANR	1050652	Callee	RN3		1050487	0					
ANR	1050653	Identifier	RN3		1050487	0					
ANR	1050654	ArgumentList	TMP_REG1		1050487	1					
ANR	1050655	Argument	TMP_REG1		1050487	0					
ANR	1050656	Identifier	TMP_REG1		1050487	0					
ANR	1050657	ElseStatement	else		1050487	0					
ANR	1050658	CompoundStatement		25:6:677:677	1050487	0					
ANR	1050659	ExpressionStatement	jump -> flags |= IS_BL	1940:2:60788:60808	1050487	0	True				
ANR	1050660	AssignmentExpression	jump -> flags |= IS_BL		1050487	0		|=			
ANR	1050661	PtrMemberAccess	jump -> flags		1050487	0					
ANR	1050662	Identifier	jump		1050487	0					
ANR	1050663	Identifier	flags		1050487	1					
ANR	1050664	Identifier	IS_BL		1050487	1					
ANR	1050665	ExpressionStatement	"PTR_FAIL_IF ( push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) )"	1941:2:60812:60867	1050487	1	True				
ANR	1050666	CallExpression	"PTR_FAIL_IF ( push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) )"		1050487	0					
ANR	1050667	Callee	PTR_FAIL_IF		1050487	0					
ANR	1050668	Identifier	PTR_FAIL_IF		1050487	0					
ANR	1050669	ArgumentList	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1050487	1					
ANR	1050670	Argument	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1050487	0					
ANR	1050671	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1050487	0					
ANR	1050672	Callee	push_inst16		1050487	0					
ANR	1050673	Identifier	push_inst16		1050487	0					
ANR	1050674	ArgumentList	compiler		1050487	1					
ANR	1050675	Argument	compiler		1050487	0					
ANR	1050676	Identifier	compiler		1050487	0					
ANR	1050677	Argument	BLX | RN3 ( TMP_REG1 )		1050487	1					
ANR	1050678	InclusiveOrExpression	BLX | RN3 ( TMP_REG1 )		1050487	0		|			
ANR	1050679	Identifier	BLX		1050487	0					
ANR	1050680	CallExpression	RN3 ( TMP_REG1 )		1050487	1					
ANR	1050681	Callee	RN3		1050487	0					
ANR	1050682	Identifier	RN3		1050487	0					
ANR	1050683	ArgumentList	TMP_REG1		1050487	1					
ANR	1050684	Argument	TMP_REG1		1050487	0					
ANR	1050685	Identifier	TMP_REG1		1050487	0					
ANR	1050686	ReturnStatement	return jump ;	1944:1:60874:60885	1050487	12	True				
ANR	1050687	Identifier	jump		1050487	0					
ANR	1050688	ReturnType	struct sljit_jump *		1050487	1					
ANR	1050689	Identifier	sljit_emit_jump		1050487	2					
ANR	1050690	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1050487	3					
ANR	1050691	Parameter	struct sljit_compiler * compiler	1914:60:60058:60088	1050487	0	True				
ANR	1050692	ParameterType	struct sljit_compiler *		1050487	0					
ANR	1050693	Identifier	compiler		1050487	1					
ANR	1050694	Parameter	sljit_si type	1914:93:60091:60103	1050487	1	True				
ANR	1050695	ParameterType	sljit_si		1050487	0					
ANR	1050696	Identifier	type		1050487	1					
ANR	1050697	CFGEntryNode	ENTRY		1050487		True				
ANR	1050698	CFGExitNode	EXIT		1050487		True				
ANR	1050699	Symbol	cc		1050487						
ANR	1050700	Symbol	get_cc		1050487						
ANR	1050701	Symbol	TMP_REG1		1050487						
ANR	1050702	Symbol	SLJIT_JUMP		1050487						
ANR	1050703	Symbol	* jump		1050487						
ANR	1050704	Symbol	push_inst16		1050487						
ANR	1050705	Symbol	emit_imm32_const		1050487						
ANR	1050706	Symbol	jump -> flags		1050487						
ANR	1050707	Symbol	jump -> addr		1050487						
ANR	1050708	Symbol	ensure_abuf		1050487						
ANR	1050709	Symbol	IT		1050487						
ANR	1050710	Symbol	* compiler		1050487						
ANR	1050711	Symbol	type		1050487						
ANR	1050712	Symbol	BLX		1050487						
ANR	1050713	Symbol	compiler -> size		1050487						
ANR	1050714	Symbol	IS_COND		1050487						
ANR	1050715	Symbol	IS_BL		1050487						
ANR	1050716	Symbol	BX		1050487						
ANR	1050717	Symbol	RN3		1050487						
ANR	1050718	Symbol	check_sljit_emit_jump		1050487						
ANR	1050719	Symbol	SLJIT_REWRITABLE_JUMP		1050487						
ANR	1050720	Symbol	compiler		1050487						
ANR	1050721	Symbol	jump		1050487						
ANR	1050722	Function	sljit_emit_ijump	1947:0:60890:61884							
ANR	1050723	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1050722	0					
ANR	1050724	CompoundStatement		1948:0:61018:61884	1050722	0					
ANR	1050725	IdentifierDeclStatement	struct sljit_jump * jump ;	1949:1:61021:61044	1050722	0	True				
ANR	1050726	IdentifierDecl	* jump		1050722	0					
ANR	1050727	IdentifierDeclType	struct sljit_jump *		1050722	0					
ANR	1050728	Identifier	jump		1050722	1					
ANR	1050729	ExpressionStatement	CHECK_ERROR ( )	1951:1:61048:61061	1050722	1	True				
ANR	1050730	CallExpression	CHECK_ERROR ( )		1050722	0					
ANR	1050731	Callee	CHECK_ERROR		1050722	0					
ANR	1050732	Identifier	CHECK_ERROR		1050722	0					
ANR	1050733	ArgumentList			1050722	1					
ANR	1050734	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	1952:1:61064:61120	1050722	2	True				
ANR	1050735	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1050722	0					
ANR	1050736	Callee	CHECK		1050722	0					
ANR	1050737	Identifier	CHECK		1050722	0					
ANR	1050738	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1050722	1					
ANR	1050739	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1050722	0					
ANR	1050740	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1050722	0					
ANR	1050741	Callee	check_sljit_emit_ijump		1050722	0					
ANR	1050742	Identifier	check_sljit_emit_ijump		1050722	0					
ANR	1050743	ArgumentList	compiler		1050722	1					
ANR	1050744	Argument	compiler		1050722	0					
ANR	1050745	Identifier	compiler		1050722	0					
ANR	1050746	Argument	type		1050722	1					
ANR	1050747	Identifier	type		1050722	0					
ANR	1050748	Argument	src		1050722	2					
ANR	1050749	Identifier	src		1050722	0					
ANR	1050750	Argument	srcw		1050722	3					
ANR	1050751	Identifier	srcw		1050722	0					
ANR	1050752	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1953:1:61123:61153	1050722	3	True				
ANR	1050753	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1050722	0					
ANR	1050754	Callee	ADJUST_LOCAL_OFFSET		1050722	0					
ANR	1050755	Identifier	ADJUST_LOCAL_OFFSET		1050722	0					
ANR	1050756	ArgumentList	src		1050722	1					
ANR	1050757	Argument	src		1050722	0					
ANR	1050758	Identifier	src		1050722	0					
ANR	1050759	Argument	srcw		1050722	1					
ANR	1050760	Identifier	srcw		1050722	0					
ANR	1050761	IfStatement	if ( ! ( src & SLJIT_IMM ) )		1050722	4					
ANR	1050762	Condition	! ( src & SLJIT_IMM )	1956:5:61214:61231	1050722	0	True				
ANR	1050763	UnaryOperationExpression	! ( src & SLJIT_IMM )		1050722	0					
ANR	1050764	UnaryOperator	!		1050722	0					
ANR	1050765	BitAndExpression	src & SLJIT_IMM		1050722	1		&			
ANR	1050766	Identifier	src		1050722	0					
ANR	1050767	Identifier	SLJIT_IMM		1050722	1					
ANR	1050768	CompoundStatement		9:25:215:215	1050722	1					
ANR	1050769	IfStatement	if ( FAST_IS_REG ( src ) )		1050722	0					
ANR	1050770	Condition	FAST_IS_REG ( src )	1957:6:61242:61257	1050722	0	True				
ANR	1050771	CallExpression	FAST_IS_REG ( src )		1050722	0					
ANR	1050772	Callee	FAST_IS_REG		1050722	0					
ANR	1050773	Identifier	FAST_IS_REG		1050722	0					
ANR	1050774	ArgumentList	src		1050722	1					
ANR	1050775	Argument	src		1050722	0					
ANR	1050776	Identifier	src		1050722	0					
ANR	1050777	ReturnStatement	"return push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src ) ) ;"	1958:3:61263:61335	1050722	1	True				
ANR	1050778	CallExpression	"push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src ) )"		1050722	0					
ANR	1050779	Callee	push_inst16		1050722	0					
ANR	1050780	Identifier	push_inst16		1050722	0					
ANR	1050781	ArgumentList	compiler		1050722	1					
ANR	1050782	Argument	compiler		1050722	0					
ANR	1050783	Identifier	compiler		1050722	0					
ANR	1050784	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src )		1050722	1					
ANR	1050785	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( src )		1050722	0		|			
ANR	1050786	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1050722	0					
ANR	1050787	Condition	type <= SLJIT_JUMP		1050722	0					
ANR	1050788	RelationalExpression	type <= SLJIT_JUMP		1050722	0		<=			
ANR	1050789	Identifier	type		1050722	0					
ANR	1050790	Identifier	SLJIT_JUMP		1050722	1					
ANR	1050791	Identifier	BX		1050722	1					
ANR	1050792	Identifier	BLX		1050722	2					
ANR	1050793	CallExpression	RN3 ( src )		1050722	1					
ANR	1050794	Callee	RN3		1050722	0					
ANR	1050795	Identifier	RN3		1050722	0					
ANR	1050796	ArgumentList	src		1050722	1					
ANR	1050797	Argument	src		1050722	0					
ANR	1050798	Identifier	src		1050722	0					
ANR	1050799	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw ) )"	1960:2:61340:61432	1050722	1	True				
ANR	1050800	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw ) )"		1050722	0					
ANR	1050801	Callee	FAIL_IF		1050722	0					
ANR	1050802	Identifier	FAIL_IF		1050722	0					
ANR	1050803	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1050722	1					
ANR	1050804	Argument	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1050722	0					
ANR	1050805	CallExpression	"emit_op_mem ( compiler , WORD_SIZE , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , src , srcw )"		1050722	0					
ANR	1050806	Callee	emit_op_mem		1050722	0					
ANR	1050807	Identifier	emit_op_mem		1050722	0					
ANR	1050808	ArgumentList	compiler		1050722	1					
ANR	1050809	Argument	compiler		1050722	0					
ANR	1050810	Identifier	compiler		1050722	0					
ANR	1050811	Argument	WORD_SIZE		1050722	1					
ANR	1050812	Identifier	WORD_SIZE		1050722	0					
ANR	1050813	Argument	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1050722	2					
ANR	1050814	ConditionalExpression	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1050722	0					
ANR	1050815	Condition	type <= SLJIT_JUMP		1050722	0					
ANR	1050816	RelationalExpression	type <= SLJIT_JUMP		1050722	0		<=			
ANR	1050817	Identifier	type		1050722	0					
ANR	1050818	Identifier	SLJIT_JUMP		1050722	1					
ANR	1050819	Identifier	TMP_PC		1050722	1					
ANR	1050820	Identifier	TMP_REG1		1050722	2					
ANR	1050821	Argument	src		1050722	3					
ANR	1050822	Identifier	src		1050722	0					
ANR	1050823	Argument	srcw		1050722	4					
ANR	1050824	Identifier	srcw		1050722	0					
ANR	1050825	IfStatement	if ( type >= SLJIT_FAST_CALL )		1050722	2					
ANR	1050826	Condition	type >= SLJIT_FAST_CALL	1961:6:61440:61462	1050722	0	True				
ANR	1050827	RelationalExpression	type >= SLJIT_FAST_CALL		1050722	0		>=			
ANR	1050828	Identifier	type		1050722	0					
ANR	1050829	Identifier	SLJIT_FAST_CALL		1050722	1					
ANR	1050830	ReturnStatement	"return push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) ) ;"	1962:3:61468:61517	1050722	1	True				
ANR	1050831	CallExpression	"push_inst16 ( compiler , BLX | RN3 ( TMP_REG1 ) )"		1050722	0					
ANR	1050832	Callee	push_inst16		1050722	0					
ANR	1050833	Identifier	push_inst16		1050722	0					
ANR	1050834	ArgumentList	compiler		1050722	1					
ANR	1050835	Argument	compiler		1050722	0					
ANR	1050836	Identifier	compiler		1050722	0					
ANR	1050837	Argument	BLX | RN3 ( TMP_REG1 )		1050722	1					
ANR	1050838	InclusiveOrExpression	BLX | RN3 ( TMP_REG1 )		1050722	0		|			
ANR	1050839	Identifier	BLX		1050722	0					
ANR	1050840	CallExpression	RN3 ( TMP_REG1 )		1050722	1					
ANR	1050841	Callee	RN3		1050722	0					
ANR	1050842	Identifier	RN3		1050722	0					
ANR	1050843	ArgumentList	TMP_REG1		1050722	1					
ANR	1050844	Argument	TMP_REG1		1050722	0					
ANR	1050845	Identifier	TMP_REG1		1050722	0					
ANR	1050846	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1965:1:61524:61599	1050722	5	True				
ANR	1050847	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050722	0		=			
ANR	1050848	Identifier	jump		1050722	0					
ANR	1050849	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050722	1					
ANR	1050850	CastTarget	struct sljit_jump *		1050722	0					
ANR	1050851	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1050722	1					
ANR	1050852	Callee	ensure_abuf		1050722	0					
ANR	1050853	Identifier	ensure_abuf		1050722	0					
ANR	1050854	ArgumentList	compiler		1050722	1					
ANR	1050855	Argument	compiler		1050722	0					
ANR	1050856	Identifier	compiler		1050722	0					
ANR	1050857	Argument	sizeof ( struct sljit_jump )		1050722	1					
ANR	1050858	SizeofExpression	sizeof ( struct sljit_jump )		1050722	0					
ANR	1050859	Sizeof	sizeof		1050722	0					
ANR	1050860	SizeofOperand	struct sljit_jump		1050722	1					
ANR	1050861	ExpressionStatement	FAIL_IF ( ! jump )	1966:1:61602:61616	1050722	6	True				
ANR	1050862	CallExpression	FAIL_IF ( ! jump )		1050722	0					
ANR	1050863	Callee	FAIL_IF		1050722	0					
ANR	1050864	Identifier	FAIL_IF		1050722	0					
ANR	1050865	ArgumentList	! jump		1050722	1					
ANR	1050866	Argument	! jump		1050722	0					
ANR	1050867	UnaryOperationExpression	! jump		1050722	0					
ANR	1050868	UnaryOperator	!		1050722	0					
ANR	1050869	Identifier	jump		1050722	1					
ANR	1050870	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"	1967:1:61619:61696	1050722	7	True				
ANR	1050871	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"		1050722	0					
ANR	1050872	Callee	set_jump		1050722	0					
ANR	1050873	Identifier	set_jump		1050722	0					
ANR	1050874	ArgumentList	jump		1050722	1					
ANR	1050875	Argument	jump		1050722	0					
ANR	1050876	Identifier	jump		1050722	0					
ANR	1050877	Argument	compiler		1050722	1					
ANR	1050878	Identifier	compiler		1050722	0					
ANR	1050879	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1050722	2					
ANR	1050880	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1050722	0		|			
ANR	1050881	Identifier	JUMP_ADDR		1050722	0					
ANR	1050882	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_BL : 0		1050722	1					
ANR	1050883	Condition	type >= SLJIT_FAST_CALL		1050722	0					
ANR	1050884	RelationalExpression	type >= SLJIT_FAST_CALL		1050722	0		>=			
ANR	1050885	Identifier	type		1050722	0					
ANR	1050886	Identifier	SLJIT_FAST_CALL		1050722	1					
ANR	1050887	Identifier	IS_BL		1050722	1					
ANR	1050888	PrimaryExpression	0		1050722	2					
ANR	1050889	ExpressionStatement	jump -> u . target = srcw	1968:1:61699:61720	1050722	8	True				
ANR	1050890	AssignmentExpression	jump -> u . target = srcw		1050722	0		=			
ANR	1050891	MemberAccess	jump -> u . target		1050722	0					
ANR	1050892	PtrMemberAccess	jump -> u		1050722	0					
ANR	1050893	Identifier	jump		1050722	0					
ANR	1050894	Identifier	u		1050722	1					
ANR	1050895	Identifier	target		1050722	1					
ANR	1050896	Identifier	srcw		1050722	1					
ANR	1050897	ExpressionStatement	"FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"	1970:1:61724:61772	1050722	9	True				
ANR	1050898	CallExpression	"FAIL_IF ( emit_imm32_const ( compiler , TMP_REG1 , 0 ) )"		1050722	0					
ANR	1050899	Callee	FAIL_IF		1050722	0					
ANR	1050900	Identifier	FAIL_IF		1050722	0					
ANR	1050901	ArgumentList	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050722	1					
ANR	1050902	Argument	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050722	0					
ANR	1050903	CallExpression	"emit_imm32_const ( compiler , TMP_REG1 , 0 )"		1050722	0					
ANR	1050904	Callee	emit_imm32_const		1050722	0					
ANR	1050905	Identifier	emit_imm32_const		1050722	0					
ANR	1050906	ArgumentList	compiler		1050722	1					
ANR	1050907	Argument	compiler		1050722	0					
ANR	1050908	Identifier	compiler		1050722	0					
ANR	1050909	Argument	TMP_REG1		1050722	1					
ANR	1050910	Identifier	TMP_REG1		1050722	0					
ANR	1050911	Argument	0		1050722	2					
ANR	1050912	PrimaryExpression	0		1050722	0					
ANR	1050913	ExpressionStatement	jump -> addr = compiler -> size	1971:1:61775:61802	1050722	10	True				
ANR	1050914	AssignmentExpression	jump -> addr = compiler -> size		1050722	0		=			
ANR	1050915	PtrMemberAccess	jump -> addr		1050722	0					
ANR	1050916	Identifier	jump		1050722	0					
ANR	1050917	Identifier	addr		1050722	1					
ANR	1050918	PtrMemberAccess	compiler -> size		1050722	1					
ANR	1050919	Identifier	compiler		1050722	0					
ANR	1050920	Identifier	size		1050722	1					
ANR	1050921	ReturnStatement	"return push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 ) ) ;"	1972:1:61805:61882	1050722	11	True				
ANR	1050922	CallExpression	"push_inst16 ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 ) )"		1050722	0					
ANR	1050923	Callee	push_inst16		1050722	0					
ANR	1050924	Identifier	push_inst16		1050722	0					
ANR	1050925	ArgumentList	compiler		1050722	1					
ANR	1050926	Argument	compiler		1050722	0					
ANR	1050927	Identifier	compiler		1050722	0					
ANR	1050928	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 )		1050722	1					
ANR	1050929	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RN3 ( TMP_REG1 )		1050722	0		|			
ANR	1050930	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1050722	0					
ANR	1050931	Condition	type <= SLJIT_JUMP		1050722	0					
ANR	1050932	RelationalExpression	type <= SLJIT_JUMP		1050722	0		<=			
ANR	1050933	Identifier	type		1050722	0					
ANR	1050934	Identifier	SLJIT_JUMP		1050722	1					
ANR	1050935	Identifier	BX		1050722	1					
ANR	1050936	Identifier	BLX		1050722	2					
ANR	1050937	CallExpression	RN3 ( TMP_REG1 )		1050722	1					
ANR	1050938	Callee	RN3		1050722	0					
ANR	1050939	Identifier	RN3		1050722	0					
ANR	1050940	ArgumentList	TMP_REG1		1050722	1					
ANR	1050941	Argument	TMP_REG1		1050722	0					
ANR	1050942	Identifier	TMP_REG1		1050722	0					
ANR	1050943	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1050722	1					
ANR	1050944	Identifier	sljit_emit_ijump		1050722	2					
ANR	1050945	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1050722	3					
ANR	1050946	Parameter	struct sljit_compiler * compiler	1947:51:60941:60971	1050722	0	True				
ANR	1050947	ParameterType	struct sljit_compiler *		1050722	0					
ANR	1050948	Identifier	compiler		1050722	1					
ANR	1050949	Parameter	sljit_si type	1947:84:60974:60986	1050722	1	True				
ANR	1050950	ParameterType	sljit_si		1050722	0					
ANR	1050951	Identifier	type		1050722	1					
ANR	1050952	Parameter	sljit_si src	1947:99:60989:61000	1050722	2	True				
ANR	1050953	ParameterType	sljit_si		1050722	0					
ANR	1050954	Identifier	src		1050722	1					
ANR	1050955	Parameter	sljit_sw srcw	1947:113:61003:61015	1050722	3	True				
ANR	1050956	ParameterType	sljit_sw		1050722	0					
ANR	1050957	Identifier	srcw		1050722	1					
ANR	1050958	CFGEntryNode	ENTRY		1050722		True				
ANR	1050959	CFGExitNode	EXIT		1050722		True				
ANR	1050960	Symbol	check_sljit_emit_ijump		1050722						
ANR	1050961	Symbol	SLJIT_JUMP		1050722						
ANR	1050962	Symbol	TMP_REG1		1050722						
ANR	1050963	Symbol	TMP_PC		1050722						
ANR	1050964	Symbol	* jump		1050722						
ANR	1050965	Symbol	jump -> u		1050722						
ANR	1050966	Symbol	push_inst16		1050722						
ANR	1050967	Symbol	JUMP_ADDR		1050722						
ANR	1050968	Symbol	* compiler		1050722						
ANR	1050969	Symbol	type		1050722						
ANR	1050970	Symbol	BLX		1050722						
ANR	1050971	Symbol	SLJIT_IMM		1050722						
ANR	1050972	Symbol	IS_BL		1050722						
ANR	1050973	Symbol	BX		1050722						
ANR	1050974	Symbol	SLJIT_FAST_CALL		1050722						
ANR	1050975	Symbol	compiler		1050722						
ANR	1050976	Symbol	jump		1050722						
ANR	1050977	Symbol	FAST_IS_REG		1050722						
ANR	1050978	Symbol	src		1050722						
ANR	1050979	Symbol	srcw		1050722						
ANR	1050980	Symbol	emit_imm32_const		1050722						
ANR	1050981	Symbol	emit_op_mem		1050722						
ANR	1050982	Symbol	jump -> addr		1050722						
ANR	1050983	Symbol	ensure_abuf		1050722						
ANR	1050984	Symbol	compiler -> size		1050722						
ANR	1050985	Symbol	RN3		1050722						
ANR	1050986	Symbol	jump -> u . target		1050722						
ANR	1050987	Symbol	WORD_SIZE		1050722						
ANR	1050988	Function	sljit_emit_op_flags	1975:0:61887:64697							
ANR	1050989	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1050988	0					
ANR	1050990	CompoundStatement		1979:0:62063:64697	1050988	0					
ANR	1050991	IdentifierDeclStatement	"sljit_si dst_r , flags = GET_ALL_FLAGS ( op ) ;"	1980:1:62066:62107	1050988	0	True				
ANR	1050992	IdentifierDecl	dst_r		1050988	0					
ANR	1050993	IdentifierDeclType	sljit_si		1050988	0					
ANR	1050994	Identifier	dst_r		1050988	1					
ANR	1050995	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1050988	1					
ANR	1050996	IdentifierDeclType	sljit_si		1050988	0					
ANR	1050997	Identifier	flags		1050988	1					
ANR	1050998	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1050988	2		=			
ANR	1050999	Identifier	flags		1050988	0					
ANR	1051000	CallExpression	GET_ALL_FLAGS ( op )		1050988	1					
ANR	1051001	Callee	GET_ALL_FLAGS		1050988	0					
ANR	1051002	Identifier	GET_ALL_FLAGS		1050988	0					
ANR	1051003	ArgumentList	op		1050988	1					
ANR	1051004	Argument	op		1050988	0					
ANR	1051005	Identifier	op		1050988	0					
ANR	1051006	IdentifierDeclStatement	"sljit_ins cc , ins ;"	1981:1:62110:62127	1050988	1	True				
ANR	1051007	IdentifierDecl	cc		1050988	0					
ANR	1051008	IdentifierDeclType	sljit_ins		1050988	0					
ANR	1051009	Identifier	cc		1050988	1					
ANR	1051010	IdentifierDecl	ins		1050988	1					
ANR	1051011	IdentifierDeclType	sljit_ins		1050988	0					
ANR	1051012	Identifier	ins		1050988	1					
ANR	1051013	ExpressionStatement	CHECK_ERROR ( )	1983:1:62131:62144	1050988	2	True				
ANR	1051014	CallExpression	CHECK_ERROR ( )		1050988	0					
ANR	1051015	Callee	CHECK_ERROR		1050988	0					
ANR	1051016	Identifier	CHECK_ERROR		1050988	0					
ANR	1051017	ArgumentList			1050988	1					
ANR	1051018	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	1984:1:62147:62221	1050988	3	True				
ANR	1051019	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1050988	0					
ANR	1051020	Callee	CHECK		1050988	0					
ANR	1051021	Identifier	CHECK		1050988	0					
ANR	1051022	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1050988	1					
ANR	1051023	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1050988	0					
ANR	1051024	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1050988	0					
ANR	1051025	Callee	check_sljit_emit_op_flags		1050988	0					
ANR	1051026	Identifier	check_sljit_emit_op_flags		1050988	0					
ANR	1051027	ArgumentList	compiler		1050988	1					
ANR	1051028	Argument	compiler		1050988	0					
ANR	1051029	Identifier	compiler		1050988	0					
ANR	1051030	Argument	op		1050988	1					
ANR	1051031	Identifier	op		1050988	0					
ANR	1051032	Argument	dst		1050988	2					
ANR	1051033	Identifier	dst		1050988	0					
ANR	1051034	Argument	dstw		1050988	3					
ANR	1051035	Identifier	dstw		1050988	0					
ANR	1051036	Argument	src		1050988	4					
ANR	1051037	Identifier	src		1050988	0					
ANR	1051038	Argument	srcw		1050988	5					
ANR	1051039	Identifier	srcw		1050988	0					
ANR	1051040	Argument	type		1050988	6					
ANR	1051041	Identifier	type		1050988	0					
ANR	1051042	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1985:1:62224:62254	1050988	4	True				
ANR	1051043	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1050988	0					
ANR	1051044	Callee	ADJUST_LOCAL_OFFSET		1050988	0					
ANR	1051045	Identifier	ADJUST_LOCAL_OFFSET		1050988	0					
ANR	1051046	ArgumentList	dst		1050988	1					
ANR	1051047	Argument	dst		1050988	0					
ANR	1051048	Identifier	dst		1050988	0					
ANR	1051049	Argument	dstw		1050988	1					
ANR	1051050	Identifier	dstw		1050988	0					
ANR	1051051	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1986:1:62257:62287	1050988	5	True				
ANR	1051052	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1050988	0					
ANR	1051053	Callee	ADJUST_LOCAL_OFFSET		1050988	0					
ANR	1051054	Identifier	ADJUST_LOCAL_OFFSET		1050988	0					
ANR	1051055	ArgumentList	src		1050988	1					
ANR	1051056	Argument	src		1050988	0					
ANR	1051057	Identifier	src		1050988	0					
ANR	1051058	Argument	srcw		1050988	1					
ANR	1051059	Identifier	srcw		1050988	0					
ANR	1051060	IfStatement	if ( dst == SLJIT_UNUSED )		1050988	6					
ANR	1051061	Condition	dst == SLJIT_UNUSED	1988:5:62295:62313	1050988	0	True				
ANR	1051062	EqualityExpression	dst == SLJIT_UNUSED		1050988	0		==			
ANR	1051063	Identifier	dst		1050988	0					
ANR	1051064	Identifier	SLJIT_UNUSED		1050988	1					
ANR	1051065	ReturnStatement	return SLJIT_SUCCESS ;	1989:2:62318:62338	1050988	1	True				
ANR	1051066	Identifier	SLJIT_SUCCESS		1050988	0					
ANR	1051067	ExpressionStatement	op = GET_OPCODE ( op )	1991:1:62342:62361	1050988	7	True				
ANR	1051068	AssignmentExpression	op = GET_OPCODE ( op )		1050988	0		=			
ANR	1051069	Identifier	op		1050988	0					
ANR	1051070	CallExpression	GET_OPCODE ( op )		1050988	1					
ANR	1051071	Callee	GET_OPCODE		1050988	0					
ANR	1051072	Identifier	GET_OPCODE		1050988	0					
ANR	1051073	ArgumentList	op		1050988	1					
ANR	1051074	Argument	op		1050988	0					
ANR	1051075	Identifier	op		1050988	0					
ANR	1051076	ExpressionStatement	cc = get_cc ( type & 0xff )	1992:1:62364:62388	1050988	8	True				
ANR	1051077	AssignmentExpression	cc = get_cc ( type & 0xff )		1050988	0		=			
ANR	1051078	Identifier	cc		1050988	0					
ANR	1051079	CallExpression	get_cc ( type & 0xff )		1050988	1					
ANR	1051080	Callee	get_cc		1050988	0					
ANR	1051081	Identifier	get_cc		1050988	0					
ANR	1051082	ArgumentList	type & 0xff		1050988	1					
ANR	1051083	Argument	type & 0xff		1050988	0					
ANR	1051084	BitAndExpression	type & 0xff		1050988	0		&			
ANR	1051085	Identifier	type		1050988	0					
ANR	1051086	PrimaryExpression	0xff		1050988	1					
ANR	1051087	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2	1993:1:62391:62432	1050988	9	True				
ANR	1051088	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2		1050988	0		=			
ANR	1051089	Identifier	dst_r		1050988	0					
ANR	1051090	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG2		1050988	1					
ANR	1051091	Condition	FAST_IS_REG ( dst )		1050988	0					
ANR	1051092	CallExpression	FAST_IS_REG ( dst )		1050988	0					
ANR	1051093	Callee	FAST_IS_REG		1050988	0					
ANR	1051094	Identifier	FAST_IS_REG		1050988	0					
ANR	1051095	ArgumentList	dst		1050988	1					
ANR	1051096	Argument	dst		1050988	0					
ANR	1051097	Identifier	dst		1050988	0					
ANR	1051098	Identifier	dst		1050988	1					
ANR	1051099	Identifier	TMP_REG2		1050988	2					
ANR	1051100	IfStatement	if ( op < SLJIT_ADD )		1050988	10					
ANR	1051101	Condition	op < SLJIT_ADD	1995:5:62440:62453	1050988	0	True				
ANR	1051102	RelationalExpression	op < SLJIT_ADD		1050988	0		<			
ANR	1051103	Identifier	op		1050988	0					
ANR	1051104	Identifier	SLJIT_ADD		1050988	1					
ANR	1051105	CompoundStatement		17:21:392:392	1050988	1					
ANR	1051106	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"	1996:2:62460:62540	1050988	0	True				
ANR	1051107	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"		1050988	0					
ANR	1051108	Callee	FAIL_IF		1050988	0					
ANR	1051109	Identifier	FAIL_IF		1050988	0					
ANR	1051110	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	1					
ANR	1051111	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	0					
ANR	1051112	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	0					
ANR	1051113	Callee	push_inst16		1050988	0					
ANR	1051114	Identifier	push_inst16		1050988	0					
ANR	1051115	ArgumentList	compiler		1050988	1					
ANR	1051116	Argument	compiler		1050988	0					
ANR	1051117	Identifier	compiler		1050988	0					
ANR	1051118	Argument	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1					
ANR	1051119	InclusiveOrExpression	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	0		|			
ANR	1051120	Identifier	IT		1050988	0					
ANR	1051121	InclusiveOrExpression	( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1		|			
ANR	1051122	ShiftExpression	cc << 4		1050988	0		<<			
ANR	1051123	Identifier	cc		1050988	0					
ANR	1051124	PrimaryExpression	4		1050988	1					
ANR	1051125	InclusiveOrExpression	( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1		|			
ANR	1051126	ShiftExpression	( ( cc & 0x1 ) ^ 0x1 ) << 3		1050988	0		<<			
ANR	1051127	ExclusiveOrExpression	( cc & 0x1 ) ^ 0x1		1050988	0		^			
ANR	1051128	BitAndExpression	cc & 0x1		1050988	0		&			
ANR	1051129	Identifier	cc		1050988	0					
ANR	1051130	PrimaryExpression	0x1		1050988	1					
ANR	1051131	PrimaryExpression	0x1		1050988	1					
ANR	1051132	PrimaryExpression	3		1050988	1					
ANR	1051133	PrimaryExpression	0x4		1050988	1					
ANR	1051134	IfStatement	if ( reg_map [ dst_r ] > 7 )		1050988	1					
ANR	1051135	Condition	reg_map [ dst_r ] > 7	1997:6:62548:62565	1050988	0	True				
ANR	1051136	RelationalExpression	reg_map [ dst_r ] > 7		1050988	0		>			
ANR	1051137	ArrayIndexing	reg_map [ dst_r ]		1050988	0					
ANR	1051138	Identifier	reg_map		1050988	0					
ANR	1051139	Identifier	dst_r		1050988	1					
ANR	1051140	PrimaryExpression	7		1050988	1					
ANR	1051141	CompoundStatement		19:26:504:504	1050988	1					
ANR	1051142	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 ) )"	1998:3:62573:62628	1050988	0	True				
ANR	1051143	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 ) )"		1050988	0					
ANR	1051144	Callee	FAIL_IF		1050988	0					
ANR	1051145	Identifier	FAIL_IF		1050988	0					
ANR	1051146	ArgumentList	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1050988	1					
ANR	1051147	Argument	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051148	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051149	Callee	push_inst32		1050988	0					
ANR	1051150	Identifier	push_inst32		1050988	0					
ANR	1051151	ArgumentList	compiler		1050988	1					
ANR	1051152	Argument	compiler		1050988	0					
ANR	1051153	Identifier	compiler		1050988	0					
ANR	1051154	Argument	MOV_WI | RD4 ( dst_r ) | 1		1050988	1					
ANR	1051155	InclusiveOrExpression	MOV_WI | RD4 ( dst_r ) | 1		1050988	0		|			
ANR	1051156	Identifier	MOV_WI		1050988	0					
ANR	1051157	InclusiveOrExpression	RD4 ( dst_r ) | 1		1050988	1		|			
ANR	1051158	CallExpression	RD4 ( dst_r )		1050988	0					
ANR	1051159	Callee	RD4		1050988	0					
ANR	1051160	Identifier	RD4		1050988	0					
ANR	1051161	ArgumentList	dst_r		1050988	1					
ANR	1051162	Argument	dst_r		1050988	0					
ANR	1051163	Identifier	dst_r		1050988	0					
ANR	1051164	PrimaryExpression	1		1050988	1					
ANR	1051165	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 ) )"	1999:3:62633:62688	1050988	1	True				
ANR	1051166	CallExpression	"FAIL_IF ( push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 ) )"		1050988	0					
ANR	1051167	Callee	FAIL_IF		1050988	0					
ANR	1051168	Identifier	FAIL_IF		1050988	0					
ANR	1051169	ArgumentList	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1050988	1					
ANR	1051170	Argument	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1050988	0					
ANR	1051171	CallExpression	"push_inst32 ( compiler , MOV_WI | RD4 ( dst_r ) | 0 )"		1050988	0					
ANR	1051172	Callee	push_inst32		1050988	0					
ANR	1051173	Identifier	push_inst32		1050988	0					
ANR	1051174	ArgumentList	compiler		1050988	1					
ANR	1051175	Argument	compiler		1050988	0					
ANR	1051176	Identifier	compiler		1050988	0					
ANR	1051177	Argument	MOV_WI | RD4 ( dst_r ) | 0		1050988	1					
ANR	1051178	InclusiveOrExpression	MOV_WI | RD4 ( dst_r ) | 0		1050988	0		|			
ANR	1051179	Identifier	MOV_WI		1050988	0					
ANR	1051180	InclusiveOrExpression	RD4 ( dst_r ) | 0		1050988	1		|			
ANR	1051181	CallExpression	RD4 ( dst_r )		1050988	0					
ANR	1051182	Callee	RD4		1050988	0					
ANR	1051183	Identifier	RD4		1050988	0					
ANR	1051184	ArgumentList	dst_r		1050988	1					
ANR	1051185	Argument	dst_r		1050988	0					
ANR	1051186	Identifier	dst_r		1050988	0					
ANR	1051187	PrimaryExpression	0		1050988	1					
ANR	1051188	ElseStatement	else		1050988	0					
ANR	1051189	CompoundStatement		22:9:635:635	1050988	0					
ANR	1051190	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 ) )"	2001:3:62704:62759	1050988	0	True				
ANR	1051191	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 ) )"		1050988	0					
ANR	1051192	Callee	FAIL_IF		1050988	0					
ANR	1051193	Identifier	FAIL_IF		1050988	0					
ANR	1051194	ArgumentList	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1050988	1					
ANR	1051195	Argument	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1050988	0					
ANR	1051196	CallExpression	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 1 )"		1050988	0					
ANR	1051197	Callee	push_inst16		1050988	0					
ANR	1051198	Identifier	push_inst16		1050988	0					
ANR	1051199	ArgumentList	compiler		1050988	1					
ANR	1051200	Argument	compiler		1050988	0					
ANR	1051201	Identifier	compiler		1050988	0					
ANR	1051202	Argument	MOVSI | RDN3 ( dst_r ) | 1		1050988	1					
ANR	1051203	InclusiveOrExpression	MOVSI | RDN3 ( dst_r ) | 1		1050988	0		|			
ANR	1051204	Identifier	MOVSI		1050988	0					
ANR	1051205	InclusiveOrExpression	RDN3 ( dst_r ) | 1		1050988	1		|			
ANR	1051206	CallExpression	RDN3 ( dst_r )		1050988	0					
ANR	1051207	Callee	RDN3		1050988	0					
ANR	1051208	Identifier	RDN3		1050988	0					
ANR	1051209	ArgumentList	dst_r		1050988	1					
ANR	1051210	Argument	dst_r		1050988	0					
ANR	1051211	Identifier	dst_r		1050988	0					
ANR	1051212	PrimaryExpression	1		1050988	1					
ANR	1051213	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 ) )"	2002:3:62764:62819	1050988	1	True				
ANR	1051214	CallExpression	"FAIL_IF ( push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 ) )"		1050988	0					
ANR	1051215	Callee	FAIL_IF		1050988	0					
ANR	1051216	Identifier	FAIL_IF		1050988	0					
ANR	1051217	ArgumentList	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1050988	1					
ANR	1051218	Argument	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1050988	0					
ANR	1051219	CallExpression	"push_inst16 ( compiler , MOVSI | RDN3 ( dst_r ) | 0 )"		1050988	0					
ANR	1051220	Callee	push_inst16		1050988	0					
ANR	1051221	Identifier	push_inst16		1050988	0					
ANR	1051222	ArgumentList	compiler		1050988	1					
ANR	1051223	Argument	compiler		1050988	0					
ANR	1051224	Identifier	compiler		1050988	0					
ANR	1051225	Argument	MOVSI | RDN3 ( dst_r ) | 0		1050988	1					
ANR	1051226	InclusiveOrExpression	MOVSI | RDN3 ( dst_r ) | 0		1050988	0		|			
ANR	1051227	Identifier	MOVSI		1050988	0					
ANR	1051228	InclusiveOrExpression	RDN3 ( dst_r ) | 0		1050988	1		|			
ANR	1051229	CallExpression	RDN3 ( dst_r )		1050988	0					
ANR	1051230	Callee	RDN3		1050988	0					
ANR	1051231	Identifier	RDN3		1050988	0					
ANR	1051232	ArgumentList	dst_r		1050988	1					
ANR	1051233	Argument	dst_r		1050988	0					
ANR	1051234	Identifier	dst_r		1050988	0					
ANR	1051235	PrimaryExpression	0		1050988	1					
ANR	1051236	IfStatement	if ( dst_r != TMP_REG2 )		1050988	2					
ANR	1051237	Condition	dst_r != TMP_REG2	2004:6:62831:62847	1050988	0	True				
ANR	1051238	EqualityExpression	dst_r != TMP_REG2		1050988	0		!=			
ANR	1051239	Identifier	dst_r		1050988	0					
ANR	1051240	Identifier	TMP_REG2		1050988	1					
ANR	1051241	ReturnStatement	return SLJIT_SUCCESS ;	2005:3:62853:62873	1050988	1	True				
ANR	1051242	Identifier	SLJIT_SUCCESS		1050988	0					
ANR	1051243	ReturnStatement	"return emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw ) ;"	2006:2:62877:62945	1050988	3	True				
ANR	1051244	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw )"		1050988	0					
ANR	1051245	Callee	emit_op_mem		1050988	0					
ANR	1051246	Identifier	emit_op_mem		1050988	0					
ANR	1051247	ArgumentList	compiler		1050988	1					
ANR	1051248	Argument	compiler		1050988	0					
ANR	1051249	Identifier	compiler		1050988	0					
ANR	1051250	Argument	WORD_SIZE | STORE		1050988	1					
ANR	1051251	InclusiveOrExpression	WORD_SIZE | STORE		1050988	0		|			
ANR	1051252	Identifier	WORD_SIZE		1050988	0					
ANR	1051253	Identifier	STORE		1050988	1					
ANR	1051254	Argument	TMP_REG2		1050988	2					
ANR	1051255	Identifier	TMP_REG2		1050988	0					
ANR	1051256	Argument	dst		1050988	3					
ANR	1051257	Identifier	dst		1050988	0					
ANR	1051258	Argument	dstw		1050988	4					
ANR	1051259	Identifier	dstw		1050988	0					
ANR	1051260	ExpressionStatement	ins = ( op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI ) )	2009:1:62952:63015	1050988	11	True				
ANR	1051261	AssignmentExpression	ins = ( op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI ) )		1050988	0		=			
ANR	1051262	Identifier	ins		1050988	0					
ANR	1051263	ConditionalExpression	op == SLJIT_AND ? ANDI : ( op == SLJIT_OR ? ORRI : EORI )		1050988	1					
ANR	1051264	Condition	op == SLJIT_AND		1050988	0					
ANR	1051265	EqualityExpression	op == SLJIT_AND		1050988	0		==			
ANR	1051266	Identifier	op		1050988	0					
ANR	1051267	Identifier	SLJIT_AND		1050988	1					
ANR	1051268	Identifier	ANDI		1050988	1					
ANR	1051269	ConditionalExpression	op == SLJIT_OR ? ORRI : EORI		1050988	2					
ANR	1051270	Condition	op == SLJIT_OR		1050988	0					
ANR	1051271	EqualityExpression	op == SLJIT_OR		1050988	0		==			
ANR	1051272	Identifier	op		1050988	0					
ANR	1051273	Identifier	SLJIT_OR		1050988	1					
ANR	1051274	Identifier	ORRI		1050988	1					
ANR	1051275	Identifier	EORI		1050988	2					
ANR	1051276	IfStatement	if ( ( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src )		1050988	12					
ANR	1051277	Condition	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src	2010:5:63022:63090	1050988	0	True				
ANR	1051278	AndExpression	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src		1050988	0		&&			
ANR	1051279	OrExpression	op == SLJIT_OR || op == SLJIT_XOR		1050988	0		||			
ANR	1051280	EqualityExpression	op == SLJIT_OR		1050988	0		==			
ANR	1051281	Identifier	op		1050988	0					
ANR	1051282	Identifier	SLJIT_OR		1050988	1					
ANR	1051283	EqualityExpression	op == SLJIT_XOR		1050988	1		==			
ANR	1051284	Identifier	op		1050988	0					
ANR	1051285	Identifier	SLJIT_XOR		1050988	1					
ANR	1051286	AndExpression	FAST_IS_REG ( dst ) && dst == src		1050988	1		&&			
ANR	1051287	CallExpression	FAST_IS_REG ( dst )		1050988	0					
ANR	1051288	Callee	FAST_IS_REG		1050988	0					
ANR	1051289	Identifier	FAST_IS_REG		1050988	0					
ANR	1051290	ArgumentList	dst		1050988	1					
ANR	1051291	Argument	dst		1050988	0					
ANR	1051292	Identifier	dst		1050988	0					
ANR	1051293	EqualityExpression	dst == src		1050988	1		==			
ANR	1051294	Identifier	dst		1050988	0					
ANR	1051295	Identifier	src		1050988	1					
ANR	1051296	CompoundStatement		32:76:1029:1029	1050988	1					
ANR	1051297	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	2012:2:63137:63189	1050988	0	True				
ANR	1051298	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1050988	0					
ANR	1051299	Callee	FAIL_IF		1050988	0					
ANR	1051300	Identifier	FAIL_IF		1050988	0					
ANR	1051301	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	1					
ANR	1051302	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	0					
ANR	1051303	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	0					
ANR	1051304	Callee	push_inst16		1050988	0					
ANR	1051305	Identifier	push_inst16		1050988	0					
ANR	1051306	ArgumentList	compiler		1050988	1					
ANR	1051307	Argument	compiler		1050988	0					
ANR	1051308	Identifier	compiler		1050988	0					
ANR	1051309	Argument	IT | ( cc << 4 ) | 0x8		1050988	1					
ANR	1051310	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1050988	0		|			
ANR	1051311	Identifier	IT		1050988	0					
ANR	1051312	InclusiveOrExpression	( cc << 4 ) | 0x8		1050988	1		|			
ANR	1051313	ShiftExpression	cc << 4		1050988	0		<<			
ANR	1051314	Identifier	cc		1050988	0					
ANR	1051315	PrimaryExpression	4		1050988	1					
ANR	1051316	PrimaryExpression	0x8		1050988	1					
ANR	1051317	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 ) )"	2013:2:63193:63254	1050988	1	True				
ANR	1051318	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 ) )"		1050988	0					
ANR	1051319	Callee	FAIL_IF		1050988	0					
ANR	1051320	Identifier	FAIL_IF		1050988	0					
ANR	1051321	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1050988	1					
ANR	1051322	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1050988	0					
ANR	1051323	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst ) | 1 )"		1050988	0					
ANR	1051324	Callee	push_inst32		1050988	0					
ANR	1051325	Identifier	push_inst32		1050988	0					
ANR	1051326	ArgumentList	compiler		1050988	1					
ANR	1051327	Argument	compiler		1050988	0					
ANR	1051328	Identifier	compiler		1050988	0					
ANR	1051329	Argument	ins | RN4 ( src ) | RD4 ( dst ) | 1		1050988	1					
ANR	1051330	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst ) | 1		1050988	0		|			
ANR	1051331	Identifier	ins		1050988	0					
ANR	1051332	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst ) | 1		1050988	1		|			
ANR	1051333	CallExpression	RN4 ( src )		1050988	0					
ANR	1051334	Callee	RN4		1050988	0					
ANR	1051335	Identifier	RN4		1050988	0					
ANR	1051336	ArgumentList	src		1050988	1					
ANR	1051337	Argument	src		1050988	0					
ANR	1051338	Identifier	src		1050988	0					
ANR	1051339	InclusiveOrExpression	RD4 ( dst ) | 1		1050988	1		|			
ANR	1051340	CallExpression	RD4 ( dst )		1050988	0					
ANR	1051341	Callee	RD4		1050988	0					
ANR	1051342	Identifier	RD4		1050988	0					
ANR	1051343	ArgumentList	dst		1050988	1					
ANR	1051344	Argument	dst		1050988	0					
ANR	1051345	Identifier	dst		1050988	0					
ANR	1051346	PrimaryExpression	1		1050988	1					
ANR	1051347	IfStatement	if ( flags & SLJIT_SET_E )		1050988	2					
ANR	1051348	Condition	flags & SLJIT_SET_E	2014:6:63262:63280	1050988	0	True				
ANR	1051349	BitAndExpression	flags & SLJIT_SET_E		1050988	0		&			
ANR	1051350	Identifier	flags		1050988	0					
ANR	1051351	Identifier	SLJIT_SET_E		1050988	1					
ANR	1051352	CompoundStatement		36:27:1219:1219	1050988	1					
ANR	1051353	IfStatement	if ( reg_map [ dst ] <= 7 )		1050988	0					
ANR	1051354	Condition	reg_map [ dst ] <= 7	2016:7:63380:63396	1050988	0	True				
ANR	1051355	RelationalExpression	reg_map [ dst ] <= 7		1050988	0		<=			
ANR	1051356	ArrayIndexing	reg_map [ dst ]		1050988	0					
ANR	1051357	Identifier	reg_map		1050988	0					
ANR	1051358	Identifier	dst		1050988	1					
ANR	1051359	PrimaryExpression	7		1050988	1					
ANR	1051360	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst ) ) ;"	2017:4:63403:63464	1050988	1	True				
ANR	1051361	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst ) )"		1050988	0					
ANR	1051362	Callee	push_inst16		1050988	0					
ANR	1051363	Identifier	push_inst16		1050988	0					
ANR	1051364	ArgumentList	compiler		1050988	1					
ANR	1051365	Argument	compiler		1050988	0					
ANR	1051366	Identifier	compiler		1050988	0					
ANR	1051367	Argument	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst )		1050988	1					
ANR	1051368	InclusiveOrExpression	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst )		1050988	0		|			
ANR	1051369	Identifier	MOVS		1050988	0					
ANR	1051370	InclusiveOrExpression	RD3 ( TMP_REG1 ) | RN3 ( dst )		1050988	1		|			
ANR	1051371	CallExpression	RD3 ( TMP_REG1 )		1050988	0					
ANR	1051372	Callee	RD3		1050988	0					
ANR	1051373	Identifier	RD3		1050988	0					
ANR	1051374	ArgumentList	TMP_REG1		1050988	1					
ANR	1051375	Argument	TMP_REG1		1050988	0					
ANR	1051376	Identifier	TMP_REG1		1050988	0					
ANR	1051377	CallExpression	RN3 ( dst )		1050988	1					
ANR	1051378	Callee	RN3		1050988	0					
ANR	1051379	Identifier	RN3		1050988	0					
ANR	1051380	ArgumentList	dst		1050988	1					
ANR	1051381	Argument	dst		1050988	0					
ANR	1051382	Identifier	dst		1050988	0					
ANR	1051383	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst ) ) ;"	2018:3:63469:63543	1050988	1	True				
ANR	1051384	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst ) )"		1050988	0					
ANR	1051385	Callee	push_inst32		1050988	0					
ANR	1051386	Identifier	push_inst32		1050988	0					
ANR	1051387	ArgumentList	compiler		1050988	1					
ANR	1051388	Argument	compiler		1050988	0					
ANR	1051389	Identifier	compiler		1050988	0					
ANR	1051390	Argument	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1050988	1					
ANR	1051391	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1050988	0		|			
ANR	1051392	Identifier	MOV_W		1050988	0					
ANR	1051393	InclusiveOrExpression	SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst )		1050988	1		|			
ANR	1051394	Identifier	SET_FLAGS		1050988	0					
ANR	1051395	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RM4 ( dst )		1050988	1		|			
ANR	1051396	CallExpression	RD4 ( TMP_REG1 )		1050988	0					
ANR	1051397	Callee	RD4		1050988	0					
ANR	1051398	Identifier	RD4		1050988	0					
ANR	1051399	ArgumentList	TMP_REG1		1050988	1					
ANR	1051400	Argument	TMP_REG1		1050988	0					
ANR	1051401	Identifier	TMP_REG1		1050988	0					
ANR	1051402	CallExpression	RM4 ( dst )		1050988	1					
ANR	1051403	Callee	RM4		1050988	0					
ANR	1051404	Identifier	RM4		1050988	0					
ANR	1051405	ArgumentList	dst		1050988	1					
ANR	1051406	Argument	dst		1050988	0					
ANR	1051407	Identifier	dst		1050988	0					
ANR	1051408	ReturnStatement	return SLJIT_SUCCESS ;	2020:2:63551:63571	1050988	3	True				
ANR	1051409	Identifier	SLJIT_SUCCESS		1050988	0					
ANR	1051410	ExpressionStatement	compiler -> cache_arg = 0	2023:1:63578:63601	1050988	13	True				
ANR	1051411	AssignmentExpression	compiler -> cache_arg = 0		1050988	0		=			
ANR	1051412	PtrMemberAccess	compiler -> cache_arg		1050988	0					
ANR	1051413	Identifier	compiler		1050988	0					
ANR	1051414	Identifier	cache_arg		1050988	1					
ANR	1051415	PrimaryExpression	0		1050988	1					
ANR	1051416	ExpressionStatement	compiler -> cache_argw = 0	2024:1:63604:63628	1050988	14	True				
ANR	1051417	AssignmentExpression	compiler -> cache_argw = 0		1050988	0		=			
ANR	1051418	PtrMemberAccess	compiler -> cache_argw		1050988	0					
ANR	1051419	Identifier	compiler		1050988	0					
ANR	1051420	Identifier	cache_argw		1050988	1					
ANR	1051421	PrimaryExpression	0		1050988	1					
ANR	1051422	IfStatement	if ( src & SLJIT_MEM )		1050988	15					
ANR	1051423	Condition	src & SLJIT_MEM	2025:5:63635:63649	1050988	0	True				
ANR	1051424	BitAndExpression	src & SLJIT_MEM		1050988	0		&			
ANR	1051425	Identifier	src		1050988	0					
ANR	1051426	Identifier	SLJIT_MEM		1050988	1					
ANR	1051427	CompoundStatement		47:22:1588:1588	1050988	1					
ANR	1051428	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"	2026:2:63656:63730	1050988	0	True				
ANR	1051429	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw ) )"		1050988	0					
ANR	1051430	Callee	FAIL_IF		1050988	0					
ANR	1051431	Identifier	FAIL_IF		1050988	0					
ANR	1051432	ArgumentList	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1050988	1					
ANR	1051433	Argument	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1050988	0					
ANR	1051434	CallExpression	"emit_op_mem2 ( compiler , WORD_SIZE , TMP_REG2 , src , srcw , dst , dstw )"		1050988	0					
ANR	1051435	Callee	emit_op_mem2		1050988	0					
ANR	1051436	Identifier	emit_op_mem2		1050988	0					
ANR	1051437	ArgumentList	compiler		1050988	1					
ANR	1051438	Argument	compiler		1050988	0					
ANR	1051439	Identifier	compiler		1050988	0					
ANR	1051440	Argument	WORD_SIZE		1050988	1					
ANR	1051441	Identifier	WORD_SIZE		1050988	0					
ANR	1051442	Argument	TMP_REG2		1050988	2					
ANR	1051443	Identifier	TMP_REG2		1050988	0					
ANR	1051444	Argument	src		1050988	3					
ANR	1051445	Identifier	src		1050988	0					
ANR	1051446	Argument	srcw		1050988	4					
ANR	1051447	Identifier	srcw		1050988	0					
ANR	1051448	Argument	dst		1050988	5					
ANR	1051449	Identifier	dst		1050988	0					
ANR	1051450	Argument	dstw		1050988	6					
ANR	1051451	Identifier	dstw		1050988	0					
ANR	1051452	ExpressionStatement	src = TMP_REG2	2027:2:63734:63748	1050988	1	True				
ANR	1051453	AssignmentExpression	src = TMP_REG2		1050988	0		=			
ANR	1051454	Identifier	src		1050988	0					
ANR	1051455	Identifier	TMP_REG2		1050988	1					
ANR	1051456	ExpressionStatement	srcw = 0	2028:2:63752:63760	1050988	2	True				
ANR	1051457	AssignmentExpression	srcw = 0		1050988	0		=			
ANR	1051458	Identifier	srcw		1050988	0					
ANR	1051459	PrimaryExpression	0		1050988	1					
ANR	1051460	ElseStatement	else		1050988	0					
ANR	1051461	IfStatement	if ( src & SLJIT_IMM )		1050988	0					
ANR	1051462	Condition	src & SLJIT_IMM	2029:12:63774:63788	1050988	0	True				
ANR	1051463	BitAndExpression	src & SLJIT_IMM		1050988	0		&			
ANR	1051464	Identifier	src		1050988	0					
ANR	1051465	Identifier	SLJIT_IMM		1050988	1					
ANR	1051466	CompoundStatement		51:29:1727:1727	1050988	1					
ANR	1051467	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"	2030:2:63795:63844	1050988	0	True				
ANR	1051468	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"		1050988	0					
ANR	1051469	Callee	FAIL_IF		1050988	0					
ANR	1051470	Identifier	FAIL_IF		1050988	0					
ANR	1051471	ArgumentList	"load_immediate ( compiler , TMP_REG2 , srcw )"		1050988	1					
ANR	1051472	Argument	"load_immediate ( compiler , TMP_REG2 , srcw )"		1050988	0					
ANR	1051473	CallExpression	"load_immediate ( compiler , TMP_REG2 , srcw )"		1050988	0					
ANR	1051474	Callee	load_immediate		1050988	0					
ANR	1051475	Identifier	load_immediate		1050988	0					
ANR	1051476	ArgumentList	compiler		1050988	1					
ANR	1051477	Argument	compiler		1050988	0					
ANR	1051478	Identifier	compiler		1050988	0					
ANR	1051479	Argument	TMP_REG2		1050988	1					
ANR	1051480	Identifier	TMP_REG2		1050988	0					
ANR	1051481	Argument	srcw		1050988	2					
ANR	1051482	Identifier	srcw		1050988	0					
ANR	1051483	ExpressionStatement	src = TMP_REG2	2031:2:63848:63862	1050988	1	True				
ANR	1051484	AssignmentExpression	src = TMP_REG2		1050988	0		=			
ANR	1051485	Identifier	src		1050988	0					
ANR	1051486	Identifier	TMP_REG2		1050988	1					
ANR	1051487	ExpressionStatement	srcw = 0	2032:2:63866:63874	1050988	2	True				
ANR	1051488	AssignmentExpression	srcw = 0		1050988	0		=			
ANR	1051489	Identifier	srcw		1050988	0					
ANR	1051490	PrimaryExpression	0		1050988	1					
ANR	1051491	IfStatement	if ( op == SLJIT_AND || src != dst_r )		1050988	16					
ANR	1051492	Condition	op == SLJIT_AND || src != dst_r	2035:5:63885:63915	1050988	0	True				
ANR	1051493	OrExpression	op == SLJIT_AND || src != dst_r		1050988	0		||			
ANR	1051494	EqualityExpression	op == SLJIT_AND		1050988	0		==			
ANR	1051495	Identifier	op		1050988	0					
ANR	1051496	Identifier	SLJIT_AND		1050988	1					
ANR	1051497	EqualityExpression	src != dst_r		1050988	1		!=			
ANR	1051498	Identifier	src		1050988	0					
ANR	1051499	Identifier	dst_r		1050988	1					
ANR	1051500	CompoundStatement		57:38:1854:1854	1050988	1					
ANR	1051501	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"	2036:2:63922:64002	1050988	0	True				
ANR	1051502	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 ) )"		1050988	0					
ANR	1051503	Callee	FAIL_IF		1050988	0					
ANR	1051504	Identifier	FAIL_IF		1050988	0					
ANR	1051505	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	1					
ANR	1051506	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	0					
ANR	1051507	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4 )"		1050988	0					
ANR	1051508	Callee	push_inst16		1050988	0					
ANR	1051509	Identifier	push_inst16		1050988	0					
ANR	1051510	ArgumentList	compiler		1050988	1					
ANR	1051511	Argument	compiler		1050988	0					
ANR	1051512	Identifier	compiler		1050988	0					
ANR	1051513	Argument	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1					
ANR	1051514	InclusiveOrExpression	IT | ( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	0		|			
ANR	1051515	Identifier	IT		1050988	0					
ANR	1051516	InclusiveOrExpression	( cc << 4 ) | ( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1		|			
ANR	1051517	ShiftExpression	cc << 4		1050988	0		<<			
ANR	1051518	Identifier	cc		1050988	0					
ANR	1051519	PrimaryExpression	4		1050988	1					
ANR	1051520	InclusiveOrExpression	( ( ( cc & 0x1 ) ^ 0x1 ) << 3 ) | 0x4		1050988	1		|			
ANR	1051521	ShiftExpression	( ( cc & 0x1 ) ^ 0x1 ) << 3		1050988	0		<<			
ANR	1051522	ExclusiveOrExpression	( cc & 0x1 ) ^ 0x1		1050988	0		^			
ANR	1051523	BitAndExpression	cc & 0x1		1050988	0		&			
ANR	1051524	Identifier	cc		1050988	0					
ANR	1051525	PrimaryExpression	0x1		1050988	1					
ANR	1051526	PrimaryExpression	0x1		1050988	1					
ANR	1051527	PrimaryExpression	3		1050988	1					
ANR	1051528	PrimaryExpression	0x4		1050988	1					
ANR	1051529	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"	2037:2:64006:64069	1050988	1	True				
ANR	1051530	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"		1050988	0					
ANR	1051531	Callee	FAIL_IF		1050988	0					
ANR	1051532	Identifier	FAIL_IF		1050988	0					
ANR	1051533	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	1					
ANR	1051534	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051535	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051536	Callee	push_inst32		1050988	0					
ANR	1051537	Identifier	push_inst32		1050988	0					
ANR	1051538	ArgumentList	compiler		1050988	1					
ANR	1051539	Argument	compiler		1050988	0					
ANR	1051540	Identifier	compiler		1050988	0					
ANR	1051541	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	1					
ANR	1051542	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	0		|			
ANR	1051543	Identifier	ins		1050988	0					
ANR	1051544	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	1		|			
ANR	1051545	CallExpression	RN4 ( src )		1050988	0					
ANR	1051546	Callee	RN4		1050988	0					
ANR	1051547	Identifier	RN4		1050988	0					
ANR	1051548	ArgumentList	src		1050988	1					
ANR	1051549	Argument	src		1050988	0					
ANR	1051550	Identifier	src		1050988	0					
ANR	1051551	InclusiveOrExpression	RD4 ( dst_r ) | 1		1050988	1		|			
ANR	1051552	CallExpression	RD4 ( dst_r )		1050988	0					
ANR	1051553	Callee	RD4		1050988	0					
ANR	1051554	Identifier	RD4		1050988	0					
ANR	1051555	ArgumentList	dst_r		1050988	1					
ANR	1051556	Argument	dst_r		1050988	0					
ANR	1051557	Identifier	dst_r		1050988	0					
ANR	1051558	PrimaryExpression	1		1050988	1					
ANR	1051559	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 ) )"	2038:2:64073:64136	1050988	2	True				
ANR	1051560	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 ) )"		1050988	0					
ANR	1051561	Callee	FAIL_IF		1050988	0					
ANR	1051562	Identifier	FAIL_IF		1050988	0					
ANR	1051563	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1050988	1					
ANR	1051564	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1050988	0					
ANR	1051565	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 0 )"		1050988	0					
ANR	1051566	Callee	push_inst32		1050988	0					
ANR	1051567	Identifier	push_inst32		1050988	0					
ANR	1051568	ArgumentList	compiler		1050988	1					
ANR	1051569	Argument	compiler		1050988	0					
ANR	1051570	Identifier	compiler		1050988	0					
ANR	1051571	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 0		1050988	1					
ANR	1051572	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 0		1050988	0		|			
ANR	1051573	Identifier	ins		1050988	0					
ANR	1051574	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 0		1050988	1		|			
ANR	1051575	CallExpression	RN4 ( src )		1050988	0					
ANR	1051576	Callee	RN4		1050988	0					
ANR	1051577	Identifier	RN4		1050988	0					
ANR	1051578	ArgumentList	src		1050988	1					
ANR	1051579	Argument	src		1050988	0					
ANR	1051580	Identifier	src		1050988	0					
ANR	1051581	InclusiveOrExpression	RD4 ( dst_r ) | 0		1050988	1		|			
ANR	1051582	CallExpression	RD4 ( dst_r )		1050988	0					
ANR	1051583	Callee	RD4		1050988	0					
ANR	1051584	Identifier	RD4		1050988	0					
ANR	1051585	ArgumentList	dst_r		1050988	1					
ANR	1051586	Argument	dst_r		1050988	0					
ANR	1051587	Identifier	dst_r		1050988	0					
ANR	1051588	PrimaryExpression	0		1050988	1					
ANR	1051589	ElseStatement	else		1050988	0					
ANR	1051590	CompoundStatement		62:6:2083:2083	1050988	0					
ANR	1051591	ExpressionStatement	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"	2041:2:64151:64203	1050988	0	True				
ANR	1051592	CallExpression	"FAIL_IF ( push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 ) )"		1050988	0					
ANR	1051593	Callee	FAIL_IF		1050988	0					
ANR	1051594	Identifier	FAIL_IF		1050988	0					
ANR	1051595	ArgumentList	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	1					
ANR	1051596	Argument	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	0					
ANR	1051597	CallExpression	"push_inst16 ( compiler , IT | ( cc << 4 ) | 0x8 )"		1050988	0					
ANR	1051598	Callee	push_inst16		1050988	0					
ANR	1051599	Identifier	push_inst16		1050988	0					
ANR	1051600	ArgumentList	compiler		1050988	1					
ANR	1051601	Argument	compiler		1050988	0					
ANR	1051602	Identifier	compiler		1050988	0					
ANR	1051603	Argument	IT | ( cc << 4 ) | 0x8		1050988	1					
ANR	1051604	InclusiveOrExpression	IT | ( cc << 4 ) | 0x8		1050988	0		|			
ANR	1051605	Identifier	IT		1050988	0					
ANR	1051606	InclusiveOrExpression	( cc << 4 ) | 0x8		1050988	1		|			
ANR	1051607	ShiftExpression	cc << 4		1050988	0		<<			
ANR	1051608	Identifier	cc		1050988	0					
ANR	1051609	PrimaryExpression	4		1050988	1					
ANR	1051610	PrimaryExpression	0x8		1050988	1					
ANR	1051611	ExpressionStatement	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"	2042:2:64207:64270	1050988	1	True				
ANR	1051612	CallExpression	"FAIL_IF ( push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 ) )"		1050988	0					
ANR	1051613	Callee	FAIL_IF		1050988	0					
ANR	1051614	Identifier	FAIL_IF		1050988	0					
ANR	1051615	ArgumentList	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	1					
ANR	1051616	Argument	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051617	CallExpression	"push_inst32 ( compiler , ins | RN4 ( src ) | RD4 ( dst_r ) | 1 )"		1050988	0					
ANR	1051618	Callee	push_inst32		1050988	0					
ANR	1051619	Identifier	push_inst32		1050988	0					
ANR	1051620	ArgumentList	compiler		1050988	1					
ANR	1051621	Argument	compiler		1050988	0					
ANR	1051622	Identifier	compiler		1050988	0					
ANR	1051623	Argument	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	1					
ANR	1051624	InclusiveOrExpression	ins | RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	0		|			
ANR	1051625	Identifier	ins		1050988	0					
ANR	1051626	InclusiveOrExpression	RN4 ( src ) | RD4 ( dst_r ) | 1		1050988	1		|			
ANR	1051627	CallExpression	RN4 ( src )		1050988	0					
ANR	1051628	Callee	RN4		1050988	0					
ANR	1051629	Identifier	RN4		1050988	0					
ANR	1051630	ArgumentList	src		1050988	1					
ANR	1051631	Argument	src		1050988	0					
ANR	1051632	Identifier	src		1050988	0					
ANR	1051633	InclusiveOrExpression	RD4 ( dst_r ) | 1		1050988	1		|			
ANR	1051634	CallExpression	RD4 ( dst_r )		1050988	0					
ANR	1051635	Callee	RD4		1050988	0					
ANR	1051636	Identifier	RD4		1050988	0					
ANR	1051637	ArgumentList	dst_r		1050988	1					
ANR	1051638	Argument	dst_r		1050988	0					
ANR	1051639	Identifier	dst_r		1050988	0					
ANR	1051640	PrimaryExpression	1		1050988	1					
ANR	1051641	IfStatement	if ( dst_r == TMP_REG2 )		1050988	17					
ANR	1051642	Condition	dst_r == TMP_REG2	2045:5:64281:64297	1050988	0	True				
ANR	1051643	EqualityExpression	dst_r == TMP_REG2		1050988	0		==			
ANR	1051644	Identifier	dst_r		1050988	0					
ANR	1051645	Identifier	TMP_REG2		1050988	1					
ANR	1051646	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) )"	2046:2:64302:64379	1050988	1	True				
ANR	1051647	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 ) )"		1050988	0					
ANR	1051648	Callee	FAIL_IF		1050988	0					
ANR	1051649	Identifier	FAIL_IF		1050988	0					
ANR	1051650	ArgumentList	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1050988	1					
ANR	1051651	Argument	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1050988	0					
ANR	1051652	CallExpression	"emit_op_mem2 ( compiler , WORD_SIZE | STORE , TMP_REG2 , dst , dstw , 0 , 0 )"		1050988	0					
ANR	1051653	Callee	emit_op_mem2		1050988	0					
ANR	1051654	Identifier	emit_op_mem2		1050988	0					
ANR	1051655	ArgumentList	compiler		1050988	1					
ANR	1051656	Argument	compiler		1050988	0					
ANR	1051657	Identifier	compiler		1050988	0					
ANR	1051658	Argument	WORD_SIZE | STORE		1050988	1					
ANR	1051659	InclusiveOrExpression	WORD_SIZE | STORE		1050988	0		|			
ANR	1051660	Identifier	WORD_SIZE		1050988	0					
ANR	1051661	Identifier	STORE		1050988	1					
ANR	1051662	Argument	TMP_REG2		1050988	2					
ANR	1051663	Identifier	TMP_REG2		1050988	0					
ANR	1051664	Argument	dst		1050988	3					
ANR	1051665	Identifier	dst		1050988	0					
ANR	1051666	Argument	dstw		1050988	4					
ANR	1051667	Identifier	dstw		1050988	0					
ANR	1051668	Argument	0		1050988	5					
ANR	1051669	PrimaryExpression	0		1050988	0					
ANR	1051670	Argument	0		1050988	6					
ANR	1051671	PrimaryExpression	0		1050988	0					
ANR	1051672	IfStatement	if ( flags & SLJIT_SET_E )		1050988	18					
ANR	1051673	Condition	flags & SLJIT_SET_E	2048:5:64387:64405	1050988	0	True				
ANR	1051674	BitAndExpression	flags & SLJIT_SET_E		1050988	0		&			
ANR	1051675	Identifier	flags		1050988	0					
ANR	1051676	Identifier	SLJIT_SET_E		1050988	1					
ANR	1051677	CompoundStatement		70:26:2344:2344	1050988	1					
ANR	1051678	IfStatement	if ( reg_map [ dst_r ] <= 7 )		1050988	0					
ANR	1051679	Condition	reg_map [ dst_r ] <= 7	2050:6:64502:64520	1050988	0	True				
ANR	1051680	RelationalExpression	reg_map [ dst_r ] <= 7		1050988	0		<=			
ANR	1051681	ArrayIndexing	reg_map [ dst_r ]		1050988	0					
ANR	1051682	Identifier	reg_map		1050988	0					
ANR	1051683	Identifier	dst_r		1050988	1					
ANR	1051684	PrimaryExpression	7		1050988	1					
ANR	1051685	ReturnStatement	"return push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r ) ) ;"	2051:3:64526:64589	1050988	1	True				
ANR	1051686	CallExpression	"push_inst16 ( compiler , MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r ) )"		1050988	0					
ANR	1051687	Callee	push_inst16		1050988	0					
ANR	1051688	Identifier	push_inst16		1050988	0					
ANR	1051689	ArgumentList	compiler		1050988	1					
ANR	1051690	Argument	compiler		1050988	0					
ANR	1051691	Identifier	compiler		1050988	0					
ANR	1051692	Argument	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1050988	1					
ANR	1051693	InclusiveOrExpression	MOVS | RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1050988	0		|			
ANR	1051694	Identifier	MOVS		1050988	0					
ANR	1051695	InclusiveOrExpression	RD3 ( TMP_REG1 ) | RN3 ( dst_r )		1050988	1		|			
ANR	1051696	CallExpression	RD3 ( TMP_REG1 )		1050988	0					
ANR	1051697	Callee	RD3		1050988	0					
ANR	1051698	Identifier	RD3		1050988	0					
ANR	1051699	ArgumentList	TMP_REG1		1050988	1					
ANR	1051700	Argument	TMP_REG1		1050988	0					
ANR	1051701	Identifier	TMP_REG1		1050988	0					
ANR	1051702	CallExpression	RN3 ( dst_r )		1050988	1					
ANR	1051703	Callee	RN3		1050988	0					
ANR	1051704	Identifier	RN3		1050988	0					
ANR	1051705	ArgumentList	dst_r		1050988	1					
ANR	1051706	Argument	dst_r		1050988	0					
ANR	1051707	Identifier	dst_r		1050988	0					
ANR	1051708	ReturnStatement	"return push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r ) ) ;"	2052:2:64593:64669	1050988	1	True				
ANR	1051709	CallExpression	"push_inst32 ( compiler , MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r ) )"		1050988	0					
ANR	1051710	Callee	push_inst32		1050988	0					
ANR	1051711	Identifier	push_inst32		1050988	0					
ANR	1051712	ArgumentList	compiler		1050988	1					
ANR	1051713	Argument	compiler		1050988	0					
ANR	1051714	Identifier	compiler		1050988	0					
ANR	1051715	Argument	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1050988	1					
ANR	1051716	InclusiveOrExpression	MOV_W | SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1050988	0		|			
ANR	1051717	Identifier	MOV_W		1050988	0					
ANR	1051718	InclusiveOrExpression	SET_FLAGS | RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1050988	1		|			
ANR	1051719	Identifier	SET_FLAGS		1050988	0					
ANR	1051720	InclusiveOrExpression	RD4 ( TMP_REG1 ) | RM4 ( dst_r )		1050988	1		|			
ANR	1051721	CallExpression	RD4 ( TMP_REG1 )		1050988	0					
ANR	1051722	Callee	RD4		1050988	0					
ANR	1051723	Identifier	RD4		1050988	0					
ANR	1051724	ArgumentList	TMP_REG1		1050988	1					
ANR	1051725	Argument	TMP_REG1		1050988	0					
ANR	1051726	Identifier	TMP_REG1		1050988	0					
ANR	1051727	CallExpression	RM4 ( dst_r )		1050988	1					
ANR	1051728	Callee	RM4		1050988	0					
ANR	1051729	Identifier	RM4		1050988	0					
ANR	1051730	ArgumentList	dst_r		1050988	1					
ANR	1051731	Argument	dst_r		1050988	0					
ANR	1051732	Identifier	dst_r		1050988	0					
ANR	1051733	ReturnStatement	return SLJIT_SUCCESS ;	2054:1:64675:64695	1050988	19	True				
ANR	1051734	Identifier	SLJIT_SUCCESS		1050988	0					
ANR	1051735	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1050988	1					
ANR	1051736	Identifier	sljit_emit_op_flags		1050988	2					
ANR	1051737	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1050988	3					
ANR	1051738	Parameter	struct sljit_compiler * compiler	1975:54:61941:61971	1050988	0	True				
ANR	1051739	ParameterType	struct sljit_compiler *		1050988	0					
ANR	1051740	Identifier	compiler		1050988	1					
ANR	1051741	Parameter	sljit_si op	1975:87:61974:61984	1050988	1	True				
ANR	1051742	ParameterType	sljit_si		1050988	0					
ANR	1051743	Identifier	op		1050988	1					
ANR	1051744	Parameter	sljit_si dst	1976:1:61988:61999	1050988	2	True				
ANR	1051745	ParameterType	sljit_si		1050988	0					
ANR	1051746	Identifier	dst		1050988	1					
ANR	1051747	Parameter	sljit_sw dstw	1976:15:62002:62014	1050988	3	True				
ANR	1051748	ParameterType	sljit_sw		1050988	0					
ANR	1051749	Identifier	dstw		1050988	1					
ANR	1051750	Parameter	sljit_si src	1977:1:62018:62029	1050988	4	True				
ANR	1051751	ParameterType	sljit_si		1050988	0					
ANR	1051752	Identifier	src		1050988	1					
ANR	1051753	Parameter	sljit_sw srcw	1977:15:62032:62044	1050988	5	True				
ANR	1051754	ParameterType	sljit_sw		1050988	0					
ANR	1051755	Identifier	srcw		1050988	1					
ANR	1051756	Parameter	sljit_si type	1978:1:62048:62060	1050988	6	True				
ANR	1051757	ParameterType	sljit_si		1050988	0					
ANR	1051758	Identifier	type		1050988	1					
ANR	1051759	CFGEntryNode	ENTRY		1050988		True				
ANR	1051760	CFGExitNode	EXIT		1050988		True				
ANR	1051761	Symbol	SLJIT_AND		1050988						
ANR	1051762	Symbol	TMP_REG2		1050988						
ANR	1051763	Symbol	TMP_REG1		1050988						
ANR	1051764	Symbol	SLJIT_MEM		1050988						
ANR	1051765	Symbol	push_inst16		1050988						
ANR	1051766	Symbol	reg_map		1050988						
ANR	1051767	Symbol	* compiler		1050988						
ANR	1051768	Symbol	type		1050988						
ANR	1051769	Symbol	SLJIT_XOR		1050988						
ANR	1051770	Symbol	GET_OPCODE		1050988						
ANR	1051771	Symbol	* dst		1050988						
ANR	1051772	Symbol	SLJIT_IMM		1050988						
ANR	1051773	Symbol	* dst_r		1050988						
ANR	1051774	Symbol	MOV_WI		1050988						
ANR	1051775	Symbol	FAST_IS_REG		1050988						
ANR	1051776	Symbol	srcw		1050988						
ANR	1051777	Symbol	compiler -> cache_arg		1050988						
ANR	1051778	Symbol	MOVSI		1050988						
ANR	1051779	Symbol	emit_op_mem2		1050988						
ANR	1051780	Symbol	emit_op_mem		1050988						
ANR	1051781	Symbol	IT		1050988						
ANR	1051782	Symbol	* reg_map		1050988						
ANR	1051783	Symbol	SET_FLAGS		1050988						
ANR	1051784	Symbol	MOV_W		1050988						
ANR	1051785	Symbol	RD3		1050988						
ANR	1051786	Symbol	EORI		1050988						
ANR	1051787	Symbol	compiler -> cache_argw		1050988						
ANR	1051788	Symbol	RD4		1050988						
ANR	1051789	Symbol	dst		1050988						
ANR	1051790	Symbol	flags		1050988						
ANR	1051791	Symbol	SLJIT_OR		1050988						
ANR	1051792	Symbol	SLJIT_ADD		1050988						
ANR	1051793	Symbol	SLJIT_SET_E		1050988						
ANR	1051794	Symbol	dst_r		1050988						
ANR	1051795	Symbol	GET_ALL_FLAGS		1050988						
ANR	1051796	Symbol	load_immediate		1050988						
ANR	1051797	Symbol	RM4		1050988						
ANR	1051798	Symbol	compiler		1050988						
ANR	1051799	Symbol	check_sljit_emit_op_flags		1050988						
ANR	1051800	Symbol	push_inst32		1050988						
ANR	1051801	Symbol	cc		1050988						
ANR	1051802	Symbol	op		1050988						
ANR	1051803	Symbol	get_cc		1050988						
ANR	1051804	Symbol	src		1050988						
ANR	1051805	Symbol	SLJIT_SUCCESS		1050988						
ANR	1051806	Symbol	ANDI		1050988						
ANR	1051807	Symbol	ins		1050988						
ANR	1051808	Symbol	RDN3		1050988						
ANR	1051809	Symbol	SLJIT_UNUSED		1050988						
ANR	1051810	Symbol	RN3		1050988						
ANR	1051811	Symbol	STORE		1050988						
ANR	1051812	Symbol	RN4		1050988						
ANR	1051813	Symbol	MOVS		1050988						
ANR	1051814	Symbol	dstw		1050988						
ANR	1051815	Symbol	WORD_SIZE		1050988						
ANR	1051816	Symbol	ORRI		1050988						
ANR	1051817	Function	sljit_emit_const	2057:25:64725:65372							
ANR	1051818	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1051817	0					
ANR	1051819	CompoundStatement		2058:0:64845:65372	1051817	0					
ANR	1051820	IdentifierDeclStatement	struct sljit_const * const_ ;	2059:1:64848:64874	1051817	0	True				
ANR	1051821	IdentifierDecl	* const_		1051817	0					
ANR	1051822	IdentifierDeclType	struct sljit_const *		1051817	0					
ANR	1051823	Identifier	const_		1051817	1					
ANR	1051824	IdentifierDeclStatement	sljit_si dst_r ;	2060:1:64877:64891	1051817	1	True				
ANR	1051825	IdentifierDecl	dst_r		1051817	0					
ANR	1051826	IdentifierDeclType	sljit_si		1051817	0					
ANR	1051827	Identifier	dst_r		1051817	1					
ANR	1051828	ExpressionStatement	CHECK_ERROR_PTR ( )	2062:1:64895:64912	1051817	2	True				
ANR	1051829	CallExpression	CHECK_ERROR_PTR ( )		1051817	0					
ANR	1051830	Callee	CHECK_ERROR_PTR		1051817	0					
ANR	1051831	Identifier	CHECK_ERROR_PTR		1051817	0					
ANR	1051832	ArgumentList			1051817	1					
ANR	1051833	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2063:1:64915:64981	1051817	3	True				
ANR	1051834	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1051817	0					
ANR	1051835	Callee	CHECK_PTR		1051817	0					
ANR	1051836	Identifier	CHECK_PTR		1051817	0					
ANR	1051837	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1051817	1					
ANR	1051838	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1051817	0					
ANR	1051839	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1051817	0					
ANR	1051840	Callee	check_sljit_emit_const		1051817	0					
ANR	1051841	Identifier	check_sljit_emit_const		1051817	0					
ANR	1051842	ArgumentList	compiler		1051817	1					
ANR	1051843	Argument	compiler		1051817	0					
ANR	1051844	Identifier	compiler		1051817	0					
ANR	1051845	Argument	dst		1051817	1					
ANR	1051846	Identifier	dst		1051817	0					
ANR	1051847	Argument	dstw		1051817	2					
ANR	1051848	Identifier	dstw		1051817	0					
ANR	1051849	Argument	init_value		1051817	3					
ANR	1051850	Identifier	init_value		1051817	0					
ANR	1051851	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2064:1:64984:65014	1051817	4	True				
ANR	1051852	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1051817	0					
ANR	1051853	Callee	ADJUST_LOCAL_OFFSET		1051817	0					
ANR	1051854	Identifier	ADJUST_LOCAL_OFFSET		1051817	0					
ANR	1051855	ArgumentList	dst		1051817	1					
ANR	1051856	Argument	dst		1051817	0					
ANR	1051857	Identifier	dst		1051817	0					
ANR	1051858	Argument	dstw		1051817	1					
ANR	1051859	Identifier	dstw		1051817	0					
ANR	1051860	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2066:1:65018:65097	1051817	5	True				
ANR	1051861	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1051817	0		=			
ANR	1051862	Identifier	const_		1051817	0					
ANR	1051863	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1051817	1					
ANR	1051864	CastTarget	struct sljit_const *		1051817	0					
ANR	1051865	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1051817	1					
ANR	1051866	Callee	ensure_abuf		1051817	0					
ANR	1051867	Identifier	ensure_abuf		1051817	0					
ANR	1051868	ArgumentList	compiler		1051817	1					
ANR	1051869	Argument	compiler		1051817	0					
ANR	1051870	Identifier	compiler		1051817	0					
ANR	1051871	Argument	sizeof ( struct sljit_const )		1051817	1					
ANR	1051872	SizeofExpression	sizeof ( struct sljit_const )		1051817	0					
ANR	1051873	Sizeof	sizeof		1051817	0					
ANR	1051874	SizeofOperand	struct sljit_const		1051817	1					
ANR	1051875	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2067:1:65100:65120	1051817	6	True				
ANR	1051876	CallExpression	PTR_FAIL_IF ( ! const_ )		1051817	0					
ANR	1051877	Callee	PTR_FAIL_IF		1051817	0					
ANR	1051878	Identifier	PTR_FAIL_IF		1051817	0					
ANR	1051879	ArgumentList	! const_		1051817	1					
ANR	1051880	Argument	! const_		1051817	0					
ANR	1051881	UnaryOperationExpression	! const_		1051817	0					
ANR	1051882	UnaryOperator	!		1051817	0					
ANR	1051883	Identifier	const_		1051817	1					
ANR	1051884	ExpressionStatement	"set_const ( const_ , compiler )"	2068:1:65123:65150	1051817	7	True				
ANR	1051885	CallExpression	"set_const ( const_ , compiler )"		1051817	0					
ANR	1051886	Callee	set_const		1051817	0					
ANR	1051887	Identifier	set_const		1051817	0					
ANR	1051888	ArgumentList	const_		1051817	1					
ANR	1051889	Argument	const_		1051817	0					
ANR	1051890	Identifier	const_		1051817	0					
ANR	1051891	Argument	compiler		1051817	1					
ANR	1051892	Identifier	compiler		1051817	0					
ANR	1051893	ExpressionStatement	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	2070:1:65154:65195	1051817	8	True				
ANR	1051894	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1051817	0		=			
ANR	1051895	Identifier	dst_r		1051817	0					
ANR	1051896	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1051817	1					
ANR	1051897	Condition	SLOW_IS_REG ( dst )		1051817	0					
ANR	1051898	CallExpression	SLOW_IS_REG ( dst )		1051817	0					
ANR	1051899	Callee	SLOW_IS_REG		1051817	0					
ANR	1051900	Identifier	SLOW_IS_REG		1051817	0					
ANR	1051901	ArgumentList	dst		1051817	1					
ANR	1051902	Argument	dst		1051817	0					
ANR	1051903	Identifier	dst		1051817	0					
ANR	1051904	Identifier	dst		1051817	1					
ANR	1051905	Identifier	TMP_REG1		1051817	2					
ANR	1051906	ExpressionStatement	"PTR_FAIL_IF ( emit_imm32_const ( compiler , dst_r , init_value ) )"	2071:1:65198:65256	1051817	9	True				
ANR	1051907	CallExpression	"PTR_FAIL_IF ( emit_imm32_const ( compiler , dst_r , init_value ) )"		1051817	0					
ANR	1051908	Callee	PTR_FAIL_IF		1051817	0					
ANR	1051909	Identifier	PTR_FAIL_IF		1051817	0					
ANR	1051910	ArgumentList	"emit_imm32_const ( compiler , dst_r , init_value )"		1051817	1					
ANR	1051911	Argument	"emit_imm32_const ( compiler , dst_r , init_value )"		1051817	0					
ANR	1051912	CallExpression	"emit_imm32_const ( compiler , dst_r , init_value )"		1051817	0					
ANR	1051913	Callee	emit_imm32_const		1051817	0					
ANR	1051914	Identifier	emit_imm32_const		1051817	0					
ANR	1051915	ArgumentList	compiler		1051817	1					
ANR	1051916	Argument	compiler		1051817	0					
ANR	1051917	Identifier	compiler		1051817	0					
ANR	1051918	Argument	dst_r		1051817	1					
ANR	1051919	Identifier	dst_r		1051817	0					
ANR	1051920	Argument	init_value		1051817	2					
ANR	1051921	Identifier	init_value		1051817	0					
ANR	1051922	IfStatement	if ( dst & SLJIT_MEM )		1051817	10					
ANR	1051923	Condition	dst & SLJIT_MEM	2073:5:65264:65278	1051817	0	True				
ANR	1051924	BitAndExpression	dst & SLJIT_MEM		1051817	0		&			
ANR	1051925	Identifier	dst		1051817	0					
ANR	1051926	Identifier	SLJIT_MEM		1051817	1					
ANR	1051927	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"	2074:2:65283:65354	1051817	1	True				
ANR	1051928	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw ) )"		1051817	0					
ANR	1051929	Callee	PTR_FAIL_IF		1051817	0					
ANR	1051930	Identifier	PTR_FAIL_IF		1051817	0					
ANR	1051931	ArgumentList	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1051817	1					
ANR	1051932	Argument	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1051817	0					
ANR	1051933	CallExpression	"emit_op_mem ( compiler , WORD_SIZE | STORE , dst_r , dst , dstw )"		1051817	0					
ANR	1051934	Callee	emit_op_mem		1051817	0					
ANR	1051935	Identifier	emit_op_mem		1051817	0					
ANR	1051936	ArgumentList	compiler		1051817	1					
ANR	1051937	Argument	compiler		1051817	0					
ANR	1051938	Identifier	compiler		1051817	0					
ANR	1051939	Argument	WORD_SIZE | STORE		1051817	1					
ANR	1051940	InclusiveOrExpression	WORD_SIZE | STORE		1051817	0		|			
ANR	1051941	Identifier	WORD_SIZE		1051817	0					
ANR	1051942	Identifier	STORE		1051817	1					
ANR	1051943	Argument	dst_r		1051817	2					
ANR	1051944	Identifier	dst_r		1051817	0					
ANR	1051945	Argument	dst		1051817	3					
ANR	1051946	Identifier	dst		1051817	0					
ANR	1051947	Argument	dstw		1051817	4					
ANR	1051948	Identifier	dstw		1051817	0					
ANR	1051949	ReturnStatement	return const_ ;	2075:1:65357:65370	1051817	11	True				
ANR	1051950	Identifier	const_		1051817	0					
ANR	1051951	ReturnType	struct sljit_const *		1051817	1					
ANR	1051952	Identifier	sljit_emit_const		1051817	2					
ANR	1051953	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1051817	3					
ANR	1051954	Parameter	struct sljit_compiler * compiler	2057:62:64762:64792	1051817	0	True				
ANR	1051955	ParameterType	struct sljit_compiler *		1051817	0					
ANR	1051956	Identifier	compiler		1051817	1					
ANR	1051957	Parameter	sljit_si dst	2057:95:64795:64806	1051817	1	True				
ANR	1051958	ParameterType	sljit_si		1051817	0					
ANR	1051959	Identifier	dst		1051817	1					
ANR	1051960	Parameter	sljit_sw dstw	2057:109:64809:64821	1051817	2	True				
ANR	1051961	ParameterType	sljit_sw		1051817	0					
ANR	1051962	Identifier	dstw		1051817	1					
ANR	1051963	Parameter	sljit_sw init_value	2057:124:64824:64842	1051817	3	True				
ANR	1051964	ParameterType	sljit_sw		1051817	0					
ANR	1051965	Identifier	init_value		1051817	1					
ANR	1051966	CFGEntryNode	ENTRY		1051817		True				
ANR	1051967	CFGExitNode	EXIT		1051817		True				
ANR	1051968	Symbol	check_sljit_emit_const		1051817						
ANR	1051969	Symbol	TMP_REG1		1051817						
ANR	1051970	Symbol	const_		1051817						
ANR	1051971	Symbol	dst		1051817						
ANR	1051972	Symbol	SLJIT_MEM		1051817						
ANR	1051973	Symbol	emit_imm32_const		1051817						
ANR	1051974	Symbol	emit_op_mem		1051817						
ANR	1051975	Symbol	SLOW_IS_REG		1051817						
ANR	1051976	Symbol	ensure_abuf		1051817						
ANR	1051977	Symbol	dst_r		1051817						
ANR	1051978	Symbol	STORE		1051817						
ANR	1051979	Symbol	compiler		1051817						
ANR	1051980	Symbol	init_value		1051817						
ANR	1051981	Symbol	dstw		1051817						
ANR	1051982	Symbol	WORD_SIZE		1051817						
ANR	1051983	Function	sljit_set_jump_addr	2078:0:65375:65569							
ANR	1051984	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1051983	0					
ANR	1051985	CompoundStatement		2079:0:65459:65569	1051983	0					
ANR	1051986	IdentifierDeclStatement	sljit_uh * inst = ( sljit_uh * ) addr ;	2080:1:65462:65494	1051983	0	True				
ANR	1051987	IdentifierDecl	* inst = ( sljit_uh * ) addr		1051983	0					
ANR	1051988	IdentifierDeclType	sljit_uh *		1051983	0					
ANR	1051989	Identifier	inst		1051983	1					
ANR	1051990	AssignmentExpression	* inst = ( sljit_uh * ) addr		1051983	2		=			
ANR	1051991	Identifier	inst		1051983	0					
ANR	1051992	CastExpression	( sljit_uh * ) addr		1051983	1					
ANR	1051993	CastTarget	sljit_uh *		1051983	0					
ANR	1051994	Identifier	addr		1051983	1					
ANR	1051995	ExpressionStatement	"modify_imm32_const ( inst , new_addr )"	2081:1:65497:65531	1051983	1	True				
ANR	1051996	CallExpression	"modify_imm32_const ( inst , new_addr )"		1051983	0					
ANR	1051997	Callee	modify_imm32_const		1051983	0					
ANR	1051998	Identifier	modify_imm32_const		1051983	0					
ANR	1051999	ArgumentList	inst		1051983	1					
ANR	1052000	Argument	inst		1051983	0					
ANR	1052001	Identifier	inst		1051983	0					
ANR	1052002	Argument	new_addr		1051983	1					
ANR	1052003	Identifier	new_addr		1051983	0					
ANR	1052004	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2082:1:65534:65567	1051983	2	True				
ANR	1052005	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1051983	0					
ANR	1052006	Callee	SLJIT_CACHE_FLUSH		1051983	0					
ANR	1052007	Identifier	SLJIT_CACHE_FLUSH		1051983	0					
ANR	1052008	ArgumentList	inst		1051983	1					
ANR	1052009	Argument	inst		1051983	0					
ANR	1052010	Identifier	inst		1051983	0					
ANR	1052011	Argument	inst + 4		1051983	1					
ANR	1052012	AdditiveExpression	inst + 4		1051983	0		+			
ANR	1052013	Identifier	inst		1051983	0					
ANR	1052014	PrimaryExpression	4		1051983	1					
ANR	1052015	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1051983	1					
ANR	1052016	Identifier	sljit_set_jump_addr		1051983	2					
ANR	1052017	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1051983	3					
ANR	1052018	Parameter	sljit_uw addr	2078:50:65425:65437	1051983	0	True				
ANR	1052019	ParameterType	sljit_uw		1051983	0					
ANR	1052020	Identifier	addr		1051983	1					
ANR	1052021	Parameter	sljit_uw new_addr	2078:65:65440:65456	1051983	1	True				
ANR	1052022	ParameterType	sljit_uw		1051983	0					
ANR	1052023	Identifier	new_addr		1051983	1					
ANR	1052024	CFGEntryNode	ENTRY		1051983		True				
ANR	1052025	CFGExitNode	EXIT		1051983		True				
ANR	1052026	Symbol	inst		1051983						
ANR	1052027	Symbol	addr		1051983						
ANR	1052028	Symbol	new_addr		1051983						
ANR	1052029	Function	sljit_set_const	2085:0:65572:65770							
ANR	1052030	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1052029	0					
ANR	1052031	CompoundStatement		2086:0:65656:65770	1052029	0					
ANR	1052032	IdentifierDeclStatement	sljit_uh * inst = ( sljit_uh * ) addr ;	2087:1:65659:65691	1052029	0	True				
ANR	1052033	IdentifierDecl	* inst = ( sljit_uh * ) addr		1052029	0					
ANR	1052034	IdentifierDeclType	sljit_uh *		1052029	0					
ANR	1052035	Identifier	inst		1052029	1					
ANR	1052036	AssignmentExpression	* inst = ( sljit_uh * ) addr		1052029	2		=			
ANR	1052037	Identifier	inst		1052029	0					
ANR	1052038	CastExpression	( sljit_uh * ) addr		1052029	1					
ANR	1052039	CastTarget	sljit_uh *		1052029	0					
ANR	1052040	Identifier	addr		1052029	1					
ANR	1052041	ExpressionStatement	"modify_imm32_const ( inst , new_constant )"	2088:1:65694:65732	1052029	1	True				
ANR	1052042	CallExpression	"modify_imm32_const ( inst , new_constant )"		1052029	0					
ANR	1052043	Callee	modify_imm32_const		1052029	0					
ANR	1052044	Identifier	modify_imm32_const		1052029	0					
ANR	1052045	ArgumentList	inst		1052029	1					
ANR	1052046	Argument	inst		1052029	0					
ANR	1052047	Identifier	inst		1052029	0					
ANR	1052048	Argument	new_constant		1052029	1					
ANR	1052049	Identifier	new_constant		1052029	0					
ANR	1052050	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2089:1:65735:65768	1052029	2	True				
ANR	1052051	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1052029	0					
ANR	1052052	Callee	SLJIT_CACHE_FLUSH		1052029	0					
ANR	1052053	Identifier	SLJIT_CACHE_FLUSH		1052029	0					
ANR	1052054	ArgumentList	inst		1052029	1					
ANR	1052055	Argument	inst		1052029	0					
ANR	1052056	Identifier	inst		1052029	0					
ANR	1052057	Argument	inst + 4		1052029	1					
ANR	1052058	AdditiveExpression	inst + 4		1052029	0		+			
ANR	1052059	Identifier	inst		1052029	0					
ANR	1052060	PrimaryExpression	4		1052029	1					
ANR	1052061	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1052029	1					
ANR	1052062	Identifier	sljit_set_const		1052029	2					
ANR	1052063	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1052029	3					
ANR	1052064	Parameter	sljit_uw addr	2085:46:65618:65630	1052029	0	True				
ANR	1052065	ParameterType	sljit_uw		1052029	0					
ANR	1052066	Identifier	addr		1052029	1					
ANR	1052067	Parameter	sljit_sw new_constant	2085:61:65633:65653	1052029	1	True				
ANR	1052068	ParameterType	sljit_sw		1052029	0					
ANR	1052069	Identifier	new_constant		1052029	1					
ANR	1052070	CFGEntryNode	ENTRY		1052029		True				
ANR	1052071	CFGExitNode	EXIT		1052029		True				
ANR	1052072	Symbol	new_constant		1052029						
ANR	1052073	Symbol	inst		1052029						
ANR	1052074	Symbol	addr		1052029						
