command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	898075	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_pcre_compile.c								
ANR	898076	DeclStmt									
ANR	898077	Decl							int	"int ( pcre_uint8 * , pcre_uchar * * , int , compile_data * , const pcre_uint32 * , unsigned int )"	add_list_to_class
ANR	898078	DeclStmt									
ANR	898079	Decl							BOOL	"BOOL ( int , pcre_uchar * * , const pcre_uchar * * , int * , BOOL , BOOL , int , int , pcre_uint32 * , pcre_int32 * , pcre_uint32 * , pcre_int32 * , branch_chain * , compile_data * , int * )"	compile_regex
ANR	898080	DeclStmt									
ANR	898081	Decl							const short int	const short int [ ]	escapes
ANR	898082	DeclStmt									
ANR	898083	Decl							const short int	const short int [ ]	escapes
ANR	898084	DeclStmt									
ANR	898085	Decl							unsigned char	unsigned char [ ]	ebcdic_escape_c
ANR	898086	ClassDef	verbitem	237:8:10190:10424							
ANR	898087	DeclStmt									
ANR	898088	Decl							int	int	len
ANR	898089	DeclStmt									
ANR	898090	Decl							int	int	op
ANR	898091	DeclStmt									
ANR	898092	Decl							int	int	op_arg
ANR	898093	DeclStmt									
ANR	898094	Decl							verbitem	verbitem	verbitem
ANR	898095	DeclStmt									
ANR	898096	Decl							const char	const char [ ]	verbnames
ANR	898097	DeclStmt									
ANR	898098	Decl							const verbitem	const verbitem [ ]	verbs
ANR	898099	DeclStmt									
ANR	898100	Decl							const int	const int	verbcount
ANR	898101	DeclStmt									
ANR	898102	Decl							const pcre_uchar	const pcre_uchar [ ]	sub_start_of_word
ANR	898103	DeclStmt									
ANR	898104	Decl							const pcre_uchar	const pcre_uchar [ ]	sub_end_of_word
ANR	898105	DeclStmt									
ANR	898106	Decl							const char	const char [ ]	posix_names
ANR	898107	DeclStmt									
ANR	898108	Decl							const pcre_uint8	const pcre_uint8 [ ]	posix_name_lengths
ANR	898109	DeclStmt									
ANR	898110	Decl							const int	const int [ ]	posix_class_maps
ANR	898111	DeclStmt									
ANR	898112	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PNd
ANR	898113	DeclStmt									
ANR	898114	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pNd
ANR	898115	DeclStmt									
ANR	898116	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXsp
ANR	898117	DeclStmt									
ANR	898118	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXsp
ANR	898119	DeclStmt									
ANR	898120	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXwd
ANR	898121	DeclStmt									
ANR	898122	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXwd
ANR	898123	DeclStmt									
ANR	898124	Decl							const pcre_uchar	const pcre_uchar * [ ]	substitutes
ANR	898125	DeclStmt									
ANR	898126	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pL
ANR	898127	DeclStmt									
ANR	898128	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pLl
ANR	898129	DeclStmt									
ANR	898130	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pLu
ANR	898131	DeclStmt									
ANR	898132	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXan
ANR	898133	DeclStmt									
ANR	898134	Decl							const pcre_uchar	const pcre_uchar [ ]	string_h
ANR	898135	DeclStmt									
ANR	898136	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXps
ANR	898137	DeclStmt									
ANR	898138	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PL
ANR	898139	DeclStmt									
ANR	898140	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PLl
ANR	898141	DeclStmt									
ANR	898142	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PLu
ANR	898143	DeclStmt									
ANR	898144	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXan
ANR	898145	DeclStmt									
ANR	898146	Decl							const pcre_uchar	const pcre_uchar [ ]	string_H
ANR	898147	DeclStmt									
ANR	898148	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXps
ANR	898149	DeclStmt									
ANR	898150	Decl							const pcre_uchar	const pcre_uchar * [ ]	posix_substitutes
ANR	898151	DeclStmt									
ANR	898152	Decl							const char	const char [ ]	error_texts
ANR	898153	DeclStmt									
ANR	898154	Decl							const pcre_uint8	const pcre_uint8 [ ]	digitab
ANR	898155	DeclStmt									
ANR	898156	Decl							const pcre_uint8	const pcre_uint8 [ ]	digitab
ANR	898157	DeclStmt									
ANR	898158	Decl							const pcre_uint8	const pcre_uint8 [ ]	ebcdic_chartab
ANR	898159	DeclStmt									
ANR	898160	Decl							const pcre_uint8	const pcre_uint8 [ ]	opcode_possessify
ANR	898161	Function	find_error_text	893:0:40505:40718							
ANR	898162	FunctionDef	find_error_text (int n)		898161	0					
ANR	898163	CompoundStatement		895:0:40548:40718	898161	0					
ANR	898164	IdentifierDeclStatement	const char * s = error_texts ;	896:0:40550:40577	898161	0	True				
ANR	898165	IdentifierDecl	* s = error_texts		898161	0					
ANR	898166	IdentifierDeclType	const char *		898161	0					
ANR	898167	Identifier	s		898161	1					
ANR	898168	AssignmentExpression	* s = error_texts		898161	2		=			
ANR	898169	Identifier	error_texts		898161	0					
ANR	898170	Identifier	error_texts		898161	1					
ANR	898171	ForStatement	for ( ; n > 0 ; n -- )		898161	1					
ANR	898172	Condition	n > 0	897:7:40586:40590	898161	0	True				
ANR	898173	RelationalExpression	n > 0		898161	0		>			
ANR	898174	Identifier	n		898161	0					
ANR	898175	PrimaryExpression	0		898161	1					
ANR	898176	PostIncDecOperationExpression	n --	897:14:40593:40595	898161	1	True				
ANR	898177	Identifier	n		898161	0					
ANR	898178	IncDec	--		898161	1					
ANR	898179	CompoundStatement		4:2:51:51	898161	2					
ANR	898180	WhileStatement	while ( * s ++ != CHAR_NULL )		898161	0					
ANR	898181	Condition	* s ++ != CHAR_NULL	899:9:40611:40627	898161	0	True				
ANR	898182	EqualityExpression	* s ++ != CHAR_NULL		898161	0		!=			
ANR	898183	UnaryOperationExpression	* s ++		898161	0					
ANR	898184	UnaryOperator	*		898161	0					
ANR	898185	PostIncDecOperationExpression	s ++		898161	1					
ANR	898186	Identifier	s		898161	0					
ANR	898187	IncDec	++		898161	1					
ANR	898188	Identifier	CHAR_NULL		898161	1					
ANR	898189	CompoundStatement		5:28:81:81	898161	1					
ANR	898190	ExpressionStatement		899:30:40632:40632	898161	1	True				
ANR	898191	IfStatement	if ( * s == CHAR_NULL )		898161	2					
ANR	898192	Condition	* s == CHAR_NULL	900:6:40640:40654	898161	0	True				
ANR	898193	EqualityExpression	* s == CHAR_NULL		898161	0		==			
ANR	898194	UnaryOperationExpression	* s		898161	0					
ANR	898195	UnaryOperator	*		898161	0					
ANR	898196	Identifier	s		898161	1					
ANR	898197	Identifier	CHAR_NULL		898161	1					
ANR	898198	ReturnStatement	"return ""Error text not found (please report)"" ;"	900:23:40657:40702	898161	1	True				
ANR	898199	PrimaryExpression	"""Error text not found (please report)"""		898161	0					
ANR	898200	ReturnStatement	return s ;	902:0:40708:40716	898161	2	True				
ANR	898201	Identifier	s		898161	0					
ANR	898202	ReturnType	static const char *		898161	1					
ANR	898203	Identifier	find_error_text		898161	2					
ANR	898204	ParameterList	int n		898161	3					
ANR	898205	Parameter	int n	894:16:40541:40545	898161	0	True				
ANR	898206	ParameterType	int		898161	0					
ANR	898207	Identifier	n		898161	1					
ANR	898208	CFGEntryNode	ENTRY		898161		True				
ANR	898209	CFGExitNode	EXIT		898161		True				
ANR	898210	Symbol	error_texts		898161						
ANR	898211	Symbol	* s ++		898161						
ANR	898212	Symbol	s		898161						
ANR	898213	Symbol	* s		898161						
ANR	898214	Symbol	n		898161						
ANR	898215	Symbol	CHAR_NULL		898161						
ANR	898216	Function	expand_workspace	920:0:41269:41967							
ANR	898217	FunctionDef	expand_workspace (compile_data * cd)		898216	0					
ANR	898218	CompoundStatement		922:0:41315:41967	898216	0					
ANR	898219	IdentifierDeclStatement	pcre_uchar * newspace ;	923:0:41317:41337	898216	0	True				
ANR	898220	IdentifierDecl	* newspace		898216	0					
ANR	898221	IdentifierDeclType	pcre_uchar *		898216	0					
ANR	898222	Identifier	newspace		898216	1					
ANR	898223	IdentifierDeclStatement	int newsize = cd -> workspace_size * 2 ;	924:0:41339:41375	898216	1	True				
ANR	898224	IdentifierDecl	newsize = cd -> workspace_size * 2		898216	0					
ANR	898225	IdentifierDeclType	int		898216	0					
ANR	898226	Identifier	newsize		898216	1					
ANR	898227	AssignmentExpression	newsize = cd -> workspace_size * 2		898216	2		=			
ANR	898228	Identifier	newsize		898216	0					
ANR	898229	MultiplicativeExpression	cd -> workspace_size * 2		898216	1		*			
ANR	898230	PtrMemberAccess	cd -> workspace_size		898216	0					
ANR	898231	Identifier	cd		898216	0					
ANR	898232	Identifier	workspace_size		898216	1					
ANR	898233	PrimaryExpression	2		898216	1					
ANR	898234	IfStatement	if ( newsize > COMPILE_WORK_SIZE_MAX )		898216	2					
ANR	898235	Condition	newsize > COMPILE_WORK_SIZE_MAX	926:4:41382:41412	898216	0	True				
ANR	898236	RelationalExpression	newsize > COMPILE_WORK_SIZE_MAX		898216	0		>			
ANR	898237	Identifier	newsize		898216	0					
ANR	898238	Identifier	COMPILE_WORK_SIZE_MAX		898216	1					
ANR	898239	ExpressionStatement	newsize = COMPILE_WORK_SIZE_MAX	926:37:41415:41446	898216	1	True				
ANR	898240	AssignmentExpression	newsize = COMPILE_WORK_SIZE_MAX		898216	0		=			
ANR	898241	Identifier	newsize		898216	0					
ANR	898242	Identifier	COMPILE_WORK_SIZE_MAX		898216	1					
ANR	898243	IfStatement	if ( cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN )		898216	3					
ANR	898244	Condition	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN	927:4:41452:41556	898216	0	True				
ANR	898245	OrExpression	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN		898216	0		||			
ANR	898246	RelationalExpression	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX		898216	0		>=			
ANR	898247	PtrMemberAccess	cd -> workspace_size		898216	0					
ANR	898248	Identifier	cd		898216	0					
ANR	898249	Identifier	workspace_size		898216	1					
ANR	898250	Identifier	COMPILE_WORK_SIZE_MAX		898216	1					
ANR	898251	RelationalExpression	newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN		898216	1		<			
ANR	898252	AdditiveExpression	newsize - cd -> workspace_size		898216	0		-			
ANR	898253	Identifier	newsize		898216	0					
ANR	898254	PtrMemberAccess	cd -> workspace_size		898216	1					
ANR	898255	Identifier	cd		898216	0					
ANR	898256	Identifier	workspace_size		898216	1					
ANR	898257	Identifier	WORK_SIZE_SAFETY_MARGIN		898216	1					
ANR	898258	ReturnStatement	return ERR72 ;	929:1:41560:41572	898216	1	True				
ANR	898259	Identifier	ERR72		898216	0					
ANR	898260	ExpressionStatement	newspace = ( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )	931:0:41575:41620	898216	4	True				
ANR	898261	AssignmentExpression	newspace = ( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )		898216	0		=			
ANR	898262	Identifier	newspace		898216	0					
ANR	898263	CallExpression	( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )		898216	1					
ANR	898264	Callee	PUBL ( malloc )		898216	0					
ANR	898265	CallExpression	PUBL ( malloc )		898216	0					
ANR	898266	Callee	PUBL		898216	0					
ANR	898267	Identifier	PUBL		898216	0					
ANR	898268	ArgumentList	malloc		898216	1					
ANR	898269	Argument	malloc		898216	0					
ANR	898270	Identifier	malloc		898216	0					
ANR	898271	ArgumentList	IN_UCHARS ( newsize )		898216	1					
ANR	898272	Argument	IN_UCHARS ( newsize )		898216	0					
ANR	898273	CallExpression	IN_UCHARS ( newsize )		898216	0					
ANR	898274	Callee	IN_UCHARS		898216	0					
ANR	898275	Identifier	IN_UCHARS		898216	0					
ANR	898276	ArgumentList	newsize		898216	1					
ANR	898277	Argument	newsize		898216	0					
ANR	898278	Identifier	newsize		898216	0					
ANR	898279	IfStatement	if ( newspace == NULL )		898216	5					
ANR	898280	Condition	newspace == NULL	932:4:41626:41641	898216	0	True				
ANR	898281	EqualityExpression	newspace == NULL		898216	0		==			
ANR	898282	Identifier	newspace		898216	0					
ANR	898283	Identifier	NULL		898216	1					
ANR	898284	ReturnStatement	return ERR21 ;	932:22:41644:41656	898216	1	True				
ANR	898285	Identifier	ERR21		898216	0					
ANR	898286	ExpressionStatement	"memcpy ( newspace , cd -> start_workspace , cd -> workspace_size * sizeof ( pcre_uchar ) )"	933:0:41658:41736	898216	6	True				
ANR	898287	CallExpression	"memcpy ( newspace , cd -> start_workspace , cd -> workspace_size * sizeof ( pcre_uchar ) )"		898216	0					
ANR	898288	Callee	memcpy		898216	0					
ANR	898289	Identifier	memcpy		898216	0					
ANR	898290	ArgumentList	newspace		898216	1					
ANR	898291	Argument	newspace		898216	0					
ANR	898292	Identifier	newspace		898216	0					
ANR	898293	Argument	cd -> start_workspace		898216	1					
ANR	898294	PtrMemberAccess	cd -> start_workspace		898216	0					
ANR	898295	Identifier	cd		898216	0					
ANR	898296	Identifier	start_workspace		898216	1					
ANR	898297	Argument	cd -> workspace_size * sizeof ( pcre_uchar )		898216	2					
ANR	898298	MultiplicativeExpression	cd -> workspace_size * sizeof ( pcre_uchar )		898216	0		*			
ANR	898299	PtrMemberAccess	cd -> workspace_size		898216	0					
ANR	898300	Identifier	cd		898216	0					
ANR	898301	Identifier	workspace_size		898216	1					
ANR	898302	SizeofExpression	sizeof ( pcre_uchar )		898216	1					
ANR	898303	Sizeof	sizeof		898216	0					
ANR	898304	SizeofOperand	pcre_uchar		898216	1					
ANR	898305	ExpressionStatement	cd -> hwm = ( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )	934:0:41738:41804	898216	7	True				
ANR	898306	AssignmentExpression	cd -> hwm = ( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )		898216	0		=			
ANR	898307	PtrMemberAccess	cd -> hwm		898216	0					
ANR	898308	Identifier	cd		898216	0					
ANR	898309	Identifier	hwm		898216	1					
ANR	898310	AdditiveExpression	( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )		898216	1		+			
ANR	898311	CastExpression	( pcre_uchar * ) newspace		898216	0					
ANR	898312	CastTarget	pcre_uchar *		898216	0					
ANR	898313	Identifier	newspace		898216	1					
ANR	898314	AdditiveExpression	cd -> hwm - cd -> start_workspace		898216	1		-			
ANR	898315	PtrMemberAccess	cd -> hwm		898216	0					
ANR	898316	Identifier	cd		898216	0					
ANR	898317	Identifier	hwm		898216	1					
ANR	898318	PtrMemberAccess	cd -> start_workspace		898216	1					
ANR	898319	Identifier	cd		898216	0					
ANR	898320	Identifier	start_workspace		898216	1					
ANR	898321	IfStatement	if ( cd -> workspace_size > COMPILE_WORK_SIZE )		898216	8					
ANR	898322	Condition	cd -> workspace_size > COMPILE_WORK_SIZE	935:4:41810:41847	898216	0	True				
ANR	898323	RelationalExpression	cd -> workspace_size > COMPILE_WORK_SIZE		898216	0		>			
ANR	898324	PtrMemberAccess	cd -> workspace_size		898216	0					
ANR	898325	Identifier	cd		898216	0					
ANR	898326	Identifier	workspace_size		898216	1					
ANR	898327	Identifier	COMPILE_WORK_SIZE		898216	1					
ANR	898328	ExpressionStatement	( PUBL ( free ) ) ( ( void * ) cd -> start_workspace )	936:2:41852:41893	898216	1	True				
ANR	898329	CallExpression	( PUBL ( free ) ) ( ( void * ) cd -> start_workspace )		898216	0					
ANR	898330	Callee	PUBL ( free )		898216	0					
ANR	898331	CallExpression	PUBL ( free )		898216	0					
ANR	898332	Callee	PUBL		898216	0					
ANR	898333	Identifier	PUBL		898216	0					
ANR	898334	ArgumentList	free		898216	1					
ANR	898335	Argument	free		898216	0					
ANR	898336	Identifier	free		898216	0					
ANR	898337	ArgumentList	( void * ) cd -> start_workspace		898216	1					
ANR	898338	Argument	( void * ) cd -> start_workspace		898216	0					
ANR	898339	CastExpression	( void * ) cd -> start_workspace		898216	0					
ANR	898340	CastTarget	void *		898216	0					
ANR	898341	PtrMemberAccess	cd -> start_workspace		898216	1					
ANR	898342	Identifier	cd		898216	0					
ANR	898343	Identifier	start_workspace		898216	1					
ANR	898344	ExpressionStatement	cd -> start_workspace = newspace	937:0:41895:41925	898216	9	True				
ANR	898345	AssignmentExpression	cd -> start_workspace = newspace		898216	0		=			
ANR	898346	PtrMemberAccess	cd -> start_workspace		898216	0					
ANR	898347	Identifier	cd		898216	0					
ANR	898348	Identifier	start_workspace		898216	1					
ANR	898349	Identifier	newspace		898216	1					
ANR	898350	ExpressionStatement	cd -> workspace_size = newsize	938:0:41927:41955	898216	10	True				
ANR	898351	AssignmentExpression	cd -> workspace_size = newsize		898216	0		=			
ANR	898352	PtrMemberAccess	cd -> workspace_size		898216	0					
ANR	898353	Identifier	cd		898216	0					
ANR	898354	Identifier	workspace_size		898216	1					
ANR	898355	Identifier	newsize		898216	1					
ANR	898356	ReturnStatement	return 0 ;	939:0:41957:41965	898216	11	True				
ANR	898357	PrimaryExpression	0		898216	0					
ANR	898358	ReturnType	static int		898216	1					
ANR	898359	Identifier	expand_workspace		898216	2					
ANR	898360	ParameterList	compile_data * cd		898216	3					
ANR	898361	Parameter	compile_data * cd	921:17:41297:41312	898216	0	True				
ANR	898362	ParameterType	compile_data *		898216	0					
ANR	898363	Identifier	cd		898216	1					
ANR	898364	CFGEntryNode	ENTRY		898216		True				
ANR	898365	CFGExitNode	EXIT		898216		True				
ANR	898366	Symbol	cd		898216						
ANR	898367	Symbol	malloc		898216						
ANR	898368	Symbol	NULL		898216						
ANR	898369	Symbol	COMPILE_WORK_SIZE		898216						
ANR	898370	Symbol	* cd		898216						
ANR	898371	Symbol	WORK_SIZE_SAFETY_MARGIN		898216						
ANR	898372	Symbol	newsize		898216						
ANR	898373	Symbol	PUBL		898216						
ANR	898374	Symbol	IN_UCHARS		898216						
ANR	898375	Symbol	cd -> workspace_size		898216						
ANR	898376	Symbol	COMPILE_WORK_SIZE_MAX		898216						
ANR	898377	Symbol	ERR72		898216						
ANR	898378	Symbol	cd -> start_workspace		898216						
ANR	898379	Symbol	newspace		898216						
ANR	898380	Symbol	ERR21		898216						
ANR	898381	Symbol	cd -> hwm		898216						
ANR	898382	Symbol	free		898216						
ANR	898383	Function	is_counted_repeat	959:0:42478:42839							
ANR	898384	FunctionDef	is_counted_repeat (const pcre_uchar * p)		898383	0					
ANR	898385	CompoundStatement		961:0:42529:42839	898383	0					
ANR	898386	IfStatement	if ( ! IS_DIGIT ( * p ) )		898383	0					
ANR	898387	Condition	! IS_DIGIT ( * p )	962:4:42535:42547	898383	0	True				
ANR	898388	UnaryOperationExpression	! IS_DIGIT ( * p )		898383	0					
ANR	898389	UnaryOperator	!		898383	0					
ANR	898390	CallExpression	IS_DIGIT ( * p )		898383	1					
ANR	898391	Callee	IS_DIGIT		898383	0					
ANR	898392	Identifier	IS_DIGIT		898383	0					
ANR	898393	ArgumentList	* p		898383	1					
ANR	898394	Argument	* p		898383	0					
ANR	898395	UnaryOperationExpression	* p		898383	0					
ANR	898396	UnaryOperator	*		898383	0					
ANR	898397	Identifier	p		898383	1					
ANR	898398	ReturnStatement	return FALSE ;	962:19:42550:42562	898383	1	True				
ANR	898399	Identifier	FALSE		898383	0					
ANR	898400	ExpressionStatement	p ++	963:0:42564:42567	898383	1	True				
ANR	898401	PostIncDecOperationExpression	p ++		898383	0					
ANR	898402	Identifier	p		898383	0					
ANR	898403	IncDec	++		898383	1					
ANR	898404	WhileStatement	while ( IS_DIGIT ( * p ) )		898383	2					
ANR	898405	Condition	IS_DIGIT ( * p )	964:7:42576:42587	898383	0	True				
ANR	898406	CallExpression	IS_DIGIT ( * p )		898383	0					
ANR	898407	Callee	IS_DIGIT		898383	0					
ANR	898408	Identifier	IS_DIGIT		898383	0					
ANR	898409	ArgumentList	* p		898383	1					
ANR	898410	Argument	* p		898383	0					
ANR	898411	UnaryOperationExpression	* p		898383	0					
ANR	898412	UnaryOperator	*		898383	0					
ANR	898413	Identifier	p		898383	1					
ANR	898414	ExpressionStatement	p ++	964:21:42590:42593	898383	1	True				
ANR	898415	PostIncDecOperationExpression	p ++		898383	0					
ANR	898416	Identifier	p		898383	0					
ANR	898417	IncDec	++		898383	1					
ANR	898418	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		898383	3					
ANR	898419	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	965:4:42599:42628	898383	0	True				
ANR	898420	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		898383	0		==			
ANR	898421	UnaryOperationExpression	* p		898383	0					
ANR	898422	UnaryOperator	*		898383	0					
ANR	898423	Identifier	p		898383	1					
ANR	898424	Identifier	CHAR_RIGHT_CURLY_BRACKET		898383	1					
ANR	898425	ReturnStatement	return TRUE ;	965:36:42631:42642	898383	1	True				
ANR	898426	Identifier	TRUE		898383	0					
ANR	898427	IfStatement	if ( * p ++ != CHAR_COMMA )		898383	4					
ANR	898428	Condition	* p ++ != CHAR_COMMA	967:4:42649:42666	898383	0	True				
ANR	898429	EqualityExpression	* p ++ != CHAR_COMMA		898383	0		!=			
ANR	898430	UnaryOperationExpression	* p ++		898383	0					
ANR	898431	UnaryOperator	*		898383	0					
ANR	898432	PostIncDecOperationExpression	p ++		898383	1					
ANR	898433	Identifier	p		898383	0					
ANR	898434	IncDec	++		898383	1					
ANR	898435	Identifier	CHAR_COMMA		898383	1					
ANR	898436	ReturnStatement	return FALSE ;	967:24:42669:42681	898383	1	True				
ANR	898437	Identifier	FALSE		898383	0					
ANR	898438	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		898383	5					
ANR	898439	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	968:4:42687:42716	898383	0	True				
ANR	898440	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		898383	0		==			
ANR	898441	UnaryOperationExpression	* p		898383	0					
ANR	898442	UnaryOperator	*		898383	0					
ANR	898443	Identifier	p		898383	1					
ANR	898444	Identifier	CHAR_RIGHT_CURLY_BRACKET		898383	1					
ANR	898445	ReturnStatement	return TRUE ;	968:36:42719:42730	898383	1	True				
ANR	898446	Identifier	TRUE		898383	0					
ANR	898447	IfStatement	if ( ! IS_DIGIT ( * p ) )		898383	6					
ANR	898448	Condition	! IS_DIGIT ( * p )	970:4:42737:42749	898383	0	True				
ANR	898449	UnaryOperationExpression	! IS_DIGIT ( * p )		898383	0					
ANR	898450	UnaryOperator	!		898383	0					
ANR	898451	CallExpression	IS_DIGIT ( * p )		898383	1					
ANR	898452	Callee	IS_DIGIT		898383	0					
ANR	898453	Identifier	IS_DIGIT		898383	0					
ANR	898454	ArgumentList	* p		898383	1					
ANR	898455	Argument	* p		898383	0					
ANR	898456	UnaryOperationExpression	* p		898383	0					
ANR	898457	UnaryOperator	*		898383	0					
ANR	898458	Identifier	p		898383	1					
ANR	898459	ReturnStatement	return FALSE ;	970:19:42752:42764	898383	1	True				
ANR	898460	Identifier	FALSE		898383	0					
ANR	898461	ExpressionStatement	p ++	971:0:42766:42769	898383	7	True				
ANR	898462	PostIncDecOperationExpression	p ++		898383	0					
ANR	898463	Identifier	p		898383	0					
ANR	898464	IncDec	++		898383	1					
ANR	898465	WhileStatement	while ( IS_DIGIT ( * p ) )		898383	8					
ANR	898466	Condition	IS_DIGIT ( * p )	972:7:42778:42789	898383	0	True				
ANR	898467	CallExpression	IS_DIGIT ( * p )		898383	0					
ANR	898468	Callee	IS_DIGIT		898383	0					
ANR	898469	Identifier	IS_DIGIT		898383	0					
ANR	898470	ArgumentList	* p		898383	1					
ANR	898471	Argument	* p		898383	0					
ANR	898472	UnaryOperationExpression	* p		898383	0					
ANR	898473	UnaryOperator	*		898383	0					
ANR	898474	Identifier	p		898383	1					
ANR	898475	ExpressionStatement	p ++	972:21:42792:42795	898383	1	True				
ANR	898476	PostIncDecOperationExpression	p ++		898383	0					
ANR	898477	Identifier	p		898383	0					
ANR	898478	IncDec	++		898383	1					
ANR	898479	ReturnStatement	return ( * p == CHAR_RIGHT_CURLY_BRACKET ) ;	974:0:42798:42837	898383	9	True				
ANR	898480	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		898383	0		==			
ANR	898481	UnaryOperationExpression	* p		898383	0					
ANR	898482	UnaryOperator	*		898383	0					
ANR	898483	Identifier	p		898383	1					
ANR	898484	Identifier	CHAR_RIGHT_CURLY_BRACKET		898383	1					
ANR	898485	ReturnType	static BOOL		898383	1					
ANR	898486	Identifier	is_counted_repeat		898383	2					
ANR	898487	ParameterList	const pcre_uchar * p		898383	3					
ANR	898488	Parameter	const pcre_uchar * p	960:18:42508:42526	898383	0	True				
ANR	898489	ParameterType	const pcre_uchar *		898383	0					
ANR	898490	Identifier	p		898383	1					
ANR	898491	CFGEntryNode	ENTRY		898383		True				
ANR	898492	CFGExitNode	EXIT		898383		True				
ANR	898493	Symbol	p		898383						
ANR	898494	Symbol	* p ++		898383						
ANR	898495	Symbol	CHAR_COMMA		898383						
ANR	898496	Symbol	TRUE		898383						
ANR	898497	Symbol	* p		898383						
ANR	898498	Symbol	FALSE		898383						
ANR	898499	Symbol	IS_DIGIT		898383						
ANR	898500	Symbol	CHAR_RIGHT_CURLY_BRACKET		898383						
ANR	898501	Function	check_escape	1004:0:43921:59619							
ANR	898502	FunctionDef	"check_escape (const pcre_uchar * * ptrptr , pcre_uint32 * chptr , int * errorcodeptr , int bracount , int options , BOOL isclass)"		898501	0					
ANR	898503	CompoundStatement		1007:0:44054:59619	898501	0					
ANR	898504	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	1009:0:44106:44143	898501	0	True				
ANR	898505	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		898501	0					
ANR	898506	IdentifierDeclType	BOOL		898501	0					
ANR	898507	Identifier	utf		898501	1					
ANR	898508	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		898501	2		=			
ANR	898509	Identifier	utf		898501	0					
ANR	898510	EqualityExpression	( options & PCRE_UTF8 ) != 0		898501	1		!=			
ANR	898511	BitAndExpression	options & PCRE_UTF8		898501	0		&			
ANR	898512	Identifier	options		898501	0					
ANR	898513	Identifier	PCRE_UTF8		898501	1					
ANR	898514	PrimaryExpression	0		898501	1					
ANR	898515	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr + 1 ;	1010:0:44145:44180	898501	1	True				
ANR	898516	IdentifierDecl	* ptr = * ptrptr + 1		898501	0					
ANR	898517	IdentifierDeclType	const pcre_uchar *		898501	0					
ANR	898518	Identifier	ptr		898501	1					
ANR	898519	AssignmentExpression	* ptr = * ptrptr + 1		898501	2		=			
ANR	898520	Identifier	ptr		898501	0					
ANR	898521	AdditiveExpression	* ptrptr + 1		898501	1		+			
ANR	898522	UnaryOperationExpression	* ptrptr		898501	0					
ANR	898523	UnaryOperator	*		898501	0					
ANR	898524	Identifier	ptrptr		898501	1					
ANR	898525	PrimaryExpression	1		898501	1					
ANR	898526	IdentifierDeclStatement	pcre_uint32 c ;	1011:0:44182:44195	898501	2	True				
ANR	898527	IdentifierDecl	c		898501	0					
ANR	898528	IdentifierDeclType	pcre_uint32		898501	0					
ANR	898529	Identifier	c		898501	1					
ANR	898530	IdentifierDeclStatement	int escape = 0 ;	1012:0:44197:44211	898501	3	True				
ANR	898531	IdentifierDecl	escape = 0		898501	0					
ANR	898532	IdentifierDeclType	int		898501	0					
ANR	898533	Identifier	escape		898501	1					
ANR	898534	AssignmentExpression	escape = 0		898501	2		=			
ANR	898535	Identifier	escape		898501	0					
ANR	898536	PrimaryExpression	0		898501	1					
ANR	898537	IdentifierDeclStatement	int i ;	1013:0:44213:44218	898501	4	True				
ANR	898538	IdentifierDecl	i		898501	0					
ANR	898539	IdentifierDeclType	int		898501	0					
ANR	898540	Identifier	i		898501	1					
ANR	898541	ExpressionStatement	"GETCHARINCTEST ( c , ptr )"	1015:0:44221:44243	898501	5	True				
ANR	898542	CallExpression	"GETCHARINCTEST ( c , ptr )"		898501	0					
ANR	898543	Callee	GETCHARINCTEST		898501	0					
ANR	898544	Identifier	GETCHARINCTEST		898501	0					
ANR	898545	ArgumentList	c		898501	1					
ANR	898546	Argument	c		898501	0					
ANR	898547	Identifier	c		898501	0					
ANR	898548	Argument	ptr		898501	1					
ANR	898549	Identifier	ptr		898501	0					
ANR	898550	ExpressionStatement	ptr --	1016:0:44300:44305	898501	6	True				
ANR	898551	PostIncDecOperationExpression	ptr --		898501	0					
ANR	898552	Identifier	ptr		898501	0					
ANR	898553	IncDec	--		898501	1					
ANR	898554	IfStatement	if ( c == CHAR_NULL )		898501	7					
ANR	898555	Condition	c == CHAR_NULL	1020:4:44444:44457	898501	0	True				
ANR	898556	EqualityExpression	c == CHAR_NULL		898501	0		==			
ANR	898557	Identifier	c		898501	0					
ANR	898558	Identifier	CHAR_NULL		898501	1					
ANR	898559	ExpressionStatement	* errorcodeptr = ERR1	1020:20:44460:44480	898501	1	True				
ANR	898560	AssignmentExpression	* errorcodeptr = ERR1		898501	0		=			
ANR	898561	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898562	UnaryOperator	*		898501	0					
ANR	898563	Identifier	errorcodeptr		898501	1					
ANR	898564	Identifier	ERR1		898501	1					
ANR	898565	ElseStatement	else		898501	0					
ANR	898566	IfStatement	if ( c < CHAR_0 || c > CHAR_z )		898501	0					
ANR	898567	Condition	c < CHAR_0 || c > CHAR_z	1028:9:44762:44785	898501	0	True				
ANR	898568	OrExpression	c < CHAR_0 || c > CHAR_z		898501	0		||			
ANR	898569	RelationalExpression	c < CHAR_0		898501	0		<			
ANR	898570	Identifier	c		898501	0					
ANR	898571	Identifier	CHAR_0		898501	1					
ANR	898572	RelationalExpression	c > CHAR_z		898501	1		>			
ANR	898573	Identifier	c		898501	0					
ANR	898574	Identifier	CHAR_z		898501	1					
ANR	898575	CompoundStatement		22:35:733:733	898501	1					
ANR	898576	ElseStatement	else		898501	0					
ANR	898577	IfStatement	if ( ( i = escapes [ c - CHAR_0 ] ) != 0 )		898501	0					
ANR	898578	Condition	( i = escapes [ c - CHAR_0 ] ) != 0	1029:9:44800:44829	898501	0	True				
ANR	898579	EqualityExpression	( i = escapes [ c - CHAR_0 ] ) != 0		898501	0		!=			
ANR	898580	AssignmentExpression	i = escapes [ c - CHAR_0 ]		898501	0		=			
ANR	898581	Identifier	i		898501	0					
ANR	898582	ArrayIndexing	escapes [ c - CHAR_0 ]		898501	1					
ANR	898583	Identifier	escapes		898501	0					
ANR	898584	AdditiveExpression	c - CHAR_0		898501	1		-			
ANR	898585	Identifier	c		898501	0					
ANR	898586	Identifier	CHAR_0		898501	1					
ANR	898587	PrimaryExpression	0		898501	1					
ANR	898588	CompoundStatement		24:2:779:779	898501	1					
ANR	898589	IfStatement	if ( i > 0 )		898501	0					
ANR	898590	Condition	i > 0	1030:8:44840:44844	898501	0	True				
ANR	898591	RelationalExpression	i > 0		898501	0		>			
ANR	898592	Identifier	i		898501	0					
ANR	898593	PrimaryExpression	0		898501	1					
ANR	898594	ExpressionStatement	c = ( pcre_uint32 ) i	1030:15:44847:44865	898501	1	True				
ANR	898595	AssignmentExpression	c = ( pcre_uint32 ) i		898501	0		=			
ANR	898596	Identifier	c		898501	0					
ANR	898597	CastExpression	( pcre_uint32 ) i		898501	1					
ANR	898598	CastTarget	pcre_uint32		898501	0					
ANR	898599	Identifier	i		898501	1					
ANR	898600	ElseStatement	else		898501	0					
ANR	898601	ExpressionStatement	escape = - i	1030:40:44872:44883	898501	0	True				
ANR	898602	AssignmentExpression	escape = - i		898501	0		=			
ANR	898603	Identifier	escape		898501	0					
ANR	898604	UnaryOperationExpression	- i		898501	1					
ANR	898605	UnaryOperator	-		898501	0					
ANR	898606	Identifier	i		898501	1					
ANR	898607	ElseStatement	else		898501	0					
ANR	898608	CompoundStatement		38:2:1203:1208	898501	0					
ANR	898609	IdentifierDeclStatement	const pcre_uchar * oldptr ;	1042:2:45196:45220	898501	0	True				
ANR	898610	IdentifierDecl	* oldptr		898501	0					
ANR	898611	IdentifierDeclType	const pcre_uchar *		898501	0					
ANR	898612	Identifier	oldptr		898501	1					
ANR	898613	IdentifierDeclStatement	"BOOL braced , negated , overflow ;"	1043:2:45224:45254	898501	1	True				
ANR	898614	IdentifierDecl	braced		898501	0					
ANR	898615	IdentifierDeclType	BOOL		898501	0					
ANR	898616	Identifier	braced		898501	1					
ANR	898617	IdentifierDecl	negated		898501	1					
ANR	898618	IdentifierDeclType	BOOL		898501	0					
ANR	898619	Identifier	negated		898501	1					
ANR	898620	IdentifierDecl	overflow		898501	2					
ANR	898621	IdentifierDeclType	BOOL		898501	0					
ANR	898622	Identifier	overflow		898501	1					
ANR	898623	IdentifierDeclStatement	int s ;	1044:2:45258:45263	898501	2	True				
ANR	898624	IdentifierDecl	s		898501	0					
ANR	898625	IdentifierDeclType	int		898501	0					
ANR	898626	Identifier	s		898501	1					
ANR	898627	SwitchStatement	switch ( c )		898501	3					
ANR	898628	Condition	c	1046:10:45276:45276	898501	0	True				
ANR	898629	Identifier	c		898501	0					
ANR	898630	CompoundStatement		41:4:1228:1228	898501	1					
ANR	898631	Label	case CHAR_l :	1051:4:45381:45392	898501	0	True				
ANR	898632	Identifier	CHAR_l		898501	0					
ANR	898633	Label	case CHAR_L :	1052:4:45398:45409	898501	1	True				
ANR	898634	Identifier	CHAR_L		898501	0					
ANR	898635	ExpressionStatement	* errorcodeptr = ERR37	1053:4:45415:45436	898501	2	True				
ANR	898636	AssignmentExpression	* errorcodeptr = ERR37		898501	0		=			
ANR	898637	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898638	UnaryOperator	*		898501	0					
ANR	898639	Identifier	errorcodeptr		898501	1					
ANR	898640	Identifier	ERR37		898501	1					
ANR	898641	BreakStatement	break ;	1054:4:45442:45447	898501	3	True				
ANR	898642	Label	case CHAR_u :	1056:4:45454:45465	898501	4	True				
ANR	898643	Identifier	CHAR_u		898501	0					
ANR	898644	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		898501	5					
ANR	898645	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) != 0	1057:8:45475:45513	898501	0	True				
ANR	898646	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) != 0		898501	0		!=			
ANR	898647	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		898501	0		&			
ANR	898648	Identifier	options		898501	0					
ANR	898649	Identifier	PCRE_JAVASCRIPT_COMPAT		898501	1					
ANR	898650	PrimaryExpression	0		898501	1					
ANR	898651	CompoundStatement		52:6:1467:1467	898501	1					
ANR	898652	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0 )		898501	0					
ANR	898653	Condition	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0	1061:10:45654:45913	898501	0	True				
ANR	898654	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	0		&&			
ANR	898655	CallExpression	MAX_255 ( ptr [ 1 ] )		898501	0					
ANR	898656	Callee	MAX_255		898501	0					
ANR	898657	Identifier	MAX_255		898501	0					
ANR	898658	ArgumentList	ptr [ 1 ]		898501	1					
ANR	898659	Argument	ptr [ 1 ]		898501	0					
ANR	898660	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898661	Identifier	ptr		898501	0					
ANR	898662	PrimaryExpression	1		898501	1					
ANR	898663	AndExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898664	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		898501	0		!=			
ANR	898665	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		898501	0		&			
ANR	898666	ArrayIndexing	digitab [ ptr [ 1 ] ]		898501	0					
ANR	898667	Identifier	digitab		898501	0					
ANR	898668	ArrayIndexing	ptr [ 1 ]		898501	1					
ANR	898669	Identifier	ptr		898501	0					
ANR	898670	PrimaryExpression	1		898501	1					
ANR	898671	Identifier	ctype_xdigit		898501	1					
ANR	898672	PrimaryExpression	0		898501	1					
ANR	898673	AndExpression	MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898674	CallExpression	MAX_255 ( ptr [ 2 ] )		898501	0					
ANR	898675	Callee	MAX_255		898501	0					
ANR	898676	Identifier	MAX_255		898501	0					
ANR	898677	ArgumentList	ptr [ 2 ]		898501	1					
ANR	898678	Argument	ptr [ 2 ]		898501	0					
ANR	898679	ArrayIndexing	ptr [ 2 ]		898501	0					
ANR	898680	Identifier	ptr		898501	0					
ANR	898681	PrimaryExpression	2		898501	1					
ANR	898682	AndExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898683	EqualityExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		898501	0		!=			
ANR	898684	BitAndExpression	digitab [ ptr [ 2 ] ] & ctype_xdigit		898501	0		&			
ANR	898685	ArrayIndexing	digitab [ ptr [ 2 ] ]		898501	0					
ANR	898686	Identifier	digitab		898501	0					
ANR	898687	ArrayIndexing	ptr [ 2 ]		898501	1					
ANR	898688	Identifier	ptr		898501	0					
ANR	898689	PrimaryExpression	2		898501	1					
ANR	898690	Identifier	ctype_xdigit		898501	1					
ANR	898691	PrimaryExpression	0		898501	1					
ANR	898692	AndExpression	MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898693	CallExpression	MAX_255 ( ptr [ 3 ] )		898501	0					
ANR	898694	Callee	MAX_255		898501	0					
ANR	898695	Identifier	MAX_255		898501	0					
ANR	898696	ArgumentList	ptr [ 3 ]		898501	1					
ANR	898697	Argument	ptr [ 3 ]		898501	0					
ANR	898698	ArrayIndexing	ptr [ 3 ]		898501	0					
ANR	898699	Identifier	ptr		898501	0					
ANR	898700	PrimaryExpression	3		898501	1					
ANR	898701	AndExpression	( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898702	EqualityExpression	( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0		898501	0		!=			
ANR	898703	BitAndExpression	digitab [ ptr [ 3 ] ] & ctype_xdigit		898501	0		&			
ANR	898704	ArrayIndexing	digitab [ ptr [ 3 ] ]		898501	0					
ANR	898705	Identifier	digitab		898501	0					
ANR	898706	ArrayIndexing	ptr [ 3 ]		898501	1					
ANR	898707	Identifier	ptr		898501	0					
ANR	898708	PrimaryExpression	3		898501	1					
ANR	898709	Identifier	ctype_xdigit		898501	1					
ANR	898710	PrimaryExpression	0		898501	1					
ANR	898711	AndExpression	MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	898712	CallExpression	MAX_255 ( ptr [ 4 ] )		898501	0					
ANR	898713	Callee	MAX_255		898501	0					
ANR	898714	Identifier	MAX_255		898501	0					
ANR	898715	ArgumentList	ptr [ 4 ]		898501	1					
ANR	898716	Argument	ptr [ 4 ]		898501	0					
ANR	898717	ArrayIndexing	ptr [ 4 ]		898501	0					
ANR	898718	Identifier	ptr		898501	0					
ANR	898719	PrimaryExpression	4		898501	1					
ANR	898720	EqualityExpression	( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		898501	1		!=			
ANR	898721	BitAndExpression	digitab [ ptr [ 4 ] ] & ctype_xdigit		898501	0		&			
ANR	898722	ArrayIndexing	digitab [ ptr [ 4 ] ]		898501	0					
ANR	898723	Identifier	digitab		898501	0					
ANR	898724	ArrayIndexing	ptr [ 4 ]		898501	1					
ANR	898725	Identifier	ptr		898501	0					
ANR	898726	PrimaryExpression	4		898501	1					
ANR	898727	Identifier	ctype_xdigit		898501	1					
ANR	898728	PrimaryExpression	0		898501	1					
ANR	898729	CompoundStatement		59:8:1869:1869	898501	1					
ANR	898730	ExpressionStatement	c = 0	1066:8:45934:45939	898501	0	True				
ANR	898731	AssignmentExpression	c = 0		898501	0		=			
ANR	898732	Identifier	c		898501	0					
ANR	898733	PrimaryExpression	0		898501	1					
ANR	898734	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		898501	1					
ANR	898735	ForInit	i = 0 ;	1067:13:45954:45959	898501	0	True				
ANR	898736	AssignmentExpression	i = 0		898501	0		=			
ANR	898737	Identifier	i		898501	0					
ANR	898738	PrimaryExpression	0		898501	1					
ANR	898739	Condition	i < 4	1067:20:45961:45965	898501	1	True				
ANR	898740	RelationalExpression	i < 4		898501	0		<			
ANR	898741	Identifier	i		898501	0					
ANR	898742	PrimaryExpression	4		898501	1					
ANR	898743	UnaryExpression	++ i	1067:27:45968:45970	898501	2	True				
ANR	898744	IncDec	++		898501	0					
ANR	898745	Identifier	i		898501	1					
ANR	898746	CompoundStatement		63:19:1949:1974	898501	3					
ANR	898747	Statement	register	1069:10:45995:46002	898501	0	True				
ANR	898748	IdentifierDeclStatement	pcre_uint32 cc = * ( ++ ptr ) ;	1069:19:46004:46029	898501	1	True				
ANR	898749	IdentifierDecl	cc = * ( ++ ptr )		898501	0					
ANR	898750	IdentifierDeclType	pcre_uint32		898501	0					
ANR	898751	Identifier	cc		898501	1					
ANR	898752	AssignmentExpression	cc = * ( ++ ptr )		898501	2		=			
ANR	898753	Identifier	cc		898501	0					
ANR	898754	UnaryOperationExpression	* ( ++ ptr )		898501	1					
ANR	898755	UnaryOperator	*		898501	0					
ANR	898756	UnaryExpression	++ ptr		898501	1					
ANR	898757	IncDec	++		898501	0					
ANR	898758	Identifier	ptr		898501	1					
ANR	898759	IfStatement	if ( cc >= CHAR_a )		898501	2					
ANR	898760	Condition	cc >= CHAR_a	1071:14:46086:46097	898501	0	True				
ANR	898761	RelationalExpression	cc >= CHAR_a		898501	0		>=			
ANR	898762	Identifier	cc		898501	0					
ANR	898763	Identifier	CHAR_a		898501	1					
ANR	898764	ExpressionStatement	cc -= 32	1071:28:46100:46108	898501	1	True				
ANR	898765	AssignmentExpression	cc -= 32		898501	0		-=			
ANR	898766	Identifier	cc		898501	0					
ANR	898767	PrimaryExpression	32		898501	1					
ANR	898768	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1072:10:46162:46221	898501	3	True				
ANR	898769	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	0		=			
ANR	898770	Identifier	c		898501	0					
ANR	898771	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		+			
ANR	898772	ShiftExpression	c << 4		898501	0		<<			
ANR	898773	Identifier	c		898501	0					
ANR	898774	PrimaryExpression	4		898501	1					
ANR	898775	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		-			
ANR	898776	Identifier	cc		898501	0					
ANR	898777	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		898501	1					
ANR	898778	Condition	cc < CHAR_A		898501	0					
ANR	898779	RelationalExpression	cc < CHAR_A		898501	0		<			
ANR	898780	Identifier	cc		898501	0					
ANR	898781	Identifier	CHAR_A		898501	1					
ANR	898782	Identifier	CHAR_0		898501	1					
ANR	898783	AdditiveExpression	CHAR_A - 10		898501	2		-			
ANR	898784	Identifier	CHAR_A		898501	0					
ANR	898785	PrimaryExpression	10		898501	1					
ANR	898786	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		898501	2					
ANR	898787	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1080:12:46472:46500	898501	0	True				
ANR	898788	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		898501	0		>			
ANR	898789	Identifier	c		898501	0					
ANR	898790	ConditionalExpression	utf ? 0x10ffffU : 0xffU		898501	1					
ANR	898791	Condition	utf		898501	0					
ANR	898792	Identifier	utf		898501	0					
ANR	898793	PrimaryExpression	0x10ffffU		898501	1					
ANR	898794	PrimaryExpression	0xffU		898501	2					
ANR	898795	CompoundStatement		80:10:2602:2602	898501	1					
ANR	898796	ExpressionStatement	* errorcodeptr = ERR76	1087:10:46669:46690	898501	0	True				
ANR	898797	AssignmentExpression	* errorcodeptr = ERR76		898501	0		=			
ANR	898798	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898799	UnaryOperator	*		898501	0					
ANR	898800	Identifier	errorcodeptr		898501	1					
ANR	898801	Identifier	ERR76		898501	1					
ANR	898802	ElseStatement	else		898501	0					
ANR	898803	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		898501	0					
ANR	898804	Condition	utf && c >= 0xd800 && c <= 0xdfff	1089:17:46721:46753	898501	0	True				
ANR	898805	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		898501	0		&&			
ANR	898806	Identifier	utf		898501	0					
ANR	898807	AndExpression	c >= 0xd800 && c <= 0xdfff		898501	1		&&			
ANR	898808	RelationalExpression	c >= 0xd800		898501	0		>=			
ANR	898809	Identifier	c		898501	0					
ANR	898810	PrimaryExpression	0xd800		898501	1					
ANR	898811	RelationalExpression	c <= 0xdfff		898501	1		<=			
ANR	898812	Identifier	c		898501	0					
ANR	898813	PrimaryExpression	0xdfff		898501	1					
ANR	898814	ExpressionStatement	* errorcodeptr = ERR73	1089:52:46756:46777	898501	1	True				
ANR	898815	AssignmentExpression	* errorcodeptr = ERR73		898501	0		=			
ANR	898816	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898817	UnaryOperator	*		898501	0					
ANR	898818	Identifier	errorcodeptr		898501	1					
ANR	898819	Identifier	ERR73		898501	1					
ANR	898820	ElseStatement	else		898501	0					
ANR	898821	ExpressionStatement	* errorcodeptr = ERR37	1093:6:46812:46833	898501	0	True				
ANR	898822	AssignmentExpression	* errorcodeptr = ERR37		898501	0		=			
ANR	898823	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898824	UnaryOperator	*		898501	0					
ANR	898825	Identifier	errorcodeptr		898501	1					
ANR	898826	Identifier	ERR37		898501	1					
ANR	898827	BreakStatement	break ;	1094:4:46839:46844	898501	6	True				
ANR	898828	Label	case CHAR_U :	1096:4:46851:46862	898501	7	True				
ANR	898829	Identifier	CHAR_U		898501	0					
ANR	898830	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) == 0 )		898501	8					
ANR	898831	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) == 0	1098:8:46926:46964	898501	0	True				
ANR	898832	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) == 0		898501	0		==			
ANR	898833	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		898501	0		&			
ANR	898834	Identifier	options		898501	0					
ANR	898835	Identifier	PCRE_JAVASCRIPT_COMPAT		898501	1					
ANR	898836	PrimaryExpression	0		898501	1					
ANR	898837	ExpressionStatement	* errorcodeptr = ERR37	1098:49:46967:46988	898501	1	True				
ANR	898838	AssignmentExpression	* errorcodeptr = ERR37		898501	0		=			
ANR	898839	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	898840	UnaryOperator	*		898501	0					
ANR	898841	Identifier	errorcodeptr		898501	1					
ANR	898842	Identifier	ERR37		898501	1					
ANR	898843	BreakStatement	break ;	1099:4:46994:46999	898501	9	True				
ANR	898844	Label	case CHAR_g :	1118:4:47836:47847	898501	10	True				
ANR	898845	Identifier	CHAR_g		898501	0					
ANR	898846	IfStatement	if ( isclass )		898501	11					
ANR	898847	Condition	isclass	1119:8:47857:47863	898501	0	True				
ANR	898848	Identifier	isclass		898501	0					
ANR	898849	BreakStatement	break ;	1119:17:47866:47871	898501	1	True				
ANR	898850	IfStatement	if ( ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE )		898501	12					
ANR	898851	Condition	ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE	1120:8:47881:47938	898501	0	True				
ANR	898852	OrExpression	ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE		898501	0		||			
ANR	898853	EqualityExpression	ptr [ 1 ] == CHAR_LESS_THAN_SIGN		898501	0		==			
ANR	898854	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898855	Identifier	ptr		898501	0					
ANR	898856	PrimaryExpression	1		898501	1					
ANR	898857	Identifier	CHAR_LESS_THAN_SIGN		898501	1					
ANR	898858	EqualityExpression	ptr [ 1 ] == CHAR_APOSTROPHE		898501	1		==			
ANR	898859	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898860	Identifier	ptr		898501	0					
ANR	898861	PrimaryExpression	1		898501	1					
ANR	898862	Identifier	CHAR_APOSTROPHE		898501	1					
ANR	898863	CompoundStatement		115:6:3892:3892	898501	1					
ANR	898864	ExpressionStatement	escape = ESC_g	1122:6:47955:47969	898501	0	True				
ANR	898865	AssignmentExpression	escape = ESC_g		898501	0		=			
ANR	898866	Identifier	escape		898501	0					
ANR	898867	Identifier	ESC_g		898501	1					
ANR	898868	BreakStatement	break ;	1123:6:47977:47982	898501	1	True				
ANR	898869	IfStatement	if ( ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET )		898501	13					
ANR	898870	Condition	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET	1128:8:48045:48077	898501	0	True				
ANR	898871	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		898501	0		==			
ANR	898872	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898873	Identifier	ptr		898501	0					
ANR	898874	PrimaryExpression	1		898501	1					
ANR	898875	Identifier	CHAR_LEFT_CURLY_BRACKET		898501	1					
ANR	898876	CompoundStatement		124:6:4039:4058	898501	1					
ANR	898877	IdentifierDeclStatement	const pcre_uchar * p ;	1130:6:48094:48113	898501	0	True				
ANR	898878	IdentifierDecl	* p		898501	0					
ANR	898879	IdentifierDeclType	const pcre_uchar *		898501	0					
ANR	898880	Identifier	p		898501	1					
ANR	898881	ForStatement	for ( p = ptr + 2 ; * p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET ; p ++ )		898501	1					
ANR	898882	ForInit	p = ptr + 2 ;	1131:11:48126:48135	898501	0	True				
ANR	898883	AssignmentExpression	p = ptr + 2		898501	0		=			
ANR	898884	Identifier	p		898501	0					
ANR	898885	AdditiveExpression	ptr + 2		898501	1		+			
ANR	898886	Identifier	ptr		898501	0					
ANR	898887	PrimaryExpression	2		898501	1					
ANR	898888	Condition	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET	1131:22:48137:48185	898501	1	True				
ANR	898889	AndExpression	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET		898501	0		&&			
ANR	898890	EqualityExpression	* p != CHAR_NULL		898501	0		!=			
ANR	898891	UnaryOperationExpression	* p		898501	0					
ANR	898892	UnaryOperator	*		898501	0					
ANR	898893	Identifier	p		898501	1					
ANR	898894	Identifier	CHAR_NULL		898501	1					
ANR	898895	EqualityExpression	* p != CHAR_RIGHT_CURLY_BRACKET		898501	1		!=			
ANR	898896	UnaryOperationExpression	* p		898501	0					
ANR	898897	UnaryOperator	*		898501	0					
ANR	898898	Identifier	p		898501	1					
ANR	898899	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	898900	PostIncDecOperationExpression	p ++	1131:73:48188:48190	898501	2	True				
ANR	898901	Identifier	p		898501	0					
ANR	898902	IncDec	++		898501	1					
ANR	898903	IfStatement	if ( * p != CHAR_MINUS && ! IS_DIGIT ( * p ) )		898501	3					
ANR	898904	Condition	* p != CHAR_MINUS && ! IS_DIGIT ( * p )	1132:12:48205:48237	898501	0	True				
ANR	898905	AndExpression	* p != CHAR_MINUS && ! IS_DIGIT ( * p )		898501	0		&&			
ANR	898906	EqualityExpression	* p != CHAR_MINUS		898501	0		!=			
ANR	898907	UnaryOperationExpression	* p		898501	0					
ANR	898908	UnaryOperator	*		898501	0					
ANR	898909	Identifier	p		898501	1					
ANR	898910	Identifier	CHAR_MINUS		898501	1					
ANR	898911	UnaryOperationExpression	! IS_DIGIT ( * p )		898501	1					
ANR	898912	UnaryOperator	!		898501	0					
ANR	898913	CallExpression	IS_DIGIT ( * p )		898501	1					
ANR	898914	Callee	IS_DIGIT		898501	0					
ANR	898915	Identifier	IS_DIGIT		898501	0					
ANR	898916	ArgumentList	* p		898501	1					
ANR	898917	Argument	* p		898501	0					
ANR	898918	UnaryOperationExpression	* p		898501	0					
ANR	898919	UnaryOperator	*		898501	0					
ANR	898920	Identifier	p		898501	1					
ANR	898921	BreakStatement	break ;	1132:47:48240:48245	898501	1	True				
ANR	898922	IfStatement	if ( * p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET )		898501	2					
ANR	898923	Condition	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET	1133:10:48257:48305	898501	0	True				
ANR	898924	AndExpression	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET		898501	0		&&			
ANR	898925	EqualityExpression	* p != CHAR_NULL		898501	0		!=			
ANR	898926	UnaryOperationExpression	* p		898501	0					
ANR	898927	UnaryOperator	*		898501	0					
ANR	898928	Identifier	p		898501	1					
ANR	898929	Identifier	CHAR_NULL		898501	1					
ANR	898930	EqualityExpression	* p != CHAR_RIGHT_CURLY_BRACKET		898501	1		!=			
ANR	898931	UnaryOperationExpression	* p		898501	0					
ANR	898932	UnaryOperator	*		898501	0					
ANR	898933	Identifier	p		898501	1					
ANR	898934	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	898935	CompoundStatement		128:8:4261:4261	898501	1					
ANR	898936	ExpressionStatement	escape = ESC_k	1135:8:48326:48340	898501	0	True				
ANR	898937	AssignmentExpression	escape = ESC_k		898501	0		=			
ANR	898938	Identifier	escape		898501	0					
ANR	898939	Identifier	ESC_k		898501	1					
ANR	898940	BreakStatement	break ;	1136:8:48350:48355	898501	1	True				
ANR	898941	ExpressionStatement	braced = TRUE	1138:6:48373:48386	898501	3	True				
ANR	898942	AssignmentExpression	braced = TRUE		898501	0		=			
ANR	898943	Identifier	braced		898501	0					
ANR	898944	Identifier	TRUE		898501	1					
ANR	898945	ExpressionStatement	ptr ++	1139:6:48394:48399	898501	4	True				
ANR	898946	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	898947	Identifier	ptr		898501	0					
ANR	898948	IncDec	++		898501	1					
ANR	898949	ElseStatement	else		898501	0					
ANR	898950	ExpressionStatement	braced = FALSE	1141:9:48418:48432	898501	0	True				
ANR	898951	AssignmentExpression	braced = FALSE		898501	0		=			
ANR	898952	Identifier	braced		898501	0					
ANR	898953	Identifier	FALSE		898501	1					
ANR	898954	IfStatement	if ( ptr [ 1 ] == CHAR_MINUS )		898501	14					
ANR	898955	Condition	ptr [ 1 ] == CHAR_MINUS	1143:8:48443:48462	898501	0	True				
ANR	898956	EqualityExpression	ptr [ 1 ] == CHAR_MINUS		898501	0		==			
ANR	898957	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898958	Identifier	ptr		898501	0					
ANR	898959	PrimaryExpression	1		898501	1					
ANR	898960	Identifier	CHAR_MINUS		898501	1					
ANR	898961	CompoundStatement		138:6:4416:4416	898501	1					
ANR	898962	ExpressionStatement	negated = TRUE	1145:6:48479:48493	898501	0	True				
ANR	898963	AssignmentExpression	negated = TRUE		898501	0		=			
ANR	898964	Identifier	negated		898501	0					
ANR	898965	Identifier	TRUE		898501	1					
ANR	898966	ExpressionStatement	ptr ++	1146:6:48501:48506	898501	1	True				
ANR	898967	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	898968	Identifier	ptr		898501	0					
ANR	898969	IncDec	++		898501	1					
ANR	898970	ElseStatement	else		898501	0					
ANR	898971	ExpressionStatement	negated = FALSE	1148:9:48525:48540	898501	0	True				
ANR	898972	AssignmentExpression	negated = FALSE		898501	0		=			
ANR	898973	Identifier	negated		898501	0					
ANR	898974	Identifier	FALSE		898501	1					
ANR	898975	ExpressionStatement	s = 0	1151:4:48623:48628	898501	15	True				
ANR	898976	AssignmentExpression	s = 0		898501	0		=			
ANR	898977	Identifier	s		898501	0					
ANR	898978	PrimaryExpression	0		898501	1					
ANR	898979	ExpressionStatement	overflow = FALSE	1152:4:48634:48650	898501	16	True				
ANR	898980	AssignmentExpression	overflow = FALSE		898501	0		=			
ANR	898981	Identifier	overflow		898501	0					
ANR	898982	Identifier	FALSE		898501	1					
ANR	898983	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		898501	17					
ANR	898984	Condition	IS_DIGIT ( ptr [ 1 ] )	1153:11:48663:48678	898501	0	True				
ANR	898985	CallExpression	IS_DIGIT ( ptr [ 1 ] )		898501	0					
ANR	898986	Callee	IS_DIGIT		898501	0					
ANR	898987	Identifier	IS_DIGIT		898501	0					
ANR	898988	ArgumentList	ptr [ 1 ]		898501	1					
ANR	898989	Argument	ptr [ 1 ]		898501	0					
ANR	898990	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	898991	Identifier	ptr		898501	0					
ANR	898992	PrimaryExpression	1		898501	1					
ANR	898993	CompoundStatement		148:6:4632:4632	898501	1					
ANR	898994	IfStatement	if ( s > INT_MAX / 10 - 1 )		898501	0					
ANR	898995	Condition	s > INT_MAX / 10 - 1	1155:10:48699:48718	898501	0	True				
ANR	898996	RelationalExpression	s > INT_MAX / 10 - 1		898501	0		>			
ANR	898997	Identifier	s		898501	0					
ANR	898998	AdditiveExpression	INT_MAX / 10 - 1		898501	1		-			
ANR	898999	MultiplicativeExpression	INT_MAX / 10		898501	0		/			
ANR	899000	Identifier	INT_MAX		898501	0					
ANR	899001	PrimaryExpression	10		898501	1					
ANR	899002	PrimaryExpression	1		898501	1					
ANR	899003	CompoundStatement		150:8:4697:4697	898501	1					
ANR	899004	ExpressionStatement	overflow = TRUE	1157:8:48762:48777	898501	0	True				
ANR	899005	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899006	Identifier	overflow		898501	0					
ANR	899007	Identifier	TRUE		898501	1					
ANR	899008	BreakStatement	break ;	1158:8:48787:48792	898501	1	True				
ANR	899009	ExpressionStatement	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )	1160:6:48810:48847	898501	1	True				
ANR	899010	AssignmentExpression	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	0		=			
ANR	899011	Identifier	s		898501	0					
ANR	899012	AdditiveExpression	s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	1		+			
ANR	899013	MultiplicativeExpression	s * 10		898501	0		*			
ANR	899014	Identifier	s		898501	0					
ANR	899015	PrimaryExpression	10		898501	1					
ANR	899016	CastExpression	( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	1					
ANR	899017	CastTarget	int		898501	0					
ANR	899018	AdditiveExpression	* ( ++ ptr ) - CHAR_0		898501	1		-			
ANR	899019	UnaryOperationExpression	* ( ++ ptr )		898501	0					
ANR	899020	UnaryOperator	*		898501	0					
ANR	899021	UnaryExpression	++ ptr		898501	1					
ANR	899022	IncDec	++		898501	0					
ANR	899023	Identifier	ptr		898501	1					
ANR	899024	Identifier	CHAR_0		898501	1					
ANR	899025	IfStatement	if ( overflow )		898501	18					
ANR	899026	Condition	overflow	1162:8:48865:48872	898501	0	True				
ANR	899027	Identifier	overflow		898501	0					
ANR	899028	CompoundStatement		157:6:4849:4849	898501	1					
ANR	899029	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		898501	0					
ANR	899030	Condition	IS_DIGIT ( ptr [ 1 ] )	1164:13:48919:48934	898501	0	True				
ANR	899031	CallExpression	IS_DIGIT ( ptr [ 1 ] )		898501	0					
ANR	899032	Callee	IS_DIGIT		898501	0					
ANR	899033	Identifier	IS_DIGIT		898501	0					
ANR	899034	ArgumentList	ptr [ 1 ]		898501	1					
ANR	899035	Argument	ptr [ 1 ]		898501	0					
ANR	899036	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899037	Identifier	ptr		898501	0					
ANR	899038	PrimaryExpression	1		898501	1					
ANR	899039	ExpressionStatement	ptr ++	1165:8:48945:48950	898501	1	True				
ANR	899040	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	899041	Identifier	ptr		898501	0					
ANR	899042	IncDec	++		898501	1					
ANR	899043	ExpressionStatement	* errorcodeptr = ERR61	1166:6:48958:48979	898501	1	True				
ANR	899044	AssignmentExpression	* errorcodeptr = ERR61		898501	0		=			
ANR	899045	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899046	UnaryOperator	*		898501	0					
ANR	899047	Identifier	errorcodeptr		898501	1					
ANR	899048	Identifier	ERR61		898501	1					
ANR	899049	BreakStatement	break ;	1167:6:48987:48992	898501	2	True				
ANR	899050	IfStatement	if ( braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET )		898501	19					
ANR	899051	Condition	braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET	1170:8:49011:49056	898501	0	True				
ANR	899052	AndExpression	braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET		898501	0		&&			
ANR	899053	Identifier	braced		898501	0					
ANR	899054	EqualityExpression	* ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET		898501	1		!=			
ANR	899055	UnaryOperationExpression	* ( ++ ptr )		898501	0					
ANR	899056	UnaryOperator	*		898501	0					
ANR	899057	UnaryExpression	++ ptr		898501	1					
ANR	899058	IncDec	++		898501	0					
ANR	899059	Identifier	ptr		898501	1					
ANR	899060	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	899061	CompoundStatement		165:6:5010:5010	898501	1					
ANR	899062	ExpressionStatement	* errorcodeptr = ERR57	1172:6:49073:49094	898501	0	True				
ANR	899063	AssignmentExpression	* errorcodeptr = ERR57		898501	0		=			
ANR	899064	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899065	UnaryOperator	*		898501	0					
ANR	899066	Identifier	errorcodeptr		898501	1					
ANR	899067	Identifier	ERR57		898501	1					
ANR	899068	BreakStatement	break ;	1173:6:49102:49107	898501	1	True				
ANR	899069	IfStatement	if ( s == 0 )		898501	20					
ANR	899070	Condition	s == 0	1176:8:49126:49131	898501	0	True				
ANR	899071	EqualityExpression	s == 0		898501	0		==			
ANR	899072	Identifier	s		898501	0					
ANR	899073	PrimaryExpression	0		898501	1					
ANR	899074	CompoundStatement		171:6:5085:5085	898501	1					
ANR	899075	ExpressionStatement	* errorcodeptr = ERR58	1178:6:49148:49169	898501	0	True				
ANR	899076	AssignmentExpression	* errorcodeptr = ERR58		898501	0		=			
ANR	899077	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899078	UnaryOperator	*		898501	0					
ANR	899079	Identifier	errorcodeptr		898501	1					
ANR	899080	Identifier	ERR58		898501	1					
ANR	899081	BreakStatement	break ;	1179:6:49177:49182	898501	1	True				
ANR	899082	IfStatement	if ( negated )		898501	21					
ANR	899083	Condition	negated	1182:8:49201:49207	898501	0	True				
ANR	899084	Identifier	negated		898501	0					
ANR	899085	CompoundStatement		177:6:5161:5161	898501	1					
ANR	899086	IfStatement	if ( s > bracount )		898501	0					
ANR	899087	Condition	s > bracount	1184:10:49228:49239	898501	0	True				
ANR	899088	RelationalExpression	s > bracount		898501	0		>			
ANR	899089	Identifier	s		898501	0					
ANR	899090	Identifier	bracount		898501	1					
ANR	899091	CompoundStatement		179:8:5195:5195	898501	1					
ANR	899092	ExpressionStatement	* errorcodeptr = ERR15	1186:8:49260:49281	898501	0	True				
ANR	899093	AssignmentExpression	* errorcodeptr = ERR15		898501	0		=			
ANR	899094	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899095	UnaryOperator	*		898501	0					
ANR	899096	Identifier	errorcodeptr		898501	1					
ANR	899097	Identifier	ERR15		898501	1					
ANR	899098	BreakStatement	break ;	1187:8:49291:49296	898501	1	True				
ANR	899099	ExpressionStatement	s = bracount - ( s - 1 )	1189:6:49314:49336	898501	1	True				
ANR	899100	AssignmentExpression	s = bracount - ( s - 1 )		898501	0		=			
ANR	899101	Identifier	s		898501	0					
ANR	899102	AdditiveExpression	bracount - ( s - 1 )		898501	1		-			
ANR	899103	Identifier	bracount		898501	0					
ANR	899104	AdditiveExpression	s - 1		898501	1		-			
ANR	899105	Identifier	s		898501	0					
ANR	899106	PrimaryExpression	1		898501	1					
ANR	899107	ExpressionStatement	escape = - s	1192:4:49351:49362	898501	22	True				
ANR	899108	AssignmentExpression	escape = - s		898501	0		=			
ANR	899109	Identifier	escape		898501	0					
ANR	899110	UnaryOperationExpression	- s		898501	1					
ANR	899111	UnaryOperator	-		898501	0					
ANR	899112	Identifier	s		898501	1					
ANR	899113	BreakStatement	break ;	1193:4:49368:49373	898501	23	True				
ANR	899114	Label	case CHAR_1 :	1211:4:50318:50329	898501	24	True				
ANR	899115	Identifier	CHAR_1		898501	0					
ANR	899116	Label	case CHAR_2 :	1211:17:50331:50342	898501	25	True				
ANR	899117	Identifier	CHAR_2		898501	0					
ANR	899118	Label	case CHAR_3 :	1211:30:50344:50355	898501	26	True				
ANR	899119	Identifier	CHAR_3		898501	0					
ANR	899120	Label	case CHAR_4 :	1211:43:50357:50368	898501	27	True				
ANR	899121	Identifier	CHAR_4		898501	0					
ANR	899122	Label	case CHAR_5 :	1211:56:50370:50381	898501	28	True				
ANR	899123	Identifier	CHAR_5		898501	0					
ANR	899124	Label	case CHAR_6 :	1212:4:50387:50398	898501	29	True				
ANR	899125	Identifier	CHAR_6		898501	0					
ANR	899126	Label	case CHAR_7 :	1212:17:50400:50411	898501	30	True				
ANR	899127	Identifier	CHAR_7		898501	0					
ANR	899128	Label	case CHAR_8 :	1212:30:50413:50424	898501	31	True				
ANR	899129	Identifier	CHAR_8		898501	0					
ANR	899130	Label	case CHAR_9 :	1212:43:50426:50437	898501	32	True				
ANR	899131	Identifier	CHAR_9		898501	0					
ANR	899132	IfStatement	if ( ! isclass )		898501	33					
ANR	899133	Condition	! isclass	1214:8:50448:50455	898501	0	True				
ANR	899134	UnaryOperationExpression	! isclass		898501	0					
ANR	899135	UnaryOperator	!		898501	0					
ANR	899136	Identifier	isclass		898501	1					
ANR	899137	CompoundStatement		209:6:6409:6409	898501	1					
ANR	899138	ExpressionStatement	oldptr = ptr	1216:6:50472:50484	898501	0	True				
ANR	899139	AssignmentExpression	oldptr = ptr		898501	0		=			
ANR	899140	Identifier	oldptr		898501	0					
ANR	899141	Identifier	ptr		898501	1					
ANR	899142	ExpressionStatement	s = ( int ) ( c - CHAR_0 )	1218:6:50570:50590	898501	1	True				
ANR	899143	AssignmentExpression	s = ( int ) ( c - CHAR_0 )		898501	0		=			
ANR	899144	Identifier	s		898501	0					
ANR	899145	CastExpression	( int ) ( c - CHAR_0 )		898501	1					
ANR	899146	CastTarget	int		898501	0					
ANR	899147	AdditiveExpression	c - CHAR_0		898501	1		-			
ANR	899148	Identifier	c		898501	0					
ANR	899149	Identifier	CHAR_0		898501	1					
ANR	899150	ExpressionStatement	overflow = FALSE	1219:6:50598:50614	898501	2	True				
ANR	899151	AssignmentExpression	overflow = FALSE		898501	0		=			
ANR	899152	Identifier	overflow		898501	0					
ANR	899153	Identifier	FALSE		898501	1					
ANR	899154	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		898501	3					
ANR	899155	Condition	IS_DIGIT ( ptr [ 1 ] )	1220:13:50629:50644	898501	0	True				
ANR	899156	CallExpression	IS_DIGIT ( ptr [ 1 ] )		898501	0					
ANR	899157	Callee	IS_DIGIT		898501	0					
ANR	899158	Identifier	IS_DIGIT		898501	0					
ANR	899159	ArgumentList	ptr [ 1 ]		898501	1					
ANR	899160	Argument	ptr [ 1 ]		898501	0					
ANR	899161	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899162	Identifier	ptr		898501	0					
ANR	899163	PrimaryExpression	1		898501	1					
ANR	899164	CompoundStatement		215:8:6600:6600	898501	1					
ANR	899165	IfStatement	if ( s > INT_MAX / 10 - 1 )		898501	0					
ANR	899166	Condition	s > INT_MAX / 10 - 1	1222:12:50669:50688	898501	0	True				
ANR	899167	RelationalExpression	s > INT_MAX / 10 - 1		898501	0		>			
ANR	899168	Identifier	s		898501	0					
ANR	899169	AdditiveExpression	INT_MAX / 10 - 1		898501	1		-			
ANR	899170	MultiplicativeExpression	INT_MAX / 10		898501	0		/			
ANR	899171	Identifier	INT_MAX		898501	0					
ANR	899172	PrimaryExpression	10		898501	1					
ANR	899173	PrimaryExpression	1		898501	1					
ANR	899174	CompoundStatement		217:10:6669:6669	898501	1					
ANR	899175	ExpressionStatement	overflow = TRUE	1224:10:50736:50751	898501	0	True				
ANR	899176	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899177	Identifier	overflow		898501	0					
ANR	899178	Identifier	TRUE		898501	1					
ANR	899179	BreakStatement	break ;	1225:10:50763:50768	898501	1	True				
ANR	899180	ExpressionStatement	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )	1227:8:50790:50827	898501	1	True				
ANR	899181	AssignmentExpression	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	0		=			
ANR	899182	Identifier	s		898501	0					
ANR	899183	AdditiveExpression	s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	1		+			
ANR	899184	MultiplicativeExpression	s * 10		898501	0		*			
ANR	899185	Identifier	s		898501	0					
ANR	899186	PrimaryExpression	10		898501	1					
ANR	899187	CastExpression	( int ) ( * ( ++ ptr ) - CHAR_0 )		898501	1					
ANR	899188	CastTarget	int		898501	0					
ANR	899189	AdditiveExpression	* ( ++ ptr ) - CHAR_0		898501	1		-			
ANR	899190	UnaryOperationExpression	* ( ++ ptr )		898501	0					
ANR	899191	UnaryOperator	*		898501	0					
ANR	899192	UnaryExpression	++ ptr		898501	1					
ANR	899193	IncDec	++		898501	0					
ANR	899194	Identifier	ptr		898501	1					
ANR	899195	Identifier	CHAR_0		898501	1					
ANR	899196	IfStatement	if ( overflow )		898501	4					
ANR	899197	Condition	overflow	1229:10:50849:50856	898501	0	True				
ANR	899198	Identifier	overflow		898501	0					
ANR	899199	CompoundStatement		224:8:6835:6835	898501	1					
ANR	899200	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		898501	0					
ANR	899201	Condition	IS_DIGIT ( ptr [ 1 ] )	1231:15:50907:50922	898501	0	True				
ANR	899202	CallExpression	IS_DIGIT ( ptr [ 1 ] )		898501	0					
ANR	899203	Callee	IS_DIGIT		898501	0					
ANR	899204	Identifier	IS_DIGIT		898501	0					
ANR	899205	ArgumentList	ptr [ 1 ]		898501	1					
ANR	899206	Argument	ptr [ 1 ]		898501	0					
ANR	899207	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899208	Identifier	ptr		898501	0					
ANR	899209	PrimaryExpression	1		898501	1					
ANR	899210	ExpressionStatement	ptr ++	1232:10:50935:50940	898501	1	True				
ANR	899211	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	899212	Identifier	ptr		898501	0					
ANR	899213	IncDec	++		898501	1					
ANR	899214	ExpressionStatement	* errorcodeptr = ERR61	1233:8:50950:50971	898501	1	True				
ANR	899215	AssignmentExpression	* errorcodeptr = ERR61		898501	0		=			
ANR	899216	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899217	UnaryOperator	*		898501	0					
ANR	899218	Identifier	errorcodeptr		898501	1					
ANR	899219	Identifier	ERR61		898501	1					
ANR	899220	BreakStatement	break ;	1234:8:50981:50986	898501	2	True				
ANR	899221	IfStatement	if ( s < 8 || s <= bracount )		898501	5					
ANR	899222	Condition	s < 8 || s <= bracount	1236:10:51008:51029	898501	0	True				
ANR	899223	OrExpression	s < 8 || s <= bracount		898501	0		||			
ANR	899224	RelationalExpression	s < 8		898501	0		<			
ANR	899225	Identifier	s		898501	0					
ANR	899226	PrimaryExpression	8		898501	1					
ANR	899227	RelationalExpression	s <= bracount		898501	1		<=			
ANR	899228	Identifier	s		898501	0					
ANR	899229	Identifier	bracount		898501	1					
ANR	899230	CompoundStatement		231:8:7017:7017	898501	1					
ANR	899231	ExpressionStatement	escape = - s	1238:8:51082:51093	898501	0	True				
ANR	899232	AssignmentExpression	escape = - s		898501	0		=			
ANR	899233	Identifier	escape		898501	0					
ANR	899234	UnaryOperationExpression	- s		898501	1					
ANR	899235	UnaryOperator	-		898501	0					
ANR	899236	Identifier	s		898501	1					
ANR	899237	BreakStatement	break ;	1239:8:51103:51108	898501	1	True				
ANR	899238	ExpressionStatement	ptr = oldptr	1241:6:51126:51138	898501	6	True				
ANR	899239	AssignmentExpression	ptr = oldptr		898501	0		=			
ANR	899240	Identifier	ptr		898501	0					
ANR	899241	Identifier	oldptr		898501	1					
ANR	899242	IfStatement	if ( ( c = * ptr ) >= CHAR_8 )		898501	34					
ANR	899243	Condition	( c = * ptr ) >= CHAR_8	1249:8:51489:51508	898501	0	True				
ANR	899244	RelationalExpression	( c = * ptr ) >= CHAR_8		898501	0		>=			
ANR	899245	AssignmentExpression	c = * ptr		898501	0		=			
ANR	899246	Identifier	c		898501	0					
ANR	899247	UnaryOperationExpression	* ptr		898501	1					
ANR	899248	UnaryOperator	*		898501	0					
ANR	899249	Identifier	ptr		898501	1					
ANR	899250	Identifier	CHAR_8		898501	1					
ANR	899251	BreakStatement	break ;	1249:30:51511:51516	898501	1	True				
ANR	899252	Label	case CHAR_0 :	1259:4:51928:51939	898501	35	True				
ANR	899253	Identifier	CHAR_0		898501	0					
ANR	899254	ExpressionStatement	c -= CHAR_0	1260:4:51945:51956	898501	36	True				
ANR	899255	AssignmentExpression	c -= CHAR_0		898501	0		-=			
ANR	899256	Identifier	c		898501	0					
ANR	899257	Identifier	CHAR_0		898501	1					
ANR	899258	WhileStatement	while ( i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7 )		898501	37					
ANR	899259	Condition	i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7	1261:10:51968:52014	898501	0	True				
ANR	899260	AndExpression	i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7		898501	0		&&			
ANR	899261	RelationalExpression	i ++ < 2		898501	0		<			
ANR	899262	PostIncDecOperationExpression	i ++		898501	0					
ANR	899263	Identifier	i		898501	0					
ANR	899264	IncDec	++		898501	1					
ANR	899265	PrimaryExpression	2		898501	1					
ANR	899266	AndExpression	ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7		898501	1		&&			
ANR	899267	RelationalExpression	ptr [ 1 ] >= CHAR_0		898501	0		>=			
ANR	899268	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899269	Identifier	ptr		898501	0					
ANR	899270	PrimaryExpression	1		898501	1					
ANR	899271	Identifier	CHAR_0		898501	1					
ANR	899272	RelationalExpression	ptr [ 1 ] <= CHAR_7		898501	1		<=			
ANR	899273	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899274	Identifier	ptr		898501	0					
ANR	899275	PrimaryExpression	1		898501	1					
ANR	899276	Identifier	CHAR_7		898501	1					
ANR	899277	ExpressionStatement	c = c * 8 + * ( ++ ptr ) - CHAR_0	1262:8:52025:52054	898501	1	True				
ANR	899278	AssignmentExpression	c = c * 8 + * ( ++ ptr ) - CHAR_0		898501	0		=			
ANR	899279	Identifier	c		898501	0					
ANR	899280	AdditiveExpression	c * 8 + * ( ++ ptr ) - CHAR_0		898501	1		+			
ANR	899281	MultiplicativeExpression	c * 8		898501	0		*			
ANR	899282	Identifier	c		898501	0					
ANR	899283	PrimaryExpression	8		898501	1					
ANR	899284	AdditiveExpression	* ( ++ ptr ) - CHAR_0		898501	1		-			
ANR	899285	UnaryOperationExpression	* ( ++ ptr )		898501	0					
ANR	899286	UnaryOperator	*		898501	0					
ANR	899287	UnaryExpression	++ ptr		898501	1					
ANR	899288	IncDec	++		898501	0					
ANR	899289	Identifier	ptr		898501	1					
ANR	899290	Identifier	CHAR_0		898501	1					
ANR	899291	IfStatement	if ( ! utf && c > 0xff )		898501	38					
ANR	899292	Condition	! utf && c > 0xff	1264:8:52085:52100	898501	0	True				
ANR	899293	AndExpression	! utf && c > 0xff		898501	0		&&			
ANR	899294	UnaryOperationExpression	! utf		898501	0					
ANR	899295	UnaryOperator	!		898501	0					
ANR	899296	Identifier	utf		898501	1					
ANR	899297	RelationalExpression	c > 0xff		898501	1		>			
ANR	899298	Identifier	c		898501	0					
ANR	899299	PrimaryExpression	0xff		898501	1					
ANR	899300	ExpressionStatement	* errorcodeptr = ERR51	1264:26:52103:52124	898501	1	True				
ANR	899301	AssignmentExpression	* errorcodeptr = ERR51		898501	0		=			
ANR	899302	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899303	UnaryOperator	*		898501	0					
ANR	899304	Identifier	errorcodeptr		898501	1					
ANR	899305	Identifier	ERR51		898501	1					
ANR	899306	BreakStatement	break ;	1266:4:52137:52142	898501	39	True				
ANR	899307	Label	case CHAR_o :	1271:4:52307:52318	898501	40	True				
ANR	899308	Identifier	CHAR_o		898501	0					
ANR	899309	IfStatement	if ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET )		898501	41					
ANR	899310	Condition	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET	1272:8:52328:52360	898501	0	True				
ANR	899311	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		898501	0		!=			
ANR	899312	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899313	Identifier	ptr		898501	0					
ANR	899314	PrimaryExpression	1		898501	1					
ANR	899315	Identifier	CHAR_LEFT_CURLY_BRACKET		898501	1					
ANR	899316	ExpressionStatement	* errorcodeptr = ERR81	1272:43:52363:52384	898501	1	True				
ANR	899317	AssignmentExpression	* errorcodeptr = ERR81		898501	0		=			
ANR	899318	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899319	UnaryOperator	*		898501	0					
ANR	899320	Identifier	errorcodeptr		898501	1					
ANR	899321	Identifier	ERR81		898501	1					
ANR	899322	ElseStatement	else		898501	0					
ANR	899323	IfStatement	if ( ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET )		898501	0					
ANR	899324	Condition	ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET	1273:8:52399:52432	898501	0	True				
ANR	899325	EqualityExpression	ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET		898501	0		==			
ANR	899326	ArrayIndexing	ptr [ 2 ]		898501	0					
ANR	899327	Identifier	ptr		898501	0					
ANR	899328	PrimaryExpression	2		898501	1					
ANR	899329	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	899330	ExpressionStatement	* errorcodeptr = ERR86	1273:44:52435:52456	898501	1	True				
ANR	899331	AssignmentExpression	* errorcodeptr = ERR86		898501	0		=			
ANR	899332	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899333	UnaryOperator	*		898501	0					
ANR	899334	Identifier	errorcodeptr		898501	1					
ANR	899335	Identifier	ERR86		898501	1					
ANR	899336	ElseStatement	else		898501	0					
ANR	899337	CompoundStatement		268:6:8414:8414	898501	0					
ANR	899338	ExpressionStatement	ptr += 2	1275:6:52477:52485	898501	0	True				
ANR	899339	AssignmentExpression	ptr += 2		898501	0		+=			
ANR	899340	Identifier	ptr		898501	0					
ANR	899341	PrimaryExpression	2		898501	1					
ANR	899342	ExpressionStatement	c = 0	1276:6:52493:52498	898501	1	True				
ANR	899343	AssignmentExpression	c = 0		898501	0		=			
ANR	899344	Identifier	c		898501	0					
ANR	899345	PrimaryExpression	0		898501	1					
ANR	899346	ExpressionStatement	overflow = FALSE	1277:6:52506:52522	898501	2	True				
ANR	899347	AssignmentExpression	overflow = FALSE		898501	0		=			
ANR	899348	Identifier	overflow		898501	0					
ANR	899349	Identifier	FALSE		898501	1					
ANR	899350	WhileStatement	while ( * ptr >= CHAR_0 && * ptr <= CHAR_7 )		898501	3					
ANR	899351	Condition	* ptr >= CHAR_0 && * ptr <= CHAR_7	1278:13:52537:52568	898501	0	True				
ANR	899352	AndExpression	* ptr >= CHAR_0 && * ptr <= CHAR_7		898501	0		&&			
ANR	899353	RelationalExpression	* ptr >= CHAR_0		898501	0		>=			
ANR	899354	UnaryOperationExpression	* ptr		898501	0					
ANR	899355	UnaryOperator	*		898501	0					
ANR	899356	Identifier	ptr		898501	1					
ANR	899357	Identifier	CHAR_0		898501	1					
ANR	899358	RelationalExpression	* ptr <= CHAR_7		898501	1		<=			
ANR	899359	UnaryOperationExpression	* ptr		898501	0					
ANR	899360	UnaryOperator	*		898501	0					
ANR	899361	Identifier	ptr		898501	1					
ANR	899362	Identifier	CHAR_7		898501	1					
ANR	899363	CompoundStatement		274:17:8543:8566	898501	1					
ANR	899364	Statement	register	1280:8:52589:52596	898501	0	True				
ANR	899365	IdentifierDeclStatement	pcre_uint32 cc = * ptr ++ ;	1280:17:52598:52621	898501	1	True				
ANR	899366	IdentifierDecl	cc = * ptr ++		898501	0					
ANR	899367	IdentifierDeclType	pcre_uint32		898501	0					
ANR	899368	Identifier	cc		898501	1					
ANR	899369	AssignmentExpression	cc = * ptr ++		898501	2		=			
ANR	899370	Identifier	cc		898501	0					
ANR	899371	UnaryOperationExpression	* ptr ++		898501	1					
ANR	899372	UnaryOperator	*		898501	0					
ANR	899373	PostIncDecOperationExpression	ptr ++		898501	1					
ANR	899374	Identifier	ptr		898501	0					
ANR	899375	IncDec	++		898501	1					
ANR	899376	IfStatement	if ( c == 0 && cc == CHAR_0 )		898501	2					
ANR	899377	Condition	c == 0 && cc == CHAR_0	1281:12:52635:52656	898501	0	True				
ANR	899378	AndExpression	c == 0 && cc == CHAR_0		898501	0		&&			
ANR	899379	EqualityExpression	c == 0		898501	0		==			
ANR	899380	Identifier	c		898501	0					
ANR	899381	PrimaryExpression	0		898501	1					
ANR	899382	EqualityExpression	cc == CHAR_0		898501	1		==			
ANR	899383	Identifier	cc		898501	0					
ANR	899384	Identifier	CHAR_0		898501	1					
ANR	899385	ContinueStatement	continue ;	1281:36:52659:52667	898501	1	True				
ANR	899386	IfStatement	if ( c >= 0x20000000l )		898501	3					
ANR	899387	Condition	c >= 0x20000000l	1283:12:52728:52743	898501	0	True				
ANR	899388	RelationalExpression	c >= 0x20000000l		898501	0		>=			
ANR	899389	Identifier	c		898501	0					
ANR	899390	PrimaryExpression	0x20000000l		898501	1					
ANR	899391	CompoundStatement		277:30:8691:8691	898501	1					
ANR	899392	ExpressionStatement	overflow = TRUE	1283:32:52748:52763	898501	0	True				
ANR	899393	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899394	Identifier	overflow		898501	0					
ANR	899395	Identifier	TRUE		898501	1					
ANR	899396	BreakStatement	break ;	1283:49:52765:52770	898501	1	True				
ANR	899397	ExpressionStatement	c = ( c << 3 ) + cc - CHAR_0	1285:8:52789:52816	898501	4	True				
ANR	899398	AssignmentExpression	c = ( c << 3 ) + cc - CHAR_0		898501	0		=			
ANR	899399	Identifier	c		898501	0					
ANR	899400	AdditiveExpression	( c << 3 ) + cc - CHAR_0		898501	1		+			
ANR	899401	ShiftExpression	c << 3		898501	0		<<			
ANR	899402	Identifier	c		898501	0					
ANR	899403	PrimaryExpression	3		898501	1					
ANR	899404	AdditiveExpression	cc - CHAR_0		898501	1		-			
ANR	899405	Identifier	cc		898501	0					
ANR	899406	Identifier	CHAR_0		898501	1					
ANR	899407	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		898501	5					
ANR	899408	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1287:12:52856:52884	898501	0	True				
ANR	899409	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		898501	0		>			
ANR	899410	Identifier	c		898501	0					
ANR	899411	ConditionalExpression	utf ? 0x10ffffU : 0xffU		898501	1					
ANR	899412	Condition	utf		898501	0					
ANR	899413	Identifier	utf		898501	0					
ANR	899414	PrimaryExpression	0x10ffffU		898501	1					
ANR	899415	PrimaryExpression	0xffU		898501	2					
ANR	899416	CompoundStatement		281:43:8832:8832	898501	1					
ANR	899417	ExpressionStatement	overflow = TRUE	1287:45:52889:52904	898501	0	True				
ANR	899418	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899419	Identifier	overflow		898501	0					
ANR	899420	Identifier	TRUE		898501	1					
ANR	899421	BreakStatement	break ;	1287:62:52906:52911	898501	1	True				
ANR	899422	IfStatement	if ( overflow )		898501	4					
ANR	899423	Condition	overflow	1294:10:53135:53142	898501	0	True				
ANR	899424	Identifier	overflow		898501	0					
ANR	899425	CompoundStatement		289:8:9098:9098	898501	1					
ANR	899426	WhileStatement	while ( * ptr >= CHAR_0 && * ptr <= CHAR_7 )		898501	0					
ANR	899427	Condition	* ptr >= CHAR_0 && * ptr <= CHAR_7	1296:15:53170:53201	898501	0	True				
ANR	899428	AndExpression	* ptr >= CHAR_0 && * ptr <= CHAR_7		898501	0		&&			
ANR	899429	RelationalExpression	* ptr >= CHAR_0		898501	0		>=			
ANR	899430	UnaryOperationExpression	* ptr		898501	0					
ANR	899431	UnaryOperator	*		898501	0					
ANR	899432	Identifier	ptr		898501	1					
ANR	899433	Identifier	CHAR_0		898501	1					
ANR	899434	RelationalExpression	* ptr <= CHAR_7		898501	1		<=			
ANR	899435	UnaryOperationExpression	* ptr		898501	0					
ANR	899436	UnaryOperator	*		898501	0					
ANR	899437	Identifier	ptr		898501	1					
ANR	899438	Identifier	CHAR_7		898501	1					
ANR	899439	ExpressionStatement	ptr ++	1296:49:53204:53209	898501	1	True				
ANR	899440	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	899441	Identifier	ptr		898501	0					
ANR	899442	IncDec	++		898501	1					
ANR	899443	ExpressionStatement	* errorcodeptr = ERR34	1297:8:53219:53240	898501	1	True				
ANR	899444	AssignmentExpression	* errorcodeptr = ERR34		898501	0		=			
ANR	899445	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899446	UnaryOperator	*		898501	0					
ANR	899447	Identifier	errorcodeptr		898501	1					
ANR	899448	Identifier	ERR34		898501	1					
ANR	899449	ElseStatement	else		898501	0					
ANR	899450	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		898501	0					
ANR	899451	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1299:15:53267:53298	898501	0	True				
ANR	899452	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		898501	0		==			
ANR	899453	UnaryOperationExpression	* ptr		898501	0					
ANR	899454	UnaryOperator	*		898501	0					
ANR	899455	Identifier	ptr		898501	1					
ANR	899456	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	899457	CompoundStatement		294:8:9254:9254	898501	1					
ANR	899458	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		898501	0					
ANR	899459	Condition	utf && c >= 0xd800 && c <= 0xdfff	1301:12:53323:53355	898501	0	True				
ANR	899460	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		898501	0		&&			
ANR	899461	Identifier	utf		898501	0					
ANR	899462	AndExpression	c >= 0xd800 && c <= 0xdfff		898501	1		&&			
ANR	899463	RelationalExpression	c >= 0xd800		898501	0		>=			
ANR	899464	Identifier	c		898501	0					
ANR	899465	PrimaryExpression	0xd800		898501	1					
ANR	899466	RelationalExpression	c <= 0xdfff		898501	1		<=			
ANR	899467	Identifier	c		898501	0					
ANR	899468	PrimaryExpression	0xdfff		898501	1					
ANR	899469	ExpressionStatement	* errorcodeptr = ERR73	1301:47:53358:53379	898501	1	True				
ANR	899470	AssignmentExpression	* errorcodeptr = ERR73		898501	0		=			
ANR	899471	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899472	UnaryOperator	*		898501	0					
ANR	899473	Identifier	errorcodeptr		898501	1					
ANR	899474	Identifier	ERR73		898501	1					
ANR	899475	ElseStatement	else		898501	0					
ANR	899476	ExpressionStatement	* errorcodeptr = ERR80	1303:11:53402:53423	898501	0	True				
ANR	899477	AssignmentExpression	* errorcodeptr = ERR80		898501	0		=			
ANR	899478	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899479	UnaryOperator	*		898501	0					
ANR	899480	Identifier	errorcodeptr		898501	1					
ANR	899481	Identifier	ERR80		898501	1					
ANR	899482	BreakStatement	break ;	1305:4:53437:53442	898501	42	True				
ANR	899483	Label	case CHAR_x :	1310:4:53584:53595	898501	43	True				
ANR	899484	Identifier	CHAR_x		898501	0					
ANR	899485	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		898501	44					
ANR	899486	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) != 0	1311:8:53605:53643	898501	0	True				
ANR	899487	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) != 0		898501	0		!=			
ANR	899488	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		898501	0		&			
ANR	899489	Identifier	options		898501	0					
ANR	899490	Identifier	PCRE_JAVASCRIPT_COMPAT		898501	1					
ANR	899491	PrimaryExpression	0		898501	1					
ANR	899492	CompoundStatement		306:6:9597:9597	898501	1					
ANR	899493	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 )		898501	0					
ANR	899494	Condition	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0	1313:10:53664:53787	898501	0	True				
ANR	899495	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		898501	0		&&			
ANR	899496	CallExpression	MAX_255 ( ptr [ 1 ] )		898501	0					
ANR	899497	Callee	MAX_255		898501	0					
ANR	899498	Identifier	MAX_255		898501	0					
ANR	899499	ArgumentList	ptr [ 1 ]		898501	1					
ANR	899500	Argument	ptr [ 1 ]		898501	0					
ANR	899501	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899502	Identifier	ptr		898501	0					
ANR	899503	PrimaryExpression	1		898501	1					
ANR	899504	AndExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	899505	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		898501	0		!=			
ANR	899506	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		898501	0		&			
ANR	899507	ArrayIndexing	digitab [ ptr [ 1 ] ]		898501	0					
ANR	899508	Identifier	digitab		898501	0					
ANR	899509	ArrayIndexing	ptr [ 1 ]		898501	1					
ANR	899510	Identifier	ptr		898501	0					
ANR	899511	PrimaryExpression	1		898501	1					
ANR	899512	Identifier	ctype_xdigit		898501	1					
ANR	899513	PrimaryExpression	0		898501	1					
ANR	899514	AndExpression	MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	899515	CallExpression	MAX_255 ( ptr [ 2 ] )		898501	0					
ANR	899516	Callee	MAX_255		898501	0					
ANR	899517	Identifier	MAX_255		898501	0					
ANR	899518	ArgumentList	ptr [ 2 ]		898501	1					
ANR	899519	Argument	ptr [ 2 ]		898501	0					
ANR	899520	ArrayIndexing	ptr [ 2 ]		898501	0					
ANR	899521	Identifier	ptr		898501	0					
ANR	899522	PrimaryExpression	2		898501	1					
ANR	899523	EqualityExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		898501	1		!=			
ANR	899524	BitAndExpression	digitab [ ptr [ 2 ] ] & ctype_xdigit		898501	0		&			
ANR	899525	ArrayIndexing	digitab [ ptr [ 2 ] ]		898501	0					
ANR	899526	Identifier	digitab		898501	0					
ANR	899527	ArrayIndexing	ptr [ 2 ]		898501	1					
ANR	899528	Identifier	ptr		898501	0					
ANR	899529	PrimaryExpression	2		898501	1					
ANR	899530	Identifier	ctype_xdigit		898501	1					
ANR	899531	PrimaryExpression	0		898501	1					
ANR	899532	CompoundStatement		309:8:9743:9743	898501	1					
ANR	899533	ExpressionStatement	c = 0	1316:8:53808:53813	898501	0	True				
ANR	899534	AssignmentExpression	c = 0		898501	0		=			
ANR	899535	Identifier	c		898501	0					
ANR	899536	PrimaryExpression	0		898501	1					
ANR	899537	ForStatement	for ( i = 0 ; i < 2 ; ++ i )		898501	1					
ANR	899538	ForInit	i = 0 ;	1317:13:53828:53833	898501	0	True				
ANR	899539	AssignmentExpression	i = 0		898501	0		=			
ANR	899540	Identifier	i		898501	0					
ANR	899541	PrimaryExpression	0		898501	1					
ANR	899542	Condition	i < 2	1317:20:53835:53839	898501	1	True				
ANR	899543	RelationalExpression	i < 2		898501	0		<			
ANR	899544	Identifier	i		898501	0					
ANR	899545	PrimaryExpression	2		898501	1					
ANR	899546	UnaryExpression	++ i	1317:27:53842:53844	898501	2	True				
ANR	899547	IncDec	++		898501	0					
ANR	899548	Identifier	i		898501	1					
ANR	899549	CompoundStatement		313:19:9823:9848	898501	3					
ANR	899550	Statement	register	1319:10:53869:53876	898501	0	True				
ANR	899551	IdentifierDeclStatement	pcre_uint32 cc = * ( ++ ptr ) ;	1319:19:53878:53903	898501	1	True				
ANR	899552	IdentifierDecl	cc = * ( ++ ptr )		898501	0					
ANR	899553	IdentifierDeclType	pcre_uint32		898501	0					
ANR	899554	Identifier	cc		898501	1					
ANR	899555	AssignmentExpression	cc = * ( ++ ptr )		898501	2		=			
ANR	899556	Identifier	cc		898501	0					
ANR	899557	UnaryOperationExpression	* ( ++ ptr )		898501	1					
ANR	899558	UnaryOperator	*		898501	0					
ANR	899559	UnaryExpression	++ ptr		898501	1					
ANR	899560	IncDec	++		898501	0					
ANR	899561	Identifier	ptr		898501	1					
ANR	899562	IfStatement	if ( cc >= CHAR_a )		898501	2					
ANR	899563	Condition	cc >= CHAR_a	1321:14:53960:53971	898501	0	True				
ANR	899564	RelationalExpression	cc >= CHAR_a		898501	0		>=			
ANR	899565	Identifier	cc		898501	0					
ANR	899566	Identifier	CHAR_a		898501	1					
ANR	899567	ExpressionStatement	cc -= 32	1321:28:53974:53982	898501	1	True				
ANR	899568	AssignmentExpression	cc -= 32		898501	0		-=			
ANR	899569	Identifier	cc		898501	0					
ANR	899570	PrimaryExpression	32		898501	1					
ANR	899571	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1322:10:54036:54095	898501	3	True				
ANR	899572	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	0		=			
ANR	899573	Identifier	c		898501	0					
ANR	899574	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		+			
ANR	899575	ShiftExpression	c << 4		898501	0		<<			
ANR	899576	Identifier	c		898501	0					
ANR	899577	PrimaryExpression	4		898501	1					
ANR	899578	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		-			
ANR	899579	Identifier	cc		898501	0					
ANR	899580	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		898501	1					
ANR	899581	Condition	cc < CHAR_A		898501	0					
ANR	899582	RelationalExpression	cc < CHAR_A		898501	0		<			
ANR	899583	Identifier	cc		898501	0					
ANR	899584	Identifier	CHAR_A		898501	1					
ANR	899585	Identifier	CHAR_0		898501	1					
ANR	899586	AdditiveExpression	CHAR_A - 10		898501	2		-			
ANR	899587	Identifier	CHAR_A		898501	0					
ANR	899588	PrimaryExpression	10		898501	1					
ANR	899589	ElseStatement	else		898501	0					
ANR	899590	CompoundStatement		333:6:10732:10732	898501	0					
ANR	899591	IfStatement	if ( ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET )		898501	0					
ANR	899592	Condition	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET	1340:10:54799:54831	898501	0	True				
ANR	899593	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		898501	0		==			
ANR	899594	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899595	Identifier	ptr		898501	0					
ANR	899596	PrimaryExpression	1		898501	1					
ANR	899597	Identifier	CHAR_LEFT_CURLY_BRACKET		898501	1					
ANR	899598	CompoundStatement		335:8:10787:10787	898501	1					
ANR	899599	ExpressionStatement	ptr += 2	1342:8:54852:54860	898501	0	True				
ANR	899600	AssignmentExpression	ptr += 2		898501	0		+=			
ANR	899601	Identifier	ptr		898501	0					
ANR	899602	PrimaryExpression	2		898501	1					
ANR	899603	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		898501	1					
ANR	899604	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1343:12:54874:54905	898501	0	True				
ANR	899605	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		898501	0		==			
ANR	899606	UnaryOperationExpression	* ptr		898501	0					
ANR	899607	UnaryOperator	*		898501	0					
ANR	899608	Identifier	ptr		898501	1					
ANR	899609	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	899610	CompoundStatement		338:10:10863:10863	898501	1					
ANR	899611	ExpressionStatement	* errorcodeptr = ERR86	1345:10:54930:54951	898501	0	True				
ANR	899612	AssignmentExpression	* errorcodeptr = ERR86		898501	0		=			
ANR	899613	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899614	UnaryOperator	*		898501	0					
ANR	899615	Identifier	errorcodeptr		898501	1					
ANR	899616	Identifier	ERR86		898501	1					
ANR	899617	BreakStatement	break ;	1346:10:54963:54968	898501	1	True				
ANR	899618	ExpressionStatement	c = 0	1348:8:54990:54995	898501	2	True				
ANR	899619	AssignmentExpression	c = 0		898501	0		=			
ANR	899620	Identifier	c		898501	0					
ANR	899621	PrimaryExpression	0		898501	1					
ANR	899622	ExpressionStatement	overflow = FALSE	1349:8:55005:55021	898501	3	True				
ANR	899623	AssignmentExpression	overflow = FALSE		898501	0		=			
ANR	899624	Identifier	overflow		898501	0					
ANR	899625	Identifier	FALSE		898501	1					
ANR	899626	WhileStatement	while ( MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0 )		898501	4					
ANR	899627	Condition	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0	1350:15:55038:55089	898501	0	True				
ANR	899628	AndExpression	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0		898501	0		&&			
ANR	899629	CallExpression	MAX_255 ( * ptr )		898501	0					
ANR	899630	Callee	MAX_255		898501	0					
ANR	899631	Identifier	MAX_255		898501	0					
ANR	899632	ArgumentList	* ptr		898501	1					
ANR	899633	Argument	* ptr		898501	0					
ANR	899634	UnaryOperationExpression	* ptr		898501	0					
ANR	899635	UnaryOperator	*		898501	0					
ANR	899636	Identifier	ptr		898501	1					
ANR	899637	EqualityExpression	( digitab [ * ptr ] & ctype_xdigit ) != 0		898501	1		!=			
ANR	899638	BitAndExpression	digitab [ * ptr ] & ctype_xdigit		898501	0		&			
ANR	899639	ArrayIndexing	digitab [ * ptr ]		898501	0					
ANR	899640	Identifier	digitab		898501	0					
ANR	899641	UnaryOperationExpression	* ptr		898501	1					
ANR	899642	UnaryOperator	*		898501	0					
ANR	899643	Identifier	ptr		898501	1					
ANR	899644	Identifier	ctype_xdigit		898501	1					
ANR	899645	PrimaryExpression	0		898501	1					
ANR	899646	CompoundStatement		346:19:11068:11091	898501	1					
ANR	899647	Statement	register	1352:10:55114:55121	898501	0	True				
ANR	899648	IdentifierDeclStatement	pcre_uint32 cc = * ptr ++ ;	1352:19:55123:55146	898501	1	True				
ANR	899649	IdentifierDecl	cc = * ptr ++		898501	0					
ANR	899650	IdentifierDeclType	pcre_uint32		898501	0					
ANR	899651	Identifier	cc		898501	1					
ANR	899652	AssignmentExpression	cc = * ptr ++		898501	2		=			
ANR	899653	Identifier	cc		898501	0					
ANR	899654	UnaryOperationExpression	* ptr ++		898501	1					
ANR	899655	UnaryOperator	*		898501	0					
ANR	899656	PostIncDecOperationExpression	ptr ++		898501	1					
ANR	899657	Identifier	ptr		898501	0					
ANR	899658	IncDec	++		898501	1					
ANR	899659	IfStatement	if ( c == 0 && cc == CHAR_0 )		898501	2					
ANR	899660	Condition	c == 0 && cc == CHAR_0	1353:14:55162:55183	898501	0	True				
ANR	899661	AndExpression	c == 0 && cc == CHAR_0		898501	0		&&			
ANR	899662	EqualityExpression	c == 0		898501	0		==			
ANR	899663	Identifier	c		898501	0					
ANR	899664	PrimaryExpression	0		898501	1					
ANR	899665	EqualityExpression	cc == CHAR_0		898501	1		==			
ANR	899666	Identifier	cc		898501	0					
ANR	899667	Identifier	CHAR_0		898501	1					
ANR	899668	ContinueStatement	continue ;	1353:38:55186:55194	898501	1	True				
ANR	899669	IfStatement	if ( c >= 0x10000000l )		898501	3					
ANR	899670	Condition	c >= 0x10000000l	1356:14:55258:55273	898501	0	True				
ANR	899671	RelationalExpression	c >= 0x10000000l		898501	0		>=			
ANR	899672	Identifier	c		898501	0					
ANR	899673	PrimaryExpression	0x10000000l		898501	1					
ANR	899674	CompoundStatement		350:32:11221:11221	898501	1					
ANR	899675	ExpressionStatement	overflow = TRUE	1356:34:55278:55293	898501	0	True				
ANR	899676	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899677	Identifier	overflow		898501	0					
ANR	899678	Identifier	TRUE		898501	1					
ANR	899679	BreakStatement	break ;	1356:51:55295:55300	898501	1	True				
ANR	899680	IfStatement	if ( cc >= CHAR_a )		898501	4					
ANR	899681	Condition	cc >= CHAR_a	1360:14:55367:55378	898501	0	True				
ANR	899682	RelationalExpression	cc >= CHAR_a		898501	0		>=			
ANR	899683	Identifier	cc		898501	0					
ANR	899684	Identifier	CHAR_a		898501	1					
ANR	899685	ExpressionStatement	cc -= 32	1360:28:55381:55389	898501	1	True				
ANR	899686	AssignmentExpression	cc -= 32		898501	0		-=			
ANR	899687	Identifier	cc		898501	0					
ANR	899688	PrimaryExpression	32		898501	1					
ANR	899689	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1361:10:55443:55502	898501	5	True				
ANR	899690	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	0		=			
ANR	899691	Identifier	c		898501	0					
ANR	899692	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		+			
ANR	899693	ShiftExpression	c << 4		898501	0		<<			
ANR	899694	Identifier	c		898501	0					
ANR	899695	PrimaryExpression	4		898501	1					
ANR	899696	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		-			
ANR	899697	Identifier	cc		898501	0					
ANR	899698	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		898501	1					
ANR	899699	Condition	cc < CHAR_A		898501	0					
ANR	899700	RelationalExpression	cc < CHAR_A		898501	0		<			
ANR	899701	Identifier	cc		898501	0					
ANR	899702	Identifier	CHAR_A		898501	1					
ANR	899703	Identifier	CHAR_0		898501	1					
ANR	899704	AdditiveExpression	CHAR_A - 10		898501	2		-			
ANR	899705	Identifier	CHAR_A		898501	0					
ANR	899706	PrimaryExpression	10		898501	1					
ANR	899707	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		898501	6					
ANR	899708	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1368:14:55743:55771	898501	0	True				
ANR	899709	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		898501	0		>			
ANR	899710	Identifier	c		898501	0					
ANR	899711	ConditionalExpression	utf ? 0x10ffffU : 0xffU		898501	1					
ANR	899712	Condition	utf		898501	0					
ANR	899713	Identifier	utf		898501	0					
ANR	899714	PrimaryExpression	0x10ffffU		898501	1					
ANR	899715	PrimaryExpression	0xffU		898501	2					
ANR	899716	CompoundStatement		362:45:11719:11719	898501	1					
ANR	899717	ExpressionStatement	overflow = TRUE	1368:47:55776:55791	898501	0	True				
ANR	899718	AssignmentExpression	overflow = TRUE		898501	0		=			
ANR	899719	Identifier	overflow		898501	0					
ANR	899720	Identifier	TRUE		898501	1					
ANR	899721	BreakStatement	break ;	1368:64:55793:55798	898501	1	True				
ANR	899722	IfStatement	if ( overflow )		898501	5					
ANR	899723	Condition	overflow	1376:12:56031:56038	898501	0	True				
ANR	899724	Identifier	overflow		898501	0					
ANR	899725	CompoundStatement		371:10:11996:11996	898501	1					
ANR	899726	WhileStatement	while ( MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0 )		898501	0					
ANR	899727	Condition	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0	1378:17:56070:56121	898501	0	True				
ANR	899728	AndExpression	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0		898501	0		&&			
ANR	899729	CallExpression	MAX_255 ( * ptr )		898501	0					
ANR	899730	Callee	MAX_255		898501	0					
ANR	899731	Identifier	MAX_255		898501	0					
ANR	899732	ArgumentList	* ptr		898501	1					
ANR	899733	Argument	* ptr		898501	0					
ANR	899734	UnaryOperationExpression	* ptr		898501	0					
ANR	899735	UnaryOperator	*		898501	0					
ANR	899736	Identifier	ptr		898501	1					
ANR	899737	EqualityExpression	( digitab [ * ptr ] & ctype_xdigit ) != 0		898501	1		!=			
ANR	899738	BitAndExpression	digitab [ * ptr ] & ctype_xdigit		898501	0		&			
ANR	899739	ArrayIndexing	digitab [ * ptr ]		898501	0					
ANR	899740	Identifier	digitab		898501	0					
ANR	899741	UnaryOperationExpression	* ptr		898501	1					
ANR	899742	UnaryOperator	*		898501	0					
ANR	899743	Identifier	ptr		898501	1					
ANR	899744	Identifier	ctype_xdigit		898501	1					
ANR	899745	PrimaryExpression	0		898501	1					
ANR	899746	ExpressionStatement	ptr ++	1378:71:56124:56129	898501	1	True				
ANR	899747	PostIncDecOperationExpression	ptr ++		898501	0					
ANR	899748	Identifier	ptr		898501	0					
ANR	899749	IncDec	++		898501	1					
ANR	899750	ExpressionStatement	* errorcodeptr = ERR34	1379:10:56141:56162	898501	1	True				
ANR	899751	AssignmentExpression	* errorcodeptr = ERR34		898501	0		=			
ANR	899752	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899753	UnaryOperator	*		898501	0					
ANR	899754	Identifier	errorcodeptr		898501	1					
ANR	899755	Identifier	ERR34		898501	1					
ANR	899756	ElseStatement	else		898501	0					
ANR	899757	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		898501	0					
ANR	899758	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1382:17:56194:56225	898501	0	True				
ANR	899759	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		898501	0		==			
ANR	899760	UnaryOperationExpression	* ptr		898501	0					
ANR	899761	UnaryOperator	*		898501	0					
ANR	899762	Identifier	ptr		898501	1					
ANR	899763	Identifier	CHAR_RIGHT_CURLY_BRACKET		898501	1					
ANR	899764	CompoundStatement		377:10:12183:12183	898501	1					
ANR	899765	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		898501	0					
ANR	899766	Condition	utf && c >= 0xd800 && c <= 0xdfff	1384:14:56254:56286	898501	0	True				
ANR	899767	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		898501	0		&&			
ANR	899768	Identifier	utf		898501	0					
ANR	899769	AndExpression	c >= 0xd800 && c <= 0xdfff		898501	1		&&			
ANR	899770	RelationalExpression	c >= 0xd800		898501	0		>=			
ANR	899771	Identifier	c		898501	0					
ANR	899772	PrimaryExpression	0xd800		898501	1					
ANR	899773	RelationalExpression	c <= 0xdfff		898501	1		<=			
ANR	899774	Identifier	c		898501	0					
ANR	899775	PrimaryExpression	0xdfff		898501	1					
ANR	899776	ExpressionStatement	* errorcodeptr = ERR73	1384:49:56289:56310	898501	1	True				
ANR	899777	AssignmentExpression	* errorcodeptr = ERR73		898501	0		=			
ANR	899778	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899779	UnaryOperator	*		898501	0					
ANR	899780	Identifier	errorcodeptr		898501	1					
ANR	899781	Identifier	ERR73		898501	1					
ANR	899782	ElseStatement	else		898501	0					
ANR	899783	ExpressionStatement	* errorcodeptr = ERR79	1392:13:56610:56631	898501	0	True				
ANR	899784	AssignmentExpression	* errorcodeptr = ERR79		898501	0		=			
ANR	899785	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899786	UnaryOperator	*		898501	0					
ANR	899787	Identifier	errorcodeptr		898501	1					
ANR	899788	Identifier	ERR79		898501	1					
ANR	899789	ElseStatement	else		898501	0					
ANR	899790	CompoundStatement		392:8:12720:12720	898501	0					
ANR	899791	ExpressionStatement	c = 0	1399:8:56785:56790	898501	0	True				
ANR	899792	AssignmentExpression	c = 0		898501	0		=			
ANR	899793	Identifier	c		898501	0					
ANR	899794	PrimaryExpression	0		898501	1					
ANR	899795	WhileStatement	while ( i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 )		898501	1					
ANR	899796	Condition	i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0	1400:15:56807:56873	898501	0	True				
ANR	899797	AndExpression	i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		898501	0		&&			
ANR	899798	RelationalExpression	i ++ < 2		898501	0		<			
ANR	899799	PostIncDecOperationExpression	i ++		898501	0					
ANR	899800	Identifier	i		898501	0					
ANR	899801	IncDec	++		898501	1					
ANR	899802	PrimaryExpression	2		898501	1					
ANR	899803	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		898501	1		&&			
ANR	899804	CallExpression	MAX_255 ( ptr [ 1 ] )		898501	0					
ANR	899805	Callee	MAX_255		898501	0					
ANR	899806	Identifier	MAX_255		898501	0					
ANR	899807	ArgumentList	ptr [ 1 ]		898501	1					
ANR	899808	Argument	ptr [ 1 ]		898501	0					
ANR	899809	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899810	Identifier	ptr		898501	0					
ANR	899811	PrimaryExpression	1		898501	1					
ANR	899812	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		898501	1		!=			
ANR	899813	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		898501	0		&			
ANR	899814	ArrayIndexing	digitab [ ptr [ 1 ] ]		898501	0					
ANR	899815	Identifier	digitab		898501	0					
ANR	899816	ArrayIndexing	ptr [ 1 ]		898501	1					
ANR	899817	Identifier	ptr		898501	0					
ANR	899818	PrimaryExpression	1		898501	1					
ANR	899819	Identifier	ctype_xdigit		898501	1					
ANR	899820	PrimaryExpression	0		898501	1					
ANR	899821	CompoundStatement		396:10:12843:12857	898501	1					
ANR	899822	IdentifierDeclStatement	pcre_uint32 cc ;	1402:10:56898:56912	898501	0	True				
ANR	899823	IdentifierDecl	cc		898501	0					
ANR	899824	IdentifierDeclType	pcre_uint32		898501	0					
ANR	899825	Identifier	cc		898501	1					
ANR	899826	ExpressionStatement	cc = * ( ++ ptr )	1403:10:56981:56994	898501	1	True				
ANR	899827	AssignmentExpression	cc = * ( ++ ptr )		898501	0		=			
ANR	899828	Identifier	cc		898501	0					
ANR	899829	UnaryOperationExpression	* ( ++ ptr )		898501	1					
ANR	899830	UnaryOperator	*		898501	0					
ANR	899831	UnaryExpression	++ ptr		898501	1					
ANR	899832	IncDec	++		898501	0					
ANR	899833	Identifier	ptr		898501	1					
ANR	899834	IfStatement	if ( cc >= CHAR_a )		898501	2					
ANR	899835	Condition	cc >= CHAR_a	1405:14:57102:57113	898501	0	True				
ANR	899836	RelationalExpression	cc >= CHAR_a		898501	0		>=			
ANR	899837	Identifier	cc		898501	0					
ANR	899838	Identifier	CHAR_a		898501	1					
ANR	899839	ExpressionStatement	cc -= 32	1405:28:57116:57124	898501	1	True				
ANR	899840	AssignmentExpression	cc -= 32		898501	0		-=			
ANR	899841	Identifier	cc		898501	0					
ANR	899842	PrimaryExpression	32		898501	1					
ANR	899843	ExpressionStatement	c = c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1406:10:57177:57234	898501	3	True				
ANR	899844	AssignmentExpression	c = c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	0		=			
ANR	899845	Identifier	c		898501	0					
ANR	899846	AdditiveExpression	c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		+			
ANR	899847	MultiplicativeExpression	c * 16		898501	0		*			
ANR	899848	Identifier	c		898501	0					
ANR	899849	PrimaryExpression	16		898501	1					
ANR	899850	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		898501	1		-			
ANR	899851	Identifier	cc		898501	0					
ANR	899852	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		898501	1					
ANR	899853	Condition	cc < CHAR_A		898501	0					
ANR	899854	RelationalExpression	cc < CHAR_A		898501	0		<			
ANR	899855	Identifier	cc		898501	0					
ANR	899856	Identifier	CHAR_A		898501	1					
ANR	899857	Identifier	CHAR_0		898501	1					
ANR	899858	AdditiveExpression	CHAR_A - 10		898501	2		-			
ANR	899859	Identifier	CHAR_A		898501	0					
ANR	899860	PrimaryExpression	10		898501	1					
ANR	899861	BreakStatement	break ;	1414:4:57535:57540	898501	45	True				
ANR	899862	Label	case CHAR_c :	1421:4:57849:57860	898501	46	True				
ANR	899863	Identifier	CHAR_c		898501	0					
ANR	899864	ExpressionStatement	c = * ( ++ ptr )	1422:4:57866:57878	898501	47	True				
ANR	899865	AssignmentExpression	c = * ( ++ ptr )		898501	0		=			
ANR	899866	Identifier	c		898501	0					
ANR	899867	UnaryOperationExpression	* ( ++ ptr )		898501	1					
ANR	899868	UnaryOperator	*		898501	0					
ANR	899869	UnaryExpression	++ ptr		898501	1					
ANR	899870	IncDec	++		898501	0					
ANR	899871	Identifier	ptr		898501	1					
ANR	899872	IfStatement	if ( c == CHAR_NULL )		898501	48					
ANR	899873	Condition	c == CHAR_NULL	1423:8:57888:57901	898501	0	True				
ANR	899874	EqualityExpression	c == CHAR_NULL		898501	0		==			
ANR	899875	Identifier	c		898501	0					
ANR	899876	Identifier	CHAR_NULL		898501	1					
ANR	899877	CompoundStatement		418:6:13855:13855	898501	1					
ANR	899878	ExpressionStatement	* errorcodeptr = ERR2	1425:6:57918:57938	898501	0	True				
ANR	899879	AssignmentExpression	* errorcodeptr = ERR2		898501	0		=			
ANR	899880	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899881	UnaryOperator	*		898501	0					
ANR	899882	Identifier	errorcodeptr		898501	1					
ANR	899883	Identifier	ERR2		898501	1					
ANR	899884	BreakStatement	break ;	1426:6:57946:57951	898501	1	True				
ANR	899885	IfStatement	if ( c > 127 )		898501	49					
ANR	899886	Condition	c > 127	1429:8:58012:58018	898501	0	True				
ANR	899887	RelationalExpression	c > 127		898501	0		>			
ANR	899888	Identifier	c		898501	0					
ANR	899889	PrimaryExpression	127		898501	1					
ANR	899890	CompoundStatement		424:6:14017:14017	898501	1					
ANR	899891	ExpressionStatement	* errorcodeptr = ERR68	1431:6:58080:58101	898501	0	True				
ANR	899892	AssignmentExpression	* errorcodeptr = ERR68		898501	0		=			
ANR	899893	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899894	UnaryOperator	*		898501	0					
ANR	899895	Identifier	errorcodeptr		898501	1					
ANR	899896	Identifier	ERR68		898501	1					
ANR	899897	BreakStatement	break ;	1432:6:58109:58114	898501	1	True				
ANR	899898	IfStatement	if ( c >= CHAR_a && c <= CHAR_z )		898501	50					
ANR	899899	Condition	c >= CHAR_a && c <= CHAR_z	1434:8:58132:58157	898501	0	True				
ANR	899900	AndExpression	c >= CHAR_a && c <= CHAR_z		898501	0		&&			
ANR	899901	RelationalExpression	c >= CHAR_a		898501	0		>=			
ANR	899902	Identifier	c		898501	0					
ANR	899903	Identifier	CHAR_a		898501	1					
ANR	899904	RelationalExpression	c <= CHAR_z		898501	1		<=			
ANR	899905	Identifier	c		898501	0					
ANR	899906	Identifier	CHAR_z		898501	1					
ANR	899907	ExpressionStatement	c -= 32	1434:36:58160:58167	898501	1	True				
ANR	899908	AssignmentExpression	c -= 32		898501	0		-=			
ANR	899909	Identifier	c		898501	0					
ANR	899910	PrimaryExpression	32		898501	1					
ANR	899911	ExpressionStatement	c ^= 0x40	1435:4:58173:58182	898501	51	True				
ANR	899912	AssignmentExpression	c ^= 0x40		898501	0		^=			
ANR	899913	Identifier	c		898501	0					
ANR	899914	PrimaryExpression	0x40		898501	1					
ANR	899915	BreakStatement	break ;	1449:4:58535:58540	898501	52	True				
ANR	899916	Label	default :	1457:4:58906:58913	898501	53	True				
ANR	899917	Identifier	default		898501	0					
ANR	899918	IfStatement	if ( ( options & PCRE_EXTRA ) != 0 )		898501	54					
ANR	899919	Condition	( options & PCRE_EXTRA ) != 0	1458:8:58923:58949	898501	0	True				
ANR	899920	EqualityExpression	( options & PCRE_EXTRA ) != 0		898501	0		!=			
ANR	899921	BitAndExpression	options & PCRE_EXTRA		898501	0		&			
ANR	899922	Identifier	options		898501	0					
ANR	899923	Identifier	PCRE_EXTRA		898501	1					
ANR	899924	PrimaryExpression	0		898501	1					
ANR	899925	SwitchStatement	switch ( c )		898501	1					
ANR	899926	Condition	c	1458:44:58959:58959	898501	0	True				
ANR	899927	Identifier	c		898501	0					
ANR	899928	CompoundStatement		453:6:14913:14913	898501	1					
ANR	899929	Label	default :	1460:6:58976:58983	898501	0	True				
ANR	899930	Identifier	default		898501	0					
ANR	899931	ExpressionStatement	* errorcodeptr = ERR3	1461:6:58991:59011	898501	1	True				
ANR	899932	AssignmentExpression	* errorcodeptr = ERR3		898501	0		=			
ANR	899933	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899934	UnaryOperator	*		898501	0					
ANR	899935	Identifier	errorcodeptr		898501	1					
ANR	899936	Identifier	ERR3		898501	1					
ANR	899937	BreakStatement	break ;	1462:6:59019:59024	898501	2	True				
ANR	899938	BreakStatement	break ;	1464:4:59038:59043	898501	55	True				
ANR	899939	IfStatement	if ( escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 ) )		898501	8					
ANR	899940	Condition	escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )	1472:4:59239:59324	898501	0	True				
ANR	899941	AndExpression	escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )		898501	0		&&			
ANR	899942	EqualityExpression	escape == ESC_N		898501	0		==			
ANR	899943	Identifier	escape		898501	0					
ANR	899944	Identifier	ESC_N		898501	1					
ANR	899945	AndExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )		898501	1		&&			
ANR	899946	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		898501	0		==			
ANR	899947	ArrayIndexing	ptr [ 1 ]		898501	0					
ANR	899948	Identifier	ptr		898501	0					
ANR	899949	PrimaryExpression	1		898501	1					
ANR	899950	Identifier	CHAR_LEFT_CURLY_BRACKET		898501	1					
ANR	899951	UnaryOperationExpression	! is_counted_repeat ( ptr + 2 )		898501	1					
ANR	899952	UnaryOperator	!		898501	0					
ANR	899953	CallExpression	is_counted_repeat ( ptr + 2 )		898501	1					
ANR	899954	Callee	is_counted_repeat		898501	0					
ANR	899955	Identifier	is_counted_repeat		898501	0					
ANR	899956	ArgumentList	ptr + 2		898501	1					
ANR	899957	Argument	ptr + 2		898501	0					
ANR	899958	AdditiveExpression	ptr + 2		898501	0		+			
ANR	899959	Identifier	ptr		898501	0					
ANR	899960	PrimaryExpression	2		898501	1					
ANR	899961	ExpressionStatement	* errorcodeptr = ERR37	1474:2:59329:59350	898501	1	True				
ANR	899962	AssignmentExpression	* errorcodeptr = ERR37		898501	0		=			
ANR	899963	UnaryOperationExpression	* errorcodeptr		898501	0					
ANR	899964	UnaryOperator	*		898501	0					
ANR	899965	Identifier	errorcodeptr		898501	1					
ANR	899966	Identifier	ERR37		898501	1					
ANR	899967	IfStatement	if ( ( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w )		898501	9					
ANR	899968	Condition	( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w	1478:4:59417:59479	898501	0	True				
ANR	899969	AndExpression	( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w		898501	0		&&			
ANR	899970	EqualityExpression	( options & PCRE_UCP ) != 0		898501	0		!=			
ANR	899971	BitAndExpression	options & PCRE_UCP		898501	0		&			
ANR	899972	Identifier	options		898501	0					
ANR	899973	Identifier	PCRE_UCP		898501	1					
ANR	899974	PrimaryExpression	0		898501	1					
ANR	899975	AndExpression	escape >= ESC_D && escape <= ESC_w		898501	1		&&			
ANR	899976	RelationalExpression	escape >= ESC_D		898501	0		>=			
ANR	899977	Identifier	escape		898501	0					
ANR	899978	Identifier	ESC_D		898501	1					
ANR	899979	RelationalExpression	escape <= ESC_w		898501	1		<=			
ANR	899980	Identifier	escape		898501	0					
ANR	899981	Identifier	ESC_w		898501	1					
ANR	899982	ExpressionStatement	escape += ( ESC_DU - ESC_D )	1479:2:59484:59510	898501	1	True				
ANR	899983	AssignmentExpression	escape += ( ESC_DU - ESC_D )		898501	0		+=			
ANR	899984	Identifier	escape		898501	0					
ANR	899985	AdditiveExpression	ESC_DU - ESC_D		898501	1		-			
ANR	899986	Identifier	ESC_DU		898501	0					
ANR	899987	Identifier	ESC_D		898501	1					
ANR	899988	ExpressionStatement	* ptrptr = ptr	1483:0:59577:59590	898501	10	True				
ANR	899989	AssignmentExpression	* ptrptr = ptr		898501	0		=			
ANR	899990	UnaryOperationExpression	* ptrptr		898501	0					
ANR	899991	UnaryOperator	*		898501	0					
ANR	899992	Identifier	ptrptr		898501	1					
ANR	899993	Identifier	ptr		898501	1					
ANR	899994	ExpressionStatement	* chptr = c	1484:0:59592:59602	898501	11	True				
ANR	899995	AssignmentExpression	* chptr = c		898501	0		=			
ANR	899996	UnaryOperationExpression	* chptr		898501	0					
ANR	899997	UnaryOperator	*		898501	0					
ANR	899998	Identifier	chptr		898501	1					
ANR	899999	Identifier	c		898501	1					
ANR	900000	ReturnStatement	return escape ;	1485:0:59604:59617	898501	12	True				
ANR	900001	Identifier	escape		898501	0					
ANR	900002	ReturnType	static int		898501	1					
ANR	900003	Identifier	check_escape		898501	2					
ANR	900004	ParameterList	"const pcre_uchar * * ptrptr , pcre_uint32 * chptr , int * errorcodeptr , int bracount , int options , BOOL isclass"		898501	3					
ANR	900005	Parameter	const pcre_uchar * * ptrptr	1005:13:43945:43969	898501	0	True				
ANR	900006	ParameterType	const pcre_uchar * *		898501	0					
ANR	900007	Identifier	ptrptr		898501	1					
ANR	900008	Parameter	pcre_uint32 * chptr	1005:40:43972:43989	898501	1	True				
ANR	900009	ParameterType	pcre_uint32 *		898501	0					
ANR	900010	Identifier	chptr		898501	1					
ANR	900011	Parameter	int * errorcodeptr	1005:60:43992:44008	898501	2	True				
ANR	900012	ParameterType	int *		898501	0					
ANR	900013	Identifier	errorcodeptr		898501	1					
ANR	900014	Parameter	int bracount	1006:2:44013:44024	898501	3	True				
ANR	900015	ParameterType	int		898501	0					
ANR	900016	Identifier	bracount		898501	1					
ANR	900017	Parameter	int options	1006:16:44027:44037	898501	4	True				
ANR	900018	ParameterType	int		898501	0					
ANR	900019	Identifier	options		898501	1					
ANR	900020	Parameter	BOOL isclass	1006:29:44040:44051	898501	5	True				
ANR	900021	ParameterType	BOOL		898501	0					
ANR	900022	Identifier	isclass		898501	1					
ANR	900023	CFGEntryNode	ENTRY		898501		True				
ANR	900024	CFGExitNode	EXIT		898501		True				
ANR	900025	Symbol	negated		898501						
ANR	900026	Symbol	ERR81		898501						
ANR	900027	Symbol	ESC_g		898501						
ANR	900028	Symbol	* escapes		898501						
ANR	900029	Symbol	ERR80		898501						
ANR	900030	Symbol	overflow		898501						
ANR	900031	Symbol	ERR73		898501						
ANR	900032	Symbol	ERR34		898501						
ANR	900033	Symbol	ERR79		898501						
ANR	900034	Symbol	ERR76		898501						
ANR	900035	Symbol	ESC_N		898501						
ANR	900036	Symbol	options		898501						
ANR	900037	Symbol	* ptr		898501						
ANR	900038	Symbol	* ptrptr		898501						
ANR	900039	Symbol	ERR37		898501						
ANR	900040	Symbol	* CHAR_0		898501						
ANR	900041	Symbol	escapes		898501						
ANR	900042	Symbol	utf		898501						
ANR	900043	Symbol	TRUE		898501						
ANR	900044	Symbol	ESC_D		898501						
ANR	900045	Symbol	ERR1		898501						
ANR	900046	Symbol	PCRE_UCP		898501						
ANR	900047	Symbol	ERR2		898501						
ANR	900048	Symbol	ctype_xdigit		898501						
ANR	900049	Symbol	ERR3		898501						
ANR	900050	Symbol	CHAR_NULL		898501						
ANR	900051	Symbol	CHAR_RIGHT_CURLY_BRACKET		898501						
ANR	900052	Symbol	ERR61		898501						
ANR	900053	Symbol	CHAR_LEFT_CURLY_BRACKET		898501						
ANR	900054	Symbol	ERR68		898501						
ANR	900055	Symbol	CHAR_LESS_THAN_SIGN		898501						
ANR	900056	Symbol	CHAR_APOSTROPHE		898501						
ANR	900057	Symbol	CHAR_z		898501						
ANR	900058	Symbol	braced		898501						
ANR	900059	Symbol	* digitab		898501						
ANR	900060	Symbol	* * ptr		898501						
ANR	900061	Symbol	PCRE_EXTRA		898501						
ANR	900062	Symbol	chptr		898501						
ANR	900063	Symbol	CHAR_a		898501						
ANR	900064	Symbol	ERR51		898501						
ANR	900065	Symbol	ESC_DU		898501						
ANR	900066	Symbol	ERR57		898501						
ANR	900067	Symbol	* ( ++ ptr )		898501						
ANR	900068	Symbol	INT_MAX		898501						
ANR	900069	Symbol	ERR58		898501						
ANR	900070	Symbol	ERR15		898501						
ANR	900071	Symbol	escape		898501						
ANR	900072	Symbol	isclass		898501						
ANR	900073	Symbol	cc		898501						
ANR	900074	Symbol	c		898501						
ANR	900075	Symbol	is_counted_repeat		898501						
ANR	900076	Symbol	CHAR_7		898501						
ANR	900077	Symbol	CHAR_8		898501						
ANR	900078	Symbol	* ptr ++		898501						
ANR	900079	Symbol	i		898501						
ANR	900080	Symbol	CHAR_0		898501						
ANR	900081	Symbol	* c		898501						
ANR	900082	Symbol	oldptr		898501						
ANR	900083	Symbol	errorcodeptr		898501						
ANR	900084	Symbol	PCRE_JAVASCRIPT_COMPAT		898501						
ANR	900085	Symbol	ptr		898501						
ANR	900086	Symbol	IS_DIGIT		898501						
ANR	900087	Symbol	p		898501						
ANR	900088	Symbol	ERR86		898501						
ANR	900089	Symbol	CHAR_A		898501						
ANR	900090	Symbol	ESC_k		898501						
ANR	900091	Symbol	s		898501						
ANR	900092	Symbol	* errorcodeptr		898501						
ANR	900093	Symbol	ptrptr		898501						
ANR	900094	Symbol	digitab		898501						
ANR	900095	Symbol	* chptr		898501						
ANR	900096	Symbol	bracount		898501						
ANR	900097	Symbol	CHAR_MINUS		898501						
ANR	900098	Symbol	MAX_255		898501						
ANR	900099	Symbol	* p		898501						
ANR	900100	Symbol	FALSE		898501						
ANR	900101	Symbol	PCRE_UTF8		898501						
ANR	900102	Symbol	ESC_w		898501						
ANR	900103	Function	get_ucp	1510:0:60484:61877							
ANR	900104	FunctionDef	"get_ucp (const pcre_uchar * * ptrptr , BOOL * negptr , unsigned int * ptypeptr , unsigned int * pdataptr , int * errorcodeptr)"		900103	0					
ANR	900105	CompoundStatement		1513:0:60614:61877	900103	0					
ANR	900106	IdentifierDeclStatement	pcre_uchar c ;	1514:0:60616:60628	900103	0	True				
ANR	900107	IdentifierDecl	c		900103	0					
ANR	900108	IdentifierDeclType	pcre_uchar		900103	0					
ANR	900109	Identifier	c		900103	1					
ANR	900110	IdentifierDeclStatement	"int i , bot , top ;"	1515:0:60630:60645	900103	1	True				
ANR	900111	IdentifierDecl	i		900103	0					
ANR	900112	IdentifierDeclType	int		900103	0					
ANR	900113	Identifier	i		900103	1					
ANR	900114	IdentifierDecl	bot		900103	1					
ANR	900115	IdentifierDeclType	int		900103	0					
ANR	900116	Identifier	bot		900103	1					
ANR	900117	IdentifierDecl	top		900103	2					
ANR	900118	IdentifierDeclType	int		900103	0					
ANR	900119	Identifier	top		900103	1					
ANR	900120	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	1516:0:60647:60678	900103	2	True				
ANR	900121	IdentifierDecl	* ptr = * ptrptr		900103	0					
ANR	900122	IdentifierDeclType	const pcre_uchar *		900103	0					
ANR	900123	Identifier	ptr		900103	1					
ANR	900124	AssignmentExpression	* ptr = * ptrptr		900103	2		=			
ANR	900125	Identifier	ptr		900103	0					
ANR	900126	UnaryOperationExpression	* ptrptr		900103	1					
ANR	900127	UnaryOperator	*		900103	0					
ANR	900128	Identifier	ptrptr		900103	1					
ANR	900129	IdentifierDeclStatement	pcre_uchar name [ 32 ] ;	1517:0:60680:60699	900103	3	True				
ANR	900130	IdentifierDecl	name [ 32 ]		900103	0					
ANR	900131	IdentifierDeclType	pcre_uchar [ 32 ]		900103	0					
ANR	900132	Identifier	name		900103	1					
ANR	900133	PrimaryExpression	32		900103	2					
ANR	900134	ExpressionStatement	c = * ( ++ ptr )	1519:0:60702:60714	900103	4	True				
ANR	900135	AssignmentExpression	c = * ( ++ ptr )		900103	0		=			
ANR	900136	Identifier	c		900103	0					
ANR	900137	UnaryOperationExpression	* ( ++ ptr )		900103	1					
ANR	900138	UnaryOperator	*		900103	0					
ANR	900139	UnaryExpression	++ ptr		900103	1					
ANR	900140	IncDec	++		900103	0					
ANR	900141	Identifier	ptr		900103	1					
ANR	900142	IfStatement	if ( c == CHAR_NULL )		900103	5					
ANR	900143	Condition	c == CHAR_NULL	1520:4:60720:60733	900103	0	True				
ANR	900144	EqualityExpression	c == CHAR_NULL		900103	0		==			
ANR	900145	Identifier	c		900103	0					
ANR	900146	Identifier	CHAR_NULL		900103	1					
ANR	900147	GotoStatement	goto ERROR_RETURN ;	1520:20:60736:60753	900103	1	True				
ANR	900148	Identifier	ERROR_RETURN		900103	0					
ANR	900149	ExpressionStatement	* negptr = FALSE	1522:0:60756:60771	900103	6	True				
ANR	900150	AssignmentExpression	* negptr = FALSE		900103	0		=			
ANR	900151	UnaryOperationExpression	* negptr		900103	0					
ANR	900152	UnaryOperator	*		900103	0					
ANR	900153	Identifier	negptr		900103	1					
ANR	900154	Identifier	FALSE		900103	1					
ANR	900155	IfStatement	if ( c == CHAR_LEFT_CURLY_BRACKET )		900103	7					
ANR	900156	Condition	c == CHAR_LEFT_CURLY_BRACKET	1527:4:60866:60893	900103	0	True				
ANR	900157	EqualityExpression	c == CHAR_LEFT_CURLY_BRACKET		900103	0		==			
ANR	900158	Identifier	c		900103	0					
ANR	900159	Identifier	CHAR_LEFT_CURLY_BRACKET		900103	1					
ANR	900160	CompoundStatement		16:2:283:283	900103	1					
ANR	900161	IfStatement	if ( ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT )		900103	0					
ANR	900162	Condition	ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT	1529:6:60906:60937	900103	0	True				
ANR	900163	EqualityExpression	ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT		900103	0		==			
ANR	900164	ArrayIndexing	ptr [ 1 ]		900103	0					
ANR	900165	Identifier	ptr		900103	0					
ANR	900166	PrimaryExpression	1		900103	1					
ANR	900167	Identifier	CHAR_CIRCUMFLEX_ACCENT		900103	1					
ANR	900168	CompoundStatement		18:4:329:329	900103	1					
ANR	900169	ExpressionStatement	* negptr = TRUE	1531:4:60950:60964	900103	0	True				
ANR	900170	AssignmentExpression	* negptr = TRUE		900103	0		=			
ANR	900171	UnaryOperationExpression	* negptr		900103	0					
ANR	900172	UnaryOperator	*		900103	0					
ANR	900173	Identifier	negptr		900103	1					
ANR	900174	Identifier	TRUE		900103	1					
ANR	900175	ExpressionStatement	ptr ++	1532:4:60970:60975	900103	1	True				
ANR	900176	PostIncDecOperationExpression	ptr ++		900103	0					
ANR	900177	Identifier	ptr		900103	0					
ANR	900178	IncDec	++		900103	1					
ANR	900179	ForStatement	for ( i = 0 ; i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1 ; i ++ )		900103	1					
ANR	900180	ForInit	i = 0 ;	1534:7:60990:60995	900103	0	True				
ANR	900181	AssignmentExpression	i = 0		900103	0		=			
ANR	900182	Identifier	i		900103	0					
ANR	900183	PrimaryExpression	0		900103	1					
ANR	900184	Condition	i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1	1534:14:60997:61044	900103	1	True				
ANR	900185	RelationalExpression	i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1		900103	0		<			
ANR	900186	Identifier	i		900103	0					
ANR	900187	AdditiveExpression	( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1		900103	1		-			
ANR	900188	CastExpression	( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) )		900103	0					
ANR	900189	CastTarget	int		900103	0					
ANR	900190	MultiplicativeExpression	sizeof ( name ) / sizeof ( pcre_uchar )		900103	1		/			
ANR	900191	SizeofExpression	sizeof ( name )		900103	0					
ANR	900192	Sizeof	sizeof		900103	0					
ANR	900193	SizeofOperand	name		900103	1					
ANR	900194	SizeofExpression	sizeof ( pcre_uchar )		900103	1					
ANR	900195	Sizeof	sizeof		900103	0					
ANR	900196	SizeofOperand	pcre_uchar		900103	1					
ANR	900197	PrimaryExpression	1		900103	1					
ANR	900198	PostIncDecOperationExpression	i ++	1534:64:61047:61049	900103	2	True				
ANR	900199	Identifier	i		900103	0					
ANR	900200	IncDec	++		900103	1					
ANR	900201	CompoundStatement		23:4:441:441	900103	3					
ANR	900202	ExpressionStatement	c = * ( ++ ptr )	1536:4:61062:61074	900103	0	True				
ANR	900203	AssignmentExpression	c = * ( ++ ptr )		900103	0		=			
ANR	900204	Identifier	c		900103	0					
ANR	900205	UnaryOperationExpression	* ( ++ ptr )		900103	1					
ANR	900206	UnaryOperator	*		900103	0					
ANR	900207	UnaryExpression	++ ptr		900103	1					
ANR	900208	IncDec	++		900103	0					
ANR	900209	Identifier	ptr		900103	1					
ANR	900210	IfStatement	if ( c == CHAR_NULL )		900103	1					
ANR	900211	Condition	c == CHAR_NULL	1537:8:61084:61097	900103	0	True				
ANR	900212	EqualityExpression	c == CHAR_NULL		900103	0		==			
ANR	900213	Identifier	c		900103	0					
ANR	900214	Identifier	CHAR_NULL		900103	1					
ANR	900215	GotoStatement	goto ERROR_RETURN ;	1537:24:61100:61117	900103	1	True				
ANR	900216	Identifier	ERROR_RETURN		900103	0					
ANR	900217	IfStatement	if ( c == CHAR_RIGHT_CURLY_BRACKET )		900103	2					
ANR	900218	Condition	c == CHAR_RIGHT_CURLY_BRACKET	1538:8:61127:61155	900103	0	True				
ANR	900219	EqualityExpression	c == CHAR_RIGHT_CURLY_BRACKET		900103	0		==			
ANR	900220	Identifier	c		900103	0					
ANR	900221	Identifier	CHAR_RIGHT_CURLY_BRACKET		900103	1					
ANR	900222	BreakStatement	break ;	1538:39:61158:61163	900103	1	True				
ANR	900223	ExpressionStatement	name [ i ] = c	1539:4:61169:61180	900103	3	True				
ANR	900224	AssignmentExpression	name [ i ] = c		900103	0		=			
ANR	900225	ArrayIndexing	name [ i ]		900103	0					
ANR	900226	Identifier	name		900103	0					
ANR	900227	Identifier	i		900103	1					
ANR	900228	Identifier	c		900103	1					
ANR	900229	IfStatement	if ( c != CHAR_RIGHT_CURLY_BRACKET )		900103	2					
ANR	900230	Condition	c != CHAR_RIGHT_CURLY_BRACKET	1541:6:61194:61222	900103	0	True				
ANR	900231	EqualityExpression	c != CHAR_RIGHT_CURLY_BRACKET		900103	0		!=			
ANR	900232	Identifier	c		900103	0					
ANR	900233	Identifier	CHAR_RIGHT_CURLY_BRACKET		900103	1					
ANR	900234	GotoStatement	goto ERROR_RETURN ;	1541:37:61225:61242	900103	1	True				
ANR	900235	Identifier	ERROR_RETURN		900103	0					
ANR	900236	ExpressionStatement	name [ i ] = 0	1542:2:61246:61257	900103	3	True				
ANR	900237	AssignmentExpression	name [ i ] = 0		900103	0		=			
ANR	900238	ArrayIndexing	name [ i ]		900103	0					
ANR	900239	Identifier	name		900103	0					
ANR	900240	Identifier	i		900103	1					
ANR	900241	PrimaryExpression	0		900103	1					
ANR	900242	ElseStatement	else		900103	0					
ANR	900243	CompoundStatement		36:2:711:711	900103	0					
ANR	900244	ExpressionStatement	name [ 0 ] = c	1549:2:61330:61341	900103	0	True				
ANR	900245	AssignmentExpression	name [ 0 ] = c		900103	0		=			
ANR	900246	ArrayIndexing	name [ 0 ]		900103	0					
ANR	900247	Identifier	name		900103	0					
ANR	900248	PrimaryExpression	0		900103	1					
ANR	900249	Identifier	c		900103	1					
ANR	900250	ExpressionStatement	name [ 1 ] = 0	1550:2:61345:61356	900103	1	True				
ANR	900251	AssignmentExpression	name [ 1 ] = 0		900103	0		=			
ANR	900252	ArrayIndexing	name [ 1 ]		900103	0					
ANR	900253	Identifier	name		900103	0					
ANR	900254	PrimaryExpression	1		900103	1					
ANR	900255	PrimaryExpression	0		900103	1					
ANR	900256	ExpressionStatement	* ptrptr = ptr	1553:0:61363:61376	900103	8	True				
ANR	900257	AssignmentExpression	* ptrptr = ptr		900103	0		=			
ANR	900258	UnaryOperationExpression	* ptrptr		900103	0					
ANR	900259	UnaryOperator	*		900103	0					
ANR	900260	Identifier	ptrptr		900103	1					
ANR	900261	Identifier	ptr		900103	1					
ANR	900262	ExpressionStatement	bot = 0	1557:0:61442:61449	900103	9	True				
ANR	900263	AssignmentExpression	bot = 0		900103	0		=			
ANR	900264	Identifier	bot		900103	0					
ANR	900265	PrimaryExpression	0		900103	1					
ANR	900266	ExpressionStatement	top = PRIV ( utt_size )	1558:0:61451:61471	900103	10	True				
ANR	900267	AssignmentExpression	top = PRIV ( utt_size )		900103	0		=			
ANR	900268	Identifier	top		900103	0					
ANR	900269	CallExpression	PRIV ( utt_size )		900103	1					
ANR	900270	Callee	PRIV		900103	0					
ANR	900271	Identifier	PRIV		900103	0					
ANR	900272	ArgumentList	utt_size		900103	1					
ANR	900273	Argument	utt_size		900103	0					
ANR	900274	Identifier	utt_size		900103	0					
ANR	900275	WhileStatement	while ( bot < top )		900103	11					
ANR	900276	Condition	bot < top	1560:7:61481:61489	900103	0	True				
ANR	900277	RelationalExpression	bot < top		900103	0		<			
ANR	900278	Identifier	bot		900103	0					
ANR	900279	Identifier	top		900103	1					
ANR	900280	CompoundStatement		50:2:883:888	900103	1					
ANR	900281	IdentifierDeclStatement	int r ;	1562:2:61498:61503	900103	0	True				
ANR	900282	IdentifierDecl	r		900103	0					
ANR	900283	IdentifierDeclType	int		900103	0					
ANR	900284	Identifier	r		900103	1					
ANR	900285	ExpressionStatement	i = ( bot + top ) >> 1	1563:2:61507:61527	900103	1	True				
ANR	900286	AssignmentExpression	i = ( bot + top ) >> 1		900103	0		=			
ANR	900287	Identifier	i		900103	0					
ANR	900288	ShiftExpression	( bot + top ) >> 1		900103	1		>>			
ANR	900289	AdditiveExpression	bot + top		900103	0		+			
ANR	900290	Identifier	bot		900103	0					
ANR	900291	Identifier	top		900103	1					
ANR	900292	PrimaryExpression	1		900103	1					
ANR	900293	ExpressionStatement	"r = STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"	1564:2:61531:61597	900103	2	True				
ANR	900294	AssignmentExpression	"r = STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"		900103	0		=			
ANR	900295	Identifier	r		900103	0					
ANR	900296	CallExpression	"STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"		900103	1					
ANR	900297	Callee	STRCMP_UC_C8		900103	0					
ANR	900298	Identifier	STRCMP_UC_C8		900103	0					
ANR	900299	ArgumentList	name		900103	1					
ANR	900300	Argument	name		900103	0					
ANR	900301	Identifier	name		900103	0					
ANR	900302	Argument	PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset		900103	1					
ANR	900303	AdditiveExpression	PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset		900103	0		+			
ANR	900304	CallExpression	PRIV ( utt_names )		900103	0					
ANR	900305	Callee	PRIV		900103	0					
ANR	900306	Identifier	PRIV		900103	0					
ANR	900307	ArgumentList	utt_names		900103	1					
ANR	900308	Argument	utt_names		900103	0					
ANR	900309	Identifier	utt_names		900103	0					
ANR	900310	MemberAccess	PRIV ( utt ) [ i ] . name_offset		900103	1					
ANR	900311	ArrayIndexing	PRIV ( utt ) [ i ]		900103	0					
ANR	900312	CallExpression	PRIV ( utt )		900103	0					
ANR	900313	Callee	PRIV		900103	0					
ANR	900314	Identifier	PRIV		900103	0					
ANR	900315	ArgumentList	utt		900103	1					
ANR	900316	Argument	utt		900103	0					
ANR	900317	Identifier	utt		900103	0					
ANR	900318	Identifier	i		900103	1					
ANR	900319	Identifier	name_offset		900103	1					
ANR	900320	IfStatement	if ( r == 0 )		900103	3					
ANR	900321	Condition	r == 0	1565:6:61605:61610	900103	0	True				
ANR	900322	EqualityExpression	r == 0		900103	0		==			
ANR	900323	Identifier	r		900103	0					
ANR	900324	PrimaryExpression	0		900103	1					
ANR	900325	CompoundStatement		54:4:1002:1002	900103	1					
ANR	900326	ExpressionStatement	* ptypeptr = PRIV ( utt ) [ i ] . type	1567:4:61623:61652	900103	0	True				
ANR	900327	AssignmentExpression	* ptypeptr = PRIV ( utt ) [ i ] . type		900103	0		=			
ANR	900328	UnaryOperationExpression	* ptypeptr		900103	0					
ANR	900329	UnaryOperator	*		900103	0					
ANR	900330	Identifier	ptypeptr		900103	1					
ANR	900331	MemberAccess	PRIV ( utt ) [ i ] . type		900103	1					
ANR	900332	ArrayIndexing	PRIV ( utt ) [ i ]		900103	0					
ANR	900333	CallExpression	PRIV ( utt )		900103	0					
ANR	900334	Callee	PRIV		900103	0					
ANR	900335	Identifier	PRIV		900103	0					
ANR	900336	ArgumentList	utt		900103	1					
ANR	900337	Argument	utt		900103	0					
ANR	900338	Identifier	utt		900103	0					
ANR	900339	Identifier	i		900103	1					
ANR	900340	Identifier	type		900103	1					
ANR	900341	ExpressionStatement	* pdataptr = PRIV ( utt ) [ i ] . value	1568:4:61658:61688	900103	1	True				
ANR	900342	AssignmentExpression	* pdataptr = PRIV ( utt ) [ i ] . value		900103	0		=			
ANR	900343	UnaryOperationExpression	* pdataptr		900103	0					
ANR	900344	UnaryOperator	*		900103	0					
ANR	900345	Identifier	pdataptr		900103	1					
ANR	900346	MemberAccess	PRIV ( utt ) [ i ] . value		900103	1					
ANR	900347	ArrayIndexing	PRIV ( utt ) [ i ]		900103	0					
ANR	900348	CallExpression	PRIV ( utt )		900103	0					
ANR	900349	Callee	PRIV		900103	0					
ANR	900350	Identifier	PRIV		900103	0					
ANR	900351	ArgumentList	utt		900103	1					
ANR	900352	Argument	utt		900103	0					
ANR	900353	Identifier	utt		900103	0					
ANR	900354	Identifier	i		900103	1					
ANR	900355	Identifier	value		900103	1					
ANR	900356	ReturnStatement	return TRUE ;	1569:4:61694:61705	900103	2	True				
ANR	900357	Identifier	TRUE		900103	0					
ANR	900358	IfStatement	if ( r > 0 )		900103	4					
ANR	900359	Condition	r > 0	1571:6:61719:61723	900103	0	True				
ANR	900360	RelationalExpression	r > 0		900103	0		>			
ANR	900361	Identifier	r		900103	0					
ANR	900362	PrimaryExpression	0		900103	1					
ANR	900363	ExpressionStatement	bot = i + 1	1571:13:61726:61737	900103	1	True				
ANR	900364	AssignmentExpression	bot = i + 1		900103	0		=			
ANR	900365	Identifier	bot		900103	0					
ANR	900366	AdditiveExpression	i + 1		900103	1		+			
ANR	900367	Identifier	i		900103	0					
ANR	900368	PrimaryExpression	1		900103	1					
ANR	900369	ElseStatement	else		900103	0					
ANR	900370	ExpressionStatement	top = i	1571:31:61744:61751	900103	0	True				
ANR	900371	AssignmentExpression	top = i		900103	0		=			
ANR	900372	Identifier	top		900103	0					
ANR	900373	Identifier	i		900103	1					
ANR	900374	ExpressionStatement	* errorcodeptr = ERR47	1574:0:61758:61779	900103	12	True				
ANR	900375	AssignmentExpression	* errorcodeptr = ERR47		900103	0		=			
ANR	900376	UnaryOperationExpression	* errorcodeptr		900103	0					
ANR	900377	UnaryOperator	*		900103	0					
ANR	900378	Identifier	errorcodeptr		900103	1					
ANR	900379	Identifier	ERR47		900103	1					
ANR	900380	ExpressionStatement	* ptrptr = ptr	1575:0:61781:61794	900103	13	True				
ANR	900381	AssignmentExpression	* ptrptr = ptr		900103	0		=			
ANR	900382	UnaryOperationExpression	* ptrptr		900103	0					
ANR	900383	UnaryOperator	*		900103	0					
ANR	900384	Identifier	ptrptr		900103	1					
ANR	900385	Identifier	ptr		900103	1					
ANR	900386	ReturnStatement	return FALSE ;	1576:0:61796:61808	900103	14	True				
ANR	900387	Identifier	FALSE		900103	0					
ANR	900388	Label	ERROR_RETURN :	1578:0:61811:61823	900103	15	True				
ANR	900389	Identifier	ERROR_RETURN		900103	0					
ANR	900390	ExpressionStatement	* errorcodeptr = ERR46	1579:0:61825:61846	900103	16	True				
ANR	900391	AssignmentExpression	* errorcodeptr = ERR46		900103	0		=			
ANR	900392	UnaryOperationExpression	* errorcodeptr		900103	0					
ANR	900393	UnaryOperator	*		900103	0					
ANR	900394	Identifier	errorcodeptr		900103	1					
ANR	900395	Identifier	ERR46		900103	1					
ANR	900396	ExpressionStatement	* ptrptr = ptr	1580:0:61848:61861	900103	17	True				
ANR	900397	AssignmentExpression	* ptrptr = ptr		900103	0		=			
ANR	900398	UnaryOperationExpression	* ptrptr		900103	0					
ANR	900399	UnaryOperator	*		900103	0					
ANR	900400	Identifier	ptrptr		900103	1					
ANR	900401	Identifier	ptr		900103	1					
ANR	900402	ReturnStatement	return FALSE ;	1581:0:61863:61875	900103	18	True				
ANR	900403	Identifier	FALSE		900103	0					
ANR	900404	ReturnType	static BOOL		900103	1					
ANR	900405	Identifier	get_ucp		900103	2					
ANR	900406	ParameterList	"const pcre_uchar * * ptrptr , BOOL * negptr , unsigned int * ptypeptr , unsigned int * pdataptr , int * errorcodeptr"		900103	3					
ANR	900407	Parameter	const pcre_uchar * * ptrptr	1511:8:60504:60528	900103	0	True				
ANR	900408	ParameterType	const pcre_uchar * *		900103	0					
ANR	900409	Identifier	ptrptr		900103	1					
ANR	900410	Parameter	BOOL * negptr	1511:35:60531:60542	900103	1	True				
ANR	900411	ParameterType	BOOL *		900103	0					
ANR	900412	Identifier	negptr		900103	1					
ANR	900413	Parameter	unsigned int * ptypeptr	1511:49:60545:60566	900103	2	True				
ANR	900414	ParameterType	unsigned int *		900103	0					
ANR	900415	Identifier	ptypeptr		900103	1					
ANR	900416	Parameter	unsigned int * pdataptr	1512:2:60571:60592	900103	3	True				
ANR	900417	ParameterType	unsigned int *		900103	0					
ANR	900418	Identifier	pdataptr		900103	1					
ANR	900419	Parameter	int * errorcodeptr	1512:26:60595:60611	900103	4	True				
ANR	900420	ParameterType	int *		900103	0					
ANR	900421	Identifier	errorcodeptr		900103	1					
ANR	900422	CFGEntryNode	ENTRY		900103		True				
ANR	900423	CFGExitNode	EXIT		900103		True				
ANR	900424	Symbol	utt_names		900103						
ANR	900425	Symbol	bot		900103						
ANR	900426	Symbol	PRIV		900103						
ANR	900427	Symbol	PRIV ( utt ) [ i ] . type		900103						
ANR	900428	Symbol	top		900103						
ANR	900429	Symbol	utt_size		900103						
ANR	900430	Symbol	* ptr		900103						
ANR	900431	Symbol	* ( ++ ptr )		900103						
ANR	900432	Symbol	* ptrptr		900103						
ANR	900433	Symbol	pdataptr		900103						
ANR	900434	Symbol	* name		900103						
ANR	900435	Symbol	c		900103						
ANR	900436	Symbol	CHAR_CIRCUMFLEX_ACCENT		900103						
ANR	900437	Symbol	i		900103						
ANR	900438	Symbol	TRUE		900103						
ANR	900439	Symbol	* pdataptr		900103						
ANR	900440	Symbol	negptr		900103						
ANR	900441	Symbol	ptypeptr		900103						
ANR	900442	Symbol	errorcodeptr		900103						
ANR	900443	Symbol	ptr		900103						
ANR	900444	Symbol	CHAR_NULL		900103						
ANR	900445	Symbol	CHAR_RIGHT_CURLY_BRACKET		900103						
ANR	900446	Symbol	* PRIV		900103						
ANR	900447	Symbol	r		900103						
ANR	900448	Symbol	* i		900103						
ANR	900449	Symbol	utt		900103						
ANR	900450	Symbol	* errorcodeptr		900103						
ANR	900451	Symbol	CHAR_LEFT_CURLY_BRACKET		900103						
ANR	900452	Symbol	PRIV ( utt ) [ i ] . name_offset		900103						
ANR	900453	Symbol	STRCMP_UC_C8		900103						
ANR	900454	Symbol	ERR46		900103						
ANR	900455	Symbol	ptrptr		900103						
ANR	900456	Symbol	name		900103						
ANR	900457	Symbol	* negptr		900103						
ANR	900458	Symbol	PRIV ( utt ) [ i ] . value		900103						
ANR	900459	Symbol	FALSE		900103						
ANR	900460	Symbol	ERR47		900103						
ANR	900461	Symbol	* ptypeptr		900103						
ANR	900462	Function	read_repeat_counts	1606:0:62624:63322							
ANR	900463	FunctionDef	"read_repeat_counts (const pcre_uchar * p , int * minp , int * maxp , int * errorcodeptr)"		900462	0					
ANR	900464	CompoundStatement		1608:0:62731:63322	900462	0					
ANR	900465	IdentifierDeclStatement	int min = 0 ;	1609:0:62733:62744	900462	0	True				
ANR	900466	IdentifierDecl	min = 0		900462	0					
ANR	900467	IdentifierDeclType	int		900462	0					
ANR	900468	Identifier	min		900462	1					
ANR	900469	AssignmentExpression	min = 0		900462	2		=			
ANR	900470	Identifier	min		900462	0					
ANR	900471	PrimaryExpression	0		900462	1					
ANR	900472	IdentifierDeclStatement	int max = - 1 ;	1610:0:62746:62758	900462	1	True				
ANR	900473	IdentifierDecl	max = - 1		900462	0					
ANR	900474	IdentifierDeclType	int		900462	0					
ANR	900475	Identifier	max		900462	1					
ANR	900476	AssignmentExpression	max = - 1		900462	2		=			
ANR	900477	Identifier	max		900462	0					
ANR	900478	UnaryOperationExpression	- 1		900462	1					
ANR	900479	UnaryOperator	-		900462	0					
ANR	900480	PrimaryExpression	1		900462	1					
ANR	900481	WhileStatement	while ( IS_DIGIT ( * p ) )		900462	2					
ANR	900482	Condition	IS_DIGIT ( * p )	1612:7:62768:62779	900462	0	True				
ANR	900483	CallExpression	IS_DIGIT ( * p )		900462	0					
ANR	900484	Callee	IS_DIGIT		900462	0					
ANR	900485	Identifier	IS_DIGIT		900462	0					
ANR	900486	ArgumentList	* p		900462	1					
ANR	900487	Argument	* p		900462	0					
ANR	900488	UnaryOperationExpression	* p		900462	0					
ANR	900489	UnaryOperator	*		900462	0					
ANR	900490	Identifier	p		900462	1					
ANR	900491	CompoundStatement		6:2:52:52	900462	1					
ANR	900492	ExpressionStatement	min = min * 10 + ( int ) ( * p ++ - CHAR_0 )	1614:2:62788:62825	900462	0	True				
ANR	900493	AssignmentExpression	min = min * 10 + ( int ) ( * p ++ - CHAR_0 )		900462	0		=			
ANR	900494	Identifier	min		900462	0					
ANR	900495	AdditiveExpression	min * 10 + ( int ) ( * p ++ - CHAR_0 )		900462	1		+			
ANR	900496	MultiplicativeExpression	min * 10		900462	0		*			
ANR	900497	Identifier	min		900462	0					
ANR	900498	PrimaryExpression	10		900462	1					
ANR	900499	CastExpression	( int ) ( * p ++ - CHAR_0 )		900462	1					
ANR	900500	CastTarget	int		900462	0					
ANR	900501	AdditiveExpression	* p ++ - CHAR_0		900462	1		-			
ANR	900502	UnaryOperationExpression	* p ++		900462	0					
ANR	900503	UnaryOperator	*		900462	0					
ANR	900504	PostIncDecOperationExpression	p ++		900462	1					
ANR	900505	Identifier	p		900462	0					
ANR	900506	IncDec	++		900462	1					
ANR	900507	Identifier	CHAR_0		900462	1					
ANR	900508	IfStatement	if ( min > 65535 )		900462	1					
ANR	900509	Condition	min > 65535	1615:6:62833:62843	900462	0	True				
ANR	900510	RelationalExpression	min > 65535		900462	0		>			
ANR	900511	Identifier	min		900462	0					
ANR	900512	PrimaryExpression	65535		900462	1					
ANR	900513	CompoundStatement		9:4:118:118	900462	1					
ANR	900514	ExpressionStatement	* errorcodeptr = ERR5	1617:4:62856:62876	900462	0	True				
ANR	900515	AssignmentExpression	* errorcodeptr = ERR5		900462	0		=			
ANR	900516	UnaryOperationExpression	* errorcodeptr		900462	0					
ANR	900517	UnaryOperator	*		900462	0					
ANR	900518	Identifier	errorcodeptr		900462	1					
ANR	900519	Identifier	ERR5		900462	1					
ANR	900520	ReturnStatement	return p ;	1618:4:62882:62890	900462	1	True				
ANR	900521	Identifier	p		900462	0					
ANR	900522	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		900462	3					
ANR	900523	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	1622:4:62907:62936	900462	0	True				
ANR	900524	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		900462	0		==			
ANR	900525	UnaryOperationExpression	* p		900462	0					
ANR	900526	UnaryOperator	*		900462	0					
ANR	900527	Identifier	p		900462	1					
ANR	900528	Identifier	CHAR_RIGHT_CURLY_BRACKET		900462	1					
ANR	900529	ExpressionStatement	max = min	1622:36:62939:62948	900462	1	True				
ANR	900530	AssignmentExpression	max = min		900462	0		=			
ANR	900531	Identifier	max		900462	0					
ANR	900532	Identifier	min		900462	1					
ANR	900533	ElseStatement	else		900462	0					
ANR	900534	CompoundStatement		16:2:225:225	900462	0					
ANR	900535	IfStatement	if ( * ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET )		900462	0					
ANR	900536	Condition	* ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET	1624:6:62965:62998	900462	0	True				
ANR	900537	EqualityExpression	* ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET		900462	0		!=			
ANR	900538	UnaryOperationExpression	* ( ++ p )		900462	0					
ANR	900539	UnaryOperator	*		900462	0					
ANR	900540	UnaryExpression	++ p		900462	1					
ANR	900541	IncDec	++		900462	0					
ANR	900542	Identifier	p		900462	1					
ANR	900543	Identifier	CHAR_RIGHT_CURLY_BRACKET		900462	1					
ANR	900544	CompoundStatement		18:4:273:273	900462	1					
ANR	900545	ExpressionStatement	max = 0	1626:4:63011:63018	900462	0	True				
ANR	900546	AssignmentExpression	max = 0		900462	0		=			
ANR	900547	Identifier	max		900462	0					
ANR	900548	PrimaryExpression	0		900462	1					
ANR	900549	WhileStatement	while ( IS_DIGIT ( * p ) )		900462	1					
ANR	900550	Condition	IS_DIGIT ( * p )	1627:10:63030:63041	900462	0	True				
ANR	900551	CallExpression	IS_DIGIT ( * p )		900462	0					
ANR	900552	Callee	IS_DIGIT		900462	0					
ANR	900553	Identifier	IS_DIGIT		900462	0					
ANR	900554	ArgumentList	* p		900462	1					
ANR	900555	Argument	* p		900462	0					
ANR	900556	UnaryOperationExpression	* p		900462	0					
ANR	900557	UnaryOperator	*		900462	0					
ANR	900558	Identifier	p		900462	1					
ANR	900559	CompoundStatement		21:6:318:318	900462	1					
ANR	900560	ExpressionStatement	max = max * 10 + ( int ) ( * p ++ - CHAR_0 )	1629:6:63058:63095	900462	0	True				
ANR	900561	AssignmentExpression	max = max * 10 + ( int ) ( * p ++ - CHAR_0 )		900462	0		=			
ANR	900562	Identifier	max		900462	0					
ANR	900563	AdditiveExpression	max * 10 + ( int ) ( * p ++ - CHAR_0 )		900462	1		+			
ANR	900564	MultiplicativeExpression	max * 10		900462	0		*			
ANR	900565	Identifier	max		900462	0					
ANR	900566	PrimaryExpression	10		900462	1					
ANR	900567	CastExpression	( int ) ( * p ++ - CHAR_0 )		900462	1					
ANR	900568	CastTarget	int		900462	0					
ANR	900569	AdditiveExpression	* p ++ - CHAR_0		900462	1		-			
ANR	900570	UnaryOperationExpression	* p ++		900462	0					
ANR	900571	UnaryOperator	*		900462	0					
ANR	900572	PostIncDecOperationExpression	p ++		900462	1					
ANR	900573	Identifier	p		900462	0					
ANR	900574	IncDec	++		900462	1					
ANR	900575	Identifier	CHAR_0		900462	1					
ANR	900576	IfStatement	if ( max > 65535 )		900462	1					
ANR	900577	Condition	max > 65535	1630:10:63107:63117	900462	0	True				
ANR	900578	RelationalExpression	max > 65535		900462	0		>			
ANR	900579	Identifier	max		900462	0					
ANR	900580	PrimaryExpression	65535		900462	1					
ANR	900581	CompoundStatement		24:8:396:396	900462	1					
ANR	900582	ExpressionStatement	* errorcodeptr = ERR5	1632:8:63138:63158	900462	0	True				
ANR	900583	AssignmentExpression	* errorcodeptr = ERR5		900462	0		=			
ANR	900584	UnaryOperationExpression	* errorcodeptr		900462	0					
ANR	900585	UnaryOperator	*		900462	0					
ANR	900586	Identifier	errorcodeptr		900462	1					
ANR	900587	Identifier	ERR5		900462	1					
ANR	900588	ReturnStatement	return p ;	1633:8:63168:63176	900462	1	True				
ANR	900589	Identifier	p		900462	0					
ANR	900590	IfStatement	if ( max < min )		900462	2					
ANR	900591	Condition	max < min	1636:8:63204:63212	900462	0	True				
ANR	900592	RelationalExpression	max < min		900462	0		<			
ANR	900593	Identifier	max		900462	0					
ANR	900594	Identifier	min		900462	1					
ANR	900595	CompoundStatement		30:6:489:489	900462	1					
ANR	900596	ExpressionStatement	* errorcodeptr = ERR4	1638:6:63229:63249	900462	0	True				
ANR	900597	AssignmentExpression	* errorcodeptr = ERR4		900462	0		=			
ANR	900598	UnaryOperationExpression	* errorcodeptr		900462	0					
ANR	900599	UnaryOperator	*		900462	0					
ANR	900600	Identifier	errorcodeptr		900462	1					
ANR	900601	Identifier	ERR4		900462	1					
ANR	900602	ReturnStatement	return p ;	1639:6:63257:63265	900462	1	True				
ANR	900603	Identifier	p		900462	0					
ANR	900604	ExpressionStatement	* minp = min	1644:0:63286:63297	900462	4	True				
ANR	900605	AssignmentExpression	* minp = min		900462	0		=			
ANR	900606	UnaryOperationExpression	* minp		900462	0					
ANR	900607	UnaryOperator	*		900462	0					
ANR	900608	Identifier	minp		900462	1					
ANR	900609	Identifier	min		900462	1					
ANR	900610	ExpressionStatement	* maxp = max	1645:0:63299:63310	900462	5	True				
ANR	900611	AssignmentExpression	* maxp = max		900462	0		=			
ANR	900612	UnaryOperationExpression	* maxp		900462	0					
ANR	900613	UnaryOperator	*		900462	0					
ANR	900614	Identifier	maxp		900462	1					
ANR	900615	Identifier	max		900462	1					
ANR	900616	ReturnStatement	return p ;	1646:0:63312:63320	900462	6	True				
ANR	900617	Identifier	p		900462	0					
ANR	900618	ReturnType	static const pcre_uchar *		900462	1					
ANR	900619	Identifier	read_repeat_counts		900462	2					
ANR	900620	ParameterList	"const pcre_uchar * p , int * minp , int * maxp , int * errorcodeptr"		900462	3					
ANR	900621	Parameter	const pcre_uchar * p	1607:19:62669:62687	900462	0	True				
ANR	900622	ParameterType	const pcre_uchar *		900462	0					
ANR	900623	Identifier	p		900462	1					
ANR	900624	Parameter	int * minp	1607:40:62690:62698	900462	1	True				
ANR	900625	ParameterType	int *		900462	0					
ANR	900626	Identifier	minp		900462	1					
ANR	900627	Parameter	int * maxp	1607:51:62701:62709	900462	2	True				
ANR	900628	ParameterType	int *		900462	0					
ANR	900629	Identifier	maxp		900462	1					
ANR	900630	Parameter	int * errorcodeptr	1607:62:62712:62728	900462	3	True				
ANR	900631	ParameterType	int *		900462	0					
ANR	900632	Identifier	errorcodeptr		900462	1					
ANR	900633	CFGEntryNode	ENTRY		900462		True				
ANR	900634	CFGExitNode	EXIT		900462		True				
ANR	900635	Symbol	* maxp		900462						
ANR	900636	Symbol	max		900462						
ANR	900637	Symbol	* p ++		900462						
ANR	900638	Symbol	minp		900462						
ANR	900639	Symbol	CHAR_0		900462						
ANR	900640	Symbol	errorcodeptr		900462						
ANR	900641	Symbol	IS_DIGIT		900462						
ANR	900642	Symbol	CHAR_RIGHT_CURLY_BRACKET		900462						
ANR	900643	Symbol	ERR4		900462						
ANR	900644	Symbol	p		900462						
ANR	900645	Symbol	ERR5		900462						
ANR	900646	Symbol	min		900462						
ANR	900647	Symbol	* errorcodeptr		900462						
ANR	900648	Symbol	* minp		900462						
ANR	900649	Symbol	* ( ++ p )		900462						
ANR	900650	Symbol	* p		900462						
ANR	900651	Symbol	maxp		900462						
ANR	900652	Function	first_significant_code	1668:0:63984:64681							
ANR	900653	FunctionDef	"first_significant_code (const pcre_uchar * code , BOOL skipassert)"		900652	0					
ANR	900654	CompoundStatement		1670:0:64073:64681	900652	0					
ANR	900655	ForStatement	for ( ; ; )		900652	0					
ANR	900656	CompoundStatement		3:2:12:12	900652	0					
ANR	900657	SwitchStatement	switch ( ( int ) * code )		900652	0					
ANR	900658	Condition	( int ) * code	1673:10:64098:64107	900652	0	True				
ANR	900659	CastExpression	( int ) * code		900652	0					
ANR	900660	CastTarget	int		900652	0					
ANR	900661	UnaryOperationExpression	* code		900652	1					
ANR	900662	UnaryOperator	*		900652	0					
ANR	900663	Identifier	code		900652	1					
ANR	900664	CompoundStatement		5:4:40:40	900652	1					
ANR	900665	Label	case OP_ASSERT_NOT :	1675:4:64120:64138	900652	0	True				
ANR	900666	Identifier	OP_ASSERT_NOT		900652	0					
ANR	900667	Label	case OP_ASSERTBACK :	1676:4:64144:64162	900652	1	True				
ANR	900668	Identifier	OP_ASSERTBACK		900652	0					
ANR	900669	Label	case OP_ASSERTBACK_NOT :	1677:4:64168:64190	900652	2	True				
ANR	900670	Identifier	OP_ASSERTBACK_NOT		900652	0					
ANR	900671	IfStatement	if ( ! skipassert )		900652	3					
ANR	900672	Condition	! skipassert	1678:8:64200:64210	900652	0	True				
ANR	900673	UnaryOperationExpression	! skipassert		900652	0					
ANR	900674	UnaryOperator	!		900652	0					
ANR	900675	Identifier	skipassert		900652	1					
ANR	900676	ReturnStatement	return code ;	1678:21:64213:64224	900652	1	True				
ANR	900677	Identifier	code		900652	0					
ANR	900678	DoStatement	do		900652	4					
ANR	900679	ExpressionStatement	"code += GET ( code , 1 )"	1679:7:64233:64253	900652	0	True				
ANR	900680	AssignmentExpression	"code += GET ( code , 1 )"		900652	0		+=			
ANR	900681	Identifier	code		900652	0					
ANR	900682	CallExpression	"GET ( code , 1 )"		900652	1					
ANR	900683	Callee	GET		900652	0					
ANR	900684	Identifier	GET		900652	0					
ANR	900685	ArgumentList	code		900652	1					
ANR	900686	Argument	code		900652	0					
ANR	900687	Identifier	code		900652	0					
ANR	900688	Argument	1		900652	1					
ANR	900689	PrimaryExpression	1		900652	0					
ANR	900690	Condition	* code == OP_ALT	1679:36:64262:64276	900652	1	True				
ANR	900691	EqualityExpression	* code == OP_ALT		900652	0		==			
ANR	900692	UnaryOperationExpression	* code		900652	0					
ANR	900693	UnaryOperator	*		900652	0					
ANR	900694	Identifier	code		900652	1					
ANR	900695	Identifier	OP_ALT		900652	1					
ANR	900696	ExpressionStatement	code += PRIV ( OP_lengths ) [ * code ]	1680:4:64284:64315	900652	5	True				
ANR	900697	AssignmentExpression	code += PRIV ( OP_lengths ) [ * code ]		900652	0		+=			
ANR	900698	Identifier	code		900652	0					
ANR	900699	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		900652	1					
ANR	900700	CallExpression	PRIV ( OP_lengths )		900652	0					
ANR	900701	Callee	PRIV		900652	0					
ANR	900702	Identifier	PRIV		900652	0					
ANR	900703	ArgumentList	OP_lengths		900652	1					
ANR	900704	Argument	OP_lengths		900652	0					
ANR	900705	Identifier	OP_lengths		900652	0					
ANR	900706	UnaryOperationExpression	* code		900652	1					
ANR	900707	UnaryOperator	*		900652	0					
ANR	900708	Identifier	code		900652	1					
ANR	900709	BreakStatement	break ;	1681:4:64321:64326	900652	6	True				
ANR	900710	Label	case OP_WORD_BOUNDARY :	1683:4:64333:64354	900652	7	True				
ANR	900711	Identifier	OP_WORD_BOUNDARY		900652	0					
ANR	900712	Label	case OP_NOT_WORD_BOUNDARY :	1684:4:64360:64385	900652	8	True				
ANR	900713	Identifier	OP_NOT_WORD_BOUNDARY		900652	0					
ANR	900714	IfStatement	if ( ! skipassert )		900652	9					
ANR	900715	Condition	! skipassert	1685:8:64395:64405	900652	0	True				
ANR	900716	UnaryOperationExpression	! skipassert		900652	0					
ANR	900717	UnaryOperator	!		900652	0					
ANR	900718	Identifier	skipassert		900652	1					
ANR	900719	ReturnStatement	return code ;	1685:21:64408:64419	900652	1	True				
ANR	900720	Identifier	code		900652	0					
ANR	900721	Label	case OP_CALLOUT :	1688:4:64449:64464	900652	10	True				
ANR	900722	Identifier	OP_CALLOUT		900652	0					
ANR	900723	Label	case OP_CREF :	1689:4:64470:64482	900652	11	True				
ANR	900724	Identifier	OP_CREF		900652	0					
ANR	900725	Label	case OP_DNCREF :	1690:4:64488:64502	900652	12	True				
ANR	900726	Identifier	OP_DNCREF		900652	0					
ANR	900727	Label	case OP_RREF :	1691:4:64508:64520	900652	13	True				
ANR	900728	Identifier	OP_RREF		900652	0					
ANR	900729	Label	case OP_DNRREF :	1692:4:64526:64540	900652	14	True				
ANR	900730	Identifier	OP_DNRREF		900652	0					
ANR	900731	Label	case OP_DEF :	1693:4:64546:64557	900652	15	True				
ANR	900732	Identifier	OP_DEF		900652	0					
ANR	900733	ExpressionStatement	code += PRIV ( OP_lengths ) [ * code ]	1694:4:64563:64594	900652	16	True				
ANR	900734	AssignmentExpression	code += PRIV ( OP_lengths ) [ * code ]		900652	0		+=			
ANR	900735	Identifier	code		900652	0					
ANR	900736	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		900652	1					
ANR	900737	CallExpression	PRIV ( OP_lengths )		900652	0					
ANR	900738	Callee	PRIV		900652	0					
ANR	900739	Identifier	PRIV		900652	0					
ANR	900740	ArgumentList	OP_lengths		900652	1					
ANR	900741	Argument	OP_lengths		900652	0					
ANR	900742	Identifier	OP_lengths		900652	0					
ANR	900743	UnaryOperationExpression	* code		900652	1					
ANR	900744	UnaryOperator	*		900652	0					
ANR	900745	Identifier	code		900652	1					
ANR	900746	BreakStatement	break ;	1695:4:64600:64605	900652	17	True				
ANR	900747	Label	default :	1697:4:64612:64619	900652	18	True				
ANR	900748	Identifier	default		900652	0					
ANR	900749	ReturnStatement	return code ;	1698:4:64625:64636	900652	19	True				
ANR	900750	Identifier	code		900652	0					
ANR	900751	ReturnType	static const pcre_uchar *		900652	1					
ANR	900752	Identifier	first_significant_code		900652	2					
ANR	900753	ParameterList	"const pcre_uchar * code , BOOL skipassert"		900652	3					
ANR	900754	Parameter	const pcre_uchar * code	1669:23:64032:64053	900652	0	True				
ANR	900755	ParameterType	const pcre_uchar *		900652	0					
ANR	900756	Identifier	code		900652	1					
ANR	900757	Parameter	BOOL skipassert	1669:47:64056:64070	900652	1	True				
ANR	900758	ParameterType	BOOL		900652	0					
ANR	900759	Identifier	skipassert		900652	1					
ANR	900760	CFGEntryNode	ENTRY		900652		True				
ANR	900761	CFGExitNode	EXIT		900652		True				
ANR	900762	InfiniteForNode	true		900652		True				
ANR	900763	Symbol	* PRIV		900652						
ANR	900764	Symbol	code		900652						
ANR	900765	Symbol	GET		900652						
ANR	900766	Symbol	skipassert		900652						
ANR	900767	Symbol	OP_ALT		900652						
ANR	900768	Symbol	OP_lengths		900652						
ANR	900769	Symbol	PRIV		900652						
ANR	900770	Symbol	* * code		900652						
ANR	900771	Symbol	* code		900652						
ANR	900772	Function	find_fixedlength	1735:0:66089:74078							
ANR	900773	FunctionDef	"find_fixedlength (pcre_uchar * code , BOOL utf , BOOL atend , compile_data * cd , recurse_check * recurses)"		900772	0					
ANR	900774	CompoundStatement		1738:0:66202:74078	900772	0					
ANR	900775	IdentifierDeclStatement	int length = - 1 ;	1739:0:66204:66219	900772	0	True				
ANR	900776	IdentifierDecl	length = - 1		900772	0					
ANR	900777	IdentifierDeclType	int		900772	0					
ANR	900778	Identifier	length		900772	1					
ANR	900779	AssignmentExpression	length = - 1		900772	2		=			
ANR	900780	Identifier	length		900772	0					
ANR	900781	UnaryOperationExpression	- 1		900772	1					
ANR	900782	UnaryOperator	-		900772	0					
ANR	900783	PrimaryExpression	1		900772	1					
ANR	900784	IdentifierDeclStatement	recurse_check this_recurse ;	1740:0:66221:66247	900772	1	True				
ANR	900785	IdentifierDecl	this_recurse		900772	0					
ANR	900786	IdentifierDeclType	recurse_check		900772	0					
ANR	900787	Identifier	this_recurse		900772	1					
ANR	900788	Statement	register	1741:0:66249:66256	900772	2	True				
ANR	900789	IdentifierDeclStatement	int branchlength = 0 ;	1741:9:66258:66278	900772	3	True				
ANR	900790	IdentifierDecl	branchlength = 0		900772	0					
ANR	900791	IdentifierDeclType	int		900772	0					
ANR	900792	Identifier	branchlength		900772	1					
ANR	900793	AssignmentExpression	branchlength = 0		900772	2		=			
ANR	900794	Identifier	branchlength		900772	0					
ANR	900795	PrimaryExpression	0		900772	1					
ANR	900796	Statement	register	1742:0:66280:66287	900772	4	True				
ANR	900797	IdentifierDeclStatement	pcre_uchar * cc = code + 1 + LINK_SIZE ;	1742:9:66289:66326	900772	5	True				
ANR	900798	IdentifierDecl	* cc = code + 1 + LINK_SIZE		900772	0					
ANR	900799	IdentifierDeclType	pcre_uchar *		900772	0					
ANR	900800	Identifier	cc		900772	1					
ANR	900801	AssignmentExpression	* cc = code + 1 + LINK_SIZE		900772	2		=			
ANR	900802	Identifier	cc		900772	0					
ANR	900803	AdditiveExpression	code + 1 + LINK_SIZE		900772	1		+			
ANR	900804	Identifier	code		900772	0					
ANR	900805	AdditiveExpression	1 + LINK_SIZE		900772	1		+			
ANR	900806	PrimaryExpression	1		900772	0					
ANR	900807	Identifier	LINK_SIZE		900772	1					
ANR	900808	ForStatement	for ( ; ; )		900772	6					
ANR	900809	CompoundStatement		14:11:318:337	900772	0					
ANR	900810	IdentifierDeclStatement	int d ;	1749:2:66480:66485	900772	0	True				
ANR	900811	IdentifierDecl	d		900772	0					
ANR	900812	IdentifierDeclType	int		900772	0					
ANR	900813	Identifier	d		900772	1					
ANR	900814	IdentifierDeclStatement	"pcre_uchar * ce , * cs ;"	1750:2:66489:66508	900772	1	True				
ANR	900815	IdentifierDecl	* ce		900772	0					
ANR	900816	IdentifierDeclType	pcre_uchar *		900772	0					
ANR	900817	Identifier	ce		900772	1					
ANR	900818	IdentifierDecl	* cs		900772	1					
ANR	900819	IdentifierDeclType	pcre_uchar *		900772	0					
ANR	900820	Identifier	cs		900772	1					
ANR	900821	Statement	register	1751:2:66512:66519	900772	2	True				
ANR	900822	IdentifierDeclStatement	pcre_uchar op = * cc ;	1751:11:66521:66540	900772	3	True				
ANR	900823	IdentifierDecl	op = * cc		900772	0					
ANR	900824	IdentifierDeclType	pcre_uchar		900772	0					
ANR	900825	Identifier	op		900772	1					
ANR	900826	AssignmentExpression	op = * cc		900772	2		=			
ANR	900827	Identifier	op		900772	0					
ANR	900828	UnaryOperationExpression	* cc		900772	1					
ANR	900829	UnaryOperator	*		900772	0					
ANR	900830	Identifier	cc		900772	1					
ANR	900831	SwitchStatement	switch ( op )		900772	4					
ANR	900832	Condition	op	1753:10:66553:66554	900772	0	True				
ANR	900833	Identifier	op		900772	0					
ANR	900834	CompoundStatement		17:4:358:358	900772	1					
ANR	900835	Label	case OP_CBRA :	1760:4:66831:66843	900772	0	True				
ANR	900836	Identifier	OP_CBRA		900772	0					
ANR	900837	Label	case OP_BRA :	1761:4:66849:66860	900772	1	True				
ANR	900838	Identifier	OP_BRA		900772	0					
ANR	900839	Label	case OP_ONCE :	1762:4:66866:66878	900772	2	True				
ANR	900840	Identifier	OP_ONCE		900772	0					
ANR	900841	Label	case OP_ONCE_NC :	1763:4:66884:66899	900772	3	True				
ANR	900842	Identifier	OP_ONCE_NC		900772	0					
ANR	900843	Label	case OP_COND :	1764:4:66905:66917	900772	4	True				
ANR	900844	Identifier	OP_COND		900772	0					
ANR	900845	ExpressionStatement	"d = find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"	1765:4:66923:67014	900772	5	True				
ANR	900846	AssignmentExpression	"d = find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"		900772	0		=			
ANR	900847	Identifier	d		900772	0					
ANR	900848	CallExpression	"find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"		900772	1					
ANR	900849	Callee	find_fixedlength		900772	0					
ANR	900850	Identifier	find_fixedlength		900772	0					
ANR	900851	ArgumentList	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		900772	1					
ANR	900852	Argument	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		900772	0					
ANR	900853	AdditiveExpression	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		900772	0		+			
ANR	900854	Identifier	cc		900772	0					
ANR	900855	ConditionalExpression	( op == OP_CBRA ) ? IMM2_SIZE : 0		900772	1					
ANR	900856	Condition	op == OP_CBRA		900772	0					
ANR	900857	EqualityExpression	op == OP_CBRA		900772	0		==			
ANR	900858	Identifier	op		900772	0					
ANR	900859	Identifier	OP_CBRA		900772	1					
ANR	900860	Identifier	IMM2_SIZE		900772	1					
ANR	900861	PrimaryExpression	0		900772	2					
ANR	900862	Argument	utf		900772	1					
ANR	900863	Identifier	utf		900772	0					
ANR	900864	Argument	atend		900772	2					
ANR	900865	Identifier	atend		900772	0					
ANR	900866	Argument	cd		900772	3					
ANR	900867	Identifier	cd		900772	0					
ANR	900868	Argument	recurses		900772	4					
ANR	900869	Identifier	recurses		900772	0					
ANR	900870	IfStatement	if ( d < 0 )		900772	6					
ANR	900871	Condition	d < 0	1767:8:67024:67028	900772	0	True				
ANR	900872	RelationalExpression	d < 0		900772	0		<			
ANR	900873	Identifier	d		900772	0					
ANR	900874	PrimaryExpression	0		900772	1					
ANR	900875	ReturnStatement	return d ;	1767:15:67031:67039	900772	1	True				
ANR	900876	Identifier	d		900772	0					
ANR	900877	ExpressionStatement	branchlength += d	1768:4:67045:67062	900772	7	True				
ANR	900878	AssignmentExpression	branchlength += d		900772	0		+=			
ANR	900879	Identifier	branchlength		900772	0					
ANR	900880	Identifier	d		900772	1					
ANR	900881	DoStatement	do		900772	8					
ANR	900882	ExpressionStatement	"cc += GET ( cc , 1 )"	1769:7:67071:67087	900772	0	True				
ANR	900883	AssignmentExpression	"cc += GET ( cc , 1 )"		900772	0		+=			
ANR	900884	Identifier	cc		900772	0					
ANR	900885	CallExpression	"GET ( cc , 1 )"		900772	1					
ANR	900886	Callee	GET		900772	0					
ANR	900887	Identifier	GET		900772	0					
ANR	900888	ArgumentList	cc		900772	1					
ANR	900889	Argument	cc		900772	0					
ANR	900890	Identifier	cc		900772	0					
ANR	900891	Argument	1		900772	1					
ANR	900892	PrimaryExpression	1		900772	0					
ANR	900893	Condition	* cc == OP_ALT	1769:32:67096:67108	900772	1	True				
ANR	900894	EqualityExpression	* cc == OP_ALT		900772	0		==			
ANR	900895	UnaryOperationExpression	* cc		900772	0					
ANR	900896	UnaryOperator	*		900772	0					
ANR	900897	Identifier	cc		900772	1					
ANR	900898	Identifier	OP_ALT		900772	1					
ANR	900899	ExpressionStatement	cc += 1 + LINK_SIZE	1770:4:67116:67135	900772	9	True				
ANR	900900	AssignmentExpression	cc += 1 + LINK_SIZE		900772	0		+=			
ANR	900901	Identifier	cc		900772	0					
ANR	900902	AdditiveExpression	1 + LINK_SIZE		900772	1		+			
ANR	900903	PrimaryExpression	1		900772	0					
ANR	900904	Identifier	LINK_SIZE		900772	1					
ANR	900905	BreakStatement	break ;	1771:4:67141:67146	900772	10	True				
ANR	900906	Label	case OP_ALT :	1779:4:67520:67531	900772	11	True				
ANR	900907	Identifier	OP_ALT		900772	0					
ANR	900908	Label	case OP_KET :	1780:4:67537:67548	900772	12	True				
ANR	900909	Identifier	OP_KET		900772	0					
ANR	900910	Label	case OP_END :	1781:4:67554:67565	900772	13	True				
ANR	900911	Identifier	OP_END		900772	0					
ANR	900912	Label	case OP_ACCEPT :	1782:4:67571:67585	900772	14	True				
ANR	900913	Identifier	OP_ACCEPT		900772	0					
ANR	900914	Label	case OP_ASSERT_ACCEPT :	1783:4:67591:67612	900772	15	True				
ANR	900915	Identifier	OP_ASSERT_ACCEPT		900772	0					
ANR	900916	IfStatement	if ( length < 0 )		900772	16					
ANR	900917	Condition	length < 0	1784:8:67622:67631	900772	0	True				
ANR	900918	RelationalExpression	length < 0		900772	0		<			
ANR	900919	Identifier	length		900772	0					
ANR	900920	PrimaryExpression	0		900772	1					
ANR	900921	ExpressionStatement	length = branchlength	1784:20:67634:67655	900772	1	True				
ANR	900922	AssignmentExpression	length = branchlength		900772	0		=			
ANR	900923	Identifier	length		900772	0					
ANR	900924	Identifier	branchlength		900772	1					
ANR	900925	ElseStatement	else		900772	0					
ANR	900926	IfStatement	if ( length != branchlength )		900772	0					
ANR	900927	Condition	length != branchlength	1785:15:67672:67693	900772	0	True				
ANR	900928	EqualityExpression	length != branchlength		900772	0		!=			
ANR	900929	Identifier	length		900772	0					
ANR	900930	Identifier	branchlength		900772	1					
ANR	900931	ReturnStatement	return - 1 ;	1785:39:67696:67705	900772	1	True				
ANR	900932	UnaryOperationExpression	- 1		900772	0					
ANR	900933	UnaryOperator	-		900772	0					
ANR	900934	PrimaryExpression	1		900772	1					
ANR	900935	IfStatement	if ( * cc != OP_ALT )		900772	17					
ANR	900936	Condition	* cc != OP_ALT	1786:8:67715:67727	900772	0	True				
ANR	900937	EqualityExpression	* cc != OP_ALT		900772	0		!=			
ANR	900938	UnaryOperationExpression	* cc		900772	0					
ANR	900939	UnaryOperator	*		900772	0					
ANR	900940	Identifier	cc		900772	1					
ANR	900941	Identifier	OP_ALT		900772	1					
ANR	900942	ReturnStatement	return length ;	1786:23:67730:67743	900772	1	True				
ANR	900943	Identifier	length		900772	0					
ANR	900944	ExpressionStatement	cc += 1 + LINK_SIZE	1787:4:67749:67768	900772	18	True				
ANR	900945	AssignmentExpression	cc += 1 + LINK_SIZE		900772	0		+=			
ANR	900946	Identifier	cc		900772	0					
ANR	900947	AdditiveExpression	1 + LINK_SIZE		900772	1		+			
ANR	900948	PrimaryExpression	1		900772	0					
ANR	900949	Identifier	LINK_SIZE		900772	1					
ANR	900950	ExpressionStatement	branchlength = 0	1788:4:67774:67790	900772	19	True				
ANR	900951	AssignmentExpression	branchlength = 0		900772	0		=			
ANR	900952	Identifier	branchlength		900772	0					
ANR	900953	PrimaryExpression	0		900772	1					
ANR	900954	BreakStatement	break ;	1789:4:67796:67801	900772	20	True				
ANR	900955	Label	case OP_RECURSE :	1795:4:68011:68026	900772	21	True				
ANR	900956	Identifier	OP_RECURSE		900772	0					
ANR	900957	IfStatement	if ( ! atend )		900772	22					
ANR	900958	Condition	! atend	1796:8:68036:68041	900772	0	True				
ANR	900959	UnaryOperationExpression	! atend		900772	0					
ANR	900960	UnaryOperator	!		900772	0					
ANR	900961	Identifier	atend		900772	1					
ANR	900962	ReturnStatement	return - 3 ;	1796:16:68044:68053	900772	1	True				
ANR	900963	UnaryOperationExpression	- 3		900772	0					
ANR	900964	UnaryOperator	-		900772	0					
ANR	900965	PrimaryExpression	3		900772	1					
ANR	900966	ExpressionStatement	"cs = ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"	1797:4:68059:68110	900772	23	True				
ANR	900967	AssignmentExpression	"cs = ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		900772	0		=			
ANR	900968	Identifier	cs		900772	0					
ANR	900969	AssignmentExpression	"ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		900772	1		=			
ANR	900970	Identifier	ce		900772	0					
ANR	900971	AdditiveExpression	"( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		900772	1		+			
ANR	900972	CastExpression	( pcre_uchar * ) cd -> start_code		900772	0					
ANR	900973	CastTarget	pcre_uchar *		900772	0					
ANR	900974	PtrMemberAccess	cd -> start_code		900772	1					
ANR	900975	Identifier	cd		900772	0					
ANR	900976	Identifier	start_code		900772	1					
ANR	900977	CallExpression	"GET ( cc , 1 )"		900772	1					
ANR	900978	Callee	GET		900772	0					
ANR	900979	Identifier	GET		900772	0					
ANR	900980	ArgumentList	cc		900772	1					
ANR	900981	Argument	cc		900772	0					
ANR	900982	Identifier	cc		900772	0					
ANR	900983	Argument	1		900772	1					
ANR	900984	PrimaryExpression	1		900772	0					
ANR	900985	DoStatement	do		900772	24					
ANR	900986	ExpressionStatement	"ce += GET ( ce , 1 )"	1798:7:68143:68159	900772	0	True				
ANR	900987	AssignmentExpression	"ce += GET ( ce , 1 )"		900772	0		+=			
ANR	900988	Identifier	ce		900772	0					
ANR	900989	CallExpression	"GET ( ce , 1 )"		900772	1					
ANR	900990	Callee	GET		900772	0					
ANR	900991	Identifier	GET		900772	0					
ANR	900992	ArgumentList	ce		900772	1					
ANR	900993	Argument	ce		900772	0					
ANR	900994	Identifier	ce		900772	0					
ANR	900995	Argument	1		900772	1					
ANR	900996	PrimaryExpression	1		900772	0					
ANR	900997	Condition	* ce == OP_ALT	1798:32:68168:68180	900772	1	True				
ANR	900998	EqualityExpression	* ce == OP_ALT		900772	0		==			
ANR	900999	UnaryOperationExpression	* ce		900772	0					
ANR	901000	UnaryOperator	*		900772	0					
ANR	901001	Identifier	ce		900772	1					
ANR	901002	Identifier	OP_ALT		900772	1					
ANR	901003	IfStatement	if ( cc > cs && cc < ce )		900772	25					
ANR	901004	Condition	cc > cs && cc < ce	1799:8:68223:68240	900772	0	True				
ANR	901005	AndExpression	cc > cs && cc < ce		900772	0		&&			
ANR	901006	RelationalExpression	cc > cs		900772	0		>			
ANR	901007	Identifier	cc		900772	0					
ANR	901008	Identifier	cs		900772	1					
ANR	901009	RelationalExpression	cc < ce		900772	1		<			
ANR	901010	Identifier	cc		900772	0					
ANR	901011	Identifier	ce		900772	1					
ANR	901012	ReturnStatement	return - 1 ;	1799:28:68243:68252	900772	1	True				
ANR	901013	UnaryOperationExpression	- 1		900772	0					
ANR	901014	UnaryOperator	-		900772	0					
ANR	901015	PrimaryExpression	1		900772	1					
ANR	901016	ElseStatement	else		900772	0					
ANR	901017	CompoundStatement		65:6:2144:2171	900772	0					
ANR	901018	IdentifierDeclStatement	recurse_check * r = recurses ;	1802:6:68347:68374	900772	0	True				
ANR	901019	IdentifierDecl	* r = recurses		900772	0					
ANR	901020	IdentifierDeclType	recurse_check *		900772	0					
ANR	901021	Identifier	r		900772	1					
ANR	901022	AssignmentExpression	* r = recurses		900772	2		=			
ANR	901023	Identifier	recurses		900772	0					
ANR	901024	Identifier	recurses		900772	1					
ANR	901025	ForStatement	for ( r = recurses ; r != NULL ; r = r -> prev )		900772	1					
ANR	901026	ForInit	r = recurses ;	1803:11:68387:68399	900772	0	True				
ANR	901027	AssignmentExpression	r = recurses		900772	0		=			
ANR	901028	Identifier	r		900772	0					
ANR	901029	Identifier	recurses		900772	1					
ANR	901030	Condition	r != NULL	1803:25:68401:68409	900772	1	True				
ANR	901031	EqualityExpression	r != NULL		900772	0		!=			
ANR	901032	Identifier	r		900772	0					
ANR	901033	Identifier	NULL		900772	1					
ANR	901034	AssignmentExpression	r = r -> prev	1803:36:68412:68422	900772	2	True	=			
ANR	901035	Identifier	r		900772	0					
ANR	901036	PtrMemberAccess	r -> prev		900772	1					
ANR	901037	Identifier	r		900772	0					
ANR	901038	Identifier	prev		900772	1					
ANR	901039	IfStatement	if ( r -> group == cs )		900772	3					
ANR	901040	Condition	r -> group == cs	1803:53:68429:68442	900772	0	True				
ANR	901041	EqualityExpression	r -> group == cs		900772	0		==			
ANR	901042	PtrMemberAccess	r -> group		900772	0					
ANR	901043	Identifier	r		900772	0					
ANR	901044	Identifier	group		900772	1					
ANR	901045	Identifier	cs		900772	1					
ANR	901046	BreakStatement	break ;	1803:69:68445:68450	900772	1	True				
ANR	901047	IfStatement	if ( r != NULL )		900772	2					
ANR	901048	Condition	r != NULL	1804:10:68462:68470	900772	0	True				
ANR	901049	EqualityExpression	r != NULL		900772	0		!=			
ANR	901050	Identifier	r		900772	0					
ANR	901051	Identifier	NULL		900772	1					
ANR	901052	ReturnStatement	return - 1 ;	1804:21:68473:68482	900772	1	True				
ANR	901053	UnaryOperationExpression	- 1		900772	0					
ANR	901054	UnaryOperator	-		900772	0					
ANR	901055	PrimaryExpression	1		900772	1					
ANR	901056	ExpressionStatement	this_recurse . prev = recurses	1806:4:68521:68549	900772	26	True				
ANR	901057	AssignmentExpression	this_recurse . prev = recurses		900772	0		=			
ANR	901058	MemberAccess	this_recurse . prev		900772	0					
ANR	901059	Identifier	this_recurse		900772	0					
ANR	901060	Identifier	prev		900772	1					
ANR	901061	Identifier	recurses		900772	1					
ANR	901062	ExpressionStatement	this_recurse . group = cs	1807:4:68555:68578	900772	27	True				
ANR	901063	AssignmentExpression	this_recurse . group = cs		900772	0		=			
ANR	901064	MemberAccess	this_recurse . group		900772	0					
ANR	901065	Identifier	this_recurse		900772	0					
ANR	901066	Identifier	group		900772	1					
ANR	901067	Identifier	cs		900772	1					
ANR	901068	ExpressionStatement	"d = find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"	1808:4:68584:68651	900772	28	True				
ANR	901069	AssignmentExpression	"d = find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"		900772	0		=			
ANR	901070	Identifier	d		900772	0					
ANR	901071	CallExpression	"find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"		900772	1					
ANR	901072	Callee	find_fixedlength		900772	0					
ANR	901073	Identifier	find_fixedlength		900772	0					
ANR	901074	ArgumentList	cs + IMM2_SIZE		900772	1					
ANR	901075	Argument	cs + IMM2_SIZE		900772	0					
ANR	901076	AdditiveExpression	cs + IMM2_SIZE		900772	0		+			
ANR	901077	Identifier	cs		900772	0					
ANR	901078	Identifier	IMM2_SIZE		900772	1					
ANR	901079	Argument	utf		900772	1					
ANR	901080	Identifier	utf		900772	0					
ANR	901081	Argument	atend		900772	2					
ANR	901082	Identifier	atend		900772	0					
ANR	901083	Argument	cd		900772	3					
ANR	901084	Identifier	cd		900772	0					
ANR	901085	Argument	& this_recurse		900772	4					
ANR	901086	UnaryOperationExpression	& this_recurse		900772	0					
ANR	901087	UnaryOperator	&		900772	0					
ANR	901088	Identifier	this_recurse		900772	1					
ANR	901089	IfStatement	if ( d < 0 )		900772	29					
ANR	901090	Condition	d < 0	1809:8:68661:68665	900772	0	True				
ANR	901091	RelationalExpression	d < 0		900772	0		<			
ANR	901092	Identifier	d		900772	0					
ANR	901093	PrimaryExpression	0		900772	1					
ANR	901094	ReturnStatement	return d ;	1809:15:68668:68676	900772	1	True				
ANR	901095	Identifier	d		900772	0					
ANR	901096	ExpressionStatement	branchlength += d	1810:4:68682:68699	900772	30	True				
ANR	901097	AssignmentExpression	branchlength += d		900772	0		+=			
ANR	901098	Identifier	branchlength		900772	0					
ANR	901099	Identifier	d		900772	1					
ANR	901100	ExpressionStatement	cc += 1 + LINK_SIZE	1811:4:68705:68724	900772	31	True				
ANR	901101	AssignmentExpression	cc += 1 + LINK_SIZE		900772	0		+=			
ANR	901102	Identifier	cc		900772	0					
ANR	901103	AdditiveExpression	1 + LINK_SIZE		900772	1		+			
ANR	901104	PrimaryExpression	1		900772	0					
ANR	901105	Identifier	LINK_SIZE		900772	1					
ANR	901106	BreakStatement	break ;	1812:4:68730:68735	900772	32	True				
ANR	901107	Label	case OP_ASSERT :	1816:4:68785:68799	900772	33	True				
ANR	901108	Identifier	OP_ASSERT		900772	0					
ANR	901109	Label	case OP_ASSERT_NOT :	1817:4:68805:68823	900772	34	True				
ANR	901110	Identifier	OP_ASSERT_NOT		900772	0					
ANR	901111	Label	case OP_ASSERTBACK :	1818:4:68829:68847	900772	35	True				
ANR	901112	Identifier	OP_ASSERTBACK		900772	0					
ANR	901113	Label	case OP_ASSERTBACK_NOT :	1819:4:68853:68875	900772	36	True				
ANR	901114	Identifier	OP_ASSERTBACK_NOT		900772	0					
ANR	901115	DoStatement	do		900772	37					
ANR	901116	ExpressionStatement	"cc += GET ( cc , 1 )"	1820:7:68884:68900	900772	0	True				
ANR	901117	AssignmentExpression	"cc += GET ( cc , 1 )"		900772	0		+=			
ANR	901118	Identifier	cc		900772	0					
ANR	901119	CallExpression	"GET ( cc , 1 )"		900772	1					
ANR	901120	Callee	GET		900772	0					
ANR	901121	Identifier	GET		900772	0					
ANR	901122	ArgumentList	cc		900772	1					
ANR	901123	Argument	cc		900772	0					
ANR	901124	Identifier	cc		900772	0					
ANR	901125	Argument	1		900772	1					
ANR	901126	PrimaryExpression	1		900772	0					
ANR	901127	Condition	* cc == OP_ALT	1820:32:68909:68921	900772	1	True				
ANR	901128	EqualityExpression	* cc == OP_ALT		900772	0		==			
ANR	901129	UnaryOperationExpression	* cc		900772	0					
ANR	901130	UnaryOperator	*		900772	0					
ANR	901131	Identifier	cc		900772	1					
ANR	901132	Identifier	OP_ALT		900772	1					
ANR	901133	ExpressionStatement	cc += 1 + LINK_SIZE	1821:4:68929:68948	900772	38	True				
ANR	901134	AssignmentExpression	cc += 1 + LINK_SIZE		900772	0		+=			
ANR	901135	Identifier	cc		900772	0					
ANR	901136	AdditiveExpression	1 + LINK_SIZE		900772	1		+			
ANR	901137	PrimaryExpression	1		900772	0					
ANR	901138	Identifier	LINK_SIZE		900772	1					
ANR	901139	BreakStatement	break ;	1822:4:68954:68959	900772	39	True				
ANR	901140	Label	case OP_MARK :	1826:4:69017:69029	900772	40	True				
ANR	901141	Identifier	OP_MARK		900772	0					
ANR	901142	Label	case OP_PRUNE_ARG :	1827:4:69035:69052	900772	41	True				
ANR	901143	Identifier	OP_PRUNE_ARG		900772	0					
ANR	901144	Label	case OP_SKIP_ARG :	1828:4:69058:69074	900772	42	True				
ANR	901145	Identifier	OP_SKIP_ARG		900772	0					
ANR	901146	Label	case OP_THEN_ARG :	1829:4:69080:69096	900772	43	True				
ANR	901147	Identifier	OP_THEN_ARG		900772	0					
ANR	901148	ExpressionStatement	cc += cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]	1830:4:69102:69137	900772	44	True				
ANR	901149	AssignmentExpression	cc += cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]		900772	0		+=			
ANR	901150	Identifier	cc		900772	0					
ANR	901151	AdditiveExpression	cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]		900772	1		+			
ANR	901152	ArrayIndexing	cc [ 1 ]		900772	0					
ANR	901153	Identifier	cc		900772	0					
ANR	901154	PrimaryExpression	1		900772	1					
ANR	901155	ArrayIndexing	PRIV ( OP_lengths ) [ * cc ]		900772	1					
ANR	901156	CallExpression	PRIV ( OP_lengths )		900772	0					
ANR	901157	Callee	PRIV		900772	0					
ANR	901158	Identifier	PRIV		900772	0					
ANR	901159	ArgumentList	OP_lengths		900772	1					
ANR	901160	Argument	OP_lengths		900772	0					
ANR	901161	Identifier	OP_lengths		900772	0					
ANR	901162	UnaryOperationExpression	* cc		900772	1					
ANR	901163	UnaryOperator	*		900772	0					
ANR	901164	Identifier	cc		900772	1					
ANR	901165	BreakStatement	break ;	1831:4:69143:69148	900772	45	True				
ANR	901166	Label	case OP_CALLOUT :	1833:4:69155:69170	900772	46	True				
ANR	901167	Identifier	OP_CALLOUT		900772	0					
ANR	901168	Label	case OP_CIRC :	1834:4:69176:69188	900772	47	True				
ANR	901169	Identifier	OP_CIRC		900772	0					
ANR	901170	Label	case OP_CIRCM :	1835:4:69194:69207	900772	48	True				
ANR	901171	Identifier	OP_CIRCM		900772	0					
ANR	901172	Label	case OP_CLOSE :	1836:4:69213:69226	900772	49	True				
ANR	901173	Identifier	OP_CLOSE		900772	0					
ANR	901174	Label	case OP_COMMIT :	1837:4:69232:69246	900772	50	True				
ANR	901175	Identifier	OP_COMMIT		900772	0					
ANR	901176	Label	case OP_CREF :	1838:4:69252:69264	900772	51	True				
ANR	901177	Identifier	OP_CREF		900772	0					
ANR	901178	Label	case OP_DEF :	1839:4:69270:69281	900772	52	True				
ANR	901179	Identifier	OP_DEF		900772	0					
ANR	901180	Label	case OP_DNCREF :	1840:4:69287:69301	900772	53	True				
ANR	901181	Identifier	OP_DNCREF		900772	0					
ANR	901182	Label	case OP_DNRREF :	1841:4:69307:69321	900772	54	True				
ANR	901183	Identifier	OP_DNRREF		900772	0					
ANR	901184	Label	case OP_DOLL :	1842:4:69327:69339	900772	55	True				
ANR	901185	Identifier	OP_DOLL		900772	0					
ANR	901186	Label	case OP_DOLLM :	1843:4:69345:69358	900772	56	True				
ANR	901187	Identifier	OP_DOLLM		900772	0					
ANR	901188	Label	case OP_EOD :	1844:4:69364:69375	900772	57	True				
ANR	901189	Identifier	OP_EOD		900772	0					
ANR	901190	Label	case OP_EODN :	1845:4:69381:69393	900772	58	True				
ANR	901191	Identifier	OP_EODN		900772	0					
ANR	901192	Label	case OP_FAIL :	1846:4:69399:69411	900772	59	True				
ANR	901193	Identifier	OP_FAIL		900772	0					
ANR	901194	Label	case OP_NOT_WORD_BOUNDARY :	1847:4:69417:69442	900772	60	True				
ANR	901195	Identifier	OP_NOT_WORD_BOUNDARY		900772	0					
ANR	901196	Label	case OP_PRUNE :	1848:4:69448:69461	900772	61	True				
ANR	901197	Identifier	OP_PRUNE		900772	0					
ANR	901198	Label	case OP_REVERSE :	1849:4:69467:69482	900772	62	True				
ANR	901199	Identifier	OP_REVERSE		900772	0					
ANR	901200	Label	case OP_RREF :	1850:4:69488:69500	900772	63	True				
ANR	901201	Identifier	OP_RREF		900772	0					
ANR	901202	Label	case OP_SET_SOM :	1851:4:69506:69521	900772	64	True				
ANR	901203	Identifier	OP_SET_SOM		900772	0					
ANR	901204	Label	case OP_SKIP :	1852:4:69527:69539	900772	65	True				
ANR	901205	Identifier	OP_SKIP		900772	0					
ANR	901206	Label	case OP_SOD :	1853:4:69545:69556	900772	66	True				
ANR	901207	Identifier	OP_SOD		900772	0					
ANR	901208	Label	case OP_SOM :	1854:4:69562:69573	900772	67	True				
ANR	901209	Identifier	OP_SOM		900772	0					
ANR	901210	Label	case OP_THEN :	1855:4:69579:69591	900772	68	True				
ANR	901211	Identifier	OP_THEN		900772	0					
ANR	901212	Label	case OP_WORD_BOUNDARY :	1856:4:69597:69618	900772	69	True				
ANR	901213	Identifier	OP_WORD_BOUNDARY		900772	0					
ANR	901214	ExpressionStatement	cc += PRIV ( OP_lengths ) [ * cc ]	1857:4:69624:69651	900772	70	True				
ANR	901215	AssignmentExpression	cc += PRIV ( OP_lengths ) [ * cc ]		900772	0		+=			
ANR	901216	Identifier	cc		900772	0					
ANR	901217	ArrayIndexing	PRIV ( OP_lengths ) [ * cc ]		900772	1					
ANR	901218	CallExpression	PRIV ( OP_lengths )		900772	0					
ANR	901219	Callee	PRIV		900772	0					
ANR	901220	Identifier	PRIV		900772	0					
ANR	901221	ArgumentList	OP_lengths		900772	1					
ANR	901222	Argument	OP_lengths		900772	0					
ANR	901223	Identifier	OP_lengths		900772	0					
ANR	901224	UnaryOperationExpression	* cc		900772	1					
ANR	901225	UnaryOperator	*		900772	0					
ANR	901226	Identifier	cc		900772	1					
ANR	901227	BreakStatement	break ;	1858:4:69657:69662	900772	71	True				
ANR	901228	Label	case OP_CHAR :	1862:4:69706:69718	900772	72	True				
ANR	901229	Identifier	OP_CHAR		900772	0					
ANR	901230	Label	case OP_CHARI :	1863:4:69724:69737	900772	73	True				
ANR	901231	Identifier	OP_CHARI		900772	0					
ANR	901232	Label	case OP_NOT :	1864:4:69743:69754	900772	74	True				
ANR	901233	Identifier	OP_NOT		900772	0					
ANR	901234	Label	case OP_NOTI :	1865:4:69760:69772	900772	75	True				
ANR	901235	Identifier	OP_NOTI		900772	0					
ANR	901236	ExpressionStatement	branchlength ++	1866:4:69778:69792	900772	76	True				
ANR	901237	PostIncDecOperationExpression	branchlength ++		900772	0					
ANR	901238	Identifier	branchlength		900772	0					
ANR	901239	IncDec	++		900772	1					
ANR	901240	ExpressionStatement	cc += 2	1867:4:69798:69805	900772	77	True				
ANR	901241	AssignmentExpression	cc += 2		900772	0		+=			
ANR	901242	Identifier	cc		900772	0					
ANR	901243	PrimaryExpression	2		900772	1					
ANR	901244	IfStatement	if ( utf && HAS_EXTRALEN ( cc [ - 1 ] ) )		900772	78					
ANR	901245	Condition	utf && HAS_EXTRALEN ( cc [ - 1 ] )	1869:8:69834:69860	900772	0	True				
ANR	901246	AndExpression	utf && HAS_EXTRALEN ( cc [ - 1 ] )		900772	0		&&			
ANR	901247	Identifier	utf		900772	0					
ANR	901248	CallExpression	HAS_EXTRALEN ( cc [ - 1 ] )		900772	1					
ANR	901249	Callee	HAS_EXTRALEN		900772	0					
ANR	901250	Identifier	HAS_EXTRALEN		900772	0					
ANR	901251	ArgumentList	cc [ - 1 ]		900772	1					
ANR	901252	Argument	cc [ - 1 ]		900772	0					
ANR	901253	ArrayIndexing	cc [ - 1 ]		900772	0					
ANR	901254	Identifier	cc		900772	0					
ANR	901255	UnaryOperationExpression	- 1		900772	1					
ANR	901256	UnaryOperator	-		900772	0					
ANR	901257	PrimaryExpression	1		900772	1					
ANR	901258	ExpressionStatement	cc += GET_EXTRALEN ( cc [ - 1 ] )	1869:37:69863:69889	900772	1	True				
ANR	901259	AssignmentExpression	cc += GET_EXTRALEN ( cc [ - 1 ] )		900772	0		+=			
ANR	901260	Identifier	cc		900772	0					
ANR	901261	CallExpression	GET_EXTRALEN ( cc [ - 1 ] )		900772	1					
ANR	901262	Callee	GET_EXTRALEN		900772	0					
ANR	901263	Identifier	GET_EXTRALEN		900772	0					
ANR	901264	ArgumentList	cc [ - 1 ]		900772	1					
ANR	901265	Argument	cc [ - 1 ]		900772	0					
ANR	901266	ArrayIndexing	cc [ - 1 ]		900772	0					
ANR	901267	Identifier	cc		900772	0					
ANR	901268	UnaryOperationExpression	- 1		900772	1					
ANR	901269	UnaryOperator	-		900772	0					
ANR	901270	PrimaryExpression	1		900772	1					
ANR	901271	BreakStatement	break ;	1871:4:69902:69907	900772	79	True				
ANR	901272	Label	case OP_EXACT :	1876:4:70053:70066	900772	80	True				
ANR	901273	Identifier	OP_EXACT		900772	0					
ANR	901274	Label	case OP_EXACTI :	1877:4:70072:70086	900772	81	True				
ANR	901275	Identifier	OP_EXACTI		900772	0					
ANR	901276	Label	case OP_NOTEXACT :	1878:4:70092:70108	900772	82	True				
ANR	901277	Identifier	OP_NOTEXACT		900772	0					
ANR	901278	Label	case OP_NOTEXACTI :	1879:4:70114:70131	900772	83	True				
ANR	901279	Identifier	OP_NOTEXACTI		900772	0					
ANR	901280	ExpressionStatement	"branchlength += ( int ) GET2 ( cc , 1 )"	1880:4:70137:70168	900772	84	True				
ANR	901281	AssignmentExpression	"branchlength += ( int ) GET2 ( cc , 1 )"		900772	0		+=			
ANR	901282	Identifier	branchlength		900772	0					
ANR	901283	CastExpression	"( int ) GET2 ( cc , 1 )"		900772	1					
ANR	901284	CastTarget	int		900772	0					
ANR	901285	CallExpression	"GET2 ( cc , 1 )"		900772	1					
ANR	901286	Callee	GET2		900772	0					
ANR	901287	Identifier	GET2		900772	0					
ANR	901288	ArgumentList	cc		900772	1					
ANR	901289	Argument	cc		900772	0					
ANR	901290	Identifier	cc		900772	0					
ANR	901291	Argument	1		900772	1					
ANR	901292	PrimaryExpression	1		900772	0					
ANR	901293	ExpressionStatement	cc += 2 + IMM2_SIZE	1881:4:70174:70193	900772	85	True				
ANR	901294	AssignmentExpression	cc += 2 + IMM2_SIZE		900772	0		+=			
ANR	901295	Identifier	cc		900772	0					
ANR	901296	AdditiveExpression	2 + IMM2_SIZE		900772	1		+			
ANR	901297	PrimaryExpression	2		900772	0					
ANR	901298	Identifier	IMM2_SIZE		900772	1					
ANR	901299	IfStatement	if ( utf && HAS_EXTRALEN ( cc [ - 1 ] ) )		900772	86					
ANR	901300	Condition	utf && HAS_EXTRALEN ( cc [ - 1 ] )	1883:8:70222:70248	900772	0	True				
ANR	901301	AndExpression	utf && HAS_EXTRALEN ( cc [ - 1 ] )		900772	0		&&			
ANR	901302	Identifier	utf		900772	0					
ANR	901303	CallExpression	HAS_EXTRALEN ( cc [ - 1 ] )		900772	1					
ANR	901304	Callee	HAS_EXTRALEN		900772	0					
ANR	901305	Identifier	HAS_EXTRALEN		900772	0					
ANR	901306	ArgumentList	cc [ - 1 ]		900772	1					
ANR	901307	Argument	cc [ - 1 ]		900772	0					
ANR	901308	ArrayIndexing	cc [ - 1 ]		900772	0					
ANR	901309	Identifier	cc		900772	0					
ANR	901310	UnaryOperationExpression	- 1		900772	1					
ANR	901311	UnaryOperator	-		900772	0					
ANR	901312	PrimaryExpression	1		900772	1					
ANR	901313	ExpressionStatement	cc += GET_EXTRALEN ( cc [ - 1 ] )	1883:37:70251:70277	900772	1	True				
ANR	901314	AssignmentExpression	cc += GET_EXTRALEN ( cc [ - 1 ] )		900772	0		+=			
ANR	901315	Identifier	cc		900772	0					
ANR	901316	CallExpression	GET_EXTRALEN ( cc [ - 1 ] )		900772	1					
ANR	901317	Callee	GET_EXTRALEN		900772	0					
ANR	901318	Identifier	GET_EXTRALEN		900772	0					
ANR	901319	ArgumentList	cc [ - 1 ]		900772	1					
ANR	901320	Argument	cc [ - 1 ]		900772	0					
ANR	901321	ArrayIndexing	cc [ - 1 ]		900772	0					
ANR	901322	Identifier	cc		900772	0					
ANR	901323	UnaryOperationExpression	- 1		900772	1					
ANR	901324	UnaryOperator	-		900772	0					
ANR	901325	PrimaryExpression	1		900772	1					
ANR	901326	BreakStatement	break ;	1885:4:70290:70295	900772	87	True				
ANR	901327	Label	case OP_TYPEEXACT :	1887:4:70302:70319	900772	88	True				
ANR	901328	Identifier	OP_TYPEEXACT		900772	0					
ANR	901329	ExpressionStatement	"branchlength += GET2 ( cc , 1 )"	1888:4:70325:70351	900772	89	True				
ANR	901330	AssignmentExpression	"branchlength += GET2 ( cc , 1 )"		900772	0		+=			
ANR	901331	Identifier	branchlength		900772	0					
ANR	901332	CallExpression	"GET2 ( cc , 1 )"		900772	1					
ANR	901333	Callee	GET2		900772	0					
ANR	901334	Identifier	GET2		900772	0					
ANR	901335	ArgumentList	cc		900772	1					
ANR	901336	Argument	cc		900772	0					
ANR	901337	Identifier	cc		900772	0					
ANR	901338	Argument	1		900772	1					
ANR	901339	PrimaryExpression	1		900772	0					
ANR	901340	IfStatement	if ( cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP )		900772	90					
ANR	901341	Condition	cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP	1889:8:70361:70423	900772	0	True				
ANR	901342	OrExpression	cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP		900772	0		||			
ANR	901343	EqualityExpression	cc [ 1 + IMM2_SIZE ] == OP_PROP		900772	0		==			
ANR	901344	ArrayIndexing	cc [ 1 + IMM2_SIZE ]		900772	0					
ANR	901345	Identifier	cc		900772	0					
ANR	901346	AdditiveExpression	1 + IMM2_SIZE		900772	1		+			
ANR	901347	PrimaryExpression	1		900772	0					
ANR	901348	Identifier	IMM2_SIZE		900772	1					
ANR	901349	Identifier	OP_PROP		900772	1					
ANR	901350	EqualityExpression	cc [ 1 + IMM2_SIZE ] == OP_NOTPROP		900772	1		==			
ANR	901351	ArrayIndexing	cc [ 1 + IMM2_SIZE ]		900772	0					
ANR	901352	Identifier	cc		900772	0					
ANR	901353	AdditiveExpression	1 + IMM2_SIZE		900772	1		+			
ANR	901354	PrimaryExpression	1		900772	0					
ANR	901355	Identifier	IMM2_SIZE		900772	1					
ANR	901356	Identifier	OP_NOTPROP		900772	1					
ANR	901357	ExpressionStatement	cc += 2	1890:6:70432:70439	900772	1	True				
ANR	901358	AssignmentExpression	cc += 2		900772	0		+=			
ANR	901359	Identifier	cc		900772	0					
ANR	901360	PrimaryExpression	2		900772	1					
ANR	901361	ExpressionStatement	cc += 1 + IMM2_SIZE + 1	1891:4:70445:70468	900772	91	True				
ANR	901362	AssignmentExpression	cc += 1 + IMM2_SIZE + 1		900772	0		+=			
ANR	901363	Identifier	cc		900772	0					
ANR	901364	AdditiveExpression	1 + IMM2_SIZE + 1		900772	1		+			
ANR	901365	PrimaryExpression	1		900772	0					
ANR	901366	AdditiveExpression	IMM2_SIZE + 1		900772	1		+			
ANR	901367	Identifier	IMM2_SIZE		900772	0					
ANR	901368	PrimaryExpression	1		900772	1					
ANR	901369	BreakStatement	break ;	1892:4:70474:70479	900772	92	True				
ANR	901370	Label	case OP_PROP :	1896:4:70525:70537	900772	93	True				
ANR	901371	Identifier	OP_PROP		900772	0					
ANR	901372	Label	case OP_NOTPROP :	1897:4:70543:70558	900772	94	True				
ANR	901373	Identifier	OP_NOTPROP		900772	0					
ANR	901374	ExpressionStatement	cc += 2	1898:4:70564:70571	900772	95	True				
ANR	901375	AssignmentExpression	cc += 2		900772	0		+=			
ANR	901376	Identifier	cc		900772	0					
ANR	901377	PrimaryExpression	2		900772	1					
ANR	901378	Label	case OP_HSPACE :	1901:4:70601:70615	900772	96	True				
ANR	901379	Identifier	OP_HSPACE		900772	0					
ANR	901380	Label	case OP_VSPACE :	1902:4:70621:70635	900772	97	True				
ANR	901381	Identifier	OP_VSPACE		900772	0					
ANR	901382	Label	case OP_NOT_HSPACE :	1903:4:70641:70659	900772	98	True				
ANR	901383	Identifier	OP_NOT_HSPACE		900772	0					
ANR	901384	Label	case OP_NOT_VSPACE :	1904:4:70665:70683	900772	99	True				
ANR	901385	Identifier	OP_NOT_VSPACE		900772	0					
ANR	901386	Label	case OP_NOT_DIGIT :	1905:4:70689:70706	900772	100	True				
ANR	901387	Identifier	OP_NOT_DIGIT		900772	0					
ANR	901388	Label	case OP_DIGIT :	1906:4:70712:70725	900772	101	True				
ANR	901389	Identifier	OP_DIGIT		900772	0					
ANR	901390	Label	case OP_NOT_WHITESPACE :	1907:4:70731:70753	900772	102	True				
ANR	901391	Identifier	OP_NOT_WHITESPACE		900772	0					
ANR	901392	Label	case OP_WHITESPACE :	1908:4:70759:70777	900772	103	True				
ANR	901393	Identifier	OP_WHITESPACE		900772	0					
ANR	901394	Label	case OP_NOT_WORDCHAR :	1909:4:70783:70803	900772	104	True				
ANR	901395	Identifier	OP_NOT_WORDCHAR		900772	0					
ANR	901396	Label	case OP_WORDCHAR :	1910:4:70809:70825	900772	105	True				
ANR	901397	Identifier	OP_WORDCHAR		900772	0					
ANR	901398	Label	case OP_ANY :	1911:4:70831:70842	900772	106	True				
ANR	901399	Identifier	OP_ANY		900772	0					
ANR	901400	Label	case OP_ALLANY :	1912:4:70848:70862	900772	107	True				
ANR	901401	Identifier	OP_ALLANY		900772	0					
ANR	901402	ExpressionStatement	branchlength ++	1913:4:70868:70882	900772	108	True				
ANR	901403	PostIncDecOperationExpression	branchlength ++		900772	0					
ANR	901404	Identifier	branchlength		900772	0					
ANR	901405	IncDec	++		900772	1					
ANR	901406	ExpressionStatement	cc ++	1914:4:70888:70892	900772	109	True				
ANR	901407	PostIncDecOperationExpression	cc ++		900772	0					
ANR	901408	Identifier	cc		900772	0					
ANR	901409	IncDec	++		900772	1					
ANR	901410	BreakStatement	break ;	1915:4:70898:70903	900772	110	True				
ANR	901411	Label	case OP_ANYBYTE :	1920:4:71033:71048	900772	111	True				
ANR	901412	Identifier	OP_ANYBYTE		900772	0					
ANR	901413	ReturnStatement	return - 2 ;	1921:4:71054:71063	900772	112	True				
ANR	901414	UnaryOperationExpression	- 2		900772	0					
ANR	901415	UnaryOperator	-		900772	0					
ANR	901416	PrimaryExpression	2		900772	1					
ANR	901417	Label	case OP_CLASS :	1925:4:71123:71136	900772	113	True				
ANR	901418	Identifier	OP_CLASS		900772	0					
ANR	901419	Label	case OP_NCLASS :	1926:4:71142:71156	900772	114	True				
ANR	901420	Identifier	OP_NCLASS		900772	0					
ANR	901421	Label	case OP_XCLASS :	1928:4:71238:71252	900772	115	True				
ANR	901422	Identifier	OP_XCLASS		900772	0					
ANR	901423	IfStatement	if ( op == OP_XCLASS )		900772	116					
ANR	901424	Condition	op == OP_XCLASS	1931:8:71380:71394	900772	0	True				
ANR	901425	EqualityExpression	op == OP_XCLASS		900772	0		==			
ANR	901426	Identifier	op		900772	0					
ANR	901427	Identifier	OP_XCLASS		900772	1					
ANR	901428	ExpressionStatement	"cc += GET ( cc , 1 )"	1932:6:71403:71419	900772	1	True				
ANR	901429	AssignmentExpression	"cc += GET ( cc , 1 )"		900772	0		+=			
ANR	901430	Identifier	cc		900772	0					
ANR	901431	CallExpression	"GET ( cc , 1 )"		900772	1					
ANR	901432	Callee	GET		900772	0					
ANR	901433	Identifier	GET		900772	0					
ANR	901434	ArgumentList	cc		900772	1					
ANR	901435	Argument	cc		900772	0					
ANR	901436	Identifier	cc		900772	0					
ANR	901437	Argument	1		900772	1					
ANR	901438	PrimaryExpression	1		900772	0					
ANR	901439	ElseStatement	else		900772	0					
ANR	901440	ExpressionStatement	cc += PRIV ( OP_lengths ) [ OP_CLASS ]	1934:6:71436:71468	900772	0	True				
ANR	901441	AssignmentExpression	cc += PRIV ( OP_lengths ) [ OP_CLASS ]		900772	0		+=			
ANR	901442	Identifier	cc		900772	0					
ANR	901443	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CLASS ]		900772	1					
ANR	901444	CallExpression	PRIV ( OP_lengths )		900772	0					
ANR	901445	Callee	PRIV		900772	0					
ANR	901446	Identifier	PRIV		900772	0					
ANR	901447	ArgumentList	OP_lengths		900772	1					
ANR	901448	Argument	OP_lengths		900772	0					
ANR	901449	Identifier	OP_lengths		900772	0					
ANR	901450	Identifier	OP_CLASS		900772	1					
ANR	901451	SwitchStatement	switch ( * cc )		900772	117					
ANR	901452	Condition	* cc	1939:12:71534:71536	900772	0	True				
ANR	901453	UnaryOperationExpression	* cc		900772	0					
ANR	901454	UnaryOperator	*		900772	0					
ANR	901455	Identifier	cc		900772	1					
ANR	901456	CompoundStatement		203:6:5342:5342	900772	1					
ANR	901457	Label	case OP_CRSTAR :	1941:6:71553:71567	900772	0	True				
ANR	901458	Identifier	OP_CRSTAR		900772	0					
ANR	901459	Label	case OP_CRMINSTAR :	1942:6:71575:71592	900772	1	True				
ANR	901460	Identifier	OP_CRMINSTAR		900772	0					
ANR	901461	Label	case OP_CRPLUS :	1943:6:71600:71614	900772	2	True				
ANR	901462	Identifier	OP_CRPLUS		900772	0					
ANR	901463	Label	case OP_CRMINPLUS :	1944:6:71622:71639	900772	3	True				
ANR	901464	Identifier	OP_CRMINPLUS		900772	0					
ANR	901465	Label	case OP_CRQUERY :	1945:6:71647:71662	900772	4	True				
ANR	901466	Identifier	OP_CRQUERY		900772	0					
ANR	901467	Label	case OP_CRMINQUERY :	1946:6:71670:71688	900772	5	True				
ANR	901468	Identifier	OP_CRMINQUERY		900772	0					
ANR	901469	Label	case OP_CRPOSSTAR :	1947:6:71696:71713	900772	6	True				
ANR	901470	Identifier	OP_CRPOSSTAR		900772	0					
ANR	901471	Label	case OP_CRPOSPLUS :	1948:6:71721:71738	900772	7	True				
ANR	901472	Identifier	OP_CRPOSPLUS		900772	0					
ANR	901473	Label	case OP_CRPOSQUERY :	1949:6:71746:71764	900772	8	True				
ANR	901474	Identifier	OP_CRPOSQUERY		900772	0					
ANR	901475	ReturnStatement	return - 1 ;	1950:6:71772:71781	900772	9	True				
ANR	901476	UnaryOperationExpression	- 1		900772	0					
ANR	901477	UnaryOperator	-		900772	0					
ANR	901478	PrimaryExpression	1		900772	1					
ANR	901479	Label	case OP_CRRANGE :	1952:6:71790:71805	900772	10	True				
ANR	901480	Identifier	OP_CRRANGE		900772	0					
ANR	901481	Label	case OP_CRMINRANGE :	1953:6:71813:71831	900772	11	True				
ANR	901482	Identifier	OP_CRMINRANGE		900772	0					
ANR	901483	Label	case OP_CRPOSRANGE :	1954:6:71839:71857	900772	12	True				
ANR	901484	Identifier	OP_CRPOSRANGE		900772	0					
ANR	901485	IfStatement	"if ( GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE ) )"		900772	13					
ANR	901486	Condition	"GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE )"	1955:10:71869:71902	900772	0	True				
ANR	901487	EqualityExpression	"GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE )"		900772	0		!=			
ANR	901488	CallExpression	"GET2 ( cc , 1 )"		900772	0					
ANR	901489	Callee	GET2		900772	0					
ANR	901490	Identifier	GET2		900772	0					
ANR	901491	ArgumentList	cc		900772	1					
ANR	901492	Argument	cc		900772	0					
ANR	901493	Identifier	cc		900772	0					
ANR	901494	Argument	1		900772	1					
ANR	901495	PrimaryExpression	1		900772	0					
ANR	901496	CallExpression	"GET2 ( cc , 1 + IMM2_SIZE )"		900772	1					
ANR	901497	Callee	GET2		900772	0					
ANR	901498	Identifier	GET2		900772	0					
ANR	901499	ArgumentList	cc		900772	1					
ANR	901500	Argument	cc		900772	0					
ANR	901501	Identifier	cc		900772	0					
ANR	901502	Argument	1 + IMM2_SIZE		900772	1					
ANR	901503	AdditiveExpression	1 + IMM2_SIZE		900772	0		+			
ANR	901504	PrimaryExpression	1		900772	0					
ANR	901505	Identifier	IMM2_SIZE		900772	1					
ANR	901506	ReturnStatement	return - 1 ;	1955:46:71905:71914	900772	1	True				
ANR	901507	UnaryOperationExpression	- 1		900772	0					
ANR	901508	UnaryOperator	-		900772	0					
ANR	901509	PrimaryExpression	1		900772	1					
ANR	901510	ExpressionStatement	"branchlength += ( int ) GET2 ( cc , 1 )"	1956:6:71922:71953	900772	14	True				
ANR	901511	AssignmentExpression	"branchlength += ( int ) GET2 ( cc , 1 )"		900772	0		+=			
ANR	901512	Identifier	branchlength		900772	0					
ANR	901513	CastExpression	"( int ) GET2 ( cc , 1 )"		900772	1					
ANR	901514	CastTarget	int		900772	0					
ANR	901515	CallExpression	"GET2 ( cc , 1 )"		900772	1					
ANR	901516	Callee	GET2		900772	0					
ANR	901517	Identifier	GET2		900772	0					
ANR	901518	ArgumentList	cc		900772	1					
ANR	901519	Argument	cc		900772	0					
ANR	901520	Identifier	cc		900772	0					
ANR	901521	Argument	1		900772	1					
ANR	901522	PrimaryExpression	1		900772	0					
ANR	901523	ExpressionStatement	cc += 1 + 2 * IMM2_SIZE	1957:6:71961:71984	900772	15	True				
ANR	901524	AssignmentExpression	cc += 1 + 2 * IMM2_SIZE		900772	0		+=			
ANR	901525	Identifier	cc		900772	0					
ANR	901526	AdditiveExpression	1 + 2 * IMM2_SIZE		900772	1		+			
ANR	901527	PrimaryExpression	1		900772	0					
ANR	901528	MultiplicativeExpression	2 * IMM2_SIZE		900772	1		*			
ANR	901529	PrimaryExpression	2		900772	0					
ANR	901530	Identifier	IMM2_SIZE		900772	1					
ANR	901531	BreakStatement	break ;	1958:6:71992:71997	900772	16	True				
ANR	901532	Label	default :	1960:6:72006:72013	900772	17	True				
ANR	901533	Identifier	default		900772	0					
ANR	901534	ExpressionStatement	branchlength ++	1961:6:72021:72035	900772	18	True				
ANR	901535	PostIncDecOperationExpression	branchlength ++		900772	0					
ANR	901536	Identifier	branchlength		900772	0					
ANR	901537	IncDec	++		900772	1					
ANR	901538	BreakStatement	break ;	1963:4:72049:72054	900772	118	True				
ANR	901539	Label	case OP_ANYNL :	1967:4:72105:72118	900772	119	True				
ANR	901540	Identifier	OP_ANYNL		900772	0					
ANR	901541	Label	case OP_BRAMINZERO :	1968:4:72124:72142	900772	120	True				
ANR	901542	Identifier	OP_BRAMINZERO		900772	0					
ANR	901543	Label	case OP_BRAPOS :	1969:4:72148:72162	900772	121	True				
ANR	901544	Identifier	OP_BRAPOS		900772	0					
ANR	901545	Label	case OP_BRAPOSZERO :	1970:4:72168:72186	900772	122	True				
ANR	901546	Identifier	OP_BRAPOSZERO		900772	0					
ANR	901547	Label	case OP_BRAZERO :	1971:4:72192:72207	900772	123	True				
ANR	901548	Identifier	OP_BRAZERO		900772	0					
ANR	901549	Label	case OP_CBRAPOS :	1972:4:72213:72228	900772	124	True				
ANR	901550	Identifier	OP_CBRAPOS		900772	0					
ANR	901551	Label	case OP_EXTUNI :	1973:4:72234:72248	900772	125	True				
ANR	901552	Identifier	OP_EXTUNI		900772	0					
ANR	901553	Label	case OP_KETRMAX :	1974:4:72254:72269	900772	126	True				
ANR	901554	Identifier	OP_KETRMAX		900772	0					
ANR	901555	Label	case OP_KETRMIN :	1975:4:72275:72290	900772	127	True				
ANR	901556	Identifier	OP_KETRMIN		900772	0					
ANR	901557	Label	case OP_KETRPOS :	1976:4:72296:72311	900772	128	True				
ANR	901558	Identifier	OP_KETRPOS		900772	0					
ANR	901559	Label	case OP_MINPLUS :	1977:4:72317:72332	900772	129	True				
ANR	901560	Identifier	OP_MINPLUS		900772	0					
ANR	901561	Label	case OP_MINPLUSI :	1978:4:72338:72354	900772	130	True				
ANR	901562	Identifier	OP_MINPLUSI		900772	0					
ANR	901563	Label	case OP_MINQUERY :	1979:4:72360:72376	900772	131	True				
ANR	901564	Identifier	OP_MINQUERY		900772	0					
ANR	901565	Label	case OP_MINQUERYI :	1980:4:72382:72399	900772	132	True				
ANR	901566	Identifier	OP_MINQUERYI		900772	0					
ANR	901567	Label	case OP_MINSTAR :	1981:4:72405:72420	900772	133	True				
ANR	901568	Identifier	OP_MINSTAR		900772	0					
ANR	901569	Label	case OP_MINSTARI :	1982:4:72426:72442	900772	134	True				
ANR	901570	Identifier	OP_MINSTARI		900772	0					
ANR	901571	Label	case OP_MINUPTO :	1983:4:72448:72463	900772	135	True				
ANR	901572	Identifier	OP_MINUPTO		900772	0					
ANR	901573	Label	case OP_MINUPTOI :	1984:4:72469:72485	900772	136	True				
ANR	901574	Identifier	OP_MINUPTOI		900772	0					
ANR	901575	Label	case OP_NOTMINPLUS :	1985:4:72491:72509	900772	137	True				
ANR	901576	Identifier	OP_NOTMINPLUS		900772	0					
ANR	901577	Label	case OP_NOTMINPLUSI :	1986:4:72515:72534	900772	138	True				
ANR	901578	Identifier	OP_NOTMINPLUSI		900772	0					
ANR	901579	Label	case OP_NOTMINQUERY :	1987:4:72540:72559	900772	139	True				
ANR	901580	Identifier	OP_NOTMINQUERY		900772	0					
ANR	901581	Label	case OP_NOTMINQUERYI :	1988:4:72565:72585	900772	140	True				
ANR	901582	Identifier	OP_NOTMINQUERYI		900772	0					
ANR	901583	Label	case OP_NOTMINSTAR :	1989:4:72591:72609	900772	141	True				
ANR	901584	Identifier	OP_NOTMINSTAR		900772	0					
ANR	901585	Label	case OP_NOTMINSTARI :	1990:4:72615:72634	900772	142	True				
ANR	901586	Identifier	OP_NOTMINSTARI		900772	0					
ANR	901587	Label	case OP_NOTMINUPTO :	1991:4:72640:72658	900772	143	True				
ANR	901588	Identifier	OP_NOTMINUPTO		900772	0					
ANR	901589	Label	case OP_NOTMINUPTOI :	1992:4:72664:72683	900772	144	True				
ANR	901590	Identifier	OP_NOTMINUPTOI		900772	0					
ANR	901591	Label	case OP_NOTPLUS :	1993:4:72689:72704	900772	145	True				
ANR	901592	Identifier	OP_NOTPLUS		900772	0					
ANR	901593	Label	case OP_NOTPLUSI :	1994:4:72710:72726	900772	146	True				
ANR	901594	Identifier	OP_NOTPLUSI		900772	0					
ANR	901595	Label	case OP_NOTPOSPLUS :	1995:4:72732:72750	900772	147	True				
ANR	901596	Identifier	OP_NOTPOSPLUS		900772	0					
ANR	901597	Label	case OP_NOTPOSPLUSI :	1996:4:72756:72775	900772	148	True				
ANR	901598	Identifier	OP_NOTPOSPLUSI		900772	0					
ANR	901599	Label	case OP_NOTPOSQUERY :	1997:4:72781:72800	900772	149	True				
ANR	901600	Identifier	OP_NOTPOSQUERY		900772	0					
ANR	901601	Label	case OP_NOTPOSQUERYI :	1998:4:72806:72826	900772	150	True				
ANR	901602	Identifier	OP_NOTPOSQUERYI		900772	0					
ANR	901603	Label	case OP_NOTPOSSTAR :	1999:4:72832:72850	900772	151	True				
ANR	901604	Identifier	OP_NOTPOSSTAR		900772	0					
ANR	901605	Label	case OP_NOTPOSSTARI :	2000:4:72856:72875	900772	152	True				
ANR	901606	Identifier	OP_NOTPOSSTARI		900772	0					
ANR	901607	Label	case OP_NOTPOSUPTO :	2001:4:72881:72899	900772	153	True				
ANR	901608	Identifier	OP_NOTPOSUPTO		900772	0					
ANR	901609	Label	case OP_NOTPOSUPTOI :	2002:4:72905:72924	900772	154	True				
ANR	901610	Identifier	OP_NOTPOSUPTOI		900772	0					
ANR	901611	Label	case OP_NOTQUERY :	2003:4:72930:72946	900772	155	True				
ANR	901612	Identifier	OP_NOTQUERY		900772	0					
ANR	901613	Label	case OP_NOTQUERYI :	2004:4:72952:72969	900772	156	True				
ANR	901614	Identifier	OP_NOTQUERYI		900772	0					
ANR	901615	Label	case OP_NOTSTAR :	2005:4:72975:72990	900772	157	True				
ANR	901616	Identifier	OP_NOTSTAR		900772	0					
ANR	901617	Label	case OP_NOTSTARI :	2006:4:72996:73012	900772	158	True				
ANR	901618	Identifier	OP_NOTSTARI		900772	0					
ANR	901619	Label	case OP_NOTUPTO :	2007:4:73018:73033	900772	159	True				
ANR	901620	Identifier	OP_NOTUPTO		900772	0					
ANR	901621	Label	case OP_NOTUPTOI :	2008:4:73039:73055	900772	160	True				
ANR	901622	Identifier	OP_NOTUPTOI		900772	0					
ANR	901623	Label	case OP_PLUS :	2009:4:73061:73073	900772	161	True				
ANR	901624	Identifier	OP_PLUS		900772	0					
ANR	901625	Label	case OP_PLUSI :	2010:4:73079:73092	900772	162	True				
ANR	901626	Identifier	OP_PLUSI		900772	0					
ANR	901627	Label	case OP_POSPLUS :	2011:4:73098:73113	900772	163	True				
ANR	901628	Identifier	OP_POSPLUS		900772	0					
ANR	901629	Label	case OP_POSPLUSI :	2012:4:73119:73135	900772	164	True				
ANR	901630	Identifier	OP_POSPLUSI		900772	0					
ANR	901631	Label	case OP_POSQUERY :	2013:4:73141:73157	900772	165	True				
ANR	901632	Identifier	OP_POSQUERY		900772	0					
ANR	901633	Label	case OP_POSQUERYI :	2014:4:73163:73180	900772	166	True				
ANR	901634	Identifier	OP_POSQUERYI		900772	0					
ANR	901635	Label	case OP_POSSTAR :	2015:4:73186:73201	900772	167	True				
ANR	901636	Identifier	OP_POSSTAR		900772	0					
ANR	901637	Label	case OP_POSSTARI :	2016:4:73207:73223	900772	168	True				
ANR	901638	Identifier	OP_POSSTARI		900772	0					
ANR	901639	Label	case OP_POSUPTO :	2017:4:73229:73244	900772	169	True				
ANR	901640	Identifier	OP_POSUPTO		900772	0					
ANR	901641	Label	case OP_POSUPTOI :	2018:4:73250:73266	900772	170	True				
ANR	901642	Identifier	OP_POSUPTOI		900772	0					
ANR	901643	Label	case OP_QUERY :	2019:4:73272:73285	900772	171	True				
ANR	901644	Identifier	OP_QUERY		900772	0					
ANR	901645	Label	case OP_QUERYI :	2020:4:73291:73305	900772	172	True				
ANR	901646	Identifier	OP_QUERYI		900772	0					
ANR	901647	Label	case OP_REF :	2021:4:73311:73322	900772	173	True				
ANR	901648	Identifier	OP_REF		900772	0					
ANR	901649	Label	case OP_REFI :	2022:4:73328:73340	900772	174	True				
ANR	901650	Identifier	OP_REFI		900772	0					
ANR	901651	Label	case OP_DNREF :	2023:4:73346:73359	900772	175	True				
ANR	901652	Identifier	OP_DNREF		900772	0					
ANR	901653	Label	case OP_DNREFI :	2024:4:73365:73379	900772	176	True				
ANR	901654	Identifier	OP_DNREFI		900772	0					
ANR	901655	Label	case OP_SBRA :	2025:4:73385:73397	900772	177	True				
ANR	901656	Identifier	OP_SBRA		900772	0					
ANR	901657	Label	case OP_SBRAPOS :	2026:4:73403:73418	900772	178	True				
ANR	901658	Identifier	OP_SBRAPOS		900772	0					
ANR	901659	Label	case OP_SCBRA :	2027:4:73424:73437	900772	179	True				
ANR	901660	Identifier	OP_SCBRA		900772	0					
ANR	901661	Label	case OP_SCBRAPOS :	2028:4:73443:73459	900772	180	True				
ANR	901662	Identifier	OP_SCBRAPOS		900772	0					
ANR	901663	Label	case OP_SCOND :	2029:4:73465:73478	900772	181	True				
ANR	901664	Identifier	OP_SCOND		900772	0					
ANR	901665	Label	case OP_SKIPZERO :	2030:4:73484:73500	900772	182	True				
ANR	901666	Identifier	OP_SKIPZERO		900772	0					
ANR	901667	Label	case OP_STAR :	2031:4:73506:73518	900772	183	True				
ANR	901668	Identifier	OP_STAR		900772	0					
ANR	901669	Label	case OP_STARI :	2032:4:73524:73537	900772	184	True				
ANR	901670	Identifier	OP_STARI		900772	0					
ANR	901671	Label	case OP_TYPEMINPLUS :	2033:4:73543:73562	900772	185	True				
ANR	901672	Identifier	OP_TYPEMINPLUS		900772	0					
ANR	901673	Label	case OP_TYPEMINQUERY :	2034:4:73568:73588	900772	186	True				
ANR	901674	Identifier	OP_TYPEMINQUERY		900772	0					
ANR	901675	Label	case OP_TYPEMINSTAR :	2035:4:73594:73613	900772	187	True				
ANR	901676	Identifier	OP_TYPEMINSTAR		900772	0					
ANR	901677	Label	case OP_TYPEMINUPTO :	2036:4:73619:73638	900772	188	True				
ANR	901678	Identifier	OP_TYPEMINUPTO		900772	0					
ANR	901679	Label	case OP_TYPEPLUS :	2037:4:73644:73660	900772	189	True				
ANR	901680	Identifier	OP_TYPEPLUS		900772	0					
ANR	901681	Label	case OP_TYPEPOSPLUS :	2038:4:73666:73685	900772	190	True				
ANR	901682	Identifier	OP_TYPEPOSPLUS		900772	0					
ANR	901683	Label	case OP_TYPEPOSQUERY :	2039:4:73691:73711	900772	191	True				
ANR	901684	Identifier	OP_TYPEPOSQUERY		900772	0					
ANR	901685	Label	case OP_TYPEPOSSTAR :	2040:4:73717:73736	900772	192	True				
ANR	901686	Identifier	OP_TYPEPOSSTAR		900772	0					
ANR	901687	Label	case OP_TYPEPOSUPTO :	2041:4:73742:73761	900772	193	True				
ANR	901688	Identifier	OP_TYPEPOSUPTO		900772	0					
ANR	901689	Label	case OP_TYPEQUERY :	2042:4:73767:73784	900772	194	True				
ANR	901690	Identifier	OP_TYPEQUERY		900772	0					
ANR	901691	Label	case OP_TYPESTAR :	2043:4:73790:73806	900772	195	True				
ANR	901692	Identifier	OP_TYPESTAR		900772	0					
ANR	901693	Label	case OP_TYPEUPTO :	2044:4:73812:73828	900772	196	True				
ANR	901694	Identifier	OP_TYPEUPTO		900772	0					
ANR	901695	Label	case OP_UPTO :	2045:4:73834:73846	900772	197	True				
ANR	901696	Identifier	OP_UPTO		900772	0					
ANR	901697	Label	case OP_UPTOI :	2046:4:73852:73865	900772	198	True				
ANR	901698	Identifier	OP_UPTOI		900772	0					
ANR	901699	ReturnStatement	return - 1 ;	2047:4:73871:73880	900772	199	True				
ANR	901700	UnaryOperationExpression	- 1		900772	0					
ANR	901701	UnaryOperator	-		900772	0					
ANR	901702	PrimaryExpression	1		900772	1					
ANR	901703	Label	default :	2052:4:74014:74021	900772	200	True				
ANR	901704	Identifier	default		900772	0					
ANR	901705	ReturnStatement	return - 4 ;	2053:4:74027:74036	900772	201	True				
ANR	901706	UnaryOperationExpression	- 4		900772	0					
ANR	901707	UnaryOperator	-		900772	0					
ANR	901708	PrimaryExpression	4		900772	1					
ANR	901709	ReturnType	static int		900772	1					
ANR	901710	Identifier	find_fixedlength		900772	2					
ANR	901711	ParameterList	"pcre_uchar * code , BOOL utf , BOOL atend , compile_data * cd , recurse_check * recurses"		900772	3					
ANR	901712	Parameter	pcre_uchar * code	1736:17:66117:66132	900772	0	True				
ANR	901713	ParameterType	pcre_uchar *		900772	0					
ANR	901714	Identifier	code		900772	1					
ANR	901715	Parameter	BOOL utf	1736:35:66135:66142	900772	1	True				
ANR	901716	ParameterType	BOOL		900772	0					
ANR	901717	Identifier	utf		900772	1					
ANR	901718	Parameter	BOOL atend	1736:45:66145:66154	900772	2	True				
ANR	901719	ParameterType	BOOL		900772	0					
ANR	901720	Identifier	atend		900772	1					
ANR	901721	Parameter	compile_data * cd	1736:57:66157:66172	900772	3	True				
ANR	901722	ParameterType	compile_data *		900772	0					
ANR	901723	Identifier	cd		900772	1					
ANR	901724	Parameter	recurse_check * recurses	1737:2:66177:66199	900772	4	True				
ANR	901725	ParameterType	recurse_check *		900772	0					
ANR	901726	Identifier	recurses		900772	1					
ANR	901727	CFGEntryNode	ENTRY		900772		True				
ANR	901728	CFGExitNode	EXIT		900772		True				
ANR	901729	InfiniteForNode	true		900772		True				
ANR	901730	Symbol	this_recurse		900772						
ANR	901731	Symbol	code		900772						
ANR	901732	Symbol	* cd		900772						
ANR	901733	Symbol	* IMM2_SIZE		900772						
ANR	901734	Symbol	atend		900772						
ANR	901735	Symbol	* cc		900772						
ANR	901736	Symbol	OP_CBRA		900772						
ANR	901737	Symbol	OP_ALT		900772						
ANR	901738	Symbol	* OP_CLASS		900772						
ANR	901739	Symbol	cd -> start_code		900772						
ANR	901740	Symbol	PRIV		900772						
ANR	901741	Symbol	* ce		900772						
ANR	901742	Symbol	* * cc		900772						
ANR	901743	Symbol	r -> prev		900772						
ANR	901744	Symbol	GET_EXTRALEN		900772						
ANR	901745	Symbol	GET2		900772						
ANR	901746	Symbol	cc		900772						
ANR	901747	Symbol	cd		900772						
ANR	901748	Symbol	op		900772						
ANR	901749	Symbol	HAS_EXTRALEN		900772						
ANR	901750	Symbol	ce		900772						
ANR	901751	Symbol	NULL		900772						
ANR	901752	Symbol	d		900772						
ANR	901753	Symbol	recurses		900772						
ANR	901754	Symbol	OP_CLASS		900772						
ANR	901755	Symbol	utf		900772						
ANR	901756	Symbol	IMM2_SIZE		900772						
ANR	901757	Symbol	length		900772						
ANR	901758	Symbol	r -> group		900772						
ANR	901759	Symbol	this_recurse . prev		900772						
ANR	901760	Symbol	OP_NOTPROP		900772						
ANR	901761	Symbol	LINK_SIZE		900772						
ANR	901762	Symbol	cs		900772						
ANR	901763	Symbol	this_recurse . group		900772						
ANR	901764	Symbol	* PRIV		900772						
ANR	901765	Symbol	OP_PROP		900772						
ANR	901766	Symbol	r		900772						
ANR	901767	Symbol	& this_recurse		900772						
ANR	901768	Symbol	OP_XCLASS		900772						
ANR	901769	Symbol	branchlength		900772						
ANR	901770	Symbol	GET		900772						
ANR	901771	Symbol	OP_lengths		900772						
ANR	901772	Symbol	* r		900772						
ANR	901773	Symbol	find_fixedlength		900772						
ANR	901774	Function	find_bracket	2080:0:74830:78507							
ANR	901775	FunctionDef	"find_bracket (const pcre_uchar * code , BOOL utf , int number)"		901774	0					
ANR	901776	CompoundStatement		2081:0:74895:78507	901774	0					
ANR	901777	ForStatement	for ( ; ; )		901774	0					
ANR	901778	CompoundStatement		4:11:25:45	901774	0					
ANR	901779	Statement	register	2084:2:74912:74919	901774	0	True				
ANR	901780	IdentifierDeclStatement	pcre_uchar c = * code ;	2084:11:74921:74941	901774	1	True				
ANR	901781	IdentifierDecl	c = * code		901774	0					
ANR	901782	IdentifierDeclType	pcre_uchar		901774	0					
ANR	901783	Identifier	c		901774	1					
ANR	901784	AssignmentExpression	c = * code		901774	2		=			
ANR	901785	Identifier	c		901774	0					
ANR	901786	UnaryOperationExpression	* code		901774	1					
ANR	901787	UnaryOperator	*		901774	0					
ANR	901788	Identifier	code		901774	1					
ANR	901789	IfStatement	if ( c == OP_END )		901774	2					
ANR	901790	Condition	c == OP_END	2086:6:74950:74960	901774	0	True				
ANR	901791	EqualityExpression	c == OP_END		901774	0		==			
ANR	901792	Identifier	c		901774	0					
ANR	901793	Identifier	OP_END		901774	1					
ANR	901794	ReturnStatement	return NULL ;	2086:19:74963:74974	901774	1	True				
ANR	901795	Identifier	NULL		901774	0					
ANR	901796	IfStatement	if ( c == OP_XCLASS )		901774	3					
ANR	901797	Condition	c == OP_XCLASS	2092:6:75205:75218	901774	0	True				
ANR	901798	EqualityExpression	c == OP_XCLASS		901774	0		==			
ANR	901799	Identifier	c		901774	0					
ANR	901800	Identifier	OP_XCLASS		901774	1					
ANR	901801	ExpressionStatement	"code += GET ( code , 1 )"	2092:22:75221:75241	901774	1	True				
ANR	901802	AssignmentExpression	"code += GET ( code , 1 )"		901774	0		+=			
ANR	901803	Identifier	code		901774	0					
ANR	901804	CallExpression	"GET ( code , 1 )"		901774	1					
ANR	901805	Callee	GET		901774	0					
ANR	901806	Identifier	GET		901774	0					
ANR	901807	ArgumentList	code		901774	1					
ANR	901808	Argument	code		901774	0					
ANR	901809	Identifier	code		901774	0					
ANR	901810	Argument	1		901774	1					
ANR	901811	PrimaryExpression	1		901774	0					
ANR	901812	ElseStatement	else		901774	0					
ANR	901813	IfStatement	if ( c == OP_REVERSE )		901774	0					
ANR	901814	Condition	c == OP_REVERSE	2096:11:75281:75295	901774	0	True				
ANR	901815	EqualityExpression	c == OP_REVERSE		901774	0		==			
ANR	901816	Identifier	c		901774	0					
ANR	901817	Identifier	OP_REVERSE		901774	1					
ANR	901818	CompoundStatement		17:4:406:406	901774	1					
ANR	901819	IfStatement	if ( number < 0 )		901774	0					
ANR	901820	Condition	number < 0	2098:8:75312:75321	901774	0	True				
ANR	901821	RelationalExpression	number < 0		901774	0		<			
ANR	901822	Identifier	number		901774	0					
ANR	901823	PrimaryExpression	0		901774	1					
ANR	901824	ReturnStatement	return ( pcre_uchar * ) code ;	2098:20:75324:75349	901774	1	True				
ANR	901825	CastExpression	( pcre_uchar * ) code		901774	0					
ANR	901826	CastTarget	pcre_uchar *		901774	0					
ANR	901827	Identifier	code		901774	1					
ANR	901828	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2099:4:75355:75382	901774	1	True				
ANR	901829	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		901774	0		+=			
ANR	901830	Identifier	code		901774	0					
ANR	901831	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		901774	1					
ANR	901832	CallExpression	PRIV ( OP_lengths )		901774	0					
ANR	901833	Callee	PRIV		901774	0					
ANR	901834	Identifier	PRIV		901774	0					
ANR	901835	ArgumentList	OP_lengths		901774	1					
ANR	901836	Argument	OP_lengths		901774	0					
ANR	901837	Identifier	OP_lengths		901774	0					
ANR	901838	Identifier	c		901774	1					
ANR	901839	ElseStatement	else		901774	0					
ANR	901840	IfStatement	if ( c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS )		901774	0					
ANR	901841	Condition	c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS	2104:11:75436:75514	901774	0	True				
ANR	901842	OrExpression	c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS		901774	0		||			
ANR	901843	EqualityExpression	c == OP_CBRA		901774	0		==			
ANR	901844	Identifier	c		901774	0					
ANR	901845	Identifier	OP_CBRA		901774	1					
ANR	901846	OrExpression	c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS		901774	1		||			
ANR	901847	EqualityExpression	c == OP_SCBRA		901774	0		==			
ANR	901848	Identifier	c		901774	0					
ANR	901849	Identifier	OP_SCBRA		901774	1					
ANR	901850	OrExpression	c == OP_CBRAPOS || c == OP_SCBRAPOS		901774	1		||			
ANR	901851	EqualityExpression	c == OP_CBRAPOS		901774	0		==			
ANR	901852	Identifier	c		901774	0					
ANR	901853	Identifier	OP_CBRAPOS		901774	1					
ANR	901854	EqualityExpression	c == OP_SCBRAPOS		901774	1		==			
ANR	901855	Identifier	c		901774	0					
ANR	901856	Identifier	OP_SCBRAPOS		901774	1					
ANR	901857	CompoundStatement		27:4:631:667	901774	1					
ANR	901858	IdentifierDeclStatement	"int n = ( int ) GET2 ( code , 1 + LINK_SIZE ) ;"	2107:4:75527:75563	901774	0	True				
ANR	901859	IdentifierDecl	"n = ( int ) GET2 ( code , 1 + LINK_SIZE )"		901774	0					
ANR	901860	IdentifierDeclType	int		901774	0					
ANR	901861	Identifier	n		901774	1					
ANR	901862	AssignmentExpression	"n = ( int ) GET2 ( code , 1 + LINK_SIZE )"		901774	2		=			
ANR	901863	Identifier	n		901774	0					
ANR	901864	CastExpression	"( int ) GET2 ( code , 1 + LINK_SIZE )"		901774	1					
ANR	901865	CastTarget	int		901774	0					
ANR	901866	CallExpression	"GET2 ( code , 1 + LINK_SIZE )"		901774	1					
ANR	901867	Callee	GET2		901774	0					
ANR	901868	Identifier	GET2		901774	0					
ANR	901869	ArgumentList	code		901774	1					
ANR	901870	Argument	code		901774	0					
ANR	901871	Identifier	code		901774	0					
ANR	901872	Argument	1 + LINK_SIZE		901774	1					
ANR	901873	AdditiveExpression	1 + LINK_SIZE		901774	0		+			
ANR	901874	PrimaryExpression	1		901774	0					
ANR	901875	Identifier	LINK_SIZE		901774	1					
ANR	901876	IfStatement	if ( n == number )		901774	1					
ANR	901877	Condition	n == number	2108:8:75573:75583	901774	0	True				
ANR	901878	EqualityExpression	n == number		901774	0		==			
ANR	901879	Identifier	n		901774	0					
ANR	901880	Identifier	number		901774	1					
ANR	901881	ReturnStatement	return ( pcre_uchar * ) code ;	2108:21:75586:75611	901774	1	True				
ANR	901882	CastExpression	( pcre_uchar * ) code		901774	0					
ANR	901883	CastTarget	pcre_uchar *		901774	0					
ANR	901884	Identifier	code		901774	1					
ANR	901885	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2109:4:75617:75644	901774	2	True				
ANR	901886	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		901774	0		+=			
ANR	901887	Identifier	code		901774	0					
ANR	901888	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		901774	1					
ANR	901889	CallExpression	PRIV ( OP_lengths )		901774	0					
ANR	901890	Callee	PRIV		901774	0					
ANR	901891	Identifier	PRIV		901774	0					
ANR	901892	ArgumentList	OP_lengths		901774	1					
ANR	901893	Argument	OP_lengths		901774	0					
ANR	901894	Identifier	OP_lengths		901774	0					
ANR	901895	Identifier	c		901774	1					
ANR	901896	ElseStatement	else		901774	0					
ANR	901897	CompoundStatement		38:4:1031:1031	901774	0					
ANR	901898	SwitchStatement	switch ( c )		901774	0					
ANR	901899	Condition	c	2119:11:75940:75940	901774	0	True				
ANR	901900	Identifier	c		901774	0					
ANR	901901	CompoundStatement		40:6:1053:1053	901774	1					
ANR	901902	Label	case OP_TYPESTAR :	2121:6:75957:75973	901774	0	True				
ANR	901903	Identifier	OP_TYPESTAR		901774	0					
ANR	901904	Label	case OP_TYPEMINSTAR :	2122:6:75981:76000	901774	1	True				
ANR	901905	Identifier	OP_TYPEMINSTAR		901774	0					
ANR	901906	Label	case OP_TYPEPLUS :	2123:6:76008:76024	901774	2	True				
ANR	901907	Identifier	OP_TYPEPLUS		901774	0					
ANR	901908	Label	case OP_TYPEMINPLUS :	2124:6:76032:76051	901774	3	True				
ANR	901909	Identifier	OP_TYPEMINPLUS		901774	0					
ANR	901910	Label	case OP_TYPEQUERY :	2125:6:76059:76076	901774	4	True				
ANR	901911	Identifier	OP_TYPEQUERY		901774	0					
ANR	901912	Label	case OP_TYPEMINQUERY :	2126:6:76084:76104	901774	5	True				
ANR	901913	Identifier	OP_TYPEMINQUERY		901774	0					
ANR	901914	Label	case OP_TYPEPOSSTAR :	2127:6:76112:76131	901774	6	True				
ANR	901915	Identifier	OP_TYPEPOSSTAR		901774	0					
ANR	901916	Label	case OP_TYPEPOSPLUS :	2128:6:76139:76158	901774	7	True				
ANR	901917	Identifier	OP_TYPEPOSPLUS		901774	0					
ANR	901918	Label	case OP_TYPEPOSQUERY :	2129:6:76166:76186	901774	8	True				
ANR	901919	Identifier	OP_TYPEPOSQUERY		901774	0					
ANR	901920	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		901774	9					
ANR	901921	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2130:10:76198:76240	901774	0	True				
ANR	901922	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		901774	0		||			
ANR	901923	EqualityExpression	code [ 1 ] == OP_PROP		901774	0		==			
ANR	901924	ArrayIndexing	code [ 1 ]		901774	0					
ANR	901925	Identifier	code		901774	0					
ANR	901926	PrimaryExpression	1		901774	1					
ANR	901927	Identifier	OP_PROP		901774	1					
ANR	901928	EqualityExpression	code [ 1 ] == OP_NOTPROP		901774	1		==			
ANR	901929	ArrayIndexing	code [ 1 ]		901774	0					
ANR	901930	Identifier	code		901774	0					
ANR	901931	PrimaryExpression	1		901774	1					
ANR	901932	Identifier	OP_NOTPROP		901774	1					
ANR	901933	ExpressionStatement	code += 2	2130:55:76243:76252	901774	1	True				
ANR	901934	AssignmentExpression	code += 2		901774	0		+=			
ANR	901935	Identifier	code		901774	0					
ANR	901936	PrimaryExpression	2		901774	1					
ANR	901937	BreakStatement	break ;	2131:6:76260:76265	901774	10	True				
ANR	901938	Label	case OP_TYPEUPTO :	2133:6:76274:76290	901774	11	True				
ANR	901939	Identifier	OP_TYPEUPTO		901774	0					
ANR	901940	Label	case OP_TYPEMINUPTO :	2134:6:76298:76317	901774	12	True				
ANR	901941	Identifier	OP_TYPEMINUPTO		901774	0					
ANR	901942	Label	case OP_TYPEEXACT :	2135:6:76325:76342	901774	13	True				
ANR	901943	Identifier	OP_TYPEEXACT		901774	0					
ANR	901944	Label	case OP_TYPEPOSUPTO :	2136:6:76350:76369	901774	14	True				
ANR	901945	Identifier	OP_TYPEPOSUPTO		901774	0					
ANR	901946	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		901774	15					
ANR	901947	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2137:10:76381:76447	901774	0	True				
ANR	901948	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		901774	0		||			
ANR	901949	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		901774	0		==			
ANR	901950	ArrayIndexing	code [ 1 + IMM2_SIZE ]		901774	0					
ANR	901951	Identifier	code		901774	0					
ANR	901952	AdditiveExpression	1 + IMM2_SIZE		901774	1		+			
ANR	901953	PrimaryExpression	1		901774	0					
ANR	901954	Identifier	IMM2_SIZE		901774	1					
ANR	901955	Identifier	OP_PROP		901774	1					
ANR	901956	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		901774	1		==			
ANR	901957	ArrayIndexing	code [ 1 + IMM2_SIZE ]		901774	0					
ANR	901958	Identifier	code		901774	0					
ANR	901959	AdditiveExpression	1 + IMM2_SIZE		901774	1		+			
ANR	901960	PrimaryExpression	1		901774	0					
ANR	901961	Identifier	IMM2_SIZE		901774	1					
ANR	901962	Identifier	OP_NOTPROP		901774	1					
ANR	901963	ExpressionStatement	code += 2	2138:8:76458:76467	901774	1	True				
ANR	901964	AssignmentExpression	code += 2		901774	0		+=			
ANR	901965	Identifier	code		901774	0					
ANR	901966	PrimaryExpression	2		901774	1					
ANR	901967	BreakStatement	break ;	2139:6:76475:76480	901774	16	True				
ANR	901968	Label	case OP_MARK :	2141:6:76489:76501	901774	17	True				
ANR	901969	Identifier	OP_MARK		901774	0					
ANR	901970	Label	case OP_PRUNE_ARG :	2142:6:76509:76526	901774	18	True				
ANR	901971	Identifier	OP_PRUNE_ARG		901774	0					
ANR	901972	Label	case OP_SKIP_ARG :	2143:6:76534:76550	901774	19	True				
ANR	901973	Identifier	OP_SKIP_ARG		901774	0					
ANR	901974	Label	case OP_THEN_ARG :	2144:6:76558:76574	901774	20	True				
ANR	901975	Identifier	OP_THEN_ARG		901774	0					
ANR	901976	ExpressionStatement	code += code [ 1 ]	2145:6:76582:76597	901774	21	True				
ANR	901977	AssignmentExpression	code += code [ 1 ]		901774	0		+=			
ANR	901978	Identifier	code		901774	0					
ANR	901979	ArrayIndexing	code [ 1 ]		901774	1					
ANR	901980	Identifier	code		901774	0					
ANR	901981	PrimaryExpression	1		901774	1					
ANR	901982	BreakStatement	break ;	2146:6:76605:76610	901774	22	True				
ANR	901983	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2151:4:76675:76702	901774	1	True				
ANR	901984	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		901774	0		+=			
ANR	901985	Identifier	code		901774	0					
ANR	901986	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		901774	1					
ANR	901987	CallExpression	PRIV ( OP_lengths )		901774	0					
ANR	901988	Callee	PRIV		901774	0					
ANR	901989	Identifier	PRIV		901774	0					
ANR	901990	ArgumentList	OP_lengths		901774	1					
ANR	901991	Argument	OP_lengths		901774	0					
ANR	901992	Identifier	OP_lengths		901774	0					
ANR	901993	Identifier	c		901774	1					
ANR	901994	IfStatement	if ( utf )		901774	2					
ANR	901995	Condition	utf	2158:8:76961:76963	901774	0	True				
ANR	901996	Identifier	utf		901774	0					
ANR	901997	SwitchStatement	switch ( c )		901774	1					
ANR	901998	Condition	c	2158:20:76973:76973	901774	0	True				
ANR	901999	Identifier	c		901774	0					
ANR	902000	CompoundStatement		79:6:2086:2086	901774	1					
ANR	902001	Label	case OP_CHAR :	2160:6:76990:77002	901774	0	True				
ANR	902002	Identifier	OP_CHAR		901774	0					
ANR	902003	Label	case OP_CHARI :	2161:6:77010:77023	901774	1	True				
ANR	902004	Identifier	OP_CHARI		901774	0					
ANR	902005	Label	case OP_NOT :	2162:6:77031:77042	901774	2	True				
ANR	902006	Identifier	OP_NOT		901774	0					
ANR	902007	Label	case OP_NOTI :	2163:6:77050:77062	901774	3	True				
ANR	902008	Identifier	OP_NOTI		901774	0					
ANR	902009	Label	case OP_EXACT :	2164:6:77070:77083	901774	4	True				
ANR	902010	Identifier	OP_EXACT		901774	0					
ANR	902011	Label	case OP_EXACTI :	2165:6:77091:77105	901774	5	True				
ANR	902012	Identifier	OP_EXACTI		901774	0					
ANR	902013	Label	case OP_NOTEXACT :	2166:6:77113:77129	901774	6	True				
ANR	902014	Identifier	OP_NOTEXACT		901774	0					
ANR	902015	Label	case OP_NOTEXACTI :	2167:6:77137:77154	901774	7	True				
ANR	902016	Identifier	OP_NOTEXACTI		901774	0					
ANR	902017	Label	case OP_UPTO :	2168:6:77162:77174	901774	8	True				
ANR	902018	Identifier	OP_UPTO		901774	0					
ANR	902019	Label	case OP_UPTOI :	2169:6:77182:77195	901774	9	True				
ANR	902020	Identifier	OP_UPTOI		901774	0					
ANR	902021	Label	case OP_NOTUPTO :	2170:6:77203:77218	901774	10	True				
ANR	902022	Identifier	OP_NOTUPTO		901774	0					
ANR	902023	Label	case OP_NOTUPTOI :	2171:6:77226:77242	901774	11	True				
ANR	902024	Identifier	OP_NOTUPTOI		901774	0					
ANR	902025	Label	case OP_MINUPTO :	2172:6:77250:77265	901774	12	True				
ANR	902026	Identifier	OP_MINUPTO		901774	0					
ANR	902027	Label	case OP_MINUPTOI :	2173:6:77273:77289	901774	13	True				
ANR	902028	Identifier	OP_MINUPTOI		901774	0					
ANR	902029	Label	case OP_NOTMINUPTO :	2174:6:77297:77315	901774	14	True				
ANR	902030	Identifier	OP_NOTMINUPTO		901774	0					
ANR	902031	Label	case OP_NOTMINUPTOI :	2175:6:77323:77342	901774	15	True				
ANR	902032	Identifier	OP_NOTMINUPTOI		901774	0					
ANR	902033	Label	case OP_POSUPTO :	2176:6:77350:77365	901774	16	True				
ANR	902034	Identifier	OP_POSUPTO		901774	0					
ANR	902035	Label	case OP_POSUPTOI :	2177:6:77373:77389	901774	17	True				
ANR	902036	Identifier	OP_POSUPTOI		901774	0					
ANR	902037	Label	case OP_NOTPOSUPTO :	2178:6:77397:77415	901774	18	True				
ANR	902038	Identifier	OP_NOTPOSUPTO		901774	0					
ANR	902039	Label	case OP_NOTPOSUPTOI :	2179:6:77423:77442	901774	19	True				
ANR	902040	Identifier	OP_NOTPOSUPTOI		901774	0					
ANR	902041	Label	case OP_STAR :	2180:6:77450:77462	901774	20	True				
ANR	902042	Identifier	OP_STAR		901774	0					
ANR	902043	Label	case OP_STARI :	2181:6:77470:77483	901774	21	True				
ANR	902044	Identifier	OP_STARI		901774	0					
ANR	902045	Label	case OP_NOTSTAR :	2182:6:77491:77506	901774	22	True				
ANR	902046	Identifier	OP_NOTSTAR		901774	0					
ANR	902047	Label	case OP_NOTSTARI :	2183:6:77514:77530	901774	23	True				
ANR	902048	Identifier	OP_NOTSTARI		901774	0					
ANR	902049	Label	case OP_MINSTAR :	2184:6:77538:77553	901774	24	True				
ANR	902050	Identifier	OP_MINSTAR		901774	0					
ANR	902051	Label	case OP_MINSTARI :	2185:6:77561:77577	901774	25	True				
ANR	902052	Identifier	OP_MINSTARI		901774	0					
ANR	902053	Label	case OP_NOTMINSTAR :	2186:6:77585:77603	901774	26	True				
ANR	902054	Identifier	OP_NOTMINSTAR		901774	0					
ANR	902055	Label	case OP_NOTMINSTARI :	2187:6:77611:77630	901774	27	True				
ANR	902056	Identifier	OP_NOTMINSTARI		901774	0					
ANR	902057	Label	case OP_POSSTAR :	2188:6:77638:77653	901774	28	True				
ANR	902058	Identifier	OP_POSSTAR		901774	0					
ANR	902059	Label	case OP_POSSTARI :	2189:6:77661:77677	901774	29	True				
ANR	902060	Identifier	OP_POSSTARI		901774	0					
ANR	902061	Label	case OP_NOTPOSSTAR :	2190:6:77685:77703	901774	30	True				
ANR	902062	Identifier	OP_NOTPOSSTAR		901774	0					
ANR	902063	Label	case OP_NOTPOSSTARI :	2191:6:77711:77730	901774	31	True				
ANR	902064	Identifier	OP_NOTPOSSTARI		901774	0					
ANR	902065	Label	case OP_PLUS :	2192:6:77738:77750	901774	32	True				
ANR	902066	Identifier	OP_PLUS		901774	0					
ANR	902067	Label	case OP_PLUSI :	2193:6:77758:77771	901774	33	True				
ANR	902068	Identifier	OP_PLUSI		901774	0					
ANR	902069	Label	case OP_NOTPLUS :	2194:6:77779:77794	901774	34	True				
ANR	902070	Identifier	OP_NOTPLUS		901774	0					
ANR	902071	Label	case OP_NOTPLUSI :	2195:6:77802:77818	901774	35	True				
ANR	902072	Identifier	OP_NOTPLUSI		901774	0					
ANR	902073	Label	case OP_MINPLUS :	2196:6:77826:77841	901774	36	True				
ANR	902074	Identifier	OP_MINPLUS		901774	0					
ANR	902075	Label	case OP_MINPLUSI :	2197:6:77849:77865	901774	37	True				
ANR	902076	Identifier	OP_MINPLUSI		901774	0					
ANR	902077	Label	case OP_NOTMINPLUS :	2198:6:77873:77891	901774	38	True				
ANR	902078	Identifier	OP_NOTMINPLUS		901774	0					
ANR	902079	Label	case OP_NOTMINPLUSI :	2199:6:77899:77918	901774	39	True				
ANR	902080	Identifier	OP_NOTMINPLUSI		901774	0					
ANR	902081	Label	case OP_POSPLUS :	2200:6:77926:77941	901774	40	True				
ANR	902082	Identifier	OP_POSPLUS		901774	0					
ANR	902083	Label	case OP_POSPLUSI :	2201:6:77949:77965	901774	41	True				
ANR	902084	Identifier	OP_POSPLUSI		901774	0					
ANR	902085	Label	case OP_NOTPOSPLUS :	2202:6:77973:77991	901774	42	True				
ANR	902086	Identifier	OP_NOTPOSPLUS		901774	0					
ANR	902087	Label	case OP_NOTPOSPLUSI :	2203:6:77999:78018	901774	43	True				
ANR	902088	Identifier	OP_NOTPOSPLUSI		901774	0					
ANR	902089	Label	case OP_QUERY :	2204:6:78026:78039	901774	44	True				
ANR	902090	Identifier	OP_QUERY		901774	0					
ANR	902091	Label	case OP_QUERYI :	2205:6:78047:78061	901774	45	True				
ANR	902092	Identifier	OP_QUERYI		901774	0					
ANR	902093	Label	case OP_NOTQUERY :	2206:6:78069:78085	901774	46	True				
ANR	902094	Identifier	OP_NOTQUERY		901774	0					
ANR	902095	Label	case OP_NOTQUERYI :	2207:6:78093:78110	901774	47	True				
ANR	902096	Identifier	OP_NOTQUERYI		901774	0					
ANR	902097	Label	case OP_MINQUERY :	2208:6:78118:78134	901774	48	True				
ANR	902098	Identifier	OP_MINQUERY		901774	0					
ANR	902099	Label	case OP_MINQUERYI :	2209:6:78142:78159	901774	49	True				
ANR	902100	Identifier	OP_MINQUERYI		901774	0					
ANR	902101	Label	case OP_NOTMINQUERY :	2210:6:78167:78186	901774	50	True				
ANR	902102	Identifier	OP_NOTMINQUERY		901774	0					
ANR	902103	Label	case OP_NOTMINQUERYI :	2211:6:78194:78214	901774	51	True				
ANR	902104	Identifier	OP_NOTMINQUERYI		901774	0					
ANR	902105	Label	case OP_POSQUERY :	2212:6:78222:78238	901774	52	True				
ANR	902106	Identifier	OP_POSQUERY		901774	0					
ANR	902107	Label	case OP_POSQUERYI :	2213:6:78246:78263	901774	53	True				
ANR	902108	Identifier	OP_POSQUERYI		901774	0					
ANR	902109	Label	case OP_NOTPOSQUERY :	2214:6:78271:78290	901774	54	True				
ANR	902110	Identifier	OP_NOTPOSQUERY		901774	0					
ANR	902111	Label	case OP_NOTPOSQUERYI :	2215:6:78298:78318	901774	55	True				
ANR	902112	Identifier	OP_NOTPOSQUERYI		901774	0					
ANR	902113	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		901774	56					
ANR	902114	Condition	HAS_EXTRALEN ( code [ - 1 ] )	2216:10:78330:78351	901774	0	True				
ANR	902115	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		901774	0					
ANR	902116	Callee	HAS_EXTRALEN		901774	0					
ANR	902117	Identifier	HAS_EXTRALEN		901774	0					
ANR	902118	ArgumentList	code [ - 1 ]		901774	1					
ANR	902119	Argument	code [ - 1 ]		901774	0					
ANR	902120	ArrayIndexing	code [ - 1 ]		901774	0					
ANR	902121	Identifier	code		901774	0					
ANR	902122	UnaryOperationExpression	- 1		901774	1					
ANR	902123	UnaryOperator	-		901774	0					
ANR	902124	PrimaryExpression	1		901774	1					
ANR	902125	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	2216:34:78354:78384	901774	1	True				
ANR	902126	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		901774	0		+=			
ANR	902127	Identifier	code		901774	0					
ANR	902128	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		901774	1					
ANR	902129	Callee	GET_EXTRALEN		901774	0					
ANR	902130	Identifier	GET_EXTRALEN		901774	0					
ANR	902131	ArgumentList	code [ - 1 ]		901774	1					
ANR	902132	Argument	code [ - 1 ]		901774	0					
ANR	902133	ArrayIndexing	code [ - 1 ]		901774	0					
ANR	902134	Identifier	code		901774	0					
ANR	902135	UnaryOperationExpression	- 1		901774	1					
ANR	902136	UnaryOperator	-		901774	0					
ANR	902137	PrimaryExpression	1		901774	1					
ANR	902138	BreakStatement	break ;	2217:6:78392:78397	901774	57	True				
ANR	902139	ReturnType	PRIV		901774	1					
ANR	902140	Identifier	( find_bracket )		901774	2					
ANR	902141	Identifier	find_bracket		901774	3					
ANR	902142	ParameterList	"const pcre_uchar * code , BOOL utf , int number"		901774	4					
ANR	902143	Parameter	const pcre_uchar * code	2080:19:74849:74870	901774	0	True				
ANR	902144	ParameterType	const pcre_uchar *		901774	0					
ANR	902145	Identifier	code		901774	1					
ANR	902146	Parameter	BOOL utf	2080:43:74873:74880	901774	1	True				
ANR	902147	ParameterType	BOOL		901774	0					
ANR	902148	Identifier	utf		901774	1					
ANR	902149	Parameter	int number	2080:53:74883:74892	901774	2	True				
ANR	902150	ParameterType	int		901774	0					
ANR	902151	Identifier	number		901774	1					
ANR	902152	CFGEntryNode	ENTRY		901774		True				
ANR	902153	CFGExitNode	EXIT		901774		True				
ANR	902154	InfiniteForNode	true		901774		True				
ANR	902155	Symbol	code		901774						
ANR	902156	Symbol	* IMM2_SIZE		901774						
ANR	902157	Symbol	OP_CBRA		901774						
ANR	902158	Symbol	PRIV		901774						
ANR	902159	Symbol	number		901774						
ANR	902160	Symbol	OP_REVERSE		901774						
ANR	902161	Symbol	OP_CBRAPOS		901774						
ANR	902162	Symbol	GET_EXTRALEN		901774						
ANR	902163	Symbol	GET2		901774						
ANR	902164	Symbol	OP_SCBRAPOS		901774						
ANR	902165	Symbol	HAS_EXTRALEN		901774						
ANR	902166	Symbol	c		901774						
ANR	902167	Symbol	NULL		901774						
ANR	902168	Symbol	utf		901774						
ANR	902169	Symbol	IMM2_SIZE		901774						
ANR	902170	Symbol	* c		901774						
ANR	902171	Symbol	n		901774						
ANR	902172	Symbol	OP_NOTPROP		901774						
ANR	902173	Symbol	LINK_SIZE		901774						
ANR	902174	Symbol	* PRIV		901774						
ANR	902175	Symbol	OP_PROP		901774						
ANR	902176	Symbol	OP_XCLASS		901774						
ANR	902177	Symbol	GET		901774						
ANR	902178	Symbol	OP_lengths		901774						
ANR	902179	Symbol	* code		901774						
ANR	902180	Symbol	OP_END		901774						
ANR	902181	Symbol	OP_SCBRA		901774						
ANR	902182	Function	find_recurse	2242:0:78950:82267							
ANR	902183	FunctionDef	"find_recurse (const pcre_uchar * code , BOOL utf)"		902182	0					
ANR	902184	CompoundStatement		2244:0:79023:82267	902182	0					
ANR	902185	ForStatement	for ( ; ; )		902182	0					
ANR	902186	CompoundStatement		4:11:25:45	902182	0					
ANR	902187	Statement	register	2247:2:79040:79047	902182	0	True				
ANR	902188	IdentifierDeclStatement	pcre_uchar c = * code ;	2247:11:79049:79069	902182	1	True				
ANR	902189	IdentifierDecl	c = * code		902182	0					
ANR	902190	IdentifierDeclType	pcre_uchar		902182	0					
ANR	902191	Identifier	c		902182	1					
ANR	902192	AssignmentExpression	c = * code		902182	2		=			
ANR	902193	Identifier	c		902182	0					
ANR	902194	UnaryOperationExpression	* code		902182	1					
ANR	902195	UnaryOperator	*		902182	0					
ANR	902196	Identifier	code		902182	1					
ANR	902197	IfStatement	if ( c == OP_END )		902182	2					
ANR	902198	Condition	c == OP_END	2248:6:79077:79087	902182	0	True				
ANR	902199	EqualityExpression	c == OP_END		902182	0		==			
ANR	902200	Identifier	c		902182	0					
ANR	902201	Identifier	OP_END		902182	1					
ANR	902202	ReturnStatement	return NULL ;	2248:19:79090:79101	902182	1	True				
ANR	902203	Identifier	NULL		902182	0					
ANR	902204	IfStatement	if ( c == OP_RECURSE )		902182	3					
ANR	902205	Condition	c == OP_RECURSE	2249:6:79109:79123	902182	0	True				
ANR	902206	EqualityExpression	c == OP_RECURSE		902182	0		==			
ANR	902207	Identifier	c		902182	0					
ANR	902208	Identifier	OP_RECURSE		902182	1					
ANR	902209	ReturnStatement	return code ;	2249:23:79126:79137	902182	1	True				
ANR	902210	Identifier	code		902182	0					
ANR	902211	IfStatement	if ( c == OP_XCLASS )		902182	4					
ANR	902212	Condition	c == OP_XCLASS	2255:6:79368:79381	902182	0	True				
ANR	902213	EqualityExpression	c == OP_XCLASS		902182	0		==			
ANR	902214	Identifier	c		902182	0					
ANR	902215	Identifier	OP_XCLASS		902182	1					
ANR	902216	ExpressionStatement	"code += GET ( code , 1 )"	2255:22:79384:79404	902182	1	True				
ANR	902217	AssignmentExpression	"code += GET ( code , 1 )"		902182	0		+=			
ANR	902218	Identifier	code		902182	0					
ANR	902219	CallExpression	"GET ( code , 1 )"		902182	1					
ANR	902220	Callee	GET		902182	0					
ANR	902221	Identifier	GET		902182	0					
ANR	902222	ArgumentList	code		902182	1					
ANR	902223	Argument	code		902182	0					
ANR	902224	Identifier	code		902182	0					
ANR	902225	Argument	1		902182	1					
ANR	902226	PrimaryExpression	1		902182	0					
ANR	902227	ElseStatement	else		902182	0					
ANR	902228	CompoundStatement		20:4:657:657	902182	0					
ANR	902229	SwitchStatement	switch ( c )		902182	0					
ANR	902230	Condition	c	2264:11:79694:79694	902182	0	True				
ANR	902231	Identifier	c		902182	0					
ANR	902232	CompoundStatement		22:6:679:679	902182	1					
ANR	902233	Label	case OP_TYPESTAR :	2266:6:79711:79727	902182	0	True				
ANR	902234	Identifier	OP_TYPESTAR		902182	0					
ANR	902235	Label	case OP_TYPEMINSTAR :	2267:6:79735:79754	902182	1	True				
ANR	902236	Identifier	OP_TYPEMINSTAR		902182	0					
ANR	902237	Label	case OP_TYPEPLUS :	2268:6:79762:79778	902182	2	True				
ANR	902238	Identifier	OP_TYPEPLUS		902182	0					
ANR	902239	Label	case OP_TYPEMINPLUS :	2269:6:79786:79805	902182	3	True				
ANR	902240	Identifier	OP_TYPEMINPLUS		902182	0					
ANR	902241	Label	case OP_TYPEQUERY :	2270:6:79813:79830	902182	4	True				
ANR	902242	Identifier	OP_TYPEQUERY		902182	0					
ANR	902243	Label	case OP_TYPEMINQUERY :	2271:6:79838:79858	902182	5	True				
ANR	902244	Identifier	OP_TYPEMINQUERY		902182	0					
ANR	902245	Label	case OP_TYPEPOSSTAR :	2272:6:79866:79885	902182	6	True				
ANR	902246	Identifier	OP_TYPEPOSSTAR		902182	0					
ANR	902247	Label	case OP_TYPEPOSPLUS :	2273:6:79893:79912	902182	7	True				
ANR	902248	Identifier	OP_TYPEPOSPLUS		902182	0					
ANR	902249	Label	case OP_TYPEPOSQUERY :	2274:6:79920:79940	902182	8	True				
ANR	902250	Identifier	OP_TYPEPOSQUERY		902182	0					
ANR	902251	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		902182	9					
ANR	902252	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2275:10:79952:79994	902182	0	True				
ANR	902253	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		902182	0		||			
ANR	902254	EqualityExpression	code [ 1 ] == OP_PROP		902182	0		==			
ANR	902255	ArrayIndexing	code [ 1 ]		902182	0					
ANR	902256	Identifier	code		902182	0					
ANR	902257	PrimaryExpression	1		902182	1					
ANR	902258	Identifier	OP_PROP		902182	1					
ANR	902259	EqualityExpression	code [ 1 ] == OP_NOTPROP		902182	1		==			
ANR	902260	ArrayIndexing	code [ 1 ]		902182	0					
ANR	902261	Identifier	code		902182	0					
ANR	902262	PrimaryExpression	1		902182	1					
ANR	902263	Identifier	OP_NOTPROP		902182	1					
ANR	902264	ExpressionStatement	code += 2	2275:55:79997:80006	902182	1	True				
ANR	902265	AssignmentExpression	code += 2		902182	0		+=			
ANR	902266	Identifier	code		902182	0					
ANR	902267	PrimaryExpression	2		902182	1					
ANR	902268	BreakStatement	break ;	2276:6:80014:80019	902182	10	True				
ANR	902269	Label	case OP_TYPEPOSUPTO :	2278:6:80028:80047	902182	11	True				
ANR	902270	Identifier	OP_TYPEPOSUPTO		902182	0					
ANR	902271	Label	case OP_TYPEUPTO :	2279:6:80055:80071	902182	12	True				
ANR	902272	Identifier	OP_TYPEUPTO		902182	0					
ANR	902273	Label	case OP_TYPEMINUPTO :	2280:6:80079:80098	902182	13	True				
ANR	902274	Identifier	OP_TYPEMINUPTO		902182	0					
ANR	902275	Label	case OP_TYPEEXACT :	2281:6:80106:80123	902182	14	True				
ANR	902276	Identifier	OP_TYPEEXACT		902182	0					
ANR	902277	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		902182	15					
ANR	902278	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2282:10:80135:80201	902182	0	True				
ANR	902279	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		902182	0		||			
ANR	902280	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		902182	0		==			
ANR	902281	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902182	0					
ANR	902282	Identifier	code		902182	0					
ANR	902283	AdditiveExpression	1 + IMM2_SIZE		902182	1		+			
ANR	902284	PrimaryExpression	1		902182	0					
ANR	902285	Identifier	IMM2_SIZE		902182	1					
ANR	902286	Identifier	OP_PROP		902182	1					
ANR	902287	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		902182	1		==			
ANR	902288	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902182	0					
ANR	902289	Identifier	code		902182	0					
ANR	902290	AdditiveExpression	1 + IMM2_SIZE		902182	1		+			
ANR	902291	PrimaryExpression	1		902182	0					
ANR	902292	Identifier	IMM2_SIZE		902182	1					
ANR	902293	Identifier	OP_NOTPROP		902182	1					
ANR	902294	ExpressionStatement	code += 2	2283:8:80212:80221	902182	1	True				
ANR	902295	AssignmentExpression	code += 2		902182	0		+=			
ANR	902296	Identifier	code		902182	0					
ANR	902297	PrimaryExpression	2		902182	1					
ANR	902298	BreakStatement	break ;	2284:6:80229:80234	902182	16	True				
ANR	902299	Label	case OP_MARK :	2286:6:80243:80255	902182	17	True				
ANR	902300	Identifier	OP_MARK		902182	0					
ANR	902301	Label	case OP_PRUNE_ARG :	2287:6:80263:80280	902182	18	True				
ANR	902302	Identifier	OP_PRUNE_ARG		902182	0					
ANR	902303	Label	case OP_SKIP_ARG :	2288:6:80288:80304	902182	19	True				
ANR	902304	Identifier	OP_SKIP_ARG		902182	0					
ANR	902305	Label	case OP_THEN_ARG :	2289:6:80312:80328	902182	20	True				
ANR	902306	Identifier	OP_THEN_ARG		902182	0					
ANR	902307	ExpressionStatement	code += code [ 1 ]	2290:6:80336:80351	902182	21	True				
ANR	902308	AssignmentExpression	code += code [ 1 ]		902182	0		+=			
ANR	902309	Identifier	code		902182	0					
ANR	902310	ArrayIndexing	code [ 1 ]		902182	1					
ANR	902311	Identifier	code		902182	0					
ANR	902312	PrimaryExpression	1		902182	1					
ANR	902313	BreakStatement	break ;	2291:6:80359:80364	902182	22	True				
ANR	902314	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2296:4:80429:80456	902182	1	True				
ANR	902315	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		902182	0		+=			
ANR	902316	Identifier	code		902182	0					
ANR	902317	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		902182	1					
ANR	902318	CallExpression	PRIV ( OP_lengths )		902182	0					
ANR	902319	Callee	PRIV		902182	0					
ANR	902320	Identifier	PRIV		902182	0					
ANR	902321	ArgumentList	OP_lengths		902182	1					
ANR	902322	Argument	OP_lengths		902182	0					
ANR	902323	Identifier	OP_lengths		902182	0					
ANR	902324	Identifier	c		902182	1					
ANR	902325	IfStatement	if ( utf )		902182	2					
ANR	902326	Condition	utf	2303:8:80721:80723	902182	0	True				
ANR	902327	Identifier	utf		902182	0					
ANR	902328	SwitchStatement	switch ( c )		902182	1					
ANR	902329	Condition	c	2303:20:80733:80733	902182	0	True				
ANR	902330	Identifier	c		902182	0					
ANR	902331	CompoundStatement		61:6:1718:1718	902182	1					
ANR	902332	Label	case OP_CHAR :	2305:6:80750:80762	902182	0	True				
ANR	902333	Identifier	OP_CHAR		902182	0					
ANR	902334	Label	case OP_CHARI :	2306:6:80770:80783	902182	1	True				
ANR	902335	Identifier	OP_CHARI		902182	0					
ANR	902336	Label	case OP_NOT :	2307:6:80791:80802	902182	2	True				
ANR	902337	Identifier	OP_NOT		902182	0					
ANR	902338	Label	case OP_NOTI :	2308:6:80810:80822	902182	3	True				
ANR	902339	Identifier	OP_NOTI		902182	0					
ANR	902340	Label	case OP_EXACT :	2309:6:80830:80843	902182	4	True				
ANR	902341	Identifier	OP_EXACT		902182	0					
ANR	902342	Label	case OP_EXACTI :	2310:6:80851:80865	902182	5	True				
ANR	902343	Identifier	OP_EXACTI		902182	0					
ANR	902344	Label	case OP_NOTEXACT :	2311:6:80873:80889	902182	6	True				
ANR	902345	Identifier	OP_NOTEXACT		902182	0					
ANR	902346	Label	case OP_NOTEXACTI :	2312:6:80897:80914	902182	7	True				
ANR	902347	Identifier	OP_NOTEXACTI		902182	0					
ANR	902348	Label	case OP_UPTO :	2313:6:80922:80934	902182	8	True				
ANR	902349	Identifier	OP_UPTO		902182	0					
ANR	902350	Label	case OP_UPTOI :	2314:6:80942:80955	902182	9	True				
ANR	902351	Identifier	OP_UPTOI		902182	0					
ANR	902352	Label	case OP_NOTUPTO :	2315:6:80963:80978	902182	10	True				
ANR	902353	Identifier	OP_NOTUPTO		902182	0					
ANR	902354	Label	case OP_NOTUPTOI :	2316:6:80986:81002	902182	11	True				
ANR	902355	Identifier	OP_NOTUPTOI		902182	0					
ANR	902356	Label	case OP_MINUPTO :	2317:6:81010:81025	902182	12	True				
ANR	902357	Identifier	OP_MINUPTO		902182	0					
ANR	902358	Label	case OP_MINUPTOI :	2318:6:81033:81049	902182	13	True				
ANR	902359	Identifier	OP_MINUPTOI		902182	0					
ANR	902360	Label	case OP_NOTMINUPTO :	2319:6:81057:81075	902182	14	True				
ANR	902361	Identifier	OP_NOTMINUPTO		902182	0					
ANR	902362	Label	case OP_NOTMINUPTOI :	2320:6:81083:81102	902182	15	True				
ANR	902363	Identifier	OP_NOTMINUPTOI		902182	0					
ANR	902364	Label	case OP_POSUPTO :	2321:6:81110:81125	902182	16	True				
ANR	902365	Identifier	OP_POSUPTO		902182	0					
ANR	902366	Label	case OP_POSUPTOI :	2322:6:81133:81149	902182	17	True				
ANR	902367	Identifier	OP_POSUPTOI		902182	0					
ANR	902368	Label	case OP_NOTPOSUPTO :	2323:6:81157:81175	902182	18	True				
ANR	902369	Identifier	OP_NOTPOSUPTO		902182	0					
ANR	902370	Label	case OP_NOTPOSUPTOI :	2324:6:81183:81202	902182	19	True				
ANR	902371	Identifier	OP_NOTPOSUPTOI		902182	0					
ANR	902372	Label	case OP_STAR :	2325:6:81210:81222	902182	20	True				
ANR	902373	Identifier	OP_STAR		902182	0					
ANR	902374	Label	case OP_STARI :	2326:6:81230:81243	902182	21	True				
ANR	902375	Identifier	OP_STARI		902182	0					
ANR	902376	Label	case OP_NOTSTAR :	2327:6:81251:81266	902182	22	True				
ANR	902377	Identifier	OP_NOTSTAR		902182	0					
ANR	902378	Label	case OP_NOTSTARI :	2328:6:81274:81290	902182	23	True				
ANR	902379	Identifier	OP_NOTSTARI		902182	0					
ANR	902380	Label	case OP_MINSTAR :	2329:6:81298:81313	902182	24	True				
ANR	902381	Identifier	OP_MINSTAR		902182	0					
ANR	902382	Label	case OP_MINSTARI :	2330:6:81321:81337	902182	25	True				
ANR	902383	Identifier	OP_MINSTARI		902182	0					
ANR	902384	Label	case OP_NOTMINSTAR :	2331:6:81345:81363	902182	26	True				
ANR	902385	Identifier	OP_NOTMINSTAR		902182	0					
ANR	902386	Label	case OP_NOTMINSTARI :	2332:6:81371:81390	902182	27	True				
ANR	902387	Identifier	OP_NOTMINSTARI		902182	0					
ANR	902388	Label	case OP_POSSTAR :	2333:6:81398:81413	902182	28	True				
ANR	902389	Identifier	OP_POSSTAR		902182	0					
ANR	902390	Label	case OP_POSSTARI :	2334:6:81421:81437	902182	29	True				
ANR	902391	Identifier	OP_POSSTARI		902182	0					
ANR	902392	Label	case OP_NOTPOSSTAR :	2335:6:81445:81463	902182	30	True				
ANR	902393	Identifier	OP_NOTPOSSTAR		902182	0					
ANR	902394	Label	case OP_NOTPOSSTARI :	2336:6:81471:81490	902182	31	True				
ANR	902395	Identifier	OP_NOTPOSSTARI		902182	0					
ANR	902396	Label	case OP_PLUS :	2337:6:81498:81510	902182	32	True				
ANR	902397	Identifier	OP_PLUS		902182	0					
ANR	902398	Label	case OP_PLUSI :	2338:6:81518:81531	902182	33	True				
ANR	902399	Identifier	OP_PLUSI		902182	0					
ANR	902400	Label	case OP_NOTPLUS :	2339:6:81539:81554	902182	34	True				
ANR	902401	Identifier	OP_NOTPLUS		902182	0					
ANR	902402	Label	case OP_NOTPLUSI :	2340:6:81562:81578	902182	35	True				
ANR	902403	Identifier	OP_NOTPLUSI		902182	0					
ANR	902404	Label	case OP_MINPLUS :	2341:6:81586:81601	902182	36	True				
ANR	902405	Identifier	OP_MINPLUS		902182	0					
ANR	902406	Label	case OP_MINPLUSI :	2342:6:81609:81625	902182	37	True				
ANR	902407	Identifier	OP_MINPLUSI		902182	0					
ANR	902408	Label	case OP_NOTMINPLUS :	2343:6:81633:81651	902182	38	True				
ANR	902409	Identifier	OP_NOTMINPLUS		902182	0					
ANR	902410	Label	case OP_NOTMINPLUSI :	2344:6:81659:81678	902182	39	True				
ANR	902411	Identifier	OP_NOTMINPLUSI		902182	0					
ANR	902412	Label	case OP_POSPLUS :	2345:6:81686:81701	902182	40	True				
ANR	902413	Identifier	OP_POSPLUS		902182	0					
ANR	902414	Label	case OP_POSPLUSI :	2346:6:81709:81725	902182	41	True				
ANR	902415	Identifier	OP_POSPLUSI		902182	0					
ANR	902416	Label	case OP_NOTPOSPLUS :	2347:6:81733:81751	902182	42	True				
ANR	902417	Identifier	OP_NOTPOSPLUS		902182	0					
ANR	902418	Label	case OP_NOTPOSPLUSI :	2348:6:81759:81778	902182	43	True				
ANR	902419	Identifier	OP_NOTPOSPLUSI		902182	0					
ANR	902420	Label	case OP_QUERY :	2349:6:81786:81799	902182	44	True				
ANR	902421	Identifier	OP_QUERY		902182	0					
ANR	902422	Label	case OP_QUERYI :	2350:6:81807:81821	902182	45	True				
ANR	902423	Identifier	OP_QUERYI		902182	0					
ANR	902424	Label	case OP_NOTQUERY :	2351:6:81829:81845	902182	46	True				
ANR	902425	Identifier	OP_NOTQUERY		902182	0					
ANR	902426	Label	case OP_NOTQUERYI :	2352:6:81853:81870	902182	47	True				
ANR	902427	Identifier	OP_NOTQUERYI		902182	0					
ANR	902428	Label	case OP_MINQUERY :	2353:6:81878:81894	902182	48	True				
ANR	902429	Identifier	OP_MINQUERY		902182	0					
ANR	902430	Label	case OP_MINQUERYI :	2354:6:81902:81919	902182	49	True				
ANR	902431	Identifier	OP_MINQUERYI		902182	0					
ANR	902432	Label	case OP_NOTMINQUERY :	2355:6:81927:81946	902182	50	True				
ANR	902433	Identifier	OP_NOTMINQUERY		902182	0					
ANR	902434	Label	case OP_NOTMINQUERYI :	2356:6:81954:81974	902182	51	True				
ANR	902435	Identifier	OP_NOTMINQUERYI		902182	0					
ANR	902436	Label	case OP_POSQUERY :	2357:6:81982:81998	902182	52	True				
ANR	902437	Identifier	OP_POSQUERY		902182	0					
ANR	902438	Label	case OP_POSQUERYI :	2358:6:82006:82023	902182	53	True				
ANR	902439	Identifier	OP_POSQUERYI		902182	0					
ANR	902440	Label	case OP_NOTPOSQUERY :	2359:6:82031:82050	902182	54	True				
ANR	902441	Identifier	OP_NOTPOSQUERY		902182	0					
ANR	902442	Label	case OP_NOTPOSQUERYI :	2360:6:82058:82078	902182	55	True				
ANR	902443	Identifier	OP_NOTPOSQUERYI		902182	0					
ANR	902444	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		902182	56					
ANR	902445	Condition	HAS_EXTRALEN ( code [ - 1 ] )	2361:10:82090:82111	902182	0	True				
ANR	902446	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		902182	0					
ANR	902447	Callee	HAS_EXTRALEN		902182	0					
ANR	902448	Identifier	HAS_EXTRALEN		902182	0					
ANR	902449	ArgumentList	code [ - 1 ]		902182	1					
ANR	902450	Argument	code [ - 1 ]		902182	0					
ANR	902451	ArrayIndexing	code [ - 1 ]		902182	0					
ANR	902452	Identifier	code		902182	0					
ANR	902453	UnaryOperationExpression	- 1		902182	1					
ANR	902454	UnaryOperator	-		902182	0					
ANR	902455	PrimaryExpression	1		902182	1					
ANR	902456	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	2361:34:82114:82144	902182	1	True				
ANR	902457	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		902182	0		+=			
ANR	902458	Identifier	code		902182	0					
ANR	902459	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		902182	1					
ANR	902460	Callee	GET_EXTRALEN		902182	0					
ANR	902461	Identifier	GET_EXTRALEN		902182	0					
ANR	902462	ArgumentList	code [ - 1 ]		902182	1					
ANR	902463	Argument	code [ - 1 ]		902182	0					
ANR	902464	ArrayIndexing	code [ - 1 ]		902182	0					
ANR	902465	Identifier	code		902182	0					
ANR	902466	UnaryOperationExpression	- 1		902182	1					
ANR	902467	UnaryOperator	-		902182	0					
ANR	902468	PrimaryExpression	1		902182	1					
ANR	902469	BreakStatement	break ;	2362:6:82152:82157	902182	57	True				
ANR	902470	ReturnType	static const pcre_uchar *		902182	1					
ANR	902471	Identifier	find_recurse		902182	2					
ANR	902472	ParameterList	"const pcre_uchar * code , BOOL utf"		902182	3					
ANR	902473	Parameter	const pcre_uchar * code	2243:13:78989:79010	902182	0	True				
ANR	902474	ParameterType	const pcre_uchar *		902182	0					
ANR	902475	Identifier	code		902182	1					
ANR	902476	Parameter	BOOL utf	2243:37:79013:79020	902182	1	True				
ANR	902477	ParameterType	BOOL		902182	0					
ANR	902478	Identifier	utf		902182	1					
ANR	902479	CFGEntryNode	ENTRY		902182		True				
ANR	902480	CFGExitNode	EXIT		902182		True				
ANR	902481	InfiniteForNode	true		902182		True				
ANR	902482	Symbol	HAS_EXTRALEN		902182						
ANR	902483	Symbol	code		902182						
ANR	902484	Symbol	c		902182						
ANR	902485	Symbol	NULL		902182						
ANR	902486	Symbol	* IMM2_SIZE		902182						
ANR	902487	Symbol	utf		902182						
ANR	902488	Symbol	IMM2_SIZE		902182						
ANR	902489	Symbol	PRIV		902182						
ANR	902490	Symbol	* c		902182						
ANR	902491	Symbol	OP_NOTPROP		902182						
ANR	902492	Symbol	OP_RECURSE		902182						
ANR	902493	Symbol	OP_PROP		902182						
ANR	902494	Symbol	* PRIV		902182						
ANR	902495	Symbol	OP_XCLASS		902182						
ANR	902496	Symbol	GET		902182						
ANR	902497	Symbol	GET_EXTRALEN		902182						
ANR	902498	Symbol	OP_lengths		902182						
ANR	902499	Symbol	* code		902182						
ANR	902500	Symbol	OP_END		902182						
ANR	902501	Function	could_be_empty_branch	2395:0:83258:92200							
ANR	902502	FunctionDef	"could_be_empty_branch (const pcre_uchar * code , const pcre_uchar * endcode , BOOL utf , compile_data * cd , recurse_check * recurses)"		902501	0					
ANR	902503	CompoundStatement		2398:0:83398:92200	902501	0					
ANR	902504	Statement	register	2399:0:83400:83407	902501	0	True				
ANR	902505	IdentifierDeclStatement	pcre_uchar c ;	2399:9:83409:83421	902501	1	True				
ANR	902506	IdentifierDecl	c		902501	0					
ANR	902507	IdentifierDeclType	pcre_uchar		902501	0					
ANR	902508	Identifier	c		902501	1					
ANR	902509	IdentifierDeclStatement	recurse_check this_recurse ;	2400:0:83423:83449	902501	2	True				
ANR	902510	IdentifierDecl	this_recurse		902501	0					
ANR	902511	IdentifierDeclType	recurse_check		902501	0					
ANR	902512	Identifier	this_recurse		902501	1					
ANR	902513	ForStatement	"for ( code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE ) ; code < endcode ; code = first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE ) )"		902501	3					
ANR	902514	ForInit	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE ) ;"	2402:5:83457:83524	902501	0	True				
ANR	902515	AssignmentExpression	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE )"		902501	0		=			
ANR	902516	Identifier	code		902501	0					
ANR	902517	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE )"		902501	1					
ANR	902518	Callee	first_significant_code		902501	0					
ANR	902519	Identifier	first_significant_code		902501	0					
ANR	902520	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		902501	1					
ANR	902521	Argument	code + PRIV ( OP_lengths ) [ * code ]		902501	0					
ANR	902522	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		902501	0		+			
ANR	902523	Identifier	code		902501	0					
ANR	902524	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		902501	1					
ANR	902525	CallExpression	PRIV ( OP_lengths )		902501	0					
ANR	902526	Callee	PRIV		902501	0					
ANR	902527	Identifier	PRIV		902501	0					
ANR	902528	ArgumentList	OP_lengths		902501	1					
ANR	902529	Argument	OP_lengths		902501	0					
ANR	902530	Identifier	OP_lengths		902501	0					
ANR	902531	UnaryOperationExpression	* code		902501	1					
ANR	902532	UnaryOperator	*		902501	0					
ANR	902533	Identifier	code		902501	1					
ANR	902534	Argument	TRUE		902501	1					
ANR	902535	Identifier	TRUE		902501	0					
ANR	902536	Condition	code < endcode	2403:5:83531:83544	902501	1	True				
ANR	902537	RelationalExpression	code < endcode		902501	0		<			
ANR	902538	Identifier	code		902501	0					
ANR	902539	Identifier	endcode		902501	1					
ANR	902540	AssignmentExpression	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE )"	2404:5:83552:83614	902501	2	True	=			
ANR	902541	Identifier	code		902501	0					
ANR	902542	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE )"		902501	1					
ANR	902543	Callee	first_significant_code		902501	0					
ANR	902544	Identifier	first_significant_code		902501	0					
ANR	902545	ArgumentList	code + PRIV ( OP_lengths ) [ c ]		902501	1					
ANR	902546	Argument	code + PRIV ( OP_lengths ) [ c ]		902501	0					
ANR	902547	AdditiveExpression	code + PRIV ( OP_lengths ) [ c ]		902501	0		+			
ANR	902548	Identifier	code		902501	0					
ANR	902549	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		902501	1					
ANR	902550	CallExpression	PRIV ( OP_lengths )		902501	0					
ANR	902551	Callee	PRIV		902501	0					
ANR	902552	Identifier	PRIV		902501	0					
ANR	902553	ArgumentList	OP_lengths		902501	1					
ANR	902554	Argument	OP_lengths		902501	0					
ANR	902555	Identifier	OP_lengths		902501	0					
ANR	902556	Identifier	c		902501	1					
ANR	902557	Argument	TRUE		902501	1					
ANR	902558	Identifier	TRUE		902501	0					
ANR	902559	CompoundStatement		9:2:224:247	902501	3					
ANR	902560	IdentifierDeclStatement	const pcre_uchar * ccode ;	2406:2:83623:83646	902501	0	True				
ANR	902561	IdentifierDecl	* ccode		902501	0					
ANR	902562	IdentifierDeclType	const pcre_uchar *		902501	0					
ANR	902563	Identifier	ccode		902501	1					
ANR	902564	ExpressionStatement	c = * code	2408:2:83651:83660	902501	1	True				
ANR	902565	AssignmentExpression	c = * code		902501	0		=			
ANR	902566	Identifier	c		902501	0					
ANR	902567	UnaryOperationExpression	* code		902501	1					
ANR	902568	UnaryOperator	*		902501	0					
ANR	902569	Identifier	code		902501	1					
ANR	902570	IfStatement	if ( c == OP_ASSERT )		902501	2					
ANR	902571	Condition	c == OP_ASSERT	2413:6:83799:83812	902501	0	True				
ANR	902572	EqualityExpression	c == OP_ASSERT		902501	0		==			
ANR	902573	Identifier	c		902501	0					
ANR	902574	Identifier	OP_ASSERT		902501	1					
ANR	902575	CompoundStatement		17:4:420:420	902501	1					
ANR	902576	DoStatement	do		902501	0					
ANR	902577	ExpressionStatement	"code += GET ( code , 1 )"	2415:7:83828:83848	902501	0	True				
ANR	902578	AssignmentExpression	"code += GET ( code , 1 )"		902501	0		+=			
ANR	902579	Identifier	code		902501	0					
ANR	902580	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	902581	Callee	GET		902501	0					
ANR	902582	Identifier	GET		902501	0					
ANR	902583	ArgumentList	code		902501	1					
ANR	902584	Argument	code		902501	0					
ANR	902585	Identifier	code		902501	0					
ANR	902586	Argument	1		902501	1					
ANR	902587	PrimaryExpression	1		902501	0					
ANR	902588	Condition	* code == OP_ALT	2415:36:83857:83871	902501	1	True				
ANR	902589	EqualityExpression	* code == OP_ALT		902501	0		==			
ANR	902590	UnaryOperationExpression	* code		902501	0					
ANR	902591	UnaryOperator	*		902501	0					
ANR	902592	Identifier	code		902501	1					
ANR	902593	Identifier	OP_ALT		902501	1					
ANR	902594	ExpressionStatement	c = * code	2416:4:83879:83888	902501	1	True				
ANR	902595	AssignmentExpression	c = * code		902501	0		=			
ANR	902596	Identifier	c		902501	0					
ANR	902597	UnaryOperationExpression	* code		902501	1					
ANR	902598	UnaryOperator	*		902501	0					
ANR	902599	Identifier	code		902501	1					
ANR	902600	ContinueStatement	continue ;	2417:4:83894:83902	902501	2	True				
ANR	902601	IfStatement	if ( c == OP_RECURSE )		902501	3					
ANR	902602	Condition	c == OP_RECURSE	2427:6:84341:84355	902501	0	True				
ANR	902603	EqualityExpression	c == OP_RECURSE		902501	0		==			
ANR	902604	Identifier	c		902501	0					
ANR	902605	Identifier	OP_RECURSE		902501	1					
ANR	902606	CompoundStatement		34:4:1070:1087	902501	1					
ANR	902607	IdentifierDeclStatement	"const pcre_uchar * scode = cd -> start_code + GET ( code , 1 ) ;"	2429:4:84368:84423	902501	0	True				
ANR	902608	IdentifierDecl	"* scode = cd -> start_code + GET ( code , 1 )"		902501	0					
ANR	902609	IdentifierDeclType	const pcre_uchar *		902501	0					
ANR	902610	Identifier	scode		902501	1					
ANR	902611	AssignmentExpression	"* scode = cd -> start_code + GET ( code , 1 )"		902501	2		=			
ANR	902612	Identifier	scode		902501	0					
ANR	902613	AdditiveExpression	"cd -> start_code + GET ( code , 1 )"		902501	1		+			
ANR	902614	PtrMemberAccess	cd -> start_code		902501	0					
ANR	902615	Identifier	cd		902501	0					
ANR	902616	Identifier	start_code		902501	1					
ANR	902617	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	902618	Callee	GET		902501	0					
ANR	902619	Identifier	GET		902501	0					
ANR	902620	ArgumentList	code		902501	1					
ANR	902621	Argument	code		902501	0					
ANR	902622	Identifier	code		902501	0					
ANR	902623	Argument	1		902501	1					
ANR	902624	PrimaryExpression	1		902501	0					
ANR	902625	IdentifierDeclStatement	const pcre_uchar * endgroup = scode ;	2430:4:84429:84463	902501	1	True				
ANR	902626	IdentifierDecl	* endgroup = scode		902501	0					
ANR	902627	IdentifierDeclType	const pcre_uchar *		902501	0					
ANR	902628	Identifier	endgroup		902501	1					
ANR	902629	AssignmentExpression	* endgroup = scode		902501	2		=			
ANR	902630	Identifier	scode		902501	0					
ANR	902631	Identifier	scode		902501	1					
ANR	902632	IdentifierDeclStatement	BOOL empty_branch ;	2431:4:84469:84486	902501	2	True				
ANR	902633	IdentifierDecl	empty_branch		902501	0					
ANR	902634	IdentifierDeclType	BOOL		902501	0					
ANR	902635	Identifier	empty_branch		902501	1					
ANR	902636	IfStatement	if ( cd -> start_workspace != NULL )		902501	3					
ANR	902637	Condition	cd -> start_workspace != NULL	2437:8:84666:84692	902501	0	True				
ANR	902638	EqualityExpression	cd -> start_workspace != NULL		902501	0		!=			
ANR	902639	PtrMemberAccess	cd -> start_workspace		902501	0					
ANR	902640	Identifier	cd		902501	0					
ANR	902641	Identifier	start_workspace		902501	1					
ANR	902642	Identifier	NULL		902501	1					
ANR	902643	CompoundStatement		42:6:1310:1333	902501	1					
ANR	902644	IdentifierDeclStatement	const pcre_uchar * tcode ;	2439:6:84709:84732	902501	0	True				
ANR	902645	IdentifierDecl	* tcode		902501	0					
ANR	902646	IdentifierDeclType	const pcre_uchar *		902501	0					
ANR	902647	Identifier	tcode		902501	1					
ANR	902648	ForStatement	for ( tcode = cd -> start_workspace ; tcode < cd -> hwm ; tcode += LINK_SIZE )		902501	1					
ANR	902649	ForInit	tcode = cd -> start_workspace ;	2440:11:84745:84772	902501	0	True				
ANR	902650	AssignmentExpression	tcode = cd -> start_workspace		902501	0		=			
ANR	902651	Identifier	tcode		902501	0					
ANR	902652	PtrMemberAccess	cd -> start_workspace		902501	1					
ANR	902653	Identifier	cd		902501	0					
ANR	902654	Identifier	start_workspace		902501	1					
ANR	902655	Condition	tcode < cd -> hwm	2440:40:84774:84788	902501	1	True				
ANR	902656	RelationalExpression	tcode < cd -> hwm		902501	0		<			
ANR	902657	Identifier	tcode		902501	0					
ANR	902658	PtrMemberAccess	cd -> hwm		902501	1					
ANR	902659	Identifier	cd		902501	0					
ANR	902660	Identifier	hwm		902501	1					
ANR	902661	AssignmentExpression	tcode += LINK_SIZE	2440:57:84791:84808	902501	2	True	+=			
ANR	902662	Identifier	tcode		902501	0					
ANR	902663	Identifier	LINK_SIZE		902501	1					
ANR	902664	IfStatement	"if ( ( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code ) )"		902501	3					
ANR	902665	Condition	"( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code )"	2441:12:84823:84876	902501	0	True				
ANR	902666	EqualityExpression	"( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code )"		902501	0		==			
ANR	902667	CastExpression	"( int ) GET ( tcode , 0 )"		902501	0					
ANR	902668	CastTarget	int		902501	0					
ANR	902669	CallExpression	"GET ( tcode , 0 )"		902501	1					
ANR	902670	Callee	GET		902501	0					
ANR	902671	Identifier	GET		902501	0					
ANR	902672	ArgumentList	tcode		902501	1					
ANR	902673	Argument	tcode		902501	0					
ANR	902674	Identifier	tcode		902501	0					
ANR	902675	Argument	0		902501	1					
ANR	902676	PrimaryExpression	0		902501	0					
ANR	902677	CastExpression	( int ) ( code + 1 - cd -> start_code )		902501	1					
ANR	902678	CastTarget	int		902501	0					
ANR	902679	AdditiveExpression	code + 1 - cd -> start_code		902501	1		+			
ANR	902680	Identifier	code		902501	0					
ANR	902681	AdditiveExpression	1 - cd -> start_code		902501	1		-			
ANR	902682	PrimaryExpression	1		902501	0					
ANR	902683	PtrMemberAccess	cd -> start_code		902501	1					
ANR	902684	Identifier	cd		902501	0					
ANR	902685	Identifier	start_code		902501	1					
ANR	902686	ReturnStatement	return TRUE ;	2441:68:84879:84890	902501	1	True				
ANR	902687	Identifier	TRUE		902501	0					
ANR	902688	IfStatement	"if ( GET ( scode , 1 ) == 0 )"		902501	2					
ANR	902689	Condition	"GET ( scode , 1 ) == 0"	2442:10:84902:84919	902501	0	True				
ANR	902690	EqualityExpression	"GET ( scode , 1 ) == 0"		902501	0		==			
ANR	902691	CallExpression	"GET ( scode , 1 )"		902501	0					
ANR	902692	Callee	GET		902501	0					
ANR	902693	Identifier	GET		902501	0					
ANR	902694	ArgumentList	scode		902501	1					
ANR	902695	Argument	scode		902501	0					
ANR	902696	Identifier	scode		902501	0					
ANR	902697	Argument	1		902501	1					
ANR	902698	PrimaryExpression	1		902501	0					
ANR	902699	PrimaryExpression	0		902501	1					
ANR	902700	ReturnStatement	return TRUE ;	2442:30:84922:84933	902501	1	True				
ANR	902701	Identifier	TRUE		902501	0					
ANR	902702	DoStatement	do		902501	4					
ANR	902703	ExpressionStatement	"endgroup += GET ( endgroup , 1 )"	2450:7:85263:85291	902501	0	True				
ANR	902704	AssignmentExpression	"endgroup += GET ( endgroup , 1 )"		902501	0		+=			
ANR	902705	Identifier	endgroup		902501	0					
ANR	902706	CallExpression	"GET ( endgroup , 1 )"		902501	1					
ANR	902707	Callee	GET		902501	0					
ANR	902708	Identifier	GET		902501	0					
ANR	902709	ArgumentList	endgroup		902501	1					
ANR	902710	Argument	endgroup		902501	0					
ANR	902711	Identifier	endgroup		902501	0					
ANR	902712	Argument	1		902501	1					
ANR	902713	PrimaryExpression	1		902501	0					
ANR	902714	Condition	* endgroup == OP_ALT	2450:44:85300:85318	902501	1	True				
ANR	902715	EqualityExpression	* endgroup == OP_ALT		902501	0		==			
ANR	902716	UnaryOperationExpression	* endgroup		902501	0					
ANR	902717	UnaryOperator	*		902501	0					
ANR	902718	Identifier	endgroup		902501	1					
ANR	902719	Identifier	OP_ALT		902501	1					
ANR	902720	IfStatement	if ( code >= scode && code <= endgroup )		902501	5					
ANR	902721	Condition	code >= scode && code <= endgroup	2451:8:85330:85362	902501	0	True				
ANR	902722	AndExpression	code >= scode && code <= endgroup		902501	0		&&			
ANR	902723	RelationalExpression	code >= scode		902501	0		>=			
ANR	902724	Identifier	code		902501	0					
ANR	902725	Identifier	scode		902501	1					
ANR	902726	RelationalExpression	code <= endgroup		902501	1		<=			
ANR	902727	Identifier	code		902501	0					
ANR	902728	Identifier	endgroup		902501	1					
ANR	902729	ContinueStatement	continue ;	2451:43:85365:85373	902501	1	True				
ANR	902730	ElseStatement	else		902501	0					
ANR	902731	CompoundStatement		57:6:2023:2050	902501	0					
ANR	902732	IdentifierDeclStatement	recurse_check * r = recurses ;	2454:6:85422:85449	902501	0	True				
ANR	902733	IdentifierDecl	* r = recurses		902501	0					
ANR	902734	IdentifierDeclType	recurse_check *		902501	0					
ANR	902735	Identifier	r		902501	1					
ANR	902736	AssignmentExpression	* r = recurses		902501	2		=			
ANR	902737	Identifier	recurses		902501	0					
ANR	902738	Identifier	recurses		902501	1					
ANR	902739	ForStatement	for ( r = recurses ; r != NULL ; r = r -> prev )		902501	1					
ANR	902740	ForInit	r = recurses ;	2455:11:85462:85474	902501	0	True				
ANR	902741	AssignmentExpression	r = recurses		902501	0		=			
ANR	902742	Identifier	r		902501	0					
ANR	902743	Identifier	recurses		902501	1					
ANR	902744	Condition	r != NULL	2455:25:85476:85484	902501	1	True				
ANR	902745	EqualityExpression	r != NULL		902501	0		!=			
ANR	902746	Identifier	r		902501	0					
ANR	902747	Identifier	NULL		902501	1					
ANR	902748	AssignmentExpression	r = r -> prev	2455:36:85487:85497	902501	2	True	=			
ANR	902749	Identifier	r		902501	0					
ANR	902750	PtrMemberAccess	r -> prev		902501	1					
ANR	902751	Identifier	r		902501	0					
ANR	902752	Identifier	prev		902501	1					
ANR	902753	IfStatement	if ( r -> group == scode )		902501	3					
ANR	902754	Condition	r -> group == scode	2456:12:85512:85528	902501	0	True				
ANR	902755	EqualityExpression	r -> group == scode		902501	0		==			
ANR	902756	PtrMemberAccess	r -> group		902501	0					
ANR	902757	Identifier	r		902501	0					
ANR	902758	Identifier	group		902501	1					
ANR	902759	Identifier	scode		902501	1					
ANR	902760	BreakStatement	break ;	2456:31:85531:85536	902501	1	True				
ANR	902761	IfStatement	if ( r != NULL )		902501	2					
ANR	902762	Condition	r != NULL	2457:10:85548:85556	902501	0	True				
ANR	902763	EqualityExpression	r != NULL		902501	0		!=			
ANR	902764	Identifier	r		902501	0					
ANR	902765	Identifier	NULL		902501	1					
ANR	902766	ContinueStatement	continue ;	2457:21:85559:85567	902501	1	True				
ANR	902767	ExpressionStatement	empty_branch = FALSE	2463:4:85733:85753	902501	6	True				
ANR	902768	AssignmentExpression	empty_branch = FALSE		902501	0		=			
ANR	902769	Identifier	empty_branch		902501	0					
ANR	902770	Identifier	FALSE		902501	1					
ANR	902771	ExpressionStatement	this_recurse . prev = recurses	2464:4:85759:85787	902501	7	True				
ANR	902772	AssignmentExpression	this_recurse . prev = recurses		902501	0		=			
ANR	902773	MemberAccess	this_recurse . prev		902501	0					
ANR	902774	Identifier	this_recurse		902501	0					
ANR	902775	Identifier	prev		902501	1					
ANR	902776	Identifier	recurses		902501	1					
ANR	902777	ExpressionStatement	this_recurse . group = scode	2465:4:85793:85819	902501	8	True				
ANR	902778	AssignmentExpression	this_recurse . group = scode		902501	0		=			
ANR	902779	MemberAccess	this_recurse . group		902501	0					
ANR	902780	Identifier	this_recurse		902501	0					
ANR	902781	Identifier	group		902501	1					
ANR	902782	Identifier	scode		902501	1					
ANR	902783	DoStatement	do		902501	9					
ANR	902784	CompoundStatement		71:6:2436:2436	902501	0					
ANR	902785	IfStatement	"if ( could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse ) )"		902501	0					
ANR	902786	Condition	"could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse )"	2469:10:85847:85907	902501	0	True				
ANR	902787	CallExpression	"could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse )"		902501	0					
ANR	902788	Callee	could_be_empty_branch		902501	0					
ANR	902789	Identifier	could_be_empty_branch		902501	0					
ANR	902790	ArgumentList	scode		902501	1					
ANR	902791	Argument	scode		902501	0					
ANR	902792	Identifier	scode		902501	0					
ANR	902793	Argument	endcode		902501	1					
ANR	902794	Identifier	endcode		902501	0					
ANR	902795	Argument	utf		902501	2					
ANR	902796	Identifier	utf		902501	0					
ANR	902797	Argument	cd		902501	3					
ANR	902798	Identifier	cd		902501	0					
ANR	902799	Argument	& this_recurse		902501	4					
ANR	902800	UnaryOperationExpression	& this_recurse		902501	0					
ANR	902801	UnaryOperator	&		902501	0					
ANR	902802	Identifier	this_recurse		902501	1					
ANR	902803	CompoundStatement		73:8:2519:2519	902501	1					
ANR	902804	ExpressionStatement	empty_branch = TRUE	2471:8:85928:85947	902501	0	True				
ANR	902805	AssignmentExpression	empty_branch = TRUE		902501	0		=			
ANR	902806	Identifier	empty_branch		902501	0					
ANR	902807	Identifier	TRUE		902501	1					
ANR	902808	BreakStatement	break ;	2472:8:85957:85962	902501	1	True				
ANR	902809	ExpressionStatement	"scode += GET ( scode , 1 )"	2474:6:85980:86002	902501	1	True				
ANR	902810	AssignmentExpression	"scode += GET ( scode , 1 )"		902501	0		+=			
ANR	902811	Identifier	scode		902501	0					
ANR	902812	CallExpression	"GET ( scode , 1 )"		902501	1					
ANR	902813	Callee	GET		902501	0					
ANR	902814	Identifier	GET		902501	0					
ANR	902815	ArgumentList	scode		902501	1					
ANR	902816	Argument	scode		902501	0					
ANR	902817	Identifier	scode		902501	0					
ANR	902818	Argument	1		902501	1					
ANR	902819	PrimaryExpression	1		902501	0					
ANR	902820	Condition	* scode == OP_ALT	2476:11:86023:86038	902501	1	True				
ANR	902821	EqualityExpression	* scode == OP_ALT		902501	0		==			
ANR	902822	UnaryOperationExpression	* scode		902501	0					
ANR	902823	UnaryOperator	*		902501	0					
ANR	902824	Identifier	scode		902501	1					
ANR	902825	Identifier	OP_ALT		902501	1					
ANR	902826	IfStatement	if ( ! empty_branch )		902501	10					
ANR	902827	Condition	! empty_branch	2478:8:86051:86063	902501	0	True				
ANR	902828	UnaryOperationExpression	! empty_branch		902501	0					
ANR	902829	UnaryOperator	!		902501	0					
ANR	902830	Identifier	empty_branch		902501	1					
ANR	902831	ReturnStatement	return FALSE ;	2478:23:86066:86078	902501	1	True				
ANR	902832	Identifier	FALSE		902501	0					
ANR	902833	ContinueStatement	continue ;	2479:4:86118:86126	902501	11	True				
ANR	902834	IfStatement	if ( c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO )		902501	4					
ANR	902835	Condition	c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO	2484:6:86210:86294	902501	0	True				
ANR	902836	OrExpression	c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO		902501	0		||			
ANR	902837	EqualityExpression	c == OP_BRAZERO		902501	0		==			
ANR	902838	Identifier	c		902501	0					
ANR	902839	Identifier	OP_BRAZERO		902501	1					
ANR	902840	OrExpression	c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO		902501	1		||			
ANR	902841	EqualityExpression	c == OP_BRAMINZERO		902501	0		==			
ANR	902842	Identifier	c		902501	0					
ANR	902843	Identifier	OP_BRAMINZERO		902501	1					
ANR	902844	OrExpression	c == OP_SKIPZERO || c == OP_BRAPOSZERO		902501	1		||			
ANR	902845	EqualityExpression	c == OP_SKIPZERO		902501	0		==			
ANR	902846	Identifier	c		902501	0					
ANR	902847	Identifier	OP_SKIPZERO		902501	1					
ANR	902848	EqualityExpression	c == OP_BRAPOSZERO		902501	1		==			
ANR	902849	Identifier	c		902501	0					
ANR	902850	Identifier	OP_BRAPOSZERO		902501	1					
ANR	902851	CompoundStatement		89:4:2902:2902	902501	1					
ANR	902852	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2487:4:86307:86334	902501	0	True				
ANR	902853	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		902501	0		+=			
ANR	902854	Identifier	code		902501	0					
ANR	902855	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		902501	1					
ANR	902856	CallExpression	PRIV ( OP_lengths )		902501	0					
ANR	902857	Callee	PRIV		902501	0					
ANR	902858	Identifier	PRIV		902501	0					
ANR	902859	ArgumentList	OP_lengths		902501	1					
ANR	902860	Argument	OP_lengths		902501	0					
ANR	902861	Identifier	OP_lengths		902501	0					
ANR	902862	Identifier	c		902501	1					
ANR	902863	DoStatement	do		902501	1					
ANR	902864	ExpressionStatement	"code += GET ( code , 1 )"	2488:7:86343:86363	902501	0	True				
ANR	902865	AssignmentExpression	"code += GET ( code , 1 )"		902501	0		+=			
ANR	902866	Identifier	code		902501	0					
ANR	902867	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	902868	Callee	GET		902501	0					
ANR	902869	Identifier	GET		902501	0					
ANR	902870	ArgumentList	code		902501	1					
ANR	902871	Argument	code		902501	0					
ANR	902872	Identifier	code		902501	0					
ANR	902873	Argument	1		902501	1					
ANR	902874	PrimaryExpression	1		902501	0					
ANR	902875	Condition	* code == OP_ALT	2488:36:86372:86386	902501	1	True				
ANR	902876	EqualityExpression	* code == OP_ALT		902501	0		==			
ANR	902877	UnaryOperationExpression	* code		902501	0					
ANR	902878	UnaryOperator	*		902501	0					
ANR	902879	Identifier	code		902501	1					
ANR	902880	Identifier	OP_ALT		902501	1					
ANR	902881	ExpressionStatement	c = * code	2489:4:86394:86403	902501	2	True				
ANR	902882	AssignmentExpression	c = * code		902501	0		=			
ANR	902883	Identifier	c		902501	0					
ANR	902884	UnaryOperationExpression	* code		902501	1					
ANR	902885	UnaryOperator	*		902501	0					
ANR	902886	Identifier	code		902501	1					
ANR	902887	ContinueStatement	continue ;	2490:4:86409:86417	902501	3	True				
ANR	902888	IfStatement	if ( c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS )		902501	5					
ANR	902889	Condition	c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS	2496:6:86522:86596	902501	0	True				
ANR	902890	OrExpression	c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS		902501	0		||			
ANR	902891	EqualityExpression	c == OP_SBRA		902501	0		==			
ANR	902892	Identifier	c		902501	0					
ANR	902893	Identifier	OP_SBRA		902501	1					
ANR	902894	OrExpression	c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS		902501	1		||			
ANR	902895	EqualityExpression	c == OP_SBRAPOS		902501	0		==			
ANR	902896	Identifier	c		902501	0					
ANR	902897	Identifier	OP_SBRAPOS		902501	1					
ANR	902898	OrExpression	c == OP_SCBRA || c == OP_SCBRAPOS		902501	1		||			
ANR	902899	EqualityExpression	c == OP_SCBRA		902501	0		==			
ANR	902900	Identifier	c		902501	0					
ANR	902901	Identifier	OP_SCBRA		902501	1					
ANR	902902	EqualityExpression	c == OP_SCBRAPOS		902501	1		==			
ANR	902903	Identifier	c		902501	0					
ANR	902904	Identifier	OP_SCBRAPOS		902501	1					
ANR	902905	CompoundStatement		101:4:3204:3204	902501	1					
ANR	902906	DoStatement	do		902501	0					
ANR	902907	ExpressionStatement	"code += GET ( code , 1 )"	2499:7:86612:86632	902501	0	True				
ANR	902908	AssignmentExpression	"code += GET ( code , 1 )"		902501	0		+=			
ANR	902909	Identifier	code		902501	0					
ANR	902910	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	902911	Callee	GET		902501	0					
ANR	902912	Identifier	GET		902501	0					
ANR	902913	ArgumentList	code		902501	1					
ANR	902914	Argument	code		902501	0					
ANR	902915	Identifier	code		902501	0					
ANR	902916	Argument	1		902501	1					
ANR	902917	PrimaryExpression	1		902501	0					
ANR	902918	Condition	* code == OP_ALT	2499:36:86641:86655	902501	1	True				
ANR	902919	EqualityExpression	* code == OP_ALT		902501	0		==			
ANR	902920	UnaryOperationExpression	* code		902501	0					
ANR	902921	UnaryOperator	*		902501	0					
ANR	902922	Identifier	code		902501	1					
ANR	902923	Identifier	OP_ALT		902501	1					
ANR	902924	ExpressionStatement	c = * code	2500:4:86663:86672	902501	1	True				
ANR	902925	AssignmentExpression	c = * code		902501	0		=			
ANR	902926	Identifier	c		902501	0					
ANR	902927	UnaryOperationExpression	* code		902501	1					
ANR	902928	UnaryOperator	*		902501	0					
ANR	902929	Identifier	code		902501	1					
ANR	902930	ContinueStatement	continue ;	2501:4:86678:86686	902501	2	True				
ANR	902931	IfStatement	if ( c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND )		902501	6					
ANR	902932	Condition	c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND	2506:6:86747:86897	902501	0	True				
ANR	902933	OrExpression	c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	0		||			
ANR	902934	EqualityExpression	c == OP_BRA		902501	0		==			
ANR	902935	Identifier	c		902501	0					
ANR	902936	Identifier	OP_BRA		902501	1					
ANR	902937	OrExpression	c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902938	EqualityExpression	c == OP_BRAPOS		902501	0		==			
ANR	902939	Identifier	c		902501	0					
ANR	902940	Identifier	OP_BRAPOS		902501	1					
ANR	902941	OrExpression	c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902942	EqualityExpression	c == OP_CBRA		902501	0		==			
ANR	902943	Identifier	c		902501	0					
ANR	902944	Identifier	OP_CBRA		902501	1					
ANR	902945	OrExpression	c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902946	EqualityExpression	c == OP_CBRAPOS		902501	0		==			
ANR	902947	Identifier	c		902501	0					
ANR	902948	Identifier	OP_CBRAPOS		902501	1					
ANR	902949	OrExpression	c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902950	EqualityExpression	c == OP_ONCE		902501	0		==			
ANR	902951	Identifier	c		902501	0					
ANR	902952	Identifier	OP_ONCE		902501	1					
ANR	902953	OrExpression	c == OP_ONCE_NC || c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902954	EqualityExpression	c == OP_ONCE_NC		902501	0		==			
ANR	902955	Identifier	c		902501	0					
ANR	902956	Identifier	OP_ONCE_NC		902501	1					
ANR	902957	OrExpression	c == OP_COND || c == OP_SCOND		902501	1		||			
ANR	902958	EqualityExpression	c == OP_COND		902501	0		==			
ANR	902959	Identifier	c		902501	0					
ANR	902960	Identifier	OP_COND		902501	1					
ANR	902961	EqualityExpression	c == OP_SCOND		902501	1		==			
ANR	902962	Identifier	c		902501	0					
ANR	902963	Identifier	OP_SCOND		902501	1					
ANR	902964	CompoundStatement		114:4:3511:3528	902501	1					
ANR	902965	IdentifierDeclStatement	BOOL empty_branch ;	2511:4:86910:86927	902501	0	True				
ANR	902966	IdentifierDecl	empty_branch		902501	0					
ANR	902967	IdentifierDeclType	BOOL		902501	0					
ANR	902968	Identifier	empty_branch		902501	1					
ANR	902969	IfStatement	"if ( GET ( code , 1 ) == 0 )"		902501	1					
ANR	902970	Condition	"GET ( code , 1 ) == 0"	2512:8:86937:86953	902501	0	True				
ANR	902971	EqualityExpression	"GET ( code , 1 ) == 0"		902501	0		==			
ANR	902972	CallExpression	"GET ( code , 1 )"		902501	0					
ANR	902973	Callee	GET		902501	0					
ANR	902974	Identifier	GET		902501	0					
ANR	902975	ArgumentList	code		902501	1					
ANR	902976	Argument	code		902501	0					
ANR	902977	Identifier	code		902501	0					
ANR	902978	Argument	1		902501	1					
ANR	902979	PrimaryExpression	1		902501	0					
ANR	902980	PrimaryExpression	0		902501	1					
ANR	902981	ReturnStatement	return TRUE ;	2512:27:86956:86967	902501	1	True				
ANR	902982	Identifier	TRUE		902501	0					
ANR	902983	IfStatement	"if ( c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT )"		902501	2					
ANR	902984	Condition	"c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT"	2518:8:87229:87272	902501	0	True				
ANR	902985	AndExpression	"c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT"		902501	0		&&			
ANR	902986	EqualityExpression	c == OP_COND		902501	0		==			
ANR	902987	Identifier	c		902501	0					
ANR	902988	Identifier	OP_COND		902501	1					
ANR	902989	EqualityExpression	"code [ GET ( code , 1 ) ] != OP_ALT"		902501	1		!=			
ANR	902990	ArrayIndexing	"code [ GET ( code , 1 ) ]"		902501	0					
ANR	902991	Identifier	code		902501	0					
ANR	902992	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	902993	Callee	GET		902501	0					
ANR	902994	Identifier	GET		902501	0					
ANR	902995	ArgumentList	code		902501	1					
ANR	902996	Argument	code		902501	0					
ANR	902997	Identifier	code		902501	0					
ANR	902998	Argument	1		902501	1					
ANR	902999	PrimaryExpression	1		902501	0					
ANR	903000	Identifier	OP_ALT		902501	1					
ANR	903001	ExpressionStatement	"code += GET ( code , 1 )"	2519:6:87281:87301	902501	1	True				
ANR	903002	AssignmentExpression	"code += GET ( code , 1 )"		902501	0		+=			
ANR	903003	Identifier	code		902501	0					
ANR	903004	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	903005	Callee	GET		902501	0					
ANR	903006	Identifier	GET		902501	0					
ANR	903007	ArgumentList	code		902501	1					
ANR	903008	Argument	code		902501	0					
ANR	903009	Identifier	code		902501	0					
ANR	903010	Argument	1		902501	1					
ANR	903011	PrimaryExpression	1		902501	0					
ANR	903012	ElseStatement	else		902501	0					
ANR	903013	CompoundStatement		124:6:3919:3919	902501	0					
ANR	903014	ExpressionStatement	empty_branch = FALSE	2522:6:87326:87346	902501	0	True				
ANR	903015	AssignmentExpression	empty_branch = FALSE		902501	0		=			
ANR	903016	Identifier	empty_branch		902501	0					
ANR	903017	Identifier	FALSE		902501	1					
ANR	903018	DoStatement	do		902501	1					
ANR	903019	CompoundStatement		127:8:3966:3966	902501	0					
ANR	903020	IfStatement	"if ( ! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses ) )"		902501	0					
ANR	903021	Condition	"! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses )"	2525:12:87379:87460	902501	0	True				
ANR	903022	AndExpression	"! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses )"		902501	0		&&			
ANR	903023	UnaryOperationExpression	! empty_branch		902501	0					
ANR	903024	UnaryOperator	!		902501	0					
ANR	903025	Identifier	empty_branch		902501	1					
ANR	903026	CallExpression	"could_be_empty_branch ( code , endcode , utf , cd , recurses )"		902501	1					
ANR	903027	Callee	could_be_empty_branch		902501	0					
ANR	903028	Identifier	could_be_empty_branch		902501	0					
ANR	903029	ArgumentList	code		902501	1					
ANR	903030	Argument	code		902501	0					
ANR	903031	Identifier	code		902501	0					
ANR	903032	Argument	endcode		902501	1					
ANR	903033	Identifier	endcode		902501	0					
ANR	903034	Argument	utf		902501	2					
ANR	903035	Identifier	utf		902501	0					
ANR	903036	Argument	cd		902501	3					
ANR	903037	Identifier	cd		902501	0					
ANR	903038	Argument	recurses		902501	4					
ANR	903039	Identifier	recurses		902501	0					
ANR	903040	ExpressionStatement	empty_branch = TRUE	2526:21:87463:87482	902501	1	True				
ANR	903041	AssignmentExpression	empty_branch = TRUE		902501	0		=			
ANR	903042	Identifier	empty_branch		902501	0					
ANR	903043	Identifier	TRUE		902501	1					
ANR	903044	ExpressionStatement	"code += GET ( code , 1 )"	2527:8:87492:87512	902501	1	True				
ANR	903045	AssignmentExpression	"code += GET ( code , 1 )"		902501	0		+=			
ANR	903046	Identifier	code		902501	0					
ANR	903047	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	903048	Callee	GET		902501	0					
ANR	903049	Identifier	GET		902501	0					
ANR	903050	ArgumentList	code		902501	1					
ANR	903051	Argument	code		902501	0					
ANR	903052	Identifier	code		902501	0					
ANR	903053	Argument	1		902501	1					
ANR	903054	PrimaryExpression	1		902501	0					
ANR	903055	Condition	* code == OP_ALT	2529:13:87537:87551	902501	1	True				
ANR	903056	EqualityExpression	* code == OP_ALT		902501	0		==			
ANR	903057	UnaryOperationExpression	* code		902501	0					
ANR	903058	UnaryOperator	*		902501	0					
ANR	903059	Identifier	code		902501	1					
ANR	903060	Identifier	OP_ALT		902501	1					
ANR	903061	IfStatement	if ( ! empty_branch )		902501	2					
ANR	903062	Condition	! empty_branch	2530:10:87565:87577	902501	0	True				
ANR	903063	UnaryOperationExpression	! empty_branch		902501	0					
ANR	903064	UnaryOperator	!		902501	0					
ANR	903065	Identifier	empty_branch		902501	1					
ANR	903066	ReturnStatement	return FALSE ;	2530:25:87580:87592	902501	1	True				
ANR	903067	Identifier	FALSE		902501	0					
ANR	903068	ExpressionStatement	c = * code	2533:4:87642:87651	902501	3	True				
ANR	903069	AssignmentExpression	c = * code		902501	0		=			
ANR	903070	Identifier	c		902501	0					
ANR	903071	UnaryOperationExpression	* code		902501	1					
ANR	903072	UnaryOperator	*		902501	0					
ANR	903073	Identifier	code		902501	1					
ANR	903074	ContinueStatement	continue ;	2534:4:87657:87665	902501	4	True				
ANR	903075	SwitchStatement	switch ( c )		902501	7					
ANR	903076	Condition	c	2539:10:87718:87718	902501	0	True				
ANR	903077	Identifier	c		902501	0					
ANR	903078	CompoundStatement		143:4:4326:4326	902501	1					
ANR	903079	Label	case OP_XCLASS :	2548:4:88094:88108	902501	0	True				
ANR	903080	Identifier	OP_XCLASS		902501	0					
ANR	903081	ExpressionStatement	"ccode = code += GET ( code , 1 )"	2549:4:88114:88142	902501	1	True				
ANR	903082	AssignmentExpression	"ccode = code += GET ( code , 1 )"		902501	0		=			
ANR	903083	Identifier	ccode		902501	0					
ANR	903084	AssignmentExpression	"code += GET ( code , 1 )"		902501	1		+=			
ANR	903085	Identifier	code		902501	0					
ANR	903086	CallExpression	"GET ( code , 1 )"		902501	1					
ANR	903087	Callee	GET		902501	0					
ANR	903088	Identifier	GET		902501	0					
ANR	903089	ArgumentList	code		902501	1					
ANR	903090	Argument	code		902501	0					
ANR	903091	Identifier	code		902501	0					
ANR	903092	Argument	1		902501	1					
ANR	903093	PrimaryExpression	1		902501	0					
ANR	903094	GotoStatement	goto CHECK_CLASS_REPEAT ;	2550:4:88148:88171	902501	2	True				
ANR	903095	Identifier	CHECK_CLASS_REPEAT		902501	0					
ANR	903096	Label	case OP_CLASS :	2553:4:88185:88198	902501	3	True				
ANR	903097	Identifier	OP_CLASS		902501	0					
ANR	903098	Label	case OP_NCLASS :	2554:4:88204:88218	902501	4	True				
ANR	903099	Identifier	OP_NCLASS		902501	0					
ANR	903100	ExpressionStatement	ccode = code + PRIV ( OP_lengths ) [ OP_CLASS ]	2555:4:88224:88265	902501	5	True				
ANR	903101	AssignmentExpression	ccode = code + PRIV ( OP_lengths ) [ OP_CLASS ]		902501	0		=			
ANR	903102	Identifier	ccode		902501	0					
ANR	903103	AdditiveExpression	code + PRIV ( OP_lengths ) [ OP_CLASS ]		902501	1		+			
ANR	903104	Identifier	code		902501	0					
ANR	903105	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CLASS ]		902501	1					
ANR	903106	CallExpression	PRIV ( OP_lengths )		902501	0					
ANR	903107	Callee	PRIV		902501	0					
ANR	903108	Identifier	PRIV		902501	0					
ANR	903109	ArgumentList	OP_lengths		902501	1					
ANR	903110	Argument	OP_lengths		902501	0					
ANR	903111	Identifier	OP_lengths		902501	0					
ANR	903112	Identifier	OP_CLASS		902501	1					
ANR	903113	Label	CHECK_CLASS_REPEAT :	2558:4:88322:88340	902501	6	True				
ANR	903114	Identifier	CHECK_CLASS_REPEAT		902501	0					
ANR	903115	SwitchStatement	switch ( * ccode )		902501	7					
ANR	903116	Condition	* ccode	2561:12:88362:88367	902501	0	True				
ANR	903117	UnaryOperationExpression	* ccode		902501	0					
ANR	903118	UnaryOperator	*		902501	0					
ANR	903119	Identifier	ccode		902501	1					
ANR	903120	CompoundStatement		165:6:4977:4977	902501	1					
ANR	903121	Label	case OP_CRSTAR :	2563:6:88384:88398	902501	0	True				
ANR	903122	Identifier	OP_CRSTAR		902501	0					
ANR	903123	Label	case OP_CRMINSTAR :	2564:6:88454:88471	902501	1	True				
ANR	903124	Identifier	OP_CRMINSTAR		902501	0					
ANR	903125	Label	case OP_CRQUERY :	2565:6:88479:88494	902501	2	True				
ANR	903126	Identifier	OP_CRQUERY		902501	0					
ANR	903127	Label	case OP_CRMINQUERY :	2566:6:88502:88520	902501	3	True				
ANR	903128	Identifier	OP_CRMINQUERY		902501	0					
ANR	903129	Label	case OP_CRPOSSTAR :	2567:6:88528:88545	902501	4	True				
ANR	903130	Identifier	OP_CRPOSSTAR		902501	0					
ANR	903131	Label	case OP_CRPOSQUERY :	2568:6:88553:88571	902501	5	True				
ANR	903132	Identifier	OP_CRPOSQUERY		902501	0					
ANR	903133	BreakStatement	break ;	2569:6:88579:88584	902501	6	True				
ANR	903134	Label	default :	2571:6:88593:88600	902501	7	True				
ANR	903135	Identifier	default		902501	0					
ANR	903136	Label	case OP_CRPLUS :	2572:6:88663:88677	902501	8	True				
ANR	903137	Identifier	OP_CRPLUS		902501	0					
ANR	903138	Label	case OP_CRMINPLUS :	2573:6:88729:88746	902501	9	True				
ANR	903139	Identifier	OP_CRMINPLUS		902501	0					
ANR	903140	Label	case OP_CRPOSPLUS :	2574:6:88754:88771	902501	10	True				
ANR	903141	Identifier	OP_CRPOSPLUS		902501	0					
ANR	903142	ReturnStatement	return FALSE ;	2575:6:88779:88791	902501	11	True				
ANR	903143	Identifier	FALSE		902501	0					
ANR	903144	Label	case OP_CRRANGE :	2577:6:88800:88815	902501	12	True				
ANR	903145	Identifier	OP_CRRANGE		902501	0					
ANR	903146	Label	case OP_CRMINRANGE :	2578:6:88823:88841	902501	13	True				
ANR	903147	Identifier	OP_CRMINRANGE		902501	0					
ANR	903148	Label	case OP_CRPOSRANGE :	2579:6:88849:88867	902501	14	True				
ANR	903149	Identifier	OP_CRPOSRANGE		902501	0					
ANR	903150	IfStatement	"if ( GET2 ( ccode , 1 ) > 0 )"		902501	15					
ANR	903151	Condition	"GET2 ( ccode , 1 ) > 0"	2580:10:88879:88896	902501	0	True				
ANR	903152	RelationalExpression	"GET2 ( ccode , 1 ) > 0"		902501	0		>			
ANR	903153	CallExpression	"GET2 ( ccode , 1 )"		902501	0					
ANR	903154	Callee	GET2		902501	0					
ANR	903155	Identifier	GET2		902501	0					
ANR	903156	ArgumentList	ccode		902501	1					
ANR	903157	Argument	ccode		902501	0					
ANR	903158	Identifier	ccode		902501	0					
ANR	903159	Argument	1		902501	1					
ANR	903160	PrimaryExpression	1		902501	0					
ANR	903161	PrimaryExpression	0		902501	1					
ANR	903162	ReturnStatement	return FALSE ;	2580:30:88899:88911	902501	1	True				
ANR	903163	Identifier	FALSE		902501	0					
ANR	903164	BreakStatement	break ;	2581:6:88938:88943	902501	16	True				
ANR	903165	BreakStatement	break ;	2583:4:88957:88962	902501	8	True				
ANR	903166	Label	case OP_ANY :	2587:4:89016:89027	902501	9	True				
ANR	903167	Identifier	OP_ANY		902501	0					
ANR	903168	Label	case OP_ALLANY :	2588:4:89033:89047	902501	10	True				
ANR	903169	Identifier	OP_ALLANY		902501	0					
ANR	903170	Label	case OP_ANYBYTE :	2589:4:89053:89068	902501	11	True				
ANR	903171	Identifier	OP_ANYBYTE		902501	0					
ANR	903172	Label	case OP_PROP :	2591:4:89075:89087	902501	12	True				
ANR	903173	Identifier	OP_PROP		902501	0					
ANR	903174	Label	case OP_NOTPROP :	2592:4:89093:89108	902501	13	True				
ANR	903175	Identifier	OP_NOTPROP		902501	0					
ANR	903176	Label	case OP_ANYNL :	2593:4:89114:89127	902501	14	True				
ANR	903177	Identifier	OP_ANYNL		902501	0					
ANR	903178	Label	case OP_NOT_HSPACE :	2595:4:89134:89152	902501	15	True				
ANR	903179	Identifier	OP_NOT_HSPACE		902501	0					
ANR	903180	Label	case OP_HSPACE :	2596:4:89158:89172	902501	16	True				
ANR	903181	Identifier	OP_HSPACE		902501	0					
ANR	903182	Label	case OP_NOT_VSPACE :	2597:4:89178:89196	902501	17	True				
ANR	903183	Identifier	OP_NOT_VSPACE		902501	0					
ANR	903184	Label	case OP_VSPACE :	2598:4:89202:89216	902501	18	True				
ANR	903185	Identifier	OP_VSPACE		902501	0					
ANR	903186	Label	case OP_EXTUNI :	2599:4:89222:89236	902501	19	True				
ANR	903187	Identifier	OP_EXTUNI		902501	0					
ANR	903188	Label	case OP_NOT_DIGIT :	2601:4:89243:89260	902501	20	True				
ANR	903189	Identifier	OP_NOT_DIGIT		902501	0					
ANR	903190	Label	case OP_DIGIT :	2602:4:89266:89279	902501	21	True				
ANR	903191	Identifier	OP_DIGIT		902501	0					
ANR	903192	Label	case OP_NOT_WHITESPACE :	2603:4:89285:89307	902501	22	True				
ANR	903193	Identifier	OP_NOT_WHITESPACE		902501	0					
ANR	903194	Label	case OP_WHITESPACE :	2604:4:89313:89331	902501	23	True				
ANR	903195	Identifier	OP_WHITESPACE		902501	0					
ANR	903196	Label	case OP_NOT_WORDCHAR :	2605:4:89337:89357	902501	24	True				
ANR	903197	Identifier	OP_NOT_WORDCHAR		902501	0					
ANR	903198	Label	case OP_WORDCHAR :	2606:4:89363:89379	902501	25	True				
ANR	903199	Identifier	OP_WORDCHAR		902501	0					
ANR	903200	Label	case OP_CHAR :	2608:4:89386:89398	902501	26	True				
ANR	903201	Identifier	OP_CHAR		902501	0					
ANR	903202	Label	case OP_CHARI :	2609:4:89404:89417	902501	27	True				
ANR	903203	Identifier	OP_CHARI		902501	0					
ANR	903204	Label	case OP_NOT :	2610:4:89423:89434	902501	28	True				
ANR	903205	Identifier	OP_NOT		902501	0					
ANR	903206	Label	case OP_NOTI :	2611:4:89440:89452	902501	29	True				
ANR	903207	Identifier	OP_NOTI		902501	0					
ANR	903208	Label	case OP_PLUS :	2613:4:89459:89471	902501	30	True				
ANR	903209	Identifier	OP_PLUS		902501	0					
ANR	903210	Label	case OP_PLUSI :	2614:4:89477:89490	902501	31	True				
ANR	903211	Identifier	OP_PLUSI		902501	0					
ANR	903212	Label	case OP_MINPLUS :	2615:4:89496:89511	902501	32	True				
ANR	903213	Identifier	OP_MINPLUS		902501	0					
ANR	903214	Label	case OP_MINPLUSI :	2616:4:89517:89533	902501	33	True				
ANR	903215	Identifier	OP_MINPLUSI		902501	0					
ANR	903216	Label	case OP_NOTPLUS :	2618:4:89540:89555	902501	34	True				
ANR	903217	Identifier	OP_NOTPLUS		902501	0					
ANR	903218	Label	case OP_NOTPLUSI :	2619:4:89561:89577	902501	35	True				
ANR	903219	Identifier	OP_NOTPLUSI		902501	0					
ANR	903220	Label	case OP_NOTMINPLUS :	2620:4:89583:89601	902501	36	True				
ANR	903221	Identifier	OP_NOTMINPLUS		902501	0					
ANR	903222	Label	case OP_NOTMINPLUSI :	2621:4:89607:89626	902501	37	True				
ANR	903223	Identifier	OP_NOTMINPLUSI		902501	0					
ANR	903224	Label	case OP_POSPLUS :	2623:4:89633:89648	902501	38	True				
ANR	903225	Identifier	OP_POSPLUS		902501	0					
ANR	903226	Label	case OP_POSPLUSI :	2624:4:89654:89670	902501	39	True				
ANR	903227	Identifier	OP_POSPLUSI		902501	0					
ANR	903228	Label	case OP_NOTPOSPLUS :	2625:4:89676:89694	902501	40	True				
ANR	903229	Identifier	OP_NOTPOSPLUS		902501	0					
ANR	903230	Label	case OP_NOTPOSPLUSI :	2626:4:89700:89719	902501	41	True				
ANR	903231	Identifier	OP_NOTPOSPLUSI		902501	0					
ANR	903232	Label	case OP_EXACT :	2628:4:89726:89739	902501	42	True				
ANR	903233	Identifier	OP_EXACT		902501	0					
ANR	903234	Label	case OP_EXACTI :	2629:4:89745:89759	902501	43	True				
ANR	903235	Identifier	OP_EXACTI		902501	0					
ANR	903236	Label	case OP_NOTEXACT :	2630:4:89765:89781	902501	44	True				
ANR	903237	Identifier	OP_NOTEXACT		902501	0					
ANR	903238	Label	case OP_NOTEXACTI :	2631:4:89787:89804	902501	45	True				
ANR	903239	Identifier	OP_NOTEXACTI		902501	0					
ANR	903240	Label	case OP_TYPEPLUS :	2633:4:89811:89827	902501	46	True				
ANR	903241	Identifier	OP_TYPEPLUS		902501	0					
ANR	903242	Label	case OP_TYPEMINPLUS :	2634:4:89833:89852	902501	47	True				
ANR	903243	Identifier	OP_TYPEMINPLUS		902501	0					
ANR	903244	Label	case OP_TYPEPOSPLUS :	2635:4:89858:89877	902501	48	True				
ANR	903245	Identifier	OP_TYPEPOSPLUS		902501	0					
ANR	903246	Label	case OP_TYPEEXACT :	2636:4:89883:89900	902501	49	True				
ANR	903247	Identifier	OP_TYPEEXACT		902501	0					
ANR	903248	ReturnStatement	return FALSE ;	2638:4:89907:89919	902501	50	True				
ANR	903249	Identifier	FALSE		902501	0					
ANR	903250	Label	case OP_TYPESTAR :	2643:4:90049:90065	902501	51	True				
ANR	903251	Identifier	OP_TYPESTAR		902501	0					
ANR	903252	Label	case OP_TYPEMINSTAR :	2644:4:90071:90090	902501	52	True				
ANR	903253	Identifier	OP_TYPEMINSTAR		902501	0					
ANR	903254	Label	case OP_TYPEPOSSTAR :	2645:4:90096:90115	902501	53	True				
ANR	903255	Identifier	OP_TYPEPOSSTAR		902501	0					
ANR	903256	Label	case OP_TYPEQUERY :	2646:4:90121:90138	902501	54	True				
ANR	903257	Identifier	OP_TYPEQUERY		902501	0					
ANR	903258	Label	case OP_TYPEMINQUERY :	2647:4:90144:90164	902501	55	True				
ANR	903259	Identifier	OP_TYPEMINQUERY		902501	0					
ANR	903260	Label	case OP_TYPEPOSQUERY :	2648:4:90170:90190	902501	56	True				
ANR	903261	Identifier	OP_TYPEPOSQUERY		902501	0					
ANR	903262	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		902501	57					
ANR	903263	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2649:8:90200:90242	902501	0	True				
ANR	903264	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		902501	0		||			
ANR	903265	EqualityExpression	code [ 1 ] == OP_PROP		902501	0		==			
ANR	903266	ArrayIndexing	code [ 1 ]		902501	0					
ANR	903267	Identifier	code		902501	0					
ANR	903268	PrimaryExpression	1		902501	1					
ANR	903269	Identifier	OP_PROP		902501	1					
ANR	903270	EqualityExpression	code [ 1 ] == OP_NOTPROP		902501	1		==			
ANR	903271	ArrayIndexing	code [ 1 ]		902501	0					
ANR	903272	Identifier	code		902501	0					
ANR	903273	PrimaryExpression	1		902501	1					
ANR	903274	Identifier	OP_NOTPROP		902501	1					
ANR	903275	ExpressionStatement	code += 2	2649:53:90245:90254	902501	1	True				
ANR	903276	AssignmentExpression	code += 2		902501	0		+=			
ANR	903277	Identifier	code		902501	0					
ANR	903278	PrimaryExpression	2		902501	1					
ANR	903279	BreakStatement	break ;	2650:4:90260:90265	902501	58	True				
ANR	903280	Label	case OP_TYPEUPTO :	2654:4:90298:90314	902501	59	True				
ANR	903281	Identifier	OP_TYPEUPTO		902501	0					
ANR	903282	Label	case OP_TYPEMINUPTO :	2655:4:90320:90339	902501	60	True				
ANR	903283	Identifier	OP_TYPEMINUPTO		902501	0					
ANR	903284	Label	case OP_TYPEPOSUPTO :	2656:4:90345:90364	902501	61	True				
ANR	903285	Identifier	OP_TYPEPOSUPTO		902501	0					
ANR	903286	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		902501	62					
ANR	903287	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2657:8:90374:90440	902501	0	True				
ANR	903288	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		902501	0		||			
ANR	903289	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		902501	0		==			
ANR	903290	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903291	Identifier	code		902501	0					
ANR	903292	AdditiveExpression	1 + IMM2_SIZE		902501	1		+			
ANR	903293	PrimaryExpression	1		902501	0					
ANR	903294	Identifier	IMM2_SIZE		902501	1					
ANR	903295	Identifier	OP_PROP		902501	1					
ANR	903296	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		902501	1		==			
ANR	903297	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903298	Identifier	code		902501	0					
ANR	903299	AdditiveExpression	1 + IMM2_SIZE		902501	1		+			
ANR	903300	PrimaryExpression	1		902501	0					
ANR	903301	Identifier	IMM2_SIZE		902501	1					
ANR	903302	Identifier	OP_NOTPROP		902501	1					
ANR	903303	ExpressionStatement	code += 2	2658:6:90449:90458	902501	1	True				
ANR	903304	AssignmentExpression	code += 2		902501	0		+=			
ANR	903305	Identifier	code		902501	0					
ANR	903306	PrimaryExpression	2		902501	1					
ANR	903307	BreakStatement	break ;	2659:4:90464:90469	902501	63	True				
ANR	903308	Label	case OP_KET :	2663:4:90501:90512	902501	64	True				
ANR	903309	Identifier	OP_KET		902501	0					
ANR	903310	Label	case OP_KETRMAX :	2664:4:90518:90533	902501	65	True				
ANR	903311	Identifier	OP_KETRMAX		902501	0					
ANR	903312	Label	case OP_KETRMIN :	2665:4:90539:90554	902501	66	True				
ANR	903313	Identifier	OP_KETRMIN		902501	0					
ANR	903314	Label	case OP_KETRPOS :	2666:4:90560:90575	902501	67	True				
ANR	903315	Identifier	OP_KETRPOS		902501	0					
ANR	903316	Label	case OP_ALT :	2667:4:90581:90592	902501	68	True				
ANR	903317	Identifier	OP_ALT		902501	0					
ANR	903318	ReturnStatement	return TRUE ;	2668:4:90598:90609	902501	69	True				
ANR	903319	Identifier	TRUE		902501	0					
ANR	903320	Label	case OP_STAR :	2675:4:90862:90874	902501	70	True				
ANR	903321	Identifier	OP_STAR		902501	0					
ANR	903322	Label	case OP_STARI :	2676:4:90880:90893	902501	71	True				
ANR	903323	Identifier	OP_STARI		902501	0					
ANR	903324	Label	case OP_NOTSTAR :	2677:4:90899:90914	902501	72	True				
ANR	903325	Identifier	OP_NOTSTAR		902501	0					
ANR	903326	Label	case OP_NOTSTARI :	2678:4:90920:90936	902501	73	True				
ANR	903327	Identifier	OP_NOTSTARI		902501	0					
ANR	903328	Label	case OP_MINSTAR :	2680:4:90943:90958	902501	74	True				
ANR	903329	Identifier	OP_MINSTAR		902501	0					
ANR	903330	Label	case OP_MINSTARI :	2681:4:90964:90980	902501	75	True				
ANR	903331	Identifier	OP_MINSTARI		902501	0					
ANR	903332	Label	case OP_NOTMINSTAR :	2682:4:90986:91004	902501	76	True				
ANR	903333	Identifier	OP_NOTMINSTAR		902501	0					
ANR	903334	Label	case OP_NOTMINSTARI :	2683:4:91010:91029	902501	77	True				
ANR	903335	Identifier	OP_NOTMINSTARI		902501	0					
ANR	903336	Label	case OP_POSSTAR :	2685:4:91036:91051	902501	78	True				
ANR	903337	Identifier	OP_POSSTAR		902501	0					
ANR	903338	Label	case OP_POSSTARI :	2686:4:91057:91073	902501	79	True				
ANR	903339	Identifier	OP_POSSTARI		902501	0					
ANR	903340	Label	case OP_NOTPOSSTAR :	2687:4:91079:91097	902501	80	True				
ANR	903341	Identifier	OP_NOTPOSSTAR		902501	0					
ANR	903342	Label	case OP_NOTPOSSTARI :	2688:4:91103:91122	902501	81	True				
ANR	903343	Identifier	OP_NOTPOSSTARI		902501	0					
ANR	903344	Label	case OP_QUERY :	2690:4:91129:91142	902501	82	True				
ANR	903345	Identifier	OP_QUERY		902501	0					
ANR	903346	Label	case OP_QUERYI :	2691:4:91148:91162	902501	83	True				
ANR	903347	Identifier	OP_QUERYI		902501	0					
ANR	903348	Label	case OP_NOTQUERY :	2692:4:91168:91184	902501	84	True				
ANR	903349	Identifier	OP_NOTQUERY		902501	0					
ANR	903350	Label	case OP_NOTQUERYI :	2693:4:91190:91207	902501	85	True				
ANR	903351	Identifier	OP_NOTQUERYI		902501	0					
ANR	903352	Label	case OP_MINQUERY :	2695:4:91214:91230	902501	86	True				
ANR	903353	Identifier	OP_MINQUERY		902501	0					
ANR	903354	Label	case OP_MINQUERYI :	2696:4:91236:91253	902501	87	True				
ANR	903355	Identifier	OP_MINQUERYI		902501	0					
ANR	903356	Label	case OP_NOTMINQUERY :	2697:4:91259:91278	902501	88	True				
ANR	903357	Identifier	OP_NOTMINQUERY		902501	0					
ANR	903358	Label	case OP_NOTMINQUERYI :	2698:4:91284:91304	902501	89	True				
ANR	903359	Identifier	OP_NOTMINQUERYI		902501	0					
ANR	903360	Label	case OP_POSQUERY :	2700:4:91311:91327	902501	90	True				
ANR	903361	Identifier	OP_POSQUERY		902501	0					
ANR	903362	Label	case OP_POSQUERYI :	2701:4:91333:91350	902501	91	True				
ANR	903363	Identifier	OP_POSQUERYI		902501	0					
ANR	903364	Label	case OP_NOTPOSQUERY :	2702:4:91356:91375	902501	92	True				
ANR	903365	Identifier	OP_NOTPOSQUERY		902501	0					
ANR	903366	Label	case OP_NOTPOSQUERYI :	2703:4:91381:91401	902501	93	True				
ANR	903367	Identifier	OP_NOTPOSQUERYI		902501	0					
ANR	903368	IfStatement	if ( utf && HAS_EXTRALEN ( code [ 1 ] ) )		902501	94					
ANR	903369	Condition	utf && HAS_EXTRALEN ( code [ 1 ] )	2705:8:91412:91439	902501	0	True				
ANR	903370	AndExpression	utf && HAS_EXTRALEN ( code [ 1 ] )		902501	0		&&			
ANR	903371	Identifier	utf		902501	0					
ANR	903372	CallExpression	HAS_EXTRALEN ( code [ 1 ] )		902501	1					
ANR	903373	Callee	HAS_EXTRALEN		902501	0					
ANR	903374	Identifier	HAS_EXTRALEN		902501	0					
ANR	903375	ArgumentList	code [ 1 ]		902501	1					
ANR	903376	Argument	code [ 1 ]		902501	0					
ANR	903377	ArrayIndexing	code [ 1 ]		902501	0					
ANR	903378	Identifier	code		902501	0					
ANR	903379	PrimaryExpression	1		902501	1					
ANR	903380	ExpressionStatement	code += GET_EXTRALEN ( code [ 1 ] )	2705:38:91442:91471	902501	1	True				
ANR	903381	AssignmentExpression	code += GET_EXTRALEN ( code [ 1 ] )		902501	0		+=			
ANR	903382	Identifier	code		902501	0					
ANR	903383	CallExpression	GET_EXTRALEN ( code [ 1 ] )		902501	1					
ANR	903384	Callee	GET_EXTRALEN		902501	0					
ANR	903385	Identifier	GET_EXTRALEN		902501	0					
ANR	903386	ArgumentList	code [ 1 ]		902501	1					
ANR	903387	Argument	code [ 1 ]		902501	0					
ANR	903388	ArrayIndexing	code [ 1 ]		902501	0					
ANR	903389	Identifier	code		902501	0					
ANR	903390	PrimaryExpression	1		902501	1					
ANR	903391	BreakStatement	break ;	2706:4:91477:91482	902501	95	True				
ANR	903392	Label	case OP_UPTO :	2708:4:91489:91501	902501	96	True				
ANR	903393	Identifier	OP_UPTO		902501	0					
ANR	903394	Label	case OP_UPTOI :	2709:4:91507:91520	902501	97	True				
ANR	903395	Identifier	OP_UPTOI		902501	0					
ANR	903396	Label	case OP_NOTUPTO :	2710:4:91526:91541	902501	98	True				
ANR	903397	Identifier	OP_NOTUPTO		902501	0					
ANR	903398	Label	case OP_NOTUPTOI :	2711:4:91547:91563	902501	99	True				
ANR	903399	Identifier	OP_NOTUPTOI		902501	0					
ANR	903400	Label	case OP_MINUPTO :	2713:4:91570:91585	902501	100	True				
ANR	903401	Identifier	OP_MINUPTO		902501	0					
ANR	903402	Label	case OP_MINUPTOI :	2714:4:91591:91607	902501	101	True				
ANR	903403	Identifier	OP_MINUPTOI		902501	0					
ANR	903404	Label	case OP_NOTMINUPTO :	2715:4:91613:91631	902501	102	True				
ANR	903405	Identifier	OP_NOTMINUPTO		902501	0					
ANR	903406	Label	case OP_NOTMINUPTOI :	2716:4:91637:91656	902501	103	True				
ANR	903407	Identifier	OP_NOTMINUPTOI		902501	0					
ANR	903408	Label	case OP_POSUPTO :	2718:4:91663:91678	902501	104	True				
ANR	903409	Identifier	OP_POSUPTO		902501	0					
ANR	903410	Label	case OP_POSUPTOI :	2719:4:91684:91700	902501	105	True				
ANR	903411	Identifier	OP_POSUPTOI		902501	0					
ANR	903412	Label	case OP_NOTPOSUPTO :	2720:4:91706:91724	902501	106	True				
ANR	903413	Identifier	OP_NOTPOSUPTO		902501	0					
ANR	903414	Label	case OP_NOTPOSUPTOI :	2721:4:91730:91749	902501	107	True				
ANR	903415	Identifier	OP_NOTPOSUPTOI		902501	0					
ANR	903416	IfStatement	if ( utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] ) )		902501	108					
ANR	903417	Condition	utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )	2723:8:91760:91799	902501	0	True				
ANR	903418	AndExpression	utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		902501	0		&&			
ANR	903419	Identifier	utf		902501	0					
ANR	903420	CallExpression	HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		902501	1					
ANR	903421	Callee	HAS_EXTRALEN		902501	0					
ANR	903422	Identifier	HAS_EXTRALEN		902501	0					
ANR	903423	ArgumentList	code [ 1 + IMM2_SIZE ]		902501	1					
ANR	903424	Argument	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903425	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903426	Identifier	code		902501	0					
ANR	903427	AdditiveExpression	1 + IMM2_SIZE		902501	1		+			
ANR	903428	PrimaryExpression	1		902501	0					
ANR	903429	Identifier	IMM2_SIZE		902501	1					
ANR	903430	ExpressionStatement	code += GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )	2723:50:91802:91843	902501	1	True				
ANR	903431	AssignmentExpression	code += GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		902501	0		+=			
ANR	903432	Identifier	code		902501	0					
ANR	903433	CallExpression	GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		902501	1					
ANR	903434	Callee	GET_EXTRALEN		902501	0					
ANR	903435	Identifier	GET_EXTRALEN		902501	0					
ANR	903436	ArgumentList	code [ 1 + IMM2_SIZE ]		902501	1					
ANR	903437	Argument	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903438	ArrayIndexing	code [ 1 + IMM2_SIZE ]		902501	0					
ANR	903439	Identifier	code		902501	0					
ANR	903440	AdditiveExpression	1 + IMM2_SIZE		902501	1		+			
ANR	903441	PrimaryExpression	1		902501	0					
ANR	903442	Identifier	IMM2_SIZE		902501	1					
ANR	903443	BreakStatement	break ;	2724:4:91849:91854	902501	109	True				
ANR	903444	Label	case OP_MARK :	2730:4:91962:91974	902501	110	True				
ANR	903445	Identifier	OP_MARK		902501	0					
ANR	903446	Label	case OP_PRUNE_ARG :	2731:4:91980:91997	902501	111	True				
ANR	903447	Identifier	OP_PRUNE_ARG		902501	0					
ANR	903448	Label	case OP_SKIP_ARG :	2732:4:92003:92019	902501	112	True				
ANR	903449	Identifier	OP_SKIP_ARG		902501	0					
ANR	903450	Label	case OP_THEN_ARG :	2733:4:92025:92041	902501	113	True				
ANR	903451	Identifier	OP_THEN_ARG		902501	0					
ANR	903452	ExpressionStatement	code += code [ 1 ]	2734:4:92047:92062	902501	114	True				
ANR	903453	AssignmentExpression	code += code [ 1 ]		902501	0		+=			
ANR	903454	Identifier	code		902501	0					
ANR	903455	ArrayIndexing	code [ 1 ]		902501	1					
ANR	903456	Identifier	code		902501	0					
ANR	903457	PrimaryExpression	1		902501	1					
ANR	903458	BreakStatement	break ;	2735:4:92068:92073	902501	115	True				
ANR	903459	Label	default :	2739:4:92156:92163	902501	116	True				
ANR	903460	Identifier	default		902501	0					
ANR	903461	BreakStatement	break ;	2740:4:92169:92174	902501	117	True				
ANR	903462	ReturnStatement	return TRUE ;	2744:0:92187:92198	902501	4	True				
ANR	903463	Identifier	TRUE		902501	0					
ANR	903464	ReturnType	static BOOL		902501	1					
ANR	903465	Identifier	could_be_empty_branch		902501	2					
ANR	903466	ParameterList	"const pcre_uchar * code , const pcre_uchar * endcode , BOOL utf , compile_data * cd , recurse_check * recurses"		902501	3					
ANR	903467	Parameter	const pcre_uchar * code	2396:22:83292:83313	902501	0	True				
ANR	903468	ParameterType	const pcre_uchar *		902501	0					
ANR	903469	Identifier	code		902501	1					
ANR	903470	Parameter	const pcre_uchar * endcode	2396:46:83316:83340	902501	1	True				
ANR	903471	ParameterType	const pcre_uchar *		902501	0					
ANR	903472	Identifier	endcode		902501	1					
ANR	903473	Parameter	BOOL utf	2397:2:83345:83352	902501	2	True				
ANR	903474	ParameterType	BOOL		902501	0					
ANR	903475	Identifier	utf		902501	1					
ANR	903476	Parameter	compile_data * cd	2397:12:83355:83370	902501	3	True				
ANR	903477	ParameterType	compile_data *		902501	0					
ANR	903478	Identifier	cd		902501	1					
ANR	903479	Parameter	recurse_check * recurses	2397:30:83373:83395	902501	4	True				
ANR	903480	ParameterType	recurse_check *		902501	0					
ANR	903481	Identifier	recurses		902501	1					
ANR	903482	CFGEntryNode	ENTRY		902501		True				
ANR	903483	CFGExitNode	EXIT		902501		True				
ANR	903484	Symbol	* cd		902501						
ANR	903485	Symbol	* IMM2_SIZE		902501						
ANR	903486	Symbol	OP_CBRA		902501						
ANR	903487	Symbol	PRIV		902501						
ANR	903488	Symbol	* * code		902501						
ANR	903489	Symbol	* scode		902501						
ANR	903490	Symbol	cd -> hwm		902501						
ANR	903491	Symbol	OP_BRAZERO		902501						
ANR	903492	Symbol	GET2		902501						
ANR	903493	Symbol	* GET		902501						
ANR	903494	Symbol	HAS_EXTRALEN		902501						
ANR	903495	Symbol	NULL		902501						
ANR	903496	Symbol	recurses		902501						
ANR	903497	Symbol	OP_CLASS		902501						
ANR	903498	Symbol	utf		902501						
ANR	903499	Symbol	TRUE		902501						
ANR	903500	Symbol	OP_SCOND		902501						
ANR	903501	Symbol	OP_COND		902501						
ANR	903502	Symbol	r -> group		902501						
ANR	903503	Symbol	could_be_empty_branch		902501						
ANR	903504	Symbol	OP_SBRA		902501						
ANR	903505	Symbol	LINK_SIZE		902501						
ANR	903506	Symbol	OP_RECURSE		902501						
ANR	903507	Symbol	this_recurse . group		902501						
ANR	903508	Symbol	GET		902501						
ANR	903509	Symbol	OP_lengths		902501						
ANR	903510	Symbol	OP_BRAPOSZERO		902501						
ANR	903511	Symbol	* code		902501						
ANR	903512	Symbol	this_recurse		902501						
ANR	903513	Symbol	code		902501						
ANR	903514	Symbol	OP_SKIPZERO		902501						
ANR	903515	Symbol	OP_ONCE_NC		902501						
ANR	903516	Symbol	OP_ALT		902501						
ANR	903517	Symbol	* OP_CLASS		902501						
ANR	903518	Symbol	cd -> start_code		902501						
ANR	903519	Symbol	endgroup		902501						
ANR	903520	Symbol	r -> prev		902501						
ANR	903521	Symbol	cd -> start_workspace		902501						
ANR	903522	Symbol	first_significant_code		902501						
ANR	903523	Symbol	OP_CBRAPOS		902501						
ANR	903524	Symbol	* ccode		902501						
ANR	903525	Symbol	GET_EXTRALEN		902501						
ANR	903526	Symbol	OP_SBRAPOS		902501						
ANR	903527	Symbol	* endgroup		902501						
ANR	903528	Symbol	cd		902501						
ANR	903529	Symbol	OP_SCBRAPOS		902501						
ANR	903530	Symbol	c		902501						
ANR	903531	Symbol	scode		902501						
ANR	903532	Symbol	IMM2_SIZE		902501						
ANR	903533	Symbol	OP_ASSERT		902501						
ANR	903534	Symbol	this_recurse . prev		902501						
ANR	903535	Symbol	* c		902501						
ANR	903536	Symbol	OP_NOTPROP		902501						
ANR	903537	Symbol	OP_BRAPOS		902501						
ANR	903538	Symbol	tcode		902501						
ANR	903539	Symbol	OP_ONCE		902501						
ANR	903540	Symbol	* PRIV		902501						
ANR	903541	Symbol	ccode		902501						
ANR	903542	Symbol	OP_BRA		902501						
ANR	903543	Symbol	OP_PROP		902501						
ANR	903544	Symbol	endcode		902501						
ANR	903545	Symbol	r		902501						
ANR	903546	Symbol	empty_branch		902501						
ANR	903547	Symbol	& this_recurse		902501						
ANR	903548	Symbol	OP_BRAMINZERO		902501						
ANR	903549	Symbol	FALSE		902501						
ANR	903550	Symbol	* r		902501						
ANR	903551	Symbol	OP_SCBRA		902501						
ANR	903552	Function	could_be_empty	2770:0:93089:93415							
ANR	903553	FunctionDef	"could_be_empty (const pcre_uchar * code , const pcre_uchar * endcode , branch_chain * bcptr , BOOL utf , compile_data * cd)"		903552	0					
ANR	903554	CompoundStatement		2773:0:93218:93415	903552	0					
ANR	903555	WhileStatement	while ( bcptr != NULL && bcptr -> current_branch >= code )		903552	0					
ANR	903556	Condition	bcptr != NULL && bcptr -> current_branch >= code	2774:7:93227:93272	903552	0	True				
ANR	903557	AndExpression	bcptr != NULL && bcptr -> current_branch >= code		903552	0		&&			
ANR	903558	EqualityExpression	bcptr != NULL		903552	0		!=			
ANR	903559	Identifier	bcptr		903552	0					
ANR	903560	Identifier	NULL		903552	1					
ANR	903561	RelationalExpression	bcptr -> current_branch >= code		903552	1		>=			
ANR	903562	PtrMemberAccess	bcptr -> current_branch		903552	0					
ANR	903563	Identifier	bcptr		903552	0					
ANR	903564	Identifier	current_branch		903552	1					
ANR	903565	Identifier	code		903552	1					
ANR	903566	CompoundStatement		3:2:58:58	903552	1					
ANR	903567	IfStatement	"if ( ! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL ) )"		903552	0					
ANR	903568	Condition	"! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"	2776:6:93285:93353	903552	0	True				
ANR	903569	UnaryOperationExpression	"! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"		903552	0					
ANR	903570	UnaryOperator	!		903552	0					
ANR	903571	CallExpression	"could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"		903552	1					
ANR	903572	Callee	could_be_empty_branch		903552	0					
ANR	903573	Identifier	could_be_empty_branch		903552	0					
ANR	903574	ArgumentList	bcptr -> current_branch		903552	1					
ANR	903575	Argument	bcptr -> current_branch		903552	0					
ANR	903576	PtrMemberAccess	bcptr -> current_branch		903552	0					
ANR	903577	Identifier	bcptr		903552	0					
ANR	903578	Identifier	current_branch		903552	1					
ANR	903579	Argument	endcode		903552	1					
ANR	903580	Identifier	endcode		903552	0					
ANR	903581	Argument	utf		903552	2					
ANR	903582	Identifier	utf		903552	0					
ANR	903583	Argument	cd		903552	3					
ANR	903584	Identifier	cd		903552	0					
ANR	903585	Argument	NULL		903552	4					
ANR	903586	Identifier	NULL		903552	0					
ANR	903587	ReturnStatement	return FALSE ;	2777:4:93360:93372	903552	1	True				
ANR	903588	Identifier	FALSE		903552	0					
ANR	903589	ExpressionStatement	bcptr = bcptr -> outer	2778:2:93376:93396	903552	1	True				
ANR	903590	AssignmentExpression	bcptr = bcptr -> outer		903552	0		=			
ANR	903591	Identifier	bcptr		903552	0					
ANR	903592	PtrMemberAccess	bcptr -> outer		903552	1					
ANR	903593	Identifier	bcptr		903552	0					
ANR	903594	Identifier	outer		903552	1					
ANR	903595	ReturnStatement	return TRUE ;	2780:0:93402:93413	903552	1	True				
ANR	903596	Identifier	TRUE		903552	0					
ANR	903597	ReturnType	static BOOL		903552	1					
ANR	903598	Identifier	could_be_empty		903552	2					
ANR	903599	ParameterList	"const pcre_uchar * code , const pcre_uchar * endcode , branch_chain * bcptr , BOOL utf , compile_data * cd"		903552	3					
ANR	903600	Parameter	const pcre_uchar * code	2771:15:93116:93137	903552	0	True				
ANR	903601	ParameterType	const pcre_uchar *		903552	0					
ANR	903602	Identifier	code		903552	1					
ANR	903603	Parameter	const pcre_uchar * endcode	2771:39:93140:93164	903552	1	True				
ANR	903604	ParameterType	const pcre_uchar *		903552	0					
ANR	903605	Identifier	endcode		903552	1					
ANR	903606	Parameter	branch_chain * bcptr	2772:2:93169:93187	903552	2	True				
ANR	903607	ParameterType	branch_chain *		903552	0					
ANR	903608	Identifier	bcptr		903552	1					
ANR	903609	Parameter	BOOL utf	2772:23:93190:93197	903552	3	True				
ANR	903610	ParameterType	BOOL		903552	0					
ANR	903611	Identifier	utf		903552	1					
ANR	903612	Parameter	compile_data * cd	2772:33:93200:93215	903552	4	True				
ANR	903613	ParameterType	compile_data *		903552	0					
ANR	903614	Identifier	cd		903552	1					
ANR	903615	CFGEntryNode	ENTRY		903552		True				
ANR	903616	CFGExitNode	EXIT		903552		True				
ANR	903617	Symbol	cd		903552						
ANR	903618	Symbol	endcode		903552						
ANR	903619	Symbol	code		903552						
ANR	903620	Symbol	NULL		903552						
ANR	903621	Symbol	* bcptr		903552						
ANR	903622	Symbol	bcptr -> current_branch		903552						
ANR	903623	Symbol	utf		903552						
ANR	903624	Symbol	TRUE		903552						
ANR	903625	Symbol	FALSE		903552						
ANR	903626	Symbol	bcptr -> outer		903552						
ANR	903627	Symbol	could_be_empty_branch		903552						
ANR	903628	Symbol	bcptr		903552						
ANR	903629	Function	get_repeat_base	2796:0:93792:94081							
ANR	903630	FunctionDef	get_repeat_base (pcre_uchar c)		903629	0					
ANR	903631	CompoundStatement		2798:0:93840:94081	903629	0					
ANR	903632	ReturnStatement	return ( c > OP_TYPEPOSUPTO ) ? c : ( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR ;	2799:0:93842:94079	903629	0	True				
ANR	903633	ConditionalExpression	( c > OP_TYPEPOSUPTO ) ? c : ( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		903629	0					
ANR	903634	Condition	c > OP_TYPEPOSUPTO		903629	0					
ANR	903635	RelationalExpression	c > OP_TYPEPOSUPTO		903629	0		>			
ANR	903636	Identifier	c		903629	0					
ANR	903637	Identifier	OP_TYPEPOSUPTO		903629	1					
ANR	903638	Identifier	c		903629	1					
ANR	903639	ConditionalExpression	( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		903629	2					
ANR	903640	Condition	c >= OP_TYPESTAR		903629	0					
ANR	903641	RelationalExpression	c >= OP_TYPESTAR		903629	0		>=			
ANR	903642	Identifier	c		903629	0					
ANR	903643	Identifier	OP_TYPESTAR		903629	1					
ANR	903644	Identifier	OP_TYPESTAR		903629	1					
ANR	903645	ConditionalExpression	( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		903629	2					
ANR	903646	Condition	c >= OP_NOTSTARI		903629	0					
ANR	903647	RelationalExpression	c >= OP_NOTSTARI		903629	0		>=			
ANR	903648	Identifier	c		903629	0					
ANR	903649	Identifier	OP_NOTSTARI		903629	1					
ANR	903650	Identifier	OP_NOTSTARI		903629	1					
ANR	903651	ConditionalExpression	( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		903629	2					
ANR	903652	Condition	c >= OP_NOTSTAR		903629	0					
ANR	903653	RelationalExpression	c >= OP_NOTSTAR		903629	0		>=			
ANR	903654	Identifier	c		903629	0					
ANR	903655	Identifier	OP_NOTSTAR		903629	1					
ANR	903656	Identifier	OP_NOTSTAR		903629	1					
ANR	903657	ConditionalExpression	( c >= OP_STARI ) ? OP_STARI : OP_STAR		903629	2					
ANR	903658	Condition	c >= OP_STARI		903629	0					
ANR	903659	RelationalExpression	c >= OP_STARI		903629	0		>=			
ANR	903660	Identifier	c		903629	0					
ANR	903661	Identifier	OP_STARI		903629	1					
ANR	903662	Identifier	OP_STARI		903629	1					
ANR	903663	Identifier	OP_STAR		903629	2					
ANR	903664	ReturnType	static pcre_uchar		903629	1					
ANR	903665	Identifier	get_repeat_base		903629	2					
ANR	903666	ParameterList	pcre_uchar c		903629	3					
ANR	903667	Parameter	pcre_uchar c	2797:16:93826:93837	903629	0	True				
ANR	903668	ParameterType	pcre_uchar		903629	0					
ANR	903669	Identifier	c		903629	1					
ANR	903670	CFGEntryNode	ENTRY		903629		True				
ANR	903671	CFGExitNode	EXIT		903629		True				
ANR	903672	Symbol	OP_NOTSTAR		903629						
ANR	903673	Symbol	OP_NOTSTARI		903629						
ANR	903674	Symbol	OP_STAR		903629						
ANR	903675	Symbol	c		903629						
ANR	903676	Symbol	OP_TYPEPOSUPTO		903629						
ANR	903677	Symbol	OP_TYPESTAR		903629						
ANR	903678	Symbol	OP_STARI		903629						
ANR	903679	Function	check_char_prop	2826:0:94592:96130							
ANR	903680	FunctionDef	"check_char_prop (pcre_uint32 c , unsigned int ptype , unsigned int pdata , BOOL negated)"		903679	0					
ANR	903681	CompoundStatement		2829:0:94691:96130	903679	0					
ANR	903682	IdentifierDeclStatement	const pcre_uint32 * p ;	2830:0:94693:94713	903679	0	True				
ANR	903683	IdentifierDecl	* p		903679	0					
ANR	903684	IdentifierDeclType	const pcre_uint32 *		903679	0					
ANR	903685	Identifier	p		903679	1					
ANR	903686	IdentifierDeclStatement	const ucd_record * prop = GET_UCD ( c ) ;	2831:0:94715:94750	903679	1	True				
ANR	903687	IdentifierDecl	* prop = GET_UCD ( c )		903679	0					
ANR	903688	IdentifierDeclType	const ucd_record *		903679	0					
ANR	903689	Identifier	prop		903679	1					
ANR	903690	AssignmentExpression	* prop = GET_UCD ( c )		903679	2		=			
ANR	903691	Identifier	prop		903679	0					
ANR	903692	CallExpression	GET_UCD ( c )		903679	1					
ANR	903693	Callee	GET_UCD		903679	0					
ANR	903694	Identifier	GET_UCD		903679	0					
ANR	903695	ArgumentList	c		903679	1					
ANR	903696	Argument	c		903679	0					
ANR	903697	Identifier	c		903679	0					
ANR	903698	SwitchStatement	switch ( ptype )		903679	2					
ANR	903699	Condition	ptype	2833:7:94760:94764	903679	0	True				
ANR	903700	Identifier	ptype		903679	0					
ANR	903701	CompoundStatement		6:2:77:77	903679	1					
ANR	903702	Label	case PT_LAMP :	2835:2:94773:94785	903679	0	True				
ANR	903703	Identifier	PT_LAMP		903679	0					
ANR	903704	ReturnStatement	return ( prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt ) == negated ;	2836:2:94789:94909	903679	1	True				
ANR	903705	EqualityExpression	( prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt ) == negated		903679	0		==			
ANR	903706	OrExpression	prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt		903679	0		||			
ANR	903707	EqualityExpression	prop -> chartype == ucp_Lu		903679	0		==			
ANR	903708	PtrMemberAccess	prop -> chartype		903679	0					
ANR	903709	Identifier	prop		903679	0					
ANR	903710	Identifier	chartype		903679	1					
ANR	903711	Identifier	ucp_Lu		903679	1					
ANR	903712	OrExpression	prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt		903679	1		||			
ANR	903713	EqualityExpression	prop -> chartype == ucp_Ll		903679	0		==			
ANR	903714	PtrMemberAccess	prop -> chartype		903679	0					
ANR	903715	Identifier	prop		903679	0					
ANR	903716	Identifier	chartype		903679	1					
ANR	903717	Identifier	ucp_Ll		903679	1					
ANR	903718	EqualityExpression	prop -> chartype == ucp_Lt		903679	1		==			
ANR	903719	PtrMemberAccess	prop -> chartype		903679	0					
ANR	903720	Identifier	prop		903679	0					
ANR	903721	Identifier	chartype		903679	1					
ANR	903722	Identifier	ucp_Lt		903679	1					
ANR	903723	Identifier	negated		903679	1					
ANR	903724	Label	case PT_GC :	2840:2:94914:94924	903679	2	True				
ANR	903725	Identifier	PT_GC		903679	0					
ANR	903726	ReturnStatement	return ( pdata == PRIV ( ucp_gentype ) [ prop -> chartype ] ) == negated ;	2841:2:94928:94990	903679	3	True				
ANR	903727	EqualityExpression	( pdata == PRIV ( ucp_gentype ) [ prop -> chartype ] ) == negated		903679	0		==			
ANR	903728	EqualityExpression	pdata == PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0		==			
ANR	903729	Identifier	pdata		903679	0					
ANR	903730	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	1					
ANR	903731	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903732	Callee	PRIV		903679	0					
ANR	903733	Identifier	PRIV		903679	0					
ANR	903734	ArgumentList	ucp_gentype		903679	1					
ANR	903735	Argument	ucp_gentype		903679	0					
ANR	903736	Identifier	ucp_gentype		903679	0					
ANR	903737	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903738	Identifier	prop		903679	0					
ANR	903739	Identifier	chartype		903679	1					
ANR	903740	Identifier	negated		903679	1					
ANR	903741	Label	case PT_PC :	2843:2:94995:95005	903679	4	True				
ANR	903742	Identifier	PT_PC		903679	0					
ANR	903743	ReturnStatement	return ( pdata == prop -> chartype ) == negated ;	2844:2:95009:95052	903679	5	True				
ANR	903744	EqualityExpression	( pdata == prop -> chartype ) == negated		903679	0		==			
ANR	903745	EqualityExpression	pdata == prop -> chartype		903679	0		==			
ANR	903746	Identifier	pdata		903679	0					
ANR	903747	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903748	Identifier	prop		903679	0					
ANR	903749	Identifier	chartype		903679	1					
ANR	903750	Identifier	negated		903679	1					
ANR	903751	Label	case PT_SC :	2846:2:95057:95067	903679	6	True				
ANR	903752	Identifier	PT_SC		903679	0					
ANR	903753	ReturnStatement	return ( pdata == prop -> script ) == negated ;	2847:2:95071:95112	903679	7	True				
ANR	903754	EqualityExpression	( pdata == prop -> script ) == negated		903679	0		==			
ANR	903755	EqualityExpression	pdata == prop -> script		903679	0		==			
ANR	903756	Identifier	pdata		903679	0					
ANR	903757	PtrMemberAccess	prop -> script		903679	1					
ANR	903758	Identifier	prop		903679	0					
ANR	903759	Identifier	script		903679	1					
ANR	903760	Identifier	negated		903679	1					
ANR	903761	Label	case PT_ALNUM :	2851:2:95145:95158	903679	8	True				
ANR	903762	Identifier	PT_ALNUM		903679	0					
ANR	903763	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N ) == negated ;	2852:2:95162:95280	903679	9	True				
ANR	903764	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N ) == negated		903679	0		==			
ANR	903765	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		903679	0		||			
ANR	903766	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L		903679	0		==			
ANR	903767	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0					
ANR	903768	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903769	Callee	PRIV		903679	0					
ANR	903770	Identifier	PRIV		903679	0					
ANR	903771	ArgumentList	ucp_gentype		903679	1					
ANR	903772	Argument	ucp_gentype		903679	0					
ANR	903773	Identifier	ucp_gentype		903679	0					
ANR	903774	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903775	Identifier	prop		903679	0					
ANR	903776	Identifier	chartype		903679	1					
ANR	903777	Identifier	ucp_L		903679	1					
ANR	903778	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		903679	1		==			
ANR	903779	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0					
ANR	903780	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903781	Callee	PRIV		903679	0					
ANR	903782	Identifier	PRIV		903679	0					
ANR	903783	ArgumentList	ucp_gentype		903679	1					
ANR	903784	Argument	ucp_gentype		903679	0					
ANR	903785	Identifier	ucp_gentype		903679	0					
ANR	903786	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903787	Identifier	prop		903679	0					
ANR	903788	Identifier	chartype		903679	1					
ANR	903789	Identifier	ucp_N		903679	1					
ANR	903790	Identifier	negated		903679	1					
ANR	903791	Label	case PT_SPACE :	2859:2:95461:95474	903679	10	True				
ANR	903792	Identifier	PT_SPACE		903679	0					
ANR	903793	Label	case PT_PXSPACE :	2860:2:95498:95513	903679	11	True				
ANR	903794	Identifier	PT_PXSPACE		903679	0					
ANR	903795	SwitchStatement	switch ( c )		903679	12					
ANR	903796	Condition	c	2861:9:95543:95543	903679	0	True				
ANR	903797	Identifier	c		903679	0					
ANR	903798	CompoundStatement		34:4:858:858	903679	1					
ANR	903799	Label	HSPACE_CASES :	2863:4:95556:95568	903679	0	True				
ANR	903800	Identifier	HSPACE_CASES		903679	0					
ANR	903801	Label	VSPACE_CASES :	2864:4:95574:95586	903679	1	True				
ANR	903802	Identifier	VSPACE_CASES		903679	0					
ANR	903803	ReturnStatement	return negated ;	2865:4:95592:95606	903679	2	True				
ANR	903804	Identifier	negated		903679	0					
ANR	903805	Label	default :	2867:4:95613:95620	903679	3	True				
ANR	903806	Identifier	default		903679	0					
ANR	903807	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z ) == negated ;	2868:4:95626:95688	903679	4	True				
ANR	903808	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z ) == negated		903679	0		==			
ANR	903809	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z		903679	0		==			
ANR	903810	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0					
ANR	903811	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903812	Callee	PRIV		903679	0					
ANR	903813	Identifier	PRIV		903679	0					
ANR	903814	ArgumentList	ucp_gentype		903679	1					
ANR	903815	Argument	ucp_gentype		903679	0					
ANR	903816	Identifier	ucp_gentype		903679	0					
ANR	903817	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903818	Identifier	prop		903679	0					
ANR	903819	Identifier	chartype		903679	1					
ANR	903820	Identifier	ucp_Z		903679	1					
ANR	903821	Identifier	negated		903679	1					
ANR	903822	BreakStatement	break ;	2870:2:95698:95703	903679	13	True				
ANR	903823	Label	case PT_WORD :	2872:2:95742:95754	903679	14	True				
ANR	903824	Identifier	PT_WORD		903679	0					
ANR	903825	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE ) == negated ;	2873:2:95758:95910	903679	15	True				
ANR	903826	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE ) == negated		903679	0		==			
ANR	903827	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE		903679	0		||			
ANR	903828	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L		903679	0		==			
ANR	903829	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0					
ANR	903830	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903831	Callee	PRIV		903679	0					
ANR	903832	Identifier	PRIV		903679	0					
ANR	903833	ArgumentList	ucp_gentype		903679	1					
ANR	903834	Argument	ucp_gentype		903679	0					
ANR	903835	Identifier	ucp_gentype		903679	0					
ANR	903836	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903837	Identifier	prop		903679	0					
ANR	903838	Identifier	chartype		903679	1					
ANR	903839	Identifier	ucp_L		903679	1					
ANR	903840	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE		903679	1		||			
ANR	903841	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		903679	0		==			
ANR	903842	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		903679	0					
ANR	903843	CallExpression	PRIV ( ucp_gentype )		903679	0					
ANR	903844	Callee	PRIV		903679	0					
ANR	903845	Identifier	PRIV		903679	0					
ANR	903846	ArgumentList	ucp_gentype		903679	1					
ANR	903847	Argument	ucp_gentype		903679	0					
ANR	903848	Identifier	ucp_gentype		903679	0					
ANR	903849	PtrMemberAccess	prop -> chartype		903679	1					
ANR	903850	Identifier	prop		903679	0					
ANR	903851	Identifier	chartype		903679	1					
ANR	903852	Identifier	ucp_N		903679	1					
ANR	903853	EqualityExpression	c == CHAR_UNDERSCORE		903679	1		==			
ANR	903854	Identifier	c		903679	0					
ANR	903855	Identifier	CHAR_UNDERSCORE		903679	1					
ANR	903856	Identifier	negated		903679	1					
ANR	903857	Label	case PT_CLIST :	2877:2:95915:95928	903679	16	True				
ANR	903858	Identifier	PT_CLIST		903679	0					
ANR	903859	ExpressionStatement	p = PRIV ( ucd_caseless_sets ) + prop -> caseset	2878:2:95932:95975	903679	17	True				
ANR	903860	AssignmentExpression	p = PRIV ( ucd_caseless_sets ) + prop -> caseset		903679	0		=			
ANR	903861	Identifier	p		903679	0					
ANR	903862	AdditiveExpression	PRIV ( ucd_caseless_sets ) + prop -> caseset		903679	1		+			
ANR	903863	CallExpression	PRIV ( ucd_caseless_sets )		903679	0					
ANR	903864	Callee	PRIV		903679	0					
ANR	903865	Identifier	PRIV		903679	0					
ANR	903866	ArgumentList	ucd_caseless_sets		903679	1					
ANR	903867	Argument	ucd_caseless_sets		903679	0					
ANR	903868	Identifier	ucd_caseless_sets		903679	0					
ANR	903869	PtrMemberAccess	prop -> caseset		903679	1					
ANR	903870	Identifier	prop		903679	0					
ANR	903871	Identifier	caseset		903679	1					
ANR	903872	ForStatement	for ( ; ; )		903679	18					
ANR	903873	CompoundStatement		52:4:1300:1300	903679	0					
ANR	903874	IfStatement	if ( c < * p )		903679	0					
ANR	903875	Condition	c < * p	2881:8:96002:96007	903679	0	True				
ANR	903876	RelationalExpression	c < * p		903679	0		<			
ANR	903877	Identifier	c		903679	0					
ANR	903878	UnaryOperationExpression	* p		903679	1					
ANR	903879	UnaryOperator	*		903679	0					
ANR	903880	Identifier	p		903679	1					
ANR	903881	ReturnStatement	return ! negated ;	2881:16:96010:96025	903679	1	True				
ANR	903882	UnaryOperationExpression	! negated		903679	0					
ANR	903883	UnaryOperator	!		903679	0					
ANR	903884	Identifier	negated		903679	1					
ANR	903885	IfStatement	if ( c == * p ++ )		903679	1					
ANR	903886	Condition	c == * p ++	2882:8:96035:96043	903679	0	True				
ANR	903887	EqualityExpression	c == * p ++		903679	0		==			
ANR	903888	Identifier	c		903679	0					
ANR	903889	UnaryOperationExpression	* p ++		903679	1					
ANR	903890	UnaryOperator	*		903679	0					
ANR	903891	PostIncDecOperationExpression	p ++		903679	1					
ANR	903892	Identifier	p		903679	0					
ANR	903893	IncDec	++		903679	1					
ANR	903894	ReturnStatement	return negated ;	2882:19:96046:96060	903679	1	True				
ANR	903895	Identifier	negated		903679	0					
ANR	903896	BreakStatement	break ;	2884:2:96070:96075	903679	19	True				
ANR	903897	ReturnStatement	return FALSE ;	2887:0:96116:96128	903679	3	True				
ANR	903898	Identifier	FALSE		903679	0					
ANR	903899	ReturnType	static BOOL		903679	1					
ANR	903900	Identifier	check_char_prop		903679	2					
ANR	903901	ParameterList	"pcre_uint32 c , unsigned int ptype , unsigned int pdata , BOOL negated"		903679	3					
ANR	903902	Parameter	pcre_uint32 c	2827:16:94620:94632	903679	0	True				
ANR	903903	ParameterType	pcre_uint32		903679	0					
ANR	903904	Identifier	c		903679	1					
ANR	903905	Parameter	unsigned int ptype	2827:31:94635:94652	903679	1	True				
ANR	903906	ParameterType	unsigned int		903679	0					
ANR	903907	Identifier	ptype		903679	1					
ANR	903908	Parameter	unsigned int pdata	2827:51:94655:94672	903679	2	True				
ANR	903909	ParameterType	unsigned int		903679	0					
ANR	903910	Identifier	pdata		903679	1					
ANR	903911	Parameter	BOOL negated	2828:2:94677:94688	903679	3	True				
ANR	903912	ParameterType	BOOL		903679	0					
ANR	903913	Identifier	negated		903679	1					
ANR	903914	CFGEntryNode	ENTRY		903679		True				
ANR	903915	CFGExitNode	EXIT		903679		True				
ANR	903916	InfiniteForNode	true		903679		True				
ANR	903917	Symbol	prop -> chartype		903679						
ANR	903918	Symbol	ucp_gentype		903679						
ANR	903919	Symbol	negated		903679						
ANR	903920	Symbol	pdata		903679						
ANR	903921	Symbol	GET_UCD		903679						
ANR	903922	Symbol	ptype		903679						
ANR	903923	Symbol	PRIV		903679						
ANR	903924	Symbol	ucd_caseless_sets		903679						
ANR	903925	Symbol	ucp_Ll		903679						
ANR	903926	Symbol	CHAR_UNDERSCORE		903679						
ANR	903927	Symbol	* * prop		903679						
ANR	903928	Symbol	* prop -> chartype		903679						
ANR	903929	Symbol	prop		903679						
ANR	903930	Symbol	ucp_Z		903679						
ANR	903931	Symbol	c		903679						
ANR	903932	Symbol	* p ++		903679						
ANR	903933	Symbol	ucp_Lu		903679						
ANR	903934	Symbol	ucp_Lt		903679						
ANR	903935	Symbol	ucp_N		903679						
ANR	903936	Symbol	p		903679						
ANR	903937	Symbol	ucp_L		903679						
ANR	903938	Symbol	* PRIV		903679						
ANR	903939	Symbol	prop -> caseset		903679						
ANR	903940	Symbol	* prop		903679						
ANR	903941	Symbol	* p		903679						
ANR	903942	Symbol	FALSE		903679						
ANR	903943	Symbol	prop -> script		903679						
ANR	903944	Function	get_chr_property_list	2914:0:96972:100559							
ANR	903945	FunctionDef	"get_chr_property_list (const pcre_uchar * code , BOOL utf , const pcre_uint8 * fcc , pcre_uint32 * list)"		903944	0					
ANR	903946	CompoundStatement		2917:0:97098:100559	903944	0					
ANR	903947	IdentifierDeclStatement	pcre_uchar c = * code ;	2918:0:97100:97120	903944	0	True				
ANR	903948	IdentifierDecl	c = * code		903944	0					
ANR	903949	IdentifierDeclType	pcre_uchar		903944	0					
ANR	903950	Identifier	c		903944	1					
ANR	903951	AssignmentExpression	c = * code		903944	2		=			
ANR	903952	Identifier	c		903944	0					
ANR	903953	UnaryOperationExpression	* code		903944	1					
ANR	903954	UnaryOperator	*		903944	0					
ANR	903955	Identifier	code		903944	1					
ANR	903956	IdentifierDeclStatement	pcre_uchar base ;	2919:0:97122:97137	903944	1	True				
ANR	903957	IdentifierDecl	base		903944	0					
ANR	903958	IdentifierDeclType	pcre_uchar		903944	0					
ANR	903959	Identifier	base		903944	1					
ANR	903960	IdentifierDeclStatement	const pcre_uchar * end ;	2920:0:97139:97160	903944	2	True				
ANR	903961	IdentifierDecl	* end		903944	0					
ANR	903962	IdentifierDeclType	const pcre_uchar *		903944	0					
ANR	903963	Identifier	end		903944	1					
ANR	903964	IdentifierDeclStatement	pcre_uint32 chr ;	2921:0:97162:97177	903944	3	True				
ANR	903965	IdentifierDecl	chr		903944	0					
ANR	903966	IdentifierDeclType	pcre_uint32		903944	0					
ANR	903967	Identifier	chr		903944	1					
ANR	903968	IdentifierDeclStatement	pcre_uint32 * clist_dest ;	2924:0:97199:97222	903944	4	True				
ANR	903969	IdentifierDecl	* clist_dest		903944	0					
ANR	903970	IdentifierDeclType	pcre_uint32 *		903944	0					
ANR	903971	Identifier	clist_dest		903944	1					
ANR	903972	IdentifierDeclStatement	const pcre_uint32 * clist_src ;	2925:0:97224:97252	903944	5	True				
ANR	903973	IdentifierDecl	* clist_src		903944	0					
ANR	903974	IdentifierDeclType	const pcre_uint32 *		903944	0					
ANR	903975	Identifier	clist_src		903944	1					
ANR	903976	ExpressionStatement	list [ 0 ] = c	2930:0:97331:97342	903944	6	True				
ANR	903977	AssignmentExpression	list [ 0 ] = c		903944	0		=			
ANR	903978	ArrayIndexing	list [ 0 ]		903944	0					
ANR	903979	Identifier	list		903944	0					
ANR	903980	PrimaryExpression	0		903944	1					
ANR	903981	Identifier	c		903944	1					
ANR	903982	ExpressionStatement	list [ 1 ] = FALSE	2931:0:97344:97359	903944	7	True				
ANR	903983	AssignmentExpression	list [ 1 ] = FALSE		903944	0		=			
ANR	903984	ArrayIndexing	list [ 1 ]		903944	0					
ANR	903985	Identifier	list		903944	0					
ANR	903986	PrimaryExpression	1		903944	1					
ANR	903987	Identifier	FALSE		903944	1					
ANR	903988	ExpressionStatement	code ++	2932:0:97361:97367	903944	8	True				
ANR	903989	PostIncDecOperationExpression	code ++		903944	0					
ANR	903990	Identifier	code		903944	0					
ANR	903991	IncDec	++		903944	1					
ANR	903992	IfStatement	if ( c >= OP_STAR && c <= OP_TYPEPOSUPTO )		903944	9					
ANR	903993	Condition	c >= OP_STAR && c <= OP_TYPEPOSUPTO	2934:4:97374:97408	903944	0	True				
ANR	903994	AndExpression	c >= OP_STAR && c <= OP_TYPEPOSUPTO		903944	0		&&			
ANR	903995	RelationalExpression	c >= OP_STAR		903944	0		>=			
ANR	903996	Identifier	c		903944	0					
ANR	903997	Identifier	OP_STAR		903944	1					
ANR	903998	RelationalExpression	c <= OP_TYPEPOSUPTO		903944	1		<=			
ANR	903999	Identifier	c		903944	0					
ANR	904000	Identifier	OP_TYPEPOSUPTO		903944	1					
ANR	904001	CompoundStatement		19:2:314:314	903944	1					
ANR	904002	ExpressionStatement	base = get_repeat_base ( c )	2936:2:97417:97442	903944	0	True				
ANR	904003	AssignmentExpression	base = get_repeat_base ( c )		903944	0		=			
ANR	904004	Identifier	base		903944	0					
ANR	904005	CallExpression	get_repeat_base ( c )		903944	1					
ANR	904006	Callee	get_repeat_base		903944	0					
ANR	904007	Identifier	get_repeat_base		903944	0					
ANR	904008	ArgumentList	c		903944	1					
ANR	904009	Argument	c		903944	0					
ANR	904010	Identifier	c		903944	0					
ANR	904011	ExpressionStatement	c -= ( base - OP_STAR )	2937:2:97446:97467	903944	1	True				
ANR	904012	AssignmentExpression	c -= ( base - OP_STAR )		903944	0		-=			
ANR	904013	Identifier	c		903944	0					
ANR	904014	AdditiveExpression	base - OP_STAR		903944	1		-			
ANR	904015	Identifier	base		903944	0					
ANR	904016	Identifier	OP_STAR		903944	1					
ANR	904017	IfStatement	if ( c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO )		903944	2					
ANR	904018	Condition	c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO	2939:6:97476:97542	903944	0	True				
ANR	904019	OrExpression	c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO		903944	0		||			
ANR	904020	EqualityExpression	c == OP_UPTO		903944	0		==			
ANR	904021	Identifier	c		903944	0					
ANR	904022	Identifier	OP_UPTO		903944	1					
ANR	904023	OrExpression	c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO		903944	1		||			
ANR	904024	EqualityExpression	c == OP_MINUPTO		903944	0		==			
ANR	904025	Identifier	c		903944	0					
ANR	904026	Identifier	OP_MINUPTO		903944	1					
ANR	904027	OrExpression	c == OP_EXACT || c == OP_POSUPTO		903944	1		||			
ANR	904028	EqualityExpression	c == OP_EXACT		903944	0		==			
ANR	904029	Identifier	c		903944	0					
ANR	904030	Identifier	OP_EXACT		903944	1					
ANR	904031	EqualityExpression	c == OP_POSUPTO		903944	1		==			
ANR	904032	Identifier	c		903944	0					
ANR	904033	Identifier	OP_POSUPTO		903944	1					
ANR	904034	ExpressionStatement	code += IMM2_SIZE	2940:4:97549:97566	903944	1	True				
ANR	904035	AssignmentExpression	code += IMM2_SIZE		903944	0		+=			
ANR	904036	Identifier	code		903944	0					
ANR	904037	Identifier	IMM2_SIZE		903944	1					
ANR	904038	ExpressionStatement	list [ 1 ] = ( c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS )	2942:2:97571:97650	903944	3	True				
ANR	904039	AssignmentExpression	list [ 1 ] = ( c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS )		903944	0		=			
ANR	904040	ArrayIndexing	list [ 1 ]		903944	0					
ANR	904041	Identifier	list		903944	0					
ANR	904042	PrimaryExpression	1		903944	1					
ANR	904043	AndExpression	c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS		903944	1		&&			
ANR	904044	EqualityExpression	c != OP_PLUS		903944	0		!=			
ANR	904045	Identifier	c		903944	0					
ANR	904046	Identifier	OP_PLUS		903944	1					
ANR	904047	AndExpression	c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS		903944	1		&&			
ANR	904048	EqualityExpression	c != OP_MINPLUS		903944	0		!=			
ANR	904049	Identifier	c		903944	0					
ANR	904050	Identifier	OP_MINPLUS		903944	1					
ANR	904051	AndExpression	c != OP_EXACT && c != OP_POSPLUS		903944	1		&&			
ANR	904052	EqualityExpression	c != OP_EXACT		903944	0		!=			
ANR	904053	Identifier	c		903944	0					
ANR	904054	Identifier	OP_EXACT		903944	1					
ANR	904055	EqualityExpression	c != OP_POSPLUS		903944	1		!=			
ANR	904056	Identifier	c		903944	0					
ANR	904057	Identifier	OP_POSPLUS		903944	1					
ANR	904058	SwitchStatement	switch ( base )		903944	4					
ANR	904059	Condition	base	2944:9:97662:97665	903944	0	True				
ANR	904060	Identifier	base		903944	0					
ANR	904061	CompoundStatement		29:4:573:573	903944	1					
ANR	904062	Label	case OP_STAR :	2946:4:97678:97690	903944	0	True				
ANR	904063	Identifier	OP_STAR		903944	0					
ANR	904064	ExpressionStatement	list [ 0 ] = OP_CHAR	2947:4:97696:97713	903944	1	True				
ANR	904065	AssignmentExpression	list [ 0 ] = OP_CHAR		903944	0		=			
ANR	904066	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904067	Identifier	list		903944	0					
ANR	904068	PrimaryExpression	0		903944	1					
ANR	904069	Identifier	OP_CHAR		903944	1					
ANR	904070	BreakStatement	break ;	2948:4:97719:97724	903944	2	True				
ANR	904071	Label	case OP_STARI :	2950:4:97731:97744	903944	3	True				
ANR	904072	Identifier	OP_STARI		903944	0					
ANR	904073	ExpressionStatement	list [ 0 ] = OP_CHARI	2951:4:97750:97768	903944	4	True				
ANR	904074	AssignmentExpression	list [ 0 ] = OP_CHARI		903944	0		=			
ANR	904075	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904076	Identifier	list		903944	0					
ANR	904077	PrimaryExpression	0		903944	1					
ANR	904078	Identifier	OP_CHARI		903944	1					
ANR	904079	BreakStatement	break ;	2952:4:97774:97779	903944	5	True				
ANR	904080	Label	case OP_NOTSTAR :	2954:4:97786:97801	903944	6	True				
ANR	904081	Identifier	OP_NOTSTAR		903944	0					
ANR	904082	ExpressionStatement	list [ 0 ] = OP_NOT	2955:4:97807:97823	903944	7	True				
ANR	904083	AssignmentExpression	list [ 0 ] = OP_NOT		903944	0		=			
ANR	904084	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904085	Identifier	list		903944	0					
ANR	904086	PrimaryExpression	0		903944	1					
ANR	904087	Identifier	OP_NOT		903944	1					
ANR	904088	BreakStatement	break ;	2956:4:97829:97834	903944	8	True				
ANR	904089	Label	case OP_NOTSTARI :	2958:4:97841:97857	903944	9	True				
ANR	904090	Identifier	OP_NOTSTARI		903944	0					
ANR	904091	ExpressionStatement	list [ 0 ] = OP_NOTI	2959:4:97863:97880	903944	10	True				
ANR	904092	AssignmentExpression	list [ 0 ] = OP_NOTI		903944	0		=			
ANR	904093	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904094	Identifier	list		903944	0					
ANR	904095	PrimaryExpression	0		903944	1					
ANR	904096	Identifier	OP_NOTI		903944	1					
ANR	904097	BreakStatement	break ;	2960:4:97886:97891	903944	11	True				
ANR	904098	Label	case OP_TYPESTAR :	2962:4:97898:97914	903944	12	True				
ANR	904099	Identifier	OP_TYPESTAR		903944	0					
ANR	904100	ExpressionStatement	list [ 0 ] = * code	2963:4:97920:97935	903944	13	True				
ANR	904101	AssignmentExpression	list [ 0 ] = * code		903944	0		=			
ANR	904102	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904103	Identifier	list		903944	0					
ANR	904104	PrimaryExpression	0		903944	1					
ANR	904105	UnaryOperationExpression	* code		903944	1					
ANR	904106	UnaryOperator	*		903944	0					
ANR	904107	Identifier	code		903944	1					
ANR	904108	ExpressionStatement	code ++	2964:4:97941:97947	903944	14	True				
ANR	904109	PostIncDecOperationExpression	code ++		903944	0					
ANR	904110	Identifier	code		903944	0					
ANR	904111	IncDec	++		903944	1					
ANR	904112	BreakStatement	break ;	2965:4:97953:97958	903944	15	True				
ANR	904113	ExpressionStatement	c = list [ 0 ]	2967:2:97968:97979	903944	5	True				
ANR	904114	AssignmentExpression	c = list [ 0 ]		903944	0		=			
ANR	904115	Identifier	c		903944	0					
ANR	904116	ArrayIndexing	list [ 0 ]		903944	1					
ANR	904117	Identifier	list		903944	0					
ANR	904118	PrimaryExpression	0		903944	1					
ANR	904119	SwitchStatement	switch ( c )		903944	10					
ANR	904120	Condition	c	2970:7:97993:97993	903944	0	True				
ANR	904121	Identifier	c		903944	0					
ANR	904122	CompoundStatement		55:2:899:899	903944	1					
ANR	904123	Label	case OP_NOT_DIGIT :	2972:2:98002:98019	903944	0	True				
ANR	904124	Identifier	OP_NOT_DIGIT		903944	0					
ANR	904125	Label	case OP_DIGIT :	2973:2:98023:98036	903944	1	True				
ANR	904126	Identifier	OP_DIGIT		903944	0					
ANR	904127	Label	case OP_NOT_WHITESPACE :	2974:2:98040:98062	903944	2	True				
ANR	904128	Identifier	OP_NOT_WHITESPACE		903944	0					
ANR	904129	Label	case OP_WHITESPACE :	2975:2:98066:98084	903944	3	True				
ANR	904130	Identifier	OP_WHITESPACE		903944	0					
ANR	904131	Label	case OP_NOT_WORDCHAR :	2976:2:98088:98108	903944	4	True				
ANR	904132	Identifier	OP_NOT_WORDCHAR		903944	0					
ANR	904133	Label	case OP_WORDCHAR :	2977:2:98112:98128	903944	5	True				
ANR	904134	Identifier	OP_WORDCHAR		903944	0					
ANR	904135	Label	case OP_ANY :	2978:2:98132:98143	903944	6	True				
ANR	904136	Identifier	OP_ANY		903944	0					
ANR	904137	Label	case OP_ALLANY :	2979:2:98147:98161	903944	7	True				
ANR	904138	Identifier	OP_ALLANY		903944	0					
ANR	904139	Label	case OP_ANYNL :	2980:2:98165:98178	903944	8	True				
ANR	904140	Identifier	OP_ANYNL		903944	0					
ANR	904141	Label	case OP_NOT_HSPACE :	2981:2:98182:98200	903944	9	True				
ANR	904142	Identifier	OP_NOT_HSPACE		903944	0					
ANR	904143	Label	case OP_HSPACE :	2982:2:98204:98218	903944	10	True				
ANR	904144	Identifier	OP_HSPACE		903944	0					
ANR	904145	Label	case OP_NOT_VSPACE :	2983:2:98222:98240	903944	11	True				
ANR	904146	Identifier	OP_NOT_VSPACE		903944	0					
ANR	904147	Label	case OP_VSPACE :	2984:2:98244:98258	903944	12	True				
ANR	904148	Identifier	OP_VSPACE		903944	0					
ANR	904149	Label	case OP_EXTUNI :	2985:2:98262:98276	903944	13	True				
ANR	904150	Identifier	OP_EXTUNI		903944	0					
ANR	904151	Label	case OP_EODN :	2986:2:98280:98292	903944	14	True				
ANR	904152	Identifier	OP_EODN		903944	0					
ANR	904153	Label	case OP_EOD :	2987:2:98296:98307	903944	15	True				
ANR	904154	Identifier	OP_EOD		903944	0					
ANR	904155	Label	case OP_DOLL :	2988:2:98311:98323	903944	16	True				
ANR	904156	Identifier	OP_DOLL		903944	0					
ANR	904157	Label	case OP_DOLLM :	2989:2:98327:98340	903944	17	True				
ANR	904158	Identifier	OP_DOLLM		903944	0					
ANR	904159	ReturnStatement	return code ;	2990:2:98344:98355	903944	18	True				
ANR	904160	Identifier	code		903944	0					
ANR	904161	Label	case OP_CHAR :	2992:2:98360:98372	903944	19	True				
ANR	904162	Identifier	OP_CHAR		903944	0					
ANR	904163	Label	case OP_NOT :	2993:2:98376:98387	903944	20	True				
ANR	904164	Identifier	OP_NOT		903944	0					
ANR	904165	ExpressionStatement	"GETCHARINCTEST ( chr , code )"	2994:2:98391:98416	903944	21	True				
ANR	904166	CallExpression	"GETCHARINCTEST ( chr , code )"		903944	0					
ANR	904167	Callee	GETCHARINCTEST		903944	0					
ANR	904168	Identifier	GETCHARINCTEST		903944	0					
ANR	904169	ArgumentList	chr		903944	1					
ANR	904170	Argument	chr		903944	0					
ANR	904171	Identifier	chr		903944	0					
ANR	904172	Argument	code		903944	1					
ANR	904173	Identifier	code		903944	0					
ANR	904174	ExpressionStatement	list [ 2 ] = chr	2995:2:98420:98433	903944	22	True				
ANR	904175	AssignmentExpression	list [ 2 ] = chr		903944	0		=			
ANR	904176	ArrayIndexing	list [ 2 ]		903944	0					
ANR	904177	Identifier	list		903944	0					
ANR	904178	PrimaryExpression	2		903944	1					
ANR	904179	Identifier	chr		903944	1					
ANR	904180	ExpressionStatement	list [ 3 ] = NOTACHAR	2996:2:98437:98455	903944	23	True				
ANR	904181	AssignmentExpression	list [ 3 ] = NOTACHAR		903944	0		=			
ANR	904182	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904183	Identifier	list		903944	0					
ANR	904184	PrimaryExpression	3		903944	1					
ANR	904185	Identifier	NOTACHAR		903944	1					
ANR	904186	ReturnStatement	return code ;	2997:2:98459:98470	903944	24	True				
ANR	904187	Identifier	code		903944	0					
ANR	904188	Label	case OP_CHARI :	2999:2:98475:98488	903944	25	True				
ANR	904189	Identifier	OP_CHARI		903944	0					
ANR	904190	Label	case OP_NOTI :	3000:2:98492:98504	903944	26	True				
ANR	904191	Identifier	OP_NOTI		903944	0					
ANR	904192	ExpressionStatement	list [ 0 ] = ( c == OP_CHARI ) ? OP_CHAR : OP_NOT	3001:2:98508:98552	903944	27	True				
ANR	904193	AssignmentExpression	list [ 0 ] = ( c == OP_CHARI ) ? OP_CHAR : OP_NOT		903944	0		=			
ANR	904194	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904195	Identifier	list		903944	0					
ANR	904196	PrimaryExpression	0		903944	1					
ANR	904197	ConditionalExpression	( c == OP_CHARI ) ? OP_CHAR : OP_NOT		903944	1					
ANR	904198	Condition	c == OP_CHARI		903944	0					
ANR	904199	EqualityExpression	c == OP_CHARI		903944	0		==			
ANR	904200	Identifier	c		903944	0					
ANR	904201	Identifier	OP_CHARI		903944	1					
ANR	904202	Identifier	OP_CHAR		903944	1					
ANR	904203	Identifier	OP_NOT		903944	2					
ANR	904204	ExpressionStatement	"GETCHARINCTEST ( chr , code )"	3002:2:98556:98581	903944	28	True				
ANR	904205	CallExpression	"GETCHARINCTEST ( chr , code )"		903944	0					
ANR	904206	Callee	GETCHARINCTEST		903944	0					
ANR	904207	Identifier	GETCHARINCTEST		903944	0					
ANR	904208	ArgumentList	chr		903944	1					
ANR	904209	Argument	chr		903944	0					
ANR	904210	Identifier	chr		903944	0					
ANR	904211	Argument	code		903944	1					
ANR	904212	Identifier	code		903944	0					
ANR	904213	ExpressionStatement	list [ 2 ] = chr	3003:2:98585:98598	903944	29	True				
ANR	904214	AssignmentExpression	list [ 2 ] = chr		903944	0		=			
ANR	904215	ArrayIndexing	list [ 2 ]		903944	0					
ANR	904216	Identifier	list		903944	0					
ANR	904217	PrimaryExpression	2		903944	1					
ANR	904218	Identifier	chr		903944	1					
ANR	904219	IfStatement	if ( chr < 128 || ( chr < 256 && ! utf ) )		903944	30					
ANR	904220	Condition	chr < 128 || ( chr < 256 && ! utf )	3006:6:98626:98657	903944	0	True				
ANR	904221	OrExpression	chr < 128 || ( chr < 256 && ! utf )		903944	0		||			
ANR	904222	RelationalExpression	chr < 128		903944	0		<			
ANR	904223	Identifier	chr		903944	0					
ANR	904224	PrimaryExpression	128		903944	1					
ANR	904225	AndExpression	chr < 256 && ! utf		903944	1		&&			
ANR	904226	RelationalExpression	chr < 256		903944	0		<			
ANR	904227	Identifier	chr		903944	0					
ANR	904228	PrimaryExpression	256		903944	1					
ANR	904229	UnaryOperationExpression	! utf		903944	1					
ANR	904230	UnaryOperator	!		903944	0					
ANR	904231	Identifier	utf		903944	1					
ANR	904232	ExpressionStatement	list [ 3 ] = fcc [ chr ]	3007:4:98664:98682	903944	1	True				
ANR	904233	AssignmentExpression	list [ 3 ] = fcc [ chr ]		903944	0		=			
ANR	904234	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904235	Identifier	list		903944	0					
ANR	904236	PrimaryExpression	3		903944	1					
ANR	904237	ArrayIndexing	fcc [ chr ]		903944	1					
ANR	904238	Identifier	fcc		903944	0					
ANR	904239	Identifier	chr		903944	1					
ANR	904240	ElseStatement	else		903944	0					
ANR	904241	ExpressionStatement	list [ 3 ] = UCD_OTHERCASE ( chr )	3009:4:98695:98723	903944	0	True				
ANR	904242	AssignmentExpression	list [ 3 ] = UCD_OTHERCASE ( chr )		903944	0		=			
ANR	904243	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904244	Identifier	list		903944	0					
ANR	904245	PrimaryExpression	3		903944	1					
ANR	904246	CallExpression	UCD_OTHERCASE ( chr )		903944	1					
ANR	904247	Callee	UCD_OTHERCASE		903944	0					
ANR	904248	Identifier	UCD_OTHERCASE		903944	0					
ANR	904249	ArgumentList	chr		903944	1					
ANR	904250	Argument	chr		903944	0					
ANR	904251	Identifier	chr		903944	0					
ANR	904252	IfStatement	if ( chr == list [ 3 ] )		903944	31					
ANR	904253	Condition	chr == list [ 3 ]	3018:6:98909:98922	903944	0	True				
ANR	904254	EqualityExpression	chr == list [ 3 ]		903944	0		==			
ANR	904255	Identifier	chr		903944	0					
ANR	904256	ArrayIndexing	list [ 3 ]		903944	1					
ANR	904257	Identifier	list		903944	0					
ANR	904258	PrimaryExpression	3		903944	1					
ANR	904259	ExpressionStatement	list [ 3 ] = NOTACHAR	3019:4:98929:98947	903944	1	True				
ANR	904260	AssignmentExpression	list [ 3 ] = NOTACHAR		903944	0		=			
ANR	904261	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904262	Identifier	list		903944	0					
ANR	904263	PrimaryExpression	3		903944	1					
ANR	904264	Identifier	NOTACHAR		903944	1					
ANR	904265	ElseStatement	else		903944	0					
ANR	904266	ExpressionStatement	list [ 4 ] = NOTACHAR	3021:4:98960:98978	903944	0	True				
ANR	904267	AssignmentExpression	list [ 4 ] = NOTACHAR		903944	0		=			
ANR	904268	ArrayIndexing	list [ 4 ]		903944	0					
ANR	904269	Identifier	list		903944	0					
ANR	904270	PrimaryExpression	4		903944	1					
ANR	904271	Identifier	NOTACHAR		903944	1					
ANR	904272	ReturnStatement	return code ;	3022:2:98982:98993	903944	32	True				
ANR	904273	Identifier	code		903944	0					
ANR	904274	Label	case OP_PROP :	3025:2:99017:99029	903944	33	True				
ANR	904275	Identifier	OP_PROP		903944	0					
ANR	904276	Label	case OP_NOTPROP :	3026:2:99033:99048	903944	34	True				
ANR	904277	Identifier	OP_NOTPROP		903944	0					
ANR	904278	IfStatement	if ( code [ 0 ] != PT_CLIST )		903944	35					
ANR	904279	Condition	code [ 0 ] != PT_CLIST	3027:6:99056:99074	903944	0	True				
ANR	904280	EqualityExpression	code [ 0 ] != PT_CLIST		903944	0		!=			
ANR	904281	ArrayIndexing	code [ 0 ]		903944	0					
ANR	904282	Identifier	code		903944	0					
ANR	904283	PrimaryExpression	0		903944	1					
ANR	904284	Identifier	PT_CLIST		903944	1					
ANR	904285	CompoundStatement		112:4:1982:1982	903944	1					
ANR	904286	ExpressionStatement	list [ 2 ] = code [ 0 ]	3029:4:99087:99104	903944	0	True				
ANR	904287	AssignmentExpression	list [ 2 ] = code [ 0 ]		903944	0		=			
ANR	904288	ArrayIndexing	list [ 2 ]		903944	0					
ANR	904289	Identifier	list		903944	0					
ANR	904290	PrimaryExpression	2		903944	1					
ANR	904291	ArrayIndexing	code [ 0 ]		903944	1					
ANR	904292	Identifier	code		903944	0					
ANR	904293	PrimaryExpression	0		903944	1					
ANR	904294	ExpressionStatement	list [ 3 ] = code [ 1 ]	3030:4:99110:99127	903944	1	True				
ANR	904295	AssignmentExpression	list [ 3 ] = code [ 1 ]		903944	0		=			
ANR	904296	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904297	Identifier	list		903944	0					
ANR	904298	PrimaryExpression	3		903944	1					
ANR	904299	ArrayIndexing	code [ 1 ]		903944	1					
ANR	904300	Identifier	code		903944	0					
ANR	904301	PrimaryExpression	1		903944	1					
ANR	904302	ReturnStatement	return code + 2 ;	3031:4:99133:99148	903944	2	True				
ANR	904303	AdditiveExpression	code + 2		903944	0		+			
ANR	904304	Identifier	code		903944	0					
ANR	904305	PrimaryExpression	2		903944	1					
ANR	904306	ExpressionStatement	clist_src = PRIV ( ucd_caseless_sets ) + code [ 1 ]	3036:2:99206:99251	903944	36	True				
ANR	904307	AssignmentExpression	clist_src = PRIV ( ucd_caseless_sets ) + code [ 1 ]		903944	0		=			
ANR	904308	Identifier	clist_src		903944	0					
ANR	904309	AdditiveExpression	PRIV ( ucd_caseless_sets ) + code [ 1 ]		903944	1		+			
ANR	904310	CallExpression	PRIV ( ucd_caseless_sets )		903944	0					
ANR	904311	Callee	PRIV		903944	0					
ANR	904312	Identifier	PRIV		903944	0					
ANR	904313	ArgumentList	ucd_caseless_sets		903944	1					
ANR	904314	Argument	ucd_caseless_sets		903944	0					
ANR	904315	Identifier	ucd_caseless_sets		903944	0					
ANR	904316	ArrayIndexing	code [ 1 ]		903944	1					
ANR	904317	Identifier	code		903944	0					
ANR	904318	PrimaryExpression	1		903944	1					
ANR	904319	ExpressionStatement	clist_dest = list + 2	3037:2:99255:99276	903944	37	True				
ANR	904320	AssignmentExpression	clist_dest = list + 2		903944	0		=			
ANR	904321	Identifier	clist_dest		903944	0					
ANR	904322	AdditiveExpression	list + 2		903944	1		+			
ANR	904323	Identifier	list		903944	0					
ANR	904324	PrimaryExpression	2		903944	1					
ANR	904325	ExpressionStatement	code += 2	3038:2:99280:99289	903944	38	True				
ANR	904326	AssignmentExpression	code += 2		903944	0		+=			
ANR	904327	Identifier	code		903944	0					
ANR	904328	PrimaryExpression	2		903944	1					
ANR	904329	DoStatement	do		903944	39					
ANR	904330	CompoundStatement		124:5:2198:2198	903944	0					
ANR	904331	IfStatement	if ( clist_dest >= list + 8 )		903944	0					
ANR	904332	Condition	clist_dest >= list + 8	3041:9:99308:99329	903944	0	True				
ANR	904333	RelationalExpression	clist_dest >= list + 8		903944	0		>=			
ANR	904334	Identifier	clist_dest		903944	0					
ANR	904335	AdditiveExpression	list + 8		903944	1		+			
ANR	904336	Identifier	list		903944	0					
ANR	904337	PrimaryExpression	8		903944	1					
ANR	904338	CompoundStatement		126:7:2240:2240	903944	1					
ANR	904339	ExpressionStatement	list [ 2 ] = code [ 0 ]	3045:7:99488:99505	903944	0	True				
ANR	904340	AssignmentExpression	list [ 2 ] = code [ 0 ]		903944	0		=			
ANR	904341	ArrayIndexing	list [ 2 ]		903944	0					
ANR	904342	Identifier	list		903944	0					
ANR	904343	PrimaryExpression	2		903944	1					
ANR	904344	ArrayIndexing	code [ 0 ]		903944	1					
ANR	904345	Identifier	code		903944	0					
ANR	904346	PrimaryExpression	0		903944	1					
ANR	904347	ExpressionStatement	list [ 3 ] = code [ 1 ]	3046:7:99514:99531	903944	1	True				
ANR	904348	AssignmentExpression	list [ 3 ] = code [ 1 ]		903944	0		=			
ANR	904349	ArrayIndexing	list [ 3 ]		903944	0					
ANR	904350	Identifier	list		903944	0					
ANR	904351	PrimaryExpression	3		903944	1					
ANR	904352	ArrayIndexing	code [ 1 ]		903944	1					
ANR	904353	Identifier	code		903944	0					
ANR	904354	PrimaryExpression	1		903944	1					
ANR	904355	ReturnStatement	return code ;	3047:7:99540:99551	903944	2	True				
ANR	904356	Identifier	code		903944	0					
ANR	904357	ExpressionStatement	* clist_dest ++ = * clist_src	3049:5:99567:99593	903944	1	True				
ANR	904358	AssignmentExpression	* clist_dest ++ = * clist_src		903944	0		=			
ANR	904359	UnaryOperationExpression	* clist_dest ++		903944	0					
ANR	904360	UnaryOperator	*		903944	0					
ANR	904361	PostIncDecOperationExpression	clist_dest ++		903944	1					
ANR	904362	Identifier	clist_dest		903944	0					
ANR	904363	IncDec	++		903944	1					
ANR	904364	UnaryOperationExpression	* clist_src		903944	1					
ANR	904365	UnaryOperator	*		903944	0					
ANR	904366	Identifier	clist_src		903944	1					
ANR	904367	Condition	* clist_src ++ != NOTACHAR	3051:8:99610:99633	903944	1	True				
ANR	904368	EqualityExpression	* clist_src ++ != NOTACHAR		903944	0		!=			
ANR	904369	UnaryOperationExpression	* clist_src ++		903944	0					
ANR	904370	UnaryOperator	*		903944	0					
ANR	904371	PostIncDecOperationExpression	clist_src ++		903944	1					
ANR	904372	Identifier	clist_src		903944	0					
ANR	904373	IncDec	++		903944	1					
ANR	904374	Identifier	NOTACHAR		903944	1					
ANR	904375	ExpressionStatement	list [ 0 ] = ( c == OP_PROP ) ? OP_CHAR : OP_NOT	3056:2:99736:99779	903944	40	True				
ANR	904376	AssignmentExpression	list [ 0 ] = ( c == OP_PROP ) ? OP_CHAR : OP_NOT		903944	0		=			
ANR	904377	ArrayIndexing	list [ 0 ]		903944	0					
ANR	904378	Identifier	list		903944	0					
ANR	904379	PrimaryExpression	0		903944	1					
ANR	904380	ConditionalExpression	( c == OP_PROP ) ? OP_CHAR : OP_NOT		903944	1					
ANR	904381	Condition	c == OP_PROP		903944	0					
ANR	904382	EqualityExpression	c == OP_PROP		903944	0		==			
ANR	904383	Identifier	c		903944	0					
ANR	904384	Identifier	OP_PROP		903944	1					
ANR	904385	Identifier	OP_CHAR		903944	1					
ANR	904386	Identifier	OP_NOT		903944	2					
ANR	904387	ReturnStatement	return code ;	3057:2:99783:99794	903944	41	True				
ANR	904388	Identifier	code		903944	0					
ANR	904389	Label	case OP_NCLASS :	3060:2:99806:99820	903944	42	True				
ANR	904390	Identifier	OP_NCLASS		903944	0					
ANR	904391	Label	case OP_CLASS :	3061:2:99824:99837	903944	43	True				
ANR	904392	Identifier	OP_CLASS		903944	0					
ANR	904393	Label	case OP_XCLASS :	3063:2:99891:99905	903944	44	True				
ANR	904394	Identifier	OP_XCLASS		903944	0					
ANR	904395	IfStatement	if ( c == OP_XCLASS )		903944	45					
ANR	904396	Condition	c == OP_XCLASS	3064:6:99913:99926	903944	0	True				
ANR	904397	EqualityExpression	c == OP_XCLASS		903944	0		==			
ANR	904398	Identifier	c		903944	0					
ANR	904399	Identifier	OP_XCLASS		903944	1					
ANR	904400	ExpressionStatement	"end = code + GET ( code , 0 ) - 1"	3065:4:99933:99962	903944	1	True				
ANR	904401	AssignmentExpression	"end = code + GET ( code , 0 ) - 1"		903944	0		=			
ANR	904402	Identifier	end		903944	0					
ANR	904403	AdditiveExpression	"code + GET ( code , 0 ) - 1"		903944	1		+			
ANR	904404	Identifier	code		903944	0					
ANR	904405	AdditiveExpression	"GET ( code , 0 ) - 1"		903944	1		-			
ANR	904406	CallExpression	"GET ( code , 0 )"		903944	0					
ANR	904407	Callee	GET		903944	0					
ANR	904408	Identifier	GET		903944	0					
ANR	904409	ArgumentList	code		903944	1					
ANR	904410	Argument	code		903944	0					
ANR	904411	Identifier	code		903944	0					
ANR	904412	Argument	0		903944	1					
ANR	904413	PrimaryExpression	0		903944	0					
ANR	904414	PrimaryExpression	1		903944	1					
ANR	904415	ElseStatement	else		903944	0					
ANR	904416	ExpressionStatement	end = code + 32 / sizeof ( pcre_uchar )	3068:4:99982:100018	903944	0	True				
ANR	904417	AssignmentExpression	end = code + 32 / sizeof ( pcre_uchar )		903944	0		=			
ANR	904418	Identifier	end		903944	0					
ANR	904419	AdditiveExpression	code + 32 / sizeof ( pcre_uchar )		903944	1		+			
ANR	904420	Identifier	code		903944	0					
ANR	904421	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		903944	1		/			
ANR	904422	PrimaryExpression	32		903944	0					
ANR	904423	SizeofExpression	sizeof ( pcre_uchar )		903944	1					
ANR	904424	Sizeof	sizeof		903944	0					
ANR	904425	SizeofOperand	pcre_uchar		903944	1					
ANR	904426	SwitchStatement	switch ( * end )		903944	46					
ANR	904427	Condition	* end	3070:9:100030:100033	903944	0	True				
ANR	904428	UnaryOperationExpression	* end		903944	0					
ANR	904429	UnaryOperator	*		903944	0					
ANR	904430	Identifier	end		903944	1					
ANR	904431	CompoundStatement		155:4:2941:2941	903944	1					
ANR	904432	Label	case OP_CRSTAR :	3072:4:100046:100060	903944	0	True				
ANR	904433	Identifier	OP_CRSTAR		903944	0					
ANR	904434	Label	case OP_CRMINSTAR :	3073:4:100066:100083	903944	1	True				
ANR	904435	Identifier	OP_CRMINSTAR		903944	0					
ANR	904436	Label	case OP_CRQUERY :	3074:4:100089:100104	903944	2	True				
ANR	904437	Identifier	OP_CRQUERY		903944	0					
ANR	904438	Label	case OP_CRMINQUERY :	3075:4:100110:100128	903944	3	True				
ANR	904439	Identifier	OP_CRMINQUERY		903944	0					
ANR	904440	Label	case OP_CRPOSSTAR :	3076:4:100134:100151	903944	4	True				
ANR	904441	Identifier	OP_CRPOSSTAR		903944	0					
ANR	904442	Label	case OP_CRPOSQUERY :	3077:4:100157:100175	903944	5	True				
ANR	904443	Identifier	OP_CRPOSQUERY		903944	0					
ANR	904444	ExpressionStatement	list [ 1 ] = TRUE	3078:4:100181:100195	903944	6	True				
ANR	904445	AssignmentExpression	list [ 1 ] = TRUE		903944	0		=			
ANR	904446	ArrayIndexing	list [ 1 ]		903944	0					
ANR	904447	Identifier	list		903944	0					
ANR	904448	PrimaryExpression	1		903944	1					
ANR	904449	Identifier	TRUE		903944	1					
ANR	904450	ExpressionStatement	end ++	3079:4:100201:100206	903944	7	True				
ANR	904451	PostIncDecOperationExpression	end ++		903944	0					
ANR	904452	Identifier	end		903944	0					
ANR	904453	IncDec	++		903944	1					
ANR	904454	BreakStatement	break ;	3080:4:100212:100217	903944	8	True				
ANR	904455	Label	case OP_CRPLUS :	3082:4:100224:100238	903944	9	True				
ANR	904456	Identifier	OP_CRPLUS		903944	0					
ANR	904457	Label	case OP_CRMINPLUS :	3083:4:100244:100261	903944	10	True				
ANR	904458	Identifier	OP_CRMINPLUS		903944	0					
ANR	904459	Label	case OP_CRPOSPLUS :	3084:4:100267:100284	903944	11	True				
ANR	904460	Identifier	OP_CRPOSPLUS		903944	0					
ANR	904461	ExpressionStatement	end ++	3085:4:100290:100295	903944	12	True				
ANR	904462	PostIncDecOperationExpression	end ++		903944	0					
ANR	904463	Identifier	end		903944	0					
ANR	904464	IncDec	++		903944	1					
ANR	904465	BreakStatement	break ;	3086:4:100301:100306	903944	13	True				
ANR	904466	Label	case OP_CRRANGE :	3088:4:100313:100328	903944	14	True				
ANR	904467	Identifier	OP_CRRANGE		903944	0					
ANR	904468	Label	case OP_CRMINRANGE :	3089:4:100334:100352	903944	15	True				
ANR	904469	Identifier	OP_CRMINRANGE		903944	0					
ANR	904470	Label	case OP_CRPOSRANGE :	3090:4:100358:100376	903944	16	True				
ANR	904471	Identifier	OP_CRPOSRANGE		903944	0					
ANR	904472	ExpressionStatement	"list [ 1 ] = ( GET2 ( end , 1 ) == 0 )"	3091:4:100382:100411	903944	17	True				
ANR	904473	AssignmentExpression	"list [ 1 ] = ( GET2 ( end , 1 ) == 0 )"		903944	0		=			
ANR	904474	ArrayIndexing	list [ 1 ]		903944	0					
ANR	904475	Identifier	list		903944	0					
ANR	904476	PrimaryExpression	1		903944	1					
ANR	904477	EqualityExpression	"GET2 ( end , 1 ) == 0"		903944	1		==			
ANR	904478	CallExpression	"GET2 ( end , 1 )"		903944	0					
ANR	904479	Callee	GET2		903944	0					
ANR	904480	Identifier	GET2		903944	0					
ANR	904481	ArgumentList	end		903944	1					
ANR	904482	Argument	end		903944	0					
ANR	904483	Identifier	end		903944	0					
ANR	904484	Argument	1		903944	1					
ANR	904485	PrimaryExpression	1		903944	0					
ANR	904486	PrimaryExpression	0		903944	1					
ANR	904487	ExpressionStatement	end += 1 + 2 * IMM2_SIZE	3092:4:100417:100441	903944	18	True				
ANR	904488	AssignmentExpression	end += 1 + 2 * IMM2_SIZE		903944	0		+=			
ANR	904489	Identifier	end		903944	0					
ANR	904490	AdditiveExpression	1 + 2 * IMM2_SIZE		903944	1		+			
ANR	904491	PrimaryExpression	1		903944	0					
ANR	904492	MultiplicativeExpression	2 * IMM2_SIZE		903944	1		*			
ANR	904493	PrimaryExpression	2		903944	0					
ANR	904494	Identifier	IMM2_SIZE		903944	1					
ANR	904495	BreakStatement	break ;	3093:4:100447:100452	903944	19	True				
ANR	904496	ExpressionStatement	list [ 2 ] = ( pcre_uint32 ) ( end - code )	3095:2:100462:100497	903944	47	True				
ANR	904497	AssignmentExpression	list [ 2 ] = ( pcre_uint32 ) ( end - code )		903944	0		=			
ANR	904498	ArrayIndexing	list [ 2 ]		903944	0					
ANR	904499	Identifier	list		903944	0					
ANR	904500	PrimaryExpression	2		903944	1					
ANR	904501	CastExpression	( pcre_uint32 ) ( end - code )		903944	1					
ANR	904502	CastTarget	pcre_uint32		903944	0					
ANR	904503	AdditiveExpression	end - code		903944	1		-			
ANR	904504	Identifier	end		903944	0					
ANR	904505	Identifier	code		903944	1					
ANR	904506	ReturnStatement	return end ;	3096:2:100501:100511	903944	48	True				
ANR	904507	Identifier	end		903944	0					
ANR	904508	ReturnStatement	return NULL ;	3098:0:100517:100528	903944	11	True				
ANR	904509	Identifier	NULL		903944	0					
ANR	904510	ReturnType	static const pcre_uchar *		903944	1					
ANR	904511	Identifier	get_chr_property_list		903944	2					
ANR	904512	ParameterList	"const pcre_uchar * code , BOOL utf , const pcre_uint8 * fcc , pcre_uint32 * list"		903944	3					
ANR	904513	Parameter	const pcre_uchar * code	2915:22:97020:97041	903944	0	True				
ANR	904514	ParameterType	const pcre_uchar *		903944	0					
ANR	904515	Identifier	code		903944	1					
ANR	904516	Parameter	BOOL utf	2915:46:97044:97051	903944	1	True				
ANR	904517	ParameterType	BOOL		903944	0					
ANR	904518	Identifier	utf		903944	1					
ANR	904519	Parameter	const pcre_uint8 * fcc	2916:2:97056:97076	903944	2	True				
ANR	904520	ParameterType	const pcre_uint8 *		903944	0					
ANR	904521	Identifier	fcc		903944	1					
ANR	904522	Parameter	pcre_uint32 * list	2916:25:97079:97095	903944	3	True				
ANR	904523	ParameterType	pcre_uint32 *		903944	0					
ANR	904524	Identifier	list		903944	1					
ANR	904525	CFGEntryNode	ENTRY		903944		True				
ANR	904526	CFGExitNode	EXIT		903944		True				
ANR	904527	Symbol	OP_EXACT		903944						
ANR	904528	Symbol	OP_STAR		903944						
ANR	904529	Symbol	code		903944						
ANR	904530	Symbol	OP_TYPEPOSUPTO		903944						
ANR	904531	Symbol	OP_UPTO		903944						
ANR	904532	Symbol	fcc		903944						
ANR	904533	Symbol	OP_PLUS		903944						
ANR	904534	Symbol	OP_CHARI		903944						
ANR	904535	Symbol	clist_dest		903944						
ANR	904536	Symbol	OP_MINUPTO		903944						
ANR	904537	Symbol	PRIV		903944						
ANR	904538	Symbol	get_repeat_base		903944						
ANR	904539	Symbol	* fcc		903944						
ANR	904540	Symbol	ucd_caseless_sets		903944						
ANR	904541	Symbol	* clist_src		903944						
ANR	904542	Symbol	clist_src		903944						
ANR	904543	Symbol	end		903944						
ANR	904544	Symbol	GET2		903944						
ANR	904545	Symbol	OP_CHAR		903944						
ANR	904546	Symbol	c		903944						
ANR	904547	Symbol	NULL		903944						
ANR	904548	Symbol	OP_POSPLUS		903944						
ANR	904549	Symbol	utf		903944						
ANR	904550	Symbol	IMM2_SIZE		903944						
ANR	904551	Symbol	* chr		903944						
ANR	904552	Symbol	* clist_src ++		903944						
ANR	904553	Symbol	TRUE		903944						
ANR	904554	Symbol	list		903944						
ANR	904555	Symbol	chr		903944						
ANR	904556	Symbol	* clist_dest ++		903944						
ANR	904557	Symbol	OP_MINPLUS		903944						
ANR	904558	Symbol	OP_PROP		903944						
ANR	904559	Symbol	OP_XCLASS		903944						
ANR	904560	Symbol	* list		903944						
ANR	904561	Symbol	UCD_OTHERCASE		903944						
ANR	904562	Symbol	NOTACHAR		903944						
ANR	904563	Symbol	OP_NOT		903944						
ANR	904564	Symbol	GET		903944						
ANR	904565	Symbol	FALSE		903944						
ANR	904566	Symbol	* end		903944						
ANR	904567	Symbol	OP_POSUPTO		903944						
ANR	904568	Symbol	OP_NOTI		903944						
ANR	904569	Symbol	* code		903944						
ANR	904570	Symbol	base		903944						
ANR	904571	Symbol	PT_CLIST		903944						
ANR	904572	Function	compare_opcodes	3119:0:101087:115758							
ANR	904573	FunctionDef	"compare_opcodes (const pcre_uchar * code , BOOL utf , const compile_data * cd , const pcre_uint32 * base_list , const pcre_uchar * base_end , int * rec_limit)"		904572	0					
ANR	904574	CompoundStatement		3122:0:101249:115758	904572	0					
ANR	904575	IdentifierDeclStatement	pcre_uchar c ;	3123:0:101251:101263	904572	0	True				
ANR	904576	IdentifierDecl	c		904572	0					
ANR	904577	IdentifierDeclType	pcre_uchar		904572	0					
ANR	904578	Identifier	c		904572	1					
ANR	904579	IdentifierDeclStatement	pcre_uint32 list [ 8 ] ;	3124:0:101265:101284	904572	1	True				
ANR	904580	IdentifierDecl	list [ 8 ]		904572	0					
ANR	904581	IdentifierDeclType	pcre_uint32 [ 8 ]		904572	0					
ANR	904582	Identifier	list		904572	1					
ANR	904583	PrimaryExpression	8		904572	2					
ANR	904584	IdentifierDeclStatement	const pcre_uint32 * chr_ptr ;	3125:0:101286:101312	904572	2	True				
ANR	904585	IdentifierDecl	* chr_ptr		904572	0					
ANR	904586	IdentifierDeclType	const pcre_uint32 *		904572	0					
ANR	904587	Identifier	chr_ptr		904572	1					
ANR	904588	IdentifierDeclStatement	const pcre_uint32 * ochr_ptr ;	3126:0:101314:101341	904572	3	True				
ANR	904589	IdentifierDecl	* ochr_ptr		904572	0					
ANR	904590	IdentifierDeclType	const pcre_uint32 *		904572	0					
ANR	904591	Identifier	ochr_ptr		904572	1					
ANR	904592	IdentifierDeclStatement	const pcre_uint32 * list_ptr ;	3127:0:101343:101370	904572	4	True				
ANR	904593	IdentifierDecl	* list_ptr		904572	0					
ANR	904594	IdentifierDeclType	const pcre_uint32 *		904572	0					
ANR	904595	Identifier	list_ptr		904572	1					
ANR	904596	IdentifierDeclStatement	const pcre_uchar * next_code ;	3128:0:101372:101399	904572	5	True				
ANR	904597	IdentifierDecl	* next_code		904572	0					
ANR	904598	IdentifierDeclType	const pcre_uchar *		904572	0					
ANR	904599	Identifier	next_code		904572	1					
ANR	904600	IdentifierDeclStatement	const pcre_uchar * xclass_flags ;	3130:0:101451:101481	904572	6	True				
ANR	904601	IdentifierDecl	* xclass_flags		904572	0					
ANR	904602	IdentifierDeclType	const pcre_uchar *		904572	0					
ANR	904603	Identifier	xclass_flags		904572	1					
ANR	904604	IdentifierDeclStatement	const pcre_uint8 * class_bitset ;	3132:0:101490:101520	904572	7	True				
ANR	904605	IdentifierDecl	* class_bitset		904572	0					
ANR	904606	IdentifierDeclType	const pcre_uint8 *		904572	0					
ANR	904607	Identifier	class_bitset		904572	1					
ANR	904608	IdentifierDeclStatement	"const pcre_uint8 * set1 , * set2 , * set_end ;"	3133:0:101522:101561	904572	8	True				
ANR	904609	IdentifierDecl	* set1		904572	0					
ANR	904610	IdentifierDeclType	const pcre_uint8 *		904572	0					
ANR	904611	Identifier	set1		904572	1					
ANR	904612	IdentifierDecl	* set2		904572	1					
ANR	904613	IdentifierDeclType	const pcre_uint8 *		904572	0					
ANR	904614	Identifier	set2		904572	1					
ANR	904615	IdentifierDecl	* set_end		904572	2					
ANR	904616	IdentifierDeclType	const pcre_uint8 *		904572	0					
ANR	904617	Identifier	set_end		904572	1					
ANR	904618	IdentifierDeclStatement	pcre_uint32 chr ;	3134:0:101563:101578	904572	9	True				
ANR	904619	IdentifierDecl	chr		904572	0					
ANR	904620	IdentifierDeclType	pcre_uint32		904572	0					
ANR	904621	Identifier	chr		904572	1					
ANR	904622	IdentifierDeclStatement	"BOOL accepted , invert_bits ;"	3135:0:101580:101606	904572	10	True				
ANR	904623	IdentifierDecl	accepted		904572	0					
ANR	904624	IdentifierDeclType	BOOL		904572	0					
ANR	904625	Identifier	accepted		904572	1					
ANR	904626	IdentifierDecl	invert_bits		904572	1					
ANR	904627	IdentifierDeclType	BOOL		904572	0					
ANR	904628	Identifier	invert_bits		904572	1					
ANR	904629	IdentifierDeclStatement	BOOL entered_a_group = FALSE ;	3136:0:101608:101636	904572	11	True				
ANR	904630	IdentifierDecl	entered_a_group = FALSE		904572	0					
ANR	904631	IdentifierDeclType	BOOL		904572	0					
ANR	904632	Identifier	entered_a_group		904572	1					
ANR	904633	AssignmentExpression	entered_a_group = FALSE		904572	2		=			
ANR	904634	Identifier	FALSE		904572	0					
ANR	904635	Identifier	FALSE		904572	1					
ANR	904636	IfStatement	if ( * rec_limit == 0 )		904572	12					
ANR	904637	Condition	* rec_limit == 0	3138:4:101643:101657	904572	0	True				
ANR	904638	EqualityExpression	* rec_limit == 0		904572	0		==			
ANR	904639	UnaryOperationExpression	* rec_limit		904572	0					
ANR	904640	UnaryOperator	*		904572	0					
ANR	904641	Identifier	rec_limit		904572	1					
ANR	904642	PrimaryExpression	0		904572	1					
ANR	904643	ReturnStatement	return FALSE ;	3138:21:101660:101672	904572	1	True				
ANR	904644	Identifier	FALSE		904572	0					
ANR	904645	ExpressionStatement	-- ( * rec_limit )	3139:0:101674:101688	904572	13	True				
ANR	904646	UnaryExpression	-- ( * rec_limit )		904572	0					
ANR	904647	IncDec	--		904572	0					
ANR	904648	UnaryOperationExpression	* rec_limit		904572	1					
ANR	904649	UnaryOperator	*		904572	0					
ANR	904650	Identifier	rec_limit		904572	1					
ANR	904651	ForStatement	for ( ; ; )		904572	14					
ANR	904652	CompoundStatement		26:2:740:740	904572	0					
ANR	904653	ExpressionStatement	c = * code	3151:2:102099:102108	904572	0	True				
ANR	904654	AssignmentExpression	c = * code		904572	0		=			
ANR	904655	Identifier	c		904572	0					
ANR	904656	UnaryOperationExpression	* code		904572	1					
ANR	904657	UnaryOperator	*		904572	0					
ANR	904658	Identifier	code		904572	1					
ANR	904659	IfStatement	if ( c == OP_CALLOUT )		904572	1					
ANR	904660	Condition	c == OP_CALLOUT	3155:6:102145:102159	904572	0	True				
ANR	904661	EqualityExpression	c == OP_CALLOUT		904572	0		==			
ANR	904662	Identifier	c		904572	0					
ANR	904663	Identifier	OP_CALLOUT		904572	1					
ANR	904664	CompoundStatement		35:4:916:916	904572	1					
ANR	904665	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3157:4:102172:102199	904572	0	True				
ANR	904666	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		904572	0		+=			
ANR	904667	Identifier	code		904572	0					
ANR	904668	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		904572	1					
ANR	904669	CallExpression	PRIV ( OP_lengths )		904572	0					
ANR	904670	Callee	PRIV		904572	0					
ANR	904671	Identifier	PRIV		904572	0					
ANR	904672	ArgumentList	OP_lengths		904572	1					
ANR	904673	Argument	OP_lengths		904572	0					
ANR	904674	Identifier	OP_lengths		904572	0					
ANR	904675	Identifier	c		904572	1					
ANR	904676	ContinueStatement	continue ;	3158:4:102205:102213	904572	1	True				
ANR	904677	IfStatement	if ( c == OP_ALT )		904572	2					
ANR	904678	Condition	c == OP_ALT	3161:6:102228:102238	904572	0	True				
ANR	904679	EqualityExpression	c == OP_ALT		904572	0		==			
ANR	904680	Identifier	c		904572	0					
ANR	904681	Identifier	OP_ALT		904572	1					
ANR	904682	CompoundStatement		41:4:995:995	904572	1					
ANR	904683	DoStatement	do		904572	0					
ANR	904684	ExpressionStatement	"code += GET ( code , 1 )"	3163:7:102254:102274	904572	0	True				
ANR	904685	AssignmentExpression	"code += GET ( code , 1 )"		904572	0		+=			
ANR	904686	Identifier	code		904572	0					
ANR	904687	CallExpression	"GET ( code , 1 )"		904572	1					
ANR	904688	Callee	GET		904572	0					
ANR	904689	Identifier	GET		904572	0					
ANR	904690	ArgumentList	code		904572	1					
ANR	904691	Argument	code		904572	0					
ANR	904692	Identifier	code		904572	0					
ANR	904693	Argument	1		904572	1					
ANR	904694	PrimaryExpression	1		904572	0					
ANR	904695	Condition	* code == OP_ALT	3163:36:102283:102297	904572	1	True				
ANR	904696	EqualityExpression	* code == OP_ALT		904572	0		==			
ANR	904697	UnaryOperationExpression	* code		904572	0					
ANR	904698	UnaryOperator	*		904572	0					
ANR	904699	Identifier	code		904572	1					
ANR	904700	Identifier	OP_ALT		904572	1					
ANR	904701	ExpressionStatement	c = * code	3164:4:102305:102314	904572	1	True				
ANR	904702	AssignmentExpression	c = * code		904572	0		=			
ANR	904703	Identifier	c		904572	0					
ANR	904704	UnaryOperationExpression	* code		904572	1					
ANR	904705	UnaryOperator	*		904572	0					
ANR	904706	Identifier	code		904572	1					
ANR	904707	SwitchStatement	switch ( c )		904572	3					
ANR	904708	Condition	c	3167:9:102332:102332	904572	0	True				
ANR	904709	Identifier	c		904572	0					
ANR	904710	CompoundStatement		47:4:1089:1089	904572	1					
ANR	904711	Label	case OP_END :	3169:4:102345:102356	904572	0	True				
ANR	904712	Identifier	OP_END		904572	0					
ANR	904713	Label	case OP_KETRPOS :	3170:4:102362:102377	904572	1	True				
ANR	904714	Identifier	OP_KETRPOS		904572	0					
ANR	904715	ReturnStatement	return base_list [ 1 ] != 0 ;	3175:4:102593:102617	904572	2	True				
ANR	904716	EqualityExpression	base_list [ 1 ] != 0		904572	0		!=			
ANR	904717	ArrayIndexing	base_list [ 1 ]		904572	0					
ANR	904718	Identifier	base_list		904572	0					
ANR	904719	PrimaryExpression	1		904572	1					
ANR	904720	PrimaryExpression	0		904572	1					
ANR	904721	Label	case OP_KET :	3177:4:102624:102635	904572	3	True				
ANR	904722	Identifier	OP_KET		904572	0					
ANR	904723	IfStatement	if ( base_list [ 1 ] == 0 )		904572	4					
ANR	904724	Condition	base_list [ 1 ] == 0	3182:8:102840:102856	904572	0	True				
ANR	904725	EqualityExpression	base_list [ 1 ] == 0		904572	0		==			
ANR	904726	ArrayIndexing	base_list [ 1 ]		904572	0					
ANR	904727	Identifier	base_list		904572	0					
ANR	904728	PrimaryExpression	1		904572	1					
ANR	904729	PrimaryExpression	0		904572	1					
ANR	904730	ReturnStatement	return FALSE ;	3182:27:102859:102871	904572	1	True				
ANR	904731	Identifier	FALSE		904572	0					
ANR	904732	SwitchStatement	"switch ( * ( code - GET ( code , 1 ) ) )"		904572	5					
ANR	904733	Condition	"* ( code - GET ( code , 1 ) )"	3184:11:102885:102906	904572	0	True				
ANR	904734	UnaryOperationExpression	"* ( code - GET ( code , 1 ) )"		904572	0					
ANR	904735	UnaryOperator	*		904572	0					
ANR	904736	AdditiveExpression	"code - GET ( code , 1 )"		904572	1		-			
ANR	904737	Identifier	code		904572	0					
ANR	904738	CallExpression	"GET ( code , 1 )"		904572	1					
ANR	904739	Callee	GET		904572	0					
ANR	904740	Identifier	GET		904572	0					
ANR	904741	ArgumentList	code		904572	1					
ANR	904742	Argument	code		904572	0					
ANR	904743	Identifier	code		904572	0					
ANR	904744	Argument	1		904572	1					
ANR	904745	PrimaryExpression	1		904572	0					
ANR	904746	CompoundStatement		64:6:1665:1665	904572	1					
ANR	904747	Label	case OP_ASSERT :	3186:6:102923:102937	904572	0	True				
ANR	904748	Identifier	OP_ASSERT		904572	0					
ANR	904749	Label	case OP_ASSERT_NOT :	3187:6:102945:102963	904572	1	True				
ANR	904750	Identifier	OP_ASSERT_NOT		904572	0					
ANR	904751	Label	case OP_ASSERTBACK :	3188:6:102971:102989	904572	2	True				
ANR	904752	Identifier	OP_ASSERTBACK		904572	0					
ANR	904753	Label	case OP_ASSERTBACK_NOT :	3189:6:102997:103019	904572	3	True				
ANR	904754	Identifier	OP_ASSERTBACK_NOT		904572	0					
ANR	904755	Label	case OP_ONCE :	3190:6:103027:103039	904572	4	True				
ANR	904756	Identifier	OP_ONCE		904572	0					
ANR	904757	Label	case OP_ONCE_NC :	3191:6:103047:103062	904572	5	True				
ANR	904758	Identifier	OP_ONCE_NC		904572	0					
ANR	904759	ReturnStatement	return ! entered_a_group ;	3196:6:103279:103302	904572	6	True				
ANR	904760	UnaryOperationExpression	! entered_a_group		904572	0					
ANR	904761	UnaryOperator	!		904572	0					
ANR	904762	Identifier	entered_a_group		904572	1					
ANR	904763	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3199:4:103317:103344	904572	6	True				
ANR	904764	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		904572	0		+=			
ANR	904765	Identifier	code		904572	0					
ANR	904766	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		904572	1					
ANR	904767	CallExpression	PRIV ( OP_lengths )		904572	0					
ANR	904768	Callee	PRIV		904572	0					
ANR	904769	Identifier	PRIV		904572	0					
ANR	904770	ArgumentList	OP_lengths		904572	1					
ANR	904771	Argument	OP_lengths		904572	0					
ANR	904772	Identifier	OP_lengths		904572	0					
ANR	904773	Identifier	c		904572	1					
ANR	904774	ContinueStatement	continue ;	3200:4:103350:103358	904572	7	True				
ANR	904775	Label	case OP_ONCE :	3202:4:103365:103377	904572	8	True				
ANR	904776	Identifier	OP_ONCE		904572	0					
ANR	904777	Label	case OP_ONCE_NC :	3203:4:103383:103398	904572	9	True				
ANR	904778	Identifier	OP_ONCE_NC		904572	0					
ANR	904779	Label	case OP_BRA :	3204:4:103404:103415	904572	10	True				
ANR	904780	Identifier	OP_BRA		904572	0					
ANR	904781	Label	case OP_CBRA :	3205:4:103421:103433	904572	11	True				
ANR	904782	Identifier	OP_CBRA		904572	0					
ANR	904783	ExpressionStatement	"next_code = code + GET ( code , 1 )"	3206:4:103439:103470	904572	12	True				
ANR	904784	AssignmentExpression	"next_code = code + GET ( code , 1 )"		904572	0		=			
ANR	904785	Identifier	next_code		904572	0					
ANR	904786	AdditiveExpression	"code + GET ( code , 1 )"		904572	1		+			
ANR	904787	Identifier	code		904572	0					
ANR	904788	CallExpression	"GET ( code , 1 )"		904572	1					
ANR	904789	Callee	GET		904572	0					
ANR	904790	Identifier	GET		904572	0					
ANR	904791	ArgumentList	code		904572	1					
ANR	904792	Argument	code		904572	0					
ANR	904793	Identifier	code		904572	0					
ANR	904794	Argument	1		904572	1					
ANR	904795	PrimaryExpression	1		904572	0					
ANR	904796	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3207:4:103476:103503	904572	13	True				
ANR	904797	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		904572	0		+=			
ANR	904798	Identifier	code		904572	0					
ANR	904799	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		904572	1					
ANR	904800	CallExpression	PRIV ( OP_lengths )		904572	0					
ANR	904801	Callee	PRIV		904572	0					
ANR	904802	Identifier	PRIV		904572	0					
ANR	904803	ArgumentList	OP_lengths		904572	1					
ANR	904804	Argument	OP_lengths		904572	0					
ANR	904805	Identifier	OP_lengths		904572	0					
ANR	904806	Identifier	c		904572	1					
ANR	904807	WhileStatement	while ( * next_code == OP_ALT )		904572	14					
ANR	904808	Condition	* next_code == OP_ALT	3209:11:103517:103536	904572	0	True				
ANR	904809	EqualityExpression	* next_code == OP_ALT		904572	0		==			
ANR	904810	UnaryOperationExpression	* next_code		904572	0					
ANR	904811	UnaryOperator	*		904572	0					
ANR	904812	Identifier	next_code		904572	1					
ANR	904813	Identifier	OP_ALT		904572	1					
ANR	904814	CompoundStatement		89:6:2295:2295	904572	1					
ANR	904815	IfStatement	"if ( ! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit ) )"		904572	0					
ANR	904816	Condition	"! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"	3211:10:103557:103619	904572	0	True				
ANR	904817	UnaryOperationExpression	"! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"		904572	0					
ANR	904818	UnaryOperator	!		904572	0					
ANR	904819	CallExpression	"compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"		904572	1					
ANR	904820	Callee	compare_opcodes		904572	0					
ANR	904821	Identifier	compare_opcodes		904572	0					
ANR	904822	ArgumentList	code		904572	1					
ANR	904823	Argument	code		904572	0					
ANR	904824	Identifier	code		904572	0					
ANR	904825	Argument	utf		904572	1					
ANR	904826	Identifier	utf		904572	0					
ANR	904827	Argument	cd		904572	2					
ANR	904828	Identifier	cd		904572	0					
ANR	904829	Argument	base_list		904572	3					
ANR	904830	Identifier	base_list		904572	0					
ANR	904831	Argument	base_end		904572	4					
ANR	904832	Identifier	base_end		904572	0					
ANR	904833	Argument	rec_limit		904572	5					
ANR	904834	Identifier	rec_limit		904572	0					
ANR	904835	ReturnStatement	return FALSE ;	3212:8:103630:103642	904572	1	True				
ANR	904836	Identifier	FALSE		904572	0					
ANR	904837	ExpressionStatement	code = next_code + 1 + LINK_SIZE	3213:6:103650:103682	904572	1	True				
ANR	904838	AssignmentExpression	code = next_code + 1 + LINK_SIZE		904572	0		=			
ANR	904839	Identifier	code		904572	0					
ANR	904840	AdditiveExpression	next_code + 1 + LINK_SIZE		904572	1		+			
ANR	904841	Identifier	next_code		904572	0					
ANR	904842	AdditiveExpression	1 + LINK_SIZE		904572	1		+			
ANR	904843	PrimaryExpression	1		904572	0					
ANR	904844	Identifier	LINK_SIZE		904572	1					
ANR	904845	ExpressionStatement	"next_code += GET ( next_code , 1 )"	3214:6:103690:103720	904572	2	True				
ANR	904846	AssignmentExpression	"next_code += GET ( next_code , 1 )"		904572	0		+=			
ANR	904847	Identifier	next_code		904572	0					
ANR	904848	CallExpression	"GET ( next_code , 1 )"		904572	1					
ANR	904849	Callee	GET		904572	0					
ANR	904850	Identifier	GET		904572	0					
ANR	904851	ArgumentList	next_code		904572	1					
ANR	904852	Argument	next_code		904572	0					
ANR	904853	Identifier	next_code		904572	0					
ANR	904854	Argument	1		904572	1					
ANR	904855	PrimaryExpression	1		904572	0					
ANR	904856	ExpressionStatement	entered_a_group = TRUE	3217:4:103735:103757	904572	15	True				
ANR	904857	AssignmentExpression	entered_a_group = TRUE		904572	0		=			
ANR	904858	Identifier	entered_a_group		904572	0					
ANR	904859	Identifier	TRUE		904572	1					
ANR	904860	ContinueStatement	continue ;	3218:4:103763:103771	904572	16	True				
ANR	904861	Label	case OP_BRAZERO :	3220:4:103778:103793	904572	17	True				
ANR	904862	Identifier	OP_BRAZERO		904572	0					
ANR	904863	Label	case OP_BRAMINZERO :	3221:4:103799:103817	904572	18	True				
ANR	904864	Identifier	OP_BRAMINZERO		904572	0					
ANR	904865	ExpressionStatement	next_code = code + 1	3223:4:103824:103844	904572	19	True				
ANR	904866	AssignmentExpression	next_code = code + 1		904572	0		=			
ANR	904867	Identifier	next_code		904572	0					
ANR	904868	AdditiveExpression	code + 1		904572	1		+			
ANR	904869	Identifier	code		904572	0					
ANR	904870	PrimaryExpression	1		904572	1					
ANR	904871	IfStatement	if ( * next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC )		904572	20					
ANR	904872	Condition	* next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC	3224:8:103854:103959	904572	0	True				
ANR	904873	AndExpression	* next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC		904572	0		&&			
ANR	904874	EqualityExpression	* next_code != OP_BRA		904572	0		!=			
ANR	904875	UnaryOperationExpression	* next_code		904572	0					
ANR	904876	UnaryOperator	*		904572	0					
ANR	904877	Identifier	next_code		904572	1					
ANR	904878	Identifier	OP_BRA		904572	1					
ANR	904879	AndExpression	* next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC		904572	1		&&			
ANR	904880	EqualityExpression	* next_code != OP_CBRA		904572	0		!=			
ANR	904881	UnaryOperationExpression	* next_code		904572	0					
ANR	904882	UnaryOperator	*		904572	0					
ANR	904883	Identifier	next_code		904572	1					
ANR	904884	Identifier	OP_CBRA		904572	1					
ANR	904885	AndExpression	* next_code != OP_ONCE && * next_code != OP_ONCE_NC		904572	1		&&			
ANR	904886	EqualityExpression	* next_code != OP_ONCE		904572	0		!=			
ANR	904887	UnaryOperationExpression	* next_code		904572	0					
ANR	904888	UnaryOperator	*		904572	0					
ANR	904889	Identifier	next_code		904572	1					
ANR	904890	Identifier	OP_ONCE		904572	1					
ANR	904891	EqualityExpression	* next_code != OP_ONCE_NC		904572	1		!=			
ANR	904892	UnaryOperationExpression	* next_code		904572	0					
ANR	904893	UnaryOperator	*		904572	0					
ANR	904894	Identifier	next_code		904572	1					
ANR	904895	Identifier	OP_ONCE_NC		904572	1					
ANR	904896	ReturnStatement	return FALSE ;	3225:62:103962:103974	904572	1	True				
ANR	904897	Identifier	FALSE		904572	0					
ANR	904898	DoStatement	do		904572	21					
ANR	904899	ExpressionStatement	"next_code += GET ( next_code , 1 )"	3227:7:103984:104014	904572	0	True				
ANR	904900	AssignmentExpression	"next_code += GET ( next_code , 1 )"		904572	0		+=			
ANR	904901	Identifier	next_code		904572	0					
ANR	904902	CallExpression	"GET ( next_code , 1 )"		904572	1					
ANR	904903	Callee	GET		904572	0					
ANR	904904	Identifier	GET		904572	0					
ANR	904905	ArgumentList	next_code		904572	1					
ANR	904906	Argument	next_code		904572	0					
ANR	904907	Identifier	next_code		904572	0					
ANR	904908	Argument	1		904572	1					
ANR	904909	PrimaryExpression	1		904572	0					
ANR	904910	Condition	* next_code == OP_ALT	3227:46:104023:104042	904572	1	True				
ANR	904911	EqualityExpression	* next_code == OP_ALT		904572	0		==			
ANR	904912	UnaryOperationExpression	* next_code		904572	0					
ANR	904913	UnaryOperator	*		904572	0					
ANR	904914	Identifier	next_code		904572	1					
ANR	904915	Identifier	OP_ALT		904572	1					
ANR	904916	ExpressionStatement	next_code += 1 + LINK_SIZE	3231:4:104135:104161	904572	22	True				
ANR	904917	AssignmentExpression	next_code += 1 + LINK_SIZE		904572	0		+=			
ANR	904918	Identifier	next_code		904572	0					
ANR	904919	AdditiveExpression	1 + LINK_SIZE		904572	1		+			
ANR	904920	PrimaryExpression	1		904572	0					
ANR	904921	Identifier	LINK_SIZE		904572	1					
ANR	904922	IfStatement	"if ( ! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit ) )"		904572	23					
ANR	904923	Condition	"! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"	3232:8:104171:104238	904572	0	True				
ANR	904924	UnaryOperationExpression	"! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"		904572	0					
ANR	904925	UnaryOperator	!		904572	0					
ANR	904926	CallExpression	"compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"		904572	1					
ANR	904927	Callee	compare_opcodes		904572	0					
ANR	904928	Identifier	compare_opcodes		904572	0					
ANR	904929	ArgumentList	next_code		904572	1					
ANR	904930	Argument	next_code		904572	0					
ANR	904931	Identifier	next_code		904572	0					
ANR	904932	Argument	utf		904572	1					
ANR	904933	Identifier	utf		904572	0					
ANR	904934	Argument	cd		904572	2					
ANR	904935	Identifier	cd		904572	0					
ANR	904936	Argument	base_list		904572	3					
ANR	904937	Identifier	base_list		904572	0					
ANR	904938	Argument	base_end		904572	4					
ANR	904939	Identifier	base_end		904572	0					
ANR	904940	Argument	rec_limit		904572	5					
ANR	904941	Identifier	rec_limit		904572	0					
ANR	904942	ReturnStatement	return FALSE ;	3233:6:104247:104259	904572	1	True				
ANR	904943	Identifier	FALSE		904572	0					
ANR	904944	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3235:4:104266:104293	904572	24	True				
ANR	904945	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		904572	0		+=			
ANR	904946	Identifier	code		904572	0					
ANR	904947	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		904572	1					
ANR	904948	CallExpression	PRIV ( OP_lengths )		904572	0					
ANR	904949	Callee	PRIV		904572	0					
ANR	904950	Identifier	PRIV		904572	0					
ANR	904951	ArgumentList	OP_lengths		904572	1					
ANR	904952	Argument	OP_lengths		904572	0					
ANR	904953	Identifier	OP_lengths		904572	0					
ANR	904954	Identifier	c		904572	1					
ANR	904955	ContinueStatement	continue ;	3236:4:104299:104307	904572	25	True				
ANR	904956	Label	default :	3238:4:104314:104321	904572	26	True				
ANR	904957	Identifier	default		904572	0					
ANR	904958	BreakStatement	break ;	3239:4:104327:104332	904572	27	True				
ANR	904959	ExpressionStatement	"code = get_chr_property_list ( code , utf , cd -> fcc , list )"	3244:2:104407:104461	904572	4	True				
ANR	904960	AssignmentExpression	"code = get_chr_property_list ( code , utf , cd -> fcc , list )"		904572	0		=			
ANR	904961	Identifier	code		904572	0					
ANR	904962	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		904572	1					
ANR	904963	Callee	get_chr_property_list		904572	0					
ANR	904964	Identifier	get_chr_property_list		904572	0					
ANR	904965	ArgumentList	code		904572	1					
ANR	904966	Argument	code		904572	0					
ANR	904967	Identifier	code		904572	0					
ANR	904968	Argument	utf		904572	1					
ANR	904969	Identifier	utf		904572	0					
ANR	904970	Argument	cd -> fcc		904572	2					
ANR	904971	PtrMemberAccess	cd -> fcc		904572	0					
ANR	904972	Identifier	cd		904572	0					
ANR	904973	Identifier	fcc		904572	1					
ANR	904974	Argument	list		904572	3					
ANR	904975	Identifier	list		904572	0					
ANR	904976	IfStatement	if ( code == NULL )		904572	5					
ANR	904977	Condition	code == NULL	3245:6:104469:104480	904572	0	True				
ANR	904978	EqualityExpression	code == NULL		904572	0		==			
ANR	904979	Identifier	code		904572	0					
ANR	904980	Identifier	NULL		904572	1					
ANR	904981	ReturnStatement	return FALSE ;	3245:20:104483:104495	904572	1	True				
ANR	904982	Identifier	FALSE		904572	0					
ANR	904983	ElseStatement	else		904572	0					
ANR	904984	CompoundStatement		243:4:6159:6186	904572	0					
ANR	904985	IdentifierDeclStatement	"pcre_uint32 leftop , rightop ;"	3364:4:107409:107436	904572	0	True				
ANR	904986	IdentifierDecl	leftop		904572	0					
ANR	904987	IdentifierDeclType	pcre_uint32		904572	0					
ANR	904988	Identifier	leftop		904572	1					
ANR	904989	IdentifierDecl	rightop		904572	1					
ANR	904990	IdentifierDeclType	pcre_uint32		904572	0					
ANR	904991	Identifier	rightop		904572	1					
ANR	904992	ExpressionStatement	leftop = base_list [ 0 ]	3366:4:107443:107464	904572	1	True				
ANR	904993	AssignmentExpression	leftop = base_list [ 0 ]		904572	0		=			
ANR	904994	Identifier	leftop		904572	0					
ANR	904995	ArrayIndexing	base_list [ 0 ]		904572	1					
ANR	904996	Identifier	base_list		904572	0					
ANR	904997	PrimaryExpression	0		904572	1					
ANR	904998	ExpressionStatement	rightop = list [ 0 ]	3367:4:107470:107487	904572	2	True				
ANR	904999	AssignmentExpression	rightop = list [ 0 ]		904572	0		=			
ANR	905000	Identifier	rightop		904572	0					
ANR	905001	ArrayIndexing	list [ 0 ]		904572	1					
ANR	905002	Identifier	list		904572	0					
ANR	905003	PrimaryExpression	0		904572	1					
ANR	905004	ExpressionStatement	accepted = FALSE	3370:4:107513:107529	904572	3	True				
ANR	905005	AssignmentExpression	accepted = FALSE		904572	0		=			
ANR	905006	Identifier	accepted		904572	0					
ANR	905007	Identifier	FALSE		904572	1					
ANR	905008	IfStatement	if ( leftop == OP_PROP || leftop == OP_NOTPROP )		904572	4					
ANR	905009	Condition	leftop == OP_PROP || leftop == OP_NOTPROP	3371:8:107577:107617	904572	0	True				
ANR	905010	OrExpression	leftop == OP_PROP || leftop == OP_NOTPROP		904572	0		||			
ANR	905011	EqualityExpression	leftop == OP_PROP		904572	0		==			
ANR	905012	Identifier	leftop		904572	0					
ANR	905013	Identifier	OP_PROP		904572	1					
ANR	905014	EqualityExpression	leftop == OP_NOTPROP		904572	1		==			
ANR	905015	Identifier	leftop		904572	0					
ANR	905016	Identifier	OP_NOTPROP		904572	1					
ANR	905017	CompoundStatement		251:6:6376:6376	904572	1					
ANR	905018	IfStatement	if ( rightop == OP_EOD )		904572	0					
ANR	905019	Condition	rightop == OP_EOD	3373:10:107638:107654	904572	0	True				
ANR	905020	EqualityExpression	rightop == OP_EOD		904572	0		==			
ANR	905021	Identifier	rightop		904572	0					
ANR	905022	Identifier	OP_EOD		904572	1					
ANR	905023	ExpressionStatement	accepted = TRUE	3374:8:107665:107680	904572	1	True				
ANR	905024	AssignmentExpression	accepted = TRUE		904572	0		=			
ANR	905025	Identifier	accepted		904572	0					
ANR	905026	Identifier	TRUE		904572	1					
ANR	905027	ElseStatement	else		904572	0					
ANR	905028	IfStatement	if ( rightop == OP_PROP || rightop == OP_NOTPROP )		904572	0					
ANR	905029	Condition	rightop == OP_PROP || rightop == OP_NOTPROP	3375:15:107697:107739	904572	0	True				
ANR	905030	OrExpression	rightop == OP_PROP || rightop == OP_NOTPROP		904572	0		||			
ANR	905031	EqualityExpression	rightop == OP_PROP		904572	0		==			
ANR	905032	Identifier	rightop		904572	0					
ANR	905033	Identifier	OP_PROP		904572	1					
ANR	905034	EqualityExpression	rightop == OP_NOTPROP		904572	1		==			
ANR	905035	Identifier	rightop		904572	0					
ANR	905036	Identifier	OP_NOTPROP		904572	1					
ANR	905037	CompoundStatement		261:8:6678:6712	904572	1					
ANR	905038	IdentifierDeclStatement	int n ;	3377:8:107760:107765	904572	0	True				
ANR	905039	IdentifierDecl	n		904572	0					
ANR	905040	IdentifierDeclType	int		904572	0					
ANR	905041	Identifier	n		904572	1					
ANR	905042	IdentifierDeclStatement	const pcre_uint8 * p ;	3378:8:107775:107794	904572	1	True				
ANR	905043	IdentifierDecl	* p		904572	0					
ANR	905044	IdentifierDeclType	const pcre_uint8 *		904572	0					
ANR	905045	Identifier	p		904572	1					
ANR	905046	IdentifierDeclStatement	BOOL same = leftop == rightop ;	3379:8:107804:107833	904572	2	True				
ANR	905047	IdentifierDecl	same = leftop == rightop		904572	0					
ANR	905048	IdentifierDeclType	BOOL		904572	0					
ANR	905049	Identifier	same		904572	1					
ANR	905050	AssignmentExpression	same = leftop == rightop		904572	2		=			
ANR	905051	Identifier	same		904572	0					
ANR	905052	EqualityExpression	leftop == rightop		904572	1		==			
ANR	905053	Identifier	leftop		904572	0					
ANR	905054	Identifier	rightop		904572	1					
ANR	905055	IdentifierDeclStatement	BOOL lisprop = leftop == OP_PROP ;	3380:8:107843:107875	904572	3	True				
ANR	905056	IdentifierDecl	lisprop = leftop == OP_PROP		904572	0					
ANR	905057	IdentifierDeclType	BOOL		904572	0					
ANR	905058	Identifier	lisprop		904572	1					
ANR	905059	AssignmentExpression	lisprop = leftop == OP_PROP		904572	2		=			
ANR	905060	Identifier	lisprop		904572	0					
ANR	905061	EqualityExpression	leftop == OP_PROP		904572	1		==			
ANR	905062	Identifier	leftop		904572	0					
ANR	905063	Identifier	OP_PROP		904572	1					
ANR	905064	IdentifierDeclStatement	BOOL risprop = rightop == OP_PROP ;	3381:8:107885:107918	904572	4	True				
ANR	905065	IdentifierDecl	risprop = rightop == OP_PROP		904572	0					
ANR	905066	IdentifierDeclType	BOOL		904572	0					
ANR	905067	Identifier	risprop		904572	1					
ANR	905068	AssignmentExpression	risprop = rightop == OP_PROP		904572	2		=			
ANR	905069	Identifier	risprop		904572	0					
ANR	905070	EqualityExpression	rightop == OP_PROP		904572	1		==			
ANR	905071	Identifier	rightop		904572	0					
ANR	905072	Identifier	OP_PROP		904572	1					
ANR	905073	IdentifierDeclStatement	BOOL bothprop = lisprop && risprop ;	3382:8:107928:107962	904572	5	True				
ANR	905074	IdentifierDecl	bothprop = lisprop && risprop		904572	0					
ANR	905075	IdentifierDeclType	BOOL		904572	0					
ANR	905076	Identifier	bothprop		904572	1					
ANR	905077	AssignmentExpression	bothprop = lisprop && risprop		904572	2		=			
ANR	905078	Identifier	bothprop		904572	0					
ANR	905079	AndExpression	lisprop && risprop		904572	1		&&			
ANR	905080	Identifier	lisprop		904572	0					
ANR	905081	Identifier	risprop		904572	1					
ANR	905082	ExpressionStatement	n = propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]	3393:8:108389:108427	904572	6	True				
ANR	905083	AssignmentExpression	n = propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]		904572	0		=			
ANR	905084	Identifier	n		904572	0					
ANR	905085	ArrayIndexing	propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]		904572	1					
ANR	905086	ArrayIndexing	propposstab [ base_list [ 2 ] ]		904572	0					
ANR	905087	Identifier	propposstab		904572	0					
ANR	905088	ArrayIndexing	base_list [ 2 ]		904572	1					
ANR	905089	Identifier	base_list		904572	0					
ANR	905090	PrimaryExpression	2		904572	1					
ANR	905091	ArrayIndexing	list [ 2 ]		904572	1					
ANR	905092	Identifier	list		904572	0					
ANR	905093	PrimaryExpression	2		904572	1					
ANR	905094	SwitchStatement	switch ( n )		904572	7					
ANR	905095	Condition	n	3394:15:108444:108444	904572	0	True				
ANR	905096	Identifier	n		904572	0					
ANR	905097	CompoundStatement		274:10:7207:7207	904572	1					
ANR	905098	Label	case 0 :	3396:10:108469:108475	904572	0	True				
ANR	905099	BreakStatement	break ;	3396:18:108477:108482	904572	1	True				
ANR	905100	Label	case 1 :	3397:10:108494:108500	904572	2	True				
ANR	905101	ExpressionStatement	accepted = bothprop	3397:18:108502:108521	904572	3	True				
ANR	905102	AssignmentExpression	accepted = bothprop		904572	0		=			
ANR	905103	Identifier	accepted		904572	0					
ANR	905104	Identifier	bothprop		904572	1					
ANR	905105	BreakStatement	break ;	3397:39:108523:108528	904572	4	True				
ANR	905106	Label	case 2 :	3398:10:108540:108546	904572	5	True				
ANR	905107	ExpressionStatement	accepted = ( base_list [ 3 ] == list [ 3 ] ) != same	3398:18:108548:108592	904572	6	True				
ANR	905108	AssignmentExpression	accepted = ( base_list [ 3 ] == list [ 3 ] ) != same		904572	0		=			
ANR	905109	Identifier	accepted		904572	0					
ANR	905110	EqualityExpression	( base_list [ 3 ] == list [ 3 ] ) != same		904572	1		!=			
ANR	905111	EqualityExpression	base_list [ 3 ] == list [ 3 ]		904572	0		==			
ANR	905112	ArrayIndexing	base_list [ 3 ]		904572	0					
ANR	905113	Identifier	base_list		904572	0					
ANR	905114	PrimaryExpression	3		904572	1					
ANR	905115	ArrayIndexing	list [ 3 ]		904572	1					
ANR	905116	Identifier	list		904572	0					
ANR	905117	PrimaryExpression	3		904572	1					
ANR	905118	Identifier	same		904572	1					
ANR	905119	BreakStatement	break ;	3398:64:108594:108599	904572	7	True				
ANR	905120	Label	case 3 :	3399:10:108611:108617	904572	8	True				
ANR	905121	ExpressionStatement	accepted = ! same	3399:18:108619:108635	904572	9	True				
ANR	905122	AssignmentExpression	accepted = ! same		904572	0		=			
ANR	905123	Identifier	accepted		904572	0					
ANR	905124	UnaryOperationExpression	! same		904572	1					
ANR	905125	UnaryOperator	!		904572	0					
ANR	905126	Identifier	same		904572	1					
ANR	905127	BreakStatement	break ;	3399:36:108637:108642	904572	10	True				
ANR	905128	Label	case 4 :	3401:10:108655:108661	904572	11	True				
ANR	905129	ExpressionStatement	accepted = risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same	3402:10:108729:108792	904572	12	True				
ANR	905130	AssignmentExpression	accepted = risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		904572	0		=			
ANR	905131	Identifier	accepted		904572	0					
ANR	905132	AndExpression	risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		904572	1		&&			
ANR	905133	Identifier	risprop		904572	0					
ANR	905134	EqualityExpression	catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		904572	1		==			
ANR	905135	ArrayIndexing	catposstab [ base_list [ 3 ] ] [ list [ 3 ] ]		904572	0					
ANR	905136	ArrayIndexing	catposstab [ base_list [ 3 ] ]		904572	0					
ANR	905137	Identifier	catposstab		904572	0					
ANR	905138	ArrayIndexing	base_list [ 3 ]		904572	1					
ANR	905139	Identifier	base_list		904572	0					
ANR	905140	PrimaryExpression	3		904572	1					
ANR	905141	ArrayIndexing	list [ 3 ]		904572	1					
ANR	905142	Identifier	list		904572	0					
ANR	905143	PrimaryExpression	3		904572	1					
ANR	905144	Identifier	same		904572	1					
ANR	905145	BreakStatement	break ;	3403:10:108804:108809	904572	13	True				
ANR	905146	Label	case 5 :	3405:10:108822:108828	904572	14	True				
ANR	905147	ExpressionStatement	accepted = lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same	3406:10:108896:108959	904572	15	True				
ANR	905148	AssignmentExpression	accepted = lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		904572	0		=			
ANR	905149	Identifier	accepted		904572	0					
ANR	905150	AndExpression	lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		904572	1		&&			
ANR	905151	Identifier	lisprop		904572	0					
ANR	905152	EqualityExpression	catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		904572	1		==			
ANR	905153	ArrayIndexing	catposstab [ list [ 3 ] ] [ base_list [ 3 ] ]		904572	0					
ANR	905154	ArrayIndexing	catposstab [ list [ 3 ] ]		904572	0					
ANR	905155	Identifier	catposstab		904572	0					
ANR	905156	ArrayIndexing	list [ 3 ]		904572	1					
ANR	905157	Identifier	list		904572	0					
ANR	905158	PrimaryExpression	3		904572	1					
ANR	905159	ArrayIndexing	base_list [ 3 ]		904572	1					
ANR	905160	Identifier	base_list		904572	0					
ANR	905161	PrimaryExpression	3		904572	1					
ANR	905162	Identifier	same		904572	1					
ANR	905163	BreakStatement	break ;	3407:10:108971:108976	904572	16	True				
ANR	905164	Label	case 6 :	3428:10:110158:110164	904572	17	True				
ANR	905165	Label	case 7 :	3429:10:110223:110229	904572	18	True				
ANR	905166	Label	case 8 :	3430:10:110285:110291	904572	19	True				
ANR	905167	ExpressionStatement	p = posspropstab [ n - 6 ]	3431:10:110346:110367	904572	20	True				
ANR	905168	AssignmentExpression	p = posspropstab [ n - 6 ]		904572	0		=			
ANR	905169	Identifier	p		904572	0					
ANR	905170	ArrayIndexing	posspropstab [ n - 6 ]		904572	1					
ANR	905171	Identifier	posspropstab		904572	0					
ANR	905172	AdditiveExpression	n - 6		904572	1		-			
ANR	905173	Identifier	n		904572	0					
ANR	905174	PrimaryExpression	6		904572	1					
ANR	905175	ExpressionStatement	accepted = risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )	3432:10:110379:110518	904572	21	True				
ANR	905176	AssignmentExpression	accepted = risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		904572	0		=			
ANR	905177	Identifier	accepted		904572	0					
ANR	905178	AndExpression	risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		904572	1		&&			
ANR	905179	Identifier	risprop		904572	0					
ANR	905180	EqualityExpression	lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		904572	1		==			
ANR	905181	Identifier	lisprop		904572	0					
ANR	905182	AndExpression	list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop )		904572	1		&&			
ANR	905183	EqualityExpression	list [ 3 ] != p [ 0 ]		904572	0		!=			
ANR	905184	ArrayIndexing	list [ 3 ]		904572	0					
ANR	905185	Identifier	list		904572	0					
ANR	905186	PrimaryExpression	3		904572	1					
ANR	905187	ArrayIndexing	p [ 0 ]		904572	1					
ANR	905188	Identifier	p		904572	0					
ANR	905189	PrimaryExpression	0		904572	1					
ANR	905190	AndExpression	list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop )		904572	1		&&			
ANR	905191	EqualityExpression	list [ 3 ] != p [ 1 ]		904572	0		!=			
ANR	905192	ArrayIndexing	list [ 3 ]		904572	0					
ANR	905193	Identifier	list		904572	0					
ANR	905194	PrimaryExpression	3		904572	1					
ANR	905195	ArrayIndexing	p [ 1 ]		904572	1					
ANR	905196	Identifier	p		904572	0					
ANR	905197	PrimaryExpression	1		904572	1					
ANR	905198	OrExpression	list [ 3 ] != p [ 2 ] || ! lisprop		904572	1		||			
ANR	905199	EqualityExpression	list [ 3 ] != p [ 2 ]		904572	0		!=			
ANR	905200	ArrayIndexing	list [ 3 ]		904572	0					
ANR	905201	Identifier	list		904572	0					
ANR	905202	PrimaryExpression	3		904572	1					
ANR	905203	ArrayIndexing	p [ 2 ]		904572	1					
ANR	905204	Identifier	p		904572	0					
ANR	905205	PrimaryExpression	2		904572	1					
ANR	905206	UnaryOperationExpression	! lisprop		904572	1					
ANR	905207	UnaryOperator	!		904572	0					
ANR	905208	Identifier	lisprop		904572	1					
ANR	905209	BreakStatement	break ;	3436:10:110530:110535	904572	22	True				
ANR	905210	Label	case 9 :	3438:10:110548:110554	904572	23	True				
ANR	905211	Label	case 10 :	3439:10:110614:110621	904572	24	True				
ANR	905212	Label	case 11 :	3440:10:110677:110684	904572	25	True				
ANR	905213	ExpressionStatement	p = posspropstab [ n - 9 ]	3441:10:110739:110760	904572	26	True				
ANR	905214	AssignmentExpression	p = posspropstab [ n - 9 ]		904572	0		=			
ANR	905215	Identifier	p		904572	0					
ANR	905216	ArrayIndexing	posspropstab [ n - 9 ]		904572	1					
ANR	905217	Identifier	posspropstab		904572	0					
ANR	905218	AdditiveExpression	n - 9		904572	1		-			
ANR	905219	Identifier	n		904572	0					
ANR	905220	PrimaryExpression	9		904572	1					
ANR	905221	ExpressionStatement	accepted = lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )	3442:10:110772:110926	904572	27	True				
ANR	905222	AssignmentExpression	accepted = lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		904572	0		=			
ANR	905223	Identifier	accepted		904572	0					
ANR	905224	AndExpression	lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		904572	1		&&			
ANR	905225	Identifier	lisprop		904572	0					
ANR	905226	EqualityExpression	risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		904572	1		==			
ANR	905227	Identifier	risprop		904572	0					
ANR	905228	AndExpression	base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop )		904572	1		&&			
ANR	905229	EqualityExpression	base_list [ 3 ] != p [ 0 ]		904572	0		!=			
ANR	905230	ArrayIndexing	base_list [ 3 ]		904572	0					
ANR	905231	Identifier	base_list		904572	0					
ANR	905232	PrimaryExpression	3		904572	1					
ANR	905233	ArrayIndexing	p [ 0 ]		904572	1					
ANR	905234	Identifier	p		904572	0					
ANR	905235	PrimaryExpression	0		904572	1					
ANR	905236	AndExpression	base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop )		904572	1		&&			
ANR	905237	EqualityExpression	base_list [ 3 ] != p [ 1 ]		904572	0		!=			
ANR	905238	ArrayIndexing	base_list [ 3 ]		904572	0					
ANR	905239	Identifier	base_list		904572	0					
ANR	905240	PrimaryExpression	3		904572	1					
ANR	905241	ArrayIndexing	p [ 1 ]		904572	1					
ANR	905242	Identifier	p		904572	0					
ANR	905243	PrimaryExpression	1		904572	1					
ANR	905244	OrExpression	base_list [ 3 ] != p [ 2 ] || ! risprop		904572	1		||			
ANR	905245	EqualityExpression	base_list [ 3 ] != p [ 2 ]		904572	0		!=			
ANR	905246	ArrayIndexing	base_list [ 3 ]		904572	0					
ANR	905247	Identifier	base_list		904572	0					
ANR	905248	PrimaryExpression	3		904572	1					
ANR	905249	ArrayIndexing	p [ 2 ]		904572	1					
ANR	905250	Identifier	p		904572	0					
ANR	905251	PrimaryExpression	2		904572	1					
ANR	905252	UnaryOperationExpression	! risprop		904572	1					
ANR	905253	UnaryOperator	!		904572	0					
ANR	905254	Identifier	risprop		904572	1					
ANR	905255	BreakStatement	break ;	3446:10:110938:110943	904572	28	True				
ANR	905256	Label	case 12 :	3448:10:110956:110963	904572	29	True				
ANR	905257	Label	case 13 :	3449:10:111025:111032	904572	30	True				
ANR	905258	Label	case 14 :	3450:10:111091:111098	904572	31	True				
ANR	905259	ExpressionStatement	p = posspropstab [ n - 12 ]	3451:10:111156:111178	904572	32	True				
ANR	905260	AssignmentExpression	p = posspropstab [ n - 12 ]		904572	0		=			
ANR	905261	Identifier	p		904572	0					
ANR	905262	ArrayIndexing	posspropstab [ n - 12 ]		904572	1					
ANR	905263	Identifier	posspropstab		904572	0					
ANR	905264	AdditiveExpression	n - 12		904572	1		-			
ANR	905265	Identifier	n		904572	0					
ANR	905266	PrimaryExpression	12		904572	1					
ANR	905267	ExpressionStatement	accepted = risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )	3452:10:111190:111349	904572	33	True				
ANR	905268	AssignmentExpression	accepted = risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		904572	0		=			
ANR	905269	Identifier	accepted		904572	0					
ANR	905270	AndExpression	risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		904572	1		&&			
ANR	905271	Identifier	risprop		904572	0					
ANR	905272	EqualityExpression	lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		904572	1		==			
ANR	905273	Identifier	lisprop		904572	0					
ANR	905274	AndExpression	catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop )		904572	1		&&			
ANR	905275	ArrayIndexing	catposstab [ p [ 0 ] ] [ list [ 3 ] ]		904572	0					
ANR	905276	ArrayIndexing	catposstab [ p [ 0 ] ]		904572	0					
ANR	905277	Identifier	catposstab		904572	0					
ANR	905278	ArrayIndexing	p [ 0 ]		904572	1					
ANR	905279	Identifier	p		904572	0					
ANR	905280	PrimaryExpression	0		904572	1					
ANR	905281	ArrayIndexing	list [ 3 ]		904572	1					
ANR	905282	Identifier	list		904572	0					
ANR	905283	PrimaryExpression	3		904572	1					
ANR	905284	AndExpression	catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop )		904572	1		&&			
ANR	905285	ArrayIndexing	catposstab [ p [ 1 ] ] [ list [ 3 ] ]		904572	0					
ANR	905286	ArrayIndexing	catposstab [ p [ 1 ] ]		904572	0					
ANR	905287	Identifier	catposstab		904572	0					
ANR	905288	ArrayIndexing	p [ 1 ]		904572	1					
ANR	905289	Identifier	p		904572	0					
ANR	905290	PrimaryExpression	1		904572	1					
ANR	905291	ArrayIndexing	list [ 3 ]		904572	1					
ANR	905292	Identifier	list		904572	0					
ANR	905293	PrimaryExpression	3		904572	1					
ANR	905294	OrExpression	list [ 3 ] != p [ 3 ] || ! lisprop		904572	1		||			
ANR	905295	EqualityExpression	list [ 3 ] != p [ 3 ]		904572	0		!=			
ANR	905296	ArrayIndexing	list [ 3 ]		904572	0					
ANR	905297	Identifier	list		904572	0					
ANR	905298	PrimaryExpression	3		904572	1					
ANR	905299	ArrayIndexing	p [ 3 ]		904572	1					
ANR	905300	Identifier	p		904572	0					
ANR	905301	PrimaryExpression	3		904572	1					
ANR	905302	UnaryOperationExpression	! lisprop		904572	1					
ANR	905303	UnaryOperator	!		904572	0					
ANR	905304	Identifier	lisprop		904572	1					
ANR	905305	BreakStatement	break ;	3456:10:111361:111366	904572	34	True				
ANR	905306	Label	case 15 :	3458:10:111379:111386	904572	35	True				
ANR	905307	Label	case 16 :	3459:10:111448:111455	904572	36	True				
ANR	905308	Label	case 17 :	3460:10:111514:111521	904572	37	True				
ANR	905309	ExpressionStatement	p = posspropstab [ n - 15 ]	3461:10:111579:111601	904572	38	True				
ANR	905310	AssignmentExpression	p = posspropstab [ n - 15 ]		904572	0		=			
ANR	905311	Identifier	p		904572	0					
ANR	905312	ArrayIndexing	posspropstab [ n - 15 ]		904572	1					
ANR	905313	Identifier	posspropstab		904572	0					
ANR	905314	AdditiveExpression	n - 15		904572	1		-			
ANR	905315	Identifier	n		904572	0					
ANR	905316	PrimaryExpression	15		904572	1					
ANR	905317	ExpressionStatement	accepted = lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )	3462:10:111613:111787	904572	39	True				
ANR	905318	AssignmentExpression	accepted = lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		904572	0		=			
ANR	905319	Identifier	accepted		904572	0					
ANR	905320	AndExpression	lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		904572	1		&&			
ANR	905321	Identifier	lisprop		904572	0					
ANR	905322	EqualityExpression	risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		904572	1		==			
ANR	905323	Identifier	risprop		904572	0					
ANR	905324	AndExpression	catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop )		904572	1		&&			
ANR	905325	ArrayIndexing	catposstab [ p [ 0 ] ] [ base_list [ 3 ] ]		904572	0					
ANR	905326	ArrayIndexing	catposstab [ p [ 0 ] ]		904572	0					
ANR	905327	Identifier	catposstab		904572	0					
ANR	905328	ArrayIndexing	p [ 0 ]		904572	1					
ANR	905329	Identifier	p		904572	0					
ANR	905330	PrimaryExpression	0		904572	1					
ANR	905331	ArrayIndexing	base_list [ 3 ]		904572	1					
ANR	905332	Identifier	base_list		904572	0					
ANR	905333	PrimaryExpression	3		904572	1					
ANR	905334	AndExpression	catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop )		904572	1		&&			
ANR	905335	ArrayIndexing	catposstab [ p [ 1 ] ] [ base_list [ 3 ] ]		904572	0					
ANR	905336	ArrayIndexing	catposstab [ p [ 1 ] ]		904572	0					
ANR	905337	Identifier	catposstab		904572	0					
ANR	905338	ArrayIndexing	p [ 1 ]		904572	1					
ANR	905339	Identifier	p		904572	0					
ANR	905340	PrimaryExpression	1		904572	1					
ANR	905341	ArrayIndexing	base_list [ 3 ]		904572	1					
ANR	905342	Identifier	base_list		904572	0					
ANR	905343	PrimaryExpression	3		904572	1					
ANR	905344	OrExpression	base_list [ 3 ] != p [ 3 ] || ! risprop		904572	1		||			
ANR	905345	EqualityExpression	base_list [ 3 ] != p [ 3 ]		904572	0		!=			
ANR	905346	ArrayIndexing	base_list [ 3 ]		904572	0					
ANR	905347	Identifier	base_list		904572	0					
ANR	905348	PrimaryExpression	3		904572	1					
ANR	905349	ArrayIndexing	p [ 3 ]		904572	1					
ANR	905350	Identifier	p		904572	0					
ANR	905351	PrimaryExpression	3		904572	1					
ANR	905352	UnaryOperationExpression	! risprop		904572	1					
ANR	905353	UnaryOperator	!		904572	0					
ANR	905354	Identifier	risprop		904572	1					
ANR	905355	BreakStatement	break ;	3466:10:111799:111804	904572	40	True				
ANR	905356	ElseStatement	else		904572	0					
ANR	905357	ExpressionStatement	accepted = leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]	3474:4:111877:112107	904572	0	True				
ANR	905358	AssignmentExpression	accepted = leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	0		=			
ANR	905359	Identifier	accepted		904572	0					
ANR	905360	AndExpression	leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	1		&&			
ANR	905361	RelationalExpression	leftop >= FIRST_AUTOTAB_OP		904572	0		>=			
ANR	905362	Identifier	leftop		904572	0					
ANR	905363	Identifier	FIRST_AUTOTAB_OP		904572	1					
ANR	905364	AndExpression	leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	1		&&			
ANR	905365	RelationalExpression	leftop <= LAST_AUTOTAB_LEFT_OP		904572	0		<=			
ANR	905366	Identifier	leftop		904572	0					
ANR	905367	Identifier	LAST_AUTOTAB_LEFT_OP		904572	1					
ANR	905368	AndExpression	rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	1		&&			
ANR	905369	RelationalExpression	rightop >= FIRST_AUTOTAB_OP		904572	0		>=			
ANR	905370	Identifier	rightop		904572	0					
ANR	905371	Identifier	FIRST_AUTOTAB_OP		904572	1					
ANR	905372	AndExpression	rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	1		&&			
ANR	905373	RelationalExpression	rightop <= LAST_AUTOTAB_RIGHT_OP		904572	0		<=			
ANR	905374	Identifier	rightop		904572	0					
ANR	905375	Identifier	LAST_AUTOTAB_RIGHT_OP		904572	1					
ANR	905376	ArrayIndexing	autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		904572	1					
ANR	905377	ArrayIndexing	autoposstab [ leftop - FIRST_AUTOTAB_OP ]		904572	0					
ANR	905378	Identifier	autoposstab		904572	0					
ANR	905379	AdditiveExpression	leftop - FIRST_AUTOTAB_OP		904572	1		-			
ANR	905380	Identifier	leftop		904572	0					
ANR	905381	Identifier	FIRST_AUTOTAB_OP		904572	1					
ANR	905382	AdditiveExpression	rightop - FIRST_AUTOTAB_OP		904572	1		-			
ANR	905383	Identifier	rightop		904572	0					
ANR	905384	Identifier	FIRST_AUTOTAB_OP		904572	1					
ANR	905385	IfStatement	if ( ! accepted )		904572	5					
ANR	905386	Condition	! accepted	3478:8:112118:112126	904572	0	True				
ANR	905387	UnaryOperationExpression	! accepted		904572	0					
ANR	905388	UnaryOperator	!		904572	0					
ANR	905389	Identifier	accepted		904572	1					
ANR	905390	ReturnStatement	return FALSE ;	3478:19:112129:112141	904572	1	True				
ANR	905391	Identifier	FALSE		904572	0					
ANR	905392	IfStatement	if ( list [ 1 ] == 0 )		904572	6					
ANR	905393	Condition	list [ 1 ] == 0	3480:8:112152:112163	904572	0	True				
ANR	905394	EqualityExpression	list [ 1 ] == 0		904572	0		==			
ANR	905395	ArrayIndexing	list [ 1 ]		904572	0					
ANR	905396	Identifier	list		904572	0					
ANR	905397	PrimaryExpression	1		904572	1					
ANR	905398	PrimaryExpression	0		904572	1					
ANR	905399	ReturnStatement	return TRUE ;	3480:22:112166:112177	904572	1	True				
ANR	905400	Identifier	TRUE		904572	0					
ANR	905401	ContinueStatement	continue ;	3482:4:112219:112227	904572	7	True				
ANR	905402	IfStatement	if ( base_list [ 0 ] == OP_CHAR )		904572	6					
ANR	905403	Condition	base_list [ 0 ] == OP_CHAR	3250:6:104672:104694	904572	0	True				
ANR	905404	EqualityExpression	base_list [ 0 ] == OP_CHAR		904572	0		==			
ANR	905405	ArrayIndexing	base_list [ 0 ]		904572	0					
ANR	905406	Identifier	base_list		904572	0					
ANR	905407	PrimaryExpression	0		904572	1					
ANR	905408	Identifier	OP_CHAR		904572	1					
ANR	905409	CompoundStatement		130:4:3451:3451	904572	1					
ANR	905410	ExpressionStatement	chr_ptr = base_list + 2	3252:4:104707:104730	904572	0	True				
ANR	905411	AssignmentExpression	chr_ptr = base_list + 2		904572	0		=			
ANR	905412	Identifier	chr_ptr		904572	0					
ANR	905413	AdditiveExpression	base_list + 2		904572	1		+			
ANR	905414	Identifier	base_list		904572	0					
ANR	905415	PrimaryExpression	2		904572	1					
ANR	905416	ExpressionStatement	list_ptr = list	3253:4:104736:104751	904572	1	True				
ANR	905417	AssignmentExpression	list_ptr = list		904572	0		=			
ANR	905418	Identifier	list_ptr		904572	0					
ANR	905419	Identifier	list		904572	1					
ANR	905420	ElseStatement	else		904572	0					
ANR	905421	IfStatement	if ( list [ 0 ] == OP_CHAR )		904572	0					
ANR	905422	Condition	list [ 0 ] == OP_CHAR	3255:11:104770:104787	904572	0	True				
ANR	905423	EqualityExpression	list [ 0 ] == OP_CHAR		904572	0		==			
ANR	905424	ArrayIndexing	list [ 0 ]		904572	0					
ANR	905425	Identifier	list		904572	0					
ANR	905426	PrimaryExpression	0		904572	1					
ANR	905427	Identifier	OP_CHAR		904572	1					
ANR	905428	CompoundStatement		135:4:3544:3544	904572	1					
ANR	905429	ExpressionStatement	chr_ptr = list + 2	3257:4:104800:104818	904572	0	True				
ANR	905430	AssignmentExpression	chr_ptr = list + 2		904572	0		=			
ANR	905431	Identifier	chr_ptr		904572	0					
ANR	905432	AdditiveExpression	list + 2		904572	1		+			
ANR	905433	Identifier	list		904572	0					
ANR	905434	PrimaryExpression	2		904572	1					
ANR	905435	ExpressionStatement	list_ptr = base_list	3258:4:104824:104844	904572	1	True				
ANR	905436	AssignmentExpression	list_ptr = base_list		904572	0		=			
ANR	905437	Identifier	list_ptr		904572	0					
ANR	905438	Identifier	base_list		904572	1					
ANR	905439	ElseStatement	else		904572	0					
ANR	905440	Statement	if	3263:7:104928:104929	904572	0	True				
ANR	905441	Statement	(	3263:10:104931:104931	904572	7	True				
ANR	905442	Statement	base_list	3263:11:104932:104940	904572	8	True				
ANR	905443	Statement	[	3263:20:104941:104941	904572	9	True				
ANR	905444	Statement	0	3263:21:104942:104942	904572	10	True				
ANR	905445	Statement	]	3263:22:104943:104943	904572	11	True				
ANR	905446	Statement	==	3263:24:104945:104946	904572	12	True				
ANR	905447	Statement	OP_CLASS	3263:27:104948:104955	904572	13	True				
ANR	905448	Statement	||	3263:36:104957:104958	904572	14	True				
ANR	905449	Statement	list	3263:39:104960:104963	904572	15	True				
ANR	905450	Statement	[	3263:43:104964:104964	904572	16	True				
ANR	905451	Statement	0	3263:44:104965:104965	904572	17	True				
ANR	905452	Statement	]	3263:45:104966:104966	904572	18	True				
ANR	905453	Statement	==	3263:47:104968:104969	904572	19	True				
ANR	905454	Statement	OP_CLASS	3263:50:104971:104978	904572	20	True				
ANR	905455	Statement	||	3266:6:105080:105081	904572	21	True				
ANR	905456	Statement	(	3266:9:105083:105083	904572	22	True				
ANR	905457	Statement	!	3266:10:105084:105084	904572	23	True				
ANR	905458	Statement	utf	3266:11:105085:105087	904572	24	True				
ANR	905459	Statement	&&	3266:15:105089:105090	904572	25	True				
ANR	905460	Statement	(	3266:18:105092:105092	904572	26	True				
ANR	905461	Statement	base_list	3266:19:105093:105101	904572	27	True				
ANR	905462	Statement	[	3266:28:105102:105102	904572	28	True				
ANR	905463	Statement	0	3266:29:105103:105103	904572	29	True				
ANR	905464	Statement	]	3266:30:105104:105104	904572	30	True				
ANR	905465	Statement	==	3266:32:105106:105107	904572	31	True				
ANR	905466	Statement	OP_NCLASS	3266:35:105109:105117	904572	32	True				
ANR	905467	Statement	||	3266:45:105119:105120	904572	33	True				
ANR	905468	Statement	list	3266:48:105122:105125	904572	34	True				
ANR	905469	Statement	[	3266:52:105126:105126	904572	35	True				
ANR	905470	Statement	0	3266:53:105127:105127	904572	36	True				
ANR	905471	Statement	]	3266:54:105128:105128	904572	37	True				
ANR	905472	Statement	==	3266:56:105130:105131	904572	38	True				
ANR	905473	Statement	OP_NCLASS	3266:59:105133:105141	904572	39	True				
ANR	905474	Statement	)	3266:68:105142:105142	904572	40	True				
ANR	905475	Statement	)	3266:69:105143:105143	904572	41	True				
ANR	905476	Statement	)	3268:6:105158:105158	904572	42	True				
ANR	905477	CompoundStatement		148:4:3914:3914	904572	43					
ANR	905478	IfStatement	if ( base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS ) )		904572	0					
ANR	905479	Condition	base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS )	3271:8:105195:105257	904572	0	True				
ANR	905480	OrExpression	base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS )		904572	0		||			
ANR	905481	EqualityExpression	base_list [ 0 ] == OP_CLASS		904572	0		==			
ANR	905482	ArrayIndexing	base_list [ 0 ]		904572	0					
ANR	905483	Identifier	base_list		904572	0					
ANR	905484	PrimaryExpression	0		904572	1					
ANR	905485	Identifier	OP_CLASS		904572	1					
ANR	905486	AndExpression	! utf && base_list [ 0 ] == OP_NCLASS		904572	1		&&			
ANR	905487	UnaryOperationExpression	! utf		904572	0					
ANR	905488	UnaryOperator	!		904572	0					
ANR	905489	Identifier	utf		904572	1					
ANR	905490	EqualityExpression	base_list [ 0 ] == OP_NCLASS		904572	1		==			
ANR	905491	ArrayIndexing	base_list [ 0 ]		904572	0					
ANR	905492	Identifier	base_list		904572	0					
ANR	905493	PrimaryExpression	0		904572	1					
ANR	905494	Identifier	OP_NCLASS		904572	1					
ANR	905495	CompoundStatement		154:6:4063:4063	904572	1					
ANR	905496	ExpressionStatement	set1 = ( pcre_uint8 * ) ( base_end - base_list [ 2 ] )	3276:6:105321:105367	904572	0	True				
ANR	905497	AssignmentExpression	set1 = ( pcre_uint8 * ) ( base_end - base_list [ 2 ] )		904572	0		=			
ANR	905498	Identifier	set1		904572	0					
ANR	905499	CastExpression	( pcre_uint8 * ) ( base_end - base_list [ 2 ] )		904572	1					
ANR	905500	CastTarget	pcre_uint8 *		904572	0					
ANR	905501	AdditiveExpression	base_end - base_list [ 2 ]		904572	1		-			
ANR	905502	Identifier	base_end		904572	0					
ANR	905503	ArrayIndexing	base_list [ 2 ]		904572	1					
ANR	905504	Identifier	base_list		904572	0					
ANR	905505	PrimaryExpression	2		904572	1					
ANR	905506	ExpressionStatement	list_ptr = list	3277:6:105375:105390	904572	1	True				
ANR	905507	AssignmentExpression	list_ptr = list		904572	0		=			
ANR	905508	Identifier	list_ptr		904572	0					
ANR	905509	Identifier	list		904572	1					
ANR	905510	ElseStatement	else		904572	0					
ANR	905511	CompoundStatement		159:6:4165:4165	904572	0					
ANR	905512	ExpressionStatement	set1 = ( pcre_uint8 * ) ( code - list [ 2 ] )	3281:6:105423:105460	904572	0	True				
ANR	905513	AssignmentExpression	set1 = ( pcre_uint8 * ) ( code - list [ 2 ] )		904572	0		=			
ANR	905514	Identifier	set1		904572	0					
ANR	905515	CastExpression	( pcre_uint8 * ) ( code - list [ 2 ] )		904572	1					
ANR	905516	CastTarget	pcre_uint8 *		904572	0					
ANR	905517	AdditiveExpression	code - list [ 2 ]		904572	1		-			
ANR	905518	Identifier	code		904572	0					
ANR	905519	ArrayIndexing	list [ 2 ]		904572	1					
ANR	905520	Identifier	list		904572	0					
ANR	905521	PrimaryExpression	2		904572	1					
ANR	905522	ExpressionStatement	list_ptr = base_list	3282:6:105468:105488	904572	1	True				
ANR	905523	AssignmentExpression	list_ptr = base_list		904572	0		=			
ANR	905524	Identifier	list_ptr		904572	0					
ANR	905525	Identifier	base_list		904572	1					
ANR	905526	ExpressionStatement	invert_bits = FALSE	3285:4:105503:105522	904572	1	True				
ANR	905527	AssignmentExpression	invert_bits = FALSE		904572	0		=			
ANR	905528	Identifier	invert_bits		904572	0					
ANR	905529	Identifier	FALSE		904572	1					
ANR	905530	SwitchStatement	switch ( list_ptr [ 0 ] )		904572	2					
ANR	905531	Condition	list_ptr [ 0 ]	3286:11:105535:105545	904572	0	True				
ANR	905532	ArrayIndexing	list_ptr [ 0 ]		904572	0					
ANR	905533	Identifier	list_ptr		904572	0					
ANR	905534	PrimaryExpression	0		904572	1					
ANR	905535	CompoundStatement		166:6:4304:4304	904572	1					
ANR	905536	Label	case OP_CLASS :	3288:6:105562:105575	904572	0	True				
ANR	905537	Identifier	OP_CLASS		904572	0					
ANR	905538	Label	case OP_NCLASS :	3289:6:105583:105597	904572	1	True				
ANR	905539	Identifier	OP_NCLASS		904572	0					
ANR	905540	ExpressionStatement	set2 = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )	3290:6:105605:105687	904572	2	True				
ANR	905541	AssignmentExpression	set2 = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		904572	0		=			
ANR	905542	Identifier	set2		904572	0					
ANR	905543	CastExpression	( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		904572	1					
ANR	905544	CastTarget	pcre_uint8 *		904572	0					
ANR	905545	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ]		904572	1		-			
ANR	905546	ConditionalExpression	list_ptr == list ? code : base_end		904572	0					
ANR	905547	Condition	list_ptr == list		904572	0					
ANR	905548	EqualityExpression	list_ptr == list		904572	0		==			
ANR	905549	Identifier	list_ptr		904572	0					
ANR	905550	Identifier	list		904572	1					
ANR	905551	Identifier	code		904572	1					
ANR	905552	Identifier	base_end		904572	2					
ANR	905553	ArrayIndexing	list_ptr [ 2 ]		904572	1					
ANR	905554	Identifier	list_ptr		904572	0					
ANR	905555	PrimaryExpression	2		904572	1					
ANR	905556	BreakStatement	break ;	3292:6:105695:105700	904572	3	True				
ANR	905557	Label	case OP_XCLASS :	3295:6:105759:105773	904572	4	True				
ANR	905558	Identifier	OP_XCLASS		904572	0					
ANR	905559	ExpressionStatement	xclass_flags = ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE	3296:6:105781:105858	904572	5	True				
ANR	905560	AssignmentExpression	xclass_flags = ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		904572	0		=			
ANR	905561	Identifier	xclass_flags		904572	0					
ANR	905562	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		904572	1		-			
ANR	905563	ConditionalExpression	list_ptr == list ? code : base_end		904572	0					
ANR	905564	Condition	list_ptr == list		904572	0					
ANR	905565	EqualityExpression	list_ptr == list		904572	0		==			
ANR	905566	Identifier	list_ptr		904572	0					
ANR	905567	Identifier	list		904572	1					
ANR	905568	Identifier	code		904572	1					
ANR	905569	Identifier	base_end		904572	2					
ANR	905570	AdditiveExpression	list_ptr [ 2 ] + LINK_SIZE		904572	1		+			
ANR	905571	ArrayIndexing	list_ptr [ 2 ]		904572	0					
ANR	905572	Identifier	list_ptr		904572	0					
ANR	905573	PrimaryExpression	2		904572	1					
ANR	905574	Identifier	LINK_SIZE		904572	1					
ANR	905575	IfStatement	if ( ( * xclass_flags & XCL_HASPROP ) != 0 )		904572	6					
ANR	905576	Condition	( * xclass_flags & XCL_HASPROP ) != 0	3297:10:105870:105903	904572	0	True				
ANR	905577	EqualityExpression	( * xclass_flags & XCL_HASPROP ) != 0		904572	0		!=			
ANR	905578	BitAndExpression	* xclass_flags & XCL_HASPROP		904572	0		&			
ANR	905579	UnaryOperationExpression	* xclass_flags		904572	0					
ANR	905580	UnaryOperator	*		904572	0					
ANR	905581	Identifier	xclass_flags		904572	1					
ANR	905582	Identifier	XCL_HASPROP		904572	1					
ANR	905583	PrimaryExpression	0		904572	1					
ANR	905584	ReturnStatement	return FALSE ;	3297:46:105906:105918	904572	1	True				
ANR	905585	Identifier	FALSE		904572	0					
ANR	905586	IfStatement	if ( ( * xclass_flags & XCL_MAP ) == 0 )		904572	7					
ANR	905587	Condition	( * xclass_flags & XCL_MAP ) == 0	3298:10:105930:105959	904572	0	True				
ANR	905588	EqualityExpression	( * xclass_flags & XCL_MAP ) == 0		904572	0		==			
ANR	905589	BitAndExpression	* xclass_flags & XCL_MAP		904572	0		&			
ANR	905590	UnaryOperationExpression	* xclass_flags		904572	0					
ANR	905591	UnaryOperator	*		904572	0					
ANR	905592	Identifier	xclass_flags		904572	1					
ANR	905593	Identifier	XCL_MAP		904572	1					
ANR	905594	PrimaryExpression	0		904572	1					
ANR	905595	CompoundStatement		178:8:4720:4720	904572	1					
ANR	905596	IfStatement	if ( list [ 1 ] == 0 )		904572	0					
ANR	905597	Condition	list [ 1 ] == 0	3301:12:106036:106047	904572	0	True				
ANR	905598	EqualityExpression	list [ 1 ] == 0		904572	0		==			
ANR	905599	ArrayIndexing	list [ 1 ]		904572	0					
ANR	905600	Identifier	list		904572	0					
ANR	905601	PrimaryExpression	1		904572	1					
ANR	905602	PrimaryExpression	0		904572	1					
ANR	905603	ReturnStatement	return TRUE ;	3301:26:106050:106061	904572	1	True				
ANR	905604	Identifier	TRUE		904572	0					
ANR	905605	ContinueStatement	continue ;	3303:8:106111:106119	904572	1	True				
ANR	905606	ExpressionStatement	set2 = ( pcre_uint8 * ) ( xclass_flags + 1 )	3305:6:106137:106176	904572	8	True				
ANR	905607	AssignmentExpression	set2 = ( pcre_uint8 * ) ( xclass_flags + 1 )		904572	0		=			
ANR	905608	Identifier	set2		904572	0					
ANR	905609	CastExpression	( pcre_uint8 * ) ( xclass_flags + 1 )		904572	1					
ANR	905610	CastTarget	pcre_uint8 *		904572	0					
ANR	905611	AdditiveExpression	xclass_flags + 1		904572	1		+			
ANR	905612	Identifier	xclass_flags		904572	0					
ANR	905613	PrimaryExpression	1		904572	1					
ANR	905614	BreakStatement	break ;	3306:6:106184:106189	904572	9	True				
ANR	905615	Label	case OP_NOT_DIGIT :	3309:6:106205:106222	904572	10	True				
ANR	905616	Identifier	OP_NOT_DIGIT		904572	0					
ANR	905617	ExpressionStatement	invert_bits = TRUE	3310:6:106230:106248	904572	11	True				
ANR	905618	AssignmentExpression	invert_bits = TRUE		904572	0		=			
ANR	905619	Identifier	invert_bits		904572	0					
ANR	905620	Identifier	TRUE		904572	1					
ANR	905621	Label	case OP_DIGIT :	3312:6:106281:106294	904572	12	True				
ANR	905622	Identifier	OP_DIGIT		904572	0					
ANR	905623	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_digit )	3313:6:106302:106347	904572	13	True				
ANR	905624	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_digit )		904572	0		=			
ANR	905625	Identifier	set2		904572	0					
ANR	905626	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_digit )		904572	1					
ANR	905627	CastTarget	pcre_uint8 *		904572	0					
ANR	905628	AdditiveExpression	cd -> cbits + cbit_digit		904572	1		+			
ANR	905629	PtrMemberAccess	cd -> cbits		904572	0					
ANR	905630	Identifier	cd		904572	0					
ANR	905631	Identifier	cbits		904572	1					
ANR	905632	Identifier	cbit_digit		904572	1					
ANR	905633	BreakStatement	break ;	3314:6:106355:106360	904572	14	True				
ANR	905634	Label	case OP_NOT_WHITESPACE :	3316:6:106369:106391	904572	15	True				
ANR	905635	Identifier	OP_NOT_WHITESPACE		904572	0					
ANR	905636	ExpressionStatement	invert_bits = TRUE	3317:6:106399:106417	904572	16	True				
ANR	905637	AssignmentExpression	invert_bits = TRUE		904572	0		=			
ANR	905638	Identifier	invert_bits		904572	0					
ANR	905639	Identifier	TRUE		904572	1					
ANR	905640	Label	case OP_WHITESPACE :	3319:6:106450:106468	904572	17	True				
ANR	905641	Identifier	OP_WHITESPACE		904572	0					
ANR	905642	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_space )	3320:6:106476:106521	904572	18	True				
ANR	905643	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_space )		904572	0		=			
ANR	905644	Identifier	set2		904572	0					
ANR	905645	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_space )		904572	1					
ANR	905646	CastTarget	pcre_uint8 *		904572	0					
ANR	905647	AdditiveExpression	cd -> cbits + cbit_space		904572	1		+			
ANR	905648	PtrMemberAccess	cd -> cbits		904572	0					
ANR	905649	Identifier	cd		904572	0					
ANR	905650	Identifier	cbits		904572	1					
ANR	905651	Identifier	cbit_space		904572	1					
ANR	905652	BreakStatement	break ;	3321:6:106529:106534	904572	19	True				
ANR	905653	Label	case OP_NOT_WORDCHAR :	3323:6:106543:106563	904572	20	True				
ANR	905654	Identifier	OP_NOT_WORDCHAR		904572	0					
ANR	905655	ExpressionStatement	invert_bits = TRUE	3324:6:106571:106589	904572	21	True				
ANR	905656	AssignmentExpression	invert_bits = TRUE		904572	0		=			
ANR	905657	Identifier	invert_bits		904572	0					
ANR	905658	Identifier	TRUE		904572	1					
ANR	905659	Label	case OP_WORDCHAR :	3326:6:106622:106638	904572	22	True				
ANR	905660	Identifier	OP_WORDCHAR		904572	0					
ANR	905661	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_word )	3327:6:106646:106690	904572	23	True				
ANR	905662	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_word )		904572	0		=			
ANR	905663	Identifier	set2		904572	0					
ANR	905664	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_word )		904572	1					
ANR	905665	CastTarget	pcre_uint8 *		904572	0					
ANR	905666	AdditiveExpression	cd -> cbits + cbit_word		904572	1		+			
ANR	905667	PtrMemberAccess	cd -> cbits		904572	0					
ANR	905668	Identifier	cd		904572	0					
ANR	905669	Identifier	cbits		904572	1					
ANR	905670	Identifier	cbit_word		904572	1					
ANR	905671	BreakStatement	break ;	3328:6:106698:106703	904572	24	True				
ANR	905672	Label	default :	3330:6:106712:106719	904572	25	True				
ANR	905673	Identifier	default		904572	0					
ANR	905674	ReturnStatement	return FALSE ;	3331:6:106727:106739	904572	26	True				
ANR	905675	Identifier	FALSE		904572	0					
ANR	905676	ExpressionStatement	set_end = set1 + 32	3336:4:106841:106860	904572	3	True				
ANR	905677	AssignmentExpression	set_end = set1 + 32		904572	0		=			
ANR	905678	Identifier	set_end		904572	0					
ANR	905679	AdditiveExpression	set1 + 32		904572	1		+			
ANR	905680	Identifier	set1		904572	0					
ANR	905681	PrimaryExpression	32		904572	1					
ANR	905682	IfStatement	if ( invert_bits )		904572	4					
ANR	905683	Condition	invert_bits	3337:8:106870:106880	904572	0	True				
ANR	905684	Identifier	invert_bits		904572	0					
ANR	905685	CompoundStatement		217:6:5639:5639	904572	1					
ANR	905686	DoStatement	do		904572	0					
ANR	905687	CompoundStatement		219:8:5658:5658	904572	0					
ANR	905688	IfStatement	if ( ( * set1 ++ & ~ ( * set2 ++ ) ) != 0 )		904572	0					
ANR	905689	Condition	( * set1 ++ & ~ ( * set2 ++ ) ) != 0	3341:12:106922:106948	904572	0	True				
ANR	905690	EqualityExpression	( * set1 ++ & ~ ( * set2 ++ ) ) != 0		904572	0		!=			
ANR	905691	BitAndExpression	* set1 ++ & ~ ( * set2 ++ )		904572	0		&			
ANR	905692	UnaryOperationExpression	* set1 ++		904572	0					
ANR	905693	UnaryOperator	*		904572	0					
ANR	905694	PostIncDecOperationExpression	set1 ++		904572	1					
ANR	905695	Identifier	set1		904572	0					
ANR	905696	IncDec	++		904572	1					
ANR	905697	UnaryOperationExpression	~ ( * set2 ++ )		904572	1					
ANR	905698	UnaryOperator	~		904572	0					
ANR	905699	UnaryOperationExpression	* set2 ++		904572	1					
ANR	905700	UnaryOperator	*		904572	0					
ANR	905701	PostIncDecOperationExpression	set2 ++		904572	1					
ANR	905702	Identifier	set2		904572	0					
ANR	905703	IncDec	++		904572	1					
ANR	905704	PrimaryExpression	0		904572	1					
ANR	905705	ReturnStatement	return FALSE ;	3341:41:106951:106963	904572	1	True				
ANR	905706	Identifier	FALSE		904572	0					
ANR	905707	Condition	set1 < set_end	3343:13:106988:107001	904572	1	True				
ANR	905708	RelationalExpression	set1 < set_end		904572	0		<			
ANR	905709	Identifier	set1		904572	0					
ANR	905710	Identifier	set_end		904572	1					
ANR	905711	ElseStatement	else		904572	0					
ANR	905712	CompoundStatement		225:6:5778:5778	904572	0					
ANR	905713	DoStatement	do		904572	0					
ANR	905714	CompoundStatement		227:8:5797:5797	904572	0					
ANR	905715	IfStatement	if ( ( * set1 ++ & * set2 ++ ) != 0 )		904572	0					
ANR	905716	Condition	( * set1 ++ & * set2 ++ ) != 0	3349:12:107061:107084	904572	0	True				
ANR	905717	EqualityExpression	( * set1 ++ & * set2 ++ ) != 0		904572	0		!=			
ANR	905718	BitAndExpression	* set1 ++ & * set2 ++		904572	0		&			
ANR	905719	UnaryOperationExpression	* set1 ++		904572	0					
ANR	905720	UnaryOperator	*		904572	0					
ANR	905721	PostIncDecOperationExpression	set1 ++		904572	1					
ANR	905722	Identifier	set1		904572	0					
ANR	905723	IncDec	++		904572	1					
ANR	905724	UnaryOperationExpression	* set2 ++		904572	1					
ANR	905725	UnaryOperator	*		904572	0					
ANR	905726	PostIncDecOperationExpression	set2 ++		904572	1					
ANR	905727	Identifier	set2		904572	0					
ANR	905728	IncDec	++		904572	1					
ANR	905729	PrimaryExpression	0		904572	1					
ANR	905730	ReturnStatement	return FALSE ;	3349:38:107087:107099	904572	1	True				
ANR	905731	Identifier	FALSE		904572	0					
ANR	905732	Condition	set1 < set_end	3351:13:107124:107137	904572	1	True				
ANR	905733	RelationalExpression	set1 < set_end		904572	0		<			
ANR	905734	Identifier	set1		904572	0					
ANR	905735	Identifier	set_end		904572	1					
ANR	905736	IfStatement	if ( list [ 1 ] == 0 )		904572	5					
ANR	905737	Condition	list [ 1 ] == 0	3354:8:107158:107169	904572	0	True				
ANR	905738	EqualityExpression	list [ 1 ] == 0		904572	0		==			
ANR	905739	ArrayIndexing	list [ 1 ]		904572	0					
ANR	905740	Identifier	list		904572	0					
ANR	905741	PrimaryExpression	1		904572	1					
ANR	905742	PrimaryExpression	0		904572	1					
ANR	905743	ReturnStatement	return TRUE ;	3354:22:107172:107183	904572	1	True				
ANR	905744	Identifier	TRUE		904572	0					
ANR	905745	ContinueStatement	continue ;	3356:4:107225:107233	904572	6	True				
ANR	905746	DoStatement	do		904572	44					
ANR	905747	CompoundStatement		368:4:11130:11130	904572	0					
ANR	905748	ExpressionStatement	chr = * chr_ptr	3490:4:112386:112400	904572	0	True				
ANR	905749	AssignmentExpression	chr = * chr_ptr		904572	0		=			
ANR	905750	Identifier	chr		904572	0					
ANR	905751	UnaryOperationExpression	* chr_ptr		904572	1					
ANR	905752	UnaryOperator	*		904572	0					
ANR	905753	Identifier	chr_ptr		904572	1					
ANR	905754	SwitchStatement	switch ( list_ptr [ 0 ] )		904572	1					
ANR	905755	Condition	list_ptr [ 0 ]	3492:11:112414:112424	904572	0	True				
ANR	905756	ArrayIndexing	list_ptr [ 0 ]		904572	0					
ANR	905757	Identifier	list_ptr		904572	0					
ANR	905758	PrimaryExpression	0		904572	1					
ANR	905759	CompoundStatement		372:6:11183:11183	904572	1					
ANR	905760	Label	case OP_CHAR :	3494:6:112441:112453	904572	0	True				
ANR	905761	Identifier	OP_CHAR		904572	0					
ANR	905762	ExpressionStatement	ochr_ptr = list_ptr + 2	3495:6:112461:112484	904572	1	True				
ANR	905763	AssignmentExpression	ochr_ptr = list_ptr + 2		904572	0		=			
ANR	905764	Identifier	ochr_ptr		904572	0					
ANR	905765	AdditiveExpression	list_ptr + 2		904572	1		+			
ANR	905766	Identifier	list_ptr		904572	0					
ANR	905767	PrimaryExpression	2		904572	1					
ANR	905768	DoStatement	do		904572	2					
ANR	905769	CompoundStatement		376:8:11253:11253	904572	0					
ANR	905770	IfStatement	if ( chr == * ochr_ptr )		904572	0					
ANR	905771	Condition	chr == * ochr_ptr	3498:12:112517:112532	904572	0	True				
ANR	905772	EqualityExpression	chr == * ochr_ptr		904572	0		==			
ANR	905773	Identifier	chr		904572	0					
ANR	905774	UnaryOperationExpression	* ochr_ptr		904572	1					
ANR	905775	UnaryOperator	*		904572	0					
ANR	905776	Identifier	ochr_ptr		904572	1					
ANR	905777	ReturnStatement	return FALSE ;	3498:30:112535:112547	904572	1	True				
ANR	905778	Identifier	FALSE		904572	0					
ANR	905779	ExpressionStatement	ochr_ptr ++	3499:8:112557:112567	904572	1	True				
ANR	905780	PostIncDecOperationExpression	ochr_ptr ++		904572	0					
ANR	905781	Identifier	ochr_ptr		904572	0					
ANR	905782	IncDec	++		904572	1					
ANR	905783	Condition	* ochr_ptr != NOTACHAR	3501:12:112591:112611	904572	1	True				
ANR	905784	EqualityExpression	* ochr_ptr != NOTACHAR		904572	0		!=			
ANR	905785	UnaryOperationExpression	* ochr_ptr		904572	0					
ANR	905786	UnaryOperator	*		904572	0					
ANR	905787	Identifier	ochr_ptr		904572	1					
ANR	905788	Identifier	NOTACHAR		904572	1					
ANR	905789	BreakStatement	break ;	3502:6:112621:112626	904572	3	True				
ANR	905790	Label	case OP_NOT :	3504:6:112635:112646	904572	4	True				
ANR	905791	Identifier	OP_NOT		904572	0					
ANR	905792	ExpressionStatement	ochr_ptr = list_ptr + 2	3505:6:112654:112677	904572	5	True				
ANR	905793	AssignmentExpression	ochr_ptr = list_ptr + 2		904572	0		=			
ANR	905794	Identifier	ochr_ptr		904572	0					
ANR	905795	AdditiveExpression	list_ptr + 2		904572	1		+			
ANR	905796	Identifier	list_ptr		904572	0					
ANR	905797	PrimaryExpression	2		904572	1					
ANR	905798	DoStatement	do		904572	6					
ANR	905799	CompoundStatement		386:8:11446:11446	904572	0					
ANR	905800	IfStatement	if ( chr == * ochr_ptr )		904572	0					
ANR	905801	Condition	chr == * ochr_ptr	3508:12:112710:112725	904572	0	True				
ANR	905802	EqualityExpression	chr == * ochr_ptr		904572	0		==			
ANR	905803	Identifier	chr		904572	0					
ANR	905804	UnaryOperationExpression	* ochr_ptr		904572	1					
ANR	905805	UnaryOperator	*		904572	0					
ANR	905806	Identifier	ochr_ptr		904572	1					
ANR	905807	BreakStatement	break ;	3509:10:112738:112743	904572	1	True				
ANR	905808	ExpressionStatement	ochr_ptr ++	3510:8:112753:112763	904572	1	True				
ANR	905809	PostIncDecOperationExpression	ochr_ptr ++		904572	0					
ANR	905810	Identifier	ochr_ptr		904572	0					
ANR	905811	IncDec	++		904572	1					
ANR	905812	Condition	* ochr_ptr != NOTACHAR	3512:12:112787:112807	904572	1	True				
ANR	905813	EqualityExpression	* ochr_ptr != NOTACHAR		904572	0		!=			
ANR	905814	UnaryOperationExpression	* ochr_ptr		904572	0					
ANR	905815	UnaryOperator	*		904572	0					
ANR	905816	Identifier	ochr_ptr		904572	1					
ANR	905817	Identifier	NOTACHAR		904572	1					
ANR	905818	IfStatement	if ( * ochr_ptr == NOTACHAR )		904572	7					
ANR	905819	Condition	* ochr_ptr == NOTACHAR	3513:10:112821:112841	904572	0	True				
ANR	905820	EqualityExpression	* ochr_ptr == NOTACHAR		904572	0		==			
ANR	905821	UnaryOperationExpression	* ochr_ptr		904572	0					
ANR	905822	UnaryOperator	*		904572	0					
ANR	905823	Identifier	ochr_ptr		904572	1					
ANR	905824	Identifier	NOTACHAR		904572	1					
ANR	905825	ReturnStatement	return FALSE ;	3513:33:112844:112856	904572	1	True				
ANR	905826	Identifier	FALSE		904572	0					
ANR	905827	BreakStatement	break ;	3514:6:112882:112887	904572	8	True				
ANR	905828	Label	case OP_DIGIT :	3519:6:113050:113063	904572	9	True				
ANR	905829	Identifier	OP_DIGIT		904572	0					
ANR	905830	IfStatement	if ( chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0 )		904572	10					
ANR	905831	Condition	chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0	3520:10:113075:113123	904572	0	True				
ANR	905832	AndExpression	chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0		904572	0		&&			
ANR	905833	RelationalExpression	chr < 256		904572	0		<			
ANR	905834	Identifier	chr		904572	0					
ANR	905835	PrimaryExpression	256		904572	1					
ANR	905836	EqualityExpression	( cd -> ctypes [ chr ] & ctype_digit ) != 0		904572	1		!=			
ANR	905837	BitAndExpression	cd -> ctypes [ chr ] & ctype_digit		904572	0		&			
ANR	905838	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905839	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905840	Identifier	cd		904572	0					
ANR	905841	Identifier	ctypes		904572	1					
ANR	905842	Identifier	chr		904572	1					
ANR	905843	Identifier	ctype_digit		904572	1					
ANR	905844	PrimaryExpression	0		904572	1					
ANR	905845	ReturnStatement	return FALSE ;	3520:61:113126:113138	904572	1	True				
ANR	905846	Identifier	FALSE		904572	0					
ANR	905847	BreakStatement	break ;	3521:6:113146:113151	904572	11	True				
ANR	905848	Label	case OP_NOT_DIGIT :	3523:6:113160:113177	904572	12	True				
ANR	905849	Identifier	OP_NOT_DIGIT		904572	0					
ANR	905850	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0 )		904572	13					
ANR	905851	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0	3524:10:113189:113237	904572	0	True				
ANR	905852	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0		904572	0		||			
ANR	905853	RelationalExpression	chr > 255		904572	0		>			
ANR	905854	Identifier	chr		904572	0					
ANR	905855	PrimaryExpression	255		904572	1					
ANR	905856	EqualityExpression	( cd -> ctypes [ chr ] & ctype_digit ) == 0		904572	1		==			
ANR	905857	BitAndExpression	cd -> ctypes [ chr ] & ctype_digit		904572	0		&			
ANR	905858	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905859	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905860	Identifier	cd		904572	0					
ANR	905861	Identifier	ctypes		904572	1					
ANR	905862	Identifier	chr		904572	1					
ANR	905863	Identifier	ctype_digit		904572	1					
ANR	905864	PrimaryExpression	0		904572	1					
ANR	905865	ReturnStatement	return FALSE ;	3524:61:113240:113252	904572	1	True				
ANR	905866	Identifier	FALSE		904572	0					
ANR	905867	BreakStatement	break ;	3525:6:113260:113265	904572	14	True				
ANR	905868	Label	case OP_WHITESPACE :	3527:6:113274:113292	904572	15	True				
ANR	905869	Identifier	OP_WHITESPACE		904572	0					
ANR	905870	IfStatement	if ( chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0 )		904572	16					
ANR	905871	Condition	chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0	3528:10:113304:113352	904572	0	True				
ANR	905872	AndExpression	chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0		904572	0		&&			
ANR	905873	RelationalExpression	chr < 256		904572	0		<			
ANR	905874	Identifier	chr		904572	0					
ANR	905875	PrimaryExpression	256		904572	1					
ANR	905876	EqualityExpression	( cd -> ctypes [ chr ] & ctype_space ) != 0		904572	1		!=			
ANR	905877	BitAndExpression	cd -> ctypes [ chr ] & ctype_space		904572	0		&			
ANR	905878	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905879	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905880	Identifier	cd		904572	0					
ANR	905881	Identifier	ctypes		904572	1					
ANR	905882	Identifier	chr		904572	1					
ANR	905883	Identifier	ctype_space		904572	1					
ANR	905884	PrimaryExpression	0		904572	1					
ANR	905885	ReturnStatement	return FALSE ;	3528:61:113355:113367	904572	1	True				
ANR	905886	Identifier	FALSE		904572	0					
ANR	905887	BreakStatement	break ;	3529:6:113375:113380	904572	17	True				
ANR	905888	Label	case OP_NOT_WHITESPACE :	3531:6:113389:113411	904572	18	True				
ANR	905889	Identifier	OP_NOT_WHITESPACE		904572	0					
ANR	905890	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0 )		904572	19					
ANR	905891	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0	3532:10:113423:113471	904572	0	True				
ANR	905892	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0		904572	0		||			
ANR	905893	RelationalExpression	chr > 255		904572	0		>			
ANR	905894	Identifier	chr		904572	0					
ANR	905895	PrimaryExpression	255		904572	1					
ANR	905896	EqualityExpression	( cd -> ctypes [ chr ] & ctype_space ) == 0		904572	1		==			
ANR	905897	BitAndExpression	cd -> ctypes [ chr ] & ctype_space		904572	0		&			
ANR	905898	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905899	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905900	Identifier	cd		904572	0					
ANR	905901	Identifier	ctypes		904572	1					
ANR	905902	Identifier	chr		904572	1					
ANR	905903	Identifier	ctype_space		904572	1					
ANR	905904	PrimaryExpression	0		904572	1					
ANR	905905	ReturnStatement	return FALSE ;	3532:61:113474:113486	904572	1	True				
ANR	905906	Identifier	FALSE		904572	0					
ANR	905907	BreakStatement	break ;	3533:6:113494:113499	904572	20	True				
ANR	905908	Label	case OP_WORDCHAR :	3535:6:113508:113524	904572	21	True				
ANR	905909	Identifier	OP_WORDCHAR		904572	0					
ANR	905910	IfStatement	if ( chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0 )		904572	22					
ANR	905911	Condition	chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0	3536:10:113536:113583	904572	0	True				
ANR	905912	AndExpression	chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0		904572	0		&&			
ANR	905913	RelationalExpression	chr < 255		904572	0		<			
ANR	905914	Identifier	chr		904572	0					
ANR	905915	PrimaryExpression	255		904572	1					
ANR	905916	EqualityExpression	( cd -> ctypes [ chr ] & ctype_word ) != 0		904572	1		!=			
ANR	905917	BitAndExpression	cd -> ctypes [ chr ] & ctype_word		904572	0		&			
ANR	905918	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905919	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905920	Identifier	cd		904572	0					
ANR	905921	Identifier	ctypes		904572	1					
ANR	905922	Identifier	chr		904572	1					
ANR	905923	Identifier	ctype_word		904572	1					
ANR	905924	PrimaryExpression	0		904572	1					
ANR	905925	ReturnStatement	return FALSE ;	3536:60:113586:113598	904572	1	True				
ANR	905926	Identifier	FALSE		904572	0					
ANR	905927	BreakStatement	break ;	3537:6:113606:113611	904572	23	True				
ANR	905928	Label	case OP_NOT_WORDCHAR :	3539:6:113620:113640	904572	24	True				
ANR	905929	Identifier	OP_NOT_WORDCHAR		904572	0					
ANR	905930	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0 )		904572	25					
ANR	905931	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0	3540:10:113652:113699	904572	0	True				
ANR	905932	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0		904572	0		||			
ANR	905933	RelationalExpression	chr > 255		904572	0		>			
ANR	905934	Identifier	chr		904572	0					
ANR	905935	PrimaryExpression	255		904572	1					
ANR	905936	EqualityExpression	( cd -> ctypes [ chr ] & ctype_word ) == 0		904572	1		==			
ANR	905937	BitAndExpression	cd -> ctypes [ chr ] & ctype_word		904572	0		&			
ANR	905938	ArrayIndexing	cd -> ctypes [ chr ]		904572	0					
ANR	905939	PtrMemberAccess	cd -> ctypes		904572	0					
ANR	905940	Identifier	cd		904572	0					
ANR	905941	Identifier	ctypes		904572	1					
ANR	905942	Identifier	chr		904572	1					
ANR	905943	Identifier	ctype_word		904572	1					
ANR	905944	PrimaryExpression	0		904572	1					
ANR	905945	ReturnStatement	return FALSE ;	3540:60:113702:113714	904572	1	True				
ANR	905946	Identifier	FALSE		904572	0					
ANR	905947	BreakStatement	break ;	3541:6:113722:113727	904572	26	True				
ANR	905948	Label	case OP_HSPACE :	3543:6:113736:113750	904572	27	True				
ANR	905949	Identifier	OP_HSPACE		904572	0					
ANR	905950	SwitchStatement	switch ( chr )		904572	28					
ANR	905951	Condition	chr	3544:13:113765:113767	904572	0	True				
ANR	905952	Identifier	chr		904572	0					
ANR	905953	CompoundStatement		424:8:12528:12528	904572	1					
ANR	905954	Label	HSPACE_CASES :	3546:8:113788:113800	904572	0	True				
ANR	905955	Identifier	HSPACE_CASES		904572	0					
ANR	905956	ReturnStatement	return FALSE ;	3546:22:113802:113814	904572	1	True				
ANR	905957	Identifier	FALSE		904572	0					
ANR	905958	Label	default :	3547:8:113824:113831	904572	2	True				
ANR	905959	Identifier	default		904572	0					
ANR	905960	BreakStatement	break ;	3547:17:113833:113838	904572	3	True				
ANR	905961	BreakStatement	break ;	3549:6:113856:113861	904572	29	True				
ANR	905962	Label	case OP_NOT_HSPACE :	3551:6:113870:113888	904572	30	True				
ANR	905963	Identifier	OP_NOT_HSPACE		904572	0					
ANR	905964	SwitchStatement	switch ( chr )		904572	31					
ANR	905965	Condition	chr	3552:13:113903:113905	904572	0	True				
ANR	905966	Identifier	chr		904572	0					
ANR	905967	CompoundStatement		432:8:12666:12666	904572	1					
ANR	905968	Label	HSPACE_CASES :	3554:8:113926:113938	904572	0	True				
ANR	905969	Identifier	HSPACE_CASES		904572	0					
ANR	905970	BreakStatement	break ;	3554:22:113940:113945	904572	1	True				
ANR	905971	Label	default :	3555:8:113955:113962	904572	2	True				
ANR	905972	Identifier	default		904572	0					
ANR	905973	ReturnStatement	return FALSE ;	3555:17:113964:113976	904572	3	True				
ANR	905974	Identifier	FALSE		904572	0					
ANR	905975	BreakStatement	break ;	3557:6:113994:113999	904572	32	True				
ANR	905976	Label	case OP_ANYNL :	3559:6:114008:114021	904572	33	True				
ANR	905977	Identifier	OP_ANYNL		904572	0					
ANR	905978	Label	case OP_VSPACE :	3560:6:114029:114043	904572	34	True				
ANR	905979	Identifier	OP_VSPACE		904572	0					
ANR	905980	SwitchStatement	switch ( chr )		904572	35					
ANR	905981	Condition	chr	3561:13:114058:114060	904572	0	True				
ANR	905982	Identifier	chr		904572	0					
ANR	905983	CompoundStatement		441:8:12821:12821	904572	1					
ANR	905984	Label	VSPACE_CASES :	3563:8:114081:114093	904572	0	True				
ANR	905985	Identifier	VSPACE_CASES		904572	0					
ANR	905986	ReturnStatement	return FALSE ;	3563:22:114095:114107	904572	1	True				
ANR	905987	Identifier	FALSE		904572	0					
ANR	905988	Label	default :	3564:8:114117:114124	904572	2	True				
ANR	905989	Identifier	default		904572	0					
ANR	905990	BreakStatement	break ;	3564:17:114126:114131	904572	3	True				
ANR	905991	BreakStatement	break ;	3566:6:114149:114154	904572	36	True				
ANR	905992	Label	case OP_NOT_VSPACE :	3568:6:114163:114181	904572	37	True				
ANR	905993	Identifier	OP_NOT_VSPACE		904572	0					
ANR	905994	SwitchStatement	switch ( chr )		904572	38					
ANR	905995	Condition	chr	3569:13:114196:114198	904572	0	True				
ANR	905996	Identifier	chr		904572	0					
ANR	905997	CompoundStatement		449:8:12959:12959	904572	1					
ANR	905998	Label	VSPACE_CASES :	3571:8:114219:114231	904572	0	True				
ANR	905999	Identifier	VSPACE_CASES		904572	0					
ANR	906000	BreakStatement	break ;	3571:22:114233:114238	904572	1	True				
ANR	906001	Label	default :	3572:8:114248:114255	904572	2	True				
ANR	906002	Identifier	default		904572	0					
ANR	906003	ReturnStatement	return FALSE ;	3572:17:114257:114269	904572	3	True				
ANR	906004	Identifier	FALSE		904572	0					
ANR	906005	BreakStatement	break ;	3574:6:114287:114292	904572	39	True				
ANR	906006	Label	case OP_DOLL :	3576:6:114301:114313	904572	40	True				
ANR	906007	Identifier	OP_DOLL		904572	0					
ANR	906008	Label	case OP_EODN :	3577:6:114321:114333	904572	41	True				
ANR	906009	Identifier	OP_EODN		904572	0					
ANR	906010	SwitchStatement	switch ( chr )		904572	42					
ANR	906011	Condition	chr	3578:14:114349:114351	904572	0	True				
ANR	906012	Identifier	chr		904572	0					
ANR	906013	CompoundStatement		458:8:13112:13112	904572	1					
ANR	906014	Label	case CHAR_CR :	3580:8:114372:114384	904572	0	True				
ANR	906015	Identifier	CHAR_CR		904572	0					
ANR	906016	Label	case CHAR_LF :	3581:8:114394:114406	904572	1	True				
ANR	906017	Identifier	CHAR_LF		904572	0					
ANR	906018	Label	case CHAR_VT :	3582:8:114416:114428	904572	2	True				
ANR	906019	Identifier	CHAR_VT		904572	0					
ANR	906020	Label	case CHAR_FF :	3583:8:114438:114450	904572	3	True				
ANR	906021	Identifier	CHAR_FF		904572	0					
ANR	906022	Label	case CHAR_NEL :	3584:8:114460:114473	904572	4	True				
ANR	906023	Identifier	CHAR_NEL		904572	0					
ANR	906024	Label	case 0x2028 :	3586:8:114498:114509	904572	5	True				
ANR	906025	Label	case 0x2029 :	3587:8:114519:114530	904572	6	True				
ANR	906026	ReturnStatement	return FALSE ;	3589:8:114565:114577	904572	7	True				
ANR	906027	Identifier	FALSE		904572	0					
ANR	906028	BreakStatement	break ;	3591:6:114595:114600	904572	43	True				
ANR	906029	Label	case OP_EOD :	3593:6:114609:114620	904572	44	True				
ANR	906030	Identifier	OP_EOD		904572	0					
ANR	906031	BreakStatement	break ;	3594:6:114669:114674	904572	45	True				
ANR	906032	Label	case OP_PROP :	3597:6:114702:114714	904572	46	True				
ANR	906033	Identifier	OP_PROP		904572	0					
ANR	906034	Label	case OP_NOTPROP :	3598:6:114722:114737	904572	47	True				
ANR	906035	Identifier	OP_NOTPROP		904572	0					
ANR	906036	IfStatement	"if ( ! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP ) )"		904572	48					
ANR	906037	Condition	"! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"	3599:10:114749:114834	904572	0	True				
ANR	906038	UnaryOperationExpression	"! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"		904572	0					
ANR	906039	UnaryOperator	!		904572	0					
ANR	906040	CallExpression	"check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"		904572	1					
ANR	906041	Callee	check_char_prop		904572	0					
ANR	906042	Identifier	check_char_prop		904572	0					
ANR	906043	ArgumentList	chr		904572	1					
ANR	906044	Argument	chr		904572	0					
ANR	906045	Identifier	chr		904572	0					
ANR	906046	Argument	list_ptr [ 2 ]		904572	1					
ANR	906047	ArrayIndexing	list_ptr [ 2 ]		904572	0					
ANR	906048	Identifier	list_ptr		904572	0					
ANR	906049	PrimaryExpression	2		904572	1					
ANR	906050	Argument	list_ptr [ 3 ]		904572	2					
ANR	906051	ArrayIndexing	list_ptr [ 3 ]		904572	0					
ANR	906052	Identifier	list_ptr		904572	0					
ANR	906053	PrimaryExpression	3		904572	1					
ANR	906054	Argument	list_ptr [ 0 ] == OP_NOTPROP		904572	3					
ANR	906055	EqualityExpression	list_ptr [ 0 ] == OP_NOTPROP		904572	0		==			
ANR	906056	ArrayIndexing	list_ptr [ 0 ]		904572	0					
ANR	906057	Identifier	list_ptr		904572	0					
ANR	906058	PrimaryExpression	0		904572	1					
ANR	906059	Identifier	OP_NOTPROP		904572	1					
ANR	906060	ReturnStatement	return FALSE ;	3601:8:114845:114857	904572	1	True				
ANR	906061	Identifier	FALSE		904572	0					
ANR	906062	BreakStatement	break ;	3602:6:114865:114870	904572	49	True				
ANR	906063	Label	case OP_NCLASS :	3605:6:114886:114900	904572	50	True				
ANR	906064	Identifier	OP_NCLASS		904572	0					
ANR	906065	IfStatement	if ( chr > 255 )		904572	51					
ANR	906066	Condition	chr > 255	3606:10:114912:114920	904572	0	True				
ANR	906067	RelationalExpression	chr > 255		904572	0		>			
ANR	906068	Identifier	chr		904572	0					
ANR	906069	PrimaryExpression	255		904572	1					
ANR	906070	ReturnStatement	return FALSE ;	3606:21:114923:114935	904572	1	True				
ANR	906071	Identifier	FALSE		904572	0					
ANR	906072	Label	case OP_CLASS :	3609:6:114969:114982	904572	52	True				
ANR	906073	Identifier	OP_CLASS		904572	0					
ANR	906074	IfStatement	if ( chr > 255 )		904572	53					
ANR	906075	Condition	chr > 255	3610:10:114994:115002	904572	0	True				
ANR	906076	RelationalExpression	chr > 255		904572	0		>			
ANR	906077	Identifier	chr		904572	0					
ANR	906078	PrimaryExpression	255		904572	1					
ANR	906079	BreakStatement	break ;	3610:21:115005:115010	904572	1	True				
ANR	906080	ExpressionStatement	class_bitset = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )	3611:6:115018:115108	904572	54	True				
ANR	906081	AssignmentExpression	class_bitset = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		904572	0		=			
ANR	906082	Identifier	class_bitset		904572	0					
ANR	906083	CastExpression	( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		904572	1					
ANR	906084	CastTarget	pcre_uint8 *		904572	0					
ANR	906085	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ]		904572	1		-			
ANR	906086	ConditionalExpression	list_ptr == list ? code : base_end		904572	0					
ANR	906087	Condition	list_ptr == list		904572	0					
ANR	906088	EqualityExpression	list_ptr == list		904572	0		==			
ANR	906089	Identifier	list_ptr		904572	0					
ANR	906090	Identifier	list		904572	1					
ANR	906091	Identifier	code		904572	1					
ANR	906092	Identifier	base_end		904572	2					
ANR	906093	ArrayIndexing	list_ptr [ 2 ]		904572	1					
ANR	906094	Identifier	list_ptr		904572	0					
ANR	906095	PrimaryExpression	2		904572	1					
ANR	906096	IfStatement	if ( ( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0 )		904572	55					
ANR	906097	Condition	( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0	3613:10:115120:115167	904572	0	True				
ANR	906098	EqualityExpression	( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0		904572	0		!=			
ANR	906099	BitAndExpression	class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) )		904572	0		&			
ANR	906100	ArrayIndexing	class_bitset [ chr >> 3 ]		904572	0					
ANR	906101	Identifier	class_bitset		904572	0					
ANR	906102	ShiftExpression	chr >> 3		904572	1		>>			
ANR	906103	Identifier	chr		904572	0					
ANR	906104	PrimaryExpression	3		904572	1					
ANR	906105	ShiftExpression	1 << ( chr & 7 )		904572	1		<<			
ANR	906106	PrimaryExpression	1		904572	0					
ANR	906107	BitAndExpression	chr & 7		904572	1		&			
ANR	906108	Identifier	chr		904572	0					
ANR	906109	PrimaryExpression	7		904572	1					
ANR	906110	PrimaryExpression	0		904572	1					
ANR	906111	ReturnStatement	return FALSE ;	3613:60:115170:115182	904572	1	True				
ANR	906112	Identifier	FALSE		904572	0					
ANR	906113	BreakStatement	break ;	3614:6:115190:115195	904572	56	True				
ANR	906114	Label	case OP_XCLASS :	3617:6:115254:115268	904572	57	True				
ANR	906115	Identifier	OP_XCLASS		904572	0					
ANR	906116	IfStatement	"if ( PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf ) )"		904572	58					
ANR	906117	Condition	"PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf )"	3618:10:115280:115375	904572	0	True				
ANR	906118	CallExpression	"PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf )"		904572	0					
ANR	906119	Callee	PRIV ( xclass )		904572	0					
ANR	906120	CallExpression	PRIV ( xclass )		904572	0					
ANR	906121	Callee	PRIV		904572	0					
ANR	906122	Identifier	PRIV		904572	0					
ANR	906123	ArgumentList	xclass		904572	1					
ANR	906124	Argument	xclass		904572	0					
ANR	906125	Identifier	xclass		904572	0					
ANR	906126	ArgumentList	chr		904572	1					
ANR	906127	Argument	chr		904572	0					
ANR	906128	Identifier	chr		904572	0					
ANR	906129	Argument	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		904572	1					
ANR	906130	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		904572	0		-			
ANR	906131	ConditionalExpression	list_ptr == list ? code : base_end		904572	0					
ANR	906132	Condition	list_ptr == list		904572	0					
ANR	906133	EqualityExpression	list_ptr == list		904572	0		==			
ANR	906134	Identifier	list_ptr		904572	0					
ANR	906135	Identifier	list		904572	1					
ANR	906136	Identifier	code		904572	1					
ANR	906137	Identifier	base_end		904572	2					
ANR	906138	AdditiveExpression	list_ptr [ 2 ] + LINK_SIZE		904572	1		+			
ANR	906139	ArrayIndexing	list_ptr [ 2 ]		904572	0					
ANR	906140	Identifier	list_ptr		904572	0					
ANR	906141	PrimaryExpression	2		904572	1					
ANR	906142	Identifier	LINK_SIZE		904572	1					
ANR	906143	Argument	utf		904572	2					
ANR	906144	Identifier	utf		904572	0					
ANR	906145	ReturnStatement	return FALSE ;	3619:41:115378:115390	904572	1	True				
ANR	906146	Identifier	FALSE		904572	0					
ANR	906147	BreakStatement	break ;	3620:6:115398:115403	904572	59	True				
ANR	906148	Label	default :	3623:6:115419:115426	904572	60	True				
ANR	906149	Identifier	default		904572	0					
ANR	906150	ReturnStatement	return FALSE ;	3624:6:115434:115446	904572	61	True				
ANR	906151	Identifier	FALSE		904572	0					
ANR	906152	ExpressionStatement	chr_ptr ++	3627:4:115461:115470	904572	2	True				
ANR	906153	PostIncDecOperationExpression	chr_ptr ++		904572	0					
ANR	906154	Identifier	chr_ptr		904572	0					
ANR	906155	IncDec	++		904572	1					
ANR	906156	Condition	* chr_ptr != NOTACHAR	3629:8:115486:115505	904572	1	True				
ANR	906157	EqualityExpression	* chr_ptr != NOTACHAR		904572	0		!=			
ANR	906158	UnaryOperationExpression	* chr_ptr		904572	0					
ANR	906159	UnaryOperator	*		904572	0					
ANR	906160	Identifier	chr_ptr		904572	1					
ANR	906161	Identifier	NOTACHAR		904572	1					
ANR	906162	IfStatement	if ( list [ 1 ] == 0 )		904572	45					
ANR	906163	Condition	list [ 1 ] == 0	3633:6:115582:115593	904572	0	True				
ANR	906164	EqualityExpression	list [ 1 ] == 0		904572	0		==			
ANR	906165	ArrayIndexing	list [ 1 ]		904572	0					
ANR	906166	Identifier	list		904572	0					
ANR	906167	PrimaryExpression	1		904572	1					
ANR	906168	PrimaryExpression	0		904572	1					
ANR	906169	ReturnStatement	return TRUE ;	3633:20:115596:115607	904572	1	True				
ANR	906170	Identifier	TRUE		904572	0					
ANR	906171	ReturnType	static BOOL		904572	1					
ANR	906172	Identifier	compare_opcodes		904572	2					
ANR	906173	ParameterList	"const pcre_uchar * code , BOOL utf , const compile_data * cd , const pcre_uint32 * base_list , const pcre_uchar * base_end , int * rec_limit"		904572	3					
ANR	906174	Parameter	const pcre_uchar * code	3120:16:101115:101136	904572	0	True				
ANR	906175	ParameterType	const pcre_uchar *		904572	0					
ANR	906176	Identifier	code		904572	1					
ANR	906177	Parameter	BOOL utf	3120:40:101139:101146	904572	1	True				
ANR	906178	ParameterType	BOOL		904572	0					
ANR	906179	Identifier	utf		904572	1					
ANR	906180	Parameter	const compile_data * cd	3120:50:101149:101170	904572	2	True				
ANR	906181	ParameterType	const compile_data *		904572	0					
ANR	906182	Identifier	cd		904572	1					
ANR	906183	Parameter	const pcre_uint32 * base_list	3121:2:101175:101202	904572	3	True				
ANR	906184	ParameterType	const pcre_uint32 *		904572	0					
ANR	906185	Identifier	base_list		904572	1					
ANR	906186	Parameter	const pcre_uchar * base_end	3121:32:101205:101230	904572	4	True				
ANR	906187	ParameterType	const pcre_uchar *		904572	0					
ANR	906188	Identifier	base_end		904572	1					
ANR	906189	Parameter	int * rec_limit	3121:60:101233:101246	904572	5	True				
ANR	906190	ParameterType	int *		904572	0					
ANR	906191	Identifier	rec_limit		904572	1					
ANR	906192	CFGEntryNode	ENTRY		904572		True				
ANR	906193	CFGExitNode	EXIT		904572		True				
ANR	906194	InfiniteForNode	true		904572		True				
ANR	906195	Symbol	* cd		904572						
ANR	906196	Symbol	base_end		904572						
ANR	906197	Symbol	catposstab		904572						
ANR	906198	Symbol	FIRST_AUTOTAB_OP		904572						
ANR	906199	Symbol	* leftop		904572						
ANR	906200	Symbol	OP_EOD		904572						
ANR	906201	Symbol	OP_CHAR		904572						
ANR	906202	Symbol	* GET		904572						
ANR	906203	Symbol	leftop		904572						
ANR	906204	Symbol	cbit_word		904572						
ANR	906205	Symbol	set2		904572						
ANR	906206	Symbol	OP_CLASS		904572						
ANR	906207	Symbol	"* ( code - GET ( code , 1 ) )"		904572						
ANR	906208	Symbol	set_end		904572						
ANR	906209	Symbol	* * FIRST_AUTOTAB_OP		904572						
ANR	906210	Symbol	lisprop		904572						
ANR	906211	Symbol	* autoposstab		904572						
ANR	906212	Symbol	LINK_SIZE		904572						
ANR	906213	Symbol	* * * p		904572						
ANR	906214	Symbol	OP_NCLASS		904572						
ANR	906215	Symbol	* chr_ptr		904572						
ANR	906216	Symbol	* * * list		904572						
ANR	906217	Symbol	LAST_AUTOTAB_LEFT_OP		904572						
ANR	906218	Symbol	GET		904572						
ANR	906219	Symbol	set1		904572						
ANR	906220	Symbol	* FIRST_AUTOTAB_OP		904572						
ANR	906221	Symbol	next_code		904572						
ANR	906222	Symbol	LAST_AUTOTAB_RIGHT_OP		904572						
ANR	906223	Symbol	risprop		904572						
ANR	906224	Symbol	OP_ONCE_NC		904572						
ANR	906225	Symbol	XCL_HASPROP		904572						
ANR	906226	Symbol	* class_bitset		904572						
ANR	906227	Symbol	OP_ALT		904572						
ANR	906228	Symbol	* * leftop		904572						
ANR	906229	Symbol	class_bitset		904572						
ANR	906230	Symbol	invert_bits		904572						
ANR	906231	Symbol	same		904572						
ANR	906232	Symbol	* xclass_flags		904572						
ANR	906233	Symbol	* * p		904572						
ANR	906234	Symbol	cd -> ctypes		904572						
ANR	906235	Symbol	check_char_prop		904572						
ANR	906236	Symbol	cd		904572						
ANR	906237	Symbol	c		904572						
ANR	906238	Symbol	* * catposstab		904572						
ANR	906239	Symbol	* * propposstab		904572						
ANR	906240	Symbol	XCL_MAP		904572						
ANR	906241	Symbol	ctype_space		904572						
ANR	906242	Symbol	xclass		904572						
ANR	906243	Symbol	* * autoposstab		904572						
ANR	906244	Symbol	OP_NOTPROP		904572						
ANR	906245	Symbol	n		904572						
ANR	906246	Symbol	cbit_digit		904572						
ANR	906247	Symbol	p		904572						
ANR	906248	Symbol	* PRIV		904572						
ANR	906249	Symbol	* catposstab		904572						
ANR	906250	Symbol	rightop		904572						
ANR	906251	Symbol	* ochr_ptr		904572						
ANR	906252	Symbol	propposstab		904572						
ANR	906253	Symbol	* list		904572						
ANR	906254	Symbol	* next_code		904572						
ANR	906255	Symbol	compare_opcodes		904572						
ANR	906256	Symbol	cd -> fcc		904572						
ANR	906257	Symbol	bothprop		904572						
ANR	906258	Symbol	* set1 ++		904572						
ANR	906259	Symbol	OP_CBRA		904572						
ANR	906260	Symbol	* propposstab		904572						
ANR	906261	Symbol	PRIV		904572						
ANR	906262	Symbol	autoposstab		904572						
ANR	906263	Symbol	* rec_limit		904572						
ANR	906264	Symbol	ochr_ptr		904572						
ANR	906265	Symbol	* cd -> ctypes		904572						
ANR	906266	Symbol	NULL		904572						
ANR	906267	Symbol	utf		904572						
ANR	906268	Symbol	chr_ptr		904572						
ANR	906269	Symbol	xclass_flags		904572						
ANR	906270	Symbol	accepted		904572						
ANR	906271	Symbol	OP_CALLOUT		904572						
ANR	906272	Symbol	TRUE		904572						
ANR	906273	Symbol	list		904572						
ANR	906274	Symbol	chr		904572						
ANR	906275	Symbol	ctype_word		904572						
ANR	906276	Symbol	ctype_digit		904572						
ANR	906277	Symbol	posspropstab		904572						
ANR	906278	Symbol	OP_lengths		904572						
ANR	906279	Symbol	* base_list		904572						
ANR	906280	Symbol	* * * base_list		904572						
ANR	906281	Symbol	cbit_space		904572						
ANR	906282	Symbol	* code		904572						
ANR	906283	Symbol	code		904572						
ANR	906284	Symbol	* posspropstab		904572						
ANR	906285	Symbol	* * cd		904572						
ANR	906286	Symbol	* * list		904572						
ANR	906287	Symbol	rec_limit		904572						
ANR	906288	Symbol	* list_ptr		904572						
ANR	906289	Symbol	cd -> cbits		904572						
ANR	906290	Symbol	* set2 ++		904572						
ANR	906291	Symbol	get_chr_property_list		904572						
ANR	906292	Symbol	* rightop		904572						
ANR	906293	Symbol	* chr		904572						
ANR	906294	Symbol	* c		904572						
ANR	906295	Symbol	OP_ONCE		904572						
ANR	906296	Symbol	entered_a_group		904572						
ANR	906297	Symbol	OP_BRA		904572						
ANR	906298	Symbol	OP_PROP		904572						
ANR	906299	Symbol	NOTACHAR		904572						
ANR	906300	Symbol	list_ptr		904572						
ANR	906301	Symbol	* n		904572						
ANR	906302	Symbol	FALSE		904572						
ANR	906303	Symbol	* p		904572						
ANR	906304	Symbol	base_list		904572						
ANR	906305	Symbol	* * base_list		904572						
ANR	906306	Function	auto_possessify	3658:0:116223:121552							
ANR	906307	FunctionDef	"auto_possessify (pcre_uchar * code , BOOL utf , const compile_data * cd)"		906306	0					
ANR	906308	CompoundStatement		3660:0:116303:121552	906306	0					
ANR	906309	Statement	register	3661:0:116305:116312	906306	0	True				
ANR	906310	IdentifierDeclStatement	pcre_uchar c ;	3661:9:116314:116326	906306	1	True				
ANR	906311	IdentifierDecl	c		906306	0					
ANR	906312	IdentifierDeclType	pcre_uchar		906306	0					
ANR	906313	Identifier	c		906306	1					
ANR	906314	IdentifierDeclStatement	const pcre_uchar * end ;	3662:0:116328:116349	906306	2	True				
ANR	906315	IdentifierDecl	* end		906306	0					
ANR	906316	IdentifierDeclType	const pcre_uchar *		906306	0					
ANR	906317	Identifier	end		906306	1					
ANR	906318	IdentifierDeclStatement	pcre_uchar * repeat_opcode ;	3663:0:116351:116376	906306	3	True				
ANR	906319	IdentifierDecl	* repeat_opcode		906306	0					
ANR	906320	IdentifierDeclType	pcre_uchar *		906306	0					
ANR	906321	Identifier	repeat_opcode		906306	1					
ANR	906322	IdentifierDeclStatement	pcre_uint32 list [ 8 ] ;	3664:0:116378:116397	906306	4	True				
ANR	906323	IdentifierDecl	list [ 8 ]		906306	0					
ANR	906324	IdentifierDeclType	pcre_uint32 [ 8 ]		906306	0					
ANR	906325	Identifier	list		906306	1					
ANR	906326	PrimaryExpression	8		906306	2					
ANR	906327	IdentifierDeclStatement	int rec_limit ;	3665:0:116399:116412	906306	5	True				
ANR	906328	IdentifierDecl	rec_limit		906306	0					
ANR	906329	IdentifierDeclType	int		906306	0					
ANR	906330	Identifier	rec_limit		906306	1					
ANR	906331	ForStatement	for ( ; ; )		906306	6					
ANR	906332	CompoundStatement		9:2:122:122	906306	0					
ANR	906333	ExpressionStatement	c = * code	3669:2:116430:116439	906306	0	True				
ANR	906334	AssignmentExpression	c = * code		906306	0		=			
ANR	906335	Identifier	c		906306	0					
ANR	906336	UnaryOperationExpression	* code		906306	1					
ANR	906337	UnaryOperator	*		906306	0					
ANR	906338	Identifier	code		906306	1					
ANR	906339	IfStatement	if ( c >= OP_TABLE_LENGTH )		906306	1					
ANR	906340	Condition	c >= OP_TABLE_LENGTH	3677:6:116802:116821	906306	0	True				
ANR	906341	RelationalExpression	c >= OP_TABLE_LENGTH		906306	0		>=			
ANR	906342	Identifier	c		906306	0					
ANR	906343	Identifier	OP_TABLE_LENGTH		906306	1					
ANR	906344	ReturnStatement	return ;	3677:28:116824:116830	906306	1	True				
ANR	906345	IfStatement	if ( c >= OP_STAR && c <= OP_TYPEPOSUPTO )		906306	2					
ANR	906346	Condition	c >= OP_STAR && c <= OP_TYPEPOSUPTO	3679:6:116839:116873	906306	0	True				
ANR	906347	AndExpression	c >= OP_STAR && c <= OP_TYPEPOSUPTO		906306	0		&&			
ANR	906348	RelationalExpression	c >= OP_STAR		906306	0		>=			
ANR	906349	Identifier	c		906306	0					
ANR	906350	Identifier	OP_STAR		906306	1					
ANR	906351	RelationalExpression	c <= OP_TYPEPOSUPTO		906306	1		<=			
ANR	906352	Identifier	c		906306	0					
ANR	906353	Identifier	OP_TYPEPOSUPTO		906306	1					
ANR	906354	CompoundStatement		21:4:576:576	906306	1					
ANR	906355	ExpressionStatement	c -= get_repeat_base ( c ) - OP_STAR	3681:4:116886:116919	906306	0	True				
ANR	906356	AssignmentExpression	c -= get_repeat_base ( c ) - OP_STAR		906306	0		-=			
ANR	906357	Identifier	c		906306	0					
ANR	906358	AdditiveExpression	get_repeat_base ( c ) - OP_STAR		906306	1		-			
ANR	906359	CallExpression	get_repeat_base ( c )		906306	0					
ANR	906360	Callee	get_repeat_base		906306	0					
ANR	906361	Identifier	get_repeat_base		906306	0					
ANR	906362	ArgumentList	c		906306	1					
ANR	906363	Argument	c		906306	0					
ANR	906364	Identifier	c		906306	0					
ANR	906365	Identifier	OP_STAR		906306	1					
ANR	906366	ExpressionStatement	"end = ( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"	3682:4:116925:117011	906306	1	True				
ANR	906367	AssignmentExpression	"end = ( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"		906306	0		=			
ANR	906368	Identifier	end		906306	0					
ANR	906369	ConditionalExpression	"( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"		906306	1					
ANR	906370	Condition	c <= OP_MINUPTO		906306	0					
ANR	906371	RelationalExpression	c <= OP_MINUPTO		906306	0		<=			
ANR	906372	Identifier	c		906306	0					
ANR	906373	Identifier	OP_MINUPTO		906306	1					
ANR	906374	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		906306	1					
ANR	906375	Callee	get_chr_property_list		906306	0					
ANR	906376	Identifier	get_chr_property_list		906306	0					
ANR	906377	ArgumentList	code		906306	1					
ANR	906378	Argument	code		906306	0					
ANR	906379	Identifier	code		906306	0					
ANR	906380	Argument	utf		906306	1					
ANR	906381	Identifier	utf		906306	0					
ANR	906382	Argument	cd -> fcc		906306	2					
ANR	906383	PtrMemberAccess	cd -> fcc		906306	0					
ANR	906384	Identifier	cd		906306	0					
ANR	906385	Identifier	fcc		906306	1					
ANR	906386	Argument	list		906306	3					
ANR	906387	Identifier	list		906306	0					
ANR	906388	Identifier	NULL		906306	2					
ANR	906389	ExpressionStatement	list [ 1 ] = c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO	3684:4:117017:117088	906306	2	True				
ANR	906390	AssignmentExpression	list [ 1 ] = c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		906306	0		=			
ANR	906391	ArrayIndexing	list [ 1 ]		906306	0					
ANR	906392	Identifier	list		906306	0					
ANR	906393	PrimaryExpression	1		906306	1					
ANR	906394	OrExpression	c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		906306	1		||			
ANR	906395	EqualityExpression	c == OP_STAR		906306	0		==			
ANR	906396	Identifier	c		906306	0					
ANR	906397	Identifier	OP_STAR		906306	1					
ANR	906398	OrExpression	c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		906306	1		||			
ANR	906399	EqualityExpression	c == OP_PLUS		906306	0		==			
ANR	906400	Identifier	c		906306	0					
ANR	906401	Identifier	OP_PLUS		906306	1					
ANR	906402	OrExpression	c == OP_QUERY || c == OP_UPTO		906306	1		||			
ANR	906403	EqualityExpression	c == OP_QUERY		906306	0		==			
ANR	906404	Identifier	c		906306	0					
ANR	906405	Identifier	OP_QUERY		906306	1					
ANR	906406	EqualityExpression	c == OP_UPTO		906306	1		==			
ANR	906407	Identifier	c		906306	0					
ANR	906408	Identifier	OP_UPTO		906306	1					
ANR	906409	ExpressionStatement	rec_limit = 1000	3686:4:117095:117111	906306	3	True				
ANR	906410	AssignmentExpression	rec_limit = 1000		906306	0		=			
ANR	906411	Identifier	rec_limit		906306	0					
ANR	906412	PrimaryExpression	1000		906306	1					
ANR	906413	IfStatement	"if ( end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit ) )"		906306	4					
ANR	906414	Condition	"end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit )"	3687:8:117121:117187	906306	0	True				
ANR	906415	AndExpression	"end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		906306	0		&&			
ANR	906416	EqualityExpression	end != NULL		906306	0		!=			
ANR	906417	Identifier	end		906306	0					
ANR	906418	Identifier	NULL		906306	1					
ANR	906419	CallExpression	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		906306	1					
ANR	906420	Callee	compare_opcodes		906306	0					
ANR	906421	Identifier	compare_opcodes		906306	0					
ANR	906422	ArgumentList	end		906306	1					
ANR	906423	Argument	end		906306	0					
ANR	906424	Identifier	end		906306	0					
ANR	906425	Argument	utf		906306	1					
ANR	906426	Identifier	utf		906306	0					
ANR	906427	Argument	cd		906306	2					
ANR	906428	Identifier	cd		906306	0					
ANR	906429	Argument	list		906306	3					
ANR	906430	Identifier	list		906306	0					
ANR	906431	Argument	end		906306	4					
ANR	906432	Identifier	end		906306	0					
ANR	906433	Argument	& rec_limit		906306	5					
ANR	906434	UnaryOperationExpression	& rec_limit		906306	0					
ANR	906435	UnaryOperator	&		906306	0					
ANR	906436	Identifier	rec_limit		906306	1					
ANR	906437	CompoundStatement		29:6:892:892	906306	1					
ANR	906438	SwitchStatement	switch ( c )		906306	0					
ANR	906439	Condition	c	3689:13:117211:117211	906306	0	True				
ANR	906440	Identifier	c		906306	0					
ANR	906441	CompoundStatement		31:8:918:918	906306	1					
ANR	906442	Label	case OP_STAR :	3691:8:117232:117244	906306	0	True				
ANR	906443	Identifier	OP_STAR		906306	0					
ANR	906444	ExpressionStatement	* code += OP_POSSTAR - OP_STAR	3692:8:117254:117283	906306	1	True				
ANR	906445	AssignmentExpression	* code += OP_POSSTAR - OP_STAR		906306	0		+=			
ANR	906446	UnaryOperationExpression	* code		906306	0					
ANR	906447	UnaryOperator	*		906306	0					
ANR	906448	Identifier	code		906306	1					
ANR	906449	AdditiveExpression	OP_POSSTAR - OP_STAR		906306	1		-			
ANR	906450	Identifier	OP_POSSTAR		906306	0					
ANR	906451	Identifier	OP_STAR		906306	1					
ANR	906452	BreakStatement	break ;	3693:8:117293:117298	906306	2	True				
ANR	906453	Label	case OP_MINSTAR :	3695:8:117309:117324	906306	3	True				
ANR	906454	Identifier	OP_MINSTAR		906306	0					
ANR	906455	ExpressionStatement	* code += OP_POSSTAR - OP_MINSTAR	3696:8:117334:117366	906306	4	True				
ANR	906456	AssignmentExpression	* code += OP_POSSTAR - OP_MINSTAR		906306	0		+=			
ANR	906457	UnaryOperationExpression	* code		906306	0					
ANR	906458	UnaryOperator	*		906306	0					
ANR	906459	Identifier	code		906306	1					
ANR	906460	AdditiveExpression	OP_POSSTAR - OP_MINSTAR		906306	1		-			
ANR	906461	Identifier	OP_POSSTAR		906306	0					
ANR	906462	Identifier	OP_MINSTAR		906306	1					
ANR	906463	BreakStatement	break ;	3697:8:117376:117381	906306	5	True				
ANR	906464	Label	case OP_PLUS :	3699:8:117392:117404	906306	6	True				
ANR	906465	Identifier	OP_PLUS		906306	0					
ANR	906466	ExpressionStatement	* code += OP_POSPLUS - OP_PLUS	3700:8:117414:117443	906306	7	True				
ANR	906467	AssignmentExpression	* code += OP_POSPLUS - OP_PLUS		906306	0		+=			
ANR	906468	UnaryOperationExpression	* code		906306	0					
ANR	906469	UnaryOperator	*		906306	0					
ANR	906470	Identifier	code		906306	1					
ANR	906471	AdditiveExpression	OP_POSPLUS - OP_PLUS		906306	1		-			
ANR	906472	Identifier	OP_POSPLUS		906306	0					
ANR	906473	Identifier	OP_PLUS		906306	1					
ANR	906474	BreakStatement	break ;	3701:8:117453:117458	906306	8	True				
ANR	906475	Label	case OP_MINPLUS :	3703:8:117469:117484	906306	9	True				
ANR	906476	Identifier	OP_MINPLUS		906306	0					
ANR	906477	ExpressionStatement	* code += OP_POSPLUS - OP_MINPLUS	3704:8:117494:117526	906306	10	True				
ANR	906478	AssignmentExpression	* code += OP_POSPLUS - OP_MINPLUS		906306	0		+=			
ANR	906479	UnaryOperationExpression	* code		906306	0					
ANR	906480	UnaryOperator	*		906306	0					
ANR	906481	Identifier	code		906306	1					
ANR	906482	AdditiveExpression	OP_POSPLUS - OP_MINPLUS		906306	1		-			
ANR	906483	Identifier	OP_POSPLUS		906306	0					
ANR	906484	Identifier	OP_MINPLUS		906306	1					
ANR	906485	BreakStatement	break ;	3705:8:117536:117541	906306	11	True				
ANR	906486	Label	case OP_QUERY :	3707:8:117552:117565	906306	12	True				
ANR	906487	Identifier	OP_QUERY		906306	0					
ANR	906488	ExpressionStatement	* code += OP_POSQUERY - OP_QUERY	3708:8:117575:117606	906306	13	True				
ANR	906489	AssignmentExpression	* code += OP_POSQUERY - OP_QUERY		906306	0		+=			
ANR	906490	UnaryOperationExpression	* code		906306	0					
ANR	906491	UnaryOperator	*		906306	0					
ANR	906492	Identifier	code		906306	1					
ANR	906493	AdditiveExpression	OP_POSQUERY - OP_QUERY		906306	1		-			
ANR	906494	Identifier	OP_POSQUERY		906306	0					
ANR	906495	Identifier	OP_QUERY		906306	1					
ANR	906496	BreakStatement	break ;	3709:8:117616:117621	906306	14	True				
ANR	906497	Label	case OP_MINQUERY :	3711:8:117632:117648	906306	15	True				
ANR	906498	Identifier	OP_MINQUERY		906306	0					
ANR	906499	ExpressionStatement	* code += OP_POSQUERY - OP_MINQUERY	3712:8:117658:117692	906306	16	True				
ANR	906500	AssignmentExpression	* code += OP_POSQUERY - OP_MINQUERY		906306	0		+=			
ANR	906501	UnaryOperationExpression	* code		906306	0					
ANR	906502	UnaryOperator	*		906306	0					
ANR	906503	Identifier	code		906306	1					
ANR	906504	AdditiveExpression	OP_POSQUERY - OP_MINQUERY		906306	1		-			
ANR	906505	Identifier	OP_POSQUERY		906306	0					
ANR	906506	Identifier	OP_MINQUERY		906306	1					
ANR	906507	BreakStatement	break ;	3713:8:117702:117707	906306	17	True				
ANR	906508	Label	case OP_UPTO :	3715:8:117718:117730	906306	18	True				
ANR	906509	Identifier	OP_UPTO		906306	0					
ANR	906510	ExpressionStatement	* code += OP_POSUPTO - OP_UPTO	3716:8:117740:117769	906306	19	True				
ANR	906511	AssignmentExpression	* code += OP_POSUPTO - OP_UPTO		906306	0		+=			
ANR	906512	UnaryOperationExpression	* code		906306	0					
ANR	906513	UnaryOperator	*		906306	0					
ANR	906514	Identifier	code		906306	1					
ANR	906515	AdditiveExpression	OP_POSUPTO - OP_UPTO		906306	1		-			
ANR	906516	Identifier	OP_POSUPTO		906306	0					
ANR	906517	Identifier	OP_UPTO		906306	1					
ANR	906518	BreakStatement	break ;	3717:8:117779:117784	906306	20	True				
ANR	906519	Label	case OP_MINUPTO :	3719:8:117795:117810	906306	21	True				
ANR	906520	Identifier	OP_MINUPTO		906306	0					
ANR	906521	ExpressionStatement	* code += OP_POSUPTO - OP_MINUPTO	3720:8:117820:117852	906306	22	True				
ANR	906522	AssignmentExpression	* code += OP_POSUPTO - OP_MINUPTO		906306	0		+=			
ANR	906523	UnaryOperationExpression	* code		906306	0					
ANR	906524	UnaryOperator	*		906306	0					
ANR	906525	Identifier	code		906306	1					
ANR	906526	AdditiveExpression	OP_POSUPTO - OP_MINUPTO		906306	1		-			
ANR	906527	Identifier	OP_POSUPTO		906306	0					
ANR	906528	Identifier	OP_MINUPTO		906306	1					
ANR	906529	BreakStatement	break ;	3721:8:117862:117867	906306	23	True				
ANR	906530	ExpressionStatement	c = * code	3724:4:117891:117900	906306	5	True				
ANR	906531	AssignmentExpression	c = * code		906306	0		=			
ANR	906532	Identifier	c		906306	0					
ANR	906533	UnaryOperationExpression	* code		906306	1					
ANR	906534	UnaryOperator	*		906306	0					
ANR	906535	Identifier	code		906306	1					
ANR	906536	ElseStatement	else		906306	0					
ANR	906537	IfStatement	if ( c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS )		906306	0					
ANR	906538	Condition	c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS	3726:11:117919:117967	906306	0	True				
ANR	906539	OrExpression	c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS		906306	0		||			
ANR	906540	EqualityExpression	c == OP_CLASS		906306	0		==			
ANR	906541	Identifier	c		906306	0					
ANR	906542	Identifier	OP_CLASS		906306	1					
ANR	906543	OrExpression	c == OP_NCLASS || c == OP_XCLASS		906306	1		||			
ANR	906544	EqualityExpression	c == OP_NCLASS		906306	0		==			
ANR	906545	Identifier	c		906306	0					
ANR	906546	Identifier	OP_NCLASS		906306	1					
ANR	906547	EqualityExpression	c == OP_XCLASS		906306	1		==			
ANR	906548	Identifier	c		906306	0					
ANR	906549	Identifier	OP_XCLASS		906306	1					
ANR	906550	CompoundStatement		68:4:1670:1670	906306	1					
ANR	906551	IfStatement	if ( c == OP_XCLASS )		906306	0					
ANR	906552	Condition	c == OP_XCLASS	3729:8:118034:118047	906306	0	True				
ANR	906553	EqualityExpression	c == OP_XCLASS		906306	0		==			
ANR	906554	Identifier	c		906306	0					
ANR	906555	Identifier	OP_XCLASS		906306	1					
ANR	906556	ExpressionStatement	"repeat_opcode = code + GET ( code , 1 )"	3730:6:118056:118091	906306	1	True				
ANR	906557	AssignmentExpression	"repeat_opcode = code + GET ( code , 1 )"		906306	0		=			
ANR	906558	Identifier	repeat_opcode		906306	0					
ANR	906559	AdditiveExpression	"code + GET ( code , 1 )"		906306	1		+			
ANR	906560	Identifier	code		906306	0					
ANR	906561	CallExpression	"GET ( code , 1 )"		906306	1					
ANR	906562	Callee	GET		906306	0					
ANR	906563	Identifier	GET		906306	0					
ANR	906564	ArgumentList	code		906306	1					
ANR	906565	Argument	code		906306	0					
ANR	906566	Identifier	code		906306	0					
ANR	906567	Argument	1		906306	1					
ANR	906568	PrimaryExpression	1		906306	0					
ANR	906569	ElseStatement	else		906306	0					
ANR	906570	ExpressionStatement	repeat_opcode = code + 1 + ( 32 / sizeof ( pcre_uchar ) )	3733:6:118115:118167	906306	0	True				
ANR	906571	AssignmentExpression	repeat_opcode = code + 1 + ( 32 / sizeof ( pcre_uchar ) )		906306	0		=			
ANR	906572	Identifier	repeat_opcode		906306	0					
ANR	906573	AdditiveExpression	code + 1 + ( 32 / sizeof ( pcre_uchar ) )		906306	1		+			
ANR	906574	Identifier	code		906306	0					
ANR	906575	AdditiveExpression	1 + ( 32 / sizeof ( pcre_uchar ) )		906306	1		+			
ANR	906576	PrimaryExpression	1		906306	0					
ANR	906577	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		906306	1		/			
ANR	906578	PrimaryExpression	32		906306	0					
ANR	906579	SizeofExpression	sizeof ( pcre_uchar )		906306	1					
ANR	906580	Sizeof	sizeof		906306	0					
ANR	906581	SizeofOperand	pcre_uchar		906306	1					
ANR	906582	ExpressionStatement	c = * repeat_opcode	3735:4:118174:118192	906306	1	True				
ANR	906583	AssignmentExpression	c = * repeat_opcode		906306	0		=			
ANR	906584	Identifier	c		906306	0					
ANR	906585	UnaryOperationExpression	* repeat_opcode		906306	1					
ANR	906586	UnaryOperator	*		906306	0					
ANR	906587	Identifier	repeat_opcode		906306	1					
ANR	906588	IfStatement	if ( c >= OP_CRSTAR && c <= OP_CRMINRANGE )		906306	2					
ANR	906589	Condition	c >= OP_CRSTAR && c <= OP_CRMINRANGE	3736:8:118202:118237	906306	0	True				
ANR	906590	AndExpression	c >= OP_CRSTAR && c <= OP_CRMINRANGE		906306	0		&&			
ANR	906591	RelationalExpression	c >= OP_CRSTAR		906306	0		>=			
ANR	906592	Identifier	c		906306	0					
ANR	906593	Identifier	OP_CRSTAR		906306	1					
ANR	906594	RelationalExpression	c <= OP_CRMINRANGE		906306	1		<=			
ANR	906595	Identifier	c		906306	0					
ANR	906596	Identifier	OP_CRMINRANGE		906306	1					
ANR	906597	CompoundStatement		78:6:1942:1942	906306	1					
ANR	906598	ExpressionStatement	"end = get_chr_property_list ( code , utf , cd -> fcc , list )"	3739:6:118288:118341	906306	0	True				
ANR	906599	AssignmentExpression	"end = get_chr_property_list ( code , utf , cd -> fcc , list )"		906306	0		=			
ANR	906600	Identifier	end		906306	0					
ANR	906601	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		906306	1					
ANR	906602	Callee	get_chr_property_list		906306	0					
ANR	906603	Identifier	get_chr_property_list		906306	0					
ANR	906604	ArgumentList	code		906306	1					
ANR	906605	Argument	code		906306	0					
ANR	906606	Identifier	code		906306	0					
ANR	906607	Argument	utf		906306	1					
ANR	906608	Identifier	utf		906306	0					
ANR	906609	Argument	cd -> fcc		906306	2					
ANR	906610	PtrMemberAccess	cd -> fcc		906306	0					
ANR	906611	Identifier	cd		906306	0					
ANR	906612	Identifier	fcc		906306	1					
ANR	906613	Argument	list		906306	3					
ANR	906614	Identifier	list		906306	0					
ANR	906615	ExpressionStatement	list [ 1 ] = ( c & 1 ) == 0	3741:6:118350:118372	906306	1	True				
ANR	906616	AssignmentExpression	list [ 1 ] = ( c & 1 ) == 0		906306	0		=			
ANR	906617	ArrayIndexing	list [ 1 ]		906306	0					
ANR	906618	Identifier	list		906306	0					
ANR	906619	PrimaryExpression	1		906306	1					
ANR	906620	EqualityExpression	( c & 1 ) == 0		906306	1		==			
ANR	906621	BitAndExpression	c & 1		906306	0		&			
ANR	906622	Identifier	c		906306	0					
ANR	906623	PrimaryExpression	1		906306	1					
ANR	906624	PrimaryExpression	0		906306	1					
ANR	906625	ExpressionStatement	rec_limit = 1000	3743:6:118381:118397	906306	2	True				
ANR	906626	AssignmentExpression	rec_limit = 1000		906306	0		=			
ANR	906627	Identifier	rec_limit		906306	0					
ANR	906628	PrimaryExpression	1000		906306	1					
ANR	906629	IfStatement	"if ( compare_opcodes ( end , utf , cd , list , end , & rec_limit ) )"		906306	3					
ANR	906630	Condition	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"	3744:10:118409:118460	906306	0	True				
ANR	906631	CallExpression	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		906306	0					
ANR	906632	Callee	compare_opcodes		906306	0					
ANR	906633	Identifier	compare_opcodes		906306	0					
ANR	906634	ArgumentList	end		906306	1					
ANR	906635	Argument	end		906306	0					
ANR	906636	Identifier	end		906306	0					
ANR	906637	Argument	utf		906306	1					
ANR	906638	Identifier	utf		906306	0					
ANR	906639	Argument	cd		906306	2					
ANR	906640	Identifier	cd		906306	0					
ANR	906641	Argument	list		906306	3					
ANR	906642	Identifier	list		906306	0					
ANR	906643	Argument	end		906306	4					
ANR	906644	Identifier	end		906306	0					
ANR	906645	Argument	& rec_limit		906306	5					
ANR	906646	UnaryOperationExpression	& rec_limit		906306	0					
ANR	906647	UnaryOperator	&		906306	0					
ANR	906648	Identifier	rec_limit		906306	1					
ANR	906649	CompoundStatement		86:8:2167:2167	906306	1					
ANR	906650	SwitchStatement	switch ( c )		906306	0					
ANR	906651	Condition	c	3746:16:118489:118489	906306	0	True				
ANR	906652	Identifier	c		906306	0					
ANR	906653	CompoundStatement		88:10:2198:2198	906306	1					
ANR	906654	Label	case OP_CRSTAR :	3748:10:118514:118528	906306	0	True				
ANR	906655	Identifier	OP_CRSTAR		906306	0					
ANR	906656	Label	case OP_CRMINSTAR :	3749:10:118540:118557	906306	1	True				
ANR	906657	Identifier	OP_CRMINSTAR		906306	0					
ANR	906658	ExpressionStatement	* repeat_opcode = OP_CRPOSSTAR	3750:10:118569:118598	906306	2	True				
ANR	906659	AssignmentExpression	* repeat_opcode = OP_CRPOSSTAR		906306	0		=			
ANR	906660	UnaryOperationExpression	* repeat_opcode		906306	0					
ANR	906661	UnaryOperator	*		906306	0					
ANR	906662	Identifier	repeat_opcode		906306	1					
ANR	906663	Identifier	OP_CRPOSSTAR		906306	1					
ANR	906664	BreakStatement	break ;	3751:10:118610:118615	906306	3	True				
ANR	906665	Label	case OP_CRPLUS :	3753:10:118628:118642	906306	4	True				
ANR	906666	Identifier	OP_CRPLUS		906306	0					
ANR	906667	Label	case OP_CRMINPLUS :	3754:10:118654:118671	906306	5	True				
ANR	906668	Identifier	OP_CRMINPLUS		906306	0					
ANR	906669	ExpressionStatement	* repeat_opcode = OP_CRPOSPLUS	3755:10:118683:118712	906306	6	True				
ANR	906670	AssignmentExpression	* repeat_opcode = OP_CRPOSPLUS		906306	0		=			
ANR	906671	UnaryOperationExpression	* repeat_opcode		906306	0					
ANR	906672	UnaryOperator	*		906306	0					
ANR	906673	Identifier	repeat_opcode		906306	1					
ANR	906674	Identifier	OP_CRPOSPLUS		906306	1					
ANR	906675	BreakStatement	break ;	3756:10:118724:118729	906306	7	True				
ANR	906676	Label	case OP_CRQUERY :	3758:10:118742:118757	906306	8	True				
ANR	906677	Identifier	OP_CRQUERY		906306	0					
ANR	906678	Label	case OP_CRMINQUERY :	3759:10:118769:118787	906306	9	True				
ANR	906679	Identifier	OP_CRMINQUERY		906306	0					
ANR	906680	ExpressionStatement	* repeat_opcode = OP_CRPOSQUERY	3760:10:118799:118829	906306	10	True				
ANR	906681	AssignmentExpression	* repeat_opcode = OP_CRPOSQUERY		906306	0		=			
ANR	906682	UnaryOperationExpression	* repeat_opcode		906306	0					
ANR	906683	UnaryOperator	*		906306	0					
ANR	906684	Identifier	repeat_opcode		906306	1					
ANR	906685	Identifier	OP_CRPOSQUERY		906306	1					
ANR	906686	BreakStatement	break ;	3761:10:118841:118846	906306	11	True				
ANR	906687	Label	case OP_CRRANGE :	3763:10:118859:118874	906306	12	True				
ANR	906688	Identifier	OP_CRRANGE		906306	0					
ANR	906689	Label	case OP_CRMINRANGE :	3764:10:118886:118904	906306	13	True				
ANR	906690	Identifier	OP_CRMINRANGE		906306	0					
ANR	906691	ExpressionStatement	* repeat_opcode = OP_CRPOSRANGE	3765:10:118916:118946	906306	14	True				
ANR	906692	AssignmentExpression	* repeat_opcode = OP_CRPOSRANGE		906306	0		=			
ANR	906693	UnaryOperationExpression	* repeat_opcode		906306	0					
ANR	906694	UnaryOperator	*		906306	0					
ANR	906695	Identifier	repeat_opcode		906306	1					
ANR	906696	Identifier	OP_CRPOSRANGE		906306	1					
ANR	906697	BreakStatement	break ;	3766:10:118958:118963	906306	15	True				
ANR	906698	ExpressionStatement	c = * code	3770:4:118999:119008	906306	3	True				
ANR	906699	AssignmentExpression	c = * code		906306	0		=			
ANR	906700	Identifier	c		906306	0					
ANR	906701	UnaryOperationExpression	* code		906306	1					
ANR	906702	UnaryOperator	*		906306	0					
ANR	906703	Identifier	code		906306	1					
ANR	906704	SwitchStatement	switch ( c )		906306	3					
ANR	906705	Condition	c	3773:9:119026:119026	906306	0	True				
ANR	906706	Identifier	c		906306	0					
ANR	906707	CompoundStatement		115:4:2729:2729	906306	1					
ANR	906708	Label	case OP_END :	3775:4:119039:119050	906306	0	True				
ANR	906709	Identifier	OP_END		906306	0					
ANR	906710	ReturnStatement	return ;	3776:4:119056:119062	906306	1	True				
ANR	906711	Label	case OP_TYPESTAR :	3778:4:119069:119085	906306	2	True				
ANR	906712	Identifier	OP_TYPESTAR		906306	0					
ANR	906713	Label	case OP_TYPEMINSTAR :	3779:4:119091:119110	906306	3	True				
ANR	906714	Identifier	OP_TYPEMINSTAR		906306	0					
ANR	906715	Label	case OP_TYPEPLUS :	3780:4:119116:119132	906306	4	True				
ANR	906716	Identifier	OP_TYPEPLUS		906306	0					
ANR	906717	Label	case OP_TYPEMINPLUS :	3781:4:119138:119157	906306	5	True				
ANR	906718	Identifier	OP_TYPEMINPLUS		906306	0					
ANR	906719	Label	case OP_TYPEQUERY :	3782:4:119163:119180	906306	6	True				
ANR	906720	Identifier	OP_TYPEQUERY		906306	0					
ANR	906721	Label	case OP_TYPEMINQUERY :	3783:4:119186:119206	906306	7	True				
ANR	906722	Identifier	OP_TYPEMINQUERY		906306	0					
ANR	906723	Label	case OP_TYPEPOSSTAR :	3784:4:119212:119231	906306	8	True				
ANR	906724	Identifier	OP_TYPEPOSSTAR		906306	0					
ANR	906725	Label	case OP_TYPEPOSPLUS :	3785:4:119237:119256	906306	9	True				
ANR	906726	Identifier	OP_TYPEPOSPLUS		906306	0					
ANR	906727	Label	case OP_TYPEPOSQUERY :	3786:4:119262:119282	906306	10	True				
ANR	906728	Identifier	OP_TYPEPOSQUERY		906306	0					
ANR	906729	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		906306	11					
ANR	906730	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	3787:8:119292:119334	906306	0	True				
ANR	906731	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		906306	0		||			
ANR	906732	EqualityExpression	code [ 1 ] == OP_PROP		906306	0		==			
ANR	906733	ArrayIndexing	code [ 1 ]		906306	0					
ANR	906734	Identifier	code		906306	0					
ANR	906735	PrimaryExpression	1		906306	1					
ANR	906736	Identifier	OP_PROP		906306	1					
ANR	906737	EqualityExpression	code [ 1 ] == OP_NOTPROP		906306	1		==			
ANR	906738	ArrayIndexing	code [ 1 ]		906306	0					
ANR	906739	Identifier	code		906306	0					
ANR	906740	PrimaryExpression	1		906306	1					
ANR	906741	Identifier	OP_NOTPROP		906306	1					
ANR	906742	ExpressionStatement	code += 2	3787:53:119337:119346	906306	1	True				
ANR	906743	AssignmentExpression	code += 2		906306	0		+=			
ANR	906744	Identifier	code		906306	0					
ANR	906745	PrimaryExpression	2		906306	1					
ANR	906746	BreakStatement	break ;	3788:4:119352:119357	906306	12	True				
ANR	906747	Label	case OP_TYPEUPTO :	3790:4:119364:119380	906306	13	True				
ANR	906748	Identifier	OP_TYPEUPTO		906306	0					
ANR	906749	Label	case OP_TYPEMINUPTO :	3791:4:119386:119405	906306	14	True				
ANR	906750	Identifier	OP_TYPEMINUPTO		906306	0					
ANR	906751	Label	case OP_TYPEEXACT :	3792:4:119411:119428	906306	15	True				
ANR	906752	Identifier	OP_TYPEEXACT		906306	0					
ANR	906753	Label	case OP_TYPEPOSUPTO :	3793:4:119434:119453	906306	16	True				
ANR	906754	Identifier	OP_TYPEPOSUPTO		906306	0					
ANR	906755	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		906306	17					
ANR	906756	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	3794:8:119463:119529	906306	0	True				
ANR	906757	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		906306	0		||			
ANR	906758	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		906306	0		==			
ANR	906759	ArrayIndexing	code [ 1 + IMM2_SIZE ]		906306	0					
ANR	906760	Identifier	code		906306	0					
ANR	906761	AdditiveExpression	1 + IMM2_SIZE		906306	1		+			
ANR	906762	PrimaryExpression	1		906306	0					
ANR	906763	Identifier	IMM2_SIZE		906306	1					
ANR	906764	Identifier	OP_PROP		906306	1					
ANR	906765	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		906306	1		==			
ANR	906766	ArrayIndexing	code [ 1 + IMM2_SIZE ]		906306	0					
ANR	906767	Identifier	code		906306	0					
ANR	906768	AdditiveExpression	1 + IMM2_SIZE		906306	1		+			
ANR	906769	PrimaryExpression	1		906306	0					
ANR	906770	Identifier	IMM2_SIZE		906306	1					
ANR	906771	Identifier	OP_NOTPROP		906306	1					
ANR	906772	ExpressionStatement	code += 2	3795:6:119538:119547	906306	1	True				
ANR	906773	AssignmentExpression	code += 2		906306	0		+=			
ANR	906774	Identifier	code		906306	0					
ANR	906775	PrimaryExpression	2		906306	1					
ANR	906776	BreakStatement	break ;	3796:4:119553:119558	906306	18	True				
ANR	906777	Label	case OP_XCLASS :	3799:4:119615:119629	906306	19	True				
ANR	906778	Identifier	OP_XCLASS		906306	0					
ANR	906779	ExpressionStatement	"code += GET ( code , 1 )"	3800:4:119635:119655	906306	20	True				
ANR	906780	AssignmentExpression	"code += GET ( code , 1 )"		906306	0		+=			
ANR	906781	Identifier	code		906306	0					
ANR	906782	CallExpression	"GET ( code , 1 )"		906306	1					
ANR	906783	Callee	GET		906306	0					
ANR	906784	Identifier	GET		906306	0					
ANR	906785	ArgumentList	code		906306	1					
ANR	906786	Argument	code		906306	0					
ANR	906787	Identifier	code		906306	0					
ANR	906788	Argument	1		906306	1					
ANR	906789	PrimaryExpression	1		906306	0					
ANR	906790	BreakStatement	break ;	3801:4:119661:119666	906306	21	True				
ANR	906791	Label	case OP_MARK :	3804:4:119680:119692	906306	22	True				
ANR	906792	Identifier	OP_MARK		906306	0					
ANR	906793	Label	case OP_PRUNE_ARG :	3805:4:119698:119715	906306	23	True				
ANR	906794	Identifier	OP_PRUNE_ARG		906306	0					
ANR	906795	Label	case OP_SKIP_ARG :	3806:4:119721:119737	906306	24	True				
ANR	906796	Identifier	OP_SKIP_ARG		906306	0					
ANR	906797	Label	case OP_THEN_ARG :	3807:4:119743:119759	906306	25	True				
ANR	906798	Identifier	OP_THEN_ARG		906306	0					
ANR	906799	ExpressionStatement	code += code [ 1 ]	3808:4:119765:119780	906306	26	True				
ANR	906800	AssignmentExpression	code += code [ 1 ]		906306	0		+=			
ANR	906801	Identifier	code		906306	0					
ANR	906802	ArrayIndexing	code [ 1 ]		906306	1					
ANR	906803	Identifier	code		906306	0					
ANR	906804	PrimaryExpression	1		906306	1					
ANR	906805	BreakStatement	break ;	3809:4:119786:119791	906306	27	True				
ANR	906806	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3814:2:119850:119877	906306	4	True				
ANR	906807	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		906306	0		+=			
ANR	906808	Identifier	code		906306	0					
ANR	906809	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		906306	1					
ANR	906810	CallExpression	PRIV ( OP_lengths )		906306	0					
ANR	906811	Callee	PRIV		906306	0					
ANR	906812	Identifier	PRIV		906306	0					
ANR	906813	ArgumentList	OP_lengths		906306	1					
ANR	906814	Argument	OP_lengths		906306	0					
ANR	906815	Identifier	OP_lengths		906306	0					
ANR	906816	Identifier	c		906306	1					
ANR	906817	IfStatement	if ( utf )		906306	5					
ANR	906818	Condition	utf	3821:6:120134:120136	906306	0	True				
ANR	906819	Identifier	utf		906306	0					
ANR	906820	SwitchStatement	switch ( c )		906306	1					
ANR	906821	Condition	c	3821:18:120146:120146	906306	0	True				
ANR	906822	Identifier	c		906306	0					
ANR	906823	CompoundStatement		163:4:3849:3849	906306	1					
ANR	906824	Label	case OP_CHAR :	3823:4:120159:120171	906306	0	True				
ANR	906825	Identifier	OP_CHAR		906306	0					
ANR	906826	Label	case OP_CHARI :	3824:4:120177:120190	906306	1	True				
ANR	906827	Identifier	OP_CHARI		906306	0					
ANR	906828	Label	case OP_NOT :	3825:4:120196:120207	906306	2	True				
ANR	906829	Identifier	OP_NOT		906306	0					
ANR	906830	Label	case OP_NOTI :	3826:4:120213:120225	906306	3	True				
ANR	906831	Identifier	OP_NOTI		906306	0					
ANR	906832	Label	case OP_STAR :	3827:4:120231:120243	906306	4	True				
ANR	906833	Identifier	OP_STAR		906306	0					
ANR	906834	Label	case OP_MINSTAR :	3828:4:120249:120264	906306	5	True				
ANR	906835	Identifier	OP_MINSTAR		906306	0					
ANR	906836	Label	case OP_PLUS :	3829:4:120270:120282	906306	6	True				
ANR	906837	Identifier	OP_PLUS		906306	0					
ANR	906838	Label	case OP_MINPLUS :	3830:4:120288:120303	906306	7	True				
ANR	906839	Identifier	OP_MINPLUS		906306	0					
ANR	906840	Label	case OP_QUERY :	3831:4:120309:120322	906306	8	True				
ANR	906841	Identifier	OP_QUERY		906306	0					
ANR	906842	Label	case OP_MINQUERY :	3832:4:120328:120344	906306	9	True				
ANR	906843	Identifier	OP_MINQUERY		906306	0					
ANR	906844	Label	case OP_UPTO :	3833:4:120350:120362	906306	10	True				
ANR	906845	Identifier	OP_UPTO		906306	0					
ANR	906846	Label	case OP_MINUPTO :	3834:4:120368:120383	906306	11	True				
ANR	906847	Identifier	OP_MINUPTO		906306	0					
ANR	906848	Label	case OP_EXACT :	3835:4:120389:120402	906306	12	True				
ANR	906849	Identifier	OP_EXACT		906306	0					
ANR	906850	Label	case OP_POSSTAR :	3836:4:120408:120423	906306	13	True				
ANR	906851	Identifier	OP_POSSTAR		906306	0					
ANR	906852	Label	case OP_POSPLUS :	3837:4:120429:120444	906306	14	True				
ANR	906853	Identifier	OP_POSPLUS		906306	0					
ANR	906854	Label	case OP_POSQUERY :	3838:4:120450:120466	906306	15	True				
ANR	906855	Identifier	OP_POSQUERY		906306	0					
ANR	906856	Label	case OP_POSUPTO :	3839:4:120472:120487	906306	16	True				
ANR	906857	Identifier	OP_POSUPTO		906306	0					
ANR	906858	Label	case OP_STARI :	3840:4:120493:120506	906306	17	True				
ANR	906859	Identifier	OP_STARI		906306	0					
ANR	906860	Label	case OP_MINSTARI :	3841:4:120512:120528	906306	18	True				
ANR	906861	Identifier	OP_MINSTARI		906306	0					
ANR	906862	Label	case OP_PLUSI :	3842:4:120534:120547	906306	19	True				
ANR	906863	Identifier	OP_PLUSI		906306	0					
ANR	906864	Label	case OP_MINPLUSI :	3843:4:120553:120569	906306	20	True				
ANR	906865	Identifier	OP_MINPLUSI		906306	0					
ANR	906866	Label	case OP_QUERYI :	3844:4:120575:120589	906306	21	True				
ANR	906867	Identifier	OP_QUERYI		906306	0					
ANR	906868	Label	case OP_MINQUERYI :	3845:4:120595:120612	906306	22	True				
ANR	906869	Identifier	OP_MINQUERYI		906306	0					
ANR	906870	Label	case OP_UPTOI :	3846:4:120618:120631	906306	23	True				
ANR	906871	Identifier	OP_UPTOI		906306	0					
ANR	906872	Label	case OP_MINUPTOI :	3847:4:120637:120653	906306	24	True				
ANR	906873	Identifier	OP_MINUPTOI		906306	0					
ANR	906874	Label	case OP_EXACTI :	3848:4:120659:120673	906306	25	True				
ANR	906875	Identifier	OP_EXACTI		906306	0					
ANR	906876	Label	case OP_POSSTARI :	3849:4:120679:120695	906306	26	True				
ANR	906877	Identifier	OP_POSSTARI		906306	0					
ANR	906878	Label	case OP_POSPLUSI :	3850:4:120701:120717	906306	27	True				
ANR	906879	Identifier	OP_POSPLUSI		906306	0					
ANR	906880	Label	case OP_POSQUERYI :	3851:4:120723:120740	906306	28	True				
ANR	906881	Identifier	OP_POSQUERYI		906306	0					
ANR	906882	Label	case OP_POSUPTOI :	3852:4:120746:120762	906306	29	True				
ANR	906883	Identifier	OP_POSUPTOI		906306	0					
ANR	906884	Label	case OP_NOTSTAR :	3853:4:120768:120783	906306	30	True				
ANR	906885	Identifier	OP_NOTSTAR		906306	0					
ANR	906886	Label	case OP_NOTMINSTAR :	3854:4:120789:120807	906306	31	True				
ANR	906887	Identifier	OP_NOTMINSTAR		906306	0					
ANR	906888	Label	case OP_NOTPLUS :	3855:4:120813:120828	906306	32	True				
ANR	906889	Identifier	OP_NOTPLUS		906306	0					
ANR	906890	Label	case OP_NOTMINPLUS :	3856:4:120834:120852	906306	33	True				
ANR	906891	Identifier	OP_NOTMINPLUS		906306	0					
ANR	906892	Label	case OP_NOTQUERY :	3857:4:120858:120874	906306	34	True				
ANR	906893	Identifier	OP_NOTQUERY		906306	0					
ANR	906894	Label	case OP_NOTMINQUERY :	3858:4:120880:120899	906306	35	True				
ANR	906895	Identifier	OP_NOTMINQUERY		906306	0					
ANR	906896	Label	case OP_NOTUPTO :	3859:4:120905:120920	906306	36	True				
ANR	906897	Identifier	OP_NOTUPTO		906306	0					
ANR	906898	Label	case OP_NOTMINUPTO :	3860:4:120926:120944	906306	37	True				
ANR	906899	Identifier	OP_NOTMINUPTO		906306	0					
ANR	906900	Label	case OP_NOTEXACT :	3861:4:120950:120966	906306	38	True				
ANR	906901	Identifier	OP_NOTEXACT		906306	0					
ANR	906902	Label	case OP_NOTPOSSTAR :	3862:4:120972:120990	906306	39	True				
ANR	906903	Identifier	OP_NOTPOSSTAR		906306	0					
ANR	906904	Label	case OP_NOTPOSPLUS :	3863:4:120996:121014	906306	40	True				
ANR	906905	Identifier	OP_NOTPOSPLUS		906306	0					
ANR	906906	Label	case OP_NOTPOSQUERY :	3864:4:121020:121039	906306	41	True				
ANR	906907	Identifier	OP_NOTPOSQUERY		906306	0					
ANR	906908	Label	case OP_NOTPOSUPTO :	3865:4:121045:121063	906306	42	True				
ANR	906909	Identifier	OP_NOTPOSUPTO		906306	0					
ANR	906910	Label	case OP_NOTSTARI :	3866:4:121069:121085	906306	43	True				
ANR	906911	Identifier	OP_NOTSTARI		906306	0					
ANR	906912	Label	case OP_NOTMINSTARI :	3867:4:121091:121110	906306	44	True				
ANR	906913	Identifier	OP_NOTMINSTARI		906306	0					
ANR	906914	Label	case OP_NOTPLUSI :	3868:4:121116:121132	906306	45	True				
ANR	906915	Identifier	OP_NOTPLUSI		906306	0					
ANR	906916	Label	case OP_NOTMINPLUSI :	3869:4:121138:121157	906306	46	True				
ANR	906917	Identifier	OP_NOTMINPLUSI		906306	0					
ANR	906918	Label	case OP_NOTQUERYI :	3870:4:121163:121180	906306	47	True				
ANR	906919	Identifier	OP_NOTQUERYI		906306	0					
ANR	906920	Label	case OP_NOTMINQUERYI :	3871:4:121186:121206	906306	48	True				
ANR	906921	Identifier	OP_NOTMINQUERYI		906306	0					
ANR	906922	Label	case OP_NOTUPTOI :	3872:4:121212:121228	906306	49	True				
ANR	906923	Identifier	OP_NOTUPTOI		906306	0					
ANR	906924	Label	case OP_NOTMINUPTOI :	3873:4:121234:121253	906306	50	True				
ANR	906925	Identifier	OP_NOTMINUPTOI		906306	0					
ANR	906926	Label	case OP_NOTEXACTI :	3874:4:121259:121276	906306	51	True				
ANR	906927	Identifier	OP_NOTEXACTI		906306	0					
ANR	906928	Label	case OP_NOTPOSSTARI :	3875:4:121282:121301	906306	52	True				
ANR	906929	Identifier	OP_NOTPOSSTARI		906306	0					
ANR	906930	Label	case OP_NOTPOSPLUSI :	3876:4:121307:121326	906306	53	True				
ANR	906931	Identifier	OP_NOTPOSPLUSI		906306	0					
ANR	906932	Label	case OP_NOTPOSQUERYI :	3877:4:121332:121352	906306	54	True				
ANR	906933	Identifier	OP_NOTPOSQUERYI		906306	0					
ANR	906934	Label	case OP_NOTPOSUPTOI :	3878:4:121358:121377	906306	55	True				
ANR	906935	Identifier	OP_NOTPOSUPTOI		906306	0					
ANR	906936	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		906306	56					
ANR	906937	Condition	HAS_EXTRALEN ( code [ - 1 ] )	3879:8:121387:121408	906306	0	True				
ANR	906938	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		906306	0					
ANR	906939	Callee	HAS_EXTRALEN		906306	0					
ANR	906940	Identifier	HAS_EXTRALEN		906306	0					
ANR	906941	ArgumentList	code [ - 1 ]		906306	1					
ANR	906942	Argument	code [ - 1 ]		906306	0					
ANR	906943	ArrayIndexing	code [ - 1 ]		906306	0					
ANR	906944	Identifier	code		906306	0					
ANR	906945	UnaryOperationExpression	- 1		906306	1					
ANR	906946	UnaryOperator	-		906306	0					
ANR	906947	PrimaryExpression	1		906306	1					
ANR	906948	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	3879:32:121411:121441	906306	1	True				
ANR	906949	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		906306	0		+=			
ANR	906950	Identifier	code		906306	0					
ANR	906951	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		906306	1					
ANR	906952	Callee	GET_EXTRALEN		906306	0					
ANR	906953	Identifier	GET_EXTRALEN		906306	0					
ANR	906954	ArgumentList	code [ - 1 ]		906306	1					
ANR	906955	Argument	code [ - 1 ]		906306	0					
ANR	906956	ArrayIndexing	code [ - 1 ]		906306	0					
ANR	906957	Identifier	code		906306	0					
ANR	906958	UnaryOperationExpression	- 1		906306	1					
ANR	906959	UnaryOperator	-		906306	0					
ANR	906960	PrimaryExpression	1		906306	1					
ANR	906961	BreakStatement	break ;	3880:4:121447:121452	906306	57	True				
ANR	906962	ReturnType	static void		906306	1					
ANR	906963	Identifier	auto_possessify		906306	2					
ANR	906964	ParameterList	"pcre_uchar * code , BOOL utf , const compile_data * cd"		906306	3					
ANR	906965	Parameter	pcre_uchar * code	3659:16:116251:116266	906306	0	True				
ANR	906966	ParameterType	pcre_uchar *		906306	0					
ANR	906967	Identifier	code		906306	1					
ANR	906968	Parameter	BOOL utf	3659:34:116269:116276	906306	1	True				
ANR	906969	ParameterType	BOOL		906306	0					
ANR	906970	Identifier	utf		906306	1					
ANR	906971	Parameter	const compile_data * cd	3659:44:116279:116300	906306	2	True				
ANR	906972	ParameterType	const compile_data *		906306	0					
ANR	906973	Identifier	cd		906306	1					
ANR	906974	CFGEntryNode	ENTRY		906306		True				
ANR	906975	CFGExitNode	EXIT		906306		True				
ANR	906976	InfiniteForNode	true		906306		True				
ANR	906977	Symbol	compare_opcodes		906306						
ANR	906978	Symbol	OP_STAR		906306						
ANR	906979	Symbol	cd -> fcc		906306						
ANR	906980	Symbol	* cd		906306						
ANR	906981	Symbol	* IMM2_SIZE		906306						
ANR	906982	Symbol	OP_UPTO		906306						
ANR	906983	Symbol	OP_POSQUERY		906306						
ANR	906984	Symbol	PRIV		906306						
ANR	906985	Symbol	OP_CRPOSQUERY		906306						
ANR	906986	Symbol	HAS_EXTRALEN		906306						
ANR	906987	Symbol	NULL		906306						
ANR	906988	Symbol	* repeat_opcode		906306						
ANR	906989	Symbol	OP_CLASS		906306						
ANR	906990	Symbol	utf		906306						
ANR	906991	Symbol	OP_CRMINRANGE		906306						
ANR	906992	Symbol	list		906306						
ANR	906993	Symbol	OP_CRPOSPLUS		906306						
ANR	906994	Symbol	OP_MINPLUS		906306						
ANR	906995	Symbol	OP_NCLASS		906306						
ANR	906996	Symbol	OP_CRSTAR		906306						
ANR	906997	Symbol	OP_TABLE_LENGTH		906306						
ANR	906998	Symbol	GET		906306						
ANR	906999	Symbol	OP_lengths		906306						
ANR	907000	Symbol	OP_POSUPTO		906306						
ANR	907001	Symbol	* code		906306						
ANR	907002	Symbol	OP_POSSTAR		906306						
ANR	907003	Symbol	code		906306						
ANR	907004	Symbol	OP_TYPEPOSUPTO		906306						
ANR	907005	Symbol	OP_PLUS		906306						
ANR	907006	Symbol	OP_MINUPTO		906306						
ANR	907007	Symbol	get_repeat_base		906306						
ANR	907008	Symbol	OP_MINQUERY		906306						
ANR	907009	Symbol	repeat_opcode		906306						
ANR	907010	Symbol	rec_limit		906306						
ANR	907011	Symbol	OP_CRPOSRANGE		906306						
ANR	907012	Symbol	OP_CRPOSSTAR		906306						
ANR	907013	Symbol	GET_EXTRALEN		906306						
ANR	907014	Symbol	end		906306						
ANR	907015	Symbol	cd		906306						
ANR	907016	Symbol	OP_QUERY		906306						
ANR	907017	Symbol	c		906306						
ANR	907018	Symbol	OP_POSPLUS		906306						
ANR	907019	Symbol	get_chr_property_list		906306						
ANR	907020	Symbol	IMM2_SIZE		906306						
ANR	907021	Symbol	& rec_limit		906306						
ANR	907022	Symbol	* c		906306						
ANR	907023	Symbol	OP_NOTPROP		906306						
ANR	907024	Symbol	OP_PROP		906306						
ANR	907025	Symbol	* PRIV		906306						
ANR	907026	Symbol	OP_XCLASS		906306						
ANR	907027	Symbol	* list		906306						
ANR	907028	Symbol	OP_MINSTAR		906306						
ANR	907029	Function	check_posix_syntax	3932:0:123609:124287							
ANR	907030	FunctionDef	"check_posix_syntax (const pcre_uchar * ptr , const pcre_uchar * * endptr)"		907029	0					
ANR	907031	CompoundStatement		3934:0:123690:124287	907029	0					
ANR	907032	IdentifierDeclStatement	pcre_uchar terminator ;	3935:0:123692:123713	907029	0	True				
ANR	907033	IdentifierDecl	terminator		907029	0					
ANR	907034	IdentifierDeclType	pcre_uchar		907029	0					
ANR	907035	Identifier	terminator		907029	1					
ANR	907036	ExpressionStatement	terminator = * ( ++ ptr )	3936:0:123772:123793	907029	1	True				
ANR	907037	AssignmentExpression	terminator = * ( ++ ptr )		907029	0		=			
ANR	907038	Identifier	terminator		907029	0					
ANR	907039	UnaryOperationExpression	* ( ++ ptr )		907029	1					
ANR	907040	UnaryOperator	*		907029	0					
ANR	907041	UnaryExpression	++ ptr		907029	1					
ANR	907042	IncDec	++		907029	0					
ANR	907043	Identifier	ptr		907029	1					
ANR	907044	ForStatement	for ( ++ ptr ; * ptr != CHAR_NULL ; ptr ++ )		907029	2					
ANR	907045	ForInit	++ ptr ;	3937:5:123857:123862	907029	0	True				
ANR	907046	UnaryExpression	++ ptr		907029	0					
ANR	907047	IncDec	++		907029	0					
ANR	907048	Identifier	ptr		907029	1					
ANR	907049	Condition	* ptr != CHAR_NULL	3937:12:123864:123880	907029	1	True				
ANR	907050	EqualityExpression	* ptr != CHAR_NULL		907029	0		!=			
ANR	907051	UnaryOperationExpression	* ptr		907029	0					
ANR	907052	UnaryOperator	*		907029	0					
ANR	907053	Identifier	ptr		907029	1					
ANR	907054	Identifier	CHAR_NULL		907029	1					
ANR	907055	PostIncDecOperationExpression	ptr ++	3937:31:123883:123887	907029	2	True				
ANR	907056	Identifier	ptr		907029	0					
ANR	907057	IncDec	++		907029	1					
ANR	907058	CompoundStatement		5:2:201:201	907029	3					
ANR	907059	IfStatement	if ( * ptr == CHAR_BACKSLASH && ( ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET || ptr [ 1 ] == CHAR_BACKSLASH ) )		907029	0					
ANR	907060	Condition	* ptr == CHAR_BACKSLASH && ( ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET || ptr [ 1 ] == CHAR_BACKSLASH )	3939:6:123900:124003	907029	0	True				
ANR	907061	AndExpression	* ptr == CHAR_BACKSLASH && ( ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET || ptr [ 1 ] == CHAR_BACKSLASH )		907029	0		&&			
ANR	907062	EqualityExpression	* ptr == CHAR_BACKSLASH		907029	0		==			
ANR	907063	UnaryOperationExpression	* ptr		907029	0					
ANR	907064	UnaryOperator	*		907029	0					
ANR	907065	Identifier	ptr		907029	1					
ANR	907066	Identifier	CHAR_BACKSLASH		907029	1					
ANR	907067	OrExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET || ptr [ 1 ] == CHAR_BACKSLASH		907029	1		||			
ANR	907068	EqualityExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		907029	0		==			
ANR	907069	ArrayIndexing	ptr [ 1 ]		907029	0					
ANR	907070	Identifier	ptr		907029	0					
ANR	907071	PrimaryExpression	1		907029	1					
ANR	907072	Identifier	CHAR_RIGHT_SQUARE_BRACKET		907029	1					
ANR	907073	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		907029	1		==			
ANR	907074	ArrayIndexing	ptr [ 1 ]		907029	0					
ANR	907075	Identifier	ptr		907029	0					
ANR	907076	PrimaryExpression	1		907029	1					
ANR	907077	Identifier	CHAR_BACKSLASH		907029	1					
ANR	907078	ExpressionStatement	ptr ++	3942:4:124010:124015	907029	1	True				
ANR	907079	PostIncDecOperationExpression	ptr ++		907029	0					
ANR	907080	Identifier	ptr		907029	0					
ANR	907081	IncDec	++		907029	1					
ANR	907082	ElseStatement	else		907029	0					
ANR	907083	IfStatement	if ( ( * ptr == CHAR_LEFT_SQUARE_BRACKET && ptr [ 1 ] == terminator ) || * ptr == CHAR_RIGHT_SQUARE_BRACKET )		907029	0					
ANR	907084	Condition	( * ptr == CHAR_LEFT_SQUARE_BRACKET && ptr [ 1 ] == terminator ) || * ptr == CHAR_RIGHT_SQUARE_BRACKET	3943:11:124028:124134	907029	0	True				
ANR	907085	OrExpression	( * ptr == CHAR_LEFT_SQUARE_BRACKET && ptr [ 1 ] == terminator ) || * ptr == CHAR_RIGHT_SQUARE_BRACKET		907029	0		||			
ANR	907086	AndExpression	* ptr == CHAR_LEFT_SQUARE_BRACKET && ptr [ 1 ] == terminator		907029	0		&&			
ANR	907087	EqualityExpression	* ptr == CHAR_LEFT_SQUARE_BRACKET		907029	0		==			
ANR	907088	UnaryOperationExpression	* ptr		907029	0					
ANR	907089	UnaryOperator	*		907029	0					
ANR	907090	Identifier	ptr		907029	1					
ANR	907091	Identifier	CHAR_LEFT_SQUARE_BRACKET		907029	1					
ANR	907092	EqualityExpression	ptr [ 1 ] == terminator		907029	1		==			
ANR	907093	ArrayIndexing	ptr [ 1 ]		907029	0					
ANR	907094	Identifier	ptr		907029	0					
ANR	907095	PrimaryExpression	1		907029	1					
ANR	907096	Identifier	terminator		907029	1					
ANR	907097	EqualityExpression	* ptr == CHAR_RIGHT_SQUARE_BRACKET		907029	1		==			
ANR	907098	UnaryOperationExpression	* ptr		907029	0					
ANR	907099	UnaryOperator	*		907029	0					
ANR	907100	Identifier	ptr		907029	1					
ANR	907101	Identifier	CHAR_RIGHT_SQUARE_BRACKET		907029	1					
ANR	907102	ReturnStatement	return FALSE ;	3944:47:124137:124149	907029	1	True				
ANR	907103	Identifier	FALSE		907029	0					
ANR	907104	ElseStatement	else		907029	0					
ANR	907105	IfStatement	if ( * ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET )		907029	0					
ANR	907106	Condition	* ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET	3945:11:124162:124218	907029	0	True				
ANR	907107	AndExpression	* ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		907029	0		&&			
ANR	907108	EqualityExpression	* ptr == terminator		907029	0		==			
ANR	907109	UnaryOperationExpression	* ptr		907029	0					
ANR	907110	UnaryOperator	*		907029	0					
ANR	907111	Identifier	ptr		907029	1					
ANR	907112	Identifier	terminator		907029	1					
ANR	907113	EqualityExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		907029	1		==			
ANR	907114	ArrayIndexing	ptr [ 1 ]		907029	0					
ANR	907115	Identifier	ptr		907029	0					
ANR	907116	PrimaryExpression	1		907029	1					
ANR	907117	Identifier	CHAR_RIGHT_SQUARE_BRACKET		907029	1					
ANR	907118	CompoundStatement		13:4:534:534	907029	1					
ANR	907119	ExpressionStatement	* endptr = ptr	3947:4:124231:124244	907029	0	True				
ANR	907120	AssignmentExpression	* endptr = ptr		907029	0		=			
ANR	907121	UnaryOperationExpression	* endptr		907029	0					
ANR	907122	UnaryOperator	*		907029	0					
ANR	907123	Identifier	endptr		907029	1					
ANR	907124	Identifier	ptr		907029	1					
ANR	907125	ReturnStatement	return TRUE ;	3948:4:124250:124261	907029	1	True				
ANR	907126	Identifier	TRUE		907029	0					
ANR	907127	ReturnStatement	return FALSE ;	3951:0:124273:124285	907029	3	True				
ANR	907128	Identifier	FALSE		907029	0					
ANR	907129	ReturnType	static BOOL		907029	1					
ANR	907130	Identifier	check_posix_syntax		907029	2					
ANR	907131	ParameterList	"const pcre_uchar * ptr , const pcre_uchar * * endptr"		907029	3					
ANR	907132	Parameter	const pcre_uchar * ptr	3933:19:123640:123660	907029	0	True				
ANR	907133	ParameterType	const pcre_uchar *		907029	0					
ANR	907134	Identifier	ptr		907029	1					
ANR	907135	Parameter	const pcre_uchar * * endptr	3933:42:123663:123687	907029	1	True				
ANR	907136	ParameterType	const pcre_uchar * *		907029	0					
ANR	907137	Identifier	endptr		907029	1					
ANR	907138	CFGEntryNode	ENTRY		907029		True				
ANR	907139	CFGExitNode	EXIT		907029		True				
ANR	907140	Symbol	endptr		907029						
ANR	907141	Symbol	* endptr		907029						
ANR	907142	Symbol	CHAR_RIGHT_SQUARE_BRACKET		907029						
ANR	907143	Symbol	* ptr		907029						
ANR	907144	Symbol	* ( ++ ptr )		907029						
ANR	907145	Symbol	CHAR_BACKSLASH		907029						
ANR	907146	Symbol	TRUE		907029						
ANR	907147	Symbol	terminator		907029						
ANR	907148	Symbol	FALSE		907029						
ANR	907149	Symbol	CHAR_LEFT_SQUARE_BRACKET		907029						
ANR	907150	Symbol	ptr		907029						
ANR	907151	Symbol	CHAR_NULL		907029						
ANR	907152	Function	check_posix_name	3971:0:124700:125032							
ANR	907153	FunctionDef	"check_posix_name (const pcre_uchar * ptr , int len)"		907152	0					
ANR	907154	CompoundStatement		3973:0:124760:125032	907152	0					
ANR	907155	IdentifierDeclStatement	const char * pn = posix_names ;	3974:0:124762:124790	907152	0	True				
ANR	907156	IdentifierDecl	* pn = posix_names		907152	0					
ANR	907157	IdentifierDeclType	const char *		907152	0					
ANR	907158	Identifier	pn		907152	1					
ANR	907159	AssignmentExpression	* pn = posix_names		907152	2		=			
ANR	907160	Identifier	posix_names		907152	0					
ANR	907161	Identifier	posix_names		907152	1					
ANR	907162	Statement	register	3975:0:124792:124799	907152	1	True				
ANR	907163	IdentifierDeclStatement	int yield = 0 ;	3975:9:124801:124814	907152	2	True				
ANR	907164	IdentifierDecl	yield = 0		907152	0					
ANR	907165	IdentifierDeclType	int		907152	0					
ANR	907166	Identifier	yield		907152	1					
ANR	907167	AssignmentExpression	yield = 0		907152	2		=			
ANR	907168	Identifier	yield		907152	0					
ANR	907169	PrimaryExpression	0		907152	1					
ANR	907170	WhileStatement	while ( posix_name_lengths [ yield ] != 0 )		907152	3					
ANR	907171	Condition	posix_name_lengths [ yield ] != 0	3976:7:124823:124852	907152	0	True				
ANR	907172	EqualityExpression	posix_name_lengths [ yield ] != 0		907152	0		!=			
ANR	907173	ArrayIndexing	posix_name_lengths [ yield ]		907152	0					
ANR	907174	Identifier	posix_name_lengths		907152	0					
ANR	907175	Identifier	yield		907152	1					
ANR	907176	PrimaryExpression	0		907152	1					
ANR	907177	CompoundStatement		5:2:96:96	907152	1					
ANR	907178	IfStatement	"if ( len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0 )"		907152	0					
ANR	907179	Condition	"len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"	3978:6:124865:124950	907152	0	True				
ANR	907180	AndExpression	"len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"		907152	0		&&			
ANR	907181	EqualityExpression	len == posix_name_lengths [ yield ]		907152	0		==			
ANR	907182	Identifier	len		907152	0					
ANR	907183	ArrayIndexing	posix_name_lengths [ yield ]		907152	1					
ANR	907184	Identifier	posix_name_lengths		907152	0					
ANR	907185	Identifier	yield		907152	1					
ANR	907186	EqualityExpression	"STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"		907152	1		==			
ANR	907187	CallExpression	"STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len )"		907152	0					
ANR	907188	Callee	STRNCMP_UC_C8		907152	0					
ANR	907189	Identifier	STRNCMP_UC_C8		907152	0					
ANR	907190	ArgumentList	ptr		907152	1					
ANR	907191	Argument	ptr		907152	0					
ANR	907192	Identifier	ptr		907152	0					
ANR	907193	Argument	pn		907152	1					
ANR	907194	Identifier	pn		907152	0					
ANR	907195	Argument	( unsigned int ) len		907152	2					
ANR	907196	CastExpression	( unsigned int ) len		907152	0					
ANR	907197	CastTarget	unsigned int		907152	0					
ANR	907198	Identifier	len		907152	1					
ANR	907199	PrimaryExpression	0		907152	1					
ANR	907200	ReturnStatement	return yield ;	3979:52:124953:124965	907152	1	True				
ANR	907201	Identifier	yield		907152	0					
ANR	907202	ExpressionStatement	pn += posix_name_lengths [ yield ] + 1	3980:2:124969:125004	907152	1	True				
ANR	907203	AssignmentExpression	pn += posix_name_lengths [ yield ] + 1		907152	0		+=			
ANR	907204	Identifier	pn		907152	0					
ANR	907205	AdditiveExpression	posix_name_lengths [ yield ] + 1		907152	1		+			
ANR	907206	ArrayIndexing	posix_name_lengths [ yield ]		907152	0					
ANR	907207	Identifier	posix_name_lengths		907152	0					
ANR	907208	Identifier	yield		907152	1					
ANR	907209	PrimaryExpression	1		907152	1					
ANR	907210	ExpressionStatement	yield ++	3981:2:125008:125015	907152	2	True				
ANR	907211	PostIncDecOperationExpression	yield ++		907152	0					
ANR	907212	Identifier	yield		907152	0					
ANR	907213	IncDec	++		907152	1					
ANR	907214	ReturnStatement	return - 1 ;	3983:0:125021:125030	907152	4	True				
ANR	907215	UnaryOperationExpression	- 1		907152	0					
ANR	907216	UnaryOperator	-		907152	0					
ANR	907217	PrimaryExpression	1		907152	1					
ANR	907218	ReturnType	static int		907152	1					
ANR	907219	Identifier	check_posix_name		907152	2					
ANR	907220	ParameterList	"const pcre_uchar * ptr , int len"		907152	3					
ANR	907221	Parameter	const pcre_uchar * ptr	3972:17:124728:124748	907152	0	True				
ANR	907222	ParameterType	const pcre_uchar *		907152	0					
ANR	907223	Identifier	ptr		907152	1					
ANR	907224	Parameter	int len	3972:40:124751:124757	907152	1	True				
ANR	907225	ParameterType	int		907152	0					
ANR	907226	Identifier	len		907152	1					
ANR	907227	CFGEntryNode	ENTRY		907152		True				
ANR	907228	CFGExitNode	EXIT		907152		True				
ANR	907229	Symbol	* posix_name_lengths		907152						
ANR	907230	Symbol	len		907152						
ANR	907231	Symbol	yield		907152						
ANR	907232	Symbol	STRNCMP_UC_C8		907152						
ANR	907233	Symbol	posix_name_lengths		907152						
ANR	907234	Symbol	* yield		907152						
ANR	907235	Symbol	pn		907152						
ANR	907236	Symbol	ptr		907152						
ANR	907237	Symbol	posix_names		907152						
ANR	907238	Function	adjust_recurse	4019:0:126643:127615							
ANR	907239	FunctionDef	"adjust_recurse (pcre_uchar * group , int adjust , BOOL utf , compile_data * cd , size_t save_hwm_offset)"		907238	0					
ANR	907240	CompoundStatement		4022:0:126755:127615	907238	0					
ANR	907241	IdentifierDeclStatement	int offset ;	4023:0:126757:126767	907238	0	True				
ANR	907242	IdentifierDecl	offset		907238	0					
ANR	907243	IdentifierDeclType	int		907238	0					
ANR	907244	Identifier	offset		907238	1					
ANR	907245	IdentifierDeclStatement	pcre_uchar * hc ;	4024:0:126769:126783	907238	1	True				
ANR	907246	IdentifierDecl	* hc		907238	0					
ANR	907247	IdentifierDeclType	pcre_uchar *		907238	0					
ANR	907248	Identifier	hc		907238	1					
ANR	907249	IdentifierDeclStatement	pcre_uchar * ptr = group ;	4025:0:126785:126808	907238	2	True				
ANR	907250	IdentifierDecl	* ptr = group		907238	0					
ANR	907251	IdentifierDeclType	pcre_uchar *		907238	0					
ANR	907252	Identifier	ptr		907238	1					
ANR	907253	AssignmentExpression	* ptr = group		907238	2		=			
ANR	907254	Identifier	group		907238	0					
ANR	907255	Identifier	group		907238	1					
ANR	907256	WhileStatement	"while ( ( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL )"		907238	3					
ANR	907257	Condition	"( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL"	4027:7:126818:126869	907238	0	True				
ANR	907258	EqualityExpression	"( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL"		907238	0		!=			
ANR	907259	AssignmentExpression	"ptr = ( pcre_uchar * ) find_recurse ( ptr , utf )"		907238	0		=			
ANR	907260	Identifier	ptr		907238	0					
ANR	907261	CastExpression	"( pcre_uchar * ) find_recurse ( ptr , utf )"		907238	1					
ANR	907262	CastTarget	pcre_uchar *		907238	0					
ANR	907263	CallExpression	"find_recurse ( ptr , utf )"		907238	1					
ANR	907264	Callee	find_recurse		907238	0					
ANR	907265	Identifier	find_recurse		907238	0					
ANR	907266	ArgumentList	ptr		907238	1					
ANR	907267	Argument	ptr		907238	0					
ANR	907268	Identifier	ptr		907238	0					
ANR	907269	Argument	utf		907238	1					
ANR	907270	Identifier	utf		907238	0					
ANR	907271	Identifier	NULL		907238	1					
ANR	907272	CompoundStatement		7:2:118:118	907238	1					
ANR	907273	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ; hc < cd -> hwm ; hc += LINK_SIZE )		907238	0					
ANR	907274	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ;	4029:7:126883:126939	907238	0	True				
ANR	907275	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		907238	0		=			
ANR	907276	Identifier	hc		907238	0					
ANR	907277	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		907238	1		+			
ANR	907278	CastExpression	( pcre_uchar * ) cd -> start_workspace		907238	0					
ANR	907279	CastTarget	pcre_uchar *		907238	0					
ANR	907280	PtrMemberAccess	cd -> start_workspace		907238	1					
ANR	907281	Identifier	cd		907238	0					
ANR	907282	Identifier	start_workspace		907238	1					
ANR	907283	Identifier	save_hwm_offset		907238	1					
ANR	907284	Condition	hc < cd -> hwm	4029:65:126941:126952	907238	1	True				
ANR	907285	RelationalExpression	hc < cd -> hwm		907238	0		<			
ANR	907286	Identifier	hc		907238	0					
ANR	907287	PtrMemberAccess	cd -> hwm		907238	1					
ANR	907288	Identifier	cd		907238	0					
ANR	907289	Identifier	hwm		907238	1					
ANR	907290	AssignmentExpression	hc += LINK_SIZE	4030:7:126962:126976	907238	2	True	+=			
ANR	907291	Identifier	hc		907238	0					
ANR	907292	Identifier	LINK_SIZE		907238	1					
ANR	907293	CompoundStatement		10:4:227:227	907238	3					
ANR	907294	ExpressionStatement	"offset = ( int ) GET ( hc , 0 )"	4032:4:126989:127013	907238	0	True				
ANR	907295	AssignmentExpression	"offset = ( int ) GET ( hc , 0 )"		907238	0		=			
ANR	907296	Identifier	offset		907238	0					
ANR	907297	CastExpression	"( int ) GET ( hc , 0 )"		907238	1					
ANR	907298	CastTarget	int		907238	0					
ANR	907299	CallExpression	"GET ( hc , 0 )"		907238	1					
ANR	907300	Callee	GET		907238	0					
ANR	907301	Identifier	GET		907238	0					
ANR	907302	ArgumentList	hc		907238	1					
ANR	907303	Argument	hc		907238	0					
ANR	907304	Identifier	hc		907238	0					
ANR	907305	Argument	0		907238	1					
ANR	907306	PrimaryExpression	0		907238	0					
ANR	907307	IfStatement	if ( cd -> start_code + offset == ptr + 1 )		907238	1					
ANR	907308	Condition	cd -> start_code + offset == ptr + 1	4033:8:127023:127056	907238	0	True				
ANR	907309	EqualityExpression	cd -> start_code + offset == ptr + 1		907238	0		==			
ANR	907310	AdditiveExpression	cd -> start_code + offset		907238	0		+			
ANR	907311	PtrMemberAccess	cd -> start_code		907238	0					
ANR	907312	Identifier	cd		907238	0					
ANR	907313	Identifier	start_code		907238	1					
ANR	907314	Identifier	offset		907238	1					
ANR	907315	AdditiveExpression	ptr + 1		907238	1		+			
ANR	907316	Identifier	ptr		907238	0					
ANR	907317	PrimaryExpression	1		907238	1					
ANR	907318	BreakStatement	break ;	4033:44:127059:127064	907238	1	True				
ANR	907319	IfStatement	if ( hc >= cd -> hwm )		907238	1					
ANR	907320	Condition	hc >= cd -> hwm	4039:6:127226:127238	907238	0	True				
ANR	907321	RelationalExpression	hc >= cd -> hwm		907238	0		>=			
ANR	907322	Identifier	hc		907238	0					
ANR	907323	PtrMemberAccess	cd -> hwm		907238	1					
ANR	907324	Identifier	cd		907238	0					
ANR	907325	Identifier	hwm		907238	1					
ANR	907326	CompoundStatement		19:4:489:489	907238	1					
ANR	907327	ExpressionStatement	"offset = ( int ) GET ( ptr , 1 )"	4041:4:127251:127276	907238	0	True				
ANR	907328	AssignmentExpression	"offset = ( int ) GET ( ptr , 1 )"		907238	0		=			
ANR	907329	Identifier	offset		907238	0					
ANR	907330	CastExpression	"( int ) GET ( ptr , 1 )"		907238	1					
ANR	907331	CastTarget	int		907238	0					
ANR	907332	CallExpression	"GET ( ptr , 1 )"		907238	1					
ANR	907333	Callee	GET		907238	0					
ANR	907334	Identifier	GET		907238	0					
ANR	907335	ArgumentList	ptr		907238	1					
ANR	907336	Argument	ptr		907238	0					
ANR	907337	Identifier	ptr		907238	0					
ANR	907338	Argument	1		907238	1					
ANR	907339	PrimaryExpression	1		907238	0					
ANR	907340	IfStatement	if ( cd -> start_code + offset >= group )		907238	1					
ANR	907341	Condition	cd -> start_code + offset >= group	4042:8:127286:127317	907238	0	True				
ANR	907342	RelationalExpression	cd -> start_code + offset >= group		907238	0		>=			
ANR	907343	AdditiveExpression	cd -> start_code + offset		907238	0		+			
ANR	907344	PtrMemberAccess	cd -> start_code		907238	0					
ANR	907345	Identifier	cd		907238	0					
ANR	907346	Identifier	start_code		907238	1					
ANR	907347	Identifier	offset		907238	1					
ANR	907348	Identifier	group		907238	1					
ANR	907349	ExpressionStatement	"PUT ( ptr , 1 , offset + adjust )"	4042:42:127320:127348	907238	1	True				
ANR	907350	CallExpression	"PUT ( ptr , 1 , offset + adjust )"		907238	0					
ANR	907351	Callee	PUT		907238	0					
ANR	907352	Identifier	PUT		907238	0					
ANR	907353	ArgumentList	ptr		907238	1					
ANR	907354	Argument	ptr		907238	0					
ANR	907355	Identifier	ptr		907238	0					
ANR	907356	Argument	1		907238	1					
ANR	907357	PrimaryExpression	1		907238	0					
ANR	907358	Argument	offset + adjust		907238	2					
ANR	907359	AdditiveExpression	offset + adjust		907238	0		+			
ANR	907360	Identifier	offset		907238	0					
ANR	907361	Identifier	adjust		907238	1					
ANR	907362	ExpressionStatement	ptr += 1 + LINK_SIZE	4045:2:127359:127379	907238	2	True				
ANR	907363	AssignmentExpression	ptr += 1 + LINK_SIZE		907238	0		+=			
ANR	907364	Identifier	ptr		907238	0					
ANR	907365	AdditiveExpression	1 + LINK_SIZE		907238	1		+			
ANR	907366	PrimaryExpression	1		907238	0					
ANR	907367	Identifier	LINK_SIZE		907238	1					
ANR	907368	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ; hc < cd -> hwm ; hc += LINK_SIZE )		907238	4					
ANR	907369	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ;	4050:5:127454:127510	907238	0	True				
ANR	907370	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		907238	0		=			
ANR	907371	Identifier	hc		907238	0					
ANR	907372	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		907238	1		+			
ANR	907373	CastExpression	( pcre_uchar * ) cd -> start_workspace		907238	0					
ANR	907374	CastTarget	pcre_uchar *		907238	0					
ANR	907375	PtrMemberAccess	cd -> start_workspace		907238	1					
ANR	907376	Identifier	cd		907238	0					
ANR	907377	Identifier	start_workspace		907238	1					
ANR	907378	Identifier	save_hwm_offset		907238	1					
ANR	907379	Condition	hc < cd -> hwm	4050:63:127512:127523	907238	1	True				
ANR	907380	RelationalExpression	hc < cd -> hwm		907238	0		<			
ANR	907381	Identifier	hc		907238	0					
ANR	907382	PtrMemberAccess	cd -> hwm		907238	1					
ANR	907383	Identifier	cd		907238	0					
ANR	907384	Identifier	hwm		907238	1					
ANR	907385	AssignmentExpression	hc += LINK_SIZE	4051:5:127531:127545	907238	2	True	+=			
ANR	907386	Identifier	hc		907238	0					
ANR	907387	Identifier	LINK_SIZE		907238	1					
ANR	907388	CompoundStatement		31:2:794:794	907238	3					
ANR	907389	ExpressionStatement	"offset = ( int ) GET ( hc , 0 )"	4053:2:127554:127578	907238	0	True				
ANR	907390	AssignmentExpression	"offset = ( int ) GET ( hc , 0 )"		907238	0		=			
ANR	907391	Identifier	offset		907238	0					
ANR	907392	CastExpression	"( int ) GET ( hc , 0 )"		907238	1					
ANR	907393	CastTarget	int		907238	0					
ANR	907394	CallExpression	"GET ( hc , 0 )"		907238	1					
ANR	907395	Callee	GET		907238	0					
ANR	907396	Identifier	GET		907238	0					
ANR	907397	ArgumentList	hc		907238	1					
ANR	907398	Argument	hc		907238	0					
ANR	907399	Identifier	hc		907238	0					
ANR	907400	Argument	0		907238	1					
ANR	907401	PrimaryExpression	0		907238	0					
ANR	907402	ExpressionStatement	"PUT ( hc , 0 , offset + adjust )"	4054:2:127582:127609	907238	1	True				
ANR	907403	CallExpression	"PUT ( hc , 0 , offset + adjust )"		907238	0					
ANR	907404	Callee	PUT		907238	0					
ANR	907405	Identifier	PUT		907238	0					
ANR	907406	ArgumentList	hc		907238	1					
ANR	907407	Argument	hc		907238	0					
ANR	907408	Identifier	hc		907238	0					
ANR	907409	Argument	0		907238	1					
ANR	907410	PrimaryExpression	0		907238	0					
ANR	907411	Argument	offset + adjust		907238	2					
ANR	907412	AdditiveExpression	offset + adjust		907238	0		+			
ANR	907413	Identifier	offset		907238	0					
ANR	907414	Identifier	adjust		907238	1					
ANR	907415	ReturnType	static void		907238	1					
ANR	907416	Identifier	adjust_recurse		907238	2					
ANR	907417	ParameterList	"pcre_uchar * group , int adjust , BOOL utf , compile_data * cd , size_t save_hwm_offset"		907238	3					
ANR	907418	Parameter	pcre_uchar * group	4020:15:126670:126686	907238	0	True				
ANR	907419	ParameterType	pcre_uchar *		907238	0					
ANR	907420	Identifier	group		907238	1					
ANR	907421	Parameter	int adjust	4020:34:126689:126698	907238	1	True				
ANR	907422	ParameterType	int		907238	0					
ANR	907423	Identifier	adjust		907238	1					
ANR	907424	Parameter	BOOL utf	4020:46:126701:126708	907238	2	True				
ANR	907425	ParameterType	BOOL		907238	0					
ANR	907426	Identifier	utf		907238	1					
ANR	907427	Parameter	compile_data * cd	4020:56:126711:126726	907238	3	True				
ANR	907428	ParameterType	compile_data *		907238	0					
ANR	907429	Identifier	cd		907238	1					
ANR	907430	Parameter	size_t save_hwm_offset	4021:2:126731:126752	907238	4	True				
ANR	907431	ParameterType	size_t		907238	0					
ANR	907432	Identifier	save_hwm_offset		907238	1					
ANR	907433	CFGEntryNode	ENTRY		907238		True				
ANR	907434	CFGExitNode	EXIT		907238		True				
ANR	907435	Symbol	cd		907238						
ANR	907436	Symbol	find_recurse		907238						
ANR	907437	Symbol	NULL		907238						
ANR	907438	Symbol	offset		907238						
ANR	907439	Symbol	* cd		907238						
ANR	907440	Symbol	utf		907238						
ANR	907441	Symbol	cd -> start_code		907238						
ANR	907442	Symbol	ptr		907238						
ANR	907443	Symbol	LINK_SIZE		907238						
ANR	907444	Symbol	cd -> start_workspace		907238						
ANR	907445	Symbol	adjust		907238						
ANR	907446	Symbol	save_hwm_offset		907238						
ANR	907447	Symbol	GET		907238						
ANR	907448	Symbol	cd -> hwm		907238						
ANR	907449	Symbol	hc		907238						
ANR	907450	Symbol	group		907238						
ANR	907451	Function	auto_callout	4075:0:128064:128360							
ANR	907452	FunctionDef	"auto_callout (pcre_uchar * code , const pcre_uchar * ptr , compile_data * cd)"		907451	0					
ANR	907453	CompoundStatement		4077:0:128156:128360	907451	0					
ANR	907454	ExpressionStatement	* code ++ = OP_CALLOUT	4078:0:128158:128178	907451	0	True				
ANR	907455	AssignmentExpression	* code ++ = OP_CALLOUT		907451	0		=			
ANR	907456	UnaryOperationExpression	* code ++		907451	0					
ANR	907457	UnaryOperator	*		907451	0					
ANR	907458	PostIncDecOperationExpression	code ++		907451	1					
ANR	907459	Identifier	code		907451	0					
ANR	907460	IncDec	++		907451	1					
ANR	907461	Identifier	OP_CALLOUT		907451	1					
ANR	907462	ExpressionStatement	* code ++ = 255	4079:0:128180:128193	907451	1	True				
ANR	907463	AssignmentExpression	* code ++ = 255		907451	0		=			
ANR	907464	UnaryOperationExpression	* code ++		907451	0					
ANR	907465	UnaryOperator	*		907451	0					
ANR	907466	PostIncDecOperationExpression	code ++		907451	1					
ANR	907467	Identifier	code		907451	0					
ANR	907468	IncDec	++		907451	1					
ANR	907469	PrimaryExpression	255		907451	1					
ANR	907470	ExpressionStatement	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern ) )"	4080:0:128195:128239	907451	2	True				
ANR	907471	CallExpression	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern ) )"		907451	0					
ANR	907472	Callee	PUT		907451	0					
ANR	907473	Identifier	PUT		907451	0					
ANR	907474	ArgumentList	code		907451	1					
ANR	907475	Argument	code		907451	0					
ANR	907476	Identifier	code		907451	0					
ANR	907477	Argument	0		907451	1					
ANR	907478	PrimaryExpression	0		907451	0					
ANR	907479	Argument	( int ) ( ptr - cd -> start_pattern )		907451	2					
ANR	907480	CastExpression	( int ) ( ptr - cd -> start_pattern )		907451	0					
ANR	907481	CastTarget	int		907451	0					
ANR	907482	AdditiveExpression	ptr - cd -> start_pattern		907451	1		-			
ANR	907483	Identifier	ptr		907451	0					
ANR	907484	PtrMemberAccess	cd -> start_pattern		907451	1					
ANR	907485	Identifier	cd		907451	0					
ANR	907486	Identifier	start_pattern		907451	1					
ANR	907487	ExpressionStatement	"PUT ( code , LINK_SIZE , 0 )"	4081:0:128263:128286	907451	3	True				
ANR	907488	CallExpression	"PUT ( code , LINK_SIZE , 0 )"		907451	0					
ANR	907489	Callee	PUT		907451	0					
ANR	907490	Identifier	PUT		907451	0					
ANR	907491	ArgumentList	code		907451	1					
ANR	907492	Argument	code		907451	0					
ANR	907493	Identifier	code		907451	0					
ANR	907494	Argument	LINK_SIZE		907451	1					
ANR	907495	Identifier	LINK_SIZE		907451	0					
ANR	907496	Argument	0		907451	2					
ANR	907497	PrimaryExpression	0		907451	0					
ANR	907498	ReturnStatement	return code + 2 * LINK_SIZE ;	4082:0:128331:128358	907451	4	True				
ANR	907499	AdditiveExpression	code + 2 * LINK_SIZE		907451	0		+			
ANR	907500	Identifier	code		907451	0					
ANR	907501	MultiplicativeExpression	2 * LINK_SIZE		907451	1		*			
ANR	907502	PrimaryExpression	2		907451	0					
ANR	907503	Identifier	LINK_SIZE		907451	1					
ANR	907504	ReturnType	static pcre_uchar *		907451	1					
ANR	907505	Identifier	auto_callout		907451	2					
ANR	907506	ParameterList	"pcre_uchar * code , const pcre_uchar * ptr , compile_data * cd"		907451	3					
ANR	907507	Parameter	pcre_uchar * code	4076:13:128097:128112	907451	0	True				
ANR	907508	ParameterType	pcre_uchar *		907451	0					
ANR	907509	Identifier	code		907451	1					
ANR	907510	Parameter	const pcre_uchar * ptr	4076:31:128115:128135	907451	1	True				
ANR	907511	ParameterType	const pcre_uchar *		907451	0					
ANR	907512	Identifier	ptr		907451	1					
ANR	907513	Parameter	compile_data * cd	4076:54:128138:128153	907451	2	True				
ANR	907514	ParameterType	compile_data *		907451	0					
ANR	907515	Identifier	cd		907451	1					
ANR	907516	CFGEntryNode	ENTRY		907451		True				
ANR	907517	CFGExitNode	EXIT		907451		True				
ANR	907518	Symbol	cd		907451						
ANR	907519	Symbol	code		907451						
ANR	907520	Symbol	* cd		907451						
ANR	907521	Symbol	OP_CALLOUT		907451						
ANR	907522	Symbol	cd -> start_pattern		907451						
ANR	907523	Symbol	ptr		907451						
ANR	907524	Symbol	* code ++		907451						
ANR	907525	Symbol	LINK_SIZE		907451						
ANR	907526	Function	complete_callout	4103:0:128901:129121							
ANR	907527	FunctionDef	"complete_callout (pcre_uchar * previous_callout , const pcre_uchar * ptr , compile_data * cd)"		907526	0					
ANR	907528	CompoundStatement		4105:0:129001:129121	907526	0					
ANR	907529	IdentifierDeclStatement	"int length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) ) ;"	4106:0:129003:129073	907526	0	True				
ANR	907530	IdentifierDecl	"length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		907526	0					
ANR	907531	IdentifierDeclType	int		907526	0					
ANR	907532	Identifier	length		907526	1					
ANR	907533	AssignmentExpression	"length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		907526	2		=			
ANR	907534	Identifier	length		907526	0					
ANR	907535	CastExpression	"( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		907526	1					
ANR	907536	CastTarget	int		907526	0					
ANR	907537	AdditiveExpression	"ptr - cd -> start_pattern - GET ( previous_callout , 2 )"		907526	1		-			
ANR	907538	Identifier	ptr		907526	0					
ANR	907539	AdditiveExpression	"cd -> start_pattern - GET ( previous_callout , 2 )"		907526	1		-			
ANR	907540	PtrMemberAccess	cd -> start_pattern		907526	0					
ANR	907541	Identifier	cd		907526	0					
ANR	907542	Identifier	start_pattern		907526	1					
ANR	907543	CallExpression	"GET ( previous_callout , 2 )"		907526	1					
ANR	907544	Callee	GET		907526	0					
ANR	907545	Identifier	GET		907526	0					
ANR	907546	ArgumentList	previous_callout		907526	1					
ANR	907547	Argument	previous_callout		907526	0					
ANR	907548	Identifier	previous_callout		907526	0					
ANR	907549	Argument	2		907526	1					
ANR	907550	PrimaryExpression	2		907526	0					
ANR	907551	ExpressionStatement	"PUT ( previous_callout , 2 + LINK_SIZE , length )"	4107:0:129075:129119	907526	1	True				
ANR	907552	CallExpression	"PUT ( previous_callout , 2 + LINK_SIZE , length )"		907526	0					
ANR	907553	Callee	PUT		907526	0					
ANR	907554	Identifier	PUT		907526	0					
ANR	907555	ArgumentList	previous_callout		907526	1					
ANR	907556	Argument	previous_callout		907526	0					
ANR	907557	Identifier	previous_callout		907526	0					
ANR	907558	Argument	2 + LINK_SIZE		907526	1					
ANR	907559	AdditiveExpression	2 + LINK_SIZE		907526	0		+			
ANR	907560	PrimaryExpression	2		907526	0					
ANR	907561	Identifier	LINK_SIZE		907526	1					
ANR	907562	Argument	length		907526	2					
ANR	907563	Identifier	length		907526	0					
ANR	907564	ReturnType	static void		907526	1					
ANR	907565	Identifier	complete_callout		907526	2					
ANR	907566	ParameterList	"pcre_uchar * previous_callout , const pcre_uchar * ptr , compile_data * cd"		907526	3					
ANR	907567	Parameter	pcre_uchar * previous_callout	4104:17:128930:128957	907526	0	True				
ANR	907568	ParameterType	pcre_uchar *		907526	0					
ANR	907569	Identifier	previous_callout		907526	1					
ANR	907570	Parameter	const pcre_uchar * ptr	4104:47:128960:128980	907526	1	True				
ANR	907571	ParameterType	const pcre_uchar *		907526	0					
ANR	907572	Identifier	ptr		907526	1					
ANR	907573	Parameter	compile_data * cd	4104:70:128983:128998	907526	2	True				
ANR	907574	ParameterType	compile_data *		907526	0					
ANR	907575	Identifier	cd		907526	1					
ANR	907576	CFGEntryNode	ENTRY		907526		True				
ANR	907577	CFGExitNode	EXIT		907526		True				
ANR	907578	Symbol	cd		907526						
ANR	907579	Symbol	* cd		907526						
ANR	907580	Symbol	GET		907526						
ANR	907581	Symbol	length		907526						
ANR	907582	Symbol	previous_callout		907526						
ANR	907583	Symbol	cd -> start_pattern		907526						
ANR	907584	Symbol	ptr		907526						
ANR	907585	Symbol	LINK_SIZE		907526						
ANR	907586	Function	get_othercase_range	4135:0:130031:131068							
ANR	907587	FunctionDef	"get_othercase_range (pcre_uint32 * cptr , pcre_uint32 d , pcre_uint32 * ocptr , pcre_uint32 * odptr)"		907586	0					
ANR	907588	CompoundStatement		4138:0:130138:131068	907586	0					
ANR	907589	IdentifierDeclStatement	"pcre_uint32 c , othercase , next ;"	4139:0:130140:130170	907586	0	True				
ANR	907590	IdentifierDecl	c		907586	0					
ANR	907591	IdentifierDeclType	pcre_uint32		907586	0					
ANR	907592	Identifier	c		907586	1					
ANR	907593	IdentifierDecl	othercase		907586	1					
ANR	907594	IdentifierDeclType	pcre_uint32		907586	0					
ANR	907595	Identifier	othercase		907586	1					
ANR	907596	IdentifierDecl	next		907586	2					
ANR	907597	IdentifierDeclType	pcre_uint32		907586	0					
ANR	907598	Identifier	next		907586	1					
ANR	907599	IdentifierDeclStatement	unsigned int co ;	4140:0:130172:130187	907586	1	True				
ANR	907600	IdentifierDecl	co		907586	0					
ANR	907601	IdentifierDeclType	unsigned int		907586	0					
ANR	907602	Identifier	co		907586	1					
ANR	907603	ForStatement	for ( c = * cptr ; c <= d ; c ++ )		907586	2					
ANR	907604	ForInit	c = * cptr ;	4145:5:130313:130322	907586	0	True				
ANR	907605	AssignmentExpression	c = * cptr		907586	0		=			
ANR	907606	Identifier	c		907586	0					
ANR	907607	UnaryOperationExpression	* cptr		907586	1					
ANR	907608	UnaryOperator	*		907586	0					
ANR	907609	Identifier	cptr		907586	1					
ANR	907610	Condition	c <= d	4145:16:130324:130329	907586	1	True				
ANR	907611	RelationalExpression	c <= d		907586	0		<=			
ANR	907612	Identifier	c		907586	0					
ANR	907613	Identifier	d		907586	1					
ANR	907614	PostIncDecOperationExpression	c ++	4145:24:130332:130334	907586	2	True				
ANR	907615	Identifier	c		907586	0					
ANR	907616	IncDec	++		907586	1					
ANR	907617	CompoundStatement		9:2:200:200	907586	3					
ANR	907618	IfStatement	if ( ( co = UCD_CASESET ( c ) ) != 0 )		907586	0					
ANR	907619	Condition	( co = UCD_CASESET ( c ) ) != 0	4147:6:130347:130372	907586	0	True				
ANR	907620	EqualityExpression	( co = UCD_CASESET ( c ) ) != 0		907586	0		!=			
ANR	907621	AssignmentExpression	co = UCD_CASESET ( c )		907586	0		=			
ANR	907622	Identifier	co		907586	0					
ANR	907623	CallExpression	UCD_CASESET ( c )		907586	1					
ANR	907624	Callee	UCD_CASESET		907586	0					
ANR	907625	Identifier	UCD_CASESET		907586	0					
ANR	907626	ArgumentList	c		907586	1					
ANR	907627	Argument	c		907586	0					
ANR	907628	Identifier	c		907586	0					
ANR	907629	PrimaryExpression	0		907586	1					
ANR	907630	CompoundStatement		11:4:240:240	907586	1					
ANR	907631	ExpressionStatement	* ocptr = c ++	4149:4:130385:130397	907586	0	True				
ANR	907632	AssignmentExpression	* ocptr = c ++		907586	0		=			
ANR	907633	UnaryOperationExpression	* ocptr		907586	0					
ANR	907634	UnaryOperator	*		907586	0					
ANR	907635	Identifier	ocptr		907586	1					
ANR	907636	PostIncDecOperationExpression	c ++		907586	1					
ANR	907637	Identifier	c		907586	0					
ANR	907638	IncDec	++		907586	1					
ANR	907639	ExpressionStatement	* cptr = c	4150:4:130438:130447	907586	1	True				
ANR	907640	AssignmentExpression	* cptr = c		907586	0		=			
ANR	907641	UnaryOperationExpression	* cptr		907586	0					
ANR	907642	UnaryOperator	*		907586	0					
ANR	907643	Identifier	cptr		907586	1					
ANR	907644	Identifier	c		907586	1					
ANR	907645	ReturnStatement	return ( int ) co ;	4151:4:130484:130498	907586	2	True				
ANR	907646	CastExpression	( int ) co		907586	0					
ANR	907647	CastTarget	int		907586	0					
ANR	907648	Identifier	co		907586	1					
ANR	907649	IfStatement	if ( ( othercase = UCD_OTHERCASE ( c ) ) != c )		907586	1					
ANR	907650	Condition	( othercase = UCD_OTHERCASE ( c ) ) != c	4153:6:130512:130546	907586	0	True				
ANR	907651	EqualityExpression	( othercase = UCD_OTHERCASE ( c ) ) != c		907586	0		!=			
ANR	907652	AssignmentExpression	othercase = UCD_OTHERCASE ( c )		907586	0		=			
ANR	907653	Identifier	othercase		907586	0					
ANR	907654	CallExpression	UCD_OTHERCASE ( c )		907586	1					
ANR	907655	Callee	UCD_OTHERCASE		907586	0					
ANR	907656	Identifier	UCD_OTHERCASE		907586	0					
ANR	907657	ArgumentList	c		907586	1					
ANR	907658	Argument	c		907586	0					
ANR	907659	Identifier	c		907586	0					
ANR	907660	Identifier	c		907586	1					
ANR	907661	BreakStatement	break ;	4153:43:130549:130554	907586	1	True				
ANR	907662	IfStatement	if ( c > d )		907586	3					
ANR	907663	Condition	c > d	4156:4:130565:130569	907586	0	True				
ANR	907664	RelationalExpression	c > d		907586	0		>			
ANR	907665	Identifier	c		907586	0					
ANR	907666	Identifier	d		907586	1					
ANR	907667	ReturnStatement	return - 1 ;	4156:11:130572:130581	907586	1	True				
ANR	907668	UnaryOperationExpression	- 1		907586	0					
ANR	907669	UnaryOperator	-		907586	0					
ANR	907670	PrimaryExpression	1		907586	1					
ANR	907671	ExpressionStatement	* ocptr = othercase	4162:0:130803:130821	907586	4	True				
ANR	907672	AssignmentExpression	* ocptr = othercase		907586	0		=			
ANR	907673	UnaryOperationExpression	* ocptr		907586	0					
ANR	907674	UnaryOperator	*		907586	0					
ANR	907675	Identifier	ocptr		907586	1					
ANR	907676	Identifier	othercase		907586	1					
ANR	907677	ExpressionStatement	next = othercase + 1	4163:0:130823:130843	907586	5	True				
ANR	907678	AssignmentExpression	next = othercase + 1		907586	0		=			
ANR	907679	Identifier	next		907586	0					
ANR	907680	AdditiveExpression	othercase + 1		907586	1		+			
ANR	907681	Identifier	othercase		907586	0					
ANR	907682	PrimaryExpression	1		907586	1					
ANR	907683	ForStatement	for ( ++ c ; c <= d ; c ++ )		907586	6					
ANR	907684	ForInit	++ c ;	4165:5:130851:130854	907586	0	True				
ANR	907685	UnaryExpression	++ c		907586	0					
ANR	907686	IncDec	++		907586	0					
ANR	907687	Identifier	c		907586	1					
ANR	907688	Condition	c <= d	4165:10:130856:130861	907586	1	True				
ANR	907689	RelationalExpression	c <= d		907586	0		<=			
ANR	907690	Identifier	c		907586	0					
ANR	907691	Identifier	d		907586	1					
ANR	907692	PostIncDecOperationExpression	c ++	4165:18:130864:130866	907586	2	True				
ANR	907693	Identifier	c		907586	0					
ANR	907694	IncDec	++		907586	1					
ANR	907695	CompoundStatement		29:2:732:732	907586	3					
ANR	907696	IfStatement	if ( ( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next )		907586	0					
ANR	907697	Condition	( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next	4167:6:130879:130932	907586	0	True				
ANR	907698	OrExpression	( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next		907586	0		||			
ANR	907699	EqualityExpression	( co = UCD_CASESET ( c ) ) != 0		907586	0		!=			
ANR	907700	AssignmentExpression	co = UCD_CASESET ( c )		907586	0		=			
ANR	907701	Identifier	co		907586	0					
ANR	907702	CallExpression	UCD_CASESET ( c )		907586	1					
ANR	907703	Callee	UCD_CASESET		907586	0					
ANR	907704	Identifier	UCD_CASESET		907586	0					
ANR	907705	ArgumentList	c		907586	1					
ANR	907706	Argument	c		907586	0					
ANR	907707	Identifier	c		907586	0					
ANR	907708	PrimaryExpression	0		907586	1					
ANR	907709	EqualityExpression	UCD_OTHERCASE ( c ) != next		907586	1		!=			
ANR	907710	CallExpression	UCD_OTHERCASE ( c )		907586	0					
ANR	907711	Callee	UCD_OTHERCASE		907586	0					
ANR	907712	Identifier	UCD_OTHERCASE		907586	0					
ANR	907713	ArgumentList	c		907586	1					
ANR	907714	Argument	c		907586	0					
ANR	907715	Identifier	c		907586	0					
ANR	907716	Identifier	next		907586	1					
ANR	907717	BreakStatement	break ;	4167:62:130935:130940	907586	1	True				
ANR	907718	ExpressionStatement	next ++	4168:2:130944:130950	907586	1	True				
ANR	907719	PostIncDecOperationExpression	next ++		907586	0					
ANR	907720	Identifier	next		907586	0					
ANR	907721	IncDec	++		907586	1					
ANR	907722	ExpressionStatement	* odptr = next - 1	4171:0:130957:130974	907586	7	True				
ANR	907723	AssignmentExpression	* odptr = next - 1		907586	0		=			
ANR	907724	UnaryOperationExpression	* odptr		907586	0					
ANR	907725	UnaryOperator	*		907586	0					
ANR	907726	Identifier	odptr		907586	1					
ANR	907727	AdditiveExpression	next - 1		907586	1		-			
ANR	907728	Identifier	next		907586	0					
ANR	907729	PrimaryExpression	1		907586	1					
ANR	907730	ExpressionStatement	* cptr = c	4172:0:131009:131018	907586	8	True				
ANR	907731	AssignmentExpression	* cptr = c		907586	0		=			
ANR	907732	UnaryOperationExpression	* cptr		907586	0					
ANR	907733	UnaryOperator	*		907586	0					
ANR	907734	Identifier	cptr		907586	1					
ANR	907735	Identifier	c		907586	1					
ANR	907736	ReturnStatement	return 0 ;	4173:0:131058:131066	907586	9	True				
ANR	907737	PrimaryExpression	0		907586	0					
ANR	907738	ReturnType	static int		907586	1					
ANR	907739	Identifier	get_othercase_range		907586	2					
ANR	907740	ParameterList	"pcre_uint32 * cptr , pcre_uint32 d , pcre_uint32 * ocptr , pcre_uint32 * odptr"		907586	3					
ANR	907741	Parameter	pcre_uint32 * cptr	4136:20:130062:130078	907586	0	True				
ANR	907742	ParameterType	pcre_uint32 *		907586	0					
ANR	907743	Identifier	cptr		907586	1					
ANR	907744	Parameter	pcre_uint32 d	4136:39:130081:130093	907586	1	True				
ANR	907745	ParameterType	pcre_uint32		907586	0					
ANR	907746	Identifier	d		907586	1					
ANR	907747	Parameter	pcre_uint32 * ocptr	4136:54:130096:130113	907586	2	True				
ANR	907748	ParameterType	pcre_uint32 *		907586	0					
ANR	907749	Identifier	ocptr		907586	1					
ANR	907750	Parameter	pcre_uint32 * odptr	4137:2:130118:130135	907586	3	True				
ANR	907751	ParameterType	pcre_uint32 *		907586	0					
ANR	907752	Identifier	odptr		907586	1					
ANR	907753	CFGEntryNode	ENTRY		907586		True				
ANR	907754	CFGExitNode	EXIT		907586		True				
ANR	907755	Symbol	next		907586						
ANR	907756	Symbol	c		907586						
ANR	907757	Symbol	d		907586						
ANR	907758	Symbol	cptr		907586						
ANR	907759	Symbol	othercase		907586						
ANR	907760	Symbol	UCD_CASESET		907586						
ANR	907761	Symbol	co		907586						
ANR	907762	Symbol	* ocptr		907586						
ANR	907763	Symbol	* odptr		907586						
ANR	907764	Symbol	ocptr		907586						
ANR	907765	Symbol	odptr		907586						
ANR	907766	Symbol	UCD_OTHERCASE		907586						
ANR	907767	Symbol	* cptr		907586						
ANR	907768	Function	add_to_class	4200:0:131927:135552							
ANR	907769	FunctionDef	"add_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , pcre_uint32 start , pcre_uint32 end)"		907768	0					
ANR	907770	CompoundStatement		4203:0:132067:135552	907768	0					
ANR	907771	IdentifierDeclStatement	pcre_uint32 c ;	4204:0:132069:132082	907768	0	True				
ANR	907772	IdentifierDecl	c		907768	0					
ANR	907773	IdentifierDeclType	pcre_uint32		907768	0					
ANR	907774	Identifier	c		907768	1					
ANR	907775	IdentifierDeclStatement	pcre_uint32 classbits_end = ( end <= 0xff ? end : 0xff ) ;	4205:0:132084:132138	907768	1	True				
ANR	907776	IdentifierDecl	classbits_end = ( end <= 0xff ? end : 0xff )		907768	0					
ANR	907777	IdentifierDeclType	pcre_uint32		907768	0					
ANR	907778	Identifier	classbits_end		907768	1					
ANR	907779	AssignmentExpression	classbits_end = ( end <= 0xff ? end : 0xff )		907768	2		=			
ANR	907780	Identifier	classbits_end		907768	0					
ANR	907781	ConditionalExpression	end <= 0xff ? end : 0xff		907768	1					
ANR	907782	Condition	end <= 0xff		907768	0					
ANR	907783	RelationalExpression	end <= 0xff		907768	0		<=			
ANR	907784	Identifier	end		907768	0					
ANR	907785	PrimaryExpression	0xff		907768	1					
ANR	907786	Identifier	end		907768	1					
ANR	907787	PrimaryExpression	0xff		907768	2					
ANR	907788	IdentifierDeclStatement	int n8 = 0 ;	4206:0:132140:132150	907768	2	True				
ANR	907789	IdentifierDecl	n8 = 0		907768	0					
ANR	907790	IdentifierDeclType	int		907768	0					
ANR	907791	Identifier	n8		907768	1					
ANR	907792	AssignmentExpression	n8 = 0		907768	2		=			
ANR	907793	Identifier	n8		907768	0					
ANR	907794	PrimaryExpression	0		907768	1					
ANR	907795	IfStatement	if ( ( options & PCRE_CASELESS ) != 0 )		907768	3					
ANR	907796	Condition	( options & PCRE_CASELESS ) != 0	4213:4:132398:132427	907768	0	True				
ANR	907797	EqualityExpression	( options & PCRE_CASELESS ) != 0		907768	0		!=			
ANR	907798	BitAndExpression	options & PCRE_CASELESS		907768	0		&			
ANR	907799	Identifier	options		907768	0					
ANR	907800	Identifier	PCRE_CASELESS		907768	1					
ANR	907801	PrimaryExpression	0		907768	1					
ANR	907802	CompoundStatement		12:2:364:364	907768	1					
ANR	907803	IfStatement	if ( ( options & PCRE_UTF8 ) != 0 )		907768	0					
ANR	907804	Condition	( options & PCRE_UTF8 ) != 0	4216:6:132459:132484	907768	0	True				
ANR	907805	EqualityExpression	( options & PCRE_UTF8 ) != 0		907768	0		!=			
ANR	907806	BitAndExpression	options & PCRE_UTF8		907768	0		&			
ANR	907807	Identifier	options		907768	0					
ANR	907808	Identifier	PCRE_UTF8		907768	1					
ANR	907809	PrimaryExpression	0		907768	1					
ANR	907810	CompoundStatement		17:4:441:459	907768	1					
ANR	907811	IdentifierDeclStatement	int rc ;	4218:4:132497:132503	907768	0	True				
ANR	907812	IdentifierDecl	rc		907768	0					
ANR	907813	IdentifierDeclType	int		907768	0					
ANR	907814	Identifier	rc		907768	1					
ANR	907815	IdentifierDeclStatement	"pcre_uint32 oc , od ;"	4219:4:132509:132527	907768	1	True				
ANR	907816	IdentifierDecl	oc		907768	0					
ANR	907817	IdentifierDeclType	pcre_uint32		907768	0					
ANR	907818	Identifier	oc		907768	1					
ANR	907819	IdentifierDecl	od		907768	1					
ANR	907820	IdentifierDeclType	pcre_uint32		907768	0					
ANR	907821	Identifier	od		907768	1					
ANR	907822	ExpressionStatement	options &= ~PCRE_CASELESS	4221:4:132534:132559	907768	2	True				
ANR	907823	AssignmentExpression	options &= ~PCRE_CASELESS		907768	0		&=			
ANR	907824	Identifier	options		907768	0					
ANR	907825	Identifier	~PCRE_CASELESS		907768	1					
ANR	907826	ExpressionStatement	c = start	4222:4:132600:132609	907768	3	True				
ANR	907827	AssignmentExpression	c = start		907768	0		=			
ANR	907828	Identifier	c		907768	0					
ANR	907829	Identifier	start		907768	1					
ANR	907830	WhileStatement	"while ( ( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0 )"		907768	4					
ANR	907831	Condition	"( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0"	4224:11:132623:132672	907768	0	True				
ANR	907832	RelationalExpression	"( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0"		907768	0		>=			
ANR	907833	AssignmentExpression	"rc = get_othercase_range ( & c , end , & oc , & od )"		907768	0		=			
ANR	907834	Identifier	rc		907768	0					
ANR	907835	CallExpression	"get_othercase_range ( & c , end , & oc , & od )"		907768	1					
ANR	907836	Callee	get_othercase_range		907768	0					
ANR	907837	Identifier	get_othercase_range		907768	0					
ANR	907838	ArgumentList	& c		907768	1					
ANR	907839	Argument	& c		907768	0					
ANR	907840	UnaryOperationExpression	& c		907768	0					
ANR	907841	UnaryOperator	&		907768	0					
ANR	907842	Identifier	c		907768	1					
ANR	907843	Argument	end		907768	1					
ANR	907844	Identifier	end		907768	0					
ANR	907845	Argument	& oc		907768	2					
ANR	907846	UnaryOperationExpression	& oc		907768	0					
ANR	907847	UnaryOperator	&		907768	0					
ANR	907848	Identifier	oc		907768	1					
ANR	907849	Argument	& od		907768	3					
ANR	907850	UnaryOperationExpression	& od		907768	0					
ANR	907851	UnaryOperator	&		907768	0					
ANR	907852	Identifier	od		907768	1					
ANR	907853	PrimaryExpression	0		907768	1					
ANR	907854	CompoundStatement		23:6:613:613	907768	1					
ANR	907855	IfStatement	if ( rc > 0 )		907768	0					
ANR	907856	Condition	rc > 0	4228:10:132767:132772	907768	0	True				
ANR	907857	RelationalExpression	rc > 0		907768	0		>			
ANR	907858	Identifier	rc		907768	0					
ANR	907859	PrimaryExpression	0		907768	1					
ANR	907860	ExpressionStatement	"n8 += add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"	4228:18:132775:132875	907768	1	True				
ANR	907861	AssignmentExpression	"n8 += add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"		907768	0		+=			
ANR	907862	Identifier	n8		907768	0					
ANR	907863	CallExpression	"add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"		907768	1					
ANR	907864	Callee	add_list_to_class		907768	0					
ANR	907865	Identifier	add_list_to_class		907768	0					
ANR	907866	ArgumentList	classbits		907768	1					
ANR	907867	Argument	classbits		907768	0					
ANR	907868	Identifier	classbits		907768	0					
ANR	907869	Argument	uchardptr		907768	1					
ANR	907870	Identifier	uchardptr		907768	0					
ANR	907871	Argument	options		907768	2					
ANR	907872	Identifier	options		907768	0					
ANR	907873	Argument	cd		907768	3					
ANR	907874	Identifier	cd		907768	0					
ANR	907875	Argument	PRIV ( ucd_caseless_sets ) + rc		907768	4					
ANR	907876	AdditiveExpression	PRIV ( ucd_caseless_sets ) + rc		907768	0		+			
ANR	907877	CallExpression	PRIV ( ucd_caseless_sets )		907768	0					
ANR	907878	Callee	PRIV		907768	0					
ANR	907879	Identifier	PRIV		907768	0					
ANR	907880	ArgumentList	ucd_caseless_sets		907768	1					
ANR	907881	Argument	ucd_caseless_sets		907768	0					
ANR	907882	Identifier	ucd_caseless_sets		907768	0					
ANR	907883	Identifier	rc		907768	1					
ANR	907884	Argument	oc		907768	5					
ANR	907885	Identifier	oc		907768	0					
ANR	907886	ElseStatement	else		907768	0					
ANR	907887	IfStatement	if ( oc >= start && od <= end )		907768	0					
ANR	907888	Condition	oc >= start && od <= end	4233:15:132971:132994	907768	0	True				
ANR	907889	AndExpression	oc >= start && od <= end		907768	0		&&			
ANR	907890	RelationalExpression	oc >= start		907768	0		>=			
ANR	907891	Identifier	oc		907768	0					
ANR	907892	Identifier	start		907768	1					
ANR	907893	RelationalExpression	od <= end		907768	1		<=			
ANR	907894	Identifier	od		907768	0					
ANR	907895	Identifier	end		907768	1					
ANR	907896	ContinueStatement	continue ;	4233:41:132997:133005	907768	1	True				
ANR	907897	ElseStatement	else		907768	0					
ANR	907898	IfStatement	if ( oc < start && od >= start - 1 )		907768	0					
ANR	907899	Condition	oc < start && od >= start - 1	4239:15:133261:133289	907768	0	True				
ANR	907900	AndExpression	oc < start && od >= start - 1		907768	0		&&			
ANR	907901	RelationalExpression	oc < start		907768	0		<			
ANR	907902	Identifier	oc		907768	0					
ANR	907903	Identifier	start		907768	1					
ANR	907904	RelationalExpression	od >= start - 1		907768	1		>=			
ANR	907905	Identifier	od		907768	0					
ANR	907906	AdditiveExpression	start - 1		907768	1		-			
ANR	907907	Identifier	start		907768	0					
ANR	907908	PrimaryExpression	1		907768	1					
ANR	907909	ExpressionStatement	start = oc	4239:46:133292:133302	907768	1	True				
ANR	907910	AssignmentExpression	start = oc		907768	0		=			
ANR	907911	Identifier	start		907768	0					
ANR	907912	Identifier	oc		907768	1					
ANR	907913	ElseStatement	else		907768	0					
ANR	907914	IfStatement	if ( od > end && oc <= end + 1 )		907768	0					
ANR	907915	Condition	od > end && oc <= end + 1	4240:15:133342:133366	907768	0	True				
ANR	907916	AndExpression	od > end && oc <= end + 1		907768	0		&&			
ANR	907917	RelationalExpression	od > end		907768	0		>			
ANR	907918	Identifier	od		907768	0					
ANR	907919	Identifier	end		907768	1					
ANR	907920	RelationalExpression	oc <= end + 1		907768	1		<=			
ANR	907921	Identifier	oc		907768	0					
ANR	907922	AdditiveExpression	end + 1		907768	1		+			
ANR	907923	Identifier	end		907768	0					
ANR	907924	PrimaryExpression	1		907768	1					
ANR	907925	CompoundStatement		39:8:1309:1309	907768	1					
ANR	907926	ExpressionStatement	end = od	4242:8:133387:133395	907768	0	True				
ANR	907927	AssignmentExpression	end = od		907768	0		=			
ANR	907928	Identifier	end		907768	0					
ANR	907929	Identifier	od		907768	1					
ANR	907930	IfStatement	if ( end > classbits_end )		907768	1					
ANR	907931	Condition	end > classbits_end	4243:12:133436:133454	907768	0	True				
ANR	907932	RelationalExpression	end > classbits_end		907768	0		>			
ANR	907933	Identifier	end		907768	0					
ANR	907934	Identifier	classbits_end		907768	1					
ANR	907935	ExpressionStatement	classbits_end = ( end <= 0xff ? end : 0xff )	4243:33:133457:133499	907768	1	True				
ANR	907936	AssignmentExpression	classbits_end = ( end <= 0xff ? end : 0xff )		907768	0		=			
ANR	907937	Identifier	classbits_end		907768	0					
ANR	907938	ConditionalExpression	end <= 0xff ? end : 0xff		907768	1					
ANR	907939	Condition	end <= 0xff		907768	0					
ANR	907940	RelationalExpression	end <= 0xff		907768	0		<=			
ANR	907941	Identifier	end		907768	0					
ANR	907942	PrimaryExpression	0xff		907768	1					
ANR	907943	Identifier	end		907768	1					
ANR	907944	PrimaryExpression	0xff		907768	2					
ANR	907945	ElseStatement	else		907768	0					
ANR	907946	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , oc , od )"	4245:11:133522:133583	907768	0	True				
ANR	907947	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , oc , od )"		907768	0		+=			
ANR	907948	Identifier	n8		907768	0					
ANR	907949	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , oc , od )"		907768	1					
ANR	907950	Callee	add_to_class		907768	0					
ANR	907951	Identifier	add_to_class		907768	0					
ANR	907952	ArgumentList	classbits		907768	1					
ANR	907953	Argument	classbits		907768	0					
ANR	907954	Identifier	classbits		907768	0					
ANR	907955	Argument	uchardptr		907768	1					
ANR	907956	Identifier	uchardptr		907768	0					
ANR	907957	Argument	options		907768	2					
ANR	907958	Identifier	options		907768	0					
ANR	907959	Argument	cd		907768	3					
ANR	907960	Identifier	cd		907768	0					
ANR	907961	Argument	oc		907768	4					
ANR	907962	Identifier	oc		907768	0					
ANR	907963	Argument	od		907768	5					
ANR	907964	Identifier	od		907768	0					
ANR	907965	ElseStatement	else		907768	0					
ANR	907966	ForStatement	for ( c = start ; c <= classbits_end ; c ++ )		907768	0					
ANR	907967	ForInit	c = start ;	4253:7:133673:133682	907768	0	True				
ANR	907968	AssignmentExpression	c = start		907768	0		=			
ANR	907969	Identifier	c		907768	0					
ANR	907970	Identifier	start		907768	1					
ANR	907971	Condition	c <= classbits_end	4253:18:133684:133701	907768	1	True				
ANR	907972	RelationalExpression	c <= classbits_end		907768	0		<=			
ANR	907973	Identifier	c		907768	0					
ANR	907974	Identifier	classbits_end		907768	1					
ANR	907975	PostIncDecOperationExpression	c ++	4253:38:133704:133706	907768	2	True				
ANR	907976	Identifier	c		907768	0					
ANR	907977	IncDec	++		907768	1					
ANR	907978	CompoundStatement		52:4:1645:1645	907768	3					
ANR	907979	ExpressionStatement	"SETBIT ( classbits , cd -> fcc [ c ] )"	4255:4:133719:133748	907768	0	True				
ANR	907980	CallExpression	"SETBIT ( classbits , cd -> fcc [ c ] )"		907768	0					
ANR	907981	Callee	SETBIT		907768	0					
ANR	907982	Identifier	SETBIT		907768	0					
ANR	907983	ArgumentList	classbits		907768	1					
ANR	907984	Argument	classbits		907768	0					
ANR	907985	Identifier	classbits		907768	0					
ANR	907986	Argument	cd -> fcc [ c ]		907768	1					
ANR	907987	ArrayIndexing	cd -> fcc [ c ]		907768	0					
ANR	907988	PtrMemberAccess	cd -> fcc		907768	0					
ANR	907989	Identifier	cd		907768	0					
ANR	907990	Identifier	fcc		907768	1					
ANR	907991	Identifier	c		907768	1					
ANR	907992	ExpressionStatement	n8 ++	4256:4:133754:133758	907768	1	True				
ANR	907993	PostIncDecOperationExpression	n8 ++		907768	0					
ANR	907994	Identifier	n8		907768	0					
ANR	907995	IncDec	++		907768	1					
ANR	907996	IfStatement	if ( ( options & PCRE_UTF8 ) == 0 )		907768	4					
ANR	907997	Condition	( options & PCRE_UTF8 ) == 0	4266:6:133998:134023	907768	0	True				
ANR	907998	EqualityExpression	( options & PCRE_UTF8 ) == 0		907768	0		==			
ANR	907999	BitAndExpression	options & PCRE_UTF8		907768	0		&			
ANR	908000	Identifier	options		907768	0					
ANR	908001	Identifier	PCRE_UTF8		907768	1					
ANR	908002	PrimaryExpression	0		907768	1					
ANR	908003	IfStatement	if ( end > 0xff )		907768	1					
ANR	908004	Condition	end > 0xff	4268:6:134039:134048	907768	0	True				
ANR	908005	RelationalExpression	end > 0xff		907768	0		>			
ANR	908006	Identifier	end		907768	0					
ANR	908007	PrimaryExpression	0xff		907768	1					
ANR	908008	ExpressionStatement	end = 0xff	4268:18:134051:134061	907768	1	True				
ANR	908009	AssignmentExpression	end = 0xff		907768	0		=			
ANR	908010	Identifier	end		907768	0					
ANR	908011	PrimaryExpression	0xff		907768	1					
ANR	908012	ForStatement	for ( c = start ; c <= classbits_end ; c ++ )		907768	5					
ANR	908013	ForInit	c = start ;	4280:5:134296:134305	907768	0	True				
ANR	908014	AssignmentExpression	c = start		907768	0		=			
ANR	908015	Identifier	c		907768	0					
ANR	908016	Identifier	start		907768	1					
ANR	908017	Condition	c <= classbits_end	4280:16:134307:134324	907768	1	True				
ANR	908018	RelationalExpression	c <= classbits_end		907768	0		<=			
ANR	908019	Identifier	c		907768	0					
ANR	908020	Identifier	classbits_end		907768	1					
ANR	908021	PostIncDecOperationExpression	c ++	4280:36:134327:134329	907768	2	True				
ANR	908022	Identifier	c		907768	0					
ANR	908023	IncDec	++		907768	1					
ANR	908024	CompoundStatement		79:2:2266:2266	907768	3					
ANR	908025	ExpressionStatement	"SETBIT ( classbits , c )"	4283:2:134392:134412	907768	0	True				
ANR	908026	CallExpression	"SETBIT ( classbits , c )"		907768	0					
ANR	908027	Callee	SETBIT		907768	0					
ANR	908028	Identifier	SETBIT		907768	0					
ANR	908029	ArgumentList	classbits		907768	1					
ANR	908030	Argument	classbits		907768	0					
ANR	908031	Identifier	classbits		907768	0					
ANR	908032	Argument	c		907768	1					
ANR	908033	Identifier	c		907768	0					
ANR	908034	ExpressionStatement	n8 ++	4284:2:134416:134420	907768	1	True				
ANR	908035	PostIncDecOperationExpression	n8 ++		907768	0					
ANR	908036	Identifier	n8		907768	0					
ANR	908037	IncDec	++		907768	1					
ANR	908038	IfStatement	if ( start <= 0xff )		907768	6					
ANR	908039	Condition	start <= 0xff	4288:4:134481:134493	907768	0	True				
ANR	908040	RelationalExpression	start <= 0xff		907768	0		<=			
ANR	908041	Identifier	start		907768	0					
ANR	908042	PrimaryExpression	0xff		907768	1					
ANR	908043	ExpressionStatement	start = 0xff + 1	4288:19:134496:134512	907768	1	True				
ANR	908044	AssignmentExpression	start = 0xff + 1		907768	0		=			
ANR	908045	Identifier	start		907768	0					
ANR	908046	AdditiveExpression	0xff + 1		907768	1		+			
ANR	908047	PrimaryExpression	0xff		907768	0					
ANR	908048	PrimaryExpression	1		907768	1					
ANR	908049	IfStatement	if ( end >= start )		907768	7					
ANR	908050	Condition	end >= start	4290:4:134519:134530	907768	0	True				
ANR	908051	RelationalExpression	end >= start		907768	0		>=			
ANR	908052	Identifier	end		907768	0					
ANR	908053	Identifier	start		907768	1					
ANR	908054	CompoundStatement		90:2:2471:2505	907768	1					
ANR	908055	IdentifierDeclStatement	pcre_uchar * uchardata = * uchardptr ;	4292:2:134539:134573	907768	0	True				
ANR	908056	IdentifierDecl	* uchardata = * uchardptr		907768	0					
ANR	908057	IdentifierDeclType	pcre_uchar *		907768	0					
ANR	908058	Identifier	uchardata		907768	1					
ANR	908059	AssignmentExpression	* uchardata = * uchardptr		907768	2		=			
ANR	908060	Identifier	uchardata		907768	0					
ANR	908061	UnaryOperationExpression	* uchardptr		907768	1					
ANR	908062	UnaryOperator	*		907768	0					
ANR	908063	Identifier	uchardptr		907768	1					
ANR	908064	IfStatement	if ( ( options & PCRE_UTF8 ) != 0 )		907768	1					
ANR	908065	Condition	( options & PCRE_UTF8 ) != 0	4294:6:134600:134625	907768	0	True				
ANR	908066	EqualityExpression	( options & PCRE_UTF8 ) != 0		907768	0		!=			
ANR	908067	BitAndExpression	options & PCRE_UTF8		907768	0		&			
ANR	908068	Identifier	options		907768	0					
ANR	908069	Identifier	PCRE_UTF8		907768	1					
ANR	908070	PrimaryExpression	0		907768	1					
ANR	908071	CompoundStatement		93:4:2602:2602	907768	1					
ANR	908072	IfStatement	if ( start < end )		907768	0					
ANR	908073	Condition	start < end	4296:8:134680:134690	907768	0	True				
ANR	908074	RelationalExpression	start < end		907768	0		<			
ANR	908075	Identifier	start		907768	0					
ANR	908076	Identifier	end		907768	1					
ANR	908077	CompoundStatement		95:6:2631:2631	907768	1					
ANR	908078	ExpressionStatement	* uchardata ++ = XCL_RANGE	4298:6:134707:134731	907768	0	True				
ANR	908079	AssignmentExpression	* uchardata ++ = XCL_RANGE		907768	0		=			
ANR	908080	UnaryOperationExpression	* uchardata ++		907768	0					
ANR	908081	UnaryOperator	*		907768	0					
ANR	908082	PostIncDecOperationExpression	uchardata ++		907768	1					
ANR	908083	Identifier	uchardata		907768	0					
ANR	908084	IncDec	++		907768	1					
ANR	908085	Identifier	XCL_RANGE		907768	1					
ANR	908086	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"	4299:6:134739:134783	907768	1	True				
ANR	908087	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"		907768	0		+=			
ANR	908088	Identifier	uchardata		907768	0					
ANR	908089	CallExpression	"PRIV ( ord2utf ) ( start , uchardata )"		907768	1					
ANR	908090	Callee	PRIV ( ord2utf )		907768	0					
ANR	908091	CallExpression	PRIV ( ord2utf )		907768	0					
ANR	908092	Callee	PRIV		907768	0					
ANR	908093	Identifier	PRIV		907768	0					
ANR	908094	ArgumentList	ord2utf		907768	1					
ANR	908095	Argument	ord2utf		907768	0					
ANR	908096	Identifier	ord2utf		907768	0					
ANR	908097	ArgumentList	start		907768	1					
ANR	908098	Argument	start		907768	0					
ANR	908099	Identifier	start		907768	0					
ANR	908100	Argument	uchardata		907768	1					
ANR	908101	Identifier	uchardata		907768	0					
ANR	908102	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( end , uchardata )"	4300:6:134791:134833	907768	2	True				
ANR	908103	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( end , uchardata )"		907768	0		+=			
ANR	908104	Identifier	uchardata		907768	0					
ANR	908105	CallExpression	"PRIV ( ord2utf ) ( end , uchardata )"		907768	1					
ANR	908106	Callee	PRIV ( ord2utf )		907768	0					
ANR	908107	CallExpression	PRIV ( ord2utf )		907768	0					
ANR	908108	Callee	PRIV		907768	0					
ANR	908109	Identifier	PRIV		907768	0					
ANR	908110	ArgumentList	ord2utf		907768	1					
ANR	908111	Argument	ord2utf		907768	0					
ANR	908112	Identifier	ord2utf		907768	0					
ANR	908113	ArgumentList	end		907768	1					
ANR	908114	Argument	end		907768	0					
ANR	908115	Identifier	end		907768	0					
ANR	908116	Argument	uchardata		907768	1					
ANR	908117	Identifier	uchardata		907768	0					
ANR	908118	ElseStatement	else		907768	0					
ANR	908119	IfStatement	if ( start == end )		907768	0					
ANR	908120	Condition	start == end	4302:13:134856:134867	907768	0	True				
ANR	908121	EqualityExpression	start == end		907768	0		==			
ANR	908122	Identifier	start		907768	0					
ANR	908123	Identifier	end		907768	1					
ANR	908124	CompoundStatement		101:6:2808:2808	907768	1					
ANR	908125	ExpressionStatement	* uchardata ++ = XCL_SINGLE	4304:6:134884:134909	907768	0	True				
ANR	908126	AssignmentExpression	* uchardata ++ = XCL_SINGLE		907768	0		=			
ANR	908127	UnaryOperationExpression	* uchardata ++		907768	0					
ANR	908128	UnaryOperator	*		907768	0					
ANR	908129	PostIncDecOperationExpression	uchardata ++		907768	1					
ANR	908130	Identifier	uchardata		907768	0					
ANR	908131	IncDec	++		907768	1					
ANR	908132	Identifier	XCL_SINGLE		907768	1					
ANR	908133	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"	4305:6:134917:134961	907768	1	True				
ANR	908134	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"		907768	0		+=			
ANR	908135	Identifier	uchardata		907768	0					
ANR	908136	CallExpression	"PRIV ( ord2utf ) ( start , uchardata )"		907768	1					
ANR	908137	Callee	PRIV ( ord2utf )		907768	0					
ANR	908138	CallExpression	PRIV ( ord2utf )		907768	0					
ANR	908139	Callee	PRIV		907768	0					
ANR	908140	Identifier	PRIV		907768	0					
ANR	908141	ArgumentList	ord2utf		907768	1					
ANR	908142	Argument	ord2utf		907768	0					
ANR	908143	Identifier	ord2utf		907768	0					
ANR	908144	ArgumentList	start		907768	1					
ANR	908145	Argument	start		907768	0					
ANR	908146	Identifier	start		907768	0					
ANR	908147	Argument	uchardata		907768	1					
ANR	908148	Identifier	uchardata		907768	0					
ANR	908149	ElseStatement	else		907768	0					
ANR	908150	CompoundStatement		113:4:3107:3107	907768	0					
ANR	908151	ExpressionStatement	* uchardptr = uchardata	4330:2:135399:135421	907768	2	True				
ANR	908152	AssignmentExpression	* uchardptr = uchardata		907768	0		=			
ANR	908153	UnaryOperationExpression	* uchardptr		907768	0					
ANR	908154	UnaryOperator	*		907768	0					
ANR	908155	Identifier	uchardptr		907768	1					
ANR	908156	Identifier	uchardata		907768	1					
ANR	908157	ReturnStatement	return n8 ;	4334:0:135505:135514	907768	8	True				
ANR	908158	Identifier	n8		907768	0					
ANR	908159	ReturnType	static int		907768	1					
ANR	908160	Identifier	add_to_class		907768	2					
ANR	908161	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , pcre_uint32 start , pcre_uint32 end"		907768	3					
ANR	908162	Parameter	pcre_uint8 * classbits	4201:13:131951:131971	907768	0	True				
ANR	908163	ParameterType	pcre_uint8 *		907768	0					
ANR	908164	Identifier	classbits		907768	1					
ANR	908165	Parameter	pcre_uchar * * uchardptr	4201:36:131974:131995	907768	1	True				
ANR	908166	ParameterType	pcre_uchar * *		907768	0					
ANR	908167	Identifier	uchardptr		907768	1					
ANR	908168	Parameter	int options	4201:60:131998:132008	907768	2	True				
ANR	908169	ParameterType	int		907768	0					
ANR	908170	Identifier	options		907768	1					
ANR	908171	Parameter	compile_data * cd	4202:2:132013:132028	907768	3	True				
ANR	908172	ParameterType	compile_data *		907768	0					
ANR	908173	Identifier	cd		907768	1					
ANR	908174	Parameter	pcre_uint32 start	4202:20:132031:132047	907768	4	True				
ANR	908175	ParameterType	pcre_uint32		907768	0					
ANR	908176	Identifier	start		907768	1					
ANR	908177	Parameter	pcre_uint32 end	4202:39:132050:132064	907768	5	True				
ANR	908178	ParameterType	pcre_uint32		907768	0					
ANR	908179	Identifier	end		907768	1					
ANR	908180	CFGEntryNode	ENTRY		907768		True				
ANR	908181	CFGExitNode	EXIT		907768		True				
ANR	908182	Symbol	cd -> fcc		907768						
ANR	908183	Symbol	* cd		907768						
ANR	908184	Symbol	~PCRE_CASELESS		907768						
ANR	908185	Symbol	n8		907768						
ANR	908186	Symbol	PRIV		907768						
ANR	908187	Symbol	add_to_class		907768						
ANR	908188	Symbol	uchardptr		907768						
ANR	908189	Symbol	classbits		907768						
ANR	908190	Symbol	* uchardptr		907768						
ANR	908191	Symbol	classbits_end		907768						
ANR	908192	Symbol	* * cd		907768						
ANR	908193	Symbol	ucd_caseless_sets		907768						
ANR	908194	Symbol	add_list_to_class		907768						
ANR	908195	Symbol	XCL_RANGE		907768						
ANR	908196	Symbol	oc		907768						
ANR	908197	Symbol	od		907768						
ANR	908198	Symbol	* uchardata ++		907768						
ANR	908199	Symbol	options		907768						
ANR	908200	Symbol	end		907768						
ANR	908201	Symbol	PCRE_CASELESS		907768						
ANR	908202	Symbol	& od		907768						
ANR	908203	Symbol	& oc		907768						
ANR	908204	Symbol	cd		907768						
ANR	908205	Symbol	c		907768						
ANR	908206	Symbol	ord2utf		907768						
ANR	908207	Symbol	start		907768						
ANR	908208	Symbol	& c		907768						
ANR	908209	Symbol	* cd -> fcc		907768						
ANR	908210	Symbol	uchardata		907768						
ANR	908211	Symbol	* c		907768						
ANR	908212	Symbol	rc		907768						
ANR	908213	Symbol	get_othercase_range		907768						
ANR	908214	Symbol	XCL_SINGLE		907768						
ANR	908215	Symbol	PCRE_UTF8		907768						
ANR	908216	Function	add_list_to_class	4364:0:136589:136969							
ANR	908217	FunctionDef	"add_list_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p , unsigned int except)"		908216	0					
ANR	908218	CompoundStatement		4367:0:136741:136969	908216	0					
ANR	908219	IdentifierDeclStatement	int n8 = 0 ;	4368:0:136743:136753	908216	0	True				
ANR	908220	IdentifierDecl	n8 = 0		908216	0					
ANR	908221	IdentifierDeclType	int		908216	0					
ANR	908222	Identifier	n8		908216	1					
ANR	908223	AssignmentExpression	n8 = 0		908216	2		=			
ANR	908224	Identifier	n8		908216	0					
ANR	908225	PrimaryExpression	0		908216	1					
ANR	908226	WhileStatement	while ( p [ 0 ] < NOTACHAR )		908216	1					
ANR	908227	Condition	p [ 0 ] < NOTACHAR	4369:7:136762:136776	908216	0	True				
ANR	908228	RelationalExpression	p [ 0 ] < NOTACHAR		908216	0		<			
ANR	908229	ArrayIndexing	p [ 0 ]		908216	0					
ANR	908230	Identifier	p		908216	0					
ANR	908231	PrimaryExpression	0		908216	1					
ANR	908232	Identifier	NOTACHAR		908216	1					
ANR	908233	CompoundStatement		5:2:43:52	908216	1					
ANR	908234	IdentifierDeclStatement	int n = 0 ;	4371:2:136785:136794	908216	0	True				
ANR	908235	IdentifierDecl	n = 0		908216	0					
ANR	908236	IdentifierDeclType	int		908216	0					
ANR	908237	Identifier	n		908216	1					
ANR	908238	AssignmentExpression	n = 0		908216	2		=			
ANR	908239	Identifier	n		908216	0					
ANR	908240	PrimaryExpression	0		908216	1					
ANR	908241	IfStatement	if ( p [ 0 ] != except )		908216	1					
ANR	908242	Condition	p [ 0 ] != except	4372:6:136802:136815	908216	0	True				
ANR	908243	EqualityExpression	p [ 0 ] != except		908216	0		!=			
ANR	908244	ArrayIndexing	p [ 0 ]		908216	0					
ANR	908245	Identifier	p		908216	0					
ANR	908246	PrimaryExpression	0		908216	1					
ANR	908247	Identifier	except		908216	1					
ANR	908248	CompoundStatement		7:4:80:80	908216	1					
ANR	908249	WhileStatement	while ( p [ n + 1 ] == p [ 0 ] + n + 1 )		908216	0					
ANR	908250	Condition	p [ n + 1 ] == p [ 0 ] + n + 1	4374:10:136834:136855	908216	0	True				
ANR	908251	EqualityExpression	p [ n + 1 ] == p [ 0 ] + n + 1		908216	0		==			
ANR	908252	ArrayIndexing	p [ n + 1 ]		908216	0					
ANR	908253	Identifier	p		908216	0					
ANR	908254	AdditiveExpression	n + 1		908216	1		+			
ANR	908255	Identifier	n		908216	0					
ANR	908256	PrimaryExpression	1		908216	1					
ANR	908257	AdditiveExpression	p [ 0 ] + n + 1		908216	1		+			
ANR	908258	ArrayIndexing	p [ 0 ]		908216	0					
ANR	908259	Identifier	p		908216	0					
ANR	908260	PrimaryExpression	0		908216	1					
ANR	908261	AdditiveExpression	n + 1		908216	1		+			
ANR	908262	Identifier	n		908216	0					
ANR	908263	PrimaryExpression	1		908216	1					
ANR	908264	ExpressionStatement	n ++	4374:34:136858:136861	908216	1	True				
ANR	908265	PostIncDecOperationExpression	n ++		908216	0					
ANR	908266	Identifier	n		908216	0					
ANR	908267	IncDec	++		908216	1					
ANR	908268	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"	4375:4:136867:136932	908216	1	True				
ANR	908269	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"		908216	0		+=			
ANR	908270	Identifier	n8		908216	0					
ANR	908271	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"		908216	1					
ANR	908272	Callee	add_to_class		908216	0					
ANR	908273	Identifier	add_to_class		908216	0					
ANR	908274	ArgumentList	classbits		908216	1					
ANR	908275	Argument	classbits		908216	0					
ANR	908276	Identifier	classbits		908216	0					
ANR	908277	Argument	uchardptr		908216	1					
ANR	908278	Identifier	uchardptr		908216	0					
ANR	908279	Argument	options		908216	2					
ANR	908280	Identifier	options		908216	0					
ANR	908281	Argument	cd		908216	3					
ANR	908282	Identifier	cd		908216	0					
ANR	908283	Argument	p [ 0 ]		908216	4					
ANR	908284	ArrayIndexing	p [ 0 ]		908216	0					
ANR	908285	Identifier	p		908216	0					
ANR	908286	PrimaryExpression	0		908216	1					
ANR	908287	Argument	p [ n ]		908216	5					
ANR	908288	ArrayIndexing	p [ n ]		908216	0					
ANR	908289	Identifier	p		908216	0					
ANR	908290	Identifier	n		908216	1					
ANR	908291	ExpressionStatement	p += n + 1	4377:2:136942:136952	908216	2	True				
ANR	908292	AssignmentExpression	p += n + 1		908216	0		+=			
ANR	908293	Identifier	p		908216	0					
ANR	908294	AdditiveExpression	n + 1		908216	1		+			
ANR	908295	Identifier	n		908216	0					
ANR	908296	PrimaryExpression	1		908216	1					
ANR	908297	ReturnStatement	return n8 ;	4379:0:136958:136967	908216	2	True				
ANR	908298	Identifier	n8		908216	0					
ANR	908299	ReturnType	static int		908216	1					
ANR	908300	Identifier	add_list_to_class		908216	2					
ANR	908301	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p , unsigned int except"		908216	3					
ANR	908302	Parameter	pcre_uint8 * classbits	4365:18:136618:136638	908216	0	True				
ANR	908303	ParameterType	pcre_uint8 *		908216	0					
ANR	908304	Identifier	classbits		908216	1					
ANR	908305	Parameter	pcre_uchar * * uchardptr	4365:41:136641:136662	908216	1	True				
ANR	908306	ParameterType	pcre_uchar * *		908216	0					
ANR	908307	Identifier	uchardptr		908216	1					
ANR	908308	Parameter	int options	4365:65:136665:136675	908216	2	True				
ANR	908309	ParameterType	int		908216	0					
ANR	908310	Identifier	options		908216	1					
ANR	908311	Parameter	compile_data * cd	4366:2:136680:136695	908216	3	True				
ANR	908312	ParameterType	compile_data *		908216	0					
ANR	908313	Identifier	cd		908216	1					
ANR	908314	Parameter	const pcre_uint32 * p	4366:20:136698:136717	908216	4	True				
ANR	908315	ParameterType	const pcre_uint32 *		908216	0					
ANR	908316	Identifier	p		908216	1					
ANR	908317	Parameter	unsigned int except	4366:42:136720:136738	908216	5	True				
ANR	908318	ParameterType	unsigned int		908216	0					
ANR	908319	Identifier	except		908216	1					
ANR	908320	CFGEntryNode	ENTRY		908216		True				
ANR	908321	CFGExitNode	EXIT		908216		True				
ANR	908322	Symbol	p		908216						
ANR	908323	Symbol	cd		908216						
ANR	908324	Symbol	NOTACHAR		908216						
ANR	908325	Symbol	options		908216						
ANR	908326	Symbol	* n		908216						
ANR	908327	Symbol	except		908216						
ANR	908328	Symbol	n8		908216						
ANR	908329	Symbol	* p		908216						
ANR	908330	Symbol	add_to_class		908216						
ANR	908331	Symbol	uchardptr		908216						
ANR	908332	Symbol	classbits		908216						
ANR	908333	Symbol	n		908216						
ANR	908334	Function	add_not_list_to_class	4402:0:137643:138133							
ANR	908335	FunctionDef	"add_not_list_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p)"		908334	0					
ANR	908336	CompoundStatement		4405:0:137778:138133	908334	0					
ANR	908337	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	4406:0:137780:137817	908334	0	True				
ANR	908338	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		908334	0					
ANR	908339	IdentifierDeclType	BOOL		908334	0					
ANR	908340	Identifier	utf		908334	1					
ANR	908341	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		908334	2		=			
ANR	908342	Identifier	utf		908334	0					
ANR	908343	EqualityExpression	( options & PCRE_UTF8 ) != 0		908334	1		!=			
ANR	908344	BitAndExpression	options & PCRE_UTF8		908334	0		&			
ANR	908345	Identifier	options		908334	0					
ANR	908346	Identifier	PCRE_UTF8		908334	1					
ANR	908347	PrimaryExpression	0		908334	1					
ANR	908348	IdentifierDeclStatement	int n8 = 0 ;	4407:0:137819:137829	908334	1	True				
ANR	908349	IdentifierDecl	n8 = 0		908334	0					
ANR	908350	IdentifierDeclType	int		908334	0					
ANR	908351	Identifier	n8		908334	1					
ANR	908352	AssignmentExpression	n8 = 0		908334	2		=			
ANR	908353	Identifier	n8		908334	0					
ANR	908354	PrimaryExpression	0		908334	1					
ANR	908355	IfStatement	if ( p [ 0 ] > 0 )		908334	2					
ANR	908356	Condition	p [ 0 ] > 0	4408:4:137835:137842	908334	0	True				
ANR	908357	RelationalExpression	p [ 0 ] > 0		908334	0		>			
ANR	908358	ArrayIndexing	p [ 0 ]		908334	0					
ANR	908359	Identifier	p		908334	0					
ANR	908360	PrimaryExpression	0		908334	1					
ANR	908361	PrimaryExpression	0		908334	1					
ANR	908362	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"	4409:2:137847:137913	908334	1	True				
ANR	908363	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"		908334	0		+=			
ANR	908364	Identifier	n8		908334	0					
ANR	908365	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"		908334	1					
ANR	908366	Callee	add_to_class		908334	0					
ANR	908367	Identifier	add_to_class		908334	0					
ANR	908368	ArgumentList	classbits		908334	1					
ANR	908369	Argument	classbits		908334	0					
ANR	908370	Identifier	classbits		908334	0					
ANR	908371	Argument	uchardptr		908334	1					
ANR	908372	Identifier	uchardptr		908334	0					
ANR	908373	Argument	options		908334	2					
ANR	908374	Identifier	options		908334	0					
ANR	908375	Argument	cd		908334	3					
ANR	908376	Identifier	cd		908334	0					
ANR	908377	Argument	0		908334	4					
ANR	908378	PrimaryExpression	0		908334	0					
ANR	908379	Argument	p [ 0 ] - 1		908334	5					
ANR	908380	AdditiveExpression	p [ 0 ] - 1		908334	0		-			
ANR	908381	ArrayIndexing	p [ 0 ]		908334	0					
ANR	908382	Identifier	p		908334	0					
ANR	908383	PrimaryExpression	0		908334	1					
ANR	908384	PrimaryExpression	1		908334	1					
ANR	908385	WhileStatement	while ( p [ 0 ] < NOTACHAR )		908334	3					
ANR	908386	Condition	p [ 0 ] < NOTACHAR	4410:7:137922:137936	908334	0	True				
ANR	908387	RelationalExpression	p [ 0 ] < NOTACHAR		908334	0		<			
ANR	908388	ArrayIndexing	p [ 0 ]		908334	0					
ANR	908389	Identifier	p		908334	0					
ANR	908390	PrimaryExpression	0		908334	1					
ANR	908391	Identifier	NOTACHAR		908334	1					
ANR	908392	CompoundStatement		7:2:162:162	908334	1					
ANR	908393	WhileStatement	while ( p [ 1 ] == p [ 0 ] + 1 )		908334	0					
ANR	908394	Condition	p [ 1 ] == p [ 0 ] + 1	4412:9:137952:137967	908334	0	True				
ANR	908395	EqualityExpression	p [ 1 ] == p [ 0 ] + 1		908334	0		==			
ANR	908396	ArrayIndexing	p [ 1 ]		908334	0					
ANR	908397	Identifier	p		908334	0					
ANR	908398	PrimaryExpression	1		908334	1					
ANR	908399	AdditiveExpression	p [ 0 ] + 1		908334	1		+			
ANR	908400	ArrayIndexing	p [ 0 ]		908334	0					
ANR	908401	Identifier	p		908334	0					
ANR	908402	PrimaryExpression	0		908334	1					
ANR	908403	PrimaryExpression	1		908334	1					
ANR	908404	ExpressionStatement	p ++	4412:27:137970:137973	908334	1	True				
ANR	908405	PostIncDecOperationExpression	p ++		908334	0					
ANR	908406	Identifier	p		908334	0					
ANR	908407	IncDec	++		908334	1					
ANR	908408	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"	4413:2:137977:138109	908334	1	True				
ANR	908409	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"		908334	0		+=			
ANR	908410	Identifier	n8		908334	0					
ANR	908411	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"		908334	1					
ANR	908412	Callee	add_to_class		908334	0					
ANR	908413	Identifier	add_to_class		908334	0					
ANR	908414	ArgumentList	classbits		908334	1					
ANR	908415	Argument	classbits		908334	0					
ANR	908416	Identifier	classbits		908334	0					
ANR	908417	Argument	uchardptr		908334	1					
ANR	908418	Identifier	uchardptr		908334	0					
ANR	908419	Argument	options		908334	2					
ANR	908420	Identifier	options		908334	0					
ANR	908421	Argument	cd		908334	3					
ANR	908422	Identifier	cd		908334	0					
ANR	908423	Argument	p [ 0 ] + 1		908334	4					
ANR	908424	AdditiveExpression	p [ 0 ] + 1		908334	0		+			
ANR	908425	ArrayIndexing	p [ 0 ]		908334	0					
ANR	908426	Identifier	p		908334	0					
ANR	908427	PrimaryExpression	0		908334	1					
ANR	908428	PrimaryExpression	1		908334	1					
ANR	908429	Argument	( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1		908334	5					
ANR	908430	ConditionalExpression	( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1		908334	0					
ANR	908431	Condition	p [ 1 ] == NOTACHAR		908334	0					
ANR	908432	EqualityExpression	p [ 1 ] == NOTACHAR		908334	0		==			
ANR	908433	ArrayIndexing	p [ 1 ]		908334	0					
ANR	908434	Identifier	p		908334	0					
ANR	908435	PrimaryExpression	1		908334	1					
ANR	908436	Identifier	NOTACHAR		908334	1					
ANR	908437	ConditionalExpression	utf ? 0x10ffffu : 0xffffffffu		908334	1					
ANR	908438	Condition	utf		908334	0					
ANR	908439	Identifier	utf		908334	0					
ANR	908440	PrimaryExpression	0x10ffffu		908334	1					
ANR	908441	PrimaryExpression	0xffffffffu		908334	2					
ANR	908442	AdditiveExpression	p [ 1 ] - 1		908334	2		-			
ANR	908443	ArrayIndexing	p [ 1 ]		908334	0					
ANR	908444	Identifier	p		908334	0					
ANR	908445	PrimaryExpression	1		908334	1					
ANR	908446	PrimaryExpression	1		908334	1					
ANR	908447	ExpressionStatement	p ++	4415:2:138113:138116	908334	2	True				
ANR	908448	PostIncDecOperationExpression	p ++		908334	0					
ANR	908449	Identifier	p		908334	0					
ANR	908450	IncDec	++		908334	1					
ANR	908451	ReturnStatement	return n8 ;	4417:0:138122:138131	908334	4	True				
ANR	908452	Identifier	n8		908334	0					
ANR	908453	ReturnType	static int		908334	1					
ANR	908454	Identifier	add_not_list_to_class		908334	2					
ANR	908455	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p"		908334	3					
ANR	908456	Parameter	pcre_uint8 * classbits	4403:22:137676:137696	908334	0	True				
ANR	908457	ParameterType	pcre_uint8 *		908334	0					
ANR	908458	Identifier	classbits		908334	1					
ANR	908459	Parameter	pcre_uchar * * uchardptr	4403:45:137699:137720	908334	1	True				
ANR	908460	ParameterType	pcre_uchar * *		908334	0					
ANR	908461	Identifier	uchardptr		908334	1					
ANR	908462	Parameter	int options	4404:2:137725:137735	908334	2	True				
ANR	908463	ParameterType	int		908334	0					
ANR	908464	Identifier	options		908334	1					
ANR	908465	Parameter	compile_data * cd	4404:15:137738:137753	908334	3	True				
ANR	908466	ParameterType	compile_data *		908334	0					
ANR	908467	Identifier	cd		908334	1					
ANR	908468	Parameter	const pcre_uint32 * p	4404:33:137756:137775	908334	4	True				
ANR	908469	ParameterType	const pcre_uint32 *		908334	0					
ANR	908470	Identifier	p		908334	1					
ANR	908471	CFGEntryNode	ENTRY		908334		True				
ANR	908472	CFGExitNode	EXIT		908334		True				
ANR	908473	Symbol	p		908334						
ANR	908474	Symbol	cd		908334						
ANR	908475	Symbol	utf		908334						
ANR	908476	Symbol	NOTACHAR		908334						
ANR	908477	Symbol	options		908334						
ANR	908478	Symbol	n8		908334						
ANR	908479	Symbol	* p		908334						
ANR	908480	Symbol	add_to_class		908334						
ANR	908481	Symbol	uchardptr		908334						
ANR	908482	Symbol	PCRE_UTF8		908334						
ANR	908483	Symbol	classbits		908334						
ANR	908484	Function	compile_branch	4451:0:139570:271049							
ANR	908485	FunctionDef	"compile_branch (int * optionsptr , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , int cond_depth , compile_data * cd , int * lengthptr)"		908484	0					
ANR	908486	CompoundStatement		4458:0:139875:271049	908484	0					
ANR	908487	IdentifierDeclStatement	"int repeat_type , op_type ;"	4459:0:139877:139901	908484	0	True				
ANR	908488	IdentifierDecl	repeat_type		908484	0					
ANR	908489	IdentifierDeclType	int		908484	0					
ANR	908490	Identifier	repeat_type		908484	1					
ANR	908491	IdentifierDecl	op_type		908484	1					
ANR	908492	IdentifierDeclType	int		908484	0					
ANR	908493	Identifier	op_type		908484	1					
ANR	908494	IdentifierDeclStatement	"int repeat_min = 0 , repeat_max = 0 ;"	4460:0:139903:139937	908484	1	True				
ANR	908495	IdentifierDecl	repeat_min = 0		908484	0					
ANR	908496	IdentifierDeclType	int		908484	0					
ANR	908497	Identifier	repeat_min		908484	1					
ANR	908498	AssignmentExpression	repeat_min = 0		908484	2		=			
ANR	908499	Identifier	repeat_min		908484	0					
ANR	908500	PrimaryExpression	0		908484	1					
ANR	908501	IdentifierDecl	repeat_max = 0		908484	1					
ANR	908502	IdentifierDeclType	int		908484	0					
ANR	908503	Identifier	repeat_max		908484	1					
ANR	908504	AssignmentExpression	repeat_max = 0		908484	2		=			
ANR	908505	Identifier	repeat_max		908484	0					
ANR	908506	PrimaryExpression	0		908484	1					
ANR	908507	IdentifierDeclStatement	int bravalue = 0 ;	4461:0:139976:139992	908484	2	True				
ANR	908508	IdentifierDecl	bravalue = 0		908484	0					
ANR	908509	IdentifierDeclType	int		908484	0					
ANR	908510	Identifier	bravalue		908484	1					
ANR	908511	AssignmentExpression	bravalue = 0		908484	2		=			
ANR	908512	Identifier	bravalue		908484	0					
ANR	908513	PrimaryExpression	0		908484	1					
ANR	908514	IdentifierDeclStatement	"int greedy_default , greedy_non_default ;"	4462:0:139994:140032	908484	3	True				
ANR	908515	IdentifierDecl	greedy_default		908484	0					
ANR	908516	IdentifierDeclType	int		908484	0					
ANR	908517	Identifier	greedy_default		908484	1					
ANR	908518	IdentifierDecl	greedy_non_default		908484	1					
ANR	908519	IdentifierDeclType	int		908484	0					
ANR	908520	Identifier	greedy_non_default		908484	1					
ANR	908521	IdentifierDeclStatement	"pcre_uint32 firstchar , reqchar ;"	4463:0:140034:140064	908484	4	True				
ANR	908522	IdentifierDecl	firstchar		908484	0					
ANR	908523	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908524	Identifier	firstchar		908484	1					
ANR	908525	IdentifierDecl	reqchar		908484	1					
ANR	908526	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908527	Identifier	reqchar		908484	1					
ANR	908528	IdentifierDeclStatement	"pcre_int32 firstcharflags , reqcharflags ;"	4464:0:140066:140105	908484	5	True				
ANR	908529	IdentifierDecl	firstcharflags		908484	0					
ANR	908530	IdentifierDeclType	pcre_int32		908484	0					
ANR	908531	Identifier	firstcharflags		908484	1					
ANR	908532	IdentifierDecl	reqcharflags		908484	1					
ANR	908533	IdentifierDeclType	pcre_int32		908484	0					
ANR	908534	Identifier	reqcharflags		908484	1					
ANR	908535	IdentifierDeclStatement	"pcre_uint32 zeroreqchar , zerofirstchar ;"	4465:0:140107:140145	908484	6	True				
ANR	908536	IdentifierDecl	zeroreqchar		908484	0					
ANR	908537	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908538	Identifier	zeroreqchar		908484	1					
ANR	908539	IdentifierDecl	zerofirstchar		908484	1					
ANR	908540	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908541	Identifier	zerofirstchar		908484	1					
ANR	908542	IdentifierDeclStatement	"pcre_int32 zeroreqcharflags , zerofirstcharflags ;"	4466:0:140147:140194	908484	7	True				
ANR	908543	IdentifierDecl	zeroreqcharflags		908484	0					
ANR	908544	IdentifierDeclType	pcre_int32		908484	0					
ANR	908545	Identifier	zeroreqcharflags		908484	1					
ANR	908546	IdentifierDecl	zerofirstcharflags		908484	1					
ANR	908547	IdentifierDeclType	pcre_int32		908484	0					
ANR	908548	Identifier	zerofirstcharflags		908484	1					
ANR	908549	IdentifierDeclStatement	"pcre_int32 req_caseopt , reqvary , tempreqvary ;"	4467:0:140196:140240	908484	8	True				
ANR	908550	IdentifierDecl	req_caseopt		908484	0					
ANR	908551	IdentifierDeclType	pcre_int32		908484	0					
ANR	908552	Identifier	req_caseopt		908484	1					
ANR	908553	IdentifierDecl	reqvary		908484	1					
ANR	908554	IdentifierDeclType	pcre_int32		908484	0					
ANR	908555	Identifier	reqvary		908484	1					
ANR	908556	IdentifierDecl	tempreqvary		908484	2					
ANR	908557	IdentifierDeclType	pcre_int32		908484	0					
ANR	908558	Identifier	tempreqvary		908484	1					
ANR	908559	IdentifierDeclStatement	int options = * optionsptr ;	4468:0:140242:140267	908484	9	True				
ANR	908560	IdentifierDecl	options = * optionsptr		908484	0					
ANR	908561	IdentifierDeclType	int		908484	0					
ANR	908562	Identifier	options		908484	1					
ANR	908563	AssignmentExpression	options = * optionsptr		908484	2		=			
ANR	908564	Identifier	options		908484	0					
ANR	908565	UnaryOperationExpression	* optionsptr		908484	1					
ANR	908566	UnaryOperator	*		908484	0					
ANR	908567	Identifier	optionsptr		908484	1					
ANR	908568	IdentifierDeclStatement	int after_manual_callout = 0 ;	4469:0:140312:140340	908484	10	True				
ANR	908569	IdentifierDecl	after_manual_callout = 0		908484	0					
ANR	908570	IdentifierDeclType	int		908484	0					
ANR	908571	Identifier	after_manual_callout		908484	1					
ANR	908572	AssignmentExpression	after_manual_callout = 0		908484	2		=			
ANR	908573	Identifier	after_manual_callout		908484	0					
ANR	908574	PrimaryExpression	0		908484	1					
ANR	908575	IdentifierDeclStatement	int length_prevgroup = 0 ;	4470:0:140342:140366	908484	11	True				
ANR	908576	IdentifierDecl	length_prevgroup = 0		908484	0					
ANR	908577	IdentifierDeclType	int		908484	0					
ANR	908578	Identifier	length_prevgroup		908484	1					
ANR	908579	AssignmentExpression	length_prevgroup = 0		908484	2		=			
ANR	908580	Identifier	length_prevgroup		908484	0					
ANR	908581	PrimaryExpression	0		908484	1					
ANR	908582	Statement	register	4471:0:140368:140375	908484	12	True				
ANR	908583	IdentifierDeclStatement	pcre_uint32 c ;	4471:9:140377:140390	908484	13	True				
ANR	908584	IdentifierDecl	c		908484	0					
ANR	908585	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908586	Identifier	c		908484	1					
ANR	908587	IdentifierDeclStatement	int escape ;	4472:0:140392:140402	908484	14	True				
ANR	908588	IdentifierDecl	escape		908484	0					
ANR	908589	IdentifierDeclType	int		908484	0					
ANR	908590	Identifier	escape		908484	1					
ANR	908591	Statement	register	4473:0:140404:140411	908484	15	True				
ANR	908592	IdentifierDeclStatement	pcre_uchar * code = * codeptr ;	4473:9:140413:140440	908484	16	True				
ANR	908593	IdentifierDecl	* code = * codeptr		908484	0					
ANR	908594	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908595	Identifier	code		908484	1					
ANR	908596	AssignmentExpression	* code = * codeptr		908484	2		=			
ANR	908597	Identifier	code		908484	0					
ANR	908598	UnaryOperationExpression	* codeptr		908484	1					
ANR	908599	UnaryOperator	*		908484	0					
ANR	908600	Identifier	codeptr		908484	1					
ANR	908601	IdentifierDeclStatement	pcre_uchar * last_code = code ;	4474:0:140442:140470	908484	17	True				
ANR	908602	IdentifierDecl	* last_code = code		908484	0					
ANR	908603	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908604	Identifier	last_code		908484	1					
ANR	908605	AssignmentExpression	* last_code = code		908484	2		=			
ANR	908606	Identifier	code		908484	0					
ANR	908607	Identifier	code		908484	1					
ANR	908608	IdentifierDeclStatement	pcre_uchar * orig_code = code ;	4475:0:140472:140500	908484	18	True				
ANR	908609	IdentifierDecl	* orig_code = code		908484	0					
ANR	908610	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908611	Identifier	orig_code		908484	1					
ANR	908612	AssignmentExpression	* orig_code = code		908484	2		=			
ANR	908613	Identifier	code		908484	0					
ANR	908614	Identifier	code		908484	1					
ANR	908615	IdentifierDeclStatement	pcre_uchar * tempcode ;	4476:0:140502:140522	908484	19	True				
ANR	908616	IdentifierDecl	* tempcode		908484	0					
ANR	908617	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908618	Identifier	tempcode		908484	1					
ANR	908619	IdentifierDeclStatement	BOOL inescq = FALSE ;	4477:0:140524:140543	908484	20	True				
ANR	908620	IdentifierDecl	inescq = FALSE		908484	0					
ANR	908621	IdentifierDeclType	BOOL		908484	0					
ANR	908622	Identifier	inescq		908484	1					
ANR	908623	AssignmentExpression	inescq = FALSE		908484	2		=			
ANR	908624	Identifier	FALSE		908484	0					
ANR	908625	Identifier	FALSE		908484	1					
ANR	908626	IdentifierDeclStatement	BOOL groupsetfirstchar = FALSE ;	4478:0:140545:140575	908484	21	True				
ANR	908627	IdentifierDecl	groupsetfirstchar = FALSE		908484	0					
ANR	908628	IdentifierDeclType	BOOL		908484	0					
ANR	908629	Identifier	groupsetfirstchar		908484	1					
ANR	908630	AssignmentExpression	groupsetfirstchar = FALSE		908484	2		=			
ANR	908631	Identifier	FALSE		908484	0					
ANR	908632	Identifier	FALSE		908484	1					
ANR	908633	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	4479:0:140577:140608	908484	22	True				
ANR	908634	IdentifierDecl	* ptr = * ptrptr		908484	0					
ANR	908635	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	908636	Identifier	ptr		908484	1					
ANR	908637	AssignmentExpression	* ptr = * ptrptr		908484	2		=			
ANR	908638	Identifier	ptr		908484	0					
ANR	908639	UnaryOperationExpression	* ptrptr		908484	1					
ANR	908640	UnaryOperator	*		908484	0					
ANR	908641	Identifier	ptrptr		908484	1					
ANR	908642	IdentifierDeclStatement	const pcre_uchar * tempptr ;	4480:0:140610:140635	908484	23	True				
ANR	908643	IdentifierDecl	* tempptr		908484	0					
ANR	908644	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	908645	Identifier	tempptr		908484	1					
ANR	908646	IdentifierDeclStatement	const pcre_uchar * nestptr = NULL ;	4481:0:140637:140669	908484	24	True				
ANR	908647	IdentifierDecl	* nestptr = NULL		908484	0					
ANR	908648	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	908649	Identifier	nestptr		908484	1					
ANR	908650	AssignmentExpression	* nestptr = NULL		908484	2		=			
ANR	908651	Identifier	NULL		908484	0					
ANR	908652	Identifier	NULL		908484	1					
ANR	908653	IdentifierDeclStatement	pcre_uchar * previous = NULL ;	4482:0:140671:140698	908484	25	True				
ANR	908654	IdentifierDecl	* previous = NULL		908484	0					
ANR	908655	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908656	Identifier	previous		908484	1					
ANR	908657	AssignmentExpression	* previous = NULL		908484	2		=			
ANR	908658	Identifier	NULL		908484	0					
ANR	908659	Identifier	NULL		908484	1					
ANR	908660	IdentifierDeclStatement	pcre_uchar * previous_callout = NULL ;	4483:0:140700:140735	908484	26	True				
ANR	908661	IdentifierDecl	* previous_callout = NULL		908484	0					
ANR	908662	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908663	Identifier	previous_callout		908484	1					
ANR	908664	AssignmentExpression	* previous_callout = NULL		908484	2		=			
ANR	908665	Identifier	NULL		908484	0					
ANR	908666	Identifier	NULL		908484	1					
ANR	908667	IdentifierDeclStatement	size_t item_hwm_offset = 0 ;	4484:0:140737:140763	908484	27	True				
ANR	908668	IdentifierDecl	item_hwm_offset = 0		908484	0					
ANR	908669	IdentifierDeclType	size_t		908484	0					
ANR	908670	Identifier	item_hwm_offset		908484	1					
ANR	908671	AssignmentExpression	item_hwm_offset = 0		908484	2		=			
ANR	908672	Identifier	item_hwm_offset		908484	0					
ANR	908673	PrimaryExpression	0		908484	1					
ANR	908674	IdentifierDeclStatement	pcre_uint8 classbits [ 32 ] ;	4485:0:140765:140789	908484	28	True				
ANR	908675	IdentifierDecl	classbits [ 32 ]		908484	0					
ANR	908676	IdentifierDeclType	pcre_uint8 [ 32 ]		908484	0					
ANR	908677	Identifier	classbits		908484	1					
ANR	908678	PrimaryExpression	32		908484	2					
ANR	908679	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	4493:0:141064:141101	908484	29	True				
ANR	908680	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		908484	0					
ANR	908681	IdentifierDeclType	BOOL		908484	0					
ANR	908682	Identifier	utf		908484	1					
ANR	908683	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		908484	2		=			
ANR	908684	Identifier	utf		908484	0					
ANR	908685	EqualityExpression	( options & PCRE_UTF8 ) != 0		908484	1		!=			
ANR	908686	BitAndExpression	options & PCRE_UTF8		908484	0		&			
ANR	908687	Identifier	options		908484	0					
ANR	908688	Identifier	PCRE_UTF8		908484	1					
ANR	908689	PrimaryExpression	0		908484	1					
ANR	908690	IdentifierDeclStatement	pcre_uchar utf_chars [ 6 ] ;	4495:0:141126:141149	908484	30	True				
ANR	908691	IdentifierDecl	utf_chars [ 6 ]		908484	0					
ANR	908692	IdentifierDeclType	pcre_uchar [ 6 ]		908484	0					
ANR	908693	Identifier	utf_chars		908484	1					
ANR	908694	PrimaryExpression	6		908484	2					
ANR	908695	IdentifierDeclStatement	pcre_uchar * class_uchardata ;	4506:0:141466:141493	908484	31	True				
ANR	908696	IdentifierDecl	* class_uchardata		908484	0					
ANR	908697	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908698	Identifier	class_uchardata		908484	1					
ANR	908699	IdentifierDeclStatement	BOOL xclass ;	4508:0:141545:141556	908484	32	True				
ANR	908700	IdentifierDecl	xclass		908484	0					
ANR	908701	IdentifierDeclType	BOOL		908484	0					
ANR	908702	Identifier	xclass		908484	1					
ANR	908703	IdentifierDeclStatement	pcre_uchar * class_uchardata_base ;	4509:0:141558:141590	908484	33	True				
ANR	908704	IdentifierDecl	* class_uchardata_base		908484	0					
ANR	908705	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	908706	Identifier	class_uchardata_base		908484	1					
ANR	908707	IfStatement	if ( lengthptr != NULL )		908484	34					
ANR	908708	Condition	lengthptr != NULL	4513:4:141622:141638	908484	0	True				
ANR	908709	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	908710	Identifier	lengthptr		908484	0					
ANR	908711	Identifier	NULL		908484	1					
ANR	908712	ExpressionStatement	"DPRINTF ( ( "">> start branch\\n"" ) )"	4513:23:141641:141671	908484	1	True				
ANR	908713	CallExpression	"DPRINTF ( ( "">> start branch\\n"" ) )"		908484	0					
ANR	908714	Callee	DPRINTF		908484	0					
ANR	908715	Identifier	DPRINTF		908484	0					
ANR	908716	ArgumentList	""">> start branch\\n"""		908484	1					
ANR	908717	Argument	""">> start branch\\n"""		908484	0					
ANR	908718	PrimaryExpression	""">> start branch\\n"""		908484	0					
ANR	908719	ExpressionStatement	greedy_default = ( ( options & PCRE_UNGREEDY ) != 0 )	4518:0:141747:141796	908484	35	True				
ANR	908720	AssignmentExpression	greedy_default = ( ( options & PCRE_UNGREEDY ) != 0 )		908484	0		=			
ANR	908721	Identifier	greedy_default		908484	0					
ANR	908722	EqualityExpression	( options & PCRE_UNGREEDY ) != 0		908484	1		!=			
ANR	908723	BitAndExpression	options & PCRE_UNGREEDY		908484	0		&			
ANR	908724	Identifier	options		908484	0					
ANR	908725	Identifier	PCRE_UNGREEDY		908484	1					
ANR	908726	PrimaryExpression	0		908484	1					
ANR	908727	ExpressionStatement	greedy_non_default = greedy_default ^ 1	4519:0:141798:141837	908484	36	True				
ANR	908728	AssignmentExpression	greedy_non_default = greedy_default ^ 1		908484	0		=			
ANR	908729	Identifier	greedy_non_default		908484	0					
ANR	908730	ExclusiveOrExpression	greedy_default ^ 1		908484	1		^			
ANR	908731	Identifier	greedy_default		908484	0					
ANR	908732	PrimaryExpression	1		908484	1					
ANR	908733	ExpressionStatement	firstchar = reqchar = zerofirstchar = zeroreqchar = 0	4531:0:142394:142447	908484	37	True				
ANR	908734	AssignmentExpression	firstchar = reqchar = zerofirstchar = zeroreqchar = 0		908484	0		=			
ANR	908735	Identifier	firstchar		908484	0					
ANR	908736	AssignmentExpression	reqchar = zerofirstchar = zeroreqchar = 0		908484	1		=			
ANR	908737	Identifier	reqchar		908484	0					
ANR	908738	AssignmentExpression	zerofirstchar = zeroreqchar = 0		908484	1		=			
ANR	908739	Identifier	zerofirstchar		908484	0					
ANR	908740	AssignmentExpression	zeroreqchar = 0		908484	1		=			
ANR	908741	Identifier	zeroreqchar		908484	0					
ANR	908742	PrimaryExpression	0		908484	1					
ANR	908743	ExpressionStatement	firstcharflags = reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET	4532:0:142449:142530	908484	38	True				
ANR	908744	AssignmentExpression	firstcharflags = reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET		908484	0		=			
ANR	908745	Identifier	firstcharflags		908484	0					
ANR	908746	AssignmentExpression	reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET		908484	1		=			
ANR	908747	Identifier	reqcharflags		908484	0					
ANR	908748	AssignmentExpression	zerofirstcharflags = zeroreqcharflags = REQ_UNSET		908484	1		=			
ANR	908749	Identifier	zerofirstcharflags		908484	0					
ANR	908750	AssignmentExpression	zeroreqcharflags = REQ_UNSET		908484	1		=			
ANR	908751	Identifier	zeroreqcharflags		908484	0					
ANR	908752	Identifier	REQ_UNSET		908484	1					
ANR	908753	ExpressionStatement	req_caseopt = ( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0	4540:0:142848:142910	908484	39	True				
ANR	908754	AssignmentExpression	req_caseopt = ( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		908484	0		=			
ANR	908755	Identifier	req_caseopt		908484	0					
ANR	908756	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		908484	1					
ANR	908757	Condition	( options & PCRE_CASELESS ) != 0		908484	0					
ANR	908758	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	908759	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	908760	Identifier	options		908484	0					
ANR	908761	Identifier	PCRE_CASELESS		908484	1					
ANR	908762	PrimaryExpression	0		908484	1					
ANR	908763	Identifier	REQ_CASELESS		908484	1					
ANR	908764	PrimaryExpression	0		908484	2					
ANR	908765	ForStatement	for ( ; ; ptr ++ )		908484	40					
ANR	908766	PostIncDecOperationExpression	ptr ++	4544:8:142981:142985	908484	0	True				
ANR	908767	Identifier	ptr		908484	0					
ANR	908768	IncDec	++		908484	1					
ANR	908769	CompoundStatement		110:2:3633:3655	908484	1					
ANR	908770	IdentifierDeclStatement	BOOL negate_class ;	4546:2:142994:143011	908484	0	True				
ANR	908771	IdentifierDecl	negate_class		908484	0					
ANR	908772	IdentifierDeclType	BOOL		908484	0					
ANR	908773	Identifier	negate_class		908484	1					
ANR	908774	IdentifierDeclStatement	BOOL should_flip_negation ;	4547:2:143015:143040	908484	1	True				
ANR	908775	IdentifierDecl	should_flip_negation		908484	0					
ANR	908776	IdentifierDeclType	BOOL		908484	0					
ANR	908777	Identifier	should_flip_negation		908484	1					
ANR	908778	IdentifierDeclStatement	BOOL possessive_quantifier ;	4548:2:143044:143070	908484	2	True				
ANR	908779	IdentifierDecl	possessive_quantifier		908484	0					
ANR	908780	IdentifierDeclType	BOOL		908484	0					
ANR	908781	Identifier	possessive_quantifier		908484	1					
ANR	908782	IdentifierDeclStatement	BOOL is_quantifier ;	4549:2:143074:143092	908484	3	True				
ANR	908783	IdentifierDecl	is_quantifier		908484	0					
ANR	908784	IdentifierDeclType	BOOL		908484	0					
ANR	908785	Identifier	is_quantifier		908484	1					
ANR	908786	IdentifierDeclStatement	BOOL is_recurse ;	4550:2:143096:143111	908484	4	True				
ANR	908787	IdentifierDecl	is_recurse		908484	0					
ANR	908788	IdentifierDeclType	BOOL		908484	0					
ANR	908789	Identifier	is_recurse		908484	1					
ANR	908790	IdentifierDeclStatement	BOOL reset_bracount ;	4551:2:143115:143134	908484	5	True				
ANR	908791	IdentifierDecl	reset_bracount		908484	0					
ANR	908792	IdentifierDeclType	BOOL		908484	0					
ANR	908793	Identifier	reset_bracount		908484	1					
ANR	908794	IdentifierDeclStatement	int class_has_8bitchar ;	4552:2:143138:143160	908484	6	True				
ANR	908795	IdentifierDecl	class_has_8bitchar		908484	0					
ANR	908796	IdentifierDeclType	int		908484	0					
ANR	908797	Identifier	class_has_8bitchar		908484	1					
ANR	908798	IdentifierDeclStatement	int class_one_char ;	4553:2:143164:143182	908484	7	True				
ANR	908799	IdentifierDecl	class_one_char		908484	0					
ANR	908800	IdentifierDeclType	int		908484	0					
ANR	908801	Identifier	class_one_char		908484	1					
ANR	908802	IdentifierDeclStatement	BOOL xclass_has_prop ;	4555:2:143236:143256	908484	8	True				
ANR	908803	IdentifierDecl	xclass_has_prop		908484	0					
ANR	908804	IdentifierDeclType	BOOL		908484	0					
ANR	908805	Identifier	xclass_has_prop		908484	1					
ANR	908806	IdentifierDeclStatement	int newoptions ;	4557:2:143267:143281	908484	9	True				
ANR	908807	IdentifierDecl	newoptions		908484	0					
ANR	908808	IdentifierDeclType	int		908484	0					
ANR	908809	Identifier	newoptions		908484	1					
ANR	908810	IdentifierDeclStatement	int recno ;	4558:2:143285:143294	908484	10	True				
ANR	908811	IdentifierDecl	recno		908484	0					
ANR	908812	IdentifierDeclType	int		908484	0					
ANR	908813	Identifier	recno		908484	1					
ANR	908814	IdentifierDeclStatement	int refsign ;	4559:2:143298:143309	908484	11	True				
ANR	908815	IdentifierDecl	refsign		908484	0					
ANR	908816	IdentifierDeclType	int		908484	0					
ANR	908817	Identifier	refsign		908484	1					
ANR	908818	IdentifierDeclStatement	int skipbytes ;	4560:2:143313:143326	908484	12	True				
ANR	908819	IdentifierDecl	skipbytes		908484	0					
ANR	908820	IdentifierDeclType	int		908484	0					
ANR	908821	Identifier	skipbytes		908484	1					
ANR	908822	IdentifierDeclStatement	"pcre_uint32 subreqchar , subfirstchar ;"	4561:2:143330:143366	908484	13	True				
ANR	908823	IdentifierDecl	subreqchar		908484	0					
ANR	908824	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908825	Identifier	subreqchar		908484	1					
ANR	908826	IdentifierDecl	subfirstchar		908484	1					
ANR	908827	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908828	Identifier	subfirstchar		908484	1					
ANR	908829	IdentifierDeclStatement	"pcre_int32 subreqcharflags , subfirstcharflags ;"	4562:2:143370:143415	908484	14	True				
ANR	908830	IdentifierDecl	subreqcharflags		908484	0					
ANR	908831	IdentifierDeclType	pcre_int32		908484	0					
ANR	908832	Identifier	subreqcharflags		908484	1					
ANR	908833	IdentifierDecl	subfirstcharflags		908484	1					
ANR	908834	IdentifierDeclType	pcre_int32		908484	0					
ANR	908835	Identifier	subfirstcharflags		908484	1					
ANR	908836	IdentifierDeclStatement	int terminator ;	4563:2:143419:143433	908484	15	True				
ANR	908837	IdentifierDecl	terminator		908484	0					
ANR	908838	IdentifierDeclType	int		908484	0					
ANR	908839	Identifier	terminator		908484	1					
ANR	908840	IdentifierDeclStatement	unsigned int mclength ;	4564:2:143437:143458	908484	16	True				
ANR	908841	IdentifierDecl	mclength		908484	0					
ANR	908842	IdentifierDeclType	unsigned int		908484	0					
ANR	908843	Identifier	mclength		908484	1					
ANR	908844	IdentifierDeclStatement	unsigned int tempbracount ;	4565:2:143462:143487	908484	17	True				
ANR	908845	IdentifierDecl	tempbracount		908484	0					
ANR	908846	IdentifierDeclType	unsigned int		908484	0					
ANR	908847	Identifier	tempbracount		908484	1					
ANR	908848	IdentifierDeclStatement	pcre_uint32 ec ;	4566:2:143491:143505	908484	18	True				
ANR	908849	IdentifierDecl	ec		908484	0					
ANR	908850	IdentifierDeclType	pcre_uint32		908484	0					
ANR	908851	Identifier	ec		908484	1					
ANR	908852	IdentifierDeclStatement	pcre_uchar mcbuffer [ 8 ] ;	4567:2:143509:143531	908484	19	True				
ANR	908853	IdentifierDecl	mcbuffer [ 8 ]		908484	0					
ANR	908854	IdentifierDeclType	pcre_uchar [ 8 ]		908484	0					
ANR	908855	Identifier	mcbuffer		908484	1					
ANR	908856	PrimaryExpression	8		908484	2					
ANR	908857	ExpressionStatement	c = * ptr	4571:2:143579:143587	908484	20	True				
ANR	908858	AssignmentExpression	c = * ptr		908484	0		=			
ANR	908859	Identifier	c		908484	0					
ANR	908860	UnaryOperationExpression	* ptr		908484	1					
ANR	908861	UnaryOperator	*		908484	0					
ANR	908862	Identifier	ptr		908484	1					
ANR	908863	IfStatement	if ( c == CHAR_NULL && nestptr != NULL )		908484	21					
ANR	908864	Condition	c == CHAR_NULL && nestptr != NULL	4576:6:143725:143757	908484	0	True				
ANR	908865	AndExpression	c == CHAR_NULL && nestptr != NULL		908484	0		&&			
ANR	908866	EqualityExpression	c == CHAR_NULL		908484	0		==			
ANR	908867	Identifier	c		908484	0					
ANR	908868	Identifier	CHAR_NULL		908484	1					
ANR	908869	EqualityExpression	nestptr != NULL		908484	1		!=			
ANR	908870	Identifier	nestptr		908484	0					
ANR	908871	Identifier	NULL		908484	1					
ANR	908872	CompoundStatement		120:4:3888:3888	908484	1					
ANR	908873	ExpressionStatement	ptr = nestptr	4578:4:143770:143783	908484	0	True				
ANR	908874	AssignmentExpression	ptr = nestptr		908484	0		=			
ANR	908875	Identifier	ptr		908484	0					
ANR	908876	Identifier	nestptr		908484	1					
ANR	908877	ExpressionStatement	nestptr = NULL	4579:4:143789:143803	908484	1	True				
ANR	908878	AssignmentExpression	nestptr = NULL		908484	0		=			
ANR	908879	Identifier	nestptr		908484	0					
ANR	908880	Identifier	NULL		908484	1					
ANR	908881	ExpressionStatement	c = * ptr	4580:4:143809:143817	908484	2	True				
ANR	908882	AssignmentExpression	c = * ptr		908484	0		=			
ANR	908883	Identifier	c		908484	0					
ANR	908884	UnaryOperationExpression	* ptr		908484	1					
ANR	908885	UnaryOperator	*		908484	0					
ANR	908886	Identifier	ptr		908484	1					
ANR	908887	IfStatement	if ( lengthptr != NULL )		908484	22					
ANR	908888	Condition	lengthptr != NULL	4586:6:143943:143959	908484	0	True				
ANR	908889	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	908890	Identifier	lengthptr		908484	0					
ANR	908891	Identifier	NULL		908484	1					
ANR	908892	CompoundStatement		130:4:4090:4090	908484	1					
ANR	908893	IfStatement	if ( code > cd -> hwm )		908484	0					
ANR	908894	Condition	code > cd -> hwm	4589:8:143994:144007	908484	0	True				
ANR	908895	RelationalExpression	code > cd -> hwm		908484	0		>			
ANR	908896	Identifier	code		908484	0					
ANR	908897	PtrMemberAccess	cd -> hwm		908484	1					
ANR	908898	Identifier	cd		908484	0					
ANR	908899	Identifier	hwm		908484	1					
ANR	908900	ExpressionStatement	cd -> hwm = code	4589:24:144010:144024	908484	1	True				
ANR	908901	AssignmentExpression	cd -> hwm = code		908484	0		=			
ANR	908902	PtrMemberAccess	cd -> hwm		908484	0					
ANR	908903	Identifier	cd		908484	0					
ANR	908904	Identifier	hwm		908484	1					
ANR	908905	Identifier	code		908484	1					
ANR	908906	IfStatement	if ( code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN )		908484	1					
ANR	908907	Condition	code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN	4591:8:144079:144159	908484	0	True				
ANR	908908	RelationalExpression	code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	0		>			
ANR	908909	Identifier	code		908484	0					
ANR	908910	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	1		+			
ANR	908911	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	908912	Identifier	cd		908484	0					
ANR	908913	Identifier	start_workspace		908484	1					
ANR	908914	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	1		-			
ANR	908915	PtrMemberAccess	cd -> workspace_size		908484	0					
ANR	908916	Identifier	cd		908484	0					
ANR	908917	Identifier	workspace_size		908484	1					
ANR	908918	Identifier	WORK_SIZE_SAFETY_MARGIN		908484	1					
ANR	908919	CompoundStatement		136:6:4338:4338	908484	1					
ANR	908920	ExpressionStatement	* errorcodeptr = ERR52	4594:6:144222:144243	908484	0	True				
ANR	908921	AssignmentExpression	* errorcodeptr = ERR52		908484	0		=			
ANR	908922	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	908923	UnaryOperator	*		908484	0					
ANR	908924	Identifier	errorcodeptr		908484	1					
ANR	908925	Identifier	ERR52		908484	1					
ANR	908926	GotoStatement	goto FAILED ;	4595:6:144251:144262	908484	1	True				
ANR	908927	Identifier	FAILED		908484	0					
ANR	908928	IfStatement	if ( code < last_code )		908484	2					
ANR	908929	Condition	code < last_code	4604:8:144604:144619	908484	0	True				
ANR	908930	RelationalExpression	code < last_code		908484	0		<			
ANR	908931	Identifier	code		908484	0					
ANR	908932	Identifier	last_code		908484	1					
ANR	908933	ExpressionStatement	code = last_code	4604:26:144622:144638	908484	1	True				
ANR	908934	AssignmentExpression	code = last_code		908484	0		=			
ANR	908935	Identifier	code		908484	0					
ANR	908936	Identifier	last_code		908484	1					
ANR	908937	IfStatement	if ( OFLOW_MAX - * lengthptr < code - last_code )		908484	3					
ANR	908938	Condition	OFLOW_MAX - * lengthptr < code - last_code	4608:8:144696:144736	908484	0	True				
ANR	908939	RelationalExpression	OFLOW_MAX - * lengthptr < code - last_code		908484	0		<			
ANR	908940	AdditiveExpression	OFLOW_MAX - * lengthptr		908484	0		-			
ANR	908941	Identifier	OFLOW_MAX		908484	0					
ANR	908942	UnaryOperationExpression	* lengthptr		908484	1					
ANR	908943	UnaryOperator	*		908484	0					
ANR	908944	Identifier	lengthptr		908484	1					
ANR	908945	AdditiveExpression	code - last_code		908484	1		-			
ANR	908946	Identifier	code		908484	0					
ANR	908947	Identifier	last_code		908484	1					
ANR	908948	CompoundStatement		152:6:4869:4869	908484	1					
ANR	908949	ExpressionStatement	* errorcodeptr = ERR20	4610:6:144753:144774	908484	0	True				
ANR	908950	AssignmentExpression	* errorcodeptr = ERR20		908484	0		=			
ANR	908951	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	908952	UnaryOperator	*		908484	0					
ANR	908953	Identifier	errorcodeptr		908484	1					
ANR	908954	Identifier	ERR20		908484	1					
ANR	908955	GotoStatement	goto FAILED ;	4611:6:144782:144793	908484	1	True				
ANR	908956	Identifier	FAILED		908484	0					
ANR	908957	ExpressionStatement	* lengthptr += ( int ) ( code - last_code )	4614:4:144808:144845	908484	4	True				
ANR	908958	AssignmentExpression	* lengthptr += ( int ) ( code - last_code )		908484	0		+=			
ANR	908959	UnaryOperationExpression	* lengthptr		908484	0					
ANR	908960	UnaryOperator	*		908484	0					
ANR	908961	Identifier	lengthptr		908484	1					
ANR	908962	CastExpression	( int ) ( code - last_code )		908484	1					
ANR	908963	CastTarget	int		908484	0					
ANR	908964	AdditiveExpression	code - last_code		908484	1		-			
ANR	908965	Identifier	code		908484	0					
ANR	908966	Identifier	last_code		908484	1					
ANR	908967	ExpressionStatement	"DPRINTF ( ( ""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c ) )"	4615:4:144851:144945	908484	5	True				
ANR	908968	CallExpression	"DPRINTF ( ( ""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c ) )"		908484	0					
ANR	908969	Callee	DPRINTF		908484	0					
ANR	908970	Identifier	DPRINTF		908484	0					
ANR	908971	ArgumentList	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		908484	1					
ANR	908972	Argument	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		908484	0					
ANR	908973	Expression	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		908484	0					
ANR	908974	PrimaryExpression	"""length=%d added %d c=%c (0x%x)\\n"""		908484	0					
ANR	908975	Expression	"* lengthptr , ( int ) ( code - last_code ) , c , c"		908484	1					
ANR	908976	UnaryOperationExpression	* lengthptr		908484	0					
ANR	908977	UnaryOperator	*		908484	0					
ANR	908978	Identifier	lengthptr		908484	1					
ANR	908979	Expression	"( int ) ( code - last_code ) , c , c"		908484	1					
ANR	908980	CastExpression	( int ) ( code - last_code )		908484	0					
ANR	908981	CastTarget	int		908484	0					
ANR	908982	AdditiveExpression	code - last_code		908484	1		-			
ANR	908983	Identifier	code		908484	0					
ANR	908984	Identifier	last_code		908484	1					
ANR	908985	Expression	"c , c"		908484	1					
ANR	908986	Identifier	c		908484	0					
ANR	908987	Identifier	c		908484	1					
ANR	908988	IfStatement	if ( previous != NULL )		908484	6					
ANR	908989	Condition	previous != NULL	4622:8:145189:145204	908484	0	True				
ANR	908990	EqualityExpression	previous != NULL		908484	0		!=			
ANR	908991	Identifier	previous		908484	0					
ANR	908992	Identifier	NULL		908484	1					
ANR	908993	CompoundStatement		166:6:5337:5337	908484	1					
ANR	908994	IfStatement	if ( previous > orig_code )		908484	0					
ANR	908995	Condition	previous > orig_code	4624:10:145225:145244	908484	0	True				
ANR	908996	RelationalExpression	previous > orig_code		908484	0		>			
ANR	908997	Identifier	previous		908484	0					
ANR	908998	Identifier	orig_code		908484	1					
ANR	908999	CompoundStatement		168:8:5379:5379	908484	1					
ANR	909000	ExpressionStatement	"memmove ( orig_code , previous , IN_UCHARS ( code - previous ) )"	4626:8:145265:145321	908484	0	True				
ANR	909001	CallExpression	"memmove ( orig_code , previous , IN_UCHARS ( code - previous ) )"		908484	0					
ANR	909002	Callee	memmove		908484	0					
ANR	909003	Identifier	memmove		908484	0					
ANR	909004	ArgumentList	orig_code		908484	1					
ANR	909005	Argument	orig_code		908484	0					
ANR	909006	Identifier	orig_code		908484	0					
ANR	909007	Argument	previous		908484	1					
ANR	909008	Identifier	previous		908484	0					
ANR	909009	Argument	IN_UCHARS ( code - previous )		908484	2					
ANR	909010	CallExpression	IN_UCHARS ( code - previous )		908484	0					
ANR	909011	Callee	IN_UCHARS		908484	0					
ANR	909012	Identifier	IN_UCHARS		908484	0					
ANR	909013	ArgumentList	code - previous		908484	1					
ANR	909014	Argument	code - previous		908484	0					
ANR	909015	AdditiveExpression	code - previous		908484	0		-			
ANR	909016	Identifier	code		908484	0					
ANR	909017	Identifier	previous		908484	1					
ANR	909018	ExpressionStatement	code -= previous - orig_code	4627:8:145331:145359	908484	1	True				
ANR	909019	AssignmentExpression	code -= previous - orig_code		908484	0		-=			
ANR	909020	Identifier	code		908484	0					
ANR	909021	AdditiveExpression	previous - orig_code		908484	1		-			
ANR	909022	Identifier	previous		908484	0					
ANR	909023	Identifier	orig_code		908484	1					
ANR	909024	ExpressionStatement	previous = orig_code	4628:8:145369:145389	908484	2	True				
ANR	909025	AssignmentExpression	previous = orig_code		908484	0		=			
ANR	909026	Identifier	previous		908484	0					
ANR	909027	Identifier	orig_code		908484	1					
ANR	909028	ElseStatement	else		908484	0					
ANR	909029	ExpressionStatement	code = orig_code	4631:9:145418:145434	908484	0	True				
ANR	909030	AssignmentExpression	code = orig_code		908484	0		=			
ANR	909031	Identifier	code		908484	0					
ANR	909032	Identifier	orig_code		908484	1					
ANR	909033	ExpressionStatement	last_code = code	4636:4:145539:145555	908484	7	True				
ANR	909034	AssignmentExpression	last_code = code		908484	0		=			
ANR	909035	Identifier	last_code		908484	0					
ANR	909036	Identifier	code		908484	1					
ANR	909037	ElseStatement	else		908484	0					
ANR	909038	IfStatement	if ( cd -> hwm > cd -> start_workspace + cd -> workspace_size )		908484	0					
ANR	909039	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size	4642:11:145674:145723	908484	0	True				
ANR	909040	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size		908484	0		>			
ANR	909041	PtrMemberAccess	cd -> hwm		908484	0					
ANR	909042	Identifier	cd		908484	0					
ANR	909043	Identifier	hwm		908484	1					
ANR	909044	AdditiveExpression	cd -> start_workspace + cd -> workspace_size		908484	1		+			
ANR	909045	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	909046	Identifier	cd		908484	0					
ANR	909047	Identifier	start_workspace		908484	1					
ANR	909048	PtrMemberAccess	cd -> workspace_size		908484	1					
ANR	909049	Identifier	cd		908484	0					
ANR	909050	Identifier	workspace_size		908484	1					
ANR	909051	CompoundStatement		186:4:5854:5854	908484	1					
ANR	909052	ExpressionStatement	* errorcodeptr = ERR52	4644:4:145736:145757	908484	0	True				
ANR	909053	AssignmentExpression	* errorcodeptr = ERR52		908484	0		=			
ANR	909054	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	909055	UnaryOperator	*		908484	0					
ANR	909056	Identifier	errorcodeptr		908484	1					
ANR	909057	Identifier	ERR52		908484	1					
ANR	909058	GotoStatement	goto FAILED ;	4645:4:145763:145774	908484	1	True				
ANR	909059	Identifier	FAILED		908484	0					
ANR	909060	IfStatement	if ( inescq && c != CHAR_NULL )		908484	23					
ANR	909061	Condition	inescq && c != CHAR_NULL	4650:6:145858:145881	908484	0	True				
ANR	909062	AndExpression	inescq && c != CHAR_NULL		908484	0		&&			
ANR	909063	Identifier	inescq		908484	0					
ANR	909064	EqualityExpression	c != CHAR_NULL		908484	1		!=			
ANR	909065	Identifier	c		908484	0					
ANR	909066	Identifier	CHAR_NULL		908484	1					
ANR	909067	CompoundStatement		194:4:6012:6012	908484	1					
ANR	909068	IfStatement	if ( c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		908484	0					
ANR	909069	Condition	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	4652:8:145898:145936	908484	0	True				
ANR	909070	AndExpression	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		908484	0		&&			
ANR	909071	EqualityExpression	c == CHAR_BACKSLASH		908484	0		==			
ANR	909072	Identifier	c		908484	0					
ANR	909073	Identifier	CHAR_BACKSLASH		908484	1					
ANR	909074	EqualityExpression	ptr [ 1 ] == CHAR_E		908484	1		==			
ANR	909075	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909076	Identifier	ptr		908484	0					
ANR	909077	PrimaryExpression	1		908484	1					
ANR	909078	Identifier	CHAR_E		908484	1					
ANR	909079	CompoundStatement		196:6:6069:6069	908484	1					
ANR	909080	ExpressionStatement	inescq = FALSE	4654:6:145953:145967	908484	0	True				
ANR	909081	AssignmentExpression	inescq = FALSE		908484	0		=			
ANR	909082	Identifier	inescq		908484	0					
ANR	909083	Identifier	FALSE		908484	1					
ANR	909084	ExpressionStatement	ptr ++	4655:6:145975:145980	908484	1	True				
ANR	909085	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	909086	Identifier	ptr		908484	0					
ANR	909087	IncDec	++		908484	1					
ANR	909088	ContinueStatement	continue ;	4656:6:145988:145996	908484	2	True				
ANR	909089	ElseStatement	else		908484	0					
ANR	909090	CompoundStatement		202:6:6145:6145	908484	0					
ANR	909091	IfStatement	if ( previous_callout != NULL )		908484	0					
ANR	909092	Condition	previous_callout != NULL	4660:10:146033:146056	908484	0	True				
ANR	909093	EqualityExpression	previous_callout != NULL		908484	0		!=			
ANR	909094	Identifier	previous_callout		908484	0					
ANR	909095	Identifier	NULL		908484	1					
ANR	909096	CompoundStatement		204:8:6191:6191	908484	1					
ANR	909097	IfStatement	if ( lengthptr == NULL )		908484	0					
ANR	909098	Condition	lengthptr == NULL	4662:12:146081:146097	908484	0	True				
ANR	909099	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	909100	Identifier	lengthptr		908484	0					
ANR	909101	Identifier	NULL		908484	1					
ANR	909102	ExpressionStatement	"complete_callout ( previous_callout , ptr , cd )"	4663:10:146152:146195	908484	1	True				
ANR	909103	CallExpression	"complete_callout ( previous_callout , ptr , cd )"		908484	0					
ANR	909104	Callee	complete_callout		908484	0					
ANR	909105	Identifier	complete_callout		908484	0					
ANR	909106	ArgumentList	previous_callout		908484	1					
ANR	909107	Argument	previous_callout		908484	0					
ANR	909108	Identifier	previous_callout		908484	0					
ANR	909109	Argument	ptr		908484	1					
ANR	909110	Identifier	ptr		908484	0					
ANR	909111	Argument	cd		908484	2					
ANR	909112	Identifier	cd		908484	0					
ANR	909113	ExpressionStatement	previous_callout = NULL	4664:8:146205:146228	908484	1	True				
ANR	909114	AssignmentExpression	previous_callout = NULL		908484	0		=			
ANR	909115	Identifier	previous_callout		908484	0					
ANR	909116	Identifier	NULL		908484	1					
ANR	909117	IfStatement	if ( ( options & PCRE_AUTO_CALLOUT ) != 0 )		908484	1					
ANR	909118	Condition	( options & PCRE_AUTO_CALLOUT ) != 0	4666:10:146250:146283	908484	0	True				
ANR	909119	EqualityExpression	( options & PCRE_AUTO_CALLOUT ) != 0		908484	0		!=			
ANR	909120	BitAndExpression	options & PCRE_AUTO_CALLOUT		908484	0		&			
ANR	909121	Identifier	options		908484	0					
ANR	909122	Identifier	PCRE_AUTO_CALLOUT		908484	1					
ANR	909123	PrimaryExpression	0		908484	1					
ANR	909124	CompoundStatement		210:8:6418:6418	908484	1					
ANR	909125	ExpressionStatement	previous_callout = code	4668:8:146304:146327	908484	0	True				
ANR	909126	AssignmentExpression	previous_callout = code		908484	0		=			
ANR	909127	Identifier	previous_callout		908484	0					
ANR	909128	Identifier	code		908484	1					
ANR	909129	ExpressionStatement	"code = auto_callout ( code , ptr , cd )"	4669:8:146337:146371	908484	1	True				
ANR	909130	AssignmentExpression	"code = auto_callout ( code , ptr , cd )"		908484	0		=			
ANR	909131	Identifier	code		908484	0					
ANR	909132	CallExpression	"auto_callout ( code , ptr , cd )"		908484	1					
ANR	909133	Callee	auto_callout		908484	0					
ANR	909134	Identifier	auto_callout		908484	0					
ANR	909135	ArgumentList	code		908484	1					
ANR	909136	Argument	code		908484	0					
ANR	909137	Identifier	code		908484	0					
ANR	909138	Argument	ptr		908484	1					
ANR	909139	Identifier	ptr		908484	0					
ANR	909140	Argument	cd		908484	2					
ANR	909141	Identifier	cd		908484	0					
ANR	909142	GotoStatement	goto NORMAL_CHAR ;	4671:6:146389:146405	908484	2	True				
ANR	909143	Identifier	NORMAL_CHAR		908484	0					
ANR	909144	IfStatement	if ( ( options & PCRE_EXTENDED ) != 0 )		908484	24					
ANR	909145	Condition	( options & PCRE_EXTENDED ) != 0	4679:6:146616:146645	908484	0	True				
ANR	909146	EqualityExpression	( options & PCRE_EXTENDED ) != 0		908484	0		!=			
ANR	909147	BitAndExpression	options & PCRE_EXTENDED		908484	0		&			
ANR	909148	Identifier	options		908484	0					
ANR	909149	Identifier	PCRE_EXTENDED		908484	1					
ANR	909150	PrimaryExpression	0		908484	1					
ANR	909151	CompoundStatement		223:4:6776:6776	908484	1					
ANR	909152	ForStatement	for ( ; ; )		908484	0					
ANR	909153	CompoundStatement		225:6:6797:6797	908484	0					
ANR	909154	WhileStatement	while ( MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0 )		908484	0					
ANR	909155	Condition	MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0	4683:13:146688:146735	908484	0	True				
ANR	909156	AndExpression	MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0		908484	0		&&			
ANR	909157	CallExpression	MAX_255 ( c )		908484	0					
ANR	909158	Callee	MAX_255		908484	0					
ANR	909159	Identifier	MAX_255		908484	0					
ANR	909160	ArgumentList	c		908484	1					
ANR	909161	Argument	c		908484	0					
ANR	909162	Identifier	c		908484	0					
ANR	909163	EqualityExpression	( cd -> ctypes [ c ] & ctype_space ) != 0		908484	1		!=			
ANR	909164	BitAndExpression	cd -> ctypes [ c ] & ctype_space		908484	0		&			
ANR	909165	ArrayIndexing	cd -> ctypes [ c ]		908484	0					
ANR	909166	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	909167	Identifier	cd		908484	0					
ANR	909168	Identifier	ctypes		908484	1					
ANR	909169	Identifier	c		908484	1					
ANR	909170	Identifier	ctype_space		908484	1					
ANR	909171	PrimaryExpression	0		908484	1					
ANR	909172	ExpressionStatement	c = * ( ++ ptr )	4683:63:146738:146750	908484	1	True				
ANR	909173	AssignmentExpression	c = * ( ++ ptr )		908484	0		=			
ANR	909174	Identifier	c		908484	0					
ANR	909175	UnaryOperationExpression	* ( ++ ptr )		908484	1					
ANR	909176	UnaryOperator	*		908484	0					
ANR	909177	UnaryExpression	++ ptr		908484	1					
ANR	909178	IncDec	++		908484	0					
ANR	909179	Identifier	ptr		908484	1					
ANR	909180	IfStatement	if ( c != CHAR_NUMBER_SIGN )		908484	1					
ANR	909181	Condition	c != CHAR_NUMBER_SIGN	4684:10:146762:146782	908484	0	True				
ANR	909182	EqualityExpression	c != CHAR_NUMBER_SIGN		908484	0		!=			
ANR	909183	Identifier	c		908484	0					
ANR	909184	Identifier	CHAR_NUMBER_SIGN		908484	1					
ANR	909185	BreakStatement	break ;	4684:33:146785:146790	908484	1	True				
ANR	909186	ExpressionStatement	ptr ++	4685:6:146798:146803	908484	2	True				
ANR	909187	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	909188	Identifier	ptr		908484	0					
ANR	909189	IncDec	++		908484	1					
ANR	909190	WhileStatement	while ( * ptr != CHAR_NULL )		908484	3					
ANR	909191	Condition	* ptr != CHAR_NULL	4686:13:146818:146834	908484	0	True				
ANR	909192	EqualityExpression	* ptr != CHAR_NULL		908484	0		!=			
ANR	909193	UnaryOperationExpression	* ptr		908484	0					
ANR	909194	UnaryOperator	*		908484	0					
ANR	909195	Identifier	ptr		908484	1					
ANR	909196	Identifier	CHAR_NULL		908484	1					
ANR	909197	CompoundStatement		230:8:6969:6969	908484	1					
ANR	909198	IfStatement	if ( IS_NEWLINE ( ptr ) )		908484	0					
ANR	909199	Condition	IS_NEWLINE ( ptr )	4688:12:146859:146873	908484	0	True				
ANR	909200	CallExpression	IS_NEWLINE ( ptr )		908484	0					
ANR	909201	Callee	IS_NEWLINE		908484	0					
ANR	909202	Identifier	IS_NEWLINE		908484	0					
ANR	909203	ArgumentList	ptr		908484	1					
ANR	909204	Argument	ptr		908484	0					
ANR	909205	Identifier	ptr		908484	0					
ANR	909206	CompoundStatement		232:10:7060:7060	908484	1					
ANR	909207	ExpressionStatement	ptr += cd -> nllen	4690:10:147006:147022	908484	0	True				
ANR	909208	AssignmentExpression	ptr += cd -> nllen		908484	0		+=			
ANR	909209	Identifier	ptr		908484	0					
ANR	909210	PtrMemberAccess	cd -> nllen		908484	1					
ANR	909211	Identifier	cd		908484	0					
ANR	909212	Identifier	nllen		908484	1					
ANR	909213	BreakStatement	break ;	4691:10:147034:147039	908484	1	True				
ANR	909214	ExpressionStatement	ptr ++	4693:8:147061:147066	908484	1	True				
ANR	909215	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	909216	Identifier	ptr		908484	0					
ANR	909217	IncDec	++		908484	1					
ANR	909218	IfStatement	if ( utf )		908484	2					
ANR	909219	Condition	utf	4695:12:147099:147101	908484	0	True				
ANR	909220	Identifier	utf		908484	0					
ANR	909221	ExpressionStatement	FORWARDCHAR ( ptr )	4695:17:147104:147120	908484	1	True				
ANR	909222	CallExpression	FORWARDCHAR ( ptr )		908484	0					
ANR	909223	Callee	FORWARDCHAR		908484	0					
ANR	909224	Identifier	FORWARDCHAR		908484	0					
ANR	909225	ArgumentList	ptr		908484	1					
ANR	909226	Argument	ptr		908484	0					
ANR	909227	Identifier	ptr		908484	0					
ANR	909228	ExpressionStatement	c = * ptr	4698:6:147145:147153	908484	4	True				
ANR	909229	AssignmentExpression	c = * ptr		908484	0		=			
ANR	909230	Identifier	c		908484	0					
ANR	909231	UnaryOperationExpression	* ptr		908484	1					
ANR	909232	UnaryOperator	*		908484	0					
ANR	909233	Identifier	ptr		908484	1					
ANR	909234	ExpressionStatement	is_quantifier = c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )	4704:2:147270:147419	908484	25	True				
ANR	909235	AssignmentExpression	is_quantifier = c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		908484	0		=			
ANR	909236	Identifier	is_quantifier		908484	0					
ANR	909237	OrExpression	c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		908484	1		||			
ANR	909238	EqualityExpression	c == CHAR_ASTERISK		908484	0		==			
ANR	909239	Identifier	c		908484	0					
ANR	909240	Identifier	CHAR_ASTERISK		908484	1					
ANR	909241	OrExpression	c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		908484	1		||			
ANR	909242	EqualityExpression	c == CHAR_PLUS		908484	0		==			
ANR	909243	Identifier	c		908484	0					
ANR	909244	Identifier	CHAR_PLUS		908484	1					
ANR	909245	OrExpression	c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		908484	1		||			
ANR	909246	EqualityExpression	c == CHAR_QUESTION_MARK		908484	0		==			
ANR	909247	Identifier	c		908484	0					
ANR	909248	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	909249	AndExpression	c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 )		908484	1		&&			
ANR	909250	EqualityExpression	c == CHAR_LEFT_CURLY_BRACKET		908484	0		==			
ANR	909251	Identifier	c		908484	0					
ANR	909252	Identifier	CHAR_LEFT_CURLY_BRACKET		908484	1					
ANR	909253	CallExpression	is_counted_repeat ( ptr + 1 )		908484	1					
ANR	909254	Callee	is_counted_repeat		908484	0					
ANR	909255	Identifier	is_counted_repeat		908484	0					
ANR	909256	ArgumentList	ptr + 1		908484	1					
ANR	909257	Argument	ptr + 1		908484	0					
ANR	909258	AdditiveExpression	ptr + 1		908484	0		+			
ANR	909259	Identifier	ptr		908484	0					
ANR	909260	PrimaryExpression	1		908484	1					
ANR	909261	IfStatement	if ( ! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0 )		908484	26					
ANR	909262	Condition	! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0	4711:6:147583:147681	908484	0	True				
ANR	909263	AndExpression	! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0		908484	0		&&			
ANR	909264	UnaryOperationExpression	! is_quantifier		908484	0					
ANR	909265	UnaryOperator	!		908484	0					
ANR	909266	Identifier	is_quantifier		908484	1					
ANR	909267	AndExpression	previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0		908484	1		&&			
ANR	909268	EqualityExpression	previous_callout != NULL		908484	0		!=			
ANR	909269	Identifier	previous_callout		908484	0					
ANR	909270	Identifier	NULL		908484	1					
ANR	909271	AndExpression	nestptr == NULL && after_manual_callout -- <= 0		908484	1		&&			
ANR	909272	EqualityExpression	nestptr == NULL		908484	0		==			
ANR	909273	Identifier	nestptr		908484	0					
ANR	909274	Identifier	NULL		908484	1					
ANR	909275	RelationalExpression	after_manual_callout -- <= 0		908484	1		<=			
ANR	909276	PostIncDecOperationExpression	after_manual_callout --		908484	0					
ANR	909277	Identifier	after_manual_callout		908484	0					
ANR	909278	IncDec	--		908484	1					
ANR	909279	PrimaryExpression	0		908484	1					
ANR	909280	CompoundStatement		256:4:7812:7812	908484	1					
ANR	909281	IfStatement	if ( lengthptr == NULL )		908484	0					
ANR	909282	Condition	lengthptr == NULL	4714:8:147698:147714	908484	0	True				
ANR	909283	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	909284	Identifier	lengthptr		908484	0					
ANR	909285	Identifier	NULL		908484	1					
ANR	909286	ExpressionStatement	"complete_callout ( previous_callout , ptr , cd )"	4715:6:147769:147812	908484	1	True				
ANR	909287	CallExpression	"complete_callout ( previous_callout , ptr , cd )"		908484	0					
ANR	909288	Callee	complete_callout		908484	0					
ANR	909289	Identifier	complete_callout		908484	0					
ANR	909290	ArgumentList	previous_callout		908484	1					
ANR	909291	Argument	previous_callout		908484	0					
ANR	909292	Identifier	previous_callout		908484	0					
ANR	909293	Argument	ptr		908484	1					
ANR	909294	Identifier	ptr		908484	0					
ANR	909295	Argument	cd		908484	2					
ANR	909296	Identifier	cd		908484	0					
ANR	909297	ExpressionStatement	previous_callout = NULL	4716:4:147818:147841	908484	1	True				
ANR	909298	AssignmentExpression	previous_callout = NULL		908484	0		=			
ANR	909299	Identifier	previous_callout		908484	0					
ANR	909300	Identifier	NULL		908484	1					
ANR	909301	IfStatement	if ( ( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL )		908484	27					
ANR	909302	Condition	( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL	4722:6:147994:148064	908484	0	True				
ANR	909303	AndExpression	( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL		908484	0		&&			
ANR	909304	EqualityExpression	( options & PCRE_AUTO_CALLOUT ) != 0		908484	0		!=			
ANR	909305	BitAndExpression	options & PCRE_AUTO_CALLOUT		908484	0		&			
ANR	909306	Identifier	options		908484	0					
ANR	909307	Identifier	PCRE_AUTO_CALLOUT		908484	1					
ANR	909308	PrimaryExpression	0		908484	1					
ANR	909309	AndExpression	! is_quantifier && nestptr == NULL		908484	1		&&			
ANR	909310	UnaryOperationExpression	! is_quantifier		908484	0					
ANR	909311	UnaryOperator	!		908484	0					
ANR	909312	Identifier	is_quantifier		908484	1					
ANR	909313	EqualityExpression	nestptr == NULL		908484	1		==			
ANR	909314	Identifier	nestptr		908484	0					
ANR	909315	Identifier	NULL		908484	1					
ANR	909316	CompoundStatement		266:4:8195:8195	908484	1					
ANR	909317	ExpressionStatement	previous_callout = code	4724:4:148077:148100	908484	0	True				
ANR	909318	AssignmentExpression	previous_callout = code		908484	0		=			
ANR	909319	Identifier	previous_callout		908484	0					
ANR	909320	Identifier	code		908484	1					
ANR	909321	ExpressionStatement	"code = auto_callout ( code , ptr , cd )"	4725:4:148106:148140	908484	1	True				
ANR	909322	AssignmentExpression	"code = auto_callout ( code , ptr , cd )"		908484	0		=			
ANR	909323	Identifier	code		908484	0					
ANR	909324	CallExpression	"auto_callout ( code , ptr , cd )"		908484	1					
ANR	909325	Callee	auto_callout		908484	0					
ANR	909326	Identifier	auto_callout		908484	0					
ANR	909327	ArgumentList	code		908484	1					
ANR	909328	Argument	code		908484	0					
ANR	909329	Identifier	code		908484	0					
ANR	909330	Argument	ptr		908484	1					
ANR	909331	Identifier	ptr		908484	0					
ANR	909332	Argument	cd		908484	2					
ANR	909333	Identifier	cd		908484	0					
ANR	909334	SwitchStatement	switch ( c )		908484	28					
ANR	909335	Condition	c	4730:9:148198:148198	908484	0	True				
ANR	909336	Identifier	c		908484	0					
ANR	909337	CompoundStatement		274:4:8329:8329	908484	1					
ANR	909338	Label	case CHAR_NULL :	4733:4:148288:148302	908484	0	True				
ANR	909339	Identifier	CHAR_NULL		908484	0					
ANR	909340	Label	case CHAR_VERTICAL_LINE :	4734:4:148365:148388	908484	1	True				
ANR	909341	Identifier	CHAR_VERTICAL_LINE		908484	0					
ANR	909342	Label	case CHAR_RIGHT_PARENTHESIS :	4735:4:148416:148443	908484	2	True				
ANR	909343	Identifier	CHAR_RIGHT_PARENTHESIS		908484	0					
ANR	909344	ExpressionStatement	* firstcharptr = firstchar	4736:4:148449:148474	908484	3	True				
ANR	909345	AssignmentExpression	* firstcharptr = firstchar		908484	0		=			
ANR	909346	UnaryOperationExpression	* firstcharptr		908484	0					
ANR	909347	UnaryOperator	*		908484	0					
ANR	909348	Identifier	firstcharptr		908484	1					
ANR	909349	Identifier	firstchar		908484	1					
ANR	909350	ExpressionStatement	* firstcharflagsptr = firstcharflags	4737:4:148480:148515	908484	4	True				
ANR	909351	AssignmentExpression	* firstcharflagsptr = firstcharflags		908484	0		=			
ANR	909352	UnaryOperationExpression	* firstcharflagsptr		908484	0					
ANR	909353	UnaryOperator	*		908484	0					
ANR	909354	Identifier	firstcharflagsptr		908484	1					
ANR	909355	Identifier	firstcharflags		908484	1					
ANR	909356	ExpressionStatement	* reqcharptr = reqchar	4738:4:148521:148542	908484	5	True				
ANR	909357	AssignmentExpression	* reqcharptr = reqchar		908484	0		=			
ANR	909358	UnaryOperationExpression	* reqcharptr		908484	0					
ANR	909359	UnaryOperator	*		908484	0					
ANR	909360	Identifier	reqcharptr		908484	1					
ANR	909361	Identifier	reqchar		908484	1					
ANR	909362	ExpressionStatement	* reqcharflagsptr = reqcharflags	4739:4:148548:148579	908484	6	True				
ANR	909363	AssignmentExpression	* reqcharflagsptr = reqcharflags		908484	0		=			
ANR	909364	UnaryOperationExpression	* reqcharflagsptr		908484	0					
ANR	909365	UnaryOperator	*		908484	0					
ANR	909366	Identifier	reqcharflagsptr		908484	1					
ANR	909367	Identifier	reqcharflags		908484	1					
ANR	909368	ExpressionStatement	* codeptr = code	4740:4:148585:148600	908484	7	True				
ANR	909369	AssignmentExpression	* codeptr = code		908484	0		=			
ANR	909370	UnaryOperationExpression	* codeptr		908484	0					
ANR	909371	UnaryOperator	*		908484	0					
ANR	909372	Identifier	codeptr		908484	1					
ANR	909373	Identifier	code		908484	1					
ANR	909374	ExpressionStatement	* ptrptr = ptr	4741:4:148606:148619	908484	8	True				
ANR	909375	AssignmentExpression	* ptrptr = ptr		908484	0		=			
ANR	909376	UnaryOperationExpression	* ptrptr		908484	0					
ANR	909377	UnaryOperator	*		908484	0					
ANR	909378	Identifier	ptrptr		908484	1					
ANR	909379	Identifier	ptr		908484	1					
ANR	909380	IfStatement	if ( lengthptr != NULL )		908484	9					
ANR	909381	Condition	lengthptr != NULL	4742:8:148629:148645	908484	0	True				
ANR	909382	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	909383	Identifier	lengthptr		908484	0					
ANR	909384	Identifier	NULL		908484	1					
ANR	909385	CompoundStatement		286:6:8778:8778	908484	1					
ANR	909386	IfStatement	if ( OFLOW_MAX - * lengthptr < code - last_code )		908484	0					
ANR	909387	Condition	OFLOW_MAX - * lengthptr < code - last_code	4744:10:148666:148706	908484	0	True				
ANR	909388	RelationalExpression	OFLOW_MAX - * lengthptr < code - last_code		908484	0		<			
ANR	909389	AdditiveExpression	OFLOW_MAX - * lengthptr		908484	0		-			
ANR	909390	Identifier	OFLOW_MAX		908484	0					
ANR	909391	UnaryOperationExpression	* lengthptr		908484	1					
ANR	909392	UnaryOperator	*		908484	0					
ANR	909393	Identifier	lengthptr		908484	1					
ANR	909394	AdditiveExpression	code - last_code		908484	1		-			
ANR	909395	Identifier	code		908484	0					
ANR	909396	Identifier	last_code		908484	1					
ANR	909397	CompoundStatement		288:8:8841:8841	908484	1					
ANR	909398	ExpressionStatement	* errorcodeptr = ERR20	4746:8:148727:148748	908484	0	True				
ANR	909399	AssignmentExpression	* errorcodeptr = ERR20		908484	0		=			
ANR	909400	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	909401	UnaryOperator	*		908484	0					
ANR	909402	Identifier	errorcodeptr		908484	1					
ANR	909403	Identifier	ERR20		908484	1					
ANR	909404	GotoStatement	goto FAILED ;	4747:8:148758:148769	908484	1	True				
ANR	909405	Identifier	FAILED		908484	0					
ANR	909406	ExpressionStatement	* lengthptr += ( int ) ( code - last_code )	4749:6:148787:148824	908484	1	True				
ANR	909407	AssignmentExpression	* lengthptr += ( int ) ( code - last_code )		908484	0		+=			
ANR	909408	UnaryOperationExpression	* lengthptr		908484	0					
ANR	909409	UnaryOperator	*		908484	0					
ANR	909410	Identifier	lengthptr		908484	1					
ANR	909411	CastExpression	( int ) ( code - last_code )		908484	1					
ANR	909412	CastTarget	int		908484	0					
ANR	909413	AdditiveExpression	code - last_code		908484	1		-			
ANR	909414	Identifier	code		908484	0					
ANR	909415	Identifier	last_code		908484	1					
ANR	909416	ExpressionStatement	"DPRINTF ( ( "">> end branch\\n"" ) )"	4750:6:148866:148894	908484	2	True				
ANR	909417	CallExpression	"DPRINTF ( ( "">> end branch\\n"" ) )"		908484	0					
ANR	909418	Callee	DPRINTF		908484	0					
ANR	909419	Identifier	DPRINTF		908484	0					
ANR	909420	ArgumentList	""">> end branch\\n"""		908484	1					
ANR	909421	Argument	""">> end branch\\n"""		908484	0					
ANR	909422	PrimaryExpression	""">> end branch\\n"""		908484	0					
ANR	909423	ReturnStatement	return TRUE ;	4752:4:148908:148919	908484	10	True				
ANR	909424	Identifier	TRUE		908484	0					
ANR	909425	Label	case CHAR_CIRCUMFLEX_ACCENT :	4759:4:149145:149172	908484	11	True				
ANR	909426	Identifier	CHAR_CIRCUMFLEX_ACCENT		908484	0					
ANR	909427	ExpressionStatement	previous = NULL	4760:4:149178:149193	908484	12	True				
ANR	909428	AssignmentExpression	previous = NULL		908484	0		=			
ANR	909429	Identifier	previous		908484	0					
ANR	909430	Identifier	NULL		908484	1					
ANR	909431	IfStatement	if ( ( options & PCRE_MULTILINE ) != 0 )		908484	13					
ANR	909432	Condition	( options & PCRE_MULTILINE ) != 0	4761:8:149203:149233	908484	0	True				
ANR	909433	EqualityExpression	( options & PCRE_MULTILINE ) != 0		908484	0		!=			
ANR	909434	BitAndExpression	options & PCRE_MULTILINE		908484	0		&			
ANR	909435	Identifier	options		908484	0					
ANR	909436	Identifier	PCRE_MULTILINE		908484	1					
ANR	909437	PrimaryExpression	0		908484	1					
ANR	909438	CompoundStatement		305:6:9366:9366	908484	1					
ANR	909439	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	0					
ANR	909440	Condition	firstcharflags == REQ_UNSET	4763:10:149254:149280	908484	0	True				
ANR	909441	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	909442	Identifier	firstcharflags		908484	0					
ANR	909443	Identifier	REQ_UNSET		908484	1					
ANR	909444	ExpressionStatement	zerofirstcharflags = firstcharflags = REQ_NONE	4764:8:149291:149337	908484	1	True				
ANR	909445	AssignmentExpression	zerofirstcharflags = firstcharflags = REQ_NONE		908484	0		=			
ANR	909446	Identifier	zerofirstcharflags		908484	0					
ANR	909447	AssignmentExpression	firstcharflags = REQ_NONE		908484	1		=			
ANR	909448	Identifier	firstcharflags		908484	0					
ANR	909449	Identifier	REQ_NONE		908484	1					
ANR	909450	ExpressionStatement	* code ++ = OP_CIRCM	4765:6:149345:149363	908484	1	True				
ANR	909451	AssignmentExpression	* code ++ = OP_CIRCM		908484	0		=			
ANR	909452	UnaryOperationExpression	* code ++		908484	0					
ANR	909453	UnaryOperator	*		908484	0					
ANR	909454	PostIncDecOperationExpression	code ++		908484	1					
ANR	909455	Identifier	code		908484	0					
ANR	909456	IncDec	++		908484	1					
ANR	909457	Identifier	OP_CIRCM		908484	1					
ANR	909458	ElseStatement	else		908484	0					
ANR	909459	ExpressionStatement	* code ++ = OP_CIRC	4767:9:149382:149399	908484	0	True				
ANR	909460	AssignmentExpression	* code ++ = OP_CIRC		908484	0		=			
ANR	909461	UnaryOperationExpression	* code ++		908484	0					
ANR	909462	UnaryOperator	*		908484	0					
ANR	909463	PostIncDecOperationExpression	code ++		908484	1					
ANR	909464	Identifier	code		908484	0					
ANR	909465	IncDec	++		908484	1					
ANR	909466	Identifier	OP_CIRC		908484	1					
ANR	909467	BreakStatement	break ;	4768:4:149405:149410	908484	14	True				
ANR	909468	Label	case CHAR_DOLLAR_SIGN :	4770:4:149417:149438	908484	15	True				
ANR	909469	Identifier	CHAR_DOLLAR_SIGN		908484	0					
ANR	909470	ExpressionStatement	previous = NULL	4771:4:149444:149459	908484	16	True				
ANR	909471	AssignmentExpression	previous = NULL		908484	0		=			
ANR	909472	Identifier	previous		908484	0					
ANR	909473	Identifier	NULL		908484	1					
ANR	909474	ExpressionStatement	* code ++ = ( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL	4772:4:149465:149528	908484	17	True				
ANR	909475	AssignmentExpression	* code ++ = ( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL		908484	0		=			
ANR	909476	UnaryOperationExpression	* code ++		908484	0					
ANR	909477	UnaryOperator	*		908484	0					
ANR	909478	PostIncDecOperationExpression	code ++		908484	1					
ANR	909479	Identifier	code		908484	0					
ANR	909480	IncDec	++		908484	1					
ANR	909481	ConditionalExpression	( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL		908484	1					
ANR	909482	Condition	( options & PCRE_MULTILINE ) != 0		908484	0					
ANR	909483	EqualityExpression	( options & PCRE_MULTILINE ) != 0		908484	0		!=			
ANR	909484	BitAndExpression	options & PCRE_MULTILINE		908484	0		&			
ANR	909485	Identifier	options		908484	0					
ANR	909486	Identifier	PCRE_MULTILINE		908484	1					
ANR	909487	PrimaryExpression	0		908484	1					
ANR	909488	Identifier	OP_DOLLM		908484	1					
ANR	909489	Identifier	OP_DOLL		908484	2					
ANR	909490	BreakStatement	break ;	4773:4:149534:149539	908484	18	True				
ANR	909491	Label	case CHAR_DOT :	4778:4:149686:149699	908484	19	True				
ANR	909492	Identifier	CHAR_DOT		908484	0					
ANR	909493	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	20					
ANR	909494	Condition	firstcharflags == REQ_UNSET	4779:8:149709:149735	908484	0	True				
ANR	909495	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	909496	Identifier	firstcharflags		908484	0					
ANR	909497	Identifier	REQ_UNSET		908484	1					
ANR	909498	ExpressionStatement	firstcharflags = REQ_NONE	4779:37:149738:149763	908484	1	True				
ANR	909499	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	909500	Identifier	firstcharflags		908484	0					
ANR	909501	Identifier	REQ_NONE		908484	1					
ANR	909502	ExpressionStatement	zerofirstchar = firstchar	4780:4:149769:149794	908484	21	True				
ANR	909503	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	909504	Identifier	zerofirstchar		908484	0					
ANR	909505	Identifier	firstchar		908484	1					
ANR	909506	ExpressionStatement	zerofirstcharflags = firstcharflags	4781:4:149800:149835	908484	22	True				
ANR	909507	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	909508	Identifier	zerofirstcharflags		908484	0					
ANR	909509	Identifier	firstcharflags		908484	1					
ANR	909510	ExpressionStatement	zeroreqchar = reqchar	4782:4:149841:149862	908484	23	True				
ANR	909511	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	909512	Identifier	zeroreqchar		908484	0					
ANR	909513	Identifier	reqchar		908484	1					
ANR	909514	ExpressionStatement	zeroreqcharflags = reqcharflags	4783:4:149868:149899	908484	24	True				
ANR	909515	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	909516	Identifier	zeroreqcharflags		908484	0					
ANR	909517	Identifier	reqcharflags		908484	1					
ANR	909518	ExpressionStatement	previous = code	4784:4:149905:149920	908484	25	True				
ANR	909519	AssignmentExpression	previous = code		908484	0		=			
ANR	909520	Identifier	previous		908484	0					
ANR	909521	Identifier	code		908484	1					
ANR	909522	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	4785:4:149926:149973	908484	26	True				
ANR	909523	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	909524	Identifier	item_hwm_offset		908484	0					
ANR	909525	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	909526	PtrMemberAccess	cd -> hwm		908484	0					
ANR	909527	Identifier	cd		908484	0					
ANR	909528	Identifier	hwm		908484	1					
ANR	909529	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	909530	Identifier	cd		908484	0					
ANR	909531	Identifier	start_workspace		908484	1					
ANR	909532	ExpressionStatement	* code ++ = ( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY	4786:4:149979:150038	908484	27	True				
ANR	909533	AssignmentExpression	* code ++ = ( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY		908484	0		=			
ANR	909534	UnaryOperationExpression	* code ++		908484	0					
ANR	909535	UnaryOperator	*		908484	0					
ANR	909536	PostIncDecOperationExpression	code ++		908484	1					
ANR	909537	Identifier	code		908484	0					
ANR	909538	IncDec	++		908484	1					
ANR	909539	ConditionalExpression	( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY		908484	1					
ANR	909540	Condition	( options & PCRE_DOTALL ) != 0		908484	0					
ANR	909541	EqualityExpression	( options & PCRE_DOTALL ) != 0		908484	0		!=			
ANR	909542	BitAndExpression	options & PCRE_DOTALL		908484	0		&			
ANR	909543	Identifier	options		908484	0					
ANR	909544	Identifier	PCRE_DOTALL		908484	1					
ANR	909545	PrimaryExpression	0		908484	1					
ANR	909546	Identifier	OP_ALLANY		908484	1					
ANR	909547	Identifier	OP_ANY		908484	2					
ANR	909548	BreakStatement	break ;	4787:4:150044:150049	908484	28	True				
ANR	909549	Label	case CHAR_RIGHT_SQUARE_BRACKET :	4805:4:150954:150984	908484	29	True				
ANR	909550	Identifier	CHAR_RIGHT_SQUARE_BRACKET		908484	0					
ANR	909551	IfStatement	if ( ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		908484	30					
ANR	909552	Condition	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0	4806:8:150994:151045	908484	0	True				
ANR	909553	EqualityExpression	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		908484	0		!=			
ANR	909554	BitAndExpression	cd -> external_options & PCRE_JAVASCRIPT_COMPAT		908484	0		&			
ANR	909555	PtrMemberAccess	cd -> external_options		908484	0					
ANR	909556	Identifier	cd		908484	0					
ANR	909557	Identifier	external_options		908484	1					
ANR	909558	Identifier	PCRE_JAVASCRIPT_COMPAT		908484	1					
ANR	909559	PrimaryExpression	0		908484	1					
ANR	909560	CompoundStatement		350:6:11178:11178	908484	1					
ANR	909561	ExpressionStatement	* errorcodeptr = ERR64	4808:6:151062:151083	908484	0	True				
ANR	909562	AssignmentExpression	* errorcodeptr = ERR64		908484	0		=			
ANR	909563	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	909564	UnaryOperator	*		908484	0					
ANR	909565	Identifier	errorcodeptr		908484	1					
ANR	909566	Identifier	ERR64		908484	1					
ANR	909567	GotoStatement	goto FAILED ;	4809:6:151091:151102	908484	1	True				
ANR	909568	Identifier	FAILED		908484	0					
ANR	909569	GotoStatement	goto NORMAL_CHAR ;	4811:4:151116:151132	908484	31	True				
ANR	909570	Identifier	NORMAL_CHAR		908484	0					
ANR	909571	Label	case CHAR_LEFT_SQUARE_BRACKET :	4819:4:151508:151537	908484	32	True				
ANR	909572	Identifier	CHAR_LEFT_SQUARE_BRACKET		908484	0					
ANR	909573	IfStatement	"if ( STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0 )"		908484	33					
ANR	909574	Condition	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0"	4820:8:151547:151598	908484	0	True				
ANR	909575	EqualityExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0"		908484	0		==			
ANR	909576	CallExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 )"		908484	0					
ANR	909577	Callee	STRNCMP_UC_C8		908484	0					
ANR	909578	Identifier	STRNCMP_UC_C8		908484	0					
ANR	909579	ArgumentList	ptr + 1		908484	1					
ANR	909580	Argument	ptr + 1		908484	0					
ANR	909581	AdditiveExpression	ptr + 1		908484	0		+			
ANR	909582	Identifier	ptr		908484	0					
ANR	909583	PrimaryExpression	1		908484	1					
ANR	909584	Argument	STRING_WEIRD_STARTWORD		908484	1					
ANR	909585	Identifier	STRING_WEIRD_STARTWORD		908484	0					
ANR	909586	Argument	6		908484	2					
ANR	909587	PrimaryExpression	6		908484	0					
ANR	909588	PrimaryExpression	0		908484	1					
ANR	909589	CompoundStatement		364:6:11731:11731	908484	1					
ANR	909590	ExpressionStatement	nestptr = ptr + 7	4822:6:151615:151632	908484	0	True				
ANR	909591	AssignmentExpression	nestptr = ptr + 7		908484	0		=			
ANR	909592	Identifier	nestptr		908484	0					
ANR	909593	AdditiveExpression	ptr + 7		908484	1		+			
ANR	909594	Identifier	ptr		908484	0					
ANR	909595	PrimaryExpression	7		908484	1					
ANR	909596	ExpressionStatement	ptr = sub_start_of_word - 1	4823:6:151640:151667	908484	1	True				
ANR	909597	AssignmentExpression	ptr = sub_start_of_word - 1		908484	0		=			
ANR	909598	Identifier	ptr		908484	0					
ANR	909599	AdditiveExpression	sub_start_of_word - 1		908484	1		-			
ANR	909600	Identifier	sub_start_of_word		908484	0					
ANR	909601	PrimaryExpression	1		908484	1					
ANR	909602	ContinueStatement	continue ;	4824:6:151675:151683	908484	2	True				
ANR	909603	IfStatement	"if ( STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0 )"		908484	34					
ANR	909604	Condition	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0"	4827:8:151702:151751	908484	0	True				
ANR	909605	EqualityExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0"		908484	0		==			
ANR	909606	CallExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 )"		908484	0					
ANR	909607	Callee	STRNCMP_UC_C8		908484	0					
ANR	909608	Identifier	STRNCMP_UC_C8		908484	0					
ANR	909609	ArgumentList	ptr + 1		908484	1					
ANR	909610	Argument	ptr + 1		908484	0					
ANR	909611	AdditiveExpression	ptr + 1		908484	0		+			
ANR	909612	Identifier	ptr		908484	0					
ANR	909613	PrimaryExpression	1		908484	1					
ANR	909614	Argument	STRING_WEIRD_ENDWORD		908484	1					
ANR	909615	Identifier	STRING_WEIRD_ENDWORD		908484	0					
ANR	909616	Argument	6		908484	2					
ANR	909617	PrimaryExpression	6		908484	0					
ANR	909618	PrimaryExpression	0		908484	1					
ANR	909619	CompoundStatement		371:6:11884:11884	908484	1					
ANR	909620	ExpressionStatement	nestptr = ptr + 7	4829:6:151768:151785	908484	0	True				
ANR	909621	AssignmentExpression	nestptr = ptr + 7		908484	0		=			
ANR	909622	Identifier	nestptr		908484	0					
ANR	909623	AdditiveExpression	ptr + 7		908484	1		+			
ANR	909624	Identifier	ptr		908484	0					
ANR	909625	PrimaryExpression	7		908484	1					
ANR	909626	ExpressionStatement	ptr = sub_end_of_word - 1	4830:6:151793:151818	908484	1	True				
ANR	909627	AssignmentExpression	ptr = sub_end_of_word - 1		908484	0		=			
ANR	909628	Identifier	ptr		908484	0					
ANR	909629	AdditiveExpression	sub_end_of_word - 1		908484	1		-			
ANR	909630	Identifier	sub_end_of_word		908484	0					
ANR	909631	PrimaryExpression	1		908484	1					
ANR	909632	ContinueStatement	continue ;	4831:6:151826:151834	908484	2	True				
ANR	909633	ExpressionStatement	previous = code	4836:4:151891:151906	908484	35	True				
ANR	909634	AssignmentExpression	previous = code		908484	0		=			
ANR	909635	Identifier	previous		908484	0					
ANR	909636	Identifier	code		908484	1					
ANR	909637	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	4837:4:151912:151959	908484	36	True				
ANR	909638	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	909639	Identifier	item_hwm_offset		908484	0					
ANR	909640	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	909641	PtrMemberAccess	cd -> hwm		908484	0					
ANR	909642	Identifier	cd		908484	0					
ANR	909643	Identifier	hwm		908484	1					
ANR	909644	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	909645	Identifier	cd		908484	0					
ANR	909646	Identifier	start_workspace		908484	1					
ANR	909647	IfStatement	"if ( ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		908484	37					
ANR	909648	Condition	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	4842:8:152117:152244	908484	0	True				
ANR	909649	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		908484	0		&&			
ANR	909650	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	0		||			
ANR	909651	EqualityExpression	ptr [ 1 ] == CHAR_COLON		908484	0		==			
ANR	909652	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909653	Identifier	ptr		908484	0					
ANR	909654	PrimaryExpression	1		908484	1					
ANR	909655	Identifier	CHAR_COLON		908484	1					
ANR	909656	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		||			
ANR	909657	EqualityExpression	ptr [ 1 ] == CHAR_DOT		908484	0		==			
ANR	909658	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909659	Identifier	ptr		908484	0					
ANR	909660	PrimaryExpression	1		908484	1					
ANR	909661	Identifier	CHAR_DOT		908484	1					
ANR	909662	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		==			
ANR	909663	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909664	Identifier	ptr		908484	0					
ANR	909665	PrimaryExpression	1		908484	1					
ANR	909666	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	909667	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		908484	1					
ANR	909668	Callee	check_posix_syntax		908484	0					
ANR	909669	Identifier	check_posix_syntax		908484	0					
ANR	909670	ArgumentList	ptr		908484	1					
ANR	909671	Argument	ptr		908484	0					
ANR	909672	Identifier	ptr		908484	0					
ANR	909673	Argument	& tempptr		908484	1					
ANR	909674	UnaryOperationExpression	& tempptr		908484	0					
ANR	909675	UnaryOperator	&		908484	0					
ANR	909676	Identifier	tempptr		908484	1					
ANR	909677	CompoundStatement		388:6:12377:12377	908484	1					
ANR	909678	ExpressionStatement	* errorcodeptr = ( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31	4846:6:152261:152314	908484	0	True				
ANR	909679	AssignmentExpression	* errorcodeptr = ( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31		908484	0		=			
ANR	909680	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	909681	UnaryOperator	*		908484	0					
ANR	909682	Identifier	errorcodeptr		908484	1					
ANR	909683	ConditionalExpression	( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31		908484	1					
ANR	909684	Condition	ptr [ 1 ] == CHAR_COLON		908484	0					
ANR	909685	EqualityExpression	ptr [ 1 ] == CHAR_COLON		908484	0		==			
ANR	909686	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909687	Identifier	ptr		908484	0					
ANR	909688	PrimaryExpression	1		908484	1					
ANR	909689	Identifier	CHAR_COLON		908484	1					
ANR	909690	Identifier	ERR13		908484	1					
ANR	909691	Identifier	ERR31		908484	2					
ANR	909692	GotoStatement	goto FAILED ;	4847:6:152322:152333	908484	1	True				
ANR	909693	Identifier	FAILED		908484	0					
ANR	909694	ElseStatement	else		908484	0					
ANR	909695	IfStatement	if ( ! negate_class && c == CHAR_CIRCUMFLEX_ACCENT )		908484	0					
ANR	909696	Condition	! negate_class && c == CHAR_CIRCUMFLEX_ACCENT	4867:15:152869:152912	908484	0	True				
ANR	909697	AndExpression	! negate_class && c == CHAR_CIRCUMFLEX_ACCENT		908484	0		&&			
ANR	909698	UnaryOperationExpression	! negate_class		908484	0					
ANR	909699	UnaryOperator	!		908484	0					
ANR	909700	Identifier	negate_class		908484	1					
ANR	909701	EqualityExpression	c == CHAR_CIRCUMFLEX_ACCENT		908484	1		==			
ANR	909702	Identifier	c		908484	0					
ANR	909703	Identifier	CHAR_CIRCUMFLEX_ACCENT		908484	1					
ANR	909704	ExpressionStatement	negate_class = TRUE	4868:8:152923:152942	908484	1	True				
ANR	909705	AssignmentExpression	negate_class = TRUE		908484	0		=			
ANR	909706	Identifier	negate_class		908484	0					
ANR	909707	Identifier	TRUE		908484	1					
ANR	909708	ElseStatement	else		908484	0					
ANR	909709	BreakStatement	break ;	4869:11:152955:152960	908484	0	True				
ANR	909710	ExpressionStatement	negate_class = FALSE	4854:4:152567:152587	908484	38	True				
ANR	909711	AssignmentExpression	negate_class = FALSE		908484	0		=			
ANR	909712	Identifier	negate_class		908484	0					
ANR	909713	Identifier	FALSE		908484	1					
ANR	909714	ForStatement	for ( ; ; )		908484	39					
ANR	909715	CompoundStatement		399:6:12732:12732	908484	0					
ANR	909716	ExpressionStatement	c = * ( ++ ptr )	4857:6:152616:152628	908484	0	True				
ANR	909717	AssignmentExpression	c = * ( ++ ptr )		908484	0		=			
ANR	909718	Identifier	c		908484	0					
ANR	909719	UnaryOperationExpression	* ( ++ ptr )		908484	1					
ANR	909720	UnaryOperator	*		908484	0					
ANR	909721	UnaryExpression	++ ptr		908484	1					
ANR	909722	IncDec	++		908484	0					
ANR	909723	Identifier	ptr		908484	1					
ANR	909724	IfStatement	if ( c == CHAR_BACKSLASH )		908484	1					
ANR	909725	Condition	c == CHAR_BACKSLASH	4858:10:152640:152658	908484	0	True				
ANR	909726	EqualityExpression	c == CHAR_BACKSLASH		908484	0		==			
ANR	909727	Identifier	c		908484	0					
ANR	909728	Identifier	CHAR_BACKSLASH		908484	1					
ANR	909729	CompoundStatement		402:8:12793:12793	908484	1					
ANR	909730	IfStatement	if ( ptr [ 1 ] == CHAR_E )		908484	0					
ANR	909731	Condition	ptr [ 1 ] == CHAR_E	4860:12:152683:152698	908484	0	True				
ANR	909732	EqualityExpression	ptr [ 1 ] == CHAR_E		908484	0		==			
ANR	909733	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909734	Identifier	ptr		908484	0					
ANR	909735	PrimaryExpression	1		908484	1					
ANR	909736	Identifier	CHAR_E		908484	1					
ANR	909737	ExpressionStatement	ptr ++	4861:10:152711:152716	908484	1	True				
ANR	909738	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	909739	Identifier	ptr		908484	0					
ANR	909740	IncDec	++		908484	1					
ANR	909741	ElseStatement	else		908484	0					
ANR	909742	Statement	if	4862:13:152731:152732	908484	0	True				
ANR	909743	Statement	(	4862:16:152734:152734	908484	1	True				
ANR	909744	Statement	STRNCMP_UC_C8	4862:17:152735:152747	908484	2	True				
ANR	909745	Statement	(	4862:30:152748:152748	908484	3	True				
ANR	909746	Statement	ptr	4862:31:152749:152751	908484	4	True				
ANR	909747	Statement	+	4862:35:152753:152753	908484	5	True				
ANR	909748	Statement	1	4862:37:152755:152755	908484	6	True				
ANR	909749	Statement	","	4862:38:152756:152756	908484	7	True				
ANR	909750	Statement	STR_Q	4862:40:152758:152762	908484	8	True				
ANR	909751	Statement	STR_BACKSLASH	4862:46:152764:152776	908484	9	True				
ANR	909752	Statement	STR_E	4862:60:152778:152782	908484	10	True				
ANR	909753	Statement	","	4862:65:152783:152783	908484	11	True				
ANR	909754	Statement	3	4862:67:152785:152785	908484	12	True				
ANR	909755	Statement	)	4862:68:152786:152786	908484	13	True				
ANR	909756	Statement	==	4862:70:152788:152789	908484	14	True				
ANR	909757	Statement	0	4862:73:152791:152791	908484	15	True				
ANR	909758	Statement	)	4862:74:152792:152792	908484	16	True				
ANR	909759	ExpressionStatement	ptr += 3	4863:10:152804:152812	908484	17	True				
ANR	909760	AssignmentExpression	ptr += 3		908484	0		+=			
ANR	909761	Identifier	ptr		908484	0					
ANR	909762	PrimaryExpression	3		908484	1					
ANR	909763	ElseStatement	else		908484	0					
ANR	909764	BreakStatement	break ;	4865:10:152837:152842	908484	0	True				
ANR	909765	IfStatement	if ( c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		908484	40					
ANR	909766	Condition	c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0	4877:8:153264:153357	908484	0	True				
ANR	909767	AndExpression	c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		908484	0		&&			
ANR	909768	EqualityExpression	c == CHAR_RIGHT_SQUARE_BRACKET		908484	0		==			
ANR	909769	Identifier	c		908484	0					
ANR	909770	Identifier	CHAR_RIGHT_SQUARE_BRACKET		908484	1					
ANR	909771	EqualityExpression	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		908484	1		!=			
ANR	909772	BitAndExpression	cd -> external_options & PCRE_JAVASCRIPT_COMPAT		908484	0		&			
ANR	909773	PtrMemberAccess	cd -> external_options		908484	0					
ANR	909774	Identifier	cd		908484	0					
ANR	909775	Identifier	external_options		908484	1					
ANR	909776	Identifier	PCRE_JAVASCRIPT_COMPAT		908484	1					
ANR	909777	PrimaryExpression	0		908484	1					
ANR	909778	CompoundStatement		422:6:13490:13490	908484	1					
ANR	909779	ExpressionStatement	* code ++ = negate_class ? OP_ALLANY : OP_FAIL	4880:6:153374:153417	908484	0	True				
ANR	909780	AssignmentExpression	* code ++ = negate_class ? OP_ALLANY : OP_FAIL		908484	0		=			
ANR	909781	UnaryOperationExpression	* code ++		908484	0					
ANR	909782	UnaryOperator	*		908484	0					
ANR	909783	PostIncDecOperationExpression	code ++		908484	1					
ANR	909784	Identifier	code		908484	0					
ANR	909785	IncDec	++		908484	1					
ANR	909786	ConditionalExpression	negate_class ? OP_ALLANY : OP_FAIL		908484	1					
ANR	909787	Condition	negate_class		908484	0					
ANR	909788	Identifier	negate_class		908484	0					
ANR	909789	Identifier	OP_ALLANY		908484	1					
ANR	909790	Identifier	OP_FAIL		908484	2					
ANR	909791	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	1					
ANR	909792	Condition	firstcharflags == REQ_UNSET	4881:10:153429:153455	908484	0	True				
ANR	909793	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	909794	Identifier	firstcharflags		908484	0					
ANR	909795	Identifier	REQ_UNSET		908484	1					
ANR	909796	ExpressionStatement	firstcharflags = REQ_NONE	4881:39:153458:153483	908484	1	True				
ANR	909797	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	909798	Identifier	firstcharflags		908484	0					
ANR	909799	Identifier	REQ_NONE		908484	1					
ANR	909800	ExpressionStatement	zerofirstchar = firstchar	4882:6:153491:153516	908484	2	True				
ANR	909801	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	909802	Identifier	zerofirstchar		908484	0					
ANR	909803	Identifier	firstchar		908484	1					
ANR	909804	ExpressionStatement	zerofirstcharflags = firstcharflags	4883:6:153524:153559	908484	3	True				
ANR	909805	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	909806	Identifier	zerofirstcharflags		908484	0					
ANR	909807	Identifier	firstcharflags		908484	1					
ANR	909808	BreakStatement	break ;	4884:6:153567:153572	908484	4	True				
ANR	909809	ExpressionStatement	should_flip_negation = FALSE	4891:4:153794:153822	908484	41	True				
ANR	909810	AssignmentExpression	should_flip_negation = FALSE		908484	0		=			
ANR	909811	Identifier	should_flip_negation		908484	0					
ANR	909812	Identifier	FALSE		908484	1					
ANR	909813	ExpressionStatement	xclass = FALSE	4897:4:153966:153980	908484	42	True				
ANR	909814	AssignmentExpression	xclass = FALSE		908484	0		=			
ANR	909815	Identifier	xclass		908484	0					
ANR	909816	Identifier	FALSE		908484	1					
ANR	909817	ExpressionStatement	class_uchardata = code + LINK_SIZE + 2	4898:4:153986:154024	908484	43	True				
ANR	909818	AssignmentExpression	class_uchardata = code + LINK_SIZE + 2		908484	0		=			
ANR	909819	Identifier	class_uchardata		908484	0					
ANR	909820	AdditiveExpression	code + LINK_SIZE + 2		908484	1		+			
ANR	909821	Identifier	code		908484	0					
ANR	909822	AdditiveExpression	LINK_SIZE + 2		908484	1		+			
ANR	909823	Identifier	LINK_SIZE		908484	0					
ANR	909824	PrimaryExpression	2		908484	1					
ANR	909825	ExpressionStatement	class_uchardata_base = class_uchardata	4899:4:154055:154093	908484	44	True				
ANR	909826	AssignmentExpression	class_uchardata_base = class_uchardata		908484	0		=			
ANR	909827	Identifier	class_uchardata_base		908484	0					
ANR	909828	Identifier	class_uchardata		908484	1					
ANR	909829	ExpressionStatement	class_has_8bitchar = 0	4908:4:154460:154482	908484	45	True				
ANR	909830	AssignmentExpression	class_has_8bitchar = 0		908484	0		=			
ANR	909831	Identifier	class_has_8bitchar		908484	0					
ANR	909832	PrimaryExpression	0		908484	1					
ANR	909833	ExpressionStatement	class_one_char = 0	4909:4:154488:154506	908484	46	True				
ANR	909834	AssignmentExpression	class_one_char = 0		908484	0		=			
ANR	909835	Identifier	class_one_char		908484	0					
ANR	909836	PrimaryExpression	0		908484	1					
ANR	909837	ExpressionStatement	xclass_has_prop = FALSE	4911:4:154562:154585	908484	47	True				
ANR	909838	AssignmentExpression	xclass_has_prop = FALSE		908484	0		=			
ANR	909839	Identifier	xclass_has_prop		908484	0					
ANR	909840	Identifier	FALSE		908484	1					
ANR	909841	ExpressionStatement	"memset ( classbits , 0 , 32 * sizeof ( pcre_uint8 ) )"	4919:4:154837:154882	908484	48	True				
ANR	909842	CallExpression	"memset ( classbits , 0 , 32 * sizeof ( pcre_uint8 ) )"		908484	0					
ANR	909843	Callee	memset		908484	0					
ANR	909844	Identifier	memset		908484	0					
ANR	909845	ArgumentList	classbits		908484	1					
ANR	909846	Argument	classbits		908484	0					
ANR	909847	Identifier	classbits		908484	0					
ANR	909848	Argument	0		908484	1					
ANR	909849	PrimaryExpression	0		908484	0					
ANR	909850	Argument	32 * sizeof ( pcre_uint8 )		908484	2					
ANR	909851	MultiplicativeExpression	32 * sizeof ( pcre_uint8 )		908484	0		*			
ANR	909852	PrimaryExpression	32		908484	0					
ANR	909853	SizeofExpression	sizeof ( pcre_uint8 )		908484	1					
ANR	909854	Sizeof	sizeof		908484	0					
ANR	909855	SizeofOperand	pcre_uint8		908484	1					
ANR	909856	IfStatement	if ( c != CHAR_NULL )		908484	49					
ANR	909857	Condition	c != CHAR_NULL	4925:8:155104:155117	908484	0	True				
ANR	909858	EqualityExpression	c != CHAR_NULL		908484	0		!=			
ANR	909859	Identifier	c		908484	0					
ANR	909860	Identifier	CHAR_NULL		908484	1					
ANR	909861	DoStatement	do		908484	1					
ANR	909862	CompoundStatement		470:6:15261:15285	908484	0					
ANR	909863	IdentifierDeclStatement	const pcre_uchar * oldptr ;	4927:6:155137:155161	908484	0	True				
ANR	909864	IdentifierDecl	* oldptr		908484	0					
ANR	909865	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	909866	Identifier	oldptr		908484	1					
ANR	909867	IfStatement	if ( utf && HAS_EXTRALEN ( c ) )		908484	1					
ANR	909868	Condition	utf && HAS_EXTRALEN ( c )	4930:10:155193:155214	908484	0	True				
ANR	909869	AndExpression	utf && HAS_EXTRALEN ( c )		908484	0		&&			
ANR	909870	Identifier	utf		908484	0					
ANR	909871	CallExpression	HAS_EXTRALEN ( c )		908484	1					
ANR	909872	Callee	HAS_EXTRALEN		908484	0					
ANR	909873	Identifier	HAS_EXTRALEN		908484	0					
ANR	909874	ArgumentList	c		908484	1					
ANR	909875	Argument	c		908484	0					
ANR	909876	Identifier	c		908484	0					
ANR	909877	CompoundStatement		474:8:15349:15349	908484	1					
ANR	909878	ExpressionStatement	"GETCHARLEN ( c , ptr , ptr )"	4932:8:155299:155322	908484	0	True				
ANR	909879	CallExpression	"GETCHARLEN ( c , ptr , ptr )"		908484	0					
ANR	909880	Callee	GETCHARLEN		908484	0					
ANR	909881	Identifier	GETCHARLEN		908484	0					
ANR	909882	ArgumentList	c		908484	1					
ANR	909883	Argument	c		908484	0					
ANR	909884	Identifier	c		908484	0					
ANR	909885	Argument	ptr		908484	1					
ANR	909886	Identifier	ptr		908484	0					
ANR	909887	Argument	ptr		908484	2					
ANR	909888	Identifier	ptr		908484	0					
ANR	909889	IfStatement	if ( class_uchardata > class_uchardata_base )		908484	2					
ANR	909890	Condition	class_uchardata > class_uchardata_base	4943:10:155765:155802	908484	0	True				
ANR	909891	RelationalExpression	class_uchardata > class_uchardata_base		908484	0		>			
ANR	909892	Identifier	class_uchardata		908484	0					
ANR	909893	Identifier	class_uchardata_base		908484	1					
ANR	909894	ExpressionStatement	xclass = TRUE	4943:50:155805:155818	908484	1	True				
ANR	909895	AssignmentExpression	xclass = TRUE		908484	0		=			
ANR	909896	Identifier	xclass		908484	0					
ANR	909897	Identifier	TRUE		908484	1					
ANR	909898	IfStatement	if ( lengthptr != NULL && class_uchardata > class_uchardata_base )		908484	3					
ANR	909899	Condition	lengthptr != NULL && class_uchardata > class_uchardata_base	4945:10:155831:155889	908484	0	True				
ANR	909900	AndExpression	lengthptr != NULL && class_uchardata > class_uchardata_base		908484	0		&&			
ANR	909901	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	909902	Identifier	lengthptr		908484	0					
ANR	909903	Identifier	NULL		908484	1					
ANR	909904	RelationalExpression	class_uchardata > class_uchardata_base		908484	1		>			
ANR	909905	Identifier	class_uchardata		908484	0					
ANR	909906	Identifier	class_uchardata_base		908484	1					
ANR	909907	CompoundStatement		489:8:16024:16024	908484	1					
ANR	909908	ExpressionStatement	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )	4947:8:155910:155969	908484	0	True				
ANR	909909	AssignmentExpression	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )		908484	0		+=			
ANR	909910	UnaryOperationExpression	* lengthptr		908484	0					
ANR	909911	UnaryOperator	*		908484	0					
ANR	909912	Identifier	lengthptr		908484	1					
ANR	909913	CastExpression	( int ) ( class_uchardata - class_uchardata_base )		908484	1					
ANR	909914	CastTarget	int		908484	0					
ANR	909915	AdditiveExpression	class_uchardata - class_uchardata_base		908484	1		-			
ANR	909916	Identifier	class_uchardata		908484	0					
ANR	909917	Identifier	class_uchardata_base		908484	1					
ANR	909918	ExpressionStatement	class_uchardata = class_uchardata_base	4948:8:155979:156017	908484	1	True				
ANR	909919	AssignmentExpression	class_uchardata = class_uchardata_base		908484	0		=			
ANR	909920	Identifier	class_uchardata		908484	0					
ANR	909921	Identifier	class_uchardata_base		908484	1					
ANR	909922	IfStatement	if ( inescq )		908484	4					
ANR	909923	Condition	inescq	4954:10:156107:156112	908484	0	True				
ANR	909924	Identifier	inescq		908484	0					
ANR	909925	CompoundStatement		498:8:16247:16247	908484	1					
ANR	909926	IfStatement	if ( c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		908484	0					
ANR	909927	Condition	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	4956:12:156137:156175	908484	0	True				
ANR	909928	AndExpression	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		908484	0		&&			
ANR	909929	EqualityExpression	c == CHAR_BACKSLASH		908484	0		==			
ANR	909930	Identifier	c		908484	0					
ANR	909931	Identifier	CHAR_BACKSLASH		908484	1					
ANR	909932	EqualityExpression	ptr [ 1 ] == CHAR_E		908484	1		==			
ANR	909933	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909934	Identifier	ptr		908484	0					
ANR	909935	PrimaryExpression	1		908484	1					
ANR	909936	Identifier	CHAR_E		908484	1					
ANR	909937	CompoundStatement		500:10:16335:16335	908484	1					
ANR	909938	ExpressionStatement	inescq = FALSE	4958:10:156223:156237	908484	0	True				
ANR	909939	AssignmentExpression	inescq = FALSE		908484	0		=			
ANR	909940	Identifier	inescq		908484	0					
ANR	909941	Identifier	FALSE		908484	1					
ANR	909942	ExpressionStatement	ptr ++	4959:10:156293:156298	908484	1	True				
ANR	909943	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	909944	Identifier	ptr		908484	0					
ANR	909945	IncDec	++		908484	1					
ANR	909946	ContinueStatement	continue ;	4960:10:156356:156364	908484	2	True				
ANR	909947	GotoStatement	goto CHECK_RANGE ;	4962:8:156435:156451	908484	1	True				
ANR	909948	Identifier	CHECK_RANGE		908484	0					
ANR	909949	IfStatement	"if ( c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		908484	5					
ANR	909950	Condition	"c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	4971:10:156841:157005	908484	0	True				
ANR	909951	AndExpression	"c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		908484	0		&&			
ANR	909952	EqualityExpression	c == CHAR_LEFT_SQUARE_BRACKET		908484	0		==			
ANR	909953	Identifier	c		908484	0					
ANR	909954	Identifier	CHAR_LEFT_SQUARE_BRACKET		908484	1					
ANR	909955	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		908484	1		&&			
ANR	909956	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	0		||			
ANR	909957	EqualityExpression	ptr [ 1 ] == CHAR_COLON		908484	0		==			
ANR	909958	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909959	Identifier	ptr		908484	0					
ANR	909960	PrimaryExpression	1		908484	1					
ANR	909961	Identifier	CHAR_COLON		908484	1					
ANR	909962	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		||			
ANR	909963	EqualityExpression	ptr [ 1 ] == CHAR_DOT		908484	0		==			
ANR	909964	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909965	Identifier	ptr		908484	0					
ANR	909966	PrimaryExpression	1		908484	1					
ANR	909967	Identifier	CHAR_DOT		908484	1					
ANR	909968	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		==			
ANR	909969	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	909970	Identifier	ptr		908484	0					
ANR	909971	PrimaryExpression	1		908484	1					
ANR	909972	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	909973	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		908484	1					
ANR	909974	Callee	check_posix_syntax		908484	0					
ANR	909975	Identifier	check_posix_syntax		908484	0					
ANR	909976	ArgumentList	ptr		908484	1					
ANR	909977	Argument	ptr		908484	0					
ANR	909978	Identifier	ptr		908484	0					
ANR	909979	Argument	& tempptr		908484	1					
ANR	909980	UnaryOperationExpression	& tempptr		908484	0					
ANR	909981	UnaryOperator	&		908484	0					
ANR	909982	Identifier	tempptr		908484	1					
ANR	909983	CompoundStatement		521:8:17283:17303	908484	1					
ANR	909984	IdentifierDeclStatement	BOOL local_negate = FALSE ;	4975:8:157026:157051	908484	0	True				
ANR	909985	IdentifierDecl	local_negate = FALSE		908484	0					
ANR	909986	IdentifierDeclType	BOOL		908484	0					
ANR	909987	Identifier	local_negate		908484	1					
ANR	909988	AssignmentExpression	local_negate = FALSE		908484	2		=			
ANR	909989	Identifier	FALSE		908484	0					
ANR	909990	Identifier	FALSE		908484	1					
ANR	909991	IdentifierDeclStatement	"int posix_class , taboffset , tabopt ;"	4976:8:157061:157095	908484	1	True				
ANR	909992	IdentifierDecl	posix_class		908484	0					
ANR	909993	IdentifierDeclType	int		908484	0					
ANR	909994	Identifier	posix_class		908484	1					
ANR	909995	IdentifierDecl	taboffset		908484	1					
ANR	909996	IdentifierDeclType	int		908484	0					
ANR	909997	Identifier	taboffset		908484	1					
ANR	909998	IdentifierDecl	tabopt		908484	2					
ANR	909999	IdentifierDeclType	int		908484	0					
ANR	910000	Identifier	tabopt		908484	1					
ANR	910001	Statement	register	4977:8:157105:157112	908484	2	True				
ANR	910002	IdentifierDeclStatement	const pcre_uint8 * cbits = cd -> cbits ;	4977:17:157114:157149	908484	3	True				
ANR	910003	IdentifierDecl	* cbits = cd -> cbits		908484	0					
ANR	910004	IdentifierDeclType	const pcre_uint8 *		908484	0					
ANR	910005	Identifier	cbits		908484	1					
ANR	910006	AssignmentExpression	* cbits = cd -> cbits		908484	2		=			
ANR	910007	Identifier	cbits		908484	0					
ANR	910008	PtrMemberAccess	cd -> cbits		908484	1					
ANR	910009	Identifier	cd		908484	0					
ANR	910010	Identifier	cbits		908484	1					
ANR	910011	IdentifierDeclStatement	pcre_uint8 pbits [ 32 ] ;	4978:8:157159:157179	908484	4	True				
ANR	910012	IdentifierDecl	pbits [ 32 ]		908484	0					
ANR	910013	IdentifierDeclType	pcre_uint8 [ 32 ]		908484	0					
ANR	910014	Identifier	pbits		908484	1					
ANR	910015	PrimaryExpression	32		908484	2					
ANR	910016	IfStatement	if ( ptr [ 1 ] != CHAR_COLON )		908484	5					
ANR	910017	Condition	ptr [ 1 ] != CHAR_COLON	4980:12:157194:157213	908484	0	True				
ANR	910018	EqualityExpression	ptr [ 1 ] != CHAR_COLON		908484	0		!=			
ANR	910019	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	910020	Identifier	ptr		908484	0					
ANR	910021	PrimaryExpression	1		908484	1					
ANR	910022	Identifier	CHAR_COLON		908484	1					
ANR	910023	CompoundStatement		524:10:17350:17350	908484	1					
ANR	910024	ExpressionStatement	* errorcodeptr = ERR31	4982:10:157238:157259	908484	0	True				
ANR	910025	AssignmentExpression	* errorcodeptr = ERR31		908484	0		=			
ANR	910026	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	910027	UnaryOperator	*		908484	0					
ANR	910028	Identifier	errorcodeptr		908484	1					
ANR	910029	Identifier	ERR31		908484	1					
ANR	910030	GotoStatement	goto FAILED ;	4983:10:157271:157282	908484	1	True				
ANR	910031	Identifier	FAILED		908484	0					
ANR	910032	ExpressionStatement	ptr += 2	4986:8:157305:157313	908484	6	True				
ANR	910033	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	910034	Identifier	ptr		908484	0					
ANR	910035	PrimaryExpression	2		908484	1					
ANR	910036	IfStatement	if ( * ptr == CHAR_CIRCUMFLEX_ACCENT )		908484	7					
ANR	910037	Condition	* ptr == CHAR_CIRCUMFLEX_ACCENT	4987:12:157327:157356	908484	0	True				
ANR	910038	EqualityExpression	* ptr == CHAR_CIRCUMFLEX_ACCENT		908484	0		==			
ANR	910039	UnaryOperationExpression	* ptr		908484	0					
ANR	910040	UnaryOperator	*		908484	0					
ANR	910041	Identifier	ptr		908484	1					
ANR	910042	Identifier	CHAR_CIRCUMFLEX_ACCENT		908484	1					
ANR	910043	CompoundStatement		531:10:17493:17493	908484	1					
ANR	910044	ExpressionStatement	local_negate = TRUE	4989:10:157381:157400	908484	0	True				
ANR	910045	AssignmentExpression	local_negate = TRUE		908484	0		=			
ANR	910046	Identifier	local_negate		908484	0					
ANR	910047	Identifier	TRUE		908484	1					
ANR	910048	ExpressionStatement	should_flip_negation = TRUE	4990:10:157412:157439	908484	1	True				
ANR	910049	AssignmentExpression	should_flip_negation = TRUE		908484	0		=			
ANR	910050	Identifier	should_flip_negation		908484	0					
ANR	910051	Identifier	TRUE		908484	1					
ANR	910052	ExpressionStatement	ptr ++	4991:10:157480:157485	908484	2	True				
ANR	910053	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	910054	Identifier	ptr		908484	0					
ANR	910055	IncDec	++		908484	1					
ANR	910056	ExpressionStatement	"posix_class = check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"	4994:8:157508:157565	908484	8	True				
ANR	910057	AssignmentExpression	"posix_class = check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"		908484	0		=			
ANR	910058	Identifier	posix_class		908484	0					
ANR	910059	CallExpression	"check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"		908484	1					
ANR	910060	Callee	check_posix_name		908484	0					
ANR	910061	Identifier	check_posix_name		908484	0					
ANR	910062	ArgumentList	ptr		908484	1					
ANR	910063	Argument	ptr		908484	0					
ANR	910064	Identifier	ptr		908484	0					
ANR	910065	Argument	( int ) ( tempptr - ptr )		908484	1					
ANR	910066	CastExpression	( int ) ( tempptr - ptr )		908484	0					
ANR	910067	CastTarget	int		908484	0					
ANR	910068	AdditiveExpression	tempptr - ptr		908484	1		-			
ANR	910069	Identifier	tempptr		908484	0					
ANR	910070	Identifier	ptr		908484	1					
ANR	910071	IfStatement	if ( posix_class < 0 )		908484	9					
ANR	910072	Condition	posix_class < 0	4995:12:157579:157593	908484	0	True				
ANR	910073	RelationalExpression	posix_class < 0		908484	0		<			
ANR	910074	Identifier	posix_class		908484	0					
ANR	910075	PrimaryExpression	0		908484	1					
ANR	910076	CompoundStatement		539:10:17730:17730	908484	1					
ANR	910077	ExpressionStatement	* errorcodeptr = ERR30	4997:10:157618:157639	908484	0	True				
ANR	910078	AssignmentExpression	* errorcodeptr = ERR30		908484	0		=			
ANR	910079	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	910080	UnaryOperator	*		908484	0					
ANR	910081	Identifier	errorcodeptr		908484	1					
ANR	910082	Identifier	ERR30		908484	1					
ANR	910083	GotoStatement	goto FAILED ;	4998:10:157651:157662	908484	1	True				
ANR	910084	Identifier	FAILED		908484	0					
ANR	910085	IfStatement	if ( ( options & PCRE_CASELESS ) != 0 && posix_class <= 2 )		908484	10					
ANR	910086	Condition	( options & PCRE_CASELESS ) != 0 && posix_class <= 2	5005:12:157886:157935	908484	0	True				
ANR	910087	AndExpression	( options & PCRE_CASELESS ) != 0 && posix_class <= 2		908484	0		&&			
ANR	910088	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	910089	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	910090	Identifier	options		908484	0					
ANR	910091	Identifier	PCRE_CASELESS		908484	1					
ANR	910092	PrimaryExpression	0		908484	1					
ANR	910093	RelationalExpression	posix_class <= 2		908484	1		<=			
ANR	910094	Identifier	posix_class		908484	0					
ANR	910095	PrimaryExpression	2		908484	1					
ANR	910096	ExpressionStatement	posix_class = 0	5006:10:157948:157963	908484	1	True				
ANR	910097	AssignmentExpression	posix_class = 0		908484	0		=			
ANR	910098	Identifier	posix_class		908484	0					
ANR	910099	PrimaryExpression	0		908484	1					
ANR	910100	IfStatement	if ( ( options & PCRE_UCP ) != 0 )		908484	11					
ANR	910101	Condition	( options & PCRE_UCP ) != 0	5014:12:158249:158273	908484	0	True				
ANR	910102	EqualityExpression	( options & PCRE_UCP ) != 0		908484	0		!=			
ANR	910103	BitAndExpression	options & PCRE_UCP		908484	0		&			
ANR	910104	Identifier	options		908484	0					
ANR	910105	Identifier	PCRE_UCP		908484	1					
ANR	910106	PrimaryExpression	0		908484	1					
ANR	910107	CompoundStatement		560:10:18456:18516	908484	1					
ANR	910108	IdentifierDeclStatement	unsigned int ptype = 0 ;	5016:10:158298:158320	908484	0	True				
ANR	910109	IdentifierDecl	ptype = 0		908484	0					
ANR	910110	IdentifierDeclType	unsigned int		908484	0					
ANR	910111	Identifier	ptype		908484	1					
ANR	910112	AssignmentExpression	ptype = 0		908484	2		=			
ANR	910113	Identifier	ptype		908484	0					
ANR	910114	PrimaryExpression	0		908484	1					
ANR	910115	IdentifierDeclStatement	int pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 ) ;	5017:10:158332:158392	908484	1	True				
ANR	910116	IdentifierDecl	pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		908484	0					
ANR	910117	IdentifierDeclType	int		908484	0					
ANR	910118	Identifier	pc		908484	1					
ANR	910119	AssignmentExpression	pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		908484	2		=			
ANR	910120	Identifier	pc		908484	0					
ANR	910121	AdditiveExpression	posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		908484	1		+			
ANR	910122	Identifier	posix_class		908484	0					
ANR	910123	ConditionalExpression	( local_negate ) ? POSIX_SUBSIZE / 2 : 0		908484	1					
ANR	910124	Condition	local_negate		908484	0					
ANR	910125	Identifier	local_negate		908484	0					
ANR	910126	MultiplicativeExpression	POSIX_SUBSIZE / 2		908484	1		/			
ANR	910127	Identifier	POSIX_SUBSIZE		908484	0					
ANR	910128	PrimaryExpression	2		908484	1					
ANR	910129	PrimaryExpression	0		908484	2					
ANR	910130	IfStatement	if ( posix_substitutes [ pc ] != NULL )		908484	2					
ANR	910131	Condition	posix_substitutes [ pc ] != NULL	5022:14:158530:158558	908484	0	True				
ANR	910132	EqualityExpression	posix_substitutes [ pc ] != NULL		908484	0		!=			
ANR	910133	ArrayIndexing	posix_substitutes [ pc ]		908484	0					
ANR	910134	Identifier	posix_substitutes		908484	0					
ANR	910135	Identifier	pc		908484	1					
ANR	910136	Identifier	NULL		908484	1					
ANR	910137	CompoundStatement		566:12:18697:18697	908484	1					
ANR	910138	ExpressionStatement	nestptr = tempptr + 1	5024:12:158587:158608	908484	0	True				
ANR	910139	AssignmentExpression	nestptr = tempptr + 1		908484	0		=			
ANR	910140	Identifier	nestptr		908484	0					
ANR	910141	AdditiveExpression	tempptr + 1		908484	1		+			
ANR	910142	Identifier	tempptr		908484	0					
ANR	910143	PrimaryExpression	1		908484	1					
ANR	910144	ExpressionStatement	ptr = posix_substitutes [ pc ] - 1	5025:12:158622:158653	908484	1	True				
ANR	910145	AssignmentExpression	ptr = posix_substitutes [ pc ] - 1		908484	0		=			
ANR	910146	Identifier	ptr		908484	0					
ANR	910147	AdditiveExpression	posix_substitutes [ pc ] - 1		908484	1		-			
ANR	910148	ArrayIndexing	posix_substitutes [ pc ]		908484	0					
ANR	910149	Identifier	posix_substitutes		908484	0					
ANR	910150	Identifier	pc		908484	1					
ANR	910151	PrimaryExpression	1		908484	1					
ANR	910152	ContinueStatement	continue ;	5026:12:158667:158675	908484	2	True				
ANR	910153	ElseStatement	else		908484	0					
ANR	910154	SwitchStatement	switch ( posix_class )		908484	0					
ANR	910155	Condition	posix_class	5032:22:158847:158857	908484	0	True				
ANR	910156	Identifier	posix_class		908484	0					
ANR	910157	CompoundStatement		576:12:18996:18996	908484	1					
ANR	910158	Label	case PC_GRAPH :	5034:12:158886:158899	908484	0	True				
ANR	910159	Identifier	PC_GRAPH		908484	0					
ANR	910160	ExpressionStatement	ptype = PT_PXGRAPH	5035:12:158913:158931	908484	1	True				
ANR	910161	AssignmentExpression	ptype = PT_PXGRAPH		908484	0		=			
ANR	910162	Identifier	ptype		908484	0					
ANR	910163	Identifier	PT_PXGRAPH		908484	1					
ANR	910164	Label	case PC_PRINT :	5037:12:158976:158989	908484	2	True				
ANR	910165	Identifier	PC_PRINT		908484	0					
ANR	910166	IfStatement	if ( ptype == 0 )		908484	3					
ANR	910167	Condition	ptype == 0	5038:16:159007:159016	908484	0	True				
ANR	910168	EqualityExpression	ptype == 0		908484	0		==			
ANR	910169	Identifier	ptype		908484	0					
ANR	910170	PrimaryExpression	0		908484	1					
ANR	910171	ExpressionStatement	ptype = PT_PXPRINT	5038:28:159019:159037	908484	1	True				
ANR	910172	AssignmentExpression	ptype = PT_PXPRINT		908484	0		=			
ANR	910173	Identifier	ptype		908484	0					
ANR	910174	Identifier	PT_PXPRINT		908484	1					
ANR	910175	Label	case PC_PUNCT :	5040:12:159082:159095	908484	4	True				
ANR	910176	Identifier	PC_PUNCT		908484	0					
ANR	910177	IfStatement	if ( ptype == 0 )		908484	5					
ANR	910178	Condition	ptype == 0	5041:16:159113:159122	908484	0	True				
ANR	910179	EqualityExpression	ptype == 0		908484	0		==			
ANR	910180	Identifier	ptype		908484	0					
ANR	910181	PrimaryExpression	0		908484	1					
ANR	910182	ExpressionStatement	ptype = PT_PXPUNCT	5041:28:159125:159143	908484	1	True				
ANR	910183	AssignmentExpression	ptype = PT_PXPUNCT		908484	0		=			
ANR	910184	Identifier	ptype		908484	0					
ANR	910185	Identifier	PT_PXPUNCT		908484	1					
ANR	910186	ExpressionStatement	* class_uchardata ++ = local_negate ? XCL_NOTPROP : XCL_PROP	5042:12:159157:159214	908484	6	True				
ANR	910187	AssignmentExpression	* class_uchardata ++ = local_negate ? XCL_NOTPROP : XCL_PROP		908484	0		=			
ANR	910188	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910189	UnaryOperator	*		908484	0					
ANR	910190	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910191	Identifier	class_uchardata		908484	0					
ANR	910192	IncDec	++		908484	1					
ANR	910193	ConditionalExpression	local_negate ? XCL_NOTPROP : XCL_PROP		908484	1					
ANR	910194	Condition	local_negate		908484	0					
ANR	910195	Identifier	local_negate		908484	0					
ANR	910196	Identifier	XCL_NOTPROP		908484	1					
ANR	910197	Identifier	XCL_PROP		908484	2					
ANR	910198	ExpressionStatement	* class_uchardata ++ = ptype	5043:12:159228:159254	908484	7	True				
ANR	910199	AssignmentExpression	* class_uchardata ++ = ptype		908484	0		=			
ANR	910200	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910201	UnaryOperator	*		908484	0					
ANR	910202	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910203	Identifier	class_uchardata		908484	0					
ANR	910204	IncDec	++		908484	1					
ANR	910205	Identifier	ptype		908484	1					
ANR	910206	ExpressionStatement	* class_uchardata ++ = 0	5044:12:159268:159290	908484	8	True				
ANR	910207	AssignmentExpression	* class_uchardata ++ = 0		908484	0		=			
ANR	910208	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910209	UnaryOperator	*		908484	0					
ANR	910210	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910211	Identifier	class_uchardata		908484	0					
ANR	910212	IncDec	++		908484	1					
ANR	910213	PrimaryExpression	0		908484	1					
ANR	910214	ExpressionStatement	xclass_has_prop = TRUE	5045:12:159304:159326	908484	9	True				
ANR	910215	AssignmentExpression	xclass_has_prop = TRUE		908484	0		=			
ANR	910216	Identifier	xclass_has_prop		908484	0					
ANR	910217	Identifier	TRUE		908484	1					
ANR	910218	ExpressionStatement	ptr = tempptr + 1	5046:12:159340:159357	908484	10	True				
ANR	910219	AssignmentExpression	ptr = tempptr + 1		908484	0		=			
ANR	910220	Identifier	ptr		908484	0					
ANR	910221	AdditiveExpression	tempptr + 1		908484	1		+			
ANR	910222	Identifier	tempptr		908484	0					
ANR	910223	PrimaryExpression	1		908484	1					
ANR	910224	ContinueStatement	continue ;	5047:12:159371:159379	908484	11	True				
ANR	910225	Label	default :	5061:12:160234:160241	908484	12	True				
ANR	910226	Identifier	default		908484	0					
ANR	910227	IfStatement	if ( ! negate_class && local_negate && ( xclass || tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET ) )		908484	13					
ANR	910228	Condition	! negate_class && local_negate && ( xclass || tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET )	5062:16:160259:160358	908484	0	True				
ANR	910229	AndExpression	! negate_class && local_negate && ( xclass || tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET )		908484	0		&&			
ANR	910230	UnaryOperationExpression	! negate_class		908484	0					
ANR	910231	UnaryOperator	!		908484	0					
ANR	910232	Identifier	negate_class		908484	1					
ANR	910233	AndExpression	local_negate && ( xclass || tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET )		908484	1		&&			
ANR	910234	Identifier	local_negate		908484	0					
ANR	910235	OrExpression	xclass || tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET		908484	1		||			
ANR	910236	Identifier	xclass		908484	0					
ANR	910237	EqualityExpression	tempptr [ 2 ] != CHAR_RIGHT_SQUARE_BRACKET		908484	1		!=			
ANR	910238	ArrayIndexing	tempptr [ 2 ]		908484	0					
ANR	910239	Identifier	tempptr		908484	0					
ANR	910240	PrimaryExpression	2		908484	1					
ANR	910241	Identifier	CHAR_RIGHT_SQUARE_BRACKET		908484	1					
ANR	910242	CompoundStatement		607:14:20499:20499	908484	1					
ANR	910243	ExpressionStatement	* class_uchardata ++ = XCL_RANGE	5065:14:160391:160421	908484	0	True				
ANR	910244	AssignmentExpression	* class_uchardata ++ = XCL_RANGE		908484	0		=			
ANR	910245	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910246	UnaryOperator	*		908484	0					
ANR	910247	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910248	Identifier	class_uchardata		908484	0					
ANR	910249	IncDec	++		908484	1					
ANR	910250	Identifier	XCL_RANGE		908484	1					
ANR	910251	ExpressionStatement	"class_uchardata += PRIV ( ord2utf ) ( 0x100 , class_uchardata )"	5066:14:160437:160493	908484	1	True				
ANR	910252	AssignmentExpression	"class_uchardata += PRIV ( ord2utf ) ( 0x100 , class_uchardata )"		908484	0		+=			
ANR	910253	Identifier	class_uchardata		908484	0					
ANR	910254	CallExpression	"PRIV ( ord2utf ) ( 0x100 , class_uchardata )"		908484	1					
ANR	910255	Callee	PRIV ( ord2utf )		908484	0					
ANR	910256	CallExpression	PRIV ( ord2utf )		908484	0					
ANR	910257	Callee	PRIV		908484	0					
ANR	910258	Identifier	PRIV		908484	0					
ANR	910259	ArgumentList	ord2utf		908484	1					
ANR	910260	Argument	ord2utf		908484	0					
ANR	910261	Identifier	ord2utf		908484	0					
ANR	910262	ArgumentList	0x100		908484	1					
ANR	910263	Argument	0x100		908484	0					
ANR	910264	PrimaryExpression	0x100		908484	0					
ANR	910265	Argument	class_uchardata		908484	1					
ANR	910266	Identifier	class_uchardata		908484	0					
ANR	910267	ExpressionStatement	"class_uchardata += PRIV ( ord2utf ) ( 0x10ffff , class_uchardata )"	5067:14:160509:160568	908484	2	True				
ANR	910268	AssignmentExpression	"class_uchardata += PRIV ( ord2utf ) ( 0x10ffff , class_uchardata )"		908484	0		+=			
ANR	910269	Identifier	class_uchardata		908484	0					
ANR	910270	CallExpression	"PRIV ( ord2utf ) ( 0x10ffff , class_uchardata )"		908484	1					
ANR	910271	Callee	PRIV ( ord2utf )		908484	0					
ANR	910272	CallExpression	PRIV ( ord2utf )		908484	0					
ANR	910273	Callee	PRIV		908484	0					
ANR	910274	Identifier	PRIV		908484	0					
ANR	910275	ArgumentList	ord2utf		908484	1					
ANR	910276	Argument	ord2utf		908484	0					
ANR	910277	Identifier	ord2utf		908484	0					
ANR	910278	ArgumentList	0x10ffff		908484	1					
ANR	910279	Argument	0x10ffff		908484	0					
ANR	910280	PrimaryExpression	0x10ffff		908484	0					
ANR	910281	Argument	class_uchardata		908484	1					
ANR	910282	Identifier	class_uchardata		908484	0					
ANR	910283	BreakStatement	break ;	5069:12:160598:160603	908484	14	True				
ANR	910284	ExpressionStatement	posix_class *= 3	5079:8:161002:161018	908484	12	True				
ANR	910285	AssignmentExpression	posix_class *= 3		908484	0		*=			
ANR	910286	Identifier	posix_class		908484	0					
ANR	910287	PrimaryExpression	3		908484	1					
ANR	910288	ExpressionStatement	"memcpy ( pbits , cbits + posix_class_maps [ posix_class ] , 32 * sizeof ( pcre_uint8 ) )"	5083:8:161085:161172	908484	13	True				
ANR	910289	CallExpression	"memcpy ( pbits , cbits + posix_class_maps [ posix_class ] , 32 * sizeof ( pcre_uint8 ) )"		908484	0					
ANR	910290	Callee	memcpy		908484	0					
ANR	910291	Identifier	memcpy		908484	0					
ANR	910292	ArgumentList	pbits		908484	1					
ANR	910293	Argument	pbits		908484	0					
ANR	910294	Identifier	pbits		908484	0					
ANR	910295	Argument	cbits + posix_class_maps [ posix_class ]		908484	1					
ANR	910296	AdditiveExpression	cbits + posix_class_maps [ posix_class ]		908484	0		+			
ANR	910297	Identifier	cbits		908484	0					
ANR	910298	ArrayIndexing	posix_class_maps [ posix_class ]		908484	1					
ANR	910299	Identifier	posix_class_maps		908484	0					
ANR	910300	Identifier	posix_class		908484	1					
ANR	910301	Argument	32 * sizeof ( pcre_uint8 )		908484	2					
ANR	910302	MultiplicativeExpression	32 * sizeof ( pcre_uint8 )		908484	0		*			
ANR	910303	PrimaryExpression	32		908484	0					
ANR	910304	SizeofExpression	sizeof ( pcre_uint8 )		908484	1					
ANR	910305	Sizeof	sizeof		908484	0					
ANR	910306	SizeofOperand	pcre_uint8		908484	1					
ANR	910307	ExpressionStatement	taboffset = posix_class_maps [ posix_class + 1 ]	5088:8:161256:161301	908484	14	True				
ANR	910308	AssignmentExpression	taboffset = posix_class_maps [ posix_class + 1 ]		908484	0		=			
ANR	910309	Identifier	taboffset		908484	0					
ANR	910310	ArrayIndexing	posix_class_maps [ posix_class + 1 ]		908484	1					
ANR	910311	Identifier	posix_class_maps		908484	0					
ANR	910312	AdditiveExpression	posix_class + 1		908484	1		+			
ANR	910313	Identifier	posix_class		908484	0					
ANR	910314	PrimaryExpression	1		908484	1					
ANR	910315	ExpressionStatement	tabopt = posix_class_maps [ posix_class + 2 ]	5089:8:161311:161353	908484	15	True				
ANR	910316	AssignmentExpression	tabopt = posix_class_maps [ posix_class + 2 ]		908484	0		=			
ANR	910317	Identifier	tabopt		908484	0					
ANR	910318	ArrayIndexing	posix_class_maps [ posix_class + 2 ]		908484	1					
ANR	910319	Identifier	posix_class_maps		908484	0					
ANR	910320	AdditiveExpression	posix_class + 2		908484	1		+			
ANR	910321	Identifier	posix_class		908484	0					
ANR	910322	PrimaryExpression	2		908484	1					
ANR	910323	IfStatement	if ( taboffset >= 0 )		908484	16					
ANR	910324	Condition	taboffset >= 0	5091:12:161368:161381	908484	0	True				
ANR	910325	RelationalExpression	taboffset >= 0		908484	0		>=			
ANR	910326	Identifier	taboffset		908484	0					
ANR	910327	PrimaryExpression	0		908484	1					
ANR	910328	CompoundStatement		635:10:21518:21518	908484	1					
ANR	910329	IfStatement	if ( tabopt >= 0 )		908484	0					
ANR	910330	Condition	tabopt >= 0	5093:14:161410:161420	908484	0	True				
ANR	910331	RelationalExpression	tabopt >= 0		908484	0		>=			
ANR	910332	Identifier	tabopt		908484	0					
ANR	910333	PrimaryExpression	0		908484	1					
ANR	910334	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	1					
ANR	910335	ForInit	c = 0 ;	5094:17:161440:161445	908484	0	True				
ANR	910336	AssignmentExpression	c = 0		908484	0		=			
ANR	910337	Identifier	c		908484	0					
ANR	910338	PrimaryExpression	0		908484	1					
ANR	910339	Condition	c < 32	5094:24:161447:161452	908484	1	True				
ANR	910340	RelationalExpression	c < 32		908484	0		<			
ANR	910341	Identifier	c		908484	0					
ANR	910342	PrimaryExpression	32		908484	1					
ANR	910343	PostIncDecOperationExpression	c ++	5094:32:161455:161457	908484	2	True				
ANR	910344	Identifier	c		908484	0					
ANR	910345	IncDec	++		908484	1					
ANR	910346	ExpressionStatement	pbits [ c ] |= cbits [ c + taboffset ]	5094:37:161460:161492	908484	3	True				
ANR	910347	AssignmentExpression	pbits [ c ] |= cbits [ c + taboffset ]		908484	0		|=			
ANR	910348	ArrayIndexing	pbits [ c ]		908484	0					
ANR	910349	Identifier	pbits		908484	0					
ANR	910350	Identifier	c		908484	1					
ANR	910351	ArrayIndexing	cbits [ c + taboffset ]		908484	1					
ANR	910352	Identifier	cbits		908484	0					
ANR	910353	AdditiveExpression	c + taboffset		908484	1		+			
ANR	910354	Identifier	c		908484	0					
ANR	910355	Identifier	taboffset		908484	1					
ANR	910356	ElseStatement	else		908484	0					
ANR	910357	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	0					
ANR	910358	ForInit	c = 0 ;	5096:17:161526:161531	908484	0	True				
ANR	910359	AssignmentExpression	c = 0		908484	0		=			
ANR	910360	Identifier	c		908484	0					
ANR	910361	PrimaryExpression	0		908484	1					
ANR	910362	Condition	c < 32	5096:24:161533:161538	908484	1	True				
ANR	910363	RelationalExpression	c < 32		908484	0		<			
ANR	910364	Identifier	c		908484	0					
ANR	910365	PrimaryExpression	32		908484	1					
ANR	910366	PostIncDecOperationExpression	c ++	5096:32:161541:161543	908484	2	True				
ANR	910367	Identifier	c		908484	0					
ANR	910368	IncDec	++		908484	1					
ANR	910369	ExpressionStatement	pbits [ c ] &= ~cbits [ c + taboffset ]	5096:37:161546:161579	908484	3	True				
ANR	910370	AssignmentExpression	pbits [ c ] &= ~cbits [ c + taboffset ]		908484	0		&=			
ANR	910371	ArrayIndexing	pbits [ c ]		908484	0					
ANR	910372	Identifier	pbits		908484	0					
ANR	910373	Identifier	c		908484	1					
ANR	910374	ArrayIndexing	~cbits [ c + taboffset ]		908484	1					
ANR	910375	Identifier	~cbits		908484	0					
ANR	910376	AdditiveExpression	c + taboffset		908484	1		+			
ANR	910377	Identifier	c		908484	0					
ANR	910378	Identifier	taboffset		908484	1					
ANR	910379	IfStatement	if ( tabopt < 0 )		908484	17					
ANR	910380	Condition	tabopt < 0	5102:12:161752:161761	908484	0	True				
ANR	910381	RelationalExpression	tabopt < 0		908484	0		<			
ANR	910382	Identifier	tabopt		908484	0					
ANR	910383	PrimaryExpression	0		908484	1					
ANR	910384	ExpressionStatement	tabopt = - tabopt	5102:24:161764:161780	908484	1	True				
ANR	910385	AssignmentExpression	tabopt = - tabopt		908484	0		=			
ANR	910386	Identifier	tabopt		908484	0					
ANR	910387	UnaryOperationExpression	- tabopt		908484	1					
ANR	910388	UnaryOperator	-		908484	0					
ANR	910389	Identifier	tabopt		908484	1					
ANR	910390	IfStatement	if ( tabopt == 1 )		908484	18					
ANR	910391	Condition	tabopt == 1	5103:12:161794:161804	908484	0	True				
ANR	910392	EqualityExpression	tabopt == 1		908484	0		==			
ANR	910393	Identifier	tabopt		908484	0					
ANR	910394	PrimaryExpression	1		908484	1					
ANR	910395	ExpressionStatement	pbits [ 1 ] &= ~0x3c	5103:25:161807:161824	908484	1	True				
ANR	910396	AssignmentExpression	pbits [ 1 ] &= ~0x3c		908484	0		&=			
ANR	910397	ArrayIndexing	pbits [ 1 ]		908484	0					
ANR	910398	Identifier	pbits		908484	0					
ANR	910399	PrimaryExpression	1		908484	1					
ANR	910400	Identifier	~0x3c		908484	1					
ANR	910401	ElseStatement	else		908484	0					
ANR	910402	IfStatement	if ( tabopt == 2 )		908484	0					
ANR	910403	Condition	tabopt == 2	5104:19:161845:161855	908484	0	True				
ANR	910404	EqualityExpression	tabopt == 2		908484	0		==			
ANR	910405	Identifier	tabopt		908484	0					
ANR	910406	PrimaryExpression	2		908484	1					
ANR	910407	ExpressionStatement	pbits [ 11 ] &= 0x7f	5104:32:161858:161875	908484	1	True				
ANR	910408	AssignmentExpression	pbits [ 11 ] &= 0x7f		908484	0		&=			
ANR	910409	ArrayIndexing	pbits [ 11 ]		908484	0					
ANR	910410	Identifier	pbits		908484	0					
ANR	910411	PrimaryExpression	11		908484	1					
ANR	910412	PrimaryExpression	0x7f		908484	1					
ANR	910413	IfStatement	if ( local_negate )		908484	19					
ANR	910414	Condition	local_negate	5109:12:162008:162019	908484	0	True				
ANR	910415	Identifier	local_negate		908484	0					
ANR	910416	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	1					
ANR	910417	ForInit	c = 0 ;	5110:15:162037:162042	908484	0	True				
ANR	910418	AssignmentExpression	c = 0		908484	0		=			
ANR	910419	Identifier	c		908484	0					
ANR	910420	PrimaryExpression	0		908484	1					
ANR	910421	Condition	c < 32	5110:22:162044:162049	908484	1	True				
ANR	910422	RelationalExpression	c < 32		908484	0		<			
ANR	910423	Identifier	c		908484	0					
ANR	910424	PrimaryExpression	32		908484	1					
ANR	910425	PostIncDecOperationExpression	c ++	5110:30:162052:162054	908484	2	True				
ANR	910426	Identifier	c		908484	0					
ANR	910427	IncDec	++		908484	1					
ANR	910428	ExpressionStatement	classbits [ c ] |= ~pbits [ c ]	5110:35:162057:162082	908484	3	True				
ANR	910429	AssignmentExpression	classbits [ c ] |= ~pbits [ c ]		908484	0		|=			
ANR	910430	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910431	Identifier	classbits		908484	0					
ANR	910432	Identifier	c		908484	1					
ANR	910433	ArrayIndexing	~pbits [ c ]		908484	1					
ANR	910434	Identifier	~pbits		908484	0					
ANR	910435	Identifier	c		908484	1					
ANR	910436	ElseStatement	else		908484	0					
ANR	910437	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	0					
ANR	910438	ForInit	c = 0 ;	5112:15:162112:162117	908484	0	True				
ANR	910439	AssignmentExpression	c = 0		908484	0		=			
ANR	910440	Identifier	c		908484	0					
ANR	910441	PrimaryExpression	0		908484	1					
ANR	910442	Condition	c < 32	5112:22:162119:162124	908484	1	True				
ANR	910443	RelationalExpression	c < 32		908484	0		<			
ANR	910444	Identifier	c		908484	0					
ANR	910445	PrimaryExpression	32		908484	1					
ANR	910446	PostIncDecOperationExpression	c ++	5112:30:162127:162129	908484	2	True				
ANR	910447	Identifier	c		908484	0					
ANR	910448	IncDec	++		908484	1					
ANR	910449	ExpressionStatement	classbits [ c ] |= pbits [ c ]	5112:35:162132:162156	908484	3	True				
ANR	910450	AssignmentExpression	classbits [ c ] |= pbits [ c ]		908484	0		|=			
ANR	910451	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910452	Identifier	classbits		908484	0					
ANR	910453	Identifier	c		908484	1					
ANR	910454	ArrayIndexing	pbits [ c ]		908484	1					
ANR	910455	Identifier	pbits		908484	0					
ANR	910456	Identifier	c		908484	1					
ANR	910457	ExpressionStatement	ptr = tempptr + 1	5114:8:162167:162184	908484	20	True				
ANR	910458	AssignmentExpression	ptr = tempptr + 1		908484	0		=			
ANR	910459	Identifier	ptr		908484	0					
ANR	910460	AdditiveExpression	tempptr + 1		908484	1		+			
ANR	910461	Identifier	tempptr		908484	0					
ANR	910462	PrimaryExpression	1		908484	1					
ANR	910463	ExpressionStatement	class_has_8bitchar = 1	5116:8:162259:162281	908484	21	True				
ANR	910464	AssignmentExpression	class_has_8bitchar = 1		908484	0		=			
ANR	910465	Identifier	class_has_8bitchar		908484	0					
ANR	910466	PrimaryExpression	1		908484	1					
ANR	910467	ExpressionStatement	class_one_char = 2	5118:8:162351:162369	908484	22	True				
ANR	910468	AssignmentExpression	class_one_char = 2		908484	0		=			
ANR	910469	Identifier	class_one_char		908484	0					
ANR	910470	PrimaryExpression	2		908484	1					
ANR	910471	ContinueStatement	continue ;	5119:8:162379:162387	908484	23	True				
ANR	910472	IfStatement	if ( c == CHAR_BACKSLASH )		908484	6					
ANR	910473	Condition	c == CHAR_BACKSLASH	5131:10:162984:163002	908484	0	True				
ANR	910474	EqualityExpression	c == CHAR_BACKSLASH		908484	0		==			
ANR	910475	Identifier	c		908484	0					
ANR	910476	Identifier	CHAR_BACKSLASH		908484	1					
ANR	910477	CompoundStatement		675:8:23137:23137	908484	1					
ANR	910478	ExpressionStatement	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"	5133:8:163023:163108	908484	0	True				
ANR	910479	AssignmentExpression	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"		908484	0		=			
ANR	910480	Identifier	escape		908484	0					
ANR	910481	CallExpression	"check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"		908484	1					
ANR	910482	Callee	check_escape		908484	0					
ANR	910483	Identifier	check_escape		908484	0					
ANR	910484	ArgumentList	& ptr		908484	1					
ANR	910485	Argument	& ptr		908484	0					
ANR	910486	UnaryOperationExpression	& ptr		908484	0					
ANR	910487	UnaryOperator	&		908484	0					
ANR	910488	Identifier	ptr		908484	1					
ANR	910489	Argument	& ec		908484	1					
ANR	910490	UnaryOperationExpression	& ec		908484	0					
ANR	910491	UnaryOperator	&		908484	0					
ANR	910492	Identifier	ec		908484	1					
ANR	910493	Argument	errorcodeptr		908484	2					
ANR	910494	Identifier	errorcodeptr		908484	0					
ANR	910495	Argument	cd -> bracount		908484	3					
ANR	910496	PtrMemberAccess	cd -> bracount		908484	0					
ANR	910497	Identifier	cd		908484	0					
ANR	910498	Identifier	bracount		908484	1					
ANR	910499	Argument	options		908484	4					
ANR	910500	Identifier	options		908484	0					
ANR	910501	Argument	TRUE		908484	5					
ANR	910502	Identifier	TRUE		908484	0					
ANR	910503	IfStatement	if ( * errorcodeptr != 0 )		908484	1					
ANR	910504	Condition	* errorcodeptr != 0	5135:12:163122:163139	908484	0	True				
ANR	910505	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	910506	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	910507	UnaryOperator	*		908484	0					
ANR	910508	Identifier	errorcodeptr		908484	1					
ANR	910509	PrimaryExpression	0		908484	1					
ANR	910510	GotoStatement	goto FAILED ;	5135:32:163142:163153	908484	1	True				
ANR	910511	Identifier	FAILED		908484	0					
ANR	910512	IfStatement	if ( escape == 0 )		908484	2					
ANR	910513	Condition	escape == 0	5136:12:163167:163177	908484	0	True				
ANR	910514	EqualityExpression	escape == 0		908484	0		==			
ANR	910515	Identifier	escape		908484	0					
ANR	910516	PrimaryExpression	0		908484	1					
ANR	910517	ExpressionStatement	c = ec	5136:25:163180:163186	908484	1	True				
ANR	910518	AssignmentExpression	c = ec		908484	0		=			
ANR	910519	Identifier	c		908484	0					
ANR	910520	Identifier	ec		908484	1					
ANR	910521	ElseStatement	else		908484	0					
ANR	910522	IfStatement	if ( escape == ESC_b )		908484	0					
ANR	910523	Condition	escape == ESC_b	5137:17:163205:163219	908484	0	True				
ANR	910524	EqualityExpression	escape == ESC_b		908484	0		==			
ANR	910525	Identifier	escape		908484	0					
ANR	910526	Identifier	ESC_b		908484	1					
ANR	910527	ExpressionStatement	c = CHAR_BS	5137:34:163222:163233	908484	1	True				
ANR	910528	AssignmentExpression	c = CHAR_BS		908484	0		=			
ANR	910529	Identifier	c		908484	0					
ANR	910530	Identifier	CHAR_BS		908484	1					
ANR	910531	ElseStatement	else		908484	0					
ANR	910532	IfStatement	if ( escape == ESC_N )		908484	0					
ANR	910533	Condition	escape == ESC_N	5138:17:163285:163299	908484	0	True				
ANR	910534	EqualityExpression	escape == ESC_N		908484	0		==			
ANR	910535	Identifier	escape		908484	0					
ANR	910536	Identifier	ESC_N		908484	1					
ANR	910537	CompoundStatement		682:10:23482:23482	908484	1					
ANR	910538	ExpressionStatement	* errorcodeptr = ERR71	5140:10:163370:163391	908484	0	True				
ANR	910539	AssignmentExpression	* errorcodeptr = ERR71		908484	0		=			
ANR	910540	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	910541	UnaryOperator	*		908484	0					
ANR	910542	Identifier	errorcodeptr		908484	1					
ANR	910543	Identifier	ERR71		908484	1					
ANR	910544	GotoStatement	goto FAILED ;	5141:10:163403:163414	908484	1	True				
ANR	910545	Identifier	FAILED		908484	0					
ANR	910546	ElseStatement	else		908484	0					
ANR	910547	IfStatement	if ( escape == ESC_Q )		908484	0					
ANR	910548	Condition	escape == ESC_Q	5143:17:163445:163459	908484	0	True				
ANR	910549	EqualityExpression	escape == ESC_Q		908484	0		==			
ANR	910550	Identifier	escape		908484	0					
ANR	910551	Identifier	ESC_Q		908484	1					
ANR	910552	CompoundStatement		687:10:23643:23643	908484	1					
ANR	910553	IfStatement	if ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		908484	0					
ANR	910554	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	5145:14:163535:163578	908484	0	True				
ANR	910555	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		908484	0		&&			
ANR	910556	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		908484	0		==			
ANR	910557	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	910558	Identifier	ptr		908484	0					
ANR	910559	PrimaryExpression	1		908484	1					
ANR	910560	Identifier	CHAR_BACKSLASH		908484	1					
ANR	910561	EqualityExpression	ptr [ 2 ] == CHAR_E		908484	1		==			
ANR	910562	ArrayIndexing	ptr [ 2 ]		908484	0					
ANR	910563	Identifier	ptr		908484	0					
ANR	910564	PrimaryExpression	2		908484	1					
ANR	910565	Identifier	CHAR_E		908484	1					
ANR	910566	CompoundStatement		689:12:23717:23717	908484	1					
ANR	910567	ExpressionStatement	ptr += 2	5147:12:163607:163615	908484	0	True				
ANR	910568	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	910569	Identifier	ptr		908484	0					
ANR	910570	PrimaryExpression	2		908484	1					
ANR	910571	ElseStatement	else		908484	0					
ANR	910572	ExpressionStatement	inescq = TRUE	5149:15:163671:163684	908484	0	True				
ANR	910573	AssignmentExpression	inescq = TRUE		908484	0		=			
ANR	910574	Identifier	inescq		908484	0					
ANR	910575	Identifier	TRUE		908484	1					
ANR	910576	ContinueStatement	continue ;	5150:10:163696:163704	908484	1	True				
ANR	910577	ElseStatement	else		908484	0					
ANR	910578	IfStatement	if ( escape == ESC_E )		908484	0					
ANR	910579	Condition	escape == ESC_E	5152:17:163735:163749	908484	0	True				
ANR	910580	EqualityExpression	escape == ESC_E		908484	0		==			
ANR	910581	Identifier	escape		908484	0					
ANR	910582	Identifier	ESC_E		908484	1					
ANR	910583	ContinueStatement	continue ;	5152:34:163752:163760	908484	1	True				
ANR	910584	ElseStatement	else		908484	0					
ANR	910585	CompoundStatement		699:19:23955:23990	908484	0					
ANR	910586	Statement	register	5156:10:163822:163829	908484	0	True				
ANR	910587	IdentifierDeclStatement	const pcre_uint8 * cbits = cd -> cbits ;	5156:19:163831:163866	908484	1	True				
ANR	910588	IdentifierDecl	* cbits = cd -> cbits		908484	0					
ANR	910589	IdentifierDeclType	const pcre_uint8 *		908484	0					
ANR	910590	Identifier	cbits		908484	1					
ANR	910591	AssignmentExpression	* cbits = cd -> cbits		908484	2		=			
ANR	910592	Identifier	cbits		908484	0					
ANR	910593	PtrMemberAccess	cd -> cbits		908484	1					
ANR	910594	Identifier	cd		908484	0					
ANR	910595	Identifier	cbits		908484	1					
ANR	910596	ExpressionStatement	class_has_8bitchar ++	5158:10:163946:163966	908484	2	True				
ANR	910597	PostIncDecOperationExpression	class_has_8bitchar ++		908484	0					
ANR	910598	Identifier	class_has_8bitchar		908484	0					
ANR	910599	IncDec	++		908484	1					
ANR	910600	ExpressionStatement	class_one_char += 2	5160:10:164040:164059	908484	3	True				
ANR	910601	AssignmentExpression	class_one_char += 2		908484	0		+=			
ANR	910602	Identifier	class_one_char		908484	0					
ANR	910603	PrimaryExpression	2		908484	1					
ANR	910604	SwitchStatement	switch ( escape )		908484	4					
ANR	910605	Condition	escape	5162:18:164080:164085	908484	0	True				
ANR	910606	Identifier	escape		908484	0					
ANR	910607	CompoundStatement		706:12:24224:24224	908484	1					
ANR	910608	Label	case ESC_du :	5165:12:164133:164144	908484	0	True				
ANR	910609	Identifier	ESC_du		908484	0					
ANR	910610	Label	case ESC_DU :	5166:12:164206:164217	908484	1	True				
ANR	910611	Identifier	ESC_DU		908484	0					
ANR	910612	Label	case ESC_wu :	5167:12:164278:164289	908484	2	True				
ANR	910613	Identifier	ESC_wu		908484	0					
ANR	910614	Label	case ESC_WU :	5168:12:164352:164363	908484	3	True				
ANR	910615	Identifier	ESC_WU		908484	0					
ANR	910616	Label	case ESC_su :	5169:12:164428:164439	908484	4	True				
ANR	910617	Identifier	ESC_su		908484	0					
ANR	910618	Label	case ESC_SU :	5170:12:164493:164504	908484	5	True				
ANR	910619	Identifier	ESC_SU		908484	0					
ANR	910620	ExpressionStatement	nestptr = ptr	5171:12:164518:164531	908484	6	True				
ANR	910621	AssignmentExpression	nestptr = ptr		908484	0		=			
ANR	910622	Identifier	nestptr		908484	0					
ANR	910623	Identifier	ptr		908484	1					
ANR	910624	ExpressionStatement	ptr = substitutes [ escape - ESC_DU ] - 1	5172:12:164545:164583	908484	7	True				
ANR	910625	AssignmentExpression	ptr = substitutes [ escape - ESC_DU ] - 1		908484	0		=			
ANR	910626	Identifier	ptr		908484	0					
ANR	910627	AdditiveExpression	substitutes [ escape - ESC_DU ] - 1		908484	1		-			
ANR	910628	ArrayIndexing	substitutes [ escape - ESC_DU ]		908484	0					
ANR	910629	Identifier	substitutes		908484	0					
ANR	910630	AdditiveExpression	escape - ESC_DU		908484	1		-			
ANR	910631	Identifier	escape		908484	0					
ANR	910632	Identifier	ESC_DU		908484	1					
ANR	910633	PrimaryExpression	1		908484	1					
ANR	910634	ExpressionStatement	class_has_8bitchar --	5173:12:164627:164647	908484	8	True				
ANR	910635	PostIncDecOperationExpression	class_has_8bitchar --		908484	0					
ANR	910636	Identifier	class_has_8bitchar		908484	0					
ANR	910637	IncDec	--		908484	1					
ANR	910638	ContinueStatement	continue ;	5174:12:164688:164696	908484	9	True				
ANR	910639	Label	case ESC_d :	5176:12:164717:164727	908484	10	True				
ANR	910640	Identifier	ESC_d		908484	0					
ANR	910641	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	11					
ANR	910642	ForInit	c = 0 ;	5177:17:164746:164751	908484	0	True				
ANR	910643	AssignmentExpression	c = 0		908484	0		=			
ANR	910644	Identifier	c		908484	0					
ANR	910645	PrimaryExpression	0		908484	1					
ANR	910646	Condition	c < 32	5177:24:164753:164758	908484	1	True				
ANR	910647	RelationalExpression	c < 32		908484	0		<			
ANR	910648	Identifier	c		908484	0					
ANR	910649	PrimaryExpression	32		908484	1					
ANR	910650	PostIncDecOperationExpression	c ++	5177:32:164761:164763	908484	2	True				
ANR	910651	Identifier	c		908484	0					
ANR	910652	IncDec	++		908484	1					
ANR	910653	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_digit ]	5177:37:164766:164801	908484	3	True				
ANR	910654	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_digit ]		908484	0		|=			
ANR	910655	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910656	Identifier	classbits		908484	0					
ANR	910657	Identifier	c		908484	1					
ANR	910658	ArrayIndexing	cbits [ c + cbit_digit ]		908484	1					
ANR	910659	Identifier	cbits		908484	0					
ANR	910660	AdditiveExpression	c + cbit_digit		908484	1		+			
ANR	910661	Identifier	c		908484	0					
ANR	910662	Identifier	cbit_digit		908484	1					
ANR	910663	ContinueStatement	continue ;	5178:12:164815:164823	908484	12	True				
ANR	910664	Label	case ESC_D :	5180:12:164838:164848	908484	13	True				
ANR	910665	Identifier	ESC_D		908484	0					
ANR	910666	ExpressionStatement	should_flip_negation = TRUE	5181:12:164862:164889	908484	14	True				
ANR	910667	AssignmentExpression	should_flip_negation = TRUE		908484	0		=			
ANR	910668	Identifier	should_flip_negation		908484	0					
ANR	910669	Identifier	TRUE		908484	1					
ANR	910670	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	15					
ANR	910671	ForInit	c = 0 ;	5182:17:164908:164913	908484	0	True				
ANR	910672	AssignmentExpression	c = 0		908484	0		=			
ANR	910673	Identifier	c		908484	0					
ANR	910674	PrimaryExpression	0		908484	1					
ANR	910675	Condition	c < 32	5182:24:164915:164920	908484	1	True				
ANR	910676	RelationalExpression	c < 32		908484	0		<			
ANR	910677	Identifier	c		908484	0					
ANR	910678	PrimaryExpression	32		908484	1					
ANR	910679	PostIncDecOperationExpression	c ++	5182:32:164923:164925	908484	2	True				
ANR	910680	Identifier	c		908484	0					
ANR	910681	IncDec	++		908484	1					
ANR	910682	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_digit ]	5182:37:164928:164964	908484	3	True				
ANR	910683	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_digit ]		908484	0		|=			
ANR	910684	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910685	Identifier	classbits		908484	0					
ANR	910686	Identifier	c		908484	1					
ANR	910687	ArrayIndexing	~cbits [ c + cbit_digit ]		908484	1					
ANR	910688	Identifier	~cbits		908484	0					
ANR	910689	AdditiveExpression	c + cbit_digit		908484	1		+			
ANR	910690	Identifier	c		908484	0					
ANR	910691	Identifier	cbit_digit		908484	1					
ANR	910692	ContinueStatement	continue ;	5183:12:164978:164986	908484	16	True				
ANR	910693	Label	case ESC_w :	5185:12:165001:165011	908484	17	True				
ANR	910694	Identifier	ESC_w		908484	0					
ANR	910695	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	18					
ANR	910696	ForInit	c = 0 ;	5186:17:165030:165035	908484	0	True				
ANR	910697	AssignmentExpression	c = 0		908484	0		=			
ANR	910698	Identifier	c		908484	0					
ANR	910699	PrimaryExpression	0		908484	1					
ANR	910700	Condition	c < 32	5186:24:165037:165042	908484	1	True				
ANR	910701	RelationalExpression	c < 32		908484	0		<			
ANR	910702	Identifier	c		908484	0					
ANR	910703	PrimaryExpression	32		908484	1					
ANR	910704	PostIncDecOperationExpression	c ++	5186:32:165045:165047	908484	2	True				
ANR	910705	Identifier	c		908484	0					
ANR	910706	IncDec	++		908484	1					
ANR	910707	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_word ]	5186:37:165050:165084	908484	3	True				
ANR	910708	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_word ]		908484	0		|=			
ANR	910709	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910710	Identifier	classbits		908484	0					
ANR	910711	Identifier	c		908484	1					
ANR	910712	ArrayIndexing	cbits [ c + cbit_word ]		908484	1					
ANR	910713	Identifier	cbits		908484	0					
ANR	910714	AdditiveExpression	c + cbit_word		908484	1		+			
ANR	910715	Identifier	c		908484	0					
ANR	910716	Identifier	cbit_word		908484	1					
ANR	910717	ContinueStatement	continue ;	5187:12:165098:165106	908484	19	True				
ANR	910718	Label	case ESC_W :	5189:12:165121:165131	908484	20	True				
ANR	910719	Identifier	ESC_W		908484	0					
ANR	910720	ExpressionStatement	should_flip_negation = TRUE	5190:12:165145:165172	908484	21	True				
ANR	910721	AssignmentExpression	should_flip_negation = TRUE		908484	0		=			
ANR	910722	Identifier	should_flip_negation		908484	0					
ANR	910723	Identifier	TRUE		908484	1					
ANR	910724	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	22					
ANR	910725	ForInit	c = 0 ;	5191:17:165191:165196	908484	0	True				
ANR	910726	AssignmentExpression	c = 0		908484	0		=			
ANR	910727	Identifier	c		908484	0					
ANR	910728	PrimaryExpression	0		908484	1					
ANR	910729	Condition	c < 32	5191:24:165198:165203	908484	1	True				
ANR	910730	RelationalExpression	c < 32		908484	0		<			
ANR	910731	Identifier	c		908484	0					
ANR	910732	PrimaryExpression	32		908484	1					
ANR	910733	PostIncDecOperationExpression	c ++	5191:32:165206:165208	908484	2	True				
ANR	910734	Identifier	c		908484	0					
ANR	910735	IncDec	++		908484	1					
ANR	910736	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_word ]	5191:37:165211:165246	908484	3	True				
ANR	910737	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_word ]		908484	0		|=			
ANR	910738	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910739	Identifier	classbits		908484	0					
ANR	910740	Identifier	c		908484	1					
ANR	910741	ArrayIndexing	~cbits [ c + cbit_word ]		908484	1					
ANR	910742	Identifier	~cbits		908484	0					
ANR	910743	AdditiveExpression	c + cbit_word		908484	1		+			
ANR	910744	Identifier	c		908484	0					
ANR	910745	Identifier	cbit_word		908484	1					
ANR	910746	ContinueStatement	continue ;	5192:12:165260:165268	908484	23	True				
ANR	910747	Label	case ESC_s :	5201:12:165713:165723	908484	24	True				
ANR	910748	Identifier	ESC_s		908484	0					
ANR	910749	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	25					
ANR	910750	ForInit	c = 0 ;	5202:17:165742:165747	908484	0	True				
ANR	910751	AssignmentExpression	c = 0		908484	0		=			
ANR	910752	Identifier	c		908484	0					
ANR	910753	PrimaryExpression	0		908484	1					
ANR	910754	Condition	c < 32	5202:24:165749:165754	908484	1	True				
ANR	910755	RelationalExpression	c < 32		908484	0		<			
ANR	910756	Identifier	c		908484	0					
ANR	910757	PrimaryExpression	32		908484	1					
ANR	910758	PostIncDecOperationExpression	c ++	5202:32:165757:165759	908484	2	True				
ANR	910759	Identifier	c		908484	0					
ANR	910760	IncDec	++		908484	1					
ANR	910761	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_space ]	5202:37:165762:165797	908484	3	True				
ANR	910762	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_space ]		908484	0		|=			
ANR	910763	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910764	Identifier	classbits		908484	0					
ANR	910765	Identifier	c		908484	1					
ANR	910766	ArrayIndexing	cbits [ c + cbit_space ]		908484	1					
ANR	910767	Identifier	cbits		908484	0					
ANR	910768	AdditiveExpression	c + cbit_space		908484	1		+			
ANR	910769	Identifier	c		908484	0					
ANR	910770	Identifier	cbit_space		908484	1					
ANR	910771	ContinueStatement	continue ;	5203:12:165811:165819	908484	26	True				
ANR	910772	Label	case ESC_S :	5205:12:165834:165844	908484	27	True				
ANR	910773	Identifier	ESC_S		908484	0					
ANR	910774	ExpressionStatement	should_flip_negation = TRUE	5206:12:165858:165885	908484	28	True				
ANR	910775	AssignmentExpression	should_flip_negation = TRUE		908484	0		=			
ANR	910776	Identifier	should_flip_negation		908484	0					
ANR	910777	Identifier	TRUE		908484	1					
ANR	910778	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	29					
ANR	910779	ForInit	c = 0 ;	5207:17:165904:165909	908484	0	True				
ANR	910780	AssignmentExpression	c = 0		908484	0		=			
ANR	910781	Identifier	c		908484	0					
ANR	910782	PrimaryExpression	0		908484	1					
ANR	910783	Condition	c < 32	5207:24:165911:165916	908484	1	True				
ANR	910784	RelationalExpression	c < 32		908484	0		<			
ANR	910785	Identifier	c		908484	0					
ANR	910786	PrimaryExpression	32		908484	1					
ANR	910787	PostIncDecOperationExpression	c ++	5207:32:165919:165921	908484	2	True				
ANR	910788	Identifier	c		908484	0					
ANR	910789	IncDec	++		908484	1					
ANR	910790	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_space ]	5207:37:165924:165960	908484	3	True				
ANR	910791	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_space ]		908484	0		|=			
ANR	910792	ArrayIndexing	classbits [ c ]		908484	0					
ANR	910793	Identifier	classbits		908484	0					
ANR	910794	Identifier	c		908484	1					
ANR	910795	ArrayIndexing	~cbits [ c + cbit_space ]		908484	1					
ANR	910796	Identifier	~cbits		908484	0					
ANR	910797	AdditiveExpression	c + cbit_space		908484	1		+			
ANR	910798	Identifier	c		908484	0					
ANR	910799	Identifier	cbit_space		908484	1					
ANR	910800	ContinueStatement	continue ;	5208:12:165974:165982	908484	30	True				
ANR	910801	Label	case ESC_h :	5212:12:166062:166072	908484	31	True				
ANR	910802	Identifier	ESC_h		908484	0					
ANR	910803	ExpressionStatement	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"	5213:12:166086:166194	908484	32	True				
ANR	910804	CastExpression	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"		908484	0					
ANR	910805	CastTarget	void		908484	0					
ANR	910806	CallExpression	"add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"		908484	1					
ANR	910807	Callee	add_list_to_class		908484	0					
ANR	910808	Identifier	add_list_to_class		908484	0					
ANR	910809	ArgumentList	classbits		908484	1					
ANR	910810	Argument	classbits		908484	0					
ANR	910811	Identifier	classbits		908484	0					
ANR	910812	Argument	& class_uchardata		908484	1					
ANR	910813	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	910814	UnaryOperator	&		908484	0					
ANR	910815	Identifier	class_uchardata		908484	1					
ANR	910816	Argument	options		908484	2					
ANR	910817	Identifier	options		908484	0					
ANR	910818	Argument	cd		908484	3					
ANR	910819	Identifier	cd		908484	0					
ANR	910820	Argument	PRIV ( hspace_list )		908484	4					
ANR	910821	CallExpression	PRIV ( hspace_list )		908484	0					
ANR	910822	Callee	PRIV		908484	0					
ANR	910823	Identifier	PRIV		908484	0					
ANR	910824	ArgumentList	hspace_list		908484	1					
ANR	910825	Argument	hspace_list		908484	0					
ANR	910826	Identifier	hspace_list		908484	0					
ANR	910827	Argument	NOTACHAR		908484	5					
ANR	910828	Identifier	NOTACHAR		908484	0					
ANR	910829	ContinueStatement	continue ;	5215:12:166208:166216	908484	33	True				
ANR	910830	Label	case ESC_H :	5217:12:166231:166241	908484	34	True				
ANR	910831	Identifier	ESC_H		908484	0					
ANR	910832	ExpressionStatement	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"	5218:12:166255:166357	908484	35	True				
ANR	910833	CastExpression	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"		908484	0					
ANR	910834	CastTarget	void		908484	0					
ANR	910835	CallExpression	"add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"		908484	1					
ANR	910836	Callee	add_not_list_to_class		908484	0					
ANR	910837	Identifier	add_not_list_to_class		908484	0					
ANR	910838	ArgumentList	classbits		908484	1					
ANR	910839	Argument	classbits		908484	0					
ANR	910840	Identifier	classbits		908484	0					
ANR	910841	Argument	& class_uchardata		908484	1					
ANR	910842	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	910843	UnaryOperator	&		908484	0					
ANR	910844	Identifier	class_uchardata		908484	1					
ANR	910845	Argument	options		908484	2					
ANR	910846	Identifier	options		908484	0					
ANR	910847	Argument	cd		908484	3					
ANR	910848	Identifier	cd		908484	0					
ANR	910849	Argument	PRIV ( hspace_list )		908484	4					
ANR	910850	CallExpression	PRIV ( hspace_list )		908484	0					
ANR	910851	Callee	PRIV		908484	0					
ANR	910852	Identifier	PRIV		908484	0					
ANR	910853	ArgumentList	hspace_list		908484	1					
ANR	910854	Argument	hspace_list		908484	0					
ANR	910855	Identifier	hspace_list		908484	0					
ANR	910856	ContinueStatement	continue ;	5220:12:166371:166379	908484	36	True				
ANR	910857	Label	case ESC_v :	5222:12:166394:166404	908484	37	True				
ANR	910858	Identifier	ESC_v		908484	0					
ANR	910859	ExpressionStatement	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"	5223:12:166418:166526	908484	38	True				
ANR	910860	CastExpression	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"		908484	0					
ANR	910861	CastTarget	void		908484	0					
ANR	910862	CallExpression	"add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"		908484	1					
ANR	910863	Callee	add_list_to_class		908484	0					
ANR	910864	Identifier	add_list_to_class		908484	0					
ANR	910865	ArgumentList	classbits		908484	1					
ANR	910866	Argument	classbits		908484	0					
ANR	910867	Identifier	classbits		908484	0					
ANR	910868	Argument	& class_uchardata		908484	1					
ANR	910869	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	910870	UnaryOperator	&		908484	0					
ANR	910871	Identifier	class_uchardata		908484	1					
ANR	910872	Argument	options		908484	2					
ANR	910873	Identifier	options		908484	0					
ANR	910874	Argument	cd		908484	3					
ANR	910875	Identifier	cd		908484	0					
ANR	910876	Argument	PRIV ( vspace_list )		908484	4					
ANR	910877	CallExpression	PRIV ( vspace_list )		908484	0					
ANR	910878	Callee	PRIV		908484	0					
ANR	910879	Identifier	PRIV		908484	0					
ANR	910880	ArgumentList	vspace_list		908484	1					
ANR	910881	Argument	vspace_list		908484	0					
ANR	910882	Identifier	vspace_list		908484	0					
ANR	910883	Argument	NOTACHAR		908484	5					
ANR	910884	Identifier	NOTACHAR		908484	0					
ANR	910885	ContinueStatement	continue ;	5225:12:166540:166548	908484	39	True				
ANR	910886	Label	case ESC_V :	5227:12:166563:166573	908484	40	True				
ANR	910887	Identifier	ESC_V		908484	0					
ANR	910888	ExpressionStatement	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"	5228:12:166587:166689	908484	41	True				
ANR	910889	CastExpression	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"		908484	0					
ANR	910890	CastTarget	void		908484	0					
ANR	910891	CallExpression	"add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"		908484	1					
ANR	910892	Callee	add_not_list_to_class		908484	0					
ANR	910893	Identifier	add_not_list_to_class		908484	0					
ANR	910894	ArgumentList	classbits		908484	1					
ANR	910895	Argument	classbits		908484	0					
ANR	910896	Identifier	classbits		908484	0					
ANR	910897	Argument	& class_uchardata		908484	1					
ANR	910898	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	910899	UnaryOperator	&		908484	0					
ANR	910900	Identifier	class_uchardata		908484	1					
ANR	910901	Argument	options		908484	2					
ANR	910902	Identifier	options		908484	0					
ANR	910903	Argument	cd		908484	3					
ANR	910904	Identifier	cd		908484	0					
ANR	910905	Argument	PRIV ( vspace_list )		908484	4					
ANR	910906	CallExpression	PRIV ( vspace_list )		908484	0					
ANR	910907	Callee	PRIV		908484	0					
ANR	910908	Identifier	PRIV		908484	0					
ANR	910909	ArgumentList	vspace_list		908484	1					
ANR	910910	Argument	vspace_list		908484	0					
ANR	910911	Identifier	vspace_list		908484	0					
ANR	910912	ContinueStatement	continue ;	5230:12:166703:166711	908484	42	True				
ANR	910913	Label	case ESC_p :	5232:12:166726:166736	908484	43	True				
ANR	910914	Identifier	ESC_p		908484	0					
ANR	910915	Label	case ESC_P :	5233:12:166750:166760	908484	44	True				
ANR	910916	Identifier	ESC_P		908484	0					
ANR	910917	CompoundStatement		780:14:26963:26996	908484	45					
ANR	910918	IdentifierDeclStatement	BOOL negated ;	5236:14:166811:166823	908484	0	True				
ANR	910919	IdentifierDecl	negated		908484	0					
ANR	910920	IdentifierDeclType	BOOL		908484	0					
ANR	910921	Identifier	negated		908484	1					
ANR	910922	IdentifierDeclStatement	"unsigned int ptype = 0 , pdata = 0 ;"	5237:14:166839:166872	908484	1	True				
ANR	910923	IdentifierDecl	ptype = 0		908484	0					
ANR	910924	IdentifierDeclType	unsigned int		908484	0					
ANR	910925	Identifier	ptype		908484	1					
ANR	910926	AssignmentExpression	ptype = 0		908484	2		=			
ANR	910927	Identifier	ptype		908484	0					
ANR	910928	PrimaryExpression	0		908484	1					
ANR	910929	IdentifierDecl	pdata = 0		908484	1					
ANR	910930	IdentifierDeclType	unsigned int		908484	0					
ANR	910931	Identifier	pdata		908484	1					
ANR	910932	AssignmentExpression	pdata = 0		908484	2		=			
ANR	910933	Identifier	pdata		908484	0					
ANR	910934	PrimaryExpression	0		908484	1					
ANR	910935	IfStatement	"if ( ! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr ) )"		908484	2					
ANR	910936	Condition	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"	5238:18:166892:166945	908484	0	True				
ANR	910937	UnaryOperationExpression	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		908484	0					
ANR	910938	UnaryOperator	!		908484	0					
ANR	910939	CallExpression	"get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		908484	1					
ANR	910940	Callee	get_ucp		908484	0					
ANR	910941	Identifier	get_ucp		908484	0					
ANR	910942	ArgumentList	& ptr		908484	1					
ANR	910943	Argument	& ptr		908484	0					
ANR	910944	UnaryOperationExpression	& ptr		908484	0					
ANR	910945	UnaryOperator	&		908484	0					
ANR	910946	Identifier	ptr		908484	1					
ANR	910947	Argument	& negated		908484	1					
ANR	910948	UnaryOperationExpression	& negated		908484	0					
ANR	910949	UnaryOperator	&		908484	0					
ANR	910950	Identifier	negated		908484	1					
ANR	910951	Argument	& ptype		908484	2					
ANR	910952	UnaryOperationExpression	& ptype		908484	0					
ANR	910953	UnaryOperator	&		908484	0					
ANR	910954	Identifier	ptype		908484	1					
ANR	910955	Argument	& pdata		908484	3					
ANR	910956	UnaryOperationExpression	& pdata		908484	0					
ANR	910957	UnaryOperator	&		908484	0					
ANR	910958	Identifier	pdata		908484	1					
ANR	910959	Argument	errorcodeptr		908484	4					
ANR	910960	Identifier	errorcodeptr		908484	0					
ANR	910961	GotoStatement	goto FAILED ;	5239:16:166964:166975	908484	1	True				
ANR	910962	Identifier	FAILED		908484	0					
ANR	910963	ExpressionStatement	* class_uchardata ++ = ( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP	5240:14:166991:167082	908484	3	True				
ANR	910964	AssignmentExpression	* class_uchardata ++ = ( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP		908484	0		=			
ANR	910965	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910966	UnaryOperator	*		908484	0					
ANR	910967	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910968	Identifier	class_uchardata		908484	0					
ANR	910969	IncDec	++		908484	1					
ANR	910970	ConditionalExpression	( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP		908484	1					
ANR	910971	Condition	( escape == ESC_p ) != negated		908484	0					
ANR	910972	EqualityExpression	( escape == ESC_p ) != negated		908484	0		!=			
ANR	910973	EqualityExpression	escape == ESC_p		908484	0		==			
ANR	910974	Identifier	escape		908484	0					
ANR	910975	Identifier	ESC_p		908484	1					
ANR	910976	Identifier	negated		908484	1					
ANR	910977	Identifier	XCL_PROP		908484	1					
ANR	910978	Identifier	XCL_NOTPROP		908484	2					
ANR	910979	ExpressionStatement	* class_uchardata ++ = ptype	5242:14:167098:167124	908484	4	True				
ANR	910980	AssignmentExpression	* class_uchardata ++ = ptype		908484	0		=			
ANR	910981	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910982	UnaryOperator	*		908484	0					
ANR	910983	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910984	Identifier	class_uchardata		908484	0					
ANR	910985	IncDec	++		908484	1					
ANR	910986	Identifier	ptype		908484	1					
ANR	910987	ExpressionStatement	* class_uchardata ++ = pdata	5243:14:167140:167166	908484	5	True				
ANR	910988	AssignmentExpression	* class_uchardata ++ = pdata		908484	0		=			
ANR	910989	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	910990	UnaryOperator	*		908484	0					
ANR	910991	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	910992	Identifier	class_uchardata		908484	0					
ANR	910993	IncDec	++		908484	1					
ANR	910994	Identifier	pdata		908484	1					
ANR	910995	ExpressionStatement	xclass_has_prop = TRUE	5244:14:167182:167204	908484	6	True				
ANR	910996	AssignmentExpression	xclass_has_prop = TRUE		908484	0		=			
ANR	910997	Identifier	xclass_has_prop		908484	0					
ANR	910998	Identifier	TRUE		908484	1					
ANR	910999	ExpressionStatement	class_has_8bitchar --	5245:14:167220:167240	908484	7	True				
ANR	911000	PostIncDecOperationExpression	class_has_8bitchar --		908484	0					
ANR	911001	Identifier	class_has_8bitchar		908484	0					
ANR	911002	IncDec	--		908484	1					
ANR	911003	ContinueStatement	continue ;	5246:14:167283:167291	908484	8	True				
ANR	911004	Label	default :	5256:12:167580:167587	908484	46	True				
ANR	911005	Identifier	default		908484	0					
ANR	911006	IfStatement	if ( ( options & PCRE_EXTRA ) != 0 )		908484	47					
ANR	911007	Condition	( options & PCRE_EXTRA ) != 0	5257:16:167605:167631	908484	0	True				
ANR	911008	EqualityExpression	( options & PCRE_EXTRA ) != 0		908484	0		!=			
ANR	911009	BitAndExpression	options & PCRE_EXTRA		908484	0		&			
ANR	911010	Identifier	options		908484	0					
ANR	911011	Identifier	PCRE_EXTRA		908484	1					
ANR	911012	PrimaryExpression	0		908484	1					
ANR	911013	CompoundStatement		801:14:27772:27772	908484	1					
ANR	911014	ExpressionStatement	* errorcodeptr = ERR7	5259:14:167664:167684	908484	0	True				
ANR	911015	AssignmentExpression	* errorcodeptr = ERR7		908484	0		=			
ANR	911016	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911017	UnaryOperator	*		908484	0					
ANR	911018	Identifier	errorcodeptr		908484	1					
ANR	911019	Identifier	ERR7		908484	1					
ANR	911020	GotoStatement	goto FAILED ;	5260:14:167700:167711	908484	1	True				
ANR	911021	Identifier	FAILED		908484	0					
ANR	911022	ExpressionStatement	class_has_8bitchar --	5262:12:167741:167761	908484	48	True				
ANR	911023	PostIncDecOperationExpression	class_has_8bitchar --		908484	0					
ANR	911024	Identifier	class_has_8bitchar		908484	0					
ANR	911025	IncDec	--		908484	1					
ANR	911026	ExpressionStatement	class_one_char -= 2	5263:12:167815:167834	908484	49	True				
ANR	911027	AssignmentExpression	class_one_char -= 2		908484	0		-=			
ANR	911028	Identifier	class_one_char		908484	0					
ANR	911029	PrimaryExpression	2		908484	1					
ANR	911030	ExpressionStatement	c = * ptr	5264:12:167889:167897	908484	50	True				
ANR	911031	AssignmentExpression	c = * ptr		908484	0		=			
ANR	911032	Identifier	c		908484	0					
ANR	911033	UnaryOperationExpression	* ptr		908484	1					
ANR	911034	UnaryOperator	*		908484	0					
ANR	911035	Identifier	ptr		908484	1					
ANR	911036	BreakStatement	break ;	5265:12:167973:167978	908484	51	True				
ANR	911037	ExpressionStatement	escape = 0	5272:8:168137:168147	908484	3	True				
ANR	911038	AssignmentExpression	escape = 0		908484	0		=			
ANR	911039	Identifier	escape		908484	0					
ANR	911040	PrimaryExpression	0		908484	1					
ANR	911041	Label	CHECK_RANGE :	5281:6:168485:168496	908484	7	True				
ANR	911042	Identifier	CHECK_RANGE		908484	0					
ANR	911043	WhileStatement	while ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		908484	8					
ANR	911044	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	5282:13:168511:168554	908484	0	True				
ANR	911045	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		908484	0		&&			
ANR	911046	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		908484	0		==			
ANR	911047	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911048	Identifier	ptr		908484	0					
ANR	911049	PrimaryExpression	1		908484	1					
ANR	911050	Identifier	CHAR_BACKSLASH		908484	1					
ANR	911051	EqualityExpression	ptr [ 2 ] == CHAR_E		908484	1		==			
ANR	911052	ArrayIndexing	ptr [ 2 ]		908484	0					
ANR	911053	Identifier	ptr		908484	0					
ANR	911054	PrimaryExpression	2		908484	1					
ANR	911055	Identifier	CHAR_E		908484	1					
ANR	911056	CompoundStatement		826:8:28689:28689	908484	1					
ANR	911057	ExpressionStatement	inescq = FALSE	5284:8:168575:168589	908484	0	True				
ANR	911058	AssignmentExpression	inescq = FALSE		908484	0		=			
ANR	911059	Identifier	inescq		908484	0					
ANR	911060	Identifier	FALSE		908484	1					
ANR	911061	ExpressionStatement	ptr += 2	5285:8:168599:168607	908484	1	True				
ANR	911062	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	911063	Identifier	ptr		908484	0					
ANR	911064	PrimaryExpression	2		908484	1					
ANR	911065	ExpressionStatement	oldptr = ptr	5287:6:168625:168637	908484	9	True				
ANR	911066	AssignmentExpression	oldptr = ptr		908484	0		=			
ANR	911067	Identifier	oldptr		908484	0					
ANR	911068	Identifier	ptr		908484	1					
ANR	911069	IfStatement	if ( c == CHAR_CR || c == CHAR_NL )		908484	10					
ANR	911070	Condition	c == CHAR_CR || c == CHAR_NL	5291:10:168705:168732	908484	0	True				
ANR	911071	OrExpression	c == CHAR_CR || c == CHAR_NL		908484	0		||			
ANR	911072	EqualityExpression	c == CHAR_CR		908484	0		==			
ANR	911073	Identifier	c		908484	0					
ANR	911074	Identifier	CHAR_CR		908484	1					
ANR	911075	EqualityExpression	c == CHAR_NL		908484	1		==			
ANR	911076	Identifier	c		908484	0					
ANR	911077	Identifier	CHAR_NL		908484	1					
ANR	911078	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	5291:40:168735:168771	908484	1	True				
ANR	911079	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		908484	0		|=			
ANR	911080	PtrMemberAccess	cd -> external_flags		908484	0					
ANR	911081	Identifier	cd		908484	0					
ANR	911082	Identifier	external_flags		908484	1					
ANR	911083	Identifier	PCRE_HASCRORLF		908484	1					
ANR	911084	IfStatement	if ( ! inescq && ptr [ 1 ] == CHAR_MINUS )		908484	11					
ANR	911085	Condition	! inescq && ptr [ 1 ] == CHAR_MINUS	5295:10:168813:168843	908484	0	True				
ANR	911086	AndExpression	! inescq && ptr [ 1 ] == CHAR_MINUS		908484	0		&&			
ANR	911087	UnaryOperationExpression	! inescq		908484	0					
ANR	911088	UnaryOperator	!		908484	0					
ANR	911089	Identifier	inescq		908484	1					
ANR	911090	EqualityExpression	ptr [ 1 ] == CHAR_MINUS		908484	1		==			
ANR	911091	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911092	Identifier	ptr		908484	0					
ANR	911093	PrimaryExpression	1		908484	1					
ANR	911094	Identifier	CHAR_MINUS		908484	1					
ANR	911095	CompoundStatement		840:8:28988:29001	908484	1					
ANR	911096	IdentifierDeclStatement	pcre_uint32 d ;	5297:8:168864:168877	908484	0	True				
ANR	911097	IdentifierDecl	d		908484	0					
ANR	911098	IdentifierDeclType	pcre_uint32		908484	0					
ANR	911099	Identifier	d		908484	1					
ANR	911100	ExpressionStatement	ptr += 2	5298:8:168887:168895	908484	1	True				
ANR	911101	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	911102	Identifier	ptr		908484	0					
ANR	911103	PrimaryExpression	2		908484	1					
ANR	911104	WhileStatement	while ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		908484	2					
ANR	911105	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	5299:15:168912:168953	908484	0	True				
ANR	911106	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		908484	0		&&			
ANR	911107	EqualityExpression	* ptr == CHAR_BACKSLASH		908484	0		==			
ANR	911108	UnaryOperationExpression	* ptr		908484	0					
ANR	911109	UnaryOperator	*		908484	0					
ANR	911110	Identifier	ptr		908484	1					
ANR	911111	Identifier	CHAR_BACKSLASH		908484	1					
ANR	911112	EqualityExpression	ptr [ 1 ] == CHAR_E		908484	1		==			
ANR	911113	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911114	Identifier	ptr		908484	0					
ANR	911115	PrimaryExpression	1		908484	1					
ANR	911116	Identifier	CHAR_E		908484	1					
ANR	911117	ExpressionStatement	ptr += 2	5299:59:168956:168964	908484	1	True				
ANR	911118	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	911119	Identifier	ptr		908484	0					
ANR	911120	PrimaryExpression	2		908484	1					
ANR	911121	WhileStatement	while ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q )		908484	3					
ANR	911122	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q	5304:15:169076:169117	908484	0	True				
ANR	911123	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q		908484	0		&&			
ANR	911124	EqualityExpression	* ptr == CHAR_BACKSLASH		908484	0		==			
ANR	911125	UnaryOperationExpression	* ptr		908484	0					
ANR	911126	UnaryOperator	*		908484	0					
ANR	911127	Identifier	ptr		908484	1					
ANR	911128	Identifier	CHAR_BACKSLASH		908484	1					
ANR	911129	EqualityExpression	ptr [ 1 ] == CHAR_Q		908484	1		==			
ANR	911130	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911131	Identifier	ptr		908484	0					
ANR	911132	PrimaryExpression	1		908484	1					
ANR	911133	Identifier	CHAR_Q		908484	1					
ANR	911134	CompoundStatement		848:10:29254:29254	908484	1					
ANR	911135	ExpressionStatement	ptr += 2	5306:10:169142:169150	908484	0	True				
ANR	911136	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	911137	Identifier	ptr		908484	0					
ANR	911138	PrimaryExpression	2		908484	1					
ANR	911139	IfStatement	if ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		908484	1					
ANR	911140	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	5307:14:169166:169207	908484	0	True				
ANR	911141	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		908484	0		&&			
ANR	911142	EqualityExpression	* ptr == CHAR_BACKSLASH		908484	0		==			
ANR	911143	UnaryOperationExpression	* ptr		908484	0					
ANR	911144	UnaryOperator	*		908484	0					
ANR	911145	Identifier	ptr		908484	1					
ANR	911146	Identifier	CHAR_BACKSLASH		908484	1					
ANR	911147	EqualityExpression	ptr [ 1 ] == CHAR_E		908484	1		==			
ANR	911148	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911149	Identifier	ptr		908484	0					
ANR	911150	PrimaryExpression	1		908484	1					
ANR	911151	Identifier	CHAR_E		908484	1					
ANR	911152	CompoundStatement		851:12:29346:29346	908484	1					
ANR	911153	ExpressionStatement	ptr += 2	5308:14:169224:169232	908484	0	True				
ANR	911154	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	911155	Identifier	ptr		908484	0					
ANR	911156	PrimaryExpression	2		908484	1					
ANR	911157	ContinueStatement	continue ;	5308:24:169234:169242	908484	1	True				
ANR	911158	ExpressionStatement	inescq = TRUE	5309:10:169256:169269	908484	2	True				
ANR	911159	AssignmentExpression	inescq = TRUE		908484	0		=			
ANR	911160	Identifier	inescq		908484	0					
ANR	911161	Identifier	TRUE		908484	1					
ANR	911162	BreakStatement	break ;	5310:10:169281:169286	908484	3	True				
ANR	911163	IfStatement	if ( * ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET ) )		908484	4					
ANR	911164	Condition	* ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET )	5316:12:169473:169539	908484	0	True				
ANR	911165	OrExpression	* ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET )		908484	0		||			
ANR	911166	EqualityExpression	* ptr == CHAR_NULL		908484	0		==			
ANR	911167	UnaryOperationExpression	* ptr		908484	0					
ANR	911168	UnaryOperator	*		908484	0					
ANR	911169	Identifier	ptr		908484	1					
ANR	911170	Identifier	CHAR_NULL		908484	1					
ANR	911171	AndExpression	! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET		908484	1		&&			
ANR	911172	UnaryOperationExpression	! inescq		908484	0					
ANR	911173	UnaryOperator	!		908484	0					
ANR	911174	Identifier	inescq		908484	1					
ANR	911175	EqualityExpression	* ptr == CHAR_RIGHT_SQUARE_BRACKET		908484	1		==			
ANR	911176	UnaryOperationExpression	* ptr		908484	0					
ANR	911177	UnaryOperator	*		908484	0					
ANR	911178	Identifier	ptr		908484	1					
ANR	911179	Identifier	CHAR_RIGHT_SQUARE_BRACKET		908484	1					
ANR	911180	CompoundStatement		860:10:29676:29676	908484	1					
ANR	911181	ExpressionStatement	ptr = oldptr	5318:10:169564:169576	908484	0	True				
ANR	911182	AssignmentExpression	ptr = oldptr		908484	0		=			
ANR	911183	Identifier	ptr		908484	0					
ANR	911184	Identifier	oldptr		908484	1					
ANR	911185	GotoStatement	goto CLASS_SINGLE_CHARACTER ;	5319:10:169588:169615	908484	1	True				
ANR	911186	Identifier	CLASS_SINGLE_CHARACTER		908484	0					
ANR	911187	IfStatement	if ( utf )		908484	5					
ANR	911188	Condition	utf	5325:12:169741:169743	908484	0	True				
ANR	911189	Identifier	utf		908484	0					
ANR	911190	CompoundStatement		869:10:29880:29880	908484	1					
ANR	911191	ExpressionStatement	"GETCHARLEN ( d , ptr , ptr )"	5327:10:169832:169855	908484	0	True				
ANR	911192	CallExpression	"GETCHARLEN ( d , ptr , ptr )"		908484	0					
ANR	911193	Callee	GETCHARLEN		908484	0					
ANR	911194	Identifier	GETCHARLEN		908484	0					
ANR	911195	ArgumentList	d		908484	1					
ANR	911196	Argument	d		908484	0					
ANR	911197	Identifier	d		908484	0					
ANR	911198	Argument	ptr		908484	1					
ANR	911199	Identifier	ptr		908484	0					
ANR	911200	Argument	ptr		908484	2					
ANR	911201	Identifier	ptr		908484	0					
ANR	911202	ElseStatement	else		908484	0					
ANR	911203	ExpressionStatement	d = * ptr	5331:8:169942:169950	908484	0	True				
ANR	911204	AssignmentExpression	d = * ptr		908484	0		=			
ANR	911205	Identifier	d		908484	0					
ANR	911206	UnaryOperationExpression	* ptr		908484	1					
ANR	911207	UnaryOperator	*		908484	0					
ANR	911208	Identifier	ptr		908484	1					
ANR	911209	IfStatement	if ( ! inescq )		908484	6					
ANR	911210	Condition	! inescq	5339:12:170326:170332	908484	0	True				
ANR	911211	UnaryOperationExpression	! inescq		908484	0					
ANR	911212	UnaryOperator	!		908484	0					
ANR	911213	Identifier	inescq		908484	1					
ANR	911214	CompoundStatement		883:10:30469:30469	908484	1					
ANR	911215	IfStatement	if ( d == CHAR_BACKSLASH )		908484	0					
ANR	911216	Condition	d == CHAR_BACKSLASH	5341:14:170361:170379	908484	0	True				
ANR	911217	EqualityExpression	d == CHAR_BACKSLASH		908484	0		==			
ANR	911218	Identifier	d		908484	0					
ANR	911219	Identifier	CHAR_BACKSLASH		908484	1					
ANR	911220	CompoundStatement		886:12:30532:30543	908484	1					
ANR	911221	IdentifierDeclStatement	int descape ;	5343:12:170408:170419	908484	0	True				
ANR	911222	IdentifierDecl	descape		908484	0					
ANR	911223	IdentifierDeclType	int		908484	0					
ANR	911224	Identifier	descape		908484	1					
ANR	911225	ExpressionStatement	"descape = check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"	5344:12:170433:170508	908484	1	True				
ANR	911226	AssignmentExpression	"descape = check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"		908484	0		=			
ANR	911227	Identifier	descape		908484	0					
ANR	911228	CallExpression	"check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"		908484	1					
ANR	911229	Callee	check_escape		908484	0					
ANR	911230	Identifier	check_escape		908484	0					
ANR	911231	ArgumentList	& ptr		908484	1					
ANR	911232	Argument	& ptr		908484	0					
ANR	911233	UnaryOperationExpression	& ptr		908484	0					
ANR	911234	UnaryOperator	&		908484	0					
ANR	911235	Identifier	ptr		908484	1					
ANR	911236	Argument	& d		908484	1					
ANR	911237	UnaryOperationExpression	& d		908484	0					
ANR	911238	UnaryOperator	&		908484	0					
ANR	911239	Identifier	d		908484	1					
ANR	911240	Argument	errorcodeptr		908484	2					
ANR	911241	Identifier	errorcodeptr		908484	0					
ANR	911242	Argument	cd -> bracount		908484	3					
ANR	911243	PtrMemberAccess	cd -> bracount		908484	0					
ANR	911244	Identifier	cd		908484	0					
ANR	911245	Identifier	bracount		908484	1					
ANR	911246	Argument	options		908484	4					
ANR	911247	Identifier	options		908484	0					
ANR	911248	Argument	TRUE		908484	5					
ANR	911249	Identifier	TRUE		908484	0					
ANR	911250	IfStatement	if ( * errorcodeptr != 0 )		908484	2					
ANR	911251	Condition	* errorcodeptr != 0	5345:16:170526:170543	908484	0	True				
ANR	911252	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	911253	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911254	UnaryOperator	*		908484	0					
ANR	911255	Identifier	errorcodeptr		908484	1					
ANR	911256	PrimaryExpression	0		908484	1					
ANR	911257	GotoStatement	goto FAILED ;	5345:36:170546:170557	908484	1	True				
ANR	911258	Identifier	FAILED		908484	0					
ANR	911259	IfStatement	if ( descape != 0 )		908484	3					
ANR	911260	Condition	descape != 0	5350:16:170695:170706	908484	0	True				
ANR	911261	EqualityExpression	descape != 0		908484	0		!=			
ANR	911262	Identifier	descape		908484	0					
ANR	911263	PrimaryExpression	0		908484	1					
ANR	911264	CompoundStatement		894:14:30847:30847	908484	1					
ANR	911265	IfStatement	if ( descape == ESC_b )		908484	0					
ANR	911266	Condition	descape == ESC_b	5352:18:170743:170758	908484	0	True				
ANR	911267	EqualityExpression	descape == ESC_b		908484	0		==			
ANR	911268	Identifier	descape		908484	0					
ANR	911269	Identifier	ESC_b		908484	1					
ANR	911270	ExpressionStatement	d = CHAR_BS	5352:36:170761:170772	908484	1	True				
ANR	911271	AssignmentExpression	d = CHAR_BS		908484	0		=			
ANR	911272	Identifier	d		908484	0					
ANR	911273	Identifier	CHAR_BS		908484	1					
ANR	911274	ElseStatement	else		908484	0					
ANR	911275	CompoundStatement		896:16:30919:30919	908484	0					
ANR	911276	ExpressionStatement	* errorcodeptr = ERR83	5354:16:170813:170834	908484	0	True				
ANR	911277	AssignmentExpression	* errorcodeptr = ERR83		908484	0		=			
ANR	911278	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911279	UnaryOperator	*		908484	0					
ANR	911280	Identifier	errorcodeptr		908484	1					
ANR	911281	Identifier	ERR83		908484	1					
ANR	911282	GotoStatement	goto FAILED ;	5355:16:170852:170863	908484	1	True				
ANR	911283	Identifier	FAILED		908484	0					
ANR	911284	ElseStatement	else		908484	0					
ANR	911285	IfStatement	"if ( d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		908484	0					
ANR	911286	Condition	"d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	5362:19:171013:171214	908484	0	True				
ANR	911287	AndExpression	"d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		908484	0		&&			
ANR	911288	EqualityExpression	d == CHAR_LEFT_SQUARE_BRACKET		908484	0		==			
ANR	911289	Identifier	d		908484	0					
ANR	911290	Identifier	CHAR_LEFT_SQUARE_BRACKET		908484	1					
ANR	911291	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		908484	1		&&			
ANR	911292	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	0		||			
ANR	911293	EqualityExpression	ptr [ 1 ] == CHAR_COLON		908484	0		==			
ANR	911294	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911295	Identifier	ptr		908484	0					
ANR	911296	PrimaryExpression	1		908484	1					
ANR	911297	Identifier	CHAR_COLON		908484	1					
ANR	911298	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		||			
ANR	911299	EqualityExpression	ptr [ 1 ] == CHAR_DOT		908484	0		==			
ANR	911300	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911301	Identifier	ptr		908484	0					
ANR	911302	PrimaryExpression	1		908484	1					
ANR	911303	Identifier	CHAR_DOT		908484	1					
ANR	911304	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		908484	1		==			
ANR	911305	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	911306	Identifier	ptr		908484	0					
ANR	911307	PrimaryExpression	1		908484	1					
ANR	911308	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	911309	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		908484	1					
ANR	911310	Callee	check_posix_syntax		908484	0					
ANR	911311	Identifier	check_posix_syntax		908484	0					
ANR	911312	ArgumentList	ptr		908484	1					
ANR	911313	Argument	ptr		908484	0					
ANR	911314	Identifier	ptr		908484	0					
ANR	911315	Argument	& tempptr		908484	1					
ANR	911316	UnaryOperationExpression	& tempptr		908484	0					
ANR	911317	UnaryOperator	&		908484	0					
ANR	911318	Identifier	tempptr		908484	1					
ANR	911319	CompoundStatement		909:12:31353:31353	908484	1					
ANR	911320	ExpressionStatement	* errorcodeptr = ERR83	5367:12:171243:171264	908484	0	True				
ANR	911321	AssignmentExpression	* errorcodeptr = ERR83		908484	0		=			
ANR	911322	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911323	UnaryOperator	*		908484	0					
ANR	911324	Identifier	errorcodeptr		908484	1					
ANR	911325	Identifier	ERR83		908484	1					
ANR	911326	GotoStatement	goto FAILED ;	5368:12:171278:171289	908484	1	True				
ANR	911327	Identifier	FAILED		908484	0					
ANR	911328	IfStatement	if ( d < c )		908484	7					
ANR	911329	Condition	d < c	5375:12:171436:171440	908484	0	True				
ANR	911330	RelationalExpression	d < c		908484	0		<			
ANR	911331	Identifier	d		908484	0					
ANR	911332	Identifier	c		908484	1					
ANR	911333	CompoundStatement		919:10:31577:31577	908484	1					
ANR	911334	ExpressionStatement	* errorcodeptr = ERR8	5377:10:171465:171485	908484	0	True				
ANR	911335	AssignmentExpression	* errorcodeptr = ERR8		908484	0		=			
ANR	911336	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911337	UnaryOperator	*		908484	0					
ANR	911338	Identifier	errorcodeptr		908484	1					
ANR	911339	Identifier	ERR8		908484	1					
ANR	911340	GotoStatement	goto FAILED ;	5378:10:171497:171508	908484	1	True				
ANR	911341	Identifier	FAILED		908484	0					
ANR	911342	IfStatement	if ( d == c )		908484	8					
ANR	911343	Condition	d == c	5380:12:171534:171539	908484	0	True				
ANR	911344	EqualityExpression	d == c		908484	0		==			
ANR	911345	Identifier	d		908484	0					
ANR	911346	Identifier	c		908484	1					
ANR	911347	GotoStatement	goto CLASS_SINGLE_CHARACTER ;	5380:20:171542:171569	908484	1	True				
ANR	911348	Identifier	CLASS_SINGLE_CHARACTER		908484	0					
ANR	911349	ExpressionStatement	class_one_char = 2	5386:8:171801:171819	908484	9	True				
ANR	911350	AssignmentExpression	class_one_char = 2		908484	0		=			
ANR	911351	Identifier	class_one_char		908484	0					
ANR	911352	PrimaryExpression	2		908484	1					
ANR	911353	IfStatement	if ( d == CHAR_CR || d == CHAR_NL )		908484	10					
ANR	911354	Condition	d == CHAR_CR || d == CHAR_NL	5390:12:171912:171939	908484	0	True				
ANR	911355	OrExpression	d == CHAR_CR || d == CHAR_NL		908484	0		||			
ANR	911356	EqualityExpression	d == CHAR_CR		908484	0		==			
ANR	911357	Identifier	d		908484	0					
ANR	911358	Identifier	CHAR_CR		908484	1					
ANR	911359	EqualityExpression	d == CHAR_NL		908484	1		==			
ANR	911360	Identifier	d		908484	0					
ANR	911361	Identifier	CHAR_NL		908484	1					
ANR	911362	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	5390:42:171942:171978	908484	1	True				
ANR	911363	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		908484	0		|=			
ANR	911364	PtrMemberAccess	cd -> external_flags		908484	0					
ANR	911365	Identifier	cd		908484	0					
ANR	911366	Identifier	external_flags		908484	1					
ANR	911367	Identifier	PCRE_HASCRORLF		908484	1					
ANR	911368	ExpressionStatement	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , d )"	5392:8:171989:172081	908484	11	True				
ANR	911369	AssignmentExpression	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , d )"		908484	0		+=			
ANR	911370	Identifier	class_has_8bitchar		908484	0					
ANR	911371	CallExpression	"add_to_class ( classbits , & class_uchardata , options , cd , c , d )"		908484	1					
ANR	911372	Callee	add_to_class		908484	0					
ANR	911373	Identifier	add_to_class		908484	0					
ANR	911374	ArgumentList	classbits		908484	1					
ANR	911375	Argument	classbits		908484	0					
ANR	911376	Identifier	classbits		908484	0					
ANR	911377	Argument	& class_uchardata		908484	1					
ANR	911378	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	911379	UnaryOperator	&		908484	0					
ANR	911380	Identifier	class_uchardata		908484	1					
ANR	911381	Argument	options		908484	2					
ANR	911382	Identifier	options		908484	0					
ANR	911383	Argument	cd		908484	3					
ANR	911384	Identifier	cd		908484	0					
ANR	911385	Argument	c		908484	4					
ANR	911386	Identifier	c		908484	0					
ANR	911387	Argument	d		908484	5					
ANR	911388	Identifier	d		908484	0					
ANR	911389	ContinueStatement	continue ;	5395:8:172092:172100	908484	12	True				
ANR	911390	Label	CLASS_SINGLE_CHARACTER :	5404:6:172514:172536	908484	12	True				
ANR	911391	Identifier	CLASS_SINGLE_CHARACTER		908484	0					
ANR	911392	IfStatement	if ( class_one_char < 2 )		908484	13					
ANR	911393	Condition	class_one_char < 2	5405:10:172548:172565	908484	0	True				
ANR	911394	RelationalExpression	class_one_char < 2		908484	0		<			
ANR	911395	Identifier	class_one_char		908484	0					
ANR	911396	PrimaryExpression	2		908484	1					
ANR	911397	ExpressionStatement	class_one_char ++	5405:30:172568:172584	908484	1	True				
ANR	911398	PostIncDecOperationExpression	class_one_char ++		908484	0					
ANR	911399	Identifier	class_one_char		908484	0					
ANR	911400	IncDec	++		908484	1					
ANR	911401	Statement	if	5416:6:173201:173202	908484	14	True				
ANR	911402	Statement	(	5416:9:173204:173204	908484	15	True				
ANR	911403	Statement	!	5416:10:173205:173205	908484	16	True				
ANR	911404	Statement	inescq	5416:11:173206:173211	908484	17	True				
ANR	911405	Statement	&&	5416:18:173213:173214	908484	18	True				
ANR	911406	Statement	!	5418:10:173245:173245	908484	19	True				
ANR	911407	Statement	xclass_has_prop	5418:11:173246:173260	908484	20	True				
ANR	911408	Statement	&&	5418:27:173262:173263	908484	21	True				
ANR	911409	Statement	class_one_char	5420:10:173282:173295	908484	22	True				
ANR	911410	Statement	==	5420:25:173297:173298	908484	23	True				
ANR	911411	Statement	1	5420:28:173300:173300	908484	24	True				
ANR	911412	Statement	&&	5420:30:173302:173303	908484	25	True				
ANR	911413	Statement	ptr	5420:33:173305:173307	908484	26	True				
ANR	911414	Statement	[	5420:36:173308:173308	908484	27	True				
ANR	911415	Statement	1	5420:37:173309:173309	908484	28	True				
ANR	911416	Statement	]	5420:38:173310:173310	908484	29	True				
ANR	911417	Statement	==	5420:40:173312:173313	908484	30	True				
ANR	911418	Statement	CHAR_RIGHT_SQUARE_BRACKET	5420:43:173315:173339	908484	31	True				
ANR	911419	Statement	)	5420:68:173340:173340	908484	32	True				
ANR	911420	CompoundStatement		964:8:33474:33474	908484	33					
ANR	911421	ExpressionStatement	ptr ++	5422:8:173360:173365	908484	0	True				
ANR	911422	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	911423	Identifier	ptr		908484	0					
ANR	911424	IncDec	++		908484	1					
ANR	911425	ExpressionStatement	zeroreqchar = reqchar	5423:8:173375:173396	908484	1	True				
ANR	911426	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	911427	Identifier	zeroreqchar		908484	0					
ANR	911428	Identifier	reqchar		908484	1					
ANR	911429	ExpressionStatement	zeroreqcharflags = reqcharflags	5424:8:173406:173437	908484	2	True				
ANR	911430	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	911431	Identifier	zeroreqcharflags		908484	0					
ANR	911432	Identifier	reqcharflags		908484	1					
ANR	911433	IfStatement	if ( negate_class )		908484	3					
ANR	911434	Condition	negate_class	5426:12:173452:173463	908484	0	True				
ANR	911435	Identifier	negate_class		908484	0					
ANR	911436	CompoundStatement		972:10:33631:33636	908484	1					
ANR	911437	IdentifierDeclStatement	int d ;	5429:10:173507:173512	908484	0	True				
ANR	911438	IdentifierDecl	d		908484	0					
ANR	911439	IdentifierDeclType	int		908484	0					
ANR	911440	Identifier	d		908484	1					
ANR	911441	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	1					
ANR	911442	Condition	firstcharflags == REQ_UNSET	5431:14:173535:173561	908484	0	True				
ANR	911443	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	911444	Identifier	firstcharflags		908484	0					
ANR	911445	Identifier	REQ_UNSET		908484	1					
ANR	911446	ExpressionStatement	firstcharflags = REQ_NONE	5431:43:173564:173589	908484	1	True				
ANR	911447	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	911448	Identifier	firstcharflags		908484	0					
ANR	911449	Identifier	REQ_NONE		908484	1					
ANR	911450	ExpressionStatement	zerofirstchar = firstchar	5432:10:173601:173626	908484	2	True				
ANR	911451	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	911452	Identifier	zerofirstchar		908484	0					
ANR	911453	Identifier	firstchar		908484	1					
ANR	911454	ExpressionStatement	zerofirstcharflags = firstcharflags	5433:10:173638:173673	908484	3	True				
ANR	911455	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	911456	Identifier	zerofirstcharflags		908484	0					
ANR	911457	Identifier	firstcharflags		908484	1					
ANR	911458	IfStatement	if ( utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0 )		908484	4					
ANR	911459	Condition	utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0	5440:14:173922:174001	908484	0	True				
ANR	911460	AndExpression	utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0		908484	0		&&			
ANR	911461	Identifier	utf		908484	0					
ANR	911462	AndExpression	( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0		908484	1		&&			
ANR	911463	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	911464	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	911465	Identifier	options		908484	0					
ANR	911466	Identifier	PCRE_CASELESS		908484	1					
ANR	911467	PrimaryExpression	0		908484	1					
ANR	911468	EqualityExpression	( d = UCD_CASESET ( c ) ) != 0		908484	1		!=			
ANR	911469	AssignmentExpression	d = UCD_CASESET ( c )		908484	0		=			
ANR	911470	Identifier	d		908484	0					
ANR	911471	CallExpression	UCD_CASESET ( c )		908484	1					
ANR	911472	Callee	UCD_CASESET		908484	0					
ANR	911473	Identifier	UCD_CASESET		908484	0					
ANR	911474	ArgumentList	c		908484	1					
ANR	911475	Argument	c		908484	0					
ANR	911476	Identifier	c		908484	0					
ANR	911477	PrimaryExpression	0		908484	1					
ANR	911478	CompoundStatement		985:12:34140:34140	908484	1					
ANR	911479	ExpressionStatement	* code ++ = OP_NOTPROP	5443:12:174030:174050	908484	0	True				
ANR	911480	AssignmentExpression	* code ++ = OP_NOTPROP		908484	0		=			
ANR	911481	UnaryOperationExpression	* code ++		908484	0					
ANR	911482	UnaryOperator	*		908484	0					
ANR	911483	PostIncDecOperationExpression	code ++		908484	1					
ANR	911484	Identifier	code		908484	0					
ANR	911485	IncDec	++		908484	1					
ANR	911486	Identifier	OP_NOTPROP		908484	1					
ANR	911487	ExpressionStatement	* code ++ = PT_CLIST	5444:12:174064:174082	908484	1	True				
ANR	911488	AssignmentExpression	* code ++ = PT_CLIST		908484	0		=			
ANR	911489	UnaryOperationExpression	* code ++		908484	0					
ANR	911490	UnaryOperator	*		908484	0					
ANR	911491	PostIncDecOperationExpression	code ++		908484	1					
ANR	911492	Identifier	code		908484	0					
ANR	911493	IncDec	++		908484	1					
ANR	911494	Identifier	PT_CLIST		908484	1					
ANR	911495	ExpressionStatement	* code ++ = d	5445:12:174096:174107	908484	2	True				
ANR	911496	AssignmentExpression	* code ++ = d		908484	0		=			
ANR	911497	UnaryOperationExpression	* code ++		908484	0					
ANR	911498	UnaryOperator	*		908484	0					
ANR	911499	PostIncDecOperationExpression	code ++		908484	1					
ANR	911500	Identifier	code		908484	0					
ANR	911501	IncDec	++		908484	1					
ANR	911502	Identifier	d		908484	1					
ANR	911503	ElseStatement	else		908484	0					
ANR	911504	CompoundStatement		994:12:34349:34349	908484	0					
ANR	911505	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT	5452:12:174239:174298	908484	0	True				
ANR	911506	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT		908484	0		=			
ANR	911507	UnaryOperationExpression	* code ++		908484	0					
ANR	911508	UnaryOperator	*		908484	0					
ANR	911509	PostIncDecOperationExpression	code ++		908484	1					
ANR	911510	Identifier	code		908484	0					
ANR	911511	IncDec	++		908484	1					
ANR	911512	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT		908484	1					
ANR	911513	Condition	( options & PCRE_CASELESS ) != 0		908484	0					
ANR	911514	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	911515	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	911516	Identifier	options		908484	0					
ANR	911517	Identifier	PCRE_CASELESS		908484	1					
ANR	911518	PrimaryExpression	0		908484	1					
ANR	911519	Identifier	OP_NOTI		908484	1					
ANR	911520	Identifier	OP_NOT		908484	2					
ANR	911521	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		908484	1					
ANR	911522	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	5454:16:174367:174402	908484	0	True				
ANR	911523	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		908484	0		&&			
ANR	911524	Identifier	utf		908484	0					
ANR	911525	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		908484	1		>			
ANR	911526	Identifier	c		908484	0					
ANR	911527	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		908484	1					
ANR	911528	ExpressionStatement	"code += PRIV ( ord2utf ) ( c , code )"	5455:14:174419:174449	908484	1	True				
ANR	911529	AssignmentExpression	"code += PRIV ( ord2utf ) ( c , code )"		908484	0		+=			
ANR	911530	Identifier	code		908484	0					
ANR	911531	CallExpression	"PRIV ( ord2utf ) ( c , code )"		908484	1					
ANR	911532	Callee	PRIV ( ord2utf )		908484	0					
ANR	911533	CallExpression	PRIV ( ord2utf )		908484	0					
ANR	911534	Callee	PRIV		908484	0					
ANR	911535	Identifier	PRIV		908484	0					
ANR	911536	ArgumentList	ord2utf		908484	1					
ANR	911537	Argument	ord2utf		908484	0					
ANR	911538	Identifier	ord2utf		908484	0					
ANR	911539	ArgumentList	c		908484	1					
ANR	911540	Argument	c		908484	0					
ANR	911541	Identifier	c		908484	0					
ANR	911542	Argument	code		908484	1					
ANR	911543	Identifier	code		908484	0					
ANR	911544	ElseStatement	else		908484	0					
ANR	911545	ExpressionStatement	* code ++ = c	5458:14:174489:174500	908484	0	True				
ANR	911546	AssignmentExpression	* code ++ = c		908484	0		=			
ANR	911547	UnaryOperationExpression	* code ++		908484	0					
ANR	911548	UnaryOperator	*		908484	0					
ANR	911549	PostIncDecOperationExpression	code ++		908484	1					
ANR	911550	Identifier	code		908484	0					
ANR	911551	IncDec	++		908484	1					
ANR	911552	Identifier	c		908484	1					
ANR	911553	GotoStatement	goto END_CLASS ;	5463:10:174586:174600	908484	5	True				
ANR	911554	Identifier	END_CLASS		908484	0					
ANR	911555	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		908484	4					
ANR	911556	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	5470:12:174828:174863	908484	0	True				
ANR	911557	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		908484	0		&&			
ANR	911558	Identifier	utf		908484	0					
ANR	911559	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		908484	1		>			
ANR	911560	Identifier	c		908484	0					
ANR	911561	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		908484	1					
ANR	911562	ExpressionStatement	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"	5471:10:174876:174913	908484	1	True				
ANR	911563	AssignmentExpression	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"		908484	0		=			
ANR	911564	Identifier	mclength		908484	0					
ANR	911565	CallExpression	"PRIV ( ord2utf ) ( c , mcbuffer )"		908484	1					
ANR	911566	Callee	PRIV ( ord2utf )		908484	0					
ANR	911567	CallExpression	PRIV ( ord2utf )		908484	0					
ANR	911568	Callee	PRIV		908484	0					
ANR	911569	Identifier	PRIV		908484	0					
ANR	911570	ArgumentList	ord2utf		908484	1					
ANR	911571	Argument	ord2utf		908484	0					
ANR	911572	Identifier	ord2utf		908484	0					
ANR	911573	ArgumentList	c		908484	1					
ANR	911574	Argument	c		908484	0					
ANR	911575	Identifier	c		908484	0					
ANR	911576	Argument	mcbuffer		908484	1					
ANR	911577	Identifier	mcbuffer		908484	0					
ANR	911578	ElseStatement	else		908484	0					
ANR	911579	CompoundStatement		1017:10:35069:35069	908484	0					
ANR	911580	ExpressionStatement	mcbuffer [ 0 ] = c	5475:10:174957:174972	908484	0	True				
ANR	911581	AssignmentExpression	mcbuffer [ 0 ] = c		908484	0		=			
ANR	911582	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	911583	Identifier	mcbuffer		908484	0					
ANR	911584	PrimaryExpression	0		908484	1					
ANR	911585	Identifier	c		908484	1					
ANR	911586	ExpressionStatement	mclength = 1	5476:10:174984:174996	908484	1	True				
ANR	911587	AssignmentExpression	mclength = 1		908484	0		=			
ANR	911588	Identifier	mclength		908484	0					
ANR	911589	PrimaryExpression	1		908484	1					
ANR	911590	GotoStatement	goto ONE_CHAR ;	5478:8:175018:175031	908484	5	True				
ANR	911591	Identifier	ONE_CHAR		908484	0					
ANR	911592	ExpressionStatement	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , c )"	5484:6:175226:175316	908484	34	True				
ANR	911593	AssignmentExpression	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , c )"		908484	0		+=			
ANR	911594	Identifier	class_has_8bitchar		908484	0					
ANR	911595	CallExpression	"add_to_class ( classbits , & class_uchardata , options , cd , c , c )"		908484	1					
ANR	911596	Callee	add_to_class		908484	0					
ANR	911597	Identifier	add_to_class		908484	0					
ANR	911598	ArgumentList	classbits		908484	1					
ANR	911599	Argument	classbits		908484	0					
ANR	911600	Identifier	classbits		908484	0					
ANR	911601	Argument	& class_uchardata		908484	1					
ANR	911602	UnaryOperationExpression	& class_uchardata		908484	0					
ANR	911603	UnaryOperator	&		908484	0					
ANR	911604	Identifier	class_uchardata		908484	1					
ANR	911605	Argument	options		908484	2					
ANR	911606	Identifier	options		908484	0					
ANR	911607	Argument	cd		908484	3					
ANR	911608	Identifier	cd		908484	0					
ANR	911609	Argument	c		908484	4					
ANR	911610	Identifier	c		908484	0					
ANR	911611	Argument	c		908484	5					
ANR	911612	Identifier	c		908484	0					
ANR	911613	Condition	"( ( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL ) ) && ( c != CHAR_RIGHT_SQUARE_BRACKET || inescq )"	5492:11:175507:175699	908484	1	True				
ANR	911614	AndExpression	"( ( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL ) ) && ( c != CHAR_RIGHT_SQUARE_BRACKET || inescq )"		908484	0		&&			
ANR	911615	OrExpression	"( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL )"		908484	0		||			
ANR	911616	EqualityExpression	( c = * ( ++ ptr ) ) != CHAR_NULL		908484	0		!=			
ANR	911617	AssignmentExpression	c = * ( ++ ptr )		908484	0		=			
ANR	911618	Identifier	c		908484	0					
ANR	911619	UnaryOperationExpression	* ( ++ ptr )		908484	1					
ANR	911620	UnaryOperator	*		908484	0					
ANR	911621	UnaryExpression	++ ptr		908484	1					
ANR	911622	IncDec	++		908484	0					
ANR	911623	Identifier	ptr		908484	1					
ANR	911624	Identifier	CHAR_NULL		908484	1					
ANR	911625	AndExpression	"nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL"		908484	1		&&			
ANR	911626	EqualityExpression	nestptr != NULL		908484	0		!=			
ANR	911627	Identifier	nestptr		908484	0					
ANR	911628	Identifier	NULL		908484	1					
ANR	911629	EqualityExpression	"( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL"		908484	1		!=			
ANR	911630	Expression	"ptr = nestptr , nestptr = NULL , c = * ( ++ ptr )"		908484	0					
ANR	911631	AssignmentExpression	ptr = nestptr		908484	0		=			
ANR	911632	Identifier	ptr		908484	0					
ANR	911633	Identifier	nestptr		908484	1					
ANR	911634	Expression	"nestptr = NULL , c = * ( ++ ptr )"		908484	1					
ANR	911635	AssignmentExpression	nestptr = NULL		908484	0		=			
ANR	911636	Identifier	nestptr		908484	0					
ANR	911637	Identifier	NULL		908484	1					
ANR	911638	AssignmentExpression	c = * ( ++ ptr )		908484	1		=			
ANR	911639	Identifier	c		908484	0					
ANR	911640	UnaryOperationExpression	* ( ++ ptr )		908484	1					
ANR	911641	UnaryOperator	*		908484	0					
ANR	911642	UnaryExpression	++ ptr		908484	1					
ANR	911643	IncDec	++		908484	0					
ANR	911644	Identifier	ptr		908484	1					
ANR	911645	Identifier	CHAR_NULL		908484	1					
ANR	911646	OrExpression	c != CHAR_RIGHT_SQUARE_BRACKET || inescq		908484	1		||			
ANR	911647	EqualityExpression	c != CHAR_RIGHT_SQUARE_BRACKET		908484	0		!=			
ANR	911648	Identifier	c		908484	0					
ANR	911649	Identifier	CHAR_RIGHT_SQUARE_BRACKET		908484	1					
ANR	911650	Identifier	inescq		908484	1					
ANR	911651	IfStatement	if ( c == CHAR_NULL )		908484	50					
ANR	911652	Condition	c == CHAR_NULL	5499:8:175757:175770	908484	0	True				
ANR	911653	EqualityExpression	c == CHAR_NULL		908484	0		==			
ANR	911654	Identifier	c		908484	0					
ANR	911655	Identifier	CHAR_NULL		908484	1					
ANR	911656	CompoundStatement		1043:6:35903:35903	908484	1					
ANR	911657	ExpressionStatement	* errorcodeptr = ERR6	5501:6:175787:175807	908484	0	True				
ANR	911658	AssignmentExpression	* errorcodeptr = ERR6		908484	0		=			
ANR	911659	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911660	UnaryOperator	*		908484	0					
ANR	911661	Identifier	errorcodeptr		908484	1					
ANR	911662	Identifier	ERR6		908484	1					
ANR	911663	GotoStatement	goto FAILED ;	5502:6:175815:175826	908484	1	True				
ANR	911664	Identifier	FAILED		908484	0					
ANR	911665	IfStatement	if ( class_uchardata > class_uchardata_base )		908484	51					
ANR	911666	Condition	class_uchardata > class_uchardata_base	5514:8:176422:176459	908484	0	True				
ANR	911667	RelationalExpression	class_uchardata > class_uchardata_base		908484	0		>			
ANR	911668	Identifier	class_uchardata		908484	0					
ANR	911669	Identifier	class_uchardata_base		908484	1					
ANR	911670	ExpressionStatement	xclass = TRUE	5514:48:176462:176475	908484	1	True				
ANR	911671	AssignmentExpression	xclass = TRUE		908484	0		=			
ANR	911672	Identifier	xclass		908484	0					
ANR	911673	Identifier	TRUE		908484	1					
ANR	911674	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	52					
ANR	911675	Condition	firstcharflags == REQ_UNSET	5521:8:176685:176711	908484	0	True				
ANR	911676	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	911677	Identifier	firstcharflags		908484	0					
ANR	911678	Identifier	REQ_UNSET		908484	1					
ANR	911679	ExpressionStatement	firstcharflags = REQ_NONE	5521:37:176714:176739	908484	1	True				
ANR	911680	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	911681	Identifier	firstcharflags		908484	0					
ANR	911682	Identifier	REQ_NONE		908484	1					
ANR	911683	ExpressionStatement	zerofirstchar = firstchar	5522:4:176745:176770	908484	53	True				
ANR	911684	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	911685	Identifier	zerofirstchar		908484	0					
ANR	911686	Identifier	firstchar		908484	1					
ANR	911687	ExpressionStatement	zerofirstcharflags = firstcharflags	5523:4:176776:176811	908484	54	True				
ANR	911688	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	911689	Identifier	zerofirstcharflags		908484	0					
ANR	911690	Identifier	firstcharflags		908484	1					
ANR	911691	ExpressionStatement	zeroreqchar = reqchar	5524:4:176817:176838	908484	55	True				
ANR	911692	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	911693	Identifier	zeroreqchar		908484	0					
ANR	911694	Identifier	reqchar		908484	1					
ANR	911695	ExpressionStatement	zeroreqcharflags = reqcharflags	5525:4:176844:176875	908484	56	True				
ANR	911696	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	911697	Identifier	zeroreqcharflags		908484	0					
ANR	911698	Identifier	reqcharflags		908484	1					
ANR	911699	IfStatement	if ( xclass && ( xclass_has_prop || ! should_flip_negation || ( options & PCRE_UCP ) != 0 ) )		908484	57					
ANR	911700	Condition	xclass && ( xclass_has_prop || ! should_flip_negation || ( options & PCRE_UCP ) != 0 )	5536:8:177394:177482	908484	0	True				
ANR	911701	AndExpression	xclass && ( xclass_has_prop || ! should_flip_negation || ( options & PCRE_UCP ) != 0 )		908484	0		&&			
ANR	911702	Identifier	xclass		908484	0					
ANR	911703	OrExpression	xclass_has_prop || ! should_flip_negation || ( options & PCRE_UCP ) != 0		908484	1		||			
ANR	911704	Identifier	xclass_has_prop		908484	0					
ANR	911705	OrExpression	! should_flip_negation || ( options & PCRE_UCP ) != 0		908484	1		||			
ANR	911706	UnaryOperationExpression	! should_flip_negation		908484	0					
ANR	911707	UnaryOperator	!		908484	0					
ANR	911708	Identifier	should_flip_negation		908484	1					
ANR	911709	EqualityExpression	( options & PCRE_UCP ) != 0		908484	1		!=			
ANR	911710	BitAndExpression	options & PCRE_UCP		908484	0		&			
ANR	911711	Identifier	options		908484	0					
ANR	911712	Identifier	PCRE_UCP		908484	1					
ANR	911713	PrimaryExpression	0		908484	1					
ANR	911714	CompoundStatement		1085:6:37763:37763	908484	1					
ANR	911715	ExpressionStatement	* class_uchardata ++ = XCL_END	5543:6:177647:177675	908484	0	True				
ANR	911716	AssignmentExpression	* class_uchardata ++ = XCL_END		908484	0		=			
ANR	911717	UnaryOperationExpression	* class_uchardata ++		908484	0					
ANR	911718	UnaryOperator	*		908484	0					
ANR	911719	PostIncDecOperationExpression	class_uchardata ++		908484	1					
ANR	911720	Identifier	class_uchardata		908484	0					
ANR	911721	IncDec	++		908484	1					
ANR	911722	Identifier	XCL_END		908484	1					
ANR	911723	ExpressionStatement	* code ++ = OP_XCLASS	5544:6:177720:177739	908484	1	True				
ANR	911724	AssignmentExpression	* code ++ = OP_XCLASS		908484	0		=			
ANR	911725	UnaryOperationExpression	* code ++		908484	0					
ANR	911726	UnaryOperator	*		908484	0					
ANR	911727	PostIncDecOperationExpression	code ++		908484	1					
ANR	911728	Identifier	code		908484	0					
ANR	911729	IncDec	++		908484	1					
ANR	911730	Identifier	OP_XCLASS		908484	1					
ANR	911731	ExpressionStatement	code += LINK_SIZE	5545:6:177747:177764	908484	2	True				
ANR	911732	AssignmentExpression	code += LINK_SIZE		908484	0		+=			
ANR	911733	Identifier	code		908484	0					
ANR	911734	Identifier	LINK_SIZE		908484	1					
ANR	911735	ExpressionStatement	* code = negate_class ? XCL_NOT : 0	5546:6:177772:177803	908484	3	True				
ANR	911736	AssignmentExpression	* code = negate_class ? XCL_NOT : 0		908484	0		=			
ANR	911737	UnaryOperationExpression	* code		908484	0					
ANR	911738	UnaryOperator	*		908484	0					
ANR	911739	Identifier	code		908484	1					
ANR	911740	ConditionalExpression	negate_class ? XCL_NOT : 0		908484	1					
ANR	911741	Condition	negate_class		908484	0					
ANR	911742	Identifier	negate_class		908484	0					
ANR	911743	Identifier	XCL_NOT		908484	1					
ANR	911744	PrimaryExpression	0		908484	2					
ANR	911745	IfStatement	if ( xclass_has_prop )		908484	4					
ANR	911746	Condition	xclass_has_prop	5547:10:177815:177829	908484	0	True				
ANR	911747	Identifier	xclass_has_prop		908484	0					
ANR	911748	ExpressionStatement	* code |= XCL_HASPROP	5547:27:177832:177852	908484	1	True				
ANR	911749	AssignmentExpression	* code |= XCL_HASPROP		908484	0		|=			
ANR	911750	UnaryOperationExpression	* code		908484	0					
ANR	911751	UnaryOperator	*		908484	0					
ANR	911752	Identifier	code		908484	1					
ANR	911753	Identifier	XCL_HASPROP		908484	1					
ANR	911754	IfStatement	if ( class_has_8bitchar > 0 )		908484	5					
ANR	911755	Condition	class_has_8bitchar > 0	5552:10:178019:178040	908484	0	True				
ANR	911756	RelationalExpression	class_has_8bitchar > 0		908484	0		>			
ANR	911757	Identifier	class_has_8bitchar		908484	0					
ANR	911758	PrimaryExpression	0		908484	1					
ANR	911759	CompoundStatement		1096:8:38175:38175	908484	1					
ANR	911760	ExpressionStatement	* code ++ |= XCL_MAP	5554:8:178061:178079	908484	0	True				
ANR	911761	AssignmentExpression	* code ++ |= XCL_MAP		908484	0		|=			
ANR	911762	UnaryOperationExpression	* code ++		908484	0					
ANR	911763	UnaryOperator	*		908484	0					
ANR	911764	PostIncDecOperationExpression	code ++		908484	1					
ANR	911765	Identifier	code		908484	0					
ANR	911766	IncDec	++		908484	1					
ANR	911767	Identifier	XCL_MAP		908484	1					
ANR	911768	ExpressionStatement	"memmove ( code + ( 32 / sizeof ( pcre_uchar ) ) , code , IN_UCHARS ( class_uchardata - code ) )"	5555:8:178089:178181	908484	1	True				
ANR	911769	CallExpression	"memmove ( code + ( 32 / sizeof ( pcre_uchar ) ) , code , IN_UCHARS ( class_uchardata - code ) )"		908484	0					
ANR	911770	Callee	memmove		908484	0					
ANR	911771	Identifier	memmove		908484	0					
ANR	911772	ArgumentList	code + ( 32 / sizeof ( pcre_uchar ) )		908484	1					
ANR	911773	Argument	code + ( 32 / sizeof ( pcre_uchar ) )		908484	0					
ANR	911774	AdditiveExpression	code + ( 32 / sizeof ( pcre_uchar ) )		908484	0		+			
ANR	911775	Identifier	code		908484	0					
ANR	911776	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		908484	1		/			
ANR	911777	PrimaryExpression	32		908484	0					
ANR	911778	SizeofExpression	sizeof ( pcre_uchar )		908484	1					
ANR	911779	Sizeof	sizeof		908484	0					
ANR	911780	SizeofOperand	pcre_uchar		908484	1					
ANR	911781	Argument	code		908484	1					
ANR	911782	Identifier	code		908484	0					
ANR	911783	Argument	IN_UCHARS ( class_uchardata - code )		908484	2					
ANR	911784	CallExpression	IN_UCHARS ( class_uchardata - code )		908484	0					
ANR	911785	Callee	IN_UCHARS		908484	0					
ANR	911786	Identifier	IN_UCHARS		908484	0					
ANR	911787	ArgumentList	class_uchardata - code		908484	1					
ANR	911788	Argument	class_uchardata - code		908484	0					
ANR	911789	AdditiveExpression	class_uchardata - code		908484	0		-			
ANR	911790	Identifier	class_uchardata		908484	0					
ANR	911791	Identifier	code		908484	1					
ANR	911792	IfStatement	if ( negate_class && ! xclass_has_prop )		908484	2					
ANR	911793	Condition	negate_class && ! xclass_has_prop	5557:12:178195:178226	908484	0	True				
ANR	911794	AndExpression	negate_class && ! xclass_has_prop		908484	0		&&			
ANR	911795	Identifier	negate_class		908484	0					
ANR	911796	UnaryOperationExpression	! xclass_has_prop		908484	1					
ANR	911797	UnaryOperator	!		908484	0					
ANR	911798	Identifier	xclass_has_prop		908484	1					
ANR	911799	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	1					
ANR	911800	ForInit	c = 0 ;	5558:15:178244:178249	908484	0	True				
ANR	911801	AssignmentExpression	c = 0		908484	0		=			
ANR	911802	Identifier	c		908484	0					
ANR	911803	PrimaryExpression	0		908484	1					
ANR	911804	Condition	c < 32	5558:22:178251:178256	908484	1	True				
ANR	911805	RelationalExpression	c < 32		908484	0		<			
ANR	911806	Identifier	c		908484	0					
ANR	911807	PrimaryExpression	32		908484	1					
ANR	911808	PostIncDecOperationExpression	c ++	5558:30:178259:178261	908484	2	True				
ANR	911809	Identifier	c		908484	0					
ANR	911810	IncDec	++		908484	1					
ANR	911811	ExpressionStatement	classbits [ c ] = ~classbits [ c ]	5558:35:178264:178292	908484	3	True				
ANR	911812	AssignmentExpression	classbits [ c ] = ~classbits [ c ]		908484	0		=			
ANR	911813	ArrayIndexing	classbits [ c ]		908484	0					
ANR	911814	Identifier	classbits		908484	0					
ANR	911815	Identifier	c		908484	1					
ANR	911816	ArrayIndexing	~classbits [ c ]		908484	1					
ANR	911817	Identifier	~classbits		908484	0					
ANR	911818	Identifier	c		908484	1					
ANR	911819	ExpressionStatement	"memcpy ( code , classbits , 32 )"	5559:8:178302:178329	908484	3	True				
ANR	911820	CallExpression	"memcpy ( code , classbits , 32 )"		908484	0					
ANR	911821	Callee	memcpy		908484	0					
ANR	911822	Identifier	memcpy		908484	0					
ANR	911823	ArgumentList	code		908484	1					
ANR	911824	Argument	code		908484	0					
ANR	911825	Identifier	code		908484	0					
ANR	911826	Argument	classbits		908484	1					
ANR	911827	Identifier	classbits		908484	0					
ANR	911828	Argument	32		908484	2					
ANR	911829	PrimaryExpression	32		908484	0					
ANR	911830	ExpressionStatement	code = class_uchardata + ( 32 / sizeof ( pcre_uchar ) )	5560:8:178339:178389	908484	4	True				
ANR	911831	AssignmentExpression	code = class_uchardata + ( 32 / sizeof ( pcre_uchar ) )		908484	0		=			
ANR	911832	Identifier	code		908484	0					
ANR	911833	AdditiveExpression	class_uchardata + ( 32 / sizeof ( pcre_uchar ) )		908484	1		+			
ANR	911834	Identifier	class_uchardata		908484	0					
ANR	911835	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		908484	1		/			
ANR	911836	PrimaryExpression	32		908484	0					
ANR	911837	SizeofExpression	sizeof ( pcre_uchar )		908484	1					
ANR	911838	Sizeof	sizeof		908484	0					
ANR	911839	SizeofOperand	pcre_uchar		908484	1					
ANR	911840	ElseStatement	else		908484	0					
ANR	911841	ExpressionStatement	code = class_uchardata	5562:11:178412:178434	908484	0	True				
ANR	911842	AssignmentExpression	code = class_uchardata		908484	0		=			
ANR	911843	Identifier	code		908484	0					
ANR	911844	Identifier	class_uchardata		908484	1					
ANR	911845	ExpressionStatement	"PUT ( previous , 1 , ( int ) ( code - previous ) )"	5566:6:178500:178540	908484	6	True				
ANR	911846	CallExpression	"PUT ( previous , 1 , ( int ) ( code - previous ) )"		908484	0					
ANR	911847	Callee	PUT		908484	0					
ANR	911848	Identifier	PUT		908484	0					
ANR	911849	ArgumentList	previous		908484	1					
ANR	911850	Argument	previous		908484	0					
ANR	911851	Identifier	previous		908484	0					
ANR	911852	Argument	1		908484	1					
ANR	911853	PrimaryExpression	1		908484	0					
ANR	911854	Argument	( int ) ( code - previous )		908484	2					
ANR	911855	CastExpression	( int ) ( code - previous )		908484	0					
ANR	911856	CastTarget	int		908484	0					
ANR	911857	AdditiveExpression	code - previous		908484	1		-			
ANR	911858	Identifier	code		908484	0					
ANR	911859	Identifier	previous		908484	1					
ANR	911860	BreakStatement	break ;	5567:6:178548:178553	908484	7	True				
ANR	911861	IfStatement	if ( lengthptr != NULL )		908484	58					
ANR	911862	Condition	lengthptr != NULL	5573:8:178693:178709	908484	0	True				
ANR	911863	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	911864	Identifier	lengthptr		908484	0					
ANR	911865	Identifier	NULL		908484	1					
ANR	911866	ExpressionStatement	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )	5574:6:178718:178777	908484	1	True				
ANR	911867	AssignmentExpression	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )		908484	0		+=			
ANR	911868	UnaryOperationExpression	* lengthptr		908484	0					
ANR	911869	UnaryOperator	*		908484	0					
ANR	911870	Identifier	lengthptr		908484	1					
ANR	911871	CastExpression	( int ) ( class_uchardata - class_uchardata_base )		908484	1					
ANR	911872	CastTarget	int		908484	0					
ANR	911873	AdditiveExpression	class_uchardata - class_uchardata_base		908484	1		-			
ANR	911874	Identifier	class_uchardata		908484	0					
ANR	911875	Identifier	class_uchardata_base		908484	1					
ANR	911876	ExpressionStatement	* code ++ = ( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS	5583:4:179136:179207	908484	59	True				
ANR	911877	AssignmentExpression	* code ++ = ( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS		908484	0		=			
ANR	911878	UnaryOperationExpression	* code ++		908484	0					
ANR	911879	UnaryOperator	*		908484	0					
ANR	911880	PostIncDecOperationExpression	code ++		908484	1					
ANR	911881	Identifier	code		908484	0					
ANR	911882	IncDec	++		908484	1					
ANR	911883	ConditionalExpression	( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS		908484	1					
ANR	911884	Condition	negate_class == should_flip_negation		908484	0					
ANR	911885	EqualityExpression	negate_class == should_flip_negation		908484	0		==			
ANR	911886	Identifier	negate_class		908484	0					
ANR	911887	Identifier	should_flip_negation		908484	1					
ANR	911888	Identifier	OP_CLASS		908484	1					
ANR	911889	Identifier	OP_NCLASS		908484	2					
ANR	911890	IfStatement	if ( lengthptr == NULL )		908484	60					
ANR	911891	Condition	lengthptr == NULL	5584:8:179217:179233	908484	0	True				
ANR	911892	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	911893	Identifier	lengthptr		908484	0					
ANR	911894	Identifier	NULL		908484	1					
ANR	911895	CompoundStatement		1128:6:39410:39410	908484	1					
ANR	911896	IfStatement	if ( negate_class )		908484	0					
ANR	911897	Condition	negate_class	5586:10:179298:179309	908484	0	True				
ANR	911898	Identifier	negate_class		908484	0					
ANR	911899	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		908484	1					
ANR	911900	ForInit	c = 0 ;	5587:13:179325:179330	908484	0	True				
ANR	911901	AssignmentExpression	c = 0		908484	0		=			
ANR	911902	Identifier	c		908484	0					
ANR	911903	PrimaryExpression	0		908484	1					
ANR	911904	Condition	c < 32	5587:20:179332:179337	908484	1	True				
ANR	911905	RelationalExpression	c < 32		908484	0		<			
ANR	911906	Identifier	c		908484	0					
ANR	911907	PrimaryExpression	32		908484	1					
ANR	911908	PostIncDecOperationExpression	c ++	5587:28:179340:179342	908484	2	True				
ANR	911909	Identifier	c		908484	0					
ANR	911910	IncDec	++		908484	1					
ANR	911911	ExpressionStatement	classbits [ c ] = ~classbits [ c ]	5587:33:179345:179373	908484	3	True				
ANR	911912	AssignmentExpression	classbits [ c ] = ~classbits [ c ]		908484	0		=			
ANR	911913	ArrayIndexing	classbits [ c ]		908484	0					
ANR	911914	Identifier	classbits		908484	0					
ANR	911915	Identifier	c		908484	1					
ANR	911916	ArrayIndexing	~classbits [ c ]		908484	1					
ANR	911917	Identifier	~classbits		908484	0					
ANR	911918	Identifier	c		908484	1					
ANR	911919	ExpressionStatement	"memcpy ( code , classbits , 32 )"	5588:6:179381:179408	908484	1	True				
ANR	911920	CallExpression	"memcpy ( code , classbits , 32 )"		908484	0					
ANR	911921	Callee	memcpy		908484	0					
ANR	911922	Identifier	memcpy		908484	0					
ANR	911923	ArgumentList	code		908484	1					
ANR	911924	Argument	code		908484	0					
ANR	911925	Identifier	code		908484	0					
ANR	911926	Argument	classbits		908484	1					
ANR	911927	Identifier	classbits		908484	0					
ANR	911928	Argument	32		908484	2					
ANR	911929	PrimaryExpression	32		908484	0					
ANR	911930	ExpressionStatement	code += 32 / sizeof ( pcre_uchar )	5590:4:179422:179453	908484	61	True				
ANR	911931	AssignmentExpression	code += 32 / sizeof ( pcre_uchar )		908484	0		+=			
ANR	911932	Identifier	code		908484	0					
ANR	911933	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		908484	1		/			
ANR	911934	PrimaryExpression	32		908484	0					
ANR	911935	SizeofExpression	sizeof ( pcre_uchar )		908484	1					
ANR	911936	Sizeof	sizeof		908484	0					
ANR	911937	SizeofOperand	pcre_uchar		908484	1					
ANR	911938	Label	END_CLASS :	5592:4:179460:179469	908484	62	True				
ANR	911939	Identifier	END_CLASS		908484	0					
ANR	911940	BreakStatement	break ;	5593:4:179475:179480	908484	63	True				
ANR	911941	Label	case CHAR_LEFT_CURLY_BRACKET :	5600:4:179674:179702	908484	64	True				
ANR	911942	Identifier	CHAR_LEFT_CURLY_BRACKET		908484	0					
ANR	911943	IfStatement	if ( ! is_quantifier )		908484	65					
ANR	911944	Condition	! is_quantifier	5601:8:179712:179725	908484	0	True				
ANR	911945	UnaryOperationExpression	! is_quantifier		908484	0					
ANR	911946	UnaryOperator	!		908484	0					
ANR	911947	Identifier	is_quantifier		908484	1					
ANR	911948	GotoStatement	goto NORMAL_CHAR ;	5601:24:179728:179744	908484	1	True				
ANR	911949	Identifier	NORMAL_CHAR		908484	0					
ANR	911950	ExpressionStatement	"ptr = read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"	5602:4:179750:179821	908484	66	True				
ANR	911951	AssignmentExpression	"ptr = read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"		908484	0		=			
ANR	911952	Identifier	ptr		908484	0					
ANR	911953	CallExpression	"read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"		908484	1					
ANR	911954	Callee	read_repeat_counts		908484	0					
ANR	911955	Identifier	read_repeat_counts		908484	0					
ANR	911956	ArgumentList	ptr + 1		908484	1					
ANR	911957	Argument	ptr + 1		908484	0					
ANR	911958	AdditiveExpression	ptr + 1		908484	0		+			
ANR	911959	Identifier	ptr		908484	0					
ANR	911960	PrimaryExpression	1		908484	1					
ANR	911961	Argument	& repeat_min		908484	1					
ANR	911962	UnaryOperationExpression	& repeat_min		908484	0					
ANR	911963	UnaryOperator	&		908484	0					
ANR	911964	Identifier	repeat_min		908484	1					
ANR	911965	Argument	& repeat_max		908484	2					
ANR	911966	UnaryOperationExpression	& repeat_max		908484	0					
ANR	911967	UnaryOperator	&		908484	0					
ANR	911968	Identifier	repeat_max		908484	1					
ANR	911969	Argument	errorcodeptr		908484	3					
ANR	911970	Identifier	errorcodeptr		908484	0					
ANR	911971	IfStatement	if ( * errorcodeptr != 0 )		908484	67					
ANR	911972	Condition	* errorcodeptr != 0	5603:8:179831:179848	908484	0	True				
ANR	911973	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	911974	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	911975	UnaryOperator	*		908484	0					
ANR	911976	Identifier	errorcodeptr		908484	1					
ANR	911977	PrimaryExpression	0		908484	1					
ANR	911978	GotoStatement	goto FAILED ;	5603:28:179851:179862	908484	1	True				
ANR	911979	Identifier	FAILED		908484	0					
ANR	911980	GotoStatement	goto REPEAT ;	5604:4:179868:179879	908484	68	True				
ANR	911981	Identifier	REPEAT		908484	0					
ANR	911982	Label	case CHAR_ASTERISK :	5606:4:179886:179904	908484	69	True				
ANR	911983	Identifier	CHAR_ASTERISK		908484	0					
ANR	911984	ExpressionStatement	repeat_min = 0	5607:4:179910:179924	908484	70	True				
ANR	911985	AssignmentExpression	repeat_min = 0		908484	0		=			
ANR	911986	Identifier	repeat_min		908484	0					
ANR	911987	PrimaryExpression	0		908484	1					
ANR	911988	ExpressionStatement	repeat_max = - 1	5608:4:179930:179945	908484	71	True				
ANR	911989	AssignmentExpression	repeat_max = - 1		908484	0		=			
ANR	911990	Identifier	repeat_max		908484	0					
ANR	911991	UnaryOperationExpression	- 1		908484	1					
ANR	911992	UnaryOperator	-		908484	0					
ANR	911993	PrimaryExpression	1		908484	1					
ANR	911994	GotoStatement	goto REPEAT ;	5609:4:179951:179962	908484	72	True				
ANR	911995	Identifier	REPEAT		908484	0					
ANR	911996	Label	case CHAR_PLUS :	5611:4:179969:179983	908484	73	True				
ANR	911997	Identifier	CHAR_PLUS		908484	0					
ANR	911998	ExpressionStatement	repeat_min = 1	5612:4:179989:180003	908484	74	True				
ANR	911999	AssignmentExpression	repeat_min = 1		908484	0		=			
ANR	912000	Identifier	repeat_min		908484	0					
ANR	912001	PrimaryExpression	1		908484	1					
ANR	912002	ExpressionStatement	repeat_max = - 1	5613:4:180009:180024	908484	75	True				
ANR	912003	AssignmentExpression	repeat_max = - 1		908484	0		=			
ANR	912004	Identifier	repeat_max		908484	0					
ANR	912005	UnaryOperationExpression	- 1		908484	1					
ANR	912006	UnaryOperator	-		908484	0					
ANR	912007	PrimaryExpression	1		908484	1					
ANR	912008	GotoStatement	goto REPEAT ;	5614:4:180030:180041	908484	76	True				
ANR	912009	Identifier	REPEAT		908484	0					
ANR	912010	Label	case CHAR_QUESTION_MARK :	5616:4:180048:180071	908484	77	True				
ANR	912011	Identifier	CHAR_QUESTION_MARK		908484	0					
ANR	912012	ExpressionStatement	repeat_min = 0	5617:4:180077:180091	908484	78	True				
ANR	912013	AssignmentExpression	repeat_min = 0		908484	0		=			
ANR	912014	Identifier	repeat_min		908484	0					
ANR	912015	PrimaryExpression	0		908484	1					
ANR	912016	ExpressionStatement	repeat_max = 1	5618:4:180097:180111	908484	79	True				
ANR	912017	AssignmentExpression	repeat_max = 1		908484	0		=			
ANR	912018	Identifier	repeat_max		908484	0					
ANR	912019	PrimaryExpression	1		908484	1					
ANR	912020	Label	REPEAT :	5620:4:180118:180124	908484	80	True				
ANR	912021	Identifier	REPEAT		908484	0					
ANR	912022	IfStatement	if ( previous == NULL )		908484	81					
ANR	912023	Condition	previous == NULL	5621:8:180134:180149	908484	0	True				
ANR	912024	EqualityExpression	previous == NULL		908484	0		==			
ANR	912025	Identifier	previous		908484	0					
ANR	912026	Identifier	NULL		908484	1					
ANR	912027	CompoundStatement		1165:6:40282:40282	908484	1					
ANR	912028	ExpressionStatement	* errorcodeptr = ERR9	5623:6:180166:180186	908484	0	True				
ANR	912029	AssignmentExpression	* errorcodeptr = ERR9		908484	0		=			
ANR	912030	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	912031	UnaryOperator	*		908484	0					
ANR	912032	Identifier	errorcodeptr		908484	1					
ANR	912033	Identifier	ERR9		908484	1					
ANR	912034	GotoStatement	goto FAILED ;	5624:6:180194:180205	908484	1	True				
ANR	912035	Identifier	FAILED		908484	0					
ANR	912036	IfStatement	if ( repeat_min == 0 )		908484	82					
ANR	912037	Condition	repeat_min == 0	5627:8:180224:180238	908484	0	True				
ANR	912038	EqualityExpression	repeat_min == 0		908484	0		==			
ANR	912039	Identifier	repeat_min		908484	0					
ANR	912040	PrimaryExpression	0		908484	1					
ANR	912041	CompoundStatement		1171:6:40371:40371	908484	1					
ANR	912042	ExpressionStatement	firstchar = zerofirstchar	5629:6:180255:180280	908484	0	True				
ANR	912043	AssignmentExpression	firstchar = zerofirstchar		908484	0		=			
ANR	912044	Identifier	firstchar		908484	0					
ANR	912045	Identifier	zerofirstchar		908484	1					
ANR	912046	ExpressionStatement	firstcharflags = zerofirstcharflags	5630:6:180320:180355	908484	1	True				
ANR	912047	AssignmentExpression	firstcharflags = zerofirstcharflags		908484	0		=			
ANR	912048	Identifier	firstcharflags		908484	0					
ANR	912049	Identifier	zerofirstcharflags		908484	1					
ANR	912050	ExpressionStatement	reqchar = zeroreqchar	5631:6:180363:180384	908484	2	True				
ANR	912051	AssignmentExpression	reqchar = zeroreqchar		908484	0		=			
ANR	912052	Identifier	reqchar		908484	0					
ANR	912053	Identifier	zeroreqchar		908484	1					
ANR	912054	ExpressionStatement	reqcharflags = zeroreqcharflags	5632:6:180411:180442	908484	3	True				
ANR	912055	AssignmentExpression	reqcharflags = zeroreqcharflags		908484	0		=			
ANR	912056	Identifier	reqcharflags		908484	0					
ANR	912057	Identifier	zeroreqcharflags		908484	1					
ANR	912058	ExpressionStatement	reqvary = ( repeat_min == repeat_max ) ? 0 : REQ_VARY	5637:4:180518:180568	908484	83	True				
ANR	912059	AssignmentExpression	reqvary = ( repeat_min == repeat_max ) ? 0 : REQ_VARY		908484	0		=			
ANR	912060	Identifier	reqvary		908484	0					
ANR	912061	ConditionalExpression	( repeat_min == repeat_max ) ? 0 : REQ_VARY		908484	1					
ANR	912062	Condition	repeat_min == repeat_max		908484	0					
ANR	912063	EqualityExpression	repeat_min == repeat_max		908484	0		==			
ANR	912064	Identifier	repeat_min		908484	0					
ANR	912065	Identifier	repeat_max		908484	1					
ANR	912066	PrimaryExpression	0		908484	1					
ANR	912067	Identifier	REQ_VARY		908484	2					
ANR	912068	ExpressionStatement	op_type = 0	5639:4:180575:180586	908484	84	True				
ANR	912069	AssignmentExpression	op_type = 0		908484	0		=			
ANR	912070	Identifier	op_type		908484	0					
ANR	912071	PrimaryExpression	0		908484	1					
ANR	912072	ExpressionStatement	possessive_quantifier = FALSE	5640:4:180646:180675	908484	85	True				
ANR	912073	AssignmentExpression	possessive_quantifier = FALSE		908484	0		=			
ANR	912074	Identifier	possessive_quantifier		908484	0					
ANR	912075	Identifier	FALSE		908484	1					
ANR	912076	ExpressionStatement	tempcode = previous	5645:4:180837:180856	908484	86	True				
ANR	912077	AssignmentExpression	tempcode = previous		908484	0		=			
ANR	912078	Identifier	tempcode		908484	0					
ANR	912079	Identifier	previous		908484	1					
ANR	912080	IfStatement	if ( ( options & PCRE_EXTENDED ) != 0 )		908484	87					
ANR	912081	Condition	( options & PCRE_EXTENDED ) != 0	5651:8:181037:181066	908484	0	True				
ANR	912082	EqualityExpression	( options & PCRE_EXTENDED ) != 0		908484	0		!=			
ANR	912083	BitAndExpression	options & PCRE_EXTENDED		908484	0		&			
ANR	912084	Identifier	options		908484	0					
ANR	912085	Identifier	PCRE_EXTENDED		908484	1					
ANR	912086	PrimaryExpression	0		908484	1					
ANR	912087	CompoundStatement		1196:6:41207:41236	908484	1					
ANR	912088	IdentifierDeclStatement	const pcre_uchar * p = ptr + 1 ;	5653:6:181083:181112	908484	0	True				
ANR	912089	IdentifierDecl	* p = ptr + 1		908484	0					
ANR	912090	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	912091	Identifier	p		908484	1					
ANR	912092	AssignmentExpression	* p = ptr + 1		908484	2		=			
ANR	912093	Identifier	p		908484	0					
ANR	912094	AdditiveExpression	ptr + 1		908484	1		+			
ANR	912095	Identifier	ptr		908484	0					
ANR	912096	PrimaryExpression	1		908484	1					
ANR	912097	ForStatement	for ( ; ; )		908484	1					
ANR	912098	CompoundStatement		1198:8:41261:41261	908484	0					
ANR	912099	WhileStatement	while ( MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0 )		908484	0					
ANR	912100	Condition	MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0	5656:15:181154:181203	908484	0	True				
ANR	912101	AndExpression	MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0		908484	0		&&			
ANR	912102	CallExpression	MAX_255 ( * p )		908484	0					
ANR	912103	Callee	MAX_255		908484	0					
ANR	912104	Identifier	MAX_255		908484	0					
ANR	912105	ArgumentList	* p		908484	1					
ANR	912106	Argument	* p		908484	0					
ANR	912107	UnaryOperationExpression	* p		908484	0					
ANR	912108	UnaryOperator	*		908484	0					
ANR	912109	Identifier	p		908484	1					
ANR	912110	EqualityExpression	( cd -> ctypes [ * p ] & ctype_space ) != 0		908484	1		!=			
ANR	912111	BitAndExpression	cd -> ctypes [ * p ] & ctype_space		908484	0		&			
ANR	912112	ArrayIndexing	cd -> ctypes [ * p ]		908484	0					
ANR	912113	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	912114	Identifier	cd		908484	0					
ANR	912115	Identifier	ctypes		908484	1					
ANR	912116	UnaryOperationExpression	* p		908484	1					
ANR	912117	UnaryOperator	*		908484	0					
ANR	912118	Identifier	p		908484	1					
ANR	912119	Identifier	ctype_space		908484	1					
ANR	912120	PrimaryExpression	0		908484	1					
ANR	912121	ExpressionStatement	p ++	5656:67:181206:181209	908484	1	True				
ANR	912122	PostIncDecOperationExpression	p ++		908484	0					
ANR	912123	Identifier	p		908484	0					
ANR	912124	IncDec	++		908484	1					
ANR	912125	IfStatement	if ( * p != CHAR_NUMBER_SIGN )		908484	1					
ANR	912126	Condition	* p != CHAR_NUMBER_SIGN	5657:12:181223:181244	908484	0	True				
ANR	912127	EqualityExpression	* p != CHAR_NUMBER_SIGN		908484	0		!=			
ANR	912128	UnaryOperationExpression	* p		908484	0					
ANR	912129	UnaryOperator	*		908484	0					
ANR	912130	Identifier	p		908484	1					
ANR	912131	Identifier	CHAR_NUMBER_SIGN		908484	1					
ANR	912132	BreakStatement	break ;	5657:36:181247:181252	908484	1	True				
ANR	912133	ExpressionStatement	p ++	5658:8:181262:181265	908484	2	True				
ANR	912134	PostIncDecOperationExpression	p ++		908484	0					
ANR	912135	Identifier	p		908484	0					
ANR	912136	IncDec	++		908484	1					
ANR	912137	WhileStatement	while ( * p != CHAR_NULL )		908484	3					
ANR	912138	Condition	* p != CHAR_NULL	5659:15:181282:181296	908484	0	True				
ANR	912139	EqualityExpression	* p != CHAR_NULL		908484	0		!=			
ANR	912140	UnaryOperationExpression	* p		908484	0					
ANR	912141	UnaryOperator	*		908484	0					
ANR	912142	Identifier	p		908484	1					
ANR	912143	Identifier	CHAR_NULL		908484	1					
ANR	912144	CompoundStatement		1203:10:41433:41433	908484	1					
ANR	912145	IfStatement	if ( IS_NEWLINE ( p ) )		908484	0					
ANR	912146	Condition	IS_NEWLINE ( p )	5661:14:181325:181337	908484	0	True				
ANR	912147	CallExpression	IS_NEWLINE ( p )		908484	0					
ANR	912148	Callee	IS_NEWLINE		908484	0					
ANR	912149	Identifier	IS_NEWLINE		908484	0					
ANR	912150	ArgumentList	p		908484	1					
ANR	912151	Argument	p		908484	0					
ANR	912152	Identifier	p		908484	0					
ANR	912153	CompoundStatement		1205:12:41526:41526	908484	1					
ANR	912154	ExpressionStatement	p += cd -> nllen	5663:12:181472:181486	908484	0	True				
ANR	912155	AssignmentExpression	p += cd -> nllen		908484	0		+=			
ANR	912156	Identifier	p		908484	0					
ANR	912157	PtrMemberAccess	cd -> nllen		908484	1					
ANR	912158	Identifier	cd		908484	0					
ANR	912159	Identifier	nllen		908484	1					
ANR	912160	BreakStatement	break ;	5664:12:181500:181505	908484	1	True				
ANR	912161	ExpressionStatement	p ++	5666:10:181531:181534	908484	1	True				
ANR	912162	PostIncDecOperationExpression	p ++		908484	0					
ANR	912163	Identifier	p		908484	0					
ANR	912164	IncDec	++		908484	1					
ANR	912165	IfStatement	if ( utf )		908484	2					
ANR	912166	Condition	utf	5668:14:181569:181571	908484	0	True				
ANR	912167	Identifier	utf		908484	0					
ANR	912168	ExpressionStatement	FORWARDCHAR ( p )	5668:19:181574:181588	908484	1	True				
ANR	912169	CallExpression	FORWARDCHAR ( p )		908484	0					
ANR	912170	Callee	FORWARDCHAR		908484	0					
ANR	912171	Identifier	FORWARDCHAR		908484	0					
ANR	912172	ArgumentList	p		908484	1					
ANR	912173	Argument	p		908484	0					
ANR	912174	Identifier	p		908484	0					
ANR	912175	ExpressionStatement	ptr = p - 1	5672:6:181714:181725	908484	2	True				
ANR	912176	AssignmentExpression	ptr = p - 1		908484	0		=			
ANR	912177	Identifier	ptr		908484	0					
ANR	912178	AdditiveExpression	p - 1		908484	1		-			
ANR	912179	Identifier	p		908484	0					
ANR	912180	PrimaryExpression	1		908484	1					
ANR	912181	IfStatement	if ( ptr [ 1 ] == CHAR_PLUS )		908484	88					
ANR	912182	Condition	ptr [ 1 ] == CHAR_PLUS	5681:8:182136:182154	908484	0	True				
ANR	912183	EqualityExpression	ptr [ 1 ] == CHAR_PLUS		908484	0		==			
ANR	912184	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	912185	Identifier	ptr		908484	0					
ANR	912186	PrimaryExpression	1		908484	1					
ANR	912187	Identifier	CHAR_PLUS		908484	1					
ANR	912188	CompoundStatement		1225:6:42287:42287	908484	1					
ANR	912189	ExpressionStatement	repeat_type = 0	5683:6:182171:182186	908484	0	True				
ANR	912190	AssignmentExpression	repeat_type = 0		908484	0		=			
ANR	912191	Identifier	repeat_type		908484	0					
ANR	912192	PrimaryExpression	0		908484	1					
ANR	912193	ExpressionStatement	possessive_quantifier = TRUE	5684:6:182230:182258	908484	1	True				
ANR	912194	AssignmentExpression	possessive_quantifier = TRUE		908484	0		=			
ANR	912195	Identifier	possessive_quantifier		908484	0					
ANR	912196	Identifier	TRUE		908484	1					
ANR	912197	ExpressionStatement	ptr ++	5685:6:182266:182271	908484	2	True				
ANR	912198	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	912199	Identifier	ptr		908484	0					
ANR	912200	IncDec	++		908484	1					
ANR	912201	ElseStatement	else		908484	0					
ANR	912202	IfStatement	if ( ptr [ 1 ] == CHAR_QUESTION_MARK )		908484	0					
ANR	912203	Condition	ptr [ 1 ] == CHAR_QUESTION_MARK	5687:13:182294:182321	908484	0	True				
ANR	912204	EqualityExpression	ptr [ 1 ] == CHAR_QUESTION_MARK		908484	0		==			
ANR	912205	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	912206	Identifier	ptr		908484	0					
ANR	912207	PrimaryExpression	1		908484	1					
ANR	912208	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	912209	CompoundStatement		1231:6:42454:42454	908484	1					
ANR	912210	ExpressionStatement	repeat_type = greedy_non_default	5689:6:182338:182370	908484	0	True				
ANR	912211	AssignmentExpression	repeat_type = greedy_non_default		908484	0		=			
ANR	912212	Identifier	repeat_type		908484	0					
ANR	912213	Identifier	greedy_non_default		908484	1					
ANR	912214	ExpressionStatement	ptr ++	5690:6:182378:182383	908484	1	True				
ANR	912215	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	912216	Identifier	ptr		908484	0					
ANR	912217	IncDec	++		908484	1					
ANR	912218	ElseStatement	else		908484	0					
ANR	912219	ExpressionStatement	repeat_type = greedy_default	5692:9:182402:182430	908484	0	True				
ANR	912220	AssignmentExpression	repeat_type = greedy_default		908484	0		=			
ANR	912221	Identifier	repeat_type		908484	0					
ANR	912222	Identifier	greedy_default		908484	1					
ANR	912223	IfStatement	if ( * previous == OP_RECURSE )		908484	89					
ANR	912224	Condition	* previous == OP_RECURSE	5700:8:182820:182842	908484	0	True				
ANR	912225	EqualityExpression	* previous == OP_RECURSE		908484	0		==			
ANR	912226	UnaryOperationExpression	* previous		908484	0					
ANR	912227	UnaryOperator	*		908484	0					
ANR	912228	Identifier	previous		908484	1					
ANR	912229	Identifier	OP_RECURSE		908484	1					
ANR	912230	CompoundStatement		1244:6:42975:42975	908484	1					
ANR	912231	ExpressionStatement	"memmove ( previous + 1 + LINK_SIZE , previous , IN_UCHARS ( 1 + LINK_SIZE ) )"	5702:6:182859:182928	908484	0	True				
ANR	912232	CallExpression	"memmove ( previous + 1 + LINK_SIZE , previous , IN_UCHARS ( 1 + LINK_SIZE ) )"		908484	0					
ANR	912233	Callee	memmove		908484	0					
ANR	912234	Identifier	memmove		908484	0					
ANR	912235	ArgumentList	previous + 1 + LINK_SIZE		908484	1					
ANR	912236	Argument	previous + 1 + LINK_SIZE		908484	0					
ANR	912237	AdditiveExpression	previous + 1 + LINK_SIZE		908484	0		+			
ANR	912238	Identifier	previous		908484	0					
ANR	912239	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	912240	PrimaryExpression	1		908484	0					
ANR	912241	Identifier	LINK_SIZE		908484	1					
ANR	912242	Argument	previous		908484	1					
ANR	912243	Identifier	previous		908484	0					
ANR	912244	Argument	IN_UCHARS ( 1 + LINK_SIZE )		908484	2					
ANR	912245	CallExpression	IN_UCHARS ( 1 + LINK_SIZE )		908484	0					
ANR	912246	Callee	IN_UCHARS		908484	0					
ANR	912247	Identifier	IN_UCHARS		908484	0					
ANR	912248	ArgumentList	1 + LINK_SIZE		908484	1					
ANR	912249	Argument	1 + LINK_SIZE		908484	0					
ANR	912250	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	912251	PrimaryExpression	1		908484	0					
ANR	912252	Identifier	LINK_SIZE		908484	1					
ANR	912253	ExpressionStatement	* previous = OP_ONCE	5703:6:182936:182955	908484	1	True				
ANR	912254	AssignmentExpression	* previous = OP_ONCE		908484	0		=			
ANR	912255	UnaryOperationExpression	* previous		908484	0					
ANR	912256	UnaryOperator	*		908484	0					
ANR	912257	Identifier	previous		908484	1					
ANR	912258	Identifier	OP_ONCE		908484	1					
ANR	912259	ExpressionStatement	"PUT ( previous , 1 , 2 + 2 * LINK_SIZE )"	5704:6:182963:182996	908484	2	True				
ANR	912260	CallExpression	"PUT ( previous , 1 , 2 + 2 * LINK_SIZE )"		908484	0					
ANR	912261	Callee	PUT		908484	0					
ANR	912262	Identifier	PUT		908484	0					
ANR	912263	ArgumentList	previous		908484	1					
ANR	912264	Argument	previous		908484	0					
ANR	912265	Identifier	previous		908484	0					
ANR	912266	Argument	1		908484	1					
ANR	912267	PrimaryExpression	1		908484	0					
ANR	912268	Argument	2 + 2 * LINK_SIZE		908484	2					
ANR	912269	AdditiveExpression	2 + 2 * LINK_SIZE		908484	0		+			
ANR	912270	PrimaryExpression	2		908484	0					
ANR	912271	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912272	PrimaryExpression	2		908484	0					
ANR	912273	Identifier	LINK_SIZE		908484	1					
ANR	912274	ExpressionStatement	previous [ 2 + 2 * LINK_SIZE ] = OP_KET	5705:6:183004:183038	908484	3	True				
ANR	912275	AssignmentExpression	previous [ 2 + 2 * LINK_SIZE ] = OP_KET		908484	0		=			
ANR	912276	ArrayIndexing	previous [ 2 + 2 * LINK_SIZE ]		908484	0					
ANR	912277	Identifier	previous		908484	0					
ANR	912278	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	912279	PrimaryExpression	2		908484	0					
ANR	912280	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912281	PrimaryExpression	2		908484	0					
ANR	912282	Identifier	LINK_SIZE		908484	1					
ANR	912283	Identifier	OP_KET		908484	1					
ANR	912284	ExpressionStatement	"PUT ( previous , 3 + 2 * LINK_SIZE , 2 + 2 * LINK_SIZE )"	5706:6:183046:183093	908484	4	True				
ANR	912285	CallExpression	"PUT ( previous , 3 + 2 * LINK_SIZE , 2 + 2 * LINK_SIZE )"		908484	0					
ANR	912286	Callee	PUT		908484	0					
ANR	912287	Identifier	PUT		908484	0					
ANR	912288	ArgumentList	previous		908484	1					
ANR	912289	Argument	previous		908484	0					
ANR	912290	Identifier	previous		908484	0					
ANR	912291	Argument	3 + 2 * LINK_SIZE		908484	1					
ANR	912292	AdditiveExpression	3 + 2 * LINK_SIZE		908484	0		+			
ANR	912293	PrimaryExpression	3		908484	0					
ANR	912294	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912295	PrimaryExpression	2		908484	0					
ANR	912296	Identifier	LINK_SIZE		908484	1					
ANR	912297	Argument	2 + 2 * LINK_SIZE		908484	2					
ANR	912298	AdditiveExpression	2 + 2 * LINK_SIZE		908484	0		+			
ANR	912299	PrimaryExpression	2		908484	0					
ANR	912300	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912301	PrimaryExpression	2		908484	0					
ANR	912302	Identifier	LINK_SIZE		908484	1					
ANR	912303	ExpressionStatement	code += 2 + 2 * LINK_SIZE	5707:6:183101:183126	908484	5	True				
ANR	912304	AssignmentExpression	code += 2 + 2 * LINK_SIZE		908484	0		+=			
ANR	912305	Identifier	code		908484	0					
ANR	912306	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	912307	PrimaryExpression	2		908484	0					
ANR	912308	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912309	PrimaryExpression	2		908484	0					
ANR	912310	Identifier	LINK_SIZE		908484	1					
ANR	912311	ExpressionStatement	length_prevgroup = 3 + 3 * LINK_SIZE	5708:6:183134:183168	908484	6	True				
ANR	912312	AssignmentExpression	length_prevgroup = 3 + 3 * LINK_SIZE		908484	0		=			
ANR	912313	Identifier	length_prevgroup		908484	0					
ANR	912314	AdditiveExpression	3 + 3 * LINK_SIZE		908484	1		+			
ANR	912315	PrimaryExpression	3		908484	0					
ANR	912316	MultiplicativeExpression	3 * LINK_SIZE		908484	1		*			
ANR	912317	PrimaryExpression	3		908484	0					
ANR	912318	Identifier	LINK_SIZE		908484	1					
ANR	912319	IfStatement	if ( lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE )		908484	7					
ANR	912320	Condition	lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE	5713:10:183310:183372	908484	0	True				
ANR	912321	AndExpression	lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE		908484	0		&&			
ANR	912322	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	912323	Identifier	lengthptr		908484	0					
ANR	912324	Identifier	NULL		908484	1					
ANR	912325	RelationalExpression	cd -> hwm >= cd -> start_workspace + LINK_SIZE		908484	1		>=			
ANR	912326	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912327	Identifier	cd		908484	0					
ANR	912328	Identifier	hwm		908484	1					
ANR	912329	AdditiveExpression	cd -> start_workspace + LINK_SIZE		908484	1		+			
ANR	912330	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	912331	Identifier	cd		908484	0					
ANR	912332	Identifier	start_workspace		908484	1					
ANR	912333	Identifier	LINK_SIZE		908484	1					
ANR	912334	CompoundStatement		1258:8:43517:43554	908484	1					
ANR	912335	IdentifierDeclStatement	"int offset = GET ( cd -> hwm , - LINK_SIZE ) ;"	5715:8:183393:183430	908484	0	True				
ANR	912336	IdentifierDecl	"offset = GET ( cd -> hwm , - LINK_SIZE )"		908484	0					
ANR	912337	IdentifierDeclType	int		908484	0					
ANR	912338	Identifier	offset		908484	1					
ANR	912339	AssignmentExpression	"offset = GET ( cd -> hwm , - LINK_SIZE )"		908484	2		=			
ANR	912340	Identifier	offset		908484	0					
ANR	912341	CallExpression	"GET ( cd -> hwm , - LINK_SIZE )"		908484	1					
ANR	912342	Callee	GET		908484	0					
ANR	912343	Identifier	GET		908484	0					
ANR	912344	ArgumentList	cd -> hwm		908484	1					
ANR	912345	Argument	cd -> hwm		908484	0					
ANR	912346	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912347	Identifier	cd		908484	0					
ANR	912348	Identifier	hwm		908484	1					
ANR	912349	Argument	- LINK_SIZE		908484	1					
ANR	912350	UnaryOperationExpression	- LINK_SIZE		908484	0					
ANR	912351	UnaryOperator	-		908484	0					
ANR	912352	Identifier	LINK_SIZE		908484	1					
ANR	912353	IfStatement	if ( offset == previous + 1 - cd -> start_code )		908484	1					
ANR	912354	Condition	offset == previous + 1 - cd -> start_code	5716:12:183444:183482	908484	0	True				
ANR	912355	EqualityExpression	offset == previous + 1 - cd -> start_code		908484	0		==			
ANR	912356	Identifier	offset		908484	0					
ANR	912357	AdditiveExpression	previous + 1 - cd -> start_code		908484	1		+			
ANR	912358	Identifier	previous		908484	0					
ANR	912359	AdditiveExpression	1 - cd -> start_code		908484	1		-			
ANR	912360	PrimaryExpression	1		908484	0					
ANR	912361	PtrMemberAccess	cd -> start_code		908484	1					
ANR	912362	Identifier	cd		908484	0					
ANR	912363	Identifier	start_code		908484	1					
ANR	912364	ExpressionStatement	"PUT ( cd -> hwm , - LINK_SIZE , offset + 1 + LINK_SIZE )"	5717:10:183495:183543	908484	1	True				
ANR	912365	CallExpression	"PUT ( cd -> hwm , - LINK_SIZE , offset + 1 + LINK_SIZE )"		908484	0					
ANR	912366	Callee	PUT		908484	0					
ANR	912367	Identifier	PUT		908484	0					
ANR	912368	ArgumentList	cd -> hwm		908484	1					
ANR	912369	Argument	cd -> hwm		908484	0					
ANR	912370	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912371	Identifier	cd		908484	0					
ANR	912372	Identifier	hwm		908484	1					
ANR	912373	Argument	- LINK_SIZE		908484	1					
ANR	912374	UnaryOperationExpression	- LINK_SIZE		908484	0					
ANR	912375	UnaryOperator	-		908484	0					
ANR	912376	Identifier	LINK_SIZE		908484	1					
ANR	912377	Argument	offset + 1 + LINK_SIZE		908484	2					
ANR	912378	AdditiveExpression	offset + 1 + LINK_SIZE		908484	0		+			
ANR	912379	Identifier	offset		908484	0					
ANR	912380	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	912381	PrimaryExpression	1		908484	0					
ANR	912382	Identifier	LINK_SIZE		908484	1					
ANR	912383	ElseStatement	else		908484	0					
ANR	912384	IfStatement	if ( * previous >= OP_ASSERT && * previous <= OP_COND )		908484	0					
ANR	912385	Condition	* previous >= OP_ASSERT && * previous <= OP_COND	5971:13:192118:192163	908484	0	True				
ANR	912386	AndExpression	* previous >= OP_ASSERT && * previous <= OP_COND		908484	0		&&			
ANR	912387	RelationalExpression	* previous >= OP_ASSERT		908484	0		>=			
ANR	912388	UnaryOperationExpression	* previous		908484	0					
ANR	912389	UnaryOperator	*		908484	0					
ANR	912390	Identifier	previous		908484	1					
ANR	912391	Identifier	OP_ASSERT		908484	1					
ANR	912392	RelationalExpression	* previous <= OP_COND		908484	1		<=			
ANR	912393	UnaryOperationExpression	* previous		908484	0					
ANR	912394	UnaryOperator	*		908484	0					
ANR	912395	Identifier	previous		908484	1					
ANR	912396	Identifier	OP_COND		908484	1					
ANR	912397	CompoundStatement		1520:6:52448:52477	908484	1					
ANR	912398	Statement	register	5973:6:192180:192187	908484	0	True				
ANR	912399	IdentifierDeclStatement	int i ;	5973:15:192189:192194	908484	1	True				
ANR	912400	IdentifierDecl	i		908484	0					
ANR	912401	IdentifierDeclType	int		908484	0					
ANR	912402	Identifier	i		908484	1					
ANR	912403	IdentifierDeclStatement	int len = ( int ) ( code - previous ) ;	5974:6:192202:192234	908484	2	True				
ANR	912404	IdentifierDecl	len = ( int ) ( code - previous )		908484	0					
ANR	912405	IdentifierDeclType	int		908484	0					
ANR	912406	Identifier	len		908484	1					
ANR	912407	AssignmentExpression	len = ( int ) ( code - previous )		908484	2		=			
ANR	912408	Identifier	len		908484	0					
ANR	912409	CastExpression	( int ) ( code - previous )		908484	1					
ANR	912410	CastTarget	int		908484	0					
ANR	912411	AdditiveExpression	code - previous		908484	1		-			
ANR	912412	Identifier	code		908484	0					
ANR	912413	Identifier	previous		908484	1					
ANR	912414	IdentifierDeclStatement	size_t base_hwm_offset = item_hwm_offset ;	5975:6:192242:192282	908484	3	True				
ANR	912415	IdentifierDecl	base_hwm_offset = item_hwm_offset		908484	0					
ANR	912416	IdentifierDeclType	size_t		908484	0					
ANR	912417	Identifier	base_hwm_offset		908484	1					
ANR	912418	AssignmentExpression	base_hwm_offset = item_hwm_offset		908484	2		=			
ANR	912419	Identifier	item_hwm_offset		908484	0					
ANR	912420	Identifier	item_hwm_offset		908484	1					
ANR	912421	IdentifierDeclStatement	pcre_uchar * bralink = NULL ;	5976:6:192290:192316	908484	4	True				
ANR	912422	IdentifierDecl	* bralink = NULL		908484	0					
ANR	912423	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	912424	Identifier	bralink		908484	1					
ANR	912425	AssignmentExpression	* bralink = NULL		908484	2		=			
ANR	912426	Identifier	NULL		908484	0					
ANR	912427	Identifier	NULL		908484	1					
ANR	912428	IdentifierDeclStatement	pcre_uchar * brazeroptr = NULL ;	5977:6:192324:192353	908484	5	True				
ANR	912429	IdentifierDecl	* brazeroptr = NULL		908484	0					
ANR	912430	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	912431	Identifier	brazeroptr		908484	1					
ANR	912432	AssignmentExpression	* brazeroptr = NULL		908484	2		=			
ANR	912433	Identifier	NULL		908484	0					
ANR	912434	Identifier	NULL		908484	1					
ANR	912435	IfStatement	if ( * previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF )		908484	6					
ANR	912436	Condition	* previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF	5982:10:192482:192536	908484	0	True				
ANR	912437	AndExpression	* previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF		908484	0		&&			
ANR	912438	EqualityExpression	* previous == OP_COND		908484	0		==			
ANR	912439	UnaryOperationExpression	* previous		908484	0					
ANR	912440	UnaryOperator	*		908484	0					
ANR	912441	Identifier	previous		908484	1					
ANR	912442	Identifier	OP_COND		908484	1					
ANR	912443	EqualityExpression	previous [ LINK_SIZE + 1 ] == OP_DEF		908484	1		==			
ANR	912444	ArrayIndexing	previous [ LINK_SIZE + 1 ]		908484	0					
ANR	912445	Identifier	previous		908484	0					
ANR	912446	AdditiveExpression	LINK_SIZE + 1		908484	1		+			
ANR	912447	Identifier	LINK_SIZE		908484	0					
ANR	912448	PrimaryExpression	1		908484	1					
ANR	912449	Identifier	OP_DEF		908484	1					
ANR	912450	GotoStatement	goto END_REPEAT ;	5983:8:192547:192562	908484	1	True				
ANR	912451	Identifier	END_REPEAT		908484	0					
ANR	912452	IfStatement	if ( * previous < OP_ONCE )		908484	7					
ANR	912453	Condition	* previous < OP_ONCE	5990:10:192859:192877	908484	0	True				
ANR	912454	RelationalExpression	* previous < OP_ONCE		908484	0		<			
ANR	912455	UnaryOperationExpression	* previous		908484	0					
ANR	912456	UnaryOperator	*		908484	0					
ANR	912457	Identifier	previous		908484	1					
ANR	912458	Identifier	OP_ONCE		908484	1					
ANR	912459	CompoundStatement		1534:8:53031:53031	908484	1					
ANR	912460	IfStatement	if ( repeat_min > 0 )		908484	0					
ANR	912461	Condition	repeat_min > 0	5992:12:192921:192934	908484	0	True				
ANR	912462	RelationalExpression	repeat_min > 0		908484	0		>			
ANR	912463	Identifier	repeat_min		908484	0					
ANR	912464	PrimaryExpression	0		908484	1					
ANR	912465	GotoStatement	goto END_REPEAT ;	5992:28:192937:192952	908484	1	True				
ANR	912466	Identifier	END_REPEAT		908484	0					
ANR	912467	IfStatement	if ( repeat_max < 0 || repeat_max > 1 )		908484	1					
ANR	912468	Condition	repeat_max < 0 || repeat_max > 1	5993:12:192966:192997	908484	0	True				
ANR	912469	OrExpression	repeat_max < 0 || repeat_max > 1		908484	0		||			
ANR	912470	RelationalExpression	repeat_max < 0		908484	0		<			
ANR	912471	Identifier	repeat_max		908484	0					
ANR	912472	PrimaryExpression	0		908484	1					
ANR	912473	RelationalExpression	repeat_max > 1		908484	1		>			
ANR	912474	Identifier	repeat_max		908484	0					
ANR	912475	PrimaryExpression	1		908484	1					
ANR	912476	ExpressionStatement	repeat_max = 1	5993:46:193000:193014	908484	1	True				
ANR	912477	AssignmentExpression	repeat_max = 1		908484	0		=			
ANR	912478	Identifier	repeat_max		908484	0					
ANR	912479	PrimaryExpression	1		908484	1					
ANR	912480	IfStatement	if ( repeat_min == 0 )		908484	8					
ANR	912481	Condition	repeat_min == 0	6003:10:193451:193465	908484	0	True				
ANR	912482	EqualityExpression	repeat_min == 0		908484	0		==			
ANR	912483	Identifier	repeat_min		908484	0					
ANR	912484	PrimaryExpression	0		908484	1					
ANR	912485	CompoundStatement		1547:8:53600:53600	908484	1					
ANR	912486	IfStatement	if ( repeat_max <= 1 )		908484	0					
ANR	912487	Condition	repeat_max <= 1	6027:12:194466:194480	908484	0	True				
ANR	912488	RelationalExpression	repeat_max <= 1		908484	0		<=			
ANR	912489	Identifier	repeat_max		908484	0					
ANR	912490	PrimaryExpression	1		908484	1					
ANR	912491	CompoundStatement		1571:10:54653:54653	908484	1					
ANR	912492	ExpressionStatement	* code = OP_END	6029:10:194541:194555	908484	0	True				
ANR	912493	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	912494	UnaryOperationExpression	* code		908484	0					
ANR	912495	UnaryOperator	*		908484	0					
ANR	912496	Identifier	code		908484	1					
ANR	912497	Identifier	OP_END		908484	1					
ANR	912498	ExpressionStatement	"adjust_recurse ( previous , 1 , utf , cd , item_hwm_offset )"	6030:10:194567:194620	908484	1	True				
ANR	912499	CallExpression	"adjust_recurse ( previous , 1 , utf , cd , item_hwm_offset )"		908484	0					
ANR	912500	Callee	adjust_recurse		908484	0					
ANR	912501	Identifier	adjust_recurse		908484	0					
ANR	912502	ArgumentList	previous		908484	1					
ANR	912503	Argument	previous		908484	0					
ANR	912504	Identifier	previous		908484	0					
ANR	912505	Argument	1		908484	1					
ANR	912506	PrimaryExpression	1		908484	0					
ANR	912507	Argument	utf		908484	2					
ANR	912508	Identifier	utf		908484	0					
ANR	912509	Argument	cd		908484	3					
ANR	912510	Identifier	cd		908484	0					
ANR	912511	Argument	item_hwm_offset		908484	4					
ANR	912512	Identifier	item_hwm_offset		908484	0					
ANR	912513	ExpressionStatement	"memmove ( previous + 1 , previous , IN_UCHARS ( len ) )"	6031:10:194632:194679	908484	2	True				
ANR	912514	CallExpression	"memmove ( previous + 1 , previous , IN_UCHARS ( len ) )"		908484	0					
ANR	912515	Callee	memmove		908484	0					
ANR	912516	Identifier	memmove		908484	0					
ANR	912517	ArgumentList	previous + 1		908484	1					
ANR	912518	Argument	previous + 1		908484	0					
ANR	912519	AdditiveExpression	previous + 1		908484	0		+			
ANR	912520	Identifier	previous		908484	0					
ANR	912521	PrimaryExpression	1		908484	1					
ANR	912522	Argument	previous		908484	1					
ANR	912523	Identifier	previous		908484	0					
ANR	912524	Argument	IN_UCHARS ( len )		908484	2					
ANR	912525	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	912526	Callee	IN_UCHARS		908484	0					
ANR	912527	Identifier	IN_UCHARS		908484	0					
ANR	912528	ArgumentList	len		908484	1					
ANR	912529	Argument	len		908484	0					
ANR	912530	Identifier	len		908484	0					
ANR	912531	ExpressionStatement	code ++	6032:10:194691:194697	908484	3	True				
ANR	912532	PostIncDecOperationExpression	code ++		908484	0					
ANR	912533	Identifier	code		908484	0					
ANR	912534	IncDec	++		908484	1					
ANR	912535	IfStatement	if ( repeat_max == 0 )		908484	4					
ANR	912536	Condition	repeat_max == 0	6033:14:194713:194727	908484	0	True				
ANR	912537	EqualityExpression	repeat_max == 0		908484	0		==			
ANR	912538	Identifier	repeat_max		908484	0					
ANR	912539	PrimaryExpression	0		908484	1					
ANR	912540	CompoundStatement		1577:12:54866:54866	908484	1					
ANR	912541	ExpressionStatement	* previous ++ = OP_SKIPZERO	6035:12:194756:194781	908484	0	True				
ANR	912542	AssignmentExpression	* previous ++ = OP_SKIPZERO		908484	0		=			
ANR	912543	UnaryOperationExpression	* previous ++		908484	0					
ANR	912544	UnaryOperator	*		908484	0					
ANR	912545	PostIncDecOperationExpression	previous ++		908484	1					
ANR	912546	Identifier	previous		908484	0					
ANR	912547	IncDec	++		908484	1					
ANR	912548	Identifier	OP_SKIPZERO		908484	1					
ANR	912549	GotoStatement	goto END_REPEAT ;	6036:12:194795:194810	908484	1	True				
ANR	912550	Identifier	END_REPEAT		908484	0					
ANR	912551	ExpressionStatement	brazeroptr = previous	6038:10:194836:194857	908484	5	True				
ANR	912552	AssignmentExpression	brazeroptr = previous		908484	0		=			
ANR	912553	Identifier	brazeroptr		908484	0					
ANR	912554	Identifier	previous		908484	1					
ANR	912555	ExpressionStatement	* previous ++ = OP_BRAZERO + repeat_type	6039:10:194909:194947	908484	6	True				
ANR	912556	AssignmentExpression	* previous ++ = OP_BRAZERO + repeat_type		908484	0		=			
ANR	912557	UnaryOperationExpression	* previous ++		908484	0					
ANR	912558	UnaryOperator	*		908484	0					
ANR	912559	PostIncDecOperationExpression	previous ++		908484	1					
ANR	912560	Identifier	previous		908484	0					
ANR	912561	IncDec	++		908484	1					
ANR	912562	AdditiveExpression	OP_BRAZERO + repeat_type		908484	1		+			
ANR	912563	Identifier	OP_BRAZERO		908484	0					
ANR	912564	Identifier	repeat_type		908484	1					
ANR	912565	ElseStatement	else		908484	0					
ANR	912566	CompoundStatement		1595:10:55660:55670	908484	0					
ANR	912567	IdentifierDeclStatement	int offset ;	6052:10:195536:195546	908484	0	True				
ANR	912568	IdentifierDecl	offset		908484	0					
ANR	912569	IdentifierDeclType	int		908484	0					
ANR	912570	Identifier	offset		908484	1					
ANR	912571	ExpressionStatement	* code = OP_END	6053:10:195558:195572	908484	1	True				
ANR	912572	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	912573	UnaryOperationExpression	* code		908484	0					
ANR	912574	UnaryOperator	*		908484	0					
ANR	912575	Identifier	code		908484	1					
ANR	912576	Identifier	OP_END		908484	1					
ANR	912577	ExpressionStatement	"adjust_recurse ( previous , 2 + LINK_SIZE , utf , cd , item_hwm_offset )"	6054:10:195584:195649	908484	2	True				
ANR	912578	CallExpression	"adjust_recurse ( previous , 2 + LINK_SIZE , utf , cd , item_hwm_offset )"		908484	0					
ANR	912579	Callee	adjust_recurse		908484	0					
ANR	912580	Identifier	adjust_recurse		908484	0					
ANR	912581	ArgumentList	previous		908484	1					
ANR	912582	Argument	previous		908484	0					
ANR	912583	Identifier	previous		908484	0					
ANR	912584	Argument	2 + LINK_SIZE		908484	1					
ANR	912585	AdditiveExpression	2 + LINK_SIZE		908484	0		+			
ANR	912586	PrimaryExpression	2		908484	0					
ANR	912587	Identifier	LINK_SIZE		908484	1					
ANR	912588	Argument	utf		908484	2					
ANR	912589	Identifier	utf		908484	0					
ANR	912590	Argument	cd		908484	3					
ANR	912591	Identifier	cd		908484	0					
ANR	912592	Argument	item_hwm_offset		908484	4					
ANR	912593	Identifier	item_hwm_offset		908484	0					
ANR	912594	ExpressionStatement	"memmove ( previous + 2 + LINK_SIZE , previous , IN_UCHARS ( len ) )"	6055:10:195661:195720	908484	3	True				
ANR	912595	CallExpression	"memmove ( previous + 2 + LINK_SIZE , previous , IN_UCHARS ( len ) )"		908484	0					
ANR	912596	Callee	memmove		908484	0					
ANR	912597	Identifier	memmove		908484	0					
ANR	912598	ArgumentList	previous + 2 + LINK_SIZE		908484	1					
ANR	912599	Argument	previous + 2 + LINK_SIZE		908484	0					
ANR	912600	AdditiveExpression	previous + 2 + LINK_SIZE		908484	0		+			
ANR	912601	Identifier	previous		908484	0					
ANR	912602	AdditiveExpression	2 + LINK_SIZE		908484	1		+			
ANR	912603	PrimaryExpression	2		908484	0					
ANR	912604	Identifier	LINK_SIZE		908484	1					
ANR	912605	Argument	previous		908484	1					
ANR	912606	Identifier	previous		908484	0					
ANR	912607	Argument	IN_UCHARS ( len )		908484	2					
ANR	912608	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	912609	Callee	IN_UCHARS		908484	0					
ANR	912610	Identifier	IN_UCHARS		908484	0					
ANR	912611	ArgumentList	len		908484	1					
ANR	912612	Argument	len		908484	0					
ANR	912613	Identifier	len		908484	0					
ANR	912614	ExpressionStatement	code += 2 + LINK_SIZE	6056:10:195732:195753	908484	4	True				
ANR	912615	AssignmentExpression	code += 2 + LINK_SIZE		908484	0		+=			
ANR	912616	Identifier	code		908484	0					
ANR	912617	AdditiveExpression	2 + LINK_SIZE		908484	1		+			
ANR	912618	PrimaryExpression	2		908484	0					
ANR	912619	Identifier	LINK_SIZE		908484	1					
ANR	912620	ExpressionStatement	* previous ++ = OP_BRAZERO + repeat_type	6057:10:195765:195803	908484	5	True				
ANR	912621	AssignmentExpression	* previous ++ = OP_BRAZERO + repeat_type		908484	0		=			
ANR	912622	UnaryOperationExpression	* previous ++		908484	0					
ANR	912623	UnaryOperator	*		908484	0					
ANR	912624	PostIncDecOperationExpression	previous ++		908484	1					
ANR	912625	Identifier	previous		908484	0					
ANR	912626	IncDec	++		908484	1					
ANR	912627	AdditiveExpression	OP_BRAZERO + repeat_type		908484	1		+			
ANR	912628	Identifier	OP_BRAZERO		908484	0					
ANR	912629	Identifier	repeat_type		908484	1					
ANR	912630	ExpressionStatement	* previous ++ = OP_BRA	6058:10:195815:195835	908484	6	True				
ANR	912631	AssignmentExpression	* previous ++ = OP_BRA		908484	0		=			
ANR	912632	UnaryOperationExpression	* previous ++		908484	0					
ANR	912633	UnaryOperator	*		908484	0					
ANR	912634	PostIncDecOperationExpression	previous ++		908484	1					
ANR	912635	Identifier	previous		908484	0					
ANR	912636	IncDec	++		908484	1					
ANR	912637	Identifier	OP_BRA		908484	1					
ANR	912638	ExpressionStatement	offset = ( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )	6063:10:195994:196051	908484	7	True				
ANR	912639	AssignmentExpression	offset = ( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )		908484	0		=			
ANR	912640	Identifier	offset		908484	0					
ANR	912641	ConditionalExpression	( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )		908484	1					
ANR	912642	Condition	bralink == NULL		908484	0					
ANR	912643	EqualityExpression	bralink == NULL		908484	0		==			
ANR	912644	Identifier	bralink		908484	0					
ANR	912645	Identifier	NULL		908484	1					
ANR	912646	PrimaryExpression	0		908484	1					
ANR	912647	CastExpression	( int ) ( previous - bralink )		908484	2					
ANR	912648	CastTarget	int		908484	0					
ANR	912649	AdditiveExpression	previous - bralink		908484	1		-			
ANR	912650	Identifier	previous		908484	0					
ANR	912651	Identifier	bralink		908484	1					
ANR	912652	ExpressionStatement	bralink = previous	6064:10:196063:196081	908484	8	True				
ANR	912653	AssignmentExpression	bralink = previous		908484	0		=			
ANR	912654	Identifier	bralink		908484	0					
ANR	912655	Identifier	previous		908484	1					
ANR	912656	ExpressionStatement	"PUTINC ( previous , 0 , offset )"	6065:10:196093:196120	908484	9	True				
ANR	912657	CallExpression	"PUTINC ( previous , 0 , offset )"		908484	0					
ANR	912658	Callee	PUTINC		908484	0					
ANR	912659	Identifier	PUTINC		908484	0					
ANR	912660	ArgumentList	previous		908484	1					
ANR	912661	Argument	previous		908484	0					
ANR	912662	Identifier	previous		908484	0					
ANR	912663	Argument	0		908484	1					
ANR	912664	PrimaryExpression	0		908484	0					
ANR	912665	Argument	offset		908484	2					
ANR	912666	Identifier	offset		908484	0					
ANR	912667	ExpressionStatement	repeat_max --	6068:8:196143:196155	908484	1	True				
ANR	912668	PostIncDecOperationExpression	repeat_max --		908484	0					
ANR	912669	Identifier	repeat_max		908484	0					
ANR	912670	IncDec	--		908484	1					
ANR	912671	ElseStatement	else		908484	0					
ANR	912672	CompoundStatement		1622:8:56773:56773	908484	0					
ANR	912673	IfStatement	if ( repeat_min > 1 )		908484	0					
ANR	912674	Condition	repeat_min > 1	6080:12:196663:196676	908484	0	True				
ANR	912675	RelationalExpression	repeat_min > 1		908484	0		>			
ANR	912676	Identifier	repeat_min		908484	0					
ANR	912677	PrimaryExpression	1		908484	1					
ANR	912678	CompoundStatement		1624:10:56813:56813	908484	1					
ANR	912679	IfStatement	if ( lengthptr != NULL )		908484	0					
ANR	912680	Condition	lengthptr != NULL	6087:14:196996:197012	908484	0	True				
ANR	912681	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	912682	Identifier	lengthptr		908484	0					
ANR	912683	Identifier	NULL		908484	1					
ANR	912684	CompoundStatement		1632:12:57165:57210	908484	1					
ANR	912685	IdentifierDeclStatement	int delta = ( repeat_min - 1 ) * length_prevgroup ;	6089:12:197041:197086	908484	0	True				
ANR	912686	IdentifierDecl	delta = ( repeat_min - 1 ) * length_prevgroup		908484	0					
ANR	912687	IdentifierDeclType	int		908484	0					
ANR	912688	Identifier	delta		908484	1					
ANR	912689	AssignmentExpression	delta = ( repeat_min - 1 ) * length_prevgroup		908484	2		=			
ANR	912690	Identifier	delta		908484	0					
ANR	912691	MultiplicativeExpression	( repeat_min - 1 ) * length_prevgroup		908484	1		*			
ANR	912692	AdditiveExpression	repeat_min - 1		908484	0		-			
ANR	912693	Identifier	repeat_min		908484	0					
ANR	912694	PrimaryExpression	1		908484	1					
ANR	912695	Identifier	length_prevgroup		908484	1					
ANR	912696	IfStatement	if ( ( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta )		908484	1					
ANR	912697	Condition	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta	6090:16:197104:197286	908484	0	True				
ANR	912698	OrExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta		908484	0		||			
ANR	912699	RelationalExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX		908484	0		>			
ANR	912700	MultiplicativeExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup		908484	0		*			
ANR	912701	CastExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 )		908484	0					
ANR	912702	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912703	AdditiveExpression	repeat_min - 1		908484	1		-			
ANR	912704	Identifier	repeat_min		908484	0					
ANR	912705	PrimaryExpression	1		908484	1					
ANR	912706	CastExpression	( INT64_OR_DOUBLE ) length_prevgroup		908484	1					
ANR	912707	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912708	Identifier	length_prevgroup		908484	1					
ANR	912709	CastExpression	( INT64_OR_DOUBLE ) INT_MAX		908484	1					
ANR	912710	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912711	Identifier	INT_MAX		908484	1					
ANR	912712	RelationalExpression	OFLOW_MAX - * lengthptr < delta		908484	1		<			
ANR	912713	AdditiveExpression	OFLOW_MAX - * lengthptr		908484	0		-			
ANR	912714	Identifier	OFLOW_MAX		908484	0					
ANR	912715	UnaryOperationExpression	* lengthptr		908484	1					
ANR	912716	UnaryOperator	*		908484	0					
ANR	912717	Identifier	lengthptr		908484	1					
ANR	912718	Identifier	delta		908484	1					
ANR	912719	CompoundStatement		1637:14:57427:57427	908484	1					
ANR	912720	ExpressionStatement	* errorcodeptr = ERR20	6095:14:197319:197340	908484	0	True				
ANR	912721	AssignmentExpression	* errorcodeptr = ERR20		908484	0		=			
ANR	912722	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	912723	UnaryOperator	*		908484	0					
ANR	912724	Identifier	errorcodeptr		908484	1					
ANR	912725	Identifier	ERR20		908484	1					
ANR	912726	GotoStatement	goto FAILED ;	6096:14:197356:197367	908484	1	True				
ANR	912727	Identifier	FAILED		908484	0					
ANR	912728	ExpressionStatement	* lengthptr += delta	6098:12:197397:197416	908484	2	True				
ANR	912729	AssignmentExpression	* lengthptr += delta		908484	0		+=			
ANR	912730	UnaryOperationExpression	* lengthptr		908484	0					
ANR	912731	UnaryOperator	*		908484	0					
ANR	912732	Identifier	lengthptr		908484	1					
ANR	912733	Identifier	delta		908484	1					
ANR	912734	ElseStatement	else		908484	0					
ANR	912735	CompoundStatement		1650:12:57844:57844	908484	0					
ANR	912736	IfStatement	if ( groupsetfirstchar && reqcharflags < 0 )		908484	0					
ANR	912737	Condition	groupsetfirstchar && reqcharflags < 0	6108:16:197738:197774	908484	0	True				
ANR	912738	AndExpression	groupsetfirstchar && reqcharflags < 0		908484	0		&&			
ANR	912739	Identifier	groupsetfirstchar		908484	0					
ANR	912740	RelationalExpression	reqcharflags < 0		908484	1		<			
ANR	912741	Identifier	reqcharflags		908484	0					
ANR	912742	PrimaryExpression	0		908484	1					
ANR	912743	CompoundStatement		1652:14:57915:57915	908484	1					
ANR	912744	ExpressionStatement	reqchar = firstchar	6110:14:197807:197826	908484	0	True				
ANR	912745	AssignmentExpression	reqchar = firstchar		908484	0		=			
ANR	912746	Identifier	reqchar		908484	0					
ANR	912747	Identifier	firstchar		908484	1					
ANR	912748	ExpressionStatement	reqcharflags = firstcharflags	6111:14:197842:197871	908484	1	True				
ANR	912749	AssignmentExpression	reqcharflags = firstcharflags		908484	0		=			
ANR	912750	Identifier	reqcharflags		908484	0					
ANR	912751	Identifier	firstcharflags		908484	1					
ANR	912752	ForStatement	for ( i = 1 ; i < repeat_min ; i ++ )		908484	1					
ANR	912753	ForInit	i = 1 ;	6114:17:197907:197912	908484	0	True				
ANR	912754	AssignmentExpression	i = 1		908484	0		=			
ANR	912755	Identifier	i		908484	0					
ANR	912756	PrimaryExpression	1		908484	1					
ANR	912757	Condition	i < repeat_min	6114:24:197914:197927	908484	1	True				
ANR	912758	RelationalExpression	i < repeat_min		908484	0		<			
ANR	912759	Identifier	i		908484	0					
ANR	912760	Identifier	repeat_min		908484	1					
ANR	912761	PostIncDecOperationExpression	i ++	6114:40:197930:197932	908484	2	True				
ANR	912762	Identifier	i		908484	0					
ANR	912763	IncDec	++		908484	1					
ANR	912764	CompoundStatement		1660:14:58119:58173	908484	3					
ANR	912765	IdentifierDeclStatement	pcre_uchar * hc ;	6116:14:197965:197979	908484	0	True				
ANR	912766	IdentifierDecl	* hc		908484	0					
ANR	912767	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	912768	Identifier	hc		908484	1					
ANR	912769	IdentifierDeclStatement	size_t this_hwm_offset = cd -> hwm - cd -> start_workspace ;	6117:14:197995:198049	908484	1	True				
ANR	912770	IdentifierDecl	this_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0					
ANR	912771	IdentifierDeclType	size_t		908484	0					
ANR	912772	Identifier	this_hwm_offset		908484	1					
ANR	912773	AssignmentExpression	this_hwm_offset = cd -> hwm - cd -> start_workspace		908484	2		=			
ANR	912774	Identifier	this_hwm_offset		908484	0					
ANR	912775	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	912776	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912777	Identifier	cd		908484	0					
ANR	912778	Identifier	hwm		908484	1					
ANR	912779	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	912780	Identifier	cd		908484	0					
ANR	912781	Identifier	start_workspace		908484	1					
ANR	912782	ExpressionStatement	"memcpy ( code , previous , IN_UCHARS ( len ) )"	6118:14:198065:198103	908484	2	True				
ANR	912783	CallExpression	"memcpy ( code , previous , IN_UCHARS ( len ) )"		908484	0					
ANR	912784	Callee	memcpy		908484	0					
ANR	912785	Identifier	memcpy		908484	0					
ANR	912786	ArgumentList	code		908484	1					
ANR	912787	Argument	code		908484	0					
ANR	912788	Identifier	code		908484	0					
ANR	912789	Argument	previous		908484	1					
ANR	912790	Identifier	previous		908484	0					
ANR	912791	Argument	IN_UCHARS ( len )		908484	2					
ANR	912792	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	912793	Callee	IN_UCHARS		908484	0					
ANR	912794	Identifier	IN_UCHARS		908484	0					
ANR	912795	ArgumentList	len		908484	1					
ANR	912796	Argument	len		908484	0					
ANR	912797	Identifier	len		908484	0					
ANR	912798	WhileStatement	while ( cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset ) )		908484	3					
ANR	912799	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )	6120:21:198127:198282	908484	0	True				
ANR	912800	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	0		>			
ANR	912801	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912802	Identifier	cd		908484	0					
ANR	912803	Identifier	hwm		908484	1					
ANR	912804	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		+			
ANR	912805	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	912806	Identifier	cd		908484	0					
ANR	912807	Identifier	start_workspace		908484	1					
ANR	912808	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		-			
ANR	912809	PtrMemberAccess	cd -> workspace_size		908484	0					
ANR	912810	Identifier	cd		908484	0					
ANR	912811	Identifier	workspace_size		908484	1					
ANR	912812	AdditiveExpression	WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		-			
ANR	912813	Identifier	WORK_SIZE_SAFETY_MARGIN		908484	0					
ANR	912814	AdditiveExpression	this_hwm_offset - base_hwm_offset		908484	1		-			
ANR	912815	Identifier	this_hwm_offset		908484	0					
ANR	912816	Identifier	base_hwm_offset		908484	1					
ANR	912817	CompoundStatement		1666:16:58425:58425	908484	1					
ANR	912818	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	6124:16:198319:198355	908484	0	True				
ANR	912819	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		908484	0		=			
ANR	912820	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	912821	UnaryOperator	*		908484	0					
ANR	912822	Identifier	errorcodeptr		908484	1					
ANR	912823	CallExpression	expand_workspace ( cd )		908484	1					
ANR	912824	Callee	expand_workspace		908484	0					
ANR	912825	Identifier	expand_workspace		908484	0					
ANR	912826	ArgumentList	cd		908484	1					
ANR	912827	Argument	cd		908484	0					
ANR	912828	Identifier	cd		908484	0					
ANR	912829	IfStatement	if ( * errorcodeptr != 0 )		908484	1					
ANR	912830	Condition	* errorcodeptr != 0	6125:20:198377:198394	908484	0	True				
ANR	912831	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	912832	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	912833	UnaryOperator	*		908484	0					
ANR	912834	Identifier	errorcodeptr		908484	1					
ANR	912835	PrimaryExpression	0		908484	1					
ANR	912836	GotoStatement	goto FAILED ;	6125:40:198397:198408	908484	1	True				
ANR	912837	Identifier	FAILED		908484	0					
ANR	912838	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ; hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset ; hc += LINK_SIZE )		908484	4					
ANR	912839	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ;	6128:19:198448:198504	908484	0	True				
ANR	912840	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		908484	0		=			
ANR	912841	Identifier	hc		908484	0					
ANR	912842	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		908484	1		+			
ANR	912843	CastExpression	( pcre_uchar * ) cd -> start_workspace		908484	0					
ANR	912844	CastTarget	pcre_uchar *		908484	0					
ANR	912845	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	912846	Identifier	cd		908484	0					
ANR	912847	Identifier	start_workspace		908484	1					
ANR	912848	Identifier	base_hwm_offset		908484	1					
ANR	912849	Condition	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset	6129:19:198525:198580	908484	1	True				
ANR	912850	RelationalExpression	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		908484	0		<			
ANR	912851	Identifier	hc		908484	0					
ANR	912852	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		908484	1		+			
ANR	912853	CastExpression	( pcre_uchar * ) cd -> start_workspace		908484	0					
ANR	912854	CastTarget	pcre_uchar *		908484	0					
ANR	912855	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	912856	Identifier	cd		908484	0					
ANR	912857	Identifier	start_workspace		908484	1					
ANR	912858	Identifier	this_hwm_offset		908484	1					
ANR	912859	AssignmentExpression	hc += LINK_SIZE	6130:19:198602:198616	908484	2	True	+=			
ANR	912860	Identifier	hc		908484	0					
ANR	912861	Identifier	LINK_SIZE		908484	1					
ANR	912862	CompoundStatement		1674:16:58759:58759	908484	3					
ANR	912863	ExpressionStatement	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len )"	6132:16:198653:198686	908484	0	True				
ANR	912864	CallExpression	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len )"		908484	0					
ANR	912865	Callee	PUT		908484	0					
ANR	912866	Identifier	PUT		908484	0					
ANR	912867	ArgumentList	cd -> hwm		908484	1					
ANR	912868	Argument	cd -> hwm		908484	0					
ANR	912869	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912870	Identifier	cd		908484	0					
ANR	912871	Identifier	hwm		908484	1					
ANR	912872	Argument	0		908484	1					
ANR	912873	PrimaryExpression	0		908484	0					
ANR	912874	Argument	"GET ( hc , 0 ) + len"		908484	2					
ANR	912875	AdditiveExpression	"GET ( hc , 0 ) + len"		908484	0		+			
ANR	912876	CallExpression	"GET ( hc , 0 )"		908484	0					
ANR	912877	Callee	GET		908484	0					
ANR	912878	Identifier	GET		908484	0					
ANR	912879	ArgumentList	hc		908484	1					
ANR	912880	Argument	hc		908484	0					
ANR	912881	Identifier	hc		908484	0					
ANR	912882	Argument	0		908484	1					
ANR	912883	PrimaryExpression	0		908484	0					
ANR	912884	Identifier	len		908484	1					
ANR	912885	ExpressionStatement	cd -> hwm += LINK_SIZE	6133:16:198704:198724	908484	1	True				
ANR	912886	AssignmentExpression	cd -> hwm += LINK_SIZE		908484	0		+=			
ANR	912887	PtrMemberAccess	cd -> hwm		908484	0					
ANR	912888	Identifier	cd		908484	0					
ANR	912889	Identifier	hwm		908484	1					
ANR	912890	Identifier	LINK_SIZE		908484	1					
ANR	912891	ExpressionStatement	base_hwm_offset = this_hwm_offset	6135:14:198758:198791	908484	5	True				
ANR	912892	AssignmentExpression	base_hwm_offset = this_hwm_offset		908484	0		=			
ANR	912893	Identifier	base_hwm_offset		908484	0					
ANR	912894	Identifier	this_hwm_offset		908484	1					
ANR	912895	ExpressionStatement	code += len	6136:14:198807:198818	908484	6	True				
ANR	912896	AssignmentExpression	code += len		908484	0		+=			
ANR	912897	Identifier	code		908484	0					
ANR	912898	Identifier	len		908484	1					
ANR	912899	IfStatement	if ( repeat_max > 0 )		908484	1					
ANR	912900	Condition	repeat_max > 0	6141:12:198875:198888	908484	0	True				
ANR	912901	RelationalExpression	repeat_max > 0		908484	0		>			
ANR	912902	Identifier	repeat_max		908484	0					
ANR	912903	PrimaryExpression	0		908484	1					
ANR	912904	ExpressionStatement	repeat_max -= repeat_min	6141:28:198891:198915	908484	1	True				
ANR	912905	AssignmentExpression	repeat_max -= repeat_min		908484	0		-=			
ANR	912906	Identifier	repeat_max		908484	0					
ANR	912907	Identifier	repeat_min		908484	1					
ANR	912908	IfStatement	if ( repeat_max >= 0 )		908484	9					
ANR	912909	Condition	repeat_max >= 0	6151:10:199382:199396	908484	0	True				
ANR	912910	RelationalExpression	repeat_max >= 0		908484	0		>=			
ANR	912911	Identifier	repeat_max		908484	0					
ANR	912912	PrimaryExpression	0		908484	1					
ANR	912913	CompoundStatement		1695:8:59531:59531	908484	1					
ANR	912914	IfStatement	if ( lengthptr != NULL && repeat_max > 0 )		908484	0					
ANR	912915	Condition	lengthptr != NULL && repeat_max > 0	6160:12:199876:199910	908484	0	True				
ANR	912916	AndExpression	lengthptr != NULL && repeat_max > 0		908484	0		&&			
ANR	912917	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	912918	Identifier	lengthptr		908484	0					
ANR	912919	Identifier	NULL		908484	1					
ANR	912920	RelationalExpression	repeat_max > 0		908484	1		>			
ANR	912921	Identifier	repeat_max		908484	0					
ANR	912922	PrimaryExpression	0		908484	1					
ANR	912923	CompoundStatement		1705:10:60059:60164	908484	1					
ANR	912924	IdentifierDeclStatement	int delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE ;	6162:10:199935:200040	908484	0	True				
ANR	912925	IdentifierDecl	delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		908484	0					
ANR	912926	IdentifierDeclType	int		908484	0					
ANR	912927	Identifier	delta		908484	1					
ANR	912928	AssignmentExpression	delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		908484	2		=			
ANR	912929	Identifier	delta		908484	0					
ANR	912930	AdditiveExpression	repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		908484	1		-			
ANR	912931	MultiplicativeExpression	repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		908484	0		*			
ANR	912932	Identifier	repeat_max		908484	0					
ANR	912933	AdditiveExpression	length_prevgroup + 1 + 2 + 2 * LINK_SIZE		908484	1		+			
ANR	912934	Identifier	length_prevgroup		908484	0					
ANR	912935	AdditiveExpression	1 + 2 + 2 * LINK_SIZE		908484	1		+			
ANR	912936	PrimaryExpression	1		908484	0					
ANR	912937	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	912938	PrimaryExpression	2		908484	0					
ANR	912939	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912940	PrimaryExpression	2		908484	0					
ANR	912941	Identifier	LINK_SIZE		908484	1					
ANR	912942	AdditiveExpression	2 - 2 * LINK_SIZE		908484	1		-			
ANR	912943	PrimaryExpression	2		908484	0					
ANR	912944	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912945	PrimaryExpression	2		908484	0					
ANR	912946	Identifier	LINK_SIZE		908484	1					
ANR	912947	IfStatement	if ( ( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta )		908484	1					
ANR	912948	Condition	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta	6164:14:200086:200281	908484	0	True				
ANR	912949	OrExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta		908484	0		||			
ANR	912950	RelationalExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX		908484	0		>			
ANR	912951	MultiplicativeExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		908484	0		*			
ANR	912952	CastExpression	( INT64_OR_DOUBLE ) repeat_max		908484	0					
ANR	912953	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912954	Identifier	repeat_max		908484	1					
ANR	912955	CastExpression	( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		908484	1					
ANR	912956	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912957	AdditiveExpression	length_prevgroup + 1 + 2 + 2 * LINK_SIZE		908484	1		+			
ANR	912958	Identifier	length_prevgroup		908484	0					
ANR	912959	AdditiveExpression	1 + 2 + 2 * LINK_SIZE		908484	1		+			
ANR	912960	PrimaryExpression	1		908484	0					
ANR	912961	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	912962	PrimaryExpression	2		908484	0					
ANR	912963	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	912964	PrimaryExpression	2		908484	0					
ANR	912965	Identifier	LINK_SIZE		908484	1					
ANR	912966	CastExpression	( INT64_OR_DOUBLE ) INT_MAX		908484	1					
ANR	912967	CastTarget	INT64_OR_DOUBLE		908484	0					
ANR	912968	Identifier	INT_MAX		908484	1					
ANR	912969	RelationalExpression	OFLOW_MAX - * lengthptr < delta		908484	1		<			
ANR	912970	AdditiveExpression	OFLOW_MAX - * lengthptr		908484	0		-			
ANR	912971	Identifier	OFLOW_MAX		908484	0					
ANR	912972	UnaryOperationExpression	* lengthptr		908484	1					
ANR	912973	UnaryOperator	*		908484	0					
ANR	912974	Identifier	lengthptr		908484	1					
ANR	912975	Identifier	delta		908484	1					
ANR	912976	CompoundStatement		1711:12:60420:60420	908484	1					
ANR	912977	ExpressionStatement	* errorcodeptr = ERR20	6169:12:200310:200331	908484	0	True				
ANR	912978	AssignmentExpression	* errorcodeptr = ERR20		908484	0		=			
ANR	912979	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	912980	UnaryOperator	*		908484	0					
ANR	912981	Identifier	errorcodeptr		908484	1					
ANR	912982	Identifier	ERR20		908484	1					
ANR	912983	GotoStatement	goto FAILED ;	6170:12:200345:200356	908484	1	True				
ANR	912984	Identifier	FAILED		908484	0					
ANR	912985	ExpressionStatement	* lengthptr += delta	6172:10:200382:200401	908484	2	True				
ANR	912986	AssignmentExpression	* lengthptr += delta		908484	0		+=			
ANR	912987	UnaryOperationExpression	* lengthptr		908484	0					
ANR	912988	UnaryOperator	*		908484	0					
ANR	912989	Identifier	lengthptr		908484	1					
ANR	912990	Identifier	delta		908484	1					
ANR	912991	ElseStatement	else		908484	0					
ANR	912992	ForStatement	for ( i = repeat_max - 1 ; i >= 0 ; i -- )		908484	0					
ANR	912993	ForInit	i = repeat_max - 1 ;	6177:18:200476:200494	908484	0	True				
ANR	912994	AssignmentExpression	i = repeat_max - 1		908484	0		=			
ANR	912995	Identifier	i		908484	0					
ANR	912996	AdditiveExpression	repeat_max - 1		908484	1		-			
ANR	912997	Identifier	repeat_max		908484	0					
ANR	912998	PrimaryExpression	1		908484	1					
ANR	912999	Condition	i >= 0	6177:38:200496:200501	908484	1	True				
ANR	913000	RelationalExpression	i >= 0		908484	0		>=			
ANR	913001	Identifier	i		908484	0					
ANR	913002	PrimaryExpression	0		908484	1					
ANR	913003	PostIncDecOperationExpression	i --	6177:46:200504:200506	908484	2	True				
ANR	913004	Identifier	i		908484	0					
ANR	913005	IncDec	--		908484	1					
ANR	913006	CompoundStatement		1723:10:60681:60735	908484	3					
ANR	913007	IdentifierDeclStatement	pcre_uchar * hc ;	6179:10:200531:200545	908484	0	True				
ANR	913008	IdentifierDecl	* hc		908484	0					
ANR	913009	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913010	Identifier	hc		908484	1					
ANR	913011	IdentifierDeclStatement	size_t this_hwm_offset = cd -> hwm - cd -> start_workspace ;	6180:10:200557:200611	908484	1	True				
ANR	913012	IdentifierDecl	this_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0					
ANR	913013	IdentifierDeclType	size_t		908484	0					
ANR	913014	Identifier	this_hwm_offset		908484	1					
ANR	913015	AssignmentExpression	this_hwm_offset = cd -> hwm - cd -> start_workspace		908484	2		=			
ANR	913016	Identifier	this_hwm_offset		908484	0					
ANR	913017	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	913018	PtrMemberAccess	cd -> hwm		908484	0					
ANR	913019	Identifier	cd		908484	0					
ANR	913020	Identifier	hwm		908484	1					
ANR	913021	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	913022	Identifier	cd		908484	0					
ANR	913023	Identifier	start_workspace		908484	1					
ANR	913024	ExpressionStatement	* code ++ = OP_BRAZERO + repeat_type	6182:10:200624:200658	908484	2	True				
ANR	913025	AssignmentExpression	* code ++ = OP_BRAZERO + repeat_type		908484	0		=			
ANR	913026	UnaryOperationExpression	* code ++		908484	0					
ANR	913027	UnaryOperator	*		908484	0					
ANR	913028	PostIncDecOperationExpression	code ++		908484	1					
ANR	913029	Identifier	code		908484	0					
ANR	913030	IncDec	++		908484	1					
ANR	913031	AdditiveExpression	OP_BRAZERO + repeat_type		908484	1		+			
ANR	913032	Identifier	OP_BRAZERO		908484	0					
ANR	913033	Identifier	repeat_type		908484	1					
ANR	913034	IfStatement	if ( i != 0 )		908484	3					
ANR	913035	Condition	i != 0	6187:14:200793:200798	908484	0	True				
ANR	913036	EqualityExpression	i != 0		908484	0		!=			
ANR	913037	Identifier	i		908484	0					
ANR	913038	PrimaryExpression	0		908484	1					
ANR	913039	CompoundStatement		1732:12:60951:60961	908484	1					
ANR	913040	IdentifierDeclStatement	int offset ;	6189:12:200827:200837	908484	0	True				
ANR	913041	IdentifierDecl	offset		908484	0					
ANR	913042	IdentifierDeclType	int		908484	0					
ANR	913043	Identifier	offset		908484	1					
ANR	913044	ExpressionStatement	* code ++ = OP_BRA	6190:12:200851:200867	908484	1	True				
ANR	913045	AssignmentExpression	* code ++ = OP_BRA		908484	0		=			
ANR	913046	UnaryOperationExpression	* code ++		908484	0					
ANR	913047	UnaryOperator	*		908484	0					
ANR	913048	PostIncDecOperationExpression	code ++		908484	1					
ANR	913049	Identifier	code		908484	0					
ANR	913050	IncDec	++		908484	1					
ANR	913051	Identifier	OP_BRA		908484	1					
ANR	913052	ExpressionStatement	offset = ( bralink == NULL ) ? 0 : ( int ) ( code - bralink )	6191:12:200881:200934	908484	2	True				
ANR	913053	AssignmentExpression	offset = ( bralink == NULL ) ? 0 : ( int ) ( code - bralink )		908484	0		=			
ANR	913054	Identifier	offset		908484	0					
ANR	913055	ConditionalExpression	( bralink == NULL ) ? 0 : ( int ) ( code - bralink )		908484	1					
ANR	913056	Condition	bralink == NULL		908484	0					
ANR	913057	EqualityExpression	bralink == NULL		908484	0		==			
ANR	913058	Identifier	bralink		908484	0					
ANR	913059	Identifier	NULL		908484	1					
ANR	913060	PrimaryExpression	0		908484	1					
ANR	913061	CastExpression	( int ) ( code - bralink )		908484	2					
ANR	913062	CastTarget	int		908484	0					
ANR	913063	AdditiveExpression	code - bralink		908484	1		-			
ANR	913064	Identifier	code		908484	0					
ANR	913065	Identifier	bralink		908484	1					
ANR	913066	ExpressionStatement	bralink = code	6192:12:200948:200962	908484	3	True				
ANR	913067	AssignmentExpression	bralink = code		908484	0		=			
ANR	913068	Identifier	bralink		908484	0					
ANR	913069	Identifier	code		908484	1					
ANR	913070	ExpressionStatement	"PUTINC ( code , 0 , offset )"	6193:12:200976:200999	908484	4	True				
ANR	913071	CallExpression	"PUTINC ( code , 0 , offset )"		908484	0					
ANR	913072	Callee	PUTINC		908484	0					
ANR	913073	Identifier	PUTINC		908484	0					
ANR	913074	ArgumentList	code		908484	1					
ANR	913075	Argument	code		908484	0					
ANR	913076	Identifier	code		908484	0					
ANR	913077	Argument	0		908484	1					
ANR	913078	PrimaryExpression	0		908484	0					
ANR	913079	Argument	offset		908484	2					
ANR	913080	Identifier	offset		908484	0					
ANR	913081	ExpressionStatement	"memcpy ( code , previous , IN_UCHARS ( len ) )"	6196:10:201026:201064	908484	4	True				
ANR	913082	CallExpression	"memcpy ( code , previous , IN_UCHARS ( len ) )"		908484	0					
ANR	913083	Callee	memcpy		908484	0					
ANR	913084	Identifier	memcpy		908484	0					
ANR	913085	ArgumentList	code		908484	1					
ANR	913086	Argument	code		908484	0					
ANR	913087	Identifier	code		908484	0					
ANR	913088	Argument	previous		908484	1					
ANR	913089	Identifier	previous		908484	0					
ANR	913090	Argument	IN_UCHARS ( len )		908484	2					
ANR	913091	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	913092	Callee	IN_UCHARS		908484	0					
ANR	913093	Identifier	IN_UCHARS		908484	0					
ANR	913094	ArgumentList	len		908484	1					
ANR	913095	Argument	len		908484	0					
ANR	913096	Identifier	len		908484	0					
ANR	913097	WhileStatement	while ( cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset ) )		908484	5					
ANR	913098	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )	6201:17:201188:201335	908484	0	True				
ANR	913099	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	0		>			
ANR	913100	PtrMemberAccess	cd -> hwm		908484	0					
ANR	913101	Identifier	cd		908484	0					
ANR	913102	Identifier	hwm		908484	1					
ANR	913103	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		+			
ANR	913104	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	913105	Identifier	cd		908484	0					
ANR	913106	Identifier	start_workspace		908484	1					
ANR	913107	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		-			
ANR	913108	PtrMemberAccess	cd -> workspace_size		908484	0					
ANR	913109	Identifier	cd		908484	0					
ANR	913110	Identifier	workspace_size		908484	1					
ANR	913111	AdditiveExpression	WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		908484	1		-			
ANR	913112	Identifier	WORK_SIZE_SAFETY_MARGIN		908484	0					
ANR	913113	AdditiveExpression	this_hwm_offset - base_hwm_offset		908484	1		-			
ANR	913114	Identifier	this_hwm_offset		908484	0					
ANR	913115	Identifier	base_hwm_offset		908484	1					
ANR	913116	CompoundStatement		1747:12:61474:61474	908484	1					
ANR	913117	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	6205:12:201364:201400	908484	0	True				
ANR	913118	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		908484	0		=			
ANR	913119	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	913120	UnaryOperator	*		908484	0					
ANR	913121	Identifier	errorcodeptr		908484	1					
ANR	913122	CallExpression	expand_workspace ( cd )		908484	1					
ANR	913123	Callee	expand_workspace		908484	0					
ANR	913124	Identifier	expand_workspace		908484	0					
ANR	913125	ArgumentList	cd		908484	1					
ANR	913126	Argument	cd		908484	0					
ANR	913127	Identifier	cd		908484	0					
ANR	913128	IfStatement	if ( * errorcodeptr != 0 )		908484	1					
ANR	913129	Condition	* errorcodeptr != 0	6206:16:201418:201435	908484	0	True				
ANR	913130	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	913131	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	913132	UnaryOperator	*		908484	0					
ANR	913133	Identifier	errorcodeptr		908484	1					
ANR	913134	PrimaryExpression	0		908484	1					
ANR	913135	GotoStatement	goto FAILED ;	6206:36:201438:201449	908484	1	True				
ANR	913136	Identifier	FAILED		908484	0					
ANR	913137	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ; hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset ; hc += LINK_SIZE )		908484	6					
ANR	913138	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ;	6209:15:201481:201537	908484	0	True				
ANR	913139	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		908484	0		=			
ANR	913140	Identifier	hc		908484	0					
ANR	913141	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		908484	1		+			
ANR	913142	CastExpression	( pcre_uchar * ) cd -> start_workspace		908484	0					
ANR	913143	CastTarget	pcre_uchar *		908484	0					
ANR	913144	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	913145	Identifier	cd		908484	0					
ANR	913146	Identifier	start_workspace		908484	1					
ANR	913147	Identifier	base_hwm_offset		908484	1					
ANR	913148	Condition	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset	6210:15:201554:201609	908484	1	True				
ANR	913149	RelationalExpression	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		908484	0		<			
ANR	913150	Identifier	hc		908484	0					
ANR	913151	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		908484	1		+			
ANR	913152	CastExpression	( pcre_uchar * ) cd -> start_workspace		908484	0					
ANR	913153	CastTarget	pcre_uchar *		908484	0					
ANR	913154	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	913155	Identifier	cd		908484	0					
ANR	913156	Identifier	start_workspace		908484	1					
ANR	913157	Identifier	this_hwm_offset		908484	1					
ANR	913158	AssignmentExpression	hc += LINK_SIZE	6211:15:201627:201641	908484	2	True	+=			
ANR	913159	Identifier	hc		908484	0					
ANR	913160	Identifier	LINK_SIZE		908484	1					
ANR	913161	CompoundStatement		1755:12:61780:61780	908484	3					
ANR	913162	ExpressionStatement	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 ) )"	6213:12:201670:201733	908484	0	True				
ANR	913163	CallExpression	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 ) )"		908484	0					
ANR	913164	Callee	PUT		908484	0					
ANR	913165	Identifier	PUT		908484	0					
ANR	913166	ArgumentList	cd -> hwm		908484	1					
ANR	913167	Argument	cd -> hwm		908484	0					
ANR	913168	PtrMemberAccess	cd -> hwm		908484	0					
ANR	913169	Identifier	cd		908484	0					
ANR	913170	Identifier	hwm		908484	1					
ANR	913171	Argument	0		908484	1					
ANR	913172	PrimaryExpression	0		908484	0					
ANR	913173	Argument	"GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )"		908484	2					
ANR	913174	AdditiveExpression	"GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )"		908484	0		+			
ANR	913175	CallExpression	"GET ( hc , 0 )"		908484	0					
ANR	913176	Callee	GET		908484	0					
ANR	913177	Identifier	GET		908484	0					
ANR	913178	ArgumentList	hc		908484	1					
ANR	913179	Argument	hc		908484	0					
ANR	913180	Identifier	hc		908484	0					
ANR	913181	Argument	0		908484	1					
ANR	913182	PrimaryExpression	0		908484	0					
ANR	913183	AdditiveExpression	len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )		908484	1		+			
ANR	913184	Identifier	len		908484	0					
ANR	913185	ConditionalExpression	( i != 0 ) ? 2 + LINK_SIZE : 1		908484	1					
ANR	913186	Condition	i != 0		908484	0					
ANR	913187	EqualityExpression	i != 0		908484	0		!=			
ANR	913188	Identifier	i		908484	0					
ANR	913189	PrimaryExpression	0		908484	1					
ANR	913190	AdditiveExpression	2 + LINK_SIZE		908484	1		+			
ANR	913191	PrimaryExpression	2		908484	0					
ANR	913192	Identifier	LINK_SIZE		908484	1					
ANR	913193	PrimaryExpression	1		908484	2					
ANR	913194	ExpressionStatement	cd -> hwm += LINK_SIZE	6214:12:201747:201767	908484	1	True				
ANR	913195	AssignmentExpression	cd -> hwm += LINK_SIZE		908484	0		+=			
ANR	913196	PtrMemberAccess	cd -> hwm		908484	0					
ANR	913197	Identifier	cd		908484	0					
ANR	913198	Identifier	hwm		908484	1					
ANR	913199	Identifier	LINK_SIZE		908484	1					
ANR	913200	ExpressionStatement	base_hwm_offset = this_hwm_offset	6216:10:201793:201826	908484	7	True				
ANR	913201	AssignmentExpression	base_hwm_offset = this_hwm_offset		908484	0		=			
ANR	913202	Identifier	base_hwm_offset		908484	0					
ANR	913203	Identifier	this_hwm_offset		908484	1					
ANR	913204	ExpressionStatement	code += len	6217:10:201838:201849	908484	8	True				
ANR	913205	AssignmentExpression	code += len		908484	0		+=			
ANR	913206	Identifier	code		908484	0					
ANR	913207	Identifier	len		908484	1					
ANR	913208	WhileStatement	while ( bralink != NULL )		908484	1					
ANR	913209	Condition	bralink != NULL	6223:15:202019:202033	908484	0	True				
ANR	913210	EqualityExpression	bralink != NULL		908484	0		!=			
ANR	913211	Identifier	bralink		908484	0					
ANR	913212	Identifier	NULL		908484	1					
ANR	913213	CompoundStatement		1770:10:62261:62292	908484	1					
ANR	913214	IdentifierDeclStatement	int oldlinkoffset ;	6225:10:202058:202075	908484	0	True				
ANR	913215	IdentifierDecl	oldlinkoffset		908484	0					
ANR	913216	IdentifierDeclType	int		908484	0					
ANR	913217	Identifier	oldlinkoffset		908484	1					
ANR	913218	IdentifierDeclStatement	int offset = ( int ) ( code - bralink + 1 ) ;	6226:10:202087:202125	908484	1	True				
ANR	913219	IdentifierDecl	offset = ( int ) ( code - bralink + 1 )		908484	0					
ANR	913220	IdentifierDeclType	int		908484	0					
ANR	913221	Identifier	offset		908484	1					
ANR	913222	AssignmentExpression	offset = ( int ) ( code - bralink + 1 )		908484	2		=			
ANR	913223	Identifier	offset		908484	0					
ANR	913224	CastExpression	( int ) ( code - bralink + 1 )		908484	1					
ANR	913225	CastTarget	int		908484	0					
ANR	913226	AdditiveExpression	code - bralink + 1		908484	1		-			
ANR	913227	Identifier	code		908484	0					
ANR	913228	AdditiveExpression	bralink + 1		908484	1		+			
ANR	913229	Identifier	bralink		908484	0					
ANR	913230	PrimaryExpression	1		908484	1					
ANR	913231	IdentifierDeclStatement	pcre_uchar * bra = code - offset ;	6227:10:202137:202168	908484	2	True				
ANR	913232	IdentifierDecl	* bra = code - offset		908484	0					
ANR	913233	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913234	Identifier	bra		908484	1					
ANR	913235	AssignmentExpression	* bra = code - offset		908484	2		=			
ANR	913236	Identifier	bra		908484	0					
ANR	913237	AdditiveExpression	code - offset		908484	1		-			
ANR	913238	Identifier	code		908484	0					
ANR	913239	Identifier	offset		908484	1					
ANR	913240	ExpressionStatement	"oldlinkoffset = GET ( bra , 1 )"	6228:10:202180:202207	908484	3	True				
ANR	913241	AssignmentExpression	"oldlinkoffset = GET ( bra , 1 )"		908484	0		=			
ANR	913242	Identifier	oldlinkoffset		908484	0					
ANR	913243	CallExpression	"GET ( bra , 1 )"		908484	1					
ANR	913244	Callee	GET		908484	0					
ANR	913245	Identifier	GET		908484	0					
ANR	913246	ArgumentList	bra		908484	1					
ANR	913247	Argument	bra		908484	0					
ANR	913248	Identifier	bra		908484	0					
ANR	913249	Argument	1		908484	1					
ANR	913250	PrimaryExpression	1		908484	0					
ANR	913251	ExpressionStatement	bralink = ( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset	6229:10:202219:202281	908484	4	True				
ANR	913252	AssignmentExpression	bralink = ( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset		908484	0		=			
ANR	913253	Identifier	bralink		908484	0					
ANR	913254	ConditionalExpression	( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset		908484	1					
ANR	913255	Condition	oldlinkoffset == 0		908484	0					
ANR	913256	EqualityExpression	oldlinkoffset == 0		908484	0		==			
ANR	913257	Identifier	oldlinkoffset		908484	0					
ANR	913258	PrimaryExpression	0		908484	1					
ANR	913259	Identifier	NULL		908484	1					
ANR	913260	AdditiveExpression	bralink - oldlinkoffset		908484	2		-			
ANR	913261	Identifier	bralink		908484	0					
ANR	913262	Identifier	oldlinkoffset		908484	1					
ANR	913263	ExpressionStatement	* code ++ = OP_KET	6230:10:202293:202309	908484	5	True				
ANR	913264	AssignmentExpression	* code ++ = OP_KET		908484	0		=			
ANR	913265	UnaryOperationExpression	* code ++		908484	0					
ANR	913266	UnaryOperator	*		908484	0					
ANR	913267	PostIncDecOperationExpression	code ++		908484	1					
ANR	913268	Identifier	code		908484	0					
ANR	913269	IncDec	++		908484	1					
ANR	913270	Identifier	OP_KET		908484	1					
ANR	913271	ExpressionStatement	"PUTINC ( code , 0 , offset )"	6231:10:202321:202344	908484	6	True				
ANR	913272	CallExpression	"PUTINC ( code , 0 , offset )"		908484	0					
ANR	913273	Callee	PUTINC		908484	0					
ANR	913274	Identifier	PUTINC		908484	0					
ANR	913275	ArgumentList	code		908484	1					
ANR	913276	Argument	code		908484	0					
ANR	913277	Identifier	code		908484	0					
ANR	913278	Argument	0		908484	1					
ANR	913279	PrimaryExpression	0		908484	0					
ANR	913280	Argument	offset		908484	2					
ANR	913281	Identifier	offset		908484	0					
ANR	913282	ExpressionStatement	"PUT ( bra , 1 , offset )"	6232:10:202356:202375	908484	7	True				
ANR	913283	CallExpression	"PUT ( bra , 1 , offset )"		908484	0					
ANR	913284	Callee	PUT		908484	0					
ANR	913285	Identifier	PUT		908484	0					
ANR	913286	ArgumentList	bra		908484	1					
ANR	913287	Argument	bra		908484	0					
ANR	913288	Identifier	bra		908484	0					
ANR	913289	Argument	1		908484	1					
ANR	913290	PrimaryExpression	1		908484	0					
ANR	913291	Argument	offset		908484	2					
ANR	913292	Identifier	offset		908484	0					
ANR	913293	ElseStatement	else		908484	0					
ANR	913294	CompoundStatement		1807:8:64101:64148	908484	0					
ANR	913295	IdentifierDeclStatement	pcre_uchar * ketcode = code - 1 - LINK_SIZE ;	6263:8:203925:203967	908484	0	True				
ANR	913296	IdentifierDecl	* ketcode = code - 1 - LINK_SIZE		908484	0					
ANR	913297	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913298	Identifier	ketcode		908484	1					
ANR	913299	AssignmentExpression	* ketcode = code - 1 - LINK_SIZE		908484	2		=			
ANR	913300	Identifier	ketcode		908484	0					
ANR	913301	AdditiveExpression	code - 1 - LINK_SIZE		908484	1		-			
ANR	913302	Identifier	code		908484	0					
ANR	913303	AdditiveExpression	1 - LINK_SIZE		908484	1		-			
ANR	913304	PrimaryExpression	1		908484	0					
ANR	913305	Identifier	LINK_SIZE		908484	1					
ANR	913306	IdentifierDeclStatement	"pcre_uchar * bracode = ketcode - GET ( ketcode , 1 ) ;"	6264:8:203977:204024	908484	1	True				
ANR	913307	IdentifierDecl	"* bracode = ketcode - GET ( ketcode , 1 )"		908484	0					
ANR	913308	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913309	Identifier	bracode		908484	1					
ANR	913310	AssignmentExpression	"* bracode = ketcode - GET ( ketcode , 1 )"		908484	2		=			
ANR	913311	Identifier	bracode		908484	0					
ANR	913312	AdditiveExpression	"ketcode - GET ( ketcode , 1 )"		908484	1		-			
ANR	913313	Identifier	ketcode		908484	0					
ANR	913314	CallExpression	"GET ( ketcode , 1 )"		908484	1					
ANR	913315	Callee	GET		908484	0					
ANR	913316	Identifier	GET		908484	0					
ANR	913317	ArgumentList	ketcode		908484	1					
ANR	913318	Argument	ketcode		908484	0					
ANR	913319	Identifier	ketcode		908484	0					
ANR	913320	Argument	1		908484	1					
ANR	913321	PrimaryExpression	1		908484	0					
ANR	913322	IfStatement	if ( ( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier )		908484	2					
ANR	913323	Condition	( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier	6268:12:204104:204187	908484	0	True				
ANR	913324	AndExpression	( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier		908484	0		&&			
ANR	913325	OrExpression	* bracode == OP_ONCE || * bracode == OP_ONCE_NC		908484	0		||			
ANR	913326	EqualityExpression	* bracode == OP_ONCE		908484	0		==			
ANR	913327	UnaryOperationExpression	* bracode		908484	0					
ANR	913328	UnaryOperator	*		908484	0					
ANR	913329	Identifier	bracode		908484	1					
ANR	913330	Identifier	OP_ONCE		908484	1					
ANR	913331	EqualityExpression	* bracode == OP_ONCE_NC		908484	1		==			
ANR	913332	UnaryOperationExpression	* bracode		908484	0					
ANR	913333	UnaryOperator	*		908484	0					
ANR	913334	Identifier	bracode		908484	1					
ANR	913335	Identifier	OP_ONCE_NC		908484	1					
ANR	913336	Identifier	possessive_quantifier		908484	1					
ANR	913337	ExpressionStatement	* bracode = OP_BRA	6269:35:204190:204207	908484	1	True				
ANR	913338	AssignmentExpression	* bracode = OP_BRA		908484	0		=			
ANR	913339	UnaryOperationExpression	* bracode		908484	0					
ANR	913340	UnaryOperator	*		908484	0					
ANR	913341	Identifier	bracode		908484	1					
ANR	913342	Identifier	OP_BRA		908484	1					
ANR	913343	IfStatement	if ( * bracode == OP_ONCE || * bracode == OP_ONCE_NC )		908484	3					
ANR	913344	Condition	* bracode == OP_ONCE || * bracode == OP_ONCE_NC	6274:12:204316:204360	908484	0	True				
ANR	913345	OrExpression	* bracode == OP_ONCE || * bracode == OP_ONCE_NC		908484	0		||			
ANR	913346	EqualityExpression	* bracode == OP_ONCE		908484	0		==			
ANR	913347	UnaryOperationExpression	* bracode		908484	0					
ANR	913348	UnaryOperator	*		908484	0					
ANR	913349	Identifier	bracode		908484	1					
ANR	913350	Identifier	OP_ONCE		908484	1					
ANR	913351	EqualityExpression	* bracode == OP_ONCE_NC		908484	1		==			
ANR	913352	UnaryOperationExpression	* bracode		908484	0					
ANR	913353	UnaryOperator	*		908484	0					
ANR	913354	Identifier	bracode		908484	1					
ANR	913355	Identifier	OP_ONCE_NC		908484	1					
ANR	913356	ExpressionStatement	* ketcode = OP_KETRMAX + repeat_type	6275:10:204373:204408	908484	1	True				
ANR	913357	AssignmentExpression	* ketcode = OP_KETRMAX + repeat_type		908484	0		=			
ANR	913358	UnaryOperationExpression	* ketcode		908484	0					
ANR	913359	UnaryOperator	*		908484	0					
ANR	913360	Identifier	ketcode		908484	1					
ANR	913361	AdditiveExpression	OP_KETRMAX + repeat_type		908484	1		+			
ANR	913362	Identifier	OP_KETRMAX		908484	0					
ANR	913363	Identifier	repeat_type		908484	1					
ANR	913364	ElseStatement	else		908484	0					
ANR	913365	CompoundStatement		1824:10:64679:64679	908484	0					
ANR	913366	IfStatement	if ( lengthptr == NULL )		908484	0					
ANR	913367	Condition	lengthptr == NULL	6284:14:204643:204659	908484	0	True				
ANR	913368	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	913369	Identifier	lengthptr		908484	0					
ANR	913370	Identifier	NULL		908484	1					
ANR	913371	CompoundStatement		1829:12:64812:64839	908484	1					
ANR	913372	IdentifierDeclStatement	pcre_uchar * scode = bracode ;	6286:12:204688:204715	908484	0	True				
ANR	913373	IdentifierDecl	* scode = bracode		908484	0					
ANR	913374	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913375	Identifier	scode		908484	1					
ANR	913376	AssignmentExpression	* scode = bracode		908484	2		=			
ANR	913377	Identifier	bracode		908484	0					
ANR	913378	Identifier	bracode		908484	1					
ANR	913379	DoStatement	do		908484	1					
ANR	913380	CompoundStatement		1831:14:64870:64870	908484	0					
ANR	913381	IfStatement	"if ( could_be_empty_branch ( scode , ketcode , utf , cd , NULL ) )"		908484	0					
ANR	913382	Condition	"could_be_empty_branch ( scode , ketcode , utf , cd , NULL )"	6289:18:204766:204817	908484	0	True				
ANR	913383	CallExpression	"could_be_empty_branch ( scode , ketcode , utf , cd , NULL )"		908484	0					
ANR	913384	Callee	could_be_empty_branch		908484	0					
ANR	913385	Identifier	could_be_empty_branch		908484	0					
ANR	913386	ArgumentList	scode		908484	1					
ANR	913387	Argument	scode		908484	0					
ANR	913388	Identifier	scode		908484	0					
ANR	913389	Argument	ketcode		908484	1					
ANR	913390	Identifier	ketcode		908484	0					
ANR	913391	Argument	utf		908484	2					
ANR	913392	Identifier	utf		908484	0					
ANR	913393	Argument	cd		908484	3					
ANR	913394	Identifier	cd		908484	0					
ANR	913395	Argument	NULL		908484	4					
ANR	913396	Identifier	NULL		908484	0					
ANR	913397	CompoundStatement		1833:16:64960:64960	908484	1					
ANR	913398	ExpressionStatement	* bracode += OP_SBRA - OP_BRA	6291:16:204854:204882	908484	0	True				
ANR	913399	AssignmentExpression	* bracode += OP_SBRA - OP_BRA		908484	0		+=			
ANR	913400	UnaryOperationExpression	* bracode		908484	0					
ANR	913401	UnaryOperator	*		908484	0					
ANR	913402	Identifier	bracode		908484	1					
ANR	913403	AdditiveExpression	OP_SBRA - OP_BRA		908484	1		-			
ANR	913404	Identifier	OP_SBRA		908484	0					
ANR	913405	Identifier	OP_BRA		908484	1					
ANR	913406	BreakStatement	break ;	6292:16:204900:204905	908484	1	True				
ANR	913407	ExpressionStatement	"scode += GET ( scode , 1 )"	6294:14:204939:204961	908484	1	True				
ANR	913408	AssignmentExpression	"scode += GET ( scode , 1 )"		908484	0		+=			
ANR	913409	Identifier	scode		908484	0					
ANR	913410	CallExpression	"GET ( scode , 1 )"		908484	1					
ANR	913411	Callee	GET		908484	0					
ANR	913412	Identifier	GET		908484	0					
ANR	913413	ArgumentList	scode		908484	1					
ANR	913414	Argument	scode		908484	0					
ANR	913415	Identifier	scode		908484	0					
ANR	913416	Argument	1		908484	1					
ANR	913417	PrimaryExpression	1		908484	0					
ANR	913418	Condition	* scode == OP_ALT	6296:19:204998:205013	908484	1	True				
ANR	913419	EqualityExpression	* scode == OP_ALT		908484	0		==			
ANR	913420	UnaryOperationExpression	* scode		908484	0					
ANR	913421	UnaryOperator	*		908484	0					
ANR	913422	Identifier	scode		908484	1					
ANR	913423	Identifier	OP_ALT		908484	1					
ANR	913424	IfStatement	"if ( * bracode == OP_COND && bracode [ GET ( bracode , 1 ) ] != OP_ALT )"		908484	1					
ANR	913425	Condition	"* bracode == OP_COND && bracode [ GET ( bracode , 1 ) ] != OP_ALT"	6302:14:205156:205211	908484	0	True				
ANR	913426	AndExpression	"* bracode == OP_COND && bracode [ GET ( bracode , 1 ) ] != OP_ALT"		908484	0		&&			
ANR	913427	EqualityExpression	* bracode == OP_COND		908484	0		==			
ANR	913428	UnaryOperationExpression	* bracode		908484	0					
ANR	913429	UnaryOperator	*		908484	0					
ANR	913430	Identifier	bracode		908484	1					
ANR	913431	Identifier	OP_COND		908484	1					
ANR	913432	EqualityExpression	"bracode [ GET ( bracode , 1 ) ] != OP_ALT"		908484	1		!=			
ANR	913433	ArrayIndexing	"bracode [ GET ( bracode , 1 ) ]"		908484	0					
ANR	913434	Identifier	bracode		908484	0					
ANR	913435	CallExpression	"GET ( bracode , 1 )"		908484	1					
ANR	913436	Callee	GET		908484	0					
ANR	913437	Identifier	GET		908484	0					
ANR	913438	ArgumentList	bracode		908484	1					
ANR	913439	Argument	bracode		908484	0					
ANR	913440	Identifier	bracode		908484	0					
ANR	913441	Argument	1		908484	1					
ANR	913442	PrimaryExpression	1		908484	0					
ANR	913443	Identifier	OP_ALT		908484	1					
ANR	913444	ExpressionStatement	* bracode = OP_SCOND	6303:12:205226:205245	908484	1	True				
ANR	913445	AssignmentExpression	* bracode = OP_SCOND		908484	0		=			
ANR	913446	UnaryOperationExpression	* bracode		908484	0					
ANR	913447	UnaryOperator	*		908484	0					
ANR	913448	Identifier	bracode		908484	1					
ANR	913449	Identifier	OP_SCOND		908484	1					
ANR	913450	IfStatement	if ( possessive_quantifier )		908484	2					
ANR	913451	Condition	possessive_quantifier	6307:14:205310:205330	908484	0	True				
ANR	913452	Identifier	possessive_quantifier		908484	0					
ANR	913453	CompoundStatement		1851:12:65469:65469	908484	1					
ANR	913454	IfStatement	if ( * bracode == OP_COND || * bracode == OP_SCOND )		908484	0					
ANR	913455	Condition	* bracode == OP_COND || * bracode == OP_SCOND	6314:16:205674:205716	908484	0	True				
ANR	913456	OrExpression	* bracode == OP_COND || * bracode == OP_SCOND		908484	0		||			
ANR	913457	EqualityExpression	* bracode == OP_COND		908484	0		==			
ANR	913458	UnaryOperationExpression	* bracode		908484	0					
ANR	913459	UnaryOperator	*		908484	0					
ANR	913460	Identifier	bracode		908484	1					
ANR	913461	Identifier	OP_COND		908484	1					
ANR	913462	EqualityExpression	* bracode == OP_SCOND		908484	1		==			
ANR	913463	UnaryOperationExpression	* bracode		908484	0					
ANR	913464	UnaryOperator	*		908484	0					
ANR	913465	Identifier	bracode		908484	1					
ANR	913466	Identifier	OP_SCOND		908484	1					
ANR	913467	CompoundStatement		1859:14:65873:65905	908484	1					
ANR	913468	IdentifierDeclStatement	int nlen = ( int ) ( code - bracode ) ;	6316:14:205749:205781	908484	0	True				
ANR	913469	IdentifierDecl	nlen = ( int ) ( code - bracode )		908484	0					
ANR	913470	IdentifierDeclType	int		908484	0					
ANR	913471	Identifier	nlen		908484	1					
ANR	913472	AssignmentExpression	nlen = ( int ) ( code - bracode )		908484	2		=			
ANR	913473	Identifier	nlen		908484	0					
ANR	913474	CastExpression	( int ) ( code - bracode )		908484	1					
ANR	913475	CastTarget	int		908484	0					
ANR	913476	AdditiveExpression	code - bracode		908484	1		-			
ANR	913477	Identifier	code		908484	0					
ANR	913478	Identifier	bracode		908484	1					
ANR	913479	ExpressionStatement	* code = OP_END	6317:14:205797:205811	908484	1	True				
ANR	913480	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	913481	UnaryOperationExpression	* code		908484	0					
ANR	913482	UnaryOperator	*		908484	0					
ANR	913483	Identifier	code		908484	1					
ANR	913484	Identifier	OP_END		908484	1					
ANR	913485	ExpressionStatement	"adjust_recurse ( bracode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"	6318:14:205827:205891	908484	2	True				
ANR	913486	CallExpression	"adjust_recurse ( bracode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"		908484	0					
ANR	913487	Callee	adjust_recurse		908484	0					
ANR	913488	Identifier	adjust_recurse		908484	0					
ANR	913489	ArgumentList	bracode		908484	1					
ANR	913490	Argument	bracode		908484	0					
ANR	913491	Identifier	bracode		908484	0					
ANR	913492	Argument	1 + LINK_SIZE		908484	1					
ANR	913493	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	913494	PrimaryExpression	1		908484	0					
ANR	913495	Identifier	LINK_SIZE		908484	1					
ANR	913496	Argument	utf		908484	2					
ANR	913497	Identifier	utf		908484	0					
ANR	913498	Argument	cd		908484	3					
ANR	913499	Identifier	cd		908484	0					
ANR	913500	Argument	item_hwm_offset		908484	4					
ANR	913501	Identifier	item_hwm_offset		908484	0					
ANR	913502	ExpressionStatement	"memmove ( bracode + 1 + LINK_SIZE , bracode , IN_UCHARS ( nlen ) )"	6319:14:205907:205965	908484	3	True				
ANR	913503	CallExpression	"memmove ( bracode + 1 + LINK_SIZE , bracode , IN_UCHARS ( nlen ) )"		908484	0					
ANR	913504	Callee	memmove		908484	0					
ANR	913505	Identifier	memmove		908484	0					
ANR	913506	ArgumentList	bracode + 1 + LINK_SIZE		908484	1					
ANR	913507	Argument	bracode + 1 + LINK_SIZE		908484	0					
ANR	913508	AdditiveExpression	bracode + 1 + LINK_SIZE		908484	0		+			
ANR	913509	Identifier	bracode		908484	0					
ANR	913510	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	913511	PrimaryExpression	1		908484	0					
ANR	913512	Identifier	LINK_SIZE		908484	1					
ANR	913513	Argument	bracode		908484	1					
ANR	913514	Identifier	bracode		908484	0					
ANR	913515	Argument	IN_UCHARS ( nlen )		908484	2					
ANR	913516	CallExpression	IN_UCHARS ( nlen )		908484	0					
ANR	913517	Callee	IN_UCHARS		908484	0					
ANR	913518	Identifier	IN_UCHARS		908484	0					
ANR	913519	ArgumentList	nlen		908484	1					
ANR	913520	Argument	nlen		908484	0					
ANR	913521	Identifier	nlen		908484	0					
ANR	913522	ExpressionStatement	code += 1 + LINK_SIZE	6320:14:205981:206002	908484	4	True				
ANR	913523	AssignmentExpression	code += 1 + LINK_SIZE		908484	0		+=			
ANR	913524	Identifier	code		908484	0					
ANR	913525	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	913526	PrimaryExpression	1		908484	0					
ANR	913527	Identifier	LINK_SIZE		908484	1					
ANR	913528	ExpressionStatement	nlen += 1 + LINK_SIZE	6321:14:206018:206039	908484	5	True				
ANR	913529	AssignmentExpression	nlen += 1 + LINK_SIZE		908484	0		+=			
ANR	913530	Identifier	nlen		908484	0					
ANR	913531	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	913532	PrimaryExpression	1		908484	0					
ANR	913533	Identifier	LINK_SIZE		908484	1					
ANR	913534	ExpressionStatement	* bracode = ( * bracode == OP_COND ) ? OP_BRAPOS : OP_SBRAPOS	6322:14:206055:206111	908484	6	True				
ANR	913535	AssignmentExpression	* bracode = ( * bracode == OP_COND ) ? OP_BRAPOS : OP_SBRAPOS		908484	0		=			
ANR	913536	UnaryOperationExpression	* bracode		908484	0					
ANR	913537	UnaryOperator	*		908484	0					
ANR	913538	Identifier	bracode		908484	1					
ANR	913539	ConditionalExpression	( * bracode == OP_COND ) ? OP_BRAPOS : OP_SBRAPOS		908484	1					
ANR	913540	Condition	* bracode == OP_COND		908484	0					
ANR	913541	EqualityExpression	* bracode == OP_COND		908484	0		==			
ANR	913542	UnaryOperationExpression	* bracode		908484	0					
ANR	913543	UnaryOperator	*		908484	0					
ANR	913544	Identifier	bracode		908484	1					
ANR	913545	Identifier	OP_COND		908484	1					
ANR	913546	Identifier	OP_BRAPOS		908484	1					
ANR	913547	Identifier	OP_SBRAPOS		908484	2					
ANR	913548	ExpressionStatement	* code ++ = OP_KETRPOS	6323:14:206127:206147	908484	7	True				
ANR	913549	AssignmentExpression	* code ++ = OP_KETRPOS		908484	0		=			
ANR	913550	UnaryOperationExpression	* code ++		908484	0					
ANR	913551	UnaryOperator	*		908484	0					
ANR	913552	PostIncDecOperationExpression	code ++		908484	1					
ANR	913553	Identifier	code		908484	0					
ANR	913554	IncDec	++		908484	1					
ANR	913555	Identifier	OP_KETRPOS		908484	1					
ANR	913556	ExpressionStatement	"PUTINC ( code , 0 , nlen )"	6324:14:206163:206184	908484	8	True				
ANR	913557	CallExpression	"PUTINC ( code , 0 , nlen )"		908484	0					
ANR	913558	Callee	PUTINC		908484	0					
ANR	913559	Identifier	PUTINC		908484	0					
ANR	913560	ArgumentList	code		908484	1					
ANR	913561	Argument	code		908484	0					
ANR	913562	Identifier	code		908484	0					
ANR	913563	Argument	0		908484	1					
ANR	913564	PrimaryExpression	0		908484	0					
ANR	913565	Argument	nlen		908484	2					
ANR	913566	Identifier	nlen		908484	0					
ANR	913567	ExpressionStatement	"PUT ( bracode , 1 , nlen )"	6325:14:206200:206221	908484	9	True				
ANR	913568	CallExpression	"PUT ( bracode , 1 , nlen )"		908484	0					
ANR	913569	Callee	PUT		908484	0					
ANR	913570	Identifier	PUT		908484	0					
ANR	913571	ArgumentList	bracode		908484	1					
ANR	913572	Argument	bracode		908484	0					
ANR	913573	Identifier	bracode		908484	0					
ANR	913574	Argument	1		908484	1					
ANR	913575	PrimaryExpression	1		908484	0					
ANR	913576	Argument	nlen		908484	2					
ANR	913577	Identifier	nlen		908484	0					
ANR	913578	ElseStatement	else		908484	0					
ANR	913579	CompoundStatement		1874:14:66477:66477	908484	0					
ANR	913580	ExpressionStatement	* bracode += 1	6332:14:206369:206382	908484	0	True				
ANR	913581	AssignmentExpression	* bracode += 1		908484	0		+=			
ANR	913582	UnaryOperationExpression	* bracode		908484	0					
ANR	913583	UnaryOperator	*		908484	0					
ANR	913584	Identifier	bracode		908484	1					
ANR	913585	PrimaryExpression	1		908484	1					
ANR	913586	ExpressionStatement	* ketcode = OP_KETRPOS	6333:14:206442:206463	908484	1	True				
ANR	913587	AssignmentExpression	* ketcode = OP_KETRPOS		908484	0		=			
ANR	913588	UnaryOperationExpression	* ketcode		908484	0					
ANR	913589	UnaryOperator	*		908484	0					
ANR	913590	Identifier	ketcode		908484	1					
ANR	913591	Identifier	OP_KETRPOS		908484	1					
ANR	913592	IfStatement	if ( brazeroptr != NULL )		908484	1					
ANR	913593	Condition	brazeroptr != NULL	6339:16:206635:206652	908484	0	True				
ANR	913594	EqualityExpression	brazeroptr != NULL		908484	0		!=			
ANR	913595	Identifier	brazeroptr		908484	0					
ANR	913596	Identifier	NULL		908484	1					
ANR	913597	ExpressionStatement	* brazeroptr = OP_BRAPOSZERO	6339:36:206655:206682	908484	1	True				
ANR	913598	AssignmentExpression	* brazeroptr = OP_BRAPOSZERO		908484	0		=			
ANR	913599	UnaryOperationExpression	* brazeroptr		908484	0					
ANR	913600	UnaryOperator	*		908484	0					
ANR	913601	Identifier	brazeroptr		908484	1					
ANR	913602	Identifier	OP_BRAPOSZERO		908484	1					
ANR	913603	IfStatement	if ( repeat_min < 2 )		908484	2					
ANR	913604	Condition	repeat_min < 2	6340:16:206700:206713	908484	0	True				
ANR	913605	RelationalExpression	repeat_min < 2		908484	0		<			
ANR	913606	Identifier	repeat_min		908484	0					
ANR	913607	PrimaryExpression	2		908484	1					
ANR	913608	ExpressionStatement	possessive_quantifier = FALSE	6340:32:206716:206745	908484	1	True				
ANR	913609	AssignmentExpression	possessive_quantifier = FALSE		908484	0		=			
ANR	913610	Identifier	possessive_quantifier		908484	0					
ANR	913611	Identifier	FALSE		908484	1					
ANR	913612	ElseStatement	else		908484	0					
ANR	913613	ExpressionStatement	* ketcode = OP_KETRMAX + repeat_type	6345:15:206820:206855	908484	0	True				
ANR	913614	AssignmentExpression	* ketcode = OP_KETRMAX + repeat_type		908484	0		=			
ANR	913615	UnaryOperationExpression	* ketcode		908484	0					
ANR	913616	UnaryOperator	*		908484	0					
ANR	913617	Identifier	ketcode		908484	1					
ANR	913618	AdditiveExpression	OP_KETRMAX + repeat_type		908484	1		+			
ANR	913619	Identifier	OP_KETRMAX		908484	0					
ANR	913620	Identifier	repeat_type		908484	1					
ANR	913621	ElseStatement	else		908484	0					
ANR	913622	IfStatement	if ( * previous == OP_FAIL )		908484	0					
ANR	913623	Condition	* previous == OP_FAIL	6355:13:207194:207213	908484	0	True				
ANR	913624	EqualityExpression	* previous == OP_FAIL		908484	0		==			
ANR	913625	UnaryOperationExpression	* previous		908484	0					
ANR	913626	UnaryOperator	*		908484	0					
ANR	913627	Identifier	previous		908484	1					
ANR	913628	Identifier	OP_FAIL		908484	1					
ANR	913629	GotoStatement	goto END_REPEAT ;	6355:35:207216:207231	908484	1	True				
ANR	913630	Identifier	END_REPEAT		908484	0					
ANR	913631	ElseStatement	else		908484	0					
ANR	913632	CompoundStatement		1903:6:67419:67419	908484	0					
ANR	913633	ExpressionStatement	* errorcodeptr = ERR11	6361:6:207303:207324	908484	0	True				
ANR	913634	AssignmentExpression	* errorcodeptr = ERR11		908484	0		=			
ANR	913635	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	913636	UnaryOperator	*		908484	0					
ANR	913637	Identifier	errorcodeptr		908484	1					
ANR	913638	Identifier	ERR11		908484	1					
ANR	913639	GotoStatement	goto FAILED ;	6362:6:207332:207343	908484	1	True				
ANR	913640	Identifier	FAILED		908484	0					
ANR	913641	IfStatement	if ( * previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI )		908484	90					
ANR	913642	Condition	* previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI	5729:8:183984:184083	908484	0	True				
ANR	913643	OrExpression	* previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI		908484	0		||			
ANR	913644	EqualityExpression	* previous == OP_CHAR		908484	0		==			
ANR	913645	UnaryOperationExpression	* previous		908484	0					
ANR	913646	UnaryOperator	*		908484	0					
ANR	913647	Identifier	previous		908484	1					
ANR	913648	Identifier	OP_CHAR		908484	1					
ANR	913649	OrExpression	* previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI		908484	1		||			
ANR	913650	EqualityExpression	* previous == OP_CHARI		908484	0		==			
ANR	913651	UnaryOperationExpression	* previous		908484	0					
ANR	913652	UnaryOperator	*		908484	0					
ANR	913653	Identifier	previous		908484	1					
ANR	913654	Identifier	OP_CHARI		908484	1					
ANR	913655	OrExpression	* previous == OP_NOT || * previous == OP_NOTI		908484	1		||			
ANR	913656	EqualityExpression	* previous == OP_NOT		908484	0		==			
ANR	913657	UnaryOperationExpression	* previous		908484	0					
ANR	913658	UnaryOperator	*		908484	0					
ANR	913659	Identifier	previous		908484	1					
ANR	913660	Identifier	OP_NOT		908484	1					
ANR	913661	EqualityExpression	* previous == OP_NOTI		908484	1		==			
ANR	913662	UnaryOperationExpression	* previous		908484	0					
ANR	913663	UnaryOperator	*		908484	0					
ANR	913664	Identifier	previous		908484	1					
ANR	913665	Identifier	OP_NOTI		908484	1					
ANR	913666	CompoundStatement		1274:6:44216:44216	908484	1					
ANR	913667	SwitchStatement	switch ( * previous )		908484	0					
ANR	913668	Condition	* previous	5732:14:184108:184116	908484	0	True				
ANR	913669	UnaryOperationExpression	* previous		908484	0					
ANR	913670	UnaryOperator	*		908484	0					
ANR	913671	Identifier	previous		908484	1					
ANR	913672	CompoundStatement		1276:8:44251:44251	908484	1					
ANR	913673	Label	default :	5734:8:184137:184144	908484	0	True				
ANR	913674	Identifier	default		908484	0					
ANR	913675	Label	case OP_CHAR :	5735:8:184181:184193	908484	1	True				
ANR	913676	Identifier	OP_CHAR		908484	0					
ANR	913677	ExpressionStatement	op_type = OP_STAR - OP_STAR	5735:23:184196:184223	908484	2	True				
ANR	913678	AssignmentExpression	op_type = OP_STAR - OP_STAR		908484	0		=			
ANR	913679	Identifier	op_type		908484	0					
ANR	913680	AdditiveExpression	OP_STAR - OP_STAR		908484	1		-			
ANR	913681	Identifier	OP_STAR		908484	0					
ANR	913682	Identifier	OP_STAR		908484	1					
ANR	913683	BreakStatement	break ;	5735:52:184225:184230	908484	3	True				
ANR	913684	Label	case OP_CHARI :	5736:8:184240:184253	908484	4	True				
ANR	913685	Identifier	OP_CHARI		908484	0					
ANR	913686	ExpressionStatement	op_type = OP_STARI - OP_STAR	5736:23:184255:184283	908484	5	True				
ANR	913687	AssignmentExpression	op_type = OP_STARI - OP_STAR		908484	0		=			
ANR	913688	Identifier	op_type		908484	0					
ANR	913689	AdditiveExpression	OP_STARI - OP_STAR		908484	1		-			
ANR	913690	Identifier	OP_STARI		908484	0					
ANR	913691	Identifier	OP_STAR		908484	1					
ANR	913692	BreakStatement	break ;	5736:53:184285:184290	908484	6	True				
ANR	913693	Label	case OP_NOT :	5737:8:184300:184311	908484	7	True				
ANR	913694	Identifier	OP_NOT		908484	0					
ANR	913695	ExpressionStatement	op_type = OP_NOTSTAR - OP_STAR	5737:23:184315:184345	908484	8	True				
ANR	913696	AssignmentExpression	op_type = OP_NOTSTAR - OP_STAR		908484	0		=			
ANR	913697	Identifier	op_type		908484	0					
ANR	913698	AdditiveExpression	OP_NOTSTAR - OP_STAR		908484	1		-			
ANR	913699	Identifier	OP_NOTSTAR		908484	0					
ANR	913700	Identifier	OP_STAR		908484	1					
ANR	913701	BreakStatement	break ;	5737:55:184347:184352	908484	9	True				
ANR	913702	Label	case OP_NOTI :	5738:8:184362:184374	908484	10	True				
ANR	913703	Identifier	OP_NOTI		908484	0					
ANR	913704	ExpressionStatement	op_type = OP_NOTSTARI - OP_STAR	5738:23:184377:184408	908484	11	True				
ANR	913705	AssignmentExpression	op_type = OP_NOTSTARI - OP_STAR		908484	0		=			
ANR	913706	Identifier	op_type		908484	0					
ANR	913707	AdditiveExpression	OP_NOTSTARI - OP_STAR		908484	1		-			
ANR	913708	Identifier	OP_NOTSTARI		908484	0					
ANR	913709	Identifier	OP_STAR		908484	1					
ANR	913710	BreakStatement	break ;	5738:56:184410:184415	908484	12	True				
ANR	913711	IfStatement	if ( utf && NOT_FIRSTCHAR ( code [ - 1 ] ) )		908484	1					
ANR	913712	Condition	utf && NOT_FIRSTCHAR ( code [ - 1 ] )	5747:10:184774:184803	908484	0	True				
ANR	913713	AndExpression	utf && NOT_FIRSTCHAR ( code [ - 1 ] )		908484	0		&&			
ANR	913714	Identifier	utf		908484	0					
ANR	913715	CallExpression	NOT_FIRSTCHAR ( code [ - 1 ] )		908484	1					
ANR	913716	Callee	NOT_FIRSTCHAR		908484	0					
ANR	913717	Identifier	NOT_FIRSTCHAR		908484	0					
ANR	913718	ArgumentList	code [ - 1 ]		908484	1					
ANR	913719	Argument	code [ - 1 ]		908484	0					
ANR	913720	ArrayIndexing	code [ - 1 ]		908484	0					
ANR	913721	Identifier	code		908484	0					
ANR	913722	UnaryOperationExpression	- 1		908484	1					
ANR	913723	UnaryOperator	-		908484	0					
ANR	913724	PrimaryExpression	1		908484	1					
ANR	913725	CompoundStatement		1292:8:44948:44979	908484	1					
ANR	913726	IdentifierDeclStatement	pcre_uchar * lastchar = code - 1 ;	5749:8:184824:184855	908484	0	True				
ANR	913727	IdentifierDecl	* lastchar = code - 1		908484	0					
ANR	913728	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913729	Identifier	lastchar		908484	1					
ANR	913730	AssignmentExpression	* lastchar = code - 1		908484	2		=			
ANR	913731	Identifier	lastchar		908484	0					
ANR	913732	AdditiveExpression	code - 1		908484	1		-			
ANR	913733	Identifier	code		908484	0					
ANR	913734	PrimaryExpression	1		908484	1					
ANR	913735	ExpressionStatement	BACKCHAR ( lastchar )	5750:8:184865:184883	908484	1	True				
ANR	913736	CallExpression	BACKCHAR ( lastchar )		908484	0					
ANR	913737	Callee	BACKCHAR		908484	0					
ANR	913738	Identifier	BACKCHAR		908484	0					
ANR	913739	ArgumentList	lastchar		908484	1					
ANR	913740	Argument	lastchar		908484	0					
ANR	913741	Identifier	lastchar		908484	0					
ANR	913742	ExpressionStatement	c = ( int ) ( code - lastchar )	5751:8:184893:184919	908484	2	True				
ANR	913743	AssignmentExpression	c = ( int ) ( code - lastchar )		908484	0		=			
ANR	913744	Identifier	c		908484	0					
ANR	913745	CastExpression	( int ) ( code - lastchar )		908484	1					
ANR	913746	CastTarget	int		908484	0					
ANR	913747	AdditiveExpression	code - lastchar		908484	1		-			
ANR	913748	Identifier	code		908484	0					
ANR	913749	Identifier	lastchar		908484	1					
ANR	913750	ExpressionStatement	"memcpy ( utf_chars , lastchar , IN_UCHARS ( c ) )"	5752:8:184965:185006	908484	3	True				
ANR	913751	CallExpression	"memcpy ( utf_chars , lastchar , IN_UCHARS ( c ) )"		908484	0					
ANR	913752	Callee	memcpy		908484	0					
ANR	913753	Identifier	memcpy		908484	0					
ANR	913754	ArgumentList	utf_chars		908484	1					
ANR	913755	Argument	utf_chars		908484	0					
ANR	913756	Identifier	utf_chars		908484	0					
ANR	913757	Argument	lastchar		908484	1					
ANR	913758	Identifier	lastchar		908484	0					
ANR	913759	Argument	IN_UCHARS ( c )		908484	2					
ANR	913760	CallExpression	IN_UCHARS ( c )		908484	0					
ANR	913761	Callee	IN_UCHARS		908484	0					
ANR	913762	Identifier	IN_UCHARS		908484	0					
ANR	913763	ArgumentList	c		908484	1					
ANR	913764	Argument	c		908484	0					
ANR	913765	Identifier	c		908484	0					
ANR	913766	ExpressionStatement	c |= UTF_LENGTH	5753:8:185036:185051	908484	4	True				
ANR	913767	AssignmentExpression	c |= UTF_LENGTH		908484	0		|=			
ANR	913768	Identifier	c		908484	0					
ANR	913769	Identifier	UTF_LENGTH		908484	1					
ANR	913770	ElseStatement	else		908484	0					
ANR	913771	CompoundStatement		1303:8:45420:45420	908484	0					
ANR	913772	ExpressionStatement	c = code [ - 1 ]	5761:8:185306:185318	908484	0	True				
ANR	913773	AssignmentExpression	c = code [ - 1 ]		908484	0		=			
ANR	913774	Identifier	c		908484	0					
ANR	913775	ArrayIndexing	code [ - 1 ]		908484	1					
ANR	913776	Identifier	code		908484	0					
ANR	913777	UnaryOperationExpression	- 1		908484	1					
ANR	913778	UnaryOperator	-		908484	0					
ANR	913779	PrimaryExpression	1		908484	1					
ANR	913780	IfStatement	if ( * previous <= OP_CHARI && repeat_min > 1 )		908484	1					
ANR	913781	Condition	* previous <= OP_CHARI && repeat_min > 1	5762:12:185332:185370	908484	0	True				
ANR	913782	AndExpression	* previous <= OP_CHARI && repeat_min > 1		908484	0		&&			
ANR	913783	RelationalExpression	* previous <= OP_CHARI		908484	0		<=			
ANR	913784	UnaryOperationExpression	* previous		908484	0					
ANR	913785	UnaryOperator	*		908484	0					
ANR	913786	Identifier	previous		908484	1					
ANR	913787	Identifier	OP_CHARI		908484	1					
ANR	913788	RelationalExpression	repeat_min > 1		908484	1		>			
ANR	913789	Identifier	repeat_min		908484	0					
ANR	913790	PrimaryExpression	1		908484	1					
ANR	913791	CompoundStatement		1306:10:45507:45507	908484	1					
ANR	913792	ExpressionStatement	reqchar = c	5764:10:185395:185406	908484	0	True				
ANR	913793	AssignmentExpression	reqchar = c		908484	0		=			
ANR	913794	Identifier	reqchar		908484	0					
ANR	913795	Identifier	c		908484	1					
ANR	913796	ExpressionStatement	reqcharflags = req_caseopt | cd -> req_varyopt	5765:10:185418:185462	908484	1	True				
ANR	913797	AssignmentExpression	reqcharflags = req_caseopt | cd -> req_varyopt		908484	0		=			
ANR	913798	Identifier	reqcharflags		908484	0					
ANR	913799	InclusiveOrExpression	req_caseopt | cd -> req_varyopt		908484	1		|			
ANR	913800	Identifier	req_caseopt		908484	0					
ANR	913801	PtrMemberAccess	cd -> req_varyopt		908484	1					
ANR	913802	Identifier	cd		908484	0					
ANR	913803	Identifier	req_varyopt		908484	1					
ANR	913804	GotoStatement	goto OUTPUT_SINGLE_REPEAT ;	5769:6:185493:185518	908484	2	True				
ANR	913805	Identifier	OUTPUT_SINGLE_REPEAT		908484	0					
ANR	913806	ElseStatement	else		908484	0					
ANR	913807	IfStatement	if ( * previous < OP_EODN )		908484	0					
ANR	913808	Condition	* previous < OP_EODN	5779:13:186008:186026	908484	0	True				
ANR	913809	RelationalExpression	* previous < OP_EODN		908484	0		<			
ANR	913810	UnaryOperationExpression	* previous		908484	0					
ANR	913811	UnaryOperator	*		908484	0					
ANR	913812	Identifier	previous		908484	1					
ANR	913813	Identifier	OP_EODN		908484	1					
ANR	913814	CompoundStatement		1325:6:46194:46219	908484	1					
ANR	913815	IdentifierDeclStatement	pcre_uchar * oldcode ;	5781:6:186043:186062	908484	0	True				
ANR	913816	IdentifierDecl	* oldcode		908484	0					
ANR	913817	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	913818	Identifier	oldcode		908484	1					
ANR	913819	IdentifierDeclStatement	"int prop_type , prop_value ;"	5782:6:186070:186095	908484	1	True				
ANR	913820	IdentifierDecl	prop_type		908484	0					
ANR	913821	IdentifierDeclType	int		908484	0					
ANR	913822	Identifier	prop_type		908484	1					
ANR	913823	IdentifierDecl	prop_value		908484	1					
ANR	913824	IdentifierDeclType	int		908484	0					
ANR	913825	Identifier	prop_value		908484	1					
ANR	913826	ExpressionStatement	op_type = OP_TYPESTAR - OP_STAR	5783:6:186103:186134	908484	2	True				
ANR	913827	AssignmentExpression	op_type = OP_TYPESTAR - OP_STAR		908484	0		=			
ANR	913828	Identifier	op_type		908484	0					
ANR	913829	AdditiveExpression	OP_TYPESTAR - OP_STAR		908484	1		-			
ANR	913830	Identifier	OP_TYPESTAR		908484	0					
ANR	913831	Identifier	OP_STAR		908484	1					
ANR	913832	ExpressionStatement	c = * previous	5784:6:186166:186179	908484	3	True				
ANR	913833	AssignmentExpression	c = * previous		908484	0		=			
ANR	913834	Identifier	c		908484	0					
ANR	913835	UnaryOperationExpression	* previous		908484	1					
ANR	913836	UnaryOperator	*		908484	0					
ANR	913837	Identifier	previous		908484	1					
ANR	913838	Label	OUTPUT_SINGLE_REPEAT :	5786:6:186188:186208	908484	4	True				
ANR	913839	Identifier	OUTPUT_SINGLE_REPEAT		908484	0					
ANR	913840	IfStatement	if ( * previous == OP_PROP || * previous == OP_NOTPROP )		908484	5					
ANR	913841	Condition	* previous == OP_PROP || * previous == OP_NOTPROP	5787:10:186220:186266	908484	0	True				
ANR	913842	OrExpression	* previous == OP_PROP || * previous == OP_NOTPROP		908484	0		||			
ANR	913843	EqualityExpression	* previous == OP_PROP		908484	0		==			
ANR	913844	UnaryOperationExpression	* previous		908484	0					
ANR	913845	UnaryOperator	*		908484	0					
ANR	913846	Identifier	previous		908484	1					
ANR	913847	Identifier	OP_PROP		908484	1					
ANR	913848	EqualityExpression	* previous == OP_NOTPROP		908484	1		==			
ANR	913849	UnaryOperationExpression	* previous		908484	0					
ANR	913850	UnaryOperator	*		908484	0					
ANR	913851	Identifier	previous		908484	1					
ANR	913852	Identifier	OP_NOTPROP		908484	1					
ANR	913853	CompoundStatement		1331:8:46401:46401	908484	1					
ANR	913854	ExpressionStatement	prop_type = previous [ 1 ]	5789:8:186287:186310	908484	0	True				
ANR	913855	AssignmentExpression	prop_type = previous [ 1 ]		908484	0		=			
ANR	913856	Identifier	prop_type		908484	0					
ANR	913857	ArrayIndexing	previous [ 1 ]		908484	1					
ANR	913858	Identifier	previous		908484	0					
ANR	913859	PrimaryExpression	1		908484	1					
ANR	913860	ExpressionStatement	prop_value = previous [ 2 ]	5790:8:186320:186344	908484	1	True				
ANR	913861	AssignmentExpression	prop_value = previous [ 2 ]		908484	0		=			
ANR	913862	Identifier	prop_value		908484	0					
ANR	913863	ArrayIndexing	previous [ 2 ]		908484	1					
ANR	913864	Identifier	previous		908484	0					
ANR	913865	PrimaryExpression	2		908484	1					
ANR	913866	ElseStatement	else		908484	0					
ANR	913867	ExpressionStatement	prop_type = prop_value = - 1	5792:11:186367:186394	908484	0	True				
ANR	913868	AssignmentExpression	prop_type = prop_value = - 1		908484	0		=			
ANR	913869	Identifier	prop_type		908484	0					
ANR	913870	AssignmentExpression	prop_value = - 1		908484	1		=			
ANR	913871	Identifier	prop_value		908484	0					
ANR	913872	UnaryOperationExpression	- 1		908484	1					
ANR	913873	UnaryOperator	-		908484	0					
ANR	913874	PrimaryExpression	1		908484	1					
ANR	913875	ExpressionStatement	oldcode = code	5794:6:186403:186417	908484	6	True				
ANR	913876	AssignmentExpression	oldcode = code		908484	0		=			
ANR	913877	Identifier	oldcode		908484	0					
ANR	913878	Identifier	code		908484	1					
ANR	913879	ExpressionStatement	code = previous	5795:6:186425:186440	908484	7	True				
ANR	913880	AssignmentExpression	code = previous		908484	0		=			
ANR	913881	Identifier	code		908484	0					
ANR	913882	Identifier	previous		908484	1					
ANR	913883	IfStatement	if ( repeat_max == 0 )		908484	8					
ANR	913884	Condition	repeat_max == 0	5800:10:186664:186678	908484	0	True				
ANR	913885	EqualityExpression	repeat_max == 0		908484	0		==			
ANR	913886	Identifier	repeat_max		908484	0					
ANR	913887	PrimaryExpression	0		908484	1					
ANR	913888	GotoStatement	goto END_REPEAT ;	5800:27:186681:186696	908484	1	True				
ANR	913889	Identifier	END_REPEAT		908484	0					
ANR	913890	ExpressionStatement	repeat_type += op_type	5804:6:186759:186781	908484	9	True				
ANR	913891	AssignmentExpression	repeat_type += op_type		908484	0		+=			
ANR	913892	Identifier	repeat_type		908484	0					
ANR	913893	Identifier	op_type		908484	1					
ANR	913894	IfStatement	if ( repeat_min == 0 )		908484	10					
ANR	913895	Condition	repeat_min == 0	5809:10:186916:186930	908484	0	True				
ANR	913896	EqualityExpression	repeat_min == 0		908484	0		==			
ANR	913897	Identifier	repeat_min		908484	0					
ANR	913898	PrimaryExpression	0		908484	1					
ANR	913899	CompoundStatement		1353:8:47065:47065	908484	1					
ANR	913900	IfStatement	if ( repeat_max == - 1 )		908484	0					
ANR	913901	Condition	repeat_max == - 1	5811:12:186955:186970	908484	0	True				
ANR	913902	EqualityExpression	repeat_max == - 1		908484	0		==			
ANR	913903	Identifier	repeat_max		908484	0					
ANR	913904	UnaryOperationExpression	- 1		908484	1					
ANR	913905	UnaryOperator	-		908484	0					
ANR	913906	PrimaryExpression	1		908484	1					
ANR	913907	ExpressionStatement	* code ++ = OP_STAR + repeat_type	5811:30:186973:187004	908484	1	True				
ANR	913908	AssignmentExpression	* code ++ = OP_STAR + repeat_type		908484	0		=			
ANR	913909	UnaryOperationExpression	* code ++		908484	0					
ANR	913910	UnaryOperator	*		908484	0					
ANR	913911	PostIncDecOperationExpression	code ++		908484	1					
ANR	913912	Identifier	code		908484	0					
ANR	913913	IncDec	++		908484	1					
ANR	913914	AdditiveExpression	OP_STAR + repeat_type		908484	1		+			
ANR	913915	Identifier	OP_STAR		908484	0					
ANR	913916	Identifier	repeat_type		908484	1					
ANR	913917	ElseStatement	else		908484	0					
ANR	913918	IfStatement	if ( repeat_max == 1 )		908484	0					
ANR	913919	Condition	repeat_max == 1	5812:19:187025:187039	908484	0	True				
ANR	913920	EqualityExpression	repeat_max == 1		908484	0		==			
ANR	913921	Identifier	repeat_max		908484	0					
ANR	913922	PrimaryExpression	1		908484	1					
ANR	913923	ExpressionStatement	* code ++ = OP_QUERY + repeat_type	5812:36:187042:187074	908484	1	True				
ANR	913924	AssignmentExpression	* code ++ = OP_QUERY + repeat_type		908484	0		=			
ANR	913925	UnaryOperationExpression	* code ++		908484	0					
ANR	913926	UnaryOperator	*		908484	0					
ANR	913927	PostIncDecOperationExpression	code ++		908484	1					
ANR	913928	Identifier	code		908484	0					
ANR	913929	IncDec	++		908484	1					
ANR	913930	AdditiveExpression	OP_QUERY + repeat_type		908484	1		+			
ANR	913931	Identifier	OP_QUERY		908484	0					
ANR	913932	Identifier	repeat_type		908484	1					
ANR	913933	ElseStatement	else		908484	0					
ANR	913934	CompoundStatement		1357:10:47223:47223	908484	0					
ANR	913935	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5815:10:187111:187142	908484	0	True				
ANR	913936	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		908484	0		=			
ANR	913937	UnaryOperationExpression	* code ++		908484	0					
ANR	913938	UnaryOperator	*		908484	0					
ANR	913939	PostIncDecOperationExpression	code ++		908484	1					
ANR	913940	Identifier	code		908484	0					
ANR	913941	IncDec	++		908484	1					
ANR	913942	AdditiveExpression	OP_UPTO + repeat_type		908484	1		+			
ANR	913943	Identifier	OP_UPTO		908484	0					
ANR	913944	Identifier	repeat_type		908484	1					
ANR	913945	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5816:10:187154:187182	908484	1	True				
ANR	913946	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		908484	0					
ANR	913947	Callee	PUT2INC		908484	0					
ANR	913948	Identifier	PUT2INC		908484	0					
ANR	913949	ArgumentList	code		908484	1					
ANR	913950	Argument	code		908484	0					
ANR	913951	Identifier	code		908484	0					
ANR	913952	Argument	0		908484	1					
ANR	913953	PrimaryExpression	0		908484	0					
ANR	913954	Argument	repeat_max		908484	2					
ANR	913955	Identifier	repeat_max		908484	0					
ANR	913956	ElseStatement	else		908484	0					
ANR	913957	IfStatement	if ( repeat_min == 1 )		908484	0					
ANR	913958	Condition	repeat_min == 1	5825:15:187490:187504	908484	0	True				
ANR	913959	EqualityExpression	repeat_min == 1		908484	0		==			
ANR	913960	Identifier	repeat_min		908484	0					
ANR	913961	PrimaryExpression	1		908484	1					
ANR	913962	CompoundStatement		1369:8:47639:47639	908484	1					
ANR	913963	IfStatement	if ( repeat_max == - 1 )		908484	0					
ANR	913964	Condition	repeat_max == - 1	5827:12:187529:187544	908484	0	True				
ANR	913965	EqualityExpression	repeat_max == - 1		908484	0		==			
ANR	913966	Identifier	repeat_max		908484	0					
ANR	913967	UnaryOperationExpression	- 1		908484	1					
ANR	913968	UnaryOperator	-		908484	0					
ANR	913969	PrimaryExpression	1		908484	1					
ANR	913970	ExpressionStatement	* code ++ = OP_PLUS + repeat_type	5828:10:187557:187588	908484	1	True				
ANR	913971	AssignmentExpression	* code ++ = OP_PLUS + repeat_type		908484	0		=			
ANR	913972	UnaryOperationExpression	* code ++		908484	0					
ANR	913973	UnaryOperator	*		908484	0					
ANR	913974	PostIncDecOperationExpression	code ++		908484	1					
ANR	913975	Identifier	code		908484	0					
ANR	913976	IncDec	++		908484	1					
ANR	913977	AdditiveExpression	OP_PLUS + repeat_type		908484	1		+			
ANR	913978	Identifier	OP_PLUS		908484	0					
ANR	913979	Identifier	repeat_type		908484	1					
ANR	913980	ElseStatement	else		908484	0					
ANR	913981	CompoundStatement		1373:10:47737:47737	908484	0					
ANR	913982	ExpressionStatement	code = oldcode	5831:10:187625:187639	908484	0	True				
ANR	913983	AssignmentExpression	code = oldcode		908484	0		=			
ANR	913984	Identifier	code		908484	0					
ANR	913985	Identifier	oldcode		908484	1					
ANR	913986	IfStatement	if ( repeat_max == 1 )		908484	1					
ANR	913987	Condition	repeat_max == 1	5832:14:187706:187720	908484	0	True				
ANR	913988	EqualityExpression	repeat_max == 1		908484	0		==			
ANR	913989	Identifier	repeat_max		908484	0					
ANR	913990	PrimaryExpression	1		908484	1					
ANR	913991	GotoStatement	goto END_REPEAT ;	5832:31:187723:187738	908484	1	True				
ANR	913992	Identifier	END_REPEAT		908484	0					
ANR	913993	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5833:10:187750:187781	908484	2	True				
ANR	913994	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		908484	0		=			
ANR	913995	UnaryOperationExpression	* code ++		908484	0					
ANR	913996	UnaryOperator	*		908484	0					
ANR	913997	PostIncDecOperationExpression	code ++		908484	1					
ANR	913998	Identifier	code		908484	0					
ANR	913999	IncDec	++		908484	1					
ANR	914000	AdditiveExpression	OP_UPTO + repeat_type		908484	1		+			
ANR	914001	Identifier	OP_UPTO		908484	0					
ANR	914002	Identifier	repeat_type		908484	1					
ANR	914003	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max - 1 )"	5834:10:187793:187825	908484	3	True				
ANR	914004	CallExpression	"PUT2INC ( code , 0 , repeat_max - 1 )"		908484	0					
ANR	914005	Callee	PUT2INC		908484	0					
ANR	914006	Identifier	PUT2INC		908484	0					
ANR	914007	ArgumentList	code		908484	1					
ANR	914008	Argument	code		908484	0					
ANR	914009	Identifier	code		908484	0					
ANR	914010	Argument	0		908484	1					
ANR	914011	PrimaryExpression	0		908484	0					
ANR	914012	Argument	repeat_max - 1		908484	2					
ANR	914013	AdditiveExpression	repeat_max - 1		908484	0		-			
ANR	914014	Identifier	repeat_max		908484	0					
ANR	914015	PrimaryExpression	1		908484	1					
ANR	914016	ElseStatement	else		908484	0					
ANR	914017	CompoundStatement		1385:8:48118:48118	908484	0					
ANR	914018	ExpressionStatement	* code ++ = OP_EXACT + op_type	5843:8:188004:188032	908484	0	True				
ANR	914019	AssignmentExpression	* code ++ = OP_EXACT + op_type		908484	0		=			
ANR	914020	UnaryOperationExpression	* code ++		908484	0					
ANR	914021	UnaryOperator	*		908484	0					
ANR	914022	PostIncDecOperationExpression	code ++		908484	1					
ANR	914023	Identifier	code		908484	0					
ANR	914024	IncDec	++		908484	1					
ANR	914025	AdditiveExpression	OP_EXACT + op_type		908484	1		+			
ANR	914026	Identifier	OP_EXACT		908484	0					
ANR	914027	Identifier	op_type		908484	1					
ANR	914028	ExpressionStatement	"PUT2INC ( code , 0 , repeat_min )"	5844:8:188083:188111	908484	1	True				
ANR	914029	CallExpression	"PUT2INC ( code , 0 , repeat_min )"		908484	0					
ANR	914030	Callee	PUT2INC		908484	0					
ANR	914031	Identifier	PUT2INC		908484	0					
ANR	914032	ArgumentList	code		908484	1					
ANR	914033	Argument	code		908484	0					
ANR	914034	Identifier	code		908484	0					
ANR	914035	Argument	0		908484	1					
ANR	914036	PrimaryExpression	0		908484	0					
ANR	914037	Argument	repeat_min		908484	2					
ANR	914038	Identifier	repeat_min		908484	0					
ANR	914039	IfStatement	if ( repeat_max < 0 )		908484	2					
ANR	914040	Condition	repeat_max < 0	5852:12:188483:188496	908484	0	True				
ANR	914041	RelationalExpression	repeat_max < 0		908484	0		<			
ANR	914042	Identifier	repeat_max		908484	0					
ANR	914043	PrimaryExpression	0		908484	1					
ANR	914044	CompoundStatement		1396:10:48633:48633	908484	1					
ANR	914045	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		908484	0					
ANR	914046	Condition	utf && ( c & UTF_LENGTH ) != 0	5855:14:188576:188603	908484	0	True				
ANR	914047	AndExpression	utf && ( c & UTF_LENGTH ) != 0		908484	0		&&			
ANR	914048	Identifier	utf		908484	0					
ANR	914049	EqualityExpression	( c & UTF_LENGTH ) != 0		908484	1		!=			
ANR	914050	BitAndExpression	c & UTF_LENGTH		908484	0		&			
ANR	914051	Identifier	c		908484	0					
ANR	914052	Identifier	UTF_LENGTH		908484	1					
ANR	914053	PrimaryExpression	0		908484	1					
ANR	914054	CompoundStatement		1399:12:48742:48742	908484	1					
ANR	914055	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5857:12:188632:188673	908484	0	True				
ANR	914056	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		908484	0					
ANR	914057	Callee	memcpy		908484	0					
ANR	914058	Identifier	memcpy		908484	0					
ANR	914059	ArgumentList	code		908484	1					
ANR	914060	Argument	code		908484	0					
ANR	914061	Identifier	code		908484	0					
ANR	914062	Argument	utf_chars		908484	1					
ANR	914063	Identifier	utf_chars		908484	0					
ANR	914064	Argument	IN_UCHARS ( c & 7 )		908484	2					
ANR	914065	CallExpression	IN_UCHARS ( c & 7 )		908484	0					
ANR	914066	Callee	IN_UCHARS		908484	0					
ANR	914067	Identifier	IN_UCHARS		908484	0					
ANR	914068	ArgumentList	c & 7		908484	1					
ANR	914069	Argument	c & 7		908484	0					
ANR	914070	BitAndExpression	c & 7		908484	0		&			
ANR	914071	Identifier	c		908484	0					
ANR	914072	PrimaryExpression	7		908484	1					
ANR	914073	ExpressionStatement	code += c & 7	5858:12:188687:188700	908484	1	True				
ANR	914074	AssignmentExpression	code += c & 7		908484	0		+=			
ANR	914075	Identifier	code		908484	0					
ANR	914076	BitAndExpression	c & 7		908484	1		&			
ANR	914077	Identifier	c		908484	0					
ANR	914078	PrimaryExpression	7		908484	1					
ANR	914079	ElseStatement	else		908484	0					
ANR	914080	CompoundStatement		1405:12:48874:48874	908484	0					
ANR	914081	ExpressionStatement	* code ++ = c	5863:12:188764:188775	908484	0	True				
ANR	914082	AssignmentExpression	* code ++ = c		908484	0		=			
ANR	914083	UnaryOperationExpression	* code ++		908484	0					
ANR	914084	UnaryOperator	*		908484	0					
ANR	914085	PostIncDecOperationExpression	code ++		908484	1					
ANR	914086	Identifier	code		908484	0					
ANR	914087	IncDec	++		908484	1					
ANR	914088	Identifier	c		908484	1					
ANR	914089	IfStatement	if ( prop_type >= 0 )		908484	1					
ANR	914090	Condition	prop_type >= 0	5864:16:188793:188806	908484	0	True				
ANR	914091	RelationalExpression	prop_type >= 0		908484	0		>=			
ANR	914092	Identifier	prop_type		908484	0					
ANR	914093	PrimaryExpression	0		908484	1					
ANR	914094	CompoundStatement		1408:14:48947:48947	908484	1					
ANR	914095	ExpressionStatement	* code ++ = prop_type	5866:14:188839:188858	908484	0	True				
ANR	914096	AssignmentExpression	* code ++ = prop_type		908484	0		=			
ANR	914097	UnaryOperationExpression	* code ++		908484	0					
ANR	914098	UnaryOperator	*		908484	0					
ANR	914099	PostIncDecOperationExpression	code ++		908484	1					
ANR	914100	Identifier	code		908484	0					
ANR	914101	IncDec	++		908484	1					
ANR	914102	Identifier	prop_type		908484	1					
ANR	914103	ExpressionStatement	* code ++ = prop_value	5867:14:188874:188894	908484	1	True				
ANR	914104	AssignmentExpression	* code ++ = prop_value		908484	0		=			
ANR	914105	UnaryOperationExpression	* code ++		908484	0					
ANR	914106	UnaryOperator	*		908484	0					
ANR	914107	PostIncDecOperationExpression	code ++		908484	1					
ANR	914108	Identifier	code		908484	0					
ANR	914109	IncDec	++		908484	1					
ANR	914110	Identifier	prop_value		908484	1					
ANR	914111	ExpressionStatement	* code ++ = OP_STAR + repeat_type	5870:10:188936:188967	908484	1	True				
ANR	914112	AssignmentExpression	* code ++ = OP_STAR + repeat_type		908484	0		=			
ANR	914113	UnaryOperationExpression	* code ++		908484	0					
ANR	914114	UnaryOperator	*		908484	0					
ANR	914115	PostIncDecOperationExpression	code ++		908484	1					
ANR	914116	Identifier	code		908484	0					
ANR	914117	IncDec	++		908484	1					
ANR	914118	AdditiveExpression	OP_STAR + repeat_type		908484	1		+			
ANR	914119	Identifier	OP_STAR		908484	0					
ANR	914120	Identifier	repeat_type		908484	1					
ANR	914121	ElseStatement	else		908484	0					
ANR	914122	IfStatement	if ( repeat_max != repeat_min )		908484	0					
ANR	914123	Condition	repeat_max != repeat_min	5877:17:189215:189238	908484	0	True				
ANR	914124	EqualityExpression	repeat_max != repeat_min		908484	0		!=			
ANR	914125	Identifier	repeat_max		908484	0					
ANR	914126	Identifier	repeat_min		908484	1					
ANR	914127	CompoundStatement		1421:10:49375:49375	908484	1					
ANR	914128	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		908484	0					
ANR	914129	Condition	utf && ( c & UTF_LENGTH ) != 0	5880:14:189318:189345	908484	0	True				
ANR	914130	AndExpression	utf && ( c & UTF_LENGTH ) != 0		908484	0		&&			
ANR	914131	Identifier	utf		908484	0					
ANR	914132	EqualityExpression	( c & UTF_LENGTH ) != 0		908484	1		!=			
ANR	914133	BitAndExpression	c & UTF_LENGTH		908484	0		&			
ANR	914134	Identifier	c		908484	0					
ANR	914135	Identifier	UTF_LENGTH		908484	1					
ANR	914136	PrimaryExpression	0		908484	1					
ANR	914137	CompoundStatement		1424:12:49484:49484	908484	1					
ANR	914138	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5882:12:189374:189415	908484	0	True				
ANR	914139	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		908484	0					
ANR	914140	Callee	memcpy		908484	0					
ANR	914141	Identifier	memcpy		908484	0					
ANR	914142	ArgumentList	code		908484	1					
ANR	914143	Argument	code		908484	0					
ANR	914144	Identifier	code		908484	0					
ANR	914145	Argument	utf_chars		908484	1					
ANR	914146	Identifier	utf_chars		908484	0					
ANR	914147	Argument	IN_UCHARS ( c & 7 )		908484	2					
ANR	914148	CallExpression	IN_UCHARS ( c & 7 )		908484	0					
ANR	914149	Callee	IN_UCHARS		908484	0					
ANR	914150	Identifier	IN_UCHARS		908484	0					
ANR	914151	ArgumentList	c & 7		908484	1					
ANR	914152	Argument	c & 7		908484	0					
ANR	914153	BitAndExpression	c & 7		908484	0		&			
ANR	914154	Identifier	c		908484	0					
ANR	914155	PrimaryExpression	7		908484	1					
ANR	914156	ExpressionStatement	code += c & 7	5883:12:189429:189442	908484	1	True				
ANR	914157	AssignmentExpression	code += c & 7		908484	0		+=			
ANR	914158	Identifier	code		908484	0					
ANR	914159	BitAndExpression	c & 7		908484	1		&			
ANR	914160	Identifier	c		908484	0					
ANR	914161	PrimaryExpression	7		908484	1					
ANR	914162	ElseStatement	else		908484	0					
ANR	914163	ExpressionStatement	* code ++ = c	5887:10:189490:189501	908484	0	True				
ANR	914164	AssignmentExpression	* code ++ = c		908484	0		=			
ANR	914165	UnaryOperationExpression	* code ++		908484	0					
ANR	914166	UnaryOperator	*		908484	0					
ANR	914167	PostIncDecOperationExpression	code ++		908484	1					
ANR	914168	Identifier	code		908484	0					
ANR	914169	IncDec	++		908484	1					
ANR	914170	Identifier	c		908484	1					
ANR	914171	IfStatement	if ( prop_type >= 0 )		908484	1					
ANR	914172	Condition	prop_type >= 0	5888:14:189517:189530	908484	0	True				
ANR	914173	RelationalExpression	prop_type >= 0		908484	0		>=			
ANR	914174	Identifier	prop_type		908484	0					
ANR	914175	PrimaryExpression	0		908484	1					
ANR	914176	CompoundStatement		1432:12:49669:49669	908484	1					
ANR	914177	ExpressionStatement	* code ++ = prop_type	5890:12:189559:189578	908484	0	True				
ANR	914178	AssignmentExpression	* code ++ = prop_type		908484	0		=			
ANR	914179	UnaryOperationExpression	* code ++		908484	0					
ANR	914180	UnaryOperator	*		908484	0					
ANR	914181	PostIncDecOperationExpression	code ++		908484	1					
ANR	914182	Identifier	code		908484	0					
ANR	914183	IncDec	++		908484	1					
ANR	914184	Identifier	prop_type		908484	1					
ANR	914185	ExpressionStatement	* code ++ = prop_value	5891:12:189592:189612	908484	1	True				
ANR	914186	AssignmentExpression	* code ++ = prop_value		908484	0		=			
ANR	914187	UnaryOperationExpression	* code ++		908484	0					
ANR	914188	UnaryOperator	*		908484	0					
ANR	914189	PostIncDecOperationExpression	code ++		908484	1					
ANR	914190	Identifier	code		908484	0					
ANR	914191	IncDec	++		908484	1					
ANR	914192	Identifier	prop_value		908484	1					
ANR	914193	ExpressionStatement	repeat_max -= repeat_min	5893:10:189638:189662	908484	2	True				
ANR	914194	AssignmentExpression	repeat_max -= repeat_min		908484	0		-=			
ANR	914195	Identifier	repeat_max		908484	0					
ANR	914196	Identifier	repeat_min		908484	1					
ANR	914197	IfStatement	if ( repeat_max == 1 )		908484	3					
ANR	914198	Condition	repeat_max == 1	5895:14:189679:189693	908484	0	True				
ANR	914199	EqualityExpression	repeat_max == 1		908484	0		==			
ANR	914200	Identifier	repeat_max		908484	0					
ANR	914201	PrimaryExpression	1		908484	1					
ANR	914202	CompoundStatement		1439:12:49832:49832	908484	1					
ANR	914203	ExpressionStatement	* code ++ = OP_QUERY + repeat_type	5897:12:189722:189754	908484	0	True				
ANR	914204	AssignmentExpression	* code ++ = OP_QUERY + repeat_type		908484	0		=			
ANR	914205	UnaryOperationExpression	* code ++		908484	0					
ANR	914206	UnaryOperator	*		908484	0					
ANR	914207	PostIncDecOperationExpression	code ++		908484	1					
ANR	914208	Identifier	code		908484	0					
ANR	914209	IncDec	++		908484	1					
ANR	914210	AdditiveExpression	OP_QUERY + repeat_type		908484	1		+			
ANR	914211	Identifier	OP_QUERY		908484	0					
ANR	914212	Identifier	repeat_type		908484	1					
ANR	914213	ElseStatement	else		908484	0					
ANR	914214	CompoundStatement		1443:12:49921:49921	908484	0					
ANR	914215	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5901:12:189811:189842	908484	0	True				
ANR	914216	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		908484	0		=			
ANR	914217	UnaryOperationExpression	* code ++		908484	0					
ANR	914218	UnaryOperator	*		908484	0					
ANR	914219	PostIncDecOperationExpression	code ++		908484	1					
ANR	914220	Identifier	code		908484	0					
ANR	914221	IncDec	++		908484	1					
ANR	914222	AdditiveExpression	OP_UPTO + repeat_type		908484	1		+			
ANR	914223	Identifier	OP_UPTO		908484	0					
ANR	914224	Identifier	repeat_type		908484	1					
ANR	914225	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5902:12:189856:189884	908484	1	True				
ANR	914226	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		908484	0					
ANR	914227	Callee	PUT2INC		908484	0					
ANR	914228	Identifier	PUT2INC		908484	0					
ANR	914229	ArgumentList	code		908484	1					
ANR	914230	Argument	code		908484	0					
ANR	914231	Identifier	code		908484	0					
ANR	914232	Argument	0		908484	1					
ANR	914233	PrimaryExpression	0		908484	0					
ANR	914234	Argument	repeat_max		908484	2					
ANR	914235	Identifier	repeat_max		908484	0					
ANR	914236	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		908484	11					
ANR	914237	Condition	utf && ( c & UTF_LENGTH ) != 0	5910:10:190061:190088	908484	0	True				
ANR	914238	AndExpression	utf && ( c & UTF_LENGTH ) != 0		908484	0		&&			
ANR	914239	Identifier	utf		908484	0					
ANR	914240	EqualityExpression	( c & UTF_LENGTH ) != 0		908484	1		!=			
ANR	914241	BitAndExpression	c & UTF_LENGTH		908484	0		&			
ANR	914242	Identifier	c		908484	0					
ANR	914243	Identifier	UTF_LENGTH		908484	1					
ANR	914244	PrimaryExpression	0		908484	1					
ANR	914245	CompoundStatement		1454:8:50223:50223	908484	1					
ANR	914246	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5912:8:190109:190150	908484	0	True				
ANR	914247	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		908484	0					
ANR	914248	Callee	memcpy		908484	0					
ANR	914249	Identifier	memcpy		908484	0					
ANR	914250	ArgumentList	code		908484	1					
ANR	914251	Argument	code		908484	0					
ANR	914252	Identifier	code		908484	0					
ANR	914253	Argument	utf_chars		908484	1					
ANR	914254	Identifier	utf_chars		908484	0					
ANR	914255	Argument	IN_UCHARS ( c & 7 )		908484	2					
ANR	914256	CallExpression	IN_UCHARS ( c & 7 )		908484	0					
ANR	914257	Callee	IN_UCHARS		908484	0					
ANR	914258	Identifier	IN_UCHARS		908484	0					
ANR	914259	ArgumentList	c & 7		908484	1					
ANR	914260	Argument	c & 7		908484	0					
ANR	914261	BitAndExpression	c & 7		908484	0		&			
ANR	914262	Identifier	c		908484	0					
ANR	914263	PrimaryExpression	7		908484	1					
ANR	914264	ExpressionStatement	code += c & 7	5913:8:190160:190173	908484	1	True				
ANR	914265	AssignmentExpression	code += c & 7		908484	0		+=			
ANR	914266	Identifier	code		908484	0					
ANR	914267	BitAndExpression	c & 7		908484	1		&			
ANR	914268	Identifier	c		908484	0					
ANR	914269	PrimaryExpression	7		908484	1					
ANR	914270	ElseStatement	else		908484	0					
ANR	914271	ExpressionStatement	* code ++ = c	5917:6:190209:190220	908484	0	True				
ANR	914272	AssignmentExpression	* code ++ = c		908484	0		=			
ANR	914273	UnaryOperationExpression	* code ++		908484	0					
ANR	914274	UnaryOperator	*		908484	0					
ANR	914275	PostIncDecOperationExpression	code ++		908484	1					
ANR	914276	Identifier	code		908484	0					
ANR	914277	IncDec	++		908484	1					
ANR	914278	Identifier	c		908484	1					
ANR	914279	IfStatement	if ( prop_type >= 0 )		908484	12					
ANR	914280	Condition	prop_type >= 0	5923:10:190371:190384	908484	0	True				
ANR	914281	RelationalExpression	prop_type >= 0		908484	0		>=			
ANR	914282	Identifier	prop_type		908484	0					
ANR	914283	PrimaryExpression	0		908484	1					
ANR	914284	CompoundStatement		1467:8:50519:50519	908484	1					
ANR	914285	ExpressionStatement	* code ++ = prop_type	5925:8:190405:190424	908484	0	True				
ANR	914286	AssignmentExpression	* code ++ = prop_type		908484	0		=			
ANR	914287	UnaryOperationExpression	* code ++		908484	0					
ANR	914288	UnaryOperator	*		908484	0					
ANR	914289	PostIncDecOperationExpression	code ++		908484	1					
ANR	914290	Identifier	code		908484	0					
ANR	914291	IncDec	++		908484	1					
ANR	914292	Identifier	prop_type		908484	1					
ANR	914293	ExpressionStatement	* code ++ = prop_value	5926:8:190434:190454	908484	1	True				
ANR	914294	AssignmentExpression	* code ++ = prop_value		908484	0		=			
ANR	914295	UnaryOperationExpression	* code ++		908484	0					
ANR	914296	UnaryOperator	*		908484	0					
ANR	914297	PostIncDecOperationExpression	code ++		908484	1					
ANR	914298	Identifier	code		908484	0					
ANR	914299	IncDec	++		908484	1					
ANR	914300	Identifier	prop_value		908484	1					
ANR	914301	ElseStatement	else		908484	0					
ANR	914302	Statement	if	5934:9:190643:190644	908484	0	True				
ANR	914303	Statement	(	5934:12:190646:190646	908484	91	True				
ANR	914304	Statement	*	5934:13:190647:190647	908484	92	True				
ANR	914305	Statement	previous	5934:14:190648:190655	908484	93	True				
ANR	914306	Statement	==	5934:23:190657:190658	908484	94	True				
ANR	914307	Statement	OP_CLASS	5934:26:190660:190667	908484	95	True				
ANR	914308	Statement	||	5934:35:190669:190670	908484	96	True				
ANR	914309	Statement	*	5934:38:190672:190672	908484	97	True				
ANR	914310	Statement	previous	5934:39:190673:190680	908484	98	True				
ANR	914311	Statement	==	5934:48:190682:190683	908484	99	True				
ANR	914312	Statement	OP_NCLASS	5934:51:190685:190693	908484	100	True				
ANR	914313	Statement	||	5934:61:190695:190696	908484	101	True				
ANR	914314	Statement	*	5936:13:190761:190761	908484	102	True				
ANR	914315	Statement	previous	5936:14:190762:190769	908484	103	True				
ANR	914316	Statement	==	5936:23:190771:190772	908484	104	True				
ANR	914317	Statement	OP_XCLASS	5936:26:190774:190782	908484	105	True				
ANR	914318	Statement	||	5936:36:190784:190785	908484	106	True				
ANR	914319	Statement	*	5938:13:190807:190807	908484	107	True				
ANR	914320	Statement	previous	5938:14:190808:190815	908484	108	True				
ANR	914321	Statement	==	5938:23:190817:190818	908484	109	True				
ANR	914322	Statement	OP_REF	5938:26:190820:190825	908484	110	True				
ANR	914323	Statement	||	5938:35:190829:190830	908484	111	True				
ANR	914324	Statement	*	5938:38:190832:190832	908484	112	True				
ANR	914325	Statement	previous	5938:39:190833:190840	908484	113	True				
ANR	914326	Statement	==	5938:48:190842:190843	908484	114	True				
ANR	914327	Statement	OP_REFI	5938:51:190845:190851	908484	115	True				
ANR	914328	Statement	||	5938:59:190853:190854	908484	116	True				
ANR	914329	Statement	*	5939:13:190869:190869	908484	117	True				
ANR	914330	Statement	previous	5939:14:190870:190877	908484	118	True				
ANR	914331	Statement	==	5939:23:190879:190880	908484	119	True				
ANR	914332	Statement	OP_DNREF	5939:26:190882:190889	908484	120	True				
ANR	914333	Statement	||	5939:35:190891:190892	908484	121	True				
ANR	914334	Statement	*	5939:38:190894:190894	908484	122	True				
ANR	914335	Statement	previous	5939:39:190895:190902	908484	123	True				
ANR	914336	Statement	==	5939:48:190904:190905	908484	124	True				
ANR	914337	Statement	OP_DNREFI	5939:51:190907:190915	908484	125	True				
ANR	914338	Statement	)	5939:60:190916:190916	908484	126	True				
ANR	914339	CompoundStatement		1483:6:51048:51048	908484	127					
ANR	914340	IfStatement	if ( repeat_max == 0 )		908484	0					
ANR	914341	Condition	repeat_max == 0	5941:10:190936:190950	908484	0	True				
ANR	914342	EqualityExpression	repeat_max == 0		908484	0		==			
ANR	914343	Identifier	repeat_max		908484	0					
ANR	914344	PrimaryExpression	0		908484	1					
ANR	914345	CompoundStatement		1485:8:51085:51085	908484	1					
ANR	914346	ExpressionStatement	code = previous	5943:8:190971:190986	908484	0	True				
ANR	914347	AssignmentExpression	code = previous		908484	0		=			
ANR	914348	Identifier	code		908484	0					
ANR	914349	Identifier	previous		908484	1					
ANR	914350	GotoStatement	goto END_REPEAT ;	5944:8:190996:191011	908484	1	True				
ANR	914351	Identifier	END_REPEAT		908484	0					
ANR	914352	IfStatement	if ( repeat_min == 0 && repeat_max == - 1 )		908484	1					
ANR	914353	Condition	repeat_min == 0 && repeat_max == - 1	5947:10:191034:191068	908484	0	True				
ANR	914354	AndExpression	repeat_min == 0 && repeat_max == - 1		908484	0		&&			
ANR	914355	EqualityExpression	repeat_min == 0		908484	0		==			
ANR	914356	Identifier	repeat_min		908484	0					
ANR	914357	PrimaryExpression	0		908484	1					
ANR	914358	EqualityExpression	repeat_max == - 1		908484	1		==			
ANR	914359	Identifier	repeat_max		908484	0					
ANR	914360	UnaryOperationExpression	- 1		908484	1					
ANR	914361	UnaryOperator	-		908484	0					
ANR	914362	PrimaryExpression	1		908484	1					
ANR	914363	ExpressionStatement	* code ++ = OP_CRSTAR + repeat_type	5948:8:191079:191112	908484	1	True				
ANR	914364	AssignmentExpression	* code ++ = OP_CRSTAR + repeat_type		908484	0		=			
ANR	914365	UnaryOperationExpression	* code ++		908484	0					
ANR	914366	UnaryOperator	*		908484	0					
ANR	914367	PostIncDecOperationExpression	code ++		908484	1					
ANR	914368	Identifier	code		908484	0					
ANR	914369	IncDec	++		908484	1					
ANR	914370	AdditiveExpression	OP_CRSTAR + repeat_type		908484	1		+			
ANR	914371	Identifier	OP_CRSTAR		908484	0					
ANR	914372	Identifier	repeat_type		908484	1					
ANR	914373	ElseStatement	else		908484	0					
ANR	914374	IfStatement	if ( repeat_min == 1 && repeat_max == - 1 )		908484	0					
ANR	914375	Condition	repeat_min == 1 && repeat_max == - 1	5949:15:191129:191163	908484	0	True				
ANR	914376	AndExpression	repeat_min == 1 && repeat_max == - 1		908484	0		&&			
ANR	914377	EqualityExpression	repeat_min == 1		908484	0		==			
ANR	914378	Identifier	repeat_min		908484	0					
ANR	914379	PrimaryExpression	1		908484	1					
ANR	914380	EqualityExpression	repeat_max == - 1		908484	1		==			
ANR	914381	Identifier	repeat_max		908484	0					
ANR	914382	UnaryOperationExpression	- 1		908484	1					
ANR	914383	UnaryOperator	-		908484	0					
ANR	914384	PrimaryExpression	1		908484	1					
ANR	914385	ExpressionStatement	* code ++ = OP_CRPLUS + repeat_type	5950:8:191174:191207	908484	1	True				
ANR	914386	AssignmentExpression	* code ++ = OP_CRPLUS + repeat_type		908484	0		=			
ANR	914387	UnaryOperationExpression	* code ++		908484	0					
ANR	914388	UnaryOperator	*		908484	0					
ANR	914389	PostIncDecOperationExpression	code ++		908484	1					
ANR	914390	Identifier	code		908484	0					
ANR	914391	IncDec	++		908484	1					
ANR	914392	AdditiveExpression	OP_CRPLUS + repeat_type		908484	1		+			
ANR	914393	Identifier	OP_CRPLUS		908484	0					
ANR	914394	Identifier	repeat_type		908484	1					
ANR	914395	ElseStatement	else		908484	0					
ANR	914396	IfStatement	if ( repeat_min == 0 && repeat_max == 1 )		908484	0					
ANR	914397	Condition	repeat_min == 0 && repeat_max == 1	5951:15:191224:191257	908484	0	True				
ANR	914398	AndExpression	repeat_min == 0 && repeat_max == 1		908484	0		&&			
ANR	914399	EqualityExpression	repeat_min == 0		908484	0		==			
ANR	914400	Identifier	repeat_min		908484	0					
ANR	914401	PrimaryExpression	0		908484	1					
ANR	914402	EqualityExpression	repeat_max == 1		908484	1		==			
ANR	914403	Identifier	repeat_max		908484	0					
ANR	914404	PrimaryExpression	1		908484	1					
ANR	914405	ExpressionStatement	* code ++ = OP_CRQUERY + repeat_type	5952:8:191268:191302	908484	1	True				
ANR	914406	AssignmentExpression	* code ++ = OP_CRQUERY + repeat_type		908484	0		=			
ANR	914407	UnaryOperationExpression	* code ++		908484	0					
ANR	914408	UnaryOperator	*		908484	0					
ANR	914409	PostIncDecOperationExpression	code ++		908484	1					
ANR	914410	Identifier	code		908484	0					
ANR	914411	IncDec	++		908484	1					
ANR	914412	AdditiveExpression	OP_CRQUERY + repeat_type		908484	1		+			
ANR	914413	Identifier	OP_CRQUERY		908484	0					
ANR	914414	Identifier	repeat_type		908484	1					
ANR	914415	ElseStatement	else		908484	0					
ANR	914416	CompoundStatement		1497:8:51447:51447	908484	0					
ANR	914417	ExpressionStatement	* code ++ = OP_CRRANGE + repeat_type	5955:8:191333:191367	908484	0	True				
ANR	914418	AssignmentExpression	* code ++ = OP_CRRANGE + repeat_type		908484	0		=			
ANR	914419	UnaryOperationExpression	* code ++		908484	0					
ANR	914420	UnaryOperator	*		908484	0					
ANR	914421	PostIncDecOperationExpression	code ++		908484	1					
ANR	914422	Identifier	code		908484	0					
ANR	914423	IncDec	++		908484	1					
ANR	914424	AdditiveExpression	OP_CRRANGE + repeat_type		908484	1		+			
ANR	914425	Identifier	OP_CRRANGE		908484	0					
ANR	914426	Identifier	repeat_type		908484	1					
ANR	914427	ExpressionStatement	"PUT2INC ( code , 0 , repeat_min )"	5956:8:191377:191405	908484	1	True				
ANR	914428	CallExpression	"PUT2INC ( code , 0 , repeat_min )"		908484	0					
ANR	914429	Callee	PUT2INC		908484	0					
ANR	914430	Identifier	PUT2INC		908484	0					
ANR	914431	ArgumentList	code		908484	1					
ANR	914432	Argument	code		908484	0					
ANR	914433	Identifier	code		908484	0					
ANR	914434	Argument	0		908484	1					
ANR	914435	PrimaryExpression	0		908484	0					
ANR	914436	Argument	repeat_min		908484	2					
ANR	914437	Identifier	repeat_min		908484	0					
ANR	914438	IfStatement	if ( repeat_max == - 1 )		908484	2					
ANR	914439	Condition	repeat_max == - 1	5957:12:191419:191434	908484	0	True				
ANR	914440	EqualityExpression	repeat_max == - 1		908484	0		==			
ANR	914441	Identifier	repeat_max		908484	0					
ANR	914442	UnaryOperationExpression	- 1		908484	1					
ANR	914443	UnaryOperator	-		908484	0					
ANR	914444	PrimaryExpression	1		908484	1					
ANR	914445	ExpressionStatement	repeat_max = 0	5957:30:191437:191451	908484	1	True				
ANR	914446	AssignmentExpression	repeat_max = 0		908484	0		=			
ANR	914447	Identifier	repeat_max		908484	0					
ANR	914448	PrimaryExpression	0		908484	1					
ANR	914449	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5958:8:191492:191520	908484	3	True				
ANR	914450	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		908484	0					
ANR	914451	Callee	PUT2INC		908484	0					
ANR	914452	Identifier	PUT2INC		908484	0					
ANR	914453	ArgumentList	code		908484	1					
ANR	914454	Argument	code		908484	0					
ANR	914455	Identifier	code		908484	0					
ANR	914456	Argument	0		908484	1					
ANR	914457	PrimaryExpression	0		908484	0					
ANR	914458	Argument	repeat_max		908484	2					
ANR	914459	Identifier	repeat_max		908484	0					
ANR	914460	IfStatement	if ( possessive_quantifier )		908484	128					
ANR	914461	Condition	possessive_quantifier	6377:8:208080:208100	908484	0	True				
ANR	914462	Identifier	possessive_quantifier		908484	0					
ANR	914463	CompoundStatement		1922:6:68241:68248	908484	1					
ANR	914464	IdentifierDeclStatement	int len ;	6379:6:208117:208124	908484	0	True				
ANR	914465	IdentifierDecl	len		908484	0					
ANR	914466	IdentifierDeclType	int		908484	0					
ANR	914467	Identifier	len		908484	1					
ANR	914468	SwitchStatement	switch ( * tempcode )		908484	1					
ANR	914469	Condition	* tempcode	6387:13:208509:208517	908484	0	True				
ANR	914470	UnaryOperationExpression	* tempcode		908484	0					
ANR	914471	UnaryOperator	*		908484	0					
ANR	914472	Identifier	tempcode		908484	1					
ANR	914473	CompoundStatement		1931:8:68652:68652	908484	1					
ANR	914474	Label	case OP_TYPEEXACT :	6389:8:208538:208555	908484	0	True				
ANR	914475	Identifier	OP_TYPEEXACT		908484	0					
ANR	914476	ExpressionStatement	tempcode += PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )	6390:8:208565:208713	908484	1	True				
ANR	914477	AssignmentExpression	tempcode += PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )		908484	0		+=			
ANR	914478	Identifier	tempcode		908484	0					
ANR	914479	AdditiveExpression	PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )		908484	1		+			
ANR	914480	ArrayIndexing	PRIV ( OP_lengths ) [ * tempcode ]		908484	0					
ANR	914481	CallExpression	PRIV ( OP_lengths )		908484	0					
ANR	914482	Callee	PRIV		908484	0					
ANR	914483	Identifier	PRIV		908484	0					
ANR	914484	ArgumentList	OP_lengths		908484	1					
ANR	914485	Argument	OP_lengths		908484	0					
ANR	914486	Identifier	OP_lengths		908484	0					
ANR	914487	UnaryOperationExpression	* tempcode		908484	1					
ANR	914488	UnaryOperator	*		908484	0					
ANR	914489	Identifier	tempcode		908484	1					
ANR	914490	ConditionalExpression	( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0		908484	1					
ANR	914491	Condition	tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		908484	0					
ANR	914492	OrExpression	tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		908484	0		||			
ANR	914493	EqualityExpression	tempcode [ 1 + IMM2_SIZE ] == OP_PROP		908484	0		==			
ANR	914494	ArrayIndexing	tempcode [ 1 + IMM2_SIZE ]		908484	0					
ANR	914495	Identifier	tempcode		908484	0					
ANR	914496	AdditiveExpression	1 + IMM2_SIZE		908484	1		+			
ANR	914497	PrimaryExpression	1		908484	0					
ANR	914498	Identifier	IMM2_SIZE		908484	1					
ANR	914499	Identifier	OP_PROP		908484	1					
ANR	914500	EqualityExpression	tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		908484	1		==			
ANR	914501	ArrayIndexing	tempcode [ 1 + IMM2_SIZE ]		908484	0					
ANR	914502	Identifier	tempcode		908484	0					
ANR	914503	AdditiveExpression	1 + IMM2_SIZE		908484	1		+			
ANR	914504	PrimaryExpression	1		908484	0					
ANR	914505	Identifier	IMM2_SIZE		908484	1					
ANR	914506	Identifier	OP_NOTPROP		908484	1					
ANR	914507	PrimaryExpression	2		908484	1					
ANR	914508	PrimaryExpression	0		908484	2					
ANR	914509	BreakStatement	break ;	6393:8:208723:208728	908484	2	True				
ANR	914510	Label	case OP_CHAR :	6397:8:208805:208817	908484	3	True				
ANR	914511	Identifier	OP_CHAR		908484	0					
ANR	914512	Label	case OP_CHARI :	6398:8:208827:208840	908484	4	True				
ANR	914513	Identifier	OP_CHARI		908484	0					
ANR	914514	Label	case OP_NOT :	6399:8:208850:208861	908484	5	True				
ANR	914515	Identifier	OP_NOT		908484	0					
ANR	914516	Label	case OP_NOTI :	6400:8:208871:208883	908484	6	True				
ANR	914517	Identifier	OP_NOTI		908484	0					
ANR	914518	Label	case OP_EXACT :	6401:8:208893:208906	908484	7	True				
ANR	914519	Identifier	OP_EXACT		908484	0					
ANR	914520	Label	case OP_EXACTI :	6402:8:208916:208930	908484	8	True				
ANR	914521	Identifier	OP_EXACTI		908484	0					
ANR	914522	Label	case OP_NOTEXACT :	6403:8:208940:208956	908484	9	True				
ANR	914523	Identifier	OP_NOTEXACT		908484	0					
ANR	914524	Label	case OP_NOTEXACTI :	6404:8:208966:208983	908484	10	True				
ANR	914525	Identifier	OP_NOTEXACTI		908484	0					
ANR	914526	ExpressionStatement	tempcode += PRIV ( OP_lengths ) [ * tempcode ]	6405:8:208993:209032	908484	11	True				
ANR	914527	AssignmentExpression	tempcode += PRIV ( OP_lengths ) [ * tempcode ]		908484	0		+=			
ANR	914528	Identifier	tempcode		908484	0					
ANR	914529	ArrayIndexing	PRIV ( OP_lengths ) [ * tempcode ]		908484	1					
ANR	914530	CallExpression	PRIV ( OP_lengths )		908484	0					
ANR	914531	Callee	PRIV		908484	0					
ANR	914532	Identifier	PRIV		908484	0					
ANR	914533	ArgumentList	OP_lengths		908484	1					
ANR	914534	Argument	OP_lengths		908484	0					
ANR	914535	Identifier	OP_lengths		908484	0					
ANR	914536	UnaryOperationExpression	* tempcode		908484	1					
ANR	914537	UnaryOperator	*		908484	0					
ANR	914538	Identifier	tempcode		908484	1					
ANR	914539	IfStatement	if ( utf && HAS_EXTRALEN ( tempcode [ - 1 ] ) )		908484	12					
ANR	914540	Condition	utf && HAS_EXTRALEN ( tempcode [ - 1 ] )	6407:12:209065:209097	908484	0	True				
ANR	914541	AndExpression	utf && HAS_EXTRALEN ( tempcode [ - 1 ] )		908484	0		&&			
ANR	914542	Identifier	utf		908484	0					
ANR	914543	CallExpression	HAS_EXTRALEN ( tempcode [ - 1 ] )		908484	1					
ANR	914544	Callee	HAS_EXTRALEN		908484	0					
ANR	914545	Identifier	HAS_EXTRALEN		908484	0					
ANR	914546	ArgumentList	tempcode [ - 1 ]		908484	1					
ANR	914547	Argument	tempcode [ - 1 ]		908484	0					
ANR	914548	ArrayIndexing	tempcode [ - 1 ]		908484	0					
ANR	914549	Identifier	tempcode		908484	0					
ANR	914550	UnaryOperationExpression	- 1		908484	1					
ANR	914551	UnaryOperator	-		908484	0					
ANR	914552	PrimaryExpression	1		908484	1					
ANR	914553	ExpressionStatement	tempcode += GET_EXTRALEN ( tempcode [ - 1 ] )	6408:10:209110:209148	908484	1	True				
ANR	914554	AssignmentExpression	tempcode += GET_EXTRALEN ( tempcode [ - 1 ] )		908484	0		+=			
ANR	914555	Identifier	tempcode		908484	0					
ANR	914556	CallExpression	GET_EXTRALEN ( tempcode [ - 1 ] )		908484	1					
ANR	914557	Callee	GET_EXTRALEN		908484	0					
ANR	914558	Identifier	GET_EXTRALEN		908484	0					
ANR	914559	ArgumentList	tempcode [ - 1 ]		908484	1					
ANR	914560	Argument	tempcode [ - 1 ]		908484	0					
ANR	914561	ArrayIndexing	tempcode [ - 1 ]		908484	0					
ANR	914562	Identifier	tempcode		908484	0					
ANR	914563	UnaryOperationExpression	- 1		908484	1					
ANR	914564	UnaryOperator	-		908484	0					
ANR	914565	PrimaryExpression	1		908484	1					
ANR	914566	BreakStatement	break ;	6410:8:209165:209170	908484	13	True				
ANR	914567	Label	case OP_CLASS :	6415:8:209299:209312	908484	14	True				
ANR	914568	Identifier	OP_CLASS		908484	0					
ANR	914569	Label	case OP_NCLASS :	6416:8:209322:209336	908484	15	True				
ANR	914570	Identifier	OP_NCLASS		908484	0					
ANR	914571	ExpressionStatement	tempcode += 1 + 32 / sizeof ( pcre_uchar )	6417:8:209346:209383	908484	16	True				
ANR	914572	AssignmentExpression	tempcode += 1 + 32 / sizeof ( pcre_uchar )		908484	0		+=			
ANR	914573	Identifier	tempcode		908484	0					
ANR	914574	AdditiveExpression	1 + 32 / sizeof ( pcre_uchar )		908484	1		+			
ANR	914575	PrimaryExpression	1		908484	0					
ANR	914576	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		908484	1		/			
ANR	914577	PrimaryExpression	32		908484	0					
ANR	914578	SizeofExpression	sizeof ( pcre_uchar )		908484	1					
ANR	914579	Sizeof	sizeof		908484	0					
ANR	914580	SizeofOperand	pcre_uchar		908484	1					
ANR	914581	BreakStatement	break ;	6418:8:209393:209398	908484	17	True				
ANR	914582	Label	case OP_XCLASS :	6421:8:209459:209473	908484	18	True				
ANR	914583	Identifier	OP_XCLASS		908484	0					
ANR	914584	ExpressionStatement	"tempcode += GET ( tempcode , 1 )"	6422:8:209483:209511	908484	19	True				
ANR	914585	AssignmentExpression	"tempcode += GET ( tempcode , 1 )"		908484	0		+=			
ANR	914586	Identifier	tempcode		908484	0					
ANR	914587	CallExpression	"GET ( tempcode , 1 )"		908484	1					
ANR	914588	Callee	GET		908484	0					
ANR	914589	Identifier	GET		908484	0					
ANR	914590	ArgumentList	tempcode		908484	1					
ANR	914591	Argument	tempcode		908484	0					
ANR	914592	Identifier	tempcode		908484	0					
ANR	914593	Argument	1		908484	1					
ANR	914594	PrimaryExpression	1		908484	0					
ANR	914595	BreakStatement	break ;	6423:8:209521:209526	908484	20	True				
ANR	914596	ExpressionStatement	len = ( int ) ( code - tempcode )	6433:6:209940:209968	908484	2	True				
ANR	914597	AssignmentExpression	len = ( int ) ( code - tempcode )		908484	0		=			
ANR	914598	Identifier	len		908484	0					
ANR	914599	CastExpression	( int ) ( code - tempcode )		908484	1					
ANR	914600	CastTarget	int		908484	0					
ANR	914601	AdditiveExpression	code - tempcode		908484	1		-			
ANR	914602	Identifier	code		908484	0					
ANR	914603	Identifier	tempcode		908484	1					
ANR	914604	IfStatement	if ( len > 0 )		908484	3					
ANR	914605	Condition	len > 0	6434:10:209980:209986	908484	0	True				
ANR	914606	RelationalExpression	len > 0		908484	0		>			
ANR	914607	Identifier	len		908484	0					
ANR	914608	PrimaryExpression	0		908484	1					
ANR	914609	CompoundStatement		1979:8:70131:70163	908484	1					
ANR	914610	IdentifierDeclStatement	unsigned int repcode = * tempcode ;	6436:8:210007:210039	908484	0	True				
ANR	914611	IdentifierDecl	repcode = * tempcode		908484	0					
ANR	914612	IdentifierDeclType	unsigned int		908484	0					
ANR	914613	Identifier	repcode		908484	1					
ANR	914614	AssignmentExpression	repcode = * tempcode		908484	2		=			
ANR	914615	Identifier	repcode		908484	0					
ANR	914616	UnaryOperationExpression	* tempcode		908484	1					
ANR	914617	UnaryOperator	*		908484	0					
ANR	914618	Identifier	tempcode		908484	1					
ANR	914619	IfStatement	if ( repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0 )		908484	1					
ANR	914620	Condition	repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0	6442:12:210221:210274	908484	0	True				
ANR	914621	AndExpression	repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0		908484	0		&&			
ANR	914622	RelationalExpression	repcode < OP_CALLOUT		908484	0		<			
ANR	914623	Identifier	repcode		908484	0					
ANR	914624	Identifier	OP_CALLOUT		908484	1					
ANR	914625	RelationalExpression	opcode_possessify [ repcode ] > 0		908484	1		>			
ANR	914626	ArrayIndexing	opcode_possessify [ repcode ]		908484	0					
ANR	914627	Identifier	opcode_possessify		908484	0					
ANR	914628	Identifier	repcode		908484	1					
ANR	914629	PrimaryExpression	0		908484	1					
ANR	914630	ExpressionStatement	* tempcode = opcode_possessify [ repcode ]	6443:10:210287:210325	908484	1	True				
ANR	914631	AssignmentExpression	* tempcode = opcode_possessify [ repcode ]		908484	0		=			
ANR	914632	UnaryOperationExpression	* tempcode		908484	0					
ANR	914633	UnaryOperator	*		908484	0					
ANR	914634	Identifier	tempcode		908484	1					
ANR	914635	ArrayIndexing	opcode_possessify [ repcode ]		908484	1					
ANR	914636	Identifier	opcode_possessify		908484	0					
ANR	914637	Identifier	repcode		908484	1					
ANR	914638	ElseStatement	else		908484	0					
ANR	914639	CompoundStatement		1993:10:70689:70689	908484	0					
ANR	914640	ExpressionStatement	* code = OP_END	6451:10:210577:210591	908484	0	True				
ANR	914641	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	914642	UnaryOperationExpression	* code		908484	0					
ANR	914643	UnaryOperator	*		908484	0					
ANR	914644	Identifier	code		908484	1					
ANR	914645	Identifier	OP_END		908484	1					
ANR	914646	ExpressionStatement	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"	6452:10:210603:210668	908484	1	True				
ANR	914647	CallExpression	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"		908484	0					
ANR	914648	Callee	adjust_recurse		908484	0					
ANR	914649	Identifier	adjust_recurse		908484	0					
ANR	914650	ArgumentList	tempcode		908484	1					
ANR	914651	Argument	tempcode		908484	0					
ANR	914652	Identifier	tempcode		908484	0					
ANR	914653	Argument	1 + LINK_SIZE		908484	1					
ANR	914654	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	914655	PrimaryExpression	1		908484	0					
ANR	914656	Identifier	LINK_SIZE		908484	1					
ANR	914657	Argument	utf		908484	2					
ANR	914658	Identifier	utf		908484	0					
ANR	914659	Argument	cd		908484	3					
ANR	914660	Identifier	cd		908484	0					
ANR	914661	Argument	item_hwm_offset		908484	4					
ANR	914662	Identifier	item_hwm_offset		908484	0					
ANR	914663	ExpressionStatement	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"	6453:10:210680:210739	908484	2	True				
ANR	914664	CallExpression	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"		908484	0					
ANR	914665	Callee	memmove		908484	0					
ANR	914666	Identifier	memmove		908484	0					
ANR	914667	ArgumentList	tempcode + 1 + LINK_SIZE		908484	1					
ANR	914668	Argument	tempcode + 1 + LINK_SIZE		908484	0					
ANR	914669	AdditiveExpression	tempcode + 1 + LINK_SIZE		908484	0		+			
ANR	914670	Identifier	tempcode		908484	0					
ANR	914671	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	914672	PrimaryExpression	1		908484	0					
ANR	914673	Identifier	LINK_SIZE		908484	1					
ANR	914674	Argument	tempcode		908484	1					
ANR	914675	Identifier	tempcode		908484	0					
ANR	914676	Argument	IN_UCHARS ( len )		908484	2					
ANR	914677	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	914678	Callee	IN_UCHARS		908484	0					
ANR	914679	Identifier	IN_UCHARS		908484	0					
ANR	914680	ArgumentList	len		908484	1					
ANR	914681	Argument	len		908484	0					
ANR	914682	Identifier	len		908484	0					
ANR	914683	ExpressionStatement	code += 1 + LINK_SIZE	6454:10:210751:210772	908484	3	True				
ANR	914684	AssignmentExpression	code += 1 + LINK_SIZE		908484	0		+=			
ANR	914685	Identifier	code		908484	0					
ANR	914686	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	914687	PrimaryExpression	1		908484	0					
ANR	914688	Identifier	LINK_SIZE		908484	1					
ANR	914689	ExpressionStatement	len += 1 + LINK_SIZE	6455:10:210784:210804	908484	4	True				
ANR	914690	AssignmentExpression	len += 1 + LINK_SIZE		908484	0		+=			
ANR	914691	Identifier	len		908484	0					
ANR	914692	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	914693	PrimaryExpression	1		908484	0					
ANR	914694	Identifier	LINK_SIZE		908484	1					
ANR	914695	ExpressionStatement	tempcode [ 0 ] = OP_ONCE	6456:10:210816:210837	908484	5	True				
ANR	914696	AssignmentExpression	tempcode [ 0 ] = OP_ONCE		908484	0		=			
ANR	914697	ArrayIndexing	tempcode [ 0 ]		908484	0					
ANR	914698	Identifier	tempcode		908484	0					
ANR	914699	PrimaryExpression	0		908484	1					
ANR	914700	Identifier	OP_ONCE		908484	1					
ANR	914701	ExpressionStatement	* code ++ = OP_KET	6457:10:210849:210865	908484	6	True				
ANR	914702	AssignmentExpression	* code ++ = OP_KET		908484	0		=			
ANR	914703	UnaryOperationExpression	* code ++		908484	0					
ANR	914704	UnaryOperator	*		908484	0					
ANR	914705	PostIncDecOperationExpression	code ++		908484	1					
ANR	914706	Identifier	code		908484	0					
ANR	914707	IncDec	++		908484	1					
ANR	914708	Identifier	OP_KET		908484	1					
ANR	914709	ExpressionStatement	"PUTINC ( code , 0 , len )"	6458:10:210877:210897	908484	7	True				
ANR	914710	CallExpression	"PUTINC ( code , 0 , len )"		908484	0					
ANR	914711	Callee	PUTINC		908484	0					
ANR	914712	Identifier	PUTINC		908484	0					
ANR	914713	ArgumentList	code		908484	1					
ANR	914714	Argument	code		908484	0					
ANR	914715	Identifier	code		908484	0					
ANR	914716	Argument	0		908484	1					
ANR	914717	PrimaryExpression	0		908484	0					
ANR	914718	Argument	len		908484	2					
ANR	914719	Identifier	len		908484	0					
ANR	914720	ExpressionStatement	"PUT ( tempcode , 1 , len )"	6459:10:210909:210930	908484	8	True				
ANR	914721	CallExpression	"PUT ( tempcode , 1 , len )"		908484	0					
ANR	914722	Callee	PUT		908484	0					
ANR	914723	Identifier	PUT		908484	0					
ANR	914724	ArgumentList	tempcode		908484	1					
ANR	914725	Argument	tempcode		908484	0					
ANR	914726	Identifier	tempcode		908484	0					
ANR	914727	Argument	1		908484	1					
ANR	914728	PrimaryExpression	1		908484	0					
ANR	914729	Argument	len		908484	2					
ANR	914730	Identifier	len		908484	0					
ANR	914731	IfStatement	if ( len > 0 )		908484	4					
ANR	914732	Condition	len > 0	6464:10:210978:210984	908484	0	True				
ANR	914733	RelationalExpression	len > 0		908484	0		>			
ANR	914734	Identifier	len		908484	0					
ANR	914735	PrimaryExpression	0		908484	1					
ANR	914736	SwitchStatement	switch ( * tempcode )		908484	1					
ANR	914737	Condition	* tempcode	6464:27:210995:211003	908484	0	True				
ANR	914738	UnaryOperationExpression	* tempcode		908484	0					
ANR	914739	UnaryOperator	*		908484	0					
ANR	914740	Identifier	tempcode		908484	1					
ANR	914741	CompoundStatement		2008:8:71138:71138	908484	1					
ANR	914742	Label	case OP_STAR :	6466:8:211024:211036	908484	0	True				
ANR	914743	Identifier	OP_STAR		908484	0					
ANR	914744	ExpressionStatement	* tempcode = OP_POSSTAR	6466:23:211039:211061	908484	1	True				
ANR	914745	AssignmentExpression	* tempcode = OP_POSSTAR		908484	0		=			
ANR	914746	UnaryOperationExpression	* tempcode		908484	0					
ANR	914747	UnaryOperator	*		908484	0					
ANR	914748	Identifier	tempcode		908484	1					
ANR	914749	Identifier	OP_POSSTAR		908484	1					
ANR	914750	BreakStatement	break ;	6466:47:211063:211068	908484	2	True				
ANR	914751	Label	case OP_PLUS :	6467:8:211078:211090	908484	3	True				
ANR	914752	Identifier	OP_PLUS		908484	0					
ANR	914753	ExpressionStatement	* tempcode = OP_POSPLUS	6467:23:211093:211115	908484	4	True				
ANR	914754	AssignmentExpression	* tempcode = OP_POSPLUS		908484	0		=			
ANR	914755	UnaryOperationExpression	* tempcode		908484	0					
ANR	914756	UnaryOperator	*		908484	0					
ANR	914757	Identifier	tempcode		908484	1					
ANR	914758	Identifier	OP_POSPLUS		908484	1					
ANR	914759	BreakStatement	break ;	6467:47:211117:211122	908484	5	True				
ANR	914760	Label	case OP_QUERY :	6468:8:211132:211145	908484	6	True				
ANR	914761	Identifier	OP_QUERY		908484	0					
ANR	914762	ExpressionStatement	* tempcode = OP_POSQUERY	6468:23:211147:211170	908484	7	True				
ANR	914763	AssignmentExpression	* tempcode = OP_POSQUERY		908484	0		=			
ANR	914764	UnaryOperationExpression	* tempcode		908484	0					
ANR	914765	UnaryOperator	*		908484	0					
ANR	914766	Identifier	tempcode		908484	1					
ANR	914767	Identifier	OP_POSQUERY		908484	1					
ANR	914768	BreakStatement	break ;	6468:48:211172:211177	908484	8	True				
ANR	914769	Label	case OP_UPTO :	6469:8:211187:211199	908484	9	True				
ANR	914770	Identifier	OP_UPTO		908484	0					
ANR	914771	ExpressionStatement	* tempcode = OP_POSUPTO	6469:23:211202:211224	908484	10	True				
ANR	914772	AssignmentExpression	* tempcode = OP_POSUPTO		908484	0		=			
ANR	914773	UnaryOperationExpression	* tempcode		908484	0					
ANR	914774	UnaryOperator	*		908484	0					
ANR	914775	Identifier	tempcode		908484	1					
ANR	914776	Identifier	OP_POSUPTO		908484	1					
ANR	914777	BreakStatement	break ;	6469:47:211226:211231	908484	11	True				
ANR	914778	Label	case OP_STARI :	6471:8:211242:211255	908484	12	True				
ANR	914779	Identifier	OP_STARI		908484	0					
ANR	914780	ExpressionStatement	* tempcode = OP_POSSTARI	6471:24:211258:211281	908484	13	True				
ANR	914781	AssignmentExpression	* tempcode = OP_POSSTARI		908484	0		=			
ANR	914782	UnaryOperationExpression	* tempcode		908484	0					
ANR	914783	UnaryOperator	*		908484	0					
ANR	914784	Identifier	tempcode		908484	1					
ANR	914785	Identifier	OP_POSSTARI		908484	1					
ANR	914786	BreakStatement	break ;	6471:49:211283:211288	908484	14	True				
ANR	914787	Label	case OP_PLUSI :	6472:8:211298:211311	908484	15	True				
ANR	914788	Identifier	OP_PLUSI		908484	0					
ANR	914789	ExpressionStatement	* tempcode = OP_POSPLUSI	6472:24:211314:211337	908484	16	True				
ANR	914790	AssignmentExpression	* tempcode = OP_POSPLUSI		908484	0		=			
ANR	914791	UnaryOperationExpression	* tempcode		908484	0					
ANR	914792	UnaryOperator	*		908484	0					
ANR	914793	Identifier	tempcode		908484	1					
ANR	914794	Identifier	OP_POSPLUSI		908484	1					
ANR	914795	BreakStatement	break ;	6472:49:211339:211344	908484	17	True				
ANR	914796	Label	case OP_QUERYI :	6473:8:211354:211368	908484	18	True				
ANR	914797	Identifier	OP_QUERYI		908484	0					
ANR	914798	ExpressionStatement	* tempcode = OP_POSQUERYI	6473:24:211370:211394	908484	19	True				
ANR	914799	AssignmentExpression	* tempcode = OP_POSQUERYI		908484	0		=			
ANR	914800	UnaryOperationExpression	* tempcode		908484	0					
ANR	914801	UnaryOperator	*		908484	0					
ANR	914802	Identifier	tempcode		908484	1					
ANR	914803	Identifier	OP_POSQUERYI		908484	1					
ANR	914804	BreakStatement	break ;	6473:50:211396:211401	908484	20	True				
ANR	914805	Label	case OP_UPTOI :	6474:8:211411:211424	908484	21	True				
ANR	914806	Identifier	OP_UPTOI		908484	0					
ANR	914807	ExpressionStatement	* tempcode = OP_POSUPTOI	6474:24:211427:211450	908484	22	True				
ANR	914808	AssignmentExpression	* tempcode = OP_POSUPTOI		908484	0		=			
ANR	914809	UnaryOperationExpression	* tempcode		908484	0					
ANR	914810	UnaryOperator	*		908484	0					
ANR	914811	Identifier	tempcode		908484	1					
ANR	914812	Identifier	OP_POSUPTOI		908484	1					
ANR	914813	BreakStatement	break ;	6474:49:211452:211457	908484	23	True				
ANR	914814	Label	case OP_NOTSTAR :	6476:8:211468:211483	908484	24	True				
ANR	914815	Identifier	OP_NOTSTAR		908484	0					
ANR	914816	ExpressionStatement	* tempcode = OP_NOTPOSSTAR	6476:26:211486:211511	908484	25	True				
ANR	914817	AssignmentExpression	* tempcode = OP_NOTPOSSTAR		908484	0		=			
ANR	914818	UnaryOperationExpression	* tempcode		908484	0					
ANR	914819	UnaryOperator	*		908484	0					
ANR	914820	Identifier	tempcode		908484	1					
ANR	914821	Identifier	OP_NOTPOSSTAR		908484	1					
ANR	914822	BreakStatement	break ;	6476:53:211513:211518	908484	26	True				
ANR	914823	Label	case OP_NOTPLUS :	6477:8:211528:211543	908484	27	True				
ANR	914824	Identifier	OP_NOTPLUS		908484	0					
ANR	914825	ExpressionStatement	* tempcode = OP_NOTPOSPLUS	6477:26:211546:211571	908484	28	True				
ANR	914826	AssignmentExpression	* tempcode = OP_NOTPOSPLUS		908484	0		=			
ANR	914827	UnaryOperationExpression	* tempcode		908484	0					
ANR	914828	UnaryOperator	*		908484	0					
ANR	914829	Identifier	tempcode		908484	1					
ANR	914830	Identifier	OP_NOTPOSPLUS		908484	1					
ANR	914831	BreakStatement	break ;	6477:53:211573:211578	908484	29	True				
ANR	914832	Label	case OP_NOTQUERY :	6478:8:211588:211604	908484	30	True				
ANR	914833	Identifier	OP_NOTQUERY		908484	0					
ANR	914834	ExpressionStatement	* tempcode = OP_NOTPOSQUERY	6478:26:211606:211632	908484	31	True				
ANR	914835	AssignmentExpression	* tempcode = OP_NOTPOSQUERY		908484	0		=			
ANR	914836	UnaryOperationExpression	* tempcode		908484	0					
ANR	914837	UnaryOperator	*		908484	0					
ANR	914838	Identifier	tempcode		908484	1					
ANR	914839	Identifier	OP_NOTPOSQUERY		908484	1					
ANR	914840	BreakStatement	break ;	6478:54:211634:211639	908484	32	True				
ANR	914841	Label	case OP_NOTUPTO :	6479:8:211649:211664	908484	33	True				
ANR	914842	Identifier	OP_NOTUPTO		908484	0					
ANR	914843	ExpressionStatement	* tempcode = OP_NOTPOSUPTO	6479:26:211667:211692	908484	34	True				
ANR	914844	AssignmentExpression	* tempcode = OP_NOTPOSUPTO		908484	0		=			
ANR	914845	UnaryOperationExpression	* tempcode		908484	0					
ANR	914846	UnaryOperator	*		908484	0					
ANR	914847	Identifier	tempcode		908484	1					
ANR	914848	Identifier	OP_NOTPOSUPTO		908484	1					
ANR	914849	BreakStatement	break ;	6479:53:211694:211699	908484	35	True				
ANR	914850	Label	case OP_NOTSTARI :	6481:8:211710:211726	908484	36	True				
ANR	914851	Identifier	OP_NOTSTARI		908484	0					
ANR	914852	ExpressionStatement	* tempcode = OP_NOTPOSSTARI	6481:27:211729:211755	908484	37	True				
ANR	914853	AssignmentExpression	* tempcode = OP_NOTPOSSTARI		908484	0		=			
ANR	914854	UnaryOperationExpression	* tempcode		908484	0					
ANR	914855	UnaryOperator	*		908484	0					
ANR	914856	Identifier	tempcode		908484	1					
ANR	914857	Identifier	OP_NOTPOSSTARI		908484	1					
ANR	914858	BreakStatement	break ;	6481:55:211757:211762	908484	38	True				
ANR	914859	Label	case OP_NOTPLUSI :	6482:8:211772:211788	908484	39	True				
ANR	914860	Identifier	OP_NOTPLUSI		908484	0					
ANR	914861	ExpressionStatement	* tempcode = OP_NOTPOSPLUSI	6482:27:211791:211817	908484	40	True				
ANR	914862	AssignmentExpression	* tempcode = OP_NOTPOSPLUSI		908484	0		=			
ANR	914863	UnaryOperationExpression	* tempcode		908484	0					
ANR	914864	UnaryOperator	*		908484	0					
ANR	914865	Identifier	tempcode		908484	1					
ANR	914866	Identifier	OP_NOTPOSPLUSI		908484	1					
ANR	914867	BreakStatement	break ;	6482:55:211819:211824	908484	41	True				
ANR	914868	Label	case OP_NOTQUERYI :	6483:8:211834:211851	908484	42	True				
ANR	914869	Identifier	OP_NOTQUERYI		908484	0					
ANR	914870	ExpressionStatement	* tempcode = OP_NOTPOSQUERYI	6483:27:211853:211880	908484	43	True				
ANR	914871	AssignmentExpression	* tempcode = OP_NOTPOSQUERYI		908484	0		=			
ANR	914872	UnaryOperationExpression	* tempcode		908484	0					
ANR	914873	UnaryOperator	*		908484	0					
ANR	914874	Identifier	tempcode		908484	1					
ANR	914875	Identifier	OP_NOTPOSQUERYI		908484	1					
ANR	914876	BreakStatement	break ;	6483:56:211882:211887	908484	44	True				
ANR	914877	Label	case OP_NOTUPTOI :	6484:8:211897:211913	908484	45	True				
ANR	914878	Identifier	OP_NOTUPTOI		908484	0					
ANR	914879	ExpressionStatement	* tempcode = OP_NOTPOSUPTOI	6484:27:211916:211942	908484	46	True				
ANR	914880	AssignmentExpression	* tempcode = OP_NOTPOSUPTOI		908484	0		=			
ANR	914881	UnaryOperationExpression	* tempcode		908484	0					
ANR	914882	UnaryOperator	*		908484	0					
ANR	914883	Identifier	tempcode		908484	1					
ANR	914884	Identifier	OP_NOTPOSUPTOI		908484	1					
ANR	914885	BreakStatement	break ;	6484:55:211944:211949	908484	47	True				
ANR	914886	Label	case OP_TYPESTAR :	6486:8:211960:211976	908484	48	True				
ANR	914887	Identifier	OP_TYPESTAR		908484	0					
ANR	914888	ExpressionStatement	* tempcode = OP_TYPEPOSSTAR	6486:27:211979:212005	908484	49	True				
ANR	914889	AssignmentExpression	* tempcode = OP_TYPEPOSSTAR		908484	0		=			
ANR	914890	UnaryOperationExpression	* tempcode		908484	0					
ANR	914891	UnaryOperator	*		908484	0					
ANR	914892	Identifier	tempcode		908484	1					
ANR	914893	Identifier	OP_TYPEPOSSTAR		908484	1					
ANR	914894	BreakStatement	break ;	6486:55:212007:212012	908484	50	True				
ANR	914895	Label	case OP_TYPEPLUS :	6487:8:212022:212038	908484	51	True				
ANR	914896	Identifier	OP_TYPEPLUS		908484	0					
ANR	914897	ExpressionStatement	* tempcode = OP_TYPEPOSPLUS	6487:27:212041:212067	908484	52	True				
ANR	914898	AssignmentExpression	* tempcode = OP_TYPEPOSPLUS		908484	0		=			
ANR	914899	UnaryOperationExpression	* tempcode		908484	0					
ANR	914900	UnaryOperator	*		908484	0					
ANR	914901	Identifier	tempcode		908484	1					
ANR	914902	Identifier	OP_TYPEPOSPLUS		908484	1					
ANR	914903	BreakStatement	break ;	6487:55:212069:212074	908484	53	True				
ANR	914904	Label	case OP_TYPEQUERY :	6488:8:212084:212101	908484	54	True				
ANR	914905	Identifier	OP_TYPEQUERY		908484	0					
ANR	914906	ExpressionStatement	* tempcode = OP_TYPEPOSQUERY	6488:27:212103:212130	908484	55	True				
ANR	914907	AssignmentExpression	* tempcode = OP_TYPEPOSQUERY		908484	0		=			
ANR	914908	UnaryOperationExpression	* tempcode		908484	0					
ANR	914909	UnaryOperator	*		908484	0					
ANR	914910	Identifier	tempcode		908484	1					
ANR	914911	Identifier	OP_TYPEPOSQUERY		908484	1					
ANR	914912	BreakStatement	break ;	6488:56:212132:212137	908484	56	True				
ANR	914913	Label	case OP_TYPEUPTO :	6489:8:212147:212163	908484	57	True				
ANR	914914	Identifier	OP_TYPEUPTO		908484	0					
ANR	914915	ExpressionStatement	* tempcode = OP_TYPEPOSUPTO	6489:27:212166:212192	908484	58	True				
ANR	914916	AssignmentExpression	* tempcode = OP_TYPEPOSUPTO		908484	0		=			
ANR	914917	UnaryOperationExpression	* tempcode		908484	0					
ANR	914918	UnaryOperator	*		908484	0					
ANR	914919	Identifier	tempcode		908484	1					
ANR	914920	Identifier	OP_TYPEPOSUPTO		908484	1					
ANR	914921	BreakStatement	break ;	6489:55:212194:212199	908484	59	True				
ANR	914922	Label	case OP_CRSTAR :	6491:8:212210:212224	908484	60	True				
ANR	914923	Identifier	OP_CRSTAR		908484	0					
ANR	914924	ExpressionStatement	* tempcode = OP_CRPOSSTAR	6491:26:212228:212252	908484	61	True				
ANR	914925	AssignmentExpression	* tempcode = OP_CRPOSSTAR		908484	0		=			
ANR	914926	UnaryOperationExpression	* tempcode		908484	0					
ANR	914927	UnaryOperator	*		908484	0					
ANR	914928	Identifier	tempcode		908484	1					
ANR	914929	Identifier	OP_CRPOSSTAR		908484	1					
ANR	914930	BreakStatement	break ;	6491:52:212254:212259	908484	62	True				
ANR	914931	Label	case OP_CRPLUS :	6492:8:212269:212283	908484	63	True				
ANR	914932	Identifier	OP_CRPLUS		908484	0					
ANR	914933	ExpressionStatement	* tempcode = OP_CRPOSPLUS	6492:26:212287:212311	908484	64	True				
ANR	914934	AssignmentExpression	* tempcode = OP_CRPOSPLUS		908484	0		=			
ANR	914935	UnaryOperationExpression	* tempcode		908484	0					
ANR	914936	UnaryOperator	*		908484	0					
ANR	914937	Identifier	tempcode		908484	1					
ANR	914938	Identifier	OP_CRPOSPLUS		908484	1					
ANR	914939	BreakStatement	break ;	6492:52:212313:212318	908484	65	True				
ANR	914940	Label	case OP_CRQUERY :	6493:8:212328:212343	908484	66	True				
ANR	914941	Identifier	OP_CRQUERY		908484	0					
ANR	914942	ExpressionStatement	* tempcode = OP_CRPOSQUERY	6493:26:212346:212371	908484	67	True				
ANR	914943	AssignmentExpression	* tempcode = OP_CRPOSQUERY		908484	0		=			
ANR	914944	UnaryOperationExpression	* tempcode		908484	0					
ANR	914945	UnaryOperator	*		908484	0					
ANR	914946	Identifier	tempcode		908484	1					
ANR	914947	Identifier	OP_CRPOSQUERY		908484	1					
ANR	914948	BreakStatement	break ;	6493:53:212373:212378	908484	68	True				
ANR	914949	Label	case OP_CRRANGE :	6494:8:212388:212403	908484	69	True				
ANR	914950	Identifier	OP_CRRANGE		908484	0					
ANR	914951	ExpressionStatement	* tempcode = OP_CRPOSRANGE	6494:26:212406:212431	908484	70	True				
ANR	914952	AssignmentExpression	* tempcode = OP_CRPOSRANGE		908484	0		=			
ANR	914953	UnaryOperationExpression	* tempcode		908484	0					
ANR	914954	UnaryOperator	*		908484	0					
ANR	914955	Identifier	tempcode		908484	1					
ANR	914956	Identifier	OP_CRPOSRANGE		908484	1					
ANR	914957	BreakStatement	break ;	6494:53:212433:212438	908484	71	True				
ANR	914958	Label	default :	6499:8:212572:212579	908484	72	True				
ANR	914959	Identifier	default		908484	0					
ANR	914960	ExpressionStatement	* code = OP_END	6500:8:212589:212603	908484	73	True				
ANR	914961	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	914962	UnaryOperationExpression	* code		908484	0					
ANR	914963	UnaryOperator	*		908484	0					
ANR	914964	Identifier	code		908484	1					
ANR	914965	Identifier	OP_END		908484	1					
ANR	914966	ExpressionStatement	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"	6501:8:212613:212678	908484	74	True				
ANR	914967	CallExpression	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , item_hwm_offset )"		908484	0					
ANR	914968	Callee	adjust_recurse		908484	0					
ANR	914969	Identifier	adjust_recurse		908484	0					
ANR	914970	ArgumentList	tempcode		908484	1					
ANR	914971	Argument	tempcode		908484	0					
ANR	914972	Identifier	tempcode		908484	0					
ANR	914973	Argument	1 + LINK_SIZE		908484	1					
ANR	914974	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	914975	PrimaryExpression	1		908484	0					
ANR	914976	Identifier	LINK_SIZE		908484	1					
ANR	914977	Argument	utf		908484	2					
ANR	914978	Identifier	utf		908484	0					
ANR	914979	Argument	cd		908484	3					
ANR	914980	Identifier	cd		908484	0					
ANR	914981	Argument	item_hwm_offset		908484	4					
ANR	914982	Identifier	item_hwm_offset		908484	0					
ANR	914983	ExpressionStatement	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"	6502:8:212688:212747	908484	75	True				
ANR	914984	CallExpression	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"		908484	0					
ANR	914985	Callee	memmove		908484	0					
ANR	914986	Identifier	memmove		908484	0					
ANR	914987	ArgumentList	tempcode + 1 + LINK_SIZE		908484	1					
ANR	914988	Argument	tempcode + 1 + LINK_SIZE		908484	0					
ANR	914989	AdditiveExpression	tempcode + 1 + LINK_SIZE		908484	0		+			
ANR	914990	Identifier	tempcode		908484	0					
ANR	914991	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	914992	PrimaryExpression	1		908484	0					
ANR	914993	Identifier	LINK_SIZE		908484	1					
ANR	914994	Argument	tempcode		908484	1					
ANR	914995	Identifier	tempcode		908484	0					
ANR	914996	Argument	IN_UCHARS ( len )		908484	2					
ANR	914997	CallExpression	IN_UCHARS ( len )		908484	0					
ANR	914998	Callee	IN_UCHARS		908484	0					
ANR	914999	Identifier	IN_UCHARS		908484	0					
ANR	915000	ArgumentList	len		908484	1					
ANR	915001	Argument	len		908484	0					
ANR	915002	Identifier	len		908484	0					
ANR	915003	ExpressionStatement	code += 1 + LINK_SIZE	6503:8:212757:212778	908484	76	True				
ANR	915004	AssignmentExpression	code += 1 + LINK_SIZE		908484	0		+=			
ANR	915005	Identifier	code		908484	0					
ANR	915006	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	915007	PrimaryExpression	1		908484	0					
ANR	915008	Identifier	LINK_SIZE		908484	1					
ANR	915009	ExpressionStatement	len += 1 + LINK_SIZE	6504:8:212788:212808	908484	77	True				
ANR	915010	AssignmentExpression	len += 1 + LINK_SIZE		908484	0		+=			
ANR	915011	Identifier	len		908484	0					
ANR	915012	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	915013	PrimaryExpression	1		908484	0					
ANR	915014	Identifier	LINK_SIZE		908484	1					
ANR	915015	ExpressionStatement	tempcode [ 0 ] = OP_ONCE	6505:8:212818:212839	908484	78	True				
ANR	915016	AssignmentExpression	tempcode [ 0 ] = OP_ONCE		908484	0		=			
ANR	915017	ArrayIndexing	tempcode [ 0 ]		908484	0					
ANR	915018	Identifier	tempcode		908484	0					
ANR	915019	PrimaryExpression	0		908484	1					
ANR	915020	Identifier	OP_ONCE		908484	1					
ANR	915021	ExpressionStatement	* code ++ = OP_KET	6506:8:212849:212865	908484	79	True				
ANR	915022	AssignmentExpression	* code ++ = OP_KET		908484	0		=			
ANR	915023	UnaryOperationExpression	* code ++		908484	0					
ANR	915024	UnaryOperator	*		908484	0					
ANR	915025	PostIncDecOperationExpression	code ++		908484	1					
ANR	915026	Identifier	code		908484	0					
ANR	915027	IncDec	++		908484	1					
ANR	915028	Identifier	OP_KET		908484	1					
ANR	915029	ExpressionStatement	"PUTINC ( code , 0 , len )"	6507:8:212875:212895	908484	80	True				
ANR	915030	CallExpression	"PUTINC ( code , 0 , len )"		908484	0					
ANR	915031	Callee	PUTINC		908484	0					
ANR	915032	Identifier	PUTINC		908484	0					
ANR	915033	ArgumentList	code		908484	1					
ANR	915034	Argument	code		908484	0					
ANR	915035	Identifier	code		908484	0					
ANR	915036	Argument	0		908484	1					
ANR	915037	PrimaryExpression	0		908484	0					
ANR	915038	Argument	len		908484	2					
ANR	915039	Identifier	len		908484	0					
ANR	915040	ExpressionStatement	"PUT ( tempcode , 1 , len )"	6508:8:212905:212926	908484	81	True				
ANR	915041	CallExpression	"PUT ( tempcode , 1 , len )"		908484	0					
ANR	915042	Callee	PUT		908484	0					
ANR	915043	Identifier	PUT		908484	0					
ANR	915044	ArgumentList	tempcode		908484	1					
ANR	915045	Argument	tempcode		908484	0					
ANR	915046	Identifier	tempcode		908484	0					
ANR	915047	Argument	1		908484	1					
ANR	915048	PrimaryExpression	1		908484	0					
ANR	915049	Argument	len		908484	2					
ANR	915050	Identifier	len		908484	0					
ANR	915051	BreakStatement	break ;	6509:8:212936:212941	908484	82	True				
ANR	915052	Label	END_REPEAT :	6518:4:213194:213204	908484	129	True				
ANR	915053	Identifier	END_REPEAT		908484	0					
ANR	915054	ExpressionStatement	previous = NULL	6519:4:213210:213225	908484	130	True				
ANR	915055	AssignmentExpression	previous = NULL		908484	0		=			
ANR	915056	Identifier	previous		908484	0					
ANR	915057	Identifier	NULL		908484	1					
ANR	915058	ExpressionStatement	cd -> req_varyopt |= reqvary	6520:4:213231:213257	908484	131	True				
ANR	915059	AssignmentExpression	cd -> req_varyopt |= reqvary		908484	0		|=			
ANR	915060	PtrMemberAccess	cd -> req_varyopt		908484	0					
ANR	915061	Identifier	cd		908484	0					
ANR	915062	Identifier	req_varyopt		908484	1					
ANR	915063	Identifier	reqvary		908484	1					
ANR	915064	BreakStatement	break ;	6521:4:213263:213268	908484	132	True				
ANR	915065	Label	case CHAR_LEFT_PARENTHESIS :	6529:4:213533:213559	908484	133	True				
ANR	915066	Identifier	CHAR_LEFT_PARENTHESIS		908484	0					
ANR	915067	ExpressionStatement	ptr ++	6530:4:213565:213570	908484	134	True				
ANR	915068	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915069	Identifier	ptr		908484	0					
ANR	915070	IncDec	++		908484	1					
ANR	915071	IfStatement	if ( ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN )		908484	135					
ANR	915072	Condition	ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN	6535:8:213707:213764	908484	0	True				
ANR	915073	AndExpression	ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN		908484	0		&&			
ANR	915074	EqualityExpression	ptr [ 0 ] == CHAR_QUESTION_MARK		908484	0		==			
ANR	915075	ArrayIndexing	ptr [ 0 ]		908484	0					
ANR	915076	Identifier	ptr		908484	0					
ANR	915077	PrimaryExpression	0		908484	1					
ANR	915078	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	915079	EqualityExpression	ptr [ 1 ] == CHAR_NUMBER_SIGN		908484	1		==			
ANR	915080	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	915081	Identifier	ptr		908484	0					
ANR	915082	PrimaryExpression	1		908484	1					
ANR	915083	Identifier	CHAR_NUMBER_SIGN		908484	1					
ANR	915084	CompoundStatement		2079:6:73897:73897	908484	1					
ANR	915085	ExpressionStatement	ptr += 2	6537:6:213781:213789	908484	0	True				
ANR	915086	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	915087	Identifier	ptr		908484	0					
ANR	915088	PrimaryExpression	2		908484	1					
ANR	915089	WhileStatement	while ( * ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS )		908484	1					
ANR	915090	Condition	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS	6538:13:213804:213854	908484	0	True				
ANR	915091	AndExpression	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS		908484	0		&&			
ANR	915092	EqualityExpression	* ptr != CHAR_NULL		908484	0		!=			
ANR	915093	UnaryOperationExpression	* ptr		908484	0					
ANR	915094	UnaryOperator	*		908484	0					
ANR	915095	Identifier	ptr		908484	1					
ANR	915096	Identifier	CHAR_NULL		908484	1					
ANR	915097	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	1		!=			
ANR	915098	UnaryOperationExpression	* ptr		908484	0					
ANR	915099	UnaryOperator	*		908484	0					
ANR	915100	Identifier	ptr		908484	1					
ANR	915101	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	915102	ExpressionStatement	ptr ++	6538:66:213857:213862	908484	1	True				
ANR	915103	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915104	Identifier	ptr		908484	0					
ANR	915105	IncDec	++		908484	1					
ANR	915106	IfStatement	if ( * ptr == CHAR_NULL )		908484	2					
ANR	915107	Condition	* ptr == CHAR_NULL	6539:10:213874:213890	908484	0	True				
ANR	915108	EqualityExpression	* ptr == CHAR_NULL		908484	0		==			
ANR	915109	UnaryOperationExpression	* ptr		908484	0					
ANR	915110	UnaryOperator	*		908484	0					
ANR	915111	Identifier	ptr		908484	1					
ANR	915112	Identifier	CHAR_NULL		908484	1					
ANR	915113	CompoundStatement		2083:8:74025:74025	908484	1					
ANR	915114	ExpressionStatement	* errorcodeptr = ERR18	6541:8:213911:213932	908484	0	True				
ANR	915115	AssignmentExpression	* errorcodeptr = ERR18		908484	0		=			
ANR	915116	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915117	UnaryOperator	*		908484	0					
ANR	915118	Identifier	errorcodeptr		908484	1					
ANR	915119	Identifier	ERR18		908484	1					
ANR	915120	GotoStatement	goto FAILED ;	6542:8:213942:213953	908484	1	True				
ANR	915121	Identifier	FAILED		908484	0					
ANR	915122	ContinueStatement	continue ;	6544:6:213971:213979	908484	3	True				
ANR	915123	IfStatement	if ( ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) ) )		908484	136					
ANR	915124	Condition	ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) )	6549:8:214070:214187	908484	0	True				
ANR	915125	AndExpression	ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) )		908484	0		&&			
ANR	915126	EqualityExpression	ptr [ 0 ] == CHAR_ASTERISK		908484	0		==			
ANR	915127	ArrayIndexing	ptr [ 0 ]		908484	0					
ANR	915128	Identifier	ptr		908484	0					
ANR	915129	PrimaryExpression	0		908484	1					
ANR	915130	Identifier	CHAR_ASTERISK		908484	1					
ANR	915131	OrExpression	ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) )		908484	1		||			
ANR	915132	EqualityExpression	ptr [ 1 ] == ':'		908484	0		==			
ANR	915133	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	915134	Identifier	ptr		908484	0					
ANR	915135	PrimaryExpression	1		908484	1					
ANR	915136	PrimaryExpression	':'		908484	1					
ANR	915137	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 )		908484	1		&&			
ANR	915138	CallExpression	MAX_255 ( ptr [ 1 ] )		908484	0					
ANR	915139	Callee	MAX_255		908484	0					
ANR	915140	Identifier	MAX_255		908484	0					
ANR	915141	ArgumentList	ptr [ 1 ]		908484	1					
ANR	915142	Argument	ptr [ 1 ]		908484	0					
ANR	915143	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	915144	Identifier	ptr		908484	0					
ANR	915145	PrimaryExpression	1		908484	1					
ANR	915146	EqualityExpression	( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0		908484	1		!=			
ANR	915147	BitAndExpression	cd -> ctypes [ ptr [ 1 ] ] & ctype_letter		908484	0		&			
ANR	915148	ArrayIndexing	cd -> ctypes [ ptr [ 1 ] ]		908484	0					
ANR	915149	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	915150	Identifier	cd		908484	0					
ANR	915151	Identifier	ctypes		908484	1					
ANR	915152	ArrayIndexing	ptr [ 1 ]		908484	1					
ANR	915153	Identifier	ptr		908484	0					
ANR	915154	PrimaryExpression	1		908484	1					
ANR	915155	Identifier	ctype_letter		908484	1					
ANR	915156	PrimaryExpression	0		908484	1					
ANR	915157	CompoundStatement		2099:6:74446:74474	908484	1					
ANR	915158	IdentifierDeclStatement	"int i , namelen ;"	6552:6:214204:214218	908484	0	True				
ANR	915159	IdentifierDecl	i		908484	0					
ANR	915160	IdentifierDeclType	int		908484	0					
ANR	915161	Identifier	i		908484	1					
ANR	915162	IdentifierDecl	namelen		908484	1					
ANR	915163	IdentifierDeclType	int		908484	0					
ANR	915164	Identifier	namelen		908484	1					
ANR	915165	IdentifierDeclStatement	int arglen = 0 ;	6553:6:214226:214240	908484	1	True				
ANR	915166	IdentifierDecl	arglen = 0		908484	0					
ANR	915167	IdentifierDeclType	int		908484	0					
ANR	915168	Identifier	arglen		908484	1					
ANR	915169	AssignmentExpression	arglen = 0		908484	2		=			
ANR	915170	Identifier	arglen		908484	0					
ANR	915171	PrimaryExpression	0		908484	1					
ANR	915172	IdentifierDeclStatement	const char * vn = verbnames ;	6554:6:214248:214274	908484	2	True				
ANR	915173	IdentifierDecl	* vn = verbnames		908484	0					
ANR	915174	IdentifierDeclType	const char *		908484	0					
ANR	915175	Identifier	vn		908484	1					
ANR	915176	AssignmentExpression	* vn = verbnames		908484	2		=			
ANR	915177	Identifier	verbnames		908484	0					
ANR	915178	Identifier	verbnames		908484	1					
ANR	915179	IdentifierDeclStatement	const pcre_uchar * name = ptr + 1 ;	6555:6:214282:214314	908484	3	True				
ANR	915180	IdentifierDecl	* name = ptr + 1		908484	0					
ANR	915181	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	915182	Identifier	name		908484	1					
ANR	915183	AssignmentExpression	* name = ptr + 1		908484	2		=			
ANR	915184	Identifier	name		908484	0					
ANR	915185	AdditiveExpression	ptr + 1		908484	1		+			
ANR	915186	Identifier	ptr		908484	0					
ANR	915187	PrimaryExpression	1		908484	1					
ANR	915188	IdentifierDeclStatement	const pcre_uchar * arg = NULL ;	6556:6:214322:214350	908484	4	True				
ANR	915189	IdentifierDecl	* arg = NULL		908484	0					
ANR	915190	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	915191	Identifier	arg		908484	1					
ANR	915192	AssignmentExpression	* arg = NULL		908484	2		=			
ANR	915193	Identifier	NULL		908484	0					
ANR	915194	Identifier	NULL		908484	1					
ANR	915195	ExpressionStatement	previous = NULL	6557:6:214358:214373	908484	5	True				
ANR	915196	AssignmentExpression	previous = NULL		908484	0		=			
ANR	915197	Identifier	previous		908484	0					
ANR	915198	Identifier	NULL		908484	1					
ANR	915199	ExpressionStatement	ptr ++	6558:6:214381:214386	908484	6	True				
ANR	915200	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915201	Identifier	ptr		908484	0					
ANR	915202	IncDec	++		908484	1					
ANR	915203	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0 )		908484	7					
ANR	915204	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0	6559:13:214401:214455	908484	0	True				
ANR	915205	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0		908484	0		&&			
ANR	915206	CallExpression	MAX_255 ( * ptr )		908484	0					
ANR	915207	Callee	MAX_255		908484	0					
ANR	915208	Identifier	MAX_255		908484	0					
ANR	915209	ArgumentList	* ptr		908484	1					
ANR	915210	Argument	* ptr		908484	0					
ANR	915211	UnaryOperationExpression	* ptr		908484	0					
ANR	915212	UnaryOperator	*		908484	0					
ANR	915213	Identifier	ptr		908484	1					
ANR	915214	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_letter ) != 0		908484	1		!=			
ANR	915215	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_letter		908484	0		&			
ANR	915216	ArrayIndexing	cd -> ctypes [ * ptr ]		908484	0					
ANR	915217	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	915218	Identifier	cd		908484	0					
ANR	915219	Identifier	ctypes		908484	1					
ANR	915220	UnaryOperationExpression	* ptr		908484	1					
ANR	915221	UnaryOperator	*		908484	0					
ANR	915222	Identifier	ptr		908484	1					
ANR	915223	Identifier	ctype_letter		908484	1					
ANR	915224	PrimaryExpression	0		908484	1					
ANR	915225	ExpressionStatement	ptr ++	6559:70:214458:214463	908484	1	True				
ANR	915226	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915227	Identifier	ptr		908484	0					
ANR	915228	IncDec	++		908484	1					
ANR	915229	ExpressionStatement	namelen = ( int ) ( ptr - name )	6560:6:214471:214498	908484	8	True				
ANR	915230	AssignmentExpression	namelen = ( int ) ( ptr - name )		908484	0		=			
ANR	915231	Identifier	namelen		908484	0					
ANR	915232	CastExpression	( int ) ( ptr - name )		908484	1					
ANR	915233	CastTarget	int		908484	0					
ANR	915234	AdditiveExpression	ptr - name		908484	1		-			
ANR	915235	Identifier	ptr		908484	0					
ANR	915236	Identifier	name		908484	1					
ANR	915237	IfStatement	if ( * ptr == CHAR_COLON )		908484	9					
ANR	915238	Condition	* ptr == CHAR_COLON	6566:10:214709:214726	908484	0	True				
ANR	915239	EqualityExpression	* ptr == CHAR_COLON		908484	0		==			
ANR	915240	UnaryOperationExpression	* ptr		908484	0					
ANR	915241	UnaryOperator	*		908484	0					
ANR	915242	Identifier	ptr		908484	1					
ANR	915243	Identifier	CHAR_COLON		908484	1					
ANR	915244	CompoundStatement		2110:8:74861:74861	908484	1					
ANR	915245	ExpressionStatement	arg = ++ ptr	6568:8:214747:214758	908484	0	True				
ANR	915246	AssignmentExpression	arg = ++ ptr		908484	0		=			
ANR	915247	Identifier	arg		908484	0					
ANR	915248	UnaryExpression	++ ptr		908484	1					
ANR	915249	IncDec	++		908484	0					
ANR	915250	Identifier	ptr		908484	1					
ANR	915251	WhileStatement	while ( * ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS )		908484	1					
ANR	915252	Condition	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS	6569:15:214775:214825	908484	0	True				
ANR	915253	AndExpression	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS		908484	0		&&			
ANR	915254	EqualityExpression	* ptr != CHAR_NULL		908484	0		!=			
ANR	915255	UnaryOperationExpression	* ptr		908484	0					
ANR	915256	UnaryOperator	*		908484	0					
ANR	915257	Identifier	ptr		908484	1					
ANR	915258	Identifier	CHAR_NULL		908484	1					
ANR	915259	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	1		!=			
ANR	915260	UnaryOperationExpression	* ptr		908484	0					
ANR	915261	UnaryOperator	*		908484	0					
ANR	915262	Identifier	ptr		908484	1					
ANR	915263	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	915264	ExpressionStatement	ptr ++	6569:68:214828:214833	908484	1	True				
ANR	915265	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915266	Identifier	ptr		908484	0					
ANR	915267	IncDec	++		908484	1					
ANR	915268	ExpressionStatement	arglen = ( int ) ( ptr - arg )	6570:8:214843:214868	908484	2	True				
ANR	915269	AssignmentExpression	arglen = ( int ) ( ptr - arg )		908484	0		=			
ANR	915270	Identifier	arglen		908484	0					
ANR	915271	CastExpression	( int ) ( ptr - arg )		908484	1					
ANR	915272	CastTarget	int		908484	0					
ANR	915273	AdditiveExpression	ptr - arg		908484	1		-			
ANR	915274	Identifier	ptr		908484	0					
ANR	915275	Identifier	arg		908484	1					
ANR	915276	IfStatement	if ( ( unsigned int ) arglen > MAX_MARK )		908484	3					
ANR	915277	Condition	( unsigned int ) arglen > MAX_MARK	6571:12:214882:214912	908484	0	True				
ANR	915278	RelationalExpression	( unsigned int ) arglen > MAX_MARK		908484	0		>			
ANR	915279	CastExpression	( unsigned int ) arglen		908484	0					
ANR	915280	CastTarget	unsigned int		908484	0					
ANR	915281	Identifier	arglen		908484	1					
ANR	915282	Identifier	MAX_MARK		908484	1					
ANR	915283	CompoundStatement		2115:10:75049:75049	908484	1					
ANR	915284	ExpressionStatement	* errorcodeptr = ERR75	6573:10:214937:214958	908484	0	True				
ANR	915285	AssignmentExpression	* errorcodeptr = ERR75		908484	0		=			
ANR	915286	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915287	UnaryOperator	*		908484	0					
ANR	915288	Identifier	errorcodeptr		908484	1					
ANR	915289	Identifier	ERR75		908484	1					
ANR	915290	GotoStatement	goto FAILED ;	6574:10:214970:214981	908484	1	True				
ANR	915291	Identifier	FAILED		908484	0					
ANR	915292	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		908484	10					
ANR	915293	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	6578:10:215016:215045	908484	0	True				
ANR	915294	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	0		!=			
ANR	915295	UnaryOperationExpression	* ptr		908484	0					
ANR	915296	UnaryOperator	*		908484	0					
ANR	915297	Identifier	ptr		908484	1					
ANR	915298	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	915299	CompoundStatement		2122:8:75180:75180	908484	1					
ANR	915300	ExpressionStatement	* errorcodeptr = ERR60	6580:8:215066:215087	908484	0	True				
ANR	915301	AssignmentExpression	* errorcodeptr = ERR60		908484	0		=			
ANR	915302	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915303	UnaryOperator	*		908484	0					
ANR	915304	Identifier	errorcodeptr		908484	1					
ANR	915305	Identifier	ERR60		908484	1					
ANR	915306	GotoStatement	goto FAILED ;	6581:8:215097:215108	908484	1	True				
ANR	915307	Identifier	FAILED		908484	0					
ANR	915308	ForStatement	for ( i = 0 ; i < verbcount ; i ++ )		908484	11					
ANR	915309	ForInit	i = 0 ;	6586:11:215174:215179	908484	0	True				
ANR	915310	AssignmentExpression	i = 0		908484	0		=			
ANR	915311	Identifier	i		908484	0					
ANR	915312	PrimaryExpression	0		908484	1					
ANR	915313	Condition	i < verbcount	6586:18:215181:215193	908484	1	True				
ANR	915314	RelationalExpression	i < verbcount		908484	0		<			
ANR	915315	Identifier	i		908484	0					
ANR	915316	Identifier	verbcount		908484	1					
ANR	915317	PostIncDecOperationExpression	i ++	6586:33:215196:215198	908484	2	True				
ANR	915318	Identifier	i		908484	0					
ANR	915319	IncDec	++		908484	1					
ANR	915320	CompoundStatement		2130:8:75333:75333	908484	3					
ANR	915321	IfStatement	"if ( namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0 )"		908484	0					
ANR	915322	Condition	"namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0"	6588:12:215223:215298	908484	0	True				
ANR	915323	AndExpression	"namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0"		908484	0		&&			
ANR	915324	EqualityExpression	namelen == verbs [ i ] . len		908484	0		==			
ANR	915325	Identifier	namelen		908484	0					
ANR	915326	MemberAccess	verbs [ i ] . len		908484	1					
ANR	915327	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915328	Identifier	verbs		908484	0					
ANR	915329	Identifier	i		908484	1					
ANR	915330	Identifier	len		908484	1					
ANR	915331	EqualityExpression	"STRNCMP_UC_C8 ( name , vn , namelen ) == 0"		908484	1		==			
ANR	915332	CallExpression	"STRNCMP_UC_C8 ( name , vn , namelen )"		908484	0					
ANR	915333	Callee	STRNCMP_UC_C8		908484	0					
ANR	915334	Identifier	STRNCMP_UC_C8		908484	0					
ANR	915335	ArgumentList	name		908484	1					
ANR	915336	Argument	name		908484	0					
ANR	915337	Identifier	name		908484	0					
ANR	915338	Argument	vn		908484	1					
ANR	915339	Identifier	vn		908484	0					
ANR	915340	Argument	namelen		908484	2					
ANR	915341	Identifier	namelen		908484	0					
ANR	915342	PrimaryExpression	0		908484	1					
ANR	915343	CompoundStatement		2134:10:75447:75458	908484	1					
ANR	915344	IdentifierDeclStatement	int setverb ;	6591:10:215323:215334	908484	0	True				
ANR	915345	IdentifierDecl	setverb		908484	0					
ANR	915346	IdentifierDeclType	int		908484	0					
ANR	915347	Identifier	setverb		908484	1					
ANR	915348	IfStatement	if ( verbs [ i ] . op == OP_ACCEPT )		908484	1					
ANR	915349	Condition	verbs [ i ] . op == OP_ACCEPT	6596:14:215468:215491	908484	0	True				
ANR	915350	EqualityExpression	verbs [ i ] . op == OP_ACCEPT		908484	0		==			
ANR	915351	MemberAccess	verbs [ i ] . op		908484	0					
ANR	915352	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915353	Identifier	verbs		908484	0					
ANR	915354	Identifier	i		908484	1					
ANR	915355	Identifier	op		908484	1					
ANR	915356	Identifier	OP_ACCEPT		908484	1					
ANR	915357	CompoundStatement		2141:12:75644:75660	908484	1					
ANR	915358	IdentifierDeclStatement	open_capitem * oc ;	6598:12:215520:215536	908484	0	True				
ANR	915359	IdentifierDecl	* oc		908484	0					
ANR	915360	IdentifierDeclType	open_capitem *		908484	0					
ANR	915361	Identifier	oc		908484	1					
ANR	915362	IfStatement	if ( arglen != 0 )		908484	1					
ANR	915363	Condition	arglen != 0	6599:16:215554:215564	908484	0	True				
ANR	915364	EqualityExpression	arglen != 0		908484	0		!=			
ANR	915365	Identifier	arglen		908484	0					
ANR	915366	PrimaryExpression	0		908484	1					
ANR	915367	CompoundStatement		2143:14:75705:75705	908484	1					
ANR	915368	ExpressionStatement	* errorcodeptr = ERR59	6601:14:215597:215618	908484	0	True				
ANR	915369	AssignmentExpression	* errorcodeptr = ERR59		908484	0		=			
ANR	915370	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915371	UnaryOperator	*		908484	0					
ANR	915372	Identifier	errorcodeptr		908484	1					
ANR	915373	Identifier	ERR59		908484	1					
ANR	915374	GotoStatement	goto FAILED ;	6602:14:215634:215645	908484	1	True				
ANR	915375	Identifier	FAILED		908484	0					
ANR	915376	ExpressionStatement	cd -> had_accept = TRUE	6604:12:215675:215696	908484	2	True				
ANR	915377	AssignmentExpression	cd -> had_accept = TRUE		908484	0		=			
ANR	915378	PtrMemberAccess	cd -> had_accept		908484	0					
ANR	915379	Identifier	cd		908484	0					
ANR	915380	Identifier	had_accept		908484	1					
ANR	915381	Identifier	TRUE		908484	1					
ANR	915382	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		908484	3					
ANR	915383	ForInit	oc = cd -> open_caps ;	6605:17:215715:215733	908484	0	True				
ANR	915384	AssignmentExpression	oc = cd -> open_caps		908484	0		=			
ANR	915385	Identifier	oc		908484	0					
ANR	915386	PtrMemberAccess	cd -> open_caps		908484	1					
ANR	915387	Identifier	cd		908484	0					
ANR	915388	Identifier	open_caps		908484	1					
ANR	915389	Condition	oc != NULL	6605:37:215735:215744	908484	1	True				
ANR	915390	EqualityExpression	oc != NULL		908484	0		!=			
ANR	915391	Identifier	oc		908484	0					
ANR	915392	Identifier	NULL		908484	1					
ANR	915393	AssignmentExpression	oc = oc -> next	6605:49:215747:215759	908484	2	True	=			
ANR	915394	Identifier	oc		908484	0					
ANR	915395	PtrMemberAccess	oc -> next		908484	1					
ANR	915396	Identifier	oc		908484	0					
ANR	915397	Identifier	next		908484	1					
ANR	915398	CompoundStatement		2149:14:75900:75900	908484	3					
ANR	915399	ExpressionStatement	* code ++ = OP_CLOSE	6607:14:215792:215810	908484	0	True				
ANR	915400	AssignmentExpression	* code ++ = OP_CLOSE		908484	0		=			
ANR	915401	UnaryOperationExpression	* code ++		908484	0					
ANR	915402	UnaryOperator	*		908484	0					
ANR	915403	PostIncDecOperationExpression	code ++		908484	1					
ANR	915404	Identifier	code		908484	0					
ANR	915405	IncDec	++		908484	1					
ANR	915406	Identifier	OP_CLOSE		908484	1					
ANR	915407	ExpressionStatement	"PUT2INC ( code , 0 , oc -> number )"	6608:14:215826:215854	908484	1	True				
ANR	915408	CallExpression	"PUT2INC ( code , 0 , oc -> number )"		908484	0					
ANR	915409	Callee	PUT2INC		908484	0					
ANR	915410	Identifier	PUT2INC		908484	0					
ANR	915411	ArgumentList	code		908484	1					
ANR	915412	Argument	code		908484	0					
ANR	915413	Identifier	code		908484	0					
ANR	915414	Argument	0		908484	1					
ANR	915415	PrimaryExpression	0		908484	0					
ANR	915416	Argument	oc -> number		908484	2					
ANR	915417	PtrMemberAccess	oc -> number		908484	0					
ANR	915418	Identifier	oc		908484	0					
ANR	915419	Identifier	number		908484	1					
ANR	915420	ExpressionStatement	setverb = * code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT	6610:12:215884:215970	908484	4	True				
ANR	915421	AssignmentExpression	setverb = * code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		908484	0		=			
ANR	915422	Identifier	setverb		908484	0					
ANR	915423	AssignmentExpression	* code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		908484	1		=			
ANR	915424	UnaryOperationExpression	* code ++		908484	0					
ANR	915425	UnaryOperator	*		908484	0					
ANR	915426	PostIncDecOperationExpression	code ++		908484	1					
ANR	915427	Identifier	code		908484	0					
ANR	915428	IncDec	++		908484	1					
ANR	915429	ConditionalExpression	( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		908484	1					
ANR	915430	Condition	cd -> assert_depth > 0		908484	0					
ANR	915431	RelationalExpression	cd -> assert_depth > 0		908484	0		>			
ANR	915432	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	915433	Identifier	cd		908484	0					
ANR	915434	Identifier	assert_depth		908484	1					
ANR	915435	PrimaryExpression	0		908484	1					
ANR	915436	Identifier	OP_ASSERT_ACCEPT		908484	1					
ANR	915437	Identifier	OP_ACCEPT		908484	2					
ANR	915438	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	5					
ANR	915439	Condition	firstcharflags == REQ_UNSET	6614:16:216042:216068	908484	0	True				
ANR	915440	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	915441	Identifier	firstcharflags		908484	0					
ANR	915442	Identifier	REQ_UNSET		908484	1					
ANR	915443	ExpressionStatement	firstcharflags = REQ_NONE	6614:45:216071:216096	908484	1	True				
ANR	915444	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	915445	Identifier	firstcharflags		908484	0					
ANR	915446	Identifier	REQ_NONE		908484	1					
ANR	915447	ElseStatement	else		908484	0					
ANR	915448	IfStatement	if ( arglen == 0 )		908484	0					
ANR	915449	Condition	arglen == 0	6619:19:216193:216203	908484	0	True				
ANR	915450	EqualityExpression	arglen == 0		908484	0		==			
ANR	915451	Identifier	arglen		908484	0					
ANR	915452	PrimaryExpression	0		908484	1					
ANR	915453	CompoundStatement		2163:12:76342:76342	908484	1					
ANR	915454	IfStatement	if ( verbs [ i ] . op < 0 )		908484	0					
ANR	915455	Condition	verbs [ i ] . op < 0	6621:16:216236:216250	908484	0	True				
ANR	915456	RelationalExpression	verbs [ i ] . op < 0		908484	0		<			
ANR	915457	MemberAccess	verbs [ i ] . op		908484	0					
ANR	915458	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915459	Identifier	verbs		908484	0					
ANR	915460	Identifier	i		908484	1					
ANR	915461	Identifier	op		908484	1					
ANR	915462	PrimaryExpression	0		908484	1					
ANR	915463	CompoundStatement		2165:14:76421:76421	908484	1					
ANR	915464	ExpressionStatement	* errorcodeptr = ERR66	6623:14:216313:216334	908484	0	True				
ANR	915465	AssignmentExpression	* errorcodeptr = ERR66		908484	0		=			
ANR	915466	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915467	UnaryOperator	*		908484	0					
ANR	915468	Identifier	errorcodeptr		908484	1					
ANR	915469	Identifier	ERR66		908484	1					
ANR	915470	GotoStatement	goto FAILED ;	6624:14:216350:216361	908484	1	True				
ANR	915471	Identifier	FAILED		908484	0					
ANR	915472	ExpressionStatement	setverb = * code ++ = verbs [ i ] . op	6626:12:216391:216422	908484	1	True				
ANR	915473	AssignmentExpression	setverb = * code ++ = verbs [ i ] . op		908484	0		=			
ANR	915474	Identifier	setverb		908484	0					
ANR	915475	AssignmentExpression	* code ++ = verbs [ i ] . op		908484	1		=			
ANR	915476	UnaryOperationExpression	* code ++		908484	0					
ANR	915477	UnaryOperator	*		908484	0					
ANR	915478	PostIncDecOperationExpression	code ++		908484	1					
ANR	915479	Identifier	code		908484	0					
ANR	915480	IncDec	++		908484	1					
ANR	915481	MemberAccess	verbs [ i ] . op		908484	1					
ANR	915482	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915483	Identifier	verbs		908484	0					
ANR	915484	Identifier	i		908484	1					
ANR	915485	Identifier	op		908484	1					
ANR	915486	ElseStatement	else		908484	0					
ANR	915487	CompoundStatement		2173:12:76590:76590	908484	0					
ANR	915488	IfStatement	if ( verbs [ i ] . op_arg < 0 )		908484	0					
ANR	915489	Condition	verbs [ i ] . op_arg < 0	6631:16:216484:216502	908484	0	True				
ANR	915490	RelationalExpression	verbs [ i ] . op_arg < 0		908484	0		<			
ANR	915491	MemberAccess	verbs [ i ] . op_arg		908484	0					
ANR	915492	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915493	Identifier	verbs		908484	0					
ANR	915494	Identifier	i		908484	1					
ANR	915495	Identifier	op_arg		908484	1					
ANR	915496	PrimaryExpression	0		908484	1					
ANR	915497	CompoundStatement		2175:14:76673:76673	908484	1					
ANR	915498	ExpressionStatement	* errorcodeptr = ERR59	6633:14:216565:216586	908484	0	True				
ANR	915499	AssignmentExpression	* errorcodeptr = ERR59		908484	0		=			
ANR	915500	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915501	UnaryOperator	*		908484	0					
ANR	915502	Identifier	errorcodeptr		908484	1					
ANR	915503	Identifier	ERR59		908484	1					
ANR	915504	GotoStatement	goto FAILED ;	6634:14:216602:216613	908484	1	True				
ANR	915505	Identifier	FAILED		908484	0					
ANR	915506	ExpressionStatement	setverb = * code ++ = verbs [ i ] . op_arg	6636:12:216643:216678	908484	1	True				
ANR	915507	AssignmentExpression	setverb = * code ++ = verbs [ i ] . op_arg		908484	0		=			
ANR	915508	Identifier	setverb		908484	0					
ANR	915509	AssignmentExpression	* code ++ = verbs [ i ] . op_arg		908484	1		=			
ANR	915510	UnaryOperationExpression	* code ++		908484	0					
ANR	915511	UnaryOperator	*		908484	0					
ANR	915512	PostIncDecOperationExpression	code ++		908484	1					
ANR	915513	Identifier	code		908484	0					
ANR	915514	IncDec	++		908484	1					
ANR	915515	MemberAccess	verbs [ i ] . op_arg		908484	1					
ANR	915516	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915517	Identifier	verbs		908484	0					
ANR	915518	Identifier	i		908484	1					
ANR	915519	Identifier	op_arg		908484	1					
ANR	915520	IfStatement	if ( lengthptr != NULL )		908484	2					
ANR	915521	Condition	lengthptr != NULL	6637:16:216696:216712	908484	0	True				
ANR	915522	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	915523	Identifier	lengthptr		908484	0					
ANR	915524	Identifier	NULL		908484	1					
ANR	915525	CompoundStatement		2181:14:76895:76895	908484	1					
ANR	915526	ExpressionStatement	* lengthptr += arglen	6639:14:216844:216864	908484	0	True				
ANR	915527	AssignmentExpression	* lengthptr += arglen		908484	0		+=			
ANR	915528	UnaryOperationExpression	* lengthptr		908484	0					
ANR	915529	UnaryOperator	*		908484	0					
ANR	915530	Identifier	lengthptr		908484	1					
ANR	915531	Identifier	arglen		908484	1					
ANR	915532	ExpressionStatement	* code ++ = 0	6640:14:216898:216909	908484	1	True				
ANR	915533	AssignmentExpression	* code ++ = 0		908484	0		=			
ANR	915534	UnaryOperationExpression	* code ++		908484	0					
ANR	915535	UnaryOperator	*		908484	0					
ANR	915536	PostIncDecOperationExpression	code ++		908484	1					
ANR	915537	Identifier	code		908484	0					
ANR	915538	IncDec	++		908484	1					
ANR	915539	PrimaryExpression	0		908484	1					
ANR	915540	ElseStatement	else		908484	0					
ANR	915541	CompoundStatement		2186:14:77082:77082	908484	0					
ANR	915542	ExpressionStatement	* code ++ = arglen	6644:14:216974:216990	908484	0	True				
ANR	915543	AssignmentExpression	* code ++ = arglen		908484	0		=			
ANR	915544	UnaryOperationExpression	* code ++		908484	0					
ANR	915545	UnaryOperator	*		908484	0					
ANR	915546	PostIncDecOperationExpression	code ++		908484	1					
ANR	915547	Identifier	code		908484	0					
ANR	915548	IncDec	++		908484	1					
ANR	915549	Identifier	arglen		908484	1					
ANR	915550	ExpressionStatement	"memcpy ( code , arg , IN_UCHARS ( arglen ) )"	6645:14:217006:217042	908484	1	True				
ANR	915551	CallExpression	"memcpy ( code , arg , IN_UCHARS ( arglen ) )"		908484	0					
ANR	915552	Callee	memcpy		908484	0					
ANR	915553	Identifier	memcpy		908484	0					
ANR	915554	ArgumentList	code		908484	1					
ANR	915555	Argument	code		908484	0					
ANR	915556	Identifier	code		908484	0					
ANR	915557	Argument	arg		908484	1					
ANR	915558	Identifier	arg		908484	0					
ANR	915559	Argument	IN_UCHARS ( arglen )		908484	2					
ANR	915560	CallExpression	IN_UCHARS ( arglen )		908484	0					
ANR	915561	Callee	IN_UCHARS		908484	0					
ANR	915562	Identifier	IN_UCHARS		908484	0					
ANR	915563	ArgumentList	arglen		908484	1					
ANR	915564	Argument	arglen		908484	0					
ANR	915565	Identifier	arglen		908484	0					
ANR	915566	ExpressionStatement	code += arglen	6646:14:217058:217072	908484	2	True				
ANR	915567	AssignmentExpression	code += arglen		908484	0		+=			
ANR	915568	Identifier	code		908484	0					
ANR	915569	Identifier	arglen		908484	1					
ANR	915570	ExpressionStatement	* code ++ = 0	6648:12:217102:217113	908484	3	True				
ANR	915571	AssignmentExpression	* code ++ = 0		908484	0		=			
ANR	915572	UnaryOperationExpression	* code ++		908484	0					
ANR	915573	UnaryOperator	*		908484	0					
ANR	915574	PostIncDecOperationExpression	code ++		908484	1					
ANR	915575	Identifier	code		908484	0					
ANR	915576	IncDec	++		908484	1					
ANR	915577	PrimaryExpression	0		908484	1					
ANR	915578	SwitchStatement	switch ( setverb )		908484	2					
ANR	915579	Condition	setverb	6651:18:217148:217154	908484	0	True				
ANR	915580	Identifier	setverb		908484	0					
ANR	915581	CompoundStatement		2195:12:77293:77293	908484	1					
ANR	915582	Label	case OP_THEN :	6653:12:217183:217195	908484	0	True				
ANR	915583	Identifier	OP_THEN		908484	0					
ANR	915584	Label	case OP_THEN_ARG :	6654:12:217209:217225	908484	1	True				
ANR	915585	Identifier	OP_THEN_ARG		908484	0					
ANR	915586	ExpressionStatement	cd -> external_flags |= PCRE_HASTHEN	6655:12:217239:217273	908484	2	True				
ANR	915587	AssignmentExpression	cd -> external_flags |= PCRE_HASTHEN		908484	0		|=			
ANR	915588	PtrMemberAccess	cd -> external_flags		908484	0					
ANR	915589	Identifier	cd		908484	0					
ANR	915590	Identifier	external_flags		908484	1					
ANR	915591	Identifier	PCRE_HASTHEN		908484	1					
ANR	915592	BreakStatement	break ;	6656:12:217287:217292	908484	3	True				
ANR	915593	Label	case OP_PRUNE :	6658:12:217307:217320	908484	4	True				
ANR	915594	Identifier	OP_PRUNE		908484	0					
ANR	915595	Label	case OP_PRUNE_ARG :	6659:12:217334:217351	908484	5	True				
ANR	915596	Identifier	OP_PRUNE_ARG		908484	0					
ANR	915597	Label	case OP_SKIP :	6660:12:217365:217377	908484	6	True				
ANR	915598	Identifier	OP_SKIP		908484	0					
ANR	915599	Label	case OP_SKIP_ARG :	6661:12:217391:217407	908484	7	True				
ANR	915600	Identifier	OP_SKIP_ARG		908484	0					
ANR	915601	ExpressionStatement	cd -> had_pruneorskip = TRUE	6662:12:217421:217447	908484	8	True				
ANR	915602	AssignmentExpression	cd -> had_pruneorskip = TRUE		908484	0		=			
ANR	915603	PtrMemberAccess	cd -> had_pruneorskip		908484	0					
ANR	915604	Identifier	cd		908484	0					
ANR	915605	Identifier	had_pruneorskip		908484	1					
ANR	915606	Identifier	TRUE		908484	1					
ANR	915607	BreakStatement	break ;	6663:12:217461:217466	908484	9	True				
ANR	915608	BreakStatement	break ;	6666:10:217493:217498	908484	3	True				
ANR	915609	ExpressionStatement	vn += verbs [ i ] . len + 1	6669:8:217550:217572	908484	1	True				
ANR	915610	AssignmentExpression	vn += verbs [ i ] . len + 1		908484	0		+=			
ANR	915611	Identifier	vn		908484	0					
ANR	915612	AdditiveExpression	verbs [ i ] . len + 1		908484	1		+			
ANR	915613	MemberAccess	verbs [ i ] . len		908484	0					
ANR	915614	ArrayIndexing	verbs [ i ]		908484	0					
ANR	915615	Identifier	verbs		908484	0					
ANR	915616	Identifier	i		908484	1					
ANR	915617	Identifier	len		908484	1					
ANR	915618	PrimaryExpression	1		908484	1					
ANR	915619	IfStatement	if ( i < verbcount )		908484	12					
ANR	915620	Condition	i < verbcount	6672:10:217595:217607	908484	0	True				
ANR	915621	RelationalExpression	i < verbcount		908484	0		<			
ANR	915622	Identifier	i		908484	0					
ANR	915623	Identifier	verbcount		908484	1					
ANR	915624	ContinueStatement	continue ;	6672:25:217610:217618	908484	1	True				
ANR	915625	ExpressionStatement	* errorcodeptr = ERR60	6673:6:217663:217684	908484	13	True				
ANR	915626	AssignmentExpression	* errorcodeptr = ERR60		908484	0		=			
ANR	915627	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	915628	UnaryOperator	*		908484	0					
ANR	915629	Identifier	errorcodeptr		908484	1					
ANR	915630	Identifier	ERR60		908484	1					
ANR	915631	GotoStatement	goto FAILED ;	6674:6:217727:217738	908484	14	True				
ANR	915632	Identifier	FAILED		908484	0					
ANR	915633	ExpressionStatement	newoptions = options	6679:4:217798:217818	908484	137	True				
ANR	915634	AssignmentExpression	newoptions = options		908484	0		=			
ANR	915635	Identifier	newoptions		908484	0					
ANR	915636	Identifier	options		908484	1					
ANR	915637	ExpressionStatement	skipbytes = 0	6680:4:217824:217837	908484	138	True				
ANR	915638	AssignmentExpression	skipbytes = 0		908484	0		=			
ANR	915639	Identifier	skipbytes		908484	0					
ANR	915640	PrimaryExpression	0		908484	1					
ANR	915641	ExpressionStatement	bravalue = OP_CBRA	6681:4:217843:217861	908484	139	True				
ANR	915642	AssignmentExpression	bravalue = OP_CBRA		908484	0		=			
ANR	915643	Identifier	bravalue		908484	0					
ANR	915644	Identifier	OP_CBRA		908484	1					
ANR	915645	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	6682:4:217867:217914	908484	140	True				
ANR	915646	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	915647	Identifier	item_hwm_offset		908484	0					
ANR	915648	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	915649	PtrMemberAccess	cd -> hwm		908484	0					
ANR	915650	Identifier	cd		908484	0					
ANR	915651	Identifier	hwm		908484	1					
ANR	915652	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	915653	Identifier	cd		908484	0					
ANR	915654	Identifier	start_workspace		908484	1					
ANR	915655	ExpressionStatement	reset_bracount = FALSE	6683:4:217920:217942	908484	141	True				
ANR	915656	AssignmentExpression	reset_bracount = FALSE		908484	0		=			
ANR	915657	Identifier	reset_bracount		908484	0					
ANR	915658	Identifier	FALSE		908484	1					
ANR	915659	IfStatement	if ( * ptr == CHAR_QUESTION_MARK )		908484	142					
ANR	915660	Condition	* ptr == CHAR_QUESTION_MARK	6688:8:218107:218132	908484	0	True				
ANR	915661	EqualityExpression	* ptr == CHAR_QUESTION_MARK		908484	0		==			
ANR	915662	UnaryOperationExpression	* ptr		908484	0					
ANR	915663	UnaryOperator	*		908484	0					
ANR	915664	Identifier	ptr		908484	1					
ANR	915665	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	915666	CompoundStatement		2236:6:78356:78372	908484	1					
ANR	915667	IdentifierDeclStatement	"int i , set , unset , namelen ;"	6690:6:218149:218175	908484	0	True				
ANR	915668	IdentifierDecl	i		908484	0					
ANR	915669	IdentifierDeclType	int		908484	0					
ANR	915670	Identifier	i		908484	1					
ANR	915671	IdentifierDecl	set		908484	1					
ANR	915672	IdentifierDeclType	int		908484	0					
ANR	915673	Identifier	set		908484	1					
ANR	915674	IdentifierDecl	unset		908484	2					
ANR	915675	IdentifierDeclType	int		908484	0					
ANR	915676	Identifier	unset		908484	1					
ANR	915677	IdentifierDecl	namelen		908484	3					
ANR	915678	IdentifierDeclType	int		908484	0					
ANR	915679	Identifier	namelen		908484	1					
ANR	915680	IdentifierDeclStatement	int * optset ;	6691:6:218183:218194	908484	1	True				
ANR	915681	IdentifierDecl	* optset		908484	0					
ANR	915682	IdentifierDeclType	int *		908484	0					
ANR	915683	Identifier	optset		908484	1					
ANR	915684	IdentifierDeclStatement	const pcre_uchar * name ;	6692:6:218202:218224	908484	2	True				
ANR	915685	IdentifierDecl	* name		908484	0					
ANR	915686	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	915687	Identifier	name		908484	1					
ANR	915688	IdentifierDeclStatement	pcre_uchar * slot ;	6693:6:218232:218248	908484	3	True				
ANR	915689	IdentifierDecl	* slot		908484	0					
ANR	915690	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	915691	Identifier	slot		908484	1					
ANR	915692	SwitchStatement	switch ( * ( ++ ptr ) )		908484	4					
ANR	915693	Condition	* ( ++ ptr )	6695:14:218265:218272	908484	0	True				
ANR	915694	UnaryOperationExpression	* ( ++ ptr )		908484	0					
ANR	915695	UnaryOperator	*		908484	0					
ANR	915696	UnaryExpression	++ ptr		908484	1					
ANR	915697	IncDec	++		908484	0					
ANR	915698	Identifier	ptr		908484	1					
ANR	915699	CompoundStatement		2239:8:78407:78407	908484	1					
ANR	915700	Label	case CHAR_VERTICAL_LINE :	6698:8:218368:218391	908484	0	True				
ANR	915701	Identifier	CHAR_VERTICAL_LINE		908484	0					
ANR	915702	ExpressionStatement	reset_bracount = TRUE	6699:8:218444:218465	908484	1	True				
ANR	915703	AssignmentExpression	reset_bracount = TRUE		908484	0		=			
ANR	915704	Identifier	reset_bracount		908484	0					
ANR	915705	Identifier	TRUE		908484	1					
ANR	915706	ExpressionStatement	cd -> dupgroups = TRUE	6700:8:218475:218495	908484	2	True				
ANR	915707	AssignmentExpression	cd -> dupgroups = TRUE		908484	0		=			
ANR	915708	PtrMemberAccess	cd -> dupgroups		908484	0					
ANR	915709	Identifier	cd		908484	0					
ANR	915710	Identifier	dupgroups		908484	1					
ANR	915711	Identifier	TRUE		908484	1					
ANR	915712	Label	case CHAR_COLON :	6704:8:218641:218656	908484	3	True				
ANR	915713	Identifier	CHAR_COLON		908484	0					
ANR	915714	ExpressionStatement	bravalue = OP_BRA	6705:8:218703:218720	908484	4	True				
ANR	915715	AssignmentExpression	bravalue = OP_BRA		908484	0		=			
ANR	915716	Identifier	bravalue		908484	0					
ANR	915717	Identifier	OP_BRA		908484	1					
ANR	915718	ExpressionStatement	ptr ++	6706:8:218730:218735	908484	5	True				
ANR	915719	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915720	Identifier	ptr		908484	0					
ANR	915721	IncDec	++		908484	1					
ANR	915722	BreakStatement	break ;	6707:8:218745:218750	908484	6	True				
ANR	915723	Label	case CHAR_LEFT_PARENTHESIS :	6711:8:218837:218863	908484	7	True				
ANR	915724	Identifier	CHAR_LEFT_PARENTHESIS		908484	0					
ANR	915725	ExpressionStatement	bravalue = OP_COND	6712:8:218873:218891	908484	8	True				
ANR	915726	AssignmentExpression	bravalue = OP_COND		908484	0		=			
ANR	915727	Identifier	bravalue		908484	0					
ANR	915728	Identifier	OP_COND		908484	1					
ANR	915729	ExpressionStatement	tempptr = ptr	6713:8:218931:218944	908484	9	True				
ANR	915730	AssignmentExpression	tempptr = ptr		908484	0		=			
ANR	915731	Identifier	tempptr		908484	0					
ANR	915732	Identifier	ptr		908484	1					
ANR	915733	IfStatement	if ( ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C )		908484	10					
ANR	915734	Condition	ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C	6732:12:219897:219944	908484	0	True				
ANR	915735	AndExpression	ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C		908484	0		&&			
ANR	915736	EqualityExpression	ptr [ 1 ] == CHAR_QUESTION_MARK		908484	0		==			
ANR	915737	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	915738	Identifier	ptr		908484	0					
ANR	915739	PrimaryExpression	1		908484	1					
ANR	915740	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	915741	EqualityExpression	ptr [ 2 ] == CHAR_C		908484	1		==			
ANR	915742	ArrayIndexing	ptr [ 2 ]		908484	0					
ANR	915743	Identifier	ptr		908484	0					
ANR	915744	PrimaryExpression	2		908484	1					
ANR	915745	Identifier	CHAR_C		908484	1					
ANR	915746	CompoundStatement		2276:10:80081:80081	908484	1					
ANR	915747	ForStatement	for ( i = 3 ; ; i ++ )		908484	0					
ANR	915748	ForInit	i = 3 ;	6734:15:219974:219979	908484	0	True				
ANR	915749	AssignmentExpression	i = 3		908484	0		=			
ANR	915750	Identifier	i		908484	0					
ANR	915751	PrimaryExpression	3		908484	1					
ANR	915752	PostIncDecOperationExpression	i ++	6734:23:219982:219984	908484	1	True				
ANR	915753	Identifier	i		908484	0					
ANR	915754	IncDec	++		908484	1					
ANR	915755	IfStatement	if ( ! IS_DIGIT ( ptr [ i ] ) )		908484	2					
ANR	915756	Condition	! IS_DIGIT ( ptr [ i ] )	6734:32:219991:220007	908484	0	True				
ANR	915757	UnaryOperationExpression	! IS_DIGIT ( ptr [ i ] )		908484	0					
ANR	915758	UnaryOperator	!		908484	0					
ANR	915759	CallExpression	IS_DIGIT ( ptr [ i ] )		908484	1					
ANR	915760	Callee	IS_DIGIT		908484	0					
ANR	915761	Identifier	IS_DIGIT		908484	0					
ANR	915762	ArgumentList	ptr [ i ]		908484	1					
ANR	915763	Argument	ptr [ i ]		908484	0					
ANR	915764	ArrayIndexing	ptr [ i ]		908484	0					
ANR	915765	Identifier	ptr		908484	0					
ANR	915766	Identifier	i		908484	1					
ANR	915767	BreakStatement	break ;	6734:51:220010:220015	908484	1	True				
ANR	915768	IfStatement	if ( ptr [ i ] == CHAR_RIGHT_PARENTHESIS )		908484	1					
ANR	915769	Condition	ptr [ i ] == CHAR_RIGHT_PARENTHESIS	6735:14:220031:220062	908484	0	True				
ANR	915770	EqualityExpression	ptr [ i ] == CHAR_RIGHT_PARENTHESIS		908484	0		==			
ANR	915771	ArrayIndexing	ptr [ i ]		908484	0					
ANR	915772	Identifier	ptr		908484	0					
ANR	915773	Identifier	i		908484	1					
ANR	915774	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	915775	ExpressionStatement	tempptr += i + 1	6736:12:220077:220093	908484	1	True				
ANR	915776	AssignmentExpression	tempptr += i + 1		908484	0		+=			
ANR	915777	Identifier	tempptr		908484	0					
ANR	915778	AdditiveExpression	i + 1		908484	1		+			
ANR	915779	Identifier	i		908484	0					
ANR	915780	PrimaryExpression	1		908484	1					
ANR	915781	IfStatement	if ( tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) ) )		908484	11					
ANR	915782	Condition	tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) )	6743:12:220323:220628	908484	0	True				
ANR	915783	AndExpression	tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) )		908484	0		&&			
ANR	915784	EqualityExpression	tempptr [ 1 ] == CHAR_QUESTION_MARK		908484	0		==			
ANR	915785	ArrayIndexing	tempptr [ 1 ]		908484	0					
ANR	915786	Identifier	tempptr		908484	0					
ANR	915787	PrimaryExpression	1		908484	1					
ANR	915788	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	915789	OrExpression	tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) )		908484	1		||			
ANR	915790	EqualityExpression	tempptr [ 2 ] == CHAR_EQUALS_SIGN		908484	0		==			
ANR	915791	ArrayIndexing	tempptr [ 2 ]		908484	0					
ANR	915792	Identifier	tempptr		908484	0					
ANR	915793	PrimaryExpression	2		908484	1					
ANR	915794	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	915795	OrExpression	tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) )		908484	1		||			
ANR	915796	EqualityExpression	tempptr [ 2 ] == CHAR_EXCLAMATION_MARK		908484	0		==			
ANR	915797	ArrayIndexing	tempptr [ 2 ]		908484	0					
ANR	915798	Identifier	tempptr		908484	0					
ANR	915799	PrimaryExpression	2		908484	1					
ANR	915800	Identifier	CHAR_EXCLAMATION_MARK		908484	1					
ANR	915801	AndExpression	tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK )		908484	1		&&			
ANR	915802	EqualityExpression	tempptr [ 2 ] == CHAR_LESS_THAN_SIGN		908484	0		==			
ANR	915803	ArrayIndexing	tempptr [ 2 ]		908484	0					
ANR	915804	Identifier	tempptr		908484	0					
ANR	915805	PrimaryExpression	2		908484	1					
ANR	915806	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	915807	OrExpression	tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK		908484	1		||			
ANR	915808	EqualityExpression	tempptr [ 3 ] == CHAR_EQUALS_SIGN		908484	0		==			
ANR	915809	ArrayIndexing	tempptr [ 3 ]		908484	0					
ANR	915810	Identifier	tempptr		908484	0					
ANR	915811	PrimaryExpression	3		908484	1					
ANR	915812	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	915813	EqualityExpression	tempptr [ 3 ] == CHAR_EXCLAMATION_MARK		908484	1		==			
ANR	915814	ArrayIndexing	tempptr [ 3 ]		908484	0					
ANR	915815	Identifier	tempptr		908484	0					
ANR	915816	PrimaryExpression	3		908484	1					
ANR	915817	Identifier	CHAR_EXCLAMATION_MARK		908484	1					
ANR	915818	CompoundStatement		2292:10:80765:80765	908484	1					
ANR	915819	ExpressionStatement	cd -> iscondassert = TRUE	6750:10:220653:220676	908484	0	True				
ANR	915820	AssignmentExpression	cd -> iscondassert = TRUE		908484	0		=			
ANR	915821	PtrMemberAccess	cd -> iscondassert		908484	0					
ANR	915822	Identifier	cd		908484	0					
ANR	915823	Identifier	iscondassert		908484	1					
ANR	915824	Identifier	TRUE		908484	1					
ANR	915825	BreakStatement	break ;	6751:10:220688:220693	908484	1	True				
ANR	915826	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_CREF	6757:8:220872:220899	908484	12	True				
ANR	915827	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_CREF		908484	0		=			
ANR	915828	ArrayIndexing	code [ 1 + LINK_SIZE ]		908484	0					
ANR	915829	Identifier	code		908484	0					
ANR	915830	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	915831	PrimaryExpression	1		908484	0					
ANR	915832	Identifier	LINK_SIZE		908484	1					
ANR	915833	Identifier	OP_CREF		908484	1					
ANR	915834	ExpressionStatement	skipbytes = 1 + IMM2_SIZE	6758:8:220909:220932	908484	13	True				
ANR	915835	AssignmentExpression	skipbytes = 1 + IMM2_SIZE		908484	0		=			
ANR	915836	Identifier	skipbytes		908484	0					
ANR	915837	AdditiveExpression	1 + IMM2_SIZE		908484	1		+			
ANR	915838	PrimaryExpression	1		908484	0					
ANR	915839	Identifier	IMM2_SIZE		908484	1					
ANR	915840	ExpressionStatement	refsign = - 1	6759:8:220942:220954	908484	14	True				
ANR	915841	AssignmentExpression	refsign = - 1		908484	0		=			
ANR	915842	Identifier	refsign		908484	0					
ANR	915843	UnaryOperationExpression	- 1		908484	1					
ANR	915844	UnaryOperator	-		908484	0					
ANR	915845	PrimaryExpression	1		908484	1					
ANR	915846	ExpressionStatement	namelen = - 1	6760:8:220990:221002	908484	15	True				
ANR	915847	AssignmentExpression	namelen = - 1		908484	0		=			
ANR	915848	Identifier	namelen		908484	0					
ANR	915849	UnaryOperationExpression	- 1		908484	1					
ANR	915850	UnaryOperator	-		908484	0					
ANR	915851	PrimaryExpression	1		908484	1					
ANR	915852	ExpressionStatement	name = NULL	6761:8:221063:221074	908484	16	True				
ANR	915853	AssignmentExpression	name = NULL		908484	0		=			
ANR	915854	Identifier	name		908484	0					
ANR	915855	Identifier	NULL		908484	1					
ANR	915856	ExpressionStatement	recno = 0	6762:8:221123:221132	908484	17	True				
ANR	915857	AssignmentExpression	recno = 0		908484	0		=			
ANR	915858	Identifier	recno		908484	0					
ANR	915859	PrimaryExpression	0		908484	1					
ANR	915860	ExpressionStatement	ptr ++	6766:8:221248:221253	908484	18	True				
ANR	915861	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915862	Identifier	ptr		908484	0					
ANR	915863	IncDec	++		908484	1					
ANR	915864	IfStatement	if ( * ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND )		908484	19					
ANR	915865	Condition	* ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND	6767:12:221267:221308	908484	0	True				
ANR	915866	AndExpression	* ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND		908484	0		&&			
ANR	915867	EqualityExpression	* ptr == CHAR_R		908484	0		==			
ANR	915868	UnaryOperationExpression	* ptr		908484	0					
ANR	915869	UnaryOperator	*		908484	0					
ANR	915870	Identifier	ptr		908484	1					
ANR	915871	Identifier	CHAR_R		908484	1					
ANR	915872	EqualityExpression	ptr [ 1 ] == CHAR_AMPERSAND		908484	1		==			
ANR	915873	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	915874	Identifier	ptr		908484	0					
ANR	915875	PrimaryExpression	1		908484	1					
ANR	915876	Identifier	CHAR_AMPERSAND		908484	1					
ANR	915877	CompoundStatement		2311:10:81445:81445	908484	1					
ANR	915878	ExpressionStatement	terminator = - 1	6769:10:221333:221348	908484	0	True				
ANR	915879	AssignmentExpression	terminator = - 1		908484	0		=			
ANR	915880	Identifier	terminator		908484	0					
ANR	915881	UnaryOperationExpression	- 1		908484	1					
ANR	915882	UnaryOperator	-		908484	0					
ANR	915883	PrimaryExpression	1		908484	1					
ANR	915884	ExpressionStatement	ptr += 2	6770:10:221360:221368	908484	1	True				
ANR	915885	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	915886	Identifier	ptr		908484	0					
ANR	915887	PrimaryExpression	2		908484	1					
ANR	915888	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_RREF	6771:10:221380:221407	908484	2	True				
ANR	915889	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_RREF		908484	0		=			
ANR	915890	ArrayIndexing	code [ 1 + LINK_SIZE ]		908484	0					
ANR	915891	Identifier	code		908484	0					
ANR	915892	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	915893	PrimaryExpression	1		908484	0					
ANR	915894	Identifier	LINK_SIZE		908484	1					
ANR	915895	Identifier	OP_RREF		908484	1					
ANR	915896	ElseStatement	else		908484	0					
ANR	915897	IfStatement	if ( * ptr == CHAR_LESS_THAN_SIGN )		908484	0					
ANR	915898	Condition	* ptr == CHAR_LESS_THAN_SIGN	6778:17:221700:221726	908484	0	True				
ANR	915899	EqualityExpression	* ptr == CHAR_LESS_THAN_SIGN		908484	0		==			
ANR	915900	UnaryOperationExpression	* ptr		908484	0					
ANR	915901	UnaryOperator	*		908484	0					
ANR	915902	Identifier	ptr		908484	1					
ANR	915903	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	915904	CompoundStatement		2322:10:81863:81863	908484	1					
ANR	915905	ExpressionStatement	terminator = CHAR_GREATER_THAN_SIGN	6780:10:221751:221786	908484	0	True				
ANR	915906	AssignmentExpression	terminator = CHAR_GREATER_THAN_SIGN		908484	0		=			
ANR	915907	Identifier	terminator		908484	0					
ANR	915908	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	915909	ExpressionStatement	ptr ++	6781:10:221798:221803	908484	1	True				
ANR	915910	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915911	Identifier	ptr		908484	0					
ANR	915912	IncDec	++		908484	1					
ANR	915913	ElseStatement	else		908484	0					
ANR	915914	IfStatement	if ( * ptr == CHAR_APOSTROPHE )		908484	0					
ANR	915915	Condition	* ptr == CHAR_APOSTROPHE	6783:17:221834:221856	908484	0	True				
ANR	915916	EqualityExpression	* ptr == CHAR_APOSTROPHE		908484	0		==			
ANR	915917	UnaryOperationExpression	* ptr		908484	0					
ANR	915918	UnaryOperator	*		908484	0					
ANR	915919	Identifier	ptr		908484	1					
ANR	915920	Identifier	CHAR_APOSTROPHE		908484	1					
ANR	915921	CompoundStatement		2327:10:81993:81993	908484	1					
ANR	915922	ExpressionStatement	terminator = CHAR_APOSTROPHE	6785:10:221881:221909	908484	0	True				
ANR	915923	AssignmentExpression	terminator = CHAR_APOSTROPHE		908484	0		=			
ANR	915924	Identifier	terminator		908484	0					
ANR	915925	Identifier	CHAR_APOSTROPHE		908484	1					
ANR	915926	ExpressionStatement	ptr ++	6786:10:221921:221926	908484	1	True				
ANR	915927	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	915928	Identifier	ptr		908484	0					
ANR	915929	IncDec	++		908484	1					
ANR	915930	ElseStatement	else		908484	0					
ANR	915931	CompoundStatement		2332:10:82087:82087	908484	0					
ANR	915932	ExpressionStatement	terminator = CHAR_NULL	6790:10:221975:221997	908484	0	True				
ANR	915933	AssignmentExpression	terminator = CHAR_NULL		908484	0		=			
ANR	915934	Identifier	terminator		908484	0					
ANR	915935	Identifier	CHAR_NULL		908484	1					
ANR	915936	IfStatement	if ( * ptr == CHAR_MINUS || * ptr == CHAR_PLUS )		908484	1					
ANR	915937	Condition	* ptr == CHAR_MINUS || * ptr == CHAR_PLUS	6791:14:222013:222051	908484	0	True				
ANR	915938	OrExpression	* ptr == CHAR_MINUS || * ptr == CHAR_PLUS		908484	0		||			
ANR	915939	EqualityExpression	* ptr == CHAR_MINUS		908484	0		==			
ANR	915940	UnaryOperationExpression	* ptr		908484	0					
ANR	915941	UnaryOperator	*		908484	0					
ANR	915942	Identifier	ptr		908484	1					
ANR	915943	Identifier	CHAR_MINUS		908484	1					
ANR	915944	EqualityExpression	* ptr == CHAR_PLUS		908484	1		==			
ANR	915945	UnaryOperationExpression	* ptr		908484	0					
ANR	915946	UnaryOperator	*		908484	0					
ANR	915947	Identifier	ptr		908484	1					
ANR	915948	Identifier	CHAR_PLUS		908484	1					
ANR	915949	ExpressionStatement	refsign = * ptr ++	6791:55:222054:222070	908484	1	True				
ANR	915950	AssignmentExpression	refsign = * ptr ++		908484	0		=			
ANR	915951	Identifier	refsign		908484	0					
ANR	915952	UnaryOperationExpression	* ptr ++		908484	1					
ANR	915953	UnaryOperator	*		908484	0					
ANR	915954	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	915955	Identifier	ptr		908484	0					
ANR	915956	IncDec	++		908484	1					
ANR	915957	ElseStatement	else		908484	0					
ANR	915958	IfStatement	if ( IS_DIGIT ( * ptr ) )		908484	0					
ANR	915959	Condition	IS_DIGIT ( * ptr )	6792:21:222093:222106	908484	0	True				
ANR	915960	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	915961	Callee	IS_DIGIT		908484	0					
ANR	915962	Identifier	IS_DIGIT		908484	0					
ANR	915963	ArgumentList	* ptr		908484	1					
ANR	915964	Argument	* ptr		908484	0					
ANR	915965	UnaryOperationExpression	* ptr		908484	0					
ANR	915966	UnaryOperator	*		908484	0					
ANR	915967	Identifier	ptr		908484	1					
ANR	915968	ExpressionStatement	refsign = 0	6792:37:222109:222120	908484	1	True				
ANR	915969	AssignmentExpression	refsign = 0		908484	0		=			
ANR	915970	Identifier	refsign		908484	0					
ANR	915971	PrimaryExpression	0		908484	1					
ANR	915972	IfStatement	if ( refsign >= 0 )		908484	20					
ANR	915973	Condition	refsign >= 0	6797:12:222178:222189	908484	0	True				
ANR	915974	RelationalExpression	refsign >= 0		908484	0		>=			
ANR	915975	Identifier	refsign		908484	0					
ANR	915976	PrimaryExpression	0		908484	1					
ANR	915977	CompoundStatement		2341:10:82326:82326	908484	1					
ANR	915978	WhileStatement	while ( IS_DIGIT ( * ptr ) )		908484	0					
ANR	915979	Condition	IS_DIGIT ( * ptr )	6799:17:222221:222234	908484	0	True				
ANR	915980	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	915981	Callee	IS_DIGIT		908484	0					
ANR	915982	Identifier	IS_DIGIT		908484	0					
ANR	915983	ArgumentList	* ptr		908484	1					
ANR	915984	Argument	* ptr		908484	0					
ANR	915985	UnaryOperationExpression	* ptr		908484	0					
ANR	915986	UnaryOperator	*		908484	0					
ANR	915987	Identifier	ptr		908484	1					
ANR	915988	CompoundStatement		2343:12:82373:82373	908484	1					
ANR	915989	IfStatement	if ( recno > INT_MAX / 10 - 1 )		908484	0					
ANR	915990	Condition	recno > INT_MAX / 10 - 1	6801:16:222267:222290	908484	0	True				
ANR	915991	RelationalExpression	recno > INT_MAX / 10 - 1		908484	0		>			
ANR	915992	Identifier	recno		908484	0					
ANR	915993	AdditiveExpression	INT_MAX / 10 - 1		908484	1		-			
ANR	915994	MultiplicativeExpression	INT_MAX / 10		908484	0		/			
ANR	915995	Identifier	INT_MAX		908484	0					
ANR	915996	PrimaryExpression	10		908484	1					
ANR	915997	PrimaryExpression	1		908484	1					
ANR	915998	CompoundStatement		2345:14:82455:82455	908484	1					
ANR	915999	WhileStatement	while ( IS_DIGIT ( * ptr ) )		908484	0					
ANR	916000	Condition	IS_DIGIT ( * ptr )	6803:21:222354:222367	908484	0	True				
ANR	916001	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	916002	Callee	IS_DIGIT		908484	0					
ANR	916003	Identifier	IS_DIGIT		908484	0					
ANR	916004	ArgumentList	* ptr		908484	1					
ANR	916005	Argument	* ptr		908484	0					
ANR	916006	UnaryOperationExpression	* ptr		908484	0					
ANR	916007	UnaryOperator	*		908484	0					
ANR	916008	Identifier	ptr		908484	1					
ANR	916009	ExpressionStatement	ptr ++	6803:37:222370:222375	908484	1	True				
ANR	916010	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916011	Identifier	ptr		908484	0					
ANR	916012	IncDec	++		908484	1					
ANR	916013	ExpressionStatement	* errorcodeptr = ERR61	6804:14:222391:222412	908484	1	True				
ANR	916014	AssignmentExpression	* errorcodeptr = ERR61		908484	0		=			
ANR	916015	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916016	UnaryOperator	*		908484	0					
ANR	916017	Identifier	errorcodeptr		908484	1					
ANR	916018	Identifier	ERR61		908484	1					
ANR	916019	GotoStatement	goto FAILED ;	6805:14:222428:222439	908484	2	True				
ANR	916020	Identifier	FAILED		908484	0					
ANR	916021	ExpressionStatement	recno = recno * 10 + ( int ) ( * ptr - CHAR_0 )	6807:12:222469:222510	908484	1	True				
ANR	916022	AssignmentExpression	recno = recno * 10 + ( int ) ( * ptr - CHAR_0 )		908484	0		=			
ANR	916023	Identifier	recno		908484	0					
ANR	916024	AdditiveExpression	recno * 10 + ( int ) ( * ptr - CHAR_0 )		908484	1		+			
ANR	916025	MultiplicativeExpression	recno * 10		908484	0		*			
ANR	916026	Identifier	recno		908484	0					
ANR	916027	PrimaryExpression	10		908484	1					
ANR	916028	CastExpression	( int ) ( * ptr - CHAR_0 )		908484	1					
ANR	916029	CastTarget	int		908484	0					
ANR	916030	AdditiveExpression	* ptr - CHAR_0		908484	1		-			
ANR	916031	UnaryOperationExpression	* ptr		908484	0					
ANR	916032	UnaryOperator	*		908484	0					
ANR	916033	Identifier	ptr		908484	1					
ANR	916034	Identifier	CHAR_0		908484	1					
ANR	916035	ExpressionStatement	ptr ++	6808:12:222524:222529	908484	2	True				
ANR	916036	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916037	Identifier	ptr		908484	0					
ANR	916038	IncDec	++		908484	1					
ANR	916039	ElseStatement	else		908484	0					
ANR	916040	CompoundStatement		2361:10:83021:83021	908484	0					
ANR	916041	IfStatement	if ( IS_DIGIT ( * ptr ) )		908484	0					
ANR	916042	Condition	IS_DIGIT ( * ptr )	6819:14:222913:222926	908484	0	True				
ANR	916043	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	916044	Callee	IS_DIGIT		908484	0					
ANR	916045	Identifier	IS_DIGIT		908484	0					
ANR	916046	ArgumentList	* ptr		908484	1					
ANR	916047	Argument	* ptr		908484	0					
ANR	916048	UnaryOperationExpression	* ptr		908484	0					
ANR	916049	UnaryOperator	*		908484	0					
ANR	916050	Identifier	ptr		908484	1					
ANR	916051	CompoundStatement		2363:12:83065:83065	908484	1					
ANR	916052	ExpressionStatement	* errorcodeptr = ERR84	6821:12:222955:222976	908484	0	True				
ANR	916053	AssignmentExpression	* errorcodeptr = ERR84		908484	0		=			
ANR	916054	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916055	UnaryOperator	*		908484	0					
ANR	916056	Identifier	errorcodeptr		908484	1					
ANR	916057	Identifier	ERR84		908484	1					
ANR	916058	GotoStatement	goto FAILED ;	6822:12:222990:223001	908484	1	True				
ANR	916059	Identifier	FAILED		908484	0					
ANR	916060	IfStatement	if ( ! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0 )		908484	1					
ANR	916061	Condition	! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0	6824:14:223031:223084	908484	0	True				
ANR	916062	OrExpression	! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0		908484	0		||			
ANR	916063	UnaryOperationExpression	! MAX_255 ( * ptr )		908484	0					
ANR	916064	UnaryOperator	!		908484	0					
ANR	916065	CallExpression	MAX_255 ( * ptr )		908484	1					
ANR	916066	Callee	MAX_255		908484	0					
ANR	916067	Identifier	MAX_255		908484	0					
ANR	916068	ArgumentList	* ptr		908484	1					
ANR	916069	Argument	* ptr		908484	0					
ANR	916070	UnaryOperationExpression	* ptr		908484	0					
ANR	916071	UnaryOperator	*		908484	0					
ANR	916072	Identifier	ptr		908484	1					
ANR	916073	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) == 0		908484	1		==			
ANR	916074	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		908484	0		&			
ANR	916075	ArrayIndexing	cd -> ctypes [ * ptr ]		908484	0					
ANR	916076	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	916077	Identifier	cd		908484	0					
ANR	916078	Identifier	ctypes		908484	1					
ANR	916079	UnaryOperationExpression	* ptr		908484	1					
ANR	916080	UnaryOperator	*		908484	0					
ANR	916081	Identifier	ptr		908484	1					
ANR	916082	Identifier	ctype_word		908484	1					
ANR	916083	PrimaryExpression	0		908484	1					
ANR	916084	CompoundStatement		2368:12:83223:83223	908484	1					
ANR	916085	ExpressionStatement	* errorcodeptr = ERR28	6826:12:223113:223134	908484	0	True				
ANR	916086	AssignmentExpression	* errorcodeptr = ERR28		908484	0		=			
ANR	916087	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916088	UnaryOperator	*		908484	0					
ANR	916089	Identifier	errorcodeptr		908484	1					
ANR	916090	Identifier	ERR28		908484	1					
ANR	916091	GotoStatement	goto FAILED ;	6827:12:223175:223186	908484	1	True				
ANR	916092	Identifier	FAILED		908484	0					
ANR	916093	ExpressionStatement	name = ptr ++	6829:10:223212:223224	908484	2	True				
ANR	916094	AssignmentExpression	name = ptr ++		908484	0		=			
ANR	916095	Identifier	name		908484	0					
ANR	916096	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	916097	Identifier	ptr		908484	0					
ANR	916098	IncDec	++		908484	1					
ANR	916099	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		908484	3					
ANR	916100	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	6830:17:223243:223295	908484	0	True				
ANR	916101	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	0		&&			
ANR	916102	CallExpression	MAX_255 ( * ptr )		908484	0					
ANR	916103	Callee	MAX_255		908484	0					
ANR	916104	Identifier	MAX_255		908484	0					
ANR	916105	ArgumentList	* ptr		908484	1					
ANR	916106	Argument	* ptr		908484	0					
ANR	916107	UnaryOperationExpression	* ptr		908484	0					
ANR	916108	UnaryOperator	*		908484	0					
ANR	916109	Identifier	ptr		908484	1					
ANR	916110	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	1		!=			
ANR	916111	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		908484	0		&			
ANR	916112	ArrayIndexing	cd -> ctypes [ * ptr ]		908484	0					
ANR	916113	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	916114	Identifier	cd		908484	0					
ANR	916115	Identifier	ctypes		908484	1					
ANR	916116	UnaryOperationExpression	* ptr		908484	1					
ANR	916117	UnaryOperator	*		908484	0					
ANR	916118	Identifier	ptr		908484	1					
ANR	916119	Identifier	ctype_word		908484	1					
ANR	916120	PrimaryExpression	0		908484	1					
ANR	916121	CompoundStatement		2374:12:83434:83434	908484	1					
ANR	916122	ExpressionStatement	ptr ++	6832:12:223324:223329	908484	0	True				
ANR	916123	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916124	Identifier	ptr		908484	0					
ANR	916125	IncDec	++		908484	1					
ANR	916126	ExpressionStatement	namelen = ( int ) ( ptr - name )	6834:10:223355:223382	908484	4	True				
ANR	916127	AssignmentExpression	namelen = ( int ) ( ptr - name )		908484	0		=			
ANR	916128	Identifier	namelen		908484	0					
ANR	916129	CastExpression	( int ) ( ptr - name )		908484	1					
ANR	916130	CastTarget	int		908484	0					
ANR	916131	AdditiveExpression	ptr - name		908484	1		-			
ANR	916132	Identifier	ptr		908484	0					
ANR	916133	Identifier	name		908484	1					
ANR	916134	IfStatement	if ( lengthptr != NULL )		908484	5					
ANR	916135	Condition	lengthptr != NULL	6835:14:223398:223414	908484	0	True				
ANR	916136	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	916137	Identifier	lengthptr		908484	0					
ANR	916138	Identifier	NULL		908484	1					
ANR	916139	ExpressionStatement	skipbytes += IMM2_SIZE	6835:33:223417:223439	908484	1	True				
ANR	916140	AssignmentExpression	skipbytes += IMM2_SIZE		908484	0		+=			
ANR	916141	Identifier	skipbytes		908484	0					
ANR	916142	Identifier	IMM2_SIZE		908484	1					
ANR	916143	IfStatement	if ( ( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS )		908484	21					
ANR	916144	Condition	( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS	6840:12:223502:223601	908484	0	True				
ANR	916145	OrExpression	( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS		908484	0		||			
ANR	916146	AndExpression	terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator		908484	0		&&			
ANR	916147	RelationalExpression	terminator > 0		908484	0		>			
ANR	916148	Identifier	terminator		908484	0					
ANR	916149	PrimaryExpression	0		908484	1					
ANR	916150	EqualityExpression	* ptr ++ != ( pcre_uchar ) terminator		908484	1		!=			
ANR	916151	UnaryOperationExpression	* ptr ++		908484	0					
ANR	916152	UnaryOperator	*		908484	0					
ANR	916153	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	916154	Identifier	ptr		908484	0					
ANR	916155	IncDec	++		908484	1					
ANR	916156	CastExpression	( pcre_uchar ) terminator		908484	1					
ANR	916157	CastTarget	pcre_uchar		908484	0					
ANR	916158	Identifier	terminator		908484	1					
ANR	916159	EqualityExpression	* ptr ++ != CHAR_RIGHT_PARENTHESIS		908484	1		!=			
ANR	916160	UnaryOperationExpression	* ptr ++		908484	0					
ANR	916161	UnaryOperator	*		908484	0					
ANR	916162	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	916163	Identifier	ptr		908484	0					
ANR	916164	IncDec	++		908484	1					
ANR	916165	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	916166	CompoundStatement		2385:10:83738:83738	908484	1					
ANR	916167	ExpressionStatement	ptr --	6843:10:223626:223631	908484	0	True				
ANR	916168	PostIncDecOperationExpression	ptr --		908484	0					
ANR	916169	Identifier	ptr		908484	0					
ANR	916170	IncDec	--		908484	1					
ANR	916171	ExpressionStatement	* errorcodeptr = ERR26	6844:10:223679:223700	908484	1	True				
ANR	916172	AssignmentExpression	* errorcodeptr = ERR26		908484	0		=			
ANR	916173	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916174	UnaryOperator	*		908484	0					
ANR	916175	Identifier	errorcodeptr		908484	1					
ANR	916176	Identifier	ERR26		908484	1					
ANR	916177	GotoStatement	goto FAILED ;	6845:10:223744:223755	908484	2	True				
ANR	916178	Identifier	FAILED		908484	0					
ANR	916179	IfStatement	if ( lengthptr != NULL )		908484	22					
ANR	916180	Condition	lengthptr != NULL	6850:12:223846:223862	908484	0	True				
ANR	916181	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	916182	Identifier	lengthptr		908484	0					
ANR	916183	Identifier	NULL		908484	1					
ANR	916184	BreakStatement	break ;	6850:31:223865:223870	908484	1	True				
ANR	916185	IfStatement	if ( refsign >= 0 )		908484	23					
ANR	916186	Condition	refsign >= 0	6856:12:224052:224063	908484	0	True				
ANR	916187	RelationalExpression	refsign >= 0		908484	0		>=			
ANR	916188	Identifier	refsign		908484	0					
ANR	916189	PrimaryExpression	0		908484	1					
ANR	916190	CompoundStatement		2400:10:84200:84200	908484	1					
ANR	916191	IfStatement	if ( recno <= 0 )		908484	0					
ANR	916192	Condition	recno <= 0	6858:14:224092:224101	908484	0	True				
ANR	916193	RelationalExpression	recno <= 0		908484	0		<=			
ANR	916194	Identifier	recno		908484	0					
ANR	916195	PrimaryExpression	0		908484	1					
ANR	916196	CompoundStatement		2402:12:84240:84240	908484	1					
ANR	916197	ExpressionStatement	* errorcodeptr = ERR35	6860:12:224130:224151	908484	0	True				
ANR	916198	AssignmentExpression	* errorcodeptr = ERR35		908484	0		=			
ANR	916199	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916200	UnaryOperator	*		908484	0					
ANR	916201	Identifier	errorcodeptr		908484	1					
ANR	916202	Identifier	ERR35		908484	1					
ANR	916203	GotoStatement	goto FAILED ;	6861:12:224165:224176	908484	1	True				
ANR	916204	Identifier	FAILED		908484	0					
ANR	916205	IfStatement	if ( refsign != 0 )		908484	1					
ANR	916206	Condition	refsign != 0	6863:14:224206:224217	908484	0	True				
ANR	916207	EqualityExpression	refsign != 0		908484	0		!=			
ANR	916208	Identifier	refsign		908484	0					
ANR	916209	PrimaryExpression	0		908484	1					
ANR	916210	ExpressionStatement	recno = ( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount	6863:28:224220:224312	908484	1	True				
ANR	916211	AssignmentExpression	recno = ( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount		908484	0		=			
ANR	916212	Identifier	recno		908484	0					
ANR	916213	ConditionalExpression	( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount		908484	1					
ANR	916214	Condition	refsign == CHAR_MINUS		908484	0					
ANR	916215	EqualityExpression	refsign == CHAR_MINUS		908484	0		==			
ANR	916216	Identifier	refsign		908484	0					
ANR	916217	Identifier	CHAR_MINUS		908484	1					
ANR	916218	AdditiveExpression	cd -> bracount - recno + 1		908484	1		-			
ANR	916219	PtrMemberAccess	cd -> bracount		908484	0					
ANR	916220	Identifier	cd		908484	0					
ANR	916221	Identifier	bracount		908484	1					
ANR	916222	AdditiveExpression	recno + 1		908484	1		+			
ANR	916223	Identifier	recno		908484	0					
ANR	916224	PrimaryExpression	1		908484	1					
ANR	916225	AdditiveExpression	recno + cd -> bracount		908484	2		+			
ANR	916226	Identifier	recno		908484	0					
ANR	916227	PtrMemberAccess	cd -> bracount		908484	1					
ANR	916228	Identifier	cd		908484	0					
ANR	916229	Identifier	bracount		908484	1					
ANR	916230	IfStatement	if ( recno <= 0 || recno > cd -> final_bracount )		908484	2					
ANR	916231	Condition	recno <= 0 || recno > cd -> final_bracount	6865:14:224328:224367	908484	0	True				
ANR	916232	OrExpression	recno <= 0 || recno > cd -> final_bracount		908484	0		||			
ANR	916233	RelationalExpression	recno <= 0		908484	0		<=			
ANR	916234	Identifier	recno		908484	0					
ANR	916235	PrimaryExpression	0		908484	1					
ANR	916236	RelationalExpression	recno > cd -> final_bracount		908484	1		>			
ANR	916237	Identifier	recno		908484	0					
ANR	916238	PtrMemberAccess	cd -> final_bracount		908484	1					
ANR	916239	Identifier	cd		908484	0					
ANR	916240	Identifier	final_bracount		908484	1					
ANR	916241	CompoundStatement		2409:12:84506:84506	908484	1					
ANR	916242	ExpressionStatement	* errorcodeptr = ERR15	6867:12:224396:224417	908484	0	True				
ANR	916243	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	916244	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916245	UnaryOperator	*		908484	0					
ANR	916246	Identifier	errorcodeptr		908484	1					
ANR	916247	Identifier	ERR15		908484	1					
ANR	916248	GotoStatement	goto FAILED ;	6868:12:224431:224442	908484	1	True				
ANR	916249	Identifier	FAILED		908484	0					
ANR	916250	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6870:10:224468:224498	908484	3	True				
ANR	916251	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		908484	0					
ANR	916252	Callee	PUT2		908484	0					
ANR	916253	Identifier	PUT2		908484	0					
ANR	916254	ArgumentList	code		908484	1					
ANR	916255	Argument	code		908484	0					
ANR	916256	Identifier	code		908484	0					
ANR	916257	Argument	2 + LINK_SIZE		908484	1					
ANR	916258	AdditiveExpression	2 + LINK_SIZE		908484	0		+			
ANR	916259	PrimaryExpression	2		908484	0					
ANR	916260	Identifier	LINK_SIZE		908484	1					
ANR	916261	Argument	recno		908484	2					
ANR	916262	Identifier	recno		908484	0					
ANR	916263	IfStatement	if ( recno > cd -> top_backref )		908484	4					
ANR	916264	Condition	recno > cd -> top_backref	6871:14:224514:224536	908484	0	True				
ANR	916265	RelationalExpression	recno > cd -> top_backref		908484	0		>			
ANR	916266	Identifier	recno		908484	0					
ANR	916267	PtrMemberAccess	cd -> top_backref		908484	1					
ANR	916268	Identifier	cd		908484	0					
ANR	916269	Identifier	top_backref		908484	1					
ANR	916270	ExpressionStatement	cd -> top_backref = recno	6871:39:224539:224562	908484	1	True				
ANR	916271	AssignmentExpression	cd -> top_backref = recno		908484	0		=			
ANR	916272	PtrMemberAccess	cd -> top_backref		908484	0					
ANR	916273	Identifier	cd		908484	0					
ANR	916274	Identifier	top_backref		908484	1					
ANR	916275	Identifier	recno		908484	1					
ANR	916276	BreakStatement	break ;	6872:10:224574:224579	908484	5	True				
ANR	916277	ExpressionStatement	slot = cd -> name_table	6877:8:224646:224667	908484	24	True				
ANR	916278	AssignmentExpression	slot = cd -> name_table		908484	0		=			
ANR	916279	Identifier	slot		908484	0					
ANR	916280	PtrMemberAccess	cd -> name_table		908484	1					
ANR	916281	Identifier	cd		908484	0					
ANR	916282	Identifier	name_table		908484	1					
ANR	916283	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		908484	25					
ANR	916284	ForInit	i = 0 ;	6878:13:224682:224687	908484	0	True				
ANR	916285	AssignmentExpression	i = 0		908484	0		=			
ANR	916286	Identifier	i		908484	0					
ANR	916287	PrimaryExpression	0		908484	1					
ANR	916288	Condition	i < cd -> names_found	6878:20:224689:224707	908484	1	True				
ANR	916289	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	916290	Identifier	i		908484	0					
ANR	916291	PtrMemberAccess	cd -> names_found		908484	1					
ANR	916292	Identifier	cd		908484	0					
ANR	916293	Identifier	names_found		908484	1					
ANR	916294	PostIncDecOperationExpression	i ++	6878:41:224710:224712	908484	2	True				
ANR	916295	Identifier	i		908484	0					
ANR	916296	IncDec	++		908484	1					
ANR	916297	CompoundStatement		2422:10:84849:84849	908484	3					
ANR	916298	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 )"		908484	0					
ANR	916299	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"	6880:14:224741:224789	908484	0	True				
ANR	916300	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"		908484	0		==			
ANR	916301	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		908484	0					
ANR	916302	Callee	STRNCMP_UC_UC		908484	0					
ANR	916303	Identifier	STRNCMP_UC_UC		908484	0					
ANR	916304	ArgumentList	name		908484	1					
ANR	916305	Argument	name		908484	0					
ANR	916306	Identifier	name		908484	0					
ANR	916307	Argument	slot + IMM2_SIZE		908484	1					
ANR	916308	AdditiveExpression	slot + IMM2_SIZE		908484	0		+			
ANR	916309	Identifier	slot		908484	0					
ANR	916310	Identifier	IMM2_SIZE		908484	1					
ANR	916311	Argument	namelen		908484	2					
ANR	916312	Identifier	namelen		908484	0					
ANR	916313	PrimaryExpression	0		908484	1					
ANR	916314	BreakStatement	break ;	6880:65:224792:224797	908484	1	True				
ANR	916315	ExpressionStatement	slot += cd -> name_entry_size	6881:10:224809:224836	908484	1	True				
ANR	916316	AssignmentExpression	slot += cd -> name_entry_size		908484	0		+=			
ANR	916317	Identifier	slot		908484	0					
ANR	916318	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	916319	Identifier	cd		908484	0					
ANR	916320	Identifier	name_entry_size		908484	1					
ANR	916321	IfStatement	if ( i < cd -> names_found )		908484	26					
ANR	916322	Condition	i < cd -> names_found	6889:12:225107:225125	908484	0	True				
ANR	916323	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	916324	Identifier	i		908484	0					
ANR	916325	PtrMemberAccess	cd -> names_found		908484	1					
ANR	916326	Identifier	cd		908484	0					
ANR	916327	Identifier	names_found		908484	1					
ANR	916328	CompoundStatement		2435:10:85302:85315	908484	1					
ANR	916329	IdentifierDeclStatement	int offset = i ++ ;	6891:10:225150:225166	908484	0	True				
ANR	916330	IdentifierDecl	offset = i ++		908484	0					
ANR	916331	IdentifierDeclType	int		908484	0					
ANR	916332	Identifier	offset		908484	1					
ANR	916333	AssignmentExpression	offset = i ++		908484	2		=			
ANR	916334	Identifier	offset		908484	0					
ANR	916335	PostIncDecOperationExpression	i ++		908484	1					
ANR	916336	Identifier	i		908484	0					
ANR	916337	IncDec	++		908484	1					
ANR	916338	IdentifierDeclStatement	int count = 1 ;	6892:10:225178:225191	908484	1	True				
ANR	916339	IdentifierDecl	count = 1		908484	0					
ANR	916340	IdentifierDeclType	int		908484	0					
ANR	916341	Identifier	count		908484	1					
ANR	916342	AssignmentExpression	count = 1		908484	2		=			
ANR	916343	Identifier	count		908484	0					
ANR	916344	PrimaryExpression	1		908484	1					
ANR	916345	ExpressionStatement	"recno = GET2 ( slot , 0 )"	6893:10:225203:225224	908484	2	True				
ANR	916346	AssignmentExpression	"recno = GET2 ( slot , 0 )"		908484	0		=			
ANR	916347	Identifier	recno		908484	0					
ANR	916348	CallExpression	"GET2 ( slot , 0 )"		908484	1					
ANR	916349	Callee	GET2		908484	0					
ANR	916350	Identifier	GET2		908484	0					
ANR	916351	ArgumentList	slot		908484	1					
ANR	916352	Argument	slot		908484	0					
ANR	916353	Identifier	slot		908484	0					
ANR	916354	Argument	0		908484	1					
ANR	916355	PrimaryExpression	0		908484	0					
ANR	916356	IfStatement	if ( recno > cd -> top_backref )		908484	3					
ANR	916357	Condition	recno > cd -> top_backref	6894:14:225272:225294	908484	0	True				
ANR	916358	RelationalExpression	recno > cd -> top_backref		908484	0		>			
ANR	916359	Identifier	recno		908484	0					
ANR	916360	PtrMemberAccess	cd -> top_backref		908484	1					
ANR	916361	Identifier	cd		908484	0					
ANR	916362	Identifier	top_backref		908484	1					
ANR	916363	ExpressionStatement	cd -> top_backref = recno	6894:39:225297:225320	908484	1	True				
ANR	916364	AssignmentExpression	cd -> top_backref = recno		908484	0		=			
ANR	916365	PtrMemberAccess	cd -> top_backref		908484	0					
ANR	916366	Identifier	cd		908484	0					
ANR	916367	Identifier	top_backref		908484	1					
ANR	916368	Identifier	recno		908484	1					
ANR	916369	ForStatement	for ( ; i < cd -> names_found ; i ++ )		908484	4					
ANR	916370	Condition	i < cd -> names_found	6895:17:225339:225357	908484	0	True				
ANR	916371	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	916372	Identifier	i		908484	0					
ANR	916373	PtrMemberAccess	cd -> names_found		908484	1					
ANR	916374	Identifier	cd		908484	0					
ANR	916375	Identifier	names_found		908484	1					
ANR	916376	PostIncDecOperationExpression	i ++	6895:38:225360:225362	908484	1	True				
ANR	916377	Identifier	i		908484	0					
ANR	916378	IncDec	++		908484	1					
ANR	916379	CompoundStatement		2439:12:85501:85501	908484	2					
ANR	916380	ExpressionStatement	slot += cd -> name_entry_size	6897:12:225391:225418	908484	0	True				
ANR	916381	AssignmentExpression	slot += cd -> name_entry_size		908484	0		+=			
ANR	916382	Identifier	slot		908484	0					
ANR	916383	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	916384	Identifier	cd		908484	0					
ANR	916385	Identifier	name_entry_size		908484	1					
ANR	916386	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0 )"		908484	1					
ANR	916387	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0"	6898:16:225436:225532	908484	0	True				
ANR	916388	OrExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0"		908484	0		||			
ANR	916389	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0"		908484	0		!=			
ANR	916390	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		908484	0					
ANR	916391	Callee	STRNCMP_UC_UC		908484	0					
ANR	916392	Identifier	STRNCMP_UC_UC		908484	0					
ANR	916393	ArgumentList	name		908484	1					
ANR	916394	Argument	name		908484	0					
ANR	916395	Identifier	name		908484	0					
ANR	916396	Argument	slot + IMM2_SIZE		908484	1					
ANR	916397	AdditiveExpression	slot + IMM2_SIZE		908484	0		+			
ANR	916398	Identifier	slot		908484	0					
ANR	916399	Identifier	IMM2_SIZE		908484	1					
ANR	916400	Argument	namelen		908484	2					
ANR	916401	Identifier	namelen		908484	0					
ANR	916402	PrimaryExpression	0		908484	1					
ANR	916403	EqualityExpression	( slot + IMM2_SIZE ) [ namelen ] != 0		908484	1		!=			
ANR	916404	ArrayIndexing	( slot + IMM2_SIZE ) [ namelen ]		908484	0					
ANR	916405	AdditiveExpression	slot + IMM2_SIZE		908484	0		+			
ANR	916406	Identifier	slot		908484	0					
ANR	916407	Identifier	IMM2_SIZE		908484	1					
ANR	916408	Identifier	namelen		908484	1					
ANR	916409	PrimaryExpression	0		908484	1					
ANR	916410	BreakStatement	break ;	6899:46:225535:225540	908484	1	True				
ANR	916411	ExpressionStatement	count ++	6900:12:225554:225561	908484	2	True				
ANR	916412	PostIncDecOperationExpression	count ++		908484	0					
ANR	916413	Identifier	count		908484	0					
ANR	916414	IncDec	++		908484	1					
ANR	916415	IfStatement	if ( count > 1 )		908484	5					
ANR	916416	Condition	count > 1	6903:14:225592:225600	908484	0	True				
ANR	916417	RelationalExpression	count > 1		908484	0		>			
ANR	916418	Identifier	count		908484	0					
ANR	916419	PrimaryExpression	1		908484	1					
ANR	916420	CompoundStatement		2447:12:85739:85739	908484	1					
ANR	916421	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , offset )"	6905:12:225629:225660	908484	0	True				
ANR	916422	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , offset )"		908484	0					
ANR	916423	Callee	PUT2		908484	0					
ANR	916424	Identifier	PUT2		908484	0					
ANR	916425	ArgumentList	code		908484	1					
ANR	916426	Argument	code		908484	0					
ANR	916427	Identifier	code		908484	0					
ANR	916428	Argument	2 + LINK_SIZE		908484	1					
ANR	916429	AdditiveExpression	2 + LINK_SIZE		908484	0		+			
ANR	916430	PrimaryExpression	2		908484	0					
ANR	916431	Identifier	LINK_SIZE		908484	1					
ANR	916432	Argument	offset		908484	2					
ANR	916433	Identifier	offset		908484	0					
ANR	916434	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE + IMM2_SIZE , count )"	6906:12:225674:225714	908484	1	True				
ANR	916435	CallExpression	"PUT2 ( code , 2 + LINK_SIZE + IMM2_SIZE , count )"		908484	0					
ANR	916436	Callee	PUT2		908484	0					
ANR	916437	Identifier	PUT2		908484	0					
ANR	916438	ArgumentList	code		908484	1					
ANR	916439	Argument	code		908484	0					
ANR	916440	Identifier	code		908484	0					
ANR	916441	Argument	2 + LINK_SIZE + IMM2_SIZE		908484	1					
ANR	916442	AdditiveExpression	2 + LINK_SIZE + IMM2_SIZE		908484	0		+			
ANR	916443	PrimaryExpression	2		908484	0					
ANR	916444	AdditiveExpression	LINK_SIZE + IMM2_SIZE		908484	1		+			
ANR	916445	Identifier	LINK_SIZE		908484	0					
ANR	916446	Identifier	IMM2_SIZE		908484	1					
ANR	916447	Argument	count		908484	2					
ANR	916448	Identifier	count		908484	0					
ANR	916449	ExpressionStatement	skipbytes += IMM2_SIZE	6907:12:225728:225750	908484	2	True				
ANR	916450	AssignmentExpression	skipbytes += IMM2_SIZE		908484	0		+=			
ANR	916451	Identifier	skipbytes		908484	0					
ANR	916452	Identifier	IMM2_SIZE		908484	1					
ANR	916453	ExpressionStatement	code [ 1 + LINK_SIZE ] ++	6908:12:225764:225783	908484	3	True				
ANR	916454	PostIncDecOperationExpression	code [ 1 + LINK_SIZE ] ++		908484	0					
ANR	916455	ArrayIndexing	code [ 1 + LINK_SIZE ]		908484	0					
ANR	916456	Identifier	code		908484	0					
ANR	916457	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	916458	PrimaryExpression	1		908484	0					
ANR	916459	Identifier	LINK_SIZE		908484	1					
ANR	916460	IncDec	++		908484	1					
ANR	916461	ElseStatement	else		908484	0					
ANR	916462	CompoundStatement		2454:12:85979:85979	908484	0					
ANR	916463	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6912:12:225869:225899	908484	0	True				
ANR	916464	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		908484	0					
ANR	916465	Callee	PUT2		908484	0					
ANR	916466	Identifier	PUT2		908484	0					
ANR	916467	ArgumentList	code		908484	1					
ANR	916468	Argument	code		908484	0					
ANR	916469	Identifier	code		908484	0					
ANR	916470	Argument	2 + LINK_SIZE		908484	1					
ANR	916471	AdditiveExpression	2 + LINK_SIZE		908484	0		+			
ANR	916472	PrimaryExpression	2		908484	0					
ANR	916473	Identifier	LINK_SIZE		908484	1					
ANR	916474	Argument	recno		908484	2					
ANR	916475	Identifier	recno		908484	0					
ANR	916476	ElseStatement	else		908484	0					
ANR	916477	IfStatement	if ( terminator != CHAR_NULL )		908484	0					
ANR	916478	Condition	terminator != CHAR_NULL	6922:17:226336:226358	908484	0	True				
ANR	916479	EqualityExpression	terminator != CHAR_NULL		908484	0		!=			
ANR	916480	Identifier	terminator		908484	0					
ANR	916481	Identifier	CHAR_NULL		908484	1					
ANR	916482	CompoundStatement		2466:10:86495:86495	908484	1					
ANR	916483	ExpressionStatement	* errorcodeptr = ERR15	6924:10:226383:226404	908484	0	True				
ANR	916484	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	916485	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916486	UnaryOperator	*		908484	0					
ANR	916487	Identifier	errorcodeptr		908484	1					
ANR	916488	Identifier	ERR15		908484	1					
ANR	916489	GotoStatement	goto FAILED ;	6925:10:226416:226427	908484	1	True				
ANR	916490	Identifier	FAILED		908484	0					
ANR	916491	ElseStatement	else		908484	0					
ANR	916492	IfStatement	if ( * name == CHAR_R )		908484	0					
ANR	916493	Condition	* name == CHAR_R	6931:17:226570:226584	908484	0	True				
ANR	916494	EqualityExpression	* name == CHAR_R		908484	0		==			
ANR	916495	UnaryOperationExpression	* name		908484	0					
ANR	916496	UnaryOperator	*		908484	0					
ANR	916497	Identifier	name		908484	1					
ANR	916498	Identifier	CHAR_R		908484	1					
ANR	916499	CompoundStatement		2475:10:86721:86721	908484	1					
ANR	916500	ExpressionStatement	recno = 0	6933:10:226609:226618	908484	0	True				
ANR	916501	AssignmentExpression	recno = 0		908484	0		=			
ANR	916502	Identifier	recno		908484	0					
ANR	916503	PrimaryExpression	0		908484	1					
ANR	916504	ForStatement	for ( i = 1 ; i < namelen ; i ++ )		908484	1					
ANR	916505	ForInit	i = 1 ;	6934:15:226635:226640	908484	0	True				
ANR	916506	AssignmentExpression	i = 1		908484	0		=			
ANR	916507	Identifier	i		908484	0					
ANR	916508	PrimaryExpression	1		908484	1					
ANR	916509	Condition	i < namelen	6934:22:226642:226652	908484	1	True				
ANR	916510	RelationalExpression	i < namelen		908484	0		<			
ANR	916511	Identifier	i		908484	0					
ANR	916512	Identifier	namelen		908484	1					
ANR	916513	PostIncDecOperationExpression	i ++	6934:35:226655:226657	908484	2	True				
ANR	916514	Identifier	i		908484	0					
ANR	916515	IncDec	++		908484	1					
ANR	916516	CompoundStatement		2478:12:86796:86796	908484	3					
ANR	916517	IfStatement	if ( ! IS_DIGIT ( name [ i ] ) )		908484	0					
ANR	916518	Condition	! IS_DIGIT ( name [ i ] )	6936:16:226690:226707	908484	0	True				
ANR	916519	UnaryOperationExpression	! IS_DIGIT ( name [ i ] )		908484	0					
ANR	916520	UnaryOperator	!		908484	0					
ANR	916521	CallExpression	IS_DIGIT ( name [ i ] )		908484	1					
ANR	916522	Callee	IS_DIGIT		908484	0					
ANR	916523	Identifier	IS_DIGIT		908484	0					
ANR	916524	ArgumentList	name [ i ]		908484	1					
ANR	916525	Argument	name [ i ]		908484	0					
ANR	916526	ArrayIndexing	name [ i ]		908484	0					
ANR	916527	Identifier	name		908484	0					
ANR	916528	Identifier	i		908484	1					
ANR	916529	CompoundStatement		2480:14:86848:86848	908484	1					
ANR	916530	ExpressionStatement	* errorcodeptr = ERR15	6938:14:226740:226761	908484	0	True				
ANR	916531	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	916532	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916533	UnaryOperator	*		908484	0					
ANR	916534	Identifier	errorcodeptr		908484	1					
ANR	916535	Identifier	ERR15		908484	1					
ANR	916536	GotoStatement	goto FAILED ;	6939:14:226777:226788	908484	1	True				
ANR	916537	Identifier	FAILED		908484	0					
ANR	916538	IfStatement	if ( recno > INT_MAX / 10 - 1 )		908484	1					
ANR	916539	Condition	recno > INT_MAX / 10 - 1	6941:16:226822:226845	908484	0	True				
ANR	916540	RelationalExpression	recno > INT_MAX / 10 - 1		908484	0		>			
ANR	916541	Identifier	recno		908484	0					
ANR	916542	AdditiveExpression	INT_MAX / 10 - 1		908484	1		-			
ANR	916543	MultiplicativeExpression	INT_MAX / 10		908484	0		/			
ANR	916544	Identifier	INT_MAX		908484	0					
ANR	916545	PrimaryExpression	10		908484	1					
ANR	916546	PrimaryExpression	1		908484	1					
ANR	916547	CompoundStatement		2485:14:87011:87011	908484	1					
ANR	916548	ExpressionStatement	* errorcodeptr = ERR61	6943:14:226903:226924	908484	0	True				
ANR	916549	AssignmentExpression	* errorcodeptr = ERR61		908484	0		=			
ANR	916550	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916551	UnaryOperator	*		908484	0					
ANR	916552	Identifier	errorcodeptr		908484	1					
ANR	916553	Identifier	ERR61		908484	1					
ANR	916554	GotoStatement	goto FAILED ;	6944:14:226940:226951	908484	1	True				
ANR	916555	Identifier	FAILED		908484	0					
ANR	916556	ExpressionStatement	recno = recno * 10 + name [ i ] - CHAR_0	6946:12:226981:227018	908484	2	True				
ANR	916557	AssignmentExpression	recno = recno * 10 + name [ i ] - CHAR_0		908484	0		=			
ANR	916558	Identifier	recno		908484	0					
ANR	916559	AdditiveExpression	recno * 10 + name [ i ] - CHAR_0		908484	1		+			
ANR	916560	MultiplicativeExpression	recno * 10		908484	0		*			
ANR	916561	Identifier	recno		908484	0					
ANR	916562	PrimaryExpression	10		908484	1					
ANR	916563	AdditiveExpression	name [ i ] - CHAR_0		908484	1		-			
ANR	916564	ArrayIndexing	name [ i ]		908484	0					
ANR	916565	Identifier	name		908484	0					
ANR	916566	Identifier	i		908484	1					
ANR	916567	Identifier	CHAR_0		908484	1					
ANR	916568	IfStatement	if ( recno == 0 )		908484	2					
ANR	916569	Condition	recno == 0	6948:14:227048:227057	908484	0	True				
ANR	916570	EqualityExpression	recno == 0		908484	0		==			
ANR	916571	Identifier	recno		908484	0					
ANR	916572	PrimaryExpression	0		908484	1					
ANR	916573	ExpressionStatement	recno = RREF_ANY	6948:26:227060:227076	908484	1	True				
ANR	916574	AssignmentExpression	recno = RREF_ANY		908484	0		=			
ANR	916575	Identifier	recno		908484	0					
ANR	916576	Identifier	RREF_ANY		908484	1					
ANR	916577	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_RREF	6949:10:227088:227115	908484	3	True				
ANR	916578	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_RREF		908484	0		=			
ANR	916579	ArrayIndexing	code [ 1 + LINK_SIZE ]		908484	0					
ANR	916580	Identifier	code		908484	0					
ANR	916581	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	916582	PrimaryExpression	1		908484	0					
ANR	916583	Identifier	LINK_SIZE		908484	1					
ANR	916584	Identifier	OP_RREF		908484	1					
ANR	916585	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6950:10:227155:227185	908484	4	True				
ANR	916586	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		908484	0					
ANR	916587	Callee	PUT2		908484	0					
ANR	916588	Identifier	PUT2		908484	0					
ANR	916589	ArgumentList	code		908484	1					
ANR	916590	Argument	code		908484	0					
ANR	916591	Identifier	code		908484	0					
ANR	916592	Argument	2 + LINK_SIZE		908484	1					
ANR	916593	AdditiveExpression	2 + LINK_SIZE		908484	0		+			
ANR	916594	PrimaryExpression	2		908484	0					
ANR	916595	Identifier	LINK_SIZE		908484	1					
ANR	916596	Argument	recno		908484	2					
ANR	916597	Identifier	recno		908484	0					
ANR	916598	ElseStatement	else		908484	0					
ANR	916599	IfStatement	"if ( namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0 )"		908484	0					
ANR	916600	Condition	"namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"	6956:17:227312:227369	908484	0	True				
ANR	916601	AndExpression	"namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"		908484	0		&&			
ANR	916602	EqualityExpression	namelen == 6		908484	0		==			
ANR	916603	Identifier	namelen		908484	0					
ANR	916604	PrimaryExpression	6		908484	1					
ANR	916605	EqualityExpression	"STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"		908484	1		==			
ANR	916606	CallExpression	"STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 )"		908484	0					
ANR	916607	Callee	STRNCMP_UC_C8		908484	0					
ANR	916608	Identifier	STRNCMP_UC_C8		908484	0					
ANR	916609	ArgumentList	name		908484	1					
ANR	916610	Argument	name		908484	0					
ANR	916611	Identifier	name		908484	0					
ANR	916612	Argument	STRING_DEFINE		908484	1					
ANR	916613	Identifier	STRING_DEFINE		908484	0					
ANR	916614	Argument	6		908484	2					
ANR	916615	PrimaryExpression	6		908484	0					
ANR	916616	PrimaryExpression	0		908484	1					
ANR	916617	CompoundStatement		2500:10:87506:87506	908484	1					
ANR	916618	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_DEF	6958:10:227394:227420	908484	0	True				
ANR	916619	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_DEF		908484	0		=			
ANR	916620	ArrayIndexing	code [ 1 + LINK_SIZE ]		908484	0					
ANR	916621	Identifier	code		908484	0					
ANR	916622	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	916623	PrimaryExpression	1		908484	0					
ANR	916624	Identifier	LINK_SIZE		908484	1					
ANR	916625	Identifier	OP_DEF		908484	1					
ANR	916626	ExpressionStatement	skipbytes = 1	6959:10:227432:227445	908484	1	True				
ANR	916627	AssignmentExpression	skipbytes = 1		908484	0		=			
ANR	916628	Identifier	skipbytes		908484	0					
ANR	916629	PrimaryExpression	1		908484	1					
ANR	916630	ElseStatement	else		908484	0					
ANR	916631	CompoundStatement		2508:10:87663:87663	908484	0					
ANR	916632	ExpressionStatement	* errorcodeptr = ERR15	6966:10:227551:227572	908484	0	True				
ANR	916633	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	916634	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916635	UnaryOperator	*		908484	0					
ANR	916636	Identifier	errorcodeptr		908484	1					
ANR	916637	Identifier	ERR15		908484	1					
ANR	916638	GotoStatement	goto FAILED ;	6967:10:227584:227595	908484	1	True				
ANR	916639	Identifier	FAILED		908484	0					
ANR	916640	BreakStatement	break ;	6969:8:227617:227622	908484	27	True				
ANR	916641	Label	case CHAR_EQUALS_SIGN :	6973:8:227709:227730	908484	28	True				
ANR	916642	Identifier	CHAR_EQUALS_SIGN		908484	0					
ANR	916643	ExpressionStatement	bravalue = OP_ASSERT	6974:8:227781:227801	908484	29	True				
ANR	916644	AssignmentExpression	bravalue = OP_ASSERT		908484	0		=			
ANR	916645	Identifier	bravalue		908484	0					
ANR	916646	Identifier	OP_ASSERT		908484	1					
ANR	916647	ExpressionStatement	cd -> assert_depth += 1	6975:8:227811:227832	908484	30	True				
ANR	916648	AssignmentExpression	cd -> assert_depth += 1		908484	0		+=			
ANR	916649	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	916650	Identifier	cd		908484	0					
ANR	916651	Identifier	assert_depth		908484	1					
ANR	916652	PrimaryExpression	1		908484	1					
ANR	916653	ExpressionStatement	ptr ++	6976:8:227842:227847	908484	31	True				
ANR	916654	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916655	Identifier	ptr		908484	0					
ANR	916656	IncDec	++		908484	1					
ANR	916657	BreakStatement	break ;	6977:8:227857:227862	908484	32	True				
ANR	916658	Label	case CHAR_EXCLAMATION_MARK :	6986:8:228291:228317	908484	33	True				
ANR	916659	Identifier	CHAR_EXCLAMATION_MARK		908484	0					
ANR	916660	ExpressionStatement	ptr ++	6987:8:228363:228368	908484	34	True				
ANR	916661	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916662	Identifier	ptr		908484	0					
ANR	916663	IncDec	++		908484	1					
ANR	916664	IfStatement	if ( * ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) ) )		908484	35					
ANR	916665	Condition	* ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )	6988:12:228382:228586	908484	0	True				
ANR	916666	AndExpression	* ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		908484	0		&&			
ANR	916667	EqualityExpression	* ptr == CHAR_RIGHT_PARENTHESIS		908484	0		==			
ANR	916668	UnaryOperationExpression	* ptr		908484	0					
ANR	916669	UnaryOperator	*		908484	0					
ANR	916670	Identifier	ptr		908484	1					
ANR	916671	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	916672	AndExpression	ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		908484	1		&&			
ANR	916673	EqualityExpression	ptr [ 1 ] != CHAR_ASTERISK		908484	0		!=			
ANR	916674	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916675	Identifier	ptr		908484	0					
ANR	916676	PrimaryExpression	1		908484	1					
ANR	916677	Identifier	CHAR_ASTERISK		908484	1					
ANR	916678	AndExpression	ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		908484	1		&&			
ANR	916679	EqualityExpression	ptr [ 1 ] != CHAR_PLUS		908484	0		!=			
ANR	916680	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916681	Identifier	ptr		908484	0					
ANR	916682	PrimaryExpression	1		908484	1					
ANR	916683	Identifier	CHAR_PLUS		908484	1					
ANR	916684	AndExpression	ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		908484	1		&&			
ANR	916685	EqualityExpression	ptr [ 1 ] != CHAR_QUESTION_MARK		908484	0		!=			
ANR	916686	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916687	Identifier	ptr		908484	0					
ANR	916688	PrimaryExpression	1		908484	1					
ANR	916689	Identifier	CHAR_QUESTION_MARK		908484	1					
ANR	916690	OrExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 )		908484	1		||			
ANR	916691	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		908484	0		!=			
ANR	916692	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916693	Identifier	ptr		908484	0					
ANR	916694	PrimaryExpression	1		908484	1					
ANR	916695	Identifier	CHAR_LEFT_CURLY_BRACKET		908484	1					
ANR	916696	UnaryOperationExpression	! is_counted_repeat ( ptr + 2 )		908484	1					
ANR	916697	UnaryOperator	!		908484	0					
ANR	916698	CallExpression	is_counted_repeat ( ptr + 2 )		908484	1					
ANR	916699	Callee	is_counted_repeat		908484	0					
ANR	916700	Identifier	is_counted_repeat		908484	0					
ANR	916701	ArgumentList	ptr + 2		908484	1					
ANR	916702	Argument	ptr + 2		908484	0					
ANR	916703	AdditiveExpression	ptr + 2		908484	0		+			
ANR	916704	Identifier	ptr		908484	0					
ANR	916705	PrimaryExpression	2		908484	1					
ANR	916706	CompoundStatement		2534:10:88723:88723	908484	1					
ANR	916707	ExpressionStatement	* code ++ = OP_FAIL	6992:10:228611:228628	908484	0	True				
ANR	916708	AssignmentExpression	* code ++ = OP_FAIL		908484	0		=			
ANR	916709	UnaryOperationExpression	* code ++		908484	0					
ANR	916710	UnaryOperator	*		908484	0					
ANR	916711	PostIncDecOperationExpression	code ++		908484	1					
ANR	916712	Identifier	code		908484	0					
ANR	916713	IncDec	++		908484	1					
ANR	916714	Identifier	OP_FAIL		908484	1					
ANR	916715	ExpressionStatement	previous = NULL	6993:10:228640:228655	908484	1	True				
ANR	916716	AssignmentExpression	previous = NULL		908484	0		=			
ANR	916717	Identifier	previous		908484	0					
ANR	916718	Identifier	NULL		908484	1					
ANR	916719	ContinueStatement	continue ;	6994:10:228667:228675	908484	2	True				
ANR	916720	ExpressionStatement	bravalue = OP_ASSERT_NOT	6996:8:228697:228721	908484	36	True				
ANR	916721	AssignmentExpression	bravalue = OP_ASSERT_NOT		908484	0		=			
ANR	916722	Identifier	bravalue		908484	0					
ANR	916723	Identifier	OP_ASSERT_NOT		908484	1					
ANR	916724	ExpressionStatement	cd -> assert_depth += 1	6997:8:228731:228752	908484	37	True				
ANR	916725	AssignmentExpression	cd -> assert_depth += 1		908484	0		+=			
ANR	916726	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	916727	Identifier	cd		908484	0					
ANR	916728	Identifier	assert_depth		908484	1					
ANR	916729	PrimaryExpression	1		908484	1					
ANR	916730	BreakStatement	break ;	6998:8:228762:228767	908484	38	True				
ANR	916731	Label	case CHAR_LESS_THAN_SIGN :	7002:8:228854:228878	908484	39	True				
ANR	916732	Identifier	CHAR_LESS_THAN_SIGN		908484	0					
ANR	916733	SwitchStatement	switch ( ptr [ 1 ] )		908484	40					
ANR	916734	Condition	ptr [ 1 ]	7003:16:228942:228947	908484	0	True				
ANR	916735	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916736	Identifier	ptr		908484	0					
ANR	916737	PrimaryExpression	1		908484	1					
ANR	916738	CompoundStatement		2547:10:89084:89084	908484	1					
ANR	916739	Label	case CHAR_EQUALS_SIGN :	7005:10:228972:228993	908484	0	True				
ANR	916740	Identifier	CHAR_EQUALS_SIGN		908484	0					
ANR	916741	ExpressionStatement	bravalue = OP_ASSERTBACK	7006:10:229045:229069	908484	1	True				
ANR	916742	AssignmentExpression	bravalue = OP_ASSERTBACK		908484	0		=			
ANR	916743	Identifier	bravalue		908484	0					
ANR	916744	Identifier	OP_ASSERTBACK		908484	1					
ANR	916745	ExpressionStatement	cd -> assert_depth += 1	7007:10:229081:229102	908484	2	True				
ANR	916746	AssignmentExpression	cd -> assert_depth += 1		908484	0		+=			
ANR	916747	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	916748	Identifier	cd		908484	0					
ANR	916749	Identifier	assert_depth		908484	1					
ANR	916750	PrimaryExpression	1		908484	1					
ANR	916751	ExpressionStatement	ptr += 2	7008:10:229114:229122	908484	3	True				
ANR	916752	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	916753	Identifier	ptr		908484	0					
ANR	916754	PrimaryExpression	2		908484	1					
ANR	916755	BreakStatement	break ;	7009:10:229134:229139	908484	4	True				
ANR	916756	Label	case CHAR_EXCLAMATION_MARK :	7011:10:229152:229178	908484	5	True				
ANR	916757	Identifier	CHAR_EXCLAMATION_MARK		908484	0					
ANR	916758	ExpressionStatement	bravalue = OP_ASSERTBACK_NOT	7012:10:229225:229253	908484	6	True				
ANR	916759	AssignmentExpression	bravalue = OP_ASSERTBACK_NOT		908484	0		=			
ANR	916760	Identifier	bravalue		908484	0					
ANR	916761	Identifier	OP_ASSERTBACK_NOT		908484	1					
ANR	916762	ExpressionStatement	cd -> assert_depth += 1	7013:10:229265:229286	908484	7	True				
ANR	916763	AssignmentExpression	cd -> assert_depth += 1		908484	0		+=			
ANR	916764	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	916765	Identifier	cd		908484	0					
ANR	916766	Identifier	assert_depth		908484	1					
ANR	916767	PrimaryExpression	1		908484	1					
ANR	916768	ExpressionStatement	ptr += 2	7014:10:229298:229306	908484	8	True				
ANR	916769	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	916770	Identifier	ptr		908484	0					
ANR	916771	PrimaryExpression	2		908484	1					
ANR	916772	BreakStatement	break ;	7015:10:229318:229323	908484	9	True				
ANR	916773	Label	default :	7017:10:229336:229343	908484	10	True				
ANR	916774	Identifier	default		908484	0					
ANR	916775	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0 )		908484	11					
ANR	916776	Condition	MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0	7018:14:229411:229467	908484	0	True				
ANR	916777	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0		908484	0		&&			
ANR	916778	CallExpression	MAX_255 ( ptr [ 1 ] )		908484	0					
ANR	916779	Callee	MAX_255		908484	0					
ANR	916780	Identifier	MAX_255		908484	0					
ANR	916781	ArgumentList	ptr [ 1 ]		908484	1					
ANR	916782	Argument	ptr [ 1 ]		908484	0					
ANR	916783	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	916784	Identifier	ptr		908484	0					
ANR	916785	PrimaryExpression	1		908484	1					
ANR	916786	EqualityExpression	( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0		908484	1		!=			
ANR	916787	BitAndExpression	cd -> ctypes [ ptr [ 1 ] ] & ctype_word		908484	0		&			
ANR	916788	ArrayIndexing	cd -> ctypes [ ptr [ 1 ] ]		908484	0					
ANR	916789	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	916790	Identifier	cd		908484	0					
ANR	916791	Identifier	ctypes		908484	1					
ANR	916792	ArrayIndexing	ptr [ 1 ]		908484	1					
ANR	916793	Identifier	ptr		908484	0					
ANR	916794	PrimaryExpression	1		908484	1					
ANR	916795	Identifier	ctype_word		908484	1					
ANR	916796	PrimaryExpression	0		908484	1					
ANR	916797	GotoStatement	goto DEFINE_NAME ;	7019:12:229482:229498	908484	1	True				
ANR	916798	Identifier	DEFINE_NAME		908484	0					
ANR	916799	ExpressionStatement	ptr ++	7020:10:229510:229515	908484	12	True				
ANR	916800	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916801	Identifier	ptr		908484	0					
ANR	916802	IncDec	++		908484	1					
ANR	916803	ExpressionStatement	* errorcodeptr = ERR24	7021:10:229575:229596	908484	13	True				
ANR	916804	AssignmentExpression	* errorcodeptr = ERR24		908484	0		=			
ANR	916805	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916806	UnaryOperator	*		908484	0					
ANR	916807	Identifier	errorcodeptr		908484	1					
ANR	916808	Identifier	ERR24		908484	1					
ANR	916809	GotoStatement	goto FAILED ;	7022:10:229608:229619	908484	14	True				
ANR	916810	Identifier	FAILED		908484	0					
ANR	916811	BreakStatement	break ;	7024:8:229641:229646	908484	41	True				
ANR	916812	Label	case CHAR_GREATER_THAN_SIGN :	7028:8:229733:229760	908484	42	True				
ANR	916813	Identifier	CHAR_GREATER_THAN_SIGN		908484	0					
ANR	916814	ExpressionStatement	bravalue = OP_ONCE	7029:8:229804:229822	908484	43	True				
ANR	916815	AssignmentExpression	bravalue = OP_ONCE		908484	0		=			
ANR	916816	Identifier	bravalue		908484	0					
ANR	916817	Identifier	OP_ONCE		908484	1					
ANR	916818	ExpressionStatement	ptr ++	7030:8:229832:229837	908484	44	True				
ANR	916819	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916820	Identifier	ptr		908484	0					
ANR	916821	IncDec	++		908484	1					
ANR	916822	BreakStatement	break ;	7031:8:229847:229852	908484	45	True				
ANR	916823	Label	case CHAR_C :	7035:8:229939:229950	908484	46	True				
ANR	916824	Identifier	CHAR_C		908484	0					
ANR	916825	ExpressionStatement	previous_callout = code	7036:8:230019:230042	908484	47	True				
ANR	916826	AssignmentExpression	previous_callout = code		908484	0		=			
ANR	916827	Identifier	previous_callout		908484	0					
ANR	916828	Identifier	code		908484	1					
ANR	916829	ExpressionStatement	after_manual_callout = 1	7037:8:230088:230112	908484	48	True				
ANR	916830	AssignmentExpression	after_manual_callout = 1		908484	0		=			
ANR	916831	Identifier	after_manual_callout		908484	0					
ANR	916832	PrimaryExpression	1		908484	1					
ANR	916833	ExpressionStatement	* code ++ = OP_CALLOUT	7038:8:230163:230183	908484	49	True				
ANR	916834	AssignmentExpression	* code ++ = OP_CALLOUT		908484	0		=			
ANR	916835	UnaryOperationExpression	* code ++		908484	0					
ANR	916836	UnaryOperator	*		908484	0					
ANR	916837	PostIncDecOperationExpression	code ++		908484	1					
ANR	916838	Identifier	code		908484	0					
ANR	916839	IncDec	++		908484	1					
ANR	916840	Identifier	OP_CALLOUT		908484	1					
ANR	916841	CompoundStatement		2583:10:90331:90340	908484	50					
ANR	916842	IdentifierDeclStatement	int n = 0 ;	7040:10:230207:230216	908484	0	True				
ANR	916843	IdentifierDecl	n = 0		908484	0					
ANR	916844	IdentifierDeclType	int		908484	0					
ANR	916845	Identifier	n		908484	1					
ANR	916846	AssignmentExpression	n = 0		908484	2		=			
ANR	916847	Identifier	n		908484	0					
ANR	916848	PrimaryExpression	0		908484	1					
ANR	916849	ExpressionStatement	ptr ++	7041:10:230228:230233	908484	1	True				
ANR	916850	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	916851	Identifier	ptr		908484	0					
ANR	916852	IncDec	++		908484	1					
ANR	916853	WhileStatement	while ( IS_DIGIT ( * ptr ) )		908484	2					
ANR	916854	Condition	IS_DIGIT ( * ptr )	7042:16:230251:230264	908484	0	True				
ANR	916855	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	916856	Callee	IS_DIGIT		908484	0					
ANR	916857	Identifier	IS_DIGIT		908484	0					
ANR	916858	ArgumentList	* ptr		908484	1					
ANR	916859	Argument	* ptr		908484	0					
ANR	916860	UnaryOperationExpression	* ptr		908484	0					
ANR	916861	UnaryOperator	*		908484	0					
ANR	916862	Identifier	ptr		908484	1					
ANR	916863	ExpressionStatement	n = n * 10 + * ptr ++ - CHAR_0	7043:12:230279:230307	908484	1	True				
ANR	916864	AssignmentExpression	n = n * 10 + * ptr ++ - CHAR_0		908484	0		=			
ANR	916865	Identifier	n		908484	0					
ANR	916866	AdditiveExpression	n * 10 + * ptr ++ - CHAR_0		908484	1		+			
ANR	916867	MultiplicativeExpression	n * 10		908484	0		*			
ANR	916868	Identifier	n		908484	0					
ANR	916869	PrimaryExpression	10		908484	1					
ANR	916870	AdditiveExpression	* ptr ++ - CHAR_0		908484	1		-			
ANR	916871	UnaryOperationExpression	* ptr ++		908484	0					
ANR	916872	UnaryOperator	*		908484	0					
ANR	916873	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	916874	Identifier	ptr		908484	0					
ANR	916875	IncDec	++		908484	1					
ANR	916876	Identifier	CHAR_0		908484	1					
ANR	916877	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		908484	3					
ANR	916878	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	7044:14:230323:230352	908484	0	True				
ANR	916879	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	0		!=			
ANR	916880	UnaryOperationExpression	* ptr		908484	0					
ANR	916881	UnaryOperator	*		908484	0					
ANR	916882	Identifier	ptr		908484	1					
ANR	916883	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	916884	CompoundStatement		2588:12:90491:90491	908484	1					
ANR	916885	ExpressionStatement	* errorcodeptr = ERR39	7046:12:230381:230402	908484	0	True				
ANR	916886	AssignmentExpression	* errorcodeptr = ERR39		908484	0		=			
ANR	916887	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916888	UnaryOperator	*		908484	0					
ANR	916889	Identifier	errorcodeptr		908484	1					
ANR	916890	Identifier	ERR39		908484	1					
ANR	916891	GotoStatement	goto FAILED ;	7047:12:230416:230427	908484	1	True				
ANR	916892	Identifier	FAILED		908484	0					
ANR	916893	IfStatement	if ( n > 255 )		908484	4					
ANR	916894	Condition	n > 255	7049:14:230457:230463	908484	0	True				
ANR	916895	RelationalExpression	n > 255		908484	0		>			
ANR	916896	Identifier	n		908484	0					
ANR	916897	PrimaryExpression	255		908484	1					
ANR	916898	CompoundStatement		2593:12:90602:90602	908484	1					
ANR	916899	ExpressionStatement	* errorcodeptr = ERR38	7051:12:230492:230513	908484	0	True				
ANR	916900	AssignmentExpression	* errorcodeptr = ERR38		908484	0		=			
ANR	916901	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	916902	UnaryOperator	*		908484	0					
ANR	916903	Identifier	errorcodeptr		908484	1					
ANR	916904	Identifier	ERR38		908484	1					
ANR	916905	GotoStatement	goto FAILED ;	7052:12:230527:230538	908484	1	True				
ANR	916906	Identifier	FAILED		908484	0					
ANR	916907	ExpressionStatement	* code ++ = n	7054:10:230564:230575	908484	5	True				
ANR	916908	AssignmentExpression	* code ++ = n		908484	0		=			
ANR	916909	UnaryOperationExpression	* code ++		908484	0					
ANR	916910	UnaryOperator	*		908484	0					
ANR	916911	PostIncDecOperationExpression	code ++		908484	1					
ANR	916912	Identifier	code		908484	0					
ANR	916913	IncDec	++		908484	1					
ANR	916914	Identifier	n		908484	1					
ANR	916915	ExpressionStatement	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern + 1 ) )"	7055:10:230587:230635	908484	6	True				
ANR	916916	CallExpression	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern + 1 ) )"		908484	0					
ANR	916917	Callee	PUT		908484	0					
ANR	916918	Identifier	PUT		908484	0					
ANR	916919	ArgumentList	code		908484	1					
ANR	916920	Argument	code		908484	0					
ANR	916921	Identifier	code		908484	0					
ANR	916922	Argument	0		908484	1					
ANR	916923	PrimaryExpression	0		908484	0					
ANR	916924	Argument	( int ) ( ptr - cd -> start_pattern + 1 )		908484	2					
ANR	916925	CastExpression	( int ) ( ptr - cd -> start_pattern + 1 )		908484	0					
ANR	916926	CastTarget	int		908484	0					
ANR	916927	AdditiveExpression	ptr - cd -> start_pattern + 1		908484	1		-			
ANR	916928	Identifier	ptr		908484	0					
ANR	916929	AdditiveExpression	cd -> start_pattern + 1		908484	1		+			
ANR	916930	PtrMemberAccess	cd -> start_pattern		908484	0					
ANR	916931	Identifier	cd		908484	0					
ANR	916932	Identifier	start_pattern		908484	1					
ANR	916933	PrimaryExpression	1		908484	1					
ANR	916934	ExpressionStatement	"PUT ( code , LINK_SIZE , 0 )"	7056:10:230668:230691	908484	7	True				
ANR	916935	CallExpression	"PUT ( code , LINK_SIZE , 0 )"		908484	0					
ANR	916936	Callee	PUT		908484	0					
ANR	916937	Identifier	PUT		908484	0					
ANR	916938	ArgumentList	code		908484	1					
ANR	916939	Argument	code		908484	0					
ANR	916940	Identifier	code		908484	0					
ANR	916941	Argument	LINK_SIZE		908484	1					
ANR	916942	Identifier	LINK_SIZE		908484	0					
ANR	916943	Argument	0		908484	2					
ANR	916944	PrimaryExpression	0		908484	0					
ANR	916945	ExpressionStatement	code += 2 * LINK_SIZE	7057:10:230749:230770	908484	8	True				
ANR	916946	AssignmentExpression	code += 2 * LINK_SIZE		908484	0		+=			
ANR	916947	Identifier	code		908484	0					
ANR	916948	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	916949	PrimaryExpression	2		908484	0					
ANR	916950	Identifier	LINK_SIZE		908484	1					
ANR	916951	ExpressionStatement	previous = NULL	7059:8:230792:230807	908484	51	True				
ANR	916952	AssignmentExpression	previous = NULL		908484	0		=			
ANR	916953	Identifier	previous		908484	0					
ANR	916954	Identifier	NULL		908484	1					
ANR	916955	ContinueStatement	continue ;	7060:8:230817:230825	908484	52	True				
ANR	916956	Label	case CHAR_P :	7064:8:230912:230923	908484	53	True				
ANR	916957	Identifier	CHAR_P		908484	0					
ANR	916958	IfStatement	if ( * ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN )		908484	54					
ANR	916959	Condition	* ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN	7065:12:230995:231068	908484	0	True				
ANR	916960	OrExpression	* ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN		908484	0		||			
ANR	916961	EqualityExpression	* ( ++ ptr ) == CHAR_EQUALS_SIGN		908484	0		==			
ANR	916962	UnaryOperationExpression	* ( ++ ptr )		908484	0					
ANR	916963	UnaryOperator	*		908484	0					
ANR	916964	UnaryExpression	++ ptr		908484	1					
ANR	916965	IncDec	++		908484	0					
ANR	916966	Identifier	ptr		908484	1					
ANR	916967	Identifier	CHAR_EQUALS_SIGN		908484	1					
ANR	916968	EqualityExpression	* ptr == CHAR_GREATER_THAN_SIGN		908484	1		==			
ANR	916969	UnaryOperationExpression	* ptr		908484	0					
ANR	916970	UnaryOperator	*		908484	0					
ANR	916971	Identifier	ptr		908484	1					
ANR	916972	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	916973	CompoundStatement		2610:10:91235:91235	908484	1					
ANR	916974	ExpressionStatement	is_recurse = * ptr == CHAR_GREATER_THAN_SIGN	7068:10:231123:231166	908484	0	True				
ANR	916975	AssignmentExpression	is_recurse = * ptr == CHAR_GREATER_THAN_SIGN		908484	0		=			
ANR	916976	Identifier	is_recurse		908484	0					
ANR	916977	EqualityExpression	* ptr == CHAR_GREATER_THAN_SIGN		908484	1		==			
ANR	916978	UnaryOperationExpression	* ptr		908484	0					
ANR	916979	UnaryOperator	*		908484	0					
ANR	916980	Identifier	ptr		908484	1					
ANR	916981	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	916982	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	7069:10:231178:231213	908484	1	True				
ANR	916983	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		908484	0		=			
ANR	916984	Identifier	terminator		908484	0					
ANR	916985	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	916986	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7070:10:231225:231250	908484	2	True				
ANR	916987	Identifier	NAMED_REF_OR_RECURSE		908484	0					
ANR	916988	ElseStatement	else		908484	0					
ANR	916989	IfStatement	if ( * ptr != CHAR_LESS_THAN_SIGN )		908484	0					
ANR	916990	Condition	* ptr != CHAR_LESS_THAN_SIGN	7072:17:231281:231307	908484	0	True				
ANR	916991	EqualityExpression	* ptr != CHAR_LESS_THAN_SIGN		908484	0		!=			
ANR	916992	UnaryOperationExpression	* ptr		908484	0					
ANR	916993	UnaryOperator	*		908484	0					
ANR	916994	Identifier	ptr		908484	1					
ANR	916995	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	916996	CompoundStatement		2616:10:91478:91478	908484	1					
ANR	916997	ExpressionStatement	* errorcodeptr = ERR41	7074:10:231366:231387	908484	0	True				
ANR	916998	AssignmentExpression	* errorcodeptr = ERR41		908484	0		=			
ANR	916999	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917000	UnaryOperator	*		908484	0					
ANR	917001	Identifier	errorcodeptr		908484	1					
ANR	917002	Identifier	ERR41		908484	1					
ANR	917003	GotoStatement	goto FAILED ;	7075:10:231399:231410	908484	1	True				
ANR	917004	Identifier	FAILED		908484	0					
ANR	917005	Label	DEFINE_NAME :	7081:8:231569:231580	908484	55	True				
ANR	917006	Identifier	DEFINE_NAME		908484	0					
ANR	917007	Label	case CHAR_APOSTROPHE :	7082:8:231627:231647	908484	56	True				
ANR	917008	Identifier	CHAR_APOSTROPHE		908484	0					
ANR	917009	ExpressionStatement	terminator = ( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE	7083:8:231657:231751	908484	57	True				
ANR	917010	AssignmentExpression	terminator = ( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		908484	0		=			
ANR	917011	Identifier	terminator		908484	0					
ANR	917012	ConditionalExpression	( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		908484	1					
ANR	917013	Condition	* ptr == CHAR_LESS_THAN_SIGN		908484	0					
ANR	917014	EqualityExpression	* ptr == CHAR_LESS_THAN_SIGN		908484	0		==			
ANR	917015	UnaryOperationExpression	* ptr		908484	0					
ANR	917016	UnaryOperator	*		908484	0					
ANR	917017	Identifier	ptr		908484	1					
ANR	917018	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	917019	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	917020	Identifier	CHAR_APOSTROPHE		908484	2					
ANR	917021	ExpressionStatement	name = ++ ptr	7085:8:231761:231773	908484	58	True				
ANR	917022	AssignmentExpression	name = ++ ptr		908484	0		=			
ANR	917023	Identifier	name		908484	0					
ANR	917024	UnaryExpression	++ ptr		908484	1					
ANR	917025	IncDec	++		908484	0					
ANR	917026	Identifier	ptr		908484	1					
ANR	917027	IfStatement	if ( IS_DIGIT ( * ptr ) )		908484	59					
ANR	917028	Condition	IS_DIGIT ( * ptr )	7086:12:231787:231800	908484	0	True				
ANR	917029	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	917030	Callee	IS_DIGIT		908484	0					
ANR	917031	Identifier	IS_DIGIT		908484	0					
ANR	917032	ArgumentList	* ptr		908484	1					
ANR	917033	Argument	* ptr		908484	0					
ANR	917034	UnaryOperationExpression	* ptr		908484	0					
ANR	917035	UnaryOperator	*		908484	0					
ANR	917036	Identifier	ptr		908484	1					
ANR	917037	CompoundStatement		2630:10:91937:91937	908484	1					
ANR	917038	ExpressionStatement	* errorcodeptr = ERR84	7088:10:231825:231846	908484	0	True				
ANR	917039	AssignmentExpression	* errorcodeptr = ERR84		908484	0		=			
ANR	917040	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917041	UnaryOperator	*		908484	0					
ANR	917042	Identifier	errorcodeptr		908484	1					
ANR	917043	Identifier	ERR84		908484	1					
ANR	917044	GotoStatement	goto FAILED ;	7089:10:231903:231914	908484	1	True				
ANR	917045	Identifier	FAILED		908484	0					
ANR	917046	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		908484	60					
ANR	917047	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	7091:15:231943:231995	908484	0	True				
ANR	917048	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	0		&&			
ANR	917049	CallExpression	MAX_255 ( * ptr )		908484	0					
ANR	917050	Callee	MAX_255		908484	0					
ANR	917051	Identifier	MAX_255		908484	0					
ANR	917052	ArgumentList	* ptr		908484	1					
ANR	917053	Argument	* ptr		908484	0					
ANR	917054	UnaryOperationExpression	* ptr		908484	0					
ANR	917055	UnaryOperator	*		908484	0					
ANR	917056	Identifier	ptr		908484	1					
ANR	917057	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	1		!=			
ANR	917058	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		908484	0		&			
ANR	917059	ArrayIndexing	cd -> ctypes [ * ptr ]		908484	0					
ANR	917060	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	917061	Identifier	cd		908484	0					
ANR	917062	Identifier	ctypes		908484	1					
ANR	917063	UnaryOperationExpression	* ptr		908484	1					
ANR	917064	UnaryOperator	*		908484	0					
ANR	917065	Identifier	ptr		908484	1					
ANR	917066	Identifier	ctype_word		908484	1					
ANR	917067	PrimaryExpression	0		908484	1					
ANR	917068	ExpressionStatement	ptr ++	7091:70:231998:232003	908484	1	True				
ANR	917069	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	917070	Identifier	ptr		908484	0					
ANR	917071	IncDec	++		908484	1					
ANR	917072	ExpressionStatement	namelen = ( int ) ( ptr - name )	7092:8:232013:232040	908484	61	True				
ANR	917073	AssignmentExpression	namelen = ( int ) ( ptr - name )		908484	0		=			
ANR	917074	Identifier	namelen		908484	0					
ANR	917075	CastExpression	( int ) ( ptr - name )		908484	1					
ANR	917076	CastTarget	int		908484	0					
ANR	917077	AdditiveExpression	ptr - name		908484	1		-			
ANR	917078	Identifier	ptr		908484	0					
ANR	917079	Identifier	name		908484	1					
ANR	917080	IfStatement	if ( lengthptr != NULL )		908484	62					
ANR	917081	Condition	lengthptr != NULL	7100:12:232376:232392	908484	0	True				
ANR	917082	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	917083	Identifier	lengthptr		908484	0					
ANR	917084	Identifier	NULL		908484	1					
ANR	917085	CompoundStatement		2646:10:92568:92605	908484	1					
ANR	917086	IdentifierDeclStatement	named_group * ng ;	7102:10:232417:232432	908484	0	True				
ANR	917087	IdentifierDecl	* ng		908484	0					
ANR	917088	IdentifierDeclType	named_group *		908484	0					
ANR	917089	Identifier	ng		908484	1					
ANR	917090	IdentifierDeclStatement	pcre_uint32 number = cd -> bracount + 1 ;	7103:10:232444:232481	908484	1	True				
ANR	917091	IdentifierDecl	number = cd -> bracount + 1		908484	0					
ANR	917092	IdentifierDeclType	pcre_uint32		908484	0					
ANR	917093	Identifier	number		908484	1					
ANR	917094	AssignmentExpression	number = cd -> bracount + 1		908484	2		=			
ANR	917095	Identifier	number		908484	0					
ANR	917096	AdditiveExpression	cd -> bracount + 1		908484	1		+			
ANR	917097	PtrMemberAccess	cd -> bracount		908484	0					
ANR	917098	Identifier	cd		908484	0					
ANR	917099	Identifier	bracount		908484	1					
ANR	917100	PrimaryExpression	1		908484	1					
ANR	917101	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		908484	2					
ANR	917102	Condition	* ptr != ( pcre_uchar ) terminator	7105:14:232498:232527	908484	0	True				
ANR	917103	EqualityExpression	* ptr != ( pcre_uchar ) terminator		908484	0		!=			
ANR	917104	UnaryOperationExpression	* ptr		908484	0					
ANR	917105	UnaryOperator	*		908484	0					
ANR	917106	Identifier	ptr		908484	1					
ANR	917107	CastExpression	( pcre_uchar ) terminator		908484	1					
ANR	917108	CastTarget	pcre_uchar		908484	0					
ANR	917109	Identifier	terminator		908484	1					
ANR	917110	CompoundStatement		2649:12:92666:92666	908484	1					
ANR	917111	ExpressionStatement	* errorcodeptr = ERR42	7107:12:232556:232577	908484	0	True				
ANR	917112	AssignmentExpression	* errorcodeptr = ERR42		908484	0		=			
ANR	917113	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917114	UnaryOperator	*		908484	0					
ANR	917115	Identifier	errorcodeptr		908484	1					
ANR	917116	Identifier	ERR42		908484	1					
ANR	917117	GotoStatement	goto FAILED ;	7108:12:232591:232602	908484	1	True				
ANR	917118	Identifier	FAILED		908484	0					
ANR	917119	IfStatement	if ( cd -> names_found >= MAX_NAME_COUNT )		908484	3					
ANR	917120	Condition	cd -> names_found >= MAX_NAME_COUNT	7111:14:232633:232665	908484	0	True				
ANR	917121	RelationalExpression	cd -> names_found >= MAX_NAME_COUNT		908484	0		>=			
ANR	917122	PtrMemberAccess	cd -> names_found		908484	0					
ANR	917123	Identifier	cd		908484	0					
ANR	917124	Identifier	names_found		908484	1					
ANR	917125	Identifier	MAX_NAME_COUNT		908484	1					
ANR	917126	CompoundStatement		2655:12:92804:92804	908484	1					
ANR	917127	ExpressionStatement	* errorcodeptr = ERR49	7113:12:232694:232715	908484	0	True				
ANR	917128	AssignmentExpression	* errorcodeptr = ERR49		908484	0		=			
ANR	917129	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917130	UnaryOperator	*		908484	0					
ANR	917131	Identifier	errorcodeptr		908484	1					
ANR	917132	Identifier	ERR49		908484	1					
ANR	917133	GotoStatement	goto FAILED ;	7114:12:232729:232740	908484	1	True				
ANR	917134	Identifier	FAILED		908484	0					
ANR	917135	IfStatement	if ( namelen + IMM2_SIZE + 1 > cd -> name_entry_size )		908484	4					
ANR	917136	Condition	namelen + IMM2_SIZE + 1 > cd -> name_entry_size	7117:14:232771:232815	908484	0	True				
ANR	917137	RelationalExpression	namelen + IMM2_SIZE + 1 > cd -> name_entry_size		908484	0		>			
ANR	917138	AdditiveExpression	namelen + IMM2_SIZE + 1		908484	0		+			
ANR	917139	Identifier	namelen		908484	0					
ANR	917140	AdditiveExpression	IMM2_SIZE + 1		908484	1		+			
ANR	917141	Identifier	IMM2_SIZE		908484	0					
ANR	917142	PrimaryExpression	1		908484	1					
ANR	917143	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	917144	Identifier	cd		908484	0					
ANR	917145	Identifier	name_entry_size		908484	1					
ANR	917146	CompoundStatement		2661:12:92954:92954	908484	1					
ANR	917147	ExpressionStatement	cd -> name_entry_size = namelen + IMM2_SIZE + 1	7119:12:232844:232889	908484	0	True				
ANR	917148	AssignmentExpression	cd -> name_entry_size = namelen + IMM2_SIZE + 1		908484	0		=			
ANR	917149	PtrMemberAccess	cd -> name_entry_size		908484	0					
ANR	917150	Identifier	cd		908484	0					
ANR	917151	Identifier	name_entry_size		908484	1					
ANR	917152	AdditiveExpression	namelen + IMM2_SIZE + 1		908484	1		+			
ANR	917153	Identifier	namelen		908484	0					
ANR	917154	AdditiveExpression	IMM2_SIZE + 1		908484	1		+			
ANR	917155	Identifier	IMM2_SIZE		908484	0					
ANR	917156	PrimaryExpression	1		908484	1					
ANR	917157	IfStatement	if ( namelen > MAX_NAME_SIZE )		908484	1					
ANR	917158	Condition	namelen > MAX_NAME_SIZE	7120:16:232907:232929	908484	0	True				
ANR	917159	RelationalExpression	namelen > MAX_NAME_SIZE		908484	0		>			
ANR	917160	Identifier	namelen		908484	0					
ANR	917161	Identifier	MAX_NAME_SIZE		908484	1					
ANR	917162	CompoundStatement		2664:14:93070:93070	908484	1					
ANR	917163	ExpressionStatement	* errorcodeptr = ERR48	7122:14:232962:232983	908484	0	True				
ANR	917164	AssignmentExpression	* errorcodeptr = ERR48		908484	0		=			
ANR	917165	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917166	UnaryOperator	*		908484	0					
ANR	917167	Identifier	errorcodeptr		908484	1					
ANR	917168	Identifier	ERR48		908484	1					
ANR	917169	GotoStatement	goto FAILED ;	7123:14:232999:233010	908484	1	True				
ANR	917170	Identifier	FAILED		908484	0					
ANR	917171	ExpressionStatement	ng = cd -> named_groups	7134:10:233506:233527	908484	5	True				
ANR	917172	AssignmentExpression	ng = cd -> named_groups		908484	0		=			
ANR	917173	Identifier	ng		908484	0					
ANR	917174	PtrMemberAccess	cd -> named_groups		908484	1					
ANR	917175	Identifier	cd		908484	0					
ANR	917176	Identifier	named_groups		908484	1					
ANR	917177	ForStatement	"for ( i = 0 ; i < cd -> names_found ; i ++ , ng ++ )"		908484	6					
ANR	917178	ForInit	i = 0 ;	7135:15:233544:233549	908484	0	True				
ANR	917179	AssignmentExpression	i = 0		908484	0		=			
ANR	917180	Identifier	i		908484	0					
ANR	917181	PrimaryExpression	0		908484	1					
ANR	917182	Condition	i < cd -> names_found	7135:22:233551:233569	908484	1	True				
ANR	917183	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	917184	Identifier	i		908484	0					
ANR	917185	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917186	Identifier	cd		908484	0					
ANR	917187	Identifier	names_found		908484	1					
ANR	917188	Expression	"i ++ , ng ++"	7135:43:233572:233580	908484	2	True				
ANR	917189	PostIncDecOperationExpression	i ++		908484	0					
ANR	917190	Identifier	i		908484	0					
ANR	917191	IncDec	++		908484	1					
ANR	917192	PostIncDecOperationExpression	ng ++		908484	1					
ANR	917193	Identifier	ng		908484	0					
ANR	917194	IncDec	++		908484	1					
ANR	917195	CompoundStatement		2679:12:93719:93719	908484	3					
ANR	917196	IfStatement	"if ( namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0 )"		908484	0					
ANR	917197	Condition	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"	7137:16:233613:233696	908484	0	True				
ANR	917198	AndExpression	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		908484	0		&&			
ANR	917199	EqualityExpression	namelen == ng -> length		908484	0		==			
ANR	917200	Identifier	namelen		908484	0					
ANR	917201	PtrMemberAccess	ng -> length		908484	1					
ANR	917202	Identifier	ng		908484	0					
ANR	917203	Identifier	length		908484	1					
ANR	917204	EqualityExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		908484	1		==			
ANR	917205	CallExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen )"		908484	0					
ANR	917206	Callee	STRNCMP_UC_UC		908484	0					
ANR	917207	Identifier	STRNCMP_UC_UC		908484	0					
ANR	917208	ArgumentList	name		908484	1					
ANR	917209	Argument	name		908484	0					
ANR	917210	Identifier	name		908484	0					
ANR	917211	Argument	ng -> name		908484	1					
ANR	917212	PtrMemberAccess	ng -> name		908484	0					
ANR	917213	Identifier	ng		908484	0					
ANR	917214	Identifier	name		908484	1					
ANR	917215	Argument	namelen		908484	2					
ANR	917216	Identifier	namelen		908484	0					
ANR	917217	PrimaryExpression	0		908484	1					
ANR	917218	CompoundStatement		2682:14:93837:93837	908484	1					
ANR	917219	IfStatement	if ( ng -> number == number )		908484	0					
ANR	917220	Condition	ng -> number == number	7140:18:233733:233752	908484	0	True				
ANR	917221	EqualityExpression	ng -> number == number		908484	0		==			
ANR	917222	PtrMemberAccess	ng -> number		908484	0					
ANR	917223	Identifier	ng		908484	0					
ANR	917224	Identifier	number		908484	1					
ANR	917225	Identifier	number		908484	1					
ANR	917226	BreakStatement	break ;	7140:40:233755:233760	908484	1	True				
ANR	917227	IfStatement	if ( ( options & PCRE_DUPNAMES ) == 0 )		908484	1					
ANR	917228	Condition	( options & PCRE_DUPNAMES ) == 0	7141:18:233780:233809	908484	0	True				
ANR	917229	EqualityExpression	( options & PCRE_DUPNAMES ) == 0		908484	0		==			
ANR	917230	BitAndExpression	options & PCRE_DUPNAMES		908484	0		&			
ANR	917231	Identifier	options		908484	0					
ANR	917232	Identifier	PCRE_DUPNAMES		908484	1					
ANR	917233	PrimaryExpression	0		908484	1					
ANR	917234	CompoundStatement		2685:16:93952:93952	908484	1					
ANR	917235	ExpressionStatement	* errorcodeptr = ERR43	7143:16:233846:233867	908484	0	True				
ANR	917236	AssignmentExpression	* errorcodeptr = ERR43		908484	0		=			
ANR	917237	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917238	UnaryOperator	*		908484	0					
ANR	917239	Identifier	errorcodeptr		908484	1					
ANR	917240	Identifier	ERR43		908484	1					
ANR	917241	GotoStatement	goto FAILED ;	7144:16:233885:233896	908484	1	True				
ANR	917242	Identifier	FAILED		908484	0					
ANR	917243	ExpressionStatement	cd -> dupnames = TRUE	7146:14:233930:233949	908484	2	True				
ANR	917244	AssignmentExpression	cd -> dupnames = TRUE		908484	0		=			
ANR	917245	PtrMemberAccess	cd -> dupnames		908484	0					
ANR	917246	Identifier	cd		908484	0					
ANR	917247	Identifier	dupnames		908484	1					
ANR	917248	Identifier	TRUE		908484	1					
ANR	917249	ElseStatement	else		908484	0					
ANR	917250	IfStatement	if ( ng -> number == number )		908484	0					
ANR	917251	Condition	ng -> number == number	7148:21:234017:234036	908484	0	True				
ANR	917252	EqualityExpression	ng -> number == number		908484	0		==			
ANR	917253	PtrMemberAccess	ng -> number		908484	0					
ANR	917254	Identifier	ng		908484	0					
ANR	917255	Identifier	number		908484	1					
ANR	917256	Identifier	number		908484	1					
ANR	917257	CompoundStatement		2692:14:94177:94177	908484	1					
ANR	917258	ExpressionStatement	* errorcodeptr = ERR65	7150:14:234069:234090	908484	0	True				
ANR	917259	AssignmentExpression	* errorcodeptr = ERR65		908484	0		=			
ANR	917260	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917261	UnaryOperator	*		908484	0					
ANR	917262	Identifier	errorcodeptr		908484	1					
ANR	917263	Identifier	ERR65		908484	1					
ANR	917264	GotoStatement	goto FAILED ;	7151:14:234106:234117	908484	1	True				
ANR	917265	Identifier	FAILED		908484	0					
ANR	917266	IfStatement	if ( i >= cd -> names_found )		908484	7					
ANR	917267	Condition	i >= cd -> names_found	7155:14:234164:234183	908484	0	True				
ANR	917268	RelationalExpression	i >= cd -> names_found		908484	0		>=			
ANR	917269	Identifier	i		908484	0					
ANR	917270	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917271	Identifier	cd		908484	0					
ANR	917272	Identifier	names_found		908484	1					
ANR	917273	CompoundStatement		2699:12:94365:94365	908484	1					
ANR	917274	IfStatement	if ( cd -> names_found >= cd -> named_group_list_size )		908484	0					
ANR	917275	Condition	cd -> names_found >= cd -> named_group_list_size	7159:16:234314:234357	908484	0	True				
ANR	917276	RelationalExpression	cd -> names_found >= cd -> named_group_list_size		908484	0		>=			
ANR	917277	PtrMemberAccess	cd -> names_found		908484	0					
ANR	917278	Identifier	cd		908484	0					
ANR	917279	Identifier	names_found		908484	1					
ANR	917280	PtrMemberAccess	cd -> named_group_list_size		908484	1					
ANR	917281	Identifier	cd		908484	0					
ANR	917282	Identifier	named_group_list_size		908484	1					
ANR	917283	CompoundStatement		2705:14:94573:94659	908484	1					
ANR	917284	IdentifierDeclStatement	int newsize = cd -> named_group_list_size * 2 ;	7161:14:234390:234433	908484	0	True				
ANR	917285	IdentifierDecl	newsize = cd -> named_group_list_size * 2		908484	0					
ANR	917286	IdentifierDeclType	int		908484	0					
ANR	917287	Identifier	newsize		908484	1					
ANR	917288	AssignmentExpression	newsize = cd -> named_group_list_size * 2		908484	2		=			
ANR	917289	Identifier	newsize		908484	0					
ANR	917290	MultiplicativeExpression	cd -> named_group_list_size * 2		908484	1		*			
ANR	917291	PtrMemberAccess	cd -> named_group_list_size		908484	0					
ANR	917292	Identifier	cd		908484	0					
ANR	917293	Identifier	named_group_list_size		908484	1					
ANR	917294	PrimaryExpression	2		908484	1					
ANR	917295	IdentifierDeclStatement	named_group * newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) ) ;	7162:14:234449:234535	908484	1	True				
ANR	917296	IdentifierDecl	* newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		908484	0					
ANR	917297	IdentifierDeclType	named_group *		908484	0					
ANR	917298	Identifier	newspace		908484	1					
ANR	917299	AssignmentExpression	* newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		908484	2		=			
ANR	917300	Identifier	newspace		908484	0					
ANR	917301	CallExpression	( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		908484	1					
ANR	917302	Callee	PUBL ( malloc )		908484	0					
ANR	917303	CallExpression	PUBL ( malloc )		908484	0					
ANR	917304	Callee	PUBL		908484	0					
ANR	917305	Identifier	PUBL		908484	0					
ANR	917306	ArgumentList	malloc		908484	1					
ANR	917307	Argument	malloc		908484	0					
ANR	917308	Identifier	malloc		908484	0					
ANR	917309	ArgumentList	newsize * sizeof ( named_group )		908484	1					
ANR	917310	Argument	newsize * sizeof ( named_group )		908484	0					
ANR	917311	MultiplicativeExpression	newsize * sizeof ( named_group )		908484	0		*			
ANR	917312	Identifier	newsize		908484	0					
ANR	917313	SizeofExpression	sizeof ( named_group )		908484	1					
ANR	917314	Sizeof	sizeof		908484	0					
ANR	917315	SizeofOperand	named_group		908484	1					
ANR	917316	IfStatement	if ( newspace == NULL )		908484	2					
ANR	917317	Condition	newspace == NULL	7165:18:234556:234571	908484	0	True				
ANR	917318	EqualityExpression	newspace == NULL		908484	0		==			
ANR	917319	Identifier	newspace		908484	0					
ANR	917320	Identifier	NULL		908484	1					
ANR	917321	CompoundStatement		2709:16:94714:94714	908484	1					
ANR	917322	ExpressionStatement	* errorcodeptr = ERR21	7167:16:234608:234629	908484	0	True				
ANR	917323	AssignmentExpression	* errorcodeptr = ERR21		908484	0		=			
ANR	917324	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917325	UnaryOperator	*		908484	0					
ANR	917326	Identifier	errorcodeptr		908484	1					
ANR	917327	Identifier	ERR21		908484	1					
ANR	917328	GotoStatement	goto FAILED ;	7168:16:234647:234658	908484	1	True				
ANR	917329	Identifier	FAILED		908484	0					
ANR	917330	ExpressionStatement	"memcpy ( newspace , cd -> named_groups , cd -> named_group_list_size * sizeof ( named_group ) )"	7171:14:234693:234792	908484	3	True				
ANR	917331	CallExpression	"memcpy ( newspace , cd -> named_groups , cd -> named_group_list_size * sizeof ( named_group ) )"		908484	0					
ANR	917332	Callee	memcpy		908484	0					
ANR	917333	Identifier	memcpy		908484	0					
ANR	917334	ArgumentList	newspace		908484	1					
ANR	917335	Argument	newspace		908484	0					
ANR	917336	Identifier	newspace		908484	0					
ANR	917337	Argument	cd -> named_groups		908484	1					
ANR	917338	PtrMemberAccess	cd -> named_groups		908484	0					
ANR	917339	Identifier	cd		908484	0					
ANR	917340	Identifier	named_groups		908484	1					
ANR	917341	Argument	cd -> named_group_list_size * sizeof ( named_group )		908484	2					
ANR	917342	MultiplicativeExpression	cd -> named_group_list_size * sizeof ( named_group )		908484	0		*			
ANR	917343	PtrMemberAccess	cd -> named_group_list_size		908484	0					
ANR	917344	Identifier	cd		908484	0					
ANR	917345	Identifier	named_group_list_size		908484	1					
ANR	917346	SizeofExpression	sizeof ( named_group )		908484	1					
ANR	917347	Sizeof	sizeof		908484	0					
ANR	917348	SizeofOperand	named_group		908484	1					
ANR	917349	IfStatement	if ( cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE )		908484	4					
ANR	917350	Condition	cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE	7173:18:234812:234860	908484	0	True				
ANR	917351	RelationalExpression	cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE		908484	0		>			
ANR	917352	PtrMemberAccess	cd -> named_group_list_size		908484	0					
ANR	917353	Identifier	cd		908484	0					
ANR	917354	Identifier	named_group_list_size		908484	1					
ANR	917355	Identifier	NAMED_GROUP_LIST_SIZE		908484	1					
ANR	917356	ExpressionStatement	( PUBL ( free ) ) ( ( void * ) cd -> named_groups )	7174:16:234879:234917	908484	1	True				
ANR	917357	CallExpression	( PUBL ( free ) ) ( ( void * ) cd -> named_groups )		908484	0					
ANR	917358	Callee	PUBL ( free )		908484	0					
ANR	917359	CallExpression	PUBL ( free )		908484	0					
ANR	917360	Callee	PUBL		908484	0					
ANR	917361	Identifier	PUBL		908484	0					
ANR	917362	ArgumentList	free		908484	1					
ANR	917363	Argument	free		908484	0					
ANR	917364	Identifier	free		908484	0					
ANR	917365	ArgumentList	( void * ) cd -> named_groups		908484	1					
ANR	917366	Argument	( void * ) cd -> named_groups		908484	0					
ANR	917367	CastExpression	( void * ) cd -> named_groups		908484	0					
ANR	917368	CastTarget	void *		908484	0					
ANR	917369	PtrMemberAccess	cd -> named_groups		908484	1					
ANR	917370	Identifier	cd		908484	0					
ANR	917371	Identifier	named_groups		908484	1					
ANR	917372	ExpressionStatement	cd -> named_groups = newspace	7175:14:234933:234960	908484	5	True				
ANR	917373	AssignmentExpression	cd -> named_groups = newspace		908484	0		=			
ANR	917374	PtrMemberAccess	cd -> named_groups		908484	0					
ANR	917375	Identifier	cd		908484	0					
ANR	917376	Identifier	named_groups		908484	1					
ANR	917377	Identifier	newspace		908484	1					
ANR	917378	ExpressionStatement	cd -> named_group_list_size = newsize	7176:14:234976:235011	908484	6	True				
ANR	917379	AssignmentExpression	cd -> named_group_list_size = newsize		908484	0		=			
ANR	917380	PtrMemberAccess	cd -> named_group_list_size		908484	0					
ANR	917381	Identifier	cd		908484	0					
ANR	917382	Identifier	named_group_list_size		908484	1					
ANR	917383	Identifier	newsize		908484	1					
ANR	917384	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . name = name	7179:12:235042:235087	908484	1	True				
ANR	917385	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . name = name		908484	0		=			
ANR	917386	MemberAccess	cd -> named_groups [ cd -> names_found ] . name		908484	0					
ANR	917387	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		908484	0					
ANR	917388	PtrMemberAccess	cd -> named_groups		908484	0					
ANR	917389	Identifier	cd		908484	0					
ANR	917390	Identifier	named_groups		908484	1					
ANR	917391	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917392	Identifier	cd		908484	0					
ANR	917393	Identifier	names_found		908484	1					
ANR	917394	Identifier	name		908484	1					
ANR	917395	Identifier	name		908484	1					
ANR	917396	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . length = namelen	7180:12:235101:235151	908484	2	True				
ANR	917397	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . length = namelen		908484	0		=			
ANR	917398	MemberAccess	cd -> named_groups [ cd -> names_found ] . length		908484	0					
ANR	917399	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		908484	0					
ANR	917400	PtrMemberAccess	cd -> named_groups		908484	0					
ANR	917401	Identifier	cd		908484	0					
ANR	917402	Identifier	named_groups		908484	1					
ANR	917403	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917404	Identifier	cd		908484	0					
ANR	917405	Identifier	names_found		908484	1					
ANR	917406	Identifier	length		908484	1					
ANR	917407	Identifier	namelen		908484	1					
ANR	917408	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . number = number	7181:12:235165:235214	908484	3	True				
ANR	917409	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . number = number		908484	0		=			
ANR	917410	MemberAccess	cd -> named_groups [ cd -> names_found ] . number		908484	0					
ANR	917411	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		908484	0					
ANR	917412	PtrMemberAccess	cd -> named_groups		908484	0					
ANR	917413	Identifier	cd		908484	0					
ANR	917414	Identifier	named_groups		908484	1					
ANR	917415	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917416	Identifier	cd		908484	0					
ANR	917417	Identifier	names_found		908484	1					
ANR	917418	Identifier	number		908484	1					
ANR	917419	Identifier	number		908484	1					
ANR	917420	ExpressionStatement	cd -> names_found ++	7182:12:235228:235245	908484	4	True				
ANR	917421	PostIncDecOperationExpression	cd -> names_found ++		908484	0					
ANR	917422	PtrMemberAccess	cd -> names_found		908484	0					
ANR	917423	Identifier	cd		908484	0					
ANR	917424	Identifier	names_found		908484	1					
ANR	917425	IncDec	++		908484	1					
ANR	917426	ExpressionStatement	ptr ++	7186:8:235282:235287	908484	63	True				
ANR	917427	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	917428	Identifier	ptr		908484	0					
ANR	917429	IncDec	++		908484	1					
ANR	917430	GotoStatement	goto NUMBERED_GROUP ;	7187:8:235355:235374	908484	64	True				
ANR	917431	Identifier	NUMBERED_GROUP		908484	0					
ANR	917432	Label	case CHAR_AMPERSAND :	7191:8:235461:235480	908484	65	True				
ANR	917433	Identifier	CHAR_AMPERSAND		908484	0					
ANR	917434	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	7192:8:235540:235575	908484	66	True				
ANR	917435	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		908484	0		=			
ANR	917436	Identifier	terminator		908484	0					
ANR	917437	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	917438	ExpressionStatement	is_recurse = TRUE	7193:8:235585:235602	908484	67	True				
ANR	917439	AssignmentExpression	is_recurse = TRUE		908484	0		=			
ANR	917440	Identifier	is_recurse		908484	0					
ANR	917441	Identifier	TRUE		908484	1					
ANR	917442	Label	NAMED_REF_OR_RECURSE :	7202:8:236023:236043	908484	68	True				
ANR	917443	Identifier	NAMED_REF_OR_RECURSE		908484	0					
ANR	917444	ExpressionStatement	name = ++ ptr	7203:8:236053:236065	908484	69	True				
ANR	917445	AssignmentExpression	name = ++ ptr		908484	0		=			
ANR	917446	Identifier	name		908484	0					
ANR	917447	UnaryExpression	++ ptr		908484	1					
ANR	917448	IncDec	++		908484	0					
ANR	917449	Identifier	ptr		908484	1					
ANR	917450	IfStatement	if ( IS_DIGIT ( * ptr ) )		908484	70					
ANR	917451	Condition	IS_DIGIT ( * ptr )	7204:12:236079:236092	908484	0	True				
ANR	917452	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	917453	Callee	IS_DIGIT		908484	0					
ANR	917454	Identifier	IS_DIGIT		908484	0					
ANR	917455	ArgumentList	* ptr		908484	1					
ANR	917456	Argument	* ptr		908484	0					
ANR	917457	UnaryOperationExpression	* ptr		908484	0					
ANR	917458	UnaryOperator	*		908484	0					
ANR	917459	Identifier	ptr		908484	1					
ANR	917460	CompoundStatement		2748:10:96229:96229	908484	1					
ANR	917461	ExpressionStatement	* errorcodeptr = ERR84	7206:10:236117:236138	908484	0	True				
ANR	917462	AssignmentExpression	* errorcodeptr = ERR84		908484	0		=			
ANR	917463	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917464	UnaryOperator	*		908484	0					
ANR	917465	Identifier	errorcodeptr		908484	1					
ANR	917466	Identifier	ERR84		908484	1					
ANR	917467	GotoStatement	goto FAILED ;	7207:10:236195:236206	908484	1	True				
ANR	917468	Identifier	FAILED		908484	0					
ANR	917469	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		908484	71					
ANR	917470	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	7209:15:236235:236287	908484	0	True				
ANR	917471	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	0		&&			
ANR	917472	CallExpression	MAX_255 ( * ptr )		908484	0					
ANR	917473	Callee	MAX_255		908484	0					
ANR	917474	Identifier	MAX_255		908484	0					
ANR	917475	ArgumentList	* ptr		908484	1					
ANR	917476	Argument	* ptr		908484	0					
ANR	917477	UnaryOperationExpression	* ptr		908484	0					
ANR	917478	UnaryOperator	*		908484	0					
ANR	917479	Identifier	ptr		908484	1					
ANR	917480	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		908484	1		!=			
ANR	917481	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		908484	0		&			
ANR	917482	ArrayIndexing	cd -> ctypes [ * ptr ]		908484	0					
ANR	917483	PtrMemberAccess	cd -> ctypes		908484	0					
ANR	917484	Identifier	cd		908484	0					
ANR	917485	Identifier	ctypes		908484	1					
ANR	917486	UnaryOperationExpression	* ptr		908484	1					
ANR	917487	UnaryOperator	*		908484	0					
ANR	917488	Identifier	ptr		908484	1					
ANR	917489	Identifier	ctype_word		908484	1					
ANR	917490	PrimaryExpression	0		908484	1					
ANR	917491	ExpressionStatement	ptr ++	7209:70:236290:236295	908484	1	True				
ANR	917492	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	917493	Identifier	ptr		908484	0					
ANR	917494	IncDec	++		908484	1					
ANR	917495	ExpressionStatement	namelen = ( int ) ( ptr - name )	7210:8:236305:236332	908484	72	True				
ANR	917496	AssignmentExpression	namelen = ( int ) ( ptr - name )		908484	0		=			
ANR	917497	Identifier	namelen		908484	0					
ANR	917498	CastExpression	( int ) ( ptr - name )		908484	1					
ANR	917499	CastTarget	int		908484	0					
ANR	917500	AdditiveExpression	ptr - name		908484	1		-			
ANR	917501	Identifier	ptr		908484	0					
ANR	917502	Identifier	name		908484	1					
ANR	917503	IfStatement	if ( lengthptr != NULL )		908484	73					
ANR	917504	Condition	lengthptr != NULL	7219:12:236781:236797	908484	0	True				
ANR	917505	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	917506	Identifier	lengthptr		908484	0					
ANR	917507	Identifier	NULL		908484	1					
ANR	917508	CompoundStatement		2764:10:96946:96961	908484	1					
ANR	917509	IdentifierDeclStatement	named_group * ng ;	7221:10:236822:236837	908484	0	True				
ANR	917510	IdentifierDecl	* ng		908484	0					
ANR	917511	IdentifierDeclType	named_group *		908484	0					
ANR	917512	Identifier	ng		908484	1					
ANR	917513	ExpressionStatement	recno = 0	7222:10:236849:236858	908484	1	True				
ANR	917514	AssignmentExpression	recno = 0		908484	0		=			
ANR	917515	Identifier	recno		908484	0					
ANR	917516	PrimaryExpression	0		908484	1					
ANR	917517	IfStatement	if ( namelen == 0 )		908484	2					
ANR	917518	Condition	namelen == 0	7224:14:236875:236886	908484	0	True				
ANR	917519	EqualityExpression	namelen == 0		908484	0		==			
ANR	917520	Identifier	namelen		908484	0					
ANR	917521	PrimaryExpression	0		908484	1					
ANR	917522	CompoundStatement		2768:12:97025:97025	908484	1					
ANR	917523	ExpressionStatement	* errorcodeptr = ERR62	7226:12:236915:236936	908484	0	True				
ANR	917524	AssignmentExpression	* errorcodeptr = ERR62		908484	0		=			
ANR	917525	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917526	UnaryOperator	*		908484	0					
ANR	917527	Identifier	errorcodeptr		908484	1					
ANR	917528	Identifier	ERR62		908484	1					
ANR	917529	GotoStatement	goto FAILED ;	7227:12:236950:236961	908484	1	True				
ANR	917530	Identifier	FAILED		908484	0					
ANR	917531	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		908484	3					
ANR	917532	Condition	* ptr != ( pcre_uchar ) terminator	7229:14:236991:237020	908484	0	True				
ANR	917533	EqualityExpression	* ptr != ( pcre_uchar ) terminator		908484	0		!=			
ANR	917534	UnaryOperationExpression	* ptr		908484	0					
ANR	917535	UnaryOperator	*		908484	0					
ANR	917536	Identifier	ptr		908484	1					
ANR	917537	CastExpression	( pcre_uchar ) terminator		908484	1					
ANR	917538	CastTarget	pcre_uchar		908484	0					
ANR	917539	Identifier	terminator		908484	1					
ANR	917540	CompoundStatement		2773:12:97159:97159	908484	1					
ANR	917541	ExpressionStatement	* errorcodeptr = ERR42	7231:12:237049:237070	908484	0	True				
ANR	917542	AssignmentExpression	* errorcodeptr = ERR42		908484	0		=			
ANR	917543	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917544	UnaryOperator	*		908484	0					
ANR	917545	Identifier	errorcodeptr		908484	1					
ANR	917546	Identifier	ERR42		908484	1					
ANR	917547	GotoStatement	goto FAILED ;	7232:12:237084:237095	908484	1	True				
ANR	917548	Identifier	FAILED		908484	0					
ANR	917549	IfStatement	if ( namelen > MAX_NAME_SIZE )		908484	4					
ANR	917550	Condition	namelen > MAX_NAME_SIZE	7234:14:237125:237147	908484	0	True				
ANR	917551	RelationalExpression	namelen > MAX_NAME_SIZE		908484	0		>			
ANR	917552	Identifier	namelen		908484	0					
ANR	917553	Identifier	MAX_NAME_SIZE		908484	1					
ANR	917554	CompoundStatement		2778:12:97286:97286	908484	1					
ANR	917555	ExpressionStatement	* errorcodeptr = ERR48	7236:12:237176:237197	908484	0	True				
ANR	917556	AssignmentExpression	* errorcodeptr = ERR48		908484	0		=			
ANR	917557	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917558	UnaryOperator	*		908484	0					
ANR	917559	Identifier	errorcodeptr		908484	1					
ANR	917560	Identifier	ERR48		908484	1					
ANR	917561	GotoStatement	goto FAILED ;	7237:12:237211:237222	908484	1	True				
ANR	917562	Identifier	FAILED		908484	0					
ANR	917563	IfStatement	if ( ! is_recurse )		908484	5					
ANR	917564	Condition	! is_recurse	7242:14:237299:237309	908484	0	True				
ANR	917565	UnaryOperationExpression	! is_recurse		908484	0					
ANR	917566	UnaryOperator	!		908484	0					
ANR	917567	Identifier	is_recurse		908484	1					
ANR	917568	ExpressionStatement	cd -> namedrefcount ++	7242:27:237312:237331	908484	1	True				
ANR	917569	PostIncDecOperationExpression	cd -> namedrefcount ++		908484	0					
ANR	917570	PtrMemberAccess	cd -> namedrefcount		908484	0					
ANR	917571	Identifier	cd		908484	0					
ANR	917572	Identifier	namedrefcount		908484	1					
ANR	917573	IncDec	++		908484	1					
ANR	917574	ExpressionStatement	* lengthptr += IMM2_SIZE	7248:10:237530:237553	908484	6	True				
ANR	917575	AssignmentExpression	* lengthptr += IMM2_SIZE		908484	0		+=			
ANR	917576	UnaryOperationExpression	* lengthptr		908484	0					
ANR	917577	UnaryOperator	*		908484	0					
ANR	917578	Identifier	lengthptr		908484	1					
ANR	917579	Identifier	IMM2_SIZE		908484	1					
ANR	917580	ExpressionStatement	* lengthptr += 2 + 2 * LINK_SIZE	7261:10:238254:238283	908484	7	True				
ANR	917581	AssignmentExpression	* lengthptr += 2 + 2 * LINK_SIZE		908484	0		+=			
ANR	917582	UnaryOperationExpression	* lengthptr		908484	0					
ANR	917583	UnaryOperator	*		908484	0					
ANR	917584	Identifier	lengthptr		908484	1					
ANR	917585	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	917586	PrimaryExpression	2		908484	0					
ANR	917587	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	917588	PrimaryExpression	2		908484	0					
ANR	917589	Identifier	LINK_SIZE		908484	1					
ANR	917590	IfStatement	if ( cd -> dupgroups )		908484	8					
ANR	917591	Condition	cd -> dupgroups	7270:14:238733:238745	908484	0	True				
ANR	917592	PtrMemberAccess	cd -> dupgroups		908484	0					
ANR	917593	Identifier	cd		908484	0					
ANR	917594	Identifier	dupgroups		908484	1					
ANR	917595	ExpressionStatement	* lengthptr += 4 + 4 * LINK_SIZE	7270:29:238748:238777	908484	1	True				
ANR	917596	AssignmentExpression	* lengthptr += 4 + 4 * LINK_SIZE		908484	0		+=			
ANR	917597	UnaryOperationExpression	* lengthptr		908484	0					
ANR	917598	UnaryOperator	*		908484	0					
ANR	917599	Identifier	lengthptr		908484	1					
ANR	917600	AdditiveExpression	4 + 4 * LINK_SIZE		908484	1		+			
ANR	917601	PrimaryExpression	4		908484	0					
ANR	917602	MultiplicativeExpression	4 * LINK_SIZE		908484	1		*			
ANR	917603	PrimaryExpression	4		908484	0					
ANR	917604	Identifier	LINK_SIZE		908484	1					
ANR	917605	ElseStatement	else		908484	0					
ANR	917606	CompoundStatement		2821:12:99231:99231	908484	0					
ANR	917607	ExpressionStatement	ng = cd -> named_groups	7279:12:239121:239142	908484	0	True				
ANR	917608	AssignmentExpression	ng = cd -> named_groups		908484	0		=			
ANR	917609	Identifier	ng		908484	0					
ANR	917610	PtrMemberAccess	cd -> named_groups		908484	1					
ANR	917611	Identifier	cd		908484	0					
ANR	917612	Identifier	named_groups		908484	1					
ANR	917613	ForStatement	"for ( i = 0 ; i < cd -> names_found ; i ++ , ng ++ )"		908484	1					
ANR	917614	ForInit	i = 0 ;	7280:17:239161:239166	908484	0	True				
ANR	917615	AssignmentExpression	i = 0		908484	0		=			
ANR	917616	Identifier	i		908484	0					
ANR	917617	PrimaryExpression	0		908484	1					
ANR	917618	Condition	i < cd -> names_found	7280:24:239168:239186	908484	1	True				
ANR	917619	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	917620	Identifier	i		908484	0					
ANR	917621	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917622	Identifier	cd		908484	0					
ANR	917623	Identifier	names_found		908484	1					
ANR	917624	Expression	"i ++ , ng ++"	7280:45:239189:239197	908484	2	True				
ANR	917625	PostIncDecOperationExpression	i ++		908484	0					
ANR	917626	Identifier	i		908484	0					
ANR	917627	IncDec	++		908484	1					
ANR	917628	PostIncDecOperationExpression	ng ++		908484	1					
ANR	917629	Identifier	ng		908484	0					
ANR	917630	IncDec	++		908484	1					
ANR	917631	CompoundStatement		2824:14:99338:99338	908484	3					
ANR	917632	IfStatement	"if ( namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0 )"		908484	0					
ANR	917633	Condition	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"	7282:18:239234:239319	908484	0	True				
ANR	917634	AndExpression	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		908484	0		&&			
ANR	917635	EqualityExpression	namelen == ng -> length		908484	0		==			
ANR	917636	Identifier	namelen		908484	0					
ANR	917637	PtrMemberAccess	ng -> length		908484	1					
ANR	917638	Identifier	ng		908484	0					
ANR	917639	Identifier	length		908484	1					
ANR	917640	EqualityExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		908484	1		==			
ANR	917641	CallExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen )"		908484	0					
ANR	917642	Callee	STRNCMP_UC_UC		908484	0					
ANR	917643	Identifier	STRNCMP_UC_UC		908484	0					
ANR	917644	ArgumentList	name		908484	1					
ANR	917645	Argument	name		908484	0					
ANR	917646	Identifier	name		908484	0					
ANR	917647	Argument	ng -> name		908484	1					
ANR	917648	PtrMemberAccess	ng -> name		908484	0					
ANR	917649	Identifier	ng		908484	0					
ANR	917650	Identifier	name		908484	1					
ANR	917651	Argument	namelen		908484	2					
ANR	917652	Identifier	namelen		908484	0					
ANR	917653	PrimaryExpression	0		908484	1					
ANR	917654	CompoundStatement		2828:16:99480:99496	908484	1					
ANR	917655	IdentifierDeclStatement	open_capitem * oc ;	7285:16:239356:239372	908484	0	True				
ANR	917656	IdentifierDecl	* oc		908484	0					
ANR	917657	IdentifierDeclType	open_capitem *		908484	0					
ANR	917658	Identifier	oc		908484	1					
ANR	917659	ExpressionStatement	recno = ng -> number	7286:16:239390:239408	908484	1	True				
ANR	917660	AssignmentExpression	recno = ng -> number		908484	0		=			
ANR	917661	Identifier	recno		908484	0					
ANR	917662	PtrMemberAccess	ng -> number		908484	1					
ANR	917663	Identifier	ng		908484	0					
ANR	917664	Identifier	number		908484	1					
ANR	917665	IfStatement	if ( is_recurse )		908484	2					
ANR	917666	Condition	is_recurse	7287:20:239430:239439	908484	0	True				
ANR	917667	Identifier	is_recurse		908484	0					
ANR	917668	BreakStatement	break ;	7287:32:239442:239447	908484	1	True				
ANR	917669	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		908484	3					
ANR	917670	ForInit	oc = cd -> open_caps ;	7288:21:239470:239488	908484	0	True				
ANR	917671	AssignmentExpression	oc = cd -> open_caps		908484	0		=			
ANR	917672	Identifier	oc		908484	0					
ANR	917673	PtrMemberAccess	cd -> open_caps		908484	1					
ANR	917674	Identifier	cd		908484	0					
ANR	917675	Identifier	open_caps		908484	1					
ANR	917676	Condition	oc != NULL	7288:41:239490:239499	908484	1	True				
ANR	917677	EqualityExpression	oc != NULL		908484	0		!=			
ANR	917678	Identifier	oc		908484	0					
ANR	917679	Identifier	NULL		908484	1					
ANR	917680	AssignmentExpression	oc = oc -> next	7288:53:239502:239514	908484	2	True	=			
ANR	917681	Identifier	oc		908484	0					
ANR	917682	PtrMemberAccess	oc -> next		908484	1					
ANR	917683	Identifier	oc		908484	0					
ANR	917684	Identifier	next		908484	1					
ANR	917685	CompoundStatement		2832:18:99659:99659	908484	3					
ANR	917686	IfStatement	if ( oc -> number == recno )		908484	0					
ANR	917687	Condition	oc -> number == recno	7290:22:239559:239577	908484	0	True				
ANR	917688	EqualityExpression	oc -> number == recno		908484	0		==			
ANR	917689	PtrMemberAccess	oc -> number		908484	0					
ANR	917690	Identifier	oc		908484	0					
ANR	917691	Identifier	number		908484	1					
ANR	917692	Identifier	recno		908484	1					
ANR	917693	CompoundStatement		2834:20:99724:99724	908484	1					
ANR	917694	ExpressionStatement	oc -> flag = TRUE	7292:20:239622:239637	908484	0	True				
ANR	917695	AssignmentExpression	oc -> flag = TRUE		908484	0		=			
ANR	917696	PtrMemberAccess	oc -> flag		908484	0					
ANR	917697	Identifier	oc		908484	0					
ANR	917698	Identifier	flag		908484	1					
ANR	917699	Identifier	TRUE		908484	1					
ANR	917700	BreakStatement	break ;	7293:20:239659:239664	908484	1	True				
ANR	917701	ElseStatement	else		908484	0					
ANR	917702	CompoundStatement		2850:10:100214:100214	908484	0					
ANR	917703	ExpressionStatement	slot = cd -> name_table	7308:10:240102:240123	908484	0	True				
ANR	917704	AssignmentExpression	slot = cd -> name_table		908484	0		=			
ANR	917705	Identifier	slot		908484	0					
ANR	917706	PtrMemberAccess	cd -> name_table		908484	1					
ANR	917707	Identifier	cd		908484	0					
ANR	917708	Identifier	name_table		908484	1					
ANR	917709	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		908484	1					
ANR	917710	ForInit	i = 0 ;	7309:15:240140:240145	908484	0	True				
ANR	917711	AssignmentExpression	i = 0		908484	0		=			
ANR	917712	Identifier	i		908484	0					
ANR	917713	PrimaryExpression	0		908484	1					
ANR	917714	Condition	i < cd -> names_found	7309:22:240147:240165	908484	1	True				
ANR	917715	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	917716	Identifier	i		908484	0					
ANR	917717	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917718	Identifier	cd		908484	0					
ANR	917719	Identifier	names_found		908484	1					
ANR	917720	PostIncDecOperationExpression	i ++	7309:43:240168:240170	908484	2	True				
ANR	917721	Identifier	i		908484	0					
ANR	917722	IncDec	++		908484	1					
ANR	917723	CompoundStatement		2853:12:100309:100309	908484	3					
ANR	917724	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0 )"		908484	0					
ANR	917725	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0"	7311:16:240203:240299	908484	0	True				
ANR	917726	AndExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0"		908484	0		&&			
ANR	917727	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"		908484	0		==			
ANR	917728	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		908484	0					
ANR	917729	Callee	STRNCMP_UC_UC		908484	0					
ANR	917730	Identifier	STRNCMP_UC_UC		908484	0					
ANR	917731	ArgumentList	name		908484	1					
ANR	917732	Argument	name		908484	0					
ANR	917733	Identifier	name		908484	0					
ANR	917734	Argument	slot + IMM2_SIZE		908484	1					
ANR	917735	AdditiveExpression	slot + IMM2_SIZE		908484	0		+			
ANR	917736	Identifier	slot		908484	0					
ANR	917737	Identifier	IMM2_SIZE		908484	1					
ANR	917738	Argument	namelen		908484	2					
ANR	917739	Identifier	namelen		908484	0					
ANR	917740	PrimaryExpression	0		908484	1					
ANR	917741	EqualityExpression	slot [ IMM2_SIZE + namelen ] == 0		908484	1		==			
ANR	917742	ArrayIndexing	slot [ IMM2_SIZE + namelen ]		908484	0					
ANR	917743	Identifier	slot		908484	0					
ANR	917744	AdditiveExpression	IMM2_SIZE + namelen		908484	1		+			
ANR	917745	Identifier	IMM2_SIZE		908484	0					
ANR	917746	Identifier	namelen		908484	1					
ANR	917747	PrimaryExpression	0		908484	1					
ANR	917748	BreakStatement	break ;	7313:14:240316:240321	908484	1	True				
ANR	917749	ExpressionStatement	slot += cd -> name_entry_size	7314:12:240335:240362	908484	1	True				
ANR	917750	AssignmentExpression	slot += cd -> name_entry_size		908484	0		+=			
ANR	917751	Identifier	slot		908484	0					
ANR	917752	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	917753	Identifier	cd		908484	0					
ANR	917754	Identifier	name_entry_size		908484	1					
ANR	917755	IfStatement	if ( i < cd -> names_found )		908484	2					
ANR	917756	Condition	i < cd -> names_found	7317:14:240393:240411	908484	0	True				
ANR	917757	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	917758	Identifier	i		908484	0					
ANR	917759	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917760	Identifier	cd		908484	0					
ANR	917761	Identifier	names_found		908484	1					
ANR	917762	CompoundStatement		2861:12:100550:100550	908484	1					
ANR	917763	ExpressionStatement	"recno = GET2 ( slot , 0 )"	7319:12:240440:240461	908484	0	True				
ANR	917764	AssignmentExpression	"recno = GET2 ( slot , 0 )"		908484	0		=			
ANR	917765	Identifier	recno		908484	0					
ANR	917766	CallExpression	"GET2 ( slot , 0 )"		908484	1					
ANR	917767	Callee	GET2		908484	0					
ANR	917768	Identifier	GET2		908484	0					
ANR	917769	ArgumentList	slot		908484	1					
ANR	917770	Argument	slot		908484	0					
ANR	917771	Identifier	slot		908484	0					
ANR	917772	Argument	0		908484	1					
ANR	917773	PrimaryExpression	0		908484	0					
ANR	917774	ElseStatement	else		908484	0					
ANR	917775	CompoundStatement		2865:12:100628:100628	908484	0					
ANR	917776	ExpressionStatement	* errorcodeptr = ERR15	7323:12:240518:240539	908484	0	True				
ANR	917777	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	917778	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	917779	UnaryOperator	*		908484	0					
ANR	917780	Identifier	errorcodeptr		908484	1					
ANR	917781	Identifier	ERR15		908484	1					
ANR	917782	GotoStatement	goto FAILED ;	7324:12:240553:240564	908484	1	True				
ANR	917783	Identifier	FAILED		908484	0					
ANR	917784	IfStatement	if ( is_recurse )		908484	74					
ANR	917785	Condition	is_recurse	7331:12:240720:240729	908484	0	True				
ANR	917786	Identifier	is_recurse		908484	0					
ANR	917787	GotoStatement	goto HANDLE_RECURSION ;	7331:24:240732:240753	908484	1	True				
ANR	917788	Identifier	HANDLE_RECURSION		908484	0					
ANR	917789	IfStatement	if ( lengthptr == NULL && cd -> dupnames )		908484	75					
ANR	917790	Condition	lengthptr == NULL && cd -> dupnames	7336:12:240888:240920	908484	0	True				
ANR	917791	AndExpression	lengthptr == NULL && cd -> dupnames		908484	0		&&			
ANR	917792	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	917793	Identifier	lengthptr		908484	0					
ANR	917794	Identifier	NULL		908484	1					
ANR	917795	PtrMemberAccess	cd -> dupnames		908484	1					
ANR	917796	Identifier	cd		908484	0					
ANR	917797	Identifier	dupnames		908484	1					
ANR	917798	CompoundStatement		2883:10:101128:101174	908484	1					
ANR	917799	IdentifierDeclStatement	int count = 1 ;	7338:10:240945:240958	908484	0	True				
ANR	917800	IdentifierDecl	count = 1		908484	0					
ANR	917801	IdentifierDeclType	int		908484	0					
ANR	917802	Identifier	count		908484	1					
ANR	917803	AssignmentExpression	count = 1		908484	2		=			
ANR	917804	Identifier	count		908484	0					
ANR	917805	PrimaryExpression	1		908484	1					
ANR	917806	IdentifierDeclStatement	unsigned int index = i ;	7339:10:240970:240992	908484	1	True				
ANR	917807	IdentifierDecl	index = i		908484	0					
ANR	917808	IdentifierDeclType	unsigned int		908484	0					
ANR	917809	Identifier	index		908484	1					
ANR	917810	AssignmentExpression	index = i		908484	2		=			
ANR	917811	Identifier	i		908484	0					
ANR	917812	Identifier	i		908484	1					
ANR	917813	IdentifierDeclStatement	pcre_uchar * cslot = slot + cd -> name_entry_size ;	7340:10:241004:241050	908484	2	True				
ANR	917814	IdentifierDecl	* cslot = slot + cd -> name_entry_size		908484	0					
ANR	917815	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	917816	Identifier	cslot		908484	1					
ANR	917817	AssignmentExpression	* cslot = slot + cd -> name_entry_size		908484	2		=			
ANR	917818	Identifier	cslot		908484	0					
ANR	917819	AdditiveExpression	slot + cd -> name_entry_size		908484	1		+			
ANR	917820	Identifier	slot		908484	0					
ANR	917821	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	917822	Identifier	cd		908484	0					
ANR	917823	Identifier	name_entry_size		908484	1					
ANR	917824	ForStatement	for ( i ++ ; i < cd -> names_found ; i ++ )		908484	3					
ANR	917825	ForInit	i ++ ;	7342:15:241068:241071	908484	0	True				
ANR	917826	PostIncDecOperationExpression	i ++		908484	0					
ANR	917827	Identifier	i		908484	0					
ANR	917828	IncDec	++		908484	1					
ANR	917829	Condition	i < cd -> names_found	7342:20:241073:241091	908484	1	True				
ANR	917830	RelationalExpression	i < cd -> names_found		908484	0		<			
ANR	917831	Identifier	i		908484	0					
ANR	917832	PtrMemberAccess	cd -> names_found		908484	1					
ANR	917833	Identifier	cd		908484	0					
ANR	917834	Identifier	names_found		908484	1					
ANR	917835	PostIncDecOperationExpression	i ++	7342:41:241094:241096	908484	2	True				
ANR	917836	Identifier	i		908484	0					
ANR	917837	IncDec	++		908484	1					
ANR	917838	CompoundStatement		2886:12:101235:101235	908484	3					
ANR	917839	IfStatement	"if ( STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0 )"		908484	0					
ANR	917840	Condition	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0"	7344:16:241129:241182	908484	0	True				
ANR	917841	EqualityExpression	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0"		908484	0		!=			
ANR	917842	CallExpression	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE )"		908484	0					
ANR	917843	Callee	STRCMP_UC_UC		908484	0					
ANR	917844	Identifier	STRCMP_UC_UC		908484	0					
ANR	917845	ArgumentList	slot + IMM2_SIZE		908484	1					
ANR	917846	Argument	slot + IMM2_SIZE		908484	0					
ANR	917847	AdditiveExpression	slot + IMM2_SIZE		908484	0		+			
ANR	917848	Identifier	slot		908484	0					
ANR	917849	Identifier	IMM2_SIZE		908484	1					
ANR	917850	Argument	cslot + IMM2_SIZE		908484	1					
ANR	917851	AdditiveExpression	cslot + IMM2_SIZE		908484	0		+			
ANR	917852	Identifier	cslot		908484	0					
ANR	917853	Identifier	IMM2_SIZE		908484	1					
ANR	917854	PrimaryExpression	0		908484	1					
ANR	917855	BreakStatement	break ;	7344:72:241185:241190	908484	1	True				
ANR	917856	ExpressionStatement	count ++	7345:12:241204:241211	908484	1	True				
ANR	917857	PostIncDecOperationExpression	count ++		908484	0					
ANR	917858	Identifier	count		908484	0					
ANR	917859	IncDec	++		908484	1					
ANR	917860	ExpressionStatement	cslot += cd -> name_entry_size	7346:12:241225:241253	908484	2	True				
ANR	917861	AssignmentExpression	cslot += cd -> name_entry_size		908484	0		+=			
ANR	917862	Identifier	cslot		908484	0					
ANR	917863	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	917864	Identifier	cd		908484	0					
ANR	917865	Identifier	name_entry_size		908484	1					
ANR	917866	IfStatement	if ( count > 1 )		908484	4					
ANR	917867	Condition	count > 1	7349:14:241284:241292	908484	0	True				
ANR	917868	RelationalExpression	count > 1		908484	0		>			
ANR	917869	Identifier	count		908484	0					
ANR	917870	PrimaryExpression	1		908484	1					
ANR	917871	CompoundStatement		2893:12:101431:101431	908484	1					
ANR	917872	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	0					
ANR	917873	Condition	firstcharflags == REQ_UNSET	7351:16:241325:241351	908484	0	True				
ANR	917874	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	917875	Identifier	firstcharflags		908484	0					
ANR	917876	Identifier	REQ_UNSET		908484	1					
ANR	917877	ExpressionStatement	firstcharflags = REQ_NONE	7351:45:241354:241379	908484	1	True				
ANR	917878	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	917879	Identifier	firstcharflags		908484	0					
ANR	917880	Identifier	REQ_NONE		908484	1					
ANR	917881	ExpressionStatement	previous = code	7352:12:241393:241408	908484	1	True				
ANR	917882	AssignmentExpression	previous = code		908484	0		=			
ANR	917883	Identifier	previous		908484	0					
ANR	917884	Identifier	code		908484	1					
ANR	917885	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	7353:12:241422:241469	908484	2	True				
ANR	917886	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	917887	Identifier	item_hwm_offset		908484	0					
ANR	917888	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	917889	PtrMemberAccess	cd -> hwm		908484	0					
ANR	917890	Identifier	cd		908484	0					
ANR	917891	Identifier	hwm		908484	1					
ANR	917892	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	917893	Identifier	cd		908484	0					
ANR	917894	Identifier	start_workspace		908484	1					
ANR	917895	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF	7354:12:241483:241547	908484	3	True				
ANR	917896	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF		908484	0		=			
ANR	917897	UnaryOperationExpression	* code ++		908484	0					
ANR	917898	UnaryOperator	*		908484	0					
ANR	917899	PostIncDecOperationExpression	code ++		908484	1					
ANR	917900	Identifier	code		908484	0					
ANR	917901	IncDec	++		908484	1					
ANR	917902	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF		908484	1					
ANR	917903	Condition	( options & PCRE_CASELESS ) != 0		908484	0					
ANR	917904	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	917905	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	917906	Identifier	options		908484	0					
ANR	917907	Identifier	PCRE_CASELESS		908484	1					
ANR	917908	PrimaryExpression	0		908484	1					
ANR	917909	Identifier	OP_DNREFI		908484	1					
ANR	917910	Identifier	OP_DNREF		908484	2					
ANR	917911	ExpressionStatement	"PUT2INC ( code , 0 , index )"	7355:12:241561:241584	908484	4	True				
ANR	917912	CallExpression	"PUT2INC ( code , 0 , index )"		908484	0					
ANR	917913	Callee	PUT2INC		908484	0					
ANR	917914	Identifier	PUT2INC		908484	0					
ANR	917915	ArgumentList	code		908484	1					
ANR	917916	Argument	code		908484	0					
ANR	917917	Identifier	code		908484	0					
ANR	917918	Argument	0		908484	1					
ANR	917919	PrimaryExpression	0		908484	0					
ANR	917920	Argument	index		908484	2					
ANR	917921	Identifier	index		908484	0					
ANR	917922	ExpressionStatement	"PUT2INC ( code , 0 , count )"	7356:12:241598:241621	908484	5	True				
ANR	917923	CallExpression	"PUT2INC ( code , 0 , count )"		908484	0					
ANR	917924	Callee	PUT2INC		908484	0					
ANR	917925	Identifier	PUT2INC		908484	0					
ANR	917926	ArgumentList	code		908484	1					
ANR	917927	Argument	code		908484	0					
ANR	917928	Identifier	code		908484	0					
ANR	917929	Argument	0		908484	1					
ANR	917930	PrimaryExpression	0		908484	0					
ANR	917931	Argument	count		908484	2					
ANR	917932	Identifier	count		908484	0					
ANR	917933	ForStatement	for ( ; slot < cslot ; slot += cd -> name_entry_size )		908484	6					
ANR	917934	Condition	slot < cslot	7360:19:241705:241716	908484	0	True				
ANR	917935	RelationalExpression	slot < cslot		908484	0		<			
ANR	917936	Identifier	slot		908484	0					
ANR	917937	Identifier	cslot		908484	1					
ANR	917938	AssignmentExpression	slot += cd -> name_entry_size	7360:33:241719:241745	908484	1	True	+=			
ANR	917939	Identifier	slot		908484	0					
ANR	917940	PtrMemberAccess	cd -> name_entry_size		908484	1					
ANR	917941	Identifier	cd		908484	0					
ANR	917942	Identifier	name_entry_size		908484	1					
ANR	917943	CompoundStatement		2905:14:101902:101918	908484	2					
ANR	917944	IdentifierDeclStatement	open_capitem * oc ;	7362:14:241778:241794	908484	0	True				
ANR	917945	IdentifierDecl	* oc		908484	0					
ANR	917946	IdentifierDeclType	open_capitem *		908484	0					
ANR	917947	Identifier	oc		908484	1					
ANR	917948	ExpressionStatement	"recno = GET2 ( slot , 0 )"	7363:14:241810:241831	908484	1	True				
ANR	917949	AssignmentExpression	"recno = GET2 ( slot , 0 )"		908484	0		=			
ANR	917950	Identifier	recno		908484	0					
ANR	917951	CallExpression	"GET2 ( slot , 0 )"		908484	1					
ANR	917952	Callee	GET2		908484	0					
ANR	917953	Identifier	GET2		908484	0					
ANR	917954	ArgumentList	slot		908484	1					
ANR	917955	Argument	slot		908484	0					
ANR	917956	Identifier	slot		908484	0					
ANR	917957	Argument	0		908484	1					
ANR	917958	PrimaryExpression	0		908484	0					
ANR	917959	ExpressionStatement	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1	7364:14:241847:241896	908484	2	True				
ANR	917960	AssignmentExpression	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1		908484	0		|=			
ANR	917961	PtrMemberAccess	cd -> backref_map		908484	0					
ANR	917962	Identifier	cd		908484	0					
ANR	917963	Identifier	backref_map		908484	1					
ANR	917964	ConditionalExpression	( recno < 32 ) ? ( 1 << recno ) : 1		908484	1					
ANR	917965	Condition	recno < 32		908484	0					
ANR	917966	RelationalExpression	recno < 32		908484	0		<			
ANR	917967	Identifier	recno		908484	0					
ANR	917968	PrimaryExpression	32		908484	1					
ANR	917969	ShiftExpression	1 << recno		908484	1		<<			
ANR	917970	PrimaryExpression	1		908484	0					
ANR	917971	Identifier	recno		908484	1					
ANR	917972	PrimaryExpression	1		908484	2					
ANR	917973	IfStatement	if ( recno > cd -> top_backref )		908484	3					
ANR	917974	Condition	recno > cd -> top_backref	7365:18:241916:241938	908484	0	True				
ANR	917975	RelationalExpression	recno > cd -> top_backref		908484	0		>			
ANR	917976	Identifier	recno		908484	0					
ANR	917977	PtrMemberAccess	cd -> top_backref		908484	1					
ANR	917978	Identifier	cd		908484	0					
ANR	917979	Identifier	top_backref		908484	1					
ANR	917980	ExpressionStatement	cd -> top_backref = recno	7365:43:241941:241964	908484	1	True				
ANR	917981	AssignmentExpression	cd -> top_backref = recno		908484	0		=			
ANR	917982	PtrMemberAccess	cd -> top_backref		908484	0					
ANR	917983	Identifier	cd		908484	0					
ANR	917984	Identifier	top_backref		908484	1					
ANR	917985	Identifier	recno		908484	1					
ANR	917986	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		908484	4					
ANR	917987	ForInit	oc = cd -> open_caps ;	7371:19:242189:242207	908484	0	True				
ANR	917988	AssignmentExpression	oc = cd -> open_caps		908484	0		=			
ANR	917989	Identifier	oc		908484	0					
ANR	917990	PtrMemberAccess	cd -> open_caps		908484	1					
ANR	917991	Identifier	cd		908484	0					
ANR	917992	Identifier	open_caps		908484	1					
ANR	917993	Condition	oc != NULL	7371:39:242209:242218	908484	1	True				
ANR	917994	EqualityExpression	oc != NULL		908484	0		!=			
ANR	917995	Identifier	oc		908484	0					
ANR	917996	Identifier	NULL		908484	1					
ANR	917997	AssignmentExpression	oc = oc -> next	7371:51:242221:242233	908484	2	True	=			
ANR	917998	Identifier	oc		908484	0					
ANR	917999	PtrMemberAccess	oc -> next		908484	1					
ANR	918000	Identifier	oc		908484	0					
ANR	918001	Identifier	next		908484	1					
ANR	918002	CompoundStatement		2915:16:102376:102376	908484	3					
ANR	918003	IfStatement	if ( oc -> number == recno )		908484	0					
ANR	918004	Condition	oc -> number == recno	7373:20:242274:242292	908484	0	True				
ANR	918005	EqualityExpression	oc -> number == recno		908484	0		==			
ANR	918006	PtrMemberAccess	oc -> number		908484	0					
ANR	918007	Identifier	oc		908484	0					
ANR	918008	Identifier	number		908484	1					
ANR	918009	Identifier	recno		908484	1					
ANR	918010	CompoundStatement		2917:18:102437:102437	908484	1					
ANR	918011	ExpressionStatement	oc -> flag = TRUE	7375:18:242333:242348	908484	0	True				
ANR	918012	AssignmentExpression	oc -> flag = TRUE		908484	0		=			
ANR	918013	PtrMemberAccess	oc -> flag		908484	0					
ANR	918014	Identifier	oc		908484	0					
ANR	918015	Identifier	flag		908484	1					
ANR	918016	Identifier	TRUE		908484	1					
ANR	918017	BreakStatement	break ;	7376:18:242368:242373	908484	1	True				
ANR	918018	ContinueStatement	continue ;	7381:12:242442:242450	908484	7	True				
ANR	918019	GotoStatement	goto HANDLE_REFERENCE ;	7387:8:242572:242593	908484	76	True				
ANR	918020	Identifier	HANDLE_REFERENCE		908484	0					
ANR	918021	Label	case CHAR_R :	7391:8:242680:242691	908484	77	True				
ANR	918022	Identifier	CHAR_R		908484	0					
ANR	918023	ExpressionStatement	recno = 0	7392:8:242744:242753	908484	78	True				
ANR	918024	AssignmentExpression	recno = 0		908484	0		=			
ANR	918025	Identifier	recno		908484	0					
ANR	918026	PrimaryExpression	0		908484	1					
ANR	918027	IfStatement	if ( * ( ++ ptr ) != CHAR_RIGHT_PARENTHESIS )		908484	79					
ANR	918028	Condition	* ( ++ ptr ) != CHAR_RIGHT_PARENTHESIS	7393:12:242767:242800	908484	0	True				
ANR	918029	EqualityExpression	* ( ++ ptr ) != CHAR_RIGHT_PARENTHESIS		908484	0		!=			
ANR	918030	UnaryOperationExpression	* ( ++ ptr )		908484	0					
ANR	918031	UnaryOperator	*		908484	0					
ANR	918032	UnaryExpression	++ ptr		908484	1					
ANR	918033	IncDec	++		908484	0					
ANR	918034	Identifier	ptr		908484	1					
ANR	918035	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	918036	CompoundStatement		2937:10:102937:102937	908484	1					
ANR	918037	ExpressionStatement	* errorcodeptr = ERR29	7395:10:242825:242846	908484	0	True				
ANR	918038	AssignmentExpression	* errorcodeptr = ERR29		908484	0		=			
ANR	918039	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918040	UnaryOperator	*		908484	0					
ANR	918041	Identifier	errorcodeptr		908484	1					
ANR	918042	Identifier	ERR29		908484	1					
ANR	918043	GotoStatement	goto FAILED ;	7396:10:242858:242869	908484	1	True				
ANR	918044	Identifier	FAILED		908484	0					
ANR	918045	GotoStatement	goto HANDLE_RECURSION ;	7398:8:242891:242912	908484	80	True				
ANR	918046	Identifier	HANDLE_RECURSION		908484	0					
ANR	918047	Label	case CHAR_MINUS :	7402:8:242999:243014	908484	81	True				
ANR	918048	Identifier	CHAR_MINUS		908484	0					
ANR	918049	Label	case CHAR_PLUS :	7402:25:243016:243030	908484	82	True				
ANR	918050	Identifier	CHAR_PLUS		908484	0					
ANR	918051	Label	case CHAR_0 :	7403:8:243071:243082	908484	83	True				
ANR	918052	Identifier	CHAR_0		908484	0					
ANR	918053	Label	case CHAR_1 :	7403:21:243084:243095	908484	84	True				
ANR	918054	Identifier	CHAR_1		908484	0					
ANR	918055	Label	case CHAR_2 :	7403:34:243097:243108	908484	85	True				
ANR	918056	Identifier	CHAR_2		908484	0					
ANR	918057	Label	case CHAR_3 :	7403:47:243110:243121	908484	86	True				
ANR	918058	Identifier	CHAR_3		908484	0					
ANR	918059	Label	case CHAR_4 :	7403:60:243123:243134	908484	87	True				
ANR	918060	Identifier	CHAR_4		908484	0					
ANR	918061	Label	case CHAR_5 :	7404:8:243144:243155	908484	88	True				
ANR	918062	Identifier	CHAR_5		908484	0					
ANR	918063	Label	case CHAR_6 :	7404:21:243157:243168	908484	89	True				
ANR	918064	Identifier	CHAR_6		908484	0					
ANR	918065	Label	case CHAR_7 :	7404:34:243170:243181	908484	90	True				
ANR	918066	Identifier	CHAR_7		908484	0					
ANR	918067	Label	case CHAR_8 :	7404:47:243183:243194	908484	91	True				
ANR	918068	Identifier	CHAR_8		908484	0					
ANR	918069	Label	case CHAR_9 :	7404:60:243196:243207	908484	92	True				
ANR	918070	Identifier	CHAR_9		908484	0					
ANR	918071	CompoundStatement		2949:10:103355:103379	908484	93					
ANR	918072	IdentifierDeclStatement	const pcre_uchar * called ;	7406:10:243231:243255	908484	0	True				
ANR	918073	IdentifierDecl	* called		908484	0					
ANR	918074	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	918075	Identifier	called		908484	1					
ANR	918076	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	7407:10:243267:243302	908484	1	True				
ANR	918077	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		908484	0		=			
ANR	918078	Identifier	terminator		908484	0					
ANR	918079	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	918080	Label	HANDLE_NUMERICAL_RECURSION :	7415:10:243646:243672	908484	2	True				
ANR	918081	Identifier	HANDLE_NUMERICAL_RECURSION		908484	0					
ANR	918082	IfStatement	if ( ( refsign = * ptr ) == CHAR_PLUS )		908484	3					
ANR	918083	Condition	( refsign = * ptr ) == CHAR_PLUS	7417:14:243689:243717	908484	0	True				
ANR	918084	EqualityExpression	( refsign = * ptr ) == CHAR_PLUS		908484	0		==			
ANR	918085	AssignmentExpression	refsign = * ptr		908484	0		=			
ANR	918086	Identifier	refsign		908484	0					
ANR	918087	UnaryOperationExpression	* ptr		908484	1					
ANR	918088	UnaryOperator	*		908484	0					
ANR	918089	Identifier	ptr		908484	1					
ANR	918090	Identifier	CHAR_PLUS		908484	1					
ANR	918091	CompoundStatement		2961:12:103856:103856	908484	1					
ANR	918092	ExpressionStatement	ptr ++	7419:12:243746:243751	908484	0	True				
ANR	918093	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	918094	Identifier	ptr		908484	0					
ANR	918095	IncDec	++		908484	1					
ANR	918096	IfStatement	if ( ! IS_DIGIT ( * ptr ) )		908484	1					
ANR	918097	Condition	! IS_DIGIT ( * ptr )	7420:16:243769:243783	908484	0	True				
ANR	918098	UnaryOperationExpression	! IS_DIGIT ( * ptr )		908484	0					
ANR	918099	UnaryOperator	!		908484	0					
ANR	918100	CallExpression	IS_DIGIT ( * ptr )		908484	1					
ANR	918101	Callee	IS_DIGIT		908484	0					
ANR	918102	Identifier	IS_DIGIT		908484	0					
ANR	918103	ArgumentList	* ptr		908484	1					
ANR	918104	Argument	* ptr		908484	0					
ANR	918105	UnaryOperationExpression	* ptr		908484	0					
ANR	918106	UnaryOperator	*		908484	0					
ANR	918107	Identifier	ptr		908484	1					
ANR	918108	CompoundStatement		2964:14:103924:103924	908484	1					
ANR	918109	ExpressionStatement	* errorcodeptr = ERR63	7422:14:243816:243837	908484	0	True				
ANR	918110	AssignmentExpression	* errorcodeptr = ERR63		908484	0		=			
ANR	918111	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918112	UnaryOperator	*		908484	0					
ANR	918113	Identifier	errorcodeptr		908484	1					
ANR	918114	Identifier	ERR63		908484	1					
ANR	918115	GotoStatement	goto FAILED ;	7423:14:243853:243864	908484	1	True				
ANR	918116	Identifier	FAILED		908484	0					
ANR	918117	ElseStatement	else		908484	0					
ANR	918118	IfStatement	if ( refsign == CHAR_MINUS )		908484	0					
ANR	918119	Condition	refsign == CHAR_MINUS	7426:19:243915:243935	908484	0	True				
ANR	918120	EqualityExpression	refsign == CHAR_MINUS		908484	0		==			
ANR	918121	Identifier	refsign		908484	0					
ANR	918122	Identifier	CHAR_MINUS		908484	1					
ANR	918123	CompoundStatement		2970:12:104074:104074	908484	1					
ANR	918124	IfStatement	if ( ! IS_DIGIT ( ptr [ 1 ] ) )		908484	0					
ANR	918125	Condition	! IS_DIGIT ( ptr [ 1 ] )	7428:16:243968:243984	908484	0	True				
ANR	918126	UnaryOperationExpression	! IS_DIGIT ( ptr [ 1 ] )		908484	0					
ANR	918127	UnaryOperator	!		908484	0					
ANR	918128	CallExpression	IS_DIGIT ( ptr [ 1 ] )		908484	1					
ANR	918129	Callee	IS_DIGIT		908484	0					
ANR	918130	Identifier	IS_DIGIT		908484	0					
ANR	918131	ArgumentList	ptr [ 1 ]		908484	1					
ANR	918132	Argument	ptr [ 1 ]		908484	0					
ANR	918133	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	918134	Identifier	ptr		908484	0					
ANR	918135	PrimaryExpression	1		908484	1					
ANR	918136	GotoStatement	goto OTHER_CHAR_AFTER_QUERY ;	7429:14:244001:244028	908484	1	True				
ANR	918137	Identifier	OTHER_CHAR_AFTER_QUERY		908484	0					
ANR	918138	ExpressionStatement	ptr ++	7430:12:244042:244047	908484	1	True				
ANR	918139	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	918140	Identifier	ptr		908484	0					
ANR	918141	IncDec	++		908484	1					
ANR	918142	ExpressionStatement	recno = 0	7433:10:244074:244083	908484	4	True				
ANR	918143	AssignmentExpression	recno = 0		908484	0		=			
ANR	918144	Identifier	recno		908484	0					
ANR	918145	PrimaryExpression	0		908484	1					
ANR	918146	WhileStatement	while ( IS_DIGIT ( * ptr ) )		908484	5					
ANR	918147	Condition	IS_DIGIT ( * ptr )	7434:16:244101:244114	908484	0	True				
ANR	918148	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	918149	Callee	IS_DIGIT		908484	0					
ANR	918150	Identifier	IS_DIGIT		908484	0					
ANR	918151	ArgumentList	* ptr		908484	1					
ANR	918152	Argument	* ptr		908484	0					
ANR	918153	UnaryOperationExpression	* ptr		908484	0					
ANR	918154	UnaryOperator	*		908484	0					
ANR	918155	Identifier	ptr		908484	1					
ANR	918156	CompoundStatement		2978:12:104253:104253	908484	1					
ANR	918157	IfStatement	if ( recno > INT_MAX / 10 - 1 )		908484	0					
ANR	918158	Condition	recno > INT_MAX / 10 - 1	7436:16:244147:244170	908484	0	True				
ANR	918159	RelationalExpression	recno > INT_MAX / 10 - 1		908484	0		>			
ANR	918160	Identifier	recno		908484	0					
ANR	918161	AdditiveExpression	INT_MAX / 10 - 1		908484	1		-			
ANR	918162	MultiplicativeExpression	INT_MAX / 10		908484	0		/			
ANR	918163	Identifier	INT_MAX		908484	0					
ANR	918164	PrimaryExpression	10		908484	1					
ANR	918165	PrimaryExpression	1		908484	1					
ANR	918166	CompoundStatement		2980:14:104334:104334	908484	1					
ANR	918167	WhileStatement	while ( IS_DIGIT ( * ptr ) )		908484	0					
ANR	918168	Condition	IS_DIGIT ( * ptr )	7438:21:244233:244246	908484	0	True				
ANR	918169	CallExpression	IS_DIGIT ( * ptr )		908484	0					
ANR	918170	Callee	IS_DIGIT		908484	0					
ANR	918171	Identifier	IS_DIGIT		908484	0					
ANR	918172	ArgumentList	* ptr		908484	1					
ANR	918173	Argument	* ptr		908484	0					
ANR	918174	UnaryOperationExpression	* ptr		908484	0					
ANR	918175	UnaryOperator	*		908484	0					
ANR	918176	Identifier	ptr		908484	1					
ANR	918177	ExpressionStatement	ptr ++	7438:37:244249:244254	908484	1	True				
ANR	918178	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	918179	Identifier	ptr		908484	0					
ANR	918180	IncDec	++		908484	1					
ANR	918181	ExpressionStatement	* errorcodeptr = ERR61	7439:14:244270:244291	908484	1	True				
ANR	918182	AssignmentExpression	* errorcodeptr = ERR61		908484	0		=			
ANR	918183	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918184	UnaryOperator	*		908484	0					
ANR	918185	Identifier	errorcodeptr		908484	1					
ANR	918186	Identifier	ERR61		908484	1					
ANR	918187	GotoStatement	goto FAILED ;	7440:14:244307:244318	908484	2	True				
ANR	918188	Identifier	FAILED		908484	0					
ANR	918189	ExpressionStatement	recno = recno * 10 + * ptr ++ - CHAR_0	7442:12:244348:244384	908484	1	True				
ANR	918190	AssignmentExpression	recno = recno * 10 + * ptr ++ - CHAR_0		908484	0		=			
ANR	918191	Identifier	recno		908484	0					
ANR	918192	AdditiveExpression	recno * 10 + * ptr ++ - CHAR_0		908484	1		+			
ANR	918193	MultiplicativeExpression	recno * 10		908484	0		*			
ANR	918194	Identifier	recno		908484	0					
ANR	918195	PrimaryExpression	10		908484	1					
ANR	918196	AdditiveExpression	* ptr ++ - CHAR_0		908484	1		-			
ANR	918197	UnaryOperationExpression	* ptr ++		908484	0					
ANR	918198	UnaryOperator	*		908484	0					
ANR	918199	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	918200	Identifier	ptr		908484	0					
ANR	918201	IncDec	++		908484	1					
ANR	918202	Identifier	CHAR_0		908484	1					
ANR	918203	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		908484	6					
ANR	918204	Condition	* ptr != ( pcre_uchar ) terminator	7445:14:244415:244444	908484	0	True				
ANR	918205	EqualityExpression	* ptr != ( pcre_uchar ) terminator		908484	0		!=			
ANR	918206	UnaryOperationExpression	* ptr		908484	0					
ANR	918207	UnaryOperator	*		908484	0					
ANR	918208	Identifier	ptr		908484	1					
ANR	918209	CastExpression	( pcre_uchar ) terminator		908484	1					
ANR	918210	CastTarget	pcre_uchar		908484	0					
ANR	918211	Identifier	terminator		908484	1					
ANR	918212	CompoundStatement		2989:12:104583:104583	908484	1					
ANR	918213	ExpressionStatement	* errorcodeptr = ERR29	7447:12:244473:244494	908484	0	True				
ANR	918214	AssignmentExpression	* errorcodeptr = ERR29		908484	0		=			
ANR	918215	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918216	UnaryOperator	*		908484	0					
ANR	918217	Identifier	errorcodeptr		908484	1					
ANR	918218	Identifier	ERR29		908484	1					
ANR	918219	GotoStatement	goto FAILED ;	7448:12:244508:244519	908484	1	True				
ANR	918220	Identifier	FAILED		908484	0					
ANR	918221	IfStatement	if ( refsign == CHAR_MINUS )		908484	7					
ANR	918222	Condition	refsign == CHAR_MINUS	7451:14:244550:244570	908484	0	True				
ANR	918223	EqualityExpression	refsign == CHAR_MINUS		908484	0		==			
ANR	918224	Identifier	refsign		908484	0					
ANR	918225	Identifier	CHAR_MINUS		908484	1					
ANR	918226	CompoundStatement		2995:12:104709:104709	908484	1					
ANR	918227	IfStatement	if ( recno == 0 )		908484	0					
ANR	918228	Condition	recno == 0	7453:16:244603:244612	908484	0	True				
ANR	918229	EqualityExpression	recno == 0		908484	0		==			
ANR	918230	Identifier	recno		908484	0					
ANR	918231	PrimaryExpression	0		908484	1					
ANR	918232	CompoundStatement		2997:14:104753:104753	908484	1					
ANR	918233	ExpressionStatement	* errorcodeptr = ERR58	7455:14:244645:244666	908484	0	True				
ANR	918234	AssignmentExpression	* errorcodeptr = ERR58		908484	0		=			
ANR	918235	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918236	UnaryOperator	*		908484	0					
ANR	918237	Identifier	errorcodeptr		908484	1					
ANR	918238	Identifier	ERR58		908484	1					
ANR	918239	GotoStatement	goto FAILED ;	7456:14:244682:244693	908484	1	True				
ANR	918240	Identifier	FAILED		908484	0					
ANR	918241	ExpressionStatement	recno = cd -> bracount - recno + 1	7458:12:244723:244755	908484	1	True				
ANR	918242	AssignmentExpression	recno = cd -> bracount - recno + 1		908484	0		=			
ANR	918243	Identifier	recno		908484	0					
ANR	918244	AdditiveExpression	cd -> bracount - recno + 1		908484	1		-			
ANR	918245	PtrMemberAccess	cd -> bracount		908484	0					
ANR	918246	Identifier	cd		908484	0					
ANR	918247	Identifier	bracount		908484	1					
ANR	918248	AdditiveExpression	recno + 1		908484	1		+			
ANR	918249	Identifier	recno		908484	0					
ANR	918250	PrimaryExpression	1		908484	1					
ANR	918251	IfStatement	if ( recno <= 0 )		908484	2					
ANR	918252	Condition	recno <= 0	7459:16:244773:244782	908484	0	True				
ANR	918253	RelationalExpression	recno <= 0		908484	0		<=			
ANR	918254	Identifier	recno		908484	0					
ANR	918255	PrimaryExpression	0		908484	1					
ANR	918256	CompoundStatement		3003:14:104923:104923	908484	1					
ANR	918257	ExpressionStatement	* errorcodeptr = ERR15	7461:14:244815:244836	908484	0	True				
ANR	918258	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	918259	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918260	UnaryOperator	*		908484	0					
ANR	918261	Identifier	errorcodeptr		908484	1					
ANR	918262	Identifier	ERR15		908484	1					
ANR	918263	GotoStatement	goto FAILED ;	7462:14:244852:244863	908484	1	True				
ANR	918264	Identifier	FAILED		908484	0					
ANR	918265	ElseStatement	else		908484	0					
ANR	918266	IfStatement	if ( refsign == CHAR_PLUS )		908484	0					
ANR	918267	Condition	refsign == CHAR_PLUS	7465:19:244914:244933	908484	0	True				
ANR	918268	EqualityExpression	refsign == CHAR_PLUS		908484	0		==			
ANR	918269	Identifier	refsign		908484	0					
ANR	918270	Identifier	CHAR_PLUS		908484	1					
ANR	918271	CompoundStatement		3009:12:105072:105072	908484	1					
ANR	918272	IfStatement	if ( recno == 0 )		908484	0					
ANR	918273	Condition	recno == 0	7467:16:244966:244975	908484	0	True				
ANR	918274	EqualityExpression	recno == 0		908484	0		==			
ANR	918275	Identifier	recno		908484	0					
ANR	918276	PrimaryExpression	0		908484	1					
ANR	918277	CompoundStatement		3011:14:105116:105116	908484	1					
ANR	918278	ExpressionStatement	* errorcodeptr = ERR58	7469:14:245008:245029	908484	0	True				
ANR	918279	AssignmentExpression	* errorcodeptr = ERR58		908484	0		=			
ANR	918280	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918281	UnaryOperator	*		908484	0					
ANR	918282	Identifier	errorcodeptr		908484	1					
ANR	918283	Identifier	ERR58		908484	1					
ANR	918284	GotoStatement	goto FAILED ;	7470:14:245045:245056	908484	1	True				
ANR	918285	Identifier	FAILED		908484	0					
ANR	918286	ExpressionStatement	recno += cd -> bracount	7472:12:245086:245107	908484	1	True				
ANR	918287	AssignmentExpression	recno += cd -> bracount		908484	0		+=			
ANR	918288	Identifier	recno		908484	0					
ANR	918289	PtrMemberAccess	cd -> bracount		908484	1					
ANR	918290	Identifier	cd		908484	0					
ANR	918291	Identifier	bracount		908484	1					
ANR	918292	Label	HANDLE_RECURSION :	7477:10:245208:245224	908484	8	True				
ANR	918293	Identifier	HANDLE_RECURSION		908484	0					
ANR	918294	ExpressionStatement	previous = code	7479:10:245237:245252	908484	9	True				
ANR	918295	AssignmentExpression	previous = code		908484	0		=			
ANR	918296	Identifier	previous		908484	0					
ANR	918297	Identifier	code		908484	1					
ANR	918298	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	7480:10:245264:245311	908484	10	True				
ANR	918299	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	918300	Identifier	item_hwm_offset		908484	0					
ANR	918301	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	918302	PtrMemberAccess	cd -> hwm		908484	0					
ANR	918303	Identifier	cd		908484	0					
ANR	918304	Identifier	hwm		908484	1					
ANR	918305	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	918306	Identifier	cd		908484	0					
ANR	918307	Identifier	start_workspace		908484	1					
ANR	918308	ExpressionStatement	called = cd -> start_code	7481:10:245323:245346	908484	11	True				
ANR	918309	AssignmentExpression	called = cd -> start_code		908484	0		=			
ANR	918310	Identifier	called		908484	0					
ANR	918311	PtrMemberAccess	cd -> start_code		908484	1					
ANR	918312	Identifier	cd		908484	0					
ANR	918313	Identifier	start_code		908484	1					
ANR	918314	IfStatement	if ( lengthptr == NULL )		908484	12					
ANR	918315	Condition	lengthptr == NULL	7490:14:245794:245810	908484	0	True				
ANR	918316	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	918317	Identifier	lengthptr		908484	0					
ANR	918318	Identifier	NULL		908484	1					
ANR	918319	CompoundStatement		3034:12:105949:105949	908484	1					
ANR	918320	ExpressionStatement	* code = OP_END	7492:12:245839:245853	908484	0	True				
ANR	918321	AssignmentExpression	* code = OP_END		908484	0		=			
ANR	918322	UnaryOperationExpression	* code		908484	0					
ANR	918323	UnaryOperator	*		908484	0					
ANR	918324	Identifier	code		908484	1					
ANR	918325	Identifier	OP_END		908484	1					
ANR	918326	IfStatement	if ( recno != 0 )		908484	1					
ANR	918327	Condition	recno != 0	7493:16:245871:245880	908484	0	True				
ANR	918328	EqualityExpression	recno != 0		908484	0		!=			
ANR	918329	Identifier	recno		908484	0					
ANR	918330	PrimaryExpression	0		908484	1					
ANR	918331	ExpressionStatement	"called = PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"	7494:14:245897:245952	908484	1	True				
ANR	918332	AssignmentExpression	"called = PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"		908484	0		=			
ANR	918333	Identifier	called		908484	0					
ANR	918334	CallExpression	"PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"		908484	1					
ANR	918335	Callee	PRIV ( find_bracket )		908484	0					
ANR	918336	CallExpression	PRIV ( find_bracket )		908484	0					
ANR	918337	Callee	PRIV		908484	0					
ANR	918338	Identifier	PRIV		908484	0					
ANR	918339	ArgumentList	find_bracket		908484	1					
ANR	918340	Argument	find_bracket		908484	0					
ANR	918341	Identifier	find_bracket		908484	0					
ANR	918342	ArgumentList	cd -> start_code		908484	1					
ANR	918343	Argument	cd -> start_code		908484	0					
ANR	918344	PtrMemberAccess	cd -> start_code		908484	0					
ANR	918345	Identifier	cd		908484	0					
ANR	918346	Identifier	start_code		908484	1					
ANR	918347	Argument	utf		908484	1					
ANR	918348	Identifier	utf		908484	0					
ANR	918349	Argument	recno		908484	2					
ANR	918350	Identifier	recno		908484	0					
ANR	918351	IfStatement	if ( called == NULL )		908484	2					
ANR	918352	Condition	called == NULL	7498:16:246008:246021	908484	0	True				
ANR	918353	EqualityExpression	called == NULL		908484	0		==			
ANR	918354	Identifier	called		908484	0					
ANR	918355	Identifier	NULL		908484	1					
ANR	918356	CompoundStatement		3042:14:106162:106162	908484	1					
ANR	918357	IfStatement	if ( recno > cd -> final_bracount )		908484	0					
ANR	918358	Condition	recno > cd -> final_bracount	7500:18:246058:246083	908484	0	True				
ANR	918359	RelationalExpression	recno > cd -> final_bracount		908484	0		>			
ANR	918360	Identifier	recno		908484	0					
ANR	918361	PtrMemberAccess	cd -> final_bracount		908484	1					
ANR	918362	Identifier	cd		908484	0					
ANR	918363	Identifier	final_bracount		908484	1					
ANR	918364	CompoundStatement		3044:16:106226:106226	908484	1					
ANR	918365	ExpressionStatement	* errorcodeptr = ERR15	7502:16:246120:246141	908484	0	True				
ANR	918366	AssignmentExpression	* errorcodeptr = ERR15		908484	0		=			
ANR	918367	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918368	UnaryOperator	*		908484	0					
ANR	918369	Identifier	errorcodeptr		908484	1					
ANR	918370	Identifier	ERR15		908484	1					
ANR	918371	GotoStatement	goto FAILED ;	7503:16:246159:246170	908484	1	True				
ANR	918372	Identifier	FAILED		908484	0					
ANR	918373	ExpressionStatement	called = cd -> start_code + recno	7510:14:246431:246462	908484	1	True				
ANR	918374	AssignmentExpression	called = cd -> start_code + recno		908484	0		=			
ANR	918375	Identifier	called		908484	0					
ANR	918376	AdditiveExpression	cd -> start_code + recno		908484	1		+			
ANR	918377	PtrMemberAccess	cd -> start_code		908484	0					
ANR	918378	Identifier	cd		908484	0					
ANR	918379	Identifier	start_code		908484	1					
ANR	918380	Identifier	recno		908484	1					
ANR	918381	IfStatement	if ( cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN )		908484	2					
ANR	918382	Condition	cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN	7511:18:246482:246576	908484	0	True				
ANR	918383	RelationalExpression	cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	0		>=			
ANR	918384	PtrMemberAccess	cd -> hwm		908484	0					
ANR	918385	Identifier	cd		908484	0					
ANR	918386	Identifier	hwm		908484	1					
ANR	918387	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	1		+			
ANR	918388	PtrMemberAccess	cd -> start_workspace		908484	0					
ANR	918389	Identifier	cd		908484	0					
ANR	918390	Identifier	start_workspace		908484	1					
ANR	918391	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		908484	1		-			
ANR	918392	PtrMemberAccess	cd -> workspace_size		908484	0					
ANR	918393	Identifier	cd		908484	0					
ANR	918394	Identifier	workspace_size		908484	1					
ANR	918395	Identifier	WORK_SIZE_SAFETY_MARGIN		908484	1					
ANR	918396	CompoundStatement		3056:16:106719:106719	908484	1					
ANR	918397	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	7514:16:246613:246649	908484	0	True				
ANR	918398	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		908484	0		=			
ANR	918399	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918400	UnaryOperator	*		908484	0					
ANR	918401	Identifier	errorcodeptr		908484	1					
ANR	918402	CallExpression	expand_workspace ( cd )		908484	1					
ANR	918403	Callee	expand_workspace		908484	0					
ANR	918404	Identifier	expand_workspace		908484	0					
ANR	918405	ArgumentList	cd		908484	1					
ANR	918406	Argument	cd		908484	0					
ANR	918407	Identifier	cd		908484	0					
ANR	918408	IfStatement	if ( * errorcodeptr != 0 )		908484	1					
ANR	918409	Condition	* errorcodeptr != 0	7515:20:246671:246688	908484	0	True				
ANR	918410	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	918411	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918412	UnaryOperator	*		908484	0					
ANR	918413	Identifier	errorcodeptr		908484	1					
ANR	918414	PrimaryExpression	0		908484	1					
ANR	918415	GotoStatement	goto FAILED ;	7515:40:246691:246702	908484	1	True				
ANR	918416	Identifier	FAILED		908484	0					
ANR	918417	ExpressionStatement	"PUTINC ( cd -> hwm , 0 , ( int ) ( code + 1 - cd -> start_code ) )"	7517:14:246736:246788	908484	3	True				
ANR	918418	CallExpression	"PUTINC ( cd -> hwm , 0 , ( int ) ( code + 1 - cd -> start_code ) )"		908484	0					
ANR	918419	Callee	PUTINC		908484	0					
ANR	918420	Identifier	PUTINC		908484	0					
ANR	918421	ArgumentList	cd -> hwm		908484	1					
ANR	918422	Argument	cd -> hwm		908484	0					
ANR	918423	PtrMemberAccess	cd -> hwm		908484	0					
ANR	918424	Identifier	cd		908484	0					
ANR	918425	Identifier	hwm		908484	1					
ANR	918426	Argument	0		908484	1					
ANR	918427	PrimaryExpression	0		908484	0					
ANR	918428	Argument	( int ) ( code + 1 - cd -> start_code )		908484	2					
ANR	918429	CastExpression	( int ) ( code + 1 - cd -> start_code )		908484	0					
ANR	918430	CastTarget	int		908484	0					
ANR	918431	AdditiveExpression	code + 1 - cd -> start_code		908484	1		+			
ANR	918432	Identifier	code		908484	0					
ANR	918433	AdditiveExpression	1 - cd -> start_code		908484	1		-			
ANR	918434	PrimaryExpression	1		908484	0					
ANR	918435	PtrMemberAccess	cd -> start_code		908484	1					
ANR	918436	Identifier	cd		908484	0					
ANR	918437	Identifier	start_code		908484	1					
ANR	918438	ElseStatement	else		908484	0					
ANR	918439	IfStatement	"if ( GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd ) )"		908484	0					
ANR	918440	Condition	"GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"	7529:21:247420:247526	908484	0	True				
ANR	918441	AndExpression	"GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"		908484	0		&&			
ANR	918442	EqualityExpression	"GET ( called , 1 ) == 0"		908484	0		==			
ANR	918443	CallExpression	"GET ( called , 1 )"		908484	0					
ANR	918444	Callee	GET		908484	0					
ANR	918445	Identifier	GET		908484	0					
ANR	918446	ArgumentList	called		908484	1					
ANR	918447	Argument	called		908484	0					
ANR	918448	Identifier	called		908484	0					
ANR	918449	Argument	1		908484	1					
ANR	918450	PrimaryExpression	1		908484	0					
ANR	918451	PrimaryExpression	0		908484	1					
ANR	918452	AndExpression	"cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"		908484	1		&&			
ANR	918453	RelationalExpression	cond_depth <= 0		908484	0		<=			
ANR	918454	Identifier	cond_depth		908484	0					
ANR	918455	PrimaryExpression	0		908484	1					
ANR	918456	CallExpression	"could_be_empty ( called , code , bcptr , utf , cd )"		908484	1					
ANR	918457	Callee	could_be_empty		908484	0					
ANR	918458	Identifier	could_be_empty		908484	0					
ANR	918459	ArgumentList	called		908484	1					
ANR	918460	Argument	called		908484	0					
ANR	918461	Identifier	called		908484	0					
ANR	918462	Argument	code		908484	1					
ANR	918463	Identifier	code		908484	0					
ANR	918464	Argument	bcptr		908484	2					
ANR	918465	Identifier	bcptr		908484	0					
ANR	918466	Argument	utf		908484	3					
ANR	918467	Identifier	utf		908484	0					
ANR	918468	Argument	cd		908484	4					
ANR	918469	Identifier	cd		908484	0					
ANR	918470	CompoundStatement		3074:14:107667:107667	908484	1					
ANR	918471	ExpressionStatement	* errorcodeptr = ERR40	7532:14:247559:247580	908484	0	True				
ANR	918472	AssignmentExpression	* errorcodeptr = ERR40		908484	0		=			
ANR	918473	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918474	UnaryOperator	*		908484	0					
ANR	918475	Identifier	errorcodeptr		908484	1					
ANR	918476	Identifier	ERR40		908484	1					
ANR	918477	GotoStatement	goto FAILED ;	7533:14:247596:247607	908484	1	True				
ANR	918478	Identifier	FAILED		908484	0					
ANR	918479	ExpressionStatement	* code = OP_RECURSE	7541:10:247846:247864	908484	13	True				
ANR	918480	AssignmentExpression	* code = OP_RECURSE		908484	0		=			
ANR	918481	UnaryOperationExpression	* code		908484	0					
ANR	918482	UnaryOperator	*		908484	0					
ANR	918483	Identifier	code		908484	1					
ANR	918484	Identifier	OP_RECURSE		908484	1					
ANR	918485	ExpressionStatement	"PUT ( code , 1 , ( int ) ( called - cd -> start_code ) )"	7542:10:247876:247920	908484	14	True				
ANR	918486	CallExpression	"PUT ( code , 1 , ( int ) ( called - cd -> start_code ) )"		908484	0					
ANR	918487	Callee	PUT		908484	0					
ANR	918488	Identifier	PUT		908484	0					
ANR	918489	ArgumentList	code		908484	1					
ANR	918490	Argument	code		908484	0					
ANR	918491	Identifier	code		908484	0					
ANR	918492	Argument	1		908484	1					
ANR	918493	PrimaryExpression	1		908484	0					
ANR	918494	Argument	( int ) ( called - cd -> start_code )		908484	2					
ANR	918495	CastExpression	( int ) ( called - cd -> start_code )		908484	0					
ANR	918496	CastTarget	int		908484	0					
ANR	918497	AdditiveExpression	called - cd -> start_code		908484	1		-			
ANR	918498	Identifier	called		908484	0					
ANR	918499	PtrMemberAccess	cd -> start_code		908484	1					
ANR	918500	Identifier	cd		908484	0					
ANR	918501	Identifier	start_code		908484	1					
ANR	918502	ExpressionStatement	code += 1 + LINK_SIZE	7543:10:247932:247953	908484	15	True				
ANR	918503	AssignmentExpression	code += 1 + LINK_SIZE		908484	0		+=			
ANR	918504	Identifier	code		908484	0					
ANR	918505	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	918506	PrimaryExpression	1		908484	0					
ANR	918507	Identifier	LINK_SIZE		908484	1					
ANR	918508	ExpressionStatement	groupsetfirstchar = FALSE	7544:10:247965:247990	908484	16	True				
ANR	918509	AssignmentExpression	groupsetfirstchar = FALSE		908484	0		=			
ANR	918510	Identifier	groupsetfirstchar		908484	0					
ANR	918511	Identifier	FALSE		908484	1					
ANR	918512	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	94					
ANR	918513	Condition	firstcharflags == REQ_UNSET	7549:12:248065:248091	908484	0	True				
ANR	918514	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	918515	Identifier	firstcharflags		908484	0					
ANR	918516	Identifier	REQ_UNSET		908484	1					
ANR	918517	ExpressionStatement	firstcharflags = REQ_NONE	7549:41:248094:248119	908484	1	True				
ANR	918518	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	918519	Identifier	firstcharflags		908484	0					
ANR	918520	Identifier	REQ_NONE		908484	1					
ANR	918521	ContinueStatement	continue ;	7550:8:248129:248137	908484	95	True				
ANR	918522	Label	default :	7554:8:248224:248231	908484	96	True				
ANR	918523	Identifier	default		908484	0					
ANR	918524	Label	OTHER_CHAR_AFTER_QUERY :	7555:8:248299:248321	908484	97	True				
ANR	918525	Identifier	OTHER_CHAR_AFTER_QUERY		908484	0					
ANR	918526	ExpressionStatement	set = unset = 0	7556:8:248331:248346	908484	98	True				
ANR	918527	AssignmentExpression	set = unset = 0		908484	0		=			
ANR	918528	Identifier	set		908484	0					
ANR	918529	AssignmentExpression	unset = 0		908484	1		=			
ANR	918530	Identifier	unset		908484	0					
ANR	918531	PrimaryExpression	0		908484	1					
ANR	918532	ExpressionStatement	optset = & set	7557:8:248356:248369	908484	99	True				
ANR	918533	AssignmentExpression	optset = & set		908484	0		=			
ANR	918534	Identifier	optset		908484	0					
ANR	918535	UnaryOperationExpression	& set		908484	1					
ANR	918536	UnaryOperator	&		908484	0					
ANR	918537	Identifier	set		908484	1					
ANR	918538	WhileStatement	while ( * ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON )		908484	100					
ANR	918539	Condition	* ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON	7559:15:248387:248438	908484	0	True				
ANR	918540	AndExpression	* ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON		908484	0		&&			
ANR	918541	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	0		!=			
ANR	918542	UnaryOperationExpression	* ptr		908484	0					
ANR	918543	UnaryOperator	*		908484	0					
ANR	918544	Identifier	ptr		908484	1					
ANR	918545	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	918546	EqualityExpression	* ptr != CHAR_COLON		908484	1		!=			
ANR	918547	UnaryOperationExpression	* ptr		908484	0					
ANR	918548	UnaryOperator	*		908484	0					
ANR	918549	Identifier	ptr		908484	1					
ANR	918550	Identifier	CHAR_COLON		908484	1					
ANR	918551	CompoundStatement		3103:10:108575:108575	908484	1					
ANR	918552	SwitchStatement	switch ( * ptr ++ )		908484	0					
ANR	918553	Condition	* ptr ++	7561:18:248471:248476	908484	0	True				
ANR	918554	UnaryOperationExpression	* ptr ++		908484	0					
ANR	918555	UnaryOperator	*		908484	0					
ANR	918556	PostIncDecOperationExpression	ptr ++		908484	1					
ANR	918557	Identifier	ptr		908484	0					
ANR	918558	IncDec	++		908484	1					
ANR	918559	CompoundStatement		3105:12:108615:108615	908484	1					
ANR	918560	Label	case CHAR_MINUS :	7563:12:248505:248520	908484	0	True				
ANR	918561	Identifier	CHAR_MINUS		908484	0					
ANR	918562	ExpressionStatement	optset = & unset	7563:29:248522:248537	908484	1	True				
ANR	918563	AssignmentExpression	optset = & unset		908484	0		=			
ANR	918564	Identifier	optset		908484	0					
ANR	918565	UnaryOperationExpression	& unset		908484	1					
ANR	918566	UnaryOperator	&		908484	0					
ANR	918567	Identifier	unset		908484	1					
ANR	918568	BreakStatement	break ;	7563:46:248539:248544	908484	2	True				
ANR	918569	Label	case CHAR_J :	7565:12:248559:248570	908484	3	True				
ANR	918570	Identifier	CHAR_J		908484	0					
ANR	918571	ExpressionStatement	* optset |= PCRE_DUPNAMES	7566:12:248640:248664	908484	4	True				
ANR	918572	AssignmentExpression	* optset |= PCRE_DUPNAMES		908484	0		|=			
ANR	918573	UnaryOperationExpression	* optset		908484	0					
ANR	918574	UnaryOperator	*		908484	0					
ANR	918575	Identifier	optset		908484	1					
ANR	918576	Identifier	PCRE_DUPNAMES		908484	1					
ANR	918577	ExpressionStatement	cd -> external_flags |= PCRE_JCHANGED	7567:12:248678:248713	908484	5	True				
ANR	918578	AssignmentExpression	cd -> external_flags |= PCRE_JCHANGED		908484	0		|=			
ANR	918579	PtrMemberAccess	cd -> external_flags		908484	0					
ANR	918580	Identifier	cd		908484	0					
ANR	918581	Identifier	external_flags		908484	1					
ANR	918582	Identifier	PCRE_JCHANGED		908484	1					
ANR	918583	BreakStatement	break ;	7568:12:248727:248732	908484	6	True				
ANR	918584	Label	case CHAR_i :	7570:12:248747:248758	908484	7	True				
ANR	918585	Identifier	CHAR_i		908484	0					
ANR	918586	ExpressionStatement	* optset |= PCRE_CASELESS	7570:25:248760:248784	908484	8	True				
ANR	918587	AssignmentExpression	* optset |= PCRE_CASELESS		908484	0		|=			
ANR	918588	UnaryOperationExpression	* optset		908484	0					
ANR	918589	UnaryOperator	*		908484	0					
ANR	918590	Identifier	optset		908484	1					
ANR	918591	Identifier	PCRE_CASELESS		908484	1					
ANR	918592	BreakStatement	break ;	7570:51:248786:248791	908484	9	True				
ANR	918593	Label	case CHAR_m :	7571:12:248805:248816	908484	10	True				
ANR	918594	Identifier	CHAR_m		908484	0					
ANR	918595	ExpressionStatement	* optset |= PCRE_MULTILINE	7571:25:248818:248843	908484	11	True				
ANR	918596	AssignmentExpression	* optset |= PCRE_MULTILINE		908484	0		|=			
ANR	918597	UnaryOperationExpression	* optset		908484	0					
ANR	918598	UnaryOperator	*		908484	0					
ANR	918599	Identifier	optset		908484	1					
ANR	918600	Identifier	PCRE_MULTILINE		908484	1					
ANR	918601	BreakStatement	break ;	7571:52:248845:248850	908484	12	True				
ANR	918602	Label	case CHAR_s :	7572:12:248864:248875	908484	13	True				
ANR	918603	Identifier	CHAR_s		908484	0					
ANR	918604	ExpressionStatement	* optset |= PCRE_DOTALL	7572:25:248877:248899	908484	14	True				
ANR	918605	AssignmentExpression	* optset |= PCRE_DOTALL		908484	0		|=			
ANR	918606	UnaryOperationExpression	* optset		908484	0					
ANR	918607	UnaryOperator	*		908484	0					
ANR	918608	Identifier	optset		908484	1					
ANR	918609	Identifier	PCRE_DOTALL		908484	1					
ANR	918610	BreakStatement	break ;	7572:49:248901:248906	908484	15	True				
ANR	918611	Label	case CHAR_x :	7573:12:248920:248931	908484	16	True				
ANR	918612	Identifier	CHAR_x		908484	0					
ANR	918613	ExpressionStatement	* optset |= PCRE_EXTENDED	7573:25:248933:248957	908484	17	True				
ANR	918614	AssignmentExpression	* optset |= PCRE_EXTENDED		908484	0		|=			
ANR	918615	UnaryOperationExpression	* optset		908484	0					
ANR	918616	UnaryOperator	*		908484	0					
ANR	918617	Identifier	optset		908484	1					
ANR	918618	Identifier	PCRE_EXTENDED		908484	1					
ANR	918619	BreakStatement	break ;	7573:51:248959:248964	908484	18	True				
ANR	918620	Label	case CHAR_U :	7574:12:248978:248989	908484	19	True				
ANR	918621	Identifier	CHAR_U		908484	0					
ANR	918622	ExpressionStatement	* optset |= PCRE_UNGREEDY	7574:25:248991:249015	908484	20	True				
ANR	918623	AssignmentExpression	* optset |= PCRE_UNGREEDY		908484	0		|=			
ANR	918624	UnaryOperationExpression	* optset		908484	0					
ANR	918625	UnaryOperator	*		908484	0					
ANR	918626	Identifier	optset		908484	1					
ANR	918627	Identifier	PCRE_UNGREEDY		908484	1					
ANR	918628	BreakStatement	break ;	7574:51:249017:249022	908484	21	True				
ANR	918629	Label	case CHAR_X :	7575:12:249036:249047	908484	22	True				
ANR	918630	Identifier	CHAR_X		908484	0					
ANR	918631	ExpressionStatement	* optset |= PCRE_EXTRA	7575:25:249049:249070	908484	23	True				
ANR	918632	AssignmentExpression	* optset |= PCRE_EXTRA		908484	0		|=			
ANR	918633	UnaryOperationExpression	* optset		908484	0					
ANR	918634	UnaryOperator	*		908484	0					
ANR	918635	Identifier	optset		908484	1					
ANR	918636	Identifier	PCRE_EXTRA		908484	1					
ANR	918637	BreakStatement	break ;	7575:48:249072:249077	908484	24	True				
ANR	918638	Label	default :	7577:12:249092:249099	908484	25	True				
ANR	918639	Identifier	default		908484	0					
ANR	918640	ExpressionStatement	* errorcodeptr = ERR12	7577:22:249102:249123	908484	26	True				
ANR	918641	AssignmentExpression	* errorcodeptr = ERR12		908484	0		=			
ANR	918642	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918643	UnaryOperator	*		908484	0					
ANR	918644	Identifier	errorcodeptr		908484	1					
ANR	918645	Identifier	ERR12		908484	1					
ANR	918646	ExpressionStatement	ptr --	7578:22:249147:249152	908484	27	True				
ANR	918647	PostIncDecOperationExpression	ptr --		908484	0					
ANR	918648	Identifier	ptr		908484	0					
ANR	918649	IncDec	--		908484	1					
ANR	918650	GotoStatement	goto FAILED ;	7579:22:249204:249215	908484	28	True				
ANR	918651	Identifier	FAILED		908484	0					
ANR	918652	ExpressionStatement	newoptions = ( options | set ) & ( ~unset )	7585:8:249330:249369	908484	101	True				
ANR	918653	AssignmentExpression	newoptions = ( options | set ) & ( ~unset )		908484	0		=			
ANR	918654	Identifier	newoptions		908484	0					
ANR	918655	BitAndExpression	( options | set ) & ( ~unset )		908484	1		&			
ANR	918656	InclusiveOrExpression	options | set		908484	0		|			
ANR	918657	Identifier	options		908484	0					
ANR	918658	Identifier	set		908484	1					
ANR	918659	Identifier	~unset		908484	1					
ANR	918660	IfStatement	if ( * ptr == CHAR_RIGHT_PARENTHESIS )		908484	102					
ANR	918661	Condition	* ptr == CHAR_RIGHT_PARENTHESIS	7608:12:250674:250703	908484	0	True				
ANR	918662	EqualityExpression	* ptr == CHAR_RIGHT_PARENTHESIS		908484	0		==			
ANR	918663	UnaryOperationExpression	* ptr		908484	0					
ANR	918664	UnaryOperator	*		908484	0					
ANR	918665	Identifier	ptr		908484	1					
ANR	918666	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	918667	CompoundStatement		3152:10:110840:110840	908484	1					
ANR	918668	IfStatement	if ( code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE ) )		908484	0					
ANR	918669	Condition	code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE )	7610:14:250732:250840	908484	0	True				
ANR	918670	AndExpression	code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE )		908484	0		&&			
ANR	918671	EqualityExpression	code == cd -> start_code + 1 + LINK_SIZE		908484	0		==			
ANR	918672	Identifier	code		908484	0					
ANR	918673	AdditiveExpression	cd -> start_code + 1 + LINK_SIZE		908484	1		+			
ANR	918674	PtrMemberAccess	cd -> start_code		908484	0					
ANR	918675	Identifier	cd		908484	0					
ANR	918676	Identifier	start_code		908484	1					
ANR	918677	AdditiveExpression	1 + LINK_SIZE		908484	1		+			
ANR	918678	PrimaryExpression	1		908484	0					
ANR	918679	Identifier	LINK_SIZE		908484	1					
ANR	918680	OrExpression	lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE		908484	1		||			
ANR	918681	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	918682	Identifier	lengthptr		908484	0					
ANR	918683	Identifier	NULL		908484	1					
ANR	918684	EqualityExpression	* lengthptr == 2 + 2 * LINK_SIZE		908484	1		==			
ANR	918685	UnaryOperationExpression	* lengthptr		908484	0					
ANR	918686	UnaryOperator	*		908484	0					
ANR	918687	Identifier	lengthptr		908484	1					
ANR	918688	AdditiveExpression	2 + 2 * LINK_SIZE		908484	1		+			
ANR	918689	PrimaryExpression	2		908484	0					
ANR	918690	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	918691	PrimaryExpression	2		908484	0					
ANR	918692	Identifier	LINK_SIZE		908484	1					
ANR	918693	CompoundStatement		3155:12:110979:110979	908484	1					
ANR	918694	ExpressionStatement	cd -> external_options = newoptions	7613:12:250869:250902	908484	0	True				
ANR	918695	AssignmentExpression	cd -> external_options = newoptions		908484	0		=			
ANR	918696	PtrMemberAccess	cd -> external_options		908484	0					
ANR	918697	Identifier	cd		908484	0					
ANR	918698	Identifier	external_options		908484	1					
ANR	918699	Identifier	newoptions		908484	1					
ANR	918700	ElseStatement	else		908484	0					
ANR	918701	CompoundStatement		3159:12:111069:111069	908484	0					
ANR	918702	ExpressionStatement	greedy_default = ( ( newoptions & PCRE_UNGREEDY ) != 0 )	7617:12:250959:251011	908484	0	True				
ANR	918703	AssignmentExpression	greedy_default = ( ( newoptions & PCRE_UNGREEDY ) != 0 )		908484	0		=			
ANR	918704	Identifier	greedy_default		908484	0					
ANR	918705	EqualityExpression	( newoptions & PCRE_UNGREEDY ) != 0		908484	1		!=			
ANR	918706	BitAndExpression	newoptions & PCRE_UNGREEDY		908484	0		&			
ANR	918707	Identifier	newoptions		908484	0					
ANR	918708	Identifier	PCRE_UNGREEDY		908484	1					
ANR	918709	PrimaryExpression	0		908484	1					
ANR	918710	ExpressionStatement	greedy_non_default = greedy_default ^ 1	7618:12:251025:251064	908484	1	True				
ANR	918711	AssignmentExpression	greedy_non_default = greedy_default ^ 1		908484	0		=			
ANR	918712	Identifier	greedy_non_default		908484	0					
ANR	918713	ExclusiveOrExpression	greedy_default ^ 1		908484	1		^			
ANR	918714	Identifier	greedy_default		908484	0					
ANR	918715	PrimaryExpression	1		908484	1					
ANR	918716	ExpressionStatement	req_caseopt = ( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0	7619:12:251078:251143	908484	2	True				
ANR	918717	AssignmentExpression	req_caseopt = ( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		908484	0		=			
ANR	918718	Identifier	req_caseopt		908484	0					
ANR	918719	ConditionalExpression	( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		908484	1					
ANR	918720	Condition	( newoptions & PCRE_CASELESS ) != 0		908484	0					
ANR	918721	EqualityExpression	( newoptions & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	918722	BitAndExpression	newoptions & PCRE_CASELESS		908484	0		&			
ANR	918723	Identifier	newoptions		908484	0					
ANR	918724	Identifier	PCRE_CASELESS		908484	1					
ANR	918725	PrimaryExpression	0		908484	1					
ANR	918726	Identifier	REQ_CASELESS		908484	1					
ANR	918727	PrimaryExpression	0		908484	2					
ANR	918728	ExpressionStatement	* optionsptr = options = newoptions	7625:10:251278:251312	908484	1	True				
ANR	918729	AssignmentExpression	* optionsptr = options = newoptions		908484	0		=			
ANR	918730	UnaryOperationExpression	* optionsptr		908484	0					
ANR	918731	UnaryOperator	*		908484	0					
ANR	918732	Identifier	optionsptr		908484	1					
ANR	918733	AssignmentExpression	options = newoptions		908484	1		=			
ANR	918734	Identifier	options		908484	0					
ANR	918735	Identifier	newoptions		908484	1					
ANR	918736	ExpressionStatement	previous = NULL	7626:10:251324:251339	908484	2	True				
ANR	918737	AssignmentExpression	previous = NULL		908484	0		=			
ANR	918738	Identifier	previous		908484	0					
ANR	918739	Identifier	NULL		908484	1					
ANR	918740	ContinueStatement	continue ;	7627:10:251391:251399	908484	3	True				
ANR	918741	ExpressionStatement	bravalue = OP_BRA	7635:8:251738:251755	908484	103	True				
ANR	918742	AssignmentExpression	bravalue = OP_BRA		908484	0		=			
ANR	918743	Identifier	bravalue		908484	0					
ANR	918744	Identifier	OP_BRA		908484	1					
ANR	918745	ExpressionStatement	ptr ++	7636:8:251765:251770	908484	104	True				
ANR	918746	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	918747	Identifier	ptr		908484	0					
ANR	918748	IncDec	++		908484	1					
ANR	918749	ElseStatement	else		908484	0					
ANR	918750	IfStatement	if ( ( options & PCRE_NO_AUTO_CAPTURE ) != 0 )		908484	0					
ANR	918751	Condition	( options & PCRE_NO_AUTO_CAPTURE ) != 0	7644:13:252063:252099	908484	0	True				
ANR	918752	EqualityExpression	( options & PCRE_NO_AUTO_CAPTURE ) != 0		908484	0		!=			
ANR	918753	BitAndExpression	options & PCRE_NO_AUTO_CAPTURE		908484	0		&			
ANR	918754	Identifier	options		908484	0					
ANR	918755	Identifier	PCRE_NO_AUTO_CAPTURE		908484	1					
ANR	918756	PrimaryExpression	0		908484	1					
ANR	918757	CompoundStatement		3188:6:112232:112232	908484	1					
ANR	918758	ExpressionStatement	bravalue = OP_BRA	7646:6:252116:252133	908484	0	True				
ANR	918759	AssignmentExpression	bravalue = OP_BRA		908484	0		=			
ANR	918760	Identifier	bravalue		908484	0					
ANR	918761	Identifier	OP_BRA		908484	1					
ANR	918762	ElseStatement	else		908484	0					
ANR	918763	CompoundStatement		3195:6:112326:112326	908484	0					
ANR	918764	Label	NUMBERED_GROUP :	7653:6:252210:252224	908484	0	True				
ANR	918765	Identifier	NUMBERED_GROUP		908484	0					
ANR	918766	ExpressionStatement	cd -> bracount += 1	7654:6:252232:252249	908484	1	True				
ANR	918767	AssignmentExpression	cd -> bracount += 1		908484	0		+=			
ANR	918768	PtrMemberAccess	cd -> bracount		908484	0					
ANR	918769	Identifier	cd		908484	0					
ANR	918770	Identifier	bracount		908484	1					
ANR	918771	PrimaryExpression	1		908484	1					
ANR	918772	ExpressionStatement	"PUT2 ( code , 1 + LINK_SIZE , cd -> bracount )"	7655:6:252257:252294	908484	2	True				
ANR	918773	CallExpression	"PUT2 ( code , 1 + LINK_SIZE , cd -> bracount )"		908484	0					
ANR	918774	Callee	PUT2		908484	0					
ANR	918775	Identifier	PUT2		908484	0					
ANR	918776	ArgumentList	code		908484	1					
ANR	918777	Argument	code		908484	0					
ANR	918778	Identifier	code		908484	0					
ANR	918779	Argument	1 + LINK_SIZE		908484	1					
ANR	918780	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	918781	PrimaryExpression	1		908484	0					
ANR	918782	Identifier	LINK_SIZE		908484	1					
ANR	918783	Argument	cd -> bracount		908484	2					
ANR	918784	PtrMemberAccess	cd -> bracount		908484	0					
ANR	918785	Identifier	cd		908484	0					
ANR	918786	Identifier	bracount		908484	1					
ANR	918787	ExpressionStatement	skipbytes = IMM2_SIZE	7656:6:252302:252323	908484	3	True				
ANR	918788	AssignmentExpression	skipbytes = IMM2_SIZE		908484	0		=			
ANR	918789	Identifier	skipbytes		908484	0					
ANR	918790	Identifier	IMM2_SIZE		908484	1					
ANR	918791	IfStatement	if ( ( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT )		908484	143					
ANR	918792	Condition	( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT	7662:8:252436:252478	908484	0	True				
ANR	918793	RelationalExpression	( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT		908484	0		>			
ANR	918794	AssignmentExpression	cd -> parens_depth += 1		908484	0		+=			
ANR	918795	PtrMemberAccess	cd -> parens_depth		908484	0					
ANR	918796	Identifier	cd		908484	0					
ANR	918797	Identifier	parens_depth		908484	1					
ANR	918798	PrimaryExpression	1		908484	1					
ANR	918799	Identifier	PARENS_NEST_LIMIT		908484	1					
ANR	918800	CompoundStatement		3206:6:112611:112611	908484	1					
ANR	918801	ExpressionStatement	* errorcodeptr = ERR82	7664:6:252495:252516	908484	0	True				
ANR	918802	AssignmentExpression	* errorcodeptr = ERR82		908484	0		=			
ANR	918803	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	918804	UnaryOperator	*		908484	0					
ANR	918805	Identifier	errorcodeptr		908484	1					
ANR	918806	Identifier	ERR82		908484	1					
ANR	918807	GotoStatement	goto FAILED ;	7665:6:252524:252535	908484	1	True				
ANR	918808	Identifier	FAILED		908484	0					
ANR	918809	IfStatement	if ( bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert )		908484	144					
ANR	918810	Condition	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert	7676:8:253100:253181	908484	0	True				
ANR	918811	AndExpression	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert		908484	0		&&			
ANR	918812	RelationalExpression	bravalue >= OP_ASSERT		908484	0		>=			
ANR	918813	Identifier	bravalue		908484	0					
ANR	918814	Identifier	OP_ASSERT		908484	1					
ANR	918815	AndExpression	bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert		908484	1		&&			
ANR	918816	RelationalExpression	bravalue <= OP_ASSERTBACK_NOT		908484	0		<=			
ANR	918817	Identifier	bravalue		908484	0					
ANR	918818	Identifier	OP_ASSERTBACK_NOT		908484	1					
ANR	918819	PtrMemberAccess	cd -> iscondassert		908484	1					
ANR	918820	Identifier	cd		908484	0					
ANR	918821	Identifier	iscondassert		908484	1					
ANR	918822	CompoundStatement		3221:6:113314:113314	908484	1					
ANR	918823	ExpressionStatement	previous = NULL	7679:6:253198:253213	908484	0	True				
ANR	918824	AssignmentExpression	previous = NULL		908484	0		=			
ANR	918825	Identifier	previous		908484	0					
ANR	918826	Identifier	NULL		908484	1					
ANR	918827	ExpressionStatement	cd -> iscondassert = FALSE	7680:6:253221:253245	908484	1	True				
ANR	918828	AssignmentExpression	cd -> iscondassert = FALSE		908484	0		=			
ANR	918829	PtrMemberAccess	cd -> iscondassert		908484	0					
ANR	918830	Identifier	cd		908484	0					
ANR	918831	Identifier	iscondassert		908484	1					
ANR	918832	Identifier	FALSE		908484	1					
ANR	918833	ElseStatement	else		908484	0					
ANR	918834	CompoundStatement		3226:6:113394:113394	908484	0					
ANR	918835	ExpressionStatement	previous = code	7684:6:253278:253293	908484	0	True				
ANR	918836	AssignmentExpression	previous = code		908484	0		=			
ANR	918837	Identifier	previous		908484	0					
ANR	918838	Identifier	code		908484	1					
ANR	918839	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	7685:6:253301:253348	908484	1	True				
ANR	918840	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	918841	Identifier	item_hwm_offset		908484	0					
ANR	918842	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	918843	PtrMemberAccess	cd -> hwm		908484	0					
ANR	918844	Identifier	cd		908484	0					
ANR	918845	Identifier	hwm		908484	1					
ANR	918846	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	918847	Identifier	cd		908484	0					
ANR	918848	Identifier	start_workspace		908484	1					
ANR	918849	ExpressionStatement	* code = bravalue	7688:4:253363:253379	908484	145	True				
ANR	918850	AssignmentExpression	* code = bravalue		908484	0		=			
ANR	918851	UnaryOperationExpression	* code		908484	0					
ANR	918852	UnaryOperator	*		908484	0					
ANR	918853	Identifier	code		908484	1					
ANR	918854	Identifier	bravalue		908484	1					
ANR	918855	ExpressionStatement	tempcode = code	7689:4:253385:253400	908484	146	True				
ANR	918856	AssignmentExpression	tempcode = code		908484	0		=			
ANR	918857	Identifier	tempcode		908484	0					
ANR	918858	Identifier	code		908484	1					
ANR	918859	ExpressionStatement	tempreqvary = cd -> req_varyopt	7690:4:253406:253435	908484	147	True				
ANR	918860	AssignmentExpression	tempreqvary = cd -> req_varyopt		908484	0		=			
ANR	918861	Identifier	tempreqvary		908484	0					
ANR	918862	PtrMemberAccess	cd -> req_varyopt		908484	1					
ANR	918863	Identifier	cd		908484	0					
ANR	918864	Identifier	req_varyopt		908484	1					
ANR	918865	ExpressionStatement	tempbracount = cd -> bracount	7691:4:253480:253507	908484	148	True				
ANR	918866	AssignmentExpression	tempbracount = cd -> bracount		908484	0		=			
ANR	918867	Identifier	tempbracount		908484	0					
ANR	918868	PtrMemberAccess	cd -> bracount		908484	1					
ANR	918869	Identifier	cd		908484	0					
ANR	918870	Identifier	bracount		908484	1					
ANR	918871	ExpressionStatement	length_prevgroup = 0	7692:4:253554:253574	908484	149	True				
ANR	918872	AssignmentExpression	length_prevgroup = 0		908484	0		=			
ANR	918873	Identifier	length_prevgroup		908484	0					
ANR	918874	PrimaryExpression	0		908484	1					
ANR	918875	IfStatement	"if ( ! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup ) )"		908484	150					
ANR	918876	Condition	"! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"	7694:8:253640:254780	908484	0	True				
ANR	918877	UnaryOperationExpression	"! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"		908484	0					
ANR	918878	UnaryOperator	!		908484	0					
ANR	918879	CallExpression	"compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"		908484	1					
ANR	918880	Callee	compile_regex		908484	0					
ANR	918881	Identifier	compile_regex		908484	0					
ANR	918882	ArgumentList	newoptions		908484	1					
ANR	918883	Argument	newoptions		908484	0					
ANR	918884	Identifier	newoptions		908484	0					
ANR	918885	Argument	& tempcode		908484	1					
ANR	918886	UnaryOperationExpression	& tempcode		908484	0					
ANR	918887	UnaryOperator	&		908484	0					
ANR	918888	Identifier	tempcode		908484	1					
ANR	918889	Argument	& ptr		908484	2					
ANR	918890	UnaryOperationExpression	& ptr		908484	0					
ANR	918891	UnaryOperator	&		908484	0					
ANR	918892	Identifier	ptr		908484	1					
ANR	918893	Argument	errorcodeptr		908484	3					
ANR	918894	Identifier	errorcodeptr		908484	0					
ANR	918895	Argument	bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT		908484	4					
ANR	918896	OrExpression	bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT		908484	0		||			
ANR	918897	EqualityExpression	bravalue == OP_ASSERTBACK		908484	0		==			
ANR	918898	Identifier	bravalue		908484	0					
ANR	918899	Identifier	OP_ASSERTBACK		908484	1					
ANR	918900	EqualityExpression	bravalue == OP_ASSERTBACK_NOT		908484	1		==			
ANR	918901	Identifier	bravalue		908484	0					
ANR	918902	Identifier	OP_ASSERTBACK_NOT		908484	1					
ANR	918903	Argument	reset_bracount		908484	5					
ANR	918904	Identifier	reset_bracount		908484	0					
ANR	918905	Argument	skipbytes		908484	6					
ANR	918906	Identifier	skipbytes		908484	0					
ANR	918907	Argument	cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 )		908484	7					
ANR	918908	AdditiveExpression	cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 )		908484	0		+			
ANR	918909	Identifier	cond_depth		908484	0					
ANR	918910	ConditionalExpression	( bravalue == OP_COND ) ? 1 : 0		908484	1					
ANR	918911	Condition	bravalue == OP_COND		908484	0					
ANR	918912	EqualityExpression	bravalue == OP_COND		908484	0		==			
ANR	918913	Identifier	bravalue		908484	0					
ANR	918914	Identifier	OP_COND		908484	1					
ANR	918915	PrimaryExpression	1		908484	1					
ANR	918916	PrimaryExpression	0		908484	2					
ANR	918917	Argument	& subfirstchar		908484	8					
ANR	918918	UnaryOperationExpression	& subfirstchar		908484	0					
ANR	918919	UnaryOperator	&		908484	0					
ANR	918920	Identifier	subfirstchar		908484	1					
ANR	918921	Argument	& subfirstcharflags		908484	9					
ANR	918922	UnaryOperationExpression	& subfirstcharflags		908484	0					
ANR	918923	UnaryOperator	&		908484	0					
ANR	918924	Identifier	subfirstcharflags		908484	1					
ANR	918925	Argument	& subreqchar		908484	10					
ANR	918926	UnaryOperationExpression	& subreqchar		908484	0					
ANR	918927	UnaryOperator	&		908484	0					
ANR	918928	Identifier	subreqchar		908484	1					
ANR	918929	Argument	& subreqcharflags		908484	11					
ANR	918930	UnaryOperationExpression	& subreqcharflags		908484	0					
ANR	918931	UnaryOperator	&		908484	0					
ANR	918932	Identifier	subreqcharflags		908484	1					
ANR	918933	Argument	bcptr		908484	12					
ANR	918934	Identifier	bcptr		908484	0					
ANR	918935	Argument	cd		908484	13					
ANR	918936	Identifier	cd		908484	0					
ANR	918937	Argument	( lengthptr == NULL ) ? NULL : & length_prevgroup		908484	14					
ANR	918938	ConditionalExpression	( lengthptr == NULL ) ? NULL : & length_prevgroup		908484	0					
ANR	918939	Condition	lengthptr == NULL		908484	0					
ANR	918940	EqualityExpression	lengthptr == NULL		908484	0		==			
ANR	918941	Identifier	lengthptr		908484	0					
ANR	918942	Identifier	NULL		908484	1					
ANR	918943	Identifier	NULL		908484	1					
ANR	918944	UnaryOperationExpression	& length_prevgroup		908484	2					
ANR	918945	UnaryOperator	&		908484	0					
ANR	918946	Identifier	length_prevgroup		908484	1					
ANR	918947	GotoStatement	goto FAILED ;	7714:6:254789:254800	908484	1	True				
ANR	918948	Identifier	FAILED		908484	0					
ANR	918949	ExpressionStatement	cd -> parens_depth -= 1	7716:4:254807:254828	908484	151	True				
ANR	918950	AssignmentExpression	cd -> parens_depth -= 1		908484	0		-=			
ANR	918951	PtrMemberAccess	cd -> parens_depth		908484	0					
ANR	918952	Identifier	cd		908484	0					
ANR	918953	Identifier	parens_depth		908484	1					
ANR	918954	PrimaryExpression	1		908484	1					
ANR	918955	IfStatement	if ( bravalue == OP_ONCE && cd -> bracount <= tempbracount )		908484	152					
ANR	918956	Condition	bravalue == OP_ONCE && cd -> bracount <= tempbracount	7721:8:254967:255017	908484	0	True				
ANR	918957	AndExpression	bravalue == OP_ONCE && cd -> bracount <= tempbracount		908484	0		&&			
ANR	918958	EqualityExpression	bravalue == OP_ONCE		908484	0		==			
ANR	918959	Identifier	bravalue		908484	0					
ANR	918960	Identifier	OP_ONCE		908484	1					
ANR	918961	RelationalExpression	cd -> bracount <= tempbracount		908484	1		<=			
ANR	918962	PtrMemberAccess	cd -> bracount		908484	0					
ANR	918963	Identifier	cd		908484	0					
ANR	918964	Identifier	bracount		908484	1					
ANR	918965	Identifier	tempbracount		908484	1					
ANR	918966	ExpressionStatement	* code = OP_ONCE_NC	7722:6:255026:255044	908484	1	True				
ANR	918967	AssignmentExpression	* code = OP_ONCE_NC		908484	0		=			
ANR	918968	UnaryOperationExpression	* code		908484	0					
ANR	918969	UnaryOperator	*		908484	0					
ANR	918970	Identifier	code		908484	1					
ANR	918971	Identifier	OP_ONCE_NC		908484	1					
ANR	918972	IfStatement	if ( bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT )		908484	153					
ANR	918973	Condition	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT	7724:8:255055:255108	908484	0	True				
ANR	918974	AndExpression	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT		908484	0		&&			
ANR	918975	RelationalExpression	bravalue >= OP_ASSERT		908484	0		>=			
ANR	918976	Identifier	bravalue		908484	0					
ANR	918977	Identifier	OP_ASSERT		908484	1					
ANR	918978	RelationalExpression	bravalue <= OP_ASSERTBACK_NOT		908484	1		<=			
ANR	918979	Identifier	bravalue		908484	0					
ANR	918980	Identifier	OP_ASSERTBACK_NOT		908484	1					
ANR	918981	ExpressionStatement	cd -> assert_depth -= 1	7725:6:255117:255138	908484	1	True				
ANR	918982	AssignmentExpression	cd -> assert_depth -= 1		908484	0		-=			
ANR	918983	PtrMemberAccess	cd -> assert_depth		908484	0					
ANR	918984	Identifier	cd		908484	0					
ANR	918985	Identifier	assert_depth		908484	1					
ANR	918986	PrimaryExpression	1		908484	1					
ANR	918987	IfStatement	if ( bravalue == OP_COND && lengthptr == NULL )		908484	154					
ANR	918988	Condition	bravalue == OP_COND && lengthptr == NULL	7736:8:255607:255646	908484	0	True				
ANR	918989	AndExpression	bravalue == OP_COND && lengthptr == NULL		908484	0		&&			
ANR	918990	EqualityExpression	bravalue == OP_COND		908484	0		==			
ANR	918991	Identifier	bravalue		908484	0					
ANR	918992	Identifier	OP_COND		908484	1					
ANR	918993	EqualityExpression	lengthptr == NULL		908484	1		==			
ANR	918994	Identifier	lengthptr		908484	0					
ANR	918995	Identifier	NULL		908484	1					
ANR	918996	CompoundStatement		3282:6:115816:115833	908484	1					
ANR	918997	IdentifierDeclStatement	pcre_uchar * tc = code ;	7738:6:255663:255684	908484	0	True				
ANR	918998	IdentifierDecl	* tc = code		908484	0					
ANR	918999	IdentifierDeclType	pcre_uchar *		908484	0					
ANR	919000	Identifier	tc		908484	1					
ANR	919001	AssignmentExpression	* tc = code		908484	2		=			
ANR	919002	Identifier	code		908484	0					
ANR	919003	Identifier	code		908484	1					
ANR	919004	IdentifierDeclStatement	int condcount = 0 ;	7739:6:255692:255709	908484	1	True				
ANR	919005	IdentifierDecl	condcount = 0		908484	0					
ANR	919006	IdentifierDeclType	int		908484	0					
ANR	919007	Identifier	condcount		908484	1					
ANR	919008	AssignmentExpression	condcount = 0		908484	2		=			
ANR	919009	Identifier	condcount		908484	0					
ANR	919010	PrimaryExpression	0		908484	1					
ANR	919011	DoStatement	do		908484	2					
ANR	919012	CompoundStatement		3284:9:115845:115845	908484	0					
ANR	919013	ExpressionStatement	condcount ++	7742:9:255732:255743	908484	0	True				
ANR	919014	PostIncDecOperationExpression	condcount ++		908484	0					
ANR	919015	Identifier	condcount		908484	0					
ANR	919016	IncDec	++		908484	1					
ANR	919017	ExpressionStatement	"tc += GET ( tc , 1 )"	7743:9:255754:255769	908484	1	True				
ANR	919018	AssignmentExpression	"tc += GET ( tc , 1 )"		908484	0		+=			
ANR	919019	Identifier	tc		908484	0					
ANR	919020	CallExpression	"GET ( tc , 1 )"		908484	1					
ANR	919021	Callee	GET		908484	0					
ANR	919022	Identifier	GET		908484	0					
ANR	919023	ArgumentList	tc		908484	1					
ANR	919024	Argument	tc		908484	0					
ANR	919025	Identifier	tc		908484	0					
ANR	919026	Argument	1		908484	1					
ANR	919027	PrimaryExpression	1		908484	0					
ANR	919028	Condition	* tc != OP_KET	7745:13:255795:255807	908484	1	True				
ANR	919029	EqualityExpression	* tc != OP_KET		908484	0		!=			
ANR	919030	UnaryOperationExpression	* tc		908484	0					
ANR	919031	UnaryOperator	*		908484	0					
ANR	919032	Identifier	tc		908484	1					
ANR	919033	Identifier	OP_KET		908484	1					
ANR	919034	IfStatement	if ( code [ LINK_SIZE + 1 ] == OP_DEF )		908484	3					
ANR	919035	Condition	code [ LINK_SIZE + 1 ] == OP_DEF	7750:10:255944:255970	908484	0	True				
ANR	919036	EqualityExpression	code [ LINK_SIZE + 1 ] == OP_DEF		908484	0		==			
ANR	919037	ArrayIndexing	code [ LINK_SIZE + 1 ]		908484	0					
ANR	919038	Identifier	code		908484	0					
ANR	919039	AdditiveExpression	LINK_SIZE + 1		908484	1		+			
ANR	919040	Identifier	LINK_SIZE		908484	0					
ANR	919041	PrimaryExpression	1		908484	1					
ANR	919042	Identifier	OP_DEF		908484	1					
ANR	919043	CompoundStatement		3294:8:116105:116105	908484	1					
ANR	919044	IfStatement	if ( condcount > 1 )		908484	0					
ANR	919045	Condition	condcount > 1	7752:12:255995:256007	908484	0	True				
ANR	919046	RelationalExpression	condcount > 1		908484	0		>			
ANR	919047	Identifier	condcount		908484	0					
ANR	919048	PrimaryExpression	1		908484	1					
ANR	919049	CompoundStatement		3296:10:116144:116144	908484	1					
ANR	919050	ExpressionStatement	* errorcodeptr = ERR54	7754:10:256032:256053	908484	0	True				
ANR	919051	AssignmentExpression	* errorcodeptr = ERR54		908484	0		=			
ANR	919052	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919053	UnaryOperator	*		908484	0					
ANR	919054	Identifier	errorcodeptr		908484	1					
ANR	919055	Identifier	ERR54		908484	1					
ANR	919056	GotoStatement	goto FAILED ;	7755:10:256065:256076	908484	1	True				
ANR	919057	Identifier	FAILED		908484	0					
ANR	919058	ExpressionStatement	bravalue = OP_DEF	7757:8:256098:256115	908484	1	True				
ANR	919059	AssignmentExpression	bravalue = OP_DEF		908484	0		=			
ANR	919060	Identifier	bravalue		908484	0					
ANR	919061	Identifier	OP_DEF		908484	1					
ANR	919062	ElseStatement	else		908484	0					
ANR	919063	CompoundStatement		3308:8:116511:116511	908484	0					
ANR	919064	IfStatement	if ( condcount > 2 )		908484	0					
ANR	919065	Condition	condcount > 2	7766:12:256401:256413	908484	0	True				
ANR	919066	RelationalExpression	condcount > 2		908484	0		>			
ANR	919067	Identifier	condcount		908484	0					
ANR	919068	PrimaryExpression	2		908484	1					
ANR	919069	CompoundStatement		3310:10:116550:116550	908484	1					
ANR	919070	ExpressionStatement	* errorcodeptr = ERR27	7768:10:256438:256459	908484	0	True				
ANR	919071	AssignmentExpression	* errorcodeptr = ERR27		908484	0		=			
ANR	919072	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919073	UnaryOperator	*		908484	0					
ANR	919074	Identifier	errorcodeptr		908484	1					
ANR	919075	Identifier	ERR27		908484	1					
ANR	919076	GotoStatement	goto FAILED ;	7769:10:256471:256482	908484	1	True				
ANR	919077	Identifier	FAILED		908484	0					
ANR	919078	IfStatement	if ( condcount == 1 )		908484	1					
ANR	919079	Condition	condcount == 1	7771:12:256508:256521	908484	0	True				
ANR	919080	EqualityExpression	condcount == 1		908484	0		==			
ANR	919081	Identifier	condcount		908484	0					
ANR	919082	PrimaryExpression	1		908484	1					
ANR	919083	ExpressionStatement	subfirstcharflags = subreqcharflags = REQ_NONE	7771:28:256524:256570	908484	1	True				
ANR	919084	AssignmentExpression	subfirstcharflags = subreqcharflags = REQ_NONE		908484	0		=			
ANR	919085	Identifier	subfirstcharflags		908484	0					
ANR	919086	AssignmentExpression	subreqcharflags = REQ_NONE		908484	1		=			
ANR	919087	Identifier	subreqcharflags		908484	0					
ANR	919088	Identifier	REQ_NONE		908484	1					
ANR	919089	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		908484	155					
ANR	919090	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	7777:8:256638:256667	908484	0	True				
ANR	919091	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		908484	0		!=			
ANR	919092	UnaryOperationExpression	* ptr		908484	0					
ANR	919093	UnaryOperator	*		908484	0					
ANR	919094	Identifier	ptr		908484	1					
ANR	919095	Identifier	CHAR_RIGHT_PARENTHESIS		908484	1					
ANR	919096	CompoundStatement		3321:6:116800:116800	908484	1					
ANR	919097	ExpressionStatement	* errorcodeptr = ERR14	7779:6:256684:256705	908484	0	True				
ANR	919098	AssignmentExpression	* errorcodeptr = ERR14		908484	0		=			
ANR	919099	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919100	UnaryOperator	*		908484	0					
ANR	919101	Identifier	errorcodeptr		908484	1					
ANR	919102	Identifier	ERR14		908484	1					
ANR	919103	GotoStatement	goto FAILED ;	7780:6:256713:256724	908484	1	True				
ANR	919104	Identifier	FAILED		908484	0					
ANR	919105	IfStatement	if ( lengthptr != NULL )		908484	156					
ANR	919106	Condition	lengthptr != NULL	7788:8:257012:257028	908484	0	True				
ANR	919107	EqualityExpression	lengthptr != NULL		908484	0		!=			
ANR	919108	Identifier	lengthptr		908484	0					
ANR	919109	Identifier	NULL		908484	1					
ANR	919110	CompoundStatement		3332:6:117161:117161	908484	1					
ANR	919111	IfStatement	if ( OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE )		908484	0					
ANR	919112	Condition	OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE	7790:10:257049:257107	908484	0	True				
ANR	919113	RelationalExpression	OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE		908484	0		<			
ANR	919114	AdditiveExpression	OFLOW_MAX - * lengthptr		908484	0		-			
ANR	919115	Identifier	OFLOW_MAX		908484	0					
ANR	919116	UnaryOperationExpression	* lengthptr		908484	1					
ANR	919117	UnaryOperator	*		908484	0					
ANR	919118	Identifier	lengthptr		908484	1					
ANR	919119	AdditiveExpression	length_prevgroup - 2 - 2 * LINK_SIZE		908484	1		-			
ANR	919120	Identifier	length_prevgroup		908484	0					
ANR	919121	AdditiveExpression	2 - 2 * LINK_SIZE		908484	1		-			
ANR	919122	PrimaryExpression	2		908484	0					
ANR	919123	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	919124	PrimaryExpression	2		908484	0					
ANR	919125	Identifier	LINK_SIZE		908484	1					
ANR	919126	CompoundStatement		3334:8:117242:117242	908484	1					
ANR	919127	ExpressionStatement	* errorcodeptr = ERR20	7792:8:257128:257149	908484	0	True				
ANR	919128	AssignmentExpression	* errorcodeptr = ERR20		908484	0		=			
ANR	919129	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919130	UnaryOperator	*		908484	0					
ANR	919131	Identifier	errorcodeptr		908484	1					
ANR	919132	Identifier	ERR20		908484	1					
ANR	919133	GotoStatement	goto FAILED ;	7793:8:257159:257170	908484	1	True				
ANR	919134	Identifier	FAILED		908484	0					
ANR	919135	ExpressionStatement	* lengthptr += length_prevgroup - 2 - 2 * LINK_SIZE	7795:6:257188:257236	908484	1	True				
ANR	919136	AssignmentExpression	* lengthptr += length_prevgroup - 2 - 2 * LINK_SIZE		908484	0		+=			
ANR	919137	UnaryOperationExpression	* lengthptr		908484	0					
ANR	919138	UnaryOperator	*		908484	0					
ANR	919139	Identifier	lengthptr		908484	1					
ANR	919140	AdditiveExpression	length_prevgroup - 2 - 2 * LINK_SIZE		908484	1		-			
ANR	919141	Identifier	length_prevgroup		908484	0					
ANR	919142	AdditiveExpression	2 - 2 * LINK_SIZE		908484	1		-			
ANR	919143	PrimaryExpression	2		908484	0					
ANR	919144	MultiplicativeExpression	2 * LINK_SIZE		908484	1		*			
ANR	919145	PrimaryExpression	2		908484	0					
ANR	919146	Identifier	LINK_SIZE		908484	1					
ANR	919147	ExpressionStatement	code ++	7796:6:257244:257250	908484	2	True				
ANR	919148	PostIncDecOperationExpression	code ++		908484	0					
ANR	919149	Identifier	code		908484	0					
ANR	919150	IncDec	++		908484	1					
ANR	919151	ExpressionStatement	"PUTINC ( code , 0 , 1 + LINK_SIZE )"	7797:6:257297:257327	908484	3	True				
ANR	919152	CallExpression	"PUTINC ( code , 0 , 1 + LINK_SIZE )"		908484	0					
ANR	919153	Callee	PUTINC		908484	0					
ANR	919154	Identifier	PUTINC		908484	0					
ANR	919155	ArgumentList	code		908484	1					
ANR	919156	Argument	code		908484	0					
ANR	919157	Identifier	code		908484	0					
ANR	919158	Argument	0		908484	1					
ANR	919159	PrimaryExpression	0		908484	0					
ANR	919160	Argument	1 + LINK_SIZE		908484	2					
ANR	919161	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	919162	PrimaryExpression	1		908484	0					
ANR	919163	Identifier	LINK_SIZE		908484	1					
ANR	919164	ExpressionStatement	* code ++ = OP_KET	7798:6:257335:257351	908484	4	True				
ANR	919165	AssignmentExpression	* code ++ = OP_KET		908484	0		=			
ANR	919166	UnaryOperationExpression	* code ++		908484	0					
ANR	919167	UnaryOperator	*		908484	0					
ANR	919168	PostIncDecOperationExpression	code ++		908484	1					
ANR	919169	Identifier	code		908484	0					
ANR	919170	IncDec	++		908484	1					
ANR	919171	Identifier	OP_KET		908484	1					
ANR	919172	ExpressionStatement	"PUTINC ( code , 0 , 1 + LINK_SIZE )"	7799:6:257359:257389	908484	5	True				
ANR	919173	CallExpression	"PUTINC ( code , 0 , 1 + LINK_SIZE )"		908484	0					
ANR	919174	Callee	PUTINC		908484	0					
ANR	919175	Identifier	PUTINC		908484	0					
ANR	919176	ArgumentList	code		908484	1					
ANR	919177	Argument	code		908484	0					
ANR	919178	Identifier	code		908484	0					
ANR	919179	Argument	0		908484	1					
ANR	919180	PrimaryExpression	0		908484	0					
ANR	919181	Argument	1 + LINK_SIZE		908484	2					
ANR	919182	AdditiveExpression	1 + LINK_SIZE		908484	0		+			
ANR	919183	PrimaryExpression	1		908484	0					
ANR	919184	Identifier	LINK_SIZE		908484	1					
ANR	919185	BreakStatement	break ;	7800:6:257397:257402	908484	6	True				
ANR	919186	ExpressionStatement	code = tempcode	7805:4:257555:257570	908484	157	True				
ANR	919187	AssignmentExpression	code = tempcode		908484	0		=			
ANR	919188	Identifier	code		908484	0					
ANR	919189	Identifier	tempcode		908484	1					
ANR	919190	IfStatement	if ( bravalue == OP_DEF )		908484	158					
ANR	919191	Condition	bravalue == OP_DEF	7810:8:257672:257689	908484	0	True				
ANR	919192	EqualityExpression	bravalue == OP_DEF		908484	0		==			
ANR	919193	Identifier	bravalue		908484	0					
ANR	919194	Identifier	OP_DEF		908484	1					
ANR	919195	BreakStatement	break ;	7810:28:257692:257697	908484	1	True				
ANR	919196	ExpressionStatement	zeroreqchar = reqchar	7819:4:258111:258132	908484	159	True				
ANR	919197	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	919198	Identifier	zeroreqchar		908484	0					
ANR	919199	Identifier	reqchar		908484	1					
ANR	919200	ExpressionStatement	zeroreqcharflags = reqcharflags	7820:4:258138:258169	908484	160	True				
ANR	919201	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	919202	Identifier	zeroreqcharflags		908484	0					
ANR	919203	Identifier	reqcharflags		908484	1					
ANR	919204	ExpressionStatement	zerofirstchar = firstchar	7821:4:258175:258200	908484	161	True				
ANR	919205	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	919206	Identifier	zerofirstchar		908484	0					
ANR	919207	Identifier	firstchar		908484	1					
ANR	919208	ExpressionStatement	zerofirstcharflags = firstcharflags	7822:4:258206:258241	908484	162	True				
ANR	919209	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	919210	Identifier	zerofirstcharflags		908484	0					
ANR	919211	Identifier	firstcharflags		908484	1					
ANR	919212	ExpressionStatement	groupsetfirstchar = FALSE	7823:4:258247:258272	908484	163	True				
ANR	919213	AssignmentExpression	groupsetfirstchar = FALSE		908484	0		=			
ANR	919214	Identifier	groupsetfirstchar		908484	0					
ANR	919215	Identifier	FALSE		908484	1					
ANR	919216	IfStatement	if ( bravalue >= OP_ONCE )		908484	164					
ANR	919217	Condition	bravalue >= OP_ONCE	7825:8:258283:258301	908484	0	True				
ANR	919218	RelationalExpression	bravalue >= OP_ONCE		908484	0		>=			
ANR	919219	Identifier	bravalue		908484	0					
ANR	919220	Identifier	OP_ONCE		908484	1					
ANR	919221	CompoundStatement		3369:6:118434:118434	908484	1					
ANR	919222	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	0					
ANR	919223	Condition	firstcharflags == REQ_UNSET	7833:10:258674:258700	908484	0	True				
ANR	919224	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	919225	Identifier	firstcharflags		908484	0					
ANR	919226	Identifier	REQ_UNSET		908484	1					
ANR	919227	CompoundStatement		3377:8:118835:118835	908484	1					
ANR	919228	IfStatement	if ( subfirstcharflags >= 0 )		908484	0					
ANR	919229	Condition	subfirstcharflags >= 0	7835:12:258725:258746	908484	0	True				
ANR	919230	RelationalExpression	subfirstcharflags >= 0		908484	0		>=			
ANR	919231	Identifier	subfirstcharflags		908484	0					
ANR	919232	PrimaryExpression	0		908484	1					
ANR	919233	CompoundStatement		3379:10:118883:118883	908484	1					
ANR	919234	ExpressionStatement	firstchar = subfirstchar	7837:10:258771:258795	908484	0	True				
ANR	919235	AssignmentExpression	firstchar = subfirstchar		908484	0		=			
ANR	919236	Identifier	firstchar		908484	0					
ANR	919237	Identifier	subfirstchar		908484	1					
ANR	919238	ExpressionStatement	firstcharflags = subfirstcharflags	7838:10:258807:258841	908484	1	True				
ANR	919239	AssignmentExpression	firstcharflags = subfirstcharflags		908484	0		=			
ANR	919240	Identifier	firstcharflags		908484	0					
ANR	919241	Identifier	subfirstcharflags		908484	1					
ANR	919242	ExpressionStatement	groupsetfirstchar = TRUE	7839:10:258853:258877	908484	2	True				
ANR	919243	AssignmentExpression	groupsetfirstchar = TRUE		908484	0		=			
ANR	919244	Identifier	groupsetfirstchar		908484	0					
ANR	919245	Identifier	TRUE		908484	1					
ANR	919246	ElseStatement	else		908484	0					
ANR	919247	ExpressionStatement	firstcharflags = REQ_NONE	7841:13:258904:258929	908484	0	True				
ANR	919248	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	919249	Identifier	firstcharflags		908484	0					
ANR	919250	Identifier	REQ_NONE		908484	1					
ANR	919251	ExpressionStatement	zerofirstcharflags = REQ_NONE	7842:8:258939:258968	908484	1	True				
ANR	919252	AssignmentExpression	zerofirstcharflags = REQ_NONE		908484	0		=			
ANR	919253	Identifier	zerofirstcharflags		908484	0					
ANR	919254	Identifier	REQ_NONE		908484	1					
ANR	919255	ElseStatement	else		908484	0					
ANR	919256	IfStatement	if ( subfirstcharflags >= 0 && subreqcharflags < 0 )		908484	0					
ANR	919257	Condition	subfirstcharflags >= 0 && subreqcharflags < 0	7849:15:259177:259221	908484	0	True				
ANR	919258	AndExpression	subfirstcharflags >= 0 && subreqcharflags < 0		908484	0		&&			
ANR	919259	RelationalExpression	subfirstcharflags >= 0		908484	0		>=			
ANR	919260	Identifier	subfirstcharflags		908484	0					
ANR	919261	PrimaryExpression	0		908484	1					
ANR	919262	RelationalExpression	subreqcharflags < 0		908484	1		<			
ANR	919263	Identifier	subreqcharflags		908484	0					
ANR	919264	PrimaryExpression	0		908484	1					
ANR	919265	CompoundStatement		3393:8:119356:119356	908484	1					
ANR	919266	ExpressionStatement	subreqchar = subfirstchar	7851:8:259242:259267	908484	0	True				
ANR	919267	AssignmentExpression	subreqchar = subfirstchar		908484	0		=			
ANR	919268	Identifier	subreqchar		908484	0					
ANR	919269	Identifier	subfirstchar		908484	1					
ANR	919270	ExpressionStatement	subreqcharflags = subfirstcharflags | tempreqvary	7852:8:259277:259326	908484	1	True				
ANR	919271	AssignmentExpression	subreqcharflags = subfirstcharflags | tempreqvary		908484	0		=			
ANR	919272	Identifier	subreqcharflags		908484	0					
ANR	919273	InclusiveOrExpression	subfirstcharflags | tempreqvary		908484	1		|			
ANR	919274	Identifier	subfirstcharflags		908484	0					
ANR	919275	Identifier	tempreqvary		908484	1					
ANR	919276	IfStatement	if ( subreqcharflags >= 0 )		908484	1					
ANR	919277	Condition	subreqcharflags >= 0	7858:10:259482:259501	908484	0	True				
ANR	919278	RelationalExpression	subreqcharflags >= 0		908484	0		>=			
ANR	919279	Identifier	subreqcharflags		908484	0					
ANR	919280	PrimaryExpression	0		908484	1					
ANR	919281	CompoundStatement		3402:8:119636:119636	908484	1					
ANR	919282	ExpressionStatement	reqchar = subreqchar	7860:8:259522:259542	908484	0	True				
ANR	919283	AssignmentExpression	reqchar = subreqchar		908484	0		=			
ANR	919284	Identifier	reqchar		908484	0					
ANR	919285	Identifier	subreqchar		908484	1					
ANR	919286	ExpressionStatement	reqcharflags = subreqcharflags	7861:8:259552:259582	908484	1	True				
ANR	919287	AssignmentExpression	reqcharflags = subreqcharflags		908484	0		=			
ANR	919288	Identifier	reqcharflags		908484	0					
ANR	919289	Identifier	subreqcharflags		908484	1					
ANR	919290	ElseStatement	else		908484	0					
ANR	919291	IfStatement	if ( bravalue == OP_ASSERT && subreqcharflags >= 0 )		908484	0					
ANR	919292	Condition	bravalue == OP_ASSERT && subreqcharflags >= 0	7873:13:260130:260174	908484	0	True				
ANR	919293	AndExpression	bravalue == OP_ASSERT && subreqcharflags >= 0		908484	0		&&			
ANR	919294	EqualityExpression	bravalue == OP_ASSERT		908484	0		==			
ANR	919295	Identifier	bravalue		908484	0					
ANR	919296	Identifier	OP_ASSERT		908484	1					
ANR	919297	RelationalExpression	subreqcharflags >= 0		908484	1		>=			
ANR	919298	Identifier	subreqcharflags		908484	0					
ANR	919299	PrimaryExpression	0		908484	1					
ANR	919300	CompoundStatement		3417:6:120307:120307	908484	1					
ANR	919301	ExpressionStatement	reqchar = subreqchar	7875:6:260191:260211	908484	0	True				
ANR	919302	AssignmentExpression	reqchar = subreqchar		908484	0		=			
ANR	919303	Identifier	reqchar		908484	0					
ANR	919304	Identifier	subreqchar		908484	1					
ANR	919305	ExpressionStatement	reqcharflags = subreqcharflags	7876:6:260219:260249	908484	1	True				
ANR	919306	AssignmentExpression	reqcharflags = subreqcharflags		908484	0		=			
ANR	919307	Identifier	reqcharflags		908484	0					
ANR	919308	Identifier	subreqcharflags		908484	1					
ANR	919309	BreakStatement	break ;	7878:4:260263:260268	908484	165	True				
ANR	919310	Label	case CHAR_BACKSLASH :	7890:4:260872:260891	908484	166	True				
ANR	919311	Identifier	CHAR_BACKSLASH		908484	0					
ANR	919312	ExpressionStatement	tempptr = ptr	7891:4:260897:260910	908484	167	True				
ANR	919313	AssignmentExpression	tempptr = ptr		908484	0		=			
ANR	919314	Identifier	tempptr		908484	0					
ANR	919315	Identifier	ptr		908484	1					
ANR	919316	ExpressionStatement	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"	7892:4:260916:260992	908484	168	True				
ANR	919317	AssignmentExpression	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"		908484	0		=			
ANR	919318	Identifier	escape		908484	0					
ANR	919319	CallExpression	"check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"		908484	1					
ANR	919320	Callee	check_escape		908484	0					
ANR	919321	Identifier	check_escape		908484	0					
ANR	919322	ArgumentList	& ptr		908484	1					
ANR	919323	Argument	& ptr		908484	0					
ANR	919324	UnaryOperationExpression	& ptr		908484	0					
ANR	919325	UnaryOperator	&		908484	0					
ANR	919326	Identifier	ptr		908484	1					
ANR	919327	Argument	& ec		908484	1					
ANR	919328	UnaryOperationExpression	& ec		908484	0					
ANR	919329	UnaryOperator	&		908484	0					
ANR	919330	Identifier	ec		908484	1					
ANR	919331	Argument	errorcodeptr		908484	2					
ANR	919332	Identifier	errorcodeptr		908484	0					
ANR	919333	Argument	cd -> bracount		908484	3					
ANR	919334	PtrMemberAccess	cd -> bracount		908484	0					
ANR	919335	Identifier	cd		908484	0					
ANR	919336	Identifier	bracount		908484	1					
ANR	919337	Argument	options		908484	4					
ANR	919338	Identifier	options		908484	0					
ANR	919339	Argument	FALSE		908484	5					
ANR	919340	Identifier	FALSE		908484	0					
ANR	919341	IfStatement	if ( * errorcodeptr != 0 )		908484	169					
ANR	919342	Condition	* errorcodeptr != 0	7893:8:261002:261019	908484	0	True				
ANR	919343	EqualityExpression	* errorcodeptr != 0		908484	0		!=			
ANR	919344	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919345	UnaryOperator	*		908484	0					
ANR	919346	Identifier	errorcodeptr		908484	1					
ANR	919347	PrimaryExpression	0		908484	1					
ANR	919348	GotoStatement	goto FAILED ;	7893:28:261022:261033	908484	1	True				
ANR	919349	Identifier	FAILED		908484	0					
ANR	919350	IfStatement	if ( escape == 0 )		908484	170					
ANR	919351	Condition	escape == 0	7895:8:261044:261054	908484	0	True				
ANR	919352	EqualityExpression	escape == 0		908484	0		==			
ANR	919353	Identifier	escape		908484	0					
ANR	919354	PrimaryExpression	0		908484	1					
ANR	919355	ExpressionStatement	c = ec	7896:6:261122:261128	908484	1	True				
ANR	919356	AssignmentExpression	c = ec		908484	0		=			
ANR	919357	Identifier	c		908484	0					
ANR	919358	Identifier	ec		908484	1					
ANR	919359	ElseStatement	else		908484	0					
ANR	919360	CompoundStatement		3441:6:121269:121269	908484	0					
ANR	919361	IfStatement	if ( escape == ESC_Q )		908484	0					
ANR	919362	Condition	escape == ESC_Q	7899:10:261157:261171	908484	0	True				
ANR	919363	EqualityExpression	escape == ESC_Q		908484	0		==			
ANR	919364	Identifier	escape		908484	0					
ANR	919365	Identifier	ESC_Q		908484	1					
ANR	919366	CompoundStatement		3443:8:121353:121353	908484	1					
ANR	919367	IfStatement	if ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		908484	0					
ANR	919368	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	7901:12:261243:261286	908484	0	True				
ANR	919369	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		908484	0		&&			
ANR	919370	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		908484	0		==			
ANR	919371	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	919372	Identifier	ptr		908484	0					
ANR	919373	PrimaryExpression	1		908484	1					
ANR	919374	Identifier	CHAR_BACKSLASH		908484	1					
ANR	919375	EqualityExpression	ptr [ 2 ] == CHAR_E		908484	1		==			
ANR	919376	ArrayIndexing	ptr [ 2 ]		908484	0					
ANR	919377	Identifier	ptr		908484	0					
ANR	919378	PrimaryExpression	2		908484	1					
ANR	919379	Identifier	CHAR_E		908484	1					
ANR	919380	ExpressionStatement	ptr += 2	7902:10:261299:261307	908484	1	True				
ANR	919381	AssignmentExpression	ptr += 2		908484	0		+=			
ANR	919382	Identifier	ptr		908484	0					
ANR	919383	PrimaryExpression	2		908484	1					
ANR	919384	ElseStatement	else		908484	0					
ANR	919385	ExpressionStatement	inescq = TRUE	7903:17:261365:261378	908484	0	True				
ANR	919386	AssignmentExpression	inescq = TRUE		908484	0		=			
ANR	919387	Identifier	inescq		908484	0					
ANR	919388	Identifier	TRUE		908484	1					
ANR	919389	ContinueStatement	continue ;	7904:8:261388:261396	908484	1	True				
ANR	919390	IfStatement	if ( escape == ESC_E )		908484	1					
ANR	919391	Condition	escape == ESC_E	7907:10:261419:261433	908484	0	True				
ANR	919392	EqualityExpression	escape == ESC_E		908484	0		==			
ANR	919393	Identifier	escape		908484	0					
ANR	919394	Identifier	ESC_E		908484	1					
ANR	919395	ContinueStatement	continue ;	7907:27:261436:261444	908484	1	True				
ANR	919396	IfStatement	if ( firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z )		908484	2					
ANR	919397	Condition	firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z	7912:10:261635:261697	908484	0	True				
ANR	919398	AndExpression	firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z		908484	0		&&			
ANR	919399	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	919400	Identifier	firstcharflags		908484	0					
ANR	919401	Identifier	REQ_UNSET		908484	1					
ANR	919402	AndExpression	escape > ESC_b && escape < ESC_Z		908484	1		&&			
ANR	919403	RelationalExpression	escape > ESC_b		908484	0		>			
ANR	919404	Identifier	escape		908484	0					
ANR	919405	Identifier	ESC_b		908484	1					
ANR	919406	RelationalExpression	escape < ESC_Z		908484	1		<			
ANR	919407	Identifier	escape		908484	0					
ANR	919408	Identifier	ESC_Z		908484	1					
ANR	919409	ExpressionStatement	firstcharflags = REQ_NONE	7913:8:261708:261733	908484	1	True				
ANR	919410	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	919411	Identifier	firstcharflags		908484	0					
ANR	919412	Identifier	REQ_NONE		908484	1					
ANR	919413	ExpressionStatement	zerofirstchar = firstchar	7917:6:261816:261841	908484	3	True				
ANR	919414	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	919415	Identifier	zerofirstchar		908484	0					
ANR	919416	Identifier	firstchar		908484	1					
ANR	919417	ExpressionStatement	zerofirstcharflags = firstcharflags	7918:6:261849:261884	908484	4	True				
ANR	919418	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	919419	Identifier	zerofirstcharflags		908484	0					
ANR	919420	Identifier	firstcharflags		908484	1					
ANR	919421	ExpressionStatement	zeroreqchar = reqchar	7919:6:261892:261913	908484	5	True				
ANR	919422	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	919423	Identifier	zeroreqchar		908484	0					
ANR	919424	Identifier	reqchar		908484	1					
ANR	919425	ExpressionStatement	zeroreqcharflags = reqcharflags	7920:6:261921:261952	908484	6	True				
ANR	919426	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	919427	Identifier	zeroreqcharflags		908484	0					
ANR	919428	Identifier	reqcharflags		908484	1					
ANR	919429	IfStatement	if ( escape == ESC_g )		908484	7					
ANR	919430	Condition	escape == ESC_g	7929:10:262394:262408	908484	0	True				
ANR	919431	EqualityExpression	escape == ESC_g		908484	0		==			
ANR	919432	Identifier	escape		908484	0					
ANR	919433	Identifier	ESC_g		908484	1					
ANR	919434	CompoundStatement		3475:8:122582:122596	908484	1					
ANR	919435	IdentifierDeclStatement	const pcre_uchar * p ;	7931:8:262429:262448	908484	0	True				
ANR	919436	IdentifierDecl	* p		908484	0					
ANR	919437	IdentifierDeclType	const pcre_uchar *		908484	0					
ANR	919438	Identifier	p		908484	1					
ANR	919439	IdentifierDeclStatement	pcre_uint32 cf ;	7932:8:262458:262472	908484	1	True				
ANR	919440	IdentifierDecl	cf		908484	0					
ANR	919441	IdentifierDeclType	pcre_uint32		908484	0					
ANR	919442	Identifier	cf		908484	1					
ANR	919443	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	7934:8:262483:262530	908484	2	True				
ANR	919444	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	919445	Identifier	item_hwm_offset		908484	0					
ANR	919446	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	919447	PtrMemberAccess	cd -> hwm		908484	0					
ANR	919448	Identifier	cd		908484	0					
ANR	919449	Identifier	hwm		908484	1					
ANR	919450	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	919451	Identifier	cd		908484	0					
ANR	919452	Identifier	start_workspace		908484	1					
ANR	919453	ExpressionStatement	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE	7935:8:262586:262684	908484	3	True				
ANR	919454	AssignmentExpression	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		908484	0		=			
ANR	919455	Identifier	terminator		908484	0					
ANR	919456	ConditionalExpression	( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		908484	1					
ANR	919457	Condition	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		908484	0					
ANR	919458	EqualityExpression	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		908484	0		==			
ANR	919459	UnaryOperationExpression	* ( ++ ptr )		908484	0					
ANR	919460	UnaryOperator	*		908484	0					
ANR	919461	UnaryExpression	++ ptr		908484	1					
ANR	919462	IncDec	++		908484	0					
ANR	919463	Identifier	ptr		908484	1					
ANR	919464	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	919465	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	919466	Identifier	CHAR_APOSTROPHE		908484	2					
ANR	919467	ExpressionStatement	skipbytes = 0	7943:8:262978:262991	908484	4	True				
ANR	919468	AssignmentExpression	skipbytes = 0		908484	0		=			
ANR	919469	Identifier	skipbytes		908484	0					
ANR	919470	PrimaryExpression	0		908484	1					
ANR	919471	ExpressionStatement	reset_bracount = FALSE	7944:8:263001:263023	908484	5	True				
ANR	919472	AssignmentExpression	reset_bracount = FALSE		908484	0		=			
ANR	919473	Identifier	reset_bracount		908484	0					
ANR	919474	Identifier	FALSE		908484	1					
ANR	919475	ExpressionStatement	cf = ptr [ 1 ]	7948:8:263110:263121	908484	6	True				
ANR	919476	AssignmentExpression	cf = ptr [ 1 ]		908484	0		=			
ANR	919477	Identifier	cf		908484	0					
ANR	919478	ArrayIndexing	ptr [ 1 ]		908484	1					
ANR	919479	Identifier	ptr		908484	0					
ANR	919480	PrimaryExpression	1		908484	1					
ANR	919481	IfStatement	if ( cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf ) )		908484	7					
ANR	919482	Condition	cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf )	7949:12:263135:263186	908484	0	True				
ANR	919483	AndExpression	cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf )		908484	0		&&			
ANR	919484	EqualityExpression	cf != CHAR_PLUS		908484	0		!=			
ANR	919485	Identifier	cf		908484	0					
ANR	919486	Identifier	CHAR_PLUS		908484	1					
ANR	919487	AndExpression	cf != CHAR_MINUS && ! IS_DIGIT ( cf )		908484	1		&&			
ANR	919488	EqualityExpression	cf != CHAR_MINUS		908484	0		!=			
ANR	919489	Identifier	cf		908484	0					
ANR	919490	Identifier	CHAR_MINUS		908484	1					
ANR	919491	UnaryOperationExpression	! IS_DIGIT ( cf )		908484	1					
ANR	919492	UnaryOperator	!		908484	0					
ANR	919493	CallExpression	IS_DIGIT ( cf )		908484	1					
ANR	919494	Callee	IS_DIGIT		908484	0					
ANR	919495	Identifier	IS_DIGIT		908484	0					
ANR	919496	ArgumentList	cf		908484	1					
ANR	919497	Argument	cf		908484	0					
ANR	919498	Identifier	cf		908484	0					
ANR	919499	CompoundStatement		3493:10:123323:123323	908484	1					
ANR	919500	ExpressionStatement	is_recurse = TRUE	7951:10:263211:263228	908484	0	True				
ANR	919501	AssignmentExpression	is_recurse = TRUE		908484	0		=			
ANR	919502	Identifier	is_recurse		908484	0					
ANR	919503	Identifier	TRUE		908484	1					
ANR	919504	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7952:10:263240:263265	908484	1	True				
ANR	919505	Identifier	NAMED_REF_OR_RECURSE		908484	0					
ANR	919506	ExpressionStatement	p = ptr + 2	7958:8:263392:263403	908484	8	True				
ANR	919507	AssignmentExpression	p = ptr + 2		908484	0		=			
ANR	919508	Identifier	p		908484	0					
ANR	919509	AdditiveExpression	ptr + 2		908484	1		+			
ANR	919510	Identifier	ptr		908484	0					
ANR	919511	PrimaryExpression	2		908484	1					
ANR	919512	WhileStatement	while ( IS_DIGIT ( * p ) )		908484	9					
ANR	919513	Condition	IS_DIGIT ( * p )	7959:15:263420:263431	908484	0	True				
ANR	919514	CallExpression	IS_DIGIT ( * p )		908484	0					
ANR	919515	Callee	IS_DIGIT		908484	0					
ANR	919516	Identifier	IS_DIGIT		908484	0					
ANR	919517	ArgumentList	* p		908484	1					
ANR	919518	Argument	* p		908484	0					
ANR	919519	UnaryOperationExpression	* p		908484	0					
ANR	919520	UnaryOperator	*		908484	0					
ANR	919521	Identifier	p		908484	1					
ANR	919522	ExpressionStatement	p ++	7959:29:263434:263437	908484	1	True				
ANR	919523	PostIncDecOperationExpression	p ++		908484	0					
ANR	919524	Identifier	p		908484	0					
ANR	919525	IncDec	++		908484	1					
ANR	919526	IfStatement	if ( * p != ( pcre_uchar ) terminator )		908484	10					
ANR	919527	Condition	* p != ( pcre_uchar ) terminator	7960:12:263451:263478	908484	0	True				
ANR	919528	EqualityExpression	* p != ( pcre_uchar ) terminator		908484	0		!=			
ANR	919529	UnaryOperationExpression	* p		908484	0					
ANR	919530	UnaryOperator	*		908484	0					
ANR	919531	Identifier	p		908484	1					
ANR	919532	CastExpression	( pcre_uchar ) terminator		908484	1					
ANR	919533	CastTarget	pcre_uchar		908484	0					
ANR	919534	Identifier	terminator		908484	1					
ANR	919535	CompoundStatement		3504:10:123615:123615	908484	1					
ANR	919536	ExpressionStatement	* errorcodeptr = ERR57	7962:10:263503:263524	908484	0	True				
ANR	919537	AssignmentExpression	* errorcodeptr = ERR57		908484	0		=			
ANR	919538	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919539	UnaryOperator	*		908484	0					
ANR	919540	Identifier	errorcodeptr		908484	1					
ANR	919541	Identifier	ERR57		908484	1					
ANR	919542	GotoStatement	goto FAILED ;	7963:10:263536:263547	908484	1	True				
ANR	919543	Identifier	FAILED		908484	0					
ANR	919544	ExpressionStatement	ptr ++	7965:8:263569:263574	908484	11	True				
ANR	919545	PostIncDecOperationExpression	ptr ++		908484	0					
ANR	919546	Identifier	ptr		908484	0					
ANR	919547	IncDec	++		908484	1					
ANR	919548	GotoStatement	goto HANDLE_NUMERICAL_RECURSION ;	7966:8:263584:263615	908484	12	True				
ANR	919549	Identifier	HANDLE_NUMERICAL_RECURSION		908484	0					
ANR	919550	IfStatement	if ( escape == ESC_k )		908484	8					
ANR	919551	Condition	escape == ESC_k	7972:10:263762:263776	908484	0	True				
ANR	919552	EqualityExpression	escape == ESC_k		908484	0		==			
ANR	919553	Identifier	escape		908484	0					
ANR	919554	Identifier	ESC_k		908484	1					
ANR	919555	CompoundStatement		3516:8:123911:123911	908484	1					
ANR	919556	IfStatement	if ( ( ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET ) )		908484	0					
ANR	919557	Condition	ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET	7974:12:263801:263907	908484	0	True				
ANR	919558	AndExpression	ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		908484	0		&&			
ANR	919559	EqualityExpression	ptr [ 1 ] != CHAR_LESS_THAN_SIGN		908484	0		!=			
ANR	919560	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	919561	Identifier	ptr		908484	0					
ANR	919562	PrimaryExpression	1		908484	1					
ANR	919563	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	919564	AndExpression	ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		908484	1		&&			
ANR	919565	EqualityExpression	ptr [ 1 ] != CHAR_APOSTROPHE		908484	0		!=			
ANR	919566	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	919567	Identifier	ptr		908484	0					
ANR	919568	PrimaryExpression	1		908484	1					
ANR	919569	Identifier	CHAR_APOSTROPHE		908484	1					
ANR	919570	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		908484	1		!=			
ANR	919571	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	919572	Identifier	ptr		908484	0					
ANR	919573	PrimaryExpression	1		908484	1					
ANR	919574	Identifier	CHAR_LEFT_CURLY_BRACKET		908484	1					
ANR	919575	CompoundStatement		3519:10:124044:124044	908484	1					
ANR	919576	ExpressionStatement	* errorcodeptr = ERR69	7977:10:263932:263953	908484	0	True				
ANR	919577	AssignmentExpression	* errorcodeptr = ERR69		908484	0		=			
ANR	919578	UnaryOperationExpression	* errorcodeptr		908484	0					
ANR	919579	UnaryOperator	*		908484	0					
ANR	919580	Identifier	errorcodeptr		908484	1					
ANR	919581	Identifier	ERR69		908484	1					
ANR	919582	GotoStatement	goto FAILED ;	7978:10:263965:263976	908484	1	True				
ANR	919583	Identifier	FAILED		908484	0					
ANR	919584	ExpressionStatement	is_recurse = FALSE	7980:8:263998:264016	908484	1	True				
ANR	919585	AssignmentExpression	is_recurse = FALSE		908484	0		=			
ANR	919586	Identifier	is_recurse		908484	0					
ANR	919587	Identifier	FALSE		908484	1					
ANR	919588	ExpressionStatement	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET	7981:8:264026:264188	908484	2	True				
ANR	919589	AssignmentExpression	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		908484	0		=			
ANR	919590	Identifier	terminator		908484	0					
ANR	919591	ConditionalExpression	( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		908484	1					
ANR	919592	Condition	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		908484	0					
ANR	919593	EqualityExpression	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		908484	0		==			
ANR	919594	UnaryOperationExpression	* ( ++ ptr )		908484	0					
ANR	919595	UnaryOperator	*		908484	0					
ANR	919596	UnaryExpression	++ ptr		908484	1					
ANR	919597	IncDec	++		908484	0					
ANR	919598	Identifier	ptr		908484	1					
ANR	919599	Identifier	CHAR_LESS_THAN_SIGN		908484	1					
ANR	919600	Identifier	CHAR_GREATER_THAN_SIGN		908484	1					
ANR	919601	ConditionalExpression	( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		908484	2					
ANR	919602	Condition	* ptr == CHAR_APOSTROPHE		908484	0					
ANR	919603	EqualityExpression	* ptr == CHAR_APOSTROPHE		908484	0		==			
ANR	919604	UnaryOperationExpression	* ptr		908484	0					
ANR	919605	UnaryOperator	*		908484	0					
ANR	919606	Identifier	ptr		908484	1					
ANR	919607	Identifier	CHAR_APOSTROPHE		908484	1					
ANR	919608	Identifier	CHAR_APOSTROPHE		908484	1					
ANR	919609	Identifier	CHAR_RIGHT_CURLY_BRACKET		908484	2					
ANR	919610	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7984:8:264198:264223	908484	3	True				
ANR	919611	Identifier	NAMED_REF_OR_RECURSE		908484	0					
ANR	919612	IfStatement	if ( escape < 0 )		908484	9					
ANR	919613	Condition	escape < 0	7991:10:264418:264427	908484	0	True				
ANR	919614	RelationalExpression	escape < 0		908484	0		<			
ANR	919615	Identifier	escape		908484	0					
ANR	919616	PrimaryExpression	0		908484	1					
ANR	919617	CompoundStatement		3536:8:124572:124588	908484	1					
ANR	919618	IdentifierDeclStatement	open_capitem * oc ;	7993:8:264448:264464	908484	0	True				
ANR	919619	IdentifierDecl	* oc		908484	0					
ANR	919620	IdentifierDeclType	open_capitem *		908484	0					
ANR	919621	Identifier	oc		908484	1					
ANR	919622	ExpressionStatement	recno = - escape	7994:8:264474:264489	908484	1	True				
ANR	919623	AssignmentExpression	recno = - escape		908484	0		=			
ANR	919624	Identifier	recno		908484	0					
ANR	919625	UnaryOperationExpression	- escape		908484	1					
ANR	919626	UnaryOperator	-		908484	0					
ANR	919627	Identifier	escape		908484	1					
ANR	919628	Label	HANDLE_REFERENCE :	7999:8:264633:264649	908484	2	True				
ANR	919629	Identifier	HANDLE_REFERENCE		908484	0					
ANR	919630	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	3					
ANR	919631	Condition	firstcharflags == REQ_UNSET	8000:12:264663:264689	908484	0	True				
ANR	919632	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	919633	Identifier	firstcharflags		908484	0					
ANR	919634	Identifier	REQ_UNSET		908484	1					
ANR	919635	ExpressionStatement	firstcharflags = REQ_NONE	8000:41:264692:264717	908484	1	True				
ANR	919636	AssignmentExpression	firstcharflags = REQ_NONE		908484	0		=			
ANR	919637	Identifier	firstcharflags		908484	0					
ANR	919638	Identifier	REQ_NONE		908484	1					
ANR	919639	ExpressionStatement	previous = code	8001:8:264727:264742	908484	4	True				
ANR	919640	AssignmentExpression	previous = code		908484	0		=			
ANR	919641	Identifier	previous		908484	0					
ANR	919642	Identifier	code		908484	1					
ANR	919643	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	8002:8:264752:264799	908484	5	True				
ANR	919644	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	919645	Identifier	item_hwm_offset		908484	0					
ANR	919646	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	919647	PtrMemberAccess	cd -> hwm		908484	0					
ANR	919648	Identifier	cd		908484	0					
ANR	919649	Identifier	hwm		908484	1					
ANR	919650	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	919651	Identifier	cd		908484	0					
ANR	919652	Identifier	start_workspace		908484	1					
ANR	919653	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF	8003:8:264809:264869	908484	6	True				
ANR	919654	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF		908484	0		=			
ANR	919655	UnaryOperationExpression	* code ++		908484	0					
ANR	919656	UnaryOperator	*		908484	0					
ANR	919657	PostIncDecOperationExpression	code ++		908484	1					
ANR	919658	Identifier	code		908484	0					
ANR	919659	IncDec	++		908484	1					
ANR	919660	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF		908484	1					
ANR	919661	Condition	( options & PCRE_CASELESS ) != 0		908484	0					
ANR	919662	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	919663	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	919664	Identifier	options		908484	0					
ANR	919665	Identifier	PCRE_CASELESS		908484	1					
ANR	919666	PrimaryExpression	0		908484	1					
ANR	919667	Identifier	OP_REFI		908484	1					
ANR	919668	Identifier	OP_REF		908484	2					
ANR	919669	ExpressionStatement	"PUT2INC ( code , 0 , recno )"	8004:8:264879:264902	908484	7	True				
ANR	919670	CallExpression	"PUT2INC ( code , 0 , recno )"		908484	0					
ANR	919671	Callee	PUT2INC		908484	0					
ANR	919672	Identifier	PUT2INC		908484	0					
ANR	919673	ArgumentList	code		908484	1					
ANR	919674	Argument	code		908484	0					
ANR	919675	Identifier	code		908484	0					
ANR	919676	Argument	0		908484	1					
ANR	919677	PrimaryExpression	0		908484	0					
ANR	919678	Argument	recno		908484	2					
ANR	919679	Identifier	recno		908484	0					
ANR	919680	ExpressionStatement	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1	8005:8:264912:264961	908484	8	True				
ANR	919681	AssignmentExpression	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1		908484	0		|=			
ANR	919682	PtrMemberAccess	cd -> backref_map		908484	0					
ANR	919683	Identifier	cd		908484	0					
ANR	919684	Identifier	backref_map		908484	1					
ANR	919685	ConditionalExpression	( recno < 32 ) ? ( 1 << recno ) : 1		908484	1					
ANR	919686	Condition	recno < 32		908484	0					
ANR	919687	RelationalExpression	recno < 32		908484	0		<			
ANR	919688	Identifier	recno		908484	0					
ANR	919689	PrimaryExpression	32		908484	1					
ANR	919690	ShiftExpression	1 << recno		908484	1		<<			
ANR	919691	PrimaryExpression	1		908484	0					
ANR	919692	Identifier	recno		908484	1					
ANR	919693	PrimaryExpression	1		908484	2					
ANR	919694	IfStatement	if ( recno > cd -> top_backref )		908484	9					
ANR	919695	Condition	recno > cd -> top_backref	8006:12:264975:264997	908484	0	True				
ANR	919696	RelationalExpression	recno > cd -> top_backref		908484	0		>			
ANR	919697	Identifier	recno		908484	0					
ANR	919698	PtrMemberAccess	cd -> top_backref		908484	1					
ANR	919699	Identifier	cd		908484	0					
ANR	919700	Identifier	top_backref		908484	1					
ANR	919701	ExpressionStatement	cd -> top_backref = recno	8006:37:265000:265023	908484	1	True				
ANR	919702	AssignmentExpression	cd -> top_backref = recno		908484	0		=			
ANR	919703	PtrMemberAccess	cd -> top_backref		908484	0					
ANR	919704	Identifier	cd		908484	0					
ANR	919705	Identifier	top_backref		908484	1					
ANR	919706	Identifier	recno		908484	1					
ANR	919707	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		908484	10					
ANR	919708	ForInit	oc = cd -> open_caps ;	8012:13:265224:265242	908484	0	True				
ANR	919709	AssignmentExpression	oc = cd -> open_caps		908484	0		=			
ANR	919710	Identifier	oc		908484	0					
ANR	919711	PtrMemberAccess	cd -> open_caps		908484	1					
ANR	919712	Identifier	cd		908484	0					
ANR	919713	Identifier	open_caps		908484	1					
ANR	919714	Condition	oc != NULL	8012:33:265244:265253	908484	1	True				
ANR	919715	EqualityExpression	oc != NULL		908484	0		!=			
ANR	919716	Identifier	oc		908484	0					
ANR	919717	Identifier	NULL		908484	1					
ANR	919718	AssignmentExpression	oc = oc -> next	8012:45:265256:265268	908484	2	True	=			
ANR	919719	Identifier	oc		908484	0					
ANR	919720	PtrMemberAccess	oc -> next		908484	1					
ANR	919721	Identifier	oc		908484	0					
ANR	919722	Identifier	next		908484	1					
ANR	919723	CompoundStatement		3556:10:125405:125405	908484	3					
ANR	919724	IfStatement	if ( oc -> number == recno )		908484	0					
ANR	919725	Condition	oc -> number == recno	8014:14:265297:265315	908484	0	True				
ANR	919726	EqualityExpression	oc -> number == recno		908484	0		==			
ANR	919727	PtrMemberAccess	oc -> number		908484	0					
ANR	919728	Identifier	oc		908484	0					
ANR	919729	Identifier	number		908484	1					
ANR	919730	Identifier	recno		908484	1					
ANR	919731	CompoundStatement		3558:12:125454:125454	908484	1					
ANR	919732	ExpressionStatement	oc -> flag = TRUE	8016:12:265344:265359	908484	0	True				
ANR	919733	AssignmentExpression	oc -> flag = TRUE		908484	0		=			
ANR	919734	PtrMemberAccess	oc -> flag		908484	0					
ANR	919735	Identifier	oc		908484	0					
ANR	919736	Identifier	flag		908484	1					
ANR	919737	Identifier	TRUE		908484	1					
ANR	919738	BreakStatement	break ;	8017:12:265373:265378	908484	1	True				
ANR	919739	ElseStatement	else		908484	0					
ANR	919740	IfStatement	if ( escape == ESC_P || escape == ESC_p )		908484	0					
ANR	919741	Condition	escape == ESC_P || escape == ESC_p	8025:15:265511:265544	908484	0	True				
ANR	919742	OrExpression	escape == ESC_P || escape == ESC_p		908484	0		||			
ANR	919743	EqualityExpression	escape == ESC_P		908484	0		==			
ANR	919744	Identifier	escape		908484	0					
ANR	919745	Identifier	ESC_P		908484	1					
ANR	919746	EqualityExpression	escape == ESC_p		908484	1		==			
ANR	919747	Identifier	escape		908484	0					
ANR	919748	Identifier	ESC_p		908484	1					
ANR	919749	CompoundStatement		3571:8:125711:125744	908484	1					
ANR	919750	IdentifierDeclStatement	BOOL negated ;	8027:8:265565:265577	908484	0	True				
ANR	919751	IdentifierDecl	negated		908484	0					
ANR	919752	IdentifierDeclType	BOOL		908484	0					
ANR	919753	Identifier	negated		908484	1					
ANR	919754	IdentifierDeclStatement	"unsigned int ptype = 0 , pdata = 0 ;"	8028:8:265587:265620	908484	1	True				
ANR	919755	IdentifierDecl	ptype = 0		908484	0					
ANR	919756	IdentifierDeclType	unsigned int		908484	0					
ANR	919757	Identifier	ptype		908484	1					
ANR	919758	AssignmentExpression	ptype = 0		908484	2		=			
ANR	919759	Identifier	ptype		908484	0					
ANR	919760	PrimaryExpression	0		908484	1					
ANR	919761	IdentifierDecl	pdata = 0		908484	1					
ANR	919762	IdentifierDeclType	unsigned int		908484	0					
ANR	919763	Identifier	pdata		908484	1					
ANR	919764	AssignmentExpression	pdata = 0		908484	2		=			
ANR	919765	Identifier	pdata		908484	0					
ANR	919766	PrimaryExpression	0		908484	1					
ANR	919767	IfStatement	"if ( ! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr ) )"		908484	2					
ANR	919768	Condition	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"	8029:12:265634:265687	908484	0	True				
ANR	919769	UnaryOperationExpression	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		908484	0					
ANR	919770	UnaryOperator	!		908484	0					
ANR	919771	CallExpression	"get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		908484	1					
ANR	919772	Callee	get_ucp		908484	0					
ANR	919773	Identifier	get_ucp		908484	0					
ANR	919774	ArgumentList	& ptr		908484	1					
ANR	919775	Argument	& ptr		908484	0					
ANR	919776	UnaryOperationExpression	& ptr		908484	0					
ANR	919777	UnaryOperator	&		908484	0					
ANR	919778	Identifier	ptr		908484	1					
ANR	919779	Argument	& negated		908484	1					
ANR	919780	UnaryOperationExpression	& negated		908484	0					
ANR	919781	UnaryOperator	&		908484	0					
ANR	919782	Identifier	negated		908484	1					
ANR	919783	Argument	& ptype		908484	2					
ANR	919784	UnaryOperationExpression	& ptype		908484	0					
ANR	919785	UnaryOperator	&		908484	0					
ANR	919786	Identifier	ptype		908484	1					
ANR	919787	Argument	& pdata		908484	3					
ANR	919788	UnaryOperationExpression	& pdata		908484	0					
ANR	919789	UnaryOperator	&		908484	0					
ANR	919790	Identifier	pdata		908484	1					
ANR	919791	Argument	errorcodeptr		908484	4					
ANR	919792	Identifier	errorcodeptr		908484	0					
ANR	919793	GotoStatement	goto FAILED ;	8030:10:265700:265711	908484	1	True				
ANR	919794	Identifier	FAILED		908484	0					
ANR	919795	ExpressionStatement	previous = code	8031:8:265721:265736	908484	3	True				
ANR	919796	AssignmentExpression	previous = code		908484	0		=			
ANR	919797	Identifier	previous		908484	0					
ANR	919798	Identifier	code		908484	1					
ANR	919799	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	8032:8:265746:265793	908484	4	True				
ANR	919800	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	919801	Identifier	item_hwm_offset		908484	0					
ANR	919802	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	919803	PtrMemberAccess	cd -> hwm		908484	0					
ANR	919804	Identifier	cd		908484	0					
ANR	919805	Identifier	hwm		908484	1					
ANR	919806	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	919807	Identifier	cd		908484	0					
ANR	919808	Identifier	start_workspace		908484	1					
ANR	919809	ExpressionStatement	* code ++ = ( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP	8033:8:265803:265865	908484	5	True				
ANR	919810	AssignmentExpression	* code ++ = ( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP		908484	0		=			
ANR	919811	UnaryOperationExpression	* code ++		908484	0					
ANR	919812	UnaryOperator	*		908484	0					
ANR	919813	PostIncDecOperationExpression	code ++		908484	1					
ANR	919814	Identifier	code		908484	0					
ANR	919815	IncDec	++		908484	1					
ANR	919816	ConditionalExpression	( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP		908484	1					
ANR	919817	Condition	( escape == ESC_p ) != negated		908484	0					
ANR	919818	EqualityExpression	( escape == ESC_p ) != negated		908484	0		!=			
ANR	919819	EqualityExpression	escape == ESC_p		908484	0		==			
ANR	919820	Identifier	escape		908484	0					
ANR	919821	Identifier	ESC_p		908484	1					
ANR	919822	Identifier	negated		908484	1					
ANR	919823	Identifier	OP_PROP		908484	1					
ANR	919824	Identifier	OP_NOTPROP		908484	2					
ANR	919825	ExpressionStatement	* code ++ = ptype	8034:8:265875:265890	908484	6	True				
ANR	919826	AssignmentExpression	* code ++ = ptype		908484	0		=			
ANR	919827	UnaryOperationExpression	* code ++		908484	0					
ANR	919828	UnaryOperator	*		908484	0					
ANR	919829	PostIncDecOperationExpression	code ++		908484	1					
ANR	919830	Identifier	code		908484	0					
ANR	919831	IncDec	++		908484	1					
ANR	919832	Identifier	ptype		908484	1					
ANR	919833	ExpressionStatement	* code ++ = pdata	8035:8:265900:265915	908484	7	True				
ANR	919834	AssignmentExpression	* code ++ = pdata		908484	0		=			
ANR	919835	UnaryOperationExpression	* code ++		908484	0					
ANR	919836	UnaryOperator	*		908484	0					
ANR	919837	PostIncDecOperationExpression	code ++		908484	1					
ANR	919838	Identifier	code		908484	0					
ANR	919839	IncDec	++		908484	1					
ANR	919840	Identifier	pdata		908484	1					
ANR	919841	ElseStatement	else		908484	0					
ANR	919842	CompoundStatement		3599:8:126672:126672	908484	0					
ANR	919843	IfStatement	if ( ( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0 )		908484	0					
ANR	919844	Condition	( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0	8057:12:266562:266656	908484	0	True				
ANR	919845	AndExpression	( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0		908484	0		&&			
ANR	919846	OrExpression	escape == ESC_b || escape == ESC_B || escape == ESC_A		908484	0		||			
ANR	919847	EqualityExpression	escape == ESC_b		908484	0		==			
ANR	919848	Identifier	escape		908484	0					
ANR	919849	Identifier	ESC_b		908484	1					
ANR	919850	OrExpression	escape == ESC_B || escape == ESC_A		908484	1		||			
ANR	919851	EqualityExpression	escape == ESC_B		908484	0		==			
ANR	919852	Identifier	escape		908484	0					
ANR	919853	Identifier	ESC_B		908484	1					
ANR	919854	EqualityExpression	escape == ESC_A		908484	1		==			
ANR	919855	Identifier	escape		908484	0					
ANR	919856	Identifier	ESC_A		908484	1					
ANR	919857	EqualityExpression	cd -> max_lookbehind == 0		908484	1		==			
ANR	919858	PtrMemberAccess	cd -> max_lookbehind		908484	0					
ANR	919859	Identifier	cd		908484	0					
ANR	919860	Identifier	max_lookbehind		908484	1					
ANR	919861	PrimaryExpression	0		908484	1					
ANR	919862	ExpressionStatement	cd -> max_lookbehind = 1	8059:10:266669:266691	908484	1	True				
ANR	919863	AssignmentExpression	cd -> max_lookbehind = 1		908484	0		=			
ANR	919864	PtrMemberAccess	cd -> max_lookbehind		908484	0					
ANR	919865	Identifier	cd		908484	0					
ANR	919866	Identifier	max_lookbehind		908484	1					
ANR	919867	PrimaryExpression	1		908484	1					
ANR	919868	IfStatement	if ( escape >= ESC_DU && escape <= ESC_wu )		908484	1					
ANR	919869	Condition	escape >= ESC_DU && escape <= ESC_wu	8061:12:266724:266759	908484	0	True				
ANR	919870	AndExpression	escape >= ESC_DU && escape <= ESC_wu		908484	0		&&			
ANR	919871	RelationalExpression	escape >= ESC_DU		908484	0		>=			
ANR	919872	Identifier	escape		908484	0					
ANR	919873	Identifier	ESC_DU		908484	1					
ANR	919874	RelationalExpression	escape <= ESC_wu		908484	1		<=			
ANR	919875	Identifier	escape		908484	0					
ANR	919876	Identifier	ESC_wu		908484	1					
ANR	919877	CompoundStatement		3605:10:126896:126896	908484	1					
ANR	919878	ExpressionStatement	nestptr = ptr + 1	8063:10:266784:266801	908484	0	True				
ANR	919879	AssignmentExpression	nestptr = ptr + 1		908484	0		=			
ANR	919880	Identifier	nestptr		908484	0					
ANR	919881	AdditiveExpression	ptr + 1		908484	1		+			
ANR	919882	Identifier	ptr		908484	0					
ANR	919883	PrimaryExpression	1		908484	1					
ANR	919884	ExpressionStatement	ptr = substitutes [ escape - ESC_DU ] - 1	8064:10:266853:266891	908484	1	True				
ANR	919885	AssignmentExpression	ptr = substitutes [ escape - ESC_DU ] - 1		908484	0		=			
ANR	919886	Identifier	ptr		908484	0					
ANR	919887	AdditiveExpression	substitutes [ escape - ESC_DU ] - 1		908484	1		-			
ANR	919888	ArrayIndexing	substitutes [ escape - ESC_DU ]		908484	0					
ANR	919889	Identifier	substitutes		908484	0					
ANR	919890	AdditiveExpression	escape - ESC_DU		908484	1		-			
ANR	919891	Identifier	escape		908484	0					
ANR	919892	Identifier	ESC_DU		908484	1					
ANR	919893	PrimaryExpression	1		908484	1					
ANR	919894	ElseStatement	else		908484	0					
ANR	919895	CompoundStatement		3614:10:127228:127228	908484	0					
ANR	919896	ExpressionStatement	previous = ( escape > ESC_b && escape < ESC_Z ) ? code : NULL	8072:10:267116:267174	908484	0	True				
ANR	919897	AssignmentExpression	previous = ( escape > ESC_b && escape < ESC_Z ) ? code : NULL		908484	0		=			
ANR	919898	Identifier	previous		908484	0					
ANR	919899	ConditionalExpression	( escape > ESC_b && escape < ESC_Z ) ? code : NULL		908484	1					
ANR	919900	Condition	escape > ESC_b && escape < ESC_Z		908484	0					
ANR	919901	AndExpression	escape > ESC_b && escape < ESC_Z		908484	0		&&			
ANR	919902	RelationalExpression	escape > ESC_b		908484	0		>			
ANR	919903	Identifier	escape		908484	0					
ANR	919904	Identifier	ESC_b		908484	1					
ANR	919905	RelationalExpression	escape < ESC_Z		908484	1		<			
ANR	919906	Identifier	escape		908484	0					
ANR	919907	Identifier	ESC_Z		908484	1					
ANR	919908	Identifier	code		908484	1					
ANR	919909	Identifier	NULL		908484	2					
ANR	919910	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	8073:10:267186:267233	908484	1	True				
ANR	919911	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	919912	Identifier	item_hwm_offset		908484	0					
ANR	919913	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	919914	PtrMemberAccess	cd -> hwm		908484	0					
ANR	919915	Identifier	cd		908484	0					
ANR	919916	Identifier	hwm		908484	1					
ANR	919917	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	919918	Identifier	cd		908484	0					
ANR	919919	Identifier	start_workspace		908484	1					
ANR	919920	ExpressionStatement	* code ++ = ( ! utf && escape == ESC_C ) ? OP_ALLANY : escape	8074:10:267245:267300	908484	2	True				
ANR	919921	AssignmentExpression	* code ++ = ( ! utf && escape == ESC_C ) ? OP_ALLANY : escape		908484	0		=			
ANR	919922	UnaryOperationExpression	* code ++		908484	0					
ANR	919923	UnaryOperator	*		908484	0					
ANR	919924	PostIncDecOperationExpression	code ++		908484	1					
ANR	919925	Identifier	code		908484	0					
ANR	919926	IncDec	++		908484	1					
ANR	919927	ConditionalExpression	( ! utf && escape == ESC_C ) ? OP_ALLANY : escape		908484	1					
ANR	919928	Condition	! utf && escape == ESC_C		908484	0					
ANR	919929	AndExpression	! utf && escape == ESC_C		908484	0		&&			
ANR	919930	UnaryOperationExpression	! utf		908484	0					
ANR	919931	UnaryOperator	!		908484	0					
ANR	919932	Identifier	utf		908484	1					
ANR	919933	EqualityExpression	escape == ESC_C		908484	1		==			
ANR	919934	Identifier	escape		908484	0					
ANR	919935	Identifier	ESC_C		908484	1					
ANR	919936	Identifier	OP_ALLANY		908484	1					
ANR	919937	Identifier	escape		908484	2					
ANR	919938	ContinueStatement	continue ;	8077:6:267330:267338	908484	10	True				
ANR	919939	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		908484	171					
ANR	919940	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	8085:8:267602:267637	908484	0	True				
ANR	919941	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		908484	0		&&			
ANR	919942	Identifier	utf		908484	0					
ANR	919943	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		908484	1		>			
ANR	919944	Identifier	c		908484	0					
ANR	919945	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		908484	1					
ANR	919946	ExpressionStatement	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"	8086:6:267646:267683	908484	1	True				
ANR	919947	AssignmentExpression	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"		908484	0		=			
ANR	919948	Identifier	mclength		908484	0					
ANR	919949	CallExpression	"PRIV ( ord2utf ) ( c , mcbuffer )"		908484	1					
ANR	919950	Callee	PRIV ( ord2utf )		908484	0					
ANR	919951	CallExpression	PRIV ( ord2utf )		908484	0					
ANR	919952	Callee	PRIV		908484	0					
ANR	919953	Identifier	PRIV		908484	0					
ANR	919954	ArgumentList	ord2utf		908484	1					
ANR	919955	Argument	ord2utf		908484	0					
ANR	919956	Identifier	ord2utf		908484	0					
ANR	919957	ArgumentList	c		908484	1					
ANR	919958	Argument	c		908484	0					
ANR	919959	Identifier	c		908484	0					
ANR	919960	Argument	mcbuffer		908484	1					
ANR	919961	Identifier	mcbuffer		908484	0					
ANR	919962	ElseStatement	else		908484	0					
ANR	919963	CompoundStatement		3633:5:127831:127831	908484	0					
ANR	919964	ExpressionStatement	mcbuffer [ 0 ] = c	8091:5:267714:267729	908484	0	True				
ANR	919965	AssignmentExpression	mcbuffer [ 0 ] = c		908484	0		=			
ANR	919966	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	919967	Identifier	mcbuffer		908484	0					
ANR	919968	PrimaryExpression	0		908484	1					
ANR	919969	Identifier	c		908484	1					
ANR	919970	ExpressionStatement	mclength = 1	8092:5:267736:267748	908484	1	True				
ANR	919971	AssignmentExpression	mclength = 1		908484	0		=			
ANR	919972	Identifier	mclength		908484	0					
ANR	919973	PrimaryExpression	1		908484	1					
ANR	919974	GotoStatement	goto ONE_CHAR ;	8094:4:267761:267774	908484	172	True				
ANR	919975	Identifier	ONE_CHAR		908484	0					
ANR	919976	Label	default :	8102:4:268047:268054	908484	173	True				
ANR	919977	Identifier	default		908484	0					
ANR	919978	Label	NORMAL_CHAR :	8103:4:268060:268071	908484	174	True				
ANR	919979	Identifier	NORMAL_CHAR		908484	0					
ANR	919980	ExpressionStatement	mclength = 1	8104:4:268077:268089	908484	175	True				
ANR	919981	AssignmentExpression	mclength = 1		908484	0		=			
ANR	919982	Identifier	mclength		908484	0					
ANR	919983	PrimaryExpression	1		908484	1					
ANR	919984	ExpressionStatement	mcbuffer [ 0 ] = c	8105:4:268095:268110	908484	176	True				
ANR	919985	AssignmentExpression	mcbuffer [ 0 ] = c		908484	0		=			
ANR	919986	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	919987	Identifier	mcbuffer		908484	0					
ANR	919988	PrimaryExpression	0		908484	1					
ANR	919989	Identifier	c		908484	1					
ANR	919990	IfStatement	if ( utf && HAS_EXTRALEN ( c ) )		908484	177					
ANR	919991	Condition	utf && HAS_EXTRALEN ( c )	8108:8:268140:268161	908484	0	True				
ANR	919992	AndExpression	utf && HAS_EXTRALEN ( c )		908484	0		&&			
ANR	919993	Identifier	utf		908484	0					
ANR	919994	CallExpression	HAS_EXTRALEN ( c )		908484	1					
ANR	919995	Callee	HAS_EXTRALEN		908484	0					
ANR	919996	Identifier	HAS_EXTRALEN		908484	0					
ANR	919997	ArgumentList	c		908484	1					
ANR	919998	Argument	c		908484	0					
ANR	919999	Identifier	c		908484	0					
ANR	920000	ExpressionStatement	"ACROSSCHAR ( TRUE , ptr [ 1 ] , mcbuffer [ mclength ++ ] = * ( ++ ptr ) )"	8109:6:268170:268227	908484	1	True				
ANR	920001	CallExpression	"ACROSSCHAR ( TRUE , ptr [ 1 ] , mcbuffer [ mclength ++ ] = * ( ++ ptr ) )"		908484	0					
ANR	920002	Callee	ACROSSCHAR		908484	0					
ANR	920003	Identifier	ACROSSCHAR		908484	0					
ANR	920004	ArgumentList	TRUE		908484	1					
ANR	920005	Argument	TRUE		908484	0					
ANR	920006	Identifier	TRUE		908484	0					
ANR	920007	Argument	ptr [ 1 ]		908484	1					
ANR	920008	ArrayIndexing	ptr [ 1 ]		908484	0					
ANR	920009	Identifier	ptr		908484	0					
ANR	920010	PrimaryExpression	1		908484	1					
ANR	920011	Argument	mcbuffer [ mclength ++ ] = * ( ++ ptr )		908484	2					
ANR	920012	AssignmentExpression	mcbuffer [ mclength ++ ] = * ( ++ ptr )		908484	0		=			
ANR	920013	ArrayIndexing	mcbuffer [ mclength ++ ]		908484	0					
ANR	920014	Identifier	mcbuffer		908484	0					
ANR	920015	PostIncDecOperationExpression	mclength ++		908484	1					
ANR	920016	Identifier	mclength		908484	0					
ANR	920017	IncDec	++		908484	1					
ANR	920018	UnaryOperationExpression	* ( ++ ptr )		908484	1					
ANR	920019	UnaryOperator	*		908484	0					
ANR	920020	UnaryExpression	++ ptr		908484	1					
ANR	920021	IncDec	++		908484	0					
ANR	920022	Identifier	ptr		908484	1					
ANR	920023	Label	ONE_CHAR :	8115:4:268389:268397	908484	178	True				
ANR	920024	Identifier	ONE_CHAR		908484	0					
ANR	920025	ExpressionStatement	previous = code	8116:4:268403:268418	908484	179	True				
ANR	920026	AssignmentExpression	previous = code		908484	0		=			
ANR	920027	Identifier	previous		908484	0					
ANR	920028	Identifier	code		908484	1					
ANR	920029	ExpressionStatement	item_hwm_offset = cd -> hwm - cd -> start_workspace	8117:4:268424:268471	908484	180	True				
ANR	920030	AssignmentExpression	item_hwm_offset = cd -> hwm - cd -> start_workspace		908484	0		=			
ANR	920031	Identifier	item_hwm_offset		908484	0					
ANR	920032	AdditiveExpression	cd -> hwm - cd -> start_workspace		908484	1		-			
ANR	920033	PtrMemberAccess	cd -> hwm		908484	0					
ANR	920034	Identifier	cd		908484	0					
ANR	920035	Identifier	hwm		908484	1					
ANR	920036	PtrMemberAccess	cd -> start_workspace		908484	1					
ANR	920037	Identifier	cd		908484	0					
ANR	920038	Identifier	start_workspace		908484	1					
ANR	920039	IfStatement	if ( utf && ( options & PCRE_CASELESS ) != 0 )		908484	181					
ANR	920040	Condition	utf && ( options & PCRE_CASELESS ) != 0	8124:8:268694:268730	908484	0	True				
ANR	920041	AndExpression	utf && ( options & PCRE_CASELESS ) != 0		908484	0		&&			
ANR	920042	Identifier	utf		908484	0					
ANR	920043	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	1		!=			
ANR	920044	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	920045	Identifier	options		908484	0					
ANR	920046	Identifier	PCRE_CASELESS		908484	1					
ANR	920047	PrimaryExpression	0		908484	1					
ANR	920048	CompoundStatement		3668:6:128863:128863	908484	1					
ANR	920049	ExpressionStatement	"GETCHAR ( c , mcbuffer )"	8126:6:268747:268767	908484	0	True				
ANR	920050	CallExpression	"GETCHAR ( c , mcbuffer )"		908484	0					
ANR	920051	Callee	GETCHAR		908484	0					
ANR	920052	Identifier	GETCHAR		908484	0					
ANR	920053	ArgumentList	c		908484	1					
ANR	920054	Argument	c		908484	0					
ANR	920055	Identifier	c		908484	0					
ANR	920056	Argument	mcbuffer		908484	1					
ANR	920057	Identifier	mcbuffer		908484	0					
ANR	920058	IfStatement	if ( ( c = UCD_CASESET ( c ) ) != 0 )		908484	1					
ANR	920059	Condition	( c = UCD_CASESET ( c ) ) != 0	8127:10:268779:268803	908484	0	True				
ANR	920060	EqualityExpression	( c = UCD_CASESET ( c ) ) != 0		908484	0		!=			
ANR	920061	AssignmentExpression	c = UCD_CASESET ( c )		908484	0		=			
ANR	920062	Identifier	c		908484	0					
ANR	920063	CallExpression	UCD_CASESET ( c )		908484	1					
ANR	920064	Callee	UCD_CASESET		908484	0					
ANR	920065	Identifier	UCD_CASESET		908484	0					
ANR	920066	ArgumentList	c		908484	1					
ANR	920067	Argument	c		908484	0					
ANR	920068	Identifier	c		908484	0					
ANR	920069	PrimaryExpression	0		908484	1					
ANR	920070	CompoundStatement		3671:8:128938:128938	908484	1					
ANR	920071	ExpressionStatement	* code ++ = OP_PROP	8129:8:268824:268841	908484	0	True				
ANR	920072	AssignmentExpression	* code ++ = OP_PROP		908484	0		=			
ANR	920073	UnaryOperationExpression	* code ++		908484	0					
ANR	920074	UnaryOperator	*		908484	0					
ANR	920075	PostIncDecOperationExpression	code ++		908484	1					
ANR	920076	Identifier	code		908484	0					
ANR	920077	IncDec	++		908484	1					
ANR	920078	Identifier	OP_PROP		908484	1					
ANR	920079	ExpressionStatement	* code ++ = PT_CLIST	8130:8:268851:268869	908484	1	True				
ANR	920080	AssignmentExpression	* code ++ = PT_CLIST		908484	0		=			
ANR	920081	UnaryOperationExpression	* code ++		908484	0					
ANR	920082	UnaryOperator	*		908484	0					
ANR	920083	PostIncDecOperationExpression	code ++		908484	1					
ANR	920084	Identifier	code		908484	0					
ANR	920085	IncDec	++		908484	1					
ANR	920086	Identifier	PT_CLIST		908484	1					
ANR	920087	ExpressionStatement	* code ++ = c	8131:8:268879:268890	908484	2	True				
ANR	920088	AssignmentExpression	* code ++ = c		908484	0		=			
ANR	920089	UnaryOperationExpression	* code ++		908484	0					
ANR	920090	UnaryOperator	*		908484	0					
ANR	920091	PostIncDecOperationExpression	code ++		908484	1					
ANR	920092	Identifier	code		908484	0					
ANR	920093	IncDec	++		908484	1					
ANR	920094	Identifier	c		908484	1					
ANR	920095	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	3					
ANR	920096	Condition	firstcharflags == REQ_UNSET	8132:12:268904:268930	908484	0	True				
ANR	920097	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	920098	Identifier	firstcharflags		908484	0					
ANR	920099	Identifier	REQ_UNSET		908484	1					
ANR	920100	ExpressionStatement	firstcharflags = zerofirstcharflags = REQ_NONE	8133:10:268943:268989	908484	1	True				
ANR	920101	AssignmentExpression	firstcharflags = zerofirstcharflags = REQ_NONE		908484	0		=			
ANR	920102	Identifier	firstcharflags		908484	0					
ANR	920103	AssignmentExpression	zerofirstcharflags = REQ_NONE		908484	1		=			
ANR	920104	Identifier	zerofirstcharflags		908484	0					
ANR	920105	Identifier	REQ_NONE		908484	1					
ANR	920106	BreakStatement	break ;	8134:8:268999:269004	908484	4	True				
ANR	920107	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR	8141:4:269104:269166	908484	182	True				
ANR	920108	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR		908484	0		=			
ANR	920109	UnaryOperationExpression	* code ++		908484	0					
ANR	920110	UnaryOperator	*		908484	0					
ANR	920111	PostIncDecOperationExpression	code ++		908484	1					
ANR	920112	Identifier	code		908484	0					
ANR	920113	IncDec	++		908484	1					
ANR	920114	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR		908484	1					
ANR	920115	Condition	( options & PCRE_CASELESS ) != 0		908484	0					
ANR	920116	EqualityExpression	( options & PCRE_CASELESS ) != 0		908484	0		!=			
ANR	920117	BitAndExpression	options & PCRE_CASELESS		908484	0		&			
ANR	920118	Identifier	options		908484	0					
ANR	920119	Identifier	PCRE_CASELESS		908484	1					
ANR	920120	PrimaryExpression	0		908484	1					
ANR	920121	Identifier	OP_CHARI		908484	1					
ANR	920122	Identifier	OP_CHAR		908484	2					
ANR	920123	ForStatement	for ( c = 0 ; c < mclength ; c ++ )		908484	183					
ANR	920124	ForInit	c = 0 ;	8142:9:269177:269182	908484	0	True				
ANR	920125	AssignmentExpression	c = 0		908484	0		=			
ANR	920126	Identifier	c		908484	0					
ANR	920127	PrimaryExpression	0		908484	1					
ANR	920128	Condition	c < mclength	8142:16:269184:269195	908484	1	True				
ANR	920129	RelationalExpression	c < mclength		908484	0		<			
ANR	920130	Identifier	c		908484	0					
ANR	920131	Identifier	mclength		908484	1					
ANR	920132	PostIncDecOperationExpression	c ++	8142:30:269198:269200	908484	2	True				
ANR	920133	Identifier	c		908484	0					
ANR	920134	IncDec	++		908484	1					
ANR	920135	ExpressionStatement	* code ++ = mcbuffer [ c ]	8142:35:269203:269224	908484	3	True				
ANR	920136	AssignmentExpression	* code ++ = mcbuffer [ c ]		908484	0		=			
ANR	920137	UnaryOperationExpression	* code ++		908484	0					
ANR	920138	UnaryOperator	*		908484	0					
ANR	920139	PostIncDecOperationExpression	code ++		908484	1					
ANR	920140	Identifier	code		908484	0					
ANR	920141	IncDec	++		908484	1					
ANR	920142	ArrayIndexing	mcbuffer [ c ]		908484	1					
ANR	920143	Identifier	mcbuffer		908484	0					
ANR	920144	Identifier	c		908484	1					
ANR	920145	IfStatement	if ( mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL )		908484	184					
ANR	920146	Condition	mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL	8146:8:269277:269324	908484	0	True				
ANR	920147	OrExpression	mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL		908484	0		||			
ANR	920148	EqualityExpression	mcbuffer [ 0 ] == CHAR_CR		908484	0		==			
ANR	920149	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	920150	Identifier	mcbuffer		908484	0					
ANR	920151	PrimaryExpression	0		908484	1					
ANR	920152	Identifier	CHAR_CR		908484	1					
ANR	920153	EqualityExpression	mcbuffer [ 0 ] == CHAR_NL		908484	1		==			
ANR	920154	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	920155	Identifier	mcbuffer		908484	0					
ANR	920156	PrimaryExpression	0		908484	1					
ANR	920157	Identifier	CHAR_NL		908484	1					
ANR	920158	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	8147:6:269333:269369	908484	1	True				
ANR	920159	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		908484	0		|=			
ANR	920160	PtrMemberAccess	cd -> external_flags		908484	0					
ANR	920161	Identifier	cd		908484	0					
ANR	920162	Identifier	external_flags		908484	1					
ANR	920163	Identifier	PCRE_HASCRORLF		908484	1					
ANR	920164	IfStatement	if ( firstcharflags == REQ_UNSET )		908484	185					
ANR	920165	Condition	firstcharflags == REQ_UNSET	8154:8:269625:269651	908484	0	True				
ANR	920166	EqualityExpression	firstcharflags == REQ_UNSET		908484	0		==			
ANR	920167	Identifier	firstcharflags		908484	0					
ANR	920168	Identifier	REQ_UNSET		908484	1					
ANR	920169	CompoundStatement		3698:6:129784:129784	908484	1					
ANR	920170	ExpressionStatement	zerofirstcharflags = REQ_NONE	8156:6:269668:269697	908484	0	True				
ANR	920171	AssignmentExpression	zerofirstcharflags = REQ_NONE		908484	0		=			
ANR	920172	Identifier	zerofirstcharflags		908484	0					
ANR	920173	Identifier	REQ_NONE		908484	1					
ANR	920174	ExpressionStatement	zeroreqchar = reqchar	8157:6:269705:269726	908484	1	True				
ANR	920175	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	920176	Identifier	zeroreqchar		908484	0					
ANR	920177	Identifier	reqchar		908484	1					
ANR	920178	ExpressionStatement	zeroreqcharflags = reqcharflags	8158:6:269734:269765	908484	2	True				
ANR	920179	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	920180	Identifier	zeroreqcharflags		908484	0					
ANR	920181	Identifier	reqcharflags		908484	1					
ANR	920182	IfStatement	if ( mclength == 1 || req_caseopt == 0 )		908484	3					
ANR	920183	Condition	mclength == 1 || req_caseopt == 0	8163:10:269907:269939	908484	0	True				
ANR	920184	OrExpression	mclength == 1 || req_caseopt == 0		908484	0		||			
ANR	920185	EqualityExpression	mclength == 1		908484	0		==			
ANR	920186	Identifier	mclength		908484	0					
ANR	920187	PrimaryExpression	1		908484	1					
ANR	920188	EqualityExpression	req_caseopt == 0		908484	1		==			
ANR	920189	Identifier	req_caseopt		908484	0					
ANR	920190	PrimaryExpression	0		908484	1					
ANR	920191	CompoundStatement		3707:8:130074:130074	908484	1					
ANR	920192	ExpressionStatement	firstchar = mcbuffer [ 0 ] | req_caseopt	8165:8:269960:269997	908484	0	True				
ANR	920193	AssignmentExpression	firstchar = mcbuffer [ 0 ] | req_caseopt		908484	0		=			
ANR	920194	Identifier	firstchar		908484	0					
ANR	920195	InclusiveOrExpression	mcbuffer [ 0 ] | req_caseopt		908484	1		|			
ANR	920196	ArrayIndexing	mcbuffer [ 0 ]		908484	0					
ANR	920197	Identifier	mcbuffer		908484	0					
ANR	920198	PrimaryExpression	0		908484	1					
ANR	920199	Identifier	req_caseopt		908484	1					
ANR	920200	ExpressionStatement	firstchar = mcbuffer [ 0 ]	8166:8:270007:270030	908484	1	True				
ANR	920201	AssignmentExpression	firstchar = mcbuffer [ 0 ]		908484	0		=			
ANR	920202	Identifier	firstchar		908484	0					
ANR	920203	ArrayIndexing	mcbuffer [ 0 ]		908484	1					
ANR	920204	Identifier	mcbuffer		908484	0					
ANR	920205	PrimaryExpression	0		908484	1					
ANR	920206	ExpressionStatement	firstcharflags = req_caseopt	8167:8:270040:270068	908484	2	True				
ANR	920207	AssignmentExpression	firstcharflags = req_caseopt		908484	0		=			
ANR	920208	Identifier	firstcharflags		908484	0					
ANR	920209	Identifier	req_caseopt		908484	1					
ANR	920210	IfStatement	if ( mclength != 1 )		908484	3					
ANR	920211	Condition	mclength != 1	8169:12:270083:270095	908484	0	True				
ANR	920212	EqualityExpression	mclength != 1		908484	0		!=			
ANR	920213	Identifier	mclength		908484	0					
ANR	920214	PrimaryExpression	1		908484	1					
ANR	920215	CompoundStatement		3713:10:130232:130232	908484	1					
ANR	920216	ExpressionStatement	reqchar = code [ - 1 ]	8171:10:270120:270138	908484	0	True				
ANR	920217	AssignmentExpression	reqchar = code [ - 1 ]		908484	0		=			
ANR	920218	Identifier	reqchar		908484	0					
ANR	920219	ArrayIndexing	code [ - 1 ]		908484	1					
ANR	920220	Identifier	code		908484	0					
ANR	920221	UnaryOperationExpression	- 1		908484	1					
ANR	920222	UnaryOperator	-		908484	0					
ANR	920223	PrimaryExpression	1		908484	1					
ANR	920224	ExpressionStatement	reqcharflags = cd -> req_varyopt	8172:10:270150:270180	908484	1	True				
ANR	920225	AssignmentExpression	reqcharflags = cd -> req_varyopt		908484	0		=			
ANR	920226	Identifier	reqcharflags		908484	0					
ANR	920227	PtrMemberAccess	cd -> req_varyopt		908484	1					
ANR	920228	Identifier	cd		908484	0					
ANR	920229	Identifier	req_varyopt		908484	1					
ANR	920230	ElseStatement	else		908484	0					
ANR	920231	ExpressionStatement	firstcharflags = reqcharflags = REQ_NONE	8175:11:270215:270255	908484	0	True				
ANR	920232	AssignmentExpression	firstcharflags = reqcharflags = REQ_NONE		908484	0		=			
ANR	920233	Identifier	firstcharflags		908484	0					
ANR	920234	AssignmentExpression	reqcharflags = REQ_NONE		908484	1		=			
ANR	920235	Identifier	reqcharflags		908484	0					
ANR	920236	Identifier	REQ_NONE		908484	1					
ANR	920237	ElseStatement	else		908484	0					
ANR	920238	CompoundStatement		3725:6:130521:130521	908484	0					
ANR	920239	ExpressionStatement	zerofirstchar = firstchar	8183:6:270405:270430	908484	0	True				
ANR	920240	AssignmentExpression	zerofirstchar = firstchar		908484	0		=			
ANR	920241	Identifier	zerofirstchar		908484	0					
ANR	920242	Identifier	firstchar		908484	1					
ANR	920243	ExpressionStatement	zerofirstcharflags = firstcharflags	8184:6:270438:270473	908484	1	True				
ANR	920244	AssignmentExpression	zerofirstcharflags = firstcharflags		908484	0		=			
ANR	920245	Identifier	zerofirstcharflags		908484	0					
ANR	920246	Identifier	firstcharflags		908484	1					
ANR	920247	ExpressionStatement	zeroreqchar = reqchar	8185:6:270481:270502	908484	2	True				
ANR	920248	AssignmentExpression	zeroreqchar = reqchar		908484	0		=			
ANR	920249	Identifier	zeroreqchar		908484	0					
ANR	920250	Identifier	reqchar		908484	1					
ANR	920251	ExpressionStatement	zeroreqcharflags = reqcharflags	8186:6:270510:270541	908484	3	True				
ANR	920252	AssignmentExpression	zeroreqcharflags = reqcharflags		908484	0		=			
ANR	920253	Identifier	zeroreqcharflags		908484	0					
ANR	920254	Identifier	reqcharflags		908484	1					
ANR	920255	IfStatement	if ( mclength == 1 || req_caseopt == 0 )		908484	4					
ANR	920256	Condition	mclength == 1 || req_caseopt == 0	8187:10:270553:270585	908484	0	True				
ANR	920257	OrExpression	mclength == 1 || req_caseopt == 0		908484	0		||			
ANR	920258	EqualityExpression	mclength == 1		908484	0		==			
ANR	920259	Identifier	mclength		908484	0					
ANR	920260	PrimaryExpression	1		908484	1					
ANR	920261	EqualityExpression	req_caseopt == 0		908484	1		==			
ANR	920262	Identifier	req_caseopt		908484	0					
ANR	920263	PrimaryExpression	0		908484	1					
ANR	920264	CompoundStatement		3731:8:130720:130720	908484	1					
ANR	920265	ExpressionStatement	reqchar = code [ - 1 ]	8189:8:270606:270624	908484	0	True				
ANR	920266	AssignmentExpression	reqchar = code [ - 1 ]		908484	0		=			
ANR	920267	Identifier	reqchar		908484	0					
ANR	920268	ArrayIndexing	code [ - 1 ]		908484	1					
ANR	920269	Identifier	code		908484	0					
ANR	920270	UnaryOperationExpression	- 1		908484	1					
ANR	920271	UnaryOperator	-		908484	0					
ANR	920272	PrimaryExpression	1		908484	1					
ANR	920273	ExpressionStatement	reqcharflags = req_caseopt | cd -> req_varyopt	8190:8:270634:270678	908484	1	True				
ANR	920274	AssignmentExpression	reqcharflags = req_caseopt | cd -> req_varyopt		908484	0		=			
ANR	920275	Identifier	reqcharflags		908484	0					
ANR	920276	InclusiveOrExpression	req_caseopt | cd -> req_varyopt		908484	1		|			
ANR	920277	Identifier	req_caseopt		908484	0					
ANR	920278	PtrMemberAccess	cd -> req_varyopt		908484	1					
ANR	920279	Identifier	cd		908484	0					
ANR	920280	Identifier	req_varyopt		908484	1					
ANR	920281	BreakStatement	break ;	8194:4:270703:270708	908484	186	True				
ANR	920282	Label	FAILED :	8203:0:271012:271018	908484	41	True				
ANR	920283	Identifier	FAILED		908484	0					
ANR	920284	ExpressionStatement	* ptrptr = ptr	8204:0:271020:271033	908484	42	True				
ANR	920285	AssignmentExpression	* ptrptr = ptr		908484	0		=			
ANR	920286	UnaryOperationExpression	* ptrptr		908484	0					
ANR	920287	UnaryOperator	*		908484	0					
ANR	920288	Identifier	ptrptr		908484	1					
ANR	920289	Identifier	ptr		908484	1					
ANR	920290	ReturnStatement	return FALSE ;	8205:0:271035:271047	908484	43	True				
ANR	920291	Identifier	FALSE		908484	0					
ANR	920292	ReturnType	static BOOL		908484	1					
ANR	920293	Identifier	compile_branch		908484	2					
ANR	920294	ParameterList	"int * optionsptr , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , int cond_depth , compile_data * cd , int * lengthptr"		908484	3					
ANR	920295	Parameter	int * optionsptr	4452:15:139597:139611	908484	0	True				
ANR	920296	ParameterType	int *		908484	0					
ANR	920297	Identifier	optionsptr		908484	1					
ANR	920298	Parameter	pcre_uchar * * codeptr	4452:32:139614:139633	908484	1	True				
ANR	920299	ParameterType	pcre_uchar * *		908484	0					
ANR	920300	Identifier	codeptr		908484	1					
ANR	920301	Parameter	const pcre_uchar * * ptrptr	4453:2:139638:139662	908484	2	True				
ANR	920302	ParameterType	const pcre_uchar * *		908484	0					
ANR	920303	Identifier	ptrptr		908484	1					
ANR	920304	Parameter	int * errorcodeptr	4453:29:139665:139681	908484	3	True				
ANR	920305	ParameterType	int *		908484	0					
ANR	920306	Identifier	errorcodeptr		908484	1					
ANR	920307	Parameter	pcre_uint32 * firstcharptr	4454:2:139686:139710	908484	4	True				
ANR	920308	ParameterType	pcre_uint32 *		908484	0					
ANR	920309	Identifier	firstcharptr		908484	1					
ANR	920310	Parameter	pcre_int32 * firstcharflagsptr	4454:29:139713:139741	908484	5	True				
ANR	920311	ParameterType	pcre_int32 *		908484	0					
ANR	920312	Identifier	firstcharflagsptr		908484	1					
ANR	920313	Parameter	pcre_uint32 * reqcharptr	4455:2:139746:139768	908484	6	True				
ANR	920314	ParameterType	pcre_uint32 *		908484	0					
ANR	920315	Identifier	reqcharptr		908484	1					
ANR	920316	Parameter	pcre_int32 * reqcharflagsptr	4455:27:139771:139797	908484	7	True				
ANR	920317	ParameterType	pcre_int32 *		908484	0					
ANR	920318	Identifier	reqcharflagsptr		908484	1					
ANR	920319	Parameter	branch_chain * bcptr	4456:2:139802:139820	908484	8	True				
ANR	920320	ParameterType	branch_chain *		908484	0					
ANR	920321	Identifier	bcptr		908484	1					
ANR	920322	Parameter	int cond_depth	4456:23:139823:139836	908484	9	True				
ANR	920323	ParameterType	int		908484	0					
ANR	920324	Identifier	cond_depth		908484	1					
ANR	920325	Parameter	compile_data * cd	4457:2:139841:139856	908484	10	True				
ANR	920326	ParameterType	compile_data *		908484	0					
ANR	920327	Identifier	cd		908484	1					
ANR	920328	Parameter	int * lengthptr	4457:20:139859:139872	908484	11	True				
ANR	920329	ParameterType	int *		908484	0					
ANR	920330	Identifier	lengthptr		908484	1					
ANR	920331	CFGEntryNode	ENTRY		908484		True				
ANR	920332	CFGExitNode	EXIT		908484		True				
ANR	920333	InfiniteForNode	true		908484		True				
ANR	920334	InfiniteForNode	true		908484		True				
ANR	920335	InfiniteForNode	true		908484		True				
ANR	920336	InfiniteForNode	true		908484		True				
ANR	920337	InfiniteForNode	true		908484		True				
ANR	920338	Symbol	arglen		908484						
ANR	920339	Symbol	ESC_Z		908484						
ANR	920340	Symbol	* cd		908484						
ANR	920341	Symbol	OP_CREF		908484						
ANR	920342	Symbol	local_negate		908484						
ANR	920343	Symbol	ESC_b		908484						
ANR	920344	Symbol	ESC_g		908484						
ANR	920345	Symbol	cd -> max_lookbehind		908484						
ANR	920346	Symbol	ESC_Q		908484						
ANR	920347	Symbol	PARENS_NEST_LIMIT		908484						
ANR	920348	Symbol	ESC_P		908484						
ANR	920349	Symbol	ESC_N		908484						
ANR	920350	Symbol	& ptype		908484						
ANR	920351	Symbol	OP_BRAZERO		908484						
ANR	920352	Symbol	* GET		908484						
ANR	920353	Symbol	HAS_EXTRALEN		908484						
ANR	920354	Symbol	cbit_word		908484						
ANR	920355	Symbol	recno		908484						
ANR	920356	Symbol	ESC_A		908484						
ANR	920357	Symbol	ESC_E		908484						
ANR	920358	Symbol	ESC_C		908484						
ANR	920359	Symbol	ESC_B		908484						
ANR	920360	Symbol	* classbits		908484						
ANR	920361	Symbol	STRNCMP_UC_UC		908484						
ANR	920362	Symbol	CHAR_NULL		908484						
ANR	920363	Symbol	OP_NCLASS		908484						
ANR	920364	Symbol	check_posix_name		908484						
ANR	920365	Symbol	OP_NOT		908484						
ANR	920366	Symbol	subfirstcharflags		908484						
ANR	920367	Symbol	& length_prevgroup		908484						
ANR	920368	Symbol	* * ptr		908484						
ANR	920369	Symbol	nestptr		908484						
ANR	920370	Symbol	req_caseopt		908484						
ANR	920371	Symbol	MAX_MARK		908484						
ANR	920372	Symbol	OP_CRQUERY		908484						
ANR	920373	Symbol	newspace		908484						
ANR	920374	Symbol	~classbits		908484						
ANR	920375	Symbol	OP_CRPOSSTAR		908484						
ANR	920376	Symbol	& subreqchar		908484						
ANR	920377	Symbol	OP_CIRC		908484						
ANR	920378	Symbol	cd		908484						
ANR	920379	Symbol	ketcode		908484						
ANR	920380	Symbol	c		908484						
ANR	920381	Symbol	refsign		908484						
ANR	920382	Symbol	set		908484						
ANR	920383	Symbol	ng -> length		908484						
ANR	920384	Symbol	cf		908484						
ANR	920385	Symbol	d		908484						
ANR	920386	Symbol	repeat_type		908484						
ANR	920387	Symbol	hspace_list		908484						
ANR	920388	Symbol	ESC_wu		908484						
ANR	920389	Symbol	* codeptr		908484						
ANR	920390	Symbol	i		908484						
ANR	920391	Symbol	ctype_space		908484						
ANR	920392	Symbol	firstcharflagsptr		908484						
ANR	920393	Symbol	cbit_digit		908484						
ANR	920394	Symbol	n		908484						
ANR	920395	Symbol	p		908484						
ANR	920396	Symbol	possessive_quantifier		908484						
ANR	920397	Symbol	PT_PXPUNCT		908484						
ANR	920398	Symbol	tempptr		908484						
ANR	920399	Symbol	OP_TYPESTAR		908484						
ANR	920400	Symbol	firstcharflags		908484						
ANR	920401	Symbol	& pdata		908484						
ANR	920402	Symbol	negated		908484						
ANR	920403	Symbol	CHAR_RIGHT_PARENTHESIS		908484						
ANR	920404	Symbol	MAX_VALUE_FOR_SINGLE_CHAR		908484						
ANR	920405	Symbol	oc -> flag		908484						
ANR	920406	Symbol	WORK_SIZE_SAFETY_MARGIN		908484						
ANR	920407	Symbol	* IMM2_SIZE		908484						
ANR	920408	Symbol	CHAR_DOT		908484						
ANR	920409	Symbol	repeat_min		908484						
ANR	920410	Symbol	cd -> external_options		908484						
ANR	920411	Symbol	NAMED_GROUP_LIST_SIZE		908484						
ANR	920412	Symbol	IN_UCHARS		908484						
ANR	920413	Symbol	STRING_WEIRD_STARTWORD		908484						
ANR	920414	Symbol	OP_NOTPOSQUERY		908484						
ANR	920415	Symbol	mcbuffer		908484						
ANR	920416	Symbol	XCL_RANGE		908484						
ANR	920417	Symbol	* ptrptr		908484						
ANR	920418	Symbol	reset_bracount		908484						
ANR	920419	Symbol	ec		908484						
ANR	920420	Symbol	tempbracount		908484						
ANR	920421	Symbol	CHAR_CIRCUMFLEX_ACCENT		908484						
ANR	920422	Symbol	* posix_class		908484						
ANR	920423	Symbol	OP_NOTPOSUPTOI		908484						
ANR	920424	Symbol	count		908484						
ANR	920425	Symbol	cd -> open_caps		908484						
ANR	920426	Symbol	OP_SBRA		908484						
ANR	920427	Symbol	* verbs		908484						
ANR	920428	Symbol	ctype_word		908484						
ANR	920429	Symbol	get_ucp		908484						
ANR	920430	Symbol	OP_TYPEPOSQUERY		908484						
ANR	920431	Symbol	OP_CRSTAR		908484						
ANR	920432	Symbol	* pbits		908484						
ANR	920433	Symbol	CHAR_LESS_THAN_SIGN		908484						
ANR	920434	Symbol	OP_DNREFI		908484						
ANR	920435	Symbol	* class_uchardata ++		908484						
ANR	920436	Symbol	cd -> named_groups [ cd -> names_found ] . name		908484						
ANR	920437	Symbol	cbit_space		908484						
ANR	920438	Symbol	OP_TYPEPOSUPTO		908484						
ANR	920439	Symbol	cd -> assert_depth		908484						
ANR	920440	Symbol	& negated		908484						
ANR	920441	Symbol	OP_SKIPZERO		908484						
ANR	920442	Symbol	PT_PXGRAPH		908484						
ANR	920443	Symbol	* cd -> named_groups		908484						
ANR	920444	Symbol	~unset		908484						
ANR	920445	Symbol	OFLOW_MAX		908484						
ANR	920446	Symbol	should_flip_negation		908484						
ANR	920447	Symbol	cd -> named_groups [ cd -> names_found ] . number		908484						
ANR	920448	Symbol	check_posix_syntax		908484						
ANR	920449	Symbol	* cbit_word		908484						
ANR	920450	Symbol	CHAR_LEFT_SQUARE_BRACKET		908484						
ANR	920451	Symbol	OP_SBRAPOS		908484						
ANR	920452	Symbol	OP_CRRANGE		908484						
ANR	920453	Symbol	OP_TYPEPOSSTAR		908484						
ANR	920454	Symbol	OP_ALLANY		908484						
ANR	920455	Symbol	sub_end_of_word		908484						
ANR	920456	Symbol	bravalue		908484						
ANR	920457	Symbol	tempreqvary		908484						
ANR	920458	Symbol	oldptr		908484						
ANR	920459	Symbol	* optionsptr		908484						
ANR	920460	Symbol	OP_BRAPOS		908484						
ANR	920461	Symbol	ERR83		908484						
ANR	920462	Symbol	ERR84		908484						
ANR	920463	Symbol	ptrptr		908484						
ANR	920464	Symbol	PCRE_DOTALL		908484						
ANR	920465	Symbol	NOTACHAR		908484						
ANR	920466	Symbol	CHAR_MINUS		908484						
ANR	920467	Symbol	hc		908484						
ANR	920468	Symbol	OP_STAR		908484						
ANR	920469	Symbol	called		908484						
ANR	920470	Symbol	OP_UPTO		908484						
ANR	920471	Symbol	OP_POSQUERY		908484						
ANR	920472	Symbol	namelen		908484						
ANR	920473	Symbol	classbits		908484						
ANR	920474	Symbol	OP_ANY		908484						
ANR	920475	Symbol	PCRE_EXTENDED		908484						
ANR	920476	Symbol	* LINK_SIZE		908484						
ANR	920477	Symbol	ERR82		908484						
ANR	920478	Symbol	posix_class		908484						
ANR	920479	Symbol	ERR75		908484						
ANR	920480	Symbol	number		908484						
ANR	920481	Symbol	zeroreqchar		908484						
ANR	920482	Symbol	read_repeat_counts		908484						
ANR	920483	Symbol	OP_STARI		908484						
ANR	920484	Symbol	* posix_class_maps		908484						
ANR	920485	Symbol	* * tempcode		908484						
ANR	920486	Symbol	OP_CLASS		908484						
ANR	920487	Symbol	OP_REFI		908484						
ANR	920488	Symbol	index		908484						
ANR	920489	Symbol	PUBL		908484						
ANR	920490	Symbol	inescq		908484						
ANR	920491	Symbol	OP_ASSERTBACK_NOT		908484						
ANR	920492	Symbol	ERR71		908484						
ANR	920493	Symbol	descape		908484						
ANR	920494	Symbol	ERR63		908484						
ANR	920495	Symbol	ERR64		908484						
ANR	920496	Symbol	& subfirstchar		908484						
ANR	920497	Symbol	repcode		908484						
ANR	920498	Symbol	ERR61		908484						
ANR	920499	Symbol	could_be_empty		908484						
ANR	920500	Symbol	ERR62		908484						
ANR	920501	Symbol	ERR65		908484						
ANR	920502	Symbol	ERR66		908484						
ANR	920503	Symbol	& subfirstcharflags		908484						
ANR	920504	Symbol	OP_NOTPOSSTARI		908484						
ANR	920505	Symbol	ERR69		908484						
ANR	920506	Symbol	newoptions		908484						
ANR	920507	Symbol	cd -> parens_depth		908484						
ANR	920508	Symbol	cslot		908484						
ANR	920509	Symbol	OP_ALT		908484						
ANR	920510	Symbol	OP_CRPLUS		908484						
ANR	920511	Symbol	ERR60		908484						
ANR	920512	Symbol	ERR52		908484						
ANR	920513	Symbol	negate_class		908484						
ANR	920514	Symbol	ERR57		908484						
ANR	920515	Symbol	OP_POSUPTOI		908484						
ANR	920516	Symbol	ERR54		908484						
ANR	920517	Symbol	* ( ++ ptr )		908484						
ANR	920518	Symbol	& class_uchardata		908484						
ANR	920519	Symbol	oldcode		908484						
ANR	920520	Symbol	cd -> namedrefcount		908484						
ANR	920521	Symbol	ERR58		908484						
ANR	920522	Symbol	ERR59		908484						
ANR	920523	Symbol	* name		908484						
ANR	920524	Symbol	malloc		908484						
ANR	920525	Symbol	CHAR_ASTERISK		908484						
ANR	920526	Symbol	ord2utf		908484						
ANR	920527	Symbol	OP_POSPLUS		908484						
ANR	920528	Symbol	XCL_NOTPROP		908484						
ANR	920529	Symbol	REQ_UNSET		908484						
ANR	920530	Symbol	PCRE_MULTILINE		908484						
ANR	920531	Symbol	errorcodeptr		908484						
ANR	920532	Symbol	OP_NOTSTAR		908484						
ANR	920533	Symbol	ERR41		908484						
ANR	920534	Symbol	* PRIV		908484						
ANR	920535	Symbol	ERR42		908484						
ANR	920536	Symbol	PCRE_DUPNAMES		908484						
ANR	920537	Symbol	ERR40		908484						
ANR	920538	Symbol	* errorcodeptr		908484						
ANR	920539	Symbol	zerofirstchar		908484						
ANR	920540	Symbol	ERR43		908484						
ANR	920541	Symbol	ERR49		908484						
ANR	920542	Symbol	ERR48		908484						
ANR	920543	Symbol	* ng		908484						
ANR	920544	Symbol	* ~pbits		908484						
ANR	920545	Symbol	* lengthptr		908484						
ANR	920546	Symbol	* posix_substitutes		908484						
ANR	920547	Symbol	tabopt		908484						
ANR	920548	Symbol	unset		908484						
ANR	920549	Symbol	& tempptr		908484						
ANR	920550	Symbol	ERR30		908484						
ANR	920551	Symbol	OP_POSSTARI		908484						
ANR	920552	Symbol	* slot		908484						
ANR	920553	Symbol	compile_regex		908484						
ANR	920554	Symbol	ERR31		908484						
ANR	920555	Symbol	class_has_8bitchar		908484						
ANR	920556	Symbol	ERR35		908484						
ANR	920557	Symbol	ERR38		908484						
ANR	920558	Symbol	cd -> hwm		908484						
ANR	920559	Symbol	* oc		908484						
ANR	920560	Symbol	ERR39		908484						
ANR	920561	Symbol	verbcount		908484						
ANR	920562	Symbol	verbs		908484						
ANR	920563	Symbol	CHAR_NL		908484						
ANR	920564	Symbol	REQ_NONE		908484						
ANR	920565	Symbol	* cd -> ctypes		908484						
ANR	920566	Symbol	opcode_possessify		908484						
ANR	920567	Symbol	cd -> named_group_list_size		908484						
ANR	920568	Symbol	NULL		908484						
ANR	920569	Symbol	cd -> nllen		908484						
ANR	920570	Symbol	OP_CLOSE		908484						
ANR	920571	Symbol	utf		908484						
ANR	920572	Symbol	substitutes		908484						
ANR	920573	Symbol	* cd -> names_found		908484						
ANR	920574	Symbol	TRUE		908484						
ANR	920575	Symbol	PCRE_UNGREEDY		908484						
ANR	920576	Symbol	PCRE_UCP		908484						
ANR	920577	Symbol	ERR20		908484						
ANR	920578	Symbol	reqchar		908484						
ANR	920579	Symbol	ERR24		908484						
ANR	920580	Symbol	ERR21		908484						
ANR	920581	Symbol	ERR27		908484						
ANR	920582	Symbol	CHAR_APOSTROPHE		908484						
ANR	920583	Symbol	ERR28		908484						
ANR	920584	Symbol	ng		908484						
ANR	920585	Symbol	* pc		908484						
ANR	920586	Symbol	OP_lengths		908484						
ANR	920587	Symbol	ERR26		908484						
ANR	920588	Symbol	find_bracket		908484						
ANR	920589	Symbol	* code		908484						
ANR	920590	Symbol	OP_KET		908484						
ANR	920591	Symbol	ERR29		908484						
ANR	920592	Symbol	* firstcharptr		908484						
ANR	920593	Symbol	bralink		908484						
ANR	920594	Symbol	codeptr		908484						
ANR	920595	Symbol	code		908484						
ANR	920596	Symbol	& unset		908484						
ANR	920597	Symbol	ng -> number		908484						
ANR	920598	Symbol	OP_PLUS		908484						
ANR	920599	Symbol	ptype		908484						
ANR	920600	Symbol	slot		908484						
ANR	920601	Symbol	& ptr		908484						
ANR	920602	Symbol	ESC_DU		908484						
ANR	920603	Symbol	oc		908484						
ANR	920604	Symbol	ERR12		908484						
ANR	920605	Symbol	ERR13		908484						
ANR	920606	Symbol	class_uchardata		908484						
ANR	920607	Symbol	ERR11		908484						
ANR	920608	Symbol	ctype_letter		908484						
ANR	920609	Symbol	ERR14		908484						
ANR	920610	Symbol	cd -> cbits		908484						
ANR	920611	Symbol	ERR15		908484						
ANR	920612	Symbol	is_recurse		908484						
ANR	920613	Symbol	ERR18		908484						
ANR	920614	Symbol	XCL_NOT		908484						
ANR	920615	Symbol	repeat_max		908484						
ANR	920616	Symbol	OP_QUERY		908484						
ANR	920617	Symbol	CHAR_PLUS		908484						
ANR	920618	Symbol	UTF_LENGTH		908484						
ANR	920619	Symbol	* ptr ++		908484						
ANR	920620	Symbol	* c		908484						
ANR	920621	Symbol	cd -> req_varyopt		908484						
ANR	920622	Symbol	xclass_has_prop		908484						
ANR	920623	Symbol	OP_BRA		908484						
ANR	920624	Symbol	firstchar		908484						
ANR	920625	Symbol	pc		908484						
ANR	920626	Symbol	* i		908484						
ANR	920627	Symbol	PCRE_HASTHEN		908484						
ANR	920628	Symbol	cond_depth		908484						
ANR	920629	Symbol	MAX_255		908484						
ANR	920630	Symbol	CHAR_QUESTION_MARK		908484						
ANR	920631	Symbol	* p		908484						
ANR	920632	Symbol	* code ++		908484						
ANR	920633	Symbol	* cbit_digit		908484						
ANR	920634	Symbol	length_prevgroup		908484						
ANR	920635	Symbol	OP_DOLL		908484						
ANR	920636	Symbol	* optset		908484						
ANR	920637	Symbol	delta		908484						
ANR	920638	Symbol	mclength		908484						
ANR	920639	Symbol	prop_type		908484						
ANR	920640	Symbol	last_code		908484						
ANR	920641	Symbol	bra		908484						
ANR	920642	Symbol	verbs [ i ] . op_arg		908484						
ANR	920643	Symbol	len		908484						
ANR	920644	Symbol	* bracode		908484						
ANR	920645	Symbol	OP_KETRMAX		908484						
ANR	920646	Symbol	oc -> number		908484						
ANR	920647	Symbol	OP_CHAR		908484						
ANR	920648	Symbol	OP_CRPOSQUERY		908484						
ANR	920649	Symbol	* ~classbits		908484						
ANR	920650	Symbol	expand_workspace		908484						
ANR	920651	Symbol	OP_ASSERTBACK		908484						
ANR	920652	Symbol	OP_COND		908484						
ANR	920653	Symbol	oldlinkoffset		908484						
ANR	920654	Symbol	LINK_SIZE		908484						
ANR	920655	Symbol	CHAR_RIGHT_CURLY_BRACKET		908484						
ANR	920656	Symbol	OP_RECURSE		908484						
ANR	920657	Symbol	cd -> name_table		908484						
ANR	920658	Symbol	greedy_default		908484						
ANR	920659	Symbol	* tc		908484						
ANR	920660	Symbol	OP_NOTPOSUPTO		908484						
ANR	920661	Symbol	OP_POSUPTO		908484						
ANR	920662	Symbol	STRCMP_UC_UC		908484						
ANR	920663	Symbol	OP_NOTPOSSTAR		908484						
ANR	920664	Symbol	OP_POSSTAR		908484						
ANR	920665	Symbol	OP_END		908484						
ANR	920666	Symbol	cd -> had_accept		908484						
ANR	920667	Symbol	pdata		908484						
ANR	920668	Symbol	XCL_HASPROP		908484						
ANR	920669	Symbol	cbits		908484						
ANR	920670	Symbol	REQ_CASELESS		908484						
ANR	920671	Symbol	cd -> start_code		908484						
ANR	920672	Symbol	* substitutes		908484						
ANR	920673	Symbol	OP_CRPOSRANGE		908484						
ANR	920674	Symbol	OP_FAIL		908484						
ANR	920675	Symbol	vspace_list		908484						
ANR	920676	Symbol	arg		908484						
ANR	920677	Symbol	* ESC_DU		908484						
ANR	920678	Symbol	OP_POSPLUSI		908484						
ANR	920679	Symbol	free		908484						
ANR	920680	Symbol	escape		908484						
ANR	920681	Symbol	cd -> top_backref		908484						
ANR	920682	Symbol	is_counted_repeat		908484						
ANR	920683	Symbol	scode		908484						
ANR	920684	Symbol	cd -> named_groups		908484						
ANR	920685	Symbol	OP_CIRCM		908484						
ANR	920686	Symbol	CHAR_BACKSLASH		908484						
ANR	920687	Symbol	xclass		908484						
ANR	920688	Symbol	posix_substitutes		908484						
ANR	920689	Symbol	OP_NOTPROP		908484						
ANR	920690	Symbol	IS_DIGIT		908484						
ANR	920691	Symbol	tc		908484						
ANR	920692	Symbol	* cbits		908484						
ANR	920693	Symbol	cd -> had_pruneorskip		908484						
ANR	920694	Symbol	verbs [ i ] . len		908484						
ANR	920695	Symbol	STRNCMP_UC_C8		908484						
ANR	920696	Symbol	CHAR_RIGHT_SQUARE_BRACKET		908484						
ANR	920697	Symbol	OP_REF		908484						
ANR	920698	Symbol	optionsptr		908484						
ANR	920699	Symbol	cd -> external_flags		908484						
ANR	920700	Symbol	groupsetfirstchar		908484						
ANR	920701	Symbol	OP_ACCEPT		908484						
ANR	920702	Symbol	* previous		908484						
ANR	920703	Symbol	OP_CBRA		908484						
ANR	920704	Symbol	~cbits		908484						
ANR	920705	Symbol	& subreqcharflags		908484						
ANR	920706	Symbol	zerofirstcharflags		908484						
ANR	920707	Symbol	PRIV		908484						
ANR	920708	Symbol	UCD_CASESET		908484						
ANR	920709	Symbol	* repcode		908484						
ANR	920710	Symbol	OP_RREF		908484						
ANR	920711	Symbol	* taboffset		908484						
ANR	920712	Symbol	XCL_PROP		908484						
ANR	920713	Symbol	PCRE_HASCRORLF		908484						
ANR	920714	Symbol	terminator		908484						
ANR	920715	Symbol	REQ_VARY		908484						
ANR	920716	Symbol	bcptr		908484						
ANR	920717	Symbol	reqvary		908484						
ANR	920718	Symbol	OP_NOTSTARI		908484						
ANR	920719	Symbol	subfirstchar		908484						
ANR	920720	Symbol	CHAR_NUMBER_SIGN		908484						
ANR	920721	Symbol	orig_code		908484						
ANR	920722	Symbol	auto_callout		908484						
ANR	920723	Symbol	could_be_empty_branch		908484						
ANR	920724	Symbol	* cbit_space		908484						
ANR	920725	Symbol	CHAR_EXCLAMATION_MARK		908484						
ANR	920726	Symbol	vn		908484						
ANR	920727	Symbol	name		908484						
ANR	920728	Symbol	OP_EODN		908484						
ANR	920729	Symbol	op_type		908484						
ANR	920730	Symbol	class_one_char		908484						
ANR	920731	Symbol	* ~cbits		908484						
ANR	920732	Symbol	item_hwm_offset		908484						
ANR	920733	Symbol	PT_CLIST		908484						
ANR	920734	Symbol	taboffset		908484						
ANR	920735	Symbol	& ec		908484						
ANR	920736	Symbol	cd -> final_bracount		908484						
ANR	920737	Symbol	RREF_ANY		908484						
ANR	920738	Symbol	PCRE_EXTRA		908484						
ANR	920739	Symbol	reqcharflagsptr		908484						
ANR	920740	Symbol	& tempcode		908484						
ANR	920741	Symbol	* reqcharptr		908484						
ANR	920742	Symbol	cd -> start_workspace		908484						
ANR	920743	Symbol	* mcbuffer		908484						
ANR	920744	Symbol	nlen		908484						
ANR	920745	Symbol	verbnames		908484						
ANR	920746	Symbol	GET_EXTRALEN		908484						
ANR	920747	Symbol	OP_NOTPOSQUERYI		908484						
ANR	920748	Symbol	setverb		908484						
ANR	920749	Symbol	OP_POSQUERYI		908484						
ANR	920750	Symbol	~pbits		908484						
ANR	920751	Symbol	previous		908484						
ANR	920752	Symbol	* tempptr		908484						
ANR	920753	Symbol	IMM2_SIZE		908484						
ANR	920754	Symbol	PT_PXPRINT		908484						
ANR	920755	Symbol	this_hwm_offset		908484						
ANR	920756	Symbol	& d		908484						
ANR	920757	Symbol	OP_DOLLM		908484						
ANR	920758	Symbol	& repeat_max		908484						
ANR	920759	Symbol	check_escape		908484						
ANR	920760	Symbol	ptr		908484						
ANR	920761	Symbol	CHAR_EQUALS_SIGN		908484						
ANR	920762	Symbol	OP_ONCE		908484						
ANR	920763	Symbol	OP_XCLASS		908484						
ANR	920764	Symbol	tempcode		908484						
ANR	920765	Symbol	PCRE_AUTO_CALLOUT		908484						
ANR	920766	Symbol	FALSE		908484						
ANR	920767	Symbol	PCRE_UTF8		908484						
ANR	920768	Symbol	* brazeroptr		908484						
ANR	920769	Symbol	STRING_DEFINE		908484						
ANR	920770	Symbol	CHAR_BS		908484						
ANR	920771	Symbol	optset		908484						
ANR	920772	Symbol	* firstcharflagsptr		908484						
ANR	920773	Symbol	cd -> dupgroups		908484						
ANR	920774	Symbol	cd -> names_found		908484						
ANR	920775	Symbol	subreqchar		908484						
ANR	920776	Symbol	cd -> name_entry_size		908484						
ANR	920777	Symbol	subreqcharflags		908484						
ANR	920778	Symbol	cd -> workspace_size		908484						
ANR	920779	Symbol	STRING_WEIRD_ENDWORD		908484						
ANR	920780	Symbol	PCRE_JCHANGED		908484						
ANR	920781	Symbol	options		908484						
ANR	920782	Symbol	oc -> next		908484						
ANR	920783	Symbol	posix_class_maps		908484						
ANR	920784	Symbol	CHAR_CR		908484						
ANR	920785	Symbol	OP_NOTPOSPLUSI		908484						
ANR	920786	Symbol	* tempcode		908484						
ANR	920787	Symbol	OP_SCOND		908484						
ANR	920788	Symbol	pbits		908484						
ANR	920789	Symbol	POSIX_SUBSIZE		908484						
ANR	920790	Symbol	is_quantifier		908484						
ANR	920791	Symbol	MAX_NAME_SIZE		908484						
ANR	920792	Symbol	firstcharptr		908484						
ANR	920793	Symbol	CHAR_LEFT_CURLY_BRACKET		908484						
ANR	920794	Symbol	sub_start_of_word		908484						
ANR	920795	Symbol	GET		908484						
ANR	920796	Symbol	OP_ASSERT_NOT		908484						
ANR	920797	Symbol	cd -> backref_map		908484						
ANR	920798	Symbol	PCRE_NO_AUTO_CAPTURE		908484						
ANR	920799	Symbol	CHAR_COLON		908484						
ANR	920800	Symbol	cd -> named_groups [ cd -> names_found ] . length		908484						
ANR	920801	Symbol	OP_ONCE_NC		908484						
ANR	920802	Symbol	skipbytes		908484						
ANR	920803	Symbol	* reqcharflagsptr		908484						
ANR	920804	Symbol	ng -> name		908484						
ANR	920805	Symbol	NOT_FIRSTCHAR		908484						
ANR	920806	Symbol	bracode		908484						
ANR	920807	Symbol	& set		908484						
ANR	920808	Symbol	~0x3c		908484						
ANR	920809	Symbol	reqcharflags		908484						
ANR	920810	Symbol	zeroreqcharflags		908484						
ANR	920811	Symbol	CHAR_AMPERSAND		908484						
ANR	920812	Symbol	prop_value		908484						
ANR	920813	Symbol	INT_MAX		908484						
ANR	920814	Symbol	PCRE_CASELESS		908484						
ANR	920815	Symbol	* * p		908484						
ANR	920816	Symbol	reqcharptr		908484						
ANR	920817	Symbol	cd -> ctypes		908484						
ANR	920818	Symbol	brazeroptr		908484						
ANR	920819	Symbol	XCL_MAP		908484						
ANR	920820	Symbol	verbs [ i ] . op		908484						
ANR	920821	Symbol	PCRE_JAVASCRIPT_COMPAT		908484						
ANR	920822	Symbol	MAX_NAME_COUNT		908484						
ANR	920823	Symbol	OP_NOTPOSPLUS		908484						
ANR	920824	Symbol	cd -> bracount		908484						
ANR	920825	Symbol	OP_NOTI		908484						
ANR	920826	Symbol	condcount		908484						
ANR	920827	Symbol	OP_EXACT		908484						
ANR	920828	Symbol	OP_CHARI		908484						
ANR	920829	Symbol	* previous ++		908484						
ANR	920830	Symbol	* scode		908484						
ANR	920831	Symbol	utf_chars		908484						
ANR	920832	Symbol	* ptr		908484						
ANR	920833	Symbol	OP_TYPEPOSPLUS		908484						
ANR	920834	Symbol	GET2		908484						
ANR	920835	Symbol	* escape		908484						
ANR	920836	Symbol	offset		908484						
ANR	920837	Symbol	OP_DNREF		908484						
ANR	920838	Symbol	newsize		908484						
ANR	920839	Symbol	greedy_non_default		908484						
ANR	920840	Symbol	OP_CALLOUT		908484						
ANR	920841	Symbol	OP_CRPOSPLUS		908484						
ANR	920842	Symbol	lengthptr		908484						
ANR	920843	Symbol	ERR6		908484						
ANR	920844	Symbol	ERR7		908484						
ANR	920845	Symbol	ERR8		908484						
ANR	920846	Symbol	ERR9		908484						
ANR	920847	Symbol	* namelen		908484						
ANR	920848	Symbol	OP_BRAPOSZERO		908484						
ANR	920849	Symbol	CHAR_Q		908484						
ANR	920850	Symbol	CHAR_R		908484						
ANR	920851	Symbol	* opcode_possessify		908484						
ANR	920852	Symbol	cd -> dupnames		908484						
ANR	920853	Symbol	add_to_class		908484						
ANR	920854	Symbol	* * cd		908484						
ANR	920855	Symbol	* ketcode		908484						
ANR	920856	Symbol	class_uchardata_base		908484						
ANR	920857	Symbol	IS_NEWLINE		908484						
ANR	920858	Symbol	cd -> start_pattern		908484						
ANR	920859	Symbol	after_manual_callout		908484						
ANR	920860	Symbol	OP_DEF		908484						
ANR	920861	Symbol	lastchar		908484						
ANR	920862	Symbol	base_hwm_offset		908484						
ANR	920863	Symbol	XCL_END		908484						
ANR	920864	Symbol	OP_ASSERT_ACCEPT		908484						
ANR	920865	Symbol	OP_KETRPOS		908484						
ANR	920866	Symbol	OP_ASSERT		908484						
ANR	920867	Symbol	previous_callout		908484						
ANR	920868	Symbol	CHAR_0		908484						
ANR	920869	Symbol	CHAR_C		908484						
ANR	920870	Symbol	OP_PROP		908484						
ANR	920871	Symbol	ESC_k		908484						
ANR	920872	Symbol	ESC_p		908484						
ANR	920873	Symbol	cd -> iscondassert		908484						
ANR	920874	Symbol	CHAR_E		908484						
ANR	920875	Symbol	CHAR_GREATER_THAN_SIGN		908484						
ANR	920876	Symbol	& repeat_min		908484						
ANR	920877	Function	compile_regex	8242:0:272774:282837							
ANR	920878	FunctionDef	"compile_regex (int options , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , BOOL lookbehind , BOOL reset_bracount , int skipbytes , int cond_depth , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , compile_data * cd , int * lengthptr)"		920877	0					
ANR	920879	CompoundStatement		8249:0:273127:282837	920877	0					
ANR	920880	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	8250:0:273129:273160	920877	0	True				
ANR	920881	IdentifierDecl	* ptr = * ptrptr		920877	0					
ANR	920882	IdentifierDeclType	const pcre_uchar *		920877	0					
ANR	920883	Identifier	ptr		920877	1					
ANR	920884	AssignmentExpression	* ptr = * ptrptr		920877	2		=			
ANR	920885	Identifier	ptr		920877	0					
ANR	920886	UnaryOperationExpression	* ptrptr		920877	1					
ANR	920887	UnaryOperator	*		920877	0					
ANR	920888	Identifier	ptrptr		920877	1					
ANR	920889	IdentifierDeclStatement	pcre_uchar * code = * codeptr ;	8251:0:273162:273189	920877	1	True				
ANR	920890	IdentifierDecl	* code = * codeptr		920877	0					
ANR	920891	IdentifierDeclType	pcre_uchar *		920877	0					
ANR	920892	Identifier	code		920877	1					
ANR	920893	AssignmentExpression	* code = * codeptr		920877	2		=			
ANR	920894	Identifier	code		920877	0					
ANR	920895	UnaryOperationExpression	* codeptr		920877	1					
ANR	920896	UnaryOperator	*		920877	0					
ANR	920897	Identifier	codeptr		920877	1					
ANR	920898	IdentifierDeclStatement	pcre_uchar * last_branch = code ;	8252:0:273191:273221	920877	2	True				
ANR	920899	IdentifierDecl	* last_branch = code		920877	0					
ANR	920900	IdentifierDeclType	pcre_uchar *		920877	0					
ANR	920901	Identifier	last_branch		920877	1					
ANR	920902	AssignmentExpression	* last_branch = code		920877	2		=			
ANR	920903	Identifier	code		920877	0					
ANR	920904	Identifier	code		920877	1					
ANR	920905	IdentifierDeclStatement	pcre_uchar * start_bracket = code ;	8253:0:273223:273255	920877	3	True				
ANR	920906	IdentifierDecl	* start_bracket = code		920877	0					
ANR	920907	IdentifierDeclType	pcre_uchar *		920877	0					
ANR	920908	Identifier	start_bracket		920877	1					
ANR	920909	AssignmentExpression	* start_bracket = code		920877	2		=			
ANR	920910	Identifier	code		920877	0					
ANR	920911	Identifier	code		920877	1					
ANR	920912	IdentifierDeclStatement	pcre_uchar * reverse_count = NULL ;	8254:0:273257:273289	920877	4	True				
ANR	920913	IdentifierDecl	* reverse_count = NULL		920877	0					
ANR	920914	IdentifierDeclType	pcre_uchar *		920877	0					
ANR	920915	Identifier	reverse_count		920877	1					
ANR	920916	AssignmentExpression	* reverse_count = NULL		920877	2		=			
ANR	920917	Identifier	NULL		920877	0					
ANR	920918	Identifier	NULL		920877	1					
ANR	920919	IdentifierDeclStatement	open_capitem capitem ;	8255:0:273291:273311	920877	5	True				
ANR	920920	IdentifierDecl	capitem		920877	0					
ANR	920921	IdentifierDeclType	open_capitem		920877	0					
ANR	920922	Identifier	capitem		920877	1					
ANR	920923	IdentifierDeclStatement	int capnumber = 0 ;	8256:0:273313:273330	920877	6	True				
ANR	920924	IdentifierDecl	capnumber = 0		920877	0					
ANR	920925	IdentifierDeclType	int		920877	0					
ANR	920926	Identifier	capnumber		920877	1					
ANR	920927	AssignmentExpression	capnumber = 0		920877	2		=			
ANR	920928	Identifier	capnumber		920877	0					
ANR	920929	PrimaryExpression	0		920877	1					
ANR	920930	IdentifierDeclStatement	"pcre_uint32 firstchar , reqchar ;"	8257:0:273332:273362	920877	7	True				
ANR	920931	IdentifierDecl	firstchar		920877	0					
ANR	920932	IdentifierDeclType	pcre_uint32		920877	0					
ANR	920933	Identifier	firstchar		920877	1					
ANR	920934	IdentifierDecl	reqchar		920877	1					
ANR	920935	IdentifierDeclType	pcre_uint32		920877	0					
ANR	920936	Identifier	reqchar		920877	1					
ANR	920937	IdentifierDeclStatement	"pcre_int32 firstcharflags , reqcharflags ;"	8258:0:273364:273403	920877	8	True				
ANR	920938	IdentifierDecl	firstcharflags		920877	0					
ANR	920939	IdentifierDeclType	pcre_int32		920877	0					
ANR	920940	Identifier	firstcharflags		920877	1					
ANR	920941	IdentifierDecl	reqcharflags		920877	1					
ANR	920942	IdentifierDeclType	pcre_int32		920877	0					
ANR	920943	Identifier	reqcharflags		920877	1					
ANR	920944	IdentifierDeclStatement	"pcre_uint32 branchfirstchar , branchreqchar ;"	8259:0:273405:273447	920877	9	True				
ANR	920945	IdentifierDecl	branchfirstchar		920877	0					
ANR	920946	IdentifierDeclType	pcre_uint32		920877	0					
ANR	920947	Identifier	branchfirstchar		920877	1					
ANR	920948	IdentifierDecl	branchreqchar		920877	1					
ANR	920949	IdentifierDeclType	pcre_uint32		920877	0					
ANR	920950	Identifier	branchreqchar		920877	1					
ANR	920951	IdentifierDeclStatement	"pcre_int32 branchfirstcharflags , branchreqcharflags ;"	8260:0:273449:273500	920877	10	True				
ANR	920952	IdentifierDecl	branchfirstcharflags		920877	0					
ANR	920953	IdentifierDeclType	pcre_int32		920877	0					
ANR	920954	Identifier	branchfirstcharflags		920877	1					
ANR	920955	IdentifierDecl	branchreqcharflags		920877	1					
ANR	920956	IdentifierDeclType	pcre_int32		920877	0					
ANR	920957	Identifier	branchreqcharflags		920877	1					
ANR	920958	IdentifierDeclStatement	int length ;	8261:0:273502:273512	920877	11	True				
ANR	920959	IdentifierDecl	length		920877	0					
ANR	920960	IdentifierDeclType	int		920877	0					
ANR	920961	Identifier	length		920877	1					
ANR	920962	IdentifierDeclStatement	unsigned int orig_bracount ;	8262:0:273514:273540	920877	12	True				
ANR	920963	IdentifierDecl	orig_bracount		920877	0					
ANR	920964	IdentifierDeclType	unsigned int		920877	0					
ANR	920965	Identifier	orig_bracount		920877	1					
ANR	920966	IdentifierDeclStatement	unsigned int max_bracount ;	8263:0:273542:273567	920877	13	True				
ANR	920967	IdentifierDecl	max_bracount		920877	0					
ANR	920968	IdentifierDeclType	unsigned int		920877	0					
ANR	920969	Identifier	max_bracount		920877	1					
ANR	920970	IdentifierDeclStatement	branch_chain bc ;	8264:0:273569:273584	920877	14	True				
ANR	920971	IdentifierDecl	bc		920877	0					
ANR	920972	IdentifierDeclType	branch_chain		920877	0					
ANR	920973	Identifier	bc		920877	1					
ANR	920974	IdentifierDeclStatement	size_t save_hwm_offset ;	8265:0:273586:273608	920877	15	True				
ANR	920975	IdentifierDecl	save_hwm_offset		920877	0					
ANR	920976	IdentifierDeclType	size_t		920877	0					
ANR	920977	Identifier	save_hwm_offset		920877	1					
ANR	920978	IfStatement	if ( PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( ) )		920877	16					
ANR	920979	Condition	PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( )	8269:4:273693:273740	920877	0	True				
ANR	920980	AndExpression	PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( )		920877	0		&&			
ANR	920981	EqualityExpression	PUBL ( stack_guard ) != NULL		920877	0		!=			
ANR	920982	CallExpression	PUBL ( stack_guard )		920877	0					
ANR	920983	Callee	PUBL		920877	0					
ANR	920984	Identifier	PUBL		920877	0					
ANR	920985	ArgumentList	stack_guard		920877	1					
ANR	920986	Argument	stack_guard		920877	0					
ANR	920987	Identifier	stack_guard		920877	0					
ANR	920988	Identifier	NULL		920877	1					
ANR	920989	CallExpression	PUBL ( stack_guard ) ( )		920877	1					
ANR	920990	Callee	PUBL ( stack_guard )		920877	0					
ANR	920991	CallExpression	PUBL ( stack_guard )		920877	0					
ANR	920992	Callee	PUBL		920877	0					
ANR	920993	Identifier	PUBL		920877	0					
ANR	920994	ArgumentList	stack_guard		920877	1					
ANR	920995	Argument	stack_guard		920877	0					
ANR	920996	Identifier	stack_guard		920877	0					
ANR	920997	ArgumentList			920877	1					
ANR	920998	CompoundStatement		22:2:617:617	920877	1					
ANR	920999	ExpressionStatement	* errorcodeptr = ERR85	8271:2:273749:273769	920877	0	True				
ANR	921000	AssignmentExpression	* errorcodeptr = ERR85		920877	0		=			
ANR	921001	UnaryOperationExpression	* errorcodeptr		920877	0					
ANR	921002	UnaryOperator	*		920877	0					
ANR	921003	Identifier	errorcodeptr		920877	1					
ANR	921004	Identifier	ERR85		920877	1					
ANR	921005	ReturnStatement	return FALSE ;	8272:2:273773:273785	920877	1	True				
ANR	921006	Identifier	FALSE		920877	0					
ANR	921007	ExpressionStatement	bc . outer = bcptr	8277:0:273828:273844	920877	17	True				
ANR	921008	AssignmentExpression	bc . outer = bcptr		920877	0		=			
ANR	921009	MemberAccess	bc . outer		920877	0					
ANR	921010	Identifier	bc		920877	0					
ANR	921011	Identifier	outer		920877	1					
ANR	921012	Identifier	bcptr		920877	1					
ANR	921013	ExpressionStatement	bc . current_branch = code	8278:0:273846:273870	920877	18	True				
ANR	921014	AssignmentExpression	bc . current_branch = code		920877	0		=			
ANR	921015	MemberAccess	bc . current_branch		920877	0					
ANR	921016	Identifier	bc		920877	0					
ANR	921017	Identifier	current_branch		920877	1					
ANR	921018	Identifier	code		920877	1					
ANR	921019	ExpressionStatement	firstchar = reqchar = 0	8280:0:273873:273896	920877	19	True				
ANR	921020	AssignmentExpression	firstchar = reqchar = 0		920877	0		=			
ANR	921021	Identifier	firstchar		920877	0					
ANR	921022	AssignmentExpression	reqchar = 0		920877	1		=			
ANR	921023	Identifier	reqchar		920877	0					
ANR	921024	PrimaryExpression	0		920877	1					
ANR	921025	ExpressionStatement	firstcharflags = reqcharflags = REQ_UNSET	8281:0:273898:273939	920877	20	True				
ANR	921026	AssignmentExpression	firstcharflags = reqcharflags = REQ_UNSET		920877	0		=			
ANR	921027	Identifier	firstcharflags		920877	0					
ANR	921028	AssignmentExpression	reqcharflags = REQ_UNSET		920877	1		=			
ANR	921029	Identifier	reqcharflags		920877	0					
ANR	921030	Identifier	REQ_UNSET		920877	1					
ANR	921031	ExpressionStatement	save_hwm_offset = cd -> hwm - cd -> start_workspace	8283:0:273942:273989	920877	21	True				
ANR	921032	AssignmentExpression	save_hwm_offset = cd -> hwm - cd -> start_workspace		920877	0		=			
ANR	921033	Identifier	save_hwm_offset		920877	0					
ANR	921034	AdditiveExpression	cd -> hwm - cd -> start_workspace		920877	1		-			
ANR	921035	PtrMemberAccess	cd -> hwm		920877	0					
ANR	921036	Identifier	cd		920877	0					
ANR	921037	Identifier	hwm		920877	1					
ANR	921038	PtrMemberAccess	cd -> start_workspace		920877	1					
ANR	921039	Identifier	cd		920877	0					
ANR	921040	Identifier	start_workspace		920877	1					
ANR	921041	ExpressionStatement	length = 2 + 2 * LINK_SIZE + skipbytes	8292:0:274431:274467	920877	22	True				
ANR	921042	AssignmentExpression	length = 2 + 2 * LINK_SIZE + skipbytes		920877	0		=			
ANR	921043	Identifier	length		920877	0					
ANR	921044	AdditiveExpression	2 + 2 * LINK_SIZE + skipbytes		920877	1		+			
ANR	921045	PrimaryExpression	2		920877	0					
ANR	921046	AdditiveExpression	2 * LINK_SIZE + skipbytes		920877	1		+			
ANR	921047	MultiplicativeExpression	2 * LINK_SIZE		920877	0		*			
ANR	921048	PrimaryExpression	2		920877	0					
ANR	921049	Identifier	LINK_SIZE		920877	1					
ANR	921050	Identifier	skipbytes		920877	1					
ANR	921051	IfStatement	if ( * code == OP_CBRA )		920877	23					
ANR	921052	Condition	* code == OP_CBRA	8305:4:275167:275182	920877	0	True				
ANR	921053	EqualityExpression	* code == OP_CBRA		920877	0		==			
ANR	921054	UnaryOperationExpression	* code		920877	0					
ANR	921055	UnaryOperator	*		920877	0					
ANR	921056	Identifier	code		920877	1					
ANR	921057	Identifier	OP_CBRA		920877	1					
ANR	921058	CompoundStatement		58:2:2059:2059	920877	1					
ANR	921059	ExpressionStatement	"capnumber = GET2 ( code , 1 + LINK_SIZE )"	8307:2:275191:275228	920877	0	True				
ANR	921060	AssignmentExpression	"capnumber = GET2 ( code , 1 + LINK_SIZE )"		920877	0		=			
ANR	921061	Identifier	capnumber		920877	0					
ANR	921062	CallExpression	"GET2 ( code , 1 + LINK_SIZE )"		920877	1					
ANR	921063	Callee	GET2		920877	0					
ANR	921064	Identifier	GET2		920877	0					
ANR	921065	ArgumentList	code		920877	1					
ANR	921066	Argument	code		920877	0					
ANR	921067	Identifier	code		920877	0					
ANR	921068	Argument	1 + LINK_SIZE		920877	1					
ANR	921069	AdditiveExpression	1 + LINK_SIZE		920877	0		+			
ANR	921070	PrimaryExpression	1		920877	0					
ANR	921071	Identifier	LINK_SIZE		920877	1					
ANR	921072	ExpressionStatement	capitem . number = capnumber	8308:2:275232:275258	920877	1	True				
ANR	921073	AssignmentExpression	capitem . number = capnumber		920877	0		=			
ANR	921074	MemberAccess	capitem . number		920877	0					
ANR	921075	Identifier	capitem		920877	0					
ANR	921076	Identifier	number		920877	1					
ANR	921077	Identifier	capnumber		920877	1					
ANR	921078	ExpressionStatement	capitem . next = cd -> open_caps	8309:2:275262:275290	920877	2	True				
ANR	921079	AssignmentExpression	capitem . next = cd -> open_caps		920877	0		=			
ANR	921080	MemberAccess	capitem . next		920877	0					
ANR	921081	Identifier	capitem		920877	0					
ANR	921082	Identifier	next		920877	1					
ANR	921083	PtrMemberAccess	cd -> open_caps		920877	1					
ANR	921084	Identifier	cd		920877	0					
ANR	921085	Identifier	open_caps		920877	1					
ANR	921086	ExpressionStatement	capitem . flag = FALSE	8310:2:275294:275314	920877	3	True				
ANR	921087	AssignmentExpression	capitem . flag = FALSE		920877	0		=			
ANR	921088	MemberAccess	capitem . flag		920877	0					
ANR	921089	Identifier	capitem		920877	0					
ANR	921090	Identifier	flag		920877	1					
ANR	921091	Identifier	FALSE		920877	1					
ANR	921092	ExpressionStatement	cd -> open_caps = & capitem	8311:2:275318:275342	920877	4	True				
ANR	921093	AssignmentExpression	cd -> open_caps = & capitem		920877	0		=			
ANR	921094	PtrMemberAccess	cd -> open_caps		920877	0					
ANR	921095	Identifier	cd		920877	0					
ANR	921096	Identifier	open_caps		920877	1					
ANR	921097	UnaryOperationExpression	& capitem		920877	1					
ANR	921098	UnaryOperator	&		920877	0					
ANR	921099	Identifier	capitem		920877	1					
ANR	921100	ExpressionStatement	"PUT ( code , 1 , 0 )"	8316:0:275415:275430	920877	24	True				
ANR	921101	CallExpression	"PUT ( code , 1 , 0 )"		920877	0					
ANR	921102	Callee	PUT		920877	0					
ANR	921103	Identifier	PUT		920877	0					
ANR	921104	ArgumentList	code		920877	1					
ANR	921105	Argument	code		920877	0					
ANR	921106	Identifier	code		920877	0					
ANR	921107	Argument	1		920877	1					
ANR	921108	PrimaryExpression	1		920877	0					
ANR	921109	Argument	0		920877	2					
ANR	921110	PrimaryExpression	0		920877	0					
ANR	921111	ExpressionStatement	code += 1 + LINK_SIZE + skipbytes	8317:0:275432:275465	920877	25	True				
ANR	921112	AssignmentExpression	code += 1 + LINK_SIZE + skipbytes		920877	0		+=			
ANR	921113	Identifier	code		920877	0					
ANR	921114	AdditiveExpression	1 + LINK_SIZE + skipbytes		920877	1		+			
ANR	921115	PrimaryExpression	1		920877	0					
ANR	921116	AdditiveExpression	LINK_SIZE + skipbytes		920877	1		+			
ANR	921117	Identifier	LINK_SIZE		920877	0					
ANR	921118	Identifier	skipbytes		920877	1					
ANR	921119	ExpressionStatement	orig_bracount = max_bracount = cd -> bracount	8321:0:275508:275551	920877	26	True				
ANR	921120	AssignmentExpression	orig_bracount = max_bracount = cd -> bracount		920877	0		=			
ANR	921121	Identifier	orig_bracount		920877	0					
ANR	921122	AssignmentExpression	max_bracount = cd -> bracount		920877	1		=			
ANR	921123	Identifier	max_bracount		920877	0					
ANR	921124	PtrMemberAccess	cd -> bracount		920877	1					
ANR	921125	Identifier	cd		920877	0					
ANR	921126	Identifier	bracount		920877	1					
ANR	921127	ForStatement	for ( ; ; )		920877	27					
ANR	921128	CompoundStatement		75:2:2436:2436	920877	0					
ANR	921129	IfStatement	if ( reset_bracount )		920877	0					
ANR	921130	Condition	reset_bracount	8327:6:275677:275690	920877	0	True				
ANR	921131	Identifier	reset_bracount		920877	0					
ANR	921132	ExpressionStatement	cd -> bracount = orig_bracount	8327:22:275693:275721	920877	1	True				
ANR	921133	AssignmentExpression	cd -> bracount = orig_bracount		920877	0		=			
ANR	921134	PtrMemberAccess	cd -> bracount		920877	0					
ANR	921135	Identifier	cd		920877	0					
ANR	921136	Identifier	bracount		920877	1					
ANR	921137	Identifier	orig_bracount		920877	1					
ANR	921138	IfStatement	if ( lookbehind )		920877	1					
ANR	921139	Condition	lookbehind	8331:6:275787:275796	920877	0	True				
ANR	921140	Identifier	lookbehind		920877	0					
ANR	921141	CompoundStatement		84:4:2675:2675	920877	1					
ANR	921142	ExpressionStatement	* code ++ = OP_REVERSE	8333:4:275809:275829	920877	0	True				
ANR	921143	AssignmentExpression	* code ++ = OP_REVERSE		920877	0		=			
ANR	921144	UnaryOperationExpression	* code ++		920877	0					
ANR	921145	UnaryOperator	*		920877	0					
ANR	921146	PostIncDecOperationExpression	code ++		920877	1					
ANR	921147	Identifier	code		920877	0					
ANR	921148	IncDec	++		920877	1					
ANR	921149	Identifier	OP_REVERSE		920877	1					
ANR	921150	ExpressionStatement	reverse_count = code	8334:4:275835:275855	920877	1	True				
ANR	921151	AssignmentExpression	reverse_count = code		920877	0		=			
ANR	921152	Identifier	reverse_count		920877	0					
ANR	921153	Identifier	code		920877	1					
ANR	921154	ExpressionStatement	"PUTINC ( code , 0 , 0 )"	8335:4:275861:275879	920877	2	True				
ANR	921155	CallExpression	"PUTINC ( code , 0 , 0 )"		920877	0					
ANR	921156	Callee	PUTINC		920877	0					
ANR	921157	Identifier	PUTINC		920877	0					
ANR	921158	ArgumentList	code		920877	1					
ANR	921159	Argument	code		920877	0					
ANR	921160	Identifier	code		920877	0					
ANR	921161	Argument	0		920877	1					
ANR	921162	PrimaryExpression	0		920877	0					
ANR	921163	Argument	0		920877	2					
ANR	921164	PrimaryExpression	0		920877	0					
ANR	921165	ExpressionStatement	length += 1 + LINK_SIZE	8336:4:275885:275908	920877	3	True				
ANR	921166	AssignmentExpression	length += 1 + LINK_SIZE		920877	0		+=			
ANR	921167	Identifier	length		920877	0					
ANR	921168	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921169	PrimaryExpression	1		920877	0					
ANR	921170	Identifier	LINK_SIZE		920877	1					
ANR	921171	IfStatement	"if ( ! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length ) )"		920877	2					
ANR	921172	Condition	"! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"	8342:6:276022:276225	920877	0	True				
ANR	921173	UnaryOperationExpression	"! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"		920877	0					
ANR	921174	UnaryOperator	!		920877	0					
ANR	921175	CallExpression	"compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"		920877	1					
ANR	921176	Callee	compile_branch		920877	0					
ANR	921177	Identifier	compile_branch		920877	0					
ANR	921178	ArgumentList	& options		920877	1					
ANR	921179	Argument	& options		920877	0					
ANR	921180	UnaryOperationExpression	& options		920877	0					
ANR	921181	UnaryOperator	&		920877	0					
ANR	921182	Identifier	options		920877	1					
ANR	921183	Argument	& code		920877	1					
ANR	921184	UnaryOperationExpression	& code		920877	0					
ANR	921185	UnaryOperator	&		920877	0					
ANR	921186	Identifier	code		920877	1					
ANR	921187	Argument	& ptr		920877	2					
ANR	921188	UnaryOperationExpression	& ptr		920877	0					
ANR	921189	UnaryOperator	&		920877	0					
ANR	921190	Identifier	ptr		920877	1					
ANR	921191	Argument	errorcodeptr		920877	3					
ANR	921192	Identifier	errorcodeptr		920877	0					
ANR	921193	Argument	& branchfirstchar		920877	4					
ANR	921194	UnaryOperationExpression	& branchfirstchar		920877	0					
ANR	921195	UnaryOperator	&		920877	0					
ANR	921196	Identifier	branchfirstchar		920877	1					
ANR	921197	Argument	& branchfirstcharflags		920877	5					
ANR	921198	UnaryOperationExpression	& branchfirstcharflags		920877	0					
ANR	921199	UnaryOperator	&		920877	0					
ANR	921200	Identifier	branchfirstcharflags		920877	1					
ANR	921201	Argument	& branchreqchar		920877	6					
ANR	921202	UnaryOperationExpression	& branchreqchar		920877	0					
ANR	921203	UnaryOperator	&		920877	0					
ANR	921204	Identifier	branchreqchar		920877	1					
ANR	921205	Argument	& branchreqcharflags		920877	7					
ANR	921206	UnaryOperationExpression	& branchreqcharflags		920877	0					
ANR	921207	UnaryOperator	&		920877	0					
ANR	921208	Identifier	branchreqcharflags		920877	1					
ANR	921209	Argument	& bc		920877	8					
ANR	921210	UnaryOperationExpression	& bc		920877	0					
ANR	921211	UnaryOperator	&		920877	0					
ANR	921212	Identifier	bc		920877	1					
ANR	921213	Argument	cond_depth		920877	9					
ANR	921214	Identifier	cond_depth		920877	0					
ANR	921215	Argument	cd		920877	10					
ANR	921216	Identifier	cd		920877	0					
ANR	921217	Argument	( lengthptr == NULL ) ? NULL : & length		920877	11					
ANR	921218	ConditionalExpression	( lengthptr == NULL ) ? NULL : & length		920877	0					
ANR	921219	Condition	lengthptr == NULL		920877	0					
ANR	921220	EqualityExpression	lengthptr == NULL		920877	0		==			
ANR	921221	Identifier	lengthptr		920877	0					
ANR	921222	Identifier	NULL		920877	1					
ANR	921223	Identifier	NULL		920877	1					
ANR	921224	UnaryOperationExpression	& length		920877	2					
ANR	921225	UnaryOperator	&		920877	0					
ANR	921226	Identifier	length		920877	1					
ANR	921227	CompoundStatement		97:4:3104:3104	920877	1					
ANR	921228	ExpressionStatement	* ptrptr = ptr	8346:4:276238:276251	920877	0	True				
ANR	921229	AssignmentExpression	* ptrptr = ptr		920877	0		=			
ANR	921230	UnaryOperationExpression	* ptrptr		920877	0					
ANR	921231	UnaryOperator	*		920877	0					
ANR	921232	Identifier	ptrptr		920877	1					
ANR	921233	Identifier	ptr		920877	1					
ANR	921234	ReturnStatement	return FALSE ;	8347:4:276257:276269	920877	1	True				
ANR	921235	Identifier	FALSE		920877	0					
ANR	921236	IfStatement	if ( cd -> bracount > max_bracount )		920877	3					
ANR	921237	Condition	cd -> bracount > max_bracount	8353:6:276388:276414	920877	0	True				
ANR	921238	RelationalExpression	cd -> bracount > max_bracount		920877	0		>			
ANR	921239	PtrMemberAccess	cd -> bracount		920877	0					
ANR	921240	Identifier	cd		920877	0					
ANR	921241	Identifier	bracount		920877	1					
ANR	921242	Identifier	max_bracount		920877	1					
ANR	921243	ExpressionStatement	max_bracount = cd -> bracount	8353:35:276417:276444	920877	1	True				
ANR	921244	AssignmentExpression	max_bracount = cd -> bracount		920877	0		=			
ANR	921245	Identifier	max_bracount		920877	0					
ANR	921246	PtrMemberAccess	cd -> bracount		920877	1					
ANR	921247	Identifier	cd		920877	0					
ANR	921248	Identifier	bracount		920877	1					
ANR	921249	IfStatement	if ( lengthptr == NULL )		920877	4					
ANR	921250	Condition	lengthptr == NULL	8357:6:276531:276547	920877	0	True				
ANR	921251	EqualityExpression	lengthptr == NULL		920877	0		==			
ANR	921252	Identifier	lengthptr		920877	0					
ANR	921253	Identifier	NULL		920877	1					
ANR	921254	CompoundStatement		110:4:3426:3426	920877	1					
ANR	921255	IfStatement	if ( * last_branch != OP_ALT )		920877	0					
ANR	921256	Condition	* last_branch != OP_ALT	8362:8:276689:276710	920877	0	True				
ANR	921257	EqualityExpression	* last_branch != OP_ALT		920877	0		!=			
ANR	921258	UnaryOperationExpression	* last_branch		920877	0					
ANR	921259	UnaryOperator	*		920877	0					
ANR	921260	Identifier	last_branch		920877	1					
ANR	921261	Identifier	OP_ALT		920877	1					
ANR	921262	CompoundStatement		115:6:3591:3591	920877	1					
ANR	921263	ExpressionStatement	firstchar = branchfirstchar	8364:6:276727:276754	920877	0	True				
ANR	921264	AssignmentExpression	firstchar = branchfirstchar		920877	0		=			
ANR	921265	Identifier	firstchar		920877	0					
ANR	921266	Identifier	branchfirstchar		920877	1					
ANR	921267	ExpressionStatement	firstcharflags = branchfirstcharflags	8365:6:276762:276799	920877	1	True				
ANR	921268	AssignmentExpression	firstcharflags = branchfirstcharflags		920877	0		=			
ANR	921269	Identifier	firstcharflags		920877	0					
ANR	921270	Identifier	branchfirstcharflags		920877	1					
ANR	921271	ExpressionStatement	reqchar = branchreqchar	8366:6:276807:276830	920877	2	True				
ANR	921272	AssignmentExpression	reqchar = branchreqchar		920877	0		=			
ANR	921273	Identifier	reqchar		920877	0					
ANR	921274	Identifier	branchreqchar		920877	1					
ANR	921275	ExpressionStatement	reqcharflags = branchreqcharflags	8367:6:276838:276871	920877	3	True				
ANR	921276	AssignmentExpression	reqcharflags = branchreqcharflags		920877	0		=			
ANR	921277	Identifier	reqcharflags		920877	0					
ANR	921278	Identifier	branchreqcharflags		920877	1					
ANR	921279	ElseStatement	else		920877	0					
ANR	921280	CompoundStatement		128:6:4036:4036	920877	0					
ANR	921281	IfStatement	if ( firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar ) )		920877	0					
ANR	921282	Condition	firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar )	8381:10:277404:277508	920877	0	True				
ANR	921283	AndExpression	firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar )		920877	0		&&			
ANR	921284	RelationalExpression	firstcharflags >= 0		920877	0		>=			
ANR	921285	Identifier	firstcharflags		920877	0					
ANR	921286	PrimaryExpression	0		920877	1					
ANR	921287	OrExpression	firstcharflags != branchfirstcharflags || firstchar != branchfirstchar		920877	1		||			
ANR	921288	EqualityExpression	firstcharflags != branchfirstcharflags		920877	0		!=			
ANR	921289	Identifier	firstcharflags		920877	0					
ANR	921290	Identifier	branchfirstcharflags		920877	1					
ANR	921291	EqualityExpression	firstchar != branchfirstchar		920877	1		!=			
ANR	921292	Identifier	firstchar		920877	0					
ANR	921293	Identifier	branchfirstchar		920877	1					
ANR	921294	CompoundStatement		135:8:4391:4391	920877	1					
ANR	921295	IfStatement	if ( reqcharflags < 0 )		920877	0					
ANR	921296	Condition	reqcharflags < 0	8384:12:277533:277548	920877	0	True				
ANR	921297	RelationalExpression	reqcharflags < 0		920877	0		<			
ANR	921298	Identifier	reqcharflags		920877	0					
ANR	921299	PrimaryExpression	0		920877	1					
ANR	921300	CompoundStatement		137:10:4433:4433	920877	1					
ANR	921301	ExpressionStatement	reqchar = firstchar	8386:10:277573:277592	920877	0	True				
ANR	921302	AssignmentExpression	reqchar = firstchar		920877	0		=			
ANR	921303	Identifier	reqchar		920877	0					
ANR	921304	Identifier	firstchar		920877	1					
ANR	921305	ExpressionStatement	reqcharflags = firstcharflags	8387:10:277604:277633	920877	1	True				
ANR	921306	AssignmentExpression	reqcharflags = firstcharflags		920877	0		=			
ANR	921307	Identifier	reqcharflags		920877	0					
ANR	921308	Identifier	firstcharflags		920877	1					
ANR	921309	ExpressionStatement	firstcharflags = REQ_NONE	8389:8:277655:277680	920877	1	True				
ANR	921310	AssignmentExpression	firstcharflags = REQ_NONE		920877	0		=			
ANR	921311	Identifier	firstcharflags		920877	0					
ANR	921312	Identifier	REQ_NONE		920877	1					
ANR	921313	IfStatement	if ( firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0 )		920877	1					
ANR	921314	Condition	firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0	8395:10:277847:277919	920877	0	True				
ANR	921315	AndExpression	firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0		920877	0		&&			
ANR	921316	RelationalExpression	firstcharflags < 0		920877	0		<			
ANR	921317	Identifier	firstcharflags		920877	0					
ANR	921318	PrimaryExpression	0		920877	1					
ANR	921319	AndExpression	branchfirstcharflags >= 0 && branchreqcharflags < 0		920877	1		&&			
ANR	921320	RelationalExpression	branchfirstcharflags >= 0		920877	0		>=			
ANR	921321	Identifier	branchfirstcharflags		920877	0					
ANR	921322	PrimaryExpression	0		920877	1					
ANR	921323	RelationalExpression	branchreqcharflags < 0		920877	1		<			
ANR	921324	Identifier	branchreqcharflags		920877	0					
ANR	921325	PrimaryExpression	0		920877	1					
ANR	921326	CompoundStatement		148:8:4802:4802	920877	1					
ANR	921327	ExpressionStatement	branchreqchar = branchfirstchar	8397:8:277940:277971	920877	0	True				
ANR	921328	AssignmentExpression	branchreqchar = branchfirstchar		920877	0		=			
ANR	921329	Identifier	branchreqchar		920877	0					
ANR	921330	Identifier	branchfirstchar		920877	1					
ANR	921331	ExpressionStatement	branchreqcharflags = branchfirstcharflags	8398:8:277981:278022	920877	1	True				
ANR	921332	AssignmentExpression	branchreqcharflags = branchfirstcharflags		920877	0		=			
ANR	921333	Identifier	branchreqcharflags		920877	0					
ANR	921334	Identifier	branchfirstcharflags		920877	1					
ANR	921335	IfStatement	if ( ( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar )		920877	2					
ANR	921336	Condition	( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar	8403:10:278093:278194	920877	0	True				
ANR	921337	OrExpression	( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar		920877	0		||			
ANR	921338	EqualityExpression	( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY )		920877	0		!=			
ANR	921339	BitAndExpression	reqcharflags & ~REQ_VARY		920877	0		&			
ANR	921340	Identifier	reqcharflags		920877	0					
ANR	921341	Identifier	~REQ_VARY		920877	1					
ANR	921342	BitAndExpression	branchreqcharflags & ~REQ_VARY		920877	1		&			
ANR	921343	Identifier	branchreqcharflags		920877	0					
ANR	921344	Identifier	~REQ_VARY		920877	1					
ANR	921345	EqualityExpression	reqchar != branchreqchar		920877	1		!=			
ANR	921346	Identifier	reqchar		920877	0					
ANR	921347	Identifier	branchreqchar		920877	1					
ANR	921348	ExpressionStatement	reqcharflags = REQ_NONE	8405:8:278205:278228	920877	1	True				
ANR	921349	AssignmentExpression	reqcharflags = REQ_NONE		920877	0		=			
ANR	921350	Identifier	reqcharflags		920877	0					
ANR	921351	Identifier	REQ_NONE		920877	1					
ANR	921352	ElseStatement	else		920877	0					
ANR	921353	CompoundStatement		159:8:5121:5121	920877	0					
ANR	921354	ExpressionStatement	reqchar = branchreqchar	8408:8:278259:278282	920877	0	True				
ANR	921355	AssignmentExpression	reqchar = branchreqchar		920877	0		=			
ANR	921356	Identifier	reqchar		920877	0					
ANR	921357	Identifier	branchreqchar		920877	1					
ANR	921358	ExpressionStatement	reqcharflags |= branchreqcharflags	8409:8:278292:278326	920877	1	True				
ANR	921359	AssignmentExpression	reqcharflags |= branchreqcharflags		920877	0		|=			
ANR	921360	Identifier	reqcharflags		920877	0					
ANR	921361	Identifier	branchreqcharflags		920877	1					
ANR	921362	IfStatement	if ( lookbehind )		920877	1					
ANR	921363	Condition	lookbehind	8421:8:278880:278889	920877	0	True				
ANR	921364	Identifier	lookbehind		920877	0					
ANR	921365	CompoundStatement		175:6:5778:5794	920877	1					
ANR	921366	IdentifierDeclStatement	int fixed_length ;	8423:6:278906:278922	920877	0	True				
ANR	921367	IdentifierDecl	fixed_length		920877	0					
ANR	921368	IdentifierDeclType	int		920877	0					
ANR	921369	Identifier	fixed_length		920877	1					
ANR	921370	ExpressionStatement	* code = OP_END	8424:6:278930:278944	920877	1	True				
ANR	921371	AssignmentExpression	* code = OP_END		920877	0		=			
ANR	921372	UnaryOperationExpression	* code		920877	0					
ANR	921373	UnaryOperator	*		920877	0					
ANR	921374	Identifier	code		920877	1					
ANR	921375	Identifier	OP_END		920877	1					
ANR	921376	ExpressionStatement	"fixed_length = find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"	8425:6:278952:279050	920877	2	True				
ANR	921377	AssignmentExpression	"fixed_length = find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"		920877	0		=			
ANR	921378	Identifier	fixed_length		920877	0					
ANR	921379	CallExpression	"find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"		920877	1					
ANR	921380	Callee	find_fixedlength		920877	0					
ANR	921381	Identifier	find_fixedlength		920877	0					
ANR	921382	ArgumentList	last_branch		920877	1					
ANR	921383	Argument	last_branch		920877	0					
ANR	921384	Identifier	last_branch		920877	0					
ANR	921385	Argument	( options & PCRE_UTF8 ) != 0		920877	1					
ANR	921386	EqualityExpression	( options & PCRE_UTF8 ) != 0		920877	0		!=			
ANR	921387	BitAndExpression	options & PCRE_UTF8		920877	0		&			
ANR	921388	Identifier	options		920877	0					
ANR	921389	Identifier	PCRE_UTF8		920877	1					
ANR	921390	PrimaryExpression	0		920877	1					
ANR	921391	Argument	FALSE		920877	2					
ANR	921392	Identifier	FALSE		920877	0					
ANR	921393	Argument	cd		920877	3					
ANR	921394	Identifier	cd		920877	0					
ANR	921395	Argument	NULL		920877	4					
ANR	921396	Identifier	NULL		920877	0					
ANR	921397	ExpressionStatement	"DPRINTF ( ( ""fixed length = %d\\n"" , fixed_length ) )"	8427:6:279058:279104	920877	3	True				
ANR	921398	CallExpression	"DPRINTF ( ( ""fixed length = %d\\n"" , fixed_length ) )"		920877	0					
ANR	921399	Callee	DPRINTF		920877	0					
ANR	921400	Identifier	DPRINTF		920877	0					
ANR	921401	ArgumentList	"""fixed length = %d\\n"" , fixed_length"		920877	1					
ANR	921402	Argument	"""fixed length = %d\\n"" , fixed_length"		920877	0					
ANR	921403	Expression	"""fixed length = %d\\n"" , fixed_length"		920877	0					
ANR	921404	PrimaryExpression	"""fixed length = %d\\n"""		920877	0					
ANR	921405	Identifier	fixed_length		920877	1					
ANR	921406	IfStatement	if ( fixed_length == - 3 )		920877	4					
ANR	921407	Condition	fixed_length == - 3	8428:10:279116:279133	920877	0	True				
ANR	921408	EqualityExpression	fixed_length == - 3		920877	0		==			
ANR	921409	Identifier	fixed_length		920877	0					
ANR	921410	UnaryOperationExpression	- 3		920877	1					
ANR	921411	UnaryOperator	-		920877	0					
ANR	921412	PrimaryExpression	3		920877	1					
ANR	921413	CompoundStatement		181:8:6016:6016	920877	1					
ANR	921414	ExpressionStatement	cd -> check_lookbehind = TRUE	8430:8:279154:279181	920877	0	True				
ANR	921415	AssignmentExpression	cd -> check_lookbehind = TRUE		920877	0		=			
ANR	921416	PtrMemberAccess	cd -> check_lookbehind		920877	0					
ANR	921417	Identifier	cd		920877	0					
ANR	921418	Identifier	check_lookbehind		920877	1					
ANR	921419	Identifier	TRUE		920877	1					
ANR	921420	ElseStatement	else		920877	0					
ANR	921421	IfStatement	if ( fixed_length < 0 )		920877	0					
ANR	921422	Condition	fixed_length < 0	8432:15:279208:279223	920877	0	True				
ANR	921423	RelationalExpression	fixed_length < 0		920877	0		<			
ANR	921424	Identifier	fixed_length		920877	0					
ANR	921425	PrimaryExpression	0		920877	1					
ANR	921426	CompoundStatement		185:8:6106:6106	920877	1					
ANR	921427	ExpressionStatement	* errorcodeptr = ( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25	8434:8:279244:279348	920877	0	True				
ANR	921428	AssignmentExpression	* errorcodeptr = ( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25		920877	0		=			
ANR	921429	UnaryOperationExpression	* errorcodeptr		920877	0					
ANR	921430	UnaryOperator	*		920877	0					
ANR	921431	Identifier	errorcodeptr		920877	1					
ANR	921432	ConditionalExpression	( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25		920877	1					
ANR	921433	Condition	fixed_length == - 2		920877	0					
ANR	921434	EqualityExpression	fixed_length == - 2		920877	0		==			
ANR	921435	Identifier	fixed_length		920877	0					
ANR	921436	UnaryOperationExpression	- 2		920877	1					
ANR	921437	UnaryOperator	-		920877	0					
ANR	921438	PrimaryExpression	2		920877	1					
ANR	921439	Identifier	ERR36		920877	1					
ANR	921440	ConditionalExpression	( fixed_length == - 4 ) ? ERR70 : ERR25		920877	2					
ANR	921441	Condition	fixed_length == - 4		920877	0					
ANR	921442	EqualityExpression	fixed_length == - 4		920877	0		==			
ANR	921443	Identifier	fixed_length		920877	0					
ANR	921444	UnaryOperationExpression	- 4		920877	1					
ANR	921445	UnaryOperator	-		920877	0					
ANR	921446	PrimaryExpression	4		920877	1					
ANR	921447	Identifier	ERR70		920877	1					
ANR	921448	Identifier	ERR25		920877	2					
ANR	921449	ExpressionStatement	* ptrptr = ptr	8436:8:279358:279371	920877	1	True				
ANR	921450	AssignmentExpression	* ptrptr = ptr		920877	0		=			
ANR	921451	UnaryOperationExpression	* ptrptr		920877	0					
ANR	921452	UnaryOperator	*		920877	0					
ANR	921453	Identifier	ptrptr		920877	1					
ANR	921454	Identifier	ptr		920877	1					
ANR	921455	ReturnStatement	return FALSE ;	8437:8:279381:279393	920877	2	True				
ANR	921456	Identifier	FALSE		920877	0					
ANR	921457	ElseStatement	else		920877	0					
ANR	921458	CompoundStatement		192:8:6296:6296	920877	0					
ANR	921459	IfStatement	if ( fixed_length > cd -> max_lookbehind )		920877	0					
ANR	921460	Condition	fixed_length > cd -> max_lookbehind	8441:12:279438:279470	920877	0	True				
ANR	921461	RelationalExpression	fixed_length > cd -> max_lookbehind		920877	0		>			
ANR	921462	Identifier	fixed_length		920877	0					
ANR	921463	PtrMemberAccess	cd -> max_lookbehind		920877	1					
ANR	921464	Identifier	cd		920877	0					
ANR	921465	Identifier	max_lookbehind		920877	1					
ANR	921466	ExpressionStatement	cd -> max_lookbehind = fixed_length	8442:10:279483:279516	920877	1	True				
ANR	921467	AssignmentExpression	cd -> max_lookbehind = fixed_length		920877	0		=			
ANR	921468	PtrMemberAccess	cd -> max_lookbehind		920877	0					
ANR	921469	Identifier	cd		920877	0					
ANR	921470	Identifier	max_lookbehind		920877	1					
ANR	921471	Identifier	fixed_length		920877	1					
ANR	921472	ExpressionStatement	"PUT ( reverse_count , 0 , fixed_length )"	8443:8:279526:279561	920877	1	True				
ANR	921473	CallExpression	"PUT ( reverse_count , 0 , fixed_length )"		920877	0					
ANR	921474	Callee	PUT		920877	0					
ANR	921475	Identifier	PUT		920877	0					
ANR	921476	ArgumentList	reverse_count		920877	1					
ANR	921477	Argument	reverse_count		920877	0					
ANR	921478	Identifier	reverse_count		920877	0					
ANR	921479	Argument	0		920877	1					
ANR	921480	PrimaryExpression	0		920877	0					
ANR	921481	Argument	fixed_length		920877	2					
ANR	921482	Identifier	fixed_length		920877	0					
ANR	921483	IfStatement	if ( * ptr != CHAR_VERTICAL_LINE )		920877	5					
ANR	921484	Condition	* ptr != CHAR_VERTICAL_LINE	8455:6:280053:280078	920877	0	True				
ANR	921485	EqualityExpression	* ptr != CHAR_VERTICAL_LINE		920877	0		!=			
ANR	921486	UnaryOperationExpression	* ptr		920877	0					
ANR	921487	UnaryOperator	*		920877	0					
ANR	921488	Identifier	ptr		920877	1					
ANR	921489	Identifier	CHAR_VERTICAL_LINE		920877	1					
ANR	921490	CompoundStatement		208:4:6957:6957	920877	1					
ANR	921491	IfStatement	if ( lengthptr == NULL )		920877	0					
ANR	921492	Condition	lengthptr == NULL	8457:8:280095:280111	920877	0	True				
ANR	921493	EqualityExpression	lengthptr == NULL		920877	0		==			
ANR	921494	Identifier	lengthptr		920877	0					
ANR	921495	Identifier	NULL		920877	1					
ANR	921496	CompoundStatement		211:6:7000:7045	920877	1					
ANR	921497	IdentifierDeclStatement	int branch_length = ( int ) ( code - last_branch ) ;	8459:6:280128:280173	920877	0	True				
ANR	921498	IdentifierDecl	branch_length = ( int ) ( code - last_branch )		920877	0					
ANR	921499	IdentifierDeclType	int		920877	0					
ANR	921500	Identifier	branch_length		920877	1					
ANR	921501	AssignmentExpression	branch_length = ( int ) ( code - last_branch )		920877	2		=			
ANR	921502	Identifier	branch_length		920877	0					
ANR	921503	CastExpression	( int ) ( code - last_branch )		920877	1					
ANR	921504	CastTarget	int		920877	0					
ANR	921505	AdditiveExpression	code - last_branch		920877	1		-			
ANR	921506	Identifier	code		920877	0					
ANR	921507	Identifier	last_branch		920877	1					
ANR	921508	DoStatement	do		920877	1					
ANR	921509	CompoundStatement		214:8:7074:7111	920877	0					
ANR	921510	IdentifierDeclStatement	"int prev_length = GET ( last_branch , 1 ) ;"	8462:8:280202:280239	920877	0	True				
ANR	921511	IdentifierDecl	"prev_length = GET ( last_branch , 1 )"		920877	0					
ANR	921512	IdentifierDeclType	int		920877	0					
ANR	921513	Identifier	prev_length		920877	1					
ANR	921514	AssignmentExpression	"prev_length = GET ( last_branch , 1 )"		920877	2		=			
ANR	921515	Identifier	prev_length		920877	0					
ANR	921516	CallExpression	"GET ( last_branch , 1 )"		920877	1					
ANR	921517	Callee	GET		920877	0					
ANR	921518	Identifier	GET		920877	0					
ANR	921519	ArgumentList	last_branch		920877	1					
ANR	921520	Argument	last_branch		920877	0					
ANR	921521	Identifier	last_branch		920877	0					
ANR	921522	Argument	1		920877	1					
ANR	921523	PrimaryExpression	1		920877	0					
ANR	921524	ExpressionStatement	"PUT ( last_branch , 1 , branch_length )"	8463:8:280249:280283	920877	1	True				
ANR	921525	CallExpression	"PUT ( last_branch , 1 , branch_length )"		920877	0					
ANR	921526	Callee	PUT		920877	0					
ANR	921527	Identifier	PUT		920877	0					
ANR	921528	ArgumentList	last_branch		920877	1					
ANR	921529	Argument	last_branch		920877	0					
ANR	921530	Identifier	last_branch		920877	0					
ANR	921531	Argument	1		920877	1					
ANR	921532	PrimaryExpression	1		920877	0					
ANR	921533	Argument	branch_length		920877	2					
ANR	921534	Identifier	branch_length		920877	0					
ANR	921535	ExpressionStatement	branch_length = prev_length	8464:8:280293:280320	920877	2	True				
ANR	921536	AssignmentExpression	branch_length = prev_length		920877	0		=			
ANR	921537	Identifier	branch_length		920877	0					
ANR	921538	Identifier	prev_length		920877	1					
ANR	921539	ExpressionStatement	last_branch -= branch_length	8465:8:280330:280358	920877	3	True				
ANR	921540	AssignmentExpression	last_branch -= branch_length		920877	0		-=			
ANR	921541	Identifier	last_branch		920877	0					
ANR	921542	Identifier	branch_length		920877	1					
ANR	921543	Condition	branch_length > 0	8467:13:280383:280399	920877	1	True				
ANR	921544	RelationalExpression	branch_length > 0		920877	0		>			
ANR	921545	Identifier	branch_length		920877	0					
ANR	921546	PrimaryExpression	0		920877	1					
ANR	921547	ExpressionStatement	* code = OP_KET	8472:4:280443:280457	920877	1	True				
ANR	921548	AssignmentExpression	* code = OP_KET		920877	0		=			
ANR	921549	UnaryOperationExpression	* code		920877	0					
ANR	921550	UnaryOperator	*		920877	0					
ANR	921551	Identifier	code		920877	1					
ANR	921552	Identifier	OP_KET		920877	1					
ANR	921553	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"	8473:4:280463:280504	920877	2	True				
ANR	921554	CallExpression	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"		920877	0					
ANR	921555	Callee	PUT		920877	0					
ANR	921556	Identifier	PUT		920877	0					
ANR	921557	ArgumentList	code		920877	1					
ANR	921558	Argument	code		920877	0					
ANR	921559	Identifier	code		920877	0					
ANR	921560	Argument	1		920877	1					
ANR	921561	PrimaryExpression	1		920877	0					
ANR	921562	Argument	( int ) ( code - start_bracket )		920877	2					
ANR	921563	CastExpression	( int ) ( code - start_bracket )		920877	0					
ANR	921564	CastTarget	int		920877	0					
ANR	921565	AdditiveExpression	code - start_bracket		920877	1		-			
ANR	921566	Identifier	code		920877	0					
ANR	921567	Identifier	start_bracket		920877	1					
ANR	921568	ExpressionStatement	code += 1 + LINK_SIZE	8474:4:280510:280531	920877	3	True				
ANR	921569	AssignmentExpression	code += 1 + LINK_SIZE		920877	0		+=			
ANR	921570	Identifier	code		920877	0					
ANR	921571	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921572	PrimaryExpression	1		920877	0					
ANR	921573	Identifier	LINK_SIZE		920877	1					
ANR	921574	IfStatement	if ( capnumber > 0 )		920877	4					
ANR	921575	Condition	capnumber > 0	8481:8:280849:280861	920877	0	True				
ANR	921576	RelationalExpression	capnumber > 0		920877	0		>			
ANR	921577	Identifier	capnumber		920877	0					
ANR	921578	PrimaryExpression	0		920877	1					
ANR	921579	CompoundStatement		234:6:7742:7742	920877	1					
ANR	921580	IfStatement	if ( cd -> open_caps -> flag )		920877	0					
ANR	921581	Condition	cd -> open_caps -> flag	8483:10:280882:280900	920877	0	True				
ANR	921582	PtrMemberAccess	cd -> open_caps -> flag		920877	0					
ANR	921583	PtrMemberAccess	cd -> open_caps		920877	0					
ANR	921584	Identifier	cd		920877	0					
ANR	921585	Identifier	open_caps		920877	1					
ANR	921586	Identifier	flag		920877	1					
ANR	921587	CompoundStatement		236:8:7783:7783	920877	1					
ANR	921588	ExpressionStatement	* code = OP_END	8485:8:280921:280935	920877	0	True				
ANR	921589	AssignmentExpression	* code = OP_END		920877	0		=			
ANR	921590	UnaryOperationExpression	* code		920877	0					
ANR	921591	UnaryOperator	*		920877	0					
ANR	921592	Identifier	code		920877	1					
ANR	921593	Identifier	OP_END		920877	1					
ANR	921594	ExpressionStatement	"adjust_recurse ( start_bracket , 1 + LINK_SIZE , ( options & PCRE_UTF8 ) != 0 , cd , save_hwm_offset )"	8486:8:280945:281048	920877	1	True				
ANR	921595	CallExpression	"adjust_recurse ( start_bracket , 1 + LINK_SIZE , ( options & PCRE_UTF8 ) != 0 , cd , save_hwm_offset )"		920877	0					
ANR	921596	Callee	adjust_recurse		920877	0					
ANR	921597	Identifier	adjust_recurse		920877	0					
ANR	921598	ArgumentList	start_bracket		920877	1					
ANR	921599	Argument	start_bracket		920877	0					
ANR	921600	Identifier	start_bracket		920877	0					
ANR	921601	Argument	1 + LINK_SIZE		920877	1					
ANR	921602	AdditiveExpression	1 + LINK_SIZE		920877	0		+			
ANR	921603	PrimaryExpression	1		920877	0					
ANR	921604	Identifier	LINK_SIZE		920877	1					
ANR	921605	Argument	( options & PCRE_UTF8 ) != 0		920877	2					
ANR	921606	EqualityExpression	( options & PCRE_UTF8 ) != 0		920877	0		!=			
ANR	921607	BitAndExpression	options & PCRE_UTF8		920877	0		&			
ANR	921608	Identifier	options		920877	0					
ANR	921609	Identifier	PCRE_UTF8		920877	1					
ANR	921610	PrimaryExpression	0		920877	1					
ANR	921611	Argument	cd		920877	3					
ANR	921612	Identifier	cd		920877	0					
ANR	921613	Argument	save_hwm_offset		920877	4					
ANR	921614	Identifier	save_hwm_offset		920877	0					
ANR	921615	ExpressionStatement	"memmove ( start_bracket + 1 + LINK_SIZE , start_bracket , IN_UCHARS ( code - start_bracket ) )"	8488:8:281058:281154	920877	2	True				
ANR	921616	CallExpression	"memmove ( start_bracket + 1 + LINK_SIZE , start_bracket , IN_UCHARS ( code - start_bracket ) )"		920877	0					
ANR	921617	Callee	memmove		920877	0					
ANR	921618	Identifier	memmove		920877	0					
ANR	921619	ArgumentList	start_bracket + 1 + LINK_SIZE		920877	1					
ANR	921620	Argument	start_bracket + 1 + LINK_SIZE		920877	0					
ANR	921621	AdditiveExpression	start_bracket + 1 + LINK_SIZE		920877	0		+			
ANR	921622	Identifier	start_bracket		920877	0					
ANR	921623	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921624	PrimaryExpression	1		920877	0					
ANR	921625	Identifier	LINK_SIZE		920877	1					
ANR	921626	Argument	start_bracket		920877	1					
ANR	921627	Identifier	start_bracket		920877	0					
ANR	921628	Argument	IN_UCHARS ( code - start_bracket )		920877	2					
ANR	921629	CallExpression	IN_UCHARS ( code - start_bracket )		920877	0					
ANR	921630	Callee	IN_UCHARS		920877	0					
ANR	921631	Identifier	IN_UCHARS		920877	0					
ANR	921632	ArgumentList	code - start_bracket		920877	1					
ANR	921633	Argument	code - start_bracket		920877	0					
ANR	921634	AdditiveExpression	code - start_bracket		920877	0		-			
ANR	921635	Identifier	code		920877	0					
ANR	921636	Identifier	start_bracket		920877	1					
ANR	921637	ExpressionStatement	* start_bracket = OP_ONCE	8490:8:281164:281188	920877	3	True				
ANR	921638	AssignmentExpression	* start_bracket = OP_ONCE		920877	0		=			
ANR	921639	UnaryOperationExpression	* start_bracket		920877	0					
ANR	921640	UnaryOperator	*		920877	0					
ANR	921641	Identifier	start_bracket		920877	1					
ANR	921642	Identifier	OP_ONCE		920877	1					
ANR	921643	ExpressionStatement	code += 1 + LINK_SIZE	8491:8:281198:281219	920877	4	True				
ANR	921644	AssignmentExpression	code += 1 + LINK_SIZE		920877	0		+=			
ANR	921645	Identifier	code		920877	0					
ANR	921646	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921647	PrimaryExpression	1		920877	0					
ANR	921648	Identifier	LINK_SIZE		920877	1					
ANR	921649	ExpressionStatement	"PUT ( start_bracket , 1 , ( int ) ( code - start_bracket ) )"	8492:8:281229:281279	920877	5	True				
ANR	921650	CallExpression	"PUT ( start_bracket , 1 , ( int ) ( code - start_bracket ) )"		920877	0					
ANR	921651	Callee	PUT		920877	0					
ANR	921652	Identifier	PUT		920877	0					
ANR	921653	ArgumentList	start_bracket		920877	1					
ANR	921654	Argument	start_bracket		920877	0					
ANR	921655	Identifier	start_bracket		920877	0					
ANR	921656	Argument	1		920877	1					
ANR	921657	PrimaryExpression	1		920877	0					
ANR	921658	Argument	( int ) ( code - start_bracket )		920877	2					
ANR	921659	CastExpression	( int ) ( code - start_bracket )		920877	0					
ANR	921660	CastTarget	int		920877	0					
ANR	921661	AdditiveExpression	code - start_bracket		920877	1		-			
ANR	921662	Identifier	code		920877	0					
ANR	921663	Identifier	start_bracket		920877	1					
ANR	921664	ExpressionStatement	* code = OP_KET	8493:8:281289:281303	920877	6	True				
ANR	921665	AssignmentExpression	* code = OP_KET		920877	0		=			
ANR	921666	UnaryOperationExpression	* code		920877	0					
ANR	921667	UnaryOperator	*		920877	0					
ANR	921668	Identifier	code		920877	1					
ANR	921669	Identifier	OP_KET		920877	1					
ANR	921670	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"	8494:8:281313:281354	920877	7	True				
ANR	921671	CallExpression	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"		920877	0					
ANR	921672	Callee	PUT		920877	0					
ANR	921673	Identifier	PUT		920877	0					
ANR	921674	ArgumentList	code		920877	1					
ANR	921675	Argument	code		920877	0					
ANR	921676	Identifier	code		920877	0					
ANR	921677	Argument	1		920877	1					
ANR	921678	PrimaryExpression	1		920877	0					
ANR	921679	Argument	( int ) ( code - start_bracket )		920877	2					
ANR	921680	CastExpression	( int ) ( code - start_bracket )		920877	0					
ANR	921681	CastTarget	int		920877	0					
ANR	921682	AdditiveExpression	code - start_bracket		920877	1		-			
ANR	921683	Identifier	code		920877	0					
ANR	921684	Identifier	start_bracket		920877	1					
ANR	921685	ExpressionStatement	code += 1 + LINK_SIZE	8495:8:281364:281385	920877	8	True				
ANR	921686	AssignmentExpression	code += 1 + LINK_SIZE		920877	0		+=			
ANR	921687	Identifier	code		920877	0					
ANR	921688	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921689	PrimaryExpression	1		920877	0					
ANR	921690	Identifier	LINK_SIZE		920877	1					
ANR	921691	ExpressionStatement	length += 2 + 2 * LINK_SIZE	8496:8:281395:281420	920877	9	True				
ANR	921692	AssignmentExpression	length += 2 + 2 * LINK_SIZE		920877	0		+=			
ANR	921693	Identifier	length		920877	0					
ANR	921694	AdditiveExpression	2 + 2 * LINK_SIZE		920877	1		+			
ANR	921695	PrimaryExpression	2		920877	0					
ANR	921696	MultiplicativeExpression	2 * LINK_SIZE		920877	1		*			
ANR	921697	PrimaryExpression	2		920877	0					
ANR	921698	Identifier	LINK_SIZE		920877	1					
ANR	921699	ExpressionStatement	cd -> open_caps = cd -> open_caps -> next	8498:6:281438:281473	920877	1	True				
ANR	921700	AssignmentExpression	cd -> open_caps = cd -> open_caps -> next		920877	0		=			
ANR	921701	PtrMemberAccess	cd -> open_caps		920877	0					
ANR	921702	Identifier	cd		920877	0					
ANR	921703	Identifier	open_caps		920877	1					
ANR	921704	PtrMemberAccess	cd -> open_caps -> next		920877	1					
ANR	921705	PtrMemberAccess	cd -> open_caps		920877	0					
ANR	921706	Identifier	cd		920877	0					
ANR	921707	Identifier	open_caps		920877	1					
ANR	921708	Identifier	next		920877	1					
ANR	921709	ExpressionStatement	cd -> bracount = max_bracount	8503:4:281562:281589	920877	5	True				
ANR	921710	AssignmentExpression	cd -> bracount = max_bracount		920877	0		=			
ANR	921711	PtrMemberAccess	cd -> bracount		920877	0					
ANR	921712	Identifier	cd		920877	0					
ANR	921713	Identifier	bracount		920877	1					
ANR	921714	Identifier	max_bracount		920877	1					
ANR	921715	ExpressionStatement	* codeptr = code	8507:4:281631:281646	920877	6	True				
ANR	921716	AssignmentExpression	* codeptr = code		920877	0		=			
ANR	921717	UnaryOperationExpression	* codeptr		920877	0					
ANR	921718	UnaryOperator	*		920877	0					
ANR	921719	Identifier	codeptr		920877	1					
ANR	921720	Identifier	code		920877	1					
ANR	921721	ExpressionStatement	* ptrptr = ptr	8508:4:281652:281665	920877	7	True				
ANR	921722	AssignmentExpression	* ptrptr = ptr		920877	0		=			
ANR	921723	UnaryOperationExpression	* ptrptr		920877	0					
ANR	921724	UnaryOperator	*		920877	0					
ANR	921725	Identifier	ptrptr		920877	1					
ANR	921726	Identifier	ptr		920877	1					
ANR	921727	ExpressionStatement	* firstcharptr = firstchar	8509:4:281671:281696	920877	8	True				
ANR	921728	AssignmentExpression	* firstcharptr = firstchar		920877	0		=			
ANR	921729	UnaryOperationExpression	* firstcharptr		920877	0					
ANR	921730	UnaryOperator	*		920877	0					
ANR	921731	Identifier	firstcharptr		920877	1					
ANR	921732	Identifier	firstchar		920877	1					
ANR	921733	ExpressionStatement	* firstcharflagsptr = firstcharflags	8510:4:281702:281737	920877	9	True				
ANR	921734	AssignmentExpression	* firstcharflagsptr = firstcharflags		920877	0		=			
ANR	921735	UnaryOperationExpression	* firstcharflagsptr		920877	0					
ANR	921736	UnaryOperator	*		920877	0					
ANR	921737	Identifier	firstcharflagsptr		920877	1					
ANR	921738	Identifier	firstcharflags		920877	1					
ANR	921739	ExpressionStatement	* reqcharptr = reqchar	8511:4:281743:281764	920877	10	True				
ANR	921740	AssignmentExpression	* reqcharptr = reqchar		920877	0		=			
ANR	921741	UnaryOperationExpression	* reqcharptr		920877	0					
ANR	921742	UnaryOperator	*		920877	0					
ANR	921743	Identifier	reqcharptr		920877	1					
ANR	921744	Identifier	reqchar		920877	1					
ANR	921745	ExpressionStatement	* reqcharflagsptr = reqcharflags	8512:4:281770:281801	920877	11	True				
ANR	921746	AssignmentExpression	* reqcharflagsptr = reqcharflags		920877	0		=			
ANR	921747	UnaryOperationExpression	* reqcharflagsptr		920877	0					
ANR	921748	UnaryOperator	*		920877	0					
ANR	921749	Identifier	reqcharflagsptr		920877	1					
ANR	921750	Identifier	reqcharflags		920877	1					
ANR	921751	IfStatement	if ( lengthptr != NULL )		920877	12					
ANR	921752	Condition	lengthptr != NULL	8513:8:281811:281827	920877	0	True				
ANR	921753	EqualityExpression	lengthptr != NULL		920877	0		!=			
ANR	921754	Identifier	lengthptr		920877	0					
ANR	921755	Identifier	NULL		920877	1					
ANR	921756	CompoundStatement		266:6:8708:8708	920877	1					
ANR	921757	IfStatement	if ( OFLOW_MAX - * lengthptr < length )		920877	0					
ANR	921758	Condition	OFLOW_MAX - * lengthptr < length	8515:10:281848:281878	920877	0	True				
ANR	921759	RelationalExpression	OFLOW_MAX - * lengthptr < length		920877	0		<			
ANR	921760	AdditiveExpression	OFLOW_MAX - * lengthptr		920877	0		-			
ANR	921761	Identifier	OFLOW_MAX		920877	0					
ANR	921762	UnaryOperationExpression	* lengthptr		920877	1					
ANR	921763	UnaryOperator	*		920877	0					
ANR	921764	Identifier	lengthptr		920877	1					
ANR	921765	Identifier	length		920877	1					
ANR	921766	CompoundStatement		268:8:8761:8761	920877	1					
ANR	921767	ExpressionStatement	* errorcodeptr = ERR20	8517:8:281899:281920	920877	0	True				
ANR	921768	AssignmentExpression	* errorcodeptr = ERR20		920877	0		=			
ANR	921769	UnaryOperationExpression	* errorcodeptr		920877	0					
ANR	921770	UnaryOperator	*		920877	0					
ANR	921771	Identifier	errorcodeptr		920877	1					
ANR	921772	Identifier	ERR20		920877	1					
ANR	921773	ReturnStatement	return FALSE ;	8518:8:281930:281942	920877	1	True				
ANR	921774	Identifier	FALSE		920877	0					
ANR	921775	ExpressionStatement	* lengthptr += length	8520:6:281960:281980	920877	1	True				
ANR	921776	AssignmentExpression	* lengthptr += length		920877	0		+=			
ANR	921777	UnaryOperationExpression	* lengthptr		920877	0					
ANR	921778	UnaryOperator	*		920877	0					
ANR	921779	Identifier	lengthptr		920877	1					
ANR	921780	Identifier	length		920877	1					
ANR	921781	ReturnStatement	return TRUE ;	8522:4:281994:282005	920877	13	True				
ANR	921782	Identifier	TRUE		920877	0					
ANR	921783	IfStatement	if ( lengthptr != NULL )		920877	6					
ANR	921784	Condition	lengthptr != NULL	8534:6:282526:282542	920877	0	True				
ANR	921785	EqualityExpression	lengthptr != NULL		920877	0		!=			
ANR	921786	Identifier	lengthptr		920877	0					
ANR	921787	Identifier	NULL		920877	1					
ANR	921788	CompoundStatement		287:4:9421:9421	920877	1					
ANR	921789	ExpressionStatement	code = * codeptr + 1 + LINK_SIZE + skipbytes	8536:4:282555:282598	920877	0	True				
ANR	921790	AssignmentExpression	code = * codeptr + 1 + LINK_SIZE + skipbytes		920877	0		=			
ANR	921791	Identifier	code		920877	0					
ANR	921792	AdditiveExpression	* codeptr + 1 + LINK_SIZE + skipbytes		920877	1		+			
ANR	921793	UnaryOperationExpression	* codeptr		920877	0					
ANR	921794	UnaryOperator	*		920877	0					
ANR	921795	Identifier	codeptr		920877	1					
ANR	921796	AdditiveExpression	1 + LINK_SIZE + skipbytes		920877	1		+			
ANR	921797	PrimaryExpression	1		920877	0					
ANR	921798	AdditiveExpression	LINK_SIZE + skipbytes		920877	1		+			
ANR	921799	Identifier	LINK_SIZE		920877	0					
ANR	921800	Identifier	skipbytes		920877	1					
ANR	921801	ExpressionStatement	length += 1 + LINK_SIZE	8537:4:282604:282627	920877	1	True				
ANR	921802	AssignmentExpression	length += 1 + LINK_SIZE		920877	0		+=			
ANR	921803	Identifier	length		920877	0					
ANR	921804	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921805	PrimaryExpression	1		920877	0					
ANR	921806	Identifier	LINK_SIZE		920877	1					
ANR	921807	ElseStatement	else		920877	0					
ANR	921808	CompoundStatement		292:4:9518:9518	920877	0					
ANR	921809	ExpressionStatement	* code = OP_ALT	8541:4:282652:282666	920877	0	True				
ANR	921810	AssignmentExpression	* code = OP_ALT		920877	0		=			
ANR	921811	UnaryOperationExpression	* code		920877	0					
ANR	921812	UnaryOperator	*		920877	0					
ANR	921813	Identifier	code		920877	1					
ANR	921814	Identifier	OP_ALT		920877	1					
ANR	921815	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - last_branch ) )"	8542:4:282672:282711	920877	1	True				
ANR	921816	CallExpression	"PUT ( code , 1 , ( int ) ( code - last_branch ) )"		920877	0					
ANR	921817	Callee	PUT		920877	0					
ANR	921818	Identifier	PUT		920877	0					
ANR	921819	ArgumentList	code		920877	1					
ANR	921820	Argument	code		920877	0					
ANR	921821	Identifier	code		920877	0					
ANR	921822	Argument	1		920877	1					
ANR	921823	PrimaryExpression	1		920877	0					
ANR	921824	Argument	( int ) ( code - last_branch )		920877	2					
ANR	921825	CastExpression	( int ) ( code - last_branch )		920877	0					
ANR	921826	CastTarget	int		920877	0					
ANR	921827	AdditiveExpression	code - last_branch		920877	1		-			
ANR	921828	Identifier	code		920877	0					
ANR	921829	Identifier	last_branch		920877	1					
ANR	921830	ExpressionStatement	bc . current_branch = last_branch = code	8543:4:282717:282755	920877	2	True				
ANR	921831	AssignmentExpression	bc . current_branch = last_branch = code		920877	0		=			
ANR	921832	MemberAccess	bc . current_branch		920877	0					
ANR	921833	Identifier	bc		920877	0					
ANR	921834	Identifier	current_branch		920877	1					
ANR	921835	AssignmentExpression	last_branch = code		920877	1		=			
ANR	921836	Identifier	last_branch		920877	0					
ANR	921837	Identifier	code		920877	1					
ANR	921838	ExpressionStatement	code += 1 + LINK_SIZE	8544:4:282761:282782	920877	3	True				
ANR	921839	AssignmentExpression	code += 1 + LINK_SIZE		920877	0		+=			
ANR	921840	Identifier	code		920877	0					
ANR	921841	AdditiveExpression	1 + LINK_SIZE		920877	1		+			
ANR	921842	PrimaryExpression	1		920877	0					
ANR	921843	Identifier	LINK_SIZE		920877	1					
ANR	921844	ExpressionStatement	ptr ++	8547:2:282793:282798	920877	7	True				
ANR	921845	PostIncDecOperationExpression	ptr ++		920877	0					
ANR	921846	Identifier	ptr		920877	0					
ANR	921847	IncDec	++		920877	1					
ANR	921848	ReturnType	static BOOL		920877	1					
ANR	921849	Identifier	compile_regex		920877	2					
ANR	921850	ParameterList	"int options , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , BOOL lookbehind , BOOL reset_bracount , int skipbytes , int cond_depth , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , compile_data * cd , int * lengthptr"		920877	3					
ANR	921851	Parameter	int options	8243:14:272800:272810	920877	0	True				
ANR	921852	ParameterType	int		920877	0					
ANR	921853	Identifier	options		920877	1					
ANR	921854	Parameter	pcre_uchar * * codeptr	8243:27:272813:272832	920877	1	True				
ANR	921855	ParameterType	pcre_uchar * *		920877	0					
ANR	921856	Identifier	codeptr		920877	1					
ANR	921857	Parameter	const pcre_uchar * * ptrptr	8243:49:272835:272859	920877	2	True				
ANR	921858	ParameterType	const pcre_uchar * *		920877	0					
ANR	921859	Identifier	ptrptr		920877	1					
ANR	921860	Parameter	int * errorcodeptr	8244:2:272864:272880	920877	3	True				
ANR	921861	ParameterType	int *		920877	0					
ANR	921862	Identifier	errorcodeptr		920877	1					
ANR	921863	Parameter	BOOL lookbehind	8244:21:272883:272897	920877	4	True				
ANR	921864	ParameterType	BOOL		920877	0					
ANR	921865	Identifier	lookbehind		920877	1					
ANR	921866	Parameter	BOOL reset_bracount	8244:38:272900:272918	920877	5	True				
ANR	921867	ParameterType	BOOL		920877	0					
ANR	921868	Identifier	reset_bracount		920877	1					
ANR	921869	Parameter	int skipbytes	8244:59:272921:272933	920877	6	True				
ANR	921870	ParameterType	int		920877	0					
ANR	921871	Identifier	skipbytes		920877	1					
ANR	921872	Parameter	int cond_depth	8245:2:272938:272951	920877	7	True				
ANR	921873	ParameterType	int		920877	0					
ANR	921874	Identifier	cond_depth		920877	1					
ANR	921875	Parameter	pcre_uint32 * firstcharptr	8246:2:272956:272980	920877	8	True				
ANR	921876	ParameterType	pcre_uint32 *		920877	0					
ANR	921877	Identifier	firstcharptr		920877	1					
ANR	921878	Parameter	pcre_int32 * firstcharflagsptr	8246:29:272983:273011	920877	9	True				
ANR	921879	ParameterType	pcre_int32 *		920877	0					
ANR	921880	Identifier	firstcharflagsptr		920877	1					
ANR	921881	Parameter	pcre_uint32 * reqcharptr	8247:2:273016:273038	920877	10	True				
ANR	921882	ParameterType	pcre_uint32 *		920877	0					
ANR	921883	Identifier	reqcharptr		920877	1					
ANR	921884	Parameter	pcre_int32 * reqcharflagsptr	8247:27:273041:273067	920877	11	True				
ANR	921885	ParameterType	pcre_int32 *		920877	0					
ANR	921886	Identifier	reqcharflagsptr		920877	1					
ANR	921887	Parameter	branch_chain * bcptr	8248:2:273072:273090	920877	12	True				
ANR	921888	ParameterType	branch_chain *		920877	0					
ANR	921889	Identifier	bcptr		920877	1					
ANR	921890	Parameter	compile_data * cd	8248:23:273093:273108	920877	13	True				
ANR	921891	ParameterType	compile_data *		920877	0					
ANR	921892	Identifier	cd		920877	1					
ANR	921893	Parameter	int * lengthptr	8248:41:273111:273124	920877	14	True				
ANR	921894	ParameterType	int *		920877	0					
ANR	921895	Identifier	lengthptr		920877	1					
ANR	921896	CFGEntryNode	ENTRY		920877		True				
ANR	921897	CFGExitNode	EXIT		920877		True				
ANR	921898	InfiniteForNode	true		920877		True				
ANR	921899	Symbol	* cd		920877						
ANR	921900	Symbol	* firstcharflagsptr		920877						
ANR	921901	Symbol	branchfirstcharflags		920877						
ANR	921902	Symbol	cd -> check_lookbehind		920877						
ANR	921903	Symbol	capitem		920877						
ANR	921904	Symbol	stack_guard		920877						
ANR	921905	Symbol	cd -> max_lookbehind		920877						
ANR	921906	Symbol	capitem . next		920877						
ANR	921907	Symbol	compile_branch		920877						
ANR	921908	Symbol	options		920877						
ANR	921909	Symbol	lookbehind		920877						
ANR	921910	Symbol	max_bracount		920877						
ANR	921911	Symbol	capitem . number		920877						
ANR	921912	Symbol	PUBL		920877						
ANR	921913	Symbol	bc . outer		920877						
ANR	921914	Symbol	ERR70		920877						
ANR	921915	Symbol	LINK_SIZE		920877						
ANR	921916	Symbol	firstcharptr		920877						
ANR	921917	Symbol	GET		920877						
ANR	921918	Symbol	CHAR_VERTICAL_LINE		920877						
ANR	921919	Symbol	OP_END		920877						
ANR	921920	Symbol	capnumber		920877						
ANR	921921	Symbol	& branchfirstcharflags		920877						
ANR	921922	Symbol	bc		920877						
ANR	921923	Symbol	cd -> open_caps -> next		920877						
ANR	921924	Symbol	OP_ALT		920877						
ANR	921925	Symbol	skipbytes		920877						
ANR	921926	Symbol	* reqcharflagsptr		920877						
ANR	921927	Symbol	orig_bracount		920877						
ANR	921928	Symbol	& branchreqcharflags		920877						
ANR	921929	Symbol	reqcharflags		920877						
ANR	921930	Symbol	reqcharptr		920877						
ANR	921931	Symbol	branchfirstchar		920877						
ANR	921932	Symbol	last_branch		920877						
ANR	921933	Symbol	cd		920877						
ANR	921934	Symbol	& length		920877						
ANR	921935	Symbol	fixed_length		920877						
ANR	921936	Symbol	& branchreqchar		920877						
ANR	921937	Symbol	* start_bracket		920877						
ANR	921938	Symbol	* codeptr		920877						
ANR	921939	Symbol	& bc		920877						
ANR	921940	Symbol	firstcharflagsptr		920877						
ANR	921941	Symbol	REQ_UNSET		920877						
ANR	921942	Symbol	errorcodeptr		920877						
ANR	921943	Symbol	& code		920877						
ANR	921944	Symbol	& options		920877						
ANR	921945	Symbol	* errorcodeptr		920877						
ANR	921946	Symbol	cd -> bracount		920877						
ANR	921947	Symbol	prev_length		920877						
ANR	921948	Symbol	reverse_count		920877						
ANR	921949	Symbol	find_fixedlength		920877						
ANR	921950	Symbol	* lengthptr		920877						
ANR	921951	Symbol	firstcharflags		920877						
ANR	921952	Symbol	OP_CBRA		920877						
ANR	921953	Symbol	IN_UCHARS		920877						
ANR	921954	Symbol	OP_REVERSE		920877						
ANR	921955	Symbol	save_hwm_offset		920877						
ANR	921956	Symbol	* cd -> open_caps		920877						
ANR	921957	Symbol	* ptr		920877						
ANR	921958	Symbol	* ptrptr		920877						
ANR	921959	Symbol	cd -> hwm		920877						
ANR	921960	Symbol	ERR36		920877						
ANR	921961	Symbol	GET2		920877						
ANR	921962	Symbol	* last_branch		920877						
ANR	921963	Symbol	reset_bracount		920877						
ANR	921964	Symbol	bcptr		920877						
ANR	921965	Symbol	REQ_NONE		920877						
ANR	921966	Symbol	branchreqchar		920877						
ANR	921967	Symbol	NULL		920877						
ANR	921968	Symbol	~REQ_VARY		920877						
ANR	921969	Symbol	TRUE		920877						
ANR	921970	Symbol	cd -> open_caps		920877						
ANR	921971	Symbol	lengthptr		920877						
ANR	921972	Symbol	ERR20		920877						
ANR	921973	Symbol	start_bracket		920877						
ANR	921974	Symbol	reqchar		920877						
ANR	921975	Symbol	ERR25		920877						
ANR	921976	Symbol	* code		920877						
ANR	921977	Symbol	OP_KET		920877						
ANR	921978	Symbol	* firstcharptr		920877						
ANR	921979	Symbol	& branchfirstchar		920877						
ANR	921980	Symbol	codeptr		920877						
ANR	921981	Symbol	code		920877						
ANR	921982	Symbol	cd -> open_caps -> flag		920877						
ANR	921983	Symbol	branch_length		920877						
ANR	921984	Symbol	OFLOW_MAX		920877						
ANR	921985	Symbol	reqcharflagsptr		920877						
ANR	921986	Symbol	* * cd		920877						
ANR	921987	Symbol	* reqcharptr		920877						
ANR	921988	Symbol	cd -> start_workspace		920877						
ANR	921989	Symbol	& capitem		920877						
ANR	921990	Symbol	& ptr		920877						
ANR	921991	Symbol	branchreqcharflags		920877						
ANR	921992	Symbol	length		920877						
ANR	921993	Symbol	capitem . flag		920877						
ANR	921994	Symbol	ptr		920877						
ANR	921995	Symbol	ERR85		920877						
ANR	921996	Symbol	OP_ONCE		920877						
ANR	921997	Symbol	firstchar		920877						
ANR	921998	Symbol	ptrptr		920877						
ANR	921999	Symbol	cond_depth		920877						
ANR	922000	Symbol	FALSE		920877						
ANR	922001	Symbol	PCRE_UTF8		920877						
ANR	922002	Symbol	bc . current_branch		920877						
ANR	922003	Symbol	* code ++		920877						
ANR	922004	Function	is_anchored	8596:0:284756:286510							
ANR	922005	FunctionDef	"is_anchored (register const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount)"		922004	0					
ANR	922006	CompoundStatement		8599:0:284874:286510	922004	0					
ANR	922007	DoStatement	do		922004	0					
ANR	922008	CompoundStatement		5:12:116:131	922004	0					
ANR	922009	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE ) ;"	8601:3:284884:284977	922004	0	True				
ANR	922010	IdentifierDecl	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922004	0					
ANR	922011	IdentifierDeclType	const pcre_uchar *		922004	0					
ANR	922012	Identifier	scode		922004	1					
ANR	922013	AssignmentExpression	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922004	2		=			
ANR	922014	Identifier	scode		922004	0					
ANR	922015	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922004	1					
ANR	922016	Callee	first_significant_code		922004	0					
ANR	922017	Identifier	first_significant_code		922004	0					
ANR	922018	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		922004	1					
ANR	922019	Argument	code + PRIV ( OP_lengths ) [ * code ]		922004	0					
ANR	922020	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		922004	0		+			
ANR	922021	Identifier	code		922004	0					
ANR	922022	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		922004	1					
ANR	922023	CallExpression	PRIV ( OP_lengths )		922004	0					
ANR	922024	Callee	PRIV		922004	0					
ANR	922025	Identifier	PRIV		922004	0					
ANR	922026	ArgumentList	OP_lengths		922004	1					
ANR	922027	Argument	OP_lengths		922004	0					
ANR	922028	Identifier	OP_lengths		922004	0					
ANR	922029	UnaryOperationExpression	* code		922004	1					
ANR	922030	UnaryOperator	*		922004	0					
ANR	922031	Identifier	code		922004	1					
ANR	922032	Argument	FALSE		922004	1					
ANR	922033	Identifier	FALSE		922004	0					
ANR	922034	Statement	register	8603:3:284982:284989	922004	1	True				
ANR	922035	IdentifierDeclStatement	int op = * scode ;	8603:12:284991:285006	922004	2	True				
ANR	922036	IdentifierDecl	op = * scode		922004	0					
ANR	922037	IdentifierDeclType	int		922004	0					
ANR	922038	Identifier	op		922004	1					
ANR	922039	AssignmentExpression	op = * scode		922004	2		=			
ANR	922040	Identifier	op		922004	0					
ANR	922041	UnaryOperationExpression	* scode		922004	1					
ANR	922042	UnaryOperator	*		922004	0					
ANR	922043	Identifier	scode		922004	1					
ANR	922044	IfStatement	if ( op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS )		922004	3					
ANR	922045	Condition	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS	8607:7:285049:285124	922004	0	True				
ANR	922046	OrExpression	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		922004	0		||			
ANR	922047	EqualityExpression	op == OP_BRA		922004	0		==			
ANR	922048	Identifier	op		922004	0					
ANR	922049	Identifier	OP_BRA		922004	1					
ANR	922050	OrExpression	op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		922004	1		||			
ANR	922051	EqualityExpression	op == OP_BRAPOS		922004	0		==			
ANR	922052	Identifier	op		922004	0					
ANR	922053	Identifier	OP_BRAPOS		922004	1					
ANR	922054	OrExpression	op == OP_SBRA || op == OP_SBRAPOS		922004	1		||			
ANR	922055	EqualityExpression	op == OP_SBRA		922004	0		==			
ANR	922056	Identifier	op		922004	0					
ANR	922057	Identifier	OP_SBRA		922004	1					
ANR	922058	EqualityExpression	op == OP_SBRAPOS		922004	1		==			
ANR	922059	Identifier	op		922004	0					
ANR	922060	Identifier	OP_SBRAPOS		922004	1					
ANR	922061	CompoundStatement		11:5:257:257	922004	1					
ANR	922062	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount ) )"		922004	0					
ANR	922063	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount )"	8610:9:285143:285189	922004	0	True				
ANR	922064	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount )"		922004	0					
ANR	922065	UnaryOperator	!		922004	0					
ANR	922066	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount )"		922004	1					
ANR	922067	Callee	is_anchored		922004	0					
ANR	922068	Identifier	is_anchored		922004	0					
ANR	922069	ArgumentList	scode		922004	1					
ANR	922070	Argument	scode		922004	0					
ANR	922071	Identifier	scode		922004	0					
ANR	922072	Argument	bracket_map		922004	1					
ANR	922073	Identifier	bracket_map		922004	0					
ANR	922074	Argument	cd		922004	2					
ANR	922075	Identifier	cd		922004	0					
ANR	922076	Argument	atomcount		922004	3					
ANR	922077	Identifier	atomcount		922004	0					
ANR	922078	ReturnStatement	return FALSE ;	8610:58:285192:285204	922004	1	True				
ANR	922079	Identifier	FALSE		922004	0					
ANR	922080	ElseStatement	else		922004	0					
ANR	922081	IfStatement	if ( op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS )		922004	0					
ANR	922082	Condition	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS	8615:12:285255:285339	922004	0	True				
ANR	922083	OrExpression	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		922004	0		||			
ANR	922084	EqualityExpression	op == OP_CBRA		922004	0		==			
ANR	922085	Identifier	op		922004	0					
ANR	922086	Identifier	OP_CBRA		922004	1					
ANR	922087	OrExpression	op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		922004	1		||			
ANR	922088	EqualityExpression	op == OP_CBRAPOS		922004	0		==			
ANR	922089	Identifier	op		922004	0					
ANR	922090	Identifier	OP_CBRAPOS		922004	1					
ANR	922091	OrExpression	op == OP_SCBRA || op == OP_SCBRAPOS		922004	1		||			
ANR	922092	EqualityExpression	op == OP_SCBRA		922004	0		==			
ANR	922093	Identifier	op		922004	0					
ANR	922094	Identifier	OP_SCBRA		922004	1					
ANR	922095	EqualityExpression	op == OP_SCBRAPOS		922004	1		==			
ANR	922096	Identifier	op		922004	0					
ANR	922097	Identifier	OP_SCBRAPOS		922004	1					
ANR	922098	CompoundStatement		21:5:518:570	922004	1					
ANR	922099	IdentifierDeclStatement	"int n = GET2 ( scode , 1 + LINK_SIZE ) ;"	8618:5:285354:285386	922004	0	True				
ANR	922100	IdentifierDecl	"n = GET2 ( scode , 1 + LINK_SIZE )"		922004	0					
ANR	922101	IdentifierDeclType	int		922004	0					
ANR	922102	Identifier	n		922004	1					
ANR	922103	AssignmentExpression	"n = GET2 ( scode , 1 + LINK_SIZE )"		922004	2		=			
ANR	922104	Identifier	n		922004	0					
ANR	922105	CallExpression	"GET2 ( scode , 1 + LINK_SIZE )"		922004	1					
ANR	922106	Callee	GET2		922004	0					
ANR	922107	Identifier	GET2		922004	0					
ANR	922108	ArgumentList	scode		922004	1					
ANR	922109	Argument	scode		922004	0					
ANR	922110	Identifier	scode		922004	0					
ANR	922111	Argument	1 + LINK_SIZE		922004	1					
ANR	922112	AdditiveExpression	1 + LINK_SIZE		922004	0		+			
ANR	922113	PrimaryExpression	1		922004	0					
ANR	922114	Identifier	LINK_SIZE		922004	1					
ANR	922115	IdentifierDeclStatement	int new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 ) ;	8619:5:285393:285445	922004	1	True				
ANR	922116	IdentifierDecl	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922004	0					
ANR	922117	IdentifierDeclType	int		922004	0					
ANR	922118	Identifier	new_map		922004	1					
ANR	922119	AssignmentExpression	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922004	2		=			
ANR	922120	Identifier	new_map		922004	0					
ANR	922121	InclusiveOrExpression	bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922004	1		|			
ANR	922122	Identifier	bracket_map		922004	0					
ANR	922123	ConditionalExpression	( n < 32 ) ? ( 1 << n ) : 1		922004	1					
ANR	922124	Condition	n < 32		922004	0					
ANR	922125	RelationalExpression	n < 32		922004	0		<			
ANR	922126	Identifier	n		922004	0					
ANR	922127	PrimaryExpression	32		922004	1					
ANR	922128	ShiftExpression	1 << n		922004	1		<<			
ANR	922129	PrimaryExpression	1		922004	0					
ANR	922130	Identifier	n		922004	1					
ANR	922131	PrimaryExpression	1		922004	2					
ANR	922132	IfStatement	"if ( ! is_anchored ( scode , new_map , cd , atomcount ) )"		922004	2					
ANR	922133	Condition	"! is_anchored ( scode , new_map , cd , atomcount )"	8620:9:285456:285498	922004	0	True				
ANR	922134	UnaryOperationExpression	"! is_anchored ( scode , new_map , cd , atomcount )"		922004	0					
ANR	922135	UnaryOperator	!		922004	0					
ANR	922136	CallExpression	"is_anchored ( scode , new_map , cd , atomcount )"		922004	1					
ANR	922137	Callee	is_anchored		922004	0					
ANR	922138	Identifier	is_anchored		922004	0					
ANR	922139	ArgumentList	scode		922004	1					
ANR	922140	Argument	scode		922004	0					
ANR	922141	Identifier	scode		922004	0					
ANR	922142	Argument	new_map		922004	1					
ANR	922143	Identifier	new_map		922004	0					
ANR	922144	Argument	cd		922004	2					
ANR	922145	Identifier	cd		922004	0					
ANR	922146	Argument	atomcount		922004	3					
ANR	922147	Identifier	atomcount		922004	0					
ANR	922148	ReturnStatement	return FALSE ;	8620:54:285501:285513	922004	1	True				
ANR	922149	Identifier	FALSE		922004	0					
ANR	922150	ElseStatement	else		922004	0					
ANR	922151	IfStatement	if ( op == OP_ASSERT || op == OP_COND )		922004	0					
ANR	922152	Condition	op == OP_ASSERT || op == OP_COND	8625:12:285588:285619	922004	0	True				
ANR	922153	OrExpression	op == OP_ASSERT || op == OP_COND		922004	0		||			
ANR	922154	EqualityExpression	op == OP_ASSERT		922004	0		==			
ANR	922155	Identifier	op		922004	0					
ANR	922156	Identifier	OP_ASSERT		922004	1					
ANR	922157	EqualityExpression	op == OP_COND		922004	1		==			
ANR	922158	Identifier	op		922004	0					
ANR	922159	Identifier	OP_COND		922004	1					
ANR	922160	CompoundStatement		28:5:752:752	922004	1					
ANR	922161	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount ) )"		922004	0					
ANR	922162	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount )"	8627:9:285638:285684	922004	0	True				
ANR	922163	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount )"		922004	0					
ANR	922164	UnaryOperator	!		922004	0					
ANR	922165	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount )"		922004	1					
ANR	922166	Callee	is_anchored		922004	0					
ANR	922167	Identifier	is_anchored		922004	0					
ANR	922168	ArgumentList	scode		922004	1					
ANR	922169	Argument	scode		922004	0					
ANR	922170	Identifier	scode		922004	0					
ANR	922171	Argument	bracket_map		922004	1					
ANR	922172	Identifier	bracket_map		922004	0					
ANR	922173	Argument	cd		922004	2					
ANR	922174	Identifier	cd		922004	0					
ANR	922175	Argument	atomcount		922004	3					
ANR	922176	Identifier	atomcount		922004	0					
ANR	922177	ReturnStatement	return FALSE ;	8627:58:285687:285699	922004	1	True				
ANR	922178	Identifier	FALSE		922004	0					
ANR	922179	ElseStatement	else		922004	0					
ANR	922180	IfStatement	if ( op == OP_ONCE || op == OP_ONCE_NC )		922004	0					
ANR	922181	Condition	op == OP_ONCE || op == OP_ONCE_NC	8632:12:285745:285777	922004	0	True				
ANR	922182	OrExpression	op == OP_ONCE || op == OP_ONCE_NC		922004	0		||			
ANR	922183	EqualityExpression	op == OP_ONCE		922004	0		==			
ANR	922184	Identifier	op		922004	0					
ANR	922185	Identifier	OP_ONCE		922004	1					
ANR	922186	EqualityExpression	op == OP_ONCE_NC		922004	1		==			
ANR	922187	Identifier	op		922004	0					
ANR	922188	Identifier	OP_ONCE_NC		922004	1					
ANR	922189	CompoundStatement		35:5:910:910	922004	1					
ANR	922190	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount + 1 ) )"		922004	0					
ANR	922191	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount + 1 )"	8634:9:285796:285846	922004	0	True				
ANR	922192	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount + 1 )"		922004	0					
ANR	922193	UnaryOperator	!		922004	0					
ANR	922194	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount + 1 )"		922004	1					
ANR	922195	Callee	is_anchored		922004	0					
ANR	922196	Identifier	is_anchored		922004	0					
ANR	922197	ArgumentList	scode		922004	1					
ANR	922198	Argument	scode		922004	0					
ANR	922199	Identifier	scode		922004	0					
ANR	922200	Argument	bracket_map		922004	1					
ANR	922201	Identifier	bracket_map		922004	0					
ANR	922202	Argument	cd		922004	2					
ANR	922203	Identifier	cd		922004	0					
ANR	922204	Argument	atomcount + 1		922004	3					
ANR	922205	AdditiveExpression	atomcount + 1		922004	0		+			
ANR	922206	Identifier	atomcount		922004	0					
ANR	922207	PrimaryExpression	1		922004	1					
ANR	922208	ReturnStatement	return FALSE ;	8635:7:285856:285868	922004	1	True				
ANR	922209	Identifier	FALSE		922004	0					
ANR	922210	ElseStatement	else		922004	0					
ANR	922211	IfStatement	if ( ( op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR ) )		922004	0					
ANR	922212	Condition	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR	8642:12:286056:286135	922004	0	True				
ANR	922213	OrExpression	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		922004	0		||			
ANR	922214	EqualityExpression	op == OP_TYPESTAR		922004	0		==			
ANR	922215	Identifier	op		922004	0					
ANR	922216	Identifier	OP_TYPESTAR		922004	1					
ANR	922217	OrExpression	op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		922004	1		||			
ANR	922218	EqualityExpression	op == OP_TYPEMINSTAR		922004	0		==			
ANR	922219	Identifier	op		922004	0					
ANR	922220	Identifier	OP_TYPEMINSTAR		922004	1					
ANR	922221	EqualityExpression	op == OP_TYPEPOSSTAR		922004	1		==			
ANR	922222	Identifier	op		922004	0					
ANR	922223	Identifier	OP_TYPEPOSSTAR		922004	1					
ANR	922224	CompoundStatement		46:5:1268:1268	922004	1					
ANR	922225	IfStatement	if ( scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip )		922004	0					
ANR	922226	Condition	scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip	8645:9:286154:286263	922004	0	True				
ANR	922227	OrExpression	scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		922004	0		||			
ANR	922228	EqualityExpression	scode [ 1 ] != OP_ALLANY		922004	0		!=			
ANR	922229	ArrayIndexing	scode [ 1 ]		922004	0					
ANR	922230	Identifier	scode		922004	0					
ANR	922231	PrimaryExpression	1		922004	1					
ANR	922232	Identifier	OP_ALLANY		922004	1					
ANR	922233	OrExpression	( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		922004	1		||			
ANR	922234	EqualityExpression	( bracket_map & cd -> backref_map ) != 0		922004	0		!=			
ANR	922235	BitAndExpression	bracket_map & cd -> backref_map		922004	0		&			
ANR	922236	Identifier	bracket_map		922004	0					
ANR	922237	PtrMemberAccess	cd -> backref_map		922004	1					
ANR	922238	Identifier	cd		922004	0					
ANR	922239	Identifier	backref_map		922004	1					
ANR	922240	PrimaryExpression	0		922004	1					
ANR	922241	OrExpression	atomcount > 0 || cd -> had_pruneorskip		922004	1		||			
ANR	922242	RelationalExpression	atomcount > 0		922004	0		>			
ANR	922243	Identifier	atomcount		922004	0					
ANR	922244	PrimaryExpression	0		922004	1					
ANR	922245	PtrMemberAccess	cd -> had_pruneorskip		922004	1					
ANR	922246	Identifier	cd		922004	0					
ANR	922247	Identifier	had_pruneorskip		922004	1					
ANR	922248	ReturnStatement	return FALSE ;	8647:7:286273:286285	922004	1	True				
ANR	922249	Identifier	FALSE		922004	0					
ANR	922250	ElseStatement	else		922004	0					
ANR	922251	IfStatement	if ( op != OP_SOD && op != OP_SOM && op != OP_CIRC )		922004	0					
ANR	922252	Condition	op != OP_SOD && op != OP_SOM && op != OP_CIRC	8652:12:286346:286390	922004	0	True				
ANR	922253	AndExpression	op != OP_SOD && op != OP_SOM && op != OP_CIRC		922004	0		&&			
ANR	922254	EqualityExpression	op != OP_SOD		922004	0		!=			
ANR	922255	Identifier	op		922004	0					
ANR	922256	Identifier	OP_SOD		922004	1					
ANR	922257	AndExpression	op != OP_SOM && op != OP_CIRC		922004	1		&&			
ANR	922258	EqualityExpression	op != OP_SOM		922004	0		!=			
ANR	922259	Identifier	op		922004	0					
ANR	922260	Identifier	OP_SOM		922004	1					
ANR	922261	EqualityExpression	op != OP_CIRC		922004	1		!=			
ANR	922262	Identifier	op		922004	0					
ANR	922263	Identifier	OP_CIRC		922004	1					
ANR	922264	ReturnStatement	return FALSE ;	8652:59:286393:286405	922004	1	True				
ANR	922265	Identifier	FALSE		922004	0					
ANR	922266	ExpressionStatement	"code += GET ( code , 1 )"	8654:3:286411:286431	922004	4	True				
ANR	922267	AssignmentExpression	"code += GET ( code , 1 )"		922004	0		+=			
ANR	922268	Identifier	code		922004	0					
ANR	922269	CallExpression	"GET ( code , 1 )"		922004	1					
ANR	922270	Callee	GET		922004	0					
ANR	922271	Identifier	GET		922004	0					
ANR	922272	ArgumentList	code		922004	1					
ANR	922273	Argument	code		922004	0					
ANR	922274	Identifier	code		922004	0					
ANR	922275	Argument	1		922004	1					
ANR	922276	PrimaryExpression	1		922004	0					
ANR	922277	Condition	* code == OP_ALT	8656:7:286445:286459	922004	1	True				
ANR	922278	EqualityExpression	* code == OP_ALT		922004	0		==			
ANR	922279	UnaryOperationExpression	* code		922004	0					
ANR	922280	UnaryOperator	*		922004	0					
ANR	922281	Identifier	code		922004	1					
ANR	922282	Identifier	OP_ALT		922004	1					
ANR	922283	ReturnStatement	return TRUE ;	8657:0:286497:286508	922004	1	True				
ANR	922284	Identifier	TRUE		922004	0					
ANR	922285	ReturnType	static BOOL		922004	1					
ANR	922286	Identifier	is_anchored		922004	2					
ANR	922287	ParameterList	"register const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount"		922004	3					
ANR	922288	Parameter	register const pcre_uchar * code	8597:12:284780:284810	922004	0	True				
ANR	922289	ParameterType	register const pcre_uchar *		922004	0					
ANR	922290	Identifier	code		922004	1					
ANR	922291	Parameter	unsigned int bracket_map	8597:45:284813:284836	922004	1	True				
ANR	922292	ParameterType	unsigned int		922004	0					
ANR	922293	Identifier	bracket_map		922004	1					
ANR	922294	Parameter	compile_data * cd	8598:2:284841:284856	922004	2	True				
ANR	922295	ParameterType	compile_data *		922004	0					
ANR	922296	Identifier	cd		922004	1					
ANR	922297	Parameter	int atomcount	8598:20:284859:284871	922004	3	True				
ANR	922298	ParameterType	int		922004	0					
ANR	922299	Identifier	atomcount		922004	1					
ANR	922300	CFGEntryNode	ENTRY		922004		True				
ANR	922301	CFGExitNode	EXIT		922004		True				
ANR	922302	Symbol	code		922004						
ANR	922303	Symbol	is_anchored		922004						
ANR	922304	Symbol	* cd		922004						
ANR	922305	Symbol	OP_CBRA		922004						
ANR	922306	Symbol	OP_ONCE_NC		922004						
ANR	922307	Symbol	OP_ALT		922004						
ANR	922308	Symbol	PRIV		922004						
ANR	922309	Symbol	* * code		922004						
ANR	922310	Symbol	* scode		922004						
ANR	922311	Symbol	OP_TYPEMINSTAR		922004						
ANR	922312	Symbol	first_significant_code		922004						
ANR	922313	Symbol	OP_CBRAPOS		922004						
ANR	922314	Symbol	OP_SBRAPOS		922004						
ANR	922315	Symbol	GET2		922004						
ANR	922316	Symbol	OP_TYPEPOSSTAR		922004						
ANR	922317	Symbol	OP_CIRC		922004						
ANR	922318	Symbol	OP_ALLANY		922004						
ANR	922319	Symbol	cd		922004						
ANR	922320	Symbol	op		922004						
ANR	922321	Symbol	OP_SCBRAPOS		922004						
ANR	922322	Symbol	bracket_map		922004						
ANR	922323	Symbol	scode		922004						
ANR	922324	Symbol	OP_SOD		922004						
ANR	922325	Symbol	TRUE		922004						
ANR	922326	Symbol	OP_COND		922004						
ANR	922327	Symbol	OP_ASSERT		922004						
ANR	922328	Symbol	OP_SBRA		922004						
ANR	922329	Symbol	n		922004						
ANR	922330	Symbol	atomcount		922004						
ANR	922331	Symbol	OP_BRAPOS		922004						
ANR	922332	Symbol	LINK_SIZE		922004						
ANR	922333	Symbol	OP_ONCE		922004						
ANR	922334	Symbol	* PRIV		922004						
ANR	922335	Symbol	OP_BRA		922004						
ANR	922336	Symbol	OP_SOM		922004						
ANR	922337	Symbol	cd -> had_pruneorskip		922004						
ANR	922338	Symbol	GET		922004						
ANR	922339	Symbol	OP_lengths		922004						
ANR	922340	Symbol	FALSE		922004						
ANR	922341	Symbol	OP_TYPESTAR		922004						
ANR	922342	Symbol	new_map		922004						
ANR	922343	Symbol	cd -> backref_map		922004						
ANR	922344	Symbol	* code		922004						
ANR	922345	Symbol	OP_SCBRA		922004						
ANR	922346	Function	is_startline	8686:0:287645:290630							
ANR	922347	FunctionDef	"is_startline (const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount)"		922346	0					
ANR	922348	CompoundStatement		8689:0:287755:290630	922346	0					
ANR	922349	DoStatement	do		922346	0					
ANR	922350	CompoundStatement		5:12:116:131	922346	0					
ANR	922351	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE ) ;"	8691:3:287765:287858	922346	0	True				
ANR	922352	IdentifierDecl	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922346	0					
ANR	922353	IdentifierDeclType	const pcre_uchar *		922346	0					
ANR	922354	Identifier	scode		922346	1					
ANR	922355	AssignmentExpression	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922346	2		=			
ANR	922356	Identifier	scode		922346	0					
ANR	922357	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		922346	1					
ANR	922358	Callee	first_significant_code		922346	0					
ANR	922359	Identifier	first_significant_code		922346	0					
ANR	922360	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		922346	1					
ANR	922361	Argument	code + PRIV ( OP_lengths ) [ * code ]		922346	0					
ANR	922362	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		922346	0		+			
ANR	922363	Identifier	code		922346	0					
ANR	922364	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		922346	1					
ANR	922365	CallExpression	PRIV ( OP_lengths )		922346	0					
ANR	922366	Callee	PRIV		922346	0					
ANR	922367	Identifier	PRIV		922346	0					
ANR	922368	ArgumentList	OP_lengths		922346	1					
ANR	922369	Argument	OP_lengths		922346	0					
ANR	922370	Identifier	OP_lengths		922346	0					
ANR	922371	UnaryOperationExpression	* code		922346	1					
ANR	922372	UnaryOperator	*		922346	0					
ANR	922373	Identifier	code		922346	1					
ANR	922374	Argument	FALSE		922346	1					
ANR	922375	Identifier	FALSE		922346	0					
ANR	922376	Statement	register	8693:3:287863:287870	922346	1	True				
ANR	922377	IdentifierDeclStatement	int op = * scode ;	8693:12:287872:287887	922346	2	True				
ANR	922378	IdentifierDecl	op = * scode		922346	0					
ANR	922379	IdentifierDeclType	int		922346	0					
ANR	922380	Identifier	op		922346	1					
ANR	922381	AssignmentExpression	op = * scode		922346	2		=			
ANR	922382	Identifier	op		922346	0					
ANR	922383	UnaryOperationExpression	* scode		922346	1					
ANR	922384	UnaryOperator	*		922346	0					
ANR	922385	Identifier	scode		922346	1					
ANR	922386	IfStatement	if ( op == OP_COND )		922346	3					
ANR	922387	Condition	op == OP_COND	8700:7:288179:288191	922346	0	True				
ANR	922388	EqualityExpression	op == OP_COND		922346	0		==			
ANR	922389	Identifier	op		922346	0					
ANR	922390	Identifier	OP_COND		922346	1					
ANR	922391	CompoundStatement		13:5:443:443	922346	1					
ANR	922392	ExpressionStatement	scode += 1 + LINK_SIZE	8702:5:288206:288228	922346	0	True				
ANR	922393	AssignmentExpression	scode += 1 + LINK_SIZE		922346	0		+=			
ANR	922394	Identifier	scode		922346	0					
ANR	922395	AdditiveExpression	1 + LINK_SIZE		922346	1		+			
ANR	922396	PrimaryExpression	1		922346	0					
ANR	922397	Identifier	LINK_SIZE		922346	1					
ANR	922398	IfStatement	if ( * scode == OP_CALLOUT )		922346	1					
ANR	922399	Condition	* scode == OP_CALLOUT	8703:9:288239:288258	922346	0	True				
ANR	922400	EqualityExpression	* scode == OP_CALLOUT		922346	0		==			
ANR	922401	UnaryOperationExpression	* scode		922346	0					
ANR	922402	UnaryOperator	*		922346	0					
ANR	922403	Identifier	scode		922346	1					
ANR	922404	Identifier	OP_CALLOUT		922346	1					
ANR	922405	ExpressionStatement	scode += PRIV ( OP_lengths ) [ OP_CALLOUT ]	8703:31:288261:288298	922346	1	True				
ANR	922406	AssignmentExpression	scode += PRIV ( OP_lengths ) [ OP_CALLOUT ]		922346	0		+=			
ANR	922407	Identifier	scode		922346	0					
ANR	922408	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CALLOUT ]		922346	1					
ANR	922409	CallExpression	PRIV ( OP_lengths )		922346	0					
ANR	922410	Callee	PRIV		922346	0					
ANR	922411	Identifier	PRIV		922346	0					
ANR	922412	ArgumentList	OP_lengths		922346	1					
ANR	922413	Argument	OP_lengths		922346	0					
ANR	922414	Identifier	OP_lengths		922346	0					
ANR	922415	Identifier	OP_CALLOUT		922346	1					
ANR	922416	SwitchStatement	switch ( * scode )		922346	2					
ANR	922417	Condition	* scode	8704:13:288313:288318	922346	0	True				
ANR	922418	UnaryOperationExpression	* scode		922346	0					
ANR	922419	UnaryOperator	*		922346	0					
ANR	922420	Identifier	scode		922346	1					
ANR	922421	CompoundStatement		17:7:572:572	922346	1					
ANR	922422	Label	case OP_CREF :	8706:7:288337:288349	922346	0	True				
ANR	922423	Identifier	OP_CREF		922346	0					
ANR	922424	Label	case OP_DNCREF :	8707:7:288358:288372	922346	1	True				
ANR	922425	Identifier	OP_DNCREF		922346	0					
ANR	922426	Label	case OP_RREF :	8708:7:288381:288393	922346	2	True				
ANR	922427	Identifier	OP_RREF		922346	0					
ANR	922428	Label	case OP_DNRREF :	8709:7:288402:288416	922346	3	True				
ANR	922429	Identifier	OP_DNRREF		922346	0					
ANR	922430	Label	case OP_DEF :	8710:7:288425:288436	922346	4	True				
ANR	922431	Identifier	OP_DEF		922346	0					
ANR	922432	Label	case OP_FAIL :	8711:7:288445:288457	922346	5	True				
ANR	922433	Identifier	OP_FAIL		922346	0					
ANR	922434	ReturnStatement	return FALSE ;	8712:7:288466:288478	922346	6	True				
ANR	922435	Identifier	FALSE		922346	0					
ANR	922436	Label	default :	8714:7:288488:288495	922346	7	True				
ANR	922437	Identifier	default		922346	0					
ANR	922438	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		922346	8					
ANR	922439	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8715:11:288528:288575	922346	0	True				
ANR	922440	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		922346	0					
ANR	922441	UnaryOperator	!		922346	0					
ANR	922442	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		922346	1					
ANR	922443	Callee	is_startline		922346	0					
ANR	922444	Identifier	is_startline		922346	0					
ANR	922445	ArgumentList	scode		922346	1					
ANR	922446	Argument	scode		922346	0					
ANR	922447	Identifier	scode		922346	0					
ANR	922448	Argument	bracket_map		922346	1					
ANR	922449	Identifier	bracket_map		922346	0					
ANR	922450	Argument	cd		922346	2					
ANR	922451	Identifier	cd		922346	0					
ANR	922452	Argument	atomcount		922346	3					
ANR	922453	Identifier	atomcount		922346	0					
ANR	922454	ReturnStatement	return FALSE ;	8715:61:288578:288590	922346	1	True				
ANR	922455	Identifier	FALSE		922346	0					
ANR	922456	DoStatement	do		922346	9					
ANR	922457	ExpressionStatement	"scode += GET ( scode , 1 )"	8716:10:288602:288624	922346	0	True				
ANR	922458	AssignmentExpression	"scode += GET ( scode , 1 )"		922346	0		+=			
ANR	922459	Identifier	scode		922346	0					
ANR	922460	CallExpression	"GET ( scode , 1 )"		922346	1					
ANR	922461	Callee	GET		922346	0					
ANR	922462	Identifier	GET		922346	0					
ANR	922463	ArgumentList	scode		922346	1					
ANR	922464	Argument	scode		922346	0					
ANR	922465	Identifier	scode		922346	0					
ANR	922466	Argument	1		922346	1					
ANR	922467	PrimaryExpression	1		922346	0					
ANR	922468	Condition	* scode == OP_ALT	8716:41:288633:288648	922346	1	True				
ANR	922469	EqualityExpression	* scode == OP_ALT		922346	0		==			
ANR	922470	UnaryOperationExpression	* scode		922346	0					
ANR	922471	UnaryOperator	*		922346	0					
ANR	922472	Identifier	scode		922346	1					
ANR	922473	Identifier	OP_ALT		922346	1					
ANR	922474	ExpressionStatement	scode += 1 + LINK_SIZE	8717:7:288659:288681	922346	10	True				
ANR	922475	AssignmentExpression	scode += 1 + LINK_SIZE		922346	0		+=			
ANR	922476	Identifier	scode		922346	0					
ANR	922477	AdditiveExpression	1 + LINK_SIZE		922346	1		+			
ANR	922478	PrimaryExpression	1		922346	0					
ANR	922479	Identifier	LINK_SIZE		922346	1					
ANR	922480	BreakStatement	break ;	8718:7:288690:288695	922346	11	True				
ANR	922481	ExpressionStatement	"scode = first_significant_code ( scode , FALSE )"	8720:5:288711:288755	922346	3	True				
ANR	922482	AssignmentExpression	"scode = first_significant_code ( scode , FALSE )"		922346	0		=			
ANR	922483	Identifier	scode		922346	0					
ANR	922484	CallExpression	"first_significant_code ( scode , FALSE )"		922346	1					
ANR	922485	Callee	first_significant_code		922346	0					
ANR	922486	Identifier	first_significant_code		922346	0					
ANR	922487	ArgumentList	scode		922346	1					
ANR	922488	Argument	scode		922346	0					
ANR	922489	Identifier	scode		922346	0					
ANR	922490	Argument	FALSE		922346	1					
ANR	922491	Identifier	FALSE		922346	0					
ANR	922492	ExpressionStatement	op = * scode	8721:5:288762:288773	922346	4	True				
ANR	922493	AssignmentExpression	op = * scode		922346	0		=			
ANR	922494	Identifier	op		922346	0					
ANR	922495	UnaryOperationExpression	* scode		922346	1					
ANR	922496	UnaryOperator	*		922346	0					
ANR	922497	Identifier	scode		922346	1					
ANR	922498	IfStatement	if ( op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS )		922346	4					
ANR	922499	Condition	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS	8726:7:288823:288898	922346	0	True				
ANR	922500	OrExpression	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		922346	0		||			
ANR	922501	EqualityExpression	op == OP_BRA		922346	0		==			
ANR	922502	Identifier	op		922346	0					
ANR	922503	Identifier	OP_BRA		922346	1					
ANR	922504	OrExpression	op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		922346	1		||			
ANR	922505	EqualityExpression	op == OP_BRAPOS		922346	0		==			
ANR	922506	Identifier	op		922346	0					
ANR	922507	Identifier	OP_BRAPOS		922346	1					
ANR	922508	OrExpression	op == OP_SBRA || op == OP_SBRAPOS		922346	1		||			
ANR	922509	EqualityExpression	op == OP_SBRA		922346	0		==			
ANR	922510	Identifier	op		922346	0					
ANR	922511	Identifier	OP_SBRA		922346	1					
ANR	922512	EqualityExpression	op == OP_SBRAPOS		922346	1		==			
ANR	922513	Identifier	op		922346	0					
ANR	922514	Identifier	OP_SBRAPOS		922346	1					
ANR	922515	CompoundStatement		40:5:1150:1150	922346	1					
ANR	922516	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		922346	0					
ANR	922517	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8729:9:288917:288964	922346	0	True				
ANR	922518	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		922346	0					
ANR	922519	UnaryOperator	!		922346	0					
ANR	922520	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		922346	1					
ANR	922521	Callee	is_startline		922346	0					
ANR	922522	Identifier	is_startline		922346	0					
ANR	922523	ArgumentList	scode		922346	1					
ANR	922524	Argument	scode		922346	0					
ANR	922525	Identifier	scode		922346	0					
ANR	922526	Argument	bracket_map		922346	1					
ANR	922527	Identifier	bracket_map		922346	0					
ANR	922528	Argument	cd		922346	2					
ANR	922529	Identifier	cd		922346	0					
ANR	922530	Argument	atomcount		922346	3					
ANR	922531	Identifier	atomcount		922346	0					
ANR	922532	ReturnStatement	return FALSE ;	8729:59:288967:288979	922346	1	True				
ANR	922533	Identifier	FALSE		922346	0					
ANR	922534	ElseStatement	else		922346	0					
ANR	922535	IfStatement	if ( op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS )		922346	0					
ANR	922536	Condition	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS	8734:12:289030:289114	922346	0	True				
ANR	922537	OrExpression	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		922346	0		||			
ANR	922538	EqualityExpression	op == OP_CBRA		922346	0		==			
ANR	922539	Identifier	op		922346	0					
ANR	922540	Identifier	OP_CBRA		922346	1					
ANR	922541	OrExpression	op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		922346	1		||			
ANR	922542	EqualityExpression	op == OP_CBRAPOS		922346	0		==			
ANR	922543	Identifier	op		922346	0					
ANR	922544	Identifier	OP_CBRAPOS		922346	1					
ANR	922545	OrExpression	op == OP_SCBRA || op == OP_SCBRAPOS		922346	1		||			
ANR	922546	EqualityExpression	op == OP_SCBRA		922346	0		==			
ANR	922547	Identifier	op		922346	0					
ANR	922548	Identifier	OP_SCBRA		922346	1					
ANR	922549	EqualityExpression	op == OP_SCBRAPOS		922346	1		==			
ANR	922550	Identifier	op		922346	0					
ANR	922551	Identifier	OP_SCBRAPOS		922346	1					
ANR	922552	CompoundStatement		50:5:1412:1464	922346	1					
ANR	922553	IdentifierDeclStatement	"int n = GET2 ( scode , 1 + LINK_SIZE ) ;"	8737:5:289129:289161	922346	0	True				
ANR	922554	IdentifierDecl	"n = GET2 ( scode , 1 + LINK_SIZE )"		922346	0					
ANR	922555	IdentifierDeclType	int		922346	0					
ANR	922556	Identifier	n		922346	1					
ANR	922557	AssignmentExpression	"n = GET2 ( scode , 1 + LINK_SIZE )"		922346	2		=			
ANR	922558	Identifier	n		922346	0					
ANR	922559	CallExpression	"GET2 ( scode , 1 + LINK_SIZE )"		922346	1					
ANR	922560	Callee	GET2		922346	0					
ANR	922561	Identifier	GET2		922346	0					
ANR	922562	ArgumentList	scode		922346	1					
ANR	922563	Argument	scode		922346	0					
ANR	922564	Identifier	scode		922346	0					
ANR	922565	Argument	1 + LINK_SIZE		922346	1					
ANR	922566	AdditiveExpression	1 + LINK_SIZE		922346	0		+			
ANR	922567	PrimaryExpression	1		922346	0					
ANR	922568	Identifier	LINK_SIZE		922346	1					
ANR	922569	IdentifierDeclStatement	int new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 ) ;	8738:5:289168:289220	922346	1	True				
ANR	922570	IdentifierDecl	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922346	0					
ANR	922571	IdentifierDeclType	int		922346	0					
ANR	922572	Identifier	new_map		922346	1					
ANR	922573	AssignmentExpression	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922346	2		=			
ANR	922574	Identifier	new_map		922346	0					
ANR	922575	InclusiveOrExpression	bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		922346	1		|			
ANR	922576	Identifier	bracket_map		922346	0					
ANR	922577	ConditionalExpression	( n < 32 ) ? ( 1 << n ) : 1		922346	1					
ANR	922578	Condition	n < 32		922346	0					
ANR	922579	RelationalExpression	n < 32		922346	0		<			
ANR	922580	Identifier	n		922346	0					
ANR	922581	PrimaryExpression	32		922346	1					
ANR	922582	ShiftExpression	1 << n		922346	1		<<			
ANR	922583	PrimaryExpression	1		922346	0					
ANR	922584	Identifier	n		922346	1					
ANR	922585	PrimaryExpression	1		922346	2					
ANR	922586	IfStatement	"if ( ! is_startline ( scode , new_map , cd , atomcount ) )"		922346	2					
ANR	922587	Condition	"! is_startline ( scode , new_map , cd , atomcount )"	8739:9:289231:289274	922346	0	True				
ANR	922588	UnaryOperationExpression	"! is_startline ( scode , new_map , cd , atomcount )"		922346	0					
ANR	922589	UnaryOperator	!		922346	0					
ANR	922590	CallExpression	"is_startline ( scode , new_map , cd , atomcount )"		922346	1					
ANR	922591	Callee	is_startline		922346	0					
ANR	922592	Identifier	is_startline		922346	0					
ANR	922593	ArgumentList	scode		922346	1					
ANR	922594	Argument	scode		922346	0					
ANR	922595	Identifier	scode		922346	0					
ANR	922596	Argument	new_map		922346	1					
ANR	922597	Identifier	new_map		922346	0					
ANR	922598	Argument	cd		922346	2					
ANR	922599	Identifier	cd		922346	0					
ANR	922600	Argument	atomcount		922346	3					
ANR	922601	Identifier	atomcount		922346	0					
ANR	922602	ReturnStatement	return FALSE ;	8739:55:289277:289289	922346	1	True				
ANR	922603	Identifier	FALSE		922346	0					
ANR	922604	ElseStatement	else		922346	0					
ANR	922605	IfStatement	if ( op == OP_ASSERT )		922346	0					
ANR	922606	Condition	op == OP_ASSERT	8744:12:289349:289363	922346	0	True				
ANR	922607	EqualityExpression	op == OP_ASSERT		922346	0		==			
ANR	922608	Identifier	op		922346	0					
ANR	922609	Identifier	OP_ASSERT		922346	1					
ANR	922610	CompoundStatement		57:5:1615:1615	922346	1					
ANR	922611	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		922346	0					
ANR	922612	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8746:9:289382:289429	922346	0	True				
ANR	922613	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		922346	0					
ANR	922614	UnaryOperator	!		922346	0					
ANR	922615	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		922346	1					
ANR	922616	Callee	is_startline		922346	0					
ANR	922617	Identifier	is_startline		922346	0					
ANR	922618	ArgumentList	scode		922346	1					
ANR	922619	Argument	scode		922346	0					
ANR	922620	Identifier	scode		922346	0					
ANR	922621	Argument	bracket_map		922346	1					
ANR	922622	Identifier	bracket_map		922346	0					
ANR	922623	Argument	cd		922346	2					
ANR	922624	Identifier	cd		922346	0					
ANR	922625	Argument	atomcount		922346	3					
ANR	922626	Identifier	atomcount		922346	0					
ANR	922627	ReturnStatement	return FALSE ;	8746:59:289432:289444	922346	1	True				
ANR	922628	Identifier	FALSE		922346	0					
ANR	922629	ElseStatement	else		922346	0					
ANR	922630	IfStatement	if ( op == OP_ONCE || op == OP_ONCE_NC )		922346	0					
ANR	922631	Condition	op == OP_ONCE || op == OP_ONCE_NC	8751:12:289492:289524	922346	0	True				
ANR	922632	OrExpression	op == OP_ONCE || op == OP_ONCE_NC		922346	0		||			
ANR	922633	EqualityExpression	op == OP_ONCE		922346	0		==			
ANR	922634	Identifier	op		922346	0					
ANR	922635	Identifier	OP_ONCE		922346	1					
ANR	922636	EqualityExpression	op == OP_ONCE_NC		922346	1		==			
ANR	922637	Identifier	op		922346	0					
ANR	922638	Identifier	OP_ONCE_NC		922346	1					
ANR	922639	CompoundStatement		64:5:1776:1776	922346	1					
ANR	922640	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount + 1 ) )"		922346	0					
ANR	922641	Condition	"! is_startline ( scode , bracket_map , cd , atomcount + 1 )"	8753:9:289543:289594	922346	0	True				
ANR	922642	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount + 1 )"		922346	0					
ANR	922643	UnaryOperator	!		922346	0					
ANR	922644	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount + 1 )"		922346	1					
ANR	922645	Callee	is_startline		922346	0					
ANR	922646	Identifier	is_startline		922346	0					
ANR	922647	ArgumentList	scode		922346	1					
ANR	922648	Argument	scode		922346	0					
ANR	922649	Identifier	scode		922346	0					
ANR	922650	Argument	bracket_map		922346	1					
ANR	922651	Identifier	bracket_map		922346	0					
ANR	922652	Argument	cd		922346	2					
ANR	922653	Identifier	cd		922346	0					
ANR	922654	Argument	atomcount + 1		922346	3					
ANR	922655	AdditiveExpression	atomcount + 1		922346	0		+			
ANR	922656	Identifier	atomcount		922346	0					
ANR	922657	PrimaryExpression	1		922346	1					
ANR	922658	ReturnStatement	return FALSE ;	8753:63:289597:289609	922346	1	True				
ANR	922659	Identifier	FALSE		922346	0					
ANR	922660	ElseStatement	else		922346	0					
ANR	922661	IfStatement	if ( op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR )		922346	0					
ANR	922662	Condition	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR	8762:12:289964:290028	922346	0	True				
ANR	922663	OrExpression	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		922346	0		||			
ANR	922664	EqualityExpression	op == OP_TYPESTAR		922346	0		==			
ANR	922665	Identifier	op		922346	0					
ANR	922666	Identifier	OP_TYPESTAR		922346	1					
ANR	922667	OrExpression	op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		922346	1		||			
ANR	922668	EqualityExpression	op == OP_TYPEMINSTAR		922346	0		==			
ANR	922669	Identifier	op		922346	0					
ANR	922670	Identifier	OP_TYPEMINSTAR		922346	1					
ANR	922671	EqualityExpression	op == OP_TYPEPOSSTAR		922346	1		==			
ANR	922672	Identifier	op		922346	0					
ANR	922673	Identifier	OP_TYPEPOSSTAR		922346	1					
ANR	922674	CompoundStatement		75:5:2280:2280	922346	1					
ANR	922675	IfStatement	if ( scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip )		922346	0					
ANR	922676	Condition	scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip	8764:9:290047:290153	922346	0	True				
ANR	922677	OrExpression	scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		922346	0		||			
ANR	922678	EqualityExpression	scode [ 1 ] != OP_ANY		922346	0		!=			
ANR	922679	ArrayIndexing	scode [ 1 ]		922346	0					
ANR	922680	Identifier	scode		922346	0					
ANR	922681	PrimaryExpression	1		922346	1					
ANR	922682	Identifier	OP_ANY		922346	1					
ANR	922683	OrExpression	( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		922346	1		||			
ANR	922684	EqualityExpression	( bracket_map & cd -> backref_map ) != 0		922346	0		!=			
ANR	922685	BitAndExpression	bracket_map & cd -> backref_map		922346	0		&			
ANR	922686	Identifier	bracket_map		922346	0					
ANR	922687	PtrMemberAccess	cd -> backref_map		922346	1					
ANR	922688	Identifier	cd		922346	0					
ANR	922689	Identifier	backref_map		922346	1					
ANR	922690	PrimaryExpression	0		922346	1					
ANR	922691	OrExpression	atomcount > 0 || cd -> had_pruneorskip		922346	1		||			
ANR	922692	RelationalExpression	atomcount > 0		922346	0		>			
ANR	922693	Identifier	atomcount		922346	0					
ANR	922694	PrimaryExpression	0		922346	1					
ANR	922695	PtrMemberAccess	cd -> had_pruneorskip		922346	1					
ANR	922696	Identifier	cd		922346	0					
ANR	922697	Identifier	had_pruneorskip		922346	1					
ANR	922698	ReturnStatement	return FALSE ;	8766:7:290163:290175	922346	1	True				
ANR	922699	Identifier	FALSE		922346	0					
ANR	922700	ElseStatement	else		922346	0					
ANR	922701	IfStatement	if ( op != OP_CIRC && op != OP_CIRCM )		922346	0					
ANR	922702	Condition	op != OP_CIRC && op != OP_CIRCM	8774:12:290439:290469	922346	0	True				
ANR	922703	AndExpression	op != OP_CIRC && op != OP_CIRCM		922346	0		&&			
ANR	922704	EqualityExpression	op != OP_CIRC		922346	0		!=			
ANR	922705	Identifier	op		922346	0					
ANR	922706	Identifier	OP_CIRC		922346	1					
ANR	922707	EqualityExpression	op != OP_CIRCM		922346	1		!=			
ANR	922708	Identifier	op		922346	0					
ANR	922709	Identifier	OP_CIRCM		922346	1					
ANR	922710	ReturnStatement	return FALSE ;	8774:45:290472:290484	922346	1	True				
ANR	922711	Identifier	FALSE		922346	0					
ANR	922712	ExpressionStatement	"code += GET ( code , 1 )"	8778:3:290532:290552	922346	5	True				
ANR	922713	AssignmentExpression	"code += GET ( code , 1 )"		922346	0		+=			
ANR	922714	Identifier	code		922346	0					
ANR	922715	CallExpression	"GET ( code , 1 )"		922346	1					
ANR	922716	Callee	GET		922346	0					
ANR	922717	Identifier	GET		922346	0					
ANR	922718	ArgumentList	code		922346	1					
ANR	922719	Argument	code		922346	0					
ANR	922720	Identifier	code		922346	0					
ANR	922721	Argument	1		922346	1					
ANR	922722	PrimaryExpression	1		922346	0					
ANR	922723	Condition	* code == OP_ALT	8780:7:290566:290580	922346	1	True				
ANR	922724	EqualityExpression	* code == OP_ALT		922346	0		==			
ANR	922725	UnaryOperationExpression	* code		922346	0					
ANR	922726	UnaryOperator	*		922346	0					
ANR	922727	Identifier	code		922346	1					
ANR	922728	Identifier	OP_ALT		922346	1					
ANR	922729	ReturnStatement	return TRUE ;	8781:0:290617:290628	922346	1	True				
ANR	922730	Identifier	TRUE		922346	0					
ANR	922731	ReturnType	static BOOL		922346	1					
ANR	922732	Identifier	is_startline		922346	2					
ANR	922733	ParameterList	"const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount"		922346	3					
ANR	922734	Parameter	const pcre_uchar * code	8687:13:287670:287691	922346	0	True				
ANR	922735	ParameterType	const pcre_uchar *		922346	0					
ANR	922736	Identifier	code		922346	1					
ANR	922737	Parameter	unsigned int bracket_map	8687:37:287694:287717	922346	1	True				
ANR	922738	ParameterType	unsigned int		922346	0					
ANR	922739	Identifier	bracket_map		922346	1					
ANR	922740	Parameter	compile_data * cd	8688:2:287722:287737	922346	2	True				
ANR	922741	ParameterType	compile_data *		922346	0					
ANR	922742	Identifier	cd		922346	1					
ANR	922743	Parameter	int atomcount	8688:20:287740:287752	922346	3	True				
ANR	922744	ParameterType	int		922346	0					
ANR	922745	Identifier	atomcount		922346	1					
ANR	922746	CFGEntryNode	ENTRY		922346		True				
ANR	922747	CFGExitNode	EXIT		922346		True				
ANR	922748	Symbol	code		922346						
ANR	922749	Symbol	* cd		922346						
ANR	922750	Symbol	OP_CBRA		922346						
ANR	922751	Symbol	OP_ONCE_NC		922346						
ANR	922752	Symbol	OP_ALT		922346						
ANR	922753	Symbol	PRIV		922346						
ANR	922754	Symbol	* * code		922346						
ANR	922755	Symbol	OP_ANY		922346						
ANR	922756	Symbol	* scode		922346						
ANR	922757	Symbol	OP_TYPEMINSTAR		922346						
ANR	922758	Symbol	first_significant_code		922346						
ANR	922759	Symbol	OP_CBRAPOS		922346						
ANR	922760	Symbol	OP_SBRAPOS		922346						
ANR	922761	Symbol	GET2		922346						
ANR	922762	Symbol	OP_TYPEPOSSTAR		922346						
ANR	922763	Symbol	OP_CIRC		922346						
ANR	922764	Symbol	cd		922346						
ANR	922765	Symbol	op		922346						
ANR	922766	Symbol	OP_SCBRAPOS		922346						
ANR	922767	Symbol	bracket_map		922346						
ANR	922768	Symbol	scode		922346						
ANR	922769	Symbol	OP_CIRCM		922346						
ANR	922770	Symbol	OP_CALLOUT		922346						
ANR	922771	Symbol	TRUE		922346						
ANR	922772	Symbol	OP_COND		922346						
ANR	922773	Symbol	OP_ASSERT		922346						
ANR	922774	Symbol	OP_SBRA		922346						
ANR	922775	Symbol	n		922346						
ANR	922776	Symbol	atomcount		922346						
ANR	922777	Symbol	LINK_SIZE		922346						
ANR	922778	Symbol	OP_BRAPOS		922346						
ANR	922779	Symbol	OP_ONCE		922346						
ANR	922780	Symbol	* PRIV		922346						
ANR	922781	Symbol	OP_BRA		922346						
ANR	922782	Symbol	cd -> had_pruneorskip		922346						
ANR	922783	Symbol	GET		922346						
ANR	922784	Symbol	FALSE		922346						
ANR	922785	Symbol	OP_lengths		922346						
ANR	922786	Symbol	OP_TYPESTAR		922346						
ANR	922787	Symbol	is_startline		922346						
ANR	922788	Symbol	new_map		922346						
ANR	922789	Symbol	cd -> backref_map		922346						
ANR	922790	Symbol	* code		922346						
ANR	922791	Symbol	* OP_CALLOUT		922346						
ANR	922792	Symbol	OP_SCBRA		922346						
ANR	922793	Function	find_firstassertedchar	8807:0:291621:293215							
ANR	922794	FunctionDef	"find_firstassertedchar (const pcre_uchar * code , pcre_int32 * flags , BOOL inassert)"		922793	0					
ANR	922795	CompoundStatement		8810:0:291723:293215	922793	0					
ANR	922796	Statement	register	8811:0:291725:291732	922793	0	True				
ANR	922797	IdentifierDeclStatement	pcre_uint32 c = 0 ;	8811:9:291734:291751	922793	1	True				
ANR	922798	IdentifierDecl	c = 0		922793	0					
ANR	922799	IdentifierDeclType	pcre_uint32		922793	0					
ANR	922800	Identifier	c		922793	1					
ANR	922801	AssignmentExpression	c = 0		922793	2		=			
ANR	922802	Identifier	c		922793	0					
ANR	922803	PrimaryExpression	0		922793	1					
ANR	922804	IdentifierDeclStatement	int cflags = REQ_NONE ;	8812:0:291753:291774	922793	2	True				
ANR	922805	IdentifierDecl	cflags = REQ_NONE		922793	0					
ANR	922806	IdentifierDeclType	int		922793	0					
ANR	922807	Identifier	cflags		922793	1					
ANR	922808	AssignmentExpression	cflags = REQ_NONE		922793	2		=			
ANR	922809	Identifier	REQ_NONE		922793	0					
ANR	922810	Identifier	REQ_NONE		922793	1					
ANR	922811	ExpressionStatement	* flags = REQ_NONE	8814:0:291777:291794	922793	3	True				
ANR	922812	AssignmentExpression	* flags = REQ_NONE		922793	0		=			
ANR	922813	UnaryOperationExpression	* flags		922793	0					
ANR	922814	UnaryOperator	*		922793	0					
ANR	922815	Identifier	flags		922793	1					
ANR	922816	Identifier	REQ_NONE		922793	1					
ANR	922817	DoStatement	do		922793	4					
ANR	922818	CompoundStatement		13:12:337:359	922793	0					
ANR	922819	IdentifierDeclStatement	pcre_uint32 d ;	8816:3:291804:291817	922793	0	True				
ANR	922820	IdentifierDecl	d		922793	0					
ANR	922821	IdentifierDeclType	pcre_uint32		922793	0					
ANR	922822	Identifier	d		922793	1					
ANR	922823	IdentifierDeclStatement	int dflags ;	8817:3:291822:291832	922793	1	True				
ANR	922824	IdentifierDecl	dflags		922793	0					
ANR	922825	IdentifierDeclType	int		922793	0					
ANR	922826	Identifier	dflags		922793	1					
ANR	922827	IdentifierDeclStatement	int xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0 ;	8818:3:291837:291958	922793	2	True				
ANR	922828	IdentifierDecl	xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		922793	0					
ANR	922829	IdentifierDeclType	int		922793	0					
ANR	922830	Identifier	xl		922793	1					
ANR	922831	AssignmentExpression	xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		922793	2		=			
ANR	922832	Identifier	xl		922793	0					
ANR	922833	ConditionalExpression	( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		922793	1					
ANR	922834	Condition	* code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		922793	0					
ANR	922835	OrExpression	* code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		922793	0		||			
ANR	922836	EqualityExpression	* code == OP_CBRA		922793	0		==			
ANR	922837	UnaryOperationExpression	* code		922793	0					
ANR	922838	UnaryOperator	*		922793	0					
ANR	922839	Identifier	code		922793	1					
ANR	922840	Identifier	OP_CBRA		922793	1					
ANR	922841	OrExpression	* code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		922793	1		||			
ANR	922842	EqualityExpression	* code == OP_SCBRA		922793	0		==			
ANR	922843	UnaryOperationExpression	* code		922793	0					
ANR	922844	UnaryOperator	*		922793	0					
ANR	922845	Identifier	code		922793	1					
ANR	922846	Identifier	OP_SCBRA		922793	1					
ANR	922847	OrExpression	* code == OP_CBRAPOS || * code == OP_SCBRAPOS		922793	1		||			
ANR	922848	EqualityExpression	* code == OP_CBRAPOS		922793	0		==			
ANR	922849	UnaryOperationExpression	* code		922793	0					
ANR	922850	UnaryOperator	*		922793	0					
ANR	922851	Identifier	code		922793	1					
ANR	922852	Identifier	OP_CBRAPOS		922793	1					
ANR	922853	EqualityExpression	* code == OP_SCBRAPOS		922793	1		==			
ANR	922854	UnaryOperationExpression	* code		922793	0					
ANR	922855	UnaryOperator	*		922793	0					
ANR	922856	Identifier	code		922793	1					
ANR	922857	Identifier	OP_SCBRAPOS		922793	1					
ANR	922858	Identifier	IMM2_SIZE		922793	1					
ANR	922859	PrimaryExpression	0		922793	2					
ANR	922860	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE ) ;"	8820:3:291963:292047	922793	3	True				
ANR	922861	IdentifierDecl	"* scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		922793	0					
ANR	922862	IdentifierDeclType	const pcre_uchar *		922793	0					
ANR	922863	Identifier	scode		922793	1					
ANR	922864	AssignmentExpression	"* scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		922793	2		=			
ANR	922865	Identifier	scode		922793	0					
ANR	922866	CallExpression	"first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		922793	1					
ANR	922867	Callee	first_significant_code		922793	0					
ANR	922868	Identifier	first_significant_code		922793	0					
ANR	922869	ArgumentList	code + 1 + LINK_SIZE + xl		922793	1					
ANR	922870	Argument	code + 1 + LINK_SIZE + xl		922793	0					
ANR	922871	AdditiveExpression	code + 1 + LINK_SIZE + xl		922793	0		+			
ANR	922872	Identifier	code		922793	0					
ANR	922873	AdditiveExpression	1 + LINK_SIZE + xl		922793	1		+			
ANR	922874	PrimaryExpression	1		922793	0					
ANR	922875	AdditiveExpression	LINK_SIZE + xl		922793	1		+			
ANR	922876	Identifier	LINK_SIZE		922793	0					
ANR	922877	Identifier	xl		922793	1					
ANR	922878	Argument	TRUE		922793	1					
ANR	922879	Identifier	TRUE		922793	0					
ANR	922880	Statement	register	8822:3:292052:292059	922793	4	True				
ANR	922881	IdentifierDeclStatement	pcre_uchar op = * scode ;	8822:12:292061:292083	922793	5	True				
ANR	922882	IdentifierDecl	op = * scode		922793	0					
ANR	922883	IdentifierDeclType	pcre_uchar		922793	0					
ANR	922884	Identifier	op		922793	1					
ANR	922885	AssignmentExpression	op = * scode		922793	2		=			
ANR	922886	Identifier	op		922793	0					
ANR	922887	UnaryOperationExpression	* scode		922793	1					
ANR	922888	UnaryOperator	*		922793	0					
ANR	922889	Identifier	scode		922793	1					
ANR	922890	SwitchStatement	switch ( op )		922793	6					
ANR	922891	Condition	op	8824:10:292096:292097	922793	0	True				
ANR	922892	Identifier	op		922793	0					
ANR	922893	CompoundStatement		16:5:381:381	922793	1					
ANR	922894	Label	default :	8826:5:292112:292119	922793	0	True				
ANR	922895	Identifier	default		922793	0					
ANR	922896	ReturnStatement	return 0 ;	8827:5:292126:292134	922793	1	True				
ANR	922897	PrimaryExpression	0		922793	0					
ANR	922898	Label	case OP_BRA :	8829:5:292142:292153	922793	2	True				
ANR	922899	Identifier	OP_BRA		922793	0					
ANR	922900	Label	case OP_BRAPOS :	8830:5:292160:292174	922793	3	True				
ANR	922901	Identifier	OP_BRAPOS		922793	0					
ANR	922902	Label	case OP_CBRA :	8831:5:292181:292193	922793	4	True				
ANR	922903	Identifier	OP_CBRA		922793	0					
ANR	922904	Label	case OP_SCBRA :	8832:5:292200:292213	922793	5	True				
ANR	922905	Identifier	OP_SCBRA		922793	0					
ANR	922906	Label	case OP_CBRAPOS :	8833:5:292220:292235	922793	6	True				
ANR	922907	Identifier	OP_CBRAPOS		922793	0					
ANR	922908	Label	case OP_SCBRAPOS :	8834:5:292242:292258	922793	7	True				
ANR	922909	Identifier	OP_SCBRAPOS		922793	0					
ANR	922910	Label	case OP_ASSERT :	8835:5:292265:292279	922793	8	True				
ANR	922911	Identifier	OP_ASSERT		922793	0					
ANR	922912	Label	case OP_ONCE :	8836:5:292286:292298	922793	9	True				
ANR	922913	Identifier	OP_ONCE		922793	0					
ANR	922914	Label	case OP_ONCE_NC :	8837:5:292305:292320	922793	10	True				
ANR	922915	Identifier	OP_ONCE_NC		922793	0					
ANR	922916	ExpressionStatement	"d = find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"	8838:5:292327:292386	922793	11	True				
ANR	922917	AssignmentExpression	"d = find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"		922793	0		=			
ANR	922918	Identifier	d		922793	0					
ANR	922919	CallExpression	"find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"		922793	1					
ANR	922920	Callee	find_firstassertedchar		922793	0					
ANR	922921	Identifier	find_firstassertedchar		922793	0					
ANR	922922	ArgumentList	scode		922793	1					
ANR	922923	Argument	scode		922793	0					
ANR	922924	Identifier	scode		922793	0					
ANR	922925	Argument	& dflags		922793	1					
ANR	922926	UnaryOperationExpression	& dflags		922793	0					
ANR	922927	UnaryOperator	&		922793	0					
ANR	922928	Identifier	dflags		922793	1					
ANR	922929	Argument	op == OP_ASSERT		922793	2					
ANR	922930	EqualityExpression	op == OP_ASSERT		922793	0		==			
ANR	922931	Identifier	op		922793	0					
ANR	922932	Identifier	OP_ASSERT		922793	1					
ANR	922933	IfStatement	if ( dflags < 0 )		922793	12					
ANR	922934	Condition	dflags < 0	8839:9:292397:292406	922793	0	True				
ANR	922935	RelationalExpression	dflags < 0		922793	0		<			
ANR	922936	Identifier	dflags		922793	0					
ANR	922937	PrimaryExpression	0		922793	1					
ANR	922938	ReturnStatement	return 0 ;	8840:7:292416:292424	922793	1	True				
ANR	922939	PrimaryExpression	0		922793	0					
ANR	922940	IfStatement	if ( cflags < 0 )		922793	13					
ANR	922941	Condition	cflags < 0	8841:9:292435:292444	922793	0	True				
ANR	922942	RelationalExpression	cflags < 0		922793	0		<			
ANR	922943	Identifier	cflags		922793	0					
ANR	922944	PrimaryExpression	0		922793	1					
ANR	922945	CompoundStatement		32:21:723:723	922793	1					
ANR	922946	ExpressionStatement	c = d	8841:23:292449:292454	922793	0	True				
ANR	922947	AssignmentExpression	c = d		922793	0		=			
ANR	922948	Identifier	c		922793	0					
ANR	922949	Identifier	d		922793	1					
ANR	922950	ExpressionStatement	cflags = dflags	8841:30:292456:292471	922793	1	True				
ANR	922951	AssignmentExpression	cflags = dflags		922793	0		=			
ANR	922952	Identifier	cflags		922793	0					
ANR	922953	Identifier	dflags		922793	1					
ANR	922954	ElseStatement	else		922793	0					
ANR	922955	IfStatement	if ( c != d || cflags != dflags )		922793	0					
ANR	922956	Condition	c != d || cflags != dflags	8841:58:292484:292509	922793	0	True				
ANR	922957	OrExpression	c != d || cflags != dflags		922793	0		||			
ANR	922958	EqualityExpression	c != d		922793	0		!=			
ANR	922959	Identifier	c		922793	0					
ANR	922960	Identifier	d		922793	1					
ANR	922961	EqualityExpression	cflags != dflags		922793	1		!=			
ANR	922962	Identifier	cflags		922793	0					
ANR	922963	Identifier	dflags		922793	1					
ANR	922964	ReturnStatement	return 0 ;	8841:86:292512:292520	922793	1	True				
ANR	922965	PrimaryExpression	0		922793	0					
ANR	922966	BreakStatement	break ;	8842:5:292527:292532	922793	14	True				
ANR	922967	Label	case OP_EXACT :	8844:5:292540:292553	922793	15	True				
ANR	922968	Identifier	OP_EXACT		922793	0					
ANR	922969	ExpressionStatement	scode += IMM2_SIZE	8845:5:292560:292578	922793	16	True				
ANR	922970	AssignmentExpression	scode += IMM2_SIZE		922793	0		+=			
ANR	922971	Identifier	scode		922793	0					
ANR	922972	Identifier	IMM2_SIZE		922793	1					
ANR	922973	Label	case OP_CHAR :	8848:5:292610:292622	922793	17	True				
ANR	922974	Identifier	OP_CHAR		922793	0					
ANR	922975	Label	case OP_PLUS :	8849:5:292629:292641	922793	18	True				
ANR	922976	Identifier	OP_PLUS		922793	0					
ANR	922977	Label	case OP_MINPLUS :	8850:5:292648:292663	922793	19	True				
ANR	922978	Identifier	OP_MINPLUS		922793	0					
ANR	922979	Label	case OP_POSPLUS :	8851:5:292670:292685	922793	20	True				
ANR	922980	Identifier	OP_POSPLUS		922793	0					
ANR	922981	IfStatement	if ( ! inassert )		922793	21					
ANR	922982	Condition	! inassert	8852:9:292696:292704	922793	0	True				
ANR	922983	UnaryOperationExpression	! inassert		922793	0					
ANR	922984	UnaryOperator	!		922793	0					
ANR	922985	Identifier	inassert		922793	1					
ANR	922986	ReturnStatement	return 0 ;	8852:20:292707:292715	922793	1	True				
ANR	922987	PrimaryExpression	0		922793	0					
ANR	922988	IfStatement	if ( cflags < 0 )		922793	22					
ANR	922989	Condition	cflags < 0	8853:9:292726:292735	922793	0	True				
ANR	922990	RelationalExpression	cflags < 0		922793	0		<			
ANR	922991	Identifier	cflags		922793	0					
ANR	922992	PrimaryExpression	0		922793	1					
ANR	922993	CompoundStatement		44:21:1014:1014	922793	1					
ANR	922994	ExpressionStatement	c = scode [ 1 ]	8853:23:292740:292752	922793	0	True				
ANR	922995	AssignmentExpression	c = scode [ 1 ]		922793	0		=			
ANR	922996	Identifier	c		922793	0					
ANR	922997	ArrayIndexing	scode [ 1 ]		922793	1					
ANR	922998	Identifier	scode		922793	0					
ANR	922999	PrimaryExpression	1		922793	1					
ANR	923000	ExpressionStatement	cflags = 0	8853:37:292754:292764	922793	1	True				
ANR	923001	AssignmentExpression	cflags = 0		922793	0		=			
ANR	923002	Identifier	cflags		922793	0					
ANR	923003	PrimaryExpression	0		922793	1					
ANR	923004	ElseStatement	else		922793	0					
ANR	923005	IfStatement	if ( c != scode [ 1 ] )		922793	0					
ANR	923006	Condition	c != scode [ 1 ]	8854:16:292784:292796	922793	0	True				
ANR	923007	EqualityExpression	c != scode [ 1 ]		922793	0		!=			
ANR	923008	Identifier	c		922793	0					
ANR	923009	ArrayIndexing	scode [ 1 ]		922793	1					
ANR	923010	Identifier	scode		922793	0					
ANR	923011	PrimaryExpression	1		922793	1					
ANR	923012	ReturnStatement	return 0 ;	8854:31:292799:292807	922793	1	True				
ANR	923013	PrimaryExpression	0		922793	0					
ANR	923014	BreakStatement	break ;	8855:5:292814:292819	922793	23	True				
ANR	923015	Label	case OP_EXACTI :	8857:5:292827:292841	922793	24	True				
ANR	923016	Identifier	OP_EXACTI		922793	0					
ANR	923017	ExpressionStatement	scode += IMM2_SIZE	8858:5:292848:292866	922793	25	True				
ANR	923018	AssignmentExpression	scode += IMM2_SIZE		922793	0		+=			
ANR	923019	Identifier	scode		922793	0					
ANR	923020	Identifier	IMM2_SIZE		922793	1					
ANR	923021	Label	case OP_CHARI :	8861:5:292898:292911	922793	26	True				
ANR	923022	Identifier	OP_CHARI		922793	0					
ANR	923023	Label	case OP_PLUSI :	8862:5:292918:292931	922793	27	True				
ANR	923024	Identifier	OP_PLUSI		922793	0					
ANR	923025	Label	case OP_MINPLUSI :	8863:5:292938:292954	922793	28	True				
ANR	923026	Identifier	OP_MINPLUSI		922793	0					
ANR	923027	Label	case OP_POSPLUSI :	8864:5:292961:292977	922793	29	True				
ANR	923028	Identifier	OP_POSPLUSI		922793	0					
ANR	923029	IfStatement	if ( ! inassert )		922793	30					
ANR	923030	Condition	! inassert	8865:9:292988:292996	922793	0	True				
ANR	923031	UnaryOperationExpression	! inassert		922793	0					
ANR	923032	UnaryOperator	!		922793	0					
ANR	923033	Identifier	inassert		922793	1					
ANR	923034	ReturnStatement	return 0 ;	8865:20:292999:293007	922793	1	True				
ANR	923035	PrimaryExpression	0		922793	0					
ANR	923036	IfStatement	if ( cflags < 0 )		922793	31					
ANR	923037	Condition	cflags < 0	8866:9:293018:293027	922793	0	True				
ANR	923038	RelationalExpression	cflags < 0		922793	0		<			
ANR	923039	Identifier	cflags		922793	0					
ANR	923040	PrimaryExpression	0		922793	1					
ANR	923041	CompoundStatement		57:21:1306:1306	922793	1					
ANR	923042	ExpressionStatement	c = scode [ 1 ]	8866:23:293032:293044	922793	0	True				
ANR	923043	AssignmentExpression	c = scode [ 1 ]		922793	0		=			
ANR	923044	Identifier	c		922793	0					
ANR	923045	ArrayIndexing	scode [ 1 ]		922793	1					
ANR	923046	Identifier	scode		922793	0					
ANR	923047	PrimaryExpression	1		922793	1					
ANR	923048	ExpressionStatement	cflags = REQ_CASELESS	8866:37:293046:293067	922793	1	True				
ANR	923049	AssignmentExpression	cflags = REQ_CASELESS		922793	0		=			
ANR	923050	Identifier	cflags		922793	0					
ANR	923051	Identifier	REQ_CASELESS		922793	1					
ANR	923052	ElseStatement	else		922793	0					
ANR	923053	IfStatement	if ( c != scode [ 1 ] )		922793	0					
ANR	923054	Condition	c != scode [ 1 ]	8867:16:293087:293099	922793	0	True				
ANR	923055	EqualityExpression	c != scode [ 1 ]		922793	0		!=			
ANR	923056	Identifier	c		922793	0					
ANR	923057	ArrayIndexing	scode [ 1 ]		922793	1					
ANR	923058	Identifier	scode		922793	0					
ANR	923059	PrimaryExpression	1		922793	1					
ANR	923060	ReturnStatement	return 0 ;	8867:31:293102:293110	922793	1	True				
ANR	923061	PrimaryExpression	0		922793	0					
ANR	923062	BreakStatement	break ;	8868:5:293117:293122	922793	32	True				
ANR	923063	ExpressionStatement	"code += GET ( code , 1 )"	8871:3:293135:293155	922793	7	True				
ANR	923064	AssignmentExpression	"code += GET ( code , 1 )"		922793	0		+=			
ANR	923065	Identifier	code		922793	0					
ANR	923066	CallExpression	"GET ( code , 1 )"		922793	1					
ANR	923067	Callee	GET		922793	0					
ANR	923068	Identifier	GET		922793	0					
ANR	923069	ArgumentList	code		922793	1					
ANR	923070	Argument	code		922793	0					
ANR	923071	Identifier	code		922793	0					
ANR	923072	Argument	1		922793	1					
ANR	923073	PrimaryExpression	1		922793	0					
ANR	923074	Condition	* code == OP_ALT	8873:7:293169:293183	922793	1	True				
ANR	923075	EqualityExpression	* code == OP_ALT		922793	0		==			
ANR	923076	UnaryOperationExpression	* code		922793	0					
ANR	923077	UnaryOperator	*		922793	0					
ANR	923078	Identifier	code		922793	1					
ANR	923079	Identifier	OP_ALT		922793	1					
ANR	923080	ExpressionStatement	* flags = cflags	8875:0:293188:293203	922793	5	True				
ANR	923081	AssignmentExpression	* flags = cflags		922793	0		=			
ANR	923082	UnaryOperationExpression	* flags		922793	0					
ANR	923083	UnaryOperator	*		922793	0					
ANR	923084	Identifier	flags		922793	1					
ANR	923085	Identifier	cflags		922793	1					
ANR	923086	ReturnStatement	return c ;	8876:0:293205:293213	922793	6	True				
ANR	923087	Identifier	c		922793	0					
ANR	923088	ReturnType	static pcre_uint32		922793	1					
ANR	923089	Identifier	find_firstassertedchar		922793	2					
ANR	923090	ParameterList	"const pcre_uchar * code , pcre_int32 * flags , BOOL inassert"		922793	3					
ANR	923091	Parameter	const pcre_uchar * code	8808:23:291663:291684	922793	0	True				
ANR	923092	ParameterType	const pcre_uchar *		922793	0					
ANR	923093	Identifier	code		922793	1					
ANR	923094	Parameter	pcre_int32 * flags	8808:47:291687:291703	922793	1	True				
ANR	923095	ParameterType	pcre_int32 *		922793	0					
ANR	923096	Identifier	flags		922793	1					
ANR	923097	Parameter	BOOL inassert	8809:2:291708:291720	922793	2	True				
ANR	923098	ParameterType	BOOL		922793	0					
ANR	923099	Identifier	inassert		922793	1					
ANR	923100	CFGEntryNode	ENTRY		922793		True				
ANR	923101	CFGExitNode	EXIT		922793		True				
ANR	923102	Symbol	find_firstassertedchar		922793						
ANR	923103	Symbol	code		922793						
ANR	923104	Symbol	OP_CBRA		922793						
ANR	923105	Symbol	flags		922793						
ANR	923106	Symbol	OP_ALT		922793						
ANR	923107	Symbol	REQ_CASELESS		922793						
ANR	923108	Symbol	* scode		922793						
ANR	923109	Symbol	dflags		922793						
ANR	923110	Symbol	OP_CBRAPOS		922793						
ANR	923111	Symbol	first_significant_code		922793						
ANR	923112	Symbol	REQ_NONE		922793						
ANR	923113	Symbol	* flags		922793						
ANR	923114	Symbol	OP_SCBRAPOS		922793						
ANR	923115	Symbol	op		922793						
ANR	923116	Symbol	c		922793						
ANR	923117	Symbol	scode		922793						
ANR	923118	Symbol	d		922793						
ANR	923119	Symbol	IMM2_SIZE		922793						
ANR	923120	Symbol	TRUE		922793						
ANR	923121	Symbol	OP_ASSERT		922793						
ANR	923122	Symbol	LINK_SIZE		922793						
ANR	923123	Symbol	inassert		922793						
ANR	923124	Symbol	xl		922793						
ANR	923125	Symbol	& dflags		922793						
ANR	923126	Symbol	GET		922793						
ANR	923127	Symbol	cflags		922793						
ANR	923128	Symbol	* code		922793						
ANR	923129	Symbol	OP_SCBRA		922793						
ANR	923130	Function	add_name	8898:0:293750:294762							
ANR	923131	FunctionDef	"add_name (compile_data * cd , const pcre_uchar * name , int length , unsigned int groupno)"		923130	0					
ANR	923132	CompoundStatement		8901:0:293849:294762	923130	0					
ANR	923133	IdentifierDeclStatement	int i ;	8902:0:293851:293856	923130	0	True				
ANR	923134	IdentifierDecl	i		923130	0					
ANR	923135	IdentifierDeclType	int		923130	0					
ANR	923136	Identifier	i		923130	1					
ANR	923137	IdentifierDeclStatement	pcre_uchar * slot = cd -> name_table ;	8903:0:293858:293891	923130	1	True				
ANR	923138	IdentifierDecl	* slot = cd -> name_table		923130	0					
ANR	923139	IdentifierDeclType	pcre_uchar *		923130	0					
ANR	923140	Identifier	slot		923130	1					
ANR	923141	AssignmentExpression	* slot = cd -> name_table		923130	2		=			
ANR	923142	Identifier	slot		923130	0					
ANR	923143	PtrMemberAccess	cd -> name_table		923130	1					
ANR	923144	Identifier	cd		923130	0					
ANR	923145	Identifier	name_table		923130	1					
ANR	923146	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		923130	2					
ANR	923147	ForInit	i = 0 ;	8905:5:293899:293904	923130	0	True				
ANR	923148	AssignmentExpression	i = 0		923130	0		=			
ANR	923149	Identifier	i		923130	0					
ANR	923150	PrimaryExpression	0		923130	1					
ANR	923151	Condition	i < cd -> names_found	8905:12:293906:293924	923130	1	True				
ANR	923152	RelationalExpression	i < cd -> names_found		923130	0		<			
ANR	923153	Identifier	i		923130	0					
ANR	923154	PtrMemberAccess	cd -> names_found		923130	1					
ANR	923155	Identifier	cd		923130	0					
ANR	923156	Identifier	names_found		923130	1					
ANR	923157	PostIncDecOperationExpression	i ++	8905:33:293927:293929	923130	2	True				
ANR	923158	Identifier	i		923130	0					
ANR	923159	IncDec	++		923130	1					
ANR	923160	CompoundStatement		7:2:88:145	923130	3					
ANR	923161	IdentifierDeclStatement	"int crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) ) ;"	8907:2:293938:293995	923130	0	True				
ANR	923162	IdentifierDecl	"crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		923130	0					
ANR	923163	IdentifierDeclType	int		923130	0					
ANR	923164	Identifier	crc		923130	1					
ANR	923165	AssignmentExpression	"crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		923130	2		=			
ANR	923166	Identifier	crc		923130	0					
ANR	923167	CallExpression	"memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		923130	1					
ANR	923168	Callee	memcmp		923130	0					
ANR	923169	Identifier	memcmp		923130	0					
ANR	923170	ArgumentList	name		923130	1					
ANR	923171	Argument	name		923130	0					
ANR	923172	Identifier	name		923130	0					
ANR	923173	Argument	slot + IMM2_SIZE		923130	1					
ANR	923174	AdditiveExpression	slot + IMM2_SIZE		923130	0		+			
ANR	923175	Identifier	slot		923130	0					
ANR	923176	Identifier	IMM2_SIZE		923130	1					
ANR	923177	Argument	IN_UCHARS ( length )		923130	2					
ANR	923178	CallExpression	IN_UCHARS ( length )		923130	0					
ANR	923179	Callee	IN_UCHARS		923130	0					
ANR	923180	Identifier	IN_UCHARS		923130	0					
ANR	923181	ArgumentList	length		923130	1					
ANR	923182	Argument	length		923130	0					
ANR	923183	Identifier	length		923130	0					
ANR	923184	IfStatement	if ( crc == 0 && slot [ IMM2_SIZE + length ] != 0 )		923130	1					
ANR	923185	Condition	crc == 0 && slot [ IMM2_SIZE + length ] != 0	8908:6:294003:294041	923130	0	True				
ANR	923186	AndExpression	crc == 0 && slot [ IMM2_SIZE + length ] != 0		923130	0		&&			
ANR	923187	EqualityExpression	crc == 0		923130	0		==			
ANR	923188	Identifier	crc		923130	0					
ANR	923189	PrimaryExpression	0		923130	1					
ANR	923190	EqualityExpression	slot [ IMM2_SIZE + length ] != 0		923130	1		!=			
ANR	923191	ArrayIndexing	slot [ IMM2_SIZE + length ]		923130	0					
ANR	923192	Identifier	slot		923130	0					
ANR	923193	AdditiveExpression	IMM2_SIZE + length		923130	1		+			
ANR	923194	Identifier	IMM2_SIZE		923130	0					
ANR	923195	Identifier	length		923130	1					
ANR	923196	PrimaryExpression	0		923130	1					
ANR	923197	ExpressionStatement	crc = - 1	8909:4:294048:294056	923130	1	True				
ANR	923198	AssignmentExpression	crc = - 1		923130	0		=			
ANR	923199	Identifier	crc		923130	0					
ANR	923200	UnaryOperationExpression	- 1		923130	1					
ANR	923201	UnaryOperator	-		923130	0					
ANR	923202	PrimaryExpression	1		923130	1					
ANR	923203	IfStatement	if ( crc < 0 )		923130	2					
ANR	923204	Condition	crc < 0	8916:6:294403:294409	923130	0	True				
ANR	923205	RelationalExpression	crc < 0		923130	0		<			
ANR	923206	Identifier	crc		923130	0					
ANR	923207	PrimaryExpression	0		923130	1					
ANR	923208	CompoundStatement		17:4:566:566	923130	1					
ANR	923209	ExpressionStatement	"memmove ( slot + cd -> name_entry_size , slot , IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size ) )"	8918:4:294422:294525	923130	0	True				
ANR	923210	CallExpression	"memmove ( slot + cd -> name_entry_size , slot , IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size ) )"		923130	0					
ANR	923211	Callee	memmove		923130	0					
ANR	923212	Identifier	memmove		923130	0					
ANR	923213	ArgumentList	slot + cd -> name_entry_size		923130	1					
ANR	923214	Argument	slot + cd -> name_entry_size		923130	0					
ANR	923215	AdditiveExpression	slot + cd -> name_entry_size		923130	0		+			
ANR	923216	Identifier	slot		923130	0					
ANR	923217	PtrMemberAccess	cd -> name_entry_size		923130	1					
ANR	923218	Identifier	cd		923130	0					
ANR	923219	Identifier	name_entry_size		923130	1					
ANR	923220	Argument	slot		923130	1					
ANR	923221	Identifier	slot		923130	0					
ANR	923222	Argument	IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size )		923130	2					
ANR	923223	CallExpression	IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size )		923130	0					
ANR	923224	Callee	IN_UCHARS		923130	0					
ANR	923225	Identifier	IN_UCHARS		923130	0					
ANR	923226	ArgumentList	( cd -> names_found - i ) * cd -> name_entry_size		923130	1					
ANR	923227	Argument	( cd -> names_found - i ) * cd -> name_entry_size		923130	0					
ANR	923228	MultiplicativeExpression	( cd -> names_found - i ) * cd -> name_entry_size		923130	0		*			
ANR	923229	AdditiveExpression	cd -> names_found - i		923130	0		-			
ANR	923230	PtrMemberAccess	cd -> names_found		923130	0					
ANR	923231	Identifier	cd		923130	0					
ANR	923232	Identifier	names_found		923130	1					
ANR	923233	Identifier	i		923130	1					
ANR	923234	PtrMemberAccess	cd -> name_entry_size		923130	1					
ANR	923235	Identifier	cd		923130	0					
ANR	923236	Identifier	name_entry_size		923130	1					
ANR	923237	BreakStatement	break ;	8920:4:294531:294536	923130	1	True				
ANR	923238	ExpressionStatement	slot += cd -> name_entry_size	8925:2:294604:294631	923130	3	True				
ANR	923239	AssignmentExpression	slot += cd -> name_entry_size		923130	0		+=			
ANR	923240	Identifier	slot		923130	0					
ANR	923241	PtrMemberAccess	cd -> name_entry_size		923130	1					
ANR	923242	Identifier	cd		923130	0					
ANR	923243	Identifier	name_entry_size		923130	1					
ANR	923244	ExpressionStatement	"PUT2 ( slot , 0 , groupno )"	8928:0:294638:294660	923130	3	True				
ANR	923245	CallExpression	"PUT2 ( slot , 0 , groupno )"		923130	0					
ANR	923246	Callee	PUT2		923130	0					
ANR	923247	Identifier	PUT2		923130	0					
ANR	923248	ArgumentList	slot		923130	1					
ANR	923249	Argument	slot		923130	0					
ANR	923250	Identifier	slot		923130	0					
ANR	923251	Argument	0		923130	1					
ANR	923252	PrimaryExpression	0		923130	0					
ANR	923253	Argument	groupno		923130	2					
ANR	923254	Identifier	groupno		923130	0					
ANR	923255	ExpressionStatement	"memcpy ( slot + IMM2_SIZE , name , IN_UCHARS ( length ) )"	8929:0:294662:294711	923130	4	True				
ANR	923256	CallExpression	"memcpy ( slot + IMM2_SIZE , name , IN_UCHARS ( length ) )"		923130	0					
ANR	923257	Callee	memcpy		923130	0					
ANR	923258	Identifier	memcpy		923130	0					
ANR	923259	ArgumentList	slot + IMM2_SIZE		923130	1					
ANR	923260	Argument	slot + IMM2_SIZE		923130	0					
ANR	923261	AdditiveExpression	slot + IMM2_SIZE		923130	0		+			
ANR	923262	Identifier	slot		923130	0					
ANR	923263	Identifier	IMM2_SIZE		923130	1					
ANR	923264	Argument	name		923130	1					
ANR	923265	Identifier	name		923130	0					
ANR	923266	Argument	IN_UCHARS ( length )		923130	2					
ANR	923267	CallExpression	IN_UCHARS ( length )		923130	0					
ANR	923268	Callee	IN_UCHARS		923130	0					
ANR	923269	Identifier	IN_UCHARS		923130	0					
ANR	923270	ArgumentList	length		923130	1					
ANR	923271	Argument	length		923130	0					
ANR	923272	Identifier	length		923130	0					
ANR	923273	ExpressionStatement	slot [ IMM2_SIZE + length ] = 0	8930:0:294713:294741	923130	5	True				
ANR	923274	AssignmentExpression	slot [ IMM2_SIZE + length ] = 0		923130	0		=			
ANR	923275	ArrayIndexing	slot [ IMM2_SIZE + length ]		923130	0					
ANR	923276	Identifier	slot		923130	0					
ANR	923277	AdditiveExpression	IMM2_SIZE + length		923130	1		+			
ANR	923278	Identifier	IMM2_SIZE		923130	0					
ANR	923279	Identifier	length		923130	1					
ANR	923280	PrimaryExpression	0		923130	1					
ANR	923281	ExpressionStatement	cd -> names_found ++	8931:0:294743:294760	923130	6	True				
ANR	923282	PostIncDecOperationExpression	cd -> names_found ++		923130	0					
ANR	923283	PtrMemberAccess	cd -> names_found		923130	0					
ANR	923284	Identifier	cd		923130	0					
ANR	923285	Identifier	names_found		923130	1					
ANR	923286	IncDec	++		923130	1					
ANR	923287	ReturnType	static void		923130	1					
ANR	923288	Identifier	add_name		923130	2					
ANR	923289	ParameterList	"compile_data * cd , const pcre_uchar * name , int length , unsigned int groupno"		923130	3					
ANR	923290	Parameter	compile_data * cd	8899:9:293771:293786	923130	0	True				
ANR	923291	ParameterType	compile_data *		923130	0					
ANR	923292	Identifier	cd		923130	1					
ANR	923293	Parameter	const pcre_uchar * name	8899:27:293789:293810	923130	1	True				
ANR	923294	ParameterType	const pcre_uchar *		923130	0					
ANR	923295	Identifier	name		923130	1					
ANR	923296	Parameter	int length	8899:51:293813:293822	923130	2	True				
ANR	923297	ParameterType	int		923130	0					
ANR	923298	Identifier	length		923130	1					
ANR	923299	Parameter	unsigned int groupno	8900:2:293827:293846	923130	3	True				
ANR	923300	ParameterType	unsigned int		923130	0					
ANR	923301	Identifier	groupno		923130	1					
ANR	923302	CFGEntryNode	ENTRY		923130		True				
ANR	923303	CFGExitNode	EXIT		923130		True				
ANR	923304	Symbol	cd		923130						
ANR	923305	Symbol	* cd		923130						
ANR	923306	Symbol	* IMM2_SIZE		923130						
ANR	923307	Symbol	IMM2_SIZE		923130						
ANR	923308	Symbol	length		923130						
ANR	923309	Symbol	i		923130						
ANR	923310	Symbol	cd -> names_found		923130						
ANR	923311	Symbol	slot		923130						
ANR	923312	Symbol	cd -> name_entry_size		923130						
ANR	923313	Symbol	IN_UCHARS		923130						
ANR	923314	Symbol	cd -> name_table		923130						
ANR	923315	Symbol	* slot		923130						
ANR	923316	Symbol	memcmp		923130						
ANR	923317	Symbol	crc		923130						
ANR	923318	Symbol	name		923130						
ANR	923319	Symbol	* length		923130						
ANR	923320	Symbol	groupno		923130						
ANR	923321	DeclStmt									
ANR	923322	Decl							REAL_PCRE	REAL_PCRE *	re
ANR	923323	DeclStmt									
ANR	923324	Decl							int	int	length
ANR	923325	DeclStmt									
ANR	923326	Decl							pcre_int32	pcre_int32	firstcharflags
ANR	923327	Decl							pcre_int32	pcre_int32	reqcharflags
ANR	923328	DeclStmt									
ANR	923329	Decl							pcre_uint32	pcre_uint32	firstchar
ANR	923330	Decl							pcre_uint32	pcre_uint32	reqchar
ANR	923331	DeclStmt									
ANR	923332	Decl							pcre_uint32	pcre_uint32	limit_match
ANR	923333	DeclStmt									
ANR	923334	Decl							pcre_uint32	pcre_uint32	limit_recursion
ANR	923335	DeclStmt									
ANR	923336	Decl							int	int	newline
ANR	923337	DeclStmt									
ANR	923338	Decl							int	int	errorcode
ANR	923339	DeclStmt									
ANR	923340	Decl							int	int	skipatstart
ANR	923341	DeclStmt									
ANR	923342	Decl							BOOL	BOOL	utf
ANR	923343	DeclStmt									
ANR	923344	Decl							BOOL	BOOL	never_utf
ANR	923345	DeclStmt									
ANR	923346	Decl							size_t	size_t	size
ANR	923347	DeclStmt									
ANR	923348	Decl							pcre_uchar	pcre_uchar *	code
ANR	923349	DeclStmt									
ANR	923350	Decl							const pcre_uchar	const pcre_uchar *	codestart
ANR	923351	DeclStmt									
ANR	923352	Decl							const pcre_uchar	const pcre_uchar *	ptr
ANR	923353	DeclStmt									
ANR	923354	Decl							compile_data	compile_data	compile_block
ANR	923355	DeclStmt									
ANR	923356	Decl							compile_data	compile_data *	cd
ANR	923357	DeclStmt									
ANR	923358	Decl							pcre_uchar	pcre_uchar [ COMPILE_WORK_SIZE ]	cworkspace
ANR	923359	DeclStmt									
ANR	923360	Decl							named_group	named_group [ NAMED_GROUP_LIST_SIZE ]	named_groups
ANR	923361	DeclStmt									
ANR	923362	Decl							int	int	newnl
ANR	923363	DeclStmt									
ANR	923364	Decl							int	int	newbsr
ANR	923365	DeclStmt									
ANR	923366	Decl							pcre_uint32	pcre_uint32	c
ANR	923367	DeclStmt									
ANR	923368	Decl							int	int	p
ANR	923369	DeclStmt									
ANR	923370	Decl							pcre_uint32	pcre_uint32	c
ANR	923371	DeclStmt									
ANR	923372	Decl							int	int	p
ANR	923373	DeclStmt									
ANR	923374	Decl							int	int	i
ANR	923375	DeclStmt									
ANR	923376	Decl							named_group	named_group *	ng
ANR	923377	DeclStmt									
ANR	923378	Decl							int	int	prev_recno
ANR	923379	DeclStmt									
ANR	923380	Decl							const pcre_uchar	const pcre_uchar *	groupptr
ANR	923381	DeclStmt									
ANR	923382	Decl							int	int	offset
ANR	923383	Decl							int	int	recno
ANR	923384	DeclStmt									
ANR	923385	Decl							pcre_uchar	pcre_uchar *	temp
ANR	923386	DeclStmt									
ANR	923387	Decl							pcre_uchar	pcre_uchar *	cc
ANR	923388	DeclStmt									
ANR	923389	Decl							int	int	fixed_length
ANR	923390	DeclStmt									
ANR	923391	Decl							pcre_uchar	pcre_uchar *	be
ANR	923392	DeclStmt									
ANR	923393	Decl							int	int	end_op
ANR	923394	DeclStmt									
ANR	923395	Decl							pcre_uchar	pcre_uchar	ch
ANR	923396	DeclStmt									
ANR	923397	Decl							const char	const char *	caseless
ANR	923398	DeclStmt									
ANR	923399	Decl							pcre_uchar	pcre_uchar	ch
ANR	923400	DeclStmt									
ANR	923401	Decl							const char	const char *	caseless
