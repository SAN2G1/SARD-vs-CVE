command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	678909	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_16.c								
ANR	678910	DeclStmt									
ANR	678911	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_16_ToLowerCaseTable
ANR	678912	DeclStmt									
ANR	678913	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_16_CtypeTable
ANR	678914	DeclStmt									
ANR	678915	Decl							const UChar	const UChar *	p
ANR	678916	Function	is_mbc_ambiguous	125:0:6574:6987							
ANR	678917	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		678916	0					
ANR	678918	CompoundStatement		127:0:6661:6987	678916	0					
ANR	678919	IdentifierDeclStatement	int v ;	128:2:6665:6670	678916	0	True				
ANR	678920	IdentifierDecl	v		678916	0					
ANR	678921	IdentifierDeclType	int		678916	0					
ANR	678922	Identifier	v		678916	1					
ANR	678923	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6674:6694	678916	1	True				
ANR	678924	IdentifierDecl	* p = * pp		678916	0					
ANR	678925	IdentifierDeclType	const UChar *		678916	0					
ANR	678926	Identifier	p		678916	1					
ANR	678927	AssignmentExpression	* p = * pp		678916	2		=			
ANR	678928	Identifier	p		678916	0					
ANR	678929	UnaryOperationExpression	* pp		678916	1					
ANR	678930	UnaryOperator	*		678916	0					
ANR	678931	Identifier	pp		678916	1					
ANR	678932	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		678916	2					
ANR	678933	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6703:6767	678916	0	True				
ANR	678934	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678916	0		&&			
ANR	678935	EqualityExpression	* p == 0xdf		678916	0		==			
ANR	678936	UnaryOperationExpression	* p		678916	0					
ANR	678937	UnaryOperator	*		678916	0					
ANR	678938	Identifier	p		678916	1					
ANR	678939	PrimaryExpression	0xdf		678916	1					
ANR	678940	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		678916	1		!=			
ANR	678941	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678916	0		&			
ANR	678942	Identifier	flag		678916	0					
ANR	678943	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678916	1					
ANR	678944	PrimaryExpression	0		678916	1					
ANR	678945	CompoundStatement		5:73:108:108	678916	1					
ANR	678946	ExpressionStatement	( * pp ) ++	132:4:6776:6783	678916	0	True				
ANR	678947	PostIncDecOperationExpression	( * pp ) ++		678916	0					
ANR	678948	UnaryOperationExpression	* pp		678916	0					
ANR	678949	UnaryOperator	*		678916	0					
ANR	678950	Identifier	pp		678916	1					
ANR	678951	IncDec	++		678916	1					
ANR	678952	ReturnStatement	return TRUE ;	133:4:6789:6800	678916	1	True				
ANR	678953	Identifier	TRUE		678916	0					
ANR	678954	ExpressionStatement	( * pp ) ++	136:2:6809:6816	678916	3	True				
ANR	678955	PostIncDecOperationExpression	( * pp ) ++		678916	0					
ANR	678956	UnaryOperationExpression	* pp		678916	0					
ANR	678957	UnaryOperator	*		678916	0					
ANR	678958	Identifier	pp		678916	1					
ANR	678959	IncDec	++		678916	1					
ANR	678960	ExpressionStatement	v = ( EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6820:6893	678916	4	True				
ANR	678961	AssignmentExpression	v = ( EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		678916	0		=			
ANR	678962	Identifier	v		678916	0					
ANR	678963	BitAndExpression	EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		678916	1		&			
ANR	678964	ArrayIndexing	EncISO_8859_16_CtypeTable [ * p ]		678916	0					
ANR	678965	Identifier	EncISO_8859_16_CtypeTable		678916	0					
ANR	678966	UnaryOperationExpression	* p		678916	1					
ANR	678967	UnaryOperator	*		678916	0					
ANR	678968	Identifier	p		678916	1					
ANR	678969	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		678916	1		|			
ANR	678970	Identifier	BIT_CTYPE_UPPER		678916	0					
ANR	678971	Identifier	BIT_CTYPE_LOWER		678916	1					
ANR	678972	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		678916	5					
ANR	678973	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6901:6926	678916	0	True				
ANR	678974	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		678916	0		!=			
ANR	678975	InclusiveOrExpression	v | BIT_CTYPE_LOWER		678916	0		|			
ANR	678976	Identifier	v		678916	0					
ANR	678977	Identifier	BIT_CTYPE_LOWER		678916	1					
ANR	678978	PrimaryExpression	0		678916	1					
ANR	678979	CompoundStatement		12:34:267:267	678916	1					
ANR	678980	ReturnStatement	return TRUE ;	139:4:6935:6946	678916	0	True				
ANR	678981	Identifier	TRUE		678916	0					
ANR	678982	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	142:2:6955:6985	678916	6	True				
ANR	678983	ConditionalExpression	v != 0 ? TRUE : FALSE		678916	0					
ANR	678984	Condition	v != 0		678916	0					
ANR	678985	EqualityExpression	v != 0		678916	0		!=			
ANR	678986	Identifier	v		678916	0					
ANR	678987	PrimaryExpression	0		678916	1					
ANR	678988	Identifier	TRUE		678916	1					
ANR	678989	Identifier	FALSE		678916	2					
ANR	678990	ReturnType	static int		678916	1					
ANR	678991	Identifier	is_mbc_ambiguous		678916	2					
ANR	678992	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		678916	3					
ANR	678993	Parameter	OnigCaseFoldType flag	126:17:6602:6622	678916	0	True				
ANR	678994	ParameterType	OnigCaseFoldType		678916	0					
ANR	678995	Identifier	flag		678916	1					
ANR	678996	Parameter	const UChar * * pp	126:40:6625:6640	678916	1	True				
ANR	678997	ParameterType	const UChar * *		678916	0					
ANR	678998	Identifier	pp		678916	1					
ANR	678999	Parameter	const UChar * end	126:58:6643:6658	678916	2	True				
ANR	679000	ParameterType	const UChar *		678916	0					
ANR	679001	Identifier	end		678916	1					
ANR	679002	CFGEntryNode	ENTRY		678916		True				
ANR	679003	CFGExitNode	EXIT		678916		True				
ANR	679004	Symbol	pp		678916						
ANR	679005	Symbol	EncISO_8859_16_CtypeTable		678916						
ANR	679006	Symbol	flag		678916						
ANR	679007	Symbol	* pp		678916						
ANR	679008	Symbol	TRUE		678916						
ANR	679009	Symbol	p		678916						
ANR	679010	Symbol	* EncISO_8859_16_CtypeTable		678916						
ANR	679011	Symbol	v		678916						
ANR	679012	Symbol	BIT_CTYPE_LOWER		678916						
ANR	679013	Symbol	end		678916						
ANR	679014	Symbol	* p		678916						
ANR	679015	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		678916						
ANR	679016	Symbol	BIT_CTYPE_UPPER		678916						
ANR	679017	Symbol	FALSE		678916						
ANR	679018	Symbol	* * p		678916						
ANR	679019	Function	is_code_ctype	146:0:6997:7157							
ANR	679020	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		679019	0					
ANR	679021	CompoundStatement		148:0:7062:7157	679019	0					
ANR	679022	IfStatement	if ( code < 256 )		679019	0					
ANR	679023	Condition	code < 256	149:6:7070:7079	679019	0	True				
ANR	679024	RelationalExpression	code < 256		679019	0		<			
ANR	679025	Identifier	code		679019	0					
ANR	679026	PrimaryExpression	256		679019	1					
ANR	679027	ReturnStatement	"return ENC_IS_ISO_8859_16_CTYPE ( code , ctype ) ;"	150:4:7086:7130	679019	1	True				
ANR	679028	CallExpression	"ENC_IS_ISO_8859_16_CTYPE ( code , ctype )"		679019	0					
ANR	679029	Callee	ENC_IS_ISO_8859_16_CTYPE		679019	0					
ANR	679030	Identifier	ENC_IS_ISO_8859_16_CTYPE		679019	0					
ANR	679031	ArgumentList	code		679019	1					
ANR	679032	Argument	code		679019	0					
ANR	679033	Identifier	code		679019	0					
ANR	679034	Argument	ctype		679019	1					
ANR	679035	Identifier	ctype		679019	0					
ANR	679036	ElseStatement	else		679019	0					
ANR	679037	ReturnStatement	return FALSE ;	152:4:7143:7155	679019	0	True				
ANR	679038	Identifier	FALSE		679019	0					
ANR	679039	ReturnType	static int		679019	1					
ANR	679040	Identifier	is_code_ctype		679019	2					
ANR	679041	ParameterList	"OnigCodePoint code , unsigned int ctype"		679019	3					
ANR	679042	Parameter	OnigCodePoint code	147:14:7022:7039	679019	0	True				
ANR	679043	ParameterType	OnigCodePoint		679019	0					
ANR	679044	Identifier	code		679019	1					
ANR	679045	Parameter	unsigned int ctype	147:34:7042:7059	679019	1	True				
ANR	679046	ParameterType	unsigned int		679019	0					
ANR	679047	Identifier	ctype		679019	1					
ANR	679048	CFGEntryNode	ENTRY		679019		True				
ANR	679049	CFGExitNode	EXIT		679019		True				
ANR	679050	Symbol	code		679019						
ANR	679051	Symbol	ctype		679019						
ANR	679052	Symbol	ENC_IS_ISO_8859_16_CTYPE		679019						
ANR	679053	Symbol	FALSE		679019						
ANR	679054	DeclStmt									
ANR	679055	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	679056	Function	apply_all_case_fold	202:0:7916:8172							
ANR	679057	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		679056	0					
ANR	679058	CompoundStatement		205:0:8015:8172	679056	0					
ANR	679059	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	206:2:8019:8170	679056	0	True				
ANR	679060	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		679056	0					
ANR	679061	Callee	onigenc_apply_all_case_fold_with_map		679056	0					
ANR	679062	Identifier	onigenc_apply_all_case_fold_with_map		679056	0					
ANR	679063	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679056	1					
ANR	679064	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679056	0					
ANR	679065	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679056	0		/			
ANR	679066	SizeofExpression	sizeof ( CaseFoldMap )		679056	0					
ANR	679067	Sizeof	sizeof		679056	0					
ANR	679068	SizeofOperand	CaseFoldMap		679056	1					
ANR	679069	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679056	1					
ANR	679070	Sizeof	sizeof		679056	0					
ANR	679071	SizeofOperand	OnigPairCaseFoldCodes		679056	1					
ANR	679072	Argument	CaseFoldMap		679056	1					
ANR	679073	Identifier	CaseFoldMap		679056	0					
ANR	679074	Argument	1		679056	2					
ANR	679075	PrimaryExpression	1		679056	0					
ANR	679076	Argument	flag		679056	3					
ANR	679077	Identifier	flag		679056	0					
ANR	679078	Argument	f		679056	4					
ANR	679079	Identifier	f		679056	0					
ANR	679080	Argument	arg		679056	5					
ANR	679081	Identifier	arg		679056	0					
ANR	679082	ReturnType	static int		679056	1					
ANR	679083	Identifier	apply_all_case_fold		679056	2					
ANR	679084	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		679056	3					
ANR	679085	Parameter	OnigCaseFoldType flag	203:20:7947:7967	679056	0	True				
ANR	679086	ParameterType	OnigCaseFoldType		679056	0					
ANR	679087	Identifier	flag		679056	1					
ANR	679088	Parameter	OnigApplyAllCaseFoldFunc f	204:6:7976:8001	679056	1	True				
ANR	679089	ParameterType	OnigApplyAllCaseFoldFunc		679056	0					
ANR	679090	Identifier	f		679056	1					
ANR	679091	Parameter	void * arg	204:34:8004:8012	679056	2	True				
ANR	679092	ParameterType	void *		679056	0					
ANR	679093	Identifier	arg		679056	1					
ANR	679094	CFGEntryNode	ENTRY		679056		True				
ANR	679095	CFGExitNode	EXIT		679056		True				
ANR	679096	Symbol	flag		679056						
ANR	679097	Symbol	f		679056						
ANR	679098	Symbol	arg		679056						
ANR	679099	Symbol	CaseFoldMap		679056						
ANR	679100	Symbol	onigenc_apply_all_case_fold_with_map		679056						
ANR	679101	Function	get_case_fold_codes_by_str	211:0:8175:8469							
ANR	679102	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		679101	0					
ANR	679103	CompoundStatement		214:0:8312:8469	679101	0					
ANR	679104	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	215:2:8316:8467	679101	0	True				
ANR	679105	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		679101	0					
ANR	679106	Callee	onigenc_get_case_fold_codes_by_str_with_map		679101	0					
ANR	679107	Identifier	onigenc_get_case_fold_codes_by_str_with_map		679101	0					
ANR	679108	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679101	1					
ANR	679109	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679101	0					
ANR	679110	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		679101	0		/			
ANR	679111	SizeofExpression	sizeof ( CaseFoldMap )		679101	0					
ANR	679112	Sizeof	sizeof		679101	0					
ANR	679113	SizeofOperand	CaseFoldMap		679101	1					
ANR	679114	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		679101	1					
ANR	679115	Sizeof	sizeof		679101	0					
ANR	679116	SizeofOperand	OnigPairCaseFoldCodes		679101	1					
ANR	679117	Argument	CaseFoldMap		679101	1					
ANR	679118	Identifier	CaseFoldMap		679101	0					
ANR	679119	Argument	1		679101	2					
ANR	679120	PrimaryExpression	1		679101	0					
ANR	679121	Argument	flag		679101	3					
ANR	679122	Identifier	flag		679101	0					
ANR	679123	Argument	p		679101	4					
ANR	679124	Identifier	p		679101	0					
ANR	679125	Argument	end		679101	5					
ANR	679126	Identifier	end		679101	0					
ANR	679127	Argument	items		679101	6					
ANR	679128	Identifier	items		679101	0					
ANR	679129	ReturnType	static int		679101	1					
ANR	679130	Identifier	get_case_fold_codes_by_str		679101	2					
ANR	679131	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		679101	3					
ANR	679132	Parameter	OnigCaseFoldType flag	212:27:8213:8233	679101	0	True				
ANR	679133	ParameterType	OnigCaseFoldType		679101	0					
ANR	679134	Identifier	flag		679101	1					
ANR	679135	Parameter	const OnigUChar * p	213:4:8240:8257	679101	1	True				
ANR	679136	ParameterType	const OnigUChar *		679101	0					
ANR	679137	Identifier	p		679101	1					
ANR	679138	Parameter	const OnigUChar * end	213:24:8260:8279	679101	2	True				
ANR	679139	ParameterType	const OnigUChar *		679101	0					
ANR	679140	Identifier	end		679101	1					
ANR	679141	Parameter	OnigCaseFoldCodeItem items [ ]	213:46:8282:8309	679101	3	True				
ANR	679142	ParameterType	OnigCaseFoldCodeItem [ ]		679101	0					
ANR	679143	Identifier	items		679101	1					
ANR	679144	CFGEntryNode	ENTRY		679101		True				
ANR	679145	CFGExitNode	EXIT		679101		True				
ANR	679146	Symbol	p		679101						
ANR	679147	Symbol	flag		679101						
ANR	679148	Symbol	end		679101						
ANR	679149	Symbol	CaseFoldMap		679101						
ANR	679150	Symbol	onigenc_get_case_fold_codes_by_str_with_map		679101						
ANR	679151	Symbol	items		679101						
ANR	679152	DeclStmt									
ANR	679153	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_16
