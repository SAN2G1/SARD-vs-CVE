command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1095869	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativeSPARC_common.c								
ANR	1095870	Function	sljit_get_platform_name	27:0:1455:1561							
ANR	1095871	FunctionDef	sljit_get_platform_name ()		1095870	0					
ANR	1095872	CompoundStatement		28:0:1528:1561	1095870	0					
ANR	1095873	Statement	return	29:1:1531:1536	1095870	0	True				
ANR	1095874	Statement	"""SPARC"""	29:8:1538:1544	1095870	1	True				
ANR	1095875	ExpressionStatement	SLJIT_CPUINFO	29:16:1546:1559	1095870	2	True				
ANR	1095876	Identifier	SLJIT_CPUINFO		1095870	0					
ANR	1095877	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1095870	1					
ANR	1095878	Identifier	sljit_get_platform_name		1095870	2					
ANR	1095879	ParameterList			1095870	3					
ANR	1095880	CFGEntryNode	ENTRY		1095870		True				
ANR	1095881	CFGExitNode	EXIT		1095870		True				
ANR	1095882	DeclStmt									
ANR	1095883	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1095884	Function	sparc_cache_flush	36:0:1663:2508							
ANR	1095885	FunctionDef	"sparc_cache_flush (sljit_ins * from , sljit_ins * to)"		1095884	0					
ANR	1095886	CompoundStatement		37:0:1725:2508	1095884	0					
ANR	1095887	Statement	__asm	39:1:1774:1778	1095884	0	True				
ANR	1095888	Statement	(	39:7:1780:1780	1095884	1	True				
ANR	1095889	Statement	"""cmp %i0, %i1\\n"""	41:2:1815:1830	1095884	2	True				
ANR	1095890	Statement	"""be .leave\\n"""	42:2:1834:1846	1095884	3	True				
ANR	1095891	Statement	"""nop\\n"""	43:2:1850:1856	1095884	4	True				
ANR	1095892	Statement	""".mainloop:\\n"""	46:2:1891:1904	1095884	5	True				
ANR	1095893	Statement	"""flush %i0\\n"""	47:2:1908:1920	1095884	6	True				
ANR	1095894	Statement	"""add %i0, 8, %i0\\n"""	48:2:1924:1942	1095884	7	True				
ANR	1095895	Statement	"""cmp %i0, %i1\\n"""	49:2:1946:1961	1095884	8	True				
ANR	1095896	Statement	"""bcs .mainloop\\n"""	50:2:1965:1981	1095884	9	True				
ANR	1095897	Statement	"""nop\\n"""	51:2:1985:1991	1095884	10	True				
ANR	1095898	Statement	"""bne .leave\\n"""	54:2:2035:2048	1095884	11	True				
ANR	1095899	Statement	"""sub %i0, 4, %i0\\n"""	57:2:2136:2154	1095884	12	True				
ANR	1095900	Statement	"""flush %i0\\n"""	58:2:2158:2170	1095884	13	True				
ANR	1095901	Statement	""".leave:"""	59:2:2174:2182	1095884	14	True				
ANR	1095902	Statement	)	60:1:2185:2185	1095884	15	True				
ANR	1095903	ExpressionStatement		60:2:2186:2186	1095884	16	True				
ANR	1095904	ReturnType	static void		1095884	1					
ANR	1095905	Identifier	sparc_cache_flush		1095884	2					
ANR	1095906	ParameterList	"sljit_ins * from , sljit_ins * to"		1095884	3					
ANR	1095907	Parameter	sljit_ins * from	36:30:1693:1707	1095884	0	True				
ANR	1095908	ParameterType	sljit_ins *		1095884	0					
ANR	1095909	Identifier	from		1095884	1					
ANR	1095910	Parameter	sljit_ins * to	36:47:1710:1722	1095884	1	True				
ANR	1095911	ParameterType	sljit_ins *		1095884	0					
ANR	1095912	Identifier	to		1095884	1					
ANR	1095913	CFGEntryNode	ENTRY		1095884		True				
ANR	1095914	CFGExitNode	EXIT		1095884		True				
ANR	1095915	Symbol	from		1095884						
ANR	1095916	Symbol	to		1095884						
ANR	1095917	DeclStmt									
ANR	1095918	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 6 ]	reg_map
ANR	1095919	Function	push_inst	184:0:6285:6732							
ANR	1095920	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins , sljit_si delay_slot)"		1095919	0					
ANR	1095921	CompoundStatement		185:0:6380:6732	1095919	0					
ANR	1095922	IdentifierDeclStatement	sljit_ins * ptr ;	186:1:6383:6397	1095919	0	True				
ANR	1095923	IdentifierDecl	* ptr		1095919	0					
ANR	1095924	IdentifierDeclType	sljit_ins *		1095919	0					
ANR	1095925	Identifier	ptr		1095919	1					
ANR	1095926	ExpressionStatement	SLJIT_ASSERT ( ( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS || ( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f ) )	187:1:6400:6563	1095919	1	True				
ANR	1095927	CallExpression	SLJIT_ASSERT ( ( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS || ( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f ) )		1095919	0					
ANR	1095928	Callee	SLJIT_ASSERT		1095919	0					
ANR	1095929	Identifier	SLJIT_ASSERT		1095919	0					
ANR	1095930	ArgumentList	( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS || ( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f )		1095919	1					
ANR	1095931	Argument	( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS || ( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f )		1095919	0					
ANR	1095932	OrExpression	( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS || ( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f )		1095919	0		||			
ANR	1095933	EqualityExpression	( delay_slot & DST_INS_MASK ) == UNMOVABLE_INS		1095919	0		==			
ANR	1095934	BitAndExpression	delay_slot & DST_INS_MASK		1095919	0		&			
ANR	1095935	Identifier	delay_slot		1095919	0					
ANR	1095936	Identifier	DST_INS_MASK		1095919	1					
ANR	1095937	Identifier	UNMOVABLE_INS		1095919	1					
ANR	1095938	OrExpression	( delay_slot & DST_INS_MASK ) == MOVABLE_INS || ( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f )		1095919	1		||			
ANR	1095939	EqualityExpression	( delay_slot & DST_INS_MASK ) == MOVABLE_INS		1095919	0		==			
ANR	1095940	BitAndExpression	delay_slot & DST_INS_MASK		1095919	0		&			
ANR	1095941	Identifier	delay_slot		1095919	0					
ANR	1095942	Identifier	DST_INS_MASK		1095919	1					
ANR	1095943	Identifier	MOVABLE_INS		1095919	1					
ANR	1095944	EqualityExpression	( delay_slot & DST_INS_MASK ) == ( ( ins >> 25 ) & 0x1f )		1095919	1		==			
ANR	1095945	BitAndExpression	delay_slot & DST_INS_MASK		1095919	0		&			
ANR	1095946	Identifier	delay_slot		1095919	0					
ANR	1095947	Identifier	DST_INS_MASK		1095919	1					
ANR	1095948	BitAndExpression	( ins >> 25 ) & 0x1f		1095919	1		&			
ANR	1095949	ShiftExpression	ins >> 25		1095919	0		>>			
ANR	1095950	Identifier	ins		1095919	0					
ANR	1095951	PrimaryExpression	25		1095919	1					
ANR	1095952	PrimaryExpression	0x1f		1095919	1					
ANR	1095953	ExpressionStatement	"ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"	190:1:6566:6623	1095919	2	True				
ANR	1095954	AssignmentExpression	"ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1095919	0		=			
ANR	1095955	Identifier	ptr		1095919	0					
ANR	1095956	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1095919	1					
ANR	1095957	CastTarget	sljit_ins *		1095919	0					
ANR	1095958	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1095919	1					
ANR	1095959	Callee	ensure_buf		1095919	0					
ANR	1095960	Identifier	ensure_buf		1095919	0					
ANR	1095961	ArgumentList	compiler		1095919	1					
ANR	1095962	Argument	compiler		1095919	0					
ANR	1095963	Identifier	compiler		1095919	0					
ANR	1095964	Argument	sizeof ( sljit_ins )		1095919	1					
ANR	1095965	SizeofExpression	sizeof ( sljit_ins )		1095919	0					
ANR	1095966	Sizeof	sizeof		1095919	0					
ANR	1095967	SizeofOperand	sljit_ins		1095919	1					
ANR	1095968	ExpressionStatement	FAIL_IF ( ! ptr )	191:1:6626:6639	1095919	3	True				
ANR	1095969	CallExpression	FAIL_IF ( ! ptr )		1095919	0					
ANR	1095970	Callee	FAIL_IF		1095919	0					
ANR	1095971	Identifier	FAIL_IF		1095919	0					
ANR	1095972	ArgumentList	! ptr		1095919	1					
ANR	1095973	Argument	! ptr		1095919	0					
ANR	1095974	UnaryOperationExpression	! ptr		1095919	0					
ANR	1095975	UnaryOperator	!		1095919	0					
ANR	1095976	Identifier	ptr		1095919	1					
ANR	1095977	ExpressionStatement	* ptr = ins	192:1:6642:6652	1095919	4	True				
ANR	1095978	AssignmentExpression	* ptr = ins		1095919	0		=			
ANR	1095979	UnaryOperationExpression	* ptr		1095919	0					
ANR	1095980	UnaryOperator	*		1095919	0					
ANR	1095981	Identifier	ptr		1095919	1					
ANR	1095982	Identifier	ins		1095919	1					
ANR	1095983	ExpressionStatement	compiler -> size ++	193:1:6655:6671	1095919	5	True				
ANR	1095984	PostIncDecOperationExpression	compiler -> size ++		1095919	0					
ANR	1095985	PtrMemberAccess	compiler -> size		1095919	0					
ANR	1095986	Identifier	compiler		1095919	0					
ANR	1095987	Identifier	size		1095919	1					
ANR	1095988	IncDec	++		1095919	1					
ANR	1095989	ExpressionStatement	compiler -> delay_slot = delay_slot	194:1:6674:6707	1095919	6	True				
ANR	1095990	AssignmentExpression	compiler -> delay_slot = delay_slot		1095919	0		=			
ANR	1095991	PtrMemberAccess	compiler -> delay_slot		1095919	0					
ANR	1095992	Identifier	compiler		1095919	0					
ANR	1095993	Identifier	delay_slot		1095919	1					
ANR	1095994	Identifier	delay_slot		1095919	1					
ANR	1095995	ReturnStatement	return SLJIT_SUCCESS ;	195:1:6710:6730	1095919	7	True				
ANR	1095996	Identifier	SLJIT_SUCCESS		1095919	0					
ANR	1095997	ReturnType	static sljit_si		1095919	1					
ANR	1095998	Identifier	push_inst		1095919	2					
ANR	1095999	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins , sljit_si delay_slot"		1095919	3					
ANR	1096000	Parameter	struct sljit_compiler * compiler	184:26:6311:6341	1095919	0	True				
ANR	1096001	ParameterType	struct sljit_compiler *		1095919	0					
ANR	1096002	Identifier	compiler		1095919	1					
ANR	1096003	Parameter	sljit_ins ins	184:59:6344:6356	1095919	1	True				
ANR	1096004	ParameterType	sljit_ins		1095919	0					
ANR	1096005	Identifier	ins		1095919	1					
ANR	1096006	Parameter	sljit_si delay_slot	184:74:6359:6377	1095919	2	True				
ANR	1096007	ParameterType	sljit_si		1095919	0					
ANR	1096008	Identifier	delay_slot		1095919	1					
ANR	1096009	CFGEntryNode	ENTRY		1095919		True				
ANR	1096010	CFGExitNode	EXIT		1095919		True				
ANR	1096011	Symbol	UNMOVABLE_INS		1095919						
ANR	1096012	Symbol	DST_INS_MASK		1095919						
ANR	1096013	Symbol	SLJIT_SUCCESS		1095919						
ANR	1096014	Symbol	* compiler		1095919						
ANR	1096015	Symbol	delay_slot		1095919						
ANR	1096016	Symbol	ins		1095919						
ANR	1096017	Symbol	ptr		1095919						
ANR	1096018	Symbol	compiler -> size		1095919						
ANR	1096019	Symbol	ensure_buf		1095919						
ANR	1096020	Symbol	* ptr		1095919						
ANR	1096021	Symbol	compiler -> delay_slot		1095919						
ANR	1096022	Symbol	compiler		1095919						
ANR	1096023	Symbol	MOVABLE_INS		1095919						
ANR	1096024	Function	detect_jump_type	198:0:6735:8438							
ANR	1096025	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1096024	0					
ANR	1096026	CompoundStatement		199:0:6846:8438	1096024	0					
ANR	1096027	IdentifierDeclStatement	sljit_sw diff ;	200:1:6849:6862	1096024	0	True				
ANR	1096028	IdentifierDecl	diff		1096024	0					
ANR	1096029	IdentifierDeclType	sljit_sw		1096024	0					
ANR	1096030	Identifier	diff		1096024	1					
ANR	1096031	IdentifierDeclStatement	sljit_uw target_addr ;	201:1:6865:6885	1096024	1	True				
ANR	1096032	IdentifierDecl	target_addr		1096024	0					
ANR	1096033	IdentifierDeclType	sljit_uw		1096024	0					
ANR	1096034	Identifier	target_addr		1096024	1					
ANR	1096035	IdentifierDeclStatement	sljit_ins * inst ;	202:1:6888:6903	1096024	2	True				
ANR	1096036	IdentifierDecl	* inst		1096024	0					
ANR	1096037	IdentifierDeclType	sljit_ins *		1096024	0					
ANR	1096038	Identifier	inst		1096024	1					
ANR	1096039	IdentifierDeclStatement	sljit_ins saved_inst ;	203:1:6906:6926	1096024	3	True				
ANR	1096040	IdentifierDecl	saved_inst		1096024	0					
ANR	1096041	IdentifierDeclType	sljit_ins		1096024	0					
ANR	1096042	Identifier	saved_inst		1096024	1					
ANR	1096043	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1096024	4					
ANR	1096044	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	205:5:6934:6968	1096024	0	True				
ANR	1096045	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1096024	0		&			
ANR	1096046	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096047	Identifier	jump		1096024	0					
ANR	1096048	Identifier	flags		1096024	1					
ANR	1096049	Identifier	SLJIT_REWRITABLE_JUMP		1096024	1					
ANR	1096050	ReturnStatement	return code_ptr ;	206:2:6973:6988	1096024	1	True				
ANR	1096051	Identifier	code_ptr		1096024	0					
ANR	1096052	IfStatement	if ( jump -> flags & JUMP_ADDR )		1096024	5					
ANR	1096053	Condition	jump -> flags & JUMP_ADDR	208:5:6996:7018	1096024	0	True				
ANR	1096054	BitAndExpression	jump -> flags & JUMP_ADDR		1096024	0		&			
ANR	1096055	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096056	Identifier	jump		1096024	0					
ANR	1096057	Identifier	flags		1096024	1					
ANR	1096058	Identifier	JUMP_ADDR		1096024	1					
ANR	1096059	ExpressionStatement	target_addr = jump -> u . target	209:2:7023:7051	1096024	1	True				
ANR	1096060	AssignmentExpression	target_addr = jump -> u . target		1096024	0		=			
ANR	1096061	Identifier	target_addr		1096024	0					
ANR	1096062	MemberAccess	jump -> u . target		1096024	1					
ANR	1096063	PtrMemberAccess	jump -> u		1096024	0					
ANR	1096064	Identifier	jump		1096024	0					
ANR	1096065	Identifier	u		1096024	1					
ANR	1096066	Identifier	target		1096024	1					
ANR	1096067	ElseStatement	else		1096024	0					
ANR	1096068	CompoundStatement		12:6:212:212	1096024	0					
ANR	1096069	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	211:2:7063:7101	1096024	0	True				
ANR	1096070	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1096024	0					
ANR	1096071	Callee	SLJIT_ASSERT		1096024	0					
ANR	1096072	Identifier	SLJIT_ASSERT		1096024	0					
ANR	1096073	ArgumentList	jump -> flags & JUMP_LABEL		1096024	1					
ANR	1096074	Argument	jump -> flags & JUMP_LABEL		1096024	0					
ANR	1096075	BitAndExpression	jump -> flags & JUMP_LABEL		1096024	0		&			
ANR	1096076	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096077	Identifier	jump		1096024	0					
ANR	1096078	Identifier	flags		1096024	1					
ANR	1096079	Identifier	JUMP_LABEL		1096024	1					
ANR	1096080	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	212:2:7105:7157	1096024	1	True				
ANR	1096081	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1096024	0		=			
ANR	1096082	Identifier	target_addr		1096024	0					
ANR	1096083	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1096024	1					
ANR	1096084	CastTarget	sljit_uw		1096024	0					
ANR	1096085	AdditiveExpression	code + jump -> u . label -> size		1096024	1		+			
ANR	1096086	Identifier	code		1096024	0					
ANR	1096087	PtrMemberAccess	jump -> u . label -> size		1096024	1					
ANR	1096088	MemberAccess	jump -> u . label		1096024	0					
ANR	1096089	PtrMemberAccess	jump -> u		1096024	0					
ANR	1096090	Identifier	jump		1096024	0					
ANR	1096091	Identifier	u		1096024	1					
ANR	1096092	Identifier	label		1096024	1					
ANR	1096093	Identifier	size		1096024	1					
ANR	1096094	ExpressionStatement	inst = ( sljit_ins * ) jump -> addr	214:1:7163:7192	1096024	6	True				
ANR	1096095	AssignmentExpression	inst = ( sljit_ins * ) jump -> addr		1096024	0		=			
ANR	1096096	Identifier	inst		1096024	0					
ANR	1096097	CastExpression	( sljit_ins * ) jump -> addr		1096024	1					
ANR	1096098	CastTarget	sljit_ins *		1096024	0					
ANR	1096099	PtrMemberAccess	jump -> addr		1096024	1					
ANR	1096100	Identifier	jump		1096024	0					
ANR	1096101	Identifier	addr		1096024	1					
ANR	1096102	IfStatement	if ( jump -> flags & IS_CALL )		1096024	7					
ANR	1096103	Condition	jump -> flags & IS_CALL	217:5:7261:7281	1096024	0	True				
ANR	1096104	BitAndExpression	jump -> flags & IS_CALL		1096024	0		&			
ANR	1096105	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096106	Identifier	jump		1096024	0					
ANR	1096107	Identifier	flags		1096024	1					
ANR	1096108	Identifier	IS_CALL		1096024	1					
ANR	1096109	CompoundStatement		19:28:437:437	1096024	1					
ANR	1096110	ExpressionStatement	jump -> flags |= PATCH_CALL	219:2:7334:7359	1096024	0	True				
ANR	1096111	AssignmentExpression	jump -> flags |= PATCH_CALL		1096024	0		|=			
ANR	1096112	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096113	Identifier	jump		1096024	0					
ANR	1096114	Identifier	flags		1096024	1					
ANR	1096115	Identifier	PATCH_CALL		1096024	1					
ANR	1096116	IfStatement	if ( jump -> flags & IS_MOVABLE )		1096024	1					
ANR	1096117	Condition	jump -> flags & IS_MOVABLE	220:6:7367:7390	1096024	0	True				
ANR	1096118	BitAndExpression	jump -> flags & IS_MOVABLE		1096024	0		&			
ANR	1096119	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096120	Identifier	jump		1096024	0					
ANR	1096121	Identifier	flags		1096024	1					
ANR	1096122	Identifier	IS_MOVABLE		1096024	1					
ANR	1096123	CompoundStatement		22:32:546:546	1096024	1					
ANR	1096124	ExpressionStatement	inst [ 0 ] = inst [ - 1 ]	221:3:7398:7416	1096024	0	True				
ANR	1096125	AssignmentExpression	inst [ 0 ] = inst [ - 1 ]		1096024	0		=			
ANR	1096126	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096127	Identifier	inst		1096024	0					
ANR	1096128	PrimaryExpression	0		1096024	1					
ANR	1096129	ArrayIndexing	inst [ - 1 ]		1096024	1					
ANR	1096130	Identifier	inst		1096024	0					
ANR	1096131	UnaryOperationExpression	- 1		1096024	1					
ANR	1096132	UnaryOperator	-		1096024	0					
ANR	1096133	PrimaryExpression	1		1096024	1					
ANR	1096134	ExpressionStatement	inst [ - 1 ] = CALL	222:3:7421:7436	1096024	1	True				
ANR	1096135	AssignmentExpression	inst [ - 1 ] = CALL		1096024	0		=			
ANR	1096136	ArrayIndexing	inst [ - 1 ]		1096024	0					
ANR	1096137	Identifier	inst		1096024	0					
ANR	1096138	UnaryOperationExpression	- 1		1096024	1					
ANR	1096139	UnaryOperator	-		1096024	0					
ANR	1096140	PrimaryExpression	1		1096024	1					
ANR	1096141	Identifier	CALL		1096024	1					
ANR	1096142	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	223:3:7441:7472	1096024	2	True				
ANR	1096143	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1096024	0		-=			
ANR	1096144	PtrMemberAccess	jump -> addr		1096024	0					
ANR	1096145	Identifier	jump		1096024	0					
ANR	1096146	Identifier	addr		1096024	1					
ANR	1096147	SizeofExpression	sizeof ( sljit_ins )		1096024	1					
ANR	1096148	Sizeof	sizeof		1096024	0					
ANR	1096149	SizeofOperand	sljit_ins		1096024	1					
ANR	1096150	ReturnStatement	return inst ;	224:3:7477:7488	1096024	3	True				
ANR	1096151	Identifier	inst		1096024	0					
ANR	1096152	ExpressionStatement	inst [ 0 ] = CALL	226:2:7496:7510	1096024	2	True				
ANR	1096153	AssignmentExpression	inst [ 0 ] = CALL		1096024	0		=			
ANR	1096154	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096155	Identifier	inst		1096024	0					
ANR	1096156	PrimaryExpression	0		1096024	1					
ANR	1096157	Identifier	CALL		1096024	1					
ANR	1096158	ExpressionStatement	inst [ 1 ] = NOP	227:2:7514:7527	1096024	3	True				
ANR	1096159	AssignmentExpression	inst [ 1 ] = NOP		1096024	0		=			
ANR	1096160	ArrayIndexing	inst [ 1 ]		1096024	0					
ANR	1096161	Identifier	inst		1096024	0					
ANR	1096162	PrimaryExpression	1		1096024	1					
ANR	1096163	Identifier	NOP		1096024	1					
ANR	1096164	ReturnStatement	return inst + 1 ;	228:2:7531:7546	1096024	4	True				
ANR	1096165	AdditiveExpression	inst + 1		1096024	0		+			
ANR	1096166	Identifier	inst		1096024	0					
ANR	1096167	PrimaryExpression	1		1096024	1					
ANR	1096168	IfStatement	if ( jump -> flags & IS_COND )		1096024	8					
ANR	1096169	Condition	jump -> flags & IS_COND	235:5:7669:7689	1096024	0	True				
ANR	1096170	BitAndExpression	jump -> flags & IS_COND		1096024	0		&			
ANR	1096171	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096172	Identifier	jump		1096024	0					
ANR	1096173	Identifier	flags		1096024	1					
ANR	1096174	Identifier	IS_COND		1096024	1					
ANR	1096175	ExpressionStatement	inst --	236:2:7694:7700	1096024	1	True				
ANR	1096176	PostIncDecOperationExpression	inst --		1096024	0					
ANR	1096177	Identifier	inst		1096024	0					
ANR	1096178	IncDec	--		1096024	1					
ANR	1096179	IfStatement	if ( jump -> flags & IS_MOVABLE )		1096024	9					
ANR	1096180	Condition	jump -> flags & IS_MOVABLE	238:5:7708:7731	1096024	0	True				
ANR	1096181	BitAndExpression	jump -> flags & IS_MOVABLE		1096024	0		&			
ANR	1096182	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096183	Identifier	jump		1096024	0					
ANR	1096184	Identifier	flags		1096024	1					
ANR	1096185	Identifier	IS_MOVABLE		1096024	1					
ANR	1096186	CompoundStatement		40:31:887:887	1096024	1					
ANR	1096187	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst - 1 ) ) >> 2	239:2:7738:7796	1096024	0	True				
ANR	1096188	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst - 1 ) ) >> 2		1096024	0		=			
ANR	1096189	Identifier	diff		1096024	0					
ANR	1096190	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst - 1 ) ) >> 2		1096024	1		>>			
ANR	1096191	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( inst - 1 )		1096024	0		-			
ANR	1096192	CastExpression	( sljit_sw ) target_addr		1096024	0					
ANR	1096193	CastTarget	sljit_sw		1096024	0					
ANR	1096194	Identifier	target_addr		1096024	1					
ANR	1096195	CastExpression	( sljit_sw ) ( inst - 1 )		1096024	1					
ANR	1096196	CastTarget	sljit_sw		1096024	0					
ANR	1096197	AdditiveExpression	inst - 1		1096024	1		-			
ANR	1096198	Identifier	inst		1096024	0					
ANR	1096199	PrimaryExpression	1		1096024	1					
ANR	1096200	PrimaryExpression	2		1096024	1					
ANR	1096201	IfStatement	if ( diff <= MAX_DISP && diff >= MIN_DISP )		1096024	1					
ANR	1096202	Condition	diff <= MAX_DISP && diff >= MIN_DISP	240:6:7804:7839	1096024	0	True				
ANR	1096203	AndExpression	diff <= MAX_DISP && diff >= MIN_DISP		1096024	0		&&			
ANR	1096204	RelationalExpression	diff <= MAX_DISP		1096024	0		<=			
ANR	1096205	Identifier	diff		1096024	0					
ANR	1096206	Identifier	MAX_DISP		1096024	1					
ANR	1096207	RelationalExpression	diff >= MIN_DISP		1096024	1		>=			
ANR	1096208	Identifier	diff		1096024	0					
ANR	1096209	Identifier	MIN_DISP		1096024	1					
ANR	1096210	CompoundStatement		42:44:995:995	1096024	1					
ANR	1096211	ExpressionStatement	jump -> flags |= PATCH_B	241:3:7847:7869	1096024	0	True				
ANR	1096212	AssignmentExpression	jump -> flags |= PATCH_B		1096024	0		|=			
ANR	1096213	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096214	Identifier	jump		1096024	0					
ANR	1096215	Identifier	flags		1096024	1					
ANR	1096216	Identifier	PATCH_B		1096024	1					
ANR	1096217	ExpressionStatement	inst --	242:3:7874:7880	1096024	1	True				
ANR	1096218	PostIncDecOperationExpression	inst --		1096024	0					
ANR	1096219	Identifier	inst		1096024	0					
ANR	1096220	IncDec	--		1096024	1					
ANR	1096221	IfStatement	if ( jump -> flags & IS_COND )		1096024	2					
ANR	1096222	Condition	jump -> flags & IS_COND	243:7:7889:7909	1096024	0	True				
ANR	1096223	BitAndExpression	jump -> flags & IS_COND		1096024	0		&			
ANR	1096224	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096225	Identifier	jump		1096024	0					
ANR	1096226	Identifier	flags		1096024	1					
ANR	1096227	Identifier	IS_COND		1096024	1					
ANR	1096228	CompoundStatement		45:30:1065:1065	1096024	1					
ANR	1096229	ExpressionStatement	saved_inst = inst [ 0 ]	244:4:7918:7938	1096024	0	True				
ANR	1096230	AssignmentExpression	saved_inst = inst [ 0 ]		1096024	0		=			
ANR	1096231	Identifier	saved_inst		1096024	0					
ANR	1096232	ArrayIndexing	inst [ 0 ]		1096024	1					
ANR	1096233	Identifier	inst		1096024	0					
ANR	1096234	PrimaryExpression	0		1096024	1					
ANR	1096235	ExpressionStatement	inst [ 0 ] = inst [ 1 ] ^ ( 1 << 28 )	245:4:7944:7973	1096024	1	True				
ANR	1096236	AssignmentExpression	inst [ 0 ] = inst [ 1 ] ^ ( 1 << 28 )		1096024	0		=			
ANR	1096237	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096238	Identifier	inst		1096024	0					
ANR	1096239	PrimaryExpression	0		1096024	1					
ANR	1096240	ExclusiveOrExpression	inst [ 1 ] ^ ( 1 << 28 )		1096024	1		^			
ANR	1096241	ArrayIndexing	inst [ 1 ]		1096024	0					
ANR	1096242	Identifier	inst		1096024	0					
ANR	1096243	PrimaryExpression	1		1096024	1					
ANR	1096244	ShiftExpression	1 << 28		1096024	1		<<			
ANR	1096245	PrimaryExpression	1		1096024	0					
ANR	1096246	PrimaryExpression	28		1096024	1					
ANR	1096247	ExpressionStatement	inst [ 1 ] = saved_inst	246:4:7979:7999	1096024	2	True				
ANR	1096248	AssignmentExpression	inst [ 1 ] = saved_inst		1096024	0		=			
ANR	1096249	ArrayIndexing	inst [ 1 ]		1096024	0					
ANR	1096250	Identifier	inst		1096024	0					
ANR	1096251	PrimaryExpression	1		1096024	1					
ANR	1096252	Identifier	saved_inst		1096024	1					
ANR	1096253	ElseStatement	else		1096024	0					
ANR	1096254	CompoundStatement		49:10:1164:1164	1096024	0					
ANR	1096255	ExpressionStatement	inst [ 1 ] = inst [ 0 ]	248:4:8017:8034	1096024	0	True				
ANR	1096256	AssignmentExpression	inst [ 1 ] = inst [ 0 ]		1096024	0		=			
ANR	1096257	ArrayIndexing	inst [ 1 ]		1096024	0					
ANR	1096258	Identifier	inst		1096024	0					
ANR	1096259	PrimaryExpression	1		1096024	1					
ANR	1096260	ArrayIndexing	inst [ 0 ]		1096024	1					
ANR	1096261	Identifier	inst		1096024	0					
ANR	1096262	PrimaryExpression	0		1096024	1					
ANR	1096263	ExpressionStatement	inst [ 0 ] = BICC | DA ( 0x8 )	249:4:8040:8064	1096024	1	True				
ANR	1096264	AssignmentExpression	inst [ 0 ] = BICC | DA ( 0x8 )		1096024	0		=			
ANR	1096265	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096266	Identifier	inst		1096024	0					
ANR	1096267	PrimaryExpression	0		1096024	1					
ANR	1096268	InclusiveOrExpression	BICC | DA ( 0x8 )		1096024	1		|			
ANR	1096269	Identifier	BICC		1096024	0					
ANR	1096270	CallExpression	DA ( 0x8 )		1096024	1					
ANR	1096271	Callee	DA		1096024	0					
ANR	1096272	Identifier	DA		1096024	0					
ANR	1096273	ArgumentList	0x8		1096024	1					
ANR	1096274	Argument	0x8		1096024	0					
ANR	1096275	PrimaryExpression	0x8		1096024	0					
ANR	1096276	ExpressionStatement	jump -> addr = ( sljit_uw ) inst	251:3:8074:8101	1096024	3	True				
ANR	1096277	AssignmentExpression	jump -> addr = ( sljit_uw ) inst		1096024	0		=			
ANR	1096278	PtrMemberAccess	jump -> addr		1096024	0					
ANR	1096279	Identifier	jump		1096024	0					
ANR	1096280	Identifier	addr		1096024	1					
ANR	1096281	CastExpression	( sljit_uw ) inst		1096024	1					
ANR	1096282	CastTarget	sljit_uw		1096024	0					
ANR	1096283	Identifier	inst		1096024	1					
ANR	1096284	ReturnStatement	return inst + 1 ;	252:3:8106:8121	1096024	4	True				
ANR	1096285	AdditiveExpression	inst + 1		1096024	0		+			
ANR	1096286	Identifier	inst		1096024	0					
ANR	1096287	PrimaryExpression	1		1096024	1					
ANR	1096288	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2	256:1:8132:8186	1096024	10	True				
ANR	1096289	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2		1096024	0		=			
ANR	1096290	Identifier	diff		1096024	0					
ANR	1096291	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( inst ) ) >> 2		1096024	1		>>			
ANR	1096292	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( inst )		1096024	0		-			
ANR	1096293	CastExpression	( sljit_sw ) target_addr		1096024	0					
ANR	1096294	CastTarget	sljit_sw		1096024	0					
ANR	1096295	Identifier	target_addr		1096024	1					
ANR	1096296	CastExpression	( sljit_sw ) ( inst )		1096024	1					
ANR	1096297	CastTarget	sljit_sw		1096024	0					
ANR	1096298	Identifier	inst		1096024	1					
ANR	1096299	PrimaryExpression	2		1096024	1					
ANR	1096300	IfStatement	if ( diff <= MAX_DISP && diff >= MIN_DISP )		1096024	11					
ANR	1096301	Condition	diff <= MAX_DISP && diff >= MIN_DISP	257:5:8193:8228	1096024	0	True				
ANR	1096302	AndExpression	diff <= MAX_DISP && diff >= MIN_DISP		1096024	0		&&			
ANR	1096303	RelationalExpression	diff <= MAX_DISP		1096024	0		<=			
ANR	1096304	Identifier	diff		1096024	0					
ANR	1096305	Identifier	MAX_DISP		1096024	1					
ANR	1096306	RelationalExpression	diff >= MIN_DISP		1096024	1		>=			
ANR	1096307	Identifier	diff		1096024	0					
ANR	1096308	Identifier	MIN_DISP		1096024	1					
ANR	1096309	CompoundStatement		59:43:1384:1384	1096024	1					
ANR	1096310	ExpressionStatement	jump -> flags |= PATCH_B	258:2:8235:8257	1096024	0	True				
ANR	1096311	AssignmentExpression	jump -> flags |= PATCH_B		1096024	0		|=			
ANR	1096312	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096313	Identifier	jump		1096024	0					
ANR	1096314	Identifier	flags		1096024	1					
ANR	1096315	Identifier	PATCH_B		1096024	1					
ANR	1096316	IfStatement	if ( jump -> flags & IS_COND )		1096024	1					
ANR	1096317	Condition	jump -> flags & IS_COND	259:6:8265:8285	1096024	0	True				
ANR	1096318	BitAndExpression	jump -> flags & IS_COND		1096024	0		&			
ANR	1096319	PtrMemberAccess	jump -> flags		1096024	0					
ANR	1096320	Identifier	jump		1096024	0					
ANR	1096321	Identifier	flags		1096024	1					
ANR	1096322	Identifier	IS_COND		1096024	1					
ANR	1096323	ExpressionStatement	inst [ 0 ] ^= ( 1 << 28 )	260:3:8291:8311	1096024	1	True				
ANR	1096324	AssignmentExpression	inst [ 0 ] ^= ( 1 << 28 )		1096024	0		^=			
ANR	1096325	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096326	Identifier	inst		1096024	0					
ANR	1096327	PrimaryExpression	0		1096024	1					
ANR	1096328	ShiftExpression	1 << 28		1096024	1		<<			
ANR	1096329	PrimaryExpression	1		1096024	0					
ANR	1096330	PrimaryExpression	28		1096024	1					
ANR	1096331	ElseStatement	else		1096024	0					
ANR	1096332	ExpressionStatement	inst [ 0 ] = BICC | DA ( 0x8 )	262:3:8323:8347	1096024	0	True				
ANR	1096333	AssignmentExpression	inst [ 0 ] = BICC | DA ( 0x8 )		1096024	0		=			
ANR	1096334	ArrayIndexing	inst [ 0 ]		1096024	0					
ANR	1096335	Identifier	inst		1096024	0					
ANR	1096336	PrimaryExpression	0		1096024	1					
ANR	1096337	InclusiveOrExpression	BICC | DA ( 0x8 )		1096024	1		|			
ANR	1096338	Identifier	BICC		1096024	0					
ANR	1096339	CallExpression	DA ( 0x8 )		1096024	1					
ANR	1096340	Callee	DA		1096024	0					
ANR	1096341	Identifier	DA		1096024	0					
ANR	1096342	ArgumentList	0x8		1096024	1					
ANR	1096343	Argument	0x8		1096024	0					
ANR	1096344	PrimaryExpression	0x8		1096024	0					
ANR	1096345	ExpressionStatement	inst [ 1 ] = NOP	263:2:8351:8364	1096024	2	True				
ANR	1096346	AssignmentExpression	inst [ 1 ] = NOP		1096024	0		=			
ANR	1096347	ArrayIndexing	inst [ 1 ]		1096024	0					
ANR	1096348	Identifier	inst		1096024	0					
ANR	1096349	PrimaryExpression	1		1096024	1					
ANR	1096350	Identifier	NOP		1096024	1					
ANR	1096351	ExpressionStatement	jump -> addr = ( sljit_uw ) inst	264:2:8368:8395	1096024	3	True				
ANR	1096352	AssignmentExpression	jump -> addr = ( sljit_uw ) inst		1096024	0		=			
ANR	1096353	PtrMemberAccess	jump -> addr		1096024	0					
ANR	1096354	Identifier	jump		1096024	0					
ANR	1096355	Identifier	addr		1096024	1					
ANR	1096356	CastExpression	( sljit_uw ) inst		1096024	1					
ANR	1096357	CastTarget	sljit_uw		1096024	0					
ANR	1096358	Identifier	inst		1096024	1					
ANR	1096359	ReturnStatement	return inst + 1 ;	265:2:8399:8414	1096024	4	True				
ANR	1096360	AdditiveExpression	inst + 1		1096024	0		+			
ANR	1096361	Identifier	inst		1096024	0					
ANR	1096362	PrimaryExpression	1		1096024	1					
ANR	1096363	ReturnStatement	return code_ptr ;	268:1:8421:8436	1096024	12	True				
ANR	1096364	Identifier	code_ptr		1096024	0					
ANR	1096365	ReturnType	static SLJIT_INLINE sljit_ins *		1096024	1					
ANR	1096366	Identifier	detect_jump_type		1096024	2					
ANR	1096367	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1096024	3					
ANR	1096368	Parameter	struct sljit_jump * jump	198:48:6783:6805	1096024	0	True				
ANR	1096369	ParameterType	struct sljit_jump *		1096024	0					
ANR	1096370	Identifier	jump		1096024	1					
ANR	1096371	Parameter	sljit_ins * code_ptr	198:73:6808:6826	1096024	1	True				
ANR	1096372	ParameterType	sljit_ins *		1096024	0					
ANR	1096373	Identifier	code_ptr		1096024	1					
ANR	1096374	Parameter	sljit_ins * code	198:94:6829:6843	1096024	2	True				
ANR	1096375	ParameterType	sljit_ins *		1096024	0					
ANR	1096376	Identifier	code		1096024	1					
ANR	1096377	CFGEntryNode	ENTRY		1096024		True				
ANR	1096378	CFGExitNode	EXIT		1096024		True				
ANR	1096379	Symbol	jump -> u . label -> size		1096024						
ANR	1096380	Symbol	CALL		1096024						
ANR	1096381	Symbol	code		1096024						
ANR	1096382	Symbol	* * jump		1096024						
ANR	1096383	Symbol	* jump		1096024						
ANR	1096384	Symbol	jump -> u		1096024						
ANR	1096385	Symbol	jump -> flags		1096024						
ANR	1096386	Symbol	JUMP_LABEL		1096024						
ANR	1096387	Symbol	MAX_DISP		1096024						
ANR	1096388	Symbol	JUMP_ADDR		1096024						
ANR	1096389	Symbol	code_ptr		1096024						
ANR	1096390	Symbol	MIN_DISP		1096024						
ANR	1096391	Symbol	SLJIT_REWRITABLE_JUMP		1096024						
ANR	1096392	Symbol	jump		1096024						
ANR	1096393	Symbol	saved_inst		1096024						
ANR	1096394	Symbol	IS_MOVABLE		1096024						
ANR	1096395	Symbol	* inst		1096024						
ANR	1096396	Symbol	target_addr		1096024						
ANR	1096397	Symbol	diff		1096024						
ANR	1096398	Symbol	jump -> addr		1096024						
ANR	1096399	Symbol	NOP		1096024						
ANR	1096400	Symbol	IS_CALL		1096024						
ANR	1096401	Symbol	* jump -> u . label		1096024						
ANR	1096402	Symbol	* jump -> u		1096024						
ANR	1096403	Symbol	IS_COND		1096024						
ANR	1096404	Symbol	inst		1096024						
ANR	1096405	Symbol	jump -> u . target		1096024						
ANR	1096406	Symbol	PATCH_B		1096024						
ANR	1096407	Symbol	BICC		1096024						
ANR	1096408	Symbol	PATCH_CALL		1096024						
ANR	1096409	Symbol	jump -> u . label		1096024						
ANR	1096410	Symbol	DA		1096024						
ANR	1096411	Function	sljit_generate_code	271:0:8441:11548							
ANR	1096412	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1096411	0					
ANR	1096413	CompoundStatement		272:0:8525:11548	1096411	0					
ANR	1096414	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	273:1:8528:8561	1096411	0	True				
ANR	1096415	IdentifierDecl	* buf		1096411	0					
ANR	1096416	IdentifierDeclType	struct sljit_memory_fragment *		1096411	0					
ANR	1096417	Identifier	buf		1096411	1					
ANR	1096418	IdentifierDeclStatement	sljit_ins * code ;	274:1:8564:8579	1096411	1	True				
ANR	1096419	IdentifierDecl	* code		1096411	0					
ANR	1096420	IdentifierDeclType	sljit_ins *		1096411	0					
ANR	1096421	Identifier	code		1096411	1					
ANR	1096422	IdentifierDeclStatement	sljit_ins * code_ptr ;	275:1:8582:8601	1096411	2	True				
ANR	1096423	IdentifierDecl	* code_ptr		1096411	0					
ANR	1096424	IdentifierDeclType	sljit_ins *		1096411	0					
ANR	1096425	Identifier	code_ptr		1096411	1					
ANR	1096426	IdentifierDeclStatement	sljit_ins * buf_ptr ;	276:1:8604:8622	1096411	3	True				
ANR	1096427	IdentifierDecl	* buf_ptr		1096411	0					
ANR	1096428	IdentifierDeclType	sljit_ins *		1096411	0					
ANR	1096429	Identifier	buf_ptr		1096411	1					
ANR	1096430	IdentifierDeclStatement	sljit_ins * buf_end ;	277:1:8625:8643	1096411	4	True				
ANR	1096431	IdentifierDecl	* buf_end		1096411	0					
ANR	1096432	IdentifierDeclType	sljit_ins *		1096411	0					
ANR	1096433	Identifier	buf_end		1096411	1					
ANR	1096434	IdentifierDeclStatement	sljit_uw word_count ;	278:1:8646:8665	1096411	5	True				
ANR	1096435	IdentifierDecl	word_count		1096411	0					
ANR	1096436	IdentifierDeclType	sljit_uw		1096411	0					
ANR	1096437	Identifier	word_count		1096411	1					
ANR	1096438	IdentifierDeclStatement	sljit_uw addr ;	279:1:8668:8681	1096411	6	True				
ANR	1096439	IdentifierDecl	addr		1096411	0					
ANR	1096440	IdentifierDeclType	sljit_uw		1096411	0					
ANR	1096441	Identifier	addr		1096411	1					
ANR	1096442	IdentifierDeclStatement	struct sljit_label * label ;	281:1:8685:8710	1096411	7	True				
ANR	1096443	IdentifierDecl	* label		1096411	0					
ANR	1096444	IdentifierDeclType	struct sljit_label *		1096411	0					
ANR	1096445	Identifier	label		1096411	1					
ANR	1096446	IdentifierDeclStatement	struct sljit_jump * jump ;	282:1:8713:8736	1096411	8	True				
ANR	1096447	IdentifierDecl	* jump		1096411	0					
ANR	1096448	IdentifierDeclType	struct sljit_jump *		1096411	0					
ANR	1096449	Identifier	jump		1096411	1					
ANR	1096450	IdentifierDeclStatement	struct sljit_const * const_ ;	283:1:8739:8765	1096411	9	True				
ANR	1096451	IdentifierDecl	* const_		1096411	0					
ANR	1096452	IdentifierDeclType	struct sljit_const *		1096411	0					
ANR	1096453	Identifier	const_		1096411	1					
ANR	1096454	ExpressionStatement	CHECK_ERROR_PTR ( )	285:1:8769:8786	1096411	10	True				
ANR	1096455	CallExpression	CHECK_ERROR_PTR ( )		1096411	0					
ANR	1096456	Callee	CHECK_ERROR_PTR		1096411	0					
ANR	1096457	Identifier	CHECK_ERROR_PTR		1096411	0					
ANR	1096458	ArgumentList			1096411	1					
ANR	1096459	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	286:1:8789:8835	1096411	11	True				
ANR	1096460	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1096411	0					
ANR	1096461	Callee	CHECK_PTR		1096411	0					
ANR	1096462	Identifier	CHECK_PTR		1096411	0					
ANR	1096463	ArgumentList	check_sljit_generate_code ( compiler )		1096411	1					
ANR	1096464	Argument	check_sljit_generate_code ( compiler )		1096411	0					
ANR	1096465	CallExpression	check_sljit_generate_code ( compiler )		1096411	0					
ANR	1096466	Callee	check_sljit_generate_code		1096411	0					
ANR	1096467	Identifier	check_sljit_generate_code		1096411	0					
ANR	1096468	ArgumentList	compiler		1096411	1					
ANR	1096469	Argument	compiler		1096411	0					
ANR	1096470	Identifier	compiler		1096411	0					
ANR	1096471	ExpressionStatement	reverse_buf ( compiler )	287:1:8838:8859	1096411	12	True				
ANR	1096472	CallExpression	reverse_buf ( compiler )		1096411	0					
ANR	1096473	Callee	reverse_buf		1096411	0					
ANR	1096474	Identifier	reverse_buf		1096411	0					
ANR	1096475	ArgumentList	compiler		1096411	1					
ANR	1096476	Argument	compiler		1096411	0					
ANR	1096477	Identifier	compiler		1096411	0					
ANR	1096478	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	289:1:8863:8935	1096411	13	True				
ANR	1096479	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1096411	0		=			
ANR	1096480	Identifier	code		1096411	0					
ANR	1096481	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1096411	1					
ANR	1096482	CastTarget	sljit_ins *		1096411	0					
ANR	1096483	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1096411	1					
ANR	1096484	Callee	SLJIT_MALLOC_EXEC		1096411	0					
ANR	1096485	Identifier	SLJIT_MALLOC_EXEC		1096411	0					
ANR	1096486	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1096411	1					
ANR	1096487	Argument	compiler -> size * sizeof ( sljit_ins )		1096411	0					
ANR	1096488	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1096411	0		*			
ANR	1096489	PtrMemberAccess	compiler -> size		1096411	0					
ANR	1096490	Identifier	compiler		1096411	0					
ANR	1096491	Identifier	size		1096411	1					
ANR	1096492	SizeofExpression	sizeof ( sljit_ins )		1096411	1					
ANR	1096493	Sizeof	sizeof		1096411	0					
ANR	1096494	SizeofOperand	sljit_ins		1096411	1					
ANR	1096495	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	290:1:8938:8965	1096411	14	True				
ANR	1096496	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1096411	0					
ANR	1096497	Callee	PTR_FAIL_WITH_EXEC_IF		1096411	0					
ANR	1096498	Identifier	PTR_FAIL_WITH_EXEC_IF		1096411	0					
ANR	1096499	ArgumentList	code		1096411	1					
ANR	1096500	Argument	code		1096411	0					
ANR	1096501	Identifier	code		1096411	0					
ANR	1096502	ExpressionStatement	buf = compiler -> buf	291:1:8968:8987	1096411	15	True				
ANR	1096503	AssignmentExpression	buf = compiler -> buf		1096411	0		=			
ANR	1096504	Identifier	buf		1096411	0					
ANR	1096505	PtrMemberAccess	compiler -> buf		1096411	1					
ANR	1096506	Identifier	compiler		1096411	0					
ANR	1096507	Identifier	buf		1096411	1					
ANR	1096508	ExpressionStatement	code_ptr = code	293:1:8991:9006	1096411	16	True				
ANR	1096509	AssignmentExpression	code_ptr = code		1096411	0		=			
ANR	1096510	Identifier	code_ptr		1096411	0					
ANR	1096511	Identifier	code		1096411	1					
ANR	1096512	ExpressionStatement	word_count = 0	294:1:9009:9023	1096411	17	True				
ANR	1096513	AssignmentExpression	word_count = 0		1096411	0		=			
ANR	1096514	Identifier	word_count		1096411	0					
ANR	1096515	PrimaryExpression	0		1096411	1					
ANR	1096516	ExpressionStatement	label = compiler -> labels	295:1:9026:9050	1096411	18	True				
ANR	1096517	AssignmentExpression	label = compiler -> labels		1096411	0		=			
ANR	1096518	Identifier	label		1096411	0					
ANR	1096519	PtrMemberAccess	compiler -> labels		1096411	1					
ANR	1096520	Identifier	compiler		1096411	0					
ANR	1096521	Identifier	labels		1096411	1					
ANR	1096522	ExpressionStatement	jump = compiler -> jumps	296:1:9053:9075	1096411	19	True				
ANR	1096523	AssignmentExpression	jump = compiler -> jumps		1096411	0		=			
ANR	1096524	Identifier	jump		1096411	0					
ANR	1096525	PtrMemberAccess	compiler -> jumps		1096411	1					
ANR	1096526	Identifier	compiler		1096411	0					
ANR	1096527	Identifier	jumps		1096411	1					
ANR	1096528	ExpressionStatement	const_ = compiler -> consts	297:1:9078:9103	1096411	20	True				
ANR	1096529	AssignmentExpression	const_ = compiler -> consts		1096411	0		=			
ANR	1096530	Identifier	const_		1096411	0					
ANR	1096531	PtrMemberAccess	compiler -> consts		1096411	1					
ANR	1096532	Identifier	compiler		1096411	0					
ANR	1096533	Identifier	consts		1096411	1					
ANR	1096534	DoStatement	do		1096411	21					
ANR	1096535	CompoundStatement		27:4:583:583	1096411	0					
ANR	1096536	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	299:2:9113:9146	1096411	0	True				
ANR	1096537	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1096411	0		=			
ANR	1096538	Identifier	buf_ptr		1096411	0					
ANR	1096539	CastExpression	( sljit_ins * ) buf -> memory		1096411	1					
ANR	1096540	CastTarget	sljit_ins *		1096411	0					
ANR	1096541	PtrMemberAccess	buf -> memory		1096411	1					
ANR	1096542	Identifier	buf		1096411	0					
ANR	1096543	Identifier	memory		1096411	1					
ANR	1096544	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	300:2:9150:9191	1096411	1	True				
ANR	1096545	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1096411	0		=			
ANR	1096546	Identifier	buf_end		1096411	0					
ANR	1096547	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1096411	1		+			
ANR	1096548	Identifier	buf_ptr		1096411	0					
ANR	1096549	ShiftExpression	buf -> used_size >> 2		1096411	1		>>			
ANR	1096550	PtrMemberAccess	buf -> used_size		1096411	0					
ANR	1096551	Identifier	buf		1096411	0					
ANR	1096552	Identifier	used_size		1096411	1					
ANR	1096553	PrimaryExpression	2		1096411	1					
ANR	1096554	DoStatement	do		1096411	2					
ANR	1096555	CompoundStatement		30:5:672:672	1096411	0					
ANR	1096556	ExpressionStatement	* code_ptr = * buf_ptr ++	302:3:9203:9225	1096411	0	True				
ANR	1096557	AssignmentExpression	* code_ptr = * buf_ptr ++		1096411	0		=			
ANR	1096558	UnaryOperationExpression	* code_ptr		1096411	0					
ANR	1096559	UnaryOperator	*		1096411	0					
ANR	1096560	Identifier	code_ptr		1096411	1					
ANR	1096561	UnaryOperationExpression	* buf_ptr ++		1096411	1					
ANR	1096562	UnaryOperator	*		1096411	0					
ANR	1096563	PostIncDecOperationExpression	buf_ptr ++		1096411	1					
ANR	1096564	Identifier	buf_ptr		1096411	0					
ANR	1096565	IncDec	++		1096411	1					
ANR	1096566	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	303:3:9230:9279	1096411	1	True				
ANR	1096567	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1096411	0					
ANR	1096568	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096569	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096570	ArgumentList	! label || label -> size >= word_count		1096411	1					
ANR	1096571	Argument	! label || label -> size >= word_count		1096411	0					
ANR	1096572	OrExpression	! label || label -> size >= word_count		1096411	0		||			
ANR	1096573	UnaryOperationExpression	! label		1096411	0					
ANR	1096574	UnaryOperator	!		1096411	0					
ANR	1096575	Identifier	label		1096411	1					
ANR	1096576	RelationalExpression	label -> size >= word_count		1096411	1		>=			
ANR	1096577	PtrMemberAccess	label -> size		1096411	0					
ANR	1096578	Identifier	label		1096411	0					
ANR	1096579	Identifier	size		1096411	1					
ANR	1096580	Identifier	word_count		1096411	1					
ANR	1096581	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	304:3:9284:9331	1096411	2	True				
ANR	1096582	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1096411	0					
ANR	1096583	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096584	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096585	ArgumentList	! jump || jump -> addr >= word_count		1096411	1					
ANR	1096586	Argument	! jump || jump -> addr >= word_count		1096411	0					
ANR	1096587	OrExpression	! jump || jump -> addr >= word_count		1096411	0		||			
ANR	1096588	UnaryOperationExpression	! jump		1096411	0					
ANR	1096589	UnaryOperator	!		1096411	0					
ANR	1096590	Identifier	jump		1096411	1					
ANR	1096591	RelationalExpression	jump -> addr >= word_count		1096411	1		>=			
ANR	1096592	PtrMemberAccess	jump -> addr		1096411	0					
ANR	1096593	Identifier	jump		1096411	0					
ANR	1096594	Identifier	addr		1096411	1					
ANR	1096595	Identifier	word_count		1096411	1					
ANR	1096596	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	305:3:9336:9387	1096411	3	True				
ANR	1096597	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1096411	0					
ANR	1096598	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096599	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096600	ArgumentList	! const_ || const_ -> addr >= word_count		1096411	1					
ANR	1096601	Argument	! const_ || const_ -> addr >= word_count		1096411	0					
ANR	1096602	OrExpression	! const_ || const_ -> addr >= word_count		1096411	0		||			
ANR	1096603	UnaryOperationExpression	! const_		1096411	0					
ANR	1096604	UnaryOperator	!		1096411	0					
ANR	1096605	Identifier	const_		1096411	1					
ANR	1096606	RelationalExpression	const_ -> addr >= word_count		1096411	1		>=			
ANR	1096607	PtrMemberAccess	const_ -> addr		1096411	0					
ANR	1096608	Identifier	const_		1096411	0					
ANR	1096609	Identifier	addr		1096411	1					
ANR	1096610	Identifier	word_count		1096411	1					
ANR	1096611	IfStatement	if ( label && label -> size == word_count )		1096411	4					
ANR	1096612	Condition	label && label -> size == word_count	307:7:9452:9485	1096411	0	True				
ANR	1096613	AndExpression	label && label -> size == word_count		1096411	0		&&			
ANR	1096614	Identifier	label		1096411	0					
ANR	1096615	EqualityExpression	label -> size == word_count		1096411	1		==			
ANR	1096616	PtrMemberAccess	label -> size		1096411	0					
ANR	1096617	Identifier	label		1096411	0					
ANR	1096618	Identifier	size		1096411	1					
ANR	1096619	Identifier	word_count		1096411	1					
ANR	1096620	CompoundStatement		36:43:962:962	1096411	1					
ANR	1096621	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	309:4:9532:9564	1096411	0	True				
ANR	1096622	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1096411	0		=			
ANR	1096623	PtrMemberAccess	label -> addr		1096411	0					
ANR	1096624	Identifier	label		1096411	0					
ANR	1096625	Identifier	addr		1096411	1					
ANR	1096626	CastExpression	( sljit_uw ) code_ptr		1096411	1					
ANR	1096627	CastTarget	sljit_uw		1096411	0					
ANR	1096628	Identifier	code_ptr		1096411	1					
ANR	1096629	ExpressionStatement	label -> size = code_ptr - code	310:4:9570:9599	1096411	1	True				
ANR	1096630	AssignmentExpression	label -> size = code_ptr - code		1096411	0		=			
ANR	1096631	PtrMemberAccess	label -> size		1096411	0					
ANR	1096632	Identifier	label		1096411	0					
ANR	1096633	Identifier	size		1096411	1					
ANR	1096634	AdditiveExpression	code_ptr - code		1096411	1		-			
ANR	1096635	Identifier	code_ptr		1096411	0					
ANR	1096636	Identifier	code		1096411	1					
ANR	1096637	ExpressionStatement	label = label -> next	311:4:9605:9624	1096411	2	True				
ANR	1096638	AssignmentExpression	label = label -> next		1096411	0		=			
ANR	1096639	Identifier	label		1096411	0					
ANR	1096640	PtrMemberAccess	label -> next		1096411	1					
ANR	1096641	Identifier	label		1096411	0					
ANR	1096642	Identifier	next		1096411	1					
ANR	1096643	IfStatement	if ( jump && jump -> addr == word_count )		1096411	5					
ANR	1096644	Condition	jump && jump -> addr == word_count	313:7:9638:9669	1096411	0	True				
ANR	1096645	AndExpression	jump && jump -> addr == word_count		1096411	0		&&			
ANR	1096646	Identifier	jump		1096411	0					
ANR	1096647	EqualityExpression	jump -> addr == word_count		1096411	1		==			
ANR	1096648	PtrMemberAccess	jump -> addr		1096411	0					
ANR	1096649	Identifier	jump		1096411	0					
ANR	1096650	Identifier	addr		1096411	1					
ANR	1096651	Identifier	word_count		1096411	1					
ANR	1096652	CompoundStatement		42:41:1146:1146	1096411	1					
ANR	1096653	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	315:4:9739:9776	1096411	0	True				
ANR	1096654	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1096411	0		=			
ANR	1096655	PtrMemberAccess	jump -> addr		1096411	0					
ANR	1096656	Identifier	jump		1096411	0					
ANR	1096657	Identifier	addr		1096411	1					
ANR	1096658	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1096411	1					
ANR	1096659	CastTarget	sljit_uw		1096411	0					
ANR	1096660	AdditiveExpression	code_ptr - 3		1096411	1		-			
ANR	1096661	Identifier	code_ptr		1096411	0					
ANR	1096662	PrimaryExpression	3		1096411	1					
ANR	1096663	ExpressionStatement	"code_ptr = detect_jump_type ( jump , code_ptr , code )"	319:4:9838:9887	1096411	1	True				
ANR	1096664	AssignmentExpression	"code_ptr = detect_jump_type ( jump , code_ptr , code )"		1096411	0		=			
ANR	1096665	Identifier	code_ptr		1096411	0					
ANR	1096666	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1096411	1					
ANR	1096667	Callee	detect_jump_type		1096411	0					
ANR	1096668	Identifier	detect_jump_type		1096411	0					
ANR	1096669	ArgumentList	jump		1096411	1					
ANR	1096670	Argument	jump		1096411	0					
ANR	1096671	Identifier	jump		1096411	0					
ANR	1096672	Argument	code_ptr		1096411	1					
ANR	1096673	Identifier	code_ptr		1096411	0					
ANR	1096674	Argument	code		1096411	2					
ANR	1096675	Identifier	code		1096411	0					
ANR	1096676	ExpressionStatement	jump = jump -> next	320:4:9893:9910	1096411	2	True				
ANR	1096677	AssignmentExpression	jump = jump -> next		1096411	0		=			
ANR	1096678	Identifier	jump		1096411	0					
ANR	1096679	PtrMemberAccess	jump -> next		1096411	1					
ANR	1096680	Identifier	jump		1096411	0					
ANR	1096681	Identifier	next		1096411	1					
ANR	1096682	IfStatement	if ( const_ && const_ -> addr == word_count )		1096411	6					
ANR	1096683	Condition	const_ && const_ -> addr == word_count	322:7:9924:9959	1096411	0	True				
ANR	1096684	AndExpression	const_ && const_ -> addr == word_count		1096411	0		&&			
ANR	1096685	Identifier	const_		1096411	0					
ANR	1096686	EqualityExpression	const_ -> addr == word_count		1096411	1		==			
ANR	1096687	PtrMemberAccess	const_ -> addr		1096411	0					
ANR	1096688	Identifier	const_		1096411	0					
ANR	1096689	Identifier	addr		1096411	1					
ANR	1096690	Identifier	word_count		1096411	1					
ANR	1096691	CompoundStatement		51:45:1436:1436	1096411	1					
ANR	1096692	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	324:4:10006:10039	1096411	0	True				
ANR	1096693	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1096411	0		=			
ANR	1096694	PtrMemberAccess	const_ -> addr		1096411	0					
ANR	1096695	Identifier	const_		1096411	0					
ANR	1096696	Identifier	addr		1096411	1					
ANR	1096697	CastExpression	( sljit_uw ) code_ptr		1096411	1					
ANR	1096698	CastTarget	sljit_uw		1096411	0					
ANR	1096699	Identifier	code_ptr		1096411	1					
ANR	1096700	ExpressionStatement	const_ = const_ -> next	325:4:10045:10066	1096411	1	True				
ANR	1096701	AssignmentExpression	const_ = const_ -> next		1096411	0		=			
ANR	1096702	Identifier	const_		1096411	0					
ANR	1096703	PtrMemberAccess	const_ -> next		1096411	1					
ANR	1096704	Identifier	const_		1096411	0					
ANR	1096705	Identifier	next		1096411	1					
ANR	1096706	ExpressionStatement	code_ptr ++	327:3:10076:10087	1096411	7	True				
ANR	1096707	PostIncDecOperationExpression	code_ptr ++		1096411	0					
ANR	1096708	Identifier	code_ptr		1096411	0					
ANR	1096709	IncDec	++		1096411	1					
ANR	1096710	ExpressionStatement	word_count ++	328:3:10092:10105	1096411	8	True				
ANR	1096711	PostIncDecOperationExpression	word_count ++		1096411	0					
ANR	1096712	Identifier	word_count		1096411	0					
ANR	1096713	IncDec	++		1096411	1					
ANR	1096714	Condition	buf_ptr < buf_end	329:11:10118:10134	1096411	1	True				
ANR	1096715	RelationalExpression	buf_ptr < buf_end		1096411	0		<			
ANR	1096716	Identifier	buf_ptr		1096411	0					
ANR	1096717	Identifier	buf_end		1096411	1					
ANR	1096718	ExpressionStatement	buf = buf -> next	331:2:10141:10156	1096411	3	True				
ANR	1096719	AssignmentExpression	buf = buf -> next		1096411	0		=			
ANR	1096720	Identifier	buf		1096411	0					
ANR	1096721	PtrMemberAccess	buf -> next		1096411	1					
ANR	1096722	Identifier	buf		1096411	0					
ANR	1096723	Identifier	next		1096411	1					
ANR	1096724	Condition	buf	332:10:10168:10170	1096411	1	True				
ANR	1096725	Identifier	buf		1096411	0					
ANR	1096726	IfStatement	if ( label && label -> size == word_count )		1096411	22					
ANR	1096727	Condition	label && label -> size == word_count	334:5:10180:10213	1096411	0	True				
ANR	1096728	AndExpression	label && label -> size == word_count		1096411	0		&&			
ANR	1096729	Identifier	label		1096411	0					
ANR	1096730	EqualityExpression	label -> size == word_count		1096411	1		==			
ANR	1096731	PtrMemberAccess	label -> size		1096411	0					
ANR	1096732	Identifier	label		1096411	0					
ANR	1096733	Identifier	size		1096411	1					
ANR	1096734	Identifier	word_count		1096411	1					
ANR	1096735	CompoundStatement		63:41:1690:1690	1096411	1					
ANR	1096736	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	335:2:10220:10252	1096411	0	True				
ANR	1096737	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1096411	0		=			
ANR	1096738	PtrMemberAccess	label -> addr		1096411	0					
ANR	1096739	Identifier	label		1096411	0					
ANR	1096740	Identifier	addr		1096411	1					
ANR	1096741	CastExpression	( sljit_uw ) code_ptr		1096411	1					
ANR	1096742	CastTarget	sljit_uw		1096411	0					
ANR	1096743	Identifier	code_ptr		1096411	1					
ANR	1096744	ExpressionStatement	label -> size = code_ptr - code	336:2:10256:10285	1096411	1	True				
ANR	1096745	AssignmentExpression	label -> size = code_ptr - code		1096411	0		=			
ANR	1096746	PtrMemberAccess	label -> size		1096411	0					
ANR	1096747	Identifier	label		1096411	0					
ANR	1096748	Identifier	size		1096411	1					
ANR	1096749	AdditiveExpression	code_ptr - code		1096411	1		-			
ANR	1096750	Identifier	code_ptr		1096411	0					
ANR	1096751	Identifier	code		1096411	1					
ANR	1096752	ExpressionStatement	label = label -> next	337:2:10289:10308	1096411	2	True				
ANR	1096753	AssignmentExpression	label = label -> next		1096411	0		=			
ANR	1096754	Identifier	label		1096411	0					
ANR	1096755	PtrMemberAccess	label -> next		1096411	1					
ANR	1096756	Identifier	label		1096411	0					
ANR	1096757	Identifier	next		1096411	1					
ANR	1096758	ExpressionStatement	SLJIT_ASSERT ( ! label )	340:1:10315:10335	1096411	23	True				
ANR	1096759	CallExpression	SLJIT_ASSERT ( ! label )		1096411	0					
ANR	1096760	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096761	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096762	ArgumentList	! label		1096411	1					
ANR	1096763	Argument	! label		1096411	0					
ANR	1096764	UnaryOperationExpression	! label		1096411	0					
ANR	1096765	UnaryOperator	!		1096411	0					
ANR	1096766	Identifier	label		1096411	1					
ANR	1096767	ExpressionStatement	SLJIT_ASSERT ( ! jump )	341:1:10338:10357	1096411	24	True				
ANR	1096768	CallExpression	SLJIT_ASSERT ( ! jump )		1096411	0					
ANR	1096769	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096770	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096771	ArgumentList	! jump		1096411	1					
ANR	1096772	Argument	! jump		1096411	0					
ANR	1096773	UnaryOperationExpression	! jump		1096411	0					
ANR	1096774	UnaryOperator	!		1096411	0					
ANR	1096775	Identifier	jump		1096411	1					
ANR	1096776	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	342:1:10360:10381	1096411	25	True				
ANR	1096777	CallExpression	SLJIT_ASSERT ( ! const_ )		1096411	0					
ANR	1096778	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096779	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096780	ArgumentList	! const_		1096411	1					
ANR	1096781	Argument	! const_		1096411	0					
ANR	1096782	UnaryOperationExpression	! const_		1096411	0					
ANR	1096783	UnaryOperator	!		1096411	0					
ANR	1096784	Identifier	const_		1096411	1					
ANR	1096785	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_si ) compiler -> size )	343:1:10384:10441	1096411	26	True				
ANR	1096786	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_si ) compiler -> size )		1096411	0					
ANR	1096787	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096788	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096789	ArgumentList	code_ptr - code <= ( sljit_si ) compiler -> size		1096411	1					
ANR	1096790	Argument	code_ptr - code <= ( sljit_si ) compiler -> size		1096411	0					
ANR	1096791	RelationalExpression	code_ptr - code <= ( sljit_si ) compiler -> size		1096411	0		<=			
ANR	1096792	AdditiveExpression	code_ptr - code		1096411	0		-			
ANR	1096793	Identifier	code_ptr		1096411	0					
ANR	1096794	Identifier	code		1096411	1					
ANR	1096795	CastExpression	( sljit_si ) compiler -> size		1096411	1					
ANR	1096796	CastTarget	sljit_si		1096411	0					
ANR	1096797	PtrMemberAccess	compiler -> size		1096411	1					
ANR	1096798	Identifier	compiler		1096411	0					
ANR	1096799	Identifier	size		1096411	1					
ANR	1096800	ExpressionStatement	jump = compiler -> jumps	345:1:10445:10467	1096411	27	True				
ANR	1096801	AssignmentExpression	jump = compiler -> jumps		1096411	0		=			
ANR	1096802	Identifier	jump		1096411	0					
ANR	1096803	PtrMemberAccess	compiler -> jumps		1096411	1					
ANR	1096804	Identifier	compiler		1096411	0					
ANR	1096805	Identifier	jumps		1096411	1					
ANR	1096806	WhileStatement	while ( jump )		1096411	28					
ANR	1096807	Condition	jump	346:8:10477:10480	1096411	0	True				
ANR	1096808	Identifier	jump		1096411	0					
ANR	1096809	CompoundStatement		75:14:1957:1957	1096411	1					
ANR	1096810	DoStatement	do		1096411	0					
ANR	1096811	CompoundStatement		76:5:1964:1964	1096411	0					
ANR	1096812	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	348:3:10495:10567	1096411	0	True				
ANR	1096813	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1096411	0		=			
ANR	1096814	Identifier	addr		1096411	0					
ANR	1096815	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1096411	1					
ANR	1096816	Condition	jump -> flags & JUMP_LABEL		1096411	0					
ANR	1096817	BitAndExpression	jump -> flags & JUMP_LABEL		1096411	0		&			
ANR	1096818	PtrMemberAccess	jump -> flags		1096411	0					
ANR	1096819	Identifier	jump		1096411	0					
ANR	1096820	Identifier	flags		1096411	1					
ANR	1096821	Identifier	JUMP_LABEL		1096411	1					
ANR	1096822	PtrMemberAccess	jump -> u . label -> addr		1096411	1					
ANR	1096823	MemberAccess	jump -> u . label		1096411	0					
ANR	1096824	PtrMemberAccess	jump -> u		1096411	0					
ANR	1096825	Identifier	jump		1096411	0					
ANR	1096826	Identifier	u		1096411	1					
ANR	1096827	Identifier	label		1096411	1					
ANR	1096828	Identifier	addr		1096411	1					
ANR	1096829	MemberAccess	jump -> u . target		1096411	2					
ANR	1096830	PtrMemberAccess	jump -> u		1096411	0					
ANR	1096831	Identifier	jump		1096411	0					
ANR	1096832	Identifier	u		1096411	1					
ANR	1096833	Identifier	target		1096411	1					
ANR	1096834	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	349:3:10572:10604	1096411	1	True				
ANR	1096835	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1096411	0		=			
ANR	1096836	Identifier	buf_ptr		1096411	0					
ANR	1096837	CastExpression	( sljit_ins * ) jump -> addr		1096411	1					
ANR	1096838	CastTarget	sljit_ins *		1096411	0					
ANR	1096839	PtrMemberAccess	jump -> addr		1096411	1					
ANR	1096840	Identifier	jump		1096411	0					
ANR	1096841	Identifier	addr		1096411	1					
ANR	1096842	IfStatement	if ( jump -> flags & PATCH_CALL )		1096411	2					
ANR	1096843	Condition	jump -> flags & PATCH_CALL	351:7:10614:10637	1096411	0	True				
ANR	1096844	BitAndExpression	jump -> flags & PATCH_CALL		1096411	0		&			
ANR	1096845	PtrMemberAccess	jump -> flags		1096411	0					
ANR	1096846	Identifier	jump		1096411	0					
ANR	1096847	Identifier	flags		1096411	1					
ANR	1096848	Identifier	PATCH_CALL		1096411	1					
ANR	1096849	CompoundStatement		80:33:2114:2114	1096411	1					
ANR	1096850	ExpressionStatement	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2	352:4:10646:10687	1096411	0	True				
ANR	1096851	AssignmentExpression	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2		1096411	0		=			
ANR	1096852	Identifier	addr		1096411	0					
ANR	1096853	ShiftExpression	( sljit_sw ) ( addr - jump -> addr ) >> 2		1096411	1		>>			
ANR	1096854	CastExpression	( sljit_sw ) ( addr - jump -> addr )		1096411	0					
ANR	1096855	CastTarget	sljit_sw		1096411	0					
ANR	1096856	AdditiveExpression	addr - jump -> addr		1096411	1		-			
ANR	1096857	Identifier	addr		1096411	0					
ANR	1096858	PtrMemberAccess	jump -> addr		1096411	1					
ANR	1096859	Identifier	jump		1096411	0					
ANR	1096860	Identifier	addr		1096411	1					
ANR	1096861	PrimaryExpression	2		1096411	1					
ANR	1096862	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x1fffffff && ( sljit_sw ) addr >= - 0x20000000 )	353:4:10693:10768	1096411	1	True				
ANR	1096863	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x1fffffff && ( sljit_sw ) addr >= - 0x20000000 )		1096411	0					
ANR	1096864	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096865	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096866	ArgumentList	( sljit_sw ) addr <= 0x1fffffff && ( sljit_sw ) addr >= - 0x20000000		1096411	1					
ANR	1096867	Argument	( sljit_sw ) addr <= 0x1fffffff && ( sljit_sw ) addr >= - 0x20000000		1096411	0					
ANR	1096868	AndExpression	( sljit_sw ) addr <= 0x1fffffff && ( sljit_sw ) addr >= - 0x20000000		1096411	0		&&			
ANR	1096869	RelationalExpression	( sljit_sw ) addr <= 0x1fffffff		1096411	0		<=			
ANR	1096870	CastExpression	( sljit_sw ) addr		1096411	0					
ANR	1096871	CastTarget	sljit_sw		1096411	0					
ANR	1096872	Identifier	addr		1096411	1					
ANR	1096873	PrimaryExpression	0x1fffffff		1096411	1					
ANR	1096874	RelationalExpression	( sljit_sw ) addr >= - 0x20000000		1096411	1		>=			
ANR	1096875	CastExpression	( sljit_sw ) addr		1096411	0					
ANR	1096876	CastTarget	sljit_sw		1096411	0					
ANR	1096877	Identifier	addr		1096411	1					
ANR	1096878	UnaryOperationExpression	- 0x20000000		1096411	1					
ANR	1096879	UnaryOperator	-		1096411	0					
ANR	1096880	PrimaryExpression	0x20000000		1096411	1					
ANR	1096881	ExpressionStatement	buf_ptr [ 0 ] = CALL | ( addr & 0x3fffffff )	354:4:10774:10813	1096411	2	True				
ANR	1096882	AssignmentExpression	buf_ptr [ 0 ] = CALL | ( addr & 0x3fffffff )		1096411	0		=			
ANR	1096883	ArrayIndexing	buf_ptr [ 0 ]		1096411	0					
ANR	1096884	Identifier	buf_ptr		1096411	0					
ANR	1096885	PrimaryExpression	0		1096411	1					
ANR	1096886	InclusiveOrExpression	CALL | ( addr & 0x3fffffff )		1096411	1		|			
ANR	1096887	Identifier	CALL		1096411	0					
ANR	1096888	BitAndExpression	addr & 0x3fffffff		1096411	1		&			
ANR	1096889	Identifier	addr		1096411	0					
ANR	1096890	PrimaryExpression	0x3fffffff		1096411	1					
ANR	1096891	BreakStatement	break ;	355:4:10819:10824	1096411	3	True				
ANR	1096892	IfStatement	if ( jump -> flags & PATCH_B )		1096411	3					
ANR	1096893	Condition	jump -> flags & PATCH_B	357:7:10838:10858	1096411	0	True				
ANR	1096894	BitAndExpression	jump -> flags & PATCH_B		1096411	0		&			
ANR	1096895	PtrMemberAccess	jump -> flags		1096411	0					
ANR	1096896	Identifier	jump		1096411	0					
ANR	1096897	Identifier	flags		1096411	1					
ANR	1096898	Identifier	PATCH_B		1096411	1					
ANR	1096899	CompoundStatement		86:30:2335:2335	1096411	1					
ANR	1096900	ExpressionStatement	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2	358:4:10867:10908	1096411	0	True				
ANR	1096901	AssignmentExpression	addr = ( sljit_sw ) ( addr - jump -> addr ) >> 2		1096411	0		=			
ANR	1096902	Identifier	addr		1096411	0					
ANR	1096903	ShiftExpression	( sljit_sw ) ( addr - jump -> addr ) >> 2		1096411	1		>>			
ANR	1096904	CastExpression	( sljit_sw ) ( addr - jump -> addr )		1096411	0					
ANR	1096905	CastTarget	sljit_sw		1096411	0					
ANR	1096906	AdditiveExpression	addr - jump -> addr		1096411	1		-			
ANR	1096907	Identifier	addr		1096411	0					
ANR	1096908	PtrMemberAccess	jump -> addr		1096411	1					
ANR	1096909	Identifier	jump		1096411	0					
ANR	1096910	Identifier	addr		1096411	1					
ANR	1096911	PrimaryExpression	2		1096411	1					
ANR	1096912	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= MAX_DISP && ( sljit_sw ) addr >= MIN_DISP )	359:4:10914:10984	1096411	1	True				
ANR	1096913	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= MAX_DISP && ( sljit_sw ) addr >= MIN_DISP )		1096411	0					
ANR	1096914	Callee	SLJIT_ASSERT		1096411	0					
ANR	1096915	Identifier	SLJIT_ASSERT		1096411	0					
ANR	1096916	ArgumentList	( sljit_sw ) addr <= MAX_DISP && ( sljit_sw ) addr >= MIN_DISP		1096411	1					
ANR	1096917	Argument	( sljit_sw ) addr <= MAX_DISP && ( sljit_sw ) addr >= MIN_DISP		1096411	0					
ANR	1096918	AndExpression	( sljit_sw ) addr <= MAX_DISP && ( sljit_sw ) addr >= MIN_DISP		1096411	0		&&			
ANR	1096919	RelationalExpression	( sljit_sw ) addr <= MAX_DISP		1096411	0		<=			
ANR	1096920	CastExpression	( sljit_sw ) addr		1096411	0					
ANR	1096921	CastTarget	sljit_sw		1096411	0					
ANR	1096922	Identifier	addr		1096411	1					
ANR	1096923	Identifier	MAX_DISP		1096411	1					
ANR	1096924	RelationalExpression	( sljit_sw ) addr >= MIN_DISP		1096411	1		>=			
ANR	1096925	CastExpression	( sljit_sw ) addr		1096411	0					
ANR	1096926	CastTarget	sljit_sw		1096411	0					
ANR	1096927	Identifier	addr		1096411	1					
ANR	1096928	Identifier	MIN_DISP		1096411	1					
ANR	1096929	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~DISP_MASK ) | ( addr & DISP_MASK )	360:4:10990:11049	1096411	2	True				
ANR	1096930	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~DISP_MASK ) | ( addr & DISP_MASK )		1096411	0		=			
ANR	1096931	ArrayIndexing	buf_ptr [ 0 ]		1096411	0					
ANR	1096932	Identifier	buf_ptr		1096411	0					
ANR	1096933	PrimaryExpression	0		1096411	1					
ANR	1096934	InclusiveOrExpression	( buf_ptr [ 0 ] & ~DISP_MASK ) | ( addr & DISP_MASK )		1096411	1		|			
ANR	1096935	BitAndExpression	buf_ptr [ 0 ] & ~DISP_MASK		1096411	0		&			
ANR	1096936	ArrayIndexing	buf_ptr [ 0 ]		1096411	0					
ANR	1096937	Identifier	buf_ptr		1096411	0					
ANR	1096938	PrimaryExpression	0		1096411	1					
ANR	1096939	Identifier	~DISP_MASK		1096411	1					
ANR	1096940	BitAndExpression	addr & DISP_MASK		1096411	1		&			
ANR	1096941	Identifier	addr		1096411	0					
ANR	1096942	Identifier	DISP_MASK		1096411	1					
ANR	1096943	BreakStatement	break ;	361:4:11055:11060	1096411	3	True				
ANR	1096944	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffc00000 ) | ( ( addr >> 10 ) & 0x3fffff )	366:3:11176:11242	1096411	4	True				
ANR	1096945	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffc00000 ) | ( ( addr >> 10 ) & 0x3fffff )		1096411	0		=			
ANR	1096946	ArrayIndexing	buf_ptr [ 0 ]		1096411	0					
ANR	1096947	Identifier	buf_ptr		1096411	0					
ANR	1096948	PrimaryExpression	0		1096411	1					
ANR	1096949	InclusiveOrExpression	( buf_ptr [ 0 ] & 0xffc00000 ) | ( ( addr >> 10 ) & 0x3fffff )		1096411	1		|			
ANR	1096950	BitAndExpression	buf_ptr [ 0 ] & 0xffc00000		1096411	0		&			
ANR	1096951	ArrayIndexing	buf_ptr [ 0 ]		1096411	0					
ANR	1096952	Identifier	buf_ptr		1096411	0					
ANR	1096953	PrimaryExpression	0		1096411	1					
ANR	1096954	PrimaryExpression	0xffc00000		1096411	1					
ANR	1096955	BitAndExpression	( addr >> 10 ) & 0x3fffff		1096411	1		&			
ANR	1096956	ShiftExpression	addr >> 10		1096411	0		>>			
ANR	1096957	Identifier	addr		1096411	0					
ANR	1096958	PrimaryExpression	10		1096411	1					
ANR	1096959	PrimaryExpression	0x3fffff		1096411	1					
ANR	1096960	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xfffffc00 ) | ( addr & 0x3ff )	367:3:11247:11302	1096411	5	True				
ANR	1096961	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xfffffc00 ) | ( addr & 0x3ff )		1096411	0		=			
ANR	1096962	ArrayIndexing	buf_ptr [ 1 ]		1096411	0					
ANR	1096963	Identifier	buf_ptr		1096411	0					
ANR	1096964	PrimaryExpression	1		1096411	1					
ANR	1096965	InclusiveOrExpression	( buf_ptr [ 1 ] & 0xfffffc00 ) | ( addr & 0x3ff )		1096411	1		|			
ANR	1096966	BitAndExpression	buf_ptr [ 1 ] & 0xfffffc00		1096411	0		&			
ANR	1096967	ArrayIndexing	buf_ptr [ 1 ]		1096411	0					
ANR	1096968	Identifier	buf_ptr		1096411	0					
ANR	1096969	PrimaryExpression	1		1096411	1					
ANR	1096970	PrimaryExpression	0xfffffc00		1096411	1					
ANR	1096971	BitAndExpression	addr & 0x3ff		1096411	1		&			
ANR	1096972	Identifier	addr		1096411	0					
ANR	1096973	PrimaryExpression	0x3ff		1096411	1					
ANR	1096974	Condition	0	371:11:11361:11361	1096411	1	True				
ANR	1096975	PrimaryExpression	0		1096411	0					
ANR	1096976	ExpressionStatement	jump = jump -> next	372:2:11367:11384	1096411	1	True				
ANR	1096977	AssignmentExpression	jump = jump -> next		1096411	0		=			
ANR	1096978	Identifier	jump		1096411	0					
ANR	1096979	PtrMemberAccess	jump -> next		1096411	1					
ANR	1096980	Identifier	jump		1096411	0					
ANR	1096981	Identifier	next		1096411	1					
ANR	1096982	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	376:1:11392:11428	1096411	29	True				
ANR	1096983	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1096411	0		=			
ANR	1096984	PtrMemberAccess	compiler -> error		1096411	0					
ANR	1096985	Identifier	compiler		1096411	0					
ANR	1096986	Identifier	error		1096411	1					
ANR	1096987	Identifier	SLJIT_ERR_COMPILED		1096411	1					
ANR	1096988	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	377:1:11431:11496	1096411	30	True				
ANR	1096989	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1096411	0		=			
ANR	1096990	PtrMemberAccess	compiler -> executable_size		1096411	0					
ANR	1096991	Identifier	compiler		1096411	0					
ANR	1096992	Identifier	executable_size		1096411	1					
ANR	1096993	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1096411	1		*			
ANR	1096994	AdditiveExpression	code_ptr - code		1096411	0		-			
ANR	1096995	Identifier	code_ptr		1096411	0					
ANR	1096996	Identifier	code		1096411	1					
ANR	1096997	SizeofExpression	sizeof ( sljit_ins )		1096411	1					
ANR	1096998	Sizeof	sizeof		1096411	0					
ANR	1096999	SizeofOperand	sljit_ins		1096411	1					
ANR	1097000	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	378:1:11499:11532	1096411	31	True				
ANR	1097001	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1096411	0					
ANR	1097002	Callee	SLJIT_CACHE_FLUSH		1096411	0					
ANR	1097003	Identifier	SLJIT_CACHE_FLUSH		1096411	0					
ANR	1097004	ArgumentList	code		1096411	1					
ANR	1097005	Argument	code		1096411	0					
ANR	1097006	Identifier	code		1096411	0					
ANR	1097007	Argument	code_ptr		1096411	1					
ANR	1097008	Identifier	code_ptr		1096411	0					
ANR	1097009	ReturnStatement	return code ;	379:1:11535:11546	1096411	32	True				
ANR	1097010	Identifier	code		1096411	0					
ANR	1097011	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1096411	1					
ANR	1097012	Identifier	sljit_generate_code		1096411	2					
ANR	1097013	ParameterList	struct sljit_compiler * compiler		1096411	3					
ANR	1097014	Parameter	struct sljit_compiler * compiler	271:51:8492:8522	1096411	0	True				
ANR	1097015	ParameterType	struct sljit_compiler *		1096411	0					
ANR	1097016	Identifier	compiler		1096411	1					
ANR	1097017	CFGEntryNode	ENTRY		1096411		True				
ANR	1097018	CFGExitNode	EXIT		1096411		True				
ANR	1097019	Symbol	label -> addr		1096411						
ANR	1097020	Symbol	DISP_MASK		1096411						
ANR	1097021	Symbol	compiler -> buf		1096411						
ANR	1097022	Symbol	SLJIT_MALLOC_EXEC		1096411						
ANR	1097023	Symbol	JUMP_LABEL		1096411						
ANR	1097024	Symbol	MAX_DISP		1096411						
ANR	1097025	Symbol	label -> next		1096411						
ANR	1097026	Symbol	* compiler		1096411						
ANR	1097027	Symbol	const_ -> next		1096411						
ANR	1097028	Symbol	const_ -> addr		1096411						
ANR	1097029	Symbol	buf -> next		1096411						
ANR	1097030	Symbol	buf_end		1096411						
ANR	1097031	Symbol	compiler -> executable_size		1096411						
ANR	1097032	Symbol	jump		1096411						
ANR	1097033	Symbol	buf -> used_size		1096411						
ANR	1097034	Symbol	check_sljit_generate_code		1096411						
ANR	1097035	Symbol	* buf		1096411						
ANR	1097036	Symbol	compiler -> labels		1096411						
ANR	1097037	Symbol	buf -> memory		1096411						
ANR	1097038	Symbol	detect_jump_type		1096411						
ANR	1097039	Symbol	* buf_ptr ++		1096411						
ANR	1097040	Symbol	jump -> addr		1096411						
ANR	1097041	Symbol	buf_ptr		1096411						
ANR	1097042	Symbol	* code_ptr		1096411						
ANR	1097043	Symbol	* jump -> u . label		1096411						
ANR	1097044	Symbol	jump -> u . target		1096411						
ANR	1097045	Symbol	compiler -> jumps		1096411						
ANR	1097046	Symbol	label -> size		1096411						
ANR	1097047	Symbol	jump -> next		1096411						
ANR	1097048	Symbol	PATCH_CALL		1096411						
ANR	1097049	Symbol	~DISP_MASK		1096411						
ANR	1097050	Symbol	CALL		1096411						
ANR	1097051	Symbol	code		1096411						
ANR	1097052	Symbol	* * jump		1096411						
ANR	1097053	Symbol	* jump		1096411						
ANR	1097054	Symbol	jump -> u		1096411						
ANR	1097055	Symbol	jump -> flags		1096411						
ANR	1097056	Symbol	word_count		1096411						
ANR	1097057	Symbol	code_ptr		1096411						
ANR	1097058	Symbol	MIN_DISP		1096411						
ANR	1097059	Symbol	compiler		1096411						
ANR	1097060	Symbol	addr		1096411						
ANR	1097061	Symbol	* buf_ptr		1096411						
ANR	1097062	Symbol	const_		1096411						
ANR	1097063	Symbol	compiler -> consts		1096411						
ANR	1097064	Symbol	* const_		1096411						
ANR	1097065	Symbol	label		1096411						
ANR	1097066	Symbol	buf		1096411						
ANR	1097067	Symbol	compiler -> size		1096411						
ANR	1097068	Symbol	* jump -> u		1096411						
ANR	1097069	Symbol	PATCH_B		1096411						
ANR	1097070	Symbol	jump -> u . label -> addr		1096411						
ANR	1097071	Symbol	jump -> u . label		1096411						
ANR	1097072	Symbol	SLJIT_ERR_COMPILED		1096411						
ANR	1097073	Symbol	compiler -> error		1096411						
ANR	1097074	Symbol	* label		1096411						
ANR	1097075	Function	sljit_emit_enter	421:0:12605:13522							
ANR	1097076	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1097075	0					
ANR	1097077	CompoundStatement		424:0:12821:13522	1097075	0					
ANR	1097078	ExpressionStatement	CHECK_ERROR ( )	425:1:12824:12837	1097075	0	True				
ANR	1097079	CallExpression	CHECK_ERROR ( )		1097075	0					
ANR	1097080	Callee	CHECK_ERROR		1097075	0					
ANR	1097081	Identifier	CHECK_ERROR		1097075	0					
ANR	1097082	ArgumentList			1097075	1					
ANR	1097083	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	426:1:12840:12946	1097075	1	True				
ANR	1097084	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1097075	0					
ANR	1097085	Callee	CHECK		1097075	0					
ANR	1097086	Identifier	CHECK		1097075	0					
ANR	1097087	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097075	1					
ANR	1097088	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097075	0					
ANR	1097089	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097075	0					
ANR	1097090	Callee	check_sljit_emit_enter		1097075	0					
ANR	1097091	Identifier	check_sljit_emit_enter		1097075	0					
ANR	1097092	ArgumentList	compiler		1097075	1					
ANR	1097093	Argument	compiler		1097075	0					
ANR	1097094	Identifier	compiler		1097075	0					
ANR	1097095	Argument	options		1097075	1					
ANR	1097096	Identifier	options		1097075	0					
ANR	1097097	Argument	args		1097075	2					
ANR	1097098	Identifier	args		1097075	0					
ANR	1097099	Argument	scratches		1097075	3					
ANR	1097100	Identifier	scratches		1097075	0					
ANR	1097101	Argument	saveds		1097075	4					
ANR	1097102	Identifier	saveds		1097075	0					
ANR	1097103	Argument	fscratches		1097075	5					
ANR	1097104	Identifier	fscratches		1097075	0					
ANR	1097105	Argument	fsaveds		1097075	6					
ANR	1097106	Identifier	fsaveds		1097075	0					
ANR	1097107	Argument	local_size		1097075	7					
ANR	1097108	Identifier	local_size		1097075	0					
ANR	1097109	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	427:1:12949:13040	1097075	2	True				
ANR	1097110	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097075	0					
ANR	1097111	Callee	set_emit_enter		1097075	0					
ANR	1097112	Identifier	set_emit_enter		1097075	0					
ANR	1097113	ArgumentList	compiler		1097075	1					
ANR	1097114	Argument	compiler		1097075	0					
ANR	1097115	Identifier	compiler		1097075	0					
ANR	1097116	Argument	options		1097075	1					
ANR	1097117	Identifier	options		1097075	0					
ANR	1097118	Argument	args		1097075	2					
ANR	1097119	Identifier	args		1097075	0					
ANR	1097120	Argument	scratches		1097075	3					
ANR	1097121	Identifier	scratches		1097075	0					
ANR	1097122	Argument	saveds		1097075	4					
ANR	1097123	Identifier	saveds		1097075	0					
ANR	1097124	Argument	fscratches		1097075	5					
ANR	1097125	Identifier	fscratches		1097075	0					
ANR	1097126	Argument	fsaveds		1097075	6					
ANR	1097127	Identifier	fsaveds		1097075	0					
ANR	1097128	Argument	local_size		1097075	7					
ANR	1097129	Identifier	local_size		1097075	0					
ANR	1097130	ExpressionStatement	local_size = ( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7	429:1:13044:13102	1097075	3	True				
ANR	1097131	AssignmentExpression	local_size = ( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7		1097075	0		=			
ANR	1097132	Identifier	local_size		1097075	0					
ANR	1097133	BitAndExpression	( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7		1097075	1		&			
ANR	1097134	AdditiveExpression	local_size + SLJIT_LOCALS_OFFSET + 7		1097075	0		+			
ANR	1097135	Identifier	local_size		1097075	0					
ANR	1097136	AdditiveExpression	SLJIT_LOCALS_OFFSET + 7		1097075	1		+			
ANR	1097137	Identifier	SLJIT_LOCALS_OFFSET		1097075	0					
ANR	1097138	PrimaryExpression	7		1097075	1					
ANR	1097139	Identifier	~0x7		1097075	1					
ANR	1097140	ExpressionStatement	compiler -> local_size = local_size	430:1:13105:13138	1097075	4	True				
ANR	1097141	AssignmentExpression	compiler -> local_size = local_size		1097075	0		=			
ANR	1097142	PtrMemberAccess	compiler -> local_size		1097075	0					
ANR	1097143	Identifier	compiler		1097075	0					
ANR	1097144	Identifier	local_size		1097075	1					
ANR	1097145	Identifier	local_size		1097075	1					
ANR	1097146	IfStatement	if ( local_size <= SIMM_MAX )		1097075	5					
ANR	1097147	Condition	local_size <= SIMM_MAX	432:5:13146:13167	1097075	0	True				
ANR	1097148	RelationalExpression	local_size <= SIMM_MAX		1097075	0		<=			
ANR	1097149	Identifier	local_size		1097075	0					
ANR	1097150	Identifier	SIMM_MAX		1097075	1					
ANR	1097151	CompoundStatement		9:29:348:348	1097075	1					
ANR	1097152	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size ) , UNMOVABLE_INS ) )"	433:2:13174:13271	1097075	0	True				
ANR	1097153	CallExpression	"FAIL_IF ( push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size ) , UNMOVABLE_INS ) )"		1097075	0					
ANR	1097154	Callee	FAIL_IF		1097075	0					
ANR	1097155	Identifier	FAIL_IF		1097075	0					
ANR	1097156	ArgumentList	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size ) , UNMOVABLE_INS )"		1097075	1					
ANR	1097157	Argument	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size ) , UNMOVABLE_INS )"		1097075	0					
ANR	1097158	CallExpression	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size ) , UNMOVABLE_INS )"		1097075	0					
ANR	1097159	Callee	push_inst		1097075	0					
ANR	1097160	Identifier	push_inst		1097075	0					
ANR	1097161	ArgumentList	compiler		1097075	1					
ANR	1097162	Argument	compiler		1097075	0					
ANR	1097163	Identifier	compiler		1097075	0					
ANR	1097164	Argument	SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size )		1097075	1					
ANR	1097165	InclusiveOrExpression	SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size )		1097075	0		|			
ANR	1097166	Identifier	SAVE		1097075	0					
ANR	1097167	InclusiveOrExpression	D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | IMM ( - local_size )		1097075	1		|			
ANR	1097168	CallExpression	D ( SLJIT_SP )		1097075	0					
ANR	1097169	Callee	D		1097075	0					
ANR	1097170	Identifier	D		1097075	0					
ANR	1097171	ArgumentList	SLJIT_SP		1097075	1					
ANR	1097172	Argument	SLJIT_SP		1097075	0					
ANR	1097173	Identifier	SLJIT_SP		1097075	0					
ANR	1097174	InclusiveOrExpression	S1 ( SLJIT_SP ) | IMM ( - local_size )		1097075	1		|			
ANR	1097175	CallExpression	S1 ( SLJIT_SP )		1097075	0					
ANR	1097176	Callee	S1		1097075	0					
ANR	1097177	Identifier	S1		1097075	0					
ANR	1097178	ArgumentList	SLJIT_SP		1097075	1					
ANR	1097179	Argument	SLJIT_SP		1097075	0					
ANR	1097180	Identifier	SLJIT_SP		1097075	0					
ANR	1097181	CallExpression	IMM ( - local_size )		1097075	1					
ANR	1097182	Callee	IMM		1097075	0					
ANR	1097183	Identifier	IMM		1097075	0					
ANR	1097184	ArgumentList	- local_size		1097075	1					
ANR	1097185	Argument	- local_size		1097075	0					
ANR	1097186	UnaryOperationExpression	- local_size		1097075	0					
ANR	1097187	UnaryOperator	-		1097075	0					
ANR	1097188	Identifier	local_size		1097075	1					
ANR	1097189	Argument	UNMOVABLE_INS		1097075	2					
ANR	1097190	Identifier	UNMOVABLE_INS		1097075	0					
ANR	1097191	ElseStatement	else		1097075	0					
ANR	1097192	CompoundStatement		12:6:460:460	1097075	0					
ANR	1097193	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , - local_size ) )"	436:2:13286:13342	1097075	0	True				
ANR	1097194	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , - local_size ) )"		1097075	0					
ANR	1097195	Callee	FAIL_IF		1097075	0					
ANR	1097196	Identifier	FAIL_IF		1097075	0					
ANR	1097197	ArgumentList	"load_immediate ( compiler , TMP_REG1 , - local_size )"		1097075	1					
ANR	1097198	Argument	"load_immediate ( compiler , TMP_REG1 , - local_size )"		1097075	0					
ANR	1097199	CallExpression	"load_immediate ( compiler , TMP_REG1 , - local_size )"		1097075	0					
ANR	1097200	Callee	load_immediate		1097075	0					
ANR	1097201	Identifier	load_immediate		1097075	0					
ANR	1097202	ArgumentList	compiler		1097075	1					
ANR	1097203	Argument	compiler		1097075	0					
ANR	1097204	Identifier	compiler		1097075	0					
ANR	1097205	Argument	TMP_REG1		1097075	1					
ANR	1097206	Identifier	TMP_REG1		1097075	0					
ANR	1097207	Argument	- local_size		1097075	2					
ANR	1097208	UnaryOperationExpression	- local_size		1097075	0					
ANR	1097209	UnaryOperator	-		1097075	0					
ANR	1097210	Identifier	local_size		1097075	1					
ANR	1097211	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 ) , UNMOVABLE_INS ) )"	437:2:13346:13439	1097075	1	True				
ANR	1097212	CallExpression	"FAIL_IF ( push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 ) , UNMOVABLE_INS ) )"		1097075	0					
ANR	1097213	Callee	FAIL_IF		1097075	0					
ANR	1097214	Identifier	FAIL_IF		1097075	0					
ANR	1097215	ArgumentList	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 ) , UNMOVABLE_INS )"		1097075	1					
ANR	1097216	Argument	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 ) , UNMOVABLE_INS )"		1097075	0					
ANR	1097217	CallExpression	"push_inst ( compiler , SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 ) , UNMOVABLE_INS )"		1097075	0					
ANR	1097218	Callee	push_inst		1097075	0					
ANR	1097219	Identifier	push_inst		1097075	0					
ANR	1097220	ArgumentList	compiler		1097075	1					
ANR	1097221	Argument	compiler		1097075	0					
ANR	1097222	Identifier	compiler		1097075	0					
ANR	1097223	Argument	SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 )		1097075	1					
ANR	1097224	InclusiveOrExpression	SAVE | D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 )		1097075	0		|			
ANR	1097225	Identifier	SAVE		1097075	0					
ANR	1097226	InclusiveOrExpression	D ( SLJIT_SP ) | S1 ( SLJIT_SP ) | S2 ( TMP_REG1 )		1097075	1		|			
ANR	1097227	CallExpression	D ( SLJIT_SP )		1097075	0					
ANR	1097228	Callee	D		1097075	0					
ANR	1097229	Identifier	D		1097075	0					
ANR	1097230	ArgumentList	SLJIT_SP		1097075	1					
ANR	1097231	Argument	SLJIT_SP		1097075	0					
ANR	1097232	Identifier	SLJIT_SP		1097075	0					
ANR	1097233	InclusiveOrExpression	S1 ( SLJIT_SP ) | S2 ( TMP_REG1 )		1097075	1		|			
ANR	1097234	CallExpression	S1 ( SLJIT_SP )		1097075	0					
ANR	1097235	Callee	S1		1097075	0					
ANR	1097236	Identifier	S1		1097075	0					
ANR	1097237	ArgumentList	SLJIT_SP		1097075	1					
ANR	1097238	Argument	SLJIT_SP		1097075	0					
ANR	1097239	Identifier	SLJIT_SP		1097075	0					
ANR	1097240	CallExpression	S2 ( TMP_REG1 )		1097075	1					
ANR	1097241	Callee	S2		1097075	0					
ANR	1097242	Identifier	S2		1097075	0					
ANR	1097243	ArgumentList	TMP_REG1		1097075	1					
ANR	1097244	Argument	TMP_REG1		1097075	0					
ANR	1097245	Identifier	TMP_REG1		1097075	0					
ANR	1097246	Argument	UNMOVABLE_INS		1097075	2					
ANR	1097247	Identifier	UNMOVABLE_INS		1097075	0					
ANR	1097248	ReturnStatement	return SLJIT_SUCCESS ;	442:1:13500:13520	1097075	6	True				
ANR	1097249	Identifier	SLJIT_SUCCESS		1097075	0					
ANR	1097250	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1097075	1					
ANR	1097251	Identifier	sljit_emit_enter		1097075	2					
ANR	1097252	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1097075	3					
ANR	1097253	Parameter	struct sljit_compiler * compiler	421:51:12656:12686	1097075	0	True				
ANR	1097254	ParameterType	struct sljit_compiler *		1097075	0					
ANR	1097255	Identifier	compiler		1097075	1					
ANR	1097256	Parameter	sljit_si options	422:1:12690:12705	1097075	1	True				
ANR	1097257	ParameterType	sljit_si		1097075	0					
ANR	1097258	Identifier	options		1097075	1					
ANR	1097259	Parameter	sljit_si args	422:19:12708:12720	1097075	2	True				
ANR	1097260	ParameterType	sljit_si		1097075	0					
ANR	1097261	Identifier	args		1097075	1					
ANR	1097262	Parameter	sljit_si scratches	422:34:12723:12740	1097075	3	True				
ANR	1097263	ParameterType	sljit_si		1097075	0					
ANR	1097264	Identifier	scratches		1097075	1					
ANR	1097265	Parameter	sljit_si saveds	422:54:12743:12757	1097075	4	True				
ANR	1097266	ParameterType	sljit_si		1097075	0					
ANR	1097267	Identifier	saveds		1097075	1					
ANR	1097268	Parameter	sljit_si fscratches	423:1:12761:12779	1097075	5	True				
ANR	1097269	ParameterType	sljit_si		1097075	0					
ANR	1097270	Identifier	fscratches		1097075	1					
ANR	1097271	Parameter	sljit_si fsaveds	423:22:12782:12797	1097075	6	True				
ANR	1097272	ParameterType	sljit_si		1097075	0					
ANR	1097273	Identifier	fsaveds		1097075	1					
ANR	1097274	Parameter	sljit_si local_size	423:40:12800:12818	1097075	7	True				
ANR	1097275	ParameterType	sljit_si		1097075	0					
ANR	1097276	Identifier	local_size		1097075	1					
ANR	1097277	CFGEntryNode	ENTRY		1097075		True				
ANR	1097278	CFGExitNode	EXIT		1097075		True				
ANR	1097279	Symbol	TMP_REG1		1097075						
ANR	1097280	Symbol	D		1097075						
ANR	1097281	Symbol	scratches		1097075						
ANR	1097282	Symbol	saveds		1097075						
ANR	1097283	Symbol	check_sljit_emit_enter		1097075						
ANR	1097284	Symbol	~0x7		1097075						
ANR	1097285	Symbol	* compiler		1097075						
ANR	1097286	Symbol	SIMM_MAX		1097075						
ANR	1097287	Symbol	SLJIT_SP		1097075						
ANR	1097288	Symbol	load_immediate		1097075						
ANR	1097289	Symbol	SLJIT_LOCALS_OFFSET		1097075						
ANR	1097290	Symbol	options		1097075						
ANR	1097291	Symbol	SAVE		1097075						
ANR	1097292	Symbol	compiler		1097075						
ANR	1097293	Symbol	local_size		1097075						
ANR	1097294	Symbol	push_inst		1097075						
ANR	1097295	Symbol	UNMOVABLE_INS		1097075						
ANR	1097296	Symbol	IMM		1097075						
ANR	1097297	Symbol	SLJIT_SUCCESS		1097075						
ANR	1097298	Symbol	args		1097075						
ANR	1097299	Symbol	fscratches		1097075						
ANR	1097300	Symbol	compiler -> local_size		1097075						
ANR	1097301	Symbol	fsaveds		1097075						
ANR	1097302	Symbol	S1		1097075						
ANR	1097303	Symbol	S2		1097075						
ANR	1097304	Function	sljit_set_context	445:0:13525:14060							
ANR	1097305	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1097304	0					
ANR	1097306	CompoundStatement		448:0:13742:14060	1097304	0					
ANR	1097307	ExpressionStatement	CHECK_ERROR ( )	449:1:13745:13758	1097304	0	True				
ANR	1097308	CallExpression	CHECK_ERROR ( )		1097304	0					
ANR	1097309	Callee	CHECK_ERROR		1097304	0					
ANR	1097310	Identifier	CHECK_ERROR		1097304	0					
ANR	1097311	ArgumentList			1097304	1					
ANR	1097312	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	450:1:13761:13868	1097304	1	True				
ANR	1097313	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1097304	0					
ANR	1097314	Callee	CHECK		1097304	0					
ANR	1097315	Identifier	CHECK		1097304	0					
ANR	1097316	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097304	1					
ANR	1097317	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097304	0					
ANR	1097318	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097304	0					
ANR	1097319	Callee	check_sljit_set_context		1097304	0					
ANR	1097320	Identifier	check_sljit_set_context		1097304	0					
ANR	1097321	ArgumentList	compiler		1097304	1					
ANR	1097322	Argument	compiler		1097304	0					
ANR	1097323	Identifier	compiler		1097304	0					
ANR	1097324	Argument	options		1097304	1					
ANR	1097325	Identifier	options		1097304	0					
ANR	1097326	Argument	args		1097304	2					
ANR	1097327	Identifier	args		1097304	0					
ANR	1097328	Argument	scratches		1097304	3					
ANR	1097329	Identifier	scratches		1097304	0					
ANR	1097330	Argument	saveds		1097304	4					
ANR	1097331	Identifier	saveds		1097304	0					
ANR	1097332	Argument	fscratches		1097304	5					
ANR	1097333	Identifier	fscratches		1097304	0					
ANR	1097334	Argument	fsaveds		1097304	6					
ANR	1097335	Identifier	fsaveds		1097304	0					
ANR	1097336	Argument	local_size		1097304	7					
ANR	1097337	Identifier	local_size		1097304	0					
ANR	1097338	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	451:1:13871:13963	1097304	2	True				
ANR	1097339	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1097304	0					
ANR	1097340	Callee	set_set_context		1097304	0					
ANR	1097341	Identifier	set_set_context		1097304	0					
ANR	1097342	ArgumentList	compiler		1097304	1					
ANR	1097343	Argument	compiler		1097304	0					
ANR	1097344	Identifier	compiler		1097304	0					
ANR	1097345	Argument	options		1097304	1					
ANR	1097346	Identifier	options		1097304	0					
ANR	1097347	Argument	args		1097304	2					
ANR	1097348	Identifier	args		1097304	0					
ANR	1097349	Argument	scratches		1097304	3					
ANR	1097350	Identifier	scratches		1097304	0					
ANR	1097351	Argument	saveds		1097304	4					
ANR	1097352	Identifier	saveds		1097304	0					
ANR	1097353	Argument	fscratches		1097304	5					
ANR	1097354	Identifier	fscratches		1097304	0					
ANR	1097355	Argument	fsaveds		1097304	6					
ANR	1097356	Identifier	fsaveds		1097304	0					
ANR	1097357	Argument	local_size		1097304	7					
ANR	1097358	Identifier	local_size		1097304	0					
ANR	1097359	ExpressionStatement	compiler -> local_size = ( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7	453:1:13967:14035	1097304	3	True				
ANR	1097360	AssignmentExpression	compiler -> local_size = ( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7		1097304	0		=			
ANR	1097361	PtrMemberAccess	compiler -> local_size		1097304	0					
ANR	1097362	Identifier	compiler		1097304	0					
ANR	1097363	Identifier	local_size		1097304	1					
ANR	1097364	BitAndExpression	( local_size + SLJIT_LOCALS_OFFSET + 7 ) & ~0x7		1097304	1		&			
ANR	1097365	AdditiveExpression	local_size + SLJIT_LOCALS_OFFSET + 7		1097304	0		+			
ANR	1097366	Identifier	local_size		1097304	0					
ANR	1097367	AdditiveExpression	SLJIT_LOCALS_OFFSET + 7		1097304	1		+			
ANR	1097368	Identifier	SLJIT_LOCALS_OFFSET		1097304	0					
ANR	1097369	PrimaryExpression	7		1097304	1					
ANR	1097370	Identifier	~0x7		1097304	1					
ANR	1097371	ReturnStatement	return SLJIT_SUCCESS ;	454:1:14038:14058	1097304	4	True				
ANR	1097372	Identifier	SLJIT_SUCCESS		1097304	0					
ANR	1097373	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1097304	1					
ANR	1097374	Identifier	sljit_set_context		1097304	2					
ANR	1097375	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1097304	3					
ANR	1097376	Parameter	struct sljit_compiler * compiler	445:52:13577:13607	1097304	0	True				
ANR	1097377	ParameterType	struct sljit_compiler *		1097304	0					
ANR	1097378	Identifier	compiler		1097304	1					
ANR	1097379	Parameter	sljit_si options	446:1:13611:13626	1097304	1	True				
ANR	1097380	ParameterType	sljit_si		1097304	0					
ANR	1097381	Identifier	options		1097304	1					
ANR	1097382	Parameter	sljit_si args	446:19:13629:13641	1097304	2	True				
ANR	1097383	ParameterType	sljit_si		1097304	0					
ANR	1097384	Identifier	args		1097304	1					
ANR	1097385	Parameter	sljit_si scratches	446:34:13644:13661	1097304	3	True				
ANR	1097386	ParameterType	sljit_si		1097304	0					
ANR	1097387	Identifier	scratches		1097304	1					
ANR	1097388	Parameter	sljit_si saveds	446:54:13664:13678	1097304	4	True				
ANR	1097389	ParameterType	sljit_si		1097304	0					
ANR	1097390	Identifier	saveds		1097304	1					
ANR	1097391	Parameter	sljit_si fscratches	447:1:13682:13700	1097304	5	True				
ANR	1097392	ParameterType	sljit_si		1097304	0					
ANR	1097393	Identifier	fscratches		1097304	1					
ANR	1097394	Parameter	sljit_si fsaveds	447:22:13703:13718	1097304	6	True				
ANR	1097395	ParameterType	sljit_si		1097304	0					
ANR	1097396	Identifier	fsaveds		1097304	1					
ANR	1097397	Parameter	sljit_si local_size	447:40:13721:13739	1097304	7	True				
ANR	1097398	ParameterType	sljit_si		1097304	0					
ANR	1097399	Identifier	local_size		1097304	1					
ANR	1097400	CFGEntryNode	ENTRY		1097304		True				
ANR	1097401	CFGExitNode	EXIT		1097304		True				
ANR	1097402	Symbol	local_size		1097304						
ANR	1097403	Symbol	scratches		1097304						
ANR	1097404	Symbol	saveds		1097304						
ANR	1097405	Symbol	check_sljit_set_context		1097304						
ANR	1097406	Symbol	SLJIT_SUCCESS		1097304						
ANR	1097407	Symbol	~0x7		1097304						
ANR	1097408	Symbol	* compiler		1097304						
ANR	1097409	Symbol	args		1097304						
ANR	1097410	Symbol	fscratches		1097304						
ANR	1097411	Symbol	compiler -> local_size		1097304						
ANR	1097412	Symbol	fsaveds		1097304						
ANR	1097413	Symbol	SLJIT_LOCALS_OFFSET		1097304						
ANR	1097414	Symbol	options		1097304						
ANR	1097415	Symbol	compiler		1097304						
ANR	1097416	Function	sljit_emit_return	457:0:14063:14557							
ANR	1097417	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1097416	0					
ANR	1097418	CompoundStatement		458:0:14190:14557	1097416	0					
ANR	1097419	ExpressionStatement	CHECK_ERROR ( )	459:1:14193:14206	1097416	0	True				
ANR	1097420	CallExpression	CHECK_ERROR ( )		1097416	0					
ANR	1097421	Callee	CHECK_ERROR		1097416	0					
ANR	1097422	Identifier	CHECK_ERROR		1097416	0					
ANR	1097423	ArgumentList			1097416	1					
ANR	1097424	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	460:1:14209:14264	1097416	1	True				
ANR	1097425	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1097416	0					
ANR	1097426	Callee	CHECK		1097416	0					
ANR	1097427	Identifier	CHECK		1097416	0					
ANR	1097428	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1097416	1					
ANR	1097429	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1097416	0					
ANR	1097430	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1097416	0					
ANR	1097431	Callee	check_sljit_emit_return		1097416	0					
ANR	1097432	Identifier	check_sljit_emit_return		1097416	0					
ANR	1097433	ArgumentList	compiler		1097416	1					
ANR	1097434	Argument	compiler		1097416	0					
ANR	1097435	Identifier	compiler		1097416	0					
ANR	1097436	Argument	op		1097416	1					
ANR	1097437	Identifier	op		1097416	0					
ANR	1097438	Argument	src		1097416	2					
ANR	1097439	Identifier	src		1097416	0					
ANR	1097440	Argument	srcw		1097416	3					
ANR	1097441	Identifier	srcw		1097416	0					
ANR	1097442	IfStatement	if ( op != SLJIT_MOV || ! FAST_IS_REG ( src ) )		1097416	2					
ANR	1097443	Condition	op != SLJIT_MOV || ! FAST_IS_REG ( src )	462:5:14272:14307	1097416	0	True				
ANR	1097444	OrExpression	op != SLJIT_MOV || ! FAST_IS_REG ( src )		1097416	0		||			
ANR	1097445	EqualityExpression	op != SLJIT_MOV		1097416	0		!=			
ANR	1097446	Identifier	op		1097416	0					
ANR	1097447	Identifier	SLJIT_MOV		1097416	1					
ANR	1097448	UnaryOperationExpression	! FAST_IS_REG ( src )		1097416	1					
ANR	1097449	UnaryOperator	!		1097416	0					
ANR	1097450	CallExpression	FAST_IS_REG ( src )		1097416	1					
ANR	1097451	Callee	FAST_IS_REG		1097416	0					
ANR	1097452	Identifier	FAST_IS_REG		1097416	0					
ANR	1097453	ArgumentList	src		1097416	1					
ANR	1097454	Argument	src		1097416	0					
ANR	1097455	Identifier	src		1097416	0					
ANR	1097456	CompoundStatement		5:43:119:119	1097416	1					
ANR	1097457	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	463:2:14314:14370	1097416	0	True				
ANR	1097458	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1097416	0					
ANR	1097459	Callee	FAIL_IF		1097416	0					
ANR	1097460	Identifier	FAIL_IF		1097416	0					
ANR	1097461	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1097416	1					
ANR	1097462	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1097416	0					
ANR	1097463	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1097416	0					
ANR	1097464	Callee	emit_mov_before_return		1097416	0					
ANR	1097465	Identifier	emit_mov_before_return		1097416	0					
ANR	1097466	ArgumentList	compiler		1097416	1					
ANR	1097467	Argument	compiler		1097416	0					
ANR	1097468	Identifier	compiler		1097416	0					
ANR	1097469	Argument	op		1097416	1					
ANR	1097470	Identifier	op		1097416	0					
ANR	1097471	Argument	src		1097416	2					
ANR	1097472	Identifier	src		1097416	0					
ANR	1097473	Argument	srcw		1097416	3					
ANR	1097474	Identifier	srcw		1097416	0					
ANR	1097475	ExpressionStatement	src = SLJIT_R0	464:2:14374:14388	1097416	1	True				
ANR	1097476	AssignmentExpression	src = SLJIT_R0		1097416	0		=			
ANR	1097477	Identifier	src		1097416	0					
ANR	1097478	Identifier	SLJIT_R0		1097416	1					
ANR	1097479	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 ) , UNMOVABLE_INS ) )"	467:1:14395:14470	1097416	3	True				
ANR	1097480	CallExpression	"FAIL_IF ( push_inst ( compiler , JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 ) , UNMOVABLE_INS ) )"		1097416	0					
ANR	1097481	Callee	FAIL_IF		1097416	0					
ANR	1097482	Identifier	FAIL_IF		1097416	0					
ANR	1097483	ArgumentList	"push_inst ( compiler , JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 ) , UNMOVABLE_INS )"		1097416	1					
ANR	1097484	Argument	"push_inst ( compiler , JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 ) , UNMOVABLE_INS )"		1097416	0					
ANR	1097485	CallExpression	"push_inst ( compiler , JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 ) , UNMOVABLE_INS )"		1097416	0					
ANR	1097486	Callee	push_inst		1097416	0					
ANR	1097487	Identifier	push_inst		1097416	0					
ANR	1097488	ArgumentList	compiler		1097416	1					
ANR	1097489	Argument	compiler		1097416	0					
ANR	1097490	Identifier	compiler		1097416	0					
ANR	1097491	Argument	JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 )		1097416	1					
ANR	1097492	InclusiveOrExpression	JMPL | D ( 0 ) | S1A ( 31 ) | IMM ( 8 )		1097416	0		|			
ANR	1097493	Identifier	JMPL		1097416	0					
ANR	1097494	InclusiveOrExpression	D ( 0 ) | S1A ( 31 ) | IMM ( 8 )		1097416	1		|			
ANR	1097495	CallExpression	D ( 0 )		1097416	0					
ANR	1097496	Callee	D		1097416	0					
ANR	1097497	Identifier	D		1097416	0					
ANR	1097498	ArgumentList	0		1097416	1					
ANR	1097499	Argument	0		1097416	0					
ANR	1097500	PrimaryExpression	0		1097416	0					
ANR	1097501	InclusiveOrExpression	S1A ( 31 ) | IMM ( 8 )		1097416	1		|			
ANR	1097502	CallExpression	S1A ( 31 )		1097416	0					
ANR	1097503	Callee	S1A		1097416	0					
ANR	1097504	Identifier	S1A		1097416	0					
ANR	1097505	ArgumentList	31		1097416	1					
ANR	1097506	Argument	31		1097416	0					
ANR	1097507	PrimaryExpression	31		1097416	0					
ANR	1097508	CallExpression	IMM ( 8 )		1097416	1					
ANR	1097509	Callee	IMM		1097416	0					
ANR	1097510	Identifier	IMM		1097416	0					
ANR	1097511	ArgumentList	8		1097416	1					
ANR	1097512	Argument	8		1097416	0					
ANR	1097513	PrimaryExpression	8		1097416	0					
ANR	1097514	Argument	UNMOVABLE_INS		1097416	2					
ANR	1097515	Identifier	UNMOVABLE_INS		1097416	0					
ANR	1097516	ReturnStatement	"return push_inst ( compiler , RESTORE | D ( SLJIT_R0 ) | S1 ( src ) | S2 ( 0 ) , UNMOVABLE_INS ) ;"	468:1:14473:14555	1097416	4	True				
ANR	1097517	CallExpression	"push_inst ( compiler , RESTORE | D ( SLJIT_R0 ) | S1 ( src ) | S2 ( 0 ) , UNMOVABLE_INS )"		1097416	0					
ANR	1097518	Callee	push_inst		1097416	0					
ANR	1097519	Identifier	push_inst		1097416	0					
ANR	1097520	ArgumentList	compiler		1097416	1					
ANR	1097521	Argument	compiler		1097416	0					
ANR	1097522	Identifier	compiler		1097416	0					
ANR	1097523	Argument	RESTORE | D ( SLJIT_R0 ) | S1 ( src ) | S2 ( 0 )		1097416	1					
ANR	1097524	InclusiveOrExpression	RESTORE | D ( SLJIT_R0 ) | S1 ( src ) | S2 ( 0 )		1097416	0		|			
ANR	1097525	Identifier	RESTORE		1097416	0					
ANR	1097526	InclusiveOrExpression	D ( SLJIT_R0 ) | S1 ( src ) | S2 ( 0 )		1097416	1		|			
ANR	1097527	CallExpression	D ( SLJIT_R0 )		1097416	0					
ANR	1097528	Callee	D		1097416	0					
ANR	1097529	Identifier	D		1097416	0					
ANR	1097530	ArgumentList	SLJIT_R0		1097416	1					
ANR	1097531	Argument	SLJIT_R0		1097416	0					
ANR	1097532	Identifier	SLJIT_R0		1097416	0					
ANR	1097533	InclusiveOrExpression	S1 ( src ) | S2 ( 0 )		1097416	1		|			
ANR	1097534	CallExpression	S1 ( src )		1097416	0					
ANR	1097535	Callee	S1		1097416	0					
ANR	1097536	Identifier	S1		1097416	0					
ANR	1097537	ArgumentList	src		1097416	1					
ANR	1097538	Argument	src		1097416	0					
ANR	1097539	Identifier	src		1097416	0					
ANR	1097540	CallExpression	S2 ( 0 )		1097416	1					
ANR	1097541	Callee	S2		1097416	0					
ANR	1097542	Identifier	S2		1097416	0					
ANR	1097543	ArgumentList	0		1097416	1					
ANR	1097544	Argument	0		1097416	0					
ANR	1097545	PrimaryExpression	0		1097416	0					
ANR	1097546	Argument	UNMOVABLE_INS		1097416	2					
ANR	1097547	Identifier	UNMOVABLE_INS		1097416	0					
ANR	1097548	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1097416	1					
ANR	1097549	Identifier	sljit_emit_return		1097416	2					
ANR	1097550	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1097416	3					
ANR	1097551	Parameter	struct sljit_compiler * compiler	457:52:14115:14145	1097416	0	True				
ANR	1097552	ParameterType	struct sljit_compiler *		1097416	0					
ANR	1097553	Identifier	compiler		1097416	1					
ANR	1097554	Parameter	sljit_si op	457:85:14148:14158	1097416	1	True				
ANR	1097555	ParameterType	sljit_si		1097416	0					
ANR	1097556	Identifier	op		1097416	1					
ANR	1097557	Parameter	sljit_si src	457:98:14161:14172	1097416	2	True				
ANR	1097558	ParameterType	sljit_si		1097416	0					
ANR	1097559	Identifier	src		1097416	1					
ANR	1097560	Parameter	sljit_sw srcw	457:112:14175:14187	1097416	3	True				
ANR	1097561	ParameterType	sljit_sw		1097416	0					
ANR	1097562	Identifier	srcw		1097416	1					
ANR	1097563	CFGEntryNode	ENTRY		1097416		True				
ANR	1097564	CFGExitNode	EXIT		1097416		True				
ANR	1097565	Symbol	op		1097416						
ANR	1097566	Symbol	push_inst		1097416						
ANR	1097567	Symbol	S1A		1097416						
ANR	1097568	Symbol	FAST_IS_REG		1097416						
ANR	1097569	Symbol	D		1097416						
ANR	1097570	Symbol	src		1097416						
ANR	1097571	Symbol	SLJIT_MOV		1097416						
ANR	1097572	Symbol	srcw		1097416						
ANR	1097573	Symbol	UNMOVABLE_INS		1097416						
ANR	1097574	Symbol	IMM		1097416						
ANR	1097575	Symbol	SLJIT_R0		1097416						
ANR	1097576	Symbol	check_sljit_emit_return		1097416						
ANR	1097577	Symbol	RESTORE		1097416						
ANR	1097578	Symbol	emit_mov_before_return		1097416						
ANR	1097579	Symbol	compiler		1097416						
ANR	1097580	Symbol	JMPL		1097416						
ANR	1097581	Symbol	S1		1097416						
ANR	1097582	Symbol	S2		1097416						
ANR	1097583	DeclStmt									
ANR	1097584	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 16 + 4 ]	data_transfer_insts
ANR	1097585	Function	getput_arg_fast	509:0:16133:16926							
ANR	1097586	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1097585	0					
ANR	1097587	CompoundStatement		510:0:16257:16926	1097585	0					
ANR	1097588	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	511:1:16260:16289	1097585	0	True				
ANR	1097589	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1097585	0					
ANR	1097590	Callee	SLJIT_ASSERT		1097585	0					
ANR	1097591	Identifier	SLJIT_ASSERT		1097585	0					
ANR	1097592	ArgumentList	arg & SLJIT_MEM		1097585	1					
ANR	1097593	Argument	arg & SLJIT_MEM		1097585	0					
ANR	1097594	BitAndExpression	arg & SLJIT_MEM		1097585	0		&			
ANR	1097595	Identifier	arg		1097585	0					
ANR	1097596	Identifier	SLJIT_MEM		1097585	1					
ANR	1097597	IfStatement	if ( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) )		1097585	1					
ANR	1097598	Condition	! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK )	513:5:16297:16338	1097585	0	True				
ANR	1097599	OrExpression	! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK )		1097585	0		||			
ANR	1097600	UnaryOperationExpression	! ( flags & WRITE_BACK )		1097585	0					
ANR	1097601	UnaryOperator	!		1097585	0					
ANR	1097602	BitAndExpression	flags & WRITE_BACK		1097585	1		&			
ANR	1097603	Identifier	flags		1097585	0					
ANR	1097604	Identifier	WRITE_BACK		1097585	1					
ANR	1097605	UnaryOperationExpression	! ( arg & REG_MASK )		1097585	1					
ANR	1097606	UnaryOperator	!		1097585	0					
ANR	1097607	BitAndExpression	arg & REG_MASK		1097585	1		&			
ANR	1097608	Identifier	arg		1097585	0					
ANR	1097609	Identifier	REG_MASK		1097585	1					
ANR	1097610	CompoundStatement		4:49:83:83	1097585	1					
ANR	1097611	IfStatement	if ( ( ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN ) || ( ( arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == 0 ) )		1097585	0					
ANR	1097612	Condition	( ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN ) || ( ( arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == 0 )	514:6:16349:16464	1097585	0	True				
ANR	1097613	OrExpression	( ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN ) || ( ( arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == 0 )		1097585	0		||			
ANR	1097614	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= SIMM_MAX && argw >= SIMM_MIN		1097585	0		&&			
ANR	1097615	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1097585	0					
ANR	1097616	UnaryOperator	!		1097585	0					
ANR	1097617	BitAndExpression	arg & OFFS_REG_MASK		1097585	1		&			
ANR	1097618	Identifier	arg		1097585	0					
ANR	1097619	Identifier	OFFS_REG_MASK		1097585	1					
ANR	1097620	AndExpression	argw <= SIMM_MAX && argw >= SIMM_MIN		1097585	1		&&			
ANR	1097621	RelationalExpression	argw <= SIMM_MAX		1097585	0		<=			
ANR	1097622	Identifier	argw		1097585	0					
ANR	1097623	Identifier	SIMM_MAX		1097585	1					
ANR	1097624	RelationalExpression	argw >= SIMM_MIN		1097585	1		>=			
ANR	1097625	Identifier	argw		1097585	0					
ANR	1097626	Identifier	SIMM_MIN		1097585	1					
ANR	1097627	AndExpression	( arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == 0		1097585	1		&&			
ANR	1097628	BitAndExpression	arg & OFFS_REG_MASK		1097585	0		&			
ANR	1097629	Identifier	arg		1097585	0					
ANR	1097630	Identifier	OFFS_REG_MASK		1097585	1					
ANR	1097631	EqualityExpression	( argw & 0x3 ) == 0		1097585	1		==			
ANR	1097632	BitAndExpression	argw & 0x3		1097585	0		&			
ANR	1097633	Identifier	argw		1097585	0					
ANR	1097634	PrimaryExpression	0x3		1097585	1					
ANR	1097635	PrimaryExpression	0		1097585	1					
ANR	1097636	CompoundStatement		6:53:209:209	1097585	1					
ANR	1097637	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1097585	0					
ANR	1097638	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	517:7:16550:16581	1097585	0	True				
ANR	1097639	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1097585	0					
ANR	1097640	Callee	SLJIT_UNLIKELY		1097585	0					
ANR	1097641	Identifier	SLJIT_UNLIKELY		1097585	0					
ANR	1097642	ArgumentList	flags & ARG_TEST		1097585	1					
ANR	1097643	Argument	flags & ARG_TEST		1097585	0					
ANR	1097644	BitAndExpression	flags & ARG_TEST		1097585	0		&			
ANR	1097645	Identifier	flags		1097585	0					
ANR	1097646	Identifier	ARG_TEST		1097585	1					
ANR	1097647	ReturnStatement	return 1 ;	518:4:16588:16596	1097585	1	True				
ANR	1097648	PrimaryExpression	1		1097585	0					
ANR	1097649	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS ) )"	519:3:16601:16892	1097585	1	True				
ANR	1097650	CallExpression	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS ) )"		1097585	0					
ANR	1097651	Callee	FAIL_IF		1097585	0					
ANR	1097652	Identifier	FAIL_IF		1097585	0					
ANR	1097653	ArgumentList	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS )"		1097585	1					
ANR	1097654	Argument	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS )"		1097585	0					
ANR	1097655	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) ) , ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS )"		1097585	0					
ANR	1097656	Callee	push_inst		1097585	0					
ANR	1097657	Identifier	push_inst		1097585	0					
ANR	1097658	ArgumentList	compiler		1097585	1					
ANR	1097659	Argument	compiler		1097585	0					
ANR	1097660	Identifier	compiler		1097585	0					
ANR	1097661	Argument	data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) )		1097585	1					
ANR	1097662	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) )		1097585	0		|			
ANR	1097663	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1097585	0					
ANR	1097664	Identifier	data_transfer_insts		1097585	0					
ANR	1097665	BitAndExpression	flags & MEM_MASK		1097585	1		&			
ANR	1097666	Identifier	flags		1097585	0					
ANR	1097667	Identifier	MEM_MASK		1097585	1					
ANR	1097668	InclusiveOrExpression	( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) ) | S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) )		1097585	1		|			
ANR	1097669	ConditionalExpression	( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg )		1097585	0					
ANR	1097670	Condition	( flags & MEM_MASK ) <= GPR_REG		1097585	0					
ANR	1097671	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097585	0		<=			
ANR	1097672	BitAndExpression	flags & MEM_MASK		1097585	0		&			
ANR	1097673	Identifier	flags		1097585	0					
ANR	1097674	Identifier	MEM_MASK		1097585	1					
ANR	1097675	Identifier	GPR_REG		1097585	1					
ANR	1097676	CallExpression	D ( reg )		1097585	1					
ANR	1097677	Callee	D		1097585	0					
ANR	1097678	Identifier	D		1097585	0					
ANR	1097679	ArgumentList	reg		1097585	1					
ANR	1097680	Argument	reg		1097585	0					
ANR	1097681	Identifier	reg		1097585	0					
ANR	1097682	CallExpression	DA ( reg )		1097585	2					
ANR	1097683	Callee	DA		1097585	0					
ANR	1097684	Identifier	DA		1097585	0					
ANR	1097685	ArgumentList	reg		1097585	1					
ANR	1097686	Argument	reg		1097585	0					
ANR	1097687	Identifier	reg		1097585	0					
ANR	1097688	InclusiveOrExpression	S1 ( arg & REG_MASK ) | ( ( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw ) )		1097585	1		|			
ANR	1097689	CallExpression	S1 ( arg & REG_MASK )		1097585	0					
ANR	1097690	Callee	S1		1097585	0					
ANR	1097691	Identifier	S1		1097585	0					
ANR	1097692	ArgumentList	arg & REG_MASK		1097585	1					
ANR	1097693	Argument	arg & REG_MASK		1097585	0					
ANR	1097694	BitAndExpression	arg & REG_MASK		1097585	0		&			
ANR	1097695	Identifier	arg		1097585	0					
ANR	1097696	Identifier	REG_MASK		1097585	1					
ANR	1097697	ConditionalExpression	( arg & OFFS_REG_MASK ) ? S2 ( OFFS_REG ( arg ) ) : IMM ( argw )		1097585	1					
ANR	1097698	Condition	arg & OFFS_REG_MASK		1097585	0					
ANR	1097699	BitAndExpression	arg & OFFS_REG_MASK		1097585	0		&			
ANR	1097700	Identifier	arg		1097585	0					
ANR	1097701	Identifier	OFFS_REG_MASK		1097585	1					
ANR	1097702	CallExpression	S2 ( OFFS_REG ( arg ) )		1097585	1					
ANR	1097703	Callee	S2		1097585	0					
ANR	1097704	Identifier	S2		1097585	0					
ANR	1097705	ArgumentList	OFFS_REG ( arg )		1097585	1					
ANR	1097706	Argument	OFFS_REG ( arg )		1097585	0					
ANR	1097707	CallExpression	OFFS_REG ( arg )		1097585	0					
ANR	1097708	Callee	OFFS_REG		1097585	0					
ANR	1097709	Identifier	OFFS_REG		1097585	0					
ANR	1097710	ArgumentList	arg		1097585	1					
ANR	1097711	Argument	arg		1097585	0					
ANR	1097712	Identifier	arg		1097585	0					
ANR	1097713	CallExpression	IMM ( argw )		1097585	2					
ANR	1097714	Callee	IMM		1097585	0					
ANR	1097715	Identifier	IMM		1097585	0					
ANR	1097716	ArgumentList	argw		1097585	1					
ANR	1097717	Argument	argw		1097585	0					
ANR	1097718	Identifier	argw		1097585	0					
ANR	1097719	Argument	( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS		1097585	2					
ANR	1097720	ConditionalExpression	( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS		1097585	0					
ANR	1097721	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1097585	0					
ANR	1097722	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1097585	0		&&			
ANR	1097723	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097585	0		<=			
ANR	1097724	BitAndExpression	flags & MEM_MASK		1097585	0		&			
ANR	1097725	Identifier	flags		1097585	0					
ANR	1097726	Identifier	MEM_MASK		1097585	1					
ANR	1097727	Identifier	GPR_REG		1097585	1					
ANR	1097728	BitAndExpression	flags & LOAD_DATA		1097585	1		&			
ANR	1097729	Identifier	flags		1097585	0					
ANR	1097730	Identifier	LOAD_DATA		1097585	1					
ANR	1097731	CallExpression	DR ( reg )		1097585	1					
ANR	1097732	Callee	DR		1097585	0					
ANR	1097733	Identifier	DR		1097585	0					
ANR	1097734	ArgumentList	reg		1097585	1					
ANR	1097735	Argument	reg		1097585	0					
ANR	1097736	Identifier	reg		1097585	0					
ANR	1097737	Identifier	MOVABLE_INS		1097585	2					
ANR	1097738	ReturnStatement	return - 1 ;	523:3:16897:16906	1097585	2	True				
ANR	1097739	UnaryOperationExpression	- 1		1097585	0					
ANR	1097740	UnaryOperator	-		1097585	0					
ANR	1097741	PrimaryExpression	1		1097585	1					
ANR	1097742	ReturnStatement	return 0 ;	526:1:16916:16924	1097585	2	True				
ANR	1097743	PrimaryExpression	0		1097585	0					
ANR	1097744	ReturnType	static sljit_si		1097585	1					
ANR	1097745	Identifier	getput_arg_fast		1097585	2					
ANR	1097746	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1097585	3					
ANR	1097747	Parameter	struct sljit_compiler * compiler	509:32:16165:16195	1097585	0	True				
ANR	1097748	ParameterType	struct sljit_compiler *		1097585	0					
ANR	1097749	Identifier	compiler		1097585	1					
ANR	1097750	Parameter	sljit_si flags	509:65:16198:16211	1097585	1	True				
ANR	1097751	ParameterType	sljit_si		1097585	0					
ANR	1097752	Identifier	flags		1097585	1					
ANR	1097753	Parameter	sljit_si reg	509:81:16214:16225	1097585	2	True				
ANR	1097754	ParameterType	sljit_si		1097585	0					
ANR	1097755	Identifier	reg		1097585	1					
ANR	1097756	Parameter	sljit_si arg	509:95:16228:16239	1097585	3	True				
ANR	1097757	ParameterType	sljit_si		1097585	0					
ANR	1097758	Identifier	arg		1097585	1					
ANR	1097759	Parameter	sljit_sw argw	509:109:16242:16254	1097585	4	True				
ANR	1097760	ParameterType	sljit_sw		1097585	0					
ANR	1097761	Identifier	argw		1097585	1					
ANR	1097762	CFGEntryNode	ENTRY		1097585		True				
ANR	1097763	CFGExitNode	EXIT		1097585		True				
ANR	1097764	Symbol	LOAD_DATA		1097585						
ANR	1097765	Symbol	D		1097585						
ANR	1097766	Symbol	SLJIT_MEM		1097585						
ANR	1097767	Symbol	flags		1097585						
ANR	1097768	Symbol	* MEM_MASK		1097585						
ANR	1097769	Symbol	argw		1097585						
ANR	1097770	Symbol	SIMM_MAX		1097585						
ANR	1097771	Symbol	ARG_TEST		1097585						
ANR	1097772	Symbol	DR		1097585						
ANR	1097773	Symbol	reg		1097585						
ANR	1097774	Symbol	arg		1097585						
ANR	1097775	Symbol	compiler		1097585						
ANR	1097776	Symbol	WRITE_BACK		1097585						
ANR	1097777	Symbol	SIMM_MIN		1097585						
ANR	1097778	Symbol	* flags		1097585						
ANR	1097779	Symbol	push_inst		1097585						
ANR	1097780	Symbol	REG_MASK		1097585						
ANR	1097781	Symbol	OFFS_REG_MASK		1097585						
ANR	1097782	Symbol	IMM		1097585						
ANR	1097783	Symbol	data_transfer_insts		1097585						
ANR	1097784	Symbol	* data_transfer_insts		1097585						
ANR	1097785	Symbol	GPR_REG		1097585						
ANR	1097786	Symbol	MEM_MASK		1097585						
ANR	1097787	Symbol	OFFS_REG		1097585						
ANR	1097788	Symbol	MOVABLE_INS		1097585						
ANR	1097789	Symbol	DA		1097585						
ANR	1097790	Symbol	S1		1097585						
ANR	1097791	Symbol	SLJIT_UNLIKELY		1097585						
ANR	1097792	Symbol	S2		1097585						
ANR	1097793	Function	can_cache	532:0:17079:17570							
ANR	1097794	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1097793	0					
ANR	1097795	CompoundStatement		533:0:17173:17570	1097793	0					
ANR	1097796	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	534:1:17176:17233	1097793	0	True				
ANR	1097797	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1097793	0					
ANR	1097798	Callee	SLJIT_ASSERT		1097793	0					
ANR	1097799	Identifier	SLJIT_ASSERT		1097793	0					
ANR	1097800	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1097793	1					
ANR	1097801	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1097793	0					
ANR	1097802	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1097793	0		&&			
ANR	1097803	BitAndExpression	arg & SLJIT_MEM		1097793	0		&			
ANR	1097804	Identifier	arg		1097793	0					
ANR	1097805	Identifier	SLJIT_MEM		1097793	1					
ANR	1097806	BitAndExpression	next_arg & SLJIT_MEM		1097793	1		&			
ANR	1097807	Identifier	next_arg		1097793	0					
ANR	1097808	Identifier	SLJIT_MEM		1097793	1					
ANR	1097809	IfStatement	if ( arg & OFFS_REG_MASK )		1097793	1					
ANR	1097810	Condition	arg & OFFS_REG_MASK	537:5:17285:17303	1097793	0	True				
ANR	1097811	BitAndExpression	arg & OFFS_REG_MASK		1097793	0		&			
ANR	1097812	Identifier	arg		1097793	0					
ANR	1097813	Identifier	OFFS_REG_MASK		1097793	1					
ANR	1097814	CompoundStatement		5:26:132:132	1097793	1					
ANR	1097815	ExpressionStatement	argw &= 0x3	538:2:17310:17321	1097793	0	True				
ANR	1097816	AssignmentExpression	argw &= 0x3		1097793	0		&=			
ANR	1097817	Identifier	argw		1097793	0					
ANR	1097818	PrimaryExpression	0x3		1097793	1					
ANR	1097819	ExpressionStatement	SLJIT_ASSERT ( argw )	539:2:17325:17343	1097793	1	True				
ANR	1097820	CallExpression	SLJIT_ASSERT ( argw )		1097793	0					
ANR	1097821	Callee	SLJIT_ASSERT		1097793	0					
ANR	1097822	Identifier	SLJIT_ASSERT		1097793	0					
ANR	1097823	ArgumentList	argw		1097793	1					
ANR	1097824	Argument	argw		1097793	0					
ANR	1097825	Identifier	argw		1097793	0					
ANR	1097826	ExpressionStatement	next_argw &= 0x3	540:2:17347:17363	1097793	2	True				
ANR	1097827	AssignmentExpression	next_argw &= 0x3		1097793	0		&=			
ANR	1097828	Identifier	next_argw		1097793	0					
ANR	1097829	PrimaryExpression	0x3		1097793	1					
ANR	1097830	IfStatement	if ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == next_argw )		1097793	3					
ANR	1097831	Condition	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == next_argw	541:6:17371:17442	1097793	0	True				
ANR	1097832	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == next_argw		1097793	0		&&			
ANR	1097833	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1097793	0		==			
ANR	1097834	BitAndExpression	arg & OFFS_REG_MASK		1097793	0		&			
ANR	1097835	Identifier	arg		1097793	0					
ANR	1097836	Identifier	OFFS_REG_MASK		1097793	1					
ANR	1097837	BitAndExpression	next_arg & OFFS_REG_MASK		1097793	1		&			
ANR	1097838	Identifier	next_arg		1097793	0					
ANR	1097839	Identifier	OFFS_REG_MASK		1097793	1					
ANR	1097840	EqualityExpression	argw == next_argw		1097793	1		==			
ANR	1097841	Identifier	argw		1097793	0					
ANR	1097842	Identifier	next_argw		1097793	1					
ANR	1097843	ReturnStatement	return 1 ;	542:3:17448:17456	1097793	1	True				
ANR	1097844	PrimaryExpression	1		1097793	0					
ANR	1097845	ReturnStatement	return 0 ;	543:2:17460:17468	1097793	4	True				
ANR	1097846	PrimaryExpression	0		1097793	0					
ANR	1097847	IfStatement	if ( ( ( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN ) )		1097793	2					
ANR	1097848	Condition	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN	546:5:17479:17544	1097793	0	True				
ANR	1097849	AndExpression	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN		1097793	0		&&			
ANR	1097850	RelationalExpression	( next_argw - argw ) <= SIMM_MAX		1097793	0		<=			
ANR	1097851	AdditiveExpression	next_argw - argw		1097793	0		-			
ANR	1097852	Identifier	next_argw		1097793	0					
ANR	1097853	Identifier	argw		1097793	1					
ANR	1097854	Identifier	SIMM_MAX		1097793	1					
ANR	1097855	RelationalExpression	( next_argw - argw ) >= SIMM_MIN		1097793	1		>=			
ANR	1097856	AdditiveExpression	next_argw - argw		1097793	0		-			
ANR	1097857	Identifier	next_argw		1097793	0					
ANR	1097858	Identifier	argw		1097793	1					
ANR	1097859	Identifier	SIMM_MIN		1097793	1					
ANR	1097860	ReturnStatement	return 1 ;	547:2:17549:17557	1097793	1	True				
ANR	1097861	PrimaryExpression	1		1097793	0					
ANR	1097862	ReturnStatement	return 0 ;	548:1:17560:17568	1097793	3	True				
ANR	1097863	PrimaryExpression	0		1097793	0					
ANR	1097864	ReturnType	static sljit_si		1097793	1					
ANR	1097865	Identifier	can_cache		1097793	2					
ANR	1097866	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1097793	3					
ANR	1097867	Parameter	sljit_si arg	532:26:17105:17116	1097793	0	True				
ANR	1097868	ParameterType	sljit_si		1097793	0					
ANR	1097869	Identifier	arg		1097793	1					
ANR	1097870	Parameter	sljit_sw argw	532:40:17119:17131	1097793	1	True				
ANR	1097871	ParameterType	sljit_sw		1097793	0					
ANR	1097872	Identifier	argw		1097793	1					
ANR	1097873	Parameter	sljit_si next_arg	532:55:17134:17150	1097793	2	True				
ANR	1097874	ParameterType	sljit_si		1097793	0					
ANR	1097875	Identifier	next_arg		1097793	1					
ANR	1097876	Parameter	sljit_sw next_argw	532:74:17153:17170	1097793	3	True				
ANR	1097877	ParameterType	sljit_sw		1097793	0					
ANR	1097878	Identifier	next_argw		1097793	1					
ANR	1097879	CFGEntryNode	ENTRY		1097793		True				
ANR	1097880	CFGExitNode	EXIT		1097793		True				
ANR	1097881	Symbol	next_arg		1097793						
ANR	1097882	Symbol	SLJIT_MEM		1097793						
ANR	1097883	Symbol	arg		1097793						
ANR	1097884	Symbol	OFFS_REG_MASK		1097793						
ANR	1097885	Symbol	next_argw		1097793						
ANR	1097886	Symbol	argw		1097793						
ANR	1097887	Symbol	SIMM_MAX		1097793						
ANR	1097888	Symbol	SIMM_MIN		1097793						
ANR	1097889	Function	getput_arg	552:0:17633:20154							
ANR	1097890	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1097889	0					
ANR	1097891	CompoundStatement		553:0:17791:20154	1097889	0					
ANR	1097892	IdentifierDeclStatement	"sljit_si base , arg2 , delay_slot ;"	554:1:17794:17825	1097889	0	True				
ANR	1097893	IdentifierDecl	base		1097889	0					
ANR	1097894	IdentifierDeclType	sljit_si		1097889	0					
ANR	1097895	Identifier	base		1097889	1					
ANR	1097896	IdentifierDecl	arg2		1097889	1					
ANR	1097897	IdentifierDeclType	sljit_si		1097889	0					
ANR	1097898	Identifier	arg2		1097889	1					
ANR	1097899	IdentifierDecl	delay_slot		1097889	2					
ANR	1097900	IdentifierDeclType	sljit_si		1097889	0					
ANR	1097901	Identifier	delay_slot		1097889	1					
ANR	1097902	IdentifierDeclStatement	sljit_ins dest ;	555:1:17828:17842	1097889	1	True				
ANR	1097903	IdentifierDecl	dest		1097889	0					
ANR	1097904	IdentifierDeclType	sljit_ins		1097889	0					
ANR	1097905	Identifier	dest		1097889	1					
ANR	1097906	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	557:1:17846:17875	1097889	2	True				
ANR	1097907	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1097889	0					
ANR	1097908	Callee	SLJIT_ASSERT		1097889	0					
ANR	1097909	Identifier	SLJIT_ASSERT		1097889	0					
ANR	1097910	ArgumentList	arg & SLJIT_MEM		1097889	1					
ANR	1097911	Argument	arg & SLJIT_MEM		1097889	0					
ANR	1097912	BitAndExpression	arg & SLJIT_MEM		1097889	0		&			
ANR	1097913	Identifier	arg		1097889	0					
ANR	1097914	Identifier	SLJIT_MEM		1097889	1					
ANR	1097915	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1097889	3					
ANR	1097916	Condition	! ( next_arg & SLJIT_MEM )	558:5:17882:17904	1097889	0	True				
ANR	1097917	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1097889	0					
ANR	1097918	UnaryOperator	!		1097889	0					
ANR	1097919	BitAndExpression	next_arg & SLJIT_MEM		1097889	1		&			
ANR	1097920	Identifier	next_arg		1097889	0					
ANR	1097921	Identifier	SLJIT_MEM		1097889	1					
ANR	1097922	CompoundStatement		6:30:115:115	1097889	1					
ANR	1097923	ExpressionStatement	next_arg = 0	559:2:17911:17923	1097889	0	True				
ANR	1097924	AssignmentExpression	next_arg = 0		1097889	0		=			
ANR	1097925	Identifier	next_arg		1097889	0					
ANR	1097926	PrimaryExpression	0		1097889	1					
ANR	1097927	ExpressionStatement	next_argw = 0	560:2:17927:17940	1097889	1	True				
ANR	1097928	AssignmentExpression	next_argw = 0		1097889	0		=			
ANR	1097929	Identifier	next_argw		1097889	0					
ANR	1097930	PrimaryExpression	0		1097889	1					
ANR	1097931	ExpressionStatement	base = arg & REG_MASK	563:1:17947:17968	1097889	4	True				
ANR	1097932	AssignmentExpression	base = arg & REG_MASK		1097889	0		=			
ANR	1097933	Identifier	base		1097889	0					
ANR	1097934	BitAndExpression	arg & REG_MASK		1097889	1		&			
ANR	1097935	Identifier	arg		1097889	0					
ANR	1097936	Identifier	REG_MASK		1097889	1					
ANR	1097937	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1097889	5					
ANR	1097938	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	564:5:17975:18009	1097889	0	True				
ANR	1097939	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1097889	0					
ANR	1097940	Callee	SLJIT_UNLIKELY		1097889	0					
ANR	1097941	Identifier	SLJIT_UNLIKELY		1097889	0					
ANR	1097942	ArgumentList	arg & OFFS_REG_MASK		1097889	1					
ANR	1097943	Argument	arg & OFFS_REG_MASK		1097889	0					
ANR	1097944	BitAndExpression	arg & OFFS_REG_MASK		1097889	0		&			
ANR	1097945	Identifier	arg		1097889	0					
ANR	1097946	Identifier	OFFS_REG_MASK		1097889	1					
ANR	1097947	CompoundStatement		12:42:220:220	1097889	1					
ANR	1097948	ExpressionStatement	argw &= 0x3	565:2:18016:18027	1097889	0	True				
ANR	1097949	AssignmentExpression	argw &= 0x3		1097889	0		&=			
ANR	1097950	Identifier	argw		1097889	0					
ANR	1097951	PrimaryExpression	0x3		1097889	1					
ANR	1097952	ExpressionStatement	SLJIT_ASSERT ( argw != 0 )	566:2:18031:18054	1097889	1	True				
ANR	1097953	CallExpression	SLJIT_ASSERT ( argw != 0 )		1097889	0					
ANR	1097954	Callee	SLJIT_ASSERT		1097889	0					
ANR	1097955	Identifier	SLJIT_ASSERT		1097889	0					
ANR	1097956	ArgumentList	argw != 0		1097889	1					
ANR	1097957	Argument	argw != 0		1097889	0					
ANR	1097958	EqualityExpression	argw != 0		1097889	0		!=			
ANR	1097959	Identifier	argw		1097889	0					
ANR	1097960	PrimaryExpression	0		1097889	1					
ANR	1097961	IfStatement	if ( ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg ) && ( argw == compiler -> cache_argw ) )		1097889	2					
ANR	1097962	Condition	( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg ) && ( argw == compiler -> cache_argw )	569:6:18088:18181	1097889	0	True				
ANR	1097963	AndExpression	( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg ) && ( argw == compiler -> cache_argw )		1097889	0		&&			
ANR	1097964	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1097889	0		==			
ANR	1097965	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1097889	0		|			
ANR	1097966	Identifier	SLJIT_MEM		1097889	0					
ANR	1097967	BitAndExpression	arg & OFFS_REG_MASK		1097889	1		&			
ANR	1097968	Identifier	arg		1097889	0					
ANR	1097969	Identifier	OFFS_REG_MASK		1097889	1					
ANR	1097970	PtrMemberAccess	compiler -> cache_arg		1097889	1					
ANR	1097971	Identifier	compiler		1097889	0					
ANR	1097972	Identifier	cache_arg		1097889	1					
ANR	1097973	EqualityExpression	argw == compiler -> cache_argw		1097889	1		==			
ANR	1097974	Identifier	argw		1097889	0					
ANR	1097975	PtrMemberAccess	compiler -> cache_argw		1097889	1					
ANR	1097976	Identifier	compiler		1097889	0					
ANR	1097977	Identifier	cache_argw		1097889	1					
ANR	1097978	ExpressionStatement	arg2 = TMP_REG3	570:3:18187:18202	1097889	1	True				
ANR	1097979	AssignmentExpression	arg2 = TMP_REG3		1097889	0		=			
ANR	1097980	Identifier	arg2		1097889	0					
ANR	1097981	Identifier	TMP_REG3		1097889	1					
ANR	1097982	ElseStatement	else		1097889	0					
ANR	1097983	CompoundStatement		19:7:419:419	1097889	0					
ANR	1097984	IfStatement	if ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 ) )		1097889	0					
ANR	1097985	Condition	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )	572:7:18220:18299	1097889	0	True				
ANR	1097986	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )		1097889	0		&&			
ANR	1097987	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1097889	0		==			
ANR	1097988	BitAndExpression	arg & OFFS_REG_MASK		1097889	0		&			
ANR	1097989	Identifier	arg		1097889	0					
ANR	1097990	Identifier	OFFS_REG_MASK		1097889	1					
ANR	1097991	BitAndExpression	next_arg & OFFS_REG_MASK		1097889	1		&			
ANR	1097992	Identifier	next_arg		1097889	0					
ANR	1097993	Identifier	OFFS_REG_MASK		1097889	1					
ANR	1097994	EqualityExpression	argw == ( next_argw & 0x3 )		1097889	1		==			
ANR	1097995	Identifier	argw		1097889	0					
ANR	1097996	BitAndExpression	next_argw & 0x3		1097889	1		&			
ANR	1097997	Identifier	next_argw		1097889	0					
ANR	1097998	PrimaryExpression	0x3		1097889	1					
ANR	1097999	CompoundStatement		20:89:510:510	1097889	1					
ANR	1098000	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	573:4:18308:18363	1097889	0	True				
ANR	1098001	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1097889	0		=			
ANR	1098002	PtrMemberAccess	compiler -> cache_arg		1097889	0					
ANR	1098003	Identifier	compiler		1097889	0					
ANR	1098004	Identifier	cache_arg		1097889	1					
ANR	1098005	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1097889	1		|			
ANR	1098006	Identifier	SLJIT_MEM		1097889	0					
ANR	1098007	BitAndExpression	arg & OFFS_REG_MASK		1097889	1		&			
ANR	1098008	Identifier	arg		1097889	0					
ANR	1098009	Identifier	OFFS_REG_MASK		1097889	1					
ANR	1098010	ExpressionStatement	compiler -> cache_argw = argw	574:4:18369:18396	1097889	1	True				
ANR	1098011	AssignmentExpression	compiler -> cache_argw = argw		1097889	0		=			
ANR	1098012	PtrMemberAccess	compiler -> cache_argw		1097889	0					
ANR	1098013	Identifier	compiler		1097889	0					
ANR	1098014	Identifier	cache_argw		1097889	1					
ANR	1098015	Identifier	argw		1097889	1					
ANR	1098016	ExpressionStatement	arg2 = TMP_REG3	575:4:18402:18417	1097889	2	True				
ANR	1098017	AssignmentExpression	arg2 = TMP_REG3		1097889	0		=			
ANR	1098018	Identifier	arg2		1097889	0					
ANR	1098019	Identifier	TMP_REG3		1097889	1					
ANR	1098020	ElseStatement	else		1097889	0					
ANR	1098021	IfStatement	if ( ( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base && reg != OFFS_REG ( arg ) )		1097889	0					
ANR	1098022	Condition	( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base && reg != OFFS_REG ( arg )	577:12:18436:18528	1097889	0	True				
ANR	1098023	AndExpression	( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base && reg != OFFS_REG ( arg )		1097889	0		&&			
ANR	1098024	BitAndExpression	flags & LOAD_DATA		1097889	0		&			
ANR	1098025	Identifier	flags		1097889	0					
ANR	1098026	Identifier	LOAD_DATA		1097889	1					
ANR	1098027	AndExpression	( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base && reg != OFFS_REG ( arg )		1097889	1		&&			
ANR	1098028	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097889	0		<=			
ANR	1098029	BitAndExpression	flags & MEM_MASK		1097889	0		&			
ANR	1098030	Identifier	flags		1097889	0					
ANR	1098031	Identifier	MEM_MASK		1097889	1					
ANR	1098032	Identifier	GPR_REG		1097889	1					
ANR	1098033	AndExpression	reg != base && reg != OFFS_REG ( arg )		1097889	1		&&			
ANR	1098034	EqualityExpression	reg != base		1097889	0		!=			
ANR	1098035	Identifier	reg		1097889	0					
ANR	1098036	Identifier	base		1097889	1					
ANR	1098037	EqualityExpression	reg != OFFS_REG ( arg )		1097889	1		!=			
ANR	1098038	Identifier	reg		1097889	0					
ANR	1098039	CallExpression	OFFS_REG ( arg )		1097889	1					
ANR	1098040	Callee	OFFS_REG		1097889	0					
ANR	1098041	Identifier	OFFS_REG		1097889	0					
ANR	1098042	ArgumentList	arg		1097889	1					
ANR	1098043	Argument	arg		1097889	0					
ANR	1098044	Identifier	arg		1097889	0					
ANR	1098045	ExpressionStatement	arg2 = reg	578:4:18535:18545	1097889	1	True				
ANR	1098046	AssignmentExpression	arg2 = reg		1097889	0		=			
ANR	1098047	Identifier	arg2		1097889	0					
ANR	1098048	Identifier	reg		1097889	1					
ANR	1098049	ElseStatement	else		1097889	0					
ANR	1098050	ExpressionStatement	arg2 = TMP_REG1	580:4:18622:18637	1097889	0	True				
ANR	1098051	AssignmentExpression	arg2 = TMP_REG1		1097889	0		=			
ANR	1098052	Identifier	arg2		1097889	0					
ANR	1098053	Identifier	TMP_REG1		1097889	1					
ANR	1098054	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw , DR ( arg2 ) ) )"	581:3:18642:18734	1097889	1	True				
ANR	1098055	CallExpression	"FAIL_IF ( push_inst ( compiler , SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw , DR ( arg2 ) ) )"		1097889	0					
ANR	1098056	Callee	FAIL_IF		1097889	0					
ANR	1098057	Identifier	FAIL_IF		1097889	0					
ANR	1098058	ArgumentList	"push_inst ( compiler , SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw , DR ( arg2 ) )"		1097889	1					
ANR	1098059	Argument	"push_inst ( compiler , SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw , DR ( arg2 ) )"		1097889	0					
ANR	1098060	CallExpression	"push_inst ( compiler , SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw , DR ( arg2 ) )"		1097889	0					
ANR	1098061	Callee	push_inst		1097889	0					
ANR	1098062	Identifier	push_inst		1097889	0					
ANR	1098063	ArgumentList	compiler		1097889	1					
ANR	1098064	Argument	compiler		1097889	0					
ANR	1098065	Identifier	compiler		1097889	0					
ANR	1098066	Argument	SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw		1097889	1					
ANR	1098067	InclusiveOrExpression	SLL_W | D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw		1097889	0		|			
ANR	1098068	Identifier	SLL_W		1097889	0					
ANR	1098069	InclusiveOrExpression	D ( arg2 ) | S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw		1097889	1		|			
ANR	1098070	CallExpression	D ( arg2 )		1097889	0					
ANR	1098071	Callee	D		1097889	0					
ANR	1098072	Identifier	D		1097889	0					
ANR	1098073	ArgumentList	arg2		1097889	1					
ANR	1098074	Argument	arg2		1097889	0					
ANR	1098075	Identifier	arg2		1097889	0					
ANR	1098076	InclusiveOrExpression	S1 ( OFFS_REG ( arg ) ) | IMM_ARG | argw		1097889	1		|			
ANR	1098077	CallExpression	S1 ( OFFS_REG ( arg ) )		1097889	0					
ANR	1098078	Callee	S1		1097889	0					
ANR	1098079	Identifier	S1		1097889	0					
ANR	1098080	ArgumentList	OFFS_REG ( arg )		1097889	1					
ANR	1098081	Argument	OFFS_REG ( arg )		1097889	0					
ANR	1098082	CallExpression	OFFS_REG ( arg )		1097889	0					
ANR	1098083	Callee	OFFS_REG		1097889	0					
ANR	1098084	Identifier	OFFS_REG		1097889	0					
ANR	1098085	ArgumentList	arg		1097889	1					
ANR	1098086	Argument	arg		1097889	0					
ANR	1098087	Identifier	arg		1097889	0					
ANR	1098088	InclusiveOrExpression	IMM_ARG | argw		1097889	1		|			
ANR	1098089	Identifier	IMM_ARG		1097889	0					
ANR	1098090	Identifier	argw		1097889	1					
ANR	1098091	Argument	DR ( arg2 )		1097889	2					
ANR	1098092	CallExpression	DR ( arg2 )		1097889	0					
ANR	1098093	Callee	DR		1097889	0					
ANR	1098094	Identifier	DR		1097889	0					
ANR	1098095	ArgumentList	arg2		1097889	1					
ANR	1098096	Argument	arg2		1097889	0					
ANR	1098097	Identifier	arg2		1097889	0					
ANR	1098098	ElseStatement	else		1097889	0					
ANR	1098099	CompoundStatement		32:6:957:957	1097889	0					
ANR	1098100	IfStatement	if ( ( compiler -> cache_arg == SLJIT_MEM ) && ( argw - compiler -> cache_argw ) <= SIMM_MAX && ( argw - compiler -> cache_argw ) >= SIMM_MIN )		1097889	0					
ANR	1098101	Condition	( compiler -> cache_arg == SLJIT_MEM ) && ( argw - compiler -> cache_argw ) <= SIMM_MAX && ( argw - compiler -> cache_argw ) >= SIMM_MIN	586:6:18782:18905	1097889	0	True				
ANR	1098102	AndExpression	( compiler -> cache_arg == SLJIT_MEM ) && ( argw - compiler -> cache_argw ) <= SIMM_MAX && ( argw - compiler -> cache_argw ) >= SIMM_MIN		1097889	0		&&			
ANR	1098103	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1097889	0		==			
ANR	1098104	PtrMemberAccess	compiler -> cache_arg		1097889	0					
ANR	1098105	Identifier	compiler		1097889	0					
ANR	1098106	Identifier	cache_arg		1097889	1					
ANR	1098107	Identifier	SLJIT_MEM		1097889	1					
ANR	1098108	AndExpression	( argw - compiler -> cache_argw ) <= SIMM_MAX && ( argw - compiler -> cache_argw ) >= SIMM_MIN		1097889	1		&&			
ANR	1098109	RelationalExpression	( argw - compiler -> cache_argw ) <= SIMM_MAX		1097889	0		<=			
ANR	1098110	AdditiveExpression	argw - compiler -> cache_argw		1097889	0		-			
ANR	1098111	Identifier	argw		1097889	0					
ANR	1098112	PtrMemberAccess	compiler -> cache_argw		1097889	1					
ANR	1098113	Identifier	compiler		1097889	0					
ANR	1098114	Identifier	cache_argw		1097889	1					
ANR	1098115	Identifier	SIMM_MAX		1097889	1					
ANR	1098116	RelationalExpression	( argw - compiler -> cache_argw ) >= SIMM_MIN		1097889	1		>=			
ANR	1098117	AdditiveExpression	argw - compiler -> cache_argw		1097889	0		-			
ANR	1098118	Identifier	argw		1097889	0					
ANR	1098119	PtrMemberAccess	compiler -> cache_argw		1097889	1					
ANR	1098120	Identifier	compiler		1097889	0					
ANR	1098121	Identifier	cache_argw		1097889	1					
ANR	1098122	Identifier	SIMM_MIN		1097889	1					
ANR	1098123	CompoundStatement		34:132:1116:1116	1097889	1					
ANR	1098124	IfStatement	if ( argw != compiler -> cache_argw )		1097889	0					
ANR	1098125	Condition	argw != compiler -> cache_argw	587:7:18917:18944	1097889	0	True				
ANR	1098126	EqualityExpression	argw != compiler -> cache_argw		1097889	0		!=			
ANR	1098127	Identifier	argw		1097889	0					
ANR	1098128	PtrMemberAccess	compiler -> cache_argw		1097889	1					
ANR	1098129	Identifier	compiler		1097889	0					
ANR	1098130	Identifier	cache_argw		1097889	1					
ANR	1098131	CompoundStatement		35:37:1155:1155	1097889	1					
ANR	1098132	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"	588:4:18953:19064	1097889	0	True				
ANR	1098133	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) ) )"		1097889	0					
ANR	1098134	Callee	FAIL_IF		1097889	0					
ANR	1098135	Identifier	FAIL_IF		1097889	0					
ANR	1098136	ArgumentList	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1097889	1					
ANR	1098137	Argument	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1097889	0					
ANR	1098138	CallExpression	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw ) , DR ( TMP_REG3 ) )"		1097889	0					
ANR	1098139	Callee	push_inst		1097889	0					
ANR	1098140	Identifier	push_inst		1097889	0					
ANR	1098141	ArgumentList	compiler		1097889	1					
ANR	1098142	Argument	compiler		1097889	0					
ANR	1098143	Identifier	compiler		1097889	0					
ANR	1098144	Argument	ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1097889	1					
ANR	1098145	InclusiveOrExpression	ADD | D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1097889	0		|			
ANR	1098146	Identifier	ADD		1097889	0					
ANR	1098147	InclusiveOrExpression	D ( TMP_REG3 ) | S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1097889	1		|			
ANR	1098148	CallExpression	D ( TMP_REG3 )		1097889	0					
ANR	1098149	Callee	D		1097889	0					
ANR	1098150	Identifier	D		1097889	0					
ANR	1098151	ArgumentList	TMP_REG3		1097889	1					
ANR	1098152	Argument	TMP_REG3		1097889	0					
ANR	1098153	Identifier	TMP_REG3		1097889	0					
ANR	1098154	InclusiveOrExpression	S1 ( TMP_REG3 ) | IMM ( argw - compiler -> cache_argw )		1097889	1		|			
ANR	1098155	CallExpression	S1 ( TMP_REG3 )		1097889	0					
ANR	1098156	Callee	S1		1097889	0					
ANR	1098157	Identifier	S1		1097889	0					
ANR	1098158	ArgumentList	TMP_REG3		1097889	1					
ANR	1098159	Argument	TMP_REG3		1097889	0					
ANR	1098160	Identifier	TMP_REG3		1097889	0					
ANR	1098161	CallExpression	IMM ( argw - compiler -> cache_argw )		1097889	1					
ANR	1098162	Callee	IMM		1097889	0					
ANR	1098163	Identifier	IMM		1097889	0					
ANR	1098164	ArgumentList	argw - compiler -> cache_argw		1097889	1					
ANR	1098165	Argument	argw - compiler -> cache_argw		1097889	0					
ANR	1098166	AdditiveExpression	argw - compiler -> cache_argw		1097889	0		-			
ANR	1098167	Identifier	argw		1097889	0					
ANR	1098168	PtrMemberAccess	compiler -> cache_argw		1097889	1					
ANR	1098169	Identifier	compiler		1097889	0					
ANR	1098170	Identifier	cache_argw		1097889	1					
ANR	1098171	Argument	DR ( TMP_REG3 )		1097889	2					
ANR	1098172	CallExpression	DR ( TMP_REG3 )		1097889	0					
ANR	1098173	Callee	DR		1097889	0					
ANR	1098174	Identifier	DR		1097889	0					
ANR	1098175	ArgumentList	TMP_REG3		1097889	1					
ANR	1098176	Argument	TMP_REG3		1097889	0					
ANR	1098177	Identifier	TMP_REG3		1097889	0					
ANR	1098178	ExpressionStatement	compiler -> cache_argw = argw	589:4:19070:19097	1097889	1	True				
ANR	1098179	AssignmentExpression	compiler -> cache_argw = argw		1097889	0		=			
ANR	1098180	PtrMemberAccess	compiler -> cache_argw		1097889	0					
ANR	1098181	Identifier	compiler		1097889	0					
ANR	1098182	Identifier	cache_argw		1097889	1					
ANR	1098183	Identifier	argw		1097889	1					
ANR	1098184	ExpressionStatement	arg2 = TMP_REG3	591:3:19107:19122	1097889	1	True				
ANR	1098185	AssignmentExpression	arg2 = TMP_REG3		1097889	0		=			
ANR	1098186	Identifier	arg2		1097889	0					
ANR	1098187	Identifier	TMP_REG3		1097889	1					
ANR	1098188	ElseStatement	else		1097889	0					
ANR	1098189	CompoundStatement		40:9:1341:1341	1097889	0					
ANR	1098190	IfStatement	if ( ( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN )		1097889	0					
ANR	1098191	Condition	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN	593:7:19142:19205	1097889	0	True				
ANR	1098192	AndExpression	( next_argw - argw ) <= SIMM_MAX && ( next_argw - argw ) >= SIMM_MIN		1097889	0		&&			
ANR	1098193	RelationalExpression	( next_argw - argw ) <= SIMM_MAX		1097889	0		<=			
ANR	1098194	AdditiveExpression	next_argw - argw		1097889	0		-			
ANR	1098195	Identifier	next_argw		1097889	0					
ANR	1098196	Identifier	argw		1097889	1					
ANR	1098197	Identifier	SIMM_MAX		1097889	1					
ANR	1098198	RelationalExpression	( next_argw - argw ) >= SIMM_MIN		1097889	1		>=			
ANR	1098199	AdditiveExpression	next_argw - argw		1097889	0		-			
ANR	1098200	Identifier	next_argw		1097889	0					
ANR	1098201	Identifier	argw		1097889	1					
ANR	1098202	Identifier	SIMM_MIN		1097889	1					
ANR	1098203	CompoundStatement		41:73:1416:1416	1097889	1					
ANR	1098204	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	594:4:19214:19245	1097889	0	True				
ANR	1098205	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1097889	0		=			
ANR	1098206	PtrMemberAccess	compiler -> cache_arg		1097889	0					
ANR	1098207	Identifier	compiler		1097889	0					
ANR	1098208	Identifier	cache_arg		1097889	1					
ANR	1098209	Identifier	SLJIT_MEM		1097889	1					
ANR	1098210	ExpressionStatement	compiler -> cache_argw = argw	595:4:19251:19278	1097889	1	True				
ANR	1098211	AssignmentExpression	compiler -> cache_argw = argw		1097889	0		=			
ANR	1098212	PtrMemberAccess	compiler -> cache_argw		1097889	0					
ANR	1098213	Identifier	compiler		1097889	0					
ANR	1098214	Identifier	cache_argw		1097889	1					
ANR	1098215	Identifier	argw		1097889	1					
ANR	1098216	ExpressionStatement	arg2 = TMP_REG3	596:4:19284:19299	1097889	2	True				
ANR	1098217	AssignmentExpression	arg2 = TMP_REG3		1097889	0		=			
ANR	1098218	Identifier	arg2		1097889	0					
ANR	1098219	Identifier	TMP_REG3		1097889	1					
ANR	1098220	ElseStatement	else		1097889	0					
ANR	1098221	IfStatement	if ( ( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base )		1097889	0					
ANR	1098222	Condition	( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base	598:12:19318:19386	1097889	0	True				
ANR	1098223	AndExpression	( flags & LOAD_DATA ) && ( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base		1097889	0		&&			
ANR	1098224	BitAndExpression	flags & LOAD_DATA		1097889	0		&			
ANR	1098225	Identifier	flags		1097889	0					
ANR	1098226	Identifier	LOAD_DATA		1097889	1					
ANR	1098227	AndExpression	( ( flags & MEM_MASK ) <= GPR_REG ) && reg != base		1097889	1		&&			
ANR	1098228	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097889	0		<=			
ANR	1098229	BitAndExpression	flags & MEM_MASK		1097889	0		&			
ANR	1098230	Identifier	flags		1097889	0					
ANR	1098231	Identifier	MEM_MASK		1097889	1					
ANR	1098232	Identifier	GPR_REG		1097889	1					
ANR	1098233	EqualityExpression	reg != base		1097889	1		!=			
ANR	1098234	Identifier	reg		1097889	0					
ANR	1098235	Identifier	base		1097889	1					
ANR	1098236	ExpressionStatement	arg2 = reg	599:4:19393:19403	1097889	1	True				
ANR	1098237	AssignmentExpression	arg2 = reg		1097889	0		=			
ANR	1098238	Identifier	arg2		1097889	0					
ANR	1098239	Identifier	reg		1097889	1					
ANR	1098240	ElseStatement	else		1097889	0					
ANR	1098241	ExpressionStatement	arg2 = TMP_REG1	601:4:19480:19495	1097889	0	True				
ANR	1098242	AssignmentExpression	arg2 = TMP_REG1		1097889	0		=			
ANR	1098243	Identifier	arg2		1097889	0					
ANR	1098244	Identifier	TMP_REG1		1097889	1					
ANR	1098245	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , arg2 , argw ) )"	602:3:19500:19545	1097889	1	True				
ANR	1098246	CallExpression	"FAIL_IF ( load_immediate ( compiler , arg2 , argw ) )"		1097889	0					
ANR	1098247	Callee	FAIL_IF		1097889	0					
ANR	1098248	Identifier	FAIL_IF		1097889	0					
ANR	1098249	ArgumentList	"load_immediate ( compiler , arg2 , argw )"		1097889	1					
ANR	1098250	Argument	"load_immediate ( compiler , arg2 , argw )"		1097889	0					
ANR	1098251	CallExpression	"load_immediate ( compiler , arg2 , argw )"		1097889	0					
ANR	1098252	Callee	load_immediate		1097889	0					
ANR	1098253	Identifier	load_immediate		1097889	0					
ANR	1098254	ArgumentList	compiler		1097889	1					
ANR	1098255	Argument	compiler		1097889	0					
ANR	1098256	Identifier	compiler		1097889	0					
ANR	1098257	Argument	arg2		1097889	1					
ANR	1098258	Identifier	arg2		1097889	0					
ANR	1098259	Argument	argw		1097889	2					
ANR	1098260	Identifier	argw		1097889	0					
ANR	1098261	ExpressionStatement	dest = ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) )	606:1:19556:19613	1097889	6	True				
ANR	1098262	AssignmentExpression	dest = ( ( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg ) )		1097889	0		=			
ANR	1098263	Identifier	dest		1097889	0					
ANR	1098264	ConditionalExpression	( flags & MEM_MASK ) <= GPR_REG ? D ( reg ) : DA ( reg )		1097889	1					
ANR	1098265	Condition	( flags & MEM_MASK ) <= GPR_REG		1097889	0					
ANR	1098266	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097889	0		<=			
ANR	1098267	BitAndExpression	flags & MEM_MASK		1097889	0		&			
ANR	1098268	Identifier	flags		1097889	0					
ANR	1098269	Identifier	MEM_MASK		1097889	1					
ANR	1098270	Identifier	GPR_REG		1097889	1					
ANR	1098271	CallExpression	D ( reg )		1097889	1					
ANR	1098272	Callee	D		1097889	0					
ANR	1098273	Identifier	D		1097889	0					
ANR	1098274	ArgumentList	reg		1097889	1					
ANR	1098275	Argument	reg		1097889	0					
ANR	1098276	Identifier	reg		1097889	0					
ANR	1098277	CallExpression	DA ( reg )		1097889	2					
ANR	1098278	Callee	DA		1097889	0					
ANR	1098279	Identifier	DA		1097889	0					
ANR	1098280	ArgumentList	reg		1097889	1					
ANR	1098281	Argument	reg		1097889	0					
ANR	1098282	Identifier	reg		1097889	0					
ANR	1098283	ExpressionStatement	delay_slot = ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS	607:1:19616:19707	1097889	7	True				
ANR	1098284	AssignmentExpression	delay_slot = ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS		1097889	0		=			
ANR	1098285	Identifier	delay_slot		1097889	0					
ANR	1098286	ConditionalExpression	( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) ) ? DR ( reg ) : MOVABLE_INS		1097889	1					
ANR	1098287	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1097889	0					
ANR	1098288	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1097889	0		&&			
ANR	1098289	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1097889	0		<=			
ANR	1098290	BitAndExpression	flags & MEM_MASK		1097889	0		&			
ANR	1098291	Identifier	flags		1097889	0					
ANR	1098292	Identifier	MEM_MASK		1097889	1					
ANR	1098293	Identifier	GPR_REG		1097889	1					
ANR	1098294	BitAndExpression	flags & LOAD_DATA		1097889	1		&			
ANR	1098295	Identifier	flags		1097889	0					
ANR	1098296	Identifier	LOAD_DATA		1097889	1					
ANR	1098297	CallExpression	DR ( reg )		1097889	1					
ANR	1098298	Callee	DR		1097889	0					
ANR	1098299	Identifier	DR		1097889	0					
ANR	1098300	ArgumentList	reg		1097889	1					
ANR	1098301	Argument	reg		1097889	0					
ANR	1098302	Identifier	reg		1097889	0					
ANR	1098303	Identifier	MOVABLE_INS		1097889	2					
ANR	1098304	IfStatement	if ( ! base )		1097889	8					
ANR	1098305	Condition	! base	608:5:19714:19718	1097889	0	True				
ANR	1098306	UnaryOperationExpression	! base		1097889	0					
ANR	1098307	UnaryOperator	!		1097889	0					
ANR	1098308	Identifier	base		1097889	1					
ANR	1098309	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( arg2 ) | IMM ( 0 ) , delay_slot ) ;"	609:2:19723:19827	1097889	1	True				
ANR	1098310	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( arg2 ) | IMM ( 0 ) , delay_slot )"		1097889	0					
ANR	1098311	Callee	push_inst		1097889	0					
ANR	1098312	Identifier	push_inst		1097889	0					
ANR	1098313	ArgumentList	compiler		1097889	1					
ANR	1098314	Argument	compiler		1097889	0					
ANR	1098315	Identifier	compiler		1097889	0					
ANR	1098316	Argument	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( arg2 ) | IMM ( 0 )		1097889	1					
ANR	1098317	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( arg2 ) | IMM ( 0 )		1097889	0		|			
ANR	1098318	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1097889	0					
ANR	1098319	Identifier	data_transfer_insts		1097889	0					
ANR	1098320	BitAndExpression	flags & MEM_MASK		1097889	1		&			
ANR	1098321	Identifier	flags		1097889	0					
ANR	1098322	Identifier	MEM_MASK		1097889	1					
ANR	1098323	InclusiveOrExpression	dest | S1 ( arg2 ) | IMM ( 0 )		1097889	1		|			
ANR	1098324	Identifier	dest		1097889	0					
ANR	1098325	InclusiveOrExpression	S1 ( arg2 ) | IMM ( 0 )		1097889	1		|			
ANR	1098326	CallExpression	S1 ( arg2 )		1097889	0					
ANR	1098327	Callee	S1		1097889	0					
ANR	1098328	Identifier	S1		1097889	0					
ANR	1098329	ArgumentList	arg2		1097889	1					
ANR	1098330	Argument	arg2		1097889	0					
ANR	1098331	Identifier	arg2		1097889	0					
ANR	1098332	CallExpression	IMM ( 0 )		1097889	1					
ANR	1098333	Callee	IMM		1097889	0					
ANR	1098334	Identifier	IMM		1097889	0					
ANR	1098335	ArgumentList	0		1097889	1					
ANR	1098336	Argument	0		1097889	0					
ANR	1098337	PrimaryExpression	0		1097889	0					
ANR	1098338	Argument	delay_slot		1097889	2					
ANR	1098339	Identifier	delay_slot		1097889	0					
ANR	1098340	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1097889	9					
ANR	1098341	Condition	! ( flags & WRITE_BACK )	610:5:19834:19854	1097889	0	True				
ANR	1098342	UnaryOperationExpression	! ( flags & WRITE_BACK )		1097889	0					
ANR	1098343	UnaryOperator	!		1097889	0					
ANR	1098344	BitAndExpression	flags & WRITE_BACK		1097889	1		&			
ANR	1098345	Identifier	flags		1097889	0					
ANR	1098346	Identifier	WRITE_BACK		1097889	1					
ANR	1098347	ReturnStatement	"return push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot ) ;"	611:2:19859:19965	1097889	1	True				
ANR	1098348	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot )"		1097889	0					
ANR	1098349	Callee	push_inst		1097889	0					
ANR	1098350	Identifier	push_inst		1097889	0					
ANR	1098351	ArgumentList	compiler		1097889	1					
ANR	1098352	Argument	compiler		1097889	0					
ANR	1098353	Identifier	compiler		1097889	0					
ANR	1098354	Argument	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 )		1097889	1					
ANR	1098355	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 )		1097889	0		|			
ANR	1098356	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1097889	0					
ANR	1098357	Identifier	data_transfer_insts		1097889	0					
ANR	1098358	BitAndExpression	flags & MEM_MASK		1097889	1		&			
ANR	1098359	Identifier	flags		1097889	0					
ANR	1098360	Identifier	MEM_MASK		1097889	1					
ANR	1098361	InclusiveOrExpression	dest | S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098362	Identifier	dest		1097889	0					
ANR	1098363	InclusiveOrExpression	S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098364	CallExpression	S1 ( base )		1097889	0					
ANR	1098365	Callee	S1		1097889	0					
ANR	1098366	Identifier	S1		1097889	0					
ANR	1098367	ArgumentList	base		1097889	1					
ANR	1098368	Argument	base		1097889	0					
ANR	1098369	Identifier	base		1097889	0					
ANR	1098370	CallExpression	S2 ( arg2 )		1097889	1					
ANR	1098371	Callee	S2		1097889	0					
ANR	1098372	Identifier	S2		1097889	0					
ANR	1098373	ArgumentList	arg2		1097889	1					
ANR	1098374	Argument	arg2		1097889	0					
ANR	1098375	Identifier	arg2		1097889	0					
ANR	1098376	Argument	delay_slot		1097889	2					
ANR	1098377	Identifier	delay_slot		1097889	0					
ANR	1098378	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot ) )"	612:1:19968:20076	1097889	10	True				
ANR	1098379	CallExpression	"FAIL_IF ( push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot ) )"		1097889	0					
ANR	1098380	Callee	FAIL_IF		1097889	0					
ANR	1098381	Identifier	FAIL_IF		1097889	0					
ANR	1098382	ArgumentList	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot )"		1097889	1					
ANR	1098383	Argument	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot )"		1097889	0					
ANR	1098384	CallExpression	"push_inst ( compiler , data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 ) , delay_slot )"		1097889	0					
ANR	1098385	Callee	push_inst		1097889	0					
ANR	1098386	Identifier	push_inst		1097889	0					
ANR	1098387	ArgumentList	compiler		1097889	1					
ANR	1098388	Argument	compiler		1097889	0					
ANR	1098389	Identifier	compiler		1097889	0					
ANR	1098390	Argument	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 )		1097889	1					
ANR	1098391	InclusiveOrExpression	data_transfer_insts [ flags & MEM_MASK ] | dest | S1 ( base ) | S2 ( arg2 )		1097889	0		|			
ANR	1098392	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1097889	0					
ANR	1098393	Identifier	data_transfer_insts		1097889	0					
ANR	1098394	BitAndExpression	flags & MEM_MASK		1097889	1		&			
ANR	1098395	Identifier	flags		1097889	0					
ANR	1098396	Identifier	MEM_MASK		1097889	1					
ANR	1098397	InclusiveOrExpression	dest | S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098398	Identifier	dest		1097889	0					
ANR	1098399	InclusiveOrExpression	S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098400	CallExpression	S1 ( base )		1097889	0					
ANR	1098401	Callee	S1		1097889	0					
ANR	1098402	Identifier	S1		1097889	0					
ANR	1098403	ArgumentList	base		1097889	1					
ANR	1098404	Argument	base		1097889	0					
ANR	1098405	Identifier	base		1097889	0					
ANR	1098406	CallExpression	S2 ( arg2 )		1097889	1					
ANR	1098407	Callee	S2		1097889	0					
ANR	1098408	Identifier	S2		1097889	0					
ANR	1098409	ArgumentList	arg2		1097889	1					
ANR	1098410	Argument	arg2		1097889	0					
ANR	1098411	Identifier	arg2		1097889	0					
ANR	1098412	Argument	delay_slot		1097889	2					
ANR	1098413	Identifier	delay_slot		1097889	0					
ANR	1098414	ReturnStatement	"return push_inst ( compiler , ADD | D ( base ) | S1 ( base ) | S2 ( arg2 ) , DR ( base ) ) ;"	613:1:20079:20152	1097889	11	True				
ANR	1098415	CallExpression	"push_inst ( compiler , ADD | D ( base ) | S1 ( base ) | S2 ( arg2 ) , DR ( base ) )"		1097889	0					
ANR	1098416	Callee	push_inst		1097889	0					
ANR	1098417	Identifier	push_inst		1097889	0					
ANR	1098418	ArgumentList	compiler		1097889	1					
ANR	1098419	Argument	compiler		1097889	0					
ANR	1098420	Identifier	compiler		1097889	0					
ANR	1098421	Argument	ADD | D ( base ) | S1 ( base ) | S2 ( arg2 )		1097889	1					
ANR	1098422	InclusiveOrExpression	ADD | D ( base ) | S1 ( base ) | S2 ( arg2 )		1097889	0		|			
ANR	1098423	Identifier	ADD		1097889	0					
ANR	1098424	InclusiveOrExpression	D ( base ) | S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098425	CallExpression	D ( base )		1097889	0					
ANR	1098426	Callee	D		1097889	0					
ANR	1098427	Identifier	D		1097889	0					
ANR	1098428	ArgumentList	base		1097889	1					
ANR	1098429	Argument	base		1097889	0					
ANR	1098430	Identifier	base		1097889	0					
ANR	1098431	InclusiveOrExpression	S1 ( base ) | S2 ( arg2 )		1097889	1		|			
ANR	1098432	CallExpression	S1 ( base )		1097889	0					
ANR	1098433	Callee	S1		1097889	0					
ANR	1098434	Identifier	S1		1097889	0					
ANR	1098435	ArgumentList	base		1097889	1					
ANR	1098436	Argument	base		1097889	0					
ANR	1098437	Identifier	base		1097889	0					
ANR	1098438	CallExpression	S2 ( arg2 )		1097889	1					
ANR	1098439	Callee	S2		1097889	0					
ANR	1098440	Identifier	S2		1097889	0					
ANR	1098441	ArgumentList	arg2		1097889	1					
ANR	1098442	Argument	arg2		1097889	0					
ANR	1098443	Identifier	arg2		1097889	0					
ANR	1098444	Argument	DR ( base )		1097889	2					
ANR	1098445	CallExpression	DR ( base )		1097889	0					
ANR	1098446	Callee	DR		1097889	0					
ANR	1098447	Identifier	DR		1097889	0					
ANR	1098448	ArgumentList	base		1097889	1					
ANR	1098449	Argument	base		1097889	0					
ANR	1098450	Identifier	base		1097889	0					
ANR	1098451	ReturnType	static sljit_si		1097889	1					
ANR	1098452	Identifier	getput_arg		1097889	2					
ANR	1098453	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1097889	3					
ANR	1098454	Parameter	struct sljit_compiler * compiler	552:27:17660:17690	1097889	0	True				
ANR	1098455	ParameterType	struct sljit_compiler *		1097889	0					
ANR	1098456	Identifier	compiler		1097889	1					
ANR	1098457	Parameter	sljit_si flags	552:60:17693:17706	1097889	1	True				
ANR	1098458	ParameterType	sljit_si		1097889	0					
ANR	1098459	Identifier	flags		1097889	1					
ANR	1098460	Parameter	sljit_si reg	552:76:17709:17720	1097889	2	True				
ANR	1098461	ParameterType	sljit_si		1097889	0					
ANR	1098462	Identifier	reg		1097889	1					
ANR	1098463	Parameter	sljit_si arg	552:90:17723:17734	1097889	3	True				
ANR	1098464	ParameterType	sljit_si		1097889	0					
ANR	1098465	Identifier	arg		1097889	1					
ANR	1098466	Parameter	sljit_sw argw	552:104:17737:17749	1097889	4	True				
ANR	1098467	ParameterType	sljit_sw		1097889	0					
ANR	1098468	Identifier	argw		1097889	1					
ANR	1098469	Parameter	sljit_si next_arg	552:119:17752:17768	1097889	5	True				
ANR	1098470	ParameterType	sljit_si		1097889	0					
ANR	1098471	Identifier	next_arg		1097889	1					
ANR	1098472	Parameter	sljit_sw next_argw	552:138:17771:17788	1097889	6	True				
ANR	1098473	ParameterType	sljit_sw		1097889	0					
ANR	1098474	Identifier	next_argw		1097889	1					
ANR	1098475	CFGEntryNode	ENTRY		1097889		True				
ANR	1098476	CFGExitNode	EXIT		1097889		True				
ANR	1098477	Symbol	TMP_REG3		1097889						
ANR	1098478	Symbol	ADD		1097889						
ANR	1098479	Symbol	compiler -> cache_argw		1097889						
ANR	1098480	Symbol	TMP_REG1		1097889						
ANR	1098481	Symbol	LOAD_DATA		1097889						
ANR	1098482	Symbol	D		1097889						
ANR	1098483	Symbol	SLJIT_MEM		1097889						
ANR	1098484	Symbol	flags		1097889						
ANR	1098485	Symbol	* MEM_MASK		1097889						
ANR	1098486	Symbol	* compiler		1097889						
ANR	1098487	Symbol	argw		1097889						
ANR	1098488	Symbol	dest		1097889						
ANR	1098489	Symbol	SIMM_MAX		1097889						
ANR	1098490	Symbol	DR		1097889						
ANR	1098491	Symbol	load_immediate		1097889						
ANR	1098492	Symbol	reg		1097889						
ANR	1098493	Symbol	IMM_ARG		1097889						
ANR	1098494	Symbol	arg		1097889						
ANR	1098495	Symbol	compiler		1097889						
ANR	1098496	Symbol	WRITE_BACK		1097889						
ANR	1098497	Symbol	SLL_W		1097889						
ANR	1098498	Symbol	SIMM_MIN		1097889						
ANR	1098499	Symbol	next_arg		1097889						
ANR	1098500	Symbol	push_inst		1097889						
ANR	1098501	Symbol	* flags		1097889						
ANR	1098502	Symbol	REG_MASK		1097889						
ANR	1098503	Symbol	compiler -> cache_arg		1097889						
ANR	1098504	Symbol	OFFS_REG_MASK		1097889						
ANR	1098505	Symbol	IMM		1097889						
ANR	1098506	Symbol	next_argw		1097889						
ANR	1098507	Symbol	delay_slot		1097889						
ANR	1098508	Symbol	data_transfer_insts		1097889						
ANR	1098509	Symbol	* data_transfer_insts		1097889						
ANR	1098510	Symbol	GPR_REG		1097889						
ANR	1098511	Symbol	arg2		1097889						
ANR	1098512	Symbol	MEM_MASK		1097889						
ANR	1098513	Symbol	OFFS_REG		1097889						
ANR	1098514	Symbol	MOVABLE_INS		1097889						
ANR	1098515	Symbol	DA		1097889						
ANR	1098516	Symbol	S1		1097889						
ANR	1098517	Symbol	base		1097889						
ANR	1098518	Symbol	SLJIT_UNLIKELY		1097889						
ANR	1098519	Symbol	S2		1097889						
ANR	1098520	Function	emit_op_mem	616:0:20157:20485							
ANR	1098521	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1098520	0					
ANR	1098522	CompoundStatement		617:0:20290:20485	1098520	0					
ANR	1098523	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg , argw ) )"		1098520	0					
ANR	1098524	Condition	"getput_arg_fast ( compiler , flags , reg , arg , argw )"	618:5:20297:20344	1098520	0	True				
ANR	1098525	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg , argw )"		1098520	0					
ANR	1098526	Callee	getput_arg_fast		1098520	0					
ANR	1098527	Identifier	getput_arg_fast		1098520	0					
ANR	1098528	ArgumentList	compiler		1098520	1					
ANR	1098529	Argument	compiler		1098520	0					
ANR	1098530	Identifier	compiler		1098520	0					
ANR	1098531	Argument	flags		1098520	1					
ANR	1098532	Identifier	flags		1098520	0					
ANR	1098533	Argument	reg		1098520	2					
ANR	1098534	Identifier	reg		1098520	0					
ANR	1098535	Argument	arg		1098520	3					
ANR	1098536	Identifier	arg		1098520	0					
ANR	1098537	Argument	argw		1098520	4					
ANR	1098538	Identifier	argw		1098520	0					
ANR	1098539	ReturnStatement	return compiler -> error ;	619:2:20349:20371	1098520	1	True				
ANR	1098540	PtrMemberAccess	compiler -> error		1098520	0					
ANR	1098541	Identifier	compiler		1098520	0					
ANR	1098542	Identifier	error		1098520	1					
ANR	1098543	ExpressionStatement	compiler -> cache_arg = 0	620:1:20374:20397	1098520	1	True				
ANR	1098544	AssignmentExpression	compiler -> cache_arg = 0		1098520	0		=			
ANR	1098545	PtrMemberAccess	compiler -> cache_arg		1098520	0					
ANR	1098546	Identifier	compiler		1098520	0					
ANR	1098547	Identifier	cache_arg		1098520	1					
ANR	1098548	PrimaryExpression	0		1098520	1					
ANR	1098549	ExpressionStatement	compiler -> cache_argw = 0	621:1:20400:20424	1098520	2	True				
ANR	1098550	AssignmentExpression	compiler -> cache_argw = 0		1098520	0		=			
ANR	1098551	PtrMemberAccess	compiler -> cache_argw		1098520	0					
ANR	1098552	Identifier	compiler		1098520	0					
ANR	1098553	Identifier	cache_argw		1098520	1					
ANR	1098554	PrimaryExpression	0		1098520	1					
ANR	1098555	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 ) ;"	622:1:20427:20483	1098520	3	True				
ANR	1098556	CallExpression	"getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 )"		1098520	0					
ANR	1098557	Callee	getput_arg		1098520	0					
ANR	1098558	Identifier	getput_arg		1098520	0					
ANR	1098559	ArgumentList	compiler		1098520	1					
ANR	1098560	Argument	compiler		1098520	0					
ANR	1098561	Identifier	compiler		1098520	0					
ANR	1098562	Argument	flags		1098520	1					
ANR	1098563	Identifier	flags		1098520	0					
ANR	1098564	Argument	reg		1098520	2					
ANR	1098565	Identifier	reg		1098520	0					
ANR	1098566	Argument	arg		1098520	3					
ANR	1098567	Identifier	arg		1098520	0					
ANR	1098568	Argument	argw		1098520	4					
ANR	1098569	Identifier	argw		1098520	0					
ANR	1098570	Argument	0		1098520	5					
ANR	1098571	PrimaryExpression	0		1098520	0					
ANR	1098572	Argument	0		1098520	6					
ANR	1098573	PrimaryExpression	0		1098520	0					
ANR	1098574	ReturnType	static SLJIT_INLINE sljit_si		1098520	1					
ANR	1098575	Identifier	emit_op_mem		1098520	2					
ANR	1098576	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1098520	3					
ANR	1098577	Parameter	struct sljit_compiler * compiler	616:41:20198:20228	1098520	0	True				
ANR	1098578	ParameterType	struct sljit_compiler *		1098520	0					
ANR	1098579	Identifier	compiler		1098520	1					
ANR	1098580	Parameter	sljit_si flags	616:74:20231:20244	1098520	1	True				
ANR	1098581	ParameterType	sljit_si		1098520	0					
ANR	1098582	Identifier	flags		1098520	1					
ANR	1098583	Parameter	sljit_si reg	616:90:20247:20258	1098520	2	True				
ANR	1098584	ParameterType	sljit_si		1098520	0					
ANR	1098585	Identifier	reg		1098520	1					
ANR	1098586	Parameter	sljit_si arg	616:104:20261:20272	1098520	3	True				
ANR	1098587	ParameterType	sljit_si		1098520	0					
ANR	1098588	Identifier	arg		1098520	1					
ANR	1098589	Parameter	sljit_sw argw	616:118:20275:20287	1098520	4	True				
ANR	1098590	ParameterType	sljit_sw		1098520	0					
ANR	1098591	Identifier	argw		1098520	1					
ANR	1098592	CFGEntryNode	ENTRY		1098520		True				
ANR	1098593	CFGExitNode	EXIT		1098520		True				
ANR	1098594	Symbol	compiler -> cache_argw		1098520						
ANR	1098595	Symbol	getput_arg		1098520						
ANR	1098596	Symbol	reg		1098520						
ANR	1098597	Symbol	compiler -> cache_arg		1098520						
ANR	1098598	Symbol	arg		1098520						
ANR	1098599	Symbol	flags		1098520						
ANR	1098600	Symbol	* compiler		1098520						
ANR	1098601	Symbol	compiler		1098520						
ANR	1098602	Symbol	argw		1098520						
ANR	1098603	Symbol	getput_arg_fast		1098520						
ANR	1098604	Symbol	compiler -> error		1098520						
ANR	1098605	Function	emit_op_mem2	625:0:20488:20808							
ANR	1098606	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1098605	0					
ANR	1098607	CompoundStatement		626:0:20655:20808	1098605	0					
ANR	1098608	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1098605	0					
ANR	1098609	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	627:5:20662:20711	1098605	0	True				
ANR	1098610	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1098605	0					
ANR	1098611	Callee	getput_arg_fast		1098605	0					
ANR	1098612	Identifier	getput_arg_fast		1098605	0					
ANR	1098613	ArgumentList	compiler		1098605	1					
ANR	1098614	Argument	compiler		1098605	0					
ANR	1098615	Identifier	compiler		1098605	0					
ANR	1098616	Argument	flags		1098605	1					
ANR	1098617	Identifier	flags		1098605	0					
ANR	1098618	Argument	reg		1098605	2					
ANR	1098619	Identifier	reg		1098605	0					
ANR	1098620	Argument	arg1		1098605	3					
ANR	1098621	Identifier	arg1		1098605	0					
ANR	1098622	Argument	arg1w		1098605	4					
ANR	1098623	Identifier	arg1w		1098605	0					
ANR	1098624	ReturnStatement	return compiler -> error ;	628:2:20716:20738	1098605	1	True				
ANR	1098625	PtrMemberAccess	compiler -> error		1098605	0					
ANR	1098626	Identifier	compiler		1098605	0					
ANR	1098627	Identifier	error		1098605	1					
ANR	1098628	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	629:1:20741:20806	1098605	1	True				
ANR	1098629	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1098605	0					
ANR	1098630	Callee	getput_arg		1098605	0					
ANR	1098631	Identifier	getput_arg		1098605	0					
ANR	1098632	ArgumentList	compiler		1098605	1					
ANR	1098633	Argument	compiler		1098605	0					
ANR	1098634	Identifier	compiler		1098605	0					
ANR	1098635	Argument	flags		1098605	1					
ANR	1098636	Identifier	flags		1098605	0					
ANR	1098637	Argument	reg		1098605	2					
ANR	1098638	Identifier	reg		1098605	0					
ANR	1098639	Argument	arg1		1098605	3					
ANR	1098640	Identifier	arg1		1098605	0					
ANR	1098641	Argument	arg1w		1098605	4					
ANR	1098642	Identifier	arg1w		1098605	0					
ANR	1098643	Argument	arg2		1098605	5					
ANR	1098644	Identifier	arg2		1098605	0					
ANR	1098645	Argument	arg2w		1098605	6					
ANR	1098646	Identifier	arg2w		1098605	0					
ANR	1098647	ReturnType	static SLJIT_INLINE sljit_si		1098605	1					
ANR	1098648	Identifier	emit_op_mem2		1098605	2					
ANR	1098649	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1098605	3					
ANR	1098650	Parameter	struct sljit_compiler * compiler	625:42:20530:20560	1098605	0	True				
ANR	1098651	ParameterType	struct sljit_compiler *		1098605	0					
ANR	1098652	Identifier	compiler		1098605	1					
ANR	1098653	Parameter	sljit_si flags	625:75:20563:20576	1098605	1	True				
ANR	1098654	ParameterType	sljit_si		1098605	0					
ANR	1098655	Identifier	flags		1098605	1					
ANR	1098656	Parameter	sljit_si reg	625:91:20579:20590	1098605	2	True				
ANR	1098657	ParameterType	sljit_si		1098605	0					
ANR	1098658	Identifier	reg		1098605	1					
ANR	1098659	Parameter	sljit_si arg1	625:105:20593:20605	1098605	3	True				
ANR	1098660	ParameterType	sljit_si		1098605	0					
ANR	1098661	Identifier	arg1		1098605	1					
ANR	1098662	Parameter	sljit_sw arg1w	625:120:20608:20621	1098605	4	True				
ANR	1098663	ParameterType	sljit_sw		1098605	0					
ANR	1098664	Identifier	arg1w		1098605	1					
ANR	1098665	Parameter	sljit_si arg2	625:136:20624:20636	1098605	5	True				
ANR	1098666	ParameterType	sljit_si		1098605	0					
ANR	1098667	Identifier	arg2		1098605	1					
ANR	1098668	Parameter	sljit_sw arg2w	625:151:20639:20652	1098605	6	True				
ANR	1098669	ParameterType	sljit_sw		1098605	0					
ANR	1098670	Identifier	arg2w		1098605	1					
ANR	1098671	CFGEntryNode	ENTRY		1098605		True				
ANR	1098672	CFGExitNode	EXIT		1098605		True				
ANR	1098673	Symbol	arg1w		1098605						
ANR	1098674	Symbol	arg2		1098605						
ANR	1098675	Symbol	getput_arg		1098605						
ANR	1098676	Symbol	reg		1098605						
ANR	1098677	Symbol	arg1		1098605						
ANR	1098678	Symbol	arg2w		1098605						
ANR	1098679	Symbol	flags		1098605						
ANR	1098680	Symbol	* compiler		1098605						
ANR	1098681	Symbol	compiler		1098605						
ANR	1098682	Symbol	getput_arg_fast		1098605						
ANR	1098683	Symbol	compiler -> error		1098605						
ANR	1098684	Function	emit_op	632:0:20811:24368							
ANR	1098685	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1098684	0					
ANR	1098686	CompoundStatement		636:0:20991:24368	1098684	0					
ANR	1098687	IdentifierDeclStatement	sljit_si dst_r = TMP_REG2 ;	641:1:21187:21212	1098684	0	True				
ANR	1098688	IdentifierDecl	dst_r = TMP_REG2		1098684	0					
ANR	1098689	IdentifierDeclType	sljit_si		1098684	0					
ANR	1098690	Identifier	dst_r		1098684	1					
ANR	1098691	AssignmentExpression	dst_r = TMP_REG2		1098684	2		=			
ANR	1098692	Identifier	TMP_REG2		1098684	0					
ANR	1098693	Identifier	TMP_REG2		1098684	1					
ANR	1098694	IdentifierDeclStatement	sljit_si src1_r ;	642:1:21215:21230	1098684	1	True				
ANR	1098695	IdentifierDecl	src1_r		1098684	0					
ANR	1098696	IdentifierDeclType	sljit_si		1098684	0					
ANR	1098697	Identifier	src1_r		1098684	1					
ANR	1098698	IdentifierDeclStatement	sljit_sw src2_r = 0 ;	643:1:21233:21252	1098684	2	True				
ANR	1098699	IdentifierDecl	src2_r = 0		1098684	0					
ANR	1098700	IdentifierDeclType	sljit_sw		1098684	0					
ANR	1098701	Identifier	src2_r		1098684	1					
ANR	1098702	AssignmentExpression	src2_r = 0		1098684	2		=			
ANR	1098703	Identifier	src2_r		1098684	0					
ANR	1098704	PrimaryExpression	0		1098684	1					
ANR	1098705	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	644:1:21255:21286	1098684	3	True				
ANR	1098706	IdentifierDecl	sugg_src2_r = TMP_REG2		1098684	0					
ANR	1098707	IdentifierDeclType	sljit_si		1098684	0					
ANR	1098708	Identifier	sugg_src2_r		1098684	1					
ANR	1098709	AssignmentExpression	sugg_src2_r = TMP_REG2		1098684	2		=			
ANR	1098710	Identifier	TMP_REG2		1098684	0					
ANR	1098711	Identifier	TMP_REG2		1098684	1					
ANR	1098712	IfStatement	if ( ! ( flags & ALT_KEEP_CACHE ) )		1098684	4					
ANR	1098713	Condition	! ( flags & ALT_KEEP_CACHE )	646:5:21294:21318	1098684	0	True				
ANR	1098714	UnaryOperationExpression	! ( flags & ALT_KEEP_CACHE )		1098684	0					
ANR	1098715	UnaryOperator	!		1098684	0					
ANR	1098716	BitAndExpression	flags & ALT_KEEP_CACHE		1098684	1		&			
ANR	1098717	Identifier	flags		1098684	0					
ANR	1098718	Identifier	ALT_KEEP_CACHE		1098684	1					
ANR	1098719	CompoundStatement		11:32:329:329	1098684	1					
ANR	1098720	ExpressionStatement	compiler -> cache_arg = 0	647:2:21325:21348	1098684	0	True				
ANR	1098721	AssignmentExpression	compiler -> cache_arg = 0		1098684	0		=			
ANR	1098722	PtrMemberAccess	compiler -> cache_arg		1098684	0					
ANR	1098723	Identifier	compiler		1098684	0					
ANR	1098724	Identifier	cache_arg		1098684	1					
ANR	1098725	PrimaryExpression	0		1098684	1					
ANR	1098726	ExpressionStatement	compiler -> cache_argw = 0	648:2:21352:21376	1098684	1	True				
ANR	1098727	AssignmentExpression	compiler -> cache_argw = 0		1098684	0		=			
ANR	1098728	PtrMemberAccess	compiler -> cache_argw		1098684	0					
ANR	1098729	Identifier	compiler		1098684	0					
ANR	1098730	Identifier	cache_argw		1098684	1					
ANR	1098731	PrimaryExpression	0		1098684	1					
ANR	1098732	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1098684	5					
ANR	1098733	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	651:5:21387:21421	1098684	0	True				
ANR	1098734	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1098684	0					
ANR	1098735	Callee	SLJIT_UNLIKELY		1098684	0					
ANR	1098736	Identifier	SLJIT_UNLIKELY		1098684	0					
ANR	1098737	ArgumentList	dst == SLJIT_UNUSED		1098684	1					
ANR	1098738	Argument	dst == SLJIT_UNUSED		1098684	0					
ANR	1098739	EqualityExpression	dst == SLJIT_UNUSED		1098684	0		==			
ANR	1098740	Identifier	dst		1098684	0					
ANR	1098741	Identifier	SLJIT_UNUSED		1098684	1					
ANR	1098742	CompoundStatement		16:42:432:432	1098684	1					
ANR	1098743	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1098684	0					
ANR	1098744	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	652:6:21432:21492	1098684	0	True				
ANR	1098745	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1098684	0		&&			
ANR	1098746	RelationalExpression	op >= SLJIT_MOV		1098684	0		>=			
ANR	1098747	Identifier	op		1098684	0					
ANR	1098748	Identifier	SLJIT_MOV		1098684	1					
ANR	1098749	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1098684	1		&&			
ANR	1098750	RelationalExpression	op <= SLJIT_MOVU_SI		1098684	0		<=			
ANR	1098751	Identifier	op		1098684	0					
ANR	1098752	Identifier	SLJIT_MOVU_SI		1098684	1					
ANR	1098753	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1098684	1					
ANR	1098754	UnaryOperator	!		1098684	0					
ANR	1098755	BitAndExpression	src2 & SLJIT_MEM		1098684	1		&			
ANR	1098756	Identifier	src2		1098684	0					
ANR	1098757	Identifier	SLJIT_MEM		1098684	1					
ANR	1098758	ReturnStatement	return SLJIT_SUCCESS ;	653:3:21498:21518	1098684	1	True				
ANR	1098759	Identifier	SLJIT_SUCCESS		1098684	0					
ANR	1098760	ElseStatement	else		1098684	0					
ANR	1098761	IfStatement	if ( FAST_IS_REG ( dst ) )		1098684	0					
ANR	1098762	Condition	FAST_IS_REG ( dst )	655:10:21533:21548	1098684	0	True				
ANR	1098763	CallExpression	FAST_IS_REG ( dst )		1098684	0					
ANR	1098764	Callee	FAST_IS_REG		1098684	0					
ANR	1098765	Identifier	FAST_IS_REG		1098684	0					
ANR	1098766	ArgumentList	dst		1098684	1					
ANR	1098767	Argument	dst		1098684	0					
ANR	1098768	Identifier	dst		1098684	0					
ANR	1098769	CompoundStatement		20:28:559:559	1098684	1					
ANR	1098770	ExpressionStatement	dst_r = dst	656:2:21555:21566	1098684	0	True				
ANR	1098771	AssignmentExpression	dst_r = dst		1098684	0		=			
ANR	1098772	Identifier	dst_r		1098684	0					
ANR	1098773	Identifier	dst		1098684	1					
ANR	1098774	ExpressionStatement	flags |= REG_DEST	657:2:21570:21587	1098684	1	True				
ANR	1098775	AssignmentExpression	flags |= REG_DEST		1098684	0		|=			
ANR	1098776	Identifier	flags		1098684	0					
ANR	1098777	Identifier	REG_DEST		1098684	1					
ANR	1098778	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1098684	2					
ANR	1098779	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	658:6:21595:21632	1098684	0	True				
ANR	1098780	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1098684	0		&&			
ANR	1098781	RelationalExpression	op >= SLJIT_MOV		1098684	0		>=			
ANR	1098782	Identifier	op		1098684	0					
ANR	1098783	Identifier	SLJIT_MOV		1098684	1					
ANR	1098784	RelationalExpression	op <= SLJIT_MOVU_SI		1098684	1		<=			
ANR	1098785	Identifier	op		1098684	0					
ANR	1098786	Identifier	SLJIT_MOVU_SI		1098684	1					
ANR	1098787	ExpressionStatement	sugg_src2_r = dst_r	659:3:21638:21657	1098684	1	True				
ANR	1098788	AssignmentExpression	sugg_src2_r = dst_r		1098684	0		=			
ANR	1098789	Identifier	sugg_src2_r		1098684	0					
ANR	1098790	Identifier	dst_r		1098684	1					
ANR	1098791	ElseStatement	else		1098684	0					
ANR	1098792	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1 , dst , dstw ) )"		1098684	0					
ANR	1098793	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1 , dst , dstw )"	661:10:21672:21757	1098684	0	True				
ANR	1098794	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1 , dst , dstw )"		1098684	0		&&			
ANR	1098795	BitAndExpression	dst & SLJIT_MEM		1098684	0		&			
ANR	1098796	Identifier	dst		1098684	0					
ANR	1098797	Identifier	SLJIT_MEM		1098684	1					
ANR	1098798	UnaryOperationExpression	"! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1 , dst , dstw )"		1098684	1					
ANR	1098799	UnaryOperator	!		1098684	0					
ANR	1098800	CallExpression	"getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1 , dst , dstw )"		1098684	1					
ANR	1098801	Callee	getput_arg_fast		1098684	0					
ANR	1098802	Identifier	getput_arg_fast		1098684	0					
ANR	1098803	ArgumentList	compiler		1098684	1					
ANR	1098804	Argument	compiler		1098684	0					
ANR	1098805	Identifier	compiler		1098684	0					
ANR	1098806	Argument	flags | ARG_TEST		1098684	1					
ANR	1098807	InclusiveOrExpression	flags | ARG_TEST		1098684	0		|			
ANR	1098808	Identifier	flags		1098684	0					
ANR	1098809	Identifier	ARG_TEST		1098684	1					
ANR	1098810	Argument	TMP_REG1		1098684	2					
ANR	1098811	Identifier	TMP_REG1		1098684	0					
ANR	1098812	Argument	dst		1098684	3					
ANR	1098813	Identifier	dst		1098684	0					
ANR	1098814	Argument	dstw		1098684	4					
ANR	1098815	Identifier	dstw		1098684	0					
ANR	1098816	ExpressionStatement	flags |= SLOW_DEST	662:2:21762:21780	1098684	1	True				
ANR	1098817	AssignmentExpression	flags |= SLOW_DEST		1098684	0		|=			
ANR	1098818	Identifier	flags		1098684	0					
ANR	1098819	Identifier	SLOW_DEST		1098684	1					
ANR	1098820	IfStatement	if ( flags & IMM_OP )		1098684	6					
ANR	1098821	Condition	flags & IMM_OP	664:5:21788:21801	1098684	0	True				
ANR	1098822	BitAndExpression	flags & IMM_OP		1098684	0		&			
ANR	1098823	Identifier	flags		1098684	0					
ANR	1098824	Identifier	IMM_OP		1098684	1					
ANR	1098825	CompoundStatement		29:21:812:812	1098684	1					
ANR	1098826	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w )		1098684	0					
ANR	1098827	Condition	( src2 & SLJIT_IMM ) && src2w	665:6:21812:21838	1098684	0	True				
ANR	1098828	AndExpression	( src2 & SLJIT_IMM ) && src2w		1098684	0		&&			
ANR	1098829	BitAndExpression	src2 & SLJIT_IMM		1098684	0		&			
ANR	1098830	Identifier	src2		1098684	0					
ANR	1098831	Identifier	SLJIT_IMM		1098684	1					
ANR	1098832	Identifier	src2w		1098684	1					
ANR	1098833	CompoundStatement		30:35:849:849	1098684	1					
ANR	1098834	IfStatement	if ( src2w <= SIMM_MAX && src2w >= SIMM_MIN )		1098684	0					
ANR	1098835	Condition	src2w <= SIMM_MAX && src2w >= SIMM_MIN	666:7:21850:21887	1098684	0	True				
ANR	1098836	AndExpression	src2w <= SIMM_MAX && src2w >= SIMM_MIN		1098684	0		&&			
ANR	1098837	RelationalExpression	src2w <= SIMM_MAX		1098684	0		<=			
ANR	1098838	Identifier	src2w		1098684	0					
ANR	1098839	Identifier	SIMM_MAX		1098684	1					
ANR	1098840	RelationalExpression	src2w >= SIMM_MIN		1098684	1		>=			
ANR	1098841	Identifier	src2w		1098684	0					
ANR	1098842	Identifier	SIMM_MIN		1098684	1					
ANR	1098843	CompoundStatement		31:47:898:898	1098684	1					
ANR	1098844	ExpressionStatement	flags |= SRC2_IMM	667:4:21896:21913	1098684	0	True				
ANR	1098845	AssignmentExpression	flags |= SRC2_IMM		1098684	0		|=			
ANR	1098846	Identifier	flags		1098684	0					
ANR	1098847	Identifier	SRC2_IMM		1098684	1					
ANR	1098848	ExpressionStatement	src2_r = src2w	668:4:21919:21933	1098684	1	True				
ANR	1098849	AssignmentExpression	src2_r = src2w		1098684	0		=			
ANR	1098850	Identifier	src2_r		1098684	0					
ANR	1098851	Identifier	src2w		1098684	1					
ANR	1098852	IfStatement	if ( ! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w )		1098684	1					
ANR	1098853	Condition	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w	671:6:21950:22026	1098684	0	True				
ANR	1098854	AndExpression	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1098684	0		&&			
ANR	1098855	UnaryOperationExpression	! ( flags & SRC2_IMM )		1098684	0					
ANR	1098856	UnaryOperator	!		1098684	0					
ANR	1098857	BitAndExpression	flags & SRC2_IMM		1098684	1		&			
ANR	1098858	Identifier	flags		1098684	0					
ANR	1098859	Identifier	SRC2_IMM		1098684	1					
ANR	1098860	AndExpression	( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1098684	1		&&			
ANR	1098861	BitAndExpression	flags & CUMULATIVE_OP		1098684	0		&			
ANR	1098862	Identifier	flags		1098684	0					
ANR	1098863	Identifier	CUMULATIVE_OP		1098684	1					
ANR	1098864	AndExpression	( src1 & SLJIT_IMM ) && src1w		1098684	1		&&			
ANR	1098865	BitAndExpression	src1 & SLJIT_IMM		1098684	0		&			
ANR	1098866	Identifier	src1		1098684	0					
ANR	1098867	Identifier	SLJIT_IMM		1098684	1					
ANR	1098868	Identifier	src1w		1098684	1					
ANR	1098869	CompoundStatement		36:85:1037:1037	1098684	1					
ANR	1098870	IfStatement	if ( src1w <= SIMM_MAX && src1w >= SIMM_MIN )		1098684	0					
ANR	1098871	Condition	src1w <= SIMM_MAX && src1w >= SIMM_MIN	672:7:22038:22075	1098684	0	True				
ANR	1098872	AndExpression	src1w <= SIMM_MAX && src1w >= SIMM_MIN		1098684	0		&&			
ANR	1098873	RelationalExpression	src1w <= SIMM_MAX		1098684	0		<=			
ANR	1098874	Identifier	src1w		1098684	0					
ANR	1098875	Identifier	SIMM_MAX		1098684	1					
ANR	1098876	RelationalExpression	src1w >= SIMM_MIN		1098684	1		>=			
ANR	1098877	Identifier	src1w		1098684	0					
ANR	1098878	Identifier	SIMM_MIN		1098684	1					
ANR	1098879	CompoundStatement		37:47:1086:1086	1098684	1					
ANR	1098880	ExpressionStatement	flags |= SRC2_IMM	673:4:22084:22101	1098684	0	True				
ANR	1098881	AssignmentExpression	flags |= SRC2_IMM		1098684	0		|=			
ANR	1098882	Identifier	flags		1098684	0					
ANR	1098883	Identifier	SRC2_IMM		1098684	1					
ANR	1098884	ExpressionStatement	src2_r = src1w	674:4:22107:22121	1098684	1	True				
ANR	1098885	AssignmentExpression	src2_r = src1w		1098684	0		=			
ANR	1098886	Identifier	src2_r		1098684	0					
ANR	1098887	Identifier	src1w		1098684	1					
ANR	1098888	ExpressionStatement	src1 = src2	677:4:22158:22169	1098684	2	True				
ANR	1098889	AssignmentExpression	src1 = src2		1098684	0		=			
ANR	1098890	Identifier	src1		1098684	0					
ANR	1098891	Identifier	src2		1098684	1					
ANR	1098892	ExpressionStatement	src1w = src2w	678:4:22175:22188	1098684	3	True				
ANR	1098893	AssignmentExpression	src1w = src2w		1098684	0		=			
ANR	1098894	Identifier	src1w		1098684	0					
ANR	1098895	Identifier	src2w		1098684	1					
ANR	1098896	ExpressionStatement	src2 = SLJIT_IMM	679:4:22194:22210	1098684	4	True				
ANR	1098897	AssignmentExpression	src2 = SLJIT_IMM		1098684	0		=			
ANR	1098898	Identifier	src2		1098684	0					
ANR	1098899	Identifier	SLJIT_IMM		1098684	1					
ANR	1098900	IfStatement	if ( FAST_IS_REG ( src1 ) )		1098684	7					
ANR	1098901	Condition	FAST_IS_REG ( src1 )	686:5:22282:22298	1098684	0	True				
ANR	1098902	CallExpression	FAST_IS_REG ( src1 )		1098684	0					
ANR	1098903	Callee	FAST_IS_REG		1098684	0					
ANR	1098904	Identifier	FAST_IS_REG		1098684	0					
ANR	1098905	ArgumentList	src1		1098684	1					
ANR	1098906	Argument	src1		1098684	0					
ANR	1098907	Identifier	src1		1098684	0					
ANR	1098908	ExpressionStatement	src1_r = src1	687:2:22303:22316	1098684	1	True				
ANR	1098909	AssignmentExpression	src1_r = src1		1098684	0		=			
ANR	1098910	Identifier	src1_r		1098684	0					
ANR	1098911	Identifier	src1		1098684	1					
ANR	1098912	ElseStatement	else		1098684	0					
ANR	1098913	IfStatement	if ( src1 & SLJIT_IMM )		1098684	0					
ANR	1098914	Condition	src1 & SLJIT_IMM	688:10:22328:22343	1098684	0	True				
ANR	1098915	BitAndExpression	src1 & SLJIT_IMM		1098684	0		&			
ANR	1098916	Identifier	src1		1098684	0					
ANR	1098917	Identifier	SLJIT_IMM		1098684	1					
ANR	1098918	CompoundStatement		53:28:1354:1354	1098684	1					
ANR	1098919	IfStatement	if ( src1w )		1098684	0					
ANR	1098920	Condition	src1w	689:6:22354:22358	1098684	0	True				
ANR	1098921	Identifier	src1w		1098684	0					
ANR	1098922	CompoundStatement		54:13:1369:1369	1098684	1					
ANR	1098923	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"	690:3:22366:22416	1098684	0	True				
ANR	1098924	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"		1098684	0					
ANR	1098925	Callee	FAIL_IF		1098684	0					
ANR	1098926	Identifier	FAIL_IF		1098684	0					
ANR	1098927	ArgumentList	"load_immediate ( compiler , TMP_REG1 , src1w )"		1098684	1					
ANR	1098928	Argument	"load_immediate ( compiler , TMP_REG1 , src1w )"		1098684	0					
ANR	1098929	CallExpression	"load_immediate ( compiler , TMP_REG1 , src1w )"		1098684	0					
ANR	1098930	Callee	load_immediate		1098684	0					
ANR	1098931	Identifier	load_immediate		1098684	0					
ANR	1098932	ArgumentList	compiler		1098684	1					
ANR	1098933	Argument	compiler		1098684	0					
ANR	1098934	Identifier	compiler		1098684	0					
ANR	1098935	Argument	TMP_REG1		1098684	1					
ANR	1098936	Identifier	TMP_REG1		1098684	0					
ANR	1098937	Argument	src1w		1098684	2					
ANR	1098938	Identifier	src1w		1098684	0					
ANR	1098939	ExpressionStatement	src1_r = TMP_REG1	691:3:22421:22438	1098684	1	True				
ANR	1098940	AssignmentExpression	src1_r = TMP_REG1		1098684	0		=			
ANR	1098941	Identifier	src1_r		1098684	0					
ANR	1098942	Identifier	TMP_REG1		1098684	1					
ANR	1098943	ElseStatement	else		1098684	0					
ANR	1098944	ExpressionStatement	src1_r = 0	694:3:22454:22464	1098684	0	True				
ANR	1098945	AssignmentExpression	src1_r = 0		1098684	0		=			
ANR	1098946	Identifier	src1_r		1098684	0					
ANR	1098947	PrimaryExpression	0		1098684	1					
ANR	1098948	ElseStatement	else		1098684	0					
ANR	1098949	CompoundStatement		61:6:1483:1483	1098684	0					
ANR	1098950	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w ) )"		1098684	0					
ANR	1098951	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"	697:6:22483:22549	1098684	0	True				
ANR	1098952	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"		1098684	0					
ANR	1098953	Callee	getput_arg_fast		1098684	0					
ANR	1098954	Identifier	getput_arg_fast		1098684	0					
ANR	1098955	ArgumentList	compiler		1098684	1					
ANR	1098956	Argument	compiler		1098684	0					
ANR	1098957	Identifier	compiler		1098684	0					
ANR	1098958	Argument	flags | LOAD_DATA		1098684	1					
ANR	1098959	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1098960	Identifier	flags		1098684	0					
ANR	1098961	Identifier	LOAD_DATA		1098684	1					
ANR	1098962	Argument	TMP_REG1		1098684	2					
ANR	1098963	Identifier	TMP_REG1		1098684	0					
ANR	1098964	Argument	src1		1098684	3					
ANR	1098965	Identifier	src1		1098684	0					
ANR	1098966	Argument	src1w		1098684	4					
ANR	1098967	Identifier	src1w		1098684	0					
ANR	1098968	ExpressionStatement	FAIL_IF ( compiler -> error )	698:3:22555:22579	1098684	1	True				
ANR	1098969	CallExpression	FAIL_IF ( compiler -> error )		1098684	0					
ANR	1098970	Callee	FAIL_IF		1098684	0					
ANR	1098971	Identifier	FAIL_IF		1098684	0					
ANR	1098972	ArgumentList	compiler -> error		1098684	1					
ANR	1098973	Argument	compiler -> error		1098684	0					
ANR	1098974	PtrMemberAccess	compiler -> error		1098684	0					
ANR	1098975	Identifier	compiler		1098684	0					
ANR	1098976	Identifier	error		1098684	1					
ANR	1098977	ElseStatement	else		1098684	0					
ANR	1098978	ExpressionStatement	flags |= SLOW_SRC1	700:3:22591:22609	1098684	0	True				
ANR	1098979	AssignmentExpression	flags |= SLOW_SRC1		1098684	0		|=			
ANR	1098980	Identifier	flags		1098684	0					
ANR	1098981	Identifier	SLOW_SRC1		1098684	1					
ANR	1098982	ExpressionStatement	src1_r = TMP_REG1	701:2:22613:22630	1098684	1	True				
ANR	1098983	AssignmentExpression	src1_r = TMP_REG1		1098684	0		=			
ANR	1098984	Identifier	src1_r		1098684	0					
ANR	1098985	Identifier	TMP_REG1		1098684	1					
ANR	1098986	IfStatement	if ( FAST_IS_REG ( src2 ) )		1098684	8					
ANR	1098987	Condition	FAST_IS_REG ( src2 )	705:5:22658:22674	1098684	0	True				
ANR	1098988	CallExpression	FAST_IS_REG ( src2 )		1098684	0					
ANR	1098989	Callee	FAST_IS_REG		1098684	0					
ANR	1098990	Identifier	FAST_IS_REG		1098684	0					
ANR	1098991	ArgumentList	src2		1098684	1					
ANR	1098992	Argument	src2		1098684	0					
ANR	1098993	Identifier	src2		1098684	0					
ANR	1098994	CompoundStatement		70:24:1685:1685	1098684	1					
ANR	1098995	ExpressionStatement	src2_r = src2	706:2:22681:22694	1098684	0	True				
ANR	1098996	AssignmentExpression	src2_r = src2		1098684	0		=			
ANR	1098997	Identifier	src2_r		1098684	0					
ANR	1098998	Identifier	src2		1098684	1					
ANR	1098999	ExpressionStatement	flags |= REG2_SOURCE	707:2:22698:22718	1098684	1	True				
ANR	1099000	AssignmentExpression	flags |= REG2_SOURCE		1098684	0		|=			
ANR	1099001	Identifier	flags		1098684	0					
ANR	1099002	Identifier	REG2_SOURCE		1098684	1					
ANR	1099003	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1098684	2					
ANR	1099004	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	708:6:22726:22786	1098684	0	True				
ANR	1099005	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1098684	0		&&			
ANR	1099006	UnaryOperationExpression	! ( flags & REG_DEST )		1098684	0					
ANR	1099007	UnaryOperator	!		1098684	0					
ANR	1099008	BitAndExpression	flags & REG_DEST		1098684	1		&			
ANR	1099009	Identifier	flags		1098684	0					
ANR	1099010	Identifier	REG_DEST		1098684	1					
ANR	1099011	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1098684	1		&&			
ANR	1099012	RelationalExpression	op >= SLJIT_MOV		1098684	0		>=			
ANR	1099013	Identifier	op		1098684	0					
ANR	1099014	Identifier	SLJIT_MOV		1098684	1					
ANR	1099015	RelationalExpression	op <= SLJIT_MOVU_SI		1098684	1		<=			
ANR	1099016	Identifier	op		1098684	0					
ANR	1099017	Identifier	SLJIT_MOVU_SI		1098684	1					
ANR	1099018	ExpressionStatement	dst_r = src2_r	709:3:22792:22806	1098684	1	True				
ANR	1099019	AssignmentExpression	dst_r = src2_r		1098684	0		=			
ANR	1099020	Identifier	dst_r		1098684	0					
ANR	1099021	Identifier	src2_r		1098684	1					
ANR	1099022	ElseStatement	else		1098684	0					
ANR	1099023	IfStatement	if ( src2 & SLJIT_IMM )		1098684	0					
ANR	1099024	Condition	src2 & SLJIT_IMM	711:10:22821:22836	1098684	0	True				
ANR	1099025	BitAndExpression	src2 & SLJIT_IMM		1098684	0		&			
ANR	1099026	Identifier	src2		1098684	0					
ANR	1099027	Identifier	SLJIT_IMM		1098684	1					
ANR	1099028	CompoundStatement		76:28:1847:1847	1098684	1					
ANR	1099029	IfStatement	if ( ! ( flags & SRC2_IMM ) )		1098684	0					
ANR	1099030	Condition	! ( flags & SRC2_IMM )	712:6:22847:22865	1098684	0	True				
ANR	1099031	UnaryOperationExpression	! ( flags & SRC2_IMM )		1098684	0					
ANR	1099032	UnaryOperator	!		1098684	0					
ANR	1099033	BitAndExpression	flags & SRC2_IMM		1098684	1		&			
ANR	1099034	Identifier	flags		1098684	0					
ANR	1099035	Identifier	SRC2_IMM		1098684	1					
ANR	1099036	CompoundStatement		77:27:1876:1876	1098684	1					
ANR	1099037	IfStatement	if ( src2w )		1098684	0					
ANR	1099038	Condition	src2w	713:7:22877:22881	1098684	0	True				
ANR	1099039	Identifier	src2w		1098684	0					
ANR	1099040	CompoundStatement		78:14:1892:1892	1098684	1					
ANR	1099041	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"	714:4:22890:22943	1098684	0	True				
ANR	1099042	CallExpression	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"		1098684	0					
ANR	1099043	Callee	FAIL_IF		1098684	0					
ANR	1099044	Identifier	FAIL_IF		1098684	0					
ANR	1099045	ArgumentList	"load_immediate ( compiler , sugg_src2_r , src2w )"		1098684	1					
ANR	1099046	Argument	"load_immediate ( compiler , sugg_src2_r , src2w )"		1098684	0					
ANR	1099047	CallExpression	"load_immediate ( compiler , sugg_src2_r , src2w )"		1098684	0					
ANR	1099048	Callee	load_immediate		1098684	0					
ANR	1099049	Identifier	load_immediate		1098684	0					
ANR	1099050	ArgumentList	compiler		1098684	1					
ANR	1099051	Argument	compiler		1098684	0					
ANR	1099052	Identifier	compiler		1098684	0					
ANR	1099053	Argument	sugg_src2_r		1098684	1					
ANR	1099054	Identifier	sugg_src2_r		1098684	0					
ANR	1099055	Argument	src2w		1098684	2					
ANR	1099056	Identifier	src2w		1098684	0					
ANR	1099057	ExpressionStatement	src2_r = sugg_src2_r	715:4:22949:22969	1098684	1	True				
ANR	1099058	AssignmentExpression	src2_r = sugg_src2_r		1098684	0		=			
ANR	1099059	Identifier	src2_r		1098684	0					
ANR	1099060	Identifier	sugg_src2_r		1098684	1					
ANR	1099061	ElseStatement	else		1098684	0					
ANR	1099062	CompoundStatement		82:8:1992:1992	1098684	0					
ANR	1099063	ExpressionStatement	src2_r = 0	718:4:22990:23000	1098684	0	True				
ANR	1099064	AssignmentExpression	src2_r = 0		1098684	0		=			
ANR	1099065	Identifier	src2_r		1098684	0					
ANR	1099066	PrimaryExpression	0		1098684	1					
ANR	1099067	IfStatement	if ( ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM ) )		1098684	1					
ANR	1099068	Condition	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )	719:8:23010:23070	1098684	0	True				
ANR	1099069	AndExpression	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )		1098684	0		&&			
ANR	1099070	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1098684	0		&&			
ANR	1099071	RelationalExpression	op >= SLJIT_MOV		1098684	0		>=			
ANR	1099072	Identifier	op		1098684	0					
ANR	1099073	Identifier	SLJIT_MOV		1098684	1					
ANR	1099074	RelationalExpression	op <= SLJIT_MOVU_SI		1098684	1		<=			
ANR	1099075	Identifier	op		1098684	0					
ANR	1099076	Identifier	SLJIT_MOVU_SI		1098684	1					
ANR	1099077	BitAndExpression	dst & SLJIT_MEM		1098684	1		&			
ANR	1099078	Identifier	dst		1098684	0					
ANR	1099079	Identifier	SLJIT_MEM		1098684	1					
ANR	1099080	ExpressionStatement	dst_r = 0	720:5:23078:23087	1098684	1	True				
ANR	1099081	AssignmentExpression	dst_r = 0		1098684	0		=			
ANR	1099082	Identifier	dst_r		1098684	0					
ANR	1099083	PrimaryExpression	0		1098684	1					
ANR	1099084	ElseStatement	else		1098684	0					
ANR	1099085	CompoundStatement		89:6:2115:2115	1098684	0					
ANR	1099086	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w ) )"		1098684	0					
ANR	1099087	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"	725:6:23115:23184	1098684	0	True				
ANR	1099088	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"		1098684	0					
ANR	1099089	Callee	getput_arg_fast		1098684	0					
ANR	1099090	Identifier	getput_arg_fast		1098684	0					
ANR	1099091	ArgumentList	compiler		1098684	1					
ANR	1099092	Argument	compiler		1098684	0					
ANR	1099093	Identifier	compiler		1098684	0					
ANR	1099094	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099095	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099096	Identifier	flags		1098684	0					
ANR	1099097	Identifier	LOAD_DATA		1098684	1					
ANR	1099098	Argument	sugg_src2_r		1098684	2					
ANR	1099099	Identifier	sugg_src2_r		1098684	0					
ANR	1099100	Argument	src2		1098684	3					
ANR	1099101	Identifier	src2		1098684	0					
ANR	1099102	Argument	src2w		1098684	4					
ANR	1099103	Identifier	src2w		1098684	0					
ANR	1099104	ExpressionStatement	FAIL_IF ( compiler -> error )	726:3:23190:23214	1098684	1	True				
ANR	1099105	CallExpression	FAIL_IF ( compiler -> error )		1098684	0					
ANR	1099106	Callee	FAIL_IF		1098684	0					
ANR	1099107	Identifier	FAIL_IF		1098684	0					
ANR	1099108	ArgumentList	compiler -> error		1098684	1					
ANR	1099109	Argument	compiler -> error		1098684	0					
ANR	1099110	PtrMemberAccess	compiler -> error		1098684	0					
ANR	1099111	Identifier	compiler		1098684	0					
ANR	1099112	Identifier	error		1098684	1					
ANR	1099113	ElseStatement	else		1098684	0					
ANR	1099114	ExpressionStatement	flags |= SLOW_SRC2	728:3:23226:23244	1098684	0	True				
ANR	1099115	AssignmentExpression	flags |= SLOW_SRC2		1098684	0		|=			
ANR	1099116	Identifier	flags		1098684	0					
ANR	1099117	Identifier	SLOW_SRC2		1098684	1					
ANR	1099118	ExpressionStatement	src2_r = sugg_src2_r	729:2:23248:23268	1098684	1	True				
ANR	1099119	AssignmentExpression	src2_r = sugg_src2_r		1098684	0		=			
ANR	1099120	Identifier	src2_r		1098684	0					
ANR	1099121	Identifier	sugg_src2_r		1098684	1					
ANR	1099122	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1098684	9					
ANR	1099123	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	732:5:23279:23338	1098684	0	True				
ANR	1099124	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1098684	0		==			
ANR	1099125	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1098684	0		&			
ANR	1099126	Identifier	flags		1098684	0					
ANR	1099127	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1098684	1		|			
ANR	1099128	Identifier	SLOW_SRC1		1098684	0					
ANR	1099129	Identifier	SLOW_SRC2		1098684	1					
ANR	1099130	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1098684	1		|			
ANR	1099131	Identifier	SLOW_SRC1		1098684	0					
ANR	1099132	Identifier	SLOW_SRC2		1098684	1					
ANR	1099133	CompoundStatement		97:67:2349:2349	1098684	1					
ANR	1099134	ExpressionStatement	SLJIT_ASSERT ( src2_r == TMP_REG2 )	733:2:23345:23377	1098684	0	True				
ANR	1099135	CallExpression	SLJIT_ASSERT ( src2_r == TMP_REG2 )		1098684	0					
ANR	1099136	Callee	SLJIT_ASSERT		1098684	0					
ANR	1099137	Identifier	SLJIT_ASSERT		1098684	0					
ANR	1099138	ArgumentList	src2_r == TMP_REG2		1098684	1					
ANR	1099139	Argument	src2_r == TMP_REG2		1098684	0					
ANR	1099140	EqualityExpression	src2_r == TMP_REG2		1098684	0		==			
ANR	1099141	Identifier	src2_r		1098684	0					
ANR	1099142	Identifier	TMP_REG2		1098684	1					
ANR	1099143	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1098684	1					
ANR	1099144	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	734:6:23385:23457	1098684	0	True				
ANR	1099145	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1098684	0		&&			
ANR	1099146	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1098684	0					
ANR	1099147	UnaryOperator	!		1098684	0					
ANR	1099148	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1098684	1					
ANR	1099149	Callee	can_cache		1098684	0					
ANR	1099150	Identifier	can_cache		1098684	0					
ANR	1099151	ArgumentList	src1		1098684	1					
ANR	1099152	Argument	src1		1098684	0					
ANR	1099153	Identifier	src1		1098684	0					
ANR	1099154	Argument	src1w		1098684	1					
ANR	1099155	Identifier	src1w		1098684	0					
ANR	1099156	Argument	src2		1098684	2					
ANR	1099157	Identifier	src2		1098684	0					
ANR	1099158	Argument	src2w		1098684	3					
ANR	1099159	Identifier	src2w		1098684	0					
ANR	1099160	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1098684	1					
ANR	1099161	Callee	can_cache		1098684	0					
ANR	1099162	Identifier	can_cache		1098684	0					
ANR	1099163	ArgumentList	src1		1098684	1					
ANR	1099164	Argument	src1		1098684	0					
ANR	1099165	Identifier	src1		1098684	0					
ANR	1099166	Argument	src1w		1098684	1					
ANR	1099167	Identifier	src1w		1098684	0					
ANR	1099168	Argument	dst		1098684	2					
ANR	1099169	Identifier	dst		1098684	0					
ANR	1099170	Argument	dstw		1098684	3					
ANR	1099171	Identifier	dstw		1098684	0					
ANR	1099172	CompoundStatement		99:81:2468:2468	1098684	1					
ANR	1099173	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	735:3:23465:23549	1098684	0	True				
ANR	1099174	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1098684	0					
ANR	1099175	Callee	FAIL_IF		1098684	0					
ANR	1099176	Identifier	FAIL_IF		1098684	0					
ANR	1099177	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1098684	1					
ANR	1099178	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1098684	0					
ANR	1099179	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1098684	0					
ANR	1099180	Callee	getput_arg		1098684	0					
ANR	1099181	Identifier	getput_arg		1098684	0					
ANR	1099182	ArgumentList	compiler		1098684	1					
ANR	1099183	Argument	compiler		1098684	0					
ANR	1099184	Identifier	compiler		1098684	0					
ANR	1099185	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099186	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099187	Identifier	flags		1098684	0					
ANR	1099188	Identifier	LOAD_DATA		1098684	1					
ANR	1099189	Argument	TMP_REG2		1098684	2					
ANR	1099190	Identifier	TMP_REG2		1098684	0					
ANR	1099191	Argument	src2		1098684	3					
ANR	1099192	Identifier	src2		1098684	0					
ANR	1099193	Argument	src2w		1098684	4					
ANR	1099194	Identifier	src2w		1098684	0					
ANR	1099195	Argument	src1		1098684	5					
ANR	1099196	Identifier	src1		1098684	0					
ANR	1099197	Argument	src1w		1098684	6					
ANR	1099198	Identifier	src1w		1098684	0					
ANR	1099199	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	736:3:23554:23636	1098684	1	True				
ANR	1099200	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1098684	0					
ANR	1099201	Callee	FAIL_IF		1098684	0					
ANR	1099202	Identifier	FAIL_IF		1098684	0					
ANR	1099203	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	1					
ANR	1099204	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	0					
ANR	1099205	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	0					
ANR	1099206	Callee	getput_arg		1098684	0					
ANR	1099207	Identifier	getput_arg		1098684	0					
ANR	1099208	ArgumentList	compiler		1098684	1					
ANR	1099209	Argument	compiler		1098684	0					
ANR	1099210	Identifier	compiler		1098684	0					
ANR	1099211	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099212	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099213	Identifier	flags		1098684	0					
ANR	1099214	Identifier	LOAD_DATA		1098684	1					
ANR	1099215	Argument	TMP_REG1		1098684	2					
ANR	1099216	Identifier	TMP_REG1		1098684	0					
ANR	1099217	Argument	src1		1098684	3					
ANR	1099218	Identifier	src1		1098684	0					
ANR	1099219	Argument	src1w		1098684	4					
ANR	1099220	Identifier	src1w		1098684	0					
ANR	1099221	Argument	dst		1098684	5					
ANR	1099222	Identifier	dst		1098684	0					
ANR	1099223	Argument	dstw		1098684	6					
ANR	1099224	Identifier	dstw		1098684	0					
ANR	1099225	ElseStatement	else		1098684	0					
ANR	1099226	CompoundStatement		103:7:2657:2657	1098684	0					
ANR	1099227	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	739:3:23654:23738	1098684	0	True				
ANR	1099228	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1098684	0					
ANR	1099229	Callee	FAIL_IF		1098684	0					
ANR	1099230	Identifier	FAIL_IF		1098684	0					
ANR	1099231	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1098684	1					
ANR	1099232	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1098684	0					
ANR	1099233	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1098684	0					
ANR	1099234	Callee	getput_arg		1098684	0					
ANR	1099235	Identifier	getput_arg		1098684	0					
ANR	1099236	ArgumentList	compiler		1098684	1					
ANR	1099237	Argument	compiler		1098684	0					
ANR	1099238	Identifier	compiler		1098684	0					
ANR	1099239	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099240	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099241	Identifier	flags		1098684	0					
ANR	1099242	Identifier	LOAD_DATA		1098684	1					
ANR	1099243	Argument	TMP_REG1		1098684	2					
ANR	1099244	Identifier	TMP_REG1		1098684	0					
ANR	1099245	Argument	src1		1098684	3					
ANR	1099246	Identifier	src1		1098684	0					
ANR	1099247	Argument	src1w		1098684	4					
ANR	1099248	Identifier	src1w		1098684	0					
ANR	1099249	Argument	src2		1098684	5					
ANR	1099250	Identifier	src2		1098684	0					
ANR	1099251	Argument	src2w		1098684	6					
ANR	1099252	Identifier	src2w		1098684	0					
ANR	1099253	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"	740:3:23743:23825	1098684	1	True				
ANR	1099254	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1098684	0					
ANR	1099255	Callee	FAIL_IF		1098684	0					
ANR	1099256	Identifier	FAIL_IF		1098684	0					
ANR	1099257	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1098684	1					
ANR	1099258	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1098684	0					
ANR	1099259	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1098684	0					
ANR	1099260	Callee	getput_arg		1098684	0					
ANR	1099261	Identifier	getput_arg		1098684	0					
ANR	1099262	ArgumentList	compiler		1098684	1					
ANR	1099263	Argument	compiler		1098684	0					
ANR	1099264	Identifier	compiler		1098684	0					
ANR	1099265	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099266	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099267	Identifier	flags		1098684	0					
ANR	1099268	Identifier	LOAD_DATA		1098684	1					
ANR	1099269	Argument	TMP_REG2		1098684	2					
ANR	1099270	Identifier	TMP_REG2		1098684	0					
ANR	1099271	Argument	src2		1098684	3					
ANR	1099272	Identifier	src2		1098684	0					
ANR	1099273	Argument	src2w		1098684	4					
ANR	1099274	Identifier	src2w		1098684	0					
ANR	1099275	Argument	dst		1098684	5					
ANR	1099276	Identifier	dst		1098684	0					
ANR	1099277	Argument	dstw		1098684	6					
ANR	1099278	Identifier	dstw		1098684	0					
ANR	1099279	ElseStatement	else		1098684	0					
ANR	1099280	IfStatement	if ( flags & SLOW_SRC1 )		1098684	0					
ANR	1099281	Condition	flags & SLOW_SRC1	743:10:23844:23860	1098684	0	True				
ANR	1099282	BitAndExpression	flags & SLOW_SRC1		1098684	0		&			
ANR	1099283	Identifier	flags		1098684	0					
ANR	1099284	Identifier	SLOW_SRC1		1098684	1					
ANR	1099285	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	744:2:23865:23947	1098684	1	True				
ANR	1099286	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1098684	0					
ANR	1099287	Callee	FAIL_IF		1098684	0					
ANR	1099288	Identifier	FAIL_IF		1098684	0					
ANR	1099289	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	1					
ANR	1099290	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	0					
ANR	1099291	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1098684	0					
ANR	1099292	Callee	getput_arg		1098684	0					
ANR	1099293	Identifier	getput_arg		1098684	0					
ANR	1099294	ArgumentList	compiler		1098684	1					
ANR	1099295	Argument	compiler		1098684	0					
ANR	1099296	Identifier	compiler		1098684	0					
ANR	1099297	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099298	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099299	Identifier	flags		1098684	0					
ANR	1099300	Identifier	LOAD_DATA		1098684	1					
ANR	1099301	Argument	TMP_REG1		1098684	2					
ANR	1099302	Identifier	TMP_REG1		1098684	0					
ANR	1099303	Argument	src1		1098684	3					
ANR	1099304	Identifier	src1		1098684	0					
ANR	1099305	Argument	src1w		1098684	4					
ANR	1099306	Identifier	src1w		1098684	0					
ANR	1099307	Argument	dst		1098684	5					
ANR	1099308	Identifier	dst		1098684	0					
ANR	1099309	Argument	dstw		1098684	6					
ANR	1099310	Identifier	dstw		1098684	0					
ANR	1099311	ElseStatement	else		1098684	0					
ANR	1099312	IfStatement	if ( flags & SLOW_SRC2 )		1098684	0					
ANR	1099313	Condition	flags & SLOW_SRC2	745:10:23959:23975	1098684	0	True				
ANR	1099314	BitAndExpression	flags & SLOW_SRC2		1098684	0		&			
ANR	1099315	Identifier	flags		1098684	0					
ANR	1099316	Identifier	SLOW_SRC2		1098684	1					
ANR	1099317	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"	746:2:23980:24065	1098684	1	True				
ANR	1099318	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"		1098684	0					
ANR	1099319	Callee	FAIL_IF		1098684	0					
ANR	1099320	Identifier	FAIL_IF		1098684	0					
ANR	1099321	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1098684	1					
ANR	1099322	Argument	"getput_arg ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1098684	0					
ANR	1099323	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1098684	0					
ANR	1099324	Callee	getput_arg		1098684	0					
ANR	1099325	Identifier	getput_arg		1098684	0					
ANR	1099326	ArgumentList	compiler		1098684	1					
ANR	1099327	Argument	compiler		1098684	0					
ANR	1099328	Identifier	compiler		1098684	0					
ANR	1099329	Argument	flags | LOAD_DATA		1098684	1					
ANR	1099330	InclusiveOrExpression	flags | LOAD_DATA		1098684	0		|			
ANR	1099331	Identifier	flags		1098684	0					
ANR	1099332	Identifier	LOAD_DATA		1098684	1					
ANR	1099333	Argument	sugg_src2_r		1098684	2					
ANR	1099334	Identifier	sugg_src2_r		1098684	0					
ANR	1099335	Argument	src2		1098684	3					
ANR	1099336	Identifier	src2		1098684	0					
ANR	1099337	Argument	src2w		1098684	4					
ANR	1099338	Identifier	src2w		1098684	0					
ANR	1099339	Argument	dst		1098684	5					
ANR	1099340	Identifier	dst		1098684	0					
ANR	1099341	Argument	dstw		1098684	6					
ANR	1099342	Identifier	dstw		1098684	0					
ANR	1099343	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	748:1:24069:24136	1098684	10	True				
ANR	1099344	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1098684	0					
ANR	1099345	Callee	FAIL_IF		1098684	0					
ANR	1099346	Identifier	FAIL_IF		1098684	0					
ANR	1099347	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1098684	1					
ANR	1099348	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1098684	0					
ANR	1099349	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1098684	0					
ANR	1099350	Callee	emit_single_op		1098684	0					
ANR	1099351	Identifier	emit_single_op		1098684	0					
ANR	1099352	ArgumentList	compiler		1098684	1					
ANR	1099353	Argument	compiler		1098684	0					
ANR	1099354	Identifier	compiler		1098684	0					
ANR	1099355	Argument	op		1098684	1					
ANR	1099356	Identifier	op		1098684	0					
ANR	1099357	Argument	flags		1098684	2					
ANR	1099358	Identifier	flags		1098684	0					
ANR	1099359	Argument	dst_r		1098684	3					
ANR	1099360	Identifier	dst_r		1098684	0					
ANR	1099361	Argument	src1_r		1098684	4					
ANR	1099362	Identifier	src1_r		1098684	0					
ANR	1099363	Argument	src2_r		1098684	5					
ANR	1099364	Identifier	src2_r		1098684	0					
ANR	1099365	IfStatement	if ( dst & SLJIT_MEM )		1098684	11					
ANR	1099366	Condition	dst & SLJIT_MEM	750:5:24144:24158	1098684	0	True				
ANR	1099367	BitAndExpression	dst & SLJIT_MEM		1098684	0		&			
ANR	1099368	Identifier	dst		1098684	0					
ANR	1099369	Identifier	SLJIT_MEM		1098684	1					
ANR	1099370	CompoundStatement		115:22:3169:3169	1098684	1					
ANR	1099371	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1098684	0					
ANR	1099372	Condition	! ( flags & SLOW_DEST )	751:6:24169:24188	1098684	0	True				
ANR	1099373	UnaryOperationExpression	! ( flags & SLOW_DEST )		1098684	0					
ANR	1099374	UnaryOperator	!		1098684	0					
ANR	1099375	BitAndExpression	flags & SLOW_DEST		1098684	1		&			
ANR	1099376	Identifier	flags		1098684	0					
ANR	1099377	Identifier	SLOW_DEST		1098684	1					
ANR	1099378	CompoundStatement		116:28:3199:3199	1098684	1					
ANR	1099379	ExpressionStatement	"getput_arg_fast ( compiler , flags , dst_r , dst , dstw )"	752:3:24196:24246	1098684	0	True				
ANR	1099380	CallExpression	"getput_arg_fast ( compiler , flags , dst_r , dst , dstw )"		1098684	0					
ANR	1099381	Callee	getput_arg_fast		1098684	0					
ANR	1099382	Identifier	getput_arg_fast		1098684	0					
ANR	1099383	ArgumentList	compiler		1098684	1					
ANR	1099384	Argument	compiler		1098684	0					
ANR	1099385	Identifier	compiler		1098684	0					
ANR	1099386	Argument	flags		1098684	1					
ANR	1099387	Identifier	flags		1098684	0					
ANR	1099388	Argument	dst_r		1098684	2					
ANR	1099389	Identifier	dst_r		1098684	0					
ANR	1099390	Argument	dst		1098684	3					
ANR	1099391	Identifier	dst		1098684	0					
ANR	1099392	Argument	dstw		1098684	4					
ANR	1099393	Identifier	dstw		1098684	0					
ANR	1099394	ReturnStatement	return compiler -> error ;	753:3:24251:24273	1098684	1	True				
ANR	1099395	PtrMemberAccess	compiler -> error		1098684	0					
ANR	1099396	Identifier	compiler		1098684	0					
ANR	1099397	Identifier	error		1098684	1					
ANR	1099398	ReturnStatement	"return getput_arg ( compiler , flags , dst_r , dst , dstw , 0 , 0 ) ;"	755:2:24281:24339	1098684	1	True				
ANR	1099399	CallExpression	"getput_arg ( compiler , flags , dst_r , dst , dstw , 0 , 0 )"		1098684	0					
ANR	1099400	Callee	getput_arg		1098684	0					
ANR	1099401	Identifier	getput_arg		1098684	0					
ANR	1099402	ArgumentList	compiler		1098684	1					
ANR	1099403	Argument	compiler		1098684	0					
ANR	1099404	Identifier	compiler		1098684	0					
ANR	1099405	Argument	flags		1098684	1					
ANR	1099406	Identifier	flags		1098684	0					
ANR	1099407	Argument	dst_r		1098684	2					
ANR	1099408	Identifier	dst_r		1098684	0					
ANR	1099409	Argument	dst		1098684	3					
ANR	1099410	Identifier	dst		1098684	0					
ANR	1099411	Argument	dstw		1098684	4					
ANR	1099412	Identifier	dstw		1098684	0					
ANR	1099413	Argument	0		1098684	5					
ANR	1099414	PrimaryExpression	0		1098684	0					
ANR	1099415	Argument	0		1098684	6					
ANR	1099416	PrimaryExpression	0		1098684	0					
ANR	1099417	ReturnStatement	return SLJIT_SUCCESS ;	758:1:24346:24366	1098684	12	True				
ANR	1099418	Identifier	SLJIT_SUCCESS		1098684	0					
ANR	1099419	ReturnType	static sljit_si		1098684	1					
ANR	1099420	Identifier	emit_op		1098684	2					
ANR	1099421	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1098684	3					
ANR	1099422	Parameter	struct sljit_compiler * compiler	632:24:20835:20865	1098684	0	True				
ANR	1099423	ParameterType	struct sljit_compiler *		1098684	0					
ANR	1099424	Identifier	compiler		1098684	1					
ANR	1099425	Parameter	sljit_si op	632:57:20868:20878	1098684	1	True				
ANR	1099426	ParameterType	sljit_si		1098684	0					
ANR	1099427	Identifier	op		1098684	1					
ANR	1099428	Parameter	sljit_si flags	632:70:20881:20894	1098684	2	True				
ANR	1099429	ParameterType	sljit_si		1098684	0					
ANR	1099430	Identifier	flags		1098684	1					
ANR	1099431	Parameter	sljit_si dst	633:1:20898:20909	1098684	3	True				
ANR	1099432	ParameterType	sljit_si		1098684	0					
ANR	1099433	Identifier	dst		1098684	1					
ANR	1099434	Parameter	sljit_sw dstw	633:15:20912:20924	1098684	4	True				
ANR	1099435	ParameterType	sljit_sw		1098684	0					
ANR	1099436	Identifier	dstw		1098684	1					
ANR	1099437	Parameter	sljit_si src1	634:1:20928:20940	1098684	5	True				
ANR	1099438	ParameterType	sljit_si		1098684	0					
ANR	1099439	Identifier	src1		1098684	1					
ANR	1099440	Parameter	sljit_sw src1w	634:16:20943:20956	1098684	6	True				
ANR	1099441	ParameterType	sljit_sw		1098684	0					
ANR	1099442	Identifier	src1w		1098684	1					
ANR	1099443	Parameter	sljit_si src2	635:1:20960:20972	1098684	7	True				
ANR	1099444	ParameterType	sljit_si		1098684	0					
ANR	1099445	Identifier	src2		1098684	1					
ANR	1099446	Parameter	sljit_sw src2w	635:16:20975:20988	1098684	8	True				
ANR	1099447	ParameterType	sljit_sw		1098684	0					
ANR	1099448	Identifier	src2w		1098684	1					
ANR	1099449	CFGEntryNode	ENTRY		1098684		True				
ANR	1099450	CFGExitNode	EXIT		1098684		True				
ANR	1099451	Symbol	SLOW_SRC2		1098684						
ANR	1099452	Symbol	TMP_REG2		1098684						
ANR	1099453	Symbol	compiler -> cache_argw		1098684						
ANR	1099454	Symbol	TMP_REG1		1098684						
ANR	1099455	Symbol	src1w		1098684						
ANR	1099456	Symbol	dst		1098684						
ANR	1099457	Symbol	IMM_OP		1098684						
ANR	1099458	Symbol	LOAD_DATA		1098684						
ANR	1099459	Symbol	SLJIT_MOV		1098684						
ANR	1099460	Symbol	SLOW_DEST		1098684						
ANR	1099461	Symbol	SLJIT_MEM		1098684						
ANR	1099462	Symbol	CUMULATIVE_OP		1098684						
ANR	1099463	Symbol	SLOW_SRC1		1098684						
ANR	1099464	Symbol	flags		1098684						
ANR	1099465	Symbol	SLJIT_MOVU_SI		1098684						
ANR	1099466	Symbol	* compiler		1098684						
ANR	1099467	Symbol	SIMM_MAX		1098684						
ANR	1099468	Symbol	sugg_src2_r		1098684						
ANR	1099469	Symbol	ARG_TEST		1098684						
ANR	1099470	Symbol	dst_r		1098684						
ANR	1099471	Symbol	SLJIT_IMM		1098684						
ANR	1099472	Symbol	load_immediate		1098684						
ANR	1099473	Symbol	getput_arg		1098684						
ANR	1099474	Symbol	SRC2_IMM		1098684						
ANR	1099475	Symbol	compiler		1098684						
ANR	1099476	Symbol	SIMM_MIN		1098684						
ANR	1099477	Symbol	src2w		1098684						
ANR	1099478	Symbol	can_cache		1098684						
ANR	1099479	Symbol	op		1098684						
ANR	1099480	Symbol	FAST_IS_REG		1098684						
ANR	1099481	Symbol	compiler -> cache_arg		1098684						
ANR	1099482	Symbol	REG2_SOURCE		1098684						
ANR	1099483	Symbol	SLJIT_SUCCESS		1098684						
ANR	1099484	Symbol	src2_r		1098684						
ANR	1099485	Symbol	src1_r		1098684						
ANR	1099486	Symbol	SLJIT_UNUSED		1098684						
ANR	1099487	Symbol	src1		1098684						
ANR	1099488	Symbol	emit_single_op		1098684						
ANR	1099489	Symbol	src2		1098684						
ANR	1099490	Symbol	REG_DEST		1098684						
ANR	1099491	Symbol	getput_arg_fast		1098684						
ANR	1099492	Symbol	dstw		1098684						
ANR	1099493	Symbol	ALT_KEEP_CACHE		1098684						
ANR	1099494	Symbol	compiler -> error		1098684						
ANR	1099495	Symbol	SLJIT_UNLIKELY		1098684						
ANR	1099496	Function	sljit_emit_op0	761:0:24371:26120							
ANR	1099497	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1099496	0					
ANR	1099498	CompoundStatement		762:0:24466:26120	1099496	0					
ANR	1099499	ExpressionStatement	CHECK_ERROR ( )	763:1:24469:24482	1099496	0	True				
ANR	1099500	CallExpression	CHECK_ERROR ( )		1099496	0					
ANR	1099501	Callee	CHECK_ERROR		1099496	0					
ANR	1099502	Identifier	CHECK_ERROR		1099496	0					
ANR	1099503	ArgumentList			1099496	1					
ANR	1099504	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	764:1:24485:24526	1099496	1	True				
ANR	1099505	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1099496	0					
ANR	1099506	Callee	CHECK		1099496	0					
ANR	1099507	Identifier	CHECK		1099496	0					
ANR	1099508	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1099496	1					
ANR	1099509	Argument	"check_sljit_emit_op0 ( compiler , op )"		1099496	0					
ANR	1099510	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1099496	0					
ANR	1099511	Callee	check_sljit_emit_op0		1099496	0					
ANR	1099512	Identifier	check_sljit_emit_op0		1099496	0					
ANR	1099513	ArgumentList	compiler		1099496	1					
ANR	1099514	Argument	compiler		1099496	0					
ANR	1099515	Identifier	compiler		1099496	0					
ANR	1099516	Argument	op		1099496	1					
ANR	1099517	Identifier	op		1099496	0					
ANR	1099518	ExpressionStatement	op = GET_OPCODE ( op )	766:1:24530:24549	1099496	2	True				
ANR	1099519	AssignmentExpression	op = GET_OPCODE ( op )		1099496	0		=			
ANR	1099520	Identifier	op		1099496	0					
ANR	1099521	CallExpression	GET_OPCODE ( op )		1099496	1					
ANR	1099522	Callee	GET_OPCODE		1099496	0					
ANR	1099523	Identifier	GET_OPCODE		1099496	0					
ANR	1099524	ArgumentList	op		1099496	1					
ANR	1099525	Argument	op		1099496	0					
ANR	1099526	Identifier	op		1099496	0					
ANR	1099527	SwitchStatement	switch ( op )		1099496	3					
ANR	1099528	Condition	op	767:9:24560:24561	1099496	0	True				
ANR	1099529	Identifier	op		1099496	0					
ANR	1099530	CompoundStatement		6:13:97:97	1099496	1					
ANR	1099531	Label	case SLJIT_BREAKPOINT :	768:1:24567:24588	1099496	0	True				
ANR	1099532	Identifier	SLJIT_BREAKPOINT		1099496	0					
ANR	1099533	ReturnStatement	"return push_inst ( compiler , TA , UNMOVABLE_INS ) ;"	769:2:24592:24637	1099496	1	True				
ANR	1099534	CallExpression	"push_inst ( compiler , TA , UNMOVABLE_INS )"		1099496	0					
ANR	1099535	Callee	push_inst		1099496	0					
ANR	1099536	Identifier	push_inst		1099496	0					
ANR	1099537	ArgumentList	compiler		1099496	1					
ANR	1099538	Argument	compiler		1099496	0					
ANR	1099539	Identifier	compiler		1099496	0					
ANR	1099540	Argument	TA		1099496	1					
ANR	1099541	Identifier	TA		1099496	0					
ANR	1099542	Argument	UNMOVABLE_INS		1099496	2					
ANR	1099543	Identifier	UNMOVABLE_INS		1099496	0					
ANR	1099544	Label	case SLJIT_NOP :	770:1:24640:24654	1099496	2	True				
ANR	1099545	Identifier	SLJIT_NOP		1099496	0					
ANR	1099546	ReturnStatement	"return push_inst ( compiler , NOP , UNMOVABLE_INS ) ;"	771:2:24658:24704	1099496	3	True				
ANR	1099547	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1099496	0					
ANR	1099548	Callee	push_inst		1099496	0					
ANR	1099549	Identifier	push_inst		1099496	0					
ANR	1099550	ArgumentList	compiler		1099496	1					
ANR	1099551	Argument	compiler		1099496	0					
ANR	1099552	Identifier	compiler		1099496	0					
ANR	1099553	Argument	NOP		1099496	1					
ANR	1099554	Identifier	NOP		1099496	0					
ANR	1099555	Argument	UNMOVABLE_INS		1099496	2					
ANR	1099556	Identifier	UNMOVABLE_INS		1099496	0					
ANR	1099557	Label	case SLJIT_LUMUL :	772:1:24707:24723	1099496	4	True				
ANR	1099558	Identifier	SLJIT_LUMUL		1099496	0					
ANR	1099559	Label	case SLJIT_LSMUL :	773:1:24726:24742	1099496	5	True				
ANR	1099560	Identifier	SLJIT_LSMUL		1099496	0					
ANR	1099561	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) ) )"	775:2:24807:24928	1099496	6	True				
ANR	1099562	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) ) )"		1099496	0					
ANR	1099563	Callee	FAIL_IF		1099496	0					
ANR	1099564	Identifier	FAIL_IF		1099496	0					
ANR	1099565	ArgumentList	"push_inst ( compiler , ( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	1					
ANR	1099566	Argument	"push_inst ( compiler , ( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	0					
ANR	1099567	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	0					
ANR	1099568	Callee	push_inst		1099496	0					
ANR	1099569	Identifier	push_inst		1099496	0					
ANR	1099570	ArgumentList	compiler		1099496	1					
ANR	1099571	Argument	compiler		1099496	0					
ANR	1099572	Identifier	compiler		1099496	0					
ANR	1099573	Argument	( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1					
ANR	1099574	InclusiveOrExpression	( op == SLJIT_LUMUL ? UMUL : SMUL ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	0		|			
ANR	1099575	ConditionalExpression	op == SLJIT_LUMUL ? UMUL : SMUL		1099496	0					
ANR	1099576	Condition	op == SLJIT_LUMUL		1099496	0					
ANR	1099577	EqualityExpression	op == SLJIT_LUMUL		1099496	0		==			
ANR	1099578	Identifier	op		1099496	0					
ANR	1099579	Identifier	SLJIT_LUMUL		1099496	1					
ANR	1099580	Identifier	UMUL		1099496	1					
ANR	1099581	Identifier	SMUL		1099496	2					
ANR	1099582	InclusiveOrExpression	D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099583	CallExpression	D ( SLJIT_R0 )		1099496	0					
ANR	1099584	Callee	D		1099496	0					
ANR	1099585	Identifier	D		1099496	0					
ANR	1099586	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099587	Argument	SLJIT_R0		1099496	0					
ANR	1099588	Identifier	SLJIT_R0		1099496	0					
ANR	1099589	InclusiveOrExpression	S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099590	CallExpression	S1 ( SLJIT_R0 )		1099496	0					
ANR	1099591	Callee	S1		1099496	0					
ANR	1099592	Identifier	S1		1099496	0					
ANR	1099593	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099594	Argument	SLJIT_R0		1099496	0					
ANR	1099595	Identifier	SLJIT_R0		1099496	0					
ANR	1099596	CallExpression	S2 ( SLJIT_R1 )		1099496	1					
ANR	1099597	Callee	S2		1099496	0					
ANR	1099598	Identifier	S2		1099496	0					
ANR	1099599	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099600	Argument	SLJIT_R1		1099496	0					
ANR	1099601	Identifier	SLJIT_R1		1099496	0					
ANR	1099602	Argument	DR ( SLJIT_R0 )		1099496	2					
ANR	1099603	CallExpression	DR ( SLJIT_R0 )		1099496	0					
ANR	1099604	Callee	DR		1099496	0					
ANR	1099605	Identifier	DR		1099496	0					
ANR	1099606	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099607	Argument	SLJIT_R0		1099496	0					
ANR	1099608	Identifier	SLJIT_R0		1099496	0					
ANR	1099609	ReturnStatement	"return push_inst ( compiler , RDY | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) ;"	776:2:24932:24991	1099496	7	True				
ANR	1099610	CallExpression	"push_inst ( compiler , RDY | D ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1099496	0					
ANR	1099611	Callee	push_inst		1099496	0					
ANR	1099612	Identifier	push_inst		1099496	0					
ANR	1099613	ArgumentList	compiler		1099496	1					
ANR	1099614	Argument	compiler		1099496	0					
ANR	1099615	Identifier	compiler		1099496	0					
ANR	1099616	Argument	RDY | D ( SLJIT_R1 )		1099496	1					
ANR	1099617	InclusiveOrExpression	RDY | D ( SLJIT_R1 )		1099496	0		|			
ANR	1099618	Identifier	RDY		1099496	0					
ANR	1099619	CallExpression	D ( SLJIT_R1 )		1099496	1					
ANR	1099620	Callee	D		1099496	0					
ANR	1099621	Identifier	D		1099496	0					
ANR	1099622	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099623	Argument	SLJIT_R1		1099496	0					
ANR	1099624	Identifier	SLJIT_R1		1099496	0					
ANR	1099625	Argument	DR ( SLJIT_R1 )		1099496	2					
ANR	1099626	CallExpression	DR ( SLJIT_R1 )		1099496	0					
ANR	1099627	Callee	DR		1099496	0					
ANR	1099628	Identifier	DR		1099496	0					
ANR	1099629	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099630	Argument	SLJIT_R1		1099496	0					
ANR	1099631	Identifier	SLJIT_R1		1099496	0					
ANR	1099632	Label	case SLJIT_UDIVMOD :	780:1:25040:25058	1099496	8	True				
ANR	1099633	Identifier	SLJIT_UDIVMOD		1099496	0					
ANR	1099634	Label	case SLJIT_SDIVMOD :	781:1:25061:25079	1099496	9	True				
ANR	1099635	Identifier	SLJIT_SDIVMOD		1099496	0					
ANR	1099636	Label	case SLJIT_UDIVI :	782:1:25082:25098	1099496	10	True				
ANR	1099637	Identifier	SLJIT_UDIVI		1099496	0					
ANR	1099638	Label	case SLJIT_SDIVI :	783:1:25101:25117	1099496	11	True				
ANR	1099639	Identifier	SLJIT_SDIVI		1099496	0					
ANR	1099640	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"	784:2:25121:25235	1099496	12	True				
ANR	1099641	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD , bad_div_opcode_assignments )"		1099496	0					
ANR	1099642	Callee	SLJIT_COMPILE_ASSERT		1099496	0					
ANR	1099643	Identifier	SLJIT_COMPILE_ASSERT		1099496	0					
ANR	1099644	ArgumentList	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1099496	1					
ANR	1099645	Argument	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1099496	0					
ANR	1099646	AndExpression	( SLJIT_UDIVMOD & 0x2 ) == 0 && SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1099496	0		&&			
ANR	1099647	EqualityExpression	( SLJIT_UDIVMOD & 0x2 ) == 0		1099496	0		==			
ANR	1099648	BitAndExpression	SLJIT_UDIVMOD & 0x2		1099496	0		&			
ANR	1099649	Identifier	SLJIT_UDIVMOD		1099496	0					
ANR	1099650	PrimaryExpression	0x2		1099496	1					
ANR	1099651	PrimaryExpression	0		1099496	1					
ANR	1099652	EqualityExpression	SLJIT_UDIVI - 0x2 == SLJIT_UDIVMOD		1099496	1		==			
ANR	1099653	AdditiveExpression	SLJIT_UDIVI - 0x2		1099496	0		-			
ANR	1099654	Identifier	SLJIT_UDIVI		1099496	0					
ANR	1099655	PrimaryExpression	0x2		1099496	1					
ANR	1099656	Identifier	SLJIT_UDIVMOD		1099496	1					
ANR	1099657	Argument	bad_div_opcode_assignments		1099496	1					
ANR	1099658	Identifier	bad_div_opcode_assignments		1099496	0					
ANR	1099659	IfStatement	if ( ( op | 0x2 ) == SLJIT_UDIVI )		1099496	13					
ANR	1099660	Condition	( op | 0x2 ) == SLJIT_UDIVI	786:6:25304:25328	1099496	0	True				
ANR	1099661	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1099496	0		==			
ANR	1099662	InclusiveOrExpression	op | 0x2		1099496	0		|			
ANR	1099663	Identifier	op		1099496	0					
ANR	1099664	PrimaryExpression	0x2		1099496	1					
ANR	1099665	Identifier	SLJIT_UDIVI		1099496	1					
ANR	1099666	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , WRY | S1 ( 0 ) , MOVABLE_INS ) )"	787:3:25334:25388	1099496	1	True				
ANR	1099667	CallExpression	"FAIL_IF ( push_inst ( compiler , WRY | S1 ( 0 ) , MOVABLE_INS ) )"		1099496	0					
ANR	1099668	Callee	FAIL_IF		1099496	0					
ANR	1099669	Identifier	FAIL_IF		1099496	0					
ANR	1099670	ArgumentList	"push_inst ( compiler , WRY | S1 ( 0 ) , MOVABLE_INS )"		1099496	1					
ANR	1099671	Argument	"push_inst ( compiler , WRY | S1 ( 0 ) , MOVABLE_INS )"		1099496	0					
ANR	1099672	CallExpression	"push_inst ( compiler , WRY | S1 ( 0 ) , MOVABLE_INS )"		1099496	0					
ANR	1099673	Callee	push_inst		1099496	0					
ANR	1099674	Identifier	push_inst		1099496	0					
ANR	1099675	ArgumentList	compiler		1099496	1					
ANR	1099676	Argument	compiler		1099496	0					
ANR	1099677	Identifier	compiler		1099496	0					
ANR	1099678	Argument	WRY | S1 ( 0 )		1099496	1					
ANR	1099679	InclusiveOrExpression	WRY | S1 ( 0 )		1099496	0		|			
ANR	1099680	Identifier	WRY		1099496	0					
ANR	1099681	CallExpression	S1 ( 0 )		1099496	1					
ANR	1099682	Callee	S1		1099496	0					
ANR	1099683	Identifier	S1		1099496	0					
ANR	1099684	ArgumentList	0		1099496	1					
ANR	1099685	Argument	0		1099496	0					
ANR	1099686	PrimaryExpression	0		1099496	0					
ANR	1099687	Argument	MOVABLE_INS		1099496	2					
ANR	1099688	Identifier	MOVABLE_INS		1099496	0					
ANR	1099689	ElseStatement	else		1099496	0					
ANR	1099690	CompoundStatement		27:7:930:930	1099496	0					
ANR	1099691	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 ) , DR ( TMP_REG1 ) ) )"	789:3:25402:25488	1099496	0	True				
ANR	1099692	CallExpression	"FAIL_IF ( push_inst ( compiler , SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 ) , DR ( TMP_REG1 ) ) )"		1099496	0					
ANR	1099693	Callee	FAIL_IF		1099496	0					
ANR	1099694	Identifier	FAIL_IF		1099496	0					
ANR	1099695	ArgumentList	"push_inst ( compiler , SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 ) , DR ( TMP_REG1 ) )"		1099496	1					
ANR	1099696	Argument	"push_inst ( compiler , SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 ) , DR ( TMP_REG1 ) )"		1099496	0					
ANR	1099697	CallExpression	"push_inst ( compiler , SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 ) , DR ( TMP_REG1 ) )"		1099496	0					
ANR	1099698	Callee	push_inst		1099496	0					
ANR	1099699	Identifier	push_inst		1099496	0					
ANR	1099700	ArgumentList	compiler		1099496	1					
ANR	1099701	Argument	compiler		1099496	0					
ANR	1099702	Identifier	compiler		1099496	0					
ANR	1099703	Argument	SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 )		1099496	1					
ANR	1099704	InclusiveOrExpression	SRA | D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 )		1099496	0		|			
ANR	1099705	Identifier	SRA		1099496	0					
ANR	1099706	InclusiveOrExpression	D ( TMP_REG1 ) | S1 ( SLJIT_R0 ) | IMM ( 31 )		1099496	1		|			
ANR	1099707	CallExpression	D ( TMP_REG1 )		1099496	0					
ANR	1099708	Callee	D		1099496	0					
ANR	1099709	Identifier	D		1099496	0					
ANR	1099710	ArgumentList	TMP_REG1		1099496	1					
ANR	1099711	Argument	TMP_REG1		1099496	0					
ANR	1099712	Identifier	TMP_REG1		1099496	0					
ANR	1099713	InclusiveOrExpression	S1 ( SLJIT_R0 ) | IMM ( 31 )		1099496	1		|			
ANR	1099714	CallExpression	S1 ( SLJIT_R0 )		1099496	0					
ANR	1099715	Callee	S1		1099496	0					
ANR	1099716	Identifier	S1		1099496	0					
ANR	1099717	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099718	Argument	SLJIT_R0		1099496	0					
ANR	1099719	Identifier	SLJIT_R0		1099496	0					
ANR	1099720	CallExpression	IMM ( 31 )		1099496	1					
ANR	1099721	Callee	IMM		1099496	0					
ANR	1099722	Identifier	IMM		1099496	0					
ANR	1099723	ArgumentList	31		1099496	1					
ANR	1099724	Argument	31		1099496	0					
ANR	1099725	PrimaryExpression	31		1099496	0					
ANR	1099726	Argument	DR ( TMP_REG1 )		1099496	2					
ANR	1099727	CallExpression	DR ( TMP_REG1 )		1099496	0					
ANR	1099728	Callee	DR		1099496	0					
ANR	1099729	Identifier	DR		1099496	0					
ANR	1099730	ArgumentList	TMP_REG1		1099496	1					
ANR	1099731	Argument	TMP_REG1		1099496	0					
ANR	1099732	Identifier	TMP_REG1		1099496	0					
ANR	1099733	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , WRY | S1 ( TMP_REG1 ) , MOVABLE_INS ) )"	790:3:25493:25554	1099496	1	True				
ANR	1099734	CallExpression	"FAIL_IF ( push_inst ( compiler , WRY | S1 ( TMP_REG1 ) , MOVABLE_INS ) )"		1099496	0					
ANR	1099735	Callee	FAIL_IF		1099496	0					
ANR	1099736	Identifier	FAIL_IF		1099496	0					
ANR	1099737	ArgumentList	"push_inst ( compiler , WRY | S1 ( TMP_REG1 ) , MOVABLE_INS )"		1099496	1					
ANR	1099738	Argument	"push_inst ( compiler , WRY | S1 ( TMP_REG1 ) , MOVABLE_INS )"		1099496	0					
ANR	1099739	CallExpression	"push_inst ( compiler , WRY | S1 ( TMP_REG1 ) , MOVABLE_INS )"		1099496	0					
ANR	1099740	Callee	push_inst		1099496	0					
ANR	1099741	Identifier	push_inst		1099496	0					
ANR	1099742	ArgumentList	compiler		1099496	1					
ANR	1099743	Argument	compiler		1099496	0					
ANR	1099744	Identifier	compiler		1099496	0					
ANR	1099745	Argument	WRY | S1 ( TMP_REG1 )		1099496	1					
ANR	1099746	InclusiveOrExpression	WRY | S1 ( TMP_REG1 )		1099496	0		|			
ANR	1099747	Identifier	WRY		1099496	0					
ANR	1099748	CallExpression	S1 ( TMP_REG1 )		1099496	1					
ANR	1099749	Callee	S1		1099496	0					
ANR	1099750	Identifier	S1		1099496	0					
ANR	1099751	ArgumentList	TMP_REG1		1099496	1					
ANR	1099752	Argument	TMP_REG1		1099496	0					
ANR	1099753	Identifier	TMP_REG1		1099496	0					
ANR	1099754	Argument	MOVABLE_INS		1099496	2					
ANR	1099755	Identifier	MOVABLE_INS		1099496	0					
ANR	1099756	IfStatement	if ( op <= SLJIT_SDIVMOD )		1099496	14					
ANR	1099757	Condition	op <= SLJIT_SDIVMOD	792:6:25566:25584	1099496	0	True				
ANR	1099758	RelationalExpression	op <= SLJIT_SDIVMOD		1099496	0		<=			
ANR	1099759	Identifier	op		1099496	0					
ANR	1099760	Identifier	SLJIT_SDIVMOD		1099496	1					
ANR	1099761	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 ) , DR ( TMP_REG2 ) ) )"	793:3:25590:25673	1099496	1	True				
ANR	1099762	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 ) , DR ( TMP_REG2 ) ) )"		1099496	0					
ANR	1099763	Callee	FAIL_IF		1099496	0					
ANR	1099764	Identifier	FAIL_IF		1099496	0					
ANR	1099765	ArgumentList	"push_inst ( compiler , OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 ) , DR ( TMP_REG2 ) )"		1099496	1					
ANR	1099766	Argument	"push_inst ( compiler , OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 ) , DR ( TMP_REG2 ) )"		1099496	0					
ANR	1099767	CallExpression	"push_inst ( compiler , OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 ) , DR ( TMP_REG2 ) )"		1099496	0					
ANR	1099768	Callee	push_inst		1099496	0					
ANR	1099769	Identifier	push_inst		1099496	0					
ANR	1099770	ArgumentList	compiler		1099496	1					
ANR	1099771	Argument	compiler		1099496	0					
ANR	1099772	Identifier	compiler		1099496	0					
ANR	1099773	Argument	OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 )		1099496	1					
ANR	1099774	InclusiveOrExpression	OR | D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 )		1099496	0		|			
ANR	1099775	Identifier	OR		1099496	0					
ANR	1099776	InclusiveOrExpression	D ( TMP_REG2 ) | S1 ( 0 ) | S2 ( SLJIT_R0 )		1099496	1		|			
ANR	1099777	CallExpression	D ( TMP_REG2 )		1099496	0					
ANR	1099778	Callee	D		1099496	0					
ANR	1099779	Identifier	D		1099496	0					
ANR	1099780	ArgumentList	TMP_REG2		1099496	1					
ANR	1099781	Argument	TMP_REG2		1099496	0					
ANR	1099782	Identifier	TMP_REG2		1099496	0					
ANR	1099783	InclusiveOrExpression	S1 ( 0 ) | S2 ( SLJIT_R0 )		1099496	1		|			
ANR	1099784	CallExpression	S1 ( 0 )		1099496	0					
ANR	1099785	Callee	S1		1099496	0					
ANR	1099786	Identifier	S1		1099496	0					
ANR	1099787	ArgumentList	0		1099496	1					
ANR	1099788	Argument	0		1099496	0					
ANR	1099789	PrimaryExpression	0		1099496	0					
ANR	1099790	CallExpression	S2 ( SLJIT_R0 )		1099496	1					
ANR	1099791	Callee	S2		1099496	0					
ANR	1099792	Identifier	S2		1099496	0					
ANR	1099793	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099794	Argument	SLJIT_R0		1099496	0					
ANR	1099795	Identifier	SLJIT_R0		1099496	0					
ANR	1099796	Argument	DR ( TMP_REG2 )		1099496	2					
ANR	1099797	CallExpression	DR ( TMP_REG2 )		1099496	0					
ANR	1099798	Callee	DR		1099496	0					
ANR	1099799	Identifier	DR		1099496	0					
ANR	1099800	ArgumentList	TMP_REG2		1099496	1					
ANR	1099801	Argument	TMP_REG2		1099496	0					
ANR	1099802	Identifier	TMP_REG2		1099496	0					
ANR	1099803	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) ) )"	794:2:25677:25806	1099496	15	True				
ANR	1099804	CallExpression	"FAIL_IF ( push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) ) )"		1099496	0					
ANR	1099805	Callee	FAIL_IF		1099496	0					
ANR	1099806	Identifier	FAIL_IF		1099496	0					
ANR	1099807	ArgumentList	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	1					
ANR	1099808	Argument	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	0					
ANR	1099809	CallExpression	"push_inst ( compiler , ( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R0 ) )"		1099496	0					
ANR	1099810	Callee	push_inst		1099496	0					
ANR	1099811	Identifier	push_inst		1099496	0					
ANR	1099812	ArgumentList	compiler		1099496	1					
ANR	1099813	Argument	compiler		1099496	0					
ANR	1099814	Identifier	compiler		1099496	0					
ANR	1099815	Argument	( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1					
ANR	1099816	InclusiveOrExpression	( ( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV ) | D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	0		|			
ANR	1099817	ConditionalExpression	( op | 0x2 ) == SLJIT_UDIVI ? UDIV : SDIV		1099496	0					
ANR	1099818	Condition	( op | 0x2 ) == SLJIT_UDIVI		1099496	0					
ANR	1099819	EqualityExpression	( op | 0x2 ) == SLJIT_UDIVI		1099496	0		==			
ANR	1099820	InclusiveOrExpression	op | 0x2		1099496	0		|			
ANR	1099821	Identifier	op		1099496	0					
ANR	1099822	PrimaryExpression	0x2		1099496	1					
ANR	1099823	Identifier	SLJIT_UDIVI		1099496	1					
ANR	1099824	Identifier	UDIV		1099496	1					
ANR	1099825	Identifier	SDIV		1099496	2					
ANR	1099826	InclusiveOrExpression	D ( SLJIT_R0 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099827	CallExpression	D ( SLJIT_R0 )		1099496	0					
ANR	1099828	Callee	D		1099496	0					
ANR	1099829	Identifier	D		1099496	0					
ANR	1099830	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099831	Argument	SLJIT_R0		1099496	0					
ANR	1099832	Identifier	SLJIT_R0		1099496	0					
ANR	1099833	InclusiveOrExpression	S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099834	CallExpression	S1 ( SLJIT_R0 )		1099496	0					
ANR	1099835	Callee	S1		1099496	0					
ANR	1099836	Identifier	S1		1099496	0					
ANR	1099837	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099838	Argument	SLJIT_R0		1099496	0					
ANR	1099839	Identifier	SLJIT_R0		1099496	0					
ANR	1099840	CallExpression	S2 ( SLJIT_R1 )		1099496	1					
ANR	1099841	Callee	S2		1099496	0					
ANR	1099842	Identifier	S2		1099496	0					
ANR	1099843	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099844	Argument	SLJIT_R1		1099496	0					
ANR	1099845	Identifier	SLJIT_R1		1099496	0					
ANR	1099846	Argument	DR ( SLJIT_R0 )		1099496	2					
ANR	1099847	CallExpression	DR ( SLJIT_R0 )		1099496	0					
ANR	1099848	Callee	DR		1099496	0					
ANR	1099849	Identifier	DR		1099496	0					
ANR	1099850	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099851	Argument	SLJIT_R0		1099496	0					
ANR	1099852	Identifier	SLJIT_R0		1099496	0					
ANR	1099853	IfStatement	if ( op >= SLJIT_UDIVI )		1099496	16					
ANR	1099854	Condition	op >= SLJIT_UDIVI	795:6:25814:25830	1099496	0	True				
ANR	1099855	RelationalExpression	op >= SLJIT_UDIVI		1099496	0		>=			
ANR	1099856	Identifier	op		1099496	0					
ANR	1099857	Identifier	SLJIT_UDIVI		1099496	1					
ANR	1099858	ReturnStatement	return SLJIT_SUCCESS ;	796:3:25836:25856	1099496	1	True				
ANR	1099859	Identifier	SLJIT_SUCCESS		1099496	0					
ANR	1099860	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) )"	797:2:25860:25952	1099496	17	True				
ANR	1099861	CallExpression	"FAIL_IF ( push_inst ( compiler , SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) )"		1099496	0					
ANR	1099862	Callee	FAIL_IF		1099496	0					
ANR	1099863	Identifier	FAIL_IF		1099496	0					
ANR	1099864	ArgumentList	"push_inst ( compiler , SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1099496	1					
ANR	1099865	Argument	"push_inst ( compiler , SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1099496	0					
ANR	1099866	CallExpression	"push_inst ( compiler , SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1099496	0					
ANR	1099867	Callee	push_inst		1099496	0					
ANR	1099868	Identifier	push_inst		1099496	0					
ANR	1099869	ArgumentList	compiler		1099496	1					
ANR	1099870	Argument	compiler		1099496	0					
ANR	1099871	Identifier	compiler		1099496	0					
ANR	1099872	Argument	SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1					
ANR	1099873	InclusiveOrExpression	SMUL | D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	0		|			
ANR	1099874	Identifier	SMUL		1099496	0					
ANR	1099875	InclusiveOrExpression	D ( SLJIT_R1 ) | S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099876	CallExpression	D ( SLJIT_R1 )		1099496	0					
ANR	1099877	Callee	D		1099496	0					
ANR	1099878	Identifier	D		1099496	0					
ANR	1099879	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099880	Argument	SLJIT_R1		1099496	0					
ANR	1099881	Identifier	SLJIT_R1		1099496	0					
ANR	1099882	InclusiveOrExpression	S1 ( SLJIT_R0 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099883	CallExpression	S1 ( SLJIT_R0 )		1099496	0					
ANR	1099884	Callee	S1		1099496	0					
ANR	1099885	Identifier	S1		1099496	0					
ANR	1099886	ArgumentList	SLJIT_R0		1099496	1					
ANR	1099887	Argument	SLJIT_R0		1099496	0					
ANR	1099888	Identifier	SLJIT_R0		1099496	0					
ANR	1099889	CallExpression	S2 ( SLJIT_R1 )		1099496	1					
ANR	1099890	Callee	S2		1099496	0					
ANR	1099891	Identifier	S2		1099496	0					
ANR	1099892	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099893	Argument	SLJIT_R1		1099496	0					
ANR	1099894	Identifier	SLJIT_R1		1099496	0					
ANR	1099895	Argument	DR ( SLJIT_R1 )		1099496	2					
ANR	1099896	CallExpression	DR ( SLJIT_R1 )		1099496	0					
ANR	1099897	Callee	DR		1099496	0					
ANR	1099898	Identifier	DR		1099496	0					
ANR	1099899	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099900	Argument	SLJIT_R1		1099496	0					
ANR	1099901	Identifier	SLJIT_R1		1099496	0					
ANR	1099902	ReturnStatement	"return push_inst ( compiler , SUB | D ( SLJIT_R1 ) | S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) ) ;"	798:2:25956:26045	1099496	18	True				
ANR	1099903	CallExpression	"push_inst ( compiler , SUB | D ( SLJIT_R1 ) | S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 ) , DR ( SLJIT_R1 ) )"		1099496	0					
ANR	1099904	Callee	push_inst		1099496	0					
ANR	1099905	Identifier	push_inst		1099496	0					
ANR	1099906	ArgumentList	compiler		1099496	1					
ANR	1099907	Argument	compiler		1099496	0					
ANR	1099908	Identifier	compiler		1099496	0					
ANR	1099909	Argument	SUB | D ( SLJIT_R1 ) | S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 )		1099496	1					
ANR	1099910	InclusiveOrExpression	SUB | D ( SLJIT_R1 ) | S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 )		1099496	0		|			
ANR	1099911	Identifier	SUB		1099496	0					
ANR	1099912	InclusiveOrExpression	D ( SLJIT_R1 ) | S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099913	CallExpression	D ( SLJIT_R1 )		1099496	0					
ANR	1099914	Callee	D		1099496	0					
ANR	1099915	Identifier	D		1099496	0					
ANR	1099916	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099917	Argument	SLJIT_R1		1099496	0					
ANR	1099918	Identifier	SLJIT_R1		1099496	0					
ANR	1099919	InclusiveOrExpression	S1 ( TMP_REG2 ) | S2 ( SLJIT_R1 )		1099496	1		|			
ANR	1099920	CallExpression	S1 ( TMP_REG2 )		1099496	0					
ANR	1099921	Callee	S1		1099496	0					
ANR	1099922	Identifier	S1		1099496	0					
ANR	1099923	ArgumentList	TMP_REG2		1099496	1					
ANR	1099924	Argument	TMP_REG2		1099496	0					
ANR	1099925	Identifier	TMP_REG2		1099496	0					
ANR	1099926	CallExpression	S2 ( SLJIT_R1 )		1099496	1					
ANR	1099927	Callee	S2		1099496	0					
ANR	1099928	Identifier	S2		1099496	0					
ANR	1099929	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099930	Argument	SLJIT_R1		1099496	0					
ANR	1099931	Identifier	SLJIT_R1		1099496	0					
ANR	1099932	Argument	DR ( SLJIT_R1 )		1099496	2					
ANR	1099933	CallExpression	DR ( SLJIT_R1 )		1099496	0					
ANR	1099934	Callee	DR		1099496	0					
ANR	1099935	Identifier	DR		1099496	0					
ANR	1099936	ArgumentList	SLJIT_R1		1099496	1					
ANR	1099937	Argument	SLJIT_R1		1099496	0					
ANR	1099938	Identifier	SLJIT_R1		1099496	0					
ANR	1099939	ReturnStatement	return SLJIT_SUCCESS ;	804:1:26098:26118	1099496	4	True				
ANR	1099940	Identifier	SLJIT_SUCCESS		1099496	0					
ANR	1099941	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1099496	1					
ANR	1099942	Identifier	sljit_emit_op0		1099496	2					
ANR	1099943	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1099496	3					
ANR	1099944	Parameter	struct sljit_compiler * compiler	761:49:24420:24450	1099496	0	True				
ANR	1099945	ParameterType	struct sljit_compiler *		1099496	0					
ANR	1099946	Identifier	compiler		1099496	1					
ANR	1099947	Parameter	sljit_si op	761:82:24453:24463	1099496	1	True				
ANR	1099948	ParameterType	sljit_si		1099496	0					
ANR	1099949	Identifier	op		1099496	1					
ANR	1099950	CFGEntryNode	ENTRY		1099496		True				
ANR	1099951	CFGExitNode	EXIT		1099496		True				
ANR	1099952	Symbol	TMP_REG2		1099496						
ANR	1099953	Symbol	TMP_REG1		1099496						
ANR	1099954	Symbol	SRA		1099496						
ANR	1099955	Symbol	D		1099496						
ANR	1099956	Symbol	SLJIT_SDIVMOD		1099496						
ANR	1099957	Symbol	SLJIT_LUMUL		1099496						
ANR	1099958	Symbol	UMUL		1099496						
ANR	1099959	Symbol	SLJIT_R1		1099496						
ANR	1099960	Symbol	DR		1099496						
ANR	1099961	Symbol	bad_div_opcode_assignments		1099496						
ANR	1099962	Symbol	GET_OPCODE		1099496						
ANR	1099963	Symbol	SLJIT_R0		1099496						
ANR	1099964	Symbol	SLJIT_UDIVMOD		1099496						
ANR	1099965	Symbol	SMUL		1099496						
ANR	1099966	Symbol	SDIV		1099496						
ANR	1099967	Symbol	UDIV		1099496						
ANR	1099968	Symbol	compiler		1099496						
ANR	1099969	Symbol	WRY		1099496						
ANR	1099970	Symbol	op		1099496						
ANR	1099971	Symbol	push_inst		1099496						
ANR	1099972	Symbol	SUB		1099496						
ANR	1099973	Symbol	OR		1099496						
ANR	1099974	Symbol	check_sljit_emit_op0		1099496						
ANR	1099975	Symbol	RDY		1099496						
ANR	1099976	Symbol	UNMOVABLE_INS		1099496						
ANR	1099977	Symbol	IMM		1099496						
ANR	1099978	Symbol	SLJIT_SUCCESS		1099496						
ANR	1099979	Symbol	TA		1099496						
ANR	1099980	Symbol	SLJIT_UDIVI		1099496						
ANR	1099981	Symbol	NOP		1099496						
ANR	1099982	Symbol	MOVABLE_INS		1099496						
ANR	1099983	Symbol	S1		1099496						
ANR	1099984	Symbol	S2		1099496						
ANR	1099985	Function	sljit_emit_op1	807:0:26123:28899							
ANR	1099986	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1099985	0					
ANR	1099987	CompoundStatement		810:0:26278:28899	1099985	0					
ANR	1099988	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? SET_FLAGS : 0 ;	811:1:26281:26327	1099985	0	True				
ANR	1099989	IdentifierDecl	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1099985	0					
ANR	1099990	IdentifierDeclType	sljit_si		1099985	0					
ANR	1099991	Identifier	flags		1099985	1					
ANR	1099992	AssignmentExpression	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1099985	2		=			
ANR	1099993	Identifier	flags		1099985	0					
ANR	1099994	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1099985	1					
ANR	1099995	Condition	GET_FLAGS ( op )		1099985	0					
ANR	1099996	CallExpression	GET_FLAGS ( op )		1099985	0					
ANR	1099997	Callee	GET_FLAGS		1099985	0					
ANR	1099998	Identifier	GET_FLAGS		1099985	0					
ANR	1099999	ArgumentList	op		1099985	1					
ANR	1100000	Argument	op		1099985	0					
ANR	1100001	Identifier	op		1099985	0					
ANR	1100002	Identifier	SET_FLAGS		1099985	1					
ANR	1100003	PrimaryExpression	0		1099985	2					
ANR	1100004	ExpressionStatement	CHECK_ERROR ( )	813:1:26331:26344	1099985	1	True				
ANR	1100005	CallExpression	CHECK_ERROR ( )		1099985	0					
ANR	1100006	Callee	CHECK_ERROR		1099985	0					
ANR	1100007	Identifier	CHECK_ERROR		1099985	0					
ANR	1100008	ArgumentList			1099985	1					
ANR	1100009	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	814:1:26347:26410	1099985	2	True				
ANR	1100010	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1099985	0					
ANR	1100011	Callee	CHECK		1099985	0					
ANR	1100012	Identifier	CHECK		1099985	0					
ANR	1100013	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1099985	1					
ANR	1100014	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1099985	0					
ANR	1100015	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1099985	0					
ANR	1100016	Callee	check_sljit_emit_op1		1099985	0					
ANR	1100017	Identifier	check_sljit_emit_op1		1099985	0					
ANR	1100018	ArgumentList	compiler		1099985	1					
ANR	1100019	Argument	compiler		1099985	0					
ANR	1100020	Identifier	compiler		1099985	0					
ANR	1100021	Argument	op		1099985	1					
ANR	1100022	Identifier	op		1099985	0					
ANR	1100023	Argument	dst		1099985	2					
ANR	1100024	Identifier	dst		1099985	0					
ANR	1100025	Argument	dstw		1099985	3					
ANR	1100026	Identifier	dstw		1099985	0					
ANR	1100027	Argument	src		1099985	4					
ANR	1100028	Identifier	src		1099985	0					
ANR	1100029	Argument	srcw		1099985	5					
ANR	1100030	Identifier	srcw		1099985	0					
ANR	1100031	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	815:1:26413:26443	1099985	3	True				
ANR	1100032	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1099985	0					
ANR	1100033	Callee	ADJUST_LOCAL_OFFSET		1099985	0					
ANR	1100034	Identifier	ADJUST_LOCAL_OFFSET		1099985	0					
ANR	1100035	ArgumentList	dst		1099985	1					
ANR	1100036	Argument	dst		1099985	0					
ANR	1100037	Identifier	dst		1099985	0					
ANR	1100038	Argument	dstw		1099985	1					
ANR	1100039	Identifier	dstw		1099985	0					
ANR	1100040	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	816:1:26446:26476	1099985	4	True				
ANR	1100041	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1099985	0					
ANR	1100042	Callee	ADJUST_LOCAL_OFFSET		1099985	0					
ANR	1100043	Identifier	ADJUST_LOCAL_OFFSET		1099985	0					
ANR	1100044	ArgumentList	src		1099985	1					
ANR	1100045	Argument	src		1099985	0					
ANR	1100046	Identifier	src		1099985	0					
ANR	1100047	Argument	srcw		1099985	1					
ANR	1100048	Identifier	srcw		1099985	0					
ANR	1100049	ExpressionStatement	op = GET_OPCODE ( op )	818:1:26480:26499	1099985	5	True				
ANR	1100050	AssignmentExpression	op = GET_OPCODE ( op )		1099985	0		=			
ANR	1100051	Identifier	op		1099985	0					
ANR	1100052	CallExpression	GET_OPCODE ( op )		1099985	1					
ANR	1100053	Callee	GET_OPCODE		1099985	0					
ANR	1100054	Identifier	GET_OPCODE		1099985	0					
ANR	1100055	ArgumentList	op		1099985	1					
ANR	1100056	Argument	op		1099985	0					
ANR	1100057	Identifier	op		1099985	0					
ANR	1100058	SwitchStatement	switch ( op )		1099985	6					
ANR	1100059	Condition	op	819:9:26510:26511	1099985	0	True				
ANR	1100060	Identifier	op		1099985	0					
ANR	1100061	CompoundStatement		10:13:235:235	1099985	1					
ANR	1100062	Label	case SLJIT_MOV :	820:1:26517:26531	1099985	0	True				
ANR	1100063	Identifier	SLJIT_MOV		1099985	0					
ANR	1100064	Label	case SLJIT_MOV_P :	821:1:26534:26550	1099985	1	True				
ANR	1100065	Identifier	SLJIT_MOV_P		1099985	0					
ANR	1100066	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	822:2:26554:26643	1099985	2	True				
ANR	1100067	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100068	Callee	emit_op		1099985	0					
ANR	1100069	Identifier	emit_op		1099985	0					
ANR	1100070	ArgumentList	compiler		1099985	1					
ANR	1100071	Argument	compiler		1099985	0					
ANR	1100072	Identifier	compiler		1099985	0					
ANR	1100073	Argument	SLJIT_MOV		1099985	1					
ANR	1100074	Identifier	SLJIT_MOV		1099985	0					
ANR	1100075	Argument	flags | WORD_DATA		1099985	2					
ANR	1100076	InclusiveOrExpression	flags | WORD_DATA		1099985	0		|			
ANR	1100077	Identifier	flags		1099985	0					
ANR	1100078	Identifier	WORD_DATA		1099985	1					
ANR	1100079	Argument	dst		1099985	3					
ANR	1100080	Identifier	dst		1099985	0					
ANR	1100081	Argument	dstw		1099985	4					
ANR	1100082	Identifier	dstw		1099985	0					
ANR	1100083	Argument	TMP_REG1		1099985	5					
ANR	1100084	Identifier	TMP_REG1		1099985	0					
ANR	1100085	Argument	0		1099985	6					
ANR	1100086	PrimaryExpression	0		1099985	0					
ANR	1100087	Argument	src		1099985	7					
ANR	1100088	Identifier	src		1099985	0					
ANR	1100089	Argument	srcw		1099985	8					
ANR	1100090	Identifier	srcw		1099985	0					
ANR	1100091	Label	case SLJIT_MOV_UI :	824:1:26647:26664	1099985	3	True				
ANR	1100092	Identifier	SLJIT_MOV_UI		1099985	0					
ANR	1100093	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , flags | INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	825:2:26668:26759	1099985	4	True				
ANR	1100094	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , flags | INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100095	Callee	emit_op		1099985	0					
ANR	1100096	Identifier	emit_op		1099985	0					
ANR	1100097	ArgumentList	compiler		1099985	1					
ANR	1100098	Argument	compiler		1099985	0					
ANR	1100099	Identifier	compiler		1099985	0					
ANR	1100100	Argument	SLJIT_MOV_UI		1099985	1					
ANR	1100101	Identifier	SLJIT_MOV_UI		1099985	0					
ANR	1100102	Argument	flags | INT_DATA		1099985	2					
ANR	1100103	InclusiveOrExpression	flags | INT_DATA		1099985	0		|			
ANR	1100104	Identifier	flags		1099985	0					
ANR	1100105	Identifier	INT_DATA		1099985	1					
ANR	1100106	Argument	dst		1099985	3					
ANR	1100107	Identifier	dst		1099985	0					
ANR	1100108	Argument	dstw		1099985	4					
ANR	1100109	Identifier	dstw		1099985	0					
ANR	1100110	Argument	TMP_REG1		1099985	5					
ANR	1100111	Identifier	TMP_REG1		1099985	0					
ANR	1100112	Argument	0		1099985	6					
ANR	1100113	PrimaryExpression	0		1099985	0					
ANR	1100114	Argument	src		1099985	7					
ANR	1100115	Identifier	src		1099985	0					
ANR	1100116	Argument	srcw		1099985	8					
ANR	1100117	Identifier	srcw		1099985	0					
ANR	1100118	Label	case SLJIT_MOV_SI :	827:1:26763:26780	1099985	5	True				
ANR	1100119	Identifier	SLJIT_MOV_SI		1099985	0					
ANR	1100120	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , flags | INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	828:2:26784:26889	1099985	6	True				
ANR	1100121	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , flags | INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100122	Callee	emit_op		1099985	0					
ANR	1100123	Identifier	emit_op		1099985	0					
ANR	1100124	ArgumentList	compiler		1099985	1					
ANR	1100125	Argument	compiler		1099985	0					
ANR	1100126	Identifier	compiler		1099985	0					
ANR	1100127	Argument	SLJIT_MOV_SI		1099985	1					
ANR	1100128	Identifier	SLJIT_MOV_SI		1099985	0					
ANR	1100129	Argument	flags | INT_DATA | SIGNED_DATA		1099985	2					
ANR	1100130	InclusiveOrExpression	flags | INT_DATA | SIGNED_DATA		1099985	0		|			
ANR	1100131	Identifier	flags		1099985	0					
ANR	1100132	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1099985	1		|			
ANR	1100133	Identifier	INT_DATA		1099985	0					
ANR	1100134	Identifier	SIGNED_DATA		1099985	1					
ANR	1100135	Argument	dst		1099985	3					
ANR	1100136	Identifier	dst		1099985	0					
ANR	1100137	Argument	dstw		1099985	4					
ANR	1100138	Identifier	dstw		1099985	0					
ANR	1100139	Argument	TMP_REG1		1099985	5					
ANR	1100140	Identifier	TMP_REG1		1099985	0					
ANR	1100141	Argument	0		1099985	6					
ANR	1100142	PrimaryExpression	0		1099985	0					
ANR	1100143	Argument	src		1099985	7					
ANR	1100144	Identifier	src		1099985	0					
ANR	1100145	Argument	srcw		1099985	8					
ANR	1100146	Identifier	srcw		1099985	0					
ANR	1100147	Label	case SLJIT_MOV_UB :	830:1:26893:26910	1099985	7	True				
ANR	1100148	Identifier	SLJIT_MOV_UB		1099985	0					
ANR	1100149	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , flags | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	831:2:26914:27043	1099985	8	True				
ANR	1100150	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , flags | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1099985	0					
ANR	1100151	Callee	emit_op		1099985	0					
ANR	1100152	Identifier	emit_op		1099985	0					
ANR	1100153	ArgumentList	compiler		1099985	1					
ANR	1100154	Argument	compiler		1099985	0					
ANR	1100155	Identifier	compiler		1099985	0					
ANR	1100156	Argument	SLJIT_MOV_UB		1099985	1					
ANR	1100157	Identifier	SLJIT_MOV_UB		1099985	0					
ANR	1100158	Argument	flags | BYTE_DATA		1099985	2					
ANR	1100159	InclusiveOrExpression	flags | BYTE_DATA		1099985	0		|			
ANR	1100160	Identifier	flags		1099985	0					
ANR	1100161	Identifier	BYTE_DATA		1099985	1					
ANR	1100162	Argument	dst		1099985	3					
ANR	1100163	Identifier	dst		1099985	0					
ANR	1100164	Argument	dstw		1099985	4					
ANR	1100165	Identifier	dstw		1099985	0					
ANR	1100166	Argument	TMP_REG1		1099985	5					
ANR	1100167	Identifier	TMP_REG1		1099985	0					
ANR	1100168	Argument	0		1099985	6					
ANR	1100169	PrimaryExpression	0		1099985	0					
ANR	1100170	Argument	src		1099985	7					
ANR	1100171	Identifier	src		1099985	0					
ANR	1100172	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1099985	8					
ANR	1100173	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1099985	0					
ANR	1100174	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100175	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100176	Identifier	src		1099985	0					
ANR	1100177	Identifier	SLJIT_IMM		1099985	1					
ANR	1100178	CastExpression	( sljit_ub ) srcw		1099985	1					
ANR	1100179	CastTarget	sljit_ub		1099985	0					
ANR	1100180	Identifier	srcw		1099985	1					
ANR	1100181	Identifier	srcw		1099985	2					
ANR	1100182	Label	case SLJIT_MOV_SB :	833:1:27047:27064	1099985	9	True				
ANR	1100183	Identifier	SLJIT_MOV_SB		1099985	0					
ANR	1100184	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , flags | BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	834:2:27068:27211	1099985	10	True				
ANR	1100185	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , flags | BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1099985	0					
ANR	1100186	Callee	emit_op		1099985	0					
ANR	1100187	Identifier	emit_op		1099985	0					
ANR	1100188	ArgumentList	compiler		1099985	1					
ANR	1100189	Argument	compiler		1099985	0					
ANR	1100190	Identifier	compiler		1099985	0					
ANR	1100191	Argument	SLJIT_MOV_SB		1099985	1					
ANR	1100192	Identifier	SLJIT_MOV_SB		1099985	0					
ANR	1100193	Argument	flags | BYTE_DATA | SIGNED_DATA		1099985	2					
ANR	1100194	InclusiveOrExpression	flags | BYTE_DATA | SIGNED_DATA		1099985	0		|			
ANR	1100195	Identifier	flags		1099985	0					
ANR	1100196	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1099985	1		|			
ANR	1100197	Identifier	BYTE_DATA		1099985	0					
ANR	1100198	Identifier	SIGNED_DATA		1099985	1					
ANR	1100199	Argument	dst		1099985	3					
ANR	1100200	Identifier	dst		1099985	0					
ANR	1100201	Argument	dstw		1099985	4					
ANR	1100202	Identifier	dstw		1099985	0					
ANR	1100203	Argument	TMP_REG1		1099985	5					
ANR	1100204	Identifier	TMP_REG1		1099985	0					
ANR	1100205	Argument	0		1099985	6					
ANR	1100206	PrimaryExpression	0		1099985	0					
ANR	1100207	Argument	src		1099985	7					
ANR	1100208	Identifier	src		1099985	0					
ANR	1100209	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1099985	8					
ANR	1100210	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1099985	0					
ANR	1100211	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100212	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100213	Identifier	src		1099985	0					
ANR	1100214	Identifier	SLJIT_IMM		1099985	1					
ANR	1100215	CastExpression	( sljit_sb ) srcw		1099985	1					
ANR	1100216	CastTarget	sljit_sb		1099985	0					
ANR	1100217	Identifier	srcw		1099985	1					
ANR	1100218	Identifier	srcw		1099985	2					
ANR	1100219	Label	case SLJIT_MOV_UH :	836:1:27215:27232	1099985	11	True				
ANR	1100220	Identifier	SLJIT_MOV_UH		1099985	0					
ANR	1100221	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , flags | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	837:2:27236:27365	1099985	12	True				
ANR	1100222	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , flags | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1099985	0					
ANR	1100223	Callee	emit_op		1099985	0					
ANR	1100224	Identifier	emit_op		1099985	0					
ANR	1100225	ArgumentList	compiler		1099985	1					
ANR	1100226	Argument	compiler		1099985	0					
ANR	1100227	Identifier	compiler		1099985	0					
ANR	1100228	Argument	SLJIT_MOV_UH		1099985	1					
ANR	1100229	Identifier	SLJIT_MOV_UH		1099985	0					
ANR	1100230	Argument	flags | HALF_DATA		1099985	2					
ANR	1100231	InclusiveOrExpression	flags | HALF_DATA		1099985	0		|			
ANR	1100232	Identifier	flags		1099985	0					
ANR	1100233	Identifier	HALF_DATA		1099985	1					
ANR	1100234	Argument	dst		1099985	3					
ANR	1100235	Identifier	dst		1099985	0					
ANR	1100236	Argument	dstw		1099985	4					
ANR	1100237	Identifier	dstw		1099985	0					
ANR	1100238	Argument	TMP_REG1		1099985	5					
ANR	1100239	Identifier	TMP_REG1		1099985	0					
ANR	1100240	Argument	0		1099985	6					
ANR	1100241	PrimaryExpression	0		1099985	0					
ANR	1100242	Argument	src		1099985	7					
ANR	1100243	Identifier	src		1099985	0					
ANR	1100244	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1099985	8					
ANR	1100245	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1099985	0					
ANR	1100246	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100247	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100248	Identifier	src		1099985	0					
ANR	1100249	Identifier	SLJIT_IMM		1099985	1					
ANR	1100250	CastExpression	( sljit_uh ) srcw		1099985	1					
ANR	1100251	CastTarget	sljit_uh		1099985	0					
ANR	1100252	Identifier	srcw		1099985	1					
ANR	1100253	Identifier	srcw		1099985	2					
ANR	1100254	Label	case SLJIT_MOV_SH :	839:1:27369:27386	1099985	13	True				
ANR	1100255	Identifier	SLJIT_MOV_SH		1099985	0					
ANR	1100256	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , flags | HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	840:2:27390:27533	1099985	14	True				
ANR	1100257	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , flags | HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1099985	0					
ANR	1100258	Callee	emit_op		1099985	0					
ANR	1100259	Identifier	emit_op		1099985	0					
ANR	1100260	ArgumentList	compiler		1099985	1					
ANR	1100261	Argument	compiler		1099985	0					
ANR	1100262	Identifier	compiler		1099985	0					
ANR	1100263	Argument	SLJIT_MOV_SH		1099985	1					
ANR	1100264	Identifier	SLJIT_MOV_SH		1099985	0					
ANR	1100265	Argument	flags | HALF_DATA | SIGNED_DATA		1099985	2					
ANR	1100266	InclusiveOrExpression	flags | HALF_DATA | SIGNED_DATA		1099985	0		|			
ANR	1100267	Identifier	flags		1099985	0					
ANR	1100268	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1099985	1		|			
ANR	1100269	Identifier	HALF_DATA		1099985	0					
ANR	1100270	Identifier	SIGNED_DATA		1099985	1					
ANR	1100271	Argument	dst		1099985	3					
ANR	1100272	Identifier	dst		1099985	0					
ANR	1100273	Argument	dstw		1099985	4					
ANR	1100274	Identifier	dstw		1099985	0					
ANR	1100275	Argument	TMP_REG1		1099985	5					
ANR	1100276	Identifier	TMP_REG1		1099985	0					
ANR	1100277	Argument	0		1099985	6					
ANR	1100278	PrimaryExpression	0		1099985	0					
ANR	1100279	Argument	src		1099985	7					
ANR	1100280	Identifier	src		1099985	0					
ANR	1100281	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1099985	8					
ANR	1100282	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1099985	0					
ANR	1100283	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100284	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100285	Identifier	src		1099985	0					
ANR	1100286	Identifier	SLJIT_IMM		1099985	1					
ANR	1100287	CastExpression	( sljit_sh ) srcw		1099985	1					
ANR	1100288	CastTarget	sljit_sh		1099985	0					
ANR	1100289	Identifier	srcw		1099985	1					
ANR	1100290	Identifier	srcw		1099985	2					
ANR	1100291	Label	case SLJIT_MOVU :	842:1:27537:27552	1099985	15	True				
ANR	1100292	Identifier	SLJIT_MOVU		1099985	0					
ANR	1100293	Label	case SLJIT_MOVU_P :	843:1:27555:27572	1099985	16	True				
ANR	1100294	Identifier	SLJIT_MOVU_P		1099985	0					
ANR	1100295	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	844:2:27576:27678	1099985	17	True				
ANR	1100296	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100297	Callee	emit_op		1099985	0					
ANR	1100298	Identifier	emit_op		1099985	0					
ANR	1100299	ArgumentList	compiler		1099985	1					
ANR	1100300	Argument	compiler		1099985	0					
ANR	1100301	Identifier	compiler		1099985	0					
ANR	1100302	Argument	SLJIT_MOV		1099985	1					
ANR	1100303	Identifier	SLJIT_MOV		1099985	0					
ANR	1100304	Argument	flags | WORD_DATA | WRITE_BACK		1099985	2					
ANR	1100305	InclusiveOrExpression	flags | WORD_DATA | WRITE_BACK		1099985	0		|			
ANR	1100306	Identifier	flags		1099985	0					
ANR	1100307	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1099985	1		|			
ANR	1100308	Identifier	WORD_DATA		1099985	0					
ANR	1100309	Identifier	WRITE_BACK		1099985	1					
ANR	1100310	Argument	dst		1099985	3					
ANR	1100311	Identifier	dst		1099985	0					
ANR	1100312	Argument	dstw		1099985	4					
ANR	1100313	Identifier	dstw		1099985	0					
ANR	1100314	Argument	TMP_REG1		1099985	5					
ANR	1100315	Identifier	TMP_REG1		1099985	0					
ANR	1100316	Argument	0		1099985	6					
ANR	1100317	PrimaryExpression	0		1099985	0					
ANR	1100318	Argument	src		1099985	7					
ANR	1100319	Identifier	src		1099985	0					
ANR	1100320	Argument	srcw		1099985	8					
ANR	1100321	Identifier	srcw		1099985	0					
ANR	1100322	Label	case SLJIT_MOVU_UI :	846:1:27682:27700	1099985	18	True				
ANR	1100323	Identifier	SLJIT_MOVU_UI		1099985	0					
ANR	1100324	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , flags | INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	847:2:27704:27808	1099985	19	True				
ANR	1100325	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , flags | INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100326	Callee	emit_op		1099985	0					
ANR	1100327	Identifier	emit_op		1099985	0					
ANR	1100328	ArgumentList	compiler		1099985	1					
ANR	1100329	Argument	compiler		1099985	0					
ANR	1100330	Identifier	compiler		1099985	0					
ANR	1100331	Argument	SLJIT_MOV_UI		1099985	1					
ANR	1100332	Identifier	SLJIT_MOV_UI		1099985	0					
ANR	1100333	Argument	flags | INT_DATA | WRITE_BACK		1099985	2					
ANR	1100334	InclusiveOrExpression	flags | INT_DATA | WRITE_BACK		1099985	0		|			
ANR	1100335	Identifier	flags		1099985	0					
ANR	1100336	InclusiveOrExpression	INT_DATA | WRITE_BACK		1099985	1		|			
ANR	1100337	Identifier	INT_DATA		1099985	0					
ANR	1100338	Identifier	WRITE_BACK		1099985	1					
ANR	1100339	Argument	dst		1099985	3					
ANR	1100340	Identifier	dst		1099985	0					
ANR	1100341	Argument	dstw		1099985	4					
ANR	1100342	Identifier	dstw		1099985	0					
ANR	1100343	Argument	TMP_REG1		1099985	5					
ANR	1100344	Identifier	TMP_REG1		1099985	0					
ANR	1100345	Argument	0		1099985	6					
ANR	1100346	PrimaryExpression	0		1099985	0					
ANR	1100347	Argument	src		1099985	7					
ANR	1100348	Identifier	src		1099985	0					
ANR	1100349	Argument	srcw		1099985	8					
ANR	1100350	Identifier	srcw		1099985	0					
ANR	1100351	Label	case SLJIT_MOVU_SI :	849:1:27812:27830	1099985	20	True				
ANR	1100352	Identifier	SLJIT_MOVU_SI		1099985	0					
ANR	1100353	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , flags | INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	850:2:27834:27952	1099985	21	True				
ANR	1100354	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , flags | INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100355	Callee	emit_op		1099985	0					
ANR	1100356	Identifier	emit_op		1099985	0					
ANR	1100357	ArgumentList	compiler		1099985	1					
ANR	1100358	Argument	compiler		1099985	0					
ANR	1100359	Identifier	compiler		1099985	0					
ANR	1100360	Argument	SLJIT_MOV_SI		1099985	1					
ANR	1100361	Identifier	SLJIT_MOV_SI		1099985	0					
ANR	1100362	Argument	flags | INT_DATA | SIGNED_DATA | WRITE_BACK		1099985	2					
ANR	1100363	InclusiveOrExpression	flags | INT_DATA | SIGNED_DATA | WRITE_BACK		1099985	0		|			
ANR	1100364	Identifier	flags		1099985	0					
ANR	1100365	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100366	Identifier	INT_DATA		1099985	0					
ANR	1100367	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100368	Identifier	SIGNED_DATA		1099985	0					
ANR	1100369	Identifier	WRITE_BACK		1099985	1					
ANR	1100370	Argument	dst		1099985	3					
ANR	1100371	Identifier	dst		1099985	0					
ANR	1100372	Argument	dstw		1099985	4					
ANR	1100373	Identifier	dstw		1099985	0					
ANR	1100374	Argument	TMP_REG1		1099985	5					
ANR	1100375	Identifier	TMP_REG1		1099985	0					
ANR	1100376	Argument	0		1099985	6					
ANR	1100377	PrimaryExpression	0		1099985	0					
ANR	1100378	Argument	src		1099985	7					
ANR	1100379	Identifier	src		1099985	0					
ANR	1100380	Argument	srcw		1099985	8					
ANR	1100381	Identifier	srcw		1099985	0					
ANR	1100382	Label	case SLJIT_MOVU_UB :	852:1:27956:27974	1099985	22	True				
ANR	1100383	Identifier	SLJIT_MOVU_UB		1099985	0					
ANR	1100384	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , flags | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	853:2:27978:28120	1099985	23	True				
ANR	1100385	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , flags | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1099985	0					
ANR	1100386	Callee	emit_op		1099985	0					
ANR	1100387	Identifier	emit_op		1099985	0					
ANR	1100388	ArgumentList	compiler		1099985	1					
ANR	1100389	Argument	compiler		1099985	0					
ANR	1100390	Identifier	compiler		1099985	0					
ANR	1100391	Argument	SLJIT_MOV_UB		1099985	1					
ANR	1100392	Identifier	SLJIT_MOV_UB		1099985	0					
ANR	1100393	Argument	flags | BYTE_DATA | WRITE_BACK		1099985	2					
ANR	1100394	InclusiveOrExpression	flags | BYTE_DATA | WRITE_BACK		1099985	0		|			
ANR	1100395	Identifier	flags		1099985	0					
ANR	1100396	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1099985	1		|			
ANR	1100397	Identifier	BYTE_DATA		1099985	0					
ANR	1100398	Identifier	WRITE_BACK		1099985	1					
ANR	1100399	Argument	dst		1099985	3					
ANR	1100400	Identifier	dst		1099985	0					
ANR	1100401	Argument	dstw		1099985	4					
ANR	1100402	Identifier	dstw		1099985	0					
ANR	1100403	Argument	TMP_REG1		1099985	5					
ANR	1100404	Identifier	TMP_REG1		1099985	0					
ANR	1100405	Argument	0		1099985	6					
ANR	1100406	PrimaryExpression	0		1099985	0					
ANR	1100407	Argument	src		1099985	7					
ANR	1100408	Identifier	src		1099985	0					
ANR	1100409	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1099985	8					
ANR	1100410	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1099985	0					
ANR	1100411	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100412	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100413	Identifier	src		1099985	0					
ANR	1100414	Identifier	SLJIT_IMM		1099985	1					
ANR	1100415	CastExpression	( sljit_ub ) srcw		1099985	1					
ANR	1100416	CastTarget	sljit_ub		1099985	0					
ANR	1100417	Identifier	srcw		1099985	1					
ANR	1100418	Identifier	srcw		1099985	2					
ANR	1100419	Label	case SLJIT_MOVU_SB :	855:1:28124:28142	1099985	24	True				
ANR	1100420	Identifier	SLJIT_MOVU_SB		1099985	0					
ANR	1100421	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , flags | BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	856:2:28146:28302	1099985	25	True				
ANR	1100422	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , flags | BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1099985	0					
ANR	1100423	Callee	emit_op		1099985	0					
ANR	1100424	Identifier	emit_op		1099985	0					
ANR	1100425	ArgumentList	compiler		1099985	1					
ANR	1100426	Argument	compiler		1099985	0					
ANR	1100427	Identifier	compiler		1099985	0					
ANR	1100428	Argument	SLJIT_MOV_SB		1099985	1					
ANR	1100429	Identifier	SLJIT_MOV_SB		1099985	0					
ANR	1100430	Argument	flags | BYTE_DATA | SIGNED_DATA | WRITE_BACK		1099985	2					
ANR	1100431	InclusiveOrExpression	flags | BYTE_DATA | SIGNED_DATA | WRITE_BACK		1099985	0		|			
ANR	1100432	Identifier	flags		1099985	0					
ANR	1100433	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100434	Identifier	BYTE_DATA		1099985	0					
ANR	1100435	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100436	Identifier	SIGNED_DATA		1099985	0					
ANR	1100437	Identifier	WRITE_BACK		1099985	1					
ANR	1100438	Argument	dst		1099985	3					
ANR	1100439	Identifier	dst		1099985	0					
ANR	1100440	Argument	dstw		1099985	4					
ANR	1100441	Identifier	dstw		1099985	0					
ANR	1100442	Argument	TMP_REG1		1099985	5					
ANR	1100443	Identifier	TMP_REG1		1099985	0					
ANR	1100444	Argument	0		1099985	6					
ANR	1100445	PrimaryExpression	0		1099985	0					
ANR	1100446	Argument	src		1099985	7					
ANR	1100447	Identifier	src		1099985	0					
ANR	1100448	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1099985	8					
ANR	1100449	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1099985	0					
ANR	1100450	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100451	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100452	Identifier	src		1099985	0					
ANR	1100453	Identifier	SLJIT_IMM		1099985	1					
ANR	1100454	CastExpression	( sljit_sb ) srcw		1099985	1					
ANR	1100455	CastTarget	sljit_sb		1099985	0					
ANR	1100456	Identifier	srcw		1099985	1					
ANR	1100457	Identifier	srcw		1099985	2					
ANR	1100458	Label	case SLJIT_MOVU_UH :	858:1:28306:28324	1099985	26	True				
ANR	1100459	Identifier	SLJIT_MOVU_UH		1099985	0					
ANR	1100460	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , flags | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	859:2:28328:28470	1099985	27	True				
ANR	1100461	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , flags | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1099985	0					
ANR	1100462	Callee	emit_op		1099985	0					
ANR	1100463	Identifier	emit_op		1099985	0					
ANR	1100464	ArgumentList	compiler		1099985	1					
ANR	1100465	Argument	compiler		1099985	0					
ANR	1100466	Identifier	compiler		1099985	0					
ANR	1100467	Argument	SLJIT_MOV_UH		1099985	1					
ANR	1100468	Identifier	SLJIT_MOV_UH		1099985	0					
ANR	1100469	Argument	flags | HALF_DATA | WRITE_BACK		1099985	2					
ANR	1100470	InclusiveOrExpression	flags | HALF_DATA | WRITE_BACK		1099985	0		|			
ANR	1100471	Identifier	flags		1099985	0					
ANR	1100472	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1099985	1		|			
ANR	1100473	Identifier	HALF_DATA		1099985	0					
ANR	1100474	Identifier	WRITE_BACK		1099985	1					
ANR	1100475	Argument	dst		1099985	3					
ANR	1100476	Identifier	dst		1099985	0					
ANR	1100477	Argument	dstw		1099985	4					
ANR	1100478	Identifier	dstw		1099985	0					
ANR	1100479	Argument	TMP_REG1		1099985	5					
ANR	1100480	Identifier	TMP_REG1		1099985	0					
ANR	1100481	Argument	0		1099985	6					
ANR	1100482	PrimaryExpression	0		1099985	0					
ANR	1100483	Argument	src		1099985	7					
ANR	1100484	Identifier	src		1099985	0					
ANR	1100485	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1099985	8					
ANR	1100486	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1099985	0					
ANR	1100487	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100488	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100489	Identifier	src		1099985	0					
ANR	1100490	Identifier	SLJIT_IMM		1099985	1					
ANR	1100491	CastExpression	( sljit_uh ) srcw		1099985	1					
ANR	1100492	CastTarget	sljit_uh		1099985	0					
ANR	1100493	Identifier	srcw		1099985	1					
ANR	1100494	Identifier	srcw		1099985	2					
ANR	1100495	Label	case SLJIT_MOVU_SH :	861:1:28474:28492	1099985	28	True				
ANR	1100496	Identifier	SLJIT_MOVU_SH		1099985	0					
ANR	1100497	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , flags | HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	862:2:28496:28652	1099985	29	True				
ANR	1100498	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , flags | HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1099985	0					
ANR	1100499	Callee	emit_op		1099985	0					
ANR	1100500	Identifier	emit_op		1099985	0					
ANR	1100501	ArgumentList	compiler		1099985	1					
ANR	1100502	Argument	compiler		1099985	0					
ANR	1100503	Identifier	compiler		1099985	0					
ANR	1100504	Argument	SLJIT_MOV_SH		1099985	1					
ANR	1100505	Identifier	SLJIT_MOV_SH		1099985	0					
ANR	1100506	Argument	flags | HALF_DATA | SIGNED_DATA | WRITE_BACK		1099985	2					
ANR	1100507	InclusiveOrExpression	flags | HALF_DATA | SIGNED_DATA | WRITE_BACK		1099985	0		|			
ANR	1100508	Identifier	flags		1099985	0					
ANR	1100509	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100510	Identifier	HALF_DATA		1099985	0					
ANR	1100511	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1099985	1		|			
ANR	1100512	Identifier	SIGNED_DATA		1099985	0					
ANR	1100513	Identifier	WRITE_BACK		1099985	1					
ANR	1100514	Argument	dst		1099985	3					
ANR	1100515	Identifier	dst		1099985	0					
ANR	1100516	Argument	dstw		1099985	4					
ANR	1100517	Identifier	dstw		1099985	0					
ANR	1100518	Argument	TMP_REG1		1099985	5					
ANR	1100519	Identifier	TMP_REG1		1099985	0					
ANR	1100520	Argument	0		1099985	6					
ANR	1100521	PrimaryExpression	0		1099985	0					
ANR	1100522	Argument	src		1099985	7					
ANR	1100523	Identifier	src		1099985	0					
ANR	1100524	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1099985	8					
ANR	1100525	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1099985	0					
ANR	1100526	Condition	src & SLJIT_IMM		1099985	0					
ANR	1100527	BitAndExpression	src & SLJIT_IMM		1099985	0		&			
ANR	1100528	Identifier	src		1099985	0					
ANR	1100529	Identifier	SLJIT_IMM		1099985	1					
ANR	1100530	CastExpression	( sljit_sh ) srcw		1099985	1					
ANR	1100531	CastTarget	sljit_sh		1099985	0					
ANR	1100532	Identifier	srcw		1099985	1					
ANR	1100533	Identifier	srcw		1099985	2					
ANR	1100534	Label	case SLJIT_NOT :	864:1:28656:28670	1099985	30	True				
ANR	1100535	Identifier	SLJIT_NOT		1099985	0					
ANR	1100536	Label	case SLJIT_CLZ :	865:1:28673:28687	1099985	31	True				
ANR	1100537	Identifier	SLJIT_CLZ		1099985	0					
ANR	1100538	ReturnStatement	"return emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	866:2:28691:28761	1099985	32	True				
ANR	1100539	CallExpression	"emit_op ( compiler , op , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1099985	0					
ANR	1100540	Callee	emit_op		1099985	0					
ANR	1100541	Identifier	emit_op		1099985	0					
ANR	1100542	ArgumentList	compiler		1099985	1					
ANR	1100543	Argument	compiler		1099985	0					
ANR	1100544	Identifier	compiler		1099985	0					
ANR	1100545	Argument	op		1099985	1					
ANR	1100546	Identifier	op		1099985	0					
ANR	1100547	Argument	flags		1099985	2					
ANR	1100548	Identifier	flags		1099985	0					
ANR	1100549	Argument	dst		1099985	3					
ANR	1100550	Identifier	dst		1099985	0					
ANR	1100551	Argument	dstw		1099985	4					
ANR	1100552	Identifier	dstw		1099985	0					
ANR	1100553	Argument	TMP_REG1		1099985	5					
ANR	1100554	Identifier	TMP_REG1		1099985	0					
ANR	1100555	Argument	0		1099985	6					
ANR	1100556	PrimaryExpression	0		1099985	0					
ANR	1100557	Argument	src		1099985	7					
ANR	1100558	Identifier	src		1099985	0					
ANR	1100559	Argument	srcw		1099985	8					
ANR	1100560	Identifier	srcw		1099985	0					
ANR	1100561	Label	case SLJIT_NEG :	868:1:28765:28779	1099985	33	True				
ANR	1100562	Identifier	SLJIT_NEG		1099985	0					
ANR	1100563	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	869:2:28783:28870	1099985	34	True				
ANR	1100564	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1099985	0					
ANR	1100565	Callee	emit_op		1099985	0					
ANR	1100566	Identifier	emit_op		1099985	0					
ANR	1100567	ArgumentList	compiler		1099985	1					
ANR	1100568	Argument	compiler		1099985	0					
ANR	1100569	Identifier	compiler		1099985	0					
ANR	1100570	Argument	SLJIT_SUB		1099985	1					
ANR	1100571	Identifier	SLJIT_SUB		1099985	0					
ANR	1100572	Argument	flags | IMM_OP		1099985	2					
ANR	1100573	InclusiveOrExpression	flags | IMM_OP		1099985	0		|			
ANR	1100574	Identifier	flags		1099985	0					
ANR	1100575	Identifier	IMM_OP		1099985	1					
ANR	1100576	Argument	dst		1099985	3					
ANR	1100577	Identifier	dst		1099985	0					
ANR	1100578	Argument	dstw		1099985	4					
ANR	1100579	Identifier	dstw		1099985	0					
ANR	1100580	Argument	SLJIT_IMM		1099985	5					
ANR	1100581	Identifier	SLJIT_IMM		1099985	0					
ANR	1100582	Argument	0		1099985	6					
ANR	1100583	PrimaryExpression	0		1099985	0					
ANR	1100584	Argument	src		1099985	7					
ANR	1100585	Identifier	src		1099985	0					
ANR	1100586	Argument	srcw		1099985	8					
ANR	1100587	Identifier	srcw		1099985	0					
ANR	1100588	ReturnStatement	return SLJIT_SUCCESS ;	872:1:28877:28897	1099985	7	True				
ANR	1100589	Identifier	SLJIT_SUCCESS		1099985	0					
ANR	1100590	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1099985	1					
ANR	1100591	Identifier	sljit_emit_op1		1099985	2					
ANR	1100592	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1099985	3					
ANR	1100593	Parameter	struct sljit_compiler * compiler	807:49:26172:26202	1099985	0	True				
ANR	1100594	ParameterType	struct sljit_compiler *		1099985	0					
ANR	1100595	Identifier	compiler		1099985	1					
ANR	1100596	Parameter	sljit_si op	807:82:26205:26215	1099985	1	True				
ANR	1100597	ParameterType	sljit_si		1099985	0					
ANR	1100598	Identifier	op		1099985	1					
ANR	1100599	Parameter	sljit_si dst	808:1:26219:26230	1099985	2	True				
ANR	1100600	ParameterType	sljit_si		1099985	0					
ANR	1100601	Identifier	dst		1099985	1					
ANR	1100602	Parameter	sljit_sw dstw	808:15:26233:26245	1099985	3	True				
ANR	1100603	ParameterType	sljit_sw		1099985	0					
ANR	1100604	Identifier	dstw		1099985	1					
ANR	1100605	Parameter	sljit_si src	809:1:26249:26260	1099985	4	True				
ANR	1100606	ParameterType	sljit_si		1099985	0					
ANR	1100607	Identifier	src		1099985	1					
ANR	1100608	Parameter	sljit_sw srcw	809:15:26263:26275	1099985	5	True				
ANR	1100609	ParameterType	sljit_sw		1099985	0					
ANR	1100610	Identifier	srcw		1099985	1					
ANR	1100611	CFGEntryNode	ENTRY		1099985		True				
ANR	1100612	CFGExitNode	EXIT		1099985		True				
ANR	1100613	Symbol	TMP_REG1		1099985						
ANR	1100614	Symbol	dst		1099985						
ANR	1100615	Symbol	IMM_OP		1099985						
ANR	1100616	Symbol	SLJIT_MOV		1099985						
ANR	1100617	Symbol	flags		1099985						
ANR	1100618	Symbol	GET_FLAGS		1099985						
ANR	1100619	Symbol	GET_OPCODE		1099985						
ANR	1100620	Symbol	BYTE_DATA		1099985						
ANR	1100621	Symbol	SLJIT_MOV_SI		1099985						
ANR	1100622	Symbol	SLJIT_IMM		1099985						
ANR	1100623	Symbol	SLJIT_MOV_UH		1099985						
ANR	1100624	Symbol	SLJIT_MOV_SH		1099985						
ANR	1100625	Symbol	SLJIT_MOV_UI		1099985						
ANR	1100626	Symbol	INT_DATA		1099985						
ANR	1100627	Symbol	compiler		1099985						
ANR	1100628	Symbol	WRITE_BACK		1099985						
ANR	1100629	Symbol	WORD_DATA		1099985						
ANR	1100630	Symbol	emit_op		1099985						
ANR	1100631	Symbol	op		1099985						
ANR	1100632	Symbol	src		1099985						
ANR	1100633	Symbol	check_sljit_emit_op1		1099985						
ANR	1100634	Symbol	HALF_DATA		1099985						
ANR	1100635	Symbol	srcw		1099985						
ANR	1100636	Symbol	SLJIT_MOV_SB		1099985						
ANR	1100637	Symbol	SLJIT_SUB		1099985						
ANR	1100638	Symbol	SLJIT_SUCCESS		1099985						
ANR	1100639	Symbol	SET_FLAGS		1099985						
ANR	1100640	Symbol	SLJIT_MOV_UB		1099985						
ANR	1100641	Symbol	SIGNED_DATA		1099985						
ANR	1100642	Symbol	dstw		1099985						
ANR	1100643	Function	sljit_emit_op2	875:0:28902:30010							
ANR	1100644	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1100643	0					
ANR	1100645	CompoundStatement		879:0:29091:30010	1100643	0					
ANR	1100646	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? SET_FLAGS : 0 ;	880:1:29094:29140	1100643	0	True				
ANR	1100647	IdentifierDecl	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1100643	0					
ANR	1100648	IdentifierDeclType	sljit_si		1100643	0					
ANR	1100649	Identifier	flags		1100643	1					
ANR	1100650	AssignmentExpression	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1100643	2		=			
ANR	1100651	Identifier	flags		1100643	0					
ANR	1100652	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1100643	1					
ANR	1100653	Condition	GET_FLAGS ( op )		1100643	0					
ANR	1100654	CallExpression	GET_FLAGS ( op )		1100643	0					
ANR	1100655	Callee	GET_FLAGS		1100643	0					
ANR	1100656	Identifier	GET_FLAGS		1100643	0					
ANR	1100657	ArgumentList	op		1100643	1					
ANR	1100658	Argument	op		1100643	0					
ANR	1100659	Identifier	op		1100643	0					
ANR	1100660	Identifier	SET_FLAGS		1100643	1					
ANR	1100661	PrimaryExpression	0		1100643	2					
ANR	1100662	ExpressionStatement	CHECK_ERROR ( )	882:1:29144:29157	1100643	1	True				
ANR	1100663	CallExpression	CHECK_ERROR ( )		1100643	0					
ANR	1100664	Callee	CHECK_ERROR		1100643	0					
ANR	1100665	Identifier	CHECK_ERROR		1100643	0					
ANR	1100666	ArgumentList			1100643	1					
ANR	1100667	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	883:1:29160:29238	1100643	2	True				
ANR	1100668	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1100643	0					
ANR	1100669	Callee	CHECK		1100643	0					
ANR	1100670	Identifier	CHECK		1100643	0					
ANR	1100671	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	1					
ANR	1100672	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	0					
ANR	1100673	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	0					
ANR	1100674	Callee	check_sljit_emit_op2		1100643	0					
ANR	1100675	Identifier	check_sljit_emit_op2		1100643	0					
ANR	1100676	ArgumentList	compiler		1100643	1					
ANR	1100677	Argument	compiler		1100643	0					
ANR	1100678	Identifier	compiler		1100643	0					
ANR	1100679	Argument	op		1100643	1					
ANR	1100680	Identifier	op		1100643	0					
ANR	1100681	Argument	dst		1100643	2					
ANR	1100682	Identifier	dst		1100643	0					
ANR	1100683	Argument	dstw		1100643	3					
ANR	1100684	Identifier	dstw		1100643	0					
ANR	1100685	Argument	src1		1100643	4					
ANR	1100686	Identifier	src1		1100643	0					
ANR	1100687	Argument	src1w		1100643	5					
ANR	1100688	Identifier	src1w		1100643	0					
ANR	1100689	Argument	src2		1100643	6					
ANR	1100690	Identifier	src2		1100643	0					
ANR	1100691	Argument	src2w		1100643	7					
ANR	1100692	Identifier	src2w		1100643	0					
ANR	1100693	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	884:1:29241:29271	1100643	3	True				
ANR	1100694	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1100643	0					
ANR	1100695	Callee	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100696	Identifier	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100697	ArgumentList	dst		1100643	1					
ANR	1100698	Argument	dst		1100643	0					
ANR	1100699	Identifier	dst		1100643	0					
ANR	1100700	Argument	dstw		1100643	1					
ANR	1100701	Identifier	dstw		1100643	0					
ANR	1100702	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	885:1:29274:29306	1100643	4	True				
ANR	1100703	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1100643	0					
ANR	1100704	Callee	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100705	Identifier	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100706	ArgumentList	src1		1100643	1					
ANR	1100707	Argument	src1		1100643	0					
ANR	1100708	Identifier	src1		1100643	0					
ANR	1100709	Argument	src1w		1100643	1					
ANR	1100710	Identifier	src1w		1100643	0					
ANR	1100711	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	886:1:29309:29341	1100643	5	True				
ANR	1100712	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1100643	0					
ANR	1100713	Callee	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100714	Identifier	ADJUST_LOCAL_OFFSET		1100643	0					
ANR	1100715	ArgumentList	src2		1100643	1					
ANR	1100716	Argument	src2		1100643	0					
ANR	1100717	Identifier	src2		1100643	0					
ANR	1100718	Argument	src2w		1100643	1					
ANR	1100719	Identifier	src2w		1100643	0					
ANR	1100720	ExpressionStatement	op = GET_OPCODE ( op )	888:1:29345:29364	1100643	6	True				
ANR	1100721	AssignmentExpression	op = GET_OPCODE ( op )		1100643	0		=			
ANR	1100722	Identifier	op		1100643	0					
ANR	1100723	CallExpression	GET_OPCODE ( op )		1100643	1					
ANR	1100724	Callee	GET_OPCODE		1100643	0					
ANR	1100725	Identifier	GET_OPCODE		1100643	0					
ANR	1100726	ArgumentList	op		1100643	1					
ANR	1100727	Argument	op		1100643	0					
ANR	1100728	Identifier	op		1100643	0					
ANR	1100729	SwitchStatement	switch ( op )		1100643	7					
ANR	1100730	Condition	op	889:9:29375:29376	1100643	0	True				
ANR	1100731	Identifier	op		1100643	0					
ANR	1100732	CompoundStatement		11:13:287:287	1100643	1					
ANR	1100733	Label	case SLJIT_ADD :	890:1:29382:29396	1100643	0	True				
ANR	1100734	Identifier	SLJIT_ADD		1100643	0					
ANR	1100735	Label	case SLJIT_ADDC :	891:1:29399:29414	1100643	1	True				
ANR	1100736	Identifier	SLJIT_ADDC		1100643	0					
ANR	1100737	Label	case SLJIT_MUL :	892:1:29417:29431	1100643	2	True				
ANR	1100738	Identifier	SLJIT_MUL		1100643	0					
ANR	1100739	Label	case SLJIT_AND :	893:1:29434:29448	1100643	3	True				
ANR	1100740	Identifier	SLJIT_AND		1100643	0					
ANR	1100741	Label	case SLJIT_OR :	894:1:29451:29464	1100643	4	True				
ANR	1100742	Identifier	SLJIT_OR		1100643	0					
ANR	1100743	Label	case SLJIT_XOR :	895:1:29467:29481	1100643	5	True				
ANR	1100744	Identifier	SLJIT_XOR		1100643	0					
ANR	1100745	ReturnStatement	"return emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	896:2:29485:29582	1100643	6	True				
ANR	1100746	CallExpression	"emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	0					
ANR	1100747	Callee	emit_op		1100643	0					
ANR	1100748	Identifier	emit_op		1100643	0					
ANR	1100749	ArgumentList	compiler		1100643	1					
ANR	1100750	Argument	compiler		1100643	0					
ANR	1100751	Identifier	compiler		1100643	0					
ANR	1100752	Argument	op		1100643	1					
ANR	1100753	Identifier	op		1100643	0					
ANR	1100754	Argument	flags | CUMULATIVE_OP | IMM_OP		1100643	2					
ANR	1100755	InclusiveOrExpression	flags | CUMULATIVE_OP | IMM_OP		1100643	0		|			
ANR	1100756	Identifier	flags		1100643	0					
ANR	1100757	InclusiveOrExpression	CUMULATIVE_OP | IMM_OP		1100643	1		|			
ANR	1100758	Identifier	CUMULATIVE_OP		1100643	0					
ANR	1100759	Identifier	IMM_OP		1100643	1					
ANR	1100760	Argument	dst		1100643	3					
ANR	1100761	Identifier	dst		1100643	0					
ANR	1100762	Argument	dstw		1100643	4					
ANR	1100763	Identifier	dstw		1100643	0					
ANR	1100764	Argument	src1		1100643	5					
ANR	1100765	Identifier	src1		1100643	0					
ANR	1100766	Argument	src1w		1100643	6					
ANR	1100767	Identifier	src1w		1100643	0					
ANR	1100768	Argument	src2		1100643	7					
ANR	1100769	Identifier	src2		1100643	0					
ANR	1100770	Argument	src2w		1100643	8					
ANR	1100771	Identifier	src2w		1100643	0					
ANR	1100772	Label	case SLJIT_SUB :	898:1:29586:29600	1100643	7	True				
ANR	1100773	Identifier	SLJIT_SUB		1100643	0					
ANR	1100774	Label	case SLJIT_SUBC :	899:1:29603:29618	1100643	8	True				
ANR	1100775	Identifier	SLJIT_SUBC		1100643	0					
ANR	1100776	ReturnStatement	"return emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	900:2:29622:29703	1100643	9	True				
ANR	1100777	CallExpression	"emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	0					
ANR	1100778	Callee	emit_op		1100643	0					
ANR	1100779	Identifier	emit_op		1100643	0					
ANR	1100780	ArgumentList	compiler		1100643	1					
ANR	1100781	Argument	compiler		1100643	0					
ANR	1100782	Identifier	compiler		1100643	0					
ANR	1100783	Argument	op		1100643	1					
ANR	1100784	Identifier	op		1100643	0					
ANR	1100785	Argument	flags | IMM_OP		1100643	2					
ANR	1100786	InclusiveOrExpression	flags | IMM_OP		1100643	0		|			
ANR	1100787	Identifier	flags		1100643	0					
ANR	1100788	Identifier	IMM_OP		1100643	1					
ANR	1100789	Argument	dst		1100643	3					
ANR	1100790	Identifier	dst		1100643	0					
ANR	1100791	Argument	dstw		1100643	4					
ANR	1100792	Identifier	dstw		1100643	0					
ANR	1100793	Argument	src1		1100643	5					
ANR	1100794	Identifier	src1		1100643	0					
ANR	1100795	Argument	src1w		1100643	6					
ANR	1100796	Identifier	src1w		1100643	0					
ANR	1100797	Argument	src2		1100643	7					
ANR	1100798	Identifier	src2		1100643	0					
ANR	1100799	Argument	src2w		1100643	8					
ANR	1100800	Identifier	src2w		1100643	0					
ANR	1100801	Label	case SLJIT_SHL :	902:1:29707:29721	1100643	10	True				
ANR	1100802	Identifier	SLJIT_SHL		1100643	0					
ANR	1100803	Label	case SLJIT_LSHR :	903:1:29724:29739	1100643	11	True				
ANR	1100804	Identifier	SLJIT_LSHR		1100643	0					
ANR	1100805	Label	case SLJIT_ASHR :	904:1:29742:29757	1100643	12	True				
ANR	1100806	Identifier	SLJIT_ASHR		1100643	0					
ANR	1100807	IfStatement	if ( src2 & SLJIT_IMM )		1100643	13					
ANR	1100808	Condition	src2 & SLJIT_IMM	906:6:29826:29841	1100643	0	True				
ANR	1100809	BitAndExpression	src2 & SLJIT_IMM		1100643	0		&			
ANR	1100810	Identifier	src2		1100643	0					
ANR	1100811	Identifier	SLJIT_IMM		1100643	1					
ANR	1100812	ExpressionStatement	src2w &= 0x1f	907:3:29847:29860	1100643	1	True				
ANR	1100813	AssignmentExpression	src2w &= 0x1f		1100643	0		&=			
ANR	1100814	Identifier	src2w		1100643	0					
ANR	1100815	PrimaryExpression	0x1f		1100643	1					
ANR	1100816	ReturnStatement	"return emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	911:2:29900:29981	1100643	14	True				
ANR	1100817	CallExpression	"emit_op ( compiler , op , flags | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1100643	0					
ANR	1100818	Callee	emit_op		1100643	0					
ANR	1100819	Identifier	emit_op		1100643	0					
ANR	1100820	ArgumentList	compiler		1100643	1					
ANR	1100821	Argument	compiler		1100643	0					
ANR	1100822	Identifier	compiler		1100643	0					
ANR	1100823	Argument	op		1100643	1					
ANR	1100824	Identifier	op		1100643	0					
ANR	1100825	Argument	flags | IMM_OP		1100643	2					
ANR	1100826	InclusiveOrExpression	flags | IMM_OP		1100643	0		|			
ANR	1100827	Identifier	flags		1100643	0					
ANR	1100828	Identifier	IMM_OP		1100643	1					
ANR	1100829	Argument	dst		1100643	3					
ANR	1100830	Identifier	dst		1100643	0					
ANR	1100831	Argument	dstw		1100643	4					
ANR	1100832	Identifier	dstw		1100643	0					
ANR	1100833	Argument	src1		1100643	5					
ANR	1100834	Identifier	src1		1100643	0					
ANR	1100835	Argument	src1w		1100643	6					
ANR	1100836	Identifier	src1w		1100643	0					
ANR	1100837	Argument	src2		1100643	7					
ANR	1100838	Identifier	src2		1100643	0					
ANR	1100839	Argument	src2w		1100643	8					
ANR	1100840	Identifier	src2w		1100643	0					
ANR	1100841	ReturnStatement	return SLJIT_SUCCESS ;	914:1:29988:30008	1100643	8	True				
ANR	1100842	Identifier	SLJIT_SUCCESS		1100643	0					
ANR	1100843	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1100643	1					
ANR	1100844	Identifier	sljit_emit_op2		1100643	2					
ANR	1100845	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1100643	3					
ANR	1100846	Parameter	struct sljit_compiler * compiler	875:49:28951:28981	1100643	0	True				
ANR	1100847	ParameterType	struct sljit_compiler *		1100643	0					
ANR	1100848	Identifier	compiler		1100643	1					
ANR	1100849	Parameter	sljit_si op	875:82:28984:28994	1100643	1	True				
ANR	1100850	ParameterType	sljit_si		1100643	0					
ANR	1100851	Identifier	op		1100643	1					
ANR	1100852	Parameter	sljit_si dst	876:1:28998:29009	1100643	2	True				
ANR	1100853	ParameterType	sljit_si		1100643	0					
ANR	1100854	Identifier	dst		1100643	1					
ANR	1100855	Parameter	sljit_sw dstw	876:15:29012:29024	1100643	3	True				
ANR	1100856	ParameterType	sljit_sw		1100643	0					
ANR	1100857	Identifier	dstw		1100643	1					
ANR	1100858	Parameter	sljit_si src1	877:1:29028:29040	1100643	4	True				
ANR	1100859	ParameterType	sljit_si		1100643	0					
ANR	1100860	Identifier	src1		1100643	1					
ANR	1100861	Parameter	sljit_sw src1w	877:16:29043:29056	1100643	5	True				
ANR	1100862	ParameterType	sljit_sw		1100643	0					
ANR	1100863	Identifier	src1w		1100643	1					
ANR	1100864	Parameter	sljit_si src2	878:1:29060:29072	1100643	6	True				
ANR	1100865	ParameterType	sljit_si		1100643	0					
ANR	1100866	Identifier	src2		1100643	1					
ANR	1100867	Parameter	sljit_sw src2w	878:16:29075:29088	1100643	7	True				
ANR	1100868	ParameterType	sljit_sw		1100643	0					
ANR	1100869	Identifier	src2w		1100643	1					
ANR	1100870	CFGEntryNode	ENTRY		1100643		True				
ANR	1100871	CFGExitNode	EXIT		1100643		True				
ANR	1100872	Symbol	src2w		1100643						
ANR	1100873	Symbol	op		1100643						
ANR	1100874	Symbol	src1w		1100643						
ANR	1100875	Symbol	dst		1100643						
ANR	1100876	Symbol	check_sljit_emit_op2		1100643						
ANR	1100877	Symbol	IMM_OP		1100643						
ANR	1100878	Symbol	CUMULATIVE_OP		1100643						
ANR	1100879	Symbol	flags		1100643						
ANR	1100880	Symbol	SLJIT_SUCCESS		1100643						
ANR	1100881	Symbol	SET_FLAGS		1100643						
ANR	1100882	Symbol	GET_FLAGS		1100643						
ANR	1100883	Symbol	GET_OPCODE		1100643						
ANR	1100884	Symbol	SLJIT_IMM		1100643						
ANR	1100885	Symbol	src1		1100643						
ANR	1100886	Symbol	src2		1100643						
ANR	1100887	Symbol	compiler		1100643						
ANR	1100888	Symbol	dstw		1100643						
ANR	1100889	Symbol	emit_op		1100643						
ANR	1100890	Function	sljit_get_register_index	917:0:30013:30165							
ANR	1100891	FunctionDef	sljit_get_register_index (sljit_si reg)		1100890	0					
ANR	1100892	CompoundStatement		918:0:30086:30165	1100890	0					
ANR	1100893	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	919:1:30089:30141	1100890	0	True				
ANR	1100894	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1100890	0					
ANR	1100895	Callee	CHECK_REG_INDEX		1100890	0					
ANR	1100896	Identifier	CHECK_REG_INDEX		1100890	0					
ANR	1100897	ArgumentList	check_sljit_get_register_index ( reg )		1100890	1					
ANR	1100898	Argument	check_sljit_get_register_index ( reg )		1100890	0					
ANR	1100899	CallExpression	check_sljit_get_register_index ( reg )		1100890	0					
ANR	1100900	Callee	check_sljit_get_register_index		1100890	0					
ANR	1100901	Identifier	check_sljit_get_register_index		1100890	0					
ANR	1100902	ArgumentList	reg		1100890	1					
ANR	1100903	Argument	reg		1100890	0					
ANR	1100904	Identifier	reg		1100890	0					
ANR	1100905	ReturnStatement	return reg_map [ reg ] ;	920:1:30144:30163	1100890	1	True				
ANR	1100906	ArrayIndexing	reg_map [ reg ]		1100890	0					
ANR	1100907	Identifier	reg_map		1100890	0					
ANR	1100908	Identifier	reg		1100890	1					
ANR	1100909	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1100890	1					
ANR	1100910	Identifier	sljit_get_register_index		1100890	2					
ANR	1100911	ParameterList	sljit_si reg		1100890	3					
ANR	1100912	Parameter	sljit_si reg	917:59:30072:30083	1100890	0	True				
ANR	1100913	ParameterType	sljit_si		1100890	0					
ANR	1100914	Identifier	reg		1100890	1					
ANR	1100915	CFGEntryNode	ENTRY		1100890		True				
ANR	1100916	CFGExitNode	EXIT		1100890		True				
ANR	1100917	Symbol	reg		1100890						
ANR	1100918	Symbol	reg_map		1100890						
ANR	1100919	Symbol	* reg_map		1100890						
ANR	1100920	Symbol	* reg		1100890						
ANR	1100921	Symbol	check_sljit_get_register_index		1100890						
ANR	1100922	Function	sljit_get_float_register_index	923:0:30168:30328							
ANR	1100923	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1100922	0					
ANR	1100924	CompoundStatement		924:0:30247:30328	1100922	0					
ANR	1100925	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	925:1:30250:30308	1100922	0	True				
ANR	1100926	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1100922	0					
ANR	1100927	Callee	CHECK_REG_INDEX		1100922	0					
ANR	1100928	Identifier	CHECK_REG_INDEX		1100922	0					
ANR	1100929	ArgumentList	check_sljit_get_float_register_index ( reg )		1100922	1					
ANR	1100930	Argument	check_sljit_get_float_register_index ( reg )		1100922	0					
ANR	1100931	CallExpression	check_sljit_get_float_register_index ( reg )		1100922	0					
ANR	1100932	Callee	check_sljit_get_float_register_index		1100922	0					
ANR	1100933	Identifier	check_sljit_get_float_register_index		1100922	0					
ANR	1100934	ArgumentList	reg		1100922	1					
ANR	1100935	Argument	reg		1100922	0					
ANR	1100936	Identifier	reg		1100922	0					
ANR	1100937	ReturnStatement	return reg << 1 ;	926:1:30311:30326	1100922	1	True				
ANR	1100938	ShiftExpression	reg << 1		1100922	0		<<			
ANR	1100939	Identifier	reg		1100922	0					
ANR	1100940	PrimaryExpression	1		1100922	1					
ANR	1100941	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1100922	1					
ANR	1100942	Identifier	sljit_get_float_register_index		1100922	2					
ANR	1100943	ParameterList	sljit_si reg		1100922	3					
ANR	1100944	Parameter	sljit_si reg	923:65:30233:30244	1100922	0	True				
ANR	1100945	ParameterType	sljit_si		1100922	0					
ANR	1100946	Identifier	reg		1100922	1					
ANR	1100947	CFGEntryNode	ENTRY		1100922		True				
ANR	1100948	CFGExitNode	EXIT		1100922		True				
ANR	1100949	Symbol	reg		1100922						
ANR	1100950	Symbol	check_sljit_get_float_register_index		1100922						
ANR	1100951	Function	sljit_emit_op_custom	929:0:30331:30608							
ANR	1100952	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1100951	0					
ANR	1100953	CompoundStatement		931:0:30454:30608	1100951	0					
ANR	1100954	ExpressionStatement	CHECK_ERROR ( )	932:1:30457:30470	1100951	0	True				
ANR	1100955	CallExpression	CHECK_ERROR ( )		1100951	0					
ANR	1100956	Callee	CHECK_ERROR		1100951	0					
ANR	1100957	Identifier	CHECK_ERROR		1100951	0					
ANR	1100958	ArgumentList			1100951	1					
ANR	1100959	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	933:1:30473:30535	1100951	1	True				
ANR	1100960	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1100951	0					
ANR	1100961	Callee	CHECK		1100951	0					
ANR	1100962	Identifier	CHECK		1100951	0					
ANR	1100963	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1100951	1					
ANR	1100964	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1100951	0					
ANR	1100965	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1100951	0					
ANR	1100966	Callee	check_sljit_emit_op_custom		1100951	0					
ANR	1100967	Identifier	check_sljit_emit_op_custom		1100951	0					
ANR	1100968	ArgumentList	compiler		1100951	1					
ANR	1100969	Argument	compiler		1100951	0					
ANR	1100970	Identifier	compiler		1100951	0					
ANR	1100971	Argument	instruction		1100951	1					
ANR	1100972	Identifier	instruction		1100951	0					
ANR	1100973	Argument	size		1100951	2					
ANR	1100974	Identifier	size		1100951	0					
ANR	1100975	ReturnStatement	"return push_inst ( compiler , * ( sljit_ins * ) instruction , UNMOVABLE_INS ) ;"	935:1:30539:30606	1100951	2	True				
ANR	1100976	CallExpression	"push_inst ( compiler , * ( sljit_ins * ) instruction , UNMOVABLE_INS )"		1100951	0					
ANR	1100977	Callee	push_inst		1100951	0					
ANR	1100978	Identifier	push_inst		1100951	0					
ANR	1100979	ArgumentList	compiler		1100951	1					
ANR	1100980	Argument	compiler		1100951	0					
ANR	1100981	Identifier	compiler		1100951	0					
ANR	1100982	Argument	* ( sljit_ins * ) instruction		1100951	1					
ANR	1100983	UnaryOperationExpression	* ( sljit_ins * ) instruction		1100951	0					
ANR	1100984	UnaryOperator	*		1100951	0					
ANR	1100985	CastExpression	( sljit_ins * ) instruction		1100951	1					
ANR	1100986	CastTarget	sljit_ins *		1100951	0					
ANR	1100987	Identifier	instruction		1100951	1					
ANR	1100988	Argument	UNMOVABLE_INS		1100951	2					
ANR	1100989	Identifier	UNMOVABLE_INS		1100951	0					
ANR	1100990	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1100951	1					
ANR	1100991	Identifier	sljit_emit_op_custom		1100951	2					
ANR	1100992	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1100951	3					
ANR	1100993	Parameter	struct sljit_compiler * compiler	929:55:30386:30416	1100951	0	True				
ANR	1100994	ParameterType	struct sljit_compiler *		1100951	0					
ANR	1100995	Identifier	compiler		1100951	1					
ANR	1100996	Parameter	void * instruction	930:1:30420:30436	1100951	1	True				
ANR	1100997	ParameterType	void *		1100951	0					
ANR	1100998	Identifier	instruction		1100951	1					
ANR	1100999	Parameter	sljit_si size	930:20:30439:30451	1100951	2	True				
ANR	1101000	ParameterType	sljit_si		1100951	0					
ANR	1101001	Identifier	size		1100951	1					
ANR	1101002	CFGEntryNode	ENTRY		1100951		True				
ANR	1101003	CFGExitNode	EXIT		1100951		True				
ANR	1101004	Symbol	push_inst		1100951						
ANR	1101005	Symbol	size		1100951						
ANR	1101006	Symbol	* instruction		1100951						
ANR	1101007	Symbol	* ( sljit_ins * ) instruction		1100951						
ANR	1101008	Symbol	instruction		1100951						
ANR	1101009	Symbol	check_sljit_emit_op_custom		1100951						
ANR	1101010	Symbol	UNMOVABLE_INS		1100951						
ANR	1101011	Symbol	compiler		1100951						
ANR	1101012	Function	sljit_is_fpu_available	942:0:30840:31020							
ANR	1101013	FunctionDef	sljit_is_fpu_available ()		1101012	0					
ANR	1101014	CompoundStatement		943:0:30903:31020	1101012	0					
ANR	1101015	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	945:1:30936:30965	1101012	0	True				
ANR	1101016	Identifier	SLJIT_IS_FPU_AVAILABLE		1101012	0					
ANR	1101017	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1101012	1					
ANR	1101018	Identifier	sljit_is_fpu_available		1101012	2					
ANR	1101019	ParameterList			1101012	3					
ANR	1101020	CFGEntryNode	ENTRY		1101012		True				
ANR	1101021	CFGExitNode	EXIT		1101012		True				
ANR	1101022	Symbol	SLJIT_IS_FPU_AVAILABLE		1101012						
ANR	1101023	Function	sljit_emit_fop1_convw_fromd	956:0:31228:32158							
ANR	1101024	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1101023	0					
ANR	1101025	CompoundStatement		959:0:31391:32158	1101023	0					
ANR	1101026	IfStatement	if ( src & SLJIT_MEM )		1101023	0					
ANR	1101027	Condition	src & SLJIT_MEM	960:5:31398:31412	1101023	0	True				
ANR	1101028	BitAndExpression	src & SLJIT_MEM		1101023	0		&			
ANR	1101029	Identifier	src		1101023	0					
ANR	1101030	Identifier	SLJIT_MEM		1101023	1					
ANR	1101031	CompoundStatement		2:22:23:23	1101023	1					
ANR	1101032	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	961:2:31419:31511	1101023	0	True				
ANR	1101033	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1101023	0					
ANR	1101034	Callee	FAIL_IF		1101023	0					
ANR	1101035	Identifier	FAIL_IF		1101023	0					
ANR	1101036	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101023	1					
ANR	1101037	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101023	0					
ANR	1101038	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101023	0					
ANR	1101039	Callee	emit_op_mem2		1101023	0					
ANR	1101040	Identifier	emit_op_mem2		1101023	0					
ANR	1101041	ArgumentList	compiler		1101023	1					
ANR	1101042	Argument	compiler		1101023	0					
ANR	1101043	Identifier	compiler		1101023	0					
ANR	1101044	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1101023	1					
ANR	1101045	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1101023	0		|			
ANR	1101046	CallExpression	FLOAT_DATA ( op )		1101023	0					
ANR	1101047	Callee	FLOAT_DATA		1101023	0					
ANR	1101048	Identifier	FLOAT_DATA		1101023	0					
ANR	1101049	ArgumentList	op		1101023	1					
ANR	1101050	Argument	op		1101023	0					
ANR	1101051	Identifier	op		1101023	0					
ANR	1101052	Identifier	LOAD_DATA		1101023	1					
ANR	1101053	Argument	TMP_FREG1		1101023	2					
ANR	1101054	Identifier	TMP_FREG1		1101023	0					
ANR	1101055	Argument	src		1101023	3					
ANR	1101056	Identifier	src		1101023	0					
ANR	1101057	Argument	srcw		1101023	4					
ANR	1101058	Identifier	srcw		1101023	0					
ANR	1101059	Argument	dst		1101023	5					
ANR	1101060	Identifier	dst		1101023	0					
ANR	1101061	Argument	dstw		1101023	6					
ANR	1101062	Identifier	dstw		1101023	0					
ANR	1101063	ExpressionStatement	src = TMP_FREG1	962:2:31515:31530	1101023	1	True				
ANR	1101064	AssignmentExpression	src = TMP_FREG1		1101023	0		=			
ANR	1101065	Identifier	src		1101023	0					
ANR	1101066	Identifier	TMP_FREG1		1101023	1					
ANR	1101067	ElseStatement	else		1101023	0					
ANR	1101068	ExpressionStatement	src <<= 1	965:2:31543:31552	1101023	0	True				
ANR	1101069	AssignmentExpression	src <<= 1		1101023	0		<<=			
ANR	1101070	Identifier	src		1101023	0					
ANR	1101071	PrimaryExpression	1		1101023	1					
ANR	1101072	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src ) , MOVABLE_INS ) )"	967:1:31556:31654	1101023	1	True				
ANR	1101073	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src ) , MOVABLE_INS ) )"		1101023	0					
ANR	1101074	Callee	FAIL_IF		1101023	0					
ANR	1101075	Identifier	FAIL_IF		1101023	0					
ANR	1101076	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src ) , MOVABLE_INS )"		1101023	1					
ANR	1101077	Argument	"push_inst ( compiler , SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src ) , MOVABLE_INS )"		1101023	0					
ANR	1101078	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src ) , MOVABLE_INS )"		1101023	0					
ANR	1101079	Callee	push_inst		1101023	0					
ANR	1101080	Identifier	push_inst		1101023	0					
ANR	1101081	ArgumentList	compiler		1101023	1					
ANR	1101082	Argument	compiler		1101023	0					
ANR	1101083	Identifier	compiler		1101023	0					
ANR	1101084	Argument	"SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src )"		1101023	1					
ANR	1101085	InclusiveOrExpression	"SELECT_FOP ( op , FSTOI , FDTOI ) | DA ( TMP_FREG1 ) | S2A ( src )"		1101023	0		|			
ANR	1101086	CallExpression	"SELECT_FOP ( op , FSTOI , FDTOI )"		1101023	0					
ANR	1101087	Callee	SELECT_FOP		1101023	0					
ANR	1101088	Identifier	SELECT_FOP		1101023	0					
ANR	1101089	ArgumentList	op		1101023	1					
ANR	1101090	Argument	op		1101023	0					
ANR	1101091	Identifier	op		1101023	0					
ANR	1101092	Argument	FSTOI		1101023	1					
ANR	1101093	Identifier	FSTOI		1101023	0					
ANR	1101094	Argument	FDTOI		1101023	2					
ANR	1101095	Identifier	FDTOI		1101023	0					
ANR	1101096	InclusiveOrExpression	DA ( TMP_FREG1 ) | S2A ( src )		1101023	1		|			
ANR	1101097	CallExpression	DA ( TMP_FREG1 )		1101023	0					
ANR	1101098	Callee	DA		1101023	0					
ANR	1101099	Identifier	DA		1101023	0					
ANR	1101100	ArgumentList	TMP_FREG1		1101023	1					
ANR	1101101	Argument	TMP_FREG1		1101023	0					
ANR	1101102	Identifier	TMP_FREG1		1101023	0					
ANR	1101103	CallExpression	S2A ( src )		1101023	1					
ANR	1101104	Callee	S2A		1101023	0					
ANR	1101105	Identifier	S2A		1101023	0					
ANR	1101106	ArgumentList	src		1101023	1					
ANR	1101107	Argument	src		1101023	0					
ANR	1101108	Identifier	src		1101023	0					
ANR	1101109	Argument	MOVABLE_INS		1101023	2					
ANR	1101110	Identifier	MOVABLE_INS		1101023	0					
ANR	1101111	IfStatement	if ( dst == SLJIT_UNUSED )		1101023	2					
ANR	1101112	Condition	dst == SLJIT_UNUSED	969:5:31662:31680	1101023	0	True				
ANR	1101113	EqualityExpression	dst == SLJIT_UNUSED		1101023	0		==			
ANR	1101114	Identifier	dst		1101023	0					
ANR	1101115	Identifier	SLJIT_UNUSED		1101023	1					
ANR	1101116	ReturnStatement	return SLJIT_SUCCESS ;	970:2:31685:31705	1101023	1	True				
ANR	1101117	Identifier	SLJIT_SUCCESS		1101023	0					
ANR	1101118	IfStatement	if ( FAST_IS_REG ( dst ) )		1101023	3					
ANR	1101119	Condition	FAST_IS_REG ( dst )	972:5:31713:31728	1101023	0	True				
ANR	1101120	CallExpression	FAST_IS_REG ( dst )		1101023	0					
ANR	1101121	Callee	FAST_IS_REG		1101023	0					
ANR	1101122	Identifier	FAST_IS_REG		1101023	0					
ANR	1101123	ArgumentList	dst		1101023	1					
ANR	1101124	Argument	dst		1101023	0					
ANR	1101125	Identifier	dst		1101023	0					
ANR	1101126	CompoundStatement		14:23:339:339	1101023	1					
ANR	1101127	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	973:2:31735:31878	1101023	0	True				
ANR	1101128	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1101023	0					
ANR	1101129	Callee	FAIL_IF		1101023	0					
ANR	1101130	Identifier	FAIL_IF		1101023	0					
ANR	1101131	ArgumentList	"emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101023	1					
ANR	1101132	Argument	"emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101023	0					
ANR	1101133	CallExpression	"emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101023	0					
ANR	1101134	Callee	emit_op_mem2		1101023	0					
ANR	1101135	Identifier	emit_op_mem2		1101023	0					
ANR	1101136	ArgumentList	compiler		1101023	1					
ANR	1101137	Argument	compiler		1101023	0					
ANR	1101138	Identifier	compiler		1101023	0					
ANR	1101139	Argument	SINGLE_DATA		1101023	1					
ANR	1101140	Identifier	SINGLE_DATA		1101023	0					
ANR	1101141	Argument	TMP_FREG1		1101023	2					
ANR	1101142	Identifier	TMP_FREG1		1101023	0					
ANR	1101143	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101023	3					
ANR	1101144	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101023	0					
ANR	1101145	Callee	SLJIT_MEM1		1101023	0					
ANR	1101146	Identifier	SLJIT_MEM1		1101023	0					
ANR	1101147	ArgumentList	SLJIT_SP		1101023	1					
ANR	1101148	Argument	SLJIT_SP		1101023	0					
ANR	1101149	Identifier	SLJIT_SP		1101023	0					
ANR	1101150	Argument	FLOAT_TMP_MEM_OFFSET		1101023	4					
ANR	1101151	Identifier	FLOAT_TMP_MEM_OFFSET		1101023	0					
ANR	1101152	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101023	5					
ANR	1101153	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101023	0					
ANR	1101154	Callee	SLJIT_MEM1		1101023	0					
ANR	1101155	Identifier	SLJIT_MEM1		1101023	0					
ANR	1101156	ArgumentList	SLJIT_SP		1101023	1					
ANR	1101157	Argument	SLJIT_SP		1101023	0					
ANR	1101158	Identifier	SLJIT_SP		1101023	0					
ANR	1101159	Argument	FLOAT_TMP_MEM_OFFSET		1101023	6					
ANR	1101160	Identifier	FLOAT_TMP_MEM_OFFSET		1101023	0					
ANR	1101161	ReturnStatement	"return emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) ;"	974:2:31882:32027	1101023	1	True				
ANR	1101162	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101023	0					
ANR	1101163	Callee	emit_op_mem2		1101023	0					
ANR	1101164	Identifier	emit_op_mem2		1101023	0					
ANR	1101165	ArgumentList	compiler		1101023	1					
ANR	1101166	Argument	compiler		1101023	0					
ANR	1101167	Identifier	compiler		1101023	0					
ANR	1101168	Argument	WORD_DATA | LOAD_DATA		1101023	1					
ANR	1101169	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1101023	0		|			
ANR	1101170	Identifier	WORD_DATA		1101023	0					
ANR	1101171	Identifier	LOAD_DATA		1101023	1					
ANR	1101172	Argument	dst		1101023	2					
ANR	1101173	Identifier	dst		1101023	0					
ANR	1101174	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101023	3					
ANR	1101175	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101023	0					
ANR	1101176	Callee	SLJIT_MEM1		1101023	0					
ANR	1101177	Identifier	SLJIT_MEM1		1101023	0					
ANR	1101178	ArgumentList	SLJIT_SP		1101023	1					
ANR	1101179	Argument	SLJIT_SP		1101023	0					
ANR	1101180	Identifier	SLJIT_SP		1101023	0					
ANR	1101181	Argument	FLOAT_TMP_MEM_OFFSET		1101023	4					
ANR	1101182	Identifier	FLOAT_TMP_MEM_OFFSET		1101023	0					
ANR	1101183	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101023	5					
ANR	1101184	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101023	0					
ANR	1101185	Callee	SLJIT_MEM1		1101023	0					
ANR	1101186	Identifier	SLJIT_MEM1		1101023	0					
ANR	1101187	ArgumentList	SLJIT_SP		1101023	1					
ANR	1101188	Argument	SLJIT_SP		1101023	0					
ANR	1101189	Identifier	SLJIT_SP		1101023	0					
ANR	1101190	Argument	FLOAT_TMP_MEM_OFFSET		1101023	6					
ANR	1101191	Identifier	FLOAT_TMP_MEM_OFFSET		1101023	0					
ANR	1101192	ReturnStatement	"return emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	978:1:32086:32156	1101023	4	True				
ANR	1101193	CallExpression	"emit_op_mem2 ( compiler , SINGLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 )"		1101023	0					
ANR	1101194	Callee	emit_op_mem2		1101023	0					
ANR	1101195	Identifier	emit_op_mem2		1101023	0					
ANR	1101196	ArgumentList	compiler		1101023	1					
ANR	1101197	Argument	compiler		1101023	0					
ANR	1101198	Identifier	compiler		1101023	0					
ANR	1101199	Argument	SINGLE_DATA		1101023	1					
ANR	1101200	Identifier	SINGLE_DATA		1101023	0					
ANR	1101201	Argument	TMP_FREG1		1101023	2					
ANR	1101202	Identifier	TMP_FREG1		1101023	0					
ANR	1101203	Argument	dst		1101023	3					
ANR	1101204	Identifier	dst		1101023	0					
ANR	1101205	Argument	dstw		1101023	4					
ANR	1101206	Identifier	dstw		1101023	0					
ANR	1101207	Argument	0		1101023	5					
ANR	1101208	PrimaryExpression	0		1101023	0					
ANR	1101209	Argument	0		1101023	6					
ANR	1101210	PrimaryExpression	0		1101023	0					
ANR	1101211	ReturnType	static SLJIT_INLINE sljit_si		1101023	1					
ANR	1101212	Identifier	sljit_emit_fop1_convw_fromd		1101023	2					
ANR	1101213	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1101023	3					
ANR	1101214	Parameter	struct sljit_compiler * compiler	956:57:31285:31315	1101023	0	True				
ANR	1101215	ParameterType	struct sljit_compiler *		1101023	0					
ANR	1101216	Identifier	compiler		1101023	1					
ANR	1101217	Parameter	sljit_si op	956:90:31318:31328	1101023	1	True				
ANR	1101218	ParameterType	sljit_si		1101023	0					
ANR	1101219	Identifier	op		1101023	1					
ANR	1101220	Parameter	sljit_si dst	957:1:31332:31343	1101023	2	True				
ANR	1101221	ParameterType	sljit_si		1101023	0					
ANR	1101222	Identifier	dst		1101023	1					
ANR	1101223	Parameter	sljit_sw dstw	957:15:31346:31358	1101023	3	True				
ANR	1101224	ParameterType	sljit_sw		1101023	0					
ANR	1101225	Identifier	dstw		1101023	1					
ANR	1101226	Parameter	sljit_si src	958:1:31362:31373	1101023	4	True				
ANR	1101227	ParameterType	sljit_si		1101023	0					
ANR	1101228	Identifier	src		1101023	1					
ANR	1101229	Parameter	sljit_sw srcw	958:15:31376:31388	1101023	5	True				
ANR	1101230	ParameterType	sljit_sw		1101023	0					
ANR	1101231	Identifier	srcw		1101023	1					
ANR	1101232	CFGEntryNode	ENTRY		1101023		True				
ANR	1101233	CFGExitNode	EXIT		1101023		True				
ANR	1101234	Symbol	FSTOI		1101023						
ANR	1101235	Symbol	dst		1101023						
ANR	1101236	Symbol	LOAD_DATA		1101023						
ANR	1101237	Symbol	FLOAT_DATA		1101023						
ANR	1101238	Symbol	TMP_FREG1		1101023						
ANR	1101239	Symbol	SLJIT_MEM		1101023						
ANR	1101240	Symbol	FDTOI		1101023						
ANR	1101241	Symbol	SLJIT_SP		1101023						
ANR	1101242	Symbol	SINGLE_DATA		1101023						
ANR	1101243	Symbol	FLOAT_TMP_MEM_OFFSET		1101023						
ANR	1101244	Symbol	compiler		1101023						
ANR	1101245	Symbol	WORD_DATA		1101023						
ANR	1101246	Symbol	op		1101023						
ANR	1101247	Symbol	push_inst		1101023						
ANR	1101248	Symbol	S2A		1101023						
ANR	1101249	Symbol	FAST_IS_REG		1101023						
ANR	1101250	Symbol	src		1101023						
ANR	1101251	Symbol	srcw		1101023						
ANR	1101252	Symbol	emit_op_mem2		1101023						
ANR	1101253	Symbol	SLJIT_SUCCESS		1101023						
ANR	1101254	Symbol	SLJIT_MEM1		1101023						
ANR	1101255	Symbol	SELECT_FOP		1101023						
ANR	1101256	Symbol	SLJIT_UNUSED		1101023						
ANR	1101257	Symbol	MOVABLE_INS		1101023						
ANR	1101258	Symbol	dstw		1101023						
ANR	1101259	Symbol	DA		1101023						
ANR	1101260	Function	sljit_emit_fop1_convd_fromw	981:0:32161:33179							
ANR	1101261	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1101260	0					
ANR	1101262	CompoundStatement		984:0:32324:33179	1101260	0					
ANR	1101263	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1 ;	985:1:32327:32385	1101260	0	True				
ANR	1101264	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1101260	0					
ANR	1101265	IdentifierDeclType	sljit_si		1101260	0					
ANR	1101266	Identifier	dst_r		1101260	1					
ANR	1101267	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1101260	2		=			
ANR	1101268	Identifier	dst_r		1101260	0					
ANR	1101269	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1101260	1					
ANR	1101270	Condition	FAST_IS_REG ( dst )		1101260	0					
ANR	1101271	CallExpression	FAST_IS_REG ( dst )		1101260	0					
ANR	1101272	Callee	FAST_IS_REG		1101260	0					
ANR	1101273	Identifier	FAST_IS_REG		1101260	0					
ANR	1101274	ArgumentList	dst		1101260	1					
ANR	1101275	Argument	dst		1101260	0					
ANR	1101276	Identifier	dst		1101260	0					
ANR	1101277	ShiftExpression	dst << 1		1101260	1		<<			
ANR	1101278	Identifier	dst		1101260	0					
ANR	1101279	PrimaryExpression	1		1101260	1					
ANR	1101280	Identifier	TMP_FREG1		1101260	2					
ANR	1101281	IfStatement	if ( src & SLJIT_IMM )		1101260	1					
ANR	1101282	Condition	src & SLJIT_IMM	987:5:32393:32407	1101260	0	True				
ANR	1101283	BitAndExpression	src & SLJIT_IMM		1101260	0		&			
ANR	1101284	Identifier	src		1101260	0					
ANR	1101285	Identifier	SLJIT_IMM		1101260	1					
ANR	1101286	CompoundStatement		4:22:85:85	1101260	1					
ANR	1101287	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1101260	0					
ANR	1101288	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	989:6:32475:32509	1101260	0	True				
ANR	1101289	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1101260	0		==			
ANR	1101290	CallExpression	GET_OPCODE ( op )		1101260	0					
ANR	1101291	Callee	GET_OPCODE		1101260	0					
ANR	1101292	Identifier	GET_OPCODE		1101260	0					
ANR	1101293	ArgumentList	op		1101260	1					
ANR	1101294	Argument	op		1101260	0					
ANR	1101295	Identifier	op		1101260	0					
ANR	1101296	Identifier	SLJIT_CONVD_FROMI		1101260	1					
ANR	1101297	ExpressionStatement	srcw = ( sljit_si ) srcw	990:3:32515:32536	1101260	1	True				
ANR	1101298	AssignmentExpression	srcw = ( sljit_si ) srcw		1101260	0		=			
ANR	1101299	Identifier	srcw		1101260	0					
ANR	1101300	CastExpression	( sljit_si ) srcw		1101260	1					
ANR	1101301	CastTarget	sljit_si		1101260	0					
ANR	1101302	Identifier	srcw		1101260	1					
ANR	1101303	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	992:2:32547:32596	1101260	1	True				
ANR	1101304	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1101260	0					
ANR	1101305	Callee	FAIL_IF		1101260	0					
ANR	1101306	Identifier	FAIL_IF		1101260	0					
ANR	1101307	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1101260	1					
ANR	1101308	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1101260	0					
ANR	1101309	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1101260	0					
ANR	1101310	Callee	load_immediate		1101260	0					
ANR	1101311	Identifier	load_immediate		1101260	0					
ANR	1101312	ArgumentList	compiler		1101260	1					
ANR	1101313	Argument	compiler		1101260	0					
ANR	1101314	Identifier	compiler		1101260	0					
ANR	1101315	Argument	TMP_REG1		1101260	1					
ANR	1101316	Identifier	TMP_REG1		1101260	0					
ANR	1101317	Argument	srcw		1101260	2					
ANR	1101318	Identifier	srcw		1101260	0					
ANR	1101319	ExpressionStatement	src = TMP_REG1	993:2:32600:32614	1101260	2	True				
ANR	1101320	AssignmentExpression	src = TMP_REG1		1101260	0		=			
ANR	1101321	Identifier	src		1101260	0					
ANR	1101322	Identifier	TMP_REG1		1101260	1					
ANR	1101323	ExpressionStatement	srcw = 0	994:2:32618:32626	1101260	3	True				
ANR	1101324	AssignmentExpression	srcw = 0		1101260	0		=			
ANR	1101325	Identifier	srcw		1101260	0					
ANR	1101326	PrimaryExpression	0		1101260	1					
ANR	1101327	IfStatement	if ( FAST_IS_REG ( src ) )		1101260	2					
ANR	1101328	Condition	FAST_IS_REG ( src )	997:5:32637:32652	1101260	0	True				
ANR	1101329	CallExpression	FAST_IS_REG ( src )		1101260	0					
ANR	1101330	Callee	FAST_IS_REG		1101260	0					
ANR	1101331	Identifier	FAST_IS_REG		1101260	0					
ANR	1101332	ArgumentList	src		1101260	1					
ANR	1101333	Argument	src		1101260	0					
ANR	1101334	Identifier	src		1101260	0					
ANR	1101335	CompoundStatement		14:23:330:330	1101260	1					
ANR	1101336	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	998:2:32659:32794	1101260	0	True				
ANR	1101337	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1101260	0					
ANR	1101338	Callee	FAIL_IF		1101260	0					
ANR	1101339	Identifier	FAIL_IF		1101260	0					
ANR	1101340	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101260	1					
ANR	1101341	Argument	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101260	0					
ANR	1101342	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1101260	0					
ANR	1101343	Callee	emit_op_mem2		1101260	0					
ANR	1101344	Identifier	emit_op_mem2		1101260	0					
ANR	1101345	ArgumentList	compiler		1101260	1					
ANR	1101346	Argument	compiler		1101260	0					
ANR	1101347	Identifier	compiler		1101260	0					
ANR	1101348	Argument	WORD_DATA		1101260	1					
ANR	1101349	Identifier	WORD_DATA		1101260	0					
ANR	1101350	Argument	src		1101260	2					
ANR	1101351	Identifier	src		1101260	0					
ANR	1101352	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101260	3					
ANR	1101353	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101260	0					
ANR	1101354	Callee	SLJIT_MEM1		1101260	0					
ANR	1101355	Identifier	SLJIT_MEM1		1101260	0					
ANR	1101356	ArgumentList	SLJIT_SP		1101260	1					
ANR	1101357	Argument	SLJIT_SP		1101260	0					
ANR	1101358	Identifier	SLJIT_SP		1101260	0					
ANR	1101359	Argument	FLOAT_TMP_MEM_OFFSET		1101260	4					
ANR	1101360	Identifier	FLOAT_TMP_MEM_OFFSET		1101260	0					
ANR	1101361	Argument	SLJIT_MEM1 ( SLJIT_SP )		1101260	5					
ANR	1101362	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101260	0					
ANR	1101363	Callee	SLJIT_MEM1		1101260	0					
ANR	1101364	Identifier	SLJIT_MEM1		1101260	0					
ANR	1101365	ArgumentList	SLJIT_SP		1101260	1					
ANR	1101366	Argument	SLJIT_SP		1101260	0					
ANR	1101367	Identifier	SLJIT_SP		1101260	0					
ANR	1101368	Argument	FLOAT_TMP_MEM_OFFSET		1101260	6					
ANR	1101369	Identifier	FLOAT_TMP_MEM_OFFSET		1101260	0					
ANR	1101370	ExpressionStatement	src = SLJIT_MEM1 ( SLJIT_SP )	999:2:32798:32824	1101260	1	True				
ANR	1101371	AssignmentExpression	src = SLJIT_MEM1 ( SLJIT_SP )		1101260	0		=			
ANR	1101372	Identifier	src		1101260	0					
ANR	1101373	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1101260	1					
ANR	1101374	Callee	SLJIT_MEM1		1101260	0					
ANR	1101375	Identifier	SLJIT_MEM1		1101260	0					
ANR	1101376	ArgumentList	SLJIT_SP		1101260	1					
ANR	1101377	Argument	SLJIT_SP		1101260	0					
ANR	1101378	Identifier	SLJIT_SP		1101260	0					
ANR	1101379	ExpressionStatement	srcw = FLOAT_TMP_MEM_OFFSET	1000:2:32828:32855	1101260	2	True				
ANR	1101380	AssignmentExpression	srcw = FLOAT_TMP_MEM_OFFSET		1101260	0		=			
ANR	1101381	Identifier	srcw		1101260	0					
ANR	1101382	Identifier	FLOAT_TMP_MEM_OFFSET		1101260	1					
ANR	1101383	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , SINGLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1003:1:32862:32951	1101260	3	True				
ANR	1101384	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , SINGLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1101260	0					
ANR	1101385	Callee	FAIL_IF		1101260	0					
ANR	1101386	Identifier	FAIL_IF		1101260	0					
ANR	1101387	ArgumentList	"emit_op_mem2 ( compiler , SINGLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101260	1					
ANR	1101388	Argument	"emit_op_mem2 ( compiler , SINGLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101260	0					
ANR	1101389	CallExpression	"emit_op_mem2 ( compiler , SINGLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1101260	0					
ANR	1101390	Callee	emit_op_mem2		1101260	0					
ANR	1101391	Identifier	emit_op_mem2		1101260	0					
ANR	1101392	ArgumentList	compiler		1101260	1					
ANR	1101393	Argument	compiler		1101260	0					
ANR	1101394	Identifier	compiler		1101260	0					
ANR	1101395	Argument	SINGLE_DATA | LOAD_DATA		1101260	1					
ANR	1101396	InclusiveOrExpression	SINGLE_DATA | LOAD_DATA		1101260	0		|			
ANR	1101397	Identifier	SINGLE_DATA		1101260	0					
ANR	1101398	Identifier	LOAD_DATA		1101260	1					
ANR	1101399	Argument	TMP_FREG1		1101260	2					
ANR	1101400	Identifier	TMP_FREG1		1101260	0					
ANR	1101401	Argument	src		1101260	3					
ANR	1101402	Identifier	src		1101260	0					
ANR	1101403	Argument	srcw		1101260	4					
ANR	1101404	Identifier	srcw		1101260	0					
ANR	1101405	Argument	dst		1101260	5					
ANR	1101406	Identifier	dst		1101260	0					
ANR	1101407	Argument	dstw		1101260	6					
ANR	1101408	Identifier	dstw		1101260	0					
ANR	1101409	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 ) , MOVABLE_INS ) )"	1004:1:32954:33054	1101260	4	True				
ANR	1101410	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 ) , MOVABLE_INS ) )"		1101260	0					
ANR	1101411	Callee	FAIL_IF		1101260	0					
ANR	1101412	Identifier	FAIL_IF		1101260	0					
ANR	1101413	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 ) , MOVABLE_INS )"		1101260	1					
ANR	1101414	Argument	"push_inst ( compiler , SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 ) , MOVABLE_INS )"		1101260	0					
ANR	1101415	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 ) , MOVABLE_INS )"		1101260	0					
ANR	1101416	Callee	push_inst		1101260	0					
ANR	1101417	Identifier	push_inst		1101260	0					
ANR	1101418	ArgumentList	compiler		1101260	1					
ANR	1101419	Argument	compiler		1101260	0					
ANR	1101420	Identifier	compiler		1101260	0					
ANR	1101421	Argument	"SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 )"		1101260	1					
ANR	1101422	InclusiveOrExpression	"SELECT_FOP ( op , FITOS , FITOD ) | DA ( dst_r ) | S2A ( TMP_FREG1 )"		1101260	0		|			
ANR	1101423	CallExpression	"SELECT_FOP ( op , FITOS , FITOD )"		1101260	0					
ANR	1101424	Callee	SELECT_FOP		1101260	0					
ANR	1101425	Identifier	SELECT_FOP		1101260	0					
ANR	1101426	ArgumentList	op		1101260	1					
ANR	1101427	Argument	op		1101260	0					
ANR	1101428	Identifier	op		1101260	0					
ANR	1101429	Argument	FITOS		1101260	1					
ANR	1101430	Identifier	FITOS		1101260	0					
ANR	1101431	Argument	FITOD		1101260	2					
ANR	1101432	Identifier	FITOD		1101260	0					
ANR	1101433	InclusiveOrExpression	DA ( dst_r ) | S2A ( TMP_FREG1 )		1101260	1		|			
ANR	1101434	CallExpression	DA ( dst_r )		1101260	0					
ANR	1101435	Callee	DA		1101260	0					
ANR	1101436	Identifier	DA		1101260	0					
ANR	1101437	ArgumentList	dst_r		1101260	1					
ANR	1101438	Argument	dst_r		1101260	0					
ANR	1101439	Identifier	dst_r		1101260	0					
ANR	1101440	CallExpression	S2A ( TMP_FREG1 )		1101260	1					
ANR	1101441	Callee	S2A		1101260	0					
ANR	1101442	Identifier	S2A		1101260	0					
ANR	1101443	ArgumentList	TMP_FREG1		1101260	1					
ANR	1101444	Argument	TMP_FREG1		1101260	0					
ANR	1101445	Identifier	TMP_FREG1		1101260	0					
ANR	1101446	Argument	MOVABLE_INS		1101260	2					
ANR	1101447	Identifier	MOVABLE_INS		1101260	0					
ANR	1101448	IfStatement	if ( dst & SLJIT_MEM )		1101260	5					
ANR	1101449	Condition	dst & SLJIT_MEM	1006:5:33062:33076	1101260	0	True				
ANR	1101450	BitAndExpression	dst & SLJIT_MEM		1101260	0		&			
ANR	1101451	Identifier	dst		1101260	0					
ANR	1101452	Identifier	SLJIT_MEM		1101260	1					
ANR	1101453	ReturnStatement	"return emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1007:2:33081:33154	1101260	1	True				
ANR	1101454	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 )"		1101260	0					
ANR	1101455	Callee	emit_op_mem2		1101260	0					
ANR	1101456	Identifier	emit_op_mem2		1101260	0					
ANR	1101457	ArgumentList	compiler		1101260	1					
ANR	1101458	Argument	compiler		1101260	0					
ANR	1101459	Identifier	compiler		1101260	0					
ANR	1101460	Argument	FLOAT_DATA ( op )		1101260	1					
ANR	1101461	CallExpression	FLOAT_DATA ( op )		1101260	0					
ANR	1101462	Callee	FLOAT_DATA		1101260	0					
ANR	1101463	Identifier	FLOAT_DATA		1101260	0					
ANR	1101464	ArgumentList	op		1101260	1					
ANR	1101465	Argument	op		1101260	0					
ANR	1101466	Identifier	op		1101260	0					
ANR	1101467	Argument	TMP_FREG1		1101260	2					
ANR	1101468	Identifier	TMP_FREG1		1101260	0					
ANR	1101469	Argument	dst		1101260	3					
ANR	1101470	Identifier	dst		1101260	0					
ANR	1101471	Argument	dstw		1101260	4					
ANR	1101472	Identifier	dstw		1101260	0					
ANR	1101473	Argument	0		1101260	5					
ANR	1101474	PrimaryExpression	0		1101260	0					
ANR	1101475	Argument	0		1101260	6					
ANR	1101476	PrimaryExpression	0		1101260	0					
ANR	1101477	ReturnStatement	return SLJIT_SUCCESS ;	1008:1:33157:33177	1101260	6	True				
ANR	1101478	Identifier	SLJIT_SUCCESS		1101260	0					
ANR	1101479	ReturnType	static SLJIT_INLINE sljit_si		1101260	1					
ANR	1101480	Identifier	sljit_emit_fop1_convd_fromw		1101260	2					
ANR	1101481	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1101260	3					
ANR	1101482	Parameter	struct sljit_compiler * compiler	981:57:32218:32248	1101260	0	True				
ANR	1101483	ParameterType	struct sljit_compiler *		1101260	0					
ANR	1101484	Identifier	compiler		1101260	1					
ANR	1101485	Parameter	sljit_si op	981:90:32251:32261	1101260	1	True				
ANR	1101486	ParameterType	sljit_si		1101260	0					
ANR	1101487	Identifier	op		1101260	1					
ANR	1101488	Parameter	sljit_si dst	982:1:32265:32276	1101260	2	True				
ANR	1101489	ParameterType	sljit_si		1101260	0					
ANR	1101490	Identifier	dst		1101260	1					
ANR	1101491	Parameter	sljit_sw dstw	982:15:32279:32291	1101260	3	True				
ANR	1101492	ParameterType	sljit_sw		1101260	0					
ANR	1101493	Identifier	dstw		1101260	1					
ANR	1101494	Parameter	sljit_si src	983:1:32295:32306	1101260	4	True				
ANR	1101495	ParameterType	sljit_si		1101260	0					
ANR	1101496	Identifier	src		1101260	1					
ANR	1101497	Parameter	sljit_sw srcw	983:15:32309:32321	1101260	5	True				
ANR	1101498	ParameterType	sljit_sw		1101260	0					
ANR	1101499	Identifier	srcw		1101260	1					
ANR	1101500	CFGEntryNode	ENTRY		1101260		True				
ANR	1101501	CFGExitNode	EXIT		1101260		True				
ANR	1101502	Symbol	TMP_REG1		1101260						
ANR	1101503	Symbol	dst		1101260						
ANR	1101504	Symbol	LOAD_DATA		1101260						
ANR	1101505	Symbol	FLOAT_DATA		1101260						
ANR	1101506	Symbol	TMP_FREG1		1101260						
ANR	1101507	Symbol	SLJIT_MEM		1101260						
ANR	1101508	Symbol	SLJIT_SP		1101260						
ANR	1101509	Symbol	dst_r		1101260						
ANR	1101510	Symbol	GET_OPCODE		1101260						
ANR	1101511	Symbol	SLJIT_IMM		1101260						
ANR	1101512	Symbol	SLJIT_CONVD_FROMI		1101260						
ANR	1101513	Symbol	load_immediate		1101260						
ANR	1101514	Symbol	SINGLE_DATA		1101260						
ANR	1101515	Symbol	FLOAT_TMP_MEM_OFFSET		1101260						
ANR	1101516	Symbol	compiler		1101260						
ANR	1101517	Symbol	WORD_DATA		1101260						
ANR	1101518	Symbol	op		1101260						
ANR	1101519	Symbol	push_inst		1101260						
ANR	1101520	Symbol	FAST_IS_REG		1101260						
ANR	1101521	Symbol	S2A		1101260						
ANR	1101522	Symbol	src		1101260						
ANR	1101523	Symbol	srcw		1101260						
ANR	1101524	Symbol	emit_op_mem2		1101260						
ANR	1101525	Symbol	FITOS		1101260						
ANR	1101526	Symbol	SLJIT_SUCCESS		1101260						
ANR	1101527	Symbol	SLJIT_MEM1		1101260						
ANR	1101528	Symbol	SELECT_FOP		1101260						
ANR	1101529	Symbol	FITOD		1101260						
ANR	1101530	Symbol	MOVABLE_INS		1101260						
ANR	1101531	Symbol	dstw		1101260						
ANR	1101532	Symbol	DA		1101260						
ANR	1101533	Function	sljit_emit_fop1_cmp	1011:0:33182:33783							
ANR	1101534	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1101533	0					
ANR	1101535	CompoundStatement		1014:0:33341:33783	1101533	0					
ANR	1101536	IfStatement	if ( src1 & SLJIT_MEM )		1101533	0					
ANR	1101537	Condition	src1 & SLJIT_MEM	1015:5:33348:33363	1101533	0	True				
ANR	1101538	BitAndExpression	src1 & SLJIT_MEM		1101533	0		&			
ANR	1101539	Identifier	src1		1101533	0					
ANR	1101540	Identifier	SLJIT_MEM		1101533	1					
ANR	1101541	CompoundStatement		2:23:24:24	1101533	1					
ANR	1101542	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1016:2:33370:33466	1101533	0	True				
ANR	1101543	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1101533	0					
ANR	1101544	Callee	FAIL_IF		1101533	0					
ANR	1101545	Identifier	FAIL_IF		1101533	0					
ANR	1101546	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1101533	1					
ANR	1101547	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1101533	0					
ANR	1101548	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1101533	0					
ANR	1101549	Callee	emit_op_mem2		1101533	0					
ANR	1101550	Identifier	emit_op_mem2		1101533	0					
ANR	1101551	ArgumentList	compiler		1101533	1					
ANR	1101552	Argument	compiler		1101533	0					
ANR	1101553	Identifier	compiler		1101533	0					
ANR	1101554	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1101533	1					
ANR	1101555	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1101533	0		|			
ANR	1101556	CallExpression	FLOAT_DATA ( op )		1101533	0					
ANR	1101557	Callee	FLOAT_DATA		1101533	0					
ANR	1101558	Identifier	FLOAT_DATA		1101533	0					
ANR	1101559	ArgumentList	op		1101533	1					
ANR	1101560	Argument	op		1101533	0					
ANR	1101561	Identifier	op		1101533	0					
ANR	1101562	Identifier	LOAD_DATA		1101533	1					
ANR	1101563	Argument	TMP_FREG1		1101533	2					
ANR	1101564	Identifier	TMP_FREG1		1101533	0					
ANR	1101565	Argument	src1		1101533	3					
ANR	1101566	Identifier	src1		1101533	0					
ANR	1101567	Argument	src1w		1101533	4					
ANR	1101568	Identifier	src1w		1101533	0					
ANR	1101569	Argument	src2		1101533	5					
ANR	1101570	Identifier	src2		1101533	0					
ANR	1101571	Argument	src2w		1101533	6					
ANR	1101572	Identifier	src2w		1101533	0					
ANR	1101573	ExpressionStatement	src1 = TMP_FREG1	1017:2:33470:33486	1101533	1	True				
ANR	1101574	AssignmentExpression	src1 = TMP_FREG1		1101533	0		=			
ANR	1101575	Identifier	src1		1101533	0					
ANR	1101576	Identifier	TMP_FREG1		1101533	1					
ANR	1101577	ElseStatement	else		1101533	0					
ANR	1101578	ExpressionStatement	src1 <<= 1	1020:2:33499:33509	1101533	0	True				
ANR	1101579	AssignmentExpression	src1 <<= 1		1101533	0		<<=			
ANR	1101580	Identifier	src1		1101533	0					
ANR	1101581	PrimaryExpression	1		1101533	1					
ANR	1101582	IfStatement	if ( src2 & SLJIT_MEM )		1101533	1					
ANR	1101583	Condition	src2 & SLJIT_MEM	1022:5:33517:33532	1101533	0	True				
ANR	1101584	BitAndExpression	src2 & SLJIT_MEM		1101533	0		&			
ANR	1101585	Identifier	src2		1101533	0					
ANR	1101586	Identifier	SLJIT_MEM		1101533	1					
ANR	1101587	CompoundStatement		9:23:193:193	1101533	1					
ANR	1101588	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"	1023:2:33539:33628	1101533	0	True				
ANR	1101589	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"		1101533	0					
ANR	1101590	Callee	FAIL_IF		1101533	0					
ANR	1101591	Identifier	FAIL_IF		1101533	0					
ANR	1101592	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1101533	1					
ANR	1101593	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1101533	0					
ANR	1101594	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1101533	0					
ANR	1101595	Callee	emit_op_mem2		1101533	0					
ANR	1101596	Identifier	emit_op_mem2		1101533	0					
ANR	1101597	ArgumentList	compiler		1101533	1					
ANR	1101598	Argument	compiler		1101533	0					
ANR	1101599	Identifier	compiler		1101533	0					
ANR	1101600	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1101533	1					
ANR	1101601	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1101533	0		|			
ANR	1101602	CallExpression	FLOAT_DATA ( op )		1101533	0					
ANR	1101603	Callee	FLOAT_DATA		1101533	0					
ANR	1101604	Identifier	FLOAT_DATA		1101533	0					
ANR	1101605	ArgumentList	op		1101533	1					
ANR	1101606	Argument	op		1101533	0					
ANR	1101607	Identifier	op		1101533	0					
ANR	1101608	Identifier	LOAD_DATA		1101533	1					
ANR	1101609	Argument	TMP_FREG2		1101533	2					
ANR	1101610	Identifier	TMP_FREG2		1101533	0					
ANR	1101611	Argument	src2		1101533	3					
ANR	1101612	Identifier	src2		1101533	0					
ANR	1101613	Argument	src2w		1101533	4					
ANR	1101614	Identifier	src2w		1101533	0					
ANR	1101615	Argument	0		1101533	5					
ANR	1101616	PrimaryExpression	0		1101533	0					
ANR	1101617	Argument	0		1101533	6					
ANR	1101618	PrimaryExpression	0		1101533	0					
ANR	1101619	ExpressionStatement	src2 = TMP_FREG2	1024:2:33632:33648	1101533	1	True				
ANR	1101620	AssignmentExpression	src2 = TMP_FREG2		1101533	0		=			
ANR	1101621	Identifier	src2		1101533	0					
ANR	1101622	Identifier	TMP_FREG2		1101533	1					
ANR	1101623	ElseStatement	else		1101533	0					
ANR	1101624	ExpressionStatement	src2 <<= 1	1027:2:33661:33671	1101533	0	True				
ANR	1101625	AssignmentExpression	src2 <<= 1		1101533	0		<<=			
ANR	1101626	Identifier	src2		1101533	0					
ANR	1101627	PrimaryExpression	1		1101533	1					
ANR	1101628	ReturnStatement	"return push_inst ( compiler , SELECT_FOP ( op , FCMPS , FCMPD ) | S1A ( src1 ) | S2A ( src2 ) , FCC_IS_SET | MOVABLE_INS ) ;"	1029:1:33675:33781	1101533	2	True				
ANR	1101629	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FCMPS , FCMPD ) | S1A ( src1 ) | S2A ( src2 ) , FCC_IS_SET | MOVABLE_INS )"		1101533	0					
ANR	1101630	Callee	push_inst		1101533	0					
ANR	1101631	Identifier	push_inst		1101533	0					
ANR	1101632	ArgumentList	compiler		1101533	1					
ANR	1101633	Argument	compiler		1101533	0					
ANR	1101634	Identifier	compiler		1101533	0					
ANR	1101635	Argument	"SELECT_FOP ( op , FCMPS , FCMPD ) | S1A ( src1 ) | S2A ( src2 )"		1101533	1					
ANR	1101636	InclusiveOrExpression	"SELECT_FOP ( op , FCMPS , FCMPD ) | S1A ( src1 ) | S2A ( src2 )"		1101533	0		|			
ANR	1101637	CallExpression	"SELECT_FOP ( op , FCMPS , FCMPD )"		1101533	0					
ANR	1101638	Callee	SELECT_FOP		1101533	0					
ANR	1101639	Identifier	SELECT_FOP		1101533	0					
ANR	1101640	ArgumentList	op		1101533	1					
ANR	1101641	Argument	op		1101533	0					
ANR	1101642	Identifier	op		1101533	0					
ANR	1101643	Argument	FCMPS		1101533	1					
ANR	1101644	Identifier	FCMPS		1101533	0					
ANR	1101645	Argument	FCMPD		1101533	2					
ANR	1101646	Identifier	FCMPD		1101533	0					
ANR	1101647	InclusiveOrExpression	S1A ( src1 ) | S2A ( src2 )		1101533	1		|			
ANR	1101648	CallExpression	S1A ( src1 )		1101533	0					
ANR	1101649	Callee	S1A		1101533	0					
ANR	1101650	Identifier	S1A		1101533	0					
ANR	1101651	ArgumentList	src1		1101533	1					
ANR	1101652	Argument	src1		1101533	0					
ANR	1101653	Identifier	src1		1101533	0					
ANR	1101654	CallExpression	S2A ( src2 )		1101533	1					
ANR	1101655	Callee	S2A		1101533	0					
ANR	1101656	Identifier	S2A		1101533	0					
ANR	1101657	ArgumentList	src2		1101533	1					
ANR	1101658	Argument	src2		1101533	0					
ANR	1101659	Identifier	src2		1101533	0					
ANR	1101660	Argument	FCC_IS_SET | MOVABLE_INS		1101533	2					
ANR	1101661	InclusiveOrExpression	FCC_IS_SET | MOVABLE_INS		1101533	0		|			
ANR	1101662	Identifier	FCC_IS_SET		1101533	0					
ANR	1101663	Identifier	MOVABLE_INS		1101533	1					
ANR	1101664	ReturnType	static SLJIT_INLINE sljit_si		1101533	1					
ANR	1101665	Identifier	sljit_emit_fop1_cmp		1101533	2					
ANR	1101666	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1101533	3					
ANR	1101667	Parameter	struct sljit_compiler * compiler	1011:49:33231:33261	1101533	0	True				
ANR	1101668	ParameterType	struct sljit_compiler *		1101533	0					
ANR	1101669	Identifier	compiler		1101533	1					
ANR	1101670	Parameter	sljit_si op	1011:82:33264:33274	1101533	1	True				
ANR	1101671	ParameterType	sljit_si		1101533	0					
ANR	1101672	Identifier	op		1101533	1					
ANR	1101673	Parameter	sljit_si src1	1012:1:33278:33290	1101533	2	True				
ANR	1101674	ParameterType	sljit_si		1101533	0					
ANR	1101675	Identifier	src1		1101533	1					
ANR	1101676	Parameter	sljit_sw src1w	1012:16:33293:33306	1101533	3	True				
ANR	1101677	ParameterType	sljit_sw		1101533	0					
ANR	1101678	Identifier	src1w		1101533	1					
ANR	1101679	Parameter	sljit_si src2	1013:1:33310:33322	1101533	4	True				
ANR	1101680	ParameterType	sljit_si		1101533	0					
ANR	1101681	Identifier	src2		1101533	1					
ANR	1101682	Parameter	sljit_sw src2w	1013:16:33325:33338	1101533	5	True				
ANR	1101683	ParameterType	sljit_sw		1101533	0					
ANR	1101684	Identifier	src2w		1101533	1					
ANR	1101685	CFGEntryNode	ENTRY		1101533		True				
ANR	1101686	CFGExitNode	EXIT		1101533		True				
ANR	1101687	Symbol	src2w		1101533						
ANR	1101688	Symbol	op		1101533						
ANR	1101689	Symbol	push_inst		1101533						
ANR	1101690	Symbol	TMP_FREG2		1101533						
ANR	1101691	Symbol	S1A		1101533						
ANR	1101692	Symbol	src1w		1101533						
ANR	1101693	Symbol	S2A		1101533						
ANR	1101694	Symbol	LOAD_DATA		1101533						
ANR	1101695	Symbol	FLOAT_DATA		1101533						
ANR	1101696	Symbol	TMP_FREG1		1101533						
ANR	1101697	Symbol	SLJIT_MEM		1101533						
ANR	1101698	Symbol	emit_op_mem2		1101533						
ANR	1101699	Symbol	FCMPS		1101533						
ANR	1101700	Symbol	FCC_IS_SET		1101533						
ANR	1101701	Symbol	SELECT_FOP		1101533						
ANR	1101702	Symbol	src1		1101533						
ANR	1101703	Symbol	src2		1101533						
ANR	1101704	Symbol	compiler		1101533						
ANR	1101705	Symbol	MOVABLE_INS		1101533						
ANR	1101706	Symbol	FCMPD		1101533						
ANR	1101707	Function	sljit_emit_fop1	1032:0:33786:35563							
ANR	1101708	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1101707	0					
ANR	1101709	CompoundStatement		1035:0:33942:35563	1101707	0					
ANR	1101710	IdentifierDeclStatement	sljit_si dst_r ;	1036:1:33945:33959	1101707	0	True				
ANR	1101711	IdentifierDecl	dst_r		1101707	0					
ANR	1101712	IdentifierDeclType	sljit_si		1101707	0					
ANR	1101713	Identifier	dst_r		1101707	1					
ANR	1101714	ExpressionStatement	CHECK_ERROR ( )	1038:1:33963:33976	1101707	1	True				
ANR	1101715	CallExpression	CHECK_ERROR ( )		1101707	0					
ANR	1101716	Callee	CHECK_ERROR		1101707	0					
ANR	1101717	Identifier	CHECK_ERROR		1101707	0					
ANR	1101718	ArgumentList			1101707	1					
ANR	1101719	ExpressionStatement	compiler -> cache_arg = 0	1039:1:33979:34002	1101707	2	True				
ANR	1101720	AssignmentExpression	compiler -> cache_arg = 0		1101707	0		=			
ANR	1101721	PtrMemberAccess	compiler -> cache_arg		1101707	0					
ANR	1101722	Identifier	compiler		1101707	0					
ANR	1101723	Identifier	cache_arg		1101707	1					
ANR	1101724	PrimaryExpression	0		1101707	1					
ANR	1101725	ExpressionStatement	compiler -> cache_argw = 0	1040:1:34005:34029	1101707	3	True				
ANR	1101726	AssignmentExpression	compiler -> cache_argw = 0		1101707	0		=			
ANR	1101727	PtrMemberAccess	compiler -> cache_argw		1101707	0					
ANR	1101728	Identifier	compiler		1101707	0					
ANR	1101729	Identifier	cache_argw		1101707	1					
ANR	1101730	PrimaryExpression	0		1101707	1					
ANR	1101731	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 ) , float_transfer_bit_error )"	1042:1:34033:34131	1101707	4	True				
ANR	1101732	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 ) , float_transfer_bit_error )"		1101707	0					
ANR	1101733	Callee	SLJIT_COMPILE_ASSERT		1101707	0					
ANR	1101734	Identifier	SLJIT_COMPILE_ASSERT		1101707	0					
ANR	1101735	ArgumentList	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1101707	1					
ANR	1101736	Argument	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1101707	0					
ANR	1101737	AndExpression	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x2 )		1101707	0		&&			
ANR	1101738	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1101707	0		==			
ANR	1101739	Identifier	SLJIT_SINGLE_OP		1101707	0					
ANR	1101740	PrimaryExpression	0x100		1101707	1					
ANR	1101741	UnaryOperationExpression	! ( DOUBLE_DATA & 0x2 )		1101707	1					
ANR	1101742	UnaryOperator	!		1101707	0					
ANR	1101743	BitAndExpression	DOUBLE_DATA & 0x2		1101707	1		&			
ANR	1101744	Identifier	DOUBLE_DATA		1101707	0					
ANR	1101745	PrimaryExpression	0x2		1101707	1					
ANR	1101746	Argument	float_transfer_bit_error		1101707	1					
ANR	1101747	Identifier	float_transfer_bit_error		1101707	0					
ANR	1101748	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1043:1:34134:34203	1101707	5	True				
ANR	1101749	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1101707	0					
ANR	1101750	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1101707	0					
ANR	1101751	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1101707	0					
ANR	1101752	ArgumentList	compiler		1101707	1					
ANR	1101753	Argument	compiler		1101707	0					
ANR	1101754	Identifier	compiler		1101707	0					
ANR	1101755	Argument	op		1101707	1					
ANR	1101756	Identifier	op		1101707	0					
ANR	1101757	Argument	dst		1101707	2					
ANR	1101758	Identifier	dst		1101707	0					
ANR	1101759	Argument	dstw		1101707	3					
ANR	1101760	Identifier	dstw		1101707	0					
ANR	1101761	Argument	src		1101707	4					
ANR	1101762	Identifier	src		1101707	0					
ANR	1101763	Argument	srcw		1101707	5					
ANR	1101764	Identifier	srcw		1101707	0					
ANR	1101765	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1101707	6					
ANR	1101766	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	1045:5:34211:34245	1101707	0	True				
ANR	1101767	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1101707	0		==			
ANR	1101768	CallExpression	GET_OPCODE ( op )		1101707	0					
ANR	1101769	Callee	GET_OPCODE		1101707	0					
ANR	1101770	Identifier	GET_OPCODE		1101707	0					
ANR	1101771	ArgumentList	op		1101707	1					
ANR	1101772	Argument	op		1101707	0					
ANR	1101773	Identifier	op		1101707	0					
ANR	1101774	Identifier	SLJIT_CONVD_FROMS		1101707	1					
ANR	1101775	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1046:2:34250:34271	1101707	1	True				
ANR	1101776	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1101707	0		^=			
ANR	1101777	Identifier	op		1101707	0					
ANR	1101778	Identifier	SLJIT_SINGLE_OP		1101707	1					
ANR	1101779	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1	1048:1:34275:34324	1101707	7	True				
ANR	1101780	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1101707	0		=			
ANR	1101781	Identifier	dst_r		1101707	0					
ANR	1101782	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG1		1101707	1					
ANR	1101783	Condition	FAST_IS_REG ( dst )		1101707	0					
ANR	1101784	CallExpression	FAST_IS_REG ( dst )		1101707	0					
ANR	1101785	Callee	FAST_IS_REG		1101707	0					
ANR	1101786	Identifier	FAST_IS_REG		1101707	0					
ANR	1101787	ArgumentList	dst		1101707	1					
ANR	1101788	Argument	dst		1101707	0					
ANR	1101789	Identifier	dst		1101707	0					
ANR	1101790	ShiftExpression	dst << 1		1101707	1		<<			
ANR	1101791	Identifier	dst		1101707	0					
ANR	1101792	PrimaryExpression	1		1101707	1					
ANR	1101793	Identifier	TMP_FREG1		1101707	2					
ANR	1101794	IfStatement	if ( src & SLJIT_MEM )		1101707	8					
ANR	1101795	Condition	src & SLJIT_MEM	1050:5:34332:34346	1101707	0	True				
ANR	1101796	BitAndExpression	src & SLJIT_MEM		1101707	0		&			
ANR	1101797	Identifier	src		1101707	0					
ANR	1101798	Identifier	SLJIT_MEM		1101707	1					
ANR	1101799	CompoundStatement		16:22:406:406	1101707	1					
ANR	1101800	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"	1051:2:34353:34441	1101707	0	True				
ANR	1101801	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"		1101707	0					
ANR	1101802	Callee	FAIL_IF		1101707	0					
ANR	1101803	Identifier	FAIL_IF		1101707	0					
ANR	1101804	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1101707	1					
ANR	1101805	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1101707	0					
ANR	1101806	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1101707	0					
ANR	1101807	Callee	emit_op_mem2		1101707	0					
ANR	1101808	Identifier	emit_op_mem2		1101707	0					
ANR	1101809	ArgumentList	compiler		1101707	1					
ANR	1101810	Argument	compiler		1101707	0					
ANR	1101811	Identifier	compiler		1101707	0					
ANR	1101812	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1101707	1					
ANR	1101813	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1101707	0		|			
ANR	1101814	CallExpression	FLOAT_DATA ( op )		1101707	0					
ANR	1101815	Callee	FLOAT_DATA		1101707	0					
ANR	1101816	Identifier	FLOAT_DATA		1101707	0					
ANR	1101817	ArgumentList	op		1101707	1					
ANR	1101818	Argument	op		1101707	0					
ANR	1101819	Identifier	op		1101707	0					
ANR	1101820	Identifier	LOAD_DATA		1101707	1					
ANR	1101821	Argument	dst_r		1101707	2					
ANR	1101822	Identifier	dst_r		1101707	0					
ANR	1101823	Argument	src		1101707	3					
ANR	1101824	Identifier	src		1101707	0					
ANR	1101825	Argument	srcw		1101707	4					
ANR	1101826	Identifier	srcw		1101707	0					
ANR	1101827	Argument	dst		1101707	5					
ANR	1101828	Identifier	dst		1101707	0					
ANR	1101829	Argument	dstw		1101707	6					
ANR	1101830	Identifier	dstw		1101707	0					
ANR	1101831	ExpressionStatement	src = dst_r	1052:2:34445:34456	1101707	1	True				
ANR	1101832	AssignmentExpression	src = dst_r		1101707	0		=			
ANR	1101833	Identifier	src		1101707	0					
ANR	1101834	Identifier	dst_r		1101707	1					
ANR	1101835	ElseStatement	else		1101707	0					
ANR	1101836	ExpressionStatement	src <<= 1	1055:2:34469:34478	1101707	0	True				
ANR	1101837	AssignmentExpression	src <<= 1		1101707	0		<<=			
ANR	1101838	Identifier	src		1101707	0					
ANR	1101839	PrimaryExpression	1		1101707	1					
ANR	1101840	SwitchStatement	switch ( GET_OPCODE ( op ) )		1101707	9					
ANR	1101841	Condition	GET_OPCODE ( op )	1057:9:34490:34503	1101707	0	True				
ANR	1101842	CallExpression	GET_OPCODE ( op )		1101707	0					
ANR	1101843	Callee	GET_OPCODE		1101707	0					
ANR	1101844	Identifier	GET_OPCODE		1101707	0					
ANR	1101845	ArgumentList	op		1101707	1					
ANR	1101846	Argument	op		1101707	0					
ANR	1101847	Identifier	op		1101707	0					
ANR	1101848	CompoundStatement		23:25:563:563	1101707	1					
ANR	1101849	Label	case SLJIT_DMOV :	1058:1:34509:34524	1101707	0	True				
ANR	1101850	Identifier	SLJIT_DMOV		1101707	0					
ANR	1101851	IfStatement	if ( src != dst_r )		1101707	1					
ANR	1101852	Condition	src != dst_r	1059:6:34532:34543	1101707	0	True				
ANR	1101853	EqualityExpression	src != dst_r		1101707	0		!=			
ANR	1101854	Identifier	src		1101707	0					
ANR	1101855	Identifier	dst_r		1101707	1					
ANR	1101856	CompoundStatement		25:20:603:603	1101707	1					
ANR	1101857	IfStatement	if ( dst_r != TMP_FREG1 )		1101707	0					
ANR	1101858	Condition	dst_r != TMP_FREG1	1060:7:34555:34572	1101707	0	True				
ANR	1101859	EqualityExpression	dst_r != TMP_FREG1		1101707	0		!=			
ANR	1101860	Identifier	dst_r		1101707	0					
ANR	1101861	Identifier	TMP_FREG1		1101707	1					
ANR	1101862	CompoundStatement		26:27:632:632	1101707	1					
ANR	1101863	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"	1061:4:34581:34652	1101707	0	True				
ANR	1101864	CallExpression	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"		1101707	0					
ANR	1101865	Callee	FAIL_IF		1101707	0					
ANR	1101866	Identifier	FAIL_IF		1101707	0					
ANR	1101867	ArgumentList	"push_inst ( compiler , FMOVS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	1					
ANR	1101868	Argument	"push_inst ( compiler , FMOVS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1101869	CallExpression	"push_inst ( compiler , FMOVS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1101870	Callee	push_inst		1101707	0					
ANR	1101871	Identifier	push_inst		1101707	0					
ANR	1101872	ArgumentList	compiler		1101707	1					
ANR	1101873	Argument	compiler		1101707	0					
ANR	1101874	Identifier	compiler		1101707	0					
ANR	1101875	Argument	FMOVS | DA ( dst_r ) | S2A ( src )		1101707	1					
ANR	1101876	InclusiveOrExpression	FMOVS | DA ( dst_r ) | S2A ( src )		1101707	0		|			
ANR	1101877	Identifier	FMOVS		1101707	0					
ANR	1101878	InclusiveOrExpression	DA ( dst_r ) | S2A ( src )		1101707	1		|			
ANR	1101879	CallExpression	DA ( dst_r )		1101707	0					
ANR	1101880	Callee	DA		1101707	0					
ANR	1101881	Identifier	DA		1101707	0					
ANR	1101882	ArgumentList	dst_r		1101707	1					
ANR	1101883	Argument	dst_r		1101707	0					
ANR	1101884	Identifier	dst_r		1101707	0					
ANR	1101885	CallExpression	S2A ( src )		1101707	1					
ANR	1101886	Callee	S2A		1101707	0					
ANR	1101887	Identifier	S2A		1101707	0					
ANR	1101888	ArgumentList	src		1101707	1					
ANR	1101889	Argument	src		1101707	0					
ANR	1101890	Identifier	src		1101707	0					
ANR	1101891	Argument	MOVABLE_INS		1101707	2					
ANR	1101892	Identifier	MOVABLE_INS		1101707	0					
ANR	1101893	IfStatement	if ( ! ( op & SLJIT_SINGLE_OP ) )		1101707	1					
ANR	1101894	Condition	! ( op & SLJIT_SINGLE_OP )	1062:8:34662:34684	1101707	0	True				
ANR	1101895	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1101707	0					
ANR	1101896	UnaryOperator	!		1101707	0					
ANR	1101897	BitAndExpression	op & SLJIT_SINGLE_OP		1101707	1		&			
ANR	1101898	Identifier	op		1101707	0					
ANR	1101899	Identifier	SLJIT_SINGLE_OP		1101707	1					
ANR	1101900	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"	1063:5:34692:34771	1101707	1	True				
ANR	1101901	CallExpression	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"		1101707	0					
ANR	1101902	Callee	FAIL_IF		1101707	0					
ANR	1101903	Identifier	FAIL_IF		1101707	0					
ANR	1101904	ArgumentList	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	1					
ANR	1101905	Argument	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1101906	CallExpression	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1101907	Callee	push_inst		1101707	0					
ANR	1101908	Identifier	push_inst		1101707	0					
ANR	1101909	ArgumentList	compiler		1101707	1					
ANR	1101910	Argument	compiler		1101707	0					
ANR	1101911	Identifier	compiler		1101707	0					
ANR	1101912	Argument	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1					
ANR	1101913	InclusiveOrExpression	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	0		|			
ANR	1101914	Identifier	FMOVS		1101707	0					
ANR	1101915	InclusiveOrExpression	DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1		|			
ANR	1101916	CallExpression	DA ( dst_r | 1 )		1101707	0					
ANR	1101917	Callee	DA		1101707	0					
ANR	1101918	Identifier	DA		1101707	0					
ANR	1101919	ArgumentList	dst_r | 1		1101707	1					
ANR	1101920	Argument	dst_r | 1		1101707	0					
ANR	1101921	InclusiveOrExpression	dst_r | 1		1101707	0		|			
ANR	1101922	Identifier	dst_r		1101707	0					
ANR	1101923	PrimaryExpression	1		1101707	1					
ANR	1101924	CallExpression	S2A ( src | 1 )		1101707	1					
ANR	1101925	Callee	S2A		1101707	0					
ANR	1101926	Identifier	S2A		1101707	0					
ANR	1101927	ArgumentList	src | 1		1101707	1					
ANR	1101928	Argument	src | 1		1101707	0					
ANR	1101929	InclusiveOrExpression	src | 1		1101707	0		|			
ANR	1101930	Identifier	src		1101707	0					
ANR	1101931	PrimaryExpression	1		1101707	1					
ANR	1101932	Argument	MOVABLE_INS		1101707	2					
ANR	1101933	Identifier	MOVABLE_INS		1101707	0					
ANR	1101934	ElseStatement	else		1101707	0					
ANR	1101935	ExpressionStatement	dst_r = src	1066:4:34790:34801	1101707	0	True				
ANR	1101936	AssignmentExpression	dst_r = src		1101707	0		=			
ANR	1101937	Identifier	dst_r		1101707	0					
ANR	1101938	Identifier	src		1101707	1					
ANR	1101939	BreakStatement	break ;	1068:2:34809:34814	1101707	2	True				
ANR	1101940	Label	case SLJIT_DNEG :	1069:1:34817:34832	1101707	3	True				
ANR	1101941	Identifier	SLJIT_DNEG		1101707	0					
ANR	1101942	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FNEGS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"	1070:2:34836:34907	1101707	4	True				
ANR	1101943	CallExpression	"FAIL_IF ( push_inst ( compiler , FNEGS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"		1101707	0					
ANR	1101944	Callee	FAIL_IF		1101707	0					
ANR	1101945	Identifier	FAIL_IF		1101707	0					
ANR	1101946	ArgumentList	"push_inst ( compiler , FNEGS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	1					
ANR	1101947	Argument	"push_inst ( compiler , FNEGS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1101948	CallExpression	"push_inst ( compiler , FNEGS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1101949	Callee	push_inst		1101707	0					
ANR	1101950	Identifier	push_inst		1101707	0					
ANR	1101951	ArgumentList	compiler		1101707	1					
ANR	1101952	Argument	compiler		1101707	0					
ANR	1101953	Identifier	compiler		1101707	0					
ANR	1101954	Argument	FNEGS | DA ( dst_r ) | S2A ( src )		1101707	1					
ANR	1101955	InclusiveOrExpression	FNEGS | DA ( dst_r ) | S2A ( src )		1101707	0		|			
ANR	1101956	Identifier	FNEGS		1101707	0					
ANR	1101957	InclusiveOrExpression	DA ( dst_r ) | S2A ( src )		1101707	1		|			
ANR	1101958	CallExpression	DA ( dst_r )		1101707	0					
ANR	1101959	Callee	DA		1101707	0					
ANR	1101960	Identifier	DA		1101707	0					
ANR	1101961	ArgumentList	dst_r		1101707	1					
ANR	1101962	Argument	dst_r		1101707	0					
ANR	1101963	Identifier	dst_r		1101707	0					
ANR	1101964	CallExpression	S2A ( src )		1101707	1					
ANR	1101965	Callee	S2A		1101707	0					
ANR	1101966	Identifier	S2A		1101707	0					
ANR	1101967	ArgumentList	src		1101707	1					
ANR	1101968	Argument	src		1101707	0					
ANR	1101969	Identifier	src		1101707	0					
ANR	1101970	Argument	MOVABLE_INS		1101707	2					
ANR	1101971	Identifier	MOVABLE_INS		1101707	0					
ANR	1101972	IfStatement	if ( dst_r != src && ! ( op & SLJIT_SINGLE_OP ) )		1101707	5					
ANR	1101973	Condition	dst_r != src && ! ( op & SLJIT_SINGLE_OP )	1071:6:34915:34953	1101707	0	True				
ANR	1101974	AndExpression	dst_r != src && ! ( op & SLJIT_SINGLE_OP )		1101707	0		&&			
ANR	1101975	EqualityExpression	dst_r != src		1101707	0		!=			
ANR	1101976	Identifier	dst_r		1101707	0					
ANR	1101977	Identifier	src		1101707	1					
ANR	1101978	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1101707	1					
ANR	1101979	UnaryOperator	!		1101707	0					
ANR	1101980	BitAndExpression	op & SLJIT_SINGLE_OP		1101707	1		&			
ANR	1101981	Identifier	op		1101707	0					
ANR	1101982	Identifier	SLJIT_SINGLE_OP		1101707	1					
ANR	1101983	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"	1072:3:34959:35038	1101707	1	True				
ANR	1101984	CallExpression	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"		1101707	0					
ANR	1101985	Callee	FAIL_IF		1101707	0					
ANR	1101986	Identifier	FAIL_IF		1101707	0					
ANR	1101987	ArgumentList	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	1					
ANR	1101988	Argument	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1101989	CallExpression	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1101990	Callee	push_inst		1101707	0					
ANR	1101991	Identifier	push_inst		1101707	0					
ANR	1101992	ArgumentList	compiler		1101707	1					
ANR	1101993	Argument	compiler		1101707	0					
ANR	1101994	Identifier	compiler		1101707	0					
ANR	1101995	Argument	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1					
ANR	1101996	InclusiveOrExpression	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	0		|			
ANR	1101997	Identifier	FMOVS		1101707	0					
ANR	1101998	InclusiveOrExpression	DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1		|			
ANR	1101999	CallExpression	DA ( dst_r | 1 )		1101707	0					
ANR	1102000	Callee	DA		1101707	0					
ANR	1102001	Identifier	DA		1101707	0					
ANR	1102002	ArgumentList	dst_r | 1		1101707	1					
ANR	1102003	Argument	dst_r | 1		1101707	0					
ANR	1102004	InclusiveOrExpression	dst_r | 1		1101707	0		|			
ANR	1102005	Identifier	dst_r		1101707	0					
ANR	1102006	PrimaryExpression	1		1101707	1					
ANR	1102007	CallExpression	S2A ( src | 1 )		1101707	1					
ANR	1102008	Callee	S2A		1101707	0					
ANR	1102009	Identifier	S2A		1101707	0					
ANR	1102010	ArgumentList	src | 1		1101707	1					
ANR	1102011	Argument	src | 1		1101707	0					
ANR	1102012	InclusiveOrExpression	src | 1		1101707	0		|			
ANR	1102013	Identifier	src		1101707	0					
ANR	1102014	PrimaryExpression	1		1101707	1					
ANR	1102015	Argument	MOVABLE_INS		1101707	2					
ANR	1102016	Identifier	MOVABLE_INS		1101707	0					
ANR	1102017	BreakStatement	break ;	1073:2:35042:35047	1101707	6	True				
ANR	1102018	Label	case SLJIT_DABS :	1074:1:35050:35065	1101707	7	True				
ANR	1102019	Identifier	SLJIT_DABS		1101707	0					
ANR	1102020	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FABSS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"	1075:2:35069:35140	1101707	8	True				
ANR	1102021	CallExpression	"FAIL_IF ( push_inst ( compiler , FABSS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"		1101707	0					
ANR	1102022	Callee	FAIL_IF		1101707	0					
ANR	1102023	Identifier	FAIL_IF		1101707	0					
ANR	1102024	ArgumentList	"push_inst ( compiler , FABSS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	1					
ANR	1102025	Argument	"push_inst ( compiler , FABSS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1102026	CallExpression	"push_inst ( compiler , FABSS | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1102027	Callee	push_inst		1101707	0					
ANR	1102028	Identifier	push_inst		1101707	0					
ANR	1102029	ArgumentList	compiler		1101707	1					
ANR	1102030	Argument	compiler		1101707	0					
ANR	1102031	Identifier	compiler		1101707	0					
ANR	1102032	Argument	FABSS | DA ( dst_r ) | S2A ( src )		1101707	1					
ANR	1102033	InclusiveOrExpression	FABSS | DA ( dst_r ) | S2A ( src )		1101707	0		|			
ANR	1102034	Identifier	FABSS		1101707	0					
ANR	1102035	InclusiveOrExpression	DA ( dst_r ) | S2A ( src )		1101707	1		|			
ANR	1102036	CallExpression	DA ( dst_r )		1101707	0					
ANR	1102037	Callee	DA		1101707	0					
ANR	1102038	Identifier	DA		1101707	0					
ANR	1102039	ArgumentList	dst_r		1101707	1					
ANR	1102040	Argument	dst_r		1101707	0					
ANR	1102041	Identifier	dst_r		1101707	0					
ANR	1102042	CallExpression	S2A ( src )		1101707	1					
ANR	1102043	Callee	S2A		1101707	0					
ANR	1102044	Identifier	S2A		1101707	0					
ANR	1102045	ArgumentList	src		1101707	1					
ANR	1102046	Argument	src		1101707	0					
ANR	1102047	Identifier	src		1101707	0					
ANR	1102048	Argument	MOVABLE_INS		1101707	2					
ANR	1102049	Identifier	MOVABLE_INS		1101707	0					
ANR	1102050	IfStatement	if ( dst_r != src && ! ( op & SLJIT_SINGLE_OP ) )		1101707	9					
ANR	1102051	Condition	dst_r != src && ! ( op & SLJIT_SINGLE_OP )	1076:6:35148:35186	1101707	0	True				
ANR	1102052	AndExpression	dst_r != src && ! ( op & SLJIT_SINGLE_OP )		1101707	0		&&			
ANR	1102053	EqualityExpression	dst_r != src		1101707	0		!=			
ANR	1102054	Identifier	dst_r		1101707	0					
ANR	1102055	Identifier	src		1101707	1					
ANR	1102056	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1101707	1					
ANR	1102057	UnaryOperator	!		1101707	0					
ANR	1102058	BitAndExpression	op & SLJIT_SINGLE_OP		1101707	1		&			
ANR	1102059	Identifier	op		1101707	0					
ANR	1102060	Identifier	SLJIT_SINGLE_OP		1101707	1					
ANR	1102061	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"	1077:3:35192:35271	1101707	1	True				
ANR	1102062	CallExpression	"FAIL_IF ( push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS ) )"		1101707	0					
ANR	1102063	Callee	FAIL_IF		1101707	0					
ANR	1102064	Identifier	FAIL_IF		1101707	0					
ANR	1102065	ArgumentList	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	1					
ANR	1102066	Argument	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1102067	CallExpression	"push_inst ( compiler , FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 ) , MOVABLE_INS )"		1101707	0					
ANR	1102068	Callee	push_inst		1101707	0					
ANR	1102069	Identifier	push_inst		1101707	0					
ANR	1102070	ArgumentList	compiler		1101707	1					
ANR	1102071	Argument	compiler		1101707	0					
ANR	1102072	Identifier	compiler		1101707	0					
ANR	1102073	Argument	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1					
ANR	1102074	InclusiveOrExpression	FMOVS | DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	0		|			
ANR	1102075	Identifier	FMOVS		1101707	0					
ANR	1102076	InclusiveOrExpression	DA ( dst_r | 1 ) | S2A ( src | 1 )		1101707	1		|			
ANR	1102077	CallExpression	DA ( dst_r | 1 )		1101707	0					
ANR	1102078	Callee	DA		1101707	0					
ANR	1102079	Identifier	DA		1101707	0					
ANR	1102080	ArgumentList	dst_r | 1		1101707	1					
ANR	1102081	Argument	dst_r | 1		1101707	0					
ANR	1102082	InclusiveOrExpression	dst_r | 1		1101707	0		|			
ANR	1102083	Identifier	dst_r		1101707	0					
ANR	1102084	PrimaryExpression	1		1101707	1					
ANR	1102085	CallExpression	S2A ( src | 1 )		1101707	1					
ANR	1102086	Callee	S2A		1101707	0					
ANR	1102087	Identifier	S2A		1101707	0					
ANR	1102088	ArgumentList	src | 1		1101707	1					
ANR	1102089	Argument	src | 1		1101707	0					
ANR	1102090	InclusiveOrExpression	src | 1		1101707	0		|			
ANR	1102091	Identifier	src		1101707	0					
ANR	1102092	PrimaryExpression	1		1101707	1					
ANR	1102093	Argument	MOVABLE_INS		1101707	2					
ANR	1102094	Identifier	MOVABLE_INS		1101707	0					
ANR	1102095	BreakStatement	break ;	1078:2:35275:35280	1101707	10	True				
ANR	1102096	Label	case SLJIT_CONVD_FROMS :	1079:1:35283:35305	1101707	11	True				
ANR	1102097	Identifier	SLJIT_CONVD_FROMS		1101707	0					
ANR	1102098	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"	1080:2:35309:35403	1101707	12	True				
ANR	1102099	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS ) )"		1101707	0					
ANR	1102100	Callee	FAIL_IF		1101707	0					
ANR	1102101	Identifier	FAIL_IF		1101707	0					
ANR	1102102	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	1					
ANR	1102103	Argument	"push_inst ( compiler , SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1102104	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src ) , MOVABLE_INS )"		1101707	0					
ANR	1102105	Callee	push_inst		1101707	0					
ANR	1102106	Identifier	push_inst		1101707	0					
ANR	1102107	ArgumentList	compiler		1101707	1					
ANR	1102108	Argument	compiler		1101707	0					
ANR	1102109	Identifier	compiler		1101707	0					
ANR	1102110	Argument	"SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src )"		1101707	1					
ANR	1102111	InclusiveOrExpression	"SELECT_FOP ( op , FSTOD , FDTOS ) | DA ( dst_r ) | S2A ( src )"		1101707	0		|			
ANR	1102112	CallExpression	"SELECT_FOP ( op , FSTOD , FDTOS )"		1101707	0					
ANR	1102113	Callee	SELECT_FOP		1101707	0					
ANR	1102114	Identifier	SELECT_FOP		1101707	0					
ANR	1102115	ArgumentList	op		1101707	1					
ANR	1102116	Argument	op		1101707	0					
ANR	1102117	Identifier	op		1101707	0					
ANR	1102118	Argument	FSTOD		1101707	1					
ANR	1102119	Identifier	FSTOD		1101707	0					
ANR	1102120	Argument	FDTOS		1101707	2					
ANR	1102121	Identifier	FDTOS		1101707	0					
ANR	1102122	InclusiveOrExpression	DA ( dst_r ) | S2A ( src )		1101707	1		|			
ANR	1102123	CallExpression	DA ( dst_r )		1101707	0					
ANR	1102124	Callee	DA		1101707	0					
ANR	1102125	Identifier	DA		1101707	0					
ANR	1102126	ArgumentList	dst_r		1101707	1					
ANR	1102127	Argument	dst_r		1101707	0					
ANR	1102128	Identifier	dst_r		1101707	0					
ANR	1102129	CallExpression	S2A ( src )		1101707	1					
ANR	1102130	Callee	S2A		1101707	0					
ANR	1102131	Identifier	S2A		1101707	0					
ANR	1102132	ArgumentList	src		1101707	1					
ANR	1102133	Argument	src		1101707	0					
ANR	1102134	Identifier	src		1101707	0					
ANR	1102135	Argument	MOVABLE_INS		1101707	2					
ANR	1102136	Identifier	MOVABLE_INS		1101707	0					
ANR	1102137	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1081:2:35407:35428	1101707	13	True				
ANR	1102138	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1101707	0		^=			
ANR	1102139	Identifier	op		1101707	0					
ANR	1102140	Identifier	SLJIT_SINGLE_OP		1101707	1					
ANR	1102141	BreakStatement	break ;	1082:2:35432:35437	1101707	14	True				
ANR	1102142	IfStatement	if ( dst & SLJIT_MEM )		1101707	10					
ANR	1102143	Condition	dst & SLJIT_MEM	1085:5:35448:35462	1101707	0	True				
ANR	1102144	BitAndExpression	dst & SLJIT_MEM		1101707	0		&			
ANR	1102145	Identifier	dst		1101707	0					
ANR	1102146	Identifier	SLJIT_MEM		1101707	1					
ANR	1102147	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"	1086:2:35467:35538	1101707	1	True				
ANR	1102148	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"		1101707	0					
ANR	1102149	Callee	FAIL_IF		1101707	0					
ANR	1102150	Identifier	FAIL_IF		1101707	0					
ANR	1102151	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1101707	1					
ANR	1102152	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1101707	0					
ANR	1102153	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1101707	0					
ANR	1102154	Callee	emit_op_mem2		1101707	0					
ANR	1102155	Identifier	emit_op_mem2		1101707	0					
ANR	1102156	ArgumentList	compiler		1101707	1					
ANR	1102157	Argument	compiler		1101707	0					
ANR	1102158	Identifier	compiler		1101707	0					
ANR	1102159	Argument	FLOAT_DATA ( op )		1101707	1					
ANR	1102160	CallExpression	FLOAT_DATA ( op )		1101707	0					
ANR	1102161	Callee	FLOAT_DATA		1101707	0					
ANR	1102162	Identifier	FLOAT_DATA		1101707	0					
ANR	1102163	ArgumentList	op		1101707	1					
ANR	1102164	Argument	op		1101707	0					
ANR	1102165	Identifier	op		1101707	0					
ANR	1102166	Argument	dst_r		1101707	2					
ANR	1102167	Identifier	dst_r		1101707	0					
ANR	1102168	Argument	dst		1101707	3					
ANR	1102169	Identifier	dst		1101707	0					
ANR	1102170	Argument	dstw		1101707	4					
ANR	1102171	Identifier	dstw		1101707	0					
ANR	1102172	Argument	0		1101707	5					
ANR	1102173	PrimaryExpression	0		1101707	0					
ANR	1102174	Argument	0		1101707	6					
ANR	1102175	PrimaryExpression	0		1101707	0					
ANR	1102176	ReturnStatement	return SLJIT_SUCCESS ;	1087:1:35541:35561	1101707	11	True				
ANR	1102177	Identifier	SLJIT_SUCCESS		1101707	0					
ANR	1102178	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1101707	1					
ANR	1102179	Identifier	sljit_emit_fop1		1101707	2					
ANR	1102180	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1101707	3					
ANR	1102181	Parameter	struct sljit_compiler * compiler	1032:50:33836:33866	1101707	0	True				
ANR	1102182	ParameterType	struct sljit_compiler *		1101707	0					
ANR	1102183	Identifier	compiler		1101707	1					
ANR	1102184	Parameter	sljit_si op	1032:83:33869:33879	1101707	1	True				
ANR	1102185	ParameterType	sljit_si		1101707	0					
ANR	1102186	Identifier	op		1101707	1					
ANR	1102187	Parameter	sljit_si dst	1033:1:33883:33894	1101707	2	True				
ANR	1102188	ParameterType	sljit_si		1101707	0					
ANR	1102189	Identifier	dst		1101707	1					
ANR	1102190	Parameter	sljit_sw dstw	1033:15:33897:33909	1101707	3	True				
ANR	1102191	ParameterType	sljit_sw		1101707	0					
ANR	1102192	Identifier	dstw		1101707	1					
ANR	1102193	Parameter	sljit_si src	1034:1:33913:33924	1101707	4	True				
ANR	1102194	ParameterType	sljit_si		1101707	0					
ANR	1102195	Identifier	src		1101707	1					
ANR	1102196	Parameter	sljit_sw srcw	1034:15:33927:33939	1101707	5	True				
ANR	1102197	ParameterType	sljit_sw		1101707	0					
ANR	1102198	Identifier	srcw		1101707	1					
ANR	1102199	CFGEntryNode	ENTRY		1101707		True				
ANR	1102200	CFGExitNode	EXIT		1101707		True				
ANR	1102201	Symbol	FDTOS		1101707						
ANR	1102202	Symbol	compiler -> cache_argw		1101707						
ANR	1102203	Symbol	dst		1101707						
ANR	1102204	Symbol	LOAD_DATA		1101707						
ANR	1102205	Symbol	FLOAT_DATA		1101707						
ANR	1102206	Symbol	TMP_FREG1		1101707						
ANR	1102207	Symbol	SLJIT_MEM		1101707						
ANR	1102208	Symbol	SLJIT_CONVD_FROMS		1101707						
ANR	1102209	Symbol	* compiler		1101707						
ANR	1102210	Symbol	dst_r		1101707						
ANR	1102211	Symbol	GET_OPCODE		1101707						
ANR	1102212	Symbol	FNEGS		1101707						
ANR	1102213	Symbol	float_transfer_bit_error		1101707						
ANR	1102214	Symbol	FMOVS		1101707						
ANR	1102215	Symbol	compiler		1101707						
ANR	1102216	Symbol	op		1101707						
ANR	1102217	Symbol	push_inst		1101707						
ANR	1102218	Symbol	FAST_IS_REG		1101707						
ANR	1102219	Symbol	S2A		1101707						
ANR	1102220	Symbol	src		1101707						
ANR	1102221	Symbol	srcw		1101707						
ANR	1102222	Symbol	compiler -> cache_arg		1101707						
ANR	1102223	Symbol	SLJIT_SINGLE_OP		1101707						
ANR	1102224	Symbol	emit_op_mem2		1101707						
ANR	1102225	Symbol	SLJIT_SUCCESS		1101707						
ANR	1102226	Symbol	SELECT_FOP		1101707						
ANR	1102227	Symbol	DOUBLE_DATA		1101707						
ANR	1102228	Symbol	MOVABLE_INS		1101707						
ANR	1102229	Symbol	dstw		1101707						
ANR	1102230	Symbol	DA		1101707						
ANR	1102231	Symbol	FSTOD		1101707						
ANR	1102232	Symbol	FABSS		1101707						
ANR	1102233	Function	sljit_emit_fop2	1090:0:35566:38150							
ANR	1102234	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1102233	0					
ANR	1102235	CompoundStatement		1094:0:35756:38150	1102233	0					
ANR	1102236	IdentifierDeclStatement	"sljit_si dst_r , flags = 0 ;"	1095:1:35759:35784	1102233	0	True				
ANR	1102237	IdentifierDecl	dst_r		1102233	0					
ANR	1102238	IdentifierDeclType	sljit_si		1102233	0					
ANR	1102239	Identifier	dst_r		1102233	1					
ANR	1102240	IdentifierDecl	flags = 0		1102233	1					
ANR	1102241	IdentifierDeclType	sljit_si		1102233	0					
ANR	1102242	Identifier	flags		1102233	1					
ANR	1102243	AssignmentExpression	flags = 0		1102233	2		=			
ANR	1102244	Identifier	flags		1102233	0					
ANR	1102245	PrimaryExpression	0		1102233	1					
ANR	1102246	ExpressionStatement	CHECK_ERROR ( )	1097:1:35788:35801	1102233	1	True				
ANR	1102247	CallExpression	CHECK_ERROR ( )		1102233	0					
ANR	1102248	Callee	CHECK_ERROR		1102233	0					
ANR	1102249	Identifier	CHECK_ERROR		1102233	0					
ANR	1102250	ArgumentList			1102233	1					
ANR	1102251	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1098:1:35804:35883	1102233	2	True				
ANR	1102252	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1102233	0					
ANR	1102253	Callee	CHECK		1102233	0					
ANR	1102254	Identifier	CHECK		1102233	0					
ANR	1102255	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1102233	1					
ANR	1102256	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1102233	0					
ANR	1102257	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1102233	0					
ANR	1102258	Callee	check_sljit_emit_fop2		1102233	0					
ANR	1102259	Identifier	check_sljit_emit_fop2		1102233	0					
ANR	1102260	ArgumentList	compiler		1102233	1					
ANR	1102261	Argument	compiler		1102233	0					
ANR	1102262	Identifier	compiler		1102233	0					
ANR	1102263	Argument	op		1102233	1					
ANR	1102264	Identifier	op		1102233	0					
ANR	1102265	Argument	dst		1102233	2					
ANR	1102266	Identifier	dst		1102233	0					
ANR	1102267	Argument	dstw		1102233	3					
ANR	1102268	Identifier	dstw		1102233	0					
ANR	1102269	Argument	src1		1102233	4					
ANR	1102270	Identifier	src1		1102233	0					
ANR	1102271	Argument	src1w		1102233	5					
ANR	1102272	Identifier	src1w		1102233	0					
ANR	1102273	Argument	src2		1102233	6					
ANR	1102274	Identifier	src2		1102233	0					
ANR	1102275	Argument	src2w		1102233	7					
ANR	1102276	Identifier	src2w		1102233	0					
ANR	1102277	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1099:1:35886:35916	1102233	3	True				
ANR	1102278	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1102233	0					
ANR	1102279	Callee	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102280	Identifier	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102281	ArgumentList	dst		1102233	1					
ANR	1102282	Argument	dst		1102233	0					
ANR	1102283	Identifier	dst		1102233	0					
ANR	1102284	Argument	dstw		1102233	1					
ANR	1102285	Identifier	dstw		1102233	0					
ANR	1102286	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1100:1:35919:35951	1102233	4	True				
ANR	1102287	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1102233	0					
ANR	1102288	Callee	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102289	Identifier	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102290	ArgumentList	src1		1102233	1					
ANR	1102291	Argument	src1		1102233	0					
ANR	1102292	Identifier	src1		1102233	0					
ANR	1102293	Argument	src1w		1102233	1					
ANR	1102294	Identifier	src1w		1102233	0					
ANR	1102295	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1101:1:35954:35986	1102233	5	True				
ANR	1102296	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1102233	0					
ANR	1102297	Callee	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102298	Identifier	ADJUST_LOCAL_OFFSET		1102233	0					
ANR	1102299	ArgumentList	src2		1102233	1					
ANR	1102300	Argument	src2		1102233	0					
ANR	1102301	Identifier	src2		1102233	0					
ANR	1102302	Argument	src2w		1102233	1					
ANR	1102303	Identifier	src2w		1102233	0					
ANR	1102304	ExpressionStatement	compiler -> cache_arg = 0	1103:1:35990:36013	1102233	6	True				
ANR	1102305	AssignmentExpression	compiler -> cache_arg = 0		1102233	0		=			
ANR	1102306	PtrMemberAccess	compiler -> cache_arg		1102233	0					
ANR	1102307	Identifier	compiler		1102233	0					
ANR	1102308	Identifier	cache_arg		1102233	1					
ANR	1102309	PrimaryExpression	0		1102233	1					
ANR	1102310	ExpressionStatement	compiler -> cache_argw = 0	1104:1:36016:36040	1102233	7	True				
ANR	1102311	AssignmentExpression	compiler -> cache_argw = 0		1102233	0		=			
ANR	1102312	PtrMemberAccess	compiler -> cache_argw		1102233	0					
ANR	1102313	Identifier	compiler		1102233	0					
ANR	1102314	Identifier	cache_argw		1102233	1					
ANR	1102315	PrimaryExpression	0		1102233	1					
ANR	1102316	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2	1106:1:36044:36093	1102233	8	True				
ANR	1102317	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2		1102233	0		=			
ANR	1102318	Identifier	dst_r		1102233	0					
ANR	1102319	ConditionalExpression	FAST_IS_REG ( dst ) ? ( dst << 1 ) : TMP_FREG2		1102233	1					
ANR	1102320	Condition	FAST_IS_REG ( dst )		1102233	0					
ANR	1102321	CallExpression	FAST_IS_REG ( dst )		1102233	0					
ANR	1102322	Callee	FAST_IS_REG		1102233	0					
ANR	1102323	Identifier	FAST_IS_REG		1102233	0					
ANR	1102324	ArgumentList	dst		1102233	1					
ANR	1102325	Argument	dst		1102233	0					
ANR	1102326	Identifier	dst		1102233	0					
ANR	1102327	ShiftExpression	dst << 1		1102233	1		<<			
ANR	1102328	Identifier	dst		1102233	0					
ANR	1102329	PrimaryExpression	1		1102233	1					
ANR	1102330	Identifier	TMP_FREG2		1102233	2					
ANR	1102331	IfStatement	if ( src1 & SLJIT_MEM )		1102233	9					
ANR	1102332	Condition	src1 & SLJIT_MEM	1108:5:36101:36116	1102233	0	True				
ANR	1102333	BitAndExpression	src1 & SLJIT_MEM		1102233	0		&			
ANR	1102334	Identifier	src1		1102233	0					
ANR	1102335	Identifier	SLJIT_MEM		1102233	1					
ANR	1102336	CompoundStatement		15:23:362:362	1102233	1					
ANR	1102337	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w ) )"		1102233	0					
ANR	1102338	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"	1109:6:36127:36203	1102233	0	True				
ANR	1102339	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"		1102233	0					
ANR	1102340	Callee	getput_arg_fast		1102233	0					
ANR	1102341	Identifier	getput_arg_fast		1102233	0					
ANR	1102342	ArgumentList	compiler		1102233	1					
ANR	1102343	Argument	compiler		1102233	0					
ANR	1102344	Identifier	compiler		1102233	0					
ANR	1102345	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102346	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102347	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102348	Callee	FLOAT_DATA		1102233	0					
ANR	1102349	Identifier	FLOAT_DATA		1102233	0					
ANR	1102350	ArgumentList	op		1102233	1					
ANR	1102351	Argument	op		1102233	0					
ANR	1102352	Identifier	op		1102233	0					
ANR	1102353	Identifier	LOAD_DATA		1102233	1					
ANR	1102354	Argument	TMP_FREG1		1102233	2					
ANR	1102355	Identifier	TMP_FREG1		1102233	0					
ANR	1102356	Argument	src1		1102233	3					
ANR	1102357	Identifier	src1		1102233	0					
ANR	1102358	Argument	src1w		1102233	4					
ANR	1102359	Identifier	src1w		1102233	0					
ANR	1102360	CompoundStatement		16:85:449:449	1102233	1					
ANR	1102361	ExpressionStatement	FAIL_IF ( compiler -> error )	1110:3:36211:36235	1102233	0	True				
ANR	1102362	CallExpression	FAIL_IF ( compiler -> error )		1102233	0					
ANR	1102363	Callee	FAIL_IF		1102233	0					
ANR	1102364	Identifier	FAIL_IF		1102233	0					
ANR	1102365	ArgumentList	compiler -> error		1102233	1					
ANR	1102366	Argument	compiler -> error		1102233	0					
ANR	1102367	PtrMemberAccess	compiler -> error		1102233	0					
ANR	1102368	Identifier	compiler		1102233	0					
ANR	1102369	Identifier	error		1102233	1					
ANR	1102370	ExpressionStatement	src1 = TMP_FREG1	1111:3:36240:36256	1102233	1	True				
ANR	1102371	AssignmentExpression	src1 = TMP_FREG1		1102233	0		=			
ANR	1102372	Identifier	src1		1102233	0					
ANR	1102373	Identifier	TMP_FREG1		1102233	1					
ANR	1102374	ElseStatement	else		1102233	0					
ANR	1102375	ExpressionStatement	flags |= SLOW_SRC1	1113:3:36270:36288	1102233	0	True				
ANR	1102376	AssignmentExpression	flags |= SLOW_SRC1		1102233	0		|=			
ANR	1102377	Identifier	flags		1102233	0					
ANR	1102378	Identifier	SLOW_SRC1		1102233	1					
ANR	1102379	ElseStatement	else		1102233	0					
ANR	1102380	ExpressionStatement	src1 <<= 1	1116:2:36301:36311	1102233	0	True				
ANR	1102381	AssignmentExpression	src1 <<= 1		1102233	0		<<=			
ANR	1102382	Identifier	src1		1102233	0					
ANR	1102383	PrimaryExpression	1		1102233	1					
ANR	1102384	IfStatement	if ( src2 & SLJIT_MEM )		1102233	10					
ANR	1102385	Condition	src2 & SLJIT_MEM	1118:5:36319:36334	1102233	0	True				
ANR	1102386	BitAndExpression	src2 & SLJIT_MEM		1102233	0		&			
ANR	1102387	Identifier	src2		1102233	0					
ANR	1102388	Identifier	SLJIT_MEM		1102233	1					
ANR	1102389	CompoundStatement		25:23:580:580	1102233	1					
ANR	1102390	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w ) )"		1102233	0					
ANR	1102391	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"	1119:6:36345:36421	1102233	0	True				
ANR	1102392	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"		1102233	0					
ANR	1102393	Callee	getput_arg_fast		1102233	0					
ANR	1102394	Identifier	getput_arg_fast		1102233	0					
ANR	1102395	ArgumentList	compiler		1102233	1					
ANR	1102396	Argument	compiler		1102233	0					
ANR	1102397	Identifier	compiler		1102233	0					
ANR	1102398	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102399	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102400	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102401	Callee	FLOAT_DATA		1102233	0					
ANR	1102402	Identifier	FLOAT_DATA		1102233	0					
ANR	1102403	ArgumentList	op		1102233	1					
ANR	1102404	Argument	op		1102233	0					
ANR	1102405	Identifier	op		1102233	0					
ANR	1102406	Identifier	LOAD_DATA		1102233	1					
ANR	1102407	Argument	TMP_FREG2		1102233	2					
ANR	1102408	Identifier	TMP_FREG2		1102233	0					
ANR	1102409	Argument	src2		1102233	3					
ANR	1102410	Identifier	src2		1102233	0					
ANR	1102411	Argument	src2w		1102233	4					
ANR	1102412	Identifier	src2w		1102233	0					
ANR	1102413	CompoundStatement		26:85:667:667	1102233	1					
ANR	1102414	ExpressionStatement	FAIL_IF ( compiler -> error )	1120:3:36429:36453	1102233	0	True				
ANR	1102415	CallExpression	FAIL_IF ( compiler -> error )		1102233	0					
ANR	1102416	Callee	FAIL_IF		1102233	0					
ANR	1102417	Identifier	FAIL_IF		1102233	0					
ANR	1102418	ArgumentList	compiler -> error		1102233	1					
ANR	1102419	Argument	compiler -> error		1102233	0					
ANR	1102420	PtrMemberAccess	compiler -> error		1102233	0					
ANR	1102421	Identifier	compiler		1102233	0					
ANR	1102422	Identifier	error		1102233	1					
ANR	1102423	ExpressionStatement	src2 = TMP_FREG2	1121:3:36458:36474	1102233	1	True				
ANR	1102424	AssignmentExpression	src2 = TMP_FREG2		1102233	0		=			
ANR	1102425	Identifier	src2		1102233	0					
ANR	1102426	Identifier	TMP_FREG2		1102233	1					
ANR	1102427	ElseStatement	else		1102233	0					
ANR	1102428	ExpressionStatement	flags |= SLOW_SRC2	1123:3:36488:36506	1102233	0	True				
ANR	1102429	AssignmentExpression	flags |= SLOW_SRC2		1102233	0		|=			
ANR	1102430	Identifier	flags		1102233	0					
ANR	1102431	Identifier	SLOW_SRC2		1102233	1					
ANR	1102432	ElseStatement	else		1102233	0					
ANR	1102433	ExpressionStatement	src2 <<= 1	1126:2:36519:36529	1102233	0	True				
ANR	1102434	AssignmentExpression	src2 <<= 1		1102233	0		<<=			
ANR	1102435	Identifier	src2		1102233	0					
ANR	1102436	PrimaryExpression	1		1102233	1					
ANR	1102437	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1102233	11					
ANR	1102438	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	1128:5:36537:36596	1102233	0	True				
ANR	1102439	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1102233	0		==			
ANR	1102440	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1102233	0		&			
ANR	1102441	Identifier	flags		1102233	0					
ANR	1102442	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1102233	1		|			
ANR	1102443	Identifier	SLOW_SRC1		1102233	0					
ANR	1102444	Identifier	SLOW_SRC2		1102233	1					
ANR	1102445	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1102233	1		|			
ANR	1102446	Identifier	SLOW_SRC1		1102233	0					
ANR	1102447	Identifier	SLOW_SRC2		1102233	1					
ANR	1102448	CompoundStatement		35:67:842:842	1102233	1					
ANR	1102449	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1102233	0					
ANR	1102450	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1129:6:36607:36679	1102233	0	True				
ANR	1102451	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1102233	0		&&			
ANR	1102452	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1102233	0					
ANR	1102453	UnaryOperator	!		1102233	0					
ANR	1102454	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1102233	1					
ANR	1102455	Callee	can_cache		1102233	0					
ANR	1102456	Identifier	can_cache		1102233	0					
ANR	1102457	ArgumentList	src1		1102233	1					
ANR	1102458	Argument	src1		1102233	0					
ANR	1102459	Identifier	src1		1102233	0					
ANR	1102460	Argument	src1w		1102233	1					
ANR	1102461	Identifier	src1w		1102233	0					
ANR	1102462	Argument	src2		1102233	2					
ANR	1102463	Identifier	src2		1102233	0					
ANR	1102464	Argument	src2w		1102233	3					
ANR	1102465	Identifier	src2w		1102233	0					
ANR	1102466	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1102233	1					
ANR	1102467	Callee	can_cache		1102233	0					
ANR	1102468	Identifier	can_cache		1102233	0					
ANR	1102469	ArgumentList	src1		1102233	1					
ANR	1102470	Argument	src1		1102233	0					
ANR	1102471	Identifier	src1		1102233	0					
ANR	1102472	Argument	src1w		1102233	1					
ANR	1102473	Identifier	src1w		1102233	0					
ANR	1102474	Argument	dst		1102233	2					
ANR	1102475	Identifier	dst		1102233	0					
ANR	1102476	Argument	dstw		1102233	3					
ANR	1102477	Identifier	dstw		1102233	0					
ANR	1102478	CompoundStatement		36:81:925:925	1102233	1					
ANR	1102479	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"	1130:3:36687:36781	1102233	0	True				
ANR	1102480	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"		1102233	0					
ANR	1102481	Callee	FAIL_IF		1102233	0					
ANR	1102482	Identifier	FAIL_IF		1102233	0					
ANR	1102483	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1102233	1					
ANR	1102484	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1102233	0					
ANR	1102485	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1102233	0					
ANR	1102486	Callee	getput_arg		1102233	0					
ANR	1102487	Identifier	getput_arg		1102233	0					
ANR	1102488	ArgumentList	compiler		1102233	1					
ANR	1102489	Argument	compiler		1102233	0					
ANR	1102490	Identifier	compiler		1102233	0					
ANR	1102491	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102492	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102493	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102494	Callee	FLOAT_DATA		1102233	0					
ANR	1102495	Identifier	FLOAT_DATA		1102233	0					
ANR	1102496	ArgumentList	op		1102233	1					
ANR	1102497	Argument	op		1102233	0					
ANR	1102498	Identifier	op		1102233	0					
ANR	1102499	Identifier	LOAD_DATA		1102233	1					
ANR	1102500	Argument	TMP_FREG2		1102233	2					
ANR	1102501	Identifier	TMP_FREG2		1102233	0					
ANR	1102502	Argument	src2		1102233	3					
ANR	1102503	Identifier	src2		1102233	0					
ANR	1102504	Argument	src2w		1102233	4					
ANR	1102505	Identifier	src2w		1102233	0					
ANR	1102506	Argument	src1		1102233	5					
ANR	1102507	Identifier	src1		1102233	0					
ANR	1102508	Argument	src1w		1102233	6					
ANR	1102509	Identifier	src1w		1102233	0					
ANR	1102510	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1131:3:36786:36878	1102233	1	True				
ANR	1102511	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1102233	0					
ANR	1102512	Callee	FAIL_IF		1102233	0					
ANR	1102513	Identifier	FAIL_IF		1102233	0					
ANR	1102514	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	1					
ANR	1102515	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	0					
ANR	1102516	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	0					
ANR	1102517	Callee	getput_arg		1102233	0					
ANR	1102518	Identifier	getput_arg		1102233	0					
ANR	1102519	ArgumentList	compiler		1102233	1					
ANR	1102520	Argument	compiler		1102233	0					
ANR	1102521	Identifier	compiler		1102233	0					
ANR	1102522	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102523	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102524	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102525	Callee	FLOAT_DATA		1102233	0					
ANR	1102526	Identifier	FLOAT_DATA		1102233	0					
ANR	1102527	ArgumentList	op		1102233	1					
ANR	1102528	Argument	op		1102233	0					
ANR	1102529	Identifier	op		1102233	0					
ANR	1102530	Identifier	LOAD_DATA		1102233	1					
ANR	1102531	Argument	TMP_FREG1		1102233	2					
ANR	1102532	Identifier	TMP_FREG1		1102233	0					
ANR	1102533	Argument	src1		1102233	3					
ANR	1102534	Identifier	src1		1102233	0					
ANR	1102535	Argument	src1w		1102233	4					
ANR	1102536	Identifier	src1w		1102233	0					
ANR	1102537	Argument	dst		1102233	5					
ANR	1102538	Identifier	dst		1102233	0					
ANR	1102539	Argument	dstw		1102233	6					
ANR	1102540	Identifier	dstw		1102233	0					
ANR	1102541	ElseStatement	else		1102233	0					
ANR	1102542	CompoundStatement		40:7:1134:1134	1102233	0					
ANR	1102543	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1134:3:36896:36990	1102233	0	True				
ANR	1102544	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1102233	0					
ANR	1102545	Callee	FAIL_IF		1102233	0					
ANR	1102546	Identifier	FAIL_IF		1102233	0					
ANR	1102547	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1102233	1					
ANR	1102548	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1102233	0					
ANR	1102549	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1102233	0					
ANR	1102550	Callee	getput_arg		1102233	0					
ANR	1102551	Identifier	getput_arg		1102233	0					
ANR	1102552	ArgumentList	compiler		1102233	1					
ANR	1102553	Argument	compiler		1102233	0					
ANR	1102554	Identifier	compiler		1102233	0					
ANR	1102555	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102556	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102557	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102558	Callee	FLOAT_DATA		1102233	0					
ANR	1102559	Identifier	FLOAT_DATA		1102233	0					
ANR	1102560	ArgumentList	op		1102233	1					
ANR	1102561	Argument	op		1102233	0					
ANR	1102562	Identifier	op		1102233	0					
ANR	1102563	Identifier	LOAD_DATA		1102233	1					
ANR	1102564	Argument	TMP_FREG1		1102233	2					
ANR	1102565	Identifier	TMP_FREG1		1102233	0					
ANR	1102566	Argument	src1		1102233	3					
ANR	1102567	Identifier	src1		1102233	0					
ANR	1102568	Argument	src1w		1102233	4					
ANR	1102569	Identifier	src1w		1102233	0					
ANR	1102570	Argument	src2		1102233	5					
ANR	1102571	Identifier	src2		1102233	0					
ANR	1102572	Argument	src2w		1102233	6					
ANR	1102573	Identifier	src2w		1102233	0					
ANR	1102574	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1135:3:36995:37087	1102233	1	True				
ANR	1102575	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1102233	0					
ANR	1102576	Callee	FAIL_IF		1102233	0					
ANR	1102577	Identifier	FAIL_IF		1102233	0					
ANR	1102578	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	1					
ANR	1102579	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	0					
ANR	1102580	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	0					
ANR	1102581	Callee	getput_arg		1102233	0					
ANR	1102582	Identifier	getput_arg		1102233	0					
ANR	1102583	ArgumentList	compiler		1102233	1					
ANR	1102584	Argument	compiler		1102233	0					
ANR	1102585	Identifier	compiler		1102233	0					
ANR	1102586	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102587	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102588	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102589	Callee	FLOAT_DATA		1102233	0					
ANR	1102590	Identifier	FLOAT_DATA		1102233	0					
ANR	1102591	ArgumentList	op		1102233	1					
ANR	1102592	Argument	op		1102233	0					
ANR	1102593	Identifier	op		1102233	0					
ANR	1102594	Identifier	LOAD_DATA		1102233	1					
ANR	1102595	Argument	TMP_FREG2		1102233	2					
ANR	1102596	Identifier	TMP_FREG2		1102233	0					
ANR	1102597	Argument	src2		1102233	3					
ANR	1102598	Identifier	src2		1102233	0					
ANR	1102599	Argument	src2w		1102233	4					
ANR	1102600	Identifier	src2w		1102233	0					
ANR	1102601	Argument	dst		1102233	5					
ANR	1102602	Identifier	dst		1102233	0					
ANR	1102603	Argument	dstw		1102233	6					
ANR	1102604	Identifier	dstw		1102233	0					
ANR	1102605	ElseStatement	else		1102233	0					
ANR	1102606	IfStatement	if ( flags & SLOW_SRC1 )		1102233	0					
ANR	1102607	Condition	flags & SLOW_SRC1	1138:10:37106:37122	1102233	0	True				
ANR	1102608	BitAndExpression	flags & SLOW_SRC1		1102233	0		&			
ANR	1102609	Identifier	flags		1102233	0					
ANR	1102610	Identifier	SLOW_SRC1		1102233	1					
ANR	1102611	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1139:2:37127:37219	1102233	1	True				
ANR	1102612	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1102233	0					
ANR	1102613	Callee	FAIL_IF		1102233	0					
ANR	1102614	Identifier	FAIL_IF		1102233	0					
ANR	1102615	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	1					
ANR	1102616	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	0					
ANR	1102617	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1102233	0					
ANR	1102618	Callee	getput_arg		1102233	0					
ANR	1102619	Identifier	getput_arg		1102233	0					
ANR	1102620	ArgumentList	compiler		1102233	1					
ANR	1102621	Argument	compiler		1102233	0					
ANR	1102622	Identifier	compiler		1102233	0					
ANR	1102623	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102624	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102625	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102626	Callee	FLOAT_DATA		1102233	0					
ANR	1102627	Identifier	FLOAT_DATA		1102233	0					
ANR	1102628	ArgumentList	op		1102233	1					
ANR	1102629	Argument	op		1102233	0					
ANR	1102630	Identifier	op		1102233	0					
ANR	1102631	Identifier	LOAD_DATA		1102233	1					
ANR	1102632	Argument	TMP_FREG1		1102233	2					
ANR	1102633	Identifier	TMP_FREG1		1102233	0					
ANR	1102634	Argument	src1		1102233	3					
ANR	1102635	Identifier	src1		1102233	0					
ANR	1102636	Argument	src1w		1102233	4					
ANR	1102637	Identifier	src1w		1102233	0					
ANR	1102638	Argument	dst		1102233	5					
ANR	1102639	Identifier	dst		1102233	0					
ANR	1102640	Argument	dstw		1102233	6					
ANR	1102641	Identifier	dstw		1102233	0					
ANR	1102642	ElseStatement	else		1102233	0					
ANR	1102643	IfStatement	if ( flags & SLOW_SRC2 )		1102233	0					
ANR	1102644	Condition	flags & SLOW_SRC2	1140:10:37231:37247	1102233	0	True				
ANR	1102645	BitAndExpression	flags & SLOW_SRC2		1102233	0		&			
ANR	1102646	Identifier	flags		1102233	0					
ANR	1102647	Identifier	SLOW_SRC2		1102233	1					
ANR	1102648	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1141:2:37252:37344	1102233	1	True				
ANR	1102649	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1102233	0					
ANR	1102650	Callee	FAIL_IF		1102233	0					
ANR	1102651	Identifier	FAIL_IF		1102233	0					
ANR	1102652	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	1					
ANR	1102653	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	0					
ANR	1102654	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1102233	0					
ANR	1102655	Callee	getput_arg		1102233	0					
ANR	1102656	Identifier	getput_arg		1102233	0					
ANR	1102657	ArgumentList	compiler		1102233	1					
ANR	1102658	Argument	compiler		1102233	0					
ANR	1102659	Identifier	compiler		1102233	0					
ANR	1102660	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1102233	1					
ANR	1102661	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1102233	0		|			
ANR	1102662	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102663	Callee	FLOAT_DATA		1102233	0					
ANR	1102664	Identifier	FLOAT_DATA		1102233	0					
ANR	1102665	ArgumentList	op		1102233	1					
ANR	1102666	Argument	op		1102233	0					
ANR	1102667	Identifier	op		1102233	0					
ANR	1102668	Identifier	LOAD_DATA		1102233	1					
ANR	1102669	Argument	TMP_FREG2		1102233	2					
ANR	1102670	Identifier	TMP_FREG2		1102233	0					
ANR	1102671	Argument	src2		1102233	3					
ANR	1102672	Identifier	src2		1102233	0					
ANR	1102673	Argument	src2w		1102233	4					
ANR	1102674	Identifier	src2w		1102233	0					
ANR	1102675	Argument	dst		1102233	5					
ANR	1102676	Identifier	dst		1102233	0					
ANR	1102677	Argument	dstw		1102233	6					
ANR	1102678	Identifier	dstw		1102233	0					
ANR	1102679	IfStatement	if ( flags & SLOW_SRC1 )		1102233	12					
ANR	1102680	Condition	flags & SLOW_SRC1	1143:5:37352:37368	1102233	0	True				
ANR	1102681	BitAndExpression	flags & SLOW_SRC1		1102233	0		&			
ANR	1102682	Identifier	flags		1102233	0					
ANR	1102683	Identifier	SLOW_SRC1		1102233	1					
ANR	1102684	ExpressionStatement	src1 = TMP_FREG1	1144:2:37373:37389	1102233	1	True				
ANR	1102685	AssignmentExpression	src1 = TMP_FREG1		1102233	0		=			
ANR	1102686	Identifier	src1		1102233	0					
ANR	1102687	Identifier	TMP_FREG1		1102233	1					
ANR	1102688	IfStatement	if ( flags & SLOW_SRC2 )		1102233	13					
ANR	1102689	Condition	flags & SLOW_SRC2	1145:5:37396:37412	1102233	0	True				
ANR	1102690	BitAndExpression	flags & SLOW_SRC2		1102233	0		&			
ANR	1102691	Identifier	flags		1102233	0					
ANR	1102692	Identifier	SLOW_SRC2		1102233	1					
ANR	1102693	ExpressionStatement	src2 = TMP_FREG2	1146:2:37417:37433	1102233	1	True				
ANR	1102694	AssignmentExpression	src2 = TMP_FREG2		1102233	0		=			
ANR	1102695	Identifier	src2		1102233	0					
ANR	1102696	Identifier	TMP_FREG2		1102233	1					
ANR	1102697	SwitchStatement	switch ( GET_OPCODE ( op ) )		1102233	14					
ANR	1102698	Condition	GET_OPCODE ( op )	1148:9:37445:37458	1102233	0	True				
ANR	1102699	CallExpression	GET_OPCODE ( op )		1102233	0					
ANR	1102700	Callee	GET_OPCODE		1102233	0					
ANR	1102701	Identifier	GET_OPCODE		1102233	0					
ANR	1102702	ArgumentList	op		1102233	1					
ANR	1102703	Argument	op		1102233	0					
ANR	1102704	Identifier	op		1102233	0					
ANR	1102705	CompoundStatement		55:25:1704:1704	1102233	1					
ANR	1102706	Label	case SLJIT_DADD :	1149:1:37464:37479	1102233	0	True				
ANR	1102707	Identifier	SLJIT_DADD		1102233	0					
ANR	1102708	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"	1150:2:37483:37590	1102233	1	True				
ANR	1102709	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"		1102233	0					
ANR	1102710	Callee	FAIL_IF		1102233	0					
ANR	1102711	Identifier	FAIL_IF		1102233	0					
ANR	1102712	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	1					
ANR	1102713	Argument	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102714	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102715	Callee	push_inst		1102233	0					
ANR	1102716	Identifier	push_inst		1102233	0					
ANR	1102717	ArgumentList	compiler		1102233	1					
ANR	1102718	Argument	compiler		1102233	0					
ANR	1102719	Identifier	compiler		1102233	0					
ANR	1102720	Argument	"SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	1					
ANR	1102721	InclusiveOrExpression	"SELECT_FOP ( op , FADDS , FADDD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	0		|			
ANR	1102722	CallExpression	"SELECT_FOP ( op , FADDS , FADDD )"		1102233	0					
ANR	1102723	Callee	SELECT_FOP		1102233	0					
ANR	1102724	Identifier	SELECT_FOP		1102233	0					
ANR	1102725	ArgumentList	op		1102233	1					
ANR	1102726	Argument	op		1102233	0					
ANR	1102727	Identifier	op		1102233	0					
ANR	1102728	Argument	FADDS		1102233	1					
ANR	1102729	Identifier	FADDS		1102233	0					
ANR	1102730	Argument	FADDD		1102233	2					
ANR	1102731	Identifier	FADDD		1102233	0					
ANR	1102732	InclusiveOrExpression	DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102733	CallExpression	DA ( dst_r )		1102233	0					
ANR	1102734	Callee	DA		1102233	0					
ANR	1102735	Identifier	DA		1102233	0					
ANR	1102736	ArgumentList	dst_r		1102233	1					
ANR	1102737	Argument	dst_r		1102233	0					
ANR	1102738	Identifier	dst_r		1102233	0					
ANR	1102739	InclusiveOrExpression	S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102740	CallExpression	S1A ( src1 )		1102233	0					
ANR	1102741	Callee	S1A		1102233	0					
ANR	1102742	Identifier	S1A		1102233	0					
ANR	1102743	ArgumentList	src1		1102233	1					
ANR	1102744	Argument	src1		1102233	0					
ANR	1102745	Identifier	src1		1102233	0					
ANR	1102746	CallExpression	S2A ( src2 )		1102233	1					
ANR	1102747	Callee	S2A		1102233	0					
ANR	1102748	Identifier	S2A		1102233	0					
ANR	1102749	ArgumentList	src2		1102233	1					
ANR	1102750	Argument	src2		1102233	0					
ANR	1102751	Identifier	src2		1102233	0					
ANR	1102752	Argument	MOVABLE_INS		1102233	2					
ANR	1102753	Identifier	MOVABLE_INS		1102233	0					
ANR	1102754	BreakStatement	break ;	1151:2:37594:37599	1102233	2	True				
ANR	1102755	Label	case SLJIT_DSUB :	1153:1:37603:37618	1102233	3	True				
ANR	1102756	Identifier	SLJIT_DSUB		1102233	0					
ANR	1102757	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"	1154:2:37622:37729	1102233	4	True				
ANR	1102758	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"		1102233	0					
ANR	1102759	Callee	FAIL_IF		1102233	0					
ANR	1102760	Identifier	FAIL_IF		1102233	0					
ANR	1102761	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	1					
ANR	1102762	Argument	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102763	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102764	Callee	push_inst		1102233	0					
ANR	1102765	Identifier	push_inst		1102233	0					
ANR	1102766	ArgumentList	compiler		1102233	1					
ANR	1102767	Argument	compiler		1102233	0					
ANR	1102768	Identifier	compiler		1102233	0					
ANR	1102769	Argument	"SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	1					
ANR	1102770	InclusiveOrExpression	"SELECT_FOP ( op , FSUBS , FSUBD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	0		|			
ANR	1102771	CallExpression	"SELECT_FOP ( op , FSUBS , FSUBD )"		1102233	0					
ANR	1102772	Callee	SELECT_FOP		1102233	0					
ANR	1102773	Identifier	SELECT_FOP		1102233	0					
ANR	1102774	ArgumentList	op		1102233	1					
ANR	1102775	Argument	op		1102233	0					
ANR	1102776	Identifier	op		1102233	0					
ANR	1102777	Argument	FSUBS		1102233	1					
ANR	1102778	Identifier	FSUBS		1102233	0					
ANR	1102779	Argument	FSUBD		1102233	2					
ANR	1102780	Identifier	FSUBD		1102233	0					
ANR	1102781	InclusiveOrExpression	DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102782	CallExpression	DA ( dst_r )		1102233	0					
ANR	1102783	Callee	DA		1102233	0					
ANR	1102784	Identifier	DA		1102233	0					
ANR	1102785	ArgumentList	dst_r		1102233	1					
ANR	1102786	Argument	dst_r		1102233	0					
ANR	1102787	Identifier	dst_r		1102233	0					
ANR	1102788	InclusiveOrExpression	S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102789	CallExpression	S1A ( src1 )		1102233	0					
ANR	1102790	Callee	S1A		1102233	0					
ANR	1102791	Identifier	S1A		1102233	0					
ANR	1102792	ArgumentList	src1		1102233	1					
ANR	1102793	Argument	src1		1102233	0					
ANR	1102794	Identifier	src1		1102233	0					
ANR	1102795	CallExpression	S2A ( src2 )		1102233	1					
ANR	1102796	Callee	S2A		1102233	0					
ANR	1102797	Identifier	S2A		1102233	0					
ANR	1102798	ArgumentList	src2		1102233	1					
ANR	1102799	Argument	src2		1102233	0					
ANR	1102800	Identifier	src2		1102233	0					
ANR	1102801	Argument	MOVABLE_INS		1102233	2					
ANR	1102802	Identifier	MOVABLE_INS		1102233	0					
ANR	1102803	BreakStatement	break ;	1155:2:37733:37738	1102233	5	True				
ANR	1102804	Label	case SLJIT_DMUL :	1157:1:37742:37757	1102233	6	True				
ANR	1102805	Identifier	SLJIT_DMUL		1102233	0					
ANR	1102806	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"	1158:2:37761:37868	1102233	7	True				
ANR	1102807	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"		1102233	0					
ANR	1102808	Callee	FAIL_IF		1102233	0					
ANR	1102809	Identifier	FAIL_IF		1102233	0					
ANR	1102810	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	1					
ANR	1102811	Argument	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102812	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102813	Callee	push_inst		1102233	0					
ANR	1102814	Identifier	push_inst		1102233	0					
ANR	1102815	ArgumentList	compiler		1102233	1					
ANR	1102816	Argument	compiler		1102233	0					
ANR	1102817	Identifier	compiler		1102233	0					
ANR	1102818	Argument	"SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	1					
ANR	1102819	InclusiveOrExpression	"SELECT_FOP ( op , FMULS , FMULD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	0		|			
ANR	1102820	CallExpression	"SELECT_FOP ( op , FMULS , FMULD )"		1102233	0					
ANR	1102821	Callee	SELECT_FOP		1102233	0					
ANR	1102822	Identifier	SELECT_FOP		1102233	0					
ANR	1102823	ArgumentList	op		1102233	1					
ANR	1102824	Argument	op		1102233	0					
ANR	1102825	Identifier	op		1102233	0					
ANR	1102826	Argument	FMULS		1102233	1					
ANR	1102827	Identifier	FMULS		1102233	0					
ANR	1102828	Argument	FMULD		1102233	2					
ANR	1102829	Identifier	FMULD		1102233	0					
ANR	1102830	InclusiveOrExpression	DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102831	CallExpression	DA ( dst_r )		1102233	0					
ANR	1102832	Callee	DA		1102233	0					
ANR	1102833	Identifier	DA		1102233	0					
ANR	1102834	ArgumentList	dst_r		1102233	1					
ANR	1102835	Argument	dst_r		1102233	0					
ANR	1102836	Identifier	dst_r		1102233	0					
ANR	1102837	InclusiveOrExpression	S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102838	CallExpression	S1A ( src1 )		1102233	0					
ANR	1102839	Callee	S1A		1102233	0					
ANR	1102840	Identifier	S1A		1102233	0					
ANR	1102841	ArgumentList	src1		1102233	1					
ANR	1102842	Argument	src1		1102233	0					
ANR	1102843	Identifier	src1		1102233	0					
ANR	1102844	CallExpression	S2A ( src2 )		1102233	1					
ANR	1102845	Callee	S2A		1102233	0					
ANR	1102846	Identifier	S2A		1102233	0					
ANR	1102847	ArgumentList	src2		1102233	1					
ANR	1102848	Argument	src2		1102233	0					
ANR	1102849	Identifier	src2		1102233	0					
ANR	1102850	Argument	MOVABLE_INS		1102233	2					
ANR	1102851	Identifier	MOVABLE_INS		1102233	0					
ANR	1102852	BreakStatement	break ;	1159:2:37872:37877	1102233	8	True				
ANR	1102853	Label	case SLJIT_DDIV :	1161:1:37881:37896	1102233	9	True				
ANR	1102854	Identifier	SLJIT_DDIV		1102233	0					
ANR	1102855	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"	1162:2:37900:38007	1102233	10	True				
ANR	1102856	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS ) )"		1102233	0					
ANR	1102857	Callee	FAIL_IF		1102233	0					
ANR	1102858	Identifier	FAIL_IF		1102233	0					
ANR	1102859	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	1					
ANR	1102860	Argument	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102861	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 ) , MOVABLE_INS )"		1102233	0					
ANR	1102862	Callee	push_inst		1102233	0					
ANR	1102863	Identifier	push_inst		1102233	0					
ANR	1102864	ArgumentList	compiler		1102233	1					
ANR	1102865	Argument	compiler		1102233	0					
ANR	1102866	Identifier	compiler		1102233	0					
ANR	1102867	Argument	"SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	1					
ANR	1102868	InclusiveOrExpression	"SELECT_FOP ( op , FDIVS , FDIVD ) | DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )"		1102233	0		|			
ANR	1102869	CallExpression	"SELECT_FOP ( op , FDIVS , FDIVD )"		1102233	0					
ANR	1102870	Callee	SELECT_FOP		1102233	0					
ANR	1102871	Identifier	SELECT_FOP		1102233	0					
ANR	1102872	ArgumentList	op		1102233	1					
ANR	1102873	Argument	op		1102233	0					
ANR	1102874	Identifier	op		1102233	0					
ANR	1102875	Argument	FDIVS		1102233	1					
ANR	1102876	Identifier	FDIVS		1102233	0					
ANR	1102877	Argument	FDIVD		1102233	2					
ANR	1102878	Identifier	FDIVD		1102233	0					
ANR	1102879	InclusiveOrExpression	DA ( dst_r ) | S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102880	CallExpression	DA ( dst_r )		1102233	0					
ANR	1102881	Callee	DA		1102233	0					
ANR	1102882	Identifier	DA		1102233	0					
ANR	1102883	ArgumentList	dst_r		1102233	1					
ANR	1102884	Argument	dst_r		1102233	0					
ANR	1102885	Identifier	dst_r		1102233	0					
ANR	1102886	InclusiveOrExpression	S1A ( src1 ) | S2A ( src2 )		1102233	1		|			
ANR	1102887	CallExpression	S1A ( src1 )		1102233	0					
ANR	1102888	Callee	S1A		1102233	0					
ANR	1102889	Identifier	S1A		1102233	0					
ANR	1102890	ArgumentList	src1		1102233	1					
ANR	1102891	Argument	src1		1102233	0					
ANR	1102892	Identifier	src1		1102233	0					
ANR	1102893	CallExpression	S2A ( src2 )		1102233	1					
ANR	1102894	Callee	S2A		1102233	0					
ANR	1102895	Identifier	S2A		1102233	0					
ANR	1102896	ArgumentList	src2		1102233	1					
ANR	1102897	Argument	src2		1102233	0					
ANR	1102898	Identifier	src2		1102233	0					
ANR	1102899	Argument	MOVABLE_INS		1102233	2					
ANR	1102900	Identifier	MOVABLE_INS		1102233	0					
ANR	1102901	BreakStatement	break ;	1163:2:38011:38016	1102233	11	True				
ANR	1102902	IfStatement	if ( dst_r == TMP_FREG2 )		1102233	15					
ANR	1102903	Condition	dst_r == TMP_FREG2	1166:5:38027:38044	1102233	0	True				
ANR	1102904	EqualityExpression	dst_r == TMP_FREG2		1102233	0		==			
ANR	1102905	Identifier	dst_r		1102233	0					
ANR	1102906	Identifier	TMP_FREG2		1102233	1					
ANR	1102907	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"	1167:2:38049:38124	1102233	1	True				
ANR	1102908	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"		1102233	0					
ANR	1102909	Callee	FAIL_IF		1102233	0					
ANR	1102910	Identifier	FAIL_IF		1102233	0					
ANR	1102911	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1102233	1					
ANR	1102912	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1102233	0					
ANR	1102913	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1102233	0					
ANR	1102914	Callee	emit_op_mem2		1102233	0					
ANR	1102915	Identifier	emit_op_mem2		1102233	0					
ANR	1102916	ArgumentList	compiler		1102233	1					
ANR	1102917	Argument	compiler		1102233	0					
ANR	1102918	Identifier	compiler		1102233	0					
ANR	1102919	Argument	FLOAT_DATA ( op )		1102233	1					
ANR	1102920	CallExpression	FLOAT_DATA ( op )		1102233	0					
ANR	1102921	Callee	FLOAT_DATA		1102233	0					
ANR	1102922	Identifier	FLOAT_DATA		1102233	0					
ANR	1102923	ArgumentList	op		1102233	1					
ANR	1102924	Argument	op		1102233	0					
ANR	1102925	Identifier	op		1102233	0					
ANR	1102926	Argument	TMP_FREG2		1102233	2					
ANR	1102927	Identifier	TMP_FREG2		1102233	0					
ANR	1102928	Argument	dst		1102233	3					
ANR	1102929	Identifier	dst		1102233	0					
ANR	1102930	Argument	dstw		1102233	4					
ANR	1102931	Identifier	dstw		1102233	0					
ANR	1102932	Argument	0		1102233	5					
ANR	1102933	PrimaryExpression	0		1102233	0					
ANR	1102934	Argument	0		1102233	6					
ANR	1102935	PrimaryExpression	0		1102233	0					
ANR	1102936	ReturnStatement	return SLJIT_SUCCESS ;	1169:1:38128:38148	1102233	16	True				
ANR	1102937	Identifier	SLJIT_SUCCESS		1102233	0					
ANR	1102938	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1102233	1					
ANR	1102939	Identifier	sljit_emit_fop2		1102233	2					
ANR	1102940	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1102233	3					
ANR	1102941	Parameter	struct sljit_compiler * compiler	1090:50:35616:35646	1102233	0	True				
ANR	1102942	ParameterType	struct sljit_compiler *		1102233	0					
ANR	1102943	Identifier	compiler		1102233	1					
ANR	1102944	Parameter	sljit_si op	1090:83:35649:35659	1102233	1	True				
ANR	1102945	ParameterType	sljit_si		1102233	0					
ANR	1102946	Identifier	op		1102233	1					
ANR	1102947	Parameter	sljit_si dst	1091:1:35663:35674	1102233	2	True				
ANR	1102948	ParameterType	sljit_si		1102233	0					
ANR	1102949	Identifier	dst		1102233	1					
ANR	1102950	Parameter	sljit_sw dstw	1091:15:35677:35689	1102233	3	True				
ANR	1102951	ParameterType	sljit_sw		1102233	0					
ANR	1102952	Identifier	dstw		1102233	1					
ANR	1102953	Parameter	sljit_si src1	1092:1:35693:35705	1102233	4	True				
ANR	1102954	ParameterType	sljit_si		1102233	0					
ANR	1102955	Identifier	src1		1102233	1					
ANR	1102956	Parameter	sljit_sw src1w	1092:16:35708:35721	1102233	5	True				
ANR	1102957	ParameterType	sljit_sw		1102233	0					
ANR	1102958	Identifier	src1w		1102233	1					
ANR	1102959	Parameter	sljit_si src2	1093:1:35725:35737	1102233	6	True				
ANR	1102960	ParameterType	sljit_si		1102233	0					
ANR	1102961	Identifier	src2		1102233	1					
ANR	1102962	Parameter	sljit_sw src2w	1093:16:35740:35753	1102233	7	True				
ANR	1102963	ParameterType	sljit_sw		1102233	0					
ANR	1102964	Identifier	src2w		1102233	1					
ANR	1102965	CFGEntryNode	ENTRY		1102233		True				
ANR	1102966	CFGExitNode	EXIT		1102233		True				
ANR	1102967	Symbol	SLOW_SRC2		1102233						
ANR	1102968	Symbol	FADDS		1102233						
ANR	1102969	Symbol	compiler -> cache_argw		1102233						
ANR	1102970	Symbol	TMP_FREG2		1102233						
ANR	1102971	Symbol	S1A		1102233						
ANR	1102972	Symbol	src1w		1102233						
ANR	1102973	Symbol	FDIVD		1102233						
ANR	1102974	Symbol	dst		1102233						
ANR	1102975	Symbol	FLOAT_DATA		1102233						
ANR	1102976	Symbol	LOAD_DATA		1102233						
ANR	1102977	Symbol	TMP_FREG1		1102233						
ANR	1102978	Symbol	SLJIT_MEM		1102233						
ANR	1102979	Symbol	SLOW_SRC1		1102233						
ANR	1102980	Symbol	flags		1102233						
ANR	1102981	Symbol	* compiler		1102233						
ANR	1102982	Symbol	FMULS		1102233						
ANR	1102983	Symbol	dst_r		1102233						
ANR	1102984	Symbol	GET_OPCODE		1102233						
ANR	1102985	Symbol	FADDD		1102233						
ANR	1102986	Symbol	getput_arg		1102233						
ANR	1102987	Symbol	FMULD		1102233						
ANR	1102988	Symbol	compiler		1102233						
ANR	1102989	Symbol	src2w		1102233						
ANR	1102990	Symbol	can_cache		1102233						
ANR	1102991	Symbol	op		1102233						
ANR	1102992	Symbol	push_inst		1102233						
ANR	1102993	Symbol	FAST_IS_REG		1102233						
ANR	1102994	Symbol	S2A		1102233						
ANR	1102995	Symbol	compiler -> cache_arg		1102233						
ANR	1102996	Symbol	emit_op_mem2		1102233						
ANR	1102997	Symbol	SLJIT_SUCCESS		1102233						
ANR	1102998	Symbol	check_sljit_emit_fop2		1102233						
ANR	1102999	Symbol	FSUBD		1102233						
ANR	1103000	Symbol	SELECT_FOP		1102233						
ANR	1103001	Symbol	FDIVS		1102233						
ANR	1103002	Symbol	src1		1102233						
ANR	1103003	Symbol	FSUBS		1102233						
ANR	1103004	Symbol	src2		1102233						
ANR	1103005	Symbol	getput_arg_fast		1102233						
ANR	1103006	Symbol	MOVABLE_INS		1102233						
ANR	1103007	Symbol	dstw		1102233						
ANR	1103008	Symbol	compiler -> error		1102233						
ANR	1103009	Symbol	DA		1102233						
ANR	1103010	Function	sljit_emit_fast_enter	1172:1:38154:38922							
ANR	1103011	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1103010	0					
ANR	1103012	CompoundStatement		1180:0:38537:38922	1103010	0					
ANR	1103013	ExpressionStatement	CHECK_ERROR ( )	1181:1:38540:38553	1103010	0	True				
ANR	1103014	CallExpression	CHECK_ERROR ( )		1103010	0					
ANR	1103015	Callee	CHECK_ERROR		1103010	0					
ANR	1103016	Identifier	CHECK_ERROR		1103010	0					
ANR	1103017	ArgumentList			1103010	1					
ANR	1103018	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	1182:1:38556:38611	1103010	1	True				
ANR	1103019	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1103010	0					
ANR	1103020	Callee	CHECK		1103010	0					
ANR	1103021	Identifier	CHECK		1103010	0					
ANR	1103022	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1103010	1					
ANR	1103023	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1103010	0					
ANR	1103024	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1103010	0					
ANR	1103025	Callee	check_sljit_emit_fast_enter		1103010	0					
ANR	1103026	Identifier	check_sljit_emit_fast_enter		1103010	0					
ANR	1103027	ArgumentList	compiler		1103010	1					
ANR	1103028	Argument	compiler		1103010	0					
ANR	1103029	Identifier	compiler		1103010	0					
ANR	1103030	Argument	dst		1103010	1					
ANR	1103031	Identifier	dst		1103010	0					
ANR	1103032	Argument	dstw		1103010	2					
ANR	1103033	Identifier	dstw		1103010	0					
ANR	1103034	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1183:1:38614:38644	1103010	2	True				
ANR	1103035	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1103010	0					
ANR	1103036	Callee	ADJUST_LOCAL_OFFSET		1103010	0					
ANR	1103037	Identifier	ADJUST_LOCAL_OFFSET		1103010	0					
ANR	1103038	ArgumentList	dst		1103010	1					
ANR	1103039	Argument	dst		1103010	0					
ANR	1103040	Identifier	dst		1103010	0					
ANR	1103041	Argument	dstw		1103010	1					
ANR	1103042	Identifier	dstw		1103010	0					
ANR	1103043	IfStatement	if ( dst == SLJIT_UNUSED )		1103010	3					
ANR	1103044	Condition	dst == SLJIT_UNUSED	1186:5:38699:38717	1103010	0	True				
ANR	1103045	EqualityExpression	dst == SLJIT_UNUSED		1103010	0		==			
ANR	1103046	Identifier	dst		1103010	0					
ANR	1103047	Identifier	SLJIT_UNUSED		1103010	1					
ANR	1103048	ReturnStatement	return SLJIT_SUCCESS ;	1187:2:38722:38742	1103010	1	True				
ANR	1103049	Identifier	SLJIT_SUCCESS		1103010	0					
ANR	1103050	IfStatement	if ( FAST_IS_REG ( dst ) )		1103010	4					
ANR	1103051	Condition	FAST_IS_REG ( dst )	1189:5:38750:38765	1103010	0	True				
ANR	1103052	CallExpression	FAST_IS_REG ( dst )		1103010	0					
ANR	1103053	Callee	FAST_IS_REG		1103010	0					
ANR	1103054	Identifier	FAST_IS_REG		1103010	0					
ANR	1103055	ArgumentList	dst		1103010	1					
ANR	1103056	Argument	dst		1103010	0					
ANR	1103057	Identifier	dst		1103010	0					
ANR	1103058	ReturnStatement	"return push_inst ( compiler , OR | D ( dst ) | S1 ( 0 ) | S2 ( TMP_LINK ) , DR ( dst ) ) ;"	1190:2:38770:38841	1103010	1	True				
ANR	1103059	CallExpression	"push_inst ( compiler , OR | D ( dst ) | S1 ( 0 ) | S2 ( TMP_LINK ) , DR ( dst ) )"		1103010	0					
ANR	1103060	Callee	push_inst		1103010	0					
ANR	1103061	Identifier	push_inst		1103010	0					
ANR	1103062	ArgumentList	compiler		1103010	1					
ANR	1103063	Argument	compiler		1103010	0					
ANR	1103064	Identifier	compiler		1103010	0					
ANR	1103065	Argument	OR | D ( dst ) | S1 ( 0 ) | S2 ( TMP_LINK )		1103010	1					
ANR	1103066	InclusiveOrExpression	OR | D ( dst ) | S1 ( 0 ) | S2 ( TMP_LINK )		1103010	0		|			
ANR	1103067	Identifier	OR		1103010	0					
ANR	1103068	InclusiveOrExpression	D ( dst ) | S1 ( 0 ) | S2 ( TMP_LINK )		1103010	1		|			
ANR	1103069	CallExpression	D ( dst )		1103010	0					
ANR	1103070	Callee	D		1103010	0					
ANR	1103071	Identifier	D		1103010	0					
ANR	1103072	ArgumentList	dst		1103010	1					
ANR	1103073	Argument	dst		1103010	0					
ANR	1103074	Identifier	dst		1103010	0					
ANR	1103075	InclusiveOrExpression	S1 ( 0 ) | S2 ( TMP_LINK )		1103010	1		|			
ANR	1103076	CallExpression	S1 ( 0 )		1103010	0					
ANR	1103077	Callee	S1		1103010	0					
ANR	1103078	Identifier	S1		1103010	0					
ANR	1103079	ArgumentList	0		1103010	1					
ANR	1103080	Argument	0		1103010	0					
ANR	1103081	PrimaryExpression	0		1103010	0					
ANR	1103082	CallExpression	S2 ( TMP_LINK )		1103010	1					
ANR	1103083	Callee	S2		1103010	0					
ANR	1103084	Identifier	S2		1103010	0					
ANR	1103085	ArgumentList	TMP_LINK		1103010	1					
ANR	1103086	Argument	TMP_LINK		1103010	0					
ANR	1103087	Identifier	TMP_LINK		1103010	0					
ANR	1103088	Argument	DR ( dst )		1103010	2					
ANR	1103089	CallExpression	DR ( dst )		1103010	0					
ANR	1103090	Callee	DR		1103010	0					
ANR	1103091	Identifier	DR		1103010	0					
ANR	1103092	ArgumentList	dst		1103010	1					
ANR	1103093	Argument	dst		1103010	0					
ANR	1103094	Identifier	dst		1103010	0					
ANR	1103095	ReturnStatement	"return emit_op_mem ( compiler , WORD_DATA , TMP_LINK , dst , dstw ) ;"	1193:1:38860:38920	1103010	5	True				
ANR	1103096	CallExpression	"emit_op_mem ( compiler , WORD_DATA , TMP_LINK , dst , dstw )"		1103010	0					
ANR	1103097	Callee	emit_op_mem		1103010	0					
ANR	1103098	Identifier	emit_op_mem		1103010	0					
ANR	1103099	ArgumentList	compiler		1103010	1					
ANR	1103100	Argument	compiler		1103010	0					
ANR	1103101	Identifier	compiler		1103010	0					
ANR	1103102	Argument	WORD_DATA		1103010	1					
ANR	1103103	Identifier	WORD_DATA		1103010	0					
ANR	1103104	Argument	TMP_LINK		1103010	2					
ANR	1103105	Identifier	TMP_LINK		1103010	0					
ANR	1103106	Argument	dst		1103010	3					
ANR	1103107	Identifier	dst		1103010	0					
ANR	1103108	Argument	dstw		1103010	4					
ANR	1103109	Identifier	dstw		1103010	0					
ANR	1103110	ReturnType	undef FLOAT_DATA undef SELECT_FOP SLJIT_API_FUNC_ATTRIBUTE sljit_si		1103010	1					
ANR	1103111	Identifier	sljit_emit_fast_enter		1103010	2					
ANR	1103112	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1103010	3					
ANR	1103113	Parameter	struct sljit_compiler * compiler	1179:56:38475:38505	1103010	0	True				
ANR	1103114	ParameterType	struct sljit_compiler *		1103010	0					
ANR	1103115	Identifier	compiler		1103010	1					
ANR	1103116	Parameter	sljit_si dst	1179:89:38508:38519	1103010	1	True				
ANR	1103117	ParameterType	sljit_si		1103010	0					
ANR	1103118	Identifier	dst		1103010	1					
ANR	1103119	Parameter	sljit_sw dstw	1179:103:38522:38534	1103010	2	True				
ANR	1103120	ParameterType	sljit_sw		1103010	0					
ANR	1103121	Identifier	dstw		1103010	1					
ANR	1103122	CFGEntryNode	ENTRY		1103010		True				
ANR	1103123	CFGExitNode	EXIT		1103010		True				
ANR	1103124	Symbol	push_inst		1103010						
ANR	1103125	Symbol	check_sljit_emit_fast_enter		1103010						
ANR	1103126	Symbol	FAST_IS_REG		1103010						
ANR	1103127	Symbol	OR		1103010						
ANR	1103128	Symbol	dst		1103010						
ANR	1103129	Symbol	D		1103010						
ANR	1103130	Symbol	TMP_LINK		1103010						
ANR	1103131	Symbol	emit_op_mem		1103010						
ANR	1103132	Symbol	SLJIT_SUCCESS		1103010						
ANR	1103133	Symbol	DR		1103010						
ANR	1103134	Symbol	SLJIT_UNUSED		1103010						
ANR	1103135	Symbol	compiler		1103010						
ANR	1103136	Symbol	dstw		1103010						
ANR	1103137	Symbol	S1		1103010						
ANR	1103138	Symbol	WORD_DATA		1103010						
ANR	1103139	Symbol	S2		1103010						
ANR	1103140	Function	sljit_emit_fast_return	1196:0:38925:39578							
ANR	1103141	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1103140	0					
ANR	1103142	CompoundStatement		1197:0:39044:39578	1103140	0					
ANR	1103143	ExpressionStatement	CHECK_ERROR ( )	1198:1:39047:39060	1103140	0	True				
ANR	1103144	CallExpression	CHECK_ERROR ( )		1103140	0					
ANR	1103145	Callee	CHECK_ERROR		1103140	0					
ANR	1103146	Identifier	CHECK_ERROR		1103140	0					
ANR	1103147	ArgumentList			1103140	1					
ANR	1103148	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	1199:1:39063:39119	1103140	1	True				
ANR	1103149	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1103140	0					
ANR	1103150	Callee	CHECK		1103140	0					
ANR	1103151	Identifier	CHECK		1103140	0					
ANR	1103152	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1103140	1					
ANR	1103153	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1103140	0					
ANR	1103154	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1103140	0					
ANR	1103155	Callee	check_sljit_emit_fast_return		1103140	0					
ANR	1103156	Identifier	check_sljit_emit_fast_return		1103140	0					
ANR	1103157	ArgumentList	compiler		1103140	1					
ANR	1103158	Argument	compiler		1103140	0					
ANR	1103159	Identifier	compiler		1103140	0					
ANR	1103160	Argument	src		1103140	1					
ANR	1103161	Identifier	src		1103140	0					
ANR	1103162	Argument	srcw		1103140	2					
ANR	1103163	Identifier	srcw		1103140	0					
ANR	1103164	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1200:1:39122:39152	1103140	2	True				
ANR	1103165	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1103140	0					
ANR	1103166	Callee	ADJUST_LOCAL_OFFSET		1103140	0					
ANR	1103167	Identifier	ADJUST_LOCAL_OFFSET		1103140	0					
ANR	1103168	ArgumentList	src		1103140	1					
ANR	1103169	Argument	src		1103140	0					
ANR	1103170	Identifier	src		1103140	0					
ANR	1103171	Argument	srcw		1103140	1					
ANR	1103172	Identifier	srcw		1103140	0					
ANR	1103173	IfStatement	if ( FAST_IS_REG ( src ) )		1103140	3					
ANR	1103174	Condition	FAST_IS_REG ( src )	1202:5:39160:39175	1103140	0	True				
ANR	1103175	CallExpression	FAST_IS_REG ( src )		1103140	0					
ANR	1103176	Callee	FAST_IS_REG		1103140	0					
ANR	1103177	Identifier	FAST_IS_REG		1103140	0					
ANR	1103178	ArgumentList	src		1103140	1					
ANR	1103179	Argument	src		1103140	0					
ANR	1103180	Identifier	src		1103140	0					
ANR	1103181	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src ) , DR ( TMP_LINK ) ) )"	1203:2:39180:39258	1103140	1	True				
ANR	1103182	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src ) , DR ( TMP_LINK ) ) )"		1103140	0					
ANR	1103183	Callee	FAIL_IF		1103140	0					
ANR	1103184	Identifier	FAIL_IF		1103140	0					
ANR	1103185	ArgumentList	"push_inst ( compiler , OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src ) , DR ( TMP_LINK ) )"		1103140	1					
ANR	1103186	Argument	"push_inst ( compiler , OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src ) , DR ( TMP_LINK ) )"		1103140	0					
ANR	1103187	CallExpression	"push_inst ( compiler , OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src ) , DR ( TMP_LINK ) )"		1103140	0					
ANR	1103188	Callee	push_inst		1103140	0					
ANR	1103189	Identifier	push_inst		1103140	0					
ANR	1103190	ArgumentList	compiler		1103140	1					
ANR	1103191	Argument	compiler		1103140	0					
ANR	1103192	Identifier	compiler		1103140	0					
ANR	1103193	Argument	OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src )		1103140	1					
ANR	1103194	InclusiveOrExpression	OR | D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src )		1103140	0		|			
ANR	1103195	Identifier	OR		1103140	0					
ANR	1103196	InclusiveOrExpression	D ( TMP_LINK ) | S1 ( 0 ) | S2 ( src )		1103140	1		|			
ANR	1103197	CallExpression	D ( TMP_LINK )		1103140	0					
ANR	1103198	Callee	D		1103140	0					
ANR	1103199	Identifier	D		1103140	0					
ANR	1103200	ArgumentList	TMP_LINK		1103140	1					
ANR	1103201	Argument	TMP_LINK		1103140	0					
ANR	1103202	Identifier	TMP_LINK		1103140	0					
ANR	1103203	InclusiveOrExpression	S1 ( 0 ) | S2 ( src )		1103140	1		|			
ANR	1103204	CallExpression	S1 ( 0 )		1103140	0					
ANR	1103205	Callee	S1		1103140	0					
ANR	1103206	Identifier	S1		1103140	0					
ANR	1103207	ArgumentList	0		1103140	1					
ANR	1103208	Argument	0		1103140	0					
ANR	1103209	PrimaryExpression	0		1103140	0					
ANR	1103210	CallExpression	S2 ( src )		1103140	1					
ANR	1103211	Callee	S2		1103140	0					
ANR	1103212	Identifier	S2		1103140	0					
ANR	1103213	ArgumentList	src		1103140	1					
ANR	1103214	Argument	src		1103140	0					
ANR	1103215	Identifier	src		1103140	0					
ANR	1103216	Argument	DR ( TMP_LINK )		1103140	2					
ANR	1103217	CallExpression	DR ( TMP_LINK )		1103140	0					
ANR	1103218	Callee	DR		1103140	0					
ANR	1103219	Identifier	DR		1103140	0					
ANR	1103220	ArgumentList	TMP_LINK		1103140	1					
ANR	1103221	Argument	TMP_LINK		1103140	0					
ANR	1103222	Identifier	TMP_LINK		1103140	0					
ANR	1103223	ElseStatement	else		1103140	0					
ANR	1103224	IfStatement	if ( src & SLJIT_MEM )		1103140	0					
ANR	1103225	Condition	src & SLJIT_MEM	1204:10:39270:39284	1103140	0	True				
ANR	1103226	BitAndExpression	src & SLJIT_MEM		1103140	0		&			
ANR	1103227	Identifier	src		1103140	0					
ANR	1103228	Identifier	SLJIT_MEM		1103140	1					
ANR	1103229	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_LINK , src , srcw ) )"	1205:2:39289:39363	1103140	1	True				
ANR	1103230	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_LINK , src , srcw ) )"		1103140	0					
ANR	1103231	Callee	FAIL_IF		1103140	0					
ANR	1103232	Identifier	FAIL_IF		1103140	0					
ANR	1103233	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_LINK , src , srcw )"		1103140	1					
ANR	1103234	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_LINK , src , srcw )"		1103140	0					
ANR	1103235	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_LINK , src , srcw )"		1103140	0					
ANR	1103236	Callee	emit_op_mem		1103140	0					
ANR	1103237	Identifier	emit_op_mem		1103140	0					
ANR	1103238	ArgumentList	compiler		1103140	1					
ANR	1103239	Argument	compiler		1103140	0					
ANR	1103240	Identifier	compiler		1103140	0					
ANR	1103241	Argument	WORD_DATA | LOAD_DATA		1103140	1					
ANR	1103242	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1103140	0		|			
ANR	1103243	Identifier	WORD_DATA		1103140	0					
ANR	1103244	Identifier	LOAD_DATA		1103140	1					
ANR	1103245	Argument	TMP_LINK		1103140	2					
ANR	1103246	Identifier	TMP_LINK		1103140	0					
ANR	1103247	Argument	src		1103140	3					
ANR	1103248	Identifier	src		1103140	0					
ANR	1103249	Argument	srcw		1103140	4					
ANR	1103250	Identifier	srcw		1103140	0					
ANR	1103251	ElseStatement	else		1103140	0					
ANR	1103252	IfStatement	if ( src & SLJIT_IMM )		1103140	0					
ANR	1103253	Condition	src & SLJIT_IMM	1206:10:39375:39389	1103140	0	True				
ANR	1103254	BitAndExpression	src & SLJIT_IMM		1103140	0		&			
ANR	1103255	Identifier	src		1103140	0					
ANR	1103256	Identifier	SLJIT_IMM		1103140	1					
ANR	1103257	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_LINK , srcw ) )"	1207:2:39394:39443	1103140	1	True				
ANR	1103258	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_LINK , srcw ) )"		1103140	0					
ANR	1103259	Callee	FAIL_IF		1103140	0					
ANR	1103260	Identifier	FAIL_IF		1103140	0					
ANR	1103261	ArgumentList	"load_immediate ( compiler , TMP_LINK , srcw )"		1103140	1					
ANR	1103262	Argument	"load_immediate ( compiler , TMP_LINK , srcw )"		1103140	0					
ANR	1103263	CallExpression	"load_immediate ( compiler , TMP_LINK , srcw )"		1103140	0					
ANR	1103264	Callee	load_immediate		1103140	0					
ANR	1103265	Identifier	load_immediate		1103140	0					
ANR	1103266	ArgumentList	compiler		1103140	1					
ANR	1103267	Argument	compiler		1103140	0					
ANR	1103268	Identifier	compiler		1103140	0					
ANR	1103269	Argument	TMP_LINK		1103140	1					
ANR	1103270	Identifier	TMP_LINK		1103140	0					
ANR	1103271	Argument	srcw		1103140	2					
ANR	1103272	Identifier	srcw		1103140	0					
ANR	1103273	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 ) , UNMOVABLE_INS ) )"	1209:1:39447:39527	1103140	4	True				
ANR	1103274	CallExpression	"FAIL_IF ( push_inst ( compiler , JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 ) , UNMOVABLE_INS ) )"		1103140	0					
ANR	1103275	Callee	FAIL_IF		1103140	0					
ANR	1103276	Identifier	FAIL_IF		1103140	0					
ANR	1103277	ArgumentList	"push_inst ( compiler , JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 ) , UNMOVABLE_INS )"		1103140	1					
ANR	1103278	Argument	"push_inst ( compiler , JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 ) , UNMOVABLE_INS )"		1103140	0					
ANR	1103279	CallExpression	"push_inst ( compiler , JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 ) , UNMOVABLE_INS )"		1103140	0					
ANR	1103280	Callee	push_inst		1103140	0					
ANR	1103281	Identifier	push_inst		1103140	0					
ANR	1103282	ArgumentList	compiler		1103140	1					
ANR	1103283	Argument	compiler		1103140	0					
ANR	1103284	Identifier	compiler		1103140	0					
ANR	1103285	Argument	JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 )		1103140	1					
ANR	1103286	InclusiveOrExpression	JMPL | D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 )		1103140	0		|			
ANR	1103287	Identifier	JMPL		1103140	0					
ANR	1103288	InclusiveOrExpression	D ( 0 ) | S1 ( TMP_LINK ) | IMM ( 8 )		1103140	1		|			
ANR	1103289	CallExpression	D ( 0 )		1103140	0					
ANR	1103290	Callee	D		1103140	0					
ANR	1103291	Identifier	D		1103140	0					
ANR	1103292	ArgumentList	0		1103140	1					
ANR	1103293	Argument	0		1103140	0					
ANR	1103294	PrimaryExpression	0		1103140	0					
ANR	1103295	InclusiveOrExpression	S1 ( TMP_LINK ) | IMM ( 8 )		1103140	1		|			
ANR	1103296	CallExpression	S1 ( TMP_LINK )		1103140	0					
ANR	1103297	Callee	S1		1103140	0					
ANR	1103298	Identifier	S1		1103140	0					
ANR	1103299	ArgumentList	TMP_LINK		1103140	1					
ANR	1103300	Argument	TMP_LINK		1103140	0					
ANR	1103301	Identifier	TMP_LINK		1103140	0					
ANR	1103302	CallExpression	IMM ( 8 )		1103140	1					
ANR	1103303	Callee	IMM		1103140	0					
ANR	1103304	Identifier	IMM		1103140	0					
ANR	1103305	ArgumentList	8		1103140	1					
ANR	1103306	Argument	8		1103140	0					
ANR	1103307	PrimaryExpression	8		1103140	0					
ANR	1103308	Argument	UNMOVABLE_INS		1103140	2					
ANR	1103309	Identifier	UNMOVABLE_INS		1103140	0					
ANR	1103310	ReturnStatement	"return push_inst ( compiler , NOP , UNMOVABLE_INS ) ;"	1210:1:39530:39576	1103140	5	True				
ANR	1103311	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1103140	0					
ANR	1103312	Callee	push_inst		1103140	0					
ANR	1103313	Identifier	push_inst		1103140	0					
ANR	1103314	ArgumentList	compiler		1103140	1					
ANR	1103315	Argument	compiler		1103140	0					
ANR	1103316	Identifier	compiler		1103140	0					
ANR	1103317	Argument	NOP		1103140	1					
ANR	1103318	Identifier	NOP		1103140	0					
ANR	1103319	Argument	UNMOVABLE_INS		1103140	2					
ANR	1103320	Identifier	UNMOVABLE_INS		1103140	0					
ANR	1103321	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1103140	1					
ANR	1103322	Identifier	sljit_emit_fast_return		1103140	2					
ANR	1103323	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1103140	3					
ANR	1103324	Parameter	struct sljit_compiler * compiler	1196:57:38982:39012	1103140	0	True				
ANR	1103325	ParameterType	struct sljit_compiler *		1103140	0					
ANR	1103326	Identifier	compiler		1103140	1					
ANR	1103327	Parameter	sljit_si src	1196:90:39015:39026	1103140	1	True				
ANR	1103328	ParameterType	sljit_si		1103140	0					
ANR	1103329	Identifier	src		1103140	1					
ANR	1103330	Parameter	sljit_sw srcw	1196:104:39029:39041	1103140	2	True				
ANR	1103331	ParameterType	sljit_sw		1103140	0					
ANR	1103332	Identifier	srcw		1103140	1					
ANR	1103333	CFGEntryNode	ENTRY		1103140		True				
ANR	1103334	CFGExitNode	EXIT		1103140		True				
ANR	1103335	Symbol	push_inst		1103140						
ANR	1103336	Symbol	FAST_IS_REG		1103140						
ANR	1103337	Symbol	OR		1103140						
ANR	1103338	Symbol	D		1103140						
ANR	1103339	Symbol	LOAD_DATA		1103140						
ANR	1103340	Symbol	src		1103140						
ANR	1103341	Symbol	srcw		1103140						
ANR	1103342	Symbol	TMP_LINK		1103140						
ANR	1103343	Symbol	SLJIT_MEM		1103140						
ANR	1103344	Symbol	UNMOVABLE_INS		1103140						
ANR	1103345	Symbol	IMM		1103140						
ANR	1103346	Symbol	emit_op_mem		1103140						
ANR	1103347	Symbol	DR		1103140						
ANR	1103348	Symbol	NOP		1103140						
ANR	1103349	Symbol	SLJIT_IMM		1103140						
ANR	1103350	Symbol	check_sljit_emit_fast_return		1103140						
ANR	1103351	Symbol	load_immediate		1103140						
ANR	1103352	Symbol	compiler		1103140						
ANR	1103353	Symbol	JMPL		1103140						
ANR	1103354	Symbol	S1		1103140						
ANR	1103355	Symbol	WORD_DATA		1103140						
ANR	1103356	Symbol	S2		1103140						
ANR	1103357	Function	sljit_emit_label	1217:25:39835:40296							
ANR	1103358	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1103357	0					
ANR	1103359	CompoundStatement		1218:0:39905:40296	1103357	0					
ANR	1103360	IdentifierDeclStatement	struct sljit_label * label ;	1219:1:39908:39933	1103357	0	True				
ANR	1103361	IdentifierDecl	* label		1103357	0					
ANR	1103362	IdentifierDeclType	struct sljit_label *		1103357	0					
ANR	1103363	Identifier	label		1103357	1					
ANR	1103364	ExpressionStatement	CHECK_ERROR_PTR ( )	1221:1:39937:39954	1103357	1	True				
ANR	1103365	CallExpression	CHECK_ERROR_PTR ( )		1103357	0					
ANR	1103366	Callee	CHECK_ERROR_PTR		1103357	0					
ANR	1103367	Identifier	CHECK_ERROR_PTR		1103357	0					
ANR	1103368	ArgumentList			1103357	1					
ANR	1103369	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	1222:1:39957:40000	1103357	2	True				
ANR	1103370	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1103357	0					
ANR	1103371	Callee	CHECK_PTR		1103357	0					
ANR	1103372	Identifier	CHECK_PTR		1103357	0					
ANR	1103373	ArgumentList	check_sljit_emit_label ( compiler )		1103357	1					
ANR	1103374	Argument	check_sljit_emit_label ( compiler )		1103357	0					
ANR	1103375	CallExpression	check_sljit_emit_label ( compiler )		1103357	0					
ANR	1103376	Callee	check_sljit_emit_label		1103357	0					
ANR	1103377	Identifier	check_sljit_emit_label		1103357	0					
ANR	1103378	ArgumentList	compiler		1103357	1					
ANR	1103379	Argument	compiler		1103357	0					
ANR	1103380	Identifier	compiler		1103357	0					
ANR	1103381	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1103357	3					
ANR	1103382	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	1224:5:40008:40075	1103357	0	True				
ANR	1103383	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1103357	0		&&			
ANR	1103384	PtrMemberAccess	compiler -> last_label		1103357	0					
ANR	1103385	Identifier	compiler		1103357	0					
ANR	1103386	Identifier	last_label		1103357	1					
ANR	1103387	EqualityExpression	compiler -> last_label -> size == compiler -> size		1103357	1		==			
ANR	1103388	PtrMemberAccess	compiler -> last_label -> size		1103357	0					
ANR	1103389	PtrMemberAccess	compiler -> last_label		1103357	0					
ANR	1103390	Identifier	compiler		1103357	0					
ANR	1103391	Identifier	last_label		1103357	1					
ANR	1103392	Identifier	size		1103357	1					
ANR	1103393	PtrMemberAccess	compiler -> size		1103357	1					
ANR	1103394	Identifier	compiler		1103357	0					
ANR	1103395	Identifier	size		1103357	1					
ANR	1103396	ReturnStatement	return compiler -> last_label ;	1225:2:40080:40107	1103357	1	True				
ANR	1103397	PtrMemberAccess	compiler -> last_label		1103357	0					
ANR	1103398	Identifier	compiler		1103357	0					
ANR	1103399	Identifier	last_label		1103357	1					
ANR	1103400	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	1227:1:40111:40189	1103357	4	True				
ANR	1103401	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1103357	0		=			
ANR	1103402	Identifier	label		1103357	0					
ANR	1103403	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1103357	1					
ANR	1103404	CastTarget	struct sljit_label *		1103357	0					
ANR	1103405	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1103357	1					
ANR	1103406	Callee	ensure_abuf		1103357	0					
ANR	1103407	Identifier	ensure_abuf		1103357	0					
ANR	1103408	ArgumentList	compiler		1103357	1					
ANR	1103409	Argument	compiler		1103357	0					
ANR	1103410	Identifier	compiler		1103357	0					
ANR	1103411	Argument	sizeof ( struct sljit_label )		1103357	1					
ANR	1103412	SizeofExpression	sizeof ( struct sljit_label )		1103357	0					
ANR	1103413	Sizeof	sizeof		1103357	0					
ANR	1103414	SizeofOperand	struct sljit_label		1103357	1					
ANR	1103415	ExpressionStatement	PTR_FAIL_IF ( ! label )	1228:1:40192:40211	1103357	5	True				
ANR	1103416	CallExpression	PTR_FAIL_IF ( ! label )		1103357	0					
ANR	1103417	Callee	PTR_FAIL_IF		1103357	0					
ANR	1103418	Identifier	PTR_FAIL_IF		1103357	0					
ANR	1103419	ArgumentList	! label		1103357	1					
ANR	1103420	Argument	! label		1103357	0					
ANR	1103421	UnaryOperationExpression	! label		1103357	0					
ANR	1103422	UnaryOperator	!		1103357	0					
ANR	1103423	Identifier	label		1103357	1					
ANR	1103424	ExpressionStatement	"set_label ( label , compiler )"	1229:1:40214:40240	1103357	6	True				
ANR	1103425	CallExpression	"set_label ( label , compiler )"		1103357	0					
ANR	1103426	Callee	set_label		1103357	0					
ANR	1103427	Identifier	set_label		1103357	0					
ANR	1103428	ArgumentList	label		1103357	1					
ANR	1103429	Argument	label		1103357	0					
ANR	1103430	Identifier	label		1103357	0					
ANR	1103431	Argument	compiler		1103357	1					
ANR	1103432	Identifier	compiler		1103357	0					
ANR	1103433	ExpressionStatement	compiler -> delay_slot = UNMOVABLE_INS	1230:1:40243:40279	1103357	7	True				
ANR	1103434	AssignmentExpression	compiler -> delay_slot = UNMOVABLE_INS		1103357	0		=			
ANR	1103435	PtrMemberAccess	compiler -> delay_slot		1103357	0					
ANR	1103436	Identifier	compiler		1103357	0					
ANR	1103437	Identifier	delay_slot		1103357	1					
ANR	1103438	Identifier	UNMOVABLE_INS		1103357	1					
ANR	1103439	ReturnStatement	return label ;	1231:1:40282:40294	1103357	8	True				
ANR	1103440	Identifier	label		1103357	0					
ANR	1103441	ReturnType	struct sljit_label *		1103357	1					
ANR	1103442	Identifier	sljit_emit_label		1103357	2					
ANR	1103443	ParameterList	struct sljit_compiler * compiler		1103357	3					
ANR	1103444	Parameter	struct sljit_compiler * compiler	1217:62:39872:39902	1103357	0	True				
ANR	1103445	ParameterType	struct sljit_compiler *		1103357	0					
ANR	1103446	Identifier	compiler		1103357	1					
ANR	1103447	CFGEntryNode	ENTRY		1103357		True				
ANR	1103448	CFGExitNode	EXIT		1103357		True				
ANR	1103449	Symbol	compiler -> last_label -> size		1103357						
ANR	1103450	Symbol	* compiler -> last_label		1103357						
ANR	1103451	Symbol	compiler -> last_label		1103357						
ANR	1103452	Symbol	* * compiler		1103357						
ANR	1103453	Symbol	compiler -> size		1103357						
ANR	1103454	Symbol	UNMOVABLE_INS		1103357						
ANR	1103455	Symbol	check_sljit_emit_label		1103357						
ANR	1103456	Symbol	compiler -> delay_slot		1103357						
ANR	1103457	Symbol	label		1103357						
ANR	1103458	Symbol	* compiler		1103357						
ANR	1103459	Symbol	ensure_abuf		1103357						
ANR	1103460	Symbol	compiler		1103357						
ANR	1103461	Function	get_cc	1234:0:40299:41224							
ANR	1103462	FunctionDef	get_cc (sljit_si type)		1103461	0					
ANR	1103463	CompoundStatement		1235:0:40338:41224	1103461	0					
ANR	1103464	SwitchStatement	switch ( type )		1103461	0					
ANR	1103465	Condition	type	1236:9:40349:40352	1103461	0	True				
ANR	1103466	Identifier	type		1103461	0					
ANR	1103467	CompoundStatement		2:15:16:16	1103461	1					
ANR	1103468	Label	case SLJIT_EQUAL :	1237:1:40358:40374	1103461	0	True				
ANR	1103469	Identifier	SLJIT_EQUAL		1103461	0					
ANR	1103470	Label	case SLJIT_MUL_NOT_OVERFLOW :	1238:1:40377:40404	1103461	1	True				
ANR	1103471	Identifier	SLJIT_MUL_NOT_OVERFLOW		1103461	0					
ANR	1103472	Label	case SLJIT_D_NOT_EQUAL :	1239:1:40407:40429	1103461	2	True				
ANR	1103473	Identifier	SLJIT_D_NOT_EQUAL		1103461	0					
ANR	1103474	ReturnStatement	return DA ( 0x1 ) ;	1240:2:40450:40464	1103461	3	True				
ANR	1103475	CallExpression	DA ( 0x1 )		1103461	0					
ANR	1103476	Callee	DA		1103461	0					
ANR	1103477	Identifier	DA		1103461	0					
ANR	1103478	ArgumentList	0x1		1103461	1					
ANR	1103479	Argument	0x1		1103461	0					
ANR	1103480	PrimaryExpression	0x1		1103461	0					
ANR	1103481	Label	case SLJIT_NOT_EQUAL :	1242:1:40468:40488	1103461	4	True				
ANR	1103482	Identifier	SLJIT_NOT_EQUAL		1103461	0					
ANR	1103483	Label	case SLJIT_MUL_OVERFLOW :	1243:1:40491:40514	1103461	5	True				
ANR	1103484	Identifier	SLJIT_MUL_OVERFLOW		1103461	0					
ANR	1103485	Label	case SLJIT_D_EQUAL :	1244:1:40517:40535	1103461	6	True				
ANR	1103486	Identifier	SLJIT_D_EQUAL		1103461	0					
ANR	1103487	ReturnStatement	return DA ( 0x9 ) ;	1245:2:40539:40553	1103461	7	True				
ANR	1103488	CallExpression	DA ( 0x9 )		1103461	0					
ANR	1103489	Callee	DA		1103461	0					
ANR	1103490	Identifier	DA		1103461	0					
ANR	1103491	ArgumentList	0x9		1103461	1					
ANR	1103492	Argument	0x9		1103461	0					
ANR	1103493	PrimaryExpression	0x9		1103461	0					
ANR	1103494	Label	case SLJIT_LESS :	1247:1:40557:40572	1103461	8	True				
ANR	1103495	Identifier	SLJIT_LESS		1103461	0					
ANR	1103496	Label	case SLJIT_D_GREATER :	1248:1:40575:40595	1103461	9	True				
ANR	1103497	Identifier	SLJIT_D_GREATER		1103461	0					
ANR	1103498	ReturnStatement	return DA ( 0x5 ) ;	1249:2:40616:40630	1103461	10	True				
ANR	1103499	CallExpression	DA ( 0x5 )		1103461	0					
ANR	1103500	Callee	DA		1103461	0					
ANR	1103501	Identifier	DA		1103461	0					
ANR	1103502	ArgumentList	0x5		1103461	1					
ANR	1103503	Argument	0x5		1103461	0					
ANR	1103504	PrimaryExpression	0x5		1103461	0					
ANR	1103505	Label	case SLJIT_GREATER_EQUAL :	1251:1:40634:40658	1103461	11	True				
ANR	1103506	Identifier	SLJIT_GREATER_EQUAL		1103461	0					
ANR	1103507	Label	case SLJIT_D_LESS_EQUAL :	1252:1:40661:40684	1103461	12	True				
ANR	1103508	Identifier	SLJIT_D_LESS_EQUAL		1103461	0					
ANR	1103509	ReturnStatement	return DA ( 0xd ) ;	1253:2:40688:40702	1103461	13	True				
ANR	1103510	CallExpression	DA ( 0xd )		1103461	0					
ANR	1103511	Callee	DA		1103461	0					
ANR	1103512	Identifier	DA		1103461	0					
ANR	1103513	ArgumentList	0xd		1103461	1					
ANR	1103514	Argument	0xd		1103461	0					
ANR	1103515	PrimaryExpression	0xd		1103461	0					
ANR	1103516	Label	case SLJIT_GREATER :	1255:1:40706:40724	1103461	14	True				
ANR	1103517	Identifier	SLJIT_GREATER		1103461	0					
ANR	1103518	Label	case SLJIT_D_GREATER_EQUAL :	1256:1:40727:40753	1103461	15	True				
ANR	1103519	Identifier	SLJIT_D_GREATER_EQUAL		1103461	0					
ANR	1103520	ReturnStatement	return DA ( 0xc ) ;	1257:2:40774:40788	1103461	16	True				
ANR	1103521	CallExpression	DA ( 0xc )		1103461	0					
ANR	1103522	Callee	DA		1103461	0					
ANR	1103523	Identifier	DA		1103461	0					
ANR	1103524	ArgumentList	0xc		1103461	1					
ANR	1103525	Argument	0xc		1103461	0					
ANR	1103526	PrimaryExpression	0xc		1103461	0					
ANR	1103527	Label	case SLJIT_LESS_EQUAL :	1259:1:40792:40813	1103461	17	True				
ANR	1103528	Identifier	SLJIT_LESS_EQUAL		1103461	0					
ANR	1103529	Label	case SLJIT_D_LESS :	1260:1:40816:40833	1103461	18	True				
ANR	1103530	Identifier	SLJIT_D_LESS		1103461	0					
ANR	1103531	ReturnStatement	return DA ( 0x4 ) ;	1261:2:40837:40851	1103461	19	True				
ANR	1103532	CallExpression	DA ( 0x4 )		1103461	0					
ANR	1103533	Callee	DA		1103461	0					
ANR	1103534	Identifier	DA		1103461	0					
ANR	1103535	ArgumentList	0x4		1103461	1					
ANR	1103536	Argument	0x4		1103461	0					
ANR	1103537	PrimaryExpression	0x4		1103461	0					
ANR	1103538	Label	case SLJIT_SIG_LESS :	1263:1:40855:40874	1103461	20	True				
ANR	1103539	Identifier	SLJIT_SIG_LESS		1103461	0					
ANR	1103540	ReturnStatement	return DA ( 0x3 ) ;	1264:2:40878:40892	1103461	21	True				
ANR	1103541	CallExpression	DA ( 0x3 )		1103461	0					
ANR	1103542	Callee	DA		1103461	0					
ANR	1103543	Identifier	DA		1103461	0					
ANR	1103544	ArgumentList	0x3		1103461	1					
ANR	1103545	Argument	0x3		1103461	0					
ANR	1103546	PrimaryExpression	0x3		1103461	0					
ANR	1103547	Label	case SLJIT_SIG_GREATER_EQUAL :	1266:1:40896:40924	1103461	22	True				
ANR	1103548	Identifier	SLJIT_SIG_GREATER_EQUAL		1103461	0					
ANR	1103549	ReturnStatement	return DA ( 0xb ) ;	1267:2:40928:40942	1103461	23	True				
ANR	1103550	CallExpression	DA ( 0xb )		1103461	0					
ANR	1103551	Callee	DA		1103461	0					
ANR	1103552	Identifier	DA		1103461	0					
ANR	1103553	ArgumentList	0xb		1103461	1					
ANR	1103554	Argument	0xb		1103461	0					
ANR	1103555	PrimaryExpression	0xb		1103461	0					
ANR	1103556	Label	case SLJIT_SIG_GREATER :	1269:1:40946:40968	1103461	24	True				
ANR	1103557	Identifier	SLJIT_SIG_GREATER		1103461	0					
ANR	1103558	ReturnStatement	return DA ( 0xa ) ;	1270:2:40972:40986	1103461	25	True				
ANR	1103559	CallExpression	DA ( 0xa )		1103461	0					
ANR	1103560	Callee	DA		1103461	0					
ANR	1103561	Identifier	DA		1103461	0					
ANR	1103562	ArgumentList	0xa		1103461	1					
ANR	1103563	Argument	0xa		1103461	0					
ANR	1103564	PrimaryExpression	0xa		1103461	0					
ANR	1103565	Label	case SLJIT_SIG_LESS_EQUAL :	1272:1:40990:41015	1103461	26	True				
ANR	1103566	Identifier	SLJIT_SIG_LESS_EQUAL		1103461	0					
ANR	1103567	ReturnStatement	return DA ( 0x2 ) ;	1273:2:41019:41033	1103461	27	True				
ANR	1103568	CallExpression	DA ( 0x2 )		1103461	0					
ANR	1103569	Callee	DA		1103461	0					
ANR	1103570	Identifier	DA		1103461	0					
ANR	1103571	ArgumentList	0x2		1103461	1					
ANR	1103572	Argument	0x2		1103461	0					
ANR	1103573	PrimaryExpression	0x2		1103461	0					
ANR	1103574	Label	case SLJIT_OVERFLOW :	1275:1:41037:41056	1103461	28	True				
ANR	1103575	Identifier	SLJIT_OVERFLOW		1103461	0					
ANR	1103576	Label	case SLJIT_D_UNORDERED :	1276:1:41059:41081	1103461	29	True				
ANR	1103577	Identifier	SLJIT_D_UNORDERED		1103461	0					
ANR	1103578	ReturnStatement	return DA ( 0x7 ) ;	1277:2:41085:41099	1103461	30	True				
ANR	1103579	CallExpression	DA ( 0x7 )		1103461	0					
ANR	1103580	Callee	DA		1103461	0					
ANR	1103581	Identifier	DA		1103461	0					
ANR	1103582	ArgumentList	0x7		1103461	1					
ANR	1103583	Argument	0x7		1103461	0					
ANR	1103584	PrimaryExpression	0x7		1103461	0					
ANR	1103585	Label	case SLJIT_NOT_OVERFLOW :	1279:1:41103:41126	1103461	31	True				
ANR	1103586	Identifier	SLJIT_NOT_OVERFLOW		1103461	0					
ANR	1103587	Label	case SLJIT_D_ORDERED :	1280:1:41129:41149	1103461	32	True				
ANR	1103588	Identifier	SLJIT_D_ORDERED		1103461	0					
ANR	1103589	ReturnStatement	return DA ( 0xf ) ;	1281:2:41153:41167	1103461	33	True				
ANR	1103590	CallExpression	DA ( 0xf )		1103461	0					
ANR	1103591	Callee	DA		1103461	0					
ANR	1103592	Identifier	DA		1103461	0					
ANR	1103593	ArgumentList	0xf		1103461	1					
ANR	1103594	Argument	0xf		1103461	0					
ANR	1103595	PrimaryExpression	0xf		1103461	0					
ANR	1103596	Label	default :	1283:1:41171:41178	1103461	34	True				
ANR	1103597	Identifier	default		1103461	0					
ANR	1103598	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1284:2:41182:41201	1103461	35	True				
ANR	1103599	CallExpression	SLJIT_ASSERT_STOP ( )		1103461	0					
ANR	1103600	Callee	SLJIT_ASSERT_STOP		1103461	0					
ANR	1103601	Identifier	SLJIT_ASSERT_STOP		1103461	0					
ANR	1103602	ArgumentList			1103461	1					
ANR	1103603	ReturnStatement	return DA ( 0x8 ) ;	1285:2:41205:41219	1103461	36	True				
ANR	1103604	CallExpression	DA ( 0x8 )		1103461	0					
ANR	1103605	Callee	DA		1103461	0					
ANR	1103606	Identifier	DA		1103461	0					
ANR	1103607	ArgumentList	0x8		1103461	1					
ANR	1103608	Argument	0x8		1103461	0					
ANR	1103609	PrimaryExpression	0x8		1103461	0					
ANR	1103610	ReturnType	static sljit_ins		1103461	1					
ANR	1103611	Identifier	get_cc		1103461	2					
ANR	1103612	ParameterList	sljit_si type		1103461	3					
ANR	1103613	Parameter	sljit_si type	1234:24:40323:40335	1103461	0	True				
ANR	1103614	ParameterType	sljit_si		1103461	0					
ANR	1103615	Identifier	type		1103461	1					
ANR	1103616	CFGEntryNode	ENTRY		1103461		True				
ANR	1103617	CFGExitNode	EXIT		1103461		True				
ANR	1103618	Symbol	type		1103461						
ANR	1103619	Symbol	DA		1103461						
ANR	1103620	Function	sljit_emit_jump	1289:25:41252:42803							
ANR	1103621	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1103620	0					
ANR	1103622	CompoundStatement		1290:0:41335:42803	1103620	0					
ANR	1103623	IdentifierDeclStatement	struct sljit_jump * jump ;	1291:1:41338:41361	1103620	0	True				
ANR	1103624	IdentifierDecl	* jump		1103620	0					
ANR	1103625	IdentifierDeclType	struct sljit_jump *		1103620	0					
ANR	1103626	Identifier	jump		1103620	1					
ANR	1103627	ExpressionStatement	CHECK_ERROR_PTR ( )	1293:1:41365:41382	1103620	1	True				
ANR	1103628	CallExpression	CHECK_ERROR_PTR ( )		1103620	0					
ANR	1103629	Callee	CHECK_ERROR_PTR		1103620	0					
ANR	1103630	Identifier	CHECK_ERROR_PTR		1103620	0					
ANR	1103631	ArgumentList			1103620	1					
ANR	1103632	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	1294:1:41385:41433	1103620	2	True				
ANR	1103633	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1103620	0					
ANR	1103634	Callee	CHECK_PTR		1103620	0					
ANR	1103635	Identifier	CHECK_PTR		1103620	0					
ANR	1103636	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1103620	1					
ANR	1103637	Argument	"check_sljit_emit_jump ( compiler , type )"		1103620	0					
ANR	1103638	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1103620	0					
ANR	1103639	Callee	check_sljit_emit_jump		1103620	0					
ANR	1103640	Identifier	check_sljit_emit_jump		1103620	0					
ANR	1103641	ArgumentList	compiler		1103620	1					
ANR	1103642	Argument	compiler		1103620	0					
ANR	1103643	Identifier	compiler		1103620	0					
ANR	1103644	Argument	type		1103620	1					
ANR	1103645	Identifier	type		1103620	0					
ANR	1103646	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1296:1:41437:41512	1103620	3	True				
ANR	1103647	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103620	0		=			
ANR	1103648	Identifier	jump		1103620	0					
ANR	1103649	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103620	1					
ANR	1103650	CastTarget	struct sljit_jump *		1103620	0					
ANR	1103651	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103620	1					
ANR	1103652	Callee	ensure_abuf		1103620	0					
ANR	1103653	Identifier	ensure_abuf		1103620	0					
ANR	1103654	ArgumentList	compiler		1103620	1					
ANR	1103655	Argument	compiler		1103620	0					
ANR	1103656	Identifier	compiler		1103620	0					
ANR	1103657	Argument	sizeof ( struct sljit_jump )		1103620	1					
ANR	1103658	SizeofExpression	sizeof ( struct sljit_jump )		1103620	0					
ANR	1103659	Sizeof	sizeof		1103620	0					
ANR	1103660	SizeofOperand	struct sljit_jump		1103620	1					
ANR	1103661	ExpressionStatement	PTR_FAIL_IF ( ! jump )	1297:1:41515:41533	1103620	4	True				
ANR	1103662	CallExpression	PTR_FAIL_IF ( ! jump )		1103620	0					
ANR	1103663	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103664	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103665	ArgumentList	! jump		1103620	1					
ANR	1103666	Argument	! jump		1103620	0					
ANR	1103667	UnaryOperationExpression	! jump		1103620	0					
ANR	1103668	UnaryOperator	!		1103620	0					
ANR	1103669	Identifier	jump		1103620	1					
ANR	1103670	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	1298:1:41536:41590	1103620	5	True				
ANR	1103671	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1103620	0					
ANR	1103672	Callee	set_jump		1103620	0					
ANR	1103673	Identifier	set_jump		1103620	0					
ANR	1103674	ArgumentList	jump		1103620	1					
ANR	1103675	Argument	jump		1103620	0					
ANR	1103676	Identifier	jump		1103620	0					
ANR	1103677	Argument	compiler		1103620	1					
ANR	1103678	Identifier	compiler		1103620	0					
ANR	1103679	Argument	type & SLJIT_REWRITABLE_JUMP		1103620	2					
ANR	1103680	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1103620	0		&			
ANR	1103681	Identifier	type		1103620	0					
ANR	1103682	Identifier	SLJIT_REWRITABLE_JUMP		1103620	1					
ANR	1103683	ExpressionStatement	type &= 0xff	1299:1:41593:41605	1103620	6	True				
ANR	1103684	AssignmentExpression	type &= 0xff		1103620	0		&=			
ANR	1103685	Identifier	type		1103620	0					
ANR	1103686	PrimaryExpression	0xff		1103620	1					
ANR	1103687	IfStatement	if ( type < SLJIT_D_EQUAL )		1103620	7					
ANR	1103688	Condition	type < SLJIT_D_EQUAL	1301:5:41613:41632	1103620	0	True				
ANR	1103689	RelationalExpression	type < SLJIT_D_EQUAL		1103620	0		<			
ANR	1103690	Identifier	type		1103620	0					
ANR	1103691	Identifier	SLJIT_D_EQUAL		1103620	1					
ANR	1103692	CompoundStatement		12:27:299:299	1103620	1					
ANR	1103693	ExpressionStatement	jump -> flags |= IS_COND	1302:2:41639:41661	1103620	0	True				
ANR	1103694	AssignmentExpression	jump -> flags |= IS_COND		1103620	0		|=			
ANR	1103695	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103696	Identifier	jump		1103620	0					
ANR	1103697	Identifier	flags		1103620	1					
ANR	1103698	Identifier	IS_COND		1103620	1					
ANR	1103699	IfStatement	if ( ( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & ICC_IS_SET ) )		1103620	1					
ANR	1103700	Condition	( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & ICC_IS_SET )	1303:6:41669:41764	1103620	0	True				
ANR	1103701	AndExpression	( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & ICC_IS_SET )		1103620	0		&&			
ANR	1103702	EqualityExpression	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS		1103620	0		!=			
ANR	1103703	BitAndExpression	compiler -> delay_slot & DST_INS_MASK		1103620	0		&			
ANR	1103704	PtrMemberAccess	compiler -> delay_slot		1103620	0					
ANR	1103705	Identifier	compiler		1103620	0					
ANR	1103706	Identifier	delay_slot		1103620	1					
ANR	1103707	Identifier	DST_INS_MASK		1103620	1					
ANR	1103708	Identifier	UNMOVABLE_INS		1103620	1					
ANR	1103709	UnaryOperationExpression	! ( compiler -> delay_slot & ICC_IS_SET )		1103620	1					
ANR	1103710	UnaryOperator	!		1103620	0					
ANR	1103711	BitAndExpression	compiler -> delay_slot & ICC_IS_SET		1103620	1		&			
ANR	1103712	PtrMemberAccess	compiler -> delay_slot		1103620	0					
ANR	1103713	Identifier	compiler		1103620	0					
ANR	1103714	Identifier	delay_slot		1103620	1					
ANR	1103715	Identifier	ICC_IS_SET		1103620	1					
ANR	1103716	ExpressionStatement	jump -> flags |= IS_MOVABLE	1304:3:41770:41795	1103620	1	True				
ANR	1103717	AssignmentExpression	jump -> flags |= IS_MOVABLE		1103620	0		|=			
ANR	1103718	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103719	Identifier	jump		1103620	0					
ANR	1103720	Identifier	flags		1103620	1					
ANR	1103721	Identifier	IS_MOVABLE		1103620	1					
ANR	1103722	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , BICC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS ) )"	1306:2:41860:41936	1103620	2	True				
ANR	1103723	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , BICC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS ) )"		1103620	0					
ANR	1103724	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103725	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103726	ArgumentList	"push_inst ( compiler , BICC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	1					
ANR	1103727	Argument	"push_inst ( compiler , BICC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	0					
ANR	1103728	CallExpression	"push_inst ( compiler , BICC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	0					
ANR	1103729	Callee	push_inst		1103620	0					
ANR	1103730	Identifier	push_inst		1103620	0					
ANR	1103731	ArgumentList	compiler		1103620	1					
ANR	1103732	Argument	compiler		1103620	0					
ANR	1103733	Identifier	compiler		1103620	0					
ANR	1103734	Argument	BICC | get_cc ( type ^ 1 ) | 5		1103620	1					
ANR	1103735	InclusiveOrExpression	BICC | get_cc ( type ^ 1 ) | 5		1103620	0		|			
ANR	1103736	Identifier	BICC		1103620	0					
ANR	1103737	InclusiveOrExpression	get_cc ( type ^ 1 ) | 5		1103620	1		|			
ANR	1103738	CallExpression	get_cc ( type ^ 1 )		1103620	0					
ANR	1103739	Callee	get_cc		1103620	0					
ANR	1103740	Identifier	get_cc		1103620	0					
ANR	1103741	ArgumentList	type ^ 1		1103620	1					
ANR	1103742	Argument	type ^ 1		1103620	0					
ANR	1103743	ExclusiveOrExpression	type ^ 1		1103620	0		^			
ANR	1103744	Identifier	type		1103620	0					
ANR	1103745	PrimaryExpression	1		1103620	1					
ANR	1103746	PrimaryExpression	5		1103620	1					
ANR	1103747	Argument	UNMOVABLE_INS		1103620	2					
ANR	1103748	Identifier	UNMOVABLE_INS		1103620	0					
ANR	1103749	ElseStatement	else		1103620	0					
ANR	1103750	IfStatement	if ( type < SLJIT_JUMP )		1103620	0					
ANR	1103751	Condition	type < SLJIT_JUMP	1311:10:41997:42013	1103620	0	True				
ANR	1103752	RelationalExpression	type < SLJIT_JUMP		1103620	0		<			
ANR	1103753	Identifier	type		1103620	0					
ANR	1103754	Identifier	SLJIT_JUMP		1103620	1					
ANR	1103755	CompoundStatement		22:29:680:680	1103620	1					
ANR	1103756	ExpressionStatement	jump -> flags |= IS_COND	1312:2:42020:42042	1103620	0	True				
ANR	1103757	AssignmentExpression	jump -> flags |= IS_COND		1103620	0		|=			
ANR	1103758	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103759	Identifier	jump		1103620	0					
ANR	1103760	Identifier	flags		1103620	1					
ANR	1103761	Identifier	IS_COND		1103620	1					
ANR	1103762	IfStatement	if ( ( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & FCC_IS_SET ) )		1103620	1					
ANR	1103763	Condition	( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & FCC_IS_SET )	1313:6:42050:42145	1103620	0	True				
ANR	1103764	AndExpression	( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS ) && ! ( compiler -> delay_slot & FCC_IS_SET )		1103620	0		&&			
ANR	1103765	EqualityExpression	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS		1103620	0		!=			
ANR	1103766	BitAndExpression	compiler -> delay_slot & DST_INS_MASK		1103620	0		&			
ANR	1103767	PtrMemberAccess	compiler -> delay_slot		1103620	0					
ANR	1103768	Identifier	compiler		1103620	0					
ANR	1103769	Identifier	delay_slot		1103620	1					
ANR	1103770	Identifier	DST_INS_MASK		1103620	1					
ANR	1103771	Identifier	UNMOVABLE_INS		1103620	1					
ANR	1103772	UnaryOperationExpression	! ( compiler -> delay_slot & FCC_IS_SET )		1103620	1					
ANR	1103773	UnaryOperator	!		1103620	0					
ANR	1103774	BitAndExpression	compiler -> delay_slot & FCC_IS_SET		1103620	1		&			
ANR	1103775	PtrMemberAccess	compiler -> delay_slot		1103620	0					
ANR	1103776	Identifier	compiler		1103620	0					
ANR	1103777	Identifier	delay_slot		1103620	1					
ANR	1103778	Identifier	FCC_IS_SET		1103620	1					
ANR	1103779	ExpressionStatement	jump -> flags |= IS_MOVABLE	1314:3:42151:42176	1103620	1	True				
ANR	1103780	AssignmentExpression	jump -> flags |= IS_MOVABLE		1103620	0		|=			
ANR	1103781	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103782	Identifier	jump		1103620	0					
ANR	1103783	Identifier	flags		1103620	1					
ANR	1103784	Identifier	IS_MOVABLE		1103620	1					
ANR	1103785	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , FBFCC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS ) )"	1316:2:42241:42318	1103620	2	True				
ANR	1103786	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , FBFCC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS ) )"		1103620	0					
ANR	1103787	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103788	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103789	ArgumentList	"push_inst ( compiler , FBFCC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	1					
ANR	1103790	Argument	"push_inst ( compiler , FBFCC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	0					
ANR	1103791	CallExpression	"push_inst ( compiler , FBFCC | get_cc ( type ^ 1 ) | 5 , UNMOVABLE_INS )"		1103620	0					
ANR	1103792	Callee	push_inst		1103620	0					
ANR	1103793	Identifier	push_inst		1103620	0					
ANR	1103794	ArgumentList	compiler		1103620	1					
ANR	1103795	Argument	compiler		1103620	0					
ANR	1103796	Identifier	compiler		1103620	0					
ANR	1103797	Argument	FBFCC | get_cc ( type ^ 1 ) | 5		1103620	1					
ANR	1103798	InclusiveOrExpression	FBFCC | get_cc ( type ^ 1 ) | 5		1103620	0		|			
ANR	1103799	Identifier	FBFCC		1103620	0					
ANR	1103800	InclusiveOrExpression	get_cc ( type ^ 1 ) | 5		1103620	1		|			
ANR	1103801	CallExpression	get_cc ( type ^ 1 )		1103620	0					
ANR	1103802	Callee	get_cc		1103620	0					
ANR	1103803	Identifier	get_cc		1103620	0					
ANR	1103804	ArgumentList	type ^ 1		1103620	1					
ANR	1103805	Argument	type ^ 1		1103620	0					
ANR	1103806	ExclusiveOrExpression	type ^ 1		1103620	0		^			
ANR	1103807	Identifier	type		1103620	0					
ANR	1103808	PrimaryExpression	1		1103620	1					
ANR	1103809	PrimaryExpression	5		1103620	1					
ANR	1103810	Argument	UNMOVABLE_INS		1103620	2					
ANR	1103811	Identifier	UNMOVABLE_INS		1103620	0					
ANR	1103812	ElseStatement	else		1103620	0					
ANR	1103813	CompoundStatement		31:8:1038:1038	1103620	0					
ANR	1103814	IfStatement	if ( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS )		1103620	0					
ANR	1103815	Condition	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS	1321:6:42382:42435	1103620	0	True				
ANR	1103816	EqualityExpression	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS		1103620	0		!=			
ANR	1103817	BitAndExpression	compiler -> delay_slot & DST_INS_MASK		1103620	0		&			
ANR	1103818	PtrMemberAccess	compiler -> delay_slot		1103620	0					
ANR	1103819	Identifier	compiler		1103620	0					
ANR	1103820	Identifier	delay_slot		1103620	1					
ANR	1103821	Identifier	DST_INS_MASK		1103620	1					
ANR	1103822	Identifier	UNMOVABLE_INS		1103620	1					
ANR	1103823	ExpressionStatement	jump -> flags |= IS_MOVABLE	1322:3:42441:42466	1103620	1	True				
ANR	1103824	AssignmentExpression	jump -> flags |= IS_MOVABLE		1103620	0		|=			
ANR	1103825	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103826	Identifier	jump		1103620	0					
ANR	1103827	Identifier	flags		1103620	1					
ANR	1103828	Identifier	IS_MOVABLE		1103620	1					
ANR	1103829	IfStatement	if ( type >= SLJIT_FAST_CALL )		1103620	1					
ANR	1103830	Condition	type >= SLJIT_FAST_CALL	1323:6:42474:42496	1103620	0	True				
ANR	1103831	RelationalExpression	type >= SLJIT_FAST_CALL		1103620	0		>=			
ANR	1103832	Identifier	type		1103620	0					
ANR	1103833	Identifier	SLJIT_FAST_CALL		1103620	1					
ANR	1103834	ExpressionStatement	jump -> flags |= IS_CALL	1324:3:42502:42524	1103620	1	True				
ANR	1103835	AssignmentExpression	jump -> flags |= IS_CALL		1103620	0		|=			
ANR	1103836	PtrMemberAccess	jump -> flags		1103620	0					
ANR	1103837	Identifier	jump		1103620	0					
ANR	1103838	Identifier	flags		1103620	1					
ANR	1103839	Identifier	IS_CALL		1103620	1					
ANR	1103840	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1327:1:42531:42577	1103620	8	True				
ANR	1103841	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1103620	0					
ANR	1103842	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103843	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103844	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1103620	1					
ANR	1103845	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1103620	0					
ANR	1103846	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1103620	0					
ANR	1103847	Callee	emit_const		1103620	0					
ANR	1103848	Identifier	emit_const		1103620	0					
ANR	1103849	ArgumentList	compiler		1103620	1					
ANR	1103850	Argument	compiler		1103620	0					
ANR	1103851	Identifier	compiler		1103620	0					
ANR	1103852	Argument	TMP_REG2		1103620	1					
ANR	1103853	Identifier	TMP_REG2		1103620	0					
ANR	1103854	Argument	0		1103620	2					
ANR	1103855	PrimaryExpression	0		1103620	0					
ANR	1103856	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 ) , UNMOVABLE_INS ) )"	1328:1:42580:42701	1103620	9	True				
ANR	1103857	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 ) , UNMOVABLE_INS ) )"		1103620	0					
ANR	1103858	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103859	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103860	ArgumentList	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103620	1					
ANR	1103861	Argument	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103620	0					
ANR	1103862	CallExpression	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103620	0					
ANR	1103863	Callee	push_inst		1103620	0					
ANR	1103864	Identifier	push_inst		1103620	0					
ANR	1103865	ArgumentList	compiler		1103620	1					
ANR	1103866	Argument	compiler		1103620	0					
ANR	1103867	Identifier	compiler		1103620	0					
ANR	1103868	Argument	JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 )		1103620	1					
ANR	1103869	InclusiveOrExpression	JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 )		1103620	0		|			
ANR	1103870	Identifier	JMPL		1103620	0					
ANR	1103871	InclusiveOrExpression	D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( TMP_REG2 ) | IMM ( 0 )		1103620	1		|			
ANR	1103872	CallExpression	D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 )		1103620	0					
ANR	1103873	Callee	D		1103620	0					
ANR	1103874	Identifier	D		1103620	0					
ANR	1103875	ArgumentList	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103620	1					
ANR	1103876	Argument	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103620	0					
ANR	1103877	ConditionalExpression	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103620	0					
ANR	1103878	Condition	type >= SLJIT_FAST_CALL		1103620	0					
ANR	1103879	RelationalExpression	type >= SLJIT_FAST_CALL		1103620	0		>=			
ANR	1103880	Identifier	type		1103620	0					
ANR	1103881	Identifier	SLJIT_FAST_CALL		1103620	1					
ANR	1103882	Identifier	TMP_LINK		1103620	1					
ANR	1103883	PrimaryExpression	0		1103620	2					
ANR	1103884	InclusiveOrExpression	S1 ( TMP_REG2 ) | IMM ( 0 )		1103620	1		|			
ANR	1103885	CallExpression	S1 ( TMP_REG2 )		1103620	0					
ANR	1103886	Callee	S1		1103620	0					
ANR	1103887	Identifier	S1		1103620	0					
ANR	1103888	ArgumentList	TMP_REG2		1103620	1					
ANR	1103889	Argument	TMP_REG2		1103620	0					
ANR	1103890	Identifier	TMP_REG2		1103620	0					
ANR	1103891	CallExpression	IMM ( 0 )		1103620	1					
ANR	1103892	Callee	IMM		1103620	0					
ANR	1103893	Identifier	IMM		1103620	0					
ANR	1103894	ArgumentList	0		1103620	1					
ANR	1103895	Argument	0		1103620	0					
ANR	1103896	PrimaryExpression	0		1103620	0					
ANR	1103897	Argument	UNMOVABLE_INS		1103620	2					
ANR	1103898	Identifier	UNMOVABLE_INS		1103620	0					
ANR	1103899	ExpressionStatement	jump -> addr = compiler -> size	1329:1:42704:42731	1103620	10	True				
ANR	1103900	AssignmentExpression	jump -> addr = compiler -> size		1103620	0		=			
ANR	1103901	PtrMemberAccess	jump -> addr		1103620	0					
ANR	1103902	Identifier	jump		1103620	0					
ANR	1103903	Identifier	addr		1103620	1					
ANR	1103904	PtrMemberAccess	compiler -> size		1103620	1					
ANR	1103905	Identifier	compiler		1103620	0					
ANR	1103906	Identifier	size		1103620	1					
ANR	1103907	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"	1330:1:42734:42786	1103620	11	True				
ANR	1103908	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , NOP , UNMOVABLE_INS ) )"		1103620	0					
ANR	1103909	Callee	PTR_FAIL_IF		1103620	0					
ANR	1103910	Identifier	PTR_FAIL_IF		1103620	0					
ANR	1103911	ArgumentList	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1103620	1					
ANR	1103912	Argument	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1103620	0					
ANR	1103913	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1103620	0					
ANR	1103914	Callee	push_inst		1103620	0					
ANR	1103915	Identifier	push_inst		1103620	0					
ANR	1103916	ArgumentList	compiler		1103620	1					
ANR	1103917	Argument	compiler		1103620	0					
ANR	1103918	Identifier	compiler		1103620	0					
ANR	1103919	Argument	NOP		1103620	1					
ANR	1103920	Identifier	NOP		1103620	0					
ANR	1103921	Argument	UNMOVABLE_INS		1103620	2					
ANR	1103922	Identifier	UNMOVABLE_INS		1103620	0					
ANR	1103923	ReturnStatement	return jump ;	1332:1:42790:42801	1103620	12	True				
ANR	1103924	Identifier	jump		1103620	0					
ANR	1103925	ReturnType	struct sljit_jump *		1103620	1					
ANR	1103926	Identifier	sljit_emit_jump		1103620	2					
ANR	1103927	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1103620	3					
ANR	1103928	Parameter	struct sljit_compiler * compiler	1289:60:41287:41317	1103620	0	True				
ANR	1103929	ParameterType	struct sljit_compiler *		1103620	0					
ANR	1103930	Identifier	compiler		1103620	1					
ANR	1103931	Parameter	sljit_si type	1289:93:41320:41332	1103620	1	True				
ANR	1103932	ParameterType	sljit_si		1103620	0					
ANR	1103933	Identifier	type		1103620	1					
ANR	1103934	CFGEntryNode	ENTRY		1103620		True				
ANR	1103935	CFGExitNode	EXIT		1103620		True				
ANR	1103936	Symbol	TMP_REG2		1103620						
ANR	1103937	Symbol	SLJIT_JUMP		1103620						
ANR	1103938	Symbol	* jump		1103620						
ANR	1103939	Symbol	D		1103620						
ANR	1103940	Symbol	TMP_LINK		1103620						
ANR	1103941	Symbol	jump -> flags		1103620						
ANR	1103942	Symbol	FCC_IS_SET		1103620						
ANR	1103943	Symbol	* compiler		1103620						
ANR	1103944	Symbol	ICC_IS_SET		1103620						
ANR	1103945	Symbol	type		1103620						
ANR	1103946	Symbol	FBFCC		1103620						
ANR	1103947	Symbol	SLJIT_FAST_CALL		1103620						
ANR	1103948	Symbol	SLJIT_REWRITABLE_JUMP		1103620						
ANR	1103949	Symbol	compiler		1103620						
ANR	1103950	Symbol	JMPL		1103620						
ANR	1103951	Symbol	jump		1103620						
ANR	1103952	Symbol	push_inst		1103620						
ANR	1103953	Symbol	get_cc		1103620						
ANR	1103954	Symbol	IS_MOVABLE		1103620						
ANR	1103955	Symbol	UNMOVABLE_INS		1103620						
ANR	1103956	Symbol	DST_INS_MASK		1103620						
ANR	1103957	Symbol	IMM		1103620						
ANR	1103958	Symbol	SLJIT_D_EQUAL		1103620						
ANR	1103959	Symbol	jump -> addr		1103620						
ANR	1103960	Symbol	ensure_abuf		1103620						
ANR	1103961	Symbol	NOP		1103620						
ANR	1103962	Symbol	IS_CALL		1103620						
ANR	1103963	Symbol	compiler -> size		1103620						
ANR	1103964	Symbol	IS_COND		1103620						
ANR	1103965	Symbol	check_sljit_emit_jump		1103620						
ANR	1103966	Symbol	BICC		1103620						
ANR	1103967	Symbol	emit_const		1103620						
ANR	1103968	Symbol	compiler -> delay_slot		1103620						
ANR	1103969	Symbol	S1		1103620						
ANR	1103970	Function	sljit_emit_ijump	1335:0:42806:43862							
ANR	1103971	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1103970	0					
ANR	1103972	CompoundStatement		1336:0:42934:43862	1103970	0					
ANR	1103973	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	1337:1:42937:42967	1103970	0	True				
ANR	1103974	IdentifierDecl	* jump = NULL		1103970	0					
ANR	1103975	IdentifierDeclType	struct sljit_jump *		1103970	0					
ANR	1103976	Identifier	jump		1103970	1					
ANR	1103977	AssignmentExpression	* jump = NULL		1103970	2		=			
ANR	1103978	Identifier	NULL		1103970	0					
ANR	1103979	Identifier	NULL		1103970	1					
ANR	1103980	IdentifierDeclStatement	sljit_si src_r ;	1338:1:42970:42984	1103970	1	True				
ANR	1103981	IdentifierDecl	src_r		1103970	0					
ANR	1103982	IdentifierDeclType	sljit_si		1103970	0					
ANR	1103983	Identifier	src_r		1103970	1					
ANR	1103984	ExpressionStatement	CHECK_ERROR ( )	1340:1:42988:43001	1103970	2	True				
ANR	1103985	CallExpression	CHECK_ERROR ( )		1103970	0					
ANR	1103986	Callee	CHECK_ERROR		1103970	0					
ANR	1103987	Identifier	CHECK_ERROR		1103970	0					
ANR	1103988	ArgumentList			1103970	1					
ANR	1103989	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	1341:1:43004:43060	1103970	3	True				
ANR	1103990	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1103970	0					
ANR	1103991	Callee	CHECK		1103970	0					
ANR	1103992	Identifier	CHECK		1103970	0					
ANR	1103993	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1103970	1					
ANR	1103994	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1103970	0					
ANR	1103995	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1103970	0					
ANR	1103996	Callee	check_sljit_emit_ijump		1103970	0					
ANR	1103997	Identifier	check_sljit_emit_ijump		1103970	0					
ANR	1103998	ArgumentList	compiler		1103970	1					
ANR	1103999	Argument	compiler		1103970	0					
ANR	1104000	Identifier	compiler		1103970	0					
ANR	1104001	Argument	type		1103970	1					
ANR	1104002	Identifier	type		1103970	0					
ANR	1104003	Argument	src		1103970	2					
ANR	1104004	Identifier	src		1103970	0					
ANR	1104005	Argument	srcw		1103970	3					
ANR	1104006	Identifier	srcw		1103970	0					
ANR	1104007	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1342:1:43063:43093	1103970	4	True				
ANR	1104008	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1103970	0					
ANR	1104009	Callee	ADJUST_LOCAL_OFFSET		1103970	0					
ANR	1104010	Identifier	ADJUST_LOCAL_OFFSET		1103970	0					
ANR	1104011	ArgumentList	src		1103970	1					
ANR	1104012	Argument	src		1103970	0					
ANR	1104013	Identifier	src		1103970	0					
ANR	1104014	Argument	srcw		1103970	1					
ANR	1104015	Identifier	srcw		1103970	0					
ANR	1104016	IfStatement	if ( FAST_IS_REG ( src ) )		1103970	5					
ANR	1104017	Condition	FAST_IS_REG ( src )	1344:5:43101:43116	1103970	0	True				
ANR	1104018	CallExpression	FAST_IS_REG ( src )		1103970	0					
ANR	1104019	Callee	FAST_IS_REG		1103970	0					
ANR	1104020	Identifier	FAST_IS_REG		1103970	0					
ANR	1104021	ArgumentList	src		1103970	1					
ANR	1104022	Argument	src		1103970	0					
ANR	1104023	Identifier	src		1103970	0					
ANR	1104024	ExpressionStatement	src_r = src	1345:2:43121:43132	1103970	1	True				
ANR	1104025	AssignmentExpression	src_r = src		1103970	0		=			
ANR	1104026	Identifier	src_r		1103970	0					
ANR	1104027	Identifier	src		1103970	1					
ANR	1104028	ElseStatement	else		1103970	0					
ANR	1104029	IfStatement	if ( src & SLJIT_IMM )		1103970	0					
ANR	1104030	Condition	src & SLJIT_IMM	1346:10:43144:43158	1103970	0	True				
ANR	1104031	BitAndExpression	src & SLJIT_IMM		1103970	0		&			
ANR	1104032	Identifier	src		1103970	0					
ANR	1104033	Identifier	SLJIT_IMM		1103970	1					
ANR	1104034	CompoundStatement		11:27:226:226	1103970	1					
ANR	1104035	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	1347:2:43165:43240	1103970	0	True				
ANR	1104036	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103970	0		=			
ANR	1104037	Identifier	jump		1103970	0					
ANR	1104038	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103970	1					
ANR	1104039	CastTarget	struct sljit_jump *		1103970	0					
ANR	1104040	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1103970	1					
ANR	1104041	Callee	ensure_abuf		1103970	0					
ANR	1104042	Identifier	ensure_abuf		1103970	0					
ANR	1104043	ArgumentList	compiler		1103970	1					
ANR	1104044	Argument	compiler		1103970	0					
ANR	1104045	Identifier	compiler		1103970	0					
ANR	1104046	Argument	sizeof ( struct sljit_jump )		1103970	1					
ANR	1104047	SizeofExpression	sizeof ( struct sljit_jump )		1103970	0					
ANR	1104048	Sizeof	sizeof		1103970	0					
ANR	1104049	SizeofOperand	struct sljit_jump		1103970	1					
ANR	1104050	ExpressionStatement	FAIL_IF ( ! jump )	1348:2:43244:43258	1103970	1	True				
ANR	1104051	CallExpression	FAIL_IF ( ! jump )		1103970	0					
ANR	1104052	Callee	FAIL_IF		1103970	0					
ANR	1104053	Identifier	FAIL_IF		1103970	0					
ANR	1104054	ArgumentList	! jump		1103970	1					
ANR	1104055	Argument	! jump		1103970	0					
ANR	1104056	UnaryOperationExpression	! jump		1103970	0					
ANR	1104057	UnaryOperator	!		1103970	0					
ANR	1104058	Identifier	jump		1103970	1					
ANR	1104059	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR )"	1349:2:43262:43297	1103970	2	True				
ANR	1104060	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR )"		1103970	0					
ANR	1104061	Callee	set_jump		1103970	0					
ANR	1104062	Identifier	set_jump		1103970	0					
ANR	1104063	ArgumentList	jump		1103970	1					
ANR	1104064	Argument	jump		1103970	0					
ANR	1104065	Identifier	jump		1103970	0					
ANR	1104066	Argument	compiler		1103970	1					
ANR	1104067	Identifier	compiler		1103970	0					
ANR	1104068	Argument	JUMP_ADDR		1103970	2					
ANR	1104069	Identifier	JUMP_ADDR		1103970	0					
ANR	1104070	ExpressionStatement	jump -> u . target = srcw	1350:2:43301:43322	1103970	3	True				
ANR	1104071	AssignmentExpression	jump -> u . target = srcw		1103970	0		=			
ANR	1104072	MemberAccess	jump -> u . target		1103970	0					
ANR	1104073	PtrMemberAccess	jump -> u		1103970	0					
ANR	1104074	Identifier	jump		1103970	0					
ANR	1104075	Identifier	u		1103970	1					
ANR	1104076	Identifier	target		1103970	1					
ANR	1104077	Identifier	srcw		1103970	1					
ANR	1104078	IfStatement	if ( ( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS )		1103970	4					
ANR	1104079	Condition	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS	1351:6:43330:43383	1103970	0	True				
ANR	1104080	EqualityExpression	( compiler -> delay_slot & DST_INS_MASK ) != UNMOVABLE_INS		1103970	0		!=			
ANR	1104081	BitAndExpression	compiler -> delay_slot & DST_INS_MASK		1103970	0		&			
ANR	1104082	PtrMemberAccess	compiler -> delay_slot		1103970	0					
ANR	1104083	Identifier	compiler		1103970	0					
ANR	1104084	Identifier	delay_slot		1103970	1					
ANR	1104085	Identifier	DST_INS_MASK		1103970	1					
ANR	1104086	Identifier	UNMOVABLE_INS		1103970	1					
ANR	1104087	ExpressionStatement	jump -> flags |= IS_MOVABLE	1352:3:43389:43414	1103970	1	True				
ANR	1104088	AssignmentExpression	jump -> flags |= IS_MOVABLE		1103970	0		|=			
ANR	1104089	PtrMemberAccess	jump -> flags		1103970	0					
ANR	1104090	Identifier	jump		1103970	0					
ANR	1104091	Identifier	flags		1103970	1					
ANR	1104092	Identifier	IS_MOVABLE		1103970	1					
ANR	1104093	IfStatement	if ( type >= SLJIT_FAST_CALL )		1103970	5					
ANR	1104094	Condition	type >= SLJIT_FAST_CALL	1353:6:43422:43444	1103970	0	True				
ANR	1104095	RelationalExpression	type >= SLJIT_FAST_CALL		1103970	0		>=			
ANR	1104096	Identifier	type		1103970	0					
ANR	1104097	Identifier	SLJIT_FAST_CALL		1103970	1					
ANR	1104098	ExpressionStatement	jump -> flags |= IS_CALL	1354:3:43450:43472	1103970	1	True				
ANR	1104099	AssignmentExpression	jump -> flags |= IS_CALL		1103970	0		|=			
ANR	1104100	PtrMemberAccess	jump -> flags		1103970	0					
ANR	1104101	Identifier	jump		1103970	0					
ANR	1104102	Identifier	flags		1103970	1					
ANR	1104103	Identifier	IS_CALL		1103970	1					
ANR	1104104	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"	1356:2:43477:43519	1103970	6	True				
ANR	1104105	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_REG2 , 0 ) )"		1103970	0					
ANR	1104106	Callee	FAIL_IF		1103970	0					
ANR	1104107	Identifier	FAIL_IF		1103970	0					
ANR	1104108	ArgumentList	"emit_const ( compiler , TMP_REG2 , 0 )"		1103970	1					
ANR	1104109	Argument	"emit_const ( compiler , TMP_REG2 , 0 )"		1103970	0					
ANR	1104110	CallExpression	"emit_const ( compiler , TMP_REG2 , 0 )"		1103970	0					
ANR	1104111	Callee	emit_const		1103970	0					
ANR	1104112	Identifier	emit_const		1103970	0					
ANR	1104113	ArgumentList	compiler		1103970	1					
ANR	1104114	Argument	compiler		1103970	0					
ANR	1104115	Identifier	compiler		1103970	0					
ANR	1104116	Argument	TMP_REG2		1103970	1					
ANR	1104117	Identifier	TMP_REG2		1103970	0					
ANR	1104118	Argument	0		1103970	2					
ANR	1104119	PrimaryExpression	0		1103970	0					
ANR	1104120	ExpressionStatement	src_r = TMP_REG2	1357:2:43523:43539	1103970	7	True				
ANR	1104121	AssignmentExpression	src_r = TMP_REG2		1103970	0		=			
ANR	1104122	Identifier	src_r		1103970	0					
ANR	1104123	Identifier	TMP_REG2		1103970	1					
ANR	1104124	ElseStatement	else		1103970	0					
ANR	1104125	CompoundStatement		24:6:615:615	1103970	0					
ANR	1104126	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw ) )"	1360:2:43554:43628	1103970	0	True				
ANR	1104127	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw ) )"		1103970	0					
ANR	1104128	Callee	FAIL_IF		1103970	0					
ANR	1104129	Identifier	FAIL_IF		1103970	0					
ANR	1104130	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1103970	1					
ANR	1104131	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1103970	0					
ANR	1104132	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1103970	0					
ANR	1104133	Callee	emit_op_mem		1103970	0					
ANR	1104134	Identifier	emit_op_mem		1103970	0					
ANR	1104135	ArgumentList	compiler		1103970	1					
ANR	1104136	Argument	compiler		1103970	0					
ANR	1104137	Identifier	compiler		1103970	0					
ANR	1104138	Argument	WORD_DATA | LOAD_DATA		1103970	1					
ANR	1104139	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1103970	0		|			
ANR	1104140	Identifier	WORD_DATA		1103970	0					
ANR	1104141	Identifier	LOAD_DATA		1103970	1					
ANR	1104142	Argument	TMP_REG2		1103970	2					
ANR	1104143	Identifier	TMP_REG2		1103970	0					
ANR	1104144	Argument	src		1103970	3					
ANR	1104145	Identifier	src		1103970	0					
ANR	1104146	Argument	srcw		1103970	4					
ANR	1104147	Identifier	srcw		1103970	0					
ANR	1104148	ExpressionStatement	src_r = TMP_REG2	1361:2:43632:43648	1103970	1	True				
ANR	1104149	AssignmentExpression	src_r = TMP_REG2		1103970	0		=			
ANR	1104150	Identifier	src_r		1103970	0					
ANR	1104151	Identifier	TMP_REG2		1103970	1					
ANR	1104152	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 ) , UNMOVABLE_INS ) )"	1364:1:43655:43769	1103970	6	True				
ANR	1104153	CallExpression	"FAIL_IF ( push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 ) , UNMOVABLE_INS ) )"		1103970	0					
ANR	1104154	Callee	FAIL_IF		1103970	0					
ANR	1104155	Identifier	FAIL_IF		1103970	0					
ANR	1104156	ArgumentList	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103970	1					
ANR	1104157	Argument	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103970	0					
ANR	1104158	CallExpression	"push_inst ( compiler , JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 ) , UNMOVABLE_INS )"		1103970	0					
ANR	1104159	Callee	push_inst		1103970	0					
ANR	1104160	Identifier	push_inst		1103970	0					
ANR	1104161	ArgumentList	compiler		1103970	1					
ANR	1104162	Argument	compiler		1103970	0					
ANR	1104163	Identifier	compiler		1103970	0					
ANR	1104164	Argument	JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 )		1103970	1					
ANR	1104165	InclusiveOrExpression	JMPL | D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 )		1103970	0		|			
ANR	1104166	Identifier	JMPL		1103970	0					
ANR	1104167	InclusiveOrExpression	D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 ) | S1 ( src_r ) | IMM ( 0 )		1103970	1		|			
ANR	1104168	CallExpression	D ( type >= SLJIT_FAST_CALL ? TMP_LINK : 0 )		1103970	0					
ANR	1104169	Callee	D		1103970	0					
ANR	1104170	Identifier	D		1103970	0					
ANR	1104171	ArgumentList	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103970	1					
ANR	1104172	Argument	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103970	0					
ANR	1104173	ConditionalExpression	type >= SLJIT_FAST_CALL ? TMP_LINK : 0		1103970	0					
ANR	1104174	Condition	type >= SLJIT_FAST_CALL		1103970	0					
ANR	1104175	RelationalExpression	type >= SLJIT_FAST_CALL		1103970	0		>=			
ANR	1104176	Identifier	type		1103970	0					
ANR	1104177	Identifier	SLJIT_FAST_CALL		1103970	1					
ANR	1104178	Identifier	TMP_LINK		1103970	1					
ANR	1104179	PrimaryExpression	0		1103970	2					
ANR	1104180	InclusiveOrExpression	S1 ( src_r ) | IMM ( 0 )		1103970	1		|			
ANR	1104181	CallExpression	S1 ( src_r )		1103970	0					
ANR	1104182	Callee	S1		1103970	0					
ANR	1104183	Identifier	S1		1103970	0					
ANR	1104184	ArgumentList	src_r		1103970	1					
ANR	1104185	Argument	src_r		1103970	0					
ANR	1104186	Identifier	src_r		1103970	0					
ANR	1104187	CallExpression	IMM ( 0 )		1103970	1					
ANR	1104188	Callee	IMM		1103970	0					
ANR	1104189	Identifier	IMM		1103970	0					
ANR	1104190	ArgumentList	0		1103970	1					
ANR	1104191	Argument	0		1103970	0					
ANR	1104192	PrimaryExpression	0		1103970	0					
ANR	1104193	Argument	UNMOVABLE_INS		1103970	2					
ANR	1104194	Identifier	UNMOVABLE_INS		1103970	0					
ANR	1104195	IfStatement	if ( jump )		1103970	7					
ANR	1104196	Condition	jump	1365:5:43776:43779	1103970	0	True				
ANR	1104197	Identifier	jump		1103970	0					
ANR	1104198	ExpressionStatement	jump -> addr = compiler -> size	1366:2:43784:43811	1103970	1	True				
ANR	1104199	AssignmentExpression	jump -> addr = compiler -> size		1103970	0		=			
ANR	1104200	PtrMemberAccess	jump -> addr		1103970	0					
ANR	1104201	Identifier	jump		1103970	0					
ANR	1104202	Identifier	addr		1103970	1					
ANR	1104203	PtrMemberAccess	compiler -> size		1103970	1					
ANR	1104204	Identifier	compiler		1103970	0					
ANR	1104205	Identifier	size		1103970	1					
ANR	1104206	ReturnStatement	"return push_inst ( compiler , NOP , UNMOVABLE_INS ) ;"	1367:1:43814:43860	1103970	8	True				
ANR	1104207	CallExpression	"push_inst ( compiler , NOP , UNMOVABLE_INS )"		1103970	0					
ANR	1104208	Callee	push_inst		1103970	0					
ANR	1104209	Identifier	push_inst		1103970	0					
ANR	1104210	ArgumentList	compiler		1103970	1					
ANR	1104211	Argument	compiler		1103970	0					
ANR	1104212	Identifier	compiler		1103970	0					
ANR	1104213	Argument	NOP		1103970	1					
ANR	1104214	Identifier	NOP		1103970	0					
ANR	1104215	Argument	UNMOVABLE_INS		1103970	2					
ANR	1104216	Identifier	UNMOVABLE_INS		1103970	0					
ANR	1104217	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1103970	1					
ANR	1104218	Identifier	sljit_emit_ijump		1103970	2					
ANR	1104219	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1103970	3					
ANR	1104220	Parameter	struct sljit_compiler * compiler	1335:51:42857:42887	1103970	0	True				
ANR	1104221	ParameterType	struct sljit_compiler *		1103970	0					
ANR	1104222	Identifier	compiler		1103970	1					
ANR	1104223	Parameter	sljit_si type	1335:84:42890:42902	1103970	1	True				
ANR	1104224	ParameterType	sljit_si		1103970	0					
ANR	1104225	Identifier	type		1103970	1					
ANR	1104226	Parameter	sljit_si src	1335:99:42905:42916	1103970	2	True				
ANR	1104227	ParameterType	sljit_si		1103970	0					
ANR	1104228	Identifier	src		1103970	1					
ANR	1104229	Parameter	sljit_sw srcw	1335:113:42919:42931	1103970	3	True				
ANR	1104230	ParameterType	sljit_sw		1103970	0					
ANR	1104231	Identifier	srcw		1103970	1					
ANR	1104232	CFGEntryNode	ENTRY		1103970		True				
ANR	1104233	CFGExitNode	EXIT		1103970		True				
ANR	1104234	Symbol	check_sljit_emit_ijump		1103970						
ANR	1104235	Symbol	TMP_REG2		1103970						
ANR	1104236	Symbol	* jump		1103970						
ANR	1104237	Symbol	LOAD_DATA		1103970						
ANR	1104238	Symbol	D		1103970						
ANR	1104239	Symbol	jump -> u		1103970						
ANR	1104240	Symbol	TMP_LINK		1103970						
ANR	1104241	Symbol	jump -> flags		1103970						
ANR	1104242	Symbol	JUMP_ADDR		1103970						
ANR	1104243	Symbol	* compiler		1103970						
ANR	1104244	Symbol	type		1103970						
ANR	1104245	Symbol	SLJIT_IMM		1103970						
ANR	1104246	Symbol	SLJIT_FAST_CALL		1103970						
ANR	1104247	Symbol	compiler		1103970						
ANR	1104248	Symbol	JMPL		1103970						
ANR	1104249	Symbol	src_r		1103970						
ANR	1104250	Symbol	WORD_DATA		1103970						
ANR	1104251	Symbol	jump		1103970						
ANR	1104252	Symbol	push_inst		1103970						
ANR	1104253	Symbol	NULL		1103970						
ANR	1104254	Symbol	FAST_IS_REG		1103970						
ANR	1104255	Symbol	IS_MOVABLE		1103970						
ANR	1104256	Symbol	src		1103970						
ANR	1104257	Symbol	srcw		1103970						
ANR	1104258	Symbol	DST_INS_MASK		1103970						
ANR	1104259	Symbol	UNMOVABLE_INS		1103970						
ANR	1104260	Symbol	IMM		1103970						
ANR	1104261	Symbol	emit_op_mem		1103970						
ANR	1104262	Symbol	jump -> addr		1103970						
ANR	1104263	Symbol	ensure_abuf		1103970						
ANR	1104264	Symbol	NOP		1103970						
ANR	1104265	Symbol	IS_CALL		1103970						
ANR	1104266	Symbol	compiler -> size		1103970						
ANR	1104267	Symbol	jump -> u . target		1103970						
ANR	1104268	Symbol	emit_const		1103970						
ANR	1104269	Symbol	compiler -> delay_slot		1103970						
ANR	1104270	Symbol	S1		1103970						
ANR	1104271	Function	sljit_emit_op_flags	1370:0:43865:45311							
ANR	1104272	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1104271	0					
ANR	1104273	CompoundStatement		1374:0:44041:45311	1104271	0					
ANR	1104274	IdentifierDeclStatement	"sljit_si reg , flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 ) ;"	1375:1:44044:44097	1104271	0	True				
ANR	1104275	IdentifierDecl	reg		1104271	0					
ANR	1104276	IdentifierDeclType	sljit_si		1104271	0					
ANR	1104277	Identifier	reg		1104271	1					
ANR	1104278	IdentifierDecl	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 )		1104271	1					
ANR	1104279	IdentifierDeclType	sljit_si		1104271	0					
ANR	1104280	Identifier	flags		1104271	1					
ANR	1104281	AssignmentExpression	flags = ( GET_FLAGS ( op ) ? SET_FLAGS : 0 )		1104271	2		=			
ANR	1104282	Identifier	flags		1104271	0					
ANR	1104283	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1104271	1					
ANR	1104284	Condition	GET_FLAGS ( op )		1104271	0					
ANR	1104285	CallExpression	GET_FLAGS ( op )		1104271	0					
ANR	1104286	Callee	GET_FLAGS		1104271	0					
ANR	1104287	Identifier	GET_FLAGS		1104271	0					
ANR	1104288	ArgumentList	op		1104271	1					
ANR	1104289	Argument	op		1104271	0					
ANR	1104290	Identifier	op		1104271	0					
ANR	1104291	Identifier	SET_FLAGS		1104271	1					
ANR	1104292	PrimaryExpression	0		1104271	2					
ANR	1104293	ExpressionStatement	CHECK_ERROR ( )	1377:1:44101:44114	1104271	1	True				
ANR	1104294	CallExpression	CHECK_ERROR ( )		1104271	0					
ANR	1104295	Callee	CHECK_ERROR		1104271	0					
ANR	1104296	Identifier	CHECK_ERROR		1104271	0					
ANR	1104297	ArgumentList			1104271	1					
ANR	1104298	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	1378:1:44117:44191	1104271	2	True				
ANR	1104299	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1104271	0					
ANR	1104300	Callee	CHECK		1104271	0					
ANR	1104301	Identifier	CHECK		1104271	0					
ANR	1104302	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1104271	1					
ANR	1104303	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1104271	0					
ANR	1104304	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1104271	0					
ANR	1104305	Callee	check_sljit_emit_op_flags		1104271	0					
ANR	1104306	Identifier	check_sljit_emit_op_flags		1104271	0					
ANR	1104307	ArgumentList	compiler		1104271	1					
ANR	1104308	Argument	compiler		1104271	0					
ANR	1104309	Identifier	compiler		1104271	0					
ANR	1104310	Argument	op		1104271	1					
ANR	1104311	Identifier	op		1104271	0					
ANR	1104312	Argument	dst		1104271	2					
ANR	1104313	Identifier	dst		1104271	0					
ANR	1104314	Argument	dstw		1104271	3					
ANR	1104315	Identifier	dstw		1104271	0					
ANR	1104316	Argument	src		1104271	4					
ANR	1104317	Identifier	src		1104271	0					
ANR	1104318	Argument	srcw		1104271	5					
ANR	1104319	Identifier	srcw		1104271	0					
ANR	1104320	Argument	type		1104271	6					
ANR	1104321	Identifier	type		1104271	0					
ANR	1104322	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1379:1:44194:44224	1104271	3	True				
ANR	1104323	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1104271	0					
ANR	1104324	Callee	ADJUST_LOCAL_OFFSET		1104271	0					
ANR	1104325	Identifier	ADJUST_LOCAL_OFFSET		1104271	0					
ANR	1104326	ArgumentList	dst		1104271	1					
ANR	1104327	Argument	dst		1104271	0					
ANR	1104328	Identifier	dst		1104271	0					
ANR	1104329	Argument	dstw		1104271	1					
ANR	1104330	Identifier	dstw		1104271	0					
ANR	1104331	IfStatement	if ( dst == SLJIT_UNUSED )		1104271	4					
ANR	1104332	Condition	dst == SLJIT_UNUSED	1381:5:44232:44250	1104271	0	True				
ANR	1104333	EqualityExpression	dst == SLJIT_UNUSED		1104271	0		==			
ANR	1104334	Identifier	dst		1104271	0					
ANR	1104335	Identifier	SLJIT_UNUSED		1104271	1					
ANR	1104336	ReturnStatement	return SLJIT_SUCCESS ;	1382:2:44255:44275	1104271	1	True				
ANR	1104337	Identifier	SLJIT_SUCCESS		1104271	0					
ANR	1104338	ExpressionStatement	op = GET_OPCODE ( op )	1385:1:44340:44359	1104271	5	True				
ANR	1104339	AssignmentExpression	op = GET_OPCODE ( op )		1104271	0		=			
ANR	1104340	Identifier	op		1104271	0					
ANR	1104341	CallExpression	GET_OPCODE ( op )		1104271	1					
ANR	1104342	Callee	GET_OPCODE		1104271	0					
ANR	1104343	Identifier	GET_OPCODE		1104271	0					
ANR	1104344	ArgumentList	op		1104271	1					
ANR	1104345	Argument	op		1104271	0					
ANR	1104346	Identifier	op		1104271	0					
ANR	1104347	ExpressionStatement	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2	1386:1:44362:44421	1104271	6	True				
ANR	1104348	AssignmentExpression	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1104271	0		=			
ANR	1104349	Identifier	reg		1104271	0					
ANR	1104350	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1104271	1					
ANR	1104351	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1104271	0					
ANR	1104352	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1104271	0		&&			
ANR	1104353	RelationalExpression	op < SLJIT_ADD		1104271	0		<			
ANR	1104354	Identifier	op		1104271	0					
ANR	1104355	Identifier	SLJIT_ADD		1104271	1					
ANR	1104356	CallExpression	FAST_IS_REG ( dst )		1104271	1					
ANR	1104357	Callee	FAST_IS_REG		1104271	0					
ANR	1104358	Identifier	FAST_IS_REG		1104271	0					
ANR	1104359	ArgumentList	dst		1104271	1					
ANR	1104360	Argument	dst		1104271	0					
ANR	1104361	Identifier	dst		1104271	0					
ANR	1104362	Identifier	dst		1104271	1					
ANR	1104363	Identifier	TMP_REG2		1104271	2					
ANR	1104364	ExpressionStatement	compiler -> cache_arg = 0	1388:1:44425:44448	1104271	7	True				
ANR	1104365	AssignmentExpression	compiler -> cache_arg = 0		1104271	0		=			
ANR	1104366	PtrMemberAccess	compiler -> cache_arg		1104271	0					
ANR	1104367	Identifier	compiler		1104271	0					
ANR	1104368	Identifier	cache_arg		1104271	1					
ANR	1104369	PrimaryExpression	0		1104271	1					
ANR	1104370	ExpressionStatement	compiler -> cache_argw = 0	1389:1:44451:44475	1104271	8	True				
ANR	1104371	AssignmentExpression	compiler -> cache_argw = 0		1104271	0		=			
ANR	1104372	PtrMemberAccess	compiler -> cache_argw		1104271	0					
ANR	1104373	Identifier	compiler		1104271	0					
ANR	1104374	Identifier	cache_argw		1104271	1					
ANR	1104375	PrimaryExpression	0		1104271	1					
ANR	1104376	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1104271	9					
ANR	1104377	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	1390:5:44482:44517	1104271	0	True				
ANR	1104378	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1104271	0		&&			
ANR	1104379	RelationalExpression	op >= SLJIT_ADD		1104271	0		>=			
ANR	1104380	Identifier	op		1104271	0					
ANR	1104381	Identifier	SLJIT_ADD		1104271	1					
ANR	1104382	BitAndExpression	src & SLJIT_MEM		1104271	1		&			
ANR	1104383	Identifier	src		1104271	0					
ANR	1104384	Identifier	SLJIT_MEM		1104271	1					
ANR	1104385	CompoundStatement		17:43:478:478	1104271	1					
ANR	1104386	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1391:2:44524:44554	1104271	0	True				
ANR	1104387	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1104271	0					
ANR	1104388	Callee	ADJUST_LOCAL_OFFSET		1104271	0					
ANR	1104389	Identifier	ADJUST_LOCAL_OFFSET		1104271	0					
ANR	1104390	ArgumentList	src		1104271	1					
ANR	1104391	Argument	src		1104271	0					
ANR	1104392	Identifier	src		1104271	0					
ANR	1104393	Argument	srcw		1104271	1					
ANR	1104394	Identifier	srcw		1104271	0					
ANR	1104395	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"	1392:2:44558:44644	1104271	1	True				
ANR	1104396	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"		1104271	0					
ANR	1104397	Callee	FAIL_IF		1104271	0					
ANR	1104398	Identifier	FAIL_IF		1104271	0					
ANR	1104399	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1104271	1					
ANR	1104400	Argument	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1104271	0					
ANR	1104401	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1104271	0					
ANR	1104402	Callee	emit_op_mem2		1104271	0					
ANR	1104403	Identifier	emit_op_mem2		1104271	0					
ANR	1104404	ArgumentList	compiler		1104271	1					
ANR	1104405	Argument	compiler		1104271	0					
ANR	1104406	Identifier	compiler		1104271	0					
ANR	1104407	Argument	WORD_DATA | LOAD_DATA		1104271	1					
ANR	1104408	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1104271	0		|			
ANR	1104409	Identifier	WORD_DATA		1104271	0					
ANR	1104410	Identifier	LOAD_DATA		1104271	1					
ANR	1104411	Argument	TMP_REG1		1104271	2					
ANR	1104412	Identifier	TMP_REG1		1104271	0					
ANR	1104413	Argument	src		1104271	3					
ANR	1104414	Identifier	src		1104271	0					
ANR	1104415	Argument	srcw		1104271	4					
ANR	1104416	Identifier	srcw		1104271	0					
ANR	1104417	Argument	dst		1104271	5					
ANR	1104418	Identifier	dst		1104271	0					
ANR	1104419	Argument	dstw		1104271	6					
ANR	1104420	Identifier	dstw		1104271	0					
ANR	1104421	ExpressionStatement	src = TMP_REG1	1393:2:44648:44662	1104271	2	True				
ANR	1104422	AssignmentExpression	src = TMP_REG1		1104271	0		=			
ANR	1104423	Identifier	src		1104271	0					
ANR	1104424	Identifier	TMP_REG1		1104271	1					
ANR	1104425	ExpressionStatement	srcw = 0	1394:2:44666:44674	1104271	3	True				
ANR	1104426	AssignmentExpression	srcw = 0		1104271	0		=			
ANR	1104427	Identifier	srcw		1104271	0					
ANR	1104428	PrimaryExpression	0		1104271	1					
ANR	1104429	ExpressionStatement	type &= 0xff	1397:1:44681:44693	1104271	10	True				
ANR	1104430	AssignmentExpression	type &= 0xff		1104271	0		&=			
ANR	1104431	Identifier	type		1104271	0					
ANR	1104432	PrimaryExpression	0xff		1104271	1					
ANR	1104433	IfStatement	if ( type < SLJIT_D_EQUAL )		1104271	11					
ANR	1104434	Condition	type < SLJIT_D_EQUAL	1398:5:44700:44719	1104271	0	True				
ANR	1104435	RelationalExpression	type < SLJIT_D_EQUAL		1104271	0		<			
ANR	1104436	Identifier	type		1104271	0					
ANR	1104437	Identifier	SLJIT_D_EQUAL		1104271	1					
ANR	1104438	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , BICC | get_cc ( type ) | 3 , UNMOVABLE_INS ) )"	1399:2:44724:44792	1104271	1	True				
ANR	1104439	CallExpression	"FAIL_IF ( push_inst ( compiler , BICC | get_cc ( type ) | 3 , UNMOVABLE_INS ) )"		1104271	0					
ANR	1104440	Callee	FAIL_IF		1104271	0					
ANR	1104441	Identifier	FAIL_IF		1104271	0					
ANR	1104442	ArgumentList	"push_inst ( compiler , BICC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	1					
ANR	1104443	Argument	"push_inst ( compiler , BICC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	0					
ANR	1104444	CallExpression	"push_inst ( compiler , BICC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	0					
ANR	1104445	Callee	push_inst		1104271	0					
ANR	1104446	Identifier	push_inst		1104271	0					
ANR	1104447	ArgumentList	compiler		1104271	1					
ANR	1104448	Argument	compiler		1104271	0					
ANR	1104449	Identifier	compiler		1104271	0					
ANR	1104450	Argument	BICC | get_cc ( type ) | 3		1104271	1					
ANR	1104451	InclusiveOrExpression	BICC | get_cc ( type ) | 3		1104271	0		|			
ANR	1104452	Identifier	BICC		1104271	0					
ANR	1104453	InclusiveOrExpression	get_cc ( type ) | 3		1104271	1		|			
ANR	1104454	CallExpression	get_cc ( type )		1104271	0					
ANR	1104455	Callee	get_cc		1104271	0					
ANR	1104456	Identifier	get_cc		1104271	0					
ANR	1104457	ArgumentList	type		1104271	1					
ANR	1104458	Argument	type		1104271	0					
ANR	1104459	Identifier	type		1104271	0					
ANR	1104460	PrimaryExpression	3		1104271	1					
ANR	1104461	Argument	UNMOVABLE_INS		1104271	2					
ANR	1104462	Identifier	UNMOVABLE_INS		1104271	0					
ANR	1104463	ElseStatement	else		1104271	0					
ANR	1104464	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FBFCC | get_cc ( type ) | 3 , UNMOVABLE_INS ) )"	1401:2:44802:44871	1104271	0	True				
ANR	1104465	CallExpression	"FAIL_IF ( push_inst ( compiler , FBFCC | get_cc ( type ) | 3 , UNMOVABLE_INS ) )"		1104271	0					
ANR	1104466	Callee	FAIL_IF		1104271	0					
ANR	1104467	Identifier	FAIL_IF		1104271	0					
ANR	1104468	ArgumentList	"push_inst ( compiler , FBFCC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	1					
ANR	1104469	Argument	"push_inst ( compiler , FBFCC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	0					
ANR	1104470	CallExpression	"push_inst ( compiler , FBFCC | get_cc ( type ) | 3 , UNMOVABLE_INS )"		1104271	0					
ANR	1104471	Callee	push_inst		1104271	0					
ANR	1104472	Identifier	push_inst		1104271	0					
ANR	1104473	ArgumentList	compiler		1104271	1					
ANR	1104474	Argument	compiler		1104271	0					
ANR	1104475	Identifier	compiler		1104271	0					
ANR	1104476	Argument	FBFCC | get_cc ( type ) | 3		1104271	1					
ANR	1104477	InclusiveOrExpression	FBFCC | get_cc ( type ) | 3		1104271	0		|			
ANR	1104478	Identifier	FBFCC		1104271	0					
ANR	1104479	InclusiveOrExpression	get_cc ( type ) | 3		1104271	1		|			
ANR	1104480	CallExpression	get_cc ( type )		1104271	0					
ANR	1104481	Callee	get_cc		1104271	0					
ANR	1104482	Identifier	get_cc		1104271	0					
ANR	1104483	ArgumentList	type		1104271	1					
ANR	1104484	Argument	type		1104271	0					
ANR	1104485	Identifier	type		1104271	0					
ANR	1104486	PrimaryExpression	3		1104271	1					
ANR	1104487	Argument	UNMOVABLE_INS		1104271	2					
ANR	1104488	Identifier	UNMOVABLE_INS		1104271	0					
ANR	1104489	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 ) , UNMOVABLE_INS ) )"	1403:1:44875:44948	1104271	12	True				
ANR	1104490	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 ) , UNMOVABLE_INS ) )"		1104271	0					
ANR	1104491	Callee	FAIL_IF		1104271	0					
ANR	1104492	Identifier	FAIL_IF		1104271	0					
ANR	1104493	ArgumentList	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 ) , UNMOVABLE_INS )"		1104271	1					
ANR	1104494	Argument	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 ) , UNMOVABLE_INS )"		1104271	0					
ANR	1104495	CallExpression	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 ) , UNMOVABLE_INS )"		1104271	0					
ANR	1104496	Callee	push_inst		1104271	0					
ANR	1104497	Identifier	push_inst		1104271	0					
ANR	1104498	ArgumentList	compiler		1104271	1					
ANR	1104499	Argument	compiler		1104271	0					
ANR	1104500	Identifier	compiler		1104271	0					
ANR	1104501	Argument	OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 )		1104271	1					
ANR	1104502	InclusiveOrExpression	OR | D ( reg ) | S1 ( 0 ) | IMM ( 1 )		1104271	0		|			
ANR	1104503	Identifier	OR		1104271	0					
ANR	1104504	InclusiveOrExpression	D ( reg ) | S1 ( 0 ) | IMM ( 1 )		1104271	1		|			
ANR	1104505	CallExpression	D ( reg )		1104271	0					
ANR	1104506	Callee	D		1104271	0					
ANR	1104507	Identifier	D		1104271	0					
ANR	1104508	ArgumentList	reg		1104271	1					
ANR	1104509	Argument	reg		1104271	0					
ANR	1104510	Identifier	reg		1104271	0					
ANR	1104511	InclusiveOrExpression	S1 ( 0 ) | IMM ( 1 )		1104271	1		|			
ANR	1104512	CallExpression	S1 ( 0 )		1104271	0					
ANR	1104513	Callee	S1		1104271	0					
ANR	1104514	Identifier	S1		1104271	0					
ANR	1104515	ArgumentList	0		1104271	1					
ANR	1104516	Argument	0		1104271	0					
ANR	1104517	PrimaryExpression	0		1104271	0					
ANR	1104518	CallExpression	IMM ( 1 )		1104271	1					
ANR	1104519	Callee	IMM		1104271	0					
ANR	1104520	Identifier	IMM		1104271	0					
ANR	1104521	ArgumentList	1		1104271	1					
ANR	1104522	Argument	1		1104271	0					
ANR	1104523	PrimaryExpression	1		1104271	0					
ANR	1104524	Argument	UNMOVABLE_INS		1104271	2					
ANR	1104525	Identifier	UNMOVABLE_INS		1104271	0					
ANR	1104526	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 ) , UNMOVABLE_INS ) )"	1404:1:44951:45024	1104271	13	True				
ANR	1104527	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 ) , UNMOVABLE_INS ) )"		1104271	0					
ANR	1104528	Callee	FAIL_IF		1104271	0					
ANR	1104529	Identifier	FAIL_IF		1104271	0					
ANR	1104530	ArgumentList	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1104271	1					
ANR	1104531	Argument	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1104271	0					
ANR	1104532	CallExpression	"push_inst ( compiler , OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 ) , UNMOVABLE_INS )"		1104271	0					
ANR	1104533	Callee	push_inst		1104271	0					
ANR	1104534	Identifier	push_inst		1104271	0					
ANR	1104535	ArgumentList	compiler		1104271	1					
ANR	1104536	Argument	compiler		1104271	0					
ANR	1104537	Identifier	compiler		1104271	0					
ANR	1104538	Argument	OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 )		1104271	1					
ANR	1104539	InclusiveOrExpression	OR | D ( reg ) | S1 ( 0 ) | IMM ( 0 )		1104271	0		|			
ANR	1104540	Identifier	OR		1104271	0					
ANR	1104541	InclusiveOrExpression	D ( reg ) | S1 ( 0 ) | IMM ( 0 )		1104271	1		|			
ANR	1104542	CallExpression	D ( reg )		1104271	0					
ANR	1104543	Callee	D		1104271	0					
ANR	1104544	Identifier	D		1104271	0					
ANR	1104545	ArgumentList	reg		1104271	1					
ANR	1104546	Argument	reg		1104271	0					
ANR	1104547	Identifier	reg		1104271	0					
ANR	1104548	InclusiveOrExpression	S1 ( 0 ) | IMM ( 0 )		1104271	1		|			
ANR	1104549	CallExpression	S1 ( 0 )		1104271	0					
ANR	1104550	Callee	S1		1104271	0					
ANR	1104551	Identifier	S1		1104271	0					
ANR	1104552	ArgumentList	0		1104271	1					
ANR	1104553	Argument	0		1104271	0					
ANR	1104554	PrimaryExpression	0		1104271	0					
ANR	1104555	CallExpression	IMM ( 0 )		1104271	1					
ANR	1104556	Callee	IMM		1104271	0					
ANR	1104557	Identifier	IMM		1104271	0					
ANR	1104558	ArgumentList	0		1104271	1					
ANR	1104559	Argument	0		1104271	0					
ANR	1104560	PrimaryExpression	0		1104271	0					
ANR	1104561	Argument	UNMOVABLE_INS		1104271	2					
ANR	1104562	Identifier	UNMOVABLE_INS		1104271	0					
ANR	1104563	IfStatement	if ( op >= SLJIT_ADD )		1104271	14					
ANR	1104564	Condition	op >= SLJIT_ADD	1406:5:45032:45046	1104271	0	True				
ANR	1104565	RelationalExpression	op >= SLJIT_ADD		1104271	0		>=			
ANR	1104566	Identifier	op		1104271	0					
ANR	1104567	Identifier	SLJIT_ADD		1104271	1					
ANR	1104568	ReturnStatement	"return emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 ) ;"	1407:2:45051:45163	1104271	1	True				
ANR	1104569	CallExpression	"emit_op ( compiler , op , flags | CUMULATIVE_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 )"		1104271	0					
ANR	1104570	Callee	emit_op		1104271	0					
ANR	1104571	Identifier	emit_op		1104271	0					
ANR	1104572	ArgumentList	compiler		1104271	1					
ANR	1104573	Argument	compiler		1104271	0					
ANR	1104574	Identifier	compiler		1104271	0					
ANR	1104575	Argument	op		1104271	1					
ANR	1104576	Identifier	op		1104271	0					
ANR	1104577	Argument	flags | CUMULATIVE_OP | IMM_OP | ALT_KEEP_CACHE		1104271	2					
ANR	1104578	InclusiveOrExpression	flags | CUMULATIVE_OP | IMM_OP | ALT_KEEP_CACHE		1104271	0		|			
ANR	1104579	Identifier	flags		1104271	0					
ANR	1104580	InclusiveOrExpression	CUMULATIVE_OP | IMM_OP | ALT_KEEP_CACHE		1104271	1		|			
ANR	1104581	Identifier	CUMULATIVE_OP		1104271	0					
ANR	1104582	InclusiveOrExpression	IMM_OP | ALT_KEEP_CACHE		1104271	1		|			
ANR	1104583	Identifier	IMM_OP		1104271	0					
ANR	1104584	Identifier	ALT_KEEP_CACHE		1104271	1					
ANR	1104585	Argument	dst		1104271	3					
ANR	1104586	Identifier	dst		1104271	0					
ANR	1104587	Argument	dstw		1104271	4					
ANR	1104588	Identifier	dstw		1104271	0					
ANR	1104589	Argument	src		1104271	5					
ANR	1104590	Identifier	src		1104271	0					
ANR	1104591	Argument	srcw		1104271	6					
ANR	1104592	Identifier	srcw		1104271	0					
ANR	1104593	Argument	TMP_REG2		1104271	7					
ANR	1104594	Identifier	TMP_REG2		1104271	0					
ANR	1104595	Argument	0		1104271	8					
ANR	1104596	PrimaryExpression	0		1104271	0					
ANR	1104597	ReturnStatement	"return ( reg == TMP_REG2 ) ? emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) : SLJIT_SUCCESS ;"	1409:1:45167:45263	1104271	15	True				
ANR	1104598	ConditionalExpression	"( reg == TMP_REG2 ) ? emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) : SLJIT_SUCCESS"		1104271	0					
ANR	1104599	Condition	reg == TMP_REG2		1104271	0					
ANR	1104600	EqualityExpression	reg == TMP_REG2		1104271	0		==			
ANR	1104601	Identifier	reg		1104271	0					
ANR	1104602	Identifier	TMP_REG2		1104271	1					
ANR	1104603	CallExpression	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1104271	1					
ANR	1104604	Callee	emit_op_mem		1104271	0					
ANR	1104605	Identifier	emit_op_mem		1104271	0					
ANR	1104606	ArgumentList	compiler		1104271	1					
ANR	1104607	Argument	compiler		1104271	0					
ANR	1104608	Identifier	compiler		1104271	0					
ANR	1104609	Argument	WORD_DATA		1104271	1					
ANR	1104610	Identifier	WORD_DATA		1104271	0					
ANR	1104611	Argument	TMP_REG2		1104271	2					
ANR	1104612	Identifier	TMP_REG2		1104271	0					
ANR	1104613	Argument	dst		1104271	3					
ANR	1104614	Identifier	dst		1104271	0					
ANR	1104615	Argument	dstw		1104271	4					
ANR	1104616	Identifier	dstw		1104271	0					
ANR	1104617	Identifier	SLJIT_SUCCESS		1104271	2					
ANR	1104618	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1104271	1					
ANR	1104619	Identifier	sljit_emit_op_flags		1104271	2					
ANR	1104620	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1104271	3					
ANR	1104621	Parameter	struct sljit_compiler * compiler	1370:54:43919:43949	1104271	0	True				
ANR	1104622	ParameterType	struct sljit_compiler *		1104271	0					
ANR	1104623	Identifier	compiler		1104271	1					
ANR	1104624	Parameter	sljit_si op	1370:87:43952:43962	1104271	1	True				
ANR	1104625	ParameterType	sljit_si		1104271	0					
ANR	1104626	Identifier	op		1104271	1					
ANR	1104627	Parameter	sljit_si dst	1371:1:43966:43977	1104271	2	True				
ANR	1104628	ParameterType	sljit_si		1104271	0					
ANR	1104629	Identifier	dst		1104271	1					
ANR	1104630	Parameter	sljit_sw dstw	1371:15:43980:43992	1104271	3	True				
ANR	1104631	ParameterType	sljit_sw		1104271	0					
ANR	1104632	Identifier	dstw		1104271	1					
ANR	1104633	Parameter	sljit_si src	1372:1:43996:44007	1104271	4	True				
ANR	1104634	ParameterType	sljit_si		1104271	0					
ANR	1104635	Identifier	src		1104271	1					
ANR	1104636	Parameter	sljit_sw srcw	1372:15:44010:44022	1104271	5	True				
ANR	1104637	ParameterType	sljit_sw		1104271	0					
ANR	1104638	Identifier	srcw		1104271	1					
ANR	1104639	Parameter	sljit_si type	1373:1:44026:44038	1104271	6	True				
ANR	1104640	ParameterType	sljit_si		1104271	0					
ANR	1104641	Identifier	type		1104271	1					
ANR	1104642	CFGEntryNode	ENTRY		1104271		True				
ANR	1104643	CFGExitNode	EXIT		1104271		True				
ANR	1104644	Symbol	TMP_REG2		1104271						
ANR	1104645	Symbol	compiler -> cache_argw		1104271						
ANR	1104646	Symbol	TMP_REG1		1104271						
ANR	1104647	Symbol	dst		1104271						
ANR	1104648	Symbol	LOAD_DATA		1104271						
ANR	1104649	Symbol	D		1104271						
ANR	1104650	Symbol	IMM_OP		1104271						
ANR	1104651	Symbol	SLJIT_MEM		1104271						
ANR	1104652	Symbol	CUMULATIVE_OP		1104271						
ANR	1104653	Symbol	flags		1104271						
ANR	1104654	Symbol	SLJIT_ADD		1104271						
ANR	1104655	Symbol	* compiler		1104271						
ANR	1104656	Symbol	type		1104271						
ANR	1104657	Symbol	GET_FLAGS		1104271						
ANR	1104658	Symbol	GET_OPCODE		1104271						
ANR	1104659	Symbol	FBFCC		1104271						
ANR	1104660	Symbol	reg		1104271						
ANR	1104661	Symbol	compiler		1104271						
ANR	1104662	Symbol	check_sljit_emit_op_flags		1104271						
ANR	1104663	Symbol	WORD_DATA		1104271						
ANR	1104664	Symbol	emit_op		1104271						
ANR	1104665	Symbol	op		1104271						
ANR	1104666	Symbol	push_inst		1104271						
ANR	1104667	Symbol	get_cc		1104271						
ANR	1104668	Symbol	FAST_IS_REG		1104271						
ANR	1104669	Symbol	OR		1104271						
ANR	1104670	Symbol	src		1104271						
ANR	1104671	Symbol	srcw		1104271						
ANR	1104672	Symbol	compiler -> cache_arg		1104271						
ANR	1104673	Symbol	UNMOVABLE_INS		1104271						
ANR	1104674	Symbol	emit_op_mem2		1104271						
ANR	1104675	Symbol	IMM		1104271						
ANR	1104676	Symbol	SLJIT_D_EQUAL		1104271						
ANR	1104677	Symbol	emit_op_mem		1104271						
ANR	1104678	Symbol	SLJIT_SUCCESS		1104271						
ANR	1104679	Symbol	SET_FLAGS		1104271						
ANR	1104680	Symbol	SLJIT_UNUSED		1104271						
ANR	1104681	Symbol	BICC		1104271						
ANR	1104682	Symbol	dstw		1104271						
ANR	1104683	Symbol	ALT_KEEP_CACHE		1104271						
ANR	1104684	Symbol	S1		1104271						
ANR	1104685	Function	sljit_emit_const	1415:25:45339:45970							
ANR	1104686	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1104685	0					
ANR	1104687	CompoundStatement		1416:0:45459:45970	1104685	0					
ANR	1104688	IdentifierDeclStatement	sljit_si reg ;	1417:1:45462:45474	1104685	0	True				
ANR	1104689	IdentifierDecl	reg		1104685	0					
ANR	1104690	IdentifierDeclType	sljit_si		1104685	0					
ANR	1104691	Identifier	reg		1104685	1					
ANR	1104692	IdentifierDeclStatement	struct sljit_const * const_ ;	1418:1:45477:45503	1104685	1	True				
ANR	1104693	IdentifierDecl	* const_		1104685	0					
ANR	1104694	IdentifierDeclType	struct sljit_const *		1104685	0					
ANR	1104695	Identifier	const_		1104685	1					
ANR	1104696	ExpressionStatement	CHECK_ERROR_PTR ( )	1420:1:45507:45524	1104685	2	True				
ANR	1104697	CallExpression	CHECK_ERROR_PTR ( )		1104685	0					
ANR	1104698	Callee	CHECK_ERROR_PTR		1104685	0					
ANR	1104699	Identifier	CHECK_ERROR_PTR		1104685	0					
ANR	1104700	ArgumentList			1104685	1					
ANR	1104701	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	1421:1:45527:45593	1104685	3	True				
ANR	1104702	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1104685	0					
ANR	1104703	Callee	CHECK_PTR		1104685	0					
ANR	1104704	Identifier	CHECK_PTR		1104685	0					
ANR	1104705	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1104685	1					
ANR	1104706	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1104685	0					
ANR	1104707	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1104685	0					
ANR	1104708	Callee	check_sljit_emit_const		1104685	0					
ANR	1104709	Identifier	check_sljit_emit_const		1104685	0					
ANR	1104710	ArgumentList	compiler		1104685	1					
ANR	1104711	Argument	compiler		1104685	0					
ANR	1104712	Identifier	compiler		1104685	0					
ANR	1104713	Argument	dst		1104685	1					
ANR	1104714	Identifier	dst		1104685	0					
ANR	1104715	Argument	dstw		1104685	2					
ANR	1104716	Identifier	dstw		1104685	0					
ANR	1104717	Argument	init_value		1104685	3					
ANR	1104718	Identifier	init_value		1104685	0					
ANR	1104719	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1422:1:45596:45626	1104685	4	True				
ANR	1104720	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1104685	0					
ANR	1104721	Callee	ADJUST_LOCAL_OFFSET		1104685	0					
ANR	1104722	Identifier	ADJUST_LOCAL_OFFSET		1104685	0					
ANR	1104723	ArgumentList	dst		1104685	1					
ANR	1104724	Argument	dst		1104685	0					
ANR	1104725	Identifier	dst		1104685	0					
ANR	1104726	Argument	dstw		1104685	1					
ANR	1104727	Identifier	dstw		1104685	0					
ANR	1104728	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	1424:1:45630:45709	1104685	5	True				
ANR	1104729	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1104685	0		=			
ANR	1104730	Identifier	const_		1104685	0					
ANR	1104731	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1104685	1					
ANR	1104732	CastTarget	struct sljit_const *		1104685	0					
ANR	1104733	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1104685	1					
ANR	1104734	Callee	ensure_abuf		1104685	0					
ANR	1104735	Identifier	ensure_abuf		1104685	0					
ANR	1104736	ArgumentList	compiler		1104685	1					
ANR	1104737	Argument	compiler		1104685	0					
ANR	1104738	Identifier	compiler		1104685	0					
ANR	1104739	Argument	sizeof ( struct sljit_const )		1104685	1					
ANR	1104740	SizeofExpression	sizeof ( struct sljit_const )		1104685	0					
ANR	1104741	Sizeof	sizeof		1104685	0					
ANR	1104742	SizeofOperand	struct sljit_const		1104685	1					
ANR	1104743	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	1425:1:45712:45732	1104685	6	True				
ANR	1104744	CallExpression	PTR_FAIL_IF ( ! const_ )		1104685	0					
ANR	1104745	Callee	PTR_FAIL_IF		1104685	0					
ANR	1104746	Identifier	PTR_FAIL_IF		1104685	0					
ANR	1104747	ArgumentList	! const_		1104685	1					
ANR	1104748	Argument	! const_		1104685	0					
ANR	1104749	UnaryOperationExpression	! const_		1104685	0					
ANR	1104750	UnaryOperator	!		1104685	0					
ANR	1104751	Identifier	const_		1104685	1					
ANR	1104752	ExpressionStatement	"set_const ( const_ , compiler )"	1426:1:45735:45762	1104685	7	True				
ANR	1104753	CallExpression	"set_const ( const_ , compiler )"		1104685	0					
ANR	1104754	Callee	set_const		1104685	0					
ANR	1104755	Identifier	set_const		1104685	0					
ANR	1104756	ArgumentList	const_		1104685	1					
ANR	1104757	Argument	const_		1104685	0					
ANR	1104758	Identifier	const_		1104685	0					
ANR	1104759	Argument	compiler		1104685	1					
ANR	1104760	Identifier	compiler		1104685	0					
ANR	1104761	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2	1428:1:45766:45805	1104685	8	True				
ANR	1104762	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1104685	0		=			
ANR	1104763	Identifier	reg		1104685	0					
ANR	1104764	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1104685	1					
ANR	1104765	Condition	SLOW_IS_REG ( dst )		1104685	0					
ANR	1104766	CallExpression	SLOW_IS_REG ( dst )		1104685	0					
ANR	1104767	Callee	SLOW_IS_REG		1104685	0					
ANR	1104768	Identifier	SLOW_IS_REG		1104685	0					
ANR	1104769	ArgumentList	dst		1104685	1					
ANR	1104770	Argument	dst		1104685	0					
ANR	1104771	Identifier	dst		1104685	0					
ANR	1104772	Identifier	dst		1104685	1					
ANR	1104773	Identifier	TMP_REG2		1104685	2					
ANR	1104774	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"	1430:1:45809:45859	1104685	9	True				
ANR	1104775	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"		1104685	0					
ANR	1104776	Callee	PTR_FAIL_IF		1104685	0					
ANR	1104777	Identifier	PTR_FAIL_IF		1104685	0					
ANR	1104778	ArgumentList	"emit_const ( compiler , reg , init_value )"		1104685	1					
ANR	1104779	Argument	"emit_const ( compiler , reg , init_value )"		1104685	0					
ANR	1104780	CallExpression	"emit_const ( compiler , reg , init_value )"		1104685	0					
ANR	1104781	Callee	emit_const		1104685	0					
ANR	1104782	Identifier	emit_const		1104685	0					
ANR	1104783	ArgumentList	compiler		1104685	1					
ANR	1104784	Argument	compiler		1104685	0					
ANR	1104785	Identifier	compiler		1104685	0					
ANR	1104786	Argument	reg		1104685	1					
ANR	1104787	Identifier	reg		1104685	0					
ANR	1104788	Argument	init_value		1104685	2					
ANR	1104789	Identifier	init_value		1104685	0					
ANR	1104790	IfStatement	if ( dst & SLJIT_MEM )		1104685	10					
ANR	1104791	Condition	dst & SLJIT_MEM	1432:5:45867:45881	1104685	0	True				
ANR	1104792	BitAndExpression	dst & SLJIT_MEM		1104685	0		&			
ANR	1104793	Identifier	dst		1104685	0					
ANR	1104794	Identifier	SLJIT_MEM		1104685	1					
ANR	1104795	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) )"	1433:2:45886:45952	1104685	1	True				
ANR	1104796	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) )"		1104685	0					
ANR	1104797	Callee	PTR_FAIL_IF		1104685	0					
ANR	1104798	Identifier	PTR_FAIL_IF		1104685	0					
ANR	1104799	ArgumentList	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1104685	1					
ANR	1104800	Argument	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1104685	0					
ANR	1104801	CallExpression	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1104685	0					
ANR	1104802	Callee	emit_op_mem		1104685	0					
ANR	1104803	Identifier	emit_op_mem		1104685	0					
ANR	1104804	ArgumentList	compiler		1104685	1					
ANR	1104805	Argument	compiler		1104685	0					
ANR	1104806	Identifier	compiler		1104685	0					
ANR	1104807	Argument	WORD_DATA		1104685	1					
ANR	1104808	Identifier	WORD_DATA		1104685	0					
ANR	1104809	Argument	TMP_REG2		1104685	2					
ANR	1104810	Identifier	TMP_REG2		1104685	0					
ANR	1104811	Argument	dst		1104685	3					
ANR	1104812	Identifier	dst		1104685	0					
ANR	1104813	Argument	dstw		1104685	4					
ANR	1104814	Identifier	dstw		1104685	0					
ANR	1104815	ReturnStatement	return const_ ;	1434:1:45955:45968	1104685	11	True				
ANR	1104816	Identifier	const_		1104685	0					
ANR	1104817	ReturnType	struct sljit_const *		1104685	1					
ANR	1104818	Identifier	sljit_emit_const		1104685	2					
ANR	1104819	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1104685	3					
ANR	1104820	Parameter	struct sljit_compiler * compiler	1415:62:45376:45406	1104685	0	True				
ANR	1104821	ParameterType	struct sljit_compiler *		1104685	0					
ANR	1104822	Identifier	compiler		1104685	1					
ANR	1104823	Parameter	sljit_si dst	1415:95:45409:45420	1104685	1	True				
ANR	1104824	ParameterType	sljit_si		1104685	0					
ANR	1104825	Identifier	dst		1104685	1					
ANR	1104826	Parameter	sljit_sw dstw	1415:109:45423:45435	1104685	2	True				
ANR	1104827	ParameterType	sljit_sw		1104685	0					
ANR	1104828	Identifier	dstw		1104685	1					
ANR	1104829	Parameter	sljit_sw init_value	1415:124:45438:45456	1104685	3	True				
ANR	1104830	ParameterType	sljit_sw		1104685	0					
ANR	1104831	Identifier	init_value		1104685	1					
ANR	1104832	CFGEntryNode	ENTRY		1104685		True				
ANR	1104833	CFGExitNode	EXIT		1104685		True				
ANR	1104834	Symbol	check_sljit_emit_const		1104685						
ANR	1104835	Symbol	TMP_REG2		1104685						
ANR	1104836	Symbol	const_		1104685						
ANR	1104837	Symbol	dst		1104685						
ANR	1104838	Symbol	SLJIT_MEM		1104685						
ANR	1104839	Symbol	emit_op_mem		1104685						
ANR	1104840	Symbol	SLOW_IS_REG		1104685						
ANR	1104841	Symbol	ensure_abuf		1104685						
ANR	1104842	Symbol	reg		1104685						
ANR	1104843	Symbol	emit_const		1104685						
ANR	1104844	Symbol	compiler		1104685						
ANR	1104845	Symbol	init_value		1104685						
ANR	1104846	Symbol	dstw		1104685						
ANR	1104847	Symbol	WORD_DATA		1104685						
