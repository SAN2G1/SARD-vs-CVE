command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1315998	File	data/converged/CVE-2017-11142_php-src/ext_spl_spl_functions.c								
ANR	1315999	DeclStmt									
ANR	1316000	Decl							zend_class_entry	zend_class_entry	ce
ANR	1316001	DeclStmt									
ANR	1316002	Decl							zend_class_entry	zend_class_entry	ce
ANR	1316003	DeclStmt									
ANR	1316004	Decl							zend_class_entry	zend_class_entry	ce
ANR	1316005	Function	spl_register_property	73:0:2654:2868							
ANR	1316006	FunctionDef	"spl_register_property (zend_class_entry * class_entry , char * prop_name , int prop_name_len , int prop_flags TSRMLS_DC)"		1316005	0					
ANR	1316007	CompoundStatement		74:0:2776:2868	1316005	0					
ANR	1316008	Statement	zend_declare_property_null	75:1:2779:2804	1316005	0	True				
ANR	1316009	Statement	(	75:27:2805:2805	1316005	1	True				
ANR	1316010	Statement	class_entry	75:28:2806:2816	1316005	2	True				
ANR	1316011	Statement	","	75:39:2817:2817	1316005	3	True				
ANR	1316012	Statement	prop_name	75:41:2819:2827	1316005	4	True				
ANR	1316013	Statement	","	75:50:2828:2828	1316005	5	True				
ANR	1316014	Statement	prop_name_len	75:52:2830:2842	1316005	6	True				
ANR	1316015	Statement	","	75:65:2843:2843	1316005	7	True				
ANR	1316016	Statement	prop_flags	75:67:2845:2854	1316005	8	True				
ANR	1316017	Statement	TSRMLS_CC	75:78:2856:2864	1316005	9	True				
ANR	1316018	Statement	)	75:87:2865:2865	1316005	10	True				
ANR	1316019	ExpressionStatement		75:88:2866:2866	1316005	11	True				
ANR	1316020	ReturnType	void		1316005	1					
ANR	1316021	Identifier	spl_register_property		1316005	2					
ANR	1316022	ParameterList	"zend_class_entry * class_entry , char * prop_name , int prop_name_len , int prop_flags TSRMLS_DC"		1316005	3					
ANR	1316023	Parameter	zend_class_entry * class_entry	73:28:2682:2711	1316005	0	True				
ANR	1316024	ParameterType	zend_class_entry *		1316005	0					
ANR	1316025	Identifier	class_entry		1316005	1					
ANR	1316026	Parameter	char * prop_name	73:60:2714:2728	1316005	1	True				
ANR	1316027	ParameterType	char *		1316005	0					
ANR	1316028	Identifier	prop_name		1316005	1					
ANR	1316029	Parameter	int prop_name_len	73:77:2731:2747	1316005	2	True				
ANR	1316030	ParameterType	int		1316005	0					
ANR	1316031	Identifier	prop_name_len		1316005	1					
ANR	1316032	Parameter	int prop_flags TSRMLS_DC	73:96:2750:2773	1316005	3	True				
ANR	1316033	ParameterType	int prop_flags		1316005	0					
ANR	1316034	Identifier	TSRMLS_DC		1316005	1					
ANR	1316035	CFGEntryNode	ENTRY		1316005		True				
ANR	1316036	CFGExitNode	EXIT		1316005		True				
ANR	1316037	Symbol	prop_name		1316005						
ANR	1316038	Symbol	class_entry		1316005						
ANR	1316039	Symbol	prop_name_len		1316005						
ANR	1316040	Symbol	TSRMLS_DC		1316005						
ANR	1316041	Function	spl_add_class_name	80:0:2910:3408							
ANR	1316042	FunctionDef	"spl_add_class_name (zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC)"		1316041	0					
ANR	1316043	CompoundStatement		81:0:3005:3408	1316041	0					
ANR	1316044	IfStatement	if ( ! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) ) )		1316041	0					
ANR	1316045	Condition	! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )	82:5:3012:3106	1316041	0	True				
ANR	1316046	OrExpression	! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )		1316041	0		||			
ANR	1316047	UnaryOperationExpression	! allow		1316041	0					
ANR	1316048	UnaryOperator	!		1316041	0					
ANR	1316049	Identifier	allow		1316041	1					
ANR	1316050	OrExpression	( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )		1316041	1		||			
ANR	1316051	AndExpression	allow > 0 && pce -> ce_flags & ce_flags		1316041	0		&&			
ANR	1316052	RelationalExpression	allow > 0		1316041	0		>			
ANR	1316053	Identifier	allow		1316041	0					
ANR	1316054	PrimaryExpression	0		1316041	1					
ANR	1316055	BitAndExpression	pce -> ce_flags & ce_flags		1316041	1		&			
ANR	1316056	PtrMemberAccess	pce -> ce_flags		1316041	0					
ANR	1316057	Identifier	pce		1316041	0					
ANR	1316058	Identifier	ce_flags		1316041	1					
ANR	1316059	Identifier	ce_flags		1316041	1					
ANR	1316060	AndExpression	allow < 0 && ! ( pce -> ce_flags & ce_flags )		1316041	1		&&			
ANR	1316061	RelationalExpression	allow < 0		1316041	0		<			
ANR	1316062	Identifier	allow		1316041	0					
ANR	1316063	PrimaryExpression	0		1316041	1					
ANR	1316064	UnaryOperationExpression	! ( pce -> ce_flags & ce_flags )		1316041	1					
ANR	1316065	UnaryOperator	!		1316041	0					
ANR	1316066	BitAndExpression	pce -> ce_flags & ce_flags		1316041	1		&			
ANR	1316067	PtrMemberAccess	pce -> ce_flags		1316041	0					
ANR	1316068	Identifier	pce		1316041	0					
ANR	1316069	Identifier	ce_flags		1316041	1					
ANR	1316070	Identifier	ce_flags		1316041	1					
ANR	1316071	CompoundStatement		4:2:140:149	1316041	1					
ANR	1316072	IdentifierDeclStatement	size_t len = pce -> name_length ;	83:2:3113:3142	1316041	0	True				
ANR	1316073	IdentifierDecl	len = pce -> name_length		1316041	0					
ANR	1316074	IdentifierDeclType	size_t		1316041	0					
ANR	1316075	Identifier	len		1316041	1					
ANR	1316076	AssignmentExpression	len = pce -> name_length		1316041	2		=			
ANR	1316077	Identifier	len		1316041	0					
ANR	1316078	PtrMemberAccess	pce -> name_length		1316041	1					
ANR	1316079	Identifier	pce		1316041	0					
ANR	1316080	Identifier	name_length		1316041	1					
ANR	1316081	IdentifierDeclStatement	zval * tmp ;	84:2:3146:3155	1316041	1	True				
ANR	1316082	IdentifierDecl	* tmp		1316041	0					
ANR	1316083	IdentifierDeclType	zval *		1316041	0					
ANR	1316084	Identifier	tmp		1316041	1					
ANR	1316085	IfStatement	"if ( zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , ( void * ) & tmp ) == FAILURE )"		1316041	2					
ANR	1316086	Condition	"zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , ( void * ) & tmp ) == FAILURE"	86:6:3164:3237	1316041	0	True				
ANR	1316087	EqualityExpression	"zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , ( void * ) & tmp ) == FAILURE"		1316041	0		==			
ANR	1316088	CallExpression	"zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , ( void * ) & tmp )"		1316041	0					
ANR	1316089	Callee	zend_hash_find		1316041	0					
ANR	1316090	Identifier	zend_hash_find		1316041	0					
ANR	1316091	ArgumentList	Z_ARRVAL_P ( list )		1316041	1					
ANR	1316092	Argument	Z_ARRVAL_P ( list )		1316041	0					
ANR	1316093	CallExpression	Z_ARRVAL_P ( list )		1316041	0					
ANR	1316094	Callee	Z_ARRVAL_P		1316041	0					
ANR	1316095	Identifier	Z_ARRVAL_P		1316041	0					
ANR	1316096	ArgumentList	list		1316041	1					
ANR	1316097	Argument	list		1316041	0					
ANR	1316098	Identifier	list		1316041	0					
ANR	1316099	Argument	pce -> name		1316041	1					
ANR	1316100	PtrMemberAccess	pce -> name		1316041	0					
ANR	1316101	Identifier	pce		1316041	0					
ANR	1316102	Identifier	name		1316041	1					
ANR	1316103	Argument	len + 1		1316041	2					
ANR	1316104	AdditiveExpression	len + 1		1316041	0		+			
ANR	1316105	Identifier	len		1316041	0					
ANR	1316106	PrimaryExpression	1		1316041	1					
ANR	1316107	Argument	( void * ) & tmp		1316041	3					
ANR	1316108	CastExpression	( void * ) & tmp		1316041	0					
ANR	1316109	CastTarget	void *		1316041	0					
ANR	1316110	UnaryOperationExpression	& tmp		1316041	1					
ANR	1316111	UnaryOperator	&		1316041	0					
ANR	1316112	Identifier	tmp		1316041	1					
ANR	1316113	Identifier	FAILURE		1316041	1					
ANR	1316114	CompoundStatement		6:82:234:234	1316041	1					
ANR	1316115	ExpressionStatement	MAKE_STD_ZVAL ( tmp )	87:3:3245:3263	1316041	0	True				
ANR	1316116	CallExpression	MAKE_STD_ZVAL ( tmp )		1316041	0					
ANR	1316117	Callee	MAKE_STD_ZVAL		1316041	0					
ANR	1316118	Identifier	MAKE_STD_ZVAL		1316041	0					
ANR	1316119	ArgumentList	tmp		1316041	1					
ANR	1316120	Argument	tmp		1316041	0					
ANR	1316121	Identifier	tmp		1316041	0					
ANR	1316122	ExpressionStatement	"ZVAL_STRINGL ( tmp , pce -> name , pce -> name_length , 1 )"	88:3:3268:3317	1316041	1	True				
ANR	1316123	CallExpression	"ZVAL_STRINGL ( tmp , pce -> name , pce -> name_length , 1 )"		1316041	0					
ANR	1316124	Callee	ZVAL_STRINGL		1316041	0					
ANR	1316125	Identifier	ZVAL_STRINGL		1316041	0					
ANR	1316126	ArgumentList	tmp		1316041	1					
ANR	1316127	Argument	tmp		1316041	0					
ANR	1316128	Identifier	tmp		1316041	0					
ANR	1316129	Argument	pce -> name		1316041	1					
ANR	1316130	PtrMemberAccess	pce -> name		1316041	0					
ANR	1316131	Identifier	pce		1316041	0					
ANR	1316132	Identifier	name		1316041	1					
ANR	1316133	Argument	pce -> name_length		1316041	2					
ANR	1316134	PtrMemberAccess	pce -> name_length		1316041	0					
ANR	1316135	Identifier	pce		1316041	0					
ANR	1316136	Identifier	name_length		1316041	1					
ANR	1316137	Argument	1		1316041	3					
ANR	1316138	PrimaryExpression	1		1316041	0					
ANR	1316139	ExpressionStatement	"zend_hash_add ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , & tmp , sizeof ( zval * ) , NULL )"	89:3:3322:3399	1316041	2	True				
ANR	1316140	CallExpression	"zend_hash_add ( Z_ARRVAL_P ( list ) , pce -> name , len + 1 , & tmp , sizeof ( zval * ) , NULL )"		1316041	0					
ANR	1316141	Callee	zend_hash_add		1316041	0					
ANR	1316142	Identifier	zend_hash_add		1316041	0					
ANR	1316143	ArgumentList	Z_ARRVAL_P ( list )		1316041	1					
ANR	1316144	Argument	Z_ARRVAL_P ( list )		1316041	0					
ANR	1316145	CallExpression	Z_ARRVAL_P ( list )		1316041	0					
ANR	1316146	Callee	Z_ARRVAL_P		1316041	0					
ANR	1316147	Identifier	Z_ARRVAL_P		1316041	0					
ANR	1316148	ArgumentList	list		1316041	1					
ANR	1316149	Argument	list		1316041	0					
ANR	1316150	Identifier	list		1316041	0					
ANR	1316151	Argument	pce -> name		1316041	1					
ANR	1316152	PtrMemberAccess	pce -> name		1316041	0					
ANR	1316153	Identifier	pce		1316041	0					
ANR	1316154	Identifier	name		1316041	1					
ANR	1316155	Argument	len + 1		1316041	2					
ANR	1316156	AdditiveExpression	len + 1		1316041	0		+			
ANR	1316157	Identifier	len		1316041	0					
ANR	1316158	PrimaryExpression	1		1316041	1					
ANR	1316159	Argument	& tmp		1316041	3					
ANR	1316160	UnaryOperationExpression	& tmp		1316041	0					
ANR	1316161	UnaryOperator	&		1316041	0					
ANR	1316162	Identifier	tmp		1316041	1					
ANR	1316163	Argument	sizeof ( zval * )		1316041	4					
ANR	1316164	SizeofExpression	sizeof ( zval * )		1316041	0					
ANR	1316165	Sizeof	sizeof		1316041	0					
ANR	1316166	SizeofOperand	zval *		1316041	1					
ANR	1316167	Argument	NULL		1316041	5					
ANR	1316168	Identifier	NULL		1316041	0					
ANR	1316169	ReturnType	void		1316041	1					
ANR	1316170	Identifier	spl_add_class_name		1316041	2					
ANR	1316171	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC"		1316041	3					
ANR	1316172	Parameter	zval * list	80:24:2934:2943	1316041	0	True				
ANR	1316173	ParameterType	zval *		1316041	0					
ANR	1316174	Identifier	list		1316041	1					
ANR	1316175	Parameter	zend_class_entry * pce	80:36:2946:2967	1316041	1	True				
ANR	1316176	ParameterType	zend_class_entry *		1316041	0					
ANR	1316177	Identifier	pce		1316041	1					
ANR	1316178	Parameter	int allow	80:60:2970:2978	1316041	2	True				
ANR	1316179	ParameterType	int		1316041	0					
ANR	1316180	Identifier	allow		1316041	1					
ANR	1316181	Parameter	int ce_flags TSRMLS_DC	80:71:2981:3002	1316041	3	True				
ANR	1316182	ParameterType	int ce_flags		1316041	0					
ANR	1316183	Identifier	TSRMLS_DC		1316041	1					
ANR	1316184	CFGEntryNode	ENTRY		1316041		True				
ANR	1316185	CFGExitNode	EXIT		1316041		True				
ANR	1316186	Symbol	allow		1316041						
ANR	1316187	Symbol	pce -> ce_flags		1316041						
ANR	1316188	Symbol	pce -> name_length		1316041						
ANR	1316189	Symbol	NULL		1316041						
ANR	1316190	Symbol	list		1316041						
ANR	1316191	Symbol	TSRMLS_DC		1316041						
ANR	1316192	Symbol	FAILURE		1316041						
ANR	1316193	Symbol	zend_hash_find		1316041						
ANR	1316194	Symbol	pce		1316041						
ANR	1316195	Symbol	len		1316041						
ANR	1316196	Symbol	tmp		1316041						
ANR	1316197	Symbol	pce -> name		1316041						
ANR	1316198	Symbol	& tmp		1316041						
ANR	1316199	Symbol	ce_flags		1316041						
ANR	1316200	Symbol	* pce		1316041						
ANR	1316201	Symbol	Z_ARRVAL_P		1316041						
ANR	1316202	Function	spl_add_interfaces	96:0:3450:3750							
ANR	1316203	FunctionDef	"spl_add_interfaces (zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC)"		1316202	0					
ANR	1316204	CompoundStatement		97:0:3545:3750	1316202	0					
ANR	1316205	IdentifierDeclStatement	zend_uint num_interfaces ;	98:1:3548:3572	1316202	0	True				
ANR	1316206	IdentifierDecl	num_interfaces		1316202	0					
ANR	1316207	IdentifierDeclType	zend_uint		1316202	0					
ANR	1316208	Identifier	num_interfaces		1316202	1					
ANR	1316209	ForStatement	for ( num_interfaces = 0 ; num_interfaces < pce -> num_interfaces ; num_interfaces ++ )		1316202	1					
ANR	1316210	ForInit	num_interfaces = 0 ;	100:6:3581:3599	1316202	0	True				
ANR	1316211	AssignmentExpression	num_interfaces = 0		1316202	0		=			
ANR	1316212	Identifier	num_interfaces		1316202	0					
ANR	1316213	PrimaryExpression	0		1316202	1					
ANR	1316214	Condition	num_interfaces < pce -> num_interfaces	100:26:3601:3636	1316202	1	True				
ANR	1316215	RelationalExpression	num_interfaces < pce -> num_interfaces		1316202	0		<			
ANR	1316216	Identifier	num_interfaces		1316202	0					
ANR	1316217	PtrMemberAccess	pce -> num_interfaces		1316202	1					
ANR	1316218	Identifier	pce		1316202	0					
ANR	1316219	Identifier	num_interfaces		1316202	1					
ANR	1316220	PostIncDecOperationExpression	num_interfaces ++	100:64:3639:3654	1316202	2	True				
ANR	1316221	Identifier	num_interfaces		1316202	0					
ANR	1316222	IncDec	++		1316202	1					
ANR	1316223	CompoundStatement		4:82:111:111	1316202	3					
ANR	1316224	Statement	spl_add_class_name	101:2:3661:3678	1316202	0	True				
ANR	1316225	Statement	(	101:20:3679:3679	1316202	1	True				
ANR	1316226	Statement	list	101:21:3680:3683	1316202	2	True				
ANR	1316227	Statement	","	101:25:3684:3684	1316202	3	True				
ANR	1316228	Statement	pce	101:27:3686:3688	1316202	4	True				
ANR	1316229	Statement	->	101:30:3689:3690	1316202	5	True				
ANR	1316230	Statement	interfaces	101:32:3691:3700	1316202	6	True				
ANR	1316231	Statement	[	101:42:3701:3701	1316202	7	True				
ANR	1316232	Statement	num_interfaces	101:43:3702:3715	1316202	8	True				
ANR	1316233	Statement	]	101:57:3716:3716	1316202	9	True				
ANR	1316234	Statement	","	101:58:3717:3717	1316202	10	True				
ANR	1316235	Statement	allow	101:60:3719:3723	1316202	11	True				
ANR	1316236	Statement	","	101:65:3724:3724	1316202	12	True				
ANR	1316237	Statement	ce_flags	101:67:3726:3733	1316202	13	True				
ANR	1316238	Statement	TSRMLS_CC	101:76:3735:3743	1316202	14	True				
ANR	1316239	Statement	)	101:85:3744:3744	1316202	15	True				
ANR	1316240	ExpressionStatement		101:86:3745:3745	1316202	16	True				
ANR	1316241	ReturnType	void		1316202	1					
ANR	1316242	Identifier	spl_add_interfaces		1316202	2					
ANR	1316243	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC"		1316202	3					
ANR	1316244	Parameter	zval * list	96:24:3474:3483	1316202	0	True				
ANR	1316245	ParameterType	zval *		1316202	0					
ANR	1316246	Identifier	list		1316202	1					
ANR	1316247	Parameter	zend_class_entry * pce	96:36:3486:3507	1316202	1	True				
ANR	1316248	ParameterType	zend_class_entry *		1316202	0					
ANR	1316249	Identifier	pce		1316202	1					
ANR	1316250	Parameter	int allow	96:60:3510:3518	1316202	2	True				
ANR	1316251	ParameterType	int		1316202	0					
ANR	1316252	Identifier	allow		1316202	1					
ANR	1316253	Parameter	int ce_flags TSRMLS_DC	96:71:3521:3542	1316202	3	True				
ANR	1316254	ParameterType	int ce_flags		1316202	0					
ANR	1316255	Identifier	TSRMLS_DC		1316202	1					
ANR	1316256	CFGEntryNode	ENTRY		1316202		True				
ANR	1316257	CFGExitNode	EXIT		1316202		True				
ANR	1316258	Symbol	allow		1316202						
ANR	1316259	Symbol	pce		1316202						
ANR	1316260	Symbol	num_interfaces		1316202						
ANR	1316261	Symbol	list		1316202						
ANR	1316262	Symbol	* pce		1316202						
ANR	1316263	Symbol	TSRMLS_DC		1316202						
ANR	1316264	Symbol	pce -> num_interfaces		1316202						
ANR	1316265	Function	spl_add_traits	107:0:3788:4058							
ANR	1316266	FunctionDef	"spl_add_traits (zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC)"		1316265	0					
ANR	1316267	CompoundStatement		108:0:3879:4058	1316265	0					
ANR	1316268	IdentifierDeclStatement	zend_uint num_traits ;	109:1:3882:3902	1316265	0	True				
ANR	1316269	IdentifierDecl	num_traits		1316265	0					
ANR	1316270	IdentifierDeclType	zend_uint		1316265	0					
ANR	1316271	Identifier	num_traits		1316265	1					
ANR	1316272	ForStatement	for ( num_traits = 0 ; num_traits < pce -> num_traits ; num_traits ++ )		1316265	1					
ANR	1316273	ForInit	num_traits = 0 ;	111:6:3913:3927	1316265	0	True				
ANR	1316274	AssignmentExpression	num_traits = 0		1316265	0		=			
ANR	1316275	Identifier	num_traits		1316265	0					
ANR	1316276	PrimaryExpression	0		1316265	1					
ANR	1316277	Condition	num_traits < pce -> num_traits	111:22:3929:3956	1316265	1	True				
ANR	1316278	RelationalExpression	num_traits < pce -> num_traits		1316265	0		<			
ANR	1316279	Identifier	num_traits		1316265	0					
ANR	1316280	PtrMemberAccess	pce -> num_traits		1316265	1					
ANR	1316281	Identifier	pce		1316265	0					
ANR	1316282	Identifier	num_traits		1316265	1					
ANR	1316283	PostIncDecOperationExpression	num_traits ++	111:52:3959:3970	1316265	2	True				
ANR	1316284	Identifier	num_traits		1316265	0					
ANR	1316285	IncDec	++		1316265	1					
ANR	1316286	CompoundStatement		4:66:93:93	1316265	3					
ANR	1316287	Statement	spl_add_class_name	112:2:3977:3994	1316265	0	True				
ANR	1316288	Statement	(	112:20:3995:3995	1316265	1	True				
ANR	1316289	Statement	list	112:21:3996:3999	1316265	2	True				
ANR	1316290	Statement	","	112:25:4000:4000	1316265	3	True				
ANR	1316291	Statement	pce	112:27:4002:4004	1316265	4	True				
ANR	1316292	Statement	->	112:30:4005:4006	1316265	5	True				
ANR	1316293	Statement	traits	112:32:4007:4012	1316265	6	True				
ANR	1316294	Statement	[	112:38:4013:4013	1316265	7	True				
ANR	1316295	Statement	num_traits	112:39:4014:4023	1316265	8	True				
ANR	1316296	Statement	]	112:49:4024:4024	1316265	9	True				
ANR	1316297	Statement	","	112:50:4025:4025	1316265	10	True				
ANR	1316298	Statement	allow	112:52:4027:4031	1316265	11	True				
ANR	1316299	Statement	","	112:57:4032:4032	1316265	12	True				
ANR	1316300	Statement	ce_flags	112:59:4034:4041	1316265	13	True				
ANR	1316301	Statement	TSRMLS_CC	112:68:4043:4051	1316265	14	True				
ANR	1316302	Statement	)	112:77:4052:4052	1316265	15	True				
ANR	1316303	ExpressionStatement		112:78:4053:4053	1316265	16	True				
ANR	1316304	ReturnType	void		1316265	1					
ANR	1316305	Identifier	spl_add_traits		1316265	2					
ANR	1316306	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags TSRMLS_DC"		1316265	3					
ANR	1316307	Parameter	zval * list	107:20:3808:3817	1316265	0	True				
ANR	1316308	ParameterType	zval *		1316265	0					
ANR	1316309	Identifier	list		1316265	1					
ANR	1316310	Parameter	zend_class_entry * pce	107:32:3820:3841	1316265	1	True				
ANR	1316311	ParameterType	zend_class_entry *		1316265	0					
ANR	1316312	Identifier	pce		1316265	1					
ANR	1316313	Parameter	int allow	107:56:3844:3852	1316265	2	True				
ANR	1316314	ParameterType	int		1316265	0					
ANR	1316315	Identifier	allow		1316265	1					
ANR	1316316	Parameter	int ce_flags TSRMLS_DC	107:67:3855:3876	1316265	3	True				
ANR	1316317	ParameterType	int ce_flags		1316265	0					
ANR	1316318	Identifier	TSRMLS_DC		1316265	1					
ANR	1316319	CFGEntryNode	ENTRY		1316265		True				
ANR	1316320	CFGExitNode	EXIT		1316265		True				
ANR	1316321	Symbol	allow		1316265						
ANR	1316322	Symbol	pce		1316265						
ANR	1316323	Symbol	num_traits		1316265						
ANR	1316324	Symbol	pce -> num_traits		1316265						
ANR	1316325	Symbol	list		1316265						
ANR	1316326	Symbol	* pce		1316265						
ANR	1316327	Symbol	TSRMLS_DC		1316265						
ANR	1316328	Function	spl_add_classes	119:0:4098:4485							
ANR	1316329	FunctionDef	"spl_add_classes (zend_class_entry * pce , zval * list , int sub , int allow , int ce_flags TSRMLS_DC)"		1316328	0					
ANR	1316330	CompoundStatement		120:0:4197:4485	1316328	0					
ANR	1316331	IfStatement	if ( ! pce )		1316328	0					
ANR	1316332	Condition	! pce	121:5:4204:4207	1316328	0	True				
ANR	1316333	UnaryOperationExpression	! pce		1316328	0					
ANR	1316334	UnaryOperator	!		1316328	0					
ANR	1316335	Identifier	pce		1316328	1					
ANR	1316336	CompoundStatement		2:11:12:12	1316328	1					
ANR	1316337	ReturnStatement	return 0 ;	122:2:4214:4222	1316328	0	True				
ANR	1316338	PrimaryExpression	0		1316328	0					
ANR	1316339	Statement	spl_add_class_name	124:1:4228:4245	1316328	1	True				
ANR	1316340	Statement	(	124:19:4246:4246	1316328	2	True				
ANR	1316341	Statement	list	124:20:4247:4250	1316328	3	True				
ANR	1316342	Statement	","	124:24:4251:4251	1316328	4	True				
ANR	1316343	Statement	pce	124:26:4253:4255	1316328	5	True				
ANR	1316344	Statement	","	124:29:4256:4256	1316328	6	True				
ANR	1316345	Statement	allow	124:31:4258:4262	1316328	7	True				
ANR	1316346	Statement	","	124:36:4263:4263	1316328	8	True				
ANR	1316347	Statement	ce_flags	124:38:4265:4272	1316328	9	True				
ANR	1316348	Statement	TSRMLS_CC	124:47:4274:4282	1316328	10	True				
ANR	1316349	Statement	)	124:56:4283:4283	1316328	11	True				
ANR	1316350	ExpressionStatement		124:57:4284:4284	1316328	12	True				
ANR	1316351	IfStatement	if ( sub )		1316328	13					
ANR	1316352	Condition	sub	125:5:4291:4293	1316328	0	True				
ANR	1316353	Identifier	sub		1316328	0					
ANR	1316354	CompoundStatement		6:10:98:98	1316328	1					
ANR	1316355	Statement	spl_add_interfaces	126:2:4300:4317	1316328	0	True				
ANR	1316356	Statement	(	126:20:4318:4318	1316328	1	True				
ANR	1316357	Statement	list	126:21:4319:4322	1316328	2	True				
ANR	1316358	Statement	","	126:25:4323:4323	1316328	3	True				
ANR	1316359	Statement	pce	126:27:4325:4327	1316328	4	True				
ANR	1316360	Statement	","	126:30:4328:4328	1316328	5	True				
ANR	1316361	Statement	allow	126:32:4330:4334	1316328	6	True				
ANR	1316362	Statement	","	126:37:4335:4335	1316328	7	True				
ANR	1316363	Statement	ce_flags	126:39:4337:4344	1316328	8	True				
ANR	1316364	Statement	TSRMLS_CC	126:48:4346:4354	1316328	9	True				
ANR	1316365	Statement	)	126:57:4355:4355	1316328	10	True				
ANR	1316366	ExpressionStatement		126:58:4356:4356	1316328	11	True				
ANR	1316367	WhileStatement	while ( pce -> parent )		1316328	12					
ANR	1316368	Condition	pce -> parent	127:9:4367:4377	1316328	0	True				
ANR	1316369	PtrMemberAccess	pce -> parent		1316328	0					
ANR	1316370	Identifier	pce		1316328	0					
ANR	1316371	Identifier	parent		1316328	1					
ANR	1316372	CompoundStatement		8:22:182:182	1316328	1					
ANR	1316373	ExpressionStatement	pce = pce -> parent	128:3:4385:4402	1316328	0	True				
ANR	1316374	AssignmentExpression	pce = pce -> parent		1316328	0		=			
ANR	1316375	Identifier	pce		1316328	0					
ANR	1316376	PtrMemberAccess	pce -> parent		1316328	1					
ANR	1316377	Identifier	pce		1316328	0					
ANR	1316378	Identifier	parent		1316328	1					
ANR	1316379	Statement	spl_add_classes	129:3:4407:4421	1316328	1	True				
ANR	1316380	Statement	(	129:18:4422:4422	1316328	2	True				
ANR	1316381	Statement	pce	129:19:4423:4425	1316328	3	True				
ANR	1316382	Statement	","	129:22:4426:4426	1316328	4	True				
ANR	1316383	Statement	list	129:24:4428:4431	1316328	5	True				
ANR	1316384	Statement	","	129:28:4432:4432	1316328	6	True				
ANR	1316385	Statement	sub	129:30:4434:4436	1316328	7	True				
ANR	1316386	Statement	","	129:33:4437:4437	1316328	8	True				
ANR	1316387	Statement	allow	129:35:4439:4443	1316328	9	True				
ANR	1316388	Statement	","	129:40:4444:4444	1316328	10	True				
ANR	1316389	Statement	ce_flags	129:42:4446:4453	1316328	11	True				
ANR	1316390	Statement	TSRMLS_CC	129:51:4455:4463	1316328	12	True				
ANR	1316391	Statement	)	129:60:4464:4464	1316328	13	True				
ANR	1316392	ExpressionStatement		129:61:4465:4465	1316328	14	True				
ANR	1316393	ReturnStatement	return 0 ;	132:1:4475:4483	1316328	14	True				
ANR	1316394	PrimaryExpression	0		1316328	0					
ANR	1316395	ReturnType	int		1316328	1					
ANR	1316396	Identifier	spl_add_classes		1316328	2					
ANR	1316397	ParameterList	"zend_class_entry * pce , zval * list , int sub , int allow , int ce_flags TSRMLS_DC"		1316328	3					
ANR	1316398	Parameter	zend_class_entry * pce	119:20:4118:4138	1316328	0	True				
ANR	1316399	ParameterType	zend_class_entry *		1316328	0					
ANR	1316400	Identifier	pce		1316328	1					
ANR	1316401	Parameter	zval * list	119:43:4141:4150	1316328	1	True				
ANR	1316402	ParameterType	zval *		1316328	0					
ANR	1316403	Identifier	list		1316328	1					
ANR	1316404	Parameter	int sub	119:55:4153:4159	1316328	2	True				
ANR	1316405	ParameterType	int		1316328	0					
ANR	1316406	Identifier	sub		1316328	1					
ANR	1316407	Parameter	int allow	119:64:4162:4170	1316328	3	True				
ANR	1316408	ParameterType	int		1316328	0					
ANR	1316409	Identifier	allow		1316328	1					
ANR	1316410	Parameter	int ce_flags TSRMLS_DC	119:75:4173:4194	1316328	4	True				
ANR	1316411	ParameterType	int ce_flags		1316328	0					
ANR	1316412	Identifier	TSRMLS_DC		1316328	1					
ANR	1316413	CFGEntryNode	ENTRY		1316328		True				
ANR	1316414	CFGExitNode	EXIT		1316328		True				
ANR	1316415	Symbol	allow		1316328						
ANR	1316416	Symbol	sub		1316328						
ANR	1316417	Symbol	pce		1316328						
ANR	1316418	Symbol	pce -> parent		1316328						
ANR	1316419	Symbol	list		1316328						
ANR	1316420	Symbol	* pce		1316328						
ANR	1316421	Symbol	TSRMLS_DC		1316328						
ANR	1316422	DeclStmt									
ANR	1316423	Decl							char	char *	rv
