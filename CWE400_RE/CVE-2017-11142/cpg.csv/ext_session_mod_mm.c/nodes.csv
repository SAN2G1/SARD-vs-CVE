command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1211987	File	data/converged/CVE-2017-11142_php-src/ext_session_mod_mm.c								
ANR	1211988	ClassDef	ps_sd	47:8:1596:1872							
ANR	1211989	DeclStmt									
ANR	1211990	Decl							struct ps_sd	struct ps_sd *	next
ANR	1211991	DeclStmt									
ANR	1211992	Decl							php_uint32	php_uint32	hv
ANR	1211993	DeclStmt									
ANR	1211994	Decl							time_t	time_t	ctime
ANR	1211995	DeclStmt									
ANR	1211996	Decl							void	void *	data
ANR	1211997	DeclStmt									
ANR	1211998	Decl							size_t	size_t	datalen
ANR	1211999	DeclStmt									
ANR	1212000	Decl							size_t	size_t	alloclen
ANR	1212001	DeclStmt									
ANR	1212002	Decl							char	char [ 1 ]	key
ANR	1212003	DeclStmt									
ANR	1212004	Decl							ps_sd	ps_sd	ps_sd
ANR	1212005	ClassDef	<unnamed>	57:8:1883:1981							
ANR	1212006	DeclStmt									
ANR	1212007	Decl							MM	MM *	mm
ANR	1212008	DeclStmt									
ANR	1212009	Decl							ps_sd	ps_sd * *	hash
ANR	1212010	DeclStmt									
ANR	1212011	Decl							php_uint32	php_uint32	hash_max
ANR	1212012	DeclStmt									
ANR	1212013	Decl							php_uint32	php_uint32	hash_cnt
ANR	1212014	DeclStmt									
ANR	1212015	Decl							pid_t	pid_t	owner
ANR	1212016	DeclStmt									
ANR	1212017	Decl									ps_mm
ANR	1212018	DeclStmt									
ANR	1212019	Decl							ps_mm	ps_mm *	ps_mm_instance
ANR	1212020	Function	ps_sd_hash	73:0:2099:2294							
ANR	1212021	FunctionDef	"ps_sd_hash (const char * data , int len)"		1212020	0					
ANR	1212022	CompoundStatement		74:0:2162:2294	1212020	0					
ANR	1212023	IdentifierDeclStatement	php_uint32 h ;	75:1:2165:2177	1212020	0	True				
ANR	1212024	IdentifierDecl	h		1212020	0					
ANR	1212025	IdentifierDeclType	php_uint32		1212020	0					
ANR	1212026	Identifier	h		1212020	1					
ANR	1212027	IdentifierDeclStatement	const char * e = data + len ;	76:1:2180:2206	1212020	1	True				
ANR	1212028	IdentifierDecl	* e = data + len		1212020	0					
ANR	1212029	IdentifierDeclType	const char *		1212020	0					
ANR	1212030	Identifier	e		1212020	1					
ANR	1212031	AssignmentExpression	* e = data + len		1212020	2		=			
ANR	1212032	Identifier	e		1212020	0					
ANR	1212033	AdditiveExpression	data + len		1212020	1		+			
ANR	1212034	Identifier	data		1212020	0					
ANR	1212035	Identifier	len		1212020	1					
ANR	1212036	ForStatement	for ( h = 2166136261U ; data < e ; )		1212020	2					
ANR	1212037	ForInit	h = 2166136261U ;	78:6:2215:2230	1212020	0	True				
ANR	1212038	AssignmentExpression	h = 2166136261U		1212020	0		=			
ANR	1212039	Identifier	h		1212020	0					
ANR	1212040	PrimaryExpression	2166136261U		1212020	1					
ANR	1212041	Condition	data < e	78:23:2232:2239	1212020	1	True				
ANR	1212042	RelationalExpression	data < e		1212020	0		<			
ANR	1212043	Identifier	data		1212020	0					
ANR	1212044	Identifier	e		1212020	1					
ANR	1212045	CompoundStatement		5:35:81:81	1212020	2					
ANR	1212046	ExpressionStatement	h *= 16777619	79:2:2248:2261	1212020	0	True				
ANR	1212047	AssignmentExpression	h *= 16777619		1212020	0		*=			
ANR	1212048	Identifier	h		1212020	0					
ANR	1212049	PrimaryExpression	16777619		1212020	1					
ANR	1212050	ExpressionStatement	h ^= * data ++	80:2:2265:2277	1212020	1	True				
ANR	1212051	AssignmentExpression	h ^= * data ++		1212020	0		^=			
ANR	1212052	Identifier	h		1212020	0					
ANR	1212053	UnaryOperationExpression	* data ++		1212020	1					
ANR	1212054	UnaryOperator	*		1212020	0					
ANR	1212055	PostIncDecOperationExpression	data ++		1212020	1					
ANR	1212056	Identifier	data		1212020	0					
ANR	1212057	IncDec	++		1212020	1					
ANR	1212058	ReturnStatement	return h ;	83:1:2284:2292	1212020	3	True				
ANR	1212059	Identifier	h		1212020	0					
ANR	1212060	ReturnType	static inline php_uint32		1212020	1					
ANR	1212061	Identifier	ps_sd_hash		1212020	2					
ANR	1212062	ParameterList	"const char * data , int len"		1212020	3					
ANR	1212063	Parameter	const char * data	73:36:2135:2150	1212020	0	True				
ANR	1212064	ParameterType	const char *		1212020	0					
ANR	1212065	Identifier	data		1212020	1					
ANR	1212066	Parameter	int len	73:54:2153:2159	1212020	1	True				
ANR	1212067	ParameterType	int		1212020	0					
ANR	1212068	Identifier	len		1212020	1					
ANR	1212069	CFGEntryNode	ENTRY		1212020		True				
ANR	1212070	CFGExitNode	EXIT		1212020		True				
ANR	1212071	Symbol	data		1212020						
ANR	1212072	Symbol	len		1212020						
ANR	1212073	Symbol	* data ++		1212020						
ANR	1212074	Symbol	e		1212020						
ANR	1212075	Symbol	h		1212020						
ANR	1212076	Function	hash_split	86:0:2297:2895							
ANR	1212077	FunctionDef	hash_split (ps_mm * data)		1212076	0					
ANR	1212078	CompoundStatement		87:0:2333:2895	1212076	0					
ANR	1212079	IdentifierDeclStatement	php_uint32 nmax ;	88:1:2336:2351	1212076	0	True				
ANR	1212080	IdentifierDecl	nmax		1212076	0					
ANR	1212081	IdentifierDeclType	php_uint32		1212076	0					
ANR	1212082	Identifier	nmax		1212076	1					
ANR	1212083	IdentifierDeclStatement	ps_sd * * nhash ;	89:1:2354:2367	1212076	1	True				
ANR	1212084	IdentifierDecl	* * nhash		1212076	0					
ANR	1212085	IdentifierDeclType	ps_sd * *		1212076	0					
ANR	1212086	Identifier	nhash		1212076	1					
ANR	1212087	IdentifierDeclStatement	"ps_sd * * ohash , * * ehash ;"	90:1:2370:2392	1212076	2	True				
ANR	1212088	IdentifierDecl	* * ohash		1212076	0					
ANR	1212089	IdentifierDeclType	ps_sd * *		1212076	0					
ANR	1212090	Identifier	ohash		1212076	1					
ANR	1212091	IdentifierDecl	* * ehash		1212076	1					
ANR	1212092	IdentifierDeclType	ps_sd * *		1212076	0					
ANR	1212093	Identifier	ehash		1212076	1					
ANR	1212094	IdentifierDeclStatement	"ps_sd * ps , * next ;"	91:1:2395:2411	1212076	3	True				
ANR	1212095	IdentifierDecl	* ps		1212076	0					
ANR	1212096	IdentifierDeclType	ps_sd *		1212076	0					
ANR	1212097	Identifier	ps		1212076	1					
ANR	1212098	IdentifierDecl	* next		1212076	1					
ANR	1212099	IdentifierDeclType	ps_sd *		1212076	0					
ANR	1212100	Identifier	next		1212076	1					
ANR	1212101	ExpressionStatement	nmax = ( ( data -> hash_max + 1 ) << 1 ) - 1	93:1:2415:2453	1212076	4	True				
ANR	1212102	AssignmentExpression	nmax = ( ( data -> hash_max + 1 ) << 1 ) - 1		1212076	0		=			
ANR	1212103	Identifier	nmax		1212076	0					
ANR	1212104	AdditiveExpression	( ( data -> hash_max + 1 ) << 1 ) - 1		1212076	1		-			
ANR	1212105	ShiftExpression	( data -> hash_max + 1 ) << 1		1212076	0		<<			
ANR	1212106	AdditiveExpression	data -> hash_max + 1		1212076	0		+			
ANR	1212107	PtrMemberAccess	data -> hash_max		1212076	0					
ANR	1212108	Identifier	data		1212076	0					
ANR	1212109	Identifier	hash_max		1212076	1					
ANR	1212110	PrimaryExpression	1		1212076	1					
ANR	1212111	PrimaryExpression	1		1212076	1					
ANR	1212112	PrimaryExpression	1		1212076	1					
ANR	1212113	ExpressionStatement	"nhash = mm_calloc ( data -> mm , nmax + 1 , sizeof ( * data -> hash ) )"	94:1:2456:2514	1212076	5	True				
ANR	1212114	AssignmentExpression	"nhash = mm_calloc ( data -> mm , nmax + 1 , sizeof ( * data -> hash ) )"		1212076	0		=			
ANR	1212115	Identifier	nhash		1212076	0					
ANR	1212116	CallExpression	"mm_calloc ( data -> mm , nmax + 1 , sizeof ( * data -> hash ) )"		1212076	1					
ANR	1212117	Callee	mm_calloc		1212076	0					
ANR	1212118	Identifier	mm_calloc		1212076	0					
ANR	1212119	ArgumentList	data -> mm		1212076	1					
ANR	1212120	Argument	data -> mm		1212076	0					
ANR	1212121	PtrMemberAccess	data -> mm		1212076	0					
ANR	1212122	Identifier	data		1212076	0					
ANR	1212123	Identifier	mm		1212076	1					
ANR	1212124	Argument	nmax + 1		1212076	1					
ANR	1212125	AdditiveExpression	nmax + 1		1212076	0		+			
ANR	1212126	Identifier	nmax		1212076	0					
ANR	1212127	PrimaryExpression	1		1212076	1					
ANR	1212128	Argument	sizeof ( * data -> hash )		1212076	2					
ANR	1212129	SizeofExpression	sizeof ( * data -> hash )		1212076	0					
ANR	1212130	Sizeof	sizeof		1212076	0					
ANR	1212131	UnaryOperationExpression	* data -> hash		1212076	1					
ANR	1212132	UnaryOperator	*		1212076	0					
ANR	1212133	PtrMemberAccess	data -> hash		1212076	1					
ANR	1212134	Identifier	data		1212076	0					
ANR	1212135	Identifier	hash		1212076	1					
ANR	1212136	IfStatement	if ( ! nhash )		1212076	6					
ANR	1212137	Condition	! nhash	96:5:2522:2527	1212076	0	True				
ANR	1212138	UnaryOperationExpression	! nhash		1212076	0					
ANR	1212139	UnaryOperator	!		1212076	0					
ANR	1212140	Identifier	nhash		1212076	1					
ANR	1212141	CompoundStatement		10:13:196:196	1212076	1					
ANR	1212142	ReturnStatement	return ;	98:2:2581:2587	1212076	0	True				
ANR	1212143	ExpressionStatement	ehash = data -> hash + data -> hash_max + 1	101:1:2594:2633	1212076	7	True				
ANR	1212144	AssignmentExpression	ehash = data -> hash + data -> hash_max + 1		1212076	0		=			
ANR	1212145	Identifier	ehash		1212076	0					
ANR	1212146	AdditiveExpression	data -> hash + data -> hash_max + 1		1212076	1		+			
ANR	1212147	PtrMemberAccess	data -> hash		1212076	0					
ANR	1212148	Identifier	data		1212076	0					
ANR	1212149	Identifier	hash		1212076	1					
ANR	1212150	AdditiveExpression	data -> hash_max + 1		1212076	1		+			
ANR	1212151	PtrMemberAccess	data -> hash_max		1212076	0					
ANR	1212152	Identifier	data		1212076	0					
ANR	1212153	Identifier	hash_max		1212076	1					
ANR	1212154	PrimaryExpression	1		1212076	1					
ANR	1212155	ForStatement	for ( ohash = data -> hash ; ohash < ehash ; ohash ++ )		1212076	8					
ANR	1212156	ForInit	ohash = data -> hash ;	102:6:2641:2659	1212076	0	True				
ANR	1212157	AssignmentExpression	ohash = data -> hash		1212076	0		=			
ANR	1212158	Identifier	ohash		1212076	0					
ANR	1212159	PtrMemberAccess	data -> hash		1212076	1					
ANR	1212160	Identifier	data		1212076	0					
ANR	1212161	Identifier	hash		1212076	1					
ANR	1212162	Condition	ohash < ehash	102:26:2661:2673	1212076	1	True				
ANR	1212163	RelationalExpression	ohash < ehash		1212076	0		<			
ANR	1212164	Identifier	ohash		1212076	0					
ANR	1212165	Identifier	ehash		1212076	1					
ANR	1212166	PostIncDecOperationExpression	ohash ++	102:41:2676:2682	1212076	2	True				
ANR	1212167	Identifier	ohash		1212076	0					
ANR	1212168	IncDec	++		1212076	1					
ANR	1212169	CompoundStatement		16:50:351:351	1212076	3					
ANR	1212170	ForStatement	for ( ps = * ohash ; ps ; ps = next )		1212076	0					
ANR	1212171	ForInit	ps = * ohash ;	103:7:2694:2705	1212076	0	True				
ANR	1212172	AssignmentExpression	ps = * ohash		1212076	0		=			
ANR	1212173	Identifier	ps		1212076	0					
ANR	1212174	UnaryOperationExpression	* ohash		1212076	1					
ANR	1212175	UnaryOperator	*		1212076	0					
ANR	1212176	Identifier	ohash		1212076	1					
ANR	1212177	Condition	ps	103:20:2707:2708	1212076	1	True				
ANR	1212178	Identifier	ps		1212076	0					
ANR	1212179	AssignmentExpression	ps = next	103:24:2711:2719	1212076	2	True	=			
ANR	1212180	Identifier	ps		1212076	0					
ANR	1212181	Identifier	next		1212076	1					
ANR	1212182	CompoundStatement		17:35:388:388	1212076	3					
ANR	1212183	ExpressionStatement	next = ps -> next	104:3:2727:2742	1212076	0	True				
ANR	1212184	AssignmentExpression	next = ps -> next		1212076	0		=			
ANR	1212185	Identifier	next		1212076	0					
ANR	1212186	PtrMemberAccess	ps -> next		1212076	1					
ANR	1212187	Identifier	ps		1212076	0					
ANR	1212188	Identifier	next		1212076	1					
ANR	1212189	ExpressionStatement	ps -> next = nhash [ ps -> hv & nmax ]	105:3:2747:2778	1212076	1	True				
ANR	1212190	AssignmentExpression	ps -> next = nhash [ ps -> hv & nmax ]		1212076	0		=			
ANR	1212191	PtrMemberAccess	ps -> next		1212076	0					
ANR	1212192	Identifier	ps		1212076	0					
ANR	1212193	Identifier	next		1212076	1					
ANR	1212194	ArrayIndexing	nhash [ ps -> hv & nmax ]		1212076	1					
ANR	1212195	Identifier	nhash		1212076	0					
ANR	1212196	BitAndExpression	ps -> hv & nmax		1212076	1		&			
ANR	1212197	PtrMemberAccess	ps -> hv		1212076	0					
ANR	1212198	Identifier	ps		1212076	0					
ANR	1212199	Identifier	hv		1212076	1					
ANR	1212200	Identifier	nmax		1212076	1					
ANR	1212201	ExpressionStatement	nhash [ ps -> hv & nmax ] = ps	106:3:2783:2808	1212076	2	True				
ANR	1212202	AssignmentExpression	nhash [ ps -> hv & nmax ] = ps		1212076	0		=			
ANR	1212203	ArrayIndexing	nhash [ ps -> hv & nmax ]		1212076	0					
ANR	1212204	Identifier	nhash		1212076	0					
ANR	1212205	BitAndExpression	ps -> hv & nmax		1212076	1		&			
ANR	1212206	PtrMemberAccess	ps -> hv		1212076	0					
ANR	1212207	Identifier	ps		1212076	0					
ANR	1212208	Identifier	hv		1212076	1					
ANR	1212209	Identifier	nmax		1212076	1					
ANR	1212210	Identifier	ps		1212076	1					
ANR	1212211	ExpressionStatement	"mm_free ( data -> mm , data -> hash )"	109:1:2818:2847	1212076	9	True				
ANR	1212212	CallExpression	"mm_free ( data -> mm , data -> hash )"		1212076	0					
ANR	1212213	Callee	mm_free		1212076	0					
ANR	1212214	Identifier	mm_free		1212076	0					
ANR	1212215	ArgumentList	data -> mm		1212076	1					
ANR	1212216	Argument	data -> mm		1212076	0					
ANR	1212217	PtrMemberAccess	data -> mm		1212076	0					
ANR	1212218	Identifier	data		1212076	0					
ANR	1212219	Identifier	mm		1212076	1					
ANR	1212220	Argument	data -> hash		1212076	1					
ANR	1212221	PtrMemberAccess	data -> hash		1212076	0					
ANR	1212222	Identifier	data		1212076	0					
ANR	1212223	Identifier	hash		1212076	1					
ANR	1212224	ExpressionStatement	data -> hash = nhash	111:1:2851:2869	1212076	10	True				
ANR	1212225	AssignmentExpression	data -> hash = nhash		1212076	0		=			
ANR	1212226	PtrMemberAccess	data -> hash		1212076	0					
ANR	1212227	Identifier	data		1212076	0					
ANR	1212228	Identifier	hash		1212076	1					
ANR	1212229	Identifier	nhash		1212076	1					
ANR	1212230	ExpressionStatement	data -> hash_max = nmax	112:1:2872:2893	1212076	11	True				
ANR	1212231	AssignmentExpression	data -> hash_max = nmax		1212076	0		=			
ANR	1212232	PtrMemberAccess	data -> hash_max		1212076	0					
ANR	1212233	Identifier	data		1212076	0					
ANR	1212234	Identifier	hash_max		1212076	1					
ANR	1212235	Identifier	nmax		1212076	1					
ANR	1212236	ReturnType	static void		1212076	1					
ANR	1212237	Identifier	hash_split		1212076	2					
ANR	1212238	ParameterList	ps_mm * data		1212076	3					
ANR	1212239	Parameter	ps_mm * data	86:23:2320:2330	1212076	0	True				
ANR	1212240	ParameterType	ps_mm *		1212076	0					
ANR	1212241	Identifier	data		1212076	1					
ANR	1212242	CFGEntryNode	ENTRY		1212076		True				
ANR	1212243	CFGExitNode	EXIT		1212076		True				
ANR	1212244	Symbol	next		1212076						
ANR	1212245	Symbol	* * data		1212076						
ANR	1212246	Symbol	nhash		1212076						
ANR	1212247	Symbol	ps -> hv		1212076						
ANR	1212248	Symbol	ps		1212076						
ANR	1212249	Symbol	data		1212076						
ANR	1212250	Symbol	nmax		1212076						
ANR	1212251	Symbol	ps -> next		1212076						
ANR	1212252	Symbol	* ohash		1212076						
ANR	1212253	Symbol	* ps		1212076						
ANR	1212254	Symbol	* ps -> hv		1212076						
ANR	1212255	Symbol	data -> mm		1212076						
ANR	1212256	Symbol	* * ps		1212076						
ANR	1212257	Symbol	* nmax		1212076						
ANR	1212258	Symbol	data -> hash_max		1212076						
ANR	1212259	Symbol	ohash		1212076						
ANR	1212260	Symbol	ehash		1212076						
ANR	1212261	Symbol	data -> hash		1212076						
ANR	1212262	Symbol	* nhash		1212076						
ANR	1212263	Symbol	* data		1212076						
ANR	1212264	Symbol	mm_calloc		1212076						
ANR	1212265	Symbol	* data -> hash		1212076						
ANR	1212266	Function	ps_sd_new	115:0:2898:3671							
ANR	1212267	FunctionDef	"ps_sd_new (ps_mm * data , const char * key)"		1212266	0					
ANR	1212268	CompoundStatement		116:0:2952:3671	1212266	0					
ANR	1212269	IdentifierDeclStatement	"php_uint32 hv , slot ;"	117:1:2955:2974	1212266	0	True				
ANR	1212270	IdentifierDecl	hv		1212266	0					
ANR	1212271	IdentifierDeclType	php_uint32		1212266	0					
ANR	1212272	Identifier	hv		1212266	1					
ANR	1212273	IdentifierDecl	slot		1212266	1					
ANR	1212274	IdentifierDeclType	php_uint32		1212266	0					
ANR	1212275	Identifier	slot		1212266	1					
ANR	1212276	IdentifierDeclStatement	ps_sd * sd ;	118:1:2977:2986	1212266	1	True				
ANR	1212277	IdentifierDecl	* sd		1212266	0					
ANR	1212278	IdentifierDeclType	ps_sd *		1212266	0					
ANR	1212279	Identifier	sd		1212266	1					
ANR	1212280	IdentifierDeclStatement	int keylen ;	119:1:2989:2999	1212266	2	True				
ANR	1212281	IdentifierDecl	keylen		1212266	0					
ANR	1212282	IdentifierDeclType	int		1212266	0					
ANR	1212283	Identifier	keylen		1212266	1					
ANR	1212284	ExpressionStatement	keylen = strlen ( key )	121:1:3003:3023	1212266	3	True				
ANR	1212285	AssignmentExpression	keylen = strlen ( key )		1212266	0		=			
ANR	1212286	Identifier	keylen		1212266	0					
ANR	1212287	CallExpression	strlen ( key )		1212266	1					
ANR	1212288	Callee	strlen		1212266	0					
ANR	1212289	Identifier	strlen		1212266	0					
ANR	1212290	ArgumentList	key		1212266	1					
ANR	1212291	Argument	key		1212266	0					
ANR	1212292	Identifier	key		1212266	0					
ANR	1212293	ExpressionStatement	"sd = mm_malloc ( data -> mm , sizeof ( ps_sd ) + keylen )"	123:1:3027:3075	1212266	4	True				
ANR	1212294	AssignmentExpression	"sd = mm_malloc ( data -> mm , sizeof ( ps_sd ) + keylen )"		1212266	0		=			
ANR	1212295	Identifier	sd		1212266	0					
ANR	1212296	CallExpression	"mm_malloc ( data -> mm , sizeof ( ps_sd ) + keylen )"		1212266	1					
ANR	1212297	Callee	mm_malloc		1212266	0					
ANR	1212298	Identifier	mm_malloc		1212266	0					
ANR	1212299	ArgumentList	data -> mm		1212266	1					
ANR	1212300	Argument	data -> mm		1212266	0					
ANR	1212301	PtrMemberAccess	data -> mm		1212266	0					
ANR	1212302	Identifier	data		1212266	0					
ANR	1212303	Identifier	mm		1212266	1					
ANR	1212304	Argument	sizeof ( ps_sd ) + keylen		1212266	1					
ANR	1212305	AdditiveExpression	sizeof ( ps_sd ) + keylen		1212266	0		+			
ANR	1212306	SizeofExpression	sizeof ( ps_sd )		1212266	0					
ANR	1212307	Sizeof	sizeof		1212266	0					
ANR	1212308	SizeofOperand	ps_sd		1212266	1					
ANR	1212309	Identifier	keylen		1212266	1					
ANR	1212310	IfStatement	if ( ! sd )		1212266	5					
ANR	1212311	Condition	! sd	124:5:3082:3084	1212266	0	True				
ANR	1212312	UnaryOperationExpression	! sd		1212266	0					
ANR	1212313	UnaryOperator	!		1212266	0					
ANR	1212314	Identifier	sd		1212266	1					
ANR	1212315	CompoundStatement		9:10:134:134	1212266	1					
ANR	1212316	ExpressionStatement	TSRMLS_FETCH ( )	125:2:3091:3105	1212266	0	True				
ANR	1212317	CallExpression	TSRMLS_FETCH ( )		1212266	0					
ANR	1212318	Callee	TSRMLS_FETCH		1212266	0					
ANR	1212319	Identifier	TSRMLS_FETCH		1212266	0					
ANR	1212320	ArgumentList			1212266	1					
ANR	1212321	Statement	php_error_docref	127:2:3110:3125	1212266	1	True				
ANR	1212322	Statement	(	127:18:3126:3126	1212266	2	True				
ANR	1212323	Statement	NULL	127:19:3127:3130	1212266	3	True				
ANR	1212324	Statement	TSRMLS_CC	127:24:3132:3140	1212266	4	True				
ANR	1212325	Statement	","	127:33:3141:3141	1212266	5	True				
ANR	1212326	Statement	E_WARNING	127:35:3143:3151	1212266	6	True				
ANR	1212327	Statement	","	127:44:3152:3152	1212266	7	True				
ANR	1212328	Statement	"""mm_malloc failed, avail %ld, err %s"""	127:46:3154:3190	1212266	8	True				
ANR	1212329	Statement	","	127:83:3191:3191	1212266	9	True				
ANR	1212330	Statement	mm_available	127:85:3193:3204	1212266	10	True				
ANR	1212331	Statement	(	127:97:3205:3205	1212266	11	True				
ANR	1212332	Statement	data	127:98:3206:3209	1212266	12	True				
ANR	1212333	Statement	->	127:102:3210:3211	1212266	13	True				
ANR	1212334	Statement	mm	127:104:3212:3213	1212266	14	True				
ANR	1212335	Statement	)	127:106:3214:3214	1212266	15	True				
ANR	1212336	Statement	","	127:107:3215:3215	1212266	16	True				
ANR	1212337	Statement	mm_error	127:109:3217:3224	1212266	17	True				
ANR	1212338	Statement	(	127:117:3225:3225	1212266	18	True				
ANR	1212339	Statement	)	127:118:3226:3226	1212266	19	True				
ANR	1212340	Statement	)	127:119:3227:3227	1212266	20	True				
ANR	1212341	ExpressionStatement		127:120:3228:3228	1212266	21	True				
ANR	1212342	ReturnStatement	return NULL ;	128:2:3232:3243	1212266	22	True				
ANR	1212343	Identifier	NULL		1212266	0					
ANR	1212344	ExpressionStatement	"hv = ps_sd_hash ( key , keylen )"	131:1:3250:3278	1212266	6	True				
ANR	1212345	AssignmentExpression	"hv = ps_sd_hash ( key , keylen )"		1212266	0		=			
ANR	1212346	Identifier	hv		1212266	0					
ANR	1212347	CallExpression	"ps_sd_hash ( key , keylen )"		1212266	1					
ANR	1212348	Callee	ps_sd_hash		1212266	0					
ANR	1212349	Identifier	ps_sd_hash		1212266	0					
ANR	1212350	ArgumentList	key		1212266	1					
ANR	1212351	Argument	key		1212266	0					
ANR	1212352	Identifier	key		1212266	0					
ANR	1212353	Argument	keylen		1212266	1					
ANR	1212354	Identifier	keylen		1212266	0					
ANR	1212355	ExpressionStatement	slot = hv & data -> hash_max	132:1:3281:3307	1212266	7	True				
ANR	1212356	AssignmentExpression	slot = hv & data -> hash_max		1212266	0		=			
ANR	1212357	Identifier	slot		1212266	0					
ANR	1212358	BitAndExpression	hv & data -> hash_max		1212266	1		&			
ANR	1212359	Identifier	hv		1212266	0					
ANR	1212360	PtrMemberAccess	data -> hash_max		1212266	1					
ANR	1212361	Identifier	data		1212266	0					
ANR	1212362	Identifier	hash_max		1212266	1					
ANR	1212363	ExpressionStatement	sd -> ctime = 0	134:1:3311:3324	1212266	8	True				
ANR	1212364	AssignmentExpression	sd -> ctime = 0		1212266	0		=			
ANR	1212365	PtrMemberAccess	sd -> ctime		1212266	0					
ANR	1212366	Identifier	sd		1212266	0					
ANR	1212367	Identifier	ctime		1212266	1					
ANR	1212368	PrimaryExpression	0		1212266	1					
ANR	1212369	ExpressionStatement	sd -> hv = hv	135:1:3327:3338	1212266	9	True				
ANR	1212370	AssignmentExpression	sd -> hv = hv		1212266	0		=			
ANR	1212371	PtrMemberAccess	sd -> hv		1212266	0					
ANR	1212372	Identifier	sd		1212266	0					
ANR	1212373	Identifier	hv		1212266	1					
ANR	1212374	Identifier	hv		1212266	1					
ANR	1212375	ExpressionStatement	sd -> data = NULL	136:1:3341:3356	1212266	10	True				
ANR	1212376	AssignmentExpression	sd -> data = NULL		1212266	0		=			
ANR	1212377	PtrMemberAccess	sd -> data		1212266	0					
ANR	1212378	Identifier	sd		1212266	0					
ANR	1212379	Identifier	data		1212266	1					
ANR	1212380	Identifier	NULL		1212266	1					
ANR	1212381	ExpressionStatement	sd -> alloclen = sd -> datalen = 0	137:1:3359:3389	1212266	11	True				
ANR	1212382	AssignmentExpression	sd -> alloclen = sd -> datalen = 0		1212266	0		=			
ANR	1212383	PtrMemberAccess	sd -> alloclen		1212266	0					
ANR	1212384	Identifier	sd		1212266	0					
ANR	1212385	Identifier	alloclen		1212266	1					
ANR	1212386	AssignmentExpression	sd -> datalen = 0		1212266	1		=			
ANR	1212387	PtrMemberAccess	sd -> datalen		1212266	0					
ANR	1212388	Identifier	sd		1212266	0					
ANR	1212389	Identifier	datalen		1212266	1					
ANR	1212390	PrimaryExpression	0		1212266	1					
ANR	1212391	ExpressionStatement	"memcpy ( sd -> key , key , keylen + 1 )"	139:1:3393:3425	1212266	12	True				
ANR	1212392	CallExpression	"memcpy ( sd -> key , key , keylen + 1 )"		1212266	0					
ANR	1212393	Callee	memcpy		1212266	0					
ANR	1212394	Identifier	memcpy		1212266	0					
ANR	1212395	ArgumentList	sd -> key		1212266	1					
ANR	1212396	Argument	sd -> key		1212266	0					
ANR	1212397	PtrMemberAccess	sd -> key		1212266	0					
ANR	1212398	Identifier	sd		1212266	0					
ANR	1212399	Identifier	key		1212266	1					
ANR	1212400	Argument	key		1212266	1					
ANR	1212401	Identifier	key		1212266	0					
ANR	1212402	Argument	keylen + 1		1212266	2					
ANR	1212403	AdditiveExpression	keylen + 1		1212266	0		+			
ANR	1212404	Identifier	keylen		1212266	0					
ANR	1212405	PrimaryExpression	1		1212266	1					
ANR	1212406	ExpressionStatement	sd -> next = data -> hash [ slot ]	141:1:3429:3456	1212266	13	True				
ANR	1212407	AssignmentExpression	sd -> next = data -> hash [ slot ]		1212266	0		=			
ANR	1212408	PtrMemberAccess	sd -> next		1212266	0					
ANR	1212409	Identifier	sd		1212266	0					
ANR	1212410	Identifier	next		1212266	1					
ANR	1212411	ArrayIndexing	data -> hash [ slot ]		1212266	1					
ANR	1212412	PtrMemberAccess	data -> hash		1212266	0					
ANR	1212413	Identifier	data		1212266	0					
ANR	1212414	Identifier	hash		1212266	1					
ANR	1212415	Identifier	slot		1212266	1					
ANR	1212416	ExpressionStatement	data -> hash [ slot ] = sd	142:1:3459:3480	1212266	14	True				
ANR	1212417	AssignmentExpression	data -> hash [ slot ] = sd		1212266	0		=			
ANR	1212418	ArrayIndexing	data -> hash [ slot ]		1212266	0					
ANR	1212419	PtrMemberAccess	data -> hash		1212266	0					
ANR	1212420	Identifier	data		1212266	0					
ANR	1212421	Identifier	hash		1212266	1					
ANR	1212422	Identifier	slot		1212266	1					
ANR	1212423	Identifier	sd		1212266	1					
ANR	1212424	ExpressionStatement	data -> hash_cnt ++	144:1:3484:3500	1212266	15	True				
ANR	1212425	PostIncDecOperationExpression	data -> hash_cnt ++		1212266	0					
ANR	1212426	PtrMemberAccess	data -> hash_cnt		1212266	0					
ANR	1212427	Identifier	data		1212266	0					
ANR	1212428	Identifier	hash_cnt		1212266	1					
ANR	1212429	IncDec	++		1212266	1					
ANR	1212430	IfStatement	if ( ! sd -> next )		1212266	16					
ANR	1212431	Condition	! sd -> next	146:5:3508:3516	1212266	0	True				
ANR	1212432	UnaryOperationExpression	! sd -> next		1212266	0					
ANR	1212433	UnaryOperator	!		1212266	0					
ANR	1212434	PtrMemberAccess	sd -> next		1212266	1					
ANR	1212435	Identifier	sd		1212266	0					
ANR	1212436	Identifier	next		1212266	1					
ANR	1212437	CompoundStatement		31:16:566:566	1212266	1					
ANR	1212438	IfStatement	if ( data -> hash_cnt >= data -> hash_max )		1212266	0					
ANR	1212439	Condition	data -> hash_cnt >= data -> hash_max	147:6:3527:3558	1212266	0	True				
ANR	1212440	RelationalExpression	data -> hash_cnt >= data -> hash_max		1212266	0		>=			
ANR	1212441	PtrMemberAccess	data -> hash_cnt		1212266	0					
ANR	1212442	Identifier	data		1212266	0					
ANR	1212443	Identifier	hash_cnt		1212266	1					
ANR	1212444	PtrMemberAccess	data -> hash_max		1212266	1					
ANR	1212445	Identifier	data		1212266	0					
ANR	1212446	Identifier	hash_max		1212266	1					
ANR	1212447	CompoundStatement		32:40:608:608	1212266	1					
ANR	1212448	ExpressionStatement	hash_split ( data )	148:3:3566:3582	1212266	0	True				
ANR	1212449	CallExpression	hash_split ( data )		1212266	0					
ANR	1212450	Callee	hash_split		1212266	0					
ANR	1212451	Identifier	hash_split		1212266	0					
ANR	1212452	ArgumentList	data		1212266	1					
ANR	1212453	Argument	data		1212266	0					
ANR	1212454	Identifier	data		1212266	0					
ANR	1212455	ExpressionStatement	"ps_mm_debug ( ( ""inserting %s(%p) into slot %d\\n"" , key , sd , slot ) )"	152:1:3593:3656	1212266	17	True				
ANR	1212456	CallExpression	"ps_mm_debug ( ( ""inserting %s(%p) into slot %d\\n"" , key , sd , slot ) )"		1212266	0					
ANR	1212457	Callee	ps_mm_debug		1212266	0					
ANR	1212458	Identifier	ps_mm_debug		1212266	0					
ANR	1212459	ArgumentList	"""inserting %s(%p) into slot %d\\n"" , key , sd , slot"		1212266	1					
ANR	1212460	Argument	"""inserting %s(%p) into slot %d\\n"" , key , sd , slot"		1212266	0					
ANR	1212461	Expression	"""inserting %s(%p) into slot %d\\n"" , key , sd , slot"		1212266	0					
ANR	1212462	PrimaryExpression	"""inserting %s(%p) into slot %d\\n"""		1212266	0					
ANR	1212463	Expression	"key , sd , slot"		1212266	1					
ANR	1212464	Identifier	key		1212266	0					
ANR	1212465	Expression	"sd , slot"		1212266	1					
ANR	1212466	Identifier	sd		1212266	0					
ANR	1212467	Identifier	slot		1212266	1					
ANR	1212468	ReturnStatement	return sd ;	154:1:3660:3669	1212266	18	True				
ANR	1212469	Identifier	sd		1212266	0					
ANR	1212470	ReturnType	static ps_sd *		1212266	1					
ANR	1212471	Identifier	ps_sd_new		1212266	2					
ANR	1212472	ParameterList	"ps_mm * data , const char * key"		1212266	3					
ANR	1212473	Parameter	ps_mm * data	115:24:2922:2932	1212266	0	True				
ANR	1212474	ParameterType	ps_mm *		1212266	0					
ANR	1212475	Identifier	data		1212266	1					
ANR	1212476	Parameter	const char * key	115:37:2935:2949	1212266	1	True				
ANR	1212477	ParameterType	const char *		1212266	0					
ANR	1212478	Identifier	key		1212266	1					
ANR	1212479	CFGEntryNode	ENTRY		1212266		True				
ANR	1212480	CFGExitNode	EXIT		1212266		True				
ANR	1212481	Symbol	* * data		1212266						
ANR	1212482	Symbol	data		1212266						
ANR	1212483	Symbol	sd -> hv		1212266						
ANR	1212484	Symbol	keylen		1212266						
ANR	1212485	Symbol	slot		1212266						
ANR	1212486	Symbol	data -> hash_cnt		1212266						
ANR	1212487	Symbol	hv		1212266						
ANR	1212488	Symbol	data -> hash_max		1212266						
ANR	1212489	Symbol	* slot		1212266						
ANR	1212490	Symbol	sd		1212266						
ANR	1212491	Symbol	strlen		1212266						
ANR	1212492	Symbol	* sd		1212266						
ANR	1212493	Symbol	sd -> datalen		1212266						
ANR	1212494	Symbol	sd -> alloclen		1212266						
ANR	1212495	Symbol	mm_malloc		1212266						
ANR	1212496	Symbol	key		1212266						
ANR	1212497	Symbol	sd -> key		1212266						
ANR	1212498	Symbol	NULL		1212266						
ANR	1212499	Symbol	sd -> ctime		1212266						
ANR	1212500	Symbol	sd -> next		1212266						
ANR	1212501	Symbol	ps_sd_hash		1212266						
ANR	1212502	Symbol	data -> mm		1212266						
ANR	1212503	Symbol	data -> hash		1212266						
ANR	1212504	Symbol	* data		1212266						
ANR	1212505	Symbol	* data -> hash		1212266						
ANR	1212506	Symbol	sd -> data		1212266						
ANR	1212507	Function	ps_sd_destroy	157:0:3674:4158							
ANR	1212508	FunctionDef	"ps_sd_destroy (ps_mm * data , ps_sd * sd)"		1212507	0					
ANR	1212509	CompoundStatement		158:0:3724:4158	1212507	0					
ANR	1212510	IdentifierDeclStatement	php_uint32 slot ;	159:1:3727:3742	1212507	0	True				
ANR	1212511	IdentifierDecl	slot		1212507	0					
ANR	1212512	IdentifierDeclType	php_uint32		1212507	0					
ANR	1212513	Identifier	slot		1212507	1					
ANR	1212514	ExpressionStatement	"slot = ps_sd_hash ( sd -> key , strlen ( sd -> key ) ) & data -> hash_max"	161:1:3746:3806	1212507	1	True				
ANR	1212515	AssignmentExpression	"slot = ps_sd_hash ( sd -> key , strlen ( sd -> key ) ) & data -> hash_max"		1212507	0		=			
ANR	1212516	Identifier	slot		1212507	0					
ANR	1212517	BitAndExpression	"ps_sd_hash ( sd -> key , strlen ( sd -> key ) ) & data -> hash_max"		1212507	1		&			
ANR	1212518	CallExpression	"ps_sd_hash ( sd -> key , strlen ( sd -> key ) )"		1212507	0					
ANR	1212519	Callee	ps_sd_hash		1212507	0					
ANR	1212520	Identifier	ps_sd_hash		1212507	0					
ANR	1212521	ArgumentList	sd -> key		1212507	1					
ANR	1212522	Argument	sd -> key		1212507	0					
ANR	1212523	PtrMemberAccess	sd -> key		1212507	0					
ANR	1212524	Identifier	sd		1212507	0					
ANR	1212525	Identifier	key		1212507	1					
ANR	1212526	Argument	strlen ( sd -> key )		1212507	1					
ANR	1212527	CallExpression	strlen ( sd -> key )		1212507	0					
ANR	1212528	Callee	strlen		1212507	0					
ANR	1212529	Identifier	strlen		1212507	0					
ANR	1212530	ArgumentList	sd -> key		1212507	1					
ANR	1212531	Argument	sd -> key		1212507	0					
ANR	1212532	PtrMemberAccess	sd -> key		1212507	0					
ANR	1212533	Identifier	sd		1212507	0					
ANR	1212534	Identifier	key		1212507	1					
ANR	1212535	PtrMemberAccess	data -> hash_max		1212507	1					
ANR	1212536	Identifier	data		1212507	0					
ANR	1212537	Identifier	hash_max		1212507	1					
ANR	1212538	IfStatement	if ( data -> hash [ slot ] == sd )		1212507	2					
ANR	1212539	Condition	data -> hash [ slot ] == sd	163:5:3814:3835	1212507	0	True				
ANR	1212540	EqualityExpression	data -> hash [ slot ] == sd		1212507	0		==			
ANR	1212541	ArrayIndexing	data -> hash [ slot ]		1212507	0					
ANR	1212542	PtrMemberAccess	data -> hash		1212507	0					
ANR	1212543	Identifier	data		1212507	0					
ANR	1212544	Identifier	hash		1212507	1					
ANR	1212545	Identifier	slot		1212507	1					
ANR	1212546	Identifier	sd		1212507	1					
ANR	1212547	CompoundStatement		6:29:113:113	1212507	1					
ANR	1212548	ExpressionStatement	data -> hash [ slot ] = sd -> next	164:2:3842:3869	1212507	0	True				
ANR	1212549	AssignmentExpression	data -> hash [ slot ] = sd -> next		1212507	0		=			
ANR	1212550	ArrayIndexing	data -> hash [ slot ]		1212507	0					
ANR	1212551	PtrMemberAccess	data -> hash		1212507	0					
ANR	1212552	Identifier	data		1212507	0					
ANR	1212553	Identifier	hash		1212507	1					
ANR	1212554	Identifier	slot		1212507	1					
ANR	1212555	PtrMemberAccess	sd -> next		1212507	1					
ANR	1212556	Identifier	sd		1212507	0					
ANR	1212557	Identifier	next		1212507	1					
ANR	1212558	ElseStatement	else		1212507	0					
ANR	1212559	CompoundStatement		9:2:158:169	1212507	0					
ANR	1212560	IdentifierDeclStatement	ps_sd * prev ;	166:2:3883:3894	1212507	0	True				
ANR	1212561	IdentifierDecl	* prev		1212507	0					
ANR	1212562	IdentifierDeclType	ps_sd *		1212507	0					
ANR	1212563	Identifier	prev		1212507	1					
ANR	1212564	ForStatement	for ( prev = data -> hash [ slot ] ; prev -> next != sd ; prev = prev -> next )		1212507	1					
ANR	1212565	ForInit	prev = data -> hash [ slot ] ;	169:7:3970:3993	1212507	0	True				
ANR	1212566	AssignmentExpression	prev = data -> hash [ slot ]		1212507	0		=			
ANR	1212567	Identifier	prev		1212507	0					
ANR	1212568	ArrayIndexing	data -> hash [ slot ]		1212507	1					
ANR	1212569	PtrMemberAccess	data -> hash		1212507	0					
ANR	1212570	Identifier	data		1212507	0					
ANR	1212571	Identifier	hash		1212507	1					
ANR	1212572	Identifier	slot		1212507	1					
ANR	1212573	Condition	prev -> next != sd	169:32:3995:4010	1212507	1	True				
ANR	1212574	EqualityExpression	prev -> next != sd		1212507	0		!=			
ANR	1212575	PtrMemberAccess	prev -> next		1212507	0					
ANR	1212576	Identifier	prev		1212507	0					
ANR	1212577	Identifier	next		1212507	1					
ANR	1212578	Identifier	sd		1212507	1					
ANR	1212579	AssignmentExpression	prev = prev -> next	169:50:4013:4029	1212507	2	True	=			
ANR	1212580	Identifier	prev		1212507	0					
ANR	1212581	PtrMemberAccess	prev -> next		1212507	1					
ANR	1212582	Identifier	prev		1212507	0					
ANR	1212583	Identifier	next		1212507	1					
ANR	1212584	ExpressionStatement		169:68:4031:4031	1212507	3	True				
ANR	1212585	ExpressionStatement	prev -> next = sd -> next	170:2:4035:4056	1212507	2	True				
ANR	1212586	AssignmentExpression	prev -> next = sd -> next		1212507	0		=			
ANR	1212587	PtrMemberAccess	prev -> next		1212507	0					
ANR	1212588	Identifier	prev		1212507	0					
ANR	1212589	Identifier	next		1212507	1					
ANR	1212590	PtrMemberAccess	sd -> next		1212507	1					
ANR	1212591	Identifier	sd		1212507	0					
ANR	1212592	Identifier	next		1212507	1					
ANR	1212593	ExpressionStatement	data -> hash_cnt --	173:1:4063:4079	1212507	3	True				
ANR	1212594	PostIncDecOperationExpression	data -> hash_cnt --		1212507	0					
ANR	1212595	PtrMemberAccess	data -> hash_cnt		1212507	0					
ANR	1212596	Identifier	data		1212507	0					
ANR	1212597	Identifier	hash_cnt		1212507	1					
ANR	1212598	IncDec	--		1212507	1					
ANR	1212599	IfStatement	if ( sd -> data )		1212507	4					
ANR	1212600	Condition	sd -> data	175:5:4087:4094	1212507	0	True				
ANR	1212601	PtrMemberAccess	sd -> data		1212507	0					
ANR	1212602	Identifier	sd		1212507	0					
ANR	1212603	Identifier	data		1212507	1					
ANR	1212604	CompoundStatement		18:15:372:372	1212507	1					
ANR	1212605	ExpressionStatement	"mm_free ( data -> mm , sd -> data )"	176:2:4101:4128	1212507	0	True				
ANR	1212606	CallExpression	"mm_free ( data -> mm , sd -> data )"		1212507	0					
ANR	1212607	Callee	mm_free		1212507	0					
ANR	1212608	Identifier	mm_free		1212507	0					
ANR	1212609	ArgumentList	data -> mm		1212507	1					
ANR	1212610	Argument	data -> mm		1212507	0					
ANR	1212611	PtrMemberAccess	data -> mm		1212507	0					
ANR	1212612	Identifier	data		1212507	0					
ANR	1212613	Identifier	mm		1212507	1					
ANR	1212614	Argument	sd -> data		1212507	1					
ANR	1212615	PtrMemberAccess	sd -> data		1212507	0					
ANR	1212616	Identifier	sd		1212507	0					
ANR	1212617	Identifier	data		1212507	1					
ANR	1212618	ExpressionStatement	"mm_free ( data -> mm , sd )"	179:1:4135:4156	1212507	5	True				
ANR	1212619	CallExpression	"mm_free ( data -> mm , sd )"		1212507	0					
ANR	1212620	Callee	mm_free		1212507	0					
ANR	1212621	Identifier	mm_free		1212507	0					
ANR	1212622	ArgumentList	data -> mm		1212507	1					
ANR	1212623	Argument	data -> mm		1212507	0					
ANR	1212624	PtrMemberAccess	data -> mm		1212507	0					
ANR	1212625	Identifier	data		1212507	0					
ANR	1212626	Identifier	mm		1212507	1					
ANR	1212627	Argument	sd		1212507	1					
ANR	1212628	Identifier	sd		1212507	0					
ANR	1212629	ReturnType	static void		1212507	1					
ANR	1212630	Identifier	ps_sd_destroy		1212507	2					
ANR	1212631	ParameterList	"ps_mm * data , ps_sd * sd"		1212507	3					
ANR	1212632	Parameter	ps_mm * data	157:26:3700:3710	1212507	0	True				
ANR	1212633	ParameterType	ps_mm *		1212507	0					
ANR	1212634	Identifier	data		1212507	1					
ANR	1212635	Parameter	ps_sd * sd	157:39:3713:3721	1212507	1	True				
ANR	1212636	ParameterType	ps_sd *		1212507	0					
ANR	1212637	Identifier	sd		1212507	1					
ANR	1212638	CFGEntryNode	ENTRY		1212507		True				
ANR	1212639	CFGExitNode	EXIT		1212507		True				
ANR	1212640	Symbol	* * data		1212507						
ANR	1212641	Symbol	prev -> next		1212507						
ANR	1212642	Symbol	sd -> key		1212507						
ANR	1212643	Symbol	data		1212507						
ANR	1212644	Symbol	prev		1212507						
ANR	1212645	Symbol	sd -> next		1212507						
ANR	1212646	Symbol	* prev		1212507						
ANR	1212647	Symbol	slot		1212507						
ANR	1212648	Symbol	ps_sd_hash		1212507						
ANR	1212649	Symbol	data -> hash_cnt		1212507						
ANR	1212650	Symbol	data -> mm		1212507						
ANR	1212651	Symbol	data -> hash_max		1212507						
ANR	1212652	Symbol	* slot		1212507						
ANR	1212653	Symbol	sd		1212507						
ANR	1212654	Symbol	strlen		1212507						
ANR	1212655	Symbol	* sd		1212507						
ANR	1212656	Symbol	data -> hash		1212507						
ANR	1212657	Symbol	* data		1212507						
ANR	1212658	Symbol	* data -> hash		1212507						
ANR	1212659	Symbol	sd -> data		1212507						
ANR	1212660	Function	ps_sd_lookup	182:0:4161:4777							
ANR	1212661	FunctionDef	"ps_sd_lookup (ps_mm * data , const char * key , int rw)"		1212660	0					
ANR	1212662	CompoundStatement		183:0:4226:4777	1212660	0					
ANR	1212663	IdentifierDeclStatement	"php_uint32 hv , slot ;"	184:1:4229:4248	1212660	0	True				
ANR	1212664	IdentifierDecl	hv		1212660	0					
ANR	1212665	IdentifierDeclType	php_uint32		1212660	0					
ANR	1212666	Identifier	hv		1212660	1					
ANR	1212667	IdentifierDecl	slot		1212660	1					
ANR	1212668	IdentifierDeclType	php_uint32		1212660	0					
ANR	1212669	Identifier	slot		1212660	1					
ANR	1212670	IdentifierDeclStatement	"ps_sd * ret , * prev ;"	185:1:4251:4268	1212660	1	True				
ANR	1212671	IdentifierDecl	* ret		1212660	0					
ANR	1212672	IdentifierDeclType	ps_sd *		1212660	0					
ANR	1212673	Identifier	ret		1212660	1					
ANR	1212674	IdentifierDecl	* prev		1212660	1					
ANR	1212675	IdentifierDeclType	ps_sd *		1212660	0					
ANR	1212676	Identifier	prev		1212660	1					
ANR	1212677	ExpressionStatement	"hv = ps_sd_hash ( key , strlen ( key ) )"	187:1:4272:4305	1212660	2	True				
ANR	1212678	AssignmentExpression	"hv = ps_sd_hash ( key , strlen ( key ) )"		1212660	0		=			
ANR	1212679	Identifier	hv		1212660	0					
ANR	1212680	CallExpression	"ps_sd_hash ( key , strlen ( key ) )"		1212660	1					
ANR	1212681	Callee	ps_sd_hash		1212660	0					
ANR	1212682	Identifier	ps_sd_hash		1212660	0					
ANR	1212683	ArgumentList	key		1212660	1					
ANR	1212684	Argument	key		1212660	0					
ANR	1212685	Identifier	key		1212660	0					
ANR	1212686	Argument	strlen ( key )		1212660	1					
ANR	1212687	CallExpression	strlen ( key )		1212660	0					
ANR	1212688	Callee	strlen		1212660	0					
ANR	1212689	Identifier	strlen		1212660	0					
ANR	1212690	ArgumentList	key		1212660	1					
ANR	1212691	Argument	key		1212660	0					
ANR	1212692	Identifier	key		1212660	0					
ANR	1212693	ExpressionStatement	slot = hv & data -> hash_max	188:1:4308:4334	1212660	3	True				
ANR	1212694	AssignmentExpression	slot = hv & data -> hash_max		1212660	0		=			
ANR	1212695	Identifier	slot		1212660	0					
ANR	1212696	BitAndExpression	hv & data -> hash_max		1212660	1		&			
ANR	1212697	Identifier	hv		1212660	0					
ANR	1212698	PtrMemberAccess	data -> hash_max		1212660	1					
ANR	1212699	Identifier	data		1212660	0					
ANR	1212700	Identifier	hash_max		1212660	1					
ANR	1212701	ForStatement	"for ( prev = NULL , ret = data -> hash [ slot ] ; ret ; prev = ret , ret = ret -> next )"		1212660	4					
ANR	1212702	ForInit	"prev = NULL , ret = data -> hash [ slot ] ;"	190:6:4343:4378	1212660	0	True				
ANR	1212703	Expression	"prev = NULL , ret = data -> hash [ slot ]"		1212660	0					
ANR	1212704	AssignmentExpression	prev = NULL		1212660	0		=			
ANR	1212705	Identifier	prev		1212660	0					
ANR	1212706	Identifier	NULL		1212660	1					
ANR	1212707	AssignmentExpression	ret = data -> hash [ slot ]		1212660	1		=			
ANR	1212708	Identifier	ret		1212660	0					
ANR	1212709	ArrayIndexing	data -> hash [ slot ]		1212660	1					
ANR	1212710	PtrMemberAccess	data -> hash		1212660	0					
ANR	1212711	Identifier	data		1212660	0					
ANR	1212712	Identifier	hash		1212660	1					
ANR	1212713	Identifier	slot		1212660	1					
ANR	1212714	Condition	ret	190:43:4380:4382	1212660	1	True				
ANR	1212715	Identifier	ret		1212660	0					
ANR	1212716	Expression	"prev = ret , ret = ret -> next"	190:48:4385:4411	1212660	2	True				
ANR	1212717	AssignmentExpression	prev = ret		1212660	0		=			
ANR	1212718	Identifier	prev		1212660	0					
ANR	1212719	Identifier	ret		1212660	1					
ANR	1212720	AssignmentExpression	ret = ret -> next		1212660	1		=			
ANR	1212721	Identifier	ret		1212660	0					
ANR	1212722	PtrMemberAccess	ret -> next		1212660	1					
ANR	1212723	Identifier	ret		1212660	0					
ANR	1212724	Identifier	next		1212660	1					
ANR	1212725	CompoundStatement		8:77:187:187	1212660	3					
ANR	1212726	IfStatement	"if ( ret -> hv == hv && ! strcmp ( ret -> key , key ) )"		1212660	0					
ANR	1212727	Condition	"ret -> hv == hv && ! strcmp ( ret -> key , key )"	191:6:4422:4460	1212660	0	True				
ANR	1212728	AndExpression	"ret -> hv == hv && ! strcmp ( ret -> key , key )"		1212660	0		&&			
ANR	1212729	EqualityExpression	ret -> hv == hv		1212660	0		==			
ANR	1212730	PtrMemberAccess	ret -> hv		1212660	0					
ANR	1212731	Identifier	ret		1212660	0					
ANR	1212732	Identifier	hv		1212660	1					
ANR	1212733	Identifier	hv		1212660	1					
ANR	1212734	UnaryOperationExpression	"! strcmp ( ret -> key , key )"		1212660	1					
ANR	1212735	UnaryOperator	!		1212660	0					
ANR	1212736	CallExpression	"strcmp ( ret -> key , key )"		1212660	1					
ANR	1212737	Callee	strcmp		1212660	0					
ANR	1212738	Identifier	strcmp		1212660	0					
ANR	1212739	ArgumentList	ret -> key		1212660	1					
ANR	1212740	Argument	ret -> key		1212660	0					
ANR	1212741	PtrMemberAccess	ret -> key		1212660	0					
ANR	1212742	Identifier	ret		1212660	0					
ANR	1212743	Identifier	key		1212660	1					
ANR	1212744	Argument	key		1212660	1					
ANR	1212745	Identifier	key		1212660	0					
ANR	1212746	CompoundStatement		9:47:236:236	1212660	1					
ANR	1212747	BreakStatement	break ;	192:3:4468:4473	1212660	0	True				
ANR	1212748	IfStatement	if ( ret && rw && ret != data -> hash [ slot ] )		1212660	5					
ANR	1212749	Condition	ret && rw && ret != data -> hash [ slot ]	196:5:4488:4523	1212660	0	True				
ANR	1212750	AndExpression	ret && rw && ret != data -> hash [ slot ]		1212660	0		&&			
ANR	1212751	Identifier	ret		1212660	0					
ANR	1212752	AndExpression	rw && ret != data -> hash [ slot ]		1212660	1		&&			
ANR	1212753	Identifier	rw		1212660	0					
ANR	1212754	EqualityExpression	ret != data -> hash [ slot ]		1212660	1		!=			
ANR	1212755	Identifier	ret		1212660	0					
ANR	1212756	ArrayIndexing	data -> hash [ slot ]		1212660	1					
ANR	1212757	PtrMemberAccess	data -> hash		1212660	0					
ANR	1212758	Identifier	data		1212660	0					
ANR	1212759	Identifier	hash		1212660	1					
ANR	1212760	Identifier	slot		1212660	1					
ANR	1212761	CompoundStatement		14:43:299:299	1212660	1					
ANR	1212762	IfStatement	if ( prev )		1212660	0					
ANR	1212763	Condition	prev	198:6:4587:4590	1212660	0	True				
ANR	1212764	Identifier	prev		1212660	0					
ANR	1212765	CompoundStatement		16:12:366:366	1212660	1					
ANR	1212766	ExpressionStatement	prev -> next = ret -> next	199:3:4598:4620	1212660	0	True				
ANR	1212767	AssignmentExpression	prev -> next = ret -> next		1212660	0		=			
ANR	1212768	PtrMemberAccess	prev -> next		1212660	0					
ANR	1212769	Identifier	prev		1212660	0					
ANR	1212770	Identifier	next		1212660	1					
ANR	1212771	PtrMemberAccess	ret -> next		1212660	1					
ANR	1212772	Identifier	ret		1212660	0					
ANR	1212773	Identifier	next		1212660	1					
ANR	1212774	ExpressionStatement	ret -> next = data -> hash [ slot ]	202:2:4629:4657	1212660	1	True				
ANR	1212775	AssignmentExpression	ret -> next = data -> hash [ slot ]		1212660	0		=			
ANR	1212776	PtrMemberAccess	ret -> next		1212660	0					
ANR	1212777	Identifier	ret		1212660	0					
ANR	1212778	Identifier	next		1212660	1					
ANR	1212779	ArrayIndexing	data -> hash [ slot ]		1212660	1					
ANR	1212780	PtrMemberAccess	data -> hash		1212660	0					
ANR	1212781	Identifier	data		1212660	0					
ANR	1212782	Identifier	hash		1212660	1					
ANR	1212783	Identifier	slot		1212660	1					
ANR	1212784	ExpressionStatement	data -> hash [ slot ] = ret	203:2:4661:4683	1212660	2	True				
ANR	1212785	AssignmentExpression	data -> hash [ slot ] = ret		1212660	0		=			
ANR	1212786	ArrayIndexing	data -> hash [ slot ]		1212660	0					
ANR	1212787	PtrMemberAccess	data -> hash		1212660	0					
ANR	1212788	Identifier	data		1212660	0					
ANR	1212789	Identifier	hash		1212660	1					
ANR	1212790	Identifier	slot		1212660	1					
ANR	1212791	Identifier	ret		1212660	1					
ANR	1212792	ExpressionStatement	"ps_mm_debug ( ( ""lookup(%s): ret=%p,hv=%u,slot=%d\\n"" , key , ret , hv , slot ) )"	206:1:4690:4761	1212660	6	True				
ANR	1212793	CallExpression	"ps_mm_debug ( ( ""lookup(%s): ret=%p,hv=%u,slot=%d\\n"" , key , ret , hv , slot ) )"		1212660	0					
ANR	1212794	Callee	ps_mm_debug		1212660	0					
ANR	1212795	Identifier	ps_mm_debug		1212660	0					
ANR	1212796	ArgumentList	"""lookup(%s): ret=%p,hv=%u,slot=%d\\n"" , key , ret , hv , slot"		1212660	1					
ANR	1212797	Argument	"""lookup(%s): ret=%p,hv=%u,slot=%d\\n"" , key , ret , hv , slot"		1212660	0					
ANR	1212798	Expression	"""lookup(%s): ret=%p,hv=%u,slot=%d\\n"" , key , ret , hv , slot"		1212660	0					
ANR	1212799	PrimaryExpression	"""lookup(%s): ret=%p,hv=%u,slot=%d\\n"""		1212660	0					
ANR	1212800	Expression	"key , ret , hv , slot"		1212660	1					
ANR	1212801	Identifier	key		1212660	0					
ANR	1212802	Expression	"ret , hv , slot"		1212660	1					
ANR	1212803	Identifier	ret		1212660	0					
ANR	1212804	Expression	"hv , slot"		1212660	1					
ANR	1212805	Identifier	hv		1212660	0					
ANR	1212806	Identifier	slot		1212660	1					
ANR	1212807	ReturnStatement	return ret ;	208:1:4765:4775	1212660	7	True				
ANR	1212808	Identifier	ret		1212660	0					
ANR	1212809	ReturnType	static ps_sd *		1212660	1					
ANR	1212810	Identifier	ps_sd_lookup		1212660	2					
ANR	1212811	ParameterList	"ps_mm * data , const char * key , int rw"		1212660	3					
ANR	1212812	Parameter	ps_mm * data	182:27:4188:4198	1212660	0	True				
ANR	1212813	ParameterType	ps_mm *		1212660	0					
ANR	1212814	Identifier	data		1212660	1					
ANR	1212815	Parameter	const char * key	182:40:4201:4215	1212660	1	True				
ANR	1212816	ParameterType	const char *		1212660	0					
ANR	1212817	Identifier	key		1212660	1					
ANR	1212818	Parameter	int rw	182:57:4218:4223	1212660	2	True				
ANR	1212819	ParameterType	int		1212660	0					
ANR	1212820	Identifier	rw		1212660	1					
ANR	1212821	CFGEntryNode	ENTRY		1212660		True				
ANR	1212822	CFGExitNode	EXIT		1212660		True				
ANR	1212823	Symbol	ret		1212660						
ANR	1212824	Symbol	* * data		1212660						
ANR	1212825	Symbol	strcmp		1212660						
ANR	1212826	Symbol	prev -> next		1212660						
ANR	1212827	Symbol	NULL		1212660						
ANR	1212828	Symbol	data		1212660						
ANR	1212829	Symbol	rw		1212660						
ANR	1212830	Symbol	prev		1212660						
ANR	1212831	Symbol	ret -> key		1212660						
ANR	1212832	Symbol	ret -> hv		1212660						
ANR	1212833	Symbol	* prev		1212660						
ANR	1212834	Symbol	slot		1212660						
ANR	1212835	Symbol	ps_sd_hash		1212660						
ANR	1212836	Symbol	* ret		1212660						
ANR	1212837	Symbol	hv		1212660						
ANR	1212838	Symbol	data -> hash_max		1212660						
ANR	1212839	Symbol	* slot		1212660						
ANR	1212840	Symbol	strlen		1212660						
ANR	1212841	Symbol	ret -> next		1212660						
ANR	1212842	Symbol	data -> hash		1212660						
ANR	1212843	Symbol	* data		1212660						
ANR	1212844	Symbol	key		1212660						
ANR	1212845	Symbol	* data -> hash		1212660						
ANR	1212846	DeclStmt									
ANR	1212847	Decl							ps_sd	ps_sd *	sd
ANR	1212848	DeclStmt									
ANR	1212849	Decl							ps_module	ps_module	ps_mod_mm
ANR	1212850	Function	ps_mm_initialize	231:0:5079:5436							
ANR	1212851	FunctionDef	"ps_mm_initialize (ps_mm * data , const char * path)"		1212850	0					
ANR	1212852	CompoundStatement		232:0:5138:5436	1212850	0					
ANR	1212853	ExpressionStatement	data -> owner = getpid ( )	233:1:5141:5163	1212850	0	True				
ANR	1212854	AssignmentExpression	data -> owner = getpid ( )		1212850	0		=			
ANR	1212855	PtrMemberAccess	data -> owner		1212850	0					
ANR	1212856	Identifier	data		1212850	0					
ANR	1212857	Identifier	owner		1212850	1					
ANR	1212858	CallExpression	getpid ( )		1212850	1					
ANR	1212859	Callee	getpid		1212850	0					
ANR	1212860	Identifier	getpid		1212850	0					
ANR	1212861	ArgumentList			1212850	1					
ANR	1212862	ExpressionStatement	"data -> mm = mm_create ( 0 , path )"	234:1:5166:5195	1212850	1	True				
ANR	1212863	AssignmentExpression	"data -> mm = mm_create ( 0 , path )"		1212850	0		=			
ANR	1212864	PtrMemberAccess	data -> mm		1212850	0					
ANR	1212865	Identifier	data		1212850	0					
ANR	1212866	Identifier	mm		1212850	1					
ANR	1212867	CallExpression	"mm_create ( 0 , path )"		1212850	1					
ANR	1212868	Callee	mm_create		1212850	0					
ANR	1212869	Identifier	mm_create		1212850	0					
ANR	1212870	ArgumentList	0		1212850	1					
ANR	1212871	Argument	0		1212850	0					
ANR	1212872	PrimaryExpression	0		1212850	0					
ANR	1212873	Argument	path		1212850	1					
ANR	1212874	Identifier	path		1212850	0					
ANR	1212875	IfStatement	if ( ! data -> mm )		1212850	2					
ANR	1212876	Condition	! data -> mm	235:5:5202:5210	1212850	0	True				
ANR	1212877	UnaryOperationExpression	! data -> mm		1212850	0					
ANR	1212878	UnaryOperator	!		1212850	0					
ANR	1212879	PtrMemberAccess	data -> mm		1212850	1					
ANR	1212880	Identifier	data		1212850	0					
ANR	1212881	Identifier	mm		1212850	1					
ANR	1212882	CompoundStatement		4:16:74:74	1212850	1					
ANR	1212883	ReturnStatement	return FAILURE ;	236:2:5217:5231	1212850	0	True				
ANR	1212884	Identifier	FAILURE		1212850	0					
ANR	1212885	ExpressionStatement	data -> hash_cnt = 0	239:1:5238:5256	1212850	3	True				
ANR	1212886	AssignmentExpression	data -> hash_cnt = 0		1212850	0		=			
ANR	1212887	PtrMemberAccess	data -> hash_cnt		1212850	0					
ANR	1212888	Identifier	data		1212850	0					
ANR	1212889	Identifier	hash_cnt		1212850	1					
ANR	1212890	PrimaryExpression	0		1212850	1					
ANR	1212891	ExpressionStatement	data -> hash_max = 511	240:1:5259:5279	1212850	4	True				
ANR	1212892	AssignmentExpression	data -> hash_max = 511		1212850	0		=			
ANR	1212893	PtrMemberAccess	data -> hash_max		1212850	0					
ANR	1212894	Identifier	data		1212850	0					
ANR	1212895	Identifier	hash_max		1212850	1					
ANR	1212896	PrimaryExpression	511		1212850	1					
ANR	1212897	ExpressionStatement	"data -> hash = mm_calloc ( data -> mm , data -> hash_max + 1 , sizeof ( ps_sd * ) )"	241:1:5282:5351	1212850	5	True				
ANR	1212898	AssignmentExpression	"data -> hash = mm_calloc ( data -> mm , data -> hash_max + 1 , sizeof ( ps_sd * ) )"		1212850	0		=			
ANR	1212899	PtrMemberAccess	data -> hash		1212850	0					
ANR	1212900	Identifier	data		1212850	0					
ANR	1212901	Identifier	hash		1212850	1					
ANR	1212902	CallExpression	"mm_calloc ( data -> mm , data -> hash_max + 1 , sizeof ( ps_sd * ) )"		1212850	1					
ANR	1212903	Callee	mm_calloc		1212850	0					
ANR	1212904	Identifier	mm_calloc		1212850	0					
ANR	1212905	ArgumentList	data -> mm		1212850	1					
ANR	1212906	Argument	data -> mm		1212850	0					
ANR	1212907	PtrMemberAccess	data -> mm		1212850	0					
ANR	1212908	Identifier	data		1212850	0					
ANR	1212909	Identifier	mm		1212850	1					
ANR	1212910	Argument	data -> hash_max + 1		1212850	1					
ANR	1212911	AdditiveExpression	data -> hash_max + 1		1212850	0		+			
ANR	1212912	PtrMemberAccess	data -> hash_max		1212850	0					
ANR	1212913	Identifier	data		1212850	0					
ANR	1212914	Identifier	hash_max		1212850	1					
ANR	1212915	PrimaryExpression	1		1212850	1					
ANR	1212916	Argument	sizeof ( ps_sd * )		1212850	2					
ANR	1212917	SizeofExpression	sizeof ( ps_sd * )		1212850	0					
ANR	1212918	Sizeof	sizeof		1212850	0					
ANR	1212919	SizeofOperand	ps_sd *		1212850	1					
ANR	1212920	IfStatement	if ( ! data -> hash )		1212850	6					
ANR	1212921	Condition	! data -> hash	242:5:5358:5368	1212850	0	True				
ANR	1212922	UnaryOperationExpression	! data -> hash		1212850	0					
ANR	1212923	UnaryOperator	!		1212850	0					
ANR	1212924	PtrMemberAccess	data -> hash		1212850	1					
ANR	1212925	Identifier	data		1212850	0					
ANR	1212926	Identifier	hash		1212850	1					
ANR	1212927	CompoundStatement		11:18:232:232	1212850	1					
ANR	1212928	ExpressionStatement	mm_destroy ( data -> mm )	243:2:5375:5395	1212850	0	True				
ANR	1212929	CallExpression	mm_destroy ( data -> mm )		1212850	0					
ANR	1212930	Callee	mm_destroy		1212850	0					
ANR	1212931	Identifier	mm_destroy		1212850	0					
ANR	1212932	ArgumentList	data -> mm		1212850	1					
ANR	1212933	Argument	data -> mm		1212850	0					
ANR	1212934	PtrMemberAccess	data -> mm		1212850	0					
ANR	1212935	Identifier	data		1212850	0					
ANR	1212936	Identifier	mm		1212850	1					
ANR	1212937	ReturnStatement	return FAILURE ;	244:2:5399:5413	1212850	1	True				
ANR	1212938	Identifier	FAILURE		1212850	0					
ANR	1212939	ReturnStatement	return SUCCESS ;	247:1:5420:5434	1212850	7	True				
ANR	1212940	Identifier	SUCCESS		1212850	0					
ANR	1212941	ReturnType	static int		1212850	1					
ANR	1212942	Identifier	ps_mm_initialize		1212850	2					
ANR	1212943	ParameterList	"ps_mm * data , const char * path"		1212850	3					
ANR	1212944	Parameter	ps_mm * data	231:28:5107:5117	1212850	0	True				
ANR	1212945	ParameterType	ps_mm *		1212850	0					
ANR	1212946	Identifier	data		1212850	1					
ANR	1212947	Parameter	const char * path	231:41:5120:5135	1212850	1	True				
ANR	1212948	ParameterType	const char *		1212850	0					
ANR	1212949	Identifier	path		1212850	1					
ANR	1212950	CFGEntryNode	ENTRY		1212850		True				
ANR	1212951	CFGExitNode	EXIT		1212850		True				
ANR	1212952	Symbol	mm_create		1212850						
ANR	1212953	Symbol	SUCCESS		1212850						
ANR	1212954	Symbol	data		1212850						
ANR	1212955	Symbol	data -> mm		1212850						
ANR	1212956	Symbol	FAILURE		1212850						
ANR	1212957	Symbol	data -> hash_cnt		1212850						
ANR	1212958	Symbol	data -> hash_max		1212850						
ANR	1212959	Symbol	path		1212850						
ANR	1212960	Symbol	data -> hash		1212850						
ANR	1212961	Symbol	* data		1212850						
ANR	1212962	Symbol	data -> owner		1212850						
ANR	1212963	Symbol	getpid		1212850						
ANR	1212964	Symbol	mm_calloc		1212850						
ANR	1212965	Function	ps_mm_destroy	250:0:5439:5909							
ANR	1212966	FunctionDef	ps_mm_destroy (ps_mm * data)		1212965	0					
ANR	1212967	CompoundStatement		251:0:5478:5909	1212965	0					
ANR	1212968	IdentifierDeclStatement	int h ;	252:1:5481:5486	1212965	0	True				
ANR	1212969	IdentifierDecl	h		1212965	0					
ANR	1212970	IdentifierDeclType	int		1212965	0					
ANR	1212971	Identifier	h		1212965	1					
ANR	1212972	IdentifierDeclStatement	"ps_sd * sd , * next ;"	253:1:5489:5505	1212965	1	True				
ANR	1212973	IdentifierDecl	* sd		1212965	0					
ANR	1212974	IdentifierDeclType	ps_sd *		1212965	0					
ANR	1212975	Identifier	sd		1212965	1					
ANR	1212976	IdentifierDecl	* next		1212965	1					
ANR	1212977	IdentifierDeclType	ps_sd *		1212965	0					
ANR	1212978	Identifier	next		1212965	1					
ANR	1212979	IfStatement	if ( data -> owner != getpid ( ) )		1212965	2					
ANR	1212980	Condition	data -> owner != getpid ( )	258:5:5656:5678	1212965	0	True				
ANR	1212981	EqualityExpression	data -> owner != getpid ( )		1212965	0		!=			
ANR	1212982	PtrMemberAccess	data -> owner		1212965	0					
ANR	1212983	Identifier	data		1212965	0					
ANR	1212984	Identifier	owner		1212965	1					
ANR	1212985	CallExpression	getpid ( )		1212965	1					
ANR	1212986	Callee	getpid		1212965	0					
ANR	1212987	Identifier	getpid		1212965	0					
ANR	1212988	ArgumentList			1212965	1					
ANR	1212989	CompoundStatement		8:30:202:202	1212965	1					
ANR	1212990	ReturnStatement	return ;	259:2:5685:5691	1212965	0	True				
ANR	1212991	ForStatement	for ( h = 0 ; h < data -> hash_max + 1 ; h ++ )		1212965	3					
ANR	1212992	ForInit	h = 0 ;	262:6:5703:5708	1212965	0	True				
ANR	1212993	AssignmentExpression	h = 0		1212965	0		=			
ANR	1212994	Identifier	h		1212965	0					
ANR	1212995	PrimaryExpression	0		1212965	1					
ANR	1212996	Condition	h < data -> hash_max + 1	262:13:5710:5731	1212965	1	True				
ANR	1212997	RelationalExpression	h < data -> hash_max + 1		1212965	0		<			
ANR	1212998	Identifier	h		1212965	0					
ANR	1212999	AdditiveExpression	data -> hash_max + 1		1212965	1		+			
ANR	1213000	PtrMemberAccess	data -> hash_max		1212965	0					
ANR	1213001	Identifier	data		1212965	0					
ANR	1213002	Identifier	hash_max		1212965	1					
ANR	1213003	PrimaryExpression	1		1212965	1					
ANR	1213004	PostIncDecOperationExpression	h ++	262:37:5734:5736	1212965	2	True				
ANR	1213005	Identifier	h		1212965	0					
ANR	1213006	IncDec	++		1212965	1					
ANR	1213007	CompoundStatement		12:42:260:260	1212965	3					
ANR	1213008	ForStatement	for ( sd = data -> hash [ h ] ; sd ; sd = next )		1212965	0					
ANR	1213009	ForInit	sd = data -> hash [ h ] ;	263:7:5748:5766	1212965	0	True				
ANR	1213010	AssignmentExpression	sd = data -> hash [ h ]		1212965	0		=			
ANR	1213011	Identifier	sd		1212965	0					
ANR	1213012	ArrayIndexing	data -> hash [ h ]		1212965	1					
ANR	1213013	PtrMemberAccess	data -> hash		1212965	0					
ANR	1213014	Identifier	data		1212965	0					
ANR	1213015	Identifier	hash		1212965	1					
ANR	1213016	Identifier	h		1212965	1					
ANR	1213017	Condition	sd	263:27:5768:5769	1212965	1	True				
ANR	1213018	Identifier	sd		1212965	0					
ANR	1213019	AssignmentExpression	sd = next	263:31:5772:5780	1212965	2	True	=			
ANR	1213020	Identifier	sd		1212965	0					
ANR	1213021	Identifier	next		1212965	1					
ANR	1213022	CompoundStatement		13:42:304:304	1212965	3					
ANR	1213023	ExpressionStatement	next = sd -> next	264:3:5788:5803	1212965	0	True				
ANR	1213024	AssignmentExpression	next = sd -> next		1212965	0		=			
ANR	1213025	Identifier	next		1212965	0					
ANR	1213026	PtrMemberAccess	sd -> next		1212965	1					
ANR	1213027	Identifier	sd		1212965	0					
ANR	1213028	Identifier	next		1212965	1					
ANR	1213029	ExpressionStatement	"ps_sd_destroy ( data , sd )"	265:3:5808:5831	1212965	1	True				
ANR	1213030	CallExpression	"ps_sd_destroy ( data , sd )"		1212965	0					
ANR	1213031	Callee	ps_sd_destroy		1212965	0					
ANR	1213032	Identifier	ps_sd_destroy		1212965	0					
ANR	1213033	ArgumentList	data		1212965	1					
ANR	1213034	Argument	data		1212965	0					
ANR	1213035	Identifier	data		1212965	0					
ANR	1213036	Argument	sd		1212965	1					
ANR	1213037	Identifier	sd		1212965	0					
ANR	1213038	ExpressionStatement	"mm_free ( data -> mm , data -> hash )"	269:1:5842:5871	1212965	4	True				
ANR	1213039	CallExpression	"mm_free ( data -> mm , data -> hash )"		1212965	0					
ANR	1213040	Callee	mm_free		1212965	0					
ANR	1213041	Identifier	mm_free		1212965	0					
ANR	1213042	ArgumentList	data -> mm		1212965	1					
ANR	1213043	Argument	data -> mm		1212965	0					
ANR	1213044	PtrMemberAccess	data -> mm		1212965	0					
ANR	1213045	Identifier	data		1212965	0					
ANR	1213046	Identifier	mm		1212965	1					
ANR	1213047	Argument	data -> hash		1212965	1					
ANR	1213048	PtrMemberAccess	data -> hash		1212965	0					
ANR	1213049	Identifier	data		1212965	0					
ANR	1213050	Identifier	hash		1212965	1					
ANR	1213051	ExpressionStatement	mm_destroy ( data -> mm )	270:1:5874:5894	1212965	5	True				
ANR	1213052	CallExpression	mm_destroy ( data -> mm )		1212965	0					
ANR	1213053	Callee	mm_destroy		1212965	0					
ANR	1213054	Identifier	mm_destroy		1212965	0					
ANR	1213055	ArgumentList	data -> mm		1212965	1					
ANR	1213056	Argument	data -> mm		1212965	0					
ANR	1213057	PtrMemberAccess	data -> mm		1212965	0					
ANR	1213058	Identifier	data		1212965	0					
ANR	1213059	Identifier	mm		1212965	1					
ANR	1213060	ExpressionStatement	free ( data )	271:1:5897:5907	1212965	6	True				
ANR	1213061	CallExpression	free ( data )		1212965	0					
ANR	1213062	Callee	free		1212965	0					
ANR	1213063	Identifier	free		1212965	0					
ANR	1213064	ArgumentList	data		1212965	1					
ANR	1213065	Argument	data		1212965	0					
ANR	1213066	Identifier	data		1212965	0					
ANR	1213067	ReturnType	static void		1212965	1					
ANR	1213068	Identifier	ps_mm_destroy		1212965	2					
ANR	1213069	ParameterList	ps_mm * data		1212965	3					
ANR	1213070	Parameter	ps_mm * data	250:26:5465:5475	1212965	0	True				
ANR	1213071	ParameterType	ps_mm *		1212965	0					
ANR	1213072	Identifier	data		1212965	1					
ANR	1213073	CFGEntryNode	ENTRY		1212965		True				
ANR	1213074	CFGExitNode	EXIT		1212965		True				
ANR	1213075	Symbol	next		1212965						
ANR	1213076	Symbol	* * data		1212965						
ANR	1213077	Symbol	data		1212965						
ANR	1213078	Symbol	h		1212965						
ANR	1213079	Symbol	sd -> next		1212965						
ANR	1213080	Symbol	data -> mm		1212965						
ANR	1213081	Symbol	data -> hash_max		1212965						
ANR	1213082	Symbol	sd		1212965						
ANR	1213083	Symbol	* h		1212965						
ANR	1213084	Symbol	* sd		1212965						
ANR	1213085	Symbol	data -> hash		1212965						
ANR	1213086	Symbol	* data		1212965						
ANR	1213087	Symbol	data -> owner		1212965						
ANR	1213088	Symbol	getpid		1212965						
ANR	1213089	Symbol	* data -> hash		1212965						
ANR	1213090	DeclStmt									
ANR	1213091	Decl							int	int	save_path_len
ANR	1213092	DeclStmt									
ANR	1213093	Decl							int	int	mod_name_len
ANR	1213094	DeclStmt									
ANR	1213095	Decl							int	int	euid_len
ANR	1213096	DeclStmt									
ANR	1213097	Decl							char	char *	ps_mm_path
ANR	1213098	Decl							char	char [ 30 ]	euid
ANR	1213099	DeclStmt									
ANR	1213100	Decl							int	int	ret
ANR	1213101	DeclStmt									
ANR	1213102	Decl							ps_sd	ps_sd *	sd
ANR	1213103	DeclStmt									
ANR	1213104	Decl							int	int	ret
ANR	1213105	DeclStmt									
ANR	1213106	Decl							ps_sd	ps_sd *	sd
ANR	1213107	DeclStmt									
ANR	1213108	Decl							ps_sd	ps_sd *	sd
ANR	1213109	DeclStmt									
ANR	1213110	Decl							time_t	time_t	limit
ANR	1213111	DeclStmt									
ANR	1213112	Decl							ps_sd	ps_sd * *	ohash
ANR	1213113	Decl							ps_sd	ps_sd * *	ehash
ANR	1213114	DeclStmt									
ANR	1213115	Decl							ps_sd	ps_sd *	sd
ANR	1213116	Decl							ps_sd	ps_sd *	next
ANR	1213117	DeclStmt									
ANR	1213118	Decl							char	char *	sid
ANR	1213119	DeclStmt									
ANR	1213120	Decl							int	int	maxfail
