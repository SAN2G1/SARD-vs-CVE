command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	314597	File	data/converged/CVE-2017-11142_php-src/ext_ereg_regex_split.c								
ANR	314598	DeclStmt									
ANR	314599	Decl							char	char *	string
ANR	314600	DeclStmt									
ANR	314601	Decl							char	char * [ ]	fields
ANR	314602	DeclStmt									
ANR	314603	Decl							int	int	nfields
ANR	314604	DeclStmt									
ANR	314605	Decl							char	char *	sep
ANR	314606	DeclStmt									
ANR	314607	Decl							char	char *	p
ANR	314608	DeclStmt									
ANR	314609	Decl							char	char	c
ANR	314610	DeclStmt									
ANR	314611	Decl							char	char	sepc
ANR	314612	DeclStmt									
ANR	314613	Decl							char	char	sepc2
ANR	314614	DeclStmt									
ANR	314615	Decl							int	int	fn
ANR	314616	DeclStmt									
ANR	314617	Decl							char	char * *	fp
ANR	314618	DeclStmt									
ANR	314619	Decl							char	char *	sepp
ANR	314620	DeclStmt									
ANR	314621	Decl							int	int	trimtrail
ANR	314622	DeclStmt									
ANR	314623	Decl							int	int	argc
ANR	314624	DeclStmt									
ANR	314625	Decl							char	char * [ ]	argv
ANR	314626	DeclStmt									
ANR	314627	Decl							char	char [ 512 ]	buf
ANR	314628	DeclStmt									
ANR	314629	Decl							int	int	n
ANR	314630	DeclStmt									
ANR	314631	Decl							char	char * [ MNF ]	fields
ANR	314632	DeclStmt									
ANR	314633	Decl							char	char *	string
ANR	314634	DeclStmt									
ANR	314635	Decl							char	char *	seps
ANR	314636	DeclStmt									
ANR	314637	Decl							char	char * [ NF ]	fields
ANR	314638	DeclStmt									
ANR	314639	Decl							int	int	nf
ANR	314640	DeclStmt									
ANR	314641	Decl							int	int	nf
ANR	314642	DeclStmt									
ANR	314643	Decl							int	int	nfp
ANR	314644	DeclStmt									
ANR	314645	Decl							char	char * [ ]	fields
ANR	314646	DeclStmt									
ANR	314647	Decl							int	int	fn
ANR	314648	DeclStmt									
ANR	314649	Decl							int	int	bound
ANR	314650	ClassDef	<unnamed>	209:0:4008:6128							
ANR	314651	DeclStmt									
ANR	314652	Decl							char	char *	str
ANR	314653	DeclStmt									
ANR	314654	Decl							char	char *	seps
ANR	314655	DeclStmt									
ANR	314656	Decl							int	int	nf
ANR	314657	DeclStmt									
ANR	314658	Decl							char	char * [ RNF ]	fi
ANR	314659	DeclStmt									
ANR	314660	Decl								 [ ]	tests
ANR	314661	Function	regress	277:0:6131:7052							
ANR	314662	FunctionDef	regress ()		314661	0					
ANR	314663	CompoundStatement		278:0:6141:7052	314661	0					
ANR	314664	IdentifierDeclStatement	char buf [ 512 ] ;	279:1:6144:6157	314661	0	True				
ANR	314665	IdentifierDecl	buf [ 512 ]		314661	0					
ANR	314666	IdentifierDeclType	char [ 512 ]		314661	0					
ANR	314667	Identifier	buf		314661	1					
ANR	314668	PrimaryExpression	512		314661	2					
ANR	314669	Statement	register	280:1:6160:6167	314661	1	True				
ANR	314670	IdentifierDeclStatement	int n ;	280:10:6169:6174	314661	2	True				
ANR	314671	IdentifierDecl	n		314661	0					
ANR	314672	IdentifierDeclType	int		314661	0					
ANR	314673	Identifier	n		314661	1					
ANR	314674	IdentifierDeclStatement	char * fields [ RNF + 1 ] ;	281:1:6177:6196	314661	3	True				
ANR	314675	IdentifierDecl	* fields [ RNF + 1 ]		314661	0					
ANR	314676	IdentifierDeclType	char * [ RNF + 1 ]		314661	0					
ANR	314677	Identifier	fields		314661	1					
ANR	314678	AdditiveExpression	RNF + 1		314661	2		+			
ANR	314679	Identifier	RNF		314661	0					
ANR	314680	PrimaryExpression	1		314661	1					
ANR	314681	Statement	register	282:1:6199:6206	314661	4	True				
ANR	314682	IdentifierDeclStatement	int nf ;	282:10:6208:6214	314661	5	True				
ANR	314683	IdentifierDecl	nf		314661	0					
ANR	314684	IdentifierDeclType	int		314661	0					
ANR	314685	Identifier	nf		314661	1					
ANR	314686	Statement	register	283:1:6217:6224	314661	6	True				
ANR	314687	IdentifierDeclStatement	int i ;	283:10:6226:6231	314661	7	True				
ANR	314688	IdentifierDecl	i		314661	0					
ANR	314689	IdentifierDeclType	int		314661	0					
ANR	314690	Identifier	i		314661	1					
ANR	314691	Statement	register	284:1:6234:6241	314661	8	True				
ANR	314692	IdentifierDeclStatement	int printit ;	284:10:6243:6254	314661	9	True				
ANR	314693	IdentifierDecl	printit		314661	0					
ANR	314694	IdentifierDeclType	int		314661	0					
ANR	314695	Identifier	printit		314661	1					
ANR	314696	Statement	register	285:1:6257:6264	314661	10	True				
ANR	314697	IdentifierDeclStatement	char * f ;	285:10:6266:6273	314661	11	True				
ANR	314698	IdentifierDecl	* f		314661	0					
ANR	314699	IdentifierDeclType	char *		314661	0					
ANR	314700	Identifier	f		314661	1					
ANR	314701	ForStatement	for ( n = 0 ; tests [ n ] . str != NULL ; n ++ )		314661	12					
ANR	314702	ForInit	n = 0 ;	287:6:6282:6287	314661	0	True				
ANR	314703	AssignmentExpression	n = 0		314661	0		=			
ANR	314704	Identifier	n		314661	0					
ANR	314705	PrimaryExpression	0		314661	1					
ANR	314706	Condition	tests [ n ] . str != NULL	287:13:6289:6308	314661	1	True				
ANR	314707	EqualityExpression	tests [ n ] . str != NULL		314661	0		!=			
ANR	314708	MemberAccess	tests [ n ] . str		314661	0					
ANR	314709	ArrayIndexing	tests [ n ]		314661	0					
ANR	314710	Identifier	tests		314661	0					
ANR	314711	Identifier	n		314661	1					
ANR	314712	Identifier	str		314661	1					
ANR	314713	Identifier	NULL		314661	1					
ANR	314714	PostIncDecOperationExpression	n ++	287:35:6311:6313	314661	2	True				
ANR	314715	Identifier	n		314661	0					
ANR	314716	IncDec	++		314661	1					
ANR	314717	CompoundStatement		10:40:174:174	314661	3					
ANR	314718	ExpressionStatement	"( void ) strcpy ( buf , tests [ n ] . str )"	288:2:6320:6352	314661	0	True				
ANR	314719	CastExpression	"( void ) strcpy ( buf , tests [ n ] . str )"		314661	0					
ANR	314720	CastTarget	void		314661	0					
ANR	314721	CallExpression	"strcpy ( buf , tests [ n ] . str )"		314661	1					
ANR	314722	Callee	strcpy		314661	0					
ANR	314723	Identifier	strcpy		314661	0					
ANR	314724	ArgumentList	buf		314661	1					
ANR	314725	Argument	buf		314661	0					
ANR	314726	Identifier	buf		314661	0					
ANR	314727	Argument	tests [ n ] . str		314661	1					
ANR	314728	MemberAccess	tests [ n ] . str		314661	0					
ANR	314729	ArrayIndexing	tests [ n ]		314661	0					
ANR	314730	Identifier	tests		314661	0					
ANR	314731	Identifier	n		314661	1					
ANR	314732	Identifier	str		314661	1					
ANR	314733	ExpressionStatement	fields [ RNF ] = NULL	289:2:6356:6374	314661	1	True				
ANR	314734	AssignmentExpression	fields [ RNF ] = NULL		314661	0		=			
ANR	314735	ArrayIndexing	fields [ RNF ]		314661	0					
ANR	314736	Identifier	fields		314661	0					
ANR	314737	Identifier	RNF		314661	1					
ANR	314738	Identifier	NULL		314661	1					
ANR	314739	ExpressionStatement	"nf = split ( buf , fields , RNF , tests [ n ] . seps )"	290:2:6378:6421	314661	2	True				
ANR	314740	AssignmentExpression	"nf = split ( buf , fields , RNF , tests [ n ] . seps )"		314661	0		=			
ANR	314741	Identifier	nf		314661	0					
ANR	314742	CallExpression	"split ( buf , fields , RNF , tests [ n ] . seps )"		314661	1					
ANR	314743	Callee	split		314661	0					
ANR	314744	Identifier	split		314661	0					
ANR	314745	ArgumentList	buf		314661	1					
ANR	314746	Argument	buf		314661	0					
ANR	314747	Identifier	buf		314661	0					
ANR	314748	Argument	fields		314661	1					
ANR	314749	Identifier	fields		314661	0					
ANR	314750	Argument	RNF		314661	2					
ANR	314751	Identifier	RNF		314661	0					
ANR	314752	Argument	tests [ n ] . seps		314661	3					
ANR	314753	MemberAccess	tests [ n ] . seps		314661	0					
ANR	314754	ArrayIndexing	tests [ n ]		314661	0					
ANR	314755	Identifier	tests		314661	0					
ANR	314756	Identifier	n		314661	1					
ANR	314757	Identifier	seps		314661	1					
ANR	314758	ExpressionStatement	printit = 0	291:2:6425:6436	314661	3	True				
ANR	314759	AssignmentExpression	printit = 0		314661	0		=			
ANR	314760	Identifier	printit		314661	0					
ANR	314761	PrimaryExpression	0		314661	1					
ANR	314762	IfStatement	if ( nf != tests [ n ] . nf )		314661	4					
ANR	314763	Condition	nf != tests [ n ] . nf	292:6:6444:6460	314661	0	True				
ANR	314764	EqualityExpression	nf != tests [ n ] . nf		314661	0		!=			
ANR	314765	Identifier	nf		314661	0					
ANR	314766	MemberAccess	tests [ n ] . nf		314661	1					
ANR	314767	ArrayIndexing	tests [ n ]		314661	0					
ANR	314768	Identifier	tests		314661	0					
ANR	314769	Identifier	n		314661	1					
ANR	314770	Identifier	nf		314661	1					
ANR	314771	CompoundStatement		15:25:321:321	314661	1					
ANR	314772	ExpressionStatement	"printf ( ""split `%s' by `%s' gave %d fields, not %d\\n"" , tests [ n ] . str , tests [ n ] . seps , nf , tests [ n ] . nf )"	293:3:6468:6571	314661	0	True				
ANR	314773	CallExpression	"printf ( ""split `%s' by `%s' gave %d fields, not %d\\n"" , tests [ n ] . str , tests [ n ] . seps , nf , tests [ n ] . nf )"		314661	0					
ANR	314774	Callee	printf		314661	0					
ANR	314775	Identifier	printf		314661	0					
ANR	314776	ArgumentList	"""split `%s' by `%s' gave %d fields, not %d\\n"""		314661	1					
ANR	314777	Argument	"""split `%s' by `%s' gave %d fields, not %d\\n"""		314661	0					
ANR	314778	PrimaryExpression	"""split `%s' by `%s' gave %d fields, not %d\\n"""		314661	0					
ANR	314779	Argument	tests [ n ] . str		314661	1					
ANR	314780	MemberAccess	tests [ n ] . str		314661	0					
ANR	314781	ArrayIndexing	tests [ n ]		314661	0					
ANR	314782	Identifier	tests		314661	0					
ANR	314783	Identifier	n		314661	1					
ANR	314784	Identifier	str		314661	1					
ANR	314785	Argument	tests [ n ] . seps		314661	2					
ANR	314786	MemberAccess	tests [ n ] . seps		314661	0					
ANR	314787	ArrayIndexing	tests [ n ]		314661	0					
ANR	314788	Identifier	tests		314661	0					
ANR	314789	Identifier	n		314661	1					
ANR	314790	Identifier	seps		314661	1					
ANR	314791	Argument	nf		314661	3					
ANR	314792	Identifier	nf		314661	0					
ANR	314793	Argument	tests [ n ] . nf		314661	4					
ANR	314794	MemberAccess	tests [ n ] . nf		314661	0					
ANR	314795	ArrayIndexing	tests [ n ]		314661	0					
ANR	314796	Identifier	tests		314661	0					
ANR	314797	Identifier	n		314661	1					
ANR	314798	Identifier	nf		314661	1					
ANR	314799	ExpressionStatement	printit = 1	295:3:6576:6587	314661	1	True				
ANR	314800	AssignmentExpression	printit = 1		314661	0		=			
ANR	314801	Identifier	printit		314661	0					
ANR	314802	PrimaryExpression	1		314661	1					
ANR	314803	ElseStatement	else		314661	0					
ANR	314804	IfStatement	if ( fields [ RNF ] != NULL )		314661	0					
ANR	314805	Condition	fields [ RNF ] != NULL	296:13:6602:6620	314661	0	True				
ANR	314806	EqualityExpression	fields [ RNF ] != NULL		314661	0		!=			
ANR	314807	ArrayIndexing	fields [ RNF ]		314661	0					
ANR	314808	Identifier	fields		314661	0					
ANR	314809	Identifier	RNF		314661	1					
ANR	314810	Identifier	NULL		314661	1					
ANR	314811	CompoundStatement		19:34:481:481	314661	1					
ANR	314812	ExpressionStatement	"printf ( ""split() went beyond array end\\n"" )"	297:3:6628:6669	314661	0	True				
ANR	314813	CallExpression	"printf ( ""split() went beyond array end\\n"" )"		314661	0					
ANR	314814	Callee	printf		314661	0					
ANR	314815	Identifier	printf		314661	0					
ANR	314816	ArgumentList	"""split() went beyond array end\\n"""		314661	1					
ANR	314817	Argument	"""split() went beyond array end\\n"""		314661	0					
ANR	314818	PrimaryExpression	"""split() went beyond array end\\n"""		314661	0					
ANR	314819	ExpressionStatement	printit = 1	298:3:6674:6685	314661	1	True				
ANR	314820	AssignmentExpression	printit = 1		314661	0		=			
ANR	314821	Identifier	printit		314661	0					
ANR	314822	PrimaryExpression	1		314661	1					
ANR	314823	ElseStatement	else		314661	0					
ANR	314824	CompoundStatement		22:9:554:554	314661	0					
ANR	314825	ForStatement	for ( i = 0 ; i < nf && i < RNF ; i ++ )		314661	0					
ANR	314826	ForInit	i = 0 ;	300:8:6706:6711	314661	0	True				
ANR	314827	AssignmentExpression	i = 0		314661	0		=			
ANR	314828	Identifier	i		314661	0					
ANR	314829	PrimaryExpression	0		314661	1					
ANR	314830	Condition	i < nf && i < RNF	300:15:6713:6729	314661	1	True				
ANR	314831	AndExpression	i < nf && i < RNF		314661	0		&&			
ANR	314832	RelationalExpression	i < nf		314661	0		<			
ANR	314833	Identifier	i		314661	0					
ANR	314834	Identifier	nf		314661	1					
ANR	314835	RelationalExpression	i < RNF		314661	1		<			
ANR	314836	Identifier	i		314661	0					
ANR	314837	Identifier	RNF		314661	1					
ANR	314838	PostIncDecOperationExpression	i ++	300:34:6732:6734	314661	2	True				
ANR	314839	Identifier	i		314661	0					
ANR	314840	IncDec	++		314661	1					
ANR	314841	CompoundStatement		23:39:595:595	314661	3					
ANR	314842	ExpressionStatement	f = fields [ i ]	301:4:6743:6756	314661	0	True				
ANR	314843	AssignmentExpression	f = fields [ i ]		314661	0		=			
ANR	314844	Identifier	f		314661	0					
ANR	314845	ArrayIndexing	fields [ i ]		314661	1					
ANR	314846	Identifier	fields		314661	0					
ANR	314847	Identifier	i		314661	1					
ANR	314848	IfStatement	if ( f == NULL )		314661	1					
ANR	314849	Condition	f == NULL	302:8:6766:6774	314661	0	True				
ANR	314850	EqualityExpression	f == NULL		314661	0		==			
ANR	314851	Identifier	f		314661	0					
ANR	314852	Identifier	NULL		314661	1					
ANR	314853	ExpressionStatement	"f = ""(NULL)"""	303:5:6782:6794	314661	1	True				
ANR	314854	AssignmentExpression	"f = ""(NULL)"""		314661	0		=			
ANR	314855	Identifier	f		314661	0					
ANR	314856	PrimaryExpression	"""(NULL)"""		314661	1					
ANR	314857	IfStatement	"if ( strcmp ( f , tests [ n ] . fi [ i ] ) != 0 )"		314661	2					
ANR	314858	Condition	"strcmp ( f , tests [ n ] . fi [ i ] ) != 0"	304:8:6804:6833	314661	0	True				
ANR	314859	EqualityExpression	"strcmp ( f , tests [ n ] . fi [ i ] ) != 0"		314661	0		!=			
ANR	314860	CallExpression	"strcmp ( f , tests [ n ] . fi [ i ] )"		314661	0					
ANR	314861	Callee	strcmp		314661	0					
ANR	314862	Identifier	strcmp		314661	0					
ANR	314863	ArgumentList	f		314661	1					
ANR	314864	Argument	f		314661	0					
ANR	314865	Identifier	f		314661	0					
ANR	314866	Argument	tests [ n ] . fi [ i ]		314661	1					
ANR	314867	ArrayIndexing	tests [ n ] . fi [ i ]		314661	0					
ANR	314868	MemberAccess	tests [ n ] . fi		314661	0					
ANR	314869	ArrayIndexing	tests [ n ]		314661	0					
ANR	314870	Identifier	tests		314661	0					
ANR	314871	Identifier	n		314661	1					
ANR	314872	Identifier	fi		314661	1					
ANR	314873	Identifier	i		314661	1					
ANR	314874	PrimaryExpression	0		314661	1					
ANR	314875	CompoundStatement		27:40:694:694	314661	1					
ANR	314876	ExpressionStatement	"printf ( ""split `%s' by `%s', field %d is `%s', not `%s'\\n"" , tests [ n ] . str , tests [ n ] . seps , i , fields [ i ] , tests [ n ] . fi [ i ] )"	305:5:6843:6972	314661	0	True				
ANR	314877	CallExpression	"printf ( ""split `%s' by `%s', field %d is `%s', not `%s'\\n"" , tests [ n ] . str , tests [ n ] . seps , i , fields [ i ] , tests [ n ] . fi [ i ] )"		314661	0					
ANR	314878	Callee	printf		314661	0					
ANR	314879	Identifier	printf		314661	0					
ANR	314880	ArgumentList	"""split `%s' by `%s', field %d is `%s', not `%s'\\n"""		314661	1					
ANR	314881	Argument	"""split `%s' by `%s', field %d is `%s', not `%s'\\n"""		314661	0					
ANR	314882	PrimaryExpression	"""split `%s' by `%s', field %d is `%s', not `%s'\\n"""		314661	0					
ANR	314883	Argument	tests [ n ] . str		314661	1					
ANR	314884	MemberAccess	tests [ n ] . str		314661	0					
ANR	314885	ArrayIndexing	tests [ n ]		314661	0					
ANR	314886	Identifier	tests		314661	0					
ANR	314887	Identifier	n		314661	1					
ANR	314888	Identifier	str		314661	1					
ANR	314889	Argument	tests [ n ] . seps		314661	2					
ANR	314890	MemberAccess	tests [ n ] . seps		314661	0					
ANR	314891	ArrayIndexing	tests [ n ]		314661	0					
ANR	314892	Identifier	tests		314661	0					
ANR	314893	Identifier	n		314661	1					
ANR	314894	Identifier	seps		314661	1					
ANR	314895	Argument	i		314661	3					
ANR	314896	Identifier	i		314661	0					
ANR	314897	Argument	fields [ i ]		314661	4					
ANR	314898	ArrayIndexing	fields [ i ]		314661	0					
ANR	314899	Identifier	fields		314661	0					
ANR	314900	Identifier	i		314661	1					
ANR	314901	Argument	tests [ n ] . fi [ i ]		314661	5					
ANR	314902	ArrayIndexing	tests [ n ] . fi [ i ]		314661	0					
ANR	314903	MemberAccess	tests [ n ] . fi		314661	0					
ANR	314904	ArrayIndexing	tests [ n ]		314661	0					
ANR	314905	Identifier	tests		314661	0					
ANR	314906	Identifier	n		314661	1					
ANR	314907	Identifier	fi		314661	1					
ANR	314908	Identifier	i		314661	1					
ANR	314909	ExpressionStatement	printit = 1	308:5:6979:6990	314661	1	True				
ANR	314910	AssignmentExpression	printit = 1		314661	0		=			
ANR	314911	Identifier	printit		314661	0					
ANR	314912	PrimaryExpression	1		314661	1					
ANR	314913	IfStatement	if ( printit )		314661	5					
ANR	314914	Condition	printit	312:6:7013:7019	314661	0	True				
ANR	314915	Identifier	printit		314661	0					
ANR	314916	ExpressionStatement	"print ( nf , RNF , fields )"	313:3:7025:7047	314661	1	True				
ANR	314917	CallExpression	"print ( nf , RNF , fields )"		314661	0					
ANR	314918	Callee	print		314661	0					
ANR	314919	Identifier	print		314661	0					
ANR	314920	ArgumentList	nf		314661	1					
ANR	314921	Argument	nf		314661	0					
ANR	314922	Identifier	nf		314661	0					
ANR	314923	Argument	RNF		314661	1					
ANR	314924	Identifier	RNF		314661	0					
ANR	314925	Argument	fields		314661	2					
ANR	314926	Identifier	fields		314661	0					
ANR	314927	Identifier	regress		314661	1					
ANR	314928	ParameterList			314661	2					
ANR	314929	CFGEntryNode	ENTRY		314661		True				
ANR	314930	CFGExitNode	EXIT		314661		True				
ANR	314931	Symbol	strcmp		314661						
ANR	314932	Symbol	NULL		314661						
ANR	314933	Symbol	tests [ n ] . fi		314661						
ANR	314934	Symbol	printit		314661						
ANR	314935	Symbol	tests [ n ] . str		314661						
ANR	314936	Symbol	f		314661						
ANR	314937	Symbol	* * tests		314661						
ANR	314938	Symbol	i		314661						
ANR	314939	Symbol	tests [ n ] . nf		314661						
ANR	314940	Symbol	RNF		314661						
ANR	314941	Symbol	* RNF		314661						
ANR	314942	Symbol	n		314661						
ANR	314943	Symbol	* fields		314661						
ANR	314944	Symbol	* tests [ n ] . fi		314661						
ANR	314945	Symbol	buf		314661						
ANR	314946	Symbol	tests		314661						
ANR	314947	Symbol	split		314661						
ANR	314948	Symbol	* i		314661						
ANR	314949	Symbol	nf		314661						
ANR	314950	Symbol	* tests		314661						
ANR	314951	Symbol	* n		314661						
ANR	314952	Symbol	tests [ n ] . seps		314661						
ANR	314953	Symbol	fields		314661						
ANR	314954	Symbol	* * n		314661						
