command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1208216	File	data/converged/CVE-2017-11142_php-src/ext_readline_readline_cli.c								
ANR	1208217	DeclStmt									
ANR	1208218	Decl							char	char	php_last_char
ANR	1208219	DeclStmt									
ANR	1208220	Decl							FILE	FILE *	pager_pipe
ANR	1208221	Function	readline_shell_write	86:0:2403:2805							
ANR	1208222	FunctionDef	"readline_shell_write (const char * str , uint str_length TSRMLS_DC)"		1208221	0					
ANR	1208223	CompoundStatement		87:0:2492:2805	1208221	0					
ANR	1208224	IfStatement	if ( CLIR_G ( prompt_str ) )		1208221	0					
ANR	1208225	Condition	CLIR_G ( prompt_str )	88:5:2499:2516	1208221	0	True				
ANR	1208226	CallExpression	CLIR_G ( prompt_str )		1208221	0					
ANR	1208227	Callee	CLIR_G		1208221	0					
ANR	1208228	Identifier	CLIR_G		1208221	0					
ANR	1208229	ArgumentList	prompt_str		1208221	1					
ANR	1208230	Argument	prompt_str		1208221	0					
ANR	1208231	Identifier	prompt_str		1208221	0					
ANR	1208232	CompoundStatement		2:25:26:26	1208221	1					
ANR	1208233	ExpressionStatement	"smart_str_appendl ( CLIR_G ( prompt_str ) , str , str_length )"	89:2:2523:2577	1208221	0	True				
ANR	1208234	CallExpression	"smart_str_appendl ( CLIR_G ( prompt_str ) , str , str_length )"		1208221	0					
ANR	1208235	Callee	smart_str_appendl		1208221	0					
ANR	1208236	Identifier	smart_str_appendl		1208221	0					
ANR	1208237	ArgumentList	CLIR_G ( prompt_str )		1208221	1					
ANR	1208238	Argument	CLIR_G ( prompt_str )		1208221	0					
ANR	1208239	CallExpression	CLIR_G ( prompt_str )		1208221	0					
ANR	1208240	Callee	CLIR_G		1208221	0					
ANR	1208241	Identifier	CLIR_G		1208221	0					
ANR	1208242	ArgumentList	prompt_str		1208221	1					
ANR	1208243	Argument	prompt_str		1208221	0					
ANR	1208244	Identifier	prompt_str		1208221	0					
ANR	1208245	Argument	str		1208221	1					
ANR	1208246	Identifier	str		1208221	0					
ANR	1208247	Argument	str_length		1208221	2					
ANR	1208248	Identifier	str_length		1208221	0					
ANR	1208249	ReturnStatement	return str_length ;	90:2:2581:2598	1208221	1	True				
ANR	1208250	Identifier	str_length		1208221	0					
ANR	1208251	IfStatement	if ( CLIR_G ( pager ) && * CLIR_G ( pager ) && ! pager_pipe )		1208221	1					
ANR	1208252	Condition	CLIR_G ( pager ) && * CLIR_G ( pager ) && ! pager_pipe	93:5:2609:2654	1208221	0	True				
ANR	1208253	AndExpression	CLIR_G ( pager ) && * CLIR_G ( pager ) && ! pager_pipe		1208221	0		&&			
ANR	1208254	CallExpression	CLIR_G ( pager )		1208221	0					
ANR	1208255	Callee	CLIR_G		1208221	0					
ANR	1208256	Identifier	CLIR_G		1208221	0					
ANR	1208257	ArgumentList	pager		1208221	1					
ANR	1208258	Argument	pager		1208221	0					
ANR	1208259	Identifier	pager		1208221	0					
ANR	1208260	AndExpression	* CLIR_G ( pager ) && ! pager_pipe		1208221	1		&&			
ANR	1208261	UnaryOperationExpression	* CLIR_G ( pager )		1208221	0					
ANR	1208262	UnaryOperator	*		1208221	0					
ANR	1208263	CallExpression	CLIR_G ( pager )		1208221	1					
ANR	1208264	Callee	CLIR_G		1208221	0					
ANR	1208265	Identifier	CLIR_G		1208221	0					
ANR	1208266	ArgumentList	pager		1208221	1					
ANR	1208267	Argument	pager		1208221	0					
ANR	1208268	Identifier	pager		1208221	0					
ANR	1208269	UnaryOperationExpression	! pager_pipe		1208221	1					
ANR	1208270	UnaryOperator	!		1208221	0					
ANR	1208271	Identifier	pager_pipe		1208221	1					
ANR	1208272	CompoundStatement		7:53:164:164	1208221	1					
ANR	1208273	ExpressionStatement	"pager_pipe = VCWD_POPEN ( CLIR_G ( pager ) , ""w"" )"	94:2:2661:2704	1208221	0	True				
ANR	1208274	AssignmentExpression	"pager_pipe = VCWD_POPEN ( CLIR_G ( pager ) , ""w"" )"		1208221	0		=			
ANR	1208275	Identifier	pager_pipe		1208221	0					
ANR	1208276	CallExpression	"VCWD_POPEN ( CLIR_G ( pager ) , ""w"" )"		1208221	1					
ANR	1208277	Callee	VCWD_POPEN		1208221	0					
ANR	1208278	Identifier	VCWD_POPEN		1208221	0					
ANR	1208279	ArgumentList	CLIR_G ( pager )		1208221	1					
ANR	1208280	Argument	CLIR_G ( pager )		1208221	0					
ANR	1208281	CallExpression	CLIR_G ( pager )		1208221	0					
ANR	1208282	Callee	CLIR_G		1208221	0					
ANR	1208283	Identifier	CLIR_G		1208221	0					
ANR	1208284	ArgumentList	pager		1208221	1					
ANR	1208285	Argument	pager		1208221	0					
ANR	1208286	Identifier	pager		1208221	0					
ANR	1208287	Argument	"""w"""		1208221	1					
ANR	1208288	PrimaryExpression	"""w"""		1208221	0					
ANR	1208289	IfStatement	if ( pager_pipe )		1208221	2					
ANR	1208290	Condition	pager_pipe	96:5:2714:2723	1208221	0	True				
ANR	1208291	Identifier	pager_pipe		1208221	0					
ANR	1208292	CompoundStatement		10:17:233:233	1208221	1					
ANR	1208293	ReturnStatement	"return fwrite ( str , 1 , MIN ( str_length , 16384 ) , pager_pipe ) ;"	97:2:2730:2787	1208221	0	True				
ANR	1208294	CallExpression	"fwrite ( str , 1 , MIN ( str_length , 16384 ) , pager_pipe )"		1208221	0					
ANR	1208295	Callee	fwrite		1208221	0					
ANR	1208296	Identifier	fwrite		1208221	0					
ANR	1208297	ArgumentList	str		1208221	1					
ANR	1208298	Argument	str		1208221	0					
ANR	1208299	Identifier	str		1208221	0					
ANR	1208300	Argument	1		1208221	1					
ANR	1208301	PrimaryExpression	1		1208221	0					
ANR	1208302	Argument	"MIN ( str_length , 16384 )"		1208221	2					
ANR	1208303	CallExpression	"MIN ( str_length , 16384 )"		1208221	0					
ANR	1208304	Callee	MIN		1208221	0					
ANR	1208305	Identifier	MIN		1208221	0					
ANR	1208306	ArgumentList	str_length		1208221	1					
ANR	1208307	Argument	str_length		1208221	0					
ANR	1208308	Identifier	str_length		1208221	0					
ANR	1208309	Argument	16384		1208221	1					
ANR	1208310	PrimaryExpression	16384		1208221	0					
ANR	1208311	Argument	pager_pipe		1208221	3					
ANR	1208312	Identifier	pager_pipe		1208221	0					
ANR	1208313	ReturnStatement	return - 1 ;	100:1:2794:2803	1208221	3	True				
ANR	1208314	UnaryOperationExpression	- 1		1208221	0					
ANR	1208315	UnaryOperator	-		1208221	0					
ANR	1208316	PrimaryExpression	1		1208221	1					
ANR	1208317	ReturnType	static size_t		1208221	1					
ANR	1208318	Identifier	readline_shell_write		1208221	2					
ANR	1208319	ParameterList	"const char * str , uint str_length TSRMLS_DC"		1208221	3					
ANR	1208320	Parameter	const char * str	86:35:2438:2452	1208221	0	True				
ANR	1208321	ParameterType	const char *		1208221	0					
ANR	1208322	Identifier	str		1208221	1					
ANR	1208323	Parameter	uint str_length TSRMLS_DC	86:52:2455:2479	1208221	1	True				
ANR	1208324	ParameterType	uint str_length		1208221	0					
ANR	1208325	Identifier	TSRMLS_DC		1208221	1					
ANR	1208326	CFGEntryNode	ENTRY		1208221		True				
ANR	1208327	CFGExitNode	EXIT		1208221		True				
ANR	1208328	Symbol	str		1208221						
ANR	1208329	Symbol	str_length		1208221						
ANR	1208330	Symbol	MIN		1208221						
ANR	1208331	Symbol	prompt_str		1208221						
ANR	1208332	Symbol	pager		1208221						
ANR	1208333	Symbol	* CLIR_G ( pager )		1208221						
ANR	1208334	Symbol	fwrite		1208221						
ANR	1208335	Symbol	CLIR_G		1208221						
ANR	1208336	Symbol	TSRMLS_DC		1208221						
ANR	1208337	Symbol	* CLIR_G		1208221						
ANR	1208338	Symbol	VCWD_POPEN		1208221						
ANR	1208339	Symbol	pager_pipe		1208221						
ANR	1208340	Function	readline_shell_ub_write	104:0:2818:3122							
ANR	1208341	FunctionDef	"readline_shell_ub_write (const char * str , uint str_length TSRMLS_DC)"		1208340	0					
ANR	1208342	CompoundStatement		105:0:2907:3122	1208340	0					
ANR	1208343	ExpressionStatement	php_last_char = str [ str_length - 1 ]	109:1:3075:3108	1208340	0	True				
ANR	1208344	AssignmentExpression	php_last_char = str [ str_length - 1 ]		1208340	0		=			
ANR	1208345	Identifier	php_last_char		1208340	0					
ANR	1208346	ArrayIndexing	str [ str_length - 1 ]		1208340	1					
ANR	1208347	Identifier	str		1208340	0					
ANR	1208348	AdditiveExpression	str_length - 1		1208340	1		-			
ANR	1208349	Identifier	str_length		1208340	0					
ANR	1208350	PrimaryExpression	1		1208340	1					
ANR	1208351	ReturnStatement	return - 1 ;	110:1:3111:3120	1208340	1	True				
ANR	1208352	UnaryOperationExpression	- 1		1208340	0					
ANR	1208353	UnaryOperator	-		1208340	0					
ANR	1208354	PrimaryExpression	1		1208340	1					
ANR	1208355	ReturnType	static int		1208340	1					
ANR	1208356	Identifier	readline_shell_ub_write		1208340	2					
ANR	1208357	ParameterList	"const char * str , uint str_length TSRMLS_DC"		1208340	3					
ANR	1208358	Parameter	const char * str	104:35:2853:2867	1208340	0	True				
ANR	1208359	ParameterType	const char *		1208340	0					
ANR	1208360	Identifier	str		1208340	1					
ANR	1208361	Parameter	uint str_length TSRMLS_DC	104:52:2870:2894	1208340	1	True				
ANR	1208362	ParameterType	uint str_length		1208340	0					
ANR	1208363	Identifier	TSRMLS_DC		1208340	1					
ANR	1208364	CFGEntryNode	ENTRY		1208340		True				
ANR	1208365	CFGExitNode	EXIT		1208340		True				
ANR	1208366	Symbol	str		1208340						
ANR	1208367	Symbol	str_length		1208340						
ANR	1208368	Symbol	* str_length		1208340						
ANR	1208369	Symbol	* str		1208340						
ANR	1208370	Symbol	TSRMLS_DC		1208340						
ANR	1208371	Symbol	php_last_char		1208340						
ANR	1208372	ClassDef	<unnamed>	128:8:3579:3723							
ANR	1208373	DeclStmt									
ANR	1208374	Decl									php_code_type
ANR	1208375	Function	cli_get_prompt	141:0:3726:5279							
ANR	1208376	FunctionDef	"cli_get_prompt (char * block , char prompt TSRMLS_DC)"		1208375	0					
ANR	1208377	CompoundStatement		142:0:3800:5279	1208375	0					
ANR	1208378	IdentifierDeclStatement	smart_str retval = { 0 } ;	143:1:3803:3825	1208375	0	True				
ANR	1208379	IdentifierDecl	retval = { 0 }		1208375	0					
ANR	1208380	IdentifierDeclType	smart_str		1208375	0					
ANR	1208381	Identifier	retval		1208375	1					
ANR	1208382	AssignmentExpression	retval = { 0 }		1208375	2		=			
ANR	1208383	Identifier	retval		1208375	0					
ANR	1208384	InitializerList	0		1208375	1					
ANR	1208385	PrimaryExpression	0		1208375	0					
ANR	1208386	IdentifierDeclStatement	char * prompt_spec = CLIR_G ( prompt ) ? CLIR_G ( prompt ) : DEFAULT_PROMPT ;	144:1:3828:3896	1208375	1	True				
ANR	1208387	IdentifierDecl	* prompt_spec = CLIR_G ( prompt ) ? CLIR_G ( prompt ) : DEFAULT_PROMPT		1208375	0					
ANR	1208388	IdentifierDeclType	char *		1208375	0					
ANR	1208389	Identifier	prompt_spec		1208375	1					
ANR	1208390	AssignmentExpression	* prompt_spec = CLIR_G ( prompt ) ? CLIR_G ( prompt ) : DEFAULT_PROMPT		1208375	2		=			
ANR	1208391	Identifier	prompt_spec		1208375	0					
ANR	1208392	ConditionalExpression	CLIR_G ( prompt ) ? CLIR_G ( prompt ) : DEFAULT_PROMPT		1208375	1					
ANR	1208393	Condition	CLIR_G ( prompt )		1208375	0					
ANR	1208394	CallExpression	CLIR_G ( prompt )		1208375	0					
ANR	1208395	Callee	CLIR_G		1208375	0					
ANR	1208396	Identifier	CLIR_G		1208375	0					
ANR	1208397	ArgumentList	prompt		1208375	1					
ANR	1208398	Argument	prompt		1208375	0					
ANR	1208399	Identifier	prompt		1208375	0					
ANR	1208400	CallExpression	CLIR_G ( prompt )		1208375	1					
ANR	1208401	Callee	CLIR_G		1208375	0					
ANR	1208402	Identifier	CLIR_G		1208375	0					
ANR	1208403	ArgumentList	prompt		1208375	1					
ANR	1208404	Argument	prompt		1208375	0					
ANR	1208405	Identifier	prompt		1208375	0					
ANR	1208406	Identifier	DEFAULT_PROMPT		1208375	2					
ANR	1208407	DoStatement	do		1208375	2					
ANR	1208408	CompoundStatement		5:4:102:102	1208375	0					
ANR	1208409	IfStatement	if ( * prompt_spec == '\\\\' )		1208375	0					
ANR	1208410	Condition	* prompt_spec == '\\\\'	147:6:3911:3930	1208375	0	True				
ANR	1208411	EqualityExpression	* prompt_spec == '\\\\'		1208375	0		==			
ANR	1208412	UnaryOperationExpression	* prompt_spec		1208375	0					
ANR	1208413	UnaryOperator	*		1208375	0					
ANR	1208414	Identifier	prompt_spec		1208375	1					
ANR	1208415	PrimaryExpression	'\\\\'		1208375	1					
ANR	1208416	CompoundStatement		6:28:132:132	1208375	1					
ANR	1208417	SwitchStatement	switch ( prompt_spec [ 1 ] )		1208375	0					
ANR	1208418	Condition	prompt_spec [ 1 ]	148:11:3946:3959	1208375	0	True				
ANR	1208419	ArrayIndexing	prompt_spec [ 1 ]		1208375	0					
ANR	1208420	Identifier	prompt_spec		1208375	0					
ANR	1208421	PrimaryExpression	1		1208375	1					
ANR	1208422	CompoundStatement		7:27:161:161	1208375	1					
ANR	1208423	Label	case '\\\\' :	149:3:3967:3976	1208375	0	True				
ANR	1208424	ExpressionStatement	"smart_str_appendc ( & retval , '\\\\' )"	150:4:3982:4014	1208375	1	True				
ANR	1208425	CallExpression	"smart_str_appendc ( & retval , '\\\\' )"		1208375	0					
ANR	1208426	Callee	smart_str_appendc		1208375	0					
ANR	1208427	Identifier	smart_str_appendc		1208375	0					
ANR	1208428	ArgumentList	& retval		1208375	1					
ANR	1208429	Argument	& retval		1208375	0					
ANR	1208430	UnaryOperationExpression	& retval		1208375	0					
ANR	1208431	UnaryOperator	&		1208375	0					
ANR	1208432	Identifier	retval		1208375	1					
ANR	1208433	Argument	'\\\\'		1208375	1					
ANR	1208434	PrimaryExpression	'\\\\'		1208375	0					
ANR	1208435	ExpressionStatement	prompt_spec ++	151:4:4020:4033	1208375	2	True				
ANR	1208436	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208437	Identifier	prompt_spec		1208375	0					
ANR	1208438	IncDec	++		1208375	1					
ANR	1208439	BreakStatement	break ;	152:4:4039:4044	1208375	3	True				
ANR	1208440	Label	case 'n' :	153:3:4049:4057	1208375	4	True				
ANR	1208441	ExpressionStatement	"smart_str_appendc ( & retval , '\\n' )"	154:4:4063:4095	1208375	5	True				
ANR	1208442	CallExpression	"smart_str_appendc ( & retval , '\\n' )"		1208375	0					
ANR	1208443	Callee	smart_str_appendc		1208375	0					
ANR	1208444	Identifier	smart_str_appendc		1208375	0					
ANR	1208445	ArgumentList	& retval		1208375	1					
ANR	1208446	Argument	& retval		1208375	0					
ANR	1208447	UnaryOperationExpression	& retval		1208375	0					
ANR	1208448	UnaryOperator	&		1208375	0					
ANR	1208449	Identifier	retval		1208375	1					
ANR	1208450	Argument	'\\n'		1208375	1					
ANR	1208451	PrimaryExpression	'\\n'		1208375	0					
ANR	1208452	ExpressionStatement	prompt_spec ++	155:4:4101:4114	1208375	6	True				
ANR	1208453	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208454	Identifier	prompt_spec		1208375	0					
ANR	1208455	IncDec	++		1208375	1					
ANR	1208456	BreakStatement	break ;	156:4:4120:4125	1208375	7	True				
ANR	1208457	Label	case 't' :	157:3:4130:4138	1208375	8	True				
ANR	1208458	ExpressionStatement	"smart_str_appendc ( & retval , '\\t' )"	158:4:4144:4176	1208375	9	True				
ANR	1208459	CallExpression	"smart_str_appendc ( & retval , '\\t' )"		1208375	0					
ANR	1208460	Callee	smart_str_appendc		1208375	0					
ANR	1208461	Identifier	smart_str_appendc		1208375	0					
ANR	1208462	ArgumentList	& retval		1208375	1					
ANR	1208463	Argument	& retval		1208375	0					
ANR	1208464	UnaryOperationExpression	& retval		1208375	0					
ANR	1208465	UnaryOperator	&		1208375	0					
ANR	1208466	Identifier	retval		1208375	1					
ANR	1208467	Argument	'\\t'		1208375	1					
ANR	1208468	PrimaryExpression	'\\t'		1208375	0					
ANR	1208469	ExpressionStatement	prompt_spec ++	159:4:4182:4195	1208375	10	True				
ANR	1208470	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208471	Identifier	prompt_spec		1208375	0					
ANR	1208472	IncDec	++		1208375	1					
ANR	1208473	BreakStatement	break ;	160:4:4201:4206	1208375	11	True				
ANR	1208474	Label	case 'e' :	161:3:4211:4219	1208375	12	True				
ANR	1208475	ExpressionStatement	"smart_str_appendc ( & retval , '\\033' )"	162:4:4225:4259	1208375	13	True				
ANR	1208476	CallExpression	"smart_str_appendc ( & retval , '\\033' )"		1208375	0					
ANR	1208477	Callee	smart_str_appendc		1208375	0					
ANR	1208478	Identifier	smart_str_appendc		1208375	0					
ANR	1208479	ArgumentList	& retval		1208375	1					
ANR	1208480	Argument	& retval		1208375	0					
ANR	1208481	UnaryOperationExpression	& retval		1208375	0					
ANR	1208482	UnaryOperator	&		1208375	0					
ANR	1208483	Identifier	retval		1208375	1					
ANR	1208484	Argument	'\\033'		1208375	1					
ANR	1208485	PrimaryExpression	'\\033'		1208375	0					
ANR	1208486	ExpressionStatement	prompt_spec ++	163:4:4265:4278	1208375	14	True				
ANR	1208487	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208488	Identifier	prompt_spec		1208375	0					
ANR	1208489	IncDec	++		1208375	1					
ANR	1208490	BreakStatement	break ;	164:4:4284:4289	1208375	15	True				
ANR	1208491	Label	case 'v' :	167:3:4296:4304	1208375	16	True				
ANR	1208492	ExpressionStatement	"smart_str_appends ( & retval , PHP_VERSION )"	168:4:4310:4349	1208375	17	True				
ANR	1208493	CallExpression	"smart_str_appends ( & retval , PHP_VERSION )"		1208375	0					
ANR	1208494	Callee	smart_str_appends		1208375	0					
ANR	1208495	Identifier	smart_str_appends		1208375	0					
ANR	1208496	ArgumentList	& retval		1208375	1					
ANR	1208497	Argument	& retval		1208375	0					
ANR	1208498	UnaryOperationExpression	& retval		1208375	0					
ANR	1208499	UnaryOperator	&		1208375	0					
ANR	1208500	Identifier	retval		1208375	1					
ANR	1208501	Argument	PHP_VERSION		1208375	1					
ANR	1208502	Identifier	PHP_VERSION		1208375	0					
ANR	1208503	ExpressionStatement	prompt_spec ++	169:4:4355:4368	1208375	18	True				
ANR	1208504	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208505	Identifier	prompt_spec		1208375	0					
ANR	1208506	IncDec	++		1208375	1					
ANR	1208507	BreakStatement	break ;	170:4:4374:4379	1208375	19	True				
ANR	1208508	Label	case 'b' :	171:3:4384:4392	1208375	20	True				
ANR	1208509	ExpressionStatement	"smart_str_appends ( & retval , block )"	172:4:4398:4431	1208375	21	True				
ANR	1208510	CallExpression	"smart_str_appends ( & retval , block )"		1208375	0					
ANR	1208511	Callee	smart_str_appends		1208375	0					
ANR	1208512	Identifier	smart_str_appends		1208375	0					
ANR	1208513	ArgumentList	& retval		1208375	1					
ANR	1208514	Argument	& retval		1208375	0					
ANR	1208515	UnaryOperationExpression	& retval		1208375	0					
ANR	1208516	UnaryOperator	&		1208375	0					
ANR	1208517	Identifier	retval		1208375	1					
ANR	1208518	Argument	block		1208375	1					
ANR	1208519	Identifier	block		1208375	0					
ANR	1208520	ExpressionStatement	prompt_spec ++	173:4:4437:4450	1208375	22	True				
ANR	1208521	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208522	Identifier	prompt_spec		1208375	0					
ANR	1208523	IncDec	++		1208375	1					
ANR	1208524	BreakStatement	break ;	174:4:4456:4461	1208375	23	True				
ANR	1208525	Label	case '>' :	175:3:4466:4474	1208375	24	True				
ANR	1208526	ExpressionStatement	"smart_str_appendc ( & retval , prompt )"	176:4:4480:4514	1208375	25	True				
ANR	1208527	CallExpression	"smart_str_appendc ( & retval , prompt )"		1208375	0					
ANR	1208528	Callee	smart_str_appendc		1208375	0					
ANR	1208529	Identifier	smart_str_appendc		1208375	0					
ANR	1208530	ArgumentList	& retval		1208375	1					
ANR	1208531	Argument	& retval		1208375	0					
ANR	1208532	UnaryOperationExpression	& retval		1208375	0					
ANR	1208533	UnaryOperator	&		1208375	0					
ANR	1208534	Identifier	retval		1208375	1					
ANR	1208535	Argument	prompt		1208375	1					
ANR	1208536	Identifier	prompt		1208375	0					
ANR	1208537	ExpressionStatement	prompt_spec ++	177:4:4520:4533	1208375	26	True				
ANR	1208538	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208539	Identifier	prompt_spec		1208375	0					
ANR	1208540	IncDec	++		1208375	1					
ANR	1208541	BreakStatement	break ;	178:4:4539:4544	1208375	27	True				
ANR	1208542	Label	case '`' :	179:3:4549:4557	1208375	28	True				
ANR	1208543	ExpressionStatement	"smart_str_appendc ( & retval , '`' )"	180:4:4563:4594	1208375	29	True				
ANR	1208544	CallExpression	"smart_str_appendc ( & retval , '`' )"		1208375	0					
ANR	1208545	Callee	smart_str_appendc		1208375	0					
ANR	1208546	Identifier	smart_str_appendc		1208375	0					
ANR	1208547	ArgumentList	& retval		1208375	1					
ANR	1208548	Argument	& retval		1208375	0					
ANR	1208549	UnaryOperationExpression	& retval		1208375	0					
ANR	1208550	UnaryOperator	&		1208375	0					
ANR	1208551	Identifier	retval		1208375	1					
ANR	1208552	Argument	'`'		1208375	1					
ANR	1208553	PrimaryExpression	'`'		1208375	0					
ANR	1208554	ExpressionStatement	prompt_spec ++	181:4:4600:4613	1208375	30	True				
ANR	1208555	PostIncDecOperationExpression	prompt_spec ++		1208375	0					
ANR	1208556	Identifier	prompt_spec		1208375	0					
ANR	1208557	IncDec	++		1208375	1					
ANR	1208558	BreakStatement	break ;	182:4:4619:4624	1208375	31	True				
ANR	1208559	Label	default :	183:3:4629:4636	1208375	32	True				
ANR	1208560	Identifier	default		1208375	0					
ANR	1208561	ExpressionStatement	"smart_str_appendc ( & retval , '\\\\' )"	184:4:4642:4674	1208375	33	True				
ANR	1208562	CallExpression	"smart_str_appendc ( & retval , '\\\\' )"		1208375	0					
ANR	1208563	Callee	smart_str_appendc		1208375	0					
ANR	1208564	Identifier	smart_str_appendc		1208375	0					
ANR	1208565	ArgumentList	& retval		1208375	1					
ANR	1208566	Argument	& retval		1208375	0					
ANR	1208567	UnaryOperationExpression	& retval		1208375	0					
ANR	1208568	UnaryOperator	&		1208375	0					
ANR	1208569	Identifier	retval		1208375	1					
ANR	1208570	Argument	'\\\\'		1208375	1					
ANR	1208571	PrimaryExpression	'\\\\'		1208375	0					
ANR	1208572	BreakStatement	break ;	185:4:4680:4685	1208375	34	True				
ANR	1208573	ElseStatement	else		1208375	0					
ANR	1208574	IfStatement	if ( * prompt_spec == '`' )		1208375	0					
ANR	1208575	Condition	* prompt_spec == '`'	187:13:4705:4723	1208375	0	True				
ANR	1208576	EqualityExpression	* prompt_spec == '`'		1208375	0		==			
ANR	1208577	UnaryOperationExpression	* prompt_spec		1208375	0					
ANR	1208578	UnaryOperator	*		1208375	0					
ANR	1208579	Identifier	prompt_spec		1208375	1					
ANR	1208580	PrimaryExpression	'`'		1208375	1					
ANR	1208581	CompoundStatement		48:3:982:992	1208375	1					
ANR	1208582	IdentifierDeclStatement	"char * prompt_end = strstr ( prompt_spec + 1 , ""`"" ) ;"	188:3:4731:4778	1208375	0	True				
ANR	1208583	IdentifierDecl	"* prompt_end = strstr ( prompt_spec + 1 , ""`"" )"		1208375	0					
ANR	1208584	IdentifierDeclType	char *		1208375	0					
ANR	1208585	Identifier	prompt_end		1208375	1					
ANR	1208586	AssignmentExpression	"* prompt_end = strstr ( prompt_spec + 1 , ""`"" )"		1208375	2		=			
ANR	1208587	Identifier	prompt_end		1208375	0					
ANR	1208588	CallExpression	"strstr ( prompt_spec + 1 , ""`"" )"		1208375	1					
ANR	1208589	Callee	strstr		1208375	0					
ANR	1208590	Identifier	strstr		1208375	0					
ANR	1208591	ArgumentList	prompt_spec + 1		1208375	1					
ANR	1208592	Argument	prompt_spec + 1		1208375	0					
ANR	1208593	AdditiveExpression	prompt_spec + 1		1208375	0		+			
ANR	1208594	Identifier	prompt_spec		1208375	0					
ANR	1208595	PrimaryExpression	1		1208375	1					
ANR	1208596	Argument	"""`"""		1208375	1					
ANR	1208597	PrimaryExpression	"""`"""		1208375	0					
ANR	1208598	IdentifierDeclStatement	char * code ;	189:3:4783:4793	1208375	1	True				
ANR	1208599	IdentifierDecl	* code		1208375	0					
ANR	1208600	IdentifierDeclType	char *		1208375	0					
ANR	1208601	Identifier	code		1208375	1					
ANR	1208602	IfStatement	if ( prompt_end )		1208375	2					
ANR	1208603	Condition	prompt_end	191:7:4803:4812	1208375	0	True				
ANR	1208604	Identifier	prompt_end		1208375	0					
ANR	1208605	CompoundStatement		50:19:1014:1014	1208375	1					
ANR	1208606	ExpressionStatement	"code = estrndup ( prompt_spec + 1 , prompt_end - prompt_spec - 1 )"	192:4:4821:4883	1208375	0	True				
ANR	1208607	AssignmentExpression	"code = estrndup ( prompt_spec + 1 , prompt_end - prompt_spec - 1 )"		1208375	0		=			
ANR	1208608	Identifier	code		1208375	0					
ANR	1208609	CallExpression	"estrndup ( prompt_spec + 1 , prompt_end - prompt_spec - 1 )"		1208375	1					
ANR	1208610	Callee	estrndup		1208375	0					
ANR	1208611	Identifier	estrndup		1208375	0					
ANR	1208612	ArgumentList	prompt_spec + 1		1208375	1					
ANR	1208613	Argument	prompt_spec + 1		1208375	0					
ANR	1208614	AdditiveExpression	prompt_spec + 1		1208375	0		+			
ANR	1208615	Identifier	prompt_spec		1208375	0					
ANR	1208616	PrimaryExpression	1		1208375	1					
ANR	1208617	Argument	prompt_end - prompt_spec - 1		1208375	1					
ANR	1208618	AdditiveExpression	prompt_end - prompt_spec - 1		1208375	0		-			
ANR	1208619	Identifier	prompt_end		1208375	0					
ANR	1208620	AdditiveExpression	prompt_spec - 1		1208375	1		-			
ANR	1208621	Identifier	prompt_spec		1208375	0					
ANR	1208622	PrimaryExpression	1		1208375	1					
ANR	1208623	ExpressionStatement	CLIR_G ( prompt_str ) = & retval	194:4:4890:4918	1208375	1	True				
ANR	1208624	AssignmentExpression	CLIR_G ( prompt_str ) = & retval		1208375	0		=			
ANR	1208625	CallExpression	CLIR_G ( prompt_str )		1208375	0					
ANR	1208626	Callee	CLIR_G		1208375	0					
ANR	1208627	Identifier	CLIR_G		1208375	0					
ANR	1208628	ArgumentList	prompt_str		1208375	1					
ANR	1208629	Argument	prompt_str		1208375	0					
ANR	1208630	Identifier	prompt_str		1208375	0					
ANR	1208631	UnaryOperationExpression	& retval		1208375	1					
ANR	1208632	UnaryOperator	&		1208375	0					
ANR	1208633	Identifier	retval		1208375	1					
ANR	1208634	Statement	zend_try	195:4:4924:4931	1208375	2	True				
ANR	1208635	CompoundStatement		54:13:1132:1132	1208375	3					
ANR	1208636	Statement	zend_eval_stringl	196:5:4940:4956	1208375	0	True				
ANR	1208637	Statement	(	196:22:4957:4957	1208375	1	True				
ANR	1208638	Statement	code	196:23:4958:4961	1208375	2	True				
ANR	1208639	Statement	","	196:27:4962:4962	1208375	3	True				
ANR	1208640	Statement	prompt_end	196:29:4964:4973	1208375	4	True				
ANR	1208641	Statement	-	196:40:4975:4975	1208375	5	True				
ANR	1208642	Statement	prompt_spec	196:42:4977:4987	1208375	6	True				
ANR	1208643	Statement	-	196:54:4989:4989	1208375	7	True				
ANR	1208644	Statement	1	196:56:4991:4991	1208375	8	True				
ANR	1208645	Statement	","	196:57:4992:4992	1208375	9	True				
ANR	1208646	Statement	NULL	196:59:4994:4997	1208375	10	True				
ANR	1208647	Statement	","	196:63:4998:4998	1208375	11	True				
ANR	1208648	Statement	"""php prompt code"""	196:65:5000:5016	1208375	12	True				
ANR	1208649	Statement	TSRMLS_CC	196:83:5018:5026	1208375	13	True				
ANR	1208650	Statement	)	196:92:5027:5027	1208375	14	True				
ANR	1208651	ExpressionStatement		196:93:5028:5028	1208375	15	True				
ANR	1208652	ExpressionStatement	zend_end_try ( )	197:6:5036:5050	1208375	4	True				
ANR	1208653	CallExpression	zend_end_try ( )		1208375	0					
ANR	1208654	Callee	zend_end_try		1208375	0					
ANR	1208655	Identifier	zend_end_try		1208375	0					
ANR	1208656	ArgumentList			1208375	1					
ANR	1208657	ExpressionStatement	CLIR_G ( prompt_str ) = NULL	198:4:5056:5081	1208375	5	True				
ANR	1208658	AssignmentExpression	CLIR_G ( prompt_str ) = NULL		1208375	0		=			
ANR	1208659	CallExpression	CLIR_G ( prompt_str )		1208375	0					
ANR	1208660	Callee	CLIR_G		1208375	0					
ANR	1208661	Identifier	CLIR_G		1208375	0					
ANR	1208662	ArgumentList	prompt_str		1208375	1					
ANR	1208663	Argument	prompt_str		1208375	0					
ANR	1208664	Identifier	prompt_str		1208375	0					
ANR	1208665	Identifier	NULL		1208375	1					
ANR	1208666	ExpressionStatement	efree ( code )	199:4:5087:5098	1208375	6	True				
ANR	1208667	CallExpression	efree ( code )		1208375	0					
ANR	1208668	Callee	efree		1208375	0					
ANR	1208669	Identifier	efree		1208375	0					
ANR	1208670	ArgumentList	code		1208375	1					
ANR	1208671	Argument	code		1208375	0					
ANR	1208672	Identifier	code		1208375	0					
ANR	1208673	ExpressionStatement	prompt_spec = prompt_end	200:4:5104:5128	1208375	7	True				
ANR	1208674	AssignmentExpression	prompt_spec = prompt_end		1208375	0		=			
ANR	1208675	Identifier	prompt_spec		1208375	0					
ANR	1208676	Identifier	prompt_end		1208375	1					
ANR	1208677	ElseStatement	else		1208375	0					
ANR	1208678	CompoundStatement		61:9:1343:1343	1208375	0					
ANR	1208679	ExpressionStatement	"smart_str_appendc ( & retval , * prompt_spec )"	203:3:5149:5189	1208375	0	True				
ANR	1208680	CallExpression	"smart_str_appendc ( & retval , * prompt_spec )"		1208375	0					
ANR	1208681	Callee	smart_str_appendc		1208375	0					
ANR	1208682	Identifier	smart_str_appendc		1208375	0					
ANR	1208683	ArgumentList	& retval		1208375	1					
ANR	1208684	Argument	& retval		1208375	0					
ANR	1208685	UnaryOperationExpression	& retval		1208375	0					
ANR	1208686	UnaryOperator	&		1208375	0					
ANR	1208687	Identifier	retval		1208375	1					
ANR	1208688	Argument	* prompt_spec		1208375	1					
ANR	1208689	UnaryOperationExpression	* prompt_spec		1208375	0					
ANR	1208690	UnaryOperator	*		1208375	0					
ANR	1208691	Identifier	prompt_spec		1208375	1					
ANR	1208692	Condition	++ prompt_spec && * prompt_spec	205:10:5205:5233	1208375	1	True				
ANR	1208693	AndExpression	++ prompt_spec && * prompt_spec		1208375	0		&&			
ANR	1208694	UnaryExpression	++ prompt_spec		1208375	0					
ANR	1208695	IncDec	++		1208375	0					
ANR	1208696	Identifier	prompt_spec		1208375	1					
ANR	1208697	UnaryOperationExpression	* prompt_spec		1208375	1					
ANR	1208698	UnaryOperator	*		1208375	0					
ANR	1208699	Identifier	prompt_spec		1208375	1					
ANR	1208700	ExpressionStatement	smart_str_0 ( & retval )	206:1:5238:5258	1208375	3	True				
ANR	1208701	CallExpression	smart_str_0 ( & retval )		1208375	0					
ANR	1208702	Callee	smart_str_0		1208375	0					
ANR	1208703	Identifier	smart_str_0		1208375	0					
ANR	1208704	ArgumentList	& retval		1208375	1					
ANR	1208705	Argument	& retval		1208375	0					
ANR	1208706	UnaryOperationExpression	& retval		1208375	0					
ANR	1208707	UnaryOperator	&		1208375	0					
ANR	1208708	Identifier	retval		1208375	1					
ANR	1208709	ReturnStatement	return retval . c ;	207:1:5262:5277	1208375	4	True				
ANR	1208710	MemberAccess	retval . c		1208375	0					
ANR	1208711	Identifier	retval		1208375	0					
ANR	1208712	Identifier	c		1208375	1					
ANR	1208713	ReturnType	static char *		1208375	1					
ANR	1208714	Identifier	cli_get_prompt		1208375	2					
ANR	1208715	ParameterList	"char * block , char prompt TSRMLS_DC"		1208375	3					
ANR	1208716	Parameter	char * block	141:28:3754:3764	1208375	0	True				
ANR	1208717	ParameterType	char *		1208375	0					
ANR	1208718	Identifier	block		1208375	1					
ANR	1208719	Parameter	char prompt TSRMLS_DC	141:41:3767:3787	1208375	1	True				
ANR	1208720	ParameterType	char prompt		1208375	0					
ANR	1208721	Identifier	TSRMLS_DC		1208375	1					
ANR	1208722	CFGEntryNode	ENTRY		1208375		True				
ANR	1208723	CFGExitNode	EXIT		1208375		True				
ANR	1208724	Symbol	PHP_VERSION		1208375						
ANR	1208725	Symbol	code		1208375						
ANR	1208726	Symbol	NULL		1208375						
ANR	1208727	Symbol	prompt_str		1208375						
ANR	1208728	Symbol	TSRMLS_DC		1208375						
ANR	1208729	Symbol	retval		1208375						
ANR	1208730	Symbol	prompt_end		1208375						
ANR	1208731	Symbol	estrndup		1208375						
ANR	1208732	Symbol	retval . c		1208375						
ANR	1208733	Symbol	DEFAULT_PROMPT		1208375						
ANR	1208734	Symbol	strstr		1208375						
ANR	1208735	Symbol	& retval		1208375						
ANR	1208736	Symbol	block		1208375						
ANR	1208737	Symbol	CLIR_G		1208375						
ANR	1208738	Symbol	prompt_spec		1208375						
ANR	1208739	Symbol	prompt		1208375						
ANR	1208740	Symbol	* prompt_spec		1208375						
ANR	1208741	DeclStmt									
ANR	1208742	Decl							int	int	valid_end
ANR	1208743	Decl							int	int	last_valid_end
ANR	1208744	DeclStmt									
ANR	1208745	Decl							int	int	brackets_count
ANR	1208746	DeclStmt									
ANR	1208747	Decl							int	int	brace_count
ANR	1208748	DeclStmt									
ANR	1208749	Decl							int	int	i
ANR	1208750	DeclStmt									
ANR	1208751	Decl							php_code_type	php_code_type	code_type
ANR	1208752	DeclStmt									
ANR	1208753	Decl							char	char *	heredoc_tag
ANR	1208754	DeclStmt									
ANR	1208755	Decl							int	int	heredoc_len
ANR	1208756	DeclStmt									
ANR	1208757	Decl							char	char *	name
ANR	1208758	DeclStmt									
ANR	1208759	Decl							ulong	ulong	number
ANR	1208760	DeclStmt									
ANR	1208761	Decl							char	char *	retval
ANR	1208762	Decl							char	char *	tmp
ANR	1208763	DeclStmt									
ANR	1208764	Decl							char	char *	retval
ANR	1208765	Decl							char	char *	tmp
ANR	1208766	DeclStmt									
ANR	1208767	Decl							zend_function	zend_function *	func
ANR	1208768	DeclStmt									
ANR	1208769	Decl							char	char *	retval
ANR	1208770	DeclStmt									
ANR	1208771	Decl							zend_class_entry	zend_class_entry * *	pce
ANR	1208772	DeclStmt									
ANR	1208773	Decl							char	char *	retval
ANR	1208774	DeclStmt									
ANR	1208775	Decl							zend_class_entry	zend_class_entry * *	pce
ANR	1208776	DeclStmt									
ANR	1208777	Decl							char	char *	retval
ANR	1208778	DeclStmt									
ANR	1208779	Decl							int	int	cli_completion_state
ANR	1208780	Function	cli_completion_generator	505:0:12124:14367							
ANR	1208781	FunctionDef	"cli_completion_generator (const char * text , int index)"		1208780	0					
ANR	1208782	CompoundStatement		506:0:12201:14367	1208780	0					
ANR	1208783	IdentifierDeclStatement	char * retval = NULL ;	516:1:12463:12482	1208780	0	True				
ANR	1208784	IdentifierDecl	* retval = NULL		1208780	0					
ANR	1208785	IdentifierDeclType	char *		1208780	0					
ANR	1208786	Identifier	retval		1208780	1					
ANR	1208787	AssignmentExpression	* retval = NULL		1208780	2		=			
ANR	1208788	Identifier	NULL		1208780	0					
ANR	1208789	Identifier	NULL		1208780	1					
ANR	1208790	IdentifierDeclStatement	int textlen = strlen ( text ) ;	517:1:12485:12511	1208780	1	True				
ANR	1208791	IdentifierDecl	textlen = strlen ( text )		1208780	0					
ANR	1208792	IdentifierDeclType	int		1208780	0					
ANR	1208793	Identifier	textlen		1208780	1					
ANR	1208794	AssignmentExpression	textlen = strlen ( text )		1208780	2		=			
ANR	1208795	Identifier	textlen		1208780	0					
ANR	1208796	CallExpression	strlen ( text )		1208780	1					
ANR	1208797	Callee	strlen		1208780	0					
ANR	1208798	Identifier	strlen		1208780	0					
ANR	1208799	ArgumentList	text		1208780	1					
ANR	1208800	Argument	text		1208780	0					
ANR	1208801	Identifier	text		1208780	0					
ANR	1208802	ExpressionStatement	TSRMLS_FETCH ( )	518:1:12514:12528	1208780	2	True				
ANR	1208803	CallExpression	TSRMLS_FETCH ( )		1208780	0					
ANR	1208804	Callee	TSRMLS_FETCH		1208780	0					
ANR	1208805	Identifier	TSRMLS_FETCH		1208780	0					
ANR	1208806	ArgumentList			1208780	1					
ANR	1208807	IfStatement	if ( ! index )		1208780	3					
ANR	1208808	Condition	! index	520:5:12536:12541	1208780	0	True				
ANR	1208809	UnaryOperationExpression	! index		1208780	0					
ANR	1208810	UnaryOperator	!		1208780	0					
ANR	1208811	Identifier	index		1208780	1					
ANR	1208812	CompoundStatement		15:13:342:342	1208780	1					
ANR	1208813	ExpressionStatement	cli_completion_state = 0	521:2:12548:12572	1208780	0	True				
ANR	1208814	AssignmentExpression	cli_completion_state = 0		1208780	0		=			
ANR	1208815	Identifier	cli_completion_state		1208780	0					
ANR	1208816	PrimaryExpression	0		1208780	1					
ANR	1208817	IfStatement	if ( text [ 0 ] == '$' )		1208780	4					
ANR	1208818	Condition	text [ 0 ] == '$'	523:5:12582:12595	1208780	0	True				
ANR	1208819	EqualityExpression	text [ 0 ] == '$'		1208780	0		==			
ANR	1208820	ArrayIndexing	text [ 0 ]		1208780	0					
ANR	1208821	Identifier	text		1208780	0					
ANR	1208822	PrimaryExpression	0		1208780	1					
ANR	1208823	PrimaryExpression	'$'		1208780	1					
ANR	1208824	CompoundStatement		18:21:396:396	1208780	1					
ANR	1208825	Statement	retval	524:2:12602:12607	1208780	0	True				
ANR	1208826	Statement	=	524:9:12609:12609	1208780	1	True				
ANR	1208827	Statement	cli_completion_generator_var	524:11:12611:12638	1208780	2	True				
ANR	1208828	Statement	(	524:39:12639:12639	1208780	3	True				
ANR	1208829	Statement	text	524:40:12640:12643	1208780	4	True				
ANR	1208830	Statement	","	524:44:12644:12644	1208780	5	True				
ANR	1208831	Statement	textlen	524:46:12646:12652	1208780	6	True				
ANR	1208832	Statement	","	524:53:12653:12653	1208780	7	True				
ANR	1208833	Statement	&	524:55:12655:12655	1208780	8	True				
ANR	1208834	Statement	cli_completion_state	524:56:12656:12675	1208780	9	True				
ANR	1208835	Statement	TSRMLS_CC	524:77:12677:12685	1208780	10	True				
ANR	1208836	Statement	)	524:86:12686:12686	1208780	11	True				
ANR	1208837	ExpressionStatement		524:87:12687:12687	1208780	12	True				
ANR	1208838	ElseStatement	else		1208780	0					
ANR	1208839	IfStatement	if ( text [ 0 ] == '#' )		1208780	0					
ANR	1208840	Condition	text [ 0 ] == '#'	525:12:12701:12714	1208780	0	True				
ANR	1208841	EqualityExpression	text [ 0 ] == '#'		1208780	0		==			
ANR	1208842	ArrayIndexing	text [ 0 ]		1208780	0					
ANR	1208843	Identifier	text		1208780	0					
ANR	1208844	PrimaryExpression	0		1208780	1					
ANR	1208845	PrimaryExpression	'#'		1208780	1					
ANR	1208846	CompoundStatement		20:28:515:515	1208780	1					
ANR	1208847	Statement	retval	526:2:12721:12726	1208780	0	True				
ANR	1208848	Statement	=	526:9:12728:12728	1208780	1	True				
ANR	1208849	Statement	cli_completion_generator_ini	526:11:12730:12757	1208780	2	True				
ANR	1208850	Statement	(	526:39:12758:12758	1208780	3	True				
ANR	1208851	Statement	text	526:40:12759:12762	1208780	4	True				
ANR	1208852	Statement	","	526:44:12763:12763	1208780	5	True				
ANR	1208853	Statement	textlen	526:46:12765:12771	1208780	6	True				
ANR	1208854	Statement	","	526:53:12772:12772	1208780	7	True				
ANR	1208855	Statement	&	526:55:12774:12774	1208780	8	True				
ANR	1208856	Statement	cli_completion_state	526:56:12775:12794	1208780	9	True				
ANR	1208857	Statement	TSRMLS_CC	526:77:12796:12804	1208780	10	True				
ANR	1208858	Statement	)	526:86:12805:12805	1208780	11	True				
ANR	1208859	ExpressionStatement		526:87:12806:12806	1208780	12	True				
ANR	1208860	ElseStatement	else		1208780	0					
ANR	1208861	CompoundStatement		25:2:687:716	1208780	0					
ANR	1208862	IdentifierDeclStatement	"char * lc_text , * class_name , * class_name_end ;"	528:2:12820:12863	1208780	0	True				
ANR	1208863	IdentifierDecl	* lc_text		1208780	0					
ANR	1208864	IdentifierDeclType	char *		1208780	0					
ANR	1208865	Identifier	lc_text		1208780	1					
ANR	1208866	IdentifierDecl	* class_name		1208780	1					
ANR	1208867	IdentifierDeclType	char *		1208780	0					
ANR	1208868	Identifier	class_name		1208780	1					
ANR	1208869	IdentifierDecl	* class_name_end		1208780	2					
ANR	1208870	IdentifierDeclType	char *		1208780	0					
ANR	1208871	Identifier	class_name_end		1208780	1					
ANR	1208872	IdentifierDeclStatement	int class_name_len ;	529:2:12867:12885	1208780	1	True				
ANR	1208873	IdentifierDecl	class_name_len		1208780	0					
ANR	1208874	IdentifierDeclType	int		1208780	0					
ANR	1208875	Identifier	class_name_len		1208780	1					
ANR	1208876	IdentifierDeclStatement	zend_class_entry * * pce = NULL ;	530:2:12889:12918	1208780	2	True				
ANR	1208877	IdentifierDecl	* * pce = NULL		1208780	0					
ANR	1208878	IdentifierDeclType	zend_class_entry * *		1208780	0					
ANR	1208879	Identifier	pce		1208780	1					
ANR	1208880	AssignmentExpression	* * pce = NULL		1208780	2		=			
ANR	1208881	Identifier	NULL		1208780	0					
ANR	1208882	Identifier	NULL		1208780	1					
ANR	1208883	ExpressionStatement	"class_name_end = strstr ( text , ""::"" )"	532:2:12925:12960	1208780	3	True				
ANR	1208884	AssignmentExpression	"class_name_end = strstr ( text , ""::"" )"		1208780	0		=			
ANR	1208885	Identifier	class_name_end		1208780	0					
ANR	1208886	CallExpression	"strstr ( text , ""::"" )"		1208780	1					
ANR	1208887	Callee	strstr		1208780	0					
ANR	1208888	Identifier	strstr		1208780	0					
ANR	1208889	ArgumentList	text		1208780	1					
ANR	1208890	Argument	text		1208780	0					
ANR	1208891	Identifier	text		1208780	0					
ANR	1208892	Argument	"""::"""		1208780	1					
ANR	1208893	PrimaryExpression	"""::"""		1208780	0					
ANR	1208894	IfStatement	if ( class_name_end )		1208780	4					
ANR	1208895	Condition	class_name_end	533:6:12968:12981	1208780	0	True				
ANR	1208896	Identifier	class_name_end		1208780	0					
ANR	1208897	CompoundStatement		28:22:782:782	1208780	1					
ANR	1208898	ExpressionStatement	class_name_len = class_name_end - text	534:3:12989:13027	1208780	0	True				
ANR	1208899	AssignmentExpression	class_name_len = class_name_end - text		1208780	0		=			
ANR	1208900	Identifier	class_name_len		1208780	0					
ANR	1208901	AdditiveExpression	class_name_end - text		1208780	1		-			
ANR	1208902	Identifier	class_name_end		1208780	0					
ANR	1208903	Identifier	text		1208780	1					
ANR	1208904	ExpressionStatement	"class_name = zend_str_tolower_dup ( text , class_name_len )"	535:3:13032:13087	1208780	1	True				
ANR	1208905	AssignmentExpression	"class_name = zend_str_tolower_dup ( text , class_name_len )"		1208780	0		=			
ANR	1208906	Identifier	class_name		1208780	0					
ANR	1208907	CallExpression	"zend_str_tolower_dup ( text , class_name_len )"		1208780	1					
ANR	1208908	Callee	zend_str_tolower_dup		1208780	0					
ANR	1208909	Identifier	zend_str_tolower_dup		1208780	0					
ANR	1208910	ArgumentList	text		1208780	1					
ANR	1208911	Argument	text		1208780	0					
ANR	1208912	Identifier	text		1208780	0					
ANR	1208913	Argument	class_name_len		1208780	1					
ANR	1208914	Identifier	class_name_len		1208780	0					
ANR	1208915	ExpressionStatement	class_name [ class_name_len ] = '\\0'	536:3:13092:13125	1208780	2	True				
ANR	1208916	AssignmentExpression	class_name [ class_name_len ] = '\\0'		1208780	0		=			
ANR	1208917	ArrayIndexing	class_name [ class_name_len ]		1208780	0					
ANR	1208918	Identifier	class_name		1208780	0					
ANR	1208919	Identifier	class_name_len		1208780	1					
ANR	1208920	PrimaryExpression	'\\0'		1208780	1					
ANR	1208921	Statement	if	537:3:13159:13160	1208780	3	True				
ANR	1208922	Statement	(	537:6:13162:13162	1208780	4	True				
ANR	1208923	Statement	zend_lookup_class	537:7:13163:13179	1208780	5	True				
ANR	1208924	Statement	(	537:24:13180:13180	1208780	6	True				
ANR	1208925	Statement	class_name	537:25:13181:13190	1208780	7	True				
ANR	1208926	Statement	","	537:35:13191:13191	1208780	8	True				
ANR	1208927	Statement	class_name_len	537:37:13193:13206	1208780	9	True				
ANR	1208928	Statement	","	537:51:13207:13207	1208780	10	True				
ANR	1208929	Statement	&	537:53:13209:13209	1208780	11	True				
ANR	1208930	Statement	pce	537:54:13210:13212	1208780	12	True				
ANR	1208931	Statement	TSRMLS_CC	537:58:13214:13222	1208780	13	True				
ANR	1208932	Statement	)	537:67:13223:13223	1208780	14	True				
ANR	1208933	Statement	==	537:68:13224:13225	1208780	15	True				
ANR	1208934	Statement	FAILURE	537:70:13226:13232	1208780	16	True				
ANR	1208935	Statement	)	537:77:13233:13233	1208780	17	True				
ANR	1208936	CompoundStatement		32:79:1033:1033	1208780	18					
ANR	1208937	ExpressionStatement	efree ( class_name )	538:4:13241:13258	1208780	0	True				
ANR	1208938	CallExpression	efree ( class_name )		1208780	0					
ANR	1208939	Callee	efree		1208780	0					
ANR	1208940	Identifier	efree		1208780	0					
ANR	1208941	ArgumentList	class_name		1208780	1					
ANR	1208942	Argument	class_name		1208780	0					
ANR	1208943	Identifier	class_name		1208780	0					
ANR	1208944	ReturnStatement	return NULL ;	539:4:13264:13275	1208780	1	True				
ANR	1208945	Identifier	NULL		1208780	0					
ANR	1208946	ExpressionStatement	"lc_text = zend_str_tolower_dup ( class_name_end + 2 , textlen - 2 - class_name_len )"	541:3:13285:13365	1208780	19	True				
ANR	1208947	AssignmentExpression	"lc_text = zend_str_tolower_dup ( class_name_end + 2 , textlen - 2 - class_name_len )"		1208780	0		=			
ANR	1208948	Identifier	lc_text		1208780	0					
ANR	1208949	CallExpression	"zend_str_tolower_dup ( class_name_end + 2 , textlen - 2 - class_name_len )"		1208780	1					
ANR	1208950	Callee	zend_str_tolower_dup		1208780	0					
ANR	1208951	Identifier	zend_str_tolower_dup		1208780	0					
ANR	1208952	ArgumentList	class_name_end + 2		1208780	1					
ANR	1208953	Argument	class_name_end + 2		1208780	0					
ANR	1208954	AdditiveExpression	class_name_end + 2		1208780	0		+			
ANR	1208955	Identifier	class_name_end		1208780	0					
ANR	1208956	PrimaryExpression	2		1208780	1					
ANR	1208957	Argument	textlen - 2 - class_name_len		1208780	1					
ANR	1208958	AdditiveExpression	textlen - 2 - class_name_len		1208780	0		-			
ANR	1208959	Identifier	textlen		1208780	0					
ANR	1208960	AdditiveExpression	2 - class_name_len		1208780	1		-			
ANR	1208961	PrimaryExpression	2		1208780	0					
ANR	1208962	Identifier	class_name_len		1208780	1					
ANR	1208963	ExpressionStatement	textlen -= ( class_name_len + 2 )	542:3:13370:13401	1208780	20	True				
ANR	1208964	AssignmentExpression	textlen -= ( class_name_len + 2 )		1208780	0		-=			
ANR	1208965	Identifier	textlen		1208780	0					
ANR	1208966	AdditiveExpression	class_name_len + 2		1208780	1		+			
ANR	1208967	Identifier	class_name_len		1208780	0					
ANR	1208968	PrimaryExpression	2		1208780	1					
ANR	1208969	ElseStatement	else		1208780	0					
ANR	1208970	CompoundStatement		38:9:1210:1210	1208780	0					
ANR	1208971	ExpressionStatement	"lc_text = zend_str_tolower_dup ( text , textlen )"	544:3:13417:13462	1208780	0	True				
ANR	1208972	AssignmentExpression	"lc_text = zend_str_tolower_dup ( text , textlen )"		1208780	0		=			
ANR	1208973	Identifier	lc_text		1208780	0					
ANR	1208974	CallExpression	"zend_str_tolower_dup ( text , textlen )"		1208780	1					
ANR	1208975	Callee	zend_str_tolower_dup		1208780	0					
ANR	1208976	Identifier	zend_str_tolower_dup		1208780	0					
ANR	1208977	ArgumentList	text		1208780	1					
ANR	1208978	Argument	text		1208780	0					
ANR	1208979	Identifier	text		1208780	0					
ANR	1208980	Argument	textlen		1208780	1					
ANR	1208981	Identifier	textlen		1208780	0					
ANR	1208982	SwitchStatement	switch ( cli_completion_state )		1208780	5					
ANR	1208983	Condition	cli_completion_state	547:10:13479:13498	1208780	0	True				
ANR	1208984	Identifier	cli_completion_state		1208780	0					
ANR	1208985	CompoundStatement		42:32:1299:1299	1208780	1					
ANR	1208986	Label	case 0 :	548:3:13506:13512	1208780	0	True				
ANR	1208987	Label	case 1 :	549:3:13517:13523	1208780	1	True				
ANR	1208988	Statement	retval	550:4:13529:13534	1208780	2	True				
ANR	1208989	Statement	=	550:11:13536:13536	1208780	3	True				
ANR	1208990	Statement	cli_completion_generator_func	550:13:13538:13566	1208780	4	True				
ANR	1208991	Statement	(	550:42:13567:13567	1208780	5	True				
ANR	1208992	Statement	lc_text	550:43:13568:13574	1208780	6	True				
ANR	1208993	Statement	","	550:50:13575:13575	1208780	7	True				
ANR	1208994	Statement	textlen	550:52:13577:13583	1208780	8	True				
ANR	1208995	Statement	","	550:59:13584:13584	1208780	9	True				
ANR	1208996	Statement	&	550:61:13586:13586	1208780	10	True				
ANR	1208997	Statement	cli_completion_state	550:62:13587:13606	1208780	11	True				
ANR	1208998	Statement	","	550:82:13607:13607	1208780	12	True				
ANR	1208999	Statement	pce	550:84:13609:13611	1208780	13	True				
ANR	1209000	Statement	?	550:88:13613:13613	1208780	14	True				
ANR	1209001	Statement	&	550:90:13615:13615	1208780	15	True				
ANR	1209002	Statement	(	550:91:13616:13616	1208780	16	True				
ANR	1209003	Statement	*	550:92:13617:13617	1208780	17	True				
ANR	1209004	Statement	pce	550:93:13618:13620	1208780	18	True				
ANR	1209005	Statement	)	550:96:13621:13621	1208780	19	True				
ANR	1209006	Statement	->	550:97:13622:13623	1208780	20	True				
ANR	1209007	Label	function_table :	550:99:13624:13639	1208780	21	True				
ANR	1209008	Identifier	function_table		1208780	0					
ANR	1209009	Statement	EG	550:116:13641:13642	1208780	22	True				
ANR	1209010	Statement	(	550:118:13643:13643	1208780	23	True				
ANR	1209011	Statement	function_table	550:119:13644:13657	1208780	24	True				
ANR	1209012	Statement	)	550:133:13658:13658	1208780	25	True				
ANR	1209013	Statement	TSRMLS_CC	550:135:13660:13668	1208780	26	True				
ANR	1209014	Statement	)	550:144:13669:13669	1208780	27	True				
ANR	1209015	ExpressionStatement		550:145:13670:13670	1208780	28	True				
ANR	1209016	IfStatement	if ( retval )		1208780	29					
ANR	1209017	Condition	retval	551:8:13680:13685	1208780	0	True				
ANR	1209018	Identifier	retval		1208780	0					
ANR	1209019	CompoundStatement		46:16:1486:1486	1208780	1					
ANR	1209020	BreakStatement	break ;	552:5:13695:13700	1208780	0	True				
ANR	1209021	Label	case 2 :	554:3:13711:13717	1208780	30	True				
ANR	1209022	Label	case 3 :	555:3:13722:13728	1208780	31	True				
ANR	1209023	Statement	retval	556:4:13734:13739	1208780	32	True				
ANR	1209024	Statement	=	556:11:13741:13741	1208780	33	True				
ANR	1209025	Statement	cli_completion_generator_define	556:13:13743:13773	1208780	34	True				
ANR	1209026	Statement	(	556:44:13774:13774	1208780	35	True				
ANR	1209027	Statement	text	556:45:13775:13778	1208780	36	True				
ANR	1209028	Statement	","	556:49:13779:13779	1208780	37	True				
ANR	1209029	Statement	textlen	556:51:13781:13787	1208780	38	True				
ANR	1209030	Statement	","	556:58:13788:13788	1208780	39	True				
ANR	1209031	Statement	&	556:60:13790:13790	1208780	40	True				
ANR	1209032	Statement	cli_completion_state	556:61:13791:13810	1208780	41	True				
ANR	1209033	Statement	","	556:81:13811:13811	1208780	42	True				
ANR	1209034	Statement	pce	556:83:13813:13815	1208780	43	True				
ANR	1209035	Statement	?	556:87:13817:13817	1208780	44	True				
ANR	1209036	Statement	&	556:89:13819:13819	1208780	45	True				
ANR	1209037	Statement	(	556:90:13820:13820	1208780	46	True				
ANR	1209038	Statement	*	556:91:13821:13821	1208780	47	True				
ANR	1209039	Statement	pce	556:92:13822:13824	1208780	48	True				
ANR	1209040	Statement	)	556:95:13825:13825	1208780	49	True				
ANR	1209041	Statement	->	556:96:13826:13827	1208780	50	True				
ANR	1209042	Label	constants_table :	556:98:13828:13844	1208780	51	True				
ANR	1209043	Identifier	constants_table		1208780	0					
ANR	1209044	Statement	EG	556:116:13846:13847	1208780	52	True				
ANR	1209045	Statement	(	556:118:13848:13848	1208780	53	True				
ANR	1209046	Statement	zend_constants	556:119:13849:13862	1208780	54	True				
ANR	1209047	Statement	)	556:133:13863:13863	1208780	55	True				
ANR	1209048	Statement	TSRMLS_CC	556:135:13865:13873	1208780	56	True				
ANR	1209049	Statement	)	556:144:13874:13874	1208780	57	True				
ANR	1209050	ExpressionStatement		556:145:13875:13875	1208780	58	True				
ANR	1209051	IfStatement	if ( retval || pce )		1208780	59					
ANR	1209052	Condition	retval || pce	557:8:13885:13897	1208780	0	True				
ANR	1209053	OrExpression	retval || pce		1208780	0		||			
ANR	1209054	Identifier	retval		1208780	0					
ANR	1209055	Identifier	pce		1208780	1					
ANR	1209056	CompoundStatement		52:23:1698:1698	1208780	1					
ANR	1209057	BreakStatement	break ;	558:5:13907:13912	1208780	0	True				
ANR	1209058	Label	case 4 :	560:3:13923:13929	1208780	60	True				
ANR	1209059	Label	case 5 :	561:3:13934:13940	1208780	61	True				
ANR	1209060	Statement	retval	562:4:13946:13951	1208780	62	True				
ANR	1209061	Statement	=	562:11:13953:13953	1208780	63	True				
ANR	1209062	Statement	cli_completion_generator_class	562:13:13955:13984	1208780	64	True				
ANR	1209063	Statement	(	562:43:13985:13985	1208780	65	True				
ANR	1209064	Statement	lc_text	562:44:13986:13992	1208780	66	True				
ANR	1209065	Statement	","	562:51:13993:13993	1208780	67	True				
ANR	1209066	Statement	textlen	562:53:13995:14001	1208780	68	True				
ANR	1209067	Statement	","	562:60:14002:14002	1208780	69	True				
ANR	1209068	Statement	&	562:62:14004:14004	1208780	70	True				
ANR	1209069	Statement	cli_completion_state	562:63:14005:14024	1208780	71	True				
ANR	1209070	Statement	TSRMLS_CC	562:84:14026:14034	1208780	72	True				
ANR	1209071	Statement	)	562:93:14035:14035	1208780	73	True				
ANR	1209072	ExpressionStatement		562:94:14036:14036	1208780	74	True				
ANR	1209073	BreakStatement	break ;	563:4:14042:14047	1208780	75	True				
ANR	1209074	Label	default :	564:3:14052:14059	1208780	76	True				
ANR	1209075	Identifier	default		1208780	0					
ANR	1209076	BreakStatement	break ;	565:4:14065:14070	1208780	77	True				
ANR	1209077	ExpressionStatement	efree ( lc_text )	567:2:14078:14092	1208780	6	True				
ANR	1209078	CallExpression	efree ( lc_text )		1208780	0					
ANR	1209079	Callee	efree		1208780	0					
ANR	1209080	Identifier	efree		1208780	0					
ANR	1209081	ArgumentList	lc_text		1208780	1					
ANR	1209082	Argument	lc_text		1208780	0					
ANR	1209083	Identifier	lc_text		1208780	0					
ANR	1209084	IfStatement	if ( class_name_end )		1208780	7					
ANR	1209085	Condition	class_name_end	568:6:14100:14113	1208780	0	True				
ANR	1209086	Identifier	class_name_end		1208780	0					
ANR	1209087	CompoundStatement		63:22:1914:1914	1208780	1					
ANR	1209088	ExpressionStatement	efree ( class_name )	569:3:14121:14138	1208780	0	True				
ANR	1209089	CallExpression	efree ( class_name )		1208780	0					
ANR	1209090	Callee	efree		1208780	0					
ANR	1209091	Identifier	efree		1208780	0					
ANR	1209092	ArgumentList	class_name		1208780	1					
ANR	1209093	Argument	class_name		1208780	0					
ANR	1209094	Identifier	class_name		1208780	0					
ANR	1209095	IfStatement	if ( pce && retval )		1208780	8					
ANR	1209096	Condition	pce && retval	571:6:14150:14162	1208780	0	True				
ANR	1209097	AndExpression	pce && retval		1208780	0		&&			
ANR	1209098	Identifier	pce		1208780	0					
ANR	1209099	Identifier	retval		1208780	1					
ANR	1209100	CompoundStatement		68:3:2022:2045	1208780	1					
ANR	1209101	IdentifierDeclStatement	int len = class_name_len + 2 + strlen ( retval ) + 1 ;	572:3:14170:14219	1208780	0	True				
ANR	1209102	IdentifierDecl	len = class_name_len + 2 + strlen ( retval ) + 1		1208780	0					
ANR	1209103	IdentifierDeclType	int		1208780	0					
ANR	1209104	Identifier	len		1208780	1					
ANR	1209105	AssignmentExpression	len = class_name_len + 2 + strlen ( retval ) + 1		1208780	2		=			
ANR	1209106	Identifier	len		1208780	0					
ANR	1209107	AdditiveExpression	class_name_len + 2 + strlen ( retval ) + 1		1208780	1		+			
ANR	1209108	Identifier	class_name_len		1208780	0					
ANR	1209109	AdditiveExpression	2 + strlen ( retval ) + 1		1208780	1		+			
ANR	1209110	PrimaryExpression	2		1208780	0					
ANR	1209111	AdditiveExpression	strlen ( retval ) + 1		1208780	1		+			
ANR	1209112	CallExpression	strlen ( retval )		1208780	0					
ANR	1209113	Callee	strlen		1208780	0					
ANR	1209114	Identifier	strlen		1208780	0					
ANR	1209115	ArgumentList	retval		1208780	1					
ANR	1209116	Argument	retval		1208780	0					
ANR	1209117	Identifier	retval		1208780	0					
ANR	1209118	PrimaryExpression	1		1208780	1					
ANR	1209119	IdentifierDeclStatement	char * tmp = malloc ( len ) ;	573:3:14224:14247	1208780	1	True				
ANR	1209120	IdentifierDecl	* tmp = malloc ( len )		1208780	0					
ANR	1209121	IdentifierDeclType	char *		1208780	0					
ANR	1209122	Identifier	tmp		1208780	1					
ANR	1209123	AssignmentExpression	* tmp = malloc ( len )		1208780	2		=			
ANR	1209124	Identifier	tmp		1208780	0					
ANR	1209125	CallExpression	malloc ( len )		1208780	1					
ANR	1209126	Callee	malloc		1208780	0					
ANR	1209127	Identifier	malloc		1208780	0					
ANR	1209128	ArgumentList	len		1208780	1					
ANR	1209129	Argument	len		1208780	0					
ANR	1209130	Identifier	len		1208780	0					
ANR	1209131	ExpressionStatement	"snprintf ( tmp , len , ""%s::%s"" , ( * pce ) -> name , retval )"	575:3:14256:14306	1208780	2	True				
ANR	1209132	CallExpression	"snprintf ( tmp , len , ""%s::%s"" , ( * pce ) -> name , retval )"		1208780	0					
ANR	1209133	Callee	snprintf		1208780	0					
ANR	1209134	Identifier	snprintf		1208780	0					
ANR	1209135	ArgumentList	tmp		1208780	1					
ANR	1209136	Argument	tmp		1208780	0					
ANR	1209137	Identifier	tmp		1208780	0					
ANR	1209138	Argument	len		1208780	1					
ANR	1209139	Identifier	len		1208780	0					
ANR	1209140	Argument	"""%s::%s"""		1208780	2					
ANR	1209141	PrimaryExpression	"""%s::%s"""		1208780	0					
ANR	1209142	Argument	( * pce ) -> name		1208780	3					
ANR	1209143	PtrMemberAccess	( * pce ) -> name		1208780	0					
ANR	1209144	UnaryOperationExpression	* pce		1208780	0					
ANR	1209145	UnaryOperator	*		1208780	0					
ANR	1209146	Identifier	pce		1208780	1					
ANR	1209147	Identifier	name		1208780	1					
ANR	1209148	Argument	retval		1208780	4					
ANR	1209149	Identifier	retval		1208780	0					
ANR	1209150	ExpressionStatement	free ( retval )	576:3:14311:14323	1208780	3	True				
ANR	1209151	CallExpression	free ( retval )		1208780	0					
ANR	1209152	Callee	free		1208780	0					
ANR	1209153	Identifier	free		1208780	0					
ANR	1209154	ArgumentList	retval		1208780	1					
ANR	1209155	Argument	retval		1208780	0					
ANR	1209156	Identifier	retval		1208780	0					
ANR	1209157	ExpressionStatement	retval = tmp	577:3:14328:14340	1208780	4	True				
ANR	1209158	AssignmentExpression	retval = tmp		1208780	0		=			
ANR	1209159	Identifier	retval		1208780	0					
ANR	1209160	Identifier	tmp		1208780	1					
ANR	1209161	ReturnStatement	return retval ;	581:1:14352:14365	1208780	5	True				
ANR	1209162	Identifier	retval		1208780	0					
ANR	1209163	ReturnType	static char *		1208780	1					
ANR	1209164	Identifier	cli_completion_generator		1208780	2					
ANR	1209165	ParameterList	"const char * text , int index"		1208780	3					
ANR	1209166	Parameter	const char * text	505:38:12162:12177	1208780	0	True				
ANR	1209167	ParameterType	const char *		1208780	0					
ANR	1209168	Identifier	text		1208780	1					
ANR	1209169	Parameter	int index	505:56:12180:12188	1208780	1	True				
ANR	1209170	ParameterType	int		1208780	0					
ANR	1209171	Identifier	index		1208780	1					
ANR	1209172	CFGEntryNode	ENTRY		1208780		True				
ANR	1209173	CFGExitNode	EXIT		1208780		True				
ANR	1209174	Symbol	malloc		1208780						
ANR	1209175	Symbol	NULL		1208780						
ANR	1209176	Symbol	* class_name		1208780						
ANR	1209177	Symbol	( * pce ) -> name		1208780						
ANR	1209178	Symbol	* * pce		1208780						
ANR	1209179	Symbol	* text		1208780						
ANR	1209180	Symbol	index		1208780						
ANR	1209181	Symbol	retval		1208780						
ANR	1209182	Symbol	* class_name_len		1208780						
ANR	1209183	Symbol	strlen		1208780						
ANR	1209184	Symbol	cli_completion_state		1208780						
ANR	1209185	Symbol	pce		1208780						
ANR	1209186	Symbol	lc_text		1208780						
ANR	1209187	Symbol	len		1208780						
ANR	1209188	Symbol	textlen		1208780						
ANR	1209189	Symbol	strstr		1208780						
ANR	1209190	Symbol	tmp		1208780						
ANR	1209191	Symbol	class_name_end		1208780						
ANR	1209192	Symbol	text		1208780						
ANR	1209193	Symbol	class_name_len		1208780						
ANR	1209194	Symbol	* pce		1208780						
ANR	1209195	Symbol	class_name		1208780						
ANR	1209196	Symbol	zend_str_tolower_dup		1208780						
ANR	1209197	Function	cli_code_completion	584:0:14380:14527							
ANR	1209198	FunctionDef	"cli_code_completion (const char * text , int start , int end)"		1209197	0					
ANR	1209199	CompoundStatement		585:0:14462:14527	1209197	0					
ANR	1209200	ReturnStatement	"return rl_completion_matches ( text , cli_completion_generator ) ;"	586:1:14465:14525	1209197	0	True				
ANR	1209201	CallExpression	"rl_completion_matches ( text , cli_completion_generator )"		1209197	0					
ANR	1209202	Callee	rl_completion_matches		1209197	0					
ANR	1209203	Identifier	rl_completion_matches		1209197	0					
ANR	1209204	ArgumentList	text		1209197	1					
ANR	1209205	Argument	text		1209197	0					
ANR	1209206	Identifier	text		1209197	0					
ANR	1209207	Argument	cli_completion_generator		1209197	1					
ANR	1209208	Identifier	cli_completion_generator		1209197	0					
ANR	1209209	ReturnType	static char * *		1209197	1					
ANR	1209210	Identifier	cli_code_completion		1209197	2					
ANR	1209211	ParameterList	"const char * text , int start , int end"		1209197	3					
ANR	1209212	Parameter	const char * text	584:34:14414:14429	1209197	0	True				
ANR	1209213	ParameterType	const char *		1209197	0					
ANR	1209214	Identifier	text		1209197	1					
ANR	1209215	Parameter	int start	584:52:14432:14440	1209197	1	True				
ANR	1209216	ParameterType	int		1209197	0					
ANR	1209217	Identifier	start		1209197	1					
ANR	1209218	Parameter	int end	584:63:14443:14449	1209197	2	True				
ANR	1209219	ParameterType	int		1209197	0					
ANR	1209220	Identifier	end		1209197	1					
ANR	1209221	CFGEntryNode	ENTRY		1209197		True				
ANR	1209222	CFGExitNode	EXIT		1209197		True				
ANR	1209223	Symbol	rl_completion_matches		1209197						
ANR	1209224	Symbol	start		1209197						
ANR	1209225	Symbol	cli_completion_generator		1209197						
ANR	1209226	Symbol	end		1209197						
ANR	1209227	Symbol	text		1209197						
ANR	1209228	DeclStmt									
ANR	1209229	Decl							char	char *	line
ANR	1209230	DeclStmt									
ANR	1209231	Decl							size_t	size_t	size
ANR	1209232	Decl							size_t	size_t	pos
ANR	1209233	Decl							size_t	size_t	len
ANR	1209234	DeclStmt									
ANR	1209235	Decl							char	char *	code
ANR	1209236	DeclStmt									
ANR	1209237	Decl							char	char *	prompt
ANR	1209238	DeclStmt									
ANR	1209239	Decl							char	char *	history_file
ANR	1209240	DeclStmt									
ANR	1209241	Decl							int	int	history_lines_to_write
ANR	1209242	DeclStmt									
ANR	1209243	Decl							zend_file_handle	zend_file_handle *	prepend_file_p
ANR	1209244	DeclStmt									
ANR	1209245	Decl							zend_file_handle	zend_file_handle	prepend_file
ANR	1209246	DeclStmt									
ANR	1209247	Decl							char	char *	param
ANR	1209248	DeclStmt									
ANR	1209249	Decl							char	char *	cmd
ANR	1209250	DeclStmt									
ANR	1209251	Decl							uint	uint	cmd_len
ANR	1209252	DeclStmt									
ANR	1209253	Decl							cli_shell_callbacks_t * ( * ) ( )	cli_shell_callbacks_t * ( * ) ( )	get_callbacks
ANR	1209254	DeclStmt									
ANR	1209255	Decl							cli_shell_callbacks_t	cli_shell_callbacks_t *	cb
ANR	1209256	DeclStmt									
ANR	1209257	Decl							cli_shell_callbacks_t	cli_shell_callbacks_t *	cb
