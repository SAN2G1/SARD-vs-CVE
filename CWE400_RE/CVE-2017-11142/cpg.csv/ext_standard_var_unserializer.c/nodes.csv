command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2038312	File	data/converged/CVE-2017-11142_php-src/ext_standard_var_unserializer.c								
ANR	2038313	ClassDef	<unnamed>	36:8:1702:1785							
ANR	2038314	DeclStmt									
ANR	2038315	Decl							zval	zval * [ VAR_ENTRIES_MAX ]	data
ANR	2038316	DeclStmt									
ANR	2038317	Decl							long	long	used_slots
ANR	2038318	DeclStmt									
ANR	2038319	Decl							void	void *	next
ANR	2038320	DeclStmt									
ANR	2038321	Decl									var_entries
ANR	2038322	Function	var_push	42:0:1788:2412							
ANR	2038323	FunctionDef	"var_push (php_unserialize_data_t * var_hashx , zval * * rval)"		2038322	0					
ANR	2038324	CompoundStatement		43:0:1864:2412	2038322	0					
ANR	2038325	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> last ;	44:1:1867:1909	2038322	0	True				
ANR	2038326	IdentifierDecl	* var_hash = ( * var_hashx ) -> last		2038322	0					
ANR	2038327	IdentifierDeclType	var_entries *		2038322	0					
ANR	2038328	Identifier	var_hash		2038322	1					
ANR	2038329	AssignmentExpression	* var_hash = ( * var_hashx ) -> last		2038322	2		=			
ANR	2038330	Identifier	var_hash		2038322	0					
ANR	2038331	PtrMemberAccess	( * var_hashx ) -> last		2038322	1					
ANR	2038332	UnaryOperationExpression	* var_hashx		2038322	0					
ANR	2038333	UnaryOperator	*		2038322	0					
ANR	2038334	Identifier	var_hashx		2038322	1					
ANR	2038335	Identifier	last		2038322	1					
ANR	2038336	ExpressionStatement	"fprintf ( stderr , ""var_push(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"	46:1:1932:2022	2038322	1	True				
ANR	2038337	CallExpression	"fprintf ( stderr , ""var_push(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"		2038322	0					
ANR	2038338	Callee	fprintf		2038322	0					
ANR	2038339	Identifier	fprintf		2038322	0					
ANR	2038340	ArgumentList	stderr		2038322	1					
ANR	2038341	Argument	stderr		2038322	0					
ANR	2038342	Identifier	stderr		2038322	0					
ANR	2038343	Argument	"""var_push(%ld): %d\\n"""		2038322	1					
ANR	2038344	PrimaryExpression	"""var_push(%ld): %d\\n"""		2038322	0					
ANR	2038345	Argument	var_hash ? var_hash -> used_slots : - 1L		2038322	2					
ANR	2038346	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2038322	0					
ANR	2038347	Condition	var_hash		2038322	0					
ANR	2038348	Identifier	var_hash		2038322	0					
ANR	2038349	PtrMemberAccess	var_hash -> used_slots		2038322	1					
ANR	2038350	Identifier	var_hash		2038322	0					
ANR	2038351	Identifier	used_slots		2038322	1					
ANR	2038352	UnaryOperationExpression	- 1L		2038322	2					
ANR	2038353	UnaryOperator	-		2038322	0					
ANR	2038354	PrimaryExpression	1L		2038322	1					
ANR	2038355	Argument	Z_TYPE_PP ( rval )		2038322	3					
ANR	2038356	CallExpression	Z_TYPE_PP ( rval )		2038322	0					
ANR	2038357	Callee	Z_TYPE_PP		2038322	0					
ANR	2038358	Identifier	Z_TYPE_PP		2038322	0					
ANR	2038359	ArgumentList	rval		2038322	1					
ANR	2038360	Argument	rval		2038322	0					
ANR	2038361	Identifier	rval		2038322	0					
ANR	2038362	IfStatement	if ( ! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX )		2038322	2					
ANR	2038363	Condition	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX	49:5:2037:2088	2038322	0	True				
ANR	2038364	OrExpression	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX		2038322	0		||			
ANR	2038365	UnaryOperationExpression	! var_hash		2038322	0					
ANR	2038366	UnaryOperator	!		2038322	0					
ANR	2038367	Identifier	var_hash		2038322	1					
ANR	2038368	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2038322	1		==			
ANR	2038369	PtrMemberAccess	var_hash -> used_slots		2038322	0					
ANR	2038370	Identifier	var_hash		2038322	0					
ANR	2038371	Identifier	used_slots		2038322	1					
ANR	2038372	Identifier	VAR_ENTRIES_MAX		2038322	1					
ANR	2038373	CompoundStatement		7:59:226:226	2038322	1					
ANR	2038374	ExpressionStatement	var_hash = emalloc ( sizeof ( var_entries ) )	50:2:2095:2134	2038322	0	True				
ANR	2038375	AssignmentExpression	var_hash = emalloc ( sizeof ( var_entries ) )		2038322	0		=			
ANR	2038376	Identifier	var_hash		2038322	0					
ANR	2038377	CallExpression	emalloc ( sizeof ( var_entries ) )		2038322	1					
ANR	2038378	Callee	emalloc		2038322	0					
ANR	2038379	Identifier	emalloc		2038322	0					
ANR	2038380	ArgumentList	sizeof ( var_entries )		2038322	1					
ANR	2038381	Argument	sizeof ( var_entries )		2038322	0					
ANR	2038382	SizeofExpression	sizeof ( var_entries )		2038322	0					
ANR	2038383	Sizeof	sizeof		2038322	0					
ANR	2038384	SizeofOperand	var_entries		2038322	1					
ANR	2038385	ExpressionStatement	var_hash -> used_slots = 0	51:2:2138:2162	2038322	1	True				
ANR	2038386	AssignmentExpression	var_hash -> used_slots = 0		2038322	0		=			
ANR	2038387	PtrMemberAccess	var_hash -> used_slots		2038322	0					
ANR	2038388	Identifier	var_hash		2038322	0					
ANR	2038389	Identifier	used_slots		2038322	1					
ANR	2038390	PrimaryExpression	0		2038322	1					
ANR	2038391	ExpressionStatement	var_hash -> next = 0	52:2:2166:2184	2038322	2	True				
ANR	2038392	AssignmentExpression	var_hash -> next = 0		2038322	0		=			
ANR	2038393	PtrMemberAccess	var_hash -> next		2038322	0					
ANR	2038394	Identifier	var_hash		2038322	0					
ANR	2038395	Identifier	next		2038322	1					
ANR	2038396	PrimaryExpression	0		2038322	1					
ANR	2038397	IfStatement	if ( ! ( * var_hashx ) -> first )		2038322	3					
ANR	2038398	Condition	! ( * var_hashx ) -> first	54:6:2193:2212	2038322	0	True				
ANR	2038399	UnaryOperationExpression	! ( * var_hashx ) -> first		2038322	0					
ANR	2038400	UnaryOperator	!		2038322	0					
ANR	2038401	PtrMemberAccess	( * var_hashx ) -> first		2038322	1					
ANR	2038402	UnaryOperationExpression	* var_hashx		2038322	0					
ANR	2038403	UnaryOperator	*		2038322	0					
ANR	2038404	Identifier	var_hashx		2038322	1					
ANR	2038405	Identifier	first		2038322	1					
ANR	2038406	CompoundStatement		12:28:350:350	2038322	1					
ANR	2038407	ExpressionStatement	( * var_hashx ) -> first = var_hash	55:3:2220:2250	2038322	0	True				
ANR	2038408	AssignmentExpression	( * var_hashx ) -> first = var_hash		2038322	0		=			
ANR	2038409	PtrMemberAccess	( * var_hashx ) -> first		2038322	0					
ANR	2038410	UnaryOperationExpression	* var_hashx		2038322	0					
ANR	2038411	UnaryOperator	*		2038322	0					
ANR	2038412	Identifier	var_hashx		2038322	1					
ANR	2038413	Identifier	first		2038322	1					
ANR	2038414	Identifier	var_hash		2038322	1					
ANR	2038415	ElseStatement	else		2038322	0					
ANR	2038416	CompoundStatement		14:9:396:396	2038322	0					
ANR	2038417	ExpressionStatement	( ( var_entries * ) ( * var_hashx ) -> last ) -> next = var_hash	57:3:2266:2319	2038322	0	True				
ANR	2038418	AssignmentExpression	( ( var_entries * ) ( * var_hashx ) -> last ) -> next = var_hash		2038322	0		=			
ANR	2038419	PtrMemberAccess	( ( var_entries * ) ( * var_hashx ) -> last ) -> next		2038322	0					
ANR	2038420	CastExpression	( var_entries * ) ( * var_hashx ) -> last		2038322	0					
ANR	2038421	CastTarget	var_entries *		2038322	0					
ANR	2038422	PtrMemberAccess	( * var_hashx ) -> last		2038322	1					
ANR	2038423	UnaryOperationExpression	* var_hashx		2038322	0					
ANR	2038424	UnaryOperator	*		2038322	0					
ANR	2038425	Identifier	var_hashx		2038322	1					
ANR	2038426	Identifier	last		2038322	1					
ANR	2038427	Identifier	next		2038322	1					
ANR	2038428	Identifier	var_hash		2038322	1					
ANR	2038429	ExpressionStatement	( * var_hashx ) -> last = var_hash	60:2:2328:2357	2038322	4	True				
ANR	2038430	AssignmentExpression	( * var_hashx ) -> last = var_hash		2038322	0		=			
ANR	2038431	PtrMemberAccess	( * var_hashx ) -> last		2038322	0					
ANR	2038432	UnaryOperationExpression	* var_hashx		2038322	0					
ANR	2038433	UnaryOperator	*		2038322	0					
ANR	2038434	Identifier	var_hashx		2038322	1					
ANR	2038435	Identifier	last		2038322	1					
ANR	2038436	Identifier	var_hash		2038322	1					
ANR	2038437	ExpressionStatement	var_hash -> data [ var_hash -> used_slots ++ ] = * rval	63:1:2364:2410	2038322	3	True				
ANR	2038438	AssignmentExpression	var_hash -> data [ var_hash -> used_slots ++ ] = * rval		2038322	0		=			
ANR	2038439	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ++ ]		2038322	0					
ANR	2038440	PtrMemberAccess	var_hash -> data		2038322	0					
ANR	2038441	Identifier	var_hash		2038322	0					
ANR	2038442	Identifier	data		2038322	1					
ANR	2038443	PostIncDecOperationExpression	var_hash -> used_slots ++		2038322	1					
ANR	2038444	PtrMemberAccess	var_hash -> used_slots		2038322	0					
ANR	2038445	Identifier	var_hash		2038322	0					
ANR	2038446	Identifier	used_slots		2038322	1					
ANR	2038447	IncDec	++		2038322	1					
ANR	2038448	UnaryOperationExpression	* rval		2038322	1					
ANR	2038449	UnaryOperator	*		2038322	0					
ANR	2038450	Identifier	rval		2038322	1					
ANR	2038451	ReturnType	static inline void		2038322	1					
ANR	2038452	Identifier	var_push		2038322	2					
ANR	2038453	ParameterList	"php_unserialize_data_t * var_hashx , zval * * rval"		2038322	3					
ANR	2038454	Parameter	php_unserialize_data_t * var_hashx	42:28:1816:1848	2038322	0	True				
ANR	2038455	ParameterType	php_unserialize_data_t *		2038322	0					
ANR	2038456	Identifier	var_hashx		2038322	1					
ANR	2038457	Parameter	zval * * rval	42:63:1851:1861	2038322	1	True				
ANR	2038458	ParameterType	zval * *		2038322	0					
ANR	2038459	Identifier	rval		2038322	1					
ANR	2038460	CFGEntryNode	ENTRY		2038322		True				
ANR	2038461	CFGExitNode	EXIT		2038322		True				
ANR	2038462	Symbol	* rval		2038322						
ANR	2038463	Symbol	* * var_hash		2038322						
ANR	2038464	Symbol	( ( var_entries * ) ( * var_hashx ) -> last ) -> next		2038322						
ANR	2038465	Symbol	var_hash -> data		2038322						
ANR	2038466	Symbol	* var_hashx		2038322						
ANR	2038467	Symbol	* * var_hashx		2038322						
ANR	2038468	Symbol	* var_hash		2038322						
ANR	2038469	Symbol	var_hash -> next		2038322						
ANR	2038470	Symbol	stderr		2038322						
ANR	2038471	Symbol	( * var_hashx ) -> first		2038322						
ANR	2038472	Symbol	var_hash -> used_slots		2038322						
ANR	2038473	Symbol	Z_TYPE_PP		2038322						
ANR	2038474	Symbol	emalloc		2038322						
ANR	2038475	Symbol	* var_hash -> data		2038322						
ANR	2038476	Symbol	var_hashx		2038322						
ANR	2038477	Symbol	* ( * var_hashx ) -> last		2038322						
ANR	2038478	Symbol	* * * var_hashx		2038322						
ANR	2038479	Symbol	( * var_hashx ) -> last		2038322						
ANR	2038480	Symbol	rval		2038322						
ANR	2038481	Symbol	VAR_ENTRIES_MAX		2038322						
ANR	2038482	Symbol	var_hash		2038322						
ANR	2038483	Function	get_var_push_dtor_slot	66:0:2415:3148							
ANR	2038484	FunctionDef	get_var_push_dtor_slot (php_unserialize_data_t * var_hashx)		2038483	0					
ANR	2038485	CompoundStatement		67:0:2494:3148	2038483	0					
ANR	2038486	IdentifierDeclStatement	var_entries * var_hash ;	68:1:2497:2518	2038483	0	True				
ANR	2038487	IdentifierDecl	* var_hash		2038483	0					
ANR	2038488	IdentifierDeclType	var_entries *		2038483	0					
ANR	2038489	Identifier	var_hash		2038483	1					
ANR	2038490	IfStatement	if ( ! var_hashx || ! * var_hashx )		2038483	1					
ANR	2038491	Condition	! var_hashx || ! * var_hashx	70:5:2526:2550	2038483	0	True				
ANR	2038492	OrExpression	! var_hashx || ! * var_hashx		2038483	0		||			
ANR	2038493	UnaryOperationExpression	! var_hashx		2038483	0					
ANR	2038494	UnaryOperator	!		2038483	0					
ANR	2038495	Identifier	var_hashx		2038483	1					
ANR	2038496	UnaryOperationExpression	! * var_hashx		2038483	1					
ANR	2038497	UnaryOperator	!		2038483	0					
ANR	2038498	UnaryOperationExpression	* var_hashx		2038483	1					
ANR	2038499	UnaryOperator	*		2038483	0					
ANR	2038500	Identifier	var_hashx		2038483	1					
ANR	2038501	CompoundStatement		4:32:58:58	2038483	1					
ANR	2038502	ReturnStatement	return NULL ;	71:2:2557:2568	2038483	0	True				
ANR	2038503	Identifier	NULL		2038483	0					
ANR	2038504	ExpressionStatement	var_hash = ( * var_hashx ) -> last_dtor	74:1:2575:2609	2038483	2	True				
ANR	2038505	AssignmentExpression	var_hash = ( * var_hashx ) -> last_dtor		2038483	0		=			
ANR	2038506	Identifier	var_hash		2038483	0					
ANR	2038507	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038483	1					
ANR	2038508	UnaryOperationExpression	* var_hashx		2038483	0					
ANR	2038509	UnaryOperator	*		2038483	0					
ANR	2038510	Identifier	var_hashx		2038483	1					
ANR	2038511	Identifier	last_dtor		2038483	1					
ANR	2038512	ExpressionStatement	"fprintf ( stderr , ""var_push_dtor(%p, %ld): %d\\n"" , * rval , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"	76:1:2632:2738	2038483	3	True				
ANR	2038513	CallExpression	"fprintf ( stderr , ""var_push_dtor(%p, %ld): %d\\n"" , * rval , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"		2038483	0					
ANR	2038514	Callee	fprintf		2038483	0					
ANR	2038515	Identifier	fprintf		2038483	0					
ANR	2038516	ArgumentList	stderr		2038483	1					
ANR	2038517	Argument	stderr		2038483	0					
ANR	2038518	Identifier	stderr		2038483	0					
ANR	2038519	Argument	"""var_push_dtor(%p, %ld): %d\\n"""		2038483	1					
ANR	2038520	PrimaryExpression	"""var_push_dtor(%p, %ld): %d\\n"""		2038483	0					
ANR	2038521	Argument	* rval		2038483	2					
ANR	2038522	UnaryOperationExpression	* rval		2038483	0					
ANR	2038523	UnaryOperator	*		2038483	0					
ANR	2038524	Identifier	rval		2038483	1					
ANR	2038525	Argument	var_hash ? var_hash -> used_slots : - 1L		2038483	3					
ANR	2038526	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2038483	0					
ANR	2038527	Condition	var_hash		2038483	0					
ANR	2038528	Identifier	var_hash		2038483	0					
ANR	2038529	PtrMemberAccess	var_hash -> used_slots		2038483	1					
ANR	2038530	Identifier	var_hash		2038483	0					
ANR	2038531	Identifier	used_slots		2038483	1					
ANR	2038532	UnaryOperationExpression	- 1L		2038483	2					
ANR	2038533	UnaryOperator	-		2038483	0					
ANR	2038534	PrimaryExpression	1L		2038483	1					
ANR	2038535	Argument	Z_TYPE_PP ( rval )		2038483	4					
ANR	2038536	CallExpression	Z_TYPE_PP ( rval )		2038483	0					
ANR	2038537	Callee	Z_TYPE_PP		2038483	0					
ANR	2038538	Identifier	Z_TYPE_PP		2038483	0					
ANR	2038539	ArgumentList	rval		2038483	1					
ANR	2038540	Argument	rval		2038483	0					
ANR	2038541	Identifier	rval		2038483	0					
ANR	2038542	IfStatement	if ( ! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX )		2038483	4					
ANR	2038543	Condition	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX	79:5:2753:2804	2038483	0	True				
ANR	2038544	OrExpression	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX		2038483	0		||			
ANR	2038545	UnaryOperationExpression	! var_hash		2038483	0					
ANR	2038546	UnaryOperator	!		2038483	0					
ANR	2038547	Identifier	var_hash		2038483	1					
ANR	2038548	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2038483	1		==			
ANR	2038549	PtrMemberAccess	var_hash -> used_slots		2038483	0					
ANR	2038550	Identifier	var_hash		2038483	0					
ANR	2038551	Identifier	used_slots		2038483	1					
ANR	2038552	Identifier	VAR_ENTRIES_MAX		2038483	1					
ANR	2038553	CompoundStatement		13:59:312:312	2038483	1					
ANR	2038554	ExpressionStatement	var_hash = emalloc ( sizeof ( var_entries ) )	80:2:2811:2850	2038483	0	True				
ANR	2038555	AssignmentExpression	var_hash = emalloc ( sizeof ( var_entries ) )		2038483	0		=			
ANR	2038556	Identifier	var_hash		2038483	0					
ANR	2038557	CallExpression	emalloc ( sizeof ( var_entries ) )		2038483	1					
ANR	2038558	Callee	emalloc		2038483	0					
ANR	2038559	Identifier	emalloc		2038483	0					
ANR	2038560	ArgumentList	sizeof ( var_entries )		2038483	1					
ANR	2038561	Argument	sizeof ( var_entries )		2038483	0					
ANR	2038562	SizeofExpression	sizeof ( var_entries )		2038483	0					
ANR	2038563	Sizeof	sizeof		2038483	0					
ANR	2038564	SizeofOperand	var_entries		2038483	1					
ANR	2038565	ExpressionStatement	var_hash -> used_slots = 0	81:2:2854:2878	2038483	1	True				
ANR	2038566	AssignmentExpression	var_hash -> used_slots = 0		2038483	0		=			
ANR	2038567	PtrMemberAccess	var_hash -> used_slots		2038483	0					
ANR	2038568	Identifier	var_hash		2038483	0					
ANR	2038569	Identifier	used_slots		2038483	1					
ANR	2038570	PrimaryExpression	0		2038483	1					
ANR	2038571	ExpressionStatement	var_hash -> next = 0	82:2:2882:2900	2038483	2	True				
ANR	2038572	AssignmentExpression	var_hash -> next = 0		2038483	0		=			
ANR	2038573	PtrMemberAccess	var_hash -> next		2038483	0					
ANR	2038574	Identifier	var_hash		2038483	0					
ANR	2038575	Identifier	next		2038483	1					
ANR	2038576	PrimaryExpression	0		2038483	1					
ANR	2038577	IfStatement	if ( ! ( * var_hashx ) -> first_dtor )		2038483	3					
ANR	2038578	Condition	! ( * var_hashx ) -> first_dtor	84:6:2909:2933	2038483	0	True				
ANR	2038579	UnaryOperationExpression	! ( * var_hashx ) -> first_dtor		2038483	0					
ANR	2038580	UnaryOperator	!		2038483	0					
ANR	2038581	PtrMemberAccess	( * var_hashx ) -> first_dtor		2038483	1					
ANR	2038582	UnaryOperationExpression	* var_hashx		2038483	0					
ANR	2038583	UnaryOperator	*		2038483	0					
ANR	2038584	Identifier	var_hashx		2038483	1					
ANR	2038585	Identifier	first_dtor		2038483	1					
ANR	2038586	CompoundStatement		18:33:441:441	2038483	1					
ANR	2038587	ExpressionStatement	( * var_hashx ) -> first_dtor = var_hash	85:3:2941:2976	2038483	0	True				
ANR	2038588	AssignmentExpression	( * var_hashx ) -> first_dtor = var_hash		2038483	0		=			
ANR	2038589	PtrMemberAccess	( * var_hashx ) -> first_dtor		2038483	0					
ANR	2038590	UnaryOperationExpression	* var_hashx		2038483	0					
ANR	2038591	UnaryOperator	*		2038483	0					
ANR	2038592	Identifier	var_hashx		2038483	1					
ANR	2038593	Identifier	first_dtor		2038483	1					
ANR	2038594	Identifier	var_hash		2038483	1					
ANR	2038595	ElseStatement	else		2038483	0					
ANR	2038596	CompoundStatement		20:9:492:492	2038483	0					
ANR	2038597	ExpressionStatement	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash	87:3:2992:3050	2038483	0	True				
ANR	2038598	AssignmentExpression	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash		2038483	0		=			
ANR	2038599	PtrMemberAccess	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2038483	0					
ANR	2038600	CastExpression	( var_entries * ) ( * var_hashx ) -> last_dtor		2038483	0					
ANR	2038601	CastTarget	var_entries *		2038483	0					
ANR	2038602	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038483	1					
ANR	2038603	UnaryOperationExpression	* var_hashx		2038483	0					
ANR	2038604	UnaryOperator	*		2038483	0					
ANR	2038605	Identifier	var_hashx		2038483	1					
ANR	2038606	Identifier	last_dtor		2038483	1					
ANR	2038607	Identifier	next		2038483	1					
ANR	2038608	Identifier	var_hash		2038483	1					
ANR	2038609	ExpressionStatement	( * var_hashx ) -> last_dtor = var_hash	90:2:3059:3093	2038483	4	True				
ANR	2038610	AssignmentExpression	( * var_hashx ) -> last_dtor = var_hash		2038483	0		=			
ANR	2038611	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038483	0					
ANR	2038612	UnaryOperationExpression	* var_hashx		2038483	0					
ANR	2038613	UnaryOperator	*		2038483	0					
ANR	2038614	Identifier	var_hashx		2038483	1					
ANR	2038615	Identifier	last_dtor		2038483	1					
ANR	2038616	Identifier	var_hash		2038483	1					
ANR	2038617	ReturnStatement	return & var_hash -> data [ var_hash -> used_slots ++ ] ;	93:1:3100:3146	2038483	5	True				
ANR	2038618	UnaryOperationExpression	& var_hash -> data [ var_hash -> used_slots ++ ]		2038483	0					
ANR	2038619	UnaryOperator	&		2038483	0					
ANR	2038620	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ++ ]		2038483	1					
ANR	2038621	PtrMemberAccess	var_hash -> data		2038483	0					
ANR	2038622	Identifier	var_hash		2038483	0					
ANR	2038623	Identifier	data		2038483	1					
ANR	2038624	PostIncDecOperationExpression	var_hash -> used_slots ++		2038483	1					
ANR	2038625	PtrMemberAccess	var_hash -> used_slots		2038483	0					
ANR	2038626	Identifier	var_hash		2038483	0					
ANR	2038627	Identifier	used_slots		2038483	1					
ANR	2038628	IncDec	++		2038483	1					
ANR	2038629	ReturnType	static inline zval * *		2038483	1					
ANR	2038630	Identifier	get_var_push_dtor_slot		2038483	2					
ANR	2038631	ParameterList	php_unserialize_data_t * var_hashx		2038483	3					
ANR	2038632	Parameter	php_unserialize_data_t * var_hashx	66:44:2459:2491	2038483	0	True				
ANR	2038633	ParameterType	php_unserialize_data_t *		2038483	0					
ANR	2038634	Identifier	var_hashx		2038483	1					
ANR	2038635	CFGEntryNode	ENTRY		2038483		True				
ANR	2038636	CFGExitNode	EXIT		2038483		True				
ANR	2038637	Symbol	( * var_hashx ) -> last_dtor		2038483						
ANR	2038638	Symbol	* rval		2038483						
ANR	2038639	Symbol	NULL		2038483						
ANR	2038640	Symbol	var_hash -> data		2038483						
ANR	2038641	Symbol	* var_hashx		2038483						
ANR	2038642	Symbol	* ( * var_hashx ) -> last_dtor		2038483						
ANR	2038643	Symbol	* * var_hashx		2038483						
ANR	2038644	Symbol	* var_hash		2038483						
ANR	2038645	Symbol	var_hash -> next		2038483						
ANR	2038646	Symbol	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2038483						
ANR	2038647	Symbol	stderr		2038483						
ANR	2038648	Symbol	var_hash -> used_slots		2038483						
ANR	2038649	Symbol	Z_TYPE_PP		2038483						
ANR	2038650	Symbol	emalloc		2038483						
ANR	2038651	Symbol	var_hashx		2038483						
ANR	2038652	Symbol	( * var_hashx ) -> first_dtor		2038483						
ANR	2038653	Symbol	* * * var_hashx		2038483						
ANR	2038654	Symbol	rval		2038483						
ANR	2038655	Symbol	VAR_ENTRIES_MAX		2038483						
ANR	2038656	Symbol	var_hash		2038483						
ANR	2038657	Function	var_push_dtor	96:0:3151:3313							
ANR	2038658	FunctionDef	"var_push_dtor (php_unserialize_data_t * var_hashx , zval * * rval)"		2038657	0					
ANR	2038659	CompoundStatement		97:0:3225:3313	2038657	0					
ANR	2038660	IdentifierDeclStatement	zval * * slot = get_var_push_dtor_slot ( var_hashx ) ;	98:1:3228:3275	2038657	0	True				
ANR	2038661	IdentifierDecl	* * slot = get_var_push_dtor_slot ( var_hashx )		2038657	0					
ANR	2038662	IdentifierDeclType	zval * *		2038657	0					
ANR	2038663	Identifier	slot		2038657	1					
ANR	2038664	AssignmentExpression	* * slot = get_var_push_dtor_slot ( var_hashx )		2038657	2		=			
ANR	2038665	Identifier	slot		2038657	0					
ANR	2038666	CallExpression	get_var_push_dtor_slot ( var_hashx )		2038657	1					
ANR	2038667	Callee	get_var_push_dtor_slot		2038657	0					
ANR	2038668	Identifier	get_var_push_dtor_slot		2038657	0					
ANR	2038669	ArgumentList	var_hashx		2038657	1					
ANR	2038670	Argument	var_hashx		2038657	0					
ANR	2038671	Identifier	var_hashx		2038657	0					
ANR	2038672	ExpressionStatement	Z_ADDREF_PP ( rval )	99:1:3278:3295	2038657	1	True				
ANR	2038673	CallExpression	Z_ADDREF_PP ( rval )		2038657	0					
ANR	2038674	Callee	Z_ADDREF_PP		2038657	0					
ANR	2038675	Identifier	Z_ADDREF_PP		2038657	0					
ANR	2038676	ArgumentList	rval		2038657	1					
ANR	2038677	Argument	rval		2038657	0					
ANR	2038678	Identifier	rval		2038657	0					
ANR	2038679	ExpressionStatement	* slot = * rval	100:1:3298:3311	2038657	2	True				
ANR	2038680	AssignmentExpression	* slot = * rval		2038657	0		=			
ANR	2038681	UnaryOperationExpression	* slot		2038657	0					
ANR	2038682	UnaryOperator	*		2038657	0					
ANR	2038683	Identifier	slot		2038657	1					
ANR	2038684	UnaryOperationExpression	* rval		2038657	1					
ANR	2038685	UnaryOperator	*		2038657	0					
ANR	2038686	Identifier	rval		2038657	1					
ANR	2038687	ReturnType	PHPAPI void		2038657	1					
ANR	2038688	Identifier	var_push_dtor		2038657	2					
ANR	2038689	ParameterList	"php_unserialize_data_t * var_hashx , zval * * rval"		2038657	3					
ANR	2038690	Parameter	php_unserialize_data_t * var_hashx	96:26:3177:3209	2038657	0	True				
ANR	2038691	ParameterType	php_unserialize_data_t *		2038657	0					
ANR	2038692	Identifier	var_hashx		2038657	1					
ANR	2038693	Parameter	zval * * rval	96:61:3212:3222	2038657	1	True				
ANR	2038694	ParameterType	zval * *		2038657	0					
ANR	2038695	Identifier	rval		2038657	1					
ANR	2038696	CFGEntryNode	ENTRY		2038657		True				
ANR	2038697	CFGExitNode	EXIT		2038657		True				
ANR	2038698	Symbol	* slot		2038657						
ANR	2038699	Symbol	* rval		2038657						
ANR	2038700	Symbol	get_var_push_dtor_slot		2038657						
ANR	2038701	Symbol	var_hashx		2038657						
ANR	2038702	Symbol	rval		2038657						
ANR	2038703	Symbol	slot		2038657						
ANR	2038704	Function	var_push_dtor_no_addref	103:0:3316:4100							
ANR	2038705	FunctionDef	"var_push_dtor_no_addref (php_unserialize_data_t * var_hashx , zval * * rval)"		2038704	0					
ANR	2038706	CompoundStatement		104:0:3400:4100	2038704	0					
ANR	2038707	IdentifierDeclStatement	var_entries * var_hash ;	105:1:3403:3424	2038704	0	True				
ANR	2038708	IdentifierDecl	* var_hash		2038704	0					
ANR	2038709	IdentifierDeclType	var_entries *		2038704	0					
ANR	2038710	Identifier	var_hash		2038704	1					
ANR	2038711	IfStatement	if ( ! var_hashx || ! * var_hashx )		2038704	1					
ANR	2038712	Condition	! var_hashx || ! * var_hashx	107:8:3435:3459	2038704	0	True				
ANR	2038713	OrExpression	! var_hashx || ! * var_hashx		2038704	0		||			
ANR	2038714	UnaryOperationExpression	! var_hashx		2038704	0					
ANR	2038715	UnaryOperator	!		2038704	0					
ANR	2038716	Identifier	var_hashx		2038704	1					
ANR	2038717	UnaryOperationExpression	! * var_hashx		2038704	1					
ANR	2038718	UnaryOperator	!		2038704	0					
ANR	2038719	UnaryOperationExpression	* var_hashx		2038704	1					
ANR	2038720	UnaryOperator	*		2038704	0					
ANR	2038721	Identifier	var_hashx		2038704	1					
ANR	2038722	CompoundStatement		4:35:61:61	2038704	1					
ANR	2038723	ReturnStatement	return ;	108:8:3472:3478	2038704	0	True				
ANR	2038724	ExpressionStatement	var_hash = ( * var_hashx ) -> last_dtor	111:4:3491:3525	2038704	2	True				
ANR	2038725	AssignmentExpression	var_hash = ( * var_hashx ) -> last_dtor		2038704	0		=			
ANR	2038726	Identifier	var_hash		2038704	0					
ANR	2038727	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038704	1					
ANR	2038728	UnaryOperationExpression	* var_hashx		2038704	0					
ANR	2038729	UnaryOperator	*		2038704	0					
ANR	2038730	Identifier	var_hashx		2038704	1					
ANR	2038731	Identifier	last_dtor		2038704	1					
ANR	2038732	ExpressionStatement	"fprintf ( stderr , ""var_push_dtor_no_addref(%p, %ld): %d (%d)\\n"" , * rval , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) , Z_REFCOUNT_PP ( rval ) )"	113:1:3548:3690	2038704	3	True				
ANR	2038733	CallExpression	"fprintf ( stderr , ""var_push_dtor_no_addref(%p, %ld): %d (%d)\\n"" , * rval , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) , Z_REFCOUNT_PP ( rval ) )"		2038704	0					
ANR	2038734	Callee	fprintf		2038704	0					
ANR	2038735	Identifier	fprintf		2038704	0					
ANR	2038736	ArgumentList	stderr		2038704	1					
ANR	2038737	Argument	stderr		2038704	0					
ANR	2038738	Identifier	stderr		2038704	0					
ANR	2038739	Argument	"""var_push_dtor_no_addref(%p, %ld): %d (%d)\\n"""		2038704	1					
ANR	2038740	PrimaryExpression	"""var_push_dtor_no_addref(%p, %ld): %d (%d)\\n"""		2038704	0					
ANR	2038741	Argument	* rval		2038704	2					
ANR	2038742	UnaryOperationExpression	* rval		2038704	0					
ANR	2038743	UnaryOperator	*		2038704	0					
ANR	2038744	Identifier	rval		2038704	1					
ANR	2038745	Argument	var_hash ? var_hash -> used_slots : - 1L		2038704	3					
ANR	2038746	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2038704	0					
ANR	2038747	Condition	var_hash		2038704	0					
ANR	2038748	Identifier	var_hash		2038704	0					
ANR	2038749	PtrMemberAccess	var_hash -> used_slots		2038704	1					
ANR	2038750	Identifier	var_hash		2038704	0					
ANR	2038751	Identifier	used_slots		2038704	1					
ANR	2038752	UnaryOperationExpression	- 1L		2038704	2					
ANR	2038753	UnaryOperator	-		2038704	0					
ANR	2038754	PrimaryExpression	1L		2038704	1					
ANR	2038755	Argument	Z_TYPE_PP ( rval )		2038704	4					
ANR	2038756	CallExpression	Z_TYPE_PP ( rval )		2038704	0					
ANR	2038757	Callee	Z_TYPE_PP		2038704	0					
ANR	2038758	Identifier	Z_TYPE_PP		2038704	0					
ANR	2038759	ArgumentList	rval		2038704	1					
ANR	2038760	Argument	rval		2038704	0					
ANR	2038761	Identifier	rval		2038704	0					
ANR	2038762	Argument	Z_REFCOUNT_PP ( rval )		2038704	5					
ANR	2038763	CallExpression	Z_REFCOUNT_PP ( rval )		2038704	0					
ANR	2038764	Callee	Z_REFCOUNT_PP		2038704	0					
ANR	2038765	Identifier	Z_REFCOUNT_PP		2038704	0					
ANR	2038766	ArgumentList	rval		2038704	1					
ANR	2038767	Argument	rval		2038704	0					
ANR	2038768	Identifier	rval		2038704	0					
ANR	2038769	IfStatement	if ( ! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX )		2038704	4					
ANR	2038770	Condition	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX	116:5:3705:3756	2038704	0	True				
ANR	2038771	OrExpression	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX		2038704	0		||			
ANR	2038772	UnaryOperationExpression	! var_hash		2038704	0					
ANR	2038773	UnaryOperator	!		2038704	0					
ANR	2038774	Identifier	var_hash		2038704	1					
ANR	2038775	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2038704	1		==			
ANR	2038776	PtrMemberAccess	var_hash -> used_slots		2038704	0					
ANR	2038777	Identifier	var_hash		2038704	0					
ANR	2038778	Identifier	used_slots		2038704	1					
ANR	2038779	Identifier	VAR_ENTRIES_MAX		2038704	1					
ANR	2038780	CompoundStatement		13:59:358:358	2038704	1					
ANR	2038781	ExpressionStatement	var_hash = emalloc ( sizeof ( var_entries ) )	117:2:3763:3802	2038704	0	True				
ANR	2038782	AssignmentExpression	var_hash = emalloc ( sizeof ( var_entries ) )		2038704	0		=			
ANR	2038783	Identifier	var_hash		2038704	0					
ANR	2038784	CallExpression	emalloc ( sizeof ( var_entries ) )		2038704	1					
ANR	2038785	Callee	emalloc		2038704	0					
ANR	2038786	Identifier	emalloc		2038704	0					
ANR	2038787	ArgumentList	sizeof ( var_entries )		2038704	1					
ANR	2038788	Argument	sizeof ( var_entries )		2038704	0					
ANR	2038789	SizeofExpression	sizeof ( var_entries )		2038704	0					
ANR	2038790	Sizeof	sizeof		2038704	0					
ANR	2038791	SizeofOperand	var_entries		2038704	1					
ANR	2038792	ExpressionStatement	var_hash -> used_slots = 0	118:2:3806:3830	2038704	1	True				
ANR	2038793	AssignmentExpression	var_hash -> used_slots = 0		2038704	0		=			
ANR	2038794	PtrMemberAccess	var_hash -> used_slots		2038704	0					
ANR	2038795	Identifier	var_hash		2038704	0					
ANR	2038796	Identifier	used_slots		2038704	1					
ANR	2038797	PrimaryExpression	0		2038704	1					
ANR	2038798	ExpressionStatement	var_hash -> next = 0	119:2:3834:3852	2038704	2	True				
ANR	2038799	AssignmentExpression	var_hash -> next = 0		2038704	0		=			
ANR	2038800	PtrMemberAccess	var_hash -> next		2038704	0					
ANR	2038801	Identifier	var_hash		2038704	0					
ANR	2038802	Identifier	next		2038704	1					
ANR	2038803	PrimaryExpression	0		2038704	1					
ANR	2038804	IfStatement	if ( ! ( * var_hashx ) -> first_dtor )		2038704	3					
ANR	2038805	Condition	! ( * var_hashx ) -> first_dtor	121:6:3861:3885	2038704	0	True				
ANR	2038806	UnaryOperationExpression	! ( * var_hashx ) -> first_dtor		2038704	0					
ANR	2038807	UnaryOperator	!		2038704	0					
ANR	2038808	PtrMemberAccess	( * var_hashx ) -> first_dtor		2038704	1					
ANR	2038809	UnaryOperationExpression	* var_hashx		2038704	0					
ANR	2038810	UnaryOperator	*		2038704	0					
ANR	2038811	Identifier	var_hashx		2038704	1					
ANR	2038812	Identifier	first_dtor		2038704	1					
ANR	2038813	CompoundStatement		18:33:487:487	2038704	1					
ANR	2038814	ExpressionStatement	( * var_hashx ) -> first_dtor = var_hash	122:3:3893:3928	2038704	0	True				
ANR	2038815	AssignmentExpression	( * var_hashx ) -> first_dtor = var_hash		2038704	0		=			
ANR	2038816	PtrMemberAccess	( * var_hashx ) -> first_dtor		2038704	0					
ANR	2038817	UnaryOperationExpression	* var_hashx		2038704	0					
ANR	2038818	UnaryOperator	*		2038704	0					
ANR	2038819	Identifier	var_hashx		2038704	1					
ANR	2038820	Identifier	first_dtor		2038704	1					
ANR	2038821	Identifier	var_hash		2038704	1					
ANR	2038822	ElseStatement	else		2038704	0					
ANR	2038823	CompoundStatement		20:9:538:538	2038704	0					
ANR	2038824	ExpressionStatement	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash	124:3:3944:4002	2038704	0	True				
ANR	2038825	AssignmentExpression	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash		2038704	0		=			
ANR	2038826	PtrMemberAccess	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2038704	0					
ANR	2038827	CastExpression	( var_entries * ) ( * var_hashx ) -> last_dtor		2038704	0					
ANR	2038828	CastTarget	var_entries *		2038704	0					
ANR	2038829	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038704	1					
ANR	2038830	UnaryOperationExpression	* var_hashx		2038704	0					
ANR	2038831	UnaryOperator	*		2038704	0					
ANR	2038832	Identifier	var_hashx		2038704	1					
ANR	2038833	Identifier	last_dtor		2038704	1					
ANR	2038834	Identifier	next		2038704	1					
ANR	2038835	Identifier	var_hash		2038704	1					
ANR	2038836	ExpressionStatement	( * var_hashx ) -> last_dtor = var_hash	127:2:4011:4045	2038704	4	True				
ANR	2038837	AssignmentExpression	( * var_hashx ) -> last_dtor = var_hash		2038704	0		=			
ANR	2038838	PtrMemberAccess	( * var_hashx ) -> last_dtor		2038704	0					
ANR	2038839	UnaryOperationExpression	* var_hashx		2038704	0					
ANR	2038840	UnaryOperator	*		2038704	0					
ANR	2038841	Identifier	var_hashx		2038704	1					
ANR	2038842	Identifier	last_dtor		2038704	1					
ANR	2038843	Identifier	var_hash		2038704	1					
ANR	2038844	ExpressionStatement	var_hash -> data [ var_hash -> used_slots ++ ] = * rval	130:1:4052:4098	2038704	5	True				
ANR	2038845	AssignmentExpression	var_hash -> data [ var_hash -> used_slots ++ ] = * rval		2038704	0		=			
ANR	2038846	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ++ ]		2038704	0					
ANR	2038847	PtrMemberAccess	var_hash -> data		2038704	0					
ANR	2038848	Identifier	var_hash		2038704	0					
ANR	2038849	Identifier	data		2038704	1					
ANR	2038850	PostIncDecOperationExpression	var_hash -> used_slots ++		2038704	1					
ANR	2038851	PtrMemberAccess	var_hash -> used_slots		2038704	0					
ANR	2038852	Identifier	var_hash		2038704	0					
ANR	2038853	Identifier	used_slots		2038704	1					
ANR	2038854	IncDec	++		2038704	1					
ANR	2038855	UnaryOperationExpression	* rval		2038704	1					
ANR	2038856	UnaryOperator	*		2038704	0					
ANR	2038857	Identifier	rval		2038704	1					
ANR	2038858	ReturnType	PHPAPI void		2038704	1					
ANR	2038859	Identifier	var_push_dtor_no_addref		2038704	2					
ANR	2038860	ParameterList	"php_unserialize_data_t * var_hashx , zval * * rval"		2038704	3					
ANR	2038861	Parameter	php_unserialize_data_t * var_hashx	103:36:3352:3384	2038704	0	True				
ANR	2038862	ParameterType	php_unserialize_data_t *		2038704	0					
ANR	2038863	Identifier	var_hashx		2038704	1					
ANR	2038864	Parameter	zval * * rval	103:71:3387:3397	2038704	1	True				
ANR	2038865	ParameterType	zval * *		2038704	0					
ANR	2038866	Identifier	rval		2038704	1					
ANR	2038867	CFGEntryNode	ENTRY		2038704		True				
ANR	2038868	CFGExitNode	EXIT		2038704		True				
ANR	2038869	Symbol	( * var_hashx ) -> last_dtor		2038704						
ANR	2038870	Symbol	* rval		2038704						
ANR	2038871	Symbol	* * var_hash		2038704						
ANR	2038872	Symbol	var_hash -> data		2038704						
ANR	2038873	Symbol	* var_hashx		2038704						
ANR	2038874	Symbol	Z_REFCOUNT_PP		2038704						
ANR	2038875	Symbol	* ( * var_hashx ) -> last_dtor		2038704						
ANR	2038876	Symbol	* * var_hashx		2038704						
ANR	2038877	Symbol	* var_hash		2038704						
ANR	2038878	Symbol	var_hash -> next		2038704						
ANR	2038879	Symbol	( ( var_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2038704						
ANR	2038880	Symbol	stderr		2038704						
ANR	2038881	Symbol	var_hash -> used_slots		2038704						
ANR	2038882	Symbol	Z_TYPE_PP		2038704						
ANR	2038883	Symbol	emalloc		2038704						
ANR	2038884	Symbol	* var_hash -> data		2038704						
ANR	2038885	Symbol	var_hashx		2038704						
ANR	2038886	Symbol	( * var_hashx ) -> first_dtor		2038704						
ANR	2038887	Symbol	* * * var_hashx		2038704						
ANR	2038888	Symbol	rval		2038704						
ANR	2038889	Symbol	VAR_ENTRIES_MAX		2038704						
ANR	2038890	Symbol	var_hash		2038704						
ANR	2038891	Function	var_replace	133:0:4103:4576							
ANR	2038892	FunctionDef	"var_replace (php_unserialize_data_t * var_hashx , zval * ozval , zval * * nzval)"		2038891	0					
ANR	2038893	CompoundStatement		134:0:4189:4576	2038891	0					
ANR	2038894	IdentifierDeclStatement	long i ;	135:1:4192:4198	2038891	0	True				
ANR	2038895	IdentifierDecl	i		2038891	0					
ANR	2038896	IdentifierDeclType	long		2038891	0					
ANR	2038897	Identifier	i		2038891	1					
ANR	2038898	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	136:1:4201:4244	2038891	1	True				
ANR	2038899	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2038891	0					
ANR	2038900	IdentifierDeclType	var_entries *		2038891	0					
ANR	2038901	Identifier	var_hash		2038891	1					
ANR	2038902	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2038891	2		=			
ANR	2038903	Identifier	var_hash		2038891	0					
ANR	2038904	PtrMemberAccess	( * var_hashx ) -> first		2038891	1					
ANR	2038905	UnaryOperationExpression	* var_hashx		2038891	0					
ANR	2038906	UnaryOperator	*		2038891	0					
ANR	2038907	Identifier	var_hashx		2038891	1					
ANR	2038908	Identifier	first		2038891	1					
ANR	2038909	ExpressionStatement	"fprintf ( stderr , ""var_replace(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( nzval ) )"	138:1:4267:4361	2038891	2	True				
ANR	2038910	CallExpression	"fprintf ( stderr , ""var_replace(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( nzval ) )"		2038891	0					
ANR	2038911	Callee	fprintf		2038891	0					
ANR	2038912	Identifier	fprintf		2038891	0					
ANR	2038913	ArgumentList	stderr		2038891	1					
ANR	2038914	Argument	stderr		2038891	0					
ANR	2038915	Identifier	stderr		2038891	0					
ANR	2038916	Argument	"""var_replace(%ld): %d\\n"""		2038891	1					
ANR	2038917	PrimaryExpression	"""var_replace(%ld): %d\\n"""		2038891	0					
ANR	2038918	Argument	var_hash ? var_hash -> used_slots : - 1L		2038891	2					
ANR	2038919	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2038891	0					
ANR	2038920	Condition	var_hash		2038891	0					
ANR	2038921	Identifier	var_hash		2038891	0					
ANR	2038922	PtrMemberAccess	var_hash -> used_slots		2038891	1					
ANR	2038923	Identifier	var_hash		2038891	0					
ANR	2038924	Identifier	used_slots		2038891	1					
ANR	2038925	UnaryOperationExpression	- 1L		2038891	2					
ANR	2038926	UnaryOperator	-		2038891	0					
ANR	2038927	PrimaryExpression	1L		2038891	1					
ANR	2038928	Argument	Z_TYPE_PP ( nzval )		2038891	3					
ANR	2038929	CallExpression	Z_TYPE_PP ( nzval )		2038891	0					
ANR	2038930	Callee	Z_TYPE_PP		2038891	0					
ANR	2038931	Identifier	Z_TYPE_PP		2038891	0					
ANR	2038932	ArgumentList	nzval		2038891	1					
ANR	2038933	Argument	nzval		2038891	0					
ANR	2038934	Identifier	nzval		2038891	0					
ANR	2038935	WhileStatement	while ( var_hash )		2038891	3					
ANR	2038936	Condition	var_hash	141:8:4379:4386	2038891	0	True				
ANR	2038937	Identifier	var_hash		2038891	0					
ANR	2038938	CompoundStatement		8:18:199:199	2038891	1					
ANR	2038939	ForStatement	for ( i = 0 ; i < var_hash -> used_slots ; i ++ )		2038891	0					
ANR	2038940	ForInit	i = 0 ;	142:7:4398:4403	2038891	0	True				
ANR	2038941	AssignmentExpression	i = 0		2038891	0		=			
ANR	2038942	Identifier	i		2038891	0					
ANR	2038943	PrimaryExpression	0		2038891	1					
ANR	2038944	Condition	i < var_hash -> used_slots	142:14:4405:4428	2038891	1	True				
ANR	2038945	RelationalExpression	i < var_hash -> used_slots		2038891	0		<			
ANR	2038946	Identifier	i		2038891	0					
ANR	2038947	PtrMemberAccess	var_hash -> used_slots		2038891	1					
ANR	2038948	Identifier	var_hash		2038891	0					
ANR	2038949	Identifier	used_slots		2038891	1					
ANR	2038950	PostIncDecOperationExpression	i ++	142:40:4431:4433	2038891	2	True				
ANR	2038951	Identifier	i		2038891	0					
ANR	2038952	IncDec	++		2038891	1					
ANR	2038953	CompoundStatement		9:45:246:246	2038891	3					
ANR	2038954	IfStatement	if ( var_hash -> data [ i ] == ozval )		2038891	0					
ANR	2038955	Condition	var_hash -> data [ i ] == ozval	143:7:4445:4470	2038891	0	True				
ANR	2038956	EqualityExpression	var_hash -> data [ i ] == ozval		2038891	0		==			
ANR	2038957	ArrayIndexing	var_hash -> data [ i ]		2038891	0					
ANR	2038958	PtrMemberAccess	var_hash -> data		2038891	0					
ANR	2038959	Identifier	var_hash		2038891	0					
ANR	2038960	Identifier	data		2038891	1					
ANR	2038961	Identifier	i		2038891	1					
ANR	2038962	Identifier	ozval		2038891	1					
ANR	2038963	CompoundStatement		10:35:283:283	2038891	1					
ANR	2038964	ExpressionStatement	var_hash -> data [ i ] = * nzval	144:4:4479:4505	2038891	0	True				
ANR	2038965	AssignmentExpression	var_hash -> data [ i ] = * nzval		2038891	0		=			
ANR	2038966	ArrayIndexing	var_hash -> data [ i ]		2038891	0					
ANR	2038967	PtrMemberAccess	var_hash -> data		2038891	0					
ANR	2038968	Identifier	var_hash		2038891	0					
ANR	2038969	Identifier	data		2038891	1					
ANR	2038970	Identifier	i		2038891	1					
ANR	2038971	UnaryOperationExpression	* nzval		2038891	1					
ANR	2038972	UnaryOperator	*		2038891	0					
ANR	2038973	Identifier	nzval		2038891	1					
ANR	2038974	ExpressionStatement	var_hash = var_hash -> next	148:2:4546:4571	2038891	1	True				
ANR	2038975	AssignmentExpression	var_hash = var_hash -> next		2038891	0		=			
ANR	2038976	Identifier	var_hash		2038891	0					
ANR	2038977	PtrMemberAccess	var_hash -> next		2038891	1					
ANR	2038978	Identifier	var_hash		2038891	0					
ANR	2038979	Identifier	next		2038891	1					
ANR	2038980	ReturnType	PHPAPI void		2038891	1					
ANR	2038981	Identifier	var_replace		2038891	2					
ANR	2038982	ParameterList	"php_unserialize_data_t * var_hashx , zval * ozval , zval * * nzval"		2038891	3					
ANR	2038983	Parameter	php_unserialize_data_t * var_hashx	133:24:4127:4159	2038891	0	True				
ANR	2038984	ParameterType	php_unserialize_data_t *		2038891	0					
ANR	2038985	Identifier	var_hashx		2038891	1					
ANR	2038986	Parameter	zval * ozval	133:59:4162:4172	2038891	1	True				
ANR	2038987	ParameterType	zval *		2038891	0					
ANR	2038988	Identifier	ozval		2038891	1					
ANR	2038989	Parameter	zval * * nzval	133:72:4175:4186	2038891	2	True				
ANR	2038990	ParameterType	zval * *		2038891	0					
ANR	2038991	Identifier	nzval		2038891	1					
ANR	2038992	CFGEntryNode	ENTRY		2038891		True				
ANR	2038993	CFGExitNode	EXIT		2038891		True				
ANR	2038994	Symbol	* * var_hash		2038891						
ANR	2038995	Symbol	ozval		2038891						
ANR	2038996	Symbol	var_hash -> data		2038891						
ANR	2038997	Symbol	* var_hashx		2038891						
ANR	2038998	Symbol	* * var_hashx		2038891						
ANR	2038999	Symbol	i		2038891						
ANR	2039000	Symbol	* var_hash		2038891						
ANR	2039001	Symbol	var_hash -> next		2038891						
ANR	2039002	Symbol	( * var_hashx ) -> first		2038891						
ANR	2039003	Symbol	stderr		2038891						
ANR	2039004	Symbol	var_hash -> used_slots		2038891						
ANR	2039005	Symbol	Z_TYPE_PP		2038891						
ANR	2039006	Symbol	nzval		2038891						
ANR	2039007	Symbol	* var_hash -> data		2038891						
ANR	2039008	Symbol	* i		2038891						
ANR	2039009	Symbol	var_hashx		2038891						
ANR	2039010	Symbol	* nzval		2038891						
ANR	2039011	Symbol	var_hash		2038891						
ANR	2039012	Function	var_access	152:0:4579:5109							
ANR	2039013	FunctionDef	"var_access (php_unserialize_data_t * var_hashx , long id , zval * * * store)"		2039012	0					
ANR	2039014	CompoundStatement		153:0:4660:5109	2039012	0					
ANR	2039015	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	154:1:4663:4706	2039012	0	True				
ANR	2039016	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2039012	0					
ANR	2039017	IdentifierDeclType	var_entries *		2039012	0					
ANR	2039018	Identifier	var_hash		2039012	1					
ANR	2039019	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2039012	2		=			
ANR	2039020	Identifier	var_hash		2039012	0					
ANR	2039021	PtrMemberAccess	( * var_hashx ) -> first		2039012	1					
ANR	2039022	UnaryOperationExpression	* var_hashx		2039012	0					
ANR	2039023	UnaryOperator	*		2039012	0					
ANR	2039024	Identifier	var_hashx		2039012	1					
ANR	2039025	Identifier	first		2039012	1					
ANR	2039026	ExpressionStatement	"fprintf ( stderr , ""var_access(%ld): %ld\\n"" , var_hash ? var_hash -> used_slots : - 1L , id )"	156:1:4729:4809	2039012	1	True				
ANR	2039027	CallExpression	"fprintf ( stderr , ""var_access(%ld): %ld\\n"" , var_hash ? var_hash -> used_slots : - 1L , id )"		2039012	0					
ANR	2039028	Callee	fprintf		2039012	0					
ANR	2039029	Identifier	fprintf		2039012	0					
ANR	2039030	ArgumentList	stderr		2039012	1					
ANR	2039031	Argument	stderr		2039012	0					
ANR	2039032	Identifier	stderr		2039012	0					
ANR	2039033	Argument	"""var_access(%ld): %ld\\n"""		2039012	1					
ANR	2039034	PrimaryExpression	"""var_access(%ld): %ld\\n"""		2039012	0					
ANR	2039035	Argument	var_hash ? var_hash -> used_slots : - 1L		2039012	2					
ANR	2039036	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2039012	0					
ANR	2039037	Condition	var_hash		2039012	0					
ANR	2039038	Identifier	var_hash		2039012	0					
ANR	2039039	PtrMemberAccess	var_hash -> used_slots		2039012	1					
ANR	2039040	Identifier	var_hash		2039012	0					
ANR	2039041	Identifier	used_slots		2039012	1					
ANR	2039042	UnaryOperationExpression	- 1L		2039012	2					
ANR	2039043	UnaryOperator	-		2039012	0					
ANR	2039044	PrimaryExpression	1L		2039012	1					
ANR	2039045	Argument	id		2039012	3					
ANR	2039046	Identifier	id		2039012	0					
ANR	2039047	WhileStatement	while ( id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX )		2039012	2					
ANR	2039048	Condition	id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX	159:8:4827:4902	2039012	0	True				
ANR	2039049	AndExpression	id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX		2039012	0		&&			
ANR	2039050	RelationalExpression	id >= VAR_ENTRIES_MAX		2039012	0		>=			
ANR	2039051	Identifier	id		2039012	0					
ANR	2039052	Identifier	VAR_ENTRIES_MAX		2039012	1					
ANR	2039053	AndExpression	var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX		2039012	1		&&			
ANR	2039054	Identifier	var_hash		2039012	0					
ANR	2039055	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2039012	1		==			
ANR	2039056	PtrMemberAccess	var_hash -> used_slots		2039012	0					
ANR	2039057	Identifier	var_hash		2039012	0					
ANR	2039058	Identifier	used_slots		2039012	1					
ANR	2039059	Identifier	VAR_ENTRIES_MAX		2039012	1					
ANR	2039060	CompoundStatement		7:86:244:244	2039012	1					
ANR	2039061	ExpressionStatement	var_hash = var_hash -> next	160:2:4909:4934	2039012	0	True				
ANR	2039062	AssignmentExpression	var_hash = var_hash -> next		2039012	0		=			
ANR	2039063	Identifier	var_hash		2039012	0					
ANR	2039064	PtrMemberAccess	var_hash -> next		2039012	1					
ANR	2039065	Identifier	var_hash		2039012	0					
ANR	2039066	Identifier	next		2039012	1					
ANR	2039067	ExpressionStatement	id -= VAR_ENTRIES_MAX	161:2:4938:4959	2039012	1	True				
ANR	2039068	AssignmentExpression	id -= VAR_ENTRIES_MAX		2039012	0		-=			
ANR	2039069	Identifier	id		2039012	0					
ANR	2039070	Identifier	VAR_ENTRIES_MAX		2039012	1					
ANR	2039071	IfStatement	if ( ! var_hash )		2039012	3					
ANR	2039072	Condition	! var_hash	164:5:4970:4978	2039012	0	True				
ANR	2039073	UnaryOperationExpression	! var_hash		2039012	0					
ANR	2039074	UnaryOperator	!		2039012	0					
ANR	2039075	Identifier	var_hash		2039012	1					
ANR	2039076	ReturnStatement	return ! SUCCESS ;	164:16:4981:4996	2039012	1	True				
ANR	2039077	UnaryOperationExpression	! SUCCESS		2039012	0					
ANR	2039078	UnaryOperator	!		2039012	0					
ANR	2039079	Identifier	SUCCESS		2039012	1					
ANR	2039080	IfStatement	if ( id < 0 || id >= var_hash -> used_slots )		2039012	4					
ANR	2039081	Condition	id < 0 || id >= var_hash -> used_slots	166:5:5004:5039	2039012	0	True				
ANR	2039082	OrExpression	id < 0 || id >= var_hash -> used_slots		2039012	0		||			
ANR	2039083	RelationalExpression	id < 0		2039012	0		<			
ANR	2039084	Identifier	id		2039012	0					
ANR	2039085	PrimaryExpression	0		2039012	1					
ANR	2039086	RelationalExpression	id >= var_hash -> used_slots		2039012	1		>=			
ANR	2039087	Identifier	id		2039012	0					
ANR	2039088	PtrMemberAccess	var_hash -> used_slots		2039012	1					
ANR	2039089	Identifier	var_hash		2039012	0					
ANR	2039090	Identifier	used_slots		2039012	1					
ANR	2039091	ReturnStatement	return ! SUCCESS ;	166:43:5042:5057	2039012	1	True				
ANR	2039092	UnaryOperationExpression	! SUCCESS		2039012	0					
ANR	2039093	UnaryOperator	!		2039012	0					
ANR	2039094	Identifier	SUCCESS		2039012	1					
ANR	2039095	ExpressionStatement	* store = & var_hash -> data [ id ]	168:1:5061:5089	2039012	5	True				
ANR	2039096	AssignmentExpression	* store = & var_hash -> data [ id ]		2039012	0		=			
ANR	2039097	UnaryOperationExpression	* store		2039012	0					
ANR	2039098	UnaryOperator	*		2039012	0					
ANR	2039099	Identifier	store		2039012	1					
ANR	2039100	UnaryOperationExpression	& var_hash -> data [ id ]		2039012	1					
ANR	2039101	UnaryOperator	&		2039012	0					
ANR	2039102	ArrayIndexing	var_hash -> data [ id ]		2039012	1					
ANR	2039103	PtrMemberAccess	var_hash -> data		2039012	0					
ANR	2039104	Identifier	var_hash		2039012	0					
ANR	2039105	Identifier	data		2039012	1					
ANR	2039106	Identifier	id		2039012	1					
ANR	2039107	ReturnStatement	return SUCCESS ;	170:1:5093:5107	2039012	6	True				
ANR	2039108	Identifier	SUCCESS		2039012	0					
ANR	2039109	ReturnType	static int		2039012	1					
ANR	2039110	Identifier	var_access		2039012	2					
ANR	2039111	ParameterList	"php_unserialize_data_t * var_hashx , long id , zval * * * store"		2039012	3					
ANR	2039112	Parameter	php_unserialize_data_t * var_hashx	152:22:4601:4633	2039012	0	True				
ANR	2039113	ParameterType	php_unserialize_data_t *		2039012	0					
ANR	2039114	Identifier	var_hashx		2039012	1					
ANR	2039115	Parameter	long id	152:57:4636:4642	2039012	1	True				
ANR	2039116	ParameterType	long		2039012	0					
ANR	2039117	Identifier	id		2039012	1					
ANR	2039118	Parameter	zval * * * store	152:66:4645:4657	2039012	2	True				
ANR	2039119	ParameterType	zval * * *		2039012	0					
ANR	2039120	Identifier	store		2039012	1					
ANR	2039121	CFGEntryNode	ENTRY		2039012		True				
ANR	2039122	CFGExitNode	EXIT		2039012		True				
ANR	2039123	Symbol	* store		2039012						
ANR	2039124	Symbol	SUCCESS		2039012						
ANR	2039125	Symbol	var_hash -> data		2039012						
ANR	2039126	Symbol	* var_hashx		2039012						
ANR	2039127	Symbol	* * var_hashx		2039012						
ANR	2039128	Symbol	* var_hash		2039012						
ANR	2039129	Symbol	var_hash -> next		2039012						
ANR	2039130	Symbol	store		2039012						
ANR	2039131	Symbol	( * var_hashx ) -> first		2039012						
ANR	2039132	Symbol	stderr		2039012						
ANR	2039133	Symbol	var_hash -> used_slots		2039012						
ANR	2039134	Symbol	var_hashx		2039012						
ANR	2039135	Symbol	VAR_ENTRIES_MAX		2039012						
ANR	2039136	Symbol	id		2039012						
ANR	2039137	Symbol	var_hash		2039012						
ANR	2039138	Function	var_destroy	173:0:5112:6511							
ANR	2039139	FunctionDef	var_destroy (php_unserialize_data_t * var_hashx)		2039138	0					
ANR	2039140	CompoundStatement		174:0:5171:6511	2039138	0					
ANR	2039141	IdentifierDeclStatement	void * next ;	175:1:5174:5184	2039138	0	True				
ANR	2039142	IdentifierDecl	* next		2039138	0					
ANR	2039143	IdentifierDeclType	void *		2039138	0					
ANR	2039144	Identifier	next		2039138	1					
ANR	2039145	IdentifierDeclStatement	long i ;	176:1:5187:5193	2039138	1	True				
ANR	2039146	IdentifierDecl	i		2039138	0					
ANR	2039147	IdentifierDeclType	long		2039138	0					
ANR	2039148	Identifier	i		2039138	1					
ANR	2039149	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	177:1:5196:5239	2039138	2	True				
ANR	2039150	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2039138	0					
ANR	2039151	IdentifierDeclType	var_entries *		2039138	0					
ANR	2039152	Identifier	var_hash		2039138	1					
ANR	2039153	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2039138	2		=			
ANR	2039154	Identifier	var_hash		2039138	0					
ANR	2039155	PtrMemberAccess	( * var_hashx ) -> first		2039138	1					
ANR	2039156	UnaryOperationExpression	* var_hashx		2039138	0					
ANR	2039157	UnaryOperator	*		2039138	0					
ANR	2039158	Identifier	var_hashx		2039138	1					
ANR	2039159	Identifier	first		2039138	1					
ANR	2039160	IdentifierDeclStatement	zend_bool wakeup_failed = 0 ;	178:1:5242:5269	2039138	3	True				
ANR	2039161	IdentifierDecl	wakeup_failed = 0		2039138	0					
ANR	2039162	IdentifierDeclType	zend_bool		2039138	0					
ANR	2039163	Identifier	wakeup_failed		2039138	1					
ANR	2039164	AssignmentExpression	wakeup_failed = 0		2039138	2		=			
ANR	2039165	Identifier	wakeup_failed		2039138	0					
ANR	2039166	PrimaryExpression	0		2039138	1					
ANR	2039167	ExpressionStatement	TSRMLS_FETCH ( )	179:1:5272:5286	2039138	4	True				
ANR	2039168	CallExpression	TSRMLS_FETCH ( )		2039138	0					
ANR	2039169	Callee	TSRMLS_FETCH		2039138	0					
ANR	2039170	Identifier	TSRMLS_FETCH		2039138	0					
ANR	2039171	ArgumentList			2039138	1					
ANR	2039172	ExpressionStatement	"fprintf ( stderr , ""var_destroy(%ld)\\n"" , var_hash ? var_hash -> used_slots : - 1L )"	182:1:5310:5382	2039138	5	True				
ANR	2039173	CallExpression	"fprintf ( stderr , ""var_destroy(%ld)\\n"" , var_hash ? var_hash -> used_slots : - 1L )"		2039138	0					
ANR	2039174	Callee	fprintf		2039138	0					
ANR	2039175	Identifier	fprintf		2039138	0					
ANR	2039176	ArgumentList	stderr		2039138	1					
ANR	2039177	Argument	stderr		2039138	0					
ANR	2039178	Identifier	stderr		2039138	0					
ANR	2039179	Argument	"""var_destroy(%ld)\\n"""		2039138	1					
ANR	2039180	PrimaryExpression	"""var_destroy(%ld)\\n"""		2039138	0					
ANR	2039181	Argument	var_hash ? var_hash -> used_slots : - 1L		2039138	2					
ANR	2039182	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2039138	0					
ANR	2039183	Condition	var_hash		2039138	0					
ANR	2039184	Identifier	var_hash		2039138	0					
ANR	2039185	PtrMemberAccess	var_hash -> used_slots		2039138	1					
ANR	2039186	Identifier	var_hash		2039138	0					
ANR	2039187	Identifier	used_slots		2039138	1					
ANR	2039188	UnaryOperationExpression	- 1L		2039138	2					
ANR	2039189	UnaryOperator	-		2039138	0					
ANR	2039190	PrimaryExpression	1L		2039138	1					
ANR	2039191	WhileStatement	while ( var_hash )		2039138	6					
ANR	2039192	Condition	var_hash	185:8:5400:5407	2039138	0	True				
ANR	2039193	Identifier	var_hash		2039138	0					
ANR	2039194	CompoundStatement		12:18:238:238	2039138	1					
ANR	2039195	ExpressionStatement	next = var_hash -> next	186:2:5414:5435	2039138	0	True				
ANR	2039196	AssignmentExpression	next = var_hash -> next		2039138	0		=			
ANR	2039197	Identifier	next		2039138	0					
ANR	2039198	PtrMemberAccess	var_hash -> next		2039138	1					
ANR	2039199	Identifier	var_hash		2039138	0					
ANR	2039200	Identifier	next		2039138	1					
ANR	2039201	ExpressionStatement	efree ( var_hash )	187:2:5439:5454	2039138	1	True				
ANR	2039202	CallExpression	efree ( var_hash )		2039138	0					
ANR	2039203	Callee	efree		2039138	0					
ANR	2039204	Identifier	efree		2039138	0					
ANR	2039205	ArgumentList	var_hash		2039138	1					
ANR	2039206	Argument	var_hash		2039138	0					
ANR	2039207	Identifier	var_hash		2039138	0					
ANR	2039208	ExpressionStatement	var_hash = next	188:2:5458:5473	2039138	2	True				
ANR	2039209	AssignmentExpression	var_hash = next		2039138	0		=			
ANR	2039210	Identifier	var_hash		2039138	0					
ANR	2039211	Identifier	next		2039138	1					
ANR	2039212	ExpressionStatement	var_hash = ( * var_hashx ) -> first_dtor	191:1:5480:5515	2039138	7	True				
ANR	2039213	AssignmentExpression	var_hash = ( * var_hashx ) -> first_dtor		2039138	0		=			
ANR	2039214	Identifier	var_hash		2039138	0					
ANR	2039215	PtrMemberAccess	( * var_hashx ) -> first_dtor		2039138	1					
ANR	2039216	UnaryOperationExpression	* var_hashx		2039138	0					
ANR	2039217	UnaryOperator	*		2039138	0					
ANR	2039218	Identifier	var_hashx		2039138	1					
ANR	2039219	Identifier	first_dtor		2039138	1					
ANR	2039220	WhileStatement	while ( var_hash )		2039138	8					
ANR	2039221	Condition	var_hash	193:8:5526:5533	2039138	0	True				
ANR	2039222	Identifier	var_hash		2039138	0					
ANR	2039223	CompoundStatement		20:18:364:364	2039138	1					
ANR	2039224	ForStatement	for ( i = 0 ; i < var_hash -> used_slots ; i ++ )		2039138	0					
ANR	2039225	ForInit	i = 0 ;	194:7:5545:5550	2039138	0	True				
ANR	2039226	AssignmentExpression	i = 0		2039138	0		=			
ANR	2039227	Identifier	i		2039138	0					
ANR	2039228	PrimaryExpression	0		2039138	1					
ANR	2039229	Condition	i < var_hash -> used_slots	194:14:5552:5575	2039138	1	True				
ANR	2039230	RelationalExpression	i < var_hash -> used_slots		2039138	0		<			
ANR	2039231	Identifier	i		2039138	0					
ANR	2039232	PtrMemberAccess	var_hash -> used_slots		2039138	1					
ANR	2039233	Identifier	var_hash		2039138	0					
ANR	2039234	Identifier	used_slots		2039138	1					
ANR	2039235	PostIncDecOperationExpression	i ++	194:40:5578:5580	2039138	2	True				
ANR	2039236	Identifier	i		2039138	0					
ANR	2039237	IncDec	++		2039138	1					
ANR	2039238	CompoundStatement		22:3:416:444	2039138	3					
ANR	2039239	IdentifierDeclStatement	zval * zv = var_hash -> data [ i ] ;	195:3:5588:5616	2039138	0	True				
ANR	2039240	IdentifierDecl	* zv = var_hash -> data [ i ]		2039138	0					
ANR	2039241	IdentifierDeclType	zval *		2039138	0					
ANR	2039242	Identifier	zv		2039138	1					
ANR	2039243	AssignmentExpression	* zv = var_hash -> data [ i ]		2039138	2		=			
ANR	2039244	Identifier	zv		2039138	0					
ANR	2039245	ArrayIndexing	var_hash -> data [ i ]		2039138	1					
ANR	2039246	PtrMemberAccess	var_hash -> data		2039138	0					
ANR	2039247	Identifier	var_hash		2039138	0					
ANR	2039248	Identifier	data		2039138	1					
ANR	2039249	Identifier	i		2039138	1					
ANR	2039250	ExpressionStatement	"fprintf ( stderr , ""var_destroy dtor(%p, %ld)\\n"" , var_hash -> data [ i ] , Z_REFCOUNT_P ( var_hash -> data [ i ] ) )"	197:4:5642:5740	2039138	1	True				
ANR	2039251	CallExpression	"fprintf ( stderr , ""var_destroy dtor(%p, %ld)\\n"" , var_hash -> data [ i ] , Z_REFCOUNT_P ( var_hash -> data [ i ] ) )"		2039138	0					
ANR	2039252	Callee	fprintf		2039138	0					
ANR	2039253	Identifier	fprintf		2039138	0					
ANR	2039254	ArgumentList	stderr		2039138	1					
ANR	2039255	Argument	stderr		2039138	0					
ANR	2039256	Identifier	stderr		2039138	0					
ANR	2039257	Argument	"""var_destroy dtor(%p, %ld)\\n"""		2039138	1					
ANR	2039258	PrimaryExpression	"""var_destroy dtor(%p, %ld)\\n"""		2039138	0					
ANR	2039259	Argument	var_hash -> data [ i ]		2039138	2					
ANR	2039260	ArrayIndexing	var_hash -> data [ i ]		2039138	0					
ANR	2039261	PtrMemberAccess	var_hash -> data		2039138	0					
ANR	2039262	Identifier	var_hash		2039138	0					
ANR	2039263	Identifier	data		2039138	1					
ANR	2039264	Identifier	i		2039138	1					
ANR	2039265	Argument	Z_REFCOUNT_P ( var_hash -> data [ i ] )		2039138	3					
ANR	2039266	CallExpression	Z_REFCOUNT_P ( var_hash -> data [ i ] )		2039138	0					
ANR	2039267	Callee	Z_REFCOUNT_P		2039138	0					
ANR	2039268	Identifier	Z_REFCOUNT_P		2039138	0					
ANR	2039269	ArgumentList	var_hash -> data [ i ]		2039138	1					
ANR	2039270	Argument	var_hash -> data [ i ]		2039138	0					
ANR	2039271	ArrayIndexing	var_hash -> data [ i ]		2039138	0					
ANR	2039272	PtrMemberAccess	var_hash -> data		2039138	0					
ANR	2039273	Identifier	var_hash		2039138	0					
ANR	2039274	Identifier	data		2039138	1					
ANR	2039275	Identifier	i		2039138	1					
ANR	2039276	IfStatement	if ( HAS_WAKEUP_FLAG ( zv ) )		2039138	2					
ANR	2039277	Condition	HAS_WAKEUP_FLAG ( zv )	200:7:5757:5775	2039138	0	True				
ANR	2039278	CallExpression	HAS_WAKEUP_FLAG ( zv )		2039138	0					
ANR	2039279	Callee	HAS_WAKEUP_FLAG		2039138	0					
ANR	2039280	Identifier	HAS_WAKEUP_FLAG		2039138	0					
ANR	2039281	ArgumentList	zv		2039138	1					
ANR	2039282	Argument	zv		2039138	0					
ANR	2039283	Identifier	zv		2039138	0					
ANR	2039284	CompoundStatement		27:28:606:606	2039138	1					
ANR	2039285	ExpressionStatement	zv = WITHOUT_WAKEUP_FLAG ( zv )	201:4:5784:5812	2039138	0	True				
ANR	2039286	AssignmentExpression	zv = WITHOUT_WAKEUP_FLAG ( zv )		2039138	0		=			
ANR	2039287	Identifier	zv		2039138	0					
ANR	2039288	CallExpression	WITHOUT_WAKEUP_FLAG ( zv )		2039138	1					
ANR	2039289	Callee	WITHOUT_WAKEUP_FLAG		2039138	0					
ANR	2039290	Identifier	WITHOUT_WAKEUP_FLAG		2039138	0					
ANR	2039291	ArgumentList	zv		2039138	1					
ANR	2039292	Argument	zv		2039138	0					
ANR	2039293	Identifier	zv		2039138	0					
ANR	2039294	IfStatement	if ( ! wakeup_failed )		2039138	1					
ANR	2039295	Condition	! wakeup_failed	202:8:5822:5835	2039138	0	True				
ANR	2039296	UnaryOperationExpression	! wakeup_failed		2039138	0					
ANR	2039297	UnaryOperator	!		2039138	0					
ANR	2039298	Identifier	wakeup_failed		2039138	1					
ANR	2039299	CompoundStatement		31:5:703:719	2039138	1					
ANR	2039300	IdentifierDeclStatement	zval * retval_ptr = NULL ;	203:5:5845:5868	2039138	0	True				
ANR	2039301	IdentifierDecl	* retval_ptr = NULL		2039138	0					
ANR	2039302	IdentifierDeclType	zval *		2039138	0					
ANR	2039303	Identifier	retval_ptr		2039138	1					
ANR	2039304	AssignmentExpression	* retval_ptr = NULL		2039138	2		=			
ANR	2039305	Identifier	NULL		2039138	0					
ANR	2039306	Identifier	NULL		2039138	1					
ANR	2039307	IdentifierDeclStatement	zval wakeup_name ;	204:5:5875:5891	2039138	1	True				
ANR	2039308	IdentifierDecl	wakeup_name		2039138	0					
ANR	2039309	IdentifierDeclType	zval		2039138	0					
ANR	2039310	Identifier	wakeup_name		2039138	1					
ANR	2039311	ExpressionStatement	INIT_PZVAL ( & wakeup_name )	205:5:5898:5922	2039138	2	True				
ANR	2039312	CallExpression	INIT_PZVAL ( & wakeup_name )		2039138	0					
ANR	2039313	Callee	INIT_PZVAL		2039138	0					
ANR	2039314	Identifier	INIT_PZVAL		2039138	0					
ANR	2039315	ArgumentList	& wakeup_name		2039138	1					
ANR	2039316	Argument	& wakeup_name		2039138	0					
ANR	2039317	UnaryOperationExpression	& wakeup_name		2039138	0					
ANR	2039318	UnaryOperator	&		2039138	0					
ANR	2039319	Identifier	wakeup_name		2039138	1					
ANR	2039320	ExpressionStatement	"ZVAL_STRINGL ( & wakeup_name , ""__wakeup"" , sizeof ( ""__wakeup"" ) - 1 , 0 )"	206:5:5929:5994	2039138	3	True				
ANR	2039321	CallExpression	"ZVAL_STRINGL ( & wakeup_name , ""__wakeup"" , sizeof ( ""__wakeup"" ) - 1 , 0 )"		2039138	0					
ANR	2039322	Callee	ZVAL_STRINGL		2039138	0					
ANR	2039323	Identifier	ZVAL_STRINGL		2039138	0					
ANR	2039324	ArgumentList	& wakeup_name		2039138	1					
ANR	2039325	Argument	& wakeup_name		2039138	0					
ANR	2039326	UnaryOperationExpression	& wakeup_name		2039138	0					
ANR	2039327	UnaryOperator	&		2039138	0					
ANR	2039328	Identifier	wakeup_name		2039138	1					
ANR	2039329	Argument	"""__wakeup"""		2039138	1					
ANR	2039330	PrimaryExpression	"""__wakeup"""		2039138	0					
ANR	2039331	Argument	"sizeof ( ""__wakeup"" ) - 1"		2039138	2					
ANR	2039332	AdditiveExpression	"sizeof ( ""__wakeup"" ) - 1"		2039138	0		-			
ANR	2039333	SizeofExpression	"sizeof ( ""__wakeup"" )"		2039138	0					
ANR	2039334	Sizeof	sizeof		2039138	0					
ANR	2039335	PrimaryExpression	"""__wakeup"""		2039138	1					
ANR	2039336	PrimaryExpression	1		2039138	1					
ANR	2039337	Argument	0		2039138	3					
ANR	2039338	PrimaryExpression	0		2039138	0					
ANR	2039339	ExpressionStatement	BG ( serialize_lock ) ++	208:5:6002:6022	2039138	4	True				
ANR	2039340	PostIncDecOperationExpression	BG ( serialize_lock ) ++		2039138	0					
ANR	2039341	CallExpression	BG ( serialize_lock )		2039138	0					
ANR	2039342	Callee	BG		2039138	0					
ANR	2039343	Identifier	BG		2039138	0					
ANR	2039344	ArgumentList	serialize_lock		2039138	1					
ANR	2039345	Argument	serialize_lock		2039138	0					
ANR	2039346	Identifier	serialize_lock		2039138	0					
ANR	2039347	IncDec	++		2039138	1					
ANR	2039348	Statement	if	209:5:6029:6030	2039138	5	True				
ANR	2039349	Statement	(	209:8:6032:6032	2039138	6	True				
ANR	2039350	Statement	call_user_function_ex	209:9:6033:6053	2039138	7	True				
ANR	2039351	Statement	(	209:30:6054:6054	2039138	8	True				
ANR	2039352	Statement	CG	209:31:6055:6056	2039138	9	True				
ANR	2039353	Statement	(	209:33:6057:6057	2039138	10	True				
ANR	2039354	Statement	function_table	209:34:6058:6071	2039138	11	True				
ANR	2039355	Statement	)	209:48:6072:6072	2039138	12	True				
ANR	2039356	Statement	","	209:49:6073:6073	2039138	13	True				
ANR	2039357	Statement	&	209:51:6075:6075	2039138	14	True				
ANR	2039358	Statement	zv	209:52:6076:6077	2039138	15	True				
ANR	2039359	Statement	","	209:54:6078:6078	2039138	16	True				
ANR	2039360	Statement	&	209:56:6080:6080	2039138	17	True				
ANR	2039361	Statement	wakeup_name	209:57:6081:6091	2039138	18	True				
ANR	2039362	Statement	","	209:68:6092:6092	2039138	19	True				
ANR	2039363	Statement	&	209:70:6094:6094	2039138	20	True				
ANR	2039364	Statement	retval_ptr	209:71:6095:6104	2039138	21	True				
ANR	2039365	Statement	","	209:81:6105:6105	2039138	22	True				
ANR	2039366	Statement	0	209:83:6107:6107	2039138	23	True				
ANR	2039367	Statement	","	209:84:6108:6108	2039138	24	True				
ANR	2039368	Statement	0	209:86:6110:6110	2039138	25	True				
ANR	2039369	Statement	","	209:87:6111:6111	2039138	26	True				
ANR	2039370	Statement	1	209:89:6113:6113	2039138	27	True				
ANR	2039371	Statement	","	209:90:6114:6114	2039138	28	True				
ANR	2039372	Statement	NULL	209:92:6116:6119	2039138	29	True				
ANR	2039373	Statement	TSRMLS_CC	209:97:6121:6129	2039138	30	True				
ANR	2039374	Statement	)	209:106:6130:6130	2039138	31	True				
ANR	2039375	Statement	==	209:108:6132:6133	2039138	32	True				
ANR	2039376	Statement	FAILURE	209:111:6135:6141	2039138	33	True				
ANR	2039377	Statement	||	209:119:6143:6144	2039138	34	True				
ANR	2039378	Statement	retval_ptr	209:122:6146:6155	2039138	35	True				
ANR	2039379	Statement	==	209:133:6157:6158	2039138	36	True				
ANR	2039380	Statement	NULL	209:136:6160:6163	2039138	37	True				
ANR	2039381	Statement	)	209:140:6164:6164	2039138	38	True				
ANR	2039382	CompoundStatement		36:142:994:994	2039138	39					
ANR	2039383	ExpressionStatement	wakeup_failed = 1	210:6:6174:6191	2039138	0	True				
ANR	2039384	AssignmentExpression	wakeup_failed = 1		2039138	0		=			
ANR	2039385	Identifier	wakeup_failed		2039138	0					
ANR	2039386	PrimaryExpression	1		2039138	1					
ANR	2039387	Statement	zend_object_store_ctor_failed	211:6:6199:6227	2039138	1	True				
ANR	2039388	Statement	(	211:35:6228:6228	2039138	2	True				
ANR	2039389	Statement	zv	211:36:6229:6230	2039138	3	True				
ANR	2039390	Statement	TSRMLS_CC	211:39:6232:6240	2039138	4	True				
ANR	2039391	Statement	)	211:48:6241:6241	2039138	5	True				
ANR	2039392	ExpressionStatement		211:49:6242:6242	2039138	6	True				
ANR	2039393	ExpressionStatement	BG ( serialize_lock ) --	213:5:6256:6276	2039138	40	True				
ANR	2039394	PostIncDecOperationExpression	BG ( serialize_lock ) --		2039138	0					
ANR	2039395	CallExpression	BG ( serialize_lock )		2039138	0					
ANR	2039396	Callee	BG		2039138	0					
ANR	2039397	Identifier	BG		2039138	0					
ANR	2039398	ArgumentList	serialize_lock		2039138	1					
ANR	2039399	Argument	serialize_lock		2039138	0					
ANR	2039400	Identifier	serialize_lock		2039138	0					
ANR	2039401	IncDec	--		2039138	1					
ANR	2039402	IfStatement	if ( retval_ptr )		2039138	41					
ANR	2039403	Condition	retval_ptr	215:9:6288:6297	2039138	0	True				
ANR	2039404	Identifier	retval_ptr		2039138	0					
ANR	2039405	CompoundStatement		42:21:1128:1128	2039138	1					
ANR	2039406	ExpressionStatement	zval_ptr_dtor ( & retval_ptr )	216:6:6308:6334	2039138	0	True				
ANR	2039407	CallExpression	zval_ptr_dtor ( & retval_ptr )		2039138	0					
ANR	2039408	Callee	zval_ptr_dtor		2039138	0					
ANR	2039409	Identifier	zval_ptr_dtor		2039138	0					
ANR	2039410	ArgumentList	& retval_ptr		2039138	1					
ANR	2039411	Argument	& retval_ptr		2039138	0					
ANR	2039412	UnaryOperationExpression	& retval_ptr		2039138	0					
ANR	2039413	UnaryOperator	&		2039138	0					
ANR	2039414	Identifier	retval_ptr		2039138	1					
ANR	2039415	ElseStatement	else		2039138	0					
ANR	2039416	CompoundStatement		45:11:1182:1182	2039138	0					
ANR	2039417	Statement	zend_object_store_ctor_failed	219:5:6361:6389	2039138	0	True				
ANR	2039418	Statement	(	219:34:6390:6390	2039138	1	True				
ANR	2039419	Statement	zv	219:35:6391:6392	2039138	2	True				
ANR	2039420	Statement	TSRMLS_CC	219:38:6394:6402	2039138	3	True				
ANR	2039421	Statement	)	219:47:6403:6403	2039138	4	True				
ANR	2039422	ExpressionStatement		219:48:6404:6404	2039138	5	True				
ANR	2039423	ExpressionStatement	zval_ptr_dtor ( & zv )	223:3:6421:6439	2039138	3	True				
ANR	2039424	CallExpression	zval_ptr_dtor ( & zv )		2039138	0					
ANR	2039425	Callee	zval_ptr_dtor		2039138	0					
ANR	2039426	Identifier	zval_ptr_dtor		2039138	0					
ANR	2039427	ArgumentList	& zv		2039138	1					
ANR	2039428	Argument	& zv		2039138	0					
ANR	2039429	UnaryOperationExpression	& zv		2039138	0					
ANR	2039430	UnaryOperator	&		2039138	0					
ANR	2039431	Identifier	zv		2039138	1					
ANR	2039432	ExpressionStatement	next = var_hash -> next	225:2:6447:6468	2039138	1	True				
ANR	2039433	AssignmentExpression	next = var_hash -> next		2039138	0		=			
ANR	2039434	Identifier	next		2039138	0					
ANR	2039435	PtrMemberAccess	var_hash -> next		2039138	1					
ANR	2039436	Identifier	var_hash		2039138	0					
ANR	2039437	Identifier	next		2039138	1					
ANR	2039438	ExpressionStatement	efree ( var_hash )	226:2:6472:6487	2039138	2	True				
ANR	2039439	CallExpression	efree ( var_hash )		2039138	0					
ANR	2039440	Callee	efree		2039138	0					
ANR	2039441	Identifier	efree		2039138	0					
ANR	2039442	ArgumentList	var_hash		2039138	1					
ANR	2039443	Argument	var_hash		2039138	0					
ANR	2039444	Identifier	var_hash		2039138	0					
ANR	2039445	ExpressionStatement	var_hash = next	227:2:6491:6506	2039138	3	True				
ANR	2039446	AssignmentExpression	var_hash = next		2039138	0		=			
ANR	2039447	Identifier	var_hash		2039138	0					
ANR	2039448	Identifier	next		2039138	1					
ANR	2039449	ReturnType	PHPAPI void		2039138	1					
ANR	2039450	Identifier	var_destroy		2039138	2					
ANR	2039451	ParameterList	php_unserialize_data_t * var_hashx		2039138	3					
ANR	2039452	Parameter	php_unserialize_data_t * var_hashx	173:24:5136:5168	2039138	0	True				
ANR	2039453	ParameterType	php_unserialize_data_t *		2039138	0					
ANR	2039454	Identifier	var_hashx		2039138	1					
ANR	2039455	CFGEntryNode	ENTRY		2039138		True				
ANR	2039456	CFGExitNode	EXIT		2039138		True				
ANR	2039457	Symbol	next		2039138						
ANR	2039458	Symbol	* * var_hash		2039138						
ANR	2039459	Symbol	var_hash -> data		2039138						
ANR	2039460	Symbol	BG		2039138						
ANR	2039461	Symbol	* var_hashx		2039138						
ANR	2039462	Symbol	* var_hash		2039138						
ANR	2039463	Symbol	var_hash -> next		2039138						
ANR	2039464	Symbol	( * var_hashx ) -> first		2039138						
ANR	2039465	Symbol	var_hash -> used_slots		2039138						
ANR	2039466	Symbol	Z_REFCOUNT_P		2039138						
ANR	2039467	Symbol	retval_ptr		2039138						
ANR	2039468	Symbol	& wakeup_name		2039138						
ANR	2039469	Symbol	wakeup_name		2039138						
ANR	2039470	Symbol	* var_hash -> data		2039138						
ANR	2039471	Symbol	( * var_hashx ) -> first_dtor		2039138						
ANR	2039472	Symbol	var_hash		2039138						
ANR	2039473	Symbol	WITHOUT_WAKEUP_FLAG		2039138						
ANR	2039474	Symbol	NULL		2039138						
ANR	2039475	Symbol	serialize_lock		2039138						
ANR	2039476	Symbol	wakeup_failed		2039138						
ANR	2039477	Symbol	& zv		2039138						
ANR	2039478	Symbol	* * var_hashx		2039138						
ANR	2039479	Symbol	i		2039138						
ANR	2039480	Symbol	stderr		2039138						
ANR	2039481	Symbol	* i		2039138						
ANR	2039482	Symbol	var_hashx		2039138						
ANR	2039483	Symbol	zv		2039138						
ANR	2039484	Symbol	& retval_ptr		2039138						
ANR	2039485	Symbol	HAS_WAKEUP_FLAG		2039138						
ANR	2039486	Function	unserialize_str	233:0:6525:7335							
ANR	2039487	FunctionDef	"unserialize_str (const unsigned char * * p , size_t * len , size_t maxlen)"		2039486	0					
ANR	2039488	CompoundStatement		234:0:6607:7335	2039486	0					
ANR	2039489	IdentifierDeclStatement	"size_t i , j ;"	235:1:6610:6621	2039486	0	True				
ANR	2039490	IdentifierDecl	i		2039486	0					
ANR	2039491	IdentifierDeclType	size_t		2039486	0					
ANR	2039492	Identifier	i		2039486	1					
ANR	2039493	IdentifierDecl	j		2039486	1					
ANR	2039494	IdentifierDeclType	size_t		2039486	0					
ANR	2039495	Identifier	j		2039486	1					
ANR	2039496	IdentifierDeclStatement	"char * str = safe_emalloc ( * len , 1 , 1 ) ;"	236:1:6624:6660	2039486	1	True				
ANR	2039497	IdentifierDecl	"* str = safe_emalloc ( * len , 1 , 1 )"		2039486	0					
ANR	2039498	IdentifierDeclType	char *		2039486	0					
ANR	2039499	Identifier	str		2039486	1					
ANR	2039500	AssignmentExpression	"* str = safe_emalloc ( * len , 1 , 1 )"		2039486	2		=			
ANR	2039501	Identifier	str		2039486	0					
ANR	2039502	CallExpression	"safe_emalloc ( * len , 1 , 1 )"		2039486	1					
ANR	2039503	Callee	safe_emalloc		2039486	0					
ANR	2039504	Identifier	safe_emalloc		2039486	0					
ANR	2039505	ArgumentList	* len		2039486	1					
ANR	2039506	Argument	* len		2039486	0					
ANR	2039507	UnaryOperationExpression	* len		2039486	0					
ANR	2039508	UnaryOperator	*		2039486	0					
ANR	2039509	Identifier	len		2039486	1					
ANR	2039510	Argument	1		2039486	1					
ANR	2039511	PrimaryExpression	1		2039486	0					
ANR	2039512	Argument	1		2039486	2					
ANR	2039513	PrimaryExpression	1		2039486	0					
ANR	2039514	IdentifierDeclStatement	unsigned char * end = * ( unsigned char * * ) p + maxlen ;	237:1:6663:6711	2039486	2	True				
ANR	2039515	IdentifierDecl	* end = * ( unsigned char * * ) p + maxlen		2039486	0					
ANR	2039516	IdentifierDeclType	unsigned char *		2039486	0					
ANR	2039517	Identifier	end		2039486	1					
ANR	2039518	AssignmentExpression	* end = * ( unsigned char * * ) p + maxlen		2039486	2		=			
ANR	2039519	Identifier	end		2039486	0					
ANR	2039520	AdditiveExpression	* ( unsigned char * * ) p + maxlen		2039486	1		+			
ANR	2039521	UnaryOperationExpression	* ( unsigned char * * ) p		2039486	0					
ANR	2039522	UnaryOperator	*		2039486	0					
ANR	2039523	CastExpression	( unsigned char * * ) p		2039486	1					
ANR	2039524	CastTarget	unsigned char * *		2039486	0					
ANR	2039525	Identifier	p		2039486	1					
ANR	2039526	Identifier	maxlen		2039486	1					
ANR	2039527	IfStatement	if ( end < * p )		2039486	3					
ANR	2039528	Condition	end < * p	239:5:6719:6726	2039486	0	True				
ANR	2039529	RelationalExpression	end < * p		2039486	0		<			
ANR	2039530	Identifier	end		2039486	0					
ANR	2039531	UnaryOperationExpression	* p		2039486	1					
ANR	2039532	UnaryOperator	*		2039486	0					
ANR	2039533	Identifier	p		2039486	1					
ANR	2039534	CompoundStatement		6:15:121:121	2039486	1					
ANR	2039535	ExpressionStatement	efree ( str )	240:2:6733:6743	2039486	0	True				
ANR	2039536	CallExpression	efree ( str )		2039486	0					
ANR	2039537	Callee	efree		2039486	0					
ANR	2039538	Identifier	efree		2039486	0					
ANR	2039539	ArgumentList	str		2039486	1					
ANR	2039540	Argument	str		2039486	0					
ANR	2039541	Identifier	str		2039486	0					
ANR	2039542	ReturnStatement	return NULL ;	241:2:6747:6758	2039486	1	True				
ANR	2039543	Identifier	NULL		2039486	0					
ANR	2039544	ForStatement	for ( i = 0 ; i < * len ; i ++ )		2039486	4					
ANR	2039545	ForInit	i = 0 ;	244:6:6770:6775	2039486	0	True				
ANR	2039546	AssignmentExpression	i = 0		2039486	0		=			
ANR	2039547	Identifier	i		2039486	0					
ANR	2039548	PrimaryExpression	0		2039486	1					
ANR	2039549	Condition	i < * len	244:13:6777:6784	2039486	1	True				
ANR	2039550	RelationalExpression	i < * len		2039486	0		<			
ANR	2039551	Identifier	i		2039486	0					
ANR	2039552	UnaryOperationExpression	* len		2039486	1					
ANR	2039553	UnaryOperator	*		2039486	0					
ANR	2039554	Identifier	len		2039486	1					
ANR	2039555	PostIncDecOperationExpression	i ++	244:23:6787:6789	2039486	2	True				
ANR	2039556	Identifier	i		2039486	0					
ANR	2039557	IncDec	++		2039486	1					
ANR	2039558	CompoundStatement		11:28:184:184	2039486	3					
ANR	2039559	IfStatement	if ( * p >= end )		2039486	0					
ANR	2039560	Condition	* p >= end	245:6:6800:6808	2039486	0	True				
ANR	2039561	RelationalExpression	* p >= end		2039486	0		>=			
ANR	2039562	UnaryOperationExpression	* p		2039486	0					
ANR	2039563	UnaryOperator	*		2039486	0					
ANR	2039564	Identifier	p		2039486	1					
ANR	2039565	Identifier	end		2039486	1					
ANR	2039566	CompoundStatement		12:17:203:203	2039486	1					
ANR	2039567	ExpressionStatement	efree ( str )	246:3:6816:6826	2039486	0	True				
ANR	2039568	CallExpression	efree ( str )		2039486	0					
ANR	2039569	Callee	efree		2039486	0					
ANR	2039570	Identifier	efree		2039486	0					
ANR	2039571	ArgumentList	str		2039486	1					
ANR	2039572	Argument	str		2039486	0					
ANR	2039573	Identifier	str		2039486	0					
ANR	2039574	ReturnStatement	return NULL ;	247:3:6831:6842	2039486	1	True				
ANR	2039575	Identifier	NULL		2039486	0					
ANR	2039576	IfStatement	if ( * * p != '\\\\' )		2039486	1					
ANR	2039577	Condition	* * p != '\\\\'	249:6:6854:6864	2039486	0	True				
ANR	2039578	EqualityExpression	* * p != '\\\\'		2039486	0		!=			
ANR	2039579	UnaryOperationExpression	* * p		2039486	0					
ANR	2039580	UnaryOperator	*		2039486	0					
ANR	2039581	UnaryOperationExpression	* p		2039486	1					
ANR	2039582	UnaryOperator	*		2039486	0					
ANR	2039583	Identifier	p		2039486	1					
ANR	2039584	PrimaryExpression	'\\\\'		2039486	1					
ANR	2039585	CompoundStatement		16:19:259:259	2039486	1					
ANR	2039586	ExpressionStatement	str [ i ] = ( char ) * * p	250:3:6872:6890	2039486	0	True				
ANR	2039587	AssignmentExpression	str [ i ] = ( char ) * * p		2039486	0		=			
ANR	2039588	ArrayIndexing	str [ i ]		2039486	0					
ANR	2039589	Identifier	str		2039486	0					
ANR	2039590	Identifier	i		2039486	1					
ANR	2039591	CastExpression	( char ) * * p		2039486	1					
ANR	2039592	CastTarget	char		2039486	0					
ANR	2039593	UnaryOperationExpression	* * p		2039486	1					
ANR	2039594	UnaryOperator	*		2039486	0					
ANR	2039595	UnaryOperationExpression	* p		2039486	1					
ANR	2039596	UnaryOperator	*		2039486	0					
ANR	2039597	Identifier	p		2039486	1					
ANR	2039598	ElseStatement	else		2039486	0					
ANR	2039599	CompoundStatement		19:3:298:318	2039486	0					
ANR	2039600	IdentifierDeclStatement	unsigned char ch = 0 ;	252:3:6906:6926	2039486	0	True				
ANR	2039601	IdentifierDecl	ch = 0		2039486	0					
ANR	2039602	IdentifierDeclType	unsigned char		2039486	0					
ANR	2039603	Identifier	ch		2039486	1					
ANR	2039604	AssignmentExpression	ch = 0		2039486	2		=			
ANR	2039605	Identifier	ch		2039486	0					
ANR	2039606	PrimaryExpression	0		2039486	1					
ANR	2039607	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		2039486	1					
ANR	2039608	ForInit	j = 0 ;	254:8:6937:6942	2039486	0	True				
ANR	2039609	AssignmentExpression	j = 0		2039486	0		=			
ANR	2039610	Identifier	j		2039486	0					
ANR	2039611	PrimaryExpression	0		2039486	1					
ANR	2039612	Condition	j < 2	254:15:6944:6948	2039486	1	True				
ANR	2039613	RelationalExpression	j < 2		2039486	0		<			
ANR	2039614	Identifier	j		2039486	0					
ANR	2039615	PrimaryExpression	2		2039486	1					
ANR	2039616	PostIncDecOperationExpression	j ++	254:22:6951:6953	2039486	2	True				
ANR	2039617	Identifier	j		2039486	0					
ANR	2039618	IncDec	++		2039486	1					
ANR	2039619	CompoundStatement		21:27:348:348	2039486	3					
ANR	2039620	ExpressionStatement	( * p ) ++	255:4:6962:6968	2039486	0	True				
ANR	2039621	PostIncDecOperationExpression	( * p ) ++		2039486	0					
ANR	2039622	UnaryOperationExpression	* p		2039486	0					
ANR	2039623	UnaryOperator	*		2039486	0					
ANR	2039624	Identifier	p		2039486	1					
ANR	2039625	IncDec	++		2039486	1					
ANR	2039626	IfStatement	if ( * * p >= '0' && * * p <= '9' )		2039486	1					
ANR	2039627	Condition	* * p >= '0' && * * p <= '9'	256:8:6978:7001	2039486	0	True				
ANR	2039628	AndExpression	* * p >= '0' && * * p <= '9'		2039486	0		&&			
ANR	2039629	RelationalExpression	* * p >= '0'		2039486	0		>=			
ANR	2039630	UnaryOperationExpression	* * p		2039486	0					
ANR	2039631	UnaryOperator	*		2039486	0					
ANR	2039632	UnaryOperationExpression	* p		2039486	1					
ANR	2039633	UnaryOperator	*		2039486	0					
ANR	2039634	Identifier	p		2039486	1					
ANR	2039635	PrimaryExpression	'0'		2039486	1					
ANR	2039636	RelationalExpression	* * p <= '9'		2039486	1		<=			
ANR	2039637	UnaryOperationExpression	* * p		2039486	0					
ANR	2039638	UnaryOperator	*		2039486	0					
ANR	2039639	UnaryOperationExpression	* p		2039486	1					
ANR	2039640	UnaryOperator	*		2039486	0					
ANR	2039641	Identifier	p		2039486	1					
ANR	2039642	PrimaryExpression	'9'		2039486	1					
ANR	2039643	CompoundStatement		23:34:396:396	2039486	1					
ANR	2039644	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - '0' )	257:5:7011:7038	2039486	0	True				
ANR	2039645	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - '0' )		2039486	0		=			
ANR	2039646	Identifier	ch		2039486	0					
ANR	2039647	AdditiveExpression	( ch << 4 ) + ( * * p - '0' )		2039486	1		+			
ANR	2039648	ShiftExpression	ch << 4		2039486	0		<<			
ANR	2039649	Identifier	ch		2039486	0					
ANR	2039650	PrimaryExpression	4		2039486	1					
ANR	2039651	AdditiveExpression	* * p - '0'		2039486	1		-			
ANR	2039652	UnaryOperationExpression	* * p		2039486	0					
ANR	2039653	UnaryOperator	*		2039486	0					
ANR	2039654	UnaryOperationExpression	* p		2039486	1					
ANR	2039655	UnaryOperator	*		2039486	0					
ANR	2039656	Identifier	p		2039486	1					
ANR	2039657	PrimaryExpression	'0'		2039486	1					
ANR	2039658	ElseStatement	else		2039486	0					
ANR	2039659	IfStatement	if ( * * p >= 'a' && * * p <= 'f' )		2039486	0					
ANR	2039660	Condition	* * p >= 'a' && * * p <= 'f'	258:15:7055:7078	2039486	0	True				
ANR	2039661	AndExpression	* * p >= 'a' && * * p <= 'f'		2039486	0		&&			
ANR	2039662	RelationalExpression	* * p >= 'a'		2039486	0		>=			
ANR	2039663	UnaryOperationExpression	* * p		2039486	0					
ANR	2039664	UnaryOperator	*		2039486	0					
ANR	2039665	UnaryOperationExpression	* p		2039486	1					
ANR	2039666	UnaryOperator	*		2039486	0					
ANR	2039667	Identifier	p		2039486	1					
ANR	2039668	PrimaryExpression	'a'		2039486	1					
ANR	2039669	RelationalExpression	* * p <= 'f'		2039486	1		<=			
ANR	2039670	UnaryOperationExpression	* * p		2039486	0					
ANR	2039671	UnaryOperator	*		2039486	0					
ANR	2039672	UnaryOperationExpression	* p		2039486	1					
ANR	2039673	UnaryOperator	*		2039486	0					
ANR	2039674	Identifier	p		2039486	1					
ANR	2039675	PrimaryExpression	'f'		2039486	1					
ANR	2039676	CompoundStatement		25:41:473:473	2039486	1					
ANR	2039677	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - 'a' + 10 )	259:5:7088:7118	2039486	0	True				
ANR	2039678	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - 'a' + 10 )		2039486	0		=			
ANR	2039679	Identifier	ch		2039486	0					
ANR	2039680	AdditiveExpression	( ch << 4 ) + ( * * p - 'a' + 10 )		2039486	1		+			
ANR	2039681	ShiftExpression	ch << 4		2039486	0		<<			
ANR	2039682	Identifier	ch		2039486	0					
ANR	2039683	PrimaryExpression	4		2039486	1					
ANR	2039684	AdditiveExpression	* * p - 'a' + 10		2039486	1		-			
ANR	2039685	UnaryOperationExpression	* * p		2039486	0					
ANR	2039686	UnaryOperator	*		2039486	0					
ANR	2039687	UnaryOperationExpression	* p		2039486	1					
ANR	2039688	UnaryOperator	*		2039486	0					
ANR	2039689	Identifier	p		2039486	1					
ANR	2039690	AdditiveExpression	'a' + 10		2039486	1		+			
ANR	2039691	PrimaryExpression	'a'		2039486	0					
ANR	2039692	PrimaryExpression	10		2039486	1					
ANR	2039693	ElseStatement	else		2039486	0					
ANR	2039694	IfStatement	if ( * * p >= 'A' && * * p <= 'F' )		2039486	0					
ANR	2039695	Condition	* * p >= 'A' && * * p <= 'F'	260:15:7135:7158	2039486	0	True				
ANR	2039696	AndExpression	* * p >= 'A' && * * p <= 'F'		2039486	0		&&			
ANR	2039697	RelationalExpression	* * p >= 'A'		2039486	0		>=			
ANR	2039698	UnaryOperationExpression	* * p		2039486	0					
ANR	2039699	UnaryOperator	*		2039486	0					
ANR	2039700	UnaryOperationExpression	* p		2039486	1					
ANR	2039701	UnaryOperator	*		2039486	0					
ANR	2039702	Identifier	p		2039486	1					
ANR	2039703	PrimaryExpression	'A'		2039486	1					
ANR	2039704	RelationalExpression	* * p <= 'F'		2039486	1		<=			
ANR	2039705	UnaryOperationExpression	* * p		2039486	0					
ANR	2039706	UnaryOperator	*		2039486	0					
ANR	2039707	UnaryOperationExpression	* p		2039486	1					
ANR	2039708	UnaryOperator	*		2039486	0					
ANR	2039709	Identifier	p		2039486	1					
ANR	2039710	PrimaryExpression	'F'		2039486	1					
ANR	2039711	CompoundStatement		27:41:553:553	2039486	1					
ANR	2039712	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - 'A' + 10 )	261:5:7168:7198	2039486	0	True				
ANR	2039713	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - 'A' + 10 )		2039486	0		=			
ANR	2039714	Identifier	ch		2039486	0					
ANR	2039715	AdditiveExpression	( ch << 4 ) + ( * * p - 'A' + 10 )		2039486	1		+			
ANR	2039716	ShiftExpression	ch << 4		2039486	0		<<			
ANR	2039717	Identifier	ch		2039486	0					
ANR	2039718	PrimaryExpression	4		2039486	1					
ANR	2039719	AdditiveExpression	* * p - 'A' + 10		2039486	1		-			
ANR	2039720	UnaryOperationExpression	* * p		2039486	0					
ANR	2039721	UnaryOperator	*		2039486	0					
ANR	2039722	UnaryOperationExpression	* p		2039486	1					
ANR	2039723	UnaryOperator	*		2039486	0					
ANR	2039724	Identifier	p		2039486	1					
ANR	2039725	AdditiveExpression	'A' + 10		2039486	1		+			
ANR	2039726	PrimaryExpression	'A'		2039486	0					
ANR	2039727	PrimaryExpression	10		2039486	1					
ANR	2039728	ElseStatement	else		2039486	0					
ANR	2039729	CompoundStatement		29:11:603:603	2039486	0					
ANR	2039730	ExpressionStatement	efree ( str )	263:5:7218:7228	2039486	0	True				
ANR	2039731	CallExpression	efree ( str )		2039486	0					
ANR	2039732	Callee	efree		2039486	0					
ANR	2039733	Identifier	efree		2039486	0					
ANR	2039734	ArgumentList	str		2039486	1					
ANR	2039735	Argument	str		2039486	0					
ANR	2039736	Identifier	str		2039486	0					
ANR	2039737	ReturnStatement	return NULL ;	264:5:7235:7246	2039486	1	True				
ANR	2039738	Identifier	NULL		2039486	0					
ANR	2039739	ExpressionStatement	str [ i ] = ( char ) ch	267:3:7262:7279	2039486	2	True				
ANR	2039740	AssignmentExpression	str [ i ] = ( char ) ch		2039486	0		=			
ANR	2039741	ArrayIndexing	str [ i ]		2039486	0					
ANR	2039742	Identifier	str		2039486	0					
ANR	2039743	Identifier	i		2039486	1					
ANR	2039744	CastExpression	( char ) ch		2039486	1					
ANR	2039745	CastTarget	char		2039486	0					
ANR	2039746	Identifier	ch		2039486	1					
ANR	2039747	ExpressionStatement	( * p ) ++	269:2:7287:7293	2039486	2	True				
ANR	2039748	PostIncDecOperationExpression	( * p ) ++		2039486	0					
ANR	2039749	UnaryOperationExpression	* p		2039486	0					
ANR	2039750	UnaryOperator	*		2039486	0					
ANR	2039751	Identifier	p		2039486	1					
ANR	2039752	IncDec	++		2039486	1					
ANR	2039753	ExpressionStatement	str [ i ] = 0	271:1:7299:7309	2039486	5	True				
ANR	2039754	AssignmentExpression	str [ i ] = 0		2039486	0		=			
ANR	2039755	ArrayIndexing	str [ i ]		2039486	0					
ANR	2039756	Identifier	str		2039486	0					
ANR	2039757	Identifier	i		2039486	1					
ANR	2039758	PrimaryExpression	0		2039486	1					
ANR	2039759	ExpressionStatement	* len = i	272:1:7312:7320	2039486	6	True				
ANR	2039760	AssignmentExpression	* len = i		2039486	0		=			
ANR	2039761	UnaryOperationExpression	* len		2039486	0					
ANR	2039762	UnaryOperator	*		2039486	0					
ANR	2039763	Identifier	len		2039486	1					
ANR	2039764	Identifier	i		2039486	1					
ANR	2039765	ReturnStatement	return str ;	273:1:7323:7333	2039486	7	True				
ANR	2039766	Identifier	str		2039486	0					
ANR	2039767	ReturnType	static char *		2039486	1					
ANR	2039768	Identifier	unserialize_str		2039486	2					
ANR	2039769	ParameterList	"const unsigned char * * p , size_t * len , size_t maxlen"		2039486	3					
ANR	2039770	Parameter	const unsigned char * * p	233:29:6554:6576	2039486	0	True				
ANR	2039771	ParameterType	const unsigned char * *		2039486	0					
ANR	2039772	Identifier	p		2039486	1					
ANR	2039773	Parameter	size_t * len	233:54:6579:6589	2039486	1	True				
ANR	2039774	ParameterType	size_t *		2039486	0					
ANR	2039775	Identifier	len		2039486	1					
ANR	2039776	Parameter	size_t maxlen	233:67:6592:6604	2039486	2	True				
ANR	2039777	ParameterType	size_t		2039486	0					
ANR	2039778	Identifier	maxlen		2039486	1					
ANR	2039779	CFGEntryNode	ENTRY		2039486		True				
ANR	2039780	CFGExitNode	EXIT		2039486		True				
ANR	2039781	Symbol	NULL		2039486						
ANR	2039782	Symbol	ch		2039486						
ANR	2039783	Symbol	i		2039486						
ANR	2039784	Symbol	j		2039486						
ANR	2039785	Symbol	p		2039486						
ANR	2039786	Symbol	str		2039486						
ANR	2039787	Symbol	* ( unsigned char * * ) p		2039486						
ANR	2039788	Symbol	* i		2039486						
ANR	2039789	Symbol	len		2039486						
ANR	2039790	Symbol	* p		2039486						
ANR	2039791	Symbol	end		2039486						
ANR	2039792	Symbol	* * p		2039486						
ANR	2039793	Symbol	* str		2039486						
ANR	2039794	Symbol	safe_emalloc		2039486						
ANR	2039795	Symbol	maxlen		2039486						
ANR	2039796	Symbol	* len		2039486						
ANR	2039797	Function	parse_iv2	288:0:7524:7966							
ANR	2039798	FunctionDef	"parse_iv2 (const unsigned char * p , const unsigned char * * q)"		2039797	0					
ANR	2039799	CompoundStatement		289:0:7602:7966	2039797	0					
ANR	2039800	IdentifierDeclStatement	char cursor ;	290:1:7605:7616	2039797	0	True				
ANR	2039801	IdentifierDecl	cursor		2039797	0					
ANR	2039802	IdentifierDeclType	char		2039797	0					
ANR	2039803	Identifier	cursor		2039797	1					
ANR	2039804	IdentifierDeclStatement	long result = 0 ;	291:1:7619:7634	2039797	1	True				
ANR	2039805	IdentifierDecl	result = 0		2039797	0					
ANR	2039806	IdentifierDeclType	long		2039797	0					
ANR	2039807	Identifier	result		2039797	1					
ANR	2039808	AssignmentExpression	result = 0		2039797	2		=			
ANR	2039809	Identifier	result		2039797	0					
ANR	2039810	PrimaryExpression	0		2039797	1					
ANR	2039811	IdentifierDeclStatement	int neg = 0 ;	292:1:7637:7648	2039797	2	True				
ANR	2039812	IdentifierDecl	neg = 0		2039797	0					
ANR	2039813	IdentifierDeclType	int		2039797	0					
ANR	2039814	Identifier	neg		2039797	1					
ANR	2039815	AssignmentExpression	neg = 0		2039797	2		=			
ANR	2039816	Identifier	neg		2039797	0					
ANR	2039817	PrimaryExpression	0		2039797	1					
ANR	2039818	SwitchStatement	switch ( * p )		2039797	3					
ANR	2039819	Condition	* p	294:9:7660:7661	2039797	0	True				
ANR	2039820	UnaryOperationExpression	* p		2039797	0					
ANR	2039821	UnaryOperator	*		2039797	0					
ANR	2039822	Identifier	p		2039797	1					
ANR	2039823	CompoundStatement		6:13:61:61	2039797	1					
ANR	2039824	Label	case '-' :	295:2:7668:7676	2039797	0	True				
ANR	2039825	ExpressionStatement	neg ++	296:3:7681:7686	2039797	1	True				
ANR	2039826	PostIncDecOperationExpression	neg ++		2039797	0					
ANR	2039827	Identifier	neg		2039797	0					
ANR	2039828	IncDec	++		2039797	1					
ANR	2039829	Label	case '+' :	298:2:7712:7720	2039797	2	True				
ANR	2039830	ExpressionStatement	p ++	299:3:7725:7728	2039797	3	True				
ANR	2039831	PostIncDecOperationExpression	p ++		2039797	0					
ANR	2039832	Identifier	p		2039797	0					
ANR	2039833	IncDec	++		2039797	1					
ANR	2039834	WhileStatement	while ( 1 )		2039797	4					
ANR	2039835	Condition	1	302:8:7742:7742	2039797	0	True				
ANR	2039836	PrimaryExpression	1		2039797	0					
ANR	2039837	CompoundStatement		14:11:142:142	2039797	1					
ANR	2039838	ExpressionStatement	cursor = ( char ) * p	303:2:7749:7766	2039797	0	True				
ANR	2039839	AssignmentExpression	cursor = ( char ) * p		2039797	0		=			
ANR	2039840	Identifier	cursor		2039797	0					
ANR	2039841	CastExpression	( char ) * p		2039797	1					
ANR	2039842	CastTarget	char		2039797	0					
ANR	2039843	UnaryOperationExpression	* p		2039797	1					
ANR	2039844	UnaryOperator	*		2039797	0					
ANR	2039845	Identifier	p		2039797	1					
ANR	2039846	IfStatement	if ( cursor >= '0' && cursor <= '9' )		2039797	1					
ANR	2039847	Condition	cursor >= '0' && cursor <= '9'	304:6:7774:7803	2039797	0	True				
ANR	2039848	AndExpression	cursor >= '0' && cursor <= '9'		2039797	0		&&			
ANR	2039849	RelationalExpression	cursor >= '0'		2039797	0		>=			
ANR	2039850	Identifier	cursor		2039797	0					
ANR	2039851	PrimaryExpression	'0'		2039797	1					
ANR	2039852	RelationalExpression	cursor <= '9'		2039797	1		<=			
ANR	2039853	Identifier	cursor		2039797	0					
ANR	2039854	PrimaryExpression	'9'		2039797	1					
ANR	2039855	CompoundStatement		16:38:203:203	2039797	1					
ANR	2039856	ExpressionStatement	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )	305:3:7811:7871	2039797	0	True				
ANR	2039857	AssignmentExpression	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2039797	0		=			
ANR	2039858	Identifier	result		2039797	0					
ANR	2039859	AdditiveExpression	result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2039797	1		+			
ANR	2039860	MultiplicativeExpression	result * 10		2039797	0		*			
ANR	2039861	Identifier	result		2039797	0					
ANR	2039862	PrimaryExpression	10		2039797	1					
ANR	2039863	CastExpression	( size_t ) ( cursor - ( unsigned char ) '0' )		2039797	1					
ANR	2039864	CastTarget	size_t		2039797	0					
ANR	2039865	AdditiveExpression	cursor - ( unsigned char ) '0'		2039797	1		-			
ANR	2039866	Identifier	cursor		2039797	0					
ANR	2039867	CastExpression	( unsigned char ) '0'		2039797	1					
ANR	2039868	CastTarget	unsigned char		2039797	0					
ANR	2039869	PrimaryExpression	'0'		2039797	1					
ANR	2039870	ElseStatement	else		2039797	0					
ANR	2039871	CompoundStatement		18:9:279:279	2039797	0					
ANR	2039872	BreakStatement	break ;	307:3:7887:7892	2039797	0	True				
ANR	2039873	ExpressionStatement	p ++	309:2:7900:7903	2039797	2	True				
ANR	2039874	PostIncDecOperationExpression	p ++		2039797	0					
ANR	2039875	Identifier	p		2039797	0					
ANR	2039876	IncDec	++		2039797	1					
ANR	2039877	IfStatement	if ( q )		2039797	5					
ANR	2039878	Condition	q	311:5:7913:7913	2039797	0	True				
ANR	2039879	Identifier	q		2039797	0					
ANR	2039880	ExpressionStatement	* q = p	311:8:7916:7922	2039797	1	True				
ANR	2039881	AssignmentExpression	* q = p		2039797	0		=			
ANR	2039882	UnaryOperationExpression	* q		2039797	0					
ANR	2039883	UnaryOperator	*		2039797	0					
ANR	2039884	Identifier	q		2039797	1					
ANR	2039885	Identifier	p		2039797	1					
ANR	2039886	IfStatement	if ( neg )		2039797	6					
ANR	2039887	Condition	neg	312:5:7929:7931	2039797	0	True				
ANR	2039888	Identifier	neg		2039797	0					
ANR	2039889	ReturnStatement	return - result ;	312:10:7934:7948	2039797	1	True				
ANR	2039890	UnaryOperationExpression	- result		2039797	0					
ANR	2039891	UnaryOperator	-		2039797	0					
ANR	2039892	Identifier	result		2039797	1					
ANR	2039893	ReturnStatement	return result ;	313:1:7951:7964	2039797	7	True				
ANR	2039894	Identifier	result		2039797	0					
ANR	2039895	ReturnType	static inline long		2039797	1					
ANR	2039896	Identifier	parse_iv2		2039797	2					
ANR	2039897	ParameterList	"const unsigned char * p , const unsigned char * * q"		2039797	3					
ANR	2039898	Parameter	const unsigned char * p	288:29:7553:7574	2039797	0	True				
ANR	2039899	ParameterType	const unsigned char *		2039797	0					
ANR	2039900	Identifier	p		2039797	1					
ANR	2039901	Parameter	const unsigned char * * q	288:53:7577:7599	2039797	1	True				
ANR	2039902	ParameterType	const unsigned char * *		2039797	0					
ANR	2039903	Identifier	q		2039797	1					
ANR	2039904	CFGEntryNode	ENTRY		2039797		True				
ANR	2039905	CFGExitNode	EXIT		2039797		True				
ANR	2039906	Symbol	p		2039797						
ANR	2039907	Symbol	cursor		2039797						
ANR	2039908	Symbol	result		2039797						
ANR	2039909	Symbol	q		2039797						
ANR	2039910	Symbol	neg		2039797						
ANR	2039911	Symbol	* p		2039797						
ANR	2039912	Symbol	* q		2039797						
ANR	2039913	Function	parse_iv	316:0:7969:8051							
ANR	2039914	FunctionDef	parse_iv (const unsigned char * p)		2039913	0					
ANR	2039915	CompoundStatement		317:0:8021:8051	2039913	0					
ANR	2039916	ReturnStatement	"return parse_iv2 ( p , NULL ) ;"	318:1:8024:8049	2039913	0	True				
ANR	2039917	CallExpression	"parse_iv2 ( p , NULL )"		2039913	0					
ANR	2039918	Callee	parse_iv2		2039913	0					
ANR	2039919	Identifier	parse_iv2		2039913	0					
ANR	2039920	ArgumentList	p		2039913	1					
ANR	2039921	Argument	p		2039913	0					
ANR	2039922	Identifier	p		2039913	0					
ANR	2039923	Argument	NULL		2039913	1					
ANR	2039924	Identifier	NULL		2039913	0					
ANR	2039925	ReturnType	static inline long		2039913	1					
ANR	2039926	Identifier	parse_iv		2039913	2					
ANR	2039927	ParameterList	const unsigned char * p		2039913	3					
ANR	2039928	Parameter	const unsigned char * p	316:28:7997:8018	2039913	0	True				
ANR	2039929	ParameterType	const unsigned char *		2039913	0					
ANR	2039930	Identifier	p		2039913	1					
ANR	2039931	CFGEntryNode	ENTRY		2039913		True				
ANR	2039932	CFGExitNode	EXIT		2039913		True				
ANR	2039933	Symbol	p		2039913						
ANR	2039934	Symbol	NULL		2039913						
ANR	2039935	Symbol	parse_iv2		2039913						
ANR	2039936	Function	parse_uiv	322:0:8107:8421							
ANR	2039937	FunctionDef	parse_uiv (const unsigned char * p)		2039936	0					
ANR	2039938	CompoundStatement		323:0:8162:8421	2039936	0					
ANR	2039939	IdentifierDeclStatement	unsigned char cursor ;	324:1:8165:8185	2039936	0	True				
ANR	2039940	IdentifierDecl	cursor		2039936	0					
ANR	2039941	IdentifierDeclType	unsigned char		2039936	0					
ANR	2039942	Identifier	cursor		2039936	1					
ANR	2039943	IdentifierDeclStatement	size_t result = 0 ;	325:1:8188:8205	2039936	1	True				
ANR	2039944	IdentifierDecl	result = 0		2039936	0					
ANR	2039945	IdentifierDeclType	size_t		2039936	0					
ANR	2039946	Identifier	result		2039936	1					
ANR	2039947	AssignmentExpression	result = 0		2039936	2		=			
ANR	2039948	Identifier	result		2039936	0					
ANR	2039949	PrimaryExpression	0		2039936	1					
ANR	2039950	IfStatement	if ( * p == '+' )		2039936	2					
ANR	2039951	Condition	* p == '+'	327:5:8213:8221	2039936	0	True				
ANR	2039952	EqualityExpression	* p == '+'		2039936	0		==			
ANR	2039953	UnaryOperationExpression	* p		2039936	0					
ANR	2039954	UnaryOperator	*		2039936	0					
ANR	2039955	Identifier	p		2039936	1					
ANR	2039956	PrimaryExpression	'+'		2039936	1					
ANR	2039957	CompoundStatement		5:16:61:61	2039936	1					
ANR	2039958	ExpressionStatement	p ++	328:2:8228:8231	2039936	0	True				
ANR	2039959	PostIncDecOperationExpression	p ++		2039936	0					
ANR	2039960	Identifier	p		2039936	0					
ANR	2039961	IncDec	++		2039936	1					
ANR	2039962	WhileStatement	while ( 1 )		2039936	3					
ANR	2039963	Condition	1	331:8:8245:8245	2039936	0	True				
ANR	2039964	PrimaryExpression	1		2039936	0					
ANR	2039965	CompoundStatement		9:11:85:85	2039936	1					
ANR	2039966	ExpressionStatement	cursor = * p	332:2:8252:8263	2039936	0	True				
ANR	2039967	AssignmentExpression	cursor = * p		2039936	0		=			
ANR	2039968	Identifier	cursor		2039936	0					
ANR	2039969	UnaryOperationExpression	* p		2039936	1					
ANR	2039970	UnaryOperator	*		2039936	0					
ANR	2039971	Identifier	p		2039936	1					
ANR	2039972	IfStatement	if ( cursor >= '0' && cursor <= '9' )		2039936	1					
ANR	2039973	Condition	cursor >= '0' && cursor <= '9'	333:6:8271:8300	2039936	0	True				
ANR	2039974	AndExpression	cursor >= '0' && cursor <= '9'		2039936	0		&&			
ANR	2039975	RelationalExpression	cursor >= '0'		2039936	0		>=			
ANR	2039976	Identifier	cursor		2039936	0					
ANR	2039977	PrimaryExpression	'0'		2039936	1					
ANR	2039978	RelationalExpression	cursor <= '9'		2039936	1		<=			
ANR	2039979	Identifier	cursor		2039936	0					
ANR	2039980	PrimaryExpression	'9'		2039936	1					
ANR	2039981	CompoundStatement		11:38:140:140	2039936	1					
ANR	2039982	ExpressionStatement	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )	334:3:8308:8368	2039936	0	True				
ANR	2039983	AssignmentExpression	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2039936	0		=			
ANR	2039984	Identifier	result		2039936	0					
ANR	2039985	AdditiveExpression	result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2039936	1		+			
ANR	2039986	MultiplicativeExpression	result * 10		2039936	0		*			
ANR	2039987	Identifier	result		2039936	0					
ANR	2039988	PrimaryExpression	10		2039936	1					
ANR	2039989	CastExpression	( size_t ) ( cursor - ( unsigned char ) '0' )		2039936	1					
ANR	2039990	CastTarget	size_t		2039936	0					
ANR	2039991	AdditiveExpression	cursor - ( unsigned char ) '0'		2039936	1		-			
ANR	2039992	Identifier	cursor		2039936	0					
ANR	2039993	CastExpression	( unsigned char ) '0'		2039936	1					
ANR	2039994	CastTarget	unsigned char		2039936	0					
ANR	2039995	PrimaryExpression	'0'		2039936	1					
ANR	2039996	ElseStatement	else		2039936	0					
ANR	2039997	CompoundStatement		13:9:216:216	2039936	0					
ANR	2039998	BreakStatement	break ;	336:3:8384:8389	2039936	0	True				
ANR	2039999	ExpressionStatement	p ++	338:2:8397:8400	2039936	2	True				
ANR	2040000	PostIncDecOperationExpression	p ++		2039936	0					
ANR	2040001	Identifier	p		2039936	0					
ANR	2040002	IncDec	++		2039936	1					
ANR	2040003	ReturnStatement	return result ;	340:1:8406:8419	2039936	4	True				
ANR	2040004	Identifier	result		2039936	0					
ANR	2040005	ReturnType	static inline size_t		2039936	1					
ANR	2040006	Identifier	parse_uiv		2039936	2					
ANR	2040007	ParameterList	const unsigned char * p		2039936	3					
ANR	2040008	Parameter	const unsigned char * p	322:31:8138:8159	2039936	0	True				
ANR	2040009	ParameterType	const unsigned char *		2039936	0					
ANR	2040010	Identifier	p		2039936	1					
ANR	2040011	CFGEntryNode	ENTRY		2039936		True				
ANR	2040012	CFGExitNode	EXIT		2039936		True				
ANR	2040013	Symbol	p		2039936						
ANR	2040014	Symbol	cursor		2039936						
ANR	2040015	Symbol	result		2039936						
ANR	2040016	Symbol	* p		2039936						
ANR	2040017	DeclStmt									
ANR	2040018	Decl							zval	zval *	key
ANR	2040019	Decl							zval	zval *	data
ANR	2040020	Decl							zval	zval * *	old_data
ANR	2040021	DeclStmt									
ANR	2040022	Decl							long	long	datalen
ANR	2040023	DeclStmt									
ANR	2040024	Decl							long	long	elements
ANR	2040025	DeclStmt									
ANR	2040026	Decl							zval	zval * *	slot
ANR	2040027	DeclStmt									
ANR	2040028	Decl							zval	zval *	zv
ANR	2040029	DeclStmt									
ANR	2040030	Decl							const unsigned char	const unsigned char *	cursor
ANR	2040031	Decl							const unsigned char	const unsigned char *	limit
ANR	2040032	Decl							const unsigned char	const unsigned char *	marker
ANR	2040033	Decl							const unsigned char	const unsigned char *	start
ANR	2040034	DeclStmt									
ANR	2040035	Decl							zval	zval * *	rval_ref
ANR	2040036	DeclStmt									
ANR	2040037	Decl							YYCTYPE	YYCTYPE	yych
ANR	2040038	DeclStmt									
ANR	2040039	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	2040040	DeclStmt									
ANR	2040041	Decl							long	long	id
ANR	2040042	DeclStmt									
ANR	2040043	Decl							int	int	digits
ANR	2040044	DeclStmt									
ANR	2040045	Decl							int	int	cmp
ANR	2040046	DeclStmt									
ANR	2040047	Decl							long	long	id
ANR	2040048	DeclStmt									
ANR	2040049	Decl							size_t	size_t	len
ANR	2040050	Decl							size_t	size_t	len2
ANR	2040051	Decl							size_t	size_t	len3
ANR	2040052	Decl							size_t	size_t	maxlen
ANR	2040053	DeclStmt									
ANR	2040054	Decl							long	long	elements
ANR	2040055	DeclStmt									
ANR	2040056	Decl							char	char *	class_name
ANR	2040057	DeclStmt									
ANR	2040058	Decl							zend_class_entry	zend_class_entry *	ce
ANR	2040059	DeclStmt									
ANR	2040060	Decl							zend_class_entry	zend_class_entry * *	pce
ANR	2040061	DeclStmt									
ANR	2040062	Decl							int	int	incomplete_class
ANR	2040063	DeclStmt									
ANR	2040064	Decl							int	int	custom_object
ANR	2040065	DeclStmt									
ANR	2040066	Decl							zval	zval *	user_func
ANR	2040067	DeclStmt									
ANR	2040068	Decl							zval	zval *	retval_ptr
ANR	2040069	DeclStmt									
ANR	2040070	Decl							zval	zval * * [ 1 ]	args
ANR	2040071	DeclStmt									
ANR	2040072	Decl							zval	zval *	arg_func_name
ANR	2040073	DeclStmt									
ANR	2040074	Decl							int	int	ret
ANR	2040075	DeclStmt									
ANR	2040076	Decl							size_t	size_t	len
ANR	2040077	Decl							size_t	size_t	maxlen
ANR	2040078	DeclStmt									
ANR	2040079	Decl							char	char *	str
ANR	2040080	DeclStmt									
ANR	2040081	Decl							long	long	elements
ANR	2040082	DeclStmt									
ANR	2040083	Decl							long	long	elements
ANR	2040084	DeclStmt									
ANR	2040085	Decl							size_t	size_t	len
ANR	2040086	Decl							size_t	size_t	maxlen
ANR	2040087	DeclStmt									
ANR	2040088	Decl							char	char *	str
