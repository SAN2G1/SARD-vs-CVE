command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1081168	File	data/converged/CVE-2017-11142_php-src/ext_pcre_pcrelib_sljit_sljitNativePPC_common.c								
ANR	1081169	Function	sljit_get_platform_name	27:0:1455:1563							
ANR	1081170	FunctionDef	sljit_get_platform_name ()		1081169	0					
ANR	1081171	CompoundStatement		28:0:1528:1563	1081169	0					
ANR	1081172	Statement	return	29:1:1531:1536	1081169	0	True				
ANR	1081173	Statement	"""PowerPC"""	29:8:1538:1546	1081169	1	True				
ANR	1081174	ExpressionStatement	SLJIT_CPUINFO	29:18:1548:1561	1081169	2	True				
ANR	1081175	Identifier	SLJIT_CPUINFO		1081169	0					
ANR	1081176	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1081169	1					
ANR	1081177	Identifier	sljit_get_platform_name		1081169	2					
ANR	1081178	ParameterList			1081169	3					
ANR	1081179	CFGEntryNode	ENTRY		1081169		True				
ANR	1081180	CFGExitNode	EXIT		1081169		True				
ANR	1081181	DeclStmt									
ANR	1081182	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1081183	Function	ppc_cache_flush	49:0:1990:3040							
ANR	1081184	FunctionDef	"ppc_cache_flush (sljit_ins * from , sljit_ins * to)"		1081183	0					
ANR	1081185	CompoundStatement		50:0:2050:3040	1081183	0					
ANR	1081186	ExpressionStatement	"_sync_cache_range ( ( caddr_t ) from , ( int ) ( ( size_t ) to - ( size_t ) from ) )"	52:1:2065:2131	1081183	0	True				
ANR	1081187	CallExpression	"_sync_cache_range ( ( caddr_t ) from , ( int ) ( ( size_t ) to - ( size_t ) from ) )"		1081183	0					
ANR	1081188	Callee	_sync_cache_range		1081183	0					
ANR	1081189	Identifier	_sync_cache_range		1081183	0					
ANR	1081190	ArgumentList	( caddr_t ) from		1081183	1					
ANR	1081191	Argument	( caddr_t ) from		1081183	0					
ANR	1081192	CastExpression	( caddr_t ) from		1081183	0					
ANR	1081193	CastTarget	caddr_t		1081183	0					
ANR	1081194	Identifier	from		1081183	1					
ANR	1081195	Argument	( int ) ( ( size_t ) to - ( size_t ) from )		1081183	1					
ANR	1081196	CastExpression	( int ) ( ( size_t ) to - ( size_t ) from )		1081183	0					
ANR	1081197	CastTarget	int		1081183	0					
ANR	1081198	AdditiveExpression	( size_t ) to - ( size_t ) from		1081183	1		-			
ANR	1081199	CastExpression	( size_t ) to		1081183	0					
ANR	1081200	CastTarget	size_t		1081183	0					
ANR	1081201	Identifier	to		1081183	1					
ANR	1081202	CastExpression	( size_t ) from		1081183	1					
ANR	1081203	CastTarget	size_t		1081183	0					
ANR	1081204	Identifier	from		1081183	1					
ANR	1081205	ReturnType	static void		1081183	1					
ANR	1081206	Identifier	ppc_cache_flush		1081183	2					
ANR	1081207	ParameterList	"sljit_ins * from , sljit_ins * to"		1081183	3					
ANR	1081208	Parameter	sljit_ins * from	49:28:2018:2032	1081183	0	True				
ANR	1081209	ParameterType	sljit_ins *		1081183	0					
ANR	1081210	Identifier	from		1081183	1					
ANR	1081211	Parameter	sljit_ins * to	49:45:2035:2047	1081183	1	True				
ANR	1081212	ParameterType	sljit_ins *		1081183	0					
ANR	1081213	Identifier	to		1081183	1					
ANR	1081214	CFGEntryNode	ENTRY		1081183		True				
ANR	1081215	CFGExitNode	EXIT		1081183		True				
ANR	1081216	Symbol	from		1081183						
ANR	1081217	Symbol	to		1081183						
ANR	1081218	DeclStmt									
ANR	1081219	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 7 ]	reg_map
ANR	1081220	Function	sljit_set_function_context	227:0:7504:7823							
ANR	1081221	FunctionDef	"sljit_set_function_context (void * * func_ptr , struct sljit_function_context * context , sljit_sw addr , void * func)"		1081220	0					
ANR	1081222	CompoundStatement		228:0:7645:7823	1081220	0					
ANR	1081223	IdentifierDeclStatement	sljit_sw * ptrs ;	229:1:7648:7662	1081220	0	True				
ANR	1081224	IdentifierDecl	* ptrs		1081220	0					
ANR	1081225	IdentifierDeclType	sljit_sw *		1081220	0					
ANR	1081226	Identifier	ptrs		1081220	1					
ANR	1081227	IfStatement	if ( func_ptr )		1081220	1					
ANR	1081228	Condition	func_ptr	230:5:7669:7676	1081220	0	True				
ANR	1081229	Identifier	func_ptr		1081220	0					
ANR	1081230	ExpressionStatement	* func_ptr = ( void * ) context	231:2:7681:7707	1081220	1	True				
ANR	1081231	AssignmentExpression	* func_ptr = ( void * ) context		1081220	0		=			
ANR	1081232	UnaryOperationExpression	* func_ptr		1081220	0					
ANR	1081233	UnaryOperator	*		1081220	0					
ANR	1081234	Identifier	func_ptr		1081220	1					
ANR	1081235	CastExpression	( void * ) context		1081220	1					
ANR	1081236	CastTarget	void *		1081220	0					
ANR	1081237	Identifier	context		1081220	1					
ANR	1081238	ExpressionStatement	ptrs = ( sljit_sw * ) func	232:1:7710:7732	1081220	2	True				
ANR	1081239	AssignmentExpression	ptrs = ( sljit_sw * ) func		1081220	0		=			
ANR	1081240	Identifier	ptrs		1081220	0					
ANR	1081241	CastExpression	( sljit_sw * ) func		1081220	1					
ANR	1081242	CastTarget	sljit_sw *		1081220	0					
ANR	1081243	Identifier	func		1081220	1					
ANR	1081244	ExpressionStatement	context -> addr = addr ? addr : ptrs [ 0 ]	233:1:7735:7772	1081220	3	True				
ANR	1081245	AssignmentExpression	context -> addr = addr ? addr : ptrs [ 0 ]		1081220	0		=			
ANR	1081246	PtrMemberAccess	context -> addr		1081220	0					
ANR	1081247	Identifier	context		1081220	0					
ANR	1081248	Identifier	addr		1081220	1					
ANR	1081249	ConditionalExpression	addr ? addr : ptrs [ 0 ]		1081220	1					
ANR	1081250	Condition	addr		1081220	0					
ANR	1081251	Identifier	addr		1081220	0					
ANR	1081252	Identifier	addr		1081220	1					
ANR	1081253	ArrayIndexing	ptrs [ 0 ]		1081220	2					
ANR	1081254	Identifier	ptrs		1081220	0					
ANR	1081255	PrimaryExpression	0		1081220	1					
ANR	1081256	ExpressionStatement	context -> r2 = ptrs [ 1 ]	234:1:7775:7796	1081220	4	True				
ANR	1081257	AssignmentExpression	context -> r2 = ptrs [ 1 ]		1081220	0		=			
ANR	1081258	PtrMemberAccess	context -> r2		1081220	0					
ANR	1081259	Identifier	context		1081220	0					
ANR	1081260	Identifier	r2		1081220	1					
ANR	1081261	ArrayIndexing	ptrs [ 1 ]		1081220	1					
ANR	1081262	Identifier	ptrs		1081220	0					
ANR	1081263	PrimaryExpression	1		1081220	1					
ANR	1081264	ExpressionStatement	context -> r11 = ptrs [ 2 ]	235:1:7799:7821	1081220	5	True				
ANR	1081265	AssignmentExpression	context -> r11 = ptrs [ 2 ]		1081220	0		=			
ANR	1081266	PtrMemberAccess	context -> r11		1081220	0					
ANR	1081267	Identifier	context		1081220	0					
ANR	1081268	Identifier	r11		1081220	1					
ANR	1081269	ArrayIndexing	ptrs [ 2 ]		1081220	1					
ANR	1081270	Identifier	ptrs		1081220	0					
ANR	1081271	PrimaryExpression	2		1081220	1					
ANR	1081272	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1081220	1					
ANR	1081273	Identifier	sljit_set_function_context		1081220	2					
ANR	1081274	ParameterList	"void * * func_ptr , struct sljit_function_context * context , sljit_sw addr , void * func"		1081220	3					
ANR	1081275	Parameter	void * * func_ptr	227:57:7561:7575	1081220	0	True				
ANR	1081276	ParameterType	void * *		1081220	0					
ANR	1081277	Identifier	func_ptr		1081220	1					
ANR	1081278	Parameter	struct sljit_function_context * context	227:74:7578:7615	1081220	1	True				
ANR	1081279	ParameterType	struct sljit_function_context *		1081220	0					
ANR	1081280	Identifier	context		1081220	1					
ANR	1081281	Parameter	sljit_sw addr	227:114:7618:7630	1081220	2	True				
ANR	1081282	ParameterType	sljit_sw		1081220	0					
ANR	1081283	Identifier	addr		1081220	1					
ANR	1081284	Parameter	void * func	227:129:7633:7642	1081220	3	True				
ANR	1081285	ParameterType	void *		1081220	0					
ANR	1081286	Identifier	func		1081220	1					
ANR	1081287	CFGEntryNode	ENTRY		1081220		True				
ANR	1081288	CFGExitNode	EXIT		1081220		True				
ANR	1081289	Symbol	ptrs		1081220						
ANR	1081290	Symbol	context -> r2		1081220						
ANR	1081291	Symbol	func		1081220						
ANR	1081292	Symbol	func_ptr		1081220						
ANR	1081293	Symbol	context		1081220						
ANR	1081294	Symbol	* ptrs		1081220						
ANR	1081295	Symbol	context -> r11		1081220						
ANR	1081296	Symbol	* func_ptr		1081220						
ANR	1081297	Symbol	context -> addr		1081220						
ANR	1081298	Symbol	addr		1081220						
ANR	1081299	Symbol	* context		1081220						
ANR	1081300	Function	push_inst	239:0:7833:8051							
ANR	1081301	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins)"		1081300	0					
ANR	1081302	CompoundStatement		240:0:7907:8051	1081300	0					
ANR	1081303	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	241:1:7910:7978	1081300	0	True				
ANR	1081304	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1081300	0					
ANR	1081305	IdentifierDeclType	sljit_ins *		1081300	0					
ANR	1081306	Identifier	ptr		1081300	1					
ANR	1081307	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1081300	2		=			
ANR	1081308	Identifier	ptr		1081300	0					
ANR	1081309	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1081300	1					
ANR	1081310	CastTarget	sljit_ins *		1081300	0					
ANR	1081311	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1081300	1					
ANR	1081312	Callee	ensure_buf		1081300	0					
ANR	1081313	Identifier	ensure_buf		1081300	0					
ANR	1081314	ArgumentList	compiler		1081300	1					
ANR	1081315	Argument	compiler		1081300	0					
ANR	1081316	Identifier	compiler		1081300	0					
ANR	1081317	Argument	sizeof ( sljit_ins )		1081300	1					
ANR	1081318	SizeofExpression	sizeof ( sljit_ins )		1081300	0					
ANR	1081319	Sizeof	sizeof		1081300	0					
ANR	1081320	SizeofOperand	sljit_ins		1081300	1					
ANR	1081321	ExpressionStatement	FAIL_IF ( ! ptr )	242:1:7981:7994	1081300	1	True				
ANR	1081322	CallExpression	FAIL_IF ( ! ptr )		1081300	0					
ANR	1081323	Callee	FAIL_IF		1081300	0					
ANR	1081324	Identifier	FAIL_IF		1081300	0					
ANR	1081325	ArgumentList	! ptr		1081300	1					
ANR	1081326	Argument	! ptr		1081300	0					
ANR	1081327	UnaryOperationExpression	! ptr		1081300	0					
ANR	1081328	UnaryOperator	!		1081300	0					
ANR	1081329	Identifier	ptr		1081300	1					
ANR	1081330	ExpressionStatement	* ptr = ins	243:1:7997:8007	1081300	2	True				
ANR	1081331	AssignmentExpression	* ptr = ins		1081300	0		=			
ANR	1081332	UnaryOperationExpression	* ptr		1081300	0					
ANR	1081333	UnaryOperator	*		1081300	0					
ANR	1081334	Identifier	ptr		1081300	1					
ANR	1081335	Identifier	ins		1081300	1					
ANR	1081336	ExpressionStatement	compiler -> size ++	244:1:8010:8026	1081300	3	True				
ANR	1081337	PostIncDecOperationExpression	compiler -> size ++		1081300	0					
ANR	1081338	PtrMemberAccess	compiler -> size		1081300	0					
ANR	1081339	Identifier	compiler		1081300	0					
ANR	1081340	Identifier	size		1081300	1					
ANR	1081341	IncDec	++		1081300	1					
ANR	1081342	ReturnStatement	return SLJIT_SUCCESS ;	245:1:8029:8049	1081300	4	True				
ANR	1081343	Identifier	SLJIT_SUCCESS		1081300	0					
ANR	1081344	ReturnType	static sljit_si		1081300	1					
ANR	1081345	Identifier	push_inst		1081300	2					
ANR	1081346	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1081300	3					
ANR	1081347	Parameter	struct sljit_compiler * compiler	239:26:7859:7889	1081300	0	True				
ANR	1081348	ParameterType	struct sljit_compiler *		1081300	0					
ANR	1081349	Identifier	compiler		1081300	1					
ANR	1081350	Parameter	sljit_ins ins	239:59:7892:7904	1081300	1	True				
ANR	1081351	ParameterType	sljit_ins		1081300	0					
ANR	1081352	Identifier	ins		1081300	1					
ANR	1081353	CFGEntryNode	ENTRY		1081300		True				
ANR	1081354	CFGExitNode	EXIT		1081300		True				
ANR	1081355	Symbol	compiler -> size		1081300						
ANR	1081356	Symbol	ensure_buf		1081300						
ANR	1081357	Symbol	* ptr		1081300						
ANR	1081358	Symbol	SLJIT_SUCCESS		1081300						
ANR	1081359	Symbol	* compiler		1081300						
ANR	1081360	Symbol	compiler		1081300						
ANR	1081361	Symbol	ins		1081300						
ANR	1081362	Symbol	ptr		1081300						
ANR	1081363	Function	detect_jump_type	248:0:8054:9780							
ANR	1081364	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1081363	0					
ANR	1081365	CompoundStatement		249:0:8163:9780	1081363	0					
ANR	1081366	IdentifierDeclStatement	sljit_sw diff ;	250:1:8166:8179	1081363	0	True				
ANR	1081367	IdentifierDecl	diff		1081363	0					
ANR	1081368	IdentifierDeclType	sljit_sw		1081363	0					
ANR	1081369	Identifier	diff		1081363	1					
ANR	1081370	IdentifierDeclStatement	sljit_uw target_addr ;	251:1:8182:8202	1081363	1	True				
ANR	1081371	IdentifierDecl	target_addr		1081363	0					
ANR	1081372	IdentifierDeclType	sljit_uw		1081363	0					
ANR	1081373	Identifier	target_addr		1081363	1					
ANR	1081374	IdentifierDeclStatement	sljit_sw extra_jump_flags ;	252:1:8205:8230	1081363	2	True				
ANR	1081375	IdentifierDecl	extra_jump_flags		1081363	0					
ANR	1081376	IdentifierDeclType	sljit_sw		1081363	0					
ANR	1081377	Identifier	extra_jump_flags		1081363	1					
ANR	1081378	IfStatement	if ( jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL ) )		1081363	3					
ANR	1081379	Condition	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )	255:5:8371:8417	1081363	0	True				
ANR	1081380	BitAndExpression	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )		1081363	0		&			
ANR	1081381	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081382	Identifier	jump		1081363	0					
ANR	1081383	Identifier	flags		1081363	1					
ANR	1081384	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | IS_CALL		1081363	1		|			
ANR	1081385	Identifier	SLJIT_REWRITABLE_JUMP		1081363	0					
ANR	1081386	Identifier	IS_CALL		1081363	1					
ANR	1081387	ReturnStatement	return 0 ;	256:2:8422:8430	1081363	1	True				
ANR	1081388	PrimaryExpression	0		1081363	0					
ANR	1081389	IfStatement	if ( jump -> flags & JUMP_ADDR )		1081363	4					
ANR	1081390	Condition	jump -> flags & JUMP_ADDR	262:5:8505:8527	1081363	0	True				
ANR	1081391	BitAndExpression	jump -> flags & JUMP_ADDR		1081363	0		&			
ANR	1081392	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081393	Identifier	jump		1081363	0					
ANR	1081394	Identifier	flags		1081363	1					
ANR	1081395	Identifier	JUMP_ADDR		1081363	1					
ANR	1081396	ExpressionStatement	target_addr = jump -> u . target	263:2:8532:8560	1081363	1	True				
ANR	1081397	AssignmentExpression	target_addr = jump -> u . target		1081363	0		=			
ANR	1081398	Identifier	target_addr		1081363	0					
ANR	1081399	MemberAccess	jump -> u . target		1081363	1					
ANR	1081400	PtrMemberAccess	jump -> u		1081363	0					
ANR	1081401	Identifier	jump		1081363	0					
ANR	1081402	Identifier	u		1081363	1					
ANR	1081403	Identifier	target		1081363	1					
ANR	1081404	ElseStatement	else		1081363	0					
ANR	1081405	CompoundStatement		16:6:404:404	1081363	0					
ANR	1081406	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	265:2:8572:8610	1081363	0	True				
ANR	1081407	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1081363	0					
ANR	1081408	Callee	SLJIT_ASSERT		1081363	0					
ANR	1081409	Identifier	SLJIT_ASSERT		1081363	0					
ANR	1081410	ArgumentList	jump -> flags & JUMP_LABEL		1081363	1					
ANR	1081411	Argument	jump -> flags & JUMP_LABEL		1081363	0					
ANR	1081412	BitAndExpression	jump -> flags & JUMP_LABEL		1081363	0		&			
ANR	1081413	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081414	Identifier	jump		1081363	0					
ANR	1081415	Identifier	flags		1081363	1					
ANR	1081416	Identifier	JUMP_LABEL		1081363	1					
ANR	1081417	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	266:2:8614:8666	1081363	1	True				
ANR	1081418	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1081363	0		=			
ANR	1081419	Identifier	target_addr		1081363	0					
ANR	1081420	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1081363	1					
ANR	1081421	CastTarget	sljit_uw		1081363	0					
ANR	1081422	AdditiveExpression	code + jump -> u . label -> size		1081363	1		+			
ANR	1081423	Identifier	code		1081363	0					
ANR	1081424	PtrMemberAccess	jump -> u . label -> size		1081363	1					
ANR	1081425	MemberAccess	jump -> u . label		1081363	0					
ANR	1081426	PtrMemberAccess	jump -> u		1081363	0					
ANR	1081427	Identifier	jump		1081363	0					
ANR	1081428	Identifier	u		1081363	1					
ANR	1081429	Identifier	label		1081363	1					
ANR	1081430	Identifier	size		1081363	1					
ANR	1081431	IfStatement	if ( jump -> flags & IS_CALL )		1081363	5					
ANR	1081432	Condition	jump -> flags & IS_CALL	270:5:8810:8830	1081363	0	True				
ANR	1081433	BitAndExpression	jump -> flags & IS_CALL		1081363	0		&			
ANR	1081434	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081435	Identifier	jump		1081363	0					
ANR	1081436	Identifier	flags		1081363	1					
ANR	1081437	Identifier	IS_CALL		1081363	1					
ANR	1081438	GotoStatement	goto keep_address ;	271:2:8835:8852	1081363	1	True				
ANR	1081439	Identifier	keep_address		1081363	0					
ANR	1081440	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l	274:1:8863:8924	1081363	6	True				
ANR	1081441	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l		1081363	0		=			
ANR	1081442	Identifier	diff		1081363	0					
ANR	1081443	BitAndExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l		1081363	1		&			
ANR	1081444	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr )		1081363	0		-			
ANR	1081445	CastExpression	( sljit_sw ) target_addr		1081363	0					
ANR	1081446	CastTarget	sljit_sw		1081363	0					
ANR	1081447	Identifier	target_addr		1081363	1					
ANR	1081448	CastExpression	( sljit_sw ) ( code_ptr )		1081363	1					
ANR	1081449	CastTarget	sljit_sw		1081363	0					
ANR	1081450	Identifier	code_ptr		1081363	1					
ANR	1081451	Identifier	~0x3l		1081363	1					
ANR	1081452	ExpressionStatement	extra_jump_flags = 0	276:1:8928:8948	1081363	7	True				
ANR	1081453	AssignmentExpression	extra_jump_flags = 0		1081363	0		=			
ANR	1081454	Identifier	extra_jump_flags		1081363	0					
ANR	1081455	PrimaryExpression	0		1081363	1					
ANR	1081456	IfStatement	if ( jump -> flags & IS_COND )		1081363	8					
ANR	1081457	Condition	jump -> flags & IS_COND	277:5:8955:8975	1081363	0	True				
ANR	1081458	BitAndExpression	jump -> flags & IS_COND		1081363	0		&			
ANR	1081459	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081460	Identifier	jump		1081363	0					
ANR	1081461	Identifier	flags		1081363	1					
ANR	1081462	Identifier	IS_COND		1081363	1					
ANR	1081463	CompoundStatement		29:28:814:814	1081363	1					
ANR	1081464	IfStatement	if ( diff <= 0x7fff && diff >= - 0x8000 )		1081363	0					
ANR	1081465	Condition	diff <= 0x7fff && diff >= - 0x8000	278:6:8986:9018	1081363	0	True				
ANR	1081466	AndExpression	diff <= 0x7fff && diff >= - 0x8000		1081363	0		&&			
ANR	1081467	RelationalExpression	diff <= 0x7fff		1081363	0		<=			
ANR	1081468	Identifier	diff		1081363	0					
ANR	1081469	PrimaryExpression	0x7fff		1081363	1					
ANR	1081470	RelationalExpression	diff >= - 0x8000		1081363	1		>=			
ANR	1081471	Identifier	diff		1081363	0					
ANR	1081472	UnaryOperationExpression	- 0x8000		1081363	1					
ANR	1081473	UnaryOperator	-		1081363	0					
ANR	1081474	PrimaryExpression	0x8000		1081363	1					
ANR	1081475	CompoundStatement		30:41:857:857	1081363	1					
ANR	1081476	ExpressionStatement	jump -> flags |= PATCH_B	279:3:9026:9048	1081363	0	True				
ANR	1081477	AssignmentExpression	jump -> flags |= PATCH_B		1081363	0		|=			
ANR	1081478	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081479	Identifier	jump		1081363	0					
ANR	1081480	Identifier	flags		1081363	1					
ANR	1081481	Identifier	PATCH_B		1081363	1					
ANR	1081482	ReturnStatement	return 1 ;	280:3:9053:9061	1081363	1	True				
ANR	1081483	PrimaryExpression	1		1081363	0					
ANR	1081484	IfStatement	if ( target_addr <= 0xffff )		1081363	1					
ANR	1081485	Condition	target_addr <= 0xffff	282:6:9073:9093	1081363	0	True				
ANR	1081486	RelationalExpression	target_addr <= 0xffff		1081363	0		<=			
ANR	1081487	Identifier	target_addr		1081363	0					
ANR	1081488	PrimaryExpression	0xffff		1081363	1					
ANR	1081489	CompoundStatement		34:29:932:932	1081363	1					
ANR	1081490	ExpressionStatement	jump -> flags |= PATCH_B | PATCH_ABS_B	283:3:9101:9137	1081363	0	True				
ANR	1081491	AssignmentExpression	jump -> flags |= PATCH_B | PATCH_ABS_B		1081363	0		|=			
ANR	1081492	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081493	Identifier	jump		1081363	0					
ANR	1081494	Identifier	flags		1081363	1					
ANR	1081495	InclusiveOrExpression	PATCH_B | PATCH_ABS_B		1081363	1		|			
ANR	1081496	Identifier	PATCH_B		1081363	0					
ANR	1081497	Identifier	PATCH_ABS_B		1081363	1					
ANR	1081498	ReturnStatement	return 1 ;	284:3:9142:9150	1081363	1	True				
ANR	1081499	PrimaryExpression	1		1081363	0					
ANR	1081500	ExpressionStatement	extra_jump_flags = REMOVE_COND	286:2:9158:9188	1081363	2	True				
ANR	1081501	AssignmentExpression	extra_jump_flags = REMOVE_COND		1081363	0		=			
ANR	1081502	Identifier	extra_jump_flags		1081363	0					
ANR	1081503	Identifier	REMOVE_COND		1081363	1					
ANR	1081504	ExpressionStatement	diff -= sizeof ( sljit_ins )	288:2:9193:9218	1081363	3	True				
ANR	1081505	AssignmentExpression	diff -= sizeof ( sljit_ins )		1081363	0		-=			
ANR	1081506	Identifier	diff		1081363	0					
ANR	1081507	SizeofExpression	sizeof ( sljit_ins )		1081363	1					
ANR	1081508	Sizeof	sizeof		1081363	0					
ANR	1081509	SizeofOperand	sljit_ins		1081363	1					
ANR	1081510	IfStatement	if ( diff <= 0x01ffffff && diff >= - 0x02000000 )		1081363	9					
ANR	1081511	Condition	diff <= 0x01ffffff && diff >= - 0x02000000	291:5:9229:9269	1081363	0	True				
ANR	1081512	AndExpression	diff <= 0x01ffffff && diff >= - 0x02000000		1081363	0		&&			
ANR	1081513	RelationalExpression	diff <= 0x01ffffff		1081363	0		<=			
ANR	1081514	Identifier	diff		1081363	0					
ANR	1081515	PrimaryExpression	0x01ffffff		1081363	1					
ANR	1081516	RelationalExpression	diff >= - 0x02000000		1081363	1		>=			
ANR	1081517	Identifier	diff		1081363	0					
ANR	1081518	UnaryOperationExpression	- 0x02000000		1081363	1					
ANR	1081519	UnaryOperator	-		1081363	0					
ANR	1081520	PrimaryExpression	0x02000000		1081363	1					
ANR	1081521	CompoundStatement		43:48:1108:1108	1081363	1					
ANR	1081522	ExpressionStatement	jump -> flags |= PATCH_B | extra_jump_flags	292:2:9276:9317	1081363	0	True				
ANR	1081523	AssignmentExpression	jump -> flags |= PATCH_B | extra_jump_flags		1081363	0		|=			
ANR	1081524	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081525	Identifier	jump		1081363	0					
ANR	1081526	Identifier	flags		1081363	1					
ANR	1081527	InclusiveOrExpression	PATCH_B | extra_jump_flags		1081363	1		|			
ANR	1081528	Identifier	PATCH_B		1081363	0					
ANR	1081529	Identifier	extra_jump_flags		1081363	1					
ANR	1081530	ReturnStatement	return 1 ;	293:2:9321:9329	1081363	1	True				
ANR	1081531	PrimaryExpression	1		1081363	0					
ANR	1081532	IfStatement	if ( target_addr <= 0x03ffffff )		1081363	10					
ANR	1081533	Condition	target_addr <= 0x03ffffff	295:5:9339:9363	1081363	0	True				
ANR	1081534	RelationalExpression	target_addr <= 0x03ffffff		1081363	0		<=			
ANR	1081535	Identifier	target_addr		1081363	0					
ANR	1081536	PrimaryExpression	0x03ffffff		1081363	1					
ANR	1081537	CompoundStatement		47:32:1202:1202	1081363	1					
ANR	1081538	ExpressionStatement	jump -> flags |= PATCH_B | PATCH_ABS_B | extra_jump_flags	296:2:9370:9425	1081363	0	True				
ANR	1081539	AssignmentExpression	jump -> flags |= PATCH_B | PATCH_ABS_B | extra_jump_flags		1081363	0		|=			
ANR	1081540	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081541	Identifier	jump		1081363	0					
ANR	1081542	Identifier	flags		1081363	1					
ANR	1081543	InclusiveOrExpression	PATCH_B | PATCH_ABS_B | extra_jump_flags		1081363	1		|			
ANR	1081544	Identifier	PATCH_B		1081363	0					
ANR	1081545	InclusiveOrExpression	PATCH_ABS_B | extra_jump_flags		1081363	1		|			
ANR	1081546	Identifier	PATCH_ABS_B		1081363	0					
ANR	1081547	Identifier	extra_jump_flags		1081363	1					
ANR	1081548	ReturnStatement	return 1 ;	297:2:9429:9437	1081363	1	True				
ANR	1081549	PrimaryExpression	1		1081363	0					
ANR	1081550	Label	keep_address :	302:0:9577:9589	1081363	11	True				
ANR	1081551	Identifier	keep_address		1081363	0					
ANR	1081552	IfStatement	if ( target_addr <= 0x7fffffff )		1081363	12					
ANR	1081553	Condition	target_addr <= 0x7fffffff	304:5:9603:9627	1081363	0	True				
ANR	1081554	RelationalExpression	target_addr <= 0x7fffffff		1081363	0		<=			
ANR	1081555	Identifier	target_addr		1081363	0					
ANR	1081556	PrimaryExpression	0x7fffffff		1081363	1					
ANR	1081557	CompoundStatement		56:32:1466:1466	1081363	1					
ANR	1081558	ExpressionStatement	jump -> flags |= PATCH_ABS32	305:2:9634:9660	1081363	0	True				
ANR	1081559	AssignmentExpression	jump -> flags |= PATCH_ABS32		1081363	0		|=			
ANR	1081560	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081561	Identifier	jump		1081363	0					
ANR	1081562	Identifier	flags		1081363	1					
ANR	1081563	Identifier	PATCH_ABS32		1081363	1					
ANR	1081564	ReturnStatement	return 1 ;	306:2:9664:9672	1081363	1	True				
ANR	1081565	PrimaryExpression	1		1081363	0					
ANR	1081566	IfStatement	if ( target_addr <= 0x7fffffffffffl )		1081363	13					
ANR	1081567	Condition	target_addr <= 0x7fffffffffffl	308:5:9682:9711	1081363	0	True				
ANR	1081568	RelationalExpression	target_addr <= 0x7fffffffffffl		1081363	0		<=			
ANR	1081569	Identifier	target_addr		1081363	0					
ANR	1081570	PrimaryExpression	0x7fffffffffffl		1081363	1					
ANR	1081571	CompoundStatement		60:37:1550:1550	1081363	1					
ANR	1081572	ExpressionStatement	jump -> flags |= PATCH_ABS48	309:2:9718:9744	1081363	0	True				
ANR	1081573	AssignmentExpression	jump -> flags |= PATCH_ABS48		1081363	0		|=			
ANR	1081574	PtrMemberAccess	jump -> flags		1081363	0					
ANR	1081575	Identifier	jump		1081363	0					
ANR	1081576	Identifier	flags		1081363	1					
ANR	1081577	Identifier	PATCH_ABS48		1081363	1					
ANR	1081578	ReturnStatement	return 1 ;	310:2:9748:9756	1081363	1	True				
ANR	1081579	PrimaryExpression	1		1081363	0					
ANR	1081580	ReturnStatement	return 0 ;	314:1:9770:9778	1081363	14	True				
ANR	1081581	PrimaryExpression	0		1081363	0					
ANR	1081582	ReturnType	static SLJIT_INLINE sljit_si		1081363	1					
ANR	1081583	Identifier	detect_jump_type		1081363	2					
ANR	1081584	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1081363	3					
ANR	1081585	Parameter	struct sljit_jump * jump	248:46:8100:8122	1081363	0	True				
ANR	1081586	ParameterType	struct sljit_jump *		1081363	0					
ANR	1081587	Identifier	jump		1081363	1					
ANR	1081588	Parameter	sljit_ins * code_ptr	248:71:8125:8143	1081363	1	True				
ANR	1081589	ParameterType	sljit_ins *		1081363	0					
ANR	1081590	Identifier	code_ptr		1081363	1					
ANR	1081591	Parameter	sljit_ins * code	248:92:8146:8160	1081363	2	True				
ANR	1081592	ParameterType	sljit_ins *		1081363	0					
ANR	1081593	Identifier	code		1081363	1					
ANR	1081594	CFGEntryNode	ENTRY		1081363		True				
ANR	1081595	CFGExitNode	EXIT		1081363		True				
ANR	1081596	Symbol	jump -> u . label -> size		1081363						
ANR	1081597	Symbol	code		1081363						
ANR	1081598	Symbol	* * jump		1081363						
ANR	1081599	Symbol	* jump		1081363						
ANR	1081600	Symbol	jump -> u		1081363						
ANR	1081601	Symbol	jump -> flags		1081363						
ANR	1081602	Symbol	JUMP_LABEL		1081363						
ANR	1081603	Symbol	JUMP_ADDR		1081363						
ANR	1081604	Symbol	PATCH_ABS32		1081363						
ANR	1081605	Symbol	code_ptr		1081363						
ANR	1081606	Symbol	~0x3l		1081363						
ANR	1081607	Symbol	SLJIT_REWRITABLE_JUMP		1081363						
ANR	1081608	Symbol	jump		1081363						
ANR	1081609	Symbol	extra_jump_flags		1081363						
ANR	1081610	Symbol	target_addr		1081363						
ANR	1081611	Symbol	diff		1081363						
ANR	1081612	Symbol	PATCH_ABS48		1081363						
ANR	1081613	Symbol	PATCH_ABS_B		1081363						
ANR	1081614	Symbol	IS_CALL		1081363						
ANR	1081615	Symbol	* jump -> u . label		1081363						
ANR	1081616	Symbol	REMOVE_COND		1081363						
ANR	1081617	Symbol	* jump -> u		1081363						
ANR	1081618	Symbol	IS_COND		1081363						
ANR	1081619	Symbol	jump -> u . target		1081363						
ANR	1081620	Symbol	PATCH_B		1081363						
ANR	1081621	Symbol	jump -> u . label		1081363						
ANR	1081622	Function	sljit_generate_code	317:0:9783:15819							
ANR	1081623	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1081622	0					
ANR	1081624	CompoundStatement		318:0:9867:15819	1081622	0					
ANR	1081625	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	319:1:9870:9903	1081622	0	True				
ANR	1081626	IdentifierDecl	* buf		1081622	0					
ANR	1081627	IdentifierDeclType	struct sljit_memory_fragment *		1081622	0					
ANR	1081628	Identifier	buf		1081622	1					
ANR	1081629	IdentifierDeclStatement	sljit_ins * code ;	320:1:9906:9921	1081622	1	True				
ANR	1081630	IdentifierDecl	* code		1081622	0					
ANR	1081631	IdentifierDeclType	sljit_ins *		1081622	0					
ANR	1081632	Identifier	code		1081622	1					
ANR	1081633	IdentifierDeclStatement	sljit_ins * code_ptr ;	321:1:9924:9943	1081622	2	True				
ANR	1081634	IdentifierDecl	* code_ptr		1081622	0					
ANR	1081635	IdentifierDeclType	sljit_ins *		1081622	0					
ANR	1081636	Identifier	code_ptr		1081622	1					
ANR	1081637	IdentifierDeclStatement	sljit_ins * buf_ptr ;	322:1:9946:9964	1081622	3	True				
ANR	1081638	IdentifierDecl	* buf_ptr		1081622	0					
ANR	1081639	IdentifierDeclType	sljit_ins *		1081622	0					
ANR	1081640	Identifier	buf_ptr		1081622	1					
ANR	1081641	IdentifierDeclStatement	sljit_ins * buf_end ;	323:1:9967:9985	1081622	4	True				
ANR	1081642	IdentifierDecl	* buf_end		1081622	0					
ANR	1081643	IdentifierDeclType	sljit_ins *		1081622	0					
ANR	1081644	Identifier	buf_end		1081622	1					
ANR	1081645	IdentifierDeclStatement	sljit_uw word_count ;	324:1:9988:10007	1081622	5	True				
ANR	1081646	IdentifierDecl	word_count		1081622	0					
ANR	1081647	IdentifierDeclType	sljit_uw		1081622	0					
ANR	1081648	Identifier	word_count		1081622	1					
ANR	1081649	IdentifierDeclStatement	sljit_uw addr ;	325:1:10010:10023	1081622	6	True				
ANR	1081650	IdentifierDecl	addr		1081622	0					
ANR	1081651	IdentifierDeclType	sljit_uw		1081622	0					
ANR	1081652	Identifier	addr		1081622	1					
ANR	1081653	IdentifierDeclStatement	struct sljit_label * label ;	327:1:10027:10052	1081622	7	True				
ANR	1081654	IdentifierDecl	* label		1081622	0					
ANR	1081655	IdentifierDeclType	struct sljit_label *		1081622	0					
ANR	1081656	Identifier	label		1081622	1					
ANR	1081657	IdentifierDeclStatement	struct sljit_jump * jump ;	328:1:10055:10078	1081622	8	True				
ANR	1081658	IdentifierDecl	* jump		1081622	0					
ANR	1081659	IdentifierDeclType	struct sljit_jump *		1081622	0					
ANR	1081660	Identifier	jump		1081622	1					
ANR	1081661	IdentifierDeclStatement	struct sljit_const * const_ ;	329:1:10081:10107	1081622	9	True				
ANR	1081662	IdentifierDecl	* const_		1081622	0					
ANR	1081663	IdentifierDeclType	struct sljit_const *		1081622	0					
ANR	1081664	Identifier	const_		1081622	1					
ANR	1081665	ExpressionStatement	CHECK_ERROR_PTR ( )	331:1:10111:10128	1081622	10	True				
ANR	1081666	CallExpression	CHECK_ERROR_PTR ( )		1081622	0					
ANR	1081667	Callee	CHECK_ERROR_PTR		1081622	0					
ANR	1081668	Identifier	CHECK_ERROR_PTR		1081622	0					
ANR	1081669	ArgumentList			1081622	1					
ANR	1081670	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	332:1:10131:10177	1081622	11	True				
ANR	1081671	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1081622	0					
ANR	1081672	Callee	CHECK_PTR		1081622	0					
ANR	1081673	Identifier	CHECK_PTR		1081622	0					
ANR	1081674	ArgumentList	check_sljit_generate_code ( compiler )		1081622	1					
ANR	1081675	Argument	check_sljit_generate_code ( compiler )		1081622	0					
ANR	1081676	CallExpression	check_sljit_generate_code ( compiler )		1081622	0					
ANR	1081677	Callee	check_sljit_generate_code		1081622	0					
ANR	1081678	Identifier	check_sljit_generate_code		1081622	0					
ANR	1081679	ArgumentList	compiler		1081622	1					
ANR	1081680	Argument	compiler		1081622	0					
ANR	1081681	Identifier	compiler		1081622	0					
ANR	1081682	ExpressionStatement	reverse_buf ( compiler )	333:1:10180:10201	1081622	12	True				
ANR	1081683	CallExpression	reverse_buf ( compiler )		1081622	0					
ANR	1081684	Callee	reverse_buf		1081622	0					
ANR	1081685	Identifier	reverse_buf		1081622	0					
ANR	1081686	ArgumentList	compiler		1081622	1					
ANR	1081687	Argument	compiler		1081622	0					
ANR	1081688	Identifier	compiler		1081622	0					
ANR	1081689	ExpressionStatement	compiler -> size += ( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )	337:1:10319:10421	1081622	13	True				
ANR	1081690	AssignmentExpression	compiler -> size += ( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	0		+=			
ANR	1081691	PtrMemberAccess	compiler -> size		1081622	0					
ANR	1081692	Identifier	compiler		1081622	0					
ANR	1081693	Identifier	size		1081622	1					
ANR	1081694	AdditiveExpression	( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	1		+			
ANR	1081695	BitAndExpression	compiler -> size & 0x1		1081622	0		&			
ANR	1081696	PtrMemberAccess	compiler -> size		1081622	0					
ANR	1081697	Identifier	compiler		1081622	0					
ANR	1081698	Identifier	size		1081622	1					
ANR	1081699	PrimaryExpression	0x1		1081622	1					
ANR	1081700	MultiplicativeExpression	sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins )		1081622	1		/			
ANR	1081701	SizeofExpression	sizeof ( struct sljit_function_context )		1081622	0					
ANR	1081702	Sizeof	sizeof		1081622	0					
ANR	1081703	SizeofOperand	struct sljit_function_context		1081622	1					
ANR	1081704	SizeofExpression	sizeof ( sljit_ins )		1081622	1					
ANR	1081705	Sizeof	sizeof		1081622	0					
ANR	1081706	SizeofOperand	sljit_ins		1081622	1					
ANR	1081707	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	342:1:10524:10596	1081622	14	True				
ANR	1081708	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1081622	0		=			
ANR	1081709	Identifier	code		1081622	0					
ANR	1081710	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1081622	1					
ANR	1081711	CastTarget	sljit_ins *		1081622	0					
ANR	1081712	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1081622	1					
ANR	1081713	Callee	SLJIT_MALLOC_EXEC		1081622	0					
ANR	1081714	Identifier	SLJIT_MALLOC_EXEC		1081622	0					
ANR	1081715	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1081622	1					
ANR	1081716	Argument	compiler -> size * sizeof ( sljit_ins )		1081622	0					
ANR	1081717	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1081622	0		*			
ANR	1081718	PtrMemberAccess	compiler -> size		1081622	0					
ANR	1081719	Identifier	compiler		1081622	0					
ANR	1081720	Identifier	size		1081622	1					
ANR	1081721	SizeofExpression	sizeof ( sljit_ins )		1081622	1					
ANR	1081722	Sizeof	sizeof		1081622	0					
ANR	1081723	SizeofOperand	sljit_ins		1081622	1					
ANR	1081724	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	343:1:10599:10626	1081622	15	True				
ANR	1081725	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1081622	0					
ANR	1081726	Callee	PTR_FAIL_WITH_EXEC_IF		1081622	0					
ANR	1081727	Identifier	PTR_FAIL_WITH_EXEC_IF		1081622	0					
ANR	1081728	ArgumentList	code		1081622	1					
ANR	1081729	Argument	code		1081622	0					
ANR	1081730	Identifier	code		1081622	0					
ANR	1081731	ExpressionStatement	buf = compiler -> buf	344:1:10629:10648	1081622	16	True				
ANR	1081732	AssignmentExpression	buf = compiler -> buf		1081622	0		=			
ANR	1081733	Identifier	buf		1081622	0					
ANR	1081734	PtrMemberAccess	compiler -> buf		1081622	1					
ANR	1081735	Identifier	compiler		1081622	0					
ANR	1081736	Identifier	buf		1081622	1					
ANR	1081737	ExpressionStatement	code_ptr = code	346:1:10652:10667	1081622	17	True				
ANR	1081738	AssignmentExpression	code_ptr = code		1081622	0		=			
ANR	1081739	Identifier	code_ptr		1081622	0					
ANR	1081740	Identifier	code		1081622	1					
ANR	1081741	ExpressionStatement	word_count = 0	347:1:10670:10684	1081622	18	True				
ANR	1081742	AssignmentExpression	word_count = 0		1081622	0		=			
ANR	1081743	Identifier	word_count		1081622	0					
ANR	1081744	PrimaryExpression	0		1081622	1					
ANR	1081745	ExpressionStatement	label = compiler -> labels	348:1:10687:10711	1081622	19	True				
ANR	1081746	AssignmentExpression	label = compiler -> labels		1081622	0		=			
ANR	1081747	Identifier	label		1081622	0					
ANR	1081748	PtrMemberAccess	compiler -> labels		1081622	1					
ANR	1081749	Identifier	compiler		1081622	0					
ANR	1081750	Identifier	labels		1081622	1					
ANR	1081751	ExpressionStatement	jump = compiler -> jumps	349:1:10714:10736	1081622	20	True				
ANR	1081752	AssignmentExpression	jump = compiler -> jumps		1081622	0		=			
ANR	1081753	Identifier	jump		1081622	0					
ANR	1081754	PtrMemberAccess	compiler -> jumps		1081622	1					
ANR	1081755	Identifier	compiler		1081622	0					
ANR	1081756	Identifier	jumps		1081622	1					
ANR	1081757	ExpressionStatement	const_ = compiler -> consts	350:1:10739:10764	1081622	21	True				
ANR	1081758	AssignmentExpression	const_ = compiler -> consts		1081622	0		=			
ANR	1081759	Identifier	const_		1081622	0					
ANR	1081760	PtrMemberAccess	compiler -> consts		1081622	1					
ANR	1081761	Identifier	compiler		1081622	0					
ANR	1081762	Identifier	consts		1081622	1					
ANR	1081763	DoStatement	do		1081622	22					
ANR	1081764	CompoundStatement		34:4:902:902	1081622	0					
ANR	1081765	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	352:2:10774:10807	1081622	0	True				
ANR	1081766	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1081622	0		=			
ANR	1081767	Identifier	buf_ptr		1081622	0					
ANR	1081768	CastExpression	( sljit_ins * ) buf -> memory		1081622	1					
ANR	1081769	CastTarget	sljit_ins *		1081622	0					
ANR	1081770	PtrMemberAccess	buf -> memory		1081622	1					
ANR	1081771	Identifier	buf		1081622	0					
ANR	1081772	Identifier	memory		1081622	1					
ANR	1081773	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	353:2:10811:10852	1081622	1	True				
ANR	1081774	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1081622	0		=			
ANR	1081775	Identifier	buf_end		1081622	0					
ANR	1081776	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1081622	1		+			
ANR	1081777	Identifier	buf_ptr		1081622	0					
ANR	1081778	ShiftExpression	buf -> used_size >> 2		1081622	1		>>			
ANR	1081779	PtrMemberAccess	buf -> used_size		1081622	0					
ANR	1081780	Identifier	buf		1081622	0					
ANR	1081781	Identifier	used_size		1081622	1					
ANR	1081782	PrimaryExpression	2		1081622	1					
ANR	1081783	DoStatement	do		1081622	2					
ANR	1081784	CompoundStatement		37:5:991:991	1081622	0					
ANR	1081785	ExpressionStatement	* code_ptr = * buf_ptr ++	355:3:10864:10886	1081622	0	True				
ANR	1081786	AssignmentExpression	* code_ptr = * buf_ptr ++		1081622	0		=			
ANR	1081787	UnaryOperationExpression	* code_ptr		1081622	0					
ANR	1081788	UnaryOperator	*		1081622	0					
ANR	1081789	Identifier	code_ptr		1081622	1					
ANR	1081790	UnaryOperationExpression	* buf_ptr ++		1081622	1					
ANR	1081791	UnaryOperator	*		1081622	0					
ANR	1081792	PostIncDecOperationExpression	buf_ptr ++		1081622	1					
ANR	1081793	Identifier	buf_ptr		1081622	0					
ANR	1081794	IncDec	++		1081622	1					
ANR	1081795	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	356:3:10891:10940	1081622	1	True				
ANR	1081796	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1081622	0					
ANR	1081797	Callee	SLJIT_ASSERT		1081622	0					
ANR	1081798	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1081799	ArgumentList	! label || label -> size >= word_count		1081622	1					
ANR	1081800	Argument	! label || label -> size >= word_count		1081622	0					
ANR	1081801	OrExpression	! label || label -> size >= word_count		1081622	0		||			
ANR	1081802	UnaryOperationExpression	! label		1081622	0					
ANR	1081803	UnaryOperator	!		1081622	0					
ANR	1081804	Identifier	label		1081622	1					
ANR	1081805	RelationalExpression	label -> size >= word_count		1081622	1		>=			
ANR	1081806	PtrMemberAccess	label -> size		1081622	0					
ANR	1081807	Identifier	label		1081622	0					
ANR	1081808	Identifier	size		1081622	1					
ANR	1081809	Identifier	word_count		1081622	1					
ANR	1081810	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	357:3:10945:10992	1081622	2	True				
ANR	1081811	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1081622	0					
ANR	1081812	Callee	SLJIT_ASSERT		1081622	0					
ANR	1081813	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1081814	ArgumentList	! jump || jump -> addr >= word_count		1081622	1					
ANR	1081815	Argument	! jump || jump -> addr >= word_count		1081622	0					
ANR	1081816	OrExpression	! jump || jump -> addr >= word_count		1081622	0		||			
ANR	1081817	UnaryOperationExpression	! jump		1081622	0					
ANR	1081818	UnaryOperator	!		1081622	0					
ANR	1081819	Identifier	jump		1081622	1					
ANR	1081820	RelationalExpression	jump -> addr >= word_count		1081622	1		>=			
ANR	1081821	PtrMemberAccess	jump -> addr		1081622	0					
ANR	1081822	Identifier	jump		1081622	0					
ANR	1081823	Identifier	addr		1081622	1					
ANR	1081824	Identifier	word_count		1081622	1					
ANR	1081825	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	358:3:10997:11048	1081622	3	True				
ANR	1081826	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1081622	0					
ANR	1081827	Callee	SLJIT_ASSERT		1081622	0					
ANR	1081828	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1081829	ArgumentList	! const_ || const_ -> addr >= word_count		1081622	1					
ANR	1081830	Argument	! const_ || const_ -> addr >= word_count		1081622	0					
ANR	1081831	OrExpression	! const_ || const_ -> addr >= word_count		1081622	0		||			
ANR	1081832	UnaryOperationExpression	! const_		1081622	0					
ANR	1081833	UnaryOperator	!		1081622	0					
ANR	1081834	Identifier	const_		1081622	1					
ANR	1081835	RelationalExpression	const_ -> addr >= word_count		1081622	1		>=			
ANR	1081836	PtrMemberAccess	const_ -> addr		1081622	0					
ANR	1081837	Identifier	const_		1081622	0					
ANR	1081838	Identifier	addr		1081622	1					
ANR	1081839	Identifier	word_count		1081622	1					
ANR	1081840	IfStatement	if ( label && label -> size == word_count )		1081622	4					
ANR	1081841	Condition	label && label -> size == word_count	360:7:11113:11146	1081622	0	True				
ANR	1081842	AndExpression	label && label -> size == word_count		1081622	0		&&			
ANR	1081843	Identifier	label		1081622	0					
ANR	1081844	EqualityExpression	label -> size == word_count		1081622	1		==			
ANR	1081845	PtrMemberAccess	label -> size		1081622	0					
ANR	1081846	Identifier	label		1081622	0					
ANR	1081847	Identifier	size		1081622	1					
ANR	1081848	Identifier	word_count		1081622	1					
ANR	1081849	CompoundStatement		43:43:1281:1281	1081622	1					
ANR	1081850	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	362:4:11193:11225	1081622	0	True				
ANR	1081851	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1081622	0		=			
ANR	1081852	PtrMemberAccess	label -> addr		1081622	0					
ANR	1081853	Identifier	label		1081622	0					
ANR	1081854	Identifier	addr		1081622	1					
ANR	1081855	CastExpression	( sljit_uw ) code_ptr		1081622	1					
ANR	1081856	CastTarget	sljit_uw		1081622	0					
ANR	1081857	Identifier	code_ptr		1081622	1					
ANR	1081858	ExpressionStatement	label -> size = code_ptr - code	363:4:11231:11260	1081622	1	True				
ANR	1081859	AssignmentExpression	label -> size = code_ptr - code		1081622	0		=			
ANR	1081860	PtrMemberAccess	label -> size		1081622	0					
ANR	1081861	Identifier	label		1081622	0					
ANR	1081862	Identifier	size		1081622	1					
ANR	1081863	AdditiveExpression	code_ptr - code		1081622	1		-			
ANR	1081864	Identifier	code_ptr		1081622	0					
ANR	1081865	Identifier	code		1081622	1					
ANR	1081866	ExpressionStatement	label = label -> next	364:4:11266:11285	1081622	2	True				
ANR	1081867	AssignmentExpression	label = label -> next		1081622	0		=			
ANR	1081868	Identifier	label		1081622	0					
ANR	1081869	PtrMemberAccess	label -> next		1081622	1					
ANR	1081870	Identifier	label		1081622	0					
ANR	1081871	Identifier	next		1081622	1					
ANR	1081872	IfStatement	if ( jump && jump -> addr == word_count )		1081622	5					
ANR	1081873	Condition	jump && jump -> addr == word_count	366:7:11299:11330	1081622	0	True				
ANR	1081874	AndExpression	jump && jump -> addr == word_count		1081622	0		&&			
ANR	1081875	Identifier	jump		1081622	0					
ANR	1081876	EqualityExpression	jump -> addr == word_count		1081622	1		==			
ANR	1081877	PtrMemberAccess	jump -> addr		1081622	0					
ANR	1081878	Identifier	jump		1081622	0					
ANR	1081879	Identifier	addr		1081622	1					
ANR	1081880	Identifier	word_count		1081622	1					
ANR	1081881	CompoundStatement		49:41:1465:1465	1081622	1					
ANR	1081882	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	368:4:11396:11433	1081622	0	True				
ANR	1081883	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1081622	0		=			
ANR	1081884	PtrMemberAccess	jump -> addr		1081622	0					
ANR	1081885	Identifier	jump		1081622	0					
ANR	1081886	Identifier	addr		1081622	1					
ANR	1081887	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1081622	1					
ANR	1081888	CastTarget	sljit_uw		1081622	0					
ANR	1081889	AdditiveExpression	code_ptr - 3		1081622	1		-			
ANR	1081890	Identifier	code_ptr		1081622	0					
ANR	1081891	PrimaryExpression	3		1081622	1					
ANR	1081892	IfStatement	"if ( detect_jump_type ( jump , code_ptr , code ) )"		1081622	1					
ANR	1081893	Condition	"detect_jump_type ( jump , code_ptr , code )"	372:8:11499:11536	1081622	0	True				
ANR	1081894	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1081622	0					
ANR	1081895	Callee	detect_jump_type		1081622	0					
ANR	1081896	Identifier	detect_jump_type		1081622	0					
ANR	1081897	ArgumentList	jump		1081622	1					
ANR	1081898	Argument	jump		1081622	0					
ANR	1081899	Identifier	jump		1081622	0					
ANR	1081900	Argument	code_ptr		1081622	1					
ANR	1081901	Identifier	code_ptr		1081622	0					
ANR	1081902	Argument	code		1081622	2					
ANR	1081903	Identifier	code		1081622	0					
ANR	1081904	CompoundStatement		55:48:1671:1671	1081622	1					
ANR	1081905	ExpressionStatement	code_ptr [ - 3 ] = code_ptr [ 0 ]	374:5:11603:11629	1081622	0	True				
ANR	1081906	AssignmentExpression	code_ptr [ - 3 ] = code_ptr [ 0 ]		1081622	0		=			
ANR	1081907	ArrayIndexing	code_ptr [ - 3 ]		1081622	0					
ANR	1081908	Identifier	code_ptr		1081622	0					
ANR	1081909	UnaryOperationExpression	- 3		1081622	1					
ANR	1081910	UnaryOperator	-		1081622	0					
ANR	1081911	PrimaryExpression	3		1081622	1					
ANR	1081912	ArrayIndexing	code_ptr [ 0 ]		1081622	1					
ANR	1081913	Identifier	code_ptr		1081622	0					
ANR	1081914	PrimaryExpression	0		1081622	1					
ANR	1081915	ExpressionStatement	code_ptr -= 3	375:5:11636:11649	1081622	1	True				
ANR	1081916	AssignmentExpression	code_ptr -= 3		1081622	0		-=			
ANR	1081917	Identifier	code_ptr		1081622	0					
ANR	1081918	PrimaryExpression	3		1081622	1					
ANR	1081919	IfStatement	if ( jump -> flags & REMOVE_COND )		1081622	2					
ANR	1081920	Condition	jump -> flags & REMOVE_COND	397:9:12211:12235	1081622	0	True				
ANR	1081921	BitAndExpression	jump -> flags & REMOVE_COND		1081622	0		&			
ANR	1081922	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1081923	Identifier	jump		1081622	0					
ANR	1081924	Identifier	flags		1081622	1					
ANR	1081925	Identifier	REMOVE_COND		1081622	1					
ANR	1081926	CompoundStatement		80:36:2370:2370	1081622	1					
ANR	1081927	ExpressionStatement	code_ptr [ 0 ] = BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )	398:6:12246:12317	1081622	0	True				
ANR	1081928	AssignmentExpression	code_ptr [ 0 ] = BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1081622	0		=			
ANR	1081929	ArrayIndexing	code_ptr [ 0 ]		1081622	0					
ANR	1081930	Identifier	code_ptr		1081622	0					
ANR	1081931	PrimaryExpression	0		1081622	1					
ANR	1081932	InclusiveOrExpression	BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1081622	1		|			
ANR	1081933	Identifier	BCx		1081622	0					
ANR	1081934	InclusiveOrExpression	( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1081622	1		|			
ANR	1081935	ShiftExpression	2 << 2		1081622	0		<<			
ANR	1081936	PrimaryExpression	2		1081622	0					
ANR	1081937	PrimaryExpression	2		1081622	1					
ANR	1081938	BitAndExpression	( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001		1081622	1		&			
ANR	1081939	ExclusiveOrExpression	code_ptr [ 0 ] ^ ( 8 << 21 )		1081622	0		^			
ANR	1081940	ArrayIndexing	code_ptr [ 0 ]		1081622	0					
ANR	1081941	Identifier	code_ptr		1081622	0					
ANR	1081942	PrimaryExpression	0		1081622	1					
ANR	1081943	ShiftExpression	8 << 21		1081622	1		<<			
ANR	1081944	PrimaryExpression	8		1081622	0					
ANR	1081945	PrimaryExpression	21		1081622	1					
ANR	1081946	PrimaryExpression	0x03ff0001		1081622	1					
ANR	1081947	ExpressionStatement	code_ptr ++	399:6:12325:12335	1081622	1	True				
ANR	1081948	PostIncDecOperationExpression	code_ptr ++		1081622	0					
ANR	1081949	Identifier	code_ptr		1081622	0					
ANR	1081950	IncDec	++		1081622	1					
ANR	1081951	ExpressionStatement	jump -> addr += sizeof ( sljit_ins )	400:6:12343:12374	1081622	2	True				
ANR	1081952	AssignmentExpression	jump -> addr += sizeof ( sljit_ins )		1081622	0		+=			
ANR	1081953	PtrMemberAccess	jump -> addr		1081622	0					
ANR	1081954	Identifier	jump		1081622	0					
ANR	1081955	Identifier	addr		1081622	1					
ANR	1081956	SizeofExpression	sizeof ( sljit_ins )		1081622	1					
ANR	1081957	Sizeof	sizeof		1081622	0					
ANR	1081958	SizeofOperand	sljit_ins		1081622	1					
ANR	1081959	ExpressionStatement	code_ptr [ 0 ] = Bx	401:6:12382:12398	1081622	3	True				
ANR	1081960	AssignmentExpression	code_ptr [ 0 ] = Bx		1081622	0		=			
ANR	1081961	ArrayIndexing	code_ptr [ 0 ]		1081622	0					
ANR	1081962	Identifier	code_ptr		1081622	0					
ANR	1081963	PrimaryExpression	0		1081622	1					
ANR	1081964	Identifier	Bx		1081622	1					
ANR	1081965	ExpressionStatement	jump -> flags -= IS_COND	402:6:12406:12428	1081622	4	True				
ANR	1081966	AssignmentExpression	jump -> flags -= IS_COND		1081622	0		-=			
ANR	1081967	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1081968	Identifier	jump		1081622	0					
ANR	1081969	Identifier	flags		1081622	1					
ANR	1081970	Identifier	IS_COND		1081622	1					
ANR	1081971	ExpressionStatement	jump = jump -> next	405:4:12447:12464	1081622	2	True				
ANR	1081972	AssignmentExpression	jump = jump -> next		1081622	0		=			
ANR	1081973	Identifier	jump		1081622	0					
ANR	1081974	PtrMemberAccess	jump -> next		1081622	1					
ANR	1081975	Identifier	jump		1081622	0					
ANR	1081976	Identifier	next		1081622	1					
ANR	1081977	IfStatement	if ( const_ && const_ -> addr == word_count )		1081622	6					
ANR	1081978	Condition	const_ && const_ -> addr == word_count	407:7:12478:12513	1081622	0	True				
ANR	1081979	AndExpression	const_ && const_ -> addr == word_count		1081622	0		&&			
ANR	1081980	Identifier	const_		1081622	0					
ANR	1081981	EqualityExpression	const_ -> addr == word_count		1081622	1		==			
ANR	1081982	PtrMemberAccess	const_ -> addr		1081622	0					
ANR	1081983	Identifier	const_		1081622	0					
ANR	1081984	Identifier	addr		1081622	1					
ANR	1081985	Identifier	word_count		1081622	1					
ANR	1081986	CompoundStatement		90:45:2648:2648	1081622	1					
ANR	1081987	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	408:4:12522:12555	1081622	0	True				
ANR	1081988	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1081622	0		=			
ANR	1081989	PtrMemberAccess	const_ -> addr		1081622	0					
ANR	1081990	Identifier	const_		1081622	0					
ANR	1081991	Identifier	addr		1081622	1					
ANR	1081992	CastExpression	( sljit_uw ) code_ptr		1081622	1					
ANR	1081993	CastTarget	sljit_uw		1081622	0					
ANR	1081994	Identifier	code_ptr		1081622	1					
ANR	1081995	ExpressionStatement	const_ = const_ -> next	409:4:12561:12582	1081622	1	True				
ANR	1081996	AssignmentExpression	const_ = const_ -> next		1081622	0		=			
ANR	1081997	Identifier	const_		1081622	0					
ANR	1081998	PtrMemberAccess	const_ -> next		1081622	1					
ANR	1081999	Identifier	const_		1081622	0					
ANR	1082000	Identifier	next		1081622	1					
ANR	1082001	ExpressionStatement	code_ptr ++	411:3:12592:12603	1081622	7	True				
ANR	1082002	PostIncDecOperationExpression	code_ptr ++		1081622	0					
ANR	1082003	Identifier	code_ptr		1081622	0					
ANR	1082004	IncDec	++		1081622	1					
ANR	1082005	ExpressionStatement	word_count ++	412:3:12608:12621	1081622	8	True				
ANR	1082006	PostIncDecOperationExpression	word_count ++		1081622	0					
ANR	1082007	Identifier	word_count		1081622	0					
ANR	1082008	IncDec	++		1081622	1					
ANR	1082009	Condition	buf_ptr < buf_end	413:11:12634:12650	1081622	1	True				
ANR	1082010	RelationalExpression	buf_ptr < buf_end		1081622	0		<			
ANR	1082011	Identifier	buf_ptr		1081622	0					
ANR	1082012	Identifier	buf_end		1081622	1					
ANR	1082013	ExpressionStatement	buf = buf -> next	415:2:12657:12672	1081622	3	True				
ANR	1082014	AssignmentExpression	buf = buf -> next		1081622	0		=			
ANR	1082015	Identifier	buf		1081622	0					
ANR	1082016	PtrMemberAccess	buf -> next		1081622	1					
ANR	1082017	Identifier	buf		1081622	0					
ANR	1082018	Identifier	next		1081622	1					
ANR	1082019	Condition	buf	416:10:12684:12686	1081622	1	True				
ANR	1082020	Identifier	buf		1081622	0					
ANR	1082021	IfStatement	if ( label && label -> size == word_count )		1081622	23					
ANR	1082022	Condition	label && label -> size == word_count	418:5:12696:12729	1081622	0	True				
ANR	1082023	AndExpression	label && label -> size == word_count		1081622	0		&&			
ANR	1082024	Identifier	label		1081622	0					
ANR	1082025	EqualityExpression	label -> size == word_count		1081622	1		==			
ANR	1082026	PtrMemberAccess	label -> size		1081622	0					
ANR	1082027	Identifier	label		1081622	0					
ANR	1082028	Identifier	size		1081622	1					
ANR	1082029	Identifier	word_count		1081622	1					
ANR	1082030	CompoundStatement		101:41:2864:2864	1081622	1					
ANR	1082031	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	419:2:12736:12768	1081622	0	True				
ANR	1082032	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1081622	0		=			
ANR	1082033	PtrMemberAccess	label -> addr		1081622	0					
ANR	1082034	Identifier	label		1081622	0					
ANR	1082035	Identifier	addr		1081622	1					
ANR	1082036	CastExpression	( sljit_uw ) code_ptr		1081622	1					
ANR	1082037	CastTarget	sljit_uw		1081622	0					
ANR	1082038	Identifier	code_ptr		1081622	1					
ANR	1082039	ExpressionStatement	label -> size = code_ptr - code	420:2:12772:12801	1081622	1	True				
ANR	1082040	AssignmentExpression	label -> size = code_ptr - code		1081622	0		=			
ANR	1082041	PtrMemberAccess	label -> size		1081622	0					
ANR	1082042	Identifier	label		1081622	0					
ANR	1082043	Identifier	size		1081622	1					
ANR	1082044	AdditiveExpression	code_ptr - code		1081622	1		-			
ANR	1082045	Identifier	code_ptr		1081622	0					
ANR	1082046	Identifier	code		1081622	1					
ANR	1082047	ExpressionStatement	label = label -> next	421:2:12805:12824	1081622	2	True				
ANR	1082048	AssignmentExpression	label = label -> next		1081622	0		=			
ANR	1082049	Identifier	label		1081622	0					
ANR	1082050	PtrMemberAccess	label -> next		1081622	1					
ANR	1082051	Identifier	label		1081622	0					
ANR	1082052	Identifier	next		1081622	1					
ANR	1082053	ExpressionStatement	SLJIT_ASSERT ( ! label )	424:1:12831:12851	1081622	24	True				
ANR	1082054	CallExpression	SLJIT_ASSERT ( ! label )		1081622	0					
ANR	1082055	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082056	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082057	ArgumentList	! label		1081622	1					
ANR	1082058	Argument	! label		1081622	0					
ANR	1082059	UnaryOperationExpression	! label		1081622	0					
ANR	1082060	UnaryOperator	!		1081622	0					
ANR	1082061	Identifier	label		1081622	1					
ANR	1082062	ExpressionStatement	SLJIT_ASSERT ( ! jump )	425:1:12854:12873	1081622	25	True				
ANR	1082063	CallExpression	SLJIT_ASSERT ( ! jump )		1081622	0					
ANR	1082064	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082065	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082066	ArgumentList	! jump		1081622	1					
ANR	1082067	Argument	! jump		1081622	0					
ANR	1082068	UnaryOperationExpression	! jump		1081622	0					
ANR	1082069	UnaryOperator	!		1081622	0					
ANR	1082070	Identifier	jump		1081622	1					
ANR	1082071	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	426:1:12876:12897	1081622	26	True				
ANR	1082072	CallExpression	SLJIT_ASSERT ( ! const_ )		1081622	0					
ANR	1082073	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082074	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082075	ArgumentList	! const_		1081622	1					
ANR	1082076	Argument	! const_		1081622	0					
ANR	1082077	UnaryOperationExpression	! const_		1081622	0					
ANR	1082078	UnaryOperator	!		1081622	0					
ANR	1082079	Identifier	const_		1081622	1					
ANR	1082080	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) ) )	428:1:12957:13076	1081622	27	True				
ANR	1082081	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) ) )		1081622	0					
ANR	1082082	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082083	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082084	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	1					
ANR	1082085	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	0					
ANR	1082086	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	0		<=			
ANR	1082087	AdditiveExpression	code_ptr - code		1081622	0		-			
ANR	1082088	Identifier	code_ptr		1081622	0					
ANR	1082089	Identifier	code		1081622	1					
ANR	1082090	AdditiveExpression	( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1081622	1		-			
ANR	1082091	CastExpression	( sljit_sw ) compiler -> size		1081622	0					
ANR	1082092	CastTarget	sljit_sw		1081622	0					
ANR	1082093	PtrMemberAccess	compiler -> size		1081622	1					
ANR	1082094	Identifier	compiler		1081622	0					
ANR	1082095	Identifier	size		1081622	1					
ANR	1082096	MultiplicativeExpression	sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins )		1081622	1		/			
ANR	1082097	SizeofExpression	sizeof ( struct sljit_function_context )		1081622	0					
ANR	1082098	Sizeof	sizeof		1081622	0					
ANR	1082099	SizeofOperand	struct sljit_function_context		1081622	1					
ANR	1082100	SizeofExpression	sizeof ( sljit_ins )		1081622	1					
ANR	1082101	Sizeof	sizeof		1081622	0					
ANR	1082102	SizeofOperand	sljit_ins		1081622	1					
ANR	1082103	ExpressionStatement	jump = compiler -> jumps	433:1:13153:13175	1081622	28	True				
ANR	1082104	AssignmentExpression	jump = compiler -> jumps		1081622	0		=			
ANR	1082105	Identifier	jump		1081622	0					
ANR	1082106	PtrMemberAccess	compiler -> jumps		1081622	1					
ANR	1082107	Identifier	compiler		1081622	0					
ANR	1082108	Identifier	jumps		1081622	1					
ANR	1082109	WhileStatement	while ( jump )		1081622	29					
ANR	1082110	Condition	jump	434:8:13185:13188	1081622	0	True				
ANR	1082111	Identifier	jump		1081622	0					
ANR	1082112	CompoundStatement		117:14:3323:3323	1081622	1					
ANR	1082113	DoStatement	do		1081622	0					
ANR	1082114	CompoundStatement		118:5:3330:3330	1081622	0					
ANR	1082115	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	436:3:13203:13275	1081622	0	True				
ANR	1082116	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1081622	0		=			
ANR	1082117	Identifier	addr		1081622	0					
ANR	1082118	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1081622	1					
ANR	1082119	Condition	jump -> flags & JUMP_LABEL		1081622	0					
ANR	1082120	BitAndExpression	jump -> flags & JUMP_LABEL		1081622	0		&			
ANR	1082121	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1082122	Identifier	jump		1081622	0					
ANR	1082123	Identifier	flags		1081622	1					
ANR	1082124	Identifier	JUMP_LABEL		1081622	1					
ANR	1082125	PtrMemberAccess	jump -> u . label -> addr		1081622	1					
ANR	1082126	MemberAccess	jump -> u . label		1081622	0					
ANR	1082127	PtrMemberAccess	jump -> u		1081622	0					
ANR	1082128	Identifier	jump		1081622	0					
ANR	1082129	Identifier	u		1081622	1					
ANR	1082130	Identifier	label		1081622	1					
ANR	1082131	Identifier	addr		1081622	1					
ANR	1082132	MemberAccess	jump -> u . target		1081622	2					
ANR	1082133	PtrMemberAccess	jump -> u		1081622	0					
ANR	1082134	Identifier	jump		1081622	0					
ANR	1082135	Identifier	u		1081622	1					
ANR	1082136	Identifier	target		1081622	1					
ANR	1082137	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	437:3:13280:13312	1081622	1	True				
ANR	1082138	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1081622	0		=			
ANR	1082139	Identifier	buf_ptr		1081622	0					
ANR	1082140	CastExpression	( sljit_ins * ) jump -> addr		1081622	1					
ANR	1082141	CastTarget	sljit_ins *		1081622	0					
ANR	1082142	PtrMemberAccess	jump -> addr		1081622	1					
ANR	1082143	Identifier	jump		1081622	0					
ANR	1082144	Identifier	addr		1081622	1					
ANR	1082145	IfStatement	if ( jump -> flags & PATCH_B )		1081622	2					
ANR	1082146	Condition	jump -> flags & PATCH_B	438:7:13321:13341	1081622	0	True				
ANR	1082147	BitAndExpression	jump -> flags & PATCH_B		1081622	0		&			
ANR	1082148	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1082149	Identifier	jump		1081622	0					
ANR	1082150	Identifier	flags		1081622	1					
ANR	1082151	Identifier	PATCH_B		1081622	1					
ANR	1082152	CompoundStatement		121:30:3476:3476	1081622	1					
ANR	1082153	IfStatement	if ( jump -> flags & IS_COND )		1081622	0					
ANR	1082154	Condition	jump -> flags & IS_COND	439:8:13354:13374	1081622	0	True				
ANR	1082155	BitAndExpression	jump -> flags & IS_COND		1081622	0		&			
ANR	1082156	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1082157	Identifier	jump		1081622	0					
ANR	1082158	Identifier	flags		1081622	1					
ANR	1082159	Identifier	IS_COND		1081622	1					
ANR	1082160	CompoundStatement		122:31:3509:3509	1081622	1					
ANR	1082161	IfStatement	if ( ! ( jump -> flags & PATCH_ABS_B ) )		1081622	0					
ANR	1082162	Condition	! ( jump -> flags & PATCH_ABS_B )	440:9:13388:13415	1081622	0	True				
ANR	1082163	UnaryOperationExpression	! ( jump -> flags & PATCH_ABS_B )		1081622	0					
ANR	1082164	UnaryOperator	!		1081622	0					
ANR	1082165	BitAndExpression	jump -> flags & PATCH_ABS_B		1081622	1		&			
ANR	1082166	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1082167	Identifier	jump		1081622	0					
ANR	1082168	Identifier	flags		1081622	1					
ANR	1082169	Identifier	PATCH_ABS_B		1081622	1					
ANR	1082170	CompoundStatement		123:39:3550:3550	1081622	1					
ANR	1082171	ExpressionStatement	addr = addr - jump -> addr	441:6:13426:13450	1081622	0	True				
ANR	1082172	AssignmentExpression	addr = addr - jump -> addr		1081622	0		=			
ANR	1082173	Identifier	addr		1081622	0					
ANR	1082174	AdditiveExpression	addr - jump -> addr		1081622	1		-			
ANR	1082175	Identifier	addr		1081622	0					
ANR	1082176	PtrMemberAccess	jump -> addr		1081622	1					
ANR	1082177	Identifier	jump		1081622	0					
ANR	1082178	Identifier	addr		1081622	1					
ANR	1082179	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000 )	442:6:13458:13525	1081622	1	True				
ANR	1082180	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000 )		1081622	0					
ANR	1082181	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082182	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082183	ArgumentList	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1081622	1					
ANR	1082184	Argument	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1081622	0					
ANR	1082185	AndExpression	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1081622	0		&&			
ANR	1082186	RelationalExpression	( sljit_sw ) addr <= 0x7fff		1081622	0		<=			
ANR	1082187	CastExpression	( sljit_sw ) addr		1081622	0					
ANR	1082188	CastTarget	sljit_sw		1081622	0					
ANR	1082189	Identifier	addr		1081622	1					
ANR	1082190	PrimaryExpression	0x7fff		1081622	1					
ANR	1082191	RelationalExpression	( sljit_sw ) addr >= - 0x8000		1081622	1		>=			
ANR	1082192	CastExpression	( sljit_sw ) addr		1081622	0					
ANR	1082193	CastTarget	sljit_sw		1081622	0					
ANR	1082194	Identifier	addr		1081622	1					
ANR	1082195	UnaryOperationExpression	- 0x8000		1081622	1					
ANR	1082196	UnaryOperator	-		1081622	0					
ANR	1082197	PrimaryExpression	0x8000		1081622	1					
ANR	1082198	ExpressionStatement	* buf_ptr = BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )	443:6:13533:13593	1081622	2	True				
ANR	1082199	AssignmentExpression	* buf_ptr = BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	0		=			
ANR	1082200	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082201	UnaryOperator	*		1081622	0					
ANR	1082202	Identifier	buf_ptr		1081622	1					
ANR	1082203	InclusiveOrExpression	BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	1		|			
ANR	1082204	Identifier	BCx		1081622	0					
ANR	1082205	InclusiveOrExpression	( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	1		|			
ANR	1082206	BitAndExpression	addr & 0xfffc		1081622	0		&			
ANR	1082207	Identifier	addr		1081622	0					
ANR	1082208	PrimaryExpression	0xfffc		1081622	1					
ANR	1082209	BitAndExpression	( * buf_ptr ) & 0x03ff0001		1081622	1		&			
ANR	1082210	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082211	UnaryOperator	*		1081622	0					
ANR	1082212	Identifier	buf_ptr		1081622	1					
ANR	1082213	PrimaryExpression	0x03ff0001		1081622	1					
ANR	1082214	ElseStatement	else		1081622	0					
ANR	1082215	CompoundStatement		128:10:3744:3744	1081622	0					
ANR	1082216	ExpressionStatement	SLJIT_ASSERT ( addr <= 0xffff )	446:6:13620:13648	1081622	0	True				
ANR	1082217	CallExpression	SLJIT_ASSERT ( addr <= 0xffff )		1081622	0					
ANR	1082218	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082219	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082220	ArgumentList	addr <= 0xffff		1081622	1					
ANR	1082221	Argument	addr <= 0xffff		1081622	0					
ANR	1082222	RelationalExpression	addr <= 0xffff		1081622	0		<=			
ANR	1082223	Identifier	addr		1081622	0					
ANR	1082224	PrimaryExpression	0xffff		1081622	1					
ANR	1082225	ExpressionStatement	* buf_ptr = BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )	447:6:13656:13722	1081622	1	True				
ANR	1082226	AssignmentExpression	* buf_ptr = BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	0		=			
ANR	1082227	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082228	UnaryOperator	*		1081622	0					
ANR	1082229	Identifier	buf_ptr		1081622	1					
ANR	1082230	InclusiveOrExpression	BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	1		|			
ANR	1082231	Identifier	BCx		1081622	0					
ANR	1082232	InclusiveOrExpression	( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	1		|			
ANR	1082233	BitAndExpression	addr & 0xfffc		1081622	0		&			
ANR	1082234	Identifier	addr		1081622	0					
ANR	1082235	PrimaryExpression	0xfffc		1081622	1					
ANR	1082236	InclusiveOrExpression	0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1081622	1		|			
ANR	1082237	PrimaryExpression	0x2		1081622	0					
ANR	1082238	BitAndExpression	( * buf_ptr ) & 0x03ff0001		1081622	1		&			
ANR	1082239	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082240	UnaryOperator	*		1081622	0					
ANR	1082241	Identifier	buf_ptr		1081622	1					
ANR	1082242	PrimaryExpression	0x03ff0001		1081622	1					
ANR	1082243	ElseStatement	else		1081622	0					
ANR	1082244	CompoundStatement		133:9:3878:3878	1081622	0					
ANR	1082245	IfStatement	if ( ! ( jump -> flags & PATCH_ABS_B ) )		1081622	0					
ANR	1082246	Condition	! ( jump -> flags & PATCH_ABS_B )	451:9:13757:13784	1081622	0	True				
ANR	1082247	UnaryOperationExpression	! ( jump -> flags & PATCH_ABS_B )		1081622	0					
ANR	1082248	UnaryOperator	!		1081622	0					
ANR	1082249	BitAndExpression	jump -> flags & PATCH_ABS_B		1081622	1		&			
ANR	1082250	PtrMemberAccess	jump -> flags		1081622	0					
ANR	1082251	Identifier	jump		1081622	0					
ANR	1082252	Identifier	flags		1081622	1					
ANR	1082253	Identifier	PATCH_ABS_B		1081622	1					
ANR	1082254	CompoundStatement		134:39:3919:3919	1081622	1					
ANR	1082255	ExpressionStatement	addr = addr - jump -> addr	452:6:13795:13819	1081622	0	True				
ANR	1082256	AssignmentExpression	addr = addr - jump -> addr		1081622	0		=			
ANR	1082257	Identifier	addr		1081622	0					
ANR	1082258	AdditiveExpression	addr - jump -> addr		1081622	1		-			
ANR	1082259	Identifier	addr		1081622	0					
ANR	1082260	PtrMemberAccess	jump -> addr		1081622	1					
ANR	1082261	Identifier	jump		1081622	0					
ANR	1082262	Identifier	addr		1081622	1					
ANR	1082263	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000 )	453:6:13827:13902	1081622	1	True				
ANR	1082264	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000 )		1081622	0					
ANR	1082265	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082266	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082267	ArgumentList	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1081622	1					
ANR	1082268	Argument	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1081622	0					
ANR	1082269	AndExpression	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1081622	0		&&			
ANR	1082270	RelationalExpression	( sljit_sw ) addr <= 0x01ffffff		1081622	0		<=			
ANR	1082271	CastExpression	( sljit_sw ) addr		1081622	0					
ANR	1082272	CastTarget	sljit_sw		1081622	0					
ANR	1082273	Identifier	addr		1081622	1					
ANR	1082274	PrimaryExpression	0x01ffffff		1081622	1					
ANR	1082275	RelationalExpression	( sljit_sw ) addr >= - 0x02000000		1081622	1		>=			
ANR	1082276	CastExpression	( sljit_sw ) addr		1081622	0					
ANR	1082277	CastTarget	sljit_sw		1081622	0					
ANR	1082278	Identifier	addr		1081622	1					
ANR	1082279	UnaryOperationExpression	- 0x02000000		1081622	1					
ANR	1082280	UnaryOperator	-		1081622	0					
ANR	1082281	PrimaryExpression	0x02000000		1081622	1					
ANR	1082282	ExpressionStatement	* buf_ptr = Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )	454:6:13910:13966	1081622	2	True				
ANR	1082283	AssignmentExpression	* buf_ptr = Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1081622	0		=			
ANR	1082284	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082285	UnaryOperator	*		1081622	0					
ANR	1082286	Identifier	buf_ptr		1081622	1					
ANR	1082287	InclusiveOrExpression	Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1081622	1		|			
ANR	1082288	Identifier	Bx		1081622	0					
ANR	1082289	InclusiveOrExpression	( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1081622	1		|			
ANR	1082290	BitAndExpression	addr & 0x03fffffc		1081622	0		&			
ANR	1082291	Identifier	addr		1081622	0					
ANR	1082292	PrimaryExpression	0x03fffffc		1081622	1					
ANR	1082293	BitAndExpression	( * buf_ptr ) & 0x1		1081622	1		&			
ANR	1082294	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082295	UnaryOperator	*		1081622	0					
ANR	1082296	Identifier	buf_ptr		1081622	1					
ANR	1082297	PrimaryExpression	0x1		1081622	1					
ANR	1082298	ElseStatement	else		1081622	0					
ANR	1082299	CompoundStatement		139:10:4117:4117	1081622	0					
ANR	1082300	ExpressionStatement	SLJIT_ASSERT ( addr <= 0x03ffffff )	457:6:13993:14025	1081622	0	True				
ANR	1082301	CallExpression	SLJIT_ASSERT ( addr <= 0x03ffffff )		1081622	0					
ANR	1082302	Callee	SLJIT_ASSERT		1081622	0					
ANR	1082303	Identifier	SLJIT_ASSERT		1081622	0					
ANR	1082304	ArgumentList	addr <= 0x03ffffff		1081622	1					
ANR	1082305	Argument	addr <= 0x03ffffff		1081622	0					
ANR	1082306	RelationalExpression	addr <= 0x03ffffff		1081622	0		<=			
ANR	1082307	Identifier	addr		1081622	0					
ANR	1082308	PrimaryExpression	0x03ffffff		1081622	1					
ANR	1082309	ExpressionStatement	* buf_ptr = Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )	458:6:14033:14095	1081622	1	True				
ANR	1082310	AssignmentExpression	* buf_ptr = Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1081622	0		=			
ANR	1082311	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082312	UnaryOperator	*		1081622	0					
ANR	1082313	Identifier	buf_ptr		1081622	1					
ANR	1082314	InclusiveOrExpression	Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1081622	1		|			
ANR	1082315	Identifier	Bx		1081622	0					
ANR	1082316	InclusiveOrExpression	( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1081622	1		|			
ANR	1082317	BitAndExpression	addr & 0x03fffffc		1081622	0		&			
ANR	1082318	Identifier	addr		1081622	0					
ANR	1082319	PrimaryExpression	0x03fffffc		1081622	1					
ANR	1082320	InclusiveOrExpression	0x2 | ( ( * buf_ptr ) & 0x1 )		1081622	1		|			
ANR	1082321	PrimaryExpression	0x2		1081622	0					
ANR	1082322	BitAndExpression	( * buf_ptr ) & 0x1		1081622	1		&			
ANR	1082323	UnaryOperationExpression	* buf_ptr		1081622	0					
ANR	1082324	UnaryOperator	*		1081622	0					
ANR	1082325	Identifier	buf_ptr		1081622	1					
ANR	1082326	PrimaryExpression	0x1		1081622	1					
ANR	1082327	BreakStatement	break ;	461:4:14114:14119	1081622	1	True				
ANR	1082328	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )	465:3:14230:14294	1081622	3	True				
ANR	1082329	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1081622	0		=			
ANR	1082330	ArrayIndexing	buf_ptr [ 0 ]		1081622	0					
ANR	1082331	Identifier	buf_ptr		1081622	0					
ANR	1082332	PrimaryExpression	0		1081622	1					
ANR	1082333	InclusiveOrExpression	( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1081622	1		|			
ANR	1082334	BitAndExpression	buf_ptr [ 0 ] & 0xffff0000		1081622	0		&			
ANR	1082335	ArrayIndexing	buf_ptr [ 0 ]		1081622	0					
ANR	1082336	Identifier	buf_ptr		1081622	0					
ANR	1082337	PrimaryExpression	0		1081622	1					
ANR	1082338	PrimaryExpression	0xffff0000		1081622	1					
ANR	1082339	BitAndExpression	( addr >> 16 ) & 0xffff		1081622	1		&			
ANR	1082340	ShiftExpression	addr >> 16		1081622	0		>>			
ANR	1082341	Identifier	addr		1081622	0					
ANR	1082342	PrimaryExpression	16		1081622	1					
ANR	1082343	PrimaryExpression	0xffff		1081622	1					
ANR	1082344	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )	466:3:14299:14355	1081622	4	True				
ANR	1082345	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1081622	0		=			
ANR	1082346	ArrayIndexing	buf_ptr [ 1 ]		1081622	0					
ANR	1082347	Identifier	buf_ptr		1081622	0					
ANR	1082348	PrimaryExpression	1		1081622	1					
ANR	1082349	InclusiveOrExpression	( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1081622	1		|			
ANR	1082350	BitAndExpression	buf_ptr [ 1 ] & 0xffff0000		1081622	0		&			
ANR	1082351	ArrayIndexing	buf_ptr [ 1 ]		1081622	0					
ANR	1082352	Identifier	buf_ptr		1081622	0					
ANR	1082353	PrimaryExpression	1		1081622	1					
ANR	1082354	PrimaryExpression	0xffff0000		1081622	1					
ANR	1082355	BitAndExpression	addr & 0xffff		1081622	1		&			
ANR	1082356	Identifier	addr		1081622	0					
ANR	1082357	PrimaryExpression	0xffff		1081622	1					
ANR	1082358	Condition	0	486:11:15167:15167	1081622	1	True				
ANR	1082359	PrimaryExpression	0		1081622	0					
ANR	1082360	ExpressionStatement	jump = jump -> next	487:2:15173:15190	1081622	1	True				
ANR	1082361	AssignmentExpression	jump = jump -> next		1081622	0		=			
ANR	1082362	Identifier	jump		1081622	0					
ANR	1082363	PtrMemberAccess	jump -> next		1081622	1					
ANR	1082364	Identifier	jump		1081622	0					
ANR	1082365	Identifier	next		1081622	1					
ANR	1082366	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	490:1:15197:15233	1081622	30	True				
ANR	1082367	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1081622	0		=			
ANR	1082368	PtrMemberAccess	compiler -> error		1081622	0					
ANR	1082369	Identifier	compiler		1081622	0					
ANR	1082370	Identifier	error		1081622	1					
ANR	1082371	Identifier	SLJIT_ERR_COMPILED		1081622	1					
ANR	1082372	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	491:1:15236:15301	1081622	31	True				
ANR	1082373	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1081622	0		=			
ANR	1082374	PtrMemberAccess	compiler -> executable_size		1081622	0					
ANR	1082375	Identifier	compiler		1081622	0					
ANR	1082376	Identifier	executable_size		1081622	1					
ANR	1082377	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1081622	1		*			
ANR	1082378	AdditiveExpression	code_ptr - code		1081622	0		-			
ANR	1082379	Identifier	code_ptr		1081622	0					
ANR	1082380	Identifier	code		1081622	1					
ANR	1082381	SizeofExpression	sizeof ( sljit_ins )		1081622	1					
ANR	1082382	Sizeof	sizeof		1081622	0					
ANR	1082383	SizeofOperand	sljit_ins		1081622	1					
ANR	1082384	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	492:1:15304:15337	1081622	32	True				
ANR	1082385	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1081622	0					
ANR	1082386	Callee	SLJIT_CACHE_FLUSH		1081622	0					
ANR	1082387	Identifier	SLJIT_CACHE_FLUSH		1081622	0					
ANR	1082388	ArgumentList	code		1081622	1					
ANR	1082389	Argument	code		1081622	0					
ANR	1082390	Identifier	code		1081622	0					
ANR	1082391	Argument	code_ptr		1081622	1					
ANR	1082392	Identifier	code_ptr		1081622	0					
ANR	1082393	IfStatement	if ( ( ( sljit_sw ) code_ptr ) & 0x4 )		1081622	33					
ANR	1082394	Condition	( ( sljit_sw ) code_ptr ) & 0x4	496:5:15459:15484	1081622	0	True				
ANR	1082395	BitAndExpression	( ( sljit_sw ) code_ptr ) & 0x4		1081622	0		&			
ANR	1082396	CastExpression	( sljit_sw ) code_ptr		1081622	0					
ANR	1082397	CastTarget	sljit_sw		1081622	0					
ANR	1082398	Identifier	code_ptr		1081622	1					
ANR	1082399	PrimaryExpression	0x4		1081622	1					
ANR	1082400	ExpressionStatement	code_ptr ++	497:2:15489:15499	1081622	1	True				
ANR	1082401	PostIncDecOperationExpression	code_ptr ++		1081622	0					
ANR	1082402	Identifier	code_ptr		1081622	0					
ANR	1082403	IncDec	++		1081622	1					
ANR	1082404	ExpressionStatement	"sljit_set_function_context ( NULL , ( struct sljit_function_context * ) code_ptr , ( sljit_sw ) code , ( void * ) sljit_generate_code )"	498:1:15502:15620	1081622	34	True				
ANR	1082405	CallExpression	"sljit_set_function_context ( NULL , ( struct sljit_function_context * ) code_ptr , ( sljit_sw ) code , ( void * ) sljit_generate_code )"		1081622	0					
ANR	1082406	Callee	sljit_set_function_context		1081622	0					
ANR	1082407	Identifier	sljit_set_function_context		1081622	0					
ANR	1082408	ArgumentList	NULL		1081622	1					
ANR	1082409	Argument	NULL		1081622	0					
ANR	1082410	Identifier	NULL		1081622	0					
ANR	1082411	Argument	( struct sljit_function_context * ) code_ptr		1081622	1					
ANR	1082412	CastExpression	( struct sljit_function_context * ) code_ptr		1081622	0					
ANR	1082413	CastTarget	struct sljit_function_context *		1081622	0					
ANR	1082414	Identifier	code_ptr		1081622	1					
ANR	1082415	Argument	( sljit_sw ) code		1081622	2					
ANR	1082416	CastExpression	( sljit_sw ) code		1081622	0					
ANR	1082417	CastTarget	sljit_sw		1081622	0					
ANR	1082418	Identifier	code		1081622	1					
ANR	1082419	Argument	( void * ) sljit_generate_code		1081622	3					
ANR	1082420	CastExpression	( void * ) sljit_generate_code		1081622	0					
ANR	1082421	CastTarget	void *		1081622	0					
ANR	1082422	Identifier	sljit_generate_code		1081622	1					
ANR	1082423	ReturnStatement	return code_ptr ;	499:1:15623:15638	1081622	35	True				
ANR	1082424	Identifier	code_ptr		1081622	0					
ANR	1082425	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1081622	1					
ANR	1082426	Identifier	sljit_generate_code		1081622	2					
ANR	1082427	ParameterList	struct sljit_compiler * compiler		1081622	3					
ANR	1082428	Parameter	struct sljit_compiler * compiler	317:51:9834:9864	1081622	0	True				
ANR	1082429	ParameterType	struct sljit_compiler *		1081622	0					
ANR	1082430	Identifier	compiler		1081622	1					
ANR	1082431	CFGEntryNode	ENTRY		1081622		True				
ANR	1082432	CFGExitNode	EXIT		1081622		True				
ANR	1082433	Symbol	label -> addr		1081622						
ANR	1082434	Symbol	compiler -> buf		1081622						
ANR	1082435	Symbol	SLJIT_MALLOC_EXEC		1081622						
ANR	1082436	Symbol	JUMP_LABEL		1081622						
ANR	1082437	Symbol	label -> next		1081622						
ANR	1082438	Symbol	* compiler		1081622						
ANR	1082439	Symbol	const_ -> next		1081622						
ANR	1082440	Symbol	const_ -> addr		1081622						
ANR	1082441	Symbol	buf -> next		1081622						
ANR	1082442	Symbol	buf_end		1081622						
ANR	1082443	Symbol	compiler -> executable_size		1081622						
ANR	1082444	Symbol	jump		1081622						
ANR	1082445	Symbol	buf -> used_size		1081622						
ANR	1082446	Symbol	check_sljit_generate_code		1081622						
ANR	1082447	Symbol	* buf		1081622						
ANR	1082448	Symbol	compiler -> labels		1081622						
ANR	1082449	Symbol	buf -> memory		1081622						
ANR	1082450	Symbol	NULL		1081622						
ANR	1082451	Symbol	detect_jump_type		1081622						
ANR	1082452	Symbol	* buf_ptr ++		1081622						
ANR	1082453	Symbol	jump -> addr		1081622						
ANR	1082454	Symbol	PATCH_ABS_B		1081622						
ANR	1082455	Symbol	buf_ptr		1081622						
ANR	1082456	Symbol	* code_ptr		1081622						
ANR	1082457	Symbol	* jump -> u . label		1081622						
ANR	1082458	Symbol	IS_COND		1081622						
ANR	1082459	Symbol	jump -> u . target		1081622						
ANR	1082460	Symbol	compiler -> jumps		1081622						
ANR	1082461	Symbol	label -> size		1081622						
ANR	1082462	Symbol	jump -> next		1081622						
ANR	1082463	Symbol	code		1081622						
ANR	1082464	Symbol	* * jump		1081622						
ANR	1082465	Symbol	* jump		1081622						
ANR	1082466	Symbol	jump -> u		1081622						
ANR	1082467	Symbol	jump -> flags		1081622						
ANR	1082468	Symbol	word_count		1081622						
ANR	1082469	Symbol	code_ptr		1081622						
ANR	1082470	Symbol	BCx		1081622						
ANR	1082471	Symbol	compiler		1081622						
ANR	1082472	Symbol	addr		1081622						
ANR	1082473	Symbol	* buf_ptr		1081622						
ANR	1082474	Symbol	const_		1081622						
ANR	1082475	Symbol	compiler -> consts		1081622						
ANR	1082476	Symbol	* const_		1081622						
ANR	1082477	Symbol	label		1081622						
ANR	1082478	Symbol	buf		1081622						
ANR	1082479	Symbol	REMOVE_COND		1081622						
ANR	1082480	Symbol	sljit_generate_code		1081622						
ANR	1082481	Symbol	compiler -> size		1081622						
ANR	1082482	Symbol	* jump -> u		1081622						
ANR	1082483	Symbol	Bx		1081622						
ANR	1082484	Symbol	PATCH_B		1081622						
ANR	1082485	Symbol	jump -> u . label -> addr		1081622						
ANR	1082486	Symbol	jump -> u . label		1081622						
ANR	1082487	Symbol	SLJIT_ERR_COMPILED		1081622						
ANR	1082488	Symbol	compiler -> error		1081622						
ANR	1082489	Symbol	* label		1081622						
ANR	1082490	Function	sljit_emit_enter	574:0:17516:20054							
ANR	1082491	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1082490	0					
ANR	1082492	CompoundStatement		577:0:17732:20054	1082490	0					
ANR	1082493	IdentifierDeclStatement	"sljit_si i , tmp , offs ;"	578:1:17735:17756	1082490	0	True				
ANR	1082494	IdentifierDecl	i		1082490	0					
ANR	1082495	IdentifierDeclType	sljit_si		1082490	0					
ANR	1082496	Identifier	i		1082490	1					
ANR	1082497	IdentifierDecl	tmp		1082490	1					
ANR	1082498	IdentifierDeclType	sljit_si		1082490	0					
ANR	1082499	Identifier	tmp		1082490	1					
ANR	1082500	IdentifierDecl	offs		1082490	2					
ANR	1082501	IdentifierDeclType	sljit_si		1082490	0					
ANR	1082502	Identifier	offs		1082490	1					
ANR	1082503	ExpressionStatement	CHECK_ERROR ( )	580:1:17760:17773	1082490	1	True				
ANR	1082504	CallExpression	CHECK_ERROR ( )		1082490	0					
ANR	1082505	Callee	CHECK_ERROR		1082490	0					
ANR	1082506	Identifier	CHECK_ERROR		1082490	0					
ANR	1082507	ArgumentList			1082490	1					
ANR	1082508	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	581:1:17776:17882	1082490	2	True				
ANR	1082509	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1082490	0					
ANR	1082510	Callee	CHECK		1082490	0					
ANR	1082511	Identifier	CHECK		1082490	0					
ANR	1082512	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1082490	1					
ANR	1082513	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1082490	0					
ANR	1082514	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1082490	0					
ANR	1082515	Callee	check_sljit_emit_enter		1082490	0					
ANR	1082516	Identifier	check_sljit_emit_enter		1082490	0					
ANR	1082517	ArgumentList	compiler		1082490	1					
ANR	1082518	Argument	compiler		1082490	0					
ANR	1082519	Identifier	compiler		1082490	0					
ANR	1082520	Argument	options		1082490	1					
ANR	1082521	Identifier	options		1082490	0					
ANR	1082522	Argument	args		1082490	2					
ANR	1082523	Identifier	args		1082490	0					
ANR	1082524	Argument	scratches		1082490	3					
ANR	1082525	Identifier	scratches		1082490	0					
ANR	1082526	Argument	saveds		1082490	4					
ANR	1082527	Identifier	saveds		1082490	0					
ANR	1082528	Argument	fscratches		1082490	5					
ANR	1082529	Identifier	fscratches		1082490	0					
ANR	1082530	Argument	fsaveds		1082490	6					
ANR	1082531	Identifier	fsaveds		1082490	0					
ANR	1082532	Argument	local_size		1082490	7					
ANR	1082533	Identifier	local_size		1082490	0					
ANR	1082534	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	582:1:17885:17976	1082490	3	True				
ANR	1082535	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1082490	0					
ANR	1082536	Callee	set_emit_enter		1082490	0					
ANR	1082537	Identifier	set_emit_enter		1082490	0					
ANR	1082538	ArgumentList	compiler		1082490	1					
ANR	1082539	Argument	compiler		1082490	0					
ANR	1082540	Identifier	compiler		1082490	0					
ANR	1082541	Argument	options		1082490	1					
ANR	1082542	Identifier	options		1082490	0					
ANR	1082543	Argument	args		1082490	2					
ANR	1082544	Identifier	args		1082490	0					
ANR	1082545	Argument	scratches		1082490	3					
ANR	1082546	Identifier	scratches		1082490	0					
ANR	1082547	Argument	saveds		1082490	4					
ANR	1082548	Identifier	saveds		1082490	0					
ANR	1082549	Argument	fscratches		1082490	5					
ANR	1082550	Identifier	fscratches		1082490	0					
ANR	1082551	Argument	fsaveds		1082490	6					
ANR	1082552	Identifier	fsaveds		1082490	0					
ANR	1082553	Argument	local_size		1082490	7					
ANR	1082554	Identifier	local_size		1082490	0					
ANR	1082555	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLR | D ( 0 ) ) )"	584:1:17980:18021	1082490	4	True				
ANR	1082556	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLR | D ( 0 ) ) )"		1082490	0					
ANR	1082557	Callee	FAIL_IF		1082490	0					
ANR	1082558	Identifier	FAIL_IF		1082490	0					
ANR	1082559	ArgumentList	"push_inst ( compiler , MFLR | D ( 0 ) )"		1082490	1					
ANR	1082560	Argument	"push_inst ( compiler , MFLR | D ( 0 ) )"		1082490	0					
ANR	1082561	CallExpression	"push_inst ( compiler , MFLR | D ( 0 ) )"		1082490	0					
ANR	1082562	Callee	push_inst		1082490	0					
ANR	1082563	Identifier	push_inst		1082490	0					
ANR	1082564	ArgumentList	compiler		1082490	1					
ANR	1082565	Argument	compiler		1082490	0					
ANR	1082566	Identifier	compiler		1082490	0					
ANR	1082567	Argument	MFLR | D ( 0 )		1082490	1					
ANR	1082568	InclusiveOrExpression	MFLR | D ( 0 )		1082490	0		|			
ANR	1082569	Identifier	MFLR		1082490	0					
ANR	1082570	CallExpression	D ( 0 )		1082490	1					
ANR	1082571	Callee	D		1082490	0					
ANR	1082572	Identifier	D		1082490	0					
ANR	1082573	ArgumentList	0		1082490	1					
ANR	1082574	Argument	0		1082490	0					
ANR	1082575	PrimaryExpression	0		1082490	0					
ANR	1082576	ExpressionStatement	offs = - ( sljit_si ) ( sizeof ( sljit_sw ) )	585:1:18024:18060	1082490	5	True				
ANR	1082577	AssignmentExpression	offs = - ( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	0		=			
ANR	1082578	Identifier	offs		1082490	0					
ANR	1082579	UnaryOperationExpression	- ( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	1					
ANR	1082580	UnaryOperator	-		1082490	0					
ANR	1082581	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	1					
ANR	1082582	CastTarget	sljit_si		1082490	0					
ANR	1082583	SizeofExpression	sizeof ( sljit_sw )		1082490	1					
ANR	1082584	Sizeof	sizeof		1082490	0					
ANR	1082585	SizeofOperand	sljit_sw		1082490	1					
ANR	1082586	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	586:1:18063:18144	1082490	6	True				
ANR	1082587	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1082490	0					
ANR	1082588	Callee	FAIL_IF		1082490	0					
ANR	1082589	Identifier	FAIL_IF		1082490	0					
ANR	1082590	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	1					
ANR	1082591	Argument	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082592	CallExpression	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082593	Callee	push_inst		1082490	0					
ANR	1082594	Identifier	push_inst		1082490	0					
ANR	1082595	ArgumentList	compiler		1082490	1					
ANR	1082596	Argument	compiler		1082490	0					
ANR	1082597	Identifier	compiler		1082490	0					
ANR	1082598	Argument	STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1					
ANR	1082599	InclusiveOrExpression	STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	0		|			
ANR	1082600	Identifier	STACK_STORE		1082490	0					
ANR	1082601	InclusiveOrExpression	S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082602	CallExpression	S ( TMP_ZERO )		1082490	0					
ANR	1082603	Callee	S		1082490	0					
ANR	1082604	Identifier	S		1082490	0					
ANR	1082605	ArgumentList	TMP_ZERO		1082490	1					
ANR	1082606	Argument	TMP_ZERO		1082490	0					
ANR	1082607	Identifier	TMP_ZERO		1082490	0					
ANR	1082608	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082609	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1082610	Callee	A		1082490	0					
ANR	1082611	Identifier	A		1082490	0					
ANR	1082612	ArgumentList	SLJIT_SP		1082490	1					
ANR	1082613	Argument	SLJIT_SP		1082490	0					
ANR	1082614	Identifier	SLJIT_SP		1082490	0					
ANR	1082615	CallExpression	IMM ( offs )		1082490	1					
ANR	1082616	Callee	IMM		1082490	0					
ANR	1082617	Identifier	IMM		1082490	0					
ANR	1082618	ArgumentList	offs		1082490	1					
ANR	1082619	Argument	offs		1082490	0					
ANR	1082620	Identifier	offs		1082490	0					
ANR	1082621	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	588:1:18148:18244	1082490	7	True				
ANR	1082622	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1082490	0		=			
ANR	1082623	Identifier	tmp		1082490	0					
ANR	1082624	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1082490	1					
ANR	1082625	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1082490	0					
ANR	1082626	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1082490	0		<			
ANR	1082627	Identifier	saveds		1082490	0					
ANR	1082628	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1082490	1					
ANR	1082629	AdditiveExpression	SLJIT_S0 + 1 - saveds		1082490	1		+			
ANR	1082630	Identifier	SLJIT_S0		1082490	0					
ANR	1082631	AdditiveExpression	1 - saveds		1082490	1		-			
ANR	1082632	PrimaryExpression	1		1082490	0					
ANR	1082633	Identifier	saveds		1082490	1					
ANR	1082634	Identifier	SLJIT_FIRST_SAVED_REG		1082490	2					
ANR	1082635	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1082490	8					
ANR	1082636	ForInit	i = SLJIT_S0 ;	589:6:18252:18264	1082490	0	True				
ANR	1082637	AssignmentExpression	i = SLJIT_S0		1082490	0		=			
ANR	1082638	Identifier	i		1082490	0					
ANR	1082639	Identifier	SLJIT_S0		1082490	1					
ANR	1082640	Condition	i >= tmp	589:20:18266:18273	1082490	1	True				
ANR	1082641	RelationalExpression	i >= tmp		1082490	0		>=			
ANR	1082642	Identifier	i		1082490	0					
ANR	1082643	Identifier	tmp		1082490	1					
ANR	1082644	PostIncDecOperationExpression	i --	589:30:18276:18278	1082490	2	True				
ANR	1082645	Identifier	i		1082490	0					
ANR	1082646	IncDec	--		1082490	1					
ANR	1082647	CompoundStatement		13:35:548:548	1082490	3					
ANR	1082648	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	590:2:18285:18321	1082490	0	True				
ANR	1082649	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	0		-=			
ANR	1082650	Identifier	offs		1082490	0					
ANR	1082651	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	1					
ANR	1082652	CastTarget	sljit_si		1082490	0					
ANR	1082653	SizeofExpression	sizeof ( sljit_sw )		1082490	1					
ANR	1082654	Sizeof	sizeof		1082490	0					
ANR	1082655	SizeofOperand	sljit_sw		1082490	1					
ANR	1082656	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	591:2:18325:18399	1082490	1	True				
ANR	1082657	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1082490	0					
ANR	1082658	Callee	FAIL_IF		1082490	0					
ANR	1082659	Identifier	FAIL_IF		1082490	0					
ANR	1082660	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	1					
ANR	1082661	Argument	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082662	CallExpression	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082663	Callee	push_inst		1082490	0					
ANR	1082664	Identifier	push_inst		1082490	0					
ANR	1082665	ArgumentList	compiler		1082490	1					
ANR	1082666	Argument	compiler		1082490	0					
ANR	1082667	Identifier	compiler		1082490	0					
ANR	1082668	Argument	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1					
ANR	1082669	InclusiveOrExpression	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	0		|			
ANR	1082670	Identifier	STACK_STORE		1082490	0					
ANR	1082671	InclusiveOrExpression	S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082672	CallExpression	S ( i )		1082490	0					
ANR	1082673	Callee	S		1082490	0					
ANR	1082674	Identifier	S		1082490	0					
ANR	1082675	ArgumentList	i		1082490	1					
ANR	1082676	Argument	i		1082490	0					
ANR	1082677	Identifier	i		1082490	0					
ANR	1082678	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082679	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1082680	Callee	A		1082490	0					
ANR	1082681	Identifier	A		1082490	0					
ANR	1082682	ArgumentList	SLJIT_SP		1082490	1					
ANR	1082683	Argument	SLJIT_SP		1082490	0					
ANR	1082684	Identifier	SLJIT_SP		1082490	0					
ANR	1082685	CallExpression	IMM ( offs )		1082490	1					
ANR	1082686	Callee	IMM		1082490	0					
ANR	1082687	Identifier	IMM		1082490	0					
ANR	1082688	ArgumentList	offs		1082490	1					
ANR	1082689	Argument	offs		1082490	0					
ANR	1082690	Identifier	offs		1082490	0					
ANR	1082691	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1082490	9					
ANR	1082692	ForInit	i = scratches ;	594:6:18411:18424	1082490	0	True				
ANR	1082693	AssignmentExpression	i = scratches		1082490	0		=			
ANR	1082694	Identifier	i		1082490	0					
ANR	1082695	Identifier	scratches		1082490	1					
ANR	1082696	Condition	i >= SLJIT_FIRST_SAVED_REG	594:21:18426:18451	1082490	1	True				
ANR	1082697	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1082490	0		>=			
ANR	1082698	Identifier	i		1082490	0					
ANR	1082699	Identifier	SLJIT_FIRST_SAVED_REG		1082490	1					
ANR	1082700	PostIncDecOperationExpression	i --	594:49:18454:18456	1082490	2	True				
ANR	1082701	Identifier	i		1082490	0					
ANR	1082702	IncDec	--		1082490	1					
ANR	1082703	CompoundStatement		18:54:726:726	1082490	3					
ANR	1082704	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	595:2:18463:18499	1082490	0	True				
ANR	1082705	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	0		-=			
ANR	1082706	Identifier	offs		1082490	0					
ANR	1082707	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1082490	1					
ANR	1082708	CastTarget	sljit_si		1082490	0					
ANR	1082709	SizeofExpression	sizeof ( sljit_sw )		1082490	1					
ANR	1082710	Sizeof	sizeof		1082490	0					
ANR	1082711	SizeofOperand	sljit_sw		1082490	1					
ANR	1082712	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	596:2:18503:18577	1082490	1	True				
ANR	1082713	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1082490	0					
ANR	1082714	Callee	FAIL_IF		1082490	0					
ANR	1082715	Identifier	FAIL_IF		1082490	0					
ANR	1082716	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	1					
ANR	1082717	Argument	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082718	CallExpression	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1082490	0					
ANR	1082719	Callee	push_inst		1082490	0					
ANR	1082720	Identifier	push_inst		1082490	0					
ANR	1082721	ArgumentList	compiler		1082490	1					
ANR	1082722	Argument	compiler		1082490	0					
ANR	1082723	Identifier	compiler		1082490	0					
ANR	1082724	Argument	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1					
ANR	1082725	InclusiveOrExpression	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	0		|			
ANR	1082726	Identifier	STACK_STORE		1082490	0					
ANR	1082727	InclusiveOrExpression	S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082728	CallExpression	S ( i )		1082490	0					
ANR	1082729	Callee	S		1082490	0					
ANR	1082730	Identifier	S		1082490	0					
ANR	1082731	ArgumentList	i		1082490	1					
ANR	1082732	Argument	i		1082490	0					
ANR	1082733	Identifier	i		1082490	0					
ANR	1082734	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1082490	1		|			
ANR	1082735	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1082736	Callee	A		1082490	0					
ANR	1082737	Identifier	A		1082490	0					
ANR	1082738	ArgumentList	SLJIT_SP		1082490	1					
ANR	1082739	Argument	SLJIT_SP		1082490	0					
ANR	1082740	Identifier	SLJIT_SP		1082490	0					
ANR	1082741	CallExpression	IMM ( offs )		1082490	1					
ANR	1082742	Callee	IMM		1082490	0					
ANR	1082743	Identifier	IMM		1082490	0					
ANR	1082744	ArgumentList	offs		1082490	1					
ANR	1082745	Argument	offs		1082490	0					
ANR	1082746	Identifier	offs		1082490	0					
ANR	1082747	ExpressionStatement	"SLJIT_ASSERT ( offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 ) )"	599:1:18584:18683	1082490	10	True				
ANR	1082748	CallExpression	"SLJIT_ASSERT ( offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 ) )"		1082490	0					
ANR	1082749	Callee	SLJIT_ASSERT		1082490	0					
ANR	1082750	Identifier	SLJIT_ASSERT		1082490	0					
ANR	1082751	ArgumentList	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	1					
ANR	1082752	Argument	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	0					
ANR	1082753	EqualityExpression	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	0		==			
ANR	1082754	Identifier	offs		1082490	0					
ANR	1082755	UnaryOperationExpression	"- ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	1					
ANR	1082756	UnaryOperator	-		1082490	0					
ANR	1082757	CastExpression	"( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	1					
ANR	1082758	CastTarget	sljit_si		1082490	0					
ANR	1082759	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1082490	1					
ANR	1082760	Callee	GET_SAVED_REGISTERS_SIZE		1082490	0					
ANR	1082761	Identifier	GET_SAVED_REGISTERS_SIZE		1082490	0					
ANR	1082762	ArgumentList	compiler -> scratches		1082490	1					
ANR	1082763	Argument	compiler -> scratches		1082490	0					
ANR	1082764	PtrMemberAccess	compiler -> scratches		1082490	0					
ANR	1082765	Identifier	compiler		1082490	0					
ANR	1082766	Identifier	scratches		1082490	1					
ANR	1082767	Argument	compiler -> saveds		1082490	1					
ANR	1082768	PtrMemberAccess	compiler -> saveds		1082490	0					
ANR	1082769	Identifier	compiler		1082490	0					
ANR	1082770	Identifier	saveds		1082490	1					
ANR	1082771	Argument	1		1082490	2					
ANR	1082772	PrimaryExpression	1		1082490	0					
ANR	1082773	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"	602:1:18754:18844	1082490	11	True				
ANR	1082774	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"		1082490	0					
ANR	1082775	Callee	FAIL_IF		1082490	0					
ANR	1082776	Identifier	FAIL_IF		1082490	0					
ANR	1082777	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1082490	1					
ANR	1082778	Argument	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1082490	0					
ANR	1082779	CallExpression	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1082490	0					
ANR	1082780	Callee	push_inst		1082490	0					
ANR	1082781	Identifier	push_inst		1082490	0					
ANR	1082782	ArgumentList	compiler		1082490	1					
ANR	1082783	Argument	compiler		1082490	0					
ANR	1082784	Identifier	compiler		1082490	0					
ANR	1082785	Argument	STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1082490	1					
ANR	1082786	InclusiveOrExpression	STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1082490	0		|			
ANR	1082787	Identifier	STACK_STORE		1082490	0					
ANR	1082788	InclusiveOrExpression	S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1082490	1		|			
ANR	1082789	CallExpression	S ( 0 )		1082490	0					
ANR	1082790	Callee	S		1082490	0					
ANR	1082791	Identifier	S		1082490	0					
ANR	1082792	ArgumentList	0		1082490	1					
ANR	1082793	Argument	0		1082490	0					
ANR	1082794	PrimaryExpression	0		1082490	0					
ANR	1082795	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1082490	1		|			
ANR	1082796	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1082797	Callee	A		1082490	0					
ANR	1082798	Identifier	A		1082490	0					
ANR	1082799	ArgumentList	SLJIT_SP		1082490	1					
ANR	1082800	Argument	SLJIT_SP		1082490	0					
ANR	1082801	Identifier	SLJIT_SP		1082490	0					
ANR	1082802	CallExpression	IMM ( 2 * sizeof ( sljit_sw ) )		1082490	1					
ANR	1082803	Callee	IMM		1082490	0					
ANR	1082804	Identifier	IMM		1082490	0					
ANR	1082805	ArgumentList	2 * sizeof ( sljit_sw )		1082490	1					
ANR	1082806	Argument	2 * sizeof ( sljit_sw )		1082490	0					
ANR	1082807	MultiplicativeExpression	2 * sizeof ( sljit_sw )		1082490	0		*			
ANR	1082808	PrimaryExpression	2		1082490	0					
ANR	1082809	SizeofExpression	sizeof ( sljit_sw )		1082490	1					
ANR	1082810	Sizeof	sizeof		1082490	0					
ANR	1082811	SizeofOperand	sljit_sw		1082490	1					
ANR	1082812	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 ) )"	607:1:18950:19009	1082490	12	True				
ANR	1082813	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 ) )"		1082490	0					
ANR	1082814	Callee	FAIL_IF		1082490	0					
ANR	1082815	Identifier	FAIL_IF		1082490	0					
ANR	1082816	ArgumentList	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1082490	1					
ANR	1082817	Argument	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1082490	0					
ANR	1082818	CallExpression	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1082490	0					
ANR	1082819	Callee	push_inst		1082490	0					
ANR	1082820	Identifier	push_inst		1082490	0					
ANR	1082821	ArgumentList	compiler		1082490	1					
ANR	1082822	Argument	compiler		1082490	0					
ANR	1082823	Identifier	compiler		1082490	0					
ANR	1082824	Argument	ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0		1082490	1					
ANR	1082825	InclusiveOrExpression	ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0		1082490	0		|			
ANR	1082826	Identifier	ADDI		1082490	0					
ANR	1082827	InclusiveOrExpression	D ( TMP_ZERO ) | A ( 0 ) | 0		1082490	1		|			
ANR	1082828	CallExpression	D ( TMP_ZERO )		1082490	0					
ANR	1082829	Callee	D		1082490	0					
ANR	1082830	Identifier	D		1082490	0					
ANR	1082831	ArgumentList	TMP_ZERO		1082490	1					
ANR	1082832	Argument	TMP_ZERO		1082490	0					
ANR	1082833	Identifier	TMP_ZERO		1082490	0					
ANR	1082834	InclusiveOrExpression	A ( 0 ) | 0		1082490	1		|			
ANR	1082835	CallExpression	A ( 0 )		1082490	0					
ANR	1082836	Callee	A		1082490	0					
ANR	1082837	Identifier	A		1082490	0					
ANR	1082838	ArgumentList	0		1082490	1					
ANR	1082839	Argument	0		1082490	0					
ANR	1082840	PrimaryExpression	0		1082490	0					
ANR	1082841	PrimaryExpression	0		1082490	1					
ANR	1082842	IfStatement	if ( args >= 1 )		1082490	13					
ANR	1082843	Condition	args >= 1	608:5:19016:19024	1082490	0	True				
ANR	1082844	RelationalExpression	args >= 1		1082490	0		>=			
ANR	1082845	Identifier	args		1082490	0					
ANR	1082846	PrimaryExpression	1		1082490	1					
ANR	1082847	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) ) )"	609:2:19029:19103	1082490	1	True				
ANR	1082848	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) ) )"		1082490	0					
ANR	1082849	Callee	FAIL_IF		1082490	0					
ANR	1082850	Identifier	FAIL_IF		1082490	0					
ANR	1082851	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1082490	1					
ANR	1082852	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1082490	0					
ANR	1082853	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1082490	0					
ANR	1082854	Callee	push_inst		1082490	0					
ANR	1082855	Identifier	push_inst		1082490	0					
ANR	1082856	ArgumentList	compiler		1082490	1					
ANR	1082857	Argument	compiler		1082490	0					
ANR	1082858	Identifier	compiler		1082490	0					
ANR	1082859	Argument	OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1082490	1					
ANR	1082860	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1082490	0		|			
ANR	1082861	Identifier	OR		1082490	0					
ANR	1082862	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1082490	1		|			
ANR	1082863	CallExpression	S ( SLJIT_R0 )		1082490	0					
ANR	1082864	Callee	S		1082490	0					
ANR	1082865	Identifier	S		1082490	0					
ANR	1082866	ArgumentList	SLJIT_R0		1082490	1					
ANR	1082867	Argument	SLJIT_R0		1082490	0					
ANR	1082868	Identifier	SLJIT_R0		1082490	0					
ANR	1082869	InclusiveOrExpression	A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1082490	1		|			
ANR	1082870	CallExpression	A ( SLJIT_S0 )		1082490	0					
ANR	1082871	Callee	A		1082490	0					
ANR	1082872	Identifier	A		1082490	0					
ANR	1082873	ArgumentList	SLJIT_S0		1082490	1					
ANR	1082874	Argument	SLJIT_S0		1082490	0					
ANR	1082875	Identifier	SLJIT_S0		1082490	0					
ANR	1082876	CallExpression	B ( SLJIT_R0 )		1082490	1					
ANR	1082877	Callee	B		1082490	0					
ANR	1082878	Identifier	B		1082490	0					
ANR	1082879	ArgumentList	SLJIT_R0		1082490	1					
ANR	1082880	Argument	SLJIT_R0		1082490	0					
ANR	1082881	Identifier	SLJIT_R0		1082490	0					
ANR	1082882	IfStatement	if ( args >= 2 )		1082490	14					
ANR	1082883	Condition	args >= 2	610:5:19110:19118	1082490	0	True				
ANR	1082884	RelationalExpression	args >= 2		1082490	0		>=			
ANR	1082885	Identifier	args		1082490	0					
ANR	1082886	PrimaryExpression	2		1082490	1					
ANR	1082887	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) ) )"	611:2:19123:19197	1082490	1	True				
ANR	1082888	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) ) )"		1082490	0					
ANR	1082889	Callee	FAIL_IF		1082490	0					
ANR	1082890	Identifier	FAIL_IF		1082490	0					
ANR	1082891	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1082490	1					
ANR	1082892	Argument	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1082490	0					
ANR	1082893	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1082490	0					
ANR	1082894	Callee	push_inst		1082490	0					
ANR	1082895	Identifier	push_inst		1082490	0					
ANR	1082896	ArgumentList	compiler		1082490	1					
ANR	1082897	Argument	compiler		1082490	0					
ANR	1082898	Identifier	compiler		1082490	0					
ANR	1082899	Argument	OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1082490	1					
ANR	1082900	InclusiveOrExpression	OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1082490	0		|			
ANR	1082901	Identifier	OR		1082490	0					
ANR	1082902	InclusiveOrExpression	S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1082490	1		|			
ANR	1082903	CallExpression	S ( SLJIT_R1 )		1082490	0					
ANR	1082904	Callee	S		1082490	0					
ANR	1082905	Identifier	S		1082490	0					
ANR	1082906	ArgumentList	SLJIT_R1		1082490	1					
ANR	1082907	Argument	SLJIT_R1		1082490	0					
ANR	1082908	Identifier	SLJIT_R1		1082490	0					
ANR	1082909	InclusiveOrExpression	A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1082490	1		|			
ANR	1082910	CallExpression	A ( SLJIT_S1 )		1082490	0					
ANR	1082911	Callee	A		1082490	0					
ANR	1082912	Identifier	A		1082490	0					
ANR	1082913	ArgumentList	SLJIT_S1		1082490	1					
ANR	1082914	Argument	SLJIT_S1		1082490	0					
ANR	1082915	Identifier	SLJIT_S1		1082490	0					
ANR	1082916	CallExpression	B ( SLJIT_R1 )		1082490	1					
ANR	1082917	Callee	B		1082490	0					
ANR	1082918	Identifier	B		1082490	0					
ANR	1082919	ArgumentList	SLJIT_R1		1082490	1					
ANR	1082920	Argument	SLJIT_R1		1082490	0					
ANR	1082921	Identifier	SLJIT_R1		1082490	0					
ANR	1082922	IfStatement	if ( args >= 3 )		1082490	15					
ANR	1082923	Condition	args >= 3	612:5:19204:19212	1082490	0	True				
ANR	1082924	RelationalExpression	args >= 3		1082490	0		>=			
ANR	1082925	Identifier	args		1082490	0					
ANR	1082926	PrimaryExpression	3		1082490	1					
ANR	1082927	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) ) )"	613:2:19217:19291	1082490	1	True				
ANR	1082928	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) ) )"		1082490	0					
ANR	1082929	Callee	FAIL_IF		1082490	0					
ANR	1082930	Identifier	FAIL_IF		1082490	0					
ANR	1082931	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1082490	1					
ANR	1082932	Argument	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1082490	0					
ANR	1082933	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1082490	0					
ANR	1082934	Callee	push_inst		1082490	0					
ANR	1082935	Identifier	push_inst		1082490	0					
ANR	1082936	ArgumentList	compiler		1082490	1					
ANR	1082937	Argument	compiler		1082490	0					
ANR	1082938	Identifier	compiler		1082490	0					
ANR	1082939	Argument	OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1082490	1					
ANR	1082940	InclusiveOrExpression	OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1082490	0		|			
ANR	1082941	Identifier	OR		1082490	0					
ANR	1082942	InclusiveOrExpression	S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1082490	1		|			
ANR	1082943	CallExpression	S ( SLJIT_R2 )		1082490	0					
ANR	1082944	Callee	S		1082490	0					
ANR	1082945	Identifier	S		1082490	0					
ANR	1082946	ArgumentList	SLJIT_R2		1082490	1					
ANR	1082947	Argument	SLJIT_R2		1082490	0					
ANR	1082948	Identifier	SLJIT_R2		1082490	0					
ANR	1082949	InclusiveOrExpression	A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1082490	1		|			
ANR	1082950	CallExpression	A ( SLJIT_S2 )		1082490	0					
ANR	1082951	Callee	A		1082490	0					
ANR	1082952	Identifier	A		1082490	0					
ANR	1082953	ArgumentList	SLJIT_S2		1082490	1					
ANR	1082954	Argument	SLJIT_S2		1082490	0					
ANR	1082955	Identifier	SLJIT_S2		1082490	0					
ANR	1082956	CallExpression	B ( SLJIT_R2 )		1082490	1					
ANR	1082957	Callee	B		1082490	0					
ANR	1082958	Identifier	B		1082490	0					
ANR	1082959	ArgumentList	SLJIT_R2		1082490	1					
ANR	1082960	Argument	SLJIT_R2		1082490	0					
ANR	1082961	Identifier	SLJIT_R2		1082490	0					
ANR	1082962	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	615:1:19295:19377	1082490	16	True				
ANR	1082963	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1082490	0		+=			
ANR	1082964	Identifier	local_size		1082490	0					
ANR	1082965	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1082490	1		+			
ANR	1082966	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1082490	0					
ANR	1082967	Callee	GET_SAVED_REGISTERS_SIZE		1082490	0					
ANR	1082968	Identifier	GET_SAVED_REGISTERS_SIZE		1082490	0					
ANR	1082969	ArgumentList	scratches		1082490	1					
ANR	1082970	Argument	scratches		1082490	0					
ANR	1082971	Identifier	scratches		1082490	0					
ANR	1082972	Argument	saveds		1082490	1					
ANR	1082973	Identifier	saveds		1082490	0					
ANR	1082974	Argument	1		1082490	2					
ANR	1082975	PrimaryExpression	1		1082490	0					
ANR	1082976	Identifier	SLJIT_LOCALS_OFFSET		1082490	1					
ANR	1082977	ExpressionStatement	local_size = ( local_size + 15 ) & ~0xf	616:1:19380:19417	1082490	17	True				
ANR	1082978	AssignmentExpression	local_size = ( local_size + 15 ) & ~0xf		1082490	0		=			
ANR	1082979	Identifier	local_size		1082490	0					
ANR	1082980	BitAndExpression	( local_size + 15 ) & ~0xf		1082490	1		&			
ANR	1082981	AdditiveExpression	local_size + 15		1082490	0		+			
ANR	1082982	Identifier	local_size		1082490	0					
ANR	1082983	PrimaryExpression	15		1082490	1					
ANR	1082984	Identifier	~0xf		1082490	1					
ANR	1082985	ExpressionStatement	compiler -> local_size = local_size	617:1:19420:19453	1082490	18	True				
ANR	1082986	AssignmentExpression	compiler -> local_size = local_size		1082490	0		=			
ANR	1082987	PtrMemberAccess	compiler -> local_size		1082490	0					
ANR	1082988	Identifier	compiler		1082490	0					
ANR	1082989	Identifier	local_size		1082490	1					
ANR	1082990	Identifier	local_size		1082490	1					
ANR	1082991	IfStatement	if ( local_size <= SIMM_MAX )		1082490	19					
ANR	1082992	Condition	local_size <= SIMM_MAX	620:5:19518:19539	1082490	0	True				
ANR	1082993	RelationalExpression	local_size <= SIMM_MAX		1082490	0		<=			
ANR	1082994	Identifier	local_size		1082490	0					
ANR	1082995	Identifier	SIMM_MAX		1082490	1					
ANR	1082996	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) ) )"	621:2:19544:19625	1082490	1	True				
ANR	1082997	CallExpression	"FAIL_IF ( push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) ) )"		1082490	0					
ANR	1082998	Callee	FAIL_IF		1082490	0					
ANR	1082999	Identifier	FAIL_IF		1082490	0					
ANR	1083000	ArgumentList	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1082490	1					
ANR	1083001	Argument	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1082490	0					
ANR	1083002	CallExpression	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1082490	0					
ANR	1083003	Callee	push_inst		1082490	0					
ANR	1083004	Identifier	push_inst		1082490	0					
ANR	1083005	ArgumentList	compiler		1082490	1					
ANR	1083006	Argument	compiler		1082490	0					
ANR	1083007	Identifier	compiler		1082490	0					
ANR	1083008	Argument	STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1082490	1					
ANR	1083009	InclusiveOrExpression	STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1082490	0		|			
ANR	1083010	Identifier	STWU		1082490	0					
ANR	1083011	InclusiveOrExpression	S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1082490	1		|			
ANR	1083012	CallExpression	S ( SLJIT_SP )		1082490	0					
ANR	1083013	Callee	S		1082490	0					
ANR	1083014	Identifier	S		1082490	0					
ANR	1083015	ArgumentList	SLJIT_SP		1082490	1					
ANR	1083016	Argument	SLJIT_SP		1082490	0					
ANR	1083017	Identifier	SLJIT_SP		1082490	0					
ANR	1083018	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( - local_size )		1082490	1		|			
ANR	1083019	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1083020	Callee	A		1082490	0					
ANR	1083021	Identifier	A		1082490	0					
ANR	1083022	ArgumentList	SLJIT_SP		1082490	1					
ANR	1083023	Argument	SLJIT_SP		1082490	0					
ANR	1083024	Identifier	SLJIT_SP		1082490	0					
ANR	1083025	CallExpression	IMM ( - local_size )		1082490	1					
ANR	1083026	Callee	IMM		1082490	0					
ANR	1083027	Identifier	IMM		1082490	0					
ANR	1083028	ArgumentList	- local_size		1082490	1					
ANR	1083029	Argument	- local_size		1082490	0					
ANR	1083030	UnaryOperationExpression	- local_size		1082490	0					
ANR	1083031	UnaryOperator	-		1082490	0					
ANR	1083032	Identifier	local_size		1082490	1					
ANR	1083033	ElseStatement	else		1082490	0					
ANR	1083034	CompoundStatement		46:6:1900:1900	1082490	0					
ANR	1083035	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , 0 , - local_size ) )"	623:2:19637:19686	1082490	0	True				
ANR	1083036	CallExpression	"FAIL_IF ( load_immediate ( compiler , 0 , - local_size ) )"		1082490	0					
ANR	1083037	Callee	FAIL_IF		1082490	0					
ANR	1083038	Identifier	FAIL_IF		1082490	0					
ANR	1083039	ArgumentList	"load_immediate ( compiler , 0 , - local_size )"		1082490	1					
ANR	1083040	Argument	"load_immediate ( compiler , 0 , - local_size )"		1082490	0					
ANR	1083041	CallExpression	"load_immediate ( compiler , 0 , - local_size )"		1082490	0					
ANR	1083042	Callee	load_immediate		1082490	0					
ANR	1083043	Identifier	load_immediate		1082490	0					
ANR	1083044	ArgumentList	compiler		1082490	1					
ANR	1083045	Argument	compiler		1082490	0					
ANR	1083046	Identifier	compiler		1082490	0					
ANR	1083047	Argument	0		1082490	1					
ANR	1083048	PrimaryExpression	0		1082490	0					
ANR	1083049	Argument	- local_size		1082490	2					
ANR	1083050	UnaryOperationExpression	- local_size		1082490	0					
ANR	1083051	UnaryOperator	-		1082490	0					
ANR	1083052	Identifier	local_size		1082490	1					
ANR	1083053	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"	624:2:19690:19760	1082490	1	True				
ANR	1083054	CallExpression	"FAIL_IF ( push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"		1082490	0					
ANR	1083055	Callee	FAIL_IF		1082490	0					
ANR	1083056	Identifier	FAIL_IF		1082490	0					
ANR	1083057	ArgumentList	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1082490	1					
ANR	1083058	Argument	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1082490	0					
ANR	1083059	CallExpression	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1082490	0					
ANR	1083060	Callee	push_inst		1082490	0					
ANR	1083061	Identifier	push_inst		1082490	0					
ANR	1083062	ArgumentList	compiler		1082490	1					
ANR	1083063	Argument	compiler		1082490	0					
ANR	1083064	Identifier	compiler		1082490	0					
ANR	1083065	Argument	STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1082490	1					
ANR	1083066	InclusiveOrExpression	STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1082490	0		|			
ANR	1083067	Identifier	STWUX		1082490	0					
ANR	1083068	InclusiveOrExpression	S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1082490	1		|			
ANR	1083069	CallExpression	S ( SLJIT_SP )		1082490	0					
ANR	1083070	Callee	S		1082490	0					
ANR	1083071	Identifier	S		1082490	0					
ANR	1083072	ArgumentList	SLJIT_SP		1082490	1					
ANR	1083073	Argument	SLJIT_SP		1082490	0					
ANR	1083074	Identifier	SLJIT_SP		1082490	0					
ANR	1083075	InclusiveOrExpression	A ( SLJIT_SP ) | B ( 0 )		1082490	1		|			
ANR	1083076	CallExpression	A ( SLJIT_SP )		1082490	0					
ANR	1083077	Callee	A		1082490	0					
ANR	1083078	Identifier	A		1082490	0					
ANR	1083079	ArgumentList	SLJIT_SP		1082490	1					
ANR	1083080	Argument	SLJIT_SP		1082490	0					
ANR	1083081	Identifier	SLJIT_SP		1082490	0					
ANR	1083082	CallExpression	B ( 0 )		1082490	1					
ANR	1083083	Callee	B		1082490	0					
ANR	1083084	Identifier	B		1082490	0					
ANR	1083085	ArgumentList	0		1082490	1					
ANR	1083086	Argument	0		1082490	0					
ANR	1083087	PrimaryExpression	0		1082490	0					
ANR	1083088	ReturnStatement	return SLJIT_SUCCESS ;	635:1:20032:20052	1082490	20	True				
ANR	1083089	Identifier	SLJIT_SUCCESS		1082490	0					
ANR	1083090	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1082490	1					
ANR	1083091	Identifier	sljit_emit_enter		1082490	2					
ANR	1083092	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1082490	3					
ANR	1083093	Parameter	struct sljit_compiler * compiler	574:51:17567:17597	1082490	0	True				
ANR	1083094	ParameterType	struct sljit_compiler *		1082490	0					
ANR	1083095	Identifier	compiler		1082490	1					
ANR	1083096	Parameter	sljit_si options	575:1:17601:17616	1082490	1	True				
ANR	1083097	ParameterType	sljit_si		1082490	0					
ANR	1083098	Identifier	options		1082490	1					
ANR	1083099	Parameter	sljit_si args	575:19:17619:17631	1082490	2	True				
ANR	1083100	ParameterType	sljit_si		1082490	0					
ANR	1083101	Identifier	args		1082490	1					
ANR	1083102	Parameter	sljit_si scratches	575:34:17634:17651	1082490	3	True				
ANR	1083103	ParameterType	sljit_si		1082490	0					
ANR	1083104	Identifier	scratches		1082490	1					
ANR	1083105	Parameter	sljit_si saveds	575:54:17654:17668	1082490	4	True				
ANR	1083106	ParameterType	sljit_si		1082490	0					
ANR	1083107	Identifier	saveds		1082490	1					
ANR	1083108	Parameter	sljit_si fscratches	576:1:17672:17690	1082490	5	True				
ANR	1083109	ParameterType	sljit_si		1082490	0					
ANR	1083110	Identifier	fscratches		1082490	1					
ANR	1083111	Parameter	sljit_si fsaveds	576:22:17693:17708	1082490	6	True				
ANR	1083112	ParameterType	sljit_si		1082490	0					
ANR	1083113	Identifier	fsaveds		1082490	1					
ANR	1083114	Parameter	sljit_si local_size	576:40:17711:17729	1082490	7	True				
ANR	1083115	ParameterType	sljit_si		1082490	0					
ANR	1083116	Identifier	local_size		1082490	1					
ANR	1083117	CFGEntryNode	ENTRY		1082490		True				
ANR	1083118	CFGExitNode	EXIT		1082490		True				
ANR	1083119	Symbol	STWUX		1082490						
ANR	1083120	Symbol	A		1082490						
ANR	1083121	Symbol	compiler -> scratches		1082490						
ANR	1083122	Symbol	B		1082490						
ANR	1083123	Symbol	D		1082490						
ANR	1083124	Symbol	scratches		1082490						
ANR	1083125	Symbol	saveds		1082490						
ANR	1083126	Symbol	check_sljit_emit_enter		1082490						
ANR	1083127	Symbol	* compiler		1082490						
ANR	1083128	Symbol	SLJIT_R1		1082490						
ANR	1083129	Symbol	SIMM_MAX		1082490						
ANR	1083130	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1082490						
ANR	1083131	Symbol	SLJIT_R2		1082490						
ANR	1083132	Symbol	SLJIT_SP		1082490						
ANR	1083133	Symbol	SLJIT_R0		1082490						
ANR	1083134	Symbol	offs		1082490						
ANR	1083135	Symbol	S		1082490						
ANR	1083136	Symbol	load_immediate		1082490						
ANR	1083137	Symbol	tmp		1082490						
ANR	1083138	Symbol	SLJIT_LOCALS_OFFSET		1082490						
ANR	1083139	Symbol	options		1082490						
ANR	1083140	Symbol	STWU		1082490						
ANR	1083141	Symbol	~0xf		1082490						
ANR	1083142	Symbol	compiler		1082490						
ANR	1083143	Symbol	GET_SAVED_REGISTERS_SIZE		1082490						
ANR	1083144	Symbol	local_size		1082490						
ANR	1083145	Symbol	push_inst		1082490						
ANR	1083146	Symbol	OR		1082490						
ANR	1083147	Symbol	IMM		1082490						
ANR	1083148	Symbol	i		1082490						
ANR	1083149	Symbol	SLJIT_SUCCESS		1082490						
ANR	1083150	Symbol	SLJIT_S2		1082490						
ANR	1083151	Symbol	SLJIT_S0		1082490						
ANR	1083152	Symbol	SLJIT_S1		1082490						
ANR	1083153	Symbol	args		1082490						
ANR	1083154	Symbol	fscratches		1082490						
ANR	1083155	Symbol	compiler -> saveds		1082490						
ANR	1083156	Symbol	compiler -> local_size		1082490						
ANR	1083157	Symbol	fsaveds		1082490						
ANR	1083158	Symbol	ADDI		1082490						
ANR	1083159	Symbol	SLJIT_FIRST_SAVED_REG		1082490						
ANR	1083160	Symbol	TMP_ZERO		1082490						
ANR	1083161	Symbol	MFLR		1082490						
ANR	1083162	Symbol	STACK_STORE		1082490						
ANR	1083163	Function	sljit_set_context	638:0:20057:20656							
ANR	1083164	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1083163	0					
ANR	1083165	CompoundStatement		641:0:20274:20656	1083163	0					
ANR	1083166	ExpressionStatement	CHECK_ERROR ( )	642:1:20277:20290	1083163	0	True				
ANR	1083167	CallExpression	CHECK_ERROR ( )		1083163	0					
ANR	1083168	Callee	CHECK_ERROR		1083163	0					
ANR	1083169	Identifier	CHECK_ERROR		1083163	0					
ANR	1083170	ArgumentList			1083163	1					
ANR	1083171	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	643:1:20293:20400	1083163	1	True				
ANR	1083172	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1083163	0					
ANR	1083173	Callee	CHECK		1083163	0					
ANR	1083174	Identifier	CHECK		1083163	0					
ANR	1083175	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1083163	1					
ANR	1083176	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1083163	0					
ANR	1083177	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1083163	0					
ANR	1083178	Callee	check_sljit_set_context		1083163	0					
ANR	1083179	Identifier	check_sljit_set_context		1083163	0					
ANR	1083180	ArgumentList	compiler		1083163	1					
ANR	1083181	Argument	compiler		1083163	0					
ANR	1083182	Identifier	compiler		1083163	0					
ANR	1083183	Argument	options		1083163	1					
ANR	1083184	Identifier	options		1083163	0					
ANR	1083185	Argument	args		1083163	2					
ANR	1083186	Identifier	args		1083163	0					
ANR	1083187	Argument	scratches		1083163	3					
ANR	1083188	Identifier	scratches		1083163	0					
ANR	1083189	Argument	saveds		1083163	4					
ANR	1083190	Identifier	saveds		1083163	0					
ANR	1083191	Argument	fscratches		1083163	5					
ANR	1083192	Identifier	fscratches		1083163	0					
ANR	1083193	Argument	fsaveds		1083163	6					
ANR	1083194	Identifier	fsaveds		1083163	0					
ANR	1083195	Argument	local_size		1083163	7					
ANR	1083196	Identifier	local_size		1083163	0					
ANR	1083197	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	644:1:20403:20495	1083163	2	True				
ANR	1083198	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1083163	0					
ANR	1083199	Callee	set_set_context		1083163	0					
ANR	1083200	Identifier	set_set_context		1083163	0					
ANR	1083201	ArgumentList	compiler		1083163	1					
ANR	1083202	Argument	compiler		1083163	0					
ANR	1083203	Identifier	compiler		1083163	0					
ANR	1083204	Argument	options		1083163	1					
ANR	1083205	Identifier	options		1083163	0					
ANR	1083206	Argument	args		1083163	2					
ANR	1083207	Identifier	args		1083163	0					
ANR	1083208	Argument	scratches		1083163	3					
ANR	1083209	Identifier	scratches		1083163	0					
ANR	1083210	Argument	saveds		1083163	4					
ANR	1083211	Identifier	saveds		1083163	0					
ANR	1083212	Argument	fscratches		1083163	5					
ANR	1083213	Identifier	fscratches		1083163	0					
ANR	1083214	Argument	fsaveds		1083163	6					
ANR	1083215	Identifier	fsaveds		1083163	0					
ANR	1083216	Argument	local_size		1083163	7					
ANR	1083217	Identifier	local_size		1083163	0					
ANR	1083218	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	646:1:20499:20581	1083163	3	True				
ANR	1083219	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1083163	0		+=			
ANR	1083220	Identifier	local_size		1083163	0					
ANR	1083221	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1083163	1		+			
ANR	1083222	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1083163	0					
ANR	1083223	Callee	GET_SAVED_REGISTERS_SIZE		1083163	0					
ANR	1083224	Identifier	GET_SAVED_REGISTERS_SIZE		1083163	0					
ANR	1083225	ArgumentList	scratches		1083163	1					
ANR	1083226	Argument	scratches		1083163	0					
ANR	1083227	Identifier	scratches		1083163	0					
ANR	1083228	Argument	saveds		1083163	1					
ANR	1083229	Identifier	saveds		1083163	0					
ANR	1083230	Argument	1		1083163	2					
ANR	1083231	PrimaryExpression	1		1083163	0					
ANR	1083232	Identifier	SLJIT_LOCALS_OFFSET		1083163	1					
ANR	1083233	ExpressionStatement	compiler -> local_size = ( local_size + 15 ) & ~0xf	647:1:20584:20631	1083163	4	True				
ANR	1083234	AssignmentExpression	compiler -> local_size = ( local_size + 15 ) & ~0xf		1083163	0		=			
ANR	1083235	PtrMemberAccess	compiler -> local_size		1083163	0					
ANR	1083236	Identifier	compiler		1083163	0					
ANR	1083237	Identifier	local_size		1083163	1					
ANR	1083238	BitAndExpression	( local_size + 15 ) & ~0xf		1083163	1		&			
ANR	1083239	AdditiveExpression	local_size + 15		1083163	0		+			
ANR	1083240	Identifier	local_size		1083163	0					
ANR	1083241	PrimaryExpression	15		1083163	1					
ANR	1083242	Identifier	~0xf		1083163	1					
ANR	1083243	ReturnStatement	return SLJIT_SUCCESS ;	648:1:20634:20654	1083163	5	True				
ANR	1083244	Identifier	SLJIT_SUCCESS		1083163	0					
ANR	1083245	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1083163	1					
ANR	1083246	Identifier	sljit_set_context		1083163	2					
ANR	1083247	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1083163	3					
ANR	1083248	Parameter	struct sljit_compiler * compiler	638:52:20109:20139	1083163	0	True				
ANR	1083249	ParameterType	struct sljit_compiler *		1083163	0					
ANR	1083250	Identifier	compiler		1083163	1					
ANR	1083251	Parameter	sljit_si options	639:1:20143:20158	1083163	1	True				
ANR	1083252	ParameterType	sljit_si		1083163	0					
ANR	1083253	Identifier	options		1083163	1					
ANR	1083254	Parameter	sljit_si args	639:19:20161:20173	1083163	2	True				
ANR	1083255	ParameterType	sljit_si		1083163	0					
ANR	1083256	Identifier	args		1083163	1					
ANR	1083257	Parameter	sljit_si scratches	639:34:20176:20193	1083163	3	True				
ANR	1083258	ParameterType	sljit_si		1083163	0					
ANR	1083259	Identifier	scratches		1083163	1					
ANR	1083260	Parameter	sljit_si saveds	639:54:20196:20210	1083163	4	True				
ANR	1083261	ParameterType	sljit_si		1083163	0					
ANR	1083262	Identifier	saveds		1083163	1					
ANR	1083263	Parameter	sljit_si fscratches	640:1:20214:20232	1083163	5	True				
ANR	1083264	ParameterType	sljit_si		1083163	0					
ANR	1083265	Identifier	fscratches		1083163	1					
ANR	1083266	Parameter	sljit_si fsaveds	640:22:20235:20250	1083163	6	True				
ANR	1083267	ParameterType	sljit_si		1083163	0					
ANR	1083268	Identifier	fsaveds		1083163	1					
ANR	1083269	Parameter	sljit_si local_size	640:40:20253:20271	1083163	7	True				
ANR	1083270	ParameterType	sljit_si		1083163	0					
ANR	1083271	Identifier	local_size		1083163	1					
ANR	1083272	CFGEntryNode	ENTRY		1083163		True				
ANR	1083273	CFGExitNode	EXIT		1083163		True				
ANR	1083274	Symbol	GET_SAVED_REGISTERS_SIZE		1083163						
ANR	1083275	Symbol	local_size		1083163						
ANR	1083276	Symbol	scratches		1083163						
ANR	1083277	Symbol	saveds		1083163						
ANR	1083278	Symbol	check_sljit_set_context		1083163						
ANR	1083279	Symbol	SLJIT_SUCCESS		1083163						
ANR	1083280	Symbol	* compiler		1083163						
ANR	1083281	Symbol	args		1083163						
ANR	1083282	Symbol	fscratches		1083163						
ANR	1083283	Symbol	compiler -> local_size		1083163						
ANR	1083284	Symbol	fsaveds		1083163						
ANR	1083285	Symbol	SLJIT_LOCALS_OFFSET		1083163						
ANR	1083286	Symbol	options		1083163						
ANR	1083287	Symbol	~0xf		1083163						
ANR	1083288	Symbol	compiler		1083163						
ANR	1083289	Function	sljit_emit_return	651:0:20659:22294							
ANR	1083290	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1083289	0					
ANR	1083291	CompoundStatement		652:0:20786:22294	1083289	0					
ANR	1083292	IdentifierDeclStatement	"sljit_si i , tmp , offs ;"	653:1:20789:20810	1083289	0	True				
ANR	1083293	IdentifierDecl	i		1083289	0					
ANR	1083294	IdentifierDeclType	sljit_si		1083289	0					
ANR	1083295	Identifier	i		1083289	1					
ANR	1083296	IdentifierDecl	tmp		1083289	1					
ANR	1083297	IdentifierDeclType	sljit_si		1083289	0					
ANR	1083298	Identifier	tmp		1083289	1					
ANR	1083299	IdentifierDecl	offs		1083289	2					
ANR	1083300	IdentifierDeclType	sljit_si		1083289	0					
ANR	1083301	Identifier	offs		1083289	1					
ANR	1083302	ExpressionStatement	CHECK_ERROR ( )	655:1:20814:20827	1083289	1	True				
ANR	1083303	CallExpression	CHECK_ERROR ( )		1083289	0					
ANR	1083304	Callee	CHECK_ERROR		1083289	0					
ANR	1083305	Identifier	CHECK_ERROR		1083289	0					
ANR	1083306	ArgumentList			1083289	1					
ANR	1083307	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	656:1:20830:20885	1083289	2	True				
ANR	1083308	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1083289	0					
ANR	1083309	Callee	CHECK		1083289	0					
ANR	1083310	Identifier	CHECK		1083289	0					
ANR	1083311	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1083289	1					
ANR	1083312	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1083289	0					
ANR	1083313	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1083289	0					
ANR	1083314	Callee	check_sljit_emit_return		1083289	0					
ANR	1083315	Identifier	check_sljit_emit_return		1083289	0					
ANR	1083316	ArgumentList	compiler		1083289	1					
ANR	1083317	Argument	compiler		1083289	0					
ANR	1083318	Identifier	compiler		1083289	0					
ANR	1083319	Argument	op		1083289	1					
ANR	1083320	Identifier	op		1083289	0					
ANR	1083321	Argument	src		1083289	2					
ANR	1083322	Identifier	src		1083289	0					
ANR	1083323	Argument	srcw		1083289	3					
ANR	1083324	Identifier	srcw		1083289	0					
ANR	1083325	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	658:1:20889:20945	1083289	3	True				
ANR	1083326	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1083289	0					
ANR	1083327	Callee	FAIL_IF		1083289	0					
ANR	1083328	Identifier	FAIL_IF		1083289	0					
ANR	1083329	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1083289	1					
ANR	1083330	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1083289	0					
ANR	1083331	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1083289	0					
ANR	1083332	Callee	emit_mov_before_return		1083289	0					
ANR	1083333	Identifier	emit_mov_before_return		1083289	0					
ANR	1083334	ArgumentList	compiler		1083289	1					
ANR	1083335	Argument	compiler		1083289	0					
ANR	1083336	Identifier	compiler		1083289	0					
ANR	1083337	Argument	op		1083289	1					
ANR	1083338	Identifier	op		1083289	0					
ANR	1083339	Argument	src		1083289	2					
ANR	1083340	Identifier	src		1083289	0					
ANR	1083341	Argument	srcw		1083289	3					
ANR	1083342	Identifier	srcw		1083289	0					
ANR	1083343	IfStatement	if ( compiler -> local_size <= SIMM_MAX )		1083289	4					
ANR	1083344	Condition	compiler -> local_size <= SIMM_MAX	660:5:20953:20984	1083289	0	True				
ANR	1083345	RelationalExpression	compiler -> local_size <= SIMM_MAX		1083289	0		<=			
ANR	1083346	PtrMemberAccess	compiler -> local_size		1083289	0					
ANR	1083347	Identifier	compiler		1083289	0					
ANR	1083348	Identifier	local_size		1083289	1					
ANR	1083349	Identifier	SIMM_MAX		1083289	1					
ANR	1083350	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) ) )"	661:2:20989:21079	1083289	1	True				
ANR	1083351	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) ) )"		1083289	0					
ANR	1083352	Callee	FAIL_IF		1083289	0					
ANR	1083353	Identifier	FAIL_IF		1083289	0					
ANR	1083354	ArgumentList	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1083289	1					
ANR	1083355	Argument	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1083289	0					
ANR	1083356	CallExpression	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1083289	0					
ANR	1083357	Callee	push_inst		1083289	0					
ANR	1083358	Identifier	push_inst		1083289	0					
ANR	1083359	ArgumentList	compiler		1083289	1					
ANR	1083360	Argument	compiler		1083289	0					
ANR	1083361	Identifier	compiler		1083289	0					
ANR	1083362	Argument	ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1083289	1					
ANR	1083363	InclusiveOrExpression	ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1083289	0		|			
ANR	1083364	Identifier	ADDI		1083289	0					
ANR	1083365	InclusiveOrExpression	D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1083289	1		|			
ANR	1083366	CallExpression	D ( SLJIT_SP )		1083289	0					
ANR	1083367	Callee	D		1083289	0					
ANR	1083368	Identifier	D		1083289	0					
ANR	1083369	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083370	Argument	SLJIT_SP		1083289	0					
ANR	1083371	Identifier	SLJIT_SP		1083289	0					
ANR	1083372	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1083289	1		|			
ANR	1083373	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083374	Callee	A		1083289	0					
ANR	1083375	Identifier	A		1083289	0					
ANR	1083376	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083377	Argument	SLJIT_SP		1083289	0					
ANR	1083378	Identifier	SLJIT_SP		1083289	0					
ANR	1083379	CallExpression	IMM ( compiler -> local_size )		1083289	1					
ANR	1083380	Callee	IMM		1083289	0					
ANR	1083381	Identifier	IMM		1083289	0					
ANR	1083382	ArgumentList	compiler -> local_size		1083289	1					
ANR	1083383	Argument	compiler -> local_size		1083289	0					
ANR	1083384	PtrMemberAccess	compiler -> local_size		1083289	0					
ANR	1083385	Identifier	compiler		1083289	0					
ANR	1083386	Identifier	local_size		1083289	1					
ANR	1083387	ElseStatement	else		1083289	0					
ANR	1083388	CompoundStatement		11:6:300:300	1083289	0					
ANR	1083389	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , 0 , compiler -> local_size ) )"	663:2:21091:21149	1083289	0	True				
ANR	1083390	CallExpression	"FAIL_IF ( load_immediate ( compiler , 0 , compiler -> local_size ) )"		1083289	0					
ANR	1083391	Callee	FAIL_IF		1083289	0					
ANR	1083392	Identifier	FAIL_IF		1083289	0					
ANR	1083393	ArgumentList	"load_immediate ( compiler , 0 , compiler -> local_size )"		1083289	1					
ANR	1083394	Argument	"load_immediate ( compiler , 0 , compiler -> local_size )"		1083289	0					
ANR	1083395	CallExpression	"load_immediate ( compiler , 0 , compiler -> local_size )"		1083289	0					
ANR	1083396	Callee	load_immediate		1083289	0					
ANR	1083397	Identifier	load_immediate		1083289	0					
ANR	1083398	ArgumentList	compiler		1083289	1					
ANR	1083399	Argument	compiler		1083289	0					
ANR	1083400	Identifier	compiler		1083289	0					
ANR	1083401	Argument	0		1083289	1					
ANR	1083402	PrimaryExpression	0		1083289	0					
ANR	1083403	Argument	compiler -> local_size		1083289	2					
ANR	1083404	PtrMemberAccess	compiler -> local_size		1083289	0					
ANR	1083405	Identifier	compiler		1083289	0					
ANR	1083406	Identifier	local_size		1083289	1					
ANR	1083407	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"	664:2:21153:21221	1083289	1	True				
ANR	1083408	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"		1083289	0					
ANR	1083409	Callee	FAIL_IF		1083289	0					
ANR	1083410	Identifier	FAIL_IF		1083289	0					
ANR	1083411	ArgumentList	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1083289	1					
ANR	1083412	Argument	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1083289	0					
ANR	1083413	CallExpression	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1083289	0					
ANR	1083414	Callee	push_inst		1083289	0					
ANR	1083415	Identifier	push_inst		1083289	0					
ANR	1083416	ArgumentList	compiler		1083289	1					
ANR	1083417	Argument	compiler		1083289	0					
ANR	1083418	Identifier	compiler		1083289	0					
ANR	1083419	Argument	ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1083289	1					
ANR	1083420	InclusiveOrExpression	ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1083289	0		|			
ANR	1083421	Identifier	ADD		1083289	0					
ANR	1083422	InclusiveOrExpression	D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1083289	1		|			
ANR	1083423	CallExpression	D ( SLJIT_SP )		1083289	0					
ANR	1083424	Callee	D		1083289	0					
ANR	1083425	Identifier	D		1083289	0					
ANR	1083426	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083427	Argument	SLJIT_SP		1083289	0					
ANR	1083428	Identifier	SLJIT_SP		1083289	0					
ANR	1083429	InclusiveOrExpression	A ( SLJIT_SP ) | B ( 0 )		1083289	1		|			
ANR	1083430	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083431	Callee	A		1083289	0					
ANR	1083432	Identifier	A		1083289	0					
ANR	1083433	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083434	Argument	SLJIT_SP		1083289	0					
ANR	1083435	Identifier	SLJIT_SP		1083289	0					
ANR	1083436	CallExpression	B ( 0 )		1083289	1					
ANR	1083437	Callee	B		1083289	0					
ANR	1083438	Identifier	B		1083289	0					
ANR	1083439	ArgumentList	0		1083289	1					
ANR	1083440	Argument	0		1083289	0					
ANR	1083441	PrimaryExpression	0		1083289	0					
ANR	1083442	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"	668:1:21295:21384	1083289	5	True				
ANR	1083443	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"		1083289	0					
ANR	1083444	Callee	FAIL_IF		1083289	0					
ANR	1083445	Identifier	FAIL_IF		1083289	0					
ANR	1083446	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1083289	1					
ANR	1083447	Argument	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1083289	0					
ANR	1083448	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1083289	0					
ANR	1083449	Callee	push_inst		1083289	0					
ANR	1083450	Identifier	push_inst		1083289	0					
ANR	1083451	ArgumentList	compiler		1083289	1					
ANR	1083452	Argument	compiler		1083289	0					
ANR	1083453	Identifier	compiler		1083289	0					
ANR	1083454	Argument	STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1083289	1					
ANR	1083455	InclusiveOrExpression	STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1083289	0		|			
ANR	1083456	Identifier	STACK_LOAD		1083289	0					
ANR	1083457	InclusiveOrExpression	D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1083289	1		|			
ANR	1083458	CallExpression	D ( 0 )		1083289	0					
ANR	1083459	Callee	D		1083289	0					
ANR	1083460	Identifier	D		1083289	0					
ANR	1083461	ArgumentList	0		1083289	1					
ANR	1083462	Argument	0		1083289	0					
ANR	1083463	PrimaryExpression	0		1083289	0					
ANR	1083464	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1083289	1		|			
ANR	1083465	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083466	Callee	A		1083289	0					
ANR	1083467	Identifier	A		1083289	0					
ANR	1083468	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083469	Argument	SLJIT_SP		1083289	0					
ANR	1083470	Identifier	SLJIT_SP		1083289	0					
ANR	1083471	CallExpression	IMM ( 2 * sizeof ( sljit_sw ) )		1083289	1					
ANR	1083472	Callee	IMM		1083289	0					
ANR	1083473	Identifier	IMM		1083289	0					
ANR	1083474	ArgumentList	2 * sizeof ( sljit_sw )		1083289	1					
ANR	1083475	Argument	2 * sizeof ( sljit_sw )		1083289	0					
ANR	1083476	MultiplicativeExpression	2 * sizeof ( sljit_sw )		1083289	0		*			
ANR	1083477	PrimaryExpression	2		1083289	0					
ANR	1083478	SizeofExpression	sizeof ( sljit_sw )		1083289	1					
ANR	1083479	Sizeof	sizeof		1083289	0					
ANR	1083480	SizeofOperand	sljit_sw		1083289	1					
ANR	1083481	ExpressionStatement	"offs = - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"	673:1:21489:21573	1083289	6	True				
ANR	1083482	AssignmentExpression	"offs = - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1083289	0		=			
ANR	1083483	Identifier	offs		1083289	0					
ANR	1083484	UnaryOperationExpression	"- ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1083289	1					
ANR	1083485	UnaryOperator	-		1083289	0					
ANR	1083486	CastExpression	"( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1083289	1					
ANR	1083487	CastTarget	sljit_si		1083289	0					
ANR	1083488	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1083289	1					
ANR	1083489	Callee	GET_SAVED_REGISTERS_SIZE		1083289	0					
ANR	1083490	Identifier	GET_SAVED_REGISTERS_SIZE		1083289	0					
ANR	1083491	ArgumentList	compiler -> scratches		1083289	1					
ANR	1083492	Argument	compiler -> scratches		1083289	0					
ANR	1083493	PtrMemberAccess	compiler -> scratches		1083289	0					
ANR	1083494	Identifier	compiler		1083289	0					
ANR	1083495	Identifier	scratches		1083289	1					
ANR	1083496	Argument	compiler -> saveds		1083289	1					
ANR	1083497	PtrMemberAccess	compiler -> saveds		1083289	0					
ANR	1083498	Identifier	compiler		1083289	0					
ANR	1083499	Identifier	saveds		1083289	1					
ANR	1083500	Argument	1		1083289	2					
ANR	1083501	PrimaryExpression	1		1083289	0					
ANR	1083502	ExpressionStatement	tmp = compiler -> scratches	675:1:21577:21602	1083289	7	True				
ANR	1083503	AssignmentExpression	tmp = compiler -> scratches		1083289	0		=			
ANR	1083504	Identifier	tmp		1083289	0					
ANR	1083505	PtrMemberAccess	compiler -> scratches		1083289	1					
ANR	1083506	Identifier	compiler		1083289	0					
ANR	1083507	Identifier	scratches		1083289	1					
ANR	1083508	ForStatement	for ( i = SLJIT_FIRST_SAVED_REG ; i <= tmp ; i ++ )		1083289	8					
ANR	1083509	ForInit	i = SLJIT_FIRST_SAVED_REG ;	676:6:21610:21635	1083289	0	True				
ANR	1083510	AssignmentExpression	i = SLJIT_FIRST_SAVED_REG		1083289	0		=			
ANR	1083511	Identifier	i		1083289	0					
ANR	1083512	Identifier	SLJIT_FIRST_SAVED_REG		1083289	1					
ANR	1083513	Condition	i <= tmp	676:33:21637:21644	1083289	1	True				
ANR	1083514	RelationalExpression	i <= tmp		1083289	0		<=			
ANR	1083515	Identifier	i		1083289	0					
ANR	1083516	Identifier	tmp		1083289	1					
ANR	1083517	PostIncDecOperationExpression	i ++	676:43:21647:21649	1083289	2	True				
ANR	1083518	Identifier	i		1083289	0					
ANR	1083519	IncDec	++		1083289	1					
ANR	1083520	CompoundStatement		25:48:865:865	1083289	3					
ANR	1083521	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	677:2:21656:21729	1083289	0	True				
ANR	1083522	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1083289	0					
ANR	1083523	Callee	FAIL_IF		1083289	0					
ANR	1083524	Identifier	FAIL_IF		1083289	0					
ANR	1083525	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	1					
ANR	1083526	Argument	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083527	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083528	Callee	push_inst		1083289	0					
ANR	1083529	Identifier	push_inst		1083289	0					
ANR	1083530	ArgumentList	compiler		1083289	1					
ANR	1083531	Argument	compiler		1083289	0					
ANR	1083532	Identifier	compiler		1083289	0					
ANR	1083533	Argument	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1					
ANR	1083534	InclusiveOrExpression	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	0		|			
ANR	1083535	Identifier	STACK_LOAD		1083289	0					
ANR	1083536	InclusiveOrExpression	D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083537	CallExpression	D ( i )		1083289	0					
ANR	1083538	Callee	D		1083289	0					
ANR	1083539	Identifier	D		1083289	0					
ANR	1083540	ArgumentList	i		1083289	1					
ANR	1083541	Argument	i		1083289	0					
ANR	1083542	Identifier	i		1083289	0					
ANR	1083543	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083544	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083545	Callee	A		1083289	0					
ANR	1083546	Identifier	A		1083289	0					
ANR	1083547	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083548	Argument	SLJIT_SP		1083289	0					
ANR	1083549	Identifier	SLJIT_SP		1083289	0					
ANR	1083550	CallExpression	IMM ( offs )		1083289	1					
ANR	1083551	Callee	IMM		1083289	0					
ANR	1083552	Identifier	IMM		1083289	0					
ANR	1083553	ArgumentList	offs		1083289	1					
ANR	1083554	Argument	offs		1083289	0					
ANR	1083555	Identifier	offs		1083289	0					
ANR	1083556	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	678:2:21733:21769	1083289	1	True				
ANR	1083557	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1083289	0		+=			
ANR	1083558	Identifier	offs		1083289	0					
ANR	1083559	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1083289	1					
ANR	1083560	CastTarget	sljit_si		1083289	0					
ANR	1083561	SizeofExpression	sizeof ( sljit_sw )		1083289	1					
ANR	1083562	Sizeof	sizeof		1083289	0					
ANR	1083563	SizeofOperand	sljit_sw		1083289	1					
ANR	1083564	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	681:1:21776:21892	1083289	9	True				
ANR	1083565	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1083289	0		=			
ANR	1083566	Identifier	tmp		1083289	0					
ANR	1083567	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1083289	1					
ANR	1083568	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1083289	0					
ANR	1083569	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1083289	0		<			
ANR	1083570	PtrMemberAccess	compiler -> saveds		1083289	0					
ANR	1083571	Identifier	compiler		1083289	0					
ANR	1083572	Identifier	saveds		1083289	1					
ANR	1083573	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1083289	1					
ANR	1083574	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1083289	1		+			
ANR	1083575	Identifier	SLJIT_S0		1083289	0					
ANR	1083576	AdditiveExpression	1 - compiler -> saveds		1083289	1		-			
ANR	1083577	PrimaryExpression	1		1083289	0					
ANR	1083578	PtrMemberAccess	compiler -> saveds		1083289	1					
ANR	1083579	Identifier	compiler		1083289	0					
ANR	1083580	Identifier	saveds		1083289	1					
ANR	1083581	Identifier	SLJIT_FIRST_SAVED_REG		1083289	2					
ANR	1083582	ForStatement	for ( i = tmp ; i <= SLJIT_S0 ; i ++ )		1083289	10					
ANR	1083583	ForInit	i = tmp ;	682:6:21900:21907	1083289	0	True				
ANR	1083584	AssignmentExpression	i = tmp		1083289	0		=			
ANR	1083585	Identifier	i		1083289	0					
ANR	1083586	Identifier	tmp		1083289	1					
ANR	1083587	Condition	i <= SLJIT_S0	682:15:21909:21921	1083289	1	True				
ANR	1083588	RelationalExpression	i <= SLJIT_S0		1083289	0		<=			
ANR	1083589	Identifier	i		1083289	0					
ANR	1083590	Identifier	SLJIT_S0		1083289	1					
ANR	1083591	PostIncDecOperationExpression	i ++	682:30:21924:21926	1083289	2	True				
ANR	1083592	Identifier	i		1083289	0					
ANR	1083593	IncDec	++		1083289	1					
ANR	1083594	CompoundStatement		31:35:1142:1142	1083289	3					
ANR	1083595	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	683:2:21933:22006	1083289	0	True				
ANR	1083596	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1083289	0					
ANR	1083597	Callee	FAIL_IF		1083289	0					
ANR	1083598	Identifier	FAIL_IF		1083289	0					
ANR	1083599	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	1					
ANR	1083600	Argument	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083601	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083602	Callee	push_inst		1083289	0					
ANR	1083603	Identifier	push_inst		1083289	0					
ANR	1083604	ArgumentList	compiler		1083289	1					
ANR	1083605	Argument	compiler		1083289	0					
ANR	1083606	Identifier	compiler		1083289	0					
ANR	1083607	Argument	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1					
ANR	1083608	InclusiveOrExpression	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	0		|			
ANR	1083609	Identifier	STACK_LOAD		1083289	0					
ANR	1083610	InclusiveOrExpression	D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083611	CallExpression	D ( i )		1083289	0					
ANR	1083612	Callee	D		1083289	0					
ANR	1083613	Identifier	D		1083289	0					
ANR	1083614	ArgumentList	i		1083289	1					
ANR	1083615	Argument	i		1083289	0					
ANR	1083616	Identifier	i		1083289	0					
ANR	1083617	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083618	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083619	Callee	A		1083289	0					
ANR	1083620	Identifier	A		1083289	0					
ANR	1083621	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083622	Argument	SLJIT_SP		1083289	0					
ANR	1083623	Identifier	SLJIT_SP		1083289	0					
ANR	1083624	CallExpression	IMM ( offs )		1083289	1					
ANR	1083625	Callee	IMM		1083289	0					
ANR	1083626	Identifier	IMM		1083289	0					
ANR	1083627	ArgumentList	offs		1083289	1					
ANR	1083628	Argument	offs		1083289	0					
ANR	1083629	Identifier	offs		1083289	0					
ANR	1083630	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	684:2:22010:22046	1083289	1	True				
ANR	1083631	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1083289	0		+=			
ANR	1083632	Identifier	offs		1083289	0					
ANR	1083633	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1083289	1					
ANR	1083634	CastTarget	sljit_si		1083289	0					
ANR	1083635	SizeofExpression	sizeof ( sljit_sw )		1083289	1					
ANR	1083636	Sizeof	sizeof		1083289	0					
ANR	1083637	SizeofOperand	sljit_sw		1083289	1					
ANR	1083638	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	687:1:22053:22133	1083289	11	True				
ANR	1083639	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1083289	0					
ANR	1083640	Callee	FAIL_IF		1083289	0					
ANR	1083641	Identifier	FAIL_IF		1083289	0					
ANR	1083642	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	1					
ANR	1083643	Argument	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083644	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1083289	0					
ANR	1083645	Callee	push_inst		1083289	0					
ANR	1083646	Identifier	push_inst		1083289	0					
ANR	1083647	ArgumentList	compiler		1083289	1					
ANR	1083648	Argument	compiler		1083289	0					
ANR	1083649	Identifier	compiler		1083289	0					
ANR	1083650	Argument	STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1					
ANR	1083651	InclusiveOrExpression	STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	0		|			
ANR	1083652	Identifier	STACK_LOAD		1083289	0					
ANR	1083653	InclusiveOrExpression	D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083654	CallExpression	D ( TMP_ZERO )		1083289	0					
ANR	1083655	Callee	D		1083289	0					
ANR	1083656	Identifier	D		1083289	0					
ANR	1083657	ArgumentList	TMP_ZERO		1083289	1					
ANR	1083658	Argument	TMP_ZERO		1083289	0					
ANR	1083659	Identifier	TMP_ZERO		1083289	0					
ANR	1083660	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1083289	1		|			
ANR	1083661	CallExpression	A ( SLJIT_SP )		1083289	0					
ANR	1083662	Callee	A		1083289	0					
ANR	1083663	Identifier	A		1083289	0					
ANR	1083664	ArgumentList	SLJIT_SP		1083289	1					
ANR	1083665	Argument	SLJIT_SP		1083289	0					
ANR	1083666	Identifier	SLJIT_SP		1083289	0					
ANR	1083667	CallExpression	IMM ( offs )		1083289	1					
ANR	1083668	Callee	IMM		1083289	0					
ANR	1083669	Identifier	IMM		1083289	0					
ANR	1083670	ArgumentList	offs		1083289	1					
ANR	1083671	Argument	offs		1083289	0					
ANR	1083672	Identifier	offs		1083289	0					
ANR	1083673	ExpressionStatement	SLJIT_ASSERT ( offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )	688:1:22136:22187	1083289	12	True				
ANR	1083674	CallExpression	SLJIT_ASSERT ( offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )		1083289	0					
ANR	1083675	Callee	SLJIT_ASSERT		1083289	0					
ANR	1083676	Identifier	SLJIT_ASSERT		1083289	0					
ANR	1083677	ArgumentList	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1083289	1					
ANR	1083678	Argument	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1083289	0					
ANR	1083679	EqualityExpression	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1083289	0		==			
ANR	1083680	Identifier	offs		1083289	0					
ANR	1083681	UnaryOperationExpression	- ( sljit_sw ) ( sizeof ( sljit_sw ) )		1083289	1					
ANR	1083682	UnaryOperator	-		1083289	0					
ANR	1083683	CastExpression	( sljit_sw ) ( sizeof ( sljit_sw ) )		1083289	1					
ANR	1083684	CastTarget	sljit_sw		1083289	0					
ANR	1083685	SizeofExpression	sizeof ( sljit_sw )		1083289	1					
ANR	1083686	Sizeof	sizeof		1083289	0					
ANR	1083687	SizeofOperand	sljit_sw		1083289	1					
ANR	1083688	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( 0 ) ) )"	690:1:22191:22232	1083289	13	True				
ANR	1083689	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( 0 ) ) )"		1083289	0					
ANR	1083690	Callee	FAIL_IF		1083289	0					
ANR	1083691	Identifier	FAIL_IF		1083289	0					
ANR	1083692	ArgumentList	"push_inst ( compiler , MTLR | S ( 0 ) )"		1083289	1					
ANR	1083693	Argument	"push_inst ( compiler , MTLR | S ( 0 ) )"		1083289	0					
ANR	1083694	CallExpression	"push_inst ( compiler , MTLR | S ( 0 ) )"		1083289	0					
ANR	1083695	Callee	push_inst		1083289	0					
ANR	1083696	Identifier	push_inst		1083289	0					
ANR	1083697	ArgumentList	compiler		1083289	1					
ANR	1083698	Argument	compiler		1083289	0					
ANR	1083699	Identifier	compiler		1083289	0					
ANR	1083700	Argument	MTLR | S ( 0 )		1083289	1					
ANR	1083701	InclusiveOrExpression	MTLR | S ( 0 )		1083289	0		|			
ANR	1083702	Identifier	MTLR		1083289	0					
ANR	1083703	CallExpression	S ( 0 )		1083289	1					
ANR	1083704	Callee	S		1083289	0					
ANR	1083705	Identifier	S		1083289	0					
ANR	1083706	ArgumentList	0		1083289	1					
ANR	1083707	Argument	0		1083289	0					
ANR	1083708	PrimaryExpression	0		1083289	0					
ANR	1083709	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , BLR ) )"	691:1:22235:22268	1083289	14	True				
ANR	1083710	CallExpression	"FAIL_IF ( push_inst ( compiler , BLR ) )"		1083289	0					
ANR	1083711	Callee	FAIL_IF		1083289	0					
ANR	1083712	Identifier	FAIL_IF		1083289	0					
ANR	1083713	ArgumentList	"push_inst ( compiler , BLR )"		1083289	1					
ANR	1083714	Argument	"push_inst ( compiler , BLR )"		1083289	0					
ANR	1083715	CallExpression	"push_inst ( compiler , BLR )"		1083289	0					
ANR	1083716	Callee	push_inst		1083289	0					
ANR	1083717	Identifier	push_inst		1083289	0					
ANR	1083718	ArgumentList	compiler		1083289	1					
ANR	1083719	Argument	compiler		1083289	0					
ANR	1083720	Identifier	compiler		1083289	0					
ANR	1083721	Argument	BLR		1083289	1					
ANR	1083722	Identifier	BLR		1083289	0					
ANR	1083723	ReturnStatement	return SLJIT_SUCCESS ;	693:1:22272:22292	1083289	15	True				
ANR	1083724	Identifier	SLJIT_SUCCESS		1083289	0					
ANR	1083725	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1083289	1					
ANR	1083726	Identifier	sljit_emit_return		1083289	2					
ANR	1083727	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1083289	3					
ANR	1083728	Parameter	struct sljit_compiler * compiler	651:52:20711:20741	1083289	0	True				
ANR	1083729	ParameterType	struct sljit_compiler *		1083289	0					
ANR	1083730	Identifier	compiler		1083289	1					
ANR	1083731	Parameter	sljit_si op	651:85:20744:20754	1083289	1	True				
ANR	1083732	ParameterType	sljit_si		1083289	0					
ANR	1083733	Identifier	op		1083289	1					
ANR	1083734	Parameter	sljit_si src	651:98:20757:20768	1083289	2	True				
ANR	1083735	ParameterType	sljit_si		1083289	0					
ANR	1083736	Identifier	src		1083289	1					
ANR	1083737	Parameter	sljit_sw srcw	651:112:20771:20783	1083289	3	True				
ANR	1083738	ParameterType	sljit_sw		1083289	0					
ANR	1083739	Identifier	srcw		1083289	1					
ANR	1083740	CFGEntryNode	ENTRY		1083289		True				
ANR	1083741	CFGExitNode	EXIT		1083289		True				
ANR	1083742	Symbol	A		1083289						
ANR	1083743	Symbol	ADD		1083289						
ANR	1083744	Symbol	B		1083289						
ANR	1083745	Symbol	compiler -> scratches		1083289						
ANR	1083746	Symbol	D		1083289						
ANR	1083747	Symbol	MTLR		1083289						
ANR	1083748	Symbol	BLR		1083289						
ANR	1083749	Symbol	* compiler		1083289						
ANR	1083750	Symbol	SIMM_MAX		1083289						
ANR	1083751	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1083289						
ANR	1083752	Symbol	SLJIT_SP		1083289						
ANR	1083753	Symbol	offs		1083289						
ANR	1083754	Symbol	S		1083289						
ANR	1083755	Symbol	load_immediate		1083289						
ANR	1083756	Symbol	check_sljit_emit_return		1083289						
ANR	1083757	Symbol	tmp		1083289						
ANR	1083758	Symbol	STACK_LOAD		1083289						
ANR	1083759	Symbol	compiler		1083289						
ANR	1083760	Symbol	GET_SAVED_REGISTERS_SIZE		1083289						
ANR	1083761	Symbol	op		1083289						
ANR	1083762	Symbol	push_inst		1083289						
ANR	1083763	Symbol	src		1083289						
ANR	1083764	Symbol	srcw		1083289						
ANR	1083765	Symbol	IMM		1083289						
ANR	1083766	Symbol	i		1083289						
ANR	1083767	Symbol	SLJIT_SUCCESS		1083289						
ANR	1083768	Symbol	SLJIT_S0		1083289						
ANR	1083769	Symbol	compiler -> local_size		1083289						
ANR	1083770	Symbol	compiler -> saveds		1083289						
ANR	1083771	Symbol	ADDI		1083289						
ANR	1083772	Symbol	SLJIT_FIRST_SAVED_REG		1083289						
ANR	1083773	Symbol	emit_mov_before_return		1083289						
ANR	1083774	Symbol	TMP_ZERO		1083289						
ANR	1083775	DeclStmt									
ANR	1083776	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 64 + 8 ]	data_transfer_insts
ANR	1083777	Function	getput_arg_fast	844:0:27545:28947							
ANR	1083778	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1083777	0					
ANR	1083779	CompoundStatement		845:0:27673:28947	1083777	0					
ANR	1083780	IdentifierDeclStatement	sljit_ins inst ;	846:1:27676:27690	1083777	0	True				
ANR	1083781	IdentifierDecl	inst		1083777	0					
ANR	1083782	IdentifierDeclType	sljit_ins		1083777	0					
ANR	1083783	Identifier	inst		1083777	1					
ANR	1083784	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( A ( 0 ) == 0 , a0_must_be_0 )"	849:1:27741:27786	1083777	1	True				
ANR	1083785	CallExpression	"SLJIT_COMPILE_ASSERT ( A ( 0 ) == 0 , a0_must_be_0 )"		1083777	0					
ANR	1083786	Callee	SLJIT_COMPILE_ASSERT		1083777	0					
ANR	1083787	Identifier	SLJIT_COMPILE_ASSERT		1083777	0					
ANR	1083788	ArgumentList	A ( 0 ) == 0		1083777	1					
ANR	1083789	Argument	A ( 0 ) == 0		1083777	0					
ANR	1083790	EqualityExpression	A ( 0 ) == 0		1083777	0		==			
ANR	1083791	CallExpression	A ( 0 )		1083777	0					
ANR	1083792	Callee	A		1083777	0					
ANR	1083793	Identifier	A		1083777	0					
ANR	1083794	ArgumentList	0		1083777	1					
ANR	1083795	Argument	0		1083777	0					
ANR	1083796	PrimaryExpression	0		1083777	0					
ANR	1083797	PrimaryExpression	0		1083777	1					
ANR	1083798	Argument	a0_must_be_0		1083777	1					
ANR	1083799	Identifier	a0_must_be_0		1083777	0					
ANR	1083800	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	850:1:27789:27818	1083777	2	True				
ANR	1083801	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1083777	0					
ANR	1083802	Callee	SLJIT_ASSERT		1083777	0					
ANR	1083803	Identifier	SLJIT_ASSERT		1083777	0					
ANR	1083804	ArgumentList	arg & SLJIT_MEM		1083777	1					
ANR	1083805	Argument	arg & SLJIT_MEM		1083777	0					
ANR	1083806	BitAndExpression	arg & SLJIT_MEM		1083777	0		&			
ANR	1083807	Identifier	arg		1083777	0					
ANR	1083808	Identifier	SLJIT_MEM		1083777	1					
ANR	1083809	IfStatement	if ( arg & OFFS_REG_MASK )		1083777	3					
ANR	1083810	Condition	arg & OFFS_REG_MASK	852:5:27826:27844	1083777	0	True				
ANR	1083811	BitAndExpression	arg & OFFS_REG_MASK		1083777	0		&			
ANR	1083812	Identifier	arg		1083777	0					
ANR	1083813	Identifier	OFFS_REG_MASK		1083777	1					
ANR	1083814	CompoundStatement		8:26:173:173	1083777	1					
ANR	1083815	IfStatement	if ( argw & 0x3 )		1083777	0					
ANR	1083816	Condition	argw & 0x3	853:6:27855:27864	1083777	0	True				
ANR	1083817	BitAndExpression	argw & 0x3		1083777	0		&			
ANR	1083818	Identifier	argw		1083777	0					
ANR	1083819	PrimaryExpression	0x3		1083777	1					
ANR	1083820	ReturnStatement	return 0 ;	854:3:27870:27878	1083777	1	True				
ANR	1083821	PrimaryExpression	0		1083777	0					
ANR	1083822	IfStatement	if ( inp_flags & ARG_TEST )		1083777	1					
ANR	1083823	Condition	inp_flags & ARG_TEST	855:6:27886:27905	1083777	0	True				
ANR	1083824	BitAndExpression	inp_flags & ARG_TEST		1083777	0		&			
ANR	1083825	Identifier	inp_flags		1083777	0					
ANR	1083826	Identifier	ARG_TEST		1083777	1					
ANR	1083827	ReturnStatement	return 1 ;	856:3:27911:27919	1083777	1	True				
ANR	1083828	PrimaryExpression	1		1083777	0					
ANR	1083829	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	858:2:27924:27984	1083777	2	True				
ANR	1083830	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1083777	0		=			
ANR	1083831	Identifier	inst		1083777	0					
ANR	1083832	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1083777	1					
ANR	1083833	Identifier	data_transfer_insts		1083777	0					
ANR	1083834	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1083777	1		&			
ANR	1083835	InclusiveOrExpression	inp_flags | INDEXED		1083777	0		|			
ANR	1083836	Identifier	inp_flags		1083777	0					
ANR	1083837	Identifier	INDEXED		1083777	1					
ANR	1083838	Identifier	MEM_MASK		1083777	1					
ANR	1083839	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	859:2:27988:28038	1083777	3	True				
ANR	1083840	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1083777	0					
ANR	1083841	Callee	SLJIT_ASSERT		1083777	0					
ANR	1083842	Identifier	SLJIT_ASSERT		1083777	0					
ANR	1083843	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	1					
ANR	1083844	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	0					
ANR	1083845	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	0					
ANR	1083846	UnaryOperator	!		1083777	0					
ANR	1083847	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1083777	1		&			
ANR	1083848	Identifier	inst		1083777	0					
ANR	1083849	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1083777	1		|			
ANR	1083850	Identifier	INT_ALIGNED		1083777	0					
ANR	1083851	Identifier	UPDATE_REQ		1083777	1					
ANR	1083852	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) ) )"	860:2:28042:28150	1083777	4	True				
ANR	1083853	CallExpression	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) ) )"		1083777	0					
ANR	1083854	Callee	FAIL_IF		1083777	0					
ANR	1083855	Identifier	FAIL_IF		1083777	0					
ANR	1083856	ArgumentList	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1083777	1					
ANR	1083857	Argument	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1083777	0					
ANR	1083858	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1083777	0					
ANR	1083859	Callee	push_inst		1083777	0					
ANR	1083860	Identifier	push_inst		1083777	0					
ANR	1083861	ArgumentList	compiler		1083777	1					
ANR	1083862	Argument	compiler		1083777	0					
ANR	1083863	Identifier	compiler		1083777	0					
ANR	1083864	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )"		1083777	1					
ANR	1083865	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )"		1083777	0		|			
ANR	1083866	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1083777	0					
ANR	1083867	Callee	INST_CODE_AND_DST		1083777	0					
ANR	1083868	Identifier	INST_CODE_AND_DST		1083777	0					
ANR	1083869	ArgumentList	inst		1083777	1					
ANR	1083870	Argument	inst		1083777	0					
ANR	1083871	Identifier	inst		1083777	0					
ANR	1083872	Argument	inp_flags		1083777	1					
ANR	1083873	Identifier	inp_flags		1083777	0					
ANR	1083874	Argument	reg		1083777	2					
ANR	1083875	Identifier	reg		1083777	0					
ANR	1083876	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )		1083777	1		|			
ANR	1083877	CallExpression	A ( arg & REG_MASK )		1083777	0					
ANR	1083878	Callee	A		1083777	0					
ANR	1083879	Identifier	A		1083777	0					
ANR	1083880	ArgumentList	arg & REG_MASK		1083777	1					
ANR	1083881	Argument	arg & REG_MASK		1083777	0					
ANR	1083882	BitAndExpression	arg & REG_MASK		1083777	0		&			
ANR	1083883	Identifier	arg		1083777	0					
ANR	1083884	Identifier	REG_MASK		1083777	1					
ANR	1083885	CallExpression	B ( OFFS_REG ( arg ) )		1083777	1					
ANR	1083886	Callee	B		1083777	0					
ANR	1083887	Identifier	B		1083777	0					
ANR	1083888	ArgumentList	OFFS_REG ( arg )		1083777	1					
ANR	1083889	Argument	OFFS_REG ( arg )		1083777	0					
ANR	1083890	CallExpression	OFFS_REG ( arg )		1083777	0					
ANR	1083891	Callee	OFFS_REG		1083777	0					
ANR	1083892	Identifier	OFFS_REG		1083777	0					
ANR	1083893	ArgumentList	arg		1083777	1					
ANR	1083894	Argument	arg		1083777	0					
ANR	1083895	Identifier	arg		1083777	0					
ANR	1083896	ReturnStatement	return - 1 ;	861:2:28154:28163	1083777	5	True				
ANR	1083897	UnaryOperationExpression	- 1		1083777	0					
ANR	1083898	UnaryOperator	-		1083777	0					
ANR	1083899	PrimaryExpression	1		1083777	1					
ANR	1083900	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1083777	4					
ANR	1083901	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	864:5:28174:28206	1083777	0	True				
ANR	1083902	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1083777	0					
ANR	1083903	Callee	SLJIT_UNLIKELY		1083777	0					
ANR	1083904	Identifier	SLJIT_UNLIKELY		1083777	0					
ANR	1083905	ArgumentList	! ( arg & REG_MASK )		1083777	1					
ANR	1083906	Argument	! ( arg & REG_MASK )		1083777	0					
ANR	1083907	UnaryOperationExpression	! ( arg & REG_MASK )		1083777	0					
ANR	1083908	UnaryOperator	!		1083777	0					
ANR	1083909	BitAndExpression	arg & REG_MASK		1083777	1		&			
ANR	1083910	Identifier	arg		1083777	0					
ANR	1083911	Identifier	REG_MASK		1083777	1					
ANR	1083912	ExpressionStatement	inp_flags &= ~WRITE_BACK	865:2:28211:28235	1083777	1	True				
ANR	1083913	AssignmentExpression	inp_flags &= ~WRITE_BACK		1083777	0		&=			
ANR	1083914	Identifier	inp_flags		1083777	0					
ANR	1083915	Identifier	~WRITE_BACK		1083777	1					
ANR	1083916	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	868:1:28296:28344	1083777	5	True				
ANR	1083917	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1083777	0		=			
ANR	1083918	Identifier	inst		1083777	0					
ANR	1083919	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1083777	1					
ANR	1083920	Identifier	data_transfer_insts		1083777	0					
ANR	1083921	BitAndExpression	inp_flags & MEM_MASK		1083777	1		&			
ANR	1083922	Identifier	inp_flags		1083777	0					
ANR	1083923	Identifier	MEM_MASK		1083777	1					
ANR	1083924	ExpressionStatement	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )	869:1:28347:28401	1083777	6	True				
ANR	1083925	CallExpression	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )		1083777	0					
ANR	1083926	Callee	SLJIT_ASSERT		1083777	0					
ANR	1083927	Identifier	SLJIT_ASSERT		1083777	0					
ANR	1083928	ArgumentList	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1083777	1					
ANR	1083929	Argument	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1083777	0					
ANR	1083930	OrExpression	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1083777	0		||			
ANR	1083931	BitAndExpression	arg & REG_MASK		1083777	0		&			
ANR	1083932	Identifier	arg		1083777	0					
ANR	1083933	Identifier	REG_MASK		1083777	1					
ANR	1083934	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1083777	1					
ANR	1083935	UnaryOperator	!		1083777	0					
ANR	1083936	BitAndExpression	inst & UPDATE_REQ		1083777	1		&			
ANR	1083937	Identifier	inst		1083777	0					
ANR	1083938	Identifier	UPDATE_REQ		1083777	1					
ANR	1083939	IfStatement	if ( argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ ) )		1083777	7					
ANR	1083940	Condition	argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )	871:5:28409:28507	1083777	0	True				
ANR	1083941	OrExpression	argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1083777	0		||			
ANR	1083942	RelationalExpression	argw > SIMM_MAX		1083777	0		>			
ANR	1083943	Identifier	argw		1083777	0					
ANR	1083944	Identifier	SIMM_MAX		1083777	1					
ANR	1083945	OrExpression	argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1083777	1		||			
ANR	1083946	RelationalExpression	argw < SIMM_MIN		1083777	0		<			
ANR	1083947	Identifier	argw		1083777	0					
ANR	1083948	Identifier	SIMM_MIN		1083777	1					
ANR	1083949	OrExpression	( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1083777	1		||			
ANR	1083950	AndExpression	( inst & INT_ALIGNED ) && ( argw & 0x3 )		1083777	0		&&			
ANR	1083951	BitAndExpression	inst & INT_ALIGNED		1083777	0		&			
ANR	1083952	Identifier	inst		1083777	0					
ANR	1083953	Identifier	INT_ALIGNED		1083777	1					
ANR	1083954	BitAndExpression	argw & 0x3		1083777	1		&			
ANR	1083955	Identifier	argw		1083777	0					
ANR	1083956	PrimaryExpression	0x3		1083777	1					
ANR	1083957	BitAndExpression	inst & UPDATE_REQ		1083777	1		&			
ANR	1083958	Identifier	inst		1083777	0					
ANR	1083959	Identifier	UPDATE_REQ		1083777	1					
ANR	1083960	ReturnStatement	return 0 ;	872:2:28512:28520	1083777	1	True				
ANR	1083961	PrimaryExpression	0		1083777	0					
ANR	1083962	IfStatement	if ( inp_flags & ARG_TEST )		1083777	8					
ANR	1083963	Condition	inp_flags & ARG_TEST	873:5:28527:28546	1083777	0	True				
ANR	1083964	BitAndExpression	inp_flags & ARG_TEST		1083777	0		&			
ANR	1083965	Identifier	inp_flags		1083777	0					
ANR	1083966	Identifier	ARG_TEST		1083777	1					
ANR	1083967	ReturnStatement	return 1 ;	874:2:28551:28559	1083777	1	True				
ANR	1083968	PrimaryExpression	1		1083777	0					
ANR	1083969	IfStatement	if ( argw > SIMM_MAX || argw < SIMM_MIN )		1083777	9					
ANR	1083970	Condition	argw > SIMM_MAX || argw < SIMM_MIN	878:5:28631:28664	1083777	0	True				
ANR	1083971	OrExpression	argw > SIMM_MAX || argw < SIMM_MIN		1083777	0		||			
ANR	1083972	RelationalExpression	argw > SIMM_MAX		1083777	0		>			
ANR	1083973	Identifier	argw		1083777	0					
ANR	1083974	Identifier	SIMM_MAX		1083777	1					
ANR	1083975	RelationalExpression	argw < SIMM_MIN		1083777	1		<			
ANR	1083976	Identifier	argw		1083777	0					
ANR	1083977	Identifier	SIMM_MIN		1083777	1					
ANR	1083978	ReturnStatement	return 0 ;	879:2:28669:28677	1083777	1	True				
ANR	1083979	PrimaryExpression	0		1083777	0					
ANR	1083980	IfStatement	if ( inp_flags & ARG_TEST )		1083777	10					
ANR	1083981	Condition	inp_flags & ARG_TEST	880:5:28684:28703	1083777	0	True				
ANR	1083982	BitAndExpression	inp_flags & ARG_TEST		1083777	0		&			
ANR	1083983	Identifier	inp_flags		1083777	0					
ANR	1083984	Identifier	ARG_TEST		1083777	1					
ANR	1083985	ReturnStatement	return 1 ;	881:2:28708:28716	1083777	1	True				
ANR	1083986	PrimaryExpression	1		1083777	0					
ANR	1083987	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	883:1:28720:28768	1083777	11	True				
ANR	1083988	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1083777	0		=			
ANR	1083989	Identifier	inst		1083777	0					
ANR	1083990	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1083777	1					
ANR	1083991	Identifier	data_transfer_insts		1083777	0					
ANR	1083992	BitAndExpression	inp_flags & MEM_MASK		1083777	1		&			
ANR	1083993	Identifier	inp_flags		1083777	0					
ANR	1083994	Identifier	MEM_MASK		1083777	1					
ANR	1083995	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	884:1:28771:28821	1083777	12	True				
ANR	1083996	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1083777	0					
ANR	1083997	Callee	SLJIT_ASSERT		1083777	0					
ANR	1083998	Identifier	SLJIT_ASSERT		1083777	0					
ANR	1083999	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	1					
ANR	1084000	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	0					
ANR	1084001	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1083777	0					
ANR	1084002	UnaryOperator	!		1083777	0					
ANR	1084003	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1083777	1		&			
ANR	1084004	Identifier	inst		1083777	0					
ANR	1084005	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1083777	1		|			
ANR	1084006	Identifier	INT_ALIGNED		1083777	0					
ANR	1084007	Identifier	UPDATE_REQ		1083777	1					
ANR	1084008	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) ) )"	887:1:28832:28933	1083777	13	True				
ANR	1084009	CallExpression	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) ) )"		1083777	0					
ANR	1084010	Callee	FAIL_IF		1083777	0					
ANR	1084011	Identifier	FAIL_IF		1083777	0					
ANR	1084012	ArgumentList	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1083777	1					
ANR	1084013	Argument	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1083777	0					
ANR	1084014	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1083777	0					
ANR	1084015	Callee	push_inst		1083777	0					
ANR	1084016	Identifier	push_inst		1083777	0					
ANR	1084017	ArgumentList	compiler		1083777	1					
ANR	1084018	Argument	compiler		1083777	0					
ANR	1084019	Identifier	compiler		1083777	0					
ANR	1084020	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw )"		1083777	1					
ANR	1084021	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw )"		1083777	0		|			
ANR	1084022	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1083777	0					
ANR	1084023	Callee	INST_CODE_AND_DST		1083777	0					
ANR	1084024	Identifier	INST_CODE_AND_DST		1083777	0					
ANR	1084025	ArgumentList	inst		1083777	1					
ANR	1084026	Argument	inst		1083777	0					
ANR	1084027	Identifier	inst		1083777	0					
ANR	1084028	Argument	inp_flags		1083777	1					
ANR	1084029	Identifier	inp_flags		1083777	0					
ANR	1084030	Argument	reg		1083777	2					
ANR	1084031	Identifier	reg		1083777	0					
ANR	1084032	InclusiveOrExpression	A ( arg & REG_MASK ) | IMM ( argw )		1083777	1		|			
ANR	1084033	CallExpression	A ( arg & REG_MASK )		1083777	0					
ANR	1084034	Callee	A		1083777	0					
ANR	1084035	Identifier	A		1083777	0					
ANR	1084036	ArgumentList	arg & REG_MASK		1083777	1					
ANR	1084037	Argument	arg & REG_MASK		1083777	0					
ANR	1084038	BitAndExpression	arg & REG_MASK		1083777	0		&			
ANR	1084039	Identifier	arg		1083777	0					
ANR	1084040	Identifier	REG_MASK		1083777	1					
ANR	1084041	CallExpression	IMM ( argw )		1083777	1					
ANR	1084042	Callee	IMM		1083777	0					
ANR	1084043	Identifier	IMM		1083777	0					
ANR	1084044	ArgumentList	argw		1083777	1					
ANR	1084045	Argument	argw		1083777	0					
ANR	1084046	Identifier	argw		1083777	0					
ANR	1084047	ReturnStatement	return - 1 ;	888:1:28936:28945	1083777	14	True				
ANR	1084048	UnaryOperationExpression	- 1		1083777	0					
ANR	1084049	UnaryOperator	-		1083777	0					
ANR	1084050	PrimaryExpression	1		1083777	1					
ANR	1084051	ReturnType	static sljit_si		1083777	1					
ANR	1084052	Identifier	getput_arg_fast		1083777	2					
ANR	1084053	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1083777	3					
ANR	1084054	Parameter	struct sljit_compiler * compiler	844:32:27577:27607	1083777	0	True				
ANR	1084055	ParameterType	struct sljit_compiler *		1083777	0					
ANR	1084056	Identifier	compiler		1083777	1					
ANR	1084057	Parameter	sljit_si inp_flags	844:65:27610:27627	1083777	1	True				
ANR	1084058	ParameterType	sljit_si		1083777	0					
ANR	1084059	Identifier	inp_flags		1083777	1					
ANR	1084060	Parameter	sljit_si reg	844:85:27630:27641	1083777	2	True				
ANR	1084061	ParameterType	sljit_si		1083777	0					
ANR	1084062	Identifier	reg		1083777	1					
ANR	1084063	Parameter	sljit_si arg	844:99:27644:27655	1083777	3	True				
ANR	1084064	ParameterType	sljit_si		1083777	0					
ANR	1084065	Identifier	arg		1083777	1					
ANR	1084066	Parameter	sljit_sw argw	844:113:27658:27670	1083777	4	True				
ANR	1084067	ParameterType	sljit_sw		1083777	0					
ANR	1084068	Identifier	argw		1083777	1					
ANR	1084069	CFGEntryNode	ENTRY		1083777		True				
ANR	1084070	CFGExitNode	EXIT		1083777		True				
ANR	1084071	Symbol	A		1083777						
ANR	1084072	Symbol	B		1083777						
ANR	1084073	Symbol	SLJIT_MEM		1083777						
ANR	1084074	Symbol	inp_flags		1083777						
ANR	1084075	Symbol	* MEM_MASK		1083777						
ANR	1084076	Symbol	argw		1083777						
ANR	1084077	Symbol	SIMM_MAX		1083777						
ANR	1084078	Symbol	ARG_TEST		1083777						
ANR	1084079	Symbol	INDEXED		1083777						
ANR	1084080	Symbol	* inp_flags		1083777						
ANR	1084081	Symbol	UPDATE_REQ		1083777						
ANR	1084082	Symbol	reg		1083777						
ANR	1084083	Symbol	arg		1083777						
ANR	1084084	Symbol	compiler		1083777						
ANR	1084085	Symbol	a0_must_be_0		1083777						
ANR	1084086	Symbol	INST_CODE_AND_DST		1083777						
ANR	1084087	Symbol	SIMM_MIN		1083777						
ANR	1084088	Symbol	push_inst		1083777						
ANR	1084089	Symbol	REG_MASK		1083777						
ANR	1084090	Symbol	* INDEXED		1083777						
ANR	1084091	Symbol	OFFS_REG_MASK		1083777						
ANR	1084092	Symbol	IMM		1083777						
ANR	1084093	Symbol	data_transfer_insts		1083777						
ANR	1084094	Symbol	* data_transfer_insts		1083777						
ANR	1084095	Symbol	~WRITE_BACK		1083777						
ANR	1084096	Symbol	INT_ALIGNED		1083777						
ANR	1084097	Symbol	inst		1083777						
ANR	1084098	Symbol	MEM_MASK		1083777						
ANR	1084099	Symbol	OFFS_REG		1083777						
ANR	1084100	Symbol	SLJIT_UNLIKELY		1083777						
ANR	1084101	Function	can_cache	894:0:29099:30207							
ANR	1084102	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1084101	0					
ANR	1084103	CompoundStatement		895:0:29193:30207	1084101	0					
ANR	1084104	IdentifierDeclStatement	"sljit_sw high_short , next_high_short ;"	896:1:29196:29232	1084101	0	True				
ANR	1084105	IdentifierDecl	high_short		1084101	0					
ANR	1084106	IdentifierDeclType	sljit_sw		1084101	0					
ANR	1084107	Identifier	high_short		1084101	1					
ANR	1084108	IdentifierDecl	next_high_short		1084101	1					
ANR	1084109	IdentifierDeclType	sljit_sw		1084101	0					
ANR	1084110	Identifier	next_high_short		1084101	1					
ANR	1084111	IdentifierDeclStatement	sljit_sw diff ;	898:1:29292:29305	1084101	1	True				
ANR	1084112	IdentifierDecl	diff		1084101	0					
ANR	1084113	IdentifierDeclType	sljit_sw		1084101	0					
ANR	1084114	Identifier	diff		1084101	1					
ANR	1084115	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	901:1:29316:29373	1084101	2	True				
ANR	1084116	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1084101	0					
ANR	1084117	Callee	SLJIT_ASSERT		1084101	0					
ANR	1084118	Identifier	SLJIT_ASSERT		1084101	0					
ANR	1084119	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1084101	1					
ANR	1084120	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1084101	0					
ANR	1084121	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1084101	0		&&			
ANR	1084122	BitAndExpression	arg & SLJIT_MEM		1084101	0		&			
ANR	1084123	Identifier	arg		1084101	0					
ANR	1084124	Identifier	SLJIT_MEM		1084101	1					
ANR	1084125	BitAndExpression	next_arg & SLJIT_MEM		1084101	1		&			
ANR	1084126	Identifier	next_arg		1084101	0					
ANR	1084127	Identifier	SLJIT_MEM		1084101	1					
ANR	1084128	IfStatement	if ( arg & OFFS_REG_MASK )		1084101	3					
ANR	1084129	Condition	arg & OFFS_REG_MASK	903:5:29381:29399	1084101	0	True				
ANR	1084130	BitAndExpression	arg & OFFS_REG_MASK		1084101	0		&			
ANR	1084131	Identifier	arg		1084101	0					
ANR	1084132	Identifier	OFFS_REG_MASK		1084101	1					
ANR	1084133	ReturnStatement	return ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == ( next_argw & 0x3 ) ) ;	904:2:29404:29501	1084101	1	True				
ANR	1084134	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == ( next_argw & 0x3 )		1084101	0		&&			
ANR	1084135	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1084101	0		==			
ANR	1084136	BitAndExpression	arg & OFFS_REG_MASK		1084101	0		&			
ANR	1084137	Identifier	arg		1084101	0					
ANR	1084138	Identifier	OFFS_REG_MASK		1084101	1					
ANR	1084139	BitAndExpression	next_arg & OFFS_REG_MASK		1084101	1		&			
ANR	1084140	Identifier	next_arg		1084101	0					
ANR	1084141	Identifier	OFFS_REG_MASK		1084101	1					
ANR	1084142	EqualityExpression	( argw & 0x3 ) == ( next_argw & 0x3 )		1084101	1		==			
ANR	1084143	BitAndExpression	argw & 0x3		1084101	0		&			
ANR	1084144	Identifier	argw		1084101	0					
ANR	1084145	PrimaryExpression	0x3		1084101	1					
ANR	1084146	BitAndExpression	next_argw & 0x3		1084101	1		&			
ANR	1084147	Identifier	next_argw		1084101	0					
ANR	1084148	PrimaryExpression	0x3		1084101	1					
ANR	1084149	IfStatement	if ( next_arg & OFFS_REG_MASK )		1084101	4					
ANR	1084150	Condition	next_arg & OFFS_REG_MASK	906:5:29509:29532	1084101	0	True				
ANR	1084151	BitAndExpression	next_arg & OFFS_REG_MASK		1084101	0		&			
ANR	1084152	Identifier	next_arg		1084101	0					
ANR	1084153	Identifier	OFFS_REG_MASK		1084101	1					
ANR	1084154	ReturnStatement	return 0 ;	907:2:29537:29545	1084101	1	True				
ANR	1084155	PrimaryExpression	0		1084101	0					
ANR	1084156	ExpressionStatement	high_short = ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff	910:1:29606:29660	1084101	5	True				
ANR	1084157	AssignmentExpression	high_short = ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1084101	0		=			
ANR	1084158	Identifier	high_short		1084101	0					
ANR	1084159	BitAndExpression	( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1084101	1		&			
ANR	1084160	AdditiveExpression	argw + ( ( argw & 0x8000 ) << 1 )		1084101	0		+			
ANR	1084161	Identifier	argw		1084101	0					
ANR	1084162	ShiftExpression	( argw & 0x8000 ) << 1		1084101	1		<<			
ANR	1084163	BitAndExpression	argw & 0x8000		1084101	0		&			
ANR	1084164	Identifier	argw		1084101	0					
ANR	1084165	PrimaryExpression	0x8000		1084101	1					
ANR	1084166	PrimaryExpression	1		1084101	1					
ANR	1084167	Identifier	~0xffff		1084101	1					
ANR	1084168	ExpressionStatement	next_high_short = ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff	911:1:29663:29732	1084101	6	True				
ANR	1084169	AssignmentExpression	next_high_short = ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1084101	0		=			
ANR	1084170	Identifier	next_high_short		1084101	0					
ANR	1084171	BitAndExpression	( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1084101	1		&			
ANR	1084172	AdditiveExpression	next_argw + ( ( next_argw & 0x8000 ) << 1 )		1084101	0		+			
ANR	1084173	Identifier	next_argw		1084101	0					
ANR	1084174	ShiftExpression	( next_argw & 0x8000 ) << 1		1084101	1		<<			
ANR	1084175	BitAndExpression	next_argw & 0x8000		1084101	0		&			
ANR	1084176	Identifier	next_argw		1084101	0					
ANR	1084177	PrimaryExpression	0x8000		1084101	1					
ANR	1084178	PrimaryExpression	1		1084101	1					
ANR	1084179	Identifier	~0xffff		1084101	1					
ANR	1084180	ReturnStatement	return high_short == next_high_short ;	912:1:29735:29771	1084101	7	True				
ANR	1084181	EqualityExpression	high_short == next_high_short		1084101	0		==			
ANR	1084182	Identifier	high_short		1084101	0					
ANR	1084183	Identifier	next_high_short		1084101	1					
ANR	1084184	ReturnType	static sljit_si		1084101	1					
ANR	1084185	Identifier	can_cache		1084101	2					
ANR	1084186	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1084101	3					
ANR	1084187	Parameter	sljit_si arg	894:26:29125:29136	1084101	0	True				
ANR	1084188	ParameterType	sljit_si		1084101	0					
ANR	1084189	Identifier	arg		1084101	1					
ANR	1084190	Parameter	sljit_sw argw	894:40:29139:29151	1084101	1	True				
ANR	1084191	ParameterType	sljit_sw		1084101	0					
ANR	1084192	Identifier	argw		1084101	1					
ANR	1084193	Parameter	sljit_si next_arg	894:55:29154:29170	1084101	2	True				
ANR	1084194	ParameterType	sljit_si		1084101	0					
ANR	1084195	Identifier	next_arg		1084101	1					
ANR	1084196	Parameter	sljit_sw next_argw	894:74:29173:29190	1084101	3	True				
ANR	1084197	ParameterType	sljit_sw		1084101	0					
ANR	1084198	Identifier	next_argw		1084101	1					
ANR	1084199	CFGEntryNode	ENTRY		1084101		True				
ANR	1084200	CFGExitNode	EXIT		1084101		True				
ANR	1084201	Symbol	next_high_short		1084101						
ANR	1084202	Symbol	next_arg		1084101						
ANR	1084203	Symbol	~0xffff		1084101						
ANR	1084204	Symbol	high_short		1084101						
ANR	1084205	Symbol	SLJIT_MEM		1084101						
ANR	1084206	Symbol	arg		1084101						
ANR	1084207	Symbol	OFFS_REG_MASK		1084101						
ANR	1084208	Symbol	next_argw		1084101						
ANR	1084209	Symbol	diff		1084101						
ANR	1084210	Symbol	argw		1084101						
ANR	1084211	Function	getput_arg	943:0:30625:36776							
ANR	1084212	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1084211	0					
ANR	1084213	CompoundStatement		944:0:30787:36776	1084211	0					
ANR	1084214	IdentifierDeclStatement	sljit_si tmp_r ;	945:1:30790:30804	1084211	0	True				
ANR	1084215	IdentifierDecl	tmp_r		1084211	0					
ANR	1084216	IdentifierDeclType	sljit_si		1084211	0					
ANR	1084217	Identifier	tmp_r		1084211	1					
ANR	1084218	IdentifierDeclStatement	sljit_ins inst ;	946:1:30807:30821	1084211	1	True				
ANR	1084219	IdentifierDecl	inst		1084211	0					
ANR	1084220	IdentifierDeclType	sljit_ins		1084211	0					
ANR	1084221	Identifier	inst		1084211	1					
ANR	1084222	IdentifierDeclStatement	"sljit_sw high_short , next_high_short ;"	947:1:30824:30860	1084211	2	True				
ANR	1084223	IdentifierDecl	high_short		1084211	0					
ANR	1084224	IdentifierDeclType	sljit_sw		1084211	0					
ANR	1084225	Identifier	high_short		1084211	1					
ANR	1084226	IdentifierDecl	next_high_short		1084211	1					
ANR	1084227	IdentifierDeclType	sljit_sw		1084211	0					
ANR	1084228	Identifier	next_high_short		1084211	1					
ANR	1084229	IdentifierDeclStatement	sljit_sw diff ;	949:1:30920:30933	1084211	3	True				
ANR	1084230	IdentifierDecl	diff		1084211	0					
ANR	1084231	IdentifierDeclType	sljit_sw		1084211	0					
ANR	1084232	Identifier	diff		1084211	1					
ANR	1084233	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	952:1:30944:30973	1084211	4	True				
ANR	1084234	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1084211	0					
ANR	1084235	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084236	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084237	ArgumentList	arg & SLJIT_MEM		1084211	1					
ANR	1084238	Argument	arg & SLJIT_MEM		1084211	0					
ANR	1084239	BitAndExpression	arg & SLJIT_MEM		1084211	0		&			
ANR	1084240	Identifier	arg		1084211	0					
ANR	1084241	Identifier	SLJIT_MEM		1084211	1					
ANR	1084242	ExpressionStatement	tmp_r = ( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1	954:1:30977:31066	1084211	5	True				
ANR	1084243	AssignmentExpression	tmp_r = ( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1		1084211	0		=			
ANR	1084244	Identifier	tmp_r		1084211	0					
ANR	1084245	ConditionalExpression	( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1		1084211	1					
ANR	1084246	Condition	( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1084211	0					
ANR	1084247	AndExpression	( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1084211	0		&&			
ANR	1084248	BitAndExpression	inp_flags & LOAD_DATA		1084211	0		&			
ANR	1084249	Identifier	inp_flags		1084211	0					
ANR	1084250	Identifier	LOAD_DATA		1084211	1					
ANR	1084251	RelationalExpression	( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1084211	1		<=			
ANR	1084252	CastExpression	( inp_flags ) & MEM_MASK		1084211	0					
ANR	1084253	CastTarget	inp_flags		1084211	0					
ANR	1084254	UnaryOperationExpression	& MEM_MASK		1084211	1					
ANR	1084255	UnaryOperator	&		1084211	0					
ANR	1084256	Identifier	MEM_MASK		1084211	1					
ANR	1084257	Identifier	GPR_REG		1084211	1					
ANR	1084258	Identifier	reg		1084211	1					
ANR	1084259	Identifier	TMP_REG1		1084211	2					
ANR	1084260	IfStatement	if ( ( arg & REG_MASK ) == tmp_r )		1084211	6					
ANR	1084261	Condition	( arg & REG_MASK ) == tmp_r	956:5:31121:31145	1084211	0	True				
ANR	1084262	EqualityExpression	( arg & REG_MASK ) == tmp_r		1084211	0		==			
ANR	1084263	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1084264	Identifier	arg		1084211	0					
ANR	1084265	Identifier	REG_MASK		1084211	1					
ANR	1084266	Identifier	tmp_r		1084211	1					
ANR	1084267	ExpressionStatement	tmp_r = TMP_REG1	957:2:31150:31166	1084211	1	True				
ANR	1084268	AssignmentExpression	tmp_r = TMP_REG1		1084211	0		=			
ANR	1084269	Identifier	tmp_r		1084211	0					
ANR	1084270	Identifier	TMP_REG1		1084211	1					
ANR	1084271	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1084211	7					
ANR	1084272	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	959:5:31174:31208	1084211	0	True				
ANR	1084273	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1084211	0					
ANR	1084274	Callee	SLJIT_UNLIKELY		1084211	0					
ANR	1084275	Identifier	SLJIT_UNLIKELY		1084211	0					
ANR	1084276	ArgumentList	arg & OFFS_REG_MASK		1084211	1					
ANR	1084277	Argument	arg & OFFS_REG_MASK		1084211	0					
ANR	1084278	BitAndExpression	arg & OFFS_REG_MASK		1084211	0		&			
ANR	1084279	Identifier	arg		1084211	0					
ANR	1084280	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084281	CompoundStatement		16:42:423:423	1084211	1					
ANR	1084282	ExpressionStatement	argw &= 0x3	960:2:31215:31226	1084211	0	True				
ANR	1084283	AssignmentExpression	argw &= 0x3		1084211	0		&=			
ANR	1084284	Identifier	argw		1084211	0					
ANR	1084285	PrimaryExpression	0x3		1084211	1					
ANR	1084286	ExpressionStatement	SLJIT_ASSERT ( argw )	962:2:31282:31300	1084211	1	True				
ANR	1084287	CallExpression	SLJIT_ASSERT ( argw )		1084211	0					
ANR	1084288	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084289	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084290	ArgumentList	argw		1084211	1					
ANR	1084291	Argument	argw		1084211	0					
ANR	1084292	Identifier	argw		1084211	0					
ANR	1084293	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw )		1084211	2					
ANR	1084294	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw	964:6:31309:31398	1084211	0	True				
ANR	1084295	AndExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw		1084211	0		&&			
ANR	1084296	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1084211	0		==			
ANR	1084297	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1084211	0		|			
ANR	1084298	Identifier	SLJIT_MEM		1084211	0					
ANR	1084299	BitAndExpression	arg & OFFS_REG_MASK		1084211	1		&			
ANR	1084300	Identifier	arg		1084211	0					
ANR	1084301	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084302	PtrMemberAccess	compiler -> cache_arg		1084211	1					
ANR	1084303	Identifier	compiler		1084211	0					
ANR	1084304	Identifier	cache_arg		1084211	1					
ANR	1084305	EqualityExpression	argw == compiler -> cache_argw		1084211	1		==			
ANR	1084306	Identifier	argw		1084211	0					
ANR	1084307	PtrMemberAccess	compiler -> cache_argw		1084211	1					
ANR	1084308	Identifier	compiler		1084211	0					
ANR	1084309	Identifier	cache_argw		1084211	1					
ANR	1084310	ExpressionStatement	tmp_r = TMP_REG3	965:3:31404:31420	1084211	1	True				
ANR	1084311	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1084312	Identifier	tmp_r		1084211	0					
ANR	1084313	Identifier	TMP_REG3		1084211	1					
ANR	1084314	ElseStatement	else		1084211	0					
ANR	1084315	CompoundStatement		23:7:641:641	1084211	0					
ANR	1084316	IfStatement	if ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 ) )		1084211	0					
ANR	1084317	Condition	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )	967:7:31438:31517	1084211	0	True				
ANR	1084318	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )		1084211	0		&&			
ANR	1084319	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1084211	0		==			
ANR	1084320	BitAndExpression	arg & OFFS_REG_MASK		1084211	0		&			
ANR	1084321	Identifier	arg		1084211	0					
ANR	1084322	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084323	BitAndExpression	next_arg & OFFS_REG_MASK		1084211	1		&			
ANR	1084324	Identifier	next_arg		1084211	0					
ANR	1084325	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084326	EqualityExpression	argw == ( next_argw & 0x3 )		1084211	1		==			
ANR	1084327	Identifier	argw		1084211	0					
ANR	1084328	BitAndExpression	next_argw & 0x3		1084211	1		&			
ANR	1084329	Identifier	next_argw		1084211	0					
ANR	1084330	PrimaryExpression	0x3		1084211	1					
ANR	1084331	CompoundStatement		24:89:732:732	1084211	1					
ANR	1084332	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	968:4:31526:31581	1084211	0	True				
ANR	1084333	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1084211	0		=			
ANR	1084334	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084335	Identifier	compiler		1084211	0					
ANR	1084336	Identifier	cache_arg		1084211	1					
ANR	1084337	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1084211	1		|			
ANR	1084338	Identifier	SLJIT_MEM		1084211	0					
ANR	1084339	BitAndExpression	arg & OFFS_REG_MASK		1084211	1		&			
ANR	1084340	Identifier	arg		1084211	0					
ANR	1084341	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084342	ExpressionStatement	compiler -> cache_argw = argw	969:4:31587:31614	1084211	1	True				
ANR	1084343	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1084344	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1084345	Identifier	compiler		1084211	0					
ANR	1084346	Identifier	cache_argw		1084211	1					
ANR	1084347	Identifier	argw		1084211	1					
ANR	1084348	ExpressionStatement	tmp_r = TMP_REG3	970:4:31620:31636	1084211	2	True				
ANR	1084349	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1084350	Identifier	tmp_r		1084211	0					
ANR	1084351	Identifier	TMP_REG3		1084211	1					
ANR	1084352	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) ) )"	973:3:31703:31805	1084211	1	True				
ANR	1084353	CallExpression	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) ) )"		1084211	0					
ANR	1084354	Callee	FAIL_IF		1084211	0					
ANR	1084355	Identifier	FAIL_IF		1084211	0					
ANR	1084356	ArgumentList	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1084211	1					
ANR	1084357	Argument	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1084211	0					
ANR	1084358	CallExpression	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1084211	0					
ANR	1084359	Callee	push_inst		1084211	0					
ANR	1084360	Identifier	push_inst		1084211	0					
ANR	1084361	ArgumentList	compiler		1084211	1					
ANR	1084362	Argument	compiler		1084211	0					
ANR	1084363	Identifier	compiler		1084211	0					
ANR	1084364	Argument	RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1084211	1					
ANR	1084365	InclusiveOrExpression	RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1084211	0		|			
ANR	1084366	Identifier	RLWINM		1084211	0					
ANR	1084367	InclusiveOrExpression	S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1084211	1		|			
ANR	1084368	CallExpression	S ( OFFS_REG ( arg ) )		1084211	0					
ANR	1084369	Callee	S		1084211	0					
ANR	1084370	Identifier	S		1084211	0					
ANR	1084371	ArgumentList	OFFS_REG ( arg )		1084211	1					
ANR	1084372	Argument	OFFS_REG ( arg )		1084211	0					
ANR	1084373	CallExpression	OFFS_REG ( arg )		1084211	0					
ANR	1084374	Callee	OFFS_REG		1084211	0					
ANR	1084375	Identifier	OFFS_REG		1084211	0					
ANR	1084376	ArgumentList	arg		1084211	1					
ANR	1084377	Argument	arg		1084211	0					
ANR	1084378	Identifier	arg		1084211	0					
ANR	1084379	InclusiveOrExpression	A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1084211	1		|			
ANR	1084380	CallExpression	A ( tmp_r )		1084211	0					
ANR	1084381	Callee	A		1084211	0					
ANR	1084382	Identifier	A		1084211	0					
ANR	1084383	ArgumentList	tmp_r		1084211	1					
ANR	1084384	Argument	tmp_r		1084211	0					
ANR	1084385	Identifier	tmp_r		1084211	0					
ANR	1084386	InclusiveOrExpression	( argw << 11 ) | ( ( 31 - argw ) << 1 )		1084211	1		|			
ANR	1084387	ShiftExpression	argw << 11		1084211	0		<<			
ANR	1084388	Identifier	argw		1084211	0					
ANR	1084389	PrimaryExpression	11		1084211	1					
ANR	1084390	ShiftExpression	( 31 - argw ) << 1		1084211	1		<<			
ANR	1084391	AdditiveExpression	31 - argw		1084211	0		-			
ANR	1084392	PrimaryExpression	31		1084211	0					
ANR	1084393	Identifier	argw		1084211	1					
ANR	1084394	PrimaryExpression	1		1084211	1					
ANR	1084395	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	978:2:31907:31967	1084211	3	True				
ANR	1084396	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	0		=			
ANR	1084397	Identifier	inst		1084211	0					
ANR	1084398	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	1					
ANR	1084399	Identifier	data_transfer_insts		1084211	0					
ANR	1084400	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1084211	1		&			
ANR	1084401	InclusiveOrExpression	inp_flags | INDEXED		1084211	0		|			
ANR	1084402	Identifier	inp_flags		1084211	0					
ANR	1084403	Identifier	INDEXED		1084211	1					
ANR	1084404	Identifier	MEM_MASK		1084211	1					
ANR	1084405	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	979:2:31971:32021	1084211	4	True				
ANR	1084406	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1084211	0					
ANR	1084407	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084408	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084409	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	1					
ANR	1084410	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1084411	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1084412	UnaryOperator	!		1084211	0					
ANR	1084413	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1084211	1		&			
ANR	1084414	Identifier	inst		1084211	0					
ANR	1084415	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1084211	1		|			
ANR	1084416	Identifier	INT_ALIGNED		1084211	0					
ANR	1084417	Identifier	UPDATE_REQ		1084211	1					
ANR	1084418	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) ) ;"	980:2:32025:32123	1084211	5	True				
ANR	1084419	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) )"		1084211	0					
ANR	1084420	Callee	push_inst		1084211	0					
ANR	1084421	Identifier	push_inst		1084211	0					
ANR	1084422	ArgumentList	compiler		1084211	1					
ANR	1084423	Argument	compiler		1084211	0					
ANR	1084424	Identifier	compiler		1084211	0					
ANR	1084425	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1084211	1					
ANR	1084426	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1084211	0		|			
ANR	1084427	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1084428	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1084429	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1084430	ArgumentList	inst		1084211	1					
ANR	1084431	Argument	inst		1084211	0					
ANR	1084432	Identifier	inst		1084211	0					
ANR	1084433	Argument	inp_flags		1084211	1					
ANR	1084434	Identifier	inp_flags		1084211	0					
ANR	1084435	Argument	reg		1084211	2					
ANR	1084436	Identifier	reg		1084211	0					
ANR	1084437	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( tmp_r )		1084211	1		|			
ANR	1084438	CallExpression	A ( arg & REG_MASK )		1084211	0					
ANR	1084439	Callee	A		1084211	0					
ANR	1084440	Identifier	A		1084211	0					
ANR	1084441	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1084442	Argument	arg & REG_MASK		1084211	0					
ANR	1084443	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1084444	Identifier	arg		1084211	0					
ANR	1084445	Identifier	REG_MASK		1084211	1					
ANR	1084446	CallExpression	B ( tmp_r )		1084211	1					
ANR	1084447	Callee	B		1084211	0					
ANR	1084448	Identifier	B		1084211	0					
ANR	1084449	ArgumentList	tmp_r		1084211	1					
ANR	1084450	Argument	tmp_r		1084211	0					
ANR	1084451	Identifier	tmp_r		1084211	0					
ANR	1084452	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1084211	8					
ANR	1084453	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	983:5:32134:32166	1084211	0	True				
ANR	1084454	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1084211	0					
ANR	1084455	Callee	SLJIT_UNLIKELY		1084211	0					
ANR	1084456	Identifier	SLJIT_UNLIKELY		1084211	0					
ANR	1084457	ArgumentList	! ( arg & REG_MASK )		1084211	1					
ANR	1084458	Argument	! ( arg & REG_MASK )		1084211	0					
ANR	1084459	UnaryOperationExpression	! ( arg & REG_MASK )		1084211	0					
ANR	1084460	UnaryOperator	!		1084211	0					
ANR	1084461	BitAndExpression	arg & REG_MASK		1084211	1		&			
ANR	1084462	Identifier	arg		1084211	0					
ANR	1084463	Identifier	REG_MASK		1084211	1					
ANR	1084464	ExpressionStatement	inp_flags &= ~WRITE_BACK	984:2:32171:32195	1084211	1	True				
ANR	1084465	AssignmentExpression	inp_flags &= ~WRITE_BACK		1084211	0		&=			
ANR	1084466	Identifier	inp_flags		1084211	0					
ANR	1084467	Identifier	~WRITE_BACK		1084211	1					
ANR	1084468	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	986:1:32199:32247	1084211	9	True				
ANR	1084469	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1084211	0		=			
ANR	1084470	Identifier	inst		1084211	0					
ANR	1084471	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1084211	1					
ANR	1084472	Identifier	data_transfer_insts		1084211	0					
ANR	1084473	BitAndExpression	inp_flags & MEM_MASK		1084211	1		&			
ANR	1084474	Identifier	inp_flags		1084211	0					
ANR	1084475	Identifier	MEM_MASK		1084211	1					
ANR	1084476	ExpressionStatement	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )	987:1:32250:32304	1084211	10	True				
ANR	1084477	CallExpression	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )		1084211	0					
ANR	1084478	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084479	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084480	ArgumentList	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1084211	1					
ANR	1084481	Argument	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1084211	0					
ANR	1084482	OrExpression	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1084211	0		||			
ANR	1084483	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1084484	Identifier	arg		1084211	0					
ANR	1084485	Identifier	REG_MASK		1084211	1					
ANR	1084486	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1084211	1					
ANR	1084487	UnaryOperator	!		1084211	0					
ANR	1084488	BitAndExpression	inst & UPDATE_REQ		1084211	1		&			
ANR	1084489	Identifier	inst		1084211	0					
ANR	1084490	Identifier	UPDATE_REQ		1084211	1					
ANR	1084491	IfStatement	if ( argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ ) )		1084211	11					
ANR	1084492	Condition	argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )	990:5:32369:32482	1084211	0	True				
ANR	1084493	AndExpression	argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1084211	0		&&			
ANR	1084494	RelationalExpression	argw <= 0x7fff7fffl		1084211	0		<=			
ANR	1084495	Identifier	argw		1084211	0					
ANR	1084496	PrimaryExpression	0x7fff7fffl		1084211	1					
ANR	1084497	AndExpression	argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1084211	1		&&			
ANR	1084498	RelationalExpression	argw >= - 0x80000000l		1084211	0		>=			
ANR	1084499	Identifier	argw		1084211	0					
ANR	1084500	UnaryOperationExpression	- 0x80000000l		1084211	1					
ANR	1084501	UnaryOperator	-		1084211	0					
ANR	1084502	PrimaryExpression	0x80000000l		1084211	1					
ANR	1084503	AndExpression	( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1084211	1		&&			
ANR	1084504	OrExpression	! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 )		1084211	0		||			
ANR	1084505	UnaryOperationExpression	! ( inst & INT_ALIGNED )		1084211	0					
ANR	1084506	UnaryOperator	!		1084211	0					
ANR	1084507	BitAndExpression	inst & INT_ALIGNED		1084211	1		&			
ANR	1084508	Identifier	inst		1084211	0					
ANR	1084509	Identifier	INT_ALIGNED		1084211	1					
ANR	1084510	UnaryOperationExpression	! ( argw & 0x3 )		1084211	1					
ANR	1084511	UnaryOperator	!		1084211	0					
ANR	1084512	BitAndExpression	argw & 0x3		1084211	1		&			
ANR	1084513	Identifier	argw		1084211	0					
ANR	1084514	PrimaryExpression	0x3		1084211	1					
ANR	1084515	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1084211	1					
ANR	1084516	UnaryOperator	!		1084211	0					
ANR	1084517	BitAndExpression	inst & UPDATE_REQ		1084211	1		&			
ANR	1084518	Identifier	inst		1084211	0					
ANR	1084519	Identifier	UPDATE_REQ		1084211	1					
ANR	1084520	CompoundStatement		48:72:1697:1697	1084211	1					
ANR	1084521	ExpressionStatement	arg &= REG_MASK	994:2:32497:32512	1084211	0	True				
ANR	1084522	AssignmentExpression	arg &= REG_MASK		1084211	0		&=			
ANR	1084523	Identifier	arg		1084211	0					
ANR	1084524	Identifier	REG_MASK		1084211	1					
ANR	1084525	ExpressionStatement	high_short = ( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff	995:2:32516:32580	1084211	1	True				
ANR	1084526	AssignmentExpression	high_short = ( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1084211	0		=			
ANR	1084527	Identifier	high_short		1084211	0					
ANR	1084528	BitAndExpression	( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1084211	1		&			
ANR	1084529	CastExpression	( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) )		1084211	0					
ANR	1084530	CastTarget	sljit_si		1084211	0					
ANR	1084531	AdditiveExpression	argw + ( ( argw & 0x8000 ) << 1 )		1084211	1		+			
ANR	1084532	Identifier	argw		1084211	0					
ANR	1084533	ShiftExpression	( argw & 0x8000 ) << 1		1084211	1		<<			
ANR	1084534	BitAndExpression	argw & 0x8000		1084211	0		&			
ANR	1084535	Identifier	argw		1084211	0					
ANR	1084536	PrimaryExpression	0x8000		1084211	1					
ANR	1084537	PrimaryExpression	1		1084211	1					
ANR	1084538	Identifier	~0xffff		1084211	1					
ANR	1084539	ExpressionStatement	SLJIT_ASSERT ( high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l )	998:2:32699:32782	1084211	2	True				
ANR	1084540	CallExpression	SLJIT_ASSERT ( high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l )		1084211	0					
ANR	1084541	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084542	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084543	ArgumentList	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1084211	1					
ANR	1084544	Argument	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1084211	0					
ANR	1084545	AndExpression	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1084211	0		&&			
ANR	1084546	Identifier	high_short		1084211	0					
ANR	1084547	AndExpression	high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1084211	1		&&			
ANR	1084548	RelationalExpression	high_short <= 0x7fffffffl		1084211	0		<=			
ANR	1084549	Identifier	high_short		1084211	0					
ANR	1084550	PrimaryExpression	0x7fffffffl		1084211	1					
ANR	1084551	RelationalExpression	high_short >= - 0x80000000l		1084211	1		>=			
ANR	1084552	Identifier	high_short		1084211	0					
ANR	1084553	UnaryOperationExpression	- 0x80000000l		1084211	1					
ANR	1084554	UnaryOperator	-		1084211	0					
ANR	1084555	PrimaryExpression	0x80000000l		1084211	1					
ANR	1084556	IfStatement	if ( inp_flags & WRITE_BACK )		1084211	3					
ANR	1084557	Condition	inp_flags & WRITE_BACK	1003:6:32872:32893	1084211	0	True				
ANR	1084558	BitAndExpression	inp_flags & WRITE_BACK		1084211	0		&			
ANR	1084559	Identifier	inp_flags		1084211	0					
ANR	1084560	Identifier	WRITE_BACK		1084211	1					
ANR	1084561	CompoundStatement		60:30:2108:2108	1084211	1					
ANR	1084562	IfStatement	if ( arg == reg )		1084211	0					
ANR	1084563	Condition	arg == reg	1004:7:32905:32914	1084211	0	True				
ANR	1084564	EqualityExpression	arg == reg		1084211	0		==			
ANR	1084565	Identifier	arg		1084211	0					
ANR	1084566	Identifier	reg		1084211	1					
ANR	1084567	CompoundStatement		61:19:2129:2129	1084211	1					
ANR	1084568	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) ) )"	1005:4:32923:32984	1084211	0	True				
ANR	1084569	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) ) )"		1084211	0					
ANR	1084570	Callee	FAIL_IF		1084211	0					
ANR	1084571	Identifier	FAIL_IF		1084211	0					
ANR	1084572	ArgumentList	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1084211	1					
ANR	1084573	Argument	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1084211	0					
ANR	1084574	CallExpression	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1084211	0					
ANR	1084575	Callee	push_inst		1084211	0					
ANR	1084576	Identifier	push_inst		1084211	0					
ANR	1084577	ArgumentList	compiler		1084211	1					
ANR	1084578	Argument	compiler		1084211	0					
ANR	1084579	Identifier	compiler		1084211	0					
ANR	1084580	Argument	OR | S ( reg ) | A ( tmp_r ) | B ( reg )		1084211	1					
ANR	1084581	InclusiveOrExpression	OR | S ( reg ) | A ( tmp_r ) | B ( reg )		1084211	0		|			
ANR	1084582	Identifier	OR		1084211	0					
ANR	1084583	InclusiveOrExpression	S ( reg ) | A ( tmp_r ) | B ( reg )		1084211	1		|			
ANR	1084584	CallExpression	S ( reg )		1084211	0					
ANR	1084585	Callee	S		1084211	0					
ANR	1084586	Identifier	S		1084211	0					
ANR	1084587	ArgumentList	reg		1084211	1					
ANR	1084588	Argument	reg		1084211	0					
ANR	1084589	Identifier	reg		1084211	0					
ANR	1084590	InclusiveOrExpression	A ( tmp_r ) | B ( reg )		1084211	1		|			
ANR	1084591	CallExpression	A ( tmp_r )		1084211	0					
ANR	1084592	Callee	A		1084211	0					
ANR	1084593	Identifier	A		1084211	0					
ANR	1084594	ArgumentList	tmp_r		1084211	1					
ANR	1084595	Argument	tmp_r		1084211	0					
ANR	1084596	Identifier	tmp_r		1084211	0					
ANR	1084597	CallExpression	B ( reg )		1084211	1					
ANR	1084598	Callee	B		1084211	0					
ANR	1084599	Identifier	B		1084211	0					
ANR	1084600	ArgumentList	reg		1084211	1					
ANR	1084601	Argument	reg		1084211	0					
ANR	1084602	Identifier	reg		1084211	0					
ANR	1084603	ExpressionStatement	reg = tmp_r	1006:4:32990:33001	1084211	1	True				
ANR	1084604	AssignmentExpression	reg = tmp_r		1084211	0		=			
ANR	1084605	Identifier	reg		1084211	0					
ANR	1084606	Identifier	tmp_r		1084211	1					
ANR	1084607	ExpressionStatement	tmp_r = arg	1008:3:33011:33022	1084211	1	True				
ANR	1084608	AssignmentExpression	tmp_r = arg		1084211	0		=			
ANR	1084609	Identifier	tmp_r		1084211	0					
ANR	1084610	Identifier	arg		1084211	1					
ANR	1084611	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) ) )"	1009:3:33027:33104	1084211	2	True				
ANR	1084612	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) ) )"		1084211	0					
ANR	1084613	Callee	FAIL_IF		1084211	0					
ANR	1084614	Identifier	FAIL_IF		1084211	0					
ANR	1084615	ArgumentList	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1084211	1					
ANR	1084616	Argument	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1084211	0					
ANR	1084617	CallExpression	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1084211	0					
ANR	1084618	Callee	push_inst		1084211	0					
ANR	1084619	Identifier	push_inst		1084211	0					
ANR	1084620	ArgumentList	compiler		1084211	1					
ANR	1084621	Argument	compiler		1084211	0					
ANR	1084622	Identifier	compiler		1084211	0					
ANR	1084623	Argument	ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1084211	1					
ANR	1084624	InclusiveOrExpression	ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1084211	0		|			
ANR	1084625	Identifier	ADDIS		1084211	0					
ANR	1084626	InclusiveOrExpression	D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1084211	1		|			
ANR	1084627	CallExpression	D ( arg )		1084211	0					
ANR	1084628	Callee	D		1084211	0					
ANR	1084629	Identifier	D		1084211	0					
ANR	1084630	ArgumentList	arg		1084211	1					
ANR	1084631	Argument	arg		1084211	0					
ANR	1084632	Identifier	arg		1084211	0					
ANR	1084633	InclusiveOrExpression	A ( arg ) | IMM ( high_short >> 16 )		1084211	1		|			
ANR	1084634	CallExpression	A ( arg )		1084211	0					
ANR	1084635	Callee	A		1084211	0					
ANR	1084636	Identifier	A		1084211	0					
ANR	1084637	ArgumentList	arg		1084211	1					
ANR	1084638	Argument	arg		1084211	0					
ANR	1084639	Identifier	arg		1084211	0					
ANR	1084640	CallExpression	IMM ( high_short >> 16 )		1084211	1					
ANR	1084641	Callee	IMM		1084211	0					
ANR	1084642	Identifier	IMM		1084211	0					
ANR	1084643	ArgumentList	high_short >> 16		1084211	1					
ANR	1084644	Argument	high_short >> 16		1084211	0					
ANR	1084645	ShiftExpression	high_short >> 16		1084211	0		>>			
ANR	1084646	Identifier	high_short		1084211	0					
ANR	1084647	PrimaryExpression	16		1084211	1					
ANR	1084648	ElseStatement	else		1084211	0					
ANR	1084649	IfStatement	if ( compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw )		1084211	0					
ANR	1084650	Condition	compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw	1011:11:33121:33198	1084211	0	True				
ANR	1084651	OrExpression	compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw		1084211	0		||			
ANR	1084652	EqualityExpression	compiler -> cache_arg != ( SLJIT_MEM | arg )		1084211	0		!=			
ANR	1084653	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084654	Identifier	compiler		1084211	0					
ANR	1084655	Identifier	cache_arg		1084211	1					
ANR	1084656	InclusiveOrExpression	SLJIT_MEM | arg		1084211	1		|			
ANR	1084657	Identifier	SLJIT_MEM		1084211	0					
ANR	1084658	Identifier	arg		1084211	1					
ANR	1084659	EqualityExpression	high_short != compiler -> cache_argw		1084211	1		!=			
ANR	1084660	Identifier	high_short		1084211	0					
ANR	1084661	PtrMemberAccess	compiler -> cache_argw		1084211	1					
ANR	1084662	Identifier	compiler		1084211	0					
ANR	1084663	Identifier	cache_argw		1084211	1					
ANR	1084664	CompoundStatement		68:91:2413:2413	1084211	1					
ANR	1084665	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) )		1084211	0					
ANR	1084666	Condition	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK )	1012:7:33210:33262	1084211	0	True				
ANR	1084667	AndExpression	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK )		1084211	0		&&			
ANR	1084668	BitAndExpression	next_arg & SLJIT_MEM		1084211	0		&			
ANR	1084669	Identifier	next_arg		1084211	0					
ANR	1084670	Identifier	SLJIT_MEM		1084211	1					
ANR	1084671	UnaryOperationExpression	! ( next_arg & OFFS_REG_MASK )		1084211	1					
ANR	1084672	UnaryOperator	!		1084211	0					
ANR	1084673	BitAndExpression	next_arg & OFFS_REG_MASK		1084211	1		&			
ANR	1084674	Identifier	next_arg		1084211	0					
ANR	1084675	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1084676	CompoundStatement		69:62:2477:2477	1084211	1					
ANR	1084677	ExpressionStatement	next_high_short = ( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff	1013:4:33271:33350	1084211	0	True				
ANR	1084678	AssignmentExpression	next_high_short = ( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1084211	0		=			
ANR	1084679	Identifier	next_high_short		1084211	0					
ANR	1084680	BitAndExpression	( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1084211	1		&			
ANR	1084681	CastExpression	( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) )		1084211	0					
ANR	1084682	CastTarget	sljit_si		1084211	0					
ANR	1084683	AdditiveExpression	next_argw + ( ( next_argw & 0x8000 ) << 1 )		1084211	1		+			
ANR	1084684	Identifier	next_argw		1084211	0					
ANR	1084685	ShiftExpression	( next_argw & 0x8000 ) << 1		1084211	1		<<			
ANR	1084686	BitAndExpression	next_argw & 0x8000		1084211	0		&			
ANR	1084687	Identifier	next_argw		1084211	0					
ANR	1084688	PrimaryExpression	0x8000		1084211	1					
ANR	1084689	PrimaryExpression	1		1084211	1					
ANR	1084690	Identifier	~0xffff		1084211	1					
ANR	1084691	IfStatement	if ( high_short == next_high_short )		1084211	1					
ANR	1084692	Condition	high_short == next_high_short	1014:8:33360:33388	1084211	0	True				
ANR	1084693	EqualityExpression	high_short == next_high_short		1084211	0		==			
ANR	1084694	Identifier	high_short		1084211	0					
ANR	1084695	Identifier	next_high_short		1084211	1					
ANR	1084696	CompoundStatement		71:39:2603:2603	1084211	1					
ANR	1084697	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1015:5:33398:33435	1084211	0	True				
ANR	1084698	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1084211	0		=			
ANR	1084699	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084700	Identifier	compiler		1084211	0					
ANR	1084701	Identifier	cache_arg		1084211	1					
ANR	1084702	InclusiveOrExpression	SLJIT_MEM | arg		1084211	1		|			
ANR	1084703	Identifier	SLJIT_MEM		1084211	0					
ANR	1084704	Identifier	arg		1084211	1					
ANR	1084705	ExpressionStatement	compiler -> cache_argw = high_short	1016:5:33442:33475	1084211	1	True				
ANR	1084706	AssignmentExpression	compiler -> cache_argw = high_short		1084211	0		=			
ANR	1084707	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1084708	Identifier	compiler		1084211	0					
ANR	1084709	Identifier	cache_argw		1084211	1					
ANR	1084710	Identifier	high_short		1084211	1					
ANR	1084711	ExpressionStatement	tmp_r = TMP_REG3	1017:5:33482:33498	1084211	2	True				
ANR	1084712	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1084713	Identifier	tmp_r		1084211	0					
ANR	1084714	Identifier	TMP_REG3		1084211	1					
ANR	1084715	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) ) )"	1020:3:33514:33604	1084211	1	True				
ANR	1084716	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) ) )"		1084211	0					
ANR	1084717	Callee	FAIL_IF		1084211	0					
ANR	1084718	Identifier	FAIL_IF		1084211	0					
ANR	1084719	ArgumentList	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1084211	1					
ANR	1084720	Argument	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1084211	0					
ANR	1084721	CallExpression	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1084211	0					
ANR	1084722	Callee	push_inst		1084211	0					
ANR	1084723	Identifier	push_inst		1084211	0					
ANR	1084724	ArgumentList	compiler		1084211	1					
ANR	1084725	Argument	compiler		1084211	0					
ANR	1084726	Identifier	compiler		1084211	0					
ANR	1084727	Argument	ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1084211	1					
ANR	1084728	InclusiveOrExpression	ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1084211	0		|			
ANR	1084729	Identifier	ADDIS		1084211	0					
ANR	1084730	InclusiveOrExpression	D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1084211	1		|			
ANR	1084731	CallExpression	D ( tmp_r )		1084211	0					
ANR	1084732	Callee	D		1084211	0					
ANR	1084733	Identifier	D		1084211	0					
ANR	1084734	ArgumentList	tmp_r		1084211	1					
ANR	1084735	Argument	tmp_r		1084211	0					
ANR	1084736	Identifier	tmp_r		1084211	0					
ANR	1084737	InclusiveOrExpression	A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1084211	1		|			
ANR	1084738	CallExpression	A ( arg & REG_MASK )		1084211	0					
ANR	1084739	Callee	A		1084211	0					
ANR	1084740	Identifier	A		1084211	0					
ANR	1084741	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1084742	Argument	arg & REG_MASK		1084211	0					
ANR	1084743	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1084744	Identifier	arg		1084211	0					
ANR	1084745	Identifier	REG_MASK		1084211	1					
ANR	1084746	CallExpression	IMM ( high_short >> 16 )		1084211	1					
ANR	1084747	Callee	IMM		1084211	0					
ANR	1084748	Identifier	IMM		1084211	0					
ANR	1084749	ArgumentList	high_short >> 16		1084211	1					
ANR	1084750	Argument	high_short >> 16		1084211	0					
ANR	1084751	ShiftExpression	high_short >> 16		1084211	0		>>			
ANR	1084752	Identifier	high_short		1084211	0					
ANR	1084753	PrimaryExpression	16		1084211	1					
ANR	1084754	ElseStatement	else		1084211	0					
ANR	1084755	ExpressionStatement	tmp_r = TMP_REG3	1023:3:33620:33636	1084211	0	True				
ANR	1084756	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1084757	Identifier	tmp_r		1084211	0					
ANR	1084758	Identifier	TMP_REG3		1084211	1					
ANR	1084759	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw ) ) ;"	1025:2:33641:33731	1084211	4	True				
ANR	1084760	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw ) )"		1084211	0					
ANR	1084761	Callee	push_inst		1084211	0					
ANR	1084762	Identifier	push_inst		1084211	0					
ANR	1084763	ArgumentList	compiler		1084211	1					
ANR	1084764	Argument	compiler		1084211	0					
ANR	1084765	Identifier	compiler		1084211	0					
ANR	1084766	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw )"		1084211	1					
ANR	1084767	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw )"		1084211	0		|			
ANR	1084768	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1084769	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1084770	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1084771	ArgumentList	inst		1084211	1					
ANR	1084772	Argument	inst		1084211	0					
ANR	1084773	Identifier	inst		1084211	0					
ANR	1084774	Argument	inp_flags		1084211	1					
ANR	1084775	Identifier	inp_flags		1084211	0					
ANR	1084776	Argument	reg		1084211	2					
ANR	1084777	Identifier	reg		1084211	0					
ANR	1084778	InclusiveOrExpression	A ( tmp_r ) | IMM ( argw )		1084211	1		|			
ANR	1084779	CallExpression	A ( tmp_r )		1084211	0					
ANR	1084780	Callee	A		1084211	0					
ANR	1084781	Identifier	A		1084211	0					
ANR	1084782	ArgumentList	tmp_r		1084211	1					
ANR	1084783	Argument	tmp_r		1084211	0					
ANR	1084784	Identifier	tmp_r		1084211	0					
ANR	1084785	CallExpression	IMM ( argw )		1084211	1					
ANR	1084786	Callee	IMM		1084211	0					
ANR	1084787	Identifier	IMM		1084211	0					
ANR	1084788	ArgumentList	argw		1084211	1					
ANR	1084789	Argument	argw		1084211	0					
ANR	1084790	Identifier	argw		1084211	0					
ANR	1084791	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1084211	12					
ANR	1084792	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	1031:5:33839:33871	1084211	0	True				
ANR	1084793	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1084211	0					
ANR	1084794	Callee	SLJIT_UNLIKELY		1084211	0					
ANR	1084795	Identifier	SLJIT_UNLIKELY		1084211	0					
ANR	1084796	ArgumentList	! ( arg & REG_MASK )		1084211	1					
ANR	1084797	Argument	! ( arg & REG_MASK )		1084211	0					
ANR	1084798	UnaryOperationExpression	! ( arg & REG_MASK )		1084211	0					
ANR	1084799	UnaryOperator	!		1084211	0					
ANR	1084800	BitAndExpression	arg & REG_MASK		1084211	1		&			
ANR	1084801	Identifier	arg		1084211	0					
ANR	1084802	Identifier	REG_MASK		1084211	1					
ANR	1084803	CompoundStatement		88:40:3086:3086	1084211	1					
ANR	1084804	ExpressionStatement	diff = argw - compiler -> cache_argw	1032:2:33878:33912	1084211	0	True				
ANR	1084805	AssignmentExpression	diff = argw - compiler -> cache_argw		1084211	0		=			
ANR	1084806	Identifier	diff		1084211	0					
ANR	1084807	AdditiveExpression	argw - compiler -> cache_argw		1084211	1		-			
ANR	1084808	Identifier	argw		1084211	0					
ANR	1084809	PtrMemberAccess	compiler -> cache_argw		1084211	1					
ANR	1084810	Identifier	compiler		1084211	0					
ANR	1084811	Identifier	cache_argw		1084211	1					
ANR	1084812	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	1					
ANR	1084813	Condition	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1033:6:33920:33992	1084211	0	True				
ANR	1084814	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1084815	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1084211	0		&			
ANR	1084816	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084817	Identifier	compiler		1084211	0					
ANR	1084818	Identifier	cache_arg		1084211	1					
ANR	1084819	Identifier	SLJIT_IMM		1084211	1					
ANR	1084820	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1084821	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1084822	Identifier	diff		1084211	0					
ANR	1084823	Identifier	SIMM_MAX		1084211	1					
ANR	1084824	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1084825	Identifier	diff		1084211	0					
ANR	1084826	Identifier	SIMM_MIN		1084211	1					
ANR	1084827	CompoundStatement		90:81:3207:3207	1084211	1					
ANR	1084828	ExpressionStatement	ADJUST_CACHED_IMM ( diff )	1034:3:34000:34023	1084211	0	True				
ANR	1084829	CallExpression	ADJUST_CACHED_IMM ( diff )		1084211	0					
ANR	1084830	Callee	ADJUST_CACHED_IMM		1084211	0					
ANR	1084831	Identifier	ADJUST_CACHED_IMM		1084211	0					
ANR	1084832	ArgumentList	diff		1084211	1					
ANR	1084833	Argument	diff		1084211	0					
ANR	1084834	Identifier	diff		1084211	0					
ANR	1084835	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) ) ;"	1035:3:34028:34121	1084211	1	True				
ANR	1084836	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1084211	0					
ANR	1084837	Callee	push_inst		1084211	0					
ANR	1084838	Identifier	push_inst		1084211	0					
ANR	1084839	ArgumentList	compiler		1084211	1					
ANR	1084840	Argument	compiler		1084211	0					
ANR	1084841	Identifier	compiler		1084211	0					
ANR	1084842	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1084211	1					
ANR	1084843	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1084211	0		|			
ANR	1084844	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1084845	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1084846	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1084847	ArgumentList	inst		1084211	1					
ANR	1084848	Argument	inst		1084211	0					
ANR	1084849	Identifier	inst		1084211	0					
ANR	1084850	Argument	inp_flags		1084211	1					
ANR	1084851	Identifier	inp_flags		1084211	0					
ANR	1084852	Argument	reg		1084211	2					
ANR	1084853	Identifier	reg		1084211	0					
ANR	1084854	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1084211	1		|			
ANR	1084855	CallExpression	A ( TMP_REG3 )		1084211	0					
ANR	1084856	Callee	A		1084211	0					
ANR	1084857	Identifier	A		1084211	0					
ANR	1084858	ArgumentList	TMP_REG3		1084211	1					
ANR	1084859	Argument	TMP_REG3		1084211	0					
ANR	1084860	Identifier	TMP_REG3		1084211	0					
ANR	1084861	CallExpression	IMM ( diff )		1084211	1					
ANR	1084862	Callee	IMM		1084211	0					
ANR	1084863	Identifier	IMM		1084211	0					
ANR	1084864	ArgumentList	diff		1084211	1					
ANR	1084865	Argument	diff		1084211	0					
ANR	1084866	Identifier	diff		1084211	0					
ANR	1084867	ExpressionStatement	diff = argw - next_argw	1038:2:34130:34153	1084211	2	True				
ANR	1084868	AssignmentExpression	diff = argw - next_argw		1084211	0		=			
ANR	1084869	Identifier	diff		1084211	0					
ANR	1084870	AdditiveExpression	argw - next_argw		1084211	1		-			
ANR	1084871	Identifier	argw		1084211	0					
ANR	1084872	Identifier	next_argw		1084211	1					
ANR	1084873	IfStatement	if ( ( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	3					
ANR	1084874	Condition	( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1039:6:34161:34222	1084211	0	True				
ANR	1084875	AndExpression	( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1084876	BitAndExpression	next_arg & SLJIT_MEM		1084211	0		&			
ANR	1084877	Identifier	next_arg		1084211	0					
ANR	1084878	Identifier	SLJIT_MEM		1084211	1					
ANR	1084879	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1084880	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1084881	Identifier	diff		1084211	0					
ANR	1084882	Identifier	SIMM_MAX		1084211	1					
ANR	1084883	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1084884	Identifier	diff		1084211	0					
ANR	1084885	Identifier	SIMM_MIN		1084211	1					
ANR	1084886	CompoundStatement		96:70:3437:3437	1084211	1					
ANR	1084887	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1040:3:34230:34265	1084211	0	True				
ANR	1084888	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1084211	0					
ANR	1084889	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084890	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084891	ArgumentList	inp_flags & LOAD_DATA		1084211	1					
ANR	1084892	Argument	inp_flags & LOAD_DATA		1084211	0					
ANR	1084893	BitAndExpression	inp_flags & LOAD_DATA		1084211	0		&			
ANR	1084894	Identifier	inp_flags		1084211	0					
ANR	1084895	Identifier	LOAD_DATA		1084211	1					
ANR	1084896	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1042:3:34271:34302	1084211	1	True				
ANR	1084897	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1084211	0		=			
ANR	1084898	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084899	Identifier	compiler		1084211	0					
ANR	1084900	Identifier	cache_arg		1084211	1					
ANR	1084901	Identifier	SLJIT_IMM		1084211	1					
ANR	1084902	ExpressionStatement	compiler -> cache_argw = argw	1043:3:34307:34334	1084211	2	True				
ANR	1084903	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1084904	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1084905	Identifier	compiler		1084211	0					
ANR	1084906	Identifier	cache_argw		1084211	1					
ANR	1084907	Identifier	argw		1084211	1					
ANR	1084908	ExpressionStatement	tmp_r = TMP_REG3	1044:3:34339:34355	1084211	3	True				
ANR	1084909	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1084910	Identifier	tmp_r		1084211	0					
ANR	1084911	Identifier	TMP_REG3		1084211	1					
ANR	1084912	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1047:2:34364:34410	1084211	4	True				
ANR	1084913	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1084211	0					
ANR	1084914	Callee	FAIL_IF		1084211	0					
ANR	1084915	Identifier	FAIL_IF		1084211	0					
ANR	1084916	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1084211	1					
ANR	1084917	Argument	"load_immediate ( compiler , tmp_r , argw )"		1084211	0					
ANR	1084918	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1084211	0					
ANR	1084919	Callee	load_immediate		1084211	0					
ANR	1084920	Identifier	load_immediate		1084211	0					
ANR	1084921	ArgumentList	compiler		1084211	1					
ANR	1084922	Argument	compiler		1084211	0					
ANR	1084923	Identifier	compiler		1084211	0					
ANR	1084924	Argument	tmp_r		1084211	1					
ANR	1084925	Identifier	tmp_r		1084211	0					
ANR	1084926	Argument	argw		1084211	2					
ANR	1084927	Identifier	argw		1084211	0					
ANR	1084928	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) ) ;"	1048:2:34414:34492	1084211	5	True				
ANR	1084929	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) )"		1084211	0					
ANR	1084930	Callee	push_inst		1084211	0					
ANR	1084931	Identifier	push_inst		1084211	0					
ANR	1084932	ArgumentList	compiler		1084211	1					
ANR	1084933	Argument	compiler		1084211	0					
ANR	1084934	Identifier	compiler		1084211	0					
ANR	1084935	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r )"		1084211	1					
ANR	1084936	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r )"		1084211	0		|			
ANR	1084937	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1084938	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1084939	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1084940	ArgumentList	inst		1084211	1					
ANR	1084941	Argument	inst		1084211	0					
ANR	1084942	Identifier	inst		1084211	0					
ANR	1084943	Argument	inp_flags		1084211	1					
ANR	1084944	Identifier	inp_flags		1084211	0					
ANR	1084945	Argument	reg		1084211	2					
ANR	1084946	Identifier	reg		1084211	0					
ANR	1084947	CallExpression	A ( tmp_r )		1084211	1					
ANR	1084948	Callee	A		1084211	0					
ANR	1084949	Identifier	A		1084211	0					
ANR	1084950	ArgumentList	tmp_r		1084211	1					
ANR	1084951	Argument	tmp_r		1084211	0					
ANR	1084952	Identifier	tmp_r		1084211	0					
ANR	1084953	ExpressionStatement	diff = argw - compiler -> cache_argw	1051:1:34499:34533	1084211	13	True				
ANR	1084954	AssignmentExpression	diff = argw - compiler -> cache_argw		1084211	0		=			
ANR	1084955	Identifier	diff		1084211	0					
ANR	1084956	AdditiveExpression	argw - compiler -> cache_argw		1084211	1		-			
ANR	1084957	Identifier	argw		1084211	0					
ANR	1084958	PtrMemberAccess	compiler -> cache_argw		1084211	1					
ANR	1084959	Identifier	compiler		1084211	0					
ANR	1084960	Identifier	cache_argw		1084211	1					
ANR	1084961	IfStatement	if ( compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	14					
ANR	1084962	Condition	compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN	1052:5:34540:34605	1084211	0	True				
ANR	1084963	AndExpression	compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1084964	EqualityExpression	compiler -> cache_arg == arg		1084211	0		==			
ANR	1084965	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1084966	Identifier	compiler		1084211	0					
ANR	1084967	Identifier	cache_arg		1084211	1					
ANR	1084968	Identifier	arg		1084211	1					
ANR	1084969	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1084970	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1084971	Identifier	diff		1084211	0					
ANR	1084972	Identifier	SIMM_MAX		1084211	1					
ANR	1084973	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1084974	Identifier	diff		1084211	0					
ANR	1084975	Identifier	SIMM_MIN		1084211	1					
ANR	1084976	CompoundStatement		109:73:3820:3820	1084211	1					
ANR	1084977	ExpressionStatement	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ ) )	1053:2:34612:34675	1084211	0	True				
ANR	1084978	CallExpression	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ ) )		1084211	0					
ANR	1084979	Callee	SLJIT_ASSERT		1084211	0					
ANR	1084980	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1084981	ArgumentList	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1084211	1					
ANR	1084982	Argument	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1084211	0					
ANR	1084983	AndExpression	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1084211	0		&&			
ANR	1084984	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1084211	0					
ANR	1084985	UnaryOperator	!		1084211	0					
ANR	1084986	BitAndExpression	inp_flags & WRITE_BACK		1084211	1		&			
ANR	1084987	Identifier	inp_flags		1084211	0					
ANR	1084988	Identifier	WRITE_BACK		1084211	1					
ANR	1084989	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1084211	1					
ANR	1084990	UnaryOperator	!		1084211	0					
ANR	1084991	BitAndExpression	inst & UPDATE_REQ		1084211	1		&			
ANR	1084992	Identifier	inst		1084211	0					
ANR	1084993	Identifier	UPDATE_REQ		1084211	1					
ANR	1084994	ExpressionStatement	ADJUST_CACHED_IMM ( diff )	1054:2:34679:34702	1084211	1	True				
ANR	1084995	CallExpression	ADJUST_CACHED_IMM ( diff )		1084211	0					
ANR	1084996	Callee	ADJUST_CACHED_IMM		1084211	0					
ANR	1084997	Identifier	ADJUST_CACHED_IMM		1084211	0					
ANR	1084998	ArgumentList	diff		1084211	1					
ANR	1084999	Argument	diff		1084211	0					
ANR	1085000	Identifier	diff		1084211	0					
ANR	1085001	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) ) ;"	1055:2:34706:34799	1084211	2	True				
ANR	1085002	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1084211	0					
ANR	1085003	Callee	push_inst		1084211	0					
ANR	1085004	Identifier	push_inst		1084211	0					
ANR	1085005	ArgumentList	compiler		1084211	1					
ANR	1085006	Argument	compiler		1084211	0					
ANR	1085007	Identifier	compiler		1084211	0					
ANR	1085008	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1084211	1					
ANR	1085009	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1084211	0		|			
ANR	1085010	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1085011	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1085012	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1085013	ArgumentList	inst		1084211	1					
ANR	1085014	Argument	inst		1084211	0					
ANR	1085015	Identifier	inst		1084211	0					
ANR	1085016	Argument	inp_flags		1084211	1					
ANR	1085017	Identifier	inp_flags		1084211	0					
ANR	1085018	Argument	reg		1084211	2					
ANR	1085019	Identifier	reg		1084211	0					
ANR	1085020	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1084211	1		|			
ANR	1085021	CallExpression	A ( TMP_REG3 )		1084211	0					
ANR	1085022	Callee	A		1084211	0					
ANR	1085023	Identifier	A		1084211	0					
ANR	1085024	ArgumentList	TMP_REG3		1084211	1					
ANR	1085025	Argument	TMP_REG3		1084211	0					
ANR	1085026	Identifier	TMP_REG3		1084211	0					
ANR	1085027	CallExpression	IMM ( diff )		1084211	1					
ANR	1085028	Callee	IMM		1084211	0					
ANR	1085029	Identifier	IMM		1084211	0					
ANR	1085030	ArgumentList	diff		1084211	1					
ANR	1085031	Argument	diff		1084211	0					
ANR	1085032	Identifier	diff		1084211	0					
ANR	1085033	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	15					
ANR	1085034	Condition	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1058:5:34810:34882	1084211	0	True				
ANR	1085035	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1085036	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1084211	0		&			
ANR	1085037	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1085038	Identifier	compiler		1084211	0					
ANR	1085039	Identifier	cache_arg		1084211	1					
ANR	1085040	Identifier	SLJIT_IMM		1084211	1					
ANR	1085041	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1085042	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1085043	Identifier	diff		1084211	0					
ANR	1085044	Identifier	SIMM_MAX		1084211	1					
ANR	1085045	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1085046	Identifier	diff		1084211	0					
ANR	1085047	Identifier	SIMM_MIN		1084211	1					
ANR	1085048	CompoundStatement		115:80:4097:4097	1084211	1					
ANR	1085049	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1059:2:34889:34949	1084211	0	True				
ANR	1085050	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	0		=			
ANR	1085051	Identifier	inst		1084211	0					
ANR	1085052	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	1					
ANR	1085053	Identifier	data_transfer_insts		1084211	0					
ANR	1085054	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1084211	1		&			
ANR	1085055	InclusiveOrExpression	inp_flags | INDEXED		1084211	0		|			
ANR	1085056	Identifier	inp_flags		1084211	0					
ANR	1085057	Identifier	INDEXED		1084211	1					
ANR	1085058	Identifier	MEM_MASK		1084211	1					
ANR	1085059	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1060:2:34953:35003	1084211	1	True				
ANR	1085060	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1084211	0					
ANR	1085061	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085062	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085063	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	1					
ANR	1085064	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085065	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085066	UnaryOperator	!		1084211	0					
ANR	1085067	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1084211	1		&			
ANR	1085068	Identifier	inst		1084211	0					
ANR	1085069	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1084211	1		|			
ANR	1085070	Identifier	INT_ALIGNED		1084211	0					
ANR	1085071	Identifier	UPDATE_REQ		1084211	1					
ANR	1085072	IfStatement	if ( compiler -> cache_argw != argw )		1084211	2					
ANR	1085073	Condition	compiler -> cache_argw != argw	1061:6:35011:35038	1084211	0	True				
ANR	1085074	EqualityExpression	compiler -> cache_argw != argw		1084211	0		!=			
ANR	1085075	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1085076	Identifier	compiler		1084211	0					
ANR	1085077	Identifier	cache_argw		1084211	1					
ANR	1085078	Identifier	argw		1084211	1					
ANR	1085079	CompoundStatement		118:36:4253:4253	1084211	1					
ANR	1085080	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) ) )"	1062:3:35046:35120	1084211	0	True				
ANR	1085081	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) ) )"		1084211	0					
ANR	1085082	Callee	FAIL_IF		1084211	0					
ANR	1085083	Identifier	FAIL_IF		1084211	0					
ANR	1085084	ArgumentList	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1084211	1					
ANR	1085085	Argument	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1084211	0					
ANR	1085086	CallExpression	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1084211	0					
ANR	1085087	Callee	push_inst		1084211	0					
ANR	1085088	Identifier	push_inst		1084211	0					
ANR	1085089	ArgumentList	compiler		1084211	1					
ANR	1085090	Argument	compiler		1084211	0					
ANR	1085091	Identifier	compiler		1084211	0					
ANR	1085092	Argument	ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1084211	1					
ANR	1085093	InclusiveOrExpression	ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1084211	0		|			
ANR	1085094	Identifier	ADDI		1084211	0					
ANR	1085095	InclusiveOrExpression	D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1084211	1		|			
ANR	1085096	CallExpression	D ( TMP_REG3 )		1084211	0					
ANR	1085097	Callee	D		1084211	0					
ANR	1085098	Identifier	D		1084211	0					
ANR	1085099	ArgumentList	TMP_REG3		1084211	1					
ANR	1085100	Argument	TMP_REG3		1084211	0					
ANR	1085101	Identifier	TMP_REG3		1084211	0					
ANR	1085102	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1084211	1		|			
ANR	1085103	CallExpression	A ( TMP_REG3 )		1084211	0					
ANR	1085104	Callee	A		1084211	0					
ANR	1085105	Identifier	A		1084211	0					
ANR	1085106	ArgumentList	TMP_REG3		1084211	1					
ANR	1085107	Argument	TMP_REG3		1084211	0					
ANR	1085108	Identifier	TMP_REG3		1084211	0					
ANR	1085109	CallExpression	IMM ( diff )		1084211	1					
ANR	1085110	Callee	IMM		1084211	0					
ANR	1085111	Identifier	IMM		1084211	0					
ANR	1085112	ArgumentList	diff		1084211	1					
ANR	1085113	Argument	diff		1084211	0					
ANR	1085114	Identifier	diff		1084211	0					
ANR	1085115	ExpressionStatement	compiler -> cache_argw = argw	1063:3:35125:35152	1084211	1	True				
ANR	1085116	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1085117	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1085118	Identifier	compiler		1084211	0					
ANR	1085119	Identifier	cache_argw		1084211	1					
ANR	1085120	Identifier	argw		1084211	1					
ANR	1085121	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) ) ;"	1065:2:35160:35261	1084211	3	True				
ANR	1085122	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) )"		1084211	0					
ANR	1085123	Callee	push_inst		1084211	0					
ANR	1085124	Identifier	push_inst		1084211	0					
ANR	1085125	ArgumentList	compiler		1084211	1					
ANR	1085126	Argument	compiler		1084211	0					
ANR	1085127	Identifier	compiler		1084211	0					
ANR	1085128	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1084211	1					
ANR	1085129	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1084211	0		|			
ANR	1085130	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1085131	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1085132	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1085133	ArgumentList	inst		1084211	1					
ANR	1085134	Argument	inst		1084211	0					
ANR	1085135	Identifier	inst		1084211	0					
ANR	1085136	Argument	inp_flags		1084211	1					
ANR	1085137	Identifier	inp_flags		1084211	0					
ANR	1085138	Argument	reg		1084211	2					
ANR	1085139	Identifier	reg		1084211	0					
ANR	1085140	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( TMP_REG3 )		1084211	1		|			
ANR	1085141	CallExpression	A ( arg & REG_MASK )		1084211	0					
ANR	1085142	Callee	A		1084211	0					
ANR	1085143	Identifier	A		1084211	0					
ANR	1085144	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1085145	Argument	arg & REG_MASK		1084211	0					
ANR	1085146	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1085147	Identifier	arg		1084211	0					
ANR	1085148	Identifier	REG_MASK		1084211	1					
ANR	1085149	CallExpression	B ( TMP_REG3 )		1084211	1					
ANR	1085150	Callee	B		1084211	0					
ANR	1085151	Identifier	B		1084211	0					
ANR	1085152	ArgumentList	TMP_REG3		1084211	1					
ANR	1085153	Argument	TMP_REG3		1084211	0					
ANR	1085154	Identifier	TMP_REG3		1084211	0					
ANR	1085155	IfStatement	if ( argw == next_argw && ( next_arg & SLJIT_MEM ) )		1084211	16					
ANR	1085156	Condition	argw == next_argw && ( next_arg & SLJIT_MEM )	1068:5:35272:35314	1084211	0	True				
ANR	1085157	AndExpression	argw == next_argw && ( next_arg & SLJIT_MEM )		1084211	0		&&			
ANR	1085158	EqualityExpression	argw == next_argw		1084211	0		==			
ANR	1085159	Identifier	argw		1084211	0					
ANR	1085160	Identifier	next_argw		1084211	1					
ANR	1085161	BitAndExpression	next_arg & SLJIT_MEM		1084211	1		&			
ANR	1085162	Identifier	next_arg		1084211	0					
ANR	1085163	Identifier	SLJIT_MEM		1084211	1					
ANR	1085164	CompoundStatement		125:50:4529:4529	1084211	1					
ANR	1085165	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1069:2:35321:35356	1084211	0	True				
ANR	1085166	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1084211	0					
ANR	1085167	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085168	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085169	ArgumentList	inp_flags & LOAD_DATA		1084211	1					
ANR	1085170	Argument	inp_flags & LOAD_DATA		1084211	0					
ANR	1085171	BitAndExpression	inp_flags & LOAD_DATA		1084211	0		&			
ANR	1085172	Identifier	inp_flags		1084211	0					
ANR	1085173	Identifier	LOAD_DATA		1084211	1					
ANR	1085174	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1070:2:35360:35409	1084211	1	True				
ANR	1085175	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1084211	0					
ANR	1085176	Callee	FAIL_IF		1084211	0					
ANR	1085177	Identifier	FAIL_IF		1084211	0					
ANR	1085178	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	1					
ANR	1085179	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085180	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085181	Callee	load_immediate		1084211	0					
ANR	1085182	Identifier	load_immediate		1084211	0					
ANR	1085183	ArgumentList	compiler		1084211	1					
ANR	1085184	Argument	compiler		1084211	0					
ANR	1085185	Identifier	compiler		1084211	0					
ANR	1085186	Argument	TMP_REG3		1084211	1					
ANR	1085187	Identifier	TMP_REG3		1084211	0					
ANR	1085188	Argument	argw		1084211	2					
ANR	1085189	Identifier	argw		1084211	0					
ANR	1085190	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1072:2:35414:35445	1084211	2	True				
ANR	1085191	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1084211	0		=			
ANR	1085192	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1085193	Identifier	compiler		1084211	0					
ANR	1085194	Identifier	cache_arg		1084211	1					
ANR	1085195	Identifier	SLJIT_IMM		1084211	1					
ANR	1085196	ExpressionStatement	compiler -> cache_argw = argw	1073:2:35449:35476	1084211	3	True				
ANR	1085197	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1085198	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1085199	Identifier	compiler		1084211	0					
ANR	1085200	Identifier	cache_argw		1084211	1					
ANR	1085201	Identifier	argw		1084211	1					
ANR	1085202	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1075:2:35481:35541	1084211	4	True				
ANR	1085203	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	0		=			
ANR	1085204	Identifier	inst		1084211	0					
ANR	1085205	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	1					
ANR	1085206	Identifier	data_transfer_insts		1084211	0					
ANR	1085207	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1084211	1		&			
ANR	1085208	InclusiveOrExpression	inp_flags | INDEXED		1084211	0		|			
ANR	1085209	Identifier	inp_flags		1084211	0					
ANR	1085210	Identifier	INDEXED		1084211	1					
ANR	1085211	Identifier	MEM_MASK		1084211	1					
ANR	1085212	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1076:2:35545:35595	1084211	5	True				
ANR	1085213	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1084211	0					
ANR	1085214	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085215	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085216	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	1					
ANR	1085217	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085218	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085219	UnaryOperator	!		1084211	0					
ANR	1085220	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1084211	1		&			
ANR	1085221	Identifier	inst		1084211	0					
ANR	1085222	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1084211	1		|			
ANR	1085223	Identifier	INT_ALIGNED		1084211	0					
ANR	1085224	Identifier	UPDATE_REQ		1084211	1					
ANR	1085225	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) ) ;"	1077:2:35599:35700	1084211	6	True				
ANR	1085226	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) )"		1084211	0					
ANR	1085227	Callee	push_inst		1084211	0					
ANR	1085228	Identifier	push_inst		1084211	0					
ANR	1085229	ArgumentList	compiler		1084211	1					
ANR	1085230	Argument	compiler		1084211	0					
ANR	1085231	Identifier	compiler		1084211	0					
ANR	1085232	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1084211	1					
ANR	1085233	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1084211	0		|			
ANR	1085234	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1085235	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1085236	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1085237	ArgumentList	inst		1084211	1					
ANR	1085238	Argument	inst		1084211	0					
ANR	1085239	Identifier	inst		1084211	0					
ANR	1085240	Argument	inp_flags		1084211	1					
ANR	1085241	Identifier	inp_flags		1084211	0					
ANR	1085242	Argument	reg		1084211	2					
ANR	1085243	Identifier	reg		1084211	0					
ANR	1085244	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( TMP_REG3 )		1084211	1		|			
ANR	1085245	CallExpression	A ( arg & REG_MASK )		1084211	0					
ANR	1085246	Callee	A		1084211	0					
ANR	1085247	Identifier	A		1084211	0					
ANR	1085248	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1085249	Argument	arg & REG_MASK		1084211	0					
ANR	1085250	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1085251	Identifier	arg		1084211	0					
ANR	1085252	Identifier	REG_MASK		1084211	1					
ANR	1085253	CallExpression	B ( TMP_REG3 )		1084211	1					
ANR	1085254	Callee	B		1084211	0					
ANR	1085255	Identifier	B		1084211	0					
ANR	1085256	ArgumentList	TMP_REG3		1084211	1					
ANR	1085257	Argument	TMP_REG3		1084211	0					
ANR	1085258	Identifier	TMP_REG3		1084211	0					
ANR	1085259	ExpressionStatement	diff = argw - next_argw	1080:1:35707:35730	1084211	17	True				
ANR	1085260	AssignmentExpression	diff = argw - next_argw		1084211	0		=			
ANR	1085261	Identifier	diff		1084211	0					
ANR	1085262	AdditiveExpression	argw - next_argw		1084211	1		-			
ANR	1085263	Identifier	argw		1084211	0					
ANR	1085264	Identifier	next_argw		1084211	1					
ANR	1085265	IfStatement	if ( arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	18					
ANR	1085266	Condition	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1081:5:35737:35820	1084211	0	True				
ANR	1085267	AndExpression	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1085268	EqualityExpression	arg == next_arg		1084211	0		==			
ANR	1085269	Identifier	arg		1084211	0					
ANR	1085270	Identifier	next_arg		1084211	1					
ANR	1085271	AndExpression	! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1085272	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1084211	0					
ANR	1085273	UnaryOperator	!		1084211	0					
ANR	1085274	BitAndExpression	inp_flags & WRITE_BACK		1084211	1		&			
ANR	1085275	Identifier	inp_flags		1084211	0					
ANR	1085276	Identifier	WRITE_BACK		1084211	1					
ANR	1085277	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1085278	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1085279	Identifier	diff		1084211	0					
ANR	1085280	Identifier	SIMM_MAX		1084211	1					
ANR	1085281	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1085282	Identifier	diff		1084211	0					
ANR	1085283	Identifier	SIMM_MIN		1084211	1					
ANR	1085284	CompoundStatement		138:91:5035:5035	1084211	1					
ANR	1085285	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1082:2:35827:35862	1084211	0	True				
ANR	1085286	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1084211	0					
ANR	1085287	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085288	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085289	ArgumentList	inp_flags & LOAD_DATA		1084211	1					
ANR	1085290	Argument	inp_flags & LOAD_DATA		1084211	0					
ANR	1085291	BitAndExpression	inp_flags & LOAD_DATA		1084211	0		&			
ANR	1085292	Identifier	inp_flags		1084211	0					
ANR	1085293	Identifier	LOAD_DATA		1084211	1					
ANR	1085294	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1083:2:35866:35915	1084211	1	True				
ANR	1085295	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1084211	0					
ANR	1085296	Callee	FAIL_IF		1084211	0					
ANR	1085297	Identifier	FAIL_IF		1084211	0					
ANR	1085298	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	1					
ANR	1085299	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085300	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085301	Callee	load_immediate		1084211	0					
ANR	1085302	Identifier	load_immediate		1084211	0					
ANR	1085303	ArgumentList	compiler		1084211	1					
ANR	1085304	Argument	compiler		1084211	0					
ANR	1085305	Identifier	compiler		1084211	0					
ANR	1085306	Argument	TMP_REG3		1084211	1					
ANR	1085307	Identifier	TMP_REG3		1084211	0					
ANR	1085308	Argument	argw		1084211	2					
ANR	1085309	Identifier	argw		1084211	0					
ANR	1085310	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) ) )"	1084:2:35919:36000	1084211	2	True				
ANR	1085311	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) ) )"		1084211	0					
ANR	1085312	Callee	FAIL_IF		1084211	0					
ANR	1085313	Identifier	FAIL_IF		1084211	0					
ANR	1085314	ArgumentList	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1084211	1					
ANR	1085315	Argument	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1084211	0					
ANR	1085316	CallExpression	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1084211	0					
ANR	1085317	Callee	push_inst		1084211	0					
ANR	1085318	Identifier	push_inst		1084211	0					
ANR	1085319	ArgumentList	compiler		1084211	1					
ANR	1085320	Argument	compiler		1084211	0					
ANR	1085321	Identifier	compiler		1084211	0					
ANR	1085322	Argument	ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1084211	1					
ANR	1085323	InclusiveOrExpression	ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1084211	0		|			
ANR	1085324	Identifier	ADD		1084211	0					
ANR	1085325	InclusiveOrExpression	D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1084211	1		|			
ANR	1085326	CallExpression	D ( TMP_REG3 )		1084211	0					
ANR	1085327	Callee	D		1084211	0					
ANR	1085328	Identifier	D		1084211	0					
ANR	1085329	ArgumentList	TMP_REG3		1084211	1					
ANR	1085330	Argument	TMP_REG3		1084211	0					
ANR	1085331	Identifier	TMP_REG3		1084211	0					
ANR	1085332	InclusiveOrExpression	A ( TMP_REG3 ) | B ( arg & REG_MASK )		1084211	1		|			
ANR	1085333	CallExpression	A ( TMP_REG3 )		1084211	0					
ANR	1085334	Callee	A		1084211	0					
ANR	1085335	Identifier	A		1084211	0					
ANR	1085336	ArgumentList	TMP_REG3		1084211	1					
ANR	1085337	Argument	TMP_REG3		1084211	0					
ANR	1085338	Identifier	TMP_REG3		1084211	0					
ANR	1085339	CallExpression	B ( arg & REG_MASK )		1084211	1					
ANR	1085340	Callee	B		1084211	0					
ANR	1085341	Identifier	B		1084211	0					
ANR	1085342	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1085343	Argument	arg & REG_MASK		1084211	0					
ANR	1085344	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1085345	Identifier	arg		1084211	0					
ANR	1085346	Identifier	REG_MASK		1084211	1					
ANR	1085347	ExpressionStatement	compiler -> cache_arg = arg	1086:2:36005:36030	1084211	3	True				
ANR	1085348	AssignmentExpression	compiler -> cache_arg = arg		1084211	0		=			
ANR	1085349	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1085350	Identifier	compiler		1084211	0					
ANR	1085351	Identifier	cache_arg		1084211	1					
ANR	1085352	Identifier	arg		1084211	1					
ANR	1085353	ExpressionStatement	compiler -> cache_argw = argw	1087:2:36034:36061	1084211	4	True				
ANR	1085354	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1085355	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1085356	Identifier	compiler		1084211	0					
ANR	1085357	Identifier	cache_argw		1084211	1					
ANR	1085358	Identifier	argw		1084211	1					
ANR	1085359	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) ) ;"	1089:2:36066:36147	1084211	5	True				
ANR	1085360	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) )"		1084211	0					
ANR	1085361	Callee	push_inst		1084211	0					
ANR	1085362	Identifier	push_inst		1084211	0					
ANR	1085363	ArgumentList	compiler		1084211	1					
ANR	1085364	Argument	compiler		1084211	0					
ANR	1085365	Identifier	compiler		1084211	0					
ANR	1085366	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 )"		1084211	1					
ANR	1085367	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 )"		1084211	0		|			
ANR	1085368	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1085369	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1085370	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1085371	ArgumentList	inst		1084211	1					
ANR	1085372	Argument	inst		1084211	0					
ANR	1085373	Identifier	inst		1084211	0					
ANR	1085374	Argument	inp_flags		1084211	1					
ANR	1085375	Identifier	inp_flags		1084211	0					
ANR	1085376	Argument	reg		1084211	2					
ANR	1085377	Identifier	reg		1084211	0					
ANR	1085378	CallExpression	A ( TMP_REG3 )		1084211	1					
ANR	1085379	Callee	A		1084211	0					
ANR	1085380	Identifier	A		1084211	0					
ANR	1085381	ArgumentList	TMP_REG3		1084211	1					
ANR	1085382	Argument	TMP_REG3		1084211	0					
ANR	1085383	Identifier	TMP_REG3		1084211	0					
ANR	1085384	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1084211	19					
ANR	1085385	Condition	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1092:5:36158:36250	1084211	0	True				
ANR	1085386	AndExpression	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	0		&&			
ANR	1085387	BitAndExpression	next_arg & SLJIT_MEM		1084211	0		&			
ANR	1085388	Identifier	next_arg		1084211	0					
ANR	1085389	Identifier	SLJIT_MEM		1084211	1					
ANR	1085390	AndExpression	! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1085391	UnaryOperationExpression	! ( next_arg & OFFS_REG_MASK )		1084211	0					
ANR	1085392	UnaryOperator	!		1084211	0					
ANR	1085393	BitAndExpression	next_arg & OFFS_REG_MASK		1084211	1		&			
ANR	1085394	Identifier	next_arg		1084211	0					
ANR	1085395	Identifier	OFFS_REG_MASK		1084211	1					
ANR	1085396	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1084211	1		&&			
ANR	1085397	RelationalExpression	diff <= SIMM_MAX		1084211	0		<=			
ANR	1085398	Identifier	diff		1084211	0					
ANR	1085399	Identifier	SIMM_MAX		1084211	1					
ANR	1085400	RelationalExpression	diff >= SIMM_MIN		1084211	1		>=			
ANR	1085401	Identifier	diff		1084211	0					
ANR	1085402	Identifier	SIMM_MIN		1084211	1					
ANR	1085403	CompoundStatement		149:100:5465:5465	1084211	1					
ANR	1085404	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1093:2:36257:36292	1084211	0	True				
ANR	1085405	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1084211	0					
ANR	1085406	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085407	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085408	ArgumentList	inp_flags & LOAD_DATA		1084211	1					
ANR	1085409	Argument	inp_flags & LOAD_DATA		1084211	0					
ANR	1085410	BitAndExpression	inp_flags & LOAD_DATA		1084211	0		&			
ANR	1085411	Identifier	inp_flags		1084211	0					
ANR	1085412	Identifier	LOAD_DATA		1084211	1					
ANR	1085413	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1094:2:36296:36345	1084211	1	True				
ANR	1085414	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1084211	0					
ANR	1085415	Callee	FAIL_IF		1084211	0					
ANR	1085416	Identifier	FAIL_IF		1084211	0					
ANR	1085417	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	1					
ANR	1085418	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085419	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1084211	0					
ANR	1085420	Callee	load_immediate		1084211	0					
ANR	1085421	Identifier	load_immediate		1084211	0					
ANR	1085422	ArgumentList	compiler		1084211	1					
ANR	1085423	Argument	compiler		1084211	0					
ANR	1085424	Identifier	compiler		1084211	0					
ANR	1085425	Argument	TMP_REG3		1084211	1					
ANR	1085426	Identifier	TMP_REG3		1084211	0					
ANR	1085427	Argument	argw		1084211	2					
ANR	1085428	Identifier	argw		1084211	0					
ANR	1085429	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1096:2:36350:36381	1084211	2	True				
ANR	1085430	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1084211	0		=			
ANR	1085431	PtrMemberAccess	compiler -> cache_arg		1084211	0					
ANR	1085432	Identifier	compiler		1084211	0					
ANR	1085433	Identifier	cache_arg		1084211	1					
ANR	1085434	Identifier	SLJIT_IMM		1084211	1					
ANR	1085435	ExpressionStatement	compiler -> cache_argw = argw	1097:2:36385:36412	1084211	3	True				
ANR	1085436	AssignmentExpression	compiler -> cache_argw = argw		1084211	0		=			
ANR	1085437	PtrMemberAccess	compiler -> cache_argw		1084211	0					
ANR	1085438	Identifier	compiler		1084211	0					
ANR	1085439	Identifier	cache_argw		1084211	1					
ANR	1085440	Identifier	argw		1084211	1					
ANR	1085441	ExpressionStatement	tmp_r = TMP_REG3	1098:2:36416:36432	1084211	4	True				
ANR	1085442	AssignmentExpression	tmp_r = TMP_REG3		1084211	0		=			
ANR	1085443	Identifier	tmp_r		1084211	0					
ANR	1085444	Identifier	TMP_REG3		1084211	1					
ANR	1085445	ElseStatement	else		1084211	0					
ANR	1085446	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1101:2:36445:36491	1084211	0	True				
ANR	1085447	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1084211	0					
ANR	1085448	Callee	FAIL_IF		1084211	0					
ANR	1085449	Identifier	FAIL_IF		1084211	0					
ANR	1085450	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1084211	1					
ANR	1085451	Argument	"load_immediate ( compiler , tmp_r , argw )"		1084211	0					
ANR	1085452	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1084211	0					
ANR	1085453	Callee	load_immediate		1084211	0					
ANR	1085454	Identifier	load_immediate		1084211	0					
ANR	1085455	ArgumentList	compiler		1084211	1					
ANR	1085456	Argument	compiler		1084211	0					
ANR	1085457	Identifier	compiler		1084211	0					
ANR	1085458	Argument	tmp_r		1084211	1					
ANR	1085459	Identifier	tmp_r		1084211	0					
ANR	1085460	Argument	argw		1084211	2					
ANR	1085461	Identifier	argw		1084211	0					
ANR	1085462	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1104:1:36553:36613	1084211	20	True				
ANR	1085463	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	0		=			
ANR	1085464	Identifier	inst		1084211	0					
ANR	1085465	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1084211	1					
ANR	1085466	Identifier	data_transfer_insts		1084211	0					
ANR	1085467	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1084211	1		&			
ANR	1085468	InclusiveOrExpression	inp_flags | INDEXED		1084211	0		|			
ANR	1085469	Identifier	inp_flags		1084211	0					
ANR	1085470	Identifier	INDEXED		1084211	1					
ANR	1085471	Identifier	MEM_MASK		1084211	1					
ANR	1085472	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1105:1:36616:36666	1084211	21	True				
ANR	1085473	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1084211	0					
ANR	1085474	Callee	SLJIT_ASSERT		1084211	0					
ANR	1085475	Identifier	SLJIT_ASSERT		1084211	0					
ANR	1085476	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	1					
ANR	1085477	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085478	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1084211	0					
ANR	1085479	UnaryOperator	!		1084211	0					
ANR	1085480	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1084211	1		&			
ANR	1085481	Identifier	inst		1084211	0					
ANR	1085482	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1084211	1		|			
ANR	1085483	Identifier	INT_ALIGNED		1084211	0					
ANR	1085484	Identifier	UPDATE_REQ		1084211	1					
ANR	1085485	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) ) ;"	1106:1:36669:36767	1084211	22	True				
ANR	1085486	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) )"		1084211	0					
ANR	1085487	Callee	push_inst		1084211	0					
ANR	1085488	Identifier	push_inst		1084211	0					
ANR	1085489	ArgumentList	compiler		1084211	1					
ANR	1085490	Argument	compiler		1084211	0					
ANR	1085491	Identifier	compiler		1084211	0					
ANR	1085492	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1084211	1					
ANR	1085493	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1084211	0		|			
ANR	1085494	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1084211	0					
ANR	1085495	Callee	INST_CODE_AND_DST		1084211	0					
ANR	1085496	Identifier	INST_CODE_AND_DST		1084211	0					
ANR	1085497	ArgumentList	inst		1084211	1					
ANR	1085498	Argument	inst		1084211	0					
ANR	1085499	Identifier	inst		1084211	0					
ANR	1085500	Argument	inp_flags		1084211	1					
ANR	1085501	Identifier	inp_flags		1084211	0					
ANR	1085502	Argument	reg		1084211	2					
ANR	1085503	Identifier	reg		1084211	0					
ANR	1085504	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( tmp_r )		1084211	1		|			
ANR	1085505	CallExpression	A ( arg & REG_MASK )		1084211	0					
ANR	1085506	Callee	A		1084211	0					
ANR	1085507	Identifier	A		1084211	0					
ANR	1085508	ArgumentList	arg & REG_MASK		1084211	1					
ANR	1085509	Argument	arg & REG_MASK		1084211	0					
ANR	1085510	BitAndExpression	arg & REG_MASK		1084211	0		&			
ANR	1085511	Identifier	arg		1084211	0					
ANR	1085512	Identifier	REG_MASK		1084211	1					
ANR	1085513	CallExpression	B ( tmp_r )		1084211	1					
ANR	1085514	Callee	B		1084211	0					
ANR	1085515	Identifier	B		1084211	0					
ANR	1085516	ArgumentList	tmp_r		1084211	1					
ANR	1085517	Argument	tmp_r		1084211	0					
ANR	1085518	Identifier	tmp_r		1084211	0					
ANR	1085519	ReturnType	static sljit_si		1084211	1					
ANR	1085520	Identifier	getput_arg		1084211	2					
ANR	1085521	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1084211	3					
ANR	1085522	Parameter	struct sljit_compiler * compiler	943:27:30652:30682	1084211	0	True				
ANR	1085523	ParameterType	struct sljit_compiler *		1084211	0					
ANR	1085524	Identifier	compiler		1084211	1					
ANR	1085525	Parameter	sljit_si inp_flags	943:60:30685:30702	1084211	1	True				
ANR	1085526	ParameterType	sljit_si		1084211	0					
ANR	1085527	Identifier	inp_flags		1084211	1					
ANR	1085528	Parameter	sljit_si reg	943:80:30705:30716	1084211	2	True				
ANR	1085529	ParameterType	sljit_si		1084211	0					
ANR	1085530	Identifier	reg		1084211	1					
ANR	1085531	Parameter	sljit_si arg	943:94:30719:30730	1084211	3	True				
ANR	1085532	ParameterType	sljit_si		1084211	0					
ANR	1085533	Identifier	arg		1084211	1					
ANR	1085534	Parameter	sljit_sw argw	943:108:30733:30745	1084211	4	True				
ANR	1085535	ParameterType	sljit_sw		1084211	0					
ANR	1085536	Identifier	argw		1084211	1					
ANR	1085537	Parameter	sljit_si next_arg	943:123:30748:30764	1084211	5	True				
ANR	1085538	ParameterType	sljit_si		1084211	0					
ANR	1085539	Identifier	next_arg		1084211	1					
ANR	1085540	Parameter	sljit_sw next_argw	943:142:30767:30784	1084211	6	True				
ANR	1085541	ParameterType	sljit_sw		1084211	0					
ANR	1085542	Identifier	next_argw		1084211	1					
ANR	1085543	CFGEntryNode	ENTRY		1084211		True				
ANR	1085544	CFGExitNode	EXIT		1084211		True				
ANR	1085545	Symbol	TMP_REG3		1084211						
ANR	1085546	Symbol	ADD		1084211						
ANR	1085547	Symbol	TMP_REG1		1084211						
ANR	1085548	Symbol	SLJIT_MEM		1084211						
ANR	1085549	Symbol	* compiler		1084211						
ANR	1085550	Symbol	SIMM_MAX		1084211						
ANR	1085551	Symbol	RLWINM		1084211						
ANR	1085552	Symbol	* inp_flags		1084211						
ANR	1085553	Symbol	SLJIT_IMM		1084211						
ANR	1085554	Symbol	reg		1084211						
ANR	1085555	Symbol	SIMM_MIN		1084211						
ANR	1085556	Symbol	* INDEXED		1084211						
ANR	1085557	Symbol	compiler -> cache_arg		1084211						
ANR	1085558	Symbol	OFFS_REG_MASK		1084211						
ANR	1085559	Symbol	IMM		1084211						
ANR	1085560	Symbol	next_argw		1084211						
ANR	1085561	Symbol	diff		1084211						
ANR	1085562	Symbol	* data_transfer_insts		1084211						
ANR	1085563	Symbol	~WRITE_BACK		1084211						
ANR	1085564	Symbol	GPR_REG		1084211						
ANR	1085565	Symbol	INT_ALIGNED		1084211						
ANR	1085566	Symbol	high_short		1084211						
ANR	1085567	Symbol	MEM_MASK		1084211						
ANR	1085568	Symbol	OFFS_REG		1084211						
ANR	1085569	Symbol	SLJIT_UNLIKELY		1084211						
ANR	1085570	Symbol	A		1084211						
ANR	1085571	Symbol	compiler -> cache_argw		1084211						
ANR	1085572	Symbol	B		1084211						
ANR	1085573	Symbol	~0xffff		1084211						
ANR	1085574	Symbol	LOAD_DATA		1084211						
ANR	1085575	Symbol	D		1084211						
ANR	1085576	Symbol	inp_flags		1084211						
ANR	1085577	Symbol	* MEM_MASK		1084211						
ANR	1085578	Symbol	argw		1084211						
ANR	1085579	Symbol	INDEXED		1084211						
ANR	1085580	Symbol	next_high_short		1084211						
ANR	1085581	Symbol	UPDATE_REQ		1084211						
ANR	1085582	Symbol	S		1084211						
ANR	1085583	Symbol	load_immediate		1084211						
ANR	1085584	Symbol	arg		1084211						
ANR	1085585	Symbol	ADDIS		1084211						
ANR	1085586	Symbol	compiler		1084211						
ANR	1085587	Symbol	INST_CODE_AND_DST		1084211						
ANR	1085588	Symbol	WRITE_BACK		1084211						
ANR	1085589	Symbol	tmp_r		1084211						
ANR	1085590	Symbol	next_arg		1084211						
ANR	1085591	Symbol	push_inst		1084211						
ANR	1085592	Symbol	REG_MASK		1084211						
ANR	1085593	Symbol	OR		1084211						
ANR	1085594	Symbol	data_transfer_insts		1084211						
ANR	1085595	Symbol	& MEM_MASK		1084211						
ANR	1085596	Symbol	ADDI		1084211						
ANR	1085597	Symbol	inst		1084211						
ANR	1085598	Function	emit_op_mem2	1110:0:36779:37099							
ANR	1085599	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1085598	0					
ANR	1085600	CompoundStatement		1111:0:36946:37099	1085598	0					
ANR	1085601	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1085598	0					
ANR	1085602	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1112:5:36953:37002	1085598	0	True				
ANR	1085603	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1085598	0					
ANR	1085604	Callee	getput_arg_fast		1085598	0					
ANR	1085605	Identifier	getput_arg_fast		1085598	0					
ANR	1085606	ArgumentList	compiler		1085598	1					
ANR	1085607	Argument	compiler		1085598	0					
ANR	1085608	Identifier	compiler		1085598	0					
ANR	1085609	Argument	flags		1085598	1					
ANR	1085610	Identifier	flags		1085598	0					
ANR	1085611	Argument	reg		1085598	2					
ANR	1085612	Identifier	reg		1085598	0					
ANR	1085613	Argument	arg1		1085598	3					
ANR	1085614	Identifier	arg1		1085598	0					
ANR	1085615	Argument	arg1w		1085598	4					
ANR	1085616	Identifier	arg1w		1085598	0					
ANR	1085617	ReturnStatement	return compiler -> error ;	1113:2:37007:37029	1085598	1	True				
ANR	1085618	PtrMemberAccess	compiler -> error		1085598	0					
ANR	1085619	Identifier	compiler		1085598	0					
ANR	1085620	Identifier	error		1085598	1					
ANR	1085621	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1114:1:37032:37097	1085598	1	True				
ANR	1085622	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1085598	0					
ANR	1085623	Callee	getput_arg		1085598	0					
ANR	1085624	Identifier	getput_arg		1085598	0					
ANR	1085625	ArgumentList	compiler		1085598	1					
ANR	1085626	Argument	compiler		1085598	0					
ANR	1085627	Identifier	compiler		1085598	0					
ANR	1085628	Argument	flags		1085598	1					
ANR	1085629	Identifier	flags		1085598	0					
ANR	1085630	Argument	reg		1085598	2					
ANR	1085631	Identifier	reg		1085598	0					
ANR	1085632	Argument	arg1		1085598	3					
ANR	1085633	Identifier	arg1		1085598	0					
ANR	1085634	Argument	arg1w		1085598	4					
ANR	1085635	Identifier	arg1w		1085598	0					
ANR	1085636	Argument	arg2		1085598	5					
ANR	1085637	Identifier	arg2		1085598	0					
ANR	1085638	Argument	arg2w		1085598	6					
ANR	1085639	Identifier	arg2w		1085598	0					
ANR	1085640	ReturnType	static SLJIT_INLINE sljit_si		1085598	1					
ANR	1085641	Identifier	emit_op_mem2		1085598	2					
ANR	1085642	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1085598	3					
ANR	1085643	Parameter	struct sljit_compiler * compiler	1110:42:36821:36851	1085598	0	True				
ANR	1085644	ParameterType	struct sljit_compiler *		1085598	0					
ANR	1085645	Identifier	compiler		1085598	1					
ANR	1085646	Parameter	sljit_si flags	1110:75:36854:36867	1085598	1	True				
ANR	1085647	ParameterType	sljit_si		1085598	0					
ANR	1085648	Identifier	flags		1085598	1					
ANR	1085649	Parameter	sljit_si reg	1110:91:36870:36881	1085598	2	True				
ANR	1085650	ParameterType	sljit_si		1085598	0					
ANR	1085651	Identifier	reg		1085598	1					
ANR	1085652	Parameter	sljit_si arg1	1110:105:36884:36896	1085598	3	True				
ANR	1085653	ParameterType	sljit_si		1085598	0					
ANR	1085654	Identifier	arg1		1085598	1					
ANR	1085655	Parameter	sljit_sw arg1w	1110:120:36899:36912	1085598	4	True				
ANR	1085656	ParameterType	sljit_sw		1085598	0					
ANR	1085657	Identifier	arg1w		1085598	1					
ANR	1085658	Parameter	sljit_si arg2	1110:136:36915:36927	1085598	5	True				
ANR	1085659	ParameterType	sljit_si		1085598	0					
ANR	1085660	Identifier	arg2		1085598	1					
ANR	1085661	Parameter	sljit_sw arg2w	1110:151:36930:36943	1085598	6	True				
ANR	1085662	ParameterType	sljit_sw		1085598	0					
ANR	1085663	Identifier	arg2w		1085598	1					
ANR	1085664	CFGEntryNode	ENTRY		1085598		True				
ANR	1085665	CFGExitNode	EXIT		1085598		True				
ANR	1085666	Symbol	arg1w		1085598						
ANR	1085667	Symbol	arg2		1085598						
ANR	1085668	Symbol	getput_arg		1085598						
ANR	1085669	Symbol	reg		1085598						
ANR	1085670	Symbol	arg1		1085598						
ANR	1085671	Symbol	arg2w		1085598						
ANR	1085672	Symbol	flags		1085598						
ANR	1085673	Symbol	* compiler		1085598						
ANR	1085674	Symbol	compiler		1085598						
ANR	1085675	Symbol	getput_arg_fast		1085598						
ANR	1085676	Symbol	compiler -> error		1085598						
ANR	1085677	Function	emit_op	1117:0:37102:40965							
ANR	1085678	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si input_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1085677	0					
ANR	1085679	CompoundStatement		1121:0:37288:40965	1085677	0					
ANR	1085680	IdentifierDeclStatement	sljit_si dst_r ;	1126:1:37484:37498	1085677	0	True				
ANR	1085681	IdentifierDecl	dst_r		1085677	0					
ANR	1085682	IdentifierDeclType	sljit_si		1085677	0					
ANR	1085683	Identifier	dst_r		1085677	1					
ANR	1085684	IdentifierDeclStatement	sljit_si src1_r ;	1127:1:37501:37516	1085677	1	True				
ANR	1085685	IdentifierDecl	src1_r		1085677	0					
ANR	1085686	IdentifierDeclType	sljit_si		1085677	0					
ANR	1085687	Identifier	src1_r		1085677	1					
ANR	1085688	IdentifierDeclStatement	sljit_si src2_r ;	1128:1:37519:37534	1085677	2	True				
ANR	1085689	IdentifierDecl	src2_r		1085677	0					
ANR	1085690	IdentifierDeclType	sljit_si		1085677	0					
ANR	1085691	Identifier	src2_r		1085677	1					
ANR	1085692	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	1129:1:37537:37568	1085677	3	True				
ANR	1085693	IdentifierDecl	sugg_src2_r = TMP_REG2		1085677	0					
ANR	1085694	IdentifierDeclType	sljit_si		1085677	0					
ANR	1085695	Identifier	sugg_src2_r		1085677	1					
ANR	1085696	AssignmentExpression	sugg_src2_r = TMP_REG2		1085677	2		=			
ANR	1085697	Identifier	TMP_REG2		1085677	0					
ANR	1085698	Identifier	TMP_REG2		1085677	1					
ANR	1085699	IdentifierDeclStatement	sljit_si flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS ) ;	1130:1:37571:37704	1085677	4	True				
ANR	1085700	IdentifierDecl	flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1085677	0					
ANR	1085701	IdentifierDeclType	sljit_si		1085677	0					
ANR	1085702	Identifier	flags		1085677	1					
ANR	1085703	AssignmentExpression	flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1085677	2		=			
ANR	1085704	Identifier	flags		1085677	0					
ANR	1085705	BitAndExpression	input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1085677	1		&			
ANR	1085706	Identifier	input_flags		1085677	0					
ANR	1085707	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085708	Identifier	ALT_FORM1		1085677	0					
ANR	1085709	InclusiveOrExpression	ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085710	Identifier	ALT_FORM2		1085677	0					
ANR	1085711	InclusiveOrExpression	ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085712	Identifier	ALT_FORM3		1085677	0					
ANR	1085713	InclusiveOrExpression	ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085714	Identifier	ALT_FORM4		1085677	0					
ANR	1085715	InclusiveOrExpression	ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085716	Identifier	ALT_FORM5		1085677	0					
ANR	1085717	InclusiveOrExpression	ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085718	Identifier	ALT_FORM6		1085677	0					
ANR	1085719	InclusiveOrExpression	ALT_SIGN_EXT | ALT_SET_FLAGS		1085677	1		|			
ANR	1085720	Identifier	ALT_SIGN_EXT		1085677	0					
ANR	1085721	Identifier	ALT_SET_FLAGS		1085677	1					
ANR	1085722	IfStatement	if ( ! ( input_flags & ALT_KEEP_CACHE ) )		1085677	5					
ANR	1085723	Condition	! ( input_flags & ALT_KEEP_CACHE )	1132:5:37712:37742	1085677	0	True				
ANR	1085724	UnaryOperationExpression	! ( input_flags & ALT_KEEP_CACHE )		1085677	0					
ANR	1085725	UnaryOperator	!		1085677	0					
ANR	1085726	BitAndExpression	input_flags & ALT_KEEP_CACHE		1085677	1		&			
ANR	1085727	Identifier	input_flags		1085677	0					
ANR	1085728	Identifier	ALT_KEEP_CACHE		1085677	1					
ANR	1085729	CompoundStatement		12:38:456:456	1085677	1					
ANR	1085730	ExpressionStatement	compiler -> cache_arg = 0	1133:2:37749:37772	1085677	0	True				
ANR	1085731	AssignmentExpression	compiler -> cache_arg = 0		1085677	0		=			
ANR	1085732	PtrMemberAccess	compiler -> cache_arg		1085677	0					
ANR	1085733	Identifier	compiler		1085677	0					
ANR	1085734	Identifier	cache_arg		1085677	1					
ANR	1085735	PrimaryExpression	0		1085677	1					
ANR	1085736	ExpressionStatement	compiler -> cache_argw = 0	1134:2:37776:37800	1085677	1	True				
ANR	1085737	AssignmentExpression	compiler -> cache_argw = 0		1085677	0		=			
ANR	1085738	PtrMemberAccess	compiler -> cache_argw		1085677	0					
ANR	1085739	Identifier	compiler		1085677	0					
ANR	1085740	Identifier	cache_argw		1085677	1					
ANR	1085741	PrimaryExpression	0		1085677	1					
ANR	1085742	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1085677	6					
ANR	1085743	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1138:5:37837:37871	1085677	0	True				
ANR	1085744	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1085677	0					
ANR	1085745	Callee	SLJIT_UNLIKELY		1085677	0					
ANR	1085746	Identifier	SLJIT_UNLIKELY		1085677	0					
ANR	1085747	ArgumentList	dst == SLJIT_UNUSED		1085677	1					
ANR	1085748	Argument	dst == SLJIT_UNUSED		1085677	0					
ANR	1085749	EqualityExpression	dst == SLJIT_UNUSED		1085677	0		==			
ANR	1085750	Identifier	dst		1085677	0					
ANR	1085751	Identifier	SLJIT_UNUSED		1085677	1					
ANR	1085752	CompoundStatement		18:42:585:585	1085677	1					
ANR	1085753	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1085677	0					
ANR	1085754	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	1139:6:37882:37942	1085677	0	True				
ANR	1085755	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1085677	0		&&			
ANR	1085756	RelationalExpression	op >= SLJIT_MOV		1085677	0		>=			
ANR	1085757	Identifier	op		1085677	0					
ANR	1085758	Identifier	SLJIT_MOV		1085677	1					
ANR	1085759	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1085677	1		&&			
ANR	1085760	RelationalExpression	op <= SLJIT_MOVU_SI		1085677	0		<=			
ANR	1085761	Identifier	op		1085677	0					
ANR	1085762	Identifier	SLJIT_MOVU_SI		1085677	1					
ANR	1085763	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1085677	1					
ANR	1085764	UnaryOperator	!		1085677	0					
ANR	1085765	BitAndExpression	src2 & SLJIT_MEM		1085677	1		&			
ANR	1085766	Identifier	src2		1085677	0					
ANR	1085767	Identifier	SLJIT_MEM		1085677	1					
ANR	1085768	ReturnStatement	return SLJIT_SUCCESS ;	1140:3:37948:37968	1085677	1	True				
ANR	1085769	Identifier	SLJIT_SUCCESS		1085677	0					
ANR	1085770	ExpressionStatement	dst_r = TMP_REG2	1141:2:37972:37988	1085677	1	True				
ANR	1085771	AssignmentExpression	dst_r = TMP_REG2		1085677	0		=			
ANR	1085772	Identifier	dst_r		1085677	0					
ANR	1085773	Identifier	TMP_REG2		1085677	1					
ANR	1085774	ElseStatement	else		1085677	0					
ANR	1085775	IfStatement	if ( FAST_IS_REG ( dst ) )		1085677	0					
ANR	1085776	Condition	FAST_IS_REG ( dst )	1143:10:38003:38018	1085677	0	True				
ANR	1085777	CallExpression	FAST_IS_REG ( dst )		1085677	0					
ANR	1085778	Callee	FAST_IS_REG		1085677	0					
ANR	1085779	Identifier	FAST_IS_REG		1085677	0					
ANR	1085780	ArgumentList	dst		1085677	1					
ANR	1085781	Argument	dst		1085677	0					
ANR	1085782	Identifier	dst		1085677	0					
ANR	1085783	CompoundStatement		23:28:732:732	1085677	1					
ANR	1085784	ExpressionStatement	dst_r = dst	1144:2:38025:38036	1085677	0	True				
ANR	1085785	AssignmentExpression	dst_r = dst		1085677	0		=			
ANR	1085786	Identifier	dst_r		1085677	0					
ANR	1085787	Identifier	dst		1085677	1					
ANR	1085788	ExpressionStatement	flags |= REG_DEST	1145:2:38040:38057	1085677	1	True				
ANR	1085789	AssignmentExpression	flags |= REG_DEST		1085677	0		|=			
ANR	1085790	Identifier	flags		1085677	0					
ANR	1085791	Identifier	REG_DEST		1085677	1					
ANR	1085792	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1085677	2					
ANR	1085793	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1146:6:38065:38102	1085677	0	True				
ANR	1085794	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1085677	0		&&			
ANR	1085795	RelationalExpression	op >= SLJIT_MOV		1085677	0		>=			
ANR	1085796	Identifier	op		1085677	0					
ANR	1085797	Identifier	SLJIT_MOV		1085677	1					
ANR	1085798	RelationalExpression	op <= SLJIT_MOVU_SI		1085677	1		<=			
ANR	1085799	Identifier	op		1085677	0					
ANR	1085800	Identifier	SLJIT_MOVU_SI		1085677	1					
ANR	1085801	ExpressionStatement	sugg_src2_r = dst_r	1147:3:38108:38127	1085677	1	True				
ANR	1085802	AssignmentExpression	sugg_src2_r = dst_r		1085677	0		=			
ANR	1085803	Identifier	sugg_src2_r		1085677	0					
ANR	1085804	Identifier	dst_r		1085677	1					
ANR	1085805	ElseStatement	else		1085677	0					
ANR	1085806	CompoundStatement		29:6:849:849	1085677	0					
ANR	1085807	ExpressionStatement	SLJIT_ASSERT ( dst & SLJIT_MEM )	1150:2:38142:38171	1085677	0	True				
ANR	1085808	CallExpression	SLJIT_ASSERT ( dst & SLJIT_MEM )		1085677	0					
ANR	1085809	Callee	SLJIT_ASSERT		1085677	0					
ANR	1085810	Identifier	SLJIT_ASSERT		1085677	0					
ANR	1085811	ArgumentList	dst & SLJIT_MEM		1085677	1					
ANR	1085812	Argument	dst & SLJIT_MEM		1085677	0					
ANR	1085813	BitAndExpression	dst & SLJIT_MEM		1085677	0		&			
ANR	1085814	Identifier	dst		1085677	0					
ANR	1085815	Identifier	SLJIT_MEM		1085677	1					
ANR	1085816	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw ) )"		1085677	1					
ANR	1085817	Condition	"getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw )"	1151:6:38179:38248	1085677	0	True				
ANR	1085818	CallExpression	"getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw )"		1085677	0					
ANR	1085819	Callee	getput_arg_fast		1085677	0					
ANR	1085820	Identifier	getput_arg_fast		1085677	0					
ANR	1085821	ArgumentList	compiler		1085677	1					
ANR	1085822	Argument	compiler		1085677	0					
ANR	1085823	Identifier	compiler		1085677	0					
ANR	1085824	Argument	input_flags | ARG_TEST		1085677	1					
ANR	1085825	InclusiveOrExpression	input_flags | ARG_TEST		1085677	0		|			
ANR	1085826	Identifier	input_flags		1085677	0					
ANR	1085827	Identifier	ARG_TEST		1085677	1					
ANR	1085828	Argument	TMP_REG2		1085677	2					
ANR	1085829	Identifier	TMP_REG2		1085677	0					
ANR	1085830	Argument	dst		1085677	3					
ANR	1085831	Identifier	dst		1085677	0					
ANR	1085832	Argument	dstw		1085677	4					
ANR	1085833	Identifier	dstw		1085677	0					
ANR	1085834	CompoundStatement		31:78:962:962	1085677	1					
ANR	1085835	ExpressionStatement	flags |= FAST_DEST	1152:3:38256:38274	1085677	0	True				
ANR	1085836	AssignmentExpression	flags |= FAST_DEST		1085677	0		|=			
ANR	1085837	Identifier	flags		1085677	0					
ANR	1085838	Identifier	FAST_DEST		1085677	1					
ANR	1085839	ExpressionStatement	dst_r = TMP_REG2	1153:3:38279:38295	1085677	1	True				
ANR	1085840	AssignmentExpression	dst_r = TMP_REG2		1085677	0		=			
ANR	1085841	Identifier	dst_r		1085677	0					
ANR	1085842	Identifier	TMP_REG2		1085677	1					
ANR	1085843	ElseStatement	else		1085677	0					
ANR	1085844	CompoundStatement		35:7:1019:1019	1085677	0					
ANR	1085845	ExpressionStatement	flags |= SLOW_DEST	1156:3:38313:38331	1085677	0	True				
ANR	1085846	AssignmentExpression	flags |= SLOW_DEST		1085677	0		|=			
ANR	1085847	Identifier	flags		1085677	0					
ANR	1085848	Identifier	SLOW_DEST		1085677	1					
ANR	1085849	ExpressionStatement	dst_r = 0	1157:3:38336:38345	1085677	1	True				
ANR	1085850	AssignmentExpression	dst_r = 0		1085677	0		=			
ANR	1085851	Identifier	dst_r		1085677	0					
ANR	1085852	PrimaryExpression	0		1085677	1					
ANR	1085853	IfStatement	if ( FAST_IS_REG ( src1 ) )		1085677	7					
ANR	1085854	Condition	FAST_IS_REG ( src1 )	1162:5:38377:38393	1085677	0	True				
ANR	1085855	CallExpression	FAST_IS_REG ( src1 )		1085677	0					
ANR	1085856	Callee	FAST_IS_REG		1085677	0					
ANR	1085857	Identifier	FAST_IS_REG		1085677	0					
ANR	1085858	ArgumentList	src1		1085677	1					
ANR	1085859	Argument	src1		1085677	0					
ANR	1085860	Identifier	src1		1085677	0					
ANR	1085861	CompoundStatement		42:24:1107:1107	1085677	1					
ANR	1085862	ExpressionStatement	src1_r = src1	1163:2:38400:38413	1085677	0	True				
ANR	1085863	AssignmentExpression	src1_r = src1		1085677	0		=			
ANR	1085864	Identifier	src1_r		1085677	0					
ANR	1085865	Identifier	src1		1085677	1					
ANR	1085866	ExpressionStatement	flags |= REG1_SOURCE	1164:2:38417:38437	1085677	1	True				
ANR	1085867	AssignmentExpression	flags |= REG1_SOURCE		1085677	0		|=			
ANR	1085868	Identifier	flags		1085677	0					
ANR	1085869	Identifier	REG1_SOURCE		1085677	1					
ANR	1085870	ElseStatement	else		1085677	0					
ANR	1085871	IfStatement	if ( src1 & SLJIT_IMM )		1085677	0					
ANR	1085872	Condition	src1 & SLJIT_IMM	1166:10:38452:38467	1085677	0	True				
ANR	1085873	BitAndExpression	src1 & SLJIT_IMM		1085677	0		&			
ANR	1085874	Identifier	src1		1085677	0					
ANR	1085875	Identifier	SLJIT_IMM		1085677	1					
ANR	1085876	CompoundStatement		46:28:1181:1181	1085677	1					
ANR	1085877	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"	1167:2:38474:38524	1085677	0	True				
ANR	1085878	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"		1085677	0					
ANR	1085879	Callee	FAIL_IF		1085677	0					
ANR	1085880	Identifier	FAIL_IF		1085677	0					
ANR	1085881	ArgumentList	"load_immediate ( compiler , TMP_REG1 , src1w )"		1085677	1					
ANR	1085882	Argument	"load_immediate ( compiler , TMP_REG1 , src1w )"		1085677	0					
ANR	1085883	CallExpression	"load_immediate ( compiler , TMP_REG1 , src1w )"		1085677	0					
ANR	1085884	Callee	load_immediate		1085677	0					
ANR	1085885	Identifier	load_immediate		1085677	0					
ANR	1085886	ArgumentList	compiler		1085677	1					
ANR	1085887	Argument	compiler		1085677	0					
ANR	1085888	Identifier	compiler		1085677	0					
ANR	1085889	Argument	TMP_REG1		1085677	1					
ANR	1085890	Identifier	TMP_REG1		1085677	0					
ANR	1085891	Argument	src1w		1085677	2					
ANR	1085892	Identifier	src1w		1085677	0					
ANR	1085893	ExpressionStatement	src1_r = TMP_REG1	1168:2:38528:38545	1085677	1	True				
ANR	1085894	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1085895	Identifier	src1_r		1085677	0					
ANR	1085896	Identifier	TMP_REG1		1085677	1					
ANR	1085897	ElseStatement	else		1085677	0					
ANR	1085898	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w ) )"		1085677	0					
ANR	1085899	Condition	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"	1170:10:38560:38632	1085677	0	True				
ANR	1085900	CallExpression	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"		1085677	0					
ANR	1085901	Callee	getput_arg_fast		1085677	0					
ANR	1085902	Identifier	getput_arg_fast		1085677	0					
ANR	1085903	ArgumentList	compiler		1085677	1					
ANR	1085904	Argument	compiler		1085677	0					
ANR	1085905	Identifier	compiler		1085677	0					
ANR	1085906	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1085907	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1085908	Identifier	input_flags		1085677	0					
ANR	1085909	Identifier	LOAD_DATA		1085677	1					
ANR	1085910	Argument	TMP_REG1		1085677	2					
ANR	1085911	Identifier	TMP_REG1		1085677	0					
ANR	1085912	Argument	src1		1085677	3					
ANR	1085913	Identifier	src1		1085677	0					
ANR	1085914	Argument	src1w		1085677	4					
ANR	1085915	Identifier	src1w		1085677	0					
ANR	1085916	CompoundStatement		50:85:1346:1346	1085677	1					
ANR	1085917	ExpressionStatement	FAIL_IF ( compiler -> error )	1171:2:38639:38663	1085677	0	True				
ANR	1085918	CallExpression	FAIL_IF ( compiler -> error )		1085677	0					
ANR	1085919	Callee	FAIL_IF		1085677	0					
ANR	1085920	Identifier	FAIL_IF		1085677	0					
ANR	1085921	ArgumentList	compiler -> error		1085677	1					
ANR	1085922	Argument	compiler -> error		1085677	0					
ANR	1085923	PtrMemberAccess	compiler -> error		1085677	0					
ANR	1085924	Identifier	compiler		1085677	0					
ANR	1085925	Identifier	error		1085677	1					
ANR	1085926	ExpressionStatement	src1_r = TMP_REG1	1172:2:38667:38684	1085677	1	True				
ANR	1085927	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1085928	Identifier	src1_r		1085677	0					
ANR	1085929	Identifier	TMP_REG1		1085677	1					
ANR	1085930	ElseStatement	else		1085677	0					
ANR	1085931	ExpressionStatement	src1_r = 0	1175:2:38697:38707	1085677	0	True				
ANR	1085932	AssignmentExpression	src1_r = 0		1085677	0		=			
ANR	1085933	Identifier	src1_r		1085677	0					
ANR	1085934	PrimaryExpression	0		1085677	1					
ANR	1085935	IfStatement	if ( FAST_IS_REG ( src2 ) )		1085677	8					
ANR	1085936	Condition	FAST_IS_REG ( src2 )	1178:5:38732:38748	1085677	0	True				
ANR	1085937	CallExpression	FAST_IS_REG ( src2 )		1085677	0					
ANR	1085938	Callee	FAST_IS_REG		1085677	0					
ANR	1085939	Identifier	FAST_IS_REG		1085677	0					
ANR	1085940	ArgumentList	src2		1085677	1					
ANR	1085941	Argument	src2		1085677	0					
ANR	1085942	Identifier	src2		1085677	0					
ANR	1085943	CompoundStatement		58:24:1462:1462	1085677	1					
ANR	1085944	ExpressionStatement	src2_r = src2	1179:2:38755:38768	1085677	0	True				
ANR	1085945	AssignmentExpression	src2_r = src2		1085677	0		=			
ANR	1085946	Identifier	src2_r		1085677	0					
ANR	1085947	Identifier	src2		1085677	1					
ANR	1085948	ExpressionStatement	flags |= REG2_SOURCE	1180:2:38772:38792	1085677	1	True				
ANR	1085949	AssignmentExpression	flags |= REG2_SOURCE		1085677	0		|=			
ANR	1085950	Identifier	flags		1085677	0					
ANR	1085951	Identifier	REG2_SOURCE		1085677	1					
ANR	1085952	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1085677	2					
ANR	1085953	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1181:6:38800:38860	1085677	0	True				
ANR	1085954	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1085677	0		&&			
ANR	1085955	UnaryOperationExpression	! ( flags & REG_DEST )		1085677	0					
ANR	1085956	UnaryOperator	!		1085677	0					
ANR	1085957	BitAndExpression	flags & REG_DEST		1085677	1		&			
ANR	1085958	Identifier	flags		1085677	0					
ANR	1085959	Identifier	REG_DEST		1085677	1					
ANR	1085960	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1085677	1		&&			
ANR	1085961	RelationalExpression	op >= SLJIT_MOV		1085677	0		>=			
ANR	1085962	Identifier	op		1085677	0					
ANR	1085963	Identifier	SLJIT_MOV		1085677	1					
ANR	1085964	RelationalExpression	op <= SLJIT_MOVU_SI		1085677	1		<=			
ANR	1085965	Identifier	op		1085677	0					
ANR	1085966	Identifier	SLJIT_MOVU_SI		1085677	1					
ANR	1085967	ExpressionStatement	dst_r = src2_r	1182:3:38866:38880	1085677	1	True				
ANR	1085968	AssignmentExpression	dst_r = src2_r		1085677	0		=			
ANR	1085969	Identifier	dst_r		1085677	0					
ANR	1085970	Identifier	src2_r		1085677	1					
ANR	1085971	ElseStatement	else		1085677	0					
ANR	1085972	IfStatement	if ( src2 & SLJIT_IMM )		1085677	0					
ANR	1085973	Condition	src2 & SLJIT_IMM	1184:10:38895:38910	1085677	0	True				
ANR	1085974	BitAndExpression	src2 & SLJIT_IMM		1085677	0		&			
ANR	1085975	Identifier	src2		1085677	0					
ANR	1085976	Identifier	SLJIT_IMM		1085677	1					
ANR	1085977	CompoundStatement		64:28:1624:1624	1085677	1					
ANR	1085978	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"	1185:2:38917:38970	1085677	0	True				
ANR	1085979	CallExpression	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"		1085677	0					
ANR	1085980	Callee	FAIL_IF		1085677	0					
ANR	1085981	Identifier	FAIL_IF		1085677	0					
ANR	1085982	ArgumentList	"load_immediate ( compiler , sugg_src2_r , src2w )"		1085677	1					
ANR	1085983	Argument	"load_immediate ( compiler , sugg_src2_r , src2w )"		1085677	0					
ANR	1085984	CallExpression	"load_immediate ( compiler , sugg_src2_r , src2w )"		1085677	0					
ANR	1085985	Callee	load_immediate		1085677	0					
ANR	1085986	Identifier	load_immediate		1085677	0					
ANR	1085987	ArgumentList	compiler		1085677	1					
ANR	1085988	Argument	compiler		1085677	0					
ANR	1085989	Identifier	compiler		1085677	0					
ANR	1085990	Argument	sugg_src2_r		1085677	1					
ANR	1085991	Identifier	sugg_src2_r		1085677	0					
ANR	1085992	Argument	src2w		1085677	2					
ANR	1085993	Identifier	src2w		1085677	0					
ANR	1085994	ExpressionStatement	src2_r = sugg_src2_r	1186:2:38974:38994	1085677	1	True				
ANR	1085995	AssignmentExpression	src2_r = sugg_src2_r		1085677	0		=			
ANR	1085996	Identifier	src2_r		1085677	0					
ANR	1085997	Identifier	sugg_src2_r		1085677	1					
ANR	1085998	ElseStatement	else		1085677	0					
ANR	1085999	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w ) )"		1085677	0					
ANR	1086000	Condition	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"	1188:10:39009:39084	1085677	0	True				
ANR	1086001	CallExpression	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"		1085677	0					
ANR	1086002	Callee	getput_arg_fast		1085677	0					
ANR	1086003	Identifier	getput_arg_fast		1085677	0					
ANR	1086004	ArgumentList	compiler		1085677	1					
ANR	1086005	Argument	compiler		1085677	0					
ANR	1086006	Identifier	compiler		1085677	0					
ANR	1086007	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086008	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086009	Identifier	input_flags		1085677	0					
ANR	1086010	Identifier	LOAD_DATA		1085677	1					
ANR	1086011	Argument	sugg_src2_r		1085677	2					
ANR	1086012	Identifier	sugg_src2_r		1085677	0					
ANR	1086013	Argument	src2		1085677	3					
ANR	1086014	Identifier	src2		1085677	0					
ANR	1086015	Argument	src2w		1085677	4					
ANR	1086016	Identifier	src2w		1085677	0					
ANR	1086017	CompoundStatement		68:88:1798:1798	1085677	1					
ANR	1086018	ExpressionStatement	FAIL_IF ( compiler -> error )	1189:2:39091:39115	1085677	0	True				
ANR	1086019	CallExpression	FAIL_IF ( compiler -> error )		1085677	0					
ANR	1086020	Callee	FAIL_IF		1085677	0					
ANR	1086021	Identifier	FAIL_IF		1085677	0					
ANR	1086022	ArgumentList	compiler -> error		1085677	1					
ANR	1086023	Argument	compiler -> error		1085677	0					
ANR	1086024	PtrMemberAccess	compiler -> error		1085677	0					
ANR	1086025	Identifier	compiler		1085677	0					
ANR	1086026	Identifier	error		1085677	1					
ANR	1086027	ExpressionStatement	src2_r = sugg_src2_r	1190:2:39119:39139	1085677	1	True				
ANR	1086028	AssignmentExpression	src2_r = sugg_src2_r		1085677	0		=			
ANR	1086029	Identifier	src2_r		1085677	0					
ANR	1086030	Identifier	sugg_src2_r		1085677	1					
ANR	1086031	ElseStatement	else		1085677	0					
ANR	1086032	ExpressionStatement	src2_r = 0	1193:2:39152:39162	1085677	0	True				
ANR	1086033	AssignmentExpression	src2_r = 0		1085677	0		=			
ANR	1086034	Identifier	src2_r		1085677	0					
ANR	1086035	PrimaryExpression	0		1085677	1					
ANR	1086036	IfStatement	if ( src1_r == 0 && src2_r == 0 && dst_r == 0 )		1085677	9					
ANR	1086037	Condition	src1_r == 0 && src2_r == 0 && dst_r == 0	1197:5:39307:39346	1085677	0	True				
ANR	1086038	AndExpression	src1_r == 0 && src2_r == 0 && dst_r == 0		1085677	0		&&			
ANR	1086039	EqualityExpression	src1_r == 0		1085677	0		==			
ANR	1086040	Identifier	src1_r		1085677	0					
ANR	1086041	PrimaryExpression	0		1085677	1					
ANR	1086042	AndExpression	src2_r == 0 && dst_r == 0		1085677	1		&&			
ANR	1086043	EqualityExpression	src2_r == 0		1085677	0		==			
ANR	1086044	Identifier	src2_r		1085677	0					
ANR	1086045	PrimaryExpression	0		1085677	1					
ANR	1086046	EqualityExpression	dst_r == 0		1085677	1		==			
ANR	1086047	Identifier	dst_r		1085677	0					
ANR	1086048	PrimaryExpression	0		1085677	1					
ANR	1086049	CompoundStatement		77:47:2060:2060	1085677	1					
ANR	1086050	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1085677	0					
ANR	1086051	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1198:6:39357:39429	1085677	0	True				
ANR	1086052	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1085677	0		&&			
ANR	1086053	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1085677	0					
ANR	1086054	UnaryOperator	!		1085677	0					
ANR	1086055	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1085677	1					
ANR	1086056	Callee	can_cache		1085677	0					
ANR	1086057	Identifier	can_cache		1085677	0					
ANR	1086058	ArgumentList	src1		1085677	1					
ANR	1086059	Argument	src1		1085677	0					
ANR	1086060	Identifier	src1		1085677	0					
ANR	1086061	Argument	src1w		1085677	1					
ANR	1086062	Identifier	src1w		1085677	0					
ANR	1086063	Argument	src2		1085677	2					
ANR	1086064	Identifier	src2		1085677	0					
ANR	1086065	Argument	src2w		1085677	3					
ANR	1086066	Identifier	src2w		1085677	0					
ANR	1086067	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1085677	1					
ANR	1086068	Callee	can_cache		1085677	0					
ANR	1086069	Identifier	can_cache		1085677	0					
ANR	1086070	ArgumentList	src1		1085677	1					
ANR	1086071	Argument	src1		1085677	0					
ANR	1086072	Identifier	src1		1085677	0					
ANR	1086073	Argument	src1w		1085677	1					
ANR	1086074	Identifier	src1w		1085677	0					
ANR	1086075	Argument	dst		1085677	2					
ANR	1086076	Identifier	dst		1085677	0					
ANR	1086077	Argument	dstw		1085677	3					
ANR	1086078	Identifier	dstw		1085677	0					
ANR	1086079	CompoundStatement		78:81:2143:2143	1085677	1					
ANR	1086080	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	1199:3:39437:39527	1085677	0	True				
ANR	1086081	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1085677	0					
ANR	1086082	Callee	FAIL_IF		1085677	0					
ANR	1086083	Identifier	FAIL_IF		1085677	0					
ANR	1086084	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1085677	1					
ANR	1086085	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1085677	0					
ANR	1086086	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1085677	0					
ANR	1086087	Callee	getput_arg		1085677	0					
ANR	1086088	Identifier	getput_arg		1085677	0					
ANR	1086089	ArgumentList	compiler		1085677	1					
ANR	1086090	Argument	compiler		1085677	0					
ANR	1086091	Identifier	compiler		1085677	0					
ANR	1086092	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086093	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086094	Identifier	input_flags		1085677	0					
ANR	1086095	Identifier	LOAD_DATA		1085677	1					
ANR	1086096	Argument	TMP_REG2		1085677	2					
ANR	1086097	Identifier	TMP_REG2		1085677	0					
ANR	1086098	Argument	src2		1085677	3					
ANR	1086099	Identifier	src2		1085677	0					
ANR	1086100	Argument	src2w		1085677	4					
ANR	1086101	Identifier	src2w		1085677	0					
ANR	1086102	Argument	src1		1085677	5					
ANR	1086103	Identifier	src1		1085677	0					
ANR	1086104	Argument	src1w		1085677	6					
ANR	1086105	Identifier	src1w		1085677	0					
ANR	1086106	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1200:3:39532:39620	1085677	1	True				
ANR	1086107	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1085677	0					
ANR	1086108	Callee	FAIL_IF		1085677	0					
ANR	1086109	Identifier	FAIL_IF		1085677	0					
ANR	1086110	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	1					
ANR	1086111	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	0					
ANR	1086112	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	0					
ANR	1086113	Callee	getput_arg		1085677	0					
ANR	1086114	Identifier	getput_arg		1085677	0					
ANR	1086115	ArgumentList	compiler		1085677	1					
ANR	1086116	Argument	compiler		1085677	0					
ANR	1086117	Identifier	compiler		1085677	0					
ANR	1086118	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086119	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086120	Identifier	input_flags		1085677	0					
ANR	1086121	Identifier	LOAD_DATA		1085677	1					
ANR	1086122	Argument	TMP_REG1		1085677	2					
ANR	1086123	Identifier	TMP_REG1		1085677	0					
ANR	1086124	Argument	src1		1085677	3					
ANR	1086125	Identifier	src1		1085677	0					
ANR	1086126	Argument	src1w		1085677	4					
ANR	1086127	Identifier	src1w		1085677	0					
ANR	1086128	Argument	dst		1085677	5					
ANR	1086129	Identifier	dst		1085677	0					
ANR	1086130	Argument	dstw		1085677	6					
ANR	1086131	Identifier	dstw		1085677	0					
ANR	1086132	ElseStatement	else		1085677	0					
ANR	1086133	CompoundStatement		82:7:2344:2344	1085677	0					
ANR	1086134	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1203:3:39638:39728	1085677	0	True				
ANR	1086135	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1085677	0					
ANR	1086136	Callee	FAIL_IF		1085677	0					
ANR	1086137	Identifier	FAIL_IF		1085677	0					
ANR	1086138	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	1					
ANR	1086139	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	0					
ANR	1086140	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	0					
ANR	1086141	Callee	getput_arg		1085677	0					
ANR	1086142	Identifier	getput_arg		1085677	0					
ANR	1086143	ArgumentList	compiler		1085677	1					
ANR	1086144	Argument	compiler		1085677	0					
ANR	1086145	Identifier	compiler		1085677	0					
ANR	1086146	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086147	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086148	Identifier	input_flags		1085677	0					
ANR	1086149	Identifier	LOAD_DATA		1085677	1					
ANR	1086150	Argument	TMP_REG1		1085677	2					
ANR	1086151	Identifier	TMP_REG1		1085677	0					
ANR	1086152	Argument	src1		1085677	3					
ANR	1086153	Identifier	src1		1085677	0					
ANR	1086154	Argument	src1w		1085677	4					
ANR	1086155	Identifier	src1w		1085677	0					
ANR	1086156	Argument	src2		1085677	5					
ANR	1086157	Identifier	src2		1085677	0					
ANR	1086158	Argument	src2w		1085677	6					
ANR	1086159	Identifier	src2w		1085677	0					
ANR	1086160	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1204:3:39733:39821	1085677	1	True				
ANR	1086161	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1085677	0					
ANR	1086162	Callee	FAIL_IF		1085677	0					
ANR	1086163	Identifier	FAIL_IF		1085677	0					
ANR	1086164	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1085677	1					
ANR	1086165	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1085677	0					
ANR	1086166	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1085677	0					
ANR	1086167	Callee	getput_arg		1085677	0					
ANR	1086168	Identifier	getput_arg		1085677	0					
ANR	1086169	ArgumentList	compiler		1085677	1					
ANR	1086170	Argument	compiler		1085677	0					
ANR	1086171	Identifier	compiler		1085677	0					
ANR	1086172	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086173	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086174	Identifier	input_flags		1085677	0					
ANR	1086175	Identifier	LOAD_DATA		1085677	1					
ANR	1086176	Argument	TMP_REG2		1085677	2					
ANR	1086177	Identifier	TMP_REG2		1085677	0					
ANR	1086178	Argument	src2		1085677	3					
ANR	1086179	Identifier	src2		1085677	0					
ANR	1086180	Argument	src2w		1085677	4					
ANR	1086181	Identifier	src2w		1085677	0					
ANR	1086182	Argument	dst		1085677	5					
ANR	1086183	Identifier	dst		1085677	0					
ANR	1086184	Argument	dstw		1085677	6					
ANR	1086185	Identifier	dstw		1085677	0					
ANR	1086186	ExpressionStatement	src1_r = TMP_REG1	1206:2:39829:39846	1085677	1	True				
ANR	1086187	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1086188	Identifier	src1_r		1085677	0					
ANR	1086189	Identifier	TMP_REG1		1085677	1					
ANR	1086190	ExpressionStatement	src2_r = TMP_REG2	1207:2:39850:39867	1085677	2	True				
ANR	1086191	AssignmentExpression	src2_r = TMP_REG2		1085677	0		=			
ANR	1086192	Identifier	src2_r		1085677	0					
ANR	1086193	Identifier	TMP_REG2		1085677	1					
ANR	1086194	ElseStatement	else		1085677	0					
ANR	1086195	IfStatement	if ( src1_r == 0 && src2_r == 0 )		1085677	0					
ANR	1086196	Condition	src1_r == 0 && src2_r == 0	1209:10:39882:39907	1085677	0	True				
ANR	1086197	AndExpression	src1_r == 0 && src2_r == 0		1085677	0		&&			
ANR	1086198	EqualityExpression	src1_r == 0		1085677	0		==			
ANR	1086199	Identifier	src1_r		1085677	0					
ANR	1086200	PrimaryExpression	0		1085677	1					
ANR	1086201	EqualityExpression	src2_r == 0		1085677	1		==			
ANR	1086202	Identifier	src2_r		1085677	0					
ANR	1086203	PrimaryExpression	0		1085677	1					
ANR	1086204	CompoundStatement		89:38:2621:2621	1085677	1					
ANR	1086205	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1210:2:39914:40004	1085677	0	True				
ANR	1086206	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1085677	0					
ANR	1086207	Callee	FAIL_IF		1085677	0					
ANR	1086208	Identifier	FAIL_IF		1085677	0					
ANR	1086209	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	1					
ANR	1086210	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	0					
ANR	1086211	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1085677	0					
ANR	1086212	Callee	getput_arg		1085677	0					
ANR	1086213	Identifier	getput_arg		1085677	0					
ANR	1086214	ArgumentList	compiler		1085677	1					
ANR	1086215	Argument	compiler		1085677	0					
ANR	1086216	Identifier	compiler		1085677	0					
ANR	1086217	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086218	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086219	Identifier	input_flags		1085677	0					
ANR	1086220	Identifier	LOAD_DATA		1085677	1					
ANR	1086221	Argument	TMP_REG1		1085677	2					
ANR	1086222	Identifier	TMP_REG1		1085677	0					
ANR	1086223	Argument	src1		1085677	3					
ANR	1086224	Identifier	src1		1085677	0					
ANR	1086225	Argument	src1w		1085677	4					
ANR	1086226	Identifier	src1w		1085677	0					
ANR	1086227	Argument	src2		1085677	5					
ANR	1086228	Identifier	src2		1085677	0					
ANR	1086229	Argument	src2w		1085677	6					
ANR	1086230	Identifier	src2w		1085677	0					
ANR	1086231	ExpressionStatement	src1_r = TMP_REG1	1211:2:40008:40025	1085677	1	True				
ANR	1086232	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1086233	Identifier	src1_r		1085677	0					
ANR	1086234	Identifier	TMP_REG1		1085677	1					
ANR	1086235	ElseStatement	else		1085677	0					
ANR	1086236	IfStatement	if ( src1_r == 0 && dst_r == 0 )		1085677	0					
ANR	1086237	Condition	src1_r == 0 && dst_r == 0	1213:10:40040:40064	1085677	0	True				
ANR	1086238	AndExpression	src1_r == 0 && dst_r == 0		1085677	0		&&			
ANR	1086239	EqualityExpression	src1_r == 0		1085677	0		==			
ANR	1086240	Identifier	src1_r		1085677	0					
ANR	1086241	PrimaryExpression	0		1085677	1					
ANR	1086242	EqualityExpression	dst_r == 0		1085677	1		==			
ANR	1086243	Identifier	dst_r		1085677	0					
ANR	1086244	PrimaryExpression	0		1085677	1					
ANR	1086245	CompoundStatement		93:37:2778:2778	1085677	1					
ANR	1086246	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1214:2:40071:40159	1085677	0	True				
ANR	1086247	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1085677	0					
ANR	1086248	Callee	FAIL_IF		1085677	0					
ANR	1086249	Identifier	FAIL_IF		1085677	0					
ANR	1086250	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	1					
ANR	1086251	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	0					
ANR	1086252	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1085677	0					
ANR	1086253	Callee	getput_arg		1085677	0					
ANR	1086254	Identifier	getput_arg		1085677	0					
ANR	1086255	ArgumentList	compiler		1085677	1					
ANR	1086256	Argument	compiler		1085677	0					
ANR	1086257	Identifier	compiler		1085677	0					
ANR	1086258	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086259	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086260	Identifier	input_flags		1085677	0					
ANR	1086261	Identifier	LOAD_DATA		1085677	1					
ANR	1086262	Argument	TMP_REG1		1085677	2					
ANR	1086263	Identifier	TMP_REG1		1085677	0					
ANR	1086264	Argument	src1		1085677	3					
ANR	1086265	Identifier	src1		1085677	0					
ANR	1086266	Argument	src1w		1085677	4					
ANR	1086267	Identifier	src1w		1085677	0					
ANR	1086268	Argument	dst		1085677	5					
ANR	1086269	Identifier	dst		1085677	0					
ANR	1086270	Argument	dstw		1085677	6					
ANR	1086271	Identifier	dstw		1085677	0					
ANR	1086272	ExpressionStatement	src1_r = TMP_REG1	1215:2:40163:40180	1085677	1	True				
ANR	1086273	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1086274	Identifier	src1_r		1085677	0					
ANR	1086275	Identifier	TMP_REG1		1085677	1					
ANR	1086276	ElseStatement	else		1085677	0					
ANR	1086277	IfStatement	if ( src2_r == 0 && dst_r == 0 )		1085677	0					
ANR	1086278	Condition	src2_r == 0 && dst_r == 0	1217:10:40195:40219	1085677	0	True				
ANR	1086279	AndExpression	src2_r == 0 && dst_r == 0		1085677	0		&&			
ANR	1086280	EqualityExpression	src2_r == 0		1085677	0		==			
ANR	1086281	Identifier	src2_r		1085677	0					
ANR	1086282	PrimaryExpression	0		1085677	1					
ANR	1086283	EqualityExpression	dst_r == 0		1085677	1		==			
ANR	1086284	Identifier	dst_r		1085677	0					
ANR	1086285	PrimaryExpression	0		1085677	1					
ANR	1086286	CompoundStatement		97:37:2933:2933	1085677	1					
ANR	1086287	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"	1218:2:40226:40317	1085677	0	True				
ANR	1086288	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"		1085677	0					
ANR	1086289	Callee	FAIL_IF		1085677	0					
ANR	1086290	Identifier	FAIL_IF		1085677	0					
ANR	1086291	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1085677	1					
ANR	1086292	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1085677	0					
ANR	1086293	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1085677	0					
ANR	1086294	Callee	getput_arg		1085677	0					
ANR	1086295	Identifier	getput_arg		1085677	0					
ANR	1086296	ArgumentList	compiler		1085677	1					
ANR	1086297	Argument	compiler		1085677	0					
ANR	1086298	Identifier	compiler		1085677	0					
ANR	1086299	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086300	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086301	Identifier	input_flags		1085677	0					
ANR	1086302	Identifier	LOAD_DATA		1085677	1					
ANR	1086303	Argument	sugg_src2_r		1085677	2					
ANR	1086304	Identifier	sugg_src2_r		1085677	0					
ANR	1086305	Argument	src2		1085677	3					
ANR	1086306	Identifier	src2		1085677	0					
ANR	1086307	Argument	src2w		1085677	4					
ANR	1086308	Identifier	src2w		1085677	0					
ANR	1086309	Argument	dst		1085677	5					
ANR	1086310	Identifier	dst		1085677	0					
ANR	1086311	Argument	dstw		1085677	6					
ANR	1086312	Identifier	dstw		1085677	0					
ANR	1086313	ExpressionStatement	src2_r = sugg_src2_r	1219:2:40321:40341	1085677	1	True				
ANR	1086314	AssignmentExpression	src2_r = sugg_src2_r		1085677	0		=			
ANR	1086315	Identifier	src2_r		1085677	0					
ANR	1086316	Identifier	sugg_src2_r		1085677	1					
ANR	1086317	IfStatement	if ( dst_r == 0 )		1085677	10					
ANR	1086318	Condition	dst_r == 0	1222:5:40352:40361	1085677	0	True				
ANR	1086319	EqualityExpression	dst_r == 0		1085677	0		==			
ANR	1086320	Identifier	dst_r		1085677	0					
ANR	1086321	PrimaryExpression	0		1085677	1					
ANR	1086322	ExpressionStatement	dst_r = TMP_REG2	1223:2:40366:40382	1085677	1	True				
ANR	1086323	AssignmentExpression	dst_r = TMP_REG2		1085677	0		=			
ANR	1086324	Identifier	dst_r		1085677	0					
ANR	1086325	Identifier	TMP_REG2		1085677	1					
ANR	1086326	IfStatement	if ( src1_r == 0 )		1085677	11					
ANR	1086327	Condition	src1_r == 0	1225:5:40390:40400	1085677	0	True				
ANR	1086328	EqualityExpression	src1_r == 0		1085677	0		==			
ANR	1086329	Identifier	src1_r		1085677	0					
ANR	1086330	PrimaryExpression	0		1085677	1					
ANR	1086331	CompoundStatement		105:18:3114:3114	1085677	1					
ANR	1086332	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 ) )"	1226:2:40407:40490	1085677	0	True				
ANR	1086333	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 ) )"		1085677	0					
ANR	1086334	Callee	FAIL_IF		1085677	0					
ANR	1086335	Identifier	FAIL_IF		1085677	0					
ANR	1086336	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1085677	1					
ANR	1086337	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1085677	0					
ANR	1086338	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1085677	0					
ANR	1086339	Callee	getput_arg		1085677	0					
ANR	1086340	Identifier	getput_arg		1085677	0					
ANR	1086341	ArgumentList	compiler		1085677	1					
ANR	1086342	Argument	compiler		1085677	0					
ANR	1086343	Identifier	compiler		1085677	0					
ANR	1086344	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086345	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086346	Identifier	input_flags		1085677	0					
ANR	1086347	Identifier	LOAD_DATA		1085677	1					
ANR	1086348	Argument	TMP_REG1		1085677	2					
ANR	1086349	Identifier	TMP_REG1		1085677	0					
ANR	1086350	Argument	src1		1085677	3					
ANR	1086351	Identifier	src1		1085677	0					
ANR	1086352	Argument	src1w		1085677	4					
ANR	1086353	Identifier	src1w		1085677	0					
ANR	1086354	Argument	0		1085677	5					
ANR	1086355	PrimaryExpression	0		1085677	0					
ANR	1086356	Argument	0		1085677	6					
ANR	1086357	PrimaryExpression	0		1085677	0					
ANR	1086358	ExpressionStatement	src1_r = TMP_REG1	1227:2:40494:40511	1085677	1	True				
ANR	1086359	AssignmentExpression	src1_r = TMP_REG1		1085677	0		=			
ANR	1086360	Identifier	src1_r		1085677	0					
ANR	1086361	Identifier	TMP_REG1		1085677	1					
ANR	1086362	IfStatement	if ( src2_r == 0 )		1085677	12					
ANR	1086363	Condition	src2_r == 0	1230:5:40522:40532	1085677	0	True				
ANR	1086364	EqualityExpression	src2_r == 0		1085677	0		==			
ANR	1086365	Identifier	src2_r		1085677	0					
ANR	1086366	PrimaryExpression	0		1085677	1					
ANR	1086367	CompoundStatement		110:18:3246:3246	1085677	1					
ANR	1086368	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 ) )"	1231:2:40539:40625	1085677	0	True				
ANR	1086369	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 ) )"		1085677	0					
ANR	1086370	Callee	FAIL_IF		1085677	0					
ANR	1086371	Identifier	FAIL_IF		1085677	0					
ANR	1086372	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1085677	1					
ANR	1086373	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1085677	0					
ANR	1086374	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1085677	0					
ANR	1086375	Callee	getput_arg		1085677	0					
ANR	1086376	Identifier	getput_arg		1085677	0					
ANR	1086377	ArgumentList	compiler		1085677	1					
ANR	1086378	Argument	compiler		1085677	0					
ANR	1086379	Identifier	compiler		1085677	0					
ANR	1086380	Argument	input_flags | LOAD_DATA		1085677	1					
ANR	1086381	InclusiveOrExpression	input_flags | LOAD_DATA		1085677	0		|			
ANR	1086382	Identifier	input_flags		1085677	0					
ANR	1086383	Identifier	LOAD_DATA		1085677	1					
ANR	1086384	Argument	sugg_src2_r		1085677	2					
ANR	1086385	Identifier	sugg_src2_r		1085677	0					
ANR	1086386	Argument	src2		1085677	3					
ANR	1086387	Identifier	src2		1085677	0					
ANR	1086388	Argument	src2w		1085677	4					
ANR	1086389	Identifier	src2w		1085677	0					
ANR	1086390	Argument	0		1085677	5					
ANR	1086391	PrimaryExpression	0		1085677	0					
ANR	1086392	Argument	0		1085677	6					
ANR	1086393	PrimaryExpression	0		1085677	0					
ANR	1086394	ExpressionStatement	src2_r = sugg_src2_r	1232:2:40629:40649	1085677	1	True				
ANR	1086395	AssignmentExpression	src2_r = sugg_src2_r		1085677	0		=			
ANR	1086396	Identifier	src2_r		1085677	0					
ANR	1086397	Identifier	sugg_src2_r		1085677	1					
ANR	1086398	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	1235:1:40656:40723	1085677	13	True				
ANR	1086399	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1085677	0					
ANR	1086400	Callee	FAIL_IF		1085677	0					
ANR	1086401	Identifier	FAIL_IF		1085677	0					
ANR	1086402	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1085677	1					
ANR	1086403	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1085677	0					
ANR	1086404	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1085677	0					
ANR	1086405	Callee	emit_single_op		1085677	0					
ANR	1086406	Identifier	emit_single_op		1085677	0					
ANR	1086407	ArgumentList	compiler		1085677	1					
ANR	1086408	Argument	compiler		1085677	0					
ANR	1086409	Identifier	compiler		1085677	0					
ANR	1086410	Argument	op		1085677	1					
ANR	1086411	Identifier	op		1085677	0					
ANR	1086412	Argument	flags		1085677	2					
ANR	1086413	Identifier	flags		1085677	0					
ANR	1086414	Argument	dst_r		1085677	3					
ANR	1086415	Identifier	dst_r		1085677	0					
ANR	1086416	Argument	src1_r		1085677	4					
ANR	1086417	Identifier	src1_r		1085677	0					
ANR	1086418	Argument	src2_r		1085677	5					
ANR	1086419	Identifier	src2_r		1085677	0					
ANR	1086420	IfStatement	if ( flags & ( FAST_DEST | SLOW_DEST ) )		1085677	14					
ANR	1086421	Condition	flags & ( FAST_DEST | SLOW_DEST )	1237:5:40731:40761	1085677	0	True				
ANR	1086422	BitAndExpression	flags & ( FAST_DEST | SLOW_DEST )		1085677	0		&			
ANR	1086423	Identifier	flags		1085677	0					
ANR	1086424	InclusiveOrExpression	FAST_DEST | SLOW_DEST		1085677	1		|			
ANR	1086425	Identifier	FAST_DEST		1085677	0					
ANR	1086426	Identifier	SLOW_DEST		1085677	1					
ANR	1086427	CompoundStatement		117:38:3475:3475	1085677	1					
ANR	1086428	IfStatement	if ( flags & FAST_DEST )		1085677	0					
ANR	1086429	Condition	flags & FAST_DEST	1238:6:40772:40788	1085677	0	True				
ANR	1086430	BitAndExpression	flags & FAST_DEST		1085677	0		&			
ANR	1086431	Identifier	flags		1085677	0					
ANR	1086432	Identifier	FAST_DEST		1085677	1					
ANR	1086433	ExpressionStatement	"FAIL_IF ( getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw ) )"	1239:3:40794:40859	1085677	1	True				
ANR	1086434	CallExpression	"FAIL_IF ( getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw ) )"		1085677	0					
ANR	1086435	Callee	FAIL_IF		1085677	0					
ANR	1086436	Identifier	FAIL_IF		1085677	0					
ANR	1086437	ArgumentList	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1085677	1					
ANR	1086438	Argument	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1085677	0					
ANR	1086439	CallExpression	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1085677	0					
ANR	1086440	Callee	getput_arg_fast		1085677	0					
ANR	1086441	Identifier	getput_arg_fast		1085677	0					
ANR	1086442	ArgumentList	compiler		1085677	1					
ANR	1086443	Argument	compiler		1085677	0					
ANR	1086444	Identifier	compiler		1085677	0					
ANR	1086445	Argument	input_flags		1085677	1					
ANR	1086446	Identifier	input_flags		1085677	0					
ANR	1086447	Argument	dst_r		1085677	2					
ANR	1086448	Identifier	dst_r		1085677	0					
ANR	1086449	Argument	dst		1085677	3					
ANR	1086450	Identifier	dst		1085677	0					
ANR	1086451	Argument	dstw		1085677	4					
ANR	1086452	Identifier	dstw		1085677	0					
ANR	1086453	ElseStatement	else		1085677	0					
ANR	1086454	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 ) )"	1241:3:40871:40937	1085677	0	True				
ANR	1086455	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 ) )"		1085677	0					
ANR	1086456	Callee	FAIL_IF		1085677	0					
ANR	1086457	Identifier	FAIL_IF		1085677	0					
ANR	1086458	ArgumentList	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1085677	1					
ANR	1086459	Argument	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1085677	0					
ANR	1086460	CallExpression	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1085677	0					
ANR	1086461	Callee	getput_arg		1085677	0					
ANR	1086462	Identifier	getput_arg		1085677	0					
ANR	1086463	ArgumentList	compiler		1085677	1					
ANR	1086464	Argument	compiler		1085677	0					
ANR	1086465	Identifier	compiler		1085677	0					
ANR	1086466	Argument	input_flags		1085677	1					
ANR	1086467	Identifier	input_flags		1085677	0					
ANR	1086468	Argument	dst_r		1085677	2					
ANR	1086469	Identifier	dst_r		1085677	0					
ANR	1086470	Argument	dst		1085677	3					
ANR	1086471	Identifier	dst		1085677	0					
ANR	1086472	Argument	dstw		1085677	4					
ANR	1086473	Identifier	dstw		1085677	0					
ANR	1086474	Argument	0		1085677	5					
ANR	1086475	PrimaryExpression	0		1085677	0					
ANR	1086476	Argument	0		1085677	6					
ANR	1086477	PrimaryExpression	0		1085677	0					
ANR	1086478	ReturnStatement	return SLJIT_SUCCESS ;	1243:1:40943:40963	1085677	15	True				
ANR	1086479	Identifier	SLJIT_SUCCESS		1085677	0					
ANR	1086480	ReturnType	static sljit_si		1085677	1					
ANR	1086481	Identifier	emit_op		1085677	2					
ANR	1086482	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si input_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1085677	3					
ANR	1086483	Parameter	struct sljit_compiler * compiler	1117:24:37126:37156	1085677	0	True				
ANR	1086484	ParameterType	struct sljit_compiler *		1085677	0					
ANR	1086485	Identifier	compiler		1085677	1					
ANR	1086486	Parameter	sljit_si op	1117:57:37159:37169	1085677	1	True				
ANR	1086487	ParameterType	sljit_si		1085677	0					
ANR	1086488	Identifier	op		1085677	1					
ANR	1086489	Parameter	sljit_si input_flags	1117:70:37172:37191	1085677	2	True				
ANR	1086490	ParameterType	sljit_si		1085677	0					
ANR	1086491	Identifier	input_flags		1085677	1					
ANR	1086492	Parameter	sljit_si dst	1118:1:37195:37206	1085677	3	True				
ANR	1086493	ParameterType	sljit_si		1085677	0					
ANR	1086494	Identifier	dst		1085677	1					
ANR	1086495	Parameter	sljit_sw dstw	1118:15:37209:37221	1085677	4	True				
ANR	1086496	ParameterType	sljit_sw		1085677	0					
ANR	1086497	Identifier	dstw		1085677	1					
ANR	1086498	Parameter	sljit_si src1	1119:1:37225:37237	1085677	5	True				
ANR	1086499	ParameterType	sljit_si		1085677	0					
ANR	1086500	Identifier	src1		1085677	1					
ANR	1086501	Parameter	sljit_sw src1w	1119:16:37240:37253	1085677	6	True				
ANR	1086502	ParameterType	sljit_sw		1085677	0					
ANR	1086503	Identifier	src1w		1085677	1					
ANR	1086504	Parameter	sljit_si src2	1120:1:37257:37269	1085677	7	True				
ANR	1086505	ParameterType	sljit_si		1085677	0					
ANR	1086506	Identifier	src2		1085677	1					
ANR	1086507	Parameter	sljit_sw src2w	1120:16:37272:37285	1085677	8	True				
ANR	1086508	ParameterType	sljit_sw		1085677	0					
ANR	1086509	Identifier	src2w		1085677	1					
ANR	1086510	CFGEntryNode	ENTRY		1085677		True				
ANR	1086511	CFGExitNode	EXIT		1085677		True				
ANR	1086512	Symbol	TMP_REG2		1085677						
ANR	1086513	Symbol	TMP_REG1		1085677						
ANR	1086514	Symbol	SLJIT_MEM		1085677						
ANR	1086515	Symbol	SLJIT_MOVU_SI		1085677						
ANR	1086516	Symbol	* compiler		1085677						
ANR	1086517	Symbol	ARG_TEST		1085677						
ANR	1086518	Symbol	SLJIT_IMM		1085677						
ANR	1086519	Symbol	getput_arg		1085677						
ANR	1086520	Symbol	FAST_DEST		1085677						
ANR	1086521	Symbol	ALT_SET_FLAGS		1085677						
ANR	1086522	Symbol	can_cache		1085677						
ANR	1086523	Symbol	FAST_IS_REG		1085677						
ANR	1086524	Symbol	compiler -> cache_arg		1085677						
ANR	1086525	Symbol	input_flags		1085677						
ANR	1086526	Symbol	REG2_SOURCE		1085677						
ANR	1086527	Symbol	src1_r		1085677						
ANR	1086528	Symbol	ALT_SIGN_EXT		1085677						
ANR	1086529	Symbol	emit_single_op		1085677						
ANR	1086530	Symbol	REG_DEST		1085677						
ANR	1086531	Symbol	getput_arg_fast		1085677						
ANR	1086532	Symbol	SLJIT_UNLIKELY		1085677						
ANR	1086533	Symbol	compiler -> cache_argw		1085677						
ANR	1086534	Symbol	src1w		1085677						
ANR	1086535	Symbol	dst		1085677						
ANR	1086536	Symbol	LOAD_DATA		1085677						
ANR	1086537	Symbol	SLJIT_MOV		1085677						
ANR	1086538	Symbol	SLOW_DEST		1085677						
ANR	1086539	Symbol	flags		1085677						
ANR	1086540	Symbol	sugg_src2_r		1085677						
ANR	1086541	Symbol	dst_r		1085677						
ANR	1086542	Symbol	load_immediate		1085677						
ANR	1086543	Symbol	ALT_FORM1		1085677						
ANR	1086544	Symbol	ALT_FORM2		1085677						
ANR	1086545	Symbol	ALT_FORM3		1085677						
ANR	1086546	Symbol	ALT_FORM4		1085677						
ANR	1086547	Symbol	ALT_FORM5		1085677						
ANR	1086548	Symbol	compiler		1085677						
ANR	1086549	Symbol	ALT_FORM6		1085677						
ANR	1086550	Symbol	src2w		1085677						
ANR	1086551	Symbol	op		1085677						
ANR	1086552	Symbol	REG1_SOURCE		1085677						
ANR	1086553	Symbol	SLJIT_SUCCESS		1085677						
ANR	1086554	Symbol	src2_r		1085677						
ANR	1086555	Symbol	SLJIT_UNUSED		1085677						
ANR	1086556	Symbol	src1		1085677						
ANR	1086557	Symbol	src2		1085677						
ANR	1086558	Symbol	dstw		1085677						
ANR	1086559	Symbol	ALT_KEEP_CACHE		1085677						
ANR	1086560	Symbol	compiler -> error		1085677						
ANR	1086561	Function	sljit_emit_op0	1246:0:40968:43032							
ANR	1086562	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1086561	0					
ANR	1086563	CompoundStatement		1247:0:41063:43032	1086561	0					
ANR	1086564	IdentifierDeclStatement	sljit_si int_op = op & SLJIT_INT_OP ;	1249:1:41123:41158	1086561	0	True				
ANR	1086565	IdentifierDecl	int_op = op & SLJIT_INT_OP		1086561	0					
ANR	1086566	IdentifierDeclType	sljit_si		1086561	0					
ANR	1086567	Identifier	int_op		1086561	1					
ANR	1086568	AssignmentExpression	int_op = op & SLJIT_INT_OP		1086561	2		=			
ANR	1086569	Identifier	int_op		1086561	0					
ANR	1086570	BitAndExpression	op & SLJIT_INT_OP		1086561	1		&			
ANR	1086571	Identifier	op		1086561	0					
ANR	1086572	Identifier	SLJIT_INT_OP		1086561	1					
ANR	1086573	ExpressionStatement	CHECK_ERROR ( )	1252:1:41169:41182	1086561	1	True				
ANR	1086574	CallExpression	CHECK_ERROR ( )		1086561	0					
ANR	1086575	Callee	CHECK_ERROR		1086561	0					
ANR	1086576	Identifier	CHECK_ERROR		1086561	0					
ANR	1086577	ArgumentList			1086561	1					
ANR	1086578	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1253:1:41185:41226	1086561	2	True				
ANR	1086579	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1086561	0					
ANR	1086580	Callee	CHECK		1086561	0					
ANR	1086581	Identifier	CHECK		1086561	0					
ANR	1086582	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1086561	1					
ANR	1086583	Argument	"check_sljit_emit_op0 ( compiler , op )"		1086561	0					
ANR	1086584	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1086561	0					
ANR	1086585	Callee	check_sljit_emit_op0		1086561	0					
ANR	1086586	Identifier	check_sljit_emit_op0		1086561	0					
ANR	1086587	ArgumentList	compiler		1086561	1					
ANR	1086588	Argument	compiler		1086561	0					
ANR	1086589	Identifier	compiler		1086561	0					
ANR	1086590	Argument	op		1086561	1					
ANR	1086591	Identifier	op		1086561	0					
ANR	1086592	ExpressionStatement	op = GET_OPCODE ( op )	1255:1:41230:41249	1086561	3	True				
ANR	1086593	AssignmentExpression	op = GET_OPCODE ( op )		1086561	0		=			
ANR	1086594	Identifier	op		1086561	0					
ANR	1086595	CallExpression	GET_OPCODE ( op )		1086561	1					
ANR	1086596	Callee	GET_OPCODE		1086561	0					
ANR	1086597	Identifier	GET_OPCODE		1086561	0					
ANR	1086598	ArgumentList	op		1086561	1					
ANR	1086599	Argument	op		1086561	0					
ANR	1086600	Identifier	op		1086561	0					
ANR	1086601	SwitchStatement	switch ( op )		1086561	4					
ANR	1086602	Condition	op	1256:9:41260:41261	1086561	0	True				
ANR	1086603	Identifier	op		1086561	0					
ANR	1086604	CompoundStatement		10:13:200:200	1086561	1					
ANR	1086605	Label	case SLJIT_BREAKPOINT :	1257:1:41267:41288	1086561	0	True				
ANR	1086606	Identifier	SLJIT_BREAKPOINT		1086561	0					
ANR	1086607	Label	case SLJIT_NOP :	1258:1:41291:41305	1086561	1	True				
ANR	1086608	Identifier	SLJIT_NOP		1086561	0					
ANR	1086609	ReturnStatement	"return push_inst ( compiler , NOP ) ;"	1259:2:41309:41340	1086561	2	True				
ANR	1086610	CallExpression	"push_inst ( compiler , NOP )"		1086561	0					
ANR	1086611	Callee	push_inst		1086561	0					
ANR	1086612	Identifier	push_inst		1086561	0					
ANR	1086613	ArgumentList	compiler		1086561	1					
ANR	1086614	Argument	compiler		1086561	0					
ANR	1086615	Identifier	compiler		1086561	0					
ANR	1086616	Argument	NOP		1086561	1					
ANR	1086617	Identifier	NOP		1086561	0					
ANR	1086618	Label	case SLJIT_LUMUL :	1260:1:41343:41359	1086561	3	True				
ANR	1086619	Identifier	SLJIT_LUMUL		1086561	0					
ANR	1086620	Label	case SLJIT_LSMUL :	1261:1:41362:41378	1086561	4	True				
ANR	1086621	Identifier	SLJIT_LSMUL		1086561	0					
ANR	1086622	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"	1262:2:41382:41456	1086561	5	True				
ANR	1086623	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"		1086561	0					
ANR	1086624	Callee	FAIL_IF		1086561	0					
ANR	1086625	Identifier	FAIL_IF		1086561	0					
ANR	1086626	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	1					
ANR	1086627	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	0					
ANR	1086628	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	0					
ANR	1086629	Callee	push_inst		1086561	0					
ANR	1086630	Identifier	push_inst		1086561	0					
ANR	1086631	ArgumentList	compiler		1086561	1					
ANR	1086632	Argument	compiler		1086561	0					
ANR	1086633	Identifier	compiler		1086561	0					
ANR	1086634	Argument	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1					
ANR	1086635	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	0		|			
ANR	1086636	Identifier	OR		1086561	0					
ANR	1086637	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1		|			
ANR	1086638	CallExpression	S ( SLJIT_R0 )		1086561	0					
ANR	1086639	Callee	S		1086561	0					
ANR	1086640	Identifier	S		1086561	0					
ANR	1086641	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086642	Argument	SLJIT_R0		1086561	0					
ANR	1086643	Identifier	SLJIT_R0		1086561	0					
ANR	1086644	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1		|			
ANR	1086645	CallExpression	A ( TMP_REG1 )		1086561	0					
ANR	1086646	Callee	A		1086561	0					
ANR	1086647	Identifier	A		1086561	0					
ANR	1086648	ArgumentList	TMP_REG1		1086561	1					
ANR	1086649	Argument	TMP_REG1		1086561	0					
ANR	1086650	Identifier	TMP_REG1		1086561	0					
ANR	1086651	CallExpression	B ( SLJIT_R0 )		1086561	1					
ANR	1086652	Callee	B		1086561	0					
ANR	1086653	Identifier	B		1086561	0					
ANR	1086654	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086655	Argument	SLJIT_R0		1086561	0					
ANR	1086656	Identifier	SLJIT_R0		1086561	0					
ANR	1086657	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"	1264:2:41517:41594	1086561	6	True				
ANR	1086658	CallExpression	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"		1086561	0					
ANR	1086659	Callee	FAIL_IF		1086561	0					
ANR	1086660	Identifier	FAIL_IF		1086561	0					
ANR	1086661	ArgumentList	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1086561	1					
ANR	1086662	Argument	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086663	CallExpression	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086664	Callee	push_inst		1086561	0					
ANR	1086665	Identifier	push_inst		1086561	0					
ANR	1086666	ArgumentList	compiler		1086561	1					
ANR	1086667	Argument	compiler		1086561	0					
ANR	1086668	Identifier	compiler		1086561	0					
ANR	1086669	Argument	MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1					
ANR	1086670	InclusiveOrExpression	MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	0		|			
ANR	1086671	Identifier	MULLD		1086561	0					
ANR	1086672	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086673	CallExpression	D ( SLJIT_R0 )		1086561	0					
ANR	1086674	Callee	D		1086561	0					
ANR	1086675	Identifier	D		1086561	0					
ANR	1086676	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086677	Argument	SLJIT_R0		1086561	0					
ANR	1086678	Identifier	SLJIT_R0		1086561	0					
ANR	1086679	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086680	CallExpression	A ( TMP_REG1 )		1086561	0					
ANR	1086681	Callee	A		1086561	0					
ANR	1086682	Identifier	A		1086561	0					
ANR	1086683	ArgumentList	TMP_REG1		1086561	1					
ANR	1086684	Argument	TMP_REG1		1086561	0					
ANR	1086685	Identifier	TMP_REG1		1086561	0					
ANR	1086686	CallExpression	B ( SLJIT_R1 )		1086561	1					
ANR	1086687	Callee	B		1086561	0					
ANR	1086688	Identifier	B		1086561	0					
ANR	1086689	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086690	Argument	SLJIT_R1		1086561	0					
ANR	1086691	Identifier	SLJIT_R1		1086561	0					
ANR	1086692	ReturnStatement	"return push_inst ( compiler , ( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) ;"	1265:2:41598:41704	1086561	7	True				
ANR	1086693	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086694	Callee	push_inst		1086561	0					
ANR	1086695	Identifier	push_inst		1086561	0					
ANR	1086696	ArgumentList	compiler		1086561	1					
ANR	1086697	Argument	compiler		1086561	0					
ANR	1086698	Identifier	compiler		1086561	0					
ANR	1086699	Argument	( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1					
ANR	1086700	InclusiveOrExpression	( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	0		|			
ANR	1086701	ConditionalExpression	op == SLJIT_LUMUL ? MULHDU : MULHD		1086561	0					
ANR	1086702	Condition	op == SLJIT_LUMUL		1086561	0					
ANR	1086703	EqualityExpression	op == SLJIT_LUMUL		1086561	0		==			
ANR	1086704	Identifier	op		1086561	0					
ANR	1086705	Identifier	SLJIT_LUMUL		1086561	1					
ANR	1086706	Identifier	MULHDU		1086561	1					
ANR	1086707	Identifier	MULHD		1086561	2					
ANR	1086708	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086709	CallExpression	D ( SLJIT_R1 )		1086561	0					
ANR	1086710	Callee	D		1086561	0					
ANR	1086711	Identifier	D		1086561	0					
ANR	1086712	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086713	Argument	SLJIT_R1		1086561	0					
ANR	1086714	Identifier	SLJIT_R1		1086561	0					
ANR	1086715	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086716	CallExpression	A ( TMP_REG1 )		1086561	0					
ANR	1086717	Callee	A		1086561	0					
ANR	1086718	Identifier	A		1086561	0					
ANR	1086719	ArgumentList	TMP_REG1		1086561	1					
ANR	1086720	Argument	TMP_REG1		1086561	0					
ANR	1086721	Identifier	TMP_REG1		1086561	0					
ANR	1086722	CallExpression	B ( SLJIT_R1 )		1086561	1					
ANR	1086723	Callee	B		1086561	0					
ANR	1086724	Identifier	B		1086561	0					
ANR	1086725	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086726	Argument	SLJIT_R1		1086561	0					
ANR	1086727	Identifier	SLJIT_R1		1086561	0					
ANR	1086728	Label	case SLJIT_UDIVMOD :	1270:1:41911:41929	1086561	8	True				
ANR	1086729	Identifier	SLJIT_UDIVMOD		1086561	0					
ANR	1086730	Label	case SLJIT_SDIVMOD :	1271:1:41932:41950	1086561	9	True				
ANR	1086731	Identifier	SLJIT_SDIVMOD		1086561	0					
ANR	1086732	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"	1272:2:41954:42028	1086561	10	True				
ANR	1086733	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"		1086561	0					
ANR	1086734	Callee	FAIL_IF		1086561	0					
ANR	1086735	Identifier	FAIL_IF		1086561	0					
ANR	1086736	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	1					
ANR	1086737	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	0					
ANR	1086738	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1086561	0					
ANR	1086739	Callee	push_inst		1086561	0					
ANR	1086740	Identifier	push_inst		1086561	0					
ANR	1086741	ArgumentList	compiler		1086561	1					
ANR	1086742	Argument	compiler		1086561	0					
ANR	1086743	Identifier	compiler		1086561	0					
ANR	1086744	Argument	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1					
ANR	1086745	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	0		|			
ANR	1086746	Identifier	OR		1086561	0					
ANR	1086747	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1		|			
ANR	1086748	CallExpression	S ( SLJIT_R0 )		1086561	0					
ANR	1086749	Callee	S		1086561	0					
ANR	1086750	Identifier	S		1086561	0					
ANR	1086751	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086752	Argument	SLJIT_R0		1086561	0					
ANR	1086753	Identifier	SLJIT_R0		1086561	0					
ANR	1086754	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R0 )		1086561	1		|			
ANR	1086755	CallExpression	A ( TMP_REG1 )		1086561	0					
ANR	1086756	Callee	A		1086561	0					
ANR	1086757	Identifier	A		1086561	0					
ANR	1086758	ArgumentList	TMP_REG1		1086561	1					
ANR	1086759	Argument	TMP_REG1		1086561	0					
ANR	1086760	Identifier	TMP_REG1		1086561	0					
ANR	1086761	CallExpression	B ( SLJIT_R0 )		1086561	1					
ANR	1086762	Callee	B		1086561	0					
ANR	1086763	Identifier	B		1086561	0					
ANR	1086764	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086765	Argument	SLJIT_R0		1086561	0					
ANR	1086766	Identifier	SLJIT_R0		1086561	0					
ANR	1086767	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"	1274:2:42089:42247	1086561	11	True				
ANR	1086768	CallExpression	"FAIL_IF ( push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"		1086561	0					
ANR	1086769	Callee	FAIL_IF		1086561	0					
ANR	1086770	Identifier	FAIL_IF		1086561	0					
ANR	1086771	ArgumentList	"push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	1					
ANR	1086772	Argument	"push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086773	CallExpression	"push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086774	Callee	push_inst		1086561	0					
ANR	1086775	Identifier	push_inst		1086561	0					
ANR	1086776	ArgumentList	compiler		1086561	1					
ANR	1086777	Argument	compiler		1086561	0					
ANR	1086778	Identifier	compiler		1086561	0					
ANR	1086779	Argument	( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1					
ANR	1086780	InclusiveOrExpression	( int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	0		|			
ANR	1086781	ConditionalExpression	int_op ? ( op == SLJIT_UDIVMOD ? DIVWU : DIVW ) : ( op == SLJIT_UDIVMOD ? DIVDU : DIVD )		1086561	0					
ANR	1086782	Condition	int_op		1086561	0					
ANR	1086783	Identifier	int_op		1086561	0					
ANR	1086784	ConditionalExpression	op == SLJIT_UDIVMOD ? DIVWU : DIVW		1086561	1					
ANR	1086785	Condition	op == SLJIT_UDIVMOD		1086561	0					
ANR	1086786	EqualityExpression	op == SLJIT_UDIVMOD		1086561	0		==			
ANR	1086787	Identifier	op		1086561	0					
ANR	1086788	Identifier	SLJIT_UDIVMOD		1086561	1					
ANR	1086789	Identifier	DIVWU		1086561	1					
ANR	1086790	Identifier	DIVW		1086561	2					
ANR	1086791	ConditionalExpression	op == SLJIT_UDIVMOD ? DIVDU : DIVD		1086561	2					
ANR	1086792	Condition	op == SLJIT_UDIVMOD		1086561	0					
ANR	1086793	EqualityExpression	op == SLJIT_UDIVMOD		1086561	0		==			
ANR	1086794	Identifier	op		1086561	0					
ANR	1086795	Identifier	SLJIT_UDIVMOD		1086561	1					
ANR	1086796	Identifier	DIVDU		1086561	1					
ANR	1086797	Identifier	DIVD		1086561	2					
ANR	1086798	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086799	CallExpression	D ( SLJIT_R0 )		1086561	0					
ANR	1086800	Callee	D		1086561	0					
ANR	1086801	Identifier	D		1086561	0					
ANR	1086802	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086803	Argument	SLJIT_R0		1086561	0					
ANR	1086804	Identifier	SLJIT_R0		1086561	0					
ANR	1086805	InclusiveOrExpression	A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086806	CallExpression	A ( SLJIT_R0 )		1086561	0					
ANR	1086807	Callee	A		1086561	0					
ANR	1086808	Identifier	A		1086561	0					
ANR	1086809	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086810	Argument	SLJIT_R0		1086561	0					
ANR	1086811	Identifier	SLJIT_R0		1086561	0					
ANR	1086812	CallExpression	B ( SLJIT_R1 )		1086561	1					
ANR	1086813	Callee	B		1086561	0					
ANR	1086814	Identifier	B		1086561	0					
ANR	1086815	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086816	Argument	SLJIT_R1		1086561	0					
ANR	1086817	Identifier	SLJIT_R1		1086561	0					
ANR	1086818	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"	1275:2:42251:42347	1086561	12	True				
ANR	1086819	CallExpression	"FAIL_IF ( push_inst ( compiler , ( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"		1086561	0					
ANR	1086820	Callee	FAIL_IF		1086561	0					
ANR	1086821	Identifier	FAIL_IF		1086561	0					
ANR	1086822	ArgumentList	"push_inst ( compiler , ( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	1					
ANR	1086823	Argument	"push_inst ( compiler , ( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086824	CallExpression	"push_inst ( compiler , ( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086825	Callee	push_inst		1086561	0					
ANR	1086826	Identifier	push_inst		1086561	0					
ANR	1086827	ArgumentList	compiler		1086561	1					
ANR	1086828	Argument	compiler		1086561	0					
ANR	1086829	Identifier	compiler		1086561	0					
ANR	1086830	Argument	( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1					
ANR	1086831	InclusiveOrExpression	( int_op ? MULLW : MULLD ) | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	0		|			
ANR	1086832	ConditionalExpression	int_op ? MULLW : MULLD		1086561	0					
ANR	1086833	Condition	int_op		1086561	0					
ANR	1086834	Identifier	int_op		1086561	0					
ANR	1086835	Identifier	MULLW		1086561	1					
ANR	1086836	Identifier	MULLD		1086561	2					
ANR	1086837	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086838	CallExpression	D ( SLJIT_R1 )		1086561	0					
ANR	1086839	Callee	D		1086561	0					
ANR	1086840	Identifier	D		1086561	0					
ANR	1086841	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086842	Argument	SLJIT_R1		1086561	0					
ANR	1086843	Identifier	SLJIT_R1		1086561	0					
ANR	1086844	InclusiveOrExpression	A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086845	CallExpression	A ( SLJIT_R0 )		1086561	0					
ANR	1086846	Callee	A		1086561	0					
ANR	1086847	Identifier	A		1086561	0					
ANR	1086848	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086849	Argument	SLJIT_R0		1086561	0					
ANR	1086850	Identifier	SLJIT_R0		1086561	0					
ANR	1086851	CallExpression	B ( SLJIT_R1 )		1086561	1					
ANR	1086852	Callee	B		1086561	0					
ANR	1086853	Identifier	B		1086561	0					
ANR	1086854	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086855	Argument	SLJIT_R1		1086561	0					
ANR	1086856	Identifier	SLJIT_R1		1086561	0					
ANR	1086857	ReturnStatement	"return push_inst ( compiler , SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 ) ) ;"	1280:2:42557:42631	1086561	13	True				
ANR	1086858	CallExpression	"push_inst ( compiler , SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 ) )"		1086561	0					
ANR	1086859	Callee	push_inst		1086561	0					
ANR	1086860	Identifier	push_inst		1086561	0					
ANR	1086861	ArgumentList	compiler		1086561	1					
ANR	1086862	Argument	compiler		1086561	0					
ANR	1086863	Identifier	compiler		1086561	0					
ANR	1086864	Argument	SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1086561	1					
ANR	1086865	InclusiveOrExpression	SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1086561	0		|			
ANR	1086866	Identifier	SUBF		1086561	0					
ANR	1086867	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1086561	1		|			
ANR	1086868	CallExpression	D ( SLJIT_R1 )		1086561	0					
ANR	1086869	Callee	D		1086561	0					
ANR	1086870	Identifier	D		1086561	0					
ANR	1086871	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086872	Argument	SLJIT_R1		1086561	0					
ANR	1086873	Identifier	SLJIT_R1		1086561	0					
ANR	1086874	InclusiveOrExpression	A ( SLJIT_R1 ) | B ( TMP_REG1 )		1086561	1		|			
ANR	1086875	CallExpression	A ( SLJIT_R1 )		1086561	0					
ANR	1086876	Callee	A		1086561	0					
ANR	1086877	Identifier	A		1086561	0					
ANR	1086878	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086879	Argument	SLJIT_R1		1086561	0					
ANR	1086880	Identifier	SLJIT_R1		1086561	0					
ANR	1086881	CallExpression	B ( TMP_REG1 )		1086561	1					
ANR	1086882	Callee	B		1086561	0					
ANR	1086883	Identifier	B		1086561	0					
ANR	1086884	ArgumentList	TMP_REG1		1086561	1					
ANR	1086885	Argument	TMP_REG1		1086561	0					
ANR	1086886	Identifier	TMP_REG1		1086561	0					
ANR	1086887	Label	case SLJIT_UDIVI :	1281:1:42634:42650	1086561	14	True				
ANR	1086888	Identifier	SLJIT_UDIVI		1086561	0					
ANR	1086889	Label	case SLJIT_SDIVI :	1282:1:42653:42669	1086561	15	True				
ANR	1086890	Identifier	SLJIT_SDIVI		1086561	0					
ANR	1086891	ReturnStatement	"return push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVI ? DIVWU : DIVW ) : ( op == SLJIT_UDIVI ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) ;"	1284:2:42730:42882	1086561	16	True				
ANR	1086892	CallExpression	"push_inst ( compiler , ( int_op ? ( op == SLJIT_UDIVI ? DIVWU : DIVW ) : ( op == SLJIT_UDIVI ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1086561	0					
ANR	1086893	Callee	push_inst		1086561	0					
ANR	1086894	Identifier	push_inst		1086561	0					
ANR	1086895	ArgumentList	compiler		1086561	1					
ANR	1086896	Argument	compiler		1086561	0					
ANR	1086897	Identifier	compiler		1086561	0					
ANR	1086898	Argument	( int_op ? ( op == SLJIT_UDIVI ? DIVWU : DIVW ) : ( op == SLJIT_UDIVI ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1					
ANR	1086899	InclusiveOrExpression	( int_op ? ( op == SLJIT_UDIVI ? DIVWU : DIVW ) : ( op == SLJIT_UDIVI ? DIVDU : DIVD ) ) | D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	0		|			
ANR	1086900	ConditionalExpression	int_op ? ( op == SLJIT_UDIVI ? DIVWU : DIVW ) : ( op == SLJIT_UDIVI ? DIVDU : DIVD )		1086561	0					
ANR	1086901	Condition	int_op		1086561	0					
ANR	1086902	Identifier	int_op		1086561	0					
ANR	1086903	ConditionalExpression	op == SLJIT_UDIVI ? DIVWU : DIVW		1086561	1					
ANR	1086904	Condition	op == SLJIT_UDIVI		1086561	0					
ANR	1086905	EqualityExpression	op == SLJIT_UDIVI		1086561	0		==			
ANR	1086906	Identifier	op		1086561	0					
ANR	1086907	Identifier	SLJIT_UDIVI		1086561	1					
ANR	1086908	Identifier	DIVWU		1086561	1					
ANR	1086909	Identifier	DIVW		1086561	2					
ANR	1086910	ConditionalExpression	op == SLJIT_UDIVI ? DIVDU : DIVD		1086561	2					
ANR	1086911	Condition	op == SLJIT_UDIVI		1086561	0					
ANR	1086912	EqualityExpression	op == SLJIT_UDIVI		1086561	0		==			
ANR	1086913	Identifier	op		1086561	0					
ANR	1086914	Identifier	SLJIT_UDIVI		1086561	1					
ANR	1086915	Identifier	DIVDU		1086561	1					
ANR	1086916	Identifier	DIVD		1086561	2					
ANR	1086917	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086918	CallExpression	D ( SLJIT_R0 )		1086561	0					
ANR	1086919	Callee	D		1086561	0					
ANR	1086920	Identifier	D		1086561	0					
ANR	1086921	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086922	Argument	SLJIT_R0		1086561	0					
ANR	1086923	Identifier	SLJIT_R0		1086561	0					
ANR	1086924	InclusiveOrExpression	A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1086561	1		|			
ANR	1086925	CallExpression	A ( SLJIT_R0 )		1086561	0					
ANR	1086926	Callee	A		1086561	0					
ANR	1086927	Identifier	A		1086561	0					
ANR	1086928	ArgumentList	SLJIT_R0		1086561	1					
ANR	1086929	Argument	SLJIT_R0		1086561	0					
ANR	1086930	Identifier	SLJIT_R0		1086561	0					
ANR	1086931	CallExpression	B ( SLJIT_R1 )		1086561	1					
ANR	1086932	Callee	B		1086561	0					
ANR	1086933	Identifier	B		1086561	0					
ANR	1086934	ArgumentList	SLJIT_R1		1086561	1					
ANR	1086935	Argument	SLJIT_R1		1086561	0					
ANR	1086936	Identifier	SLJIT_R1		1086561	0					
ANR	1086937	ReturnStatement	return SLJIT_SUCCESS ;	1290:1:43010:43030	1086561	5	True				
ANR	1086938	Identifier	SLJIT_SUCCESS		1086561	0					
ANR	1086939	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1086561	1					
ANR	1086940	Identifier	sljit_emit_op0		1086561	2					
ANR	1086941	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1086561	3					
ANR	1086942	Parameter	struct sljit_compiler * compiler	1246:49:41017:41047	1086561	0	True				
ANR	1086943	ParameterType	struct sljit_compiler *		1086561	0					
ANR	1086944	Identifier	compiler		1086561	1					
ANR	1086945	Parameter	sljit_si op	1246:82:41050:41060	1086561	1	True				
ANR	1086946	ParameterType	sljit_si		1086561	0					
ANR	1086947	Identifier	op		1086561	1					
ANR	1086948	CFGEntryNode	ENTRY		1086561		True				
ANR	1086949	CFGExitNode	EXIT		1086561		True				
ANR	1086950	Symbol	int_op		1086561						
ANR	1086951	Symbol	A		1086561						
ANR	1086952	Symbol	SUBF		1086561						
ANR	1086953	Symbol	B		1086561						
ANR	1086954	Symbol	TMP_REG1		1086561						
ANR	1086955	Symbol	MULHDU		1086561						
ANR	1086956	Symbol	D		1086561						
ANR	1086957	Symbol	MULHD		1086561						
ANR	1086958	Symbol	SLJIT_LUMUL		1086561						
ANR	1086959	Symbol	MULLW		1086561						
ANR	1086960	Symbol	SLJIT_R1		1086561						
ANR	1086961	Symbol	GET_OPCODE		1086561						
ANR	1086962	Symbol	SLJIT_R0		1086561						
ANR	1086963	Symbol	SLJIT_UDIVMOD		1086561						
ANR	1086964	Symbol	S		1086561						
ANR	1086965	Symbol	DIVD		1086561						
ANR	1086966	Symbol	compiler		1086561						
ANR	1086967	Symbol	op		1086561						
ANR	1086968	Symbol	push_inst		1086561						
ANR	1086969	Symbol	DIVDU		1086561						
ANR	1086970	Symbol	OR		1086561						
ANR	1086971	Symbol	check_sljit_emit_op0		1086561						
ANR	1086972	Symbol	DIVW		1086561						
ANR	1086973	Symbol	SLJIT_INT_OP		1086561						
ANR	1086974	Symbol	SLJIT_SUCCESS		1086561						
ANR	1086975	Symbol	SLJIT_UDIVI		1086561						
ANR	1086976	Symbol	NOP		1086561						
ANR	1086977	Symbol	DIVWU		1086561						
ANR	1086978	Symbol	MULLD		1086561						
ANR	1086979	Function	sljit_emit_op1	1296:0:43235:46774							
ANR	1086980	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1086979	0					
ANR	1086981	CompoundStatement		1299:0:43390:46774	1086979	0					
ANR	1086982	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0 ;	1300:1:43393:43443	1086979	0	True				
ANR	1086983	IdentifierDecl	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1086979	0					
ANR	1086984	IdentifierDeclType	sljit_si		1086979	0					
ANR	1086985	Identifier	flags		1086979	1					
ANR	1086986	AssignmentExpression	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1086979	2		=			
ANR	1086987	Identifier	flags		1086979	0					
ANR	1086988	ConditionalExpression	GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1086979	1					
ANR	1086989	Condition	GET_FLAGS ( op )		1086979	0					
ANR	1086990	CallExpression	GET_FLAGS ( op )		1086979	0					
ANR	1086991	Callee	GET_FLAGS		1086979	0					
ANR	1086992	Identifier	GET_FLAGS		1086979	0					
ANR	1086993	ArgumentList	op		1086979	1					
ANR	1086994	Argument	op		1086979	0					
ANR	1086995	Identifier	op		1086979	0					
ANR	1086996	Identifier	ALT_SET_FLAGS		1086979	1					
ANR	1086997	PrimaryExpression	0		1086979	2					
ANR	1086998	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1301:1:43446:43483	1086979	1	True				
ANR	1086999	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1086979	0					
ANR	1087000	IdentifierDeclType	sljit_si		1086979	0					
ANR	1087001	Identifier	op_flags		1086979	1					
ANR	1087002	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1086979	2		=			
ANR	1087003	Identifier	op_flags		1086979	0					
ANR	1087004	CallExpression	GET_ALL_FLAGS ( op )		1086979	1					
ANR	1087005	Callee	GET_ALL_FLAGS		1086979	0					
ANR	1087006	Identifier	GET_ALL_FLAGS		1086979	0					
ANR	1087007	ArgumentList	op		1086979	1					
ANR	1087008	Argument	op		1086979	0					
ANR	1087009	Identifier	op		1086979	0					
ANR	1087010	ExpressionStatement	CHECK_ERROR ( )	1303:1:43487:43500	1086979	2	True				
ANR	1087011	CallExpression	CHECK_ERROR ( )		1086979	0					
ANR	1087012	Callee	CHECK_ERROR		1086979	0					
ANR	1087013	Identifier	CHECK_ERROR		1086979	0					
ANR	1087014	ArgumentList			1086979	1					
ANR	1087015	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1304:1:43503:43566	1086979	3	True				
ANR	1087016	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1086979	0					
ANR	1087017	Callee	CHECK		1086979	0					
ANR	1087018	Identifier	CHECK		1086979	0					
ANR	1087019	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1086979	1					
ANR	1087020	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1086979	0					
ANR	1087021	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1086979	0					
ANR	1087022	Callee	check_sljit_emit_op1		1086979	0					
ANR	1087023	Identifier	check_sljit_emit_op1		1086979	0					
ANR	1087024	ArgumentList	compiler		1086979	1					
ANR	1087025	Argument	compiler		1086979	0					
ANR	1087026	Identifier	compiler		1086979	0					
ANR	1087027	Argument	op		1086979	1					
ANR	1087028	Identifier	op		1086979	0					
ANR	1087029	Argument	dst		1086979	2					
ANR	1087030	Identifier	dst		1086979	0					
ANR	1087031	Argument	dstw		1086979	3					
ANR	1087032	Identifier	dstw		1086979	0					
ANR	1087033	Argument	src		1086979	4					
ANR	1087034	Identifier	src		1086979	0					
ANR	1087035	Argument	srcw		1086979	5					
ANR	1087036	Identifier	srcw		1086979	0					
ANR	1087037	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1305:1:43569:43599	1086979	4	True				
ANR	1087038	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1086979	0					
ANR	1087039	Callee	ADJUST_LOCAL_OFFSET		1086979	0					
ANR	1087040	Identifier	ADJUST_LOCAL_OFFSET		1086979	0					
ANR	1087041	ArgumentList	dst		1086979	1					
ANR	1087042	Argument	dst		1086979	0					
ANR	1087043	Identifier	dst		1086979	0					
ANR	1087044	Argument	dstw		1086979	1					
ANR	1087045	Identifier	dstw		1086979	0					
ANR	1087046	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1306:1:43602:43632	1086979	5	True				
ANR	1087047	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1086979	0					
ANR	1087048	Callee	ADJUST_LOCAL_OFFSET		1086979	0					
ANR	1087049	Identifier	ADJUST_LOCAL_OFFSET		1086979	0					
ANR	1087050	ArgumentList	src		1086979	1					
ANR	1087051	Argument	src		1086979	0					
ANR	1087052	Identifier	src		1086979	0					
ANR	1087053	Argument	srcw		1086979	1					
ANR	1087054	Identifier	srcw		1086979	0					
ANR	1087055	ExpressionStatement	op = GET_OPCODE ( op )	1308:1:43636:43655	1086979	6	True				
ANR	1087056	AssignmentExpression	op = GET_OPCODE ( op )		1086979	0		=			
ANR	1087057	Identifier	op		1086979	0					
ANR	1087058	CallExpression	GET_OPCODE ( op )		1086979	1					
ANR	1087059	Callee	GET_OPCODE		1086979	0					
ANR	1087060	Identifier	GET_OPCODE		1086979	0					
ANR	1087061	ArgumentList	op		1086979	1					
ANR	1087062	Argument	op		1086979	0					
ANR	1087063	Identifier	op		1086979	0					
ANR	1087064	IfStatement	if ( ( src & SLJIT_IMM ) && srcw == 0 )		1086979	7					
ANR	1087065	Condition	( src & SLJIT_IMM ) && srcw == 0	1309:5:43662:43691	1086979	0	True				
ANR	1087066	AndExpression	( src & SLJIT_IMM ) && srcw == 0		1086979	0		&&			
ANR	1087067	BitAndExpression	src & SLJIT_IMM		1086979	0		&			
ANR	1087068	Identifier	src		1086979	0					
ANR	1087069	Identifier	SLJIT_IMM		1086979	1					
ANR	1087070	EqualityExpression	srcw == 0		1086979	1		==			
ANR	1087071	Identifier	srcw		1086979	0					
ANR	1087072	PrimaryExpression	0		1086979	1					
ANR	1087073	ExpressionStatement	src = TMP_ZERO	1310:2:43696:43710	1086979	1	True				
ANR	1087074	AssignmentExpression	src = TMP_ZERO		1086979	0		=			
ANR	1087075	Identifier	src		1086979	0					
ANR	1087076	Identifier	TMP_ZERO		1086979	1					
ANR	1087077	IfStatement	if ( op_flags & SLJIT_SET_O )		1086979	8					
ANR	1087078	Condition	op_flags & SLJIT_SET_O	1312:5:43718:43739	1086979	0	True				
ANR	1087079	BitAndExpression	op_flags & SLJIT_SET_O		1086979	0		&			
ANR	1087080	Identifier	op_flags		1086979	0					
ANR	1087081	Identifier	SLJIT_SET_O		1086979	1					
ANR	1087082	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"	1313:2:43744:43793	1086979	1	True				
ANR	1087083	CallExpression	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"		1086979	0					
ANR	1087084	Callee	FAIL_IF		1086979	0					
ANR	1087085	Identifier	FAIL_IF		1086979	0					
ANR	1087086	ArgumentList	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1086979	1					
ANR	1087087	Argument	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1086979	0					
ANR	1087088	CallExpression	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1086979	0					
ANR	1087089	Callee	push_inst		1086979	0					
ANR	1087090	Identifier	push_inst		1086979	0					
ANR	1087091	ArgumentList	compiler		1086979	1					
ANR	1087092	Argument	compiler		1086979	0					
ANR	1087093	Identifier	compiler		1086979	0					
ANR	1087094	Argument	MTXER | S ( TMP_ZERO )		1086979	1					
ANR	1087095	InclusiveOrExpression	MTXER | S ( TMP_ZERO )		1086979	0		|			
ANR	1087096	Identifier	MTXER		1086979	0					
ANR	1087097	CallExpression	S ( TMP_ZERO )		1086979	1					
ANR	1087098	Callee	S		1086979	0					
ANR	1087099	Identifier	S		1086979	0					
ANR	1087100	ArgumentList	TMP_ZERO		1086979	1					
ANR	1087101	Argument	TMP_ZERO		1086979	0					
ANR	1087102	Identifier	TMP_ZERO		1086979	0					
ANR	1087103	IfStatement	if ( op_flags & SLJIT_INT_OP )		1086979	9					
ANR	1087104	Condition	op_flags & SLJIT_INT_OP	1315:5:43801:43823	1086979	0	True				
ANR	1087105	BitAndExpression	op_flags & SLJIT_INT_OP		1086979	0		&			
ANR	1087106	Identifier	op_flags		1086979	0					
ANR	1087107	Identifier	SLJIT_INT_OP		1086979	1					
ANR	1087108	CompoundStatement		17:30:435:435	1086979	1					
ANR	1087109	IfStatement	if ( op < SLJIT_NOT )		1086979	0					
ANR	1087110	Condition	op < SLJIT_NOT	1316:6:43834:43847	1086979	0	True				
ANR	1087111	RelationalExpression	op < SLJIT_NOT		1086979	0		<			
ANR	1087112	Identifier	op		1086979	0					
ANR	1087113	Identifier	SLJIT_NOT		1086979	1					
ANR	1087114	CompoundStatement		18:22:459:459	1086979	1					
ANR	1087115	IfStatement	if ( FAST_IS_REG ( src ) && src == dst )		1086979	0					
ANR	1087116	Condition	FAST_IS_REG ( src ) && src == dst	1317:7:43859:43888	1086979	0	True				
ANR	1087117	AndExpression	FAST_IS_REG ( src ) && src == dst		1086979	0		&&			
ANR	1087118	CallExpression	FAST_IS_REG ( src )		1086979	0					
ANR	1087119	Callee	FAST_IS_REG		1086979	0					
ANR	1087120	Identifier	FAST_IS_REG		1086979	0					
ANR	1087121	ArgumentList	src		1086979	1					
ANR	1087122	Argument	src		1086979	0					
ANR	1087123	Identifier	src		1086979	0					
ANR	1087124	EqualityExpression	src == dst		1086979	1		==			
ANR	1087125	Identifier	src		1086979	0					
ANR	1087126	Identifier	dst		1086979	1					
ANR	1087127	CompoundStatement		19:39:500:500	1086979	1					
ANR	1087128	IfStatement	if ( ! TYPE_CAST_NEEDED ( op ) )		1086979	0					
ANR	1087129	Condition	! TYPE_CAST_NEEDED ( op )	1318:8:43901:43921	1086979	0	True				
ANR	1087130	UnaryOperationExpression	! TYPE_CAST_NEEDED ( op )		1086979	0					
ANR	1087131	UnaryOperator	!		1086979	0					
ANR	1087132	CallExpression	TYPE_CAST_NEEDED ( op )		1086979	1					
ANR	1087133	Callee	TYPE_CAST_NEEDED		1086979	0					
ANR	1087134	Identifier	TYPE_CAST_NEEDED		1086979	0					
ANR	1087135	ArgumentList	op		1086979	1					
ANR	1087136	Argument	op		1086979	0					
ANR	1087137	Identifier	op		1086979	0					
ANR	1087138	ReturnStatement	return SLJIT_SUCCESS ;	1319:5:43929:43949	1086979	1	True				
ANR	1087139	Identifier	SLJIT_SUCCESS		1086979	0					
ANR	1087140	IfStatement	if ( op == SLJIT_MOV_SI && ( src & SLJIT_MEM ) )		1086979	1					
ANR	1087141	Condition	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )	1322:7:44020:44058	1086979	0	True				
ANR	1087142	AndExpression	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )		1086979	0		&&			
ANR	1087143	EqualityExpression	op == SLJIT_MOV_SI		1086979	0		==			
ANR	1087144	Identifier	op		1086979	0					
ANR	1087145	Identifier	SLJIT_MOV_SI		1086979	1					
ANR	1087146	BitAndExpression	src & SLJIT_MEM		1086979	1		&			
ANR	1087147	Identifier	src		1086979	0					
ANR	1087148	Identifier	SLJIT_MEM		1086979	1					
ANR	1087149	ExpressionStatement	op = SLJIT_MOV_UI	1323:4:44065:44082	1086979	1	True				
ANR	1087150	AssignmentExpression	op = SLJIT_MOV_UI		1086979	0		=			
ANR	1087151	Identifier	op		1086979	0					
ANR	1087152	Identifier	SLJIT_MOV_UI		1086979	1					
ANR	1087153	IfStatement	if ( op == SLJIT_MOVU_SI && ( src & SLJIT_MEM ) )		1086979	2					
ANR	1087154	Condition	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )	1324:7:44091:44130	1086979	0	True				
ANR	1087155	AndExpression	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )		1086979	0		&&			
ANR	1087156	EqualityExpression	op == SLJIT_MOVU_SI		1086979	0		==			
ANR	1087157	Identifier	op		1086979	0					
ANR	1087158	Identifier	SLJIT_MOVU_SI		1086979	1					
ANR	1087159	BitAndExpression	src & SLJIT_MEM		1086979	1		&			
ANR	1087160	Identifier	src		1086979	0					
ANR	1087161	Identifier	SLJIT_MEM		1086979	1					
ANR	1087162	ExpressionStatement	op = SLJIT_MOVU_UI	1325:4:44137:44155	1086979	1	True				
ANR	1087163	AssignmentExpression	op = SLJIT_MOVU_UI		1086979	0		=			
ANR	1087164	Identifier	op		1086979	0					
ANR	1087165	Identifier	SLJIT_MOVU_UI		1086979	1					
ANR	1087166	IfStatement	if ( op == SLJIT_MOV_UI && ( src & SLJIT_IMM ) )		1086979	3					
ANR	1087167	Condition	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )	1326:7:44164:44202	1086979	0	True				
ANR	1087168	AndExpression	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )		1086979	0		&&			
ANR	1087169	EqualityExpression	op == SLJIT_MOV_UI		1086979	0		==			
ANR	1087170	Identifier	op		1086979	0					
ANR	1087171	Identifier	SLJIT_MOV_UI		1086979	1					
ANR	1087172	BitAndExpression	src & SLJIT_IMM		1086979	1		&			
ANR	1087173	Identifier	src		1086979	0					
ANR	1087174	Identifier	SLJIT_IMM		1086979	1					
ANR	1087175	ExpressionStatement	op = SLJIT_MOV_SI	1327:4:44209:44226	1086979	1	True				
ANR	1087176	AssignmentExpression	op = SLJIT_MOV_SI		1086979	0		=			
ANR	1087177	Identifier	op		1086979	0					
ANR	1087178	Identifier	SLJIT_MOV_SI		1086979	1					
ANR	1087179	IfStatement	if ( op == SLJIT_MOVU_UI && ( src & SLJIT_IMM ) )		1086979	4					
ANR	1087180	Condition	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )	1328:7:44235:44274	1086979	0	True				
ANR	1087181	AndExpression	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )		1086979	0		&&			
ANR	1087182	EqualityExpression	op == SLJIT_MOVU_UI		1086979	0		==			
ANR	1087183	Identifier	op		1086979	0					
ANR	1087184	Identifier	SLJIT_MOVU_UI		1086979	1					
ANR	1087185	BitAndExpression	src & SLJIT_IMM		1086979	1		&			
ANR	1087186	Identifier	src		1086979	0					
ANR	1087187	Identifier	SLJIT_IMM		1086979	1					
ANR	1087188	ExpressionStatement	op = SLJIT_MOVU_SI	1329:4:44281:44299	1086979	1	True				
ANR	1087189	AssignmentExpression	op = SLJIT_MOVU_SI		1086979	0		=			
ANR	1087190	Identifier	op		1086979	0					
ANR	1087191	Identifier	SLJIT_MOVU_SI		1086979	1					
ANR	1087192	ElseStatement	else		1086979	0					
ANR	1087193	CompoundStatement		35:7:985:985	1086979	0					
ANR	1087194	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1335:3:44438:44469	1086979	0	True				
ANR	1087195	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1086979	0		|=			
ANR	1087196	Identifier	flags		1086979	0					
ANR	1087197	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1086979	1		|			
ANR	1087198	Identifier	INT_DATA		1086979	0					
ANR	1087199	Identifier	SIGNED_DATA		1086979	1					
ANR	1087200	IfStatement	if ( src & SLJIT_IMM )		1086979	1					
ANR	1087201	Condition	src & SLJIT_IMM	1336:7:44478:44492	1086979	0	True				
ANR	1087202	BitAndExpression	src & SLJIT_IMM		1086979	0		&			
ANR	1087203	Identifier	src		1086979	0					
ANR	1087204	Identifier	SLJIT_IMM		1086979	1					
ANR	1087205	ExpressionStatement	srcw = ( sljit_si ) srcw	1337:4:44499:44520	1086979	1	True				
ANR	1087206	AssignmentExpression	srcw = ( sljit_si ) srcw		1086979	0		=			
ANR	1087207	Identifier	srcw		1086979	0					
ANR	1087208	CastExpression	( sljit_si ) srcw		1086979	1					
ANR	1087209	CastTarget	sljit_si		1086979	0					
ANR	1087210	Identifier	srcw		1086979	1					
ANR	1087211	SwitchStatement	switch ( op )		1086979	10					
ANR	1087212	Condition	op	1342:9:44546:44547	1086979	0	True				
ANR	1087213	Identifier	op		1086979	0					
ANR	1087214	CompoundStatement		44:13:1159:1159	1086979	1					
ANR	1087215	Label	case SLJIT_MOV :	1343:1:44553:44567	1086979	0	True				
ANR	1087216	Identifier	SLJIT_MOV		1086979	0					
ANR	1087217	Label	case SLJIT_MOV_P :	1344:1:44570:44586	1086979	1	True				
ANR	1087218	Identifier	SLJIT_MOV_P		1086979	0					
ANR	1087219	Label	case SLJIT_MOV_UI :	1346:1:44646:44663	1086979	2	True				
ANR	1087220	Identifier	SLJIT_MOV_UI		1086979	0					
ANR	1087221	Label	case SLJIT_MOV_SI :	1347:1:44666:44683	1086979	3	True				
ANR	1087222	Identifier	SLJIT_MOV_SI		1086979	0					
ANR	1087223	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1349:2:44694:44783	1086979	4	True				
ANR	1087224	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1086979	0					
ANR	1087225	Callee	emit_op		1086979	0					
ANR	1087226	Identifier	emit_op		1086979	0					
ANR	1087227	ArgumentList	compiler		1086979	1					
ANR	1087228	Argument	compiler		1086979	0					
ANR	1087229	Identifier	compiler		1086979	0					
ANR	1087230	Argument	SLJIT_MOV		1086979	1					
ANR	1087231	Identifier	SLJIT_MOV		1086979	0					
ANR	1087232	Argument	flags | WORD_DATA		1086979	2					
ANR	1087233	InclusiveOrExpression	flags | WORD_DATA		1086979	0		|			
ANR	1087234	Identifier	flags		1086979	0					
ANR	1087235	Identifier	WORD_DATA		1086979	1					
ANR	1087236	Argument	dst		1086979	3					
ANR	1087237	Identifier	dst		1086979	0					
ANR	1087238	Argument	dstw		1086979	4					
ANR	1087239	Identifier	dstw		1086979	0					
ANR	1087240	Argument	TMP_REG1		1086979	5					
ANR	1087241	Identifier	TMP_REG1		1086979	0					
ANR	1087242	Argument	0		1086979	6					
ANR	1087243	PrimaryExpression	0		1086979	0					
ANR	1087244	Argument	src		1086979	7					
ANR	1087245	Identifier	src		1086979	0					
ANR	1087246	Argument	srcw		1086979	8					
ANR	1087247	Identifier	srcw		1086979	0					
ANR	1087248	Label	case SLJIT_MOV_UI :	1352:1:44844:44861	1086979	5	True				
ANR	1087249	Identifier	SLJIT_MOV_UI		1086979	0					
ANR	1087250	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UI , INT_DATA , ( sljit_ui ) ) ;"	1353:2:44865:44916	1086979	6	True				
ANR	1087251	CallExpression	"EMIT_MOV ( SLJIT_MOV_UI , INT_DATA , ( sljit_ui ) )"		1086979	0					
ANR	1087252	Callee	EMIT_MOV		1086979	0					
ANR	1087253	Identifier	EMIT_MOV		1086979	0					
ANR	1087254	ArgumentList	SLJIT_MOV_UI		1086979	1					
ANR	1087255	Argument	SLJIT_MOV_UI		1086979	0					
ANR	1087256	Identifier	SLJIT_MOV_UI		1086979	0					
ANR	1087257	Argument	INT_DATA		1086979	1					
ANR	1087258	Identifier	INT_DATA		1086979	0					
ANR	1087259	Argument	sljit_ui		1086979	2					
ANR	1087260	Identifier	sljit_ui		1086979	0					
ANR	1087261	Label	case SLJIT_MOV_SI :	1355:1:44920:44937	1086979	7	True				
ANR	1087262	Identifier	SLJIT_MOV_SI		1086979	0					
ANR	1087263	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , ( sljit_si ) ) ;"	1356:2:44941:45006	1086979	8	True				
ANR	1087264	CallExpression	"EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , ( sljit_si ) )"		1086979	0					
ANR	1087265	Callee	EMIT_MOV		1086979	0					
ANR	1087266	Identifier	EMIT_MOV		1086979	0					
ANR	1087267	ArgumentList	SLJIT_MOV_SI		1086979	1					
ANR	1087268	Argument	SLJIT_MOV_SI		1086979	0					
ANR	1087269	Identifier	SLJIT_MOV_SI		1086979	0					
ANR	1087270	Argument	INT_DATA | SIGNED_DATA		1086979	1					
ANR	1087271	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1086979	0		|			
ANR	1087272	Identifier	INT_DATA		1086979	0					
ANR	1087273	Identifier	SIGNED_DATA		1086979	1					
ANR	1087274	Argument	sljit_si		1086979	2					
ANR	1087275	Identifier	sljit_si		1086979	0					
ANR	1087276	Label	case SLJIT_MOV_UB :	1359:1:45017:45034	1086979	9	True				
ANR	1087277	Identifier	SLJIT_MOV_UB		1086979	0					
ANR	1087278	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA , ( sljit_ub ) ) ;"	1360:2:45038:45090	1086979	10	True				
ANR	1087279	CallExpression	"EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA , ( sljit_ub ) )"		1086979	0					
ANR	1087280	Callee	EMIT_MOV		1086979	0					
ANR	1087281	Identifier	EMIT_MOV		1086979	0					
ANR	1087282	ArgumentList	SLJIT_MOV_UB		1086979	1					
ANR	1087283	Argument	SLJIT_MOV_UB		1086979	0					
ANR	1087284	Identifier	SLJIT_MOV_UB		1086979	0					
ANR	1087285	Argument	BYTE_DATA		1086979	1					
ANR	1087286	Identifier	BYTE_DATA		1086979	0					
ANR	1087287	Argument	sljit_ub		1086979	2					
ANR	1087288	Identifier	sljit_ub		1086979	0					
ANR	1087289	Label	case SLJIT_MOV_SB :	1362:1:45094:45111	1086979	11	True				
ANR	1087290	Identifier	SLJIT_MOV_SB		1086979	0					
ANR	1087291	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , ( sljit_sb ) ) ;"	1363:2:45115:45181	1086979	12	True				
ANR	1087292	CallExpression	"EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , ( sljit_sb ) )"		1086979	0					
ANR	1087293	Callee	EMIT_MOV		1086979	0					
ANR	1087294	Identifier	EMIT_MOV		1086979	0					
ANR	1087295	ArgumentList	SLJIT_MOV_SB		1086979	1					
ANR	1087296	Argument	SLJIT_MOV_SB		1086979	0					
ANR	1087297	Identifier	SLJIT_MOV_SB		1086979	0					
ANR	1087298	Argument	BYTE_DATA | SIGNED_DATA		1086979	1					
ANR	1087299	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1086979	0		|			
ANR	1087300	Identifier	BYTE_DATA		1086979	0					
ANR	1087301	Identifier	SIGNED_DATA		1086979	1					
ANR	1087302	Argument	sljit_sb		1086979	2					
ANR	1087303	Identifier	sljit_sb		1086979	0					
ANR	1087304	Label	case SLJIT_MOV_UH :	1365:1:45185:45202	1086979	13	True				
ANR	1087305	Identifier	SLJIT_MOV_UH		1086979	0					
ANR	1087306	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA , ( sljit_uh ) ) ;"	1366:2:45206:45258	1086979	14	True				
ANR	1087307	CallExpression	"EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA , ( sljit_uh ) )"		1086979	0					
ANR	1087308	Callee	EMIT_MOV		1086979	0					
ANR	1087309	Identifier	EMIT_MOV		1086979	0					
ANR	1087310	ArgumentList	SLJIT_MOV_UH		1086979	1					
ANR	1087311	Argument	SLJIT_MOV_UH		1086979	0					
ANR	1087312	Identifier	SLJIT_MOV_UH		1086979	0					
ANR	1087313	Argument	HALF_DATA		1086979	1					
ANR	1087314	Identifier	HALF_DATA		1086979	0					
ANR	1087315	Argument	sljit_uh		1086979	2					
ANR	1087316	Identifier	sljit_uh		1086979	0					
ANR	1087317	Label	case SLJIT_MOV_SH :	1368:1:45262:45279	1086979	15	True				
ANR	1087318	Identifier	SLJIT_MOV_SH		1086979	0					
ANR	1087319	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , ( sljit_sh ) ) ;"	1369:2:45283:45349	1086979	16	True				
ANR	1087320	CallExpression	"EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , ( sljit_sh ) )"		1086979	0					
ANR	1087321	Callee	EMIT_MOV		1086979	0					
ANR	1087322	Identifier	EMIT_MOV		1086979	0					
ANR	1087323	ArgumentList	SLJIT_MOV_SH		1086979	1					
ANR	1087324	Argument	SLJIT_MOV_SH		1086979	0					
ANR	1087325	Identifier	SLJIT_MOV_SH		1086979	0					
ANR	1087326	Argument	HALF_DATA | SIGNED_DATA		1086979	1					
ANR	1087327	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1086979	0		|			
ANR	1087328	Identifier	HALF_DATA		1086979	0					
ANR	1087329	Identifier	SIGNED_DATA		1086979	1					
ANR	1087330	Argument	sljit_sh		1086979	2					
ANR	1087331	Identifier	sljit_sh		1086979	0					
ANR	1087332	Label	case SLJIT_MOVU :	1371:1:45353:45368	1086979	17	True				
ANR	1087333	Identifier	SLJIT_MOVU		1086979	0					
ANR	1087334	Label	case SLJIT_MOVU_P :	1372:1:45371:45388	1086979	18	True				
ANR	1087335	Identifier	SLJIT_MOVU_P		1086979	0					
ANR	1087336	Label	case SLJIT_MOVU_UI :	1374:1:45448:45466	1086979	19	True				
ANR	1087337	Identifier	SLJIT_MOVU_UI		1086979	0					
ANR	1087338	Label	case SLJIT_MOVU_SI :	1375:1:45469:45487	1086979	20	True				
ANR	1087339	Identifier	SLJIT_MOVU_SI		1086979	0					
ANR	1087340	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1377:2:45498:45600	1086979	21	True				
ANR	1087341	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1086979	0					
ANR	1087342	Callee	emit_op		1086979	0					
ANR	1087343	Identifier	emit_op		1086979	0					
ANR	1087344	ArgumentList	compiler		1086979	1					
ANR	1087345	Argument	compiler		1086979	0					
ANR	1087346	Identifier	compiler		1086979	0					
ANR	1087347	Argument	SLJIT_MOV		1086979	1					
ANR	1087348	Identifier	SLJIT_MOV		1086979	0					
ANR	1087349	Argument	flags | WORD_DATA | WRITE_BACK		1086979	2					
ANR	1087350	InclusiveOrExpression	flags | WORD_DATA | WRITE_BACK		1086979	0		|			
ANR	1087351	Identifier	flags		1086979	0					
ANR	1087352	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1086979	1		|			
ANR	1087353	Identifier	WORD_DATA		1086979	0					
ANR	1087354	Identifier	WRITE_BACK		1086979	1					
ANR	1087355	Argument	dst		1086979	3					
ANR	1087356	Identifier	dst		1086979	0					
ANR	1087357	Argument	dstw		1086979	4					
ANR	1087358	Identifier	dstw		1086979	0					
ANR	1087359	Argument	TMP_REG1		1086979	5					
ANR	1087360	Identifier	TMP_REG1		1086979	0					
ANR	1087361	Argument	0		1086979	6					
ANR	1087362	PrimaryExpression	0		1086979	0					
ANR	1087363	Argument	src		1086979	7					
ANR	1087364	Identifier	src		1086979	0					
ANR	1087365	Argument	srcw		1086979	8					
ANR	1087366	Identifier	srcw		1086979	0					
ANR	1087367	Label	case SLJIT_MOVU_UI :	1380:1:45661:45679	1086979	22	True				
ANR	1087368	Identifier	SLJIT_MOVU_UI		1086979	0					
ANR	1087369	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UI , INT_DATA | WRITE_BACK , ( sljit_ui ) ) ;"	1381:2:45683:45747	1086979	23	True				
ANR	1087370	CallExpression	"EMIT_MOV ( SLJIT_MOV_UI , INT_DATA | WRITE_BACK , ( sljit_ui ) )"		1086979	0					
ANR	1087371	Callee	EMIT_MOV		1086979	0					
ANR	1087372	Identifier	EMIT_MOV		1086979	0					
ANR	1087373	ArgumentList	SLJIT_MOV_UI		1086979	1					
ANR	1087374	Argument	SLJIT_MOV_UI		1086979	0					
ANR	1087375	Identifier	SLJIT_MOV_UI		1086979	0					
ANR	1087376	Argument	INT_DATA | WRITE_BACK		1086979	1					
ANR	1087377	InclusiveOrExpression	INT_DATA | WRITE_BACK		1086979	0		|			
ANR	1087378	Identifier	INT_DATA		1086979	0					
ANR	1087379	Identifier	WRITE_BACK		1086979	1					
ANR	1087380	Argument	sljit_ui		1086979	2					
ANR	1087381	Identifier	sljit_ui		1086979	0					
ANR	1087382	Label	case SLJIT_MOVU_SI :	1383:1:45751:45769	1086979	24	True				
ANR	1087383	Identifier	SLJIT_MOVU_SI		1086979	0					
ANR	1087384	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_si ) ) ;"	1384:2:45773:45851	1086979	25	True				
ANR	1087385	CallExpression	"EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_si ) )"		1086979	0					
ANR	1087386	Callee	EMIT_MOV		1086979	0					
ANR	1087387	Identifier	EMIT_MOV		1086979	0					
ANR	1087388	ArgumentList	SLJIT_MOV_SI		1086979	1					
ANR	1087389	Argument	SLJIT_MOV_SI		1086979	0					
ANR	1087390	Identifier	SLJIT_MOV_SI		1086979	0					
ANR	1087391	Argument	INT_DATA | SIGNED_DATA | WRITE_BACK		1086979	1					
ANR	1087392	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1086979	0		|			
ANR	1087393	Identifier	INT_DATA		1086979	0					
ANR	1087394	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1086979	1		|			
ANR	1087395	Identifier	SIGNED_DATA		1086979	0					
ANR	1087396	Identifier	WRITE_BACK		1086979	1					
ANR	1087397	Argument	sljit_si		1086979	2					
ANR	1087398	Identifier	sljit_si		1086979	0					
ANR	1087399	Label	case SLJIT_MOVU_UB :	1387:1:45862:45880	1086979	26	True				
ANR	1087400	Identifier	SLJIT_MOVU_UB		1086979	0					
ANR	1087401	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , ( sljit_ub ) ) ;"	1388:2:45884:45949	1086979	27	True				
ANR	1087402	CallExpression	"EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , ( sljit_ub ) )"		1086979	0					
ANR	1087403	Callee	EMIT_MOV		1086979	0					
ANR	1087404	Identifier	EMIT_MOV		1086979	0					
ANR	1087405	ArgumentList	SLJIT_MOV_UB		1086979	1					
ANR	1087406	Argument	SLJIT_MOV_UB		1086979	0					
ANR	1087407	Identifier	SLJIT_MOV_UB		1086979	0					
ANR	1087408	Argument	BYTE_DATA | WRITE_BACK		1086979	1					
ANR	1087409	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1086979	0		|			
ANR	1087410	Identifier	BYTE_DATA		1086979	0					
ANR	1087411	Identifier	WRITE_BACK		1086979	1					
ANR	1087412	Argument	sljit_ub		1086979	2					
ANR	1087413	Identifier	sljit_ub		1086979	0					
ANR	1087414	Label	case SLJIT_MOVU_SB :	1390:1:45953:45971	1086979	28	True				
ANR	1087415	Identifier	SLJIT_MOVU_SB		1086979	0					
ANR	1087416	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sb ) ) ;"	1391:2:45975:46054	1086979	29	True				
ANR	1087417	CallExpression	"EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sb ) )"		1086979	0					
ANR	1087418	Callee	EMIT_MOV		1086979	0					
ANR	1087419	Identifier	EMIT_MOV		1086979	0					
ANR	1087420	ArgumentList	SLJIT_MOV_SB		1086979	1					
ANR	1087421	Argument	SLJIT_MOV_SB		1086979	0					
ANR	1087422	Identifier	SLJIT_MOV_SB		1086979	0					
ANR	1087423	Argument	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1086979	1					
ANR	1087424	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1086979	0		|			
ANR	1087425	Identifier	BYTE_DATA		1086979	0					
ANR	1087426	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1086979	1		|			
ANR	1087427	Identifier	SIGNED_DATA		1086979	0					
ANR	1087428	Identifier	WRITE_BACK		1086979	1					
ANR	1087429	Argument	sljit_sb		1086979	2					
ANR	1087430	Identifier	sljit_sb		1086979	0					
ANR	1087431	Label	case SLJIT_MOVU_UH :	1393:1:46058:46076	1086979	30	True				
ANR	1087432	Identifier	SLJIT_MOVU_UH		1086979	0					
ANR	1087433	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , ( sljit_uh ) ) ;"	1394:2:46080:46145	1086979	31	True				
ANR	1087434	CallExpression	"EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , ( sljit_uh ) )"		1086979	0					
ANR	1087435	Callee	EMIT_MOV		1086979	0					
ANR	1087436	Identifier	EMIT_MOV		1086979	0					
ANR	1087437	ArgumentList	SLJIT_MOV_UH		1086979	1					
ANR	1087438	Argument	SLJIT_MOV_UH		1086979	0					
ANR	1087439	Identifier	SLJIT_MOV_UH		1086979	0					
ANR	1087440	Argument	HALF_DATA | WRITE_BACK		1086979	1					
ANR	1087441	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1086979	0		|			
ANR	1087442	Identifier	HALF_DATA		1086979	0					
ANR	1087443	Identifier	WRITE_BACK		1086979	1					
ANR	1087444	Argument	sljit_uh		1086979	2					
ANR	1087445	Identifier	sljit_uh		1086979	0					
ANR	1087446	Label	case SLJIT_MOVU_SH :	1396:1:46149:46167	1086979	32	True				
ANR	1087447	Identifier	SLJIT_MOVU_SH		1086979	0					
ANR	1087448	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sh ) ) ;"	1397:2:46171:46250	1086979	33	True				
ANR	1087449	CallExpression	"EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sh ) )"		1086979	0					
ANR	1087450	Callee	EMIT_MOV		1086979	0					
ANR	1087451	Identifier	EMIT_MOV		1086979	0					
ANR	1087452	ArgumentList	SLJIT_MOV_SH		1086979	1					
ANR	1087453	Argument	SLJIT_MOV_SH		1086979	0					
ANR	1087454	Identifier	SLJIT_MOV_SH		1086979	0					
ANR	1087455	Argument	HALF_DATA | SIGNED_DATA | WRITE_BACK		1086979	1					
ANR	1087456	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1086979	0		|			
ANR	1087457	Identifier	HALF_DATA		1086979	0					
ANR	1087458	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1086979	1		|			
ANR	1087459	Identifier	SIGNED_DATA		1086979	0					
ANR	1087460	Identifier	WRITE_BACK		1086979	1					
ANR	1087461	Argument	sljit_sh		1086979	2					
ANR	1087462	Identifier	sljit_sh		1086979	0					
ANR	1087463	Label	case SLJIT_NOT :	1399:1:46254:46268	1086979	34	True				
ANR	1087464	Identifier	SLJIT_NOT		1086979	0					
ANR	1087465	ReturnStatement	"return emit_op ( compiler , SLJIT_NOT , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1400:2:46272:46349	1086979	35	True				
ANR	1087466	CallExpression	"emit_op ( compiler , SLJIT_NOT , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1086979	0					
ANR	1087467	Callee	emit_op		1086979	0					
ANR	1087468	Identifier	emit_op		1086979	0					
ANR	1087469	ArgumentList	compiler		1086979	1					
ANR	1087470	Argument	compiler		1086979	0					
ANR	1087471	Identifier	compiler		1086979	0					
ANR	1087472	Argument	SLJIT_NOT		1086979	1					
ANR	1087473	Identifier	SLJIT_NOT		1086979	0					
ANR	1087474	Argument	flags		1086979	2					
ANR	1087475	Identifier	flags		1086979	0					
ANR	1087476	Argument	dst		1086979	3					
ANR	1087477	Identifier	dst		1086979	0					
ANR	1087478	Argument	dstw		1086979	4					
ANR	1087479	Identifier	dstw		1086979	0					
ANR	1087480	Argument	TMP_REG1		1086979	5					
ANR	1087481	Identifier	TMP_REG1		1086979	0					
ANR	1087482	Argument	0		1086979	6					
ANR	1087483	PrimaryExpression	0		1086979	0					
ANR	1087484	Argument	src		1086979	7					
ANR	1087485	Identifier	src		1086979	0					
ANR	1087486	Argument	srcw		1086979	8					
ANR	1087487	Identifier	srcw		1086979	0					
ANR	1087488	Label	case SLJIT_NEG :	1402:1:46353:46367	1086979	36	True				
ANR	1087489	Identifier	SLJIT_NEG		1086979	0					
ANR	1087490	ReturnStatement	"return emit_op ( compiler , SLJIT_NEG , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1403:2:46371:46448	1086979	37	True				
ANR	1087491	CallExpression	"emit_op ( compiler , SLJIT_NEG , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1086979	0					
ANR	1087492	Callee	emit_op		1086979	0					
ANR	1087493	Identifier	emit_op		1086979	0					
ANR	1087494	ArgumentList	compiler		1086979	1					
ANR	1087495	Argument	compiler		1086979	0					
ANR	1087496	Identifier	compiler		1086979	0					
ANR	1087497	Argument	SLJIT_NEG		1086979	1					
ANR	1087498	Identifier	SLJIT_NEG		1086979	0					
ANR	1087499	Argument	flags		1086979	2					
ANR	1087500	Identifier	flags		1086979	0					
ANR	1087501	Argument	dst		1086979	3					
ANR	1087502	Identifier	dst		1086979	0					
ANR	1087503	Argument	dstw		1086979	4					
ANR	1087504	Identifier	dstw		1086979	0					
ANR	1087505	Argument	TMP_REG1		1086979	5					
ANR	1087506	Identifier	TMP_REG1		1086979	0					
ANR	1087507	Argument	0		1086979	6					
ANR	1087508	PrimaryExpression	0		1086979	0					
ANR	1087509	Argument	src		1086979	7					
ANR	1087510	Identifier	src		1086979	0					
ANR	1087511	Argument	srcw		1086979	8					
ANR	1087512	Identifier	srcw		1086979	0					
ANR	1087513	Label	case SLJIT_CLZ :	1405:1:46452:46466	1086979	38	True				
ANR	1087514	Identifier	SLJIT_CLZ		1086979	0					
ANR	1087515	ReturnStatement	"return emit_op ( compiler , SLJIT_CLZ , flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 ) , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1407:2:46527:46651	1086979	39	True				
ANR	1087516	CallExpression	"emit_op ( compiler , SLJIT_CLZ , flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 ) , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1086979	0					
ANR	1087517	Callee	emit_op		1086979	0					
ANR	1087518	Identifier	emit_op		1086979	0					
ANR	1087519	ArgumentList	compiler		1086979	1					
ANR	1087520	Argument	compiler		1086979	0					
ANR	1087521	Identifier	compiler		1086979	0					
ANR	1087522	Argument	SLJIT_CLZ		1086979	1					
ANR	1087523	Identifier	SLJIT_CLZ		1086979	0					
ANR	1087524	Argument	flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 )		1086979	2					
ANR	1087525	InclusiveOrExpression	flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 )		1086979	0		|			
ANR	1087526	Identifier	flags		1086979	0					
ANR	1087527	ConditionalExpression	! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1		1086979	1					
ANR	1087528	Condition	! ( op_flags & SLJIT_INT_OP )		1086979	0					
ANR	1087529	UnaryOperationExpression	! ( op_flags & SLJIT_INT_OP )		1086979	0					
ANR	1087530	UnaryOperator	!		1086979	0					
ANR	1087531	BitAndExpression	op_flags & SLJIT_INT_OP		1086979	1		&			
ANR	1087532	Identifier	op_flags		1086979	0					
ANR	1087533	Identifier	SLJIT_INT_OP		1086979	1					
ANR	1087534	PrimaryExpression	0		1086979	1					
ANR	1087535	Identifier	ALT_FORM1		1086979	2					
ANR	1087536	Argument	dst		1086979	3					
ANR	1087537	Identifier	dst		1086979	0					
ANR	1087538	Argument	dstw		1086979	4					
ANR	1087539	Identifier	dstw		1086979	0					
ANR	1087540	Argument	TMP_REG1		1086979	5					
ANR	1087541	Identifier	TMP_REG1		1086979	0					
ANR	1087542	Argument	0		1086979	6					
ANR	1087543	PrimaryExpression	0		1086979	0					
ANR	1087544	Argument	src		1086979	7					
ANR	1087545	Identifier	src		1086979	0					
ANR	1087546	Argument	srcw		1086979	8					
ANR	1087547	Identifier	srcw		1086979	0					
ANR	1087548	ReturnStatement	return SLJIT_SUCCESS ;	1413:1:46752:46772	1086979	11	True				
ANR	1087549	Identifier	SLJIT_SUCCESS		1086979	0					
ANR	1087550	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1086979	1					
ANR	1087551	Identifier	sljit_emit_op1		1086979	2					
ANR	1087552	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1086979	3					
ANR	1087553	Parameter	struct sljit_compiler * compiler	1296:49:43284:43314	1086979	0	True				
ANR	1087554	ParameterType	struct sljit_compiler *		1086979	0					
ANR	1087555	Identifier	compiler		1086979	1					
ANR	1087556	Parameter	sljit_si op	1296:82:43317:43327	1086979	1	True				
ANR	1087557	ParameterType	sljit_si		1086979	0					
ANR	1087558	Identifier	op		1086979	1					
ANR	1087559	Parameter	sljit_si dst	1297:1:43331:43342	1086979	2	True				
ANR	1087560	ParameterType	sljit_si		1086979	0					
ANR	1087561	Identifier	dst		1086979	1					
ANR	1087562	Parameter	sljit_sw dstw	1297:15:43345:43357	1086979	3	True				
ANR	1087563	ParameterType	sljit_sw		1086979	0					
ANR	1087564	Identifier	dstw		1086979	1					
ANR	1087565	Parameter	sljit_si src	1298:1:43361:43372	1086979	4	True				
ANR	1087566	ParameterType	sljit_si		1086979	0					
ANR	1087567	Identifier	src		1086979	1					
ANR	1087568	Parameter	sljit_sw srcw	1298:15:43375:43387	1086979	5	True				
ANR	1087569	ParameterType	sljit_sw		1086979	0					
ANR	1087570	Identifier	srcw		1086979	1					
ANR	1087571	CFGEntryNode	ENTRY		1086979		True				
ANR	1087572	CFGExitNode	EXIT		1086979		True				
ANR	1087573	Symbol	TMP_REG1		1086979						
ANR	1087574	Symbol	SLJIT_NOT		1086979						
ANR	1087575	Symbol	SLJIT_MEM		1086979						
ANR	1087576	Symbol	TYPE_CAST_NEEDED		1086979						
ANR	1087577	Symbol	SLJIT_MOVU_SI		1086979						
ANR	1087578	Symbol	GET_OPCODE		1086979						
ANR	1087579	Symbol	BYTE_DATA		1086979						
ANR	1087580	Symbol	SLJIT_IMM		1086979						
ANR	1087581	Symbol	SLJIT_MOV_UH		1086979						
ANR	1087582	Symbol	SLJIT_MOV_UI		1086979						
ANR	1087583	Symbol	INT_DATA		1086979						
ANR	1087584	Symbol	MTXER		1086979						
ANR	1087585	Symbol	emit_op		1086979						
ANR	1087586	Symbol	ALT_SET_FLAGS		1086979						
ANR	1087587	Symbol	FAST_IS_REG		1086979						
ANR	1087588	Symbol	check_sljit_emit_op1		1086979						
ANR	1087589	Symbol	HALF_DATA		1086979						
ANR	1087590	Symbol	srcw		1086979						
ANR	1087591	Symbol	SLJIT_MOV_UB		1086979						
ANR	1087592	Symbol	sljit_ui		1086979						
ANR	1087593	Symbol	sljit_uh		1086979						
ANR	1087594	Symbol	sljit_ub		1086979						
ANR	1087595	Symbol	SLJIT_CLZ		1086979						
ANR	1087596	Symbol	dst		1086979						
ANR	1087597	Symbol	SLJIT_SET_O		1086979						
ANR	1087598	Symbol	SLJIT_MOV		1086979						
ANR	1087599	Symbol	EMIT_MOV		1086979						
ANR	1087600	Symbol	flags		1086979						
ANR	1087601	Symbol	GET_FLAGS		1086979						
ANR	1087602	Symbol	GET_ALL_FLAGS		1086979						
ANR	1087603	Symbol	SLJIT_MOV_SI		1086979						
ANR	1087604	Symbol	S		1086979						
ANR	1087605	Symbol	SLJIT_MOVU_UI		1086979						
ANR	1087606	Symbol	SLJIT_MOV_SH		1086979						
ANR	1087607	Symbol	ALT_FORM1		1086979						
ANR	1087608	Symbol	SLJIT_NEG		1086979						
ANR	1087609	Symbol	compiler		1086979						
ANR	1087610	Symbol	WRITE_BACK		1086979						
ANR	1087611	Symbol	WORD_DATA		1086979						
ANR	1087612	Symbol	op		1086979						
ANR	1087613	Symbol	op_flags		1086979						
ANR	1087614	Symbol	push_inst		1086979						
ANR	1087615	Symbol	src		1086979						
ANR	1087616	Symbol	SLJIT_INT_OP		1086979						
ANR	1087617	Symbol	SLJIT_MOV_SB		1086979						
ANR	1087618	Symbol	SLJIT_SUCCESS		1086979						
ANR	1087619	Symbol	SIGNED_DATA		1086979						
ANR	1087620	Symbol	sljit_sb		1086979						
ANR	1087621	Symbol	TMP_ZERO		1086979						
ANR	1087622	Symbol	dstw		1086979						
ANR	1087623	Symbol	sljit_si		1086979						
ANR	1087624	Symbol	sljit_sh		1086979						
ANR	1087625	Function	sljit_emit_op2	1451:0:47779:55979							
ANR	1087626	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1087625	0					
ANR	1087627	CompoundStatement		1455:0:47968:55979	1087625	0					
ANR	1087628	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0 ;	1456:1:47971:48021	1087625	0	True				
ANR	1087629	IdentifierDecl	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1087625	0					
ANR	1087630	IdentifierDeclType	sljit_si		1087625	0					
ANR	1087631	Identifier	flags		1087625	1					
ANR	1087632	AssignmentExpression	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1087625	2		=			
ANR	1087633	Identifier	flags		1087625	0					
ANR	1087634	ConditionalExpression	GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1087625	1					
ANR	1087635	Condition	GET_FLAGS ( op )		1087625	0					
ANR	1087636	CallExpression	GET_FLAGS ( op )		1087625	0					
ANR	1087637	Callee	GET_FLAGS		1087625	0					
ANR	1087638	Identifier	GET_FLAGS		1087625	0					
ANR	1087639	ArgumentList	op		1087625	1					
ANR	1087640	Argument	op		1087625	0					
ANR	1087641	Identifier	op		1087625	0					
ANR	1087642	Identifier	ALT_SET_FLAGS		1087625	1					
ANR	1087643	PrimaryExpression	0		1087625	2					
ANR	1087644	ExpressionStatement	CHECK_ERROR ( )	1458:1:48025:48038	1087625	1	True				
ANR	1087645	CallExpression	CHECK_ERROR ( )		1087625	0					
ANR	1087646	Callee	CHECK_ERROR		1087625	0					
ANR	1087647	Identifier	CHECK_ERROR		1087625	0					
ANR	1087648	ArgumentList			1087625	1					
ANR	1087649	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1459:1:48041:48119	1087625	2	True				
ANR	1087650	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1087625	0					
ANR	1087651	Callee	CHECK		1087625	0					
ANR	1087652	Identifier	CHECK		1087625	0					
ANR	1087653	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	1					
ANR	1087654	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1087655	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1087656	Callee	check_sljit_emit_op2		1087625	0					
ANR	1087657	Identifier	check_sljit_emit_op2		1087625	0					
ANR	1087658	ArgumentList	compiler		1087625	1					
ANR	1087659	Argument	compiler		1087625	0					
ANR	1087660	Identifier	compiler		1087625	0					
ANR	1087661	Argument	op		1087625	1					
ANR	1087662	Identifier	op		1087625	0					
ANR	1087663	Argument	dst		1087625	2					
ANR	1087664	Identifier	dst		1087625	0					
ANR	1087665	Argument	dstw		1087625	3					
ANR	1087666	Identifier	dstw		1087625	0					
ANR	1087667	Argument	src1		1087625	4					
ANR	1087668	Identifier	src1		1087625	0					
ANR	1087669	Argument	src1w		1087625	5					
ANR	1087670	Identifier	src1w		1087625	0					
ANR	1087671	Argument	src2		1087625	6					
ANR	1087672	Identifier	src2		1087625	0					
ANR	1087673	Argument	src2w		1087625	7					
ANR	1087674	Identifier	src2w		1087625	0					
ANR	1087675	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1460:1:48122:48152	1087625	3	True				
ANR	1087676	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1087625	0					
ANR	1087677	Callee	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087678	Identifier	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087679	ArgumentList	dst		1087625	1					
ANR	1087680	Argument	dst		1087625	0					
ANR	1087681	Identifier	dst		1087625	0					
ANR	1087682	Argument	dstw		1087625	1					
ANR	1087683	Identifier	dstw		1087625	0					
ANR	1087684	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1461:1:48155:48187	1087625	4	True				
ANR	1087685	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1087625	0					
ANR	1087686	Callee	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087687	Identifier	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087688	ArgumentList	src1		1087625	1					
ANR	1087689	Argument	src1		1087625	0					
ANR	1087690	Identifier	src1		1087625	0					
ANR	1087691	Argument	src1w		1087625	1					
ANR	1087692	Identifier	src1w		1087625	0					
ANR	1087693	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1462:1:48190:48222	1087625	5	True				
ANR	1087694	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1087625	0					
ANR	1087695	Callee	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087696	Identifier	ADJUST_LOCAL_OFFSET		1087625	0					
ANR	1087697	ArgumentList	src2		1087625	1					
ANR	1087698	Argument	src2		1087625	0					
ANR	1087699	Identifier	src2		1087625	0					
ANR	1087700	Argument	src2w		1087625	1					
ANR	1087701	Identifier	src2w		1087625	0					
ANR	1087702	IfStatement	if ( ( src1 & SLJIT_IMM ) && src1w == 0 )		1087625	6					
ANR	1087703	Condition	( src1 & SLJIT_IMM ) && src1w == 0	1464:5:48230:48261	1087625	0	True				
ANR	1087704	AndExpression	( src1 & SLJIT_IMM ) && src1w == 0		1087625	0		&&			
ANR	1087705	BitAndExpression	src1 & SLJIT_IMM		1087625	0		&			
ANR	1087706	Identifier	src1		1087625	0					
ANR	1087707	Identifier	SLJIT_IMM		1087625	1					
ANR	1087708	EqualityExpression	src1w == 0		1087625	1		==			
ANR	1087709	Identifier	src1w		1087625	0					
ANR	1087710	PrimaryExpression	0		1087625	1					
ANR	1087711	ExpressionStatement	src1 = TMP_ZERO	1465:2:48266:48281	1087625	1	True				
ANR	1087712	AssignmentExpression	src1 = TMP_ZERO		1087625	0		=			
ANR	1087713	Identifier	src1		1087625	0					
ANR	1087714	Identifier	TMP_ZERO		1087625	1					
ANR	1087715	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w == 0 )		1087625	7					
ANR	1087716	Condition	( src2 & SLJIT_IMM ) && src2w == 0	1466:5:48288:48319	1087625	0	True				
ANR	1087717	AndExpression	( src2 & SLJIT_IMM ) && src2w == 0		1087625	0		&&			
ANR	1087718	BitAndExpression	src2 & SLJIT_IMM		1087625	0		&			
ANR	1087719	Identifier	src2		1087625	0					
ANR	1087720	Identifier	SLJIT_IMM		1087625	1					
ANR	1087721	EqualityExpression	src2w == 0		1087625	1		==			
ANR	1087722	Identifier	src2w		1087625	0					
ANR	1087723	PrimaryExpression	0		1087625	1					
ANR	1087724	ExpressionStatement	src2 = TMP_ZERO	1467:2:48324:48339	1087625	1	True				
ANR	1087725	AssignmentExpression	src2 = TMP_ZERO		1087625	0		=			
ANR	1087726	Identifier	src2		1087625	0					
ANR	1087727	Identifier	TMP_ZERO		1087625	1					
ANR	1087728	IfStatement	if ( op & SLJIT_INT_OP )		1087625	8					
ANR	1087729	Condition	op & SLJIT_INT_OP	1470:5:48404:48420	1087625	0	True				
ANR	1087730	BitAndExpression	op & SLJIT_INT_OP		1087625	0		&			
ANR	1087731	Identifier	op		1087625	0					
ANR	1087732	Identifier	SLJIT_INT_OP		1087625	1					
ANR	1087733	CompoundStatement		16:24:454:454	1087625	1					
ANR	1087734	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1472:2:48483:48514	1087625	0	True				
ANR	1087735	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1087625	0		|=			
ANR	1087736	Identifier	flags		1087625	0					
ANR	1087737	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1087625	1		|			
ANR	1087738	Identifier	INT_DATA		1087625	0					
ANR	1087739	Identifier	SIGNED_DATA		1087625	1					
ANR	1087740	IfStatement	if ( src1 & SLJIT_IMM )		1087625	1					
ANR	1087741	Condition	src1 & SLJIT_IMM	1473:6:48522:48537	1087625	0	True				
ANR	1087742	BitAndExpression	src1 & SLJIT_IMM		1087625	0		&			
ANR	1087743	Identifier	src1		1087625	0					
ANR	1087744	Identifier	SLJIT_IMM		1087625	1					
ANR	1087745	ExpressionStatement	src1w = ( sljit_si ) ( src1w )	1474:3:48543:48568	1087625	1	True				
ANR	1087746	AssignmentExpression	src1w = ( sljit_si ) ( src1w )		1087625	0		=			
ANR	1087747	Identifier	src1w		1087625	0					
ANR	1087748	CastExpression	( sljit_si ) ( src1w )		1087625	1					
ANR	1087749	CastTarget	sljit_si		1087625	0					
ANR	1087750	Identifier	src1w		1087625	1					
ANR	1087751	IfStatement	if ( src2 & SLJIT_IMM )		1087625	2					
ANR	1087752	Condition	src2 & SLJIT_IMM	1475:6:48576:48591	1087625	0	True				
ANR	1087753	BitAndExpression	src2 & SLJIT_IMM		1087625	0		&			
ANR	1087754	Identifier	src2		1087625	0					
ANR	1087755	Identifier	SLJIT_IMM		1087625	1					
ANR	1087756	ExpressionStatement	src2w = ( sljit_si ) ( src2w )	1476:3:48597:48622	1087625	1	True				
ANR	1087757	AssignmentExpression	src2w = ( sljit_si ) ( src2w )		1087625	0		=			
ANR	1087758	Identifier	src2w		1087625	0					
ANR	1087759	CastExpression	( sljit_si ) ( src2w )		1087625	1					
ANR	1087760	CastTarget	sljit_si		1087625	0					
ANR	1087761	Identifier	src2w		1087625	1					
ANR	1087762	IfStatement	if ( GET_FLAGS ( op ) )		1087625	3					
ANR	1087763	Condition	GET_FLAGS ( op )	1477:6:48630:48642	1087625	0	True				
ANR	1087764	CallExpression	GET_FLAGS ( op )		1087625	0					
ANR	1087765	Callee	GET_FLAGS		1087625	0					
ANR	1087766	Identifier	GET_FLAGS		1087625	0					
ANR	1087767	ArgumentList	op		1087625	1					
ANR	1087768	Argument	op		1087625	0					
ANR	1087769	Identifier	op		1087625	0					
ANR	1087770	ExpressionStatement	flags |= ALT_SIGN_EXT	1478:3:48648:48669	1087625	1	True				
ANR	1087771	AssignmentExpression	flags |= ALT_SIGN_EXT		1087625	0		|=			
ANR	1087772	Identifier	flags		1087625	0					
ANR	1087773	Identifier	ALT_SIGN_EXT		1087625	1					
ANR	1087774	IfStatement	if ( op & SLJIT_SET_O )		1087625	9					
ANR	1087775	Condition	op & SLJIT_SET_O	1481:5:48686:48701	1087625	0	True				
ANR	1087776	BitAndExpression	op & SLJIT_SET_O		1087625	0		&			
ANR	1087777	Identifier	op		1087625	0					
ANR	1087778	Identifier	SLJIT_SET_O		1087625	1					
ANR	1087779	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"	1482:2:48706:48755	1087625	1	True				
ANR	1087780	CallExpression	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"		1087625	0					
ANR	1087781	Callee	FAIL_IF		1087625	0					
ANR	1087782	Identifier	FAIL_IF		1087625	0					
ANR	1087783	ArgumentList	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1087625	1					
ANR	1087784	Argument	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1087625	0					
ANR	1087785	CallExpression	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1087625	0					
ANR	1087786	Callee	push_inst		1087625	0					
ANR	1087787	Identifier	push_inst		1087625	0					
ANR	1087788	ArgumentList	compiler		1087625	1					
ANR	1087789	Argument	compiler		1087625	0					
ANR	1087790	Identifier	compiler		1087625	0					
ANR	1087791	Argument	MTXER | S ( TMP_ZERO )		1087625	1					
ANR	1087792	InclusiveOrExpression	MTXER | S ( TMP_ZERO )		1087625	0		|			
ANR	1087793	Identifier	MTXER		1087625	0					
ANR	1087794	CallExpression	S ( TMP_ZERO )		1087625	1					
ANR	1087795	Callee	S		1087625	0					
ANR	1087796	Identifier	S		1087625	0					
ANR	1087797	ArgumentList	TMP_ZERO		1087625	1					
ANR	1087798	Argument	TMP_ZERO		1087625	0					
ANR	1087799	Identifier	TMP_ZERO		1087625	0					
ANR	1087800	IfStatement	if ( src2 == TMP_REG2 )		1087625	10					
ANR	1087801	Condition	src2 == TMP_REG2	1483:5:48762:48777	1087625	0	True				
ANR	1087802	EqualityExpression	src2 == TMP_REG2		1087625	0		==			
ANR	1087803	Identifier	src2		1087625	0					
ANR	1087804	Identifier	TMP_REG2		1087625	1					
ANR	1087805	ExpressionStatement	flags |= ALT_KEEP_CACHE	1484:2:48782:48805	1087625	1	True				
ANR	1087806	AssignmentExpression	flags |= ALT_KEEP_CACHE		1087625	0		|=			
ANR	1087807	Identifier	flags		1087625	0					
ANR	1087808	Identifier	ALT_KEEP_CACHE		1087625	1					
ANR	1087809	SwitchStatement	switch ( GET_OPCODE ( op ) )		1087625	11					
ANR	1087810	Condition	GET_OPCODE ( op )	1486:9:48817:48830	1087625	0	True				
ANR	1087811	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1087812	Callee	GET_OPCODE		1087625	0					
ANR	1087813	Identifier	GET_OPCODE		1087625	0					
ANR	1087814	ArgumentList	op		1087625	1					
ANR	1087815	Argument	op		1087625	0					
ANR	1087816	Identifier	op		1087625	0					
ANR	1087817	CompoundStatement		32:25:864:864	1087625	1					
ANR	1087818	Label	case SLJIT_ADD :	1487:1:48836:48850	1087625	0	True				
ANR	1087819	Identifier	SLJIT_ADD		1087625	0					
ANR	1087820	IfStatement	if ( ! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM ) )		1087625	1					
ANR	1087821	Condition	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )	1488:6:48858:48902	1087625	0	True				
ANR	1087822	AndExpression	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )		1087625	0		&&			
ANR	1087823	UnaryOperationExpression	! GET_FLAGS ( op )		1087625	0					
ANR	1087824	UnaryOperator	!		1087625	0					
ANR	1087825	CallExpression	GET_FLAGS ( op )		1087625	1					
ANR	1087826	Callee	GET_FLAGS		1087625	0					
ANR	1087827	Identifier	GET_FLAGS		1087625	0					
ANR	1087828	ArgumentList	op		1087625	1					
ANR	1087829	Argument	op		1087625	0					
ANR	1087830	Identifier	op		1087625	0					
ANR	1087831	BitAndExpression	( src1 | src2 ) & SLJIT_IMM		1087625	1		&			
ANR	1087832	InclusiveOrExpression	src1 | src2		1087625	0		|			
ANR	1087833	Identifier	src1		1087625	0					
ANR	1087834	Identifier	src2		1087625	1					
ANR	1087835	Identifier	SLJIT_IMM		1087625	1					
ANR	1087836	CompoundStatement		34:53:936:936	1087625	1					
ANR	1087837	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1087838	Condition	"TEST_SL_IMM ( src2 , src2w )"	1489:7:48914:48937	1087625	0	True				
ANR	1087839	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1087625	0					
ANR	1087840	Callee	TEST_SL_IMM		1087625	0					
ANR	1087841	Identifier	TEST_SL_IMM		1087625	0					
ANR	1087842	ArgumentList	src2		1087625	1					
ANR	1087843	Argument	src2		1087625	0					
ANR	1087844	Identifier	src2		1087625	0					
ANR	1087845	Argument	src2w		1087625	1					
ANR	1087846	Identifier	src2w		1087625	0					
ANR	1087847	CompoundStatement		35:33:971:971	1087625	1					
ANR	1087848	ExpressionStatement	compiler -> imm = src2w & 0xffff	1490:4:48946:48976	1087625	0	True				
ANR	1087849	AssignmentExpression	compiler -> imm = src2w & 0xffff		1087625	0		=			
ANR	1087850	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1087851	Identifier	compiler		1087625	0					
ANR	1087852	Identifier	imm		1087625	1					
ANR	1087853	BitAndExpression	src2w & 0xffff		1087625	1		&			
ANR	1087854	Identifier	src2w		1087625	0					
ANR	1087855	PrimaryExpression	0xffff		1087625	1					
ANR	1087856	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1491:4:48982:49073	1087625	1	True				
ANR	1087857	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1087858	Callee	emit_op		1087625	0					
ANR	1087859	Identifier	emit_op		1087625	0					
ANR	1087860	ArgumentList	compiler		1087625	1					
ANR	1087861	Argument	compiler		1087625	0					
ANR	1087862	Identifier	compiler		1087625	0					
ANR	1087863	Argument	SLJIT_ADD		1087625	1					
ANR	1087864	Identifier	SLJIT_ADD		1087625	0					
ANR	1087865	Argument	flags | ALT_FORM1		1087625	2					
ANR	1087866	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1087867	Identifier	flags		1087625	0					
ANR	1087868	Identifier	ALT_FORM1		1087625	1					
ANR	1087869	Argument	dst		1087625	3					
ANR	1087870	Identifier	dst		1087625	0					
ANR	1087871	Argument	dstw		1087625	4					
ANR	1087872	Identifier	dstw		1087625	0					
ANR	1087873	Argument	src1		1087625	5					
ANR	1087874	Identifier	src1		1087625	0					
ANR	1087875	Argument	src1w		1087625	6					
ANR	1087876	Identifier	src1w		1087625	0					
ANR	1087877	Argument	TMP_REG2		1087625	7					
ANR	1087878	Identifier	TMP_REG2		1087625	0					
ANR	1087879	Argument	0		1087625	8					
ANR	1087880	PrimaryExpression	0		1087625	0					
ANR	1087881	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1087882	Condition	"TEST_SL_IMM ( src1 , src1w )"	1493:7:49087:49110	1087625	0	True				
ANR	1087883	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1087625	0					
ANR	1087884	Callee	TEST_SL_IMM		1087625	0					
ANR	1087885	Identifier	TEST_SL_IMM		1087625	0					
ANR	1087886	ArgumentList	src1		1087625	1					
ANR	1087887	Argument	src1		1087625	0					
ANR	1087888	Identifier	src1		1087625	0					
ANR	1087889	Argument	src1w		1087625	1					
ANR	1087890	Identifier	src1w		1087625	0					
ANR	1087891	CompoundStatement		39:33:1144:1144	1087625	1					
ANR	1087892	ExpressionStatement	compiler -> imm = src1w & 0xffff	1494:4:49119:49149	1087625	0	True				
ANR	1087893	AssignmentExpression	compiler -> imm = src1w & 0xffff		1087625	0		=			
ANR	1087894	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1087895	Identifier	compiler		1087625	0					
ANR	1087896	Identifier	imm		1087625	1					
ANR	1087897	BitAndExpression	src1w & 0xffff		1087625	1		&			
ANR	1087898	Identifier	src1w		1087625	0					
ANR	1087899	PrimaryExpression	0xffff		1087625	1					
ANR	1087900	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1495:4:49155:49246	1087625	1	True				
ANR	1087901	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1087902	Callee	emit_op		1087625	0					
ANR	1087903	Identifier	emit_op		1087625	0					
ANR	1087904	ArgumentList	compiler		1087625	1					
ANR	1087905	Argument	compiler		1087625	0					
ANR	1087906	Identifier	compiler		1087625	0					
ANR	1087907	Argument	SLJIT_ADD		1087625	1					
ANR	1087908	Identifier	SLJIT_ADD		1087625	0					
ANR	1087909	Argument	flags | ALT_FORM1		1087625	2					
ANR	1087910	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1087911	Identifier	flags		1087625	0					
ANR	1087912	Identifier	ALT_FORM1		1087625	1					
ANR	1087913	Argument	dst		1087625	3					
ANR	1087914	Identifier	dst		1087625	0					
ANR	1087915	Argument	dstw		1087625	4					
ANR	1087916	Identifier	dstw		1087625	0					
ANR	1087917	Argument	src2		1087625	5					
ANR	1087918	Identifier	src2		1087625	0					
ANR	1087919	Argument	src2w		1087625	6					
ANR	1087920	Identifier	src2w		1087625	0					
ANR	1087921	Argument	TMP_REG2		1087625	7					
ANR	1087922	Identifier	TMP_REG2		1087625	0					
ANR	1087923	Argument	0		1087625	8					
ANR	1087924	PrimaryExpression	0		1087625	0					
ANR	1087925	IfStatement	"if ( TEST_SH_IMM ( src2 , src2w ) )"		1087625	2					
ANR	1087926	Condition	"TEST_SH_IMM ( src2 , src2w )"	1497:7:49260:49283	1087625	0	True				
ANR	1087927	CallExpression	"TEST_SH_IMM ( src2 , src2w )"		1087625	0					
ANR	1087928	Callee	TEST_SH_IMM		1087625	0					
ANR	1087929	Identifier	TEST_SH_IMM		1087625	0					
ANR	1087930	ArgumentList	src2		1087625	1					
ANR	1087931	Argument	src2		1087625	0					
ANR	1087932	Identifier	src2		1087625	0					
ANR	1087933	Argument	src2w		1087625	1					
ANR	1087934	Identifier	src2w		1087625	0					
ANR	1087935	CompoundStatement		43:33:1317:1317	1087625	1					
ANR	1087936	ExpressionStatement	compiler -> imm = ( src2w >> 16 ) & 0xffff	1498:4:49292:49330	1087625	0	True				
ANR	1087937	AssignmentExpression	compiler -> imm = ( src2w >> 16 ) & 0xffff		1087625	0		=			
ANR	1087938	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1087939	Identifier	compiler		1087625	0					
ANR	1087940	Identifier	imm		1087625	1					
ANR	1087941	BitAndExpression	( src2w >> 16 ) & 0xffff		1087625	1		&			
ANR	1087942	ShiftExpression	src2w >> 16		1087625	0		>>			
ANR	1087943	Identifier	src2w		1087625	0					
ANR	1087944	PrimaryExpression	16		1087625	1					
ANR	1087945	PrimaryExpression	0xffff		1087625	1					
ANR	1087946	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1499:4:49336:49427	1087625	1	True				
ANR	1087947	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1087948	Callee	emit_op		1087625	0					
ANR	1087949	Identifier	emit_op		1087625	0					
ANR	1087950	ArgumentList	compiler		1087625	1					
ANR	1087951	Argument	compiler		1087625	0					
ANR	1087952	Identifier	compiler		1087625	0					
ANR	1087953	Argument	SLJIT_ADD		1087625	1					
ANR	1087954	Identifier	SLJIT_ADD		1087625	0					
ANR	1087955	Argument	flags | ALT_FORM2		1087625	2					
ANR	1087956	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1087957	Identifier	flags		1087625	0					
ANR	1087958	Identifier	ALT_FORM2		1087625	1					
ANR	1087959	Argument	dst		1087625	3					
ANR	1087960	Identifier	dst		1087625	0					
ANR	1087961	Argument	dstw		1087625	4					
ANR	1087962	Identifier	dstw		1087625	0					
ANR	1087963	Argument	src1		1087625	5					
ANR	1087964	Identifier	src1		1087625	0					
ANR	1087965	Argument	src1w		1087625	6					
ANR	1087966	Identifier	src1w		1087625	0					
ANR	1087967	Argument	TMP_REG2		1087625	7					
ANR	1087968	Identifier	TMP_REG2		1087625	0					
ANR	1087969	Argument	0		1087625	8					
ANR	1087970	PrimaryExpression	0		1087625	0					
ANR	1087971	IfStatement	"if ( TEST_SH_IMM ( src1 , src1w ) )"		1087625	3					
ANR	1087972	Condition	"TEST_SH_IMM ( src1 , src1w )"	1501:7:49441:49464	1087625	0	True				
ANR	1087973	CallExpression	"TEST_SH_IMM ( src1 , src1w )"		1087625	0					
ANR	1087974	Callee	TEST_SH_IMM		1087625	0					
ANR	1087975	Identifier	TEST_SH_IMM		1087625	0					
ANR	1087976	ArgumentList	src1		1087625	1					
ANR	1087977	Argument	src1		1087625	0					
ANR	1087978	Identifier	src1		1087625	0					
ANR	1087979	Argument	src1w		1087625	1					
ANR	1087980	Identifier	src1w		1087625	0					
ANR	1087981	CompoundStatement		47:33:1498:1498	1087625	1					
ANR	1087982	ExpressionStatement	compiler -> imm = ( src1w >> 16 ) & 0xffff	1502:4:49473:49511	1087625	0	True				
ANR	1087983	AssignmentExpression	compiler -> imm = ( src1w >> 16 ) & 0xffff		1087625	0		=			
ANR	1087984	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1087985	Identifier	compiler		1087625	0					
ANR	1087986	Identifier	imm		1087625	1					
ANR	1087987	BitAndExpression	( src1w >> 16 ) & 0xffff		1087625	1		&			
ANR	1087988	ShiftExpression	src1w >> 16		1087625	0		>>			
ANR	1087989	Identifier	src1w		1087625	0					
ANR	1087990	PrimaryExpression	16		1087625	1					
ANR	1087991	PrimaryExpression	0xffff		1087625	1					
ANR	1087992	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1503:4:49517:49608	1087625	1	True				
ANR	1087993	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1087994	Callee	emit_op		1087625	0					
ANR	1087995	Identifier	emit_op		1087625	0					
ANR	1087996	ArgumentList	compiler		1087625	1					
ANR	1087997	Argument	compiler		1087625	0					
ANR	1087998	Identifier	compiler		1087625	0					
ANR	1087999	Argument	SLJIT_ADD		1087625	1					
ANR	1088000	Identifier	SLJIT_ADD		1087625	0					
ANR	1088001	Argument	flags | ALT_FORM2		1087625	2					
ANR	1088002	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1088003	Identifier	flags		1087625	0					
ANR	1088004	Identifier	ALT_FORM2		1087625	1					
ANR	1088005	Argument	dst		1087625	3					
ANR	1088006	Identifier	dst		1087625	0					
ANR	1088007	Argument	dstw		1087625	4					
ANR	1088008	Identifier	dstw		1087625	0					
ANR	1088009	Argument	src2		1087625	5					
ANR	1088010	Identifier	src2		1087625	0					
ANR	1088011	Argument	src2w		1087625	6					
ANR	1088012	Identifier	src2w		1087625	0					
ANR	1088013	Argument	TMP_REG2		1087625	7					
ANR	1088014	Identifier	TMP_REG2		1087625	0					
ANR	1088015	Argument	0		1087625	8					
ANR	1088016	PrimaryExpression	0		1087625	0					
ANR	1088017	IfStatement	"if ( TEST_ADD_IMM ( src2 , src2w ) )"		1087625	4					
ANR	1088018	Condition	"TEST_ADD_IMM ( src2 , src2w )"	1506:7:49677:49701	1087625	0	True				
ANR	1088019	CallExpression	"TEST_ADD_IMM ( src2 , src2w )"		1087625	0					
ANR	1088020	Callee	TEST_ADD_IMM		1087625	0					
ANR	1088021	Identifier	TEST_ADD_IMM		1087625	0					
ANR	1088022	ArgumentList	src2		1087625	1					
ANR	1088023	Argument	src2		1087625	0					
ANR	1088024	Identifier	src2		1087625	0					
ANR	1088025	Argument	src2w		1087625	1					
ANR	1088026	Identifier	src2w		1087625	0					
ANR	1088027	CompoundStatement		52:34:1735:1735	1087625	1					
ANR	1088028	ExpressionStatement	compiler -> imm = src2w & 0xffffffff	1507:4:49710:49744	1087625	0	True				
ANR	1088029	AssignmentExpression	compiler -> imm = src2w & 0xffffffff		1087625	0		=			
ANR	1088030	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088031	Identifier	compiler		1087625	0					
ANR	1088032	Identifier	imm		1087625	1					
ANR	1088033	BitAndExpression	src2w & 0xffffffff		1087625	1		&			
ANR	1088034	Identifier	src2w		1087625	0					
ANR	1088035	PrimaryExpression	0xffffffff		1087625	1					
ANR	1088036	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1508:4:49750:49841	1087625	1	True				
ANR	1088037	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088038	Callee	emit_op		1087625	0					
ANR	1088039	Identifier	emit_op		1087625	0					
ANR	1088040	ArgumentList	compiler		1087625	1					
ANR	1088041	Argument	compiler		1087625	0					
ANR	1088042	Identifier	compiler		1087625	0					
ANR	1088043	Argument	SLJIT_ADD		1087625	1					
ANR	1088044	Identifier	SLJIT_ADD		1087625	0					
ANR	1088045	Argument	flags | ALT_FORM4		1087625	2					
ANR	1088046	InclusiveOrExpression	flags | ALT_FORM4		1087625	0		|			
ANR	1088047	Identifier	flags		1087625	0					
ANR	1088048	Identifier	ALT_FORM4		1087625	1					
ANR	1088049	Argument	dst		1087625	3					
ANR	1088050	Identifier	dst		1087625	0					
ANR	1088051	Argument	dstw		1087625	4					
ANR	1088052	Identifier	dstw		1087625	0					
ANR	1088053	Argument	src1		1087625	5					
ANR	1088054	Identifier	src1		1087625	0					
ANR	1088055	Argument	src1w		1087625	6					
ANR	1088056	Identifier	src1w		1087625	0					
ANR	1088057	Argument	TMP_REG2		1087625	7					
ANR	1088058	Identifier	TMP_REG2		1087625	0					
ANR	1088059	Argument	0		1087625	8					
ANR	1088060	PrimaryExpression	0		1087625	0					
ANR	1088061	IfStatement	"if ( TEST_ADD_IMM ( src1 , src1w ) )"		1087625	5					
ANR	1088062	Condition	"TEST_ADD_IMM ( src1 , src1w )"	1510:7:49855:49879	1087625	0	True				
ANR	1088063	CallExpression	"TEST_ADD_IMM ( src1 , src1w )"		1087625	0					
ANR	1088064	Callee	TEST_ADD_IMM		1087625	0					
ANR	1088065	Identifier	TEST_ADD_IMM		1087625	0					
ANR	1088066	ArgumentList	src1		1087625	1					
ANR	1088067	Argument	src1		1087625	0					
ANR	1088068	Identifier	src1		1087625	0					
ANR	1088069	Argument	src1w		1087625	1					
ANR	1088070	Identifier	src1w		1087625	0					
ANR	1088071	CompoundStatement		56:34:1913:1913	1087625	1					
ANR	1088072	ExpressionStatement	compiler -> imm = src1w & 0xffffffff	1511:4:49888:49922	1087625	0	True				
ANR	1088073	AssignmentExpression	compiler -> imm = src1w & 0xffffffff		1087625	0		=			
ANR	1088074	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088075	Identifier	compiler		1087625	0					
ANR	1088076	Identifier	imm		1087625	1					
ANR	1088077	BitAndExpression	src1w & 0xffffffff		1087625	1		&			
ANR	1088078	Identifier	src1w		1087625	0					
ANR	1088079	PrimaryExpression	0xffffffff		1087625	1					
ANR	1088080	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1512:4:49928:50019	1087625	1	True				
ANR	1088081	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088082	Callee	emit_op		1087625	0					
ANR	1088083	Identifier	emit_op		1087625	0					
ANR	1088084	ArgumentList	compiler		1087625	1					
ANR	1088085	Argument	compiler		1087625	0					
ANR	1088086	Identifier	compiler		1087625	0					
ANR	1088087	Argument	SLJIT_ADD		1087625	1					
ANR	1088088	Identifier	SLJIT_ADD		1087625	0					
ANR	1088089	Argument	flags | ALT_FORM4		1087625	2					
ANR	1088090	InclusiveOrExpression	flags | ALT_FORM4		1087625	0		|			
ANR	1088091	Identifier	flags		1087625	0					
ANR	1088092	Identifier	ALT_FORM4		1087625	1					
ANR	1088093	Argument	dst		1087625	3					
ANR	1088094	Identifier	dst		1087625	0					
ANR	1088095	Argument	dstw		1087625	4					
ANR	1088096	Identifier	dstw		1087625	0					
ANR	1088097	Argument	src2		1087625	5					
ANR	1088098	Identifier	src2		1087625	0					
ANR	1088099	Argument	src2w		1087625	6					
ANR	1088100	Identifier	src2w		1087625	0					
ANR	1088101	Argument	TMP_REG2		1087625	7					
ANR	1088102	Identifier	TMP_REG2		1087625	0					
ANR	1088103	Argument	0		1087625	8					
ANR	1088104	PrimaryExpression	0		1087625	0					
ANR	1088105	IfStatement	if ( ! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) ) )		1087625	2					
ANR	1088106	Condition	! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) )	1515:6:50036:50081	1087625	0	True				
ANR	1088107	UnaryOperationExpression	! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) )		1087625	0					
ANR	1088108	UnaryOperator	!		1087625	0					
ANR	1088109	BitAndExpression	GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O )		1087625	1		&			
ANR	1088110	CallExpression	GET_FLAGS ( op )		1087625	0					
ANR	1088111	Callee	GET_FLAGS		1087625	0					
ANR	1088112	Identifier	GET_FLAGS		1087625	0					
ANR	1088113	ArgumentList	op		1087625	1					
ANR	1088114	Argument	op		1087625	0					
ANR	1088115	Identifier	op		1087625	0					
ANR	1088116	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_O		1087625	1		|			
ANR	1088117	Identifier	SLJIT_SET_E		1087625	0					
ANR	1088118	Identifier	SLJIT_SET_O		1087625	1					
ANR	1088119	CompoundStatement		61:54:2115:2115	1087625	1					
ANR	1088120	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1088121	Condition	"TEST_SL_IMM ( src2 , src2w )"	1516:7:50093:50116	1087625	0	True				
ANR	1088122	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1087625	0					
ANR	1088123	Callee	TEST_SL_IMM		1087625	0					
ANR	1088124	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088125	ArgumentList	src2		1087625	1					
ANR	1088126	Argument	src2		1087625	0					
ANR	1088127	Identifier	src2		1087625	0					
ANR	1088128	Argument	src2w		1087625	1					
ANR	1088129	Identifier	src2w		1087625	0					
ANR	1088130	CompoundStatement		62:33:2150:2150	1087625	1					
ANR	1088131	ExpressionStatement	compiler -> imm = src2w & 0xffff	1517:4:50125:50155	1087625	0	True				
ANR	1088132	AssignmentExpression	compiler -> imm = src2w & 0xffff		1087625	0		=			
ANR	1088133	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088134	Identifier	compiler		1087625	0					
ANR	1088135	Identifier	imm		1087625	1					
ANR	1088136	BitAndExpression	src2w & 0xffff		1087625	1		&			
ANR	1088137	Identifier	src2w		1087625	0					
ANR	1088138	PrimaryExpression	0xffff		1087625	1					
ANR	1088139	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1518:4:50161:50252	1087625	1	True				
ANR	1088140	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088141	Callee	emit_op		1087625	0					
ANR	1088142	Identifier	emit_op		1087625	0					
ANR	1088143	ArgumentList	compiler		1087625	1					
ANR	1088144	Argument	compiler		1087625	0					
ANR	1088145	Identifier	compiler		1087625	0					
ANR	1088146	Argument	SLJIT_ADD		1087625	1					
ANR	1088147	Identifier	SLJIT_ADD		1087625	0					
ANR	1088148	Argument	flags | ALT_FORM3		1087625	2					
ANR	1088149	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1088150	Identifier	flags		1087625	0					
ANR	1088151	Identifier	ALT_FORM3		1087625	1					
ANR	1088152	Argument	dst		1087625	3					
ANR	1088153	Identifier	dst		1087625	0					
ANR	1088154	Argument	dstw		1087625	4					
ANR	1088155	Identifier	dstw		1087625	0					
ANR	1088156	Argument	src1		1087625	5					
ANR	1088157	Identifier	src1		1087625	0					
ANR	1088158	Argument	src1w		1087625	6					
ANR	1088159	Identifier	src1w		1087625	0					
ANR	1088160	Argument	TMP_REG2		1087625	7					
ANR	1088161	Identifier	TMP_REG2		1087625	0					
ANR	1088162	Argument	0		1087625	8					
ANR	1088163	PrimaryExpression	0		1087625	0					
ANR	1088164	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1088165	Condition	"TEST_SL_IMM ( src1 , src1w )"	1520:7:50266:50289	1087625	0	True				
ANR	1088166	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1087625	0					
ANR	1088167	Callee	TEST_SL_IMM		1087625	0					
ANR	1088168	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088169	ArgumentList	src1		1087625	1					
ANR	1088170	Argument	src1		1087625	0					
ANR	1088171	Identifier	src1		1087625	0					
ANR	1088172	Argument	src1w		1087625	1					
ANR	1088173	Identifier	src1w		1087625	0					
ANR	1088174	CompoundStatement		66:33:2323:2323	1087625	1					
ANR	1088175	ExpressionStatement	compiler -> imm = src1w & 0xffff	1521:4:50298:50328	1087625	0	True				
ANR	1088176	AssignmentExpression	compiler -> imm = src1w & 0xffff		1087625	0		=			
ANR	1088177	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088178	Identifier	compiler		1087625	0					
ANR	1088179	Identifier	imm		1087625	1					
ANR	1088180	BitAndExpression	src1w & 0xffff		1087625	1		&			
ANR	1088181	Identifier	src1w		1087625	0					
ANR	1088182	PrimaryExpression	0xffff		1087625	1					
ANR	1088183	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1522:4:50334:50425	1087625	1	True				
ANR	1088184	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088185	Callee	emit_op		1087625	0					
ANR	1088186	Identifier	emit_op		1087625	0					
ANR	1088187	ArgumentList	compiler		1087625	1					
ANR	1088188	Argument	compiler		1087625	0					
ANR	1088189	Identifier	compiler		1087625	0					
ANR	1088190	Argument	SLJIT_ADD		1087625	1					
ANR	1088191	Identifier	SLJIT_ADD		1087625	0					
ANR	1088192	Argument	flags | ALT_FORM3		1087625	2					
ANR	1088193	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1088194	Identifier	flags		1087625	0					
ANR	1088195	Identifier	ALT_FORM3		1087625	1					
ANR	1088196	Argument	dst		1087625	3					
ANR	1088197	Identifier	dst		1087625	0					
ANR	1088198	Argument	dstw		1087625	4					
ANR	1088199	Identifier	dstw		1087625	0					
ANR	1088200	Argument	src2		1087625	5					
ANR	1088201	Identifier	src2		1087625	0					
ANR	1088202	Argument	src2w		1087625	6					
ANR	1088203	Identifier	src2w		1087625	0					
ANR	1088204	Argument	TMP_REG2		1087625	7					
ANR	1088205	Identifier	TMP_REG2		1087625	0					
ANR	1088206	Argument	0		1087625	8					
ANR	1088207	PrimaryExpression	0		1087625	0					
ANR	1088208	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1525:2:50438:50517	1087625	3	True				
ANR	1088209	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088210	Callee	emit_op		1087625	0					
ANR	1088211	Identifier	emit_op		1087625	0					
ANR	1088212	ArgumentList	compiler		1087625	1					
ANR	1088213	Argument	compiler		1087625	0					
ANR	1088214	Identifier	compiler		1087625	0					
ANR	1088215	Argument	SLJIT_ADD		1087625	1					
ANR	1088216	Identifier	SLJIT_ADD		1087625	0					
ANR	1088217	Argument	flags		1087625	2					
ANR	1088218	Identifier	flags		1087625	0					
ANR	1088219	Argument	dst		1087625	3					
ANR	1088220	Identifier	dst		1087625	0					
ANR	1088221	Argument	dstw		1087625	4					
ANR	1088222	Identifier	dstw		1087625	0					
ANR	1088223	Argument	src1		1087625	5					
ANR	1088224	Identifier	src1		1087625	0					
ANR	1088225	Argument	src1w		1087625	6					
ANR	1088226	Identifier	src1w		1087625	0					
ANR	1088227	Argument	src2		1087625	7					
ANR	1088228	Identifier	src2		1087625	0					
ANR	1088229	Argument	src2w		1087625	8					
ANR	1088230	Identifier	src2w		1087625	0					
ANR	1088231	Label	case SLJIT_ADDC :	1527:1:50521:50536	1087625	4	True				
ANR	1088232	Identifier	SLJIT_ADDC		1087625	0					
ANR	1088233	ReturnStatement	"return emit_op ( compiler , SLJIT_ADDC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1528:2:50540:50665	1087625	5	True				
ANR	1088234	CallExpression	"emit_op ( compiler , SLJIT_ADDC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088235	Callee	emit_op		1087625	0					
ANR	1088236	Identifier	emit_op		1087625	0					
ANR	1088237	ArgumentList	compiler		1087625	1					
ANR	1088238	Argument	compiler		1087625	0					
ANR	1088239	Identifier	compiler		1087625	0					
ANR	1088240	Argument	SLJIT_ADDC		1087625	1					
ANR	1088241	Identifier	SLJIT_ADDC		1087625	0					
ANR	1088242	Argument	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1087625	2					
ANR	1088243	InclusiveOrExpression	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1087625	0		|			
ANR	1088244	Identifier	flags		1087625	0					
ANR	1088245	ConditionalExpression	! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1		1087625	1					
ANR	1088246	Condition	! ( op & SLJIT_KEEP_FLAGS )		1087625	0					
ANR	1088247	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1087625	0					
ANR	1088248	UnaryOperator	!		1087625	0					
ANR	1088249	BitAndExpression	op & SLJIT_KEEP_FLAGS		1087625	1		&			
ANR	1088250	Identifier	op		1087625	0					
ANR	1088251	Identifier	SLJIT_KEEP_FLAGS		1087625	1					
ANR	1088252	PrimaryExpression	0		1087625	1					
ANR	1088253	Identifier	ALT_FORM1		1087625	2					
ANR	1088254	Argument	dst		1087625	3					
ANR	1088255	Identifier	dst		1087625	0					
ANR	1088256	Argument	dstw		1087625	4					
ANR	1088257	Identifier	dstw		1087625	0					
ANR	1088258	Argument	src1		1087625	5					
ANR	1088259	Identifier	src1		1087625	0					
ANR	1088260	Argument	src1w		1087625	6					
ANR	1088261	Identifier	src1w		1087625	0					
ANR	1088262	Argument	src2		1087625	7					
ANR	1088263	Identifier	src2		1087625	0					
ANR	1088264	Argument	src2w		1087625	8					
ANR	1088265	Identifier	src2w		1087625	0					
ANR	1088266	Label	case SLJIT_SUB :	1530:1:50669:50683	1087625	6	True				
ANR	1088267	Identifier	SLJIT_SUB		1087625	0					
ANR	1088268	IfStatement	if ( ! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM ) )		1087625	7					
ANR	1088269	Condition	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )	1531:6:50691:50735	1087625	0	True				
ANR	1088270	AndExpression	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )		1087625	0		&&			
ANR	1088271	UnaryOperationExpression	! GET_FLAGS ( op )		1087625	0					
ANR	1088272	UnaryOperator	!		1087625	0					
ANR	1088273	CallExpression	GET_FLAGS ( op )		1087625	1					
ANR	1088274	Callee	GET_FLAGS		1087625	0					
ANR	1088275	Identifier	GET_FLAGS		1087625	0					
ANR	1088276	ArgumentList	op		1087625	1					
ANR	1088277	Argument	op		1087625	0					
ANR	1088278	Identifier	op		1087625	0					
ANR	1088279	BitAndExpression	( src1 | src2 ) & SLJIT_IMM		1087625	1		&			
ANR	1088280	InclusiveOrExpression	src1 | src2		1087625	0		|			
ANR	1088281	Identifier	src1		1087625	0					
ANR	1088282	Identifier	src2		1087625	1					
ANR	1088283	Identifier	SLJIT_IMM		1087625	1					
ANR	1088284	CompoundStatement		77:53:2769:2769	1087625	1					
ANR	1088285	IfStatement	"if ( TEST_SL_IMM ( src2 , - src2w ) )"		1087625	0					
ANR	1088286	Condition	"TEST_SL_IMM ( src2 , - src2w )"	1532:7:50747:50771	1087625	0	True				
ANR	1088287	CallExpression	"TEST_SL_IMM ( src2 , - src2w )"		1087625	0					
ANR	1088288	Callee	TEST_SL_IMM		1087625	0					
ANR	1088289	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088290	ArgumentList	src2		1087625	1					
ANR	1088291	Argument	src2		1087625	0					
ANR	1088292	Identifier	src2		1087625	0					
ANR	1088293	Argument	- src2w		1087625	1					
ANR	1088294	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088295	UnaryOperator	-		1087625	0					
ANR	1088296	Identifier	src2w		1087625	1					
ANR	1088297	CompoundStatement		78:34:2805:2805	1087625	1					
ANR	1088298	ExpressionStatement	compiler -> imm = ( - src2w ) & 0xffff	1533:4:50780:50813	1087625	0	True				
ANR	1088299	AssignmentExpression	compiler -> imm = ( - src2w ) & 0xffff		1087625	0		=			
ANR	1088300	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088301	Identifier	compiler		1087625	0					
ANR	1088302	Identifier	imm		1087625	1					
ANR	1088303	BitAndExpression	( - src2w ) & 0xffff		1087625	1		&			
ANR	1088304	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088305	UnaryOperator	-		1087625	0					
ANR	1088306	Identifier	src2w		1087625	1					
ANR	1088307	PrimaryExpression	0xffff		1087625	1					
ANR	1088308	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1534:4:50819:50910	1087625	1	True				
ANR	1088309	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088310	Callee	emit_op		1087625	0					
ANR	1088311	Identifier	emit_op		1087625	0					
ANR	1088312	ArgumentList	compiler		1087625	1					
ANR	1088313	Argument	compiler		1087625	0					
ANR	1088314	Identifier	compiler		1087625	0					
ANR	1088315	Argument	SLJIT_ADD		1087625	1					
ANR	1088316	Identifier	SLJIT_ADD		1087625	0					
ANR	1088317	Argument	flags | ALT_FORM1		1087625	2					
ANR	1088318	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1088319	Identifier	flags		1087625	0					
ANR	1088320	Identifier	ALT_FORM1		1087625	1					
ANR	1088321	Argument	dst		1087625	3					
ANR	1088322	Identifier	dst		1087625	0					
ANR	1088323	Argument	dstw		1087625	4					
ANR	1088324	Identifier	dstw		1087625	0					
ANR	1088325	Argument	src1		1087625	5					
ANR	1088326	Identifier	src1		1087625	0					
ANR	1088327	Argument	src1w		1087625	6					
ANR	1088328	Identifier	src1w		1087625	0					
ANR	1088329	Argument	TMP_REG2		1087625	7					
ANR	1088330	Identifier	TMP_REG2		1087625	0					
ANR	1088331	Argument	0		1087625	8					
ANR	1088332	PrimaryExpression	0		1087625	0					
ANR	1088333	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1088334	Condition	"TEST_SL_IMM ( src1 , src1w )"	1536:7:50924:50947	1087625	0	True				
ANR	1088335	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1087625	0					
ANR	1088336	Callee	TEST_SL_IMM		1087625	0					
ANR	1088337	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088338	ArgumentList	src1		1087625	1					
ANR	1088339	Argument	src1		1087625	0					
ANR	1088340	Identifier	src1		1087625	0					
ANR	1088341	Argument	src1w		1087625	1					
ANR	1088342	Identifier	src1w		1087625	0					
ANR	1088343	CompoundStatement		82:33:2981:2981	1087625	1					
ANR	1088344	ExpressionStatement	compiler -> imm = src1w & 0xffff	1537:4:50956:50986	1087625	0	True				
ANR	1088345	AssignmentExpression	compiler -> imm = src1w & 0xffff		1087625	0		=			
ANR	1088346	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088347	Identifier	compiler		1087625	0					
ANR	1088348	Identifier	imm		1087625	1					
ANR	1088349	BitAndExpression	src1w & 0xffff		1087625	1		&			
ANR	1088350	Identifier	src1w		1087625	0					
ANR	1088351	PrimaryExpression	0xffff		1087625	1					
ANR	1088352	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1538:4:50992:51083	1087625	1	True				
ANR	1088353	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088354	Callee	emit_op		1087625	0					
ANR	1088355	Identifier	emit_op		1087625	0					
ANR	1088356	ArgumentList	compiler		1087625	1					
ANR	1088357	Argument	compiler		1087625	0					
ANR	1088358	Identifier	compiler		1087625	0					
ANR	1088359	Argument	SLJIT_SUB		1087625	1					
ANR	1088360	Identifier	SLJIT_SUB		1087625	0					
ANR	1088361	Argument	flags | ALT_FORM1		1087625	2					
ANR	1088362	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1088363	Identifier	flags		1087625	0					
ANR	1088364	Identifier	ALT_FORM1		1087625	1					
ANR	1088365	Argument	dst		1087625	3					
ANR	1088366	Identifier	dst		1087625	0					
ANR	1088367	Argument	dstw		1087625	4					
ANR	1088368	Identifier	dstw		1087625	0					
ANR	1088369	Argument	src2		1087625	5					
ANR	1088370	Identifier	src2		1087625	0					
ANR	1088371	Argument	src2w		1087625	6					
ANR	1088372	Identifier	src2w		1087625	0					
ANR	1088373	Argument	TMP_REG2		1087625	7					
ANR	1088374	Identifier	TMP_REG2		1087625	0					
ANR	1088375	Argument	0		1087625	8					
ANR	1088376	PrimaryExpression	0		1087625	0					
ANR	1088377	IfStatement	"if ( TEST_SH_IMM ( src2 , - src2w ) )"		1087625	2					
ANR	1088378	Condition	"TEST_SH_IMM ( src2 , - src2w )"	1540:7:51097:51121	1087625	0	True				
ANR	1088379	CallExpression	"TEST_SH_IMM ( src2 , - src2w )"		1087625	0					
ANR	1088380	Callee	TEST_SH_IMM		1087625	0					
ANR	1088381	Identifier	TEST_SH_IMM		1087625	0					
ANR	1088382	ArgumentList	src2		1087625	1					
ANR	1088383	Argument	src2		1087625	0					
ANR	1088384	Identifier	src2		1087625	0					
ANR	1088385	Argument	- src2w		1087625	1					
ANR	1088386	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088387	UnaryOperator	-		1087625	0					
ANR	1088388	Identifier	src2w		1087625	1					
ANR	1088389	CompoundStatement		86:34:3155:3155	1087625	1					
ANR	1088390	ExpressionStatement	compiler -> imm = ( ( - src2w ) >> 16 ) & 0xffff	1541:4:51130:51171	1087625	0	True				
ANR	1088391	AssignmentExpression	compiler -> imm = ( ( - src2w ) >> 16 ) & 0xffff		1087625	0		=			
ANR	1088392	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088393	Identifier	compiler		1087625	0					
ANR	1088394	Identifier	imm		1087625	1					
ANR	1088395	BitAndExpression	( ( - src2w ) >> 16 ) & 0xffff		1087625	1		&			
ANR	1088396	ShiftExpression	( - src2w ) >> 16		1087625	0		>>			
ANR	1088397	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088398	UnaryOperator	-		1087625	0					
ANR	1088399	Identifier	src2w		1087625	1					
ANR	1088400	PrimaryExpression	16		1087625	1					
ANR	1088401	PrimaryExpression	0xffff		1087625	1					
ANR	1088402	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1542:4:51177:51268	1087625	1	True				
ANR	1088403	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088404	Callee	emit_op		1087625	0					
ANR	1088405	Identifier	emit_op		1087625	0					
ANR	1088406	ArgumentList	compiler		1087625	1					
ANR	1088407	Argument	compiler		1087625	0					
ANR	1088408	Identifier	compiler		1087625	0					
ANR	1088409	Argument	SLJIT_ADD		1087625	1					
ANR	1088410	Identifier	SLJIT_ADD		1087625	0					
ANR	1088411	Argument	flags | ALT_FORM2		1087625	2					
ANR	1088412	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1088413	Identifier	flags		1087625	0					
ANR	1088414	Identifier	ALT_FORM2		1087625	1					
ANR	1088415	Argument	dst		1087625	3					
ANR	1088416	Identifier	dst		1087625	0					
ANR	1088417	Argument	dstw		1087625	4					
ANR	1088418	Identifier	dstw		1087625	0					
ANR	1088419	Argument	src1		1087625	5					
ANR	1088420	Identifier	src1		1087625	0					
ANR	1088421	Argument	src1w		1087625	6					
ANR	1088422	Identifier	src1w		1087625	0					
ANR	1088423	Argument	TMP_REG2		1087625	7					
ANR	1088424	Identifier	TMP_REG2		1087625	0					
ANR	1088425	Argument	0		1087625	8					
ANR	1088426	PrimaryExpression	0		1087625	0					
ANR	1088427	IfStatement	"if ( TEST_ADD_IMM ( src2 , - src2w ) )"		1087625	3					
ANR	1088428	Condition	"TEST_ADD_IMM ( src2 , - src2w )"	1545:7:51337:51362	1087625	0	True				
ANR	1088429	CallExpression	"TEST_ADD_IMM ( src2 , - src2w )"		1087625	0					
ANR	1088430	Callee	TEST_ADD_IMM		1087625	0					
ANR	1088431	Identifier	TEST_ADD_IMM		1087625	0					
ANR	1088432	ArgumentList	src2		1087625	1					
ANR	1088433	Argument	src2		1087625	0					
ANR	1088434	Identifier	src2		1087625	0					
ANR	1088435	Argument	- src2w		1087625	1					
ANR	1088436	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088437	UnaryOperator	-		1087625	0					
ANR	1088438	Identifier	src2w		1087625	1					
ANR	1088439	CompoundStatement		91:35:3396:3396	1087625	1					
ANR	1088440	ExpressionStatement	compiler -> imm = - src2w & 0xffffffff	1546:4:51371:51406	1087625	0	True				
ANR	1088441	AssignmentExpression	compiler -> imm = - src2w & 0xffffffff		1087625	0		=			
ANR	1088442	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088443	Identifier	compiler		1087625	0					
ANR	1088444	Identifier	imm		1087625	1					
ANR	1088445	BitAndExpression	- src2w & 0xffffffff		1087625	1		&			
ANR	1088446	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088447	UnaryOperator	-		1087625	0					
ANR	1088448	Identifier	src2w		1087625	1					
ANR	1088449	PrimaryExpression	0xffffffff		1087625	1					
ANR	1088450	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1547:4:51412:51503	1087625	1	True				
ANR	1088451	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088452	Callee	emit_op		1087625	0					
ANR	1088453	Identifier	emit_op		1087625	0					
ANR	1088454	ArgumentList	compiler		1087625	1					
ANR	1088455	Argument	compiler		1087625	0					
ANR	1088456	Identifier	compiler		1087625	0					
ANR	1088457	Argument	SLJIT_ADD		1087625	1					
ANR	1088458	Identifier	SLJIT_ADD		1087625	0					
ANR	1088459	Argument	flags | ALT_FORM4		1087625	2					
ANR	1088460	InclusiveOrExpression	flags | ALT_FORM4		1087625	0		|			
ANR	1088461	Identifier	flags		1087625	0					
ANR	1088462	Identifier	ALT_FORM4		1087625	1					
ANR	1088463	Argument	dst		1087625	3					
ANR	1088464	Identifier	dst		1087625	0					
ANR	1088465	Argument	dstw		1087625	4					
ANR	1088466	Identifier	dstw		1087625	0					
ANR	1088467	Argument	src1		1087625	5					
ANR	1088468	Identifier	src1		1087625	0					
ANR	1088469	Argument	src1w		1087625	6					
ANR	1088470	Identifier	src1w		1087625	0					
ANR	1088471	Argument	TMP_REG2		1087625	7					
ANR	1088472	Identifier	TMP_REG2		1087625	0					
ANR	1088473	Argument	0		1087625	8					
ANR	1088474	PrimaryExpression	0		1087625	0					
ANR	1088475	IfStatement	if ( dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) ) )		1087625	8					
ANR	1088476	Condition	dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )	1550:6:51520:51629	1087625	0	True				
ANR	1088477	AndExpression	dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1087625	0		&&			
ANR	1088478	EqualityExpression	dst == SLJIT_UNUSED		1087625	0		==			
ANR	1088479	Identifier	dst		1087625	0					
ANR	1088480	Identifier	SLJIT_UNUSED		1087625	1					
ANR	1088481	AndExpression	( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1087625	1		&&			
ANR	1088482	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S )		1087625	0		&			
ANR	1088483	Identifier	op		1087625	0					
ANR	1088484	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S		1087625	1		|			
ANR	1088485	Identifier	SLJIT_SET_E		1087625	0					
ANR	1088486	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S		1087625	1		|			
ANR	1088487	Identifier	SLJIT_SET_U		1087625	0					
ANR	1088488	Identifier	SLJIT_SET_S		1087625	1					
ANR	1088489	UnaryOperationExpression	! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1087625	1					
ANR	1088490	UnaryOperator	!		1087625	0					
ANR	1088491	BitAndExpression	op & ( SLJIT_SET_O | SLJIT_SET_C )		1087625	1		&			
ANR	1088492	Identifier	op		1087625	0					
ANR	1088493	InclusiveOrExpression	SLJIT_SET_O | SLJIT_SET_C		1087625	1		|			
ANR	1088494	Identifier	SLJIT_SET_O		1087625	0					
ANR	1088495	Identifier	SLJIT_SET_C		1087625	1					
ANR	1088496	CompoundStatement		96:118:3663:3663	1087625	1					
ANR	1088497	IfStatement	if ( ! ( op & SLJIT_SET_U ) )		1087625	0					
ANR	1088498	Condition	! ( op & SLJIT_SET_U )	1551:7:51641:51659	1087625	0	True				
ANR	1088499	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1087625	0					
ANR	1088500	UnaryOperator	!		1087625	0					
ANR	1088501	BitAndExpression	op & SLJIT_SET_U		1087625	1		&			
ANR	1088502	Identifier	op		1087625	0					
ANR	1088503	Identifier	SLJIT_SET_U		1087625	1					
ANR	1088504	CompoundStatement		97:28:3693:3693	1087625	1					
ANR	1088505	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1088506	Condition	"TEST_SL_IMM ( src2 , src2w )"	1553:8:51754:51777	1087625	0	True				
ANR	1088507	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1087625	0					
ANR	1088508	Callee	TEST_SL_IMM		1087625	0					
ANR	1088509	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088510	ArgumentList	src2		1087625	1					
ANR	1088511	Argument	src2		1087625	0					
ANR	1088512	Identifier	src2		1087625	0					
ANR	1088513	Argument	src2w		1087625	1					
ANR	1088514	Identifier	src2w		1087625	0					
ANR	1088515	CompoundStatement		99:34:3811:3811	1087625	1					
ANR	1088516	ExpressionStatement	compiler -> imm = src2w & 0xffff	1554:5:51787:51817	1087625	0	True				
ANR	1088517	AssignmentExpression	compiler -> imm = src2w & 0xffff		1087625	0		=			
ANR	1088518	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088519	Identifier	compiler		1087625	0					
ANR	1088520	Identifier	imm		1087625	1					
ANR	1088521	BitAndExpression	src2w & 0xffff		1087625	1		&			
ANR	1088522	Identifier	src2w		1087625	0					
ANR	1088523	PrimaryExpression	0xffff		1087625	1					
ANR	1088524	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1555:5:51824:51915	1087625	1	True				
ANR	1088525	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088526	Callee	emit_op		1087625	0					
ANR	1088527	Identifier	emit_op		1087625	0					
ANR	1088528	ArgumentList	compiler		1087625	1					
ANR	1088529	Argument	compiler		1087625	0					
ANR	1088530	Identifier	compiler		1087625	0					
ANR	1088531	Argument	SLJIT_SUB		1087625	1					
ANR	1088532	Identifier	SLJIT_SUB		1087625	0					
ANR	1088533	Argument	flags | ALT_FORM2		1087625	2					
ANR	1088534	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1088535	Identifier	flags		1087625	0					
ANR	1088536	Identifier	ALT_FORM2		1087625	1					
ANR	1088537	Argument	dst		1087625	3					
ANR	1088538	Identifier	dst		1087625	0					
ANR	1088539	Argument	dstw		1087625	4					
ANR	1088540	Identifier	dstw		1087625	0					
ANR	1088541	Argument	src1		1087625	5					
ANR	1088542	Identifier	src1		1087625	0					
ANR	1088543	Argument	src1w		1087625	6					
ANR	1088544	Identifier	src1w		1087625	0					
ANR	1088545	Argument	TMP_REG2		1087625	7					
ANR	1088546	Identifier	TMP_REG2		1087625	0					
ANR	1088547	Argument	0		1087625	8					
ANR	1088548	PrimaryExpression	0		1087625	0					
ANR	1088549	IfStatement	"if ( GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1088550	Condition	"GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w )"	1557:8:51931:51986	1087625	0	True				
ANR	1088551	AndExpression	"GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w )"		1087625	0		&&			
ANR	1088552	EqualityExpression	GET_FLAGS ( op ) == SLJIT_SET_E		1087625	0		==			
ANR	1088553	CallExpression	GET_FLAGS ( op )		1087625	0					
ANR	1088554	Callee	GET_FLAGS		1087625	0					
ANR	1088555	Identifier	GET_FLAGS		1087625	0					
ANR	1088556	ArgumentList	op		1087625	1					
ANR	1088557	Argument	op		1087625	0					
ANR	1088558	Identifier	op		1087625	0					
ANR	1088559	Identifier	SLJIT_SET_E		1087625	1					
ANR	1088560	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1087625	1					
ANR	1088561	Callee	TEST_SL_IMM		1087625	0					
ANR	1088562	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088563	ArgumentList	src1		1087625	1					
ANR	1088564	Argument	src1		1087625	0					
ANR	1088565	Identifier	src1		1087625	0					
ANR	1088566	Argument	src1w		1087625	1					
ANR	1088567	Identifier	src1w		1087625	0					
ANR	1088568	CompoundStatement		103:66:4020:4020	1087625	1					
ANR	1088569	ExpressionStatement	compiler -> imm = src1w & 0xffff	1558:5:51996:52026	1087625	0	True				
ANR	1088570	AssignmentExpression	compiler -> imm = src1w & 0xffff		1087625	0		=			
ANR	1088571	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088572	Identifier	compiler		1087625	0					
ANR	1088573	Identifier	imm		1087625	1					
ANR	1088574	BitAndExpression	src1w & 0xffff		1087625	1		&			
ANR	1088575	Identifier	src1w		1087625	0					
ANR	1088576	PrimaryExpression	0xffff		1087625	1					
ANR	1088577	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1559:5:52033:52124	1087625	1	True				
ANR	1088578	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088579	Callee	emit_op		1087625	0					
ANR	1088580	Identifier	emit_op		1087625	0					
ANR	1088581	ArgumentList	compiler		1087625	1					
ANR	1088582	Argument	compiler		1087625	0					
ANR	1088583	Identifier	compiler		1087625	0					
ANR	1088584	Argument	SLJIT_SUB		1087625	1					
ANR	1088585	Identifier	SLJIT_SUB		1087625	0					
ANR	1088586	Argument	flags | ALT_FORM2		1087625	2					
ANR	1088587	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1088588	Identifier	flags		1087625	0					
ANR	1088589	Identifier	ALT_FORM2		1087625	1					
ANR	1088590	Argument	dst		1087625	3					
ANR	1088591	Identifier	dst		1087625	0					
ANR	1088592	Argument	dstw		1087625	4					
ANR	1088593	Identifier	dstw		1087625	0					
ANR	1088594	Argument	src2		1087625	5					
ANR	1088595	Identifier	src2		1087625	0					
ANR	1088596	Argument	src2w		1087625	6					
ANR	1088597	Identifier	src2w		1087625	0					
ANR	1088598	Argument	TMP_REG2		1087625	7					
ANR	1088599	Identifier	TMP_REG2		1087625	0					
ANR	1088600	Argument	0		1087625	8					
ANR	1088601	PrimaryExpression	0		1087625	0					
ANR	1088602	IfStatement	if ( ! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) )		1087625	1					
ANR	1088603	Condition	! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) )	1562:7:52144:52178	1087625	0	True				
ANR	1088604	UnaryOperationExpression	! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) )		1087625	0					
ANR	1088605	UnaryOperator	!		1087625	0					
ANR	1088606	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_S )		1087625	1		&			
ANR	1088607	Identifier	op		1087625	0					
ANR	1088608	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_S		1087625	1		|			
ANR	1088609	Identifier	SLJIT_SET_E		1087625	0					
ANR	1088610	Identifier	SLJIT_SET_S		1087625	1					
ANR	1088611	CompoundStatement		108:44:4212:4212	1087625	1					
ANR	1088612	IfStatement	"if ( TEST_UL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1088613	Condition	"TEST_UL_IMM ( src2 , src2w )"	1564:8:52273:52296	1087625	0	True				
ANR	1088614	CallExpression	"TEST_UL_IMM ( src2 , src2w )"		1087625	0					
ANR	1088615	Callee	TEST_UL_IMM		1087625	0					
ANR	1088616	Identifier	TEST_UL_IMM		1087625	0					
ANR	1088617	ArgumentList	src2		1087625	1					
ANR	1088618	Argument	src2		1087625	0					
ANR	1088619	Identifier	src2		1087625	0					
ANR	1088620	Argument	src2w		1087625	1					
ANR	1088621	Identifier	src2w		1087625	0					
ANR	1088622	CompoundStatement		110:34:4330:4330	1087625	1					
ANR	1088623	ExpressionStatement	compiler -> imm = src2w & 0xffff	1565:5:52306:52336	1087625	0	True				
ANR	1088624	AssignmentExpression	compiler -> imm = src2w & 0xffff		1087625	0		=			
ANR	1088625	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088626	Identifier	compiler		1087625	0					
ANR	1088627	Identifier	imm		1087625	1					
ANR	1088628	BitAndExpression	src2w & 0xffff		1087625	1		&			
ANR	1088629	Identifier	src2w		1087625	0					
ANR	1088630	PrimaryExpression	0xffff		1087625	1					
ANR	1088631	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1566:5:52343:52434	1087625	1	True				
ANR	1088632	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088633	Callee	emit_op		1087625	0					
ANR	1088634	Identifier	emit_op		1087625	0					
ANR	1088635	ArgumentList	compiler		1087625	1					
ANR	1088636	Argument	compiler		1087625	0					
ANR	1088637	Identifier	compiler		1087625	0					
ANR	1088638	Argument	SLJIT_SUB		1087625	1					
ANR	1088639	Identifier	SLJIT_SUB		1087625	0					
ANR	1088640	Argument	flags | ALT_FORM3		1087625	2					
ANR	1088641	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1088642	Identifier	flags		1087625	0					
ANR	1088643	Identifier	ALT_FORM3		1087625	1					
ANR	1088644	Argument	dst		1087625	3					
ANR	1088645	Identifier	dst		1087625	0					
ANR	1088646	Argument	dstw		1087625	4					
ANR	1088647	Identifier	dstw		1087625	0					
ANR	1088648	Argument	src1		1087625	5					
ANR	1088649	Identifier	src1		1087625	0					
ANR	1088650	Argument	src1w		1087625	6					
ANR	1088651	Identifier	src1w		1087625	0					
ANR	1088652	Argument	TMP_REG2		1087625	7					
ANR	1088653	Identifier	TMP_REG2		1087625	0					
ANR	1088654	Argument	0		1087625	8					
ANR	1088655	PrimaryExpression	0		1087625	0					
ANR	1088656	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM4 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1568:4:52446:52537	1087625	1	True				
ANR	1088657	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM4 , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088658	Callee	emit_op		1087625	0					
ANR	1088659	Identifier	emit_op		1087625	0					
ANR	1088660	ArgumentList	compiler		1087625	1					
ANR	1088661	Argument	compiler		1087625	0					
ANR	1088662	Identifier	compiler		1087625	0					
ANR	1088663	Argument	SLJIT_SUB		1087625	1					
ANR	1088664	Identifier	SLJIT_SUB		1087625	0					
ANR	1088665	Argument	flags | ALT_FORM4		1087625	2					
ANR	1088666	InclusiveOrExpression	flags | ALT_FORM4		1087625	0		|			
ANR	1088667	Identifier	flags		1087625	0					
ANR	1088668	Identifier	ALT_FORM4		1087625	1					
ANR	1088669	Argument	dst		1087625	3					
ANR	1088670	Identifier	dst		1087625	0					
ANR	1088671	Argument	dstw		1087625	4					
ANR	1088672	Identifier	dstw		1087625	0					
ANR	1088673	Argument	src1		1087625	5					
ANR	1088674	Identifier	src1		1087625	0					
ANR	1088675	Argument	src1w		1087625	6					
ANR	1088676	Identifier	src1w		1087625	0					
ANR	1088677	Argument	src2		1087625	7					
ANR	1088678	Identifier	src2		1087625	0					
ANR	1088679	Argument	src2w		1087625	8					
ANR	1088680	Identifier	src2w		1087625	0					
ANR	1088681	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff )		1087625	2					
ANR	1088682	Condition	( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff	1570:7:52551:52601	1087625	0	True				
ANR	1088683	AndExpression	( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff		1087625	0		&&			
ANR	1088684	BitAndExpression	src2 & SLJIT_IMM		1087625	0		&			
ANR	1088685	Identifier	src2		1087625	0					
ANR	1088686	Identifier	SLJIT_IMM		1087625	1					
ANR	1088687	AndExpression	src2w >= 0 && src2w <= 0x7fff		1087625	1		&&			
ANR	1088688	RelationalExpression	src2w >= 0		1087625	0		>=			
ANR	1088689	Identifier	src2w		1087625	0					
ANR	1088690	PrimaryExpression	0		1087625	1					
ANR	1088691	RelationalExpression	src2w <= 0x7fff		1087625	1		<=			
ANR	1088692	Identifier	src2w		1087625	0					
ANR	1088693	PrimaryExpression	0x7fff		1087625	1					
ANR	1088694	CompoundStatement		116:60:4635:4635	1087625	1					
ANR	1088695	ExpressionStatement	compiler -> imm = src2w	1571:4:52610:52631	1087625	0	True				
ANR	1088696	AssignmentExpression	compiler -> imm = src2w		1087625	0		=			
ANR	1088697	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088698	Identifier	compiler		1087625	0					
ANR	1088699	Identifier	imm		1087625	1					
ANR	1088700	Identifier	src2w		1087625	1					
ANR	1088701	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1572:4:52637:52740	1087625	1	True				
ANR	1088702	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088703	Callee	emit_op		1087625	0					
ANR	1088704	Identifier	emit_op		1087625	0					
ANR	1088705	ArgumentList	compiler		1087625	1					
ANR	1088706	Argument	compiler		1087625	0					
ANR	1088707	Identifier	compiler		1087625	0					
ANR	1088708	Argument	SLJIT_SUB		1087625	1					
ANR	1088709	Identifier	SLJIT_SUB		1087625	0					
ANR	1088710	Argument	flags | ALT_FORM2 | ALT_FORM3		1087625	2					
ANR	1088711	InclusiveOrExpression	flags | ALT_FORM2 | ALT_FORM3		1087625	0		|			
ANR	1088712	Identifier	flags		1087625	0					
ANR	1088713	InclusiveOrExpression	ALT_FORM2 | ALT_FORM3		1087625	1		|			
ANR	1088714	Identifier	ALT_FORM2		1087625	0					
ANR	1088715	Identifier	ALT_FORM3		1087625	1					
ANR	1088716	Argument	dst		1087625	3					
ANR	1088717	Identifier	dst		1087625	0					
ANR	1088718	Argument	dstw		1087625	4					
ANR	1088719	Identifier	dstw		1087625	0					
ANR	1088720	Argument	src1		1087625	5					
ANR	1088721	Identifier	src1		1087625	0					
ANR	1088722	Argument	src1w		1087625	6					
ANR	1088723	Identifier	src1w		1087625	0					
ANR	1088724	Argument	TMP_REG2		1087625	7					
ANR	1088725	Identifier	TMP_REG2		1087625	0					
ANR	1088726	Argument	0		1087625	8					
ANR	1088727	PrimaryExpression	0		1087625	0					
ANR	1088728	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1574:3:52750:52923	1087625	3	True				
ANR	1088729	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088730	Callee	emit_op		1087625	0					
ANR	1088731	Identifier	emit_op		1087625	0					
ANR	1088732	ArgumentList	compiler		1087625	1					
ANR	1088733	Argument	compiler		1087625	0					
ANR	1088734	Identifier	compiler		1087625	0					
ANR	1088735	Argument	SLJIT_SUB		1087625	1					
ANR	1088736	Identifier	SLJIT_SUB		1087625	0					
ANR	1088737	Argument	flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1087625	2					
ANR	1088738	InclusiveOrExpression	flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1087625	0		|			
ANR	1088739	Identifier	flags		1087625	0					
ANR	1088740	InclusiveOrExpression	( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1087625	1		|			
ANR	1088741	ConditionalExpression	( op & SLJIT_SET_U ) ? ALT_FORM4 : 0		1087625	0					
ANR	1088742	Condition	op & SLJIT_SET_U		1087625	0					
ANR	1088743	BitAndExpression	op & SLJIT_SET_U		1087625	0		&			
ANR	1088744	Identifier	op		1087625	0					
ANR	1088745	Identifier	SLJIT_SET_U		1087625	1					
ANR	1088746	Identifier	ALT_FORM4		1087625	1					
ANR	1088747	PrimaryExpression	0		1087625	2					
ANR	1088748	ConditionalExpression	( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0		1087625	1					
ANR	1088749	Condition	op & ( SLJIT_SET_E | SLJIT_SET_S )		1087625	0					
ANR	1088750	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_S )		1087625	0		&			
ANR	1088751	Identifier	op		1087625	0					
ANR	1088752	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_S		1087625	1		|			
ANR	1088753	Identifier	SLJIT_SET_E		1087625	0					
ANR	1088754	Identifier	SLJIT_SET_S		1087625	1					
ANR	1088755	Identifier	ALT_FORM5		1087625	1					
ANR	1088756	PrimaryExpression	0		1087625	2					
ANR	1088757	Argument	dst		1087625	3					
ANR	1088758	Identifier	dst		1087625	0					
ANR	1088759	Argument	dstw		1087625	4					
ANR	1088760	Identifier	dstw		1087625	0					
ANR	1088761	Argument	src1		1087625	5					
ANR	1088762	Identifier	src1		1087625	0					
ANR	1088763	Argument	src1w		1087625	6					
ANR	1088764	Identifier	src1w		1087625	0					
ANR	1088765	Argument	src2		1087625	7					
ANR	1088766	Identifier	src2		1087625	0					
ANR	1088767	Argument	src2w		1087625	8					
ANR	1088768	Identifier	src2w		1087625	0					
ANR	1088769	IfStatement	if ( ! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) ) )		1087625	9					
ANR	1088770	Condition	! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) )	1576:6:52935:52997	1087625	0	True				
ANR	1088771	UnaryOperationExpression	! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) )		1087625	0					
ANR	1088772	UnaryOperator	!		1087625	0					
ANR	1088773	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O )		1087625	1		&			
ANR	1088774	Identifier	op		1087625	0					
ANR	1088775	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O		1087625	1		|			
ANR	1088776	Identifier	SLJIT_SET_E		1087625	0					
ANR	1088777	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O		1087625	1		|			
ANR	1088778	Identifier	SLJIT_SET_U		1087625	0					
ANR	1088779	InclusiveOrExpression	SLJIT_SET_S | SLJIT_SET_O		1087625	1		|			
ANR	1088780	Identifier	SLJIT_SET_S		1087625	0					
ANR	1088781	Identifier	SLJIT_SET_O		1087625	1					
ANR	1088782	CompoundStatement		122:71:5031:5031	1087625	1					
ANR	1088783	IfStatement	"if ( TEST_SL_IMM ( src2 , - src2w ) )"		1087625	0					
ANR	1088784	Condition	"TEST_SL_IMM ( src2 , - src2w )"	1577:7:53009:53033	1087625	0	True				
ANR	1088785	CallExpression	"TEST_SL_IMM ( src2 , - src2w )"		1087625	0					
ANR	1088786	Callee	TEST_SL_IMM		1087625	0					
ANR	1088787	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088788	ArgumentList	src2		1087625	1					
ANR	1088789	Argument	src2		1087625	0					
ANR	1088790	Identifier	src2		1087625	0					
ANR	1088791	Argument	- src2w		1087625	1					
ANR	1088792	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088793	UnaryOperator	-		1087625	0					
ANR	1088794	Identifier	src2w		1087625	1					
ANR	1088795	CompoundStatement		123:34:5067:5067	1087625	1					
ANR	1088796	ExpressionStatement	compiler -> imm = ( - src2w ) & 0xffff	1578:4:53042:53075	1087625	0	True				
ANR	1088797	AssignmentExpression	compiler -> imm = ( - src2w ) & 0xffff		1087625	0		=			
ANR	1088798	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088799	Identifier	compiler		1087625	0					
ANR	1088800	Identifier	imm		1087625	1					
ANR	1088801	BitAndExpression	( - src2w ) & 0xffff		1087625	1		&			
ANR	1088802	UnaryOperationExpression	- src2w		1087625	0					
ANR	1088803	UnaryOperator	-		1087625	0					
ANR	1088804	Identifier	src2w		1087625	1					
ANR	1088805	PrimaryExpression	0xffff		1087625	1					
ANR	1088806	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1579:4:53081:53172	1087625	1	True				
ANR	1088807	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088808	Callee	emit_op		1087625	0					
ANR	1088809	Identifier	emit_op		1087625	0					
ANR	1088810	ArgumentList	compiler		1087625	1					
ANR	1088811	Argument	compiler		1087625	0					
ANR	1088812	Identifier	compiler		1087625	0					
ANR	1088813	Argument	SLJIT_ADD		1087625	1					
ANR	1088814	Identifier	SLJIT_ADD		1087625	0					
ANR	1088815	Argument	flags | ALT_FORM3		1087625	2					
ANR	1088816	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1088817	Identifier	flags		1087625	0					
ANR	1088818	Identifier	ALT_FORM3		1087625	1					
ANR	1088819	Argument	dst		1087625	3					
ANR	1088820	Identifier	dst		1087625	0					
ANR	1088821	Argument	dstw		1087625	4					
ANR	1088822	Identifier	dstw		1087625	0					
ANR	1088823	Argument	src1		1087625	5					
ANR	1088824	Identifier	src1		1087625	0					
ANR	1088825	Argument	src1w		1087625	6					
ANR	1088826	Identifier	src1w		1087625	0					
ANR	1088827	Argument	TMP_REG2		1087625	7					
ANR	1088828	Identifier	TMP_REG2		1087625	0					
ANR	1088829	Argument	0		1087625	8					
ANR	1088830	PrimaryExpression	0		1087625	0					
ANR	1088831	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1583:2:53265:53384	1087625	10	True				
ANR	1088832	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088833	Callee	emit_op		1087625	0					
ANR	1088834	Identifier	emit_op		1087625	0					
ANR	1088835	ArgumentList	compiler		1087625	1					
ANR	1088836	Argument	compiler		1087625	0					
ANR	1088837	Identifier	compiler		1087625	0					
ANR	1088838	Argument	SLJIT_SUB		1087625	1					
ANR	1088839	Identifier	SLJIT_SUB		1087625	0					
ANR	1088840	Argument	flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 )		1087625	2					
ANR	1088841	InclusiveOrExpression	flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 )		1087625	0		|			
ANR	1088842	Identifier	flags		1087625	0					
ANR	1088843	ConditionalExpression	! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6		1087625	1					
ANR	1088844	Condition	! ( op & SLJIT_SET_U )		1087625	0					
ANR	1088845	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1087625	0					
ANR	1088846	UnaryOperator	!		1087625	0					
ANR	1088847	BitAndExpression	op & SLJIT_SET_U		1087625	1		&			
ANR	1088848	Identifier	op		1087625	0					
ANR	1088849	Identifier	SLJIT_SET_U		1087625	1					
ANR	1088850	PrimaryExpression	0		1087625	1					
ANR	1088851	Identifier	ALT_FORM6		1087625	2					
ANR	1088852	Argument	dst		1087625	3					
ANR	1088853	Identifier	dst		1087625	0					
ANR	1088854	Argument	dstw		1087625	4					
ANR	1088855	Identifier	dstw		1087625	0					
ANR	1088856	Argument	src1		1087625	5					
ANR	1088857	Identifier	src1		1087625	0					
ANR	1088858	Argument	src1w		1087625	6					
ANR	1088859	Identifier	src1w		1087625	0					
ANR	1088860	Argument	src2		1087625	7					
ANR	1088861	Identifier	src2		1087625	0					
ANR	1088862	Argument	src2w		1087625	8					
ANR	1088863	Identifier	src2w		1087625	0					
ANR	1088864	Label	case SLJIT_SUBC :	1585:1:53388:53403	1087625	11	True				
ANR	1088865	Identifier	SLJIT_SUBC		1087625	0					
ANR	1088866	ReturnStatement	"return emit_op ( compiler , SLJIT_SUBC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1586:2:53407:53532	1087625	12	True				
ANR	1088867	CallExpression	"emit_op ( compiler , SLJIT_SUBC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1088868	Callee	emit_op		1087625	0					
ANR	1088869	Identifier	emit_op		1087625	0					
ANR	1088870	ArgumentList	compiler		1087625	1					
ANR	1088871	Argument	compiler		1087625	0					
ANR	1088872	Identifier	compiler		1087625	0					
ANR	1088873	Argument	SLJIT_SUBC		1087625	1					
ANR	1088874	Identifier	SLJIT_SUBC		1087625	0					
ANR	1088875	Argument	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1087625	2					
ANR	1088876	InclusiveOrExpression	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1087625	0		|			
ANR	1088877	Identifier	flags		1087625	0					
ANR	1088878	ConditionalExpression	! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1		1087625	1					
ANR	1088879	Condition	! ( op & SLJIT_KEEP_FLAGS )		1087625	0					
ANR	1088880	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1087625	0					
ANR	1088881	UnaryOperator	!		1087625	0					
ANR	1088882	BitAndExpression	op & SLJIT_KEEP_FLAGS		1087625	1		&			
ANR	1088883	Identifier	op		1087625	0					
ANR	1088884	Identifier	SLJIT_KEEP_FLAGS		1087625	1					
ANR	1088885	PrimaryExpression	0		1087625	1					
ANR	1088886	Identifier	ALT_FORM1		1087625	2					
ANR	1088887	Argument	dst		1087625	3					
ANR	1088888	Identifier	dst		1087625	0					
ANR	1088889	Argument	dstw		1087625	4					
ANR	1088890	Identifier	dstw		1087625	0					
ANR	1088891	Argument	src1		1087625	5					
ANR	1088892	Identifier	src1		1087625	0					
ANR	1088893	Argument	src1w		1087625	6					
ANR	1088894	Identifier	src1w		1087625	0					
ANR	1088895	Argument	src2		1087625	7					
ANR	1088896	Identifier	src2		1087625	0					
ANR	1088897	Argument	src2w		1087625	8					
ANR	1088898	Identifier	src2w		1087625	0					
ANR	1088899	Label	case SLJIT_MUL :	1588:1:53536:53550	1087625	13	True				
ANR	1088900	Identifier	SLJIT_MUL		1087625	0					
ANR	1088901	IfStatement	if ( op & SLJIT_INT_OP )		1087625	14					
ANR	1088902	Condition	op & SLJIT_INT_OP	1590:6:53615:53631	1087625	0	True				
ANR	1088903	BitAndExpression	op & SLJIT_INT_OP		1087625	0		&			
ANR	1088904	Identifier	op		1087625	0					
ANR	1088905	Identifier	SLJIT_INT_OP		1087625	1					
ANR	1088906	ExpressionStatement	flags |= ALT_FORM2	1591:3:53637:53655	1087625	1	True				
ANR	1088907	AssignmentExpression	flags |= ALT_FORM2		1087625	0		|=			
ANR	1088908	Identifier	flags		1087625	0					
ANR	1088909	Identifier	ALT_FORM2		1087625	1					
ANR	1088910	IfStatement	if ( ! GET_FLAGS ( op ) )		1087625	15					
ANR	1088911	Condition	! GET_FLAGS ( op )	1593:6:53670:53683	1087625	0	True				
ANR	1088912	UnaryOperationExpression	! GET_FLAGS ( op )		1087625	0					
ANR	1088913	UnaryOperator	!		1087625	0					
ANR	1088914	CallExpression	GET_FLAGS ( op )		1087625	1					
ANR	1088915	Callee	GET_FLAGS		1087625	0					
ANR	1088916	Identifier	GET_FLAGS		1087625	0					
ANR	1088917	ArgumentList	op		1087625	1					
ANR	1088918	Argument	op		1087625	0					
ANR	1088919	Identifier	op		1087625	0					
ANR	1088920	CompoundStatement		139:22:5717:5717	1087625	1					
ANR	1088921	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1088922	Condition	"TEST_SL_IMM ( src2 , src2w )"	1594:7:53695:53718	1087625	0	True				
ANR	1088923	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1087625	0					
ANR	1088924	Callee	TEST_SL_IMM		1087625	0					
ANR	1088925	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088926	ArgumentList	src2		1087625	1					
ANR	1088927	Argument	src2		1087625	0					
ANR	1088928	Identifier	src2		1087625	0					
ANR	1088929	Argument	src2w		1087625	1					
ANR	1088930	Identifier	src2w		1087625	0					
ANR	1088931	CompoundStatement		140:33:5752:5752	1087625	1					
ANR	1088932	ExpressionStatement	compiler -> imm = src2w & 0xffff	1595:4:53727:53757	1087625	0	True				
ANR	1088933	AssignmentExpression	compiler -> imm = src2w & 0xffff		1087625	0		=			
ANR	1088934	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088935	Identifier	compiler		1087625	0					
ANR	1088936	Identifier	imm		1087625	1					
ANR	1088937	BitAndExpression	src2w & 0xffff		1087625	1		&			
ANR	1088938	Identifier	src2w		1087625	0					
ANR	1088939	PrimaryExpression	0xffff		1087625	1					
ANR	1088940	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1596:4:53763:53854	1087625	1	True				
ANR	1088941	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088942	Callee	emit_op		1087625	0					
ANR	1088943	Identifier	emit_op		1087625	0					
ANR	1088944	ArgumentList	compiler		1087625	1					
ANR	1088945	Argument	compiler		1087625	0					
ANR	1088946	Identifier	compiler		1087625	0					
ANR	1088947	Argument	SLJIT_MUL		1087625	1					
ANR	1088948	Identifier	SLJIT_MUL		1087625	0					
ANR	1088949	Argument	flags | ALT_FORM1		1087625	2					
ANR	1088950	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1088951	Identifier	flags		1087625	0					
ANR	1088952	Identifier	ALT_FORM1		1087625	1					
ANR	1088953	Argument	dst		1087625	3					
ANR	1088954	Identifier	dst		1087625	0					
ANR	1088955	Argument	dstw		1087625	4					
ANR	1088956	Identifier	dstw		1087625	0					
ANR	1088957	Argument	src1		1087625	5					
ANR	1088958	Identifier	src1		1087625	0					
ANR	1088959	Argument	src1w		1087625	6					
ANR	1088960	Identifier	src1w		1087625	0					
ANR	1088961	Argument	TMP_REG2		1087625	7					
ANR	1088962	Identifier	TMP_REG2		1087625	0					
ANR	1088963	Argument	0		1087625	8					
ANR	1088964	PrimaryExpression	0		1087625	0					
ANR	1088965	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1088966	Condition	"TEST_SL_IMM ( src1 , src1w )"	1598:7:53868:53891	1087625	0	True				
ANR	1088967	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1087625	0					
ANR	1088968	Callee	TEST_SL_IMM		1087625	0					
ANR	1088969	Identifier	TEST_SL_IMM		1087625	0					
ANR	1088970	ArgumentList	src1		1087625	1					
ANR	1088971	Argument	src1		1087625	0					
ANR	1088972	Identifier	src1		1087625	0					
ANR	1088973	Argument	src1w		1087625	1					
ANR	1088974	Identifier	src1w		1087625	0					
ANR	1088975	CompoundStatement		144:33:5925:5925	1087625	1					
ANR	1088976	ExpressionStatement	compiler -> imm = src1w & 0xffff	1599:4:53900:53930	1087625	0	True				
ANR	1088977	AssignmentExpression	compiler -> imm = src1w & 0xffff		1087625	0		=			
ANR	1088978	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1088979	Identifier	compiler		1087625	0					
ANR	1088980	Identifier	imm		1087625	1					
ANR	1088981	BitAndExpression	src1w & 0xffff		1087625	1		&			
ANR	1088982	Identifier	src1w		1087625	0					
ANR	1088983	PrimaryExpression	0xffff		1087625	1					
ANR	1088984	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1600:4:53936:54027	1087625	1	True				
ANR	1088985	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1088986	Callee	emit_op		1087625	0					
ANR	1088987	Identifier	emit_op		1087625	0					
ANR	1088988	ArgumentList	compiler		1087625	1					
ANR	1088989	Argument	compiler		1087625	0					
ANR	1088990	Identifier	compiler		1087625	0					
ANR	1088991	Argument	SLJIT_MUL		1087625	1					
ANR	1088992	Identifier	SLJIT_MUL		1087625	0					
ANR	1088993	Argument	flags | ALT_FORM1		1087625	2					
ANR	1088994	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1088995	Identifier	flags		1087625	0					
ANR	1088996	Identifier	ALT_FORM1		1087625	1					
ANR	1088997	Argument	dst		1087625	3					
ANR	1088998	Identifier	dst		1087625	0					
ANR	1088999	Argument	dstw		1087625	4					
ANR	1089000	Identifier	dstw		1087625	0					
ANR	1089001	Argument	src2		1087625	5					
ANR	1089002	Identifier	src2		1087625	0					
ANR	1089003	Argument	src2w		1087625	6					
ANR	1089004	Identifier	src2w		1087625	0					
ANR	1089005	Argument	TMP_REG2		1087625	7					
ANR	1089006	Identifier	TMP_REG2		1087625	0					
ANR	1089007	Argument	0		1087625	8					
ANR	1089008	PrimaryExpression	0		1087625	0					
ANR	1089009	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1603:2:54040:54119	1087625	16	True				
ANR	1089010	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1089011	Callee	emit_op		1087625	0					
ANR	1089012	Identifier	emit_op		1087625	0					
ANR	1089013	ArgumentList	compiler		1087625	1					
ANR	1089014	Argument	compiler		1087625	0					
ANR	1089015	Identifier	compiler		1087625	0					
ANR	1089016	Argument	SLJIT_MUL		1087625	1					
ANR	1089017	Identifier	SLJIT_MUL		1087625	0					
ANR	1089018	Argument	flags		1087625	2					
ANR	1089019	Identifier	flags		1087625	0					
ANR	1089020	Argument	dst		1087625	3					
ANR	1089021	Identifier	dst		1087625	0					
ANR	1089022	Argument	dstw		1087625	4					
ANR	1089023	Identifier	dstw		1087625	0					
ANR	1089024	Argument	src1		1087625	5					
ANR	1089025	Identifier	src1		1087625	0					
ANR	1089026	Argument	src1w		1087625	6					
ANR	1089027	Identifier	src1w		1087625	0					
ANR	1089028	Argument	src2		1087625	7					
ANR	1089029	Identifier	src2		1087625	0					
ANR	1089030	Argument	src2w		1087625	8					
ANR	1089031	Identifier	src2w		1087625	0					
ANR	1089032	Label	case SLJIT_AND :	1605:1:54123:54137	1087625	17	True				
ANR	1089033	Identifier	SLJIT_AND		1087625	0					
ANR	1089034	Label	case SLJIT_OR :	1606:1:54140:54153	1087625	18	True				
ANR	1089035	Identifier	SLJIT_OR		1087625	0					
ANR	1089036	Label	case SLJIT_XOR :	1607:1:54156:54170	1087625	19	True				
ANR	1089037	Identifier	SLJIT_XOR		1087625	0					
ANR	1089038	IfStatement	if ( ! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND )		1087625	20					
ANR	1089039	Condition	! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND	1609:6:54219:54263	1087625	0	True				
ANR	1089040	OrExpression	! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND		1087625	0		||			
ANR	1089041	UnaryOperationExpression	! GET_FLAGS ( op )		1087625	0					
ANR	1089042	UnaryOperator	!		1087625	0					
ANR	1089043	CallExpression	GET_FLAGS ( op )		1087625	1					
ANR	1089044	Callee	GET_FLAGS		1087625	0					
ANR	1089045	Identifier	GET_FLAGS		1087625	0					
ANR	1089046	ArgumentList	op		1087625	1					
ANR	1089047	Argument	op		1087625	0					
ANR	1089048	Identifier	op		1087625	0					
ANR	1089049	EqualityExpression	GET_OPCODE ( op ) == SLJIT_AND		1087625	1		==			
ANR	1089050	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089051	Callee	GET_OPCODE		1087625	0					
ANR	1089052	Identifier	GET_OPCODE		1087625	0					
ANR	1089053	ArgumentList	op		1087625	1					
ANR	1089054	Argument	op		1087625	0					
ANR	1089055	Identifier	op		1087625	0					
ANR	1089056	Identifier	SLJIT_AND		1087625	1					
ANR	1089057	CompoundStatement		155:53:6297:6297	1087625	1					
ANR	1089058	IfStatement	"if ( TEST_UL_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1089059	Condition	"TEST_UL_IMM ( src2 , src2w )"	1610:7:54275:54298	1087625	0	True				
ANR	1089060	CallExpression	"TEST_UL_IMM ( src2 , src2w )"		1087625	0					
ANR	1089061	Callee	TEST_UL_IMM		1087625	0					
ANR	1089062	Identifier	TEST_UL_IMM		1087625	0					
ANR	1089063	ArgumentList	src2		1087625	1					
ANR	1089064	Argument	src2		1087625	0					
ANR	1089065	Identifier	src2		1087625	0					
ANR	1089066	Argument	src2w		1087625	1					
ANR	1089067	Identifier	src2w		1087625	0					
ANR	1089068	CompoundStatement		156:33:6332:6332	1087625	1					
ANR	1089069	ExpressionStatement	compiler -> imm = src2w	1611:4:54307:54328	1087625	0	True				
ANR	1089070	AssignmentExpression	compiler -> imm = src2w		1087625	0		=			
ANR	1089071	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089072	Identifier	compiler		1087625	0					
ANR	1089073	Identifier	imm		1087625	1					
ANR	1089074	Identifier	src2w		1087625	1					
ANR	1089075	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1612:4:54334:54430	1087625	1	True				
ANR	1089076	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089077	Callee	emit_op		1087625	0					
ANR	1089078	Identifier	emit_op		1087625	0					
ANR	1089079	ArgumentList	compiler		1087625	1					
ANR	1089080	Argument	compiler		1087625	0					
ANR	1089081	Identifier	compiler		1087625	0					
ANR	1089082	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089083	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089084	Callee	GET_OPCODE		1087625	0					
ANR	1089085	Identifier	GET_OPCODE		1087625	0					
ANR	1089086	ArgumentList	op		1087625	1					
ANR	1089087	Argument	op		1087625	0					
ANR	1089088	Identifier	op		1087625	0					
ANR	1089089	Argument	flags | ALT_FORM1		1087625	2					
ANR	1089090	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1089091	Identifier	flags		1087625	0					
ANR	1089092	Identifier	ALT_FORM1		1087625	1					
ANR	1089093	Argument	dst		1087625	3					
ANR	1089094	Identifier	dst		1087625	0					
ANR	1089095	Argument	dstw		1087625	4					
ANR	1089096	Identifier	dstw		1087625	0					
ANR	1089097	Argument	src1		1087625	5					
ANR	1089098	Identifier	src1		1087625	0					
ANR	1089099	Argument	src1w		1087625	6					
ANR	1089100	Identifier	src1w		1087625	0					
ANR	1089101	Argument	TMP_REG2		1087625	7					
ANR	1089102	Identifier	TMP_REG2		1087625	0					
ANR	1089103	Argument	0		1087625	8					
ANR	1089104	PrimaryExpression	0		1087625	0					
ANR	1089105	IfStatement	"if ( TEST_UL_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1089106	Condition	"TEST_UL_IMM ( src1 , src1w )"	1614:7:54444:54467	1087625	0	True				
ANR	1089107	CallExpression	"TEST_UL_IMM ( src1 , src1w )"		1087625	0					
ANR	1089108	Callee	TEST_UL_IMM		1087625	0					
ANR	1089109	Identifier	TEST_UL_IMM		1087625	0					
ANR	1089110	ArgumentList	src1		1087625	1					
ANR	1089111	Argument	src1		1087625	0					
ANR	1089112	Identifier	src1		1087625	0					
ANR	1089113	Argument	src1w		1087625	1					
ANR	1089114	Identifier	src1w		1087625	0					
ANR	1089115	CompoundStatement		160:33:6501:6501	1087625	1					
ANR	1089116	ExpressionStatement	compiler -> imm = src1w	1615:4:54476:54497	1087625	0	True				
ANR	1089117	AssignmentExpression	compiler -> imm = src1w		1087625	0		=			
ANR	1089118	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089119	Identifier	compiler		1087625	0					
ANR	1089120	Identifier	imm		1087625	1					
ANR	1089121	Identifier	src1w		1087625	1					
ANR	1089122	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1616:4:54503:54599	1087625	1	True				
ANR	1089123	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089124	Callee	emit_op		1087625	0					
ANR	1089125	Identifier	emit_op		1087625	0					
ANR	1089126	ArgumentList	compiler		1087625	1					
ANR	1089127	Argument	compiler		1087625	0					
ANR	1089128	Identifier	compiler		1087625	0					
ANR	1089129	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089130	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089131	Callee	GET_OPCODE		1087625	0					
ANR	1089132	Identifier	GET_OPCODE		1087625	0					
ANR	1089133	ArgumentList	op		1087625	1					
ANR	1089134	Argument	op		1087625	0					
ANR	1089135	Identifier	op		1087625	0					
ANR	1089136	Argument	flags | ALT_FORM1		1087625	2					
ANR	1089137	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1089138	Identifier	flags		1087625	0					
ANR	1089139	Identifier	ALT_FORM1		1087625	1					
ANR	1089140	Argument	dst		1087625	3					
ANR	1089141	Identifier	dst		1087625	0					
ANR	1089142	Argument	dstw		1087625	4					
ANR	1089143	Identifier	dstw		1087625	0					
ANR	1089144	Argument	src2		1087625	5					
ANR	1089145	Identifier	src2		1087625	0					
ANR	1089146	Argument	src2w		1087625	6					
ANR	1089147	Identifier	src2w		1087625	0					
ANR	1089148	Argument	TMP_REG2		1087625	7					
ANR	1089149	Identifier	TMP_REG2		1087625	0					
ANR	1089150	Argument	0		1087625	8					
ANR	1089151	PrimaryExpression	0		1087625	0					
ANR	1089152	IfStatement	"if ( TEST_UH_IMM ( src2 , src2w ) )"		1087625	2					
ANR	1089153	Condition	"TEST_UH_IMM ( src2 , src2w )"	1618:7:54613:54636	1087625	0	True				
ANR	1089154	CallExpression	"TEST_UH_IMM ( src2 , src2w )"		1087625	0					
ANR	1089155	Callee	TEST_UH_IMM		1087625	0					
ANR	1089156	Identifier	TEST_UH_IMM		1087625	0					
ANR	1089157	ArgumentList	src2		1087625	1					
ANR	1089158	Argument	src2		1087625	0					
ANR	1089159	Identifier	src2		1087625	0					
ANR	1089160	Argument	src2w		1087625	1					
ANR	1089161	Identifier	src2w		1087625	0					
ANR	1089162	CompoundStatement		164:33:6670:6670	1087625	1					
ANR	1089163	ExpressionStatement	compiler -> imm = ( src2w >> 16 ) & 0xffff	1619:4:54645:54683	1087625	0	True				
ANR	1089164	AssignmentExpression	compiler -> imm = ( src2w >> 16 ) & 0xffff		1087625	0		=			
ANR	1089165	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089166	Identifier	compiler		1087625	0					
ANR	1089167	Identifier	imm		1087625	1					
ANR	1089168	BitAndExpression	( src2w >> 16 ) & 0xffff		1087625	1		&			
ANR	1089169	ShiftExpression	src2w >> 16		1087625	0		>>			
ANR	1089170	Identifier	src2w		1087625	0					
ANR	1089171	PrimaryExpression	16		1087625	1					
ANR	1089172	PrimaryExpression	0xffff		1087625	1					
ANR	1089173	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1620:4:54689:54785	1087625	1	True				
ANR	1089174	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089175	Callee	emit_op		1087625	0					
ANR	1089176	Identifier	emit_op		1087625	0					
ANR	1089177	ArgumentList	compiler		1087625	1					
ANR	1089178	Argument	compiler		1087625	0					
ANR	1089179	Identifier	compiler		1087625	0					
ANR	1089180	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089181	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089182	Callee	GET_OPCODE		1087625	0					
ANR	1089183	Identifier	GET_OPCODE		1087625	0					
ANR	1089184	ArgumentList	op		1087625	1					
ANR	1089185	Argument	op		1087625	0					
ANR	1089186	Identifier	op		1087625	0					
ANR	1089187	Argument	flags | ALT_FORM2		1087625	2					
ANR	1089188	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1089189	Identifier	flags		1087625	0					
ANR	1089190	Identifier	ALT_FORM2		1087625	1					
ANR	1089191	Argument	dst		1087625	3					
ANR	1089192	Identifier	dst		1087625	0					
ANR	1089193	Argument	dstw		1087625	4					
ANR	1089194	Identifier	dstw		1087625	0					
ANR	1089195	Argument	src1		1087625	5					
ANR	1089196	Identifier	src1		1087625	0					
ANR	1089197	Argument	src1w		1087625	6					
ANR	1089198	Identifier	src1w		1087625	0					
ANR	1089199	Argument	TMP_REG2		1087625	7					
ANR	1089200	Identifier	TMP_REG2		1087625	0					
ANR	1089201	Argument	0		1087625	8					
ANR	1089202	PrimaryExpression	0		1087625	0					
ANR	1089203	IfStatement	"if ( TEST_UH_IMM ( src1 , src1w ) )"		1087625	3					
ANR	1089204	Condition	"TEST_UH_IMM ( src1 , src1w )"	1622:7:54799:54822	1087625	0	True				
ANR	1089205	CallExpression	"TEST_UH_IMM ( src1 , src1w )"		1087625	0					
ANR	1089206	Callee	TEST_UH_IMM		1087625	0					
ANR	1089207	Identifier	TEST_UH_IMM		1087625	0					
ANR	1089208	ArgumentList	src1		1087625	1					
ANR	1089209	Argument	src1		1087625	0					
ANR	1089210	Identifier	src1		1087625	0					
ANR	1089211	Argument	src1w		1087625	1					
ANR	1089212	Identifier	src1w		1087625	0					
ANR	1089213	CompoundStatement		168:33:6856:6856	1087625	1					
ANR	1089214	ExpressionStatement	compiler -> imm = ( src1w >> 16 ) & 0xffff	1623:4:54831:54869	1087625	0	True				
ANR	1089215	AssignmentExpression	compiler -> imm = ( src1w >> 16 ) & 0xffff		1087625	0		=			
ANR	1089216	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089217	Identifier	compiler		1087625	0					
ANR	1089218	Identifier	imm		1087625	1					
ANR	1089219	BitAndExpression	( src1w >> 16 ) & 0xffff		1087625	1		&			
ANR	1089220	ShiftExpression	src1w >> 16		1087625	0		>>			
ANR	1089221	Identifier	src1w		1087625	0					
ANR	1089222	PrimaryExpression	16		1087625	1					
ANR	1089223	PrimaryExpression	0xffff		1087625	1					
ANR	1089224	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1624:4:54875:54971	1087625	1	True				
ANR	1089225	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089226	Callee	emit_op		1087625	0					
ANR	1089227	Identifier	emit_op		1087625	0					
ANR	1089228	ArgumentList	compiler		1087625	1					
ANR	1089229	Argument	compiler		1087625	0					
ANR	1089230	Identifier	compiler		1087625	0					
ANR	1089231	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089232	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089233	Callee	GET_OPCODE		1087625	0					
ANR	1089234	Identifier	GET_OPCODE		1087625	0					
ANR	1089235	ArgumentList	op		1087625	1					
ANR	1089236	Argument	op		1087625	0					
ANR	1089237	Identifier	op		1087625	0					
ANR	1089238	Argument	flags | ALT_FORM2		1087625	2					
ANR	1089239	InclusiveOrExpression	flags | ALT_FORM2		1087625	0		|			
ANR	1089240	Identifier	flags		1087625	0					
ANR	1089241	Identifier	ALT_FORM2		1087625	1					
ANR	1089242	Argument	dst		1087625	3					
ANR	1089243	Identifier	dst		1087625	0					
ANR	1089244	Argument	dstw		1087625	4					
ANR	1089245	Identifier	dstw		1087625	0					
ANR	1089246	Argument	src2		1087625	5					
ANR	1089247	Identifier	src2		1087625	0					
ANR	1089248	Argument	src2w		1087625	6					
ANR	1089249	Identifier	src2w		1087625	0					
ANR	1089250	Argument	TMP_REG2		1087625	7					
ANR	1089251	Identifier	TMP_REG2		1087625	0					
ANR	1089252	Argument	0		1087625	8					
ANR	1089253	PrimaryExpression	0		1087625	0					
ANR	1089254	IfStatement	if ( ! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND )		1087625	21					
ANR	1089255	Condition	! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND	1627:6:54988:55032	1087625	0	True				
ANR	1089256	AndExpression	! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND		1087625	0		&&			
ANR	1089257	UnaryOperationExpression	! GET_FLAGS ( op )		1087625	0					
ANR	1089258	UnaryOperator	!		1087625	0					
ANR	1089259	CallExpression	GET_FLAGS ( op )		1087625	1					
ANR	1089260	Callee	GET_FLAGS		1087625	0					
ANR	1089261	Identifier	GET_FLAGS		1087625	0					
ANR	1089262	ArgumentList	op		1087625	1					
ANR	1089263	Argument	op		1087625	0					
ANR	1089264	Identifier	op		1087625	0					
ANR	1089265	EqualityExpression	GET_OPCODE ( op ) != SLJIT_AND		1087625	1		!=			
ANR	1089266	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089267	Callee	GET_OPCODE		1087625	0					
ANR	1089268	Identifier	GET_OPCODE		1087625	0					
ANR	1089269	ArgumentList	op		1087625	1					
ANR	1089270	Argument	op		1087625	0					
ANR	1089271	Identifier	op		1087625	0					
ANR	1089272	Identifier	SLJIT_AND		1087625	1					
ANR	1089273	CompoundStatement		173:53:7066:7066	1087625	1					
ANR	1089274	IfStatement	"if ( TEST_UI_IMM ( src2 , src2w ) )"		1087625	0					
ANR	1089275	Condition	"TEST_UI_IMM ( src2 , src2w )"	1628:7:55044:55067	1087625	0	True				
ANR	1089276	CallExpression	"TEST_UI_IMM ( src2 , src2w )"		1087625	0					
ANR	1089277	Callee	TEST_UI_IMM		1087625	0					
ANR	1089278	Identifier	TEST_UI_IMM		1087625	0					
ANR	1089279	ArgumentList	src2		1087625	1					
ANR	1089280	Argument	src2		1087625	0					
ANR	1089281	Identifier	src2		1087625	0					
ANR	1089282	Argument	src2w		1087625	1					
ANR	1089283	Identifier	src2w		1087625	0					
ANR	1089284	CompoundStatement		174:33:7101:7101	1087625	1					
ANR	1089285	ExpressionStatement	compiler -> imm = src2w	1629:4:55076:55097	1087625	0	True				
ANR	1089286	AssignmentExpression	compiler -> imm = src2w		1087625	0		=			
ANR	1089287	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089288	Identifier	compiler		1087625	0					
ANR	1089289	Identifier	imm		1087625	1					
ANR	1089290	Identifier	src2w		1087625	1					
ANR	1089291	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1630:4:55103:55199	1087625	1	True				
ANR	1089292	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089293	Callee	emit_op		1087625	0					
ANR	1089294	Identifier	emit_op		1087625	0					
ANR	1089295	ArgumentList	compiler		1087625	1					
ANR	1089296	Argument	compiler		1087625	0					
ANR	1089297	Identifier	compiler		1087625	0					
ANR	1089298	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089299	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089300	Callee	GET_OPCODE		1087625	0					
ANR	1089301	Identifier	GET_OPCODE		1087625	0					
ANR	1089302	ArgumentList	op		1087625	1					
ANR	1089303	Argument	op		1087625	0					
ANR	1089304	Identifier	op		1087625	0					
ANR	1089305	Argument	flags | ALT_FORM3		1087625	2					
ANR	1089306	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1089307	Identifier	flags		1087625	0					
ANR	1089308	Identifier	ALT_FORM3		1087625	1					
ANR	1089309	Argument	dst		1087625	3					
ANR	1089310	Identifier	dst		1087625	0					
ANR	1089311	Argument	dstw		1087625	4					
ANR	1089312	Identifier	dstw		1087625	0					
ANR	1089313	Argument	src1		1087625	5					
ANR	1089314	Identifier	src1		1087625	0					
ANR	1089315	Argument	src1w		1087625	6					
ANR	1089316	Identifier	src1w		1087625	0					
ANR	1089317	Argument	TMP_REG2		1087625	7					
ANR	1089318	Identifier	TMP_REG2		1087625	0					
ANR	1089319	Argument	0		1087625	8					
ANR	1089320	PrimaryExpression	0		1087625	0					
ANR	1089321	IfStatement	"if ( TEST_UI_IMM ( src1 , src1w ) )"		1087625	1					
ANR	1089322	Condition	"TEST_UI_IMM ( src1 , src1w )"	1632:7:55213:55236	1087625	0	True				
ANR	1089323	CallExpression	"TEST_UI_IMM ( src1 , src1w )"		1087625	0					
ANR	1089324	Callee	TEST_UI_IMM		1087625	0					
ANR	1089325	Identifier	TEST_UI_IMM		1087625	0					
ANR	1089326	ArgumentList	src1		1087625	1					
ANR	1089327	Argument	src1		1087625	0					
ANR	1089328	Identifier	src1		1087625	0					
ANR	1089329	Argument	src1w		1087625	1					
ANR	1089330	Identifier	src1w		1087625	0					
ANR	1089331	CompoundStatement		178:33:7270:7270	1087625	1					
ANR	1089332	ExpressionStatement	compiler -> imm = src1w	1633:4:55245:55266	1087625	0	True				
ANR	1089333	AssignmentExpression	compiler -> imm = src1w		1087625	0		=			
ANR	1089334	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089335	Identifier	compiler		1087625	0					
ANR	1089336	Identifier	imm		1087625	1					
ANR	1089337	Identifier	src1w		1087625	1					
ANR	1089338	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1634:4:55272:55368	1087625	1	True				
ANR	1089339	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089340	Callee	emit_op		1087625	0					
ANR	1089341	Identifier	emit_op		1087625	0					
ANR	1089342	ArgumentList	compiler		1087625	1					
ANR	1089343	Argument	compiler		1087625	0					
ANR	1089344	Identifier	compiler		1087625	0					
ANR	1089345	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089346	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089347	Callee	GET_OPCODE		1087625	0					
ANR	1089348	Identifier	GET_OPCODE		1087625	0					
ANR	1089349	ArgumentList	op		1087625	1					
ANR	1089350	Argument	op		1087625	0					
ANR	1089351	Identifier	op		1087625	0					
ANR	1089352	Argument	flags | ALT_FORM3		1087625	2					
ANR	1089353	InclusiveOrExpression	flags | ALT_FORM3		1087625	0		|			
ANR	1089354	Identifier	flags		1087625	0					
ANR	1089355	Identifier	ALT_FORM3		1087625	1					
ANR	1089356	Argument	dst		1087625	3					
ANR	1089357	Identifier	dst		1087625	0					
ANR	1089358	Argument	dstw		1087625	4					
ANR	1089359	Identifier	dstw		1087625	0					
ANR	1089360	Argument	src2		1087625	5					
ANR	1089361	Identifier	src2		1087625	0					
ANR	1089362	Argument	src2w		1087625	6					
ANR	1089363	Identifier	src2w		1087625	0					
ANR	1089364	Argument	TMP_REG2		1087625	7					
ANR	1089365	Identifier	TMP_REG2		1087625	0					
ANR	1089366	Argument	0		1087625	8					
ANR	1089367	PrimaryExpression	0		1087625	0					
ANR	1089368	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1637:2:55381:55465	1087625	22	True				
ANR	1089369	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1089370	Callee	emit_op		1087625	0					
ANR	1089371	Identifier	emit_op		1087625	0					
ANR	1089372	ArgumentList	compiler		1087625	1					
ANR	1089373	Argument	compiler		1087625	0					
ANR	1089374	Identifier	compiler		1087625	0					
ANR	1089375	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089376	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089377	Callee	GET_OPCODE		1087625	0					
ANR	1089378	Identifier	GET_OPCODE		1087625	0					
ANR	1089379	ArgumentList	op		1087625	1					
ANR	1089380	Argument	op		1087625	0					
ANR	1089381	Identifier	op		1087625	0					
ANR	1089382	Argument	flags		1087625	2					
ANR	1089383	Identifier	flags		1087625	0					
ANR	1089384	Argument	dst		1087625	3					
ANR	1089385	Identifier	dst		1087625	0					
ANR	1089386	Argument	dstw		1087625	4					
ANR	1089387	Identifier	dstw		1087625	0					
ANR	1089388	Argument	src1		1087625	5					
ANR	1089389	Identifier	src1		1087625	0					
ANR	1089390	Argument	src1w		1087625	6					
ANR	1089391	Identifier	src1w		1087625	0					
ANR	1089392	Argument	src2		1087625	7					
ANR	1089393	Identifier	src2		1087625	0					
ANR	1089394	Argument	src2w		1087625	8					
ANR	1089395	Identifier	src2w		1087625	0					
ANR	1089396	Label	case SLJIT_ASHR :	1639:1:55469:55484	1087625	23	True				
ANR	1089397	Identifier	SLJIT_ASHR		1087625	0					
ANR	1089398	IfStatement	if ( op & SLJIT_KEEP_FLAGS )		1087625	24					
ANR	1089399	Condition	op & SLJIT_KEEP_FLAGS	1640:6:55492:55512	1087625	0	True				
ANR	1089400	BitAndExpression	op & SLJIT_KEEP_FLAGS		1087625	0		&			
ANR	1089401	Identifier	op		1087625	0					
ANR	1089402	Identifier	SLJIT_KEEP_FLAGS		1087625	1					
ANR	1089403	ExpressionStatement	flags |= ALT_FORM3	1641:3:55518:55536	1087625	1	True				
ANR	1089404	AssignmentExpression	flags |= ALT_FORM3		1087625	0		|=			
ANR	1089405	Identifier	flags		1087625	0					
ANR	1089406	Identifier	ALT_FORM3		1087625	1					
ANR	1089407	Label	case SLJIT_SHL :	1643:1:55561:55575	1087625	25	True				
ANR	1089408	Identifier	SLJIT_SHL		1087625	0					
ANR	1089409	Label	case SLJIT_LSHR :	1644:1:55578:55593	1087625	26	True				
ANR	1089410	Identifier	SLJIT_LSHR		1087625	0					
ANR	1089411	IfStatement	if ( op & SLJIT_INT_OP )		1087625	27					
ANR	1089412	Condition	op & SLJIT_INT_OP	1646:6:55658:55674	1087625	0	True				
ANR	1089413	BitAndExpression	op & SLJIT_INT_OP		1087625	0		&			
ANR	1089414	Identifier	op		1087625	0					
ANR	1089415	Identifier	SLJIT_INT_OP		1087625	1					
ANR	1089416	ExpressionStatement	flags |= ALT_FORM2	1647:3:55680:55698	1087625	1	True				
ANR	1089417	AssignmentExpression	flags |= ALT_FORM2		1087625	0		|=			
ANR	1089418	Identifier	flags		1087625	0					
ANR	1089419	Identifier	ALT_FORM2		1087625	1					
ANR	1089420	IfStatement	if ( src2 & SLJIT_IMM )		1087625	28					
ANR	1089421	Condition	src2 & SLJIT_IMM	1649:6:55713:55728	1087625	0	True				
ANR	1089422	BitAndExpression	src2 & SLJIT_IMM		1087625	0		&			
ANR	1089423	Identifier	src2		1087625	0					
ANR	1089424	Identifier	SLJIT_IMM		1087625	1					
ANR	1089425	CompoundStatement		195:24:7762:7762	1087625	1					
ANR	1089426	ExpressionStatement	compiler -> imm = src2w	1650:3:55736:55757	1087625	0	True				
ANR	1089427	AssignmentExpression	compiler -> imm = src2w		1087625	0		=			
ANR	1089428	PtrMemberAccess	compiler -> imm		1087625	0					
ANR	1089429	Identifier	compiler		1087625	0					
ANR	1089430	Identifier	imm		1087625	1					
ANR	1089431	Identifier	src2w		1087625	1					
ANR	1089432	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1651:3:55762:55858	1087625	1	True				
ANR	1089433	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1087625	0					
ANR	1089434	Callee	emit_op		1087625	0					
ANR	1089435	Identifier	emit_op		1087625	0					
ANR	1089436	ArgumentList	compiler		1087625	1					
ANR	1089437	Argument	compiler		1087625	0					
ANR	1089438	Identifier	compiler		1087625	0					
ANR	1089439	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089440	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089441	Callee	GET_OPCODE		1087625	0					
ANR	1089442	Identifier	GET_OPCODE		1087625	0					
ANR	1089443	ArgumentList	op		1087625	1					
ANR	1089444	Argument	op		1087625	0					
ANR	1089445	Identifier	op		1087625	0					
ANR	1089446	Argument	flags | ALT_FORM1		1087625	2					
ANR	1089447	InclusiveOrExpression	flags | ALT_FORM1		1087625	0		|			
ANR	1089448	Identifier	flags		1087625	0					
ANR	1089449	Identifier	ALT_FORM1		1087625	1					
ANR	1089450	Argument	dst		1087625	3					
ANR	1089451	Identifier	dst		1087625	0					
ANR	1089452	Argument	dstw		1087625	4					
ANR	1089453	Identifier	dstw		1087625	0					
ANR	1089454	Argument	src1		1087625	5					
ANR	1089455	Identifier	src1		1087625	0					
ANR	1089456	Argument	src1w		1087625	6					
ANR	1089457	Identifier	src1w		1087625	0					
ANR	1089458	Argument	TMP_REG2		1087625	7					
ANR	1089459	Identifier	TMP_REG2		1087625	0					
ANR	1089460	Argument	0		1087625	8					
ANR	1089461	PrimaryExpression	0		1087625	0					
ANR	1089462	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1653:2:55866:55950	1087625	29	True				
ANR	1089463	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1087625	0					
ANR	1089464	Callee	emit_op		1087625	0					
ANR	1089465	Identifier	emit_op		1087625	0					
ANR	1089466	ArgumentList	compiler		1087625	1					
ANR	1089467	Argument	compiler		1087625	0					
ANR	1089468	Identifier	compiler		1087625	0					
ANR	1089469	Argument	GET_OPCODE ( op )		1087625	1					
ANR	1089470	CallExpression	GET_OPCODE ( op )		1087625	0					
ANR	1089471	Callee	GET_OPCODE		1087625	0					
ANR	1089472	Identifier	GET_OPCODE		1087625	0					
ANR	1089473	ArgumentList	op		1087625	1					
ANR	1089474	Argument	op		1087625	0					
ANR	1089475	Identifier	op		1087625	0					
ANR	1089476	Argument	flags		1087625	2					
ANR	1089477	Identifier	flags		1087625	0					
ANR	1089478	Argument	dst		1087625	3					
ANR	1089479	Identifier	dst		1087625	0					
ANR	1089480	Argument	dstw		1087625	4					
ANR	1089481	Identifier	dstw		1087625	0					
ANR	1089482	Argument	src1		1087625	5					
ANR	1089483	Identifier	src1		1087625	0					
ANR	1089484	Argument	src1w		1087625	6					
ANR	1089485	Identifier	src1w		1087625	0					
ANR	1089486	Argument	src2		1087625	7					
ANR	1089487	Identifier	src2		1087625	0					
ANR	1089488	Argument	src2w		1087625	8					
ANR	1089489	Identifier	src2w		1087625	0					
ANR	1089490	ReturnStatement	return SLJIT_SUCCESS ;	1656:1:55957:55977	1087625	12	True				
ANR	1089491	Identifier	SLJIT_SUCCESS		1087625	0					
ANR	1089492	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1087625	1					
ANR	1089493	Identifier	sljit_emit_op2		1087625	2					
ANR	1089494	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1087625	3					
ANR	1089495	Parameter	struct sljit_compiler * compiler	1451:49:47828:47858	1087625	0	True				
ANR	1089496	ParameterType	struct sljit_compiler *		1087625	0					
ANR	1089497	Identifier	compiler		1087625	1					
ANR	1089498	Parameter	sljit_si op	1451:82:47861:47871	1087625	1	True				
ANR	1089499	ParameterType	sljit_si		1087625	0					
ANR	1089500	Identifier	op		1087625	1					
ANR	1089501	Parameter	sljit_si dst	1452:1:47875:47886	1087625	2	True				
ANR	1089502	ParameterType	sljit_si		1087625	0					
ANR	1089503	Identifier	dst		1087625	1					
ANR	1089504	Parameter	sljit_sw dstw	1452:15:47889:47901	1087625	3	True				
ANR	1089505	ParameterType	sljit_sw		1087625	0					
ANR	1089506	Identifier	dstw		1087625	1					
ANR	1089507	Parameter	sljit_si src1	1453:1:47905:47917	1087625	4	True				
ANR	1089508	ParameterType	sljit_si		1087625	0					
ANR	1089509	Identifier	src1		1087625	1					
ANR	1089510	Parameter	sljit_sw src1w	1453:16:47920:47933	1087625	5	True				
ANR	1089511	ParameterType	sljit_sw		1087625	0					
ANR	1089512	Identifier	src1w		1087625	1					
ANR	1089513	Parameter	sljit_si src2	1454:1:47937:47949	1087625	6	True				
ANR	1089514	ParameterType	sljit_si		1087625	0					
ANR	1089515	Identifier	src2		1087625	1					
ANR	1089516	Parameter	sljit_sw src2w	1454:16:47952:47965	1087625	7	True				
ANR	1089517	ParameterType	sljit_sw		1087625	0					
ANR	1089518	Identifier	src2w		1087625	1					
ANR	1089519	CFGEntryNode	ENTRY		1087625		True				
ANR	1089520	CFGExitNode	EXIT		1087625		True				
ANR	1089521	Symbol	SLJIT_AND		1087625						
ANR	1089522	Symbol	TMP_REG2		1087625						
ANR	1089523	Symbol	* compiler		1087625						
ANR	1089524	Symbol	TEST_UL_IMM		1087625						
ANR	1089525	Symbol	GET_OPCODE		1087625						
ANR	1089526	Symbol	TEST_SH_IMM		1087625						
ANR	1089527	Symbol	SLJIT_SUBC		1087625						
ANR	1089528	Symbol	SLJIT_IMM		1087625						
ANR	1089529	Symbol	SLJIT_KEEP_FLAGS		1087625						
ANR	1089530	Symbol	TEST_ADD_IMM		1087625						
ANR	1089531	Symbol	SLJIT_MUL		1087625						
ANR	1089532	Symbol	INT_DATA		1087625						
ANR	1089533	Symbol	MTXER		1087625						
ANR	1089534	Symbol	emit_op		1087625						
ANR	1089535	Symbol	ALT_SET_FLAGS		1087625						
ANR	1089536	Symbol	check_sljit_emit_op2		1087625						
ANR	1089537	Symbol	SLJIT_SUB		1087625						
ANR	1089538	Symbol	ALT_SIGN_EXT		1087625						
ANR	1089539	Symbol	src1w		1087625						
ANR	1089540	Symbol	dst		1087625						
ANR	1089541	Symbol	SLJIT_SET_O		1087625						
ANR	1089542	Symbol	TEST_SL_IMM		1087625						
ANR	1089543	Symbol	flags		1087625						
ANR	1089544	Symbol	SLJIT_SET_C		1087625						
ANR	1089545	Symbol	SLJIT_ADD		1087625						
ANR	1089546	Symbol	SLJIT_ADDC		1087625						
ANR	1089547	Symbol	TEST_UH_IMM		1087625						
ANR	1089548	Symbol	SLJIT_SET_E		1087625						
ANR	1089549	Symbol	GET_FLAGS		1087625						
ANR	1089550	Symbol	S		1087625						
ANR	1089551	Symbol	ALT_FORM1		1087625						
ANR	1089552	Symbol	ALT_FORM2		1087625						
ANR	1089553	Symbol	SLJIT_SET_S		1087625						
ANR	1089554	Symbol	ALT_FORM3		1087625						
ANR	1089555	Symbol	ALT_FORM4		1087625						
ANR	1089556	Symbol	compiler -> imm		1087625						
ANR	1089557	Symbol	ALT_FORM5		1087625						
ANR	1089558	Symbol	compiler		1087625						
ANR	1089559	Symbol	ALT_FORM6		1087625						
ANR	1089560	Symbol	SLJIT_SET_U		1087625						
ANR	1089561	Symbol	TEST_UI_IMM		1087625						
ANR	1089562	Symbol	src2w		1087625						
ANR	1089563	Symbol	op		1087625						
ANR	1089564	Symbol	push_inst		1087625						
ANR	1089565	Symbol	SLJIT_INT_OP		1087625						
ANR	1089566	Symbol	SLJIT_SUCCESS		1087625						
ANR	1089567	Symbol	SIGNED_DATA		1087625						
ANR	1089568	Symbol	SLJIT_UNUSED		1087625						
ANR	1089569	Symbol	src1		1087625						
ANR	1089570	Symbol	TMP_ZERO		1087625						
ANR	1089571	Symbol	src2		1087625						
ANR	1089572	Symbol	dstw		1087625						
ANR	1089573	Symbol	ALT_KEEP_CACHE		1087625						
ANR	1089574	Function	sljit_get_register_index	1659:0:55982:56134							
ANR	1089575	FunctionDef	sljit_get_register_index (sljit_si reg)		1089574	0					
ANR	1089576	CompoundStatement		1660:0:56055:56134	1089574	0					
ANR	1089577	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1661:1:56058:56110	1089574	0	True				
ANR	1089578	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1089574	0					
ANR	1089579	Callee	CHECK_REG_INDEX		1089574	0					
ANR	1089580	Identifier	CHECK_REG_INDEX		1089574	0					
ANR	1089581	ArgumentList	check_sljit_get_register_index ( reg )		1089574	1					
ANR	1089582	Argument	check_sljit_get_register_index ( reg )		1089574	0					
ANR	1089583	CallExpression	check_sljit_get_register_index ( reg )		1089574	0					
ANR	1089584	Callee	check_sljit_get_register_index		1089574	0					
ANR	1089585	Identifier	check_sljit_get_register_index		1089574	0					
ANR	1089586	ArgumentList	reg		1089574	1					
ANR	1089587	Argument	reg		1089574	0					
ANR	1089588	Identifier	reg		1089574	0					
ANR	1089589	ReturnStatement	return reg_map [ reg ] ;	1662:1:56113:56132	1089574	1	True				
ANR	1089590	ArrayIndexing	reg_map [ reg ]		1089574	0					
ANR	1089591	Identifier	reg_map		1089574	0					
ANR	1089592	Identifier	reg		1089574	1					
ANR	1089593	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1089574	1					
ANR	1089594	Identifier	sljit_get_register_index		1089574	2					
ANR	1089595	ParameterList	sljit_si reg		1089574	3					
ANR	1089596	Parameter	sljit_si reg	1659:59:56041:56052	1089574	0	True				
ANR	1089597	ParameterType	sljit_si		1089574	0					
ANR	1089598	Identifier	reg		1089574	1					
ANR	1089599	CFGEntryNode	ENTRY		1089574		True				
ANR	1089600	CFGExitNode	EXIT		1089574		True				
ANR	1089601	Symbol	reg		1089574						
ANR	1089602	Symbol	reg_map		1089574						
ANR	1089603	Symbol	* reg_map		1089574						
ANR	1089604	Symbol	* reg		1089574						
ANR	1089605	Symbol	check_sljit_get_register_index		1089574						
ANR	1089606	Function	sljit_get_float_register_index	1665:0:56137:56292							
ANR	1089607	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1089606	0					
ANR	1089608	CompoundStatement		1666:0:56216:56292	1089606	0					
ANR	1089609	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1667:1:56219:56277	1089606	0	True				
ANR	1089610	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1089606	0					
ANR	1089611	Callee	CHECK_REG_INDEX		1089606	0					
ANR	1089612	Identifier	CHECK_REG_INDEX		1089606	0					
ANR	1089613	ArgumentList	check_sljit_get_float_register_index ( reg )		1089606	1					
ANR	1089614	Argument	check_sljit_get_float_register_index ( reg )		1089606	0					
ANR	1089615	CallExpression	check_sljit_get_float_register_index ( reg )		1089606	0					
ANR	1089616	Callee	check_sljit_get_float_register_index		1089606	0					
ANR	1089617	Identifier	check_sljit_get_float_register_index		1089606	0					
ANR	1089618	ArgumentList	reg		1089606	1					
ANR	1089619	Argument	reg		1089606	0					
ANR	1089620	Identifier	reg		1089606	0					
ANR	1089621	ReturnStatement	return reg ;	1668:1:56280:56290	1089606	1	True				
ANR	1089622	Identifier	reg		1089606	0					
ANR	1089623	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1089606	1					
ANR	1089624	Identifier	sljit_get_float_register_index		1089606	2					
ANR	1089625	ParameterList	sljit_si reg		1089606	3					
ANR	1089626	Parameter	sljit_si reg	1665:65:56202:56213	1089606	0	True				
ANR	1089627	ParameterType	sljit_si		1089606	0					
ANR	1089628	Identifier	reg		1089606	1					
ANR	1089629	CFGEntryNode	ENTRY		1089606		True				
ANR	1089630	CFGExitNode	EXIT		1089606		True				
ANR	1089631	Symbol	reg		1089606						
ANR	1089632	Symbol	check_sljit_get_float_register_index		1089606						
ANR	1089633	Function	sljit_emit_op_custom	1671:0:56295:56557							
ANR	1089634	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1089633	0					
ANR	1089635	CompoundStatement		1673:0:56418:56557	1089633	0					
ANR	1089636	ExpressionStatement	CHECK_ERROR ( )	1674:1:56421:56434	1089633	0	True				
ANR	1089637	CallExpression	CHECK_ERROR ( )		1089633	0					
ANR	1089638	Callee	CHECK_ERROR		1089633	0					
ANR	1089639	Identifier	CHECK_ERROR		1089633	0					
ANR	1089640	ArgumentList			1089633	1					
ANR	1089641	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1675:1:56437:56499	1089633	1	True				
ANR	1089642	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1089633	0					
ANR	1089643	Callee	CHECK		1089633	0					
ANR	1089644	Identifier	CHECK		1089633	0					
ANR	1089645	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1089633	1					
ANR	1089646	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1089633	0					
ANR	1089647	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1089633	0					
ANR	1089648	Callee	check_sljit_emit_op_custom		1089633	0					
ANR	1089649	Identifier	check_sljit_emit_op_custom		1089633	0					
ANR	1089650	ArgumentList	compiler		1089633	1					
ANR	1089651	Argument	compiler		1089633	0					
ANR	1089652	Identifier	compiler		1089633	0					
ANR	1089653	Argument	instruction		1089633	1					
ANR	1089654	Identifier	instruction		1089633	0					
ANR	1089655	Argument	size		1089633	2					
ANR	1089656	Identifier	size		1089633	0					
ANR	1089657	ReturnStatement	"return push_inst ( compiler , * ( sljit_ins * ) instruction ) ;"	1677:1:56503:56555	1089633	2	True				
ANR	1089658	CallExpression	"push_inst ( compiler , * ( sljit_ins * ) instruction )"		1089633	0					
ANR	1089659	Callee	push_inst		1089633	0					
ANR	1089660	Identifier	push_inst		1089633	0					
ANR	1089661	ArgumentList	compiler		1089633	1					
ANR	1089662	Argument	compiler		1089633	0					
ANR	1089663	Identifier	compiler		1089633	0					
ANR	1089664	Argument	* ( sljit_ins * ) instruction		1089633	1					
ANR	1089665	UnaryOperationExpression	* ( sljit_ins * ) instruction		1089633	0					
ANR	1089666	UnaryOperator	*		1089633	0					
ANR	1089667	CastExpression	( sljit_ins * ) instruction		1089633	1					
ANR	1089668	CastTarget	sljit_ins *		1089633	0					
ANR	1089669	Identifier	instruction		1089633	1					
ANR	1089670	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1089633	1					
ANR	1089671	Identifier	sljit_emit_op_custom		1089633	2					
ANR	1089672	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1089633	3					
ANR	1089673	Parameter	struct sljit_compiler * compiler	1671:55:56350:56380	1089633	0	True				
ANR	1089674	ParameterType	struct sljit_compiler *		1089633	0					
ANR	1089675	Identifier	compiler		1089633	1					
ANR	1089676	Parameter	void * instruction	1672:1:56384:56400	1089633	1	True				
ANR	1089677	ParameterType	void *		1089633	0					
ANR	1089678	Identifier	instruction		1089633	1					
ANR	1089679	Parameter	sljit_si size	1672:20:56403:56415	1089633	2	True				
ANR	1089680	ParameterType	sljit_si		1089633	0					
ANR	1089681	Identifier	size		1089633	1					
ANR	1089682	CFGEntryNode	ENTRY		1089633		True				
ANR	1089683	CFGExitNode	EXIT		1089633		True				
ANR	1089684	Symbol	push_inst		1089633						
ANR	1089685	Symbol	size		1089633						
ANR	1089686	Symbol	* instruction		1089633						
ANR	1089687	Symbol	* ( sljit_ins * ) instruction		1089633						
ANR	1089688	Symbol	instruction		1089633						
ANR	1089689	Symbol	check_sljit_emit_op_custom		1089633						
ANR	1089690	Symbol	compiler		1089633						
ANR	1089691	Function	sljit_is_fpu_available	1684:0:56789:56969							
ANR	1089692	FunctionDef	sljit_is_fpu_available ()		1089691	0					
ANR	1089693	CompoundStatement		1685:0:56852:56969	1089691	0					
ANR	1089694	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1687:1:56885:56914	1089691	0	True				
ANR	1089695	Identifier	SLJIT_IS_FPU_AVAILABLE		1089691	0					
ANR	1089696	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1089691	1					
ANR	1089697	Identifier	sljit_is_fpu_available		1089691	2					
ANR	1089698	ParameterList			1089691	3					
ANR	1089699	CFGEntryNode	ENTRY		1089691		True				
ANR	1089700	CFGExitNode	EXIT		1089691		True				
ANR	1089701	Symbol	SLJIT_IS_FPU_AVAILABLE		1089691						
ANR	1089702	Function	sljit_emit_fop1_convw_fromd	1712:0:57619:59769							
ANR	1089703	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1089702	0					
ANR	1089704	CompoundStatement		1715:0:57782:59769	1089702	0					
ANR	1089705	IfStatement	if ( src & SLJIT_MEM )		1089702	0					
ANR	1089706	Condition	src & SLJIT_MEM	1716:5:57789:57803	1089702	0	True				
ANR	1089707	BitAndExpression	src & SLJIT_MEM		1089702	0		&			
ANR	1089708	Identifier	src		1089702	0					
ANR	1089709	Identifier	SLJIT_MEM		1089702	1					
ANR	1089710	CompoundStatement		2:22:23:23	1089702	1					
ANR	1089711	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1718:2:57898:57990	1089702	0	True				
ANR	1089712	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1089702	0					
ANR	1089713	Callee	FAIL_IF		1089702	0					
ANR	1089714	Identifier	FAIL_IF		1089702	0					
ANR	1089715	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1089702	1					
ANR	1089716	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1089702	0					
ANR	1089717	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1089702	0					
ANR	1089718	Callee	emit_op_mem2		1089702	0					
ANR	1089719	Identifier	emit_op_mem2		1089702	0					
ANR	1089720	ArgumentList	compiler		1089702	1					
ANR	1089721	Argument	compiler		1089702	0					
ANR	1089722	Identifier	compiler		1089702	0					
ANR	1089723	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1089702	1					
ANR	1089724	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1089702	0		|			
ANR	1089725	CallExpression	FLOAT_DATA ( op )		1089702	0					
ANR	1089726	Callee	FLOAT_DATA		1089702	0					
ANR	1089727	Identifier	FLOAT_DATA		1089702	0					
ANR	1089728	ArgumentList	op		1089702	1					
ANR	1089729	Argument	op		1089702	0					
ANR	1089730	Identifier	op		1089702	0					
ANR	1089731	Identifier	LOAD_DATA		1089702	1					
ANR	1089732	Argument	TMP_FREG1		1089702	2					
ANR	1089733	Identifier	TMP_FREG1		1089702	0					
ANR	1089734	Argument	src		1089702	3					
ANR	1089735	Identifier	src		1089702	0					
ANR	1089736	Argument	srcw		1089702	4					
ANR	1089737	Identifier	srcw		1089702	0					
ANR	1089738	Argument	dst		1089702	5					
ANR	1089739	Identifier	dst		1089702	0					
ANR	1089740	Argument	dstw		1089702	6					
ANR	1089741	Identifier	dstw		1089702	0					
ANR	1089742	ExpressionStatement	src = TMP_FREG1	1719:2:57994:58009	1089702	1	True				
ANR	1089743	AssignmentExpression	src = TMP_FREG1		1089702	0		=			
ANR	1089744	Identifier	src		1089702	0					
ANR	1089745	Identifier	TMP_FREG1		1089702	1					
ANR	1089746	ExpressionStatement	op = GET_OPCODE ( op )	1723:1:58073:58092	1089702	1	True				
ANR	1089747	AssignmentExpression	op = GET_OPCODE ( op )		1089702	0		=			
ANR	1089748	Identifier	op		1089702	0					
ANR	1089749	CallExpression	GET_OPCODE ( op )		1089702	1					
ANR	1089750	Callee	GET_OPCODE		1089702	0					
ANR	1089751	Identifier	GET_OPCODE		1089702	0					
ANR	1089752	ArgumentList	op		1089702	1					
ANR	1089753	Argument	op		1089702	0					
ANR	1089754	Identifier	op		1089702	0					
ANR	1089755	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) ) )"	1724:1:58095:58194	1089702	2	True				
ANR	1089756	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) ) )"		1089702	0					
ANR	1089757	Callee	FAIL_IF		1089702	0					
ANR	1089758	Identifier	FAIL_IF		1089702	0					
ANR	1089759	ArgumentList	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1089702	1					
ANR	1089760	Argument	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1089702	0					
ANR	1089761	CallExpression	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1089702	0					
ANR	1089762	Callee	push_inst		1089702	0					
ANR	1089763	Identifier	push_inst		1089702	0					
ANR	1089764	ArgumentList	compiler		1089702	1					
ANR	1089765	Argument	compiler		1089702	0					
ANR	1089766	Identifier	compiler		1089702	0					
ANR	1089767	Argument	( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src )		1089702	1					
ANR	1089768	InclusiveOrExpression	( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src )		1089702	0		|			
ANR	1089769	ConditionalExpression	op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ		1089702	0					
ANR	1089770	Condition	op == SLJIT_CONVI_FROMD		1089702	0					
ANR	1089771	EqualityExpression	op == SLJIT_CONVI_FROMD		1089702	0		==			
ANR	1089772	Identifier	op		1089702	0					
ANR	1089773	Identifier	SLJIT_CONVI_FROMD		1089702	1					
ANR	1089774	Identifier	FCTIWZ		1089702	1					
ANR	1089775	Identifier	FCTIDZ		1089702	2					
ANR	1089776	InclusiveOrExpression	FD ( TMP_FREG1 ) | FB ( src )		1089702	1		|			
ANR	1089777	CallExpression	FD ( TMP_FREG1 )		1089702	0					
ANR	1089778	Callee	FD		1089702	0					
ANR	1089779	Identifier	FD		1089702	0					
ANR	1089780	ArgumentList	TMP_FREG1		1089702	1					
ANR	1089781	Argument	TMP_FREG1		1089702	0					
ANR	1089782	Identifier	TMP_FREG1		1089702	0					
ANR	1089783	CallExpression	FB ( src )		1089702	1					
ANR	1089784	Callee	FB		1089702	0					
ANR	1089785	Identifier	FB		1089702	0					
ANR	1089786	ArgumentList	src		1089702	1					
ANR	1089787	Argument	src		1089702	0					
ANR	1089788	Identifier	src		1089702	0					
ANR	1089789	IfStatement	if ( dst == SLJIT_UNUSED )		1089702	3					
ANR	1089790	Condition	dst == SLJIT_UNUSED	1726:5:58202:58220	1089702	0	True				
ANR	1089791	EqualityExpression	dst == SLJIT_UNUSED		1089702	0		==			
ANR	1089792	Identifier	dst		1089702	0					
ANR	1089793	Identifier	SLJIT_UNUSED		1089702	1					
ANR	1089794	ReturnStatement	return SLJIT_SUCCESS ;	1727:2:58225:58245	1089702	1	True				
ANR	1089795	Identifier	SLJIT_SUCCESS		1089702	0					
ANR	1089796	IfStatement	if ( op == SLJIT_CONVW_FROMD )		1089702	4					
ANR	1089797	Condition	op == SLJIT_CONVW_FROMD	1729:5:58253:58275	1089702	0	True				
ANR	1089798	EqualityExpression	op == SLJIT_CONVW_FROMD		1089702	0		==			
ANR	1089799	Identifier	op		1089702	0					
ANR	1089800	Identifier	SLJIT_CONVW_FROMD		1089702	1					
ANR	1089801	CompoundStatement		15:30:495:495	1089702	1					
ANR	1089802	IfStatement	if ( FAST_IS_REG ( dst ) )		1089702	0					
ANR	1089803	Condition	FAST_IS_REG ( dst )	1730:6:58286:58301	1089702	0	True				
ANR	1089804	CallExpression	FAST_IS_REG ( dst )		1089702	0					
ANR	1089805	Callee	FAST_IS_REG		1089702	0					
ANR	1089806	Identifier	FAST_IS_REG		1089702	0					
ANR	1089807	ArgumentList	dst		1089702	1					
ANR	1089808	Argument	dst		1089702	0					
ANR	1089809	Identifier	dst		1089702	0					
ANR	1089810	CompoundStatement		16:24:521:521	1089702	1					
ANR	1089811	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) )"	1731:3:58309:58414	1089702	0	True				
ANR	1089812	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) )"		1089702	0					
ANR	1089813	Callee	FAIL_IF		1089702	0					
ANR	1089814	Identifier	FAIL_IF		1089702	0					
ANR	1089815	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1089702	1					
ANR	1089816	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1089702	0					
ANR	1089817	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1089702	0					
ANR	1089818	Callee	emit_op_mem2		1089702	0					
ANR	1089819	Identifier	emit_op_mem2		1089702	0					
ANR	1089820	ArgumentList	compiler		1089702	1					
ANR	1089821	Argument	compiler		1089702	0					
ANR	1089822	Identifier	compiler		1089702	0					
ANR	1089823	Argument	DOUBLE_DATA		1089702	1					
ANR	1089824	Identifier	DOUBLE_DATA		1089702	0					
ANR	1089825	Argument	TMP_FREG1		1089702	2					
ANR	1089826	Identifier	TMP_FREG1		1089702	0					
ANR	1089827	Argument	SLJIT_MEM1 ( SLJIT_SP )		1089702	3					
ANR	1089828	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1089702	0					
ANR	1089829	Callee	SLJIT_MEM1		1089702	0					
ANR	1089830	Identifier	SLJIT_MEM1		1089702	0					
ANR	1089831	ArgumentList	SLJIT_SP		1089702	1					
ANR	1089832	Argument	SLJIT_SP		1089702	0					
ANR	1089833	Identifier	SLJIT_SP		1089702	0					
ANR	1089834	Argument	FLOAT_TMP_MEM_OFFSET		1089702	4					
ANR	1089835	Identifier	FLOAT_TMP_MEM_OFFSET		1089702	0					
ANR	1089836	Argument	0		1089702	5					
ANR	1089837	PrimaryExpression	0		1089702	0					
ANR	1089838	Argument	0		1089702	6					
ANR	1089839	PrimaryExpression	0		1089702	0					
ANR	1089840	ReturnStatement	"return emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) ;"	1732:3:58419:58526	1089702	1	True				
ANR	1089841	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1089702	0					
ANR	1089842	Callee	emit_op_mem2		1089702	0					
ANR	1089843	Identifier	emit_op_mem2		1089702	0					
ANR	1089844	ArgumentList	compiler		1089702	1					
ANR	1089845	Argument	compiler		1089702	0					
ANR	1089846	Identifier	compiler		1089702	0					
ANR	1089847	Argument	WORD_DATA | LOAD_DATA		1089702	1					
ANR	1089848	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1089702	0		|			
ANR	1089849	Identifier	WORD_DATA		1089702	0					
ANR	1089850	Identifier	LOAD_DATA		1089702	1					
ANR	1089851	Argument	dst		1089702	2					
ANR	1089852	Identifier	dst		1089702	0					
ANR	1089853	Argument	SLJIT_MEM1 ( SLJIT_SP )		1089702	3					
ANR	1089854	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1089702	0					
ANR	1089855	Callee	SLJIT_MEM1		1089702	0					
ANR	1089856	Identifier	SLJIT_MEM1		1089702	0					
ANR	1089857	ArgumentList	SLJIT_SP		1089702	1					
ANR	1089858	Argument	SLJIT_SP		1089702	0					
ANR	1089859	Identifier	SLJIT_SP		1089702	0					
ANR	1089860	Argument	FLOAT_TMP_MEM_OFFSET		1089702	4					
ANR	1089861	Identifier	FLOAT_TMP_MEM_OFFSET		1089702	0					
ANR	1089862	Argument	0		1089702	5					
ANR	1089863	PrimaryExpression	0		1089702	0					
ANR	1089864	Argument	0		1089702	6					
ANR	1089865	PrimaryExpression	0		1089702	0					
ANR	1089866	ReturnStatement	"return emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1734:2:58534:58604	1089702	1	True				
ANR	1089867	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 )"		1089702	0					
ANR	1089868	Callee	emit_op_mem2		1089702	0					
ANR	1089869	Identifier	emit_op_mem2		1089702	0					
ANR	1089870	ArgumentList	compiler		1089702	1					
ANR	1089871	Argument	compiler		1089702	0					
ANR	1089872	Identifier	compiler		1089702	0					
ANR	1089873	Argument	DOUBLE_DATA		1089702	1					
ANR	1089874	Identifier	DOUBLE_DATA		1089702	0					
ANR	1089875	Argument	TMP_FREG1		1089702	2					
ANR	1089876	Identifier	TMP_FREG1		1089702	0					
ANR	1089877	Argument	dst		1089702	3					
ANR	1089878	Identifier	dst		1089702	0					
ANR	1089879	Argument	dstw		1089702	4					
ANR	1089880	Identifier	dstw		1089702	0					
ANR	1089881	Argument	0		1089702	5					
ANR	1089882	PrimaryExpression	0		1089702	0					
ANR	1089883	Argument	0		1089702	6					
ANR	1089884	PrimaryExpression	0		1089702	0					
ANR	1089885	IfStatement	if ( FAST_IS_REG ( dst ) )		1089702	5					
ANR	1089886	Condition	FAST_IS_REG ( dst )	1744:5:58745:58760	1089702	0	True				
ANR	1089887	CallExpression	FAST_IS_REG ( dst )		1089702	0					
ANR	1089888	Callee	FAST_IS_REG		1089702	0					
ANR	1089889	Identifier	FAST_IS_REG		1089702	0					
ANR	1089890	ArgumentList	dst		1089702	1					
ANR	1089891	Argument	dst		1089702	0					
ANR	1089892	Identifier	dst		1089702	0					
ANR	1089893	CompoundStatement		30:23:980:980	1089702	1					
ANR	1089894	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET ) )"	1745:2:58767:58832	1089702	0	True				
ANR	1089895	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET ) )"		1089702	0					
ANR	1089896	Callee	FAIL_IF		1089702	0					
ANR	1089897	Identifier	FAIL_IF		1089702	0					
ANR	1089898	ArgumentList	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1089702	1					
ANR	1089899	Argument	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1089702	0					
ANR	1089900	CallExpression	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1089702	0					
ANR	1089901	Callee	load_immediate		1089702	0					
ANR	1089902	Identifier	load_immediate		1089702	0					
ANR	1089903	ArgumentList	compiler		1089702	1					
ANR	1089904	Argument	compiler		1089702	0					
ANR	1089905	Identifier	compiler		1089702	0					
ANR	1089906	Argument	TMP_REG1		1089702	1					
ANR	1089907	Identifier	TMP_REG1		1089702	0					
ANR	1089908	Argument	FLOAT_TMP_MEM_OFFSET		1089702	2					
ANR	1089909	Identifier	FLOAT_TMP_MEM_OFFSET		1089702	0					
ANR	1089910	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) ) )"	1746:2:58836:58916	1089702	1	True				
ANR	1089911	CallExpression	"FAIL_IF ( push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) ) )"		1089702	0					
ANR	1089912	Callee	FAIL_IF		1089702	0					
ANR	1089913	Identifier	FAIL_IF		1089702	0					
ANR	1089914	ArgumentList	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1089702	1					
ANR	1089915	Argument	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1089702	0					
ANR	1089916	CallExpression	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1089702	0					
ANR	1089917	Callee	push_inst		1089702	0					
ANR	1089918	Identifier	push_inst		1089702	0					
ANR	1089919	ArgumentList	compiler		1089702	1					
ANR	1089920	Argument	compiler		1089702	0					
ANR	1089921	Identifier	compiler		1089702	0					
ANR	1089922	Argument	STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1089702	1					
ANR	1089923	InclusiveOrExpression	STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1089702	0		|			
ANR	1089924	Identifier	STFIWX		1089702	0					
ANR	1089925	InclusiveOrExpression	FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1089702	1		|			
ANR	1089926	CallExpression	FS ( TMP_FREG1 )		1089702	0					
ANR	1089927	Callee	FS		1089702	0					
ANR	1089928	Identifier	FS		1089702	0					
ANR	1089929	ArgumentList	TMP_FREG1		1089702	1					
ANR	1089930	Argument	TMP_FREG1		1089702	0					
ANR	1089931	Identifier	TMP_FREG1		1089702	0					
ANR	1089932	InclusiveOrExpression	A ( SLJIT_SP ) | B ( TMP_REG1 )		1089702	1		|			
ANR	1089933	CallExpression	A ( SLJIT_SP )		1089702	0					
ANR	1089934	Callee	A		1089702	0					
ANR	1089935	Identifier	A		1089702	0					
ANR	1089936	ArgumentList	SLJIT_SP		1089702	1					
ANR	1089937	Argument	SLJIT_SP		1089702	0					
ANR	1089938	Identifier	SLJIT_SP		1089702	0					
ANR	1089939	CallExpression	B ( TMP_REG1 )		1089702	1					
ANR	1089940	Callee	B		1089702	0					
ANR	1089941	Identifier	B		1089702	0					
ANR	1089942	ArgumentList	TMP_REG1		1089702	1					
ANR	1089943	Argument	TMP_REG1		1089702	0					
ANR	1089944	Identifier	TMP_REG1		1089702	0					
ANR	1089945	ReturnStatement	"return emit_op_mem2 ( compiler , INT_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) ;"	1747:2:58920:59026	1089702	2	True				
ANR	1089946	CallExpression	"emit_op_mem2 ( compiler , INT_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1089702	0					
ANR	1089947	Callee	emit_op_mem2		1089702	0					
ANR	1089948	Identifier	emit_op_mem2		1089702	0					
ANR	1089949	ArgumentList	compiler		1089702	1					
ANR	1089950	Argument	compiler		1089702	0					
ANR	1089951	Identifier	compiler		1089702	0					
ANR	1089952	Argument	INT_DATA | LOAD_DATA		1089702	1					
ANR	1089953	InclusiveOrExpression	INT_DATA | LOAD_DATA		1089702	0		|			
ANR	1089954	Identifier	INT_DATA		1089702	0					
ANR	1089955	Identifier	LOAD_DATA		1089702	1					
ANR	1089956	Argument	dst		1089702	2					
ANR	1089957	Identifier	dst		1089702	0					
ANR	1089958	Argument	SLJIT_MEM1 ( SLJIT_SP )		1089702	3					
ANR	1089959	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1089702	0					
ANR	1089960	Callee	SLJIT_MEM1		1089702	0					
ANR	1089961	Identifier	SLJIT_MEM1		1089702	0					
ANR	1089962	ArgumentList	SLJIT_SP		1089702	1					
ANR	1089963	Argument	SLJIT_SP		1089702	0					
ANR	1089964	Identifier	SLJIT_SP		1089702	0					
ANR	1089965	Argument	FLOAT_TMP_MEM_OFFSET		1089702	4					
ANR	1089966	Identifier	FLOAT_TMP_MEM_OFFSET		1089702	0					
ANR	1089967	Argument	0		1089702	5					
ANR	1089968	PrimaryExpression	0		1089702	0					
ANR	1089969	Argument	0		1089702	6					
ANR	1089970	PrimaryExpression	0		1089702	0					
ANR	1089971	ExpressionStatement	SLJIT_ASSERT ( dst & SLJIT_MEM )	1750:1:59033:59062	1089702	6	True				
ANR	1089972	CallExpression	SLJIT_ASSERT ( dst & SLJIT_MEM )		1089702	0					
ANR	1089973	Callee	SLJIT_ASSERT		1089702	0					
ANR	1089974	Identifier	SLJIT_ASSERT		1089702	0					
ANR	1089975	ArgumentList	dst & SLJIT_MEM		1089702	1					
ANR	1089976	Argument	dst & SLJIT_MEM		1089702	0					
ANR	1089977	BitAndExpression	dst & SLJIT_MEM		1089702	0		&			
ANR	1089978	Identifier	dst		1089702	0					
ANR	1089979	Identifier	SLJIT_MEM		1089702	1					
ANR	1089980	IfStatement	if ( dst & OFFS_REG_MASK )		1089702	7					
ANR	1089981	Condition	dst & OFFS_REG_MASK	1752:5:59070:59088	1089702	0	True				
ANR	1089982	BitAndExpression	dst & OFFS_REG_MASK		1089702	0		&			
ANR	1089983	Identifier	dst		1089702	0					
ANR	1089984	Identifier	OFFS_REG_MASK		1089702	1					
ANR	1089985	CompoundStatement		38:26:1308:1308	1089702	1					
ANR	1089986	ExpressionStatement	dstw &= 0x3	1753:2:59095:59106	1089702	0	True				
ANR	1089987	AssignmentExpression	dstw &= 0x3		1089702	0		&=			
ANR	1089988	Identifier	dstw		1089702	0					
ANR	1089989	PrimaryExpression	0x3		1089702	1					
ANR	1089990	IfStatement	if ( dstw )		1089702	1					
ANR	1089991	Condition	dstw	1754:6:59114:59117	1089702	0	True				
ANR	1089992	Identifier	dstw		1089702	0					
ANR	1089993	CompoundStatement		40:12:1337:1337	1089702	1					
ANR	1089994	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) ) )"	1756:3:59182:59287	1089702	0	True				
ANR	1089995	CallExpression	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) ) )"		1089702	0					
ANR	1089996	Callee	FAIL_IF		1089702	0					
ANR	1089997	Identifier	FAIL_IF		1089702	0					
ANR	1089998	ArgumentList	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1089702	1					
ANR	1089999	Argument	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1089702	0					
ANR	1090000	CallExpression	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1089702	0					
ANR	1090001	Callee	push_inst		1089702	0					
ANR	1090002	Identifier	push_inst		1089702	0					
ANR	1090003	ArgumentList	compiler		1089702	1					
ANR	1090004	Argument	compiler		1089702	0					
ANR	1090005	Identifier	compiler		1089702	0					
ANR	1090006	Argument	RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1089702	1					
ANR	1090007	InclusiveOrExpression	RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1089702	0		|			
ANR	1090008	Identifier	RLWINM		1089702	0					
ANR	1090009	InclusiveOrExpression	S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1089702	1		|			
ANR	1090010	CallExpression	S ( OFFS_REG ( dst ) )		1089702	0					
ANR	1090011	Callee	S		1089702	0					
ANR	1090012	Identifier	S		1089702	0					
ANR	1090013	ArgumentList	OFFS_REG ( dst )		1089702	1					
ANR	1090014	Argument	OFFS_REG ( dst )		1089702	0					
ANR	1090015	CallExpression	OFFS_REG ( dst )		1089702	0					
ANR	1090016	Callee	OFFS_REG		1089702	0					
ANR	1090017	Identifier	OFFS_REG		1089702	0					
ANR	1090018	ArgumentList	dst		1089702	1					
ANR	1090019	Argument	dst		1089702	0					
ANR	1090020	Identifier	dst		1089702	0					
ANR	1090021	InclusiveOrExpression	A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1089702	1		|			
ANR	1090022	CallExpression	A ( TMP_REG1 )		1089702	0					
ANR	1090023	Callee	A		1089702	0					
ANR	1090024	Identifier	A		1089702	0					
ANR	1090025	ArgumentList	TMP_REG1		1089702	1					
ANR	1090026	Argument	TMP_REG1		1089702	0					
ANR	1090027	Identifier	TMP_REG1		1089702	0					
ANR	1090028	InclusiveOrExpression	( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1089702	1		|			
ANR	1090029	ShiftExpression	dstw << 11		1089702	0		<<			
ANR	1090030	Identifier	dstw		1089702	0					
ANR	1090031	PrimaryExpression	11		1089702	1					
ANR	1090032	ShiftExpression	( 31 - dstw ) << 1		1089702	1		<<			
ANR	1090033	AdditiveExpression	31 - dstw		1089702	0		-			
ANR	1090034	PrimaryExpression	31		1089702	0					
ANR	1090035	Identifier	dstw		1089702	1					
ANR	1090036	PrimaryExpression	1		1089702	1					
ANR	1090037	ExpressionStatement	dstw = TMP_REG1	1760:3:59389:59404	1089702	1	True				
ANR	1090038	AssignmentExpression	dstw = TMP_REG1		1089702	0		=			
ANR	1090039	Identifier	dstw		1089702	0					
ANR	1090040	Identifier	TMP_REG1		1089702	1					
ANR	1090041	ElseStatement	else		1089702	0					
ANR	1090042	ExpressionStatement	dstw = OFFS_REG ( dst )	1763:3:59420:59440	1089702	0	True				
ANR	1090043	AssignmentExpression	dstw = OFFS_REG ( dst )		1089702	0		=			
ANR	1090044	Identifier	dstw		1089702	0					
ANR	1090045	CallExpression	OFFS_REG ( dst )		1089702	1					
ANR	1090046	Callee	OFFS_REG		1089702	0					
ANR	1090047	Identifier	OFFS_REG		1089702	0					
ANR	1090048	ArgumentList	dst		1089702	1					
ANR	1090049	Argument	dst		1089702	0					
ANR	1090050	Identifier	dst		1089702	0					
ANR	1090051	ElseStatement	else		1089702	0					
ANR	1090052	CompoundStatement		51:6:1668:1668	1089702	0					
ANR	1090053	IfStatement	if ( ( dst & REG_MASK ) && ! dstw )		1089702	0					
ANR	1090054	Condition	( dst & REG_MASK ) && ! dstw	1766:6:59459:59483	1089702	0	True				
ANR	1090055	AndExpression	( dst & REG_MASK ) && ! dstw		1089702	0		&&			
ANR	1090056	BitAndExpression	dst & REG_MASK		1089702	0		&			
ANR	1090057	Identifier	dst		1089702	0					
ANR	1090058	Identifier	REG_MASK		1089702	1					
ANR	1090059	UnaryOperationExpression	! dstw		1089702	1					
ANR	1090060	UnaryOperator	!		1089702	0					
ANR	1090061	Identifier	dstw		1089702	1					
ANR	1090062	CompoundStatement		52:33:1703:1703	1089702	1					
ANR	1090063	ExpressionStatement	dstw = dst & REG_MASK	1767:3:59491:59512	1089702	0	True				
ANR	1090064	AssignmentExpression	dstw = dst & REG_MASK		1089702	0		=			
ANR	1090065	Identifier	dstw		1089702	0					
ANR	1090066	BitAndExpression	dst & REG_MASK		1089702	1		&			
ANR	1090067	Identifier	dst		1089702	0					
ANR	1090068	Identifier	REG_MASK		1089702	1					
ANR	1090069	ExpressionStatement	dst = 0	1768:3:59517:59524	1089702	1	True				
ANR	1090070	AssignmentExpression	dst = 0		1089702	0		=			
ANR	1090071	Identifier	dst		1089702	0					
ANR	1090072	PrimaryExpression	0		1089702	1					
ANR	1090073	ElseStatement	else		1089702	0					
ANR	1090074	CompoundStatement		56:7:1754:1754	1089702	0					
ANR	1090075	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , dstw ) )"	1772:3:59607:59656	1089702	0	True				
ANR	1090076	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , dstw ) )"		1089702	0					
ANR	1090077	Callee	FAIL_IF		1089702	0					
ANR	1090078	Identifier	FAIL_IF		1089702	0					
ANR	1090079	ArgumentList	"load_immediate ( compiler , TMP_REG1 , dstw )"		1089702	1					
ANR	1090080	Argument	"load_immediate ( compiler , TMP_REG1 , dstw )"		1089702	0					
ANR	1090081	CallExpression	"load_immediate ( compiler , TMP_REG1 , dstw )"		1089702	0					
ANR	1090082	Callee	load_immediate		1089702	0					
ANR	1090083	Identifier	load_immediate		1089702	0					
ANR	1090084	ArgumentList	compiler		1089702	1					
ANR	1090085	Argument	compiler		1089702	0					
ANR	1090086	Identifier	compiler		1089702	0					
ANR	1090087	Argument	TMP_REG1		1089702	1					
ANR	1090088	Identifier	TMP_REG1		1089702	0					
ANR	1090089	Argument	dstw		1089702	2					
ANR	1090090	Identifier	dstw		1089702	0					
ANR	1090091	ExpressionStatement	dstw = TMP_REG1	1773:3:59661:59676	1089702	1	True				
ANR	1090092	AssignmentExpression	dstw = TMP_REG1		1089702	0		=			
ANR	1090093	Identifier	dstw		1089702	0					
ANR	1090094	Identifier	TMP_REG1		1089702	1					
ANR	1090095	ReturnStatement	"return push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw ) ) ;"	1777:1:59687:59767	1089702	8	True				
ANR	1090096	CallExpression	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw ) )"		1089702	0					
ANR	1090097	Callee	push_inst		1089702	0					
ANR	1090098	Identifier	push_inst		1089702	0					
ANR	1090099	ArgumentList	compiler		1089702	1					
ANR	1090100	Argument	compiler		1089702	0					
ANR	1090101	Identifier	compiler		1089702	0					
ANR	1090102	Argument	STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1089702	1					
ANR	1090103	InclusiveOrExpression	STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1089702	0		|			
ANR	1090104	Identifier	STFIWX		1089702	0					
ANR	1090105	InclusiveOrExpression	FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1089702	1		|			
ANR	1090106	CallExpression	FS ( TMP_FREG1 )		1089702	0					
ANR	1090107	Callee	FS		1089702	0					
ANR	1090108	Identifier	FS		1089702	0					
ANR	1090109	ArgumentList	TMP_FREG1		1089702	1					
ANR	1090110	Argument	TMP_FREG1		1089702	0					
ANR	1090111	Identifier	TMP_FREG1		1089702	0					
ANR	1090112	InclusiveOrExpression	A ( dst & REG_MASK ) | B ( dstw )		1089702	1		|			
ANR	1090113	CallExpression	A ( dst & REG_MASK )		1089702	0					
ANR	1090114	Callee	A		1089702	0					
ANR	1090115	Identifier	A		1089702	0					
ANR	1090116	ArgumentList	dst & REG_MASK		1089702	1					
ANR	1090117	Argument	dst & REG_MASK		1089702	0					
ANR	1090118	BitAndExpression	dst & REG_MASK		1089702	0		&			
ANR	1090119	Identifier	dst		1089702	0					
ANR	1090120	Identifier	REG_MASK		1089702	1					
ANR	1090121	CallExpression	B ( dstw )		1089702	1					
ANR	1090122	Callee	B		1089702	0					
ANR	1090123	Identifier	B		1089702	0					
ANR	1090124	ArgumentList	dstw		1089702	1					
ANR	1090125	Argument	dstw		1089702	0					
ANR	1090126	Identifier	dstw		1089702	0					
ANR	1090127	ReturnType	static SLJIT_INLINE sljit_si		1089702	1					
ANR	1090128	Identifier	sljit_emit_fop1_convw_fromd		1089702	2					
ANR	1090129	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1089702	3					
ANR	1090130	Parameter	struct sljit_compiler * compiler	1712:57:57676:57706	1089702	0	True				
ANR	1090131	ParameterType	struct sljit_compiler *		1089702	0					
ANR	1090132	Identifier	compiler		1089702	1					
ANR	1090133	Parameter	sljit_si op	1712:90:57709:57719	1089702	1	True				
ANR	1090134	ParameterType	sljit_si		1089702	0					
ANR	1090135	Identifier	op		1089702	1					
ANR	1090136	Parameter	sljit_si dst	1713:1:57723:57734	1089702	2	True				
ANR	1090137	ParameterType	sljit_si		1089702	0					
ANR	1090138	Identifier	dst		1089702	1					
ANR	1090139	Parameter	sljit_sw dstw	1713:15:57737:57749	1089702	3	True				
ANR	1090140	ParameterType	sljit_sw		1089702	0					
ANR	1090141	Identifier	dstw		1089702	1					
ANR	1090142	Parameter	sljit_si src	1714:1:57753:57764	1089702	4	True				
ANR	1090143	ParameterType	sljit_si		1089702	0					
ANR	1090144	Identifier	src		1089702	1					
ANR	1090145	Parameter	sljit_sw srcw	1714:15:57767:57779	1089702	5	True				
ANR	1090146	ParameterType	sljit_sw		1089702	0					
ANR	1090147	Identifier	srcw		1089702	1					
ANR	1090148	CFGEntryNode	ENTRY		1089702		True				
ANR	1090149	CFGExitNode	EXIT		1089702		True				
ANR	1090150	Symbol	A		1089702						
ANR	1090151	Symbol	FCTIDZ		1089702						
ANR	1090152	Symbol	TMP_REG1		1089702						
ANR	1090153	Symbol	B		1089702						
ANR	1090154	Symbol	dst		1089702						
ANR	1090155	Symbol	LOAD_DATA		1089702						
ANR	1090156	Symbol	FLOAT_DATA		1089702						
ANR	1090157	Symbol	TMP_FREG1		1089702						
ANR	1090158	Symbol	SLJIT_MEM		1089702						
ANR	1090159	Symbol	FS		1089702						
ANR	1090160	Symbol	SLJIT_SP		1089702						
ANR	1090161	Symbol	RLWINM		1089702						
ANR	1090162	Symbol	GET_OPCODE		1089702						
ANR	1090163	Symbol	SLJIT_CONVI_FROMD		1089702						
ANR	1090164	Symbol	S		1089702						
ANR	1090165	Symbol	load_immediate		1089702						
ANR	1090166	Symbol	INT_DATA		1089702						
ANR	1090167	Symbol	FLOAT_TMP_MEM_OFFSET		1089702						
ANR	1090168	Symbol	compiler		1089702						
ANR	1090169	Symbol	WORD_DATA		1089702						
ANR	1090170	Symbol	FCTIWZ		1089702						
ANR	1090171	Symbol	op		1089702						
ANR	1090172	Symbol	push_inst		1089702						
ANR	1090173	Symbol	REG_MASK		1089702						
ANR	1090174	Symbol	FAST_IS_REG		1089702						
ANR	1090175	Symbol	src		1089702						
ANR	1090176	Symbol	srcw		1089702						
ANR	1090177	Symbol	STFIWX		1089702						
ANR	1090178	Symbol	OFFS_REG_MASK		1089702						
ANR	1090179	Symbol	emit_op_mem2		1089702						
ANR	1090180	Symbol	SLJIT_SUCCESS		1089702						
ANR	1090181	Symbol	SLJIT_MEM1		1089702						
ANR	1090182	Symbol	SLJIT_CONVW_FROMD		1089702						
ANR	1090183	Symbol	SLJIT_UNUSED		1089702						
ANR	1090184	Symbol	DOUBLE_DATA		1089702						
ANR	1090185	Symbol	OFFS_REG		1089702						
ANR	1090186	Symbol	FB		1089702						
ANR	1090187	Symbol	dstw		1089702						
ANR	1090188	Symbol	FD		1089702						
ANR	1090189	Function	sljit_emit_fop1_convd_fromw	1780:0:59772:63348							
ANR	1090190	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1090189	0					
ANR	1090191	CompoundStatement		1783:0:59935:63348	1090189	0					
ANR	1090192	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	1786:1:59996:60047	1090189	0	True				
ANR	1090193	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1090189	0					
ANR	1090194	IdentifierDeclType	sljit_si		1090189	0					
ANR	1090195	Identifier	dst_r		1090189	1					
ANR	1090196	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1090189	2		=			
ANR	1090197	Identifier	dst_r		1090189	0					
ANR	1090198	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1090189	1					
ANR	1090199	Condition	FAST_IS_REG ( dst )		1090189	0					
ANR	1090200	CallExpression	FAST_IS_REG ( dst )		1090189	0					
ANR	1090201	Callee	FAST_IS_REG		1090189	0					
ANR	1090202	Identifier	FAST_IS_REG		1090189	0					
ANR	1090203	ArgumentList	dst		1090189	1					
ANR	1090204	Argument	dst		1090189	0					
ANR	1090205	Identifier	dst		1090189	0					
ANR	1090206	Identifier	dst		1090189	1					
ANR	1090207	Identifier	TMP_FREG1		1090189	2					
ANR	1090208	IfStatement	if ( src & SLJIT_IMM )		1090189	1					
ANR	1090209	Condition	src & SLJIT_IMM	1788:5:60055:60069	1090189	0	True				
ANR	1090210	BitAndExpression	src & SLJIT_IMM		1090189	0		&			
ANR	1090211	Identifier	src		1090189	0					
ANR	1090212	Identifier	SLJIT_IMM		1090189	1					
ANR	1090213	CompoundStatement		6:22:136:136	1090189	1					
ANR	1090214	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1090189	0					
ANR	1090215	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1789:6:60080:60114	1090189	0	True				
ANR	1090216	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1090189	0		==			
ANR	1090217	CallExpression	GET_OPCODE ( op )		1090189	0					
ANR	1090218	Callee	GET_OPCODE		1090189	0					
ANR	1090219	Identifier	GET_OPCODE		1090189	0					
ANR	1090220	ArgumentList	op		1090189	1					
ANR	1090221	Argument	op		1090189	0					
ANR	1090222	Identifier	op		1090189	0					
ANR	1090223	Identifier	SLJIT_CONVD_FROMI		1090189	1					
ANR	1090224	ExpressionStatement	srcw = ( sljit_si ) srcw	1790:3:60120:60141	1090189	1	True				
ANR	1090225	AssignmentExpression	srcw = ( sljit_si ) srcw		1090189	0		=			
ANR	1090226	Identifier	srcw		1090189	0					
ANR	1090227	CastExpression	( sljit_si ) srcw		1090189	1					
ANR	1090228	CastTarget	sljit_si		1090189	0					
ANR	1090229	Identifier	srcw		1090189	1					
ANR	1090230	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1791:2:60145:60194	1090189	1	True				
ANR	1090231	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1090189	0					
ANR	1090232	Callee	FAIL_IF		1090189	0					
ANR	1090233	Identifier	FAIL_IF		1090189	0					
ANR	1090234	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1090189	1					
ANR	1090235	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1090189	0					
ANR	1090236	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1090189	0					
ANR	1090237	Callee	load_immediate		1090189	0					
ANR	1090238	Identifier	load_immediate		1090189	0					
ANR	1090239	ArgumentList	compiler		1090189	1					
ANR	1090240	Argument	compiler		1090189	0					
ANR	1090241	Identifier	compiler		1090189	0					
ANR	1090242	Argument	TMP_REG1		1090189	1					
ANR	1090243	Identifier	TMP_REG1		1090189	0					
ANR	1090244	Argument	srcw		1090189	2					
ANR	1090245	Identifier	srcw		1090189	0					
ANR	1090246	ExpressionStatement	src = TMP_REG1	1792:2:60198:60212	1090189	2	True				
ANR	1090247	AssignmentExpression	src = TMP_REG1		1090189	0		=			
ANR	1090248	Identifier	src		1090189	0					
ANR	1090249	Identifier	TMP_REG1		1090189	1					
ANR	1090250	ElseStatement	else		1090189	0					
ANR	1090251	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1090189	0					
ANR	1090252	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1794:10:60227:60261	1090189	0	True				
ANR	1090253	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1090189	0		==			
ANR	1090254	CallExpression	GET_OPCODE ( op )		1090189	0					
ANR	1090255	Callee	GET_OPCODE		1090189	0					
ANR	1090256	Identifier	GET_OPCODE		1090189	0					
ANR	1090257	ArgumentList	op		1090189	1					
ANR	1090258	Argument	op		1090189	0					
ANR	1090259	Identifier	op		1090189	0					
ANR	1090260	Identifier	SLJIT_CONVD_FROMI		1090189	1					
ANR	1090261	CompoundStatement		12:47:328:328	1090189	1					
ANR	1090262	IfStatement	if ( FAST_IS_REG ( src ) )		1090189	0					
ANR	1090263	Condition	FAST_IS_REG ( src )	1795:6:60272:60287	1090189	0	True				
ANR	1090264	CallExpression	FAST_IS_REG ( src )		1090189	0					
ANR	1090265	Callee	FAST_IS_REG		1090189	0					
ANR	1090266	Identifier	FAST_IS_REG		1090189	0					
ANR	1090267	ArgumentList	src		1090189	1					
ANR	1090268	Argument	src		1090189	0					
ANR	1090269	Identifier	src		1090189	0					
ANR	1090270	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) ) )"	1796:3:60293:60351	1090189	1	True				
ANR	1090271	CallExpression	"FAIL_IF ( push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) ) )"		1090189	0					
ANR	1090272	Callee	FAIL_IF		1090189	0					
ANR	1090273	Identifier	FAIL_IF		1090189	0					
ANR	1090274	ArgumentList	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1090189	1					
ANR	1090275	Argument	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1090189	0					
ANR	1090276	CallExpression	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1090189	0					
ANR	1090277	Callee	push_inst		1090189	0					
ANR	1090278	Identifier	push_inst		1090189	0					
ANR	1090279	ArgumentList	compiler		1090189	1					
ANR	1090280	Argument	compiler		1090189	0					
ANR	1090281	Identifier	compiler		1090189	0					
ANR	1090282	Argument	EXTSW | S ( src ) | A ( TMP_REG1 )		1090189	1					
ANR	1090283	InclusiveOrExpression	EXTSW | S ( src ) | A ( TMP_REG1 )		1090189	0		|			
ANR	1090284	Identifier	EXTSW		1090189	0					
ANR	1090285	InclusiveOrExpression	S ( src ) | A ( TMP_REG1 )		1090189	1		|			
ANR	1090286	CallExpression	S ( src )		1090189	0					
ANR	1090287	Callee	S		1090189	0					
ANR	1090288	Identifier	S		1090189	0					
ANR	1090289	ArgumentList	src		1090189	1					
ANR	1090290	Argument	src		1090189	0					
ANR	1090291	Identifier	src		1090189	0					
ANR	1090292	CallExpression	A ( TMP_REG1 )		1090189	1					
ANR	1090293	Callee	A		1090189	0					
ANR	1090294	Identifier	A		1090189	0					
ANR	1090295	ArgumentList	TMP_REG1		1090189	1					
ANR	1090296	Argument	TMP_REG1		1090189	0					
ANR	1090297	Identifier	TMP_REG1		1090189	0					
ANR	1090298	ElseStatement	else		1090189	0					
ANR	1090299	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	1798:3:60363:60495	1090189	0	True				
ANR	1090300	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1090189	0					
ANR	1090301	Callee	FAIL_IF		1090189	0					
ANR	1090302	Identifier	FAIL_IF		1090189	0					
ANR	1090303	ArgumentList	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	1					
ANR	1090304	Argument	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	0					
ANR	1090305	CallExpression	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	0					
ANR	1090306	Callee	emit_op_mem2		1090189	0					
ANR	1090307	Identifier	emit_op_mem2		1090189	0					
ANR	1090308	ArgumentList	compiler		1090189	1					
ANR	1090309	Argument	compiler		1090189	0					
ANR	1090310	Identifier	compiler		1090189	0					
ANR	1090311	Argument	INT_DATA | SIGNED_DATA | LOAD_DATA		1090189	1					
ANR	1090312	InclusiveOrExpression	INT_DATA | SIGNED_DATA | LOAD_DATA		1090189	0		|			
ANR	1090313	Identifier	INT_DATA		1090189	0					
ANR	1090314	InclusiveOrExpression	SIGNED_DATA | LOAD_DATA		1090189	1		|			
ANR	1090315	Identifier	SIGNED_DATA		1090189	0					
ANR	1090316	Identifier	LOAD_DATA		1090189	1					
ANR	1090317	Argument	TMP_REG1		1090189	2					
ANR	1090318	Identifier	TMP_REG1		1090189	0					
ANR	1090319	Argument	src		1090189	3					
ANR	1090320	Identifier	src		1090189	0					
ANR	1090321	Argument	srcw		1090189	4					
ANR	1090322	Identifier	srcw		1090189	0					
ANR	1090323	Argument	SLJIT_MEM1 ( SLJIT_SP )		1090189	5					
ANR	1090324	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1090189	0					
ANR	1090325	Callee	SLJIT_MEM1		1090189	0					
ANR	1090326	Identifier	SLJIT_MEM1		1090189	0					
ANR	1090327	ArgumentList	SLJIT_SP		1090189	1					
ANR	1090328	Argument	SLJIT_SP		1090189	0					
ANR	1090329	Identifier	SLJIT_SP		1090189	0					
ANR	1090330	Argument	FLOAT_TMP_MEM_OFFSET		1090189	6					
ANR	1090331	Identifier	FLOAT_TMP_MEM_OFFSET		1090189	0					
ANR	1090332	ExpressionStatement	src = TMP_REG1	1799:2:60499:60513	1090189	1	True				
ANR	1090333	AssignmentExpression	src = TMP_REG1		1090189	0		=			
ANR	1090334	Identifier	src		1090189	0					
ANR	1090335	Identifier	TMP_REG1		1090189	1					
ANR	1090336	IfStatement	if ( FAST_IS_REG ( src ) )		1090189	2					
ANR	1090337	Condition	FAST_IS_REG ( src )	1802:5:60524:60539	1090189	0	True				
ANR	1090338	CallExpression	FAST_IS_REG ( src )		1090189	0					
ANR	1090339	Callee	FAST_IS_REG		1090189	0					
ANR	1090340	Identifier	FAST_IS_REG		1090189	0					
ANR	1090341	ArgumentList	src		1090189	1					
ANR	1090342	Argument	src		1090189	0					
ANR	1090343	Identifier	src		1090189	0					
ANR	1090344	CompoundStatement		20:23:606:606	1090189	1					
ANR	1090345	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	1803:2:60546:60681	1090189	0	True				
ANR	1090346	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1090189	0					
ANR	1090347	Callee	FAIL_IF		1090189	0					
ANR	1090348	Identifier	FAIL_IF		1090189	0					
ANR	1090349	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	1					
ANR	1090350	Argument	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	0					
ANR	1090351	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1090189	0					
ANR	1090352	Callee	emit_op_mem2		1090189	0					
ANR	1090353	Identifier	emit_op_mem2		1090189	0					
ANR	1090354	ArgumentList	compiler		1090189	1					
ANR	1090355	Argument	compiler		1090189	0					
ANR	1090356	Identifier	compiler		1090189	0					
ANR	1090357	Argument	WORD_DATA		1090189	1					
ANR	1090358	Identifier	WORD_DATA		1090189	0					
ANR	1090359	Argument	src		1090189	2					
ANR	1090360	Identifier	src		1090189	0					
ANR	1090361	Argument	SLJIT_MEM1 ( SLJIT_SP )		1090189	3					
ANR	1090362	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1090189	0					
ANR	1090363	Callee	SLJIT_MEM1		1090189	0					
ANR	1090364	Identifier	SLJIT_MEM1		1090189	0					
ANR	1090365	ArgumentList	SLJIT_SP		1090189	1					
ANR	1090366	Argument	SLJIT_SP		1090189	0					
ANR	1090367	Identifier	SLJIT_SP		1090189	0					
ANR	1090368	Argument	FLOAT_TMP_MEM_OFFSET		1090189	4					
ANR	1090369	Identifier	FLOAT_TMP_MEM_OFFSET		1090189	0					
ANR	1090370	Argument	SLJIT_MEM1 ( SLJIT_SP )		1090189	5					
ANR	1090371	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1090189	0					
ANR	1090372	Callee	SLJIT_MEM1		1090189	0					
ANR	1090373	Identifier	SLJIT_MEM1		1090189	0					
ANR	1090374	ArgumentList	SLJIT_SP		1090189	1					
ANR	1090375	Argument	SLJIT_SP		1090189	0					
ANR	1090376	Identifier	SLJIT_SP		1090189	0					
ANR	1090377	Argument	FLOAT_TMP_MEM_OFFSET		1090189	6					
ANR	1090378	Identifier	FLOAT_TMP_MEM_OFFSET		1090189	0					
ANR	1090379	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw ) )"	1804:2:60685:60807	1090189	1	True				
ANR	1090380	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw ) )"		1090189	0					
ANR	1090381	Callee	FAIL_IF		1090189	0					
ANR	1090382	Identifier	FAIL_IF		1090189	0					
ANR	1090383	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1090189	1					
ANR	1090384	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1090189	0					
ANR	1090385	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1090189	0					
ANR	1090386	Callee	emit_op_mem2		1090189	0					
ANR	1090387	Identifier	emit_op_mem2		1090189	0					
ANR	1090388	ArgumentList	compiler		1090189	1					
ANR	1090389	Argument	compiler		1090189	0					
ANR	1090390	Identifier	compiler		1090189	0					
ANR	1090391	Argument	DOUBLE_DATA | LOAD_DATA		1090189	1					
ANR	1090392	InclusiveOrExpression	DOUBLE_DATA | LOAD_DATA		1090189	0		|			
ANR	1090393	Identifier	DOUBLE_DATA		1090189	0					
ANR	1090394	Identifier	LOAD_DATA		1090189	1					
ANR	1090395	Argument	TMP_FREG1		1090189	2					
ANR	1090396	Identifier	TMP_FREG1		1090189	0					
ANR	1090397	Argument	SLJIT_MEM1 ( SLJIT_SP )		1090189	3					
ANR	1090398	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1090189	0					
ANR	1090399	Callee	SLJIT_MEM1		1090189	0					
ANR	1090400	Identifier	SLJIT_MEM1		1090189	0					
ANR	1090401	ArgumentList	SLJIT_SP		1090189	1					
ANR	1090402	Argument	SLJIT_SP		1090189	0					
ANR	1090403	Identifier	SLJIT_SP		1090189	0					
ANR	1090404	Argument	FLOAT_TMP_MEM_OFFSET		1090189	4					
ANR	1090405	Identifier	FLOAT_TMP_MEM_OFFSET		1090189	0					
ANR	1090406	Argument	dst		1090189	5					
ANR	1090407	Identifier	dst		1090189	0					
ANR	1090408	Argument	dstw		1090189	6					
ANR	1090409	Identifier	dstw		1090189	0					
ANR	1090410	ElseStatement	else		1090189	0					
ANR	1090411	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1807:2:60820:60909	1090189	0	True				
ANR	1090412	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1090189	0					
ANR	1090413	Callee	FAIL_IF		1090189	0					
ANR	1090414	Identifier	FAIL_IF		1090189	0					
ANR	1090415	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1090189	1					
ANR	1090416	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1090189	0					
ANR	1090417	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1090189	0					
ANR	1090418	Callee	emit_op_mem2		1090189	0					
ANR	1090419	Identifier	emit_op_mem2		1090189	0					
ANR	1090420	ArgumentList	compiler		1090189	1					
ANR	1090421	Argument	compiler		1090189	0					
ANR	1090422	Identifier	compiler		1090189	0					
ANR	1090423	Argument	DOUBLE_DATA | LOAD_DATA		1090189	1					
ANR	1090424	InclusiveOrExpression	DOUBLE_DATA | LOAD_DATA		1090189	0		|			
ANR	1090425	Identifier	DOUBLE_DATA		1090189	0					
ANR	1090426	Identifier	LOAD_DATA		1090189	1					
ANR	1090427	Argument	TMP_FREG1		1090189	2					
ANR	1090428	Identifier	TMP_FREG1		1090189	0					
ANR	1090429	Argument	src		1090189	3					
ANR	1090430	Identifier	src		1090189	0					
ANR	1090431	Argument	srcw		1090189	4					
ANR	1090432	Identifier	srcw		1090189	0					
ANR	1090433	Argument	dst		1090189	5					
ANR	1090434	Identifier	dst		1090189	0					
ANR	1090435	Argument	dstw		1090189	6					
ANR	1090436	Identifier	dstw		1090189	0					
ANR	1090437	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) ) )"	1809:1:60913:60976	1090189	3	True				
ANR	1090438	CallExpression	"FAIL_IF ( push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) ) )"		1090189	0					
ANR	1090439	Callee	FAIL_IF		1090189	0					
ANR	1090440	Identifier	FAIL_IF		1090189	0					
ANR	1090441	ArgumentList	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1090189	1					
ANR	1090442	Argument	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1090189	0					
ANR	1090443	CallExpression	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1090189	0					
ANR	1090444	Callee	push_inst		1090189	0					
ANR	1090445	Identifier	push_inst		1090189	0					
ANR	1090446	ArgumentList	compiler		1090189	1					
ANR	1090447	Argument	compiler		1090189	0					
ANR	1090448	Identifier	compiler		1090189	0					
ANR	1090449	Argument	FCFID | FD ( dst_r ) | FB ( TMP_FREG1 )		1090189	1					
ANR	1090450	InclusiveOrExpression	FCFID | FD ( dst_r ) | FB ( TMP_FREG1 )		1090189	0		|			
ANR	1090451	Identifier	FCFID		1090189	0					
ANR	1090452	InclusiveOrExpression	FD ( dst_r ) | FB ( TMP_FREG1 )		1090189	1		|			
ANR	1090453	CallExpression	FD ( dst_r )		1090189	0					
ANR	1090454	Callee	FD		1090189	0					
ANR	1090455	Identifier	FD		1090189	0					
ANR	1090456	ArgumentList	dst_r		1090189	1					
ANR	1090457	Argument	dst_r		1090189	0					
ANR	1090458	Identifier	dst_r		1090189	0					
ANR	1090459	CallExpression	FB ( TMP_FREG1 )		1090189	1					
ANR	1090460	Callee	FB		1090189	0					
ANR	1090461	Identifier	FB		1090189	0					
ANR	1090462	ArgumentList	TMP_FREG1		1090189	1					
ANR	1090463	Argument	TMP_FREG1		1090189	0					
ANR	1090464	Identifier	TMP_FREG1		1090189	0					
ANR	1090465	IfStatement	if ( dst & SLJIT_MEM )		1090189	4					
ANR	1090466	Condition	dst & SLJIT_MEM	1811:5:60984:60998	1090189	0	True				
ANR	1090467	BitAndExpression	dst & SLJIT_MEM		1090189	0		&			
ANR	1090468	Identifier	dst		1090189	0					
ANR	1090469	Identifier	SLJIT_MEM		1090189	1					
ANR	1090470	ReturnStatement	"return emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1812:2:61003:61076	1090189	1	True				
ANR	1090471	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 )"		1090189	0					
ANR	1090472	Callee	emit_op_mem2		1090189	0					
ANR	1090473	Identifier	emit_op_mem2		1090189	0					
ANR	1090474	ArgumentList	compiler		1090189	1					
ANR	1090475	Argument	compiler		1090189	0					
ANR	1090476	Identifier	compiler		1090189	0					
ANR	1090477	Argument	FLOAT_DATA ( op )		1090189	1					
ANR	1090478	CallExpression	FLOAT_DATA ( op )		1090189	0					
ANR	1090479	Callee	FLOAT_DATA		1090189	0					
ANR	1090480	Identifier	FLOAT_DATA		1090189	0					
ANR	1090481	ArgumentList	op		1090189	1					
ANR	1090482	Argument	op		1090189	0					
ANR	1090483	Identifier	op		1090189	0					
ANR	1090484	Argument	TMP_FREG1		1090189	2					
ANR	1090485	Identifier	TMP_FREG1		1090189	0					
ANR	1090486	Argument	dst		1090189	3					
ANR	1090487	Identifier	dst		1090189	0					
ANR	1090488	Argument	dstw		1090189	4					
ANR	1090489	Identifier	dstw		1090189	0					
ANR	1090490	Argument	0		1090189	5					
ANR	1090491	PrimaryExpression	0		1090189	0					
ANR	1090492	Argument	0		1090189	6					
ANR	1090493	PrimaryExpression	0		1090189	0					
ANR	1090494	IfStatement	if ( op & SLJIT_SINGLE_OP )		1090189	5					
ANR	1090495	Condition	op & SLJIT_SINGLE_OP	1813:5:61083:61102	1090189	0	True				
ANR	1090496	BitAndExpression	op & SLJIT_SINGLE_OP		1090189	0		&			
ANR	1090497	Identifier	op		1090189	0					
ANR	1090498	Identifier	SLJIT_SINGLE_OP		1090189	1					
ANR	1090499	ReturnStatement	"return push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( dst_r ) ) ;"	1814:2:61107:61163	1090189	1	True				
ANR	1090500	CallExpression	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( dst_r ) )"		1090189	0					
ANR	1090501	Callee	push_inst		1090189	0					
ANR	1090502	Identifier	push_inst		1090189	0					
ANR	1090503	ArgumentList	compiler		1090189	1					
ANR	1090504	Argument	compiler		1090189	0					
ANR	1090505	Identifier	compiler		1090189	0					
ANR	1090506	Argument	FRSP | FD ( dst_r ) | FB ( dst_r )		1090189	1					
ANR	1090507	InclusiveOrExpression	FRSP | FD ( dst_r ) | FB ( dst_r )		1090189	0		|			
ANR	1090508	Identifier	FRSP		1090189	0					
ANR	1090509	InclusiveOrExpression	FD ( dst_r ) | FB ( dst_r )		1090189	1		|			
ANR	1090510	CallExpression	FD ( dst_r )		1090189	0					
ANR	1090511	Callee	FD		1090189	0					
ANR	1090512	Identifier	FD		1090189	0					
ANR	1090513	ArgumentList	dst_r		1090189	1					
ANR	1090514	Argument	dst_r		1090189	0					
ANR	1090515	Identifier	dst_r		1090189	0					
ANR	1090516	CallExpression	FB ( dst_r )		1090189	1					
ANR	1090517	Callee	FB		1090189	0					
ANR	1090518	Identifier	FB		1090189	0					
ANR	1090519	ArgumentList	dst_r		1090189	1					
ANR	1090520	Argument	dst_r		1090189	0					
ANR	1090521	Identifier	dst_r		1090189	0					
ANR	1090522	ReturnStatement	return SLJIT_SUCCESS ;	1815:1:61166:61186	1090189	6	True				
ANR	1090523	Identifier	SLJIT_SUCCESS		1090189	0					
ANR	1090524	ReturnType	static SLJIT_INLINE sljit_si		1090189	1					
ANR	1090525	Identifier	sljit_emit_fop1_convd_fromw		1090189	2					
ANR	1090526	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1090189	3					
ANR	1090527	Parameter	struct sljit_compiler * compiler	1780:57:59829:59859	1090189	0	True				
ANR	1090528	ParameterType	struct sljit_compiler *		1090189	0					
ANR	1090529	Identifier	compiler		1090189	1					
ANR	1090530	Parameter	sljit_si op	1780:90:59862:59872	1090189	1	True				
ANR	1090531	ParameterType	sljit_si		1090189	0					
ANR	1090532	Identifier	op		1090189	1					
ANR	1090533	Parameter	sljit_si dst	1781:1:59876:59887	1090189	2	True				
ANR	1090534	ParameterType	sljit_si		1090189	0					
ANR	1090535	Identifier	dst		1090189	1					
ANR	1090536	Parameter	sljit_sw dstw	1781:15:59890:59902	1090189	3	True				
ANR	1090537	ParameterType	sljit_sw		1090189	0					
ANR	1090538	Identifier	dstw		1090189	1					
ANR	1090539	Parameter	sljit_si src	1782:1:59906:59917	1090189	4	True				
ANR	1090540	ParameterType	sljit_si		1090189	0					
ANR	1090541	Identifier	src		1090189	1					
ANR	1090542	Parameter	sljit_sw srcw	1782:15:59920:59932	1090189	5	True				
ANR	1090543	ParameterType	sljit_sw		1090189	0					
ANR	1090544	Identifier	srcw		1090189	1					
ANR	1090545	CFGEntryNode	ENTRY		1090189		True				
ANR	1090546	CFGExitNode	EXIT		1090189		True				
ANR	1090547	Symbol	A		1090189						
ANR	1090548	Symbol	TMP_REG1		1090189						
ANR	1090549	Symbol	dst		1090189						
ANR	1090550	Symbol	LOAD_DATA		1090189						
ANR	1090551	Symbol	FLOAT_DATA		1090189						
ANR	1090552	Symbol	TMP_FREG1		1090189						
ANR	1090553	Symbol	SLJIT_MEM		1090189						
ANR	1090554	Symbol	FRSP		1090189						
ANR	1090555	Symbol	SLJIT_SP		1090189						
ANR	1090556	Symbol	dst_r		1090189						
ANR	1090557	Symbol	GET_OPCODE		1090189						
ANR	1090558	Symbol	EXTSW		1090189						
ANR	1090559	Symbol	SLJIT_IMM		1090189						
ANR	1090560	Symbol	SLJIT_CONVD_FROMI		1090189						
ANR	1090561	Symbol	S		1090189						
ANR	1090562	Symbol	load_immediate		1090189						
ANR	1090563	Symbol	INT_DATA		1090189						
ANR	1090564	Symbol	FLOAT_TMP_MEM_OFFSET		1090189						
ANR	1090565	Symbol	compiler		1090189						
ANR	1090566	Symbol	WORD_DATA		1090189						
ANR	1090567	Symbol	op		1090189						
ANR	1090568	Symbol	push_inst		1090189						
ANR	1090569	Symbol	FAST_IS_REG		1090189						
ANR	1090570	Symbol	src		1090189						
ANR	1090571	Symbol	srcw		1090189						
ANR	1090572	Symbol	SLJIT_SINGLE_OP		1090189						
ANR	1090573	Symbol	emit_op_mem2		1090189						
ANR	1090574	Symbol	SLJIT_SUCCESS		1090189						
ANR	1090575	Symbol	SLJIT_MEM1		1090189						
ANR	1090576	Symbol	SIGNED_DATA		1090189						
ANR	1090577	Symbol	DOUBLE_DATA		1090189						
ANR	1090578	Symbol	FB		1090189						
ANR	1090579	Symbol	dstw		1090189						
ANR	1090580	Symbol	FCFID		1090189						
ANR	1090581	Symbol	FD		1090189						
ANR	1090582	Function	sljit_emit_fop1_cmp	1858:0:63351:63870							
ANR	1090583	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1090582	0					
ANR	1090584	CompoundStatement		1861:0:63510:63870	1090582	0					
ANR	1090585	IfStatement	if ( src1 & SLJIT_MEM )		1090582	0					
ANR	1090586	Condition	src1 & SLJIT_MEM	1862:5:63517:63532	1090582	0	True				
ANR	1090587	BitAndExpression	src1 & SLJIT_MEM		1090582	0		&			
ANR	1090588	Identifier	src1		1090582	0					
ANR	1090589	Identifier	SLJIT_MEM		1090582	1					
ANR	1090590	CompoundStatement		2:23:24:24	1090582	1					
ANR	1090591	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1863:2:63539:63635	1090582	0	True				
ANR	1090592	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1090582	0					
ANR	1090593	Callee	FAIL_IF		1090582	0					
ANR	1090594	Identifier	FAIL_IF		1090582	0					
ANR	1090595	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1090582	1					
ANR	1090596	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1090582	0					
ANR	1090597	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1090582	0					
ANR	1090598	Callee	emit_op_mem2		1090582	0					
ANR	1090599	Identifier	emit_op_mem2		1090582	0					
ANR	1090600	ArgumentList	compiler		1090582	1					
ANR	1090601	Argument	compiler		1090582	0					
ANR	1090602	Identifier	compiler		1090582	0					
ANR	1090603	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1090582	1					
ANR	1090604	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1090582	0		|			
ANR	1090605	CallExpression	FLOAT_DATA ( op )		1090582	0					
ANR	1090606	Callee	FLOAT_DATA		1090582	0					
ANR	1090607	Identifier	FLOAT_DATA		1090582	0					
ANR	1090608	ArgumentList	op		1090582	1					
ANR	1090609	Argument	op		1090582	0					
ANR	1090610	Identifier	op		1090582	0					
ANR	1090611	Identifier	LOAD_DATA		1090582	1					
ANR	1090612	Argument	TMP_FREG1		1090582	2					
ANR	1090613	Identifier	TMP_FREG1		1090582	0					
ANR	1090614	Argument	src1		1090582	3					
ANR	1090615	Identifier	src1		1090582	0					
ANR	1090616	Argument	src1w		1090582	4					
ANR	1090617	Identifier	src1w		1090582	0					
ANR	1090618	Argument	src2		1090582	5					
ANR	1090619	Identifier	src2		1090582	0					
ANR	1090620	Argument	src2w		1090582	6					
ANR	1090621	Identifier	src2w		1090582	0					
ANR	1090622	ExpressionStatement	src1 = TMP_FREG1	1864:2:63639:63655	1090582	1	True				
ANR	1090623	AssignmentExpression	src1 = TMP_FREG1		1090582	0		=			
ANR	1090624	Identifier	src1		1090582	0					
ANR	1090625	Identifier	TMP_FREG1		1090582	1					
ANR	1090626	IfStatement	if ( src2 & SLJIT_MEM )		1090582	1					
ANR	1090627	Condition	src2 & SLJIT_MEM	1867:5:63666:63681	1090582	0	True				
ANR	1090628	BitAndExpression	src2 & SLJIT_MEM		1090582	0		&			
ANR	1090629	Identifier	src2		1090582	0					
ANR	1090630	Identifier	SLJIT_MEM		1090582	1					
ANR	1090631	CompoundStatement		7:23:173:173	1090582	1					
ANR	1090632	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"	1868:2:63688:63777	1090582	0	True				
ANR	1090633	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"		1090582	0					
ANR	1090634	Callee	FAIL_IF		1090582	0					
ANR	1090635	Identifier	FAIL_IF		1090582	0					
ANR	1090636	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1090582	1					
ANR	1090637	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1090582	0					
ANR	1090638	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1090582	0					
ANR	1090639	Callee	emit_op_mem2		1090582	0					
ANR	1090640	Identifier	emit_op_mem2		1090582	0					
ANR	1090641	ArgumentList	compiler		1090582	1					
ANR	1090642	Argument	compiler		1090582	0					
ANR	1090643	Identifier	compiler		1090582	0					
ANR	1090644	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1090582	1					
ANR	1090645	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1090582	0		|			
ANR	1090646	CallExpression	FLOAT_DATA ( op )		1090582	0					
ANR	1090647	Callee	FLOAT_DATA		1090582	0					
ANR	1090648	Identifier	FLOAT_DATA		1090582	0					
ANR	1090649	ArgumentList	op		1090582	1					
ANR	1090650	Argument	op		1090582	0					
ANR	1090651	Identifier	op		1090582	0					
ANR	1090652	Identifier	LOAD_DATA		1090582	1					
ANR	1090653	Argument	TMP_FREG2		1090582	2					
ANR	1090654	Identifier	TMP_FREG2		1090582	0					
ANR	1090655	Argument	src2		1090582	3					
ANR	1090656	Identifier	src2		1090582	0					
ANR	1090657	Argument	src2w		1090582	4					
ANR	1090658	Identifier	src2w		1090582	0					
ANR	1090659	Argument	0		1090582	5					
ANR	1090660	PrimaryExpression	0		1090582	0					
ANR	1090661	Argument	0		1090582	6					
ANR	1090662	PrimaryExpression	0		1090582	0					
ANR	1090663	ExpressionStatement	src2 = TMP_FREG2	1869:2:63781:63797	1090582	1	True				
ANR	1090664	AssignmentExpression	src2 = TMP_FREG2		1090582	0		=			
ANR	1090665	Identifier	src2		1090582	0					
ANR	1090666	Identifier	TMP_FREG2		1090582	1					
ANR	1090667	ReturnStatement	"return push_inst ( compiler , FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 ) ) ;"	1872:1:63804:63868	1090582	2	True				
ANR	1090668	CallExpression	"push_inst ( compiler , FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 ) )"		1090582	0					
ANR	1090669	Callee	push_inst		1090582	0					
ANR	1090670	Identifier	push_inst		1090582	0					
ANR	1090671	ArgumentList	compiler		1090582	1					
ANR	1090672	Argument	compiler		1090582	0					
ANR	1090673	Identifier	compiler		1090582	0					
ANR	1090674	Argument	FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1090582	1					
ANR	1090675	InclusiveOrExpression	FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1090582	0		|			
ANR	1090676	Identifier	FCMPU		1090582	0					
ANR	1090677	InclusiveOrExpression	CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1090582	1		|			
ANR	1090678	CallExpression	CRD ( 4 )		1090582	0					
ANR	1090679	Callee	CRD		1090582	0					
ANR	1090680	Identifier	CRD		1090582	0					
ANR	1090681	ArgumentList	4		1090582	1					
ANR	1090682	Argument	4		1090582	0					
ANR	1090683	PrimaryExpression	4		1090582	0					
ANR	1090684	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1090582	1		|			
ANR	1090685	CallExpression	FA ( src1 )		1090582	0					
ANR	1090686	Callee	FA		1090582	0					
ANR	1090687	Identifier	FA		1090582	0					
ANR	1090688	ArgumentList	src1		1090582	1					
ANR	1090689	Argument	src1		1090582	0					
ANR	1090690	Identifier	src1		1090582	0					
ANR	1090691	CallExpression	FB ( src2 )		1090582	1					
ANR	1090692	Callee	FB		1090582	0					
ANR	1090693	Identifier	FB		1090582	0					
ANR	1090694	ArgumentList	src2		1090582	1					
ANR	1090695	Argument	src2		1090582	0					
ANR	1090696	Identifier	src2		1090582	0					
ANR	1090697	ReturnType	static SLJIT_INLINE sljit_si		1090582	1					
ANR	1090698	Identifier	sljit_emit_fop1_cmp		1090582	2					
ANR	1090699	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1090582	3					
ANR	1090700	Parameter	struct sljit_compiler * compiler	1858:49:63400:63430	1090582	0	True				
ANR	1090701	ParameterType	struct sljit_compiler *		1090582	0					
ANR	1090702	Identifier	compiler		1090582	1					
ANR	1090703	Parameter	sljit_si op	1858:82:63433:63443	1090582	1	True				
ANR	1090704	ParameterType	sljit_si		1090582	0					
ANR	1090705	Identifier	op		1090582	1					
ANR	1090706	Parameter	sljit_si src1	1859:1:63447:63459	1090582	2	True				
ANR	1090707	ParameterType	sljit_si		1090582	0					
ANR	1090708	Identifier	src1		1090582	1					
ANR	1090709	Parameter	sljit_sw src1w	1859:16:63462:63475	1090582	3	True				
ANR	1090710	ParameterType	sljit_sw		1090582	0					
ANR	1090711	Identifier	src1w		1090582	1					
ANR	1090712	Parameter	sljit_si src2	1860:1:63479:63491	1090582	4	True				
ANR	1090713	ParameterType	sljit_si		1090582	0					
ANR	1090714	Identifier	src2		1090582	1					
ANR	1090715	Parameter	sljit_sw src2w	1860:16:63494:63507	1090582	5	True				
ANR	1090716	ParameterType	sljit_sw		1090582	0					
ANR	1090717	Identifier	src2w		1090582	1					
ANR	1090718	CFGEntryNode	ENTRY		1090582		True				
ANR	1090719	CFGExitNode	EXIT		1090582		True				
ANR	1090720	Symbol	src2w		1090582						
ANR	1090721	Symbol	op		1090582						
ANR	1090722	Symbol	push_inst		1090582						
ANR	1090723	Symbol	TMP_FREG2		1090582						
ANR	1090724	Symbol	src1w		1090582						
ANR	1090725	Symbol	FLOAT_DATA		1090582						
ANR	1090726	Symbol	LOAD_DATA		1090582						
ANR	1090727	Symbol	TMP_FREG1		1090582						
ANR	1090728	Symbol	SLJIT_MEM		1090582						
ANR	1090729	Symbol	emit_op_mem2		1090582						
ANR	1090730	Symbol	FCMPU		1090582						
ANR	1090731	Symbol	CRD		1090582						
ANR	1090732	Symbol	src1		1090582						
ANR	1090733	Symbol	src2		1090582						
ANR	1090734	Symbol	FA		1090582						
ANR	1090735	Symbol	compiler		1090582						
ANR	1090736	Symbol	FB		1090582						
ANR	1090737	Function	sljit_emit_fop1	1875:0:63873:65210							
ANR	1090738	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1090737	0					
ANR	1090739	CompoundStatement		1878:0:64029:65210	1090737	0					
ANR	1090740	IdentifierDeclStatement	sljit_si dst_r ;	1879:1:64032:64046	1090737	0	True				
ANR	1090741	IdentifierDecl	dst_r		1090737	0					
ANR	1090742	IdentifierDeclType	sljit_si		1090737	0					
ANR	1090743	Identifier	dst_r		1090737	1					
ANR	1090744	ExpressionStatement	CHECK_ERROR ( )	1881:1:64050:64063	1090737	1	True				
ANR	1090745	CallExpression	CHECK_ERROR ( )		1090737	0					
ANR	1090746	Callee	CHECK_ERROR		1090737	0					
ANR	1090747	Identifier	CHECK_ERROR		1090737	0					
ANR	1090748	ArgumentList			1090737	1					
ANR	1090749	ExpressionStatement	compiler -> cache_arg = 0	1882:1:64066:64089	1090737	2	True				
ANR	1090750	AssignmentExpression	compiler -> cache_arg = 0		1090737	0		=			
ANR	1090751	PtrMemberAccess	compiler -> cache_arg		1090737	0					
ANR	1090752	Identifier	compiler		1090737	0					
ANR	1090753	Identifier	cache_arg		1090737	1					
ANR	1090754	PrimaryExpression	0		1090737	1					
ANR	1090755	ExpressionStatement	compiler -> cache_argw = 0	1883:1:64092:64116	1090737	3	True				
ANR	1090756	AssignmentExpression	compiler -> cache_argw = 0		1090737	0		=			
ANR	1090757	PtrMemberAccess	compiler -> cache_argw		1090737	0					
ANR	1090758	Identifier	compiler		1090737	0					
ANR	1090759	Identifier	cache_argw		1090737	1					
ANR	1090760	PrimaryExpression	0		1090737	1					
ANR	1090761	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 ) , float_transfer_bit_error )"	1885:1:64120:64218	1090737	4	True				
ANR	1090762	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 ) , float_transfer_bit_error )"		1090737	0					
ANR	1090763	Callee	SLJIT_COMPILE_ASSERT		1090737	0					
ANR	1090764	Identifier	SLJIT_COMPILE_ASSERT		1090737	0					
ANR	1090765	ArgumentList	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1090737	1					
ANR	1090766	Argument	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1090737	0					
ANR	1090767	AndExpression	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1090737	0		&&			
ANR	1090768	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1090737	0		==			
ANR	1090769	Identifier	SLJIT_SINGLE_OP		1090737	0					
ANR	1090770	PrimaryExpression	0x100		1090737	1					
ANR	1090771	UnaryOperationExpression	! ( DOUBLE_DATA & 0x4 )		1090737	1					
ANR	1090772	UnaryOperator	!		1090737	0					
ANR	1090773	BitAndExpression	DOUBLE_DATA & 0x4		1090737	1		&			
ANR	1090774	Identifier	DOUBLE_DATA		1090737	0					
ANR	1090775	PrimaryExpression	0x4		1090737	1					
ANR	1090776	Argument	float_transfer_bit_error		1090737	1					
ANR	1090777	Identifier	float_transfer_bit_error		1090737	0					
ANR	1090778	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1886:1:64221:64290	1090737	5	True				
ANR	1090779	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1090737	0					
ANR	1090780	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1090737	0					
ANR	1090781	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1090737	0					
ANR	1090782	ArgumentList	compiler		1090737	1					
ANR	1090783	Argument	compiler		1090737	0					
ANR	1090784	Identifier	compiler		1090737	0					
ANR	1090785	Argument	op		1090737	1					
ANR	1090786	Identifier	op		1090737	0					
ANR	1090787	Argument	dst		1090737	2					
ANR	1090788	Identifier	dst		1090737	0					
ANR	1090789	Argument	dstw		1090737	3					
ANR	1090790	Identifier	dstw		1090737	0					
ANR	1090791	Argument	src		1090737	4					
ANR	1090792	Identifier	src		1090737	0					
ANR	1090793	Argument	srcw		1090737	5					
ANR	1090794	Identifier	srcw		1090737	0					
ANR	1090795	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1090737	6					
ANR	1090796	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	1888:5:64298:64332	1090737	0	True				
ANR	1090797	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1090737	0		==			
ANR	1090798	CallExpression	GET_OPCODE ( op )		1090737	0					
ANR	1090799	Callee	GET_OPCODE		1090737	0					
ANR	1090800	Identifier	GET_OPCODE		1090737	0					
ANR	1090801	ArgumentList	op		1090737	1					
ANR	1090802	Argument	op		1090737	0					
ANR	1090803	Identifier	op		1090737	0					
ANR	1090804	Identifier	SLJIT_CONVD_FROMS		1090737	1					
ANR	1090805	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1889:2:64337:64358	1090737	1	True				
ANR	1090806	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1090737	0		^=			
ANR	1090807	Identifier	op		1090737	0					
ANR	1090808	Identifier	SLJIT_SINGLE_OP		1090737	1					
ANR	1090809	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1891:1:64362:64404	1090737	7	True				
ANR	1090810	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1090737	0		=			
ANR	1090811	Identifier	dst_r		1090737	0					
ANR	1090812	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1090737	1					
ANR	1090813	Condition	FAST_IS_REG ( dst )		1090737	0					
ANR	1090814	CallExpression	FAST_IS_REG ( dst )		1090737	0					
ANR	1090815	Callee	FAST_IS_REG		1090737	0					
ANR	1090816	Identifier	FAST_IS_REG		1090737	0					
ANR	1090817	ArgumentList	dst		1090737	1					
ANR	1090818	Argument	dst		1090737	0					
ANR	1090819	Identifier	dst		1090737	0					
ANR	1090820	Identifier	dst		1090737	1					
ANR	1090821	Identifier	TMP_FREG1		1090737	2					
ANR	1090822	IfStatement	if ( src & SLJIT_MEM )		1090737	8					
ANR	1090823	Condition	src & SLJIT_MEM	1893:5:64412:64426	1090737	0	True				
ANR	1090824	BitAndExpression	src & SLJIT_MEM		1090737	0		&			
ANR	1090825	Identifier	src		1090737	0					
ANR	1090826	Identifier	SLJIT_MEM		1090737	1					
ANR	1090827	CompoundStatement		16:22:399:399	1090737	1					
ANR	1090828	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"	1894:2:64433:64521	1090737	0	True				
ANR	1090829	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"		1090737	0					
ANR	1090830	Callee	FAIL_IF		1090737	0					
ANR	1090831	Identifier	FAIL_IF		1090737	0					
ANR	1090832	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1090737	1					
ANR	1090833	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1090737	0					
ANR	1090834	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1090737	0					
ANR	1090835	Callee	emit_op_mem2		1090737	0					
ANR	1090836	Identifier	emit_op_mem2		1090737	0					
ANR	1090837	ArgumentList	compiler		1090737	1					
ANR	1090838	Argument	compiler		1090737	0					
ANR	1090839	Identifier	compiler		1090737	0					
ANR	1090840	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1090737	1					
ANR	1090841	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1090737	0		|			
ANR	1090842	CallExpression	FLOAT_DATA ( op )		1090737	0					
ANR	1090843	Callee	FLOAT_DATA		1090737	0					
ANR	1090844	Identifier	FLOAT_DATA		1090737	0					
ANR	1090845	ArgumentList	op		1090737	1					
ANR	1090846	Argument	op		1090737	0					
ANR	1090847	Identifier	op		1090737	0					
ANR	1090848	Identifier	LOAD_DATA		1090737	1					
ANR	1090849	Argument	dst_r		1090737	2					
ANR	1090850	Identifier	dst_r		1090737	0					
ANR	1090851	Argument	src		1090737	3					
ANR	1090852	Identifier	src		1090737	0					
ANR	1090853	Argument	srcw		1090737	4					
ANR	1090854	Identifier	srcw		1090737	0					
ANR	1090855	Argument	dst		1090737	5					
ANR	1090856	Identifier	dst		1090737	0					
ANR	1090857	Argument	dstw		1090737	6					
ANR	1090858	Identifier	dstw		1090737	0					
ANR	1090859	ExpressionStatement	src = dst_r	1895:2:64525:64536	1090737	1	True				
ANR	1090860	AssignmentExpression	src = dst_r		1090737	0		=			
ANR	1090861	Identifier	src		1090737	0					
ANR	1090862	Identifier	dst_r		1090737	1					
ANR	1090863	SwitchStatement	switch ( GET_OPCODE ( op ) )		1090737	9					
ANR	1090864	Condition	GET_OPCODE ( op )	1898:9:64551:64564	1090737	0	True				
ANR	1090865	CallExpression	GET_OPCODE ( op )		1090737	0					
ANR	1090866	Callee	GET_OPCODE		1090737	0					
ANR	1090867	Identifier	GET_OPCODE		1090737	0					
ANR	1090868	ArgumentList	op		1090737	1					
ANR	1090869	Argument	op		1090737	0					
ANR	1090870	Identifier	op		1090737	0					
ANR	1090871	CompoundStatement		21:25:537:537	1090737	1					
ANR	1090872	Label	case SLJIT_CONVD_FROMS :	1899:1:64570:64592	1090737	0	True				
ANR	1090873	Identifier	SLJIT_CONVD_FROMS		1090737	0					
ANR	1090874	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1900:2:64596:64617	1090737	1	True				
ANR	1090875	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1090737	0		^=			
ANR	1090876	Identifier	op		1090737	0					
ANR	1090877	Identifier	SLJIT_SINGLE_OP		1090737	1					
ANR	1090878	IfStatement	if ( op & SLJIT_SINGLE_OP )		1090737	2					
ANR	1090879	Condition	op & SLJIT_SINGLE_OP	1901:6:64625:64644	1090737	0	True				
ANR	1090880	BitAndExpression	op & SLJIT_SINGLE_OP		1090737	0		&			
ANR	1090881	Identifier	op		1090737	0					
ANR	1090882	Identifier	SLJIT_SINGLE_OP		1090737	1					
ANR	1090883	CompoundStatement		24:28:617:617	1090737	1					
ANR	1090884	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) ) )"	1902:3:64652:64708	1090737	0	True				
ANR	1090885	CallExpression	"FAIL_IF ( push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) ) )"		1090737	0					
ANR	1090886	Callee	FAIL_IF		1090737	0					
ANR	1090887	Identifier	FAIL_IF		1090737	0					
ANR	1090888	ArgumentList	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1090737	1					
ANR	1090889	Argument	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090890	CallExpression	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090891	Callee	push_inst		1090737	0					
ANR	1090892	Identifier	push_inst		1090737	0					
ANR	1090893	ArgumentList	compiler		1090737	1					
ANR	1090894	Argument	compiler		1090737	0					
ANR	1090895	Identifier	compiler		1090737	0					
ANR	1090896	Argument	FRSP | FD ( dst_r ) | FB ( src )		1090737	1					
ANR	1090897	InclusiveOrExpression	FRSP | FD ( dst_r ) | FB ( src )		1090737	0		|			
ANR	1090898	Identifier	FRSP		1090737	0					
ANR	1090899	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1090737	1		|			
ANR	1090900	CallExpression	FD ( dst_r )		1090737	0					
ANR	1090901	Callee	FD		1090737	0					
ANR	1090902	Identifier	FD		1090737	0					
ANR	1090903	ArgumentList	dst_r		1090737	1					
ANR	1090904	Argument	dst_r		1090737	0					
ANR	1090905	Identifier	dst_r		1090737	0					
ANR	1090906	CallExpression	FB ( src )		1090737	1					
ANR	1090907	Callee	FB		1090737	0					
ANR	1090908	Identifier	FB		1090737	0					
ANR	1090909	ArgumentList	src		1090737	1					
ANR	1090910	Argument	src		1090737	0					
ANR	1090911	Identifier	src		1090737	0					
ANR	1090912	BreakStatement	break ;	1903:3:64713:64718	1090737	1	True				
ANR	1090913	Label	case SLJIT_DMOV :	1906:1:64747:64762	1090737	3	True				
ANR	1090914	Identifier	SLJIT_DMOV		1090737	0					
ANR	1090915	IfStatement	if ( src != dst_r )		1090737	4					
ANR	1090916	Condition	src != dst_r	1907:6:64770:64781	1090737	0	True				
ANR	1090917	EqualityExpression	src != dst_r		1090737	0		!=			
ANR	1090918	Identifier	src		1090737	0					
ANR	1090919	Identifier	dst_r		1090737	1					
ANR	1090920	CompoundStatement		30:20:754:754	1090737	1					
ANR	1090921	IfStatement	if ( dst_r != TMP_FREG1 )		1090737	0					
ANR	1090922	Condition	dst_r != TMP_FREG1	1908:7:64793:64810	1090737	0	True				
ANR	1090923	EqualityExpression	dst_r != TMP_FREG1		1090737	0		!=			
ANR	1090924	Identifier	dst_r		1090737	0					
ANR	1090925	Identifier	TMP_FREG1		1090737	1					
ANR	1090926	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) ) )"	1909:4:64817:64872	1090737	1	True				
ANR	1090927	CallExpression	"FAIL_IF ( push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) ) )"		1090737	0					
ANR	1090928	Callee	FAIL_IF		1090737	0					
ANR	1090929	Identifier	FAIL_IF		1090737	0					
ANR	1090930	ArgumentList	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1090737	1					
ANR	1090931	Argument	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090932	CallExpression	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090933	Callee	push_inst		1090737	0					
ANR	1090934	Identifier	push_inst		1090737	0					
ANR	1090935	ArgumentList	compiler		1090737	1					
ANR	1090936	Argument	compiler		1090737	0					
ANR	1090937	Identifier	compiler		1090737	0					
ANR	1090938	Argument	FMR | FD ( dst_r ) | FB ( src )		1090737	1					
ANR	1090939	InclusiveOrExpression	FMR | FD ( dst_r ) | FB ( src )		1090737	0		|			
ANR	1090940	Identifier	FMR		1090737	0					
ANR	1090941	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1090737	1		|			
ANR	1090942	CallExpression	FD ( dst_r )		1090737	0					
ANR	1090943	Callee	FD		1090737	0					
ANR	1090944	Identifier	FD		1090737	0					
ANR	1090945	ArgumentList	dst_r		1090737	1					
ANR	1090946	Argument	dst_r		1090737	0					
ANR	1090947	Identifier	dst_r		1090737	0					
ANR	1090948	CallExpression	FB ( src )		1090737	1					
ANR	1090949	Callee	FB		1090737	0					
ANR	1090950	Identifier	FB		1090737	0					
ANR	1090951	ArgumentList	src		1090737	1					
ANR	1090952	Argument	src		1090737	0					
ANR	1090953	Identifier	src		1090737	0					
ANR	1090954	ElseStatement	else		1090737	0					
ANR	1090955	ExpressionStatement	dst_r = src	1911:4:64886:64897	1090737	0	True				
ANR	1090956	AssignmentExpression	dst_r = src		1090737	0		=			
ANR	1090957	Identifier	dst_r		1090737	0					
ANR	1090958	Identifier	src		1090737	1					
ANR	1090959	BreakStatement	break ;	1913:2:64905:64910	1090737	5	True				
ANR	1090960	Label	case SLJIT_DNEG :	1914:1:64913:64928	1090737	6	True				
ANR	1090961	Identifier	SLJIT_DNEG		1090737	0					
ANR	1090962	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) ) )"	1915:2:64932:64988	1090737	7	True				
ANR	1090963	CallExpression	"FAIL_IF ( push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) ) )"		1090737	0					
ANR	1090964	Callee	FAIL_IF		1090737	0					
ANR	1090965	Identifier	FAIL_IF		1090737	0					
ANR	1090966	ArgumentList	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1090737	1					
ANR	1090967	Argument	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090968	CallExpression	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090969	Callee	push_inst		1090737	0					
ANR	1090970	Identifier	push_inst		1090737	0					
ANR	1090971	ArgumentList	compiler		1090737	1					
ANR	1090972	Argument	compiler		1090737	0					
ANR	1090973	Identifier	compiler		1090737	0					
ANR	1090974	Argument	FNEG | FD ( dst_r ) | FB ( src )		1090737	1					
ANR	1090975	InclusiveOrExpression	FNEG | FD ( dst_r ) | FB ( src )		1090737	0		|			
ANR	1090976	Identifier	FNEG		1090737	0					
ANR	1090977	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1090737	1		|			
ANR	1090978	CallExpression	FD ( dst_r )		1090737	0					
ANR	1090979	Callee	FD		1090737	0					
ANR	1090980	Identifier	FD		1090737	0					
ANR	1090981	ArgumentList	dst_r		1090737	1					
ANR	1090982	Argument	dst_r		1090737	0					
ANR	1090983	Identifier	dst_r		1090737	0					
ANR	1090984	CallExpression	FB ( src )		1090737	1					
ANR	1090985	Callee	FB		1090737	0					
ANR	1090986	Identifier	FB		1090737	0					
ANR	1090987	ArgumentList	src		1090737	1					
ANR	1090988	Argument	src		1090737	0					
ANR	1090989	Identifier	src		1090737	0					
ANR	1090990	BreakStatement	break ;	1916:2:64992:64997	1090737	8	True				
ANR	1090991	Label	case SLJIT_DABS :	1917:1:65000:65015	1090737	9	True				
ANR	1090992	Identifier	SLJIT_DABS		1090737	0					
ANR	1090993	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) ) )"	1918:2:65019:65075	1090737	10	True				
ANR	1090994	CallExpression	"FAIL_IF ( push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) ) )"		1090737	0					
ANR	1090995	Callee	FAIL_IF		1090737	0					
ANR	1090996	Identifier	FAIL_IF		1090737	0					
ANR	1090997	ArgumentList	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1090737	1					
ANR	1090998	Argument	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1090999	CallExpression	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1090737	0					
ANR	1091000	Callee	push_inst		1090737	0					
ANR	1091001	Identifier	push_inst		1090737	0					
ANR	1091002	ArgumentList	compiler		1090737	1					
ANR	1091003	Argument	compiler		1090737	0					
ANR	1091004	Identifier	compiler		1090737	0					
ANR	1091005	Argument	FABS | FD ( dst_r ) | FB ( src )		1090737	1					
ANR	1091006	InclusiveOrExpression	FABS | FD ( dst_r ) | FB ( src )		1090737	0		|			
ANR	1091007	Identifier	FABS		1090737	0					
ANR	1091008	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1090737	1		|			
ANR	1091009	CallExpression	FD ( dst_r )		1090737	0					
ANR	1091010	Callee	FD		1090737	0					
ANR	1091011	Identifier	FD		1090737	0					
ANR	1091012	ArgumentList	dst_r		1090737	1					
ANR	1091013	Argument	dst_r		1090737	0					
ANR	1091014	Identifier	dst_r		1090737	0					
ANR	1091015	CallExpression	FB ( src )		1090737	1					
ANR	1091016	Callee	FB		1090737	0					
ANR	1091017	Identifier	FB		1090737	0					
ANR	1091018	ArgumentList	src		1090737	1					
ANR	1091019	Argument	src		1090737	0					
ANR	1091020	Identifier	src		1090737	0					
ANR	1091021	BreakStatement	break ;	1919:2:65079:65084	1090737	11	True				
ANR	1091022	IfStatement	if ( dst & SLJIT_MEM )		1090737	10					
ANR	1091023	Condition	dst & SLJIT_MEM	1922:5:65095:65109	1090737	0	True				
ANR	1091024	BitAndExpression	dst & SLJIT_MEM		1090737	0		&			
ANR	1091025	Identifier	dst		1090737	0					
ANR	1091026	Identifier	SLJIT_MEM		1090737	1					
ANR	1091027	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"	1923:2:65114:65185	1090737	1	True				
ANR	1091028	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"		1090737	0					
ANR	1091029	Callee	FAIL_IF		1090737	0					
ANR	1091030	Identifier	FAIL_IF		1090737	0					
ANR	1091031	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1090737	1					
ANR	1091032	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1090737	0					
ANR	1091033	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1090737	0					
ANR	1091034	Callee	emit_op_mem2		1090737	0					
ANR	1091035	Identifier	emit_op_mem2		1090737	0					
ANR	1091036	ArgumentList	compiler		1090737	1					
ANR	1091037	Argument	compiler		1090737	0					
ANR	1091038	Identifier	compiler		1090737	0					
ANR	1091039	Argument	FLOAT_DATA ( op )		1090737	1					
ANR	1091040	CallExpression	FLOAT_DATA ( op )		1090737	0					
ANR	1091041	Callee	FLOAT_DATA		1090737	0					
ANR	1091042	Identifier	FLOAT_DATA		1090737	0					
ANR	1091043	ArgumentList	op		1090737	1					
ANR	1091044	Argument	op		1090737	0					
ANR	1091045	Identifier	op		1090737	0					
ANR	1091046	Argument	dst_r		1090737	2					
ANR	1091047	Identifier	dst_r		1090737	0					
ANR	1091048	Argument	dst		1090737	3					
ANR	1091049	Identifier	dst		1090737	0					
ANR	1091050	Argument	dstw		1090737	4					
ANR	1091051	Identifier	dstw		1090737	0					
ANR	1091052	Argument	0		1090737	5					
ANR	1091053	PrimaryExpression	0		1090737	0					
ANR	1091054	Argument	0		1090737	6					
ANR	1091055	PrimaryExpression	0		1090737	0					
ANR	1091056	ReturnStatement	return SLJIT_SUCCESS ;	1924:1:65188:65208	1090737	11	True				
ANR	1091057	Identifier	SLJIT_SUCCESS		1090737	0					
ANR	1091058	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1090737	1					
ANR	1091059	Identifier	sljit_emit_fop1		1090737	2					
ANR	1091060	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1090737	3					
ANR	1091061	Parameter	struct sljit_compiler * compiler	1875:50:63923:63953	1090737	0	True				
ANR	1091062	ParameterType	struct sljit_compiler *		1090737	0					
ANR	1091063	Identifier	compiler		1090737	1					
ANR	1091064	Parameter	sljit_si op	1875:83:63956:63966	1090737	1	True				
ANR	1091065	ParameterType	sljit_si		1090737	0					
ANR	1091066	Identifier	op		1090737	1					
ANR	1091067	Parameter	sljit_si dst	1876:1:63970:63981	1090737	2	True				
ANR	1091068	ParameterType	sljit_si		1090737	0					
ANR	1091069	Identifier	dst		1090737	1					
ANR	1091070	Parameter	sljit_sw dstw	1876:15:63984:63996	1090737	3	True				
ANR	1091071	ParameterType	sljit_sw		1090737	0					
ANR	1091072	Identifier	dstw		1090737	1					
ANR	1091073	Parameter	sljit_si src	1877:1:64000:64011	1090737	4	True				
ANR	1091074	ParameterType	sljit_si		1090737	0					
ANR	1091075	Identifier	src		1090737	1					
ANR	1091076	Parameter	sljit_sw srcw	1877:15:64014:64026	1090737	5	True				
ANR	1091077	ParameterType	sljit_sw		1090737	0					
ANR	1091078	Identifier	srcw		1090737	1					
ANR	1091079	CFGEntryNode	ENTRY		1090737		True				
ANR	1091080	CFGExitNode	EXIT		1090737		True				
ANR	1091081	Symbol	compiler -> cache_argw		1090737						
ANR	1091082	Symbol	dst		1090737						
ANR	1091083	Symbol	FLOAT_DATA		1090737						
ANR	1091084	Symbol	LOAD_DATA		1090737						
ANR	1091085	Symbol	TMP_FREG1		1090737						
ANR	1091086	Symbol	SLJIT_MEM		1090737						
ANR	1091087	Symbol	SLJIT_CONVD_FROMS		1090737						
ANR	1091088	Symbol	FRSP		1090737						
ANR	1091089	Symbol	FNEG		1090737						
ANR	1091090	Symbol	* compiler		1090737						
ANR	1091091	Symbol	dst_r		1090737						
ANR	1091092	Symbol	GET_OPCODE		1090737						
ANR	1091093	Symbol	float_transfer_bit_error		1090737						
ANR	1091094	Symbol	compiler		1090737						
ANR	1091095	Symbol	op		1090737						
ANR	1091096	Symbol	push_inst		1090737						
ANR	1091097	Symbol	FAST_IS_REG		1090737						
ANR	1091098	Symbol	src		1090737						
ANR	1091099	Symbol	srcw		1090737						
ANR	1091100	Symbol	compiler -> cache_arg		1090737						
ANR	1091101	Symbol	SLJIT_SINGLE_OP		1090737						
ANR	1091102	Symbol	emit_op_mem2		1090737						
ANR	1091103	Symbol	FMR		1090737						
ANR	1091104	Symbol	SLJIT_SUCCESS		1090737						
ANR	1091105	Symbol	FABS		1090737						
ANR	1091106	Symbol	DOUBLE_DATA		1090737						
ANR	1091107	Symbol	FB		1090737						
ANR	1091108	Symbol	dstw		1090737						
ANR	1091109	Symbol	FD		1090737						
ANR	1091110	Function	sljit_emit_fop2	1927:0:65213:67712							
ANR	1091111	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1091110	0					
ANR	1091112	CompoundStatement		1931:0:65403:67712	1091110	0					
ANR	1091113	IdentifierDeclStatement	"sljit_si dst_r , flags = 0 ;"	1932:1:65406:65431	1091110	0	True				
ANR	1091114	IdentifierDecl	dst_r		1091110	0					
ANR	1091115	IdentifierDeclType	sljit_si		1091110	0					
ANR	1091116	Identifier	dst_r		1091110	1					
ANR	1091117	IdentifierDecl	flags = 0		1091110	1					
ANR	1091118	IdentifierDeclType	sljit_si		1091110	0					
ANR	1091119	Identifier	flags		1091110	1					
ANR	1091120	AssignmentExpression	flags = 0		1091110	2		=			
ANR	1091121	Identifier	flags		1091110	0					
ANR	1091122	PrimaryExpression	0		1091110	1					
ANR	1091123	ExpressionStatement	CHECK_ERROR ( )	1934:1:65435:65448	1091110	1	True				
ANR	1091124	CallExpression	CHECK_ERROR ( )		1091110	0					
ANR	1091125	Callee	CHECK_ERROR		1091110	0					
ANR	1091126	Identifier	CHECK_ERROR		1091110	0					
ANR	1091127	ArgumentList			1091110	1					
ANR	1091128	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1935:1:65451:65530	1091110	2	True				
ANR	1091129	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1091110	0					
ANR	1091130	Callee	CHECK		1091110	0					
ANR	1091131	Identifier	CHECK		1091110	0					
ANR	1091132	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1091110	1					
ANR	1091133	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1091110	0					
ANR	1091134	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1091110	0					
ANR	1091135	Callee	check_sljit_emit_fop2		1091110	0					
ANR	1091136	Identifier	check_sljit_emit_fop2		1091110	0					
ANR	1091137	ArgumentList	compiler		1091110	1					
ANR	1091138	Argument	compiler		1091110	0					
ANR	1091139	Identifier	compiler		1091110	0					
ANR	1091140	Argument	op		1091110	1					
ANR	1091141	Identifier	op		1091110	0					
ANR	1091142	Argument	dst		1091110	2					
ANR	1091143	Identifier	dst		1091110	0					
ANR	1091144	Argument	dstw		1091110	3					
ANR	1091145	Identifier	dstw		1091110	0					
ANR	1091146	Argument	src1		1091110	4					
ANR	1091147	Identifier	src1		1091110	0					
ANR	1091148	Argument	src1w		1091110	5					
ANR	1091149	Identifier	src1w		1091110	0					
ANR	1091150	Argument	src2		1091110	6					
ANR	1091151	Identifier	src2		1091110	0					
ANR	1091152	Argument	src2w		1091110	7					
ANR	1091153	Identifier	src2w		1091110	0					
ANR	1091154	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1936:1:65533:65563	1091110	3	True				
ANR	1091155	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1091110	0					
ANR	1091156	Callee	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091157	Identifier	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091158	ArgumentList	dst		1091110	1					
ANR	1091159	Argument	dst		1091110	0					
ANR	1091160	Identifier	dst		1091110	0					
ANR	1091161	Argument	dstw		1091110	1					
ANR	1091162	Identifier	dstw		1091110	0					
ANR	1091163	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1937:1:65566:65598	1091110	4	True				
ANR	1091164	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1091110	0					
ANR	1091165	Callee	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091166	Identifier	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091167	ArgumentList	src1		1091110	1					
ANR	1091168	Argument	src1		1091110	0					
ANR	1091169	Identifier	src1		1091110	0					
ANR	1091170	Argument	src1w		1091110	1					
ANR	1091171	Identifier	src1w		1091110	0					
ANR	1091172	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1938:1:65601:65633	1091110	5	True				
ANR	1091173	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1091110	0					
ANR	1091174	Callee	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091175	Identifier	ADJUST_LOCAL_OFFSET		1091110	0					
ANR	1091176	ArgumentList	src2		1091110	1					
ANR	1091177	Argument	src2		1091110	0					
ANR	1091178	Identifier	src2		1091110	0					
ANR	1091179	Argument	src2w		1091110	1					
ANR	1091180	Identifier	src2w		1091110	0					
ANR	1091181	ExpressionStatement	compiler -> cache_arg = 0	1940:1:65637:65660	1091110	6	True				
ANR	1091182	AssignmentExpression	compiler -> cache_arg = 0		1091110	0		=			
ANR	1091183	PtrMemberAccess	compiler -> cache_arg		1091110	0					
ANR	1091184	Identifier	compiler		1091110	0					
ANR	1091185	Identifier	cache_arg		1091110	1					
ANR	1091186	PrimaryExpression	0		1091110	1					
ANR	1091187	ExpressionStatement	compiler -> cache_argw = 0	1941:1:65663:65687	1091110	7	True				
ANR	1091188	AssignmentExpression	compiler -> cache_argw = 0		1091110	0		=			
ANR	1091189	PtrMemberAccess	compiler -> cache_argw		1091110	0					
ANR	1091190	Identifier	compiler		1091110	0					
ANR	1091191	Identifier	cache_argw		1091110	1					
ANR	1091192	PrimaryExpression	0		1091110	1					
ANR	1091193	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG2	1943:1:65691:65733	1091110	8	True				
ANR	1091194	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG2		1091110	0		=			
ANR	1091195	Identifier	dst_r		1091110	0					
ANR	1091196	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG2		1091110	1					
ANR	1091197	Condition	FAST_IS_REG ( dst )		1091110	0					
ANR	1091198	CallExpression	FAST_IS_REG ( dst )		1091110	0					
ANR	1091199	Callee	FAST_IS_REG		1091110	0					
ANR	1091200	Identifier	FAST_IS_REG		1091110	0					
ANR	1091201	ArgumentList	dst		1091110	1					
ANR	1091202	Argument	dst		1091110	0					
ANR	1091203	Identifier	dst		1091110	0					
ANR	1091204	Identifier	dst		1091110	1					
ANR	1091205	Identifier	TMP_FREG2		1091110	2					
ANR	1091206	IfStatement	if ( src1 & SLJIT_MEM )		1091110	9					
ANR	1091207	Condition	src1 & SLJIT_MEM	1945:5:65741:65756	1091110	0	True				
ANR	1091208	BitAndExpression	src1 & SLJIT_MEM		1091110	0		&			
ANR	1091209	Identifier	src1		1091110	0					
ANR	1091210	Identifier	SLJIT_MEM		1091110	1					
ANR	1091211	CompoundStatement		15:23:355:355	1091110	1					
ANR	1091212	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w ) )"		1091110	0					
ANR	1091213	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"	1946:6:65767:65843	1091110	0	True				
ANR	1091214	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"		1091110	0					
ANR	1091215	Callee	getput_arg_fast		1091110	0					
ANR	1091216	Identifier	getput_arg_fast		1091110	0					
ANR	1091217	ArgumentList	compiler		1091110	1					
ANR	1091218	Argument	compiler		1091110	0					
ANR	1091219	Identifier	compiler		1091110	0					
ANR	1091220	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091221	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091222	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091223	Callee	FLOAT_DATA		1091110	0					
ANR	1091224	Identifier	FLOAT_DATA		1091110	0					
ANR	1091225	ArgumentList	op		1091110	1					
ANR	1091226	Argument	op		1091110	0					
ANR	1091227	Identifier	op		1091110	0					
ANR	1091228	Identifier	LOAD_DATA		1091110	1					
ANR	1091229	Argument	TMP_FREG1		1091110	2					
ANR	1091230	Identifier	TMP_FREG1		1091110	0					
ANR	1091231	Argument	src1		1091110	3					
ANR	1091232	Identifier	src1		1091110	0					
ANR	1091233	Argument	src1w		1091110	4					
ANR	1091234	Identifier	src1w		1091110	0					
ANR	1091235	CompoundStatement		16:85:442:442	1091110	1					
ANR	1091236	ExpressionStatement	FAIL_IF ( compiler -> error )	1947:3:65851:65875	1091110	0	True				
ANR	1091237	CallExpression	FAIL_IF ( compiler -> error )		1091110	0					
ANR	1091238	Callee	FAIL_IF		1091110	0					
ANR	1091239	Identifier	FAIL_IF		1091110	0					
ANR	1091240	ArgumentList	compiler -> error		1091110	1					
ANR	1091241	Argument	compiler -> error		1091110	0					
ANR	1091242	PtrMemberAccess	compiler -> error		1091110	0					
ANR	1091243	Identifier	compiler		1091110	0					
ANR	1091244	Identifier	error		1091110	1					
ANR	1091245	ExpressionStatement	src1 = TMP_FREG1	1948:3:65880:65896	1091110	1	True				
ANR	1091246	AssignmentExpression	src1 = TMP_FREG1		1091110	0		=			
ANR	1091247	Identifier	src1		1091110	0					
ANR	1091248	Identifier	TMP_FREG1		1091110	1					
ANR	1091249	ElseStatement	else		1091110	0					
ANR	1091250	ExpressionStatement	flags |= ALT_FORM1	1950:3:65910:65928	1091110	0	True				
ANR	1091251	AssignmentExpression	flags |= ALT_FORM1		1091110	0		|=			
ANR	1091252	Identifier	flags		1091110	0					
ANR	1091253	Identifier	ALT_FORM1		1091110	1					
ANR	1091254	IfStatement	if ( src2 & SLJIT_MEM )		1091110	10					
ANR	1091255	Condition	src2 & SLJIT_MEM	1953:5:65939:65954	1091110	0	True				
ANR	1091256	BitAndExpression	src2 & SLJIT_MEM		1091110	0		&			
ANR	1091257	Identifier	src2		1091110	0					
ANR	1091258	Identifier	SLJIT_MEM		1091110	1					
ANR	1091259	CompoundStatement		23:23:553:553	1091110	1					
ANR	1091260	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w ) )"		1091110	0					
ANR	1091261	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"	1954:6:65965:66041	1091110	0	True				
ANR	1091262	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"		1091110	0					
ANR	1091263	Callee	getput_arg_fast		1091110	0					
ANR	1091264	Identifier	getput_arg_fast		1091110	0					
ANR	1091265	ArgumentList	compiler		1091110	1					
ANR	1091266	Argument	compiler		1091110	0					
ANR	1091267	Identifier	compiler		1091110	0					
ANR	1091268	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091269	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091270	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091271	Callee	FLOAT_DATA		1091110	0					
ANR	1091272	Identifier	FLOAT_DATA		1091110	0					
ANR	1091273	ArgumentList	op		1091110	1					
ANR	1091274	Argument	op		1091110	0					
ANR	1091275	Identifier	op		1091110	0					
ANR	1091276	Identifier	LOAD_DATA		1091110	1					
ANR	1091277	Argument	TMP_FREG2		1091110	2					
ANR	1091278	Identifier	TMP_FREG2		1091110	0					
ANR	1091279	Argument	src2		1091110	3					
ANR	1091280	Identifier	src2		1091110	0					
ANR	1091281	Argument	src2w		1091110	4					
ANR	1091282	Identifier	src2w		1091110	0					
ANR	1091283	CompoundStatement		24:85:640:640	1091110	1					
ANR	1091284	ExpressionStatement	FAIL_IF ( compiler -> error )	1955:3:66049:66073	1091110	0	True				
ANR	1091285	CallExpression	FAIL_IF ( compiler -> error )		1091110	0					
ANR	1091286	Callee	FAIL_IF		1091110	0					
ANR	1091287	Identifier	FAIL_IF		1091110	0					
ANR	1091288	ArgumentList	compiler -> error		1091110	1					
ANR	1091289	Argument	compiler -> error		1091110	0					
ANR	1091290	PtrMemberAccess	compiler -> error		1091110	0					
ANR	1091291	Identifier	compiler		1091110	0					
ANR	1091292	Identifier	error		1091110	1					
ANR	1091293	ExpressionStatement	src2 = TMP_FREG2	1956:3:66078:66094	1091110	1	True				
ANR	1091294	AssignmentExpression	src2 = TMP_FREG2		1091110	0		=			
ANR	1091295	Identifier	src2		1091110	0					
ANR	1091296	Identifier	TMP_FREG2		1091110	1					
ANR	1091297	ElseStatement	else		1091110	0					
ANR	1091298	ExpressionStatement	flags |= ALT_FORM2	1958:3:66108:66126	1091110	0	True				
ANR	1091299	AssignmentExpression	flags |= ALT_FORM2		1091110	0		|=			
ANR	1091300	Identifier	flags		1091110	0					
ANR	1091301	Identifier	ALT_FORM2		1091110	1					
ANR	1091302	IfStatement	if ( ( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 ) )		1091110	11					
ANR	1091303	Condition	( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 )	1961:5:66137:66196	1091110	0	True				
ANR	1091304	EqualityExpression	( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 )		1091110	0		==			
ANR	1091305	BitAndExpression	flags & ( ALT_FORM1 | ALT_FORM2 )		1091110	0		&			
ANR	1091306	Identifier	flags		1091110	0					
ANR	1091307	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2		1091110	1		|			
ANR	1091308	Identifier	ALT_FORM1		1091110	0					
ANR	1091309	Identifier	ALT_FORM2		1091110	1					
ANR	1091310	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2		1091110	1		|			
ANR	1091311	Identifier	ALT_FORM1		1091110	0					
ANR	1091312	Identifier	ALT_FORM2		1091110	1					
ANR	1091313	CompoundStatement		31:67:795:795	1091110	1					
ANR	1091314	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1091110	0					
ANR	1091315	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1962:6:66207:66279	1091110	0	True				
ANR	1091316	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1091110	0		&&			
ANR	1091317	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1091110	0					
ANR	1091318	UnaryOperator	!		1091110	0					
ANR	1091319	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1091110	1					
ANR	1091320	Callee	can_cache		1091110	0					
ANR	1091321	Identifier	can_cache		1091110	0					
ANR	1091322	ArgumentList	src1		1091110	1					
ANR	1091323	Argument	src1		1091110	0					
ANR	1091324	Identifier	src1		1091110	0					
ANR	1091325	Argument	src1w		1091110	1					
ANR	1091326	Identifier	src1w		1091110	0					
ANR	1091327	Argument	src2		1091110	2					
ANR	1091328	Identifier	src2		1091110	0					
ANR	1091329	Argument	src2w		1091110	3					
ANR	1091330	Identifier	src2w		1091110	0					
ANR	1091331	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1091110	1					
ANR	1091332	Callee	can_cache		1091110	0					
ANR	1091333	Identifier	can_cache		1091110	0					
ANR	1091334	ArgumentList	src1		1091110	1					
ANR	1091335	Argument	src1		1091110	0					
ANR	1091336	Identifier	src1		1091110	0					
ANR	1091337	Argument	src1w		1091110	1					
ANR	1091338	Identifier	src1w		1091110	0					
ANR	1091339	Argument	dst		1091110	2					
ANR	1091340	Identifier	dst		1091110	0					
ANR	1091341	Argument	dstw		1091110	3					
ANR	1091342	Identifier	dstw		1091110	0					
ANR	1091343	CompoundStatement		32:81:878:878	1091110	1					
ANR	1091344	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"	1963:3:66287:66381	1091110	0	True				
ANR	1091345	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"		1091110	0					
ANR	1091346	Callee	FAIL_IF		1091110	0					
ANR	1091347	Identifier	FAIL_IF		1091110	0					
ANR	1091348	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1091110	1					
ANR	1091349	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1091110	0					
ANR	1091350	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1091110	0					
ANR	1091351	Callee	getput_arg		1091110	0					
ANR	1091352	Identifier	getput_arg		1091110	0					
ANR	1091353	ArgumentList	compiler		1091110	1					
ANR	1091354	Argument	compiler		1091110	0					
ANR	1091355	Identifier	compiler		1091110	0					
ANR	1091356	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091357	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091358	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091359	Callee	FLOAT_DATA		1091110	0					
ANR	1091360	Identifier	FLOAT_DATA		1091110	0					
ANR	1091361	ArgumentList	op		1091110	1					
ANR	1091362	Argument	op		1091110	0					
ANR	1091363	Identifier	op		1091110	0					
ANR	1091364	Identifier	LOAD_DATA		1091110	1					
ANR	1091365	Argument	TMP_FREG2		1091110	2					
ANR	1091366	Identifier	TMP_FREG2		1091110	0					
ANR	1091367	Argument	src2		1091110	3					
ANR	1091368	Identifier	src2		1091110	0					
ANR	1091369	Argument	src2w		1091110	4					
ANR	1091370	Identifier	src2w		1091110	0					
ANR	1091371	Argument	src1		1091110	5					
ANR	1091372	Identifier	src1		1091110	0					
ANR	1091373	Argument	src1w		1091110	6					
ANR	1091374	Identifier	src1w		1091110	0					
ANR	1091375	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1964:3:66386:66478	1091110	1	True				
ANR	1091376	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1091110	0					
ANR	1091377	Callee	FAIL_IF		1091110	0					
ANR	1091378	Identifier	FAIL_IF		1091110	0					
ANR	1091379	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	1					
ANR	1091380	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	0					
ANR	1091381	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	0					
ANR	1091382	Callee	getput_arg		1091110	0					
ANR	1091383	Identifier	getput_arg		1091110	0					
ANR	1091384	ArgumentList	compiler		1091110	1					
ANR	1091385	Argument	compiler		1091110	0					
ANR	1091386	Identifier	compiler		1091110	0					
ANR	1091387	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091388	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091389	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091390	Callee	FLOAT_DATA		1091110	0					
ANR	1091391	Identifier	FLOAT_DATA		1091110	0					
ANR	1091392	ArgumentList	op		1091110	1					
ANR	1091393	Argument	op		1091110	0					
ANR	1091394	Identifier	op		1091110	0					
ANR	1091395	Identifier	LOAD_DATA		1091110	1					
ANR	1091396	Argument	TMP_FREG1		1091110	2					
ANR	1091397	Identifier	TMP_FREG1		1091110	0					
ANR	1091398	Argument	src1		1091110	3					
ANR	1091399	Identifier	src1		1091110	0					
ANR	1091400	Argument	src1w		1091110	4					
ANR	1091401	Identifier	src1w		1091110	0					
ANR	1091402	Argument	dst		1091110	5					
ANR	1091403	Identifier	dst		1091110	0					
ANR	1091404	Argument	dstw		1091110	6					
ANR	1091405	Identifier	dstw		1091110	0					
ANR	1091406	ElseStatement	else		1091110	0					
ANR	1091407	CompoundStatement		36:7:1087:1087	1091110	0					
ANR	1091408	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1967:3:66496:66590	1091110	0	True				
ANR	1091409	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1091110	0					
ANR	1091410	Callee	FAIL_IF		1091110	0					
ANR	1091411	Identifier	FAIL_IF		1091110	0					
ANR	1091412	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1091110	1					
ANR	1091413	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1091110	0					
ANR	1091414	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1091110	0					
ANR	1091415	Callee	getput_arg		1091110	0					
ANR	1091416	Identifier	getput_arg		1091110	0					
ANR	1091417	ArgumentList	compiler		1091110	1					
ANR	1091418	Argument	compiler		1091110	0					
ANR	1091419	Identifier	compiler		1091110	0					
ANR	1091420	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091421	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091422	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091423	Callee	FLOAT_DATA		1091110	0					
ANR	1091424	Identifier	FLOAT_DATA		1091110	0					
ANR	1091425	ArgumentList	op		1091110	1					
ANR	1091426	Argument	op		1091110	0					
ANR	1091427	Identifier	op		1091110	0					
ANR	1091428	Identifier	LOAD_DATA		1091110	1					
ANR	1091429	Argument	TMP_FREG1		1091110	2					
ANR	1091430	Identifier	TMP_FREG1		1091110	0					
ANR	1091431	Argument	src1		1091110	3					
ANR	1091432	Identifier	src1		1091110	0					
ANR	1091433	Argument	src1w		1091110	4					
ANR	1091434	Identifier	src1w		1091110	0					
ANR	1091435	Argument	src2		1091110	5					
ANR	1091436	Identifier	src2		1091110	0					
ANR	1091437	Argument	src2w		1091110	6					
ANR	1091438	Identifier	src2w		1091110	0					
ANR	1091439	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1968:3:66595:66687	1091110	1	True				
ANR	1091440	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1091110	0					
ANR	1091441	Callee	FAIL_IF		1091110	0					
ANR	1091442	Identifier	FAIL_IF		1091110	0					
ANR	1091443	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	1					
ANR	1091444	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	0					
ANR	1091445	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	0					
ANR	1091446	Callee	getput_arg		1091110	0					
ANR	1091447	Identifier	getput_arg		1091110	0					
ANR	1091448	ArgumentList	compiler		1091110	1					
ANR	1091449	Argument	compiler		1091110	0					
ANR	1091450	Identifier	compiler		1091110	0					
ANR	1091451	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091452	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091453	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091454	Callee	FLOAT_DATA		1091110	0					
ANR	1091455	Identifier	FLOAT_DATA		1091110	0					
ANR	1091456	ArgumentList	op		1091110	1					
ANR	1091457	Argument	op		1091110	0					
ANR	1091458	Identifier	op		1091110	0					
ANR	1091459	Identifier	LOAD_DATA		1091110	1					
ANR	1091460	Argument	TMP_FREG2		1091110	2					
ANR	1091461	Identifier	TMP_FREG2		1091110	0					
ANR	1091462	Argument	src2		1091110	3					
ANR	1091463	Identifier	src2		1091110	0					
ANR	1091464	Argument	src2w		1091110	4					
ANR	1091465	Identifier	src2w		1091110	0					
ANR	1091466	Argument	dst		1091110	5					
ANR	1091467	Identifier	dst		1091110	0					
ANR	1091468	Argument	dstw		1091110	6					
ANR	1091469	Identifier	dstw		1091110	0					
ANR	1091470	ElseStatement	else		1091110	0					
ANR	1091471	IfStatement	if ( flags & ALT_FORM1 )		1091110	0					
ANR	1091472	Condition	flags & ALT_FORM1	1971:10:66706:66722	1091110	0	True				
ANR	1091473	BitAndExpression	flags & ALT_FORM1		1091110	0		&			
ANR	1091474	Identifier	flags		1091110	0					
ANR	1091475	Identifier	ALT_FORM1		1091110	1					
ANR	1091476	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1972:2:66727:66819	1091110	1	True				
ANR	1091477	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1091110	0					
ANR	1091478	Callee	FAIL_IF		1091110	0					
ANR	1091479	Identifier	FAIL_IF		1091110	0					
ANR	1091480	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	1					
ANR	1091481	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	0					
ANR	1091482	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1091110	0					
ANR	1091483	Callee	getput_arg		1091110	0					
ANR	1091484	Identifier	getput_arg		1091110	0					
ANR	1091485	ArgumentList	compiler		1091110	1					
ANR	1091486	Argument	compiler		1091110	0					
ANR	1091487	Identifier	compiler		1091110	0					
ANR	1091488	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091489	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091490	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091491	Callee	FLOAT_DATA		1091110	0					
ANR	1091492	Identifier	FLOAT_DATA		1091110	0					
ANR	1091493	ArgumentList	op		1091110	1					
ANR	1091494	Argument	op		1091110	0					
ANR	1091495	Identifier	op		1091110	0					
ANR	1091496	Identifier	LOAD_DATA		1091110	1					
ANR	1091497	Argument	TMP_FREG1		1091110	2					
ANR	1091498	Identifier	TMP_FREG1		1091110	0					
ANR	1091499	Argument	src1		1091110	3					
ANR	1091500	Identifier	src1		1091110	0					
ANR	1091501	Argument	src1w		1091110	4					
ANR	1091502	Identifier	src1w		1091110	0					
ANR	1091503	Argument	dst		1091110	5					
ANR	1091504	Identifier	dst		1091110	0					
ANR	1091505	Argument	dstw		1091110	6					
ANR	1091506	Identifier	dstw		1091110	0					
ANR	1091507	ElseStatement	else		1091110	0					
ANR	1091508	IfStatement	if ( flags & ALT_FORM2 )		1091110	0					
ANR	1091509	Condition	flags & ALT_FORM2	1973:10:66831:66847	1091110	0	True				
ANR	1091510	BitAndExpression	flags & ALT_FORM2		1091110	0		&			
ANR	1091511	Identifier	flags		1091110	0					
ANR	1091512	Identifier	ALT_FORM2		1091110	1					
ANR	1091513	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1974:2:66852:66944	1091110	1	True				
ANR	1091514	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1091110	0					
ANR	1091515	Callee	FAIL_IF		1091110	0					
ANR	1091516	Identifier	FAIL_IF		1091110	0					
ANR	1091517	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	1					
ANR	1091518	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	0					
ANR	1091519	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1091110	0					
ANR	1091520	Callee	getput_arg		1091110	0					
ANR	1091521	Identifier	getput_arg		1091110	0					
ANR	1091522	ArgumentList	compiler		1091110	1					
ANR	1091523	Argument	compiler		1091110	0					
ANR	1091524	Identifier	compiler		1091110	0					
ANR	1091525	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1091110	1					
ANR	1091526	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1091110	0		|			
ANR	1091527	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091528	Callee	FLOAT_DATA		1091110	0					
ANR	1091529	Identifier	FLOAT_DATA		1091110	0					
ANR	1091530	ArgumentList	op		1091110	1					
ANR	1091531	Argument	op		1091110	0					
ANR	1091532	Identifier	op		1091110	0					
ANR	1091533	Identifier	LOAD_DATA		1091110	1					
ANR	1091534	Argument	TMP_FREG2		1091110	2					
ANR	1091535	Identifier	TMP_FREG2		1091110	0					
ANR	1091536	Argument	src2		1091110	3					
ANR	1091537	Identifier	src2		1091110	0					
ANR	1091538	Argument	src2w		1091110	4					
ANR	1091539	Identifier	src2w		1091110	0					
ANR	1091540	Argument	dst		1091110	5					
ANR	1091541	Identifier	dst		1091110	0					
ANR	1091542	Argument	dstw		1091110	6					
ANR	1091543	Identifier	dstw		1091110	0					
ANR	1091544	IfStatement	if ( flags & ALT_FORM1 )		1091110	12					
ANR	1091545	Condition	flags & ALT_FORM1	1976:5:66952:66968	1091110	0	True				
ANR	1091546	BitAndExpression	flags & ALT_FORM1		1091110	0		&			
ANR	1091547	Identifier	flags		1091110	0					
ANR	1091548	Identifier	ALT_FORM1		1091110	1					
ANR	1091549	ExpressionStatement	src1 = TMP_FREG1	1977:2:66973:66989	1091110	1	True				
ANR	1091550	AssignmentExpression	src1 = TMP_FREG1		1091110	0		=			
ANR	1091551	Identifier	src1		1091110	0					
ANR	1091552	Identifier	TMP_FREG1		1091110	1					
ANR	1091553	IfStatement	if ( flags & ALT_FORM2 )		1091110	13					
ANR	1091554	Condition	flags & ALT_FORM2	1978:5:66996:67012	1091110	0	True				
ANR	1091555	BitAndExpression	flags & ALT_FORM2		1091110	0		&			
ANR	1091556	Identifier	flags		1091110	0					
ANR	1091557	Identifier	ALT_FORM2		1091110	1					
ANR	1091558	ExpressionStatement	src2 = TMP_FREG2	1979:2:67017:67033	1091110	1	True				
ANR	1091559	AssignmentExpression	src2 = TMP_FREG2		1091110	0		=			
ANR	1091560	Identifier	src2		1091110	0					
ANR	1091561	Identifier	TMP_FREG2		1091110	1					
ANR	1091562	SwitchStatement	switch ( GET_OPCODE ( op ) )		1091110	14					
ANR	1091563	Condition	GET_OPCODE ( op )	1981:9:67045:67058	1091110	0	True				
ANR	1091564	CallExpression	GET_OPCODE ( op )		1091110	0					
ANR	1091565	Callee	GET_OPCODE		1091110	0					
ANR	1091566	Identifier	GET_OPCODE		1091110	0					
ANR	1091567	ArgumentList	op		1091110	1					
ANR	1091568	Argument	op		1091110	0					
ANR	1091569	Identifier	op		1091110	0					
ANR	1091570	CompoundStatement		51:25:1657:1657	1091110	1					
ANR	1091571	Label	case SLJIT_DADD :	1982:1:67064:67079	1091110	0	True				
ANR	1091572	Identifier	SLJIT_DADD		1091110	0					
ANR	1091573	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1983:2:67083:67174	1091110	1	True				
ANR	1091574	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1091110	0					
ANR	1091575	Callee	FAIL_IF		1091110	0					
ANR	1091576	Identifier	FAIL_IF		1091110	0					
ANR	1091577	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	1					
ANR	1091578	Argument	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091579	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091580	Callee	push_inst		1091110	0					
ANR	1091581	Identifier	push_inst		1091110	0					
ANR	1091582	ArgumentList	compiler		1091110	1					
ANR	1091583	Argument	compiler		1091110	0					
ANR	1091584	Identifier	compiler		1091110	0					
ANR	1091585	Argument	"SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	1					
ANR	1091586	InclusiveOrExpression	"SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	0		|			
ANR	1091587	CallExpression	"SELECT_FOP ( op , FADDS , FADD )"		1091110	0					
ANR	1091588	Callee	SELECT_FOP		1091110	0					
ANR	1091589	Identifier	SELECT_FOP		1091110	0					
ANR	1091590	ArgumentList	op		1091110	1					
ANR	1091591	Argument	op		1091110	0					
ANR	1091592	Identifier	op		1091110	0					
ANR	1091593	Argument	FADDS		1091110	1					
ANR	1091594	Identifier	FADDS		1091110	0					
ANR	1091595	Argument	FADD		1091110	2					
ANR	1091596	Identifier	FADD		1091110	0					
ANR	1091597	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091598	CallExpression	FD ( dst_r )		1091110	0					
ANR	1091599	Callee	FD		1091110	0					
ANR	1091600	Identifier	FD		1091110	0					
ANR	1091601	ArgumentList	dst_r		1091110	1					
ANR	1091602	Argument	dst_r		1091110	0					
ANR	1091603	Identifier	dst_r		1091110	0					
ANR	1091604	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091605	CallExpression	FA ( src1 )		1091110	0					
ANR	1091606	Callee	FA		1091110	0					
ANR	1091607	Identifier	FA		1091110	0					
ANR	1091608	ArgumentList	src1		1091110	1					
ANR	1091609	Argument	src1		1091110	0					
ANR	1091610	Identifier	src1		1091110	0					
ANR	1091611	CallExpression	FB ( src2 )		1091110	1					
ANR	1091612	Callee	FB		1091110	0					
ANR	1091613	Identifier	FB		1091110	0					
ANR	1091614	ArgumentList	src2		1091110	1					
ANR	1091615	Argument	src2		1091110	0					
ANR	1091616	Identifier	src2		1091110	0					
ANR	1091617	BreakStatement	break ;	1984:2:67178:67183	1091110	2	True				
ANR	1091618	Label	case SLJIT_DSUB :	1986:1:67187:67202	1091110	3	True				
ANR	1091619	Identifier	SLJIT_DSUB		1091110	0					
ANR	1091620	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1987:2:67206:67297	1091110	4	True				
ANR	1091621	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1091110	0					
ANR	1091622	Callee	FAIL_IF		1091110	0					
ANR	1091623	Identifier	FAIL_IF		1091110	0					
ANR	1091624	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	1					
ANR	1091625	Argument	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091626	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091627	Callee	push_inst		1091110	0					
ANR	1091628	Identifier	push_inst		1091110	0					
ANR	1091629	ArgumentList	compiler		1091110	1					
ANR	1091630	Argument	compiler		1091110	0					
ANR	1091631	Identifier	compiler		1091110	0					
ANR	1091632	Argument	"SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	1					
ANR	1091633	InclusiveOrExpression	"SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	0		|			
ANR	1091634	CallExpression	"SELECT_FOP ( op , FSUBS , FSUB )"		1091110	0					
ANR	1091635	Callee	SELECT_FOP		1091110	0					
ANR	1091636	Identifier	SELECT_FOP		1091110	0					
ANR	1091637	ArgumentList	op		1091110	1					
ANR	1091638	Argument	op		1091110	0					
ANR	1091639	Identifier	op		1091110	0					
ANR	1091640	Argument	FSUBS		1091110	1					
ANR	1091641	Identifier	FSUBS		1091110	0					
ANR	1091642	Argument	FSUB		1091110	2					
ANR	1091643	Identifier	FSUB		1091110	0					
ANR	1091644	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091645	CallExpression	FD ( dst_r )		1091110	0					
ANR	1091646	Callee	FD		1091110	0					
ANR	1091647	Identifier	FD		1091110	0					
ANR	1091648	ArgumentList	dst_r		1091110	1					
ANR	1091649	Argument	dst_r		1091110	0					
ANR	1091650	Identifier	dst_r		1091110	0					
ANR	1091651	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091652	CallExpression	FA ( src1 )		1091110	0					
ANR	1091653	Callee	FA		1091110	0					
ANR	1091654	Identifier	FA		1091110	0					
ANR	1091655	ArgumentList	src1		1091110	1					
ANR	1091656	Argument	src1		1091110	0					
ANR	1091657	Identifier	src1		1091110	0					
ANR	1091658	CallExpression	FB ( src2 )		1091110	1					
ANR	1091659	Callee	FB		1091110	0					
ANR	1091660	Identifier	FB		1091110	0					
ANR	1091661	ArgumentList	src2		1091110	1					
ANR	1091662	Argument	src2		1091110	0					
ANR	1091663	Identifier	src2		1091110	0					
ANR	1091664	BreakStatement	break ;	1988:2:67301:67306	1091110	5	True				
ANR	1091665	Label	case SLJIT_DMUL :	1990:1:67310:67325	1091110	6	True				
ANR	1091666	Identifier	SLJIT_DMUL		1091110	0					
ANR	1091667	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) ) )"	1991:2:67329:67446	1091110	7	True				
ANR	1091668	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) ) )"		1091110	0					
ANR	1091669	Callee	FAIL_IF		1091110	0					
ANR	1091670	Identifier	FAIL_IF		1091110	0					
ANR	1091671	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1091110	1					
ANR	1091672	Argument	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1091110	0					
ANR	1091673	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1091110	0					
ANR	1091674	Callee	push_inst		1091110	0					
ANR	1091675	Identifier	push_inst		1091110	0					
ANR	1091676	ArgumentList	compiler		1091110	1					
ANR	1091677	Argument	compiler		1091110	0					
ANR	1091678	Identifier	compiler		1091110	0					
ANR	1091679	Argument	"SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 )"		1091110	1					
ANR	1091680	InclusiveOrExpression	"SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 )"		1091110	0		|			
ANR	1091681	CallExpression	"SELECT_FOP ( op , FMULS , FMUL )"		1091110	0					
ANR	1091682	Callee	SELECT_FOP		1091110	0					
ANR	1091683	Identifier	SELECT_FOP		1091110	0					
ANR	1091684	ArgumentList	op		1091110	1					
ANR	1091685	Argument	op		1091110	0					
ANR	1091686	Identifier	op		1091110	0					
ANR	1091687	Argument	FMULS		1091110	1					
ANR	1091688	Identifier	FMULS		1091110	0					
ANR	1091689	Argument	FMUL		1091110	2					
ANR	1091690	Identifier	FMUL		1091110	0					
ANR	1091691	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FC ( src2 )		1091110	1		|			
ANR	1091692	CallExpression	FD ( dst_r )		1091110	0					
ANR	1091693	Callee	FD		1091110	0					
ANR	1091694	Identifier	FD		1091110	0					
ANR	1091695	ArgumentList	dst_r		1091110	1					
ANR	1091696	Argument	dst_r		1091110	0					
ANR	1091697	Identifier	dst_r		1091110	0					
ANR	1091698	InclusiveOrExpression	FA ( src1 ) | FC ( src2 )		1091110	1		|			
ANR	1091699	CallExpression	FA ( src1 )		1091110	0					
ANR	1091700	Callee	FA		1091110	0					
ANR	1091701	Identifier	FA		1091110	0					
ANR	1091702	ArgumentList	src1		1091110	1					
ANR	1091703	Argument	src1		1091110	0					
ANR	1091704	Identifier	src1		1091110	0					
ANR	1091705	CallExpression	FC ( src2 )		1091110	1					
ANR	1091706	Callee	FC		1091110	0					
ANR	1091707	Identifier	FC		1091110	0					
ANR	1091708	ArgumentList	src2		1091110	1					
ANR	1091709	Argument	src2		1091110	0					
ANR	1091710	Identifier	src2		1091110	0					
ANR	1091711	BreakStatement	break ;	1992:2:67450:67455	1091110	8	True				
ANR	1091712	Label	case SLJIT_DDIV :	1994:1:67459:67474	1091110	9	True				
ANR	1091713	Identifier	SLJIT_DDIV		1091110	0					
ANR	1091714	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1995:2:67478:67569	1091110	10	True				
ANR	1091715	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1091110	0					
ANR	1091716	Callee	FAIL_IF		1091110	0					
ANR	1091717	Identifier	FAIL_IF		1091110	0					
ANR	1091718	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	1					
ANR	1091719	Argument	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091720	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1091110	0					
ANR	1091721	Callee	push_inst		1091110	0					
ANR	1091722	Identifier	push_inst		1091110	0					
ANR	1091723	ArgumentList	compiler		1091110	1					
ANR	1091724	Argument	compiler		1091110	0					
ANR	1091725	Identifier	compiler		1091110	0					
ANR	1091726	Argument	"SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	1					
ANR	1091727	InclusiveOrExpression	"SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1091110	0		|			
ANR	1091728	CallExpression	"SELECT_FOP ( op , FDIVS , FDIV )"		1091110	0					
ANR	1091729	Callee	SELECT_FOP		1091110	0					
ANR	1091730	Identifier	SELECT_FOP		1091110	0					
ANR	1091731	ArgumentList	op		1091110	1					
ANR	1091732	Argument	op		1091110	0					
ANR	1091733	Identifier	op		1091110	0					
ANR	1091734	Argument	FDIVS		1091110	1					
ANR	1091735	Identifier	FDIVS		1091110	0					
ANR	1091736	Argument	FDIV		1091110	2					
ANR	1091737	Identifier	FDIV		1091110	0					
ANR	1091738	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091739	CallExpression	FD ( dst_r )		1091110	0					
ANR	1091740	Callee	FD		1091110	0					
ANR	1091741	Identifier	FD		1091110	0					
ANR	1091742	ArgumentList	dst_r		1091110	1					
ANR	1091743	Argument	dst_r		1091110	0					
ANR	1091744	Identifier	dst_r		1091110	0					
ANR	1091745	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1091110	1		|			
ANR	1091746	CallExpression	FA ( src1 )		1091110	0					
ANR	1091747	Callee	FA		1091110	0					
ANR	1091748	Identifier	FA		1091110	0					
ANR	1091749	ArgumentList	src1		1091110	1					
ANR	1091750	Argument	src1		1091110	0					
ANR	1091751	Identifier	src1		1091110	0					
ANR	1091752	CallExpression	FB ( src2 )		1091110	1					
ANR	1091753	Callee	FB		1091110	0					
ANR	1091754	Identifier	FB		1091110	0					
ANR	1091755	ArgumentList	src2		1091110	1					
ANR	1091756	Argument	src2		1091110	0					
ANR	1091757	Identifier	src2		1091110	0					
ANR	1091758	BreakStatement	break ;	1996:2:67573:67578	1091110	11	True				
ANR	1091759	IfStatement	if ( dst_r == TMP_FREG2 )		1091110	15					
ANR	1091760	Condition	dst_r == TMP_FREG2	1999:5:67589:67606	1091110	0	True				
ANR	1091761	EqualityExpression	dst_r == TMP_FREG2		1091110	0		==			
ANR	1091762	Identifier	dst_r		1091110	0					
ANR	1091763	Identifier	TMP_FREG2		1091110	1					
ANR	1091764	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"	2000:2:67611:67686	1091110	1	True				
ANR	1091765	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"		1091110	0					
ANR	1091766	Callee	FAIL_IF		1091110	0					
ANR	1091767	Identifier	FAIL_IF		1091110	0					
ANR	1091768	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1091110	1					
ANR	1091769	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1091110	0					
ANR	1091770	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1091110	0					
ANR	1091771	Callee	emit_op_mem2		1091110	0					
ANR	1091772	Identifier	emit_op_mem2		1091110	0					
ANR	1091773	ArgumentList	compiler		1091110	1					
ANR	1091774	Argument	compiler		1091110	0					
ANR	1091775	Identifier	compiler		1091110	0					
ANR	1091776	Argument	FLOAT_DATA ( op )		1091110	1					
ANR	1091777	CallExpression	FLOAT_DATA ( op )		1091110	0					
ANR	1091778	Callee	FLOAT_DATA		1091110	0					
ANR	1091779	Identifier	FLOAT_DATA		1091110	0					
ANR	1091780	ArgumentList	op		1091110	1					
ANR	1091781	Argument	op		1091110	0					
ANR	1091782	Identifier	op		1091110	0					
ANR	1091783	Argument	TMP_FREG2		1091110	2					
ANR	1091784	Identifier	TMP_FREG2		1091110	0					
ANR	1091785	Argument	dst		1091110	3					
ANR	1091786	Identifier	dst		1091110	0					
ANR	1091787	Argument	dstw		1091110	4					
ANR	1091788	Identifier	dstw		1091110	0					
ANR	1091789	Argument	0		1091110	5					
ANR	1091790	PrimaryExpression	0		1091110	0					
ANR	1091791	Argument	0		1091110	6					
ANR	1091792	PrimaryExpression	0		1091110	0					
ANR	1091793	ReturnStatement	return SLJIT_SUCCESS ;	2002:1:67690:67710	1091110	16	True				
ANR	1091794	Identifier	SLJIT_SUCCESS		1091110	0					
ANR	1091795	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1091110	1					
ANR	1091796	Identifier	sljit_emit_fop2		1091110	2					
ANR	1091797	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1091110	3					
ANR	1091798	Parameter	struct sljit_compiler * compiler	1927:50:65263:65293	1091110	0	True				
ANR	1091799	ParameterType	struct sljit_compiler *		1091110	0					
ANR	1091800	Identifier	compiler		1091110	1					
ANR	1091801	Parameter	sljit_si op	1927:83:65296:65306	1091110	1	True				
ANR	1091802	ParameterType	sljit_si		1091110	0					
ANR	1091803	Identifier	op		1091110	1					
ANR	1091804	Parameter	sljit_si dst	1928:1:65310:65321	1091110	2	True				
ANR	1091805	ParameterType	sljit_si		1091110	0					
ANR	1091806	Identifier	dst		1091110	1					
ANR	1091807	Parameter	sljit_sw dstw	1928:15:65324:65336	1091110	3	True				
ANR	1091808	ParameterType	sljit_sw		1091110	0					
ANR	1091809	Identifier	dstw		1091110	1					
ANR	1091810	Parameter	sljit_si src1	1929:1:65340:65352	1091110	4	True				
ANR	1091811	ParameterType	sljit_si		1091110	0					
ANR	1091812	Identifier	src1		1091110	1					
ANR	1091813	Parameter	sljit_sw src1w	1929:16:65355:65368	1091110	5	True				
ANR	1091814	ParameterType	sljit_sw		1091110	0					
ANR	1091815	Identifier	src1w		1091110	1					
ANR	1091816	Parameter	sljit_si src2	1930:1:65372:65384	1091110	6	True				
ANR	1091817	ParameterType	sljit_si		1091110	0					
ANR	1091818	Identifier	src2		1091110	1					
ANR	1091819	Parameter	sljit_sw src2w	1930:16:65387:65400	1091110	7	True				
ANR	1091820	ParameterType	sljit_sw		1091110	0					
ANR	1091821	Identifier	src2w		1091110	1					
ANR	1091822	CFGEntryNode	ENTRY		1091110		True				
ANR	1091823	CFGExitNode	EXIT		1091110		True				
ANR	1091824	Symbol	FADDS		1091110						
ANR	1091825	Symbol	compiler -> cache_argw		1091110						
ANR	1091826	Symbol	TMP_FREG2		1091110						
ANR	1091827	Symbol	src1w		1091110						
ANR	1091828	Symbol	dst		1091110						
ANR	1091829	Symbol	FLOAT_DATA		1091110						
ANR	1091830	Symbol	LOAD_DATA		1091110						
ANR	1091831	Symbol	TMP_FREG1		1091110						
ANR	1091832	Symbol	SLJIT_MEM		1091110						
ANR	1091833	Symbol	flags		1091110						
ANR	1091834	Symbol	* compiler		1091110						
ANR	1091835	Symbol	FMULS		1091110						
ANR	1091836	Symbol	FDIV		1091110						
ANR	1091837	Symbol	dst_r		1091110						
ANR	1091838	Symbol	GET_OPCODE		1091110						
ANR	1091839	Symbol	getput_arg		1091110						
ANR	1091840	Symbol	ALT_FORM1		1091110						
ANR	1091841	Symbol	ALT_FORM2		1091110						
ANR	1091842	Symbol	FADD		1091110						
ANR	1091843	Symbol	compiler		1091110						
ANR	1091844	Symbol	src2w		1091110						
ANR	1091845	Symbol	can_cache		1091110						
ANR	1091846	Symbol	op		1091110						
ANR	1091847	Symbol	push_inst		1091110						
ANR	1091848	Symbol	FAST_IS_REG		1091110						
ANR	1091849	Symbol	compiler -> cache_arg		1091110						
ANR	1091850	Symbol	emit_op_mem2		1091110						
ANR	1091851	Symbol	SLJIT_SUCCESS		1091110						
ANR	1091852	Symbol	check_sljit_emit_fop2		1091110						
ANR	1091853	Symbol	SELECT_FOP		1091110						
ANR	1091854	Symbol	FDIVS		1091110						
ANR	1091855	Symbol	src1		1091110						
ANR	1091856	Symbol	FSUBS		1091110						
ANR	1091857	Symbol	src2		1091110						
ANR	1091858	Symbol	FA		1091110						
ANR	1091859	Symbol	FSUB		1091110						
ANR	1091860	Symbol	getput_arg_fast		1091110						
ANR	1091861	Symbol	FB		1091110						
ANR	1091862	Symbol	dstw		1091110						
ANR	1091863	Symbol	compiler -> error		1091110						
ANR	1091864	Symbol	FC		1091110						
ANR	1091865	Symbol	FD		1091110						
ANR	1091866	Symbol	FMUL		1091110						
ANR	1091867	Function	sljit_emit_fast_enter	2005:1:67716:68528							
ANR	1091868	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1091867	0					
ANR	1091869	CompoundStatement		2013:0:68099:68528	1091867	0					
ANR	1091870	ExpressionStatement	CHECK_ERROR ( )	2014:1:68102:68115	1091867	0	True				
ANR	1091871	CallExpression	CHECK_ERROR ( )		1091867	0					
ANR	1091872	Callee	CHECK_ERROR		1091867	0					
ANR	1091873	Identifier	CHECK_ERROR		1091867	0					
ANR	1091874	ArgumentList			1091867	1					
ANR	1091875	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	2015:1:68118:68173	1091867	1	True				
ANR	1091876	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1091867	0					
ANR	1091877	Callee	CHECK		1091867	0					
ANR	1091878	Identifier	CHECK		1091867	0					
ANR	1091879	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1091867	1					
ANR	1091880	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1091867	0					
ANR	1091881	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1091867	0					
ANR	1091882	Callee	check_sljit_emit_fast_enter		1091867	0					
ANR	1091883	Identifier	check_sljit_emit_fast_enter		1091867	0					
ANR	1091884	ArgumentList	compiler		1091867	1					
ANR	1091885	Argument	compiler		1091867	0					
ANR	1091886	Identifier	compiler		1091867	0					
ANR	1091887	Argument	dst		1091867	1					
ANR	1091888	Identifier	dst		1091867	0					
ANR	1091889	Argument	dstw		1091867	2					
ANR	1091890	Identifier	dstw		1091867	0					
ANR	1091891	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2016:1:68176:68206	1091867	2	True				
ANR	1091892	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1091867	0					
ANR	1091893	Callee	ADJUST_LOCAL_OFFSET		1091867	0					
ANR	1091894	Identifier	ADJUST_LOCAL_OFFSET		1091867	0					
ANR	1091895	ArgumentList	dst		1091867	1					
ANR	1091896	Argument	dst		1091867	0					
ANR	1091897	Identifier	dst		1091867	0					
ANR	1091898	Argument	dstw		1091867	1					
ANR	1091899	Identifier	dstw		1091867	0					
ANR	1091900	IfStatement	if ( dst == SLJIT_UNUSED )		1091867	3					
ANR	1091901	Condition	dst == SLJIT_UNUSED	2019:5:68261:68279	1091867	0	True				
ANR	1091902	EqualityExpression	dst == SLJIT_UNUSED		1091867	0		==			
ANR	1091903	Identifier	dst		1091867	0					
ANR	1091904	Identifier	SLJIT_UNUSED		1091867	1					
ANR	1091905	ReturnStatement	return SLJIT_SUCCESS ;	2020:2:68284:68304	1091867	1	True				
ANR	1091906	Identifier	SLJIT_SUCCESS		1091867	0					
ANR	1091907	IfStatement	if ( FAST_IS_REG ( dst ) )		1091867	4					
ANR	1091908	Condition	FAST_IS_REG ( dst )	2022:5:68312:68327	1091867	0	True				
ANR	1091909	CallExpression	FAST_IS_REG ( dst )		1091867	0					
ANR	1091910	Callee	FAST_IS_REG		1091867	0					
ANR	1091911	Identifier	FAST_IS_REG		1091867	0					
ANR	1091912	ArgumentList	dst		1091867	1					
ANR	1091913	Argument	dst		1091867	0					
ANR	1091914	Identifier	dst		1091867	0					
ANR	1091915	ReturnStatement	"return push_inst ( compiler , MFLR | D ( dst ) ) ;"	2023:2:68332:68373	1091867	1	True				
ANR	1091916	CallExpression	"push_inst ( compiler , MFLR | D ( dst ) )"		1091867	0					
ANR	1091917	Callee	push_inst		1091867	0					
ANR	1091918	Identifier	push_inst		1091867	0					
ANR	1091919	ArgumentList	compiler		1091867	1					
ANR	1091920	Argument	compiler		1091867	0					
ANR	1091921	Identifier	compiler		1091867	0					
ANR	1091922	Argument	MFLR | D ( dst )		1091867	1					
ANR	1091923	InclusiveOrExpression	MFLR | D ( dst )		1091867	0		|			
ANR	1091924	Identifier	MFLR		1091867	0					
ANR	1091925	CallExpression	D ( dst )		1091867	1					
ANR	1091926	Callee	D		1091867	0					
ANR	1091927	Identifier	D		1091867	0					
ANR	1091928	ArgumentList	dst		1091867	1					
ANR	1091929	Argument	dst		1091867	0					
ANR	1091930	Identifier	dst		1091867	0					
ANR	1091931	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLR | D ( TMP_REG2 ) ) )"	2026:1:68392:68440	1091867	5	True				
ANR	1091932	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLR | D ( TMP_REG2 ) ) )"		1091867	0					
ANR	1091933	Callee	FAIL_IF		1091867	0					
ANR	1091934	Identifier	FAIL_IF		1091867	0					
ANR	1091935	ArgumentList	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1091867	1					
ANR	1091936	Argument	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1091867	0					
ANR	1091937	CallExpression	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1091867	0					
ANR	1091938	Callee	push_inst		1091867	0					
ANR	1091939	Identifier	push_inst		1091867	0					
ANR	1091940	ArgumentList	compiler		1091867	1					
ANR	1091941	Argument	compiler		1091867	0					
ANR	1091942	Identifier	compiler		1091867	0					
ANR	1091943	Argument	MFLR | D ( TMP_REG2 )		1091867	1					
ANR	1091944	InclusiveOrExpression	MFLR | D ( TMP_REG2 )		1091867	0		|			
ANR	1091945	Identifier	MFLR		1091867	0					
ANR	1091946	CallExpression	D ( TMP_REG2 )		1091867	1					
ANR	1091947	Callee	D		1091867	0					
ANR	1091948	Identifier	D		1091867	0					
ANR	1091949	ArgumentList	TMP_REG2		1091867	1					
ANR	1091950	Argument	TMP_REG2		1091867	0					
ANR	1091951	Identifier	TMP_REG2		1091867	0					
ANR	1091952	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) ;"	2027:1:68443:68526	1091867	6	True				
ANR	1091953	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1091867	0					
ANR	1091954	Callee	emit_op		1091867	0					
ANR	1091955	Identifier	emit_op		1091867	0					
ANR	1091956	ArgumentList	compiler		1091867	1					
ANR	1091957	Argument	compiler		1091867	0					
ANR	1091958	Identifier	compiler		1091867	0					
ANR	1091959	Argument	SLJIT_MOV		1091867	1					
ANR	1091960	Identifier	SLJIT_MOV		1091867	0					
ANR	1091961	Argument	WORD_DATA		1091867	2					
ANR	1091962	Identifier	WORD_DATA		1091867	0					
ANR	1091963	Argument	dst		1091867	3					
ANR	1091964	Identifier	dst		1091867	0					
ANR	1091965	Argument	dstw		1091867	4					
ANR	1091966	Identifier	dstw		1091867	0					
ANR	1091967	Argument	TMP_REG1		1091867	5					
ANR	1091968	Identifier	TMP_REG1		1091867	0					
ANR	1091969	Argument	0		1091867	6					
ANR	1091970	PrimaryExpression	0		1091867	0					
ANR	1091971	Argument	TMP_REG2		1091867	7					
ANR	1091972	Identifier	TMP_REG2		1091867	0					
ANR	1091973	Argument	0		1091867	8					
ANR	1091974	PrimaryExpression	0		1091867	0					
ANR	1091975	ReturnType	undef FLOAT_DATA undef SELECT_FOP SLJIT_API_FUNC_ATTRIBUTE sljit_si		1091867	1					
ANR	1091976	Identifier	sljit_emit_fast_enter		1091867	2					
ANR	1091977	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1091867	3					
ANR	1091978	Parameter	struct sljit_compiler * compiler	2012:56:68037:68067	1091867	0	True				
ANR	1091979	ParameterType	struct sljit_compiler *		1091867	0					
ANR	1091980	Identifier	compiler		1091867	1					
ANR	1091981	Parameter	sljit_si dst	2012:89:68070:68081	1091867	1	True				
ANR	1091982	ParameterType	sljit_si		1091867	0					
ANR	1091983	Identifier	dst		1091867	1					
ANR	1091984	Parameter	sljit_sw dstw	2012:103:68084:68096	1091867	2	True				
ANR	1091985	ParameterType	sljit_sw		1091867	0					
ANR	1091986	Identifier	dstw		1091867	1					
ANR	1091987	CFGEntryNode	ENTRY		1091867		True				
ANR	1091988	CFGExitNode	EXIT		1091867		True				
ANR	1091989	Symbol	push_inst		1091867						
ANR	1091990	Symbol	TMP_REG2		1091867						
ANR	1091991	Symbol	check_sljit_emit_fast_enter		1091867						
ANR	1091992	Symbol	TMP_REG1		1091867						
ANR	1091993	Symbol	FAST_IS_REG		1091867						
ANR	1091994	Symbol	dst		1091867						
ANR	1091995	Symbol	D		1091867						
ANR	1091996	Symbol	SLJIT_MOV		1091867						
ANR	1091997	Symbol	SLJIT_SUCCESS		1091867						
ANR	1091998	Symbol	SLJIT_UNUSED		1091867						
ANR	1091999	Symbol	MFLR		1091867						
ANR	1092000	Symbol	compiler		1091867						
ANR	1092001	Symbol	dstw		1091867						
ANR	1092002	Symbol	WORD_DATA		1091867						
ANR	1092003	Symbol	emit_op		1091867						
ANR	1092004	Function	sljit_emit_fast_return	2030:0:68531:69123							
ANR	1092005	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1092004	0					
ANR	1092006	CompoundStatement		2031:0:68650:69123	1092004	0					
ANR	1092007	ExpressionStatement	CHECK_ERROR ( )	2032:1:68653:68666	1092004	0	True				
ANR	1092008	CallExpression	CHECK_ERROR ( )		1092004	0					
ANR	1092009	Callee	CHECK_ERROR		1092004	0					
ANR	1092010	Identifier	CHECK_ERROR		1092004	0					
ANR	1092011	ArgumentList			1092004	1					
ANR	1092012	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	2033:1:68669:68725	1092004	1	True				
ANR	1092013	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1092004	0					
ANR	1092014	Callee	CHECK		1092004	0					
ANR	1092015	Identifier	CHECK		1092004	0					
ANR	1092016	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1092004	1					
ANR	1092017	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1092004	0					
ANR	1092018	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1092004	0					
ANR	1092019	Callee	check_sljit_emit_fast_return		1092004	0					
ANR	1092020	Identifier	check_sljit_emit_fast_return		1092004	0					
ANR	1092021	ArgumentList	compiler		1092004	1					
ANR	1092022	Argument	compiler		1092004	0					
ANR	1092023	Identifier	compiler		1092004	0					
ANR	1092024	Argument	src		1092004	1					
ANR	1092025	Identifier	src		1092004	0					
ANR	1092026	Argument	srcw		1092004	2					
ANR	1092027	Identifier	srcw		1092004	0					
ANR	1092028	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2034:1:68728:68758	1092004	2	True				
ANR	1092029	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1092004	0					
ANR	1092030	Callee	ADJUST_LOCAL_OFFSET		1092004	0					
ANR	1092031	Identifier	ADJUST_LOCAL_OFFSET		1092004	0					
ANR	1092032	ArgumentList	src		1092004	1					
ANR	1092033	Argument	src		1092004	0					
ANR	1092034	Identifier	src		1092004	0					
ANR	1092035	Argument	srcw		1092004	1					
ANR	1092036	Identifier	srcw		1092004	0					
ANR	1092037	IfStatement	if ( FAST_IS_REG ( src ) )		1092004	3					
ANR	1092038	Condition	FAST_IS_REG ( src )	2036:5:68766:68781	1092004	0	True				
ANR	1092039	CallExpression	FAST_IS_REG ( src )		1092004	0					
ANR	1092040	Callee	FAST_IS_REG		1092004	0					
ANR	1092041	Identifier	FAST_IS_REG		1092004	0					
ANR	1092042	ArgumentList	src		1092004	1					
ANR	1092043	Argument	src		1092004	0					
ANR	1092044	Identifier	src		1092004	0					
ANR	1092045	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( src ) ) )"	2037:2:68786:68829	1092004	1	True				
ANR	1092046	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( src ) ) )"		1092004	0					
ANR	1092047	Callee	FAIL_IF		1092004	0					
ANR	1092048	Identifier	FAIL_IF		1092004	0					
ANR	1092049	ArgumentList	"push_inst ( compiler , MTLR | S ( src ) )"		1092004	1					
ANR	1092050	Argument	"push_inst ( compiler , MTLR | S ( src ) )"		1092004	0					
ANR	1092051	CallExpression	"push_inst ( compiler , MTLR | S ( src ) )"		1092004	0					
ANR	1092052	Callee	push_inst		1092004	0					
ANR	1092053	Identifier	push_inst		1092004	0					
ANR	1092054	ArgumentList	compiler		1092004	1					
ANR	1092055	Argument	compiler		1092004	0					
ANR	1092056	Identifier	compiler		1092004	0					
ANR	1092057	Argument	MTLR | S ( src )		1092004	1					
ANR	1092058	InclusiveOrExpression	MTLR | S ( src )		1092004	0		|			
ANR	1092059	Identifier	MTLR		1092004	0					
ANR	1092060	CallExpression	S ( src )		1092004	1					
ANR	1092061	Callee	S		1092004	0					
ANR	1092062	Identifier	S		1092004	0					
ANR	1092063	ArgumentList	src		1092004	1					
ANR	1092064	Argument	src		1092004	0					
ANR	1092065	Identifier	src		1092004	0					
ANR	1092066	ElseStatement	else		1092004	0					
ANR	1092067	CompoundStatement		8:6:186:186	1092004	0					
ANR	1092068	IfStatement	if ( src & SLJIT_MEM )		1092004	0					
ANR	1092069	Condition	src & SLJIT_MEM	2039:6:68845:68859	1092004	0	True				
ANR	1092070	BitAndExpression	src & SLJIT_MEM		1092004	0		&			
ANR	1092071	Identifier	src		1092004	0					
ANR	1092072	Identifier	SLJIT_MEM		1092004	1					
ANR	1092073	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2040:3:68865:68950	1092004	1	True				
ANR	1092074	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1092004	0					
ANR	1092075	Callee	FAIL_IF		1092004	0					
ANR	1092076	Identifier	FAIL_IF		1092004	0					
ANR	1092077	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1092004	1					
ANR	1092078	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1092004	0					
ANR	1092079	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1092004	0					
ANR	1092080	Callee	emit_op		1092004	0					
ANR	1092081	Identifier	emit_op		1092004	0					
ANR	1092082	ArgumentList	compiler		1092004	1					
ANR	1092083	Argument	compiler		1092004	0					
ANR	1092084	Identifier	compiler		1092004	0					
ANR	1092085	Argument	SLJIT_MOV		1092004	1					
ANR	1092086	Identifier	SLJIT_MOV		1092004	0					
ANR	1092087	Argument	WORD_DATA		1092004	2					
ANR	1092088	Identifier	WORD_DATA		1092004	0					
ANR	1092089	Argument	TMP_REG2		1092004	3					
ANR	1092090	Identifier	TMP_REG2		1092004	0					
ANR	1092091	Argument	0		1092004	4					
ANR	1092092	PrimaryExpression	0		1092004	0					
ANR	1092093	Argument	TMP_REG1		1092004	5					
ANR	1092094	Identifier	TMP_REG1		1092004	0					
ANR	1092095	Argument	0		1092004	6					
ANR	1092096	PrimaryExpression	0		1092004	0					
ANR	1092097	Argument	src		1092004	7					
ANR	1092098	Identifier	src		1092004	0					
ANR	1092099	Argument	srcw		1092004	8					
ANR	1092100	Identifier	srcw		1092004	0					
ANR	1092101	ElseStatement	else		1092004	0					
ANR	1092102	IfStatement	if ( src & SLJIT_IMM )		1092004	0					
ANR	1092103	Condition	src & SLJIT_IMM	2041:11:68963:68977	1092004	0	True				
ANR	1092104	BitAndExpression	src & SLJIT_IMM		1092004	0		&			
ANR	1092105	Identifier	src		1092004	0					
ANR	1092106	Identifier	SLJIT_IMM		1092004	1					
ANR	1092107	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"	2042:3:68983:69032	1092004	1	True				
ANR	1092108	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"		1092004	0					
ANR	1092109	Callee	FAIL_IF		1092004	0					
ANR	1092110	Identifier	FAIL_IF		1092004	0					
ANR	1092111	ArgumentList	"load_immediate ( compiler , TMP_REG2 , srcw )"		1092004	1					
ANR	1092112	Argument	"load_immediate ( compiler , TMP_REG2 , srcw )"		1092004	0					
ANR	1092113	CallExpression	"load_immediate ( compiler , TMP_REG2 , srcw )"		1092004	0					
ANR	1092114	Callee	load_immediate		1092004	0					
ANR	1092115	Identifier	load_immediate		1092004	0					
ANR	1092116	ArgumentList	compiler		1092004	1					
ANR	1092117	Argument	compiler		1092004	0					
ANR	1092118	Identifier	compiler		1092004	0					
ANR	1092119	Argument	TMP_REG2		1092004	1					
ANR	1092120	Identifier	TMP_REG2		1092004	0					
ANR	1092121	Argument	srcw		1092004	2					
ANR	1092122	Identifier	srcw		1092004	0					
ANR	1092123	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( TMP_REG2 ) ) )"	2043:2:69036:69084	1092004	1	True				
ANR	1092124	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( TMP_REG2 ) ) )"		1092004	0					
ANR	1092125	Callee	FAIL_IF		1092004	0					
ANR	1092126	Identifier	FAIL_IF		1092004	0					
ANR	1092127	ArgumentList	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1092004	1					
ANR	1092128	Argument	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1092004	0					
ANR	1092129	CallExpression	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1092004	0					
ANR	1092130	Callee	push_inst		1092004	0					
ANR	1092131	Identifier	push_inst		1092004	0					
ANR	1092132	ArgumentList	compiler		1092004	1					
ANR	1092133	Argument	compiler		1092004	0					
ANR	1092134	Identifier	compiler		1092004	0					
ANR	1092135	Argument	MTLR | S ( TMP_REG2 )		1092004	1					
ANR	1092136	InclusiveOrExpression	MTLR | S ( TMP_REG2 )		1092004	0		|			
ANR	1092137	Identifier	MTLR		1092004	0					
ANR	1092138	CallExpression	S ( TMP_REG2 )		1092004	1					
ANR	1092139	Callee	S		1092004	0					
ANR	1092140	Identifier	S		1092004	0					
ANR	1092141	ArgumentList	TMP_REG2		1092004	1					
ANR	1092142	Argument	TMP_REG2		1092004	0					
ANR	1092143	Identifier	TMP_REG2		1092004	0					
ANR	1092144	ReturnStatement	"return push_inst ( compiler , BLR ) ;"	2045:1:69090:69121	1092004	4	True				
ANR	1092145	CallExpression	"push_inst ( compiler , BLR )"		1092004	0					
ANR	1092146	Callee	push_inst		1092004	0					
ANR	1092147	Identifier	push_inst		1092004	0					
ANR	1092148	ArgumentList	compiler		1092004	1					
ANR	1092149	Argument	compiler		1092004	0					
ANR	1092150	Identifier	compiler		1092004	0					
ANR	1092151	Argument	BLR		1092004	1					
ANR	1092152	Identifier	BLR		1092004	0					
ANR	1092153	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1092004	1					
ANR	1092154	Identifier	sljit_emit_fast_return		1092004	2					
ANR	1092155	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1092004	3					
ANR	1092156	Parameter	struct sljit_compiler * compiler	2030:57:68588:68618	1092004	0	True				
ANR	1092157	ParameterType	struct sljit_compiler *		1092004	0					
ANR	1092158	Identifier	compiler		1092004	1					
ANR	1092159	Parameter	sljit_si src	2030:90:68621:68632	1092004	1	True				
ANR	1092160	ParameterType	sljit_si		1092004	0					
ANR	1092161	Identifier	src		1092004	1					
ANR	1092162	Parameter	sljit_sw srcw	2030:104:68635:68647	1092004	2	True				
ANR	1092163	ParameterType	sljit_sw		1092004	0					
ANR	1092164	Identifier	srcw		1092004	1					
ANR	1092165	CFGEntryNode	ENTRY		1092004		True				
ANR	1092166	CFGExitNode	EXIT		1092004		True				
ANR	1092167	Symbol	push_inst		1092004						
ANR	1092168	Symbol	TMP_REG2		1092004						
ANR	1092169	Symbol	TMP_REG1		1092004						
ANR	1092170	Symbol	FAST_IS_REG		1092004						
ANR	1092171	Symbol	src		1092004						
ANR	1092172	Symbol	SLJIT_MOV		1092004						
ANR	1092173	Symbol	srcw		1092004						
ANR	1092174	Symbol	SLJIT_MEM		1092004						
ANR	1092175	Symbol	MTLR		1092004						
ANR	1092176	Symbol	BLR		1092004						
ANR	1092177	Symbol	SLJIT_IMM		1092004						
ANR	1092178	Symbol	S		1092004						
ANR	1092179	Symbol	check_sljit_emit_fast_return		1092004						
ANR	1092180	Symbol	load_immediate		1092004						
ANR	1092181	Symbol	compiler		1092004						
ANR	1092182	Symbol	WORD_DATA		1092004						
ANR	1092183	Symbol	emit_op		1092004						
ANR	1092184	Function	sljit_emit_label	2052:25:69380:69802							
ANR	1092185	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1092184	0					
ANR	1092186	CompoundStatement		2053:0:69450:69802	1092184	0					
ANR	1092187	IdentifierDeclStatement	struct sljit_label * label ;	2054:1:69453:69478	1092184	0	True				
ANR	1092188	IdentifierDecl	* label		1092184	0					
ANR	1092189	IdentifierDeclType	struct sljit_label *		1092184	0					
ANR	1092190	Identifier	label		1092184	1					
ANR	1092191	ExpressionStatement	CHECK_ERROR_PTR ( )	2056:1:69482:69499	1092184	1	True				
ANR	1092192	CallExpression	CHECK_ERROR_PTR ( )		1092184	0					
ANR	1092193	Callee	CHECK_ERROR_PTR		1092184	0					
ANR	1092194	Identifier	CHECK_ERROR_PTR		1092184	0					
ANR	1092195	ArgumentList			1092184	1					
ANR	1092196	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2057:1:69502:69545	1092184	2	True				
ANR	1092197	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1092184	0					
ANR	1092198	Callee	CHECK_PTR		1092184	0					
ANR	1092199	Identifier	CHECK_PTR		1092184	0					
ANR	1092200	ArgumentList	check_sljit_emit_label ( compiler )		1092184	1					
ANR	1092201	Argument	check_sljit_emit_label ( compiler )		1092184	0					
ANR	1092202	CallExpression	check_sljit_emit_label ( compiler )		1092184	0					
ANR	1092203	Callee	check_sljit_emit_label		1092184	0					
ANR	1092204	Identifier	check_sljit_emit_label		1092184	0					
ANR	1092205	ArgumentList	compiler		1092184	1					
ANR	1092206	Argument	compiler		1092184	0					
ANR	1092207	Identifier	compiler		1092184	0					
ANR	1092208	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1092184	3					
ANR	1092209	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2059:5:69553:69620	1092184	0	True				
ANR	1092210	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1092184	0		&&			
ANR	1092211	PtrMemberAccess	compiler -> last_label		1092184	0					
ANR	1092212	Identifier	compiler		1092184	0					
ANR	1092213	Identifier	last_label		1092184	1					
ANR	1092214	EqualityExpression	compiler -> last_label -> size == compiler -> size		1092184	1		==			
ANR	1092215	PtrMemberAccess	compiler -> last_label -> size		1092184	0					
ANR	1092216	PtrMemberAccess	compiler -> last_label		1092184	0					
ANR	1092217	Identifier	compiler		1092184	0					
ANR	1092218	Identifier	last_label		1092184	1					
ANR	1092219	Identifier	size		1092184	1					
ANR	1092220	PtrMemberAccess	compiler -> size		1092184	1					
ANR	1092221	Identifier	compiler		1092184	0					
ANR	1092222	Identifier	size		1092184	1					
ANR	1092223	ReturnStatement	return compiler -> last_label ;	2060:2:69625:69652	1092184	1	True				
ANR	1092224	PtrMemberAccess	compiler -> last_label		1092184	0					
ANR	1092225	Identifier	compiler		1092184	0					
ANR	1092226	Identifier	last_label		1092184	1					
ANR	1092227	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2062:1:69656:69734	1092184	4	True				
ANR	1092228	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1092184	0		=			
ANR	1092229	Identifier	label		1092184	0					
ANR	1092230	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1092184	1					
ANR	1092231	CastTarget	struct sljit_label *		1092184	0					
ANR	1092232	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1092184	1					
ANR	1092233	Callee	ensure_abuf		1092184	0					
ANR	1092234	Identifier	ensure_abuf		1092184	0					
ANR	1092235	ArgumentList	compiler		1092184	1					
ANR	1092236	Argument	compiler		1092184	0					
ANR	1092237	Identifier	compiler		1092184	0					
ANR	1092238	Argument	sizeof ( struct sljit_label )		1092184	1					
ANR	1092239	SizeofExpression	sizeof ( struct sljit_label )		1092184	0					
ANR	1092240	Sizeof	sizeof		1092184	0					
ANR	1092241	SizeofOperand	struct sljit_label		1092184	1					
ANR	1092242	ExpressionStatement	PTR_FAIL_IF ( ! label )	2063:1:69737:69756	1092184	5	True				
ANR	1092243	CallExpression	PTR_FAIL_IF ( ! label )		1092184	0					
ANR	1092244	Callee	PTR_FAIL_IF		1092184	0					
ANR	1092245	Identifier	PTR_FAIL_IF		1092184	0					
ANR	1092246	ArgumentList	! label		1092184	1					
ANR	1092247	Argument	! label		1092184	0					
ANR	1092248	UnaryOperationExpression	! label		1092184	0					
ANR	1092249	UnaryOperator	!		1092184	0					
ANR	1092250	Identifier	label		1092184	1					
ANR	1092251	ExpressionStatement	"set_label ( label , compiler )"	2064:1:69759:69785	1092184	6	True				
ANR	1092252	CallExpression	"set_label ( label , compiler )"		1092184	0					
ANR	1092253	Callee	set_label		1092184	0					
ANR	1092254	Identifier	set_label		1092184	0					
ANR	1092255	ArgumentList	label		1092184	1					
ANR	1092256	Argument	label		1092184	0					
ANR	1092257	Identifier	label		1092184	0					
ANR	1092258	Argument	compiler		1092184	1					
ANR	1092259	Identifier	compiler		1092184	0					
ANR	1092260	ReturnStatement	return label ;	2065:1:69788:69800	1092184	7	True				
ANR	1092261	Identifier	label		1092184	0					
ANR	1092262	ReturnType	struct sljit_label *		1092184	1					
ANR	1092263	Identifier	sljit_emit_label		1092184	2					
ANR	1092264	ParameterList	struct sljit_compiler * compiler		1092184	3					
ANR	1092265	Parameter	struct sljit_compiler * compiler	2052:62:69417:69447	1092184	0	True				
ANR	1092266	ParameterType	struct sljit_compiler *		1092184	0					
ANR	1092267	Identifier	compiler		1092184	1					
ANR	1092268	CFGEntryNode	ENTRY		1092184		True				
ANR	1092269	CFGExitNode	EXIT		1092184		True				
ANR	1092270	Symbol	compiler -> last_label -> size		1092184						
ANR	1092271	Symbol	* compiler -> last_label		1092184						
ANR	1092272	Symbol	compiler -> last_label		1092184						
ANR	1092273	Symbol	* * compiler		1092184						
ANR	1092274	Symbol	compiler -> size		1092184						
ANR	1092275	Symbol	check_sljit_emit_label		1092184						
ANR	1092276	Symbol	label		1092184						
ANR	1092277	Symbol	* compiler		1092184						
ANR	1092278	Symbol	ensure_abuf		1092184						
ANR	1092279	Symbol	compiler		1092184						
ANR	1092280	Function	get_bo_bi_flags	2068:0:69805:71083							
ANR	1092281	FunctionDef	get_bo_bi_flags (sljit_si type)		1092280	0					
ANR	1092282	CompoundStatement		2069:0:69853:71083	1092280	0					
ANR	1092283	SwitchStatement	switch ( type )		1092280	0					
ANR	1092284	Condition	type	2070:9:69864:69867	1092280	0	True				
ANR	1092285	Identifier	type		1092280	0					
ANR	1092286	CompoundStatement		2:15:16:16	1092280	1					
ANR	1092287	Label	case SLJIT_EQUAL :	2071:1:69873:69889	1092280	0	True				
ANR	1092288	Identifier	SLJIT_EQUAL		1092280	0					
ANR	1092289	ReturnStatement	return ( 12 << 21 ) | ( 2 << 16 ) ;	2072:2:69893:69922	1092280	1	True				
ANR	1092290	InclusiveOrExpression	( 12 << 21 ) | ( 2 << 16 )		1092280	0		|			
ANR	1092291	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092292	PrimaryExpression	12		1092280	0					
ANR	1092293	PrimaryExpression	21		1092280	1					
ANR	1092294	ShiftExpression	2 << 16		1092280	1		<<			
ANR	1092295	PrimaryExpression	2		1092280	0					
ANR	1092296	PrimaryExpression	16		1092280	1					
ANR	1092297	Label	case SLJIT_NOT_EQUAL :	2074:1:69926:69946	1092280	2	True				
ANR	1092298	Identifier	SLJIT_NOT_EQUAL		1092280	0					
ANR	1092299	ReturnStatement	return ( 4 << 21 ) | ( 2 << 16 ) ;	2075:2:69950:69978	1092280	3	True				
ANR	1092300	InclusiveOrExpression	( 4 << 21 ) | ( 2 << 16 )		1092280	0		|			
ANR	1092301	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092302	PrimaryExpression	4		1092280	0					
ANR	1092303	PrimaryExpression	21		1092280	1					
ANR	1092304	ShiftExpression	2 << 16		1092280	1		<<			
ANR	1092305	PrimaryExpression	2		1092280	0					
ANR	1092306	PrimaryExpression	16		1092280	1					
ANR	1092307	Label	case SLJIT_LESS :	2077:1:69982:69997	1092280	4	True				
ANR	1092308	Identifier	SLJIT_LESS		1092280	0					
ANR	1092309	Label	case SLJIT_D_LESS :	2078:1:70000:70017	1092280	5	True				
ANR	1092310	Identifier	SLJIT_D_LESS		1092280	0					
ANR	1092311	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 0 ) << 16 ) ;	2079:2:70021:70056	1092280	6	True				
ANR	1092312	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 0 ) << 16 )		1092280	0		|			
ANR	1092313	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092314	PrimaryExpression	12		1092280	0					
ANR	1092315	PrimaryExpression	21		1092280	1					
ANR	1092316	ShiftExpression	( 4 + 0 ) << 16		1092280	1		<<			
ANR	1092317	AdditiveExpression	4 + 0		1092280	0		+			
ANR	1092318	PrimaryExpression	4		1092280	0					
ANR	1092319	PrimaryExpression	0		1092280	1					
ANR	1092320	PrimaryExpression	16		1092280	1					
ANR	1092321	Label	case SLJIT_GREATER_EQUAL :	2081:1:70060:70084	1092280	7	True				
ANR	1092322	Identifier	SLJIT_GREATER_EQUAL		1092280	0					
ANR	1092323	Label	case SLJIT_D_GREATER_EQUAL :	2082:1:70087:70113	1092280	8	True				
ANR	1092324	Identifier	SLJIT_D_GREATER_EQUAL		1092280	0					
ANR	1092325	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 0 ) << 16 ) ;	2083:2:70117:70151	1092280	9	True				
ANR	1092326	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 0 ) << 16 )		1092280	0		|			
ANR	1092327	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092328	PrimaryExpression	4		1092280	0					
ANR	1092329	PrimaryExpression	21		1092280	1					
ANR	1092330	ShiftExpression	( 4 + 0 ) << 16		1092280	1		<<			
ANR	1092331	AdditiveExpression	4 + 0		1092280	0		+			
ANR	1092332	PrimaryExpression	4		1092280	0					
ANR	1092333	PrimaryExpression	0		1092280	1					
ANR	1092334	PrimaryExpression	16		1092280	1					
ANR	1092335	Label	case SLJIT_GREATER :	2085:1:70155:70173	1092280	10	True				
ANR	1092336	Identifier	SLJIT_GREATER		1092280	0					
ANR	1092337	Label	case SLJIT_D_GREATER :	2086:1:70176:70196	1092280	11	True				
ANR	1092338	Identifier	SLJIT_D_GREATER		1092280	0					
ANR	1092339	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 1 ) << 16 ) ;	2087:2:70200:70235	1092280	12	True				
ANR	1092340	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 1 ) << 16 )		1092280	0		|			
ANR	1092341	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092342	PrimaryExpression	12		1092280	0					
ANR	1092343	PrimaryExpression	21		1092280	1					
ANR	1092344	ShiftExpression	( 4 + 1 ) << 16		1092280	1		<<			
ANR	1092345	AdditiveExpression	4 + 1		1092280	0		+			
ANR	1092346	PrimaryExpression	4		1092280	0					
ANR	1092347	PrimaryExpression	1		1092280	1					
ANR	1092348	PrimaryExpression	16		1092280	1					
ANR	1092349	Label	case SLJIT_LESS_EQUAL :	2089:1:70239:70260	1092280	13	True				
ANR	1092350	Identifier	SLJIT_LESS_EQUAL		1092280	0					
ANR	1092351	Label	case SLJIT_D_LESS_EQUAL :	2090:1:70263:70286	1092280	14	True				
ANR	1092352	Identifier	SLJIT_D_LESS_EQUAL		1092280	0					
ANR	1092353	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 1 ) << 16 ) ;	2091:2:70290:70324	1092280	15	True				
ANR	1092354	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 1 ) << 16 )		1092280	0		|			
ANR	1092355	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092356	PrimaryExpression	4		1092280	0					
ANR	1092357	PrimaryExpression	21		1092280	1					
ANR	1092358	ShiftExpression	( 4 + 1 ) << 16		1092280	1		<<			
ANR	1092359	AdditiveExpression	4 + 1		1092280	0		+			
ANR	1092360	PrimaryExpression	4		1092280	0					
ANR	1092361	PrimaryExpression	1		1092280	1					
ANR	1092362	PrimaryExpression	16		1092280	1					
ANR	1092363	Label	case SLJIT_SIG_LESS :	2093:1:70328:70347	1092280	16	True				
ANR	1092364	Identifier	SLJIT_SIG_LESS		1092280	0					
ANR	1092365	ReturnStatement	return ( 12 << 21 ) | ( 0 << 16 ) ;	2094:2:70351:70380	1092280	17	True				
ANR	1092366	InclusiveOrExpression	( 12 << 21 ) | ( 0 << 16 )		1092280	0		|			
ANR	1092367	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092368	PrimaryExpression	12		1092280	0					
ANR	1092369	PrimaryExpression	21		1092280	1					
ANR	1092370	ShiftExpression	0 << 16		1092280	1		<<			
ANR	1092371	PrimaryExpression	0		1092280	0					
ANR	1092372	PrimaryExpression	16		1092280	1					
ANR	1092373	Label	case SLJIT_SIG_GREATER_EQUAL :	2096:1:70384:70412	1092280	18	True				
ANR	1092374	Identifier	SLJIT_SIG_GREATER_EQUAL		1092280	0					
ANR	1092375	ReturnStatement	return ( 4 << 21 ) | ( 0 << 16 ) ;	2097:2:70416:70444	1092280	19	True				
ANR	1092376	InclusiveOrExpression	( 4 << 21 ) | ( 0 << 16 )		1092280	0		|			
ANR	1092377	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092378	PrimaryExpression	4		1092280	0					
ANR	1092379	PrimaryExpression	21		1092280	1					
ANR	1092380	ShiftExpression	0 << 16		1092280	1		<<			
ANR	1092381	PrimaryExpression	0		1092280	0					
ANR	1092382	PrimaryExpression	16		1092280	1					
ANR	1092383	Label	case SLJIT_SIG_GREATER :	2099:1:70448:70470	1092280	20	True				
ANR	1092384	Identifier	SLJIT_SIG_GREATER		1092280	0					
ANR	1092385	ReturnStatement	return ( 12 << 21 ) | ( 1 << 16 ) ;	2100:2:70474:70503	1092280	21	True				
ANR	1092386	InclusiveOrExpression	( 12 << 21 ) | ( 1 << 16 )		1092280	0		|			
ANR	1092387	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092388	PrimaryExpression	12		1092280	0					
ANR	1092389	PrimaryExpression	21		1092280	1					
ANR	1092390	ShiftExpression	1 << 16		1092280	1		<<			
ANR	1092391	PrimaryExpression	1		1092280	0					
ANR	1092392	PrimaryExpression	16		1092280	1					
ANR	1092393	Label	case SLJIT_SIG_LESS_EQUAL :	2102:1:70507:70532	1092280	22	True				
ANR	1092394	Identifier	SLJIT_SIG_LESS_EQUAL		1092280	0					
ANR	1092395	ReturnStatement	return ( 4 << 21 ) | ( 1 << 16 ) ;	2103:2:70536:70564	1092280	23	True				
ANR	1092396	InclusiveOrExpression	( 4 << 21 ) | ( 1 << 16 )		1092280	0		|			
ANR	1092397	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092398	PrimaryExpression	4		1092280	0					
ANR	1092399	PrimaryExpression	21		1092280	1					
ANR	1092400	ShiftExpression	1 << 16		1092280	1		<<			
ANR	1092401	PrimaryExpression	1		1092280	0					
ANR	1092402	PrimaryExpression	16		1092280	1					
ANR	1092403	Label	case SLJIT_OVERFLOW :	2105:1:70568:70587	1092280	24	True				
ANR	1092404	Identifier	SLJIT_OVERFLOW		1092280	0					
ANR	1092405	Label	case SLJIT_MUL_OVERFLOW :	2106:1:70590:70613	1092280	25	True				
ANR	1092406	Identifier	SLJIT_MUL_OVERFLOW		1092280	0					
ANR	1092407	ReturnStatement	return ( 12 << 21 ) | ( 3 << 16 ) ;	2107:2:70617:70646	1092280	26	True				
ANR	1092408	InclusiveOrExpression	( 12 << 21 ) | ( 3 << 16 )		1092280	0		|			
ANR	1092409	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092410	PrimaryExpression	12		1092280	0					
ANR	1092411	PrimaryExpression	21		1092280	1					
ANR	1092412	ShiftExpression	3 << 16		1092280	1		<<			
ANR	1092413	PrimaryExpression	3		1092280	0					
ANR	1092414	PrimaryExpression	16		1092280	1					
ANR	1092415	Label	case SLJIT_NOT_OVERFLOW :	2109:1:70650:70673	1092280	27	True				
ANR	1092416	Identifier	SLJIT_NOT_OVERFLOW		1092280	0					
ANR	1092417	Label	case SLJIT_MUL_NOT_OVERFLOW :	2110:1:70676:70703	1092280	28	True				
ANR	1092418	Identifier	SLJIT_MUL_NOT_OVERFLOW		1092280	0					
ANR	1092419	ReturnStatement	return ( 4 << 21 ) | ( 3 << 16 ) ;	2111:2:70707:70735	1092280	29	True				
ANR	1092420	InclusiveOrExpression	( 4 << 21 ) | ( 3 << 16 )		1092280	0		|			
ANR	1092421	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092422	PrimaryExpression	4		1092280	0					
ANR	1092423	PrimaryExpression	21		1092280	1					
ANR	1092424	ShiftExpression	3 << 16		1092280	1		<<			
ANR	1092425	PrimaryExpression	3		1092280	0					
ANR	1092426	PrimaryExpression	16		1092280	1					
ANR	1092427	Label	case SLJIT_D_EQUAL :	2113:1:70739:70757	1092280	30	True				
ANR	1092428	Identifier	SLJIT_D_EQUAL		1092280	0					
ANR	1092429	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 2 ) << 16 ) ;	2114:2:70761:70796	1092280	31	True				
ANR	1092430	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 2 ) << 16 )		1092280	0		|			
ANR	1092431	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092432	PrimaryExpression	12		1092280	0					
ANR	1092433	PrimaryExpression	21		1092280	1					
ANR	1092434	ShiftExpression	( 4 + 2 ) << 16		1092280	1		<<			
ANR	1092435	AdditiveExpression	4 + 2		1092280	0		+			
ANR	1092436	PrimaryExpression	4		1092280	0					
ANR	1092437	PrimaryExpression	2		1092280	1					
ANR	1092438	PrimaryExpression	16		1092280	1					
ANR	1092439	Label	case SLJIT_D_NOT_EQUAL :	2116:1:70800:70822	1092280	32	True				
ANR	1092440	Identifier	SLJIT_D_NOT_EQUAL		1092280	0					
ANR	1092441	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 2 ) << 16 ) ;	2117:2:70826:70860	1092280	33	True				
ANR	1092442	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 2 ) << 16 )		1092280	0		|			
ANR	1092443	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092444	PrimaryExpression	4		1092280	0					
ANR	1092445	PrimaryExpression	21		1092280	1					
ANR	1092446	ShiftExpression	( 4 + 2 ) << 16		1092280	1		<<			
ANR	1092447	AdditiveExpression	4 + 2		1092280	0		+			
ANR	1092448	PrimaryExpression	4		1092280	0					
ANR	1092449	PrimaryExpression	2		1092280	1					
ANR	1092450	PrimaryExpression	16		1092280	1					
ANR	1092451	Label	case SLJIT_D_UNORDERED :	2119:1:70864:70886	1092280	34	True				
ANR	1092452	Identifier	SLJIT_D_UNORDERED		1092280	0					
ANR	1092453	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 3 ) << 16 ) ;	2120:2:70890:70925	1092280	35	True				
ANR	1092454	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 3 ) << 16 )		1092280	0		|			
ANR	1092455	ShiftExpression	12 << 21		1092280	0		<<			
ANR	1092456	PrimaryExpression	12		1092280	0					
ANR	1092457	PrimaryExpression	21		1092280	1					
ANR	1092458	ShiftExpression	( 4 + 3 ) << 16		1092280	1		<<			
ANR	1092459	AdditiveExpression	4 + 3		1092280	0		+			
ANR	1092460	PrimaryExpression	4		1092280	0					
ANR	1092461	PrimaryExpression	3		1092280	1					
ANR	1092462	PrimaryExpression	16		1092280	1					
ANR	1092463	Label	case SLJIT_D_ORDERED :	2122:1:70929:70949	1092280	36	True				
ANR	1092464	Identifier	SLJIT_D_ORDERED		1092280	0					
ANR	1092465	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 3 ) << 16 ) ;	2123:2:70953:70987	1092280	37	True				
ANR	1092466	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 3 ) << 16 )		1092280	0		|			
ANR	1092467	ShiftExpression	4 << 21		1092280	0		<<			
ANR	1092468	PrimaryExpression	4		1092280	0					
ANR	1092469	PrimaryExpression	21		1092280	1					
ANR	1092470	ShiftExpression	( 4 + 3 ) << 16		1092280	1		<<			
ANR	1092471	AdditiveExpression	4 + 3		1092280	0		+			
ANR	1092472	PrimaryExpression	4		1092280	0					
ANR	1092473	PrimaryExpression	3		1092280	1					
ANR	1092474	PrimaryExpression	16		1092280	1					
ANR	1092475	Label	default :	2125:1:70991:70998	1092280	38	True				
ANR	1092476	Identifier	default		1092280	0					
ANR	1092477	ExpressionStatement	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )	2126:2:71002:71057	1092280	39	True				
ANR	1092478	CallExpression	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )		1092280	0					
ANR	1092479	Callee	SLJIT_ASSERT		1092280	0					
ANR	1092480	Identifier	SLJIT_ASSERT		1092280	0					
ANR	1092481	ArgumentList	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1092280	1					
ANR	1092482	Argument	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1092280	0					
ANR	1092483	AndExpression	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1092280	0		&&			
ANR	1092484	RelationalExpression	type >= SLJIT_JUMP		1092280	0		>=			
ANR	1092485	Identifier	type		1092280	0					
ANR	1092486	Identifier	SLJIT_JUMP		1092280	1					
ANR	1092487	RelationalExpression	type <= SLJIT_CALL3		1092280	1		<=			
ANR	1092488	Identifier	type		1092280	0					
ANR	1092489	Identifier	SLJIT_CALL3		1092280	1					
ANR	1092490	ReturnStatement	return ( 20 << 21 ) ;	2127:2:71061:71078	1092280	40	True				
ANR	1092491	ShiftExpression	20 << 21		1092280	0		<<			
ANR	1092492	PrimaryExpression	20		1092280	0					
ANR	1092493	PrimaryExpression	21		1092280	1					
ANR	1092494	ReturnType	static sljit_ins		1092280	1					
ANR	1092495	Identifier	get_bo_bi_flags		1092280	2					
ANR	1092496	ParameterList	sljit_si type		1092280	3					
ANR	1092497	Parameter	sljit_si type	2068:33:69838:69850	1092280	0	True				
ANR	1092498	ParameterType	sljit_si		1092280	0					
ANR	1092499	Identifier	type		1092280	1					
ANR	1092500	CFGEntryNode	ENTRY		1092280		True				
ANR	1092501	CFGExitNode	EXIT		1092280		True				
ANR	1092502	Symbol	SLJIT_JUMP		1092280						
ANR	1092503	Symbol	SLJIT_CALL3		1092280						
ANR	1092504	Symbol	type		1092280						
ANR	1092505	Function	sljit_emit_jump	2131:25:71111:72060							
ANR	1092506	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1092505	0					
ANR	1092507	CompoundStatement		2132:0:71194:72060	1092505	0					
ANR	1092508	IdentifierDeclStatement	struct sljit_jump * jump ;	2133:1:71197:71220	1092505	0	True				
ANR	1092509	IdentifierDecl	* jump		1092505	0					
ANR	1092510	IdentifierDeclType	struct sljit_jump *		1092505	0					
ANR	1092511	Identifier	jump		1092505	1					
ANR	1092512	IdentifierDeclStatement	sljit_ins bo_bi_flags ;	2134:1:71223:71244	1092505	1	True				
ANR	1092513	IdentifierDecl	bo_bi_flags		1092505	0					
ANR	1092514	IdentifierDeclType	sljit_ins		1092505	0					
ANR	1092515	Identifier	bo_bi_flags		1092505	1					
ANR	1092516	ExpressionStatement	CHECK_ERROR_PTR ( )	2136:1:71248:71265	1092505	2	True				
ANR	1092517	CallExpression	CHECK_ERROR_PTR ( )		1092505	0					
ANR	1092518	Callee	CHECK_ERROR_PTR		1092505	0					
ANR	1092519	Identifier	CHECK_ERROR_PTR		1092505	0					
ANR	1092520	ArgumentList			1092505	1					
ANR	1092521	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2137:1:71268:71316	1092505	3	True				
ANR	1092522	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1092505	0					
ANR	1092523	Callee	CHECK_PTR		1092505	0					
ANR	1092524	Identifier	CHECK_PTR		1092505	0					
ANR	1092525	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1092505	1					
ANR	1092526	Argument	"check_sljit_emit_jump ( compiler , type )"		1092505	0					
ANR	1092527	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1092505	0					
ANR	1092528	Callee	check_sljit_emit_jump		1092505	0					
ANR	1092529	Identifier	check_sljit_emit_jump		1092505	0					
ANR	1092530	ArgumentList	compiler		1092505	1					
ANR	1092531	Argument	compiler		1092505	0					
ANR	1092532	Identifier	compiler		1092505	0					
ANR	1092533	Argument	type		1092505	1					
ANR	1092534	Identifier	type		1092505	0					
ANR	1092535	ExpressionStatement	bo_bi_flags = get_bo_bi_flags ( type & 0xff )	2139:1:71320:71362	1092505	4	True				
ANR	1092536	AssignmentExpression	bo_bi_flags = get_bo_bi_flags ( type & 0xff )		1092505	0		=			
ANR	1092537	Identifier	bo_bi_flags		1092505	0					
ANR	1092538	CallExpression	get_bo_bi_flags ( type & 0xff )		1092505	1					
ANR	1092539	Callee	get_bo_bi_flags		1092505	0					
ANR	1092540	Identifier	get_bo_bi_flags		1092505	0					
ANR	1092541	ArgumentList	type & 0xff		1092505	1					
ANR	1092542	Argument	type & 0xff		1092505	0					
ANR	1092543	BitAndExpression	type & 0xff		1092505	0		&			
ANR	1092544	Identifier	type		1092505	0					
ANR	1092545	PrimaryExpression	0xff		1092505	1					
ANR	1092546	IfStatement	if ( ! bo_bi_flags )		1092505	5					
ANR	1092547	Condition	! bo_bi_flags	2140:5:71369:71380	1092505	0	True				
ANR	1092548	UnaryOperationExpression	! bo_bi_flags		1092505	0					
ANR	1092549	UnaryOperator	!		1092505	0					
ANR	1092550	Identifier	bo_bi_flags		1092505	1					
ANR	1092551	ReturnStatement	return NULL ;	2141:2:71385:71396	1092505	1	True				
ANR	1092552	Identifier	NULL		1092505	0					
ANR	1092553	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2143:1:71400:71475	1092505	6	True				
ANR	1092554	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092505	0		=			
ANR	1092555	Identifier	jump		1092505	0					
ANR	1092556	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092505	1					
ANR	1092557	CastTarget	struct sljit_jump *		1092505	0					
ANR	1092558	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092505	1					
ANR	1092559	Callee	ensure_abuf		1092505	0					
ANR	1092560	Identifier	ensure_abuf		1092505	0					
ANR	1092561	ArgumentList	compiler		1092505	1					
ANR	1092562	Argument	compiler		1092505	0					
ANR	1092563	Identifier	compiler		1092505	0					
ANR	1092564	Argument	sizeof ( struct sljit_jump )		1092505	1					
ANR	1092565	SizeofExpression	sizeof ( struct sljit_jump )		1092505	0					
ANR	1092566	Sizeof	sizeof		1092505	0					
ANR	1092567	SizeofOperand	struct sljit_jump		1092505	1					
ANR	1092568	ExpressionStatement	PTR_FAIL_IF ( ! jump )	2144:1:71478:71496	1092505	7	True				
ANR	1092569	CallExpression	PTR_FAIL_IF ( ! jump )		1092505	0					
ANR	1092570	Callee	PTR_FAIL_IF		1092505	0					
ANR	1092571	Identifier	PTR_FAIL_IF		1092505	0					
ANR	1092572	ArgumentList	! jump		1092505	1					
ANR	1092573	Argument	! jump		1092505	0					
ANR	1092574	UnaryOperationExpression	! jump		1092505	0					
ANR	1092575	UnaryOperator	!		1092505	0					
ANR	1092576	Identifier	jump		1092505	1					
ANR	1092577	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2145:1:71499:71553	1092505	8	True				
ANR	1092578	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1092505	0					
ANR	1092579	Callee	set_jump		1092505	0					
ANR	1092580	Identifier	set_jump		1092505	0					
ANR	1092581	ArgumentList	jump		1092505	1					
ANR	1092582	Argument	jump		1092505	0					
ANR	1092583	Identifier	jump		1092505	0					
ANR	1092584	Argument	compiler		1092505	1					
ANR	1092585	Identifier	compiler		1092505	0					
ANR	1092586	Argument	type & SLJIT_REWRITABLE_JUMP		1092505	2					
ANR	1092587	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1092505	0		&			
ANR	1092588	Identifier	type		1092505	0					
ANR	1092589	Identifier	SLJIT_REWRITABLE_JUMP		1092505	1					
ANR	1092590	ExpressionStatement	type &= 0xff	2146:1:71556:71568	1092505	9	True				
ANR	1092591	AssignmentExpression	type &= 0xff		1092505	0		&=			
ANR	1092592	Identifier	type		1092505	0					
ANR	1092593	PrimaryExpression	0xff		1092505	1					
ANR	1092594	IfStatement	if ( type < SLJIT_JUMP )		1092505	10					
ANR	1092595	Condition	type < SLJIT_JUMP	2149:5:71629:71645	1092505	0	True				
ANR	1092596	RelationalExpression	type < SLJIT_JUMP		1092505	0		<			
ANR	1092597	Identifier	type		1092505	0					
ANR	1092598	Identifier	SLJIT_JUMP		1092505	1					
ANR	1092599	ExpressionStatement	jump -> flags |= IS_COND	2150:2:71650:71672	1092505	1	True				
ANR	1092600	AssignmentExpression	jump -> flags |= IS_COND		1092505	0		|=			
ANR	1092601	PtrMemberAccess	jump -> flags		1092505	0					
ANR	1092602	Identifier	jump		1092505	0					
ANR	1092603	Identifier	flags		1092505	1					
ANR	1092604	Identifier	IS_COND		1092505	1					
ANR	1092605	IfStatement	if ( type >= SLJIT_CALL0 )		1092505	11					
ANR	1092606	Condition	type >= SLJIT_CALL0	2152:5:71756:71774	1092505	0	True				
ANR	1092607	RelationalExpression	type >= SLJIT_CALL0		1092505	0		>=			
ANR	1092608	Identifier	type		1092505	0					
ANR	1092609	Identifier	SLJIT_CALL0		1092505	1					
ANR	1092610	ExpressionStatement	jump -> flags |= IS_CALL	2153:2:71779:71801	1092505	1	True				
ANR	1092611	AssignmentExpression	jump -> flags |= IS_CALL		1092505	0		|=			
ANR	1092612	PtrMemberAccess	jump -> flags		1092505	0					
ANR	1092613	Identifier	jump		1092505	0					
ANR	1092614	Identifier	flags		1092505	1					
ANR	1092615	Identifier	IS_CALL		1092505	1					
ANR	1092616	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"	2156:1:71812:71862	1092505	12	True				
ANR	1092617	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"		1092505	0					
ANR	1092618	Callee	PTR_FAIL_IF		1092505	0					
ANR	1092619	Identifier	PTR_FAIL_IF		1092505	0					
ANR	1092620	ArgumentList	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092505	1					
ANR	1092621	Argument	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092505	0					
ANR	1092622	CallExpression	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092505	0					
ANR	1092623	Callee	emit_const		1092505	0					
ANR	1092624	Identifier	emit_const		1092505	0					
ANR	1092625	ArgumentList	compiler		1092505	1					
ANR	1092626	Argument	compiler		1092505	0					
ANR	1092627	Identifier	compiler		1092505	0					
ANR	1092628	Argument	TMP_CALL_REG		1092505	1					
ANR	1092629	Identifier	TMP_CALL_REG		1092505	0					
ANR	1092630	Argument	0		1092505	2					
ANR	1092631	PrimaryExpression	0		1092505	0					
ANR	1092632	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) ) )"	2157:1:71865:71922	1092505	13	True				
ANR	1092633	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) ) )"		1092505	0					
ANR	1092634	Callee	PTR_FAIL_IF		1092505	0					
ANR	1092635	Identifier	PTR_FAIL_IF		1092505	0					
ANR	1092636	ArgumentList	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1092505	1					
ANR	1092637	Argument	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1092505	0					
ANR	1092638	CallExpression	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1092505	0					
ANR	1092639	Callee	push_inst		1092505	0					
ANR	1092640	Identifier	push_inst		1092505	0					
ANR	1092641	ArgumentList	compiler		1092505	1					
ANR	1092642	Argument	compiler		1092505	0					
ANR	1092643	Identifier	compiler		1092505	0					
ANR	1092644	Argument	MTCTR | S ( TMP_CALL_REG )		1092505	1					
ANR	1092645	InclusiveOrExpression	MTCTR | S ( TMP_CALL_REG )		1092505	0		|			
ANR	1092646	Identifier	MTCTR		1092505	0					
ANR	1092647	CallExpression	S ( TMP_CALL_REG )		1092505	1					
ANR	1092648	Callee	S		1092505	0					
ANR	1092649	Identifier	S		1092505	0					
ANR	1092650	ArgumentList	TMP_CALL_REG		1092505	1					
ANR	1092651	Argument	TMP_CALL_REG		1092505	0					
ANR	1092652	Identifier	TMP_CALL_REG		1092505	0					
ANR	1092653	ExpressionStatement	jump -> addr = compiler -> size	2158:1:71925:71952	1092505	14	True				
ANR	1092654	AssignmentExpression	jump -> addr = compiler -> size		1092505	0		=			
ANR	1092655	PtrMemberAccess	jump -> addr		1092505	0					
ANR	1092656	Identifier	jump		1092505	0					
ANR	1092657	Identifier	addr		1092505	1					
ANR	1092658	PtrMemberAccess	compiler -> size		1092505	1					
ANR	1092659	Identifier	compiler		1092505	0					
ANR	1092660	Identifier	size		1092505	1					
ANR	1092661	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) )"	2159:1:71955:72044	1092505	15	True				
ANR	1092662	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) )"		1092505	0					
ANR	1092663	Callee	PTR_FAIL_IF		1092505	0					
ANR	1092664	Identifier	PTR_FAIL_IF		1092505	0					
ANR	1092665	ArgumentList	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1092505	1					
ANR	1092666	Argument	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1092505	0					
ANR	1092667	CallExpression	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1092505	0					
ANR	1092668	Callee	push_inst		1092505	0					
ANR	1092669	Identifier	push_inst		1092505	0					
ANR	1092670	ArgumentList	compiler		1092505	1					
ANR	1092671	Argument	compiler		1092505	0					
ANR	1092672	Identifier	compiler		1092505	0					
ANR	1092673	Argument	BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092505	1					
ANR	1092674	InclusiveOrExpression	BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092505	0		|			
ANR	1092675	Identifier	BCCTR		1092505	0					
ANR	1092676	InclusiveOrExpression	bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092505	1		|			
ANR	1092677	Identifier	bo_bi_flags		1092505	0					
ANR	1092678	ConditionalExpression	type >= SLJIT_FAST_CALL ? 1 : 0		1092505	1					
ANR	1092679	Condition	type >= SLJIT_FAST_CALL		1092505	0					
ANR	1092680	RelationalExpression	type >= SLJIT_FAST_CALL		1092505	0		>=			
ANR	1092681	Identifier	type		1092505	0					
ANR	1092682	Identifier	SLJIT_FAST_CALL		1092505	1					
ANR	1092683	PrimaryExpression	1		1092505	1					
ANR	1092684	PrimaryExpression	0		1092505	2					
ANR	1092685	ReturnStatement	return jump ;	2160:1:72047:72058	1092505	16	True				
ANR	1092686	Identifier	jump		1092505	0					
ANR	1092687	ReturnType	struct sljit_jump *		1092505	1					
ANR	1092688	Identifier	sljit_emit_jump		1092505	2					
ANR	1092689	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1092505	3					
ANR	1092690	Parameter	struct sljit_compiler * compiler	2131:60:71146:71176	1092505	0	True				
ANR	1092691	ParameterType	struct sljit_compiler *		1092505	0					
ANR	1092692	Identifier	compiler		1092505	1					
ANR	1092693	Parameter	sljit_si type	2131:93:71179:71191	1092505	1	True				
ANR	1092694	ParameterType	sljit_si		1092505	0					
ANR	1092695	Identifier	type		1092505	1					
ANR	1092696	CFGEntryNode	ENTRY		1092505		True				
ANR	1092697	CFGExitNode	EXIT		1092505		True				
ANR	1092698	Symbol	SLJIT_JUMP		1092505						
ANR	1092699	Symbol	* jump		1092505						
ANR	1092700	Symbol	TMP_CALL_REG		1092505						
ANR	1092701	Symbol	jump -> flags		1092505						
ANR	1092702	Symbol	* compiler		1092505						
ANR	1092703	Symbol	type		1092505						
ANR	1092704	Symbol	S		1092505						
ANR	1092705	Symbol	bo_bi_flags		1092505						
ANR	1092706	Symbol	SLJIT_FAST_CALL		1092505						
ANR	1092707	Symbol	SLJIT_REWRITABLE_JUMP		1092505						
ANR	1092708	Symbol	compiler		1092505						
ANR	1092709	Symbol	MTCTR		1092505						
ANR	1092710	Symbol	jump		1092505						
ANR	1092711	Symbol	push_inst		1092505						
ANR	1092712	Symbol	BCCTR		1092505						
ANR	1092713	Symbol	NULL		1092505						
ANR	1092714	Symbol	SLJIT_CALL0		1092505						
ANR	1092715	Symbol	jump -> addr		1092505						
ANR	1092716	Symbol	ensure_abuf		1092505						
ANR	1092717	Symbol	IS_CALL		1092505						
ANR	1092718	Symbol	get_bo_bi_flags		1092505						
ANR	1092719	Symbol	compiler -> size		1092505						
ANR	1092720	Symbol	IS_COND		1092505						
ANR	1092721	Symbol	check_sljit_emit_jump		1092505						
ANR	1092722	Symbol	emit_const		1092505						
ANR	1092723	Function	sljit_emit_ijump	2163:0:72063:73349							
ANR	1092724	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1092723	0					
ANR	1092725	CompoundStatement		2164:0:72191:73349	1092723	0					
ANR	1092726	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	2165:1:72194:72224	1092723	0	True				
ANR	1092727	IdentifierDecl	* jump = NULL		1092723	0					
ANR	1092728	IdentifierDeclType	struct sljit_jump *		1092723	0					
ANR	1092729	Identifier	jump		1092723	1					
ANR	1092730	AssignmentExpression	* jump = NULL		1092723	2		=			
ANR	1092731	Identifier	NULL		1092723	0					
ANR	1092732	Identifier	NULL		1092723	1					
ANR	1092733	IdentifierDeclStatement	sljit_si src_r ;	2166:1:72227:72241	1092723	1	True				
ANR	1092734	IdentifierDecl	src_r		1092723	0					
ANR	1092735	IdentifierDeclType	sljit_si		1092723	0					
ANR	1092736	Identifier	src_r		1092723	1					
ANR	1092737	ExpressionStatement	CHECK_ERROR ( )	2168:1:72245:72258	1092723	2	True				
ANR	1092738	CallExpression	CHECK_ERROR ( )		1092723	0					
ANR	1092739	Callee	CHECK_ERROR		1092723	0					
ANR	1092740	Identifier	CHECK_ERROR		1092723	0					
ANR	1092741	ArgumentList			1092723	1					
ANR	1092742	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2169:1:72261:72317	1092723	3	True				
ANR	1092743	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1092723	0					
ANR	1092744	Callee	CHECK		1092723	0					
ANR	1092745	Identifier	CHECK		1092723	0					
ANR	1092746	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1092723	1					
ANR	1092747	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1092723	0					
ANR	1092748	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1092723	0					
ANR	1092749	Callee	check_sljit_emit_ijump		1092723	0					
ANR	1092750	Identifier	check_sljit_emit_ijump		1092723	0					
ANR	1092751	ArgumentList	compiler		1092723	1					
ANR	1092752	Argument	compiler		1092723	0					
ANR	1092753	Identifier	compiler		1092723	0					
ANR	1092754	Argument	type		1092723	1					
ANR	1092755	Identifier	type		1092723	0					
ANR	1092756	Argument	src		1092723	2					
ANR	1092757	Identifier	src		1092723	0					
ANR	1092758	Argument	srcw		1092723	3					
ANR	1092759	Identifier	srcw		1092723	0					
ANR	1092760	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2170:1:72320:72350	1092723	4	True				
ANR	1092761	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1092723	0					
ANR	1092762	Callee	ADJUST_LOCAL_OFFSET		1092723	0					
ANR	1092763	Identifier	ADJUST_LOCAL_OFFSET		1092723	0					
ANR	1092764	ArgumentList	src		1092723	1					
ANR	1092765	Argument	src		1092723	0					
ANR	1092766	Identifier	src		1092723	0					
ANR	1092767	Argument	srcw		1092723	1					
ANR	1092768	Identifier	srcw		1092723	0					
ANR	1092769	IfStatement	if ( FAST_IS_REG ( src ) )		1092723	5					
ANR	1092770	Condition	FAST_IS_REG ( src )	2172:5:72358:72373	1092723	0	True				
ANR	1092771	CallExpression	FAST_IS_REG ( src )		1092723	0					
ANR	1092772	Callee	FAST_IS_REG		1092723	0					
ANR	1092773	Identifier	FAST_IS_REG		1092723	0					
ANR	1092774	ArgumentList	src		1092723	1					
ANR	1092775	Argument	src		1092723	0					
ANR	1092776	Identifier	src		1092723	0					
ANR	1092777	CompoundStatement		9:23:184:184	1092723	1					
ANR	1092778	IfStatement	if ( type >= SLJIT_CALL0 )		1092723	0					
ANR	1092779	Condition	type >= SLJIT_CALL0	2174:6:72461:72479	1092723	0	True				
ANR	1092780	RelationalExpression	type >= SLJIT_CALL0		1092723	0		>=			
ANR	1092781	Identifier	type		1092723	0					
ANR	1092782	Identifier	SLJIT_CALL0		1092723	1					
ANR	1092783	CompoundStatement		11:27:290:290	1092723	1					
ANR	1092784	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) ) )"	2175:3:72487:72555	1092723	0	True				
ANR	1092785	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) ) )"		1092723	0					
ANR	1092786	Callee	FAIL_IF		1092723	0					
ANR	1092787	Identifier	FAIL_IF		1092723	0					
ANR	1092788	ArgumentList	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1092723	1					
ANR	1092789	Argument	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1092723	0					
ANR	1092790	CallExpression	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1092723	0					
ANR	1092791	Callee	push_inst		1092723	0					
ANR	1092792	Identifier	push_inst		1092723	0					
ANR	1092793	ArgumentList	compiler		1092723	1					
ANR	1092794	Argument	compiler		1092723	0					
ANR	1092795	Identifier	compiler		1092723	0					
ANR	1092796	Argument	OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1092723	1					
ANR	1092797	InclusiveOrExpression	OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1092723	0		|			
ANR	1092798	Identifier	OR		1092723	0					
ANR	1092799	InclusiveOrExpression	S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1092723	1		|			
ANR	1092800	CallExpression	S ( src )		1092723	0					
ANR	1092801	Callee	S		1092723	0					
ANR	1092802	Identifier	S		1092723	0					
ANR	1092803	ArgumentList	src		1092723	1					
ANR	1092804	Argument	src		1092723	0					
ANR	1092805	Identifier	src		1092723	0					
ANR	1092806	InclusiveOrExpression	A ( TMP_CALL_REG ) | B ( src )		1092723	1		|			
ANR	1092807	CallExpression	A ( TMP_CALL_REG )		1092723	0					
ANR	1092808	Callee	A		1092723	0					
ANR	1092809	Identifier	A		1092723	0					
ANR	1092810	ArgumentList	TMP_CALL_REG		1092723	1					
ANR	1092811	Argument	TMP_CALL_REG		1092723	0					
ANR	1092812	Identifier	TMP_CALL_REG		1092723	0					
ANR	1092813	CallExpression	B ( src )		1092723	1					
ANR	1092814	Callee	B		1092723	0					
ANR	1092815	Identifier	B		1092723	0					
ANR	1092816	ArgumentList	src		1092723	1					
ANR	1092817	Argument	src		1092723	0					
ANR	1092818	Identifier	src		1092723	0					
ANR	1092819	ExpressionStatement	src_r = TMP_CALL_REG	2176:3:72560:72580	1092723	1	True				
ANR	1092820	AssignmentExpression	src_r = TMP_CALL_REG		1092723	0		=			
ANR	1092821	Identifier	src_r		1092723	0					
ANR	1092822	Identifier	TMP_CALL_REG		1092723	1					
ANR	1092823	ElseStatement	else		1092723	0					
ANR	1092824	ExpressionStatement	src_r = src	2179:3:72596:72607	1092723	0	True				
ANR	1092825	AssignmentExpression	src_r = src		1092723	0		=			
ANR	1092826	Identifier	src_r		1092723	0					
ANR	1092827	Identifier	src		1092723	1					
ANR	1092828	ElseStatement	else		1092723	0					
ANR	1092829	IfStatement	if ( src & SLJIT_IMM )		1092723	0					
ANR	1092830	Condition	src & SLJIT_IMM	2183:12:72649:72663	1092723	0	True				
ANR	1092831	BitAndExpression	src & SLJIT_IMM		1092723	0		&			
ANR	1092832	Identifier	src		1092723	0					
ANR	1092833	Identifier	SLJIT_IMM		1092723	1					
ANR	1092834	CompoundStatement		20:29:474:474	1092723	1					
ANR	1092835	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2184:2:72670:72745	1092723	0	True				
ANR	1092836	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092723	0		=			
ANR	1092837	Identifier	jump		1092723	0					
ANR	1092838	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092723	1					
ANR	1092839	CastTarget	struct sljit_jump *		1092723	0					
ANR	1092840	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1092723	1					
ANR	1092841	Callee	ensure_abuf		1092723	0					
ANR	1092842	Identifier	ensure_abuf		1092723	0					
ANR	1092843	ArgumentList	compiler		1092723	1					
ANR	1092844	Argument	compiler		1092723	0					
ANR	1092845	Identifier	compiler		1092723	0					
ANR	1092846	Argument	sizeof ( struct sljit_jump )		1092723	1					
ANR	1092847	SizeofExpression	sizeof ( struct sljit_jump )		1092723	0					
ANR	1092848	Sizeof	sizeof		1092723	0					
ANR	1092849	SizeofOperand	struct sljit_jump		1092723	1					
ANR	1092850	ExpressionStatement	FAIL_IF ( ! jump )	2185:2:72749:72763	1092723	1	True				
ANR	1092851	CallExpression	FAIL_IF ( ! jump )		1092723	0					
ANR	1092852	Callee	FAIL_IF		1092723	0					
ANR	1092853	Identifier	FAIL_IF		1092723	0					
ANR	1092854	ArgumentList	! jump		1092723	1					
ANR	1092855	Argument	! jump		1092723	0					
ANR	1092856	UnaryOperationExpression	! jump		1092723	0					
ANR	1092857	UnaryOperator	!		1092723	0					
ANR	1092858	Identifier	jump		1092723	1					
ANR	1092859	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR )"	2186:2:72767:72802	1092723	2	True				
ANR	1092860	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR )"		1092723	0					
ANR	1092861	Callee	set_jump		1092723	0					
ANR	1092862	Identifier	set_jump		1092723	0					
ANR	1092863	ArgumentList	jump		1092723	1					
ANR	1092864	Argument	jump		1092723	0					
ANR	1092865	Identifier	jump		1092723	0					
ANR	1092866	Argument	compiler		1092723	1					
ANR	1092867	Identifier	compiler		1092723	0					
ANR	1092868	Argument	JUMP_ADDR		1092723	2					
ANR	1092869	Identifier	JUMP_ADDR		1092723	0					
ANR	1092870	ExpressionStatement	jump -> u . target = srcw	2187:2:72806:72827	1092723	3	True				
ANR	1092871	AssignmentExpression	jump -> u . target = srcw		1092723	0		=			
ANR	1092872	MemberAccess	jump -> u . target		1092723	0					
ANR	1092873	PtrMemberAccess	jump -> u		1092723	0					
ANR	1092874	Identifier	jump		1092723	0					
ANR	1092875	Identifier	u		1092723	1					
ANR	1092876	Identifier	target		1092723	1					
ANR	1092877	Identifier	srcw		1092723	1					
ANR	1092878	IfStatement	if ( type >= SLJIT_CALL0 )		1092723	4					
ANR	1092879	Condition	type >= SLJIT_CALL0	2189:6:72912:72930	1092723	0	True				
ANR	1092880	RelationalExpression	type >= SLJIT_CALL0		1092723	0		>=			
ANR	1092881	Identifier	type		1092723	0					
ANR	1092882	Identifier	SLJIT_CALL0		1092723	1					
ANR	1092883	ExpressionStatement	jump -> flags |= IS_CALL	2190:3:72936:72958	1092723	1	True				
ANR	1092884	AssignmentExpression	jump -> flags |= IS_CALL		1092723	0		|=			
ANR	1092885	PtrMemberAccess	jump -> flags		1092723	0					
ANR	1092886	Identifier	jump		1092723	0					
ANR	1092887	Identifier	flags		1092723	1					
ANR	1092888	Identifier	IS_CALL		1092723	1					
ANR	1092889	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"	2192:2:72969:73015	1092723	5	True				
ANR	1092890	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"		1092723	0					
ANR	1092891	Callee	FAIL_IF		1092723	0					
ANR	1092892	Identifier	FAIL_IF		1092723	0					
ANR	1092893	ArgumentList	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092723	1					
ANR	1092894	Argument	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092723	0					
ANR	1092895	CallExpression	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1092723	0					
ANR	1092896	Callee	emit_const		1092723	0					
ANR	1092897	Identifier	emit_const		1092723	0					
ANR	1092898	ArgumentList	compiler		1092723	1					
ANR	1092899	Argument	compiler		1092723	0					
ANR	1092900	Identifier	compiler		1092723	0					
ANR	1092901	Argument	TMP_CALL_REG		1092723	1					
ANR	1092902	Identifier	TMP_CALL_REG		1092723	0					
ANR	1092903	Argument	0		1092723	2					
ANR	1092904	PrimaryExpression	0		1092723	0					
ANR	1092905	ExpressionStatement	src_r = TMP_CALL_REG	2193:2:73019:73039	1092723	6	True				
ANR	1092906	AssignmentExpression	src_r = TMP_CALL_REG		1092723	0		=			
ANR	1092907	Identifier	src_r		1092723	0					
ANR	1092908	Identifier	TMP_CALL_REG		1092723	1					
ANR	1092909	ElseStatement	else		1092723	0					
ANR	1092910	CompoundStatement		32:6:858:858	1092723	0					
ANR	1092911	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw ) )"	2196:2:73054:73143	1092723	0	True				
ANR	1092912	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw ) )"		1092723	0					
ANR	1092913	Callee	FAIL_IF		1092723	0					
ANR	1092914	Identifier	FAIL_IF		1092723	0					
ANR	1092915	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1092723	1					
ANR	1092916	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1092723	0					
ANR	1092917	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1092723	0					
ANR	1092918	Callee	emit_op		1092723	0					
ANR	1092919	Identifier	emit_op		1092723	0					
ANR	1092920	ArgumentList	compiler		1092723	1					
ANR	1092921	Argument	compiler		1092723	0					
ANR	1092922	Identifier	compiler		1092723	0					
ANR	1092923	Argument	SLJIT_MOV		1092723	1					
ANR	1092924	Identifier	SLJIT_MOV		1092723	0					
ANR	1092925	Argument	WORD_DATA		1092723	2					
ANR	1092926	Identifier	WORD_DATA		1092723	0					
ANR	1092927	Argument	TMP_CALL_REG		1092723	3					
ANR	1092928	Identifier	TMP_CALL_REG		1092723	0					
ANR	1092929	Argument	0		1092723	4					
ANR	1092930	PrimaryExpression	0		1092723	0					
ANR	1092931	Argument	TMP_REG1		1092723	5					
ANR	1092932	Identifier	TMP_REG1		1092723	0					
ANR	1092933	Argument	0		1092723	6					
ANR	1092934	PrimaryExpression	0		1092723	0					
ANR	1092935	Argument	src		1092723	7					
ANR	1092936	Identifier	src		1092723	0					
ANR	1092937	Argument	srcw		1092723	8					
ANR	1092938	Identifier	srcw		1092723	0					
ANR	1092939	ExpressionStatement	src_r = TMP_CALL_REG	2197:2:73147:73167	1092723	1	True				
ANR	1092940	AssignmentExpression	src_r = TMP_CALL_REG		1092723	0		=			
ANR	1092941	Identifier	src_r		1092723	0					
ANR	1092942	Identifier	TMP_CALL_REG		1092723	1					
ANR	1092943	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTCTR | S ( src_r ) ) )"	2200:1:73174:73220	1092723	6	True				
ANR	1092944	CallExpression	"FAIL_IF ( push_inst ( compiler , MTCTR | S ( src_r ) ) )"		1092723	0					
ANR	1092945	Callee	FAIL_IF		1092723	0					
ANR	1092946	Identifier	FAIL_IF		1092723	0					
ANR	1092947	ArgumentList	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1092723	1					
ANR	1092948	Argument	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1092723	0					
ANR	1092949	CallExpression	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1092723	0					
ANR	1092950	Callee	push_inst		1092723	0					
ANR	1092951	Identifier	push_inst		1092723	0					
ANR	1092952	ArgumentList	compiler		1092723	1					
ANR	1092953	Argument	compiler		1092723	0					
ANR	1092954	Identifier	compiler		1092723	0					
ANR	1092955	Argument	MTCTR | S ( src_r )		1092723	1					
ANR	1092956	InclusiveOrExpression	MTCTR | S ( src_r )		1092723	0		|			
ANR	1092957	Identifier	MTCTR		1092723	0					
ANR	1092958	CallExpression	S ( src_r )		1092723	1					
ANR	1092959	Callee	S		1092723	0					
ANR	1092960	Identifier	S		1092723	0					
ANR	1092961	ArgumentList	src_r		1092723	1					
ANR	1092962	Argument	src_r		1092723	0					
ANR	1092963	Identifier	src_r		1092723	0					
ANR	1092964	IfStatement	if ( jump )		1092723	7					
ANR	1092965	Condition	jump	2201:5:73227:73230	1092723	0	True				
ANR	1092966	Identifier	jump		1092723	0					
ANR	1092967	ExpressionStatement	jump -> addr = compiler -> size	2202:2:73235:73262	1092723	1	True				
ANR	1092968	AssignmentExpression	jump -> addr = compiler -> size		1092723	0		=			
ANR	1092969	PtrMemberAccess	jump -> addr		1092723	0					
ANR	1092970	Identifier	jump		1092723	0					
ANR	1092971	Identifier	addr		1092723	1					
ANR	1092972	PtrMemberAccess	compiler -> size		1092723	1					
ANR	1092973	Identifier	compiler		1092723	0					
ANR	1092974	Identifier	size		1092723	1					
ANR	1092975	ReturnStatement	"return push_inst ( compiler , BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) ;"	2203:1:73265:73347	1092723	8	True				
ANR	1092976	CallExpression	"push_inst ( compiler , BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1092723	0					
ANR	1092977	Callee	push_inst		1092723	0					
ANR	1092978	Identifier	push_inst		1092723	0					
ANR	1092979	ArgumentList	compiler		1092723	1					
ANR	1092980	Argument	compiler		1092723	0					
ANR	1092981	Identifier	compiler		1092723	0					
ANR	1092982	Argument	BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092723	1					
ANR	1092983	InclusiveOrExpression	BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092723	0		|			
ANR	1092984	Identifier	BCCTR		1092723	0					
ANR	1092985	InclusiveOrExpression	( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1092723	1		|			
ANR	1092986	ShiftExpression	20 << 21		1092723	0		<<			
ANR	1092987	PrimaryExpression	20		1092723	0					
ANR	1092988	PrimaryExpression	21		1092723	1					
ANR	1092989	ConditionalExpression	type >= SLJIT_FAST_CALL ? 1 : 0		1092723	1					
ANR	1092990	Condition	type >= SLJIT_FAST_CALL		1092723	0					
ANR	1092991	RelationalExpression	type >= SLJIT_FAST_CALL		1092723	0		>=			
ANR	1092992	Identifier	type		1092723	0					
ANR	1092993	Identifier	SLJIT_FAST_CALL		1092723	1					
ANR	1092994	PrimaryExpression	1		1092723	1					
ANR	1092995	PrimaryExpression	0		1092723	2					
ANR	1092996	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1092723	1					
ANR	1092997	Identifier	sljit_emit_ijump		1092723	2					
ANR	1092998	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1092723	3					
ANR	1092999	Parameter	struct sljit_compiler * compiler	2163:51:72114:72144	1092723	0	True				
ANR	1093000	ParameterType	struct sljit_compiler *		1092723	0					
ANR	1093001	Identifier	compiler		1092723	1					
ANR	1093002	Parameter	sljit_si type	2163:84:72147:72159	1092723	1	True				
ANR	1093003	ParameterType	sljit_si		1092723	0					
ANR	1093004	Identifier	type		1092723	1					
ANR	1093005	Parameter	sljit_si src	2163:99:72162:72173	1092723	2	True				
ANR	1093006	ParameterType	sljit_si		1092723	0					
ANR	1093007	Identifier	src		1092723	1					
ANR	1093008	Parameter	sljit_sw srcw	2163:113:72176:72188	1092723	3	True				
ANR	1093009	ParameterType	sljit_sw		1092723	0					
ANR	1093010	Identifier	srcw		1092723	1					
ANR	1093011	CFGEntryNode	ENTRY		1092723		True				
ANR	1093012	CFGExitNode	EXIT		1092723		True				
ANR	1093013	Symbol	check_sljit_emit_ijump		1092723						
ANR	1093014	Symbol	A		1092723						
ANR	1093015	Symbol	B		1092723						
ANR	1093016	Symbol	TMP_REG1		1092723						
ANR	1093017	Symbol	* jump		1092723						
ANR	1093018	Symbol	jump -> u		1092723						
ANR	1093019	Symbol	SLJIT_MOV		1092723						
ANR	1093020	Symbol	TMP_CALL_REG		1092723						
ANR	1093021	Symbol	jump -> flags		1092723						
ANR	1093022	Symbol	JUMP_ADDR		1092723						
ANR	1093023	Symbol	* compiler		1092723						
ANR	1093024	Symbol	type		1092723						
ANR	1093025	Symbol	SLJIT_IMM		1092723						
ANR	1093026	Symbol	S		1092723						
ANR	1093027	Symbol	SLJIT_FAST_CALL		1092723						
ANR	1093028	Symbol	compiler		1092723						
ANR	1093029	Symbol	src_r		1092723						
ANR	1093030	Symbol	emit_op		1092723						
ANR	1093031	Symbol	WORD_DATA		1092723						
ANR	1093032	Symbol	MTCTR		1092723						
ANR	1093033	Symbol	jump		1092723						
ANR	1093034	Symbol	push_inst		1092723						
ANR	1093035	Symbol	BCCTR		1092723						
ANR	1093036	Symbol	NULL		1092723						
ANR	1093037	Symbol	FAST_IS_REG		1092723						
ANR	1093038	Symbol	OR		1092723						
ANR	1093039	Symbol	src		1092723						
ANR	1093040	Symbol	srcw		1092723						
ANR	1093041	Symbol	SLJIT_CALL0		1092723						
ANR	1093042	Symbol	jump -> addr		1092723						
ANR	1093043	Symbol	ensure_abuf		1092723						
ANR	1093044	Symbol	IS_CALL		1092723						
ANR	1093045	Symbol	compiler -> size		1092723						
ANR	1093046	Symbol	jump -> u . target		1092723						
ANR	1093047	Symbol	emit_const		1092723						
ANR	1093048	Function	sljit_emit_op_flags	2214:0:73675:76551							
ANR	1093049	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1093048	0					
ANR	1093050	CompoundStatement		2218:0:73851:76551	1093048	0					
ANR	1093051	IdentifierDeclStatement	"sljit_si reg , input_flags ;"	2219:1:73854:73879	1093048	0	True				
ANR	1093052	IdentifierDecl	reg		1093048	0					
ANR	1093053	IdentifierDeclType	sljit_si		1093048	0					
ANR	1093054	Identifier	reg		1093048	1					
ANR	1093055	IdentifierDecl	input_flags		1093048	1					
ANR	1093056	IdentifierDeclType	sljit_si		1093048	0					
ANR	1093057	Identifier	input_flags		1093048	1					
ANR	1093058	IdentifierDeclStatement	sljit_si flags = GET_ALL_FLAGS ( op ) ;	2220:1:73882:73916	1093048	1	True				
ANR	1093059	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1093048	0					
ANR	1093060	IdentifierDeclType	sljit_si		1093048	0					
ANR	1093061	Identifier	flags		1093048	1					
ANR	1093062	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1093048	2		=			
ANR	1093063	Identifier	flags		1093048	0					
ANR	1093064	CallExpression	GET_ALL_FLAGS ( op )		1093048	1					
ANR	1093065	Callee	GET_ALL_FLAGS		1093048	0					
ANR	1093066	Identifier	GET_ALL_FLAGS		1093048	0					
ANR	1093067	ArgumentList	op		1093048	1					
ANR	1093068	Argument	op		1093048	0					
ANR	1093069	Identifier	op		1093048	0					
ANR	1093070	IdentifierDeclStatement	sljit_sw original_dstw = dstw ;	2221:1:73919:73948	1093048	2	True				
ANR	1093071	IdentifierDecl	original_dstw = dstw		1093048	0					
ANR	1093072	IdentifierDeclType	sljit_sw		1093048	0					
ANR	1093073	Identifier	original_dstw		1093048	1					
ANR	1093074	AssignmentExpression	original_dstw = dstw		1093048	2		=			
ANR	1093075	Identifier	dstw		1093048	0					
ANR	1093076	Identifier	dstw		1093048	1					
ANR	1093077	ExpressionStatement	CHECK_ERROR ( )	2223:1:73952:73965	1093048	3	True				
ANR	1093078	CallExpression	CHECK_ERROR ( )		1093048	0					
ANR	1093079	Callee	CHECK_ERROR		1093048	0					
ANR	1093080	Identifier	CHECK_ERROR		1093048	0					
ANR	1093081	ArgumentList			1093048	1					
ANR	1093082	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2224:1:73968:74042	1093048	4	True				
ANR	1093083	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1093048	0					
ANR	1093084	Callee	CHECK		1093048	0					
ANR	1093085	Identifier	CHECK		1093048	0					
ANR	1093086	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1093048	1					
ANR	1093087	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1093048	0					
ANR	1093088	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1093048	0					
ANR	1093089	Callee	check_sljit_emit_op_flags		1093048	0					
ANR	1093090	Identifier	check_sljit_emit_op_flags		1093048	0					
ANR	1093091	ArgumentList	compiler		1093048	1					
ANR	1093092	Argument	compiler		1093048	0					
ANR	1093093	Identifier	compiler		1093048	0					
ANR	1093094	Argument	op		1093048	1					
ANR	1093095	Identifier	op		1093048	0					
ANR	1093096	Argument	dst		1093048	2					
ANR	1093097	Identifier	dst		1093048	0					
ANR	1093098	Argument	dstw		1093048	3					
ANR	1093099	Identifier	dstw		1093048	0					
ANR	1093100	Argument	src		1093048	4					
ANR	1093101	Identifier	src		1093048	0					
ANR	1093102	Argument	srcw		1093048	5					
ANR	1093103	Identifier	srcw		1093048	0					
ANR	1093104	Argument	type		1093048	6					
ANR	1093105	Identifier	type		1093048	0					
ANR	1093106	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2225:1:74045:74075	1093048	5	True				
ANR	1093107	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1093048	0					
ANR	1093108	Callee	ADJUST_LOCAL_OFFSET		1093048	0					
ANR	1093109	Identifier	ADJUST_LOCAL_OFFSET		1093048	0					
ANR	1093110	ArgumentList	dst		1093048	1					
ANR	1093111	Argument	dst		1093048	0					
ANR	1093112	Identifier	dst		1093048	0					
ANR	1093113	Argument	dstw		1093048	1					
ANR	1093114	Identifier	dstw		1093048	0					
ANR	1093115	IfStatement	if ( dst == SLJIT_UNUSED )		1093048	6					
ANR	1093116	Condition	dst == SLJIT_UNUSED	2227:5:74083:74101	1093048	0	True				
ANR	1093117	EqualityExpression	dst == SLJIT_UNUSED		1093048	0		==			
ANR	1093118	Identifier	dst		1093048	0					
ANR	1093119	Identifier	SLJIT_UNUSED		1093048	1					
ANR	1093120	ReturnStatement	return SLJIT_SUCCESS ;	2228:2:74106:74126	1093048	1	True				
ANR	1093121	Identifier	SLJIT_SUCCESS		1093048	0					
ANR	1093122	ExpressionStatement	op = GET_OPCODE ( op )	2230:1:74130:74149	1093048	7	True				
ANR	1093123	AssignmentExpression	op = GET_OPCODE ( op )		1093048	0		=			
ANR	1093124	Identifier	op		1093048	0					
ANR	1093125	CallExpression	GET_OPCODE ( op )		1093048	1					
ANR	1093126	Callee	GET_OPCODE		1093048	0					
ANR	1093127	Identifier	GET_OPCODE		1093048	0					
ANR	1093128	ArgumentList	op		1093048	1					
ANR	1093129	Argument	op		1093048	0					
ANR	1093130	Identifier	op		1093048	0					
ANR	1093131	ExpressionStatement	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2	2231:1:74152:74211	1093048	8	True				
ANR	1093132	AssignmentExpression	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1093048	0		=			
ANR	1093133	Identifier	reg		1093048	0					
ANR	1093134	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1093048	1					
ANR	1093135	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1093048	0					
ANR	1093136	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1093048	0		&&			
ANR	1093137	RelationalExpression	op < SLJIT_ADD		1093048	0		<			
ANR	1093138	Identifier	op		1093048	0					
ANR	1093139	Identifier	SLJIT_ADD		1093048	1					
ANR	1093140	CallExpression	FAST_IS_REG ( dst )		1093048	1					
ANR	1093141	Callee	FAST_IS_REG		1093048	0					
ANR	1093142	Identifier	FAST_IS_REG		1093048	0					
ANR	1093143	ArgumentList	dst		1093048	1					
ANR	1093144	Argument	dst		1093048	0					
ANR	1093145	Identifier	dst		1093048	0					
ANR	1093146	Identifier	dst		1093048	1					
ANR	1093147	Identifier	TMP_REG2		1093048	2					
ANR	1093148	ExpressionStatement	compiler -> cache_arg = 0	2233:1:74215:74238	1093048	9	True				
ANR	1093149	AssignmentExpression	compiler -> cache_arg = 0		1093048	0		=			
ANR	1093150	PtrMemberAccess	compiler -> cache_arg		1093048	0					
ANR	1093151	Identifier	compiler		1093048	0					
ANR	1093152	Identifier	cache_arg		1093048	1					
ANR	1093153	PrimaryExpression	0		1093048	1					
ANR	1093154	ExpressionStatement	compiler -> cache_argw = 0	2234:1:74241:74265	1093048	10	True				
ANR	1093155	AssignmentExpression	compiler -> cache_argw = 0		1093048	0		=			
ANR	1093156	PtrMemberAccess	compiler -> cache_argw		1093048	0					
ANR	1093157	Identifier	compiler		1093048	0					
ANR	1093158	Identifier	cache_argw		1093048	1					
ANR	1093159	PrimaryExpression	0		1093048	1					
ANR	1093160	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1093048	11					
ANR	1093161	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	2235:5:74272:74307	1093048	0	True				
ANR	1093162	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1093048	0		&&			
ANR	1093163	RelationalExpression	op >= SLJIT_ADD		1093048	0		>=			
ANR	1093164	Identifier	op		1093048	0					
ANR	1093165	Identifier	SLJIT_ADD		1093048	1					
ANR	1093166	BitAndExpression	src & SLJIT_MEM		1093048	1		&			
ANR	1093167	Identifier	src		1093048	0					
ANR	1093168	Identifier	SLJIT_MEM		1093048	1					
ANR	1093169	CompoundStatement		18:43:458:458	1093048	1					
ANR	1093170	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2236:2:74314:74344	1093048	0	True				
ANR	1093171	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1093048	0					
ANR	1093172	Callee	ADJUST_LOCAL_OFFSET		1093048	0					
ANR	1093173	Identifier	ADJUST_LOCAL_OFFSET		1093048	0					
ANR	1093174	ArgumentList	src		1093048	1					
ANR	1093175	Argument	src		1093048	0					
ANR	1093176	Identifier	src		1093048	0					
ANR	1093177	Argument	srcw		1093048	1					
ANR	1093178	Identifier	srcw		1093048	0					
ANR	1093179	ExpressionStatement	input_flags = ( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA	2238:2:74405:74464	1093048	1	True				
ANR	1093180	AssignmentExpression	input_flags = ( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1093048	0		=			
ANR	1093181	Identifier	input_flags		1093048	0					
ANR	1093182	ConditionalExpression	( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1093048	1					
ANR	1093183	Condition	flags & SLJIT_INT_OP		1093048	0					
ANR	1093184	BitAndExpression	flags & SLJIT_INT_OP		1093048	0		&			
ANR	1093185	Identifier	flags		1093048	0					
ANR	1093186	Identifier	SLJIT_INT_OP		1093048	1					
ANR	1093187	Identifier	INT_DATA		1093048	1					
ANR	1093188	Identifier	WORD_DATA		1093048	2					
ANR	1093189	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"	2242:2:74508:74596	1093048	2	True				
ANR	1093190	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"		1093048	0					
ANR	1093191	Callee	FAIL_IF		1093048	0					
ANR	1093192	Identifier	FAIL_IF		1093048	0					
ANR	1093193	ArgumentList	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1093048	1					
ANR	1093194	Argument	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1093048	0					
ANR	1093195	CallExpression	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1093048	0					
ANR	1093196	Callee	emit_op_mem2		1093048	0					
ANR	1093197	Identifier	emit_op_mem2		1093048	0					
ANR	1093198	ArgumentList	compiler		1093048	1					
ANR	1093199	Argument	compiler		1093048	0					
ANR	1093200	Identifier	compiler		1093048	0					
ANR	1093201	Argument	input_flags | LOAD_DATA		1093048	1					
ANR	1093202	InclusiveOrExpression	input_flags | LOAD_DATA		1093048	0		|			
ANR	1093203	Identifier	input_flags		1093048	0					
ANR	1093204	Identifier	LOAD_DATA		1093048	1					
ANR	1093205	Argument	TMP_REG1		1093048	2					
ANR	1093206	Identifier	TMP_REG1		1093048	0					
ANR	1093207	Argument	src		1093048	3					
ANR	1093208	Identifier	src		1093048	0					
ANR	1093209	Argument	srcw		1093048	4					
ANR	1093210	Identifier	srcw		1093048	0					
ANR	1093211	Argument	dst		1093048	5					
ANR	1093212	Identifier	dst		1093048	0					
ANR	1093213	Argument	dstw		1093048	6					
ANR	1093214	Identifier	dstw		1093048	0					
ANR	1093215	ExpressionStatement	src = TMP_REG1	2243:2:74600:74614	1093048	3	True				
ANR	1093216	AssignmentExpression	src = TMP_REG1		1093048	0		=			
ANR	1093217	Identifier	src		1093048	0					
ANR	1093218	Identifier	TMP_REG1		1093048	1					
ANR	1093219	ExpressionStatement	srcw = 0	2244:2:74618:74626	1093048	4	True				
ANR	1093220	AssignmentExpression	srcw = 0		1093048	0		=			
ANR	1093221	Identifier	srcw		1093048	0					
ANR	1093222	PrimaryExpression	0		1093048	1					
ANR	1093223	SwitchStatement	switch ( type & 0xff )		1093048	12					
ANR	1093224	Condition	type & 0xff	2247:9:74641:74651	1093048	0	True				
ANR	1093225	BitAndExpression	type & 0xff		1093048	0		&			
ANR	1093226	Identifier	type		1093048	0					
ANR	1093227	PrimaryExpression	0xff		1093048	1					
ANR	1093228	CompoundStatement		30:22:802:802	1093048	1					
ANR	1093229	Label	case SLJIT_EQUAL :	2248:1:74657:74673	1093048	0	True				
ANR	1093230	Identifier	SLJIT_EQUAL		1093048	0					
ANR	1093231	ExpressionStatement	"GET_CR_BIT ( 2 , reg )"	2249:2:74677:74695	1093048	1	True				
ANR	1093232	CallExpression	"GET_CR_BIT ( 2 , reg )"		1093048	0					
ANR	1093233	Callee	GET_CR_BIT		1093048	0					
ANR	1093234	Identifier	GET_CR_BIT		1093048	0					
ANR	1093235	ArgumentList	2		1093048	1					
ANR	1093236	Argument	2		1093048	0					
ANR	1093237	PrimaryExpression	2		1093048	0					
ANR	1093238	Argument	reg		1093048	1					
ANR	1093239	Identifier	reg		1093048	0					
ANR	1093240	BreakStatement	break ;	2250:2:74699:74704	1093048	2	True				
ANR	1093241	Label	case SLJIT_NOT_EQUAL :	2252:1:74708:74728	1093048	3	True				
ANR	1093242	Identifier	SLJIT_NOT_EQUAL		1093048	0					
ANR	1093243	ExpressionStatement	"GET_CR_BIT ( 2 , reg )"	2253:2:74732:74750	1093048	4	True				
ANR	1093244	CallExpression	"GET_CR_BIT ( 2 , reg )"		1093048	0					
ANR	1093245	Callee	GET_CR_BIT		1093048	0					
ANR	1093246	Identifier	GET_CR_BIT		1093048	0					
ANR	1093247	ArgumentList	2		1093048	1					
ANR	1093248	Argument	2		1093048	0					
ANR	1093249	PrimaryExpression	2		1093048	0					
ANR	1093250	Argument	reg		1093048	1					
ANR	1093251	Identifier	reg		1093048	0					
ANR	1093252	ExpressionStatement	INVERT_BIT ( reg )	2254:2:74754:74769	1093048	5	True				
ANR	1093253	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093254	Callee	INVERT_BIT		1093048	0					
ANR	1093255	Identifier	INVERT_BIT		1093048	0					
ANR	1093256	ArgumentList	reg		1093048	1					
ANR	1093257	Argument	reg		1093048	0					
ANR	1093258	Identifier	reg		1093048	0					
ANR	1093259	BreakStatement	break ;	2255:2:74773:74778	1093048	6	True				
ANR	1093260	Label	case SLJIT_LESS :	2257:1:74782:74797	1093048	7	True				
ANR	1093261	Identifier	SLJIT_LESS		1093048	0					
ANR	1093262	Label	case SLJIT_D_LESS :	2258:1:74800:74817	1093048	8	True				
ANR	1093263	Identifier	SLJIT_D_LESS		1093048	0					
ANR	1093264	ExpressionStatement	"GET_CR_BIT ( 4 + 0 , reg )"	2259:2:74821:74843	1093048	9	True				
ANR	1093265	CallExpression	"GET_CR_BIT ( 4 + 0 , reg )"		1093048	0					
ANR	1093266	Callee	GET_CR_BIT		1093048	0					
ANR	1093267	Identifier	GET_CR_BIT		1093048	0					
ANR	1093268	ArgumentList	4 + 0		1093048	1					
ANR	1093269	Argument	4 + 0		1093048	0					
ANR	1093270	AdditiveExpression	4 + 0		1093048	0		+			
ANR	1093271	PrimaryExpression	4		1093048	0					
ANR	1093272	PrimaryExpression	0		1093048	1					
ANR	1093273	Argument	reg		1093048	1					
ANR	1093274	Identifier	reg		1093048	0					
ANR	1093275	BreakStatement	break ;	2260:2:74847:74852	1093048	10	True				
ANR	1093276	Label	case SLJIT_GREATER_EQUAL :	2262:1:74856:74880	1093048	11	True				
ANR	1093277	Identifier	SLJIT_GREATER_EQUAL		1093048	0					
ANR	1093278	Label	case SLJIT_D_GREATER_EQUAL :	2263:1:74883:74909	1093048	12	True				
ANR	1093279	Identifier	SLJIT_D_GREATER_EQUAL		1093048	0					
ANR	1093280	ExpressionStatement	"GET_CR_BIT ( 4 + 0 , reg )"	2264:2:74913:74935	1093048	13	True				
ANR	1093281	CallExpression	"GET_CR_BIT ( 4 + 0 , reg )"		1093048	0					
ANR	1093282	Callee	GET_CR_BIT		1093048	0					
ANR	1093283	Identifier	GET_CR_BIT		1093048	0					
ANR	1093284	ArgumentList	4 + 0		1093048	1					
ANR	1093285	Argument	4 + 0		1093048	0					
ANR	1093286	AdditiveExpression	4 + 0		1093048	0		+			
ANR	1093287	PrimaryExpression	4		1093048	0					
ANR	1093288	PrimaryExpression	0		1093048	1					
ANR	1093289	Argument	reg		1093048	1					
ANR	1093290	Identifier	reg		1093048	0					
ANR	1093291	ExpressionStatement	INVERT_BIT ( reg )	2265:2:74939:74954	1093048	14	True				
ANR	1093292	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093293	Callee	INVERT_BIT		1093048	0					
ANR	1093294	Identifier	INVERT_BIT		1093048	0					
ANR	1093295	ArgumentList	reg		1093048	1					
ANR	1093296	Argument	reg		1093048	0					
ANR	1093297	Identifier	reg		1093048	0					
ANR	1093298	BreakStatement	break ;	2266:2:74958:74963	1093048	15	True				
ANR	1093299	Label	case SLJIT_GREATER :	2268:1:74967:74985	1093048	16	True				
ANR	1093300	Identifier	SLJIT_GREATER		1093048	0					
ANR	1093301	Label	case SLJIT_D_GREATER :	2269:1:74988:75008	1093048	17	True				
ANR	1093302	Identifier	SLJIT_D_GREATER		1093048	0					
ANR	1093303	ExpressionStatement	"GET_CR_BIT ( 4 + 1 , reg )"	2270:2:75012:75034	1093048	18	True				
ANR	1093304	CallExpression	"GET_CR_BIT ( 4 + 1 , reg )"		1093048	0					
ANR	1093305	Callee	GET_CR_BIT		1093048	0					
ANR	1093306	Identifier	GET_CR_BIT		1093048	0					
ANR	1093307	ArgumentList	4 + 1		1093048	1					
ANR	1093308	Argument	4 + 1		1093048	0					
ANR	1093309	AdditiveExpression	4 + 1		1093048	0		+			
ANR	1093310	PrimaryExpression	4		1093048	0					
ANR	1093311	PrimaryExpression	1		1093048	1					
ANR	1093312	Argument	reg		1093048	1					
ANR	1093313	Identifier	reg		1093048	0					
ANR	1093314	BreakStatement	break ;	2271:2:75038:75043	1093048	19	True				
ANR	1093315	Label	case SLJIT_LESS_EQUAL :	2273:1:75047:75068	1093048	20	True				
ANR	1093316	Identifier	SLJIT_LESS_EQUAL		1093048	0					
ANR	1093317	Label	case SLJIT_D_LESS_EQUAL :	2274:1:75071:75094	1093048	21	True				
ANR	1093318	Identifier	SLJIT_D_LESS_EQUAL		1093048	0					
ANR	1093319	ExpressionStatement	"GET_CR_BIT ( 4 + 1 , reg )"	2275:2:75098:75120	1093048	22	True				
ANR	1093320	CallExpression	"GET_CR_BIT ( 4 + 1 , reg )"		1093048	0					
ANR	1093321	Callee	GET_CR_BIT		1093048	0					
ANR	1093322	Identifier	GET_CR_BIT		1093048	0					
ANR	1093323	ArgumentList	4 + 1		1093048	1					
ANR	1093324	Argument	4 + 1		1093048	0					
ANR	1093325	AdditiveExpression	4 + 1		1093048	0		+			
ANR	1093326	PrimaryExpression	4		1093048	0					
ANR	1093327	PrimaryExpression	1		1093048	1					
ANR	1093328	Argument	reg		1093048	1					
ANR	1093329	Identifier	reg		1093048	0					
ANR	1093330	ExpressionStatement	INVERT_BIT ( reg )	2276:2:75124:75139	1093048	23	True				
ANR	1093331	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093332	Callee	INVERT_BIT		1093048	0					
ANR	1093333	Identifier	INVERT_BIT		1093048	0					
ANR	1093334	ArgumentList	reg		1093048	1					
ANR	1093335	Argument	reg		1093048	0					
ANR	1093336	Identifier	reg		1093048	0					
ANR	1093337	BreakStatement	break ;	2277:2:75143:75148	1093048	24	True				
ANR	1093338	Label	case SLJIT_SIG_LESS :	2279:1:75152:75171	1093048	25	True				
ANR	1093339	Identifier	SLJIT_SIG_LESS		1093048	0					
ANR	1093340	ExpressionStatement	"GET_CR_BIT ( 0 , reg )"	2280:2:75175:75193	1093048	26	True				
ANR	1093341	CallExpression	"GET_CR_BIT ( 0 , reg )"		1093048	0					
ANR	1093342	Callee	GET_CR_BIT		1093048	0					
ANR	1093343	Identifier	GET_CR_BIT		1093048	0					
ANR	1093344	ArgumentList	0		1093048	1					
ANR	1093345	Argument	0		1093048	0					
ANR	1093346	PrimaryExpression	0		1093048	0					
ANR	1093347	Argument	reg		1093048	1					
ANR	1093348	Identifier	reg		1093048	0					
ANR	1093349	BreakStatement	break ;	2281:2:75197:75202	1093048	27	True				
ANR	1093350	Label	case SLJIT_SIG_GREATER_EQUAL :	2283:1:75206:75234	1093048	28	True				
ANR	1093351	Identifier	SLJIT_SIG_GREATER_EQUAL		1093048	0					
ANR	1093352	ExpressionStatement	"GET_CR_BIT ( 0 , reg )"	2284:2:75238:75256	1093048	29	True				
ANR	1093353	CallExpression	"GET_CR_BIT ( 0 , reg )"		1093048	0					
ANR	1093354	Callee	GET_CR_BIT		1093048	0					
ANR	1093355	Identifier	GET_CR_BIT		1093048	0					
ANR	1093356	ArgumentList	0		1093048	1					
ANR	1093357	Argument	0		1093048	0					
ANR	1093358	PrimaryExpression	0		1093048	0					
ANR	1093359	Argument	reg		1093048	1					
ANR	1093360	Identifier	reg		1093048	0					
ANR	1093361	ExpressionStatement	INVERT_BIT ( reg )	2285:2:75260:75275	1093048	30	True				
ANR	1093362	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093363	Callee	INVERT_BIT		1093048	0					
ANR	1093364	Identifier	INVERT_BIT		1093048	0					
ANR	1093365	ArgumentList	reg		1093048	1					
ANR	1093366	Argument	reg		1093048	0					
ANR	1093367	Identifier	reg		1093048	0					
ANR	1093368	BreakStatement	break ;	2286:2:75279:75284	1093048	31	True				
ANR	1093369	Label	case SLJIT_SIG_GREATER :	2288:1:75288:75310	1093048	32	True				
ANR	1093370	Identifier	SLJIT_SIG_GREATER		1093048	0					
ANR	1093371	ExpressionStatement	"GET_CR_BIT ( 1 , reg )"	2289:2:75314:75332	1093048	33	True				
ANR	1093372	CallExpression	"GET_CR_BIT ( 1 , reg )"		1093048	0					
ANR	1093373	Callee	GET_CR_BIT		1093048	0					
ANR	1093374	Identifier	GET_CR_BIT		1093048	0					
ANR	1093375	ArgumentList	1		1093048	1					
ANR	1093376	Argument	1		1093048	0					
ANR	1093377	PrimaryExpression	1		1093048	0					
ANR	1093378	Argument	reg		1093048	1					
ANR	1093379	Identifier	reg		1093048	0					
ANR	1093380	BreakStatement	break ;	2290:2:75336:75341	1093048	34	True				
ANR	1093381	Label	case SLJIT_SIG_LESS_EQUAL :	2292:1:75345:75370	1093048	35	True				
ANR	1093382	Identifier	SLJIT_SIG_LESS_EQUAL		1093048	0					
ANR	1093383	ExpressionStatement	"GET_CR_BIT ( 1 , reg )"	2293:2:75374:75392	1093048	36	True				
ANR	1093384	CallExpression	"GET_CR_BIT ( 1 , reg )"		1093048	0					
ANR	1093385	Callee	GET_CR_BIT		1093048	0					
ANR	1093386	Identifier	GET_CR_BIT		1093048	0					
ANR	1093387	ArgumentList	1		1093048	1					
ANR	1093388	Argument	1		1093048	0					
ANR	1093389	PrimaryExpression	1		1093048	0					
ANR	1093390	Argument	reg		1093048	1					
ANR	1093391	Identifier	reg		1093048	0					
ANR	1093392	ExpressionStatement	INVERT_BIT ( reg )	2294:2:75396:75411	1093048	37	True				
ANR	1093393	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093394	Callee	INVERT_BIT		1093048	0					
ANR	1093395	Identifier	INVERT_BIT		1093048	0					
ANR	1093396	ArgumentList	reg		1093048	1					
ANR	1093397	Argument	reg		1093048	0					
ANR	1093398	Identifier	reg		1093048	0					
ANR	1093399	BreakStatement	break ;	2295:2:75415:75420	1093048	38	True				
ANR	1093400	Label	case SLJIT_OVERFLOW :	2297:1:75424:75443	1093048	39	True				
ANR	1093401	Identifier	SLJIT_OVERFLOW		1093048	0					
ANR	1093402	Label	case SLJIT_MUL_OVERFLOW :	2298:1:75446:75469	1093048	40	True				
ANR	1093403	Identifier	SLJIT_MUL_OVERFLOW		1093048	0					
ANR	1093404	ExpressionStatement	"GET_CR_BIT ( 3 , reg )"	2299:2:75473:75491	1093048	41	True				
ANR	1093405	CallExpression	"GET_CR_BIT ( 3 , reg )"		1093048	0					
ANR	1093406	Callee	GET_CR_BIT		1093048	0					
ANR	1093407	Identifier	GET_CR_BIT		1093048	0					
ANR	1093408	ArgumentList	3		1093048	1					
ANR	1093409	Argument	3		1093048	0					
ANR	1093410	PrimaryExpression	3		1093048	0					
ANR	1093411	Argument	reg		1093048	1					
ANR	1093412	Identifier	reg		1093048	0					
ANR	1093413	BreakStatement	break ;	2300:2:75495:75500	1093048	42	True				
ANR	1093414	Label	case SLJIT_NOT_OVERFLOW :	2302:1:75504:75527	1093048	43	True				
ANR	1093415	Identifier	SLJIT_NOT_OVERFLOW		1093048	0					
ANR	1093416	Label	case SLJIT_MUL_NOT_OVERFLOW :	2303:1:75530:75557	1093048	44	True				
ANR	1093417	Identifier	SLJIT_MUL_NOT_OVERFLOW		1093048	0					
ANR	1093418	ExpressionStatement	"GET_CR_BIT ( 3 , reg )"	2304:2:75561:75579	1093048	45	True				
ANR	1093419	CallExpression	"GET_CR_BIT ( 3 , reg )"		1093048	0					
ANR	1093420	Callee	GET_CR_BIT		1093048	0					
ANR	1093421	Identifier	GET_CR_BIT		1093048	0					
ANR	1093422	ArgumentList	3		1093048	1					
ANR	1093423	Argument	3		1093048	0					
ANR	1093424	PrimaryExpression	3		1093048	0					
ANR	1093425	Argument	reg		1093048	1					
ANR	1093426	Identifier	reg		1093048	0					
ANR	1093427	ExpressionStatement	INVERT_BIT ( reg )	2305:2:75583:75598	1093048	46	True				
ANR	1093428	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093429	Callee	INVERT_BIT		1093048	0					
ANR	1093430	Identifier	INVERT_BIT		1093048	0					
ANR	1093431	ArgumentList	reg		1093048	1					
ANR	1093432	Argument	reg		1093048	0					
ANR	1093433	Identifier	reg		1093048	0					
ANR	1093434	BreakStatement	break ;	2306:2:75602:75607	1093048	47	True				
ANR	1093435	Label	case SLJIT_D_EQUAL :	2308:1:75611:75629	1093048	48	True				
ANR	1093436	Identifier	SLJIT_D_EQUAL		1093048	0					
ANR	1093437	ExpressionStatement	"GET_CR_BIT ( 4 + 2 , reg )"	2309:2:75633:75655	1093048	49	True				
ANR	1093438	CallExpression	"GET_CR_BIT ( 4 + 2 , reg )"		1093048	0					
ANR	1093439	Callee	GET_CR_BIT		1093048	0					
ANR	1093440	Identifier	GET_CR_BIT		1093048	0					
ANR	1093441	ArgumentList	4 + 2		1093048	1					
ANR	1093442	Argument	4 + 2		1093048	0					
ANR	1093443	AdditiveExpression	4 + 2		1093048	0		+			
ANR	1093444	PrimaryExpression	4		1093048	0					
ANR	1093445	PrimaryExpression	2		1093048	1					
ANR	1093446	Argument	reg		1093048	1					
ANR	1093447	Identifier	reg		1093048	0					
ANR	1093448	BreakStatement	break ;	2310:2:75659:75664	1093048	50	True				
ANR	1093449	Label	case SLJIT_D_NOT_EQUAL :	2312:1:75668:75690	1093048	51	True				
ANR	1093450	Identifier	SLJIT_D_NOT_EQUAL		1093048	0					
ANR	1093451	ExpressionStatement	"GET_CR_BIT ( 4 + 2 , reg )"	2313:2:75694:75716	1093048	52	True				
ANR	1093452	CallExpression	"GET_CR_BIT ( 4 + 2 , reg )"		1093048	0					
ANR	1093453	Callee	GET_CR_BIT		1093048	0					
ANR	1093454	Identifier	GET_CR_BIT		1093048	0					
ANR	1093455	ArgumentList	4 + 2		1093048	1					
ANR	1093456	Argument	4 + 2		1093048	0					
ANR	1093457	AdditiveExpression	4 + 2		1093048	0		+			
ANR	1093458	PrimaryExpression	4		1093048	0					
ANR	1093459	PrimaryExpression	2		1093048	1					
ANR	1093460	Argument	reg		1093048	1					
ANR	1093461	Identifier	reg		1093048	0					
ANR	1093462	ExpressionStatement	INVERT_BIT ( reg )	2314:2:75720:75735	1093048	53	True				
ANR	1093463	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093464	Callee	INVERT_BIT		1093048	0					
ANR	1093465	Identifier	INVERT_BIT		1093048	0					
ANR	1093466	ArgumentList	reg		1093048	1					
ANR	1093467	Argument	reg		1093048	0					
ANR	1093468	Identifier	reg		1093048	0					
ANR	1093469	BreakStatement	break ;	2315:2:75739:75744	1093048	54	True				
ANR	1093470	Label	case SLJIT_D_UNORDERED :	2317:1:75748:75770	1093048	55	True				
ANR	1093471	Identifier	SLJIT_D_UNORDERED		1093048	0					
ANR	1093472	ExpressionStatement	"GET_CR_BIT ( 4 + 3 , reg )"	2318:2:75774:75796	1093048	56	True				
ANR	1093473	CallExpression	"GET_CR_BIT ( 4 + 3 , reg )"		1093048	0					
ANR	1093474	Callee	GET_CR_BIT		1093048	0					
ANR	1093475	Identifier	GET_CR_BIT		1093048	0					
ANR	1093476	ArgumentList	4 + 3		1093048	1					
ANR	1093477	Argument	4 + 3		1093048	0					
ANR	1093478	AdditiveExpression	4 + 3		1093048	0		+			
ANR	1093479	PrimaryExpression	4		1093048	0					
ANR	1093480	PrimaryExpression	3		1093048	1					
ANR	1093481	Argument	reg		1093048	1					
ANR	1093482	Identifier	reg		1093048	0					
ANR	1093483	BreakStatement	break ;	2319:2:75800:75805	1093048	57	True				
ANR	1093484	Label	case SLJIT_D_ORDERED :	2321:1:75809:75829	1093048	58	True				
ANR	1093485	Identifier	SLJIT_D_ORDERED		1093048	0					
ANR	1093486	ExpressionStatement	"GET_CR_BIT ( 4 + 3 , reg )"	2322:2:75833:75855	1093048	59	True				
ANR	1093487	CallExpression	"GET_CR_BIT ( 4 + 3 , reg )"		1093048	0					
ANR	1093488	Callee	GET_CR_BIT		1093048	0					
ANR	1093489	Identifier	GET_CR_BIT		1093048	0					
ANR	1093490	ArgumentList	4 + 3		1093048	1					
ANR	1093491	Argument	4 + 3		1093048	0					
ANR	1093492	AdditiveExpression	4 + 3		1093048	0		+			
ANR	1093493	PrimaryExpression	4		1093048	0					
ANR	1093494	PrimaryExpression	3		1093048	1					
ANR	1093495	Argument	reg		1093048	1					
ANR	1093496	Identifier	reg		1093048	0					
ANR	1093497	ExpressionStatement	INVERT_BIT ( reg )	2323:2:75859:75874	1093048	60	True				
ANR	1093498	CallExpression	INVERT_BIT ( reg )		1093048	0					
ANR	1093499	Callee	INVERT_BIT		1093048	0					
ANR	1093500	Identifier	INVERT_BIT		1093048	0					
ANR	1093501	ArgumentList	reg		1093048	1					
ANR	1093502	Argument	reg		1093048	0					
ANR	1093503	Identifier	reg		1093048	0					
ANR	1093504	BreakStatement	break ;	2324:2:75878:75883	1093048	61	True				
ANR	1093505	Label	default :	2326:1:75887:75894	1093048	62	True				
ANR	1093506	Identifier	default		1093048	0					
ANR	1093507	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2327:2:75898:75917	1093048	63	True				
ANR	1093508	CallExpression	SLJIT_ASSERT_STOP ( )		1093048	0					
ANR	1093509	Callee	SLJIT_ASSERT_STOP		1093048	0					
ANR	1093510	Identifier	SLJIT_ASSERT_STOP		1093048	0					
ANR	1093511	ArgumentList			1093048	1					
ANR	1093512	BreakStatement	break ;	2328:2:75921:75926	1093048	64	True				
ANR	1093513	IfStatement	if ( op < SLJIT_ADD )		1093048	13					
ANR	1093514	Condition	op < SLJIT_ADD	2331:5:75937:75950	1093048	0	True				
ANR	1093515	RelationalExpression	op < SLJIT_ADD		1093048	0		<			
ANR	1093516	Identifier	op		1093048	0					
ANR	1093517	Identifier	SLJIT_ADD		1093048	1					
ANR	1093518	CompoundStatement		114:21:2101:2101	1093048	1					
ANR	1093519	IfStatement	if ( op == SLJIT_MOV )		1093048	0					
ANR	1093520	Condition	op == SLJIT_MOV	2333:6:76018:76032	1093048	0	True				
ANR	1093521	EqualityExpression	op == SLJIT_MOV		1093048	0		==			
ANR	1093522	Identifier	op		1093048	0					
ANR	1093523	Identifier	SLJIT_MOV		1093048	1					
ANR	1093524	ExpressionStatement	input_flags = WORD_DATA	2334:3:76038:76061	1093048	1	True				
ANR	1093525	AssignmentExpression	input_flags = WORD_DATA		1093048	0		=			
ANR	1093526	Identifier	input_flags		1093048	0					
ANR	1093527	Identifier	WORD_DATA		1093048	1					
ANR	1093528	ElseStatement	else		1093048	0					
ANR	1093529	CompoundStatement		118:7:2218:2218	1093048	0					
ANR	1093530	ExpressionStatement	op = SLJIT_MOV_UI	2336:3:76075:76092	1093048	0	True				
ANR	1093531	AssignmentExpression	op = SLJIT_MOV_UI		1093048	0		=			
ANR	1093532	Identifier	op		1093048	0					
ANR	1093533	Identifier	SLJIT_MOV_UI		1093048	1					
ANR	1093534	ExpressionStatement	input_flags = INT_DATA	2337:3:76097:76119	1093048	1	True				
ANR	1093535	AssignmentExpression	input_flags = INT_DATA		1093048	0		=			
ANR	1093536	Identifier	input_flags		1093048	0					
ANR	1093537	Identifier	INT_DATA		1093048	1					
ANR	1093538	IfStatement	if ( reg != TMP_REG2 )		1093048	1					
ANR	1093539	Condition	reg != TMP_REG2	2343:6:76189:76203	1093048	0	True				
ANR	1093540	EqualityExpression	reg != TMP_REG2		1093048	0		!=			
ANR	1093541	Identifier	reg		1093048	0					
ANR	1093542	Identifier	TMP_REG2		1093048	1					
ANR	1093543	ReturnStatement	return SLJIT_SUCCESS ;	2344:3:76209:76229	1093048	1	True				
ANR	1093544	Identifier	SLJIT_SUCCESS		1093048	0					
ANR	1093545	ReturnStatement	"return emit_op ( compiler , op , input_flags , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) ;"	2345:2:76233:76311	1093048	2	True				
ANR	1093546	CallExpression	"emit_op ( compiler , op , input_flags , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1093048	0					
ANR	1093547	Callee	emit_op		1093048	0					
ANR	1093548	Identifier	emit_op		1093048	0					
ANR	1093549	ArgumentList	compiler		1093048	1					
ANR	1093550	Argument	compiler		1093048	0					
ANR	1093551	Identifier	compiler		1093048	0					
ANR	1093552	Argument	op		1093048	1					
ANR	1093553	Identifier	op		1093048	0					
ANR	1093554	Argument	input_flags		1093048	2					
ANR	1093555	Identifier	input_flags		1093048	0					
ANR	1093556	Argument	dst		1093048	3					
ANR	1093557	Identifier	dst		1093048	0					
ANR	1093558	Argument	dstw		1093048	4					
ANR	1093559	Identifier	dstw		1093048	0					
ANR	1093560	Argument	TMP_REG1		1093048	5					
ANR	1093561	Identifier	TMP_REG1		1093048	0					
ANR	1093562	Argument	0		1093048	6					
ANR	1093563	PrimaryExpression	0		1093048	0					
ANR	1093564	Argument	TMP_REG2		1093048	7					
ANR	1093565	Identifier	TMP_REG2		1093048	0					
ANR	1093566	Argument	0		1093048	8					
ANR	1093567	PrimaryExpression	0		1093048	0					
ANR	1093568	Statement	||	2349:2:76366:76367	1093048	14	True				
ANR	1093569	Statement	(	2349:5:76369:76369	1093048	15	True				
ANR	1093570	Statement	defined	2349:6:76370:76376	1093048	16	True				
ANR	1093571	Statement	SLJIT_ARGUMENT_CHECKS	2349:14:76378:76398	1093048	17	True				
ANR	1093572	Statement	&&	2349:36:76400:76401	1093048	18	True				
ANR	1093573	Statement	SLJIT_ARGUMENT_CHECKS	2349:39:76403:76423	1093048	19	True				
ANR	1093574	Statement	)	2349:60:76424:76424	1093048	20	True				
ANR	1093575	ExpressionStatement	compiler -> skip_checks = 1	2350:1:76427:76452	1093048	21	True				
ANR	1093576	AssignmentExpression	compiler -> skip_checks = 1		1093048	0		=			
ANR	1093577	PtrMemberAccess	compiler -> skip_checks		1093048	0					
ANR	1093578	Identifier	compiler		1093048	0					
ANR	1093579	Identifier	skip_checks		1093048	1					
ANR	1093580	PrimaryExpression	1		1093048	1					
ANR	1093581	ReturnStatement	"return sljit_emit_op2 ( compiler , op | flags , dst , original_dstw , src , srcw , TMP_REG2 , 0 ) ;"	2352:1:76462:76549	1093048	22	True				
ANR	1093582	CallExpression	"sljit_emit_op2 ( compiler , op | flags , dst , original_dstw , src , srcw , TMP_REG2 , 0 )"		1093048	0					
ANR	1093583	Callee	sljit_emit_op2		1093048	0					
ANR	1093584	Identifier	sljit_emit_op2		1093048	0					
ANR	1093585	ArgumentList	compiler		1093048	1					
ANR	1093586	Argument	compiler		1093048	0					
ANR	1093587	Identifier	compiler		1093048	0					
ANR	1093588	Argument	op | flags		1093048	1					
ANR	1093589	InclusiveOrExpression	op | flags		1093048	0		|			
ANR	1093590	Identifier	op		1093048	0					
ANR	1093591	Identifier	flags		1093048	1					
ANR	1093592	Argument	dst		1093048	2					
ANR	1093593	Identifier	dst		1093048	0					
ANR	1093594	Argument	original_dstw		1093048	3					
ANR	1093595	Identifier	original_dstw		1093048	0					
ANR	1093596	Argument	src		1093048	4					
ANR	1093597	Identifier	src		1093048	0					
ANR	1093598	Argument	srcw		1093048	5					
ANR	1093599	Identifier	srcw		1093048	0					
ANR	1093600	Argument	TMP_REG2		1093048	6					
ANR	1093601	Identifier	TMP_REG2		1093048	0					
ANR	1093602	Argument	0		1093048	7					
ANR	1093603	PrimaryExpression	0		1093048	0					
ANR	1093604	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1093048	1					
ANR	1093605	Identifier	sljit_emit_op_flags		1093048	2					
ANR	1093606	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1093048	3					
ANR	1093607	Parameter	struct sljit_compiler * compiler	2214:54:73729:73759	1093048	0	True				
ANR	1093608	ParameterType	struct sljit_compiler *		1093048	0					
ANR	1093609	Identifier	compiler		1093048	1					
ANR	1093610	Parameter	sljit_si op	2214:87:73762:73772	1093048	1	True				
ANR	1093611	ParameterType	sljit_si		1093048	0					
ANR	1093612	Identifier	op		1093048	1					
ANR	1093613	Parameter	sljit_si dst	2215:1:73776:73787	1093048	2	True				
ANR	1093614	ParameterType	sljit_si		1093048	0					
ANR	1093615	Identifier	dst		1093048	1					
ANR	1093616	Parameter	sljit_sw dstw	2215:15:73790:73802	1093048	3	True				
ANR	1093617	ParameterType	sljit_sw		1093048	0					
ANR	1093618	Identifier	dstw		1093048	1					
ANR	1093619	Parameter	sljit_si src	2216:1:73806:73817	1093048	4	True				
ANR	1093620	ParameterType	sljit_si		1093048	0					
ANR	1093621	Identifier	src		1093048	1					
ANR	1093622	Parameter	sljit_sw srcw	2216:15:73820:73832	1093048	5	True				
ANR	1093623	ParameterType	sljit_sw		1093048	0					
ANR	1093624	Identifier	srcw		1093048	1					
ANR	1093625	Parameter	sljit_si type	2217:1:73836:73848	1093048	6	True				
ANR	1093626	ParameterType	sljit_si		1093048	0					
ANR	1093627	Identifier	type		1093048	1					
ANR	1093628	CFGEntryNode	ENTRY		1093048		True				
ANR	1093629	CFGExitNode	EXIT		1093048		True				
ANR	1093630	Symbol	TMP_REG2		1093048						
ANR	1093631	Symbol	compiler -> cache_argw		1093048						
ANR	1093632	Symbol	TMP_REG1		1093048						
ANR	1093633	Symbol	sljit_emit_op2		1093048						
ANR	1093634	Symbol	dst		1093048						
ANR	1093635	Symbol	LOAD_DATA		1093048						
ANR	1093636	Symbol	SLJIT_MOV		1093048						
ANR	1093637	Symbol	SLJIT_MEM		1093048						
ANR	1093638	Symbol	flags		1093048						
ANR	1093639	Symbol	original_dstw		1093048						
ANR	1093640	Symbol	SLJIT_ADD		1093048						
ANR	1093641	Symbol	* compiler		1093048						
ANR	1093642	Symbol	type		1093048						
ANR	1093643	Symbol	GET_OPCODE		1093048						
ANR	1093644	Symbol	GET_ALL_FLAGS		1093048						
ANR	1093645	Symbol	reg		1093048						
ANR	1093646	Symbol	INT_DATA		1093048						
ANR	1093647	Symbol	SLJIT_MOV_UI		1093048						
ANR	1093648	Symbol	compiler		1093048						
ANR	1093649	Symbol	check_sljit_emit_op_flags		1093048						
ANR	1093650	Symbol	WORD_DATA		1093048						
ANR	1093651	Symbol	emit_op		1093048						
ANR	1093652	Symbol	op		1093048						
ANR	1093653	Symbol	FAST_IS_REG		1093048						
ANR	1093654	Symbol	src		1093048						
ANR	1093655	Symbol	srcw		1093048						
ANR	1093656	Symbol	compiler -> cache_arg		1093048						
ANR	1093657	Symbol	input_flags		1093048						
ANR	1093658	Symbol	SLJIT_INT_OP		1093048						
ANR	1093659	Symbol	emit_op_mem2		1093048						
ANR	1093660	Symbol	SLJIT_SUCCESS		1093048						
ANR	1093661	Symbol	SLJIT_UNUSED		1093048						
ANR	1093662	Symbol	compiler -> skip_checks		1093048						
ANR	1093663	Symbol	dstw		1093048						
ANR	1093664	Function	sljit_emit_const	2355:25:76579:77233							
ANR	1093665	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1093664	0					
ANR	1093666	CompoundStatement		2356:0:76699:77233	1093664	0					
ANR	1093667	IdentifierDeclStatement	struct sljit_const * const_ ;	2357:1:76702:76728	1093664	0	True				
ANR	1093668	IdentifierDecl	* const_		1093664	0					
ANR	1093669	IdentifierDeclType	struct sljit_const *		1093664	0					
ANR	1093670	Identifier	const_		1093664	1					
ANR	1093671	IdentifierDeclStatement	sljit_si reg ;	2358:1:76731:76743	1093664	1	True				
ANR	1093672	IdentifierDecl	reg		1093664	0					
ANR	1093673	IdentifierDeclType	sljit_si		1093664	0					
ANR	1093674	Identifier	reg		1093664	1					
ANR	1093675	ExpressionStatement	CHECK_ERROR_PTR ( )	2360:1:76747:76764	1093664	2	True				
ANR	1093676	CallExpression	CHECK_ERROR_PTR ( )		1093664	0					
ANR	1093677	Callee	CHECK_ERROR_PTR		1093664	0					
ANR	1093678	Identifier	CHECK_ERROR_PTR		1093664	0					
ANR	1093679	ArgumentList			1093664	1					
ANR	1093680	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2361:1:76767:76833	1093664	3	True				
ANR	1093681	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1093664	0					
ANR	1093682	Callee	CHECK_PTR		1093664	0					
ANR	1093683	Identifier	CHECK_PTR		1093664	0					
ANR	1093684	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1093664	1					
ANR	1093685	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1093664	0					
ANR	1093686	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1093664	0					
ANR	1093687	Callee	check_sljit_emit_const		1093664	0					
ANR	1093688	Identifier	check_sljit_emit_const		1093664	0					
ANR	1093689	ArgumentList	compiler		1093664	1					
ANR	1093690	Argument	compiler		1093664	0					
ANR	1093691	Identifier	compiler		1093664	0					
ANR	1093692	Argument	dst		1093664	1					
ANR	1093693	Identifier	dst		1093664	0					
ANR	1093694	Argument	dstw		1093664	2					
ANR	1093695	Identifier	dstw		1093664	0					
ANR	1093696	Argument	init_value		1093664	3					
ANR	1093697	Identifier	init_value		1093664	0					
ANR	1093698	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2362:1:76836:76866	1093664	4	True				
ANR	1093699	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1093664	0					
ANR	1093700	Callee	ADJUST_LOCAL_OFFSET		1093664	0					
ANR	1093701	Identifier	ADJUST_LOCAL_OFFSET		1093664	0					
ANR	1093702	ArgumentList	dst		1093664	1					
ANR	1093703	Argument	dst		1093664	0					
ANR	1093704	Identifier	dst		1093664	0					
ANR	1093705	Argument	dstw		1093664	1					
ANR	1093706	Identifier	dstw		1093664	0					
ANR	1093707	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2364:1:76870:76949	1093664	5	True				
ANR	1093708	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1093664	0		=			
ANR	1093709	Identifier	const_		1093664	0					
ANR	1093710	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1093664	1					
ANR	1093711	CastTarget	struct sljit_const *		1093664	0					
ANR	1093712	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1093664	1					
ANR	1093713	Callee	ensure_abuf		1093664	0					
ANR	1093714	Identifier	ensure_abuf		1093664	0					
ANR	1093715	ArgumentList	compiler		1093664	1					
ANR	1093716	Argument	compiler		1093664	0					
ANR	1093717	Identifier	compiler		1093664	0					
ANR	1093718	Argument	sizeof ( struct sljit_const )		1093664	1					
ANR	1093719	SizeofExpression	sizeof ( struct sljit_const )		1093664	0					
ANR	1093720	Sizeof	sizeof		1093664	0					
ANR	1093721	SizeofOperand	struct sljit_const		1093664	1					
ANR	1093722	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2365:1:76952:76972	1093664	6	True				
ANR	1093723	CallExpression	PTR_FAIL_IF ( ! const_ )		1093664	0					
ANR	1093724	Callee	PTR_FAIL_IF		1093664	0					
ANR	1093725	Identifier	PTR_FAIL_IF		1093664	0					
ANR	1093726	ArgumentList	! const_		1093664	1					
ANR	1093727	Argument	! const_		1093664	0					
ANR	1093728	UnaryOperationExpression	! const_		1093664	0					
ANR	1093729	UnaryOperator	!		1093664	0					
ANR	1093730	Identifier	const_		1093664	1					
ANR	1093731	ExpressionStatement	"set_const ( const_ , compiler )"	2366:1:76975:77002	1093664	7	True				
ANR	1093732	CallExpression	"set_const ( const_ , compiler )"		1093664	0					
ANR	1093733	Callee	set_const		1093664	0					
ANR	1093734	Identifier	set_const		1093664	0					
ANR	1093735	ArgumentList	const_		1093664	1					
ANR	1093736	Argument	const_		1093664	0					
ANR	1093737	Identifier	const_		1093664	0					
ANR	1093738	Argument	compiler		1093664	1					
ANR	1093739	Identifier	compiler		1093664	0					
ANR	1093740	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2	2368:1:77006:77045	1093664	8	True				
ANR	1093741	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1093664	0		=			
ANR	1093742	Identifier	reg		1093664	0					
ANR	1093743	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1093664	1					
ANR	1093744	Condition	SLOW_IS_REG ( dst )		1093664	0					
ANR	1093745	CallExpression	SLOW_IS_REG ( dst )		1093664	0					
ANR	1093746	Callee	SLOW_IS_REG		1093664	0					
ANR	1093747	Identifier	SLOW_IS_REG		1093664	0					
ANR	1093748	ArgumentList	dst		1093664	1					
ANR	1093749	Argument	dst		1093664	0					
ANR	1093750	Identifier	dst		1093664	0					
ANR	1093751	Identifier	dst		1093664	1					
ANR	1093752	Identifier	TMP_REG2		1093664	2					
ANR	1093753	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"	2370:1:77049:77099	1093664	9	True				
ANR	1093754	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"		1093664	0					
ANR	1093755	Callee	PTR_FAIL_IF		1093664	0					
ANR	1093756	Identifier	PTR_FAIL_IF		1093664	0					
ANR	1093757	ArgumentList	"emit_const ( compiler , reg , init_value )"		1093664	1					
ANR	1093758	Argument	"emit_const ( compiler , reg , init_value )"		1093664	0					
ANR	1093759	CallExpression	"emit_const ( compiler , reg , init_value )"		1093664	0					
ANR	1093760	Callee	emit_const		1093664	0					
ANR	1093761	Identifier	emit_const		1093664	0					
ANR	1093762	ArgumentList	compiler		1093664	1					
ANR	1093763	Argument	compiler		1093664	0					
ANR	1093764	Identifier	compiler		1093664	0					
ANR	1093765	Argument	reg		1093664	1					
ANR	1093766	Identifier	reg		1093664	0					
ANR	1093767	Argument	init_value		1093664	2					
ANR	1093768	Identifier	init_value		1093664	0					
ANR	1093769	IfStatement	if ( dst & SLJIT_MEM )		1093664	10					
ANR	1093770	Condition	dst & SLJIT_MEM	2372:5:77107:77121	1093664	0	True				
ANR	1093771	BitAndExpression	dst & SLJIT_MEM		1093664	0		&			
ANR	1093772	Identifier	dst		1093664	0					
ANR	1093773	Identifier	SLJIT_MEM		1093664	1					
ANR	1093774	ExpressionStatement	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"	2373:2:77126:77215	1093664	1	True				
ANR	1093775	CallExpression	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"		1093664	0					
ANR	1093776	Callee	PTR_FAIL_IF		1093664	0					
ANR	1093777	Identifier	PTR_FAIL_IF		1093664	0					
ANR	1093778	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1093664	1					
ANR	1093779	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1093664	0					
ANR	1093780	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1093664	0					
ANR	1093781	Callee	emit_op		1093664	0					
ANR	1093782	Identifier	emit_op		1093664	0					
ANR	1093783	ArgumentList	compiler		1093664	1					
ANR	1093784	Argument	compiler		1093664	0					
ANR	1093785	Identifier	compiler		1093664	0					
ANR	1093786	Argument	SLJIT_MOV		1093664	1					
ANR	1093787	Identifier	SLJIT_MOV		1093664	0					
ANR	1093788	Argument	WORD_DATA		1093664	2					
ANR	1093789	Identifier	WORD_DATA		1093664	0					
ANR	1093790	Argument	dst		1093664	3					
ANR	1093791	Identifier	dst		1093664	0					
ANR	1093792	Argument	dstw		1093664	4					
ANR	1093793	Identifier	dstw		1093664	0					
ANR	1093794	Argument	TMP_REG1		1093664	5					
ANR	1093795	Identifier	TMP_REG1		1093664	0					
ANR	1093796	Argument	0		1093664	6					
ANR	1093797	PrimaryExpression	0		1093664	0					
ANR	1093798	Argument	TMP_REG2		1093664	7					
ANR	1093799	Identifier	TMP_REG2		1093664	0					
ANR	1093800	Argument	0		1093664	8					
ANR	1093801	PrimaryExpression	0		1093664	0					
ANR	1093802	ReturnStatement	return const_ ;	2374:1:77218:77231	1093664	11	True				
ANR	1093803	Identifier	const_		1093664	0					
ANR	1093804	ReturnType	struct sljit_const *		1093664	1					
ANR	1093805	Identifier	sljit_emit_const		1093664	2					
ANR	1093806	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1093664	3					
ANR	1093807	Parameter	struct sljit_compiler * compiler	2355:62:76616:76646	1093664	0	True				
ANR	1093808	ParameterType	struct sljit_compiler *		1093664	0					
ANR	1093809	Identifier	compiler		1093664	1					
ANR	1093810	Parameter	sljit_si dst	2355:95:76649:76660	1093664	1	True				
ANR	1093811	ParameterType	sljit_si		1093664	0					
ANR	1093812	Identifier	dst		1093664	1					
ANR	1093813	Parameter	sljit_sw dstw	2355:109:76663:76675	1093664	2	True				
ANR	1093814	ParameterType	sljit_sw		1093664	0					
ANR	1093815	Identifier	dstw		1093664	1					
ANR	1093816	Parameter	sljit_sw init_value	2355:124:76678:76696	1093664	3	True				
ANR	1093817	ParameterType	sljit_sw		1093664	0					
ANR	1093818	Identifier	init_value		1093664	1					
ANR	1093819	CFGEntryNode	ENTRY		1093664		True				
ANR	1093820	CFGExitNode	EXIT		1093664		True				
ANR	1093821	Symbol	check_sljit_emit_const		1093664						
ANR	1093822	Symbol	TMP_REG2		1093664						
ANR	1093823	Symbol	TMP_REG1		1093664						
ANR	1093824	Symbol	const_		1093664						
ANR	1093825	Symbol	dst		1093664						
ANR	1093826	Symbol	SLJIT_MOV		1093664						
ANR	1093827	Symbol	SLJIT_MEM		1093664						
ANR	1093828	Symbol	SLOW_IS_REG		1093664						
ANR	1093829	Symbol	ensure_abuf		1093664						
ANR	1093830	Symbol	reg		1093664						
ANR	1093831	Symbol	emit_const		1093664						
ANR	1093832	Symbol	compiler		1093664						
ANR	1093833	Symbol	init_value		1093664						
ANR	1093834	Symbol	dstw		1093664						
ANR	1093835	Symbol	emit_op		1093664						
ANR	1093836	Symbol	WORD_DATA		1093664						
