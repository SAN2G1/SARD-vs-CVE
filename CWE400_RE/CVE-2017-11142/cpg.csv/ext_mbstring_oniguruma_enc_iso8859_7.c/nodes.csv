command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	680161	File	data/converged/CVE-2017-11142_php-src/ext_mbstring_oniguruma_enc_iso8859_7.c								
ANR	680162	DeclStmt									
ANR	680163	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_7_ToLowerCaseTable
ANR	680164	DeclStmt									
ANR	680165	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_7_CtypeTable
ANR	680166	DeclStmt									
ANR	680167	Decl							const UChar	const UChar *	p
ANR	680168	Function	is_mbc_ambiguous	118:0:6378:6748							
ANR	680169	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		680168	0					
ANR	680170	CompoundStatement		121:0:6468:6748	680168	0					
ANR	680171	IdentifierDeclStatement	int v ;	122:2:6472:6477	680168	0	True				
ANR	680172	IdentifierDecl	v		680168	0					
ANR	680173	IdentifierDeclType	int		680168	0					
ANR	680174	Identifier	v		680168	1					
ANR	680175	IdentifierDeclStatement	const UChar * p = * pp ;	123:2:6481:6501	680168	1	True				
ANR	680176	IdentifierDecl	* p = * pp		680168	0					
ANR	680177	IdentifierDeclType	const UChar *		680168	0					
ANR	680178	Identifier	p		680168	1					
ANR	680179	AssignmentExpression	* p = * pp		680168	2		=			
ANR	680180	Identifier	p		680168	0					
ANR	680181	UnaryOperationExpression	* pp		680168	1					
ANR	680182	UnaryOperator	*		680168	0					
ANR	680183	Identifier	pp		680168	1					
ANR	680184	ExpressionStatement	( * pp ) ++	125:2:6506:6513	680168	2	True				
ANR	680185	PostIncDecOperationExpression	( * pp ) ++		680168	0					
ANR	680186	UnaryOperationExpression	* pp		680168	0					
ANR	680187	UnaryOperator	*		680168	0					
ANR	680188	Identifier	pp		680168	1					
ANR	680189	IncDec	++		680168	1					
ANR	680190	ExpressionStatement	v = ( EncISO_8859_7_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	126:2:6517:6589	680168	3	True				
ANR	680191	AssignmentExpression	v = ( EncISO_8859_7_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		680168	0		=			
ANR	680192	Identifier	v		680168	0					
ANR	680193	BitAndExpression	EncISO_8859_7_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		680168	1		&			
ANR	680194	ArrayIndexing	EncISO_8859_7_CtypeTable [ * p ]		680168	0					
ANR	680195	Identifier	EncISO_8859_7_CtypeTable		680168	0					
ANR	680196	UnaryOperationExpression	* p		680168	1					
ANR	680197	UnaryOperator	*		680168	0					
ANR	680198	Identifier	p		680168	1					
ANR	680199	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		680168	1		|			
ANR	680200	Identifier	BIT_CTYPE_UPPER		680168	0					
ANR	680201	Identifier	BIT_CTYPE_LOWER		680168	1					
ANR	680202	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		680168	4					
ANR	680203	Condition	( v | BIT_CTYPE_LOWER ) != 0	127:6:6597:6622	680168	0	True				
ANR	680204	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		680168	0		!=			
ANR	680205	InclusiveOrExpression	v | BIT_CTYPE_LOWER		680168	0		|			
ANR	680206	Identifier	v		680168	0					
ANR	680207	Identifier	BIT_CTYPE_LOWER		680168	1					
ANR	680208	PrimaryExpression	0		680168	1					
ANR	680209	CompoundStatement		7:34:156:156	680168	1					
ANR	680210	IfStatement	if ( * p == 0xc0 || * p == 0xe0 )		680168	0					
ANR	680211	Condition	* p == 0xc0 || * p == 0xe0	128:8:6635:6658	680168	0	True				
ANR	680212	OrExpression	* p == 0xc0 || * p == 0xe0		680168	0		||			
ANR	680213	EqualityExpression	* p == 0xc0		680168	0		==			
ANR	680214	UnaryOperationExpression	* p		680168	0					
ANR	680215	UnaryOperator	*		680168	0					
ANR	680216	Identifier	p		680168	1					
ANR	680217	PrimaryExpression	0xc0		680168	1					
ANR	680218	EqualityExpression	* p == 0xe0		680168	1		==			
ANR	680219	UnaryOperationExpression	* p		680168	0					
ANR	680220	UnaryOperator	*		680168	0					
ANR	680221	Identifier	p		680168	1					
ANR	680222	PrimaryExpression	0xe0		680168	1					
ANR	680223	ReturnStatement	return FALSE ;	129:6:6667:6679	680168	1	True				
ANR	680224	Identifier	FALSE		680168	0					
ANR	680225	ElseStatement	else		680168	0					
ANR	680226	ReturnStatement	return TRUE ;	131:6:6696:6707	680168	0	True				
ANR	680227	Identifier	TRUE		680168	0					
ANR	680228	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	134:2:6716:6746	680168	5	True				
ANR	680229	ConditionalExpression	v != 0 ? TRUE : FALSE		680168	0					
ANR	680230	Condition	v != 0		680168	0					
ANR	680231	EqualityExpression	v != 0		680168	0		!=			
ANR	680232	Identifier	v		680168	0					
ANR	680233	PrimaryExpression	0		680168	1					
ANR	680234	Identifier	TRUE		680168	1					
ANR	680235	Identifier	FALSE		680168	2					
ANR	680236	ReturnType	static int		680168	1					
ANR	680237	Identifier	is_mbc_ambiguous		680168	2					
ANR	680238	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		680168	3					
ANR	680239	Parameter	OnigCaseFoldType flag	119:17:6406:6426	680168	0	True				
ANR	680240	ParameterType	OnigCaseFoldType		680168	0					
ANR	680241	Identifier	flag		680168	1					
ANR	680242	Parameter	const UChar * * pp	120:3:6432:6447	680168	1	True				
ANR	680243	ParameterType	const UChar * *		680168	0					
ANR	680244	Identifier	pp		680168	1					
ANR	680245	Parameter	const UChar * end	120:21:6450:6465	680168	2	True				
ANR	680246	ParameterType	const UChar *		680168	0					
ANR	680247	Identifier	end		680168	1					
ANR	680248	CFGEntryNode	ENTRY		680168		True				
ANR	680249	CFGExitNode	EXIT		680168		True				
ANR	680250	Symbol	pp		680168						
ANR	680251	Symbol	flag		680168						
ANR	680252	Symbol	* pp		680168						
ANR	680253	Symbol	TRUE		680168						
ANR	680254	Symbol	p		680168						
ANR	680255	Symbol	EncISO_8859_7_CtypeTable		680168						
ANR	680256	Symbol	* EncISO_8859_7_CtypeTable		680168						
ANR	680257	Symbol	v		680168						
ANR	680258	Symbol	BIT_CTYPE_LOWER		680168						
ANR	680259	Symbol	end		680168						
ANR	680260	Symbol	BIT_CTYPE_UPPER		680168						
ANR	680261	Symbol	* p		680168						
ANR	680262	Symbol	FALSE		680168						
ANR	680263	Symbol	* * p		680168						
ANR	680264	Function	is_code_ctype	138:0:6758:6917							
ANR	680265	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		680264	0					
ANR	680266	CompoundStatement		140:0:6823:6917	680264	0					
ANR	680267	IfStatement	if ( code < 256 )		680264	0					
ANR	680268	Condition	code < 256	141:6:6831:6840	680264	0	True				
ANR	680269	RelationalExpression	code < 256		680264	0		<			
ANR	680270	Identifier	code		680264	0					
ANR	680271	PrimaryExpression	256		680264	1					
ANR	680272	ReturnStatement	"return ENC_IS_ISO_8859_7_CTYPE ( code , ctype ) ;"	142:4:6847:6890	680264	1	True				
ANR	680273	CallExpression	"ENC_IS_ISO_8859_7_CTYPE ( code , ctype )"		680264	0					
ANR	680274	Callee	ENC_IS_ISO_8859_7_CTYPE		680264	0					
ANR	680275	Identifier	ENC_IS_ISO_8859_7_CTYPE		680264	0					
ANR	680276	ArgumentList	code		680264	1					
ANR	680277	Argument	code		680264	0					
ANR	680278	Identifier	code		680264	0					
ANR	680279	Argument	ctype		680264	1					
ANR	680280	Identifier	ctype		680264	0					
ANR	680281	ElseStatement	else		680264	0					
ANR	680282	ReturnStatement	return FALSE ;	144:4:6903:6915	680264	0	True				
ANR	680283	Identifier	FALSE		680264	0					
ANR	680284	ReturnType	static int		680264	1					
ANR	680285	Identifier	is_code_ctype		680264	2					
ANR	680286	ParameterList	"OnigCodePoint code , unsigned int ctype"		680264	3					
ANR	680287	Parameter	OnigCodePoint code	139:14:6783:6800	680264	0	True				
ANR	680288	ParameterType	OnigCodePoint		680264	0					
ANR	680289	Identifier	code		680264	1					
ANR	680290	Parameter	unsigned int ctype	139:34:6803:6820	680264	1	True				
ANR	680291	ParameterType	unsigned int		680264	0					
ANR	680292	Identifier	ctype		680264	1					
ANR	680293	CFGEntryNode	ENTRY		680264		True				
ANR	680294	CFGExitNode	EXIT		680264		True				
ANR	680295	Symbol	code		680264						
ANR	680296	Symbol	ctype		680264						
ANR	680297	Symbol	FALSE		680264						
ANR	680298	Symbol	ENC_IS_ISO_8859_7_CTYPE		680264						
ANR	680299	DeclStmt									
ANR	680300	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	680301	Function	apply_all_case_fold	186:0:7556:7812							
ANR	680302	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		680301	0					
ANR	680303	CompoundStatement		189:0:7655:7812	680301	0					
ANR	680304	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , f , arg ) ;"	190:2:7659:7810	680301	0	True				
ANR	680305	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , f , arg )"		680301	0					
ANR	680306	Callee	onigenc_apply_all_case_fold_with_map		680301	0					
ANR	680307	Identifier	onigenc_apply_all_case_fold_with_map		680301	0					
ANR	680308	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680301	1					
ANR	680309	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680301	0					
ANR	680310	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680301	0		/			
ANR	680311	SizeofExpression	sizeof ( CaseFoldMap )		680301	0					
ANR	680312	Sizeof	sizeof		680301	0					
ANR	680313	SizeofOperand	CaseFoldMap		680301	1					
ANR	680314	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		680301	1					
ANR	680315	Sizeof	sizeof		680301	0					
ANR	680316	SizeofOperand	OnigPairCaseFoldCodes		680301	1					
ANR	680317	Argument	CaseFoldMap		680301	1					
ANR	680318	Identifier	CaseFoldMap		680301	0					
ANR	680319	Argument	0		680301	2					
ANR	680320	PrimaryExpression	0		680301	0					
ANR	680321	Argument	flag		680301	3					
ANR	680322	Identifier	flag		680301	0					
ANR	680323	Argument	f		680301	4					
ANR	680324	Identifier	f		680301	0					
ANR	680325	Argument	arg		680301	5					
ANR	680326	Identifier	arg		680301	0					
ANR	680327	ReturnType	static int		680301	1					
ANR	680328	Identifier	apply_all_case_fold		680301	2					
ANR	680329	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		680301	3					
ANR	680330	Parameter	OnigCaseFoldType flag	187:20:7587:7607	680301	0	True				
ANR	680331	ParameterType	OnigCaseFoldType		680301	0					
ANR	680332	Identifier	flag		680301	1					
ANR	680333	Parameter	OnigApplyAllCaseFoldFunc f	188:6:7616:7641	680301	1	True				
ANR	680334	ParameterType	OnigApplyAllCaseFoldFunc		680301	0					
ANR	680335	Identifier	f		680301	1					
ANR	680336	Parameter	void * arg	188:34:7644:7652	680301	2	True				
ANR	680337	ParameterType	void *		680301	0					
ANR	680338	Identifier	arg		680301	1					
ANR	680339	CFGEntryNode	ENTRY		680301		True				
ANR	680340	CFGExitNode	EXIT		680301		True				
ANR	680341	Symbol	flag		680301						
ANR	680342	Symbol	f		680301						
ANR	680343	Symbol	arg		680301						
ANR	680344	Symbol	CaseFoldMap		680301						
ANR	680345	Symbol	onigenc_apply_all_case_fold_with_map		680301						
ANR	680346	Function	get_case_fold_codes_by_str	195:0:7815:8108							
ANR	680347	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		680346	0					
ANR	680348	CompoundStatement		198:0:7951:8108	680346	0					
ANR	680349	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , p , end , items ) ;"	199:2:7955:8106	680346	0	True				
ANR	680350	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 0 , flag , p , end , items )"		680346	0					
ANR	680351	Callee	onigenc_get_case_fold_codes_by_str_with_map		680346	0					
ANR	680352	Identifier	onigenc_get_case_fold_codes_by_str_with_map		680346	0					
ANR	680353	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680346	1					
ANR	680354	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680346	0					
ANR	680355	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		680346	0		/			
ANR	680356	SizeofExpression	sizeof ( CaseFoldMap )		680346	0					
ANR	680357	Sizeof	sizeof		680346	0					
ANR	680358	SizeofOperand	CaseFoldMap		680346	1					
ANR	680359	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		680346	1					
ANR	680360	Sizeof	sizeof		680346	0					
ANR	680361	SizeofOperand	OnigPairCaseFoldCodes		680346	1					
ANR	680362	Argument	CaseFoldMap		680346	1					
ANR	680363	Identifier	CaseFoldMap		680346	0					
ANR	680364	Argument	0		680346	2					
ANR	680365	PrimaryExpression	0		680346	0					
ANR	680366	Argument	flag		680346	3					
ANR	680367	Identifier	flag		680346	0					
ANR	680368	Argument	p		680346	4					
ANR	680369	Identifier	p		680346	0					
ANR	680370	Argument	end		680346	5					
ANR	680371	Identifier	end		680346	0					
ANR	680372	Argument	items		680346	6					
ANR	680373	Identifier	items		680346	0					
ANR	680374	ReturnType	static int		680346	1					
ANR	680375	Identifier	get_case_fold_codes_by_str		680346	2					
ANR	680376	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		680346	3					
ANR	680377	Parameter	OnigCaseFoldType flag	196:27:7853:7873	680346	0	True				
ANR	680378	ParameterType	OnigCaseFoldType		680346	0					
ANR	680379	Identifier	flag		680346	1					
ANR	680380	Parameter	const OnigUChar * p	197:3:7879:7896	680346	1	True				
ANR	680381	ParameterType	const OnigUChar *		680346	0					
ANR	680382	Identifier	p		680346	1					
ANR	680383	Parameter	const OnigUChar * end	197:23:7899:7918	680346	2	True				
ANR	680384	ParameterType	const OnigUChar *		680346	0					
ANR	680385	Identifier	end		680346	1					
ANR	680386	Parameter	OnigCaseFoldCodeItem items [ ]	197:45:7921:7948	680346	3	True				
ANR	680387	ParameterType	OnigCaseFoldCodeItem [ ]		680346	0					
ANR	680388	Identifier	items		680346	1					
ANR	680389	CFGEntryNode	ENTRY		680346		True				
ANR	680390	CFGExitNode	EXIT		680346		True				
ANR	680391	Symbol	p		680346						
ANR	680392	Symbol	flag		680346						
ANR	680393	Symbol	end		680346						
ANR	680394	Symbol	CaseFoldMap		680346						
ANR	680395	Symbol	onigenc_get_case_fold_codes_by_str_with_map		680346						
ANR	680396	Symbol	items		680346						
ANR	680397	DeclStmt									
ANR	680398	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_7
