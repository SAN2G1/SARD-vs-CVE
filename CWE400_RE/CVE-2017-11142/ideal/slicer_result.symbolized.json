[{"FileName": "php_variables.c", "Caller": "SAPI_POST_HANDLER_FUNC", "Source": false, "Sink": false, "idx": 0, "CWE-ID": "CWE-400", "category": "CallExpression", "criterion": "memset", "line": 10, "label": -2, "slices": ["SAPI_API SAPI_POST_HANDLER_FUNC(php_std_post_handler) {\n", "    zval *arr = (zval *) arg;\n", "    php_stream *s = SG(request_info).request_body;\n", "    post_var_data_t post_data;\n", "    if (s && SUCCESS == php_stream_rewind(s)) {\n", "        memset(&post_data, 0, sizeof(post_data));\n", "        while (!php_stream_eof(s)) {\n", "            char buf[SAPI_POST_HANDLER_BUFSIZ] = {0};\n", "            size_t len = php_stream_read(s, buf, SAPI_POST_HANDLER_BUFSIZ);\n", "            if (len && len != (size_t) -1) {\n", "                smart_str_appendl(&post_data.str, buf, len);\n", "                if (SUCCESS != add_post_vars(arr, &post_data, 0 TSRMLS_CC)) {\n", "            }\n", "        }\n", "    }\n", "}\n", "static inline int add_post_vars(zval *arr, post_var_data_t *vars, zend_bool eof TSRMLS_DC)\n", "{\n", "    uint64_t max_vars = PG(max_input_vars);\n", "    vars->ptr = vars->str.c;\n", "    vars->end = vars->str.c + vars->str.len;\n", "    while (add_post_var(arr, vars, eof TSRMLS_CC)) {\n", "        static zend_bool add_post_var(zval *arr, post_var_data_t *var, zend_bool eof TSRMLS_DC){\n", "            char *ksep, *vsep, *val;\n", "            if (var->ptr >= var->end) {\n", "            vsep = memchr(var->ptr, '&', var->end - var->ptr);\n", "            if (!vsep) {\n", "                if (!eof) {\n", "                    return 0;\n", "            }\n", "        }\n", "    if (!eof) {\n", "        memmove(vars->str.c, vars->ptr, vars->str.len = vars->end - vars->ptr);\n", "    }\n", "}\n"], "tokenized": "STRUCT1 FUNC1(Var1){\nSTRUCT2 *Var2=(STRUCT2 *) Var3; \nSTRUCT3 *Var4=FUNC2(Var5).memberVar1; \nSTRUCT4  Var6; \nif (Var4&&Var7 == FUNC3(Var4)){\nmemset(&Var6,0,sizeof (Var6)); \nwhile (!FUNC4(Var4)){\nchar  Var8[Var9]={0}; \nsize_t  Var10=FUNC5(Var4,Var8,Var9); \nif (Var10&&Var10 != (size_t )-1){\nFUNC6(&Var6.memberVar1,Var8,Var10); \nif (Var7 != FUNC7(Var2,&Var6,0 Var11)){\n}\n}\n}\n}\nstatic inline int FUNC7(STRUCT2 *Var2,STRUCT4 *Var12,Var13  STRUCT5  Var14)\n{\nuint64_t  Var15=FUNC8(Var16); \nVar12->memberVar1=Var12->memberVar2.memberVar1; \nVar12->memberVar3=Var12->memberVar2.memberVar1+Var12->memberVar2.memberVar2; \nwhile (FUNC9(Var2,Var12,STRUCT5  Var11)){\nstatic  Var13 FUNC9(STRUCT2 *Var2,STRUCT4 *Var17,Var13  STRUCT5  Var14){\nchar *Var18,*Var19,*Var20; \nif (Var17->memberVar1 >=  Var17->memberVar2){\nVar19=memchr(Var17->memberVar1,&,Var17->memberVar2-Var17->memberVar1); \nif (!Var19){\nif (!STRUCT5){\nreturn 0; \n}\n}\nif (!STRUCT5){\nmemmove(Var12->memberVar2.memberVar1,Var12->memberVar1,Var12->memberVar2.memberVar2=Var12->memberVar3-Var12->memberVar1); \n}\n}\n"}]