[
   {
        "FileName": "php_variables.c",
        "Caller": "SAPI_POST_HANDLER_FUNC",
        "Source": false,
        "Sink": false,
        "idx": 0,
        "CWE-ID": "CWE-400",
        "category": "CallExpression",
        "criterion": "memset",
        "line": 10,
        "label": -2,
        "slices": [
            "SAPI_API SAPI_POST_HANDLER_FUNC(php_std_post_handler) {\n",
            "    zval *arr = (zval *) arg;\n",
            "    php_stream *s = SG(request_info).request_body;\n",
            "    post_var_data_t post_data;\n",
            "    if (s && SUCCESS == php_stream_rewind(s)) {\n",
            "        memset(&post_data, 0, sizeof(post_data));\n",
            "        while (!php_stream_eof(s)) {\n",
            "            char buf[SAPI_POST_HANDLER_BUFSIZ] = {0};\n",
            "            size_t len = php_stream_read(s, buf, SAPI_POST_HANDLER_BUFSIZ);\n",
            "            if (len && len != (size_t) -1) {\n",
            "                smart_str_appendl(&post_data.str, buf, len);\n",
            "                if (SUCCESS != add_post_vars(arr, &post_data, 0 TSRMLS_CC)) {\n",
            "            }\n",
            "        }\n",
            "    }\n",
            "}\n",
            "static inline int add_post_vars(zval *arr, post_var_data_t *vars, zend_bool eof TSRMLS_DC)\n",
            "{\n",
            "    uint64_t max_vars = PG(max_input_vars);\n",
            "    vars->ptr = vars->str.c;\n",
            "    vars->end = vars->str.c + vars->str.len;\n",
            "    while (add_post_var(arr, vars, eof TSRMLS_CC)) {\n",
            "        static zend_bool add_post_var(zval *arr, post_var_data_t *var, zend_bool eof TSRMLS_DC){\n",
            "            char *ksep, *vsep, *val;\n",
            "            if (var->ptr >= var->end) {\n",
            "            vsep = memchr(var->ptr, '&', var->end - var->ptr);\n",
            "            if (!vsep) {\n",
            "                if (!eof) {\n",
            "                    return 0;\n",
            "            }\n",
            "        }\n",
            "    if (!eof) {\n",
            "        memmove(vars->str.c, vars->ptr, vars->str.len = vars->end - vars->ptr);\n",
            "    }\n",
            "}\n"
        ]
    }
]