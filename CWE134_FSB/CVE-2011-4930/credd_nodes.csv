command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1	File	data/converged/credd_before/credd_before.cpp								
ANR	2	DeclStmt									
ANR	3	Decl							SimpleList < CredentialWrapper * >	SimpleList < CredentialWrapper * >	credentials
ANR	4	DeclStmt									
ANR	5	Decl							extern int	extern int	myproxyGetDelegationReaperId
ANR	6	DeclStmt									
ANR	7	Decl							StringList	StringList	super_users
ANR	8	DeclStmt									
ANR	9	Decl							char	char *	cred_store_dir
ANR	10	DeclStmt									
ANR	11	Decl							char	char *	cred_index_file
ANR	12	DeclStmt									
ANR	13	Decl							int	int	CheckCredentials_interval
ANR	14	DeclStmt									
ANR	15	Decl							int	int	default_cred_expire_threshold
ANR	16	DeclStmt									
ANR	17	Decl							void	void *	data
ANR	18	DeclStmt									
ANR	19	Decl							int	int	rtnVal
ANR	20	DeclStmt									
ANR	21	Decl							int	int	rc
ANR	22	DeclStmt									
ANR	23	Decl							char	char *	temp_file_name
ANR	24	DeclStmt									
ANR	25	Decl							bool	bool	found_cred
ANR	26	DeclStmt									
ANR	27	Decl							CredentialWrapper	CredentialWrapper *	temp_cred
ANR	28	DeclStmt									
ANR	29	Decl							int	int	data_size
ANR	30	DeclStmt									
ANR	31	Decl							classad :: ClassAd	classad :: ClassAd *	_classad
ANR	32	DeclStmt									
ANR	33	Decl							classad :: ClassAd	classad :: ClassAd	classad
ANR	34	DeclStmt									
ANR	35	Decl							std :: string	std :: string	classad_cstr
ANR	36	DeclStmt									
ANR	37	Decl							char	char *	classad_str
ANR	38	DeclStmt									
ANR	39	Decl							classad :: ClassAdParser	classad :: ClassAdParser	parser
ANR	40	DeclStmt									
ANR	41	Decl							ReliSock	ReliSock *	socket
ANR	42	DeclStmt									
ANR	43	Decl							const char	const char *	user
ANR	44	DeclStmt									
ANR	45	Decl							CredentialWrapper	CredentialWrapper *	cred_wrapper
ANR	46	DeclStmt									
ANR	47	Decl							CondorError	CondorError	errstack
ANR	48	DeclStmt									
ANR	49	Decl							int	int	type
ANR	50	DeclStmt									
ANR	51	Decl							int	int	rcred
ANR	52	DeclStmt									
ANR	53	Decl							int	int	rcred
ANR	54	DeclStmt									
ANR	55	Decl							char	char *	name
ANR	56	DeclStmt									
ANR	57	Decl							int	int	rtnVal
ANR	58	DeclStmt									
ANR	59	Decl							bool	bool	found_cred
ANR	60	DeclStmt									
ANR	61	Decl							CredentialWrapper	CredentialWrapper *	cred
ANR	62	DeclStmt									
ANR	63	Decl							char	char *	owner
ANR	64	DeclStmt									
ANR	65	Decl							const char	const char *	user
ANR	66	DeclStmt									
ANR	67	Decl							void	void *	data
ANR	68	DeclStmt									
ANR	69	Decl							ReliSock	ReliSock *	socket
ANR	70	DeclStmt									
ANR	71	Decl							CondorError	CondorError	errstack
ANR	72	DeclStmt									
ANR	73	Decl							char	char *	pColon
ANR	74	DeclStmt									
ANR	75	Decl							int	int	data_size
ANR	76	DeclStmt									
ANR	77	Decl							int	int	rc
ANR	78	DeclStmt									
ANR	79	Decl							int	int	rc
ANR	80	DeclStmt									
ANR	81	Decl							classad :: ClassAdUnParser	classad :: ClassAdUnParser	unparser
ANR	82	DeclStmt									
ANR	83	Decl							std :: string	std :: string	adbuffer
ANR	84	DeclStmt									
ANR	85	Decl							char	char *	request
ANR	86	DeclStmt									
ANR	87	Decl							int	int	rtnVal
ANR	88	DeclStmt									
ANR	89	Decl							int	int	length
ANR	90	DeclStmt									
ANR	91	Decl							CredentialWrapper	CredentialWrapper *	cred
ANR	92	DeclStmt									
ANR	93	Decl							SimpleList < Credential * >	SimpleList < Credential * >	result_list
ANR	94	DeclStmt									
ANR	95	Decl							ReliSock	ReliSock *	socket
ANR	96	DeclStmt									
ANR	97	Decl							const char	const char *	user
ANR	98	DeclStmt									
ANR	99	Decl							CondorError	CondorError	errstack
ANR	100	DeclStmt									
ANR	101	Decl							Credential	Credential *	_cred
ANR	102	DeclStmt									
ANR	103	Decl							classad :: ClassAd	classad :: ClassAd *	_temp
ANR	104	DeclStmt									
ANR	105	Decl							char	char *	classad_str
ANR	106	DeclStmt									
ANR	107	Decl							char	char *	name
ANR	108	DeclStmt									
ANR	109	Decl							int	int	rtnVal
ANR	110	DeclStmt									
ANR	111	Decl							int	int	rc
ANR	112	DeclStmt									
ANR	113	Decl							bool	bool	found_cred
ANR	114	DeclStmt									
ANR	115	Decl							CredentialWrapper	CredentialWrapper *	cred_wrapper
ANR	116	DeclStmt									
ANR	117	Decl							char	char *	owner
ANR	118	DeclStmt									
ANR	119	Decl							const char	const char *	user
ANR	120	DeclStmt									
ANR	121	Decl							ReliSock	ReliSock *	socket
ANR	122	DeclStmt									
ANR	123	Decl							CondorError	CondorError	errstack
ANR	124	DeclStmt									
ANR	125	Decl							char	char *	pColon
ANR	126	DeclStmt									
ANR	127	Decl							priv_state	priv_state	priv
ANR	128	Function	SaveCredentialList	523:0:12990:13698							
ANR	129	FunctionDef	SaveCredentialList ()		128	0					
ANR	130	CompoundStatement		524:21:13015:13698	128	0					
ANR	131	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	525:2:13019:13052	128	0	True				
ANR	132	IdentifierDecl	priv = set_root_priv ( )		128	0					
ANR	133	IdentifierDeclType	priv_state		128	0					
ANR	134	Identifier	priv		128	1					
ANR	135	AssignmentExpression	priv = set_root_priv ( )		128	2		=			
ANR	136	Identifier	priv		128	0					
ANR	137	CallExpression	set_root_priv ( )		128	1					
ANR	138	Callee	set_root_priv		128	0					
ANR	139	Identifier	set_root_priv		128	0					
ANR	140	ArgumentList			128	1					
ANR	141	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( cred_index_file , ""w"" ) ;"	526:2:13056:13108	128	1	True				
ANR	142	IdentifierDecl	"* fp = safe_fopen_wrapper ( cred_index_file , ""w"" )"		128	0					
ANR	143	IdentifierDeclType	FILE *		128	0					
ANR	144	Identifier	fp		128	1					
ANR	145	AssignmentExpression	"* fp = safe_fopen_wrapper ( cred_index_file , ""w"" )"		128	2		=			
ANR	146	Identifier	fp		128	0					
ANR	147	CallExpression	"safe_fopen_wrapper ( cred_index_file , ""w"" )"		128	1					
ANR	148	Callee	safe_fopen_wrapper		128	0					
ANR	149	Identifier	safe_fopen_wrapper		128	0					
ANR	150	ArgumentList	cred_index_file		128	1					
ANR	151	Argument	cred_index_file		128	0					
ANR	152	Identifier	cred_index_file		128	0					
ANR	153	Argument	"""w"""		128	1					
ANR	154	PrimaryExpression	"""w"""		128	0					
ANR	155	IfStatement	if ( ! fp )		128	2					
ANR	156	Condition	! fp	527:6:13116:13118	128	0	True				
ANR	157	UnaryOperationExpression	! fp		128	0					
ANR	158	UnaryOperator	!		128	0					
ANR	159	Identifier	fp		128	1					
ANR	160	CompoundStatement		4:11:105:105	128	1					
ANR	161	ExpressionStatement	set_priv ( priv )	528:4:13127:13142	128	0	True				
ANR	162	CallExpression	set_priv ( priv )		128	0					
ANR	163	Callee	set_priv		128	0					
ANR	164	Identifier	set_priv		128	0					
ANR	165	ArgumentList	priv		128	1					
ANR	166	Argument	priv		128	0					
ANR	167	Identifier	priv		128	0					
ANR	168	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open credential index file %s!\\n"" , cred_index_file )"	529:4:13148:13229	128	1	True				
ANR	169	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open credential index file %s!\\n"" , cred_index_file )"		128	0					
ANR	170	Callee	dprintf		128	0					
ANR	171	Identifier	dprintf		128	0					
ANR	172	ArgumentList	D_ALWAYS		128	1					
ANR	173	Argument	D_ALWAYS		128	0					
ANR	174	Identifier	D_ALWAYS		128	0					
ANR	175	Argument	"""Unable to open credential index file %s!\\n"""		128	1					
ANR	176	PrimaryExpression	"""Unable to open credential index file %s!\\n"""		128	0					
ANR	177	Argument	cred_index_file		128	2					
ANR	178	Identifier	cred_index_file		128	0					
ANR	179	ReturnStatement	return FALSE ;	530:4:13235:13247	128	2	True				
ANR	180	Identifier	FALSE		128	0					
ANR	181	IdentifierDeclStatement	classad :: ClassAdXMLUnParser unparser ;	534:2:13257:13293	128	3	True				
ANR	182	IdentifierDecl	unparser		128	0					
ANR	183	IdentifierDeclType	classad :: ClassAdXMLUnParser		128	0					
ANR	184	Identifier	unparser		128	1					
ANR	185	IdentifierDeclStatement	CredentialWrapper * pCred = NULL ;	535:2:13297:13329	128	4	True				
ANR	186	IdentifierDecl	* pCred = NULL		128	0					
ANR	187	IdentifierDeclType	CredentialWrapper *		128	0					
ANR	188	Identifier	pCred		128	1					
ANR	189	AssignmentExpression	* pCred = NULL		128	2		=			
ANR	190	Identifier	NULL		128	0					
ANR	191	Identifier	NULL		128	1					
ANR	192	ExpressionStatement	credentials . Rewind ( )	538:2:13358:13378	128	5	True				
ANR	193	CallExpression	credentials . Rewind ( )		128	0					
ANR	194	Callee	credentials . Rewind		128	0					
ANR	195	MemberAccess	credentials . Rewind		128	0					
ANR	196	Identifier	credentials		128	0					
ANR	197	Identifier	Rewind		128	1					
ANR	198	ArgumentList			128	1					
ANR	199	WhileStatement	while ( credentials . Next ( pCred ) )		128	6					
ANR	200	Condition	credentials . Next ( pCred )	539:9:13389:13411	128	0	True				
ANR	201	CallExpression	credentials . Next ( pCred )		128	0					
ANR	202	Callee	credentials . Next		128	0					
ANR	203	MemberAccess	credentials . Next		128	0					
ANR	204	Identifier	credentials		128	0					
ANR	205	Identifier	Next		128	1					
ANR	206	ArgumentList	pCred		128	1					
ANR	207	Argument	pCred		128	0					
ANR	208	Identifier	pCred		128	0					
ANR	209	CompoundStatement		19:4:523:539	128	1					
ANR	210	IdentifierDeclStatement	const classad :: ClassAd * pclassad = pCred -> cred -> GetMetadata ( ) ;	540:4:13420:13482	128	0	True				
ANR	211	IdentifierDecl	* pclassad = pCred -> cred -> GetMetadata ( )		128	0					
ANR	212	IdentifierDeclType	const classad :: ClassAd *		128	0					
ANR	213	Identifier	pclassad		128	1					
ANR	214	AssignmentExpression	* pclassad = pCred -> cred -> GetMetadata ( )		128	2		=			
ANR	215	Identifier	pclassad		128	0					
ANR	216	CallExpression	pCred -> cred -> GetMetadata ( )		128	1					
ANR	217	Callee	pCred -> cred -> GetMetadata		128	0					
ANR	218	PtrMemberAccess	pCred -> cred -> GetMetadata		128	0					
ANR	219	PtrMemberAccess	pCred -> cred		128	0					
ANR	220	Identifier	pCred		128	0					
ANR	221	Identifier	cred		128	1					
ANR	222	Identifier	GetMetadata		128	1					
ANR	223	ArgumentList			128	1					
ANR	224	IdentifierDeclStatement	classad :: ClassAd temp_classad ( * pclassad ) ;	541:1:13485:13525	128	1	True				
ANR	225	IdentifierDecl	temp_classad ( * pclassad )		128	0					
ANR	226	IdentifierDeclType	classad :: ClassAd		128	0					
ANR	227	Identifier	temp_classad		128	1					
ANR	228	UnaryOperationExpression	* pclassad		128	2					
ANR	229	UnaryOperator	*		128	0					
ANR	230	Identifier	pclassad		128	1					
ANR	231	IdentifierDeclStatement	std :: string buff ;	542:4:13539:13555	128	2	True				
ANR	232	IdentifierDecl	buff		128	0					
ANR	233	IdentifierDeclType	std :: string		128	0					
ANR	234	Identifier	buff		128	1					
ANR	235	ExpressionStatement	"unparser . Unparse ( buff , & temp_classad )"	543:4:13561:13599	128	3	True				
ANR	236	CallExpression	"unparser . Unparse ( buff , & temp_classad )"		128	0					
ANR	237	Callee	unparser . Unparse		128	0					
ANR	238	MemberAccess	unparser . Unparse		128	0					
ANR	239	Identifier	unparser		128	0					
ANR	240	Identifier	Unparse		128	1					
ANR	241	ArgumentList	buff		128	1					
ANR	242	Argument	buff		128	0					
ANR	243	Identifier	buff		128	0					
ANR	244	Argument	& temp_classad		128	1					
ANR	245	UnaryOperationExpression	& temp_classad		128	0					
ANR	246	UnaryOperator	&		128	0					
ANR	247	Identifier	temp_classad		128	1					
ANR	248	ExpressionStatement	"fprintf ( fp , ""%s\\n"" , buff . c_str ( ) )"	544:4:13605:13639	128	4	True				
ANR	249	CallExpression	"fprintf ( fp , ""%s\\n"" , buff . c_str ( ) )"		128	0					
ANR	250	Callee	fprintf		128	0					
ANR	251	Identifier	fprintf		128	0					
ANR	252	ArgumentList	fp		128	1					
ANR	253	Argument	fp		128	0					
ANR	254	Identifier	fp		128	0					
ANR	255	Argument	"""%s\\n"""		128	1					
ANR	256	PrimaryExpression	"""%s\\n"""		128	0					
ANR	257	Argument	buff . c_str ( )		128	2					
ANR	258	CallExpression	buff . c_str ( )		128	0					
ANR	259	Callee	buff . c_str		128	0					
ANR	260	MemberAccess	buff . c_str		128	0					
ANR	261	Identifier	buff		128	0					
ANR	262	Identifier	c_str		128	1					
ANR	263	ArgumentList			128	1					
ANR	264	ExpressionStatement	fclose ( fp )	547:2:13648:13659	128	7	True				
ANR	265	CallExpression	fclose ( fp )		128	0					
ANR	266	Callee	fclose		128	0					
ANR	267	Identifier	fclose		128	0					
ANR	268	ArgumentList	fp		128	1					
ANR	269	Argument	fp		128	0					
ANR	270	Identifier	fp		128	0					
ANR	271	ExpressionStatement	set_priv ( priv )	549:2:13666:13681	128	8	True				
ANR	272	CallExpression	set_priv ( priv )		128	0					
ANR	273	Callee	set_priv		128	0					
ANR	274	Identifier	set_priv		128	0					
ANR	275	ArgumentList	priv		128	1					
ANR	276	Argument	priv		128	0					
ANR	277	Identifier	priv		128	0					
ANR	278	ReturnStatement	return TRUE ;	550:2:13685:13696	128	9	True				
ANR	279	Identifier	TRUE		128	0					
ANR	280	ReturnType	int		128	1					
ANR	281	Identifier	SaveCredentialList		128	2					
ANR	282	ParameterList			128	3					
ANR	283	CFGEntryNode	ENTRY		128		True				
ANR	284	CFGExitNode	EXIT		128		True				
ANR	285	Symbol	pCred -> cred		128						
ANR	286	Symbol	NULL		128						
ANR	287	Symbol	* pCred		128						
ANR	288	Symbol	safe_fopen_wrapper		128						
ANR	289	Symbol	credentials		128						
ANR	290	Symbol	& temp_classad		128						
ANR	291	Symbol	pCred -> cred -> GetMetadata		128						
ANR	292	Symbol	D_ALWAYS		128						
ANR	293	Symbol	TRUE		128						
ANR	294	Symbol	set_root_priv		128						
ANR	295	Symbol	fp		128						
ANR	296	Symbol	cred_index_file		128						
ANR	297	Symbol	pclassad		128						
ANR	298	Symbol	temp_classad		128						
ANR	299	Symbol	pCred		128						
ANR	300	Symbol	* pCred -> cred		128						
ANR	301	Symbol	* * pCred		128						
ANR	302	Symbol	FALSE		128						
ANR	303	Symbol	unparser		128						
ANR	304	Symbol	credentials . Next		128						
ANR	305	Symbol	priv		128						
ANR	306	Symbol	buff . c_str		128						
ANR	307	Symbol	buff		128						
ANR	308	Function	LoadCredentialList	553:0:13701:14908							
ANR	309	FunctionDef	LoadCredentialList ()		308	0					
ANR	310	CompoundStatement		554:22:13727:14908	308	0					
ANR	311	IdentifierDeclStatement	CredentialWrapper * pCred ;	555:2:13731:13756	308	0	True				
ANR	312	IdentifierDecl	* pCred		308	0					
ANR	313	IdentifierDeclType	CredentialWrapper *		308	0					
ANR	314	Identifier	pCred		308	1					
ANR	315	IfStatement	if ( ! credentials . IsEmpty ( ) )		308	1					
ANR	316	Condition	! credentials . IsEmpty ( )	558:6:13789:13810	308	0	True				
ANR	317	UnaryOperationExpression	! credentials . IsEmpty ( )		308	0					
ANR	318	UnaryOperator	!		308	0					
ANR	319	CallExpression	credentials . IsEmpty ( )		308	1					
ANR	320	Callee	credentials . IsEmpty		308	0					
ANR	321	MemberAccess	credentials . IsEmpty		308	0					
ANR	322	Identifier	credentials		308	0					
ANR	323	Identifier	IsEmpty		308	1					
ANR	324	ArgumentList			308	1					
ANR	325	CompoundStatement		5:30:85:85	308	1					
ANR	326	ExpressionStatement	credentials . Rewind ( )	559:4:13819:13839	308	0	True				
ANR	327	CallExpression	credentials . Rewind ( )		308	0					
ANR	328	Callee	credentials . Rewind		308	0					
ANR	329	MemberAccess	credentials . Rewind		308	0					
ANR	330	Identifier	credentials		308	0					
ANR	331	Identifier	Rewind		308	1					
ANR	332	ArgumentList			308	1					
ANR	333	WhileStatement	while ( credentials . Next ( pCred ) )		308	1					
ANR	334	Condition	credentials . Next ( pCred )	560:11:13852:13874	308	0	True				
ANR	335	CallExpression	credentials . Next ( pCred )		308	0					
ANR	336	Callee	credentials . Next		308	0					
ANR	337	MemberAccess	credentials . Next		308	0					
ANR	338	Identifier	credentials		308	0					
ANR	339	Identifier	Next		308	1					
ANR	340	ArgumentList	pCred		308	1					
ANR	341	Argument	pCred		308	0					
ANR	342	Identifier	pCred		308	0					
ANR	343	CompoundStatement		7:36:149:149	308	1					
ANR	344	ExpressionStatement	credentials . DeleteCurrent ( )	561:6:13885:13912	308	0	True				
ANR	345	CallExpression	credentials . DeleteCurrent ( )		308	0					
ANR	346	Callee	credentials . DeleteCurrent		308	0					
ANR	347	MemberAccess	credentials . DeleteCurrent		308	0					
ANR	348	Identifier	credentials		308	0					
ANR	349	Identifier	DeleteCurrent		308	1					
ANR	350	ArgumentList			308	1					
ANR	351	Statement	delete	562:6:13920:13925	308	1	True				
ANR	352	ExpressionStatement	pCred	562:13:13927:13932	308	2	True				
ANR	353	Identifier	pCred		308	0					
ANR	354	ExpressionStatement	credentials . Rewind ( )	566:2:13947:13967	308	2	True				
ANR	355	CallExpression	credentials . Rewind ( )		308	0					
ANR	356	Callee	credentials . Rewind		308	0					
ANR	357	MemberAccess	credentials . Rewind		308	0					
ANR	358	Identifier	credentials		308	0					
ANR	359	Identifier	Rewind		308	1					
ANR	360	ArgumentList			308	1					
ANR	361	IdentifierDeclStatement	classad :: ClassAdXMLParser parser ;	568:2:13974:14006	308	3	True				
ANR	362	IdentifierDecl	parser		308	0					
ANR	363	IdentifierDeclType	classad :: ClassAdXMLParser		308	0					
ANR	364	Identifier	parser		308	1					
ANR	365	IdentifierDeclStatement	char buff [ 50000 ] ;	569:2:14010:14026	308	4	True				
ANR	366	IdentifierDecl	buff [ 50000 ]		308	0					
ANR	367	IdentifierDeclType	char [ 50000 ]		308	0					
ANR	368	Identifier	buff		308	1					
ANR	369	PrimaryExpression	50000		308	2					
ANR	370	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	571:2:14033:14066	308	5	True				
ANR	371	IdentifierDecl	priv = set_root_priv ( )		308	0					
ANR	372	IdentifierDeclType	priv_state		308	0					
ANR	373	Identifier	priv		308	1					
ANR	374	AssignmentExpression	priv = set_root_priv ( )		308	2		=			
ANR	375	Identifier	priv		308	0					
ANR	376	CallExpression	set_root_priv ( )		308	1					
ANR	377	Callee	set_root_priv		308	0					
ANR	378	Identifier	set_root_priv		308	0					
ANR	379	ArgumentList			308	1					
ANR	380	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( cred_index_file , ""r"" ) ;"	573:2:14071:14123	308	6	True				
ANR	381	IdentifierDecl	"* fp = safe_fopen_wrapper ( cred_index_file , ""r"" )"		308	0					
ANR	382	IdentifierDeclType	FILE *		308	0					
ANR	383	Identifier	fp		308	1					
ANR	384	AssignmentExpression	"* fp = safe_fopen_wrapper ( cred_index_file , ""r"" )"		308	2		=			
ANR	385	Identifier	fp		308	0					
ANR	386	CallExpression	"safe_fopen_wrapper ( cred_index_file , ""r"" )"		308	1					
ANR	387	Callee	safe_fopen_wrapper		308	0					
ANR	388	Identifier	safe_fopen_wrapper		308	0					
ANR	389	ArgumentList	cred_index_file		308	1					
ANR	390	Argument	cred_index_file		308	0					
ANR	391	Identifier	cred_index_file		308	0					
ANR	392	Argument	"""r"""		308	1					
ANR	393	PrimaryExpression	"""r"""		308	0					
ANR	394	IfStatement	if ( ! fp )		308	7					
ANR	395	Condition	! fp	575:6:14134:14136	308	0	True				
ANR	396	UnaryOperationExpression	! fp		308	0					
ANR	397	UnaryOperator	!		308	0					
ANR	398	Identifier	fp		308	1					
ANR	399	CompoundStatement		22:11:411:411	308	1					
ANR	400	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Credential database %s does not exist!\\n"" , cred_index_file )"	576:4:14145:14227	308	0	True				
ANR	401	CallExpression	"dprintf ( D_FULLDEBUG , ""Credential database %s does not exist!\\n"" , cred_index_file )"		308	0					
ANR	402	Callee	dprintf		308	0					
ANR	403	Identifier	dprintf		308	0					
ANR	404	ArgumentList	D_FULLDEBUG		308	1					
ANR	405	Argument	D_FULLDEBUG		308	0					
ANR	406	Identifier	D_FULLDEBUG		308	0					
ANR	407	Argument	"""Credential database %s does not exist!\\n"""		308	1					
ANR	408	PrimaryExpression	"""Credential database %s does not exist!\\n"""		308	0					
ANR	409	Argument	cred_index_file		308	2					
ANR	410	Identifier	cred_index_file		308	0					
ANR	411	ExpressionStatement	set_priv ( priv )	577:4:14233:14248	308	1	True				
ANR	412	CallExpression	set_priv ( priv )		308	0					
ANR	413	Callee	set_priv		308	0					
ANR	414	Identifier	set_priv		308	0					
ANR	415	ArgumentList	priv		308	1					
ANR	416	Argument	priv		308	0					
ANR	417	Identifier	priv		308	0					
ANR	418	ReturnStatement	return TRUE ;	578:4:14254:14265	308	2	True				
ANR	419	Identifier	TRUE		308	0					
ANR	420	WhileStatement	"while ( fgets ( buff , 50000 , fp ) )"		308	8					
ANR	421	Condition	"fgets ( buff , 50000 , fp )"	581:9:14281:14302	308	0	True				
ANR	422	CallExpression	"fgets ( buff , 50000 , fp )"		308	0					
ANR	423	Callee	fgets		308	0					
ANR	424	Identifier	fgets		308	0					
ANR	425	ArgumentList	buff		308	1					
ANR	426	Argument	buff		308	0					
ANR	427	Identifier	buff		308	0					
ANR	428	Argument	50000		308	1					
ANR	429	PrimaryExpression	50000		308	0					
ANR	430	Argument	fp		308	2					
ANR	431	Identifier	fp		308	0					
ANR	432	CompoundStatement		34:4:718:728	308	1					
ANR	433	IfStatement	if ( ( buff [ 0 ] == '\\n' ) || ( buff [ 0 ] == '\\r' ) )		308	0					
ANR	434	Condition	( buff [ 0 ] == '\\n' ) || ( buff [ 0 ] == '\\r' )	582:8:14315:14352	308	0	True				
ANR	435	OrExpression	( buff [ 0 ] == '\\n' ) || ( buff [ 0 ] == '\\r' )		308	0		||			
ANR	436	EqualityExpression	buff [ 0 ] == '\\n'		308	0		==			
ANR	437	ArrayIndexing	buff [ 0 ]		308	0					
ANR	438	Identifier	buff		308	0					
ANR	439	PrimaryExpression	0		308	1					
ANR	440	PrimaryExpression	'\\n'		308	1					
ANR	441	EqualityExpression	buff [ 0 ] == '\\r'		308	1		==			
ANR	442	ArrayIndexing	buff [ 0 ]		308	0					
ANR	443	Identifier	buff		308	0					
ANR	444	PrimaryExpression	0		308	1					
ANR	445	PrimaryExpression	'\\r'		308	1					
ANR	446	CompoundStatement		29:48:627:627	308	1					
ANR	447	ContinueStatement	continue ;	583:6:14363:14371	308	0	True				
ANR	448	IdentifierDeclStatement	classad :: ClassAd * classad = parser . ParseClassAd ( buff ) ;	586:1:14385:14440	308	1	True				
ANR	449	IdentifierDecl	* classad = parser . ParseClassAd ( buff )		308	0					
ANR	450	IdentifierDeclType	classad :: ClassAd *		308	0					
ANR	451	Identifier	classad		308	1					
ANR	452	AssignmentExpression	* classad = parser . ParseClassAd ( buff )		308	2		=			
ANR	453	Identifier	classad		308	0					
ANR	454	CallExpression	parser . ParseClassAd ( buff )		308	1					
ANR	455	Callee	parser . ParseClassAd		308	0					
ANR	456	MemberAccess	parser . ParseClassAd		308	0					
ANR	457	Identifier	parser		308	0					
ANR	458	Identifier	ParseClassAd		308	1					
ANR	459	ArgumentList	buff		308	1					
ANR	460	Argument	buff		308	0					
ANR	461	Identifier	buff		308	0					
ANR	462	IdentifierDeclStatement	int type = 0 ;	587:4:14446:14456	308	2	True				
ANR	463	IdentifierDecl	type = 0		308	0					
ANR	464	IdentifierDeclType	int		308	0					
ANR	465	Identifier	type		308	1					
ANR	466	AssignmentExpression	type = 0		308	2		=			
ANR	467	Identifier	type		308	0					
ANR	468	PrimaryExpression	0		308	1					
ANR	469	IfStatement	"if ( ( ! classad ) || ( ! classad -> EvaluateAttrInt ( ""Type"" , type ) ) )"		308	3					
ANR	470	Condition	"( ! classad ) || ( ! classad -> EvaluateAttrInt ( ""Type"" , type ) )"	589:8:14467:14522	308	0	True				
ANR	471	OrExpression	"( ! classad ) || ( ! classad -> EvaluateAttrInt ( ""Type"" , type ) )"		308	0		||			
ANR	472	UnaryOperationExpression	! classad		308	0					
ANR	473	UnaryOperator	!		308	0					
ANR	474	Identifier	classad		308	1					
ANR	475	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""Type"" , type )"		308	1					
ANR	476	UnaryOperator	!		308	0					
ANR	477	CallExpression	"classad -> EvaluateAttrInt ( ""Type"" , type )"		308	1					
ANR	478	Callee	classad -> EvaluateAttrInt		308	0					
ANR	479	PtrMemberAccess	classad -> EvaluateAttrInt		308	0					
ANR	480	Identifier	classad		308	0					
ANR	481	Identifier	EvaluateAttrInt		308	1					
ANR	482	ArgumentList	"""Type"""		308	1					
ANR	483	Argument	"""Type"""		308	0					
ANR	484	PrimaryExpression	"""Type"""		308	0					
ANR	485	Argument	type		308	1					
ANR	486	Identifier	type		308	0					
ANR	487	CompoundStatement		36:66:797:797	308	1					
ANR	488	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid classad %s\\n"" , buff )"	590:6:14533:14581	308	0	True				
ANR	489	CallExpression	"dprintf ( D_ALWAYS , ""Invalid classad %s\\n"" , buff )"		308	0					
ANR	490	Callee	dprintf		308	0					
ANR	491	Identifier	dprintf		308	0					
ANR	492	ArgumentList	D_ALWAYS		308	1					
ANR	493	Argument	D_ALWAYS		308	0					
ANR	494	Identifier	D_ALWAYS		308	0					
ANR	495	Argument	"""Invalid classad %s\\n"""		308	1					
ANR	496	PrimaryExpression	"""Invalid classad %s\\n"""		308	0					
ANR	497	Argument	buff		308	2					
ANR	498	Identifier	buff		308	0					
ANR	499	ExpressionStatement	set_priv ( priv )	591:6:14589:14604	308	1	True				
ANR	500	CallExpression	set_priv ( priv )		308	0					
ANR	501	Callee	set_priv		308	0					
ANR	502	Identifier	set_priv		308	0					
ANR	503	ArgumentList	priv		308	1					
ANR	504	Argument	priv		308	0					
ANR	505	Identifier	priv		308	0					
ANR	506	ExpressionStatement	fclose ( fp )	592:6:14612:14623	308	2	True				
ANR	507	CallExpression	fclose ( fp )		308	0					
ANR	508	Callee	fclose		308	0					
ANR	509	Identifier	fclose		308	0					
ANR	510	ArgumentList	fp		308	1					
ANR	511	Argument	fp		308	0					
ANR	512	Identifier	fp		308	0					
ANR	513	ReturnStatement	return FALSE ;	593:6:14631:14643	308	3	True				
ANR	514	Identifier	FALSE		308	0					
ANR	515	IfStatement	if ( type == X509_CREDENTIAL_TYPE )		308	4					
ANR	516	Condition	type == X509_CREDENTIAL_TYPE	596:8:14660:14687	308	0	True				
ANR	517	EqualityExpression	type == X509_CREDENTIAL_TYPE		308	0		==			
ANR	518	Identifier	type		308	0					
ANR	519	Identifier	X509_CREDENTIAL_TYPE		308	1					
ANR	520	CompoundStatement		43:38:962:962	308	1					
ANR	521	ExpressionStatement	pCred = new X509CredentialWrapper ( * classad )	597:6:14698:14742	308	0	True				
ANR	522	AssignmentExpression	pCred = new X509CredentialWrapper ( * classad )		308	0		=			
ANR	523	Identifier	pCred		308	0					
ANR	524	UnaryOperationExpression	* classad		308	1					
ANR	525	UnaryOperator	*		308	0					
ANR	526	Identifier	classad		308	1					
ANR	527	ExpressionStatement	credentials . Append ( pCred )	598:6:14750:14776	308	1	True				
ANR	528	CallExpression	credentials . Append ( pCred )		308	0					
ANR	529	Callee	credentials . Append		308	0					
ANR	530	MemberAccess	credentials . Append		308	0					
ANR	531	Identifier	credentials		308	0					
ANR	532	Identifier	Append		308	1					
ANR	533	ArgumentList	pCred		308	1					
ANR	534	Argument	pCred		308	0					
ANR	535	Identifier	pCred		308	0					
ANR	536	ElseStatement	else		308	0					
ANR	537	CompoundStatement		47:9:1065:1065	308	0					
ANR	538	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid type %d\\n"" , type )"	601:6:14801:14845	308	0	True				
ANR	539	CallExpression	"dprintf ( D_ALWAYS , ""Invalid type %d\\n"" , type )"		308	0					
ANR	540	Callee	dprintf		308	0					
ANR	541	Identifier	dprintf		308	0					
ANR	542	ArgumentList	D_ALWAYS		308	1					
ANR	543	Argument	D_ALWAYS		308	0					
ANR	544	Identifier	D_ALWAYS		308	0					
ANR	545	Argument	"""Invalid type %d\\n"""		308	1					
ANR	546	PrimaryExpression	"""Invalid type %d\\n"""		308	0					
ANR	547	Argument	type		308	2					
ANR	548	Identifier	type		308	0					
ANR	549	ExpressionStatement	fclose ( fp )	604:2:14860:14871	308	9	True				
ANR	550	CallExpression	fclose ( fp )		308	0					
ANR	551	Callee	fclose		308	0					
ANR	552	Identifier	fclose		308	0					
ANR	553	ArgumentList	fp		308	1					
ANR	554	Argument	fp		308	0					
ANR	555	Identifier	fp		308	0					
ANR	556	ExpressionStatement	set_priv ( priv )	605:2:14875:14890	308	10	True				
ANR	557	CallExpression	set_priv ( priv )		308	0					
ANR	558	Callee	set_priv		308	0					
ANR	559	Identifier	set_priv		308	0					
ANR	560	ArgumentList	priv		308	1					
ANR	561	Argument	priv		308	0					
ANR	562	Identifier	priv		308	0					
ANR	563	ReturnStatement	return TRUE ;	607:2:14895:14906	308	11	True				
ANR	564	Identifier	TRUE		308	0					
ANR	565	ReturnType	int		308	1					
ANR	566	Identifier	LoadCredentialList		308	2					
ANR	567	ParameterList			308	3					
ANR	568	CFGEntryNode	ENTRY		308		True				
ANR	569	CFGExitNode	EXIT		308		True				
ANR	570	Symbol	safe_fopen_wrapper		308						
ANR	571	Symbol	* classad		308						
ANR	572	Symbol	credentials		308						
ANR	573	Symbol	D_ALWAYS		308						
ANR	574	Symbol	TRUE		308						
ANR	575	Symbol	set_root_priv		308						
ANR	576	Symbol	fp		308						
ANR	577	Symbol	D_FULLDEBUG		308						
ANR	578	Symbol	type		308						
ANR	579	Symbol	X509_CREDENTIAL_TYPE		308						
ANR	580	Symbol	cred_index_file		308						
ANR	581	Symbol	fgets		308						
ANR	582	Symbol	parser . ParseClassAd		308						
ANR	583	Symbol	pCred		308						
ANR	584	Symbol	parser		308						
ANR	585	Symbol	* buff		308						
ANR	586	Symbol	credentials . IsEmpty		308						
ANR	587	Symbol	credentials . Next		308						
ANR	588	Symbol	classad		308						
ANR	589	Symbol	classad -> EvaluateAttrInt		308						
ANR	590	Symbol	FALSE		308						
ANR	591	Symbol	priv		308						
ANR	592	Symbol	buff		308						
ANR	593	Function	CheckCredentials	610:0:14911:15956							
ANR	594	FunctionDef	CheckCredentials ()		593	0					
ANR	595	CompoundStatement		611:20:14936:15956	593	0					
ANR	596	IdentifierDeclStatement	CredentialWrapper * pCred ;	612:2:14940:14965	593	0	True				
ANR	597	IdentifierDecl	* pCred		593	0					
ANR	598	IdentifierDeclType	CredentialWrapper *		593	0					
ANR	599	Identifier	pCred		593	1					
ANR	600	ExpressionStatement	credentials . Rewind ( )	613:2:14969:14989	593	1	True				
ANR	601	CallExpression	credentials . Rewind ( )		593	0					
ANR	602	Callee	credentials . Rewind		593	0					
ANR	603	MemberAccess	credentials . Rewind		593	0					
ANR	604	Identifier	credentials		593	0					
ANR	605	Identifier	Rewind		593	1					
ANR	606	ArgumentList			593	1					
ANR	607	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In CheckCredentials()\\n"" )"	614:2:14995:15043	593	2	True				
ANR	608	CallExpression	"dprintf ( D_FULLDEBUG , ""In CheckCredentials()\\n"" )"		593	0					
ANR	609	Callee	dprintf		593	0					
ANR	610	Identifier	dprintf		593	0					
ANR	611	ArgumentList	D_FULLDEBUG		593	1					
ANR	612	Argument	D_FULLDEBUG		593	0					
ANR	613	Identifier	D_FULLDEBUG		593	0					
ANR	614	Argument	"""In CheckCredentials()\\n"""		593	1					
ANR	615	PrimaryExpression	"""In CheckCredentials()\\n"""		593	0					
ANR	616	IdentifierDeclStatement	time_t now = time ( NULL ) ;	617:2:15070:15093	593	3	True				
ANR	617	IdentifierDecl	now = time ( NULL )		593	0					
ANR	618	IdentifierDeclType	time_t		593	0					
ANR	619	Identifier	now		593	1					
ANR	620	AssignmentExpression	now = time ( NULL )		593	2		=			
ANR	621	Identifier	now		593	0					
ANR	622	CallExpression	time ( NULL )		593	1					
ANR	623	Callee	time		593	0					
ANR	624	Identifier	time		593	0					
ANR	625	ArgumentList	NULL		593	1					
ANR	626	Argument	NULL		593	0					
ANR	627	Identifier	NULL		593	0					
ANR	628	WhileStatement	while ( credentials . Next ( pCred ) )		593	4					
ANR	629	Condition	credentials . Next ( pCred )	619:9:15105:15127	593	0	True				
ANR	630	CallExpression	credentials . Next ( pCred )		593	0					
ANR	631	Callee	credentials . Next		593	0					
ANR	632	MemberAccess	credentials . Next		593	0					
ANR	633	Identifier	credentials		593	0					
ANR	634	Identifier	Next		593	1					
ANR	635	ArgumentList	pCred		593	1					
ANR	636	Argument	pCred		593	0					
ANR	637	Identifier	pCred		593	0					
ANR	638	CompoundStatement		14:4:297:347	593	1					
ANR	639	ExpressionStatement	init_user_id_from_FQN ( pCred -> cred -> GetOwner ( ) )	621:4:15141:15188	593	0	True				
ANR	640	CallExpression	init_user_id_from_FQN ( pCred -> cred -> GetOwner ( ) )		593	0					
ANR	641	Callee	init_user_id_from_FQN		593	0					
ANR	642	Identifier	init_user_id_from_FQN		593	0					
ANR	643	ArgumentList	pCred -> cred -> GetOwner ( )		593	1					
ANR	644	Argument	pCred -> cred -> GetOwner ( )		593	0					
ANR	645	CallExpression	pCred -> cred -> GetOwner ( )		593	0					
ANR	646	Callee	pCred -> cred -> GetOwner		593	0					
ANR	647	PtrMemberAccess	pCred -> cred -> GetOwner		593	0					
ANR	648	PtrMemberAccess	pCred -> cred		593	0					
ANR	649	Identifier	pCred		593	0					
ANR	650	Identifier	cred		593	1					
ANR	651	Identifier	GetOwner		593	1					
ANR	652	ArgumentList			593	1					
ANR	653	IdentifierDeclStatement	priv_state priv = set_user_priv ( ) ;	622:4:15194:15227	593	1	True				
ANR	654	IdentifierDecl	priv = set_user_priv ( )		593	0					
ANR	655	IdentifierDeclType	priv_state		593	0					
ANR	656	Identifier	priv		593	1					
ANR	657	AssignmentExpression	priv = set_user_priv ( )		593	2		=			
ANR	658	Identifier	priv		593	0					
ANR	659	CallExpression	set_user_priv ( )		593	1					
ANR	660	Callee	set_user_priv		593	0					
ANR	661	Identifier	set_user_priv		593	0					
ANR	662	ArgumentList			593	1					
ANR	663	IdentifierDeclStatement	time_t time = pCred -> cred -> GetRealExpirationTime ( ) ;	624:4:15234:15284	593	2	True				
ANR	664	IdentifierDecl	time = pCred -> cred -> GetRealExpirationTime ( )		593	0					
ANR	665	IdentifierDeclType	time_t		593	0					
ANR	666	Identifier	time		593	1					
ANR	667	AssignmentExpression	time = pCred -> cred -> GetRealExpirationTime ( )		593	2		=			
ANR	668	Identifier	time		593	0					
ANR	669	CallExpression	pCred -> cred -> GetRealExpirationTime ( )		593	1					
ANR	670	Callee	pCred -> cred -> GetRealExpirationTime		593	0					
ANR	671	PtrMemberAccess	pCred -> cred -> GetRealExpirationTime		593	0					
ANR	672	PtrMemberAccess	pCred -> cred		593	0					
ANR	673	Identifier	pCred		593	0					
ANR	674	Identifier	cred		593	1					
ANR	675	Identifier	GetRealExpirationTime		593	1					
ANR	676	ArgumentList			593	1					
ANR	677	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Checking %s:%s = %ld\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) , time )"	625:4:15290:15423	593	3	True				
ANR	678	CallExpression	"dprintf ( D_FULLDEBUG , ""Checking %s:%s = %ld\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) , time )"		593	0					
ANR	679	Callee	dprintf		593	0					
ANR	680	Identifier	dprintf		593	0					
ANR	681	ArgumentList	D_FULLDEBUG		593	1					
ANR	682	Argument	D_FULLDEBUG		593	0					
ANR	683	Identifier	D_FULLDEBUG		593	0					
ANR	684	Argument	"""Checking %s:%s = %ld\\n"""		593	1					
ANR	685	PrimaryExpression	"""Checking %s:%s = %ld\\n"""		593	0					
ANR	686	Argument	pCred -> cred -> GetOwner ( )		593	2					
ANR	687	CallExpression	pCred -> cred -> GetOwner ( )		593	0					
ANR	688	Callee	pCred -> cred -> GetOwner		593	0					
ANR	689	PtrMemberAccess	pCred -> cred -> GetOwner		593	0					
ANR	690	PtrMemberAccess	pCred -> cred		593	0					
ANR	691	Identifier	pCred		593	0					
ANR	692	Identifier	cred		593	1					
ANR	693	Identifier	GetOwner		593	1					
ANR	694	ArgumentList			593	1					
ANR	695	Argument	pCred -> cred -> GetName ( )		593	3					
ANR	696	CallExpression	pCred -> cred -> GetName ( )		593	0					
ANR	697	Callee	pCred -> cred -> GetName		593	0					
ANR	698	PtrMemberAccess	pCred -> cred -> GetName		593	0					
ANR	699	PtrMemberAccess	pCred -> cred		593	0					
ANR	700	Identifier	pCred		593	0					
ANR	701	Identifier	cred		593	1					
ANR	702	Identifier	GetName		593	1					
ANR	703	ArgumentList			593	1					
ANR	704	Argument	time		593	4					
ANR	705	Identifier	time		593	0					
ANR	706	IfStatement	if ( time - now < 0 )		593	4					
ANR	707	Condition	time - now < 0	630:8:15434:15447	593	0	True				
ANR	708	RelationalExpression	time - now < 0		593	0		<			
ANR	709	AdditiveExpression	time - now		593	0		-			
ANR	710	Identifier	time		593	0					
ANR	711	Identifier	now		593	1					
ANR	712	PrimaryExpression	0		593	1					
ANR	713	CompoundStatement		20:24:513:513	593	1					
ANR	714	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Credential %s:%s expired!\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) )"	631:6:15458:15575	593	0	True				
ANR	715	CallExpression	"dprintf ( D_FULLDEBUG , ""Credential %s:%s expired!\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) )"		593	0					
ANR	716	Callee	dprintf		593	0					
ANR	717	Identifier	dprintf		593	0					
ANR	718	ArgumentList	D_FULLDEBUG		593	1					
ANR	719	Argument	D_FULLDEBUG		593	0					
ANR	720	Identifier	D_FULLDEBUG		593	0					
ANR	721	Argument	"""Credential %s:%s expired!\\n"""		593	1					
ANR	722	PrimaryExpression	"""Credential %s:%s expired!\\n"""		593	0					
ANR	723	Argument	pCred -> cred -> GetOwner ( )		593	2					
ANR	724	CallExpression	pCred -> cred -> GetOwner ( )		593	0					
ANR	725	Callee	pCred -> cred -> GetOwner		593	0					
ANR	726	PtrMemberAccess	pCred -> cred -> GetOwner		593	0					
ANR	727	PtrMemberAccess	pCred -> cred		593	0					
ANR	728	Identifier	pCred		593	0					
ANR	729	Identifier	cred		593	1					
ANR	730	Identifier	GetOwner		593	1					
ANR	731	ArgumentList			593	1					
ANR	732	Argument	pCred -> cred -> GetName ( )		593	3					
ANR	733	CallExpression	pCred -> cred -> GetName ( )		593	0					
ANR	734	Callee	pCred -> cred -> GetName		593	0					
ANR	735	PtrMemberAccess	pCred -> cred -> GetName		593	0					
ANR	736	PtrMemberAccess	pCred -> cred		593	0					
ANR	737	Identifier	pCred		593	0					
ANR	738	Identifier	cred		593	1					
ANR	739	Identifier	GetName		593	1					
ANR	740	ArgumentList			593	1					
ANR	741	ElseStatement	else		593	0					
ANR	742	IfStatement	if ( time - now < default_cred_expire_threshold )		593	0					
ANR	743	Condition	time - now < default_cred_expire_threshold	635:13:15596:15637	593	0	True				
ANR	744	RelationalExpression	time - now < default_cred_expire_threshold		593	0		<			
ANR	745	AdditiveExpression	time - now		593	0		-			
ANR	746	Identifier	time		593	0					
ANR	747	Identifier	now		593	1					
ANR	748	Identifier	default_cred_expire_threshold		593	1					
ANR	749	CompoundStatement		25:57:703:703	593	1					
ANR	750	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Credential %s:%s about to expire\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) )"	636:6:15648:15772	593	0	True				
ANR	751	CallExpression	"dprintf ( D_FULLDEBUG , ""Credential %s:%s about to expire\\n"" , pCred -> cred -> GetOwner ( ) , pCred -> cred -> GetName ( ) )"		593	0					
ANR	752	Callee	dprintf		593	0					
ANR	753	Identifier	dprintf		593	0					
ANR	754	ArgumentList	D_FULLDEBUG		593	1					
ANR	755	Argument	D_FULLDEBUG		593	0					
ANR	756	Identifier	D_FULLDEBUG		593	0					
ANR	757	Argument	"""Credential %s:%s about to expire\\n"""		593	1					
ANR	758	PrimaryExpression	"""Credential %s:%s about to expire\\n"""		593	0					
ANR	759	Argument	pCred -> cred -> GetOwner ( )		593	2					
ANR	760	CallExpression	pCred -> cred -> GetOwner ( )		593	0					
ANR	761	Callee	pCred -> cred -> GetOwner		593	0					
ANR	762	PtrMemberAccess	pCred -> cred -> GetOwner		593	0					
ANR	763	PtrMemberAccess	pCred -> cred		593	0					
ANR	764	Identifier	pCred		593	0					
ANR	765	Identifier	cred		593	1					
ANR	766	Identifier	GetOwner		593	1					
ANR	767	ArgumentList			593	1					
ANR	768	Argument	pCred -> cred -> GetName ( )		593	3					
ANR	769	CallExpression	pCred -> cred -> GetName ( )		593	0					
ANR	770	Callee	pCred -> cred -> GetName		593	0					
ANR	771	PtrMemberAccess	pCred -> cred -> GetName		593	0					
ANR	772	PtrMemberAccess	pCred -> cred		593	0					
ANR	773	Identifier	pCred		593	0					
ANR	774	Identifier	cred		593	1					
ANR	775	Identifier	GetName		593	1					
ANR	776	ArgumentList			593	1					
ANR	777	IfStatement	if ( pCred -> cred -> GetType ( ) == X509_CREDENTIAL_TYPE )		593	1					
ANR	778	Condition	pCred -> cred -> GetType ( ) == X509_CREDENTIAL_TYPE	639:10:15784:15829	593	0	True				
ANR	779	EqualityExpression	pCred -> cred -> GetType ( ) == X509_CREDENTIAL_TYPE		593	0		==			
ANR	780	CallExpression	pCred -> cred -> GetType ( )		593	0					
ANR	781	Callee	pCred -> cred -> GetType		593	0					
ANR	782	PtrMemberAccess	pCred -> cred -> GetType		593	0					
ANR	783	PtrMemberAccess	pCred -> cred		593	0					
ANR	784	Identifier	pCred		593	0					
ANR	785	Identifier	cred		593	1					
ANR	786	Identifier	GetType		593	1					
ANR	787	ArgumentList			593	1					
ANR	788	Identifier	X509_CREDENTIAL_TYPE		593	1					
ANR	789	CompoundStatement		29:58:895:895	593	1					
ANR	790	ExpressionStatement	RefreshProxyThruMyProxy ( ( X509CredentialWrapper * ) pCred )	640:1:15835:15890	593	0	True				
ANR	791	CallExpression	RefreshProxyThruMyProxy ( ( X509CredentialWrapper * ) pCred )		593	0					
ANR	792	Callee	RefreshProxyThruMyProxy		593	0					
ANR	793	Identifier	RefreshProxyThruMyProxy		593	0					
ANR	794	ArgumentList	( X509CredentialWrapper * ) pCred		593	1					
ANR	795	Argument	( X509CredentialWrapper * ) pCred		593	0					
ANR	796	CastExpression	( X509CredentialWrapper * ) pCred		593	0					
ANR	797	CastTarget	X509CredentialWrapper *		593	0					
ANR	798	Identifier	pCred		593	1					
ANR	799	ExpressionStatement	set_priv ( priv )	644:4:15915:15930	593	5	True				
ANR	800	CallExpression	set_priv ( priv )		593	0					
ANR	801	Callee	set_priv		593	0					
ANR	802	Identifier	set_priv		593	0					
ANR	803	ArgumentList	priv		593	1					
ANR	804	Argument	priv		593	0					
ANR	805	Identifier	priv		593	0					
ANR	806	ReturnType	void		593	1					
ANR	807	Identifier	CheckCredentials		593	2					
ANR	808	ParameterList			593	3					
ANR	809	CFGEntryNode	ENTRY		593		True				
ANR	810	CFGExitNode	EXIT		593		True				
ANR	811	Symbol	pCred -> cred		593						
ANR	812	Symbol	NULL		593						
ANR	813	Symbol	* pCred		593						
ANR	814	Symbol	pCred -> cred -> GetType		593						
ANR	815	Symbol	credentials		593						
ANR	816	Symbol	pCred -> cred -> GetName		593						
ANR	817	Symbol	set_user_priv		593						
ANR	818	Symbol	D_FULLDEBUG		593						
ANR	819	Symbol	X509_CREDENTIAL_TYPE		593						
ANR	820	Symbol	pCred		593						
ANR	821	Symbol	now		593						
ANR	822	Symbol	* pCred -> cred		593						
ANR	823	Symbol	pCred -> cred -> GetRealExpirationTime		593						
ANR	824	Symbol	* * pCred		593						
ANR	825	Symbol	credentials . Next		593						
ANR	826	Symbol	time		593						
ANR	827	Symbol	priv		593						
ANR	828	Symbol	default_cred_expire_threshold		593						
ANR	829	Symbol	pCred -> cred -> GetOwner		593						
ANR	830	Function	RefreshProxyThruMyProxy	649:0:15960:21777							
ANR	831	FunctionDef	RefreshProxyThruMyProxy (X509CredentialWrapper * proxy)		830	0					
ANR	832	CompoundStatement		650:0:16019:21777	830	0					
ANR	833	IdentifierDeclStatement	const char * proxy_filename = proxy -> GetStorageName ( ) ;	651:2:16023:16076	830	0	True				
ANR	834	IdentifierDecl	* proxy_filename = proxy -> GetStorageName ( )		830	0					
ANR	835	IdentifierDeclType	const char *		830	0					
ANR	836	Identifier	proxy_filename		830	1					
ANR	837	AssignmentExpression	* proxy_filename = proxy -> GetStorageName ( )		830	2		=			
ANR	838	Identifier	proxy_filename		830	0					
ANR	839	CallExpression	proxy -> GetStorageName ( )		830	1					
ANR	840	Callee	proxy -> GetStorageName		830	0					
ANR	841	PtrMemberAccess	proxy -> GetStorageName		830	0					
ANR	842	Identifier	proxy		830	0					
ANR	843	Identifier	GetStorageName		830	1					
ANR	844	ArgumentList			830	1					
ANR	845	IdentifierDeclStatement	char * myproxy_host = NULL ;	652:2:16080:16106	830	1	True				
ANR	846	IdentifierDecl	* myproxy_host = NULL		830	0					
ANR	847	IdentifierDeclType	char *		830	0					
ANR	848	Identifier	myproxy_host		830	1					
ANR	849	AssignmentExpression	* myproxy_host = NULL		830	2		=			
ANR	850	Identifier	NULL		830	0					
ANR	851	Identifier	NULL		830	1					
ANR	852	IdentifierDeclStatement	int status ;	653:2:16110:16120	830	2	True				
ANR	853	IdentifierDecl	status		830	0					
ANR	854	IdentifierDeclType	int		830	0					
ANR	855	Identifier	status		830	1					
ANR	856	IfStatement	if ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) == NULL )		830	3					
ANR	857	Condition	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) == NULL	655:6:16129:16190	830	0	True				
ANR	858	EqualityExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) == NULL		830	0		==			
ANR	859	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	0					
ANR	860	Callee	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	861	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	862	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	863	CastTarget	X509Credential *		830	0					
ANR	864	PtrMemberAccess	proxy -> cred		830	1					
ANR	865	Identifier	proxy		830	0					
ANR	866	Identifier	cred		830	1					
ANR	867	Identifier	GetMyProxyServerHost		830	1					
ANR	868	ArgumentList			830	1					
ANR	869	Identifier	NULL		830	1					
ANR	870	CompoundStatement		6:70:173:173	830	1					
ANR	871	ExpressionStatement	"dprintf ( D_ALWAYS , ""Skipping %s\\n"" , proxy -> cred -> GetName ( ) )"	656:4:16199:16258	830	0	True				
ANR	872	CallExpression	"dprintf ( D_ALWAYS , ""Skipping %s\\n"" , proxy -> cred -> GetName ( ) )"		830	0					
ANR	873	Callee	dprintf		830	0					
ANR	874	Identifier	dprintf		830	0					
ANR	875	ArgumentList	D_ALWAYS		830	1					
ANR	876	Argument	D_ALWAYS		830	0					
ANR	877	Identifier	D_ALWAYS		830	0					
ANR	878	Argument	"""Skipping %s\\n"""		830	1					
ANR	879	PrimaryExpression	"""Skipping %s\\n"""		830	0					
ANR	880	Argument	proxy -> cred -> GetName ( )		830	2					
ANR	881	CallExpression	proxy -> cred -> GetName ( )		830	0					
ANR	882	Callee	proxy -> cred -> GetName		830	0					
ANR	883	PtrMemberAccess	proxy -> cred -> GetName		830	0					
ANR	884	PtrMemberAccess	proxy -> cred		830	0					
ANR	885	Identifier	proxy		830	0					
ANR	886	Identifier	cred		830	1					
ANR	887	Identifier	GetName		830	1					
ANR	888	ArgumentList			830	1					
ANR	889	ReturnStatement	return FALSE ;	657:4:16264:16276	830	1	True				
ANR	890	Identifier	FALSE		830	0					
ANR	891	IdentifierDeclStatement	time_t now = time ( NULL ) ;	661:2:16342:16365	830	4	True				
ANR	892	IdentifierDecl	now = time ( NULL )		830	0					
ANR	893	IdentifierDeclType	time_t		830	0					
ANR	894	Identifier	now		830	1					
ANR	895	AssignmentExpression	now = time ( NULL )		830	2		=			
ANR	896	Identifier	now		830	0					
ANR	897	CallExpression	time ( NULL )		830	1					
ANR	898	Callee	time		830	0					
ANR	899	Identifier	time		830	0					
ANR	900	ArgumentList	NULL		830	1					
ANR	901	Argument	NULL		830	0					
ANR	902	Identifier	NULL		830	0					
ANR	903	IfStatement	if ( proxy -> get_delegation_pid != GET_DELEGATION_PID_NONE )		830	5					
ANR	904	Condition	proxy -> get_delegation_pid != GET_DELEGATION_PID_NONE	663:6:16374:16425	830	0	True				
ANR	905	EqualityExpression	proxy -> get_delegation_pid != GET_DELEGATION_PID_NONE		830	0		!=			
ANR	906	PtrMemberAccess	proxy -> get_delegation_pid		830	0					
ANR	907	Identifier	proxy		830	0					
ANR	908	Identifier	get_delegation_pid		830	1					
ANR	909	Identifier	GET_DELEGATION_PID_NONE		830	1					
ANR	910	CompoundStatement		15:4:414:473	830	1					
ANR	911	IdentifierDeclStatement	time_t time_started = proxy -> get_delegation_proc_start_time ;	664:4:16434:16493	830	0	True				
ANR	912	IdentifierDecl	time_started = proxy -> get_delegation_proc_start_time		830	0					
ANR	913	IdentifierDeclType	time_t		830	0					
ANR	914	Identifier	time_started		830	1					
ANR	915	AssignmentExpression	time_started = proxy -> get_delegation_proc_start_time		830	2		=			
ANR	916	Identifier	time_started		830	0					
ANR	917	PtrMemberAccess	proxy -> get_delegation_proc_start_time		830	1					
ANR	918	Identifier	proxy		830	0					
ANR	919	Identifier	get_delegation_proc_start_time		830	1					
ANR	920	IfStatement	if ( now - time_started > 500 )		830	1					
ANR	921	Condition	now - time_started > 500	667:8:16569:16592	830	0	True				
ANR	922	RelationalExpression	now - time_started > 500		830	0		>			
ANR	923	AdditiveExpression	now - time_started		830	0		-			
ANR	924	Identifier	now		830	0					
ANR	925	Identifier	time_started		830	1					
ANR	926	PrimaryExpression	500		830	1					
ANR	927	CompoundStatement		18:34:575:575	830	1					
ANR	928	Statement	dprintf	668:6:16603:16609	830	0	True				
ANR	929	Statement	(	668:14:16611:16611	830	1	True				
ANR	930	Statement	D_FULLDEBUG	668:15:16612:16622	830	2	True				
ANR	931	Statement	","	668:26:16623:16623	830	3	True				
ANR	932	Statement	"""MyProxy refresh process pid=%d still running, """	668:28:16625:16672	830	4	True				
ANR	933	Statement	"""sending signal %d\\n"""	669:5:16679:16699	830	5	True				
ANR	934	Statement	","	669:26:16700:16700	830	6	True				
ANR	935	Statement	proxy	670:6:16708:16712	830	7	True				
ANR	936	Statement	->	670:11:16713:16714	830	8	True				
ANR	937	Statement	get_delegation_pid	670:13:16715:16732	830	9	True				
ANR	938	Statement	","	670:31:16733:16733	830	10	True				
ANR	939	Statement	SIGKILL	670:33:16735:16741	830	11	True				
ANR	940	Statement	)	670:40:16742:16742	830	12	True				
ANR	941	ExpressionStatement		670:41:16743:16743	830	13	True				
ANR	942	ExpressionStatement	"daemonCore -> Send_Signal ( proxy -> get_delegation_pid , SIGKILL )"	671:6:16751:16811	830	14	True				
ANR	943	CallExpression	"daemonCore -> Send_Signal ( proxy -> get_delegation_pid , SIGKILL )"		830	0					
ANR	944	Callee	daemonCore -> Send_Signal		830	0					
ANR	945	PtrMemberAccess	daemonCore -> Send_Signal		830	0					
ANR	946	Identifier	daemonCore		830	0					
ANR	947	Identifier	Send_Signal		830	1					
ANR	948	ArgumentList	proxy -> get_delegation_pid		830	1					
ANR	949	Argument	proxy -> get_delegation_pid		830	0					
ANR	950	PtrMemberAccess	proxy -> get_delegation_pid		830	0					
ANR	951	Identifier	proxy		830	0					
ANR	952	Identifier	get_delegation_pid		830	1					
ANR	953	Argument	SIGKILL		830	1					
ANR	954	Identifier	SIGKILL		830	0					
ANR	955	ElseStatement	else		830	0					
ANR	956	CompoundStatement		24:11:838:838	830	0					
ANR	957	Statement	dprintf	674:6:16866:16872	830	0	True				
ANR	958	Statement	(	674:14:16874:16874	830	1	True				
ANR	959	Statement	D_FULLDEBUG	674:15:16875:16885	830	2	True				
ANR	960	Statement	","	674:26:16886:16886	830	3	True				
ANR	961	Statement	"""MyProxy refresh process pid=%d still running, """	674:28:16888:16935	830	4	True				
ANR	962	Statement	"""letting it finish\\n"""	675:5:16942:16962	830	5	True				
ANR	963	Statement	","	675:26:16963:16963	830	6	True				
ANR	964	Statement	proxy	676:6:16971:16975	830	7	True				
ANR	965	Statement	->	676:11:16976:16977	830	8	True				
ANR	966	Statement	get_delegation_pid	676:13:16978:16995	830	9	True				
ANR	967	Statement	)	676:31:16996:16996	830	10	True				
ANR	968	ExpressionStatement		676:32:16997:16997	830	11	True				
ANR	969	ReturnStatement	return FALSE ;	678:1:17003:17015	830	2	True				
ANR	970	Identifier	FALSE		830	0					
ANR	971	ExpressionStatement	proxy -> get_delegation_proc_start_time = now	681:2:17024:17067	830	6	True				
ANR	972	AssignmentExpression	proxy -> get_delegation_proc_start_time = now		830	0		=			
ANR	973	PtrMemberAccess	proxy -> get_delegation_proc_start_time		830	0					
ANR	974	Identifier	proxy		830	0					
ANR	975	Identifier	get_delegation_proc_start_time		830	1					
ANR	976	Identifier	now		830	1					
ANR	977	IdentifierDeclStatement	Env myEnv ;	684:2:17124:17133	830	7	True				
ANR	978	IdentifierDecl	myEnv		830	0					
ANR	979	IdentifierDeclType	Env		830	0					
ANR	980	Identifier	myEnv		830	1					
ANR	981	IdentifierDeclStatement	MyString strBuff ;	685:2:17137:17153	830	8	True				
ANR	982	IdentifierDecl	strBuff		830	0					
ANR	983	IdentifierDeclType	MyString		830	0					
ANR	984	Identifier	strBuff		830	1					
ANR	985	IfStatement	if ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( ) )		830	9					
ANR	986	Condition	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( )	687:6:17162:17213	830	0	True				
ANR	987	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( )		830	0					
ANR	988	Callee	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN		830	0					
ANR	989	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN		830	0					
ANR	990	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	991	CastTarget	X509Credential *		830	0					
ANR	992	PtrMemberAccess	proxy -> cred		830	1					
ANR	993	Identifier	proxy		830	0					
ANR	994	Identifier	cred		830	1					
ANR	995	Identifier	GetMyProxyServerDN		830	1					
ANR	996	ArgumentList			830	1					
ANR	997	CompoundStatement		38:60:1196:1196	830	1					
ANR	998	ExpressionStatement	"strBuff = ""MYPROXY_SERVER_DN="""	688:4:17222:17250	830	0	True				
ANR	999	AssignmentExpression	"strBuff = ""MYPROXY_SERVER_DN="""		830	0		=			
ANR	1000	Identifier	strBuff		830	0					
ANR	1001	PrimaryExpression	"""MYPROXY_SERVER_DN="""		830	1					
ANR	1002	ExpressionStatement	strBuff += ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( )	689:4:17256:17318	830	1	True				
ANR	1003	AssignmentExpression	strBuff += ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( )		830	0		+=			
ANR	1004	Identifier	strBuff		830	0					
ANR	1005	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN ( )		830	1					
ANR	1006	Callee	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN		830	0					
ANR	1007	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN		830	0					
ANR	1008	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1009	CastTarget	X509Credential *		830	0					
ANR	1010	PtrMemberAccess	proxy -> cred		830	1					
ANR	1011	Identifier	proxy		830	0					
ANR	1012	Identifier	cred		830	1					
ANR	1013	Identifier	GetMyProxyServerDN		830	1					
ANR	1014	ArgumentList			830	1					
ANR	1015	ExpressionStatement	myEnv . SetEnv ( strBuff . Value ( ) )	690:4:17324:17354	830	2	True				
ANR	1016	CallExpression	myEnv . SetEnv ( strBuff . Value ( ) )		830	0					
ANR	1017	Callee	myEnv . SetEnv		830	0					
ANR	1018	MemberAccess	myEnv . SetEnv		830	0					
ANR	1019	Identifier	myEnv		830	0					
ANR	1020	Identifier	SetEnv		830	1					
ANR	1021	ArgumentList	strBuff . Value ( )		830	1					
ANR	1022	Argument	strBuff . Value ( )		830	0					
ANR	1023	CallExpression	strBuff . Value ( )		830	0					
ANR	1024	Callee	strBuff . Value		830	0					
ANR	1025	MemberAccess	strBuff . Value		830	0					
ANR	1026	Identifier	strBuff		830	0					
ANR	1027	Identifier	Value		830	1					
ANR	1028	ArgumentList			830	1					
ANR	1029	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , strBuff . Value ( ) )"	691:4:17360:17406	830	3	True				
ANR	1030	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , strBuff . Value ( ) )"		830	0					
ANR	1031	Callee	dprintf		830	0					
ANR	1032	Identifier	dprintf		830	0					
ANR	1033	ArgumentList	D_FULLDEBUG		830	1					
ANR	1034	Argument	D_FULLDEBUG		830	0					
ANR	1035	Identifier	D_FULLDEBUG		830	0					
ANR	1036	Argument	"""%s\\n"""		830	1					
ANR	1037	PrimaryExpression	"""%s\\n"""		830	0					
ANR	1038	Argument	strBuff . Value ( )		830	2					
ANR	1039	CallExpression	strBuff . Value ( )		830	0					
ANR	1040	Callee	strBuff . Value		830	0					
ANR	1041	MemberAccess	strBuff . Value		830	0					
ANR	1042	Identifier	strBuff		830	0					
ANR	1043	Identifier	Value		830	1					
ANR	1044	ArgumentList			830	1					
ANR	1045	ExpressionStatement	"strBuff = ""X509_USER_PROXY="""	694:2:17415:17441	830	10	True				
ANR	1046	AssignmentExpression	"strBuff = ""X509_USER_PROXY="""		830	0		=			
ANR	1047	Identifier	strBuff		830	0					
ANR	1048	PrimaryExpression	"""X509_USER_PROXY="""		830	1					
ANR	1049	ExpressionStatement	strBuff += proxy -> GetStorageName ( )	695:2:17445:17477	830	11	True				
ANR	1050	AssignmentExpression	strBuff += proxy -> GetStorageName ( )		830	0		+=			
ANR	1051	Identifier	strBuff		830	0					
ANR	1052	CallExpression	proxy -> GetStorageName ( )		830	1					
ANR	1053	Callee	proxy -> GetStorageName		830	0					
ANR	1054	PtrMemberAccess	proxy -> GetStorageName		830	0					
ANR	1055	Identifier	proxy		830	0					
ANR	1056	Identifier	GetStorageName		830	1					
ANR	1057	ArgumentList			830	1					
ANR	1058	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , strBuff . Value ( ) )"	696:2:17481:17527	830	12	True				
ANR	1059	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , strBuff . Value ( ) )"		830	0					
ANR	1060	Callee	dprintf		830	0					
ANR	1061	Identifier	dprintf		830	0					
ANR	1062	ArgumentList	D_FULLDEBUG		830	1					
ANR	1063	Argument	D_FULLDEBUG		830	0					
ANR	1064	Identifier	D_FULLDEBUG		830	0					
ANR	1065	Argument	"""%s\\n"""		830	1					
ANR	1066	PrimaryExpression	"""%s\\n"""		830	0					
ANR	1067	Argument	strBuff . Value ( )		830	2					
ANR	1068	CallExpression	strBuff . Value ( )		830	0					
ANR	1069	Callee	strBuff . Value		830	0					
ANR	1070	MemberAccess	strBuff . Value		830	0					
ANR	1071	Identifier	strBuff		830	0					
ANR	1072	Identifier	Value		830	1					
ANR	1073	ArgumentList			830	1					
ANR	1074	IdentifierDeclStatement	const char * myproxy_password = ( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword ( ) ;	699:2:17605:17688	830	13	True				
ANR	1075	IdentifierDecl	* myproxy_password = ( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword ( )		830	0					
ANR	1076	IdentifierDeclType	const char *		830	0					
ANR	1077	Identifier	myproxy_password		830	1					
ANR	1078	AssignmentExpression	* myproxy_password = ( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword ( )		830	2		=			
ANR	1079	Identifier	myproxy_password		830	0					
ANR	1080	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword ( )		830	1					
ANR	1081	Callee	( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword		830	0					
ANR	1082	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword		830	0					
ANR	1083	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1084	CastTarget	X509Credential *		830	0					
ANR	1085	PtrMemberAccess	proxy -> cred		830	1					
ANR	1086	Identifier	proxy		830	0					
ANR	1087	Identifier	cred		830	1					
ANR	1088	Identifier	GetRefreshPassword		830	1					
ANR	1089	ArgumentList			830	1					
ANR	1090	IfStatement	if ( myproxy_password == NULL )		830	14					
ANR	1091	Condition	myproxy_password == NULL	700:6:17696:17719	830	0	True				
ANR	1092	EqualityExpression	myproxy_password == NULL		830	0		==			
ANR	1093	Identifier	myproxy_password		830	0					
ANR	1094	Identifier	NULL		830	1					
ANR	1095	CompoundStatement		51:33:1703:1703	830	1					
ANR	1096	ExpressionStatement	"dprintf ( D_ALWAYS , ""No MyProxy password specified for %s:%s\\n"" , proxy -> cred -> GetName ( ) , proxy -> cred -> GetOwner ( ) )"	701:4:17729:17853	830	0	True				
ANR	1097	CallExpression	"dprintf ( D_ALWAYS , ""No MyProxy password specified for %s:%s\\n"" , proxy -> cred -> GetName ( ) , proxy -> cred -> GetOwner ( ) )"		830	0					
ANR	1098	Callee	dprintf		830	0					
ANR	1099	Identifier	dprintf		830	0					
ANR	1100	ArgumentList	D_ALWAYS		830	1					
ANR	1101	Argument	D_ALWAYS		830	0					
ANR	1102	Identifier	D_ALWAYS		830	0					
ANR	1103	Argument	"""No MyProxy password specified for %s:%s\\n"""		830	1					
ANR	1104	PrimaryExpression	"""No MyProxy password specified for %s:%s\\n"""		830	0					
ANR	1105	Argument	proxy -> cred -> GetName ( )		830	2					
ANR	1106	CallExpression	proxy -> cred -> GetName ( )		830	0					
ANR	1107	Callee	proxy -> cred -> GetName		830	0					
ANR	1108	PtrMemberAccess	proxy -> cred -> GetName		830	0					
ANR	1109	PtrMemberAccess	proxy -> cred		830	0					
ANR	1110	Identifier	proxy		830	0					
ANR	1111	Identifier	cred		830	1					
ANR	1112	Identifier	GetName		830	1					
ANR	1113	ArgumentList			830	1					
ANR	1114	Argument	proxy -> cred -> GetOwner ( )		830	3					
ANR	1115	CallExpression	proxy -> cred -> GetOwner ( )		830	0					
ANR	1116	Callee	proxy -> cred -> GetOwner		830	0					
ANR	1117	PtrMemberAccess	proxy -> cred -> GetOwner		830	0					
ANR	1118	PtrMemberAccess	proxy -> cred		830	0					
ANR	1119	Identifier	proxy		830	0					
ANR	1120	Identifier	cred		830	1					
ANR	1121	Identifier	GetOwner		830	1					
ANR	1122	ArgumentList			830	1					
ANR	1123	ExpressionStatement	"myproxy_password = """""	704:4:17859:17880	830	1	True				
ANR	1124	AssignmentExpression	"myproxy_password = """""		830	0		=			
ANR	1125	Identifier	myproxy_password		830	0					
ANR	1126	PrimaryExpression	""""""		830	1					
ANR	1127	ExpressionStatement	status = pipe ( proxy -> get_delegation_password_pipe )	707:2:17889:17940	830	15	True				
ANR	1128	AssignmentExpression	status = pipe ( proxy -> get_delegation_password_pipe )		830	0		=			
ANR	1129	Identifier	status		830	0					
ANR	1130	CallExpression	pipe ( proxy -> get_delegation_password_pipe )		830	1					
ANR	1131	Callee	pipe		830	0					
ANR	1132	Identifier	pipe		830	0					
ANR	1133	ArgumentList	proxy -> get_delegation_password_pipe		830	1					
ANR	1134	Argument	proxy -> get_delegation_password_pipe		830	0					
ANR	1135	PtrMemberAccess	proxy -> get_delegation_password_pipe		830	0					
ANR	1136	Identifier	proxy		830	0					
ANR	1137	Identifier	get_delegation_password_pipe		830	1					
ANR	1138	IfStatement	if ( status == - 1 )		830	16					
ANR	1139	Condition	status == - 1	708:6:17948:17959	830	0	True				
ANR	1140	EqualityExpression	status == - 1		830	0		==			
ANR	1141	Identifier	status		830	0					
ANR	1142	UnaryOperationExpression	- 1		830	1					
ANR	1143	UnaryOperator	-		830	0					
ANR	1144	PrimaryExpression	1		830	1					
ANR	1145	CompoundStatement		59:20:1942:1942	830	1					
ANR	1146	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_delegation pipe() failed: %s\\n"" , strerror ( errno ) )"	709:1:17965:18039	830	0	True				
ANR	1147	CallExpression	"dprintf ( D_ALWAYS , ""get_delegation pipe() failed: %s\\n"" , strerror ( errno ) )"		830	0					
ANR	1148	Callee	dprintf		830	0					
ANR	1149	Identifier	dprintf		830	0					
ANR	1150	ArgumentList	D_ALWAYS		830	1					
ANR	1151	Argument	D_ALWAYS		830	0					
ANR	1152	Identifier	D_ALWAYS		830	0					
ANR	1153	Argument	"""get_delegation pipe() failed: %s\\n"""		830	1					
ANR	1154	PrimaryExpression	"""get_delegation pipe() failed: %s\\n"""		830	0					
ANR	1155	Argument	strerror ( errno )		830	2					
ANR	1156	CallExpression	strerror ( errno )		830	0					
ANR	1157	Callee	strerror		830	0					
ANR	1158	Identifier	strerror		830	0					
ANR	1159	ArgumentList	errno		830	1					
ANR	1160	Argument	errno		830	0					
ANR	1161	Identifier	errno		830	0					
ANR	1162	ExpressionStatement	proxy -> get_delegation_reset ( )	710:1:18042:18071	830	1	True				
ANR	1163	CallExpression	proxy -> get_delegation_reset ( )		830	0					
ANR	1164	Callee	proxy -> get_delegation_reset		830	0					
ANR	1165	PtrMemberAccess	proxy -> get_delegation_reset		830	0					
ANR	1166	Identifier	proxy		830	0					
ANR	1167	Identifier	get_delegation_reset		830	1					
ANR	1168	ArgumentList			830	1					
ANR	1169	ReturnStatement	return FALSE ;	711:1:18074:18086	830	2	True				
ANR	1170	Identifier	FALSE		830	0					
ANR	1171	ExpressionStatement	"write ( proxy -> get_delegation_password_pipe [ 1 ] , myproxy_password , strlen ( myproxy_password ) )"	714:2:18159:18254	830	17	True				
ANR	1172	CallExpression	"write ( proxy -> get_delegation_password_pipe [ 1 ] , myproxy_password , strlen ( myproxy_password ) )"		830	0					
ANR	1173	Callee	write		830	0					
ANR	1174	Identifier	write		830	0					
ANR	1175	ArgumentList	proxy -> get_delegation_password_pipe [ 1 ]		830	1					
ANR	1176	Argument	proxy -> get_delegation_password_pipe [ 1 ]		830	0					
ANR	1177	ArrayIndexing	proxy -> get_delegation_password_pipe [ 1 ]		830	0					
ANR	1178	PtrMemberAccess	proxy -> get_delegation_password_pipe		830	0					
ANR	1179	Identifier	proxy		830	0					
ANR	1180	Identifier	get_delegation_password_pipe		830	1					
ANR	1181	PrimaryExpression	1		830	1					
ANR	1182	Argument	myproxy_password		830	1					
ANR	1183	Identifier	myproxy_password		830	0					
ANR	1184	Argument	strlen ( myproxy_password )		830	2					
ANR	1185	CallExpression	strlen ( myproxy_password )		830	0					
ANR	1186	Callee	strlen		830	0					
ANR	1187	Identifier	strlen		830	0					
ANR	1188	ArgumentList	myproxy_password		830	1					
ANR	1189	Argument	myproxy_password		830	0					
ANR	1190	Identifier	myproxy_password		830	0					
ANR	1191	ExpressionStatement	"write ( proxy -> get_delegation_password_pipe [ 1 ] , ""\\n"" , 1 )"	717:2:18258:18313	830	18	True				
ANR	1192	CallExpression	"write ( proxy -> get_delegation_password_pipe [ 1 ] , ""\\n"" , 1 )"		830	0					
ANR	1193	Callee	write		830	0					
ANR	1194	Identifier	write		830	0					
ANR	1195	ArgumentList	proxy -> get_delegation_password_pipe [ 1 ]		830	1					
ANR	1196	Argument	proxy -> get_delegation_password_pipe [ 1 ]		830	0					
ANR	1197	ArrayIndexing	proxy -> get_delegation_password_pipe [ 1 ]		830	0					
ANR	1198	PtrMemberAccess	proxy -> get_delegation_password_pipe		830	0					
ANR	1199	Identifier	proxy		830	0					
ANR	1200	Identifier	get_delegation_password_pipe		830	1					
ANR	1201	PrimaryExpression	1		830	1					
ANR	1202	Argument	"""\\n"""		830	1					
ANR	1203	PrimaryExpression	"""\\n"""		830	0					
ANR	1204	Argument	1		830	2					
ANR	1205	PrimaryExpression	1		830	0					
ANR	1206	IdentifierDeclStatement	const char * username = proxy -> cred -> GetOrigOwner ( ) ;	721:2:18346:18397	830	19	True				
ANR	1207	IdentifierDecl	* username = proxy -> cred -> GetOrigOwner ( )		830	0					
ANR	1208	IdentifierDeclType	const char *		830	0					
ANR	1209	Identifier	username		830	1					
ANR	1210	AssignmentExpression	* username = proxy -> cred -> GetOrigOwner ( )		830	2		=			
ANR	1211	Identifier	username		830	0					
ANR	1212	CallExpression	proxy -> cred -> GetOrigOwner ( )		830	1					
ANR	1213	Callee	proxy -> cred -> GetOrigOwner		830	0					
ANR	1214	PtrMemberAccess	proxy -> cred -> GetOrigOwner		830	0					
ANR	1215	PtrMemberAccess	proxy -> cred		830	0					
ANR	1216	Identifier	proxy		830	0					
ANR	1217	Identifier	cred		830	1					
ANR	1218	Identifier	GetOrigOwner		830	1					
ANR	1219	ArgumentList			830	1					
ANR	1220	ExpressionStatement	myproxy_host = getHostFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )	724:2:18440:18527	830	20	True				
ANR	1221	AssignmentExpression	myproxy_host = getHostFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )		830	0		=			
ANR	1222	Identifier	myproxy_host		830	0					
ANR	1223	CallExpression	getHostFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )		830	1					
ANR	1224	Callee	getHostFromAddr		830	0					
ANR	1225	Identifier	getHostFromAddr		830	0					
ANR	1226	ArgumentList	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	1					
ANR	1227	Argument	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	0					
ANR	1228	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	0					
ANR	1229	Callee	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	1230	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	1231	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1232	CastTarget	X509Credential *		830	0					
ANR	1233	PtrMemberAccess	proxy -> cred		830	1					
ANR	1234	Identifier	proxy		830	0					
ANR	1235	Identifier	cred		830	1					
ANR	1236	Identifier	GetMyProxyServerHost		830	1					
ANR	1237	ArgumentList			830	1					
ANR	1238	IdentifierDeclStatement	int myproxy_port = getPortFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) ) ;	725:2:18531:18622	830	21	True				
ANR	1239	IdentifierDecl	myproxy_port = getPortFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )		830	0					
ANR	1240	IdentifierDeclType	int		830	0					
ANR	1241	Identifier	myproxy_port		830	1					
ANR	1242	AssignmentExpression	myproxy_port = getPortFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )		830	2		=			
ANR	1243	Identifier	myproxy_port		830	0					
ANR	1244	CallExpression	getPortFromAddr ( ( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( ) )		830	1					
ANR	1245	Callee	getPortFromAddr		830	0					
ANR	1246	Identifier	getPortFromAddr		830	0					
ANR	1247	ArgumentList	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	1					
ANR	1248	Argument	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	0					
ANR	1249	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost ( )		830	0					
ANR	1250	Callee	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	1251	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830	0					
ANR	1252	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1253	CastTarget	X509Credential *		830	0					
ANR	1254	PtrMemberAccess	proxy -> cred		830	1					
ANR	1255	Identifier	proxy		830	0					
ANR	1256	Identifier	cred		830	1					
ANR	1257	Identifier	GetMyProxyServerHost		830	1					
ANR	1258	ArgumentList			830	1					
ANR	1259	IdentifierDeclStatement	ArgList args ;	728:2:18652:18664	830	22	True				
ANR	1260	IdentifierDecl	args		830	0					
ANR	1261	IdentifierDeclType	ArgList		830	0					
ANR	1262	Identifier	args		830	1					
ANR	1263	ExpressionStatement	"args . AppendArg ( ""--verbose "" )"	729:2:18668:18696	830	23	True				
ANR	1264	CallExpression	"args . AppendArg ( ""--verbose "" )"		830	0					
ANR	1265	Callee	args . AppendArg		830	0					
ANR	1266	MemberAccess	args . AppendArg		830	0					
ANR	1267	Identifier	args		830	0					
ANR	1268	Identifier	AppendArg		830	1					
ANR	1269	ArgumentList	"""--verbose """		830	1					
ANR	1270	Argument	"""--verbose """		830	0					
ANR	1271	PrimaryExpression	"""--verbose """		830	0					
ANR	1272	ExpressionStatement	"args . AppendArg ( ""--out"" )"	731:2:18701:18724	830	24	True				
ANR	1273	CallExpression	"args . AppendArg ( ""--out"" )"		830	0					
ANR	1274	Callee	args . AppendArg		830	0					
ANR	1275	MemberAccess	args . AppendArg		830	0					
ANR	1276	Identifier	args		830	0					
ANR	1277	Identifier	AppendArg		830	1					
ANR	1278	ArgumentList	"""--out"""		830	1					
ANR	1279	Argument	"""--out"""		830	0					
ANR	1280	PrimaryExpression	"""--out"""		830	0					
ANR	1281	ExpressionStatement	args . AppendArg ( proxy_filename )	732:2:18728:18758	830	25	True				
ANR	1282	CallExpression	args . AppendArg ( proxy_filename )		830	0					
ANR	1283	Callee	args . AppendArg		830	0					
ANR	1284	MemberAccess	args . AppendArg		830	0					
ANR	1285	Identifier	args		830	0					
ANR	1286	Identifier	AppendArg		830	1					
ANR	1287	ArgumentList	proxy_filename		830	1					
ANR	1288	Argument	proxy_filename		830	0					
ANR	1289	Identifier	proxy_filename		830	0					
ANR	1290	ExpressionStatement	"args . AppendArg ( ""--pshost"" )"	734:2:18763:18789	830	26	True				
ANR	1291	CallExpression	"args . AppendArg ( ""--pshost"" )"		830	0					
ANR	1292	Callee	args . AppendArg		830	0					
ANR	1293	MemberAccess	args . AppendArg		830	0					
ANR	1294	Identifier	args		830	0					
ANR	1295	Identifier	AppendArg		830	1					
ANR	1296	ArgumentList	"""--pshost"""		830	1					
ANR	1297	Argument	"""--pshost"""		830	0					
ANR	1298	PrimaryExpression	"""--pshost"""		830	0					
ANR	1299	ExpressionStatement	args . AppendArg ( myproxy_host )	735:2:18793:18821	830	27	True				
ANR	1300	CallExpression	args . AppendArg ( myproxy_host )		830	0					
ANR	1301	Callee	args . AppendArg		830	0					
ANR	1302	MemberAccess	args . AppendArg		830	0					
ANR	1303	Identifier	args		830	0					
ANR	1304	Identifier	AppendArg		830	1					
ANR	1305	ArgumentList	myproxy_host		830	1					
ANR	1306	Argument	myproxy_host		830	0					
ANR	1307	Identifier	myproxy_host		830	0					
ANR	1308	IfStatement	if ( myproxy_host != NULL )		830	28					
ANR	1309	Condition	myproxy_host != NULL	736:7:18830:18849	830	0	True				
ANR	1310	EqualityExpression	myproxy_host != NULL		830	0		!=			
ANR	1311	Identifier	myproxy_host		830	0					
ANR	1312	Identifier	NULL		830	1					
ANR	1313	CompoundStatement		87:30:2833:2833	830	1					
ANR	1314	ExpressionStatement	free ( myproxy_host )	737:3:18858:18879	830	0	True				
ANR	1315	CallExpression	free ( myproxy_host )		830	0					
ANR	1316	Callee	free		830	0					
ANR	1317	Identifier	free		830	0					
ANR	1318	ArgumentList	myproxy_host		830	1					
ANR	1319	Argument	myproxy_host		830	0					
ANR	1320	Identifier	myproxy_host		830	0					
ANR	1321	ExpressionStatement	"args . AppendArg ( ""--dn_as_username"" )"	740:2:18888:18922	830	29	True				
ANR	1322	CallExpression	"args . AppendArg ( ""--dn_as_username"" )"		830	0					
ANR	1323	Callee	args . AppendArg		830	0					
ANR	1324	MemberAccess	args . AppendArg		830	0					
ANR	1325	Identifier	args		830	0					
ANR	1326	Identifier	AppendArg		830	1					
ANR	1327	ArgumentList	"""--dn_as_username"""		830	1					
ANR	1328	Argument	"""--dn_as_username"""		830	0					
ANR	1329	PrimaryExpression	"""--dn_as_username"""		830	0					
ANR	1330	ExpressionStatement	"args . AppendArg ( ""--proxy_lifetime"" )"	742:2:18927:18961	830	30	True				
ANR	1331	CallExpression	"args . AppendArg ( ""--proxy_lifetime"" )"		830	0					
ANR	1332	Callee	args . AppendArg		830	0					
ANR	1333	MemberAccess	args . AppendArg		830	0					
ANR	1334	Identifier	args		830	0					
ANR	1335	Identifier	AppendArg		830	1					
ANR	1336	ArgumentList	"""--proxy_lifetime"""		830	1					
ANR	1337	Argument	"""--proxy_lifetime"""		830	0					
ANR	1338	PrimaryExpression	"""--proxy_lifetime"""		830	0					
ANR	1339	ExpressionStatement	args . AppendArg ( 6 )	743:2:18974:18991	830	31	True				
ANR	1340	CallExpression	args . AppendArg ( 6 )		830	0					
ANR	1341	Callee	args . AppendArg		830	0					
ANR	1342	MemberAccess	args . AppendArg		830	0					
ANR	1343	Identifier	args		830	0					
ANR	1344	Identifier	AppendArg		830	1					
ANR	1345	ArgumentList	6		830	1					
ANR	1346	Argument	6		830	0					
ANR	1347	PrimaryExpression	6		830	0					
ANR	1348	ExpressionStatement	"args . AppendArg ( ""--stdin_pass"" )"	745:2:18996:19026	830	32	True				
ANR	1349	CallExpression	"args . AppendArg ( ""--stdin_pass"" )"		830	0					
ANR	1350	Callee	args . AppendArg		830	0					
ANR	1351	MemberAccess	args . AppendArg		830	0					
ANR	1352	Identifier	args		830	0					
ANR	1353	Identifier	AppendArg		830	1					
ANR	1354	ArgumentList	"""--stdin_pass"""		830	1					
ANR	1355	Argument	"""--stdin_pass"""		830	0					
ANR	1356	PrimaryExpression	"""--stdin_pass"""		830	0					
ANR	1357	ExpressionStatement	"args . AppendArg ( ""--username"" )"	747:2:19031:19059	830	33	True				
ANR	1358	CallExpression	"args . AppendArg ( ""--username"" )"		830	0					
ANR	1359	Callee	args . AppendArg		830	0					
ANR	1360	MemberAccess	args . AppendArg		830	0					
ANR	1361	Identifier	args		830	0					
ANR	1362	Identifier	AppendArg		830	1					
ANR	1363	ArgumentList	"""--username"""		830	1					
ANR	1364	Argument	"""--username"""		830	0					
ANR	1365	PrimaryExpression	"""--username"""		830	0					
ANR	1366	ExpressionStatement	args . AppendArg ( username )	748:2:19063:19087	830	34	True				
ANR	1367	CallExpression	args . AppendArg ( username )		830	0					
ANR	1368	Callee	args . AppendArg		830	0					
ANR	1369	MemberAccess	args . AppendArg		830	0					
ANR	1370	Identifier	args		830	0					
ANR	1371	Identifier	AppendArg		830	1					
ANR	1372	ArgumentList	username		830	1					
ANR	1373	Argument	username		830	0					
ANR	1374	Identifier	username		830	0					
ANR	1375	IfStatement	if ( myproxy_port )		830	35					
ANR	1376	Condition	myproxy_port	751:6:19124:19135	830	0	True				
ANR	1377	Identifier	myproxy_port		830	0					
ANR	1378	CompoundStatement		102:20:3118:3118	830	1					
ANR	1379	ExpressionStatement	"args . AppendArg ( ""--psport"" )"	752:3:19143:19169	830	0	True				
ANR	1380	CallExpression	"args . AppendArg ( ""--psport"" )"		830	0					
ANR	1381	Callee	args . AppendArg		830	0					
ANR	1382	MemberAccess	args . AppendArg		830	0					
ANR	1383	Identifier	args		830	0					
ANR	1384	Identifier	AppendArg		830	1					
ANR	1385	ArgumentList	"""--psport"""		830	1					
ANR	1386	Argument	"""--psport"""		830	0					
ANR	1387	PrimaryExpression	"""--psport"""		830	0					
ANR	1388	ExpressionStatement	args . AppendArg ( myproxy_port )	753:3:19174:19202	830	1	True				
ANR	1389	CallExpression	args . AppendArg ( myproxy_port )		830	0					
ANR	1390	Callee	args . AppendArg		830	0					
ANR	1391	MemberAccess	args . AppendArg		830	0					
ANR	1392	Identifier	args		830	0					
ANR	1393	Identifier	AppendArg		830	1					
ANR	1394	ArgumentList	myproxy_port		830	1					
ANR	1395	Argument	myproxy_port		830	0					
ANR	1396	Identifier	myproxy_port		830	0					
ANR	1397	IfStatement	if ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) && ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) ) [ 0 ] )		830	36					
ANR	1398	Condition	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) && ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) ) [ 0 ]	757:7:19246:19364	830	0	True				
ANR	1399	AndExpression	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) && ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) ) [ 0 ]		830	0		&&			
ANR	1400	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( )		830	0					
ANR	1401	Callee	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1402	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1403	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1404	CastTarget	X509Credential *		830	0					
ANR	1405	PtrMemberAccess	proxy -> cred		830	1					
ANR	1406	Identifier	proxy		830	0					
ANR	1407	Identifier	cred		830	1					
ANR	1408	Identifier	GetCredentialName		830	1					
ANR	1409	ArgumentList			830	1					
ANR	1410	ArrayIndexing	( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) ) [ 0 ]		830	1					
ANR	1411	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( )		830	0					
ANR	1412	Callee	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1413	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1414	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1415	CastTarget	X509Credential *		830	0					
ANR	1416	PtrMemberAccess	proxy -> cred		830	1					
ANR	1417	Identifier	proxy		830	0					
ANR	1418	Identifier	cred		830	1					
ANR	1419	Identifier	GetCredentialName		830	1					
ANR	1420	ArgumentList			830	1					
ANR	1421	PrimaryExpression	0		830	1					
ANR	1422	CompoundStatement		109:66:3348:3348	830	1					
ANR	1423	ExpressionStatement	"args . AppendArg ( ""--credname"" )"	759:3:19373:19401	830	0	True				
ANR	1424	CallExpression	"args . AppendArg ( ""--credname"" )"		830	0					
ANR	1425	Callee	args . AppendArg		830	0					
ANR	1426	MemberAccess	args . AppendArg		830	0					
ANR	1427	Identifier	args		830	0					
ANR	1428	Identifier	AppendArg		830	1					
ANR	1429	ArgumentList	"""--credname"""		830	1					
ANR	1430	Argument	"""--credname"""		830	0					
ANR	1431	PrimaryExpression	"""--credname"""		830	0					
ANR	1432	ExpressionStatement	args . AppendArg ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) )	760:3:19406:19473	830	1	True				
ANR	1433	CallExpression	args . AppendArg ( ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( ) )		830	0					
ANR	1434	Callee	args . AppendArg		830	0					
ANR	1435	MemberAccess	args . AppendArg		830	0					
ANR	1436	Identifier	args		830	0					
ANR	1437	Identifier	AppendArg		830	1					
ANR	1438	ArgumentList	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( )		830	1					
ANR	1439	Argument	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( )		830	0					
ANR	1440	CallExpression	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName ( )		830	0					
ANR	1441	Callee	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1442	PtrMemberAccess	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830	0					
ANR	1443	CastExpression	( X509Credential * ) proxy -> cred		830	0					
ANR	1444	CastTarget	X509Credential *		830	0					
ANR	1445	PtrMemberAccess	proxy -> cred		830	1					
ANR	1446	Identifier	proxy		830	0					
ANR	1447	Identifier	cred		830	1					
ANR	1448	Identifier	GetCredentialName		830	1					
ANR	1449	ArgumentList			830	1					
ANR	1450	IdentifierDeclStatement	priv_state priv = set_condor_priv ( ) ;	767:2:19601:19636	830	37	True				
ANR	1451	IdentifierDecl	priv = set_condor_priv ( )		830	0					
ANR	1452	IdentifierDeclType	priv_state		830	0					
ANR	1453	Identifier	priv		830	1					
ANR	1454	AssignmentExpression	priv = set_condor_priv ( )		830	2		=			
ANR	1455	Identifier	priv		830	0					
ANR	1456	CallExpression	set_condor_priv ( )		830	1					
ANR	1457	Callee	set_condor_priv		830	0					
ANR	1458	Identifier	set_condor_priv		830	0					
ANR	1459	ArgumentList			830	1					
ANR	1460	ExpressionStatement	proxy -> get_delegation_err_filename = create_temp_file ( )	768:2:19640:19695	830	38	True				
ANR	1461	AssignmentExpression	proxy -> get_delegation_err_filename = create_temp_file ( )		830	0		=			
ANR	1462	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1463	Identifier	proxy		830	0					
ANR	1464	Identifier	get_delegation_err_filename		830	1					
ANR	1465	CallExpression	create_temp_file ( )		830	1					
ANR	1466	Callee	create_temp_file		830	0					
ANR	1467	Identifier	create_temp_file		830	0					
ANR	1468	ArgumentList			830	1					
ANR	1469	IfStatement	if ( proxy -> get_delegation_err_filename == NULL )		830	39					
ANR	1470	Condition	proxy -> get_delegation_err_filename == NULL	769:6:19703:19744	830	0	True				
ANR	1471	EqualityExpression	proxy -> get_delegation_err_filename == NULL		830	0		==			
ANR	1472	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1473	Identifier	proxy		830	0					
ANR	1474	Identifier	get_delegation_err_filename		830	1					
ANR	1475	Identifier	NULL		830	1					
ANR	1476	CompoundStatement		120:50:3727:3727	830	1					
ANR	1477	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_delegation create_temp_file() failed: %s\\n"" , strerror ( errno ) )"	770:1:19750:19839	830	0	True				
ANR	1478	CallExpression	"dprintf ( D_ALWAYS , ""get_delegation create_temp_file() failed: %s\\n"" , strerror ( errno ) )"		830	0					
ANR	1479	Callee	dprintf		830	0					
ANR	1480	Identifier	dprintf		830	0					
ANR	1481	ArgumentList	D_ALWAYS		830	1					
ANR	1482	Argument	D_ALWAYS		830	0					
ANR	1483	Identifier	D_ALWAYS		830	0					
ANR	1484	Argument	"""get_delegation create_temp_file() failed: %s\\n"""		830	1					
ANR	1485	PrimaryExpression	"""get_delegation create_temp_file() failed: %s\\n"""		830	0					
ANR	1486	Argument	strerror ( errno )		830	2					
ANR	1487	CallExpression	strerror ( errno )		830	0					
ANR	1488	Callee	strerror		830	0					
ANR	1489	Identifier	strerror		830	0					
ANR	1490	ArgumentList	errno		830	1					
ANR	1491	Argument	errno		830	0					
ANR	1492	Identifier	errno		830	0					
ANR	1493	ExpressionStatement	proxy -> get_delegation_reset ( )	772:1:19842:19871	830	1	True				
ANR	1494	CallExpression	proxy -> get_delegation_reset ( )		830	0					
ANR	1495	Callee	proxy -> get_delegation_reset		830	0					
ANR	1496	PtrMemberAccess	proxy -> get_delegation_reset		830	0					
ANR	1497	Identifier	proxy		830	0					
ANR	1498	Identifier	get_delegation_reset		830	1					
ANR	1499	ArgumentList			830	1					
ANR	1500	ReturnStatement	return FALSE ;	773:1:19874:19886	830	2	True				
ANR	1501	Identifier	FALSE		830	0					
ANR	1502	ExpressionStatement	"status = chmod ( proxy -> get_delegation_err_filename , 0600 )"	775:2:19894:19951	830	40	True				
ANR	1503	AssignmentExpression	"status = chmod ( proxy -> get_delegation_err_filename , 0600 )"		830	0		=			
ANR	1504	Identifier	status		830	0					
ANR	1505	CallExpression	"chmod ( proxy -> get_delegation_err_filename , 0600 )"		830	1					
ANR	1506	Callee	chmod		830	0					
ANR	1507	Identifier	chmod		830	0					
ANR	1508	ArgumentList	proxy -> get_delegation_err_filename		830	1					
ANR	1509	Argument	proxy -> get_delegation_err_filename		830	0					
ANR	1510	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1511	Identifier	proxy		830	0					
ANR	1512	Identifier	get_delegation_err_filename		830	1					
ANR	1513	Argument	0600		830	1					
ANR	1514	PrimaryExpression	0600		830	0					
ANR	1515	IfStatement	if ( status == - 1 )		830	41					
ANR	1516	Condition	status == - 1	776:6:19959:19970	830	0	True				
ANR	1517	EqualityExpression	status == - 1		830	0		==			
ANR	1518	Identifier	status		830	0					
ANR	1519	UnaryOperationExpression	- 1		830	1					
ANR	1520	UnaryOperator	-		830	0					
ANR	1521	PrimaryExpression	1		830	1					
ANR	1522	CompoundStatement		127:20:3953:3953	830	1					
ANR	1523	ExpressionStatement	"dprintf ( D_ALWAYS , ""chmod() get_delegation_err_filename %s failed: %s\\n"" , proxy -> get_delegation_err_filename , strerror ( errno ) )"	777:1:19976:20106	830	0	True				
ANR	1524	CallExpression	"dprintf ( D_ALWAYS , ""chmod() get_delegation_err_filename %s failed: %s\\n"" , proxy -> get_delegation_err_filename , strerror ( errno ) )"		830	0					
ANR	1525	Callee	dprintf		830	0					
ANR	1526	Identifier	dprintf		830	0					
ANR	1527	ArgumentList	D_ALWAYS		830	1					
ANR	1528	Argument	D_ALWAYS		830	0					
ANR	1529	Identifier	D_ALWAYS		830	0					
ANR	1530	Argument	"""chmod() get_delegation_err_filename %s failed: %s\\n"""		830	1					
ANR	1531	PrimaryExpression	"""chmod() get_delegation_err_filename %s failed: %s\\n"""		830	0					
ANR	1532	Argument	proxy -> get_delegation_err_filename		830	2					
ANR	1533	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1534	Identifier	proxy		830	0					
ANR	1535	Identifier	get_delegation_err_filename		830	1					
ANR	1536	Argument	strerror ( errno )		830	3					
ANR	1537	CallExpression	strerror ( errno )		830	0					
ANR	1538	Callee	strerror		830	0					
ANR	1539	Identifier	strerror		830	0					
ANR	1540	ArgumentList	errno		830	1					
ANR	1541	Argument	errno		830	0					
ANR	1542	Identifier	errno		830	0					
ANR	1543	ExpressionStatement	proxy -> get_delegation_reset ( )	779:1:20109:20138	830	1	True				
ANR	1544	CallExpression	proxy -> get_delegation_reset ( )		830	0					
ANR	1545	Callee	proxy -> get_delegation_reset		830	0					
ANR	1546	PtrMemberAccess	proxy -> get_delegation_reset		830	0					
ANR	1547	Identifier	proxy		830	0					
ANR	1548	Identifier	get_delegation_reset		830	1					
ANR	1549	ArgumentList			830	1					
ANR	1550	ReturnStatement	return FALSE ;	780:1:20141:20153	830	2	True				
ANR	1551	Identifier	FALSE		830	0					
ANR	1552	ExpressionStatement	"proxy -> get_delegation_err_fd = safe_open_wrapper_follow ( proxy -> get_delegation_err_filename , O_RDWR )"	784:2:20163:20261	830	42	True				
ANR	1553	AssignmentExpression	"proxy -> get_delegation_err_fd = safe_open_wrapper_follow ( proxy -> get_delegation_err_filename , O_RDWR )"		830	0		=			
ANR	1554	PtrMemberAccess	proxy -> get_delegation_err_fd		830	0					
ANR	1555	Identifier	proxy		830	0					
ANR	1556	Identifier	get_delegation_err_fd		830	1					
ANR	1557	CallExpression	"safe_open_wrapper_follow ( proxy -> get_delegation_err_filename , O_RDWR )"		830	1					
ANR	1558	Callee	safe_open_wrapper_follow		830	0					
ANR	1559	Identifier	safe_open_wrapper_follow		830	0					
ANR	1560	ArgumentList	proxy -> get_delegation_err_filename		830	1					
ANR	1561	Argument	proxy -> get_delegation_err_filename		830	0					
ANR	1562	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1563	Identifier	proxy		830	0					
ANR	1564	Identifier	get_delegation_err_filename		830	1					
ANR	1565	Argument	O_RDWR		830	1					
ANR	1566	Identifier	O_RDWR		830	0					
ANR	1567	IfStatement	if ( proxy -> get_delegation_err_fd == - 1 )		830	43					
ANR	1568	Condition	proxy -> get_delegation_err_fd == - 1	785:6:20269:20302	830	0	True				
ANR	1569	EqualityExpression	proxy -> get_delegation_err_fd == - 1		830	0		==			
ANR	1570	PtrMemberAccess	proxy -> get_delegation_err_fd		830	0					
ANR	1571	Identifier	proxy		830	0					
ANR	1572	Identifier	get_delegation_err_fd		830	1					
ANR	1573	UnaryOperationExpression	- 1		830	1					
ANR	1574	UnaryOperator	-		830	0					
ANR	1575	PrimaryExpression	1		830	1					
ANR	1576	CompoundStatement		136:42:4285:4285	830	1					
ANR	1577	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error opening get_delegation file %s: %s\\n"" , proxy -> get_delegation_err_filename , strerror ( errno ) )"	786:4:20311:20435	830	0	True				
ANR	1578	CallExpression	"dprintf ( D_ALWAYS , ""Error opening get_delegation file %s: %s\\n"" , proxy -> get_delegation_err_filename , strerror ( errno ) )"		830	0					
ANR	1579	Callee	dprintf		830	0					
ANR	1580	Identifier	dprintf		830	0					
ANR	1581	ArgumentList	D_ALWAYS		830	1					
ANR	1582	Argument	D_ALWAYS		830	0					
ANR	1583	Identifier	D_ALWAYS		830	0					
ANR	1584	Argument	"""Error opening get_delegation file %s: %s\\n"""		830	1					
ANR	1585	PrimaryExpression	"""Error opening get_delegation file %s: %s\\n"""		830	0					
ANR	1586	Argument	proxy -> get_delegation_err_filename		830	2					
ANR	1587	PtrMemberAccess	proxy -> get_delegation_err_filename		830	0					
ANR	1588	Identifier	proxy		830	0					
ANR	1589	Identifier	get_delegation_err_filename		830	1					
ANR	1590	Argument	strerror ( errno )		830	3					
ANR	1591	CallExpression	strerror ( errno )		830	0					
ANR	1592	Callee	strerror		830	0					
ANR	1593	Identifier	strerror		830	0					
ANR	1594	ArgumentList	errno		830	1					
ANR	1595	Argument	errno		830	0					
ANR	1596	Identifier	errno		830	0					
ANR	1597	ExpressionStatement	proxy -> get_delegation_reset ( )	788:1:20438:20467	830	1	True				
ANR	1598	CallExpression	proxy -> get_delegation_reset ( )		830	0					
ANR	1599	Callee	proxy -> get_delegation_reset		830	0					
ANR	1600	PtrMemberAccess	proxy -> get_delegation_reset		830	0					
ANR	1601	Identifier	proxy		830	0					
ANR	1602	Identifier	get_delegation_reset		830	1					
ANR	1603	ArgumentList			830	1					
ANR	1604	ReturnStatement	return FALSE ;	789:1:20470:20482	830	2	True				
ANR	1605	Identifier	FALSE		830	0					
ANR	1606	ExpressionStatement	set_priv ( priv )	791:2:20490:20505	830	44	True				
ANR	1607	CallExpression	set_priv ( priv )		830	0					
ANR	1608	Callee	set_priv		830	0					
ANR	1609	Identifier	set_priv		830	0					
ANR	1610	ArgumentList	priv		830	1					
ANR	1611	Argument	priv		830	0					
ANR	1612	Identifier	priv		830	0					
ANR	1613	IdentifierDeclStatement	int arrIO [ 3 ] ;	794:2:20511:20523	830	45	True				
ANR	1614	IdentifierDecl	arrIO [ 3 ]		830	0					
ANR	1615	IdentifierDeclType	int [ 3 ]		830	0					
ANR	1616	Identifier	arrIO		830	1					
ANR	1617	PrimaryExpression	3		830	2					
ANR	1618	ExpressionStatement	arrIO [ 0 ] = proxy -> get_delegation_password_pipe [ 0 ]	795:2:20527:20574	830	46	True				
ANR	1619	AssignmentExpression	arrIO [ 0 ] = proxy -> get_delegation_password_pipe [ 0 ]		830	0		=			
ANR	1620	ArrayIndexing	arrIO [ 0 ]		830	0					
ANR	1621	Identifier	arrIO		830	0					
ANR	1622	PrimaryExpression	0		830	1					
ANR	1623	ArrayIndexing	proxy -> get_delegation_password_pipe [ 0 ]		830	1					
ANR	1624	PtrMemberAccess	proxy -> get_delegation_password_pipe		830	0					
ANR	1625	Identifier	proxy		830	0					
ANR	1626	Identifier	get_delegation_password_pipe		830	1					
ANR	1627	PrimaryExpression	0		830	1					
ANR	1628	ExpressionStatement	arrIO [ 1 ] = - 1	796:2:20586:20597	830	47	True				
ANR	1629	AssignmentExpression	arrIO [ 1 ] = - 1		830	0		=			
ANR	1630	ArrayIndexing	arrIO [ 1 ]		830	0					
ANR	1631	Identifier	arrIO		830	0					
ANR	1632	PrimaryExpression	1		830	1					
ANR	1633	UnaryOperationExpression	- 1		830	1					
ANR	1634	UnaryOperator	-		830	0					
ANR	1635	PrimaryExpression	1		830	1					
ANR	1636	ExpressionStatement	arrIO [ 2 ] = proxy -> get_delegation_err_fd	797:2:20633:20670	830	48	True				
ANR	1637	AssignmentExpression	arrIO [ 2 ] = proxy -> get_delegation_err_fd		830	0		=			
ANR	1638	ArrayIndexing	arrIO [ 2 ]		830	0					
ANR	1639	Identifier	arrIO		830	0					
ANR	1640	PrimaryExpression	2		830	1					
ANR	1641	PtrMemberAccess	proxy -> get_delegation_err_fd		830	1					
ANR	1642	Identifier	proxy		830	0					
ANR	1643	Identifier	get_delegation_err_fd		830	1					
ANR	1644	IdentifierDeclStatement	"char * myproxy_get_delegation_pgm = param ( ""MYPROXY_GET_DELEGATION"" ) ;"	800:2:20686:20754	830	49	True				
ANR	1645	IdentifierDecl	"* myproxy_get_delegation_pgm = param ( ""MYPROXY_GET_DELEGATION"" )"		830	0					
ANR	1646	IdentifierDeclType	char *		830	0					
ANR	1647	Identifier	myproxy_get_delegation_pgm		830	1					
ANR	1648	AssignmentExpression	"* myproxy_get_delegation_pgm = param ( ""MYPROXY_GET_DELEGATION"" )"		830	2		=			
ANR	1649	Identifier	myproxy_get_delegation_pgm		830	0					
ANR	1650	CallExpression	"param ( ""MYPROXY_GET_DELEGATION"" )"		830	1					
ANR	1651	Callee	param		830	0					
ANR	1652	Identifier	param		830	0					
ANR	1653	ArgumentList	"""MYPROXY_GET_DELEGATION"""		830	1					
ANR	1654	Argument	"""MYPROXY_GET_DELEGATION"""		830	0					
ANR	1655	PrimaryExpression	"""MYPROXY_GET_DELEGATION"""		830	0					
ANR	1656	IfStatement	if ( ! myproxy_get_delegation_pgm )		830	50					
ANR	1657	Condition	! myproxy_get_delegation_pgm	801:6:20762:20788	830	0	True				
ANR	1658	UnaryOperationExpression	! myproxy_get_delegation_pgm		830	0					
ANR	1659	UnaryOperator	!		830	0					
ANR	1660	Identifier	myproxy_get_delegation_pgm		830	1					
ANR	1661	CompoundStatement		152:35:4771:4771	830	1					
ANR	1662	ExpressionStatement	"dprintf ( D_ALWAYS , ""MYPROXY_GET_DELEGATION not defined in config file\\n"" )"	802:4:20797:20870	830	0	True				
ANR	1663	CallExpression	"dprintf ( D_ALWAYS , ""MYPROXY_GET_DELEGATION not defined in config file\\n"" )"		830	0					
ANR	1664	Callee	dprintf		830	0					
ANR	1665	Identifier	dprintf		830	0					
ANR	1666	ArgumentList	D_ALWAYS		830	1					
ANR	1667	Argument	D_ALWAYS		830	0					
ANR	1668	Identifier	D_ALWAYS		830	0					
ANR	1669	Argument	"""MYPROXY_GET_DELEGATION not defined in config file\\n"""		830	1					
ANR	1670	PrimaryExpression	"""MYPROXY_GET_DELEGATION not defined in config file\\n"""		830	0					
ANR	1671	ReturnStatement	return FALSE ;	803:4:20876:20888	830	1	True				
ANR	1672	Identifier	FALSE		830	0					
ANR	1673	IdentifierDeclStatement	MyString args_string ;	805:2:20896:20916	830	51	True				
ANR	1674	IdentifierDecl	args_string		830	0					
ANR	1675	IdentifierDeclType	MyString		830	0					
ANR	1676	Identifier	args_string		830	1					
ANR	1677	ExpressionStatement	args . GetArgsStringForDisplay ( & args_string )	806:2:20920:20962	830	52	True				
ANR	1678	CallExpression	args . GetArgsStringForDisplay ( & args_string )		830	0					
ANR	1679	Callee	args . GetArgsStringForDisplay		830	0					
ANR	1680	MemberAccess	args . GetArgsStringForDisplay		830	0					
ANR	1681	Identifier	args		830	0					
ANR	1682	Identifier	GetArgsStringForDisplay		830	1					
ANR	1683	ArgumentList	& args_string		830	1					
ANR	1684	Argument	& args_string		830	0					
ANR	1685	UnaryOperationExpression	& args_string		830	0					
ANR	1686	UnaryOperator	&		830	0					
ANR	1687	Identifier	args_string		830	1					
ANR	1688	ExpressionStatement	"dprintf ( D_ALWAYS , ""Calling %s %s\\n"" , myproxy_get_delegation_pgm , args_string . Value ( ) )"	807:2:20966:21052	830	53	True				
ANR	1689	CallExpression	"dprintf ( D_ALWAYS , ""Calling %s %s\\n"" , myproxy_get_delegation_pgm , args_string . Value ( ) )"		830	0					
ANR	1690	Callee	dprintf		830	0					
ANR	1691	Identifier	dprintf		830	0					
ANR	1692	ArgumentList	D_ALWAYS		830	1					
ANR	1693	Argument	D_ALWAYS		830	0					
ANR	1694	Identifier	D_ALWAYS		830	0					
ANR	1695	Argument	"""Calling %s %s\\n"""		830	1					
ANR	1696	PrimaryExpression	"""Calling %s %s\\n"""		830	0					
ANR	1697	Argument	myproxy_get_delegation_pgm		830	2					
ANR	1698	Identifier	myproxy_get_delegation_pgm		830	0					
ANR	1699	Argument	args_string . Value ( )		830	3					
ANR	1700	CallExpression	args_string . Value ( )		830	0					
ANR	1701	Callee	args_string . Value		830	0					
ANR	1702	MemberAccess	args_string . Value		830	0					
ANR	1703	Identifier	args_string		830	0					
ANR	1704	Identifier	Value		830	1					
ANR	1705	ArgumentList			830	1					
ANR	1706	IdentifierDeclStatement	"int pid = daemonCore -> Create_Process ( myproxy_get_delegation_pgm , args , PRIV_USER_FINAL , myproxyGetDelegationReaperId , FALSE , & myEnv , NULL , NULL , NULL , arrIO ) ;"	809:2:21057:21417	830	54	True				
ANR	1707	IdentifierDecl	"pid = daemonCore -> Create_Process ( myproxy_get_delegation_pgm , args , PRIV_USER_FINAL , myproxyGetDelegationReaperId , FALSE , & myEnv , NULL , NULL , NULL , arrIO )"		830	0					
ANR	1708	IdentifierDeclType	int		830	0					
ANR	1709	Identifier	pid		830	1					
ANR	1710	AssignmentExpression	"pid = daemonCore -> Create_Process ( myproxy_get_delegation_pgm , args , PRIV_USER_FINAL , myproxyGetDelegationReaperId , FALSE , & myEnv , NULL , NULL , NULL , arrIO )"		830	2		=			
ANR	1711	Identifier	pid		830	0					
ANR	1712	CallExpression	"daemonCore -> Create_Process ( myproxy_get_delegation_pgm , args , PRIV_USER_FINAL , myproxyGetDelegationReaperId , FALSE , & myEnv , NULL , NULL , NULL , arrIO )"		830	1					
ANR	1713	Callee	daemonCore -> Create_Process		830	0					
ANR	1714	PtrMemberAccess	daemonCore -> Create_Process		830	0					
ANR	1715	Identifier	daemonCore		830	0					
ANR	1716	Identifier	Create_Process		830	1					
ANR	1717	ArgumentList	myproxy_get_delegation_pgm		830	1					
ANR	1718	Argument	myproxy_get_delegation_pgm		830	0					
ANR	1719	Identifier	myproxy_get_delegation_pgm		830	0					
ANR	1720	Argument	args		830	1					
ANR	1721	Identifier	args		830	0					
ANR	1722	Argument	PRIV_USER_FINAL		830	2					
ANR	1723	Identifier	PRIV_USER_FINAL		830	0					
ANR	1724	Argument	myproxyGetDelegationReaperId		830	3					
ANR	1725	Identifier	myproxyGetDelegationReaperId		830	0					
ANR	1726	Argument	FALSE		830	4					
ANR	1727	Identifier	FALSE		830	0					
ANR	1728	Argument	& myEnv		830	5					
ANR	1729	UnaryOperationExpression	& myEnv		830	0					
ANR	1730	UnaryOperator	&		830	0					
ANR	1731	Identifier	myEnv		830	1					
ANR	1732	Argument	NULL		830	6					
ANR	1733	Identifier	NULL		830	0					
ANR	1734	Argument	NULL		830	7					
ANR	1735	Identifier	NULL		830	0					
ANR	1736	Argument	NULL		830	8					
ANR	1737	Identifier	NULL		830	0					
ANR	1738	Argument	arrIO		830	9					
ANR	1739	Identifier	arrIO		830	0					
ANR	1740	ExpressionStatement	free ( myproxy_get_delegation_pgm )	822:2:21505:21538	830	55	True				
ANR	1741	CallExpression	free ( myproxy_get_delegation_pgm )		830	0					
ANR	1742	Callee	free		830	0					
ANR	1743	Identifier	free		830	0					
ANR	1744	ArgumentList	myproxy_get_delegation_pgm		830	1					
ANR	1745	Argument	myproxy_get_delegation_pgm		830	0					
ANR	1746	Identifier	myproxy_get_delegation_pgm		830	0					
ANR	1747	ExpressionStatement	myproxy_get_delegation_pgm = NULL	823:2:21542:21575	830	56	True				
ANR	1748	AssignmentExpression	myproxy_get_delegation_pgm = NULL		830	0		=			
ANR	1749	Identifier	myproxy_get_delegation_pgm		830	0					
ANR	1750	Identifier	NULL		830	1					
ANR	1751	IfStatement	if ( pid == FALSE )		830	57					
ANR	1752	Condition	pid == FALSE	828:6:21589:21600	830	0	True				
ANR	1753	EqualityExpression	pid == FALSE		830	0		==			
ANR	1754	Identifier	pid		830	0					
ANR	1755	Identifier	FALSE		830	1					
ANR	1756	CompoundStatement		179:20:5583:5583	830	1					
ANR	1757	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to run myproxy-get-delegation\\n"" )"	829:4:21609:21669	830	0	True				
ANR	1758	CallExpression	"dprintf ( D_ALWAYS , ""Failed to run myproxy-get-delegation\\n"" )"		830	0					
ANR	1759	Callee	dprintf		830	0					
ANR	1760	Identifier	dprintf		830	0					
ANR	1761	ArgumentList	D_ALWAYS		830	1					
ANR	1762	Argument	D_ALWAYS		830	0					
ANR	1763	Identifier	D_ALWAYS		830	0					
ANR	1764	Argument	"""Failed to run myproxy-get-delegation\\n"""		830	1					
ANR	1765	PrimaryExpression	"""Failed to run myproxy-get-delegation\\n"""		830	0					
ANR	1766	ExpressionStatement	proxy -> get_delegation_reset ( )	830:1:21672:21701	830	1	True				
ANR	1767	CallExpression	proxy -> get_delegation_reset ( )		830	0					
ANR	1768	Callee	proxy -> get_delegation_reset		830	0					
ANR	1769	PtrMemberAccess	proxy -> get_delegation_reset		830	0					
ANR	1770	Identifier	proxy		830	0					
ANR	1771	Identifier	get_delegation_reset		830	1					
ANR	1772	ArgumentList			830	1					
ANR	1773	ReturnStatement	return FALSE ;	831:4:21707:21719	830	2	True				
ANR	1774	Identifier	FALSE		830	0					
ANR	1775	ExpressionStatement	proxy -> get_delegation_pid = pid	834:2:21728:21759	830	58	True				
ANR	1776	AssignmentExpression	proxy -> get_delegation_pid = pid		830	0		=			
ANR	1777	PtrMemberAccess	proxy -> get_delegation_pid		830	0					
ANR	1778	Identifier	proxy		830	0					
ANR	1779	Identifier	get_delegation_pid		830	1					
ANR	1780	Identifier	pid		830	1					
ANR	1781	ReturnStatement	return TRUE ;	836:2:21764:21775	830	59	True				
ANR	1782	Identifier	TRUE		830	0					
ANR	1783	ReturnType	int		830	1					
ANR	1784	Identifier	RefreshProxyThruMyProxy		830	2					
ANR	1785	ParameterList	X509CredentialWrapper * proxy		830	3					
ANR	1786	Parameter	X509CredentialWrapper * proxy	649:28:15988:16016	830	0	True				
ANR	1787	ParameterType	X509CredentialWrapper *		830	0					
ANR	1788	Identifier	proxy		830	1					
ANR	1789	CFGEntryNode	ENTRY		830		True				
ANR	1790	CFGExitNode	EXIT		830		True				
ANR	1791	Symbol	daemonCore -> Create_Process		830						
ANR	1792	Symbol	set_condor_priv		830						
ANR	1793	Symbol	time_started		830						
ANR	1794	Symbol	proxy -> cred -> GetOrigOwner		830						
ANR	1795	Symbol	pid		830						
ANR	1796	Symbol	* ( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830						
ANR	1797	Symbol	getHostFromAddr		830						
ANR	1798	Symbol	myproxy_port		830						
ANR	1799	Symbol	strlen		830						
ANR	1800	Symbol	proxy -> cred		830						
ANR	1801	Symbol	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerDN		830						
ANR	1802	Symbol	myEnv		830						
ANR	1803	Symbol	pipe		830						
ANR	1804	Symbol	priv		830						
ANR	1805	Symbol	* * proxy		830						
ANR	1806	Symbol	errno		830						
ANR	1807	Symbol	NULL		830						
ANR	1808	Symbol	strBuff . Value		830						
ANR	1809	Symbol	args_string . Value		830						
ANR	1810	Symbol	TRUE		830						
ANR	1811	Symbol	D_FULLDEBUG		830						
ANR	1812	Symbol	create_temp_file		830						
ANR	1813	Symbol	( ( X509Credential * ) proxy -> cred ) -> GetMyProxyServerHost		830						
ANR	1814	Symbol	strerror		830						
ANR	1815	Symbol	proxy		830						
ANR	1816	Symbol	* * proxy -> cred		830						
ANR	1817	Symbol	* daemonCore		830						
ANR	1818	Symbol	* proxy		830						
ANR	1819	Symbol	proxy -> GetStorageName		830						
ANR	1820	Symbol	* arrIO		830						
ANR	1821	Symbol	myproxy_get_delegation_pgm		830						
ANR	1822	Symbol	status		830						
ANR	1823	Symbol	myproxyGetDelegationReaperId		830						
ANR	1824	Symbol	& args_string		830						
ANR	1825	Symbol	safe_open_wrapper_follow		830						
ANR	1826	Symbol	* proxy -> cred		830						
ANR	1827	Symbol	arrIO		830						
ANR	1828	Symbol	GET_DELEGATION_PID_NONE		830						
ANR	1829	Symbol	SIGKILL		830						
ANR	1830	Symbol	myproxy_host		830						
ANR	1831	Symbol	proxy -> get_delegation_proc_start_time		830						
ANR	1832	Symbol	proxy -> cred -> GetOwner		830						
ANR	1833	Symbol	O_RDWR		830						
ANR	1834	Symbol	PRIV_USER_FINAL		830						
ANR	1835	Symbol	proxy_filename		830						
ANR	1836	Symbol	param		830						
ANR	1837	Symbol	now		830						
ANR	1838	Symbol	daemonCore		830						
ANR	1839	Symbol	( ( X509Credential * ) proxy -> cred ) -> GetRefreshPassword		830						
ANR	1840	Symbol	proxy -> get_delegation_err_fd		830						
ANR	1841	Symbol	& myEnv		830						
ANR	1842	Symbol	chmod		830						
ANR	1843	Symbol	proxy -> get_delegation_pid		830						
ANR	1844	Symbol	( ( X509Credential * ) proxy -> cred ) -> GetCredentialName		830						
ANR	1845	Symbol	* * * proxy		830						
ANR	1846	Symbol	strBuff		830						
ANR	1847	Symbol	args_string		830						
ANR	1848	Symbol	proxy -> get_delegation_err_filename		830						
ANR	1849	Symbol	D_ALWAYS		830						
ANR	1850	Symbol	myproxy_password		830						
ANR	1851	Symbol	proxy -> get_delegation_password_pipe		830						
ANR	1852	Symbol	proxy -> cred -> GetName		830						
ANR	1853	Symbol	* proxy -> get_delegation_password_pipe		830						
ANR	1854	Symbol	args		830						
ANR	1855	Symbol	FALSE		830						
ANR	1856	Symbol	time		830						
ANR	1857	Symbol	getPortFromAddr		830						
ANR	1858	Symbol	username		830						
ANR	1859	DeclStmt									
ANR	1860	Decl							CredentialWrapper	CredentialWrapper *	cred_wrapper
ANR	1861	DeclStmt									
ANR	1862	Decl							X509CredentialWrapper	X509CredentialWrapper *	matched_entry
ANR	1863	DeclStmt									
ANR	1864	Decl							int	int	read_fd
ANR	1865	DeclStmt									
ANR	1866	Decl							off_t	off_t	offset
ANR	1867	DeclStmt									
ANR	1868	Decl							struct stat	struct stat	statbuf
ANR	1869	DeclStmt									
ANR	1870	Decl							int	int	status
ANR	1871	DeclStmt									
ANR	1872	Decl							int	int	bytes_read
ANR	1873	Function	isSuperUser	947:0:24868:25110							
ANR	1874	FunctionDef	isSuperUser (const char * user)		1873	0					
ANR	1875	CompoundStatement		949:0:24905:25110	1873	0					
ANR	1876	IfStatement	if ( ! ( user ) )		1873	0					
ANR	1877	Condition	! ( user )	950:6:24913:24920	1873	0	True				
ANR	1878	UnaryOperationExpression	! ( user )		1873	0					
ANR	1879	UnaryOperator	!		1873	0					
ANR	1880	Identifier	user		1873	1					
ANR	1881	CompoundStatement		2:16:17:17	1873	1					
ANR	1882	ReturnStatement	return false ;	951:4:24929:24941	1873	0	True				
ANR	1883	Identifier	false		1873	0					
ANR	1884	ExpressionStatement	super_users . rewind ( )	954:2:24950:24970	1873	1	True				
ANR	1885	CallExpression	super_users . rewind ( )		1873	0					
ANR	1886	Callee	super_users . rewind		1873	0					
ANR	1887	MemberAccess	super_users . rewind		1873	0					
ANR	1888	Identifier	super_users		1873	0					
ANR	1889	Identifier	rewind		1873	1					
ANR	1890	ArgumentList			1873	1					
ANR	1891	IdentifierDeclStatement	char * next ;	955:2:24974:24985	1873	2	True				
ANR	1892	IdentifierDecl	* next		1873	0					
ANR	1893	IdentifierDeclType	char *		1873	0					
ANR	1894	Identifier	next		1873	1					
ANR	1895	WhileStatement	while ( ( next = super_users . next ( ) ) )		1873	3					
ANR	1896	Condition	next = super_users . next ( )	956:9:24996:25022	1873	0	True				
ANR	1897	AssignmentExpression	next = super_users . next ( )		1873	0		=			
ANR	1898	Identifier	next		1873	0					
ANR	1899	CallExpression	super_users . next ( )		1873	1					
ANR	1900	Callee	super_users . next		1873	0					
ANR	1901	MemberAccess	super_users . next		1873	0					
ANR	1902	Identifier	super_users		1873	0					
ANR	1903	Identifier	next		1873	1					
ANR	1904	ArgumentList			1873	1					
ANR	1905	CompoundStatement		8:38:119:119	1873	1					
ANR	1906	IfStatement	"if ( strcmp ( user , next ) == 0 )"		1873	0					
ANR	1907	Condition	"strcmp ( user , next ) == 0"	957:8:25035:25059	1873	0	True				
ANR	1908	EqualityExpression	"strcmp ( user , next ) == 0"		1873	0		==			
ANR	1909	CallExpression	"strcmp ( user , next )"		1873	0					
ANR	1910	Callee	strcmp		1873	0					
ANR	1911	Identifier	strcmp		1873	0					
ANR	1912	ArgumentList	user		1873	1					
ANR	1913	Argument	user		1873	0					
ANR	1914	Identifier	user		1873	0					
ANR	1915	Argument	next		1873	1					
ANR	1916	Identifier	next		1873	0					
ANR	1917	PrimaryExpression	0		1873	1					
ANR	1918	CompoundStatement		9:35:156:156	1873	1					
ANR	1919	ReturnStatement	return true ;	958:6:25070:25081	1873	0	True				
ANR	1920	Identifier	true		1873	0					
ANR	1921	ReturnStatement	return false ;	962:2:25096:25108	1873	4	True				
ANR	1922	Identifier	false		1873	0					
ANR	1923	ReturnType	bool		1873	1					
ANR	1924	Identifier	isSuperUser		1873	2					
ANR	1925	ParameterList	const char * user		1873	3					
ANR	1926	Parameter	const char * user	948:13:24886:24901	1873	0	True				
ANR	1927	ParameterType	const char *		1873	0					
ANR	1928	Identifier	user		1873	1					
ANR	1929	CFGEntryNode	ENTRY		1873		True				
ANR	1930	CFGExitNode	EXIT		1873		True				
ANR	1931	Symbol	next		1873						
ANR	1932	Symbol	strcmp		1873						
ANR	1933	Symbol	super_users . next		1873						
ANR	1934	Symbol	false		1873						
ANR	1935	Symbol	true		1873						
ANR	1936	Symbol	super_users		1873						
ANR	1937	Symbol	user		1873						
ANR	1938	Function	Init	966:0:25114:26961							
ANR	1939	FunctionDef	Init ()		1938	0					
ANR	1940	CompoundStatement		967:7:25126:26961	1938	0					
ANR	1941	IdentifierDeclStatement	"char * tmp = param ( ""CRED_SUPER_USERS"" ) ;"	968:2:25130:25170	1938	0	True				
ANR	1942	IdentifierDecl	"* tmp = param ( ""CRED_SUPER_USERS"" )"		1938	0					
ANR	1943	IdentifierDeclType	char *		1938	0					
ANR	1944	Identifier	tmp		1938	1					
ANR	1945	AssignmentExpression	"* tmp = param ( ""CRED_SUPER_USERS"" )"		1938	2		=			
ANR	1946	Identifier	tmp		1938	0					
ANR	1947	CallExpression	"param ( ""CRED_SUPER_USERS"" )"		1938	1					
ANR	1948	Callee	param		1938	0					
ANR	1949	Identifier	param		1938	0					
ANR	1950	ArgumentList	"""CRED_SUPER_USERS"""		1938	1					
ANR	1951	Argument	"""CRED_SUPER_USERS"""		1938	0					
ANR	1952	PrimaryExpression	"""CRED_SUPER_USERS"""		1938	0					
ANR	1953	IfStatement	if ( tmp )		1938	1					
ANR	1954	Condition	tmp	969:6:25178:25180	1938	0	True				
ANR	1955	Identifier	tmp		1938	0					
ANR	1956	CompoundStatement		3:12:57:57	1938	1					
ANR	1957	ExpressionStatement	super_users . initializeFromString ( tmp )	970:4:25190:25229	1938	0	True				
ANR	1958	CallExpression	super_users . initializeFromString ( tmp )		1938	0					
ANR	1959	Callee	super_users . initializeFromString		1938	0					
ANR	1960	MemberAccess	super_users . initializeFromString		1938	0					
ANR	1961	Identifier	super_users		1938	0					
ANR	1962	Identifier	initializeFromString		1938	1					
ANR	1963	ArgumentList	tmp		1938	1					
ANR	1964	Argument	tmp		1938	0					
ANR	1965	Identifier	tmp		1938	0					
ANR	1966	ExpressionStatement	free ( tmp )	971:4:25235:25246	1938	1	True				
ANR	1967	CallExpression	free ( tmp )		1938	0					
ANR	1968	Callee	free		1938	0					
ANR	1969	Identifier	free		1938	0					
ANR	1970	ArgumentList	tmp		1938	1					
ANR	1971	Argument	tmp		1938	0					
ANR	1972	Identifier	tmp		1938	0					
ANR	1973	ElseStatement	else		1938	0					
ANR	1974	CompoundStatement		6:9:130:130	1938	0					
ANR	1975	ExpressionStatement	"super_users . initializeFromString ( ""Administrator"" )"	974:4:25282:25331	1938	0	True				
ANR	1976	CallExpression	"super_users . initializeFromString ( ""Administrator"" )"		1938	0					
ANR	1977	Callee	super_users . initializeFromString		1938	0					
ANR	1978	MemberAccess	super_users . initializeFromString		1938	0					
ANR	1979	Identifier	super_users		1938	0					
ANR	1980	Identifier	initializeFromString		1938	1					
ANR	1981	ArgumentList	"""Administrator"""		1938	1					
ANR	1982	Argument	"""Administrator"""		1938	0					
ANR	1983	PrimaryExpression	"""Administrator"""		1938	0					
ANR	1984	IdentifierDeclStatement	"char * spool = param ( ""SPOOL"" ) ;"	980:2:25399:25429	1938	2	True				
ANR	1985	IdentifierDecl	"* spool = param ( ""SPOOL"" )"		1938	0					
ANR	1986	IdentifierDeclType	char *		1938	0					
ANR	1987	Identifier	spool		1938	1					
ANR	1988	AssignmentExpression	"* spool = param ( ""SPOOL"" )"		1938	2		=			
ANR	1989	Identifier	spool		1938	0					
ANR	1990	CallExpression	"param ( ""SPOOL"" )"		1938	1					
ANR	1991	Callee	param		1938	0					
ANR	1992	Identifier	param		1938	0					
ANR	1993	ArgumentList	"""SPOOL"""		1938	1					
ANR	1994	Argument	"""SPOOL"""		1938	0					
ANR	1995	PrimaryExpression	"""SPOOL"""		1938	0					
ANR	1996	ExpressionStatement	"tmp = param ( ""CRED_STORE_DIR"" )"	982:2:25434:25466	1938	3	True				
ANR	1997	AssignmentExpression	"tmp = param ( ""CRED_STORE_DIR"" )"		1938	0		=			
ANR	1998	Identifier	tmp		1938	0					
ANR	1999	CallExpression	"param ( ""CRED_STORE_DIR"" )"		1938	1					
ANR	2000	Callee	param		1938	0					
ANR	2001	Identifier	param		1938	0					
ANR	2002	ArgumentList	"""CRED_STORE_DIR"""		1938	1					
ANR	2003	Argument	"""CRED_STORE_DIR"""		1938	0					
ANR	2004	PrimaryExpression	"""CRED_STORE_DIR"""		1938	0					
ANR	2005	IfStatement	if ( tmp )		1938	4					
ANR	2006	Condition	tmp	983:7:25475:25477	1938	0	True				
ANR	2007	Identifier	tmp		1938	0					
ANR	2008	CompoundStatement		17:13:354:354	1938	1					
ANR	2009	ExpressionStatement	cred_store_dir = tmp	984:4:25487:25507	1938	0	True				
ANR	2010	AssignmentExpression	cred_store_dir = tmp		1938	0		=			
ANR	2011	Identifier	cred_store_dir		1938	0					
ANR	2012	Identifier	tmp		1938	1					
ANR	2013	ElseStatement	else		1938	0					
ANR	2014	CompoundStatement		19:9:391:391	1938	0					
ANR	2015	ExpressionStatement	"cred_store_dir = dircat ( spool , ""cred"" )"	986:4:25524:25563	1938	0	True				
ANR	2016	AssignmentExpression	"cred_store_dir = dircat ( spool , ""cred"" )"		1938	0		=			
ANR	2017	Identifier	cred_store_dir		1938	0					
ANR	2018	CallExpression	"dircat ( spool , ""cred"" )"		1938	1					
ANR	2019	Callee	dircat		1938	0					
ANR	2020	Identifier	dircat		1938	0					
ANR	2021	ArgumentList	spool		1938	1					
ANR	2022	Argument	spool		1938	0					
ANR	2023	Identifier	spool		1938	0					
ANR	2024	Argument	"""cred"""		1938	1					
ANR	2025	PrimaryExpression	"""cred"""		1938	0					
ANR	2026	IfStatement	if ( spool != NULL )		1938	5					
ANR	2027	Condition	spool != NULL	988:7:25577:25589	1938	0	True				
ANR	2028	EqualityExpression	spool != NULL		1938	0		!=			
ANR	2029	Identifier	spool		1938	0					
ANR	2030	Identifier	NULL		1938	1					
ANR	2031	CompoundStatement		22:23:466:466	1938	1					
ANR	2032	ExpressionStatement	free ( spool )	989:3:25598:25610	1938	0	True				
ANR	2033	CallExpression	free ( spool )		1938	0					
ANR	2034	Callee	free		1938	0					
ANR	2035	Identifier	free		1938	0					
ANR	2036	ArgumentList	spool		1938	1					
ANR	2037	Argument	spool		1938	0					
ANR	2038	Identifier	spool		1938	0					
ANR	2039	ExpressionStatement	"tmp = param ( ""CRED_INDEX_FILE"" )"	992:2:25619:25652	1938	6	True				
ANR	2040	AssignmentExpression	"tmp = param ( ""CRED_INDEX_FILE"" )"		1938	0		=			
ANR	2041	Identifier	tmp		1938	0					
ANR	2042	CallExpression	"param ( ""CRED_INDEX_FILE"" )"		1938	1					
ANR	2043	Callee	param		1938	0					
ANR	2044	Identifier	param		1938	0					
ANR	2045	ArgumentList	"""CRED_INDEX_FILE"""		1938	1					
ANR	2046	Argument	"""CRED_INDEX_FILE"""		1938	0					
ANR	2047	PrimaryExpression	"""CRED_INDEX_FILE"""		1938	0					
ANR	2048	IfStatement	if ( tmp )		1938	7					
ANR	2049	Condition	tmp	993:6:25660:25662	1938	0	True				
ANR	2050	Identifier	tmp		1938	0					
ANR	2051	CompoundStatement		27:12:539:539	1938	1					
ANR	2052	ExpressionStatement	cred_index_file = tmp	994:4:25672:25693	1938	0	True				
ANR	2053	AssignmentExpression	cred_index_file = tmp		1938	0		=			
ANR	2054	Identifier	cred_index_file		1938	0					
ANR	2055	Identifier	tmp		1938	1					
ANR	2056	ElseStatement	else		1938	0					
ANR	2057	CompoundStatement		29:9:577:577	1938	0					
ANR	2058	ExpressionStatement	"cred_index_file = dircat ( cred_store_dir , ""cred-index"" )"	996:4:25710:25765	1938	0	True				
ANR	2059	AssignmentExpression	"cred_index_file = dircat ( cred_store_dir , ""cred-index"" )"		1938	0		=			
ANR	2060	Identifier	cred_index_file		1938	0					
ANR	2061	CallExpression	"dircat ( cred_store_dir , ""cred-index"" )"		1938	1					
ANR	2062	Callee	dircat		1938	0					
ANR	2063	Identifier	dircat		1938	0					
ANR	2064	ArgumentList	cred_store_dir		1938	1					
ANR	2065	Argument	cred_store_dir		1938	0					
ANR	2066	Identifier	cred_store_dir		1938	0					
ANR	2067	Argument	"""cred-index"""		1938	1					
ANR	2068	PrimaryExpression	"""cred-index"""		1938	0					
ANR	2069	ExpressionStatement	"default_cred_expire_threshold = param_integer ( ""DEFAULT_CRED_EXPIRE_THRESHOLD"" , 3600 )"	1000:2:25792:25877	1938	8	True				
ANR	2070	AssignmentExpression	"default_cred_expire_threshold = param_integer ( ""DEFAULT_CRED_EXPIRE_THRESHOLD"" , 3600 )"		1938	0		=			
ANR	2071	Identifier	default_cred_expire_threshold		1938	0					
ANR	2072	CallExpression	"param_integer ( ""DEFAULT_CRED_EXPIRE_THRESHOLD"" , 3600 )"		1938	1					
ANR	2073	Callee	param_integer		1938	0					
ANR	2074	Identifier	param_integer		1938	0					
ANR	2075	ArgumentList	"""DEFAULT_CRED_EXPIRE_THRESHOLD"""		1938	1					
ANR	2076	Argument	"""DEFAULT_CRED_EXPIRE_THRESHOLD"""		1938	0					
ANR	2077	PrimaryExpression	"""DEFAULT_CRED_EXPIRE_THRESHOLD"""		1938	0					
ANR	2078	Argument	3600		1938	1					
ANR	2079	PrimaryExpression	3600		1938	0					
ANR	2080	ExpressionStatement	"CheckCredentials_interval = param_integer ( ""CRED_CHECK_INTERVAL"" , DEF_CRED_CHECK_INTERVAL )"	1003:1:25902:26047	1938	9	True				
ANR	2081	AssignmentExpression	"CheckCredentials_interval = param_integer ( ""CRED_CHECK_INTERVAL"" , DEF_CRED_CHECK_INTERVAL )"		1938	0		=			
ANR	2082	Identifier	CheckCredentials_interval		1938	0					
ANR	2083	CallExpression	"param_integer ( ""CRED_CHECK_INTERVAL"" , DEF_CRED_CHECK_INTERVAL )"		1938	1					
ANR	2084	Callee	param_integer		1938	0					
ANR	2085	Identifier	param_integer		1938	0					
ANR	2086	ArgumentList	"""CRED_CHECK_INTERVAL"""		1938	1					
ANR	2087	Argument	"""CRED_CHECK_INTERVAL"""		1938	0					
ANR	2088	PrimaryExpression	"""CRED_CHECK_INTERVAL"""		1938	0					
ANR	2089	Argument	DEF_CRED_CHECK_INTERVAL		1938	1					
ANR	2090	Identifier	DEF_CRED_CHECK_INTERVAL		1938	0					
ANR	2091	IdentifierDeclStatement	struct stat stat_buff ;	1009:2:26052:26073	1938	10	True				
ANR	2092	IdentifierDecl	stat_buff		1938	0					
ANR	2093	IdentifierDeclType	struct stat		1938	0					
ANR	2094	Identifier	stat_buff		1938	1					
ANR	2095	IfStatement	"if ( stat ( cred_store_dir , & stat_buff ) )"		1938	11					
ANR	2096	Condition	"stat ( cred_store_dir , & stat_buff )"	1010:6:26081:26113	1938	0	True				
ANR	2097	CallExpression	"stat ( cred_store_dir , & stat_buff )"		1938	0					
ANR	2098	Callee	stat		1938	0					
ANR	2099	Identifier	stat		1938	0					
ANR	2100	ArgumentList	cred_store_dir		1938	1					
ANR	2101	Argument	cred_store_dir		1938	0					
ANR	2102	Identifier	cred_store_dir		1938	0					
ANR	2103	Argument	& stat_buff		1938	1					
ANR	2104	UnaryOperationExpression	& stat_buff		1938	0					
ANR	2105	UnaryOperator	&		1938	0					
ANR	2106	Identifier	stat_buff		1938	1					
ANR	2107	CompoundStatement		44:41:989:989	1938	1					
ANR	2108	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Cred store directory %s does not exist\\n"" , cred_store_dir )"	1011:4:26122:26207	1938	0	True				
ANR	2109	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Cred store directory %s does not exist\\n"" , cred_store_dir )"		1938	0					
ANR	2110	Callee	dprintf		1938	0					
ANR	2111	Identifier	dprintf		1938	0					
ANR	2112	ArgumentList	D_ALWAYS		1938	1					
ANR	2113	Argument	D_ALWAYS		1938	0					
ANR	2114	Identifier	D_ALWAYS		1938	0					
ANR	2115	Argument	"""ERROR: Cred store directory %s does not exist\\n"""		1938	1					
ANR	2116	PrimaryExpression	"""ERROR: Cred store directory %s does not exist\\n"""		1938	0					
ANR	2117	Argument	cred_store_dir		1938	2					
ANR	2118	Identifier	cred_store_dir		1938	0					
ANR	2119	ExpressionStatement	DC_Exit ( 1 )	1012:4:26213:26225	1938	1	True				
ANR	2120	CallExpression	DC_Exit ( 1 )		1938	0					
ANR	2121	Callee	DC_Exit		1938	0					
ANR	2122	Identifier	DC_Exit		1938	0					
ANR	2123	ArgumentList	1		1938	1					
ANR	2124	Argument	1		1938	0					
ANR	2125	PrimaryExpression	1		1938	0					
ANR	2126	IfStatement	"if ( stat ( cred_index_file , & stat_buff ) )"		1938	12					
ANR	2127	Condition	"stat ( cred_index_file , & stat_buff )"	1015:6:26238:26271	1938	0	True				
ANR	2128	CallExpression	"stat ( cred_index_file , & stat_buff )"		1938	0					
ANR	2129	Callee	stat		1938	0					
ANR	2130	Identifier	stat		1938	0					
ANR	2131	ArgumentList	cred_index_file		1938	1					
ANR	2132	Argument	cred_index_file		1938	0					
ANR	2133	Identifier	cred_index_file		1938	0					
ANR	2134	Argument	& stat_buff		1938	1					
ANR	2135	UnaryOperationExpression	& stat_buff		1938	0					
ANR	2136	UnaryOperator	&		1938	0					
ANR	2137	Identifier	stat_buff		1938	1					
ANR	2138	CompoundStatement		52:4:1272:1358	1938	1					
ANR	2139	ExpressionStatement	"dprintf ( D_ALWAYS , ""Creating credential index file %s\\n"" , cred_index_file )"	1016:4:26280:26354	1938	0	True				
ANR	2140	CallExpression	"dprintf ( D_ALWAYS , ""Creating credential index file %s\\n"" , cred_index_file )"		1938	0					
ANR	2141	Callee	dprintf		1938	0					
ANR	2142	Identifier	dprintf		1938	0					
ANR	2143	ArgumentList	D_ALWAYS		1938	1					
ANR	2144	Argument	D_ALWAYS		1938	0					
ANR	2145	Identifier	D_ALWAYS		1938	0					
ANR	2146	Argument	"""Creating credential index file %s\\n"""		1938	1					
ANR	2147	PrimaryExpression	"""Creating credential index file %s\\n"""		1938	0					
ANR	2148	Argument	cred_index_file		1938	2					
ANR	2149	Identifier	cred_index_file		1938	0					
ANR	2150	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1017:4:26360:26393	1938	1	True				
ANR	2151	IdentifierDecl	priv = set_root_priv ( )		1938	0					
ANR	2152	IdentifierDeclType	priv_state		1938	0					
ANR	2153	Identifier	priv		1938	1					
ANR	2154	AssignmentExpression	priv = set_root_priv ( )		1938	2		=			
ANR	2155	Identifier	priv		1938	0					
ANR	2156	CallExpression	set_root_priv ( )		1938	1					
ANR	2157	Callee	set_root_priv		1938	0					
ANR	2158	Identifier	set_root_priv		1938	0					
ANR	2159	ArgumentList			1938	1					
ANR	2160	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( cred_index_file , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	1018:4:26399:26485	1938	2	True				
ANR	2161	IdentifierDecl	"fd = safe_open_wrapper_follow ( cred_index_file , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		1938	0					
ANR	2162	IdentifierDeclType	int		1938	0					
ANR	2163	Identifier	fd		1938	1					
ANR	2164	AssignmentExpression	"fd = safe_open_wrapper_follow ( cred_index_file , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		1938	2		=			
ANR	2165	Identifier	fd		1938	0					
ANR	2166	CallExpression	"safe_open_wrapper_follow ( cred_index_file , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		1938	1					
ANR	2167	Callee	safe_open_wrapper_follow		1938	0					
ANR	2168	Identifier	safe_open_wrapper_follow		1938	0					
ANR	2169	ArgumentList	cred_index_file		1938	1					
ANR	2170	Argument	cred_index_file		1938	0					
ANR	2171	Identifier	cred_index_file		1938	0					
ANR	2172	Argument	O_WRONLY | O_CREAT | O_TRUNC		1938	1					
ANR	2173	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		1938	0		|			
ANR	2174	Identifier	O_WRONLY		1938	0					
ANR	2175	InclusiveOrExpression	O_CREAT | O_TRUNC		1938	1		|			
ANR	2176	Identifier	O_CREAT		1938	0					
ANR	2177	Identifier	O_TRUNC		1938	1					
ANR	2178	Argument	0600		1938	2					
ANR	2179	PrimaryExpression	0600		1938	0					
ANR	2180	IfStatement	if ( fd != - 1 )		1938	3					
ANR	2181	Condition	fd != - 1	1019:8:26495:26502	1938	0	True				
ANR	2182	EqualityExpression	fd != - 1		1938	0		!=			
ANR	2183	Identifier	fd		1938	0					
ANR	2184	UnaryOperationExpression	- 1		1938	1					
ANR	2185	UnaryOperator	-		1938	0					
ANR	2186	PrimaryExpression	1		1938	1					
ANR	2187	CompoundStatement		53:18:1378:1378	1938	1					
ANR	2188	ExpressionStatement	close ( fd )	1020:6:26513:26523	1938	0	True				
ANR	2189	CallExpression	close ( fd )		1938	0					
ANR	2190	Callee	close		1938	0					
ANR	2191	Identifier	close		1938	0					
ANR	2192	ArgumentList	fd		1938	1					
ANR	2193	Argument	fd		1938	0					
ANR	2194	Identifier	fd		1938	0					
ANR	2195	ExpressionStatement	set_priv ( priv )	1021:6:26531:26546	1938	1	True				
ANR	2196	CallExpression	set_priv ( priv )		1938	0					
ANR	2197	Callee	set_priv		1938	0					
ANR	2198	Identifier	set_priv		1938	0					
ANR	2199	ArgumentList	priv		1938	1					
ANR	2200	Argument	priv		1938	0					
ANR	2201	Identifier	priv		1938	0					
ANR	2202	ElseStatement	else		1938	0					
ANR	2203	CompoundStatement		56:11:1432:1432	1938	0					
ANR	2204	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Unable to create credential index file %s\\n"" , cred_index_file )"	1023:6:26567:26656	1938	0	True				
ANR	2205	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Unable to create credential index file %s\\n"" , cred_index_file )"		1938	0					
ANR	2206	Callee	dprintf		1938	0					
ANR	2207	Identifier	dprintf		1938	0					
ANR	2208	ArgumentList	D_ALWAYS		1938	1					
ANR	2209	Argument	D_ALWAYS		1938	0					
ANR	2210	Identifier	D_ALWAYS		1938	0					
ANR	2211	Argument	"""ERROR: Unable to create credential index file %s\\n"""		1938	1					
ANR	2212	PrimaryExpression	"""ERROR: Unable to create credential index file %s\\n"""		1938	0					
ANR	2213	Argument	cred_index_file		1938	2					
ANR	2214	Identifier	cred_index_file		1938	0					
ANR	2215	ExpressionStatement	set_priv ( priv )	1024:6:26664:26679	1938	1	True				
ANR	2216	CallExpression	set_priv ( priv )		1938	0					
ANR	2217	Callee	set_priv		1938	0					
ANR	2218	Identifier	set_priv		1938	0					
ANR	2219	ArgumentList	priv		1938	1					
ANR	2220	Argument	priv		1938	0					
ANR	2221	Identifier	priv		1938	0					
ANR	2222	ExpressionStatement	DC_Exit ( 1 )	1025:6:26687:26699	1938	2	True				
ANR	2223	CallExpression	DC_Exit ( 1 )		1938	0					
ANR	2224	Callee	DC_Exit		1938	0					
ANR	2225	Identifier	DC_Exit		1938	0					
ANR	2226	ArgumentList	1		1938	1					
ANR	2227	Argument	1		1938	0					
ANR	2228	PrimaryExpression	1		1938	0					
ANR	2229	ElseStatement	else		1938	0					
ANR	2230	CompoundStatement		61:9:1589:1589	1938	0					
ANR	2231	IfStatement	if ( ( stat_buff . st_mode & ( S_IRWXG | S_IRWXO ) ) || ( stat_buff . st_uid != getuid ( ) ) )		1938	0					
ANR	2232	Condition	( stat_buff . st_mode & ( S_IRWXG | S_IRWXO ) ) || ( stat_buff . st_uid != getuid ( ) )	1028:8:26726:26801	1938	0	True				
ANR	2233	OrExpression	( stat_buff . st_mode & ( S_IRWXG | S_IRWXO ) ) || ( stat_buff . st_uid != getuid ( ) )		1938	0		||			
ANR	2234	BitAndExpression	stat_buff . st_mode & ( S_IRWXG | S_IRWXO )		1938	0		&			
ANR	2235	MemberAccess	stat_buff . st_mode		1938	0					
ANR	2236	Identifier	stat_buff		1938	0					
ANR	2237	Identifier	st_mode		1938	1					
ANR	2238	InclusiveOrExpression	S_IRWXG | S_IRWXO		1938	1		|			
ANR	2239	Identifier	S_IRWXG		1938	0					
ANR	2240	Identifier	S_IRWXO		1938	1					
ANR	2241	EqualityExpression	stat_buff . st_uid != getuid ( )		1938	1		!=			
ANR	2242	MemberAccess	stat_buff . st_uid		1938	0					
ANR	2243	Identifier	stat_buff		1938	0					
ANR	2244	Identifier	st_uid		1938	1					
ANR	2245	CallExpression	getuid ( )		1938	1					
ANR	2246	Callee	getuid		1938	0					
ANR	2247	Identifier	getuid		1938	0					
ANR	2248	ArgumentList			1938	1					
ANR	2249	CompoundStatement		63:33:1677:1677	1938	1					
ANR	2250	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Invalid ownership / permissions on credential index file %s\\n"" , cred_index_file )"	1030:6:26812:26928	1938	0	True				
ANR	2251	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Invalid ownership / permissions on credential index file %s\\n"" , cred_index_file )"		1938	0					
ANR	2252	Callee	dprintf		1938	0					
ANR	2253	Identifier	dprintf		1938	0					
ANR	2254	ArgumentList	D_ALWAYS		1938	1					
ANR	2255	Argument	D_ALWAYS		1938	0					
ANR	2256	Identifier	D_ALWAYS		1938	0					
ANR	2257	Argument	"""ERROR: Invalid ownership / permissions on credential index file %s\\n"""		1938	1					
ANR	2258	PrimaryExpression	"""ERROR: Invalid ownership / permissions on credential index file %s\\n"""		1938	0					
ANR	2259	Argument	cred_index_file		1938	2					
ANR	2260	Identifier	cred_index_file		1938	0					
ANR	2261	ExpressionStatement	DC_Exit ( 1 )	1032:6:26936:26948	1938	1	True				
ANR	2262	CallExpression	DC_Exit ( 1 )		1938	0					
ANR	2263	Callee	DC_Exit		1938	0					
ANR	2264	Identifier	DC_Exit		1938	0					
ANR	2265	ArgumentList	1		1938	1					
ANR	2266	Argument	1		1938	0					
ANR	2267	PrimaryExpression	1		1938	0					
ANR	2268	ReturnType	void		1938	1					
ANR	2269	Identifier	Init		1938	2					
ANR	2270	ParameterList			1938	3					
ANR	2271	CFGEntryNode	ENTRY		1938		True				
ANR	2272	CFGExitNode	EXIT		1938		True				
ANR	2273	Symbol	stat_buff		1938						
ANR	2274	Symbol	safe_open_wrapper_follow		1938						
ANR	2275	Symbol	spool		1938						
ANR	2276	Symbol	O_CREAT		1938						
ANR	2277	Symbol	dircat		1938						
ANR	2278	Symbol	cred_index_file		1938						
ANR	2279	Symbol	CheckCredentials_interval		1938						
ANR	2280	Symbol	param		1938						
ANR	2281	Symbol	tmp		1938						
ANR	2282	Symbol	cred_store_dir		1938						
ANR	2283	Symbol	super_users		1938						
ANR	2284	Symbol	& stat_buff		1938						
ANR	2285	Symbol	priv		1938						
ANR	2286	Symbol	default_cred_expire_threshold		1938						
ANR	2287	Symbol	DEF_CRED_CHECK_INTERVAL		1938						
ANR	2288	Symbol	stat		1938						
ANR	2289	Symbol	NULL		1938						
ANR	2290	Symbol	D_ALWAYS		1938						
ANR	2291	Symbol	set_root_priv		1938						
ANR	2292	Symbol	stat_buff . st_mode		1938						
ANR	2293	Symbol	O_TRUNC		1938						
ANR	2294	Symbol	getuid		1938						
ANR	2295	Symbol	stat_buff . st_uid		1938						
ANR	2296	Symbol	S_IRWXO		1938						
ANR	2297	Symbol	param_integer		1938						
ANR	2298	Symbol	O_WRONLY		1938						
ANR	2299	Symbol	S_IRWXG		1938						
ANR	2300	Symbol	fd		1938						
ANR	2301	Function	StoreData	1038:0:26964:27635							
ANR	2302	FunctionDef	"StoreData (const char * file_name , const void * data , const int data_size)"		2301	0					
ANR	2303	CompoundStatement		1039:75:27043:27635	2301	0					
ANR	2304	IfStatement	if ( ! data )		2301	0					
ANR	2305	Condition	! data	1041:6:27052:27056	2301	0	True				
ANR	2306	UnaryOperationExpression	! data		2301	0					
ANR	2307	UnaryOperator	!		2301	0					
ANR	2308	Identifier	data		2301	1					
ANR	2309	CompoundStatement		3:13:15:15	2301	1					
ANR	2310	ReturnStatement	return FALSE ;	1042:4:27065:27077	2301	0	True				
ANR	2311	Identifier	FALSE		2301	0					
ANR	2312	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1046:2:27087:27120	2301	1	True				
ANR	2313	IdentifierDecl	priv = set_root_priv ( )		2301	0					
ANR	2314	IdentifierDeclType	priv_state		2301	0					
ANR	2315	Identifier	priv		2301	1					
ANR	2316	AssignmentExpression	priv = set_root_priv ( )		2301	2		=			
ANR	2317	Identifier	priv		2301	0					
ANR	2318	CallExpression	set_root_priv ( )		2301	1					
ANR	2319	Callee	set_root_priv		2301	0					
ANR	2320	Identifier	set_root_priv		2301	0					
ANR	2321	ArgumentList			2301	1					
ANR	2322	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""in StoreData(), euid=%d\\n"" , geteuid ( ) )"	1047:2:27124:27185	2301	2	True				
ANR	2323	CallExpression	"dprintf ( D_FULLDEBUG , ""in StoreData(), euid=%d\\n"" , geteuid ( ) )"		2301	0					
ANR	2324	Callee	dprintf		2301	0					
ANR	2325	Identifier	dprintf		2301	0					
ANR	2326	ArgumentList	D_FULLDEBUG		2301	1					
ANR	2327	Argument	D_FULLDEBUG		2301	0					
ANR	2328	Identifier	D_FULLDEBUG		2301	0					
ANR	2329	Argument	"""in StoreData(), euid=%d\\n"""		2301	1					
ANR	2330	PrimaryExpression	"""in StoreData(), euid=%d\\n"""		2301	0					
ANR	2331	Argument	geteuid ( )		2301	2					
ANR	2332	CallExpression	geteuid ( )		2301	0					
ANR	2333	Callee	geteuid		2301	0					
ANR	2334	Identifier	geteuid		2301	0					
ANR	2335	ArgumentList			2301	1					
ANR	2336	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( file_name , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	1049:2:27190:27271	2301	3	True				
ANR	2337	IdentifierDecl	"fd = safe_open_wrapper_follow ( file_name , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		2301	0					
ANR	2338	IdentifierDeclType	int		2301	0					
ANR	2339	Identifier	fd		2301	1					
ANR	2340	AssignmentExpression	"fd = safe_open_wrapper_follow ( file_name , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		2301	2		=			
ANR	2341	Identifier	fd		2301	0					
ANR	2342	CallExpression	"safe_open_wrapper_follow ( file_name , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		2301	1					
ANR	2343	Callee	safe_open_wrapper_follow		2301	0					
ANR	2344	Identifier	safe_open_wrapper_follow		2301	0					
ANR	2345	ArgumentList	file_name		2301	1					
ANR	2346	Argument	file_name		2301	0					
ANR	2347	Identifier	file_name		2301	0					
ANR	2348	Argument	O_WRONLY | O_CREAT | O_TRUNC		2301	1					
ANR	2349	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		2301	0		|			
ANR	2350	Identifier	O_WRONLY		2301	0					
ANR	2351	InclusiveOrExpression	O_CREAT | O_TRUNC		2301	1		|			
ANR	2352	Identifier	O_CREAT		2301	0					
ANR	2353	Identifier	O_TRUNC		2301	1					
ANR	2354	Argument	0600		2301	2					
ANR	2355	PrimaryExpression	0600		2301	0					
ANR	2356	IfStatement	if ( fd == - 1 )		2301	4					
ANR	2357	Condition	fd == - 1	1050:6:27279:27286	2301	0	True				
ANR	2358	EqualityExpression	fd == - 1		2301	0		==			
ANR	2359	Identifier	fd		2301	0					
ANR	2360	UnaryOperationExpression	- 1		2301	1					
ANR	2361	UnaryOperator	-		2301	0					
ANR	2362	PrimaryExpression	1		2301	1					
ANR	2363	CompoundStatement		12:16:245:245	2301	1					
ANR	2364	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to store in %s\\n"" , file_name )"	1051:4:27295:27351	2301	0	True				
ANR	2365	CallExpression	"dprintf ( D_ALWAYS , ""Unable to store in %s\\n"" , file_name )"		2301	0					
ANR	2366	Callee	dprintf		2301	0					
ANR	2367	Identifier	dprintf		2301	0					
ANR	2368	ArgumentList	D_ALWAYS		2301	1					
ANR	2369	Argument	D_ALWAYS		2301	0					
ANR	2370	Identifier	D_ALWAYS		2301	0					
ANR	2371	Argument	"""Unable to store in %s\\n"""		2301	1					
ANR	2372	PrimaryExpression	"""Unable to store in %s\\n"""		2301	0					
ANR	2373	Argument	file_name		2301	2					
ANR	2374	Identifier	file_name		2301	0					
ANR	2375	ExpressionStatement	set_priv ( priv )	1052:4:27357:27371	2301	1	True				
ANR	2376	CallExpression	set_priv ( priv )		2301	0					
ANR	2377	Callee	set_priv		2301	0					
ANR	2378	Identifier	set_priv		2301	0					
ANR	2379	ArgumentList	priv		2301	1					
ANR	2380	Argument	priv		2301	0					
ANR	2381	Identifier	priv		2301	0					
ANR	2382	ReturnStatement	return FALSE ;	1053:4:27377:27389	2301	2	True				
ANR	2383	Identifier	FALSE		2301	0					
ANR	2384	ExpressionStatement	"fchmod ( fd , S_IRUSR | S_IWUSR )"	1057:2:27475:27505	2301	5	True				
ANR	2385	CallExpression	"fchmod ( fd , S_IRUSR | S_IWUSR )"		2301	0					
ANR	2386	Callee	fchmod		2301	0					
ANR	2387	Identifier	fchmod		2301	0					
ANR	2388	ArgumentList	fd		2301	1					
ANR	2389	Argument	fd		2301	0					
ANR	2390	Identifier	fd		2301	0					
ANR	2391	Argument	S_IRUSR | S_IWUSR		2301	1					
ANR	2392	InclusiveOrExpression	S_IRUSR | S_IWUSR		2301	0		|			
ANR	2393	Identifier	S_IRUSR		2301	0					
ANR	2394	Identifier	S_IWUSR		2301	1					
ANR	2395	ExpressionStatement	"fchown ( fd , get_user_uid ( ) , get_user_gid ( ) )"	1058:2:27509:27552	2301	6	True				
ANR	2396	CallExpression	"fchown ( fd , get_user_uid ( ) , get_user_gid ( ) )"		2301	0					
ANR	2397	Callee	fchown		2301	0					
ANR	2398	Identifier	fchown		2301	0					
ANR	2399	ArgumentList	fd		2301	1					
ANR	2400	Argument	fd		2301	0					
ANR	2401	Identifier	fd		2301	0					
ANR	2402	Argument	get_user_uid ( )		2301	1					
ANR	2403	CallExpression	get_user_uid ( )		2301	0					
ANR	2404	Callee	get_user_uid		2301	0					
ANR	2405	Identifier	get_user_uid		2301	0					
ANR	2406	ArgumentList			2301	1					
ANR	2407	Argument	get_user_gid ( )		2301	2					
ANR	2408	CallExpression	get_user_gid ( )		2301	0					
ANR	2409	Callee	get_user_gid		2301	0					
ANR	2410	Identifier	get_user_gid		2301	0					
ANR	2411	ArgumentList			2301	1					
ANR	2412	ExpressionStatement	"write ( fd , data , data_size )"	1060:2:27557:27584	2301	7	True				
ANR	2413	CallExpression	"write ( fd , data , data_size )"		2301	0					
ANR	2414	Callee	write		2301	0					
ANR	2415	Identifier	write		2301	0					
ANR	2416	ArgumentList	fd		2301	1					
ANR	2417	Argument	fd		2301	0					
ANR	2418	Identifier	fd		2301	0					
ANR	2419	Argument	data		2301	1					
ANR	2420	Identifier	data		2301	0					
ANR	2421	Argument	data_size		2301	2					
ANR	2422	Identifier	data_size		2301	0					
ANR	2423	ExpressionStatement	close ( fd )	1062:2:27589:27599	2301	8	True				
ANR	2424	CallExpression	close ( fd )		2301	0					
ANR	2425	Callee	close		2301	0					
ANR	2426	Identifier	close		2301	0					
ANR	2427	ArgumentList	fd		2301	1					
ANR	2428	Argument	fd		2301	0					
ANR	2429	Identifier	fd		2301	0					
ANR	2430	ExpressionStatement	set_priv ( priv )	1064:2:27604:27618	2301	9	True				
ANR	2431	CallExpression	set_priv ( priv )		2301	0					
ANR	2432	Callee	set_priv		2301	0					
ANR	2433	Identifier	set_priv		2301	0					
ANR	2434	ArgumentList	priv		2301	1					
ANR	2435	Argument	priv		2301	0					
ANR	2436	Identifier	priv		2301	0					
ANR	2437	ReturnStatement	return TRUE ;	1065:2:27622:27633	2301	10	True				
ANR	2438	Identifier	TRUE		2301	0					
ANR	2439	ReturnType	int		2301	1					
ANR	2440	Identifier	StoreData		2301	2					
ANR	2441	ParameterList	"const char * file_name , const void * data , const int data_size"		2301	3					
ANR	2442	Parameter	const char * file_name	1039:11:26979:27000	2301	0	True				
ANR	2443	ParameterType	const char *		2301	0					
ANR	2444	Identifier	file_name		2301	1					
ANR	2445	Parameter	const void * data	1039:35:27003:27019	2301	1	True				
ANR	2446	ParameterType	const void *		2301	0					
ANR	2447	Identifier	data		2301	1					
ANR	2448	Parameter	const int data_size	1039:54:27022:27040	2301	2	True				
ANR	2449	ParameterType	const int		2301	0					
ANR	2450	Identifier	data_size		2301	1					
ANR	2451	CFGEntryNode	ENTRY		2301		True				
ANR	2452	CFGExitNode	EXIT		2301		True				
ANR	2453	Symbol	data_size		2301						
ANR	2454	Symbol	safe_open_wrapper_follow		2301						
ANR	2455	Symbol	data		2301						
ANR	2456	Symbol	file_name		2301						
ANR	2457	Symbol	O_CREAT		2301						
ANR	2458	Symbol	get_user_uid		2301						
ANR	2459	Symbol	D_ALWAYS		2301						
ANR	2460	Symbol	TRUE		2301						
ANR	2461	Symbol	set_root_priv		2301						
ANR	2462	Symbol	D_FULLDEBUG		2301						
ANR	2463	Symbol	geteuid		2301						
ANR	2464	Symbol	O_TRUNC		2301						
ANR	2465	Symbol	S_IRUSR		2301						
ANR	2466	Symbol	get_user_gid		2301						
ANR	2467	Symbol	S_IWUSR		2301						
ANR	2468	Symbol	FALSE		2301						
ANR	2469	Symbol	priv		2301						
ANR	2470	Symbol	O_WRONLY		2301						
ANR	2471	Symbol	fd		2301						
ANR	2472	Function	LoadData	1068:0:27638:28194							
ANR	2473	FunctionDef	"LoadData (const char * file_name , void * & data , int & data_size)"		2472	0					
ANR	2474	CompoundStatement		1069:65:27707:28194	2472	0					
ANR	2475	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1070:2:27711:27744	2472	0	True				
ANR	2476	IdentifierDecl	priv = set_root_priv ( )		2472	0					
ANR	2477	IdentifierDeclType	priv_state		2472	0					
ANR	2478	Identifier	priv		2472	1					
ANR	2479	AssignmentExpression	priv = set_root_priv ( )		2472	2		=			
ANR	2480	Identifier	priv		2472	0					
ANR	2481	CallExpression	set_root_priv ( )		2472	1					
ANR	2482	Callee	set_root_priv		2472	0					
ANR	2483	Identifier	set_root_priv		2472	0					
ANR	2484	ArgumentList			2472	1					
ANR	2485	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( file_name , O_RDONLY ) ;"	1072:2:27751:27805	2472	1	True				
ANR	2486	IdentifierDecl	"fd = safe_open_wrapper_follow ( file_name , O_RDONLY )"		2472	0					
ANR	2487	IdentifierDeclType	int		2472	0					
ANR	2488	Identifier	fd		2472	1					
ANR	2489	AssignmentExpression	"fd = safe_open_wrapper_follow ( file_name , O_RDONLY )"		2472	2		=			
ANR	2490	Identifier	fd		2472	0					
ANR	2491	CallExpression	"safe_open_wrapper_follow ( file_name , O_RDONLY )"		2472	1					
ANR	2492	Callee	safe_open_wrapper_follow		2472	0					
ANR	2493	Identifier	safe_open_wrapper_follow		2472	0					
ANR	2494	ArgumentList	file_name		2472	1					
ANR	2495	Argument	file_name		2472	0					
ANR	2496	Identifier	file_name		2472	0					
ANR	2497	Argument	O_RDONLY		2472	1					
ANR	2498	Identifier	O_RDONLY		2472	0					
ANR	2499	IfStatement	if ( fd == - 1 )		2472	2					
ANR	2500	Condition	fd == - 1	1073:6:27813:27820	2472	0	True				
ANR	2501	EqualityExpression	fd == - 1		2472	0		==			
ANR	2502	Identifier	fd		2472	0					
ANR	2503	UnaryOperationExpression	- 1		2472	1					
ANR	2504	UnaryOperator	-		2472	0					
ANR	2505	PrimaryExpression	1		2472	1					
ANR	2506	CompoundStatement		5:16:115:115	2472	1					
ANR	2507	ExpressionStatement	"fprintf ( stderr , ""Can't open %s\\n"" , file_name )"	1074:4:27829:27875	2472	0	True				
ANR	2508	CallExpression	"fprintf ( stderr , ""Can't open %s\\n"" , file_name )"		2472	0					
ANR	2509	Callee	fprintf		2472	0					
ANR	2510	Identifier	fprintf		2472	0					
ANR	2511	ArgumentList	stderr		2472	1					
ANR	2512	Argument	stderr		2472	0					
ANR	2513	Identifier	stderr		2472	0					
ANR	2514	Argument	"""Can't open %s\\n"""		2472	1					
ANR	2515	PrimaryExpression	"""Can't open %s\\n"""		2472	0					
ANR	2516	Argument	file_name		2472	2					
ANR	2517	Identifier	file_name		2472	0					
ANR	2518	ExpressionStatement	set_priv ( priv )	1075:4:27881:27896	2472	1	True				
ANR	2519	CallExpression	set_priv ( priv )		2472	0					
ANR	2520	Callee	set_priv		2472	0					
ANR	2521	Identifier	set_priv		2472	0					
ANR	2522	ArgumentList	priv		2472	1					
ANR	2523	Argument	priv		2472	0					
ANR	2524	Identifier	priv		2472	0					
ANR	2525	ReturnStatement	return FALSE ;	1076:4:27902:27914	2472	2	True				
ANR	2526	Identifier	FALSE		2472	0					
ANR	2527	IdentifierDeclStatement	char buff [ MAX_CRED_DATA_SIZE + 1 ] ;	1079:2:27925:27957	2472	3	True				
ANR	2528	IdentifierDecl	buff [ MAX_CRED_DATA_SIZE + 1 ]		2472	0					
ANR	2529	IdentifierDeclType	char [ MAX_CRED_DATA_SIZE + 1 ]		2472	0					
ANR	2530	Identifier	buff		2472	1					
ANR	2531	AdditiveExpression	MAX_CRED_DATA_SIZE + 1		2472	2		+			
ANR	2532	Identifier	MAX_CRED_DATA_SIZE		2472	0					
ANR	2533	PrimaryExpression	1		2472	1					
ANR	2534	ExpressionStatement	"data_size = read ( fd , buff , MAX_CRED_DATA_SIZE )"	1080:2:27961:28008	2472	4	True				
ANR	2535	AssignmentExpression	"data_size = read ( fd , buff , MAX_CRED_DATA_SIZE )"		2472	0		=			
ANR	2536	Identifier	data_size		2472	0					
ANR	2537	CallExpression	"read ( fd , buff , MAX_CRED_DATA_SIZE )"		2472	1					
ANR	2538	Callee	read		2472	0					
ANR	2539	Identifier	read		2472	0					
ANR	2540	ArgumentList	fd		2472	1					
ANR	2541	Argument	fd		2472	0					
ANR	2542	Identifier	fd		2472	0					
ANR	2543	Argument	buff		2472	1					
ANR	2544	Identifier	buff		2472	0					
ANR	2545	Argument	MAX_CRED_DATA_SIZE		2472	2					
ANR	2546	Identifier	MAX_CRED_DATA_SIZE		2472	0					
ANR	2547	ExpressionStatement	close ( fd )	1082:2:28013:28023	2472	5	True				
ANR	2548	CallExpression	close ( fd )		2472	0					
ANR	2549	Callee	close		2472	0					
ANR	2550	Identifier	close		2472	0					
ANR	2551	ArgumentList	fd		2472	1					
ANR	2552	Argument	fd		2472	0					
ANR	2553	Identifier	fd		2472	0					
ANR	2554	IfStatement	if ( data_size <= 0 )		2472	6					
ANR	2555	Condition	data_size <= 0	1084:6:28032:28045	2472	0	True				
ANR	2556	RelationalExpression	data_size <= 0		2472	0		<=			
ANR	2557	Identifier	data_size		2472	0					
ANR	2558	PrimaryExpression	0		2472	1					
ANR	2559	CompoundStatement		16:22:340:340	2472	1					
ANR	2560	ExpressionStatement	set_priv ( priv )	1085:4:28054:28069	2472	0	True				
ANR	2561	CallExpression	set_priv ( priv )		2472	0					
ANR	2562	Callee	set_priv		2472	0					
ANR	2563	Identifier	set_priv		2472	0					
ANR	2564	ArgumentList	priv		2472	1					
ANR	2565	Argument	priv		2472	0					
ANR	2566	Identifier	priv		2472	0					
ANR	2567	ReturnStatement	return FALSE ;	1086:4:28075:28087	2472	1	True				
ANR	2568	Identifier	FALSE		2472	0					
ANR	2569	ExpressionStatement	data = malloc ( data_size )	1089:2:28096:28121	2472	7	True				
ANR	2570	AssignmentExpression	data = malloc ( data_size )		2472	0		=			
ANR	2571	Identifier	data		2472	0					
ANR	2572	CallExpression	malloc ( data_size )		2472	1					
ANR	2573	Callee	malloc		2472	0					
ANR	2574	Identifier	malloc		2472	0					
ANR	2575	ArgumentList	data_size		2472	1					
ANR	2576	Argument	data_size		2472	0					
ANR	2577	Identifier	data_size		2472	0					
ANR	2578	ExpressionStatement	"memcpy ( data , buff , data_size )"	1091:2:28126:28156	2472	8	True				
ANR	2579	CallExpression	"memcpy ( data , buff , data_size )"		2472	0					
ANR	2580	Callee	memcpy		2472	0					
ANR	2581	Identifier	memcpy		2472	0					
ANR	2582	ArgumentList	data		2472	1					
ANR	2583	Argument	data		2472	0					
ANR	2584	Identifier	data		2472	0					
ANR	2585	Argument	buff		2472	1					
ANR	2586	Identifier	buff		2472	0					
ANR	2587	Argument	data_size		2472	2					
ANR	2588	Identifier	data_size		2472	0					
ANR	2589	ExpressionStatement	set_priv ( priv )	1093:2:28161:28176	2472	9	True				
ANR	2590	CallExpression	set_priv ( priv )		2472	0					
ANR	2591	Callee	set_priv		2472	0					
ANR	2592	Identifier	set_priv		2472	0					
ANR	2593	ArgumentList	priv		2472	1					
ANR	2594	Argument	priv		2472	0					
ANR	2595	Identifier	priv		2472	0					
ANR	2596	ReturnStatement	return TRUE ;	1094:2:28180:28191	2472	10	True				
ANR	2597	Identifier	TRUE		2472	0					
ANR	2598	ReturnType	int		2472	1					
ANR	2599	Identifier	LoadData		2472	2					
ANR	2600	ParameterList	"const char * file_name , void * & data , int & data_size"		2472	3					
ANR	2601	Parameter	const char * file_name	1069:10:27652:27673	2472	0	True				
ANR	2602	ParameterType	const char *		2472	0					
ANR	2603	Identifier	file_name		2472	1					
ANR	2604	Parameter	void * & data	1069:34:27676:27687	2472	1	True				
ANR	2605	ParameterType	void * &		2472	0					
ANR	2606	Identifier	data		2472	1					
ANR	2607	Parameter	int & data_size	1069:48:27690:27704	2472	2	True				
ANR	2608	ParameterType	int &		2472	0					
ANR	2609	Identifier	data_size		2472	1					
ANR	2610	CFGEntryNode	ENTRY		2472		True				
ANR	2611	CFGExitNode	EXIT		2472		True				
ANR	2612	Symbol	data_size		2472						
ANR	2613	Symbol	malloc		2472						
ANR	2614	Symbol	safe_open_wrapper_follow		2472						
ANR	2615	Symbol	read		2472						
ANR	2616	Symbol	data		2472						
ANR	2617	Symbol	file_name		2472						
ANR	2618	Symbol	TRUE		2472						
ANR	2619	Symbol	set_root_priv		2472						
ANR	2620	Symbol	MAX_CRED_DATA_SIZE		2472						
ANR	2621	Symbol	stderr		2472						
ANR	2622	Symbol	O_RDONLY		2472						
ANR	2623	Symbol	FALSE		2472						
ANR	2624	Symbol	priv		2472						
ANR	2625	Symbol	buff		2472						
ANR	2626	Symbol	fd		2472						
ANR	2627	Function	init_user_id_from_FQN	1099:0:28198:28736							
ANR	2628	FunctionDef	init_user_id_from_FQN (const char * _fqn)		2627	0					
ANR	2629	CompoundStatement		1100:42:28244:28736	2627	0					
ANR	2630	IdentifierDeclStatement	char * uid = NULL ;	1102:2:28249:28266	2627	0	True				
ANR	2631	IdentifierDecl	* uid = NULL		2627	0					
ANR	2632	IdentifierDeclType	char *		2627	0					
ANR	2633	Identifier	uid		2627	1					
ANR	2634	AssignmentExpression	* uid = NULL		2627	2		=			
ANR	2635	Identifier	NULL		2627	0					
ANR	2636	Identifier	NULL		2627	1					
ANR	2637	IdentifierDeclStatement	char * domain = NULL ;	1103:2:28270:28290	2627	1	True				
ANR	2638	IdentifierDecl	* domain = NULL		2627	0					
ANR	2639	IdentifierDeclType	char *		2627	0					
ANR	2640	Identifier	domain		2627	1					
ANR	2641	AssignmentExpression	* domain = NULL		2627	2		=			
ANR	2642	Identifier	NULL		2627	0					
ANR	2643	Identifier	NULL		2627	1					
ANR	2644	IdentifierDeclStatement	char * fqn = NULL ;	1104:2:28294:28311	2627	2	True				
ANR	2645	IdentifierDecl	* fqn = NULL		2627	0					
ANR	2646	IdentifierDeclType	char *		2627	0					
ANR	2647	Identifier	fqn		2627	1					
ANR	2648	AssignmentExpression	* fqn = NULL		2627	2		=			
ANR	2649	Identifier	NULL		2627	0					
ANR	2650	Identifier	NULL		2627	1					
ANR	2651	IdentifierDeclStatement	"char default_uid [ ] = ""nobody"" ;"	1105:2:28315:28345	2627	3	True				
ANR	2652	IdentifierDecl	"default_uid [ ] = ""nobody"""		2627	0					
ANR	2653	IdentifierDeclType	char [ ]		2627	0					
ANR	2654	Identifier	default_uid		2627	1					
ANR	2655	AssignmentExpression	"default_uid [ ] = ""nobody"""		2627	2		=			
ANR	2656	Identifier	default_uid		2627	0					
ANR	2657	PrimaryExpression	"""nobody"""		2627	1					
ANR	2658	IfStatement	if ( _fqn )		2627	4					
ANR	2659	Condition	_fqn	1107:6:28354:28357	2627	0	True				
ANR	2660	Identifier	_fqn		2627	0					
ANR	2661	CompoundStatement		13:4:177:207	2627	1					
ANR	2662	ExpressionStatement	fqn = strdup ( _fqn )	1108:4:28366:28385	2627	0	True				
ANR	2663	AssignmentExpression	fqn = strdup ( _fqn )		2627	0		=			
ANR	2664	Identifier	fqn		2627	0					
ANR	2665	CallExpression	strdup ( _fqn )		2627	1					
ANR	2666	Callee	strdup		2627	0					
ANR	2667	Identifier	strdup		2627	0					
ANR	2668	ArgumentList	_fqn		2627	1					
ANR	2669	Argument	_fqn		2627	0					
ANR	2670	Identifier	_fqn		2627	0					
ANR	2671	ExpressionStatement	uid = fqn	1109:4:28391:28400	2627	1	True				
ANR	2672	AssignmentExpression	uid = fqn		2627	0		=			
ANR	2673	Identifier	uid		2627	0					
ANR	2674	Identifier	fqn		2627	1					
ANR	2675	IdentifierDeclStatement	"char * pAt = strchr ( fqn , '@' ) ;"	1112:4:28422:28452	2627	2	True				
ANR	2676	IdentifierDecl	"* pAt = strchr ( fqn , '@' )"		2627	0					
ANR	2677	IdentifierDeclType	char *		2627	0					
ANR	2678	Identifier	pAt		2627	1					
ANR	2679	AssignmentExpression	"* pAt = strchr ( fqn , '@' )"		2627	2		=			
ANR	2680	Identifier	pAt		2627	0					
ANR	2681	CallExpression	"strchr ( fqn , '@' )"		2627	1					
ANR	2682	Callee	strchr		2627	0					
ANR	2683	Identifier	strchr		2627	0					
ANR	2684	ArgumentList	fqn		2627	1					
ANR	2685	Argument	fqn		2627	0					
ANR	2686	Identifier	fqn		2627	0					
ANR	2687	Argument	'@'		2627	1					
ANR	2688	PrimaryExpression	'@'		2627	0					
ANR	2689	IfStatement	if ( pAt )		2627	3					
ANR	2690	Condition	pAt	1113:8:28462:28464	2627	0	True				
ANR	2691	Identifier	pAt		2627	0					
ANR	2692	CompoundStatement		14:13:222:222	2627	1					
ANR	2693	ExpressionStatement	* pAt = '\\0'	1114:6:28475:28484	2627	0	True				
ANR	2694	AssignmentExpression	* pAt = '\\0'		2627	0		=			
ANR	2695	UnaryOperationExpression	* pAt		2627	0					
ANR	2696	UnaryOperator	*		2627	0					
ANR	2697	Identifier	pAt		2627	1					
ANR	2698	PrimaryExpression	'\\0'		2627	1					
ANR	2699	ExpressionStatement	domain = pAt + 1	1115:6:28492:28506	2627	1	True				
ANR	2700	AssignmentExpression	domain = pAt + 1		2627	0		=			
ANR	2701	Identifier	domain		2627	0					
ANR	2702	AdditiveExpression	pAt + 1		2627	1		+			
ANR	2703	Identifier	pAt		2627	0					
ANR	2704	PrimaryExpression	1		2627	1					
ANR	2705	IfStatement	if ( uid == NULL )		2627	5					
ANR	2706	Condition	uid == NULL	1119:6:28527:28537	2627	0	True				
ANR	2707	EqualityExpression	uid == NULL		2627	0		==			
ANR	2708	Identifier	uid		2627	0					
ANR	2709	Identifier	NULL		2627	1					
ANR	2710	CompoundStatement		20:19:295:295	2627	1					
ANR	2711	ExpressionStatement	uid = default_uid	1120:4:28546:28563	2627	0	True				
ANR	2712	AssignmentExpression	uid = default_uid		2627	0		=			
ANR	2713	Identifier	uid		2627	0					
ANR	2714	Identifier	default_uid		2627	1					
ANR	2715	IdentifierDeclStatement	"int rc = init_user_ids ( uid , domain ) ;"	1123:2:28572:28608	2627	6	True				
ANR	2716	IdentifierDecl	"rc = init_user_ids ( uid , domain )"		2627	0					
ANR	2717	IdentifierDeclType	int		2627	0					
ANR	2718	Identifier	rc		2627	1					
ANR	2719	AssignmentExpression	"rc = init_user_ids ( uid , domain )"		2627	2		=			
ANR	2720	Identifier	rc		2627	0					
ANR	2721	CallExpression	"init_user_ids ( uid , domain )"		2627	1					
ANR	2722	Callee	init_user_ids		2627	0					
ANR	2723	Identifier	init_user_ids		2627	0					
ANR	2724	ArgumentList	uid		2627	1					
ANR	2725	Argument	uid		2627	0					
ANR	2726	Identifier	uid		2627	0					
ANR	2727	Argument	domain		2627	1					
ANR	2728	Identifier	domain		2627	0					
ANR	2729	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Switching to user %s@%s, result = %d\\n"" , uid , domain , rc )"	1124:2:28612:28692	2627	7	True				
ANR	2730	CallExpression	"dprintf ( D_FULLDEBUG , ""Switching to user %s@%s, result = %d\\n"" , uid , domain , rc )"		2627	0					
ANR	2731	Callee	dprintf		2627	0					
ANR	2732	Identifier	dprintf		2627	0					
ANR	2733	ArgumentList	D_FULLDEBUG		2627	1					
ANR	2734	Argument	D_FULLDEBUG		2627	0					
ANR	2735	Identifier	D_FULLDEBUG		2627	0					
ANR	2736	Argument	"""Switching to user %s@%s, result = %d\\n"""		2627	1					
ANR	2737	PrimaryExpression	"""Switching to user %s@%s, result = %d\\n"""		2627	0					
ANR	2738	Argument	uid		2627	2					
ANR	2739	Identifier	uid		2627	0					
ANR	2740	Argument	domain		2627	3					
ANR	2741	Identifier	domain		2627	0					
ANR	2742	Argument	rc		2627	4					
ANR	2743	Identifier	rc		2627	0					
ANR	2744	IfStatement	if ( fqn )		2627	8					
ANR	2745	Condition	fqn	1126:6:28701:28703	2627	0	True				
ANR	2746	Identifier	fqn		2627	0					
ANR	2747	ExpressionStatement	free ( fqn )	1127:4:28710:28720	2627	1	True				
ANR	2748	CallExpression	free ( fqn )		2627	0					
ANR	2749	Callee	free		2627	0					
ANR	2750	Identifier	free		2627	0					
ANR	2751	ArgumentList	fqn		2627	1					
ANR	2752	Argument	fqn		2627	0					
ANR	2753	Identifier	fqn		2627	0					
ANR	2754	ReturnStatement	return rc ;	1129:2:28725:28734	2627	9	True				
ANR	2755	Identifier	rc		2627	0					
ANR	2756	ReturnType	int		2627	1					
ANR	2757	Identifier	init_user_id_from_FQN		2627	2					
ANR	2758	ParameterList	const char * _fqn		2627	3					
ANR	2759	Parameter	const char * _fqn	1100:23:28225:28241	2627	0	True				
ANR	2760	ParameterType	const char *		2627	0					
ANR	2761	Identifier	_fqn		2627	1					
ANR	2762	CFGEntryNode	ENTRY		2627		True				
ANR	2763	CFGExitNode	EXIT		2627		True				
ANR	2764	Symbol	fqn		2627						
ANR	2765	Symbol	pAt		2627						
ANR	2766	Symbol	NULL		2627						
ANR	2767	Symbol	_fqn		2627						
ANR	2768	Symbol	strchr		2627						
ANR	2769	Symbol	D_FULLDEBUG		2627						
ANR	2770	Symbol	default_uid		2627						
ANR	2771	Symbol	* pAt		2627						
ANR	2772	Symbol	uid		2627						
ANR	2773	Symbol	rc		2627						
ANR	2774	Symbol	domain		2627						
ANR	2775	Symbol	strdup		2627						
ANR	2776	Symbol	init_user_ids		2627						
