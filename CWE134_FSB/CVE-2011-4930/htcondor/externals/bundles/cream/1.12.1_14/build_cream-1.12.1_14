#!/bin/sh

# Get dynamic config discovered by the build system.
. $EXTERNALS_CONFIG

# org.glite.ce.cream-client-api-c-1.12.1-14.tar.gz:
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.ce.cream-client-api-c.tar.gz?view=tar&pathrev=glite-ce-cream-client-api-c_R_1_12_1_14
# org.glite.security.gsoap-plugin-2.0.1-3.tar.gz:
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.security.gsoap-plugin.tar.gz?view=tar&pathrev=glite-security-gsoap-plugin_R_2_0_1_3
# org.glite.ce.wsdl-1.12.1-14.tar.gz:
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.ce.wsdl.tar.gz?view=tar&pathrev=glite-ce-wsdl_R_1_12_1_14
# org.glite.security.gss-2.0.1-1.tar.gz
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.security.gss.tar.gz?view=tar&pathrev=glite-security-gss_R_2_0_1_1
# gridsite-1.6.0.src.tar.gz:
#   http://www.gridsite.org/download/sources/gridsite-1.6.0.src.tar.gz
# gsoap_2.7.6b.tar.gz:
#   http://downloads.sourceforge.net/gsoap2/gsoap_2.7.6b.tar.gz?use_mirror=voxel

# The following files were taken from this URL:
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.tar.gz?view=tar&pathrev=glite_R_3_0_0
# boost.m4
# classads.m4		Modified
# glite.m4
# globus.m4		Modified
# gsoap.m4
# log4cpp.m4
# optimize.m4

# The following file was taken from this URL:
#   http://jra1mw.cvs.cern.ch/cgi-bin/jra1mw.cgi/org.glite.ce.tar.gz?view=tar&pathrev=glite-ce_R_1_7_29_0
# glite_ce_wsdl.m4	Modified

set -e -x

cd $PACKAGE_BUILD_DIR
stage_dir=$PACKAGE_BUILD_DIR/install
mkdir $stage_dir

# Build gsoap-2.7.6b
tar zxvf gsoap_2.7.6b.tar.gz
cd gsoap-2.7
./configure --prefix=$stage_dir
make
make install
cp soapcpp2/wsdl/stlvector.h $stage_dir/include
cd ..

# Build gridsite
# May have issues with differeing versions of openssl and kerberos
# between system and externals
tar zxvf gridsite-1.6.0.src.tar.gz
cd org.gridsite.core/src
MYCFLAGS="-I. -I../interface -I$EXTERNALS_INSTALL_DIR/$EXT_LIBXML2_VERSION/include/libxml2"
export MYCFLAGS
make libgridsite.a
cp libgridsite.a $stage_dir/lib
cp ../interface/*.h $stage_dir/include
cd ../..
unset MYCFLAGS
export MYCFLAGS

# Build org.glite.security.gss
tar zxvf org.glite.security.gss-2.0.1-1.tar.gz
cd org.glite.security.gss/src
gcc -g -O0 -W -Wall -Wno-unused-parameter \
   -I../interface -I$EXTERNALS_INSTALL_DIR/$EXT_OPENSSL_VERSION/include \
   -I$EXTERNALS_INSTALL_DIR/$EXT_GLOBUS_VERSION/include/$GLOBUS_THR_FLAVOR \
   -I$EXTERNALS_INSTALL_DIR/$EXT_CARES_VERSION/include \
   -o glite_gss.thr.o -c glite_gss.c
ar crv libglite_security_gss_${GLOBUS_THR_FLAVOR}.a glite_gss.thr.o
ranlib libglite_security_gss_${GLOBUS_THR_FLAVOR}.a
mkdir -p $stage_dir/include/glite/security
cp ../interface/* $stage_dir/include/glite/security
cp libglite_security_gss_${GLOBUS_THR_FLAVOR}.a $stage_dir/lib
cd ../..

# Build gsoap-plugin
tar zxvf org.glite.security.gsoap-plugin-2.0.1-3.tar.gz
cd org.glite.security.gsoap-plugin/src
ln -s stdsoap2_2.7.6b.c stdsoap2.c
ln -s stdsoap2_2.7.6b.h stdsoap2.h
head stdsoap2.h | perl -ne '/^\s*stdsoap2.h\s+([0-9])\.([0-9])\.(\S+)\s.*/ && printf "#define GSOAP_VERSION %d%02d%02d\n#define GSOAP_MIN_VERSION \"$3\"\n#ident \"soap_version.h $1.$2.$3\"\n",$1,$2,$3' >soap_version.h
gcc -g -O0 -W -Wall -Wno-unused-parameter \
   -I. -I../interface -DWITH_NONAMESPACES \
   -I$stage_dir/include -D_GNU_SOURCE \
   -o glite_gsplugin.thr.o -c glite_gsplugin.c
gcc -g -O0 -W -Wall -Wno-unused-parameter \
   -I. -I../interface -DWITH_NONAMESPACES \
   -I$stage_dir/include -D_GNU_SOURCE \
   -o stdsoap2.thr.o -c stdsoap2.c
ar crv libglite_security_gsoap_plugin_${GLOBUS_THR_FLAVOR}.a \
   glite_gsplugin.thr.o stdsoap2.thr.o
ranlib libglite_security_gsoap_plugin_${GLOBUS_THR_FLAVOR}.a

cp libglite_security_gsoap_plugin_${GLOBUS_THR_FLAVOR}.a $stage_dir/lib
#cp stdsoap2.h $stage_dir/include
cp ../interface/*.h $stage_dir/include/glite/security

cd ../..

# Build org.glite.ce.wsdl
tar zxvf org.glite.ce.wsdl-1.12.1-14.tar.gz
cd org.glite.ce.wsdl
project/install.sh $stage_dir $stage_dir 1.12.1 2.0.0
cd ..
ln -s share/wsdl $stage_dir/interface

# Build cream api...
tar zxvf org.glite.ce.cream-client-api-c-1.12.1-14.tar.gz
patch -p0 -i cream.patch
# BSD-based systems use a different flag to suppress a SIGPIPE when
# sending on a closed connection.
# Mac OS X's libc doesn't have a timezone variable. It has a function by
# the same time. Fortunately, Cream doesn't actually use timezone.
if [ `uname` = "Darwin" ] ; then
  patch -p0 -i bsd.patch
  patch -p0 -i macos.patch
fi
cp *.m4 org.glite.ce.cream-client-api-c/project
cd org.glite.ce.cream-client-api-c
./bootstrap
# TODO need to deal with having two different versions of gsoap
./configure --prefix=$stage_dir \
    --with-globus-prefix=$EXTERNALS_INSTALL_DIR/$EXT_GLOBUS_VERSION \
    --with-globus-thr-flavor=$GLOBUS_THR_FLAVOR \
    --with-globus-nothr-flavor=$GLOBUS_FLAVOR \
    --with-openssl-prefix=$EXTERNALS_INSTALL_DIR/$EXT_OPENSSL_VERSION \
    --with-voms-prefix=$EXTERNALS_INSTALL_DIR/$EXT_VOMS_VERSION \
    --with-boost-prefix=$EXTERNALS_INSTALL_DIR/$EXT_BOOST_VERSION \
    --with-classads-prefix=$EXTERNALS_INSTALL_DIR/$EXT_CLASSADS_VERSION \
    --with-log4cpp-prefix=$EXTERNALS_INSTALL_DIR/$EXT_LOG4CPP_VERSION \
    --with-gsoap-location=$stage_dir \
    --with-glite-location=$stage_dir \
    --with-ce-wsdl-version=1.12.1 \
    --with-delegation-wsdl-version=2.0.0
make
make install
cd ..

# Copy to install directory
cd $stage_dir
mkdir $PACKAGE_INSTALL_DIR $PACKAGE_INSTALL_DIR/include $PACKAGE_INSTALL_DIR/lib
cp -r include/glite include/stdsoap2.h $PACKAGE_INSTALL_DIR/include
cp -r lib/libglite_ce_cream_client_soap.a \
    lib/libglite_ce_cream_client_util.a \
    lib/libglite_security_gss_${GLOBUS_THR_FLAVOR}.a \
    lib/libglite_security_gsoap_plugin_${GLOBUS_THR_FLAVOR}.a \
    lib/libgridsite.a \
    $PACKAGE_INSTALL_DIR/lib
