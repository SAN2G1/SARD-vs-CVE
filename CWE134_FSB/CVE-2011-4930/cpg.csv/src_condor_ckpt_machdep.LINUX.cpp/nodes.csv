command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2678031	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_machdep.LINUX.cpp								
ANR	2678032	DeclStmt									
ANR	2678033	Decl							extern int	extern int	__data_start
ANR	2678034	DeclStmt									
ANR	2678035	Decl							extern char	extern char * *	__environ
ANR	2678036	Function	data_start_addr	59:0:1808:2443							
ANR	2678037	FunctionDef	data_start_addr ()		2678036	0					
ANR	2678038	CompoundStatement		61:0:1831:2443	2678036	0					
ANR	2678039	IdentifierDeclStatement	unsigned long addr = 0 ;	62:1:1834:1856	2678036	0	True				
ANR	2678040	IdentifierDecl	addr = 0		2678036	0					
ANR	2678041	IdentifierDeclType	unsigned long		2678036	0					
ANR	2678042	Identifier	addr		2678036	1					
ANR	2678043	AssignmentExpression	addr = 0		2678036	2		=			
ANR	2678044	Identifier	addr		2678036	0					
ANR	2678045	PrimaryExpression	0		2678036	1					
ANR	2678046	ExpressionStatement	addr = ( ( unsigned long ) & __data_start ) & PAGE_MASK	72:1:2315:2364	2678036	1	True				
ANR	2678047	AssignmentExpression	addr = ( ( unsigned long ) & __data_start ) & PAGE_MASK		2678036	0		=			
ANR	2678048	Identifier	addr		2678036	0					
ANR	2678049	BitAndExpression	( ( unsigned long ) & __data_start ) & PAGE_MASK		2678036	1		&			
ANR	2678050	CastExpression	( unsigned long ) & __data_start		2678036	0					
ANR	2678051	CastTarget	unsigned long		2678036	0					
ANR	2678052	UnaryOperationExpression	& __data_start		2678036	1					
ANR	2678053	UnaryOperator	&		2678036	0					
ANR	2678054	Identifier	__data_start		2678036	1					
ANR	2678055	Identifier	PAGE_MASK		2678036	1					
ANR	2678056	ReturnStatement	return addr ;	77:1:2430:2441	2678036	2	True				
ANR	2678057	Identifier	addr		2678036	0					
ANR	2678058	ReturnType	long		2678036	1					
ANR	2678059	Identifier	data_start_addr		2678036	2					
ANR	2678060	ParameterList			2678036	3					
ANR	2678061	CFGEntryNode	ENTRY		2678036		True				
ANR	2678062	CFGExitNode	EXIT		2678036		True				
ANR	2678063	Symbol	& __data_start		2678036						
ANR	2678064	Symbol	PAGE_MASK		2678036						
ANR	2678065	Symbol	addr		2678036						
ANR	2678066	Function	data_end_addr	83:0:2496:2542							
ANR	2678067	FunctionDef	data_end_addr ()		2678066	0					
ANR	2678068	CompoundStatement		85:0:2517:2542	2678066	0					
ANR	2678069	ReturnStatement	return ( long ) sbrk ( 0 ) ;	86:1:2520:2540	2678066	0	True				
ANR	2678070	CastExpression	( long ) sbrk ( 0 )		2678066	0					
ANR	2678071	CastTarget	long		2678066	0					
ANR	2678072	CallExpression	sbrk ( 0 )		2678066	1					
ANR	2678073	Callee	sbrk		2678066	0					
ANR	2678074	Identifier	sbrk		2678066	0					
ANR	2678075	ArgumentList	0		2678066	1					
ANR	2678076	Argument	0		2678066	0					
ANR	2678077	PrimaryExpression	0		2678066	0					
ANR	2678078	ReturnType	long		2678066	1					
ANR	2678079	Identifier	data_end_addr		2678066	2					
ANR	2678080	ParameterList			2678066	3					
ANR	2678081	CFGEntryNode	ENTRY		2678066		True				
ANR	2678082	CFGExitNode	EXIT		2678066		True				
ANR	2678083	Symbol	sbrk		2678066						
ANR	2678084	Function	StackGrowsDown	93:0:2631:2669							
ANR	2678085	FunctionDef	StackGrowsDown ()		2678084	0					
ANR	2678086	CompoundStatement		94:0:2653:2669	2678084	0					
ANR	2678087	ReturnStatement	return TRUE ;	95:1:2656:2667	2678084	0	True				
ANR	2678088	Identifier	TRUE		2678084	0					
ANR	2678089	ReturnType	BOOL		2678084	1					
ANR	2678090	Identifier	StackGrowsDown		2678084	2					
ANR	2678091	ParameterList			2678084	3					
ANR	2678092	CFGEntryNode	ENTRY		2678084		True				
ANR	2678093	CFGExitNode	EXIT		2678084		True				
ANR	2678094	Symbol	TRUE		2678084						
ANR	2678095	Function	JmpBufSP_Index	103:0:2826:3112							
ANR	2678096	FunctionDef	JmpBufSP_Index ()		2678095	0					
ANR	2678097	CompoundStatement		104:0:2847:3112	2678095	0					
ANR	2678098	ReturnStatement	return 4 ;	111:1:2984:2992	2678095	0	True				
ANR	2678099	PrimaryExpression	4		2678095	0					
ANR	2678100	ReturnType	int		2678095	1					
ANR	2678101	Identifier	JmpBufSP_Index		2678095	2					
ANR	2678102	ParameterList			2678095	3					
ANR	2678103	CFGEntryNode	ENTRY		2678095		True				
ANR	2678104	CFGExitNode	EXIT		2678095		True				
ANR	2678105	Function	stack_start_addr	124:0:3165:3326							
ANR	2678106	FunctionDef	stack_start_addr ()		2678105	0					
ANR	2678107	CompoundStatement		126:0:3189:3326	2678105	0					
ANR	2678108	IdentifierDeclStatement	jmp_buf env ;	127:1:3192:3203	2678105	0	True				
ANR	2678109	IdentifierDecl	env		2678105	0					
ANR	2678110	IdentifierDeclType	jmp_buf		2678105	0					
ANR	2678111	Identifier	env		2678105	1					
ANR	2678112	IdentifierDeclStatement	unsigned long addr ;	128:1:3206:3224	2678105	1	True				
ANR	2678113	IdentifierDecl	addr		2678105	0					
ANR	2678114	IdentifierDeclType	unsigned long		2678105	0					
ANR	2678115	Identifier	addr		2678105	1					
ANR	2678116	ExpressionStatement	( void ) SETJMP ( env )	130:1:3228:3245	2678105	2	True				
ANR	2678117	CastExpression	( void ) SETJMP ( env )		2678105	0					
ANR	2678118	CastTarget	void		2678105	0					
ANR	2678119	CallExpression	SETJMP ( env )		2678105	1					
ANR	2678120	Callee	SETJMP		2678105	0					
ANR	2678121	Identifier	SETJMP		2678105	0					
ANR	2678122	ArgumentList	env		2678105	1					
ANR	2678123	Argument	env		2678105	0					
ANR	2678124	Identifier	env		2678105	0					
ANR	2678125	ExpressionStatement	addr = ( long ) JMP_BUF_SP ( env )	132:1:3249:3277	2678105	3	True				
ANR	2678126	AssignmentExpression	addr = ( long ) JMP_BUF_SP ( env )		2678105	0		=			
ANR	2678127	Identifier	addr		2678105	0					
ANR	2678128	CastExpression	( long ) JMP_BUF_SP ( env )		2678105	1					
ANR	2678129	CastTarget	long		2678105	0					
ANR	2678130	CallExpression	JMP_BUF_SP ( env )		2678105	1					
ANR	2678131	Callee	JMP_BUF_SP		2678105	0					
ANR	2678132	Identifier	JMP_BUF_SP		2678105	0					
ANR	2678133	ArgumentList	env		2678105	1					
ANR	2678134	Argument	env		2678105	0					
ANR	2678135	Identifier	env		2678105	0					
ANR	2678136	ExpressionStatement	PTR_DECRYPT ( addr )	133:1:3280:3297	2678105	4	True				
ANR	2678137	CallExpression	PTR_DECRYPT ( addr )		2678105	0					
ANR	2678138	Callee	PTR_DECRYPT		2678105	0					
ANR	2678139	Identifier	PTR_DECRYPT		2678105	0					
ANR	2678140	ArgumentList	addr		2678105	1					
ANR	2678141	Argument	addr		2678105	0					
ANR	2678142	Identifier	addr		2678105	0					
ANR	2678143	ReturnStatement	return addr & PAGE_MASK ;	135:1:3301:3324	2678105	5	True				
ANR	2678144	BitAndExpression	addr & PAGE_MASK		2678105	0		&			
ANR	2678145	Identifier	addr		2678105	0					
ANR	2678146	Identifier	PAGE_MASK		2678105	1					
ANR	2678147	ReturnType	long		2678105	1					
ANR	2678148	Identifier	stack_start_addr		2678105	2					
ANR	2678149	ParameterList			2678105	3					
ANR	2678150	CFGEntryNode	ENTRY		2678105		True				
ANR	2678151	CFGExitNode	EXIT		2678105		True				
ANR	2678152	Symbol	JMP_BUF_SP		2678105						
ANR	2678153	Symbol	PAGE_MASK		2678105						
ANR	2678154	Symbol	env		2678105						
ANR	2678155	Symbol	addr		2678105						
ANR	2678156	Function	stack_end_addr	154:0:4072:4150							
ANR	2678157	FunctionDef	stack_end_addr ()		2678156	0					
ANR	2678158	CompoundStatement		156:0:4094:4150	2678156	0					
ANR	2678159	ReturnStatement	return ( ( ( long ) * environ ) & PAGE_MASK ) + PAGE_SIZE - 1 ;	157:1:4097:4148	2678156	0	True				
ANR	2678160	AdditiveExpression	( ( ( long ) * environ ) & PAGE_MASK ) + PAGE_SIZE - 1		2678156	0		+			
ANR	2678161	BitAndExpression	( ( long ) * environ ) & PAGE_MASK		2678156	0		&			
ANR	2678162	CastExpression	( long ) * environ		2678156	0					
ANR	2678163	CastTarget	long		2678156	0					
ANR	2678164	UnaryOperationExpression	* environ		2678156	1					
ANR	2678165	UnaryOperator	*		2678156	0					
ANR	2678166	Identifier	environ		2678156	1					
ANR	2678167	Identifier	PAGE_MASK		2678156	1					
ANR	2678168	AdditiveExpression	PAGE_SIZE - 1		2678156	1		-			
ANR	2678169	Identifier	PAGE_SIZE		2678156	0					
ANR	2678170	PrimaryExpression	1		2678156	1					
ANR	2678171	ReturnType	long		2678156	1					
ANR	2678172	Identifier	stack_end_addr		2678156	2					
ANR	2678173	ParameterList			2678156	3					
ANR	2678174	CFGEntryNode	ENTRY		2678156		True				
ANR	2678175	CFGExitNode	EXIT		2678156		True				
ANR	2678176	Symbol	* environ		2678156						
ANR	2678177	Symbol	PAGE_SIZE		2678156						
ANR	2678178	Symbol	PAGE_MASK		2678156						
ANR	2678179	Symbol	environ		2678156						
ANR	2678180	Function	patch_registers	164:0:4267:4344							
ANR	2678181	FunctionDef	patch_registers (void * generic_ptr)		2678180	0					
ANR	2678182	CompoundStatement		166:0:4309:4344	2678180	0					
ANR	2678183	ReturnType	void		2678180	1					
ANR	2678184	Identifier	patch_registers		2678180	2					
ANR	2678185	ParameterList	void * generic_ptr		2678180	3					
ANR	2678186	Parameter	void * generic_ptr	165:17:4289:4305	2678180	0	True				
ANR	2678187	ParameterType	void *		2678180	0					
ANR	2678188	Identifier	generic_ptr		2678180	1					
ANR	2678189	CFGEntryNode	ENTRY		2678180		True				
ANR	2678190	CFGExitNode	EXIT		2678180		True				
ANR	2678191	Symbol	generic_ptr		2678180						
ANR	2678192	ClassDef	map_t	177:0:4535:4652							
ANR	2678193	DeclStmt									
ANR	2678194	Decl							long	long	mem_start
ANR	2678195	DeclStmt									
ANR	2678196	Decl							long	long	mem_end
ANR	2678197	DeclStmt									
ANR	2678198	Decl							long	long	offset
ANR	2678199	DeclStmt									
ANR	2678200	Decl							int	int	prot
ANR	2678201	DeclStmt									
ANR	2678202	Decl							int	int	flags
ANR	2678203	DeclStmt									
ANR	2678204	Decl							int	int	inode
ANR	2678205	DeclStmt									
ANR	2678206	Decl							char	char	r
ANR	2678207	Decl							char	char	w
ANR	2678208	Decl							char	char	x
ANR	2678209	Decl							char	char	p
ANR	2678210	DeclStmt									
ANR	2678211	Decl							map_t	map_t [ MAX_SEGS ]	my_map
ANR	2678212	DeclStmt									
ANR	2678213	Decl							int	int	map_count
ANR	2678214	DeclStmt									
ANR	2678215	Decl							int	int	text_loc
ANR	2678216	Decl							int	int	stack_loc
ANR	2678217	Decl							int	int	heap_loc
ANR	2678218	Function	find_map_for_addr	191:0:4765:5178							
ANR	2678219	FunctionDef	find_map_for_addr (long addr)		2678218	0					
ANR	2678220	CompoundStatement		192:0:4798:5178	2678218	0					
ANR	2678221	IdentifierDeclStatement	int i ;	193:1:4801:4807	2678218	0	True				
ANR	2678222	IdentifierDecl	i		2678218	0					
ANR	2678223	IdentifierDeclType	int		2678218	0					
ANR	2678224	Identifier	i		2678218	1					
ANR	2678225	ForStatement	for ( i = 0 ; i < map_count ; i ++ )		2678218	1					
ANR	2678226	ForInit	i = 0 ;	196:5:4898:4901	2678218	0	True				
ANR	2678227	AssignmentExpression	i = 0		2678218	0		=			
ANR	2678228	Identifier	i		2678218	0					
ANR	2678229	PrimaryExpression	0		2678218	1					
ANR	2678230	Condition	i < map_count	196:9:4902:4912	2678218	1	True				
ANR	2678231	RelationalExpression	i < map_count		2678218	0		<			
ANR	2678232	Identifier	i		2678218	0					
ANR	2678233	Identifier	map_count		2678218	1					
ANR	2678234	PostIncDecOperationExpression	i ++	196:21:4914:4916	2678218	2	True				
ANR	2678235	Identifier	i		2678218	0					
ANR	2678236	IncDec	++		2678218	1					
ANR	2678237	CompoundStatement		5:26:120:120	2678218	3					
ANR	2678238	IfStatement	if ( addr >= my_map [ i ] . mem_start && addr <= my_map [ i ] . mem_end )		2678218	0					
ANR	2678239	Condition	addr >= my_map [ i ] . mem_start && addr <= my_map [ i ] . mem_end	198:5:5004:5059	2678218	0	True				
ANR	2678240	AndExpression	addr >= my_map [ i ] . mem_start && addr <= my_map [ i ] . mem_end		2678218	0		&&			
ANR	2678241	RelationalExpression	addr >= my_map [ i ] . mem_start		2678218	0		>=			
ANR	2678242	Identifier	addr		2678218	0					
ANR	2678243	MemberAccess	my_map [ i ] . mem_start		2678218	1					
ANR	2678244	ArrayIndexing	my_map [ i ]		2678218	0					
ANR	2678245	Identifier	my_map		2678218	0					
ANR	2678246	Identifier	i		2678218	1					
ANR	2678247	Identifier	mem_start		2678218	1					
ANR	2678248	RelationalExpression	addr <= my_map [ i ] . mem_end		2678218	1		<=			
ANR	2678249	Identifier	addr		2678218	0					
ANR	2678250	MemberAccess	my_map [ i ] . mem_end		2678218	1					
ANR	2678251	ArrayIndexing	my_map [ i ]		2678218	0					
ANR	2678252	Identifier	my_map		2678218	0					
ANR	2678253	Identifier	i		2678218	1					
ANR	2678254	Identifier	mem_end		2678218	1					
ANR	2678255	CompoundStatement		7:63:263:263	2678218	1					
ANR	2678256	ReturnStatement	return i ;	200:3:5110:5118	2678218	0	True				
ANR	2678257	Identifier	i		2678218	0					
ANR	2678258	ReturnStatement	return - 1 ;	204:1:5167:5176	2678218	2	True				
ANR	2678259	UnaryOperationExpression	- 1		2678218	0					
ANR	2678260	UnaryOperator	-		2678218	0					
ANR	2678261	PrimaryExpression	1		2678218	1					
ANR	2678262	ReturnType	int		2678218	1					
ANR	2678263	Identifier	find_map_for_addr		2678218	2					
ANR	2678264	ParameterList	long addr		2678218	3					
ANR	2678265	Parameter	long addr	191:22:4787:4795	2678218	0	True				
ANR	2678266	ParameterType	long		2678218	0					
ANR	2678267	Identifier	addr		2678218	1					
ANR	2678268	CFGEntryNode	ENTRY		2678218		True				
ANR	2678269	CFGExitNode	EXIT		2678218		True				
ANR	2678270	Symbol	* my_map		2678218						
ANR	2678271	Symbol	* i		2678218						
ANR	2678272	Symbol	my_map [ i ] . mem_start		2678218						
ANR	2678273	Symbol	i		2678218						
ANR	2678274	Symbol	addr		2678218						
ANR	2678275	Symbol	map_count		2678218						
ANR	2678276	Symbol	my_map		2678218						
ANR	2678277	Symbol	my_map [ i ] . mem_end		2678218						
ANR	2678278	Function	num_segments	208:0:5182:6892							
ANR	2678279	FunctionDef	num_segments ()		2678278	0					
ANR	2678280	CompoundStatement		209:0:5201:6892	2678278	0					
ANR	2678281	IdentifierDeclStatement	FILE * pfs ;	210:1:5204:5213	2678278	0	True				
ANR	2678282	IdentifierDecl	* pfs		2678278	0					
ANR	2678283	IdentifierDeclType	FILE *		2678278	0					
ANR	2678284	Identifier	pfs		2678278	1					
ANR	2678285	IdentifierDeclStatement	char proc [ 128 ] ;	211:1:5216:5230	2678278	1	True				
ANR	2678286	IdentifierDecl	proc [ 128 ]		2678278	0					
ANR	2678287	IdentifierDeclType	char [ 128 ]		2678278	0					
ANR	2678288	Identifier	proc		2678278	1					
ANR	2678289	PrimaryExpression	128		2678278	2					
ANR	2678290	IdentifierDeclStatement	"char rperm , wperm , xperm , priv ;"	212:1:5233:5263	2678278	2	True				
ANR	2678291	IdentifierDecl	rperm		2678278	0					
ANR	2678292	IdentifierDeclType	char		2678278	0					
ANR	2678293	Identifier	rperm		2678278	1					
ANR	2678294	IdentifierDecl	wperm		2678278	1					
ANR	2678295	IdentifierDeclType	char		2678278	0					
ANR	2678296	Identifier	wperm		2678278	1					
ANR	2678297	IdentifierDecl	xperm		2678278	2					
ANR	2678298	IdentifierDeclType	char		2678278	0					
ANR	2678299	Identifier	xperm		2678278	1					
ANR	2678300	IdentifierDecl	priv		2678278	3					
ANR	2678301	IdentifierDeclType	char		2678278	0					
ANR	2678302	Identifier	priv		2678278	1					
ANR	2678303	IdentifierDeclStatement	int scm ;	213:1:5266:5274	2678278	3	True				
ANR	2678304	IdentifierDecl	scm		2678278	0					
ANR	2678305	IdentifierDeclType	int		2678278	0					
ANR	2678306	Identifier	scm		2678278	1					
ANR	2678307	IdentifierDeclStatement	int num_seg = 0 ;	214:1:5277:5291	2678278	4	True				
ANR	2678308	IdentifierDecl	num_seg = 0		2678278	0					
ANR	2678309	IdentifierDeclType	int		2678278	0					
ANR	2678310	Identifier	num_seg		2678278	1					
ANR	2678311	AssignmentExpression	num_seg = 0		2678278	2		=			
ANR	2678312	Identifier	num_seg		2678278	0					
ANR	2678313	PrimaryExpression	0		2678278	1					
ANR	2678314	IdentifierDeclStatement	"int major , minor , inode ;"	215:1:5294:5318	2678278	5	True				
ANR	2678315	IdentifierDecl	major		2678278	0					
ANR	2678316	IdentifierDeclType	int		2678278	0					
ANR	2678317	Identifier	major		2678278	1					
ANR	2678318	IdentifierDecl	minor		2678278	1					
ANR	2678319	IdentifierDeclType	int		2678278	0					
ANR	2678320	Identifier	minor		2678278	1					
ANR	2678321	IdentifierDecl	inode		2678278	2					
ANR	2678322	IdentifierDeclType	int		2678278	0					
ANR	2678323	Identifier	inode		2678278	1					
ANR	2678324	IdentifierDeclStatement	"int mem_start , mem_end ;"	216:1:5321:5344	2678278	6	True				
ANR	2678325	IdentifierDecl	mem_start		2678278	0					
ANR	2678326	IdentifierDeclType	int		2678278	0					
ANR	2678327	Identifier	mem_start		2678278	1					
ANR	2678328	IdentifierDecl	mem_end		2678278	1					
ANR	2678329	IdentifierDeclType	int		2678278	0					
ANR	2678330	Identifier	mem_end		2678278	1					
ANR	2678331	IdentifierDeclStatement	int offset ;	217:1:5347:5358	2678278	7	True				
ANR	2678332	IdentifierDecl	offset		2678278	0					
ANR	2678333	IdentifierDeclType	int		2678278	0					
ANR	2678334	Identifier	offset		2678278	1					
ANR	2678335	IdentifierDeclStatement	"char e , f ;"	218:1:5361:5370	2678278	8	True				
ANR	2678336	IdentifierDecl	e		2678278	0					
ANR	2678337	IdentifierDeclType	char		2678278	0					
ANR	2678338	Identifier	e		2678278	1					
ANR	2678339	IdentifierDecl	f		2678278	1					
ANR	2678340	IdentifierDeclType	char		2678278	0					
ANR	2678341	Identifier	f		2678278	1					
ANR	2678342	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	221:1:5375:5416	2678278	9	True				
ANR	2678343	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2678278	0		=			
ANR	2678344	Identifier	scm		2678278	0					
ANR	2678345	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2678278	1					
ANR	2678346	Callee	SetSyscalls		2678278	0					
ANR	2678347	Identifier	SetSyscalls		2678278	0					
ANR	2678348	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2678278	1					
ANR	2678349	Argument	SYS_LOCAL | SYS_UNMAPPED		2678278	0					
ANR	2678350	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2678278	0		|			
ANR	2678351	Identifier	SYS_LOCAL		2678278	0					
ANR	2678352	Identifier	SYS_UNMAPPED		2678278	1					
ANR	2678353	ExpressionStatement	"sprintf ( proc , ""/proc/%d/maps"" , syscall ( SYS_getpid ) )"	223:1:5420:5471	2678278	10	True				
ANR	2678354	CallExpression	"sprintf ( proc , ""/proc/%d/maps"" , syscall ( SYS_getpid ) )"		2678278	0					
ANR	2678355	Callee	sprintf		2678278	0					
ANR	2678356	Identifier	sprintf		2678278	0					
ANR	2678357	ArgumentList	proc		2678278	1					
ANR	2678358	Argument	proc		2678278	0					
ANR	2678359	Identifier	proc		2678278	0					
ANR	2678360	Argument	"""/proc/%d/maps"""		2678278	1					
ANR	2678361	PrimaryExpression	"""/proc/%d/maps"""		2678278	0					
ANR	2678362	Argument	syscall ( SYS_getpid )		2678278	2					
ANR	2678363	CallExpression	syscall ( SYS_getpid )		2678278	0					
ANR	2678364	Callee	syscall		2678278	0					
ANR	2678365	Identifier	syscall		2678278	0					
ANR	2678366	ArgumentList	SYS_getpid		2678278	1					
ANR	2678367	Argument	SYS_getpid		2678278	0					
ANR	2678368	Identifier	SYS_getpid		2678278	0					
ANR	2678369	ExpressionStatement	"pfs = safe_fopen_wrapper ( proc , ""r"" )"	224:1:5474:5507	2678278	11	True				
ANR	2678370	AssignmentExpression	"pfs = safe_fopen_wrapper ( proc , ""r"" )"		2678278	0		=			
ANR	2678371	Identifier	pfs		2678278	0					
ANR	2678372	CallExpression	"safe_fopen_wrapper ( proc , ""r"" )"		2678278	1					
ANR	2678373	Callee	safe_fopen_wrapper		2678278	0					
ANR	2678374	Identifier	safe_fopen_wrapper		2678278	0					
ANR	2678375	ArgumentList	proc		2678278	1					
ANR	2678376	Argument	proc		2678278	0					
ANR	2678377	Identifier	proc		2678278	0					
ANR	2678378	Argument	"""r"""		2678278	1					
ANR	2678379	PrimaryExpression	"""r"""		2678278	0					
ANR	2678380	IfStatement	if ( ! pfs )		2678278	12					
ANR	2678381	Condition	! pfs	225:4:5513:5516	2678278	0	True				
ANR	2678382	UnaryOperationExpression	! pfs		2678278	0					
ANR	2678383	UnaryOperator	!		2678278	0					
ANR	2678384	Identifier	pfs		2678278	1					
ANR	2678385	CompoundStatement		17:10:317:317	2678278	1					
ANR	2678386	ExpressionStatement	SetSyscalls ( scm )	226:2:5523:5539	2678278	0	True				
ANR	2678387	CallExpression	SetSyscalls ( scm )		2678278	0					
ANR	2678388	Callee	SetSyscalls		2678278	0					
ANR	2678389	Identifier	SetSyscalls		2678278	0					
ANR	2678390	ArgumentList	scm		2678278	1					
ANR	2678391	Argument	scm		2678278	0					
ANR	2678392	Identifier	scm		2678278	0					
ANR	2678393	ReturnStatement	return - 1 ;	227:2:5543:5552	2678278	1	True				
ANR	2678394	UnaryOperationExpression	- 1		2678278	0					
ANR	2678395	UnaryOperator	-		2678278	0					
ANR	2678396	PrimaryExpression	1		2678278	1					
ANR	2678397	WhileStatement	while ( 1 )		2678278	13					
ANR	2678398	Condition	1	231:7:5627:5627	2678278	0	True				
ANR	2678399	PrimaryExpression	1		2678278	0					
ANR	2678400	CompoundStatement		24:2:432:580	2678278	1					
ANR	2678401	IdentifierDeclStatement	"int result = fscanf ( pfs , ""%x-%x %c%c%c%c %x %d:%d %d\\n"" , & mem_start , & mem_end , & rperm , & wperm , & xperm , & priv , & offset , & major , & minor , & inode ) ;"	232:2:5634:5782	2678278	0	True				
ANR	2678402	IdentifierDecl	"result = fscanf ( pfs , ""%x-%x %c%c%c%c %x %d:%d %d\\n"" , & mem_start , & mem_end , & rperm , & wperm , & xperm , & priv , & offset , & major , & minor , & inode )"		2678278	0					
ANR	2678403	IdentifierDeclType	int		2678278	0					
ANR	2678404	Identifier	result		2678278	1					
ANR	2678405	AssignmentExpression	"result = fscanf ( pfs , ""%x-%x %c%c%c%c %x %d:%d %d\\n"" , & mem_start , & mem_end , & rperm , & wperm , & xperm , & priv , & offset , & major , & minor , & inode )"		2678278	2		=			
ANR	2678406	Identifier	result		2678278	0					
ANR	2678407	CallExpression	"fscanf ( pfs , ""%x-%x %c%c%c%c %x %d:%d %d\\n"" , & mem_start , & mem_end , & rperm , & wperm , & xperm , & priv , & offset , & major , & minor , & inode )"		2678278	1					
ANR	2678408	Callee	fscanf		2678278	0					
ANR	2678409	Identifier	fscanf		2678278	0					
ANR	2678410	ArgumentList	pfs		2678278	1					
ANR	2678411	Argument	pfs		2678278	0					
ANR	2678412	Identifier	pfs		2678278	0					
ANR	2678413	Argument	"""%x-%x %c%c%c%c %x %d:%d %d\\n"""		2678278	1					
ANR	2678414	PrimaryExpression	"""%x-%x %c%c%c%c %x %d:%d %d\\n"""		2678278	0					
ANR	2678415	Argument	& mem_start		2678278	2					
ANR	2678416	UnaryOperationExpression	& mem_start		2678278	0					
ANR	2678417	UnaryOperator	&		2678278	0					
ANR	2678418	Identifier	mem_start		2678278	1					
ANR	2678419	Argument	& mem_end		2678278	3					
ANR	2678420	UnaryOperationExpression	& mem_end		2678278	0					
ANR	2678421	UnaryOperator	&		2678278	0					
ANR	2678422	Identifier	mem_end		2678278	1					
ANR	2678423	Argument	& rperm		2678278	4					
ANR	2678424	UnaryOperationExpression	& rperm		2678278	0					
ANR	2678425	UnaryOperator	&		2678278	0					
ANR	2678426	Identifier	rperm		2678278	1					
ANR	2678427	Argument	& wperm		2678278	5					
ANR	2678428	UnaryOperationExpression	& wperm		2678278	0					
ANR	2678429	UnaryOperator	&		2678278	0					
ANR	2678430	Identifier	wperm		2678278	1					
ANR	2678431	Argument	& xperm		2678278	6					
ANR	2678432	UnaryOperationExpression	& xperm		2678278	0					
ANR	2678433	UnaryOperator	&		2678278	0					
ANR	2678434	Identifier	xperm		2678278	1					
ANR	2678435	Argument	& priv		2678278	7					
ANR	2678436	UnaryOperationExpression	& priv		2678278	0					
ANR	2678437	UnaryOperator	&		2678278	0					
ANR	2678438	Identifier	priv		2678278	1					
ANR	2678439	Argument	& offset		2678278	8					
ANR	2678440	UnaryOperationExpression	& offset		2678278	0					
ANR	2678441	UnaryOperator	&		2678278	0					
ANR	2678442	Identifier	offset		2678278	1					
ANR	2678443	Argument	& major		2678278	9					
ANR	2678444	UnaryOperationExpression	& major		2678278	0					
ANR	2678445	UnaryOperator	&		2678278	0					
ANR	2678446	Identifier	major		2678278	1					
ANR	2678447	Argument	& minor		2678278	10					
ANR	2678448	UnaryOperationExpression	& minor		2678278	0					
ANR	2678449	UnaryOperator	&		2678278	0					
ANR	2678450	Identifier	minor		2678278	1					
ANR	2678451	Argument	& inode		2678278	11					
ANR	2678452	UnaryOperationExpression	& inode		2678278	0					
ANR	2678453	UnaryOperator	&		2678278	0					
ANR	2678454	Identifier	inode		2678278	1					
ANR	2678455	IfStatement	if ( result != 10 )		2678278	1					
ANR	2678456	Condition	result != 10	236:5:5790:5799	2678278	0	True				
ANR	2678457	EqualityExpression	result != 10		2678278	0		!=			
ANR	2678458	Identifier	result		2678278	0					
ANR	2678459	PrimaryExpression	10		2678278	1					
ANR	2678460	BreakStatement	break ;	236:17:5802:5807	2678278	1	True				
ANR	2678461	ExpressionStatement	my_map [ num_seg ] . mem_start = mem_start	241:2:5956:5991	2678278	2	True				
ANR	2678462	AssignmentExpression	my_map [ num_seg ] . mem_start = mem_start		2678278	0		=			
ANR	2678463	MemberAccess	my_map [ num_seg ] . mem_start		2678278	0					
ANR	2678464	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678465	Identifier	my_map		2678278	0					
ANR	2678466	Identifier	num_seg		2678278	1					
ANR	2678467	Identifier	mem_start		2678278	1					
ANR	2678468	Identifier	mem_start		2678278	1					
ANR	2678469	ExpressionStatement	my_map [ num_seg ] . mem_end = mem_end - 1	242:2:5995:6028	2678278	3	True				
ANR	2678470	AssignmentExpression	my_map [ num_seg ] . mem_end = mem_end - 1		2678278	0		=			
ANR	2678471	MemberAccess	my_map [ num_seg ] . mem_end		2678278	0					
ANR	2678472	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678473	Identifier	my_map		2678278	0					
ANR	2678474	Identifier	num_seg		2678278	1					
ANR	2678475	Identifier	mem_end		2678278	1					
ANR	2678476	AdditiveExpression	mem_end - 1		2678278	1		-			
ANR	2678477	Identifier	mem_end		2678278	0					
ANR	2678478	PrimaryExpression	1		2678278	1					
ANR	2678479	IfStatement	if ( my_map [ num_seg ] . mem_end - my_map [ num_seg ] . mem_start == 0x34000 - 1 )		2678278	4					
ANR	2678480	Condition	my_map [ num_seg ] . mem_end - my_map [ num_seg ] . mem_start == 0x34000 - 1	244:5:6058:6117	2678278	0	True				
ANR	2678481	EqualityExpression	my_map [ num_seg ] . mem_end - my_map [ num_seg ] . mem_start == 0x34000 - 1		2678278	0		==			
ANR	2678482	AdditiveExpression	my_map [ num_seg ] . mem_end - my_map [ num_seg ] . mem_start		2678278	0		-			
ANR	2678483	MemberAccess	my_map [ num_seg ] . mem_end		2678278	0					
ANR	2678484	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678485	Identifier	my_map		2678278	0					
ANR	2678486	Identifier	num_seg		2678278	1					
ANR	2678487	Identifier	mem_end		2678278	1					
ANR	2678488	MemberAccess	my_map [ num_seg ] . mem_start		2678278	1					
ANR	2678489	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678490	Identifier	my_map		2678278	0					
ANR	2678491	Identifier	num_seg		2678278	1					
ANR	2678492	Identifier	mem_start		2678278	1					
ANR	2678493	AdditiveExpression	0x34000 - 1		2678278	1		-			
ANR	2678494	PrimaryExpression	0x34000		2678278	0					
ANR	2678495	PrimaryExpression	1		2678278	1					
ANR	2678496	ExpressionStatement	my_map [ num_seg ] . mem_end = my_map [ num_seg ] . mem_start + 0x320ff	245:3:6123:6180	2678278	1	True				
ANR	2678497	AssignmentExpression	my_map [ num_seg ] . mem_end = my_map [ num_seg ] . mem_start + 0x320ff		2678278	0		=			
ANR	2678498	MemberAccess	my_map [ num_seg ] . mem_end		2678278	0					
ANR	2678499	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678500	Identifier	my_map		2678278	0					
ANR	2678501	Identifier	num_seg		2678278	1					
ANR	2678502	Identifier	mem_end		2678278	1					
ANR	2678503	AdditiveExpression	my_map [ num_seg ] . mem_start + 0x320ff		2678278	1		+			
ANR	2678504	MemberAccess	my_map [ num_seg ] . mem_start		2678278	0					
ANR	2678505	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678506	Identifier	my_map		2678278	0					
ANR	2678507	Identifier	num_seg		2678278	1					
ANR	2678508	Identifier	mem_start		2678278	1					
ANR	2678509	PrimaryExpression	0x320ff		2678278	1					
ANR	2678510	ExpressionStatement	my_map [ num_seg ] . offset = offset	246:2:6184:6213	2678278	5	True				
ANR	2678511	AssignmentExpression	my_map [ num_seg ] . offset = offset		2678278	0		=			
ANR	2678512	MemberAccess	my_map [ num_seg ] . offset		2678278	0					
ANR	2678513	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678514	Identifier	my_map		2678278	0					
ANR	2678515	Identifier	num_seg		2678278	1					
ANR	2678516	Identifier	offset		2678278	1					
ANR	2678517	Identifier	offset		2678278	1					
ANR	2678518	ExpressionStatement	my_map [ num_seg ] . prot = ( rperm == 'r' ? PROT_READ : 0 ) | ( wperm == 'w' ? PROT_WRITE : 0 ) | ( xperm == 'x' ? PROT_EXEC : 0 )	247:2:6217:6333	2678278	6	True				
ANR	2678519	AssignmentExpression	my_map [ num_seg ] . prot = ( rperm == 'r' ? PROT_READ : 0 ) | ( wperm == 'w' ? PROT_WRITE : 0 ) | ( xperm == 'x' ? PROT_EXEC : 0 )		2678278	0		=			
ANR	2678520	MemberAccess	my_map [ num_seg ] . prot		2678278	0					
ANR	2678521	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678522	Identifier	my_map		2678278	0					
ANR	2678523	Identifier	num_seg		2678278	1					
ANR	2678524	Identifier	prot		2678278	1					
ANR	2678525	InclusiveOrExpression	( rperm == 'r' ? PROT_READ : 0 ) | ( wperm == 'w' ? PROT_WRITE : 0 ) | ( xperm == 'x' ? PROT_EXEC : 0 )		2678278	1		|			
ANR	2678526	ConditionalExpression	rperm == 'r' ? PROT_READ : 0		2678278	0					
ANR	2678527	Condition	rperm == 'r'		2678278	0					
ANR	2678528	EqualityExpression	rperm == 'r'		2678278	0		==			
ANR	2678529	Identifier	rperm		2678278	0					
ANR	2678530	PrimaryExpression	'r'		2678278	1					
ANR	2678531	Identifier	PROT_READ		2678278	1					
ANR	2678532	PrimaryExpression	0		2678278	2					
ANR	2678533	InclusiveOrExpression	( wperm == 'w' ? PROT_WRITE : 0 ) | ( xperm == 'x' ? PROT_EXEC : 0 )		2678278	1		|			
ANR	2678534	ConditionalExpression	wperm == 'w' ? PROT_WRITE : 0		2678278	0					
ANR	2678535	Condition	wperm == 'w'		2678278	0					
ANR	2678536	EqualityExpression	wperm == 'w'		2678278	0		==			
ANR	2678537	Identifier	wperm		2678278	0					
ANR	2678538	PrimaryExpression	'w'		2678278	1					
ANR	2678539	Identifier	PROT_WRITE		2678278	1					
ANR	2678540	PrimaryExpression	0		2678278	2					
ANR	2678541	ConditionalExpression	xperm == 'x' ? PROT_EXEC : 0		2678278	1					
ANR	2678542	Condition	xperm == 'x'		2678278	0					
ANR	2678543	EqualityExpression	xperm == 'x'		2678278	0		==			
ANR	2678544	Identifier	xperm		2678278	0					
ANR	2678545	PrimaryExpression	'x'		2678278	1					
ANR	2678546	Identifier	PROT_EXEC		2678278	1					
ANR	2678547	PrimaryExpression	0		2678278	2					
ANR	2678548	Statement	my_map	250:2:6337:6342	2678278	7	True				
ANR	2678549	Statement	[	250:8:6343:6343	2678278	8	True				
ANR	2678550	Statement	num_seg	250:9:6344:6350	2678278	9	True				
ANR	2678551	Statement	]	250:16:6351:6351	2678278	10	True				
ANR	2678552	Statement	.	250:17:6352:6352	2678278	11	True				
ANR	2678553	Statement	flags	250:18:6353:6357	2678278	12	True				
ANR	2678554	Statement	=	250:23:6358:6358	2678278	13	True				
ANR	2678555	Statement	(	250:24:6359:6359	2678278	14	True				
ANR	2678556	Statement	priv	250:25:6360:6363	2678278	15	True				
ANR	2678557	Statement	==	250:29:6364:6365	2678278	16	True				
ANR	2678558	Statement	'p'	250:31:6366:6368	2678278	17	True				
ANR	2678559	Statement	?	250:34:6369:6369	2678278	18	True				
ANR	2678560	Statement	:	250:35:6370:6370	2678278	19	True				
ANR	2678561	Statement	0	250:36:6371:6371	2678278	20	True				
ANR	2678562	Statement	)	250:37:6372:6372	2678278	21	True				
ANR	2678563	ExpressionStatement		250:38:6373:6373	2678278	22	True				
ANR	2678564	ExpressionStatement	my_map [ num_seg ] . inode = inode	251:2:6377:6404	2678278	23	True				
ANR	2678565	AssignmentExpression	my_map [ num_seg ] . inode = inode		2678278	0		=			
ANR	2678566	MemberAccess	my_map [ num_seg ] . inode		2678278	0					
ANR	2678567	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678568	Identifier	my_map		2678278	0					
ANR	2678569	Identifier	num_seg		2678278	1					
ANR	2678570	Identifier	inode		2678278	1					
ANR	2678571	Identifier	inode		2678278	1					
ANR	2678572	ExpressionStatement	my_map [ num_seg ] . r = rperm	252:2:6408:6431	2678278	24	True				
ANR	2678573	AssignmentExpression	my_map [ num_seg ] . r = rperm		2678278	0		=			
ANR	2678574	MemberAccess	my_map [ num_seg ] . r		2678278	0					
ANR	2678575	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678576	Identifier	my_map		2678278	0					
ANR	2678577	Identifier	num_seg		2678278	1					
ANR	2678578	Identifier	r		2678278	1					
ANR	2678579	Identifier	rperm		2678278	1					
ANR	2678580	ExpressionStatement	my_map [ num_seg ] . w = wperm	253:2:6435:6458	2678278	25	True				
ANR	2678581	AssignmentExpression	my_map [ num_seg ] . w = wperm		2678278	0		=			
ANR	2678582	MemberAccess	my_map [ num_seg ] . w		2678278	0					
ANR	2678583	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678584	Identifier	my_map		2678278	0					
ANR	2678585	Identifier	num_seg		2678278	1					
ANR	2678586	Identifier	w		2678278	1					
ANR	2678587	Identifier	wperm		2678278	1					
ANR	2678588	ExpressionStatement	my_map [ num_seg ] . x = xperm	254:2:6462:6485	2678278	26	True				
ANR	2678589	AssignmentExpression	my_map [ num_seg ] . x = xperm		2678278	0		=			
ANR	2678590	MemberAccess	my_map [ num_seg ] . x		2678278	0					
ANR	2678591	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678592	Identifier	my_map		2678278	0					
ANR	2678593	Identifier	num_seg		2678278	1					
ANR	2678594	Identifier	x		2678278	1					
ANR	2678595	Identifier	xperm		2678278	1					
ANR	2678596	ExpressionStatement	my_map [ num_seg ] . p = priv	255:2:6489:6511	2678278	27	True				
ANR	2678597	AssignmentExpression	my_map [ num_seg ] . p = priv		2678278	0		=			
ANR	2678598	MemberAccess	my_map [ num_seg ] . p		2678278	0					
ANR	2678599	ArrayIndexing	my_map [ num_seg ]		2678278	0					
ANR	2678600	Identifier	my_map		2678278	0					
ANR	2678601	Identifier	num_seg		2678278	1					
ANR	2678602	Identifier	p		2678278	1					
ANR	2678603	Identifier	priv		2678278	1					
ANR	2678604	ExpressionStatement	num_seg ++	256:2:6515:6524	2678278	28	True				
ANR	2678605	PostIncDecOperationExpression	num_seg ++		2678278	0					
ANR	2678606	Identifier	num_seg		2678278	0					
ANR	2678607	IncDec	++		2678278	1					
ANR	2678608	ExpressionStatement	fclose ( pfs )	258:1:6530:6541	2678278	14	True				
ANR	2678609	CallExpression	fclose ( pfs )		2678278	0					
ANR	2678610	Callee	fclose		2678278	0					
ANR	2678611	Identifier	fclose		2678278	0					
ANR	2678612	ArgumentList	pfs		2678278	1					
ANR	2678613	Argument	pfs		2678278	0					
ANR	2678614	Identifier	pfs		2678278	0					
ANR	2678615	ExpressionStatement	map_count = num_seg	260:1:6545:6562	2678278	15	True				
ANR	2678616	AssignmentExpression	map_count = num_seg		2678278	0		=			
ANR	2678617	Identifier	map_count		2678278	0					
ANR	2678618	Identifier	num_seg		2678278	1					
ANR	2678619	ExpressionStatement	text_loc = find_map_for_addr ( ( long ) num_segments )	261:1:6565:6611	2678278	16	True				
ANR	2678620	AssignmentExpression	text_loc = find_map_for_addr ( ( long ) num_segments )		2678278	0		=			
ANR	2678621	Identifier	text_loc		2678278	0					
ANR	2678622	CallExpression	find_map_for_addr ( ( long ) num_segments )		2678278	1					
ANR	2678623	Callee	find_map_for_addr		2678278	0					
ANR	2678624	Identifier	find_map_for_addr		2678278	0					
ANR	2678625	ArgumentList	( long ) num_segments		2678278	1					
ANR	2678626	Argument	( long ) num_segments		2678278	0					
ANR	2678627	CastExpression	( long ) num_segments		2678278	0					
ANR	2678628	CastTarget	long		2678278	0					
ANR	2678629	Identifier	num_segments		2678278	1					
ANR	2678630	IfStatement	if ( StackGrowsDown ( ) )		2678278	17					
ANR	2678631	Condition	StackGrowsDown ( )	262:4:6617:6632	2678278	0	True				
ANR	2678632	CallExpression	StackGrowsDown ( )		2678278	0					
ANR	2678633	Callee	StackGrowsDown		2678278	0					
ANR	2678634	Identifier	StackGrowsDown		2678278	0					
ANR	2678635	ArgumentList			2678278	1					
ANR	2678636	ExpressionStatement	stack_loc = find_map_for_addr ( ( long ) stack_end_addr ( ) )	263:2:6637:6688	2678278	1	True				
ANR	2678637	AssignmentExpression	stack_loc = find_map_for_addr ( ( long ) stack_end_addr ( ) )		2678278	0		=			
ANR	2678638	Identifier	stack_loc		2678278	0					
ANR	2678639	CallExpression	find_map_for_addr ( ( long ) stack_end_addr ( ) )		2678278	1					
ANR	2678640	Callee	find_map_for_addr		2678278	0					
ANR	2678641	Identifier	find_map_for_addr		2678278	0					
ANR	2678642	ArgumentList	( long ) stack_end_addr ( )		2678278	1					
ANR	2678643	Argument	( long ) stack_end_addr ( )		2678278	0					
ANR	2678644	CastExpression	( long ) stack_end_addr ( )		2678278	0					
ANR	2678645	CastTarget	long		2678278	0					
ANR	2678646	CallExpression	stack_end_addr ( )		2678278	1					
ANR	2678647	Callee	stack_end_addr		2678278	0					
ANR	2678648	Identifier	stack_end_addr		2678278	0					
ANR	2678649	ArgumentList			2678278	1					
ANR	2678650	ElseStatement	else		2678278	0					
ANR	2678651	ExpressionStatement	stack_loc = find_map_for_addr ( ( long ) stack_start_addr ( ) )	265:2:6698:6751	2678278	0	True				
ANR	2678652	AssignmentExpression	stack_loc = find_map_for_addr ( ( long ) stack_start_addr ( ) )		2678278	0		=			
ANR	2678653	Identifier	stack_loc		2678278	0					
ANR	2678654	CallExpression	find_map_for_addr ( ( long ) stack_start_addr ( ) )		2678278	1					
ANR	2678655	Callee	find_map_for_addr		2678278	0					
ANR	2678656	Identifier	find_map_for_addr		2678278	0					
ANR	2678657	ArgumentList	( long ) stack_start_addr ( )		2678278	1					
ANR	2678658	Argument	( long ) stack_start_addr ( )		2678278	0					
ANR	2678659	CastExpression	( long ) stack_start_addr ( )		2678278	0					
ANR	2678660	CastTarget	long		2678278	0					
ANR	2678661	CallExpression	stack_start_addr ( )		2678278	1					
ANR	2678662	Callee	stack_start_addr		2678278	0					
ANR	2678663	Identifier	stack_start_addr		2678278	0					
ANR	2678664	ArgumentList			2678278	1					
ANR	2678665	ExpressionStatement	heap_loc = find_map_for_addr ( ( long ) data_start_addr ( ) )	266:1:6754:6805	2678278	18	True				
ANR	2678666	AssignmentExpression	heap_loc = find_map_for_addr ( ( long ) data_start_addr ( ) )		2678278	0		=			
ANR	2678667	Identifier	heap_loc		2678278	0					
ANR	2678668	CallExpression	find_map_for_addr ( ( long ) data_start_addr ( ) )		2678278	1					
ANR	2678669	Callee	find_map_for_addr		2678278	0					
ANR	2678670	Identifier	find_map_for_addr		2678278	0					
ANR	2678671	ArgumentList	( long ) data_start_addr ( )		2678278	1					
ANR	2678672	Argument	( long ) data_start_addr ( )		2678278	0					
ANR	2678673	CastExpression	( long ) data_start_addr ( )		2678278	0					
ANR	2678674	CastTarget	long		2678278	0					
ANR	2678675	CallExpression	data_start_addr ( )		2678278	1					
ANR	2678676	Callee	data_start_addr		2678278	0					
ANR	2678677	Identifier	data_start_addr		2678278	0					
ANR	2678678	ArgumentList			2678278	1					
ANR	2678679	ExpressionStatement	SetSyscalls ( scm )	269:1:6857:6873	2678278	19	True				
ANR	2678680	CallExpression	SetSyscalls ( scm )		2678278	0					
ANR	2678681	Callee	SetSyscalls		2678278	0					
ANR	2678682	Identifier	SetSyscalls		2678278	0					
ANR	2678683	ArgumentList	scm		2678278	1					
ANR	2678684	Argument	scm		2678278	0					
ANR	2678685	Identifier	scm		2678278	0					
ANR	2678686	ReturnStatement	return num_seg ;	270:1:6876:6890	2678278	20	True				
ANR	2678687	Identifier	num_seg		2678278	0					
ANR	2678688	ReturnType	int		2678278	1					
ANR	2678689	Identifier	num_segments		2678278	2					
ANR	2678690	ParameterList			2678278	3					
ANR	2678691	CFGEntryNode	ENTRY		2678278		True				
ANR	2678692	CFGExitNode	EXIT		2678278		True				
ANR	2678693	Symbol	minor		2678278						
ANR	2678694	Symbol	stack_end_addr		2678278						
ANR	2678695	Symbol	SYS_UNMAPPED		2678278						
ANR	2678696	Symbol	* num_seg		2678278						
ANR	2678697	Symbol	stack_loc		2678278						
ANR	2678698	Symbol	inode		2678278						
ANR	2678699	Symbol	major		2678278						
ANR	2678700	Symbol	PROT_WRITE		2678278						
ANR	2678701	Symbol	rperm		2678278						
ANR	2678702	Symbol	priv		2678278						
ANR	2678703	Symbol	scm		2678278						
ANR	2678704	Symbol	my_map [ num_seg ] . x		2678278						
ANR	2678705	Symbol	text_loc		2678278						
ANR	2678706	Symbol	my_map [ num_seg ] . w		2678278						
ANR	2678707	Symbol	data_start_addr		2678278						
ANR	2678708	Symbol	map_count		2678278						
ANR	2678709	Symbol	my_map		2678278						
ANR	2678710	Symbol	my_map [ num_seg ] . r		2678278						
ANR	2678711	Symbol	offset		2678278						
ANR	2678712	Symbol	my_map [ num_seg ] . p		2678278						
ANR	2678713	Symbol	wperm		2678278						
ANR	2678714	Symbol	& offset		2678278						
ANR	2678715	Symbol	& priv		2678278						
ANR	2678716	Symbol	my_map [ num_seg ] . mem_end		2678278						
ANR	2678717	Symbol	xperm		2678278						
ANR	2678718	Symbol	PROT_EXEC		2678278						
ANR	2678719	Symbol	PROT_READ		2678278						
ANR	2678720	Symbol	& rperm		2678278						
ANR	2678721	Symbol	find_map_for_addr		2678278						
ANR	2678722	Symbol	& mem_end		2678278						
ANR	2678723	Symbol	StackGrowsDown		2678278						
ANR	2678724	Symbol	& inode		2678278						
ANR	2678725	Symbol	SYS_LOCAL		2678278						
ANR	2678726	Symbol	& mem_start		2678278						
ANR	2678727	Symbol	my_map [ num_seg ] . mem_start		2678278						
ANR	2678728	Symbol	pfs		2678278						
ANR	2678729	Symbol	stack_start_addr		2678278						
ANR	2678730	Symbol	syscall		2678278						
ANR	2678731	Symbol	heap_loc		2678278						
ANR	2678732	Symbol	& minor		2678278						
ANR	2678733	Symbol	& major		2678278						
ANR	2678734	Symbol	num_segments		2678278						
ANR	2678735	Symbol	mem_start		2678278						
ANR	2678736	Symbol	result		2678278						
ANR	2678737	Symbol	SYS_getpid		2678278						
ANR	2678738	Symbol	SetSyscalls		2678278						
ANR	2678739	Symbol	num_seg		2678278						
ANR	2678740	Symbol	my_map [ num_seg ] . prot		2678278						
ANR	2678741	Symbol	proc		2678278						
ANR	2678742	Symbol	safe_fopen_wrapper		2678278						
ANR	2678743	Symbol	& wperm		2678278						
ANR	2678744	Symbol	e		2678278						
ANR	2678745	Symbol	f		2678278						
ANR	2678746	Symbol	* my_map		2678278						
ANR	2678747	Symbol	fscanf		2678278						
ANR	2678748	Symbol	my_map [ num_seg ] . offset		2678278						
ANR	2678749	Symbol	& xperm		2678278						
ANR	2678750	Symbol	mem_end		2678278						
ANR	2678751	Symbol	my_map [ num_seg ] . inode		2678278						
ANR	2678752	Function	segment_bounds	273:0:6895:7360							
ANR	2678753	FunctionDef	"segment_bounds (int seg_num , RAW_ADDR & start , RAW_ADDR & end , int & prot)"		2678752	0					
ANR	2678754	CompoundStatement		274:0:6970:7360	2678752	0					
ANR	2678755	ExpressionStatement	start = ( long ) my_map [ seg_num ] . mem_start	275:1:6973:7010	2678752	0	True				
ANR	2678756	AssignmentExpression	start = ( long ) my_map [ seg_num ] . mem_start		2678752	0		=			
ANR	2678757	Identifier	start		2678752	0					
ANR	2678758	CastExpression	( long ) my_map [ seg_num ] . mem_start		2678752	1					
ANR	2678759	CastTarget	long		2678752	0					
ANR	2678760	MemberAccess	my_map [ seg_num ] . mem_start		2678752	1					
ANR	2678761	ArrayIndexing	my_map [ seg_num ]		2678752	0					
ANR	2678762	Identifier	my_map		2678752	0					
ANR	2678763	Identifier	seg_num		2678752	1					
ANR	2678764	Identifier	mem_start		2678752	1					
ANR	2678765	ExpressionStatement	end = ( long ) my_map [ seg_num ] . mem_end	276:1:7013:7046	2678752	1	True				
ANR	2678766	AssignmentExpression	end = ( long ) my_map [ seg_num ] . mem_end		2678752	0		=			
ANR	2678767	Identifier	end		2678752	0					
ANR	2678768	CastExpression	( long ) my_map [ seg_num ] . mem_end		2678752	1					
ANR	2678769	CastTarget	long		2678752	0					
ANR	2678770	MemberAccess	my_map [ seg_num ] . mem_end		2678752	1					
ANR	2678771	ArrayIndexing	my_map [ seg_num ]		2678752	0					
ANR	2678772	Identifier	my_map		2678752	0					
ANR	2678773	Identifier	seg_num		2678752	1					
ANR	2678774	Identifier	mem_end		2678752	1					
ANR	2678775	ExpressionStatement	prot = my_map [ seg_num ] . prot	277:1:7049:7074	2678752	2	True				
ANR	2678776	AssignmentExpression	prot = my_map [ seg_num ] . prot		2678752	0		=			
ANR	2678777	Identifier	prot		2678752	0					
ANR	2678778	MemberAccess	my_map [ seg_num ] . prot		2678752	1					
ANR	2678779	ArrayIndexing	my_map [ seg_num ]		2678752	0					
ANR	2678780	Identifier	my_map		2678752	0					
ANR	2678781	Identifier	seg_num		2678752	1					
ANR	2678782	Identifier	prot		2678752	1					
ANR	2678783	IfStatement	if ( seg_num == text_loc )		2678752	3					
ANR	2678784	Condition	seg_num == text_loc	278:4:7080:7096	2678752	0	True				
ANR	2678785	EqualityExpression	seg_num == text_loc		2678752	0		==			
ANR	2678786	Identifier	seg_num		2678752	0					
ANR	2678787	Identifier	text_loc		2678752	1					
ANR	2678788	ReturnStatement	return 1 ;	279:2:7101:7109	2678752	1	True				
ANR	2678789	PrimaryExpression	1		2678752	0					
ANR	2678790	ElseStatement	else		2678752	0					
ANR	2678791	IfStatement	if ( seg_num == stack_loc )		2678752	0					
ANR	2678792	Condition	seg_num == stack_loc	280:9:7120:7137	2678752	0	True				
ANR	2678793	EqualityExpression	seg_num == stack_loc		2678752	0		==			
ANR	2678794	Identifier	seg_num		2678752	0					
ANR	2678795	Identifier	stack_loc		2678752	1					
ANR	2678796	ReturnStatement	return 2 ;	281:2:7142:7150	2678752	1	True				
ANR	2678797	PrimaryExpression	2		2678752	0					
ANR	2678798	ElseStatement	else		2678752	0					
ANR	2678799	IfStatement	if ( seg_num == heap_loc || ( my_map [ seg_num ] . mem_start >= data_start_addr ( ) && my_map [ seg_num ] . mem_start <= data_end_addr ( ) ) )		2678752	0					
ANR	2678800	Condition	seg_num == heap_loc || ( my_map [ seg_num ] . mem_start >= data_start_addr ( ) && my_map [ seg_num ] . mem_start <= data_end_addr ( ) )	282:9:7161:7283	2678752	0	True				
ANR	2678801	OrExpression	seg_num == heap_loc || ( my_map [ seg_num ] . mem_start >= data_start_addr ( ) && my_map [ seg_num ] . mem_start <= data_end_addr ( ) )		2678752	0		||			
ANR	2678802	EqualityExpression	seg_num == heap_loc		2678752	0		==			
ANR	2678803	Identifier	seg_num		2678752	0					
ANR	2678804	Identifier	heap_loc		2678752	1					
ANR	2678805	AndExpression	my_map [ seg_num ] . mem_start >= data_start_addr ( ) && my_map [ seg_num ] . mem_start <= data_end_addr ( )		2678752	1		&&			
ANR	2678806	RelationalExpression	my_map [ seg_num ] . mem_start >= data_start_addr ( )		2678752	0		>=			
ANR	2678807	MemberAccess	my_map [ seg_num ] . mem_start		2678752	0					
ANR	2678808	ArrayIndexing	my_map [ seg_num ]		2678752	0					
ANR	2678809	Identifier	my_map		2678752	0					
ANR	2678810	Identifier	seg_num		2678752	1					
ANR	2678811	Identifier	mem_start		2678752	1					
ANR	2678812	CallExpression	data_start_addr ( )		2678752	1					
ANR	2678813	Callee	data_start_addr		2678752	0					
ANR	2678814	Identifier	data_start_addr		2678752	0					
ANR	2678815	ArgumentList			2678752	1					
ANR	2678816	RelationalExpression	my_map [ seg_num ] . mem_start <= data_end_addr ( )		2678752	1		<=			
ANR	2678817	MemberAccess	my_map [ seg_num ] . mem_start		2678752	0					
ANR	2678818	ArrayIndexing	my_map [ seg_num ]		2678752	0					
ANR	2678819	Identifier	my_map		2678752	0					
ANR	2678820	Identifier	seg_num		2678752	1					
ANR	2678821	Identifier	mem_start		2678752	1					
ANR	2678822	CallExpression	data_end_addr ( )		2678752	1					
ANR	2678823	Callee	data_end_addr		2678752	0					
ANR	2678824	Identifier	data_end_addr		2678752	0					
ANR	2678825	ArgumentList			2678752	1					
ANR	2678826	ReturnStatement	return 3 ;	285:3:7289:7297	2678752	1	True				
ANR	2678827	PrimaryExpression	3		2678752	0					
ANR	2678828	ReturnStatement	return 0 ;	289:1:7350:7358	2678752	4	True				
ANR	2678829	PrimaryExpression	0		2678752	0					
ANR	2678830	ReturnType	int		2678752	1					
ANR	2678831	Identifier	segment_bounds		2678752	2					
ANR	2678832	ParameterList	"int seg_num , RAW_ADDR & start , RAW_ADDR & end , int & prot"		2678752	3					
ANR	2678833	Parameter	int seg_num	273:19:6914:6924	2678752	0	True				
ANR	2678834	ParameterType	int		2678752	0					
ANR	2678835	Identifier	seg_num		2678752	1					
ANR	2678836	Parameter	RAW_ADDR & start	273:32:6927:6941	2678752	1	True				
ANR	2678837	ParameterType	RAW_ADDR &		2678752	0					
ANR	2678838	Identifier	start		2678752	1					
ANR	2678839	Parameter	RAW_ADDR & end	273:49:6944:6956	2678752	2	True				
ANR	2678840	ParameterType	RAW_ADDR &		2678752	0					
ANR	2678841	Identifier	end		2678752	1					
ANR	2678842	Parameter	int & prot	273:64:6959:6967	2678752	3	True				
ANR	2678843	ParameterType	int &		2678752	0					
ANR	2678844	Identifier	prot		2678752	1					
ANR	2678845	CFGEntryNode	ENTRY		2678752		True				
ANR	2678846	CFGExitNode	EXIT		2678752		True				
ANR	2678847	Symbol	heap_loc		2678752						
ANR	2678848	Symbol	seg_num		2678752						
ANR	2678849	Symbol	data_end_addr		2678752						
ANR	2678850	Symbol	my_map [ seg_num ] . mem_end		2678752						
ANR	2678851	Symbol	start		2678752						
ANR	2678852	Symbol	stack_loc		2678752						
ANR	2678853	Symbol	my_map [ seg_num ] . prot		2678752						
ANR	2678854	Symbol	my_map [ seg_num ] . mem_start		2678752						
ANR	2678855	Symbol	* my_map		2678752						
ANR	2678856	Symbol	prot		2678752						
ANR	2678857	Symbol	* seg_num		2678752						
ANR	2678858	Symbol	end		2678752						
ANR	2678859	Symbol	text_loc		2678752						
ANR	2678860	Symbol	data_start_addr		2678752						
ANR	2678861	Symbol	my_map		2678752						
ANR	2678862	ClassDef	ma_flags	292:0:7363:7415							
ANR	2678863	DeclStmt									
ANR	2678864	Decl							int	int	flag_val
ANR	2678865	DeclStmt									
ANR	2678866	Decl							char	char *	flag_name
ANR	2678867	Function	display_prmap	297:0:7419:7757							
ANR	2678868	FunctionDef	display_prmap ()		2678867	0					
ANR	2678869	CompoundStatement		298:0:7440:7757	2678867	0					
ANR	2678870	IdentifierDeclStatement	int i ;	299:1:7443:7449	2678867	0	True				
ANR	2678871	IdentifierDecl	i		2678867	0					
ANR	2678872	IdentifierDeclType	int		2678867	0					
ANR	2678873	Identifier	i		2678867	1					
ANR	2678874	ForStatement	for ( i = 0 ; i < map_count ; i ++ )		2678867	1					
ANR	2678875	ForInit	i = 0 ;	301:5:7457:7460	2678867	0	True				
ANR	2678876	AssignmentExpression	i = 0		2678867	0		=			
ANR	2678877	Identifier	i		2678867	0					
ANR	2678878	PrimaryExpression	0		2678867	1					
ANR	2678879	Condition	i < map_count	301:9:7461:7471	2678867	1	True				
ANR	2678880	RelationalExpression	i < map_count		2678867	0		<			
ANR	2678881	Identifier	i		2678867	0					
ANR	2678882	Identifier	map_count		2678867	1					
ANR	2678883	PostIncDecOperationExpression	i ++	301:21:7473:7475	2678867	2	True				
ANR	2678884	Identifier	i		2678867	0					
ANR	2678885	IncDec	++		2678867	1					
ANR	2678886	CompoundStatement		4:26:37:37	2678867	3					
ANR	2678887	ExpressionStatement	"dprintf ( D_ALWAYS , ""addr= 0x%p, size= 0x%x, offset= 0x%x\\n"" , my_map [ i ] . mem_start , my_map [ i ] . mem_end - my_map [ i ] . mem_start , my_map [ i ] . offset )"	302:2:7482:7625	2678867	0	True				
ANR	2678888	CallExpression	"dprintf ( D_ALWAYS , ""addr= 0x%p, size= 0x%x, offset= 0x%x\\n"" , my_map [ i ] . mem_start , my_map [ i ] . mem_end - my_map [ i ] . mem_start , my_map [ i ] . offset )"		2678867	0					
ANR	2678889	Callee	dprintf		2678867	0					
ANR	2678890	Identifier	dprintf		2678867	0					
ANR	2678891	ArgumentList	D_ALWAYS		2678867	1					
ANR	2678892	Argument	D_ALWAYS		2678867	0					
ANR	2678893	Identifier	D_ALWAYS		2678867	0					
ANR	2678894	Argument	"""addr= 0x%p, size= 0x%x, offset= 0x%x\\n"""		2678867	1					
ANR	2678895	PrimaryExpression	"""addr= 0x%p, size= 0x%x, offset= 0x%x\\n"""		2678867	0					
ANR	2678896	Argument	my_map [ i ] . mem_start		2678867	2					
ANR	2678897	MemberAccess	my_map [ i ] . mem_start		2678867	0					
ANR	2678898	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678899	Identifier	my_map		2678867	0					
ANR	2678900	Identifier	i		2678867	1					
ANR	2678901	Identifier	mem_start		2678867	1					
ANR	2678902	Argument	my_map [ i ] . mem_end - my_map [ i ] . mem_start		2678867	3					
ANR	2678903	AdditiveExpression	my_map [ i ] . mem_end - my_map [ i ] . mem_start		2678867	0		-			
ANR	2678904	MemberAccess	my_map [ i ] . mem_end		2678867	0					
ANR	2678905	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678906	Identifier	my_map		2678867	0					
ANR	2678907	Identifier	i		2678867	1					
ANR	2678908	Identifier	mem_end		2678867	1					
ANR	2678909	MemberAccess	my_map [ i ] . mem_start		2678867	1					
ANR	2678910	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678911	Identifier	my_map		2678867	0					
ANR	2678912	Identifier	i		2678867	1					
ANR	2678913	Identifier	mem_start		2678867	1					
ANR	2678914	Argument	my_map [ i ] . offset		2678867	4					
ANR	2678915	MemberAccess	my_map [ i ] . offset		2678867	0					
ANR	2678916	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678917	Identifier	my_map		2678867	0					
ANR	2678918	Identifier	i		2678867	1					
ANR	2678919	Identifier	offset		2678867	1					
ANR	2678920	ExpressionStatement	"dprintf ( D_ALWAYS , ""Flags: %c%c%c%c inode %d\\n"" , my_map [ i ] . r , my_map [ i ] . w , my_map [ i ] . x , my_map [ i ] . p , my_map [ i ] . inode )"	305:2:7629:7752	2678867	1	True				
ANR	2678921	CallExpression	"dprintf ( D_ALWAYS , ""Flags: %c%c%c%c inode %d\\n"" , my_map [ i ] . r , my_map [ i ] . w , my_map [ i ] . x , my_map [ i ] . p , my_map [ i ] . inode )"		2678867	0					
ANR	2678922	Callee	dprintf		2678867	0					
ANR	2678923	Identifier	dprintf		2678867	0					
ANR	2678924	ArgumentList	D_ALWAYS		2678867	1					
ANR	2678925	Argument	D_ALWAYS		2678867	0					
ANR	2678926	Identifier	D_ALWAYS		2678867	0					
ANR	2678927	Argument	"""Flags: %c%c%c%c inode %d\\n"""		2678867	1					
ANR	2678928	PrimaryExpression	"""Flags: %c%c%c%c inode %d\\n"""		2678867	0					
ANR	2678929	Argument	my_map [ i ] . r		2678867	2					
ANR	2678930	MemberAccess	my_map [ i ] . r		2678867	0					
ANR	2678931	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678932	Identifier	my_map		2678867	0					
ANR	2678933	Identifier	i		2678867	1					
ANR	2678934	Identifier	r		2678867	1					
ANR	2678935	Argument	my_map [ i ] . w		2678867	3					
ANR	2678936	MemberAccess	my_map [ i ] . w		2678867	0					
ANR	2678937	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678938	Identifier	my_map		2678867	0					
ANR	2678939	Identifier	i		2678867	1					
ANR	2678940	Identifier	w		2678867	1					
ANR	2678941	Argument	my_map [ i ] . x		2678867	4					
ANR	2678942	MemberAccess	my_map [ i ] . x		2678867	0					
ANR	2678943	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678944	Identifier	my_map		2678867	0					
ANR	2678945	Identifier	i		2678867	1					
ANR	2678946	Identifier	x		2678867	1					
ANR	2678947	Argument	my_map [ i ] . p		2678867	5					
ANR	2678948	MemberAccess	my_map [ i ] . p		2678867	0					
ANR	2678949	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678950	Identifier	my_map		2678867	0					
ANR	2678951	Identifier	i		2678867	1					
ANR	2678952	Identifier	p		2678867	1					
ANR	2678953	Argument	my_map [ i ] . inode		2678867	6					
ANR	2678954	MemberAccess	my_map [ i ] . inode		2678867	0					
ANR	2678955	ArrayIndexing	my_map [ i ]		2678867	0					
ANR	2678956	Identifier	my_map		2678867	0					
ANR	2678957	Identifier	i		2678867	1					
ANR	2678958	Identifier	inode		2678867	1					
ANR	2678959	ReturnType	void		2678867	1					
ANR	2678960	Identifier	display_prmap		2678867	2					
ANR	2678961	ParameterList			2678867	3					
ANR	2678962	CFGEntryNode	ENTRY		2678867		True				
ANR	2678963	CFGExitNode	EXIT		2678867		True				
ANR	2678964	Symbol	D_ALWAYS		2678867						
ANR	2678965	Symbol	i		2678867						
ANR	2678966	Symbol	my_map [ i ] . w		2678867						
ANR	2678967	Symbol	my_map [ i ] . p		2678867						
ANR	2678968	Symbol	my_map [ i ] . r		2678867						
ANR	2678969	Symbol	* my_map		2678867						
ANR	2678970	Symbol	* i		2678867						
ANR	2678971	Symbol	my_map [ i ] . x		2678867						
ANR	2678972	Symbol	my_map [ i ] . offset		2678867						
ANR	2678973	Symbol	my_map [ i ] . mem_start		2678867						
ANR	2678974	Symbol	my_map [ i ] . inode		2678867						
ANR	2678975	Symbol	map_count		2678867						
ANR	2678976	Symbol	my_map [ i ] . mem_end		2678867						
ANR	2678977	Symbol	my_map		2678867						
ANR	2678978	Function	find_correct_vm_addr	316:0:7971:9172							
ANR	2678979	FunctionDef	"find_correct_vm_addr (unsigned long start , unsigned long end , int prot)"		2678978	0					
ANR	2678980	CompoundStatement		318:0:8057:9172	2678978	0					
ANR	2678981	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	319:1:8060:8105	2678978	0	True				
ANR	2678982	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2678978	0					
ANR	2678983	IdentifierDeclType	int		2678978	0					
ANR	2678984	Identifier	scm		2678978	1					
ANR	2678985	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2678978	2		=			
ANR	2678986	Identifier	scm		2678978	0					
ANR	2678987	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2678978	1					
ANR	2678988	Callee	SetSyscalls		2678978	0					
ANR	2678989	Identifier	SetSyscalls		2678978	0					
ANR	2678990	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2678978	1					
ANR	2678991	Argument	SYS_LOCAL | SYS_UNMAPPED		2678978	0					
ANR	2678992	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2678978	0		|			
ANR	2678993	Identifier	SYS_LOCAL		2678978	0					
ANR	2678994	Identifier	SYS_UNMAPPED		2678978	1					
ANR	2678995	IfStatement	"if ( ( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0 )"		2678978	1					
ANR	2678996	Condition	"( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0"	321:4:8112:8161	2678978	0	True				
ANR	2678997	EqualityExpression	"( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0"		2678978	0		==			
ANR	2678998	CallExpression	"mprotect ( ( char * ) start , end - start , PROT_READ )"		2678978	0					
ANR	2678999	Callee	mprotect		2678978	0					
ANR	2679000	Identifier	mprotect		2678978	0					
ANR	2679001	ArgumentList	( char * ) start		2678978	1					
ANR	2679002	Argument	( char * ) start		2678978	0					
ANR	2679003	CastExpression	( char * ) start		2678978	0					
ANR	2679004	CastTarget	char *		2678978	0					
ANR	2679005	Identifier	start		2678978	1					
ANR	2679006	Argument	end - start		2678978	1					
ANR	2679007	AdditiveExpression	end - start		2678978	0		-			
ANR	2679008	Identifier	end		2678978	0					
ANR	2679009	Identifier	start		2678978	1					
ANR	2679010	Argument	PROT_READ		2678978	2					
ANR	2679011	Identifier	PROT_READ		2678978	0					
ANR	2679012	PrimaryExpression	0		2678978	1					
ANR	2679013	CompoundStatement		4:56:106:106	2678978	1					
ANR	2679014	IfStatement	"if ( ( mprotect ( ( char * ) start , end - start , prot ) ) == 0 )"		2678978	0					
ANR	2679015	Condition	"( mprotect ( ( char * ) start , end - start , prot ) ) == 0"	326:5:8296:8340	2678978	0	True				
ANR	2679016	EqualityExpression	"( mprotect ( ( char * ) start , end - start , prot ) ) == 0"		2678978	0		==			
ANR	2679017	CallExpression	"mprotect ( ( char * ) start , end - start , prot )"		2678978	0					
ANR	2679018	Callee	mprotect		2678978	0					
ANR	2679019	Identifier	mprotect		2678978	0					
ANR	2679020	ArgumentList	( char * ) start		2678978	1					
ANR	2679021	Argument	( char * ) start		2678978	0					
ANR	2679022	CastExpression	( char * ) start		2678978	0					
ANR	2679023	CastTarget	char *		2678978	0					
ANR	2679024	Identifier	start		2678978	1					
ANR	2679025	Argument	end - start		2678978	1					
ANR	2679026	AdditiveExpression	end - start		2678978	0		-			
ANR	2679027	Identifier	end		2678978	0					
ANR	2679028	Identifier	start		2678978	1					
ANR	2679029	Argument	prot		2678978	2					
ANR	2679030	Identifier	prot		2678978	0					
ANR	2679031	PrimaryExpression	0		2678978	1					
ANR	2679032	CompoundStatement		9:52:285:285	2678978	1					
ANR	2679033	ExpressionStatement	SetSyscalls ( scm )	327:3:8348:8364	2678978	0	True				
ANR	2679034	CallExpression	SetSyscalls ( scm )		2678978	0					
ANR	2679035	Callee	SetSyscalls		2678978	0					
ANR	2679036	Identifier	SetSyscalls		2678978	0					
ANR	2679037	ArgumentList	scm		2678978	1					
ANR	2679038	Argument	scm		2678978	0					
ANR	2679039	Identifier	scm		2678978	0					
ANR	2679040	ReturnStatement	return end ;	328:3:8369:8379	2678978	1	True				
ANR	2679041	Identifier	end		2678978	0					
ANR	2679042	ElseStatement	else		2678978	0					
ANR	2679043	CompoundStatement		12:9:332:332	2678978	0					
ANR	2679044	ExpressionStatement	"dprintf ( D_ALWAYS , ""Fatal error, Can't restore memory protection\\n"" )"	330:3:8395:8462	2678978	0	True				
ANR	2679045	CallExpression	"dprintf ( D_ALWAYS , ""Fatal error, Can't restore memory protection\\n"" )"		2678978	0					
ANR	2679046	Callee	dprintf		2678978	0					
ANR	2679047	Identifier	dprintf		2678978	0					
ANR	2679048	ArgumentList	D_ALWAYS		2678978	1					
ANR	2679049	Argument	D_ALWAYS		2678978	0					
ANR	2679050	Identifier	D_ALWAYS		2678978	0					
ANR	2679051	Argument	"""Fatal error, Can't restore memory protection\\n"""		2678978	1					
ANR	2679052	PrimaryExpression	"""Fatal error, Can't restore memory protection\\n"""		2678978	0					
ANR	2679053	ElseStatement	else		2678978	0					
ANR	2679054	CompoundStatement		15:8:418:418	2678978	0					
ANR	2679055	ForStatement	for ( ; end > start ; end -= 4 )		2678978	0					
ANR	2679056	Condition	end > start	337:7:8613:8621	2678978	0	True				
ANR	2679057	RelationalExpression	end > start		2678978	0		>			
ANR	2679058	Identifier	end		2678978	0					
ANR	2679059	Identifier	start		2678978	1					
ANR	2679060	AssignmentExpression	end -= 4	337:17:8623:8628	2678978	1	True	-=			
ANR	2679061	Identifier	end		2678978	0					
ANR	2679062	PrimaryExpression	4		2678978	1					
ANR	2679063	CompoundStatement		20:25:573:573	2678978	2					
ANR	2679064	IfStatement	"if ( ( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0 )"		2678978	0					
ANR	2679065	Condition	"( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0"	338:6:8696:8745	2678978	0	True				
ANR	2679066	EqualityExpression	"( mprotect ( ( char * ) start , end - start , PROT_READ ) ) == 0"		2678978	0		==			
ANR	2679067	CallExpression	"mprotect ( ( char * ) start , end - start , PROT_READ )"		2678978	0					
ANR	2679068	Callee	mprotect		2678978	0					
ANR	2679069	Identifier	mprotect		2678978	0					
ANR	2679070	ArgumentList	( char * ) start		2678978	1					
ANR	2679071	Argument	( char * ) start		2678978	0					
ANR	2679072	CastExpression	( char * ) start		2678978	0					
ANR	2679073	CastTarget	char *		2678978	0					
ANR	2679074	Identifier	start		2678978	1					
ANR	2679075	Argument	end - start		2678978	1					
ANR	2679076	AdditiveExpression	end - start		2678978	0		-			
ANR	2679077	Identifier	end		2678978	0					
ANR	2679078	Identifier	start		2678978	1					
ANR	2679079	Argument	PROT_READ		2678978	2					
ANR	2679080	Identifier	PROT_READ		2678978	0					
ANR	2679081	PrimaryExpression	0		2678978	1					
ANR	2679082	CompoundStatement		21:58:690:690	2678978	1					
ANR	2679083	IfStatement	"if ( ( mprotect ( ( char * ) start , end - start , prot ) ) == 0 )"		2678978	0					
ANR	2679084	Condition	"( mprotect ( ( char * ) start , end - start , prot ) ) == 0"	343:7:8890:8934	2678978	0	True				
ANR	2679085	EqualityExpression	"( mprotect ( ( char * ) start , end - start , prot ) ) == 0"		2678978	0		==			
ANR	2679086	CallExpression	"mprotect ( ( char * ) start , end - start , prot )"		2678978	0					
ANR	2679087	Callee	mprotect		2678978	0					
ANR	2679088	Identifier	mprotect		2678978	0					
ANR	2679089	ArgumentList	( char * ) start		2678978	1					
ANR	2679090	Argument	( char * ) start		2678978	0					
ANR	2679091	CastExpression	( char * ) start		2678978	0					
ANR	2679092	CastTarget	char *		2678978	0					
ANR	2679093	Identifier	start		2678978	1					
ANR	2679094	Argument	end - start		2678978	1					
ANR	2679095	AdditiveExpression	end - start		2678978	0		-			
ANR	2679096	Identifier	end		2678978	0					
ANR	2679097	Identifier	start		2678978	1					
ANR	2679098	Argument	prot		2678978	2					
ANR	2679099	Identifier	prot		2678978	0					
ANR	2679100	PrimaryExpression	0		2678978	1					
ANR	2679101	CompoundStatement		26:54:879:879	2678978	1					
ANR	2679102	ExpressionStatement	SetSyscalls ( scm )	344:5:8944:8960	2678978	0	True				
ANR	2679103	CallExpression	SetSyscalls ( scm )		2678978	0					
ANR	2679104	Callee	SetSyscalls		2678978	0					
ANR	2679105	Identifier	SetSyscalls		2678978	0					
ANR	2679106	ArgumentList	scm		2678978	1					
ANR	2679107	Argument	scm		2678978	0					
ANR	2679108	Identifier	scm		2678978	0					
ANR	2679109	ReturnStatement	return end ;	345:5:8968:8978	2678978	1	True				
ANR	2679110	Identifier	end		2678978	0					
ANR	2679111	ElseStatement	else		2678978	0					
ANR	2679112	CompoundStatement		29:11:933:933	2678978	0					
ANR	2679113	ExpressionStatement	"dprintf ( D_ALWAYS , ""Fatal error, Can't restore memory protection\\n"" )"	347:5:8998:9065	2678978	0	True				
ANR	2679114	CallExpression	"dprintf ( D_ALWAYS , ""Fatal error, Can't restore memory protection\\n"" )"		2678978	0					
ANR	2679115	Callee	dprintf		2678978	0					
ANR	2679116	Identifier	dprintf		2678978	0					
ANR	2679117	ArgumentList	D_ALWAYS		2678978	1					
ANR	2679118	Argument	D_ALWAYS		2678978	0					
ANR	2679119	Identifier	D_ALWAYS		2678978	0					
ANR	2679120	Argument	"""Fatal error, Can't restore memory protection\\n"""		2678978	1					
ANR	2679121	PrimaryExpression	"""Fatal error, Can't restore memory protection\\n"""		2678978	0					
ANR	2679122	ExpressionStatement	"dprintf ( D_ALWAYS , ""Fatal error, Can't read any of this block\\n"" )"	351:2:9084:9148	2678978	1	True				
ANR	2679123	CallExpression	"dprintf ( D_ALWAYS , ""Fatal error, Can't read any of this block\\n"" )"		2678978	0					
ANR	2679124	Callee	dprintf		2678978	0					
ANR	2679125	Identifier	dprintf		2678978	0					
ANR	2679126	ArgumentList	D_ALWAYS		2678978	1					
ANR	2679127	Argument	D_ALWAYS		2678978	0					
ANR	2679128	Identifier	D_ALWAYS		2678978	0					
ANR	2679129	Argument	"""Fatal error, Can't read any of this block\\n"""		2678978	1					
ANR	2679130	PrimaryExpression	"""Fatal error, Can't read any of this block\\n"""		2678978	0					
ANR	2679131	ExpressionStatement	SetSyscalls ( scm )	353:1:9154:9170	2678978	2	True				
ANR	2679132	CallExpression	SetSyscalls ( scm )		2678978	0					
ANR	2679133	Callee	SetSyscalls		2678978	0					
ANR	2679134	Identifier	SetSyscalls		2678978	0					
ANR	2679135	ArgumentList	scm		2678978	1					
ANR	2679136	Argument	scm		2678978	0					
ANR	2679137	Identifier	scm		2678978	0					
ANR	2679138	ReturnType	unsigned long		2678978	1					
ANR	2679139	Identifier	find_correct_vm_addr		2678978	2					
ANR	2679140	ParameterList	"unsigned long start , unsigned long end , int prot"		2678978	3					
ANR	2679141	Parameter	unsigned long start	316:35:8006:8024	2678978	0	True				
ANR	2679142	ParameterType	unsigned long		2678978	0					
ANR	2679143	Identifier	start		2678978	1					
ANR	2679144	Parameter	unsigned long end	316:56:8027:8043	2678978	1	True				
ANR	2679145	ParameterType	unsigned long		2678978	0					
ANR	2679146	Identifier	end		2678978	1					
ANR	2679147	Parameter	int prot	317:1:8047:8054	2678978	2	True				
ANR	2679148	ParameterType	int		2678978	0					
ANR	2679149	Identifier	prot		2678978	1					
ANR	2679150	CFGEntryNode	ENTRY		2678978		True				
ANR	2679151	CFGExitNode	EXIT		2678978		True				
ANR	2679152	Symbol	prot		2678978						
ANR	2679153	Symbol	SYS_UNMAPPED		2678978						
ANR	2679154	Symbol	mprotect		2678978						
ANR	2679155	Symbol	SYS_LOCAL		2678978						
ANR	2679156	Symbol	start		2678978						
ANR	2679157	Symbol	D_ALWAYS		2678978						
ANR	2679158	Symbol	SetSyscalls		2678978						
ANR	2679159	Symbol	PROT_READ		2678978						
ANR	2679160	Symbol	end		2678978						
ANR	2679161	Symbol	scm		2678978						
