command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1994310	File	data/converged/CVE-2011-4930_htcondor/power.cpp								
ANR	1994311	ClassDef	<unnamed>	41:0:1197:1703							
ANR	1994312	DeclStmt									
ANR	1994313	Decl							const char	const char * [ ]	errmsgs
ANR	1994314	DeclStmt									
ANR	1994315	Decl							FILE	FILE *	in
ANR	1994316	DeclStmt									
ANR	1994317	Decl							char	char *	fn_in
ANR	1994318	DeclStmt									
ANR	1994319	Decl							char	char *	fn_out
ANR	1994320	DeclStmt									
ANR	1994321	Decl							const char	const char *	name
ANR	1994322	DeclStmt									
ANR	1994323	Decl							char	char *	mac
ANR	1994324	DeclStmt									
ANR	1994325	Decl							char	char *	mask
ANR	1994326	DeclStmt									
ANR	1994327	Decl							int	int	port
ANR	1994328	DeclStmt									
ANR	1994329	Decl							bool	bool	stdio
ANR	1994330	DeclStmt									
ANR	1994331	Decl							ClassAd	ClassAd *	ad
ANR	1994332	DeclStmt									
ANR	1994333	Decl							WakerBase	WakerBase *	waker
ANR	1994334	Function	usage	88:0:2984:3685							
ANR	1994335	FunctionDef	usage ()		1994334	0					
ANR	1994336	CompoundStatement		90:0:3010:3685	1994334	0					
ANR	1994337	ExpressionStatement	"fprintf ( stderr , ""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"" , name )"	92:1:3014:3098	1994334	0	True				
ANR	1994338	CallExpression	"fprintf ( stderr , ""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"" , name )"		1994334	0					
ANR	1994339	Callee	fprintf		1994334	0					
ANR	1994340	Identifier	fprintf		1994334	0					
ANR	1994341	ArgumentList	stderr		1994334	1					
ANR	1994342	Argument	stderr		1994334	0					
ANR	1994343	Identifier	stderr		1994334	0					
ANR	1994344	Argument	"""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"""		1994334	1					
ANR	1994345	PrimaryExpression	"""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"""		1994334	0					
ANR	1994346	Argument	name		1994334	2					
ANR	1994347	Identifier	name		1994334	0					
ANR	1994348	ExpressionStatement	"fprintf ( stderr , ""%s - %s\\n"" , name , DESCRIPTION )"	94:1:3101:3151	1994334	1	True				
ANR	1994349	CallExpression	"fprintf ( stderr , ""%s - %s\\n"" , name , DESCRIPTION )"		1994334	0					
ANR	1994350	Callee	fprintf		1994334	0					
ANR	1994351	Identifier	fprintf		1994334	0					
ANR	1994352	ArgumentList	stderr		1994334	1					
ANR	1994353	Argument	stderr		1994334	0					
ANR	1994354	Identifier	stderr		1994334	0					
ANR	1994355	Argument	"""%s - %s\\n"""		1994334	1					
ANR	1994356	PrimaryExpression	"""%s - %s\\n"""		1994334	0					
ANR	1994357	Argument	name		1994334	2					
ANR	1994358	Identifier	name		1994334	0					
ANR	1994359	Argument	DESCRIPTION		1994334	3					
ANR	1994360	Identifier	DESCRIPTION		1994334	0					
ANR	1994361	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	95:1:3154:3178	1994334	2	True				
ANR	1994362	CallExpression	"fprintf ( stderr , ""\\n"" )"		1994334	0					
ANR	1994363	Callee	fprintf		1994334	0					
ANR	1994364	Identifier	fprintf		1994334	0					
ANR	1994365	ArgumentList	stderr		1994334	1					
ANR	1994366	Argument	stderr		1994334	0					
ANR	1994367	Identifier	stderr		1994334	0					
ANR	1994368	Argument	"""\\n"""		1994334	1					
ANR	1994369	PrimaryExpression	"""\\n"""		1994334	0					
ANR	1994370	ExpressionStatement	"fprintf ( stderr , ""-h      This message\\n"" )"	96:1:3181:3225	1994334	3	True				
ANR	1994371	CallExpression	"fprintf ( stderr , ""-h      This message\\n"" )"		1994334	0					
ANR	1994372	Callee	fprintf		1994334	0					
ANR	1994373	Identifier	fprintf		1994334	0					
ANR	1994374	ArgumentList	stderr		1994334	1					
ANR	1994375	Argument	stderr		1994334	0					
ANR	1994376	Identifier	stderr		1994334	0					
ANR	1994377	Argument	"""-h      This message\\n"""		1994334	1					
ANR	1994378	PrimaryExpression	"""-h      This message\\n"""		1994334	0					
ANR	1994379	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	97:1:3228:3252	1994334	4	True				
ANR	1994380	CallExpression	"fprintf ( stderr , ""\\n"" )"		1994334	0					
ANR	1994381	Callee	fprintf		1994334	0					
ANR	1994382	Identifier	fprintf		1994334	0					
ANR	1994383	ArgumentList	stderr		1994334	1					
ANR	1994384	Argument	stderr		1994334	0					
ANR	1994385	Identifier	stderr		1994334	0					
ANR	1994386	Argument	"""\\n"""		1994334	1					
ANR	1994387	PrimaryExpression	"""\\n"""		1994334	0					
ANR	1994388	ExpressionStatement	"fprintf ( stderr , ""-d      Enables debugging\\n"" )"	98:1:3255:3304	1994334	5	True				
ANR	1994389	CallExpression	"fprintf ( stderr , ""-d      Enables debugging\\n"" )"		1994334	0					
ANR	1994390	Callee	fprintf		1994334	0					
ANR	1994391	Identifier	fprintf		1994334	0					
ANR	1994392	ArgumentList	stderr		1994334	1					
ANR	1994393	Argument	stderr		1994334	0					
ANR	1994394	Identifier	stderr		1994334	0					
ANR	1994395	Argument	"""-d      Enables debugging\\n"""		1994334	1					
ANR	1994396	PrimaryExpression	"""-d      Enables debugging\\n"""		1994334	0					
ANR	1994397	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	99:1:3307:3331	1994334	6	True				
ANR	1994398	CallExpression	"fprintf ( stderr , ""\\n"" )"		1994334	0					
ANR	1994399	Callee	fprintf		1994334	0					
ANR	1994400	Identifier	fprintf		1994334	0					
ANR	1994401	ArgumentList	stderr		1994334	1					
ANR	1994402	Argument	stderr		1994334	0					
ANR	1994403	Identifier	stderr		1994334	0					
ANR	1994404	Argument	"""\\n"""		1994334	1					
ANR	1994405	PrimaryExpression	"""\\n"""		1994334	0					
ANR	1994406	ExpressionStatement	"fprintf ( stderr , ""-i      Use standard input and output\\n"" )"	100:1:3334:3395	1994334	7	True				
ANR	1994407	CallExpression	"fprintf ( stderr , ""-i      Use standard input and output\\n"" )"		1994334	0					
ANR	1994408	Callee	fprintf		1994334	0					
ANR	1994409	Identifier	fprintf		1994334	0					
ANR	1994410	ArgumentList	stderr		1994334	1					
ANR	1994411	Argument	stderr		1994334	0					
ANR	1994412	Identifier	stderr		1994334	0					
ANR	1994413	Argument	"""-i      Use standard input and output\\n"""		1994334	1					
ANR	1994414	PrimaryExpression	"""-i      Use standard input and output\\n"""		1994334	0					
ANR	1994415	ExpressionStatement	"fprintf ( stderr , ""-m      Hardware address (MAC address)\\n"" )"	101:1:3398:3460	1994334	8	True				
ANR	1994416	CallExpression	"fprintf ( stderr , ""-m      Hardware address (MAC address)\\n"" )"		1994334	0					
ANR	1994417	Callee	fprintf		1994334	0					
ANR	1994418	Identifier	fprintf		1994334	0					
ANR	1994419	ArgumentList	stderr		1994334	1					
ANR	1994420	Argument	stderr		1994334	0					
ANR	1994421	Identifier	stderr		1994334	0					
ANR	1994422	Argument	"""-m      Hardware address (MAC address)\\n"""		1994334	1					
ANR	1994423	PrimaryExpression	"""-m      Hardware address (MAC address)\\n"""		1994334	0					
ANR	1994424	ExpressionStatement	"fprintf ( stderr , ""-p      Port (default: %d)\\n"" , port )"	102:1:3463:3519	1994334	9	True				
ANR	1994425	CallExpression	"fprintf ( stderr , ""-p      Port (default: %d)\\n"" , port )"		1994334	0					
ANR	1994426	Callee	fprintf		1994334	0					
ANR	1994427	Identifier	fprintf		1994334	0					
ANR	1994428	ArgumentList	stderr		1994334	1					
ANR	1994429	Argument	stderr		1994334	0					
ANR	1994430	Identifier	stderr		1994334	0					
ANR	1994431	Argument	"""-p      Port (default: %d)\\n"""		1994334	1					
ANR	1994432	PrimaryExpression	"""-p      Port (default: %d)\\n"""		1994334	0					
ANR	1994433	Argument	port		1994334	2					
ANR	1994434	Identifier	port		1994334	0					
ANR	1994435	ExpressionStatement	"fprintf ( stderr , ""-s      Subnet mask (default: %s)\\n"" , mask )"	103:1:3522:3585	1994334	10	True				
ANR	1994436	CallExpression	"fprintf ( stderr , ""-s      Subnet mask (default: %s)\\n"" , mask )"		1994334	0					
ANR	1994437	Callee	fprintf		1994334	0					
ANR	1994438	Identifier	fprintf		1994334	0					
ANR	1994439	ArgumentList	stderr		1994334	1					
ANR	1994440	Argument	stderr		1994334	0					
ANR	1994441	Identifier	stderr		1994334	0					
ANR	1994442	Argument	"""-s      Subnet mask (default: %s)\\n"""		1994334	1					
ANR	1994443	PrimaryExpression	"""-s      Subnet mask (default: %s)\\n"""		1994334	0					
ANR	1994444	Argument	mask		1994334	2					
ANR	1994445	Identifier	mask		1994334	0					
ANR	1994446	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	104:1:3588:3612	1994334	11	True				
ANR	1994447	CallExpression	"fprintf ( stderr , ""\\n"" )"		1994334	0					
ANR	1994448	Callee	fprintf		1994334	0					
ANR	1994449	Identifier	fprintf		1994334	0					
ANR	1994450	ArgumentList	stderr		1994334	1					
ANR	1994451	Argument	stderr		1994334	0					
ANR	1994452	Identifier	stderr		1994334	0					
ANR	1994453	Argument	"""\\n"""		1994334	1					
ANR	1994454	PrimaryExpression	"""\\n"""		1994334	0					
ANR	1994455	ExpressionStatement	"fprintf ( stderr , ""With -i, read standard input.\\n"" )"	105:1:3615:3668	1994334	12	True				
ANR	1994456	CallExpression	"fprintf ( stderr , ""With -i, read standard input.\\n"" )"		1994334	0					
ANR	1994457	Callee	fprintf		1994334	0					
ANR	1994458	Identifier	fprintf		1994334	0					
ANR	1994459	ArgumentList	stderr		1994334	1					
ANR	1994460	Argument	stderr		1994334	0					
ANR	1994461	Identifier	stderr		1994334	0					
ANR	1994462	Argument	"""With -i, read standard input.\\n"""		1994334	1					
ANR	1994463	PrimaryExpression	"""With -i, read standard input.\\n"""		1994334	0					
ANR	1994464	ExpressionStatement	exit ( 0 )	107:1:3672:3682	1994334	13	True				
ANR	1994465	CallExpression	exit ( 0 )		1994334	0					
ANR	1994466	Callee	exit		1994334	0					
ANR	1994467	Identifier	exit		1994334	0					
ANR	1994468	ArgumentList	0		1994334	1					
ANR	1994469	Argument	0		1994334	0					
ANR	1994470	PrimaryExpression	0		1994334	0					
ANR	1994471	ReturnType	static void		1994334	1					
ANR	1994472	Identifier	usage		1994334	2					
ANR	1994473	ParameterList			1994334	3					
ANR	1994474	CFGEntryNode	ENTRY		1994334		True				
ANR	1994475	CFGExitNode	EXIT		1994334		True				
ANR	1994476	Symbol	DESCRIPTION		1994334						
ANR	1994477	Symbol	port		1994334						
ANR	1994478	Symbol	name		1994334						
ANR	1994479	Symbol	stderr		1994334						
ANR	1994480	Symbol	mask		1994334						
ANR	1994481	Function	enable_debug	111:0:3688:3825							
ANR	1994482	FunctionDef	enable_debug ()		1994481	0					
ANR	1994483	CompoundStatement		113:0:3721:3825	1994481	0					
ANR	1994484	IdentifierDeclStatement	param_functions * p_funcs = get_param_functions ( ) ;	114:1:3724:3772	1994481	0	True				
ANR	1994485	IdentifierDecl	* p_funcs = get_param_functions ( )		1994481	0					
ANR	1994486	IdentifierDeclType	param_functions *		1994481	0					
ANR	1994487	Identifier	p_funcs		1994481	1					
ANR	1994488	AssignmentExpression	* p_funcs = get_param_functions ( )		1994481	2		=			
ANR	1994489	Identifier	p_funcs		1994481	0					
ANR	1994490	CallExpression	get_param_functions ( )		1994481	1					
ANR	1994491	Callee	get_param_functions		1994481	0					
ANR	1994492	Identifier	get_param_functions		1994481	0					
ANR	1994493	ArgumentList			1994481	1					
ANR	1994494	ExpressionStatement	Termlog = 1	115:1:3775:3786	1994481	1	True				
ANR	1994495	AssignmentExpression	Termlog = 1		1994481	0		=			
ANR	1994496	Identifier	Termlog		1994481	0					
ANR	1994497	PrimaryExpression	1		1994481	1					
ANR	1994498	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	116:1:3789:3823	1994481	2	True				
ANR	1994499	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		1994481	0					
ANR	1994500	Callee	dprintf_config		1994481	0					
ANR	1994501	Identifier	dprintf_config		1994481	0					
ANR	1994502	ArgumentList	"""TOOL"""		1994481	1					
ANR	1994503	Argument	"""TOOL"""		1994481	0					
ANR	1994504	PrimaryExpression	"""TOOL"""		1994481	0					
ANR	1994505	Argument	p_funcs		1994481	1					
ANR	1994506	Identifier	p_funcs		1994481	0					
ANR	1994507	ReturnType	static void		1994481	1					
ANR	1994508	Identifier	enable_debug		1994481	2					
ANR	1994509	ParameterList			1994481	3					
ANR	1994510	CFGEntryNode	ENTRY		1994481		True				
ANR	1994511	CFGExitNode	EXIT		1994481		True				
ANR	1994512	Symbol	get_param_functions		1994481						
ANR	1994513	Symbol	Termlog		1994481						
ANR	1994514	Symbol	p_funcs		1994481						
ANR	1994515	Function	error	119:0:3828:4352							
ANR	1994516	FunctionDef	error (int code)		1994515	0					
ANR	1994517	CompoundStatement		121:0:3863:4352	1994515	0					
ANR	1994518	IdentifierDeclStatement	va_list args ;	122:1:3866:3878	1994515	0	True				
ANR	1994519	IdentifierDecl	args		1994515	0					
ANR	1994520	IdentifierDeclType	va_list		1994515	0					
ANR	1994521	Identifier	args		1994515	1					
ANR	1994522	IdentifierDeclStatement	const char * msg ;	123:1:3881:3896	1994515	1	True				
ANR	1994523	IdentifierDecl	* msg		1994515	0					
ANR	1994524	IdentifierDeclType	const char *		1994515	0					
ANR	1994525	Identifier	msg		1994515	1					
ANR	1994526	ExpressionStatement	assert ( name )	125:1:3900:3915	1994515	2	True				
ANR	1994527	CallExpression	assert ( name )		1994515	0					
ANR	1994528	Callee	assert		1994515	0					
ANR	1994529	Identifier	assert		1994515	0					
ANR	1994530	ArgumentList	name		1994515	1					
ANR	1994531	Argument	name		1994515	0					
ANR	1994532	Identifier	name		1994515	0					
ANR	1994533	IfStatement	if ( code < E_UNKNOWN )		1994515	3					
ANR	1994534	Condition	code < E_UNKNOWN	127:6:3924:3939	1994515	0	True				
ANR	1994535	RelationalExpression	code < E_UNKNOWN		1994515	0		<			
ANR	1994536	Identifier	code		1994515	0					
ANR	1994537	Identifier	E_UNKNOWN		1994515	1					
ANR	1994538	CompoundStatement		7:25:79:79	1994515	1					
ANR	1994539	ExpressionStatement	code = E_UNKNOWN	128:2:3947:3963	1994515	0	True				
ANR	1994540	AssignmentExpression	code = E_UNKNOWN		1994515	0		=			
ANR	1994541	Identifier	code		1994515	0					
ANR	1994542	Identifier	E_UNKNOWN		1994515	1					
ANR	1994543	IfStatement	if ( code < 0 )		1994515	4					
ANR	1994544	Condition	code < 0	131:6:3975:3982	1994515	0	True				
ANR	1994545	RelationalExpression	code < 0		1994515	0		<			
ANR	1994546	Identifier	code		1994515	0					
ANR	1994547	PrimaryExpression	0		1994515	1					
ANR	1994548	CompoundStatement		11:17:122:122	1994515	1					
ANR	1994549	ExpressionStatement	msg = errmsgs [ - code ]	133:2:3991:4011	1994515	0	True				
ANR	1994550	AssignmentExpression	msg = errmsgs [ - code ]		1994515	0		=			
ANR	1994551	Identifier	msg		1994515	0					
ANR	1994552	ArrayIndexing	errmsgs [ - code ]		1994515	1					
ANR	1994553	Identifier	errmsgs		1994515	0					
ANR	1994554	UnaryOperationExpression	- code		1994515	1					
ANR	1994555	UnaryOperator	-		1994515	0					
ANR	1994556	Identifier	code		1994515	1					
ANR	1994557	IfStatement	if ( ! msg )		1994515	1					
ANR	1994558	Condition	! msg	135:7:4021:4024	1994515	0	True				
ANR	1994559	UnaryOperationExpression	! msg		1994515	0					
ANR	1994560	UnaryOperator	!		1994515	0					
ANR	1994561	Identifier	msg		1994515	1					
ANR	1994562	CompoundStatement		15:14:164:164	1994515	1					
ANR	1994563	ExpressionStatement	msg = errmsgs [ - E_UNKNOWN ]	136:3:4033:4058	1994515	0	True				
ANR	1994564	AssignmentExpression	msg = errmsgs [ - E_UNKNOWN ]		1994515	0		=			
ANR	1994565	Identifier	msg		1994515	0					
ANR	1994566	ArrayIndexing	errmsgs [ - E_UNKNOWN ]		1994515	1					
ANR	1994567	Identifier	errmsgs		1994515	0					
ANR	1994568	UnaryOperationExpression	- E_UNKNOWN		1994515	1					
ANR	1994569	UnaryOperator	-		1994515	0					
ANR	1994570	Identifier	E_UNKNOWN		1994515	1					
ANR	1994571	ExpressionStatement	"fprintf ( stderr , ""%s: "" , name )"	139:2:4067:4099	1994515	2	True				
ANR	1994572	CallExpression	"fprintf ( stderr , ""%s: "" , name )"		1994515	0					
ANR	1994573	Callee	fprintf		1994515	0					
ANR	1994574	Identifier	fprintf		1994515	0					
ANR	1994575	ArgumentList	stderr		1994515	1					
ANR	1994576	Argument	stderr		1994515	0					
ANR	1994577	Identifier	stderr		1994515	0					
ANR	1994578	Argument	"""%s: """		1994515	1					
ANR	1994579	PrimaryExpression	"""%s: """		1994515	0					
ANR	1994580	Argument	name		1994515	2					
ANR	1994581	Identifier	name		1994515	0					
ANR	1994582	ExpressionStatement	"va_start ( args , code )"	140:2:4103:4126	1994515	3	True				
ANR	1994583	CallExpression	"va_start ( args , code )"		1994515	0					
ANR	1994584	Callee	va_start		1994515	0					
ANR	1994585	Identifier	va_start		1994515	0					
ANR	1994586	ArgumentList	args		1994515	1					
ANR	1994587	Argument	args		1994515	0					
ANR	1994588	Identifier	args		1994515	0					
ANR	1994589	Argument	code		1994515	1					
ANR	1994590	Identifier	code		1994515	0					
ANR	1994591	ExpressionStatement	"vfprintf ( stderr , msg , args )"	141:2:4130:4160	1994515	4	True				
ANR	1994592	CallExpression	"vfprintf ( stderr , msg , args )"		1994515	0					
ANR	1994593	Callee	vfprintf		1994515	0					
ANR	1994594	Identifier	vfprintf		1994515	0					
ANR	1994595	ArgumentList	stderr		1994515	1					
ANR	1994596	Argument	stderr		1994515	0					
ANR	1994597	Identifier	stderr		1994515	0					
ANR	1994598	Argument	msg		1994515	1					
ANR	1994599	Identifier	msg		1994515	0					
ANR	1994600	Argument	args		1994515	2					
ANR	1994601	Identifier	args		1994515	0					
ANR	1994602	ExpressionStatement	va_end ( args )	142:2:4164:4179	1994515	5	True				
ANR	1994603	CallExpression	va_end ( args )		1994515	0					
ANR	1994604	Callee	va_end		1994515	0					
ANR	1994605	Identifier	va_end		1994515	0					
ANR	1994606	ArgumentList	args		1994515	1					
ANR	1994607	Argument	args		1994515	0					
ANR	1994608	Identifier	args		1994515	0					
ANR	1994609	IfStatement	if ( in && ( in != stdin ) )		1994515	5					
ANR	1994610	Condition	in && ( in != stdin )	146:6:4192:4213	1994515	0	True				
ANR	1994611	AndExpression	in && ( in != stdin )		1994515	0		&&			
ANR	1994612	Identifier	in		1994515	0					
ANR	1994613	EqualityExpression	in != stdin		1994515	1		!=			
ANR	1994614	Identifier	in		1994515	0					
ANR	1994615	Identifier	stdin		1994515	1					
ANR	1994616	CompoundStatement		26:31:353:353	1994515	1					
ANR	1994617	ExpressionStatement	fclose ( in )	147:2:4221:4234	1994515	0	True				
ANR	1994618	CallExpression	fclose ( in )		1994515	0					
ANR	1994619	Callee	fclose		1994515	0					
ANR	1994620	Identifier	fclose		1994515	0					
ANR	1994621	ArgumentList	in		1994515	1					
ANR	1994622	Argument	in		1994515	0					
ANR	1994623	Identifier	in		1994515	0					
ANR	1994624	IfStatement	if ( waker )		1994515	6					
ANR	1994625	Condition	waker	150:6:4246:4250	1994515	0	True				
ANR	1994626	Identifier	waker		1994515	0					
ANR	1994627	CompoundStatement		30:14:390:390	1994515	1					
ANR	1994628	Statement	delete	151:2:4258:4263	1994515	0	True				
ANR	1994629	ExpressionStatement	waker	151:9:4265:4270	1994515	1	True				
ANR	1994630	Identifier	waker		1994515	0					
ANR	1994631	ExpressionStatement	waker = NULL	152:2:4274:4286	1994515	2	True				
ANR	1994632	AssignmentExpression	waker = NULL		1994515	0		=			
ANR	1994633	Identifier	waker		1994515	0					
ANR	1994634	Identifier	NULL		1994515	1					
ANR	1994635	IfStatement	if ( ad )		1994515	7					
ANR	1994636	Condition	ad	155:6:4298:4299	1994515	0	True				
ANR	1994637	Identifier	ad		1994515	0					
ANR	1994638	CompoundStatement		35:11:439:439	1994515	1					
ANR	1994639	Statement	delete	156:2:4307:4312	1994515	0	True				
ANR	1994640	ExpressionStatement	ad	156:9:4314:4316	1994515	1	True				
ANR	1994641	Identifier	ad		1994515	0					
ANR	1994642	ExpressionStatement	ad = NULL	157:2:4320:4329	1994515	2	True				
ANR	1994643	AssignmentExpression	ad = NULL		1994515	0		=			
ANR	1994644	Identifier	ad		1994515	0					
ANR	1994645	Identifier	NULL		1994515	1					
ANR	1994646	ExpressionStatement	exit ( code )	160:1:4336:4349	1994515	8	True				
ANR	1994647	CallExpression	exit ( code )		1994515	0					
ANR	1994648	Callee	exit		1994515	0					
ANR	1994649	Identifier	exit		1994515	0					
ANR	1994650	ArgumentList	code		1994515	1					
ANR	1994651	Argument	code		1994515	0					
ANR	1994652	Identifier	code		1994515	0					
ANR	1994653	ReturnType	static void		1994515	1					
ANR	1994654	Identifier	error		1994515	2					
ANR	1994655	ParameterList	int code		1994515	3					
ANR	1994656	Parameter	int code	120:7:3847:3854	1994515	0	True				
ANR	1994657	ParameterType	int		1994515	0					
ANR	1994658	Identifier	code		1994515	1					
ANR	1994659	CFGEntryNode	ENTRY		1994515		True				
ANR	1994660	CFGExitNode	EXIT		1994515		True				
ANR	1994661	Symbol	msg		1994515						
ANR	1994662	Symbol	errmsgs		1994515						
ANR	1994663	Symbol	E_UNKNOWN		1994515						
ANR	1994664	Symbol	stdin		1994515						
ANR	1994665	Symbol	code		1994515						
ANR	1994666	Symbol	NULL		1994515						
ANR	1994667	Symbol	ad		1994515						
ANR	1994668	Symbol	in		1994515						
ANR	1994669	Symbol	stderr		1994515						
ANR	1994670	Symbol	args		1994515						
ANR	1994671	Symbol	waker		1994515						
ANR	1994672	Symbol	* errmsgs		1994515						
ANR	1994673	Symbol	name		1994515						
ANR	1994674	Symbol	* E_UNKNOWN		1994515						
ANR	1994675	Symbol	* code		1994515						
ANR	1994676	Function	parse_command_line	164:0:4355:5455							
ANR	1994677	FunctionDef	"parse_command_line (int argc , char * argv [ ])"		1994676	0					
ANR	1994678	CompoundStatement		166:0:4412:5455	1994676	0					
ANR	1994679	IdentifierDeclStatement	"int i , j = 0 ;"	168:1:4416:4429	1994676	0	True				
ANR	1994680	IdentifierDecl	i		1994676	0					
ANR	1994681	IdentifierDeclType	int		1994676	0					
ANR	1994682	Identifier	i		1994676	1					
ANR	1994683	IdentifierDecl	j = 0		1994676	1					
ANR	1994684	IdentifierDeclType	int		1994676	0					
ANR	1994685	Identifier	j		1994676	1					
ANR	1994686	AssignmentExpression	j = 0		1994676	2		=			
ANR	1994687	Identifier	j		1994676	0					
ANR	1994688	PrimaryExpression	0		1994676	1					
ANR	1994689	IdentifierDeclStatement	char * s ;	169:1:4432:4439	1994676	1	True				
ANR	1994690	IdentifierDecl	* s		1994676	0					
ANR	1994691	IdentifierDeclType	char *		1994676	0					
ANR	1994692	Identifier	s		1994676	1					
ANR	1994693	IdentifierDeclStatement	char * * argument = NULL ;	170:1:4476:4498	1994676	2	True				
ANR	1994694	IdentifierDecl	* * argument = NULL		1994676	0					
ANR	1994695	IdentifierDeclType	char * *		1994676	0					
ANR	1994696	Identifier	argument		1994676	1					
ANR	1994697	AssignmentExpression	* * argument = NULL		1994676	2		=			
ANR	1994698	Identifier	NULL		1994676	0					
ANR	1994699	Identifier	NULL		1994676	1					
ANR	1994700	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1994676	3					
ANR	1994701	ForInit	i = 1 ;	172:7:4530:4535	1994676	0	True				
ANR	1994702	AssignmentExpression	i = 1		1994676	0		=			
ANR	1994703	Identifier	i		1994676	0					
ANR	1994704	PrimaryExpression	1		1994676	1					
ANR	1994705	Condition	i < argc	172:14:4537:4544	1994676	1	True				
ANR	1994706	RelationalExpression	i < argc		1994676	0		<			
ANR	1994707	Identifier	i		1994676	0					
ANR	1994708	Identifier	argc		1994676	1					
ANR	1994709	PostIncDecOperationExpression	i ++	172:24:4547:4549	1994676	2	True				
ANR	1994710	Identifier	i		1994676	0					
ANR	1994711	IncDec	++		1994676	1					
ANR	1994712	CompoundStatement		7:30:140:140	1994676	3					
ANR	1994713	ExpressionStatement	s = argv [ i ]	174:2:4558:4569	1994676	0	True				
ANR	1994714	AssignmentExpression	s = argv [ i ]		1994676	0		=			
ANR	1994715	Identifier	s		1994676	0					
ANR	1994716	ArrayIndexing	argv [ i ]		1994676	1					
ANR	1994717	Identifier	argv		1994676	0					
ANR	1994718	Identifier	i		1994676	1					
ANR	1994719	IfStatement	if ( argument )		1994676	1					
ANR	1994720	Condition	argument	176:7:4579:4586	1994676	0	True				
ANR	1994721	Identifier	argument		1994676	0					
ANR	1994722	CompoundStatement		11:18:177:177	1994676	1					
ANR	1994723	ExpressionStatement	* argument = s	177:3:4595:4608	1994676	0	True				
ANR	1994724	AssignmentExpression	* argument = s		1994676	0		=			
ANR	1994725	UnaryOperationExpression	* argument		1994676	0					
ANR	1994726	UnaryOperator	*		1994676	0					
ANR	1994727	Identifier	argument		1994676	1					
ANR	1994728	Identifier	s		1994676	1					
ANR	1994729	ExpressionStatement	argument = NULL	178:3:4613:4628	1994676	1	True				
ANR	1994730	AssignmentExpression	argument = NULL		1994676	0		=			
ANR	1994731	Identifier	argument		1994676	0					
ANR	1994732	Identifier	NULL		1994676	1					
ANR	1994733	ContinueStatement	continue ;	179:3:4633:4641	1994676	2	True				
ANR	1994734	IfStatement	if ( ( '-' == * s ) && * ++ s )		1994676	2					
ANR	1994735	Condition	( '-' == * s ) && * ++ s	182:7:4655:4675	1994676	0	True				
ANR	1994736	AndExpression	( '-' == * s ) && * ++ s		1994676	0		&&			
ANR	1994737	EqualityExpression	'-' == * s		1994676	0		==			
ANR	1994738	PrimaryExpression	'-'		1994676	0					
ANR	1994739	UnaryOperationExpression	* s		1994676	1					
ANR	1994740	UnaryOperator	*		1994676	0					
ANR	1994741	Identifier	s		1994676	1					
ANR	1994742	UnaryOperationExpression	* ++ s		1994676	1					
ANR	1994743	UnaryOperator	*		1994676	0					
ANR	1994744	UnaryExpression	++ s		1994676	1					
ANR	1994745	IncDec	++		1994676	0					
ANR	1994746	Identifier	s		1994676	1					
ANR	1994747	CompoundStatement		17:31:266:266	1994676	1					
ANR	1994748	WhileStatement	while ( * s )		1994676	0					
ANR	1994749	Condition	* s	185:11:4729:4730	1994676	0	True				
ANR	1994750	UnaryOperationExpression	* s		1994676	0					
ANR	1994751	UnaryOperator	*		1994676	0					
ANR	1994752	Identifier	s		1994676	1					
ANR	1994753	CompoundStatement		20:16:321:321	1994676	1					
ANR	1994754	SwitchStatement	switch ( * s ++ )		1994676	0					
ANR	1994755	Condition	* s ++	188:13:4786:4789	1994676	0	True				
ANR	1994756	UnaryOperationExpression	* s ++		1994676	0					
ANR	1994757	UnaryOperator	*		1994676	0					
ANR	1994758	PostIncDecOperationExpression	s ++		1994676	1					
ANR	1994759	Identifier	s		1994676	0					
ANR	1994760	IncDec	++		1994676	1					
ANR	1994761	CompoundStatement		23:20:380:380	1994676	1					
ANR	1994762	Label	case 'd' :	189:5:4800:4808	1994676	0	True				
ANR	1994763	ExpressionStatement	enable_debug ( )	189:15:4810:4825	1994676	1	True				
ANR	1994764	CallExpression	enable_debug ( )		1994676	0					
ANR	1994765	Callee	enable_debug		1994676	0					
ANR	1994766	Identifier	enable_debug		1994676	0					
ANR	1994767	ArgumentList			1994676	1					
ANR	1994768	BreakStatement	break ;	189:34:4829:4834	1994676	2	True				
ANR	1994769	Label	case 'h' :	190:5:4841:4849	1994676	3	True				
ANR	1994770	ExpressionStatement	usage ( )	190:15:4851:4859	1994676	4	True				
ANR	1994771	CallExpression	usage ( )		1994676	0					
ANR	1994772	Callee	usage		1994676	0					
ANR	1994773	Identifier	usage		1994676	0					
ANR	1994774	ArgumentList			1994676	1					
ANR	1994775	BreakStatement	break ;	190:29:4865:4870	1994676	5	True				
ANR	1994776	Label	case 'i' :	191:5:4877:4885	1994676	6	True				
ANR	1994777	ExpressionStatement	stdio = true	191:15:4887:4899	1994676	7	True				
ANR	1994778	AssignmentExpression	stdio = true		1994676	0		=			
ANR	1994779	Identifier	stdio		1994676	0					
ANR	1994780	Identifier	true		1994676	1					
ANR	1994781	BreakStatement	break ;	191:32:4904:4909	1994676	8	True				
ANR	1994782	Label	case 'm' :	192:5:4916:4924	1994676	9	True				
ANR	1994783	ExpressionStatement	argument = & mac	192:15:4926:4941	1994676	10	True				
ANR	1994784	AssignmentExpression	argument = & mac		1994676	0		=			
ANR	1994785	Identifier	argument		1994676	0					
ANR	1994786	UnaryOperationExpression	& mac		1994676	1					
ANR	1994787	UnaryOperator	&		1994676	0					
ANR	1994788	Identifier	mac		1994676	1					
ANR	1994789	BreakStatement	break ;	192:34:4945:4950	1994676	11	True				
ANR	1994790	Label	case 'p' :	193:5:4957:4965	1994676	12	True				
ANR	1994791	ExpressionStatement	"port = ( int ) strtol ( s , & s , port )"	193:15:4967:5002	1994676	13	True				
ANR	1994792	AssignmentExpression	"port = ( int ) strtol ( s , & s , port )"		1994676	0		=			
ANR	1994793	Identifier	port		1994676	0					
ANR	1994794	CastExpression	"( int ) strtol ( s , & s , port )"		1994676	1					
ANR	1994795	CastTarget	int		1994676	0					
ANR	1994796	CallExpression	"strtol ( s , & s , port )"		1994676	1					
ANR	1994797	Callee	strtol		1994676	0					
ANR	1994798	Identifier	strtol		1994676	0					
ANR	1994799	ArgumentList	s		1994676	1					
ANR	1994800	Argument	s		1994676	0					
ANR	1994801	Identifier	s		1994676	0					
ANR	1994802	Argument	& s		1994676	1					
ANR	1994803	UnaryOperationExpression	& s		1994676	0					
ANR	1994804	UnaryOperator	&		1994676	0					
ANR	1994805	Identifier	s		1994676	1					
ANR	1994806	Argument	port		1994676	2					
ANR	1994807	Identifier	port		1994676	0					
ANR	1994808	BreakStatement	break ;	193:52:5004:5009	1994676	14	True				
ANR	1994809	Label	case 's' :	194:5:5016:5024	1994676	15	True				
ANR	1994810	ExpressionStatement	argument = & mask	194:15:5026:5042	1994676	16	True				
ANR	1994811	AssignmentExpression	argument = & mask		1994676	0		=			
ANR	1994812	Identifier	argument		1994676	0					
ANR	1994813	UnaryOperationExpression	& mask		1994676	1					
ANR	1994814	UnaryOperator	&		1994676	0					
ANR	1994815	Identifier	mask		1994676	1					
ANR	1994816	BreakStatement	break ;	194:35:5046:5051	1994676	17	True				
ANR	1994817	Label	default :	195:5:5058:5066	1994676	18	True				
ANR	1994818	Identifier	default		1994676	0					
ANR	1994819	ExpressionStatement	"error ( E_OPTION , * -- s )"	195:15:5068:5092	1994676	19	True				
ANR	1994820	CallExpression	"error ( E_OPTION , * -- s )"		1994676	0					
ANR	1994821	Callee	error		1994676	0					
ANR	1994822	Identifier	error		1994676	0					
ANR	1994823	ArgumentList	E_OPTION		1994676	1					
ANR	1994824	Argument	E_OPTION		1994676	0					
ANR	1994825	Identifier	E_OPTION		1994676	0					
ANR	1994826	Argument	* -- s		1994676	1					
ANR	1994827	UnaryOperationExpression	* -- s		1994676	0					
ANR	1994828	UnaryOperator	*		1994676	0					
ANR	1994829	UnaryExpression	-- s		1994676	1					
ANR	1994830	IncDec	--		1994676	0					
ANR	1994831	Identifier	s		1994676	1					
ANR	1994832	BreakStatement	break ;	195:41:5094:5099	1994676	20	True				
ANR	1994833	IfStatement	if ( argument && * s )		1994676	1					
ANR	1994834	Condition	argument && * s	199:9:5176:5189	1994676	0	True				
ANR	1994835	AndExpression	argument && * s		1994676	0		&&			
ANR	1994836	Identifier	argument		1994676	0					
ANR	1994837	UnaryOperationExpression	* s		1994676	1					
ANR	1994838	UnaryOperator	*		1994676	0					
ANR	1994839	Identifier	s		1994676	1					
ANR	1994840	CompoundStatement		34:26:780:780	1994676	1					
ANR	1994841	ExpressionStatement	* argument = s	200:5:5200:5213	1994676	0	True				
ANR	1994842	AssignmentExpression	* argument = s		1994676	0		=			
ANR	1994843	UnaryOperationExpression	* argument		1994676	0					
ANR	1994844	UnaryOperator	*		1994676	0					
ANR	1994845	Identifier	argument		1994676	1					
ANR	1994846	Identifier	s		1994676	1					
ANR	1994847	ExpressionStatement	argument = NULL	201:5:5220:5235	1994676	1	True				
ANR	1994848	AssignmentExpression	argument = NULL		1994676	0		=			
ANR	1994849	Identifier	argument		1994676	0					
ANR	1994850	Identifier	NULL		1994676	1					
ANR	1994851	BreakStatement	break ;	202:5:5242:5247	1994676	2	True				
ANR	1994852	ElseStatement	else		1994676	0					
ANR	1994853	CompoundStatement		42:9:858:858	1994676	0					
ANR	1994854	SwitchStatement	switch ( j ++ )		1994676	0					
ANR	1994855	Condition	j ++	210:12:5324:5326	1994676	0	True				
ANR	1994856	PostIncDecOperationExpression	j ++		1994676	0					
ANR	1994857	Identifier	j		1994676	0					
ANR	1994858	IncDec	++		1994676	1					
ANR	1994859	CompoundStatement		45:18:917:917	1994676	1					
ANR	1994860	Label	case 0 :	211:4:5336:5343	1994676	0	True				
ANR	1994861	ExpressionStatement	fn_in = s	211:13:5345:5355	1994676	1	True				
ANR	1994862	AssignmentExpression	fn_in = s		1994676	0		=			
ANR	1994863	Identifier	fn_in		1994676	0					
ANR	1994864	Identifier	s		1994676	1					
ANR	1994865	BreakStatement	break ;	211:27:5359:5364	1994676	2	True				
ANR	1994866	Label	case 1 :	212:4:5370:5377	1994676	3	True				
ANR	1994867	ExpressionStatement	fn_out = s	212:13:5379:5389	1994676	4	True				
ANR	1994868	AssignmentExpression	fn_out = s		1994676	0		=			
ANR	1994869	Identifier	fn_out		1994676	0					
ANR	1994870	Identifier	s		1994676	1					
ANR	1994871	BreakStatement	break ;	212:27:5393:5398	1994676	5	True				
ANR	1994872	Label	default :	213:4:5404:5411	1994676	6	True				
ANR	1994873	Identifier	default		1994676	0					
ANR	1994874	ExpressionStatement	error ( E_ARGCNT )	213:13:5413:5431	1994676	7	True				
ANR	1994875	CallExpression	error ( E_ARGCNT )		1994676	0					
ANR	1994876	Callee	error		1994676	0					
ANR	1994877	Identifier	error		1994676	0					
ANR	1994878	ArgumentList	E_ARGCNT		1994676	1					
ANR	1994879	Argument	E_ARGCNT		1994676	0					
ANR	1994880	Identifier	E_ARGCNT		1994676	0					
ANR	1994881	BreakStatement	break ;	213:33:5433:5438	1994676	8	True				
ANR	1994882	ReturnType	static void		1994676	1					
ANR	1994883	Identifier	parse_command_line		1994676	2					
ANR	1994884	ParameterList	"int argc , char * argv [ ]"		1994676	3					
ANR	1994885	Parameter	int argc	165:20:4387:4394	1994676	0	True				
ANR	1994886	ParameterType	int		1994676	0					
ANR	1994887	Identifier	argc		1994676	1					
ANR	1994888	Parameter	char * argv [ ]	165:30:4397:4408	1994676	1	True				
ANR	1994889	ParameterType	char * [ ]		1994676	0					
ANR	1994890	Identifier	argv		1994676	1					
ANR	1994891	CFGEntryNode	ENTRY		1994676		True				
ANR	1994892	CFGExitNode	EXIT		1994676		True				
ANR	1994893	Symbol	* s ++		1994676						
ANR	1994894	Symbol	argument		1994676						
ANR	1994895	Symbol	stdio		1994676						
ANR	1994896	Symbol	* argv		1994676						
ANR	1994897	Symbol	argv		1994676						
ANR	1994898	Symbol	E_OPTION		1994676						
ANR	1994899	Symbol	strtol		1994676						
ANR	1994900	Symbol	fn_out		1994676						
ANR	1994901	Symbol	argc		1994676						
ANR	1994902	Symbol	NULL		1994676						
ANR	1994903	Symbol	& mask		1994676						
ANR	1994904	Symbol	i		1994676						
ANR	1994905	Symbol	j		1994676						
ANR	1994906	Symbol	* argument		1994676						
ANR	1994907	Symbol	* -- s		1994676						
ANR	1994908	Symbol	* ++ s		1994676						
ANR	1994909	Symbol	fn_in		1994676						
ANR	1994910	Symbol	& mac		1994676						
ANR	1994911	Symbol	s		1994676						
ANR	1994912	Symbol	* i		1994676						
ANR	1994913	Symbol	port		1994676						
ANR	1994914	Symbol	true		1994676						
ANR	1994915	Symbol	& s		1994676						
ANR	1994916	Symbol	* s		1994676						
ANR	1994917	Symbol	E_ARGCNT		1994676						
ANR	1994918	Function	serialize_input	222:0:5458:6725							
ANR	1994919	FunctionDef	serialize_input ()		1994918	0					
ANR	1994920	CompoundStatement		224:0:5494:6725	1994918	0					
ANR	1994921	IdentifierDeclStatement	char sinful [ 16 + 10 ] ;	226:1:5498:5518	1994918	0	True				
ANR	1994922	IdentifierDecl	sinful [ 16 + 10 ]		1994918	0					
ANR	1994923	IdentifierDeclType	char [ 16 + 10 ]		1994918	0					
ANR	1994924	Identifier	sinful		1994918	1					
ANR	1994925	AdditiveExpression	16 + 10		1994918	2		+			
ANR	1994926	PrimaryExpression	16		1994918	0					
ANR	1994927	PrimaryExpression	10		1994918	1					
ANR	1994928	IdentifierDeclStatement	"int found_eof = 0 , found_error = 0 , empty = 0 ;"	227:1:5521:5576	1994918	1	True				
ANR	1994929	IdentifierDecl	found_eof = 0		1994918	0					
ANR	1994930	IdentifierDeclType	int		1994918	0					
ANR	1994931	Identifier	found_eof		1994918	1					
ANR	1994932	AssignmentExpression	found_eof = 0		1994918	2		=			
ANR	1994933	Identifier	found_eof		1994918	0					
ANR	1994934	PrimaryExpression	0		1994918	1					
ANR	1994935	IdentifierDecl	found_error = 0		1994918	1					
ANR	1994936	IdentifierDeclType	int		1994918	0					
ANR	1994937	Identifier	found_error		1994918	1					
ANR	1994938	AssignmentExpression	found_error = 0		1994918	2		=			
ANR	1994939	Identifier	found_error		1994918	0					
ANR	1994940	PrimaryExpression	0		1994918	1					
ANR	1994941	IdentifierDecl	empty = 0		1994918	2					
ANR	1994942	IdentifierDeclType	int		1994918	0					
ANR	1994943	Identifier	empty		1994918	1					
ANR	1994944	AssignmentExpression	empty = 0		1994918	2		=			
ANR	1994945	Identifier	empty		1994918	0					
ANR	1994946	PrimaryExpression	0		1994918	1					
ANR	1994947	IfStatement	if ( ! stdio )		1994918	2					
ANR	1994948	Condition	! stdio	233:6:5682:5687	1994918	0	True				
ANR	1994949	UnaryOperationExpression	! stdio		1994918	0					
ANR	1994950	UnaryOperator	!		1994918	0					
ANR	1994951	Identifier	stdio		1994918	1					
ANR	1994952	CompoundStatement		10:15:196:196	1994918	1					
ANR	1994953	ExpressionStatement	"sprintf ( sinful , ""<%s:1234>"" , my_ip_string ( ) )"	236:2:5754:5802	1994918	0	True				
ANR	1994954	CallExpression	"sprintf ( sinful , ""<%s:1234>"" , my_ip_string ( ) )"		1994918	0					
ANR	1994955	Callee	sprintf		1994918	0					
ANR	1994956	Identifier	sprintf		1994918	0					
ANR	1994957	ArgumentList	sinful		1994918	1					
ANR	1994958	Argument	sinful		1994918	0					
ANR	1994959	Identifier	sinful		1994918	0					
ANR	1994960	Argument	"""<%s:1234>"""		1994918	1					
ANR	1994961	PrimaryExpression	"""<%s:1234>"""		1994918	0					
ANR	1994962	Argument	my_ip_string ( )		1994918	2					
ANR	1994963	CallExpression	my_ip_string ( )		1994918	0					
ANR	1994964	Callee	my_ip_string		1994918	0					
ANR	1994965	Identifier	my_ip_string		1994918	0					
ANR	1994966	ArgumentList			1994918	1					
ANR	1994967	ExpressionStatement	ad = new ClassAd ( )	241:2:5948:5967	1994918	1	True				
ANR	1994968	AssignmentExpression	ad = new ClassAd ( )		1994918	0		=			
ANR	1994969	Identifier	ad		1994918	0					
ANR	1994970	UnaryExpression	new ClassAd ( )		1994918	1					
ANR	1994971	ExpressionStatement	ad -> SetMyTypeName ( STARTD_ADTYPE )	242:2:5971:6006	1994918	2	True				
ANR	1994972	CallExpression	ad -> SetMyTypeName ( STARTD_ADTYPE )		1994918	0					
ANR	1994973	Callee	ad -> SetMyTypeName		1994918	0					
ANR	1994974	PtrMemberAccess	ad -> SetMyTypeName		1994918	0					
ANR	1994975	Identifier	ad		1994918	0					
ANR	1994976	Identifier	SetMyTypeName		1994918	1					
ANR	1994977	ArgumentList	STARTD_ADTYPE		1994918	1					
ANR	1994978	Argument	STARTD_ADTYPE		1994918	0					
ANR	1994979	Identifier	STARTD_ADTYPE		1994918	0					
ANR	1994980	ExpressionStatement	ad -> SetTargetTypeName ( JOB_ADTYPE )	243:2:6010:6046	1994918	3	True				
ANR	1994981	CallExpression	ad -> SetTargetTypeName ( JOB_ADTYPE )		1994918	0					
ANR	1994982	Callee	ad -> SetTargetTypeName		1994918	0					
ANR	1994983	PtrMemberAccess	ad -> SetTargetTypeName		1994918	0					
ANR	1994984	Identifier	ad		1994918	0					
ANR	1994985	Identifier	SetTargetTypeName		1994918	1					
ANR	1994986	ArgumentList	JOB_ADTYPE		1994918	1					
ANR	1994987	Argument	JOB_ADTYPE		1994918	0					
ANR	1994988	Identifier	JOB_ADTYPE		1994918	0					
ANR	1994989	ExpressionStatement	"ad -> Assign ( ATTR_HARDWARE_ADDRESS , mac )"	244:2:6050:6091	1994918	4	True				
ANR	1994990	CallExpression	"ad -> Assign ( ATTR_HARDWARE_ADDRESS , mac )"		1994918	0					
ANR	1994991	Callee	ad -> Assign		1994918	0					
ANR	1994992	PtrMemberAccess	ad -> Assign		1994918	0					
ANR	1994993	Identifier	ad		1994918	0					
ANR	1994994	Identifier	Assign		1994918	1					
ANR	1994995	ArgumentList	ATTR_HARDWARE_ADDRESS		1994918	1					
ANR	1994996	Argument	ATTR_HARDWARE_ADDRESS		1994918	0					
ANR	1994997	Identifier	ATTR_HARDWARE_ADDRESS		1994918	0					
ANR	1994998	Argument	mac		1994918	1					
ANR	1994999	Identifier	mac		1994918	0					
ANR	1995000	ExpressionStatement	"ad -> Assign ( ATTR_SUBNET_MASK , mask )"	245:2:6095:6132	1994918	5	True				
ANR	1995001	CallExpression	"ad -> Assign ( ATTR_SUBNET_MASK , mask )"		1994918	0					
ANR	1995002	Callee	ad -> Assign		1994918	0					
ANR	1995003	PtrMemberAccess	ad -> Assign		1994918	0					
ANR	1995004	Identifier	ad		1994918	0					
ANR	1995005	Identifier	Assign		1994918	1					
ANR	1995006	ArgumentList	ATTR_SUBNET_MASK		1994918	1					
ANR	1995007	Argument	ATTR_SUBNET_MASK		1994918	0					
ANR	1995008	Identifier	ATTR_SUBNET_MASK		1994918	0					
ANR	1995009	Argument	mask		1994918	1					
ANR	1995010	Identifier	mask		1994918	0					
ANR	1995011	ExpressionStatement	"ad -> Assign ( ATTR_MY_ADDRESS , sinful )"	246:2:6136:6174	1994918	6	True				
ANR	1995012	CallExpression	"ad -> Assign ( ATTR_MY_ADDRESS , sinful )"		1994918	0					
ANR	1995013	Callee	ad -> Assign		1994918	0					
ANR	1995014	PtrMemberAccess	ad -> Assign		1994918	0					
ANR	1995015	Identifier	ad		1994918	0					
ANR	1995016	Identifier	Assign		1994918	1					
ANR	1995017	ArgumentList	ATTR_MY_ADDRESS		1994918	1					
ANR	1995018	Argument	ATTR_MY_ADDRESS		1994918	0					
ANR	1995019	Identifier	ATTR_MY_ADDRESS		1994918	0					
ANR	1995020	Argument	sinful		1994918	1					
ANR	1995021	Identifier	sinful		1994918	0					
ANR	1995022	ExpressionStatement	"ad -> Assign ( ATTR_WOL_PORT , port )"	247:2:6178:6212	1994918	7	True				
ANR	1995023	CallExpression	"ad -> Assign ( ATTR_WOL_PORT , port )"		1994918	0					
ANR	1995024	Callee	ad -> Assign		1994918	0					
ANR	1995025	PtrMemberAccess	ad -> Assign		1994918	0					
ANR	1995026	Identifier	ad		1994918	0					
ANR	1995027	Identifier	Assign		1994918	1					
ANR	1995028	ArgumentList	ATTR_WOL_PORT		1994918	1					
ANR	1995029	Argument	ATTR_WOL_PORT		1994918	0					
ANR	1995030	Identifier	ATTR_WOL_PORT		1994918	0					
ANR	1995031	Argument	port		1994918	1					
ANR	1995032	Identifier	port		1994918	0					
ANR	1995033	ElseStatement	else		1994918	0					
ANR	1995034	CompoundStatement		26:8:728:728	1994918	0					
ANR	1995035	IfStatement	if ( fn_in && * fn_in )		1994918	0					
ANR	1995036	Condition	fn_in && * fn_in	252:7:6289:6303	1994918	0	True				
ANR	1995037	AndExpression	fn_in && * fn_in		1994918	0		&&			
ANR	1995038	Identifier	fn_in		1994918	0					
ANR	1995039	UnaryOperationExpression	* fn_in		1994918	1					
ANR	1995040	UnaryOperator	*		1994918	0					
ANR	1995041	Identifier	fn_in		1994918	1					
ANR	1995042	CompoundStatement		29:25:812:812	1994918	1					
ANR	1995043	ExpressionStatement	"in = safe_fopen_wrapper ( fn_in , ""r"" )"	253:3:6312:6350	1994918	0	True				
ANR	1995044	AssignmentExpression	"in = safe_fopen_wrapper ( fn_in , ""r"" )"		1994918	0		=			
ANR	1995045	Identifier	in		1994918	0					
ANR	1995046	CallExpression	"safe_fopen_wrapper ( fn_in , ""r"" )"		1994918	1					
ANR	1995047	Callee	safe_fopen_wrapper		1994918	0					
ANR	1995048	Identifier	safe_fopen_wrapper		1994918	0					
ANR	1995049	ArgumentList	fn_in		1994918	1					
ANR	1995050	Argument	fn_in		1994918	0					
ANR	1995051	Identifier	fn_in		1994918	0					
ANR	1995052	Argument	"""r"""		1994918	1					
ANR	1995053	PrimaryExpression	"""r"""		1994918	0					
ANR	1995054	ElseStatement	else		1994918	0					
ANR	1995055	CompoundStatement		31:9:866:866	1994918	0					
ANR	1995056	ExpressionStatement	in = stdin	255:3:6366:6376	1994918	0	True				
ANR	1995057	AssignmentExpression	in = stdin		1994918	0		=			
ANR	1995058	Identifier	in		1994918	0					
ANR	1995059	Identifier	stdin		1994918	1					
ANR	1995060	ExpressionStatement	"fn_in = ""<stdin>"""	256:3:6381:6398	1994918	1	True				
ANR	1995061	AssignmentExpression	"fn_in = ""<stdin>"""		1994918	0		=			
ANR	1995062	Identifier	fn_in		1994918	0					
ANR	1995063	PrimaryExpression	"""<stdin>"""		1994918	1					
ANR	1995064	IfStatement	if ( ! in )		1994918	1					
ANR	1995065	Condition	! in	259:7:6412:6414	1994918	0	True				
ANR	1995066	UnaryOperationExpression	! in		1994918	0					
ANR	1995067	UnaryOperator	!		1994918	0					
ANR	1995068	Identifier	in		1994918	1					
ANR	1995069	CompoundStatement		36:13:923:923	1994918	1					
ANR	1995070	ExpressionStatement	"error ( E_FOPEN , fn_in , strerror ( errno ) , errno )"	260:3:6423:6474	1994918	0	True				
ANR	1995071	CallExpression	"error ( E_FOPEN , fn_in , strerror ( errno ) , errno )"		1994918	0					
ANR	1995072	Callee	error		1994918	0					
ANR	1995073	Identifier	error		1994918	0					
ANR	1995074	ArgumentList	E_FOPEN		1994918	1					
ANR	1995075	Argument	E_FOPEN		1994918	0					
ANR	1995076	Identifier	E_FOPEN		1994918	0					
ANR	1995077	Argument	fn_in		1994918	1					
ANR	1995078	Identifier	fn_in		1994918	0					
ANR	1995079	Argument	strerror ( errno )		1994918	2					
ANR	1995080	CallExpression	strerror ( errno )		1994918	0					
ANR	1995081	Callee	strerror		1994918	0					
ANR	1995082	Identifier	strerror		1994918	0					
ANR	1995083	ArgumentList	errno		1994918	1					
ANR	1995084	Argument	errno		1994918	0					
ANR	1995085	Identifier	errno		1994918	0					
ANR	1995086	Argument	errno		1994918	3					
ANR	1995087	Identifier	errno		1994918	0					
ANR	1995088	ExpressionStatement	"ad = new ClassAd ( in , ""?$#%^&*@"" , found_eof , found_error , empty )"	264:2:6529:6645	1994918	2	True				
ANR	1995089	AssignmentExpression	"ad = new ClassAd ( in , ""?$#%^&*@"" , found_eof , found_error , empty )"		1994918	0		=			
ANR	1995090	Identifier	ad		1994918	0					
ANR	1995091	Expression	"in , ""?$#%^&*@"" , found_eof , found_error , empty"		1994918	1					
ANR	1995092	Identifier	in		1994918	0					
ANR	1995093	Expression	"""?$#%^&*@"" , found_eof , found_error , empty"		1994918	1					
ANR	1995094	PrimaryExpression	"""?$#%^&*@"""		1994918	0					
ANR	1995095	Expression	"found_eof , found_error , empty"		1994918	1					
ANR	1995096	Identifier	found_eof		1994918	0					
ANR	1995097	Expression	"found_error , empty"		1994918	1					
ANR	1995098	Identifier	found_error		1994918	0					
ANR	1995099	Identifier	empty		1994918	1					
ANR	1995100	IfStatement	if ( found_error )		1994918	3					
ANR	1995101	Condition	found_error	271:7:6655:6665	1994918	0	True				
ANR	1995102	Identifier	found_error		1994918	0					
ANR	1995103	CompoundStatement		48:21:1174:1174	1994918	1					
ANR	1995104	ExpressionStatement	"error ( E_CLASSAD , found_error )"	272:3:6674:6714	1994918	0	True				
ANR	1995105	CallExpression	"error ( E_CLASSAD , found_error )"		1994918	0					
ANR	1995106	Callee	error		1994918	0					
ANR	1995107	Identifier	error		1994918	0					
ANR	1995108	ArgumentList	E_CLASSAD		1994918	1					
ANR	1995109	Argument	E_CLASSAD		1994918	0					
ANR	1995110	Identifier	E_CLASSAD		1994918	0					
ANR	1995111	Argument	found_error		1994918	1					
ANR	1995112	Identifier	found_error		1994918	0					
ANR	1995113	ReturnType	static void		1994918	1					
ANR	1995114	Identifier	serialize_input		1994918	2					
ANR	1995115	ParameterList			1994918	3					
ANR	1995116	CFGEntryNode	ENTRY		1994918		True				
ANR	1995117	CFGExitNode	EXIT		1994918		True				
ANR	1995118	Symbol	my_ip_string		1994918						
ANR	1995119	Symbol	stdin		1994918						
ANR	1995120	Symbol	stdio		1994918						
ANR	1995121	Symbol	found_error		1994918						
ANR	1995122	Symbol	ATTR_HARDWARE_ADDRESS		1994918						
ANR	1995123	Symbol	mac		1994918						
ANR	1995124	Symbol	empty		1994918						
ANR	1995125	Symbol	ATTR_WOL_PORT		1994918						
ANR	1995126	Symbol	STARTD_ADTYPE		1994918						
ANR	1995127	Symbol	JOB_ADTYPE		1994918						
ANR	1995128	Symbol	ATTR_MY_ADDRESS		1994918						
ANR	1995129	Symbol	sinful		1994918						
ANR	1995130	Symbol	mask		1994918						
ANR	1995131	Symbol	errno		1994918						
ANR	1995132	Symbol	ad		1994918						
ANR	1995133	Symbol	safe_fopen_wrapper		1994918						
ANR	1995134	Symbol	in		1994918						
ANR	1995135	Symbol	fn_in		1994918						
ANR	1995136	Symbol	E_CLASSAD		1994918						
ANR	1995137	Symbol	strerror		1994918						
ANR	1995138	Symbol	port		1994918						
ANR	1995139	Symbol	* fn_in		1994918						
ANR	1995140	Symbol	found_eof		1994918						
ANR	1995141	Symbol	ATTR_SUBNET_MASK		1994918						
ANR	1995142	Symbol	E_FOPEN		1994918						
ANR	1995143	Function	wake_machine	281:0:6728:7053							
ANR	1995144	FunctionDef	wake_machine ()		1995143	0					
ANR	1995145	CompoundStatement		283:0:6761:7053	1995143	0					
ANR	1995146	ExpressionStatement	waker = WakerBase :: createWaker ( ad )	286:1:6802:6839	1995143	0	True				
ANR	1995147	AssignmentExpression	waker = WakerBase :: createWaker ( ad )		1995143	0		=			
ANR	1995148	Identifier	waker		1995143	0					
ANR	1995149	CallExpression	WakerBase :: createWaker ( ad )		1995143	1					
ANR	1995150	Callee	WakerBase :: createWaker		1995143	0					
ANR	1995151	Identifier	WakerBase :: createWaker		1995143	0					
ANR	1995152	ArgumentList	ad		1995143	1					
ANR	1995153	Argument	ad		1995143	0					
ANR	1995154	Identifier	ad		1995143	0					
ANR	1995155	IfStatement	if ( ! waker )		1995143	1					
ANR	1995156	Condition	! waker	288:6:6848:6853	1995143	0	True				
ANR	1995157	UnaryOperationExpression	! waker		1995143	0					
ANR	1995158	UnaryOperator	!		1995143	0					
ANR	1995159	Identifier	waker		1995143	1					
ANR	1995160	CompoundStatement		6:15:95:95	1995143	1					
ANR	1995161	ExpressionStatement	"error ( E_NOMEM , ""waker object."" )"	289:2:6861:6894	1995143	0	True				
ANR	1995162	CallExpression	"error ( E_NOMEM , ""waker object."" )"		1995143	0					
ANR	1995163	Callee	error		1995143	0					
ANR	1995164	Identifier	error		1995143	0					
ANR	1995165	ArgumentList	E_NOMEM		1995143	1					
ANR	1995166	Argument	E_NOMEM		1995143	0					
ANR	1995167	Identifier	E_NOMEM		1995143	0					
ANR	1995168	Argument	"""waker object."""		1995143	1					
ANR	1995169	PrimaryExpression	"""waker object."""		1995143	0					
ANR	1995170	IfStatement	if ( ! waker -> doWake ( ) )		1995143	2					
ANR	1995171	Condition	! waker -> doWake ( )	293:6:6949:6965	1995143	0	True				
ANR	1995172	UnaryOperationExpression	! waker -> doWake ( )		1995143	0					
ANR	1995173	UnaryOperator	!		1995143	0					
ANR	1995174	CallExpression	waker -> doWake ( )		1995143	1					
ANR	1995175	Callee	waker -> doWake		1995143	0					
ANR	1995176	PtrMemberAccess	waker -> doWake		1995143	0					
ANR	1995177	Identifier	waker		1995143	0					
ANR	1995178	Identifier	doWake		1995143	1					
ANR	1995179	ArgumentList			1995143	1					
ANR	1995180	CompoundStatement		11:26:207:207	1995143	1					
ANR	1995181	ExpressionStatement	error ( E_NOWAKE )	294:2:6973:6991	1995143	0	True				
ANR	1995182	CallExpression	error ( E_NOWAKE )		1995143	0					
ANR	1995183	Callee	error		1995143	0					
ANR	1995184	Identifier	error		1995143	0					
ANR	1995185	ArgumentList	E_NOWAKE		1995143	1					
ANR	1995186	Argument	E_NOWAKE		1995143	0					
ANR	1995187	Identifier	E_NOWAKE		1995143	0					
ANR	1995188	ExpressionStatement	"fprintf ( stderr , ""Packet sent.\\n"" )"	297:1:6998:7034	1995143	3	True				
ANR	1995189	CallExpression	"fprintf ( stderr , ""Packet sent.\\n"" )"		1995143	0					
ANR	1995190	Callee	fprintf		1995143	0					
ANR	1995191	Identifier	fprintf		1995143	0					
ANR	1995192	ArgumentList	stderr		1995143	1					
ANR	1995193	Argument	stderr		1995143	0					
ANR	1995194	Identifier	stderr		1995143	0					
ANR	1995195	Argument	"""Packet sent.\\n"""		1995143	1					
ANR	1995196	PrimaryExpression	"""Packet sent.\\n"""		1995143	0					
ANR	1995197	Statement	delete	299:1:7038:7043	1995143	4	True				
ANR	1995198	ExpressionStatement	waker	299:8:7045:7050	1995143	5	True				
ANR	1995199	Identifier	waker		1995143	0					
ANR	1995200	ReturnType	static void		1995143	1					
ANR	1995201	Identifier	wake_machine		1995143	2					
ANR	1995202	ParameterList			1995143	3					
ANR	1995203	CFGEntryNode	ENTRY		1995143		True				
ANR	1995204	CFGExitNode	EXIT		1995143		True				
ANR	1995205	Symbol	E_NOMEM		1995143						
ANR	1995206	Symbol	ad		1995143						
ANR	1995207	Symbol	* waker		1995143						
ANR	1995208	Symbol	E_NOWAKE		1995143						
ANR	1995209	Symbol	waker		1995143						
ANR	1995210	Symbol	waker -> doWake		1995143						
ANR	1995211	Symbol	stderr		1995143						
ANR	1995212	Symbol	WakerBase :: createWaker		1995143						
ANR	1995213	Function	main	303:0:7056:7403							
ANR	1995214	FunctionDef	"main (int argc , char * argv [ ])"		1995213	0					
ANR	1995215	CompoundStatement		305:0:7091:7403	1995213	0					
ANR	1995216	ExpressionStatement	name = condor_basename ( argv [ 0 ] )	308:1:7131:7165	1995213	0	True				
ANR	1995217	AssignmentExpression	name = condor_basename ( argv [ 0 ] )		1995213	0		=			
ANR	1995218	Identifier	name		1995213	0					
ANR	1995219	CallExpression	condor_basename ( argv [ 0 ] )		1995213	1					
ANR	1995220	Callee	condor_basename		1995213	0					
ANR	1995221	Identifier	condor_basename		1995213	0					
ANR	1995222	ArgumentList	argv [ 0 ]		1995213	1					
ANR	1995223	Argument	argv [ 0 ]		1995213	0					
ANR	1995224	ArrayIndexing	argv [ 0 ]		1995213	0					
ANR	1995225	Identifier	argv		1995213	0					
ANR	1995226	PrimaryExpression	0		1995213	1					
ANR	1995227	IfStatement	if ( ! name )		1995213	1					
ANR	1995228	Condition	! name	309:6:7173:7177	1995213	0	True				
ANR	1995229	UnaryOperationExpression	! name		1995213	0					
ANR	1995230	UnaryOperator	!		1995213	0					
ANR	1995231	Identifier	name		1995213	1					
ANR	1995232	CompoundStatement		5:14:89:89	1995213	1					
ANR	1995233	ExpressionStatement	name = argv [ 0 ]	310:2:7185:7199	1995213	0	True				
ANR	1995234	AssignmentExpression	name = argv [ 0 ]		1995213	0		=			
ANR	1995235	Identifier	name		1995213	0					
ANR	1995236	ArrayIndexing	argv [ 0 ]		1995213	1					
ANR	1995237	Identifier	argv		1995213	0					
ANR	1995238	PrimaryExpression	0		1995213	1					
ANR	1995239	ExpressionStatement	"parse_command_line ( argc , argv )"	314:1:7267:7300	1995213	2	True				
ANR	1995240	CallExpression	"parse_command_line ( argc , argv )"		1995213	0					
ANR	1995241	Callee	parse_command_line		1995213	0					
ANR	1995242	Identifier	parse_command_line		1995213	0					
ANR	1995243	ArgumentList	argc		1995213	1					
ANR	1995244	Argument	argc		1995213	0					
ANR	1995245	Identifier	argc		1995213	0					
ANR	1995246	Argument	argv		1995213	1					
ANR	1995247	Identifier	argv		1995213	0					
ANR	1995248	ExpressionStatement	serialize_input ( )	317:1:7334:7352	1995213	3	True				
ANR	1995249	CallExpression	serialize_input ( )		1995213	0					
ANR	1995250	Callee	serialize_input		1995213	0					
ANR	1995251	Identifier	serialize_input		1995213	0					
ANR	1995252	ArgumentList			1995213	1					
ANR	1995253	IfStatement	if ( ad )		1995213	4					
ANR	1995254	Condition	ad	319:6:7361:7362	1995213	0	True				
ANR	1995255	Identifier	ad		1995213	0					
ANR	1995256	CompoundStatement		15:11:274:274	1995213	1					
ANR	1995257	ExpressionStatement	wake_machine ( )	320:2:7370:7385	1995213	0	True				
ANR	1995258	CallExpression	wake_machine ( )		1995213	0					
ANR	1995259	Callee	wake_machine		1995213	0					
ANR	1995260	Identifier	wake_machine		1995213	0					
ANR	1995261	ArgumentList			1995213	1					
ANR	1995262	ReturnStatement	return 0 ;	323:1:7392:7400	1995213	5	True				
ANR	1995263	PrimaryExpression	0		1995213	0					
ANR	1995264	ReturnType	int		1995213	1					
ANR	1995265	Identifier	main		1995213	2					
ANR	1995266	ParameterList	"int argc , char * argv [ ]"		1995213	3					
ANR	1995267	Parameter	int argc	304:6:7066:7073	1995213	0	True				
ANR	1995268	ParameterType	int		1995213	0					
ANR	1995269	Identifier	argc		1995213	1					
ANR	1995270	Parameter	char * argv [ ]	304:16:7076:7087	1995213	1	True				
ANR	1995271	ParameterType	char * [ ]		1995213	0					
ANR	1995272	Identifier	argv		1995213	1					
ANR	1995273	CFGEntryNode	ENTRY		1995213		True				
ANR	1995274	CFGExitNode	EXIT		1995213		True				
ANR	1995275	Symbol	argc		1995213						
ANR	1995276	Symbol	ad		1995213						
ANR	1995277	Symbol	name		1995213						
ANR	1995278	Symbol	* argv		1995213						
ANR	1995279	Symbol	argv		1995213						
ANR	1995280	Symbol	condor_basename		1995213						
