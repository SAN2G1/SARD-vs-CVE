command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5016206	File	data/converged/CVE-2011-4930_htcondor/src_condor_vm-gahp_pbuffer.cpp								
ANR	5016207	Function	PBuffer :: PBuffer	28:0:968:1222							
ANR	5016208	FunctionDef	PBuffer :: PBuffer (int _pipe_end)		5016207	0					
ANR	5016209	CompoundStatement		28:33:1001:1222	5016207	0					
ANR	5016210	ExpressionStatement	pipe_end = _pipe_end	29:1:1004:1024	5016207	0	True				
ANR	5016211	AssignmentExpression	pipe_end = _pipe_end		5016207	0		=			
ANR	5016212	Identifier	pipe_end		5016207	0					
ANR	5016213	Identifier	_pipe_end		5016207	1					
ANR	5016214	ExpressionStatement	buffer . reserve ( 5000 )	30:2:1028:1048	5016207	1	True				
ANR	5016215	CallExpression	buffer . reserve ( 5000 )		5016207	0					
ANR	5016216	Callee	buffer . reserve		5016207	0					
ANR	5016217	MemberAccess	buffer . reserve		5016207	0					
ANR	5016218	Identifier	buffer		5016207	0					
ANR	5016219	Identifier	reserve		5016207	1					
ANR	5016220	ArgumentList	5000		5016207	1					
ANR	5016221	Argument	5000		5016207	0					
ANR	5016222	PrimaryExpression	5000		5016207	0					
ANR	5016223	ExpressionStatement	error = false	31:1:1051:1064	5016207	2	True				
ANR	5016224	AssignmentExpression	error = false		5016207	0		=			
ANR	5016225	Identifier	error		5016207	0					
ANR	5016226	Identifier	false		5016207	1					
ANR	5016227	ExpressionStatement	eof = false	32:1:1067:1078	5016207	3	True				
ANR	5016228	AssignmentExpression	eof = false		5016207	0		=			
ANR	5016229	Identifier	eof		5016207	0					
ANR	5016230	Identifier	false		5016207	1					
ANR	5016231	ExpressionStatement	last_char_was_escape = false	33:1:1081:1109	5016207	4	True				
ANR	5016232	AssignmentExpression	last_char_was_escape = false		5016207	0		=			
ANR	5016233	Identifier	last_char_was_escape		5016207	0					
ANR	5016234	Identifier	false		5016207	1					
ANR	5016235	ExpressionStatement	readahead_length = 0	34:1:1112:1132	5016207	5	True				
ANR	5016236	AssignmentExpression	readahead_length = 0		5016207	0		=			
ANR	5016237	Identifier	readahead_length		5016207	0					
ANR	5016238	PrimaryExpression	0		5016207	1					
ANR	5016239	ExpressionStatement	readahead_index = - 1	35:1:1135:1155	5016207	6	True				
ANR	5016240	AssignmentExpression	readahead_index = - 1		5016207	0		=			
ANR	5016241	Identifier	readahead_index		5016207	0					
ANR	5016242	UnaryOperationExpression	- 1		5016207	1					
ANR	5016243	UnaryOperator	-		5016207	0					
ANR	5016244	PrimaryExpression	1		5016207	1					
ANR	5016245	ExpressionStatement	"memset ( ( void * ) readahead_buffer , 0 , P_BUFFER_READAHEAD_SIZE )"	36:1:1158:1219	5016207	7	True				
ANR	5016246	CallExpression	"memset ( ( void * ) readahead_buffer , 0 , P_BUFFER_READAHEAD_SIZE )"		5016207	0					
ANR	5016247	Callee	memset		5016207	0					
ANR	5016248	Identifier	memset		5016207	0					
ANR	5016249	ArgumentList	( void * ) readahead_buffer		5016207	1					
ANR	5016250	Argument	( void * ) readahead_buffer		5016207	0					
ANR	5016251	CastExpression	( void * ) readahead_buffer		5016207	0					
ANR	5016252	CastTarget	void *		5016207	0					
ANR	5016253	Identifier	readahead_buffer		5016207	1					
ANR	5016254	Argument	0		5016207	1					
ANR	5016255	PrimaryExpression	0		5016207	0					
ANR	5016256	Argument	P_BUFFER_READAHEAD_SIZE		5016207	2					
ANR	5016257	Identifier	P_BUFFER_READAHEAD_SIZE		5016207	0					
ANR	5016258	Identifier	PBuffer :: PBuffer		5016207	1					
ANR	5016259	ParameterList	int _pipe_end		5016207	2					
ANR	5016260	Parameter	int _pipe_end	28:18:986:998	5016207	0	True				
ANR	5016261	ParameterType	int		5016207	0					
ANR	5016262	Identifier	_pipe_end		5016207	1					
ANR	5016263	CFGEntryNode	ENTRY		5016207		True				
ANR	5016264	CFGExitNode	EXIT		5016207		True				
ANR	5016265	Symbol	P_BUFFER_READAHEAD_SIZE		5016207						
ANR	5016266	Symbol	pipe_end		5016207						
ANR	5016267	Symbol	last_char_was_escape		5016207						
ANR	5016268	Symbol	_pipe_end		5016207						
ANR	5016269	Symbol	false		5016207						
ANR	5016270	Symbol	readahead_index		5016207						
ANR	5016271	Symbol	readahead_buffer		5016207						
ANR	5016272	Symbol	buffer		5016207						
ANR	5016273	Symbol	readahead_length		5016207						
ANR	5016274	Symbol	error		5016207						
ANR	5016275	Symbol	eof		5016207						
ANR	5016276	Function	PBuffer :: PBuffer	40:0:1225:1457							
ANR	5016277	FunctionDef	PBuffer :: PBuffer ()		5016276	0					
ANR	5016278	CompoundStatement		40:19:1244:1457	5016276	0					
ANR	5016279	ExpressionStatement	pipe_end = - 1	41:1:1247:1260	5016276	0	True				
ANR	5016280	AssignmentExpression	pipe_end = - 1		5016276	0		=			
ANR	5016281	Identifier	pipe_end		5016276	0					
ANR	5016282	UnaryOperationExpression	- 1		5016276	1					
ANR	5016283	UnaryOperator	-		5016276	0					
ANR	5016284	PrimaryExpression	1		5016276	1					
ANR	5016285	ExpressionStatement	buffer . reserve ( 5000 )	42:2:1264:1284	5016276	1	True				
ANR	5016286	CallExpression	buffer . reserve ( 5000 )		5016276	0					
ANR	5016287	Callee	buffer . reserve		5016276	0					
ANR	5016288	MemberAccess	buffer . reserve		5016276	0					
ANR	5016289	Identifier	buffer		5016276	0					
ANR	5016290	Identifier	reserve		5016276	1					
ANR	5016291	ArgumentList	5000		5016276	1					
ANR	5016292	Argument	5000		5016276	0					
ANR	5016293	PrimaryExpression	5000		5016276	0					
ANR	5016294	ExpressionStatement	error = false	43:1:1287:1300	5016276	2	True				
ANR	5016295	AssignmentExpression	error = false		5016276	0		=			
ANR	5016296	Identifier	error		5016276	0					
ANR	5016297	Identifier	false		5016276	1					
ANR	5016298	ExpressionStatement	eof = false	44:1:1303:1314	5016276	3	True				
ANR	5016299	AssignmentExpression	eof = false		5016276	0		=			
ANR	5016300	Identifier	eof		5016276	0					
ANR	5016301	Identifier	false		5016276	1					
ANR	5016302	ExpressionStatement	last_char_was_escape = false	45:1:1317:1345	5016276	4	True				
ANR	5016303	AssignmentExpression	last_char_was_escape = false		5016276	0		=			
ANR	5016304	Identifier	last_char_was_escape		5016276	0					
ANR	5016305	Identifier	false		5016276	1					
ANR	5016306	ExpressionStatement	readahead_length = 0	46:1:1348:1368	5016276	5	True				
ANR	5016307	AssignmentExpression	readahead_length = 0		5016276	0		=			
ANR	5016308	Identifier	readahead_length		5016276	0					
ANR	5016309	PrimaryExpression	0		5016276	1					
ANR	5016310	ExpressionStatement	readahead_index = - 1	47:1:1371:1391	5016276	6	True				
ANR	5016311	AssignmentExpression	readahead_index = - 1		5016276	0		=			
ANR	5016312	Identifier	readahead_index		5016276	0					
ANR	5016313	UnaryOperationExpression	- 1		5016276	1					
ANR	5016314	UnaryOperator	-		5016276	0					
ANR	5016315	PrimaryExpression	1		5016276	1					
ANR	5016316	ExpressionStatement	"memset ( ( void * ) readahead_buffer , 0 , P_BUFFER_READAHEAD_SIZE )"	48:1:1394:1455	5016276	7	True				
ANR	5016317	CallExpression	"memset ( ( void * ) readahead_buffer , 0 , P_BUFFER_READAHEAD_SIZE )"		5016276	0					
ANR	5016318	Callee	memset		5016276	0					
ANR	5016319	Identifier	memset		5016276	0					
ANR	5016320	ArgumentList	( void * ) readahead_buffer		5016276	1					
ANR	5016321	Argument	( void * ) readahead_buffer		5016276	0					
ANR	5016322	CastExpression	( void * ) readahead_buffer		5016276	0					
ANR	5016323	CastTarget	void *		5016276	0					
ANR	5016324	Identifier	readahead_buffer		5016276	1					
ANR	5016325	Argument	0		5016276	1					
ANR	5016326	PrimaryExpression	0		5016276	0					
ANR	5016327	Argument	P_BUFFER_READAHEAD_SIZE		5016276	2					
ANR	5016328	Identifier	P_BUFFER_READAHEAD_SIZE		5016276	0					
ANR	5016329	Identifier	PBuffer :: PBuffer		5016276	1					
ANR	5016330	ParameterList			5016276	2					
ANR	5016331	CFGEntryNode	ENTRY		5016276		True				
ANR	5016332	CFGExitNode	EXIT		5016276		True				
ANR	5016333	Symbol	P_BUFFER_READAHEAD_SIZE		5016276						
ANR	5016334	Symbol	pipe_end		5016276						
ANR	5016335	Symbol	last_char_was_escape		5016276						
ANR	5016336	Symbol	false		5016276						
ANR	5016337	Symbol	readahead_index		5016276						
ANR	5016338	Symbol	readahead_buffer		5016276						
ANR	5016339	Symbol	buffer		5016276						
ANR	5016340	Symbol	readahead_length		5016276						
ANR	5016341	Symbol	error		5016276						
ANR	5016342	Symbol	eof		5016276						
ANR	5016343	Function	PBuffer :: GetNextLine	51:0:1460:2876							
ANR	5016344	FunctionDef	PBuffer :: GetNextLine ()		5016343	0					
ANR	5016345	CompoundStatement		52:24:1495:2876	5016343	0					
ANR	5016346	IfStatement	if ( pipe_end == - 1 )		5016343	0					
ANR	5016347	Condition	pipe_end == - 1	53:5:1502:1515	5016343	0	True				
ANR	5016348	EqualityExpression	pipe_end == - 1		5016343	0		==			
ANR	5016349	Identifier	pipe_end		5016343	0					
ANR	5016350	UnaryOperationExpression	- 1		5016343	1					
ANR	5016351	UnaryOperator	-		5016343	0					
ANR	5016352	PrimaryExpression	1		5016343	1					
ANR	5016353	CompoundStatement		2:22:23:23	5016343	1					
ANR	5016354	ExpressionStatement	error = true	54:2:1523:1535	5016343	0	True				
ANR	5016355	AssignmentExpression	error = true		5016343	0		=			
ANR	5016356	Identifier	error		5016343	0					
ANR	5016357	Identifier	true		5016343	1					
ANR	5016358	ReturnStatement	return NULL ;	55:2:1539:1550	5016343	1	True				
ANR	5016359	Identifier	NULL		5016343	0					
ANR	5016360	IfStatement	if ( readahead_length == 0 )		5016343	1					
ANR	5016361	Condition	readahead_length == 0	58:5:1617:1637	5016343	0	True				
ANR	5016362	EqualityExpression	readahead_length == 0		5016343	0		==			
ANR	5016363	Identifier	readahead_length		5016343	0					
ANR	5016364	PrimaryExpression	0		5016343	1					
ANR	5016365	CompoundStatement		7:28:144:144	5016343	1					
ANR	5016366	ExpressionStatement	"readahead_length = daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , P_BUFFER_READAHEAD_SIZE )"	60:2:1698:1796	5016343	0	True				
ANR	5016367	AssignmentExpression	"readahead_length = daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , P_BUFFER_READAHEAD_SIZE )"		5016343	0		=			
ANR	5016368	Identifier	readahead_length		5016343	0					
ANR	5016369	CallExpression	"daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , P_BUFFER_READAHEAD_SIZE )"		5016343	1					
ANR	5016370	Callee	daemonCore -> Read_Pipe		5016343	0					
ANR	5016371	PtrMemberAccess	daemonCore -> Read_Pipe		5016343	0					
ANR	5016372	Identifier	daemonCore		5016343	0					
ANR	5016373	Identifier	Read_Pipe		5016343	1					
ANR	5016374	ArgumentList	pipe_end		5016343	1					
ANR	5016375	Argument	pipe_end		5016343	0					
ANR	5016376	Identifier	pipe_end		5016343	0					
ANR	5016377	Argument	readahead_buffer		5016343	1					
ANR	5016378	Identifier	readahead_buffer		5016343	0					
ANR	5016379	Argument	P_BUFFER_READAHEAD_SIZE		5016343	2					
ANR	5016380	Identifier	P_BUFFER_READAHEAD_SIZE		5016343	0					
ANR	5016381	IfStatement	if ( readahead_length < 0 )		5016343	1					
ANR	5016382	Condition	readahead_length < 0	62:6:1804:1823	5016343	0	True				
ANR	5016383	RelationalExpression	readahead_length < 0		5016343	0		<			
ANR	5016384	Identifier	readahead_length		5016343	0					
ANR	5016385	PrimaryExpression	0		5016343	1					
ANR	5016386	CompoundStatement		11:28:330:330	5016343	1					
ANR	5016387	IfStatement	if ( ( errno != EAGAIN ) && ( errno != EWOULDBLOCK ) )		5016343	0					
ANR	5016388	Condition	( errno != EAGAIN ) && ( errno != EWOULDBLOCK )	63:7:1835:1877	5016343	0	True				
ANR	5016389	AndExpression	( errno != EAGAIN ) && ( errno != EWOULDBLOCK )		5016343	0		&&			
ANR	5016390	EqualityExpression	errno != EAGAIN		5016343	0		!=			
ANR	5016391	Identifier	errno		5016343	0					
ANR	5016392	Identifier	EAGAIN		5016343	1					
ANR	5016393	EqualityExpression	errno != EWOULDBLOCK		5016343	1		!=			
ANR	5016394	Identifier	errno		5016343	0					
ANR	5016395	Identifier	EWOULDBLOCK		5016343	1					
ANR	5016396	CompoundStatement		12:53:385:385	5016343	1					
ANR	5016397	ExpressionStatement	error = true	64:4:1887:1899	5016343	0	True				
ANR	5016398	AssignmentExpression	error = true		5016343	0		=			
ANR	5016399	Identifier	error		5016343	0					
ANR	5016400	Identifier	true		5016343	1					
ANR	5016401	Statement	vmprintf	65:4:1905:1912	5016343	1	True				
ANR	5016402	Statement	(	65:12:1913:1913	5016343	2	True				
ANR	5016403	Statement	D_ALWAYS	65:13:1914:1921	5016343	3	True				
ANR	5016404	Statement	","	65:21:1922:1922	5016343	4	True				
ANR	5016405	Statement	"""error reading from DaemonCore """	65:23:1924:1955	5016343	5	True				
ANR	5016406	Statement	"""pipe %d\\n"""	66:6:1963:1973	5016343	6	True				
ANR	5016407	Statement	","	66:17:1974:1974	5016343	7	True				
ANR	5016408	Statement	pipe_end	66:19:1976:1983	5016343	8	True				
ANR	5016409	Statement	)	66:27:1984:1984	5016343	9	True				
ANR	5016410	ExpressionStatement		66:28:1985:1985	5016343	10	True				
ANR	5016411	ReturnStatement	return NULL ;	68:3:1995:2006	5016343	1	True				
ANR	5016412	Identifier	NULL		5016343	0					
ANR	5016413	IfStatement	if ( readahead_length == 0 )		5016343	2					
ANR	5016414	Condition	readahead_length == 0	70:6:2018:2038	5016343	0	True				
ANR	5016415	EqualityExpression	readahead_length == 0		5016343	0		==			
ANR	5016416	Identifier	readahead_length		5016343	0					
ANR	5016417	PrimaryExpression	0		5016343	1					
ANR	5016418	CompoundStatement		19:29:545:545	5016343	1					
ANR	5016419	ExpressionStatement	eof = true	71:3:2046:2056	5016343	0	True				
ANR	5016420	AssignmentExpression	eof = true		5016343	0		=			
ANR	5016421	Identifier	eof		5016343	0					
ANR	5016422	Identifier	true		5016343	1					
ANR	5016423	ExpressionStatement	"vmprintf ( D_ALWAYS , ""EOF reached on DaemonCore pipe %d\\n"" , pipe_end )"	72:3:2061:2134	5016343	1	True				
ANR	5016424	CallExpression	"vmprintf ( D_ALWAYS , ""EOF reached on DaemonCore pipe %d\\n"" , pipe_end )"		5016343	0					
ANR	5016425	Callee	vmprintf		5016343	0					
ANR	5016426	Identifier	vmprintf		5016343	0					
ANR	5016427	ArgumentList	D_ALWAYS		5016343	1					
ANR	5016428	Argument	D_ALWAYS		5016343	0					
ANR	5016429	Identifier	D_ALWAYS		5016343	0					
ANR	5016430	Argument	"""EOF reached on DaemonCore pipe %d\\n"""		5016343	1					
ANR	5016431	PrimaryExpression	"""EOF reached on DaemonCore pipe %d\\n"""		5016343	0					
ANR	5016432	Argument	pipe_end		5016343	2					
ANR	5016433	Identifier	pipe_end		5016343	0					
ANR	5016434	ReturnStatement	return NULL ;	74:3:2139:2150	5016343	2	True				
ANR	5016435	Identifier	NULL		5016343	0					
ANR	5016436	ExpressionStatement	readahead_index = 0	79:2:2238:2257	5016343	3	True				
ANR	5016437	AssignmentExpression	readahead_index = 0		5016343	0		=			
ANR	5016438	Identifier	readahead_index		5016343	0					
ANR	5016439	PrimaryExpression	0		5016343	1					
ANR	5016440	WhileStatement	while ( readahead_index != readahead_length )		5016343	2					
ANR	5016441	Condition	readahead_index != readahead_length	82:8:2271:2305	5016343	0	True				
ANR	5016442	EqualityExpression	readahead_index != readahead_length		5016343	0		!=			
ANR	5016443	Identifier	readahead_index		5016343	0					
ANR	5016444	Identifier	readahead_length		5016343	1					
ANR	5016445	CompoundStatement		33:2:817:861	5016343	1					
ANR	5016446	IdentifierDeclStatement	char c = readahead_buffer [ readahead_index ++ ] ;	84:2:2313:2357	5016343	0	True				
ANR	5016447	IdentifierDecl	c = readahead_buffer [ readahead_index ++ ]		5016343	0					
ANR	5016448	IdentifierDeclType	char		5016343	0					
ANR	5016449	Identifier	c		5016343	1					
ANR	5016450	AssignmentExpression	c = readahead_buffer [ readahead_index ++ ]		5016343	2		=			
ANR	5016451	Identifier	c		5016343	0					
ANR	5016452	ArrayIndexing	readahead_buffer [ readahead_index ++ ]		5016343	1					
ANR	5016453	Identifier	readahead_buffer		5016343	0					
ANR	5016454	PostIncDecOperationExpression	readahead_index ++		5016343	1					
ANR	5016455	Identifier	readahead_index		5016343	0					
ANR	5016456	IncDec	++		5016343	1					
ANR	5016457	IfStatement	if ( c == '\\n' && ! last_char_was_escape )		5016343	1					
ANR	5016458	Condition	c == '\\n' && ! last_char_was_escape	86:6:2366:2399	5016343	0	True				
ANR	5016459	AndExpression	c == '\\n' && ! last_char_was_escape		5016343	0		&&			
ANR	5016460	EqualityExpression	c == '\\n'		5016343	0		==			
ANR	5016461	Identifier	c		5016343	0					
ANR	5016462	PrimaryExpression	'\\n'		5016343	1					
ANR	5016463	UnaryOperationExpression	! last_char_was_escape		5016343	1					
ANR	5016464	UnaryOperator	!		5016343	0					
ANR	5016465	Identifier	last_char_was_escape		5016343	1					
ANR	5016466	CompoundStatement		37:3:942:981	5016343	1					
ANR	5016467	IdentifierDeclStatement	MyString * result = new MyString ( buffer ) ;	88:3:2438:2477	5016343	0	True				
ANR	5016468	IdentifierDecl	* result = new MyString ( buffer )		5016343	0					
ANR	5016469	IdentifierDeclType	MyString *		5016343	0					
ANR	5016470	Identifier	result		5016343	1					
ANR	5016471	AssignmentExpression	* result = new MyString ( buffer )		5016343	2		=			
ANR	5016472	Identifier	buffer		5016343	0					
ANR	5016473	Identifier	buffer		5016343	1					
ANR	5016474	ExpressionStatement	ASSERT ( result )	89:3:2482:2496	5016343	1	True				
ANR	5016475	CallExpression	ASSERT ( result )		5016343	0					
ANR	5016476	Callee	ASSERT		5016343	0					
ANR	5016477	Identifier	ASSERT		5016343	0					
ANR	5016478	ArgumentList	result		5016343	1					
ANR	5016479	Argument	result		5016343	0					
ANR	5016480	Identifier	result		5016343	0					
ANR	5016481	ExpressionStatement	"buffer = """""	90:3:2501:2512	5016343	2	True				
ANR	5016482	AssignmentExpression	"buffer = """""		5016343	0		=			
ANR	5016483	Identifier	buffer		5016343	0					
ANR	5016484	PrimaryExpression	""""""		5016343	1					
ANR	5016485	ReturnStatement	return result ;	91:3:2517:2530	5016343	3	True				
ANR	5016486	Identifier	result		5016343	0					
ANR	5016487	ElseStatement	else		5016343	0					
ANR	5016488	IfStatement	if ( c == '\\r' && ! last_char_was_escape )		5016343	0					
ANR	5016489	Condition	c == '\\r' && ! last_char_was_escape	92:13:2545:2578	5016343	0	True				
ANR	5016490	AndExpression	c == '\\r' && ! last_char_was_escape		5016343	0		&&			
ANR	5016491	EqualityExpression	c == '\\r'		5016343	0		==			
ANR	5016492	Identifier	c		5016343	0					
ANR	5016493	PrimaryExpression	'\\r'		5016343	1					
ANR	5016494	UnaryOperationExpression	! last_char_was_escape		5016343	1					
ANR	5016495	UnaryOperator	!		5016343	0					
ANR	5016496	Identifier	last_char_was_escape		5016343	1					
ANR	5016497	CompoundStatement		41:49:1085:1085	5016343	1					
ANR	5016498	ElseStatement	else		5016343	0					
ANR	5016499	CompoundStatement		43:9:1112:1112	5016343	0					
ANR	5016500	ExpressionStatement	buffer += c	95:3:2613:2624	5016343	0	True				
ANR	5016501	AssignmentExpression	buffer += c		5016343	0		+=			
ANR	5016502	Identifier	buffer		5016343	0					
ANR	5016503	Identifier	c		5016343	1					
ANR	5016504	IfStatement	if ( c == '\\\\' )		5016343	1					
ANR	5016505	Condition	c == '\\\\'	97:7:2634:2642	5016343	0	True				
ANR	5016506	EqualityExpression	c == '\\\\'		5016343	0		==			
ANR	5016507	Identifier	c		5016343	0					
ANR	5016508	PrimaryExpression	'\\\\'		5016343	1					
ANR	5016509	CompoundStatement		46:18:1149:1149	5016343	1					
ANR	5016510	ExpressionStatement	last_char_was_escape = ! last_char_was_escape	98:4:2651:2695	5016343	0	True				
ANR	5016511	AssignmentExpression	last_char_was_escape = ! last_char_was_escape		5016343	0		=			
ANR	5016512	Identifier	last_char_was_escape		5016343	0					
ANR	5016513	UnaryOperationExpression	! last_char_was_escape		5016343	1					
ANR	5016514	UnaryOperator	!		5016343	0					
ANR	5016515	Identifier	last_char_was_escape		5016343	1					
ANR	5016516	ElseStatement	else		5016343	0					
ANR	5016517	CompoundStatement		48:10:1211:1211	5016343	0					
ANR	5016518	ExpressionStatement	last_char_was_escape = false	100:4:2713:2741	5016343	0	True				
ANR	5016519	AssignmentExpression	last_char_was_escape = false		5016343	0		=			
ANR	5016520	Identifier	last_char_was_escape		5016343	0					
ANR	5016521	Identifier	false		5016343	1					
ANR	5016522	ExpressionStatement	readahead_length = 0	107:1:2840:2860	5016343	3	True				
ANR	5016523	AssignmentExpression	readahead_length = 0		5016343	0		=			
ANR	5016524	Identifier	readahead_length		5016343	0					
ANR	5016525	PrimaryExpression	0		5016343	1					
ANR	5016526	ReturnStatement	return NULL ;	108:1:2863:2874	5016343	4	True				
ANR	5016527	Identifier	NULL		5016343	0					
ANR	5016528	ReturnType	MyString *		5016343	1					
ANR	5016529	Identifier	PBuffer :: GetNextLine		5016343	2					
ANR	5016530	ParameterList			5016343	3					
ANR	5016531	CFGEntryNode	ENTRY		5016343		True				
ANR	5016532	CFGExitNode	EXIT		5016343		True				
ANR	5016533	Symbol	errno		5016343						
ANR	5016534	Symbol	NULL		5016343						
ANR	5016535	Symbol	c		5016343						
ANR	5016536	Symbol	* readahead_buffer		5016343						
ANR	5016537	Symbol	P_BUFFER_READAHEAD_SIZE		5016343						
ANR	5016538	Symbol	pipe_end		5016343						
ANR	5016539	Symbol	last_char_was_escape		5016343						
ANR	5016540	Symbol	EAGAIN		5016343						
ANR	5016541	Symbol	D_ALWAYS		5016343						
ANR	5016542	Symbol	readahead_index		5016343						
ANR	5016543	Symbol	false		5016343						
ANR	5016544	Symbol	readahead_buffer		5016343						
ANR	5016545	Symbol	readahead_length		5016343						
ANR	5016546	Symbol	error		5016343						
ANR	5016547	Symbol	result		5016343						
ANR	5016548	Symbol	daemonCore -> Read_Pipe		5016343						
ANR	5016549	Symbol	* daemonCore		5016343						
ANR	5016550	Symbol	daemonCore		5016343						
ANR	5016551	Symbol	true		5016343						
ANR	5016552	Symbol	EWOULDBLOCK		5016343						
ANR	5016553	Symbol	buffer		5016343						
ANR	5016554	Symbol	eof		5016343						
ANR	5016555	Function	PBuffer :: Write	111:0:2879:3544							
ANR	5016556	FunctionDef	PBuffer :: Write (const char * towrite)		5016555	0					
ANR	5016557	CompoundStatement		112:38:2921:3544	5016555	0					
ANR	5016558	IfStatement	if ( pipe_end == - 1 )		5016555	0					
ANR	5016559	Condition	pipe_end == - 1	114:5:2929:2942	5016555	0	True				
ANR	5016560	EqualityExpression	pipe_end == - 1		5016555	0		==			
ANR	5016561	Identifier	pipe_end		5016555	0					
ANR	5016562	UnaryOperationExpression	- 1		5016555	1					
ANR	5016563	UnaryOperator	-		5016555	0					
ANR	5016564	PrimaryExpression	1		5016555	1					
ANR	5016565	CompoundStatement		3:22:24:24	5016555	1					
ANR	5016566	ReturnStatement	return 0 ;	115:2:2950:2958	5016555	0	True				
ANR	5016567	PrimaryExpression	0		5016555	0					
ANR	5016568	IfStatement	if ( towrite )		5016555	1					
ANR	5016569	Condition	towrite	118:5:2970:2976	5016555	0	True				
ANR	5016570	Identifier	towrite		5016555	0					
ANR	5016571	CompoundStatement		7:14:57:57	5016555	1					
ANR	5016572	ExpressionStatement	buffer += towrite	119:2:2983:3000	5016555	0	True				
ANR	5016573	AssignmentExpression	buffer += towrite		5016555	0		+=			
ANR	5016574	Identifier	buffer		5016555	0					
ANR	5016575	Identifier	towrite		5016555	1					
ANR	5016576	IdentifierDeclStatement	int len = buffer . Length ( ) ;	122:1:3007:3032	5016555	2	True				
ANR	5016577	IdentifierDecl	len = buffer . Length ( )		5016555	0					
ANR	5016578	IdentifierDeclType	int		5016555	0					
ANR	5016579	Identifier	len		5016555	1					
ANR	5016580	AssignmentExpression	len = buffer . Length ( )		5016555	2		=			
ANR	5016581	Identifier	len		5016555	0					
ANR	5016582	CallExpression	buffer . Length ( )		5016555	1					
ANR	5016583	Callee	buffer . Length		5016555	0					
ANR	5016584	MemberAccess	buffer . Length		5016555	0					
ANR	5016585	Identifier	buffer		5016555	0					
ANR	5016586	Identifier	Length		5016555	1					
ANR	5016587	ArgumentList			5016555	1					
ANR	5016588	IfStatement	if ( len == 0 )		5016555	3					
ANR	5016589	Condition	len == 0	123:5:3039:3046	5016555	0	True				
ANR	5016590	EqualityExpression	len == 0		5016555	0		==			
ANR	5016591	Identifier	len		5016555	0					
ANR	5016592	PrimaryExpression	0		5016555	1					
ANR	5016593	CompoundStatement		12:15:127:127	5016555	1					
ANR	5016594	ReturnStatement	return 0 ;	124:2:3053:3061	5016555	0	True				
ANR	5016595	PrimaryExpression	0		5016555	0					
ANR	5016596	IfStatement	if ( len > 4096 )		5016555	4					
ANR	5016597	Condition	len > 4096	127:5:3072:3081	5016555	0	True				
ANR	5016598	RelationalExpression	len > 4096		5016555	0		>			
ANR	5016599	Identifier	len		5016555	0					
ANR	5016600	PrimaryExpression	4096		5016555	1					
ANR	5016601	CompoundStatement		16:18:163:163	5016555	1					
ANR	5016602	ExpressionStatement	len = 4096	128:2:3089:3099	5016555	0	True				
ANR	5016603	AssignmentExpression	len = 4096		5016555	0		=			
ANR	5016604	Identifier	len		5016555	0					
ANR	5016605	PrimaryExpression	4096		5016555	1					
ANR	5016606	IdentifierDeclStatement	"int numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . Value ( ) , len ) ;"	131:1:3106:3177	5016555	5	True				
ANR	5016607	IdentifierDecl	"numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . Value ( ) , len )"		5016555	0					
ANR	5016608	IdentifierDeclType	int		5016555	0					
ANR	5016609	Identifier	numwritten		5016555	1					
ANR	5016610	AssignmentExpression	"numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . Value ( ) , len )"		5016555	2		=			
ANR	5016611	Identifier	numwritten		5016555	0					
ANR	5016612	CallExpression	"daemonCore -> Write_Pipe ( pipe_end , buffer . Value ( ) , len )"		5016555	1					
ANR	5016613	Callee	daemonCore -> Write_Pipe		5016555	0					
ANR	5016614	PtrMemberAccess	daemonCore -> Write_Pipe		5016555	0					
ANR	5016615	Identifier	daemonCore		5016555	0					
ANR	5016616	Identifier	Write_Pipe		5016555	1					
ANR	5016617	ArgumentList	pipe_end		5016555	1					
ANR	5016618	Argument	pipe_end		5016555	0					
ANR	5016619	Identifier	pipe_end		5016555	0					
ANR	5016620	Argument	buffer . Value ( )		5016555	1					
ANR	5016621	CallExpression	buffer . Value ( )		5016555	0					
ANR	5016622	Callee	buffer . Value		5016555	0					
ANR	5016623	MemberAccess	buffer . Value		5016555	0					
ANR	5016624	Identifier	buffer		5016555	0					
ANR	5016625	Identifier	Value		5016555	1					
ANR	5016626	ArgumentList			5016555	1					
ANR	5016627	Argument	len		5016555	2					
ANR	5016628	Identifier	len		5016555	0					
ANR	5016629	IfStatement	if ( numwritten > 0 )		5016555	6					
ANR	5016630	Condition	numwritten > 0	132:5:3184:3197	5016555	0	True				
ANR	5016631	RelationalExpression	numwritten > 0		5016555	0		>			
ANR	5016632	Identifier	numwritten		5016555	0					
ANR	5016633	PrimaryExpression	0		5016555	1					
ANR	5016634	CompoundStatement		21:21:278:278	5016555	1					
ANR	5016635	ExpressionStatement	"buffer = buffer . Substr ( numwritten , buffer . Length ( ) )"	134:2:3228:3279	5016555	0	True				
ANR	5016636	AssignmentExpression	"buffer = buffer . Substr ( numwritten , buffer . Length ( ) )"		5016555	0		=			
ANR	5016637	Identifier	buffer		5016555	0					
ANR	5016638	CallExpression	"buffer . Substr ( numwritten , buffer . Length ( ) )"		5016555	1					
ANR	5016639	Callee	buffer . Substr		5016555	0					
ANR	5016640	MemberAccess	buffer . Substr		5016555	0					
ANR	5016641	Identifier	buffer		5016555	0					
ANR	5016642	Identifier	Substr		5016555	1					
ANR	5016643	ArgumentList	numwritten		5016555	1					
ANR	5016644	Argument	numwritten		5016555	0					
ANR	5016645	Identifier	numwritten		5016555	0					
ANR	5016646	Argument	buffer . Length ( )		5016555	1					
ANR	5016647	CallExpression	buffer . Length ( )		5016555	0					
ANR	5016648	Callee	buffer . Length		5016555	0					
ANR	5016649	MemberAccess	buffer . Length		5016555	0					
ANR	5016650	Identifier	buffer		5016555	0					
ANR	5016651	Identifier	Length		5016555	1					
ANR	5016652	ArgumentList			5016555	1					
ANR	5016653	ReturnStatement	return numwritten ;	135:2:3283:3300	5016555	1	True				
ANR	5016654	Identifier	numwritten		5016555	0					
ANR	5016655	ElseStatement	else		5016555	0					
ANR	5016656	IfStatement	if ( numwritten == 0 )		5016555	0					
ANR	5016657	Condition	numwritten == 0	136:13:3315:3329	5016555	0	True				
ANR	5016658	EqualityExpression	numwritten == 0		5016555	0		==			
ANR	5016659	Identifier	numwritten		5016555	0					
ANR	5016660	PrimaryExpression	0		5016555	1					
ANR	5016661	CompoundStatement		25:31:411:411	5016555	1					
ANR	5016662	ReturnStatement	return 0 ;	137:2:3337:3345	5016555	0	True				
ANR	5016663	PrimaryExpression	0		5016555	0					
ANR	5016664	ElseStatement	else		5016555	0					
ANR	5016665	CompoundStatement		27:8:433:433	5016555	0					
ANR	5016666	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		5016555	0					
ANR	5016667	Condition	errno == EAGAIN || errno == EWOULDBLOCK	139:6:3363:3401	5016555	0	True				
ANR	5016668	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		5016555	0		||			
ANR	5016669	EqualityExpression	errno == EAGAIN		5016555	0		==			
ANR	5016670	Identifier	errno		5016555	0					
ANR	5016671	Identifier	EAGAIN		5016555	1					
ANR	5016672	EqualityExpression	errno == EWOULDBLOCK		5016555	1		==			
ANR	5016673	Identifier	errno		5016555	0					
ANR	5016674	Identifier	EWOULDBLOCK		5016555	1					
ANR	5016675	CompoundStatement		28:47:482:482	5016555	1					
ANR	5016676	ReturnStatement	return 0 ;	140:3:3409:3417	5016555	0	True				
ANR	5016677	PrimaryExpression	0		5016555	0					
ANR	5016678	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error %d writing to DaemonCore pipe %d\\n"" , errno , pipe_end )"	143:2:3426:3510	5016555	1	True				
ANR	5016679	CallExpression	"vmprintf ( D_ALWAYS , ""Error %d writing to DaemonCore pipe %d\\n"" , errno , pipe_end )"		5016555	0					
ANR	5016680	Callee	vmprintf		5016555	0					
ANR	5016681	Identifier	vmprintf		5016555	0					
ANR	5016682	ArgumentList	D_ALWAYS		5016555	1					
ANR	5016683	Argument	D_ALWAYS		5016555	0					
ANR	5016684	Identifier	D_ALWAYS		5016555	0					
ANR	5016685	Argument	"""Error %d writing to DaemonCore pipe %d\\n"""		5016555	1					
ANR	5016686	PrimaryExpression	"""Error %d writing to DaemonCore pipe %d\\n"""		5016555	0					
ANR	5016687	Argument	errno		5016555	2					
ANR	5016688	Identifier	errno		5016555	0					
ANR	5016689	Argument	pipe_end		5016555	3					
ANR	5016690	Identifier	pipe_end		5016555	0					
ANR	5016691	ExpressionStatement	error = true	145:2:3514:3526	5016555	2	True				
ANR	5016692	AssignmentExpression	error = true		5016555	0		=			
ANR	5016693	Identifier	error		5016555	0					
ANR	5016694	Identifier	true		5016555	1					
ANR	5016695	ReturnStatement	return - 1 ;	146:2:3530:3539	5016555	3	True				
ANR	5016696	UnaryOperationExpression	- 1		5016555	0					
ANR	5016697	UnaryOperator	-		5016555	0					
ANR	5016698	PrimaryExpression	1		5016555	1					
ANR	5016699	ReturnType	int		5016555	1					
ANR	5016700	Identifier	PBuffer :: Write		5016555	2					
ANR	5016701	ParameterList	const char * towrite		5016555	3					
ANR	5016702	Parameter	const char * towrite	112:16:2899:2918	5016555	0	True				
ANR	5016703	ParameterType	const char *		5016555	0					
ANR	5016704	Identifier	towrite		5016555	1					
ANR	5016705	CFGEntryNode	ENTRY		5016555		True				
ANR	5016706	CFGExitNode	EXIT		5016555		True				
ANR	5016707	Symbol	errno		5016555						
ANR	5016708	Symbol	pipe_end		5016555						
ANR	5016709	Symbol	EAGAIN		5016555						
ANR	5016710	Symbol	D_ALWAYS		5016555						
ANR	5016711	Symbol	error		5016555						
ANR	5016712	Symbol	numwritten		5016555						
ANR	5016713	Symbol	buffer . Substr		5016555						
ANR	5016714	Symbol	buffer . Value		5016555						
ANR	5016715	Symbol	len		5016555						
ANR	5016716	Symbol	* daemonCore		5016555						
ANR	5016717	Symbol	daemonCore		5016555						
ANR	5016718	Symbol	true		5016555						
ANR	5016719	Symbol	EWOULDBLOCK		5016555						
ANR	5016720	Symbol	towrite		5016555						
ANR	5016721	Symbol	buffer		5016555						
ANR	5016722	Symbol	daemonCore -> Write_Pipe		5016555						
ANR	5016723	Symbol	buffer . Length		5016555						
ANR	5016724	Function	PBuffer :: IsEmpty	150:0:3547:3604							
ANR	5016725	FunctionDef	PBuffer :: IsEmpty ()		5016724	0					
ANR	5016726	CompoundStatement		151:19:3570:3604	5016724	0					
ANR	5016727	ReturnStatement	return ( buffer . Length ( ) == 0 ) ;	152:1:3573:3602	5016724	0	True				
ANR	5016728	EqualityExpression	buffer . Length ( ) == 0		5016724	0		==			
ANR	5016729	CallExpression	buffer . Length ( )		5016724	0					
ANR	5016730	Callee	buffer . Length		5016724	0					
ANR	5016731	MemberAccess	buffer . Length		5016724	0					
ANR	5016732	Identifier	buffer		5016724	0					
ANR	5016733	Identifier	Length		5016724	1					
ANR	5016734	ArgumentList			5016724	1					
ANR	5016735	PrimaryExpression	0		5016724	1					
ANR	5016736	ReturnType	int		5016724	1					
ANR	5016737	Identifier	PBuffer :: IsEmpty		5016724	2					
ANR	5016738	ParameterList			5016724	3					
ANR	5016739	CFGEntryNode	ENTRY		5016724		True				
ANR	5016740	CFGExitNode	EXIT		5016724		True				
ANR	5016741	Symbol	buffer		5016724						
ANR	5016742	Symbol	buffer . Length		5016724						
