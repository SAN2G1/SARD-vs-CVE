command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3004710	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_dc_credd.cpp								
ANR	3004711	Function	DCCredd :: DCCredd	39:0:1158:1254							
ANR	3004712	FunctionDef	"DCCredd :: DCCredd (const char * tName , const char * tPool)"		3004711	0					
ANR	3004713	CompoundStatement		41:0:1252:1254	3004711	0					
ANR	3004714	Identifier	DCCredd :: DCCredd		3004711	1					
ANR	3004715	ParameterList	"const char * tName , const char * tPool"		3004711	2					
ANR	3004716	Parameter	const char * tName	39:18:1176:1192	3004711	0	True				
ANR	3004717	ParameterType	const char *		3004711	0					
ANR	3004718	Identifier	tName		3004711	1					
ANR	3004719	Parameter	const char * tPool	39:37:1195:1211	3004711	1	True				
ANR	3004720	ParameterType	const char *		3004711	0					
ANR	3004721	Identifier	tPool		3004711	1					
ANR	3004722	CFGEntryNode	ENTRY		3004711		True				
ANR	3004723	CFGExitNode	EXIT		3004711		True				
ANR	3004724	Symbol	tName		3004711						
ANR	3004725	Symbol	tPool		3004711						
ANR	3004726	Function	DCCredd :: ~DCCredd	45:0:1258:1286							
ANR	3004727	FunctionDef	DCCredd :: ~DCCredd ()		3004726	0					
ANR	3004728	CompoundStatement		46:0:1284:1286	3004726	0					
ANR	3004729	Identifier	DCCredd :: ~DCCredd		3004726	1					
ANR	3004730	ParameterList			3004726	2					
ANR	3004731	CFGEntryNode	ENTRY		3004726		True				
ANR	3004732	CFGExitNode	EXIT		3004726		True				
ANR	3004733	Function	DCCredd :: storeCredential	49:0:1289:2973							
ANR	3004734	FunctionDef	"DCCredd :: storeCredential (Credential * cred , CondorError & condor_error)"		3004733	0					
ANR	3004735	CompoundStatement		51:36:1376:2973	3004733	0					
ANR	3004736	IdentifierDeclStatement	bool rtnVal = false ;	53:1:1380:1399	3004733	0	True				
ANR	3004737	IdentifierDecl	rtnVal = false		3004733	0					
ANR	3004738	IdentifierDeclType	bool		3004733	0					
ANR	3004739	Identifier	rtnVal		3004733	1					
ANR	3004740	AssignmentExpression	rtnVal = false		3004733	2		=			
ANR	3004741	Identifier	false		3004733	0					
ANR	3004742	Identifier	false		3004733	1					
ANR	3004743	IdentifierDeclStatement	ReliSock * rsock = NULL ;	54:1:1402:1424	3004733	1	True				
ANR	3004744	IdentifierDecl	* rsock = NULL		3004733	0					
ANR	3004745	IdentifierDeclType	ReliSock *		3004733	0					
ANR	3004746	Identifier	rsock		3004733	1					
ANR	3004747	AssignmentExpression	* rsock = NULL		3004733	2		=			
ANR	3004748	Identifier	NULL		3004733	0					
ANR	3004749	Identifier	NULL		3004733	1					
ANR	3004750	IdentifierDeclStatement	void * data = NULL ;	55:1:1427:1444	3004733	2	True				
ANR	3004751	IdentifierDecl	* data = NULL		3004733	0					
ANR	3004752	IdentifierDeclType	void *		3004733	0					
ANR	3004753	Identifier	data		3004733	1					
ANR	3004754	AssignmentExpression	* data = NULL		3004733	2		=			
ANR	3004755	Identifier	NULL		3004733	0					
ANR	3004756	Identifier	NULL		3004733	1					
ANR	3004757	IdentifierDeclStatement	char * classad_str = NULL ;	56:1:1447:1472	3004733	3	True				
ANR	3004758	IdentifierDecl	* classad_str = NULL		3004733	0					
ANR	3004759	IdentifierDeclType	char *		3004733	0					
ANR	3004760	Identifier	classad_str		3004733	1					
ANR	3004761	AssignmentExpression	* classad_str = NULL		3004733	2		=			
ANR	3004762	Identifier	NULL		3004733	0					
ANR	3004763	Identifier	NULL		3004733	1					
ANR	3004764	IdentifierDeclStatement	classad :: ClassAd * classad = NULL ;	57:1:1475:1508	3004733	4	True				
ANR	3004765	IdentifierDecl	* classad = NULL		3004733	0					
ANR	3004766	IdentifierDeclType	classad :: ClassAd *		3004733	0					
ANR	3004767	Identifier	classad		3004733	1					
ANR	3004768	AssignmentExpression	* classad = NULL		3004733	2		=			
ANR	3004769	Identifier	NULL		3004733	0					
ANR	3004770	Identifier	NULL		3004733	1					
ANR	3004771	IdentifierDeclStatement	int rc = 0 ;	58:1:1511:1521	3004733	5	True				
ANR	3004772	IdentifierDecl	rc = 0		3004733	0					
ANR	3004773	IdentifierDeclType	int		3004733	0					
ANR	3004774	Identifier	rc		3004733	1					
ANR	3004775	AssignmentExpression	rc = 0		3004733	2		=			
ANR	3004776	Identifier	rc		3004733	0					
ANR	3004777	PrimaryExpression	0		3004733	1					
ANR	3004778	IdentifierDeclStatement	int size = 0 ;	59:1:1524:1534	3004733	6	True				
ANR	3004779	IdentifierDecl	size = 0		3004733	0					
ANR	3004780	IdentifierDeclType	int		3004733	0					
ANR	3004781	Identifier	size		3004733	1					
ANR	3004782	AssignmentExpression	size = 0		3004733	2		=			
ANR	3004783	Identifier	size		3004733	0					
ANR	3004784	PrimaryExpression	0		3004733	1					
ANR	3004785	IdentifierDeclStatement	std :: string adbuffer ;	60:1:1537:1557	3004733	7	True				
ANR	3004786	IdentifierDecl	adbuffer		3004733	0					
ANR	3004787	IdentifierDeclType	std :: string		3004733	0					
ANR	3004788	Identifier	adbuffer		3004733	1					
ANR	3004789	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	61:1:1560:1593	3004733	8	True				
ANR	3004790	IdentifierDecl	unparser		3004733	0					
ANR	3004791	IdentifierDeclType	classad :: ClassAdUnParser		3004733	0					
ANR	3004792	Identifier	unparser		3004733	1					
ANR	3004793	ExpressionStatement	"rsock = ( ReliSock * ) startCommand ( CREDD_STORE_CRED , Stream :: reli_sock , 20 , & condor_error )"	63:1:1597:1689	3004733	9	True				
ANR	3004794	AssignmentExpression	"rsock = ( ReliSock * ) startCommand ( CREDD_STORE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3004733	0		=			
ANR	3004795	Identifier	rsock		3004733	0					
ANR	3004796	CastExpression	"( ReliSock * ) startCommand ( CREDD_STORE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3004733	1					
ANR	3004797	CastTarget	ReliSock *		3004733	0					
ANR	3004798	CallExpression	"startCommand ( CREDD_STORE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3004733	1					
ANR	3004799	Callee	startCommand		3004733	0					
ANR	3004800	Identifier	startCommand		3004733	0					
ANR	3004801	ArgumentList	CREDD_STORE_CRED		3004733	1					
ANR	3004802	Argument	CREDD_STORE_CRED		3004733	0					
ANR	3004803	Identifier	CREDD_STORE_CRED		3004733	0					
ANR	3004804	Argument	Stream :: reli_sock		3004733	1					
ANR	3004805	Identifier	Stream :: reli_sock		3004733	0					
ANR	3004806	Argument	20		3004733	2					
ANR	3004807	PrimaryExpression	20		3004733	0					
ANR	3004808	Argument	& condor_error		3004733	3					
ANR	3004809	UnaryOperationExpression	& condor_error		3004733	0					
ANR	3004810	UnaryOperator	&		3004733	0					
ANR	3004811	Identifier	condor_error		3004733	1					
ANR	3004812	IfStatement	if ( ! rsock )		3004733	10					
ANR	3004813	Condition	! rsock	65:6:1697:1703	3004733	0	True				
ANR	3004814	UnaryOperationExpression	! rsock		3004733	0					
ANR	3004815	UnaryOperator	!		3004733	0					
ANR	3004816	Identifier	rsock		3004733	1					
ANR	3004817	CompoundStatement		15:16:330:330	3004733	1					
ANR	3004818	GotoStatement	goto EXIT ;	66:2:1711:1720	3004733	0	True				
ANR	3004819	Identifier	EXIT		3004733	0					
ANR	3004820	IfStatement	"if ( ! forceAuthentication ( rsock , & condor_error ) )"		3004733	11					
ANR	3004821	Condition	"! forceAuthentication ( rsock , & condor_error )"	70:5:1757:1800	3004733	0	True				
ANR	3004822	UnaryOperationExpression	"! forceAuthentication ( rsock , & condor_error )"		3004733	0					
ANR	3004823	UnaryOperator	!		3004733	0					
ANR	3004824	CallExpression	"forceAuthentication ( rsock , & condor_error )"		3004733	1					
ANR	3004825	Callee	forceAuthentication		3004733	0					
ANR	3004826	Identifier	forceAuthentication		3004733	0					
ANR	3004827	ArgumentList	rsock		3004733	1					
ANR	3004828	Argument	rsock		3004733	0					
ANR	3004829	Identifier	rsock		3004733	0					
ANR	3004830	Argument	& condor_error		3004733	1					
ANR	3004831	UnaryOperationExpression	& condor_error		3004733	0					
ANR	3004832	UnaryOperator	&		3004733	0					
ANR	3004833	Identifier	condor_error		3004733	1					
ANR	3004834	CompoundStatement		20:51:426:426	3004733	1					
ANR	3004835	GotoStatement	goto EXIT ;	71:2:1807:1816	3004733	0	True				
ANR	3004836	Identifier	EXIT		3004733	0					
ANR	3004837	ExpressionStatement	rsock -> encode ( )	75:1:1844:1859	3004733	12	True				
ANR	3004838	CallExpression	rsock -> encode ( )		3004733	0					
ANR	3004839	Callee	rsock -> encode		3004733	0					
ANR	3004840	PtrMemberAccess	rsock -> encode		3004733	0					
ANR	3004841	Identifier	rsock		3004733	0					
ANR	3004842	Identifier	encode		3004733	1					
ANR	3004843	ArgumentList			3004733	1					
ANR	3004844	ExpressionStatement	classad = cred -> GetMetadata ( )	81:1:2044:2073	3004733	13	True				
ANR	3004845	AssignmentExpression	classad = cred -> GetMetadata ( )		3004733	0		=			
ANR	3004846	Identifier	classad		3004733	0					
ANR	3004847	CallExpression	cred -> GetMetadata ( )		3004733	1					
ANR	3004848	Callee	cred -> GetMetadata		3004733	0					
ANR	3004849	PtrMemberAccess	cred -> GetMetadata		3004733	0					
ANR	3004850	Identifier	cred		3004733	0					
ANR	3004851	Identifier	GetMetadata		3004733	1					
ANR	3004852	ArgumentList			3004733	1					
ANR	3004853	ExpressionStatement	"unparser . Unparse ( adbuffer , classad )"	82:1:2076:2110	3004733	14	True				
ANR	3004854	CallExpression	"unparser . Unparse ( adbuffer , classad )"		3004733	0					
ANR	3004855	Callee	unparser . Unparse		3004733	0					
ANR	3004856	MemberAccess	unparser . Unparse		3004733	0					
ANR	3004857	Identifier	unparser		3004733	0					
ANR	3004858	Identifier	Unparse		3004733	1					
ANR	3004859	ArgumentList	adbuffer		3004733	1					
ANR	3004860	Argument	adbuffer		3004733	0					
ANR	3004861	Identifier	adbuffer		3004733	0					
ANR	3004862	Argument	classad		3004733	1					
ANR	3004863	Identifier	classad		3004733	0					
ANR	3004864	ExpressionStatement	classad_str = strdup ( adbuffer . c_str ( ) )	83:1:2113:2151	3004733	15	True				
ANR	3004865	AssignmentExpression	classad_str = strdup ( adbuffer . c_str ( ) )		3004733	0		=			
ANR	3004866	Identifier	classad_str		3004733	0					
ANR	3004867	CallExpression	strdup ( adbuffer . c_str ( ) )		3004733	1					
ANR	3004868	Callee	strdup		3004733	0					
ANR	3004869	Identifier	strdup		3004733	0					
ANR	3004870	ArgumentList	adbuffer . c_str ( )		3004733	1					
ANR	3004871	Argument	adbuffer . c_str ( )		3004733	0					
ANR	3004872	CallExpression	adbuffer . c_str ( )		3004733	0					
ANR	3004873	Callee	adbuffer . c_str		3004733	0					
ANR	3004874	MemberAccess	adbuffer . c_str		3004733	0					
ANR	3004875	Identifier	adbuffer		3004733	0					
ANR	3004876	Identifier	c_str		3004733	1					
ANR	3004877	ArgumentList			3004733	1					
ANR	3004878	ExpressionStatement	"cred -> GetData ( data , size )"	86:1:2185:2211	3004733	16	True				
ANR	3004879	CallExpression	"cred -> GetData ( data , size )"		3004733	0					
ANR	3004880	Callee	cred -> GetData		3004733	0					
ANR	3004881	PtrMemberAccess	cred -> GetData		3004733	0					
ANR	3004882	Identifier	cred		3004733	0					
ANR	3004883	Identifier	GetData		3004733	1					
ANR	3004884	ArgumentList	data		3004733	1					
ANR	3004885	Argument	data		3004733	0					
ANR	3004886	Identifier	data		3004733	0					
ANR	3004887	Argument	size		3004733	1					
ANR	3004888	Identifier	size		3004733	0					
ANR	3004889	IfStatement	if ( ! rsock -> code ( classad_str ) )		3004733	17					
ANR	3004890	Condition	! rsock -> code ( classad_str )	89:5:2252:2278	3004733	0	True				
ANR	3004891	UnaryOperationExpression	! rsock -> code ( classad_str )		3004733	0					
ANR	3004892	UnaryOperator	!		3004733	0					
ANR	3004893	CallExpression	rsock -> code ( classad_str )		3004733	1					
ANR	3004894	Callee	rsock -> code		3004733	0					
ANR	3004895	PtrMemberAccess	rsock -> code		3004733	0					
ANR	3004896	Identifier	rsock		3004733	0					
ANR	3004897	Identifier	code		3004733	1					
ANR	3004898	ArgumentList	classad_str		3004733	1					
ANR	3004899	Argument	classad_str		3004733	0					
ANR	3004900	Identifier	classad_str		3004733	0					
ANR	3004901	CompoundStatement		39:35:905:905	3004733	1					
ANR	3004902	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Communication error, send credential metadata: %s"" , strerror ( errno ) )"	90:2:2286:2399	3004733	0	True				
ANR	3004903	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Communication error, send credential metadata: %s"" , strerror ( errno ) )"		3004733	0					
ANR	3004904	Callee	condor_error . pushf		3004733	0					
ANR	3004905	MemberAccess	condor_error . pushf		3004733	0					
ANR	3004906	Identifier	condor_error		3004733	0					
ANR	3004907	Identifier	pushf		3004733	1					
ANR	3004908	ArgumentList	"""DC_CREDD"""		3004733	1					
ANR	3004909	Argument	"""DC_CREDD"""		3004733	0					
ANR	3004910	PrimaryExpression	"""DC_CREDD"""		3004733	0					
ANR	3004911	Argument	3		3004733	1					
ANR	3004912	PrimaryExpression	3		3004733	0					
ANR	3004913	Argument	"""Communication error, send credential metadata: %s"""		3004733	2					
ANR	3004914	PrimaryExpression	"""Communication error, send credential metadata: %s"""		3004733	0					
ANR	3004915	Argument	strerror ( errno )		3004733	3					
ANR	3004916	CallExpression	strerror ( errno )		3004733	0					
ANR	3004917	Callee	strerror		3004733	0					
ANR	3004918	Identifier	strerror		3004733	0					
ANR	3004919	ArgumentList	errno		3004733	1					
ANR	3004920	Argument	errno		3004733	0					
ANR	3004921	Identifier	errno		3004733	0					
ANR	3004922	GotoStatement	goto EXIT ;	93:2:2403:2412	3004733	1	True				
ANR	3004923	Identifier	EXIT		3004733	0					
ANR	3004924	IfStatement	"if ( ! rsock -> code_bytes ( data , size ) )"		3004733	18					
ANR	3004925	Condition	"! rsock -> code_bytes ( data , size )"	96:5:2423:2454	3004733	0	True				
ANR	3004926	UnaryOperationExpression	"! rsock -> code_bytes ( data , size )"		3004733	0					
ANR	3004927	UnaryOperator	!		3004733	0					
ANR	3004928	CallExpression	"rsock -> code_bytes ( data , size )"		3004733	1					
ANR	3004929	Callee	rsock -> code_bytes		3004733	0					
ANR	3004930	PtrMemberAccess	rsock -> code_bytes		3004733	0					
ANR	3004931	Identifier	rsock		3004733	0					
ANR	3004932	Identifier	code_bytes		3004733	1					
ANR	3004933	ArgumentList	data		3004733	1					
ANR	3004934	Argument	data		3004733	0					
ANR	3004935	Identifier	data		3004733	0					
ANR	3004936	Argument	size		3004733	1					
ANR	3004937	Identifier	size		3004733	0					
ANR	3004938	CompoundStatement		46:40:1081:1081	3004733	1					
ANR	3004939	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 4 , ""Communication error, send credential data: %s"" , strerror ( errno ) )"	97:2:2462:2571	3004733	0	True				
ANR	3004940	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 4 , ""Communication error, send credential data: %s"" , strerror ( errno ) )"		3004733	0					
ANR	3004941	Callee	condor_error . pushf		3004733	0					
ANR	3004942	MemberAccess	condor_error . pushf		3004733	0					
ANR	3004943	Identifier	condor_error		3004733	0					
ANR	3004944	Identifier	pushf		3004733	1					
ANR	3004945	ArgumentList	"""DC_CREDD"""		3004733	1					
ANR	3004946	Argument	"""DC_CREDD"""		3004733	0					
ANR	3004947	PrimaryExpression	"""DC_CREDD"""		3004733	0					
ANR	3004948	Argument	4		3004733	1					
ANR	3004949	PrimaryExpression	4		3004733	0					
ANR	3004950	Argument	"""Communication error, send credential data: %s"""		3004733	2					
ANR	3004951	PrimaryExpression	"""Communication error, send credential data: %s"""		3004733	0					
ANR	3004952	Argument	strerror ( errno )		3004733	3					
ANR	3004953	CallExpression	strerror ( errno )		3004733	0					
ANR	3004954	Callee	strerror		3004733	0					
ANR	3004955	Identifier	strerror		3004733	0					
ANR	3004956	ArgumentList	errno		3004733	1					
ANR	3004957	Argument	errno		3004733	0					
ANR	3004958	Identifier	errno		3004733	0					
ANR	3004959	GotoStatement	goto EXIT ;	100:2:2575:2584	3004733	1	True				
ANR	3004960	Identifier	EXIT		3004733	0					
ANR	3004961	ExpressionStatement	rsock -> end_of_message ( )	103:1:2591:2614	3004733	19	True				
ANR	3004962	CallExpression	rsock -> end_of_message ( )		3004733	0					
ANR	3004963	Callee	rsock -> end_of_message		3004733	0					
ANR	3004964	PtrMemberAccess	rsock -> end_of_message		3004733	0					
ANR	3004965	Identifier	rsock		3004733	0					
ANR	3004966	Identifier	end_of_message		3004733	1					
ANR	3004967	ArgumentList			3004733	1					
ANR	3004968	ExpressionStatement	rsock -> decode ( )	106:1:2647:2662	3004733	20	True				
ANR	3004969	CallExpression	rsock -> decode ( )		3004733	0					
ANR	3004970	Callee	rsock -> decode		3004733	0					
ANR	3004971	PtrMemberAccess	rsock -> decode		3004733	0					
ANR	3004972	Identifier	rsock		3004733	0					
ANR	3004973	Identifier	decode		3004733	1					
ANR	3004974	ArgumentList			3004733	1					
ANR	3004975	ExpressionStatement	rsock -> code ( rc )	107:1:2665:2680	3004733	21	True				
ANR	3004976	CallExpression	rsock -> code ( rc )		3004733	0					
ANR	3004977	Callee	rsock -> code		3004733	0					
ANR	3004978	PtrMemberAccess	rsock -> code		3004733	0					
ANR	3004979	Identifier	rsock		3004733	0					
ANR	3004980	Identifier	code		3004733	1					
ANR	3004981	ArgumentList	rc		3004733	1					
ANR	3004982	Argument	rc		3004733	0					
ANR	3004983	Identifier	rc		3004733	0					
ANR	3004984	ExpressionStatement	rsock -> close ( )	109:1:2684:2698	3004733	22	True				
ANR	3004985	CallExpression	rsock -> close ( )		3004733	0					
ANR	3004986	Callee	rsock -> close		3004733	0					
ANR	3004987	PtrMemberAccess	rsock -> close		3004733	0					
ANR	3004988	Identifier	rsock		3004733	0					
ANR	3004989	Identifier	close		3004733	1					
ANR	3004990	ArgumentList			3004733	1					
ANR	3004991	IfStatement	if ( rc )		3004733	23					
ANR	3004992	Condition	rc	110:5:2705:2706	3004733	0	True				
ANR	3004993	Identifier	rc		3004733	0					
ANR	3004994	CompoundStatement		60:9:1332:1332	3004733	1					
ANR	3004995	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 4 , ""Invalid CredD return code (%d)"" , rc )"	111:2:2713:2785	3004733	0	True				
ANR	3004996	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 4 , ""Invalid CredD return code (%d)"" , rc )"		3004733	0					
ANR	3004997	Callee	condor_error . pushf		3004733	0					
ANR	3004998	MemberAccess	condor_error . pushf		3004733	0					
ANR	3004999	Identifier	condor_error		3004733	0					
ANR	3005000	Identifier	pushf		3004733	1					
ANR	3005001	ArgumentList	"""DC_CREDD"""		3004733	1					
ANR	3005002	Argument	"""DC_CREDD"""		3004733	0					
ANR	3005003	PrimaryExpression	"""DC_CREDD"""		3004733	0					
ANR	3005004	Argument	4		3004733	1					
ANR	3005005	PrimaryExpression	4		3004733	0					
ANR	3005006	Argument	"""Invalid CredD return code (%d)"""		3004733	2					
ANR	3005007	PrimaryExpression	"""Invalid CredD return code (%d)"""		3004733	0					
ANR	3005008	Argument	rc		3004733	3					
ANR	3005009	Identifier	rc		3004733	0					
ANR	3005010	ExpressionStatement	rtnVal = ( rc == 0 ) ? true : false	113:1:2791:2823	3004733	24	True				
ANR	3005011	AssignmentExpression	rtnVal = ( rc == 0 ) ? true : false		3004733	0		=			
ANR	3005012	Identifier	rtnVal		3004733	0					
ANR	3005013	ConditionalExpression	( rc == 0 ) ? true : false		3004733	1					
ANR	3005014	Condition	rc == 0		3004733	0					
ANR	3005015	EqualityExpression	rc == 0		3004733	0		==			
ANR	3005016	Identifier	rc		3004733	0					
ANR	3005017	PrimaryExpression	0		3004733	1					
ANR	3005018	Identifier	true		3004733	1					
ANR	3005019	Identifier	false		3004733	2					
ANR	3005020	Label	EXIT :	114:0:2825:2829	3004733	25	True				
ANR	3005021	Identifier	EXIT		3004733	0					
ANR	3005022	IfStatement	if ( rsock )		3004733	26					
ANR	3005023	Condition	rsock	115:6:2837:2841	3004733	0	True				
ANR	3005024	Identifier	rsock		3004733	0					
ANR	3005025	Statement	delete	115:14:2845:2850	3004733	1	True				
ANR	3005026	ExpressionStatement	rsock	115:21:2852:2857	3004733	27	True				
ANR	3005027	Identifier	rsock		3004733	0					
ANR	3005028	IfStatement	if ( data )		3004733	28					
ANR	3005029	Condition	data	116:6:2865:2868	3004733	0	True				
ANR	3005030	Identifier	data		3004733	0					
ANR	3005031	ExpressionStatement	free ( data )	116:13:2872:2883	3004733	1	True				
ANR	3005032	CallExpression	free ( data )		3004733	0					
ANR	3005033	Callee	free		3004733	0					
ANR	3005034	Identifier	free		3004733	0					
ANR	3005035	ArgumentList	data		3004733	1					
ANR	3005036	Argument	data		3004733	0					
ANR	3005037	Identifier	data		3004733	0					
ANR	3005038	IfStatement	if ( classad_str )		3004733	29					
ANR	3005039	Condition	classad_str	117:6:2891:2901	3004733	0	True				
ANR	3005040	Identifier	classad_str		3004733	0					
ANR	3005041	ExpressionStatement	free ( classad_str )	117:20:2905:2923	3004733	1	True				
ANR	3005042	CallExpression	free ( classad_str )		3004733	0					
ANR	3005043	Callee	free		3004733	0					
ANR	3005044	Identifier	free		3004733	0					
ANR	3005045	ArgumentList	classad_str		3004733	1					
ANR	3005046	Argument	classad_str		3004733	0					
ANR	3005047	Identifier	classad_str		3004733	0					
ANR	3005048	IfStatement	if ( classad )		3004733	30					
ANR	3005049	Condition	classad	118:6:2931:2937	3004733	0	True				
ANR	3005050	Identifier	classad		3004733	0					
ANR	3005051	Statement	delete	118:16:2941:2946	3004733	1	True				
ANR	3005052	ExpressionStatement	classad	118:23:2948:2955	3004733	31	True				
ANR	3005053	Identifier	classad		3004733	0					
ANR	3005054	ReturnStatement	return rtnVal ;	119:1:2958:2971	3004733	32	True				
ANR	3005055	Identifier	rtnVal		3004733	0					
ANR	3005056	ReturnType	bool		3004733	1					
ANR	3005057	Identifier	DCCredd :: storeCredential		3004733	2					
ANR	3005058	ParameterList	"Credential * cred , CondorError & condor_error"		3004733	3					
ANR	3005059	Parameter	Credential * cred	50:26:1321:1337	3004733	0	True				
ANR	3005060	ParameterType	Credential *		3004733	0					
ANR	3005061	Identifier	cred		3004733	1					
ANR	3005062	Parameter	CondorError & condor_error	51:8:1348:1373	3004733	1	True				
ANR	3005063	ParameterType	CondorError &		3004733	0					
ANR	3005064	Identifier	condor_error		3004733	1					
ANR	3005065	CFGEntryNode	ENTRY		3004733		True				
ANR	3005066	CFGExitNode	EXIT		3004733		True				
ANR	3005067	Symbol	data		3004733						
ANR	3005068	Symbol	CREDD_STORE_CRED		3004733						
ANR	3005069	Symbol	rsock		3004733						
ANR	3005070	Symbol	rtnVal		3004733						
ANR	3005071	Symbol	cred -> GetMetadata		3004733						
ANR	3005072	Symbol	* cred		3004733						
ANR	3005073	Symbol	Stream :: reli_sock		3004733						
ANR	3005074	Symbol	* rsock		3004733						
ANR	3005075	Symbol	rsock -> code_bytes		3004733						
ANR	3005076	Symbol	cred		3004733						
ANR	3005077	Symbol	errno		3004733						
ANR	3005078	Symbol	NULL		3004733						
ANR	3005079	Symbol	false		3004733						
ANR	3005080	Symbol	startCommand		3004733						
ANR	3005081	Symbol	classad_str		3004733						
ANR	3005082	Symbol	strerror		3004733						
ANR	3005083	Symbol	rc		3004733						
ANR	3005084	Symbol	forceAuthentication		3004733						
ANR	3005085	Symbol	size		3004733						
ANR	3005086	Symbol	& condor_error		3004733						
ANR	3005087	Symbol	true		3004733						
ANR	3005088	Symbol	classad		3004733						
ANR	3005089	Symbol	unparser		3004733						
ANR	3005090	Symbol	adbuffer . c_str		3004733						
ANR	3005091	Symbol	strdup		3004733						
ANR	3005092	Symbol	condor_error		3004733						
ANR	3005093	Symbol	rsock -> code		3004733						
ANR	3005094	Symbol	adbuffer		3004733						
ANR	3005095	Function	DCCredd :: getCredentialData	122:0:2976:4179							
ANR	3005096	FunctionDef	"DCCredd :: getCredentialData (const char * cred_name , void * & cred_data , int & cred_size , CondorError & condor_error)"		3005095	0					
ANR	3005097	CompoundStatement		126:35:3119:4179	3005095	0					
ANR	3005098	ExpressionStatement	locate ( )	127:1:3122:3130	3005095	0	True				
ANR	3005099	CallExpression	locate ( )		3005095	0					
ANR	3005100	Callee	locate		3005095	0					
ANR	3005101	Identifier	locate		3005095	0					
ANR	3005102	ArgumentList			3005095	1					
ANR	3005103	IdentifierDeclStatement	ReliSock rsock ;	129:1:3135:3149	3005095	1	True				
ANR	3005104	IdentifierDecl	rsock		3005095	0					
ANR	3005105	IdentifierDeclType	ReliSock		3005095	0					
ANR	3005106	Identifier	rsock		3005095	1					
ANR	3005107	ExpressionStatement	rsock . timeout ( 20 )	131:1:3153:3170	3005095	2	True				
ANR	3005108	CallExpression	rsock . timeout ( 20 )		3005095	0					
ANR	3005109	Callee	rsock . timeout		3005095	0					
ANR	3005110	MemberAccess	rsock . timeout		3005095	0					
ANR	3005111	Identifier	rsock		3005095	0					
ANR	3005112	Identifier	timeout		3005095	1					
ANR	3005113	ArgumentList	20		3005095	1					
ANR	3005114	Argument	20		3005095	0					
ANR	3005115	PrimaryExpression	20		3005095	0					
ANR	3005116	IfStatement	if ( ! rsock . connect ( _addr ) )		3005095	3					
ANR	3005117	Condition	! rsock . connect ( _addr )	134:5:3220:3241	3005095	0	True				
ANR	3005118	UnaryOperationExpression	! rsock . connect ( _addr )		3005095	0					
ANR	3005119	UnaryOperator	!		3005095	0					
ANR	3005120	CallExpression	rsock . connect ( _addr )		3005095	1					
ANR	3005121	Callee	rsock . connect		3005095	0					
ANR	3005122	MemberAccess	rsock . connect		3005095	0					
ANR	3005123	Identifier	rsock		3005095	0					
ANR	3005124	Identifier	connect		3005095	1					
ANR	3005125	ArgumentList	_addr		3005095	1					
ANR	3005126	Argument	_addr		3005095	0					
ANR	3005127	Identifier	_addr		3005095	0					
ANR	3005128	CompoundStatement		9:30:125:125	3005095	1					
ANR	3005129	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 1 , ""Failed to connect to CredD %s"" , _addr )"	135:2:3249:3324	3005095	0	True				
ANR	3005130	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 1 , ""Failed to connect to CredD %s"" , _addr )"		3005095	0					
ANR	3005131	Callee	condor_error . pushf		3005095	0					
ANR	3005132	MemberAccess	condor_error . pushf		3005095	0					
ANR	3005133	Identifier	condor_error		3005095	0					
ANR	3005134	Identifier	pushf		3005095	1					
ANR	3005135	ArgumentList	"""DC_CREDD"""		3005095	1					
ANR	3005136	Argument	"""DC_CREDD"""		3005095	0					
ANR	3005137	PrimaryExpression	"""DC_CREDD"""		3005095	0					
ANR	3005138	Argument	1		3005095	1					
ANR	3005139	PrimaryExpression	1		3005095	0					
ANR	3005140	Argument	"""Failed to connect to CredD %s"""		3005095	2					
ANR	3005141	PrimaryExpression	"""Failed to connect to CredD %s"""		3005095	0					
ANR	3005142	Argument	_addr		3005095	3					
ANR	3005143	Identifier	_addr		3005095	0					
ANR	3005144	ReturnStatement	return false ;	136:2:3328:3340	3005095	1	True				
ANR	3005145	Identifier	false		3005095	0					
ANR	3005146	IfStatement	"if ( ! startCommand ( CREDD_GET_CRED , ( Sock * ) & rsock ) )"		3005095	4					
ANR	3005147	Condition	"! startCommand ( CREDD_GET_CRED , ( Sock * ) & rsock )"	140:5:3370:3414	3005095	0	True				
ANR	3005148	UnaryOperationExpression	"! startCommand ( CREDD_GET_CRED , ( Sock * ) & rsock )"		3005095	0					
ANR	3005149	UnaryOperator	!		3005095	0					
ANR	3005150	CallExpression	"startCommand ( CREDD_GET_CRED , ( Sock * ) & rsock )"		3005095	1					
ANR	3005151	Callee	startCommand		3005095	0					
ANR	3005152	Identifier	startCommand		3005095	0					
ANR	3005153	ArgumentList	CREDD_GET_CRED		3005095	1					
ANR	3005154	Argument	CREDD_GET_CRED		3005095	0					
ANR	3005155	Identifier	CREDD_GET_CRED		3005095	0					
ANR	3005156	Argument	( Sock * ) & rsock		3005095	1					
ANR	3005157	CastExpression	( Sock * ) & rsock		3005095	0					
ANR	3005158	CastTarget	Sock *		3005095	0					
ANR	3005159	UnaryOperationExpression	& rsock		3005095	1					
ANR	3005160	UnaryOperator	&		3005095	0					
ANR	3005161	Identifier	rsock		3005095	1					
ANR	3005162	CompoundStatement		15:53:298:298	3005095	1					
ANR	3005163	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 2 , ""Failed to start command CREDD_GET_CRED"" )"	141:2:3422:3498	3005095	0	True				
ANR	3005164	CallExpression	"condor_error . push ( ""DC_CREDD"" , 2 , ""Failed to start command CREDD_GET_CRED"" )"		3005095	0					
ANR	3005165	Callee	condor_error . push		3005095	0					
ANR	3005166	MemberAccess	condor_error . push		3005095	0					
ANR	3005167	Identifier	condor_error		3005095	0					
ANR	3005168	Identifier	push		3005095	1					
ANR	3005169	ArgumentList	"""DC_CREDD"""		3005095	1					
ANR	3005170	Argument	"""DC_CREDD"""		3005095	0					
ANR	3005171	PrimaryExpression	"""DC_CREDD"""		3005095	0					
ANR	3005172	Argument	2		3005095	1					
ANR	3005173	PrimaryExpression	2		3005095	0					
ANR	3005174	Argument	"""Failed to start command CREDD_GET_CRED"""		3005095	2					
ANR	3005175	PrimaryExpression	"""Failed to start command CREDD_GET_CRED"""		3005095	0					
ANR	3005176	ReturnStatement	return false ;	142:2:3502:3514	3005095	1	True				
ANR	3005177	Identifier	false		3005095	0					
ANR	3005178	IfStatement	"if ( ! forceAuthentication ( & rsock , & condor_error ) )"		3005095	5					
ANR	3005179	Condition	"! forceAuthentication ( & rsock , & condor_error )"	146:5:3551:3595	3005095	0	True				
ANR	3005180	UnaryOperationExpression	"! forceAuthentication ( & rsock , & condor_error )"		3005095	0					
ANR	3005181	UnaryOperator	!		3005095	0					
ANR	3005182	CallExpression	"forceAuthentication ( & rsock , & condor_error )"		3005095	1					
ANR	3005183	Callee	forceAuthentication		3005095	0					
ANR	3005184	Identifier	forceAuthentication		3005095	0					
ANR	3005185	ArgumentList	& rsock		3005095	1					
ANR	3005186	Argument	& rsock		3005095	0					
ANR	3005187	UnaryOperationExpression	& rsock		3005095	0					
ANR	3005188	UnaryOperator	&		3005095	0					
ANR	3005189	Identifier	rsock		3005095	1					
ANR	3005190	Argument	& condor_error		3005095	1					
ANR	3005191	UnaryOperationExpression	& condor_error		3005095	0					
ANR	3005192	UnaryOperator	&		3005095	0					
ANR	3005193	Identifier	condor_error		3005095	1					
ANR	3005194	CompoundStatement		21:52:478:478	3005095	1					
ANR	3005195	ReturnStatement	return false ;	147:2:3602:3614	3005095	0	True				
ANR	3005196	Identifier	false		3005095	0					
ANR	3005197	ExpressionStatement	rsock . encode ( )	151:1:3650:3664	3005095	6	True				
ANR	3005198	CallExpression	rsock . encode ( )		3005095	0					
ANR	3005199	Callee	rsock . encode		3005095	0					
ANR	3005200	MemberAccess	rsock . encode		3005095	0					
ANR	3005201	Identifier	rsock		3005095	0					
ANR	3005202	Identifier	encode		3005095	1					
ANR	3005203	ArgumentList			3005095	1					
ANR	3005204	IdentifierDeclStatement	char * _cred_name = strdup ( cred_name ) ;	153:1:3668:3703	3005095	7	True				
ANR	3005205	IdentifierDecl	* _cred_name = strdup ( cred_name )		3005095	0					
ANR	3005206	IdentifierDeclType	char *		3005095	0					
ANR	3005207	Identifier	_cred_name		3005095	1					
ANR	3005208	AssignmentExpression	* _cred_name = strdup ( cred_name )		3005095	2		=			
ANR	3005209	Identifier	_cred_name		3005095	0					
ANR	3005210	CallExpression	strdup ( cred_name )		3005095	1					
ANR	3005211	Callee	strdup		3005095	0					
ANR	3005212	Identifier	strdup		3005095	0					
ANR	3005213	ArgumentList	cred_name		3005095	1					
ANR	3005214	Argument	cred_name		3005095	0					
ANR	3005215	Identifier	cred_name		3005095	0					
ANR	3005216	ExpressionStatement	rsock . code ( _cred_name )	154:1:3734:3757	3005095	8	True				
ANR	3005217	CallExpression	rsock . code ( _cred_name )		3005095	0					
ANR	3005218	Callee	rsock . code		3005095	0					
ANR	3005219	MemberAccess	rsock . code		3005095	0					
ANR	3005220	Identifier	rsock		3005095	0					
ANR	3005221	Identifier	code		3005095	1					
ANR	3005222	ArgumentList	_cred_name		3005095	1					
ANR	3005223	Argument	_cred_name		3005095	0					
ANR	3005224	Identifier	_cred_name		3005095	0					
ANR	3005225	ExpressionStatement	free ( _cred_name )	155:1:3760:3777	3005095	9	True				
ANR	3005226	CallExpression	free ( _cred_name )		3005095	0					
ANR	3005227	Callee	free		3005095	0					
ANR	3005228	Identifier	free		3005095	0					
ANR	3005229	ArgumentList	_cred_name		3005095	1					
ANR	3005230	Argument	_cred_name		3005095	0					
ANR	3005231	Identifier	_cred_name		3005095	0					
ANR	3005232	ExpressionStatement	rsock . decode ( )	157:1:3781:3795	3005095	10	True				
ANR	3005233	CallExpression	rsock . decode ( )		3005095	0					
ANR	3005234	Callee	rsock . decode		3005095	0					
ANR	3005235	MemberAccess	rsock . decode		3005095	0					
ANR	3005236	Identifier	rsock		3005095	0					
ANR	3005237	Identifier	decode		3005095	1					
ANR	3005238	ArgumentList			3005095	1					
ANR	3005239	IfStatement	if ( ! ( rsock . code ( cred_size ) && cred_size > 0 ) )		3005095	11					
ANR	3005240	Condition	! ( rsock . code ( cred_size ) && cred_size > 0 )	159:5:3803:3843	3005095	0	True				
ANR	3005241	UnaryOperationExpression	! ( rsock . code ( cred_size ) && cred_size > 0 )		3005095	0					
ANR	3005242	UnaryOperator	!		3005095	0					
ANR	3005243	AndExpression	rsock . code ( cred_size ) && cred_size > 0		3005095	1		&&			
ANR	3005244	CallExpression	rsock . code ( cred_size )		3005095	0					
ANR	3005245	Callee	rsock . code		3005095	0					
ANR	3005246	MemberAccess	rsock . code		3005095	0					
ANR	3005247	Identifier	rsock		3005095	0					
ANR	3005248	Identifier	code		3005095	1					
ANR	3005249	ArgumentList	cred_size		3005095	1					
ANR	3005250	Argument	cred_size		3005095	0					
ANR	3005251	Identifier	cred_size		3005095	0					
ANR	3005252	RelationalExpression	cred_size > 0		3005095	1		>			
ANR	3005253	Identifier	cred_size		3005095	0					
ANR	3005254	PrimaryExpression	0		3005095	1					
ANR	3005255	CompoundStatement		34:48:726:726	3005095	1					
ANR	3005256	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 3 , ""ERROR Receiving credential\\n"" )"	160:2:3850:3915	3005095	0	True				
ANR	3005257	CallExpression	"condor_error . push ( ""DC_CREDD"" , 3 , ""ERROR Receiving credential\\n"" )"		3005095	0					
ANR	3005258	Callee	condor_error . push		3005095	0					
ANR	3005259	MemberAccess	condor_error . push		3005095	0					
ANR	3005260	Identifier	condor_error		3005095	0					
ANR	3005261	Identifier	push		3005095	1					
ANR	3005262	ArgumentList	"""DC_CREDD"""		3005095	1					
ANR	3005263	Argument	"""DC_CREDD"""		3005095	0					
ANR	3005264	PrimaryExpression	"""DC_CREDD"""		3005095	0					
ANR	3005265	Argument	3		3005095	1					
ANR	3005266	PrimaryExpression	3		3005095	0					
ANR	3005267	Argument	"""ERROR Receiving credential\\n"""		3005095	2					
ANR	3005268	PrimaryExpression	"""ERROR Receiving credential\\n"""		3005095	0					
ANR	3005269	ReturnStatement	return false ;	161:2:3919:3931	3005095	1	True				
ANR	3005270	Identifier	false		3005095	0					
ANR	3005271	ExpressionStatement	cred_data = malloc ( cred_size )	164:1:3938:3968	3005095	12	True				
ANR	3005272	AssignmentExpression	cred_data = malloc ( cred_size )		3005095	0		=			
ANR	3005273	Identifier	cred_data		3005095	0					
ANR	3005274	CallExpression	malloc ( cred_size )		3005095	1					
ANR	3005275	Callee	malloc		3005095	0					
ANR	3005276	Identifier	malloc		3005095	0					
ANR	3005277	ArgumentList	cred_size		3005095	1					
ANR	3005278	Argument	cred_size		3005095	0					
ANR	3005279	Identifier	cred_size		3005095	0					
ANR	3005280	IfStatement	"if ( ! rsock . code_bytes ( cred_data , cred_size ) )"		3005095	13					
ANR	3005281	Condition	"! rsock . code_bytes ( cred_data , cred_size )"	165:5:3975:4014	3005095	0	True				
ANR	3005282	UnaryOperationExpression	"! rsock . code_bytes ( cred_data , cred_size )"		3005095	0					
ANR	3005283	UnaryOperator	!		3005095	0					
ANR	3005284	CallExpression	"rsock . code_bytes ( cred_data , cred_size )"		3005095	1					
ANR	3005285	Callee	rsock . code_bytes		3005095	0					
ANR	3005286	MemberAccess	rsock . code_bytes		3005095	0					
ANR	3005287	Identifier	rsock		3005095	0					
ANR	3005288	Identifier	code_bytes		3005095	1					
ANR	3005289	ArgumentList	cred_data		3005095	1					
ANR	3005290	Argument	cred_data		3005095	0					
ANR	3005291	Identifier	cred_data		3005095	0					
ANR	3005292	Argument	cred_size		3005095	1					
ANR	3005293	Identifier	cred_size		3005095	0					
ANR	3005294	CompoundStatement		40:47:897:897	3005095	1					
ANR	3005295	ExpressionStatement	free ( cred_data )	166:2:4021:4037	3005095	0	True				
ANR	3005296	CallExpression	free ( cred_data )		3005095	0					
ANR	3005297	Callee	free		3005095	0					
ANR	3005298	Identifier	free		3005095	0					
ANR	3005299	ArgumentList	cred_data		3005095	1					
ANR	3005300	Argument	cred_data		3005095	0					
ANR	3005301	Identifier	cred_data		3005095	0					
ANR	3005302	ExpressionStatement	cred_data = NULL	167:2:4041:4057	3005095	1	True				
ANR	3005303	AssignmentExpression	cred_data = NULL		3005095	0		=			
ANR	3005304	Identifier	cred_data		3005095	0					
ANR	3005305	Identifier	NULL		3005095	1					
ANR	3005306	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 4 , ""ERROR Receiving credential\\n"" )"	168:2:4061:4126	3005095	2	True				
ANR	3005307	CallExpression	"condor_error . push ( ""DC_CREDD"" , 4 , ""ERROR Receiving credential\\n"" )"		3005095	0					
ANR	3005308	Callee	condor_error . push		3005095	0					
ANR	3005309	MemberAccess	condor_error . push		3005095	0					
ANR	3005310	Identifier	condor_error		3005095	0					
ANR	3005311	Identifier	push		3005095	1					
ANR	3005312	ArgumentList	"""DC_CREDD"""		3005095	1					
ANR	3005313	Argument	"""DC_CREDD"""		3005095	0					
ANR	3005314	PrimaryExpression	"""DC_CREDD"""		3005095	0					
ANR	3005315	Argument	4		3005095	1					
ANR	3005316	PrimaryExpression	4		3005095	0					
ANR	3005317	Argument	"""ERROR Receiving credential\\n"""		3005095	2					
ANR	3005318	PrimaryExpression	"""ERROR Receiving credential\\n"""		3005095	0					
ANR	3005319	ReturnStatement	return false ;	169:2:4130:4142	3005095	3	True				
ANR	3005320	Identifier	false		3005095	0					
ANR	3005321	ExpressionStatement	rsock . close ( )	172:1:4150:4163	3005095	14	True				
ANR	3005322	CallExpression	rsock . close ( )		3005095	0					
ANR	3005323	Callee	rsock . close		3005095	0					
ANR	3005324	MemberAccess	rsock . close		3005095	0					
ANR	3005325	Identifier	rsock		3005095	0					
ANR	3005326	Identifier	close		3005095	1					
ANR	3005327	ArgumentList			3005095	1					
ANR	3005328	ReturnStatement	return true ;	173:1:4166:4177	3005095	15	True				
ANR	3005329	Identifier	true		3005095	0					
ANR	3005330	ReturnType	bool		3005095	1					
ANR	3005331	Identifier	DCCredd :: getCredentialData		3005095	2					
ANR	3005332	ParameterList	"const char * cred_name , void * & cred_data , int & cred_size , CondorError & condor_error"		3005095	3					
ANR	3005333	Parameter	const char * cred_name	123:28:3010:3031	3005095	0	True				
ANR	3005334	ParameterType	const char *		3005095	0					
ANR	3005335	Identifier	cred_name		3005095	1					
ANR	3005336	Parameter	void * & cred_data	124:7:3041:3057	3005095	1	True				
ANR	3005337	ParameterType	void * &		3005095	0					
ANR	3005338	Identifier	cred_data		3005095	1					
ANR	3005339	Parameter	int & cred_size	125:7:3067:3081	3005095	2	True				
ANR	3005340	ParameterType	int &		3005095	0					
ANR	3005341	Identifier	cred_size		3005095	1					
ANR	3005342	Parameter	CondorError & condor_error	126:7:3091:3116	3005095	3	True				
ANR	3005343	ParameterType	CondorError &		3005095	0					
ANR	3005344	Identifier	condor_error		3005095	1					
ANR	3005345	CFGEntryNode	ENTRY		3005095		True				
ANR	3005346	CFGExitNode	EXIT		3005095		True				
ANR	3005347	Symbol	malloc		3005095						
ANR	3005348	Symbol	NULL		3005095						
ANR	3005349	Symbol	false		3005095						
ANR	3005350	Symbol	rsock		3005095						
ANR	3005351	Symbol	rsock . connect		3005095						
ANR	3005352	Symbol	startCommand		3005095						
ANR	3005353	Symbol	forceAuthentication		3005095						
ANR	3005354	Symbol	cred_size		3005095						
ANR	3005355	Symbol	& condor_error		3005095						
ANR	3005356	Symbol	rsock . code		3005095						
ANR	3005357	Symbol	_addr		3005095						
ANR	3005358	Symbol	& rsock		3005095						
ANR	3005359	Symbol	true		3005095						
ANR	3005360	Symbol	cred_name		3005095						
ANR	3005361	Symbol	rsock . code_bytes		3005095						
ANR	3005362	Symbol	cred_data		3005095						
ANR	3005363	Symbol	_cred_name		3005095						
ANR	3005364	Symbol	strdup		3005095						
ANR	3005365	Symbol	condor_error		3005095						
ANR	3005366	Symbol	CREDD_GET_CRED		3005095						
ANR	3005367	Function	DCCredd :: listCredentials	176:0:4182:5398							
ANR	3005368	FunctionDef	"DCCredd :: listCredentials (SimpleList < Credential * > & result , int & size , CondorError & condor_error)"		3005367	0					
ANR	3005369	CompoundStatement		179:36:4306:5398	3005367	0					
ANR	3005370	IdentifierDeclStatement	bool rtnVal = false ;	181:1:4310:4329	3005367	0	True				
ANR	3005371	IdentifierDecl	rtnVal = false		3005367	0					
ANR	3005372	IdentifierDeclType	bool		3005367	0					
ANR	3005373	Identifier	rtnVal		3005367	1					
ANR	3005374	AssignmentExpression	rtnVal = false		3005367	2		=			
ANR	3005375	Identifier	false		3005367	0					
ANR	3005376	Identifier	false		3005367	1					
ANR	3005377	IdentifierDeclStatement	ReliSock * rsock = NULL ;	182:1:4343:4365	3005367	1	True				
ANR	3005378	IdentifierDecl	* rsock = NULL		3005367	0					
ANR	3005379	IdentifierDeclType	ReliSock *		3005367	0					
ANR	3005380	Identifier	rsock		3005367	1					
ANR	3005381	AssignmentExpression	* rsock = NULL		3005367	2		=			
ANR	3005382	Identifier	NULL		3005367	0					
ANR	3005383	Identifier	NULL		3005367	1					
ANR	3005384	IdentifierDeclStatement	Credential * cred = NULL ;	183:1:4368:4392	3005367	2	True				
ANR	3005385	IdentifierDecl	* cred = NULL		3005367	0					
ANR	3005386	IdentifierDeclType	Credential *		3005367	0					
ANR	3005387	Identifier	cred		3005367	1					
ANR	3005388	AssignmentExpression	* cred = NULL		3005367	2		=			
ANR	3005389	Identifier	NULL		3005367	0					
ANR	3005390	Identifier	NULL		3005367	1					
ANR	3005391	IdentifierDeclStatement	classad :: ClassAdParser parser ;	184:1:4395:4424	3005367	3	True				
ANR	3005392	IdentifierDecl	parser		3005367	0					
ANR	3005393	IdentifierDeclType	classad :: ClassAdParser		3005367	0					
ANR	3005394	Identifier	parser		3005367	1					
ANR	3005395	IdentifierDeclStatement	classad :: ClassAd * ad = NULL ;	185:1:4427:4455	3005367	4	True				
ANR	3005396	IdentifierDecl	* ad = NULL		3005367	0					
ANR	3005397	IdentifierDeclType	classad :: ClassAd *		3005367	0					
ANR	3005398	Identifier	ad		3005367	1					
ANR	3005399	AssignmentExpression	* ad = NULL		3005367	2		=			
ANR	3005400	Identifier	NULL		3005367	0					
ANR	3005401	Identifier	NULL		3005367	1					
ANR	3005402	IdentifierDeclStatement	"const char * request = ""_"" ;"	186:1:4458:4483	3005367	5	True				
ANR	3005403	IdentifierDecl	"* request = ""_"""		3005367	0					
ANR	3005404	IdentifierDeclType	const char *		3005367	0					
ANR	3005405	Identifier	request		3005367	1					
ANR	3005406	AssignmentExpression	"* request = ""_"""		3005367	2		=			
ANR	3005407	Identifier	request		3005367	0					
ANR	3005408	PrimaryExpression	"""_"""		3005367	1					
ANR	3005409	ExpressionStatement	"rsock = ( ReliSock * ) startCommand ( CREDD_QUERY_CRED , Stream :: reli_sock , 20 , & condor_error )"	188:1:4487:4579	3005367	6	True				
ANR	3005410	AssignmentExpression	"rsock = ( ReliSock * ) startCommand ( CREDD_QUERY_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005367	0		=			
ANR	3005411	Identifier	rsock		3005367	0					
ANR	3005412	CastExpression	"( ReliSock * ) startCommand ( CREDD_QUERY_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005367	1					
ANR	3005413	CastTarget	ReliSock *		3005367	0					
ANR	3005414	CallExpression	"startCommand ( CREDD_QUERY_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005367	1					
ANR	3005415	Callee	startCommand		3005367	0					
ANR	3005416	Identifier	startCommand		3005367	0					
ANR	3005417	ArgumentList	CREDD_QUERY_CRED		3005367	1					
ANR	3005418	Argument	CREDD_QUERY_CRED		3005367	0					
ANR	3005419	Identifier	CREDD_QUERY_CRED		3005367	0					
ANR	3005420	Argument	Stream :: reli_sock		3005367	1					
ANR	3005421	Identifier	Stream :: reli_sock		3005367	0					
ANR	3005422	Argument	20		3005367	2					
ANR	3005423	PrimaryExpression	20		3005367	0					
ANR	3005424	Argument	& condor_error		3005367	3					
ANR	3005425	UnaryOperationExpression	& condor_error		3005367	0					
ANR	3005426	UnaryOperator	&		3005367	0					
ANR	3005427	Identifier	condor_error		3005367	1					
ANR	3005428	IfStatement	if ( ! rsock )		3005367	7					
ANR	3005429	Condition	! rsock	190:6:4587:4593	3005367	0	True				
ANR	3005430	UnaryOperationExpression	! rsock		3005367	0					
ANR	3005431	UnaryOperator	!		3005367	0					
ANR	3005432	Identifier	rsock		3005367	1					
ANR	3005433	CompoundStatement		12:16:290:290	3005367	1					
ANR	3005434	GotoStatement	goto EXIT ;	191:2:4601:4610	3005367	0	True				
ANR	3005435	Identifier	EXIT		3005367	0					
ANR	3005436	IfStatement	"if ( ! forceAuthentication ( rsock , & condor_error ) )"		3005367	8					
ANR	3005437	Condition	"! forceAuthentication ( rsock , & condor_error )"	195:5:4647:4690	3005367	0	True				
ANR	3005438	UnaryOperationExpression	"! forceAuthentication ( rsock , & condor_error )"		3005367	0					
ANR	3005439	UnaryOperator	!		3005367	0					
ANR	3005440	CallExpression	"forceAuthentication ( rsock , & condor_error )"		3005367	1					
ANR	3005441	Callee	forceAuthentication		3005367	0					
ANR	3005442	Identifier	forceAuthentication		3005367	0					
ANR	3005443	ArgumentList	rsock		3005367	1					
ANR	3005444	Argument	rsock		3005367	0					
ANR	3005445	Identifier	rsock		3005367	0					
ANR	3005446	Argument	& condor_error		3005367	1					
ANR	3005447	UnaryOperationExpression	& condor_error		3005367	0					
ANR	3005448	UnaryOperator	&		3005367	0					
ANR	3005449	Identifier	condor_error		3005367	1					
ANR	3005450	CompoundStatement		17:51:386:386	3005367	1					
ANR	3005451	GotoStatement	goto EXIT ;	196:2:4697:4706	3005367	0	True				
ANR	3005452	Identifier	EXIT		3005367	0					
ANR	3005453	ExpressionStatement	rsock -> encode ( )	199:1:4713:4728	3005367	9	True				
ANR	3005454	CallExpression	rsock -> encode ( )		3005367	0					
ANR	3005455	Callee	rsock -> encode		3005367	0					
ANR	3005456	PtrMemberAccess	rsock -> encode		3005367	0					
ANR	3005457	Identifier	rsock		3005367	0					
ANR	3005458	Identifier	encode		3005367	1					
ANR	3005459	ArgumentList			3005367	1					
ANR	3005460	ExpressionStatement	rsock -> put ( request )	200:1:4731:4751	3005367	10	True				
ANR	3005461	CallExpression	rsock -> put ( request )		3005367	0					
ANR	3005462	Callee	rsock -> put		3005367	0					
ANR	3005463	PtrMemberAccess	rsock -> put		3005367	0					
ANR	3005464	Identifier	rsock		3005367	0					
ANR	3005465	Identifier	put		3005367	1					
ANR	3005466	ArgumentList	request		3005367	1					
ANR	3005467	Argument	request		3005367	0					
ANR	3005468	Identifier	request		3005367	0					
ANR	3005469	ExpressionStatement	rsock -> end_of_message ( )	201:1:4754:4777	3005367	11	True				
ANR	3005470	CallExpression	rsock -> end_of_message ( )		3005367	0					
ANR	3005471	Callee	rsock -> end_of_message		3005367	0					
ANR	3005472	PtrMemberAccess	rsock -> end_of_message		3005367	0					
ANR	3005473	Identifier	rsock		3005367	0					
ANR	3005474	Identifier	end_of_message		3005367	1					
ANR	3005475	ArgumentList			3005367	1					
ANR	3005476	ExpressionStatement	rsock -> decode ( )	204:1:4803:4818	3005367	12	True				
ANR	3005477	CallExpression	rsock -> decode ( )		3005367	0					
ANR	3005478	Callee	rsock -> decode		3005367	0					
ANR	3005479	PtrMemberAccess	rsock -> decode		3005367	0					
ANR	3005480	Identifier	rsock		3005367	0					
ANR	3005481	Identifier	decode		3005367	1					
ANR	3005482	ArgumentList			3005367	1					
ANR	3005483	ExpressionStatement	rsock -> code ( size )	206:1:4822:4840	3005367	13	True				
ANR	3005484	CallExpression	rsock -> code ( size )		3005367	0					
ANR	3005485	Callee	rsock -> code		3005367	0					
ANR	3005486	PtrMemberAccess	rsock -> code		3005367	0					
ANR	3005487	Identifier	rsock		3005367	0					
ANR	3005488	Identifier	code		3005367	1					
ANR	3005489	ArgumentList	size		3005367	1					
ANR	3005490	Argument	size		3005367	0					
ANR	3005491	Identifier	size		3005367	0					
ANR	3005492	IfStatement	if ( size == 0 )		3005367	14					
ANR	3005493	Condition	size == 0	207:5:4847:4855	3005367	0	True				
ANR	3005494	EqualityExpression	size == 0		3005367	0		==			
ANR	3005495	Identifier	size		3005367	0					
ANR	3005496	PrimaryExpression	0		3005367	1					
ANR	3005497	CompoundStatement		29:16:551:551	3005367	1					
ANR	3005498	ExpressionStatement	rtnVal = true	208:2:4862:4875	3005367	0	True				
ANR	3005499	AssignmentExpression	rtnVal = true		3005367	0		=			
ANR	3005500	Identifier	rtnVal		3005367	0					
ANR	3005501	Identifier	true		3005367	1					
ANR	3005502	GotoStatement	goto EXIT ;	209:2:4879:4888	3005367	1	True				
ANR	3005503	Identifier	EXIT		3005367	0					
ANR	3005504	IdentifierDeclStatement	int i ;	212:1:4895:4900	3005367	15	True				
ANR	3005505	IdentifierDecl	i		3005367	0					
ANR	3005506	IdentifierDeclType	int		3005367	0					
ANR	3005507	Identifier	i		3005367	1					
ANR	3005508	ForStatement	for ( i = 0 ; i < size ; i ++ )		3005367	16					
ANR	3005509	ForInit	i = 0 ;	213:6:4908:4911	3005367	0	True				
ANR	3005510	AssignmentExpression	i = 0		3005367	0		=			
ANR	3005511	Identifier	i		3005367	0					
ANR	3005512	PrimaryExpression	0		3005367	1					
ANR	3005513	Condition	i < size	213:11:4913:4918	3005367	1	True				
ANR	3005514	RelationalExpression	i < size		3005367	0		<			
ANR	3005515	Identifier	i		3005367	0					
ANR	3005516	Identifier	size		3005367	1					
ANR	3005517	PostIncDecOperationExpression	i ++	213:19:4921:4923	3005367	2	True				
ANR	3005518	Identifier	i		3005367	0					
ANR	3005519	IncDec	++		3005367	1					
ANR	3005520	CompoundStatement		36:2:623:648	3005367	3					
ANR	3005521	IdentifierDeclStatement	char * classad_str = NULL ;	214:2:4930:4955	3005367	0	True				
ANR	3005522	IdentifierDecl	* classad_str = NULL		3005367	0					
ANR	3005523	IdentifierDeclType	char *		3005367	0					
ANR	3005524	Identifier	classad_str		3005367	1					
ANR	3005525	AssignmentExpression	* classad_str = NULL		3005367	2		=			
ANR	3005526	Identifier	NULL		3005367	0					
ANR	3005527	Identifier	NULL		3005367	1					
ANR	3005528	IfStatement	if ( ! ( rsock -> code ( classad_str ) ) )		3005367	1					
ANR	3005529	Condition	! ( rsock -> code ( classad_str ) )	215:6:4963:4990	3005367	0	True				
ANR	3005530	UnaryOperationExpression	! ( rsock -> code ( classad_str ) )		3005367	0					
ANR	3005531	UnaryOperator	!		3005367	0					
ANR	3005532	CallExpression	rsock -> code ( classad_str )		3005367	1					
ANR	3005533	Callee	rsock -> code		3005367	0					
ANR	3005534	PtrMemberAccess	rsock -> code		3005367	0					
ANR	3005535	Identifier	rsock		3005367	0					
ANR	3005536	Identifier	code		3005367	1					
ANR	3005537	ArgumentList	classad_str		3005367	1					
ANR	3005538	Argument	classad_str		3005367	0					
ANR	3005539	Identifier	classad_str		3005367	0					
ANR	3005540	CompoundStatement		37:36:686:686	3005367	1					
ANR	3005541	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 3 , ""Unable to receive credential data"" )"	216:3:4998:5068	3005367	0	True				
ANR	3005542	CallExpression	"condor_error . push ( ""DC_CREDD"" , 3 , ""Unable to receive credential data"" )"		3005367	0					
ANR	3005543	Callee	condor_error . push		3005367	0					
ANR	3005544	MemberAccess	condor_error . push		3005367	0					
ANR	3005545	Identifier	condor_error		3005367	0					
ANR	3005546	Identifier	push		3005367	1					
ANR	3005547	ArgumentList	"""DC_CREDD"""		3005367	1					
ANR	3005548	Argument	"""DC_CREDD"""		3005367	0					
ANR	3005549	PrimaryExpression	"""DC_CREDD"""		3005367	0					
ANR	3005550	Argument	3		3005367	1					
ANR	3005551	PrimaryExpression	3		3005367	0					
ANR	3005552	Argument	"""Unable to receive credential data"""		3005367	2					
ANR	3005553	PrimaryExpression	"""Unable to receive credential data"""		3005367	0					
ANR	3005554	GotoStatement	goto EXIT ;	217:3:5073:5082	3005367	1	True				
ANR	3005555	Identifier	EXIT		3005367	0					
ANR	3005556	ExpressionStatement	ad = parser . ParseClassAd ( classad_str )	220:2:5091:5129	3005367	2	True				
ANR	3005557	AssignmentExpression	ad = parser . ParseClassAd ( classad_str )		3005367	0		=			
ANR	3005558	Identifier	ad		3005367	0					
ANR	3005559	CallExpression	parser . ParseClassAd ( classad_str )		3005367	1					
ANR	3005560	Callee	parser . ParseClassAd		3005367	0					
ANR	3005561	MemberAccess	parser . ParseClassAd		3005367	0					
ANR	3005562	Identifier	parser		3005367	0					
ANR	3005563	Identifier	ParseClassAd		3005367	1					
ANR	3005564	ArgumentList	classad_str		3005367	1					
ANR	3005565	Argument	classad_str		3005367	0					
ANR	3005566	Identifier	classad_str		3005367	0					
ANR	3005567	IfStatement	if ( ! ad )		3005367	3					
ANR	3005568	Condition	! ad	221:6:5137:5139	3005367	0	True				
ANR	3005569	UnaryOperationExpression	! ad		3005367	0					
ANR	3005570	UnaryOperator	!		3005367	0					
ANR	3005571	Identifier	ad		3005367	1					
ANR	3005572	CompoundStatement		43:11:835:835	3005367	1					
ANR	3005573	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 4 , ""Unable to parse credential data"" )"	222:3:5147:5215	3005367	0	True				
ANR	3005574	CallExpression	"condor_error . push ( ""DC_CREDD"" , 4 , ""Unable to parse credential data"" )"		3005367	0					
ANR	3005575	Callee	condor_error . push		3005367	0					
ANR	3005576	MemberAccess	condor_error . push		3005367	0					
ANR	3005577	Identifier	condor_error		3005367	0					
ANR	3005578	Identifier	push		3005367	1					
ANR	3005579	ArgumentList	"""DC_CREDD"""		3005367	1					
ANR	3005580	Argument	"""DC_CREDD"""		3005367	0					
ANR	3005581	PrimaryExpression	"""DC_CREDD"""		3005367	0					
ANR	3005582	Argument	4		3005367	1					
ANR	3005583	PrimaryExpression	4		3005367	0					
ANR	3005584	Argument	"""Unable to parse credential data"""		3005367	2					
ANR	3005585	PrimaryExpression	"""Unable to parse credential data"""		3005367	0					
ANR	3005586	GotoStatement	goto EXIT ;	223:3:5220:5229	3005367	1	True				
ANR	3005587	Identifier	EXIT		3005367	0					
ANR	3005588	ExpressionStatement	cred = new X509Credential ( * ad )	226:2:5238:5269	3005367	4	True				
ANR	3005589	AssignmentExpression	cred = new X509Credential ( * ad )		3005367	0		=			
ANR	3005590	Identifier	cred		3005367	0					
ANR	3005591	UnaryOperationExpression	* ad		3005367	1					
ANR	3005592	UnaryOperator	*		3005367	0					
ANR	3005593	Identifier	ad		3005367	1					
ANR	3005594	ExpressionStatement	result . Append ( cred )	227:2:5273:5293	3005367	5	True				
ANR	3005595	CallExpression	result . Append ( cred )		3005367	0					
ANR	3005596	Callee	result . Append		3005367	0					
ANR	3005597	MemberAccess	result . Append		3005367	0					
ANR	3005598	Identifier	result		3005367	0					
ANR	3005599	Identifier	Append		3005367	1					
ANR	3005600	ArgumentList	cred		3005367	1					
ANR	3005601	Argument	cred		3005367	0					
ANR	3005602	Identifier	cred		3005367	0					
ANR	3005603	ExpressionStatement	rtnVal = true	230:1:5300:5314	3005367	17	True				
ANR	3005604	AssignmentExpression	rtnVal = true		3005367	0		=			
ANR	3005605	Identifier	rtnVal		3005367	0					
ANR	3005606	Identifier	true		3005367	1					
ANR	3005607	Label	EXIT :	232:0:5328:5332	3005367	18	True				
ANR	3005608	Identifier	EXIT		3005367	0					
ANR	3005609	IfStatement	if ( ad )		3005367	19					
ANR	3005610	Condition	ad	233:5:5339:5340	3005367	0	True				
ANR	3005611	Identifier	ad		3005367	0					
ANR	3005612	Statement	delete	233:9:5343:5348	3005367	1	True				
ANR	3005613	ExpressionStatement	ad	233:16:5350:5352	3005367	20	True				
ANR	3005614	Identifier	ad		3005367	0					
ANR	3005615	IfStatement	if ( rsock )		3005367	21					
ANR	3005616	Condition	rsock	234:6:5360:5364	3005367	0	True				
ANR	3005617	Identifier	rsock		3005367	0					
ANR	3005618	Statement	delete	234:14:5368:5373	3005367	1	True				
ANR	3005619	ExpressionStatement	rsock	234:21:5375:5380	3005367	22	True				
ANR	3005620	Identifier	rsock		3005367	0					
ANR	3005621	ReturnStatement	return rtnVal ;	235:1:5383:5396	3005367	23	True				
ANR	3005622	Identifier	rtnVal		3005367	0					
ANR	3005623	ReturnType	bool		3005367	1					
ANR	3005624	Identifier	DCCredd :: listCredentials		3005367	2					
ANR	3005625	ParameterList	"SimpleList < Credential * > & result , int & size , CondorError & condor_error"		3005367	3					
ANR	3005626	Parameter	SimpleList < Credential * > & result	177:26:4213:4245	3005367	0	True				
ANR	3005627	ParameterType	SimpleList < Credential * > &		3005367	0					
ANR	3005628	Identifier	result		3005367	1					
ANR	3005629	Parameter	int & size	178:8:4258:4267	3005367	1	True				
ANR	3005630	ParameterType	int &		3005367	0					
ANR	3005631	Identifier	size		3005367	1					
ANR	3005632	Parameter	CondorError & condor_error	179:8:4278:4303	3005367	2	True				
ANR	3005633	ParameterType	CondorError &		3005367	0					
ANR	3005634	Identifier	condor_error		3005367	1					
ANR	3005635	CFGEntryNode	ENTRY		3005367		True				
ANR	3005636	CFGExitNode	EXIT		3005367		True				
ANR	3005637	Symbol	cred		3005367						
ANR	3005638	Symbol	request		3005367						
ANR	3005639	Symbol	NULL		3005367						
ANR	3005640	Symbol	ad		3005367						
ANR	3005641	Symbol	false		3005367						
ANR	3005642	Symbol	i		3005367						
ANR	3005643	Symbol	rsock		3005367						
ANR	3005644	Symbol	* ad		3005367						
ANR	3005645	Symbol	rtnVal		3005367						
ANR	3005646	Symbol	startCommand		3005367						
ANR	3005647	Symbol	parser . ParseClassAd		3005367						
ANR	3005648	Symbol	classad_str		3005367						
ANR	3005649	Symbol	result		3005367						
ANR	3005650	Symbol	forceAuthentication		3005367						
ANR	3005651	Symbol	size		3005367						
ANR	3005652	Symbol	parser		3005367						
ANR	3005653	Symbol	& condor_error		3005367						
ANR	3005654	Symbol	true		3005367						
ANR	3005655	Symbol	CREDD_QUERY_CRED		3005367						
ANR	3005656	Symbol	Stream :: reli_sock		3005367						
ANR	3005657	Symbol	* rsock		3005367						
ANR	3005658	Symbol	condor_error		3005367						
ANR	3005659	Symbol	rsock -> code		3005367						
ANR	3005660	Function	DCCredd :: removeCredential	238:0:5401:6549							
ANR	3005661	FunctionDef	"DCCredd :: removeCredential (const char * cred_name , CondorError & condor_error)"		3005660	0					
ANR	3005662	CompoundStatement		240:37:5495:6549	3005660	0					
ANR	3005663	IdentifierDeclStatement	bool rtnVal = false ;	242:1:5499:5518	3005660	0	True				
ANR	3005664	IdentifierDecl	rtnVal = false		3005660	0					
ANR	3005665	IdentifierDeclType	bool		3005660	0					
ANR	3005666	Identifier	rtnVal		3005660	1					
ANR	3005667	AssignmentExpression	rtnVal = false		3005660	2		=			
ANR	3005668	Identifier	false		3005660	0					
ANR	3005669	Identifier	false		3005660	1					
ANR	3005670	IdentifierDeclStatement	ReliSock * rsock = NULL ;	243:1:5521:5543	3005660	1	True				
ANR	3005671	IdentifierDecl	* rsock = NULL		3005660	0					
ANR	3005672	IdentifierDeclType	ReliSock *		3005660	0					
ANR	3005673	Identifier	rsock		3005660	1					
ANR	3005674	AssignmentExpression	* rsock = NULL		3005660	2		=			
ANR	3005675	Identifier	NULL		3005660	0					
ANR	3005676	Identifier	NULL		3005660	1					
ANR	3005677	IdentifierDeclStatement	char * _cred_name = NULL ;	244:1:5546:5570	3005660	2	True				
ANR	3005678	IdentifierDecl	* _cred_name = NULL		3005660	0					
ANR	3005679	IdentifierDeclType	char *		3005660	0					
ANR	3005680	Identifier	_cred_name		3005660	1					
ANR	3005681	AssignmentExpression	* _cred_name = NULL		3005660	2		=			
ANR	3005682	Identifier	NULL		3005660	0					
ANR	3005683	Identifier	NULL		3005660	1					
ANR	3005684	IdentifierDeclStatement	int rc = 0 ;	245:1:5573:5581	3005660	3	True				
ANR	3005685	IdentifierDecl	rc = 0		3005660	0					
ANR	3005686	IdentifierDeclType	int		3005660	0					
ANR	3005687	Identifier	rc		3005660	1					
ANR	3005688	AssignmentExpression	rc = 0		3005660	2		=			
ANR	3005689	Identifier	rc		3005660	0					
ANR	3005690	PrimaryExpression	0		3005660	1					
ANR	3005691	ExpressionStatement	"rsock = ( ReliSock * ) startCommand ( CREDD_REMOVE_CRED , Stream :: reli_sock , 20 , & condor_error )"	247:1:5585:5678	3005660	4	True				
ANR	3005692	AssignmentExpression	"rsock = ( ReliSock * ) startCommand ( CREDD_REMOVE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005660	0		=			
ANR	3005693	Identifier	rsock		3005660	0					
ANR	3005694	CastExpression	"( ReliSock * ) startCommand ( CREDD_REMOVE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005660	1					
ANR	3005695	CastTarget	ReliSock *		3005660	0					
ANR	3005696	CallExpression	"startCommand ( CREDD_REMOVE_CRED , Stream :: reli_sock , 20 , & condor_error )"		3005660	1					
ANR	3005697	Callee	startCommand		3005660	0					
ANR	3005698	Identifier	startCommand		3005660	0					
ANR	3005699	ArgumentList	CREDD_REMOVE_CRED		3005660	1					
ANR	3005700	Argument	CREDD_REMOVE_CRED		3005660	0					
ANR	3005701	Identifier	CREDD_REMOVE_CRED		3005660	0					
ANR	3005702	Argument	Stream :: reli_sock		3005660	1					
ANR	3005703	Identifier	Stream :: reli_sock		3005660	0					
ANR	3005704	Argument	20		3005660	2					
ANR	3005705	PrimaryExpression	20		3005660	0					
ANR	3005706	Argument	& condor_error		3005660	3					
ANR	3005707	UnaryOperationExpression	& condor_error		3005660	0					
ANR	3005708	UnaryOperator	&		3005660	0					
ANR	3005709	Identifier	condor_error		3005660	1					
ANR	3005710	IfStatement	if ( ! rsock )		3005660	5					
ANR	3005711	Condition	! rsock	249:6:5686:5692	3005660	0	True				
ANR	3005712	UnaryOperationExpression	! rsock		3005660	0					
ANR	3005713	UnaryOperator	!		3005660	0					
ANR	3005714	Identifier	rsock		3005660	1					
ANR	3005715	CompoundStatement		10:16:200:200	3005660	1					
ANR	3005716	GotoStatement	goto EXIT ;	250:2:5700:5709	3005660	0	True				
ANR	3005717	Identifier	EXIT		3005660	0					
ANR	3005718	IfStatement	"if ( ! forceAuthentication ( rsock , & condor_error ) )"		3005660	6					
ANR	3005719	Condition	"! forceAuthentication ( rsock , & condor_error )"	254:5:5746:5789	3005660	0	True				
ANR	3005720	UnaryOperationExpression	"! forceAuthentication ( rsock , & condor_error )"		3005660	0					
ANR	3005721	UnaryOperator	!		3005660	0					
ANR	3005722	CallExpression	"forceAuthentication ( rsock , & condor_error )"		3005660	1					
ANR	3005723	Callee	forceAuthentication		3005660	0					
ANR	3005724	Identifier	forceAuthentication		3005660	0					
ANR	3005725	ArgumentList	rsock		3005660	1					
ANR	3005726	Argument	rsock		3005660	0					
ANR	3005727	Identifier	rsock		3005660	0					
ANR	3005728	Argument	& condor_error		3005660	1					
ANR	3005729	UnaryOperationExpression	& condor_error		3005660	0					
ANR	3005730	UnaryOperator	&		3005660	0					
ANR	3005731	Identifier	condor_error		3005660	1					
ANR	3005732	CompoundStatement		15:51:296:296	3005660	1					
ANR	3005733	GotoStatement	goto EXIT ;	255:2:5796:5805	3005660	0	True				
ANR	3005734	Identifier	EXIT		3005660	0					
ANR	3005735	ExpressionStatement	rsock -> encode ( )	258:1:5812:5827	3005660	7	True				
ANR	3005736	CallExpression	rsock -> encode ( )		3005660	0					
ANR	3005737	Callee	rsock -> encode		3005660	0					
ANR	3005738	PtrMemberAccess	rsock -> encode		3005660	0					
ANR	3005739	Identifier	rsock		3005660	0					
ANR	3005740	Identifier	encode		3005660	1					
ANR	3005741	ArgumentList			3005660	1					
ANR	3005742	ExpressionStatement	_cred_name = strdup ( cred_name )	260:1:5831:5859	3005660	8	True				
ANR	3005743	AssignmentExpression	_cred_name = strdup ( cred_name )		3005660	0		=			
ANR	3005744	Identifier	_cred_name		3005660	0					
ANR	3005745	CallExpression	strdup ( cred_name )		3005660	1					
ANR	3005746	Callee	strdup		3005660	0					
ANR	3005747	Identifier	strdup		3005660	0					
ANR	3005748	ArgumentList	cred_name		3005660	1					
ANR	3005749	Argument	cred_name		3005660	0					
ANR	3005750	Identifier	cred_name		3005660	0					
ANR	3005751	IfStatement	if ( ! rsock -> code ( _cred_name ) )		3005660	9					
ANR	3005752	Condition	! rsock -> code ( _cred_name )	261:6:5895:5920	3005660	0	True				
ANR	3005753	UnaryOperationExpression	! rsock -> code ( _cred_name )		3005660	0					
ANR	3005754	UnaryOperator	!		3005660	0					
ANR	3005755	CallExpression	rsock -> code ( _cred_name )		3005660	1					
ANR	3005756	Callee	rsock -> code		3005660	0					
ANR	3005757	PtrMemberAccess	rsock -> code		3005660	0					
ANR	3005758	Identifier	rsock		3005660	0					
ANR	3005759	Identifier	code		3005660	1					
ANR	3005760	ArgumentList	_cred_name		3005660	1					
ANR	3005761	Argument	_cred_name		3005660	0					
ANR	3005762	Identifier	_cred_name		3005660	0					
ANR	3005763	CompoundStatement		22:35:428:428	3005660	1					
ANR	3005764	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error sending credential name: %s"" , strerror ( errno ) )"	262:2:5928:6022	3005660	0	True				
ANR	3005765	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error sending credential name: %s"" , strerror ( errno ) )"		3005660	0					
ANR	3005766	Callee	condor_error . pushf		3005660	0					
ANR	3005767	MemberAccess	condor_error . pushf		3005660	0					
ANR	3005768	Identifier	condor_error		3005660	0					
ANR	3005769	Identifier	pushf		3005660	1					
ANR	3005770	ArgumentList	"""DC_CREDD"""		3005660	1					
ANR	3005771	Argument	"""DC_CREDD"""		3005660	0					
ANR	3005772	PrimaryExpression	"""DC_CREDD"""		3005660	0					
ANR	3005773	Argument	3		3005660	1					
ANR	3005774	PrimaryExpression	3		3005660	0					
ANR	3005775	Argument	"""Error sending credential name: %s"""		3005660	2					
ANR	3005776	PrimaryExpression	"""Error sending credential name: %s"""		3005660	0					
ANR	3005777	Argument	strerror ( errno )		3005660	3					
ANR	3005778	CallExpression	strerror ( errno )		3005660	0					
ANR	3005779	Callee	strerror		3005660	0					
ANR	3005780	Identifier	strerror		3005660	0					
ANR	3005781	ArgumentList	errno		3005660	1					
ANR	3005782	Argument	errno		3005660	0					
ANR	3005783	Identifier	errno		3005660	0					
ANR	3005784	GotoStatement	goto EXIT ;	264:2:6026:6035	3005660	1	True				
ANR	3005785	Identifier	EXIT		3005660	0					
ANR	3005786	IfStatement	if ( ! rsock -> end_of_message ( ) )		3005660	10					
ANR	3005787	Condition	! rsock -> end_of_message ( )	267:6:6047:6071	3005660	0	True				
ANR	3005788	UnaryOperationExpression	! rsock -> end_of_message ( )		3005660	0					
ANR	3005789	UnaryOperator	!		3005660	0					
ANR	3005790	CallExpression	rsock -> end_of_message ( )		3005660	1					
ANR	3005791	Callee	rsock -> end_of_message		3005660	0					
ANR	3005792	PtrMemberAccess	rsock -> end_of_message		3005660	0					
ANR	3005793	Identifier	rsock		3005660	0					
ANR	3005794	Identifier	end_of_message		3005660	1					
ANR	3005795	ArgumentList			3005660	1					
ANR	3005796	CompoundStatement		28:34:579:579	3005660	1					
ANR	3005797	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error sending credential eom: %s"" , strerror ( errno ) )"	268:2:6079:6172	3005660	0	True				
ANR	3005798	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error sending credential eom: %s"" , strerror ( errno ) )"		3005660	0					
ANR	3005799	Callee	condor_error . pushf		3005660	0					
ANR	3005800	MemberAccess	condor_error . pushf		3005660	0					
ANR	3005801	Identifier	condor_error		3005660	0					
ANR	3005802	Identifier	pushf		3005660	1					
ANR	3005803	ArgumentList	"""DC_CREDD"""		3005660	1					
ANR	3005804	Argument	"""DC_CREDD"""		3005660	0					
ANR	3005805	PrimaryExpression	"""DC_CREDD"""		3005660	0					
ANR	3005806	Argument	3		3005660	1					
ANR	3005807	PrimaryExpression	3		3005660	0					
ANR	3005808	Argument	"""Error sending credential eom: %s"""		3005660	2					
ANR	3005809	PrimaryExpression	"""Error sending credential eom: %s"""		3005660	0					
ANR	3005810	Argument	strerror ( errno )		3005660	3					
ANR	3005811	CallExpression	strerror ( errno )		3005660	0					
ANR	3005812	Callee	strerror		3005660	0					
ANR	3005813	Identifier	strerror		3005660	0					
ANR	3005814	ArgumentList	errno		3005660	1					
ANR	3005815	Argument	errno		3005660	0					
ANR	3005816	Identifier	errno		3005660	0					
ANR	3005817	GotoStatement	goto EXIT ;	270:2:6176:6185	3005660	1	True				
ANR	3005818	Identifier	EXIT		3005660	0					
ANR	3005819	ExpressionStatement	rsock -> decode ( )	272:1:6191:6206	3005660	11	True				
ANR	3005820	CallExpression	rsock -> decode ( )		3005660	0					
ANR	3005821	Callee	rsock -> decode		3005660	0					
ANR	3005822	PtrMemberAccess	rsock -> decode		3005660	0					
ANR	3005823	Identifier	rsock		3005660	0					
ANR	3005824	Identifier	decode		3005660	1					
ANR	3005825	ArgumentList			3005660	1					
ANR	3005826	IfStatement	if ( ! rsock -> code ( rc ) )		3005660	12					
ANR	3005827	Condition	! rsock -> code ( rc )	274:6:6215:6232	3005660	0	True				
ANR	3005828	UnaryOperationExpression	! rsock -> code ( rc )		3005660	0					
ANR	3005829	UnaryOperator	!		3005660	0					
ANR	3005830	CallExpression	rsock -> code ( rc )		3005660	1					
ANR	3005831	Callee	rsock -> code		3005660	0					
ANR	3005832	PtrMemberAccess	rsock -> code		3005660	0					
ANR	3005833	Identifier	rsock		3005660	0					
ANR	3005834	Identifier	code		3005660	1					
ANR	3005835	ArgumentList	rc		3005660	1					
ANR	3005836	Argument	rc		3005660	0					
ANR	3005837	Identifier	rc		3005660	0					
ANR	3005838	CompoundStatement		35:27:740:740	3005660	1					
ANR	3005839	ExpressionStatement	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error rcving credential rc: %s"" , strerror ( errno ) )"	275:2:6240:6331	3005660	0	True				
ANR	3005840	CallExpression	"condor_error . pushf ( ""DC_CREDD"" , 3 , ""Error rcving credential rc: %s"" , strerror ( errno ) )"		3005660	0					
ANR	3005841	Callee	condor_error . pushf		3005660	0					
ANR	3005842	MemberAccess	condor_error . pushf		3005660	0					
ANR	3005843	Identifier	condor_error		3005660	0					
ANR	3005844	Identifier	pushf		3005660	1					
ANR	3005845	ArgumentList	"""DC_CREDD"""		3005660	1					
ANR	3005846	Argument	"""DC_CREDD"""		3005660	0					
ANR	3005847	PrimaryExpression	"""DC_CREDD"""		3005660	0					
ANR	3005848	Argument	3		3005660	1					
ANR	3005849	PrimaryExpression	3		3005660	0					
ANR	3005850	Argument	"""Error rcving credential rc: %s"""		3005660	2					
ANR	3005851	PrimaryExpression	"""Error rcving credential rc: %s"""		3005660	0					
ANR	3005852	Argument	strerror ( errno )		3005660	3					
ANR	3005853	CallExpression	strerror ( errno )		3005660	0					
ANR	3005854	Callee	strerror		3005660	0					
ANR	3005855	Identifier	strerror		3005660	0					
ANR	3005856	ArgumentList	errno		3005660	1					
ANR	3005857	Argument	errno		3005660	0					
ANR	3005858	Identifier	errno		3005660	0					
ANR	3005859	GotoStatement	goto EXIT ;	277:2:6335:6344	3005660	1	True				
ANR	3005860	Identifier	EXIT		3005660	0					
ANR	3005861	IfStatement	if ( rc )		3005660	13					
ANR	3005862	Condition	rc	280:5:6355:6356	3005660	0	True				
ANR	3005863	Identifier	rc		3005660	0					
ANR	3005864	CompoundStatement		41:9:863:863	3005660	1					
ANR	3005865	ExpressionStatement	"condor_error . push ( ""DC_CREDD"" , 3 , ""Error removing credential"" )"	281:2:6363:6426	3005660	0	True				
ANR	3005866	CallExpression	"condor_error . push ( ""DC_CREDD"" , 3 , ""Error removing credential"" )"		3005660	0					
ANR	3005867	Callee	condor_error . push		3005660	0					
ANR	3005868	MemberAccess	condor_error . push		3005660	0					
ANR	3005869	Identifier	condor_error		3005660	0					
ANR	3005870	Identifier	push		3005660	1					
ANR	3005871	ArgumentList	"""DC_CREDD"""		3005660	1					
ANR	3005872	Argument	"""DC_CREDD"""		3005660	0					
ANR	3005873	PrimaryExpression	"""DC_CREDD"""		3005660	0					
ANR	3005874	Argument	3		3005660	1					
ANR	3005875	PrimaryExpression	3		3005660	0					
ANR	3005876	Argument	"""Error removing credential"""		3005660	2					
ANR	3005877	PrimaryExpression	"""Error removing credential"""		3005660	0					
ANR	3005878	GotoStatement	goto EXIT ;	282:2:6430:6439	3005660	1	True				
ANR	3005879	Identifier	EXIT		3005660	0					
ANR	3005880	ExpressionStatement	rtnVal = rc	285:1:6446:6457	3005660	14	True				
ANR	3005881	AssignmentExpression	rtnVal = rc		3005660	0		=			
ANR	3005882	Identifier	rtnVal		3005660	0					
ANR	3005883	Identifier	rc		3005660	1					
ANR	3005884	Label	EXIT :	286:0:6459:6463	3005660	15	True				
ANR	3005885	Identifier	EXIT		3005660	0					
ANR	3005886	IfStatement	if ( rsock )		3005660	16					
ANR	3005887	Condition	rsock	287:6:6471:6475	3005660	0	True				
ANR	3005888	Identifier	rsock		3005660	0					
ANR	3005889	Statement	delete	287:14:6479:6484	3005660	1	True				
ANR	3005890	ExpressionStatement	rsock	287:21:6486:6491	3005660	17	True				
ANR	3005891	Identifier	rsock		3005660	0					
ANR	3005892	IfStatement	if ( _cred_name )		3005660	18					
ANR	3005893	Condition	_cred_name	288:6:6499:6508	3005660	0	True				
ANR	3005894	Identifier	_cred_name		3005660	0					
ANR	3005895	ExpressionStatement	free ( _cred_name )	288:19:6512:6531	3005660	1	True				
ANR	3005896	CallExpression	free ( _cred_name )		3005660	0					
ANR	3005897	Callee	free		3005660	0					
ANR	3005898	Identifier	free		3005660	0					
ANR	3005899	ArgumentList	_cred_name		3005660	1					
ANR	3005900	Argument	_cred_name		3005660	0					
ANR	3005901	Identifier	_cred_name		3005660	0					
ANR	3005902	ReturnStatement	return rtnVal ;	289:1:6534:6547	3005660	19	True				
ANR	3005903	Identifier	rtnVal		3005660	0					
ANR	3005904	ReturnType	bool		3005660	1					
ANR	3005905	Identifier	DCCredd :: removeCredential		3005660	2					
ANR	3005906	ParameterList	"const char * cred_name , CondorError & condor_error"		3005660	3					
ANR	3005907	Parameter	const char * cred_name	239:27:5434:5455	3005660	0	True				
ANR	3005908	ParameterType	const char *		3005660	0					
ANR	3005909	Identifier	cred_name		3005660	1					
ANR	3005910	Parameter	CondorError & condor_error	240:9:5467:5492	3005660	1	True				
ANR	3005911	ParameterType	CondorError &		3005660	0					
ANR	3005912	Identifier	condor_error		3005660	1					
ANR	3005913	CFGEntryNode	ENTRY		3005660		True				
ANR	3005914	CFGExitNode	EXIT		3005660		True				
ANR	3005915	Symbol	rsock -> end_of_message		3005660						
ANR	3005916	Symbol	errno		3005660						
ANR	3005917	Symbol	NULL		3005660						
ANR	3005918	Symbol	CREDD_REMOVE_CRED		3005660						
ANR	3005919	Symbol	false		3005660						
ANR	3005920	Symbol	rsock		3005660						
ANR	3005921	Symbol	rtnVal		3005660						
ANR	3005922	Symbol	startCommand		3005660						
ANR	3005923	Symbol	strerror		3005660						
ANR	3005924	Symbol	rc		3005660						
ANR	3005925	Symbol	forceAuthentication		3005660						
ANR	3005926	Symbol	& condor_error		3005660						
ANR	3005927	Symbol	cred_name		3005660						
ANR	3005928	Symbol	Stream :: reli_sock		3005660						
ANR	3005929	Symbol	_cred_name		3005660						
ANR	3005930	Symbol	strdup		3005660						
ANR	3005931	Symbol	* rsock		3005660						
ANR	3005932	Symbol	condor_error		3005660						
ANR	3005933	Symbol	rsock -> code		3005660						
