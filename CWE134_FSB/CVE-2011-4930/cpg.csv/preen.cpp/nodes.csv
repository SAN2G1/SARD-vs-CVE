command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1996099	File	data/converged/CVE-2011-4930_htcondor/preen.cpp								
ANR	1996100	DeclStmt									
ANR	1996101	Decl							State	State ( )	get_machine_state
ANR	1996102	DeclStmt									
ANR	1996103	Decl							extern void	extern void ( const char * strflags )	_condor_set_debug_flags
ANR	1996104	DeclStmt									
ANR	1996105	Decl							int	int	MaxCkptInterval
ANR	1996106	DeclStmt									
ANR	1996107	Decl							char	char *	Spool
ANR	1996108	DeclStmt									
ANR	1996109	Decl							StringList	StringList	ExecuteDirs
ANR	1996110	DeclStmt									
ANR	1996111	Decl							char	char *	Log
ANR	1996112	DeclStmt									
ANR	1996113	Decl							char	char *	DaemonSockDir
ANR	1996114	DeclStmt									
ANR	1996115	Decl							char	char *	PreenAdmin
ANR	1996116	DeclStmt									
ANR	1996117	Decl							char	char *	MyName
ANR	1996118	DeclStmt									
ANR	1996119	Decl							char	char *	ValidSpoolFiles
ANR	1996120	DeclStmt									
ANR	1996121	Decl							char	char *	InvalidLogFiles
ANR	1996122	DeclStmt									
ANR	1996123	Decl							char	char *	MailPrg
ANR	1996124	DeclStmt									
ANR	1996125	Decl							BOOLEAN	BOOLEAN	MailFlag
ANR	1996126	DeclStmt									
ANR	1996127	Decl							BOOLEAN	BOOLEAN	VerboseFlag
ANR	1996128	DeclStmt									
ANR	1996129	Decl							BOOLEAN	BOOLEAN	RmFlag
ANR	1996130	DeclStmt									
ANR	1996131	Decl							StringList	StringList *	BadFiles
ANR	1996132	DeclStmt									
ANR	1996133	Decl							void	void ( )	usage
ANR	1996134	DeclStmt									
ANR	1996135	Decl							void	void ( )	send_mail_file
ANR	1996136	DeclStmt									
ANR	1996137	Decl							void	void ( )	init_params
ANR	1996138	DeclStmt									
ANR	1996139	Decl							void	void ( )	check_spool_dir
ANR	1996140	DeclStmt									
ANR	1996141	Decl							void	void ( )	check_execute_dir
ANR	1996142	DeclStmt									
ANR	1996143	Decl							void	void ( )	check_log_dir
ANR	1996144	DeclStmt									
ANR	1996145	Decl							void	void ( )	check_tmp_dir
ANR	1996146	DeclStmt									
ANR	1996147	Decl							void	void ( )	check_daemon_sock_dir
ANR	1996148	DeclStmt									
ANR	1996149	Decl							void	"void ( const char * , const char * , Directory & )"	bad_file
ANR	1996150	DeclStmt									
ANR	1996151	Decl							void	"void ( const char * , const char * )"	good_file
ANR	1996152	DeclStmt									
ANR	1996153	Decl							void	void ( )	produce_output
ANR	1996154	DeclStmt									
ANR	1996155	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_valid_shared_exe
ANR	1996156	DeclStmt									
ANR	1996157	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_ckpt_file
ANR	1996158	DeclStmt									
ANR	1996159	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_v2_ckpt
ANR	1996160	DeclStmt									
ANR	1996161	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_v3_ckpt
ANR	1996162	DeclStmt									
ANR	1996163	Decl							BOOLEAN	BOOLEAN ( int )	cluster_exists
ANR	1996164	DeclStmt									
ANR	1996165	Decl							BOOLEAN	"BOOLEAN ( int , int )"	proc_exists
ANR	1996166	DeclStmt									
ANR	1996167	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_myproxy_file
ANR	1996168	DeclStmt									
ANR	1996169	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_ccb_file
ANR	1996170	DeclStmt									
ANR	1996171	Decl							BOOLEAN	"BOOLEAN ( char const * fname , time_t delta )"	touched_recently
ANR	1996172	Function	usage	101:0:3643:3751							
ANR	1996173	FunctionDef	usage ()		1996172	0					
ANR	1996174	CompoundStatement		103:0:3656:3751	1996172	0					
ANR	1996175	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"" , MyName )"	104:1:3659:3737	1996172	0	True				
ANR	1996176	CallExpression	"fprintf ( stderr , ""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"" , MyName )"		1996172	0					
ANR	1996177	Callee	fprintf		1996172	0					
ANR	1996178	Identifier	fprintf		1996172	0					
ANR	1996179	ArgumentList	stderr		1996172	1					
ANR	1996180	Argument	stderr		1996172	0					
ANR	1996181	Identifier	stderr		1996172	0					
ANR	1996182	Argument	"""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"""		1996172	1					
ANR	1996183	PrimaryExpression	"""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"""		1996172	0					
ANR	1996184	Argument	MyName		1996172	2					
ANR	1996185	Identifier	MyName		1996172	0					
ANR	1996186	ExpressionStatement	exit ( 1 )	105:1:3740:3749	1996172	1	True				
ANR	1996187	CallExpression	exit ( 1 )		1996172	0					
ANR	1996188	Callee	exit		1996172	0					
ANR	1996189	Identifier	exit		1996172	0					
ANR	1996190	ArgumentList	1		1996172	1					
ANR	1996191	Argument	1		1996172	0					
ANR	1996192	PrimaryExpression	1		1996172	0					
ANR	1996193	ReturnType	void		1996172	1					
ANR	1996194	Identifier	usage		1996172	2					
ANR	1996195	ParameterList			1996172	3					
ANR	1996196	CFGEntryNode	ENTRY		1996172		True				
ANR	1996197	CFGExitNode	EXIT		1996172		True				
ANR	1996198	Symbol	MyName		1996172						
ANR	1996199	Symbol	stderr		1996172						
ANR	1996200	Function	main	109:0:3755:5562							
ANR	1996201	FunctionDef	"main (int argc , char * argv [ ])"		1996200	0					
ANR	1996202	CompoundStatement		111:0:3790:5562	1996200	0					
ANR	1996203	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	115:4:3903:3941	1996200	0	True				
ANR	1996204	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		1996200	0					
ANR	1996205	Callee	install_sig_handler		1996200	0					
ANR	1996206	Identifier	install_sig_handler		1996200	0					
ANR	1996207	ArgumentList	SIGPIPE		1996200	1					
ANR	1996208	Argument	SIGPIPE		1996200	0					
ANR	1996209	Identifier	SIGPIPE		1996200	0					
ANR	1996210	Argument	SIG_IGN		1996200	1					
ANR	1996211	Identifier	SIG_IGN		1996200	0					
ANR	1996212	ExpressionStatement	"config ( false , false , false )"	119:1:3987:4012	1996200	1	True				
ANR	1996213	CallExpression	"config ( false , false , false )"		1996200	0					
ANR	1996214	Callee	config		1996200	0					
ANR	1996215	Identifier	config		1996200	0					
ANR	1996216	ArgumentList	false		1996200	1					
ANR	1996217	Argument	false		1996200	0					
ANR	1996218	Identifier	false		1996200	0					
ANR	1996219	Argument	false		1996200	1					
ANR	1996220	Identifier	false		1996200	0					
ANR	1996221	Argument	false		1996200	2					
ANR	1996222	Identifier	false		1996200	0					
ANR	1996223	ExpressionStatement	MyName = argv [ 0 ]	122:1:4040:4056	1996200	2	True				
ANR	1996224	AssignmentExpression	MyName = argv [ 0 ]		1996200	0		=			
ANR	1996225	Identifier	MyName		1996200	0					
ANR	1996226	ArrayIndexing	argv [ 0 ]		1996200	1					
ANR	1996227	Identifier	argv		1996200	0					
ANR	1996228	PrimaryExpression	0		1996200	1					
ANR	1996229	ExpressionStatement	"myDistro -> Init ( argc , argv )"	123:1:4059:4087	1996200	3	True				
ANR	1996230	CallExpression	"myDistro -> Init ( argc , argv )"		1996200	0					
ANR	1996231	Callee	myDistro -> Init		1996200	0					
ANR	1996232	PtrMemberAccess	myDistro -> Init		1996200	0					
ANR	1996233	Identifier	myDistro		1996200	0					
ANR	1996234	Identifier	Init		1996200	1					
ANR	1996235	ArgumentList	argc		1996200	1					
ANR	1996236	Argument	argc		1996200	0					
ANR	1996237	Identifier	argc		1996200	0					
ANR	1996238	Argument	argv		1996200	1					
ANR	1996239	Identifier	argv		1996200	0					
ANR	1996240	ExpressionStatement	config ( )	124:1:4090:4098	1996200	4	True				
ANR	1996241	CallExpression	config ( )		1996200	0					
ANR	1996242	Callee	config		1996200	0					
ANR	1996243	Identifier	config		1996200	0					
ANR	1996244	ArgumentList			1996200	1					
ANR	1996245	ExpressionStatement	init_params ( )	125:1:4101:4114	1996200	5	True				
ANR	1996246	CallExpression	init_params ( )		1996200	0					
ANR	1996247	Callee	init_params		1996200	0					
ANR	1996248	Identifier	init_params		1996200	0					
ANR	1996249	ArgumentList			1996200	1					
ANR	1996250	Statement	BadFiles	126:1:4117:4124	1996200	6	True				
ANR	1996251	Statement	=	126:10:4126:4126	1996200	7	True				
ANR	1996252	Statement	new	126:12:4128:4130	1996200	8	True				
ANR	1996253	ExpressionStatement	StringList	126:16:4132:4142	1996200	9	True				
ANR	1996254	Identifier	StringList		1996200	0					
ANR	1996255	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	127:1:4145:4176	1996200	10	True				
ANR	1996256	IdentifierDecl	* p_funcs = NULL		1996200	0					
ANR	1996257	IdentifierDeclType	param_functions *		1996200	0					
ANR	1996258	Identifier	p_funcs		1996200	1					
ANR	1996259	AssignmentExpression	* p_funcs = NULL		1996200	2		=			
ANR	1996260	Identifier	NULL		1996200	0					
ANR	1996261	Identifier	NULL		1996200	1					
ANR	1996262	ForStatement	for ( argv ++ ; * argv ; argv ++ )		1996200	11					
ANR	1996263	ForInit	argv ++ ;	130:6:4219:4225	1996200	0	True				
ANR	1996264	PostIncDecOperationExpression	argv ++		1996200	0					
ANR	1996265	Identifier	argv		1996200	0					
ANR	1996266	IncDec	++		1996200	1					
ANR	1996267	Condition	* argv	130:14:4227:4231	1996200	1	True				
ANR	1996268	UnaryOperationExpression	* argv		1996200	0					
ANR	1996269	UnaryOperator	*		1996200	0					
ANR	1996270	Identifier	argv		1996200	1					
ANR	1996271	PostIncDecOperationExpression	argv ++	130:21:4234:4239	1996200	2	True				
ANR	1996272	Identifier	argv		1996200	0					
ANR	1996273	IncDec	++		1996200	1					
ANR	1996274	CompoundStatement		20:30:452:452	1996200	3					
ANR	1996275	IfStatement	if ( ( * argv ) [ 0 ] == '-' )		1996200	0					
ANR	1996276	Condition	( * argv ) [ 0 ] == '-'	131:6:4251:4267	1996200	0	True				
ANR	1996277	EqualityExpression	( * argv ) [ 0 ] == '-'		1996200	0		==			
ANR	1996278	ArrayIndexing	( * argv ) [ 0 ]		1996200	0					
ANR	1996279	UnaryOperationExpression	* argv		1996200	0					
ANR	1996280	UnaryOperator	*		1996200	0					
ANR	1996281	Identifier	argv		1996200	1					
ANR	1996282	PrimaryExpression	0		1996200	1					
ANR	1996283	PrimaryExpression	'-'		1996200	1					
ANR	1996284	CompoundStatement		21:26:480:480	1996200	1					
ANR	1996285	SwitchStatement	switch ( ( * argv ) [ 1 ] )		1996200	0					
ANR	1996286	Condition	( * argv ) [ 1 ]	132:11:4284:4293	1996200	0	True				
ANR	1996287	ArrayIndexing	( * argv ) [ 1 ]		1996200	0					
ANR	1996288	UnaryOperationExpression	* argv		1996200	0					
ANR	1996289	UnaryOperator	*		1996200	0					
ANR	1996290	Identifier	argv		1996200	1					
ANR	1996291	PrimaryExpression	1		1996200	1					
ANR	1996292	CompoundStatement		22:24:506:506	1996200	1					
ANR	1996293	Label	case 'd' :	134:5:4308:4316	1996200	0	True				
ANR	1996294	ExpressionStatement	Termlog = 1	135:16:4334:4345	1996200	1	True				
ANR	1996295	AssignmentExpression	Termlog = 1		1996200	0		=			
ANR	1996296	Identifier	Termlog		1996200	0					
ANR	1996297	PrimaryExpression	1		1996200	1					
ANR	1996298	Label	case 'v' :	136:5:4352:4360	1996200	2	True				
ANR	1996299	ExpressionStatement	VerboseFlag = TRUE	137:4:4366:4384	1996200	3	True				
ANR	1996300	AssignmentExpression	VerboseFlag = TRUE		1996200	0		=			
ANR	1996301	Identifier	VerboseFlag		1996200	0					
ANR	1996302	Identifier	TRUE		1996200	1					
ANR	1996303	BreakStatement	break ;	138:4:4390:4395	1996200	4	True				
ANR	1996304	Label	case 'm' :	140:5:4403:4411	1996200	5	True				
ANR	1996305	ExpressionStatement	MailFlag = TRUE	141:4:4417:4432	1996200	6	True				
ANR	1996306	AssignmentExpression	MailFlag = TRUE		1996200	0		=			
ANR	1996307	Identifier	MailFlag		1996200	0					
ANR	1996308	Identifier	TRUE		1996200	1					
ANR	1996309	BreakStatement	break ;	142:4:4438:4443	1996200	7	True				
ANR	1996310	Label	case 'r' :	144:5:4451:4459	1996200	8	True				
ANR	1996311	ExpressionStatement	RmFlag = TRUE	145:4:4465:4478	1996200	9	True				
ANR	1996312	AssignmentExpression	RmFlag = TRUE		1996200	0		=			
ANR	1996313	Identifier	RmFlag		1996200	0					
ANR	1996314	Identifier	TRUE		1996200	1					
ANR	1996315	BreakStatement	break ;	146:4:4484:4489	1996200	10	True				
ANR	1996316	Label	default :	148:5:4497:4504	1996200	11	True				
ANR	1996317	Identifier	default		1996200	0					
ANR	1996318	ExpressionStatement	usage ( )	149:4:4510:4517	1996200	12	True				
ANR	1996319	CallExpression	usage ( )		1996200	0					
ANR	1996320	Callee	usage		1996200	0					
ANR	1996321	Identifier	usage		1996200	0					
ANR	1996322	ArgumentList			1996200	1					
ANR	1996323	ElseStatement	else		1996200	0					
ANR	1996324	CompoundStatement		42:9:743:743	1996200	0					
ANR	1996325	ExpressionStatement	usage ( )	153:3:4539:4546	1996200	0	True				
ANR	1996326	CallExpression	usage ( )		1996200	0					
ANR	1996327	Callee	usage		1996200	0					
ANR	1996328	Identifier	usage		1996200	0					
ANR	1996329	ArgumentList			1996200	1					
ANR	1996330	ExpressionStatement	p_funcs = get_param_functions ( )	157:1:4558:4589	1996200	12	True				
ANR	1996331	AssignmentExpression	p_funcs = get_param_functions ( )		1996200	0		=			
ANR	1996332	Identifier	p_funcs		1996200	0					
ANR	1996333	CallExpression	get_param_functions ( )		1996200	1					
ANR	1996334	Callee	get_param_functions		1996200	0					
ANR	1996335	Identifier	get_param_functions		1996200	0					
ANR	1996336	ArgumentList			1996200	1					
ANR	1996337	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	158:1:4592:4623	1996200	13	True				
ANR	1996338	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		1996200	0					
ANR	1996339	Callee	dprintf_config		1996200	0					
ANR	1996340	Identifier	dprintf_config		1996200	0					
ANR	1996341	ArgumentList	"""TOOL"""		1996200	1					
ANR	1996342	Argument	"""TOOL"""		1996200	0					
ANR	1996343	PrimaryExpression	"""TOOL"""		1996200	0					
ANR	1996344	Argument	p_funcs		1996200	1					
ANR	1996345	Identifier	p_funcs		1996200	0					
ANR	1996346	IfStatement	if ( VerboseFlag )		1996200	14					
ANR	1996347	Condition	VerboseFlag	159:5:4630:4640	1996200	0	True				
ANR	1996348	Identifier	VerboseFlag		1996200	0					
ANR	1996349	CompoundStatement		54:2:993:1026	1996200	1					
ANR	1996350	IdentifierDeclStatement	"std :: string szVerbose = ""D_FULLDEBUG"" ;"	163:2:4745:4780	1996200	0	True				
ANR	1996351	IdentifierDecl	"szVerbose = ""D_FULLDEBUG"""		1996200	0					
ANR	1996352	IdentifierDeclType	std :: string		1996200	0					
ANR	1996353	Identifier	szVerbose		1996200	1					
ANR	1996354	AssignmentExpression	"szVerbose = ""D_FULLDEBUG"""		1996200	2		=			
ANR	1996355	Identifier	szVerbose		1996200	0					
ANR	1996356	PrimaryExpression	"""D_FULLDEBUG"""		1996200	1					
ANR	1996357	IdentifierDeclStatement	"char * pval = param ( ""TOOL_DEBUG"" ) ;"	164:2:4784:4817	1996200	1	True				
ANR	1996358	IdentifierDecl	"* pval = param ( ""TOOL_DEBUG"" )"		1996200	0					
ANR	1996359	IdentifierDeclType	char *		1996200	0					
ANR	1996360	Identifier	pval		1996200	1					
ANR	1996361	AssignmentExpression	"* pval = param ( ""TOOL_DEBUG"" )"		1996200	2		=			
ANR	1996362	Identifier	pval		1996200	0					
ANR	1996363	CallExpression	"param ( ""TOOL_DEBUG"" )"		1996200	1					
ANR	1996364	Callee	param		1996200	0					
ANR	1996365	Identifier	param		1996200	0					
ANR	1996366	ArgumentList	"""TOOL_DEBUG"""		1996200	1					
ANR	1996367	Argument	"""TOOL_DEBUG"""		1996200	0					
ANR	1996368	PrimaryExpression	"""TOOL_DEBUG"""		1996200	0					
ANR	1996369	IfStatement	if ( pval )		1996200	2					
ANR	1996370	Condition	pval	165:6:4825:4828	1996200	0	True				
ANR	1996371	Identifier	pval		1996200	0					
ANR	1996372	CompoundStatement		55:13:1041:1041	1996200	1					
ANR	1996373	ExpressionStatement	"szVerbose += ""|"""	166:3:4837:4851	1996200	0	True				
ANR	1996374	AssignmentExpression	"szVerbose += ""|"""		1996200	0		+=			
ANR	1996375	Identifier	szVerbose		1996200	0					
ANR	1996376	PrimaryExpression	"""|"""		1996200	1					
ANR	1996377	ExpressionStatement	szVerbose += pval	167:3:4856:4871	1996200	1	True				
ANR	1996378	AssignmentExpression	szVerbose += pval		1996200	0		+=			
ANR	1996379	Identifier	szVerbose		1996200	0					
ANR	1996380	Identifier	pval		1996200	1					
ANR	1996381	ExpressionStatement	free ( pval )	168:3:4876:4888	1996200	2	True				
ANR	1996382	CallExpression	free ( pval )		1996200	0					
ANR	1996383	Callee	free		1996200	0					
ANR	1996384	Identifier	free		1996200	0					
ANR	1996385	ArgumentList	pval		1996200	1					
ANR	1996386	Argument	pval		1996200	0					
ANR	1996387	Identifier	pval		1996200	0					
ANR	1996388	ExpressionStatement	_condor_set_debug_flags ( szVerbose . c_str ( ) )	170:2:4896:4940	1996200	3	True				
ANR	1996389	CallExpression	_condor_set_debug_flags ( szVerbose . c_str ( ) )		1996200	0					
ANR	1996390	Callee	_condor_set_debug_flags		1996200	0					
ANR	1996391	Identifier	_condor_set_debug_flags		1996200	0					
ANR	1996392	ArgumentList	szVerbose . c_str ( )		1996200	1					
ANR	1996393	Argument	szVerbose . c_str ( )		1996200	0					
ANR	1996394	CallExpression	szVerbose . c_str ( )		1996200	0					
ANR	1996395	Callee	szVerbose . c_str		1996200	0					
ANR	1996396	MemberAccess	szVerbose . c_str		1996200	0					
ANR	1996397	Identifier	szVerbose		1996200	0					
ANR	1996398	Identifier	c_str		1996200	1					
ANR	1996399	ArgumentList			1996200	1					
ANR	1996400	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	173:1:4949:5005	1996200	15	True				
ANR	1996401	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		1996200	0					
ANR	1996402	Callee	dprintf		1996200	0					
ANR	1996403	Identifier	dprintf		1996200	0					
ANR	1996404	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996405	Argument	D_ALWAYS		1996200	0					
ANR	1996406	Identifier	D_ALWAYS		1996200	0					
ANR	1996407	Argument	"""********************************\\n"""		1996200	1					
ANR	1996408	PrimaryExpression	"""********************************\\n"""		1996200	0					
ANR	1996409	ExpressionStatement	"dprintf ( D_ALWAYS , ""STARTING: condor_preen\\n"" )"	174:1:5008:5054	1996200	16	True				
ANR	1996410	CallExpression	"dprintf ( D_ALWAYS , ""STARTING: condor_preen\\n"" )"		1996200	0					
ANR	1996411	Callee	dprintf		1996200	0					
ANR	1996412	Identifier	dprintf		1996200	0					
ANR	1996413	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996414	Argument	D_ALWAYS		1996200	0					
ANR	1996415	Identifier	D_ALWAYS		1996200	0					
ANR	1996416	Argument	"""STARTING: condor_preen\\n"""		1996200	1					
ANR	1996417	PrimaryExpression	"""STARTING: condor_preen\\n"""		1996200	0					
ANR	1996418	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	175:1:5057:5113	1996200	17	True				
ANR	1996419	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		1996200	0					
ANR	1996420	Callee	dprintf		1996200	0					
ANR	1996421	Identifier	dprintf		1996200	0					
ANR	1996422	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996423	Argument	D_ALWAYS		1996200	0					
ANR	1996424	Identifier	D_ALWAYS		1996200	0					
ANR	1996425	Argument	"""********************************\\n"""		1996200	1					
ANR	1996426	PrimaryExpression	"""********************************\\n"""		1996200	0					
ANR	1996427	ExpressionStatement	check_spool_dir ( )	178:1:5144:5161	1996200	18	True				
ANR	1996428	CallExpression	check_spool_dir ( )		1996200	0					
ANR	1996429	Callee	check_spool_dir		1996200	0					
ANR	1996430	Identifier	check_spool_dir		1996200	0					
ANR	1996431	ArgumentList			1996200	1					
ANR	1996432	ExpressionStatement	check_execute_dir ( )	179:1:5164:5183	1996200	19	True				
ANR	1996433	CallExpression	check_execute_dir ( )		1996200	0					
ANR	1996434	Callee	check_execute_dir		1996200	0					
ANR	1996435	Identifier	check_execute_dir		1996200	0					
ANR	1996436	ArgumentList			1996200	1					
ANR	1996437	ExpressionStatement	check_log_dir ( )	180:1:5186:5201	1996200	20	True				
ANR	1996438	CallExpression	check_log_dir ( )		1996200	0					
ANR	1996439	Callee	check_log_dir		1996200	0					
ANR	1996440	Identifier	check_log_dir		1996200	0					
ANR	1996441	ArgumentList			1996200	1					
ANR	1996442	ExpressionStatement	check_daemon_sock_dir ( )	181:1:5204:5227	1996200	21	True				
ANR	1996443	CallExpression	check_daemon_sock_dir ( )		1996200	0					
ANR	1996444	Callee	check_daemon_sock_dir		1996200	0					
ANR	1996445	Identifier	check_daemon_sock_dir		1996200	0					
ANR	1996446	ArgumentList			1996200	1					
ANR	1996447	ExpressionStatement	check_tmp_dir ( )	182:1:5230:5245	1996200	22	True				
ANR	1996448	CallExpression	check_tmp_dir ( )		1996200	0					
ANR	1996449	Callee	check_tmp_dir		1996200	0					
ANR	1996450	Identifier	check_tmp_dir		1996200	0					
ANR	1996451	ArgumentList			1996200	1					
ANR	1996452	IfStatement	if ( ! BadFiles -> isEmpty ( ) )		1996200	23					
ANR	1996453	Condition	! BadFiles -> isEmpty ( )	185:5:5302:5321	1996200	0	True				
ANR	1996454	UnaryOperationExpression	! BadFiles -> isEmpty ( )		1996200	0					
ANR	1996455	UnaryOperator	!		1996200	0					
ANR	1996456	CallExpression	BadFiles -> isEmpty ( )		1996200	1					
ANR	1996457	Callee	BadFiles -> isEmpty		1996200	0					
ANR	1996458	PtrMemberAccess	BadFiles -> isEmpty		1996200	0					
ANR	1996459	Identifier	BadFiles		1996200	0					
ANR	1996460	Identifier	isEmpty		1996200	1					
ANR	1996461	ArgumentList			1996200	1					
ANR	1996462	CompoundStatement		75:28:1534:1534	1996200	1					
ANR	1996463	ExpressionStatement	produce_output ( )	186:2:5329:5345	1996200	0	True				
ANR	1996464	CallExpression	produce_output ( )		1996200	0					
ANR	1996465	Callee	produce_output		1996200	0					
ANR	1996466	Identifier	produce_output		1996200	0					
ANR	1996467	ArgumentList			1996200	1					
ANR	1996468	Statement	delete	190:1:5366:5371	1996200	24	True				
ANR	1996469	ExpressionStatement	BadFiles	190:8:5373:5381	1996200	25	True				
ANR	1996470	Identifier	BadFiles		1996200	0					
ANR	1996471	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	192:1:5385:5441	1996200	26	True				
ANR	1996472	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		1996200	0					
ANR	1996473	Callee	dprintf		1996200	0					
ANR	1996474	Identifier	dprintf		1996200	0					
ANR	1996475	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996476	Argument	D_ALWAYS		1996200	0					
ANR	1996477	Identifier	D_ALWAYS		1996200	0					
ANR	1996478	Argument	"""********************************\\n"""		1996200	1					
ANR	1996479	PrimaryExpression	"""********************************\\n"""		1996200	0					
ANR	1996480	ExpressionStatement	"dprintf ( D_ALWAYS , ""ENDING: condor_preen\\n"" )"	193:1:5444:5488	1996200	27	True				
ANR	1996481	CallExpression	"dprintf ( D_ALWAYS , ""ENDING: condor_preen\\n"" )"		1996200	0					
ANR	1996482	Callee	dprintf		1996200	0					
ANR	1996483	Identifier	dprintf		1996200	0					
ANR	1996484	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996485	Argument	D_ALWAYS		1996200	0					
ANR	1996486	Identifier	D_ALWAYS		1996200	0					
ANR	1996487	Argument	"""ENDING: condor_preen\\n"""		1996200	1					
ANR	1996488	PrimaryExpression	"""ENDING: condor_preen\\n"""		1996200	0					
ANR	1996489	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	194:1:5491:5547	1996200	28	True				
ANR	1996490	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		1996200	0					
ANR	1996491	Callee	dprintf		1996200	0					
ANR	1996492	Identifier	dprintf		1996200	0					
ANR	1996493	ArgumentList	D_ALWAYS		1996200	1					
ANR	1996494	Argument	D_ALWAYS		1996200	0					
ANR	1996495	Identifier	D_ALWAYS		1996200	0					
ANR	1996496	Argument	"""********************************\\n"""		1996200	1					
ANR	1996497	PrimaryExpression	"""********************************\\n"""		1996200	0					
ANR	1996498	ReturnStatement	return 0 ;	196:1:5552:5560	1996200	29	True				
ANR	1996499	PrimaryExpression	0		1996200	0					
ANR	1996500	ReturnType	int		1996200	1					
ANR	1996501	Identifier	main		1996200	2					
ANR	1996502	ParameterList	"int argc , char * argv [ ]"		1996200	3					
ANR	1996503	Parameter	int argc	110:6:3765:3772	1996200	0	True				
ANR	1996504	ParameterType	int		1996200	0					
ANR	1996505	Identifier	argc		1996200	1					
ANR	1996506	Parameter	char * argv [ ]	110:16:3775:3786	1996200	1	True				
ANR	1996507	ParameterType	char * [ ]		1996200	0					
ANR	1996508	Identifier	argv		1996200	1					
ANR	1996509	CFGEntryNode	ENTRY		1996200		True				
ANR	1996510	CFGExitNode	EXIT		1996200		True				
ANR	1996511	Symbol	BadFiles -> isEmpty		1996200						
ANR	1996512	Symbol	MyName		1996200						
ANR	1996513	Symbol	pval		1996200						
ANR	1996514	Symbol	* argv		1996200						
ANR	1996515	Symbol	p_funcs		1996200						
ANR	1996516	Symbol	argv		1996200						
ANR	1996517	Symbol	VerboseFlag		1996200						
ANR	1996518	Symbol	MailFlag		1996200						
ANR	1996519	Symbol	param		1996200						
ANR	1996520	Symbol	myDistro		1996200						
ANR	1996521	Symbol	szVerbose . c_str		1996200						
ANR	1996522	Symbol	* * argv		1996200						
ANR	1996523	Symbol	SIGPIPE		1996200						
ANR	1996524	Symbol	* BadFiles		1996200						
ANR	1996525	Symbol	argc		1996200						
ANR	1996526	Symbol	NULL		1996200						
ANR	1996527	Symbol	Termlog		1996200						
ANR	1996528	Symbol	get_param_functions		1996200						
ANR	1996529	Symbol	false		1996200						
ANR	1996530	Symbol	szVerbose		1996200						
ANR	1996531	Symbol	D_ALWAYS		1996200						
ANR	1996532	Symbol	BadFiles		1996200						
ANR	1996533	Symbol	SIG_IGN		1996200						
ANR	1996534	Symbol	TRUE		1996200						
ANR	1996535	Symbol	RmFlag		1996200						
ANR	1996536	Function	produce_output	205:0:5836:7584							
ANR	1996537	FunctionDef	produce_output ()		1996536	0					
ANR	1996538	CompoundStatement		207:0:5858:7584	1996536	0					
ANR	1996539	IdentifierDeclStatement	char * str ;	208:1:5861:5870	1996536	0	True				
ANR	1996540	IdentifierDecl	* str		1996536	0					
ANR	1996541	IdentifierDeclType	char *		1996536	0					
ANR	1996542	Identifier	str		1996536	1					
ANR	1996543	IdentifierDeclStatement	FILE * mailer ;	209:1:5873:5885	1996536	1	True				
ANR	1996544	IdentifierDecl	* mailer		1996536	0					
ANR	1996545	IdentifierDeclType	FILE *		1996536	0					
ANR	1996546	Identifier	mailer		1996536	1					
ANR	1996547	IdentifierDeclStatement	"MyString subject , szTmp ;"	210:1:5888:5910	1996536	2	True				
ANR	1996548	IdentifierDecl	subject		1996536	0					
ANR	1996549	IdentifierDeclType	MyString		1996536	0					
ANR	1996550	Identifier	subject		1996536	1					
ANR	1996551	IdentifierDecl	szTmp		1996536	1					
ANR	1996552	IdentifierDeclType	MyString		1996536	0					
ANR	1996553	Identifier	szTmp		1996536	1					
ANR	1996554	ExpressionStatement	"subject . sprintf ( ""condor_preen results %s: %d old file%s found"" , my_full_hostname ( ) , BadFiles -> number ( ) , ( BadFiles -> number ( ) > 1 ) ? ""s"" : """" )"	211:1:5913:6055	1996536	3	True				
ANR	1996555	CallExpression	"subject . sprintf ( ""condor_preen results %s: %d old file%s found"" , my_full_hostname ( ) , BadFiles -> number ( ) , ( BadFiles -> number ( ) > 1 ) ? ""s"" : """" )"		1996536	0					
ANR	1996556	Callee	subject . sprintf		1996536	0					
ANR	1996557	MemberAccess	subject . sprintf		1996536	0					
ANR	1996558	Identifier	subject		1996536	0					
ANR	1996559	Identifier	sprintf		1996536	1					
ANR	1996560	ArgumentList	"""condor_preen results %s: %d old file%s found"""		1996536	1					
ANR	1996561	Argument	"""condor_preen results %s: %d old file%s found"""		1996536	0					
ANR	1996562	PrimaryExpression	"""condor_preen results %s: %d old file%s found"""		1996536	0					
ANR	1996563	Argument	my_full_hostname ( )		1996536	1					
ANR	1996564	CallExpression	my_full_hostname ( )		1996536	0					
ANR	1996565	Callee	my_full_hostname		1996536	0					
ANR	1996566	Identifier	my_full_hostname		1996536	0					
ANR	1996567	ArgumentList			1996536	1					
ANR	1996568	Argument	BadFiles -> number ( )		1996536	2					
ANR	1996569	CallExpression	BadFiles -> number ( )		1996536	0					
ANR	1996570	Callee	BadFiles -> number		1996536	0					
ANR	1996571	PtrMemberAccess	BadFiles -> number		1996536	0					
ANR	1996572	Identifier	BadFiles		1996536	0					
ANR	1996573	Identifier	number		1996536	1					
ANR	1996574	ArgumentList			1996536	1					
ANR	1996575	Argument	"( BadFiles -> number ( ) > 1 ) ? ""s"" : """""		1996536	3					
ANR	1996576	ConditionalExpression	"( BadFiles -> number ( ) > 1 ) ? ""s"" : """""		1996536	0					
ANR	1996577	Condition	BadFiles -> number ( ) > 1		1996536	0					
ANR	1996578	RelationalExpression	BadFiles -> number ( ) > 1		1996536	0		>			
ANR	1996579	CallExpression	BadFiles -> number ( )		1996536	0					
ANR	1996580	Callee	BadFiles -> number		1996536	0					
ANR	1996581	PtrMemberAccess	BadFiles -> number		1996536	0					
ANR	1996582	Identifier	BadFiles		1996536	0					
ANR	1996583	Identifier	number		1996536	1					
ANR	1996584	ArgumentList			1996536	1					
ANR	1996585	PrimaryExpression	1		1996536	1					
ANR	1996586	PrimaryExpression	"""s"""		1996536	1					
ANR	1996587	PrimaryExpression	""""""		1996536	2					
ANR	1996588	IfStatement	if ( MailFlag )		1996536	4					
ANR	1996589	Condition	MailFlag	215:5:6063:6070	1996536	0	True				
ANR	1996590	Identifier	MailFlag		1996536	0					
ANR	1996591	CompoundStatement		9:16:215:215	1996536	1					
ANR	1996592	IfStatement	"if ( ( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL )"		1996536	0					
ANR	1996593	Condition	"( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL"	216:6:6082:6137	1996536	0	True				
ANR	1996594	EqualityExpression	"( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL"		1996536	0		==			
ANR	1996595	AssignmentExpression	"mailer = email_open ( PreenAdmin , subject . Value ( ) )"		1996536	0		=			
ANR	1996596	Identifier	mailer		1996536	0					
ANR	1996597	CallExpression	"email_open ( PreenAdmin , subject . Value ( ) )"		1996536	1					
ANR	1996598	Callee	email_open		1996536	0					
ANR	1996599	Identifier	email_open		1996536	0					
ANR	1996600	ArgumentList	PreenAdmin		1996536	1					
ANR	1996601	Argument	PreenAdmin		1996536	0					
ANR	1996602	Identifier	PreenAdmin		1996536	0					
ANR	1996603	Argument	subject . Value ( )		1996536	1					
ANR	1996604	CallExpression	subject . Value ( )		1996536	0					
ANR	1996605	Callee	subject . Value		1996536	0					
ANR	1996606	MemberAccess	subject . Value		1996536	0					
ANR	1996607	Identifier	subject		1996536	0					
ANR	1996608	Identifier	Value		1996536	1					
ANR	1996609	ArgumentList			1996536	1					
ANR	1996610	Identifier	NULL		1996536	1					
ANR	1996611	CompoundStatement		10:65:282:282	1996536	1					
ANR	1996612	ExpressionStatement	"EXCEPT ( ""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"" , PreenAdmin , subject . Value ( ) )"	217:3:6146:6221	1996536	0	True				
ANR	1996613	CallExpression	"EXCEPT ( ""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"" , PreenAdmin , subject . Value ( ) )"		1996536	0					
ANR	1996614	Callee	EXCEPT		1996536	0					
ANR	1996615	Identifier	EXCEPT		1996536	0					
ANR	1996616	ArgumentList	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		1996536	1					
ANR	1996617	Argument	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		1996536	0					
ANR	1996618	PrimaryExpression	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		1996536	0					
ANR	1996619	Argument	PreenAdmin		1996536	1					
ANR	1996620	Identifier	PreenAdmin		1996536	0					
ANR	1996621	Argument	subject . Value ( )		1996536	2					
ANR	1996622	CallExpression	subject . Value ( )		1996536	0					
ANR	1996623	Callee	subject . Value		1996536	0					
ANR	1996624	MemberAccess	subject . Value		1996536	0					
ANR	1996625	Identifier	subject		1996536	0					
ANR	1996626	Identifier	Value		1996536	1					
ANR	1996627	ArgumentList			1996536	1					
ANR	1996628	ElseStatement	else		1996536	0					
ANR	1996629	CompoundStatement		13:8:376:376	1996536	0					
ANR	1996630	ExpressionStatement	mailer = stdout	220:2:6239:6254	1996536	0	True				
ANR	1996631	AssignmentExpression	mailer = stdout		1996536	0		=			
ANR	1996632	Identifier	mailer		1996536	0					
ANR	1996633	Identifier	stdout		1996536	1					
ANR	1996634	ExpressionStatement	"szTmp . sprintf ( ""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"" , get_local_hostname ( ) . Value ( ) )"	223:1:6261:6389	1996536	5	True				
ANR	1996635	CallExpression	"szTmp . sprintf ( ""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"" , get_local_hostname ( ) . Value ( ) )"		1996536	0					
ANR	1996636	Callee	szTmp . sprintf		1996536	0					
ANR	1996637	MemberAccess	szTmp . sprintf		1996536	0					
ANR	1996638	Identifier	szTmp		1996536	0					
ANR	1996639	Identifier	sprintf		1996536	1					
ANR	1996640	ArgumentList	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		1996536	1					
ANR	1996641	Argument	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		1996536	0					
ANR	1996642	PrimaryExpression	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		1996536	0					
ANR	1996643	Argument	get_local_hostname ( ) . Value ( )		1996536	1					
ANR	1996644	CallExpression	get_local_hostname ( ) . Value ( )		1996536	0					
ANR	1996645	Callee	get_local_hostname ( ) . Value		1996536	0					
ANR	1996646	MemberAccess	get_local_hostname ( ) . Value		1996536	0					
ANR	1996647	CallExpression	get_local_hostname ( )		1996536	0					
ANR	1996648	Callee	get_local_hostname		1996536	0					
ANR	1996649	Identifier	get_local_hostname		1996536	0					
ANR	1996650	ArgumentList			1996536	1					
ANR	1996651	Identifier	Value		1996536	1					
ANR	1996652	ArgumentList			1996536	1					
ANR	1996653	ExpressionStatement	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"	224:1:6392:6424	1996536	6	True				
ANR	1996654	CallExpression	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"		1996536	0					
ANR	1996655	Callee	dprintf		1996536	0					
ANR	1996656	Identifier	dprintf		1996536	0					
ANR	1996657	ArgumentList	D_ALWAYS		1996536	1					
ANR	1996658	Argument	D_ALWAYS		1996536	0					
ANR	1996659	Identifier	D_ALWAYS		1996536	0					
ANR	1996660	Argument	szTmp . Value ( )		1996536	1					
ANR	1996661	CallExpression	szTmp . Value ( )		1996536	0					
ANR	1996662	Callee	szTmp . Value		1996536	0					
ANR	1996663	MemberAccess	szTmp . Value		1996536	0					
ANR	1996664	Identifier	szTmp		1996536	0					
ANR	1996665	Identifier	Value		1996536	1					
ANR	1996666	ArgumentList			1996536	1					
ANR	1996667	IfStatement	if ( MailFlag )		1996536	7					
ANR	1996668	Condition	MailFlag	226:5:6435:6442	1996536	0	True				
ANR	1996669	Identifier	MailFlag		1996536	0					
ANR	1996670	CompoundStatement		20:16:587:587	1996536	1					
ANR	1996671	ExpressionStatement	"fprintf ( mailer , ""\\n"" )"	227:2:6450:6473	1996536	0	True				
ANR	1996672	CallExpression	"fprintf ( mailer , ""\\n"" )"		1996536	0					
ANR	1996673	Callee	fprintf		1996536	0					
ANR	1996674	Identifier	fprintf		1996536	0					
ANR	1996675	ArgumentList	mailer		1996536	1					
ANR	1996676	Argument	mailer		1996536	0					
ANR	1996677	Identifier	mailer		1996536	0					
ANR	1996678	Argument	"""\\n"""		1996536	1					
ANR	1996679	PrimaryExpression	"""\\n"""		1996536	0					
ANR	1996680	ExpressionStatement	"fprintf ( mailer , szTmp . Value ( ) )"	228:2:6477:6508	1996536	1	True				
ANR	1996681	CallExpression	"fprintf ( mailer , szTmp . Value ( ) )"		1996536	0					
ANR	1996682	Callee	fprintf		1996536	0					
ANR	1996683	Identifier	fprintf		1996536	0					
ANR	1996684	ArgumentList	mailer		1996536	1					
ANR	1996685	Argument	mailer		1996536	0					
ANR	1996686	Identifier	mailer		1996536	0					
ANR	1996687	Argument	szTmp . Value ( )		1996536	1					
ANR	1996688	CallExpression	szTmp . Value ( )		1996536	0					
ANR	1996689	Callee	szTmp . Value		1996536	0					
ANR	1996690	MemberAccess	szTmp . Value		1996536	0					
ANR	1996691	Identifier	szTmp		1996536	0					
ANR	1996692	Identifier	Value		1996536	1					
ANR	1996693	ArgumentList			1996536	1					
ANR	1996694	ForStatement	for ( BadFiles -> rewind ( ) ; ( str = BadFiles -> next ( ) ) ; )		1996536	8					
ANR	1996695	ForInit	BadFiles -> rewind ( ) ;	231:6:6520:6538	1996536	0	True				
ANR	1996696	CallExpression	BadFiles -> rewind ( )		1996536	0					
ANR	1996697	Callee	BadFiles -> rewind		1996536	0					
ANR	1996698	PtrMemberAccess	BadFiles -> rewind		1996536	0					
ANR	1996699	Identifier	BadFiles		1996536	0					
ANR	1996700	Identifier	rewind		1996536	1					
ANR	1996701	ArgumentList			1996536	1					
ANR	1996702	Condition	str = BadFiles -> next ( )	231:26:6540:6563	1996536	1	True				
ANR	1996703	AssignmentExpression	str = BadFiles -> next ( )		1996536	0		=			
ANR	1996704	Identifier	str		1996536	0					
ANR	1996705	CallExpression	BadFiles -> next ( )		1996536	1					
ANR	1996706	Callee	BadFiles -> next		1996536	0					
ANR	1996707	PtrMemberAccess	BadFiles -> next		1996536	0					
ANR	1996708	Identifier	BadFiles		1996536	0					
ANR	1996709	Identifier	next		1996536	1					
ANR	1996710	ArgumentList			1996536	1					
ANR	1996711	CompoundStatement		25:54:709:709	1996536	2					
ANR	1996712	ExpressionStatement	"szTmp . sprintf ( ""  %s\\n"" , str )"	232:2:6572:6600	1996536	0	True				
ANR	1996713	CallExpression	"szTmp . sprintf ( ""  %s\\n"" , str )"		1996536	0					
ANR	1996714	Callee	szTmp . sprintf		1996536	0					
ANR	1996715	MemberAccess	szTmp . sprintf		1996536	0					
ANR	1996716	Identifier	szTmp		1996536	0					
ANR	1996717	Identifier	sprintf		1996536	1					
ANR	1996718	ArgumentList	"""  %s\\n"""		1996536	1					
ANR	1996719	Argument	"""  %s\\n"""		1996536	0					
ANR	1996720	PrimaryExpression	"""  %s\\n"""		1996536	0					
ANR	1996721	Argument	str		1996536	1					
ANR	1996722	Identifier	str		1996536	0					
ANR	1996723	ExpressionStatement	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"	233:2:6604:6637	1996536	1	True				
ANR	1996724	CallExpression	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"		1996536	0					
ANR	1996725	Callee	dprintf		1996536	0					
ANR	1996726	Identifier	dprintf		1996536	0					
ANR	1996727	ArgumentList	D_ALWAYS		1996536	1					
ANR	1996728	Argument	D_ALWAYS		1996536	0					
ANR	1996729	Identifier	D_ALWAYS		1996536	0					
ANR	1996730	Argument	szTmp . Value ( )		1996536	1					
ANR	1996731	CallExpression	szTmp . Value ( )		1996536	0					
ANR	1996732	Callee	szTmp . Value		1996536	0					
ANR	1996733	MemberAccess	szTmp . Value		1996536	0					
ANR	1996734	Identifier	szTmp		1996536	0					
ANR	1996735	Identifier	Value		1996536	1					
ANR	1996736	ArgumentList			1996536	1					
ANR	1996737	ExpressionStatement	"fprintf ( mailer , szTmp . Value ( ) )"	234:2:6641:6673	1996536	2	True				
ANR	1996738	CallExpression	"fprintf ( mailer , szTmp . Value ( ) )"		1996536	0					
ANR	1996739	Callee	fprintf		1996536	0					
ANR	1996740	Identifier	fprintf		1996536	0					
ANR	1996741	ArgumentList	mailer		1996536	1					
ANR	1996742	Argument	mailer		1996536	0					
ANR	1996743	Identifier	mailer		1996536	0					
ANR	1996744	Argument	szTmp . Value ( )		1996536	1					
ANR	1996745	CallExpression	szTmp . Value ( )		1996536	0					
ANR	1996746	Callee	szTmp . Value		1996536	0					
ANR	1996747	MemberAccess	szTmp . Value		1996536	0					
ANR	1996748	Identifier	szTmp		1996536	0					
ANR	1996749	Identifier	Value		1996536	1					
ANR	1996750	ArgumentList			1996536	1					
ANR	1996751	IfStatement	if ( MailFlag )		1996536	9					
ANR	1996752	Condition	MailFlag	237:5:6684:6691	1996536	0	True				
ANR	1996753	Identifier	MailFlag		1996536	0					
ANR	1996754	CompoundStatement		31:16:836:836	1996536	1					
ANR	1996755	Statement	const	238:2:6699:6703	1996536	0	True				
ANR	1996756	Statement	char	238:8:6705:6708	1996536	1	True				
ANR	1996757	Statement	*	238:13:6710:6710	1996536	2	True				
ANR	1996758	Statement	explanation	238:14:6711:6721	1996536	3	True				
ANR	1996759	Statement	=	238:26:6723:6723	1996536	4	True				
ANR	1996760	Statement	"""\\n\\nWhat is condor_preen?\\n\\n"""	238:28:6725:6755	1996536	5	True				
ANR	1996761	Statement	"""The condor_preen tool examines the directories belonging to Condor, and\\n"""	239:0:6757:6831	1996536	6	True				
ANR	1996762	Statement	"""removes extraneous files and directories which may be left over from Condor\\n"""	240:0:6833:6911	1996536	7	True				
ANR	1996763	Statement	"""processes which terminated abnormally either due to internal errors or a\\n"""	241:0:6913:6988	1996536	8	True				
ANR	1996764	Statement	"""system crash.  The directories checked are the LOG, EXECUTE, and SPOOL\\n"""	242:0:6990:7063	1996536	9	True				
ANR	1996765	Statement	"""directories as defined in the Condor configuration files.  The condor_preen\\n"""	243:0:7065:7143	1996536	10	True				
ANR	1996766	Statement	"""tool is intended to be run as user root (or user condor) periodically as a\\n"""	244:0:7145:7222	1996536	11	True				
ANR	1996767	Statement	"""backup method to ensure reasonable file system cleanliness in the face of\\n"""	245:0:7224:7300	1996536	12	True				
ANR	1996768	Statement	"""errors. This is done automatically by default by the condor_master daemon.\\n"""	246:0:7302:7379	1996536	13	True				
ANR	1996769	Statement	"""It may also be explicitly invoked on an as needed basis.\\n\\n"""	247:0:7381:7442	1996536	14	True				
ANR	1996770	ExpressionStatement	"""See the Condor manual section on condor_preen for more details.\\n"""	248:0:7444:7511	1996536	15	True				
ANR	1996771	PrimaryExpression	"""See the Condor manual section on condor_preen for more details.\\n"""		1996536	0					
ANR	1996772	ExpressionStatement	"fprintf ( mailer , ""%s\\n"" , explanation )"	250:2:7516:7554	1996536	16	True				
ANR	1996773	CallExpression	"fprintf ( mailer , ""%s\\n"" , explanation )"		1996536	0					
ANR	1996774	Callee	fprintf		1996536	0					
ANR	1996775	Identifier	fprintf		1996536	0					
ANR	1996776	ArgumentList	mailer		1996536	1					
ANR	1996777	Argument	mailer		1996536	0					
ANR	1996778	Identifier	mailer		1996536	0					
ANR	1996779	Argument	"""%s\\n"""		1996536	1					
ANR	1996780	PrimaryExpression	"""%s\\n"""		1996536	0					
ANR	1996781	Argument	explanation		1996536	2					
ANR	1996782	Identifier	explanation		1996536	0					
ANR	1996783	ExpressionStatement	email_close ( mailer )	251:2:7558:7579	1996536	17	True				
ANR	1996784	CallExpression	email_close ( mailer )		1996536	0					
ANR	1996785	Callee	email_close		1996536	0					
ANR	1996786	Identifier	email_close		1996536	0					
ANR	1996787	ArgumentList	mailer		1996536	1					
ANR	1996788	Argument	mailer		1996536	0					
ANR	1996789	Identifier	mailer		1996536	0					
ANR	1996790	ReturnType	void		1996536	1					
ANR	1996791	Identifier	produce_output		1996536	2					
ANR	1996792	ParameterList			1996536	3					
ANR	1996793	CFGEntryNode	ENTRY		1996536		True				
ANR	1996794	CFGExitNode	EXIT		1996536		True				
ANR	1996795	Symbol	szTmp . Value		1996536						
ANR	1996796	Symbol	NULL		1996536						
ANR	1996797	Symbol	stdout		1996536						
ANR	1996798	Symbol	subject		1996536						
ANR	1996799	Symbol	BadFiles -> number		1996536						
ANR	1996800	Symbol	BadFiles		1996536						
ANR	1996801	Symbol	D_ALWAYS		1996536						
ANR	1996802	Symbol	get_local_hostname		1996536						
ANR	1996803	Symbol	mailer		1996536						
ANR	1996804	Symbol	explanation		1996536						
ANR	1996805	Symbol	get_local_hostname ( ) . Value		1996536						
ANR	1996806	Symbol	str		1996536						
ANR	1996807	Symbol	my_full_hostname		1996536						
ANR	1996808	Symbol	BadFiles -> next		1996536						
ANR	1996809	Symbol	PreenAdmin		1996536						
ANR	1996810	Symbol	MailFlag		1996536						
ANR	1996811	Symbol	subject . Value		1996536						
ANR	1996812	Symbol	email_open		1996536						
ANR	1996813	Symbol	* BadFiles		1996536						
ANR	1996814	Symbol	szTmp		1996536						
ANR	1996815	Function	check_job_spool_hierarchy	255:0:7587:9477							
ANR	1996816	FunctionDef	"check_job_spool_hierarchy (char const * parent , char const * child , StringList & bad_spool_files)"		1996815	0					
ANR	1996817	CompoundStatement		257:0:7688:9477	1996815	0					
ANR	1996818	ExpressionStatement	ASSERT ( parent )	258:1:7691:7707	1996815	0	True				
ANR	1996819	CallExpression	ASSERT ( parent )		1996815	0					
ANR	1996820	Callee	ASSERT		1996815	0					
ANR	1996821	Identifier	ASSERT		1996815	0					
ANR	1996822	ArgumentList	parent		1996815	1					
ANR	1996823	Argument	parent		1996815	0					
ANR	1996824	Identifier	parent		1996815	0					
ANR	1996825	ExpressionStatement	ASSERT ( child )	259:1:7710:7725	1996815	1	True				
ANR	1996826	CallExpression	ASSERT ( child )		1996815	0					
ANR	1996827	Callee	ASSERT		1996815	0					
ANR	1996828	Identifier	ASSERT		1996815	0					
ANR	1996829	ArgumentList	child		1996815	1					
ANR	1996830	Argument	child		1996815	0					
ANR	1996831	Identifier	child		1996815	0					
ANR	1996832	IdentifierDeclStatement	char * end = NULL ;	265:1:7973:7987	1996815	2	True				
ANR	1996833	IdentifierDecl	* end = NULL		1996815	0					
ANR	1996834	IdentifierDeclType	char *		1996815	0					
ANR	1996835	Identifier	end		1996815	1					
ANR	1996836	AssignmentExpression	* end = NULL		1996815	2		=			
ANR	1996837	Identifier	NULL		1996815	0					
ANR	1996838	Identifier	NULL		1996815	1					
ANR	1996839	ExpressionStatement	"strtol ( child , & end , 10 )"	266:1:7990:8011	1996815	3	True				
ANR	1996840	CallExpression	"strtol ( child , & end , 10 )"		1996815	0					
ANR	1996841	Callee	strtol		1996815	0					
ANR	1996842	Identifier	strtol		1996815	0					
ANR	1996843	ArgumentList	child		1996815	1					
ANR	1996844	Argument	child		1996815	0					
ANR	1996845	Identifier	child		1996815	0					
ANR	1996846	Argument	& end		1996815	1					
ANR	1996847	UnaryOperationExpression	& end		1996815	0					
ANR	1996848	UnaryOperator	&		1996815	0					
ANR	1996849	Identifier	end		1996815	1					
ANR	1996850	Argument	10		1996815	2					
ANR	1996851	PrimaryExpression	10		1996815	0					
ANR	1996852	IfStatement	if ( ! end || * end != '\\0' )		1996815	4					
ANR	1996853	Condition	! end || * end != '\\0'	267:5:8018:8037	1996815	0	True				
ANR	1996854	OrExpression	! end || * end != '\\0'		1996815	0		||			
ANR	1996855	UnaryOperationExpression	! end		1996815	0					
ANR	1996856	UnaryOperator	!		1996815	0					
ANR	1996857	Identifier	end		1996815	1					
ANR	1996858	EqualityExpression	* end != '\\0'		1996815	1		!=			
ANR	1996859	UnaryOperationExpression	* end		1996815	0					
ANR	1996860	UnaryOperator	*		1996815	0					
ANR	1996861	Identifier	end		1996815	1					
ANR	1996862	PrimaryExpression	'\\0'		1996815	1					
ANR	1996863	CompoundStatement		11:28:352:352	1996815	1					
ANR	1996864	ReturnStatement	return false ;	268:2:8045:8057	1996815	0	True				
ANR	1996865	Identifier	false		1996815	0					
ANR	1996866	IdentifierDeclStatement	std :: string topdir ;	271:1:8103:8121	1996815	5	True				
ANR	1996867	IdentifierDecl	topdir		1996815	0					
ANR	1996868	IdentifierDeclType	std :: string		1996815	0					
ANR	1996869	Identifier	topdir		1996815	1					
ANR	1996870	ExpressionStatement	"sprintf ( topdir , ""%s%c%s"" , parent , DIR_DELIM_CHAR , child )"	272:1:8124:8176	1996815	6	True				
ANR	1996871	CallExpression	"sprintf ( topdir , ""%s%c%s"" , parent , DIR_DELIM_CHAR , child )"		1996815	0					
ANR	1996872	Callee	sprintf		1996815	0					
ANR	1996873	Identifier	sprintf		1996815	0					
ANR	1996874	ArgumentList	topdir		1996815	1					
ANR	1996875	Argument	topdir		1996815	0					
ANR	1996876	Identifier	topdir		1996815	0					
ANR	1996877	Argument	"""%s%c%s"""		1996815	1					
ANR	1996878	PrimaryExpression	"""%s%c%s"""		1996815	0					
ANR	1996879	Argument	parent		1996815	2					
ANR	1996880	Identifier	parent		1996815	0					
ANR	1996881	Argument	DIR_DELIM_CHAR		1996815	3					
ANR	1996882	Identifier	DIR_DELIM_CHAR		1996815	0					
ANR	1996883	Argument	child		1996815	4					
ANR	1996884	Identifier	child		1996815	0					
ANR	1996885	IdentifierDeclStatement	"Directory dir ( topdir . c_str ( ) , PRIV_ROOT ) ;"	273:1:8179:8218	1996815	7	True				
ANR	1996886	IdentifierDecl	"dir ( topdir . c_str ( ) , PRIV_ROOT )"		1996815	0					
ANR	1996887	IdentifierDeclType	Directory		1996815	0					
ANR	1996888	Identifier	dir		1996815	1					
ANR	1996889	Expression	"topdir . c_str ( ) , PRIV_ROOT"		1996815	2					
ANR	1996890	CallExpression	topdir . c_str ( )		1996815	0					
ANR	1996891	Callee	topdir . c_str		1996815	0					
ANR	1996892	MemberAccess	topdir . c_str		1996815	0					
ANR	1996893	Identifier	topdir		1996815	0					
ANR	1996894	Identifier	c_str		1996815	1					
ANR	1996895	ArgumentList			1996815	1					
ANR	1996896	Identifier	PRIV_ROOT		1996815	1					
ANR	1996897	IdentifierDeclStatement	char const * f ;	274:1:8221:8234	1996815	8	True				
ANR	1996898	IdentifierDecl	* f		1996815	0					
ANR	1996899	IdentifierDeclType	char const *		1996815	0					
ANR	1996900	Identifier	f		1996815	1					
ANR	1996901	WhileStatement	while ( ( f = dir . Next ( ) ) )		1996815	9					
ANR	1996902	Condition	f = dir . Next ( )	275:8:8244:8257	1996815	0	True				
ANR	1996903	AssignmentExpression	f = dir . Next ( )		1996815	0		=			
ANR	1996904	Identifier	f		1996815	0					
ANR	1996905	CallExpression	dir . Next ( )		1996815	1					
ANR	1996906	Callee	dir . Next		1996815	0					
ANR	1996907	MemberAccess	dir . Next		1996815	0					
ANR	1996908	Identifier	dir		1996815	0					
ANR	1996909	Identifier	Next		1996815	1					
ANR	1996910	ArgumentList			1996815	1					
ANR	1996911	CompoundStatement		19:25:572:572	1996815	1					
ANR	1996912	IfStatement	if ( is_ckpt_file ( f ) )		1996815	0					
ANR	1996913	Condition	is_ckpt_file ( f )	278:6:8326:8340	1996815	0	True				
ANR	1996914	CallExpression	is_ckpt_file ( f )		1996815	0					
ANR	1996915	Callee	is_ckpt_file		1996815	0					
ANR	1996916	Identifier	is_ckpt_file		1996815	0					
ANR	1996917	ArgumentList	f		1996815	1					
ANR	1996918	Argument	f		1996815	0					
ANR	1996919	Identifier	f		1996815	0					
ANR	1996920	CompoundStatement		22:24:655:655	1996815	1					
ANR	1996921	ExpressionStatement	"good_file ( topdir . c_str ( ) , f )"	279:3:8349:8379	1996815	0	True				
ANR	1996922	CallExpression	"good_file ( topdir . c_str ( ) , f )"		1996815	0					
ANR	1996923	Callee	good_file		1996815	0					
ANR	1996924	Identifier	good_file		1996815	0					
ANR	1996925	ArgumentList	topdir . c_str ( )		1996815	1					
ANR	1996926	Argument	topdir . c_str ( )		1996815	0					
ANR	1996927	CallExpression	topdir . c_str ( )		1996815	0					
ANR	1996928	Callee	topdir . c_str		1996815	0					
ANR	1996929	MemberAccess	topdir . c_str		1996815	0					
ANR	1996930	Identifier	topdir		1996815	0					
ANR	1996931	Identifier	c_str		1996815	1					
ANR	1996932	ArgumentList			1996815	1					
ANR	1996933	Argument	f		1996815	1					
ANR	1996934	Identifier	f		1996815	0					
ANR	1996935	ContinueStatement	continue ;	280:3:8384:8392	1996815	1	True				
ANR	1996936	IfStatement	if ( IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) ) )		1996815	1					
ANR	1996937	Condition	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )	283:6:8405:8467	1996815	0	True				
ANR	1996938	AndExpression	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )		1996815	0		&&			
ANR	1996939	CallExpression	IsDirectory ( dir . GetFullPath ( ) )		1996815	0					
ANR	1996940	Callee	IsDirectory		1996815	0					
ANR	1996941	Identifier	IsDirectory		1996815	0					
ANR	1996942	ArgumentList	dir . GetFullPath ( )		1996815	1					
ANR	1996943	Argument	dir . GetFullPath ( )		1996815	0					
ANR	1996944	CallExpression	dir . GetFullPath ( )		1996815	0					
ANR	1996945	Callee	dir . GetFullPath		1996815	0					
ANR	1996946	MemberAccess	dir . GetFullPath		1996815	0					
ANR	1996947	Identifier	dir		1996815	0					
ANR	1996948	Identifier	GetFullPath		1996815	1					
ANR	1996949	ArgumentList			1996815	1					
ANR	1996950	UnaryOperationExpression	! IsSymlink ( dir . GetFullPath ( ) )		1996815	1					
ANR	1996951	UnaryOperator	!		1996815	0					
ANR	1996952	CallExpression	IsSymlink ( dir . GetFullPath ( ) )		1996815	1					
ANR	1996953	Callee	IsSymlink		1996815	0					
ANR	1996954	Identifier	IsSymlink		1996815	0					
ANR	1996955	ArgumentList	dir . GetFullPath ( )		1996815	1					
ANR	1996956	Argument	dir . GetFullPath ( )		1996815	0					
ANR	1996957	CallExpression	dir . GetFullPath ( )		1996815	0					
ANR	1996958	Callee	dir . GetFullPath		1996815	0					
ANR	1996959	MemberAccess	dir . GetFullPath		1996815	0					
ANR	1996960	Identifier	dir		1996815	0					
ANR	1996961	Identifier	GetFullPath		1996815	1					
ANR	1996962	ArgumentList			1996815	1					
ANR	1996963	CompoundStatement		27:72:782:782	1996815	1					
ANR	1996964	IfStatement	"if ( check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files ) )"		1996815	0					
ANR	1996965	Condition	"check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files )"	284:7:8480:8542	1996815	0	True				
ANR	1996966	CallExpression	"check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files )"		1996815	0					
ANR	1996967	Callee	check_job_spool_hierarchy		1996815	0					
ANR	1996968	Identifier	check_job_spool_hierarchy		1996815	0					
ANR	1996969	ArgumentList	topdir . c_str ( )		1996815	1					
ANR	1996970	Argument	topdir . c_str ( )		1996815	0					
ANR	1996971	CallExpression	topdir . c_str ( )		1996815	0					
ANR	1996972	Callee	topdir . c_str		1996815	0					
ANR	1996973	MemberAccess	topdir . c_str		1996815	0					
ANR	1996974	Identifier	topdir		1996815	0					
ANR	1996975	Identifier	c_str		1996815	1					
ANR	1996976	ArgumentList			1996815	1					
ANR	1996977	Argument	f		1996815	1					
ANR	1996978	Identifier	f		1996815	0					
ANR	1996979	Argument	bad_spool_files		1996815	2					
ANR	1996980	Identifier	bad_spool_files		1996815	0					
ANR	1996981	CompoundStatement		28:73:857:857	1996815	1					
ANR	1996982	ExpressionStatement	"good_file ( topdir . c_str ( ) , f )"	285:4:8552:8582	1996815	0	True				
ANR	1996983	CallExpression	"good_file ( topdir . c_str ( ) , f )"		1996815	0					
ANR	1996984	Callee	good_file		1996815	0					
ANR	1996985	Identifier	good_file		1996815	0					
ANR	1996986	ArgumentList	topdir . c_str ( )		1996815	1					
ANR	1996987	Argument	topdir . c_str ( )		1996815	0					
ANR	1996988	CallExpression	topdir . c_str ( )		1996815	0					
ANR	1996989	Callee	topdir . c_str		1996815	0					
ANR	1996990	MemberAccess	topdir . c_str		1996815	0					
ANR	1996991	Identifier	topdir		1996815	0					
ANR	1996992	Identifier	c_str		1996815	1					
ANR	1996993	ArgumentList			1996815	1					
ANR	1996994	Argument	f		1996815	1					
ANR	1996995	Identifier	f		1996815	0					
ANR	1996996	ContinueStatement	continue ;	286:4:8588:8596	1996815	1	True				
ANR	1996997	ExpressionStatement	bad_spool_files . append ( dir . GetFullPath ( ) )	290:2:8610:8653	1996815	2	True				
ANR	1996998	CallExpression	bad_spool_files . append ( dir . GetFullPath ( ) )		1996815	0					
ANR	1996999	Callee	bad_spool_files . append		1996815	0					
ANR	1997000	MemberAccess	bad_spool_files . append		1996815	0					
ANR	1997001	Identifier	bad_spool_files		1996815	0					
ANR	1997002	Identifier	append		1996815	1					
ANR	1997003	ArgumentList	dir . GetFullPath ( )		1996815	1					
ANR	1997004	Argument	dir . GetFullPath ( )		1996815	0					
ANR	1997005	CallExpression	dir . GetFullPath ( )		1996815	0					
ANR	1997006	Callee	dir . GetFullPath		1996815	0					
ANR	1997007	MemberAccess	dir . GetFullPath		1996815	0					
ANR	1997008	Identifier	dir		1996815	0					
ANR	1997009	Identifier	GetFullPath		1996815	1					
ANR	1997010	ArgumentList			1996815	1					
ANR	1997011	ReturnStatement	return true ;	307:1:9464:9475	1996815	10	True				
ANR	1997012	Identifier	true		1996815	0					
ANR	1997013	ReturnType	bool		1996815	1					
ANR	1997014	Identifier	check_job_spool_hierarchy		1996815	2					
ANR	1997015	ParameterList	"char const * parent , char const * child , StringList & bad_spool_files"		1996815	3					
ANR	1997016	Parameter	char const * parent	256:27:7619:7636	1996815	0	True				
ANR	1997017	ParameterType	char const *		1996815	0					
ANR	1997018	Identifier	parent		1996815	1					
ANR	1997019	Parameter	char const * child	256:47:7639:7655	1996815	1	True				
ANR	1997020	ParameterType	char const *		1996815	0					
ANR	1997021	Identifier	child		1996815	1					
ANR	1997022	Parameter	StringList & bad_spool_files	256:66:7658:7684	1996815	2	True				
ANR	1997023	ParameterType	StringList &		1996815	0					
ANR	1997024	Identifier	bad_spool_files		1996815	1					
ANR	1997025	CFGEntryNode	ENTRY		1996815		True				
ANR	1997026	CFGExitNode	EXIT		1996815		True				
ANR	1997027	Symbol	parent		1996815						
ANR	1997028	Symbol	NULL		1996815						
ANR	1997029	Symbol	IsDirectory		1996815						
ANR	1997030	Symbol	check_job_spool_hierarchy		1996815						
ANR	1997031	Symbol	& end		1996815						
ANR	1997032	Symbol	f		1996815						
ANR	1997033	Symbol	DIR_DELIM_CHAR		1996815						
ANR	1997034	Symbol	false		1996815						
ANR	1997035	Symbol	IsSymlink		1996815						
ANR	1997036	Symbol	dir		1996815						
ANR	1997037	Symbol	dir . Next		1996815						
ANR	1997038	Symbol	topdir . c_str		1996815						
ANR	1997039	Symbol	dir . GetFullPath		1996815						
ANR	1997040	Symbol	bad_spool_files		1996815						
ANR	1997041	Symbol	true		1996815						
ANR	1997042	Symbol	end		1996815						
ANR	1997043	Symbol	* end		1996815						
ANR	1997044	Symbol	topdir		1996815						
ANR	1997045	Symbol	child		1996815						
ANR	1997046	Symbol	is_ckpt_file		1996815						
ANR	1997047	Function	check_spool_dir	318:0:9872:14057							
ANR	1997048	FunctionDef	check_spool_dir ()		1997047	0					
ANR	1997049	CompoundStatement		320:0:9895:14057	1997047	0					
ANR	1997050	IdentifierDeclStatement	"unsigned int history_length , startd_history_length ;"	321:4:9901:9951	1997047	0	True				
ANR	1997051	IdentifierDecl	history_length		1997047	0					
ANR	1997052	IdentifierDeclType	unsigned int		1997047	0					
ANR	1997053	Identifier	history_length		1997047	1					
ANR	1997054	IdentifierDecl	startd_history_length		1997047	1					
ANR	1997055	IdentifierDeclType	unsigned int		1997047	0					
ANR	1997056	Identifier	startd_history_length		1997047	1					
ANR	1997057	IdentifierDeclStatement	const char * f ;	322:1:9954:9969	1997047	1	True				
ANR	1997058	IdentifierDecl	* f		1997047	0					
ANR	1997059	IdentifierDeclType	const char *		1997047	0					
ANR	1997060	Identifier	f		1997047	1					
ANR	1997061	IdentifierDeclStatement	"const char * history , * startd_history ;"	323:4:9975:10016	1997047	2	True				
ANR	1997062	IdentifierDecl	* history		1997047	0					
ANR	1997063	IdentifierDeclType	const char *		1997047	0					
ANR	1997064	Identifier	history		1997047	1					
ANR	1997065	IdentifierDecl	* startd_history		1997047	1					
ANR	1997066	IdentifierDeclType	const char *		1997047	0					
ANR	1997067	Identifier	startd_history		1997047	1					
ANR	1997068	IdentifierDeclStatement	"Directory dir ( Spool , PRIV_ROOT ) ;"	324:1:10019:10053	1997047	3	True				
ANR	1997069	IdentifierDecl	"dir ( Spool , PRIV_ROOT )"		1997047	0					
ANR	1997070	IdentifierDeclType	Directory		1997047	0					
ANR	1997071	Identifier	dir		1997047	1					
ANR	1997072	Expression	"Spool , PRIV_ROOT"		1997047	2					
ANR	1997073	Identifier	Spool		1997047	0					
ANR	1997074	Identifier	PRIV_ROOT		1997047	1					
ANR	1997075	IdentifierDeclStatement	"StringList well_known_list , bad_spool_files ;"	325:1:10056:10101	1997047	4	True				
ANR	1997076	IdentifierDecl	well_known_list		1997047	0					
ANR	1997077	IdentifierDeclType	StringList		1997047	0					
ANR	1997078	Identifier	well_known_list		1997047	1					
ANR	1997079	IdentifierDecl	bad_spool_files		1997047	1					
ANR	1997080	IdentifierDeclType	StringList		1997047	0					
ANR	1997081	Identifier	bad_spool_files		1997047	1					
ANR	1997082	IdentifierDeclStatement	Qmgr_connection * qmgr ;	326:1:10104:10125	1997047	5	True				
ANR	1997083	IdentifierDecl	* qmgr		1997047	0					
ANR	1997084	IdentifierDeclType	Qmgr_connection *		1997047	0					
ANR	1997085	Identifier	qmgr		1997047	1					
ANR	1997086	IfStatement	if ( ValidSpoolFiles == NULL )		1997047	6					
ANR	1997087	Condition	ValidSpoolFiles == NULL	328:6:10134:10156	1997047	0	True				
ANR	1997088	EqualityExpression	ValidSpoolFiles == NULL		1997047	0		==			
ANR	1997089	Identifier	ValidSpoolFiles		1997047	0					
ANR	1997090	Identifier	NULL		1997047	1					
ANR	1997091	CompoundStatement		9:32:264:264	1997047	1					
ANR	1997092	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"" )"	329:2:10164:10246	1997047	0	True				
ANR	1997093	CallExpression	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"" )"		1997047	0					
ANR	1997094	Callee	dprintf		1997047	0					
ANR	1997095	Identifier	dprintf		1997047	0					
ANR	1997096	ArgumentList	D_ALWAYS		1997047	1					
ANR	1997097	Argument	D_ALWAYS		1997047	0					
ANR	1997098	Identifier	D_ALWAYS		1997047	0					
ANR	1997099	Argument	"""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"""		1997047	1					
ANR	1997100	PrimaryExpression	"""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"""		1997047	0					
ANR	1997101	ReturnStatement	return ;	330:2:10250:10256	1997047	1	True				
ANR	1997102	ExpressionStatement	"history = param ( ""HISTORY"" )"	333:4:10266:10292	1997047	7	True				
ANR	1997103	AssignmentExpression	"history = param ( ""HISTORY"" )"		1997047	0		=			
ANR	1997104	Identifier	history		1997047	0					
ANR	1997105	CallExpression	"param ( ""HISTORY"" )"		1997047	1					
ANR	1997106	Callee	param		1997047	0					
ANR	1997107	Identifier	param		1997047	0					
ANR	1997108	ArgumentList	"""HISTORY"""		1997047	1					
ANR	1997109	Argument	"""HISTORY"""		1997047	0					
ANR	1997110	PrimaryExpression	"""HISTORY"""		1997047	0					
ANR	1997111	ExpressionStatement	history = condor_basename ( history )	334:4:10298:10332	1997047	8	True				
ANR	1997112	AssignmentExpression	history = condor_basename ( history )		1997047	0		=			
ANR	1997113	Identifier	history		1997047	0					
ANR	1997114	CallExpression	condor_basename ( history )		1997047	1					
ANR	1997115	Callee	condor_basename		1997047	0					
ANR	1997116	Identifier	condor_basename		1997047	0					
ANR	1997117	ArgumentList	history		1997047	1					
ANR	1997118	Argument	history		1997047	0					
ANR	1997119	Identifier	history		1997047	0					
ANR	1997120	ExpressionStatement	history_length = strlen ( history )	335:4:10376:10408	1997047	9	True				
ANR	1997121	AssignmentExpression	history_length = strlen ( history )		1997047	0		=			
ANR	1997122	Identifier	history_length		1997047	0					
ANR	1997123	CallExpression	strlen ( history )		1997047	1					
ANR	1997124	Callee	strlen		1997047	0					
ANR	1997125	Identifier	strlen		1997047	0					
ANR	1997126	ArgumentList	history		1997047	1					
ANR	1997127	Argument	history		1997047	0					
ANR	1997128	Identifier	history		1997047	0					
ANR	1997129	ExpressionStatement	"startd_history = param ( ""STARTD_HISTORY"" )"	337:4:10415:10455	1997047	10	True				
ANR	1997130	AssignmentExpression	"startd_history = param ( ""STARTD_HISTORY"" )"		1997047	0		=			
ANR	1997131	Identifier	startd_history		1997047	0					
ANR	1997132	CallExpression	"param ( ""STARTD_HISTORY"" )"		1997047	1					
ANR	1997133	Callee	param		1997047	0					
ANR	1997134	Identifier	param		1997047	0					
ANR	1997135	ArgumentList	"""STARTD_HISTORY"""		1997047	1					
ANR	1997136	Argument	"""STARTD_HISTORY"""		1997047	0					
ANR	1997137	PrimaryExpression	"""STARTD_HISTORY"""		1997047	0					
ANR	1997138	ExpressionStatement	startd_history = condor_basename ( startd_history )	338:4:10461:10509	1997047	11	True				
ANR	1997139	AssignmentExpression	startd_history = condor_basename ( startd_history )		1997047	0		=			
ANR	1997140	Identifier	startd_history		1997047	0					
ANR	1997141	CallExpression	condor_basename ( startd_history )		1997047	1					
ANR	1997142	Callee	condor_basename		1997047	0					
ANR	1997143	Identifier	condor_basename		1997047	0					
ANR	1997144	ArgumentList	startd_history		1997047	1					
ANR	1997145	Argument	startd_history		1997047	0					
ANR	1997146	Identifier	startd_history		1997047	0					
ANR	1997147	ExpressionStatement	startd_history_length = strlen ( startd_history )	339:4:10515:10561	1997047	12	True				
ANR	1997148	AssignmentExpression	startd_history_length = strlen ( startd_history )		1997047	0		=			
ANR	1997149	Identifier	startd_history_length		1997047	0					
ANR	1997150	CallExpression	strlen ( startd_history )		1997047	1					
ANR	1997151	Callee	strlen		1997047	0					
ANR	1997152	Identifier	strlen		1997047	0					
ANR	1997153	ArgumentList	startd_history		1997047	1					
ANR	1997154	Argument	startd_history		1997047	0					
ANR	1997155	Identifier	startd_history		1997047	0					
ANR	1997156	ExpressionStatement	well_known_list . initializeFromString ( ValidSpoolFiles )	341:1:10565:10619	1997047	13	True				
ANR	1997157	CallExpression	well_known_list . initializeFromString ( ValidSpoolFiles )		1997047	0					
ANR	1997158	Callee	well_known_list . initializeFromString		1997047	0					
ANR	1997159	MemberAccess	well_known_list . initializeFromString		1997047	0					
ANR	1997160	Identifier	well_known_list		1997047	0					
ANR	1997161	Identifier	initializeFromString		1997047	1					
ANR	1997162	ArgumentList	ValidSpoolFiles		1997047	1					
ANR	1997163	Argument	ValidSpoolFiles		1997047	0					
ANR	1997164	Identifier	ValidSpoolFiles		1997047	0					
ANR	1997165	ExpressionStatement	"well_known_list . append ( ""job_queue.log"" )"	343:1:10685:10726	1997047	14	True				
ANR	1997166	CallExpression	"well_known_list . append ( ""job_queue.log"" )"		1997047	0					
ANR	1997167	Callee	well_known_list . append		1997047	0					
ANR	1997168	MemberAccess	well_known_list . append		1997047	0					
ANR	1997169	Identifier	well_known_list		1997047	0					
ANR	1997170	Identifier	append		1997047	1					
ANR	1997171	ArgumentList	"""job_queue.log"""		1997047	1					
ANR	1997172	Argument	"""job_queue.log"""		1997047	0					
ANR	1997173	PrimaryExpression	"""job_queue.log"""		1997047	0					
ANR	1997174	ExpressionStatement	"well_known_list . append ( ""job_queue.log.tmp"" )"	344:1:10729:10774	1997047	15	True				
ANR	1997175	CallExpression	"well_known_list . append ( ""job_queue.log.tmp"" )"		1997047	0					
ANR	1997176	Callee	well_known_list . append		1997047	0					
ANR	1997177	MemberAccess	well_known_list . append		1997047	0					
ANR	1997178	Identifier	well_known_list		1997047	0					
ANR	1997179	Identifier	append		1997047	1					
ANR	1997180	ArgumentList	"""job_queue.log.tmp"""		1997047	1					
ANR	1997181	Argument	"""job_queue.log.tmp"""		1997047	0					
ANR	1997182	PrimaryExpression	"""job_queue.log.tmp"""		1997047	0					
ANR	1997183	ExpressionStatement	"well_known_list . append ( ""spool_version"" )"	345:1:10777:10818	1997047	16	True				
ANR	1997184	CallExpression	"well_known_list . append ( ""spool_version"" )"		1997047	0					
ANR	1997185	Callee	well_known_list . append		1997047	0					
ANR	1997186	MemberAccess	well_known_list . append		1997047	0					
ANR	1997187	Identifier	well_known_list		1997047	0					
ANR	1997188	Identifier	append		1997047	1					
ANR	1997189	ArgumentList	"""spool_version"""		1997047	1					
ANR	1997190	Argument	"""spool_version"""		1997047	0					
ANR	1997191	PrimaryExpression	"""spool_version"""		1997047	0					
ANR	1997192	ExpressionStatement	"well_known_list . append ( ""Accountant.log"" )"	346:1:10821:10863	1997047	17	True				
ANR	1997193	CallExpression	"well_known_list . append ( ""Accountant.log"" )"		1997047	0					
ANR	1997194	Callee	well_known_list . append		1997047	0					
ANR	1997195	MemberAccess	well_known_list . append		1997047	0					
ANR	1997196	Identifier	well_known_list		1997047	0					
ANR	1997197	Identifier	append		1997047	1					
ANR	1997198	ArgumentList	"""Accountant.log"""		1997047	1					
ANR	1997199	Argument	"""Accountant.log"""		1997047	0					
ANR	1997200	PrimaryExpression	"""Accountant.log"""		1997047	0					
ANR	1997201	ExpressionStatement	"well_known_list . append ( ""Accountantnew.log"" )"	347:1:10866:10911	1997047	18	True				
ANR	1997202	CallExpression	"well_known_list . append ( ""Accountantnew.log"" )"		1997047	0					
ANR	1997203	Callee	well_known_list . append		1997047	0					
ANR	1997204	MemberAccess	well_known_list . append		1997047	0					
ANR	1997205	Identifier	well_known_list		1997047	0					
ANR	1997206	Identifier	append		1997047	1					
ANR	1997207	ArgumentList	"""Accountantnew.log"""		1997047	1					
ANR	1997208	Argument	"""Accountantnew.log"""		1997047	0					
ANR	1997209	PrimaryExpression	"""Accountantnew.log"""		1997047	0					
ANR	1997210	ExpressionStatement	"well_known_list . append ( ""local_univ_execute"" )"	348:1:10914:10960	1997047	19	True				
ANR	1997211	CallExpression	"well_known_list . append ( ""local_univ_execute"" )"		1997047	0					
ANR	1997212	Callee	well_known_list . append		1997047	0					
ANR	1997213	MemberAccess	well_known_list . append		1997047	0					
ANR	1997214	Identifier	well_known_list		1997047	0					
ANR	1997215	Identifier	append		1997047	1					
ANR	1997216	ArgumentList	"""local_univ_execute"""		1997047	1					
ANR	1997217	Argument	"""local_univ_execute"""		1997047	0					
ANR	1997218	PrimaryExpression	"""local_univ_execute"""		1997047	0					
ANR	1997219	ExpressionStatement	"well_known_list . append ( ""EventdShutdownRate.log"" )"	349:1:10963:11013	1997047	20	True				
ANR	1997220	CallExpression	"well_known_list . append ( ""EventdShutdownRate.log"" )"		1997047	0					
ANR	1997221	Callee	well_known_list . append		1997047	0					
ANR	1997222	MemberAccess	well_known_list . append		1997047	0					
ANR	1997223	Identifier	well_known_list		1997047	0					
ANR	1997224	Identifier	append		1997047	1					
ANR	1997225	ArgumentList	"""EventdShutdownRate.log"""		1997047	1					
ANR	1997226	Argument	"""EventdShutdownRate.log"""		1997047	0					
ANR	1997227	PrimaryExpression	"""EventdShutdownRate.log"""		1997047	0					
ANR	1997228	ExpressionStatement	"well_known_list . append ( ""OfflineLog"" )"	350:1:11016:11054	1997047	21	True				
ANR	1997229	CallExpression	"well_known_list . append ( ""OfflineLog"" )"		1997047	0					
ANR	1997230	Callee	well_known_list . append		1997047	0					
ANR	1997231	MemberAccess	well_known_list . append		1997047	0					
ANR	1997232	Identifier	well_known_list		1997047	0					
ANR	1997233	Identifier	append		1997047	1					
ANR	1997234	ArgumentList	"""OfflineLog"""		1997047	1					
ANR	1997235	Argument	"""OfflineLog"""		1997047	0					
ANR	1997236	PrimaryExpression	"""OfflineLog"""		1997047	0					
ANR	1997237	ExpressionStatement	"well_known_list . append ( ""SCHEDD.lock"" )"	353:1:11174:11213	1997047	22	True				
ANR	1997238	CallExpression	"well_known_list . append ( ""SCHEDD.lock"" )"		1997047	0					
ANR	1997239	Callee	well_known_list . append		1997047	0					
ANR	1997240	MemberAccess	well_known_list . append		1997047	0					
ANR	1997241	Identifier	well_known_list		1997047	0					
ANR	1997242	Identifier	append		1997047	1					
ANR	1997243	ArgumentList	"""SCHEDD.lock"""		1997047	1					
ANR	1997244	Argument	"""SCHEDD.lock"""		1997047	0					
ANR	1997245	PrimaryExpression	"""SCHEDD.lock"""		1997047	0					
ANR	1997246	ExpressionStatement	"well_known_list . append ( "".quillwritepassword"" )"	355:1:11251:11298	1997047	23	True				
ANR	1997247	CallExpression	"well_known_list . append ( "".quillwritepassword"" )"		1997047	0					
ANR	1997248	Callee	well_known_list . append		1997047	0					
ANR	1997249	MemberAccess	well_known_list . append		1997047	0					
ANR	1997250	Identifier	well_known_list		1997047	0					
ANR	1997251	Identifier	append		1997047	1					
ANR	1997252	ArgumentList	""".quillwritepassword"""		1997047	1					
ANR	1997253	Argument	""".quillwritepassword"""		1997047	0					
ANR	1997254	PrimaryExpression	""".quillwritepassword"""		1997047	0					
ANR	1997255	ExpressionStatement	"well_known_list . append ( "".pgpass"" )"	356:1:11301:11336	1997047	24	True				
ANR	1997256	CallExpression	"well_known_list . append ( "".pgpass"" )"		1997047	0					
ANR	1997257	Callee	well_known_list . append		1997047	0					
ANR	1997258	MemberAccess	well_known_list . append		1997047	0					
ANR	1997259	Identifier	well_known_list		1997047	0					
ANR	1997260	Identifier	append		1997047	1					
ANR	1997261	ArgumentList	""".pgpass"""		1997047	1					
ANR	1997262	Argument	""".pgpass"""		1997047	0					
ANR	1997263	PrimaryExpression	""".pgpass"""		1997047	0					
ANR	1997264	IfStatement	if ( ! ( qmgr = ConnectQ ( 0 ) ) )		1997047	25					
ANR	1997265	Condition	! ( qmgr = ConnectQ ( 0 ) )	359:5:11374:11395	1997047	0	True				
ANR	1997266	UnaryOperationExpression	! ( qmgr = ConnectQ ( 0 ) )		1997047	0					
ANR	1997267	UnaryOperator	!		1997047	0					
ANR	1997268	AssignmentExpression	qmgr = ConnectQ ( 0 )		1997047	1		=			
ANR	1997269	Identifier	qmgr		1997047	0					
ANR	1997270	CallExpression	ConnectQ ( 0 )		1997047	1					
ANR	1997271	Callee	ConnectQ		1997047	0					
ANR	1997272	Identifier	ConnectQ		1997047	0					
ANR	1997273	ArgumentList	0		1997047	1					
ANR	1997274	Argument	0		1997047	0					
ANR	1997275	PrimaryExpression	0		1997047	0					
ANR	1997276	CompoundStatement		40:29:1502:1502	1997047	1					
ANR	1997277	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: Can't contact schedd\\n"" )"	360:2:11402:11477	1997047	0	True				
ANR	1997278	CallExpression	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: Can't contact schedd\\n"" )"		1997047	0					
ANR	1997279	Callee	dprintf		1997047	0					
ANR	1997280	Identifier	dprintf		1997047	0					
ANR	1997281	ArgumentList	D_ALWAYS		1997047	1					
ANR	1997282	Argument	D_ALWAYS		1997047	0					
ANR	1997283	Identifier	D_ALWAYS		1997047	0					
ANR	1997284	Argument	"""Not cleaning spool directory: Can't contact schedd\\n"""		1997047	1					
ANR	1997285	PrimaryExpression	"""Not cleaning spool directory: Can't contact schedd\\n"""		1997047	0					
ANR	1997286	ReturnStatement	return ;	361:2:11481:11487	1997047	1	True				
ANR	1997287	WhileStatement	while ( ( f = dir . Next ( ) ) )		1997047	26					
ANR	1997288	Condition	f = dir . Next ( )	365:8:11539:11554	1997047	0	True				
ANR	1997289	AssignmentExpression	f = dir . Next ( )		1997047	0		=			
ANR	1997290	Identifier	f		1997047	0					
ANR	1997291	CallExpression	dir . Next ( )		1997047	1					
ANR	1997292	Callee	dir . Next		1997047	0					
ANR	1997293	MemberAccess	dir . Next		1997047	0					
ANR	1997294	Identifier	dir		1997047	0					
ANR	1997295	Identifier	Next		1997047	1					
ANR	1997296	ArgumentList			1997047	1					
ANR	1997297	CompoundStatement		46:27:1662:1662	1997047	1					
ANR	1997298	IfStatement	if ( well_known_list . contains ( f ) )		1997047	0					
ANR	1997299	Condition	well_known_list . contains ( f )	367:6:11596:11622	1997047	0	True				
ANR	1997300	CallExpression	well_known_list . contains ( f )		1997047	0					
ANR	1997301	Callee	well_known_list . contains		1997047	0					
ANR	1997302	MemberAccess	well_known_list . contains		1997047	0					
ANR	1997303	Identifier	well_known_list		1997047	0					
ANR	1997304	Identifier	contains		1997047	1					
ANR	1997305	ArgumentList	f		1997047	1					
ANR	1997306	Argument	f		1997047	0					
ANR	1997307	Identifier	f		1997047	0					
ANR	1997308	CompoundStatement		48:36:1730:1730	1997047	1					
ANR	1997309	ExpressionStatement	"good_file ( Spool , f )"	368:3:11631:11652	1997047	0	True				
ANR	1997310	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997311	Callee	good_file		1997047	0					
ANR	1997312	Identifier	good_file		1997047	0					
ANR	1997313	ArgumentList	Spool		1997047	1					
ANR	1997314	Argument	Spool		1997047	0					
ANR	1997315	Identifier	Spool		1997047	0					
ANR	1997316	Argument	f		1997047	1					
ANR	1997317	Identifier	f		1997047	0					
ANR	1997318	ContinueStatement	continue ;	369:3:11657:11665	1997047	1	True				
ANR	1997319	IfStatement	"if ( ! strncmp ( f , ""job_queue.log"" , 13 ) )"		1997047	1					
ANR	1997320	Condition	"! strncmp ( f , ""job_queue.log"" , 13 )"	371:6:11677:11706	1997047	0	True				
ANR	1997321	UnaryOperationExpression	"! strncmp ( f , ""job_queue.log"" , 13 )"		1997047	0					
ANR	1997322	UnaryOperator	!		1997047	0					
ANR	1997323	CallExpression	"strncmp ( f , ""job_queue.log"" , 13 )"		1997047	1					
ANR	1997324	Callee	strncmp		1997047	0					
ANR	1997325	Identifier	strncmp		1997047	0					
ANR	1997326	ArgumentList	f		1997047	1					
ANR	1997327	Argument	f		1997047	0					
ANR	1997328	Identifier	f		1997047	0					
ANR	1997329	Argument	"""job_queue.log"""		1997047	1					
ANR	1997330	PrimaryExpression	"""job_queue.log"""		1997047	0					
ANR	1997331	Argument	13		1997047	2					
ANR	1997332	PrimaryExpression	13		1997047	0					
ANR	1997333	CompoundStatement		52:39:1814:1814	1997047	1					
ANR	1997334	ExpressionStatement	"good_file ( Spool , f )"	380:3:12195:12216	1997047	0	True				
ANR	1997335	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997336	Callee	good_file		1997047	0					
ANR	1997337	Identifier	good_file		1997047	0					
ANR	1997338	ArgumentList	Spool		1997047	1					
ANR	1997339	Argument	Spool		1997047	0					
ANR	1997340	Identifier	Spool		1997047	0					
ANR	1997341	Argument	f		1997047	1					
ANR	1997342	Identifier	f		1997047	0					
ANR	1997343	ContinueStatement	continue ;	381:3:12221:12229	1997047	1	True				
ANR	1997344	IfStatement	"if ( strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0 )"		1997047	2					
ANR	1997345	Condition	"strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0"	384:15:12302:12385	1997047	0	True				
ANR	1997346	AndExpression	"strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0"		1997047	0		&&			
ANR	1997347	RelationalExpression	strlen ( f ) >= history_length		1997047	0		>=			
ANR	1997348	CallExpression	strlen ( f )		1997047	0					
ANR	1997349	Callee	strlen		1997047	0					
ANR	1997350	Identifier	strlen		1997047	0					
ANR	1997351	ArgumentList	f		1997047	1					
ANR	1997352	Argument	f		1997047	0					
ANR	1997353	Identifier	f		1997047	0					
ANR	1997354	Identifier	history_length		1997047	1					
ANR	1997355	EqualityExpression	"strncmp ( f , history , history_length ) == 0"		1997047	1		==			
ANR	1997356	CallExpression	"strncmp ( f , history , history_length )"		1997047	0					
ANR	1997357	Callee	strncmp		1997047	0					
ANR	1997358	Identifier	strncmp		1997047	0					
ANR	1997359	ArgumentList	f		1997047	1					
ANR	1997360	Argument	f		1997047	0					
ANR	1997361	Identifier	f		1997047	0					
ANR	1997362	Argument	history		1997047	1					
ANR	1997363	Identifier	history		1997047	0					
ANR	1997364	Argument	history_length		1997047	2					
ANR	1997365	Identifier	history_length		1997047	0					
ANR	1997366	PrimaryExpression	0		1997047	1					
ANR	1997367	CompoundStatement		66:57:2492:2492	1997047	1					
ANR	1997368	ExpressionStatement	"good_file ( Spool , f )"	386:12:12402:12423	1997047	0	True				
ANR	1997369	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997370	Callee	good_file		1997047	0					
ANR	1997371	Identifier	good_file		1997047	0					
ANR	1997372	ArgumentList	Spool		1997047	1					
ANR	1997373	Argument	Spool		1997047	0					
ANR	1997374	Identifier	Spool		1997047	0					
ANR	1997375	Argument	f		1997047	1					
ANR	1997376	Identifier	f		1997047	0					
ANR	1997377	ContinueStatement	continue ;	387:12:12437:12445	1997047	1	True				
ANR	1997378	IfStatement	"if ( startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0 )"		1997047	3					
ANR	1997379	Condition	"startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"	391:7:12525:12651	1997047	0	True				
ANR	1997380	AndExpression	"startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"		1997047	0		&&			
ANR	1997381	RelationalExpression	startd_history_length > 0		1997047	0		>			
ANR	1997382	Identifier	startd_history_length		1997047	0					
ANR	1997383	PrimaryExpression	0		1997047	1					
ANR	1997384	AndExpression	"strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"		1997047	1		&&			
ANR	1997385	RelationalExpression	strlen ( f ) >= startd_history_length		1997047	0		>=			
ANR	1997386	CallExpression	strlen ( f )		1997047	0					
ANR	1997387	Callee	strlen		1997047	0					
ANR	1997388	Identifier	strlen		1997047	0					
ANR	1997389	ArgumentList	f		1997047	1					
ANR	1997390	Argument	f		1997047	0					
ANR	1997391	Identifier	f		1997047	0					
ANR	1997392	Identifier	startd_history_length		1997047	1					
ANR	1997393	EqualityExpression	"strncmp ( f , startd_history , startd_history_length ) == 0"		1997047	1		==			
ANR	1997394	CallExpression	"strncmp ( f , startd_history , startd_history_length )"		1997047	0					
ANR	1997395	Callee	strncmp		1997047	0					
ANR	1997396	Identifier	strncmp		1997047	0					
ANR	1997397	ArgumentList	f		1997047	1					
ANR	1997398	Argument	f		1997047	0					
ANR	1997399	Identifier	f		1997047	0					
ANR	1997400	Argument	startd_history		1997047	1					
ANR	1997401	Identifier	startd_history		1997047	0					
ANR	1997402	Argument	startd_history_length		1997047	2					
ANR	1997403	Identifier	startd_history_length		1997047	0					
ANR	1997404	PrimaryExpression	0		1997047	1					
ANR	1997405	CompoundStatement		74:59:2758:2758	1997047	1					
ANR	1997406	ExpressionStatement	"good_file ( Spool , f )"	395:12:12669:12690	1997047	0	True				
ANR	1997407	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997408	Callee	good_file		1997047	0					
ANR	1997409	Identifier	good_file		1997047	0					
ANR	1997410	ArgumentList	Spool		1997047	1					
ANR	1997411	Argument	Spool		1997047	0					
ANR	1997412	Identifier	Spool		1997047	0					
ANR	1997413	Argument	f		1997047	1					
ANR	1997414	Identifier	f		1997047	0					
ANR	1997415	ContinueStatement	continue ;	396:12:12704:12712	1997047	1	True				
ANR	1997416	IfStatement	if ( is_valid_shared_exe ( f ) )		1997047	4					
ANR	1997417	Condition	is_valid_shared_exe ( f )	400:6:12771:12792	1997047	0	True				
ANR	1997418	CallExpression	is_valid_shared_exe ( f )		1997047	0					
ANR	1997419	Callee	is_valid_shared_exe		1997047	0					
ANR	1997420	Identifier	is_valid_shared_exe		1997047	0					
ANR	1997421	ArgumentList	f		1997047	1					
ANR	1997422	Argument	f		1997047	0					
ANR	1997423	Identifier	f		1997047	0					
ANR	1997424	CompoundStatement		81:31:2900:2900	1997047	1					
ANR	1997425	ExpressionStatement	"good_file ( Spool , f )"	401:3:12801:12822	1997047	0	True				
ANR	1997426	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997427	Callee	good_file		1997047	0					
ANR	1997428	Identifier	good_file		1997047	0					
ANR	1997429	ArgumentList	Spool		1997047	1					
ANR	1997430	Argument	Spool		1997047	0					
ANR	1997431	Identifier	Spool		1997047	0					
ANR	1997432	Argument	f		1997047	1					
ANR	1997433	Identifier	f		1997047	0					
ANR	1997434	ContinueStatement	continue ;	402:3:12827:12835	1997047	1	True				
ANR	1997435	IfStatement	if ( is_ckpt_file ( f ) )		1997047	5					
ANR	1997436	Condition	is_ckpt_file ( f )	406:6:12890:12904	1997047	0	True				
ANR	1997437	CallExpression	is_ckpt_file ( f )		1997047	0					
ANR	1997438	Callee	is_ckpt_file		1997047	0					
ANR	1997439	Identifier	is_ckpt_file		1997047	0					
ANR	1997440	ArgumentList	f		1997047	1					
ANR	1997441	Argument	f		1997047	0					
ANR	1997442	Identifier	f		1997047	0					
ANR	1997443	CompoundStatement		87:24:3012:3012	1997047	1					
ANR	1997444	ExpressionStatement	"good_file ( Spool , f )"	407:3:12913:12934	1997047	0	True				
ANR	1997445	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997446	Callee	good_file		1997047	0					
ANR	1997447	Identifier	good_file		1997047	0					
ANR	1997448	ArgumentList	Spool		1997047	1					
ANR	1997449	Argument	Spool		1997047	0					
ANR	1997450	Identifier	Spool		1997047	0					
ANR	1997451	Argument	f		1997047	1					
ANR	1997452	Identifier	f		1997047	0					
ANR	1997453	ContinueStatement	continue ;	408:3:12939:12947	1997047	1	True				
ANR	1997454	IfStatement	if ( is_myproxy_file ( f ) )		1997047	6					
ANR	1997455	Condition	is_myproxy_file ( f )	412:7:13012:13031	1997047	0	True				
ANR	1997456	CallExpression	is_myproxy_file ( f )		1997047	0					
ANR	1997457	Callee	is_myproxy_file		1997047	0					
ANR	1997458	Identifier	is_myproxy_file		1997047	0					
ANR	1997459	ArgumentList	f		1997047	1					
ANR	1997460	Argument	f		1997047	0					
ANR	1997461	Identifier	f		1997047	0					
ANR	1997462	CompoundStatement		93:30:3139:3139	1997047	1					
ANR	1997463	ExpressionStatement	"good_file ( Spool , f )"	413:3:13040:13061	1997047	0	True				
ANR	1997464	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997465	Callee	good_file		1997047	0					
ANR	1997466	Identifier	good_file		1997047	0					
ANR	1997467	ArgumentList	Spool		1997047	1					
ANR	1997468	Argument	Spool		1997047	0					
ANR	1997469	Identifier	Spool		1997047	0					
ANR	1997470	Argument	f		1997047	1					
ANR	1997471	Identifier	f		1997047	0					
ANR	1997472	ContinueStatement	continue ;	414:3:13066:13074	1997047	1	True				
ANR	1997473	IfStatement	if ( is_ccb_file ( f ) )		1997047	7					
ANR	1997474	Condition	is_ccb_file ( f )	418:7:13124:13139	1997047	0	True				
ANR	1997475	CallExpression	is_ccb_file ( f )		1997047	0					
ANR	1997476	Callee	is_ccb_file		1997047	0					
ANR	1997477	Identifier	is_ccb_file		1997047	0					
ANR	1997478	ArgumentList	f		1997047	1					
ANR	1997479	Argument	f		1997047	0					
ANR	1997480	Identifier	f		1997047	0					
ANR	1997481	CompoundStatement		99:26:3247:3247	1997047	1					
ANR	1997482	ExpressionStatement	"good_file ( Spool , f )"	419:3:13148:13169	1997047	0	True				
ANR	1997483	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997484	Callee	good_file		1997047	0					
ANR	1997485	Identifier	good_file		1997047	0					
ANR	1997486	ArgumentList	Spool		1997047	1					
ANR	1997487	Argument	Spool		1997047	0					
ANR	1997488	Identifier	Spool		1997047	0					
ANR	1997489	Argument	f		1997047	1					
ANR	1997490	Identifier	f		1997047	0					
ANR	1997491	ContinueStatement	continue ;	420:3:13174:13182	1997047	1	True				
ANR	1997492	IfStatement	if ( IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) ) )		1997047	8					
ANR	1997493	Condition	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )	423:6:13195:13261	1997047	0	True				
ANR	1997494	AndExpression	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )		1997047	0		&&			
ANR	1997495	CallExpression	IsDirectory ( dir . GetFullPath ( ) )		1997047	0					
ANR	1997496	Callee	IsDirectory		1997047	0					
ANR	1997497	Identifier	IsDirectory		1997047	0					
ANR	1997498	ArgumentList	dir . GetFullPath ( )		1997047	1					
ANR	1997499	Argument	dir . GetFullPath ( )		1997047	0					
ANR	1997500	CallExpression	dir . GetFullPath ( )		1997047	0					
ANR	1997501	Callee	dir . GetFullPath		1997047	0					
ANR	1997502	MemberAccess	dir . GetFullPath		1997047	0					
ANR	1997503	Identifier	dir		1997047	0					
ANR	1997504	Identifier	GetFullPath		1997047	1					
ANR	1997505	ArgumentList			1997047	1					
ANR	1997506	UnaryOperationExpression	! IsSymlink ( dir . GetFullPath ( ) )		1997047	1					
ANR	1997507	UnaryOperator	!		1997047	0					
ANR	1997508	CallExpression	IsSymlink ( dir . GetFullPath ( ) )		1997047	1					
ANR	1997509	Callee	IsSymlink		1997047	0					
ANR	1997510	Identifier	IsSymlink		1997047	0					
ANR	1997511	ArgumentList	dir . GetFullPath ( )		1997047	1					
ANR	1997512	Argument	dir . GetFullPath ( )		1997047	0					
ANR	1997513	CallExpression	dir . GetFullPath ( )		1997047	0					
ANR	1997514	Callee	dir . GetFullPath		1997047	0					
ANR	1997515	MemberAccess	dir . GetFullPath		1997047	0					
ANR	1997516	Identifier	dir		1997047	0					
ANR	1997517	Identifier	GetFullPath		1997047	1					
ANR	1997518	ArgumentList			1997047	1					
ANR	1997519	CompoundStatement		104:76:3369:3369	1997047	1					
ANR	1997520	IfStatement	"if ( check_job_spool_hierarchy ( Spool , f , bad_spool_files ) )"		1997047	0					
ANR	1997521	Condition	"check_job_spool_hierarchy ( Spool , f , bad_spool_files )"	424:7:13274:13327	1997047	0	True				
ANR	1997522	CallExpression	"check_job_spool_hierarchy ( Spool , f , bad_spool_files )"		1997047	0					
ANR	1997523	Callee	check_job_spool_hierarchy		1997047	0					
ANR	1997524	Identifier	check_job_spool_hierarchy		1997047	0					
ANR	1997525	ArgumentList	Spool		1997047	1					
ANR	1997526	Argument	Spool		1997047	0					
ANR	1997527	Identifier	Spool		1997047	0					
ANR	1997528	Argument	f		1997047	1					
ANR	1997529	Identifier	f		1997047	0					
ANR	1997530	Argument	bad_spool_files		1997047	2					
ANR	1997531	Identifier	bad_spool_files		1997047	0					
ANR	1997532	CompoundStatement		105:64:3435:3435	1997047	1					
ANR	1997533	ExpressionStatement	"good_file ( Spool , f )"	425:4:13337:13358	1997047	0	True				
ANR	1997534	CallExpression	"good_file ( Spool , f )"		1997047	0					
ANR	1997535	Callee	good_file		1997047	0					
ANR	1997536	Identifier	good_file		1997047	0					
ANR	1997537	ArgumentList	Spool		1997047	1					
ANR	1997538	Argument	Spool		1997047	0					
ANR	1997539	Identifier	Spool		1997047	0					
ANR	1997540	Argument	f		1997047	1					
ANR	1997541	Identifier	f		1997047	0					
ANR	1997542	ContinueStatement	continue ;	426:4:13364:13372	1997047	1	True				
ANR	1997543	ExpressionStatement	bad_spool_files . append ( f )	434:2:13619:13646	1997047	9	True				
ANR	1997544	CallExpression	bad_spool_files . append ( f )		1997047	0					
ANR	1997545	Callee	bad_spool_files . append		1997047	0					
ANR	1997546	MemberAccess	bad_spool_files . append		1997047	0					
ANR	1997547	Identifier	bad_spool_files		1997047	0					
ANR	1997548	Identifier	append		1997047	1					
ANR	1997549	ArgumentList	f		1997047	1					
ANR	1997550	Argument	f		1997047	0					
ANR	1997551	Identifier	f		1997047	0					
ANR	1997552	IfStatement	if ( DisconnectQ ( qmgr ) )		1997047	27					
ANR	1997553	Condition	DisconnectQ ( qmgr )	437:5:13657:13673	1997047	0	True				
ANR	1997554	CallExpression	DisconnectQ ( qmgr )		1997047	0					
ANR	1997555	Callee	DisconnectQ		1997047	0					
ANR	1997556	Identifier	DisconnectQ		1997047	0					
ANR	1997557	ArgumentList	qmgr		1997047	1					
ANR	1997558	Argument	qmgr		1997047	0					
ANR	1997559	Identifier	qmgr		1997047	0					
ANR	1997560	CompoundStatement		118:25:3781:3781	1997047	1					
ANR	1997561	ExpressionStatement	bad_spool_files . rewind ( )	441:2:13846:13870	1997047	0	True				
ANR	1997562	CallExpression	bad_spool_files . rewind ( )		1997047	0					
ANR	1997563	Callee	bad_spool_files . rewind		1997047	0					
ANR	1997564	MemberAccess	bad_spool_files . rewind		1997047	0					
ANR	1997565	Identifier	bad_spool_files		1997047	0					
ANR	1997566	Identifier	rewind		1997047	1					
ANR	1997567	ArgumentList			1997047	1					
ANR	1997568	WhileStatement	while ( ( f = bad_spool_files . next ( ) ) )		1997047	1					
ANR	1997569	Condition	f = bad_spool_files . next ( )	442:9:13881:13908	1997047	0	True				
ANR	1997570	AssignmentExpression	f = bad_spool_files . next ( )		1997047	0		=			
ANR	1997571	Identifier	f		1997047	0					
ANR	1997572	CallExpression	bad_spool_files . next ( )		1997047	1					
ANR	1997573	Callee	bad_spool_files . next		1997047	0					
ANR	1997574	MemberAccess	bad_spool_files . next		1997047	0					
ANR	1997575	Identifier	bad_spool_files		1997047	0					
ANR	1997576	Identifier	next		1997047	1					
ANR	1997577	ArgumentList			1997047	1					
ANR	1997578	CompoundStatement		123:40:4016:4016	1997047	1					
ANR	1997579	ExpressionStatement	"bad_file ( Spool , f , dir )"	443:3:13917:13942	1997047	0	True				
ANR	1997580	CallExpression	"bad_file ( Spool , f , dir )"		1997047	0					
ANR	1997581	Callee	bad_file		1997047	0					
ANR	1997582	Identifier	bad_file		1997047	0					
ANR	1997583	ArgumentList	Spool		1997047	1					
ANR	1997584	Argument	Spool		1997047	0					
ANR	1997585	Identifier	Spool		1997047	0					
ANR	1997586	Argument	f		1997047	1					
ANR	1997587	Identifier	f		1997047	0					
ANR	1997588	Argument	dir		1997047	2					
ANR	1997589	Identifier	dir		1997047	0					
ANR	1997590	ElseStatement	else		1997047	0					
ANR	1997591	CompoundStatement		126:8:4060:4060	1997047	0					
ANR	1997592	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disconnecting from job queue, not deleting spool files.\\n"" )"	446:2:13960:14052	1997047	0	True				
ANR	1997593	CallExpression	"dprintf ( D_ALWAYS , ""Error disconnecting from job queue, not deleting spool files.\\n"" )"		1997047	0					
ANR	1997594	Callee	dprintf		1997047	0					
ANR	1997595	Identifier	dprintf		1997047	0					
ANR	1997596	ArgumentList	D_ALWAYS		1997047	1					
ANR	1997597	Argument	D_ALWAYS		1997047	0					
ANR	1997598	Identifier	D_ALWAYS		1997047	0					
ANR	1997599	Argument	"""Error disconnecting from job queue, not deleting spool files.\\n"""		1997047	1					
ANR	1997600	PrimaryExpression	"""Error disconnecting from job queue, not deleting spool files.\\n"""		1997047	0					
ANR	1997601	ReturnType	void		1997047	1					
ANR	1997602	Identifier	check_spool_dir		1997047	2					
ANR	1997603	ParameterList			1997047	3					
ANR	1997604	CFGEntryNode	ENTRY		1997047		True				
ANR	1997605	CFGExitNode	EXIT		1997047		True				
ANR	1997606	Symbol	IsDirectory		1997047						
ANR	1997607	Symbol	check_job_spool_hierarchy		1997047						
ANR	1997608	Symbol	is_myproxy_file		1997047						
ANR	1997609	Symbol	dir		1997047						
ANR	1997610	Symbol	dir . Next		1997047						
ANR	1997611	Symbol	dir . GetFullPath		1997047						
ANR	1997612	Symbol	well_known_list		1997047						
ANR	1997613	Symbol	strlen		1997047						
ANR	1997614	Symbol	strncmp		1997047						
ANR	1997615	Symbol	param		1997047						
ANR	1997616	Symbol	bad_spool_files		1997047						
ANR	1997617	Symbol	well_known_list . contains		1997047						
ANR	1997618	Symbol	is_valid_shared_exe		1997047						
ANR	1997619	Symbol	is_ckpt_file		1997047						
ANR	1997620	Symbol	bad_spool_files . next		1997047						
ANR	1997621	Symbol	ValidSpoolFiles		1997047						
ANR	1997622	Symbol	DisconnectQ		1997047						
ANR	1997623	Symbol	NULL		1997047						
ANR	1997624	Symbol	f		1997047						
ANR	1997625	Symbol	D_ALWAYS		1997047						
ANR	1997626	Symbol	Spool		1997047						
ANR	1997627	Symbol	IsSymlink		1997047						
ANR	1997628	Symbol	history		1997047						
ANR	1997629	Symbol	startd_history		1997047						
ANR	1997630	Symbol	history_length		1997047						
ANR	1997631	Symbol	qmgr		1997047						
ANR	1997632	Symbol	ConnectQ		1997047						
ANR	1997633	Symbol	startd_history_length		1997047						
ANR	1997634	Symbol	is_ccb_file		1997047						
ANR	1997635	Symbol	condor_basename		1997047						
ANR	1997636	Function	is_valid_shared_exe	453:0:14066:14433							
ANR	1997637	FunctionDef	is_valid_shared_exe (const char * name)		1997636	0					
ANR	1997638	CompoundStatement		455:0:14114:14433	1997636	0					
ANR	1997639	IfStatement	"if ( ( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 ) )"		1997636	0					
ANR	1997640	Condition	"( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 )"	456:5:14121:14173	1997636	0	True				
ANR	1997641	OrExpression	"( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 )"		1997636	0		||			
ANR	1997642	RelationalExpression	strlen ( name ) < 4		1997636	0		<			
ANR	1997643	CallExpression	strlen ( name )		1997636	0					
ANR	1997644	Callee	strlen		1997636	0					
ANR	1997645	Identifier	strlen		1997636	0					
ANR	1997646	ArgumentList	name		1997636	1					
ANR	1997647	Argument	name		1997636	0					
ANR	1997648	Identifier	name		1997636	0					
ANR	1997649	PrimaryExpression	4		1997636	1					
ANR	1997650	EqualityExpression	"strncmp ( name , ""exe-"" , 4 ) != 0"		1997636	1		!=			
ANR	1997651	CallExpression	"strncmp ( name , ""exe-"" , 4 )"		1997636	0					
ANR	1997652	Callee	strncmp		1997636	0					
ANR	1997653	Identifier	strncmp		1997636	0					
ANR	1997654	ArgumentList	name		1997636	1					
ANR	1997655	Argument	name		1997636	0					
ANR	1997656	Identifier	name		1997636	0					
ANR	1997657	Argument	"""exe-"""		1997636	1					
ANR	1997658	PrimaryExpression	"""exe-"""		1997636	0					
ANR	1997659	Argument	4		1997636	2					
ANR	1997660	PrimaryExpression	4		1997636	0					
ANR	1997661	PrimaryExpression	0		1997636	1					
ANR	1997662	CompoundStatement		2:60:61:61	1997636	1					
ANR	1997663	ReturnStatement	return FALSE ;	457:2:14180:14192	1997636	0	True				
ANR	1997664	Identifier	FALSE		1997636	0					
ANR	1997665	IdentifierDeclStatement	MyString path ;	459:1:14198:14211	1997636	1	True				
ANR	1997666	IdentifierDecl	path		1997636	0					
ANR	1997667	IdentifierDeclType	MyString		1997636	0					
ANR	1997668	Identifier	path		1997636	1					
ANR	1997669	ExpressionStatement	"path . sprintf ( ""%s/%s"" , Spool , name )"	460:1:14214:14248	1997636	2	True				
ANR	1997670	CallExpression	"path . sprintf ( ""%s/%s"" , Spool , name )"		1997636	0					
ANR	1997671	Callee	path . sprintf		1997636	0					
ANR	1997672	MemberAccess	path . sprintf		1997636	0					
ANR	1997673	Identifier	path		1997636	0					
ANR	1997674	Identifier	sprintf		1997636	1					
ANR	1997675	ArgumentList	"""%s/%s"""		1997636	1					
ANR	1997676	Argument	"""%s/%s"""		1997636	0					
ANR	1997677	PrimaryExpression	"""%s/%s"""		1997636	0					
ANR	1997678	Argument	Spool		1997636	1					
ANR	1997679	Identifier	Spool		1997636	0					
ANR	1997680	Argument	name		1997636	2					
ANR	1997681	Identifier	name		1997636	0					
ANR	1997682	IdentifierDeclStatement	int count = link_count ( path . Value ( ) ) ;	461:1:14251:14287	1997636	3	True				
ANR	1997683	IdentifierDecl	count = link_count ( path . Value ( ) )		1997636	0					
ANR	1997684	IdentifierDeclType	int		1997636	0					
ANR	1997685	Identifier	count		1997636	1					
ANR	1997686	AssignmentExpression	count = link_count ( path . Value ( ) )		1997636	2		=			
ANR	1997687	Identifier	count		1997636	0					
ANR	1997688	CallExpression	link_count ( path . Value ( ) )		1997636	1					
ANR	1997689	Callee	link_count		1997636	0					
ANR	1997690	Identifier	link_count		1997636	0					
ANR	1997691	ArgumentList	path . Value ( )		1997636	1					
ANR	1997692	Argument	path . Value ( )		1997636	0					
ANR	1997693	CallExpression	path . Value ( )		1997636	0					
ANR	1997694	Callee	path . Value		1997636	0					
ANR	1997695	MemberAccess	path . Value		1997636	0					
ANR	1997696	Identifier	path		1997636	0					
ANR	1997697	Identifier	Value		1997636	1					
ANR	1997698	ArgumentList			1997636	1					
ANR	1997699	IfStatement	if ( count == 1 )		1997636	4					
ANR	1997700	Condition	count == 1	462:5:14294:14303	1997636	0	True				
ANR	1997701	EqualityExpression	count == 1		1997636	0		==			
ANR	1997702	Identifier	count		1997636	0					
ANR	1997703	PrimaryExpression	1		1997636	1					
ANR	1997704	CompoundStatement		8:17:191:191	1997636	1					
ANR	1997705	ReturnStatement	return FALSE ;	463:2:14310:14322	1997636	0	True				
ANR	1997706	Identifier	FALSE		1997636	0					
ANR	1997707	IfStatement	if ( count == - 1 )		1997636	5					
ANR	1997708	Condition	count == - 1	465:5:14332:14342	1997636	0	True				
ANR	1997709	EqualityExpression	count == - 1		1997636	0		==			
ANR	1997710	Identifier	count		1997636	0					
ANR	1997711	UnaryOperationExpression	- 1		1997636	1					
ANR	1997712	UnaryOperator	-		1997636	0					
ANR	1997713	PrimaryExpression	1		1997636	1					
ANR	1997714	CompoundStatement		11:18:230:230	1997636	1					
ANR	1997715	ExpressionStatement	"dprintf ( D_ALWAYS , ""link_count error on %s; not deleting\\n"" , name )"	466:2:14349:14414	1997636	0	True				
ANR	1997716	CallExpression	"dprintf ( D_ALWAYS , ""link_count error on %s; not deleting\\n"" , name )"		1997636	0					
ANR	1997717	Callee	dprintf		1997636	0					
ANR	1997718	Identifier	dprintf		1997636	0					
ANR	1997719	ArgumentList	D_ALWAYS		1997636	1					
ANR	1997720	Argument	D_ALWAYS		1997636	0					
ANR	1997721	Identifier	D_ALWAYS		1997636	0					
ANR	1997722	Argument	"""link_count error on %s; not deleting\\n"""		1997636	1					
ANR	1997723	PrimaryExpression	"""link_count error on %s; not deleting\\n"""		1997636	0					
ANR	1997724	Argument	name		1997636	2					
ANR	1997725	Identifier	name		1997636	0					
ANR	1997726	ReturnStatement	return TRUE ;	468:1:14420:14431	1997636	6	True				
ANR	1997727	Identifier	TRUE		1997636	0					
ANR	1997728	ReturnType	BOOLEAN		1997636	1					
ANR	1997729	Identifier	is_valid_shared_exe		1997636	2					
ANR	1997730	ParameterList	const char * name		1997636	3					
ANR	1997731	Parameter	const char * name	454:21:14095:14110	1997636	0	True				
ANR	1997732	ParameterType	const char *		1997636	0					
ANR	1997733	Identifier	name		1997636	1					
ANR	1997734	CFGEntryNode	ENTRY		1997636		True				
ANR	1997735	CFGExitNode	EXIT		1997636		True				
ANR	1997736	Symbol	strlen		1997636						
ANR	1997737	Symbol	strncmp		1997636						
ANR	1997738	Symbol	path		1997636						
ANR	1997739	Symbol	link_count		1997636						
ANR	1997740	Symbol	name		1997636						
ANR	1997741	Symbol	count		1997636						
ANR	1997742	Symbol	D_ALWAYS		1997636						
ANR	1997743	Symbol	Spool		1997636						
ANR	1997744	Symbol	path . Value		1997636						
ANR	1997745	Symbol	TRUE		1997636						
ANR	1997746	Symbol	FALSE		1997636						
ANR	1997747	Function	is_ckpt_file	477:0:14717:14865							
ANR	1997748	FunctionDef	is_ckpt_file (const char * name)		1997747	0					
ANR	1997749	CompoundStatement		479:0:14758:14865	1997747	0					
ANR	1997750	IfStatement	"if ( strstr ( name , ""cluster"" ) )"		1997747	0					
ANR	1997751	Condition	"strstr ( name , ""cluster"" )"	481:5:14766:14787	1997747	0	True				
ANR	1997752	CallExpression	"strstr ( name , ""cluster"" )"		1997747	0					
ANR	1997753	Callee	strstr		1997747	0					
ANR	1997754	Identifier	strstr		1997747	0					
ANR	1997755	ArgumentList	name		1997747	1					
ANR	1997756	Argument	name		1997747	0					
ANR	1997757	Identifier	name		1997747	0					
ANR	1997758	Argument	"""cluster"""		1997747	1					
ANR	1997759	PrimaryExpression	"""cluster"""		1997747	0					
ANR	1997760	CompoundStatement		3:30:32:32	1997747	1					
ANR	1997761	ReturnStatement	return is_v3_ckpt ( name ) ;	482:2:14795:14820	1997747	0	True				
ANR	1997762	CallExpression	is_v3_ckpt ( name )		1997747	0					
ANR	1997763	Callee	is_v3_ckpt		1997747	0					
ANR	1997764	Identifier	is_v3_ckpt		1997747	0					
ANR	1997765	ArgumentList	name		1997747	1					
ANR	1997766	Argument	name		1997747	0					
ANR	1997767	Identifier	name		1997747	0					
ANR	1997768	ElseStatement	else		1997747	0					
ANR	1997769	CompoundStatement		5:8:71:71	1997747	0					
ANR	1997770	ReturnStatement	return is_v2_ckpt ( name ) ;	484:2:14834:14859	1997747	0	True				
ANR	1997771	CallExpression	is_v2_ckpt ( name )		1997747	0					
ANR	1997772	Callee	is_v2_ckpt		1997747	0					
ANR	1997773	Identifier	is_v2_ckpt		1997747	0					
ANR	1997774	ArgumentList	name		1997747	1					
ANR	1997775	Argument	name		1997747	0					
ANR	1997776	Identifier	name		1997747	0					
ANR	1997777	ReturnType	BOOLEAN		1997747	1					
ANR	1997778	Identifier	is_ckpt_file		1997747	2					
ANR	1997779	ParameterList	const char * name		1997747	3					
ANR	1997780	Parameter	const char * name	478:14:14739:14754	1997747	0	True				
ANR	1997781	ParameterType	const char *		1997747	0					
ANR	1997782	Identifier	name		1997747	1					
ANR	1997783	CFGEntryNode	ENTRY		1997747		True				
ANR	1997784	CFGExitNode	EXIT		1997747		True				
ANR	1997785	Symbol	strstr		1997747						
ANR	1997786	Symbol	is_v3_ckpt		1997747						
ANR	1997787	Symbol	name		1997747						
ANR	1997788	Symbol	is_v2_ckpt		1997747						
ANR	1997789	Function	grab_val	496:0:15123:15295							
ANR	1997790	FunctionDef	"grab_val (const char * str , const char * pattern)"		1997789	0					
ANR	1997791	CompoundStatement		498:0:15183:15295	1997789	0					
ANR	1997792	IdentifierDeclStatement	char const * ptr ;	499:1:15186:15201	1997789	0	True				
ANR	1997793	IdentifierDecl	* ptr		1997789	0					
ANR	1997794	IdentifierDeclType	char const *		1997789	0					
ANR	1997795	Identifier	ptr		1997789	1					
ANR	1997796	IfStatement	"if ( ( ptr = strstr ( str , pattern ) ) )"		1997789	1					
ANR	1997797	Condition	"ptr = strstr ( str , pattern )"	501:5:15209:15235	1997789	0	True				
ANR	1997798	AssignmentExpression	"ptr = strstr ( str , pattern )"		1997789	0		=			
ANR	1997799	Identifier	ptr		1997789	0					
ANR	1997800	CallExpression	"strstr ( str , pattern )"		1997789	1					
ANR	1997801	Callee	strstr		1997789	0					
ANR	1997802	Identifier	strstr		1997789	0					
ANR	1997803	ArgumentList	str		1997789	1					
ANR	1997804	Argument	str		1997789	0					
ANR	1997805	Identifier	str		1997789	0					
ANR	1997806	Argument	pattern		1997789	1					
ANR	1997807	Identifier	pattern		1997789	0					
ANR	1997808	CompoundStatement		4:35:55:55	1997789	1					
ANR	1997809	ReturnStatement	return atoi ( ptr + strlen ( pattern ) ) ;	502:2:15243:15278	1997789	0	True				
ANR	1997810	CallExpression	atoi ( ptr + strlen ( pattern ) )		1997789	0					
ANR	1997811	Callee	atoi		1997789	0					
ANR	1997812	Identifier	atoi		1997789	0					
ANR	1997813	ArgumentList	ptr + strlen ( pattern )		1997789	1					
ANR	1997814	Argument	ptr + strlen ( pattern )		1997789	0					
ANR	1997815	AdditiveExpression	ptr + strlen ( pattern )		1997789	0		+			
ANR	1997816	Identifier	ptr		1997789	0					
ANR	1997817	CallExpression	strlen ( pattern )		1997789	1					
ANR	1997818	Callee	strlen		1997789	0					
ANR	1997819	Identifier	strlen		1997789	0					
ANR	1997820	ArgumentList	pattern		1997789	1					
ANR	1997821	Argument	pattern		1997789	0					
ANR	1997822	Identifier	pattern		1997789	0					
ANR	1997823	ReturnStatement	return - 1 ;	504:1:15284:15293	1997789	2	True				
ANR	1997824	UnaryOperationExpression	- 1		1997789	0					
ANR	1997825	UnaryOperator	-		1997789	0					
ANR	1997826	PrimaryExpression	1		1997789	1					
ANR	1997827	ReturnType	inline int		1997789	1					
ANR	1997828	Identifier	grab_val		1997789	2					
ANR	1997829	ParameterList	"const char * str , const char * pattern"		1997789	3					
ANR	1997830	Parameter	const char * str	497:10:15144:15158	1997789	0	True				
ANR	1997831	ParameterType	const char *		1997789	0					
ANR	1997832	Identifier	str		1997789	1					
ANR	1997833	Parameter	const char * pattern	497:27:15161:15179	1997789	1	True				
ANR	1997834	ParameterType	const char *		1997789	0					
ANR	1997835	Identifier	pattern		1997789	1					
ANR	1997836	CFGEntryNode	ENTRY		1997789		True				
ANR	1997837	CFGExitNode	EXIT		1997789		True				
ANR	1997838	Symbol	str		1997789						
ANR	1997839	Symbol	atoi		1997789						
ANR	1997840	Symbol	strlen		1997789						
ANR	1997841	Symbol	strstr		1997789						
ANR	1997842	Symbol	pattern		1997789						
ANR	1997843	Symbol	ptr		1997789						
ANR	1997844	Function	is_v2_ckpt	517:0:15656:15904							
ANR	1997845	FunctionDef	is_v2_ckpt (const char * name)		1997844	0					
ANR	1997846	CompoundStatement		519:0:15695:15904	1997844	0					
ANR	1997847	IdentifierDeclStatement	int cluster ;	520:1:15698:15710	1997844	0	True				
ANR	1997848	IdentifierDecl	cluster		1997844	0					
ANR	1997849	IdentifierDeclType	int		1997844	0					
ANR	1997850	Identifier	cluster		1997844	1					
ANR	1997851	IdentifierDeclStatement	int proc ;	521:1:15713:15722	1997844	1	True				
ANR	1997852	IdentifierDecl	proc		1997844	0					
ANR	1997853	IdentifierDeclType	int		1997844	0					
ANR	1997854	Identifier	proc		1997844	1					
ANR	1997855	ExpressionStatement	"cluster = grab_val ( name , ""job"" )"	523:1:15726:15759	1997844	2	True				
ANR	1997856	AssignmentExpression	"cluster = grab_val ( name , ""job"" )"		1997844	0		=			
ANR	1997857	Identifier	cluster		1997844	0					
ANR	1997858	CallExpression	"grab_val ( name , ""job"" )"		1997844	1					
ANR	1997859	Callee	grab_val		1997844	0					
ANR	1997860	Identifier	grab_val		1997844	0					
ANR	1997861	ArgumentList	name		1997844	1					
ANR	1997862	Argument	name		1997844	0					
ANR	1997863	Identifier	name		1997844	0					
ANR	1997864	Argument	"""job"""		1997844	1					
ANR	1997865	PrimaryExpression	"""job"""		1997844	0					
ANR	1997866	ExpressionStatement	"proc = grab_val ( name , "".ckpt."" )"	524:1:15762:15795	1997844	3	True				
ANR	1997867	AssignmentExpression	"proc = grab_val ( name , "".ckpt."" )"		1997844	0		=			
ANR	1997868	Identifier	proc		1997844	0					
ANR	1997869	CallExpression	"grab_val ( name , "".ckpt."" )"		1997844	1					
ANR	1997870	Callee	grab_val		1997844	0					
ANR	1997871	Identifier	grab_val		1997844	0					
ANR	1997872	ArgumentList	name		1997844	1					
ANR	1997873	Argument	name		1997844	0					
ANR	1997874	Identifier	name		1997844	0					
ANR	1997875	Argument	""".ckpt."""		1997844	1					
ANR	1997876	PrimaryExpression	""".ckpt."""		1997844	0					
ANR	1997877	IfStatement	if ( proc < 0 )		1997844	4					
ANR	1997878	Condition	proc < 0	526:5:15803:15810	1997844	0	True				
ANR	1997879	RelationalExpression	proc < 0		1997844	0		<			
ANR	1997880	Identifier	proc		1997844	0					
ANR	1997881	PrimaryExpression	0		1997844	1					
ANR	1997882	CompoundStatement		8:16:118:118	1997844	1					
ANR	1997883	ReturnStatement	return cluster_exists ( cluster ) ;	527:2:15818:15850	1997844	0	True				
ANR	1997884	CallExpression	cluster_exists ( cluster )		1997844	0					
ANR	1997885	Callee	cluster_exists		1997844	0					
ANR	1997886	Identifier	cluster_exists		1997844	0					
ANR	1997887	ArgumentList	cluster		1997844	1					
ANR	1997888	Argument	cluster		1997844	0					
ANR	1997889	Identifier	cluster		1997844	0					
ANR	1997890	ElseStatement	else		1997844	0					
ANR	1997891	CompoundStatement		10:8:164:164	1997844	0					
ANR	1997892	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	529:2:15864:15899	1997844	0	True				
ANR	1997893	CallExpression	"proc_exists ( cluster , proc )"		1997844	0					
ANR	1997894	Callee	proc_exists		1997844	0					
ANR	1997895	Identifier	proc_exists		1997844	0					
ANR	1997896	ArgumentList	cluster		1997844	1					
ANR	1997897	Argument	cluster		1997844	0					
ANR	1997898	Identifier	cluster		1997844	0					
ANR	1997899	Argument	proc		1997844	1					
ANR	1997900	Identifier	proc		1997844	0					
ANR	1997901	ReturnType	BOOLEAN		1997844	1					
ANR	1997902	Identifier	is_v2_ckpt		1997844	2					
ANR	1997903	ParameterList	const char * name		1997844	3					
ANR	1997904	Parameter	const char * name	518:12:15676:15691	1997844	0	True				
ANR	1997905	ParameterType	const char *		1997844	0					
ANR	1997906	Identifier	name		1997844	1					
ANR	1997907	CFGEntryNode	ENTRY		1997844		True				
ANR	1997908	CFGExitNode	EXIT		1997844		True				
ANR	1997909	Symbol	cluster		1997844						
ANR	1997910	Symbol	proc		1997844						
ANR	1997911	Symbol	name		1997844						
ANR	1997912	Symbol	grab_val		1997844						
ANR	1997913	Symbol	cluster_exists		1997844						
ANR	1997914	Symbol	proc_exists		1997844						
ANR	1997915	Function	is_v3_ckpt	543:0:16294:16604							
ANR	1997916	FunctionDef	is_v3_ckpt (const char * name)		1997915	0					
ANR	1997917	CompoundStatement		545:0:16333:16604	1997915	0					
ANR	1997918	IdentifierDeclStatement	int cluster ;	546:1:16336:16348	1997915	0	True				
ANR	1997919	IdentifierDecl	cluster		1997915	0					
ANR	1997920	IdentifierDeclType	int		1997915	0					
ANR	1997921	Identifier	cluster		1997915	1					
ANR	1997922	IdentifierDeclStatement	int proc ;	547:1:16351:16360	1997915	1	True				
ANR	1997923	IdentifierDecl	proc		1997915	0					
ANR	1997924	IdentifierDeclType	int		1997915	0					
ANR	1997925	Identifier	proc		1997915	1					
ANR	1997926	IdentifierDeclStatement	int subproc ;	548:1:16363:16375	1997915	2	True				
ANR	1997927	IdentifierDecl	subproc		1997915	0					
ANR	1997928	IdentifierDeclType	int		1997915	0					
ANR	1997929	Identifier	subproc		1997915	1					
ANR	1997930	ExpressionStatement	"cluster = grab_val ( name , ""cluster"" )"	550:1:16379:16416	1997915	3	True				
ANR	1997931	AssignmentExpression	"cluster = grab_val ( name , ""cluster"" )"		1997915	0		=			
ANR	1997932	Identifier	cluster		1997915	0					
ANR	1997933	CallExpression	"grab_val ( name , ""cluster"" )"		1997915	1					
ANR	1997934	Callee	grab_val		1997915	0					
ANR	1997935	Identifier	grab_val		1997915	0					
ANR	1997936	ArgumentList	name		1997915	1					
ANR	1997937	Argument	name		1997915	0					
ANR	1997938	Identifier	name		1997915	0					
ANR	1997939	Argument	"""cluster"""		1997915	1					
ANR	1997940	PrimaryExpression	"""cluster"""		1997915	0					
ANR	1997941	ExpressionStatement	"proc = grab_val ( name , "".proc"" )"	551:1:16419:16451	1997915	4	True				
ANR	1997942	AssignmentExpression	"proc = grab_val ( name , "".proc"" )"		1997915	0		=			
ANR	1997943	Identifier	proc		1997915	0					
ANR	1997944	CallExpression	"grab_val ( name , "".proc"" )"		1997915	1					
ANR	1997945	Callee	grab_val		1997915	0					
ANR	1997946	Identifier	grab_val		1997915	0					
ANR	1997947	ArgumentList	name		1997915	1					
ANR	1997948	Argument	name		1997915	0					
ANR	1997949	Identifier	name		1997915	0					
ANR	1997950	Argument	""".proc"""		1997915	1					
ANR	1997951	PrimaryExpression	""".proc"""		1997915	0					
ANR	1997952	ExpressionStatement	"subproc = grab_val ( name , "".subproc"" )"	552:1:16454:16492	1997915	5	True				
ANR	1997953	AssignmentExpression	"subproc = grab_val ( name , "".subproc"" )"		1997915	0		=			
ANR	1997954	Identifier	subproc		1997915	0					
ANR	1997955	CallExpression	"grab_val ( name , "".subproc"" )"		1997915	1					
ANR	1997956	Callee	grab_val		1997915	0					
ANR	1997957	Identifier	grab_val		1997915	0					
ANR	1997958	ArgumentList	name		1997915	1					
ANR	1997959	Argument	name		1997915	0					
ANR	1997960	Identifier	name		1997915	0					
ANR	1997961	Argument	""".subproc"""		1997915	1					
ANR	1997962	PrimaryExpression	""".subproc"""		1997915	0					
ANR	1997963	IfStatement	if ( proc < 0 )		1997915	6					
ANR	1997964	Condition	proc < 0	555:5:16503:16510	1997915	0	True				
ANR	1997965	RelationalExpression	proc < 0		1997915	0		<			
ANR	1997966	Identifier	proc		1997915	0					
ANR	1997967	PrimaryExpression	0		1997915	1					
ANR	1997968	CompoundStatement		11:16:180:180	1997915	1					
ANR	1997969	ReturnStatement	return cluster_exists ( cluster ) ;	556:2:16518:16550	1997915	0	True				
ANR	1997970	CallExpression	cluster_exists ( cluster )		1997915	0					
ANR	1997971	Callee	cluster_exists		1997915	0					
ANR	1997972	Identifier	cluster_exists		1997915	0					
ANR	1997973	ArgumentList	cluster		1997915	1					
ANR	1997974	Argument	cluster		1997915	0					
ANR	1997975	Identifier	cluster		1997915	0					
ANR	1997976	ElseStatement	else		1997915	0					
ANR	1997977	CompoundStatement		13:8:226:226	1997915	0					
ANR	1997978	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	558:2:16564:16599	1997915	0	True				
ANR	1997979	CallExpression	"proc_exists ( cluster , proc )"		1997915	0					
ANR	1997980	Callee	proc_exists		1997915	0					
ANR	1997981	Identifier	proc_exists		1997915	0					
ANR	1997982	ArgumentList	cluster		1997915	1					
ANR	1997983	Argument	cluster		1997915	0					
ANR	1997984	Identifier	cluster		1997915	0					
ANR	1997985	Argument	proc		1997915	1					
ANR	1997986	Identifier	proc		1997915	0					
ANR	1997987	ReturnType	BOOLEAN		1997915	1					
ANR	1997988	Identifier	is_v3_ckpt		1997915	2					
ANR	1997989	ParameterList	const char * name		1997915	3					
ANR	1997990	Parameter	const char * name	544:12:16314:16329	1997915	0	True				
ANR	1997991	ParameterType	const char *		1997915	0					
ANR	1997992	Identifier	name		1997915	1					
ANR	1997993	CFGEntryNode	ENTRY		1997915		True				
ANR	1997994	CFGExitNode	EXIT		1997915		True				
ANR	1997995	Symbol	cluster		1997915						
ANR	1997996	Symbol	proc		1997915						
ANR	1997997	Symbol	name		1997915						
ANR	1997998	Symbol	grab_val		1997915						
ANR	1997999	Symbol	cluster_exists		1997915						
ANR	1998000	Symbol	subproc		1997915						
ANR	1998001	Symbol	proc_exists		1997915						
ANR	1998002	Function	is_myproxy_file	566:0:16703:17032							
ANR	1998003	FunctionDef	is_myproxy_file (const char * name)		1998002	0					
ANR	1998004	CompoundStatement		568:0:16747:17032	1998002	0					
ANR	1998005	IdentifierDeclStatement	"int cluster , proc ;"	569:1:16750:16767	1998002	0	True				
ANR	1998006	IdentifierDecl	cluster		1998002	0					
ANR	1998007	IdentifierDeclType	int		1998002	0					
ANR	1998008	Identifier	cluster		1998002	1					
ANR	1998009	IdentifierDecl	proc		1998002	1					
ANR	1998010	IdentifierDeclType	int		1998002	0					
ANR	1998011	Identifier	proc		1998002	1					
ANR	1998012	IdentifierDeclStatement	"int rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc ) ;"	573:1:16902:16955	1998002	1	True				
ANR	1998013	IdentifierDecl	"rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		1998002	0					
ANR	1998014	IdentifierDeclType	int		1998002	0					
ANR	1998015	Identifier	rc		1998002	1					
ANR	1998016	AssignmentExpression	"rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		1998002	2		=			
ANR	1998017	Identifier	rc		1998002	0					
ANR	1998018	CallExpression	"sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		1998002	1					
ANR	1998019	Callee	sscanf		1998002	0					
ANR	1998020	Identifier	sscanf		1998002	0					
ANR	1998021	ArgumentList	name		1998002	1					
ANR	1998022	Argument	name		1998002	0					
ANR	1998023	Identifier	name		1998002	0					
ANR	1998024	Argument	"""mpp.%d.%d"""		1998002	1					
ANR	1998025	PrimaryExpression	"""mpp.%d.%d"""		1998002	0					
ANR	1998026	Argument	& cluster		1998002	2					
ANR	1998027	UnaryOperationExpression	& cluster		1998002	0					
ANR	1998028	UnaryOperator	&		1998002	0					
ANR	1998029	Identifier	cluster		1998002	1					
ANR	1998030	Argument	& proc		1998002	3					
ANR	1998031	UnaryOperationExpression	& proc		1998002	0					
ANR	1998032	UnaryOperator	&		1998002	0					
ANR	1998033	Identifier	proc		1998002	1					
ANR	1998034	IfStatement	if ( rc != 2 )		1998002	2					
ANR	1998035	Condition	rc != 2	574:6:16963:16969	1998002	0	True				
ANR	1998036	EqualityExpression	rc != 2		1998002	0		!=			
ANR	1998037	Identifier	rc		1998002	0					
ANR	1998038	PrimaryExpression	2		1998002	1					
ANR	1998039	CompoundStatement		7:16:225:225	1998002	1					
ANR	1998040	ReturnStatement	return FALSE ;	575:2:16977:16989	1998002	0	True				
ANR	1998041	Identifier	FALSE		1998002	0					
ANR	1998042	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	577:1:16995:17030	1998002	3	True				
ANR	1998043	CallExpression	"proc_exists ( cluster , proc )"		1998002	0					
ANR	1998044	Callee	proc_exists		1998002	0					
ANR	1998045	Identifier	proc_exists		1998002	0					
ANR	1998046	ArgumentList	cluster		1998002	1					
ANR	1998047	Argument	cluster		1998002	0					
ANR	1998048	Identifier	cluster		1998002	0					
ANR	1998049	Argument	proc		1998002	1					
ANR	1998050	Identifier	proc		1998002	0					
ANR	1998051	ReturnType	BOOLEAN		1998002	1					
ANR	1998052	Identifier	is_myproxy_file		1998002	2					
ANR	1998053	ParameterList	const char * name		1998002	3					
ANR	1998054	Parameter	const char * name	567:17:16728:16743	1998002	0	True				
ANR	1998055	ParameterType	const char *		1998002	0					
ANR	1998056	Identifier	name		1998002	1					
ANR	1998057	CFGEntryNode	ENTRY		1998002		True				
ANR	1998058	CFGExitNode	EXIT		1998002		True				
ANR	1998059	Symbol	cluster		1998002						
ANR	1998060	Symbol	rc		1998002						
ANR	1998061	Symbol	proc		1998002						
ANR	1998062	Symbol	sscanf		1998002						
ANR	1998063	Symbol	name		1998002						
ANR	1998064	Symbol	& cluster		1998002						
ANR	1998065	Symbol	FALSE		1998002						
ANR	1998066	Symbol	proc_exists		1998002						
ANR	1998067	Symbol	& proc		1998002						
ANR	1998068	Function	is_ccb_file	584:0:17131:17245							
ANR	1998069	FunctionDef	is_ccb_file (const char * name)		1998068	0					
ANR	1998070	CompoundStatement		586:0:17171:17245	1998068	0					
ANR	1998071	IfStatement	"if ( strstr ( name , "".ccb_reconnect"" ) )"		1998068	0					
ANR	1998072	Condition	"strstr ( name , "".ccb_reconnect"" )"	587:5:17178:17206	1998068	0	True				
ANR	1998073	CallExpression	"strstr ( name , "".ccb_reconnect"" )"		1998068	0					
ANR	1998074	Callee	strstr		1998068	0					
ANR	1998075	Identifier	strstr		1998068	0					
ANR	1998076	ArgumentList	name		1998068	1					
ANR	1998077	Argument	name		1998068	0					
ANR	1998078	Identifier	name		1998068	0					
ANR	1998079	Argument	""".ccb_reconnect"""		1998068	1					
ANR	1998080	PrimaryExpression	""".ccb_reconnect"""		1998068	0					
ANR	1998081	CompoundStatement		2:37:38:38	1998068	1					
ANR	1998082	ReturnStatement	return TRUE ;	588:2:17214:17225	1998068	0	True				
ANR	1998083	Identifier	TRUE		1998068	0					
ANR	1998084	ReturnStatement	return FALSE ;	590:1:17231:17243	1998068	1	True				
ANR	1998085	Identifier	FALSE		1998068	0					
ANR	1998086	ReturnType	BOOLEAN		1998068	1					
ANR	1998087	Identifier	is_ccb_file		1998068	2					
ANR	1998088	ParameterList	const char * name		1998068	3					
ANR	1998089	Parameter	const char * name	585:13:17152:17167	1998068	0	True				
ANR	1998090	ParameterType	const char *		1998068	0					
ANR	1998091	Identifier	name		1998068	1					
ANR	1998092	CFGEntryNode	ENTRY		1998068		True				
ANR	1998093	CFGExitNode	EXIT		1998068		True				
ANR	1998094	Symbol	strstr		1998068						
ANR	1998095	Symbol	name		1998068						
ANR	1998096	Symbol	TRUE		1998068						
ANR	1998097	Symbol	FALSE		1998068						
ANR	1998098	Function	cluster_exists	596:0:17325:17401							
ANR	1998099	FunctionDef	cluster_exists (int cluster)		1998098	0					
ANR	1998100	CompoundStatement		598:0:17363:17401	1998098	0					
ANR	1998101	ReturnStatement	"return proc_exists ( cluster , - 1 ) ;"	599:1:17366:17399	1998098	0	True				
ANR	1998102	CallExpression	"proc_exists ( cluster , - 1 )"		1998098	0					
ANR	1998103	Callee	proc_exists		1998098	0					
ANR	1998104	Identifier	proc_exists		1998098	0					
ANR	1998105	ArgumentList	cluster		1998098	1					
ANR	1998106	Argument	cluster		1998098	0					
ANR	1998107	Identifier	cluster		1998098	0					
ANR	1998108	Argument	- 1		1998098	1					
ANR	1998109	UnaryOperationExpression	- 1		1998098	0					
ANR	1998110	UnaryOperator	-		1998098	0					
ANR	1998111	PrimaryExpression	1		1998098	1					
ANR	1998112	ReturnType	BOOLEAN		1998098	1					
ANR	1998113	Identifier	cluster_exists		1998098	2					
ANR	1998114	ParameterList	int cluster		1998098	3					
ANR	1998115	Parameter	int cluster	597:16:17349:17359	1998098	0	True				
ANR	1998116	ParameterType	int		1998098	0					
ANR	1998117	Identifier	cluster		1998098	1					
ANR	1998118	CFGEntryNode	ENTRY		1998098		True				
ANR	1998119	CFGExitNode	EXIT		1998098		True				
ANR	1998120	Symbol	cluster		1998098						
ANR	1998121	Symbol	proc_exists		1998098						
ANR	1998122	Function	proc_exists	606:0:17494:17653							
ANR	1998123	FunctionDef	"proc_exists (int cluster , int proc)"		1998122	0					
ANR	1998124	CompoundStatement		608:0:17539:17653	1998122	0					
ANR	1998125	IdentifierDeclStatement	ClassAd * ad ;	609:1:17542:17553	1998122	0	True				
ANR	1998126	IdentifierDecl	* ad		1998122	0					
ANR	1998127	IdentifierDeclType	ClassAd *		1998122	0					
ANR	1998128	Identifier	ad		1998122	1					
ANR	1998129	IfStatement	"if ( ( ad = GetJobAd ( cluster , proc ) ) != NULL )"		1998122	1					
ANR	1998130	Condition	"( ad = GetJobAd ( cluster , proc ) ) != NULL"	611:5:17561:17597	1998122	0	True				
ANR	1998131	EqualityExpression	"( ad = GetJobAd ( cluster , proc ) ) != NULL"		1998122	0		!=			
ANR	1998132	AssignmentExpression	"ad = GetJobAd ( cluster , proc )"		1998122	0		=			
ANR	1998133	Identifier	ad		1998122	0					
ANR	1998134	CallExpression	"GetJobAd ( cluster , proc )"		1998122	1					
ANR	1998135	Callee	GetJobAd		1998122	0					
ANR	1998136	Identifier	GetJobAd		1998122	0					
ANR	1998137	ArgumentList	cluster		1998122	1					
ANR	1998138	Argument	cluster		1998122	0					
ANR	1998139	Identifier	cluster		1998122	0					
ANR	1998140	Argument	proc		1998122	1					
ANR	1998141	Identifier	proc		1998122	0					
ANR	1998142	Identifier	NULL		1998122	1					
ANR	1998143	CompoundStatement		4:44:60:60	1998122	1					
ANR	1998144	ExpressionStatement	FreeJobAd ( ad )	612:2:17604:17617	1998122	0	True				
ANR	1998145	CallExpression	FreeJobAd ( ad )		1998122	0					
ANR	1998146	Callee	FreeJobAd		1998122	0					
ANR	1998147	Identifier	FreeJobAd		1998122	0					
ANR	1998148	ArgumentList	ad		1998122	1					
ANR	1998149	Argument	ad		1998122	0					
ANR	1998150	Identifier	ad		1998122	0					
ANR	1998151	ReturnStatement	return TRUE ;	613:2:17621:17632	1998122	1	True				
ANR	1998152	Identifier	TRUE		1998122	0					
ANR	1998153	ReturnStatement	return FALSE ;	616:1:17639:17651	1998122	2	True				
ANR	1998154	Identifier	FALSE		1998122	0					
ANR	1998155	ReturnType	BOOLEAN		1998122	1					
ANR	1998156	Identifier	proc_exists		1998122	2					
ANR	1998157	ParameterList	"int cluster , int proc"		1998122	3					
ANR	1998158	Parameter	int cluster	607:13:17515:17525	1998122	0	True				
ANR	1998159	ParameterType	int		1998122	0					
ANR	1998160	Identifier	cluster		1998122	1					
ANR	1998161	Parameter	int proc	607:26:17528:17535	1998122	1	True				
ANR	1998162	ParameterType	int		1998122	0					
ANR	1998163	Identifier	proc		1998122	1					
ANR	1998164	CFGEntryNode	ENTRY		1998122		True				
ANR	1998165	CFGExitNode	EXIT		1998122		True				
ANR	1998166	Symbol	cluster		1998122						
ANR	1998167	Symbol	proc		1998122						
ANR	1998168	Symbol	ad		1998122						
ANR	1998169	Symbol	NULL		1998122						
ANR	1998170	Symbol	TRUE		1998122						
ANR	1998171	Symbol	FALSE		1998122						
ANR	1998172	Symbol	GetJobAd		1998122						
ANR	1998173	Function	check_execute_dir	622:0:17717:19165							
ANR	1998174	FunctionDef	check_execute_dir ()		1998173	0					
ANR	1998175	CompoundStatement		624:0:17742:19165	1998173	0					
ANR	1998176	IdentifierDeclStatement	time_t now = time ( NULL ) ;	625:1:17745:17768	1998173	0	True				
ANR	1998177	IdentifierDecl	now = time ( NULL )		1998173	0					
ANR	1998178	IdentifierDeclType	time_t		1998173	0					
ANR	1998179	Identifier	now		1998173	1					
ANR	1998180	AssignmentExpression	now = time ( NULL )		1998173	2		=			
ANR	1998181	Identifier	now		1998173	0					
ANR	1998182	CallExpression	time ( NULL )		1998173	1					
ANR	1998183	Callee	time		1998173	0					
ANR	1998184	Identifier	time		1998173	0					
ANR	1998185	ArgumentList	NULL		1998173	1					
ANR	1998186	Argument	NULL		1998173	0					
ANR	1998187	Identifier	NULL		1998173	0					
ANR	1998188	IdentifierDeclStatement	const char * f ;	626:1:17771:17784	1998173	1	True				
ANR	1998189	IdentifierDecl	* f		1998173	0					
ANR	1998190	IdentifierDeclType	const char *		1998173	0					
ANR	1998191	Identifier	f		1998173	1					
ANR	1998192	IdentifierDeclStatement	bool busy ;	627:1:17787:17796	1998173	2	True				
ANR	1998193	IdentifierDecl	busy		1998173	0					
ANR	1998194	IdentifierDeclType	bool		1998173	0					
ANR	1998195	Identifier	busy		1998173	1					
ANR	1998196	IdentifierDeclStatement	State s = get_machine_state ( ) ;	628:1:17799:17828	1998173	3	True				
ANR	1998197	IdentifierDecl	s = get_machine_state ( )		1998173	0					
ANR	1998198	IdentifierDeclType	State		1998173	0					
ANR	1998199	Identifier	s		1998173	1					
ANR	1998200	AssignmentExpression	s = get_machine_state ( )		1998173	2		=			
ANR	1998201	Identifier	s		1998173	0					
ANR	1998202	CallExpression	get_machine_state ( )		1998173	1					
ANR	1998203	Callee	get_machine_state		1998173	0					
ANR	1998204	Identifier	get_machine_state		1998173	0					
ANR	1998205	ArgumentList			1998173	1					
ANR	1998206	SwitchStatement	switch ( s )		1998173	4					
ANR	1998207	Condition	s	635:9:18115:18115	1998173	0	True				
ANR	1998208	Identifier	s		1998173	0					
ANR	1998209	CompoundStatement		12:13:376:376	1998173	1					
ANR	1998210	Label	case owner_state :	636:1:18122:18138	1998173	0	True				
ANR	1998211	Identifier	owner_state		1998173	0					
ANR	1998212	Label	case unclaimed_state :	637:1:18142:18162	1998173	1	True				
ANR	1998213	Identifier	unclaimed_state		1998173	0					
ANR	1998214	Label	case matched_state :	638:1:18165:18183	1998173	2	True				
ANR	1998215	Identifier	matched_state		1998173	0					
ANR	1998216	ExpressionStatement	busy = false	639:2:18188:18200	1998173	3	True				
ANR	1998217	AssignmentExpression	busy = false		1998173	0		=			
ANR	1998218	Identifier	busy		1998173	0					
ANR	1998219	Identifier	false		1998173	1					
ANR	1998220	BreakStatement	break ;	640:2:18204:18209	1998173	4	True				
ANR	1998221	Label	case claimed_state :	641:1:18212:18230	1998173	5	True				
ANR	1998222	Identifier	claimed_state		1998173	0					
ANR	1998223	Label	case preempting_state :	642:1:18233:18254	1998173	6	True				
ANR	1998224	Identifier	preempting_state		1998173	0					
ANR	1998225	ExpressionStatement	busy = true	643:2:18258:18269	1998173	7	True				
ANR	1998226	AssignmentExpression	busy = true		1998173	0		=			
ANR	1998227	Identifier	busy		1998173	0					
ANR	1998228	Identifier	true		1998173	1					
ANR	1998229	BreakStatement	break ;	644:2:18273:18278	1998173	8	True				
ANR	1998230	Label	default :	645:1:18281:18288	1998173	9	True				
ANR	1998231	Identifier	default		1998173	0					
ANR	1998232	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error getting startd state, not cleaning execute directory.\\n"" )"	646:2:18292:18382	1998173	10	True				
ANR	1998233	CallExpression	"dprintf ( D_ALWAYS , ""Error getting startd state, not cleaning execute directory.\\n"" )"		1998173	0					
ANR	1998234	Callee	dprintf		1998173	0					
ANR	1998235	Identifier	dprintf		1998173	0					
ANR	1998236	ArgumentList	D_ALWAYS		1998173	1					
ANR	1998237	Argument	D_ALWAYS		1998173	0					
ANR	1998238	Identifier	D_ALWAYS		1998173	0					
ANR	1998239	Argument	"""Error getting startd state, not cleaning execute directory.\\n"""		1998173	1					
ANR	1998240	PrimaryExpression	"""Error getting startd state, not cleaning execute directory.\\n"""		1998173	0					
ANR	1998241	ReturnStatement	return ;	648:2:18386:18392	1998173	11	True				
ANR	1998242	ExpressionStatement	ExecuteDirs . rewind ( )	651:1:18399:18419	1998173	5	True				
ANR	1998243	CallExpression	ExecuteDirs . rewind ( )		1998173	0					
ANR	1998244	Callee	ExecuteDirs . rewind		1998173	0					
ANR	1998245	MemberAccess	ExecuteDirs . rewind		1998173	0					
ANR	1998246	Identifier	ExecuteDirs		1998173	0					
ANR	1998247	Identifier	rewind		1998173	1					
ANR	1998248	ArgumentList			1998173	1					
ANR	1998249	IdentifierDeclStatement	char const * Execute ;	652:1:18422:18441	1998173	6	True				
ANR	1998250	IdentifierDecl	* Execute		1998173	0					
ANR	1998251	IdentifierDeclType	char const *		1998173	0					
ANR	1998252	Identifier	Execute		1998173	1					
ANR	1998253	WhileStatement	while ( ( Execute = ExecuteDirs . next ( ) ) )		1998173	7					
ANR	1998254	Condition	Execute = ExecuteDirs . next ( )	653:8:18451:18478	1998173	0	True				
ANR	1998255	AssignmentExpression	Execute = ExecuteDirs . next ( )		1998173	0		=			
ANR	1998256	Identifier	Execute		1998173	0					
ANR	1998257	CallExpression	ExecuteDirs . next ( )		1998173	1					
ANR	1998258	Callee	ExecuteDirs . next		1998173	0					
ANR	1998259	MemberAccess	ExecuteDirs . next		1998173	0					
ANR	1998260	Identifier	ExecuteDirs		1998173	0					
ANR	1998261	Identifier	next		1998173	1					
ANR	1998262	ArgumentList			1998173	1					
ANR	1998263	CompoundStatement		31:2:743:778	1998173	1					
ANR	1998264	IdentifierDeclStatement	"Directory dir ( Execute , PRIV_ROOT ) ;"	654:2:18486:18521	1998173	0	True				
ANR	1998265	IdentifierDecl	"dir ( Execute , PRIV_ROOT )"		1998173	0					
ANR	1998266	IdentifierDeclType	Directory		1998173	0					
ANR	1998267	Identifier	dir		1998173	1					
ANR	1998268	Expression	"Execute , PRIV_ROOT"		1998173	2					
ANR	1998269	Identifier	Execute		1998173	0					
ANR	1998270	Identifier	PRIV_ROOT		1998173	1					
ANR	1998271	WhileStatement	while ( ( f = dir . Next ( ) ) )		1998173	1					
ANR	1998272	Condition	f = dir . Next ( )	655:9:18532:18547	1998173	0	True				
ANR	1998273	AssignmentExpression	f = dir . Next ( )		1998173	0		=			
ANR	1998274	Identifier	f		1998173	0					
ANR	1998275	CallExpression	dir . Next ( )		1998173	1					
ANR	1998276	Callee	dir . Next		1998173	0					
ANR	1998277	MemberAccess	dir . Next		1998173	0					
ANR	1998278	Identifier	dir		1998173	0					
ANR	1998279	Identifier	Next		1998173	1					
ANR	1998280	ArgumentList			1998173	1					
ANR	1998281	CompoundStatement		32:28:808:808	1998173	1					
ANR	1998282	IfStatement	if ( busy )		1998173	0					
ANR	1998283	Condition	busy	656:7:18560:18563	1998173	0	True				
ANR	1998284	Identifier	busy		1998173	0					
ANR	1998285	CompoundStatement		33:14:824:824	1998173	1					
ANR	1998286	ExpressionStatement	"good_file ( Execute , f )"	657:4:18573:18596	1998173	0	True				
ANR	1998287	CallExpression	"good_file ( Execute , f )"		1998173	0					
ANR	1998288	Callee	good_file		1998173	0					
ANR	1998289	Identifier	good_file		1998173	0					
ANR	1998290	ArgumentList	Execute		1998173	1					
ANR	1998291	Argument	Execute		1998173	0					
ANR	1998292	Identifier	Execute		1998173	0					
ANR	1998293	Argument	f		1998173	1					
ANR	1998294	Identifier	f		1998173	0					
ANR	1998295	ElseStatement	else		1998173	0					
ANR	1998296	CompoundStatement		35:10:889:889	1998173	0					
ANR	1998297	IfStatement	if ( dir . GetCreateTime ( ) < now )		1998173	0					
ANR	1998298	Condition	dir . GetCreateTime ( ) < now	659:8:18642:18666	1998173	0	True				
ANR	1998299	RelationalExpression	dir . GetCreateTime ( ) < now		1998173	0		<			
ANR	1998300	CallExpression	dir . GetCreateTime ( )		1998173	0					
ANR	1998301	Callee	dir . GetCreateTime		1998173	0					
ANR	1998302	MemberAccess	dir . GetCreateTime		1998173	0					
ANR	1998303	Identifier	dir		1998173	0					
ANR	1998304	Identifier	GetCreateTime		1998173	1					
ANR	1998305	ArgumentList			1998173	1					
ANR	1998306	Identifier	now		1998173	1					
ANR	1998307	CompoundStatement		36:36:927:927	1998173	1					
ANR	1998308	ExpressionStatement	"bad_file ( Execute , f , dir )"	660:5:18677:18704	1998173	0	True				
ANR	1998309	CallExpression	"bad_file ( Execute , f , dir )"		1998173	0					
ANR	1998310	Callee	bad_file		1998173	0					
ANR	1998311	Identifier	bad_file		1998173	0					
ANR	1998312	ArgumentList	Execute		1998173	1					
ANR	1998313	Argument	Execute		1998173	0					
ANR	1998314	Identifier	Execute		1998173	0					
ANR	1998315	Argument	f		1998173	1					
ANR	1998316	Identifier	f		1998173	0					
ANR	1998317	Argument	dir		1998173	2					
ANR	1998318	Identifier	dir		1998173	0					
ANR	1998319	ElseStatement	else		1998173	0					
ANR	1998320	CompoundStatement		39:9:989:989	1998173	0					
ANR	1998321	Statement	dprintf	668:5:18982:18988	1998173	0	True				
ANR	1998322	Statement	(	668:12:18989:18989	1998173	1	True				
ANR	1998323	Statement	D_FULLDEBUG	668:13:18990:19000	1998173	2	True				
ANR	1998324	Statement	","	668:24:19001:19001	1998173	3	True				
ANR	1998325	Statement	"""In %s, found %s with recent """	668:26:19003:19032	1998173	4	True				
ANR	1998326	Statement	"""creation time.  Not removing.\\n"""	669:13:19047:19079	1998173	5	True				
ANR	1998327	Statement	","	669:46:19080:19080	1998173	6	True				
ANR	1998328	Statement	Execute	669:48:19082:19088	1998173	7	True				
ANR	1998329	Statement	","	669:55:19089:19089	1998173	8	True				
ANR	1998330	Statement	f	669:57:19091:19091	1998173	9	True				
ANR	1998331	Statement	)	669:59:19093:19093	1998173	10	True				
ANR	1998332	ExpressionStatement		669:60:19094:19094	1998173	11	True				
ANR	1998333	ExpressionStatement	"good_file ( Execute , f )"	670:5:19101:19124	1998173	12	True				
ANR	1998334	CallExpression	"good_file ( Execute , f )"		1998173	0					
ANR	1998335	Callee	good_file		1998173	0					
ANR	1998336	Identifier	good_file		1998173	0					
ANR	1998337	ArgumentList	Execute		1998173	1					
ANR	1998338	Argument	Execute		1998173	0					
ANR	1998339	Identifier	Execute		1998173	0					
ANR	1998340	Argument	f		1998173	1					
ANR	1998341	Identifier	f		1998173	0					
ANR	1998342	ReturnType	void		1998173	1					
ANR	1998343	Identifier	check_execute_dir		1998173	2					
ANR	1998344	ParameterList			1998173	3					
ANR	1998345	CFGEntryNode	ENTRY		1998173		True				
ANR	1998346	CFGExitNode	EXIT		1998173		True				
ANR	1998347	Symbol	NULL		1998173						
ANR	1998348	Symbol	Execute		1998173						
ANR	1998349	Symbol	f		1998173						
ANR	1998350	Symbol	false		1998173						
ANR	1998351	Symbol	D_ALWAYS		1998173						
ANR	1998352	Symbol	dir		1998173						
ANR	1998353	Symbol	ExecuteDirs . next		1998173						
ANR	1998354	Symbol	dir . Next		1998173						
ANR	1998355	Symbol	s		1998173						
ANR	1998356	Symbol	now		1998173						
ANR	1998357	Symbol	busy		1998173						
ANR	1998358	Symbol	true		1998173						
ANR	1998359	Symbol	time		1998173						
ANR	1998360	Symbol	ExecuteDirs		1998173						
ANR	1998361	Symbol	dir . GetCreateTime		1998173						
ANR	1998362	Symbol	get_machine_state		1998173						
ANR	1998363	Function	check_log_dir	681:0:19280:19575							
ANR	1998364	FunctionDef	check_log_dir ()		1998363	0					
ANR	1998365	CompoundStatement		683:0:19301:19575	1998363	0					
ANR	1998366	IdentifierDeclStatement	const char * f ;	684:1:19304:19317	1998363	0	True				
ANR	1998367	IdentifierDecl	* f		1998363	0					
ANR	1998368	IdentifierDeclType	const char *		1998363	0					
ANR	1998369	Identifier	f		1998363	1					
ANR	1998370	IdentifierDeclStatement	"Directory dir ( Log , PRIV_ROOT ) ;"	685:1:19320:19349	1998363	1	True				
ANR	1998371	IdentifierDecl	"dir ( Log , PRIV_ROOT )"		1998363	0					
ANR	1998372	IdentifierDeclType	Directory		1998363	0					
ANR	1998373	Identifier	dir		1998363	1					
ANR	1998374	Expression	"Log , PRIV_ROOT"		1998363	2					
ANR	1998375	Identifier	Log		1998363	0					
ANR	1998376	Identifier	PRIV_ROOT		1998363	1					
ANR	1998377	IdentifierDeclStatement	StringList invalid ;	686:1:19352:19370	1998363	2	True				
ANR	1998378	IdentifierDecl	invalid		1998363	0					
ANR	1998379	IdentifierDeclType	StringList		1998363	0					
ANR	1998380	Identifier	invalid		1998363	1					
ANR	1998381	ExpressionStatement	"invalid . initializeFromString ( InvalidLogFiles ? InvalidLogFiles : """" )"	688:1:19374:19443	1998363	3	True				
ANR	1998382	CallExpression	"invalid . initializeFromString ( InvalidLogFiles ? InvalidLogFiles : """" )"		1998363	0					
ANR	1998383	Callee	invalid . initializeFromString		1998363	0					
ANR	1998384	MemberAccess	invalid . initializeFromString		1998363	0					
ANR	1998385	Identifier	invalid		1998363	0					
ANR	1998386	Identifier	initializeFromString		1998363	1					
ANR	1998387	ArgumentList	"InvalidLogFiles ? InvalidLogFiles : """""		1998363	1					
ANR	1998388	Argument	"InvalidLogFiles ? InvalidLogFiles : """""		1998363	0					
ANR	1998389	ConditionalExpression	"InvalidLogFiles ? InvalidLogFiles : """""		1998363	0					
ANR	1998390	Condition	InvalidLogFiles		1998363	0					
ANR	1998391	Identifier	InvalidLogFiles		1998363	0					
ANR	1998392	Identifier	InvalidLogFiles		1998363	1					
ANR	1998393	PrimaryExpression	""""""		1998363	2					
ANR	1998394	WhileStatement	while ( ( f = dir . Next ( ) ) )		1998363	4					
ANR	1998395	Condition	f = dir . Next ( )	690:8:19454:19469	1998363	0	True				
ANR	1998396	AssignmentExpression	f = dir . Next ( )		1998363	0		=			
ANR	1998397	Identifier	f		1998363	0					
ANR	1998398	CallExpression	dir . Next ( )		1998363	1					
ANR	1998399	Callee	dir . Next		1998363	0					
ANR	1998400	MemberAccess	dir . Next		1998363	0					
ANR	1998401	Identifier	dir		1998363	0					
ANR	1998402	Identifier	Next		1998363	1					
ANR	1998403	ArgumentList			1998363	1					
ANR	1998404	CompoundStatement		8:27:171:171	1998363	1					
ANR	1998405	IfStatement	if ( invalid . contains ( f ) )		1998363	0					
ANR	1998406	Condition	invalid . contains ( f )	691:6:19481:19499	1998363	0	True				
ANR	1998407	CallExpression	invalid . contains ( f )		1998363	0					
ANR	1998408	Callee	invalid . contains		1998363	0					
ANR	1998409	MemberAccess	invalid . contains		1998363	0					
ANR	1998410	Identifier	invalid		1998363	0					
ANR	1998411	Identifier	contains		1998363	1					
ANR	1998412	ArgumentList	f		1998363	1					
ANR	1998413	Argument	f		1998363	0					
ANR	1998414	Identifier	f		1998363	0					
ANR	1998415	CompoundStatement		9:28:201:201	1998363	1					
ANR	1998416	ExpressionStatement	"bad_file ( Log , f , dir )"	692:3:19508:19531	1998363	0	True				
ANR	1998417	CallExpression	"bad_file ( Log , f , dir )"		1998363	0					
ANR	1998418	Callee	bad_file		1998363	0					
ANR	1998419	Identifier	bad_file		1998363	0					
ANR	1998420	ArgumentList	Log		1998363	1					
ANR	1998421	Argument	Log		1998363	0					
ANR	1998422	Identifier	Log		1998363	0					
ANR	1998423	Argument	f		1998363	1					
ANR	1998424	Identifier	f		1998363	0					
ANR	1998425	Argument	dir		1998363	2					
ANR	1998426	Identifier	dir		1998363	0					
ANR	1998427	ElseStatement	else		1998363	0					
ANR	1998428	CompoundStatement		11:9:240:240	1998363	0					
ANR	1998429	ExpressionStatement	"good_file ( Log , f )"	694:3:19547:19566	1998363	0	True				
ANR	1998430	CallExpression	"good_file ( Log , f )"		1998363	0					
ANR	1998431	Callee	good_file		1998363	0					
ANR	1998432	Identifier	good_file		1998363	0					
ANR	1998433	ArgumentList	Log		1998363	1					
ANR	1998434	Argument	Log		1998363	0					
ANR	1998435	Identifier	Log		1998363	0					
ANR	1998436	Argument	f		1998363	1					
ANR	1998437	Identifier	f		1998363	0					
ANR	1998438	ReturnType	void		1998363	1					
ANR	1998439	Identifier	check_log_dir		1998363	2					
ANR	1998440	ParameterList			1998363	3					
ANR	1998441	CFGEntryNode	ENTRY		1998363		True				
ANR	1998442	CFGExitNode	EXIT		1998363		True				
ANR	1998443	Symbol	invalid . contains		1998363						
ANR	1998444	Symbol	Log		1998363						
ANR	1998445	Symbol	f		1998363						
ANR	1998446	Symbol	invalid		1998363						
ANR	1998447	Symbol	dir		1998363						
ANR	1998448	Symbol	dir . Next		1998363						
ANR	1998449	Symbol	InvalidLogFiles		1998363						
ANR	1998450	Function	check_daemon_sock_dir	699:0:19578:20082							
ANR	1998451	FunctionDef	check_daemon_sock_dir ()		1998450	0					
ANR	1998452	CompoundStatement		701:0:19607:20082	1998450	0					
ANR	1998453	IdentifierDeclStatement	const char * f ;	702:1:19610:19623	1998450	0	True				
ANR	1998454	IdentifierDecl	* f		1998450	0					
ANR	1998455	IdentifierDeclType	const char *		1998450	0					
ANR	1998456	Identifier	f		1998450	1					
ANR	1998457	IdentifierDeclStatement	"Directory dir ( DaemonSockDir , PRIV_ROOT ) ;"	703:1:19626:19665	1998450	1	True				
ANR	1998458	IdentifierDecl	"dir ( DaemonSockDir , PRIV_ROOT )"		1998450	0					
ANR	1998459	IdentifierDeclType	Directory		1998450	0					
ANR	1998460	Identifier	dir		1998450	1					
ANR	1998461	Expression	"DaemonSockDir , PRIV_ROOT"		1998450	2					
ANR	1998462	Identifier	DaemonSockDir		1998450	0					
ANR	1998463	Identifier	PRIV_ROOT		1998450	1					
ANR	1998464	IdentifierDeclStatement	time_t stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100 ;	705:1:19669:19733	1998450	2	True				
ANR	1998465	IdentifierDecl	stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100		1998450	0					
ANR	1998466	IdentifierDeclType	time_t		1998450	0					
ANR	1998467	Identifier	stale_age		1998450	1					
ANR	1998468	AssignmentExpression	stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100		1998450	2		=			
ANR	1998469	Identifier	stale_age		1998450	0					
ANR	1998470	MultiplicativeExpression	SharedPortEndpoint :: TouchSocketInterval ( ) * 100		1998450	1		*			
ANR	1998471	CallExpression	SharedPortEndpoint :: TouchSocketInterval ( )		1998450	0					
ANR	1998472	Callee	SharedPortEndpoint :: TouchSocketInterval		1998450	0					
ANR	1998473	Identifier	SharedPortEndpoint :: TouchSocketInterval		1998450	0					
ANR	1998474	ArgumentList			1998450	1					
ANR	1998475	PrimaryExpression	100		1998450	1					
ANR	1998476	WhileStatement	while ( ( f = dir . Next ( ) ) )		1998450	3					
ANR	1998477	Condition	f = dir . Next ( )	707:8:19744:19759	1998450	0	True				
ANR	1998478	AssignmentExpression	f = dir . Next ( )		1998450	0		=			
ANR	1998479	Identifier	f		1998450	0					
ANR	1998480	CallExpression	dir . Next ( )		1998450	1					
ANR	1998481	Callee	dir . Next		1998450	0					
ANR	1998482	MemberAccess	dir . Next		1998450	0					
ANR	1998483	Identifier	dir		1998450	0					
ANR	1998484	Identifier	Next		1998450	1					
ANR	1998485	ArgumentList			1998450	1					
ANR	1998486	CompoundStatement		8:2:159:177	1998450	1					
ANR	1998487	IdentifierDeclStatement	MyString full_path ;	708:2:19767:19785	1998450	0	True				
ANR	1998488	IdentifierDecl	full_path		1998450	0					
ANR	1998489	IdentifierDeclType	MyString		1998450	0					
ANR	1998490	Identifier	full_path		1998450	1					
ANR	1998491	ExpressionStatement	"full_path . sprintf ( ""%s%c%s"" , DaemonSockDir , DIR_DELIM_CHAR , f )"	709:2:19789:19847	1998450	1	True				
ANR	1998492	CallExpression	"full_path . sprintf ( ""%s%c%s"" , DaemonSockDir , DIR_DELIM_CHAR , f )"		1998450	0					
ANR	1998493	Callee	full_path . sprintf		1998450	0					
ANR	1998494	MemberAccess	full_path . sprintf		1998450	0					
ANR	1998495	Identifier	full_path		1998450	0					
ANR	1998496	Identifier	sprintf		1998450	1					
ANR	1998497	ArgumentList	"""%s%c%s"""		1998450	1					
ANR	1998498	Argument	"""%s%c%s"""		1998450	0					
ANR	1998499	PrimaryExpression	"""%s%c%s"""		1998450	0					
ANR	1998500	Argument	DaemonSockDir		1998450	1					
ANR	1998501	Identifier	DaemonSockDir		1998450	0					
ANR	1998502	Argument	DIR_DELIM_CHAR		1998450	2					
ANR	1998503	Identifier	DIR_DELIM_CHAR		1998450	0					
ANR	1998504	Argument	f		1998450	3					
ANR	1998505	Identifier	f		1998450	0					
ANR	1998506	IfStatement	"if ( touched_recently ( full_path . Value ( ) , stale_age ) )"		1998450	2					
ANR	1998507	Condition	"touched_recently ( full_path . Value ( ) , stale_age )"	713:6:19937:19984	1998450	0	True				
ANR	1998508	CallExpression	"touched_recently ( full_path . Value ( ) , stale_age )"		1998450	0					
ANR	1998509	Callee	touched_recently		1998450	0					
ANR	1998510	Identifier	touched_recently		1998450	0					
ANR	1998511	ArgumentList	full_path . Value ( )		1998450	1					
ANR	1998512	Argument	full_path . Value ( )		1998450	0					
ANR	1998513	CallExpression	full_path . Value ( )		1998450	0					
ANR	1998514	Callee	full_path . Value		1998450	0					
ANR	1998515	MemberAccess	full_path . Value		1998450	0					
ANR	1998516	Identifier	full_path		1998450	0					
ANR	1998517	Identifier	Value		1998450	1					
ANR	1998518	ArgumentList			1998450	1					
ANR	1998519	Argument	stale_age		1998450	1					
ANR	1998520	Identifier	stale_age		1998450	0					
ANR	1998521	CompoundStatement		13:57:380:380	1998450	1					
ANR	1998522	ExpressionStatement	"good_file ( DaemonSockDir , f )"	714:3:19993:20022	1998450	0	True				
ANR	1998523	CallExpression	"good_file ( DaemonSockDir , f )"		1998450	0					
ANR	1998524	Callee	good_file		1998450	0					
ANR	1998525	Identifier	good_file		1998450	0					
ANR	1998526	ArgumentList	DaemonSockDir		1998450	1					
ANR	1998527	Argument	DaemonSockDir		1998450	0					
ANR	1998528	Identifier	DaemonSockDir		1998450	0					
ANR	1998529	Argument	f		1998450	1					
ANR	1998530	Identifier	f		1998450	0					
ANR	1998531	ElseStatement	else		1998450	0					
ANR	1998532	CompoundStatement		16:7:427:427	1998450	0					
ANR	1998533	ExpressionStatement	"bad_file ( DaemonSockDir , f , dir )"	717:3:20040:20073	1998450	0	True				
ANR	1998534	CallExpression	"bad_file ( DaemonSockDir , f , dir )"		1998450	0					
ANR	1998535	Callee	bad_file		1998450	0					
ANR	1998536	Identifier	bad_file		1998450	0					
ANR	1998537	ArgumentList	DaemonSockDir		1998450	1					
ANR	1998538	Argument	DaemonSockDir		1998450	0					
ANR	1998539	Identifier	DaemonSockDir		1998450	0					
ANR	1998540	Argument	f		1998450	1					
ANR	1998541	Identifier	f		1998450	0					
ANR	1998542	Argument	dir		1998450	2					
ANR	1998543	Identifier	dir		1998450	0					
ANR	1998544	ReturnType	void		1998450	1					
ANR	1998545	Identifier	check_daemon_sock_dir		1998450	2					
ANR	1998546	ParameterList			1998450	3					
ANR	1998547	CFGEntryNode	ENTRY		1998450		True				
ANR	1998548	CFGExitNode	EXIT		1998450		True				
ANR	1998549	Symbol	stale_age		1998450						
ANR	1998550	Symbol	full_path . Value		1998450						
ANR	1998551	Symbol	touched_recently		1998450						
ANR	1998552	Symbol	f		1998450						
ANR	1998553	Symbol	DIR_DELIM_CHAR		1998450						
ANR	1998554	Symbol	DaemonSockDir		1998450						
ANR	1998555	Symbol	dir		1998450						
ANR	1998556	Symbol	full_path		1998450						
ANR	1998557	Symbol	SharedPortEndpoint :: TouchSocketInterval		1998450						
ANR	1998558	Symbol	dir . Next		1998450						
ANR	1998559	Function	rec_lock_cleanup	722:0:20085:21214							
ANR	1998560	FunctionDef	"rec_lock_cleanup (const char * path , int depth , bool remove_self)"		1998559	0					
ANR	1998561	CompoundStatement		722:69:20154:21214	1998559	0					
ANR	1998562	IdentifierDeclStatement	FileLock * lock = NULL ;	724:1:20177:20198	1998559	0	True				
ANR	1998563	IdentifierDecl	* lock = NULL		1998559	0					
ANR	1998564	IdentifierDeclType	FileLock *		1998559	0					
ANR	1998565	Identifier	lock		1998559	1					
ANR	1998566	AssignmentExpression	* lock = NULL		1998559	2		=			
ANR	1998567	Identifier	NULL		1998559	0					
ANR	1998568	Identifier	NULL		1998559	1					
ANR	1998569	IfStatement	if ( depth == 0 )		1998559	1					
ANR	1998570	Condition	depth == 0	725:5:20205:20214	1998559	0	True				
ANR	1998571	EqualityExpression	depth == 0		1998559	0		==			
ANR	1998572	Identifier	depth		1998559	0					
ANR	1998573	PrimaryExpression	0		1998559	1					
ANR	1998574	CompoundStatement		4:17:62:62	1998559	1					
ANR	1998575	ExpressionStatement	"lock = new FileLock ( path , true , true )"	726:2:20221:20258	1998559	0	True				
ANR	1998576	AssignmentExpression	"lock = new FileLock ( path , true , true )"		1998559	0		=			
ANR	1998577	Identifier	lock		1998559	0					
ANR	1998578	Expression	"path , true , true"		1998559	1					
ANR	1998579	Identifier	path		1998559	0					
ANR	1998580	Expression	"true , true"		1998559	1					
ANR	1998581	Identifier	true		1998559	0					
ANR	1998582	Identifier	true		1998559	1					
ANR	1998583	Statement	delete	727:2:20262:20267	1998559	1	True				
ANR	1998584	ExpressionStatement	lock	727:9:20269:20273	1998559	2	True				
ANR	1998585	Identifier	lock		1998559	0					
ANR	1998586	ReturnStatement	return ;	728:2:20277:20284	1998559	3	True				
ANR	1998587	IdentifierDeclStatement	Directory * dir = new Directory ( path ) ;	730:1:20290:20326	1998559	2	True				
ANR	1998588	IdentifierDecl	* dir = new Directory ( path )		1998559	0					
ANR	1998589	IdentifierDeclType	Directory *		1998559	0					
ANR	1998590	Identifier	dir		1998559	1					
ANR	1998591	AssignmentExpression	* dir = new Directory ( path )		1998559	2		=			
ANR	1998592	Identifier	path		1998559	0					
ANR	1998593	Identifier	path		1998559	1					
ANR	1998594	IfStatement	if ( dir == NULL )		1998559	3					
ANR	1998595	Condition	dir == NULL	731:5:20333:20343	1998559	0	True				
ANR	1998596	EqualityExpression	dir == NULL		1998559	0		==			
ANR	1998597	Identifier	dir		1998559	0					
ANR	1998598	Identifier	NULL		1998559	1					
ANR	1998599	CompoundStatement		10:18:191:191	1998559	1					
ANR	1998600	ReturnStatement	return ;	733:2:20411:20417	1998559	0	True				
ANR	1998601	IdentifierDeclStatement	const char * entry ;	735:1:20423:20440	1998559	4	True				
ANR	1998602	IdentifierDecl	* entry		1998559	0					
ANR	1998603	IdentifierDeclType	const char *		1998559	0					
ANR	1998604	Identifier	entry		1998559	1					
ANR	1998605	WhileStatement	while ( ( entry = dir -> Next ( ) ) != 0 )		1998559	5					
ANR	1998606	Condition	( entry = dir -> Next ( ) ) != 0	736:8:20450:20475	1998559	0	True				
ANR	1998607	EqualityExpression	( entry = dir -> Next ( ) ) != 0		1998559	0		!=			
ANR	1998608	AssignmentExpression	entry = dir -> Next ( )		1998559	0		=			
ANR	1998609	Identifier	entry		1998559	0					
ANR	1998610	CallExpression	dir -> Next ( )		1998559	1					
ANR	1998611	Callee	dir -> Next		1998559	0					
ANR	1998612	PtrMemberAccess	dir -> Next		1998559	0					
ANR	1998613	Identifier	dir		1998559	0					
ANR	1998614	Identifier	Next		1998559	1					
ANR	1998615	ArgumentList			1998559	1					
ANR	1998616	PrimaryExpression	0		1998559	1					
ANR	1998617	CompoundStatement		15:36:323:323	1998559	1					
ANR	1998618	IfStatement	if ( ! dir -> IsDirectory ( ) && depth > 1 )		1998559	0					
ANR	1998619	Condition	! dir -> IsDirectory ( ) && depth > 1	737:6:20486:20517	1998559	0	True				
ANR	1998620	AndExpression	! dir -> IsDirectory ( ) && depth > 1		1998559	0		&&			
ANR	1998621	UnaryOperationExpression	! dir -> IsDirectory ( )		1998559	0					
ANR	1998622	UnaryOperator	!		1998559	0					
ANR	1998623	CallExpression	dir -> IsDirectory ( )		1998559	1					
ANR	1998624	Callee	dir -> IsDirectory		1998559	0					
ANR	1998625	PtrMemberAccess	dir -> IsDirectory		1998559	0					
ANR	1998626	Identifier	dir		1998559	0					
ANR	1998627	Identifier	IsDirectory		1998559	1					
ANR	1998628	ArgumentList			1998559	1					
ANR	1998629	RelationalExpression	depth > 1		1998559	1		>			
ANR	1998630	Identifier	depth		1998559	0					
ANR	1998631	PrimaryExpression	1		1998559	1					
ANR	1998632	CompoundStatement		22:3:604:640	1998559	1					
ANR	1998633	ExpressionStatement	"lock = new FileLock ( path , false , true )"	738:3:20597:20635	1998559	0	True				
ANR	1998634	AssignmentExpression	"lock = new FileLock ( path , false , true )"		1998559	0		=			
ANR	1998635	Identifier	lock		1998559	0					
ANR	1998636	Expression	"path , false , true"		1998559	1					
ANR	1998637	Identifier	path		1998559	0					
ANR	1998638	Expression	"false , true"		1998559	1					
ANR	1998639	Identifier	false		1998559	0					
ANR	1998640	Identifier	true		1998559	1					
ANR	1998641	IdentifierDeclStatement	bool result = lock -> obtain ( WRITE_LOCK ) ;	739:3:20640:20678	1998559	1	True				
ANR	1998642	IdentifierDecl	result = lock -> obtain ( WRITE_LOCK )		1998559	0					
ANR	1998643	IdentifierDeclType	bool		1998559	0					
ANR	1998644	Identifier	result		1998559	1					
ANR	1998645	AssignmentExpression	result = lock -> obtain ( WRITE_LOCK )		1998559	2		=			
ANR	1998646	Identifier	result		1998559	0					
ANR	1998647	CallExpression	lock -> obtain ( WRITE_LOCK )		1998559	1					
ANR	1998648	Callee	lock -> obtain		1998559	0					
ANR	1998649	PtrMemberAccess	lock -> obtain		1998559	0					
ANR	1998650	Identifier	lock		1998559	0					
ANR	1998651	Identifier	obtain		1998559	1					
ANR	1998652	ArgumentList	WRITE_LOCK		1998559	1					
ANR	1998653	Argument	WRITE_LOCK		1998559	0					
ANR	1998654	Identifier	WRITE_LOCK		1998559	0					
ANR	1998655	IfStatement	if ( ! result )		1998559	2					
ANR	1998656	Condition	! result	740:7:20687:20693	1998559	0	True				
ANR	1998657	UnaryOperationExpression	! result		1998559	0					
ANR	1998658	UnaryOperator	!		1998559	0					
ANR	1998659	Identifier	result		1998559	1					
ANR	1998660	CompoundStatement		19:16:541:541	1998559	1					
ANR	1998661	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cannot lock %s\\n"" , path )"	741:5:20703:20749	1998559	0	True				
ANR	1998662	CallExpression	"dprintf ( D_FULLDEBUG , ""Cannot lock %s\\n"" , path )"		1998559	0					
ANR	1998663	Callee	dprintf		1998559	0					
ANR	1998664	Identifier	dprintf		1998559	0					
ANR	1998665	ArgumentList	D_FULLDEBUG		1998559	1					
ANR	1998666	Argument	D_FULLDEBUG		1998559	0					
ANR	1998667	Identifier	D_FULLDEBUG		1998559	0					
ANR	1998668	Argument	"""Cannot lock %s\\n"""		1998559	1					
ANR	1998669	PrimaryExpression	"""Cannot lock %s\\n"""		1998559	0					
ANR	1998670	Argument	path		1998559	2					
ANR	1998671	Identifier	path		1998559	0					
ANR	1998672	IdentifierDeclStatement	int res = unlink ( dir -> GetFullPath ( ) ) ;	743:3:20759:20795	1998559	3	True				
ANR	1998673	IdentifierDecl	res = unlink ( dir -> GetFullPath ( ) )		1998559	0					
ANR	1998674	IdentifierDeclType	int		1998559	0					
ANR	1998675	Identifier	res		1998559	1					
ANR	1998676	AssignmentExpression	res = unlink ( dir -> GetFullPath ( ) )		1998559	2		=			
ANR	1998677	Identifier	res		1998559	0					
ANR	1998678	CallExpression	unlink ( dir -> GetFullPath ( ) )		1998559	1					
ANR	1998679	Callee	unlink		1998559	0					
ANR	1998680	Identifier	unlink		1998559	0					
ANR	1998681	ArgumentList	dir -> GetFullPath ( )		1998559	1					
ANR	1998682	Argument	dir -> GetFullPath ( )		1998559	0					
ANR	1998683	CallExpression	dir -> GetFullPath ( )		1998559	0					
ANR	1998684	Callee	dir -> GetFullPath		1998559	0					
ANR	1998685	PtrMemberAccess	dir -> GetFullPath		1998559	0					
ANR	1998686	Identifier	dir		1998559	0					
ANR	1998687	Identifier	GetFullPath		1998559	1					
ANR	1998688	ArgumentList			1998559	1					
ANR	1998689	IfStatement	if ( res != 0 )		1998559	4					
ANR	1998690	Condition	res != 0	744:7:20804:20811	1998559	0	True				
ANR	1998691	EqualityExpression	res != 0		1998559	0		!=			
ANR	1998692	Identifier	res		1998559	0					
ANR	1998693	PrimaryExpression	0		1998559	1					
ANR	1998694	CompoundStatement		23:17:659:659	1998559	1					
ANR	1998695	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cannot delete %s (%s) \\n"" , path , strerror ( errno ) )"	745:4:20820:20891	1998559	0	True				
ANR	1998696	CallExpression	"dprintf ( D_FULLDEBUG , ""Cannot delete %s (%s) \\n"" , path , strerror ( errno ) )"		1998559	0					
ANR	1998697	Callee	dprintf		1998559	0					
ANR	1998698	Identifier	dprintf		1998559	0					
ANR	1998699	ArgumentList	D_FULLDEBUG		1998559	1					
ANR	1998700	Argument	D_FULLDEBUG		1998559	0					
ANR	1998701	Identifier	D_FULLDEBUG		1998559	0					
ANR	1998702	Argument	"""Cannot delete %s (%s) \\n"""		1998559	1					
ANR	1998703	PrimaryExpression	"""Cannot delete %s (%s) \\n"""		1998559	0					
ANR	1998704	Argument	path		1998559	2					
ANR	1998705	Identifier	path		1998559	0					
ANR	1998706	Argument	strerror ( errno )		1998559	3					
ANR	1998707	CallExpression	strerror ( errno )		1998559	0					
ANR	1998708	Callee	strerror		1998559	0					
ANR	1998709	Identifier	strerror		1998559	0					
ANR	1998710	ArgumentList	errno		1998559	1					
ANR	1998711	Argument	errno		1998559	0					
ANR	1998712	Identifier	errno		1998559	0					
ANR	1998713	Statement	delete	747:3:20901:20906	1998559	5	True				
ANR	1998714	ExpressionStatement	lock	747:10:20908:20912	1998559	6	True				
ANR	1998715	Identifier	lock		1998559	0					
ANR	1998716	ElseStatement	else		1998559	0					
ANR	1998717	CompoundStatement		27:9:768:768	1998559	0					
ANR	1998718	ExpressionStatement	"rec_lock_cleanup ( dir -> GetFullPath ( ) , depth - 1 , true )"	749:3:20928:20979	1998559	0	True				
ANR	1998719	CallExpression	"rec_lock_cleanup ( dir -> GetFullPath ( ) , depth - 1 , true )"		1998559	0					
ANR	1998720	Callee	rec_lock_cleanup		1998559	0					
ANR	1998721	Identifier	rec_lock_cleanup		1998559	0					
ANR	1998722	ArgumentList	dir -> GetFullPath ( )		1998559	1					
ANR	1998723	Argument	dir -> GetFullPath ( )		1998559	0					
ANR	1998724	CallExpression	dir -> GetFullPath ( )		1998559	0					
ANR	1998725	Callee	dir -> GetFullPath		1998559	0					
ANR	1998726	PtrMemberAccess	dir -> GetFullPath		1998559	0					
ANR	1998727	Identifier	dir		1998559	0					
ANR	1998728	Identifier	GetFullPath		1998559	1					
ANR	1998729	ArgumentList			1998559	1					
ANR	1998730	Argument	depth - 1		1998559	1					
ANR	1998731	AdditiveExpression	depth - 1		1998559	0		-			
ANR	1998732	Identifier	depth		1998559	0					
ANR	1998733	PrimaryExpression	1		1998559	1					
ANR	1998734	Argument	true		1998559	2					
ANR	1998735	Identifier	true		1998559	0					
ANR	1998736	IfStatement	if ( remove_self )		1998559	6					
ANR	1998737	Condition	remove_self	753:5:21054:21064	1998559	0	True				
ANR	1998738	Identifier	remove_self		1998559	0					
ANR	1998739	CompoundStatement		33:2:918:939	1998559	1					
ANR	1998740	IdentifierDeclStatement	int res = rmdir ( path ) ;	754:2:21073:21094	1998559	0	True				
ANR	1998741	IdentifierDecl	res = rmdir ( path )		1998559	0					
ANR	1998742	IdentifierDeclType	int		1998559	0					
ANR	1998743	Identifier	res		1998559	1					
ANR	1998744	AssignmentExpression	res = rmdir ( path )		1998559	2		=			
ANR	1998745	Identifier	res		1998559	0					
ANR	1998746	CallExpression	rmdir ( path )		1998559	1					
ANR	1998747	Callee	rmdir		1998559	0					
ANR	1998748	Identifier	rmdir		1998559	0					
ANR	1998749	ArgumentList	path		1998559	1					
ANR	1998750	Argument	path		1998559	0					
ANR	1998751	Identifier	path		1998559	0					
ANR	1998752	IfStatement	if ( res != 0 )		1998559	1					
ANR	1998753	Condition	res != 0	755:6:21102:21109	1998559	0	True				
ANR	1998754	EqualityExpression	res != 0		1998559	0		!=			
ANR	1998755	Identifier	res		1998559	0					
ANR	1998756	PrimaryExpression	0		1998559	1					
ANR	1998757	CompoundStatement		34:16:957:957	1998559	1					
ANR	1998758	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory %s could not be removed.\\n"" , path )"	756:3:21117:21183	1998559	0	True				
ANR	1998759	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory %s could not be removed.\\n"" , path )"		1998559	0					
ANR	1998760	Callee	dprintf		1998559	0					
ANR	1998761	Identifier	dprintf		1998559	0					
ANR	1998762	ArgumentList	D_FULLDEBUG		1998559	1					
ANR	1998763	Argument	D_FULLDEBUG		1998559	0					
ANR	1998764	Identifier	D_FULLDEBUG		1998559	0					
ANR	1998765	Argument	"""Directory %s could not be removed.\\n"""		1998559	1					
ANR	1998766	PrimaryExpression	"""Directory %s could not be removed.\\n"""		1998559	0					
ANR	1998767	Argument	path		1998559	2					
ANR	1998768	Identifier	path		1998559	0					
ANR	1998769	Statement	delete	760:1:21195:21200	1998559	7	True				
ANR	1998770	ExpressionStatement	dir	760:8:21202:21205	1998559	8	True				
ANR	1998771	Identifier	dir		1998559	0					
ANR	1998772	ReturnType	void		1998559	1					
ANR	1998773	Identifier	rec_lock_cleanup		1998559	2					
ANR	1998774	ParameterList	"const char * path , int depth , bool remove_self"		1998559	3					
ANR	1998775	Parameter	const char * path	722:22:20107:20122	1998559	0	True				
ANR	1998776	ParameterType	const char *		1998559	0					
ANR	1998777	Identifier	path		1998559	1					
ANR	1998778	Parameter	int depth	722:40:20125:20133	1998559	1	True				
ANR	1998779	ParameterType	int		1998559	0					
ANR	1998780	Identifier	depth		1998559	1					
ANR	1998781	Parameter	bool remove_self	722:51:20136:20151	1998559	2	True				
ANR	1998782	ParameterType	bool		1998559	0					
ANR	1998783	Identifier	remove_self		1998559	1					
ANR	1998784	CFGEntryNode	ENTRY		1998559		True				
ANR	1998785	CFGExitNode	EXIT		1998559		True				
ANR	1998786	Symbol	* lock		1998559						
ANR	1998787	Symbol	res		1998559						
ANR	1998788	Symbol	dir -> GetFullPath		1998559						
ANR	1998789	Symbol	errno		1998559						
ANR	1998790	Symbol	NULL		1998559						
ANR	1998791	Symbol	remove_self		1998559						
ANR	1998792	Symbol	* dir		1998559						
ANR	1998793	Symbol	false		1998559						
ANR	1998794	Symbol	lock -> obtain		1998559						
ANR	1998795	Symbol	D_FULLDEBUG		1998559						
ANR	1998796	Symbol	rmdir		1998559						
ANR	1998797	Symbol	dir		1998559						
ANR	1998798	Symbol	dir -> Next		1998559						
ANR	1998799	Symbol	result		1998559						
ANR	1998800	Symbol	strerror		1998559						
ANR	1998801	Symbol	path		1998559						
ANR	1998802	Symbol	entry		1998559						
ANR	1998803	Symbol	depth		1998559						
ANR	1998804	Symbol	WRITE_LOCK		1998559						
ANR	1998805	Symbol	unlink		1998559						
ANR	1998806	Symbol	true		1998559						
ANR	1998807	Symbol	lock		1998559						
ANR	1998808	Symbol	dir -> IsDirectory		1998559						
ANR	1998809	Function	check_tmp_dir	764:0:21218:21628							
ANR	1998810	FunctionDef	check_tmp_dir ()		1998809	0					
ANR	1998811	CompoundStatement		764:20:21238:21628	1998809	0					
ANR	1998812	IfStatement	if ( ! RmFlag )		1998809	0					
ANR	1998813	Condition	! RmFlag	766:5:21265:21271	1998809	0	True				
ANR	1998814	UnaryOperationExpression	! RmFlag		1998809	0					
ANR	1998815	UnaryOperator	!		1998809	0					
ANR	1998816	Identifier	RmFlag		1998809	1					
ANR	1998817	ReturnStatement	return ;	766:14:21274:21280	1998809	1	True				
ANR	1998818	IdentifierDeclStatement	const char * tmpDir = NULL ;	768:1:21284:21309	1998809	1	True				
ANR	1998819	IdentifierDecl	* tmpDir = NULL		1998809	0					
ANR	1998820	IdentifierDeclType	const char *		1998809	0					
ANR	1998821	Identifier	tmpDir		1998809	1					
ANR	1998822	AssignmentExpression	* tmpDir = NULL		1998809	2		=			
ANR	1998823	Identifier	NULL		1998809	0					
ANR	1998824	Identifier	NULL		1998809	1					
ANR	1998825	IdentifierDeclStatement	"bool newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true ) ;"	769:1:21312:21376	1998809	2	True				
ANR	1998826	IdentifierDecl	"newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		1998809	0					
ANR	1998827	IdentifierDeclType	bool		1998809	0					
ANR	1998828	Identifier	newLock		1998809	1					
ANR	1998829	AssignmentExpression	"newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		1998809	2		=			
ANR	1998830	Identifier	newLock		1998809	0					
ANR	1998831	CallExpression	"param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		1998809	1					
ANR	1998832	Callee	param_boolean		1998809	0					
ANR	1998833	Identifier	param_boolean		1998809	0					
ANR	1998834	ArgumentList	"""CREATE_LOCKS_ON_LOCAL_DISK"""		1998809	1					
ANR	1998835	Argument	"""CREATE_LOCKS_ON_LOCAL_DISK"""		1998809	0					
ANR	1998836	PrimaryExpression	"""CREATE_LOCKS_ON_LOCAL_DISK"""		1998809	0					
ANR	1998837	Argument	true		1998809	1					
ANR	1998838	Identifier	true		1998809	0					
ANR	1998839	IfStatement	if ( newLock )		1998809	3					
ANR	1998840	Condition	newLock	770:5:21383:21389	1998809	0	True				
ANR	1998841	Identifier	newLock		1998809	0					
ANR	1998842	CompoundStatement		9:2:207:252	1998809	1					
ANR	1998843	IdentifierDeclStatement	"FileLock * lock = new FileLock ( - 1 , NULL , NULL ) ;"	772:2:21446:21491	1998809	0	True				
ANR	1998844	IdentifierDecl	"* lock = new FileLock ( - 1 , NULL , NULL )"		1998809	0					
ANR	1998845	IdentifierDeclType	FileLock *		1998809	0					
ANR	1998846	Identifier	lock		1998809	1					
ANR	1998847	AssignmentExpression	"* lock = new FileLock ( - 1 , NULL , NULL )"		1998809	2		=			
ANR	1998848	Identifier	lock		1998809	0					
ANR	1998849	Expression	"- 1 , NULL , NULL"		1998809	1					
ANR	1998850	UnaryOperationExpression	- 1		1998809	0					
ANR	1998851	UnaryOperator	-		1998809	0					
ANR	1998852	PrimaryExpression	1		1998809	1					
ANR	1998853	Expression	"NULL , NULL"		1998809	1					
ANR	1998854	Identifier	NULL		1998809	0					
ANR	1998855	Identifier	NULL		1998809	1					
ANR	1998856	ExpressionStatement	tmpDir = lock -> GetTempPath ( )	773:2:21495:21523	1998809	1	True				
ANR	1998857	AssignmentExpression	tmpDir = lock -> GetTempPath ( )		1998809	0		=			
ANR	1998858	Identifier	tmpDir		1998809	0					
ANR	1998859	CallExpression	lock -> GetTempPath ( )		1998809	1					
ANR	1998860	Callee	lock -> GetTempPath		1998809	0					
ANR	1998861	PtrMemberAccess	lock -> GetTempPath		1998809	0					
ANR	1998862	Identifier	lock		1998809	0					
ANR	1998863	Identifier	GetTempPath		1998809	1					
ANR	1998864	ArgumentList			1998809	1					
ANR	1998865	Statement	delete	774:2:21528:21533	1998809	2	True				
ANR	1998866	ExpressionStatement	lock	774:9:21535:21539	1998809	3	True				
ANR	1998867	Identifier	lock		1998809	0					
ANR	1998868	ExpressionStatement	"rec_lock_cleanup ( tmpDir , 3 )"	775:2:21543:21570	1998809	4	True				
ANR	1998869	CallExpression	"rec_lock_cleanup ( tmpDir , 3 )"		1998809	0					
ANR	1998870	Callee	rec_lock_cleanup		1998809	0					
ANR	1998871	Identifier	rec_lock_cleanup		1998809	0					
ANR	1998872	ArgumentList	tmpDir		1998809	1					
ANR	1998873	Argument	tmpDir		1998809	0					
ANR	1998874	Identifier	tmpDir		1998809	0					
ANR	1998875	Argument	3		1998809	1					
ANR	1998876	PrimaryExpression	3		1998809	0					
ANR	1998877	IfStatement	if ( tmpDir != NULL )		1998809	5					
ANR	1998878	Condition	tmpDir != NULL	776:6:21578:21591	1998809	0	True				
ANR	1998879	EqualityExpression	tmpDir != NULL		1998809	0		!=			
ANR	1998880	Identifier	tmpDir		1998809	0					
ANR	1998881	Identifier	NULL		1998809	1					
ANR	1998882	Statement	delete	777:3:21597:21602	1998809	1	True				
ANR	1998883	Statement	[	777:10:21604:21604	1998809	6	True				
ANR	1998884	Statement	]	777:11:21605:21605	1998809	7	True				
ANR	1998885	ExpressionStatement	tmpDir	777:12:21606:21612	1998809	8	True				
ANR	1998886	Identifier	tmpDir		1998809	0					
ANR	1998887	ReturnType	void		1998809	1					
ANR	1998888	Identifier	check_tmp_dir		1998809	2					
ANR	1998889	ParameterList			1998809	3					
ANR	1998890	CFGEntryNode	ENTRY		1998809		True				
ANR	1998891	CFGExitNode	EXIT		1998809		True				
ANR	1998892	Symbol	tmpDir		1998809						
ANR	1998893	Symbol	* lock		1998809						
ANR	1998894	Symbol	NULL		1998809						
ANR	1998895	Symbol	newLock		1998809						
ANR	1998896	Symbol	lock -> GetTempPath		1998809						
ANR	1998897	Symbol	true		1998809						
ANR	1998898	Symbol	RmFlag		1998809						
ANR	1998899	Symbol	lock		1998809						
ANR	1998900	Symbol	param_boolean		1998809						
ANR	1998901	Function	SetSyscalls	784:11:21643:21684							
ANR	1998902	FunctionDef	SetSyscalls (int foo)		1998901	0					
ANR	1998903	CompoundStatement		785:23:21670:21684	1998901	0					
ANR	1998904	ReturnStatement	return foo ;	785:1:21672:21682	1998901	0	True				
ANR	1998905	Identifier	foo		1998901	0					
ANR	1998906	ReturnType	int		1998901	1					
ANR	1998907	Identifier	SetSyscalls		1998901	2					
ANR	1998908	ParameterList	int foo		1998901	3					
ANR	1998909	Parameter	int foo	785:13:21660:21666	1998901	0	True				
ANR	1998910	ParameterType	int		1998901	0					
ANR	1998911	Identifier	foo		1998901	1					
ANR	1998912	CFGEntryNode	ENTRY		1998901		True				
ANR	1998913	CFGExitNode	EXIT		1998901		True				
ANR	1998914	Symbol	foo		1998901						
ANR	1998915	Function	init_params	790:0:21748:23152							
ANR	1998916	FunctionDef	init_params ()		1998915	0					
ANR	1998917	CompoundStatement		792:0:21767:23152	1998915	0					
ANR	1998918	ExpressionStatement	"Spool = param ( ""SPOOL"" )"	793:1:21770:21792	1998915	0	True				
ANR	1998919	AssignmentExpression	"Spool = param ( ""SPOOL"" )"		1998915	0		=			
ANR	1998920	Identifier	Spool		1998915	0					
ANR	1998921	CallExpression	"param ( ""SPOOL"" )"		1998915	1					
ANR	1998922	Callee	param		1998915	0					
ANR	1998923	Identifier	param		1998915	0					
ANR	1998924	ArgumentList	"""SPOOL"""		1998915	1					
ANR	1998925	Argument	"""SPOOL"""		1998915	0					
ANR	1998926	PrimaryExpression	"""SPOOL"""		1998915	0					
ANR	1998927	IfStatement	if ( Spool == NULL )		1998915	1					
ANR	1998928	Condition	Spool == NULL	794:8:21802:21814	1998915	0	True				
ANR	1998929	EqualityExpression	Spool == NULL		1998915	0		==			
ANR	1998930	Identifier	Spool		1998915	0					
ANR	1998931	Identifier	NULL		1998915	1					
ANR	1998932	CompoundStatement		3:24:50:50	1998915	1					
ANR	1998933	ExpressionStatement	"EXCEPT ( ""SPOOL not specified in config file\\n"" )"	795:8:21828:21876	1998915	0	True				
ANR	1998934	CallExpression	"EXCEPT ( ""SPOOL not specified in config file\\n"" )"		1998915	0					
ANR	1998935	Callee	EXCEPT		1998915	0					
ANR	1998936	Identifier	EXCEPT		1998915	0					
ANR	1998937	ArgumentList	"""SPOOL not specified in config file\\n"""		1998915	1					
ANR	1998938	Argument	"""SPOOL not specified in config file\\n"""		1998915	0					
ANR	1998939	PrimaryExpression	"""SPOOL not specified in config file\\n"""		1998915	0					
ANR	1998940	ExpressionStatement	"Log = param ( ""LOG"" )"	798:1:21886:21904	1998915	2	True				
ANR	1998941	AssignmentExpression	"Log = param ( ""LOG"" )"		1998915	0		=			
ANR	1998942	Identifier	Log		1998915	0					
ANR	1998943	CallExpression	"param ( ""LOG"" )"		1998915	1					
ANR	1998944	Callee	param		1998915	0					
ANR	1998945	Identifier	param		1998915	0					
ANR	1998946	ArgumentList	"""LOG"""		1998915	1					
ANR	1998947	Argument	"""LOG"""		1998915	0					
ANR	1998948	PrimaryExpression	"""LOG"""		1998915	0					
ANR	1998949	IfStatement	if ( Log == NULL )		1998915	3					
ANR	1998950	Condition	Log == NULL	799:8:21914:21924	1998915	0	True				
ANR	1998951	EqualityExpression	Log == NULL		1998915	0		==			
ANR	1998952	Identifier	Log		1998915	0					
ANR	1998953	Identifier	NULL		1998915	1					
ANR	1998954	CompoundStatement		8:22:160:160	1998915	1					
ANR	1998955	ExpressionStatement	"EXCEPT ( ""LOG not specified in config file\\n"" )"	800:8:21938:21984	1998915	0	True				
ANR	1998956	CallExpression	"EXCEPT ( ""LOG not specified in config file\\n"" )"		1998915	0					
ANR	1998957	Callee	EXCEPT		1998915	0					
ANR	1998958	Identifier	EXCEPT		1998915	0					
ANR	1998959	ArgumentList	"""LOG not specified in config file\\n"""		1998915	1					
ANR	1998960	Argument	"""LOG not specified in config file\\n"""		1998915	0					
ANR	1998961	PrimaryExpression	"""LOG not specified in config file\\n"""		1998915	0					
ANR	1998962	ExpressionStatement	"DaemonSockDir = param ( ""DAEMON_SOCKET_DIR"" )"	803:1:21994:22036	1998915	4	True				
ANR	1998963	AssignmentExpression	"DaemonSockDir = param ( ""DAEMON_SOCKET_DIR"" )"		1998915	0		=			
ANR	1998964	Identifier	DaemonSockDir		1998915	0					
ANR	1998965	CallExpression	"param ( ""DAEMON_SOCKET_DIR"" )"		1998915	1					
ANR	1998966	Callee	param		1998915	0					
ANR	1998967	Identifier	param		1998915	0					
ANR	1998968	ArgumentList	"""DAEMON_SOCKET_DIR"""		1998915	1					
ANR	1998969	Argument	"""DAEMON_SOCKET_DIR"""		1998915	0					
ANR	1998970	PrimaryExpression	"""DAEMON_SOCKET_DIR"""		1998915	0					
ANR	1998971	IfStatement	if ( DaemonSockDir == NULL )		1998915	5					
ANR	1998972	Condition	DaemonSockDir == NULL	804:5:22043:22063	1998915	0	True				
ANR	1998973	EqualityExpression	DaemonSockDir == NULL		1998915	0		==			
ANR	1998974	Identifier	DaemonSockDir		1998915	0					
ANR	1998975	Identifier	NULL		1998915	1					
ANR	1998976	CompoundStatement		13:29:299:299	1998915	1					
ANR	1998977	ExpressionStatement	"EXCEPT ( ""DAEMON_SOCKET_DIR not defined\\n"" )"	805:2:22071:22112	1998915	0	True				
ANR	1998978	CallExpression	"EXCEPT ( ""DAEMON_SOCKET_DIR not defined\\n"" )"		1998915	0					
ANR	1998979	Callee	EXCEPT		1998915	0					
ANR	1998980	Identifier	EXCEPT		1998915	0					
ANR	1998981	ArgumentList	"""DAEMON_SOCKET_DIR not defined\\n"""		1998915	1					
ANR	1998982	Argument	"""DAEMON_SOCKET_DIR not defined\\n"""		1998915	0					
ANR	1998983	PrimaryExpression	"""DAEMON_SOCKET_DIR not defined\\n"""		1998915	0					
ANR	1998984	IdentifierDeclStatement	"char * Execute = param ( ""EXECUTE"" ) ;"	808:1:22119:22151	1998915	6	True				
ANR	1998985	IdentifierDecl	"* Execute = param ( ""EXECUTE"" )"		1998915	0					
ANR	1998986	IdentifierDeclType	char *		1998915	0					
ANR	1998987	Identifier	Execute		1998915	1					
ANR	1998988	AssignmentExpression	"* Execute = param ( ""EXECUTE"" )"		1998915	2		=			
ANR	1998989	Identifier	Execute		1998915	0					
ANR	1998990	CallExpression	"param ( ""EXECUTE"" )"		1998915	1					
ANR	1998991	Callee	param		1998915	0					
ANR	1998992	Identifier	param		1998915	0					
ANR	1998993	ArgumentList	"""EXECUTE"""		1998915	1					
ANR	1998994	Argument	"""EXECUTE"""		1998915	0					
ANR	1998995	PrimaryExpression	"""EXECUTE"""		1998915	0					
ANR	1998996	IfStatement	if ( Execute )		1998915	7					
ANR	1998997	Condition	Execute	809:5:22158:22164	1998915	0	True				
ANR	1998998	Identifier	Execute		1998915	0					
ANR	1998999	CompoundStatement		18:15:400:400	1998915	1					
ANR	1999000	ExpressionStatement	ExecuteDirs . append ( Execute )	810:2:22172:22199	1998915	0	True				
ANR	1999001	CallExpression	ExecuteDirs . append ( Execute )		1998915	0					
ANR	1999002	Callee	ExecuteDirs . append		1998915	0					
ANR	1999003	MemberAccess	ExecuteDirs . append		1998915	0					
ANR	1999004	Identifier	ExecuteDirs		1998915	0					
ANR	1999005	Identifier	append		1998915	1					
ANR	1999006	ArgumentList	Execute		1998915	1					
ANR	1999007	Argument	Execute		1998915	0					
ANR	1999008	Identifier	Execute		1998915	0					
ANR	1999009	ExpressionStatement	free ( Execute )	811:2:22203:22216	1998915	1	True				
ANR	1999010	CallExpression	free ( Execute )		1998915	0					
ANR	1999011	Callee	free		1998915	0					
ANR	1999012	Identifier	free		1998915	0					
ANR	1999013	ArgumentList	Execute		1998915	1					
ANR	1999014	Argument	Execute		1998915	0					
ANR	1999015	Identifier	Execute		1998915	0					
ANR	1999016	ExpressionStatement	Execute = NULL	812:2:22220:22234	1998915	2	True				
ANR	1999017	AssignmentExpression	Execute = NULL		1998915	0		=			
ANR	1999018	Identifier	Execute		1998915	0					
ANR	1999019	Identifier	NULL		1998915	1					
ANR	1999020	IdentifierDeclStatement	ExtArray < ParamValue > * params = param_all ( ) ;	815:1:22301:22343	1998915	8	True				
ANR	1999021	IdentifierDecl	* params = param_all ( )		1998915	0					
ANR	1999022	IdentifierDeclType	ExtArray < ParamValue > *		1998915	0					
ANR	1999023	Identifier	params		1998915	1					
ANR	1999024	AssignmentExpression	* params = param_all ( )		1998915	2		=			
ANR	1999025	Identifier	params		1998915	0					
ANR	1999026	CallExpression	param_all ( )		1998915	1					
ANR	1999027	Callee	param_all		1998915	0					
ANR	1999028	Identifier	param_all		1998915	0					
ANR	1999029	ArgumentList			1998915	1					
ANR	1999030	ForStatement	for ( int p = params -> length ( ) ; p -- ; )		1998915	9					
ANR	1999031	ForInit	int p = params -> length ( ) ;	816:6:22351:22373	1998915	0	True				
ANR	1999032	IdentifierDeclStatement	int p = params -> length ( ) ;		1998915	0					
ANR	1999033	IdentifierDecl	p = params -> length ( )		1998915	0					
ANR	1999034	IdentifierDeclType	int		1998915	0					
ANR	1999035	Identifier	p		1998915	1					
ANR	1999036	AssignmentExpression	p = params -> length ( )		1998915	2		=			
ANR	1999037	Identifier	p		1998915	0					
ANR	1999038	CallExpression	params -> length ( )		1998915	1					
ANR	1999039	Callee	params -> length		1998915	0					
ANR	1999040	PtrMemberAccess	params -> length		1998915	0					
ANR	1999041	Identifier	params		1998915	0					
ANR	1999042	Identifier	length		1998915	1					
ANR	1999043	ArgumentList			1998915	1					
ANR	1999044	Condition	p --	816:30:22375:22377	1998915	1	True				
ANR	1999045	PostIncDecOperationExpression	p --		1998915	0					
ANR	1999046	Identifier	p		1998915	0					
ANR	1999047	IncDec	--		1998915	1					
ANR	1999048	CompoundStatement		27:2:666:683	1998915	2					
ANR	1999049	IdentifierDeclStatement	char const * name = ( * params ) [ p ] . name . Value ( ) ;	817:2:22386:22430	1998915	0	True				
ANR	1999050	IdentifierDecl	* name = ( * params ) [ p ] . name . Value ( )		1998915	0					
ANR	1999051	IdentifierDeclType	char const *		1998915	0					
ANR	1999052	Identifier	name		1998915	1					
ANR	1999053	AssignmentExpression	* name = ( * params ) [ p ] . name . Value ( )		1998915	2		=			
ANR	1999054	Identifier	name		1998915	0					
ANR	1999055	CallExpression	( * params ) [ p ] . name . Value ( )		1998915	1					
ANR	1999056	Callee	( * params ) [ p ] . name . Value		1998915	0					
ANR	1999057	MemberAccess	( * params ) [ p ] . name . Value		1998915	0					
ANR	1999058	MemberAccess	( * params ) [ p ] . name		1998915	0					
ANR	1999059	ArrayIndexing	( * params ) [ p ]		1998915	0					
ANR	1999060	UnaryOperationExpression	* params		1998915	0					
ANR	1999061	UnaryOperator	*		1998915	0					
ANR	1999062	Identifier	params		1998915	1					
ANR	1999063	Identifier	p		1998915	1					
ANR	1999064	Identifier	name		1998915	1					
ANR	1999065	Identifier	Value		1998915	1					
ANR	1999066	ArgumentList			1998915	1					
ANR	1999067	IdentifierDeclStatement	char * tail = NULL ;	818:2:22434:22451	1998915	1	True				
ANR	1999068	IdentifierDecl	* tail = NULL		1998915	0					
ANR	1999069	IdentifierDeclType	char *		1998915	0					
ANR	1999070	Identifier	tail		1998915	1					
ANR	1999071	AssignmentExpression	* tail = NULL		1998915	2		=			
ANR	1999072	Identifier	NULL		1998915	0					
ANR	1999073	Identifier	NULL		1998915	1					
ANR	1999074	IfStatement	"if ( strncasecmp ( name , ""SLOT"" , 4 ) != 0 )"		1998915	2					
ANR	1999075	Condition	"strncasecmp ( name , ""SLOT"" , 4 ) != 0"	819:6:22459:22493	1998915	0	True				
ANR	1999076	EqualityExpression	"strncasecmp ( name , ""SLOT"" , 4 ) != 0"		1998915	0		!=			
ANR	1999077	CallExpression	"strncasecmp ( name , ""SLOT"" , 4 )"		1998915	0					
ANR	1999078	Callee	strncasecmp		1998915	0					
ANR	1999079	Identifier	strncasecmp		1998915	0					
ANR	1999080	ArgumentList	name		1998915	1					
ANR	1999081	Argument	name		1998915	0					
ANR	1999082	Identifier	name		1998915	0					
ANR	1999083	Argument	"""SLOT"""		1998915	1					
ANR	1999084	PrimaryExpression	"""SLOT"""		1998915	0					
ANR	1999085	Argument	4		1998915	2					
ANR	1999086	PrimaryExpression	4		1998915	0					
ANR	1999087	PrimaryExpression	0		1998915	1					
ANR	1999088	ContinueStatement	continue ;	819:44:22497:22505	1998915	1	True				
ANR	1999089	ExpressionStatement	"strtol ( name + 4 , & tail , 10 )"	820:2:22509:22536	1998915	3	True				
ANR	1999090	CallExpression	"strtol ( name + 4 , & tail , 10 )"		1998915	0					
ANR	1999091	Callee	strtol		1998915	0					
ANR	1999092	Identifier	strtol		1998915	0					
ANR	1999093	ArgumentList	name + 4		1998915	1					
ANR	1999094	Argument	name + 4		1998915	0					
ANR	1999095	AdditiveExpression	name + 4		1998915	0		+			
ANR	1999096	Identifier	name		1998915	0					
ANR	1999097	PrimaryExpression	4		1998915	1					
ANR	1999098	Argument	& tail		1998915	1					
ANR	1999099	UnaryOperationExpression	& tail		1998915	0					
ANR	1999100	UnaryOperator	&		1998915	0					
ANR	1999101	Identifier	tail		1998915	1					
ANR	1999102	Argument	10		1998915	2					
ANR	1999103	PrimaryExpression	10		1998915	0					
ANR	1999104	IfStatement	"if ( tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0 )"		1998915	4					
ANR	1999105	Condition	"tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0"	821:6:22544:22594	1998915	0	True				
ANR	1999106	OrExpression	"tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0"		1998915	0		||			
ANR	1999107	RelationalExpression	tail <= name		1998915	0		<=			
ANR	1999108	Identifier	tail		1998915	0					
ANR	1999109	Identifier	name		1998915	1					
ANR	1999110	EqualityExpression	"strcasecmp ( tail , ""_EXECUTE"" ) != 0"		1998915	1		!=			
ANR	1999111	CallExpression	"strcasecmp ( tail , ""_EXECUTE"" )"		1998915	0					
ANR	1999112	Callee	strcasecmp		1998915	0					
ANR	1999113	Identifier	strcasecmp		1998915	0					
ANR	1999114	ArgumentList	tail		1998915	1					
ANR	1999115	Argument	tail		1998915	0					
ANR	1999116	Identifier	tail		1998915	0					
ANR	1999117	Argument	"""_EXECUTE"""		1998915	1					
ANR	1999118	PrimaryExpression	"""_EXECUTE"""		1998915	0					
ANR	1999119	PrimaryExpression	0		1998915	1					
ANR	1999120	ContinueStatement	continue ;	821:60:22598:22606	1998915	1	True				
ANR	1999121	ExpressionStatement	Execute = param ( name )	823:2:22611:22632	1998915	5	True				
ANR	1999122	AssignmentExpression	Execute = param ( name )		1998915	0		=			
ANR	1999123	Identifier	Execute		1998915	0					
ANR	1999124	CallExpression	param ( name )		1998915	1					
ANR	1999125	Callee	param		1998915	0					
ANR	1999126	Identifier	param		1998915	0					
ANR	1999127	ArgumentList	name		1998915	1					
ANR	1999128	Argument	name		1998915	0					
ANR	1999129	Identifier	name		1998915	0					
ANR	1999130	IfStatement	if ( Execute )		1998915	6					
ANR	1999131	Condition	Execute	824:6:22640:22646	1998915	0	True				
ANR	1999132	Identifier	Execute		1998915	0					
ANR	1999133	CompoundStatement		33:16:882:882	1998915	1					
ANR	1999134	IfStatement	if ( ! ExecuteDirs . contains ( Execute ) )		1998915	0					
ANR	1999135	Condition	! ExecuteDirs . contains ( Execute )	825:7:22659:22690	1998915	0	True				
ANR	1999136	UnaryOperationExpression	! ExecuteDirs . contains ( Execute )		1998915	0					
ANR	1999137	UnaryOperator	!		1998915	0					
ANR	1999138	CallExpression	ExecuteDirs . contains ( Execute )		1998915	1					
ANR	1999139	Callee	ExecuteDirs . contains		1998915	0					
ANR	1999140	MemberAccess	ExecuteDirs . contains		1998915	0					
ANR	1999141	Identifier	ExecuteDirs		1998915	0					
ANR	1999142	Identifier	contains		1998915	1					
ANR	1999143	ArgumentList	Execute		1998915	1					
ANR	1999144	Argument	Execute		1998915	0					
ANR	1999145	Identifier	Execute		1998915	0					
ANR	1999146	CompoundStatement		34:42:926:926	1998915	1					
ANR	1999147	ExpressionStatement	ExecuteDirs . append ( Execute )	826:4:22700:22729	1998915	0	True				
ANR	1999148	CallExpression	ExecuteDirs . append ( Execute )		1998915	0					
ANR	1999149	Callee	ExecuteDirs . append		1998915	0					
ANR	1999150	MemberAccess	ExecuteDirs . append		1998915	0					
ANR	1999151	Identifier	ExecuteDirs		1998915	0					
ANR	1999152	Identifier	append		1998915	1					
ANR	1999153	ArgumentList	Execute		1998915	1					
ANR	1999154	Argument	Execute		1998915	0					
ANR	1999155	Identifier	Execute		1998915	0					
ANR	1999156	ExpressionStatement	free ( Execute )	828:3:22739:22754	1998915	1	True				
ANR	1999157	CallExpression	free ( Execute )		1998915	0					
ANR	1999158	Callee	free		1998915	0					
ANR	1999159	Identifier	free		1998915	0					
ANR	1999160	ArgumentList	Execute		1998915	1					
ANR	1999161	Argument	Execute		1998915	0					
ANR	1999162	Identifier	Execute		1998915	0					
ANR	1999163	Statement	delete	831:1:22764:22769	1998915	10	True				
ANR	1999164	ExpressionStatement	params	831:8:22771:22777	1998915	11	True				
ANR	1999165	Identifier	params		1998915	0					
ANR	1999166	IfStatement	"if ( ( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL )"		1998915	12					
ANR	1999167	Condition	"( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL"	833:8:22788:22830	1998915	0	True				
ANR	1999168	EqualityExpression	"( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL"		1998915	0		==			
ANR	1999169	AssignmentExpression	"PreenAdmin = param ( ""PREEN_ADMIN"" )"		1998915	0		=			
ANR	1999170	Identifier	PreenAdmin		1998915	0					
ANR	1999171	CallExpression	"param ( ""PREEN_ADMIN"" )"		1998915	1					
ANR	1999172	Callee	param		1998915	0					
ANR	1999173	Identifier	param		1998915	0					
ANR	1999174	ArgumentList	"""PREEN_ADMIN"""		1998915	1					
ANR	1999175	Argument	"""PREEN_ADMIN"""		1998915	0					
ANR	1999176	PrimaryExpression	"""PREEN_ADMIN"""		1998915	0					
ANR	1999177	Identifier	NULL		1998915	1					
ANR	1999178	CompoundStatement		42:54:1066:1066	1998915	1					
ANR	1999179	IfStatement	"if ( ( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL )"		1998915	0					
ANR	1999180	Condition	"( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL"	834:6:22842:22885	1998915	0	True				
ANR	1999181	EqualityExpression	"( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL"		1998915	0		==			
ANR	1999182	AssignmentExpression	"PreenAdmin = param ( ""CONDOR_ADMIN"" )"		1998915	0		=			
ANR	1999183	Identifier	PreenAdmin		1998915	0					
ANR	1999184	CallExpression	"param ( ""CONDOR_ADMIN"" )"		1998915	1					
ANR	1999185	Callee	param		1998915	0					
ANR	1999186	Identifier	param		1998915	0					
ANR	1999187	ArgumentList	"""CONDOR_ADMIN"""		1998915	1					
ANR	1999188	Argument	"""CONDOR_ADMIN"""		1998915	0					
ANR	1999189	PrimaryExpression	"""CONDOR_ADMIN"""		1998915	0					
ANR	1999190	Identifier	NULL		1998915	1					
ANR	1999191	CompoundStatement		43:53:1121:1121	1998915	1					
ANR	1999192	ExpressionStatement	"EXCEPT ( ""CONDOR_ADMIN not specified in config file"" )"	835:3:22894:22947	1998915	0	True				
ANR	1999193	CallExpression	"EXCEPT ( ""CONDOR_ADMIN not specified in config file"" )"		1998915	0					
ANR	1999194	Callee	EXCEPT		1998915	0					
ANR	1999195	Identifier	EXCEPT		1998915	0					
ANR	1999196	ArgumentList	"""CONDOR_ADMIN not specified in config file"""		1998915	1					
ANR	1999197	Argument	"""CONDOR_ADMIN not specified in config file"""		1998915	0					
ANR	1999198	PrimaryExpression	"""CONDOR_ADMIN not specified in config file"""		1998915	0					
ANR	1999199	ExpressionStatement	"ValidSpoolFiles = param ( ""VALID_SPOOL_FILES"" )"	839:1:22961:23005	1998915	13	True				
ANR	1999200	AssignmentExpression	"ValidSpoolFiles = param ( ""VALID_SPOOL_FILES"" )"		1998915	0		=			
ANR	1999201	Identifier	ValidSpoolFiles		1998915	0					
ANR	1999202	CallExpression	"param ( ""VALID_SPOOL_FILES"" )"		1998915	1					
ANR	1999203	Callee	param		1998915	0					
ANR	1999204	Identifier	param		1998915	0					
ANR	1999205	ArgumentList	"""VALID_SPOOL_FILES"""		1998915	1					
ANR	1999206	Argument	"""VALID_SPOOL_FILES"""		1998915	0					
ANR	1999207	PrimaryExpression	"""VALID_SPOOL_FILES"""		1998915	0					
ANR	1999208	ExpressionStatement	"InvalidLogFiles = param ( ""INVALID_LOG_FILES"" )"	841:1:23009:23053	1998915	14	True				
ANR	1999209	AssignmentExpression	"InvalidLogFiles = param ( ""INVALID_LOG_FILES"" )"		1998915	0		=			
ANR	1999210	Identifier	InvalidLogFiles		1998915	0					
ANR	1999211	CallExpression	"param ( ""INVALID_LOG_FILES"" )"		1998915	1					
ANR	1999212	Callee	param		1998915	0					
ANR	1999213	Identifier	param		1998915	0					
ANR	1999214	ArgumentList	"""INVALID_LOG_FILES"""		1998915	1					
ANR	1999215	Argument	"""INVALID_LOG_FILES"""		1998915	0					
ANR	1999216	PrimaryExpression	"""INVALID_LOG_FILES"""		1998915	0					
ANR	1999217	IfStatement	"if ( ( MailPrg = param ( ""MAIL"" ) ) == NULL )"		1998915	15					
ANR	1999218	Condition	"( MailPrg = param ( ""MAIL"" ) ) == NULL"	843:5:23061:23093	1998915	0	True				
ANR	1999219	EqualityExpression	"( MailPrg = param ( ""MAIL"" ) ) == NULL"		1998915	0		==			
ANR	1999220	AssignmentExpression	"MailPrg = param ( ""MAIL"" )"		1998915	0		=			
ANR	1999221	Identifier	MailPrg		1998915	0					
ANR	1999222	CallExpression	"param ( ""MAIL"" )"		1998915	1					
ANR	1999223	Callee	param		1998915	0					
ANR	1999224	Identifier	param		1998915	0					
ANR	1999225	ArgumentList	"""MAIL"""		1998915	1					
ANR	1999226	Argument	"""MAIL"""		1998915	0					
ANR	1999227	PrimaryExpression	"""MAIL"""		1998915	0					
ANR	1999228	Identifier	NULL		1998915	1					
ANR	1999229	CompoundStatement		52:41:1329:1329	1998915	1					
ANR	1999230	ExpressionStatement	"EXCEPT ( ""MAIL not specified in config file"" )"	844:2:23101:23147	1998915	0	True				
ANR	1999231	CallExpression	"EXCEPT ( ""MAIL not specified in config file"" )"		1998915	0					
ANR	1999232	Callee	EXCEPT		1998915	0					
ANR	1999233	Identifier	EXCEPT		1998915	0					
ANR	1999234	ArgumentList	"""MAIL not specified in config file"""		1998915	1					
ANR	1999235	Argument	"""MAIL not specified in config file"""		1998915	0					
ANR	1999236	PrimaryExpression	"""MAIL not specified in config file"""		1998915	0					
ANR	1999237	ReturnType	void		1998915	1					
ANR	1999238	Identifier	init_params		1998915	2					
ANR	1999239	ParameterList			1998915	3					
ANR	1999240	CFGEntryNode	ENTRY		1998915		True				
ANR	1999241	CFGExitNode	EXIT		1998915		True				
ANR	1999242	Symbol	ExecuteDirs . contains		1998915						
ANR	1999243	Symbol	Execute		1998915						
ANR	1999244	Symbol	( * params ) [ p ] . name . Value		1998915						
ANR	1999245	Symbol	strncasecmp		1998915						
ANR	1999246	Symbol	params -> length		1998915						
ANR	1999247	Symbol	* * params		1998915						
ANR	1999248	Symbol	PreenAdmin		1998915						
ANR	1999249	Symbol	param_all		1998915						
ANR	1999250	Symbol	param		1998915						
ANR	1999251	Symbol	DaemonSockDir		1998915						
ANR	1999252	Symbol	& tail		1998915						
ANR	1999253	Symbol	strcasecmp		1998915						
ANR	1999254	Symbol	* params		1998915						
ANR	1999255	Symbol	ValidSpoolFiles		1998915						
ANR	1999256	Symbol	NULL		1998915						
ANR	1999257	Symbol	Log		1998915						
ANR	1999258	Symbol	tail		1998915						
ANR	1999259	Symbol	( * params ) [ p ] . name		1998915						
ANR	1999260	Symbol	Spool		1998915						
ANR	1999261	Symbol	params		1998915						
ANR	1999262	Symbol	InvalidLogFiles		1998915						
ANR	1999263	Symbol	p		1998915						
ANR	1999264	Symbol	MailPrg		1998915						
ANR	1999265	Symbol	name		1998915						
ANR	1999266	Symbol	* p		1998915						
ANR	1999267	Symbol	ExecuteDirs		1998915						
ANR	1999268	Function	good_file	852:0:23233:23434							
ANR	1999269	FunctionDef	"good_file (const char * dir , const char * name)"		1999268	0					
ANR	1999270	CompoundStatement		854:0:23285:23434	1999268	0					
ANR	1999271	IfStatement	if ( VerboseFlag )		1999268	0					
ANR	1999272	Condition	VerboseFlag	855:5:23292:23302	1999268	0	True				
ANR	1999273	Identifier	VerboseFlag		1999268	0					
ANR	1999274	CompoundStatement		2:19:20:20	1999268	1					
ANR	1999275	ExpressionStatement	"printf ( ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"	856:2:23310:23362	1999268	0	True				
ANR	1999276	CallExpression	"printf ( ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"		1999268	0					
ANR	1999277	Callee	printf		1999268	0					
ANR	1999278	Identifier	printf		1999268	0					
ANR	1999279	ArgumentList	"""%s%c%s - OK\\n"""		1999268	1					
ANR	1999280	Argument	"""%s%c%s - OK\\n"""		1999268	0					
ANR	1999281	PrimaryExpression	"""%s%c%s - OK\\n"""		1999268	0					
ANR	1999282	Argument	dir		1999268	1					
ANR	1999283	Identifier	dir		1999268	0					
ANR	1999284	Argument	DIR_DELIM_CHAR		1999268	2					
ANR	1999285	Identifier	DIR_DELIM_CHAR		1999268	0					
ANR	1999286	Argument	name		1999268	3					
ANR	1999287	Identifier	name		1999268	0					
ANR	1999288	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"	857:2:23366:23429	1999268	1	True				
ANR	1999289	CallExpression	"dprintf ( D_ALWAYS , ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"		1999268	0					
ANR	1999290	Callee	dprintf		1999268	0					
ANR	1999291	Identifier	dprintf		1999268	0					
ANR	1999292	ArgumentList	D_ALWAYS		1999268	1					
ANR	1999293	Argument	D_ALWAYS		1999268	0					
ANR	1999294	Identifier	D_ALWAYS		1999268	0					
ANR	1999295	Argument	"""%s%c%s - OK\\n"""		1999268	1					
ANR	1999296	PrimaryExpression	"""%s%c%s - OK\\n"""		1999268	0					
ANR	1999297	Argument	dir		1999268	2					
ANR	1999298	Identifier	dir		1999268	0					
ANR	1999299	Argument	DIR_DELIM_CHAR		1999268	3					
ANR	1999300	Identifier	DIR_DELIM_CHAR		1999268	0					
ANR	1999301	Argument	name		1999268	4					
ANR	1999302	Identifier	name		1999268	0					
ANR	1999303	ReturnType	void		1999268	1					
ANR	1999304	Identifier	good_file		1999268	2					
ANR	1999305	ParameterList	"const char * dir , const char * name"		1999268	3					
ANR	1999306	Parameter	const char * dir	853:11:23249:23263	1999268	0	True				
ANR	1999307	ParameterType	const char *		1999268	0					
ANR	1999308	Identifier	dir		1999268	1					
ANR	1999309	Parameter	const char * name	853:28:23266:23281	1999268	1	True				
ANR	1999310	ParameterType	const char *		1999268	0					
ANR	1999311	Identifier	name		1999268	1					
ANR	1999312	CFGEntryNode	ENTRY		1999268		True				
ANR	1999313	CFGExitNode	EXIT		1999268		True				
ANR	1999314	Symbol	VerboseFlag		1999268						
ANR	1999315	Symbol	DIR_DELIM_CHAR		1999268						
ANR	1999316	Symbol	name		1999268						
ANR	1999317	Symbol	D_ALWAYS		1999268						
ANR	1999318	Symbol	dir		1999268						
ANR	1999319	Function	bad_file	866:0:23602:24665							
ANR	1999320	FunctionDef	"bad_file (const char * dirpath , const char * name , Directory & dir)"		1999319	0					
ANR	1999321	CompoundStatement		868:0:23674:24665	1999319	0					
ANR	1999322	IdentifierDeclStatement	MyString pathname ;	869:1:23677:23694	1999319	0	True				
ANR	1999323	IdentifierDecl	pathname		1999319	0					
ANR	1999324	IdentifierDeclType	MyString		1999319	0					
ANR	1999325	Identifier	pathname		1999319	1					
ANR	1999326	IdentifierDeclStatement	MyString buf ;	870:1:23697:23709	1999319	1	True				
ANR	1999327	IdentifierDecl	buf		1999319	0					
ANR	1999328	IdentifierDeclType	MyString		1999319	0					
ANR	1999329	Identifier	buf		1999319	1					
ANR	1999330	IfStatement	if ( is_relative_to_cwd ( name ) )		1999319	2					
ANR	1999331	Condition	is_relative_to_cwd ( name )	872:5:23717:23742	1999319	0	True				
ANR	1999332	CallExpression	is_relative_to_cwd ( name )		1999319	0					
ANR	1999333	Callee	is_relative_to_cwd		1999319	0					
ANR	1999334	Identifier	is_relative_to_cwd		1999319	0					
ANR	1999335	ArgumentList	name		1999319	1					
ANR	1999336	Argument	name		1999319	0					
ANR	1999337	Identifier	name		1999319	0					
ANR	1999338	CompoundStatement		5:34:71:71	1999319	1					
ANR	1999339	ExpressionStatement	"pathname . sprintf ( ""%s%c%s"" , dirpath , DIR_DELIM_CHAR , name )"	873:1:23749:23808	1999319	0	True				
ANR	1999340	CallExpression	"pathname . sprintf ( ""%s%c%s"" , dirpath , DIR_DELIM_CHAR , name )"		1999319	0					
ANR	1999341	Callee	pathname . sprintf		1999319	0					
ANR	1999342	MemberAccess	pathname . sprintf		1999319	0					
ANR	1999343	Identifier	pathname		1999319	0					
ANR	1999344	Identifier	sprintf		1999319	1					
ANR	1999345	ArgumentList	"""%s%c%s"""		1999319	1					
ANR	1999346	Argument	"""%s%c%s"""		1999319	0					
ANR	1999347	PrimaryExpression	"""%s%c%s"""		1999319	0					
ANR	1999348	Argument	dirpath		1999319	1					
ANR	1999349	Identifier	dirpath		1999319	0					
ANR	1999350	Argument	DIR_DELIM_CHAR		1999319	2					
ANR	1999351	Identifier	DIR_DELIM_CHAR		1999319	0					
ANR	1999352	Argument	name		1999319	3					
ANR	1999353	Identifier	name		1999319	0					
ANR	1999354	ElseStatement	else		1999319	0					
ANR	1999355	CompoundStatement		8:6:144:144	1999319	0					
ANR	1999356	ExpressionStatement	pathname = name	876:2:23823:23838	1999319	0	True				
ANR	1999357	AssignmentExpression	pathname = name		1999319	0		=			
ANR	1999358	Identifier	pathname		1999319	0					
ANR	1999359	Identifier	name		1999319	1					
ANR	1999360	IfStatement	if ( VerboseFlag )		1999319	3					
ANR	1999361	Condition	VerboseFlag	879:5:23849:23859	1999319	0	True				
ANR	1999362	Identifier	VerboseFlag		1999319	0					
ANR	1999363	CompoundStatement		12:19:188:188	1999319	1					
ANR	1999364	ExpressionStatement	"printf ( ""%s - BAD\\n"" , pathname . Value ( ) )"	880:2:23867:23907	1999319	0	True				
ANR	1999365	CallExpression	"printf ( ""%s - BAD\\n"" , pathname . Value ( ) )"		1999319	0					
ANR	1999366	Callee	printf		1999319	0					
ANR	1999367	Identifier	printf		1999319	0					
ANR	1999368	ArgumentList	"""%s - BAD\\n"""		1999319	1					
ANR	1999369	Argument	"""%s - BAD\\n"""		1999319	0					
ANR	1999370	PrimaryExpression	"""%s - BAD\\n"""		1999319	0					
ANR	1999371	Argument	pathname . Value ( )		1999319	1					
ANR	1999372	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999373	Callee	pathname . Value		1999319	0					
ANR	1999374	MemberAccess	pathname . Value		1999319	0					
ANR	1999375	Identifier	pathname		1999319	0					
ANR	1999376	Identifier	Value		1999319	1					
ANR	1999377	ArgumentList			1999319	1					
ANR	1999378	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s - BAD\\n"" , pathname . Value ( ) )"	881:2:23911:23962	1999319	1	True				
ANR	1999379	CallExpression	"dprintf ( D_ALWAYS , ""%s - BAD\\n"" , pathname . Value ( ) )"		1999319	0					
ANR	1999380	Callee	dprintf		1999319	0					
ANR	1999381	Identifier	dprintf		1999319	0					
ANR	1999382	ArgumentList	D_ALWAYS		1999319	1					
ANR	1999383	Argument	D_ALWAYS		1999319	0					
ANR	1999384	Identifier	D_ALWAYS		1999319	0					
ANR	1999385	Argument	"""%s - BAD\\n"""		1999319	1					
ANR	1999386	PrimaryExpression	"""%s - BAD\\n"""		1999319	0					
ANR	1999387	Argument	pathname . Value ( )		1999319	2					
ANR	1999388	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999389	Callee	pathname . Value		1999319	0					
ANR	1999390	MemberAccess	pathname . Value		1999319	0					
ANR	1999391	Identifier	pathname		1999319	0					
ANR	1999392	Identifier	Value		1999319	1					
ANR	1999393	ArgumentList			1999319	1					
ANR	1999394	IfStatement	if ( RmFlag )		1999319	4					
ANR	1999395	Condition	RmFlag	884:5:23973:23978	1999319	0	True				
ANR	1999396	Identifier	RmFlag		1999319	0					
ANR	1999397	CompoundStatement		18:2:311:366	1999319	1					
ANR	1999398	IdentifierDeclStatement	bool removed = dir . Remove_Full_Path ( pathname . Value ( ) ) ;	885:2:23986:24041	1999319	0	True				
ANR	1999399	IdentifierDecl	removed = dir . Remove_Full_Path ( pathname . Value ( ) )		1999319	0					
ANR	1999400	IdentifierDeclType	bool		1999319	0					
ANR	1999401	Identifier	removed		1999319	1					
ANR	1999402	AssignmentExpression	removed = dir . Remove_Full_Path ( pathname . Value ( ) )		1999319	2		=			
ANR	1999403	Identifier	removed		1999319	0					
ANR	1999404	CallExpression	dir . Remove_Full_Path ( pathname . Value ( ) )		1999319	1					
ANR	1999405	Callee	dir . Remove_Full_Path		1999319	0					
ANR	1999406	MemberAccess	dir . Remove_Full_Path		1999319	0					
ANR	1999407	Identifier	dir		1999319	0					
ANR	1999408	Identifier	Remove_Full_Path		1999319	1					
ANR	1999409	ArgumentList	pathname . Value ( )		1999319	1					
ANR	1999410	Argument	pathname . Value ( )		1999319	0					
ANR	1999411	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999412	Callee	pathname . Value		1999319	0					
ANR	1999413	MemberAccess	pathname . Value		1999319	0					
ANR	1999414	Identifier	pathname		1999319	0					
ANR	1999415	Identifier	Value		1999319	1					
ANR	1999416	ArgumentList			1999319	1					
ANR	1999417	IfStatement	if ( ! removed && privsep_enabled ( ) )		1999319	1					
ANR	1999418	Condition	! removed && privsep_enabled ( )	886:6:24049:24077	1999319	0	True				
ANR	1999419	AndExpression	! removed && privsep_enabled ( )		1999319	0		&&			
ANR	1999420	UnaryOperationExpression	! removed		1999319	0					
ANR	1999421	UnaryOperator	!		1999319	0					
ANR	1999422	Identifier	removed		1999319	1					
ANR	1999423	CallExpression	privsep_enabled ( )		1999319	1					
ANR	1999424	Callee	privsep_enabled		1999319	0					
ANR	1999425	Identifier	privsep_enabled		1999319	0					
ANR	1999426	ArgumentList			1999319	1					
ANR	1999427	CompoundStatement		19:38:406:406	1999319	1					
ANR	1999428	ExpressionStatement	removed = privsep_remove_dir ( pathname . Value ( ) )	887:3:24086:24134	1999319	0	True				
ANR	1999429	AssignmentExpression	removed = privsep_remove_dir ( pathname . Value ( ) )		1999319	0		=			
ANR	1999430	Identifier	removed		1999319	0					
ANR	1999431	CallExpression	privsep_remove_dir ( pathname . Value ( ) )		1999319	1					
ANR	1999432	Callee	privsep_remove_dir		1999319	0					
ANR	1999433	Identifier	privsep_remove_dir		1999319	0					
ANR	1999434	ArgumentList	pathname . Value ( )		1999319	1					
ANR	1999435	Argument	pathname . Value ( )		1999319	0					
ANR	1999436	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999437	Callee	pathname . Value		1999319	0					
ANR	1999438	MemberAccess	pathname . Value		1999319	0					
ANR	1999439	Identifier	pathname		1999319	0					
ANR	1999440	Identifier	Value		1999319	1					
ANR	1999441	ArgumentList			1999319	1					
ANR	1999442	IfStatement	if ( VerboseFlag )		1999319	1					
ANR	1999443	Condition	VerboseFlag	888:7:24143:24153	1999319	0	True				
ANR	1999444	Identifier	VerboseFlag		1999319	0					
ANR	1999445	CompoundStatement		21:21:482:482	1999319	1					
ANR	1999446	IfStatement	if ( removed )		1999319	0					
ANR	1999447	Condition	removed	889:8:24167:24173	1999319	0	True				
ANR	1999448	Identifier	removed		1999319	0					
ANR	1999449	CompoundStatement		22:18:502:502	1999319	1					
ANR	1999450	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"	890:5:24184:24296	1999319	0	True				
ANR	1999451	CallExpression	"dprintf ( D_ALWAYS , ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"		1999319	0					
ANR	1999452	Callee	dprintf		1999319	0					
ANR	1999453	Identifier	dprintf		1999319	0					
ANR	1999454	ArgumentList	D_ALWAYS		1999319	1					
ANR	1999455	Argument	D_ALWAYS		1999319	0					
ANR	1999456	Identifier	D_ALWAYS		1999319	0					
ANR	1999457	Argument	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		1999319	1					
ANR	1999458	PrimaryExpression	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		1999319	0					
ANR	1999459	Argument	pathname . Value ( )		1999319	2					
ANR	1999460	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999461	Callee	pathname . Value		1999319	0					
ANR	1999462	MemberAccess	pathname . Value		1999319	0					
ANR	1999463	Identifier	pathname		1999319	0					
ANR	1999464	Identifier	Value		1999319	1					
ANR	1999465	ArgumentList			1999319	1					
ANR	1999466	ExpressionStatement	"printf ( ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"	891:5:24303:24404	1999319	1	True				
ANR	1999467	CallExpression	"printf ( ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"		1999319	0					
ANR	1999468	Callee	printf		1999319	0					
ANR	1999469	Identifier	printf		1999319	0					
ANR	1999470	ArgumentList	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		1999319	1					
ANR	1999471	Argument	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		1999319	0					
ANR	1999472	PrimaryExpression	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		1999319	0					
ANR	1999473	Argument	pathname . Value ( )		1999319	1					
ANR	1999474	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999475	Callee	pathname . Value		1999319	0					
ANR	1999476	MemberAccess	pathname . Value		1999319	0					
ANR	1999477	Identifier	pathname		1999319	0					
ANR	1999478	Identifier	Value		1999319	1					
ANR	1999479	ArgumentList			1999319	1					
ANR	1999480	IfStatement	if ( removed )		1999319	2					
ANR	1999481	Condition	removed	895:6:24427:24433	1999319	0	True				
ANR	1999482	Identifier	removed		1999319	0					
ANR	1999483	CompoundStatement		28:16:762:762	1999319	1					
ANR	1999484	ExpressionStatement	"buf . sprintf ( ""%s - Removed"" , pathname . Value ( ) )"	896:3:24442:24489	1999319	0	True				
ANR	1999485	CallExpression	"buf . sprintf ( ""%s - Removed"" , pathname . Value ( ) )"		1999319	0					
ANR	1999486	Callee	buf . sprintf		1999319	0					
ANR	1999487	MemberAccess	buf . sprintf		1999319	0					
ANR	1999488	Identifier	buf		1999319	0					
ANR	1999489	Identifier	sprintf		1999319	1					
ANR	1999490	ArgumentList	"""%s - Removed"""		1999319	1					
ANR	1999491	Argument	"""%s - Removed"""		1999319	0					
ANR	1999492	PrimaryExpression	"""%s - Removed"""		1999319	0					
ANR	1999493	Argument	pathname . Value ( )		1999319	1					
ANR	1999494	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999495	Callee	pathname . Value		1999319	0					
ANR	1999496	MemberAccess	pathname . Value		1999319	0					
ANR	1999497	Identifier	pathname		1999319	0					
ANR	1999498	Identifier	Value		1999319	1					
ANR	1999499	ArgumentList			1999319	1					
ANR	1999500	ElseStatement	else		1999319	0					
ANR	1999501	CompoundStatement		30:9:825:825	1999319	0					
ANR	1999502	ExpressionStatement	"buf . sprintf ( ""%s - Can't Remove"" , pathname . Value ( ) )"	898:3:24505:24557	1999319	0	True				
ANR	1999503	CallExpression	"buf . sprintf ( ""%s - Can't Remove"" , pathname . Value ( ) )"		1999319	0					
ANR	1999504	Callee	buf . sprintf		1999319	0					
ANR	1999505	MemberAccess	buf . sprintf		1999319	0					
ANR	1999506	Identifier	buf		1999319	0					
ANR	1999507	Identifier	sprintf		1999319	1					
ANR	1999508	ArgumentList	"""%s - Can't Remove"""		1999319	1					
ANR	1999509	Argument	"""%s - Can't Remove"""		1999319	0					
ANR	1999510	PrimaryExpression	"""%s - Can't Remove"""		1999319	0					
ANR	1999511	Argument	pathname . Value ( )		1999319	1					
ANR	1999512	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999513	Callee	pathname . Value		1999319	0					
ANR	1999514	MemberAccess	pathname . Value		1999319	0					
ANR	1999515	Identifier	pathname		1999319	0					
ANR	1999516	Identifier	Value		1999319	1					
ANR	1999517	ArgumentList			1999319	1					
ANR	1999518	ElseStatement	else		1999319	0					
ANR	1999519	CompoundStatement		33:8:896:896	1999319	0					
ANR	1999520	ExpressionStatement	"buf . sprintf ( ""%s - Not Removed"" , pathname . Value ( ) )"	901:2:24575:24626	1999319	0	True				
ANR	1999521	CallExpression	"buf . sprintf ( ""%s - Not Removed"" , pathname . Value ( ) )"		1999319	0					
ANR	1999522	Callee	buf . sprintf		1999319	0					
ANR	1999523	MemberAccess	buf . sprintf		1999319	0					
ANR	1999524	Identifier	buf		1999319	0					
ANR	1999525	Identifier	sprintf		1999319	1					
ANR	1999526	ArgumentList	"""%s - Not Removed"""		1999319	1					
ANR	1999527	Argument	"""%s - Not Removed"""		1999319	0					
ANR	1999528	PrimaryExpression	"""%s - Not Removed"""		1999319	0					
ANR	1999529	Argument	pathname . Value ( )		1999319	1					
ANR	1999530	CallExpression	pathname . Value ( )		1999319	0					
ANR	1999531	Callee	pathname . Value		1999319	0					
ANR	1999532	MemberAccess	pathname . Value		1999319	0					
ANR	1999533	Identifier	pathname		1999319	0					
ANR	1999534	Identifier	Value		1999319	1					
ANR	1999535	ArgumentList			1999319	1					
ANR	1999536	ExpressionStatement	BadFiles -> append ( buf . Value ( ) )	903:1:24632:24663	1999319	5	True				
ANR	1999537	CallExpression	BadFiles -> append ( buf . Value ( ) )		1999319	0					
ANR	1999538	Callee	BadFiles -> append		1999319	0					
ANR	1999539	PtrMemberAccess	BadFiles -> append		1999319	0					
ANR	1999540	Identifier	BadFiles		1999319	0					
ANR	1999541	Identifier	append		1999319	1					
ANR	1999542	ArgumentList	buf . Value ( )		1999319	1					
ANR	1999543	Argument	buf . Value ( )		1999319	0					
ANR	1999544	CallExpression	buf . Value ( )		1999319	0					
ANR	1999545	Callee	buf . Value		1999319	0					
ANR	1999546	MemberAccess	buf . Value		1999319	0					
ANR	1999547	Identifier	buf		1999319	0					
ANR	1999548	Identifier	Value		1999319	1					
ANR	1999549	ArgumentList			1999319	1					
ANR	1999550	ReturnType	void		1999319	1					
ANR	1999551	Identifier	bad_file		1999319	2					
ANR	1999552	ParameterList	"const char * dirpath , const char * name , Directory & dir"		1999319	3					
ANR	1999553	Parameter	const char * dirpath	867:10:23617:23635	1999319	0	True				
ANR	1999554	ParameterType	const char *		1999319	0					
ANR	1999555	Identifier	dirpath		1999319	1					
ANR	1999556	Parameter	const char * name	867:31:23638:23653	1999319	1	True				
ANR	1999557	ParameterType	const char *		1999319	0					
ANR	1999558	Identifier	name		1999319	1					
ANR	1999559	Parameter	Directory & dir	867:49:23656:23670	1999319	2	True				
ANR	1999560	ParameterType	Directory &		1999319	0					
ANR	1999561	Identifier	dir		1999319	1					
ANR	1999562	CFGEntryNode	ENTRY		1999319		True				
ANR	1999563	CFGExitNode	EXIT		1999319		True				
ANR	1999564	Symbol	dir . Remove_Full_Path		1999319						
ANR	1999565	Symbol	dirpath		1999319						
ANR	1999566	Symbol	DIR_DELIM_CHAR		1999319						
ANR	1999567	Symbol	D_ALWAYS		1999319						
ANR	1999568	Symbol	BadFiles		1999319						
ANR	1999569	Symbol	RmFlag		1999319						
ANR	1999570	Symbol	dir		1999319						
ANR	1999571	Symbol	pathname		1999319						
ANR	1999572	Symbol	buf		1999319						
ANR	1999573	Symbol	VerboseFlag		1999319						
ANR	1999574	Symbol	removed		1999319						
ANR	1999575	Symbol	is_relative_to_cwd		1999319						
ANR	1999576	Symbol	pathname . Value		1999319						
ANR	1999577	Symbol	privsep_enabled		1999319						
ANR	1999578	Symbol	name		1999319						
ANR	1999579	Symbol	buf . Value		1999319						
ANR	1999580	Symbol	privsep_remove_dir		1999319						
ANR	1999581	Function	get_machine_state	908:0:24710:25454							
ANR	1999582	FunctionDef	get_machine_state ()		1999581	0					
ANR	1999583	CompoundStatement		910:0:24736:25454	1999581	0					
ANR	1999584	IdentifierDeclStatement	char * state_str = NULL ;	911:1:24739:24761	1999581	0	True				
ANR	1999585	IdentifierDecl	* state_str = NULL		1999581	0					
ANR	1999586	IdentifierDeclType	char *		1999581	0					
ANR	1999587	Identifier	state_str		1999581	1					
ANR	1999588	AssignmentExpression	* state_str = NULL		1999581	2		=			
ANR	1999589	Identifier	NULL		1999581	0					
ANR	1999590	Identifier	NULL		1999581	1					
ANR	1999591	IdentifierDeclStatement	State s ;	912:1:24764:24771	1999581	1	True				
ANR	1999592	IdentifierDecl	s		1999581	0					
ANR	1999593	IdentifierDeclType	State		1999581	0					
ANR	1999594	Identifier	s		1999581	1					
ANR	1999595	IdentifierDeclStatement	ReliSock * sock ;	914:1:24775:24789	1999581	2	True				
ANR	1999596	IdentifierDecl	* sock		1999581	0					
ANR	1999597	IdentifierDeclType	ReliSock *		1999581	0					
ANR	1999598	Identifier	sock		1999581	1					
ANR	1999599	IdentifierDeclStatement	Daemon my_startd ( DT_STARTD ) ;	915:1:24792:24821	1999581	3	True				
ANR	1999600	IdentifierDecl	my_startd ( DT_STARTD )		1999581	0					
ANR	1999601	IdentifierDeclType	Daemon		1999581	0					
ANR	1999602	Identifier	my_startd		1999581	1					
ANR	1999603	Identifier	DT_STARTD		1999581	2					
ANR	1999604	IfStatement	if ( ! my_startd . locate ( ) )		1999581	4					
ANR	1999605	Condition	! my_startd . locate ( )	916:5:24828:24847	1999581	0	True				
ANR	1999606	UnaryOperationExpression	! my_startd . locate ( )		1999581	0					
ANR	1999607	UnaryOperator	!		1999581	0					
ANR	1999608	CallExpression	my_startd . locate ( )		1999581	1					
ANR	1999609	Callee	my_startd . locate		1999581	0					
ANR	1999610	MemberAccess	my_startd . locate		1999581	0					
ANR	1999611	Identifier	my_startd		1999581	0					
ANR	1999612	Identifier	locate		1999581	1					
ANR	1999613	ArgumentList			1999581	1					
ANR	1999614	CompoundStatement		7:28:114:114	1999581	1					
ANR	1999615	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find local startd address.\\n"" )"	917:2:24855:24912	1999581	0	True				
ANR	1999616	CallExpression	"dprintf ( D_ALWAYS , ""Can't find local startd address.\\n"" )"		1999581	0					
ANR	1999617	Callee	dprintf		1999581	0					
ANR	1999618	Identifier	dprintf		1999581	0					
ANR	1999619	ArgumentList	D_ALWAYS		1999581	1					
ANR	1999620	Argument	D_ALWAYS		1999581	0					
ANR	1999621	Identifier	D_ALWAYS		1999581	0					
ANR	1999622	Argument	"""Can't find local startd address.\\n"""		1999581	1					
ANR	1999623	PrimaryExpression	"""Can't find local startd address.\\n"""		1999581	0					
ANR	1999624	ReturnStatement	return _error_state_ ;	918:2:24916:24936	1999581	1	True				
ANR	1999625	Identifier	_error_state_		1999581	0					
ANR	1999626	IfStatement	"if ( ! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) ) )"		1999581	5					
ANR	1999627	Condition	"! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) )"	921:5:24950:25031	1999581	0	True				
ANR	1999628	UnaryOperationExpression	"! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) )"		1999581	0					
ANR	1999629	UnaryOperator	!		1999581	0					
ANR	1999630	AssignmentExpression	"sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		1999581	1		=			
ANR	1999631	Identifier	sock		1999581	0					
ANR	1999632	CastExpression	"( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		1999581	1					
ANR	1999633	CastTarget	ReliSock *		1999581	0					
ANR	1999634	CallExpression	"my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		1999581	1					
ANR	1999635	Callee	my_startd . startCommand		1999581	0					
ANR	1999636	MemberAccess	my_startd . startCommand		1999581	0					
ANR	1999637	Identifier	my_startd		1999581	0					
ANR	1999638	Identifier	startCommand		1999581	1					
ANR	1999639	ArgumentList	GIVE_STATE		1999581	1					
ANR	1999640	Argument	GIVE_STATE		1999581	0					
ANR	1999641	Identifier	GIVE_STATE		1999581	0					
ANR	1999642	Argument	Stream :: reli_sock		1999581	1					
ANR	1999643	Identifier	Stream :: reli_sock		1999581	0					
ANR	1999644	Argument	0		1999581	2					
ANR	1999645	PrimaryExpression	0		1999581	0					
ANR	1999646	CompoundStatement		13:64:298:298	1999581	1					
ANR	1999647	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't connect to startd at %s\\n"" , my_startd . addr ( ) )"	923:2:25039:25117	1999581	0	True				
ANR	1999648	CallExpression	"dprintf ( D_ALWAYS , ""Can't connect to startd at %s\\n"" , my_startd . addr ( ) )"		1999581	0					
ANR	1999649	Callee	dprintf		1999581	0					
ANR	1999650	Identifier	dprintf		1999581	0					
ANR	1999651	ArgumentList	D_ALWAYS		1999581	1					
ANR	1999652	Argument	D_ALWAYS		1999581	0					
ANR	1999653	Identifier	D_ALWAYS		1999581	0					
ANR	1999654	Argument	"""Can't connect to startd at %s\\n"""		1999581	1					
ANR	1999655	PrimaryExpression	"""Can't connect to startd at %s\\n"""		1999581	0					
ANR	1999656	Argument	my_startd . addr ( )		1999581	2					
ANR	1999657	CallExpression	my_startd . addr ( )		1999581	0					
ANR	1999658	Callee	my_startd . addr		1999581	0					
ANR	1999659	MemberAccess	my_startd . addr		1999581	0					
ANR	1999660	Identifier	my_startd		1999581	0					
ANR	1999661	Identifier	addr		1999581	1					
ANR	1999662	ArgumentList			1999581	1					
ANR	1999663	ReturnStatement	return _error_state_ ;	925:2:25121:25141	1999581	1	True				
ANR	1999664	Identifier	_error_state_		1999581	0					
ANR	1999665	ExpressionStatement	sock -> end_of_message ( )	928:1:25148:25170	1999581	6	True				
ANR	1999666	CallExpression	sock -> end_of_message ( )		1999581	0					
ANR	1999667	Callee	sock -> end_of_message		1999581	0					
ANR	1999668	PtrMemberAccess	sock -> end_of_message		1999581	0					
ANR	1999669	Identifier	sock		1999581	0					
ANR	1999670	Identifier	end_of_message		1999581	1					
ANR	1999671	ArgumentList			1999581	1					
ANR	1999672	ExpressionStatement	sock -> decode ( )	929:1:25173:25187	1999581	7	True				
ANR	1999673	CallExpression	sock -> decode ( )		1999581	0					
ANR	1999674	Callee	sock -> decode		1999581	0					
ANR	1999675	PtrMemberAccess	sock -> decode		1999581	0					
ANR	1999676	Identifier	sock		1999581	0					
ANR	1999677	Identifier	decode		1999581	1					
ANR	1999678	ArgumentList			1999581	1					
ANR	1999679	IfStatement	if ( ! sock -> code ( state_str ) || ! sock -> end_of_message ( ) )		1999581	8					
ANR	1999680	Condition	! sock -> code ( state_str ) || ! sock -> end_of_message ( )	930:5:25194:25244	1999581	0	True				
ANR	1999681	OrExpression	! sock -> code ( state_str ) || ! sock -> end_of_message ( )		1999581	0		||			
ANR	1999682	UnaryOperationExpression	! sock -> code ( state_str )		1999581	0					
ANR	1999683	UnaryOperator	!		1999581	0					
ANR	1999684	CallExpression	sock -> code ( state_str )		1999581	1					
ANR	1999685	Callee	sock -> code		1999581	0					
ANR	1999686	PtrMemberAccess	sock -> code		1999581	0					
ANR	1999687	Identifier	sock		1999581	0					
ANR	1999688	Identifier	code		1999581	1					
ANR	1999689	ArgumentList	state_str		1999581	1					
ANR	1999690	Argument	state_str		1999581	0					
ANR	1999691	Identifier	state_str		1999581	0					
ANR	1999692	UnaryOperationExpression	! sock -> end_of_message ( )		1999581	1					
ANR	1999693	UnaryOperator	!		1999581	0					
ANR	1999694	CallExpression	sock -> end_of_message ( )		1999581	1					
ANR	1999695	Callee	sock -> end_of_message		1999581	0					
ANR	1999696	PtrMemberAccess	sock -> end_of_message		1999581	0					
ANR	1999697	Identifier	sock		1999581	0					
ANR	1999698	Identifier	end_of_message		1999581	1					
ANR	1999699	ArgumentList			1999581	1					
ANR	1999700	CompoundStatement		21:59:511:511	1999581	1					
ANR	1999701	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read state/eom from startd.\\n"" )"	931:2:25252:25310	1999581	0	True				
ANR	1999702	CallExpression	"dprintf ( D_ALWAYS , ""Can't read state/eom from startd.\\n"" )"		1999581	0					
ANR	1999703	Callee	dprintf		1999581	0					
ANR	1999704	Identifier	dprintf		1999581	0					
ANR	1999705	ArgumentList	D_ALWAYS		1999581	1					
ANR	1999706	Argument	D_ALWAYS		1999581	0					
ANR	1999707	Identifier	D_ALWAYS		1999581	0					
ANR	1999708	Argument	"""Can't read state/eom from startd.\\n"""		1999581	1					
ANR	1999709	PrimaryExpression	"""Can't read state/eom from startd.\\n"""		1999581	0					
ANR	1999710	ExpressionStatement	free ( state_str )	932:2:25314:25329	1999581	1	True				
ANR	1999711	CallExpression	free ( state_str )		1999581	0					
ANR	1999712	Callee	free		1999581	0					
ANR	1999713	Identifier	free		1999581	0					
ANR	1999714	ArgumentList	state_str		1999581	1					
ANR	1999715	Argument	state_str		1999581	0					
ANR	1999716	Identifier	state_str		1999581	0					
ANR	1999717	ReturnStatement	return _error_state_ ;	933:2:25333:25353	1999581	2	True				
ANR	1999718	Identifier	_error_state_		1999581	0					
ANR	1999719	ExpressionStatement	sock -> close ( )	936:1:25360:25373	1999581	9	True				
ANR	1999720	CallExpression	sock -> close ( )		1999581	0					
ANR	1999721	Callee	sock -> close		1999581	0					
ANR	1999722	PtrMemberAccess	sock -> close		1999581	0					
ANR	1999723	Identifier	sock		1999581	0					
ANR	1999724	Identifier	close		1999581	1					
ANR	1999725	ArgumentList			1999581	1					
ANR	1999726	Statement	delete	937:1:25376:25381	1999581	10	True				
ANR	1999727	ExpressionStatement	sock	937:8:25383:25387	1999581	11	True				
ANR	1999728	Identifier	sock		1999581	0					
ANR	1999729	ExpressionStatement	s = string_to_state ( state_str )	939:1:25391:25423	1999581	12	True				
ANR	1999730	AssignmentExpression	s = string_to_state ( state_str )		1999581	0		=			
ANR	1999731	Identifier	s		1999581	0					
ANR	1999732	CallExpression	string_to_state ( state_str )		1999581	1					
ANR	1999733	Callee	string_to_state		1999581	0					
ANR	1999734	Identifier	string_to_state		1999581	0					
ANR	1999735	ArgumentList	state_str		1999581	1					
ANR	1999736	Argument	state_str		1999581	0					
ANR	1999737	Identifier	state_str		1999581	0					
ANR	1999738	ExpressionStatement	free ( state_str )	940:1:25426:25441	1999581	13	True				
ANR	1999739	CallExpression	free ( state_str )		1999581	0					
ANR	1999740	Callee	free		1999581	0					
ANR	1999741	Identifier	free		1999581	0					
ANR	1999742	ArgumentList	state_str		1999581	1					
ANR	1999743	Argument	state_str		1999581	0					
ANR	1999744	Identifier	state_str		1999581	0					
ANR	1999745	ReturnStatement	return s ;	941:1:25444:25452	1999581	14	True				
ANR	1999746	Identifier	s		1999581	0					
ANR	1999747	ReturnType	State		1999581	1					
ANR	1999748	Identifier	get_machine_state		1999581	2					
ANR	1999749	ParameterList			1999581	3					
ANR	1999750	CFGEntryNode	ENTRY		1999581		True				
ANR	1999751	CFGExitNode	EXIT		1999581		True				
ANR	1999752	Symbol	NULL		1999581						
ANR	1999753	Symbol	my_startd . locate		1999581						
ANR	1999754	Symbol	sock -> end_of_message		1999581						
ANR	1999755	Symbol	string_to_state		1999581						
ANR	1999756	Symbol	D_ALWAYS		1999581						
ANR	1999757	Symbol	GIVE_STATE		1999581						
ANR	1999758	Symbol	my_startd . addr		1999581						
ANR	1999759	Symbol	my_startd . startCommand		1999581						
ANR	1999760	Symbol	sock		1999581						
ANR	1999761	Symbol	state_str		1999581						
ANR	1999762	Symbol	s		1999581						
ANR	1999763	Symbol	sock -> code		1999581						
ANR	1999764	Symbol	_error_state_		1999581						
ANR	1999765	Symbol	my_startd		1999581						
ANR	1999766	Symbol	Stream :: reli_sock		1999581						
ANR	1999767	Symbol	* sock		1999581						
ANR	1999768	Function	touched_recently	944:0:25457:25834							
ANR	1999769	FunctionDef	"touched_recently (char const * fname , time_t delta)"		1999768	0					
ANR	1999770	CompoundStatement		946:0:25514:25834	1999768	0					
ANR	1999771	IdentifierDeclStatement	StatInfo statinfo ( fname ) ;	947:1:25517:25541	1999768	0	True				
ANR	1999772	IdentifierDecl	statinfo ( fname )		1999768	0					
ANR	1999773	IdentifierDeclType	StatInfo		1999768	0					
ANR	1999774	Identifier	statinfo		1999768	1					
ANR	1999775	Identifier	fname		1999768	2					
ANR	1999776	IfStatement	if ( statinfo . Error ( ) != 0 )		1999768	1					
ANR	1999777	Condition	statinfo . Error ( ) != 0	948:5:25548:25568	1999768	0	True				
ANR	1999778	EqualityExpression	statinfo . Error ( ) != 0		1999768	0		!=			
ANR	1999779	CallExpression	statinfo . Error ( )		1999768	0					
ANR	1999780	Callee	statinfo . Error		1999768	0					
ANR	1999781	MemberAccess	statinfo . Error		1999768	0					
ANR	1999782	Identifier	statinfo		1999768	0					
ANR	1999783	Identifier	Error		1999768	1					
ANR	1999784	ArgumentList			1999768	1					
ANR	1999785	PrimaryExpression	0		1999768	1					
ANR	1999786	CompoundStatement		3:29:57:57	1999768	1					
ANR	1999787	ReturnStatement	return false ;	949:2:25576:25588	1999768	0	True				
ANR	1999788	Identifier	false		1999768	0					
ANR	1999789	IfStatement	if ( abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta )		1999768	2					
ANR	1999790	Condition	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta	953:5:25741:25795	1999768	0	True				
ANR	1999791	RelationalExpression	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta		1999768	0		>			
ANR	1999792	CallExpression	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) )		1999768	0					
ANR	1999793	Callee	abs		1999768	0					
ANR	1999794	Identifier	abs		1999768	0					
ANR	1999795	ArgumentList	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		1999768	1					
ANR	1999796	Argument	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		1999768	0					
ANR	1999797	CastExpression	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		1999768	0					
ANR	1999798	CastTarget	int		1999768	0					
ANR	1999799	AdditiveExpression	time ( NULL ) - statinfo . GetModifyTime ( )		1999768	1		-			
ANR	1999800	CallExpression	time ( NULL )		1999768	0					
ANR	1999801	Callee	time		1999768	0					
ANR	1999802	Identifier	time		1999768	0					
ANR	1999803	ArgumentList	NULL		1999768	1					
ANR	1999804	Argument	NULL		1999768	0					
ANR	1999805	Identifier	NULL		1999768	0					
ANR	1999806	CallExpression	statinfo . GetModifyTime ( )		1999768	1					
ANR	1999807	Callee	statinfo . GetModifyTime		1999768	0					
ANR	1999808	MemberAccess	statinfo . GetModifyTime		1999768	0					
ANR	1999809	Identifier	statinfo		1999768	0					
ANR	1999810	Identifier	GetModifyTime		1999768	1					
ANR	1999811	ArgumentList			1999768	1					
ANR	1999812	Identifier	delta		1999768	1					
ANR	1999813	CompoundStatement		8:63:284:284	1999768	1					
ANR	1999814	ReturnStatement	return false ;	954:2:25803:25815	1999768	0	True				
ANR	1999815	Identifier	false		1999768	0					
ANR	1999816	ReturnStatement	return true ;	956:1:25821:25832	1999768	3	True				
ANR	1999817	Identifier	true		1999768	0					
ANR	1999818	ReturnType	BOOLEAN		1999768	1					
ANR	1999819	Identifier	touched_recently		1999768	2					
ANR	1999820	ParameterList	"char const * fname , time_t delta"		1999768	3					
ANR	1999821	Parameter	char const * fname	945:17:25482:25498	1999768	0	True				
ANR	1999822	ParameterType	char const *		1999768	0					
ANR	1999823	Identifier	fname		1999768	1					
ANR	1999824	Parameter	time_t delta	945:35:25500:25511	1999768	1	True				
ANR	1999825	ParameterType	time_t		1999768	0					
ANR	1999826	Identifier	delta		1999768	1					
ANR	1999827	CFGEntryNode	ENTRY		1999768		True				
ANR	1999828	CFGExitNode	EXIT		1999768		True				
ANR	1999829	Symbol	fname		1999768						
ANR	1999830	Symbol	statinfo . GetModifyTime		1999768						
ANR	1999831	Symbol	abs		1999768						
ANR	1999832	Symbol	NULL		1999768						
ANR	1999833	Symbol	statinfo . Error		1999768						
ANR	1999834	Symbol	statinfo		1999768						
ANR	1999835	Symbol	delta		1999768						
ANR	1999836	Symbol	false		1999768						
ANR	1999837	Symbol	true		1999768						
ANR	1999838	Symbol	time		1999768						
