command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4898085	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_store_cred.cpp								
ANR	4898086	DeclStmt									
ANR	4898087	Decl							int	"int ( Stream * socket , char * & user , char * & pw , int & mode )"	code_store_cred
ANR	4898088	Function	SecureZeroMemory	37:0:1152:1240							
ANR	4898089	FunctionDef	"SecureZeroMemory (void * p , size_t n)"		4898088	0					
ANR	4898090	CompoundStatement		38:0:1193:1240	4898088	0					
ANR	4898091	ExpressionStatement	"memset ( p , 0 , n )"	40:1:1223:1238	4898088	0	True				
ANR	4898092	CallExpression	"memset ( p , 0 , n )"		4898088	0					
ANR	4898093	Callee	memset		4898088	0					
ANR	4898094	Identifier	memset		4898088	0					
ANR	4898095	ArgumentList	p		4898088	1					
ANR	4898096	Argument	p		4898088	0					
ANR	4898097	Identifier	p		4898088	0					
ANR	4898098	Argument	0		4898088	1					
ANR	4898099	PrimaryExpression	0		4898088	0					
ANR	4898100	Argument	n		4898088	2					
ANR	4898101	Identifier	n		4898088	0					
ANR	4898102	ReturnType	void		4898088	1					
ANR	4898103	Identifier	SecureZeroMemory		4898088	2					
ANR	4898104	ParameterList	"void * p , size_t n"		4898088	3					
ANR	4898105	Parameter	void * p	37:22:1174:1180	4898088	0	True				
ANR	4898106	ParameterType	void *		4898088	0					
ANR	4898107	Identifier	p		4898088	1					
ANR	4898108	Parameter	size_t n	37:31:1183:1190	4898088	1	True				
ANR	4898109	ParameterType	size_t		4898088	0					
ANR	4898110	Identifier	n		4898088	1					
ANR	4898111	CFGEntryNode	ENTRY		4898088		True				
ANR	4898112	CFGExitNode	EXIT		4898088		True				
ANR	4898113	Symbol	p		4898088						
ANR	4898114	Symbol	n		4898088						
ANR	4898115	Function	simple_scramble	45:0:1376:1591							
ANR	4898116	FunctionDef	"simple_scramble (char * scrambled , const char * orig , int len)"		4898115	0					
ANR	4898117	CompoundStatement		46:0:1442:1591	4898115	0					
ANR	4898118	IdentifierDeclStatement	"const char deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF } ;"	47:1:1445:1493	4898115	0	True				
ANR	4898119	IdentifierDecl	"deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF }"		4898115	0					
ANR	4898120	IdentifierDeclType	const char [ ]		4898115	0					
ANR	4898121	Identifier	deadbeef		4898115	1					
ANR	4898122	AssignmentExpression	"deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF }"		4898115	2		=			
ANR	4898123	Identifier	deadbeef		4898115	0					
ANR	4898124	InitializerList	0xDE		4898115	1					
ANR	4898125	PrimaryExpression	0xDE		4898115	0					
ANR	4898126	PrimaryExpression	0xAD		4898115	1					
ANR	4898127	PrimaryExpression	0xBE		4898115	2					
ANR	4898128	PrimaryExpression	0xEF		4898115	3					
ANR	4898129	ForStatement	for ( int i = 0 ; i < len ; i ++ )		4898115	1					
ANR	4898130	ForInit	int i = 0 ;	49:6:1502:1511	4898115	0	True				
ANR	4898131	IdentifierDeclStatement	int i = 0 ;		4898115	0					
ANR	4898132	IdentifierDecl	i = 0		4898115	0					
ANR	4898133	IdentifierDeclType	int		4898115	0					
ANR	4898134	Identifier	i		4898115	1					
ANR	4898135	AssignmentExpression	i = 0		4898115	2		=			
ANR	4898136	Identifier	i		4898115	0					
ANR	4898137	PrimaryExpression	0		4898115	1					
ANR	4898138	Condition	i < len	49:17:1513:1519	4898115	1	True				
ANR	4898139	RelationalExpression	i < len		4898115	0		<			
ANR	4898140	Identifier	i		4898115	0					
ANR	4898141	Identifier	len		4898115	1					
ANR	4898142	PostIncDecOperationExpression	i ++	49:26:1522:1524	4898115	2	True				
ANR	4898143	Identifier	i		4898115	0					
ANR	4898144	IncDec	++		4898115	1					
ANR	4898145	CompoundStatement		4:31:84:84	4898115	3					
ANR	4898146	ExpressionStatement	scrambled [ i ] = orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]	50:2:1531:1586	4898115	0	True				
ANR	4898147	AssignmentExpression	scrambled [ i ] = orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]		4898115	0		=			
ANR	4898148	ArrayIndexing	scrambled [ i ]		4898115	0					
ANR	4898149	Identifier	scrambled		4898115	0					
ANR	4898150	Identifier	i		4898115	1					
ANR	4898151	ExclusiveOrExpression	orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]		4898115	1		^			
ANR	4898152	ArrayIndexing	orig [ i ]		4898115	0					
ANR	4898153	Identifier	orig		4898115	0					
ANR	4898154	Identifier	i		4898115	1					
ANR	4898155	ArrayIndexing	deadbeef [ i % sizeof ( deadbeef ) ]		4898115	1					
ANR	4898156	Identifier	deadbeef		4898115	0					
ANR	4898157	MultiplicativeExpression	i % sizeof ( deadbeef )		4898115	1		%			
ANR	4898158	Identifier	i		4898115	0					
ANR	4898159	SizeofExpression	sizeof ( deadbeef )		4898115	1					
ANR	4898160	Sizeof	sizeof		4898115	0					
ANR	4898161	SizeofOperand	deadbeef		4898115	1					
ANR	4898162	ReturnType	void		4898115	1					
ANR	4898163	Identifier	simple_scramble		4898115	2					
ANR	4898164	ParameterList	"char * scrambled , const char * orig , int len"		4898115	3					
ANR	4898165	Parameter	char * scrambled	45:21:1397:1411	4898115	0	True				
ANR	4898166	ParameterType	char *		4898115	0					
ANR	4898167	Identifier	scrambled		4898115	1					
ANR	4898168	Parameter	const char * orig	45:39:1415:1430	4898115	1	True				
ANR	4898169	ParameterType	const char *		4898115	0					
ANR	4898170	Identifier	orig		4898115	1					
ANR	4898171	Parameter	int len	45:57:1433:1439	4898115	2	True				
ANR	4898172	ParameterType	int		4898115	0					
ANR	4898173	Identifier	len		4898115	1					
ANR	4898174	CFGEntryNode	ENTRY		4898115		True				
ANR	4898175	CFGExitNode	EXIT		4898115		True				
ANR	4898176	Symbol	* scrambled		4898115						
ANR	4898177	Symbol	* i		4898115						
ANR	4898178	Symbol	len		4898115						
ANR	4898179	Symbol	* deadbeef		4898115						
ANR	4898180	Symbol	orig		4898115						
ANR	4898181	Symbol	* orig		4898115						
ANR	4898182	Symbol	deadbeef		4898115						
ANR	4898183	Symbol	i		4898115						
ANR	4898184	Symbol	scrambled		4898115						
ANR	4898185	Function	write_password_file	57:0:1683:2808							
ANR	4898186	FunctionDef	"write_password_file (const char * path , const char * password)"		4898185	0					
ANR	4898187	CompoundStatement		58:0:1747:2808	4898185	0					
ANR	4898188	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	59:2:1751:1884	4898185	0	True				
ANR	4898189	IdentifierDecl	"fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		4898185	0					
ANR	4898190	IdentifierDeclType	int		4898185	0					
ANR	4898191	Identifier	fd		4898185	1					
ANR	4898192	AssignmentExpression	"fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		4898185	2		=			
ANR	4898193	Identifier	fd		4898185	0					
ANR	4898194	CallExpression	"safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		4898185	1					
ANR	4898195	Callee	safe_open_wrapper_follow		4898185	0					
ANR	4898196	Identifier	safe_open_wrapper_follow		4898185	0					
ANR	4898197	ArgumentList	path		4898185	1					
ANR	4898198	Argument	path		4898185	0					
ANR	4898199	Identifier	path		4898185	0					
ANR	4898200	Argument	O_WRONLY | O_CREAT | O_TRUNC		4898185	1					
ANR	4898201	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		4898185	0		|			
ANR	4898202	Identifier	O_WRONLY		4898185	0					
ANR	4898203	InclusiveOrExpression	O_CREAT | O_TRUNC		4898185	1		|			
ANR	4898204	Identifier	O_CREAT		4898185	0					
ANR	4898205	Identifier	O_TRUNC		4898185	1					
ANR	4898206	Argument	0600		4898185	2					
ANR	4898207	PrimaryExpression	0600		4898185	0					
ANR	4898208	IfStatement	if ( fd == - 1 )		4898185	1					
ANR	4898209	Condition	fd == - 1	62:6:1892:1899	4898185	0	True				
ANR	4898210	EqualityExpression	fd == - 1		4898185	0		==			
ANR	4898211	Identifier	fd		4898185	0					
ANR	4898212	UnaryOperationExpression	- 1		4898185	1					
ANR	4898213	UnaryOperator	-		4898185	0					
ANR	4898214	PrimaryExpression	1		4898185	1					
ANR	4898215	CompoundStatement		5:16:154:154	4898185	1					
ANR	4898216	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: open failed on %s: %s (%d)\\n"" , path , strerror ( errno ) , errno )"	63:3:1907:2044	4898185	0	True				
ANR	4898217	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: open failed on %s: %s (%d)\\n"" , path , strerror ( errno ) , errno )"		4898185	0					
ANR	4898218	Callee	dprintf		4898185	0					
ANR	4898219	Identifier	dprintf		4898185	0					
ANR	4898220	ArgumentList	D_ALWAYS		4898185	1					
ANR	4898221	Argument	D_ALWAYS		4898185	0					
ANR	4898222	Identifier	D_ALWAYS		4898185	0					
ANR	4898223	Argument	"""store_cred_service: open failed on %s: %s (%d)\\n"""		4898185	1					
ANR	4898224	PrimaryExpression	"""store_cred_service: open failed on %s: %s (%d)\\n"""		4898185	0					
ANR	4898225	Argument	path		4898185	2					
ANR	4898226	Identifier	path		4898185	0					
ANR	4898227	Argument	strerror ( errno )		4898185	3					
ANR	4898228	CallExpression	strerror ( errno )		4898185	0					
ANR	4898229	Callee	strerror		4898185	0					
ANR	4898230	Identifier	strerror		4898185	0					
ANR	4898231	ArgumentList	errno		4898185	1					
ANR	4898232	Argument	errno		4898185	0					
ANR	4898233	Identifier	errno		4898185	0					
ANR	4898234	Argument	errno		4898185	4					
ANR	4898235	Identifier	errno		4898185	0					
ANR	4898236	ReturnStatement	return FAILURE ;	68:3:2049:2063	4898185	1	True				
ANR	4898237	Identifier	FAILURE		4898185	0					
ANR	4898238	IdentifierDeclStatement	"FILE * fp = fdopen ( fd , ""w"" ) ;"	70:2:2071:2097	4898185	2	True				
ANR	4898239	IdentifierDecl	"* fp = fdopen ( fd , ""w"" )"		4898185	0					
ANR	4898240	IdentifierDeclType	FILE *		4898185	0					
ANR	4898241	Identifier	fp		4898185	1					
ANR	4898242	AssignmentExpression	"* fp = fdopen ( fd , ""w"" )"		4898185	2		=			
ANR	4898243	Identifier	fp		4898185	0					
ANR	4898244	CallExpression	"fdopen ( fd , ""w"" )"		4898185	1					
ANR	4898245	Callee	fdopen		4898185	0					
ANR	4898246	Identifier	fdopen		4898185	0					
ANR	4898247	ArgumentList	fd		4898185	1					
ANR	4898248	Argument	fd		4898185	0					
ANR	4898249	Identifier	fd		4898185	0					
ANR	4898250	Argument	"""w"""		4898185	1					
ANR	4898251	PrimaryExpression	"""w"""		4898185	0					
ANR	4898252	IfStatement	if ( fp == NULL )		4898185	3					
ANR	4898253	Condition	fp == NULL	71:6:2105:2114	4898185	0	True				
ANR	4898254	EqualityExpression	fp == NULL		4898185	0		==			
ANR	4898255	Identifier	fp		4898185	0					
ANR	4898256	Identifier	NULL		4898185	1					
ANR	4898257	CompoundStatement		14:18:369:369	4898185	1					
ANR	4898258	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: fdopen failed: %s (%d)\\n"" , strerror ( errno ) , errno )"	72:3:2122:2244	4898185	0	True				
ANR	4898259	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: fdopen failed: %s (%d)\\n"" , strerror ( errno ) , errno )"		4898185	0					
ANR	4898260	Callee	dprintf		4898185	0					
ANR	4898261	Identifier	dprintf		4898185	0					
ANR	4898262	ArgumentList	D_ALWAYS		4898185	1					
ANR	4898263	Argument	D_ALWAYS		4898185	0					
ANR	4898264	Identifier	D_ALWAYS		4898185	0					
ANR	4898265	Argument	"""store_cred_service: fdopen failed: %s (%d)\\n"""		4898185	1					
ANR	4898266	PrimaryExpression	"""store_cred_service: fdopen failed: %s (%d)\\n"""		4898185	0					
ANR	4898267	Argument	strerror ( errno )		4898185	2					
ANR	4898268	CallExpression	strerror ( errno )		4898185	0					
ANR	4898269	Callee	strerror		4898185	0					
ANR	4898270	Identifier	strerror		4898185	0					
ANR	4898271	ArgumentList	errno		4898185	1					
ANR	4898272	Argument	errno		4898185	0					
ANR	4898273	Identifier	errno		4898185	0					
ANR	4898274	Argument	errno		4898185	3					
ANR	4898275	Identifier	errno		4898185	0					
ANR	4898276	ReturnStatement	return FAILURE ;	76:3:2249:2263	4898185	1	True				
ANR	4898277	Identifier	FAILURE		4898185	0					
ANR	4898278	IdentifierDeclStatement	size_t password_len = strlen ( password ) ;	78:2:2271:2309	4898185	4	True				
ANR	4898279	IdentifierDecl	password_len = strlen ( password )		4898185	0					
ANR	4898280	IdentifierDeclType	size_t		4898185	0					
ANR	4898281	Identifier	password_len		4898185	1					
ANR	4898282	AssignmentExpression	password_len = strlen ( password )		4898185	2		=			
ANR	4898283	Identifier	password_len		4898185	0					
ANR	4898284	CallExpression	strlen ( password )		4898185	1					
ANR	4898285	Callee	strlen		4898185	0					
ANR	4898286	Identifier	strlen		4898185	0					
ANR	4898287	ArgumentList	password		4898185	1					
ANR	4898288	Argument	password		4898185	0					
ANR	4898289	Identifier	password		4898185	0					
ANR	4898290	IdentifierDeclStatement	char scrambled_password [ MAX_PASSWORD_LENGTH + 1 ] ;	79:2:2313:2361	4898185	5	True				
ANR	4898291	IdentifierDecl	scrambled_password [ MAX_PASSWORD_LENGTH + 1 ]		4898185	0					
ANR	4898292	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH + 1 ]		4898185	0					
ANR	4898293	Identifier	scrambled_password		4898185	1					
ANR	4898294	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4898185	2		+			
ANR	4898295	Identifier	MAX_PASSWORD_LENGTH		4898185	0					
ANR	4898296	PrimaryExpression	1		4898185	1					
ANR	4898297	ExpressionStatement	"memset ( scrambled_password , 0 , MAX_PASSWORD_LENGTH + 1 )"	80:2:2365:2419	4898185	6	True				
ANR	4898298	CallExpression	"memset ( scrambled_password , 0 , MAX_PASSWORD_LENGTH + 1 )"		4898185	0					
ANR	4898299	Callee	memset		4898185	0					
ANR	4898300	Identifier	memset		4898185	0					
ANR	4898301	ArgumentList	scrambled_password		4898185	1					
ANR	4898302	Argument	scrambled_password		4898185	0					
ANR	4898303	Identifier	scrambled_password		4898185	0					
ANR	4898304	Argument	0		4898185	1					
ANR	4898305	PrimaryExpression	0		4898185	0					
ANR	4898306	Argument	MAX_PASSWORD_LENGTH + 1		4898185	2					
ANR	4898307	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4898185	0		+			
ANR	4898308	Identifier	MAX_PASSWORD_LENGTH		4898185	0					
ANR	4898309	PrimaryExpression	1		4898185	1					
ANR	4898310	ExpressionStatement	"simple_scramble ( scrambled_password , password , password_len )"	81:2:2423:2482	4898185	7	True				
ANR	4898311	CallExpression	"simple_scramble ( scrambled_password , password , password_len )"		4898185	0					
ANR	4898312	Callee	simple_scramble		4898185	0					
ANR	4898313	Identifier	simple_scramble		4898185	0					
ANR	4898314	ArgumentList	scrambled_password		4898185	1					
ANR	4898315	Argument	scrambled_password		4898185	0					
ANR	4898316	Identifier	scrambled_password		4898185	0					
ANR	4898317	Argument	password		4898185	1					
ANR	4898318	Identifier	password		4898185	0					
ANR	4898319	Argument	password_len		4898185	2					
ANR	4898320	Identifier	password_len		4898185	0					
ANR	4898321	IdentifierDeclStatement	"size_t sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp ) ;"	82:2:2486:2556	4898185	8	True				
ANR	4898322	IdentifierDecl	"sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		4898185	0					
ANR	4898323	IdentifierDeclType	size_t		4898185	0					
ANR	4898324	Identifier	sz		4898185	1					
ANR	4898325	AssignmentExpression	"sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		4898185	2		=			
ANR	4898326	Identifier	sz		4898185	0					
ANR	4898327	CallExpression	"fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		4898185	1					
ANR	4898328	Callee	fwrite		4898185	0					
ANR	4898329	Identifier	fwrite		4898185	0					
ANR	4898330	ArgumentList	scrambled_password		4898185	1					
ANR	4898331	Argument	scrambled_password		4898185	0					
ANR	4898332	Identifier	scrambled_password		4898185	0					
ANR	4898333	Argument	1		4898185	1					
ANR	4898334	PrimaryExpression	1		4898185	0					
ANR	4898335	Argument	MAX_PASSWORD_LENGTH + 1		4898185	2					
ANR	4898336	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4898185	0		+			
ANR	4898337	Identifier	MAX_PASSWORD_LENGTH		4898185	0					
ANR	4898338	PrimaryExpression	1		4898185	1					
ANR	4898339	Argument	fp		4898185	3					
ANR	4898340	Identifier	fp		4898185	0					
ANR	4898341	ExpressionStatement	fclose ( fp )	83:2:2560:2570	4898185	9	True				
ANR	4898342	CallExpression	fclose ( fp )		4898185	0					
ANR	4898343	Callee	fclose		4898185	0					
ANR	4898344	Identifier	fclose		4898185	0					
ANR	4898345	ArgumentList	fp		4898185	1					
ANR	4898346	Argument	fp		4898185	0					
ANR	4898347	Identifier	fp		4898185	0					
ANR	4898348	IfStatement	if ( sz != MAX_PASSWORD_LENGTH + 1 )		4898185	10					
ANR	4898349	Condition	sz != MAX_PASSWORD_LENGTH + 1	84:6:2578:2606	4898185	0	True				
ANR	4898350	EqualityExpression	sz != MAX_PASSWORD_LENGTH + 1		4898185	0		!=			
ANR	4898351	Identifier	sz		4898185	0					
ANR	4898352	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4898185	1		+			
ANR	4898353	Identifier	MAX_PASSWORD_LENGTH		4898185	0					
ANR	4898354	PrimaryExpression	1		4898185	1					
ANR	4898355	CompoundStatement		27:37:861:861	4898185	1					
ANR	4898356	Statement	dprintf	85:3:2614:2620	4898185	0	True				
ANR	4898357	Statement	(	85:10:2621:2621	4898185	1	True				
ANR	4898358	Statement	D_ALWAYS	85:11:2622:2629	4898185	2	True				
ANR	4898359	Statement	","	85:19:2630:2630	4898185	3	True				
ANR	4898360	Statement	"""store_cred_service: """	86:11:2643:2664	4898185	4	True				
ANR	4898361	Statement	"""error writing to password file: %s (%d)\\n"""	87:15:2681:2723	4898185	5	True				
ANR	4898362	Statement	","	87:58:2724:2724	4898185	6	True				
ANR	4898363	Statement	strerror	88:5:2731:2738	4898185	7	True				
ANR	4898364	Statement	(	88:13:2739:2739	4898185	8	True				
ANR	4898365	Statement	errno	88:14:2740:2744	4898185	9	True				
ANR	4898366	Statement	)	88:19:2745:2745	4898185	10	True				
ANR	4898367	Statement	","	88:20:2746:2746	4898185	11	True				
ANR	4898368	Statement	errno	89:11:2759:2763	4898185	12	True				
ANR	4898369	Statement	)	89:16:2764:2764	4898185	13	True				
ANR	4898370	ExpressionStatement		89:17:2765:2765	4898185	14	True				
ANR	4898371	ReturnStatement	return FAILURE ;	90:3:2770:2784	4898185	15	True				
ANR	4898372	Identifier	FAILURE		4898185	0					
ANR	4898373	ReturnStatement	return SUCCESS ;	92:2:2792:2806	4898185	11	True				
ANR	4898374	Identifier	SUCCESS		4898185	0					
ANR	4898375	ReturnType	int		4898185	1					
ANR	4898376	Identifier	write_password_file		4898185	2					
ANR	4898377	ParameterList	"const char * path , const char * password"		4898185	3					
ANR	4898378	Parameter	const char * path	57:24:1707:1722	4898185	0	True				
ANR	4898379	ParameterType	const char *		4898185	0					
ANR	4898380	Identifier	path		4898185	1					
ANR	4898381	Parameter	const char * password	57:42:1725:1744	4898185	1	True				
ANR	4898382	ParameterType	const char *		4898185	0					
ANR	4898383	Identifier	password		4898185	1					
ANR	4898384	CFGEntryNode	ENTRY		4898185		True				
ANR	4898385	CFGExitNode	EXIT		4898185		True				
ANR	4898386	Symbol	password_len		4898185						
ANR	4898387	Symbol	errno		4898185						
ANR	4898388	Symbol	safe_open_wrapper_follow		4898185						
ANR	4898389	Symbol	NULL		4898185						
ANR	4898390	Symbol	SUCCESS		4898185						
ANR	4898391	Symbol	O_CREAT		4898185						
ANR	4898392	Symbol	sz		4898185						
ANR	4898393	Symbol	D_ALWAYS		4898185						
ANR	4898394	Symbol	fwrite		4898185						
ANR	4898395	Symbol	fp		4898185						
ANR	4898396	Symbol	fdopen		4898185						
ANR	4898397	Symbol	FAILURE		4898185						
ANR	4898398	Symbol	strerror		4898185						
ANR	4898399	Symbol	path		4898185						
ANR	4898400	Symbol	strlen		4898185						
ANR	4898401	Symbol	password		4898185						
ANR	4898402	Symbol	O_TRUNC		4898185						
ANR	4898403	Symbol	scrambled_password		4898185						
ANR	4898404	Symbol	O_WRONLY		4898185						
ANR	4898405	Symbol	MAX_PASSWORD_LENGTH		4898185						
ANR	4898406	Symbol	fd		4898185						
ANR	4898407	Function	getStoredCredential	95:0:2811:4697							
ANR	4898408	FunctionDef	"getStoredCredential (const char * username , const char * domain)"		4898407	0					
ANR	4898409	CompoundStatement		96:0:2879:4697	4898407	0					
ANR	4898410	IfStatement	if ( ! username || ! domain )		4898407	0					
ANR	4898411	Condition	! username || ! domain	99:6:2931:2950	4898407	0	True				
ANR	4898412	OrExpression	! username || ! domain		4898407	0		||			
ANR	4898413	UnaryOperationExpression	! username		4898407	0					
ANR	4898414	UnaryOperator	!		4898407	0					
ANR	4898415	Identifier	username		4898407	1					
ANR	4898416	UnaryOperationExpression	! domain		4898407	1					
ANR	4898417	UnaryOperator	!		4898407	0					
ANR	4898418	Identifier	domain		4898407	1					
ANR	4898419	CompoundStatement		4:29:74:74	4898407	1					
ANR	4898420	ReturnStatement	return NULL ;	100:2:2958:2969	4898407	0	True				
ANR	4898421	Identifier	NULL		4898407	0					
ANR	4898422	IfStatement	"if ( strcmp ( username , POOL_PASSWORD_USERNAME ) != 0 )"		4898407	1					
ANR	4898423	Condition	"strcmp ( username , POOL_PASSWORD_USERNAME ) != 0"	103:5:2980:3024	4898407	0	True				
ANR	4898424	EqualityExpression	"strcmp ( username , POOL_PASSWORD_USERNAME ) != 0"		4898407	0		!=			
ANR	4898425	CallExpression	"strcmp ( username , POOL_PASSWORD_USERNAME )"		4898407	0					
ANR	4898426	Callee	strcmp		4898407	0					
ANR	4898427	Identifier	strcmp		4898407	0					
ANR	4898428	ArgumentList	username		4898407	1					
ANR	4898429	Argument	username		4898407	0					
ANR	4898430	Identifier	username		4898407	0					
ANR	4898431	Argument	POOL_PASSWORD_USERNAME		4898407	1					
ANR	4898432	Identifier	POOL_PASSWORD_USERNAME		4898407	0					
ANR	4898433	PrimaryExpression	0		4898407	1					
ANR	4898434	CompoundStatement		8:52:147:147	4898407	1					
ANR	4898435	Statement	dprintf	104:2:3031:3037	4898407	0	True				
ANR	4898436	Statement	(	104:9:3038:3038	4898407	1	True				
ANR	4898437	Statement	D_ALWAYS	104:10:3039:3046	4898407	2	True				
ANR	4898438	Statement	","	104:18:3047:3047	4898407	3	True				
ANR	4898439	Statement	"""getStoredCredential: """	105:10:3059:3081	4898407	4	True				
ANR	4898440	Statement	"""only pool password is supported on UNIX\\n"""	106:14:3097:3139	4898407	5	True				
ANR	4898441	Statement	)	106:57:3140:3140	4898407	6	True				
ANR	4898442	ExpressionStatement		106:58:3141:3141	4898407	7	True				
ANR	4898443	ReturnStatement	return NULL ;	107:2:3145:3156	4898407	8	True				
ANR	4898444	Identifier	NULL		4898407	0					
ANR	4898445	IdentifierDeclStatement	"char * filename = param ( ""SEC_PASSWORD_FILE"" ) ;"	110:1:3164:3207	4898407	2	True				
ANR	4898446	IdentifierDecl	"* filename = param ( ""SEC_PASSWORD_FILE"" )"		4898407	0					
ANR	4898447	IdentifierDeclType	char *		4898407	0					
ANR	4898448	Identifier	filename		4898407	1					
ANR	4898449	AssignmentExpression	"* filename = param ( ""SEC_PASSWORD_FILE"" )"		4898407	2		=			
ANR	4898450	Identifier	filename		4898407	0					
ANR	4898451	CallExpression	"param ( ""SEC_PASSWORD_FILE"" )"		4898407	1					
ANR	4898452	Callee	param		4898407	0					
ANR	4898453	Identifier	param		4898407	0					
ANR	4898454	ArgumentList	"""SEC_PASSWORD_FILE"""		4898407	1					
ANR	4898455	Argument	"""SEC_PASSWORD_FILE"""		4898407	0					
ANR	4898456	PrimaryExpression	"""SEC_PASSWORD_FILE"""		4898407	0					
ANR	4898457	IfStatement	if ( filename == NULL )		4898407	3					
ANR	4898458	Condition	filename == NULL	111:5:3214:3229	4898407	0	True				
ANR	4898459	EqualityExpression	filename == NULL		4898407	0		==			
ANR	4898460	Identifier	filename		4898407	0					
ANR	4898461	Identifier	NULL		4898407	1					
ANR	4898462	CompoundStatement		16:23:352:352	4898407	1					
ANR	4898463	Statement	dprintf	112:2:3236:3242	4898407	0	True				
ANR	4898464	Statement	(	112:9:3243:3243	4898407	1	True				
ANR	4898465	Statement	D_ALWAYS	112:10:3244:3251	4898407	2	True				
ANR	4898466	Statement	","	112:18:3252:3252	4898407	3	True				
ANR	4898467	Statement	"""error fetching pool password; """	113:10:3264:3295	4898407	4	True				
ANR	4898468	Statement	"""SEC_PASSWORD_FILE not defined\\n"""	114:14:3311:3343	4898407	5	True				
ANR	4898469	Statement	)	114:47:3344:3344	4898407	6	True				
ANR	4898470	ExpressionStatement		114:48:3345:3345	4898407	7	True				
ANR	4898471	ReturnStatement	return NULL ;	115:2:3349:3360	4898407	8	True				
ANR	4898472	Identifier	NULL		4898407	0					
ANR	4898473	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	119:1:3414:3447	4898407	4	True				
ANR	4898474	IdentifierDecl	priv = set_root_priv ( )		4898407	0					
ANR	4898475	IdentifierDeclType	priv_state		4898407	0					
ANR	4898476	Identifier	priv		4898407	1					
ANR	4898477	AssignmentExpression	priv = set_root_priv ( )		4898407	2		=			
ANR	4898478	Identifier	priv		4898407	0					
ANR	4898479	CallExpression	set_root_priv ( )		4898407	1					
ANR	4898480	Callee	set_root_priv		4898407	0					
ANR	4898481	Identifier	set_root_priv		4898407	0					
ANR	4898482	ArgumentList			4898407	1					
ANR	4898483	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , ""r"" ) ;"	120:1:3450:3501	4898407	5	True				
ANR	4898484	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , ""r"" )"		4898407	0					
ANR	4898485	IdentifierDeclType	FILE *		4898407	0					
ANR	4898486	Identifier	fp		4898407	1					
ANR	4898487	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , ""r"" )"		4898407	2		=			
ANR	4898488	Identifier	fp		4898407	0					
ANR	4898489	CallExpression	"safe_fopen_wrapper_follow ( filename , ""r"" )"		4898407	1					
ANR	4898490	Callee	safe_fopen_wrapper_follow		4898407	0					
ANR	4898491	Identifier	safe_fopen_wrapper_follow		4898407	0					
ANR	4898492	ArgumentList	filename		4898407	1					
ANR	4898493	Argument	filename		4898407	0					
ANR	4898494	Identifier	filename		4898407	0					
ANR	4898495	Argument	"""r"""		4898407	1					
ANR	4898496	PrimaryExpression	"""r"""		4898407	0					
ANR	4898497	ExpressionStatement	set_priv ( priv )	121:1:3504:3518	4898407	6	True				
ANR	4898498	CallExpression	set_priv ( priv )		4898407	0					
ANR	4898499	Callee	set_priv		4898407	0					
ANR	4898500	Identifier	set_priv		4898407	0					
ANR	4898501	ArgumentList	priv		4898407	1					
ANR	4898502	Argument	priv		4898407	0					
ANR	4898503	Identifier	priv		4898407	0					
ANR	4898504	IfStatement	if ( fp == NULL )		4898407	7					
ANR	4898505	Condition	fp == NULL	122:5:3525:3534	4898407	0	True				
ANR	4898506	EqualityExpression	fp == NULL		4898407	0		==			
ANR	4898507	Identifier	fp		4898407	0					
ANR	4898508	Identifier	NULL		4898407	1					
ANR	4898509	CompoundStatement		27:17:657:657	4898407	1					
ANR	4898510	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"	123:2:3541:3693	4898407	0	True				
ANR	4898511	CallExpression	"dprintf ( D_FULLDEBUG , ""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"		4898407	0					
ANR	4898512	Callee	dprintf		4898407	0					
ANR	4898513	Identifier	dprintf		4898407	0					
ANR	4898514	ArgumentList	D_FULLDEBUG		4898407	1					
ANR	4898515	Argument	D_FULLDEBUG		4898407	0					
ANR	4898516	Identifier	D_FULLDEBUG		4898407	0					
ANR	4898517	Argument	"""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		4898407	1					
ANR	4898518	PrimaryExpression	"""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		4898407	0					
ANR	4898519	Argument	filename		4898407	2					
ANR	4898520	Identifier	filename		4898407	0					
ANR	4898521	Argument	strerror ( errno )		4898407	3					
ANR	4898522	CallExpression	strerror ( errno )		4898407	0					
ANR	4898523	Callee	strerror		4898407	0					
ANR	4898524	Identifier	strerror		4898407	0					
ANR	4898525	ArgumentList	errno		4898407	1					
ANR	4898526	Argument	errno		4898407	0					
ANR	4898527	Identifier	errno		4898407	0					
ANR	4898528	Argument	errno		4898407	4					
ANR	4898529	Identifier	errno		4898407	0					
ANR	4898530	ExpressionStatement	free ( filename )	128:2:3697:3711	4898407	1	True				
ANR	4898531	CallExpression	free ( filename )		4898407	0					
ANR	4898532	Callee	free		4898407	0					
ANR	4898533	Identifier	free		4898407	0					
ANR	4898534	ArgumentList	filename		4898407	1					
ANR	4898535	Argument	filename		4898407	0					
ANR	4898536	Identifier	filename		4898407	0					
ANR	4898537	ReturnStatement	return NULL ;	129:2:3715:3726	4898407	2	True				
ANR	4898538	Identifier	NULL		4898407	0					
ANR	4898539	IdentifierDeclStatement	struct stat st ;	133:1:3783:3797	4898407	8	True				
ANR	4898540	IdentifierDecl	st		4898407	0					
ANR	4898541	IdentifierDeclType	struct stat		4898407	0					
ANR	4898542	Identifier	st		4898407	1					
ANR	4898543	IfStatement	"if ( fstat ( fileno ( fp ) , & st ) == - 1 )"		4898407	9					
ANR	4898544	Condition	"fstat ( fileno ( fp ) , & st ) == - 1"	134:5:3804:3831	4898407	0	True				
ANR	4898545	EqualityExpression	"fstat ( fileno ( fp ) , & st ) == - 1"		4898407	0		==			
ANR	4898546	CallExpression	"fstat ( fileno ( fp ) , & st )"		4898407	0					
ANR	4898547	Callee	fstat		4898407	0					
ANR	4898548	Identifier	fstat		4898407	0					
ANR	4898549	ArgumentList	fileno ( fp )		4898407	1					
ANR	4898550	Argument	fileno ( fp )		4898407	0					
ANR	4898551	CallExpression	fileno ( fp )		4898407	0					
ANR	4898552	Callee	fileno		4898407	0					
ANR	4898553	Identifier	fileno		4898407	0					
ANR	4898554	ArgumentList	fp		4898407	1					
ANR	4898555	Argument	fp		4898407	0					
ANR	4898556	Identifier	fp		4898407	0					
ANR	4898557	Argument	& st		4898407	1					
ANR	4898558	UnaryOperationExpression	& st		4898407	0					
ANR	4898559	UnaryOperator	&		4898407	0					
ANR	4898560	Identifier	st		4898407	1					
ANR	4898561	UnaryOperationExpression	- 1		4898407	1					
ANR	4898562	UnaryOperator	-		4898407	0					
ANR	4898563	PrimaryExpression	1		4898407	1					
ANR	4898564	CompoundStatement		39:35:954:954	4898407	1					
ANR	4898565	ExpressionStatement	"dprintf ( D_ALWAYS , ""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"	135:2:3838:3989	4898407	0	True				
ANR	4898566	CallExpression	"dprintf ( D_ALWAYS , ""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"		4898407	0					
ANR	4898567	Callee	dprintf		4898407	0					
ANR	4898568	Identifier	dprintf		4898407	0					
ANR	4898569	ArgumentList	D_ALWAYS		4898407	1					
ANR	4898570	Argument	D_ALWAYS		4898407	0					
ANR	4898571	Identifier	D_ALWAYS		4898407	0					
ANR	4898572	Argument	"""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		4898407	1					
ANR	4898573	PrimaryExpression	"""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		4898407	0					
ANR	4898574	Argument	filename		4898407	2					
ANR	4898575	Identifier	filename		4898407	0					
ANR	4898576	Argument	strerror ( errno )		4898407	3					
ANR	4898577	CallExpression	strerror ( errno )		4898407	0					
ANR	4898578	Callee	strerror		4898407	0					
ANR	4898579	Identifier	strerror		4898407	0					
ANR	4898580	ArgumentList	errno		4898407	1					
ANR	4898581	Argument	errno		4898407	0					
ANR	4898582	Identifier	errno		4898407	0					
ANR	4898583	Argument	errno		4898407	4					
ANR	4898584	Identifier	errno		4898407	0					
ANR	4898585	ExpressionStatement	fclose ( fp )	140:2:3993:4003	4898407	1	True				
ANR	4898586	CallExpression	fclose ( fp )		4898407	0					
ANR	4898587	Callee	fclose		4898407	0					
ANR	4898588	Identifier	fclose		4898407	0					
ANR	4898589	ArgumentList	fp		4898407	1					
ANR	4898590	Argument	fp		4898407	0					
ANR	4898591	Identifier	fp		4898407	0					
ANR	4898592	ExpressionStatement	free ( filename )	141:2:4007:4021	4898407	2	True				
ANR	4898593	CallExpression	free ( filename )		4898407	0					
ANR	4898594	Callee	free		4898407	0					
ANR	4898595	Identifier	free		4898407	0					
ANR	4898596	ArgumentList	filename		4898407	1					
ANR	4898597	Argument	filename		4898407	0					
ANR	4898598	Identifier	filename		4898407	0					
ANR	4898599	ReturnStatement	return NULL ;	142:2:4025:4036	4898407	3	True				
ANR	4898600	Identifier	NULL		4898407	0					
ANR	4898601	ExpressionStatement	free ( filename )	144:1:4042:4056	4898407	10	True				
ANR	4898602	CallExpression	free ( filename )		4898407	0					
ANR	4898603	Callee	free		4898407	0					
ANR	4898604	Identifier	free		4898407	0					
ANR	4898605	ArgumentList	filename		4898407	1					
ANR	4898606	Argument	filename		4898407	0					
ANR	4898607	Identifier	filename		4898407	0					
ANR	4898608	IfStatement	if ( st . st_uid != get_my_uid ( ) )		4898407	11					
ANR	4898609	Condition	st . st_uid != get_my_uid ( )	145:5:4063:4087	4898407	0	True				
ANR	4898610	EqualityExpression	st . st_uid != get_my_uid ( )		4898407	0		!=			
ANR	4898611	MemberAccess	st . st_uid		4898407	0					
ANR	4898612	Identifier	st		4898407	0					
ANR	4898613	Identifier	st_uid		4898407	1					
ANR	4898614	CallExpression	get_my_uid ( )		4898407	1					
ANR	4898615	Callee	get_my_uid		4898407	0					
ANR	4898616	Identifier	get_my_uid		4898407	0					
ANR	4898617	ArgumentList			4898407	1					
ANR	4898618	CompoundStatement		50:32:1210:1210	4898407	1					
ANR	4898619	Statement	dprintf	146:2:4094:4100	4898407	0	True				
ANR	4898620	Statement	(	146:9:4101:4101	4898407	1	True				
ANR	4898621	Statement	D_ALWAYS	146:10:4102:4109	4898407	2	True				
ANR	4898622	Statement	","	146:18:4110:4110	4898407	3	True				
ANR	4898623	Statement	"""error: SEC_PASSWORD_FILE must be owned """	147:10:4122:4162	4898407	4	True				
ANR	4898624	Statement	"""by Condor's real uid\\n"""	148:14:4178:4201	4898407	5	True				
ANR	4898625	Statement	)	148:38:4202:4202	4898407	6	True				
ANR	4898626	ExpressionStatement		148:39:4203:4203	4898407	7	True				
ANR	4898627	ExpressionStatement	fclose ( fp )	149:2:4207:4217	4898407	8	True				
ANR	4898628	CallExpression	fclose ( fp )		4898407	0					
ANR	4898629	Callee	fclose		4898407	0					
ANR	4898630	Identifier	fclose		4898407	0					
ANR	4898631	ArgumentList	fp		4898407	1					
ANR	4898632	Argument	fp		4898407	0					
ANR	4898633	Identifier	fp		4898407	0					
ANR	4898634	ReturnStatement	return NULL ;	150:2:4221:4232	4898407	9	True				
ANR	4898635	Identifier	NULL		4898407	0					
ANR	4898636	IdentifierDeclStatement	char scrambled_pw [ MAX_PASSWORD_LENGTH + 1 ] ;	153:1:4239:4281	4898407	12	True				
ANR	4898637	IdentifierDecl	scrambled_pw [ MAX_PASSWORD_LENGTH + 1 ]		4898407	0					
ANR	4898638	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH + 1 ]		4898407	0					
ANR	4898639	Identifier	scrambled_pw		4898407	1					
ANR	4898640	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4898407	2		+			
ANR	4898641	Identifier	MAX_PASSWORD_LENGTH		4898407	0					
ANR	4898642	PrimaryExpression	1		4898407	1					
ANR	4898643	IdentifierDeclStatement	"size_t sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp ) ;"	154:1:4284:4343	4898407	13	True				
ANR	4898644	IdentifierDecl	"sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		4898407	0					
ANR	4898645	IdentifierDeclType	size_t		4898407	0					
ANR	4898646	Identifier	sz		4898407	1					
ANR	4898647	AssignmentExpression	"sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		4898407	2		=			
ANR	4898648	Identifier	sz		4898407	0					
ANR	4898649	CallExpression	"fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		4898407	1					
ANR	4898650	Callee	fread		4898407	0					
ANR	4898651	Identifier	fread		4898407	0					
ANR	4898652	ArgumentList	scrambled_pw		4898407	1					
ANR	4898653	Argument	scrambled_pw		4898407	0					
ANR	4898654	Identifier	scrambled_pw		4898407	0					
ANR	4898655	Argument	1		4898407	1					
ANR	4898656	PrimaryExpression	1		4898407	0					
ANR	4898657	Argument	MAX_PASSWORD_LENGTH		4898407	2					
ANR	4898658	Identifier	MAX_PASSWORD_LENGTH		4898407	0					
ANR	4898659	Argument	fp		4898407	3					
ANR	4898660	Identifier	fp		4898407	0					
ANR	4898661	ExpressionStatement	fclose ( fp )	155:1:4346:4356	4898407	14	True				
ANR	4898662	CallExpression	fclose ( fp )		4898407	0					
ANR	4898663	Callee	fclose		4898407	0					
ANR	4898664	Identifier	fclose		4898407	0					
ANR	4898665	ArgumentList	fp		4898407	1					
ANR	4898666	Argument	fp		4898407	0					
ANR	4898667	Identifier	fp		4898407	0					
ANR	4898668	IfStatement	if ( sz == 0 )		4898407	15					
ANR	4898669	Condition	sz == 0	157:5:4364:4370	4898407	0	True				
ANR	4898670	EqualityExpression	sz == 0		4898407	0		==			
ANR	4898671	Identifier	sz		4898407	0					
ANR	4898672	PrimaryExpression	0		4898407	1					
ANR	4898673	CompoundStatement		62:14:1493:1493	4898407	1					
ANR	4898674	ExpressionStatement	"dprintf ( D_ALWAYS , ""error reading pool password (file may be empty)\\n"" )"	158:2:4377:4447	4898407	0	True				
ANR	4898675	CallExpression	"dprintf ( D_ALWAYS , ""error reading pool password (file may be empty)\\n"" )"		4898407	0					
ANR	4898676	Callee	dprintf		4898407	0					
ANR	4898677	Identifier	dprintf		4898407	0					
ANR	4898678	ArgumentList	D_ALWAYS		4898407	1					
ANR	4898679	Argument	D_ALWAYS		4898407	0					
ANR	4898680	Identifier	D_ALWAYS		4898407	0					
ANR	4898681	Argument	"""error reading pool password (file may be empty)\\n"""		4898407	1					
ANR	4898682	PrimaryExpression	"""error reading pool password (file may be empty)\\n"""		4898407	0					
ANR	4898683	ReturnStatement	return NULL ;	159:2:4451:4462	4898407	1	True				
ANR	4898684	Identifier	NULL		4898407	0					
ANR	4898685	ExpressionStatement	scrambled_pw [ sz ] = '\\0'	161:1:4468:4491	4898407	16	True				
ANR	4898686	AssignmentExpression	scrambled_pw [ sz ] = '\\0'		4898407	0		=			
ANR	4898687	ArrayIndexing	scrambled_pw [ sz ]		4898407	0					
ANR	4898688	Identifier	scrambled_pw		4898407	0					
ANR	4898689	Identifier	sz		4898407	1					
ANR	4898690	PrimaryExpression	'\\0'		4898407	1					
ANR	4898691	IdentifierDeclStatement	int len = strlen ( scrambled_pw ) ;	164:1:4557:4587	4898407	17	True				
ANR	4898692	IdentifierDecl	len = strlen ( scrambled_pw )		4898407	0					
ANR	4898693	IdentifierDeclType	int		4898407	0					
ANR	4898694	Identifier	len		4898407	1					
ANR	4898695	AssignmentExpression	len = strlen ( scrambled_pw )		4898407	2		=			
ANR	4898696	Identifier	len		4898407	0					
ANR	4898697	CallExpression	strlen ( scrambled_pw )		4898407	1					
ANR	4898698	Callee	strlen		4898407	0					
ANR	4898699	Identifier	strlen		4898407	0					
ANR	4898700	ArgumentList	scrambled_pw		4898407	1					
ANR	4898701	Argument	scrambled_pw		4898407	0					
ANR	4898702	Identifier	scrambled_pw		4898407	0					
ANR	4898703	IdentifierDeclStatement	char * pw = ( char * ) malloc ( len + 1 ) ;	165:1:4590:4624	4898407	18	True				
ANR	4898704	IdentifierDecl	* pw = ( char * ) malloc ( len + 1 )		4898407	0					
ANR	4898705	IdentifierDeclType	char *		4898407	0					
ANR	4898706	Identifier	pw		4898407	1					
ANR	4898707	AssignmentExpression	* pw = ( char * ) malloc ( len + 1 )		4898407	2		=			
ANR	4898708	Identifier	pw		4898407	0					
ANR	4898709	CastExpression	( char * ) malloc ( len + 1 )		4898407	1					
ANR	4898710	CastTarget	char *		4898407	0					
ANR	4898711	CallExpression	malloc ( len + 1 )		4898407	1					
ANR	4898712	Callee	malloc		4898407	0					
ANR	4898713	Identifier	malloc		4898407	0					
ANR	4898714	ArgumentList	len + 1		4898407	1					
ANR	4898715	Argument	len + 1		4898407	0					
ANR	4898716	AdditiveExpression	len + 1		4898407	0		+			
ANR	4898717	Identifier	len		4898407	0					
ANR	4898718	PrimaryExpression	1		4898407	1					
ANR	4898719	ExpressionStatement	"simple_scramble ( pw , scrambled_pw , len )"	166:1:4627:4665	4898407	19	True				
ANR	4898720	CallExpression	"simple_scramble ( pw , scrambled_pw , len )"		4898407	0					
ANR	4898721	Callee	simple_scramble		4898407	0					
ANR	4898722	Identifier	simple_scramble		4898407	0					
ANR	4898723	ArgumentList	pw		4898407	1					
ANR	4898724	Argument	pw		4898407	0					
ANR	4898725	Identifier	pw		4898407	0					
ANR	4898726	Argument	scrambled_pw		4898407	1					
ANR	4898727	Identifier	scrambled_pw		4898407	0					
ANR	4898728	Argument	len		4898407	2					
ANR	4898729	Identifier	len		4898407	0					
ANR	4898730	ExpressionStatement	pw [ len ] = '\\0'	167:1:4668:4682	4898407	20	True				
ANR	4898731	AssignmentExpression	pw [ len ] = '\\0'		4898407	0		=			
ANR	4898732	ArrayIndexing	pw [ len ]		4898407	0					
ANR	4898733	Identifier	pw		4898407	0					
ANR	4898734	Identifier	len		4898407	1					
ANR	4898735	PrimaryExpression	'\\0'		4898407	1					
ANR	4898736	ReturnStatement	return pw ;	169:1:4686:4695	4898407	21	True				
ANR	4898737	Identifier	pw		4898407	0					
ANR	4898738	ReturnType	char *		4898407	1					
ANR	4898739	Identifier	getStoredCredential		4898407	2					
ANR	4898740	ParameterList	"const char * username , const char * domain"		4898407	3					
ANR	4898741	Parameter	const char * username	95:26:2837:2856	4898407	0	True				
ANR	4898742	ParameterType	const char *		4898407	0					
ANR	4898743	Identifier	username		4898407	1					
ANR	4898744	Parameter	const char * domain	95:48:2859:2876	4898407	1	True				
ANR	4898745	ParameterType	const char *		4898407	0					
ANR	4898746	Identifier	domain		4898407	1					
ANR	4898747	CFGEntryNode	ENTRY		4898407		True				
ANR	4898748	CFGExitNode	EXIT		4898407		True				
ANR	4898749	Symbol	pw		4898407						
ANR	4898750	Symbol	fp		4898407						
ANR	4898751	Symbol	& st		4898407						
ANR	4898752	Symbol	* sz		4898407						
ANR	4898753	Symbol	strlen		4898407						
ANR	4898754	Symbol	len		4898407						
ANR	4898755	Symbol	param		4898407						
ANR	4898756	Symbol	st . st_uid		4898407						
ANR	4898757	Symbol	priv		4898407						
ANR	4898758	Symbol	get_my_uid		4898407						
ANR	4898759	Symbol	safe_fopen_wrapper_follow		4898407						
ANR	4898760	Symbol	strcmp		4898407						
ANR	4898761	Symbol	st		4898407						
ANR	4898762	Symbol	malloc		4898407						
ANR	4898763	Symbol	errno		4898407						
ANR	4898764	Symbol	scrambled_pw		4898407						
ANR	4898765	Symbol	NULL		4898407						
ANR	4898766	Symbol	sz		4898407						
ANR	4898767	Symbol	D_ALWAYS		4898407						
ANR	4898768	Symbol	fstat		4898407						
ANR	4898769	Symbol	set_root_priv		4898407						
ANR	4898770	Symbol	D_FULLDEBUG		4898407						
ANR	4898771	Symbol	fread		4898407						
ANR	4898772	Symbol	* pw		4898407						
ANR	4898773	Symbol	strerror		4898407						
ANR	4898774	Symbol	filename		4898407						
ANR	4898775	Symbol	* scrambled_pw		4898407						
ANR	4898776	Symbol	POOL_PASSWORD_USERNAME		4898407						
ANR	4898777	Symbol	fileno		4898407						
ANR	4898778	Symbol	domain		4898407						
ANR	4898779	Symbol	MAX_PASSWORD_LENGTH		4898407						
ANR	4898780	Symbol	username		4898407						
ANR	4898781	Symbol	* len		4898407						
ANR	4898782	Function	store_cred_service	172:0:4700:6458							
ANR	4898783	FunctionDef	"store_cred_service (const char * user , const char * pw , int mode)"		4898782	0					
ANR	4898784	CompoundStatement		173:0:4767:6458	4898782	0					
ANR	4898785	IdentifierDeclStatement	"const char * at = strchr ( user , '@' ) ;"	174:1:4770:4804	4898782	0	True				
ANR	4898786	IdentifierDecl	"* at = strchr ( user , '@' )"		4898782	0					
ANR	4898787	IdentifierDeclType	const char *		4898782	0					
ANR	4898788	Identifier	at		4898782	1					
ANR	4898789	AssignmentExpression	"* at = strchr ( user , '@' )"		4898782	2		=			
ANR	4898790	Identifier	at		4898782	0					
ANR	4898791	CallExpression	"strchr ( user , '@' )"		4898782	1					
ANR	4898792	Callee	strchr		4898782	0					
ANR	4898793	Identifier	strchr		4898782	0					
ANR	4898794	ArgumentList	user		4898782	1					
ANR	4898795	Argument	user		4898782	0					
ANR	4898796	Identifier	user		4898782	0					
ANR	4898797	Argument	'@'		4898782	1					
ANR	4898798	PrimaryExpression	'@'		4898782	0					
ANR	4898799	IfStatement	if ( ( at == NULL ) || ( at == user ) )		4898782	1					
ANR	4898800	Condition	( at == NULL ) || ( at == user )	175:5:4811:4838	4898782	0	True				
ANR	4898801	OrExpression	( at == NULL ) || ( at == user )		4898782	0		||			
ANR	4898802	EqualityExpression	at == NULL		4898782	0		==			
ANR	4898803	Identifier	at		4898782	0					
ANR	4898804	Identifier	NULL		4898782	1					
ANR	4898805	EqualityExpression	at == user		4898782	1		==			
ANR	4898806	Identifier	at		4898782	0					
ANR	4898807	Identifier	user		4898782	1					
ANR	4898808	CompoundStatement		3:35:73:73	4898782	1					
ANR	4898809	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: malformed user name\\n"" )"	176:2:4845:4899	4898782	0	True				
ANR	4898810	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: malformed user name\\n"" )"		4898782	0					
ANR	4898811	Callee	dprintf		4898782	0					
ANR	4898812	Identifier	dprintf		4898782	0					
ANR	4898813	ArgumentList	D_ALWAYS		4898782	1					
ANR	4898814	Argument	D_ALWAYS		4898782	0					
ANR	4898815	Identifier	D_ALWAYS		4898782	0					
ANR	4898816	Argument	"""store_cred: malformed user name\\n"""		4898782	1					
ANR	4898817	PrimaryExpression	"""store_cred: malformed user name\\n"""		4898782	0					
ANR	4898818	ReturnStatement	return FAILURE ;	177:2:4903:4917	4898782	1	True				
ANR	4898819	Identifier	FAILURE		4898782	0					
ANR	4898820	IfStatement	"if ( ( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 ) )"		4898782	2					
ANR	4898821	Condition	"( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 )"	179:5:4927:5045	4898782	0	True				
ANR	4898822	OrExpression	"( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 )"		4898782	0		||			
ANR	4898823	EqualityExpression	( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME )		4898782	0		!=			
ANR	4898824	CastExpression	( size_t ) ( at - user )		4898782	0					
ANR	4898825	CastTarget	size_t		4898782	0					
ANR	4898826	AdditiveExpression	at - user		4898782	1		-			
ANR	4898827	Identifier	at		4898782	0					
ANR	4898828	Identifier	user		4898782	1					
ANR	4898829	CallExpression	strlen ( POOL_PASSWORD_USERNAME )		4898782	1					
ANR	4898830	Callee	strlen		4898782	0					
ANR	4898831	Identifier	strlen		4898782	0					
ANR	4898832	ArgumentList	POOL_PASSWORD_USERNAME		4898782	1					
ANR	4898833	Argument	POOL_PASSWORD_USERNAME		4898782	0					
ANR	4898834	Identifier	POOL_PASSWORD_USERNAME		4898782	0					
ANR	4898835	EqualityExpression	"memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0"		4898782	1		!=			
ANR	4898836	CallExpression	"memcmp ( user , POOL_PASSWORD_USERNAME , at - user )"		4898782	0					
ANR	4898837	Callee	memcmp		4898782	0					
ANR	4898838	Identifier	memcmp		4898782	0					
ANR	4898839	ArgumentList	user		4898782	1					
ANR	4898840	Argument	user		4898782	0					
ANR	4898841	Identifier	user		4898782	0					
ANR	4898842	Argument	POOL_PASSWORD_USERNAME		4898782	1					
ANR	4898843	Identifier	POOL_PASSWORD_USERNAME		4898782	0					
ANR	4898844	Argument	at - user		4898782	2					
ANR	4898845	AdditiveExpression	at - user		4898782	0		-			
ANR	4898846	Identifier	at		4898782	0					
ANR	4898847	Identifier	user		4898782	1					
ANR	4898848	PrimaryExpression	0		4898782	1					
ANR	4898849	CompoundStatement		9:1:281:281	4898782	1					
ANR	4898850	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: only pool password is supported on UNIX\\n"" )"	182:2:5053:5127	4898782	0	True				
ANR	4898851	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: only pool password is supported on UNIX\\n"" )"		4898782	0					
ANR	4898852	Callee	dprintf		4898782	0					
ANR	4898853	Identifier	dprintf		4898782	0					
ANR	4898854	ArgumentList	D_ALWAYS		4898782	1					
ANR	4898855	Argument	D_ALWAYS		4898782	0					
ANR	4898856	Identifier	D_ALWAYS		4898782	0					
ANR	4898857	Argument	"""store_cred: only pool password is supported on UNIX\\n"""		4898782	1					
ANR	4898858	PrimaryExpression	"""store_cred: only pool password is supported on UNIX\\n"""		4898782	0					
ANR	4898859	ReturnStatement	return FAILURE ;	183:2:5131:5145	4898782	1	True				
ANR	4898860	Identifier	FAILURE		4898782	0					
ANR	4898861	IdentifierDeclStatement	char * filename ;	186:1:5152:5166	4898782	3	True				
ANR	4898862	IdentifierDecl	* filename		4898782	0					
ANR	4898863	IdentifierDeclType	char *		4898782	0					
ANR	4898864	Identifier	filename		4898782	1					
ANR	4898865	IfStatement	if ( mode != QUERY_MODE )		4898782	4					
ANR	4898866	Condition	mode != QUERY_MODE	187:5:5173:5190	4898782	0	True				
ANR	4898867	EqualityExpression	mode != QUERY_MODE		4898782	0		!=			
ANR	4898868	Identifier	mode		4898782	0					
ANR	4898869	Identifier	QUERY_MODE		4898782	1					
ANR	4898870	CompoundStatement		15:25:425:425	4898782	1					
ANR	4898871	ExpressionStatement	"filename = param ( ""SEC_PASSWORD_FILE"" )"	188:2:5197:5234	4898782	0	True				
ANR	4898872	AssignmentExpression	"filename = param ( ""SEC_PASSWORD_FILE"" )"		4898782	0		=			
ANR	4898873	Identifier	filename		4898782	0					
ANR	4898874	CallExpression	"param ( ""SEC_PASSWORD_FILE"" )"		4898782	1					
ANR	4898875	Callee	param		4898782	0					
ANR	4898876	Identifier	param		4898782	0					
ANR	4898877	ArgumentList	"""SEC_PASSWORD_FILE"""		4898782	1					
ANR	4898878	Argument	"""SEC_PASSWORD_FILE"""		4898782	0					
ANR	4898879	PrimaryExpression	"""SEC_PASSWORD_FILE"""		4898782	0					
ANR	4898880	IfStatement	if ( filename == NULL )		4898782	1					
ANR	4898881	Condition	filename == NULL	189:6:5242:5257	4898782	0	True				
ANR	4898882	EqualityExpression	filename == NULL		4898782	0		==			
ANR	4898883	Identifier	filename		4898782	0					
ANR	4898884	Identifier	NULL		4898782	1					
ANR	4898885	CompoundStatement		17:24:492:492	4898782	1					
ANR	4898886	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: SEC_PASSWORD_FILE not defined\\n"" )"	190:3:5265:5329	4898782	0	True				
ANR	4898887	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: SEC_PASSWORD_FILE not defined\\n"" )"		4898782	0					
ANR	4898888	Callee	dprintf		4898782	0					
ANR	4898889	Identifier	dprintf		4898782	0					
ANR	4898890	ArgumentList	D_ALWAYS		4898782	1					
ANR	4898891	Argument	D_ALWAYS		4898782	0					
ANR	4898892	Identifier	D_ALWAYS		4898782	0					
ANR	4898893	Argument	"""store_cred: SEC_PASSWORD_FILE not defined\\n"""		4898782	1					
ANR	4898894	PrimaryExpression	"""store_cred: SEC_PASSWORD_FILE not defined\\n"""		4898782	0					
ANR	4898895	ReturnStatement	return FAILURE ;	191:3:5334:5348	4898782	1	True				
ANR	4898896	Identifier	FAILURE		4898782	0					
ANR	4898897	IdentifierDeclStatement	int answer ;	195:1:5359:5369	4898782	5	True				
ANR	4898898	IdentifierDecl	answer		4898782	0					
ANR	4898899	IdentifierDeclType	int		4898782	0					
ANR	4898900	Identifier	answer		4898782	1					
ANR	4898901	SwitchStatement	switch ( mode )		4898782	6					
ANR	4898902	Condition	mode	196:9:5380:5383	4898782	0	True				
ANR	4898903	Identifier	mode		4898782	0					
ANR	4898904	CompoundStatement		24:15:618:618	4898782	1					
ANR	4898905	Label	case ADD_MODE :	197:1:5389:5402	4898782	0	True				
ANR	4898906	Identifier	ADD_MODE		4898782	0					
ANR	4898907	CompoundStatement		37:2:921:954	4898782	1					
ANR	4898908	ExpressionStatement	answer = FAILURE	198:2:5408:5424	4898782	0	True				
ANR	4898909	AssignmentExpression	answer = FAILURE		4898782	0		=			
ANR	4898910	Identifier	answer		4898782	0					
ANR	4898911	Identifier	FAILURE		4898782	1					
ANR	4898912	IdentifierDeclStatement	size_t pw_sz = strlen ( pw ) ;	199:2:5428:5453	4898782	1	True				
ANR	4898913	IdentifierDecl	pw_sz = strlen ( pw )		4898782	0					
ANR	4898914	IdentifierDeclType	size_t		4898782	0					
ANR	4898915	Identifier	pw_sz		4898782	1					
ANR	4898916	AssignmentExpression	pw_sz = strlen ( pw )		4898782	2		=			
ANR	4898917	Identifier	pw_sz		4898782	0					
ANR	4898918	CallExpression	strlen ( pw )		4898782	1					
ANR	4898919	Callee	strlen		4898782	0					
ANR	4898920	Identifier	strlen		4898782	0					
ANR	4898921	ArgumentList	pw		4898782	1					
ANR	4898922	Argument	pw		4898782	0					
ANR	4898923	Identifier	pw		4898782	0					
ANR	4898924	IfStatement	if ( ! pw_sz )		4898782	2					
ANR	4898925	Condition	! pw_sz	200:6:5461:5466	4898782	0	True				
ANR	4898926	UnaryOperationExpression	! pw_sz		4898782	0					
ANR	4898927	UnaryOperator	!		4898782	0					
ANR	4898928	Identifier	pw_sz		4898782	1					
ANR	4898929	CompoundStatement		28:14:701:701	4898782	1					
ANR	4898930	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: empty password not allowed\\n"" )"	201:3:5474:5554	4898782	0	True				
ANR	4898931	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: empty password not allowed\\n"" )"		4898782	0					
ANR	4898932	Callee	dprintf		4898782	0					
ANR	4898933	Identifier	dprintf		4898782	0					
ANR	4898934	ArgumentList	D_ALWAYS		4898782	1					
ANR	4898935	Argument	D_ALWAYS		4898782	0					
ANR	4898936	Identifier	D_ALWAYS		4898782	0					
ANR	4898937	Argument	"""store_cred_service: empty password not allowed\\n"""		4898782	1					
ANR	4898938	PrimaryExpression	"""store_cred_service: empty password not allowed\\n"""		4898782	0					
ANR	4898939	BreakStatement	break ;	203:3:5559:5564	4898782	1	True				
ANR	4898940	IfStatement	if ( pw_sz > MAX_PASSWORD_LENGTH )		4898782	3					
ANR	4898941	Condition	pw_sz > MAX_PASSWORD_LENGTH	205:6:5576:5602	4898782	0	True				
ANR	4898942	RelationalExpression	pw_sz > MAX_PASSWORD_LENGTH		4898782	0		>			
ANR	4898943	Identifier	pw_sz		4898782	0					
ANR	4898944	Identifier	MAX_PASSWORD_LENGTH		4898782	1					
ANR	4898945	CompoundStatement		33:35:837:837	4898782	1					
ANR	4898946	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: password too large\\n"" )"	206:3:5610:5671	4898782	0	True				
ANR	4898947	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: password too large\\n"" )"		4898782	0					
ANR	4898948	Callee	dprintf		4898782	0					
ANR	4898949	Identifier	dprintf		4898782	0					
ANR	4898950	ArgumentList	D_ALWAYS		4898782	1					
ANR	4898951	Argument	D_ALWAYS		4898782	0					
ANR	4898952	Identifier	D_ALWAYS		4898782	0					
ANR	4898953	Argument	"""store_cred_service: password too large\\n"""		4898782	1					
ANR	4898954	PrimaryExpression	"""store_cred_service: password too large\\n"""		4898782	0					
ANR	4898955	BreakStatement	break ;	207:3:5676:5681	4898782	1	True				
ANR	4898956	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	209:2:5689:5722	4898782	4	True				
ANR	4898957	IdentifierDecl	priv = set_root_priv ( )		4898782	0					
ANR	4898958	IdentifierDeclType	priv_state		4898782	0					
ANR	4898959	Identifier	priv		4898782	1					
ANR	4898960	AssignmentExpression	priv = set_root_priv ( )		4898782	2		=			
ANR	4898961	Identifier	priv		4898782	0					
ANR	4898962	CallExpression	set_root_priv ( )		4898782	1					
ANR	4898963	Callee	set_root_priv		4898782	0					
ANR	4898964	Identifier	set_root_priv		4898782	0					
ANR	4898965	ArgumentList			4898782	1					
ANR	4898966	ExpressionStatement	"answer = write_password_file ( filename , pw )"	210:2:5726:5768	4898782	5	True				
ANR	4898967	AssignmentExpression	"answer = write_password_file ( filename , pw )"		4898782	0		=			
ANR	4898968	Identifier	answer		4898782	0					
ANR	4898969	CallExpression	"write_password_file ( filename , pw )"		4898782	1					
ANR	4898970	Callee	write_password_file		4898782	0					
ANR	4898971	Identifier	write_password_file		4898782	0					
ANR	4898972	ArgumentList	filename		4898782	1					
ANR	4898973	Argument	filename		4898782	0					
ANR	4898974	Identifier	filename		4898782	0					
ANR	4898975	Argument	pw		4898782	1					
ANR	4898976	Identifier	pw		4898782	0					
ANR	4898977	ExpressionStatement	set_priv ( priv )	211:2:5772:5786	4898782	6	True				
ANR	4898978	CallExpression	set_priv ( priv )		4898782	0					
ANR	4898979	Callee	set_priv		4898782	0					
ANR	4898980	Identifier	set_priv		4898782	0					
ANR	4898981	ArgumentList	priv		4898782	1					
ANR	4898982	Argument	priv		4898782	0					
ANR	4898983	Identifier	priv		4898782	0					
ANR	4898984	BreakStatement	break ;	212:2:5790:5795	4898782	7	True				
ANR	4898985	Label	case DELETE_MODE :	214:1:5801:5817	4898782	2	True				
ANR	4898986	Identifier	DELETE_MODE		4898782	0					
ANR	4898987	CompoundStatement		44:2:1092:1118	4898782	3					
ANR	4898988	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	215:2:5823:5856	4898782	0	True				
ANR	4898989	IdentifierDecl	priv = set_root_priv ( )		4898782	0					
ANR	4898990	IdentifierDeclType	priv_state		4898782	0					
ANR	4898991	Identifier	priv		4898782	1					
ANR	4898992	AssignmentExpression	priv = set_root_priv ( )		4898782	2		=			
ANR	4898993	Identifier	priv		4898782	0					
ANR	4898994	CallExpression	set_root_priv ( )		4898782	1					
ANR	4898995	Callee	set_root_priv		4898782	0					
ANR	4898996	Identifier	set_root_priv		4898782	0					
ANR	4898997	ArgumentList			4898782	1					
ANR	4898998	IdentifierDeclStatement	int err = unlink ( filename ) ;	216:2:5860:5886	4898782	1	True				
ANR	4898999	IdentifierDecl	err = unlink ( filename )		4898782	0					
ANR	4899000	IdentifierDeclType	int		4898782	0					
ANR	4899001	Identifier	err		4898782	1					
ANR	4899002	AssignmentExpression	err = unlink ( filename )		4898782	2		=			
ANR	4899003	Identifier	err		4898782	0					
ANR	4899004	CallExpression	unlink ( filename )		4898782	1					
ANR	4899005	Callee	unlink		4898782	0					
ANR	4899006	Identifier	unlink		4898782	0					
ANR	4899007	ArgumentList	filename		4898782	1					
ANR	4899008	Argument	filename		4898782	0					
ANR	4899009	Identifier	filename		4898782	0					
ANR	4899010	ExpressionStatement	set_priv ( priv )	217:2:5890:5904	4898782	2	True				
ANR	4899011	CallExpression	set_priv ( priv )		4898782	0					
ANR	4899012	Callee	set_priv		4898782	0					
ANR	4899013	Identifier	set_priv		4898782	0					
ANR	4899014	ArgumentList	priv		4898782	1					
ANR	4899015	Argument	priv		4898782	0					
ANR	4899016	Identifier	priv		4898782	0					
ANR	4899017	IfStatement	if ( ! err )		4898782	3					
ANR	4899018	Condition	! err	218:6:5912:5915	4898782	0	True				
ANR	4899019	UnaryOperationExpression	! err		4898782	0					
ANR	4899020	UnaryOperator	!		4898782	0					
ANR	4899021	Identifier	err		4898782	1					
ANR	4899022	CompoundStatement		46:12:1150:1150	4898782	1					
ANR	4899023	ExpressionStatement	answer = SUCCESS	219:3:5923:5939	4898782	0	True				
ANR	4899024	AssignmentExpression	answer = SUCCESS		4898782	0		=			
ANR	4899025	Identifier	answer		4898782	0					
ANR	4899026	Identifier	SUCCESS		4898782	1					
ANR	4899027	ElseStatement	else		4898782	0					
ANR	4899028	CompoundStatement		49:7:1184:1184	4898782	0					
ANR	4899029	ExpressionStatement	answer = FAILURE_NOT_FOUND	222:3:5957:5983	4898782	0	True				
ANR	4899030	AssignmentExpression	answer = FAILURE_NOT_FOUND		4898782	0		=			
ANR	4899031	Identifier	answer		4898782	0					
ANR	4899032	Identifier	FAILURE_NOT_FOUND		4898782	1					
ANR	4899033	BreakStatement	break ;	224:2:5991:5996	4898782	4	True				
ANR	4899034	Label	case QUERY_MODE :	226:1:6002:6017	4898782	4	True				
ANR	4899035	Identifier	QUERY_MODE		4898782	0					
ANR	4899036	CompoundStatement		55:2:1255:1321	4898782	5					
ANR	4899037	IdentifierDeclStatement	"char * password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL ) ;"	227:2:6023:6089	4898782	0	True				
ANR	4899038	IdentifierDecl	"* password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		4898782	0					
ANR	4899039	IdentifierDeclType	char *		4898782	0					
ANR	4899040	Identifier	password		4898782	1					
ANR	4899041	AssignmentExpression	"* password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		4898782	2		=			
ANR	4899042	Identifier	password		4898782	0					
ANR	4899043	CallExpression	"getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		4898782	1					
ANR	4899044	Callee	getStoredCredential		4898782	0					
ANR	4899045	Identifier	getStoredCredential		4898782	0					
ANR	4899046	ArgumentList	POOL_PASSWORD_USERNAME		4898782	1					
ANR	4899047	Argument	POOL_PASSWORD_USERNAME		4898782	0					
ANR	4899048	Identifier	POOL_PASSWORD_USERNAME		4898782	0					
ANR	4899049	Argument	NULL		4898782	1					
ANR	4899050	Identifier	NULL		4898782	0					
ANR	4899051	IfStatement	if ( password )		4898782	1					
ANR	4899052	Condition	password	228:6:6097:6104	4898782	0	True				
ANR	4899053	Identifier	password		4898782	0					
ANR	4899054	CompoundStatement		56:16:1339:1339	4898782	1					
ANR	4899055	ExpressionStatement	answer = SUCCESS	229:3:6112:6128	4898782	0	True				
ANR	4899056	AssignmentExpression	answer = SUCCESS		4898782	0		=			
ANR	4899057	Identifier	answer		4898782	0					
ANR	4899058	Identifier	SUCCESS		4898782	1					
ANR	4899059	ExpressionStatement	"SecureZeroMemory ( password , MAX_PASSWORD_LENGTH )"	230:3:6133:6180	4898782	1	True				
ANR	4899060	CallExpression	"SecureZeroMemory ( password , MAX_PASSWORD_LENGTH )"		4898782	0					
ANR	4899061	Callee	SecureZeroMemory		4898782	0					
ANR	4899062	Identifier	SecureZeroMemory		4898782	0					
ANR	4899063	ArgumentList	password		4898782	1					
ANR	4899064	Argument	password		4898782	0					
ANR	4899065	Identifier	password		4898782	0					
ANR	4899066	Argument	MAX_PASSWORD_LENGTH		4898782	1					
ANR	4899067	Identifier	MAX_PASSWORD_LENGTH		4898782	0					
ANR	4899068	ExpressionStatement	free ( password )	231:3:6185:6199	4898782	2	True				
ANR	4899069	CallExpression	free ( password )		4898782	0					
ANR	4899070	Callee	free		4898782	0					
ANR	4899071	Identifier	free		4898782	0					
ANR	4899072	ArgumentList	password		4898782	1					
ANR	4899073	Argument	password		4898782	0					
ANR	4899074	Identifier	password		4898782	0					
ANR	4899075	ElseStatement	else		4898782	0					
ANR	4899076	CompoundStatement		61:7:1444:1444	4898782	0					
ANR	4899077	ExpressionStatement	answer = FAILURE_NOT_FOUND	234:3:6217:6243	4898782	0	True				
ANR	4899078	AssignmentExpression	answer = FAILURE_NOT_FOUND		4898782	0		=			
ANR	4899079	Identifier	answer		4898782	0					
ANR	4899080	Identifier	FAILURE_NOT_FOUND		4898782	1					
ANR	4899081	BreakStatement	break ;	236:2:6251:6256	4898782	2	True				
ANR	4899082	Label	default :	238:1:6262:6269	4898782	6	True				
ANR	4899083	Identifier	default		4898782	0					
ANR	4899084	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: unknown mode: %d\\n"" , mode )"	239:2:6273:6338	4898782	7	True				
ANR	4899085	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: unknown mode: %d\\n"" , mode )"		4898782	0					
ANR	4899086	Callee	dprintf		4898782	0					
ANR	4899087	Identifier	dprintf		4898782	0					
ANR	4899088	ArgumentList	D_ALWAYS		4898782	1					
ANR	4899089	Argument	D_ALWAYS		4898782	0					
ANR	4899090	Identifier	D_ALWAYS		4898782	0					
ANR	4899091	Argument	"""store_cred_service: unknown mode: %d\\n"""		4898782	1					
ANR	4899092	PrimaryExpression	"""store_cred_service: unknown mode: %d\\n"""		4898782	0					
ANR	4899093	Argument	mode		4898782	2					
ANR	4899094	Identifier	mode		4898782	0					
ANR	4899095	ExpressionStatement	answer = FAILURE	240:2:6342:6358	4898782	8	True				
ANR	4899096	AssignmentExpression	answer = FAILURE		4898782	0		=			
ANR	4899097	Identifier	answer		4898782	0					
ANR	4899098	Identifier	FAILURE		4898782	1					
ANR	4899099	IfStatement	if ( mode != QUERY_MODE )		4898782	7					
ANR	4899100	Condition	mode != QUERY_MODE	244:5:6398:6415	4898782	0	True				
ANR	4899101	EqualityExpression	mode != QUERY_MODE		4898782	0		!=			
ANR	4899102	Identifier	mode		4898782	0					
ANR	4899103	Identifier	QUERY_MODE		4898782	1					
ANR	4899104	CompoundStatement		72:25:1650:1650	4898782	1					
ANR	4899105	ExpressionStatement	free ( filename )	245:2:6422:6436	4898782	0	True				
ANR	4899106	CallExpression	free ( filename )		4898782	0					
ANR	4899107	Callee	free		4898782	0					
ANR	4899108	Identifier	free		4898782	0					
ANR	4899109	ArgumentList	filename		4898782	1					
ANR	4899110	Argument	filename		4898782	0					
ANR	4899111	Identifier	filename		4898782	0					
ANR	4899112	ReturnStatement	return answer ;	248:1:6443:6456	4898782	8	True				
ANR	4899113	Identifier	answer		4898782	0					
ANR	4899114	ReturnType	int		4898782	1					
ANR	4899115	Identifier	store_cred_service		4898782	2					
ANR	4899116	ParameterList	"const char * user , const char * pw , int mode"		4898782	3					
ANR	4899117	Parameter	const char * user	172:23:4723:4738	4898782	0	True				
ANR	4899118	ParameterType	const char *		4898782	0					
ANR	4899119	Identifier	user		4898782	1					
ANR	4899120	Parameter	const char * pw	172:41:4741:4754	4898782	1	True				
ANR	4899121	ParameterType	const char *		4898782	0					
ANR	4899122	Identifier	pw		4898782	1					
ANR	4899123	Parameter	int mode	172:57:4757:4764	4898782	2	True				
ANR	4899124	ParameterType	int		4898782	0					
ANR	4899125	Identifier	mode		4898782	1					
ANR	4899126	CFGEntryNode	ENTRY		4898782		True				
ANR	4899127	CFGExitNode	EXIT		4898782		True				
ANR	4899128	Symbol	getStoredCredential		4898782						
ANR	4899129	Symbol	pw		4898782						
ANR	4899130	Symbol	strchr		4898782						
ANR	4899131	Symbol	mode		4898782						
ANR	4899132	Symbol	strlen		4898782						
ANR	4899133	Symbol	password		4898782						
ANR	4899134	Symbol	memcmp		4898782						
ANR	4899135	Symbol	param		4898782						
ANR	4899136	Symbol	priv		4898782						
ANR	4899137	Symbol	NULL		4898782						
ANR	4899138	Symbol	SUCCESS		4898782						
ANR	4899139	Symbol	err		4898782						
ANR	4899140	Symbol	D_ALWAYS		4898782						
ANR	4899141	Symbol	set_root_priv		4898782						
ANR	4899142	Symbol	FAILURE		4898782						
ANR	4899143	Symbol	write_password_file		4898782						
ANR	4899144	Symbol	FAILURE_NOT_FOUND		4898782						
ANR	4899145	Symbol	at		4898782						
ANR	4899146	Symbol	filename		4898782						
ANR	4899147	Symbol	answer		4898782						
ANR	4899148	Symbol	unlink		4898782						
ANR	4899149	Symbol	POOL_PASSWORD_USERNAME		4898782						
ANR	4899150	Symbol	QUERY_MODE		4898782						
ANR	4899151	Symbol	MAX_PASSWORD_LENGTH		4898782						
ANR	4899152	Symbol	user		4898782						
ANR	4899153	Symbol	pw_sz		4898782						
ANR	4899154	DeclStmt									
ANR	4899155	Decl							FILE	FILE *	DebugFP
ANR	4899156	DeclStmt									
ANR	4899157	Decl							int	int	DebugFlags
ANR	4899158	Function	getStoredCredential	259:0:6567:7446							
ANR	4899159	FunctionDef	"getStoredCredential (const char * username , const char * domain)"		4899158	0					
ANR	4899160	CompoundStatement		260:0:6635:7446	4899158	0					
ANR	4899161	IdentifierDeclStatement	lsa_mgr lsaMan ;	261:1:6638:6652	4899158	0	True				
ANR	4899162	IdentifierDecl	lsaMan		4899158	0					
ANR	4899163	IdentifierDeclType	lsa_mgr		4899158	0					
ANR	4899164	Identifier	lsaMan		4899158	1					
ANR	4899165	IdentifierDeclStatement	char pw [ 255 ] ;	262:1:6655:6667	4899158	1	True				
ANR	4899166	IdentifierDecl	pw [ 255 ]		4899158	0					
ANR	4899167	IdentifierDeclType	char [ 255 ]		4899158	0					
ANR	4899168	Identifier	pw		4899158	1					
ANR	4899169	PrimaryExpression	255		4899158	2					
ANR	4899170	IdentifierDeclStatement	wchar_t w_fullname [ 512 ] ;	263:1:6670:6693	4899158	2	True				
ANR	4899171	IdentifierDecl	w_fullname [ 512 ]		4899158	0					
ANR	4899172	IdentifierDeclType	wchar_t [ 512 ]		4899158	0					
ANR	4899173	Identifier	w_fullname		4899158	1					
ANR	4899174	PrimaryExpression	512		4899158	2					
ANR	4899175	IdentifierDeclStatement	wchar_t * w_pw ;	264:1:6696:6709	4899158	3	True				
ANR	4899176	IdentifierDecl	* w_pw		4899158	0					
ANR	4899177	IdentifierDeclType	wchar_t *		4899158	0					
ANR	4899178	Identifier	w_pw		4899158	1					
ANR	4899179	IfStatement	if ( ! username || ! domain )		4899158	4					
ANR	4899180	Condition	! username || ! domain	266:6:6718:6737	4899158	0	True				
ANR	4899181	OrExpression	! username || ! domain		4899158	0		||			
ANR	4899182	UnaryOperationExpression	! username		4899158	0					
ANR	4899183	UnaryOperator	!		4899158	0					
ANR	4899184	Identifier	username		4899158	1					
ANR	4899185	UnaryOperationExpression	! domain		4899158	1					
ANR	4899186	UnaryOperator	!		4899158	0					
ANR	4899187	Identifier	domain		4899158	1					
ANR	4899188	CompoundStatement		7:29:105:105	4899158	1					
ANR	4899189	ReturnStatement	return NULL ;	267:2:6745:6756	4899158	0	True				
ANR	4899190	Identifier	NULL		4899158	0					
ANR	4899191	Statement	if	270:1:6763:6764	4899158	5	True				
ANR	4899192	Statement	(	270:4:6766:6766	4899158	6	True				
ANR	4899193	Statement	_snwprintf	270:6:6768:6777	4899158	7	True				
ANR	4899194	Statement	(	270:16:6778:6778	4899158	8	True				
ANR	4899195	Statement	w_fullname	270:17:6779:6788	4899158	9	True				
ANR	4899196	Statement	","	270:27:6789:6789	4899158	10	True				
ANR	4899197	Statement	254	270:29:6791:6793	4899158	11	True				
ANR	4899198	Statement	","	270:32:6794:6794	4899158	12	True				
ANR	4899199	Statement	L	270:34:6796:6796	4899158	13	True				
ANR	4899200	Statement	"""%S@%S"""	270:35:6797:6803	4899158	14	True				
ANR	4899201	Statement	","	270:42:6804:6804	4899158	15	True				
ANR	4899202	Statement	username	270:44:6806:6813	4899158	16	True				
ANR	4899203	Statement	","	270:52:6814:6814	4899158	17	True				
ANR	4899204	Statement	domain	270:54:6816:6821	4899158	18	True				
ANR	4899205	Statement	)	270:60:6822:6822	4899158	19	True				
ANR	4899206	Statement	<	270:62:6824:6824	4899158	20	True				
ANR	4899207	Statement	0	270:64:6826:6826	4899158	21	True				
ANR	4899208	Statement	)	270:66:6828:6828	4899158	22	True				
ANR	4899209	CompoundStatement		11:68:194:194	4899158	23					
ANR	4899210	ReturnStatement	return NULL ;	271:2:6834:6845	4899158	0	True				
ANR	4899211	Identifier	NULL		4899158	0					
ANR	4899212	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	275:1:6895:6928	4899158	24	True				
ANR	4899213	IdentifierDecl	priv = set_root_priv ( )		4899158	0					
ANR	4899214	IdentifierDeclType	priv_state		4899158	0					
ANR	4899215	Identifier	priv		4899158	1					
ANR	4899216	AssignmentExpression	priv = set_root_priv ( )		4899158	2		=			
ANR	4899217	Identifier	priv		4899158	0					
ANR	4899218	CallExpression	set_root_priv ( )		4899158	1					
ANR	4899219	Callee	set_root_priv		4899158	0					
ANR	4899220	Identifier	set_root_priv		4899158	0					
ANR	4899221	ArgumentList			4899158	1					
ANR	4899222	ExpressionStatement	w_pw = lsaMan . query ( w_fullname )	276:1:6931:6962	4899158	25	True				
ANR	4899223	AssignmentExpression	w_pw = lsaMan . query ( w_fullname )		4899158	0		=			
ANR	4899224	Identifier	w_pw		4899158	0					
ANR	4899225	CallExpression	lsaMan . query ( w_fullname )		4899158	1					
ANR	4899226	Callee	lsaMan . query		4899158	0					
ANR	4899227	MemberAccess	lsaMan . query		4899158	0					
ANR	4899228	Identifier	lsaMan		4899158	0					
ANR	4899229	Identifier	query		4899158	1					
ANR	4899230	ArgumentList	w_fullname		4899158	1					
ANR	4899231	Argument	w_fullname		4899158	0					
ANR	4899232	Identifier	w_fullname		4899158	0					
ANR	4899233	ExpressionStatement	set_priv ( priv )	277:1:6965:6979	4899158	26	True				
ANR	4899234	CallExpression	set_priv ( priv )		4899158	0					
ANR	4899235	Callee	set_priv		4899158	0					
ANR	4899236	Identifier	set_priv		4899158	0					
ANR	4899237	ArgumentList	priv		4899158	1					
ANR	4899238	Argument	priv		4899158	0					
ANR	4899239	Identifier	priv		4899158	0					
ANR	4899240	IfStatement	if ( ! w_pw )		4899158	27					
ANR	4899241	Condition	! w_pw	279:6:6988:6993	4899158	0	True				
ANR	4899242	UnaryOperationExpression	! w_pw		4899158	0					
ANR	4899243	UnaryOperator	!		4899158	0					
ANR	4899244	Identifier	w_pw		4899158	1					
ANR	4899245	CompoundStatement		20:15:361:361	4899158	1					
ANR	4899246	Statement	dprintf	280:2:7001:7007	4899158	0	True				
ANR	4899247	Statement	(	280:9:7008:7008	4899158	1	True				
ANR	4899248	Statement	D_ALWAYS	280:10:7009:7016	4899158	2	True				
ANR	4899249	Statement	","	280:18:7017:7017	4899158	3	True				
ANR	4899250	Statement	"""getStoredCredential(): Could not locate credential for user """	281:3:7023:7084	4899158	4	True				
ANR	4899251	Statement	"""'%s@%s'\\n"""	282:3:7089:7099	4899158	5	True				
ANR	4899252	Statement	","	282:14:7100:7100	4899158	6	True				
ANR	4899253	Statement	username	282:16:7102:7109	4899158	7	True				
ANR	4899254	Statement	","	282:24:7110:7110	4899158	8	True				
ANR	4899255	Statement	domain	282:26:7112:7117	4899158	9	True				
ANR	4899256	Statement	)	282:32:7118:7118	4899158	10	True				
ANR	4899257	ExpressionStatement		282:33:7119:7119	4899158	11	True				
ANR	4899258	ReturnStatement	return NULL ;	283:2:7123:7134	4899158	12	True				
ANR	4899259	Identifier	NULL		4899158	0					
ANR	4899260	IfStatement	"if ( _snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0 )"		4899158	28					
ANR	4899261	Condition	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0"	286:6:7146:7186	4899158	0	True				
ANR	4899262	RelationalExpression	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0"		4899158	0		<			
ANR	4899263	CallExpression	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw )"		4899158	0					
ANR	4899264	Callee	_snprintf		4899158	0					
ANR	4899265	Identifier	_snprintf		4899158	0					
ANR	4899266	ArgumentList	pw		4899158	1					
ANR	4899267	Argument	pw		4899158	0					
ANR	4899268	Identifier	pw		4899158	0					
ANR	4899269	Argument	sizeof ( pw )		4899158	1					
ANR	4899270	SizeofExpression	sizeof ( pw )		4899158	0					
ANR	4899271	Sizeof	sizeof		4899158	0					
ANR	4899272	SizeofOperand	pw		4899158	1					
ANR	4899273	Argument	"""%S"""		4899158	2					
ANR	4899274	PrimaryExpression	"""%S"""		4899158	0					
ANR	4899275	Argument	w_pw		4899158	3					
ANR	4899276	Identifier	w_pw		4899158	0					
ANR	4899277	PrimaryExpression	0		4899158	1					
ANR	4899278	CompoundStatement		27:50:554:554	4899158	1					
ANR	4899279	ReturnStatement	return NULL ;	287:2:7194:7205	4899158	0	True				
ANR	4899280	Identifier	NULL		4899158	0					
ANR	4899281	ExpressionStatement	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"	291:1:7271:7323	4899158	29	True				
ANR	4899282	CallExpression	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"		4899158	0					
ANR	4899283	Callee	SecureZeroMemory		4899158	0					
ANR	4899284	Identifier	SecureZeroMemory		4899158	0					
ANR	4899285	ArgumentList	w_pw		4899158	1					
ANR	4899286	Argument	w_pw		4899158	0					
ANR	4899287	Identifier	w_pw		4899158	0					
ANR	4899288	Argument	wcslen ( w_pw ) * sizeof ( wchar_t )		4899158	1					
ANR	4899289	MultiplicativeExpression	wcslen ( w_pw ) * sizeof ( wchar_t )		4899158	0		*			
ANR	4899290	CallExpression	wcslen ( w_pw )		4899158	0					
ANR	4899291	Callee	wcslen		4899158	0					
ANR	4899292	Identifier	wcslen		4899158	0					
ANR	4899293	ArgumentList	w_pw		4899158	1					
ANR	4899294	Argument	w_pw		4899158	0					
ANR	4899295	Identifier	w_pw		4899158	0					
ANR	4899296	SizeofExpression	sizeof ( wchar_t )		4899158	1					
ANR	4899297	Sizeof	sizeof		4899158	0					
ANR	4899298	SizeofOperand	wchar_t		4899158	1					
ANR	4899299	Statement	delete	292:1:7326:7331	4899158	30	True				
ANR	4899300	Statement	[	292:7:7332:7332	4899158	31	True				
ANR	4899301	Statement	]	292:8:7333:7333	4899158	32	True				
ANR	4899302	ExpressionStatement	w_pw	292:9:7334:7340	4899158	33	True				
ANR	4899303	Identifier	w_pw		4899158	0					
ANR	4899304	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s@%s'\\n"" , username , domain )"	294:1:7344:7424	4899158	34	True				
ANR	4899305	CallExpression	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s@%s'\\n"" , username , domain )"		4899158	0					
ANR	4899306	Callee	dprintf		4899158	0					
ANR	4899307	Identifier	dprintf		4899158	0					
ANR	4899308	ArgumentList	D_FULLDEBUG		4899158	1					
ANR	4899309	Argument	D_FULLDEBUG		4899158	0					
ANR	4899310	Identifier	D_FULLDEBUG		4899158	0					
ANR	4899311	Argument	"""Found credential for user '%s@%s'\\n"""		4899158	1					
ANR	4899312	PrimaryExpression	"""Found credential for user '%s@%s'\\n"""		4899158	0					
ANR	4899313	Argument	username		4899158	2					
ANR	4899314	Identifier	username		4899158	0					
ANR	4899315	Argument	domain		4899158	3					
ANR	4899316	Identifier	domain		4899158	0					
ANR	4899317	ReturnStatement	return strdup ( pw ) ;	296:1:7427:7444	4899158	35	True				
ANR	4899318	CallExpression	strdup ( pw )		4899158	0					
ANR	4899319	Callee	strdup		4899158	0					
ANR	4899320	Identifier	strdup		4899158	0					
ANR	4899321	ArgumentList	pw		4899158	1					
ANR	4899322	Argument	pw		4899158	0					
ANR	4899323	Identifier	pw		4899158	0					
ANR	4899324	ReturnType	char *		4899158	1					
ANR	4899325	Identifier	getStoredCredential		4899158	2					
ANR	4899326	ParameterList	"const char * username , const char * domain"		4899158	3					
ANR	4899327	Parameter	const char * username	259:26:6593:6612	4899158	0	True				
ANR	4899328	ParameterType	const char *		4899158	0					
ANR	4899329	Identifier	username		4899158	1					
ANR	4899330	Parameter	const char * domain	259:48:6615:6632	4899158	1	True				
ANR	4899331	ParameterType	const char *		4899158	0					
ANR	4899332	Identifier	domain		4899158	1					
ANR	4899333	CFGEntryNode	ENTRY		4899158		True				
ANR	4899334	CFGExitNode	EXIT		4899158		True				
ANR	4899335	Symbol	NULL		4899158						
ANR	4899336	Symbol	_snprintf		4899158						
ANR	4899337	Symbol	lsaMan . query		4899158						
ANR	4899338	Symbol	pw		4899158						
ANR	4899339	Symbol	w_fullname		4899158						
ANR	4899340	Symbol	set_root_priv		4899158						
ANR	4899341	Symbol	D_FULLDEBUG		4899158						
ANR	4899342	Symbol	lsaMan		4899158						
ANR	4899343	Symbol	domain		4899158						
ANR	4899344	Symbol	wcslen		4899158						
ANR	4899345	Symbol	w_pw		4899158						
ANR	4899346	Symbol	priv		4899158						
ANR	4899347	Symbol	strdup		4899158						
ANR	4899348	Symbol	username		4899158						
ANR	4899349	Function	store_cred_service	299:0:7449:9952							
ANR	4899350	FunctionDef	"store_cred_service (const char * user , const char * pw , int mode)"		4899349	0					
ANR	4899351	CompoundStatement		300:0:7517:9952	4899349	0					
ANR	4899352	IdentifierDeclStatement	wchar_t pwbuf [ MAX_PASSWORD_LENGTH ] ;	302:1:7521:7555	4899349	0	True				
ANR	4899353	IdentifierDecl	pwbuf [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899354	IdentifierDeclType	wchar_t [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899355	Identifier	pwbuf		4899349	1					
ANR	4899356	Identifier	MAX_PASSWORD_LENGTH		4899349	2					
ANR	4899357	IdentifierDeclStatement	wchar_t userbuf [ MAX_PASSWORD_LENGTH ] ;	303:1:7558:7594	4899349	1	True				
ANR	4899358	IdentifierDecl	userbuf [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899359	IdentifierDeclType	wchar_t [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899360	Identifier	userbuf		4899349	1					
ANR	4899361	Identifier	MAX_PASSWORD_LENGTH		4899349	2					
ANR	4899362	IdentifierDeclStatement	priv_state priv ;	304:1:7597:7612	4899349	2	True				
ANR	4899363	IdentifierDecl	priv		4899349	0					
ANR	4899364	IdentifierDeclType	priv_state		4899349	0					
ANR	4899365	Identifier	priv		4899349	1					
ANR	4899366	IdentifierDeclStatement	int errno_result = 0 ;	305:1:7615:7635	4899349	3	True				
ANR	4899367	IdentifierDecl	errno_result = 0		4899349	0					
ANR	4899368	IdentifierDeclType	int		4899349	0					
ANR	4899369	Identifier	errno_result		4899349	1					
ANR	4899370	AssignmentExpression	errno_result = 0		4899349	2		=			
ANR	4899371	Identifier	errno_result		4899349	0					
ANR	4899372	PrimaryExpression	0		4899349	1					
ANR	4899373	IdentifierDeclStatement	int answer = FAILURE ;	306:1:7638:7658	4899349	4	True				
ANR	4899374	IdentifierDecl	answer = FAILURE		4899349	0					
ANR	4899375	IdentifierDeclType	int		4899349	0					
ANR	4899376	Identifier	answer		4899349	1					
ANR	4899377	AssignmentExpression	answer = FAILURE		4899349	2		=			
ANR	4899378	Identifier	FAILURE		4899349	0					
ANR	4899379	Identifier	FAILURE		4899349	1					
ANR	4899380	IdentifierDeclStatement	lsa_mgr lsa_man ;	307:1:7661:7676	4899349	5	True				
ANR	4899381	IdentifierDecl	lsa_man		4899349	0					
ANR	4899382	IdentifierDeclType	lsa_mgr		4899349	0					
ANR	4899383	Identifier	lsa_man		4899349	1					
ANR	4899384	IdentifierDeclStatement	wchar_t * pw_wc ;	308:1:7679:7693	4899349	6	True				
ANR	4899385	IdentifierDecl	* pw_wc		4899349	0					
ANR	4899386	IdentifierDeclType	wchar_t *		4899349	0					
ANR	4899387	Identifier	pw_wc		4899349	1					
ANR	4899388	IfStatement	if ( user )		4899349	7					
ANR	4899389	Condition	user	311:6:7761:7764	4899349	0	True				
ANR	4899390	Identifier	user		4899349	0					
ANR	4899391	CompoundStatement		12:13:250:250	4899349	1					
ANR	4899392	Statement	swprintf	312:2:7772:7779	4899349	0	True				
ANR	4899393	Statement	(	312:10:7780:7780	4899349	1	True				
ANR	4899394	Statement	userbuf	312:11:7781:7787	4899349	2	True				
ANR	4899395	Statement	","	312:18:7788:7788	4899349	3	True				
ANR	4899396	Statement	L	312:20:7790:7790	4899349	4	True				
ANR	4899397	Statement	"""%S"""	312:21:7791:7794	4899349	5	True				
ANR	4899398	Statement	","	312:25:7795:7795	4899349	6	True				
ANR	4899399	Statement	user	312:27:7797:7800	4899349	7	True				
ANR	4899400	Statement	)	312:31:7801:7801	4899349	8	True				
ANR	4899401	ExpressionStatement		312:32:7802:7802	4899349	9	True				
ANR	4899402	IfStatement	if ( ! can_switch_ids ( ) )		4899349	8					
ANR	4899403	Condition	! can_switch_ids ( )	315:5:7813:7829	4899349	0	True				
ANR	4899404	UnaryOperationExpression	! can_switch_ids ( )		4899349	0					
ANR	4899405	UnaryOperator	!		4899349	0					
ANR	4899406	CallExpression	can_switch_ids ( )		4899349	1					
ANR	4899407	Callee	can_switch_ids		4899349	0					
ANR	4899408	Identifier	can_switch_ids		4899349	0					
ANR	4899409	ArgumentList			4899349	1					
ANR	4899410	CompoundStatement		16:24:314:314	4899349	1					
ANR	4899411	ExpressionStatement	answer = FAILURE_NOT_SUPPORTED	316:2:7836:7866	4899349	0	True				
ANR	4899412	AssignmentExpression	answer = FAILURE_NOT_SUPPORTED		4899349	0		=			
ANR	4899413	Identifier	answer		4899349	0					
ANR	4899414	Identifier	FAILURE_NOT_SUPPORTED		4899349	1					
ANR	4899415	ElseStatement	else		4899349	0					
ANR	4899416	CompoundStatement		18:8:358:358	4899349	0					
ANR	4899417	ExpressionStatement	priv = set_root_priv ( )	318:2:7880:7902	4899349	0	True				
ANR	4899418	AssignmentExpression	priv = set_root_priv ( )		4899349	0		=			
ANR	4899419	Identifier	priv		4899349	0					
ANR	4899420	CallExpression	set_root_priv ( )		4899349	1					
ANR	4899421	Callee	set_root_priv		4899349	0					
ANR	4899422	Identifier	set_root_priv		4899349	0					
ANR	4899423	ArgumentList			4899349	1					
ANR	4899424	SwitchStatement	switch ( mode )		4899349	1					
ANR	4899425	Condition	mode	320:9:7916:7919	4899349	0	True				
ANR	4899426	Identifier	mode		4899349	0					
ANR	4899427	CompoundStatement		23:3:426:437	4899349	1					
ANR	4899428	Label	case ADD_MODE :	321:2:7926:7939	4899349	0	True				
ANR	4899429	Identifier	ADD_MODE		4899349	0					
ANR	4899430	IdentifierDeclStatement	bool retval ;	322:3:7944:7955	4899349	1	True				
ANR	4899431	IdentifierDecl	retval		4899349	0					
ANR	4899432	IdentifierDeclType	bool		4899349	0					
ANR	4899433	Identifier	retval		4899349	1					
ANR	4899434	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Adding %S to credential storage.\\n"" , userbuf )"	324:3:7961:8035	4899349	2	True				
ANR	4899435	CallExpression	"dprintf ( D_FULLDEBUG , ""Adding %S to credential storage.\\n"" , userbuf )"		4899349	0					
ANR	4899436	Callee	dprintf		4899349	0					
ANR	4899437	Identifier	dprintf		4899349	0					
ANR	4899438	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899439	Argument	D_FULLDEBUG		4899349	0					
ANR	4899440	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899441	Argument	"""Adding %S to credential storage.\\n"""		4899349	1					
ANR	4899442	PrimaryExpression	"""Adding %S to credential storage.\\n"""		4899349	0					
ANR	4899443	Argument	userbuf		4899349	2					
ANR	4899444	Identifier	userbuf		4899349	0					
ANR	4899445	ExpressionStatement	"retval = isValidCredential ( user , pw )"	327:3:8041:8077	4899349	3	True				
ANR	4899446	AssignmentExpression	"retval = isValidCredential ( user , pw )"		4899349	0		=			
ANR	4899447	Identifier	retval		4899349	0					
ANR	4899448	CallExpression	"isValidCredential ( user , pw )"		4899349	1					
ANR	4899449	Callee	isValidCredential		4899349	0					
ANR	4899450	Identifier	isValidCredential		4899349	0					
ANR	4899451	ArgumentList	user		4899349	1					
ANR	4899452	Argument	user		4899349	0					
ANR	4899453	Identifier	user		4899349	0					
ANR	4899454	Argument	pw		4899349	1					
ANR	4899455	Identifier	pw		4899349	0					
ANR	4899456	IfStatement	if ( ! retval )		4899349	4					
ANR	4899457	Condition	! retval	329:8:8088:8095	4899349	0	True				
ANR	4899458	UnaryOperationExpression	! retval		4899349	0					
ANR	4899459	UnaryOperator	!		4899349	0					
ANR	4899460	Identifier	retval		4899349	1					
ANR	4899461	CompoundStatement		30:19:581:581	4899349	1					
ANR	4899462	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""store_cred: tried to add invalid credential\\n"" )"	330:4:8105:8174	4899349	0	True				
ANR	4899463	CallExpression	"dprintf ( D_FULLDEBUG , ""store_cred: tried to add invalid credential\\n"" )"		4899349	0					
ANR	4899464	Callee	dprintf		4899349	0					
ANR	4899465	Identifier	dprintf		4899349	0					
ANR	4899466	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899467	Argument	D_FULLDEBUG		4899349	0					
ANR	4899468	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899469	Argument	"""store_cred: tried to add invalid credential\\n"""		4899349	1					
ANR	4899470	PrimaryExpression	"""store_cred: tried to add invalid credential\\n"""		4899349	0					
ANR	4899471	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	331:4:8180:8207	4899349	1	True				
ANR	4899472	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		4899349	0		=			
ANR	4899473	Identifier	answer		4899349	0					
ANR	4899474	Identifier	FAILURE_BAD_PASSWORD		4899349	1					
ANR	4899475	BreakStatement	break ;	332:4:8214:8219	4899349	2	True				
ANR	4899476	IfStatement	if ( pw )		4899349	5					
ANR	4899477	Condition	pw	335:7:8247:8248	4899349	0	True				
ANR	4899478	Identifier	pw		4899349	0					
ANR	4899479	CompoundStatement		36:11:733:733	4899349	1					
ANR	4899480	Statement	swprintf	336:4:8257:8264	4899349	0	True				
ANR	4899481	Statement	(	336:12:8265:8265	4899349	1	True				
ANR	4899482	Statement	pwbuf	336:13:8266:8270	4899349	2	True				
ANR	4899483	Statement	","	336:18:8271:8271	4899349	3	True				
ANR	4899484	Statement	L	336:20:8273:8273	4899349	4	True				
ANR	4899485	Statement	"""%S"""	336:21:8274:8277	4899349	5	True				
ANR	4899486	Statement	","	336:25:8278:8278	4899349	6	True				
ANR	4899487	Statement	pw	336:27:8280:8281	4899349	7	True				
ANR	4899488	Statement	)	336:29:8282:8282	4899349	8	True				
ANR	4899489	ExpressionStatement		336:30:8283:8283	4899349	9	True				
ANR	4899490	IfStatement	"if ( ! lsa_man . add ( userbuf , pwbuf ) )"		4899349	6					
ANR	4899491	Condition	"! lsa_man . add ( userbuf , pwbuf )"	341:7:8379:8406	4899349	0	True				
ANR	4899492	UnaryOperationExpression	"! lsa_man . add ( userbuf , pwbuf )"		4899349	0					
ANR	4899493	UnaryOperator	!		4899349	0					
ANR	4899494	CallExpression	"lsa_man . add ( userbuf , pwbuf )"		4899349	1					
ANR	4899495	Callee	lsa_man . add		4899349	0					
ANR	4899496	MemberAccess	lsa_man . add		4899349	0					
ANR	4899497	Identifier	lsa_man		4899349	0					
ANR	4899498	Identifier	add		4899349	1					
ANR	4899499	ArgumentList	userbuf		4899349	1					
ANR	4899500	Argument	userbuf		4899349	0					
ANR	4899501	Identifier	userbuf		4899349	0					
ANR	4899502	Argument	pwbuf		4899349	1					
ANR	4899503	Identifier	pwbuf		4899349	0					
ANR	4899504	CompoundStatement		42:36:890:890	4899349	1					
ANR	4899505	ExpressionStatement	answer = FAILURE	342:4:8414:8430	4899349	0	True				
ANR	4899506	AssignmentExpression	answer = FAILURE		4899349	0		=			
ANR	4899507	Identifier	answer		4899349	0					
ANR	4899508	Identifier	FAILURE		4899349	1					
ANR	4899509	ElseStatement	else		4899349	0					
ANR	4899510	CompoundStatement		44:10:924:924	4899349	0					
ANR	4899511	ExpressionStatement	answer = SUCCESS	344:4:8448:8464	4899349	0	True				
ANR	4899512	AssignmentExpression	answer = SUCCESS		4899349	0		=			
ANR	4899513	Identifier	answer		4899349	0					
ANR	4899514	Identifier	SUCCESS		4899349	1					
ANR	4899515	ExpressionStatement	"SecureZeroMemory ( pwbuf , MAX_PASSWORD_LENGTH * sizeof ( wchar_t ) )"	346:3:8474:8534	4899349	7	True				
ANR	4899516	CallExpression	"SecureZeroMemory ( pwbuf , MAX_PASSWORD_LENGTH * sizeof ( wchar_t ) )"		4899349	0					
ANR	4899517	Callee	SecureZeroMemory		4899349	0					
ANR	4899518	Identifier	SecureZeroMemory		4899349	0					
ANR	4899519	ArgumentList	pwbuf		4899349	1					
ANR	4899520	Argument	pwbuf		4899349	0					
ANR	4899521	Identifier	pwbuf		4899349	0					
ANR	4899522	Argument	MAX_PASSWORD_LENGTH * sizeof ( wchar_t )		4899349	1					
ANR	4899523	MultiplicativeExpression	MAX_PASSWORD_LENGTH * sizeof ( wchar_t )		4899349	0		*			
ANR	4899524	Identifier	MAX_PASSWORD_LENGTH		4899349	0					
ANR	4899525	SizeofExpression	sizeof ( wchar_t )		4899349	1					
ANR	4899526	Sizeof	sizeof		4899349	0					
ANR	4899527	SizeofOperand	wchar_t		4899349	1					
ANR	4899528	BreakStatement	break ;	347:3:8540:8545	4899349	8	True				
ANR	4899529	Label	case DELETE_MODE :	348:2:8549:8565	4899349	9	True				
ANR	4899530	Identifier	DELETE_MODE		4899349	0					
ANR	4899531	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Deleting %S from credential storage.\\n"" , userbuf )"	349:3:8570:8648	4899349	10	True				
ANR	4899532	CallExpression	"dprintf ( D_FULLDEBUG , ""Deleting %S from credential storage.\\n"" , userbuf )"		4899349	0					
ANR	4899533	Callee	dprintf		4899349	0					
ANR	4899534	Identifier	dprintf		4899349	0					
ANR	4899535	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899536	Argument	D_FULLDEBUG		4899349	0					
ANR	4899537	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899538	Argument	"""Deleting %S from credential storage.\\n"""		4899349	1					
ANR	4899539	PrimaryExpression	"""Deleting %S from credential storage.\\n"""		4899349	0					
ANR	4899540	Argument	userbuf		4899349	2					
ANR	4899541	Identifier	userbuf		4899349	0					
ANR	4899542	ExpressionStatement	pw_wc = lsa_man . query ( userbuf )	352:3:8654:8684	4899349	11	True				
ANR	4899543	AssignmentExpression	pw_wc = lsa_man . query ( userbuf )		4899349	0		=			
ANR	4899544	Identifier	pw_wc		4899349	0					
ANR	4899545	CallExpression	lsa_man . query ( userbuf )		4899349	1					
ANR	4899546	Callee	lsa_man . query		4899349	0					
ANR	4899547	MemberAccess	lsa_man . query		4899349	0					
ANR	4899548	Identifier	lsa_man		4899349	0					
ANR	4899549	Identifier	query		4899349	1					
ANR	4899550	ArgumentList	userbuf		4899349	1					
ANR	4899551	Argument	userbuf		4899349	0					
ANR	4899552	Identifier	userbuf		4899349	0					
ANR	4899553	IfStatement	if ( ! pw_wc )		4899349	12					
ANR	4899554	Condition	! pw_wc	353:8:8694:8699	4899349	0	True				
ANR	4899555	UnaryOperationExpression	! pw_wc		4899349	0					
ANR	4899556	UnaryOperator	!		4899349	0					
ANR	4899557	Identifier	pw_wc		4899349	1					
ANR	4899558	CompoundStatement		54:17:1185:1185	4899349	1					
ANR	4899559	ExpressionStatement	answer = FAILURE_NOT_FOUND	354:4:8709:8735	4899349	0	True				
ANR	4899560	AssignmentExpression	answer = FAILURE_NOT_FOUND		4899349	0		=			
ANR	4899561	Identifier	answer		4899349	0					
ANR	4899562	Identifier	FAILURE_NOT_FOUND		4899349	1					
ANR	4899563	BreakStatement	break ;	355:4:8741:8746	4899349	1	True				
ANR	4899564	ElseStatement	else		4899349	0					
ANR	4899565	CompoundStatement		58:8:1243:1243	4899349	0					
ANR	4899566	ExpressionStatement	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"	358:4:8767:8805	4899349	0	True				
ANR	4899567	CallExpression	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"		4899349	0					
ANR	4899568	Callee	SecureZeroMemory		4899349	0					
ANR	4899569	Identifier	SecureZeroMemory		4899349	0					
ANR	4899570	ArgumentList	pw_wc		4899349	1					
ANR	4899571	Argument	pw_wc		4899349	0					
ANR	4899572	Identifier	pw_wc		4899349	0					
ANR	4899573	Argument	wcslen ( pw_wc )		4899349	1					
ANR	4899574	CallExpression	wcslen ( pw_wc )		4899349	0					
ANR	4899575	Callee	wcslen		4899349	0					
ANR	4899576	Identifier	wcslen		4899349	0					
ANR	4899577	ArgumentList	pw_wc		4899349	1					
ANR	4899578	Argument	pw_wc		4899349	0					
ANR	4899579	Identifier	pw_wc		4899349	0					
ANR	4899580	Statement	delete	359:4:8811:8816	4899349	1	True				
ANR	4899581	Statement	[	359:10:8817:8817	4899349	2	True				
ANR	4899582	Statement	]	359:11:8818:8818	4899349	3	True				
ANR	4899583	ExpressionStatement	pw_wc	359:13:8820:8825	4899349	4	True				
ANR	4899584	Identifier	pw_wc		4899349	0					
ANR	4899585	IfStatement	"if ( ! isValidCredential ( user , pw ) )"		4899349	13					
ANR	4899586	Condition	"! isValidCredential ( user , pw )"	362:7:8840:8867	4899349	0	True				
ANR	4899587	UnaryOperationExpression	"! isValidCredential ( user , pw )"		4899349	0					
ANR	4899588	UnaryOperator	!		4899349	0					
ANR	4899589	CallExpression	"isValidCredential ( user , pw )"		4899349	1					
ANR	4899590	Callee	isValidCredential		4899349	0					
ANR	4899591	Identifier	isValidCredential		4899349	0					
ANR	4899592	ArgumentList	user		4899349	1					
ANR	4899593	Argument	user		4899349	0					
ANR	4899594	Identifier	user		4899349	0					
ANR	4899595	Argument	pw		4899349	1					
ANR	4899596	Identifier	pw		4899349	0					
ANR	4899597	CompoundStatement		63:37:1352:1352	4899349	1					
ANR	4899598	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""store_cred: invalid credential given for delete\\n"" )"	363:4:8876:8949	4899349	0	True				
ANR	4899599	CallExpression	"dprintf ( D_FULLDEBUG , ""store_cred: invalid credential given for delete\\n"" )"		4899349	0					
ANR	4899600	Callee	dprintf		4899349	0					
ANR	4899601	Identifier	dprintf		4899349	0					
ANR	4899602	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899603	Argument	D_FULLDEBUG		4899349	0					
ANR	4899604	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899605	Argument	"""store_cred: invalid credential given for delete\\n"""		4899349	1					
ANR	4899606	PrimaryExpression	"""store_cred: invalid credential given for delete\\n"""		4899349	0					
ANR	4899607	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	364:4:8955:8984	4899349	1	True				
ANR	4899608	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		4899349	0		=			
ANR	4899609	Identifier	answer		4899349	0					
ANR	4899610	Identifier	FAILURE_BAD_PASSWORD		4899349	1					
ANR	4899611	BreakStatement	break ;	365:4:8990:8995	4899349	2	True				
ANR	4899612	IfStatement	if ( ! lsa_man . remove ( userbuf ) )		4899349	14					
ANR	4899613	Condition	! lsa_man . remove ( userbuf )	370:7:9060:9083	4899349	0	True				
ANR	4899614	UnaryOperationExpression	! lsa_man . remove ( userbuf )		4899349	0					
ANR	4899615	UnaryOperator	!		4899349	0					
ANR	4899616	CallExpression	lsa_man . remove ( userbuf )		4899349	1					
ANR	4899617	Callee	lsa_man . remove		4899349	0					
ANR	4899618	MemberAccess	lsa_man . remove		4899349	0					
ANR	4899619	Identifier	lsa_man		4899349	0					
ANR	4899620	Identifier	remove		4899349	1					
ANR	4899621	ArgumentList	userbuf		4899349	1					
ANR	4899622	Argument	userbuf		4899349	0					
ANR	4899623	Identifier	userbuf		4899349	0					
ANR	4899624	CompoundStatement		71:33:1568:1568	4899349	1					
ANR	4899625	ExpressionStatement	answer = FAILURE	371:4:9092:9108	4899349	0	True				
ANR	4899626	AssignmentExpression	answer = FAILURE		4899349	0		=			
ANR	4899627	Identifier	answer		4899349	0					
ANR	4899628	Identifier	FAILURE		4899349	1					
ANR	4899629	ElseStatement	else		4899349	0					
ANR	4899630	CompoundStatement		73:10:1602:1602	4899349	0					
ANR	4899631	ExpressionStatement	answer = SUCCESS	373:4:9126:9142	4899349	0	True				
ANR	4899632	AssignmentExpression	answer = SUCCESS		4899349	0		=			
ANR	4899633	Identifier	answer		4899349	0					
ANR	4899634	Identifier	SUCCESS		4899349	1					
ANR	4899635	BreakStatement	break ;	375:3:9152:9157	4899349	15	True				
ANR	4899636	Label	case QUERY_MODE :	376:2:9161:9176	4899349	16	True				
ANR	4899637	Identifier	QUERY_MODE		4899349	0					
ANR	4899638	CompoundStatement		82:4:1762:1793	4899349	17					
ANR	4899639	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Checking for %S in credential storage.\\n"" , userbuf )"	378:4:9187:9269	4899349	0	True				
ANR	4899640	CallExpression	"dprintf ( D_FULLDEBUG , ""Checking for %S in credential storage.\\n"" , userbuf )"		4899349	0					
ANR	4899641	Callee	dprintf		4899349	0					
ANR	4899642	Identifier	dprintf		4899349	0					
ANR	4899643	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899644	Argument	D_FULLDEBUG		4899349	0					
ANR	4899645	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899646	Argument	"""Checking for %S in credential storage.\\n"""		4899349	1					
ANR	4899647	PrimaryExpression	"""Checking for %S in credential storage.\\n"""		4899349	0					
ANR	4899648	Argument	userbuf		4899349	2					
ANR	4899649	Identifier	userbuf		4899349	0					
ANR	4899650	IdentifierDeclStatement	char passw [ MAX_PASSWORD_LENGTH ] ;	381:4:9280:9311	4899349	1	True				
ANR	4899651	IdentifierDecl	passw [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899652	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH ]		4899349	0					
ANR	4899653	Identifier	passw		4899349	1					
ANR	4899654	Identifier	MAX_PASSWORD_LENGTH		4899349	2					
ANR	4899655	ExpressionStatement	pw_wc = lsa_man . query ( userbuf )	382:4:9317:9347	4899349	2	True				
ANR	4899656	AssignmentExpression	pw_wc = lsa_man . query ( userbuf )		4899349	0		=			
ANR	4899657	Identifier	pw_wc		4899349	0					
ANR	4899658	CallExpression	lsa_man . query ( userbuf )		4899349	1					
ANR	4899659	Callee	lsa_man . query		4899349	0					
ANR	4899660	MemberAccess	lsa_man . query		4899349	0					
ANR	4899661	Identifier	lsa_man		4899349	0					
ANR	4899662	Identifier	query		4899349	1					
ANR	4899663	ArgumentList	userbuf		4899349	1					
ANR	4899664	Argument	userbuf		4899349	0					
ANR	4899665	Identifier	userbuf		4899349	0					
ANR	4899666	IfStatement	if ( ! pw_wc )		4899349	3					
ANR	4899667	Condition	! pw_wc	384:9:9363:9368	4899349	0	True				
ANR	4899668	UnaryOperationExpression	! pw_wc		4899349	0					
ANR	4899669	UnaryOperator	!		4899349	0					
ANR	4899670	Identifier	pw_wc		4899349	1					
ANR	4899671	CompoundStatement		85:18:1854:1854	4899349	1					
ANR	4899672	ExpressionStatement	answer = FAILURE_NOT_FOUND	385:5:9379:9405	4899349	0	True				
ANR	4899673	AssignmentExpression	answer = FAILURE_NOT_FOUND		4899349	0		=			
ANR	4899674	Identifier	answer		4899349	0					
ANR	4899675	Identifier	FAILURE_NOT_FOUND		4899349	1					
ANR	4899676	ElseStatement	else		4899349	0					
ANR	4899677	CompoundStatement		87:11:1900:1900	4899349	0					
ANR	4899678	ExpressionStatement	"sprintf ( passw , ""%S"" , pw_wc )"	387:5:9425:9452	4899349	0	True				
ANR	4899679	CallExpression	"sprintf ( passw , ""%S"" , pw_wc )"		4899349	0					
ANR	4899680	Callee	sprintf		4899349	0					
ANR	4899681	Identifier	sprintf		4899349	0					
ANR	4899682	ArgumentList	passw		4899349	1					
ANR	4899683	Argument	passw		4899349	0					
ANR	4899684	Identifier	passw		4899349	0					
ANR	4899685	Argument	"""%S"""		4899349	1					
ANR	4899686	PrimaryExpression	"""%S"""		4899349	0					
ANR	4899687	Argument	pw_wc		4899349	2					
ANR	4899688	Identifier	pw_wc		4899349	0					
ANR	4899689	ExpressionStatement	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"	388:5:9459:9497	4899349	1	True				
ANR	4899690	CallExpression	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"		4899349	0					
ANR	4899691	Callee	SecureZeroMemory		4899349	0					
ANR	4899692	Identifier	SecureZeroMemory		4899349	0					
ANR	4899693	ArgumentList	pw_wc		4899349	1					
ANR	4899694	Argument	pw_wc		4899349	0					
ANR	4899695	Identifier	pw_wc		4899349	0					
ANR	4899696	Argument	wcslen ( pw_wc )		4899349	1					
ANR	4899697	CallExpression	wcslen ( pw_wc )		4899349	0					
ANR	4899698	Callee	wcslen		4899349	0					
ANR	4899699	Identifier	wcslen		4899349	0					
ANR	4899700	ArgumentList	pw_wc		4899349	1					
ANR	4899701	Argument	pw_wc		4899349	0					
ANR	4899702	Identifier	pw_wc		4899349	0					
ANR	4899703	Statement	delete	389:5:9504:9509	4899349	2	True				
ANR	4899704	Statement	[	389:11:9510:9510	4899349	3	True				
ANR	4899705	Statement	]	389:12:9511:9511	4899349	4	True				
ANR	4899706	ExpressionStatement	pw_wc	389:14:9513:9518	4899349	5	True				
ANR	4899707	Identifier	pw_wc		4899349	0					
ANR	4899708	IfStatement	"if ( isValidCredential ( user , passw ) )"		4899349	6					
ANR	4899709	Condition	"isValidCredential ( user , passw )"	391:10:9536:9565	4899349	0	True				
ANR	4899710	CallExpression	"isValidCredential ( user , passw )"		4899349	0					
ANR	4899711	Callee	isValidCredential		4899349	0					
ANR	4899712	Identifier	isValidCredential		4899349	0					
ANR	4899713	ArgumentList	user		4899349	1					
ANR	4899714	Argument	user		4899349	0					
ANR	4899715	Identifier	user		4899349	0					
ANR	4899716	Argument	passw		4899349	1					
ANR	4899717	Identifier	passw		4899349	0					
ANR	4899718	CompoundStatement		92:43:2051:2051	4899349	1					
ANR	4899719	ExpressionStatement	answer = SUCCESS	392:6:9577:9593	4899349	0	True				
ANR	4899720	AssignmentExpression	answer = SUCCESS		4899349	0		=			
ANR	4899721	Identifier	answer		4899349	0					
ANR	4899722	Identifier	SUCCESS		4899349	1					
ANR	4899723	ElseStatement	else		4899349	0					
ANR	4899724	CompoundStatement		94:12:2089:2089	4899349	0					
ANR	4899725	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	394:6:9615:9644	4899349	0	True				
ANR	4899726	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		4899349	0		=			
ANR	4899727	Identifier	answer		4899349	0					
ANR	4899728	Identifier	FAILURE_BAD_PASSWORD		4899349	1					
ANR	4899729	ExpressionStatement	"SecureZeroMemory ( passw , MAX_PASSWORD_LENGTH )"	397:5:9664:9708	4899349	7	True				
ANR	4899730	CallExpression	"SecureZeroMemory ( passw , MAX_PASSWORD_LENGTH )"		4899349	0					
ANR	4899731	Callee	SecureZeroMemory		4899349	0					
ANR	4899732	Identifier	SecureZeroMemory		4899349	0					
ANR	4899733	ArgumentList	passw		4899349	1					
ANR	4899734	Argument	passw		4899349	0					
ANR	4899735	Identifier	passw		4899349	0					
ANR	4899736	Argument	MAX_PASSWORD_LENGTH		4899349	1					
ANR	4899737	Identifier	MAX_PASSWORD_LENGTH		4899349	0					
ANR	4899738	BreakStatement	break ;	399:4:9720:9725	4899349	4	True				
ANR	4899739	Label	default :	401:2:9734:9741	4899349	18	True				
ANR	4899740	Identifier	default		4899349	0					
ANR	4899741	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Unknown access mode (%d).\\n"" , mode )"	402:4:9747:9815	4899349	19	True				
ANR	4899742	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Unknown access mode (%d).\\n"" , mode )"		4899349	0					
ANR	4899743	Callee	dprintf		4899349	0					
ANR	4899744	Identifier	dprintf		4899349	0					
ANR	4899745	ArgumentList	D_ALWAYS		4899349	1					
ANR	4899746	Argument	D_ALWAYS		4899349	0					
ANR	4899747	Identifier	D_ALWAYS		4899349	0					
ANR	4899748	Argument	"""store_cred: Unknown access mode (%d).\\n"""		4899349	1					
ANR	4899749	PrimaryExpression	"""store_cred: Unknown access mode (%d).\\n"""		4899349	0					
ANR	4899750	Argument	mode		4899349	2					
ANR	4899751	Identifier	mode		4899349	0					
ANR	4899752	ExpressionStatement	answer = 0	403:4:9821:9829	4899349	20	True				
ANR	4899753	AssignmentExpression	answer = 0		4899349	0		=			
ANR	4899754	Identifier	answer		4899349	0					
ANR	4899755	PrimaryExpression	0		4899349	1					
ANR	4899756	BreakStatement	break ;	404:4:9835:9840	4899349	21	True				
ANR	4899757	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Switching back to old priv state.\\n"" )"	407:2:9852:9911	4899349	2	True				
ANR	4899758	CallExpression	"dprintf ( D_FULLDEBUG , ""Switching back to old priv state.\\n"" )"		4899349	0					
ANR	4899759	Callee	dprintf		4899349	0					
ANR	4899760	Identifier	dprintf		4899349	0					
ANR	4899761	ArgumentList	D_FULLDEBUG		4899349	1					
ANR	4899762	Argument	D_FULLDEBUG		4899349	0					
ANR	4899763	Identifier	D_FULLDEBUG		4899349	0					
ANR	4899764	Argument	"""Switching back to old priv state.\\n"""		4899349	1					
ANR	4899765	PrimaryExpression	"""Switching back to old priv state.\\n"""		4899349	0					
ANR	4899766	ExpressionStatement	set_priv ( priv )	408:2:9915:9929	4899349	3	True				
ANR	4899767	CallExpression	set_priv ( priv )		4899349	0					
ANR	4899768	Callee	set_priv		4899349	0					
ANR	4899769	Identifier	set_priv		4899349	0					
ANR	4899770	ArgumentList	priv		4899349	1					
ANR	4899771	Argument	priv		4899349	0					
ANR	4899772	Identifier	priv		4899349	0					
ANR	4899773	ReturnStatement	return answer ;	411:1:9937:9950	4899349	9	True				
ANR	4899774	Identifier	answer		4899349	0					
ANR	4899775	ReturnType	int		4899349	1					
ANR	4899776	Identifier	store_cred_service		4899349	2					
ANR	4899777	ParameterList	"const char * user , const char * pw , int mode"		4899349	3					
ANR	4899778	Parameter	const char * user	299:23:7472:7487	4899349	0	True				
ANR	4899779	ParameterType	const char *		4899349	0					
ANR	4899780	Identifier	user		4899349	1					
ANR	4899781	Parameter	const char * pw	299:41:7490:7503	4899349	1	True				
ANR	4899782	ParameterType	const char *		4899349	0					
ANR	4899783	Identifier	pw		4899349	1					
ANR	4899784	Parameter	int mode	299:57:7506:7513	4899349	2	True				
ANR	4899785	ParameterType	int		4899349	0					
ANR	4899786	Identifier	mode		4899349	1					
ANR	4899787	CFGEntryNode	ENTRY		4899349		True				
ANR	4899788	CFGExitNode	EXIT		4899349		True				
ANR	4899789	Symbol	pw		4899349						
ANR	4899790	Symbol	mode		4899349						
ANR	4899791	Symbol	lsa_man . remove		4899349						
ANR	4899792	Symbol	can_switch_ids		4899349						
ANR	4899793	Symbol	priv		4899349						
ANR	4899794	Symbol	passw		4899349						
ANR	4899795	Symbol	SUCCESS		4899349						
ANR	4899796	Symbol	pw_wc		4899349						
ANR	4899797	Symbol	lsa_man . query		4899349						
ANR	4899798	Symbol	D_ALWAYS		4899349						
ANR	4899799	Symbol	isValidCredential		4899349						
ANR	4899800	Symbol	set_root_priv		4899349						
ANR	4899801	Symbol	D_FULLDEBUG		4899349						
ANR	4899802	Symbol	pwbuf		4899349						
ANR	4899803	Symbol	FAILURE		4899349						
ANR	4899804	Symbol	retval		4899349						
ANR	4899805	Symbol	FAILURE_NOT_FOUND		4899349						
ANR	4899806	Symbol	userbuf		4899349						
ANR	4899807	Symbol	answer		4899349						
ANR	4899808	Symbol	lsa_man . add		4899349						
ANR	4899809	Symbol	lsa_man		4899349						
ANR	4899810	Symbol	FAILURE_BAD_PASSWORD		4899349						
ANR	4899811	Symbol	wcslen		4899349						
ANR	4899812	Symbol	FAILURE_NOT_SUPPORTED		4899349						
ANR	4899813	Symbol	errno_result		4899349						
ANR	4899814	Symbol	MAX_PASSWORD_LENGTH		4899349						
ANR	4899815	Symbol	user		4899349						
ANR	4899816	DeclStmt									
ANR	4899817	Decl							char	char *	user
ANR	4899818	DeclStmt									
ANR	4899819	Decl							char	char *	pw
ANR	4899820	DeclStmt									
ANR	4899821	Decl							int	int	mode
ANR	4899822	DeclStmt									
ANR	4899823	Decl							int	int	result
ANR	4899824	DeclStmt									
ANR	4899825	Decl							int	int	errno_result
ANR	4899826	DeclStmt									
ANR	4899827	Decl							int	int	answer
ANR	4899828	DeclStmt									
ANR	4899829	Decl							lsa_mgr	lsa_mgr	lsa_man
ANR	4899830	DeclStmt									
ANR	4899831	Decl							char const	char const *	tmp
ANR	4899832	Function	isValidCredential	479:0:11379:13237							
ANR	4899833	FunctionDef	"isValidCredential (const char * input_user , const char * input_pw)"		4899832	0					
ANR	4899834	CompoundStatement		480:66:11450:13237	4899832	0					
ANR	4899835	IdentifierDeclStatement	HANDLE usrHnd = NULL ;	482:1:11507:11527	4899832	0	True				
ANR	4899836	IdentifierDecl	usrHnd = NULL		4899832	0					
ANR	4899837	IdentifierDeclType	HANDLE		4899832	0					
ANR	4899838	Identifier	usrHnd		4899832	1					
ANR	4899839	AssignmentExpression	usrHnd = NULL		4899832	2		=			
ANR	4899840	Identifier	NULL		4899832	0					
ANR	4899841	Identifier	NULL		4899832	1					
ANR	4899842	IdentifierDeclStatement	char * dom ;	483:1:11530:11539	4899832	1	True				
ANR	4899843	IdentifierDecl	* dom		4899832	0					
ANR	4899844	IdentifierDeclType	char *		4899832	0					
ANR	4899845	Identifier	dom		4899832	1					
ANR	4899846	IdentifierDeclStatement	DWORD LogonUserError ;	484:1:11542:11562	4899832	2	True				
ANR	4899847	IdentifierDecl	LogonUserError		4899832	0					
ANR	4899848	IdentifierDeclType	DWORD		4899832	0					
ANR	4899849	Identifier	LogonUserError		4899832	1					
ANR	4899850	IdentifierDeclStatement	BOOL retval ;	485:1:11565:11576	4899832	3	True				
ANR	4899851	IdentifierDecl	retval		4899832	0					
ANR	4899852	IdentifierDeclType	BOOL		4899832	0					
ANR	4899853	Identifier	retval		4899832	1					
ANR	4899854	ExpressionStatement	retval = 0	487:1:11580:11590	4899832	4	True				
ANR	4899855	AssignmentExpression	retval = 0		4899832	0		=			
ANR	4899856	Identifier	retval		4899832	0					
ANR	4899857	PrimaryExpression	0		4899832	1					
ANR	4899858	ExpressionStatement	usrHnd = NULL	488:1:11593:11606	4899832	5	True				
ANR	4899859	AssignmentExpression	usrHnd = NULL		4899832	0		=			
ANR	4899860	Identifier	usrHnd		4899832	0					
ANR	4899861	Identifier	NULL		4899832	1					
ANR	4899862	IdentifierDeclStatement	char * user = strdup ( input_user ) ;	490:1:11610:11642	4899832	6	True				
ANR	4899863	IdentifierDecl	* user = strdup ( input_user )		4899832	0					
ANR	4899864	IdentifierDeclType	char *		4899832	0					
ANR	4899865	Identifier	user		4899832	1					
ANR	4899866	AssignmentExpression	* user = strdup ( input_user )		4899832	2		=			
ANR	4899867	Identifier	user		4899832	0					
ANR	4899868	CallExpression	strdup ( input_user )		4899832	1					
ANR	4899869	Callee	strdup		4899832	0					
ANR	4899870	Identifier	strdup		4899832	0					
ANR	4899871	ArgumentList	input_user		4899832	1					
ANR	4899872	Argument	input_user		4899832	0					
ANR	4899873	Identifier	input_user		4899832	0					
ANR	4899874	ExpressionStatement	"dom = strchr ( user , '@' )"	493:1:11700:11723	4899832	7	True				
ANR	4899875	AssignmentExpression	"dom = strchr ( user , '@' )"		4899832	0		=			
ANR	4899876	Identifier	dom		4899832	0					
ANR	4899877	CallExpression	"strchr ( user , '@' )"		4899832	1					
ANR	4899878	Callee	strchr		4899832	0					
ANR	4899879	Identifier	strchr		4899832	0					
ANR	4899880	ArgumentList	user		4899832	1					
ANR	4899881	Argument	user		4899832	0					
ANR	4899882	Identifier	user		4899832	0					
ANR	4899883	Argument	'@'		4899832	1					
ANR	4899884	PrimaryExpression	'@'		4899832	0					
ANR	4899885	IfStatement	if ( dom )		4899832	8					
ANR	4899886	Condition	dom	495:6:11732:11734	4899832	0	True				
ANR	4899887	Identifier	dom		4899832	0					
ANR	4899888	CompoundStatement		16:12:287:287	4899832	1					
ANR	4899889	ExpressionStatement	* dom = '\\0'	496:2:11742:11753	4899832	0	True				
ANR	4899890	AssignmentExpression	* dom = '\\0'		4899832	0		=			
ANR	4899891	UnaryOperationExpression	* dom		4899832	0					
ANR	4899892	UnaryOperator	*		4899832	0					
ANR	4899893	Identifier	dom		4899832	1					
ANR	4899894	PrimaryExpression	'\\0'		4899832	1					
ANR	4899895	ExpressionStatement	dom ++	497:2:11757:11762	4899832	1	True				
ANR	4899896	PostIncDecOperationExpression	dom ++		4899832	0					
ANR	4899897	Identifier	dom		4899832	0					
ANR	4899898	IncDec	++		4899832	1					
ANR	4899899	IfStatement	"if ( strcmp ( user , POOL_PASSWORD_USERNAME ) == 0 )"		4899832	9					
ANR	4899900	Condition	"strcmp ( user , POOL_PASSWORD_USERNAME ) == 0"	501:5:11834:11874	4899832	0	True				
ANR	4899901	EqualityExpression	"strcmp ( user , POOL_PASSWORD_USERNAME ) == 0"		4899832	0		==			
ANR	4899902	CallExpression	"strcmp ( user , POOL_PASSWORD_USERNAME )"		4899832	0					
ANR	4899903	Callee	strcmp		4899832	0					
ANR	4899904	Identifier	strcmp		4899832	0					
ANR	4899905	ArgumentList	user		4899832	1					
ANR	4899906	Argument	user		4899832	0					
ANR	4899907	Identifier	user		4899832	0					
ANR	4899908	Argument	POOL_PASSWORD_USERNAME		4899832	1					
ANR	4899909	Identifier	POOL_PASSWORD_USERNAME		4899832	0					
ANR	4899910	PrimaryExpression	0		4899832	1					
ANR	4899911	CompoundStatement		22:48:426:426	4899832	1					
ANR	4899912	ExpressionStatement	free ( user )	502:2:11881:11891	4899832	0	True				
ANR	4899913	CallExpression	free ( user )		4899832	0					
ANR	4899914	Callee	free		4899832	0					
ANR	4899915	Identifier	free		4899832	0					
ANR	4899916	ArgumentList	user		4899832	1					
ANR	4899917	Argument	user		4899832	0					
ANR	4899918	Identifier	user		4899832	0					
ANR	4899919	ReturnStatement	return true ;	503:2:11895:11906	4899832	1	True				
ANR	4899920	Identifier	true		4899832	0					
ANR	4899921	IdentifierDeclStatement	char * pw = strdup ( input_pw ) ;	506:1:11913:11941	4899832	10	True				
ANR	4899922	IdentifierDecl	* pw = strdup ( input_pw )		4899832	0					
ANR	4899923	IdentifierDeclType	char *		4899832	0					
ANR	4899924	Identifier	pw		4899832	1					
ANR	4899925	AssignmentExpression	* pw = strdup ( input_pw )		4899832	2		=			
ANR	4899926	Identifier	pw		4899832	0					
ANR	4899927	CallExpression	strdup ( input_pw )		4899832	1					
ANR	4899928	Callee	strdup		4899832	0					
ANR	4899929	Identifier	strdup		4899832	0					
ANR	4899930	ArgumentList	input_pw		4899832	1					
ANR	4899931	Argument	input_pw		4899832	0					
ANR	4899932	Identifier	input_pw		4899832	0					
ANR	4899933	IdentifierDeclStatement	"bool wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false ) ;"	507:1:11944:12022	4899832	11	True				
ANR	4899934	IdentifierDecl	"wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		4899832	0					
ANR	4899935	IdentifierDeclType	bool		4899832	0					
ANR	4899936	Identifier	wantSkipNetworkLogon		4899832	1					
ANR	4899937	AssignmentExpression	"wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		4899832	2		=			
ANR	4899938	Identifier	wantSkipNetworkLogon		4899832	0					
ANR	4899939	CallExpression	"param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		4899832	1					
ANR	4899940	Callee	param_boolean		4899832	0					
ANR	4899941	Identifier	param_boolean		4899832	0					
ANR	4899942	ArgumentList	"""SKIP_WINDOWS_LOGON_NETWORK"""		4899832	1					
ANR	4899943	Argument	"""SKIP_WINDOWS_LOGON_NETWORK"""		4899832	0					
ANR	4899944	PrimaryExpression	"""SKIP_WINDOWS_LOGON_NETWORK"""		4899832	0					
ANR	4899945	Argument	false		4899832	1					
ANR	4899946	Identifier	false		4899832	0					
ANR	4899947	IfStatement	if ( ! wantSkipNetworkLogon )		4899832	12					
ANR	4899948	Condition	! wantSkipNetworkLogon	508:5:12029:12049	4899832	0	True				
ANR	4899949	UnaryOperationExpression	! wantSkipNetworkLogon		4899832	0					
ANR	4899950	UnaryOperator	!		4899832	0					
ANR	4899951	Identifier	wantSkipNetworkLogon		4899832	1					
ANR	4899952	CompoundStatement		29:28:601:601	4899832	1					
ANR	4899953	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"	509:3:12057:12315	4899832	0	True				
ANR	4899954	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		4899832	0		=			
ANR	4899955	Identifier	retval		4899832	0					
ANR	4899956	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		4899832	1					
ANR	4899957	Callee	LogonUser		4899832	0					
ANR	4899958	Identifier	LogonUser		4899832	0					
ANR	4899959	ArgumentList	user		4899832	1					
ANR	4899960	Argument	user		4899832	0					
ANR	4899961	Identifier	user		4899832	0					
ANR	4899962	Argument	dom		4899832	1					
ANR	4899963	Identifier	dom		4899832	0					
ANR	4899964	Argument	pw		4899832	2					
ANR	4899965	Identifier	pw		4899832	0					
ANR	4899966	Argument	LOGON32_LOGON_NETWORK		4899832	3					
ANR	4899967	Identifier	LOGON32_LOGON_NETWORK		4899832	0					
ANR	4899968	Argument	LOGON32_PROVIDER_DEFAULT		4899832	4					
ANR	4899969	Identifier	LOGON32_PROVIDER_DEFAULT		4899832	0					
ANR	4899970	Argument	& usrHnd		4899832	5					
ANR	4899971	UnaryOperationExpression	& usrHnd		4899832	0					
ANR	4899972	UnaryOperator	&		4899832	0					
ANR	4899973	Identifier	usrHnd		4899832	1					
ANR	4899974	ExpressionStatement	LogonUserError = GetLastError ( )	517:3:12320:12351	4899832	1	True				
ANR	4899975	AssignmentExpression	LogonUserError = GetLastError ( )		4899832	0		=			
ANR	4899976	Identifier	LogonUserError		4899832	0					
ANR	4899977	CallExpression	GetLastError ( )		4899832	1					
ANR	4899978	Callee	GetLastError		4899832	0					
ANR	4899979	Identifier	GetLastError		4899832	0					
ANR	4899980	ArgumentList			4899832	1					
ANR	4899981	IfStatement	if ( 0 == retval )		4899832	13					
ANR	4899982	Condition	0 == retval	519:6:12362:12372	4899832	0	True				
ANR	4899983	EqualityExpression	0 == retval		4899832	0		==			
ANR	4899984	PrimaryExpression	0		4899832	0					
ANR	4899985	Identifier	retval		4899832	1					
ANR	4899986	CompoundStatement		40:20:925:925	4899832	1					
ANR	4899987	IfStatement	if ( ! wantSkipNetworkLogon )		4899832	0					
ANR	4899988	Condition	! wantSkipNetworkLogon	520:6:12384:12404	4899832	0	True				
ANR	4899989	UnaryOperationExpression	! wantSkipNetworkLogon		4899832	0					
ANR	4899990	UnaryOperator	!		4899832	0					
ANR	4899991	Identifier	wantSkipNetworkLogon		4899832	1					
ANR	4899992	CompoundStatement		41:29:956:956	4899832	1					
ANR	4899993	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""NETWORK logon failed. Attempting INTERACTIVE\\n"" )"	521:4:12413:12483	4899832	0	True				
ANR	4899994	CallExpression	"dprintf ( D_FULLDEBUG , ""NETWORK logon failed. Attempting INTERACTIVE\\n"" )"		4899832	0					
ANR	4899995	Callee	dprintf		4899832	0					
ANR	4899996	Identifier	dprintf		4899832	0					
ANR	4899997	ArgumentList	D_FULLDEBUG		4899832	1					
ANR	4899998	Argument	D_FULLDEBUG		4899832	0					
ANR	4899999	Identifier	D_FULLDEBUG		4899832	0					
ANR	4900000	Argument	"""NETWORK logon failed. Attempting INTERACTIVE\\n"""		4899832	1					
ANR	4900001	PrimaryExpression	"""NETWORK logon failed. Attempting INTERACTIVE\\n"""		4899832	0					
ANR	4900002	ElseStatement	else		4899832	0					
ANR	4900003	CompoundStatement		43:9:1043:1043	4899832	0					
ANR	4900004	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""NETWORK logon disabled. Trying INTERACTIVE only!\\n"" )"	523:4:12500:12574	4899832	0	True				
ANR	4900005	CallExpression	"dprintf ( D_FULLDEBUG , ""NETWORK logon disabled. Trying INTERACTIVE only!\\n"" )"		4899832	0					
ANR	4900006	Callee	dprintf		4899832	0					
ANR	4900007	Identifier	dprintf		4899832	0					
ANR	4900008	ArgumentList	D_FULLDEBUG		4899832	1					
ANR	4900009	Argument	D_FULLDEBUG		4899832	0					
ANR	4900010	Identifier	D_FULLDEBUG		4899832	0					
ANR	4900011	Argument	"""NETWORK logon disabled. Trying INTERACTIVE only!\\n"""		4899832	1					
ANR	4900012	PrimaryExpression	"""NETWORK logon disabled. Trying INTERACTIVE only!\\n"""		4899832	0					
ANR	4900013	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"	525:2:12582:12867	4899832	1	True				
ANR	4900014	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		4899832	0		=			
ANR	4900015	Identifier	retval		4899832	0					
ANR	4900016	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		4899832	1					
ANR	4900017	Callee	LogonUser		4899832	0					
ANR	4900018	Identifier	LogonUser		4899832	0					
ANR	4900019	ArgumentList	user		4899832	1					
ANR	4900020	Argument	user		4899832	0					
ANR	4900021	Identifier	user		4899832	0					
ANR	4900022	Argument	dom		4899832	1					
ANR	4900023	Identifier	dom		4899832	0					
ANR	4900024	Argument	pw		4899832	2					
ANR	4900025	Identifier	pw		4899832	0					
ANR	4900026	Argument	LOGON32_LOGON_INTERACTIVE		4899832	3					
ANR	4900027	Identifier	LOGON32_LOGON_INTERACTIVE		4899832	0					
ANR	4900028	Argument	LOGON32_PROVIDER_DEFAULT		4899832	4					
ANR	4900029	Identifier	LOGON32_PROVIDER_DEFAULT		4899832	0					
ANR	4900030	Argument	& usrHnd		4899832	5					
ANR	4900031	UnaryOperationExpression	& usrHnd		4899832	0					
ANR	4900032	UnaryOperator	&		4899832	0					
ANR	4900033	Identifier	usrHnd		4899832	1					
ANR	4900034	ExpressionStatement	LogonUserError = GetLastError ( )	533:2:12871:12902	4899832	2	True				
ANR	4900035	AssignmentExpression	LogonUserError = GetLastError ( )		4899832	0		=			
ANR	4900036	Identifier	LogonUserError		4899832	0					
ANR	4900037	CallExpression	GetLastError ( )		4899832	1					
ANR	4900038	Callee	GetLastError		4899832	0					
ANR	4900039	Identifier	GetLastError		4899832	0					
ANR	4900040	ArgumentList			4899832	1					
ANR	4900041	IfStatement	if ( user )		4899832	14					
ANR	4900042	Condition	user	536:5:12913:12916	4899832	0	True				
ANR	4900043	Identifier	user		4899832	0					
ANR	4900044	ExpressionStatement	free ( user )	536:11:12919:12929	4899832	1	True				
ANR	4900045	CallExpression	free ( user )		4899832	0					
ANR	4900046	Callee	free		4899832	0					
ANR	4900047	Identifier	free		4899832	0					
ANR	4900048	ArgumentList	user		4899832	1					
ANR	4900049	Argument	user		4899832	0					
ANR	4900050	Identifier	user		4899832	0					
ANR	4900051	IfStatement	if ( pw )		4899832	15					
ANR	4900052	Condition	pw	537:5:12936:12937	4899832	0	True				
ANR	4900053	Identifier	pw		4899832	0					
ANR	4900054	CompoundStatement		58:9:1489:1489	4899832	1					
ANR	4900055	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	538:2:12944:12975	4899832	0	True				
ANR	4900056	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		4899832	0					
ANR	4900057	Callee	SecureZeroMemory		4899832	0					
ANR	4900058	Identifier	SecureZeroMemory		4899832	0					
ANR	4900059	ArgumentList	pw		4899832	1					
ANR	4900060	Argument	pw		4899832	0					
ANR	4900061	Identifier	pw		4899832	0					
ANR	4900062	Argument	strlen ( pw )		4899832	1					
ANR	4900063	CallExpression	strlen ( pw )		4899832	0					
ANR	4900064	Callee	strlen		4899832	0					
ANR	4900065	Identifier	strlen		4899832	0					
ANR	4900066	ArgumentList	pw		4899832	1					
ANR	4900067	Argument	pw		4899832	0					
ANR	4900068	Identifier	pw		4899832	0					
ANR	4900069	ExpressionStatement	free ( pw )	539:2:12979:12987	4899832	1	True				
ANR	4900070	CallExpression	free ( pw )		4899832	0					
ANR	4900071	Callee	free		4899832	0					
ANR	4900072	Identifier	free		4899832	0					
ANR	4900073	ArgumentList	pw		4899832	1					
ANR	4900074	Argument	pw		4899832	0					
ANR	4900075	Identifier	pw		4899832	0					
ANR	4900076	IfStatement	if ( retval == 0 )		4899832	16					
ANR	4900077	Condition	retval == 0	542:6:12999:13009	4899832	0	True				
ANR	4900078	EqualityExpression	retval == 0		4899832	0		==			
ANR	4900079	Identifier	retval		4899832	0					
ANR	4900080	PrimaryExpression	0		4899832	1					
ANR	4900081	CompoundStatement		63:20:1562:1562	4899832	1					
ANR	4900082	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to log in %s with err=%d\\n"" , input_user , LogonUserError )"	543:2:13017:13104	4899832	0	True				
ANR	4900083	CallExpression	"dprintf ( D_ALWAYS , ""Failed to log in %s with err=%d\\n"" , input_user , LogonUserError )"		4899832	0					
ANR	4900084	Callee	dprintf		4899832	0					
ANR	4900085	Identifier	dprintf		4899832	0					
ANR	4900086	ArgumentList	D_ALWAYS		4899832	1					
ANR	4900087	Argument	D_ALWAYS		4899832	0					
ANR	4900088	Identifier	D_ALWAYS		4899832	0					
ANR	4900089	Argument	"""Failed to log in %s with err=%d\\n"""		4899832	1					
ANR	4900090	PrimaryExpression	"""Failed to log in %s with err=%d\\n"""		4899832	0					
ANR	4900091	Argument	input_user		4899832	2					
ANR	4900092	Identifier	input_user		4899832	0					
ANR	4900093	Argument	LogonUserError		4899832	3					
ANR	4900094	Identifier	LogonUserError		4899832	0					
ANR	4900095	ReturnStatement	return false ;	545:2:13108:13120	4899832	1	True				
ANR	4900096	Identifier	false		4899832	0					
ANR	4900097	ElseStatement	else		4899832	0					
ANR	4900098	CompoundStatement		67:8:1679:1679	4899832	0					
ANR	4900099	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Succeeded to log in %s\\n"" , input_user )"	547:2:13134:13194	4899832	0	True				
ANR	4900100	CallExpression	"dprintf ( D_FULLDEBUG , ""Succeeded to log in %s\\n"" , input_user )"		4899832	0					
ANR	4900101	Callee	dprintf		4899832	0					
ANR	4900102	Identifier	dprintf		4899832	0					
ANR	4900103	ArgumentList	D_FULLDEBUG		4899832	1					
ANR	4900104	Argument	D_FULLDEBUG		4899832	0					
ANR	4900105	Identifier	D_FULLDEBUG		4899832	0					
ANR	4900106	Argument	"""Succeeded to log in %s\\n"""		4899832	1					
ANR	4900107	PrimaryExpression	"""Succeeded to log in %s\\n"""		4899832	0					
ANR	4900108	Argument	input_user		4899832	2					
ANR	4900109	Identifier	input_user		4899832	0					
ANR	4900110	ExpressionStatement	CloseHandle ( usrHnd )	548:2:13198:13217	4899832	1	True				
ANR	4900111	CallExpression	CloseHandle ( usrHnd )		4899832	0					
ANR	4900112	Callee	CloseHandle		4899832	0					
ANR	4900113	Identifier	CloseHandle		4899832	0					
ANR	4900114	ArgumentList	usrHnd		4899832	1					
ANR	4900115	Argument	usrHnd		4899832	0					
ANR	4900116	Identifier	usrHnd		4899832	0					
ANR	4900117	ReturnStatement	return true ;	549:2:13221:13232	4899832	2	True				
ANR	4900118	Identifier	true		4899832	0					
ANR	4900119	ReturnType	bool		4899832	1					
ANR	4900120	Identifier	isValidCredential		4899832	2					
ANR	4900121	ParameterList	"const char * input_user , const char * input_pw"		4899832	3					
ANR	4900122	Parameter	const char * input_user	480:19:11403:11424	4899832	0	True				
ANR	4900123	ParameterType	const char *		4899832	0					
ANR	4900124	Identifier	input_user		4899832	1					
ANR	4900125	Parameter	const char * input_pw	480:43:11427:11446	4899832	1	True				
ANR	4900126	ParameterType	const char *		4899832	0					
ANR	4900127	Identifier	input_pw		4899832	1					
ANR	4900128	CFGEntryNode	ENTRY		4899832		True				
ANR	4900129	CFGExitNode	EXIT		4899832		True				
ANR	4900130	Symbol	& usrHnd		4899832						
ANR	4900131	Symbol	dom		4899832						
ANR	4900132	Symbol	input_user		4899832						
ANR	4900133	Symbol	pw		4899832						
ANR	4900134	Symbol	LOGON32_LOGON_INTERACTIVE		4899832						
ANR	4900135	Symbol	strchr		4899832						
ANR	4900136	Symbol	LOGON32_LOGON_NETWORK		4899832						
ANR	4900137	Symbol	strlen		4899832						
ANR	4900138	Symbol	input_pw		4899832						
ANR	4900139	Symbol	* dom		4899832						
ANR	4900140	Symbol	usrHnd		4899832						
ANR	4900141	Symbol	LogonUser		4899832						
ANR	4900142	Symbol	strcmp		4899832						
ANR	4900143	Symbol	NULL		4899832						
ANR	4900144	Symbol	LogonUserError		4899832						
ANR	4900145	Symbol	false		4899832						
ANR	4900146	Symbol	LOGON32_PROVIDER_DEFAULT		4899832						
ANR	4900147	Symbol	D_ALWAYS		4899832						
ANR	4900148	Symbol	param_boolean		4899832						
ANR	4900149	Symbol	D_FULLDEBUG		4899832						
ANR	4900150	Symbol	retval		4899832						
ANR	4900151	Symbol	wantSkipNetworkLogon		4899832						
ANR	4900152	Symbol	POOL_PASSWORD_USERNAME		4899832						
ANR	4900153	Symbol	GetLastError		4899832						
ANR	4900154	Symbol	true		4899832						
ANR	4900155	Symbol	strdup		4899832						
ANR	4900156	Symbol	user		4899832						
ANR	4900157	Function	code_store_cred	555:0:13257:13899							
ANR	4900158	FunctionDef	"code_store_cred (Stream * socket , char * & user , char * & pw , int & mode)"		4900157	0					
ANR	4900159	CompoundStatement		555:78:13335:13899	4900157	0					
ANR	4900160	IdentifierDeclStatement	int result ;	557:1:13340:13350	4900157	0	True				
ANR	4900161	IdentifierDecl	result		4900157	0					
ANR	4900162	IdentifierDeclType	int		4900157	0					
ANR	4900163	Identifier	result		4900157	1					
ANR	4900164	ExpressionStatement	result = socket -> code ( user )	559:1:13355:13382	4900157	1	True				
ANR	4900165	AssignmentExpression	result = socket -> code ( user )		4900157	0		=			
ANR	4900166	Identifier	result		4900157	0					
ANR	4900167	CallExpression	socket -> code ( user )		4900157	1					
ANR	4900168	Callee	socket -> code		4900157	0					
ANR	4900169	PtrMemberAccess	socket -> code		4900157	0					
ANR	4900170	Identifier	socket		4900157	0					
ANR	4900171	Identifier	code		4900157	1					
ANR	4900172	ArgumentList	user		4900157	1					
ANR	4900173	Argument	user		4900157	0					
ANR	4900174	Identifier	user		4900157	0					
ANR	4900175	IfStatement	if ( ! result )		4900157	2					
ANR	4900176	Condition	! result	560:5:13389:13395	4900157	0	True				
ANR	4900177	UnaryOperationExpression	! result		4900157	0					
ANR	4900178	UnaryOperator	!		4900157	0					
ANR	4900179	Identifier	result		4900157	1					
ANR	4900180	CompoundStatement		6:15:63:63	4900157	1					
ANR	4900181	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv user.\\n"" )"	561:2:13403:13463	4900157	0	True				
ANR	4900182	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv user.\\n"" )"		4900157	0					
ANR	4900183	Callee	dprintf		4900157	0					
ANR	4900184	Identifier	dprintf		4900157	0					
ANR	4900185	ArgumentList	D_ALWAYS		4900157	1					
ANR	4900186	Argument	D_ALWAYS		4900157	0					
ANR	4900187	Identifier	D_ALWAYS		4900157	0					
ANR	4900188	Argument	"""store_cred: Failed to send/recv user.\\n"""		4900157	1					
ANR	4900189	PrimaryExpression	"""store_cred: Failed to send/recv user.\\n"""		4900157	0					
ANR	4900190	ReturnStatement	return FALSE ;	562:2:13467:13479	4900157	1	True				
ANR	4900191	Identifier	FALSE		4900157	0					
ANR	4900192	ExpressionStatement	result = socket -> code ( pw )	565:1:13487:13512	4900157	3	True				
ANR	4900193	AssignmentExpression	result = socket -> code ( pw )		4900157	0		=			
ANR	4900194	Identifier	result		4900157	0					
ANR	4900195	CallExpression	socket -> code ( pw )		4900157	1					
ANR	4900196	Callee	socket -> code		4900157	0					
ANR	4900197	PtrMemberAccess	socket -> code		4900157	0					
ANR	4900198	Identifier	socket		4900157	0					
ANR	4900199	Identifier	code		4900157	1					
ANR	4900200	ArgumentList	pw		4900157	1					
ANR	4900201	Argument	pw		4900157	0					
ANR	4900202	Identifier	pw		4900157	0					
ANR	4900203	IfStatement	if ( ! result )		4900157	4					
ANR	4900204	Condition	! result	566:5:13519:13525	4900157	0	True				
ANR	4900205	UnaryOperationExpression	! result		4900157	0					
ANR	4900206	UnaryOperator	!		4900157	0					
ANR	4900207	Identifier	result		4900157	1					
ANR	4900208	CompoundStatement		12:15:193:193	4900157	1					
ANR	4900209	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv pw.\\n"" )"	567:2:13533:13591	4900157	0	True				
ANR	4900210	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv pw.\\n"" )"		4900157	0					
ANR	4900211	Callee	dprintf		4900157	0					
ANR	4900212	Identifier	dprintf		4900157	0					
ANR	4900213	ArgumentList	D_ALWAYS		4900157	1					
ANR	4900214	Argument	D_ALWAYS		4900157	0					
ANR	4900215	Identifier	D_ALWAYS		4900157	0					
ANR	4900216	Argument	"""store_cred: Failed to send/recv pw.\\n"""		4900157	1					
ANR	4900217	PrimaryExpression	"""store_cred: Failed to send/recv pw.\\n"""		4900157	0					
ANR	4900218	ReturnStatement	return FALSE ;	568:2:13595:13607	4900157	1	True				
ANR	4900219	Identifier	FALSE		4900157	0					
ANR	4900220	ExpressionStatement	result = socket -> code ( mode )	571:1:13615:13642	4900157	5	True				
ANR	4900221	AssignmentExpression	result = socket -> code ( mode )		4900157	0		=			
ANR	4900222	Identifier	result		4900157	0					
ANR	4900223	CallExpression	socket -> code ( mode )		4900157	1					
ANR	4900224	Callee	socket -> code		4900157	0					
ANR	4900225	PtrMemberAccess	socket -> code		4900157	0					
ANR	4900226	Identifier	socket		4900157	0					
ANR	4900227	Identifier	code		4900157	1					
ANR	4900228	ArgumentList	mode		4900157	1					
ANR	4900229	Argument	mode		4900157	0					
ANR	4900230	Identifier	mode		4900157	0					
ANR	4900231	IfStatement	if ( ! result )		4900157	6					
ANR	4900232	Condition	! result	572:5:13649:13655	4900157	0	True				
ANR	4900233	UnaryOperationExpression	! result		4900157	0					
ANR	4900234	UnaryOperator	!		4900157	0					
ANR	4900235	Identifier	result		4900157	1					
ANR	4900236	CompoundStatement		18:15:323:323	4900157	1					
ANR	4900237	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv mode.\\n"" )"	573:2:13663:13723	4900157	0	True				
ANR	4900238	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv mode.\\n"" )"		4900157	0					
ANR	4900239	Callee	dprintf		4900157	0					
ANR	4900240	Identifier	dprintf		4900157	0					
ANR	4900241	ArgumentList	D_ALWAYS		4900157	1					
ANR	4900242	Argument	D_ALWAYS		4900157	0					
ANR	4900243	Identifier	D_ALWAYS		4900157	0					
ANR	4900244	Argument	"""store_cred: Failed to send/recv mode.\\n"""		4900157	1					
ANR	4900245	PrimaryExpression	"""store_cred: Failed to send/recv mode.\\n"""		4900157	0					
ANR	4900246	ReturnStatement	return FALSE ;	574:2:13727:13739	4900157	1	True				
ANR	4900247	Identifier	FALSE		4900157	0					
ANR	4900248	ExpressionStatement	result = socket -> end_of_message ( )	577:1:13747:13780	4900157	7	True				
ANR	4900249	AssignmentExpression	result = socket -> end_of_message ( )		4900157	0		=			
ANR	4900250	Identifier	result		4900157	0					
ANR	4900251	CallExpression	socket -> end_of_message ( )		4900157	1					
ANR	4900252	Callee	socket -> end_of_message		4900157	0					
ANR	4900253	PtrMemberAccess	socket -> end_of_message		4900157	0					
ANR	4900254	Identifier	socket		4900157	0					
ANR	4900255	Identifier	end_of_message		4900157	1					
ANR	4900256	ArgumentList			4900157	1					
ANR	4900257	IfStatement	if ( ! result )		4900157	8					
ANR	4900258	Condition	! result	578:5:13787:13793	4900157	0	True				
ANR	4900259	UnaryOperationExpression	! result		4900157	0					
ANR	4900260	UnaryOperator	!		4900157	0					
ANR	4900261	Identifier	result		4900157	1					
ANR	4900262	CompoundStatement		24:15:461:461	4900157	1					
ANR	4900263	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv eom.\\n"" )"	579:2:13801:13860	4900157	0	True				
ANR	4900264	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv eom.\\n"" )"		4900157	0					
ANR	4900265	Callee	dprintf		4900157	0					
ANR	4900266	Identifier	dprintf		4900157	0					
ANR	4900267	ArgumentList	D_ALWAYS		4900157	1					
ANR	4900268	Argument	D_ALWAYS		4900157	0					
ANR	4900269	Identifier	D_ALWAYS		4900157	0					
ANR	4900270	Argument	"""store_cred: Failed to send/recv eom.\\n"""		4900157	1					
ANR	4900271	PrimaryExpression	"""store_cred: Failed to send/recv eom.\\n"""		4900157	0					
ANR	4900272	ReturnStatement	return FALSE ;	580:2:13864:13876	4900157	1	True				
ANR	4900273	Identifier	FALSE		4900157	0					
ANR	4900274	ReturnStatement	return TRUE ;	583:1:13884:13895	4900157	9	True				
ANR	4900275	Identifier	TRUE		4900157	0					
ANR	4900276	ReturnType	static int		4900157	1					
ANR	4900277	Identifier	code_store_cred		4900157	2					
ANR	4900278	ParameterList	"Stream * socket , char * & user , char * & pw , int & mode"		4900157	3					
ANR	4900279	Parameter	Stream * socket	555:27:13284:13297	4900157	0	True				
ANR	4900280	ParameterType	Stream *		4900157	0					
ANR	4900281	Identifier	socket		4900157	1					
ANR	4900282	Parameter	char * & user	555:43:13300:13310	4900157	1	True				
ANR	4900283	ParameterType	char * &		4900157	0					
ANR	4900284	Identifier	user		4900157	1					
ANR	4900285	Parameter	char * & pw	555:56:13313:13321	4900157	2	True				
ANR	4900286	ParameterType	char * &		4900157	0					
ANR	4900287	Identifier	pw		4900157	1					
ANR	4900288	Parameter	int & mode	555:67:13324:13332	4900157	3	True				
ANR	4900289	ParameterType	int &		4900157	0					
ANR	4900290	Identifier	mode		4900157	1					
ANR	4900291	CFGEntryNode	ENTRY		4900157		True				
ANR	4900292	CFGExitNode	EXIT		4900157		True				
ANR	4900293	Symbol	mode		4900157						
ANR	4900294	Symbol	result		4900157						
ANR	4900295	Symbol	pw		4900157						
ANR	4900296	Symbol	D_ALWAYS		4900157						
ANR	4900297	Symbol	* socket		4900157						
ANR	4900298	Symbol	TRUE		4900157						
ANR	4900299	Symbol	FALSE		4900157						
ANR	4900300	Symbol	socket		4900157						
ANR	4900301	Symbol	socket -> code		4900157						
ANR	4900302	Symbol	user		4900157						
ANR	4900303	Symbol	socket -> end_of_message		4900157						
ANR	4900304	DeclStmt									
ANR	4900305	Decl							int	int	result
ANR	4900306	DeclStmt									
ANR	4900307	Decl							char	char *	pw
ANR	4900308	DeclStmt									
ANR	4900309	Decl							char	char *	domain
ANR	4900310	DeclStmt									
ANR	4900311	Decl							MyString	MyString	username
ANR	4900312	DeclStmt									
ANR	4900313	Decl							char	char *	credd_host
ANR	4900314	DeclStmt									
ANR	4900315	Decl							MyString	MyString	my_fqdn_str
ANR	4900316	DeclStmt									
ANR	4900317	Decl							MyString	MyString	my_hostname_str
ANR	4900318	DeclStmt									
ANR	4900319	Decl							MyString	MyString	my_ip_str
ANR	4900320	DeclStmt									
ANR	4900321	Decl							bool	bool	on_credd_host
ANR	4900322	DeclStmt									
ANR	4900323	Decl							const char	const char *	addr
ANR	4900324	Function	store_cred	662:0:16096:20309							
ANR	4900325	FunctionDef	"store_cred (const char * user , const char * pw , int mode , Daemon * d , bool force)"		4900324	0					
ANR	4900326	CompoundStatement		663:78:16179:20309	4900324	0					
ANR	4900327	IdentifierDeclStatement	int result ;	665:1:16184:16194	4900324	0	True				
ANR	4900328	IdentifierDecl	result		4900324	0					
ANR	4900329	IdentifierDeclType	int		4900324	0					
ANR	4900330	Identifier	result		4900324	1					
ANR	4900331	IdentifierDeclStatement	int return_val ;	666:1:16197:16211	4900324	1	True				
ANR	4900332	IdentifierDecl	return_val		4900324	0					
ANR	4900333	IdentifierDeclType	int		4900324	0					
ANR	4900334	Identifier	return_val		4900324	1					
ANR	4900335	IdentifierDeclStatement	Sock * sock = NULL ;	667:1:16214:16231	4900324	2	True				
ANR	4900336	IdentifierDecl	* sock = NULL		4900324	0					
ANR	4900337	IdentifierDeclType	Sock *		4900324	0					
ANR	4900338	Identifier	sock		4900324	1					
ANR	4900339	AssignmentExpression	* sock = NULL		4900324	2		=			
ANR	4900340	Identifier	NULL		4900324	0					
ANR	4900341	Identifier	NULL		4900324	1					
ANR	4900342	Statement	static	670:1:16295:16300	4900324	3	True				
ANR	4900343	IdentifierDeclStatement	const int mode_offset = 100 ;	670:8:16302:16329	4900324	4	True				
ANR	4900344	IdentifierDecl	mode_offset = 100		4900324	0					
ANR	4900345	IdentifierDeclType	const int		4900324	0					
ANR	4900346	Identifier	mode_offset		4900324	1					
ANR	4900347	AssignmentExpression	mode_offset = 100		4900324	2		=			
ANR	4900348	Identifier	mode_offset		4900324	0					
ANR	4900349	PrimaryExpression	100		4900324	1					
ANR	4900350	Statement	static	671:1:16332:16337	4900324	5	True				
ANR	4900351	Statement	const	671:8:16339:16343	4900324	6	True				
ANR	4900352	Statement	char	671:14:16345:16348	4900324	7	True				
ANR	4900353	Statement	*	671:19:16350:16350	4900324	8	True				
ANR	4900354	Statement	mode_name	671:20:16351:16359	4900324	9	True				
ANR	4900355	Statement	[	671:29:16360:16360	4900324	10	True				
ANR	4900356	Statement	]	671:30:16361:16361	4900324	11	True				
ANR	4900357	Statement	=	671:32:16363:16363	4900324	12	True				
ANR	4900358	CompoundStatement		9:34:185:185	4900324	13					
ANR	4900359	Statement	ADD_CREDENTIAL	672:2:16369:16382	4900324	0	True				
ANR	4900360	Statement	","	672:16:16383:16383	4900324	1	True				
ANR	4900361	Statement	DELETE_CREDENTIAL	673:2:16387:16403	4900324	2	True				
ANR	4900362	Statement	","	673:19:16404:16404	4900324	3	True				
ANR	4900363	Statement	QUERY_CREDENTIAL	674:2:16408:16423	4900324	4	True				
ANR	4900364	Statement	","	676:2:16440:16440	4900324	5	True				
ANR	4900365	Statement	CONFIG_CREDENTIAL	676:4:16442:16458	4900324	6	True				
ANR	4900366	ExpressionStatement		678:2:16469:16469	4900324	14	True				
ANR	4900367	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: In mode '%s'\\n"" , mode_name [ mode - mode_offset ] )"	679:1:16473:16560	4900324	15	True				
ANR	4900368	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: In mode '%s'\\n"" , mode_name [ mode - mode_offset ] )"		4900324	0					
ANR	4900369	Callee	dprintf		4900324	0					
ANR	4900370	Identifier	dprintf		4900324	0					
ANR	4900371	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900372	Argument	D_ALWAYS		4900324	0					
ANR	4900373	Identifier	D_ALWAYS		4900324	0					
ANR	4900374	Argument	"""STORE_CRED: In mode '%s'\\n"""		4900324	1					
ANR	4900375	PrimaryExpression	"""STORE_CRED: In mode '%s'\\n"""		4900324	0					
ANR	4900376	Argument	mode_name [ mode - mode_offset ]		4900324	2					
ANR	4900377	ArrayIndexing	mode_name [ mode - mode_offset ]		4900324	0					
ANR	4900378	Identifier	mode_name		4900324	0					
ANR	4900379	AdditiveExpression	mode - mode_offset		4900324	1		-			
ANR	4900380	Identifier	mode		4900324	0					
ANR	4900381	Identifier	mode_offset		4900324	1					
ANR	4900382	IfStatement	if ( is_root ( ) && d == NULL )		4900324	16					
ANR	4900383	Condition	is_root ( ) && d == NULL	687:6:16761:16782	4900324	0	True				
ANR	4900384	AndExpression	is_root ( ) && d == NULL		4900324	0		&&			
ANR	4900385	CallExpression	is_root ( )		4900324	0					
ANR	4900386	Callee	is_root		4900324	0					
ANR	4900387	Identifier	is_root		4900324	0					
ANR	4900388	ArgumentList			4900324	1					
ANR	4900389	EqualityExpression	d == NULL		4900324	1		==			
ANR	4900390	Identifier	d		4900324	0					
ANR	4900391	Identifier	NULL		4900324	1					
ANR	4900392	CompoundStatement		25:31:606:606	4900324	1					
ANR	4900393	ExpressionStatement	"return_val = store_cred_service ( user , pw , mode )"	689:2:16841:16886	4900324	0	True				
ANR	4900394	AssignmentExpression	"return_val = store_cred_service ( user , pw , mode )"		4900324	0		=			
ANR	4900395	Identifier	return_val		4900324	0					
ANR	4900396	CallExpression	"store_cred_service ( user , pw , mode )"		4900324	1					
ANR	4900397	Callee	store_cred_service		4900324	0					
ANR	4900398	Identifier	store_cred_service		4900324	0					
ANR	4900399	ArgumentList	user		4900324	1					
ANR	4900400	Argument	user		4900324	0					
ANR	4900401	Identifier	user		4900324	0					
ANR	4900402	Argument	pw		4900324	1					
ANR	4900403	Identifier	pw		4900324	0					
ANR	4900404	Argument	mode		4900324	2					
ANR	4900405	Identifier	mode		4900324	0					
ANR	4900406	ElseStatement	else		4900324	0					
ANR	4900407	CompoundStatement		33:2:838:873	4900324	0					
ANR	4900408	IdentifierDeclStatement	int cmd = STORE_CRED ;	694:2:16994:17014	4900324	0	True				
ANR	4900409	IdentifierDecl	cmd = STORE_CRED		4900324	0					
ANR	4900410	IdentifierDeclType	int		4900324	0					
ANR	4900411	Identifier	cmd		4900324	1					
ANR	4900412	AssignmentExpression	cmd = STORE_CRED		4900324	2		=			
ANR	4900413	Identifier	STORE_CRED		4900324	0					
ANR	4900414	Identifier	STORE_CRED		4900324	1					
ANR	4900415	IdentifierDeclStatement	"char const * tmp = strchr ( user , '@' ) ;"	695:2:17018:17053	4900324	1	True				
ANR	4900416	IdentifierDecl	"* tmp = strchr ( user , '@' )"		4900324	0					
ANR	4900417	IdentifierDeclType	char const *		4900324	0					
ANR	4900418	Identifier	tmp		4900324	1					
ANR	4900419	AssignmentExpression	"* tmp = strchr ( user , '@' )"		4900324	2		=			
ANR	4900420	Identifier	tmp		4900324	0					
ANR	4900421	CallExpression	"strchr ( user , '@' )"		4900324	1					
ANR	4900422	Callee	strchr		4900324	0					
ANR	4900423	Identifier	strchr		4900324	0					
ANR	4900424	ArgumentList	user		4900324	1					
ANR	4900425	Argument	user		4900324	0					
ANR	4900426	Identifier	user		4900324	0					
ANR	4900427	Argument	'@'		4900324	1					
ANR	4900428	PrimaryExpression	'@'		4900324	0					
ANR	4900429	IfStatement	if ( tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0' )		4900324	2					
ANR	4900430	Condition	tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0'	696:6:17061:17108	4900324	0	True				
ANR	4900431	OrExpression	tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0'		4900324	0		||			
ANR	4900432	EqualityExpression	tmp == NULL		4900324	0		==			
ANR	4900433	Identifier	tmp		4900324	0					
ANR	4900434	Identifier	NULL		4900324	1					
ANR	4900435	OrExpression	tmp == user || * ( tmp + 1 ) == '\\0'		4900324	1		||			
ANR	4900436	EqualityExpression	tmp == user		4900324	0		==			
ANR	4900437	Identifier	tmp		4900324	0					
ANR	4900438	Identifier	user		4900324	1					
ANR	4900439	EqualityExpression	* ( tmp + 1 ) == '\\0'		4900324	1		==			
ANR	4900440	UnaryOperationExpression	* ( tmp + 1 )		4900324	0					
ANR	4900441	UnaryOperator	*		4900324	0					
ANR	4900442	AdditiveExpression	tmp + 1		4900324	1		+			
ANR	4900443	Identifier	tmp		4900324	0					
ANR	4900444	PrimaryExpression	1		4900324	1					
ANR	4900445	PrimaryExpression	'\\0'		4900324	1					
ANR	4900446	CompoundStatement		34:56:931:931	4900324	1					
ANR	4900447	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: user not in user@domain format\\n"" )"	697:3:17116:17181	4900324	0	True				
ANR	4900448	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: user not in user@domain format\\n"" )"		4900324	0					
ANR	4900449	Callee	dprintf		4900324	0					
ANR	4900450	Identifier	dprintf		4900324	0					
ANR	4900451	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900452	Argument	D_ALWAYS		4900324	0					
ANR	4900453	Identifier	D_ALWAYS		4900324	0					
ANR	4900454	Argument	"""store_cred: user not in user@domain format\\n"""		4900324	1					
ANR	4900455	PrimaryExpression	"""store_cred: user not in user@domain format\\n"""		4900324	0					
ANR	4900456	ReturnStatement	return FAILURE ;	698:3:17186:17200	4900324	1	True				
ANR	4900457	Identifier	FAILURE		4900324	0					
ANR	4900458	IfStatement	"if ( ( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 ) )"		4900324	3					
ANR	4900459	Condition	"( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"	700:6:17212:17388	4900324	0	True				
ANR	4900460	AndExpression	"( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"		4900324	0		&&			
ANR	4900461	OrExpression	( mode == ADD_MODE ) || ( mode == DELETE_MODE )		4900324	0		||			
ANR	4900462	EqualityExpression	mode == ADD_MODE		4900324	0		==			
ANR	4900463	Identifier	mode		4900324	0					
ANR	4900464	Identifier	ADD_MODE		4900324	1					
ANR	4900465	EqualityExpression	mode == DELETE_MODE		4900324	1		==			
ANR	4900466	Identifier	mode		4900324	0					
ANR	4900467	Identifier	DELETE_MODE		4900324	1					
ANR	4900468	AndExpression	"( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"		4900324	1		&&			
ANR	4900469	EqualityExpression	( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME )		4900324	0		==			
ANR	4900470	CastExpression	( size_t ) ( tmp - user )		4900324	0					
ANR	4900471	CastTarget	size_t		4900324	0					
ANR	4900472	AdditiveExpression	tmp - user		4900324	1		-			
ANR	4900473	Identifier	tmp		4900324	0					
ANR	4900474	Identifier	user		4900324	1					
ANR	4900475	CallExpression	strlen ( POOL_PASSWORD_USERNAME )		4900324	1					
ANR	4900476	Callee	strlen		4900324	0					
ANR	4900477	Identifier	strlen		4900324	0					
ANR	4900478	ArgumentList	POOL_PASSWORD_USERNAME		4900324	1					
ANR	4900479	Argument	POOL_PASSWORD_USERNAME		4900324	0					
ANR	4900480	Identifier	POOL_PASSWORD_USERNAME		4900324	0					
ANR	4900481	EqualityExpression	"memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0"		4900324	1		==			
ANR	4900482	CallExpression	"memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user )"		4900324	0					
ANR	4900483	Callee	memcmp		4900324	0					
ANR	4900484	Identifier	memcmp		4900324	0					
ANR	4900485	ArgumentList	POOL_PASSWORD_USERNAME		4900324	1					
ANR	4900486	Argument	POOL_PASSWORD_USERNAME		4900324	0					
ANR	4900487	Identifier	POOL_PASSWORD_USERNAME		4900324	0					
ANR	4900488	Argument	user		4900324	1					
ANR	4900489	Identifier	user		4900324	0					
ANR	4900490	Argument	tmp - user		4900324	2					
ANR	4900491	AdditiveExpression	tmp - user		4900324	0		-			
ANR	4900492	Identifier	tmp		4900324	0					
ANR	4900493	Identifier	user		4900324	1					
ANR	4900494	PrimaryExpression	0		4900324	1					
ANR	4900495	CompoundStatement		41:2:1213:1213	4900324	1					
ANR	4900496	ExpressionStatement	cmd = STORE_POOL_CRED	704:3:17398:17419	4900324	0	True				
ANR	4900497	AssignmentExpression	cmd = STORE_POOL_CRED		4900324	0		=			
ANR	4900498	Identifier	cmd		4900324	0					
ANR	4900499	Identifier	STORE_POOL_CRED		4900324	1					
ANR	4900500	ExpressionStatement	user = tmp + 1	705:3:17424:17438	4900324	1	True				
ANR	4900501	AssignmentExpression	user = tmp + 1		4900324	0		=			
ANR	4900502	Identifier	user		4900324	0					
ANR	4900503	AdditiveExpression	tmp + 1		4900324	1		+			
ANR	4900504	Identifier	tmp		4900324	0					
ANR	4900505	PrimaryExpression	1		4900324	1					
ANR	4900506	IfStatement	if ( d == NULL )		4900324	4					
ANR	4900507	Condition	d == NULL	708:6:17511:17519	4900324	0	True				
ANR	4900508	EqualityExpression	d == NULL		4900324	0		==			
ANR	4900509	Identifier	d		4900324	0					
ANR	4900510	Identifier	NULL		4900324	1					
ANR	4900511	CompoundStatement		46:17:1342:1342	4900324	1					
ANR	4900512	IfStatement	if ( cmd == STORE_POOL_CRED )		4900324	0					
ANR	4900513	Condition	cmd == STORE_POOL_CRED	709:7:17531:17552	4900324	0	True				
ANR	4900514	EqualityExpression	cmd == STORE_POOL_CRED		4900324	0		==			
ANR	4900515	Identifier	cmd		4900324	0					
ANR	4900516	Identifier	STORE_POOL_CRED		4900324	1					
ANR	4900517	CompoundStatement		50:4:1509:1536	4900324	1					
ANR	4900518	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Storing credential to local master\\n"" )"	711:4:17623:17683	4900324	0	True				
ANR	4900519	CallExpression	"dprintf ( D_FULLDEBUG , ""Storing credential to local master\\n"" )"		4900324	0					
ANR	4900520	Callee	dprintf		4900324	0					
ANR	4900521	Identifier	dprintf		4900324	0					
ANR	4900522	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900523	Argument	D_FULLDEBUG		4900324	0					
ANR	4900524	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900525	Argument	"""Storing credential to local master\\n"""		4900324	1					
ANR	4900526	PrimaryExpression	"""Storing credential to local master\\n"""		4900324	0					
ANR	4900527	IdentifierDeclStatement	Daemon my_master ( DT_MASTER ) ;	712:4:17689:17716	4900324	1	True				
ANR	4900528	IdentifierDecl	my_master ( DT_MASTER )		4900324	0					
ANR	4900529	IdentifierDeclType	Daemon		4900324	0					
ANR	4900530	Identifier	my_master		4900324	1					
ANR	4900531	Identifier	DT_MASTER		4900324	2					
ANR	4900532	ExpressionStatement	"sock = my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"	713:4:17722:17778	4900324	2	True				
ANR	4900533	AssignmentExpression	"sock = my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	0		=			
ANR	4900534	Identifier	sock		4900324	0					
ANR	4900535	CallExpression	"my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	1					
ANR	4900536	Callee	my_master . startCommand		4900324	0					
ANR	4900537	MemberAccess	my_master . startCommand		4900324	0					
ANR	4900538	Identifier	my_master		4900324	0					
ANR	4900539	Identifier	startCommand		4900324	1					
ANR	4900540	ArgumentList	cmd		4900324	1					
ANR	4900541	Argument	cmd		4900324	0					
ANR	4900542	Identifier	cmd		4900324	0					
ANR	4900543	Argument	Stream :: reli_sock		4900324	1					
ANR	4900544	Identifier	Stream :: reli_sock		4900324	0					
ANR	4900545	Argument	0		4900324	2					
ANR	4900546	PrimaryExpression	0		4900324	0					
ANR	4900547	ElseStatement	else		4900324	0					
ANR	4900548	CompoundStatement		55:4:1685:1712	4900324	0					
ANR	4900549	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Storing credential to local schedd\\n"" )"	716:4:17799:17859	4900324	0	True				
ANR	4900550	CallExpression	"dprintf ( D_FULLDEBUG , ""Storing credential to local schedd\\n"" )"		4900324	0					
ANR	4900551	Callee	dprintf		4900324	0					
ANR	4900552	Identifier	dprintf		4900324	0					
ANR	4900553	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900554	Argument	D_FULLDEBUG		4900324	0					
ANR	4900555	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900556	Argument	"""Storing credential to local schedd\\n"""		4900324	1					
ANR	4900557	PrimaryExpression	"""Storing credential to local schedd\\n"""		4900324	0					
ANR	4900558	IdentifierDeclStatement	Daemon my_schedd ( DT_SCHEDD ) ;	717:4:17865:17892	4900324	1	True				
ANR	4900559	IdentifierDecl	my_schedd ( DT_SCHEDD )		4900324	0					
ANR	4900560	IdentifierDeclType	Daemon		4900324	0					
ANR	4900561	Identifier	my_schedd		4900324	1					
ANR	4900562	Identifier	DT_SCHEDD		4900324	2					
ANR	4900563	ExpressionStatement	"sock = my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"	718:4:17898:17954	4900324	2	True				
ANR	4900564	AssignmentExpression	"sock = my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	0		=			
ANR	4900565	Identifier	sock		4900324	0					
ANR	4900566	CallExpression	"my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	1					
ANR	4900567	Callee	my_schedd . startCommand		4900324	0					
ANR	4900568	MemberAccess	my_schedd . startCommand		4900324	0					
ANR	4900569	Identifier	my_schedd		4900324	0					
ANR	4900570	Identifier	startCommand		4900324	1					
ANR	4900571	ArgumentList	cmd		4900324	1					
ANR	4900572	Argument	cmd		4900324	0					
ANR	4900573	Identifier	cmd		4900324	0					
ANR	4900574	Argument	Stream :: reli_sock		4900324	1					
ANR	4900575	Identifier	Stream :: reli_sock		4900324	0					
ANR	4900576	Argument	0		4900324	2					
ANR	4900577	PrimaryExpression	0		4900324	0					
ANR	4900578	ElseStatement	else		4900324	0					
ANR	4900579	CompoundStatement		58:9:1790:1790	4900324	0					
ANR	4900580	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting a command on a REMOTE schedd\\n"" )"	721:3:17975:18038	4900324	0	True				
ANR	4900581	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting a command on a REMOTE schedd\\n"" )"		4900324	0					
ANR	4900582	Callee	dprintf		4900324	0					
ANR	4900583	Identifier	dprintf		4900324	0					
ANR	4900584	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900585	Argument	D_FULLDEBUG		4900324	0					
ANR	4900586	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900587	Argument	"""Starting a command on a REMOTE schedd\\n"""		4900324	1					
ANR	4900588	PrimaryExpression	"""Starting a command on a REMOTE schedd\\n"""		4900324	0					
ANR	4900589	ExpressionStatement	"sock = d -> startCommand ( cmd , Stream :: reli_sock , 0 )"	722:3:18043:18092	4900324	1	True				
ANR	4900590	AssignmentExpression	"sock = d -> startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	0		=			
ANR	4900591	Identifier	sock		4900324	0					
ANR	4900592	CallExpression	"d -> startCommand ( cmd , Stream :: reli_sock , 0 )"		4900324	1					
ANR	4900593	Callee	d -> startCommand		4900324	0					
ANR	4900594	PtrMemberAccess	d -> startCommand		4900324	0					
ANR	4900595	Identifier	d		4900324	0					
ANR	4900596	Identifier	startCommand		4900324	1					
ANR	4900597	ArgumentList	cmd		4900324	1					
ANR	4900598	Argument	cmd		4900324	0					
ANR	4900599	Identifier	cmd		4900324	0					
ANR	4900600	Argument	Stream :: reli_sock		4900324	1					
ANR	4900601	Identifier	Stream :: reli_sock		4900324	0					
ANR	4900602	Argument	0		4900324	2					
ANR	4900603	PrimaryExpression	0		4900324	0					
ANR	4900604	IfStatement	if ( ! sock )		4900324	5					
ANR	4900605	Condition	! sock	725:6:18107:18111	4900324	0	True				
ANR	4900606	UnaryOperationExpression	! sock		4900324	0					
ANR	4900607	UnaryOperator	!		4900324	0					
ANR	4900608	Identifier	sock		4900324	1					
ANR	4900609	CompoundStatement		63:14:1935:1935	4900324	1					
ANR	4900610	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: Failed to start command.\\n"" )"	726:3:18120:18184	4900324	0	True				
ANR	4900611	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: Failed to start command.\\n"" )"		4900324	0					
ANR	4900612	Callee	dprintf		4900324	0					
ANR	4900613	Identifier	dprintf		4900324	0					
ANR	4900614	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900615	Argument	D_ALWAYS		4900324	0					
ANR	4900616	Identifier	D_ALWAYS		4900324	0					
ANR	4900617	Argument	"""STORE_CRED: Failed to start command.\\n"""		4900324	1					
ANR	4900618	PrimaryExpression	"""STORE_CRED: Failed to start command.\\n"""		4900324	0					
ANR	4900619	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: Unable to contact the REMOTE schedd.\\n"" )"	728:3:18189:18265	4900324	1	True				
ANR	4900620	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: Unable to contact the REMOTE schedd.\\n"" )"		4900324	0					
ANR	4900621	Callee	dprintf		4900324	0					
ANR	4900622	Identifier	dprintf		4900324	0					
ANR	4900623	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900624	Argument	D_ALWAYS		4900324	0					
ANR	4900625	Identifier	D_ALWAYS		4900324	0					
ANR	4900626	Argument	"""STORE_CRED: Unable to contact the REMOTE schedd.\\n"""		4900324	1					
ANR	4900627	PrimaryExpression	"""STORE_CRED: Unable to contact the REMOTE schedd.\\n"""		4900324	0					
ANR	4900628	ReturnStatement	return FAILURE ;	730:3:18270:18284	4900324	2	True				
ANR	4900629	Identifier	FAILURE		4900324	0					
ANR	4900630	IfStatement	if ( ( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) ) )		4900324	6					
ANR	4900631	Condition	( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )	735:6:18414:18599	4900324	0	True				
ANR	4900632	AndExpression	( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		4900324	0		&&			
ANR	4900633	OrExpression	( mode == ADD_MODE ) || ( mode == DELETE_MODE )		4900324	0		||			
ANR	4900634	EqualityExpression	mode == ADD_MODE		4900324	0		==			
ANR	4900635	Identifier	mode		4900324	0					
ANR	4900636	Identifier	ADD_MODE		4900324	1					
ANR	4900637	EqualityExpression	mode == DELETE_MODE		4900324	1		==			
ANR	4900638	Identifier	mode		4900324	0					
ANR	4900639	Identifier	DELETE_MODE		4900324	1					
ANR	4900640	AndExpression	! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		4900324	1		&&			
ANR	4900641	UnaryOperationExpression	! force		4900324	0					
ANR	4900642	UnaryOperator	!		4900324	0					
ANR	4900643	Identifier	force		4900324	1					
ANR	4900644	AndExpression	( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		4900324	1		&&			
ANR	4900645	EqualityExpression	d != NULL		4900324	0		!=			
ANR	4900646	Identifier	d		4900324	0					
ANR	4900647	Identifier	NULL		4900324	1					
ANR	4900648	OrExpression	( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( )		4900324	1		||			
ANR	4900649	EqualityExpression	sock -> type ( ) != Stream :: reli_sock		4900324	0		!=			
ANR	4900650	CallExpression	sock -> type ( )		4900324	0					
ANR	4900651	Callee	sock -> type		4900324	0					
ANR	4900652	PtrMemberAccess	sock -> type		4900324	0					
ANR	4900653	Identifier	sock		4900324	0					
ANR	4900654	Identifier	type		4900324	1					
ANR	4900655	ArgumentList			4900324	1					
ANR	4900656	Identifier	Stream :: reli_sock		4900324	1					
ANR	4900657	OrExpression	! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( )		4900324	1		||			
ANR	4900658	UnaryOperationExpression	! ( ( ReliSock * ) sock ) -> triedAuthentication ( )		4900324	0					
ANR	4900659	UnaryOperator	!		4900324	0					
ANR	4900660	CallExpression	( ( ReliSock * ) sock ) -> triedAuthentication ( )		4900324	1					
ANR	4900661	Callee	( ( ReliSock * ) sock ) -> triedAuthentication		4900324	0					
ANR	4900662	PtrMemberAccess	( ( ReliSock * ) sock ) -> triedAuthentication		4900324	0					
ANR	4900663	CastExpression	( ReliSock * ) sock		4900324	0					
ANR	4900664	CastTarget	ReliSock *		4900324	0					
ANR	4900665	Identifier	sock		4900324	1					
ANR	4900666	Identifier	triedAuthentication		4900324	1					
ANR	4900667	ArgumentList			4900324	1					
ANR	4900668	UnaryOperationExpression	! sock -> get_encryption ( )		4900324	1					
ANR	4900669	UnaryOperator	!		4900324	0					
ANR	4900670	CallExpression	sock -> get_encryption ( )		4900324	1					
ANR	4900671	Callee	sock -> get_encryption		4900324	0					
ANR	4900672	PtrMemberAccess	sock -> get_encryption		4900324	0					
ANR	4900673	Identifier	sock		4900324	0					
ANR	4900674	Identifier	get_encryption		4900324	1					
ANR	4900675	ArgumentList			4900324	1					
ANR	4900676	CompoundStatement		74:114:2422:2422	4900324	1					
ANR	4900677	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: blocking attempt to update over insecure channel\\n"" )"	737:3:18607:18690	4900324	0	True				
ANR	4900678	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: blocking attempt to update over insecure channel\\n"" )"		4900324	0					
ANR	4900679	Callee	dprintf		4900324	0					
ANR	4900680	Identifier	dprintf		4900324	0					
ANR	4900681	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900682	Argument	D_ALWAYS		4900324	0					
ANR	4900683	Identifier	D_ALWAYS		4900324	0					
ANR	4900684	Argument	"""STORE_CRED: blocking attempt to update over insecure channel\\n"""		4900324	1					
ANR	4900685	PrimaryExpression	"""STORE_CRED: blocking attempt to update over insecure channel\\n"""		4900324	0					
ANR	4900686	Statement	delete	738:3:18695:18700	4900324	1	True				
ANR	4900687	ExpressionStatement	sock	738:10:18702:18706	4900324	2	True				
ANR	4900688	Identifier	sock		4900324	0					
ANR	4900689	ReturnStatement	return FAILURE_NOT_SECURE ;	739:3:18711:18736	4900324	3	True				
ANR	4900690	Identifier	FAILURE_NOT_SECURE		4900324	0					
ANR	4900691	IfStatement	if ( cmd == STORE_CRED )		4900324	7					
ANR	4900692	Condition	cmd == STORE_CRED	742:6:18751:18767	4900324	0	True				
ANR	4900693	EqualityExpression	cmd == STORE_CRED		4900324	0		==			
ANR	4900694	Identifier	cmd		4900324	0					
ANR	4900695	Identifier	STORE_CRED		4900324	1					
ANR	4900696	CompoundStatement		80:25:2590:2590	4900324	1					
ANR	4900697	Statement	result	743:3:18775:18780	4900324	0	True				
ANR	4900698	Statement	=	743:10:18782:18782	4900324	1	True				
ANR	4900699	Statement	code_store_cred	743:12:18784:18798	4900324	2	True				
ANR	4900700	Statement	(	743:27:18799:18799	4900324	3	True				
ANR	4900701	Statement	sock	743:28:18800:18803	4900324	4	True				
ANR	4900702	Statement	","	743:32:18804:18804	4900324	5	True				
ANR	4900703	Statement	const_cast	743:34:18806:18815	4900324	6	True				
ANR	4900704	Statement	<	743:44:18816:18816	4900324	7	True				
ANR	4900705	Statement	char	743:45:18817:18820	4900324	8	True				
ANR	4900706	Statement	*	743:49:18821:18821	4900324	9	True				
ANR	4900707	Statement	&	743:50:18822:18822	4900324	10	True				
ANR	4900708	Statement	>	743:51:18823:18823	4900324	11	True				
ANR	4900709	Statement	(	743:52:18824:18824	4900324	12	True				
ANR	4900710	Statement	user	743:53:18825:18828	4900324	13	True				
ANR	4900711	Statement	)	743:57:18829:18829	4900324	14	True				
ANR	4900712	Statement	","	743:58:18830:18830	4900324	15	True				
ANR	4900713	Statement	const_cast	744:4:18836:18845	4900324	16	True				
ANR	4900714	Statement	<	744:14:18846:18846	4900324	17	True				
ANR	4900715	Statement	char	744:15:18847:18850	4900324	18	True				
ANR	4900716	Statement	*	744:19:18851:18851	4900324	19	True				
ANR	4900717	Statement	&	744:20:18852:18852	4900324	20	True				
ANR	4900718	Statement	>	744:21:18853:18853	4900324	21	True				
ANR	4900719	Statement	(	744:22:18854:18854	4900324	22	True				
ANR	4900720	Statement	pw	744:23:18855:18856	4900324	23	True				
ANR	4900721	Statement	)	744:25:18857:18857	4900324	24	True				
ANR	4900722	Statement	","	744:26:18858:18858	4900324	25	True				
ANR	4900723	Statement	mode	744:28:18860:18863	4900324	26	True				
ANR	4900724	Statement	)	744:32:18864:18864	4900324	27	True				
ANR	4900725	ExpressionStatement		744:33:18865:18865	4900324	28	True				
ANR	4900726	IfStatement	if ( result == FALSE )		4900324	29					
ANR	4900727	Condition	result == FALSE	745:7:18874:18888	4900324	0	True				
ANR	4900728	EqualityExpression	result == FALSE		4900324	0		==			
ANR	4900729	Identifier	result		4900324	0					
ANR	4900730	Identifier	FALSE		4900324	1					
ANR	4900731	CompoundStatement		83:25:2712:2712	4900324	1					
ANR	4900732	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: code_store_cred failed.\\n"" )"	746:4:18898:18956	4900324	0	True				
ANR	4900733	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: code_store_cred failed.\\n"" )"		4900324	0					
ANR	4900734	Callee	dprintf		4900324	0					
ANR	4900735	Identifier	dprintf		4900324	0					
ANR	4900736	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900737	Argument	D_ALWAYS		4900324	0					
ANR	4900738	Identifier	D_ALWAYS		4900324	0					
ANR	4900739	Argument	"""store_cred: code_store_cred failed.\\n"""		4900324	1					
ANR	4900740	PrimaryExpression	"""store_cred: code_store_cred failed.\\n"""		4900324	0					
ANR	4900741	Statement	delete	747:4:18962:18967	4900324	1	True				
ANR	4900742	ExpressionStatement	sock	747:11:18969:18973	4900324	2	True				
ANR	4900743	Identifier	sock		4900324	0					
ANR	4900744	ReturnStatement	return FAILURE ;	748:4:18979:18993	4900324	3	True				
ANR	4900745	Identifier	FAILURE		4900324	0					
ANR	4900746	ElseStatement	else		4900324	0					
ANR	4900747	CompoundStatement		89:7:2831:2831	4900324	0					
ANR	4900748	Statement	if	753:3:19085:19086	4900324	0	True				
ANR	4900749	Statement	(	753:6:19088:19088	4900324	1	True				
ANR	4900750	Statement	!	753:7:19089:19089	4900324	2	True				
ANR	4900751	Statement	sock	753:8:19090:19093	4900324	3	True				
ANR	4900752	Statement	->	753:12:19094:19095	4900324	4	True				
ANR	4900753	Statement	code	753:14:19096:19099	4900324	5	True				
ANR	4900754	Statement	(	753:18:19100:19100	4900324	6	True				
ANR	4900755	Statement	const_cast	753:19:19101:19110	4900324	7	True				
ANR	4900756	Statement	<	753:29:19111:19111	4900324	8	True				
ANR	4900757	Statement	char	753:30:19112:19115	4900324	9	True				
ANR	4900758	Statement	*	753:34:19116:19116	4900324	10	True				
ANR	4900759	Statement	&	753:35:19117:19117	4900324	11	True				
ANR	4900760	Statement	>	753:36:19118:19118	4900324	12	True				
ANR	4900761	Statement	(	753:37:19119:19119	4900324	13	True				
ANR	4900762	Statement	user	753:38:19120:19123	4900324	14	True				
ANR	4900763	Statement	)	753:42:19124:19124	4900324	15	True				
ANR	4900764	Statement	)	753:43:19125:19125	4900324	16	True				
ANR	4900765	Statement	||	753:45:19127:19128	4900324	17	True				
ANR	4900766	Statement	!	754:4:19134:19134	4900324	18	True				
ANR	4900767	Statement	sock	754:5:19135:19138	4900324	19	True				
ANR	4900768	Statement	->	754:9:19139:19140	4900324	20	True				
ANR	4900769	Statement	code	754:11:19141:19144	4900324	21	True				
ANR	4900770	Statement	(	754:15:19145:19145	4900324	22	True				
ANR	4900771	Statement	const_cast	754:16:19146:19155	4900324	23	True				
ANR	4900772	Statement	<	754:26:19156:19156	4900324	24	True				
ANR	4900773	Statement	char	754:27:19157:19160	4900324	25	True				
ANR	4900774	Statement	*	754:31:19161:19161	4900324	26	True				
ANR	4900775	Statement	&	754:32:19162:19162	4900324	27	True				
ANR	4900776	Statement	>	754:33:19163:19163	4900324	28	True				
ANR	4900777	Statement	(	754:34:19164:19164	4900324	29	True				
ANR	4900778	Statement	pw	754:35:19165:19166	4900324	30	True				
ANR	4900779	Statement	)	754:37:19167:19167	4900324	31	True				
ANR	4900780	Statement	)	754:38:19168:19168	4900324	32	True				
ANR	4900781	Statement	||	754:40:19170:19171	4900324	33	True				
ANR	4900782	Statement	!	755:4:19177:19177	4900324	34	True				
ANR	4900783	Statement	sock	755:5:19178:19181	4900324	35	True				
ANR	4900784	Statement	->	755:9:19182:19183	4900324	36	True				
ANR	4900785	Statement	end_of_message	755:11:19184:19197	4900324	37	True				
ANR	4900786	Statement	(	755:25:19198:19198	4900324	38	True				
ANR	4900787	Statement	)	755:26:19199:19199	4900324	39	True				
ANR	4900788	Statement	)	755:27:19200:19200	4900324	40	True				
ANR	4900789	CompoundStatement		93:29:3022:3022	4900324	41					
ANR	4900790	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to send STORE_POOL_CRED message\\n"" )"	756:4:19208:19281	4900324	0	True				
ANR	4900791	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to send STORE_POOL_CRED message\\n"" )"		4900324	0					
ANR	4900792	Callee	dprintf		4900324	0					
ANR	4900793	Identifier	dprintf		4900324	0					
ANR	4900794	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900795	Argument	D_ALWAYS		4900324	0					
ANR	4900796	Identifier	D_ALWAYS		4900324	0					
ANR	4900797	Argument	"""store_cred: failed to send STORE_POOL_CRED message\\n"""		4900324	1					
ANR	4900798	PrimaryExpression	"""store_cred: failed to send STORE_POOL_CRED message\\n"""		4900324	0					
ANR	4900799	Statement	delete	757:4:19287:19292	4900324	1	True				
ANR	4900800	ExpressionStatement	sock	757:11:19294:19298	4900324	2	True				
ANR	4900801	Identifier	sock		4900324	0					
ANR	4900802	ReturnStatement	return FAILURE ;	758:4:19304:19318	4900324	3	True				
ANR	4900803	Identifier	FAILURE		4900324	0					
ANR	4900804	ExpressionStatement	sock -> decode ( )	762:2:19334:19348	4900324	8	True				
ANR	4900805	CallExpression	sock -> decode ( )		4900324	0					
ANR	4900806	Callee	sock -> decode		4900324	0					
ANR	4900807	PtrMemberAccess	sock -> decode		4900324	0					
ANR	4900808	Identifier	sock		4900324	0					
ANR	4900809	Identifier	decode		4900324	1					
ANR	4900810	ArgumentList			4900324	1					
ANR	4900811	ExpressionStatement	result = sock -> code ( return_val )	764:2:19355:19386	4900324	9	True				
ANR	4900812	AssignmentExpression	result = sock -> code ( return_val )		4900324	0		=			
ANR	4900813	Identifier	result		4900324	0					
ANR	4900814	CallExpression	sock -> code ( return_val )		4900324	1					
ANR	4900815	Callee	sock -> code		4900324	0					
ANR	4900816	PtrMemberAccess	sock -> code		4900324	0					
ANR	4900817	Identifier	sock		4900324	0					
ANR	4900818	Identifier	code		4900324	1					
ANR	4900819	ArgumentList	return_val		4900324	1					
ANR	4900820	Argument	return_val		4900324	0					
ANR	4900821	Identifier	return_val		4900324	0					
ANR	4900822	IfStatement	if ( ! result )		4900324	10					
ANR	4900823	Condition	! result	765:6:19394:19400	4900324	0	True				
ANR	4900824	UnaryOperationExpression	! result		4900324	0					
ANR	4900825	UnaryOperator	!		4900324	0					
ANR	4900826	Identifier	result		4900324	1					
ANR	4900827	CompoundStatement		103:16:3224:3224	4900324	1					
ANR	4900828	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to recv answer.\\n"" )"	766:3:19409:19466	4900324	0	True				
ANR	4900829	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to recv answer.\\n"" )"		4900324	0					
ANR	4900830	Callee	dprintf		4900324	0					
ANR	4900831	Identifier	dprintf		4900324	0					
ANR	4900832	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900833	Argument	D_ALWAYS		4900324	0					
ANR	4900834	Identifier	D_ALWAYS		4900324	0					
ANR	4900835	Argument	"""store_cred: failed to recv answer.\\n"""		4900324	1					
ANR	4900836	PrimaryExpression	"""store_cred: failed to recv answer.\\n"""		4900324	0					
ANR	4900837	Statement	delete	767:3:19471:19476	4900324	1	True				
ANR	4900838	ExpressionStatement	sock	767:10:19478:19482	4900324	2	True				
ANR	4900839	Identifier	sock		4900324	0					
ANR	4900840	ReturnStatement	return FAILURE ;	768:3:19487:19501	4900324	3	True				
ANR	4900841	Identifier	FAILURE		4900324	0					
ANR	4900842	ExpressionStatement	result = sock -> end_of_message ( )	771:2:19512:19543	4900324	11	True				
ANR	4900843	AssignmentExpression	result = sock -> end_of_message ( )		4900324	0		=			
ANR	4900844	Identifier	result		4900324	0					
ANR	4900845	CallExpression	sock -> end_of_message ( )		4900324	1					
ANR	4900846	Callee	sock -> end_of_message		4900324	0					
ANR	4900847	PtrMemberAccess	sock -> end_of_message		4900324	0					
ANR	4900848	Identifier	sock		4900324	0					
ANR	4900849	Identifier	end_of_message		4900324	1					
ANR	4900850	ArgumentList			4900324	1					
ANR	4900851	IfStatement	if ( ! result )		4900324	12					
ANR	4900852	Condition	! result	772:6:19551:19557	4900324	0	True				
ANR	4900853	UnaryOperationExpression	! result		4900324	0					
ANR	4900854	UnaryOperator	!		4900324	0					
ANR	4900855	Identifier	result		4900324	1					
ANR	4900856	CompoundStatement		110:16:3381:3381	4900324	1					
ANR	4900857	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to recv eom.\\n"" )"	773:3:19566:19620	4900324	0	True				
ANR	4900858	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to recv eom.\\n"" )"		4900324	0					
ANR	4900859	Callee	dprintf		4900324	0					
ANR	4900860	Identifier	dprintf		4900324	0					
ANR	4900861	ArgumentList	D_ALWAYS		4900324	1					
ANR	4900862	Argument	D_ALWAYS		4900324	0					
ANR	4900863	Identifier	D_ALWAYS		4900324	0					
ANR	4900864	Argument	"""store_cred: failed to recv eom.\\n"""		4900324	1					
ANR	4900865	PrimaryExpression	"""store_cred: failed to recv eom.\\n"""		4900324	0					
ANR	4900866	Statement	delete	774:3:19625:19630	4900324	1	True				
ANR	4900867	ExpressionStatement	sock	774:10:19632:19636	4900324	2	True				
ANR	4900868	Identifier	sock		4900324	0					
ANR	4900869	ReturnStatement	return FAILURE ;	775:3:19641:19655	4900324	3	True				
ANR	4900870	Identifier	FAILURE		4900324	0					
ANR	4900871	SwitchStatement	switch ( mode )		4900324	17					
ANR	4900872	Condition	mode	780:8:19730:19733	4900324	0	True				
ANR	4900873	Identifier	mode		4900324	0					
ANR	4900874	CompoundStatement		119:1:3557:3557	4900324	1					
ANR	4900875	Label	case ADD_MODE :	782:1:19740:19753	4900324	0	True				
ANR	4900876	Identifier	ADD_MODE		4900324	0					
ANR	4900877	IfStatement	if ( return_val == SUCCESS )		4900324	1					
ANR	4900878	Condition	return_val == SUCCESS	783:6:19761:19781	4900324	0	True				
ANR	4900879	EqualityExpression	return_val == SUCCESS		4900324	0		==			
ANR	4900880	Identifier	return_val		4900324	0					
ANR	4900881	Identifier	SUCCESS		4900324	1					
ANR	4900882	CompoundStatement		121:30:3605:3605	4900324	1					
ANR	4900883	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Addition succeeded!\\n"" )"	784:3:19790:19835	4900324	0	True				
ANR	4900884	CallExpression	"dprintf ( D_FULLDEBUG , ""Addition succeeded!\\n"" )"		4900324	0					
ANR	4900885	Callee	dprintf		4900324	0					
ANR	4900886	Identifier	dprintf		4900324	0					
ANR	4900887	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900888	Argument	D_FULLDEBUG		4900324	0					
ANR	4900889	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900890	Argument	"""Addition succeeded!\\n"""		4900324	1					
ANR	4900891	PrimaryExpression	"""Addition succeeded!\\n"""		4900324	0					
ANR	4900892	ElseStatement	else		4900324	0					
ANR	4900893	CompoundStatement		123:9:3671:3671	4900324	0					
ANR	4900894	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Addition failed!\\n"" )"	786:3:19856:19898	4900324	0	True				
ANR	4900895	CallExpression	"dprintf ( D_FULLDEBUG , ""Addition failed!\\n"" )"		4900324	0					
ANR	4900896	Callee	dprintf		4900324	0					
ANR	4900897	Identifier	dprintf		4900324	0					
ANR	4900898	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900899	Argument	D_FULLDEBUG		4900324	0					
ANR	4900900	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900901	Argument	"""Addition failed!\\n"""		4900324	1					
ANR	4900902	PrimaryExpression	"""Addition failed!\\n"""		4900324	0					
ANR	4900903	BreakStatement	break ;	788:2:19906:19911	4900324	2	True				
ANR	4900904	Label	case DELETE_MODE :	789:1:19914:19930	4900324	3	True				
ANR	4900905	Identifier	DELETE_MODE		4900324	0					
ANR	4900906	IfStatement	if ( return_val == SUCCESS )		4900324	4					
ANR	4900907	Condition	return_val == SUCCESS	790:6:19938:19958	4900324	0	True				
ANR	4900908	EqualityExpression	return_val == SUCCESS		4900324	0		==			
ANR	4900909	Identifier	return_val		4900324	0					
ANR	4900910	Identifier	SUCCESS		4900324	1					
ANR	4900911	CompoundStatement		128:30:3782:3782	4900324	1					
ANR	4900912	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delete succeeded!\\n"" )"	791:3:19967:20010	4900324	0	True				
ANR	4900913	CallExpression	"dprintf ( D_FULLDEBUG , ""Delete succeeded!\\n"" )"		4900324	0					
ANR	4900914	Callee	dprintf		4900324	0					
ANR	4900915	Identifier	dprintf		4900324	0					
ANR	4900916	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900917	Argument	D_FULLDEBUG		4900324	0					
ANR	4900918	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900919	Argument	"""Delete succeeded!\\n"""		4900324	1					
ANR	4900920	PrimaryExpression	"""Delete succeeded!\\n"""		4900324	0					
ANR	4900921	ElseStatement	else		4900324	0					
ANR	4900922	CompoundStatement		130:9:3841:3841	4900324	0					
ANR	4900923	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delete failed!\\n"" )"	793:3:20026:20066	4900324	0	True				
ANR	4900924	CallExpression	"dprintf ( D_FULLDEBUG , ""Delete failed!\\n"" )"		4900324	0					
ANR	4900925	Callee	dprintf		4900324	0					
ANR	4900926	Identifier	dprintf		4900324	0					
ANR	4900927	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900928	Argument	D_FULLDEBUG		4900324	0					
ANR	4900929	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900930	Argument	"""Delete failed!\\n"""		4900324	1					
ANR	4900931	PrimaryExpression	"""Delete failed!\\n"""		4900324	0					
ANR	4900932	BreakStatement	break ;	795:2:20074:20079	4900324	5	True				
ANR	4900933	Label	case QUERY_MODE :	796:1:20082:20097	4900324	6	True				
ANR	4900934	Identifier	QUERY_MODE		4900324	0					
ANR	4900935	IfStatement	if ( return_val == SUCCESS )		4900324	7					
ANR	4900936	Condition	return_val == SUCCESS	797:6:20105:20125	4900324	0	True				
ANR	4900937	EqualityExpression	return_val == SUCCESS		4900324	0		==			
ANR	4900938	Identifier	return_val		4900324	0					
ANR	4900939	Identifier	SUCCESS		4900324	1					
ANR	4900940	CompoundStatement		135:30:3949:3949	4900324	1					
ANR	4900941	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""We have a credential stored!\\n"" )"	798:3:20134:20188	4900324	0	True				
ANR	4900942	CallExpression	"dprintf ( D_FULLDEBUG , ""We have a credential stored!\\n"" )"		4900324	0					
ANR	4900943	Callee	dprintf		4900324	0					
ANR	4900944	Identifier	dprintf		4900324	0					
ANR	4900945	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900946	Argument	D_FULLDEBUG		4900324	0					
ANR	4900947	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900948	Argument	"""We have a credential stored!\\n"""		4900324	1					
ANR	4900949	PrimaryExpression	"""We have a credential stored!\\n"""		4900324	0					
ANR	4900950	ElseStatement	else		4900324	0					
ANR	4900951	CompoundStatement		137:9:4019:4019	4900324	0					
ANR	4900952	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Query failed!\\n"" )"	800:3:20204:20243	4900324	0	True				
ANR	4900953	CallExpression	"dprintf ( D_FULLDEBUG , ""Query failed!\\n"" )"		4900324	0					
ANR	4900954	Callee	dprintf		4900324	0					
ANR	4900955	Identifier	dprintf		4900324	0					
ANR	4900956	ArgumentList	D_FULLDEBUG		4900324	1					
ANR	4900957	Argument	D_FULLDEBUG		4900324	0					
ANR	4900958	Identifier	D_FULLDEBUG		4900324	0					
ANR	4900959	Argument	"""Query failed!\\n"""		4900324	1					
ANR	4900960	PrimaryExpression	"""Query failed!\\n"""		4900324	0					
ANR	4900961	BreakStatement	break ;	802:2:20251:20256	4900324	8	True				
ANR	4900962	IfStatement	if ( sock )		4900324	18					
ANR	4900963	Condition	sock	805:6:20268:20271	4900324	0	True				
ANR	4900964	Identifier	sock		4900324	0					
ANR	4900965	Statement	delete	805:13:20275:20280	4900324	1	True				
ANR	4900966	ExpressionStatement	sock	805:20:20282:20286	4900324	19	True				
ANR	4900967	Identifier	sock		4900324	0					
ANR	4900968	ReturnStatement	return return_val ;	807:1:20290:20307	4900324	20	True				
ANR	4900969	Identifier	return_val		4900324	0					
ANR	4900970	ReturnType	int		4900324	1					
ANR	4900971	Identifier	store_cred		4900324	2					
ANR	4900972	ParameterList	"const char * user , const char * pw , int mode , Daemon * d , bool force"		4900324	3					
ANR	4900973	Parameter	const char * user	663:11:16112:16127	4900324	0	True				
ANR	4900974	ParameterType	const char *		4900324	0					
ANR	4900975	Identifier	user		4900324	1					
ANR	4900976	Parameter	const char * pw	663:29:16130:16143	4900324	1	True				
ANR	4900977	ParameterType	const char *		4900324	0					
ANR	4900978	Identifier	pw		4900324	1					
ANR	4900979	Parameter	int mode	663:45:16146:16153	4900324	2	True				
ANR	4900980	ParameterType	int		4900324	0					
ANR	4900981	Identifier	mode		4900324	1					
ANR	4900982	Parameter	Daemon * d	663:55:16156:16164	4900324	3	True				
ANR	4900983	ParameterType	Daemon *		4900324	0					
ANR	4900984	Identifier	d		4900324	1					
ANR	4900985	Parameter	bool force	663:66:16167:16176	4900324	4	True				
ANR	4900986	ParameterType	bool		4900324	0					
ANR	4900987	Identifier	force		4900324	1					
ANR	4900988	CFGEntryNode	ENTRY		4900324		True				
ANR	4900989	CFGExitNode	EXIT		4900324		True				
ANR	4900990	Symbol	* tmp		4900324						
ANR	4900991	Symbol	DELETE_MODE		4900324						
ANR	4900992	Symbol	FAILURE_NOT_SECURE		4900324						
ANR	4900993	Symbol	sock -> end_of_message		4900324						
ANR	4900994	Symbol	pw		4900324						
ANR	4900995	Symbol	STORE_POOL_CRED		4900324						
ANR	4900996	Symbol	strchr		4900324						
ANR	4900997	Symbol	store_cred_service		4900324						
ANR	4900998	Symbol	is_root		4900324						
ANR	4900999	Symbol	* ( tmp + 1 )		4900324						
ANR	4901000	Symbol	mode		4900324						
ANR	4901001	Symbol	result		4900324						
ANR	4901002	Symbol	strlen		4900324						
ANR	4901003	Symbol	sock -> get_encryption		4900324						
ANR	4901004	Symbol	memcmp		4900324						
ANR	4901005	Symbol	STORE_CRED		4900324						
ANR	4901006	Symbol	tmp		4900324						
ANR	4901007	Symbol	( ( ReliSock * ) sock ) -> triedAuthentication		4900324						
ANR	4901008	Symbol	Stream :: reli_sock		4900324						
ANR	4901009	Symbol	mode_name		4900324						
ANR	4901010	Symbol	my_master		4900324						
ANR	4901011	Symbol	* mode_offset		4900324						
ANR	4901012	Symbol	ADD_MODE		4900324						
ANR	4901013	Symbol	mode_offset		4900324						
ANR	4901014	Symbol	* mode_name		4900324						
ANR	4901015	Symbol	* sock		4900324						
ANR	4901016	Symbol	my_schedd		4900324						
ANR	4901017	Symbol	NULL		4900324						
ANR	4901018	Symbol	SUCCESS		4900324						
ANR	4901019	Symbol	d		4900324						
ANR	4901020	Symbol	D_ALWAYS		4900324						
ANR	4901021	Symbol	D_FULLDEBUG		4900324						
ANR	4901022	Symbol	return_val		4900324						
ANR	4901023	Symbol	FAILURE		4900324						
ANR	4901024	Symbol	* d		4900324						
ANR	4901025	Symbol	my_master . startCommand		4900324						
ANR	4901026	Symbol	sock		4900324						
ANR	4901027	Symbol	sock -> code		4900324						
ANR	4901028	Symbol	POOL_PASSWORD_USERNAME		4900324						
ANR	4901029	Symbol	my_schedd . startCommand		4900324						
ANR	4901030	Symbol	sock -> type		4900324						
ANR	4901031	Symbol	* mode		4900324						
ANR	4901032	Symbol	force		4900324						
ANR	4901033	Symbol	FALSE		4900324						
ANR	4901034	Symbol	cmd		4900324						
ANR	4901035	Symbol	user		4900324						
ANR	4901036	Symbol	d -> startCommand		4900324						
ANR	4901037	Function	deleteCredential	810:0:20313:20430							
ANR	4901038	FunctionDef	"deleteCredential (const char * user , const char * pw , Daemon * d)"		4901037	0					
ANR	4901039	CompoundStatement		810:68:20381:20430	4901037	0					
ANR	4901040	ReturnStatement	"return store_cred ( user , pw , DELETE_MODE , d ) ;"	811:1:20384:20427	4901037	0	True				
ANR	4901041	CallExpression	"store_cred ( user , pw , DELETE_MODE , d )"		4901037	0					
ANR	4901042	Callee	store_cred		4901037	0					
ANR	4901043	Identifier	store_cred		4901037	0					
ANR	4901044	ArgumentList	user		4901037	1					
ANR	4901045	Argument	user		4901037	0					
ANR	4901046	Identifier	user		4901037	0					
ANR	4901047	Argument	pw		4901037	1					
ANR	4901048	Identifier	pw		4901037	0					
ANR	4901049	Argument	DELETE_MODE		4901037	2					
ANR	4901050	Identifier	DELETE_MODE		4901037	0					
ANR	4901051	Argument	d		4901037	3					
ANR	4901052	Identifier	d		4901037	0					
ANR	4901053	ReturnType	int		4901037	1					
ANR	4901054	Identifier	deleteCredential		4901037	2					
ANR	4901055	ParameterList	"const char * user , const char * pw , Daemon * d"		4901037	3					
ANR	4901056	Parameter	const char * user	810:22:20335:20350	4901037	0	True				
ANR	4901057	ParameterType	const char *		4901037	0					
ANR	4901058	Identifier	user		4901037	1					
ANR	4901059	Parameter	const char * pw	810:40:20353:20366	4901037	1	True				
ANR	4901060	ParameterType	const char *		4901037	0					
ANR	4901061	Identifier	pw		4901037	1					
ANR	4901062	Parameter	Daemon * d	810:56:20369:20377	4901037	2	True				
ANR	4901063	ParameterType	Daemon *		4901037	0					
ANR	4901064	Identifier	d		4901037	1					
ANR	4901065	CFGEntryNode	ENTRY		4901037		True				
ANR	4901066	CFGExitNode	EXIT		4901037		True				
ANR	4901067	Symbol	DELETE_MODE		4901037						
ANR	4901068	Symbol	d		4901037						
ANR	4901069	Symbol	pw		4901037						
ANR	4901070	Symbol	store_cred		4901037						
ANR	4901071	Symbol	user		4901037						
ANR	4901072	Function	addCredential	814:0:20433:20544							
ANR	4901073	FunctionDef	"addCredential (const char * user , const char * pw , Daemon * d)"		4901072	0					
ANR	4901074	CompoundStatement		814:65:20498:20544	4901072	0					
ANR	4901075	ReturnStatement	"return store_cred ( user , pw , ADD_MODE , d ) ;"	815:1:20501:20541	4901072	0	True				
ANR	4901076	CallExpression	"store_cred ( user , pw , ADD_MODE , d )"		4901072	0					
ANR	4901077	Callee	store_cred		4901072	0					
ANR	4901078	Identifier	store_cred		4901072	0					
ANR	4901079	ArgumentList	user		4901072	1					
ANR	4901080	Argument	user		4901072	0					
ANR	4901081	Identifier	user		4901072	0					
ANR	4901082	Argument	pw		4901072	1					
ANR	4901083	Identifier	pw		4901072	0					
ANR	4901084	Argument	ADD_MODE		4901072	2					
ANR	4901085	Identifier	ADD_MODE		4901072	0					
ANR	4901086	Argument	d		4901072	3					
ANR	4901087	Identifier	d		4901072	0					
ANR	4901088	ReturnType	int		4901072	1					
ANR	4901089	Identifier	addCredential		4901072	2					
ANR	4901090	ParameterList	"const char * user , const char * pw , Daemon * d"		4901072	3					
ANR	4901091	Parameter	const char * user	814:19:20452:20467	4901072	0	True				
ANR	4901092	ParameterType	const char *		4901072	0					
ANR	4901093	Identifier	user		4901072	1					
ANR	4901094	Parameter	const char * pw	814:37:20470:20483	4901072	1	True				
ANR	4901095	ParameterType	const char *		4901072	0					
ANR	4901096	Identifier	pw		4901072	1					
ANR	4901097	Parameter	Daemon * d	814:53:20486:20494	4901072	2	True				
ANR	4901098	ParameterType	Daemon *		4901072	0					
ANR	4901099	Identifier	d		4901072	1					
ANR	4901100	CFGEntryNode	ENTRY		4901072		True				
ANR	4901101	CFGExitNode	EXIT		4901072		True				
ANR	4901102	Symbol	d		4901072						
ANR	4901103	Symbol	pw		4901072						
ANR	4901104	Symbol	store_cred		4901072						
ANR	4901105	Symbol	user		4901072						
ANR	4901106	Symbol	ADD_MODE		4901072						
ANR	4901107	Function	queryCredential	818:0:20547:20648							
ANR	4901108	FunctionDef	"queryCredential (const char * user , Daemon * d)"		4901107	0					
ANR	4901109	CompoundStatement		818:51:20598:20648	4901107	0					
ANR	4901110	ReturnStatement	"return store_cred ( user , NULL , QUERY_MODE , d ) ;"	819:1:20601:20645	4901107	0	True				
ANR	4901111	CallExpression	"store_cred ( user , NULL , QUERY_MODE , d )"		4901107	0					
ANR	4901112	Callee	store_cred		4901107	0					
ANR	4901113	Identifier	store_cred		4901107	0					
ANR	4901114	ArgumentList	user		4901107	1					
ANR	4901115	Argument	user		4901107	0					
ANR	4901116	Identifier	user		4901107	0					
ANR	4901117	Argument	NULL		4901107	1					
ANR	4901118	Identifier	NULL		4901107	0					
ANR	4901119	Argument	QUERY_MODE		4901107	2					
ANR	4901120	Identifier	QUERY_MODE		4901107	0					
ANR	4901121	Argument	d		4901107	3					
ANR	4901122	Identifier	d		4901107	0					
ANR	4901123	ReturnType	int		4901107	1					
ANR	4901124	Identifier	queryCredential		4901107	2					
ANR	4901125	ParameterList	"const char * user , Daemon * d"		4901107	3					
ANR	4901126	Parameter	const char * user	818:21:20568:20583	4901107	0	True				
ANR	4901127	ParameterType	const char *		4901107	0					
ANR	4901128	Identifier	user		4901107	1					
ANR	4901129	Parameter	Daemon * d	818:39:20586:20594	4901107	1	True				
ANR	4901130	ParameterType	Daemon *		4901107	0					
ANR	4901131	Identifier	d		4901107	1					
ANR	4901132	CFGEntryNode	ENTRY		4901107		True				
ANR	4901133	CFGExitNode	EXIT		4901107		True				
ANR	4901134	Symbol	NULL		4901107						
ANR	4901135	Symbol	d		4901107						
ANR	4901136	Symbol	store_cred		4901107						
ANR	4901137	Symbol	QUERY_MODE		4901107						
ANR	4901138	Symbol	user		4901107						
ANR	4901139	DeclStmt									
ANR	4901140	Decl							struct termios	struct termios	stored_settings
ANR	4901141	Function	echo_off	829:0:20777:21017							
ANR	4901142	FunctionDef	echo_off ()		4901141	0					
ANR	4901143	CompoundStatement		830:0:20804:21017	4901141	0					
ANR	4901144	IdentifierDeclStatement	struct termios new_settings ;	831:1:20807:20834	4901141	0	True				
ANR	4901145	IdentifierDecl	new_settings		4901141	0					
ANR	4901146	IdentifierDeclType	struct termios		4901141	0					
ANR	4901147	Identifier	new_settings		4901141	1					
ANR	4901148	ExpressionStatement	"tcgetattr ( 0 , & stored_settings )"	832:1:20837:20867	4901141	1	True				
ANR	4901149	CallExpression	"tcgetattr ( 0 , & stored_settings )"		4901141	0					
ANR	4901150	Callee	tcgetattr		4901141	0					
ANR	4901151	Identifier	tcgetattr		4901141	0					
ANR	4901152	ArgumentList	0		4901141	1					
ANR	4901153	Argument	0		4901141	0					
ANR	4901154	PrimaryExpression	0		4901141	0					
ANR	4901155	Argument	& stored_settings		4901141	1					
ANR	4901156	UnaryOperationExpression	& stored_settings		4901141	0					
ANR	4901157	UnaryOperator	&		4901141	0					
ANR	4901158	Identifier	stored_settings		4901141	1					
ANR	4901159	ExpressionStatement	"memcpy ( & new_settings , & stored_settings , sizeof ( struct termios ) )"	833:1:20870:20933	4901141	2	True				
ANR	4901160	CallExpression	"memcpy ( & new_settings , & stored_settings , sizeof ( struct termios ) )"		4901141	0					
ANR	4901161	Callee	memcpy		4901141	0					
ANR	4901162	Identifier	memcpy		4901141	0					
ANR	4901163	ArgumentList	& new_settings		4901141	1					
ANR	4901164	Argument	& new_settings		4901141	0					
ANR	4901165	UnaryOperationExpression	& new_settings		4901141	0					
ANR	4901166	UnaryOperator	&		4901141	0					
ANR	4901167	Identifier	new_settings		4901141	1					
ANR	4901168	Argument	& stored_settings		4901141	1					
ANR	4901169	UnaryOperationExpression	& stored_settings		4901141	0					
ANR	4901170	UnaryOperator	&		4901141	0					
ANR	4901171	Identifier	stored_settings		4901141	1					
ANR	4901172	Argument	sizeof ( struct termios )		4901141	2					
ANR	4901173	SizeofExpression	sizeof ( struct termios )		4901141	0					
ANR	4901174	Sizeof	sizeof		4901141	0					
ANR	4901175	SizeofOperand	struct termios		4901141	1					
ANR	4901176	ExpressionStatement	new_settings . c_lflag &= ( ~ECHO )	834:1:20936:20967	4901141	3	True				
ANR	4901177	AssignmentExpression	new_settings . c_lflag &= ( ~ECHO )		4901141	0		&=			
ANR	4901178	MemberAccess	new_settings . c_lflag		4901141	0					
ANR	4901179	Identifier	new_settings		4901141	0					
ANR	4901180	Identifier	c_lflag		4901141	1					
ANR	4901181	Identifier	~ECHO		4901141	1					
ANR	4901182	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & new_settings )"	835:1:20970:21006	4901141	4	True				
ANR	4901183	CallExpression	"tcsetattr ( 0 , TCSANOW , & new_settings )"		4901141	0					
ANR	4901184	Callee	tcsetattr		4901141	0					
ANR	4901185	Identifier	tcsetattr		4901141	0					
ANR	4901186	ArgumentList	0		4901141	1					
ANR	4901187	Argument	0		4901141	0					
ANR	4901188	PrimaryExpression	0		4901141	0					
ANR	4901189	Argument	TCSANOW		4901141	1					
ANR	4901190	Identifier	TCSANOW		4901141	0					
ANR	4901191	Argument	& new_settings		4901141	2					
ANR	4901192	UnaryOperationExpression	& new_settings		4901141	0					
ANR	4901193	UnaryOperator	&		4901141	0					
ANR	4901194	Identifier	new_settings		4901141	1					
ANR	4901195	ReturnStatement	return ;	836:1:21009:21015	4901141	5	True				
ANR	4901196	ReturnType	static void		4901141	1					
ANR	4901197	Identifier	echo_off		4901141	2					
ANR	4901198	ParameterList			4901141	3					
ANR	4901199	CFGEntryNode	ENTRY		4901141		True				
ANR	4901200	CFGExitNode	EXIT		4901141		True				
ANR	4901201	Symbol	& stored_settings		4901141						
ANR	4901202	Symbol	new_settings		4901141						
ANR	4901203	Symbol	TCSANOW		4901141						
ANR	4901204	Symbol	& new_settings		4901141						
ANR	4901205	Symbol	new_settings . c_lflag		4901141						
ANR	4901206	Symbol	~ECHO		4901141						
ANR	4901207	Function	echo_on	839:0:21020:21103							
ANR	4901208	FunctionDef	echo_on ()		4901207	0					
ANR	4901209	CompoundStatement		840:0:21046:21103	4901207	0					
ANR	4901210	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & stored_settings )"	841:4:21052:21089	4901207	0	True				
ANR	4901211	CallExpression	"tcsetattr ( 0 , TCSANOW , & stored_settings )"		4901207	0					
ANR	4901212	Callee	tcsetattr		4901207	0					
ANR	4901213	Identifier	tcsetattr		4901207	0					
ANR	4901214	ArgumentList	0		4901207	1					
ANR	4901215	Argument	0		4901207	0					
ANR	4901216	PrimaryExpression	0		4901207	0					
ANR	4901217	Argument	TCSANOW		4901207	1					
ANR	4901218	Identifier	TCSANOW		4901207	0					
ANR	4901219	Argument	& stored_settings		4901207	2					
ANR	4901220	UnaryOperationExpression	& stored_settings		4901207	0					
ANR	4901221	UnaryOperator	&		4901207	0					
ANR	4901222	Identifier	stored_settings		4901207	1					
ANR	4901223	ReturnStatement	return ;	842:4:21095:21101	4901207	1	True				
ANR	4901224	ReturnType	static void		4901207	1					
ANR	4901225	Identifier	echo_on		4901207	2					
ANR	4901226	ParameterList			4901207	3					
ANR	4901227	CFGEntryNode	ENTRY		4901207		True				
ANR	4901228	CFGExitNode	EXIT		4901207		True				
ANR	4901229	Symbol	& stored_settings		4901207						
ANR	4901230	Symbol	TCSANOW		4901207						
ANR	4901231	Function	read_from_keyboard	848:0:21188:23660							
ANR	4901232	FunctionDef	"read_from_keyboard (char * buf , int maxlength , bool echo)"		4901231	0					
ANR	4901233	CompoundStatement		849:56:21249:23660	4901231	0					
ANR	4901234	IdentifierDeclStatement	"int ch , ch_count ;"	851:1:21272:21288	4901231	0	True				
ANR	4901235	IdentifierDecl	ch		4901231	0					
ANR	4901236	IdentifierDeclType	int		4901231	0					
ANR	4901237	Identifier	ch		4901231	1					
ANR	4901238	IdentifierDecl	ch_count		4901231	1					
ANR	4901239	IdentifierDeclType	int		4901231	0					
ANR	4901240	Identifier	ch_count		4901231	1					
ANR	4901241	ExpressionStatement	ch = ch_count = 0	853:1:21292:21309	4901231	1	True				
ANR	4901242	AssignmentExpression	ch = ch_count = 0		4901231	0		=			
ANR	4901243	Identifier	ch		4901231	0					
ANR	4901244	AssignmentExpression	ch_count = 0		4901231	1		=			
ANR	4901245	Identifier	ch_count		4901231	0					
ANR	4901246	PrimaryExpression	0		4901231	1					
ANR	4901247	ExpressionStatement	fflush ( stdout )	854:1:21312:21326	4901231	2	True				
ANR	4901248	CallExpression	fflush ( stdout )		4901231	0					
ANR	4901249	Callee	fflush		4901231	0					
ANR	4901250	Identifier	fflush		4901231	0					
ANR	4901251	ArgumentList	stdout		4901231	1					
ANR	4901252	Argument	stdout		4901231	0					
ANR	4901253	Identifier	stdout		4901231	0					
ANR	4901254	IdentifierDeclStatement	const char end_char = '\\n' ;	856:1:21330:21356	4901231	3	True				
ANR	4901255	IdentifierDecl	end_char = '\\n'		4901231	0					
ANR	4901256	IdentifierDeclType	const char		4901231	0					
ANR	4901257	Identifier	end_char		4901231	1					
ANR	4901258	AssignmentExpression	end_char = '\\n'		4901231	2		=			
ANR	4901259	Identifier	end_char		4901231	0					
ANR	4901260	PrimaryExpression	'\\n'		4901231	1					
ANR	4901261	IfStatement	if ( ! echo )		4901231	4					
ANR	4901262	Condition	! echo	857:5:21363:21367	4901231	0	True				
ANR	4901263	UnaryOperationExpression	! echo		4901231	0					
ANR	4901264	UnaryOperator	!		4901231	0					
ANR	4901265	Identifier	echo		4901231	1					
ANR	4901266	ExpressionStatement	echo_off ( )	857:12:21370:21380	4901231	1	True				
ANR	4901267	CallExpression	echo_off ( )		4901231	0					
ANR	4901268	Callee	echo_off		4901231	0					
ANR	4901269	Identifier	echo_off		4901231	0					
ANR	4901270	ArgumentList			4901231	1					
ANR	4901271	WhileStatement	while ( ch_count < maxlength - 1 )		4901231	5					
ANR	4901272	Condition	ch_count < maxlength - 1	859:9:21395:21416	4901231	0	True				
ANR	4901273	RelationalExpression	ch_count < maxlength - 1		4901231	0		<			
ANR	4901274	Identifier	ch_count		4901231	0					
ANR	4901275	AdditiveExpression	maxlength - 1		4901231	1		-			
ANR	4901276	Identifier	maxlength		4901231	0					
ANR	4901277	PrimaryExpression	1		4901231	1					
ANR	4901278	CompoundStatement		11:34:170:170	4901231	1					
ANR	4901279	ExpressionStatement	ch = getchar ( )	860:2:21424:21438	4901231	0	True				
ANR	4901280	AssignmentExpression	ch = getchar ( )		4901231	0		=			
ANR	4901281	Identifier	ch		4901231	0					
ANR	4901282	CallExpression	getchar ( )		4901231	1					
ANR	4901283	Callee	getchar		4901231	0					
ANR	4901284	Identifier	getchar		4901231	0					
ANR	4901285	ArgumentList			4901231	1					
ANR	4901286	IfStatement	if ( ch == end_char )		4901231	1					
ANR	4901287	Condition	ch == end_char	861:7:21447:21460	4901231	0	True				
ANR	4901288	EqualityExpression	ch == end_char		4901231	0		==			
ANR	4901289	Identifier	ch		4901231	0					
ANR	4901290	Identifier	end_char		4901231	1					
ANR	4901291	CompoundStatement		13:24:214:214	4901231	1					
ANR	4901292	BreakStatement	break ;	862:3:21469:21474	4901231	0	True				
ANR	4901293	ElseStatement	else		4901231	0					
ANR	4901294	IfStatement	if ( ch == '\\b' )		4901231	0					
ANR	4901295	Condition	ch == '\\b'	863:14:21490:21499	4901231	0	True				
ANR	4901296	EqualityExpression	ch == '\\b'		4901231	0		==			
ANR	4901297	Identifier	ch		4901231	0					
ANR	4901298	PrimaryExpression	'\\b'		4901231	1					
ANR	4901299	CompoundStatement		15:26:252:252	4901231	1					
ANR	4901300	IfStatement	if ( ch_count > 0 )		4901231	0					
ANR	4901301	Condition	ch_count > 0	864:8:21525:21536	4901231	0	True				
ANR	4901302	RelationalExpression	ch_count > 0		4901231	0		>			
ANR	4901303	Identifier	ch_count		4901231	0					
ANR	4901304	PrimaryExpression	0		4901231	1					
ANR	4901305	CompoundStatement		16:23:290:290	4901231	1					
ANR	4901306	ExpressionStatement	ch_count --	864:25:21542:21552	4901231	0	True				
ANR	4901307	PostIncDecOperationExpression	ch_count --		4901231	0					
ANR	4901308	Identifier	ch_count		4901231	0					
ANR	4901309	IncDec	--		4901231	1					
ANR	4901310	ContinueStatement	continue ;	865:3:21559:21567	4901231	1	True				
ANR	4901311	ElseStatement	else		4901231	0					
ANR	4901312	IfStatement	if ( ch == '\\003' )		4901231	0					
ANR	4901313	Condition	ch == '\\003'	866:14:21583:21594	4901231	0	True				
ANR	4901314	EqualityExpression	ch == '\\003'		4901231	0		==			
ANR	4901315	Identifier	ch		4901231	0					
ANR	4901316	PrimaryExpression	'\\003'		4901231	1					
ANR	4901317	CompoundStatement		18:29:348:348	4901231	1					
ANR	4901318	ReturnStatement	return FALSE ;	867:3:21613:21625	4901231	0	True				
ANR	4901319	Identifier	FALSE		4901231	0					
ANR	4901320	ExpressionStatement	buf [ ch_count ++ ] = ( char ) ch	869:2:21633:21660	4901231	2	True				
ANR	4901321	AssignmentExpression	buf [ ch_count ++ ] = ( char ) ch		4901231	0		=			
ANR	4901322	ArrayIndexing	buf [ ch_count ++ ]		4901231	0					
ANR	4901323	Identifier	buf		4901231	0					
ANR	4901324	PostIncDecOperationExpression	ch_count ++		4901231	1					
ANR	4901325	Identifier	ch_count		4901231	0					
ANR	4901326	IncDec	++		4901231	1					
ANR	4901327	CastExpression	( char ) ch		4901231	1					
ANR	4901328	CastTarget	char		4901231	0					
ANR	4901329	Identifier	ch		4901231	1					
ANR	4901330	ExpressionStatement	buf [ ch_count ] = '\\0'	871:1:21666:21686	4901231	6	True				
ANR	4901331	AssignmentExpression	buf [ ch_count ] = '\\0'		4901231	0		=			
ANR	4901332	ArrayIndexing	buf [ ch_count ]		4901231	0					
ANR	4901333	Identifier	buf		4901231	0					
ANR	4901334	Identifier	ch_count		4901231	1					
ANR	4901335	PrimaryExpression	'\\0'		4901231	1					
ANR	4901336	IfStatement	if ( ! echo )		4901231	7					
ANR	4901337	Condition	! echo	873:5:21694:21698	4901231	0	True				
ANR	4901338	UnaryOperationExpression	! echo		4901231	0					
ANR	4901339	UnaryOperator	!		4901231	0					
ANR	4901340	Identifier	echo		4901231	1					
ANR	4901341	ExpressionStatement	echo_on ( )	873:12:21701:21710	4901231	1	True				
ANR	4901342	CallExpression	echo_on ( )		4901231	0					
ANR	4901343	Callee	echo_on		4901231	0					
ANR	4901344	Identifier	echo_on		4901231	0					
ANR	4901345	ArgumentList			4901231	1					
ANR	4901346	ReturnStatement	return TRUE ;	936:1:23647:23658	4901231	8	True				
ANR	4901347	Identifier	TRUE		4901231	0					
ANR	4901348	ReturnType	bool		4901231	1					
ANR	4901349	Identifier	read_from_keyboard		4901231	2					
ANR	4901350	ParameterList	"char * buf , int maxlength , bool echo"		4901231	3					
ANR	4901351	Parameter	char * buf	849:19:21212:21220	4901231	0	True				
ANR	4901352	ParameterType	char *		4901231	0					
ANR	4901353	Identifier	buf		4901231	1					
ANR	4901354	Parameter	int maxlength	849:30:21223:21235	4901231	1	True				
ANR	4901355	ParameterType	int		4901231	0					
ANR	4901356	Identifier	maxlength		4901231	1					
ANR	4901357	Parameter	bool echo	849:45:21238:21246	4901231	2	True				
ANR	4901358	ParameterType	bool		4901231	0					
ANR	4901359	Identifier	echo		4901231	1					
ANR	4901360	CFGEntryNode	ENTRY		4901231		True				
ANR	4901361	CFGExitNode	EXIT		4901231		True				
ANR	4901362	Symbol	getchar		4901231						
ANR	4901363	Symbol	* ch_count		4901231						
ANR	4901364	Symbol	buf		4901231						
ANR	4901365	Symbol	* buf		4901231						
ANR	4901366	Symbol	stdout		4901231						
ANR	4901367	Symbol	maxlength		4901231						
ANR	4901368	Symbol	ch_count		4901231						
ANR	4901369	Symbol	ch		4901231						
ANR	4901370	Symbol	end_char		4901231						
ANR	4901371	Symbol	TRUE		4901231						
ANR	4901372	Symbol	echo		4901231						
ANR	4901373	Symbol	FALSE		4901231						
ANR	4901374	Function	get_password	939:0:23663:23963							
ANR	4901375	FunctionDef	get_password ()		4901374	0					
ANR	4901376	CompoundStatement		940:15:23684:23963	4901374	0					
ANR	4901377	IdentifierDeclStatement	char * buf ;	941:1:23687:23696	4901374	0	True				
ANR	4901378	IdentifierDecl	* buf		4901374	0					
ANR	4901379	IdentifierDeclType	char *		4901374	0					
ANR	4901380	Identifier	buf		4901374	1					
ANR	4901381	ExpressionStatement	buf = new char [ MAX_PASSWORD_LENGTH + 1 ]	943:1:23701:23740	4901374	1	True				
ANR	4901382	AssignmentExpression	buf = new char [ MAX_PASSWORD_LENGTH + 1 ]		4901374	0		=			
ANR	4901383	Identifier	buf		4901374	0					
ANR	4901384	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4901374	1		+			
ANR	4901385	Identifier	MAX_PASSWORD_LENGTH		4901374	0					
ANR	4901386	PrimaryExpression	1		4901374	1					
ANR	4901387	IfStatement	if ( ! buf )		4901374	2					
ANR	4901388	Condition	! buf	945:5:23749:23753	4901374	0	True				
ANR	4901389	UnaryOperationExpression	! buf		4901374	0					
ANR	4901390	UnaryOperator	!		4901374	0					
ANR	4901391	Identifier	buf		4901374	1					
ANR	4901392	CompoundStatement		6:12:71:71	4901374	1					
ANR	4901393	ExpressionStatement	"fprintf ( stderr , ""Out of Memory!\\n\\n"" )"	945:14:23758:23795	4901374	0	True				
ANR	4901394	CallExpression	"fprintf ( stderr , ""Out of Memory!\\n\\n"" )"		4901374	0					
ANR	4901395	Callee	fprintf		4901374	0					
ANR	4901396	Identifier	fprintf		4901374	0					
ANR	4901397	ArgumentList	stderr		4901374	1					
ANR	4901398	Argument	stderr		4901374	0					
ANR	4901399	Identifier	stderr		4901374	0					
ANR	4901400	Argument	"""Out of Memory!\\n\\n"""		4901374	1					
ANR	4901401	PrimaryExpression	"""Out of Memory!\\n\\n"""		4901374	0					
ANR	4901402	ReturnStatement	return NULL ;	945:53:23797:23808	4901374	1	True				
ANR	4901403	Identifier	NULL		4901374	0					
ANR	4901404	ExpressionStatement	"printf ( ""Enter password: "" )"	948:1:23818:23844	4901374	3	True				
ANR	4901405	CallExpression	"printf ( ""Enter password: "" )"		4901374	0					
ANR	4901406	Callee	printf		4901374	0					
ANR	4901407	Identifier	printf		4901374	0					
ANR	4901408	ArgumentList	"""Enter password: """		4901374	1					
ANR	4901409	Argument	"""Enter password: """		4901374	0					
ANR	4901410	PrimaryExpression	"""Enter password: """		4901374	0					
ANR	4901411	IfStatement	"if ( ! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false ) )"		4901374	4					
ANR	4901412	Condition	"! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"	949:6:23852:23908	4901374	0	True				
ANR	4901413	UnaryOperationExpression	"! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"		4901374	0					
ANR	4901414	UnaryOperator	!		4901374	0					
ANR	4901415	CallExpression	"read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"		4901374	1					
ANR	4901416	Callee	read_from_keyboard		4901374	0					
ANR	4901417	Identifier	read_from_keyboard		4901374	0					
ANR	4901418	ArgumentList	buf		4901374	1					
ANR	4901419	Argument	buf		4901374	0					
ANR	4901420	Identifier	buf		4901374	0					
ANR	4901421	Argument	MAX_PASSWORD_LENGTH + 1		4901374	1					
ANR	4901422	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		4901374	0		+			
ANR	4901423	Identifier	MAX_PASSWORD_LENGTH		4901374	0					
ANR	4901424	PrimaryExpression	1		4901374	1					
ANR	4901425	Argument	false		4901374	2					
ANR	4901426	Identifier	false		4901374	0					
ANR	4901427	CompoundStatement		10:66:227:227	4901374	1					
ANR	4901428	Statement	delete	950:2:23916:23921	4901374	0	True				
ANR	4901429	Statement	[	950:8:23922:23922	4901374	1	True				
ANR	4901430	Statement	]	950:9:23923:23923	4901374	2	True				
ANR	4901431	ExpressionStatement	buf	950:11:23925:23928	4901374	3	True				
ANR	4901432	Identifier	buf		4901374	0					
ANR	4901433	ReturnStatement	return NULL ;	951:2:23932:23943	4901374	4	True				
ANR	4901434	Identifier	NULL		4901374	0					
ANR	4901435	ReturnStatement	return buf ;	954:1:23951:23961	4901374	5	True				
ANR	4901436	Identifier	buf		4901374	0					
ANR	4901437	ReturnType	char *		4901374	1					
ANR	4901438	Identifier	get_password		4901374	2					
ANR	4901439	ParameterList			4901374	3					
ANR	4901440	CFGEntryNode	ENTRY		4901374		True				
ANR	4901441	CFGExitNode	EXIT		4901374		True				
ANR	4901442	Symbol	buf		4901374						
ANR	4901443	Symbol	NULL		4901374						
ANR	4901444	Symbol	false		4901374						
ANR	4901445	Symbol	MAX_PASSWORD_LENGTH		4901374						
ANR	4901446	Symbol	stderr		4901374						
ANR	4901447	Symbol	read_from_keyboard		4901374						
