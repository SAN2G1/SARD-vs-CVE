command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1669241	File	data/converged/CVE-2011-4930_htcondor/io.c								
ANR	1669242	DeclStmt									
ANR	1669243	Decl							int	int [ 4096 ]	Data
ANR	1669244	DeclStmt									
ANR	1669245	Decl							void	"void ( int * data , unsigned len )"	init_data
ANR	1669246	DeclStmt									
ANR	1669247	Decl							void	"void ( int data [ ] , int fd , unsigned len )"	do_it
ANR	1669248	Function	main	43:0:1416:2031							
ANR	1669249	FunctionDef	"main (int argc , char * argv [ ])"		1669248	0					
ANR	1669250	CompoundStatement		44:0:1447:2031	1669248	0					
ANR	1669251	IdentifierDeclStatement	int fd ;	45:1:1450:1457	1669248	0	True				
ANR	1669252	IdentifierDecl	fd		1669248	0					
ANR	1669253	IdentifierDeclType	int		1669248	0					
ANR	1669254	Identifier	fd		1669248	1					
ANR	1669255	IdentifierDeclStatement	int i ;	46:1:1460:1466	1669248	1	True				
ANR	1669256	IdentifierDecl	i		1669248	0					
ANR	1669257	IdentifierDeclType	int		1669248	0					
ANR	1669258	Identifier	i		1669248	1					
ANR	1669259	IdentifierDeclStatement	int count ;	47:1:1469:1479	1669248	2	True				
ANR	1669260	IdentifierDecl	count		1669248	0					
ANR	1669261	IdentifierDeclType	int		1669248	0					
ANR	1669262	Identifier	count		1669248	1					
ANR	1669263	IfStatement	if ( argc != 2 )		1669248	3					
ANR	1669264	Condition	argc != 2	49:5:1487:1495	1669248	0	True				
ANR	1669265	EqualityExpression	argc != 2		1669248	0		!=			
ANR	1669266	Identifier	argc		1669248	0					
ANR	1669267	PrimaryExpression	2		1669248	1					
ANR	1669268	CompoundStatement		6:17:51:51	1669248	1					
ANR	1669269	ExpressionStatement	"fprintf ( stderr , ""Usage %s seconds\\n"" , argv [ 0 ] )"	50:2:1503:1551	1669248	0	True				
ANR	1669270	CallExpression	"fprintf ( stderr , ""Usage %s seconds\\n"" , argv [ 0 ] )"		1669248	0					
ANR	1669271	Callee	fprintf		1669248	0					
ANR	1669272	Identifier	fprintf		1669248	0					
ANR	1669273	ArgumentList	stderr		1669248	1					
ANR	1669274	Argument	stderr		1669248	0					
ANR	1669275	Identifier	stderr		1669248	0					
ANR	1669276	Argument	"""Usage %s seconds\\n"""		1669248	1					
ANR	1669277	PrimaryExpression	"""Usage %s seconds\\n"""		1669248	0					
ANR	1669278	Argument	argv [ 0 ]		1669248	2					
ANR	1669279	ArrayIndexing	argv [ 0 ]		1669248	0					
ANR	1669280	Identifier	argv		1669248	0					
ANR	1669281	PrimaryExpression	0		1669248	1					
ANR	1669282	ExpressionStatement	exit ( 1 )	51:2:1555:1564	1669248	1	True				
ANR	1669283	CallExpression	exit ( 1 )		1669248	0					
ANR	1669284	Callee	exit		1669248	0					
ANR	1669285	Identifier	exit		1669248	0					
ANR	1669286	ArgumentList	1		1669248	1					
ANR	1669287	Argument	1		1669248	0					
ANR	1669288	PrimaryExpression	1		1669248	0					
ANR	1669289	ExpressionStatement	count = atoi ( argv [ 1 ] )	54:1:1571:1594	1669248	4	True				
ANR	1669290	AssignmentExpression	count = atoi ( argv [ 1 ] )		1669248	0		=			
ANR	1669291	Identifier	count		1669248	0					
ANR	1669292	CallExpression	atoi ( argv [ 1 ] )		1669248	1					
ANR	1669293	Callee	atoi		1669248	0					
ANR	1669294	Identifier	atoi		1669248	0					
ANR	1669295	ArgumentList	argv [ 1 ]		1669248	1					
ANR	1669296	Argument	argv [ 1 ]		1669248	0					
ANR	1669297	ArrayIndexing	argv [ 1 ]		1669248	0					
ANR	1669298	Identifier	argv		1669248	0					
ANR	1669299	PrimaryExpression	1		1669248	1					
ANR	1669300	IfStatement	if ( count <= 0 )		1669248	5					
ANR	1669301	Condition	count <= 0	55:5:1601:1610	1669248	0	True				
ANR	1669302	RelationalExpression	count <= 0		1669248	0		<=			
ANR	1669303	Identifier	count		1669248	0					
ANR	1669304	PrimaryExpression	0		1669248	1					
ANR	1669305	CompoundStatement		12:18:166:166	1669248	1					
ANR	1669306	ExpressionStatement	"fprintf ( stderr , ""Seconds must be positive\\n"" )"	56:2:1618:1665	1669248	0	True				
ANR	1669307	CallExpression	"fprintf ( stderr , ""Seconds must be positive\\n"" )"		1669248	0					
ANR	1669308	Callee	fprintf		1669248	0					
ANR	1669309	Identifier	fprintf		1669248	0					
ANR	1669310	ArgumentList	stderr		1669248	1					
ANR	1669311	Argument	stderr		1669248	0					
ANR	1669312	Identifier	stderr		1669248	0					
ANR	1669313	Argument	"""Seconds must be positive\\n"""		1669248	1					
ANR	1669314	PrimaryExpression	"""Seconds must be positive\\n"""		1669248	0					
ANR	1669315	ExpressionStatement	exit ( 1 )	57:2:1669:1678	1669248	1	True				
ANR	1669316	CallExpression	exit ( 1 )		1669248	0					
ANR	1669317	Callee	exit		1669248	0					
ANR	1669318	Identifier	exit		1669248	0					
ANR	1669319	ArgumentList	1		1669248	1					
ANR	1669320	Argument	1		1669248	0					
ANR	1669321	PrimaryExpression	1		1669248	0					
ANR	1669322	IfStatement	"if ( ( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0 )"		1669248	6					
ANR	1669323	Condition	"( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0"	60:5:1689:1736	1669248	0	True				
ANR	1669324	RelationalExpression	"( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0"		1669248	0		<			
ANR	1669325	AssignmentExpression	"fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 )"		1669248	0		=			
ANR	1669326	Identifier	fd		1669248	0					
ANR	1669327	CallExpression	"open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 )"		1669248	1					
ANR	1669328	Callee	open		1669248	0					
ANR	1669329	Identifier	open		1669248	0					
ANR	1669330	ArgumentList	"""tmp"""		1669248	1					
ANR	1669331	Argument	"""tmp"""		1669248	0					
ANR	1669332	PrimaryExpression	"""tmp"""		1669248	0					
ANR	1669333	Argument	O_CREAT | O_TRUNC | O_RDWR		1669248	1					
ANR	1669334	InclusiveOrExpression	O_CREAT | O_TRUNC | O_RDWR		1669248	0		|			
ANR	1669335	Identifier	O_CREAT		1669248	0					
ANR	1669336	InclusiveOrExpression	O_TRUNC | O_RDWR		1669248	1		|			
ANR	1669337	Identifier	O_TRUNC		1669248	0					
ANR	1669338	Identifier	O_RDWR		1669248	1					
ANR	1669339	Argument	0664		1669248	2					
ANR	1669340	PrimaryExpression	0664		1669248	0					
ANR	1669341	PrimaryExpression	0		1669248	1					
ANR	1669342	CompoundStatement		17:56:292:292	1669248	1					
ANR	1669343	ExpressionStatement	"perror ( ""tmp"" )"	61:2:1744:1759	1669248	0	True				
ANR	1669344	CallExpression	"perror ( ""tmp"" )"		1669248	0					
ANR	1669345	Callee	perror		1669248	0					
ANR	1669346	Identifier	perror		1669248	0					
ANR	1669347	ArgumentList	"""tmp"""		1669248	1					
ANR	1669348	Argument	"""tmp"""		1669248	0					
ANR	1669349	PrimaryExpression	"""tmp"""		1669248	0					
ANR	1669350	ExpressionStatement	exit ( 1 )	62:2:1763:1772	1669248	1	True				
ANR	1669351	CallExpression	exit ( 1 )		1669248	0					
ANR	1669352	Callee	exit		1669248	0					
ANR	1669353	Identifier	exit		1669248	0					
ANR	1669354	ArgumentList	1		1669248	1					
ANR	1669355	Argument	1		1669248	0					
ANR	1669356	PrimaryExpression	1		1669248	0					
ANR	1669357	ExpressionStatement	"init_data ( Data , sizeof ( Data ) )"	65:1:1779:1810	1669248	7	True				
ANR	1669358	CallExpression	"init_data ( Data , sizeof ( Data ) )"		1669248	0					
ANR	1669359	Callee	init_data		1669248	0					
ANR	1669360	Identifier	init_data		1669248	0					
ANR	1669361	ArgumentList	Data		1669248	1					
ANR	1669362	Argument	Data		1669248	0					
ANR	1669363	Identifier	Data		1669248	0					
ANR	1669364	Argument	sizeof ( Data )		1669248	1					
ANR	1669365	SizeofExpression	sizeof ( Data )		1669248	0					
ANR	1669366	Sizeof	sizeof		1669248	0					
ANR	1669367	SizeofOperand	Data		1669248	1					
ANR	1669368	ForStatement	for ( i = 0 ; i < count ; i ++ )		1669248	8					
ANR	1669369	ForInit	i = 0 ;	67:6:1819:1822	1669248	0	True				
ANR	1669370	AssignmentExpression	i = 0		1669248	0		=			
ANR	1669371	Identifier	i		1669248	0					
ANR	1669372	PrimaryExpression	0		1669248	1					
ANR	1669373	Condition	i < count	67:11:1824:1832	1669248	1	True				
ANR	1669374	RelationalExpression	i < count		1669248	0		<			
ANR	1669375	Identifier	i		1669248	0					
ANR	1669376	Identifier	count		1669248	1					
ANR	1669377	PostIncDecOperationExpression	i ++	67:22:1835:1837	1669248	2	True				
ANR	1669378	Identifier	i		1669248	0					
ANR	1669379	IncDec	++		1669248	1					
ANR	1669380	CompoundStatement		24:28:393:393	1669248	3					
ANR	1669381	ExpressionStatement	"do_it ( Data , fd , sizeof ( Data ) )"	68:2:1845:1876	1669248	0	True				
ANR	1669382	CallExpression	"do_it ( Data , fd , sizeof ( Data ) )"		1669248	0					
ANR	1669383	Callee	do_it		1669248	0					
ANR	1669384	Identifier	do_it		1669248	0					
ANR	1669385	ArgumentList	Data		1669248	1					
ANR	1669386	Argument	Data		1669248	0					
ANR	1669387	Identifier	Data		1669248	0					
ANR	1669388	Argument	fd		1669248	1					
ANR	1669389	Identifier	fd		1669248	0					
ANR	1669390	Argument	sizeof ( Data )		1669248	2					
ANR	1669391	SizeofExpression	sizeof ( Data )		1669248	0					
ANR	1669392	Sizeof	sizeof		1669248	0					
ANR	1669393	SizeofOperand	Data		1669248	1					
ANR	1669394	ExpressionStatement	"printf ( ""%d "" , i )"	69:2:1880:1898	1669248	1	True				
ANR	1669395	CallExpression	"printf ( ""%d "" , i )"		1669248	0					
ANR	1669396	Callee	printf		1669248	0					
ANR	1669397	Identifier	printf		1669248	0					
ANR	1669398	ArgumentList	"""%d """		1669248	1					
ANR	1669399	Argument	"""%d """		1669248	0					
ANR	1669400	PrimaryExpression	"""%d """		1669248	0					
ANR	1669401	Argument	i		1669248	1					
ANR	1669402	Identifier	i		1669248	0					
ANR	1669403	ExpressionStatement	fflush ( stdout )	70:2:1902:1918	1669248	2	True				
ANR	1669404	CallExpression	fflush ( stdout )		1669248	0					
ANR	1669405	Callee	fflush		1669248	0					
ANR	1669406	Identifier	fflush		1669248	0					
ANR	1669407	ArgumentList	stdout		1669248	1					
ANR	1669408	Argument	stdout		1669248	0					
ANR	1669409	Identifier	stdout		1669248	0					
ANR	1669410	ExpressionStatement	"printf ( ""\\nNormal End Of Job\\n"" )"	72:1:1924:1957	1669248	9	True				
ANR	1669411	CallExpression	"printf ( ""\\nNormal End Of Job\\n"" )"		1669248	0					
ANR	1669412	Callee	printf		1669248	0					
ANR	1669413	Identifier	printf		1669248	0					
ANR	1669414	ArgumentList	"""\\nNormal End Of Job\\n"""		1669248	1					
ANR	1669415	Argument	"""\\nNormal End Of Job\\n"""		1669248	0					
ANR	1669416	PrimaryExpression	"""\\nNormal End Of Job\\n"""		1669248	0					
ANR	1669417	ExpressionStatement	"printf ( ""Be sure the job checkpointed at least once.\\n"" )"	73:1:1960:2017	1669248	10	True				
ANR	1669418	CallExpression	"printf ( ""Be sure the job checkpointed at least once.\\n"" )"		1669248	0					
ANR	1669419	Callee	printf		1669248	0					
ANR	1669420	Identifier	printf		1669248	0					
ANR	1669421	ArgumentList	"""Be sure the job checkpointed at least once.\\n"""		1669248	1					
ANR	1669422	Argument	"""Be sure the job checkpointed at least once.\\n"""		1669248	0					
ANR	1669423	PrimaryExpression	"""Be sure the job checkpointed at least once.\\n"""		1669248	0					
ANR	1669424	ExpressionStatement	exit ( 0 )	74:1:2020:2029	1669248	11	True				
ANR	1669425	CallExpression	exit ( 0 )		1669248	0					
ANR	1669426	Callee	exit		1669248	0					
ANR	1669427	Identifier	exit		1669248	0					
ANR	1669428	ArgumentList	0		1669248	1					
ANR	1669429	Argument	0		1669248	0					
ANR	1669430	PrimaryExpression	0		1669248	0					
ANR	1669431	Identifier	main		1669248	1					
ANR	1669432	ParameterList	"int argc , char * argv [ ]"		1669248	2					
ANR	1669433	Parameter	int argc	43:6:1422:1429	1669248	0	True				
ANR	1669434	ParameterType	int		1669248	0					
ANR	1669435	Identifier	argc		1669248	1					
ANR	1669436	Parameter	char * argv [ ]	43:16:1432:1443	1669248	1	True				
ANR	1669437	ParameterType	char * [ ]		1669248	0					
ANR	1669438	Identifier	argv		1669248	1					
ANR	1669439	CFGEntryNode	ENTRY		1669248		True				
ANR	1669440	CFGExitNode	EXIT		1669248		True				
ANR	1669441	Symbol	argc		1669248						
ANR	1669442	Symbol	atoi		1669248						
ANR	1669443	Symbol	stdout		1669248						
ANR	1669444	Symbol	O_CREAT		1669248						
ANR	1669445	Symbol	count		1669248						
ANR	1669446	Symbol	i		1669248						
ANR	1669447	Symbol	* argv		1669248						
ANR	1669448	Symbol	Data		1669248						
ANR	1669449	Symbol	stderr		1669248						
ANR	1669450	Symbol	argv		1669248						
ANR	1669451	Symbol	O_RDWR		1669248						
ANR	1669452	Symbol	O_TRUNC		1669248						
ANR	1669453	Symbol	fd		1669248						
ANR	1669454	Symbol	open		1669248						
ANR	1669455	Function	init_data	77:0:2034:2164							
ANR	1669456	FunctionDef	"init_data (int data [ ] , unsigned len)"		1669455	0					
ANR	1669457	CompoundStatement		79:0:2077:2164	1669455	0					
ANR	1669458	IdentifierDeclStatement	"int i , lim ;"	80:1:2080:2091	1669455	0	True				
ANR	1669459	IdentifierDecl	i		1669455	0					
ANR	1669460	IdentifierDeclType	int		1669455	0					
ANR	1669461	Identifier	i		1669455	1					
ANR	1669462	IdentifierDecl	lim		1669455	1					
ANR	1669463	IdentifierDeclType	int		1669455	0					
ANR	1669464	Identifier	lim		1669455	1					
ANR	1669465	ExpressionStatement	lim = len / sizeof ( int )	82:1:2095:2118	1669455	1	True				
ANR	1669466	AssignmentExpression	lim = len / sizeof ( int )		1669455	0		=			
ANR	1669467	Identifier	lim		1669455	0					
ANR	1669468	MultiplicativeExpression	len / sizeof ( int )		1669455	1		/			
ANR	1669469	Identifier	len		1669455	0					
ANR	1669470	SizeofExpression	sizeof ( int )		1669455	1					
ANR	1669471	Sizeof	sizeof		1669455	0					
ANR	1669472	SizeofOperand	int		1669455	1					
ANR	1669473	ForStatement	for ( i = 0 ; i < lim ; i ++ )		1669455	2					
ANR	1669474	ForInit	i = 0 ;	83:6:2126:2129	1669455	0	True				
ANR	1669475	AssignmentExpression	i = 0		1669455	0		=			
ANR	1669476	Identifier	i		1669455	0					
ANR	1669477	PrimaryExpression	0		1669455	1					
ANR	1669478	Condition	i < lim	83:11:2131:2135	1669455	1	True				
ANR	1669479	RelationalExpression	i < lim		1669455	0		<			
ANR	1669480	Identifier	i		1669455	0					
ANR	1669481	Identifier	lim		1669455	1					
ANR	1669482	PostIncDecOperationExpression	i ++	83:18:2138:2140	1669455	2	True				
ANR	1669483	Identifier	i		1669455	0					
ANR	1669484	IncDec	++		1669455	1					
ANR	1669485	CompoundStatement		5:24:66:66	1669455	3					
ANR	1669486	ExpressionStatement	data [ i ] = i	84:2:2148:2159	1669455	0	True				
ANR	1669487	AssignmentExpression	data [ i ] = i		1669455	0		=			
ANR	1669488	ArrayIndexing	data [ i ]		1669455	0					
ANR	1669489	Identifier	data		1669455	0					
ANR	1669490	Identifier	i		1669455	1					
ANR	1669491	Identifier	i		1669455	1					
ANR	1669492	ReturnType	void		1669455	1					
ANR	1669493	Identifier	init_data		1669455	2					
ANR	1669494	ParameterList	"int data [ ] , unsigned len"		1669455	3					
ANR	1669495	Parameter	int data [ ]	78:11:2050:2059	1669455	0	True				
ANR	1669496	ParameterType	int [ ]		1669455	0					
ANR	1669497	Identifier	data		1669455	1					
ANR	1669498	Parameter	unsigned len	78:23:2062:2073	1669455	1	True				
ANR	1669499	ParameterType	unsigned		1669455	0					
ANR	1669500	Identifier	len		1669455	1					
ANR	1669501	CFGEntryNode	ENTRY		1669455		True				
ANR	1669502	CFGExitNode	EXIT		1669455		True				
ANR	1669503	Symbol	lim		1669455						
ANR	1669504	Symbol	* i		1669455						
ANR	1669505	Symbol	data		1669455						
ANR	1669506	Symbol	len		1669455						
ANR	1669507	Symbol	i		1669455						
ANR	1669508	Symbol	* data		1669455						
ANR	1669509	Function	do_it	88:0:2167:2670							
ANR	1669510	FunctionDef	"do_it (int data [ ] , int fd , unsigned len)"		1669509	0					
ANR	1669511	CompoundStatement		90:0:2214:2670	1669509	0					
ANR	1669512	IdentifierDeclStatement	char * buf = malloc ( len ) ;	91:1:2217:2240	1669509	0	True				
ANR	1669513	IdentifierDecl	* buf = malloc ( len )		1669509	0					
ANR	1669514	IdentifierDeclType	char *		1669509	0					
ANR	1669515	Identifier	buf		1669509	1					
ANR	1669516	AssignmentExpression	* buf = malloc ( len )		1669509	2		=			
ANR	1669517	Identifier	buf		1669509	0					
ANR	1669518	CallExpression	malloc ( len )		1669509	1					
ANR	1669519	Callee	malloc		1669509	0					
ANR	1669520	Identifier	malloc		1669509	0					
ANR	1669521	ArgumentList	len		1669509	1					
ANR	1669522	Argument	len		1669509	0					
ANR	1669523	Identifier	len		1669509	0					
ANR	1669524	IdentifierDeclStatement	int i ;	92:1:2243:2249	1669509	1	True				
ANR	1669525	IdentifierDecl	i		1669509	0					
ANR	1669526	IdentifierDeclType	int		1669509	0					
ANR	1669527	Identifier	i		1669509	1					
ANR	1669528	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		1669509	2					
ANR	1669529	ForInit	i = 0 ;	94:6:2258:2261	1669509	0	True				
ANR	1669530	AssignmentExpression	i = 0		1669509	0		=			
ANR	1669531	Identifier	i		1669509	0					
ANR	1669532	PrimaryExpression	0		1669509	1					
ANR	1669533	Condition	i < 100	94:11:2263:2267	1669509	1	True				
ANR	1669534	RelationalExpression	i < 100		1669509	0		<			
ANR	1669535	Identifier	i		1669509	0					
ANR	1669536	PrimaryExpression	100		1669509	1					
ANR	1669537	PostIncDecOperationExpression	i ++	94:18:2270:2272	1669509	2	True				
ANR	1669538	Identifier	i		1669509	0					
ANR	1669539	IncDec	++		1669509	1					
ANR	1669540	CompoundStatement		5:24:61:61	1669509	3					
ANR	1669541	IfStatement	"if ( lseek ( fd , 0 , 0 ) < 0 )"		1669509	0					
ANR	1669542	Condition	"lseek ( fd , 0 , 0 ) < 0"	95:6:2284:2300	1669509	0	True				
ANR	1669543	RelationalExpression	"lseek ( fd , 0 , 0 ) < 0"		1669509	0		<			
ANR	1669544	CallExpression	"lseek ( fd , 0 , 0 )"		1669509	0					
ANR	1669545	Callee	lseek		1669509	0					
ANR	1669546	Identifier	lseek		1669509	0					
ANR	1669547	ArgumentList	fd		1669509	1					
ANR	1669548	Argument	fd		1669509	0					
ANR	1669549	Identifier	fd		1669509	0					
ANR	1669550	Argument	0		1669509	1					
ANR	1669551	PrimaryExpression	0		1669509	0					
ANR	1669552	Argument	0		1669509	2					
ANR	1669553	PrimaryExpression	0		1669509	0					
ANR	1669554	PrimaryExpression	0		1669509	1					
ANR	1669555	CompoundStatement		6:26:89:89	1669509	1					
ANR	1669556	ExpressionStatement	"perror ( ""lseek"" )"	96:3:2309:2326	1669509	0	True				
ANR	1669557	CallExpression	"perror ( ""lseek"" )"		1669509	0					
ANR	1669558	Callee	perror		1669509	0					
ANR	1669559	Identifier	perror		1669509	0					
ANR	1669560	ArgumentList	"""lseek"""		1669509	1					
ANR	1669561	Argument	"""lseek"""		1669509	0					
ANR	1669562	PrimaryExpression	"""lseek"""		1669509	0					
ANR	1669563	ExpressionStatement	exit ( 1 )	97:3:2331:2340	1669509	1	True				
ANR	1669564	CallExpression	exit ( 1 )		1669509	0					
ANR	1669565	Callee	exit		1669509	0					
ANR	1669566	Identifier	exit		1669509	0					
ANR	1669567	ArgumentList	1		1669509	1					
ANR	1669568	Argument	1		1669509	0					
ANR	1669569	PrimaryExpression	1		1669509	0					
ANR	1669570	IfStatement	"if ( write ( fd , data , len ) < len )"		1669509	1					
ANR	1669571	Condition	"write ( fd , data , len ) < len"	99:6:2352:2375	1669509	0	True				
ANR	1669572	RelationalExpression	"write ( fd , data , len ) < len"		1669509	0		<			
ANR	1669573	CallExpression	"write ( fd , data , len )"		1669509	0					
ANR	1669574	Callee	write		1669509	0					
ANR	1669575	Identifier	write		1669509	0					
ANR	1669576	ArgumentList	fd		1669509	1					
ANR	1669577	Argument	fd		1669509	0					
ANR	1669578	Identifier	fd		1669509	0					
ANR	1669579	Argument	data		1669509	1					
ANR	1669580	Identifier	data		1669509	0					
ANR	1669581	Argument	len		1669509	2					
ANR	1669582	Identifier	len		1669509	0					
ANR	1669583	Identifier	len		1669509	1					
ANR	1669584	CompoundStatement		10:33:164:164	1669509	1					
ANR	1669585	ExpressionStatement	"perror ( ""write"" )"	100:3:2384:2401	1669509	0	True				
ANR	1669586	CallExpression	"perror ( ""write"" )"		1669509	0					
ANR	1669587	Callee	perror		1669509	0					
ANR	1669588	Identifier	perror		1669509	0					
ANR	1669589	ArgumentList	"""write"""		1669509	1					
ANR	1669590	Argument	"""write"""		1669509	0					
ANR	1669591	PrimaryExpression	"""write"""		1669509	0					
ANR	1669592	ExpressionStatement	exit ( 1 )	101:3:2406:2415	1669509	1	True				
ANR	1669593	CallExpression	exit ( 1 )		1669509	0					
ANR	1669594	Callee	exit		1669509	0					
ANR	1669595	Identifier	exit		1669509	0					
ANR	1669596	ArgumentList	1		1669509	1					
ANR	1669597	Argument	1		1669509	0					
ANR	1669598	PrimaryExpression	1		1669509	0					
ANR	1669599	IfStatement	"if ( lseek ( fd , 0 , 0 ) < 0 )"		1669509	2					
ANR	1669600	Condition	"lseek ( fd , 0 , 0 ) < 0"	103:6:2427:2443	1669509	0	True				
ANR	1669601	RelationalExpression	"lseek ( fd , 0 , 0 ) < 0"		1669509	0		<			
ANR	1669602	CallExpression	"lseek ( fd , 0 , 0 )"		1669509	0					
ANR	1669603	Callee	lseek		1669509	0					
ANR	1669604	Identifier	lseek		1669509	0					
ANR	1669605	ArgumentList	fd		1669509	1					
ANR	1669606	Argument	fd		1669509	0					
ANR	1669607	Identifier	fd		1669509	0					
ANR	1669608	Argument	0		1669509	1					
ANR	1669609	PrimaryExpression	0		1669509	0					
ANR	1669610	Argument	0		1669509	2					
ANR	1669611	PrimaryExpression	0		1669509	0					
ANR	1669612	PrimaryExpression	0		1669509	1					
ANR	1669613	CompoundStatement		14:26:232:232	1669509	1					
ANR	1669614	ExpressionStatement	"perror ( ""lseek"" )"	104:3:2452:2469	1669509	0	True				
ANR	1669615	CallExpression	"perror ( ""lseek"" )"		1669509	0					
ANR	1669616	Callee	perror		1669509	0					
ANR	1669617	Identifier	perror		1669509	0					
ANR	1669618	ArgumentList	"""lseek"""		1669509	1					
ANR	1669619	Argument	"""lseek"""		1669509	0					
ANR	1669620	PrimaryExpression	"""lseek"""		1669509	0					
ANR	1669621	ExpressionStatement	exit ( 1 )	105:3:2474:2483	1669509	1	True				
ANR	1669622	CallExpression	exit ( 1 )		1669509	0					
ANR	1669623	Callee	exit		1669509	0					
ANR	1669624	Identifier	exit		1669509	0					
ANR	1669625	ArgumentList	1		1669509	1					
ANR	1669626	Argument	1		1669509	0					
ANR	1669627	PrimaryExpression	1		1669509	0					
ANR	1669628	IfStatement	"if ( read ( fd , buf , len ) != len )"		1669509	3					
ANR	1669629	Condition	"read ( fd , buf , len ) != len"	107:6:2495:2517	1669509	0	True				
ANR	1669630	EqualityExpression	"read ( fd , buf , len ) != len"		1669509	0		!=			
ANR	1669631	CallExpression	"read ( fd , buf , len )"		1669509	0					
ANR	1669632	Callee	read		1669509	0					
ANR	1669633	Identifier	read		1669509	0					
ANR	1669634	ArgumentList	fd		1669509	1					
ANR	1669635	Argument	fd		1669509	0					
ANR	1669636	Identifier	fd		1669509	0					
ANR	1669637	Argument	buf		1669509	1					
ANR	1669638	Identifier	buf		1669509	0					
ANR	1669639	Argument	len		1669509	2					
ANR	1669640	Identifier	len		1669509	0					
ANR	1669641	Identifier	len		1669509	1					
ANR	1669642	CompoundStatement		18:32:306:306	1669509	1					
ANR	1669643	ExpressionStatement	"perror ( ""read"" )"	108:3:2526:2543	1669509	0	True				
ANR	1669644	CallExpression	"perror ( ""read"" )"		1669509	0					
ANR	1669645	Callee	perror		1669509	0					
ANR	1669646	Identifier	perror		1669509	0					
ANR	1669647	ArgumentList	"""read"""		1669509	1					
ANR	1669648	Argument	"""read"""		1669509	0					
ANR	1669649	PrimaryExpression	"""read"""		1669509	0					
ANR	1669650	ExpressionStatement	exit ( 1 )	109:3:2548:2557	1669509	1	True				
ANR	1669651	CallExpression	exit ( 1 )		1669509	0					
ANR	1669652	Callee	exit		1669509	0					
ANR	1669653	Identifier	exit		1669509	0					
ANR	1669654	ArgumentList	1		1669509	1					
ANR	1669655	Argument	1		1669509	0					
ANR	1669656	PrimaryExpression	1		1669509	0					
ANR	1669657	IfStatement	"if ( memcmp ( buf , data , len ) != MATCH )"		1669509	4					
ANR	1669658	Condition	"memcmp ( buf , data , len ) != MATCH"	111:6:2569:2597	1669509	0	True				
ANR	1669659	EqualityExpression	"memcmp ( buf , data , len ) != MATCH"		1669509	0		!=			
ANR	1669660	CallExpression	"memcmp ( buf , data , len )"		1669509	0					
ANR	1669661	Callee	memcmp		1669509	0					
ANR	1669662	Identifier	memcmp		1669509	0					
ANR	1669663	ArgumentList	buf		1669509	1					
ANR	1669664	Argument	buf		1669509	0					
ANR	1669665	Identifier	buf		1669509	0					
ANR	1669666	Argument	data		1669509	1					
ANR	1669667	Identifier	data		1669509	0					
ANR	1669668	Argument	len		1669509	2					
ANR	1669669	Identifier	len		1669509	0					
ANR	1669670	Identifier	MATCH		1669509	1					
ANR	1669671	CompoundStatement		22:38:386:386	1669509	1					
ANR	1669672	ExpressionStatement	"printf ( ""Data Mismatch\\n"" )"	112:3:2606:2633	1669509	0	True				
ANR	1669673	CallExpression	"printf ( ""Data Mismatch\\n"" )"		1669509	0					
ANR	1669674	Callee	printf		1669509	0					
ANR	1669675	Identifier	printf		1669509	0					
ANR	1669676	ArgumentList	"""Data Mismatch\\n"""		1669509	1					
ANR	1669677	Argument	"""Data Mismatch\\n"""		1669509	0					
ANR	1669678	PrimaryExpression	"""Data Mismatch\\n"""		1669509	0					
ANR	1669679	ExpressionStatement	exit ( 1 )	113:3:2638:2647	1669509	1	True				
ANR	1669680	CallExpression	exit ( 1 )		1669509	0					
ANR	1669681	Callee	exit		1669509	0					
ANR	1669682	Identifier	exit		1669509	0					
ANR	1669683	ArgumentList	1		1669509	1					
ANR	1669684	Argument	1		1669509	0					
ANR	1669685	PrimaryExpression	1		1669509	0					
ANR	1669686	ExpressionStatement	free ( buf )	116:1:2657:2668	1669509	3	True				
ANR	1669687	CallExpression	free ( buf )		1669509	0					
ANR	1669688	Callee	free		1669509	0					
ANR	1669689	Identifier	free		1669509	0					
ANR	1669690	ArgumentList	buf		1669509	1					
ANR	1669691	Argument	buf		1669509	0					
ANR	1669692	Identifier	buf		1669509	0					
ANR	1669693	ReturnType	void		1669509	1					
ANR	1669694	Identifier	do_it		1669509	2					
ANR	1669695	ParameterList	"int data [ ] , int fd , unsigned len"		1669509	3					
ANR	1669696	Parameter	int data [ ]	89:7:2179:2188	1669509	0	True				
ANR	1669697	ParameterType	int [ ]		1669509	0					
ANR	1669698	Identifier	data		1669509	1					
ANR	1669699	Parameter	int fd	89:19:2191:2196	1669509	1	True				
ANR	1669700	ParameterType	int		1669509	0					
ANR	1669701	Identifier	fd		1669509	1					
ANR	1669702	Parameter	unsigned len	89:27:2199:2210	1669509	2	True				
ANR	1669703	ParameterType	unsigned		1669509	0					
ANR	1669704	Identifier	len		1669509	1					
ANR	1669705	CFGEntryNode	ENTRY		1669509		True				
ANR	1669706	CFGExitNode	EXIT		1669509		True				
ANR	1669707	Symbol	malloc		1669509						
ANR	1669708	Symbol	buf		1669509						
ANR	1669709	Symbol	lseek		1669509						
ANR	1669710	Symbol	read		1669509						
ANR	1669711	Symbol	memcmp		1669509						
ANR	1669712	Symbol	data		1669509						
ANR	1669713	Symbol	len		1669509						
ANR	1669714	Symbol	i		1669509						
ANR	1669715	Symbol	write		1669509						
ANR	1669716	Symbol	fd		1669509						
ANR	1669717	Symbol	MATCH		1669509						
