command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	29336	File	data/converged/CVE-2011-4930_htcondor/AviaryCommon_JobDetails.cpp								
ANR	29337	Function	AviaryCommon :: JobDetails :: JobDetails	26:11:717:1081							
ANR	29338	FunctionDef	AviaryCommon :: JobDetails :: JobDetails ()		29337	0					
ANR	29339	CompoundStatement		27:8:764:1081	29337	0					
ANR	29340	ExpressionStatement	property_Id = NULL	30:16:792:811	29337	0	True				
ANR	29341	AssignmentExpression	property_Id = NULL		29337	0		=			
ANR	29342	Identifier	property_Id		29337	0					
ANR	29343	Identifier	NULL		29337	1					
ANR	29344	ExpressionStatement	isValidId = false	32:12:840:858	29337	1	True				
ANR	29345	AssignmentExpression	isValidId = false		29337	0		=			
ANR	29346	Identifier	isValidId		29337	0					
ANR	29347	Identifier	false		29337	1					
ANR	29348	ExpressionStatement	property_Status = NULL	34:16:885:908	29337	2	True				
ANR	29349	AssignmentExpression	property_Status = NULL		29337	0		=			
ANR	29350	Identifier	property_Status		29337	0					
ANR	29351	Identifier	NULL		29337	1					
ANR	29352	ExpressionStatement	isValidStatus = false	36:12:937:959	29337	3	True				
ANR	29353	AssignmentExpression	isValidStatus = false		29337	0		=			
ANR	29354	Identifier	isValidStatus		29337	0					
ANR	29355	Identifier	false		29337	1					
ANR	29356	ExpressionStatement	property_Details = NULL	38:16:986:1010	29337	4	True				
ANR	29357	AssignmentExpression	property_Details = NULL		29337	0		=			
ANR	29358	Identifier	property_Details		29337	0					
ANR	29359	Identifier	NULL		29337	1					
ANR	29360	ExpressionStatement	isValidDetails = false	40:12:1039:1062	29337	5	True				
ANR	29361	AssignmentExpression	isValidDetails = false		29337	0		=			
ANR	29362	Identifier	isValidDetails		29337	0					
ANR	29363	Identifier	false		29337	1					
ANR	29364	Identifier	AviaryCommon :: JobDetails :: JobDetails		29337	1					
ANR	29365	ParameterList			29337	2					
ANR	29366	CFGEntryNode	ENTRY		29337		True				
ANR	29367	CFGExitNode	EXIT		29337		True				
ANR	29368	Symbol	property_Status		29337						
ANR	29369	Symbol	NULL		29337						
ANR	29370	Symbol	isValidId		29337						
ANR	29371	Symbol	false		29337						
ANR	29372	Symbol	isValidStatus		29337						
ANR	29373	Symbol	property_Details		29337						
ANR	29374	Symbol	isValidDetails		29337						
ANR	29375	Symbol	property_Id		29337						
ANR	29376	Function	AviaryCommon :: JobDetails :: JobDetails	44:7:1091:1743							
ANR	29377	FunctionDef	"AviaryCommon :: JobDetails :: JobDetails (AviaryCommon :: JobID * arg_Id , AviaryCommon :: Status * arg_Status , AviaryCommon :: Attributes * arg_Details)"		29376	0					
ANR	29378	CompoundStatement		45:8:1236:1743	29376	0					
ANR	29379	ExpressionStatement	property_Id = NULL	47:15:1267:1286	29376	0	True				
ANR	29380	AssignmentExpression	property_Id = NULL		29376	0		=			
ANR	29381	Identifier	property_Id		29376	0					
ANR	29382	Identifier	NULL		29376	1					
ANR	29383	ExpressionStatement	isValidId = true	49:12:1314:1331	29376	1	True				
ANR	29384	AssignmentExpression	isValidId = true		29376	0		=			
ANR	29385	Identifier	isValidId		29376	0					
ANR	29386	Identifier	true		29376	1					
ANR	29387	ExpressionStatement	property_Status = NULL	51:15:1361:1384	29376	2	True				
ANR	29388	AssignmentExpression	property_Status = NULL		29376	0		=			
ANR	29389	Identifier	property_Status		29376	0					
ANR	29390	Identifier	NULL		29376	1					
ANR	29391	ExpressionStatement	isValidStatus = true	53:12:1412:1433	29376	3	True				
ANR	29392	AssignmentExpression	isValidStatus = true		29376	0		=			
ANR	29393	Identifier	isValidStatus		29376	0					
ANR	29394	Identifier	true		29376	1					
ANR	29395	ExpressionStatement	property_Details = NULL	55:15:1463:1487	29376	4	True				
ANR	29396	AssignmentExpression	property_Details = NULL		29376	0		=			
ANR	29397	Identifier	property_Details		29376	0					
ANR	29398	Identifier	NULL		29376	1					
ANR	29399	ExpressionStatement	isValidDetails = true	57:12:1515:1537	29376	5	True				
ANR	29400	AssignmentExpression	isValidDetails = true		29376	0		=			
ANR	29401	Identifier	isValidDetails		29376	0					
ANR	29402	Identifier	true		29376	1					
ANR	29403	ExpressionStatement	property_Id = arg_Id	59:20:1572:1592	29376	6	True				
ANR	29404	AssignmentExpression	property_Id = arg_Id		29376	0		=			
ANR	29405	Identifier	property_Id		29376	0					
ANR	29406	Identifier	arg_Id		29376	1					
ANR	29407	ExpressionStatement	property_Status = arg_Status	61:20:1627:1655	29376	7	True				
ANR	29408	AssignmentExpression	property_Status = arg_Status		29376	0		=			
ANR	29409	Identifier	property_Status		29376	0					
ANR	29410	Identifier	arg_Status		29376	1					
ANR	29411	ExpressionStatement	property_Details = arg_Details	63:20:1690:1720	29376	8	True				
ANR	29412	AssignmentExpression	property_Details = arg_Details		29376	0		=			
ANR	29413	Identifier	property_Details		29376	0					
ANR	29414	Identifier	arg_Details		29376	1					
ANR	29415	Identifier	AviaryCommon :: JobDetails :: JobDetails		29376	1					
ANR	29416	ParameterList	"AviaryCommon :: JobID * arg_Id , AviaryCommon :: Status * arg_Status , AviaryCommon :: Attributes * arg_Details"		29376	2					
ANR	29417	Parameter	AviaryCommon :: JobID * arg_Id	44:44:1128:1154	29376	0	True				
ANR	29418	ParameterType	AviaryCommon :: JobID *		29376	0					
ANR	29419	Identifier	arg_Id		29376	1					
ANR	29420	Parameter	AviaryCommon :: Status * arg_Status	44:72:1156:1187	29376	1	True				
ANR	29421	ParameterType	AviaryCommon :: Status *		29376	0					
ANR	29422	Identifier	arg_Status		29376	1					
ANR	29423	Parameter	AviaryCommon :: Attributes * arg_Details	44:105:1189:1225	29376	2	True				
ANR	29424	ParameterType	AviaryCommon :: Attributes *		29376	0					
ANR	29425	Identifier	arg_Details		29376	1					
ANR	29426	CFGEntryNode	ENTRY		29376		True				
ANR	29427	CFGExitNode	EXIT		29376		True				
ANR	29428	Symbol	property_Status		29376						
ANR	29429	Symbol	arg_Status		29376						
ANR	29430	Symbol	NULL		29376						
ANR	29431	Symbol	isValidId		29376						
ANR	29432	Symbol	arg_Id		29376						
ANR	29433	Symbol	true		29376						
ANR	29434	Symbol	isValidStatus		29376						
ANR	29435	Symbol	property_Details		29376						
ANR	29436	Symbol	arg_Details		29376						
ANR	29437	Symbol	isValidDetails		29376						
ANR	29438	Symbol	property_Id		29376						
ANR	29439	Function	AviaryCommon :: JobDetails :: ~JobDetails	66:8:1753:1976							
ANR	29440	FunctionDef	AviaryCommon :: JobDetails :: ~JobDetails ()		29439	0					
ANR	29441	CompoundStatement		67:8:1801:1976	29439	0					
ANR	29442	IfStatement	if ( property_Id )		29439	0					
ANR	29443	Condition	property_Id	68:16:1819:1829	29439	0	True				
ANR	29444	Identifier	property_Id		29439	0					
ANR	29445	Statement	delete	68:29:1832:1837	29439	1	True				
ANR	29446	ExpressionStatement	property_Id	68:36:1839:1850	29439	1	True				
ANR	29447	Identifier	property_Id		29439	0					
ANR	29448	IfStatement	if ( property_Status )		29439	2					
ANR	29449	Condition	property_Status	69:16:1868:1882	29439	0	True				
ANR	29450	Identifier	property_Status		29439	0					
ANR	29451	Statement	delete	69:33:1885:1890	29439	1	True				
ANR	29452	ExpressionStatement	property_Status	69:40:1892:1907	29439	3	True				
ANR	29453	Identifier	property_Status		29439	0					
ANR	29454	IfStatement	if ( property_Details )		29439	4					
ANR	29455	Condition	property_Details	70:16:1925:1940	29439	0	True				
ANR	29456	Identifier	property_Details		29439	0					
ANR	29457	Statement	delete	70:34:1943:1948	29439	1	True				
ANR	29458	ExpressionStatement	property_Details	70:41:1950:1966	29439	5	True				
ANR	29459	Identifier	property_Details		29439	0					
ANR	29460	Identifier	AviaryCommon :: JobDetails :: ~JobDetails		29439	1					
ANR	29461	ParameterList			29439	2					
ANR	29462	CFGEntryNode	ENTRY		29439		True				
ANR	29463	CFGExitNode	EXIT		29439		True				
ANR	29464	Symbol	property_Status		29439						
ANR	29465	Symbol	property_Details		29439						
ANR	29466	Symbol	property_Id		29439						
ANR	29467	Function	AviaryCommon :: JobDetails :: deserialize	75:8:1997:16244							
ANR	29468	FunctionDef	"AviaryCommon :: JobDetails :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		29467	0					
ANR	29469	CompoundStatement		77:8:2146:16244	29467	0					
ANR	29470	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	78:10:2158:2191	29467	0	True				
ANR	29471	IdentifierDecl	* parent = * dp_parent		29467	0					
ANR	29472	IdentifierDeclType	axiom_node_t *		29467	0					
ANR	29473	Identifier	parent		29467	1					
ANR	29474	AssignmentExpression	* parent = * dp_parent		29467	2		=			
ANR	29475	Identifier	parent		29467	0					
ANR	29476	UnaryOperationExpression	* dp_parent		29467	1					
ANR	29477	UnaryOperator	*		29467	0					
ANR	29478	Identifier	dp_parent		29467	1					
ANR	29479	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	80:10:2214:2241	29467	1	True				
ANR	29480	IdentifierDecl	status = AXIS2_SUCCESS		29467	0					
ANR	29481	IdentifierDeclType	bool		29467	0					
ANR	29482	Identifier	status		29467	1					
ANR	29483	AssignmentExpression	status = AXIS2_SUCCESS		29467	2		=			
ANR	29484	Identifier	AXIS2_SUCCESS		29467	0					
ANR	29485	Identifier	AXIS2_SUCCESS		29467	1					
ANR	29486	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	82:9:2264:2301	29467	2	True				
ANR	29487	IdentifierDecl	* text_value = NULL		29467	0					
ANR	29488	IdentifierDeclType	const axis2_char_t *		29467	0					
ANR	29489	Identifier	text_value		29467	1					
ANR	29490	AssignmentExpression	* text_value = NULL		29467	2		=			
ANR	29491	Identifier	NULL		29467	0					
ANR	29492	Identifier	NULL		29467	1					
ANR	29493	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	83:9:2312:2341	29467	3	True				
ANR	29494	IdentifierDecl	* mqname = NULL		29467	0					
ANR	29495	IdentifierDeclType	axutil_qname_t *		29467	0					
ANR	29496	Identifier	mqname		29467	1					
ANR	29497	AssignmentExpression	* mqname = NULL		29467	2		=			
ANR	29498	Identifier	NULL		29467	0					
ANR	29499	Identifier	NULL		29467	1					
ANR	29500	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	85:12:2366:2402	29467	4	True				
ANR	29501	IdentifierDecl	* element_qname = NULL		29467	0					
ANR	29502	IdentifierDeclType	axutil_qname_t *		29467	0					
ANR	29503	Identifier	element_qname		29467	1					
ANR	29504	AssignmentExpression	* element_qname = NULL		29467	2		=			
ANR	29505	Identifier	NULL		29467	0					
ANR	29506	Identifier	NULL		29467	1					
ANR	29507	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	87:15:2433:2464	29467	5	True				
ANR	29508	IdentifierDecl	* first_node = NULL		29467	0					
ANR	29509	IdentifierDeclType	axiom_node_t *		29467	0					
ANR	29510	Identifier	first_node		29467	1					
ANR	29511	AssignmentExpression	* first_node = NULL		29467	2		=			
ANR	29512	Identifier	NULL		29467	0					
ANR	29513	Identifier	NULL		29467	1					
ANR	29514	IdentifierDeclStatement	bool is_early_node_valid = true ;	88:15:2481:2512	29467	6	True				
ANR	29515	IdentifierDecl	is_early_node_valid = true		29467	0					
ANR	29516	IdentifierDeclType	bool		29467	0					
ANR	29517	Identifier	is_early_node_valid		29467	1					
ANR	29518	AssignmentExpression	is_early_node_valid = true		29467	2		=			
ANR	29519	Identifier	true		29467	0					
ANR	29520	Identifier	true		29467	1					
ANR	29521	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	89:15:2529:2562	29467	7	True				
ANR	29522	IdentifierDecl	* current_node = NULL		29467	0					
ANR	29523	IdentifierDeclType	axiom_node_t *		29467	0					
ANR	29524	Identifier	current_node		29467	1					
ANR	29525	AssignmentExpression	* current_node = NULL		29467	2		=			
ANR	29526	Identifier	NULL		29467	0					
ANR	29527	Identifier	NULL		29467	1					
ANR	29528	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	90:15:2579:2618	29467	8	True				
ANR	29529	IdentifierDecl	* current_element = NULL		29467	0					
ANR	29530	IdentifierDeclType	axiom_element_t *		29467	0					
ANR	29531	Identifier	current_element		29467	1					
ANR	29532	AssignmentExpression	* current_element = NULL		29467	2		=			
ANR	29533	Identifier	NULL		29467	0					
ANR	29534	Identifier	NULL		29467	1					
ANR	29535	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		29467	9					
ANR	29536	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	93:20:2668:2749	29467	0	True				
ANR	29537	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	0		&&			
ANR	29538	Identifier	parent		29467	0					
ANR	29539	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	1		!=			
ANR	29540	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		29467	0					
ANR	29541	Callee	axiom_node_get_node_type		29467	0					
ANR	29542	Identifier	axiom_node_get_node_type		29467	0					
ANR	29543	ArgumentList	parent		29467	1					
ANR	29544	Argument	parent		29467	0					
ANR	29545	Identifier	parent		29467	0					
ANR	29546	Argument	Environment :: getEnv ( )		29467	1					
ANR	29547	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29548	Callee	Environment :: getEnv		29467	0					
ANR	29549	Identifier	Environment :: getEnv		29467	0					
ANR	29550	ArgumentList			29467	1					
ANR	29551	Identifier	AXIOM_ELEMENT		29467	1					
ANR	29552	CompoundStatement		18:14:619:619	29467	1					
ANR	29553	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	95:18:2786:2853	29467	0	True				
ANR	29554	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29555	Identifier	parent		29467	0					
ANR	29556	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		29467	1					
ANR	29557	Callee	axiom_node_get_next_sibling		29467	0					
ANR	29558	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	29559	ArgumentList	parent		29467	1					
ANR	29560	Argument	parent		29467	0					
ANR	29561	Identifier	parent		29467	0					
ANR	29562	Argument	Environment :: getEnv ( )		29467	1					
ANR	29563	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29564	Callee	Environment :: getEnv		29467	0					
ANR	29565	Identifier	Environment :: getEnv		29467	0					
ANR	29566	ArgumentList			29467	1					
ANR	29567	IfStatement	if ( NULL == parent )		29467	10					
ANR	29568	Condition	NULL == parent	97:18:2889:2902	29467	0	True				
ANR	29569	EqualityExpression	NULL == parent		29467	0		==			
ANR	29570	Identifier	NULL		29467	0					
ANR	29571	Identifier	parent		29467	1					
ANR	29572	CompoundStatement		22:14:772:772	29467	1					
ANR	29573	ReturnStatement	return AXIS2_FAILURE ;	99:16:2940:2960	29467	0	True				
ANR	29574	Identifier	AXIS2_FAILURE		29467	0					
ANR	29575	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	103:22:3038:3108	29467	11	True				
ANR	29576	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29577	Identifier	first_node		29467	0					
ANR	29578	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		29467	1					
ANR	29579	Callee	axiom_node_get_first_child		29467	0					
ANR	29580	Identifier	axiom_node_get_first_child		29467	0					
ANR	29581	ArgumentList	parent		29467	1					
ANR	29582	Argument	parent		29467	0					
ANR	29583	Identifier	parent		29467	0					
ANR	29584	Argument	Environment :: getEnv ( )		29467	1					
ANR	29585	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29586	Callee	Environment :: getEnv		29467	0					
ANR	29587	Identifier	Environment :: getEnv		29467	0					
ANR	29588	ArgumentList			29467	1					
ANR	29589	ExpressionStatement	current_node = first_node	114:35:3371:3396	29467	12	True				
ANR	29590	AssignmentExpression	current_node = first_node		29467	0		=			
ANR	29591	Identifier	current_node		29467	0					
ANR	29592	Identifier	first_node		29467	1					
ANR	29593	ExpressionStatement	is_early_node_valid = false	115:35:3433:3460	29467	13	True				
ANR	29594	AssignmentExpression	is_early_node_valid = false		29467	0		=			
ANR	29595	Identifier	is_early_node_valid		29467	0					
ANR	29596	Identifier	false		29467	1					
ANR	29597	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		29467	14					
ANR	29598	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	118:42:3576:3669	29467	0	True				
ANR	29599	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	0		&&			
ANR	29600	Identifier	current_node		29467	0					
ANR	29601	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	1		!=			
ANR	29602	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		29467	0					
ANR	29603	Callee	axiom_node_get_node_type		29467	0					
ANR	29604	Identifier	axiom_node_get_node_type		29467	0					
ANR	29605	ArgumentList	current_node		29467	1					
ANR	29606	Argument	current_node		29467	0					
ANR	29607	Identifier	current_node		29467	0					
ANR	29608	Argument	Environment :: getEnv ( )		29467	1					
ANR	29609	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29610	Callee	Environment :: getEnv		29467	0					
ANR	29611	Identifier	Environment :: getEnv		29467	0					
ANR	29612	ArgumentList			29467	1					
ANR	29613	Identifier	AXIOM_ELEMENT		29467	1					
ANR	29614	CompoundStatement		43:36:1561:1561	29467	1					
ANR	29615	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	120:40:3750:3829	29467	0	True				
ANR	29616	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29617	Identifier	current_node		29467	0					
ANR	29618	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	29619	Callee	axiom_node_get_next_sibling		29467	0					
ANR	29620	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	29621	ArgumentList	current_node		29467	1					
ANR	29622	Argument	current_node		29467	0					
ANR	29623	Identifier	current_node		29467	0					
ANR	29624	Argument	Environment :: getEnv ( )		29467	1					
ANR	29625	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29626	Callee	Environment :: getEnv		29467	0					
ANR	29627	Identifier	Environment :: getEnv		29467	0					
ANR	29628	ArgumentList			29467	1					
ANR	29629	IfStatement	if ( current_node != NULL )		29467	15					
ANR	29630	Condition	current_node != NULL	122:39:3908:3927	29467	0	True				
ANR	29631	EqualityExpression	current_node != NULL		29467	0		!=			
ANR	29632	Identifier	current_node		29467	0					
ANR	29633	Identifier	NULL		29467	1					
ANR	29634	CompoundStatement		47:36:1819:1819	29467	1					
ANR	29635	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	124:40:4008:4109	29467	0	True				
ANR	29636	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29637	Identifier	current_element		29467	0					
ANR	29638	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	29639	CastTarget	axiom_element_t *		29467	0					
ANR	29640	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	29641	Callee	axiom_node_get_data_element		29467	0					
ANR	29642	Identifier	axiom_node_get_data_element		29467	0					
ANR	29643	ArgumentList	current_node		29467	1					
ANR	29644	Argument	current_node		29467	0					
ANR	29645	Identifier	current_node		29467	0					
ANR	29646	Argument	Environment :: getEnv ( )		29467	1					
ANR	29647	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29648	Callee	Environment :: getEnv		29467	0					
ANR	29649	Identifier	Environment :: getEnv		29467	0					
ANR	29650	ArgumentList			29467	1					
ANR	29651	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	125:40:4151:4237	29467	1	True				
ANR	29652	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	0		=			
ANR	29653	Identifier	mqname		29467	0					
ANR	29654	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	1					
ANR	29655	Callee	axiom_element_get_qname		29467	0					
ANR	29656	Identifier	axiom_element_get_qname		29467	0					
ANR	29657	ArgumentList	current_element		29467	1					
ANR	29658	Argument	current_element		29467	0					
ANR	29659	Identifier	current_element		29467	0					
ANR	29660	Argument	Environment :: getEnv ( )		29467	1					
ANR	29661	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29662	Callee	Environment :: getEnv		29467	0					
ANR	29663	Identifier	Environment :: getEnv		29467	0					
ANR	29664	ArgumentList			29467	1					
ANR	29665	Argument	current_node		29467	2					
ANR	29666	Identifier	current_node		29467	0					
ANR	29667	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"	128:33:4346:4422	29467	16	True				
ANR	29668	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"		29467	0		=			
ANR	29669	Identifier	element_qname		29467	0					
ANR	29670	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"		29467	1					
ANR	29671	Callee	axutil_qname_create		29467	0					
ANR	29672	Identifier	axutil_qname_create		29467	0					
ANR	29673	ArgumentList	Environment :: getEnv ( )		29467	1					
ANR	29674	Argument	Environment :: getEnv ( )		29467	0					
ANR	29675	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29676	Callee	Environment :: getEnv		29467	0					
ANR	29677	Identifier	Environment :: getEnv		29467	0					
ANR	29678	ArgumentList			29467	1					
ANR	29679	Argument	"""id"""		29467	1					
ANR	29680	PrimaryExpression	"""id"""		29467	0					
ANR	29681	Argument	NULL		29467	2					
ANR	29682	Identifier	NULL		29467	0					
ANR	29683	Argument	NULL		29467	3					
ANR	29684	Identifier	NULL		29467	0					
ANR	29685	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		29467	17					
ANR	29686	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	131:31:4490:4738	29467	0	True				
ANR	29687	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0		||			
ANR	29688	CallExpression	isParticle ( )		29467	0					
ANR	29689	Callee	isParticle		29467	0					
ANR	29690	Identifier	isParticle		29467	0					
ANR	29691	ArgumentList			29467	1					
ANR	29692	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	29693	Identifier	current_node		29467	0					
ANR	29694	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	29695	Identifier	current_element		29467	0					
ANR	29696	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	29697	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	29698	Callee	axutil_qname_equals		29467	0					
ANR	29699	Identifier	axutil_qname_equals		29467	0					
ANR	29700	ArgumentList	element_qname		29467	1					
ANR	29701	Argument	element_qname		29467	0					
ANR	29702	Identifier	element_qname		29467	0					
ANR	29703	Argument	Environment :: getEnv ( )		29467	1					
ANR	29704	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29705	Callee	Environment :: getEnv		29467	0					
ANR	29706	Identifier	Environment :: getEnv		29467	0					
ANR	29707	ArgumentList			29467	1					
ANR	29708	Argument	mqname		29467	2					
ANR	29709	Identifier	mqname		29467	0					
ANR	29710	UnaryOperationExpression	"! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	29711	UnaryOperator	!		29467	0					
ANR	29712	CallExpression	"axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	29713	Callee	axutil_strcmp		29467	0					
ANR	29714	Identifier	axutil_strcmp		29467	0					
ANR	29715	ArgumentList	"""id"""		29467	1					
ANR	29716	Argument	"""id"""		29467	0					
ANR	29717	PrimaryExpression	"""id"""		29467	0					
ANR	29718	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	29719	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	29720	Callee	axiom_element_get_localname		29467	0					
ANR	29721	Identifier	axiom_element_get_localname		29467	0					
ANR	29722	ArgumentList	current_element		29467	1					
ANR	29723	Argument	current_element		29467	0					
ANR	29724	Identifier	current_element		29467	0					
ANR	29725	Argument	Environment :: getEnv ( )		29467	1					
ANR	29726	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29727	Callee	Environment :: getEnv		29467	0					
ANR	29728	Identifier	Environment :: getEnv		29467	0					
ANR	29729	ArgumentList			29467	1					
ANR	29730	CompoundStatement		63:33:3044:3100	29467	1					
ANR	29731	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0					
ANR	29732	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	134:34:4804:5000	29467	0	True				
ANR	29733	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	0		&&			
ANR	29734	Identifier	current_node		29467	0					
ANR	29735	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	29736	Identifier	current_element		29467	0					
ANR	29737	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	29738	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	29739	Callee	axutil_qname_equals		29467	0					
ANR	29740	Identifier	axutil_qname_equals		29467	0					
ANR	29741	ArgumentList	element_qname		29467	1					
ANR	29742	Argument	element_qname		29467	0					
ANR	29743	Identifier	element_qname		29467	0					
ANR	29744	Argument	Environment :: getEnv ( )		29467	1					
ANR	29745	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29746	Callee	Environment :: getEnv		29467	0					
ANR	29747	Identifier	Environment :: getEnv		29467	0					
ANR	29748	ArgumentList			29467	1					
ANR	29749	Argument	mqname		29467	2					
ANR	29750	Identifier	mqname		29467	0					
ANR	29751	UnaryOperationExpression	"! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	29752	UnaryOperator	!		29467	0					
ANR	29753	CallExpression	"axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	29754	Callee	axutil_strcmp		29467	0					
ANR	29755	Identifier	axutil_strcmp		29467	0					
ANR	29756	ArgumentList	"""id"""		29467	1					
ANR	29757	Argument	"""id"""		29467	0					
ANR	29758	PrimaryExpression	"""id"""		29467	0					
ANR	29759	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	29760	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	29761	Callee	axiom_element_get_localname		29467	0					
ANR	29762	Identifier	axiom_element_get_localname		29467	0					
ANR	29763	ArgumentList	current_element		29467	1					
ANR	29764	Argument	current_element		29467	0					
ANR	29765	Identifier	current_element		29467	0					
ANR	29766	Argument	Environment :: getEnv ( )		29467	1					
ANR	29767	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29768	Callee	Environment :: getEnv		29467	0					
ANR	29769	Identifier	Environment :: getEnv		29467	0					
ANR	29770	ArgumentList			29467	1					
ANR	29771	CompoundStatement		59:30:2886:2886	29467	1					
ANR	29772	ExpressionStatement	is_early_node_valid = true	136:32:5067:5093	29467	0	True				
ANR	29773	AssignmentExpression	is_early_node_valid = true		29467	0		=			
ANR	29774	Identifier	is_early_node_valid		29467	0					
ANR	29775	Identifier	true		29467	1					
ANR	29776	IdentifierDeclStatement	AviaryCommon :: JobID * element = new AviaryCommon :: JobID ( ) ;	139:33:5191:5247	29467	1	True				
ANR	29777	IdentifierDecl	* element = new AviaryCommon :: JobID ( )		29467	0					
ANR	29778	IdentifierDeclType	AviaryCommon :: JobID *		29467	0					
ANR	29779	Identifier	element		29467	1					
ANR	29780	AssignmentExpression	* element = new AviaryCommon :: JobID ( )		29467	2		=			
ANR	29781	Identifier	element		29467	0					
ANR	29782	UnaryExpression	new AviaryCommon :: JobID ( )		29467	1					
ANR	29783	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	141:38:5288:5362	29467	2	True				
ANR	29784	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	0		=			
ANR	29785	Identifier	status		29467	0					
ANR	29786	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	1					
ANR	29787	Callee	element -> deserialize		29467	0					
ANR	29788	PtrMemberAccess	element -> deserialize		29467	0					
ANR	29789	Identifier	element		29467	0					
ANR	29790	Identifier	deserialize		29467	1					
ANR	29791	ArgumentList	& current_node		29467	1					
ANR	29792	Argument	& current_node		29467	0					
ANR	29793	UnaryOperationExpression	& current_node		29467	0					
ANR	29794	UnaryOperator	&		29467	0					
ANR	29795	Identifier	current_node		29467	1					
ANR	29796	Argument	& is_early_node_valid		29467	1					
ANR	29797	UnaryOperationExpression	& is_early_node_valid		29467	0					
ANR	29798	UnaryOperator	&		29467	0					
ANR	29799	Identifier	is_early_node_valid		29467	1					
ANR	29800	Argument	false		29467	2					
ANR	29801	Identifier	false		29467	0					
ANR	29802	IfStatement	if ( AXIS2_FAILURE == status )		29467	3					
ANR	29803	Condition	AXIS2_FAILURE == status	142:41:5405:5427	29467	0	True				
ANR	29804	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	29805	Identifier	AXIS2_FAILURE		29467	0					
ANR	29806	Identifier	status		29467	1					
ANR	29807	CompoundStatement		67:38:3321:3321	29467	1					
ANR	29808	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element id"" )"	144:42:5512:5617	29467	0	True				
ANR	29809	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element id"" )"		29467	0					
ANR	29810	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	29811	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	29812	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	29813	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	29814	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	29815	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29816	Callee	Environment :: getEnv		29467	0					
ANR	29817	Identifier	Environment :: getEnv		29467	0					
ANR	29818	ArgumentList			29467	1					
ANR	29819	Identifier	log		29467	1					
ANR	29820	Argument	WSF_LOG_SI		29467	1					
ANR	29821	Identifier	WSF_LOG_SI		29467	0					
ANR	29822	Argument	"""failed in building adb object for element id"""		29467	2					
ANR	29823	PrimaryExpression	"""failed in building adb object for element id"""		29467	0					
ANR	29824	ElseStatement	else		29467	0					
ANR	29825	CompoundStatement		71:38:3593:3593	29467	0					
ANR	29826	ExpressionStatement	status = setId ( element )	148:42:5784:5807	29467	0	True				
ANR	29827	AssignmentExpression	status = setId ( element )		29467	0		=			
ANR	29828	Identifier	status		29467	0					
ANR	29829	CallExpression	setId ( element )		29467	1					
ANR	29830	Callee	setId		29467	0					
ANR	29831	Identifier	setId		29467	0					
ANR	29832	ArgumentList	element		29467	1					
ANR	29833	Argument	element		29467	0					
ANR	29834	Identifier	element		29467	0					
ANR	29835	IfStatement	if ( AXIS2_FAILURE == status )		29467	4					
ANR	29836	Condition	AXIS2_FAILURE == status	151:36:5922:5945	29467	0	True				
ANR	29837	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	29838	Identifier	AXIS2_FAILURE		29467	0					
ANR	29839	Identifier	status		29467	1					
ANR	29840	CompoundStatement		76:33:3834:3834	29467	1					
ANR	29841	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for id "" )"	153:37:6020:6115	29467	0	True				
ANR	29842	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for id "" )"		29467	0					
ANR	29843	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	29844	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	29845	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	29846	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	29847	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	29848	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29849	Callee	Environment :: getEnv		29467	0					
ANR	29850	Identifier	Environment :: getEnv		29467	0					
ANR	29851	ArgumentList			29467	1					
ANR	29852	Identifier	log		29467	1					
ANR	29853	Argument	WSF_LOG_SI		29467	1					
ANR	29854	Identifier	WSF_LOG_SI		29467	0					
ANR	29855	Argument	"""failed in setting the value for id """		29467	2					
ANR	29856	PrimaryExpression	"""failed in setting the value for id """		29467	0					
ANR	29857	IfStatement	if ( element_qname )		29467	1					
ANR	29858	Condition	element_qname	154:40:6157:6169	29467	0	True				
ANR	29859	Identifier	element_qname		29467	0					
ANR	29860	CompoundStatement		79:37:4062:4062	29467	1					
ANR	29861	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	156:41:6252:6307	29467	0	True				
ANR	29862	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	29863	Callee	axutil_qname_free		29467	0					
ANR	29864	Identifier	axutil_qname_free		29467	0					
ANR	29865	ArgumentList	element_qname		29467	1					
ANR	29866	Argument	element_qname		29467	0					
ANR	29867	Identifier	element_qname		29467	0					
ANR	29868	Argument	Environment :: getEnv ( )		29467	1					
ANR	29869	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29870	Callee	Environment :: getEnv		29467	0					
ANR	29871	Identifier	Environment :: getEnv		29467	0					
ANR	29872	ArgumentList			29467	1					
ANR	29873	ReturnStatement	return AXIS2_FAILURE ;	158:37:6385:6405	29467	2	True				
ANR	29874	Identifier	AXIS2_FAILURE		29467	0					
ANR	29875	ElseStatement	else		29467	0					
ANR	29876	IfStatement	if ( ! dont_care_minoccurs )		29467	0					
ANR	29877	Condition	! dont_care_minoccurs	162:38:6540:6559	29467	0	True				
ANR	29878	UnaryOperationExpression	! dont_care_minoccurs		29467	0					
ANR	29879	UnaryOperator	!		29467	0					
ANR	29880	Identifier	dont_care_minoccurs		29467	1					
ANR	29881	CompoundStatement		87:30:4445:4445	29467	1					
ANR	29882	IfStatement	if ( element_qname )		29467	0					
ANR	29883	Condition	element_qname	164:37:6631:6643	29467	0	True				
ANR	29884	Identifier	element_qname		29467	0					
ANR	29885	CompoundStatement		89:34:4533:4533	29467	1					
ANR	29886	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	166:38:6720:6775	29467	0	True				
ANR	29887	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	29888	Callee	axutil_qname_free		29467	0					
ANR	29889	Identifier	axutil_qname_free		29467	0					
ANR	29890	ArgumentList	element_qname		29467	1					
ANR	29891	Argument	element_qname		29467	0					
ANR	29892	Identifier	element_qname		29467	0					
ANR	29893	Argument	Environment :: getEnv ( )		29467	1					
ANR	29894	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29895	Callee	Environment :: getEnv		29467	0					
ANR	29896	Identifier	Environment :: getEnv		29467	0					
ANR	29897	ArgumentList			29467	1					
ANR	29898	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element id missing"" )"	169:6:6889:6998	29467	1	True				
ANR	29899	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element id missing"" )"		29467	0					
ANR	29900	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	29901	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	29902	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	29903	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	29904	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	29905	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29906	Callee	Environment :: getEnv		29467	0					
ANR	29907	Identifier	Environment :: getEnv		29467	0					
ANR	29908	ArgumentList			29467	1					
ANR	29909	Identifier	log		29467	1					
ANR	29910	Argument	WSF_LOG_SI		29467	1					
ANR	29911	Identifier	WSF_LOG_SI		29467	0					
ANR	29912	Argument	"""non nillable or minOuccrs != 0 element id missing"""		29467	2					
ANR	29913	PrimaryExpression	"""non nillable or minOuccrs != 0 element id missing"""		29467	0					
ANR	29914	ReturnStatement	return AXIS2_FAILURE ;	170:34:7034:7054	29467	2	True				
ANR	29915	Identifier	AXIS2_FAILURE		29467	0					
ANR	29916	IfStatement	if ( element_qname )		29467	18					
ANR	29917	Condition	element_qname	173:21:7137:7149	29467	0	True				
ANR	29918	Identifier	element_qname		29467	0					
ANR	29919	CompoundStatement		98:18:5023:5023	29467	1					
ANR	29920	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	175:21:7193:7248	29467	0	True				
ANR	29921	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	29922	Callee	axutil_qname_free		29467	0					
ANR	29923	Identifier	axutil_qname_free		29467	0					
ANR	29924	ArgumentList	element_qname		29467	1					
ANR	29925	Argument	element_qname		29467	0					
ANR	29926	Identifier	element_qname		29467	0					
ANR	29927	Argument	Environment :: getEnv ( )		29467	1					
ANR	29928	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29929	Callee	Environment :: getEnv		29467	0					
ANR	29930	Identifier	Environment :: getEnv		29467	0					
ANR	29931	ArgumentList			29467	1					
ANR	29932	ExpressionStatement	element_qname = NULL	176:21:7271:7291	29467	1	True				
ANR	29933	AssignmentExpression	element_qname = NULL		29467	0		=			
ANR	29934	Identifier	element_qname		29467	0					
ANR	29935	Identifier	NULL		29467	1					
ANR	29936	IfStatement	if ( current_node != NULL && is_early_node_valid )		29467	19					
ANR	29937	Condition	current_node != NULL && is_early_node_valid	192:38:7789:7831	29467	0	True				
ANR	29938	AndExpression	current_node != NULL && is_early_node_valid		29467	0		&&			
ANR	29939	EqualityExpression	current_node != NULL		29467	0		!=			
ANR	29940	Identifier	current_node		29467	0					
ANR	29941	Identifier	NULL		29467	1					
ANR	29942	Identifier	is_early_node_valid		29467	1					
ANR	29943	CompoundStatement		117:35:5722:5722	29467	1					
ANR	29944	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	194:39:7910:7989	29467	0	True				
ANR	29945	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29946	Identifier	current_node		29467	0					
ANR	29947	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	29948	Callee	axiom_node_get_next_sibling		29467	0					
ANR	29949	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	29950	ArgumentList	current_node		29467	1					
ANR	29951	Argument	current_node		29467	0					
ANR	29952	Identifier	current_node		29467	0					
ANR	29953	Argument	Environment :: getEnv ( )		29467	1					
ANR	29954	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29955	Callee	Environment :: getEnv		29467	0					
ANR	29956	Identifier	Environment :: getEnv		29467	0					
ANR	29957	ArgumentList			29467	1					
ANR	29958	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		29467	1					
ANR	29959	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	197:46:8117:8210	29467	0	True				
ANR	29960	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	0		&&			
ANR	29961	Identifier	current_node		29467	0					
ANR	29962	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	1		!=			
ANR	29963	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		29467	0					
ANR	29964	Callee	axiom_node_get_node_type		29467	0					
ANR	29965	Identifier	axiom_node_get_node_type		29467	0					
ANR	29966	ArgumentList	current_node		29467	1					
ANR	29967	Argument	current_node		29467	0					
ANR	29968	Identifier	current_node		29467	0					
ANR	29969	Argument	Environment :: getEnv ( )		29467	1					
ANR	29970	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29971	Callee	Environment :: getEnv		29467	0					
ANR	29972	Identifier	Environment :: getEnv		29467	0					
ANR	29973	ArgumentList			29467	1					
ANR	29974	Identifier	AXIOM_ELEMENT		29467	1					
ANR	29975	CompoundStatement		122:40:6106:6106	29467	1					
ANR	29976	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	199:44:8299:8378	29467	0	True				
ANR	29977	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29978	Identifier	current_node		29467	0					
ANR	29979	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	29980	Callee	axiom_node_get_next_sibling		29467	0					
ANR	29981	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	29982	ArgumentList	current_node		29467	1					
ANR	29983	Argument	current_node		29467	0					
ANR	29984	Identifier	current_node		29467	0					
ANR	29985	Argument	Environment :: getEnv ( )		29467	1					
ANR	29986	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	29987	Callee	Environment :: getEnv		29467	0					
ANR	29988	Identifier	Environment :: getEnv		29467	0					
ANR	29989	ArgumentList			29467	1					
ANR	29990	IfStatement	if ( current_node != NULL )		29467	2					
ANR	29991	Condition	current_node != NULL	201:43:8465:8484	29467	0	True				
ANR	29992	EqualityExpression	current_node != NULL		29467	0		!=			
ANR	29993	Identifier	current_node		29467	0					
ANR	29994	Identifier	NULL		29467	1					
ANR	29995	CompoundStatement		126:40:6380:6380	29467	1					
ANR	29996	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	203:44:8573:8674	29467	0	True				
ANR	29997	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	29998	Identifier	current_element		29467	0					
ANR	29999	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30000	CastTarget	axiom_element_t *		29467	0					
ANR	30001	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30002	Callee	axiom_node_get_data_element		29467	0					
ANR	30003	Identifier	axiom_node_get_data_element		29467	0					
ANR	30004	ArgumentList	current_node		29467	1					
ANR	30005	Argument	current_node		29467	0					
ANR	30006	Identifier	current_node		29467	0					
ANR	30007	Argument	Environment :: getEnv ( )		29467	1					
ANR	30008	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30009	Callee	Environment :: getEnv		29467	0					
ANR	30010	Identifier	Environment :: getEnv		29467	0					
ANR	30011	ArgumentList			29467	1					
ANR	30012	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	204:44:8720:8806	29467	1	True				
ANR	30013	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	0		=			
ANR	30014	Identifier	mqname		29467	0					
ANR	30015	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	1					
ANR	30016	Callee	axiom_element_get_qname		29467	0					
ANR	30017	Identifier	axiom_element_get_qname		29467	0					
ANR	30018	ArgumentList	current_element		29467	1					
ANR	30019	Argument	current_element		29467	0					
ANR	30020	Identifier	current_element		29467	0					
ANR	30021	Argument	Environment :: getEnv ( )		29467	1					
ANR	30022	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30023	Callee	Environment :: getEnv		29467	0					
ANR	30024	Identifier	Environment :: getEnv		29467	0					
ANR	30025	ArgumentList			29467	1					
ANR	30026	Argument	current_node		29467	2					
ANR	30027	Identifier	current_node		29467	0					
ANR	30028	ExpressionStatement	is_early_node_valid = false	208:35:8962:8989	29467	20	True				
ANR	30029	AssignmentExpression	is_early_node_valid = false		29467	0		=			
ANR	30030	Identifier	is_early_node_valid		29467	0					
ANR	30031	Identifier	false		29467	1					
ANR	30032	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"	210:33:9058:9138	29467	21	True				
ANR	30033	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"		29467	0		=			
ANR	30034	Identifier	element_qname		29467	0					
ANR	30035	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"		29467	1					
ANR	30036	Callee	axutil_qname_create		29467	0					
ANR	30037	Identifier	axutil_qname_create		29467	0					
ANR	30038	ArgumentList	Environment :: getEnv ( )		29467	1					
ANR	30039	Argument	Environment :: getEnv ( )		29467	0					
ANR	30040	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30041	Callee	Environment :: getEnv		29467	0					
ANR	30042	Identifier	Environment :: getEnv		29467	0					
ANR	30043	ArgumentList			29467	1					
ANR	30044	Argument	"""status"""		29467	1					
ANR	30045	PrimaryExpression	"""status"""		29467	0					
ANR	30046	Argument	NULL		29467	2					
ANR	30047	Identifier	NULL		29467	0					
ANR	30048	Argument	NULL		29467	3					
ANR	30049	Identifier	NULL		29467	0					
ANR	30050	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		29467	22					
ANR	30051	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	213:31:9206:9458	29467	0	True				
ANR	30052	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0		||			
ANR	30053	CallExpression	isParticle ( )		29467	0					
ANR	30054	Callee	isParticle		29467	0					
ANR	30055	Identifier	isParticle		29467	0					
ANR	30056	ArgumentList			29467	1					
ANR	30057	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30058	Identifier	current_node		29467	0					
ANR	30059	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30060	Identifier	current_element		29467	0					
ANR	30061	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	30062	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	30063	Callee	axutil_qname_equals		29467	0					
ANR	30064	Identifier	axutil_qname_equals		29467	0					
ANR	30065	ArgumentList	element_qname		29467	1					
ANR	30066	Argument	element_qname		29467	0					
ANR	30067	Identifier	element_qname		29467	0					
ANR	30068	Argument	Environment :: getEnv ( )		29467	1					
ANR	30069	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30070	Callee	Environment :: getEnv		29467	0					
ANR	30071	Identifier	Environment :: getEnv		29467	0					
ANR	30072	ArgumentList			29467	1					
ANR	30073	Argument	mqname		29467	2					
ANR	30074	Identifier	mqname		29467	0					
ANR	30075	UnaryOperationExpression	"! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30076	UnaryOperator	!		29467	0					
ANR	30077	CallExpression	"axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30078	Callee	axutil_strcmp		29467	0					
ANR	30079	Identifier	axutil_strcmp		29467	0					
ANR	30080	ArgumentList	"""status"""		29467	1					
ANR	30081	Argument	"""status"""		29467	0					
ANR	30082	PrimaryExpression	"""status"""		29467	0					
ANR	30083	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	30084	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	30085	Callee	axiom_element_get_localname		29467	0					
ANR	30086	Identifier	axiom_element_get_localname		29467	0					
ANR	30087	ArgumentList	current_element		29467	1					
ANR	30088	Argument	current_element		29467	0					
ANR	30089	Identifier	current_element		29467	0					
ANR	30090	Argument	Environment :: getEnv ( )		29467	1					
ANR	30091	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30092	Callee	Environment :: getEnv		29467	0					
ANR	30093	Identifier	Environment :: getEnv		29467	0					
ANR	30094	ArgumentList			29467	1					
ANR	30095	CompoundStatement		145:33:7768:7826	29467	1					
ANR	30096	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0					
ANR	30097	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	216:34:9524:9724	29467	0	True				
ANR	30098	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	0		&&			
ANR	30099	Identifier	current_node		29467	0					
ANR	30100	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30101	Identifier	current_element		29467	0					
ANR	30102	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	30103	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	30104	Callee	axutil_qname_equals		29467	0					
ANR	30105	Identifier	axutil_qname_equals		29467	0					
ANR	30106	ArgumentList	element_qname		29467	1					
ANR	30107	Argument	element_qname		29467	0					
ANR	30108	Identifier	element_qname		29467	0					
ANR	30109	Argument	Environment :: getEnv ( )		29467	1					
ANR	30110	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30111	Callee	Environment :: getEnv		29467	0					
ANR	30112	Identifier	Environment :: getEnv		29467	0					
ANR	30113	ArgumentList			29467	1					
ANR	30114	Argument	mqname		29467	2					
ANR	30115	Identifier	mqname		29467	0					
ANR	30116	UnaryOperationExpression	"! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30117	UnaryOperator	!		29467	0					
ANR	30118	CallExpression	"axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30119	Callee	axutil_strcmp		29467	0					
ANR	30120	Identifier	axutil_strcmp		29467	0					
ANR	30121	ArgumentList	"""status"""		29467	1					
ANR	30122	Argument	"""status"""		29467	0					
ANR	30123	PrimaryExpression	"""status"""		29467	0					
ANR	30124	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	30125	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	30126	Callee	axiom_element_get_localname		29467	0					
ANR	30127	Identifier	axiom_element_get_localname		29467	0					
ANR	30128	ArgumentList	current_element		29467	1					
ANR	30129	Argument	current_element		29467	0					
ANR	30130	Identifier	current_element		29467	0					
ANR	30131	Argument	Environment :: getEnv ( )		29467	1					
ANR	30132	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30133	Callee	Environment :: getEnv		29467	0					
ANR	30134	Identifier	Environment :: getEnv		29467	0					
ANR	30135	ArgumentList			29467	1					
ANR	30136	CompoundStatement		141:30:7610:7610	29467	1					
ANR	30137	ExpressionStatement	is_early_node_valid = true	218:32:9791:9817	29467	0	True				
ANR	30138	AssignmentExpression	is_early_node_valid = true		29467	0		=			
ANR	30139	Identifier	is_early_node_valid		29467	0					
ANR	30140	Identifier	true		29467	1					
ANR	30141	IdentifierDeclStatement	AviaryCommon :: Status * element = new AviaryCommon :: Status ( ) ;	221:33:9915:9973	29467	1	True				
ANR	30142	IdentifierDecl	* element = new AviaryCommon :: Status ( )		29467	0					
ANR	30143	IdentifierDeclType	AviaryCommon :: Status *		29467	0					
ANR	30144	Identifier	element		29467	1					
ANR	30145	AssignmentExpression	* element = new AviaryCommon :: Status ( )		29467	2		=			
ANR	30146	Identifier	element		29467	0					
ANR	30147	UnaryExpression	new AviaryCommon :: Status ( )		29467	1					
ANR	30148	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	223:38:10014:10088	29467	2	True				
ANR	30149	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	0		=			
ANR	30150	Identifier	status		29467	0					
ANR	30151	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	1					
ANR	30152	Callee	element -> deserialize		29467	0					
ANR	30153	PtrMemberAccess	element -> deserialize		29467	0					
ANR	30154	Identifier	element		29467	0					
ANR	30155	Identifier	deserialize		29467	1					
ANR	30156	ArgumentList	& current_node		29467	1					
ANR	30157	Argument	& current_node		29467	0					
ANR	30158	UnaryOperationExpression	& current_node		29467	0					
ANR	30159	UnaryOperator	&		29467	0					
ANR	30160	Identifier	current_node		29467	1					
ANR	30161	Argument	& is_early_node_valid		29467	1					
ANR	30162	UnaryOperationExpression	& is_early_node_valid		29467	0					
ANR	30163	UnaryOperator	&		29467	0					
ANR	30164	Identifier	is_early_node_valid		29467	1					
ANR	30165	Argument	false		29467	2					
ANR	30166	Identifier	false		29467	0					
ANR	30167	IfStatement	if ( AXIS2_FAILURE == status )		29467	3					
ANR	30168	Condition	AXIS2_FAILURE == status	224:41:10131:10153	29467	0	True				
ANR	30169	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	30170	Identifier	AXIS2_FAILURE		29467	0					
ANR	30171	Identifier	status		29467	1					
ANR	30172	CompoundStatement		149:38:8047:8047	29467	1					
ANR	30173	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element status"" )"	226:42:10238:10347	29467	0	True				
ANR	30174	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element status"" )"		29467	0					
ANR	30175	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	30176	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	30177	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	30178	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	30179	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	30180	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30181	Callee	Environment :: getEnv		29467	0					
ANR	30182	Identifier	Environment :: getEnv		29467	0					
ANR	30183	ArgumentList			29467	1					
ANR	30184	Identifier	log		29467	1					
ANR	30185	Argument	WSF_LOG_SI		29467	1					
ANR	30186	Identifier	WSF_LOG_SI		29467	0					
ANR	30187	Argument	"""failed in building adb object for element status"""		29467	2					
ANR	30188	PrimaryExpression	"""failed in building adb object for element status"""		29467	0					
ANR	30189	ElseStatement	else		29467	0					
ANR	30190	CompoundStatement		153:38:8323:8323	29467	0					
ANR	30191	ExpressionStatement	status = setStatus ( element )	230:42:10514:10541	29467	0	True				
ANR	30192	AssignmentExpression	status = setStatus ( element )		29467	0		=			
ANR	30193	Identifier	status		29467	0					
ANR	30194	CallExpression	setStatus ( element )		29467	1					
ANR	30195	Callee	setStatus		29467	0					
ANR	30196	Identifier	setStatus		29467	0					
ANR	30197	ArgumentList	element		29467	1					
ANR	30198	Argument	element		29467	0					
ANR	30199	Identifier	element		29467	0					
ANR	30200	IfStatement	if ( AXIS2_FAILURE == status )		29467	4					
ANR	30201	Condition	AXIS2_FAILURE == status	233:36:10656:10679	29467	0	True				
ANR	30202	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	30203	Identifier	AXIS2_FAILURE		29467	0					
ANR	30204	Identifier	status		29467	1					
ANR	30205	CompoundStatement		158:33:8568:8568	29467	1					
ANR	30206	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for status "" )"	235:37:10754:10853	29467	0	True				
ANR	30207	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for status "" )"		29467	0					
ANR	30208	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	30209	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	30210	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	30211	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	30212	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	30213	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30214	Callee	Environment :: getEnv		29467	0					
ANR	30215	Identifier	Environment :: getEnv		29467	0					
ANR	30216	ArgumentList			29467	1					
ANR	30217	Identifier	log		29467	1					
ANR	30218	Argument	WSF_LOG_SI		29467	1					
ANR	30219	Identifier	WSF_LOG_SI		29467	0					
ANR	30220	Argument	"""failed in setting the value for status """		29467	2					
ANR	30221	PrimaryExpression	"""failed in setting the value for status """		29467	0					
ANR	30222	IfStatement	if ( element_qname )		29467	1					
ANR	30223	Condition	element_qname	236:40:10895:10907	29467	0	True				
ANR	30224	Identifier	element_qname		29467	0					
ANR	30225	CompoundStatement		161:37:8800:8800	29467	1					
ANR	30226	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	238:41:10990:11045	29467	0	True				
ANR	30227	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	30228	Callee	axutil_qname_free		29467	0					
ANR	30229	Identifier	axutil_qname_free		29467	0					
ANR	30230	ArgumentList	element_qname		29467	1					
ANR	30231	Argument	element_qname		29467	0					
ANR	30232	Identifier	element_qname		29467	0					
ANR	30233	Argument	Environment :: getEnv ( )		29467	1					
ANR	30234	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30235	Callee	Environment :: getEnv		29467	0					
ANR	30236	Identifier	Environment :: getEnv		29467	0					
ANR	30237	ArgumentList			29467	1					
ANR	30238	ReturnStatement	return AXIS2_FAILURE ;	240:37:11123:11143	29467	2	True				
ANR	30239	Identifier	AXIS2_FAILURE		29467	0					
ANR	30240	ElseStatement	else		29467	0					
ANR	30241	IfStatement	if ( ! dont_care_minoccurs )		29467	0					
ANR	30242	Condition	! dont_care_minoccurs	244:38:11278:11297	29467	0	True				
ANR	30243	UnaryOperationExpression	! dont_care_minoccurs		29467	0					
ANR	30244	UnaryOperator	!		29467	0					
ANR	30245	Identifier	dont_care_minoccurs		29467	1					
ANR	30246	CompoundStatement		169:30:9183:9183	29467	1					
ANR	30247	IfStatement	if ( element_qname )		29467	0					
ANR	30248	Condition	element_qname	246:37:11369:11381	29467	0	True				
ANR	30249	Identifier	element_qname		29467	0					
ANR	30250	CompoundStatement		171:34:9271:9271	29467	1					
ANR	30251	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	248:38:11458:11513	29467	0	True				
ANR	30252	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	30253	Callee	axutil_qname_free		29467	0					
ANR	30254	Identifier	axutil_qname_free		29467	0					
ANR	30255	ArgumentList	element_qname		29467	1					
ANR	30256	Argument	element_qname		29467	0					
ANR	30257	Identifier	element_qname		29467	0					
ANR	30258	Argument	Environment :: getEnv ( )		29467	1					
ANR	30259	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30260	Callee	Environment :: getEnv		29467	0					
ANR	30261	Identifier	Environment :: getEnv		29467	0					
ANR	30262	ArgumentList			29467	1					
ANR	30263	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element status missing"" )"	251:6:11627:11740	29467	1	True				
ANR	30264	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element status missing"" )"		29467	0					
ANR	30265	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	30266	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	30267	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	30268	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	30269	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	30270	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30271	Callee	Environment :: getEnv		29467	0					
ANR	30272	Identifier	Environment :: getEnv		29467	0					
ANR	30273	ArgumentList			29467	1					
ANR	30274	Identifier	log		29467	1					
ANR	30275	Argument	WSF_LOG_SI		29467	1					
ANR	30276	Identifier	WSF_LOG_SI		29467	0					
ANR	30277	Argument	"""non nillable or minOuccrs != 0 element status missing"""		29467	2					
ANR	30278	PrimaryExpression	"""non nillable or minOuccrs != 0 element status missing"""		29467	0					
ANR	30279	ReturnStatement	return AXIS2_FAILURE ;	252:34:11776:11796	29467	2	True				
ANR	30280	Identifier	AXIS2_FAILURE		29467	0					
ANR	30281	IfStatement	if ( element_qname )		29467	23					
ANR	30282	Condition	element_qname	255:21:11879:11891	29467	0	True				
ANR	30283	Identifier	element_qname		29467	0					
ANR	30284	CompoundStatement		180:18:9765:9765	29467	1					
ANR	30285	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	257:21:11935:11990	29467	0	True				
ANR	30286	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	30287	Callee	axutil_qname_free		29467	0					
ANR	30288	Identifier	axutil_qname_free		29467	0					
ANR	30289	ArgumentList	element_qname		29467	1					
ANR	30290	Argument	element_qname		29467	0					
ANR	30291	Identifier	element_qname		29467	0					
ANR	30292	Argument	Environment :: getEnv ( )		29467	1					
ANR	30293	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30294	Callee	Environment :: getEnv		29467	0					
ANR	30295	Identifier	Environment :: getEnv		29467	0					
ANR	30296	ArgumentList			29467	1					
ANR	30297	ExpressionStatement	element_qname = NULL	258:21:12013:12033	29467	1	True				
ANR	30298	AssignmentExpression	element_qname = NULL		29467	0		=			
ANR	30299	Identifier	element_qname		29467	0					
ANR	30300	Identifier	NULL		29467	1					
ANR	30301	IfStatement	if ( current_node != NULL && is_early_node_valid )		29467	24					
ANR	30302	Condition	current_node != NULL && is_early_node_valid	274:38:12532:12574	29467	0	True				
ANR	30303	AndExpression	current_node != NULL && is_early_node_valid		29467	0		&&			
ANR	30304	EqualityExpression	current_node != NULL		29467	0		!=			
ANR	30305	Identifier	current_node		29467	0					
ANR	30306	Identifier	NULL		29467	1					
ANR	30307	Identifier	is_early_node_valid		29467	1					
ANR	30308	CompoundStatement		199:35:10465:10465	29467	1					
ANR	30309	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	276:39:12653:12732	29467	0	True				
ANR	30310	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	30311	Identifier	current_node		29467	0					
ANR	30312	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30313	Callee	axiom_node_get_next_sibling		29467	0					
ANR	30314	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	30315	ArgumentList	current_node		29467	1					
ANR	30316	Argument	current_node		29467	0					
ANR	30317	Identifier	current_node		29467	0					
ANR	30318	Argument	Environment :: getEnv ( )		29467	1					
ANR	30319	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30320	Callee	Environment :: getEnv		29467	0					
ANR	30321	Identifier	Environment :: getEnv		29467	0					
ANR	30322	ArgumentList			29467	1					
ANR	30323	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		29467	1					
ANR	30324	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	279:46:12860:12953	29467	0	True				
ANR	30325	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	0		&&			
ANR	30326	Identifier	current_node		29467	0					
ANR	30327	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		29467	1		!=			
ANR	30328	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		29467	0					
ANR	30329	Callee	axiom_node_get_node_type		29467	0					
ANR	30330	Identifier	axiom_node_get_node_type		29467	0					
ANR	30331	ArgumentList	current_node		29467	1					
ANR	30332	Argument	current_node		29467	0					
ANR	30333	Identifier	current_node		29467	0					
ANR	30334	Argument	Environment :: getEnv ( )		29467	1					
ANR	30335	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30336	Callee	Environment :: getEnv		29467	0					
ANR	30337	Identifier	Environment :: getEnv		29467	0					
ANR	30338	ArgumentList			29467	1					
ANR	30339	Identifier	AXIOM_ELEMENT		29467	1					
ANR	30340	CompoundStatement		204:40:10849:10849	29467	1					
ANR	30341	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	281:44:13042:13121	29467	0	True				
ANR	30342	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	30343	Identifier	current_node		29467	0					
ANR	30344	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30345	Callee	axiom_node_get_next_sibling		29467	0					
ANR	30346	Identifier	axiom_node_get_next_sibling		29467	0					
ANR	30347	ArgumentList	current_node		29467	1					
ANR	30348	Argument	current_node		29467	0					
ANR	30349	Identifier	current_node		29467	0					
ANR	30350	Argument	Environment :: getEnv ( )		29467	1					
ANR	30351	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30352	Callee	Environment :: getEnv		29467	0					
ANR	30353	Identifier	Environment :: getEnv		29467	0					
ANR	30354	ArgumentList			29467	1					
ANR	30355	IfStatement	if ( current_node != NULL )		29467	2					
ANR	30356	Condition	current_node != NULL	283:43:13208:13227	29467	0	True				
ANR	30357	EqualityExpression	current_node != NULL		29467	0		!=			
ANR	30358	Identifier	current_node		29467	0					
ANR	30359	Identifier	NULL		29467	1					
ANR	30360	CompoundStatement		208:40:11123:11123	29467	1					
ANR	30361	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	285:44:13316:13417	29467	0	True				
ANR	30362	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	0		=			
ANR	30363	Identifier	current_element		29467	0					
ANR	30364	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30365	CastTarget	axiom_element_t *		29467	0					
ANR	30366	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		29467	1					
ANR	30367	Callee	axiom_node_get_data_element		29467	0					
ANR	30368	Identifier	axiom_node_get_data_element		29467	0					
ANR	30369	ArgumentList	current_node		29467	1					
ANR	30370	Argument	current_node		29467	0					
ANR	30371	Identifier	current_node		29467	0					
ANR	30372	Argument	Environment :: getEnv ( )		29467	1					
ANR	30373	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30374	Callee	Environment :: getEnv		29467	0					
ANR	30375	Identifier	Environment :: getEnv		29467	0					
ANR	30376	ArgumentList			29467	1					
ANR	30377	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	286:44:13463:13549	29467	1	True				
ANR	30378	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	0		=			
ANR	30379	Identifier	mqname		29467	0					
ANR	30380	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		29467	1					
ANR	30381	Callee	axiom_element_get_qname		29467	0					
ANR	30382	Identifier	axiom_element_get_qname		29467	0					
ANR	30383	ArgumentList	current_element		29467	1					
ANR	30384	Argument	current_element		29467	0					
ANR	30385	Identifier	current_element		29467	0					
ANR	30386	Argument	Environment :: getEnv ( )		29467	1					
ANR	30387	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30388	Callee	Environment :: getEnv		29467	0					
ANR	30389	Identifier	Environment :: getEnv		29467	0					
ANR	30390	ArgumentList			29467	1					
ANR	30391	Argument	current_node		29467	2					
ANR	30392	Identifier	current_node		29467	0					
ANR	30393	ExpressionStatement	is_early_node_valid = false	290:35:13705:13732	29467	25	True				
ANR	30394	AssignmentExpression	is_early_node_valid = false		29467	0		=			
ANR	30395	Identifier	is_early_node_valid		29467	0					
ANR	30396	Identifier	false		29467	1					
ANR	30397	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""details"" , NULL , NULL )"	292:33:13801:13882	29467	26	True				
ANR	30398	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""details"" , NULL , NULL )"		29467	0		=			
ANR	30399	Identifier	element_qname		29467	0					
ANR	30400	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""details"" , NULL , NULL )"		29467	1					
ANR	30401	Callee	axutil_qname_create		29467	0					
ANR	30402	Identifier	axutil_qname_create		29467	0					
ANR	30403	ArgumentList	Environment :: getEnv ( )		29467	1					
ANR	30404	Argument	Environment :: getEnv ( )		29467	0					
ANR	30405	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30406	Callee	Environment :: getEnv		29467	0					
ANR	30407	Identifier	Environment :: getEnv		29467	0					
ANR	30408	ArgumentList			29467	1					
ANR	30409	Argument	"""details"""		29467	1					
ANR	30410	PrimaryExpression	"""details"""		29467	0					
ANR	30411	Argument	NULL		29467	2					
ANR	30412	Identifier	NULL		29467	0					
ANR	30413	Argument	NULL		29467	3					
ANR	30414	Identifier	NULL		29467	0					
ANR	30415	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		29467	27					
ANR	30416	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	295:31:13950:14203	29467	0	True				
ANR	30417	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0		||			
ANR	30418	CallExpression	isParticle ( )		29467	0					
ANR	30419	Callee	isParticle		29467	0					
ANR	30420	Identifier	isParticle		29467	0					
ANR	30421	ArgumentList			29467	1					
ANR	30422	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30423	Identifier	current_node		29467	0					
ANR	30424	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30425	Identifier	current_element		29467	0					
ANR	30426	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	30427	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	30428	Callee	axutil_qname_equals		29467	0					
ANR	30429	Identifier	axutil_qname_equals		29467	0					
ANR	30430	ArgumentList	element_qname		29467	1					
ANR	30431	Argument	element_qname		29467	0					
ANR	30432	Identifier	element_qname		29467	0					
ANR	30433	Argument	Environment :: getEnv ( )		29467	1					
ANR	30434	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30435	Callee	Environment :: getEnv		29467	0					
ANR	30436	Identifier	Environment :: getEnv		29467	0					
ANR	30437	ArgumentList			29467	1					
ANR	30438	Argument	mqname		29467	2					
ANR	30439	Identifier	mqname		29467	0					
ANR	30440	UnaryOperationExpression	"! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30441	UnaryOperator	!		29467	0					
ANR	30442	CallExpression	"axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30443	Callee	axutil_strcmp		29467	0					
ANR	30444	Identifier	axutil_strcmp		29467	0					
ANR	30445	ArgumentList	"""details"""		29467	1					
ANR	30446	Argument	"""details"""		29467	0					
ANR	30447	PrimaryExpression	"""details"""		29467	0					
ANR	30448	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	30449	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	30450	Callee	axiom_element_get_localname		29467	0					
ANR	30451	Identifier	axiom_element_get_localname		29467	0					
ANR	30452	ArgumentList	current_element		29467	1					
ANR	30453	Argument	current_element		29467	0					
ANR	30454	Identifier	current_element		29467	0					
ANR	30455	Argument	Environment :: getEnv ( )		29467	1					
ANR	30456	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30457	Callee	Environment :: getEnv		29467	0					
ANR	30458	Identifier	Environment :: getEnv		29467	0					
ANR	30459	ArgumentList			29467	1					
ANR	30460	CompoundStatement		227:33:12514:12580	29467	1					
ANR	30461	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		29467	0					
ANR	30462	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	298:34:14269:14470	29467	0	True				
ANR	30463	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	0		&&			
ANR	30464	Identifier	current_node		29467	0					
ANR	30465	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		29467	1		&&			
ANR	30466	Identifier	current_element		29467	0					
ANR	30467	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1		||			
ANR	30468	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		29467	0					
ANR	30469	Callee	axutil_qname_equals		29467	0					
ANR	30470	Identifier	axutil_qname_equals		29467	0					
ANR	30471	ArgumentList	element_qname		29467	1					
ANR	30472	Argument	element_qname		29467	0					
ANR	30473	Identifier	element_qname		29467	0					
ANR	30474	Argument	Environment :: getEnv ( )		29467	1					
ANR	30475	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30476	Callee	Environment :: getEnv		29467	0					
ANR	30477	Identifier	Environment :: getEnv		29467	0					
ANR	30478	ArgumentList			29467	1					
ANR	30479	Argument	mqname		29467	2					
ANR	30480	Identifier	mqname		29467	0					
ANR	30481	UnaryOperationExpression	"! axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30482	UnaryOperator	!		29467	0					
ANR	30483	CallExpression	"axutil_strcmp ( ""details"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		29467	1					
ANR	30484	Callee	axutil_strcmp		29467	0					
ANR	30485	Identifier	axutil_strcmp		29467	0					
ANR	30486	ArgumentList	"""details"""		29467	1					
ANR	30487	Argument	"""details"""		29467	0					
ANR	30488	PrimaryExpression	"""details"""		29467	0					
ANR	30489	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	1					
ANR	30490	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		29467	0					
ANR	30491	Callee	axiom_element_get_localname		29467	0					
ANR	30492	Identifier	axiom_element_get_localname		29467	0					
ANR	30493	ArgumentList	current_element		29467	1					
ANR	30494	Argument	current_element		29467	0					
ANR	30495	Identifier	current_element		29467	0					
ANR	30496	Argument	Environment :: getEnv ( )		29467	1					
ANR	30497	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30498	Callee	Environment :: getEnv		29467	0					
ANR	30499	Identifier	Environment :: getEnv		29467	0					
ANR	30500	ArgumentList			29467	1					
ANR	30501	CompoundStatement		223:30:12356:12356	29467	1					
ANR	30502	ExpressionStatement	is_early_node_valid = true	300:32:14537:14563	29467	0	True				
ANR	30503	AssignmentExpression	is_early_node_valid = true		29467	0		=			
ANR	30504	Identifier	is_early_node_valid		29467	0					
ANR	30505	Identifier	true		29467	1					
ANR	30506	IdentifierDeclStatement	AviaryCommon :: Attributes * element = new AviaryCommon :: Attributes ( ) ;	303:33:14661:14727	29467	1	True				
ANR	30507	IdentifierDecl	* element = new AviaryCommon :: Attributes ( )		29467	0					
ANR	30508	IdentifierDeclType	AviaryCommon :: Attributes *		29467	0					
ANR	30509	Identifier	element		29467	1					
ANR	30510	AssignmentExpression	* element = new AviaryCommon :: Attributes ( )		29467	2		=			
ANR	30511	Identifier	element		29467	0					
ANR	30512	UnaryExpression	new AviaryCommon :: Attributes ( )		29467	1					
ANR	30513	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	305:38:14768:14842	29467	2	True				
ANR	30514	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	0		=			
ANR	30515	Identifier	status		29467	0					
ANR	30516	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		29467	1					
ANR	30517	Callee	element -> deserialize		29467	0					
ANR	30518	PtrMemberAccess	element -> deserialize		29467	0					
ANR	30519	Identifier	element		29467	0					
ANR	30520	Identifier	deserialize		29467	1					
ANR	30521	ArgumentList	& current_node		29467	1					
ANR	30522	Argument	& current_node		29467	0					
ANR	30523	UnaryOperationExpression	& current_node		29467	0					
ANR	30524	UnaryOperator	&		29467	0					
ANR	30525	Identifier	current_node		29467	1					
ANR	30526	Argument	& is_early_node_valid		29467	1					
ANR	30527	UnaryOperationExpression	& is_early_node_valid		29467	0					
ANR	30528	UnaryOperator	&		29467	0					
ANR	30529	Identifier	is_early_node_valid		29467	1					
ANR	30530	Argument	false		29467	2					
ANR	30531	Identifier	false		29467	0					
ANR	30532	IfStatement	if ( AXIS2_FAILURE == status )		29467	3					
ANR	30533	Condition	AXIS2_FAILURE == status	306:41:14885:14907	29467	0	True				
ANR	30534	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	30535	Identifier	AXIS2_FAILURE		29467	0					
ANR	30536	Identifier	status		29467	1					
ANR	30537	CompoundStatement		231:38:12801:12801	29467	1					
ANR	30538	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element details"" )"	308:42:14992:15102	29467	0	True				
ANR	30539	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element details"" )"		29467	0					
ANR	30540	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	30541	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	30542	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	30543	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	30544	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	30545	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30546	Callee	Environment :: getEnv		29467	0					
ANR	30547	Identifier	Environment :: getEnv		29467	0					
ANR	30548	ArgumentList			29467	1					
ANR	30549	Identifier	log		29467	1					
ANR	30550	Argument	WSF_LOG_SI		29467	1					
ANR	30551	Identifier	WSF_LOG_SI		29467	0					
ANR	30552	Argument	"""failed in building adb object for element details"""		29467	2					
ANR	30553	PrimaryExpression	"""failed in building adb object for element details"""		29467	0					
ANR	30554	ElseStatement	else		29467	0					
ANR	30555	CompoundStatement		235:38:13078:13078	29467	0					
ANR	30556	ExpressionStatement	status = setDetails ( element )	312:42:15269:15297	29467	0	True				
ANR	30557	AssignmentExpression	status = setDetails ( element )		29467	0		=			
ANR	30558	Identifier	status		29467	0					
ANR	30559	CallExpression	setDetails ( element )		29467	1					
ANR	30560	Callee	setDetails		29467	0					
ANR	30561	Identifier	setDetails		29467	0					
ANR	30562	ArgumentList	element		29467	1					
ANR	30563	Argument	element		29467	0					
ANR	30564	Identifier	element		29467	0					
ANR	30565	IfStatement	if ( AXIS2_FAILURE == status )		29467	4					
ANR	30566	Condition	AXIS2_FAILURE == status	315:36:15412:15435	29467	0	True				
ANR	30567	EqualityExpression	AXIS2_FAILURE == status		29467	0		==			
ANR	30568	Identifier	AXIS2_FAILURE		29467	0					
ANR	30569	Identifier	status		29467	1					
ANR	30570	CompoundStatement		240:33:13324:13324	29467	1					
ANR	30571	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for details "" )"	317:37:15510:15610	29467	0	True				
ANR	30572	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for details "" )"		29467	0					
ANR	30573	Callee	WSF_LOG_ERROR_MSG		29467	0					
ANR	30574	Identifier	WSF_LOG_ERROR_MSG		29467	0					
ANR	30575	ArgumentList	Environment :: getEnv ( ) -> log		29467	1					
ANR	30576	Argument	Environment :: getEnv ( ) -> log		29467	0					
ANR	30577	PtrMemberAccess	Environment :: getEnv ( ) -> log		29467	0					
ANR	30578	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30579	Callee	Environment :: getEnv		29467	0					
ANR	30580	Identifier	Environment :: getEnv		29467	0					
ANR	30581	ArgumentList			29467	1					
ANR	30582	Identifier	log		29467	1					
ANR	30583	Argument	WSF_LOG_SI		29467	1					
ANR	30584	Identifier	WSF_LOG_SI		29467	0					
ANR	30585	Argument	"""failed in setting the value for details """		29467	2					
ANR	30586	PrimaryExpression	"""failed in setting the value for details """		29467	0					
ANR	30587	IfStatement	if ( element_qname )		29467	1					
ANR	30588	Condition	element_qname	318:40:15652:15664	29467	0	True				
ANR	30589	Identifier	element_qname		29467	0					
ANR	30590	CompoundStatement		243:37:13557:13557	29467	1					
ANR	30591	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	320:41:15747:15802	29467	0	True				
ANR	30592	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	30593	Callee	axutil_qname_free		29467	0					
ANR	30594	Identifier	axutil_qname_free		29467	0					
ANR	30595	ArgumentList	element_qname		29467	1					
ANR	30596	Argument	element_qname		29467	0					
ANR	30597	Identifier	element_qname		29467	0					
ANR	30598	Argument	Environment :: getEnv ( )		29467	1					
ANR	30599	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30600	Callee	Environment :: getEnv		29467	0					
ANR	30601	Identifier	Environment :: getEnv		29467	0					
ANR	30602	ArgumentList			29467	1					
ANR	30603	ReturnStatement	return AXIS2_FAILURE ;	322:37:15880:15900	29467	2	True				
ANR	30604	Identifier	AXIS2_FAILURE		29467	0					
ANR	30605	IfStatement	if ( element_qname )		29467	28					
ANR	30606	Condition	element_qname	326:21:16018:16030	29467	0	True				
ANR	30607	Identifier	element_qname		29467	0					
ANR	30608	CompoundStatement		251:18:13904:13904	29467	1					
ANR	30609	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	328:21:16074:16129	29467	0	True				
ANR	30610	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		29467	0					
ANR	30611	Callee	axutil_qname_free		29467	0					
ANR	30612	Identifier	axutil_qname_free		29467	0					
ANR	30613	ArgumentList	element_qname		29467	1					
ANR	30614	Argument	element_qname		29467	0					
ANR	30615	Identifier	element_qname		29467	0					
ANR	30616	Argument	Environment :: getEnv ( )		29467	1					
ANR	30617	CallExpression	Environment :: getEnv ( )		29467	0					
ANR	30618	Callee	Environment :: getEnv		29467	0					
ANR	30619	Identifier	Environment :: getEnv		29467	0					
ANR	30620	ArgumentList			29467	1					
ANR	30621	ExpressionStatement	element_qname = NULL	329:21:16152:16172	29467	1	True				
ANR	30622	AssignmentExpression	element_qname = NULL		29467	0		=			
ANR	30623	Identifier	element_qname		29467	0					
ANR	30624	Identifier	NULL		29467	1					
ANR	30625	ReturnStatement	return status ;	332:10:16222:16235	29467	29	True				
ANR	30626	Identifier	status		29467	0					
ANR	30627	ReturnType	bool WSF_CALL		29467	1					
ANR	30628	Identifier	AviaryCommon :: JobDetails :: deserialize		29467	2					
ANR	30629	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		29467	3					
ANR	30630	Parameter	axiom_node_t * * dp_parent	76:46:2057:2080	29467	0	True				
ANR	30631	ParameterType	axiom_node_t * *		29467	0					
ANR	30632	Identifier	dp_parent		29467	1					
ANR	30633	Parameter	bool * dp_is_early_node_valid	76:71:2082:2109	29467	1	True				
ANR	30634	ParameterType	bool *		29467	0					
ANR	30635	Identifier	dp_is_early_node_valid		29467	1					
ANR	30636	Parameter	bool dont_care_minoccurs	76:101:2112:2135	29467	2	True				
ANR	30637	ParameterType	bool		29467	0					
ANR	30638	Identifier	dont_care_minoccurs		29467	1					
ANR	30639	CFGEntryNode	ENTRY		29467		True				
ANR	30640	CFGExitNode	EXIT		29467		True				
ANR	30641	Symbol	parent		29467						
ANR	30642	Symbol	is_early_node_valid		29467						
ANR	30643	Symbol	Environment :: getEnv		29467						
ANR	30644	Symbol	mqname		29467						
ANR	30645	Symbol	current_node		29467						
ANR	30646	Symbol	axiom_element_get_qname		29467						
ANR	30647	Symbol	isParticle		29467						
ANR	30648	Symbol	* element		29467						
ANR	30649	Symbol	element_qname		29467						
ANR	30650	Symbol	axutil_qname_create		29467						
ANR	30651	Symbol	* dp_parent		29467						
ANR	30652	Symbol	AXIS2_FAILURE		29467						
ANR	30653	Symbol	axiom_node_get_data_element		29467						
ANR	30654	Symbol	dont_care_minoccurs		29467						
ANR	30655	Symbol	dp_is_early_node_valid		29467						
ANR	30656	Symbol	WSF_LOG_SI		29467						
ANR	30657	Symbol	& current_node		29467						
ANR	30658	Symbol	first_node		29467						
ANR	30659	Symbol	& is_early_node_valid		29467						
ANR	30660	Symbol	setDetails		29467						
ANR	30661	Symbol	setId		29467						
ANR	30662	Symbol	AXIS2_SUCCESS		29467						
ANR	30663	Symbol	current_element		29467						
ANR	30664	Symbol	element		29467						
ANR	30665	Symbol	NULL		29467						
ANR	30666	Symbol	dp_parent		29467						
ANR	30667	Symbol	AXIOM_ELEMENT		29467						
ANR	30668	Symbol	false		29467						
ANR	30669	Symbol	axiom_node_get_node_type		29467						
ANR	30670	Symbol	axiom_element_get_localname		29467						
ANR	30671	Symbol	Environment :: getEnv ( ) -> log		29467						
ANR	30672	Symbol	setStatus		29467						
ANR	30673	Symbol	text_value		29467						
ANR	30674	Symbol	axiom_node_get_next_sibling		29467						
ANR	30675	Symbol	axiom_node_get_first_child		29467						
ANR	30676	Symbol	axutil_strcmp		29467						
ANR	30677	Symbol	* Environment :: getEnv		29467						
ANR	30678	Symbol	true		29467						
ANR	30679	Symbol	axutil_qname_equals		29467						
ANR	30680	Symbol	element -> deserialize		29467						
ANR	30681	Symbol	status		29467						
ANR	30682	Function	AviaryCommon :: JobDetails :: isParticle	335:10:16257:16401							
ANR	30683	FunctionDef	AviaryCommon :: JobDetails :: isParticle ()		30682	0					
ANR	30684	CompoundStatement		337:10:16330:16401	30682	0					
ANR	30685	ReturnStatement	return false ;	339:17:16362:16374	30682	0	True				
ANR	30686	Identifier	false		30682	0					
ANR	30687	ReturnType	bool WSF_CALL		30682	1					
ANR	30688	Identifier	AviaryCommon :: JobDetails :: isParticle		30682	2					
ANR	30689	ParameterList			30682	3					
ANR	30690	CFGEntryNode	ENTRY		30682		True				
ANR	30691	CFGExitNode	EXIT		30682		True				
ANR	30692	Symbol	false		30682						
ANR	30693	Function	AviaryCommon :: JobDetails :: declareParentNamespaces	344:10:16415:16738							
ANR	30694	FunctionDef	"AviaryCommon :: JobDetails :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		30693	0					
ANR	30695	CompoundStatement		348:10:16620:16738	30693	0					
ANR	30696	ReturnType	void WSF_CALL		30693	1					
ANR	30697	Identifier	AviaryCommon :: JobDetails :: declareParentNamespaces		30693	2					
ANR	30698	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		30693	3					
ANR	30699	Parameter	axiom_element_t * parent_element	346:20:16510:16540	30693	0	True				
ANR	30700	ParameterType	axiom_element_t *		30693	0					
ANR	30701	Identifier	parent_element		30693	1					
ANR	30702	Parameter	axutil_hash_t * namespaces	347:20:16563:16587	30693	1	True				
ANR	30703	ParameterType	axutil_hash_t *		30693	0					
ANR	30704	Identifier	namespaces		30693	1					
ANR	30705	Parameter	int * next_ns_index	347:47:16590:16607	30693	2	True				
ANR	30706	ParameterType	int *		30693	0					
ANR	30707	Identifier	next_ns_index		30693	1					
ANR	30708	CFGEntryNode	ENTRY		30693		True				
ANR	30709	CFGExitNode	EXIT		30693		True				
ANR	30710	Symbol	parent_element		30693						
ANR	30711	Symbol	next_ns_index		30693						
ANR	30712	Symbol	namespaces		30693						
ANR	30713	Function	AviaryCommon :: JobDetails :: serialize	356:22:16781:27537							
ANR	30714	FunctionDef	"AviaryCommon :: JobDetails :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		30713	0					
ANR	30715	CompoundStatement		362:8:16976:27537	30713	0					
ANR	30716	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	365:13:17017:17047	30713	0	True				
ANR	30717	IdentifierDecl	* string_to_stream		30713	0					
ANR	30718	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30719	Identifier	string_to_stream		30713	1					
ANR	30720	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	368:9:17081:17114	30713	1	True				
ANR	30721	IdentifierDecl	* current_node = NULL		30713	0					
ANR	30722	IdentifierDeclType	axiom_node_t *		30713	0					
ANR	30723	Identifier	current_node		30713	1					
ANR	30724	AssignmentExpression	* current_node = NULL		30713	2		=			
ANR	30725	Identifier	NULL		30713	0					
ANR	30726	Identifier	NULL		30713	1					
ANR	30727	IdentifierDeclStatement	int tag_closed = 0 ;	369:9:17125:17143	30713	2	True				
ANR	30728	IdentifierDecl	tag_closed = 0		30713	0					
ANR	30729	IdentifierDeclType	int		30713	0					
ANR	30730	Identifier	tag_closed		30713	1					
ANR	30731	AssignmentExpression	tag_closed = 0		30713	2		=			
ANR	30732	Identifier	tag_closed		30713	0					
ANR	30733	PrimaryExpression	0		30713	1					
ANR	30734	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	373:16:17182:17211	30713	3	True				
ANR	30735	IdentifierDecl	* ns1 = NULL		30713	0					
ANR	30736	IdentifierDeclType	axiom_namespace_t *		30713	0					
ANR	30737	Identifier	ns1		30713	1					
ANR	30738	AssignmentExpression	* ns1 = NULL		30713	2		=			
ANR	30739	Identifier	NULL		30713	0					
ANR	30740	Identifier	NULL		30713	1					
ANR	30741	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	375:16:17230:17260	30713	4	True				
ANR	30742	IdentifierDecl	* qname_uri = NULL		30713	0					
ANR	30743	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30744	Identifier	qname_uri		30713	1					
ANR	30745	AssignmentExpression	* qname_uri = NULL		30713	2		=			
ANR	30746	Identifier	NULL		30713	0					
ANR	30747	Identifier	NULL		30713	1					
ANR	30748	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	376:16:17278:17311	30713	5	True				
ANR	30749	IdentifierDecl	* qname_prefix = NULL		30713	0					
ANR	30750	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30751	Identifier	qname_prefix		30713	1					
ANR	30752	AssignmentExpression	* qname_prefix = NULL		30713	2		=			
ANR	30753	Identifier	NULL		30713	0					
ANR	30754	Identifier	NULL		30713	1					
ANR	30755	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	377:16:17329:17358	30713	6	True				
ANR	30756	IdentifierDecl	* p_prefix = NULL		30713	0					
ANR	30757	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30758	Identifier	p_prefix		30713	1					
ANR	30759	AssignmentExpression	* p_prefix = NULL		30713	2		=			
ANR	30760	Identifier	NULL		30713	0					
ANR	30761	Identifier	NULL		30713	1					
ANR	30762	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	379:20:17393:17443	30713	7	True				
ANR	30763	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30764	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30765	Identifier	text_value_1		30713	1					
ANR	30766	Identifier	ADB_DEFAULT_DIGIT_LIMIT		30713	2					
ANR	30767	IdentifierDeclStatement	axis2_char_t text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	381:20:17486:17536	30713	8	True				
ANR	30768	IdentifierDecl	text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30769	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30770	Identifier	text_value_2		30713	1					
ANR	30771	Identifier	ADB_DEFAULT_DIGIT_LIMIT		30713	2					
ANR	30772	IdentifierDeclStatement	axis2_char_t text_value_3 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	383:20:17579:17629	30713	9	True				
ANR	30773	IdentifierDecl	text_value_3 [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30774	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		30713	0					
ANR	30775	Identifier	text_value_3		30713	1					
ANR	30776	Identifier	ADB_DEFAULT_DIGIT_LIMIT		30713	2					
ANR	30777	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	385:15:17667:17703	30713	10	True				
ANR	30778	IdentifierDecl	* start_input_str = NULL		30713	0					
ANR	30779	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30780	Identifier	start_input_str		30713	1					
ANR	30781	AssignmentExpression	* start_input_str = NULL		30713	2		=			
ANR	30782	Identifier	NULL		30713	0					
ANR	30783	Identifier	NULL		30713	1					
ANR	30784	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	386:15:17720:17754	30713	11	True				
ANR	30785	IdentifierDecl	* end_input_str = NULL		30713	0					
ANR	30786	IdentifierDeclType	axis2_char_t *		30713	0					
ANR	30787	Identifier	end_input_str		30713	1					
ANR	30788	AssignmentExpression	* end_input_str = NULL		30713	2		=			
ANR	30789	Identifier	NULL		30713	0					
ANR	30790	Identifier	NULL		30713	1					
ANR	30791	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	387:15:17771:17807	30713	12	True				
ANR	30792	IdentifierDecl	start_input_str_len = 0		30713	0					
ANR	30793	IdentifierDeclType	unsigned int		30713	0					
ANR	30794	Identifier	start_input_str_len		30713	1					
ANR	30795	AssignmentExpression	start_input_str_len = 0		30713	2		=			
ANR	30796	Identifier	start_input_str_len		30713	0					
ANR	30797	PrimaryExpression	0		30713	1					
ANR	30798	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	388:15:17824:17858	30713	13	True				
ANR	30799	IdentifierDecl	end_input_str_len = 0		30713	0					
ANR	30800	IdentifierDeclType	unsigned int		30713	0					
ANR	30801	Identifier	end_input_str_len		30713	1					
ANR	30802	AssignmentExpression	end_input_str_len = 0		30713	2		=			
ANR	30803	Identifier	end_input_str_len		30713	0					
ANR	30804	PrimaryExpression	0		30713	1					
ANR	30805	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	391:15:17901:17940	30713	14	True				
ANR	30806	IdentifierDecl	* data_source = NULL		30713	0					
ANR	30807	IdentifierDeclType	axiom_data_source_t *		30713	0					
ANR	30808	Identifier	data_source		30713	1					
ANR	30809	AssignmentExpression	* data_source = NULL		30713	2		=			
ANR	30810	Identifier	NULL		30713	0					
ANR	30811	Identifier	NULL		30713	1					
ANR	30812	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	392:15:17957:17987	30713	15	True				
ANR	30813	IdentifierDecl	* stream = NULL		30713	0					
ANR	30814	IdentifierDeclType	axutil_stream_t *		30713	0					
ANR	30815	Identifier	stream		30713	1					
ANR	30816	AssignmentExpression	* stream = NULL		30713	2		=			
ANR	30817	Identifier	NULL		30713	0					
ANR	30818	Identifier	NULL		30713	1					
ANR	30819	ExpressionStatement	current_node = parent	395:20:18023:18044	30713	16	True				
ANR	30820	AssignmentExpression	current_node = parent		30713	0		=			
ANR	30821	Identifier	current_node		30713	0					
ANR	30822	Identifier	parent		30713	1					
ANR	30823	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	396:20:18066:18167	30713	17	True				
ANR	30824	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		30713	0		=			
ANR	30825	Identifier	data_source		30713	0					
ANR	30826	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		30713	1					
ANR	30827	CastTarget	axiom_data_source_t *		30713	0					
ANR	30828	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		30713	1					
ANR	30829	Callee	axiom_node_get_data_element		30713	0					
ANR	30830	Identifier	axiom_node_get_data_element		30713	0					
ANR	30831	ArgumentList	current_node		30713	1					
ANR	30832	Argument	current_node		30713	0					
ANR	30833	Identifier	current_node		30713	0					
ANR	30834	Argument	Environment :: getEnv ( )		30713	1					
ANR	30835	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30836	Callee	Environment :: getEnv		30713	0					
ANR	30837	Identifier	Environment :: getEnv		30713	0					
ANR	30838	ArgumentList			30713	1					
ANR	30839	IfStatement	if ( ! data_source )		30713	18					
ANR	30840	Condition	! data_source	397:24:18193:18204	30713	0	True				
ANR	30841	UnaryOperationExpression	! data_source		30713	0					
ANR	30842	UnaryOperator	!		30713	0					
ANR	30843	Identifier	data_source		30713	1					
ANR	30844	ReturnStatement	return NULL ;	398:24:18231:18242	30713	1	True				
ANR	30845	Identifier	NULL		30713	0					
ANR	30846	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	399:20:18264:18337	30713	19	True				
ANR	30847	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		30713	0		=			
ANR	30848	Identifier	stream		30713	0					
ANR	30849	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		30713	1					
ANR	30850	Callee	axiom_data_source_get_stream		30713	0					
ANR	30851	Identifier	axiom_data_source_get_stream		30713	0					
ANR	30852	ArgumentList	data_source		30713	1					
ANR	30853	Argument	data_source		30713	0					
ANR	30854	Identifier	data_source		30713	0					
ANR	30855	Argument	Environment :: getEnv ( )		30713	1					
ANR	30856	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30857	Callee	Environment :: getEnv		30713	0					
ANR	30858	Identifier	Environment :: getEnv		30713	0					
ANR	30859	ArgumentList			30713	1					
ANR	30860	IfStatement	if ( ! stream )		30713	20					
ANR	30861	Condition	! stream	400:24:18406:18412	30713	0	True				
ANR	30862	UnaryOperationExpression	! stream		30713	0					
ANR	30863	UnaryOperator	!		30713	0					
ANR	30864	Identifier	stream		30713	1					
ANR	30865	ReturnStatement	return NULL ;	401:24:18439:18450	30713	1	True				
ANR	30866	Identifier	NULL		30713	0					
ANR	30867	IfStatement	if ( ! parent_tag_closed )		30713	21					
ANR	30868	Condition	! parent_tag_closed	403:15:18486:18503	30713	0	True				
ANR	30869	UnaryOperationExpression	! parent_tag_closed		30713	0					
ANR	30870	UnaryOperator	!		30713	0					
ANR	30871	Identifier	parent_tag_closed		30713	1					
ANR	30872	CompoundStatement		43:12:1541:1541	30713	1					
ANR	30873	ExpressionStatement	"string_to_stream = "">"""	406:14:18547:18569	30713	0	True				
ANR	30874	AssignmentExpression	"string_to_stream = "">"""		30713	0		=			
ANR	30875	Identifier	string_to_stream		30713	0					
ANR	30876	PrimaryExpression	""">"""		30713	1					
ANR	30877	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	407:14:18586:18687	30713	1	True				
ANR	30878	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		30713	0					
ANR	30879	Callee	axutil_stream_write		30713	0					
ANR	30880	Identifier	axutil_stream_write		30713	0					
ANR	30881	ArgumentList	stream		30713	1					
ANR	30882	Argument	stream		30713	0					
ANR	30883	Identifier	stream		30713	0					
ANR	30884	Argument	Environment :: getEnv ( )		30713	1					
ANR	30885	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30886	Callee	Environment :: getEnv		30713	0					
ANR	30887	Identifier	Environment :: getEnv		30713	0					
ANR	30888	ArgumentList			30713	1					
ANR	30889	Argument	string_to_stream		30713	2					
ANR	30890	Identifier	string_to_stream		30713	0					
ANR	30891	Argument	axutil_strlen ( string_to_stream )		30713	3					
ANR	30892	CallExpression	axutil_strlen ( string_to_stream )		30713	0					
ANR	30893	Callee	axutil_strlen		30713	0					
ANR	30894	Identifier	axutil_strlen		30713	0					
ANR	30895	ArgumentList	string_to_stream		30713	1					
ANR	30896	Argument	string_to_stream		30713	0					
ANR	30897	Identifier	string_to_stream		30713	0					
ANR	30898	ExpressionStatement	tag_closed = 1	408:14:18703:18717	30713	2	True				
ANR	30899	AssignmentExpression	tag_closed = 1		30713	0		=			
ANR	30900	Identifier	tag_closed		30713	0					
ANR	30901	PrimaryExpression	1		30713	1					
ANR	30902	ExpressionStatement	p_prefix = NULL	412:23:18782:18797	30713	22	True				
ANR	30903	AssignmentExpression	p_prefix = NULL		30713	0		=			
ANR	30904	Identifier	p_prefix		30713	0					
ANR	30905	Identifier	NULL		30713	1					
ANR	30906	IfStatement	if ( ! isValidId )		30713	23					
ANR	30907	Condition	! isValidId	415:23:18846:18855	30713	0	True				
ANR	30908	UnaryOperationExpression	! isValidId		30713	0					
ANR	30909	UnaryOperator	!		30713	0					
ANR	30910	Identifier	isValidId		30713	1					
ANR	30911	CompoundStatement		55:19:1900:1900	30713	1					
ANR	30912	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property id"" )"	419:28:18959:19062	30713	0	True				
ANR	30913	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property id"" )"		30713	0					
ANR	30914	Callee	WSF_LOG_ERROR_MSG		30713	0					
ANR	30915	Identifier	WSF_LOG_ERROR_MSG		30713	0					
ANR	30916	ArgumentList	Environment :: getEnv ( ) -> log		30713	1					
ANR	30917	Argument	Environment :: getEnv ( ) -> log		30713	0					
ANR	30918	PtrMemberAccess	Environment :: getEnv ( ) -> log		30713	0					
ANR	30919	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30920	Callee	Environment :: getEnv		30713	0					
ANR	30921	Identifier	Environment :: getEnv		30713	0					
ANR	30922	ArgumentList			30713	1					
ANR	30923	Identifier	log		30713	1					
ANR	30924	Argument	WSF_LOG_SI		30713	1					
ANR	30925	Identifier	WSF_LOG_SI		30713	0					
ANR	30926	Argument	"""Nil value found in non-nillable property id"""		30713	2					
ANR	30927	PrimaryExpression	"""Nil value found in non-nillable property id"""		30713	0					
ANR	30928	ReturnStatement	return NULL ;	420:28:19092:19103	30713	1	True				
ANR	30929	Identifier	NULL		30713	0					
ANR	30930	ElseStatement	else		30713	0					
ANR	30931	CompoundStatement		63:19:2219:2219	30713	0					
ANR	30932	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"	425:21:19219:19442	30713	0	True				
ANR	30933	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	0		=			
ANR	30934	Identifier	start_input_str		30713	0					
ANR	30935	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	1					
ANR	30936	CastTarget	axis2_char_t *		30713	0					
ANR	30937	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	1					
ANR	30938	Callee	AXIS2_MALLOC		30713	0					
ANR	30939	Identifier	AXIS2_MALLOC		30713	0					
ANR	30940	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	30941	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	30942	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	30943	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30944	Callee	Environment :: getEnv		30713	0					
ANR	30945	Identifier	Environment :: getEnv		30713	0					
ANR	30946	ArgumentList			30713	1					
ANR	30947	Identifier	allocator		30713	1					
ANR	30948	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		30713	1					
ANR	30949	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		30713	0		*			
ANR	30950	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	30951	Sizeof	sizeof		30713	0					
ANR	30952	SizeofOperand	axis2_char_t		30713	1					
ANR	30953	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		30713	1		+			
ANR	30954	PrimaryExpression	4		30713	0					
ANR	30955	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		30713	1		+			
ANR	30956	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	30957	Callee	axutil_strlen		30713	0					
ANR	30958	Identifier	axutil_strlen		30713	0					
ANR	30959	ArgumentList	p_prefix		30713	1					
ANR	30960	Argument	p_prefix		30713	0					
ANR	30961	Identifier	p_prefix		30713	0					
ANR	30962	CallExpression	"axutil_strlen ( ""id"" )"		30713	1					
ANR	30963	Callee	axutil_strlen		30713	0					
ANR	30964	Identifier	axutil_strlen		30713	0					
ANR	30965	ArgumentList	"""id"""		30713	1					
ANR	30966	Argument	"""id"""		30713	0					
ANR	30967	PrimaryExpression	"""id"""		30713	0					
ANR	30968	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"	430:21:19568:19754	30713	1	True				
ANR	30969	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	0		=			
ANR	30970	Identifier	end_input_str		30713	0					
ANR	30971	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	1					
ANR	30972	CastTarget	axis2_char_t *		30713	0					
ANR	30973	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		30713	1					
ANR	30974	Callee	AXIS2_MALLOC		30713	0					
ANR	30975	Identifier	AXIS2_MALLOC		30713	0					
ANR	30976	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	30977	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	30978	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	30979	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	30980	Callee	Environment :: getEnv		30713	0					
ANR	30981	Identifier	Environment :: getEnv		30713	0					
ANR	30982	ArgumentList			30713	1					
ANR	30983	Identifier	allocator		30713	1					
ANR	30984	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		30713	1					
ANR	30985	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		30713	0		*			
ANR	30986	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	30987	Sizeof	sizeof		30713	0					
ANR	30988	SizeofOperand	axis2_char_t		30713	1					
ANR	30989	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		30713	1		+			
ANR	30990	PrimaryExpression	5		30713	0					
ANR	30991	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		30713	1		+			
ANR	30992	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	30993	Callee	axutil_strlen		30713	0					
ANR	30994	Identifier	axutil_strlen		30713	0					
ANR	30995	ArgumentList	p_prefix		30713	1					
ANR	30996	Argument	p_prefix		30713	0					
ANR	30997	Identifier	p_prefix		30713	0					
ANR	30998	CallExpression	"axutil_strlen ( ""id"" )"		30713	1					
ANR	30999	Callee	axutil_strlen		30713	0					
ANR	31000	Identifier	axutil_strlen		30713	0					
ANR	31001	ArgumentList	"""id"""		30713	1					
ANR	31002	Argument	"""id"""		30713	0					
ANR	31003	PrimaryExpression	"""id"""		30713	0					
ANR	31004	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sid"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	445:28:20109:20282	30713	2	True				
ANR	31005	CallExpression	"sprintf ( start_input_str , ""<%s%sid"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31006	Callee	sprintf		30713	0					
ANR	31007	Identifier	sprintf		30713	0					
ANR	31008	ArgumentList	start_input_str		30713	1					
ANR	31009	Argument	start_input_str		30713	0					
ANR	31010	Identifier	start_input_str		30713	0					
ANR	31011	Argument	"""<%s%sid"""		30713	1					
ANR	31012	PrimaryExpression	"""<%s%sid"""		30713	0					
ANR	31013	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31014	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31015	Condition	p_prefix		30713	0					
ANR	31016	Identifier	p_prefix		30713	0					
ANR	31017	Identifier	p_prefix		30713	1					
ANR	31018	PrimaryExpression	""""""		30713	2					
ANR	31019	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31020	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31021	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31022	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31023	Identifier	p_prefix		30713	0					
ANR	31024	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31025	Callee	axutil_strcmp		30713	0					
ANR	31026	Identifier	axutil_strcmp		30713	0					
ANR	31027	ArgumentList	p_prefix		30713	1					
ANR	31028	Argument	p_prefix		30713	0					
ANR	31029	Identifier	p_prefix		30713	0					
ANR	31030	Argument	""""""		30713	1					
ANR	31031	PrimaryExpression	""""""		30713	0					
ANR	31032	PrimaryExpression	""":"""		30713	1					
ANR	31033	PrimaryExpression	""""""		30713	2					
ANR	31034	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	449:24:20338:20390	30713	3	True				
ANR	31035	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		30713	0		=			
ANR	31036	Identifier	start_input_str_len		30713	0					
ANR	31037	CallExpression	axutil_strlen ( start_input_str )		30713	1					
ANR	31038	Callee	axutil_strlen		30713	0					
ANR	31039	Identifier	axutil_strlen		30713	0					
ANR	31040	ArgumentList	start_input_str		30713	1					
ANR	31041	Argument	start_input_str		30713	0					
ANR	31042	Identifier	start_input_str		30713	0					
ANR	31043	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sid>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	450:24:20416:20589	30713	4	True				
ANR	31044	CallExpression	"sprintf ( end_input_str , ""</%s%sid>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31045	Callee	sprintf		30713	0					
ANR	31046	Identifier	sprintf		30713	0					
ANR	31047	ArgumentList	end_input_str		30713	1					
ANR	31048	Argument	end_input_str		30713	0					
ANR	31049	Identifier	end_input_str		30713	0					
ANR	31050	Argument	"""</%s%sid>"""		30713	1					
ANR	31051	PrimaryExpression	"""</%s%sid>"""		30713	0					
ANR	31052	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31053	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31054	Condition	p_prefix		30713	0					
ANR	31055	Identifier	p_prefix		30713	0					
ANR	31056	Identifier	p_prefix		30713	1					
ANR	31057	PrimaryExpression	""""""		30713	2					
ANR	31058	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31059	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31060	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31061	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31062	Identifier	p_prefix		30713	0					
ANR	31063	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31064	Callee	axutil_strcmp		30713	0					
ANR	31065	Identifier	axutil_strcmp		30713	0					
ANR	31066	ArgumentList	p_prefix		30713	1					
ANR	31067	Argument	p_prefix		30713	0					
ANR	31068	Identifier	p_prefix		30713	0					
ANR	31069	Argument	""""""		30713	1					
ANR	31070	PrimaryExpression	""""""		30713	0					
ANR	31071	PrimaryExpression	""":"""		30713	1					
ANR	31072	PrimaryExpression	""""""		30713	2					
ANR	31073	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	453:24:20615:20663	30713	5	True				
ANR	31074	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		30713	0		=			
ANR	31075	Identifier	end_input_str_len		30713	0					
ANR	31076	CallExpression	axutil_strlen ( end_input_str )		30713	1					
ANR	31077	Callee	axutil_strlen		30713	0					
ANR	31078	Identifier	axutil_strlen		30713	0					
ANR	31079	ArgumentList	end_input_str		30713	1					
ANR	31080	Argument	end_input_str		30713	0					
ANR	31081	Identifier	end_input_str		30713	0					
ANR	31082	IfStatement	if ( ! property_Id -> isParticle ( ) )		30713	6					
ANR	31083	Condition	! property_Id -> isParticle ( )	455:31:20718:20743	30713	0	True				
ANR	31084	UnaryOperationExpression	! property_Id -> isParticle ( )		30713	0					
ANR	31085	UnaryOperator	!		30713	0					
ANR	31086	CallExpression	property_Id -> isParticle ( )		30713	1					
ANR	31087	Callee	property_Id -> isParticle		30713	0					
ANR	31088	PtrMemberAccess	property_Id -> isParticle		30713	0					
ANR	31089	Identifier	property_Id		30713	0					
ANR	31090	Identifier	isParticle		30713	1					
ANR	31091	ArgumentList			30713	1					
ANR	31092	CompoundStatement		95:28:3797:3797	30713	1					
ANR	31093	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	457:32:20808:20896	30713	0	True				
ANR	31094	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		30713	0					
ANR	31095	Callee	axutil_stream_write		30713	0					
ANR	31096	Identifier	axutil_stream_write		30713	0					
ANR	31097	ArgumentList	stream		30713	1					
ANR	31098	Argument	stream		30713	0					
ANR	31099	Identifier	stream		30713	0					
ANR	31100	Argument	Environment :: getEnv ( )		30713	1					
ANR	31101	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31102	Callee	Environment :: getEnv		30713	0					
ANR	31103	Identifier	Environment :: getEnv		30713	0					
ANR	31104	ArgumentList			30713	1					
ANR	31105	Argument	start_input_str		30713	2					
ANR	31106	Identifier	start_input_str		30713	0					
ANR	31107	Argument	start_input_str_len		30713	3					
ANR	31108	Identifier	start_input_str_len		30713	0					
ANR	31109	ExpressionStatement	"property_Id -> serialize ( current_node , parent_element , property_Id -> isParticle ( ) || false , namespaces , next_ns_index )"	459:28:20956:21152	30713	7	True				
ANR	31110	CallExpression	"property_Id -> serialize ( current_node , parent_element , property_Id -> isParticle ( ) || false , namespaces , next_ns_index )"		30713	0					
ANR	31111	Callee	property_Id -> serialize		30713	0					
ANR	31112	PtrMemberAccess	property_Id -> serialize		30713	0					
ANR	31113	Identifier	property_Id		30713	0					
ANR	31114	Identifier	serialize		30713	1					
ANR	31115	ArgumentList	current_node		30713	1					
ANR	31116	Argument	current_node		30713	0					
ANR	31117	Identifier	current_node		30713	0					
ANR	31118	Argument	parent_element		30713	1					
ANR	31119	Identifier	parent_element		30713	0					
ANR	31120	Argument	property_Id -> isParticle ( ) || false		30713	2					
ANR	31121	OrExpression	property_Id -> isParticle ( ) || false		30713	0		||			
ANR	31122	CallExpression	property_Id -> isParticle ( )		30713	0					
ANR	31123	Callee	property_Id -> isParticle		30713	0					
ANR	31124	PtrMemberAccess	property_Id -> isParticle		30713	0					
ANR	31125	Identifier	property_Id		30713	0					
ANR	31126	Identifier	isParticle		30713	1					
ANR	31127	ArgumentList			30713	1					
ANR	31128	Identifier	false		30713	1					
ANR	31129	Argument	namespaces		30713	3					
ANR	31130	Identifier	namespaces		30713	0					
ANR	31131	Argument	next_ns_index		30713	4					
ANR	31132	Identifier	next_ns_index		30713	0					
ANR	31133	IfStatement	if ( ! property_Id -> isParticle ( ) )		30713	8					
ANR	31134	Condition	! property_Id -> isParticle ( )	462:31:21214:21239	30713	0	True				
ANR	31135	UnaryOperationExpression	! property_Id -> isParticle ( )		30713	0					
ANR	31136	UnaryOperator	!		30713	0					
ANR	31137	CallExpression	property_Id -> isParticle ( )		30713	1					
ANR	31138	Callee	property_Id -> isParticle		30713	0					
ANR	31139	PtrMemberAccess	property_Id -> isParticle		30713	0					
ANR	31140	Identifier	property_Id		30713	0					
ANR	31141	Identifier	isParticle		30713	1					
ANR	31142	ArgumentList			30713	1					
ANR	31143	CompoundStatement		102:28:4293:4293	30713	1					
ANR	31144	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	464:32:21304:21388	30713	0	True				
ANR	31145	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		30713	0					
ANR	31146	Callee	axutil_stream_write		30713	0					
ANR	31147	Identifier	axutil_stream_write		30713	0					
ANR	31148	ArgumentList	stream		30713	1					
ANR	31149	Argument	stream		30713	0					
ANR	31150	Identifier	stream		30713	0					
ANR	31151	Argument	Environment :: getEnv ( )		30713	1					
ANR	31152	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31153	Callee	Environment :: getEnv		30713	0					
ANR	31154	Identifier	Environment :: getEnv		30713	0					
ANR	31155	ArgumentList			30713	1					
ANR	31156	Argument	end_input_str		30713	2					
ANR	31157	Identifier	end_input_str		30713	0					
ANR	31158	Argument	end_input_str_len		30713	3					
ANR	31159	Identifier	end_input_str_len		30713	0					
ANR	31160	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	468:21:21492:21552	30713	9	True				
ANR	31161	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		30713	0					
ANR	31162	Callee	AXIS2_FREE		30713	0					
ANR	31163	Identifier	AXIS2_FREE		30713	0					
ANR	31164	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31165	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31166	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31167	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31168	Callee	Environment :: getEnv		30713	0					
ANR	31169	Identifier	Environment :: getEnv		30713	0					
ANR	31170	ArgumentList			30713	1					
ANR	31171	Identifier	allocator		30713	1					
ANR	31172	Argument	start_input_str		30713	1					
ANR	31173	Identifier	start_input_str		30713	0					
ANR	31174	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	469:21:21575:21633	30713	10	True				
ANR	31175	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		30713	0					
ANR	31176	Callee	AXIS2_FREE		30713	0					
ANR	31177	Identifier	AXIS2_FREE		30713	0					
ANR	31178	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31179	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31180	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31181	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31182	Callee	Environment :: getEnv		30713	0					
ANR	31183	Identifier	Environment :: getEnv		30713	0					
ANR	31184	ArgumentList			30713	1					
ANR	31185	Identifier	allocator		30713	1					
ANR	31186	Argument	end_input_str		30713	1					
ANR	31187	Identifier	end_input_str		30713	0					
ANR	31188	ExpressionStatement	p_prefix = NULL	473:23:21697:21712	30713	24	True				
ANR	31189	AssignmentExpression	p_prefix = NULL		30713	0		=			
ANR	31190	Identifier	p_prefix		30713	0					
ANR	31191	Identifier	NULL		30713	1					
ANR	31192	IfStatement	if ( ! isValidStatus )		30713	25					
ANR	31193	Condition	! isValidStatus	476:23:21761:21774	30713	0	True				
ANR	31194	UnaryOperationExpression	! isValidStatus		30713	0					
ANR	31195	UnaryOperator	!		30713	0					
ANR	31196	Identifier	isValidStatus		30713	1					
ANR	31197	CompoundStatement		116:19:4819:4819	30713	1					
ANR	31198	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property status"" )"	480:28:21878:21985	30713	0	True				
ANR	31199	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property status"" )"		30713	0					
ANR	31200	Callee	WSF_LOG_ERROR_MSG		30713	0					
ANR	31201	Identifier	WSF_LOG_ERROR_MSG		30713	0					
ANR	31202	ArgumentList	Environment :: getEnv ( ) -> log		30713	1					
ANR	31203	Argument	Environment :: getEnv ( ) -> log		30713	0					
ANR	31204	PtrMemberAccess	Environment :: getEnv ( ) -> log		30713	0					
ANR	31205	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31206	Callee	Environment :: getEnv		30713	0					
ANR	31207	Identifier	Environment :: getEnv		30713	0					
ANR	31208	ArgumentList			30713	1					
ANR	31209	Identifier	log		30713	1					
ANR	31210	Argument	WSF_LOG_SI		30713	1					
ANR	31211	Identifier	WSF_LOG_SI		30713	0					
ANR	31212	Argument	"""Nil value found in non-nillable property status"""		30713	2					
ANR	31213	PrimaryExpression	"""Nil value found in non-nillable property status"""		30713	0					
ANR	31214	ReturnStatement	return NULL ;	481:28:22015:22026	30713	1	True				
ANR	31215	Identifier	NULL		30713	0					
ANR	31216	ElseStatement	else		30713	0					
ANR	31217	CompoundStatement		124:19:5142:5142	30713	0					
ANR	31218	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"	486:21:22142:22369	30713	0	True				
ANR	31219	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	0		=			
ANR	31220	Identifier	start_input_str		30713	0					
ANR	31221	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	1					
ANR	31222	CastTarget	axis2_char_t *		30713	0					
ANR	31223	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	1					
ANR	31224	Callee	AXIS2_MALLOC		30713	0					
ANR	31225	Identifier	AXIS2_MALLOC		30713	0					
ANR	31226	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31227	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31228	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31229	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31230	Callee	Environment :: getEnv		30713	0					
ANR	31231	Identifier	Environment :: getEnv		30713	0					
ANR	31232	ArgumentList			30713	1					
ANR	31233	Identifier	allocator		30713	1					
ANR	31234	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		30713	1					
ANR	31235	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		30713	0		*			
ANR	31236	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	31237	Sizeof	sizeof		30713	0					
ANR	31238	SizeofOperand	axis2_char_t		30713	1					
ANR	31239	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		30713	1		+			
ANR	31240	PrimaryExpression	4		30713	0					
ANR	31241	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		30713	1		+			
ANR	31242	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	31243	Callee	axutil_strlen		30713	0					
ANR	31244	Identifier	axutil_strlen		30713	0					
ANR	31245	ArgumentList	p_prefix		30713	1					
ANR	31246	Argument	p_prefix		30713	0					
ANR	31247	Identifier	p_prefix		30713	0					
ANR	31248	CallExpression	"axutil_strlen ( ""status"" )"		30713	1					
ANR	31249	Callee	axutil_strlen		30713	0					
ANR	31250	Identifier	axutil_strlen		30713	0					
ANR	31251	ArgumentList	"""status"""		30713	1					
ANR	31252	Argument	"""status"""		30713	0					
ANR	31253	PrimaryExpression	"""status"""		30713	0					
ANR	31254	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"	491:21:22495:22685	30713	1	True				
ANR	31255	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	0		=			
ANR	31256	Identifier	end_input_str		30713	0					
ANR	31257	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	1					
ANR	31258	CastTarget	axis2_char_t *		30713	0					
ANR	31259	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		30713	1					
ANR	31260	Callee	AXIS2_MALLOC		30713	0					
ANR	31261	Identifier	AXIS2_MALLOC		30713	0					
ANR	31262	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31263	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31264	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31265	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31266	Callee	Environment :: getEnv		30713	0					
ANR	31267	Identifier	Environment :: getEnv		30713	0					
ANR	31268	ArgumentList			30713	1					
ANR	31269	Identifier	allocator		30713	1					
ANR	31270	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		30713	1					
ANR	31271	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		30713	0		*			
ANR	31272	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	31273	Sizeof	sizeof		30713	0					
ANR	31274	SizeofOperand	axis2_char_t		30713	1					
ANR	31275	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		30713	1		+			
ANR	31276	PrimaryExpression	5		30713	0					
ANR	31277	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		30713	1		+			
ANR	31278	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	31279	Callee	axutil_strlen		30713	0					
ANR	31280	Identifier	axutil_strlen		30713	0					
ANR	31281	ArgumentList	p_prefix		30713	1					
ANR	31282	Argument	p_prefix		30713	0					
ANR	31283	Identifier	p_prefix		30713	0					
ANR	31284	CallExpression	"axutil_strlen ( ""status"" )"		30713	1					
ANR	31285	Callee	axutil_strlen		30713	0					
ANR	31286	Identifier	axutil_strlen		30713	0					
ANR	31287	ArgumentList	"""status"""		30713	1					
ANR	31288	Argument	"""status"""		30713	0					
ANR	31289	PrimaryExpression	"""status"""		30713	0					
ANR	31290	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sstatus"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	506:28:23044:23221	30713	2	True				
ANR	31291	CallExpression	"sprintf ( start_input_str , ""<%s%sstatus"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31292	Callee	sprintf		30713	0					
ANR	31293	Identifier	sprintf		30713	0					
ANR	31294	ArgumentList	start_input_str		30713	1					
ANR	31295	Argument	start_input_str		30713	0					
ANR	31296	Identifier	start_input_str		30713	0					
ANR	31297	Argument	"""<%s%sstatus"""		30713	1					
ANR	31298	PrimaryExpression	"""<%s%sstatus"""		30713	0					
ANR	31299	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31300	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31301	Condition	p_prefix		30713	0					
ANR	31302	Identifier	p_prefix		30713	0					
ANR	31303	Identifier	p_prefix		30713	1					
ANR	31304	PrimaryExpression	""""""		30713	2					
ANR	31305	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31306	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31307	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31308	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31309	Identifier	p_prefix		30713	0					
ANR	31310	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31311	Callee	axutil_strcmp		30713	0					
ANR	31312	Identifier	axutil_strcmp		30713	0					
ANR	31313	ArgumentList	p_prefix		30713	1					
ANR	31314	Argument	p_prefix		30713	0					
ANR	31315	Identifier	p_prefix		30713	0					
ANR	31316	Argument	""""""		30713	1					
ANR	31317	PrimaryExpression	""""""		30713	0					
ANR	31318	PrimaryExpression	""":"""		30713	1					
ANR	31319	PrimaryExpression	""""""		30713	2					
ANR	31320	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	510:24:23277:23329	30713	3	True				
ANR	31321	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		30713	0		=			
ANR	31322	Identifier	start_input_str_len		30713	0					
ANR	31323	CallExpression	axutil_strlen ( start_input_str )		30713	1					
ANR	31324	Callee	axutil_strlen		30713	0					
ANR	31325	Identifier	axutil_strlen		30713	0					
ANR	31326	ArgumentList	start_input_str		30713	1					
ANR	31327	Argument	start_input_str		30713	0					
ANR	31328	Identifier	start_input_str		30713	0					
ANR	31329	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sstatus>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	511:24:23355:23532	30713	4	True				
ANR	31330	CallExpression	"sprintf ( end_input_str , ""</%s%sstatus>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31331	Callee	sprintf		30713	0					
ANR	31332	Identifier	sprintf		30713	0					
ANR	31333	ArgumentList	end_input_str		30713	1					
ANR	31334	Argument	end_input_str		30713	0					
ANR	31335	Identifier	end_input_str		30713	0					
ANR	31336	Argument	"""</%s%sstatus>"""		30713	1					
ANR	31337	PrimaryExpression	"""</%s%sstatus>"""		30713	0					
ANR	31338	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31339	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31340	Condition	p_prefix		30713	0					
ANR	31341	Identifier	p_prefix		30713	0					
ANR	31342	Identifier	p_prefix		30713	1					
ANR	31343	PrimaryExpression	""""""		30713	2					
ANR	31344	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31345	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31346	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31347	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31348	Identifier	p_prefix		30713	0					
ANR	31349	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31350	Callee	axutil_strcmp		30713	0					
ANR	31351	Identifier	axutil_strcmp		30713	0					
ANR	31352	ArgumentList	p_prefix		30713	1					
ANR	31353	Argument	p_prefix		30713	0					
ANR	31354	Identifier	p_prefix		30713	0					
ANR	31355	Argument	""""""		30713	1					
ANR	31356	PrimaryExpression	""""""		30713	0					
ANR	31357	PrimaryExpression	""":"""		30713	1					
ANR	31358	PrimaryExpression	""""""		30713	2					
ANR	31359	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	514:24:23558:23606	30713	5	True				
ANR	31360	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		30713	0		=			
ANR	31361	Identifier	end_input_str_len		30713	0					
ANR	31362	CallExpression	axutil_strlen ( end_input_str )		30713	1					
ANR	31363	Callee	axutil_strlen		30713	0					
ANR	31364	Identifier	axutil_strlen		30713	0					
ANR	31365	ArgumentList	end_input_str		30713	1					
ANR	31366	Argument	end_input_str		30713	0					
ANR	31367	Identifier	end_input_str		30713	0					
ANR	31368	IfStatement	if ( ! property_Status -> isParticle ( ) )		30713	6					
ANR	31369	Condition	! property_Status -> isParticle ( )	516:31:23661:23690	30713	0	True				
ANR	31370	UnaryOperationExpression	! property_Status -> isParticle ( )		30713	0					
ANR	31371	UnaryOperator	!		30713	0					
ANR	31372	CallExpression	property_Status -> isParticle ( )		30713	1					
ANR	31373	Callee	property_Status -> isParticle		30713	0					
ANR	31374	PtrMemberAccess	property_Status -> isParticle		30713	0					
ANR	31375	Identifier	property_Status		30713	0					
ANR	31376	Identifier	isParticle		30713	1					
ANR	31377	ArgumentList			30713	1					
ANR	31378	CompoundStatement		156:28:6744:6744	30713	1					
ANR	31379	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	518:32:23755:23843	30713	0	True				
ANR	31380	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		30713	0					
ANR	31381	Callee	axutil_stream_write		30713	0					
ANR	31382	Identifier	axutil_stream_write		30713	0					
ANR	31383	ArgumentList	stream		30713	1					
ANR	31384	Argument	stream		30713	0					
ANR	31385	Identifier	stream		30713	0					
ANR	31386	Argument	Environment :: getEnv ( )		30713	1					
ANR	31387	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31388	Callee	Environment :: getEnv		30713	0					
ANR	31389	Identifier	Environment :: getEnv		30713	0					
ANR	31390	ArgumentList			30713	1					
ANR	31391	Argument	start_input_str		30713	2					
ANR	31392	Identifier	start_input_str		30713	0					
ANR	31393	Argument	start_input_str_len		30713	3					
ANR	31394	Identifier	start_input_str_len		30713	0					
ANR	31395	ExpressionStatement	"property_Status -> serialize ( current_node , parent_element , property_Status -> isParticle ( ) || false , namespaces , next_ns_index )"	520:28:23903:24107	30713	7	True				
ANR	31396	CallExpression	"property_Status -> serialize ( current_node , parent_element , property_Status -> isParticle ( ) || false , namespaces , next_ns_index )"		30713	0					
ANR	31397	Callee	property_Status -> serialize		30713	0					
ANR	31398	PtrMemberAccess	property_Status -> serialize		30713	0					
ANR	31399	Identifier	property_Status		30713	0					
ANR	31400	Identifier	serialize		30713	1					
ANR	31401	ArgumentList	current_node		30713	1					
ANR	31402	Argument	current_node		30713	0					
ANR	31403	Identifier	current_node		30713	0					
ANR	31404	Argument	parent_element		30713	1					
ANR	31405	Identifier	parent_element		30713	0					
ANR	31406	Argument	property_Status -> isParticle ( ) || false		30713	2					
ANR	31407	OrExpression	property_Status -> isParticle ( ) || false		30713	0		||			
ANR	31408	CallExpression	property_Status -> isParticle ( )		30713	0					
ANR	31409	Callee	property_Status -> isParticle		30713	0					
ANR	31410	PtrMemberAccess	property_Status -> isParticle		30713	0					
ANR	31411	Identifier	property_Status		30713	0					
ANR	31412	Identifier	isParticle		30713	1					
ANR	31413	ArgumentList			30713	1					
ANR	31414	Identifier	false		30713	1					
ANR	31415	Argument	namespaces		30713	3					
ANR	31416	Identifier	namespaces		30713	0					
ANR	31417	Argument	next_ns_index		30713	4					
ANR	31418	Identifier	next_ns_index		30713	0					
ANR	31419	IfStatement	if ( ! property_Status -> isParticle ( ) )		30713	8					
ANR	31420	Condition	! property_Status -> isParticle ( )	523:31:24169:24198	30713	0	True				
ANR	31421	UnaryOperationExpression	! property_Status -> isParticle ( )		30713	0					
ANR	31422	UnaryOperator	!		30713	0					
ANR	31423	CallExpression	property_Status -> isParticle ( )		30713	1					
ANR	31424	Callee	property_Status -> isParticle		30713	0					
ANR	31425	PtrMemberAccess	property_Status -> isParticle		30713	0					
ANR	31426	Identifier	property_Status		30713	0					
ANR	31427	Identifier	isParticle		30713	1					
ANR	31428	ArgumentList			30713	1					
ANR	31429	CompoundStatement		163:28:7252:7252	30713	1					
ANR	31430	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	525:32:24263:24347	30713	0	True				
ANR	31431	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		30713	0					
ANR	31432	Callee	axutil_stream_write		30713	0					
ANR	31433	Identifier	axutil_stream_write		30713	0					
ANR	31434	ArgumentList	stream		30713	1					
ANR	31435	Argument	stream		30713	0					
ANR	31436	Identifier	stream		30713	0					
ANR	31437	Argument	Environment :: getEnv ( )		30713	1					
ANR	31438	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31439	Callee	Environment :: getEnv		30713	0					
ANR	31440	Identifier	Environment :: getEnv		30713	0					
ANR	31441	ArgumentList			30713	1					
ANR	31442	Argument	end_input_str		30713	2					
ANR	31443	Identifier	end_input_str		30713	0					
ANR	31444	Argument	end_input_str_len		30713	3					
ANR	31445	Identifier	end_input_str_len		30713	0					
ANR	31446	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	529:21:24451:24511	30713	9	True				
ANR	31447	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		30713	0					
ANR	31448	Callee	AXIS2_FREE		30713	0					
ANR	31449	Identifier	AXIS2_FREE		30713	0					
ANR	31450	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31451	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31452	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31453	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31454	Callee	Environment :: getEnv		30713	0					
ANR	31455	Identifier	Environment :: getEnv		30713	0					
ANR	31456	ArgumentList			30713	1					
ANR	31457	Identifier	allocator		30713	1					
ANR	31458	Argument	start_input_str		30713	1					
ANR	31459	Identifier	start_input_str		30713	0					
ANR	31460	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	530:21:24534:24592	30713	10	True				
ANR	31461	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		30713	0					
ANR	31462	Callee	AXIS2_FREE		30713	0					
ANR	31463	Identifier	AXIS2_FREE		30713	0					
ANR	31464	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31465	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31466	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31467	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31468	Callee	Environment :: getEnv		30713	0					
ANR	31469	Identifier	Environment :: getEnv		30713	0					
ANR	31470	ArgumentList			30713	1					
ANR	31471	Identifier	allocator		30713	1					
ANR	31472	Argument	end_input_str		30713	1					
ANR	31473	Identifier	end_input_str		30713	0					
ANR	31474	ExpressionStatement	p_prefix = NULL	534:23:24656:24671	30713	26	True				
ANR	31475	AssignmentExpression	p_prefix = NULL		30713	0		=			
ANR	31476	Identifier	p_prefix		30713	0					
ANR	31477	Identifier	NULL		30713	1					
ANR	31478	IfStatement	if ( ! isValidDetails )		30713	27					
ANR	31479	Condition	! isValidDetails	537:23:24720:24734	30713	0	True				
ANR	31480	UnaryOperationExpression	! isValidDetails		30713	0					
ANR	31481	UnaryOperator	!		30713	0					
ANR	31482	Identifier	isValidDetails		30713	1					
ANR	31483	CompoundStatement		177:19:7779:7779	30713	1					
ANR	31484	ElseStatement	else		30713	0					
ANR	31485	CompoundStatement		184:19:8001:8001	30713	0					
ANR	31486	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"	546:21:25001:25229	30713	0	True				
ANR	31487	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	0		=			
ANR	31488	Identifier	start_input_str		30713	0					
ANR	31489	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	1					
ANR	31490	CastTarget	axis2_char_t *		30713	0					
ANR	31491	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	1					
ANR	31492	Callee	AXIS2_MALLOC		30713	0					
ANR	31493	Identifier	AXIS2_MALLOC		30713	0					
ANR	31494	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31495	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31496	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31497	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31498	Callee	Environment :: getEnv		30713	0					
ANR	31499	Identifier	Environment :: getEnv		30713	0					
ANR	31500	ArgumentList			30713	1					
ANR	31501	Identifier	allocator		30713	1					
ANR	31502	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) )"		30713	1					
ANR	31503	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) )"		30713	0		*			
ANR	31504	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	31505	Sizeof	sizeof		30713	0					
ANR	31506	SizeofOperand	axis2_char_t		30713	1					
ANR	31507	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" )"		30713	1		+			
ANR	31508	PrimaryExpression	4		30713	0					
ANR	31509	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" )"		30713	1		+			
ANR	31510	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	31511	Callee	axutil_strlen		30713	0					
ANR	31512	Identifier	axutil_strlen		30713	0					
ANR	31513	ArgumentList	p_prefix		30713	1					
ANR	31514	Argument	p_prefix		30713	0					
ANR	31515	Identifier	p_prefix		30713	0					
ANR	31516	CallExpression	"axutil_strlen ( ""details"" )"		30713	1					
ANR	31517	Callee	axutil_strlen		30713	0					
ANR	31518	Identifier	axutil_strlen		30713	0					
ANR	31519	ArgumentList	"""details"""		30713	1					
ANR	31520	Argument	"""details"""		30713	0					
ANR	31521	PrimaryExpression	"""details"""		30713	0					
ANR	31522	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"	551:21:25355:25546	30713	1	True				
ANR	31523	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	0		=			
ANR	31524	Identifier	end_input_str		30713	0					
ANR	31525	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	1					
ANR	31526	CastTarget	axis2_char_t *		30713	0					
ANR	31527	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) ) )"		30713	1					
ANR	31528	Callee	AXIS2_MALLOC		30713	0					
ANR	31529	Identifier	AXIS2_MALLOC		30713	0					
ANR	31530	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31531	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31532	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31533	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31534	Callee	Environment :: getEnv		30713	0					
ANR	31535	Identifier	Environment :: getEnv		30713	0					
ANR	31536	ArgumentList			30713	1					
ANR	31537	Identifier	allocator		30713	1					
ANR	31538	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) )"		30713	1					
ANR	31539	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" ) )"		30713	0		*			
ANR	31540	SizeofExpression	sizeof ( axis2_char_t )		30713	0					
ANR	31541	Sizeof	sizeof		30713	0					
ANR	31542	SizeofOperand	axis2_char_t		30713	1					
ANR	31543	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" )"		30713	1		+			
ANR	31544	PrimaryExpression	5		30713	0					
ANR	31545	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""details"" )"		30713	1		+			
ANR	31546	CallExpression	axutil_strlen ( p_prefix )		30713	0					
ANR	31547	Callee	axutil_strlen		30713	0					
ANR	31548	Identifier	axutil_strlen		30713	0					
ANR	31549	ArgumentList	p_prefix		30713	1					
ANR	31550	Argument	p_prefix		30713	0					
ANR	31551	Identifier	p_prefix		30713	0					
ANR	31552	CallExpression	"axutil_strlen ( ""details"" )"		30713	1					
ANR	31553	Callee	axutil_strlen		30713	0					
ANR	31554	Identifier	axutil_strlen		30713	0					
ANR	31555	ArgumentList	"""details"""		30713	1					
ANR	31556	Argument	"""details"""		30713	0					
ANR	31557	PrimaryExpression	"""details"""		30713	0					
ANR	31558	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sdetails"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	566:28:25906:26084	30713	2	True				
ANR	31559	CallExpression	"sprintf ( start_input_str , ""<%s%sdetails"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31560	Callee	sprintf		30713	0					
ANR	31561	Identifier	sprintf		30713	0					
ANR	31562	ArgumentList	start_input_str		30713	1					
ANR	31563	Argument	start_input_str		30713	0					
ANR	31564	Identifier	start_input_str		30713	0					
ANR	31565	Argument	"""<%s%sdetails"""		30713	1					
ANR	31566	PrimaryExpression	"""<%s%sdetails"""		30713	0					
ANR	31567	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31568	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31569	Condition	p_prefix		30713	0					
ANR	31570	Identifier	p_prefix		30713	0					
ANR	31571	Identifier	p_prefix		30713	1					
ANR	31572	PrimaryExpression	""""""		30713	2					
ANR	31573	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31574	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31575	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31576	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31577	Identifier	p_prefix		30713	0					
ANR	31578	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31579	Callee	axutil_strcmp		30713	0					
ANR	31580	Identifier	axutil_strcmp		30713	0					
ANR	31581	ArgumentList	p_prefix		30713	1					
ANR	31582	Argument	p_prefix		30713	0					
ANR	31583	Identifier	p_prefix		30713	0					
ANR	31584	Argument	""""""		30713	1					
ANR	31585	PrimaryExpression	""""""		30713	0					
ANR	31586	PrimaryExpression	""":"""		30713	1					
ANR	31587	PrimaryExpression	""""""		30713	2					
ANR	31588	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	570:24:26140:26192	30713	3	True				
ANR	31589	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		30713	0		=			
ANR	31590	Identifier	start_input_str_len		30713	0					
ANR	31591	CallExpression	axutil_strlen ( start_input_str )		30713	1					
ANR	31592	Callee	axutil_strlen		30713	0					
ANR	31593	Identifier	axutil_strlen		30713	0					
ANR	31594	ArgumentList	start_input_str		30713	1					
ANR	31595	Argument	start_input_str		30713	0					
ANR	31596	Identifier	start_input_str		30713	0					
ANR	31597	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sdetails>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	571:24:26218:26396	30713	4	True				
ANR	31598	CallExpression	"sprintf ( end_input_str , ""</%s%sdetails>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		30713	0					
ANR	31599	Callee	sprintf		30713	0					
ANR	31600	Identifier	sprintf		30713	0					
ANR	31601	ArgumentList	end_input_str		30713	1					
ANR	31602	Argument	end_input_str		30713	0					
ANR	31603	Identifier	end_input_str		30713	0					
ANR	31604	Argument	"""</%s%sdetails>"""		30713	1					
ANR	31605	PrimaryExpression	"""</%s%sdetails>"""		30713	0					
ANR	31606	Argument	"p_prefix ? p_prefix : """""		30713	2					
ANR	31607	ConditionalExpression	"p_prefix ? p_prefix : """""		30713	0					
ANR	31608	Condition	p_prefix		30713	0					
ANR	31609	Identifier	p_prefix		30713	0					
ANR	31610	Identifier	p_prefix		30713	1					
ANR	31611	PrimaryExpression	""""""		30713	2					
ANR	31612	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	3					
ANR	31613	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		30713	0					
ANR	31614	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0					
ANR	31615	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		30713	0		&&			
ANR	31616	Identifier	p_prefix		30713	0					
ANR	31617	CallExpression	"axutil_strcmp ( p_prefix , """" )"		30713	1					
ANR	31618	Callee	axutil_strcmp		30713	0					
ANR	31619	Identifier	axutil_strcmp		30713	0					
ANR	31620	ArgumentList	p_prefix		30713	1					
ANR	31621	Argument	p_prefix		30713	0					
ANR	31622	Identifier	p_prefix		30713	0					
ANR	31623	Argument	""""""		30713	1					
ANR	31624	PrimaryExpression	""""""		30713	0					
ANR	31625	PrimaryExpression	""":"""		30713	1					
ANR	31626	PrimaryExpression	""""""		30713	2					
ANR	31627	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	574:24:26422:26470	30713	5	True				
ANR	31628	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		30713	0		=			
ANR	31629	Identifier	end_input_str_len		30713	0					
ANR	31630	CallExpression	axutil_strlen ( end_input_str )		30713	1					
ANR	31631	Callee	axutil_strlen		30713	0					
ANR	31632	Identifier	axutil_strlen		30713	0					
ANR	31633	ArgumentList	end_input_str		30713	1					
ANR	31634	Argument	end_input_str		30713	0					
ANR	31635	Identifier	end_input_str		30713	0					
ANR	31636	IfStatement	if ( ! property_Details -> isParticle ( ) )		30713	6					
ANR	31637	Condition	! property_Details -> isParticle ( )	576:31:26525:26555	30713	0	True				
ANR	31638	UnaryOperationExpression	! property_Details -> isParticle ( )		30713	0					
ANR	31639	UnaryOperator	!		30713	0					
ANR	31640	CallExpression	property_Details -> isParticle ( )		30713	1					
ANR	31641	Callee	property_Details -> isParticle		30713	0					
ANR	31642	PtrMemberAccess	property_Details -> isParticle		30713	0					
ANR	31643	Identifier	property_Details		30713	0					
ANR	31644	Identifier	isParticle		30713	1					
ANR	31645	ArgumentList			30713	1					
ANR	31646	CompoundStatement		216:28:9609:9609	30713	1					
ANR	31647	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	578:32:26620:26708	30713	0	True				
ANR	31648	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		30713	0					
ANR	31649	Callee	axutil_stream_write		30713	0					
ANR	31650	Identifier	axutil_stream_write		30713	0					
ANR	31651	ArgumentList	stream		30713	1					
ANR	31652	Argument	stream		30713	0					
ANR	31653	Identifier	stream		30713	0					
ANR	31654	Argument	Environment :: getEnv ( )		30713	1					
ANR	31655	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31656	Callee	Environment :: getEnv		30713	0					
ANR	31657	Identifier	Environment :: getEnv		30713	0					
ANR	31658	ArgumentList			30713	1					
ANR	31659	Argument	start_input_str		30713	2					
ANR	31660	Identifier	start_input_str		30713	0					
ANR	31661	Argument	start_input_str_len		30713	3					
ANR	31662	Identifier	start_input_str_len		30713	0					
ANR	31663	ExpressionStatement	"property_Details -> serialize ( current_node , parent_element , property_Details -> isParticle ( ) || false , namespaces , next_ns_index )"	580:28:26768:26974	30713	7	True				
ANR	31664	CallExpression	"property_Details -> serialize ( current_node , parent_element , property_Details -> isParticle ( ) || false , namespaces , next_ns_index )"		30713	0					
ANR	31665	Callee	property_Details -> serialize		30713	0					
ANR	31666	PtrMemberAccess	property_Details -> serialize		30713	0					
ANR	31667	Identifier	property_Details		30713	0					
ANR	31668	Identifier	serialize		30713	1					
ANR	31669	ArgumentList	current_node		30713	1					
ANR	31670	Argument	current_node		30713	0					
ANR	31671	Identifier	current_node		30713	0					
ANR	31672	Argument	parent_element		30713	1					
ANR	31673	Identifier	parent_element		30713	0					
ANR	31674	Argument	property_Details -> isParticle ( ) || false		30713	2					
ANR	31675	OrExpression	property_Details -> isParticle ( ) || false		30713	0		||			
ANR	31676	CallExpression	property_Details -> isParticle ( )		30713	0					
ANR	31677	Callee	property_Details -> isParticle		30713	0					
ANR	31678	PtrMemberAccess	property_Details -> isParticle		30713	0					
ANR	31679	Identifier	property_Details		30713	0					
ANR	31680	Identifier	isParticle		30713	1					
ANR	31681	ArgumentList			30713	1					
ANR	31682	Identifier	false		30713	1					
ANR	31683	Argument	namespaces		30713	3					
ANR	31684	Identifier	namespaces		30713	0					
ANR	31685	Argument	next_ns_index		30713	4					
ANR	31686	Identifier	next_ns_index		30713	0					
ANR	31687	IfStatement	if ( ! property_Details -> isParticle ( ) )		30713	8					
ANR	31688	Condition	! property_Details -> isParticle ( )	583:31:27036:27066	30713	0	True				
ANR	31689	UnaryOperationExpression	! property_Details -> isParticle ( )		30713	0					
ANR	31690	UnaryOperator	!		30713	0					
ANR	31691	CallExpression	property_Details -> isParticle ( )		30713	1					
ANR	31692	Callee	property_Details -> isParticle		30713	0					
ANR	31693	PtrMemberAccess	property_Details -> isParticle		30713	0					
ANR	31694	Identifier	property_Details		30713	0					
ANR	31695	Identifier	isParticle		30713	1					
ANR	31696	ArgumentList			30713	1					
ANR	31697	CompoundStatement		223:28:10120:10120	30713	1					
ANR	31698	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	585:32:27131:27215	30713	0	True				
ANR	31699	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		30713	0					
ANR	31700	Callee	axutil_stream_write		30713	0					
ANR	31701	Identifier	axutil_stream_write		30713	0					
ANR	31702	ArgumentList	stream		30713	1					
ANR	31703	Argument	stream		30713	0					
ANR	31704	Identifier	stream		30713	0					
ANR	31705	Argument	Environment :: getEnv ( )		30713	1					
ANR	31706	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31707	Callee	Environment :: getEnv		30713	0					
ANR	31708	Identifier	Environment :: getEnv		30713	0					
ANR	31709	ArgumentList			30713	1					
ANR	31710	Argument	end_input_str		30713	2					
ANR	31711	Identifier	end_input_str		30713	0					
ANR	31712	Argument	end_input_str_len		30713	3					
ANR	31713	Identifier	end_input_str_len		30713	0					
ANR	31714	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	589:21:27319:27379	30713	9	True				
ANR	31715	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		30713	0					
ANR	31716	Callee	AXIS2_FREE		30713	0					
ANR	31717	Identifier	AXIS2_FREE		30713	0					
ANR	31718	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31719	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31720	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31721	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31722	Callee	Environment :: getEnv		30713	0					
ANR	31723	Identifier	Environment :: getEnv		30713	0					
ANR	31724	ArgumentList			30713	1					
ANR	31725	Identifier	allocator		30713	1					
ANR	31726	Argument	start_input_str		30713	1					
ANR	31727	Identifier	start_input_str		30713	0					
ANR	31728	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	590:21:27402:27460	30713	10	True				
ANR	31729	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		30713	0					
ANR	31730	Callee	AXIS2_FREE		30713	0					
ANR	31731	Identifier	AXIS2_FREE		30713	0					
ANR	31732	ArgumentList	Environment :: getEnv ( ) -> allocator		30713	1					
ANR	31733	Argument	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31734	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		30713	0					
ANR	31735	CallExpression	Environment :: getEnv ( )		30713	0					
ANR	31736	Callee	Environment :: getEnv		30713	0					
ANR	31737	Identifier	Environment :: getEnv		30713	0					
ANR	31738	ArgumentList			30713	1					
ANR	31739	Identifier	allocator		30713	1					
ANR	31740	Argument	end_input_str		30713	1					
ANR	31741	Identifier	end_input_str		30713	0					
ANR	31742	ReturnStatement	return parent ;	595:12:27514:27527	30713	28	True				
ANR	31743	Identifier	parent		30713	0					
ANR	31744	ReturnType	WSF_CALL		30713	1					
ANR	31745	Identifier	AviaryCommon :: JobDetails :: serialize		30713	2					
ANR	31746	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		30713	3					
ANR	31747	Parameter	axiom_node_t * parent	357:37:16827:16846	30713	0	True				
ANR	31748	ParameterType	axiom_node_t *		30713	0					
ANR	31749	Identifier	parent		30713	1					
ANR	31750	Parameter	axiom_element_t * parent_element	358:3:16853:16883	30713	1	True				
ANR	31751	ParameterType	axiom_element_t *		30713	0					
ANR	31752	Identifier	parent_element		30713	1					
ANR	31753	Parameter	int parent_tag_closed	359:3:16890:16910	30713	2	True				
ANR	31754	ParameterType	int		30713	0					
ANR	31755	Identifier	parent_tag_closed		30713	1					
ANR	31756	Parameter	axutil_hash_t * namespaces	360:3:16917:16941	30713	3	True				
ANR	31757	ParameterType	axutil_hash_t *		30713	0					
ANR	31758	Identifier	namespaces		30713	1					
ANR	31759	Parameter	int * next_ns_index	361:3:16948:16965	30713	4	True				
ANR	31760	ParameterType	int *		30713	0					
ANR	31761	Identifier	next_ns_index		30713	1					
ANR	31762	CFGEntryNode	ENTRY		30713		True				
ANR	31763	CFGExitNode	EXIT		30713		True				
ANR	31764	Symbol	parent		30713						
ANR	31765	Symbol	Environment :: getEnv		30713						
ANR	31766	Symbol	current_node		30713						
ANR	31767	Symbol	qname_uri		30713						
ANR	31768	Symbol	axutil_strlen		30713						
ANR	31769	Symbol	p_prefix		30713						
ANR	31770	Symbol	isValidStatus		30713						
ANR	31771	Symbol	property_Details		30713						
ANR	31772	Symbol	ns1		30713						
ANR	31773	Symbol	isValidDetails		30713						
ANR	31774	Symbol	axiom_node_get_data_element		30713						
ANR	31775	Symbol	property_Id		30713						
ANR	31776	Symbol	text_value_2		30713						
ANR	31777	Symbol	isValidId		30713						
ANR	31778	Symbol	WSF_LOG_SI		30713						
ANR	31779	Symbol	text_value_3		30713						
ANR	31780	Symbol	stream		30713						
ANR	31781	Symbol	property_Id -> isParticle		30713						
ANR	31782	Symbol	text_value_1		30713						
ANR	31783	Symbol	AXIS2_MALLOC		30713						
ANR	31784	Symbol	Environment :: getEnv ( ) -> allocator		30713						
ANR	31785	Symbol	property_Details -> isParticle		30713						
ANR	31786	Symbol	parent_element		30713						
ANR	31787	Symbol	* property_Status		30713						
ANR	31788	Symbol	axiom_data_source_get_stream		30713						
ANR	31789	Symbol	NULL		30713						
ANR	31790	Symbol	end_input_str_len		30713						
ANR	31791	Symbol	tag_closed		30713						
ANR	31792	Symbol	false		30713						
ANR	31793	Symbol	start_input_str		30713						
ANR	31794	Symbol	parent_tag_closed		30713						
ANR	31795	Symbol	next_ns_index		30713						
ANR	31796	Symbol	Environment :: getEnv ( ) -> log		30713						
ANR	31797	Symbol	string_to_stream		30713						
ANR	31798	Symbol	data_source		30713						
ANR	31799	Symbol	start_input_str_len		30713						
ANR	31800	Symbol	* property_Id		30713						
ANR	31801	Symbol	property_Status		30713						
ANR	31802	Symbol	* property_Details		30713						
ANR	31803	Symbol	qname_prefix		30713						
ANR	31804	Symbol	property_Status -> isParticle		30713						
ANR	31805	Symbol	* Environment :: getEnv		30713						
ANR	31806	Symbol	axutil_strcmp		30713						
ANR	31807	Symbol	end_input_str		30713						
ANR	31808	Symbol	namespaces		30713						
ANR	31809	Function	AviaryCommon :: JobDetails :: getProperty1	604:33:27667:27787							
ANR	31810	FunctionDef	AviaryCommon :: JobDetails :: getProperty1 ()		31809	0					
ANR	31811	CompoundStatement		606:12:27741:27787	31809	0					
ANR	31812	ReturnStatement	return getId ( ) ;	607:16:27759:27773	31809	0	True				
ANR	31813	CallExpression	getId ( )		31809	0					
ANR	31814	Callee	getId		31809	0					
ANR	31815	Identifier	getId		31809	0					
ANR	31816	ArgumentList			31809	1					
ANR	31817	ReturnType	WSF_CALL		31809	1					
ANR	31818	Identifier	AviaryCommon :: JobDetails :: getProperty1		31809	2					
ANR	31819	ParameterList			31809	3					
ANR	31820	CFGEntryNode	ENTRY		31809		True				
ANR	31821	CFGExitNode	EXIT		31809		True				
ANR	31822	Symbol	getId		31809						
ANR	31823	Function	AviaryCommon :: JobDetails :: getId	613:33:27885:28004							
ANR	31824	FunctionDef	AviaryCommon :: JobDetails :: getId ()		31823	0					
ANR	31825	CompoundStatement		615:13:27953:28004	31823	0					
ANR	31826	ReturnStatement	return property_Id ;	616:16:27971:27989	31823	0	True				
ANR	31827	Identifier	property_Id		31823	0					
ANR	31828	ReturnType	WSF_CALL		31823	1					
ANR	31829	Identifier	AviaryCommon :: JobDetails :: getId		31823	2					
ANR	31830	ParameterList			31823	3					
ANR	31831	CFGEntryNode	ENTRY		31823		True				
ANR	31832	CFGExitNode	EXIT		31823		True				
ANR	31833	Symbol	property_Id		31823						
ANR	31834	Function	AviaryCommon :: JobDetails :: setId	622:12:28080:29123							
ANR	31835	FunctionDef	AviaryCommon :: JobDetails :: setId (AviaryCommon :: JobID * arg_Id)		31834	0					
ANR	31836	CompoundStatement		625:13:28202:29123	31834	0					
ANR	31837	IfStatement	if ( isValidId && arg_Id == property_Id )		31834	0					
ANR	31838	Condition	isValidId && arg_Id == property_Id	628:19:28241:28298	31834	0	True				
ANR	31839	AndExpression	isValidId && arg_Id == property_Id		31834	0		&&			
ANR	31840	Identifier	isValidId		31834	0					
ANR	31841	EqualityExpression	arg_Id == property_Id		31834	1		==			
ANR	31842	Identifier	arg_Id		31834	0					
ANR	31843	Identifier	property_Id		31834	1					
ANR	31844	CompoundStatement		6:16:114:114	31834	1					
ANR	31845	ReturnStatement	return true ;	632:20:28360:28371	31834	0	True				
ANR	31846	Identifier	true		31834	0					
ANR	31847	IfStatement	if ( NULL == arg_Id )		31834	1					
ANR	31848	Condition	NULL == arg_Id	636:21:28430:28443	31834	0	True				
ANR	31849	EqualityExpression	NULL == arg_Id		31834	0		==			
ANR	31850	Identifier	NULL		31834	0					
ANR	31851	Identifier	arg_Id		31834	1					
ANR	31852	CompoundStatement		14:18:285:285	31834	1					
ANR	31853	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""id is being set to NULL, but it is not a nullable element"" )"	639:22:28512:28629	31834	0	True				
ANR	31854	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""id is being set to NULL, but it is not a nullable element"" )"		31834	0					
ANR	31855	Callee	WSF_LOG_ERROR_MSG		31834	0					
ANR	31856	Identifier	WSF_LOG_ERROR_MSG		31834	0					
ANR	31857	ArgumentList	Environment :: getEnv ( ) -> log		31834	1					
ANR	31858	Argument	Environment :: getEnv ( ) -> log		31834	0					
ANR	31859	PtrMemberAccess	Environment :: getEnv ( ) -> log		31834	0					
ANR	31860	CallExpression	Environment :: getEnv ( )		31834	0					
ANR	31861	Callee	Environment :: getEnv		31834	0					
ANR	31862	Identifier	Environment :: getEnv		31834	0					
ANR	31863	ArgumentList			31834	1					
ANR	31864	Identifier	log		31834	1					
ANR	31865	Argument	WSF_LOG_SI		31834	1					
ANR	31866	Identifier	WSF_LOG_SI		31834	0					
ANR	31867	Argument	"""id is being set to NULL, but it is not a nullable element"""		31834	2					
ANR	31868	PrimaryExpression	"""id is being set to NULL, but it is not a nullable element"""		31834	0					
ANR	31869	ReturnStatement	return AXIS2_FAILURE ;	640:22:28653:28673	31834	1	True				
ANR	31870	Identifier	AXIS2_FAILURE		31834	0					
ANR	31871	ExpressionStatement	resetId ( )	645:16:28746:28755	31834	2	True				
ANR	31872	CallExpression	resetId ( )		31834	0					
ANR	31873	Callee	resetId		31834	0					
ANR	31874	Identifier	resetId		31834	0					
ANR	31875	ArgumentList			31834	1					
ANR	31876	IfStatement	if ( NULL == arg_Id )		31834	3					
ANR	31877	Condition	NULL == arg_Id	648:23:28798:28811	31834	0	True				
ANR	31878	EqualityExpression	NULL == arg_Id		31834	0		==			
ANR	31879	Identifier	NULL		31834	0					
ANR	31880	Identifier	arg_Id		31834	1					
ANR	31881	CompoundStatement		26:16:653:653	31834	1					
ANR	31882	ReturnStatement	return true ;	652:20:28924:28935	31834	0	True				
ANR	31883	Identifier	true		31834	0					
ANR	31884	ExpressionStatement	property_Id = arg_Id	655:24:28996:29016	31834	4	True				
ANR	31885	AssignmentExpression	property_Id = arg_Id		31834	0		=			
ANR	31886	Identifier	property_Id		31834	0					
ANR	31887	Identifier	arg_Id		31834	1					
ANR	31888	ExpressionStatement	isValidId = true	656:24:29042:29058	31834	5	True				
ANR	31889	AssignmentExpression	isValidId = true		31834	0		=			
ANR	31890	Identifier	isValidId		31834	0					
ANR	31891	Identifier	true		31834	1					
ANR	31892	ReturnStatement	return true ;	658:16:29097:29108	31834	6	True				
ANR	31893	Identifier	true		31834	0					
ANR	31894	ReturnType	bool WSF_CALL		31834	1					
ANR	31895	Identifier	AviaryCommon :: JobDetails :: setId		31834	2					
ANR	31896	ParameterList	AviaryCommon :: JobID * arg_Id		31834	3					
ANR	31897	Parameter	AviaryCommon :: JobID * arg_Id	624:20:28159:28186	31834	0	True				
ANR	31898	ParameterType	AviaryCommon :: JobID *		31834	0					
ANR	31899	Identifier	arg_Id		31834	1					
ANR	31900	CFGEntryNode	ENTRY		31834		True				
ANR	31901	CFGExitNode	EXIT		31834		True				
ANR	31902	Symbol	Environment :: getEnv		31834						
ANR	31903	Symbol	NULL		31834						
ANR	31904	Symbol	isValidId		31834						
ANR	31905	Symbol	WSF_LOG_SI		31834						
ANR	31906	Symbol	* Environment :: getEnv		31834						
ANR	31907	Symbol	arg_Id		31834						
ANR	31908	Symbol	true		31834						
ANR	31909	Symbol	Environment :: getEnv ( ) -> log		31834						
ANR	31910	Symbol	AXIS2_FAILURE		31834						
ANR	31911	Symbol	property_Id		31834						
ANR	31912	Function	AviaryCommon :: JobDetails :: resetId	666:11:29212:29705							
ANR	31913	FunctionDef	AviaryCommon :: JobDetails :: resetId ()		31912	0					
ANR	31914	CompoundStatement		668:11:29284:29705	31912	0					
ANR	31915	IdentifierDeclStatement	int i = 0 ;	669:15:29301:29310	31912	0	True				
ANR	31916	IdentifierDecl	i = 0		31912	0					
ANR	31917	IdentifierDeclType	int		31912	0					
ANR	31918	Identifier	i		31912	1					
ANR	31919	AssignmentExpression	i = 0		31912	2		=			
ANR	31920	Identifier	i		31912	0					
ANR	31921	PrimaryExpression	0		31912	1					
ANR	31922	IdentifierDeclStatement	int count = 0 ;	670:15:29327:29340	31912	1	True				
ANR	31923	IdentifierDecl	count = 0		31912	0					
ANR	31924	IdentifierDeclType	int		31912	0					
ANR	31925	Identifier	count		31912	1					
ANR	31926	AssignmentExpression	count = 0		31912	2		=			
ANR	31927	Identifier	count		31912	0					
ANR	31928	PrimaryExpression	0		31912	1					
ANR	31929	IfStatement	if ( property_Id != NULL )		31912	2					
ANR	31930	Condition	property_Id != NULL	677:19:29410:29428	31912	0	True				
ANR	31931	EqualityExpression	property_Id != NULL		31912	0		!=			
ANR	31932	Identifier	property_Id		31912	0					
ANR	31933	Identifier	NULL		31912	1					
ANR	31934	CompoundStatement		11:16:162:162	31912	1					
ANR	31935	Statement	delete	681:25:29514:29519	31912	0	True				
ANR	31936	ExpressionStatement	property_Id	681:33:29522:29533	31912	1	True				
ANR	31937	Identifier	property_Id		31912	0					
ANR	31938	ExpressionStatement	isValidId = false	689:15:29646:29663	31912	3	True				
ANR	31939	AssignmentExpression	isValidId = false		31912	0		=			
ANR	31940	Identifier	isValidId		31912	0					
ANR	31941	Identifier	false		31912	1					
ANR	31942	ReturnStatement	return true ;	690:15:29681:29692	31912	4	True				
ANR	31943	Identifier	true		31912	0					
ANR	31944	ReturnType	bool WSF_CALL		31912	1					
ANR	31945	Identifier	AviaryCommon :: JobDetails :: resetId		31912	2					
ANR	31946	ParameterList			31912	3					
ANR	31947	CFGEntryNode	ENTRY		31912		True				
ANR	31948	CFGExitNode	EXIT		31912		True				
ANR	31949	Symbol	NULL		31912						
ANR	31950	Symbol	isValidId		31912						
ANR	31951	Symbol	count		31912						
ANR	31952	Symbol	false		31912						
ANR	31953	Symbol	true		31912						
ANR	31954	Symbol	i		31912						
ANR	31955	Symbol	property_Id		31912						
ANR	31956	Function	AviaryCommon :: JobDetails :: isIdNil	696:11:29788:29907							
ANR	31957	FunctionDef	AviaryCommon :: JobDetails :: isIdNil ()		31956	0					
ANR	31958	CompoundStatement		698:11:29860:29907	31956	0					
ANR	31959	ReturnStatement	return ! isValidId ;	699:15:29877:29894	31956	0	True				
ANR	31960	UnaryOperationExpression	! isValidId		31956	0					
ANR	31961	UnaryOperator	!		31956	0					
ANR	31962	Identifier	isValidId		31956	1					
ANR	31963	ReturnType	bool WSF_CALL		31956	1					
ANR	31964	Identifier	AviaryCommon :: JobDetails :: isIdNil		31956	2					
ANR	31965	ParameterList			31956	3					
ANR	31966	CFGEntryNode	ENTRY		31956		True				
ANR	31967	CFGExitNode	EXIT		31956		True				
ANR	31968	Symbol	isValidId		31956						
ANR	31969	Function	AviaryCommon :: JobDetails :: setIdNil	705:11:30010:30129							
ANR	31970	FunctionDef	AviaryCommon :: JobDetails :: setIdNil ()		31969	0					
ANR	31971	CompoundStatement		707:11:30083:30129	31969	0					
ANR	31972	ReturnStatement	return resetId ( ) ;	708:15:30100:30116	31969	0	True				
ANR	31973	CallExpression	resetId ( )		31969	0					
ANR	31974	Callee	resetId		31969	0					
ANR	31975	Identifier	resetId		31969	0					
ANR	31976	ArgumentList			31969	1					
ANR	31977	ReturnType	bool WSF_CALL		31969	1					
ANR	31978	Identifier	AviaryCommon :: JobDetails :: setIdNil		31969	2					
ANR	31979	ParameterList			31969	3					
ANR	31980	CFGEntryNode	ENTRY		31969		True				
ANR	31981	CFGExitNode	EXIT		31969		True				
ANR	31982	Symbol	resetId		31969						
ANR	31983	Function	AviaryCommon :: JobDetails :: getProperty2	716:34:30266:30390							
ANR	31984	FunctionDef	AviaryCommon :: JobDetails :: getProperty2 ()		31983	0					
ANR	31985	CompoundStatement		718:12:30340:30390	31983	0					
ANR	31986	ReturnStatement	return getStatus ( ) ;	719:16:30358:30376	31983	0	True				
ANR	31987	CallExpression	getStatus ( )		31983	0					
ANR	31988	Callee	getStatus		31983	0					
ANR	31989	Identifier	getStatus		31983	0					
ANR	31990	ArgumentList			31983	1					
ANR	31991	ReturnType	WSF_CALL		31983	1					
ANR	31992	Identifier	AviaryCommon :: JobDetails :: getProperty2		31983	2					
ANR	31993	ParameterList			31983	3					
ANR	31994	CFGEntryNode	ENTRY		31983		True				
ANR	31995	CFGExitNode	EXIT		31983		True				
ANR	31996	Symbol	getStatus		31983						
ANR	31997	Function	AviaryCommon :: JobDetails :: getStatus	725:34:30493:30620							
ANR	31998	FunctionDef	AviaryCommon :: JobDetails :: getStatus ()		31997	0					
ANR	31999	CompoundStatement		727:13:30565:30620	31997	0					
ANR	32000	ReturnStatement	return property_Status ;	728:16:30583:30605	31997	0	True				
ANR	32001	Identifier	property_Status		31997	0					
ANR	32002	ReturnType	WSF_CALL		31997	1					
ANR	32003	Identifier	AviaryCommon :: JobDetails :: getStatus		31997	2					
ANR	32004	ParameterList			31997	3					
ANR	32005	CFGEntryNode	ENTRY		31997		True				
ANR	32006	CFGExitNode	EXIT		31997		True				
ANR	32007	Symbol	property_Status		31997						
ANR	32008	Function	AviaryCommon :: JobDetails :: setStatus	734:12:30700:31792							
ANR	32009	FunctionDef	AviaryCommon :: JobDetails :: setStatus (AviaryCommon :: Status * arg_Status)		32008	0					
ANR	32010	CompoundStatement		737:13:30831:31792	32008	0					
ANR	32011	IfStatement	if ( isValidStatus && arg_Status == property_Status )		32008	0					
ANR	32012	Condition	isValidStatus && arg_Status == property_Status	740:19:30870:30939	32008	0	True				
ANR	32013	AndExpression	isValidStatus && arg_Status == property_Status		32008	0		&&			
ANR	32014	Identifier	isValidStatus		32008	0					
ANR	32015	EqualityExpression	arg_Status == property_Status		32008	1		==			
ANR	32016	Identifier	arg_Status		32008	0					
ANR	32017	Identifier	property_Status		32008	1					
ANR	32018	CompoundStatement		6:16:126:126	32008	1					
ANR	32019	ReturnStatement	return true ;	744:20:31001:31012	32008	0	True				
ANR	32020	Identifier	true		32008	0					
ANR	32021	IfStatement	if ( NULL == arg_Status )		32008	1					
ANR	32022	Condition	NULL == arg_Status	748:21:31071:31088	32008	0	True				
ANR	32023	EqualityExpression	NULL == arg_Status		32008	0		==			
ANR	32024	Identifier	NULL		32008	0					
ANR	32025	Identifier	arg_Status		32008	1					
ANR	32026	CompoundStatement		14:18:301:301	32008	1					
ANR	32027	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""status is being set to NULL, but it is not a nullable element"" )"	751:22:31157:31278	32008	0	True				
ANR	32028	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""status is being set to NULL, but it is not a nullable element"" )"		32008	0					
ANR	32029	Callee	WSF_LOG_ERROR_MSG		32008	0					
ANR	32030	Identifier	WSF_LOG_ERROR_MSG		32008	0					
ANR	32031	ArgumentList	Environment :: getEnv ( ) -> log		32008	1					
ANR	32032	Argument	Environment :: getEnv ( ) -> log		32008	0					
ANR	32033	PtrMemberAccess	Environment :: getEnv ( ) -> log		32008	0					
ANR	32034	CallExpression	Environment :: getEnv ( )		32008	0					
ANR	32035	Callee	Environment :: getEnv		32008	0					
ANR	32036	Identifier	Environment :: getEnv		32008	0					
ANR	32037	ArgumentList			32008	1					
ANR	32038	Identifier	log		32008	1					
ANR	32039	Argument	WSF_LOG_SI		32008	1					
ANR	32040	Identifier	WSF_LOG_SI		32008	0					
ANR	32041	Argument	"""status is being set to NULL, but it is not a nullable element"""		32008	2					
ANR	32042	PrimaryExpression	"""status is being set to NULL, but it is not a nullable element"""		32008	0					
ANR	32043	ReturnStatement	return AXIS2_FAILURE ;	752:22:31302:31322	32008	1	True				
ANR	32044	Identifier	AXIS2_FAILURE		32008	0					
ANR	32045	ExpressionStatement	resetStatus ( )	757:16:31395:31408	32008	2	True				
ANR	32046	CallExpression	resetStatus ( )		32008	0					
ANR	32047	Callee	resetStatus		32008	0					
ANR	32048	Identifier	resetStatus		32008	0					
ANR	32049	ArgumentList			32008	1					
ANR	32050	IfStatement	if ( NULL == arg_Status )		32008	3					
ANR	32051	Condition	NULL == arg_Status	760:23:31451:31468	32008	0	True				
ANR	32052	EqualityExpression	NULL == arg_Status		32008	0		==			
ANR	32053	Identifier	NULL		32008	0					
ANR	32054	Identifier	arg_Status		32008	1					
ANR	32055	CompoundStatement		26:16:681:681	32008	1					
ANR	32056	ReturnStatement	return true ;	764:20:31581:31592	32008	0	True				
ANR	32057	Identifier	true		32008	0					
ANR	32058	ExpressionStatement	property_Status = arg_Status	767:24:31653:31681	32008	4	True				
ANR	32059	AssignmentExpression	property_Status = arg_Status		32008	0		=			
ANR	32060	Identifier	property_Status		32008	0					
ANR	32061	Identifier	arg_Status		32008	1					
ANR	32062	ExpressionStatement	isValidStatus = true	768:24:31707:31727	32008	5	True				
ANR	32063	AssignmentExpression	isValidStatus = true		32008	0		=			
ANR	32064	Identifier	isValidStatus		32008	0					
ANR	32065	Identifier	true		32008	1					
ANR	32066	ReturnStatement	return true ;	770:16:31766:31777	32008	6	True				
ANR	32067	Identifier	true		32008	0					
ANR	32068	ReturnType	bool WSF_CALL		32008	1					
ANR	32069	Identifier	AviaryCommon :: JobDetails :: setStatus		32008	2					
ANR	32070	ParameterList	AviaryCommon :: Status * arg_Status		32008	3					
ANR	32071	Parameter	AviaryCommon :: Status * arg_Status	736:20:30783:30815	32008	0	True				
ANR	32072	ParameterType	AviaryCommon :: Status *		32008	0					
ANR	32073	Identifier	arg_Status		32008	1					
ANR	32074	CFGEntryNode	ENTRY		32008		True				
ANR	32075	CFGExitNode	EXIT		32008		True				
ANR	32076	Symbol	property_Status		32008						
ANR	32077	Symbol	arg_Status		32008						
ANR	32078	Symbol	Environment :: getEnv		32008						
ANR	32079	Symbol	NULL		32008						
ANR	32080	Symbol	WSF_LOG_SI		32008						
ANR	32081	Symbol	* Environment :: getEnv		32008						
ANR	32082	Symbol	true		32008						
ANR	32083	Symbol	isValidStatus		32008						
ANR	32084	Symbol	Environment :: getEnv ( ) -> log		32008						
ANR	32085	Symbol	AXIS2_FAILURE		32008						
ANR	32086	Function	AviaryCommon :: JobDetails :: resetStatus	778:11:31885:32394							
ANR	32087	FunctionDef	AviaryCommon :: JobDetails :: resetStatus ()		32086	0					
ANR	32088	CompoundStatement		780:11:31961:32394	32086	0					
ANR	32089	IdentifierDeclStatement	int i = 0 ;	781:15:31978:31987	32086	0	True				
ANR	32090	IdentifierDecl	i = 0		32086	0					
ANR	32091	IdentifierDeclType	int		32086	0					
ANR	32092	Identifier	i		32086	1					
ANR	32093	AssignmentExpression	i = 0		32086	2		=			
ANR	32094	Identifier	i		32086	0					
ANR	32095	PrimaryExpression	0		32086	1					
ANR	32096	IdentifierDeclStatement	int count = 0 ;	782:15:32004:32017	32086	1	True				
ANR	32097	IdentifierDecl	count = 0		32086	0					
ANR	32098	IdentifierDeclType	int		32086	0					
ANR	32099	Identifier	count		32086	1					
ANR	32100	AssignmentExpression	count = 0		32086	2		=			
ANR	32101	Identifier	count		32086	0					
ANR	32102	PrimaryExpression	0		32086	1					
ANR	32103	IfStatement	if ( property_Status != NULL )		32086	2					
ANR	32104	Condition	property_Status != NULL	789:19:32087:32109	32086	0	True				
ANR	32105	EqualityExpression	property_Status != NULL		32086	0		!=			
ANR	32106	Identifier	property_Status		32086	0					
ANR	32107	Identifier	NULL		32086	1					
ANR	32108	CompoundStatement		11:16:166:166	32086	1					
ANR	32109	Statement	delete	793:25:32195:32200	32086	0	True				
ANR	32110	ExpressionStatement	property_Status	793:33:32203:32218	32086	1	True				
ANR	32111	Identifier	property_Status		32086	0					
ANR	32112	ExpressionStatement	isValidStatus = false	801:15:32331:32352	32086	3	True				
ANR	32113	AssignmentExpression	isValidStatus = false		32086	0		=			
ANR	32114	Identifier	isValidStatus		32086	0					
ANR	32115	Identifier	false		32086	1					
ANR	32116	ReturnStatement	return true ;	802:15:32370:32381	32086	4	True				
ANR	32117	Identifier	true		32086	0					
ANR	32118	ReturnType	bool WSF_CALL		32086	1					
ANR	32119	Identifier	AviaryCommon :: JobDetails :: resetStatus		32086	2					
ANR	32120	ParameterList			32086	3					
ANR	32121	CFGEntryNode	ENTRY		32086		True				
ANR	32122	CFGExitNode	EXIT		32086		True				
ANR	32123	Symbol	property_Status		32086						
ANR	32124	Symbol	NULL		32086						
ANR	32125	Symbol	count		32086						
ANR	32126	Symbol	false		32086						
ANR	32127	Symbol	true		32086						
ANR	32128	Symbol	i		32086						
ANR	32129	Symbol	isValidStatus		32086						
ANR	32130	Function	AviaryCommon :: JobDetails :: isStatusNil	808:11:32481:32608							
ANR	32131	FunctionDef	AviaryCommon :: JobDetails :: isStatusNil ()		32130	0					
ANR	32132	CompoundStatement		810:11:32557:32608	32130	0					
ANR	32133	ReturnStatement	return ! isValidStatus ;	811:15:32574:32595	32130	0	True				
ANR	32134	UnaryOperationExpression	! isValidStatus		32130	0					
ANR	32135	UnaryOperator	!		32130	0					
ANR	32136	Identifier	isValidStatus		32130	1					
ANR	32137	ReturnType	bool WSF_CALL		32130	1					
ANR	32138	Identifier	AviaryCommon :: JobDetails :: isStatusNil		32130	2					
ANR	32139	ParameterList			32130	3					
ANR	32140	CFGEntryNode	ENTRY		32130		True				
ANR	32141	CFGExitNode	EXIT		32130		True				
ANR	32142	Symbol	isValidStatus		32130						
ANR	32143	Function	AviaryCommon :: JobDetails :: setStatusNil	817:11:32715:32842							
ANR	32144	FunctionDef	AviaryCommon :: JobDetails :: setStatusNil ()		32143	0					
ANR	32145	CompoundStatement		819:11:32792:32842	32143	0					
ANR	32146	ReturnStatement	return resetStatus ( ) ;	820:15:32809:32829	32143	0	True				
ANR	32147	CallExpression	resetStatus ( )		32143	0					
ANR	32148	Callee	resetStatus		32143	0					
ANR	32149	Identifier	resetStatus		32143	0					
ANR	32150	ArgumentList			32143	1					
ANR	32151	ReturnType	bool WSF_CALL		32143	1					
ANR	32152	Identifier	AviaryCommon :: JobDetails :: setStatusNil		32143	2					
ANR	32153	ParameterList			32143	3					
ANR	32154	CFGEntryNode	ENTRY		32143		True				
ANR	32155	CFGExitNode	EXIT		32143		True				
ANR	32156	Symbol	resetStatus		32143						
ANR	32157	Function	AviaryCommon :: JobDetails :: getProperty3	828:38:32984:33109							
ANR	32158	FunctionDef	AviaryCommon :: JobDetails :: getProperty3 ()		32157	0					
ANR	32159	CompoundStatement		830:12:33058:33109	32157	0					
ANR	32160	ReturnStatement	return getDetails ( ) ;	831:16:33076:33095	32157	0	True				
ANR	32161	CallExpression	getDetails ( )		32157	0					
ANR	32162	Callee	getDetails		32157	0					
ANR	32163	Identifier	getDetails		32157	0					
ANR	32164	ArgumentList			32157	1					
ANR	32165	ReturnType	WSF_CALL		32157	1					
ANR	32166	Identifier	AviaryCommon :: JobDetails :: getProperty3		32157	2					
ANR	32167	ParameterList			32157	3					
ANR	32168	CFGEntryNode	ENTRY		32157		True				
ANR	32169	CFGExitNode	EXIT		32157		True				
ANR	32170	Symbol	getDetails		32157						
ANR	32171	Function	AviaryCommon :: JobDetails :: getDetails	837:38:33217:33346							
ANR	32172	FunctionDef	AviaryCommon :: JobDetails :: getDetails ()		32171	0					
ANR	32173	CompoundStatement		839:13:33290:33346	32171	0					
ANR	32174	ReturnStatement	return property_Details ;	840:16:33308:33331	32171	0	True				
ANR	32175	Identifier	property_Details		32171	0					
ANR	32176	ReturnType	WSF_CALL		32171	1					
ANR	32177	Identifier	AviaryCommon :: JobDetails :: getDetails		32171	2					
ANR	32178	ParameterList			32171	3					
ANR	32179	CFGEntryNode	ENTRY		32171		True				
ANR	32180	CFGExitNode	EXIT		32171		True				
ANR	32181	Symbol	property_Details		32171						
ANR	32182	Function	AviaryCommon :: JobDetails :: setDetails	846:12:33427:34222							
ANR	32183	FunctionDef	AviaryCommon :: JobDetails :: setDetails (AviaryCommon :: Attributes * arg_Details)		32182	0					
ANR	32184	CompoundStatement		849:13:33564:34222	32182	0					
ANR	32185	IfStatement	if ( isValidDetails && arg_Details == property_Details )		32182	0					
ANR	32186	Condition	isValidDetails && arg_Details == property_Details	852:19:33603:33675	32182	0	True				
ANR	32187	AndExpression	isValidDetails && arg_Details == property_Details		32182	0		&&			
ANR	32188	Identifier	isValidDetails		32182	0					
ANR	32189	EqualityExpression	arg_Details == property_Details		32182	1		==			
ANR	32190	Identifier	arg_Details		32182	0					
ANR	32191	Identifier	property_Details		32182	1					
ANR	32192	CompoundStatement		6:16:129:129	32182	1					
ANR	32193	ReturnStatement	return true ;	856:20:33737:33748	32182	0	True				
ANR	32194	Identifier	true		32182	0					
ANR	32195	ExpressionStatement	resetDetails ( )	862:16:33820:33834	32182	1	True				
ANR	32196	CallExpression	resetDetails ( )		32182	0					
ANR	32197	Callee	resetDetails		32182	0					
ANR	32198	Identifier	resetDetails		32182	0					
ANR	32199	ArgumentList			32182	1					
ANR	32200	IfStatement	if ( NULL == arg_Details )		32182	2					
ANR	32201	Condition	NULL == arg_Details	865:23:33877:33895	32182	0	True				
ANR	32202	EqualityExpression	NULL == arg_Details		32182	0		==			
ANR	32203	Identifier	NULL		32182	0					
ANR	32204	Identifier	arg_Details		32182	1					
ANR	32205	CompoundStatement		19:16:375:375	32182	1					
ANR	32206	ReturnStatement	return true ;	869:20:34008:34019	32182	0	True				
ANR	32207	Identifier	true		32182	0					
ANR	32208	ExpressionStatement	property_Details = arg_Details	872:24:34080:34110	32182	3	True				
ANR	32209	AssignmentExpression	property_Details = arg_Details		32182	0		=			
ANR	32210	Identifier	property_Details		32182	0					
ANR	32211	Identifier	arg_Details		32182	1					
ANR	32212	ExpressionStatement	isValidDetails = true	873:24:34136:34157	32182	4	True				
ANR	32213	AssignmentExpression	isValidDetails = true		32182	0		=			
ANR	32214	Identifier	isValidDetails		32182	0					
ANR	32215	Identifier	true		32182	1					
ANR	32216	ReturnStatement	return true ;	875:16:34196:34207	32182	5	True				
ANR	32217	Identifier	true		32182	0					
ANR	32218	ReturnType	bool WSF_CALL		32182	1					
ANR	32219	Identifier	AviaryCommon :: JobDetails :: setDetails		32182	2					
ANR	32220	ParameterList	AviaryCommon :: Attributes * arg_Details		32182	3					
ANR	32221	Parameter	AviaryCommon :: Attributes * arg_Details	848:20:33511:33548	32182	0	True				
ANR	32222	ParameterType	AviaryCommon :: Attributes *		32182	0					
ANR	32223	Identifier	arg_Details		32182	1					
ANR	32224	CFGEntryNode	ENTRY		32182		True				
ANR	32225	CFGExitNode	EXIT		32182		True				
ANR	32226	Symbol	NULL		32182						
ANR	32227	Symbol	true		32182						
ANR	32228	Symbol	property_Details		32182						
ANR	32229	Symbol	arg_Details		32182						
ANR	32230	Symbol	isValidDetails		32182						
ANR	32231	Function	AviaryCommon :: JobDetails :: resetDetails	883:11:34316:34829							
ANR	32232	FunctionDef	AviaryCommon :: JobDetails :: resetDetails ()		32231	0					
ANR	32233	CompoundStatement		885:11:34393:34829	32231	0					
ANR	32234	IdentifierDeclStatement	int i = 0 ;	886:15:34410:34419	32231	0	True				
ANR	32235	IdentifierDecl	i = 0		32231	0					
ANR	32236	IdentifierDeclType	int		32231	0					
ANR	32237	Identifier	i		32231	1					
ANR	32238	AssignmentExpression	i = 0		32231	2		=			
ANR	32239	Identifier	i		32231	0					
ANR	32240	PrimaryExpression	0		32231	1					
ANR	32241	IdentifierDeclStatement	int count = 0 ;	887:15:34436:34449	32231	1	True				
ANR	32242	IdentifierDecl	count = 0		32231	0					
ANR	32243	IdentifierDeclType	int		32231	0					
ANR	32244	Identifier	count		32231	1					
ANR	32245	AssignmentExpression	count = 0		32231	2		=			
ANR	32246	Identifier	count		32231	0					
ANR	32247	PrimaryExpression	0		32231	1					
ANR	32248	IfStatement	if ( property_Details != NULL )		32231	2					
ANR	32249	Condition	property_Details != NULL	894:19:34519:34542	32231	0	True				
ANR	32250	EqualityExpression	property_Details != NULL		32231	0		!=			
ANR	32251	Identifier	property_Details		32231	0					
ANR	32252	Identifier	NULL		32231	1					
ANR	32253	CompoundStatement		11:16:167:167	32231	1					
ANR	32254	Statement	delete	898:25:34628:34633	32231	0	True				
ANR	32255	ExpressionStatement	property_Details	898:33:34636:34652	32231	1	True				
ANR	32256	Identifier	property_Details		32231	0					
ANR	32257	ExpressionStatement	isValidDetails = false	906:15:34765:34787	32231	3	True				
ANR	32258	AssignmentExpression	isValidDetails = false		32231	0		=			
ANR	32259	Identifier	isValidDetails		32231	0					
ANR	32260	Identifier	false		32231	1					
ANR	32261	ReturnStatement	return true ;	907:15:34805:34816	32231	4	True				
ANR	32262	Identifier	true		32231	0					
ANR	32263	ReturnType	bool WSF_CALL		32231	1					
ANR	32264	Identifier	AviaryCommon :: JobDetails :: resetDetails		32231	2					
ANR	32265	ParameterList			32231	3					
ANR	32266	CFGEntryNode	ENTRY		32231		True				
ANR	32267	CFGExitNode	EXIT		32231		True				
ANR	32268	Symbol	NULL		32231						
ANR	32269	Symbol	count		32231						
ANR	32270	Symbol	false		32231						
ANR	32271	Symbol	true		32231						
ANR	32272	Symbol	i		32231						
ANR	32273	Symbol	property_Details		32231						
ANR	32274	Symbol	isValidDetails		32231						
ANR	32275	Function	AviaryCommon :: JobDetails :: isDetailsNil	913:11:34917:35046							
ANR	32276	FunctionDef	AviaryCommon :: JobDetails :: isDetailsNil ()		32275	0					
ANR	32277	CompoundStatement		915:11:34994:35046	32275	0					
ANR	32278	ReturnStatement	return ! isValidDetails ;	916:15:35011:35033	32275	0	True				
ANR	32279	UnaryOperationExpression	! isValidDetails		32275	0					
ANR	32280	UnaryOperator	!		32275	0					
ANR	32281	Identifier	isValidDetails		32275	1					
ANR	32282	ReturnType	bool WSF_CALL		32275	1					
ANR	32283	Identifier	AviaryCommon :: JobDetails :: isDetailsNil		32275	2					
ANR	32284	ParameterList			32275	3					
ANR	32285	CFGEntryNode	ENTRY		32275		True				
ANR	32286	CFGExitNode	EXIT		32275		True				
ANR	32287	Symbol	isValidDetails		32275						
ANR	32288	Function	AviaryCommon :: JobDetails :: setDetailsNil	922:11:35154:35283							
ANR	32289	FunctionDef	AviaryCommon :: JobDetails :: setDetailsNil ()		32288	0					
ANR	32290	CompoundStatement		924:11:35232:35283	32288	0					
ANR	32291	ReturnStatement	return resetDetails ( ) ;	925:15:35249:35270	32288	0	True				
ANR	32292	CallExpression	resetDetails ( )		32288	0					
ANR	32293	Callee	resetDetails		32288	0					
ANR	32294	Identifier	resetDetails		32288	0					
ANR	32295	ArgumentList			32288	1					
ANR	32296	ReturnType	bool WSF_CALL		32288	1					
ANR	32297	Identifier	AviaryCommon :: JobDetails :: setDetailsNil		32288	2					
ANR	32298	ParameterList			32288	3					
ANR	32299	CFGEntryNode	ENTRY		32288		True				
ANR	32300	CFGExitNode	EXIT		32288		True				
ANR	32301	Symbol	resetDetails		32288						
