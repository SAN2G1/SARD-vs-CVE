command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5223010	File	data/converged/CVE-2011-4930_htcondor/start_analyzer.cpp								
ANR	5223011	DeclStmt									
ANR	5223012	Decl							void	void ( char * myName )	usage
ANR	5223013	DeclStmt									
ANR	5223014	Decl							int	"int ( char * fileName , char * resultString , int size )"	readFileIntoString
ANR	5223015	Function	main	27:0:961:1847							
ANR	5223016	FunctionDef	"main (int argc , char * argv [ ])"		5223015	0					
ANR	5223017	CompoundStatement		28:0:995:1847	5223015	0					
ANR	5223018	IdentifierDeclStatement	const int SIZE = 4096 ;	29:1:998:1019	5223015	0	True				
ANR	5223019	IdentifierDecl	SIZE = 4096		5223015	0					
ANR	5223020	IdentifierDeclType	const int		5223015	0					
ANR	5223021	Identifier	SIZE		5223015	1					
ANR	5223022	AssignmentExpression	SIZE = 4096		5223015	2		=			
ANR	5223023	Identifier	SIZE		5223015	0					
ANR	5223024	PrimaryExpression	4096		5223015	1					
ANR	5223025	IfStatement	if ( argc != 3 )		5223015	1					
ANR	5223026	Condition	argc != 3	31:5:1027:1035	5223015	0	True				
ANR	5223027	EqualityExpression	argc != 3		5223015	0		!=			
ANR	5223028	Identifier	argc		5223015	0					
ANR	5223029	PrimaryExpression	3		5223015	1					
ANR	5223030	CompoundStatement		4:17:43:43	5223015	1					
ANR	5223031	ExpressionStatement	usage ( argv [ 0 ] )	32:2:1043:1059	5223015	0	True				
ANR	5223032	CallExpression	usage ( argv [ 0 ] )		5223015	0					
ANR	5223033	Callee	usage		5223015	0					
ANR	5223034	Identifier	usage		5223015	0					
ANR	5223035	ArgumentList	argv [ 0 ]		5223015	1					
ANR	5223036	Argument	argv [ 0 ]		5223015	0					
ANR	5223037	ArrayIndexing	argv [ 0 ]		5223015	0					
ANR	5223038	Identifier	argv		5223015	0					
ANR	5223039	PrimaryExpression	0		5223015	1					
ANR	5223040	ExpressionStatement	exit ( 1 )	33:2:1065:1072	5223015	1	True				
ANR	5223041	CallExpression	exit ( 1 )		5223015	0					
ANR	5223042	Callee	exit		5223015	0					
ANR	5223043	Identifier	exit		5223015	0					
ANR	5223044	ArgumentList	1		5223015	1					
ANR	5223045	Argument	1		5223015	0					
ANR	5223046	PrimaryExpression	1		5223015	0					
ANR	5223047	IdentifierDeclStatement	char jobString [ SIZE ] ;	36:1:1079:1099	5223015	2	True				
ANR	5223048	IdentifierDecl	jobString [ SIZE ]		5223015	0					
ANR	5223049	IdentifierDeclType	char [ SIZE ]		5223015	0					
ANR	5223050	Identifier	jobString		5223015	1					
ANR	5223051	Identifier	SIZE		5223015	2					
ANR	5223052	IdentifierDeclStatement	char machineString [ SIZE ] ;	37:1:1102:1126	5223015	3	True				
ANR	5223053	IdentifierDecl	machineString [ SIZE ]		5223015	0					
ANR	5223054	IdentifierDeclType	char [ SIZE ]		5223015	0					
ANR	5223055	Identifier	machineString		5223015	1					
ANR	5223056	Identifier	SIZE		5223015	2					
ANR	5223057	ExpressionStatement	"readFileIntoString ( argv [ 2 ] , machineString , SIZE )"	39:1:1130:1180	5223015	4	True				
ANR	5223058	CallExpression	"readFileIntoString ( argv [ 2 ] , machineString , SIZE )"		5223015	0					
ANR	5223059	Callee	readFileIntoString		5223015	0					
ANR	5223060	Identifier	readFileIntoString		5223015	0					
ANR	5223061	ArgumentList	argv [ 2 ]		5223015	1					
ANR	5223062	Argument	argv [ 2 ]		5223015	0					
ANR	5223063	ArrayIndexing	argv [ 2 ]		5223015	0					
ANR	5223064	Identifier	argv		5223015	0					
ANR	5223065	PrimaryExpression	2		5223015	1					
ANR	5223066	Argument	machineString		5223015	1					
ANR	5223067	Identifier	machineString		5223015	0					
ANR	5223068	Argument	SIZE		5223015	2					
ANR	5223069	Identifier	SIZE		5223015	0					
ANR	5223070	ExpressionStatement	"readFileIntoString ( argv [ 1 ] , jobString , SIZE )"	41:1:1184:1230	5223015	5	True				
ANR	5223071	CallExpression	"readFileIntoString ( argv [ 1 ] , jobString , SIZE )"		5223015	0					
ANR	5223072	Callee	readFileIntoString		5223015	0					
ANR	5223073	Identifier	readFileIntoString		5223015	0					
ANR	5223074	ArgumentList	argv [ 1 ]		5223015	1					
ANR	5223075	Argument	argv [ 1 ]		5223015	0					
ANR	5223076	ArrayIndexing	argv [ 1 ]		5223015	0					
ANR	5223077	Identifier	argv		5223015	0					
ANR	5223078	PrimaryExpression	1		5223015	1					
ANR	5223079	Argument	jobString		5223015	1					
ANR	5223080	Identifier	jobString		5223015	0					
ANR	5223081	Argument	SIZE		5223015	2					
ANR	5223082	Identifier	SIZE		5223015	0					
ANR	5223083	IdentifierDeclStatement	"classad :: ClassAd * jobAd , * machineAd ;"	43:1:1234:1269	5223015	6	True				
ANR	5223084	IdentifierDecl	* jobAd		5223015	0					
ANR	5223085	IdentifierDeclType	classad :: ClassAd *		5223015	0					
ANR	5223086	Identifier	jobAd		5223015	1					
ANR	5223087	IdentifierDecl	* machineAd		5223015	1					
ANR	5223088	IdentifierDeclType	classad :: ClassAd *		5223015	0					
ANR	5223089	Identifier	machineAd		5223015	1					
ANR	5223090	IdentifierDeclStatement	classad :: ClassAdParser parser ;	44:1:1272:1301	5223015	7	True				
ANR	5223091	IdentifierDecl	parser		5223015	0					
ANR	5223092	IdentifierDeclType	classad :: ClassAdParser		5223015	0					
ANR	5223093	Identifier	parser		5223015	1					
ANR	5223094	IdentifierDeclStatement	ClassAdAnalyzer analyzer ;	45:1:1304:1328	5223015	8	True				
ANR	5223095	IdentifierDecl	analyzer		5223015	0					
ANR	5223096	IdentifierDeclType	ClassAdAnalyzer		5223015	0					
ANR	5223097	Identifier	analyzer		5223015	1					
ANR	5223098	IdentifierDeclStatement	string buffer ;	46:1:1331:1344	5223015	9	True				
ANR	5223099	IdentifierDecl	buffer		5223015	0					
ANR	5223100	IdentifierDeclType	string		5223015	0					
ANR	5223101	Identifier	buffer		5223015	1					
ANR	5223102	IdentifierDeclStatement	string start = ATTR_START ;	47:1:1347:1372	5223015	10	True				
ANR	5223103	IdentifierDecl	start = ATTR_START		5223015	0					
ANR	5223104	IdentifierDeclType	string		5223015	0					
ANR	5223105	Identifier	start		5223015	1					
ANR	5223106	AssignmentExpression	start = ATTR_START		5223015	2		=			
ANR	5223107	Identifier	ATTR_START		5223015	0					
ANR	5223108	Identifier	ATTR_START		5223015	1					
ANR	5223109	IfStatement	if ( ! ( jobAd = parser . ParseClassAd ( jobString ) ) )		5223015	11					
ANR	5223110	Condition	! ( jobAd = parser . ParseClassAd ( jobString ) )	50:5:1400:1444	5223015	0	True				
ANR	5223111	UnaryOperationExpression	! ( jobAd = parser . ParseClassAd ( jobString ) )		5223015	0					
ANR	5223112	UnaryOperator	!		5223015	0					
ANR	5223113	AssignmentExpression	jobAd = parser . ParseClassAd ( jobString )		5223015	1		=			
ANR	5223114	Identifier	jobAd		5223015	0					
ANR	5223115	CallExpression	parser . ParseClassAd ( jobString )		5223015	1					
ANR	5223116	Callee	parser . ParseClassAd		5223015	0					
ANR	5223117	MemberAccess	parser . ParseClassAd		5223015	0					
ANR	5223118	Identifier	parser		5223015	0					
ANR	5223119	Identifier	ParseClassAd		5223015	1					
ANR	5223120	ArgumentList	jobString		5223015	1					
ANR	5223121	Argument	jobString		5223015	0					
ANR	5223122	Identifier	jobString		5223015	0					
ANR	5223123	CompoundStatement		23:53:452:452	5223015	1					
ANR	5223124	ExpressionStatement	"cerr << ""error parsing job ad\\n"" << endl"	51:2:1452:1492	5223015	0	True				
ANR	5223125	ShiftExpression	"cerr << ""error parsing job ad\\n"" << endl"		5223015	0		<<			
ANR	5223126	Identifier	cerr		5223015	0					
ANR	5223127	ShiftExpression	"""error parsing job ad\\n"" << endl"		5223015	1		<<			
ANR	5223128	PrimaryExpression	"""error parsing job ad\\n"""		5223015	0					
ANR	5223129	Identifier	endl		5223015	1					
ANR	5223130	ExpressionStatement	exit ( 1 )	52:2:1496:1503	5223015	1	True				
ANR	5223131	CallExpression	exit ( 1 )		5223015	0					
ANR	5223132	Callee	exit		5223015	0					
ANR	5223133	Identifier	exit		5223015	0					
ANR	5223134	ArgumentList	1		5223015	1					
ANR	5223135	Argument	1		5223015	0					
ANR	5223136	PrimaryExpression	1		5223015	0					
ANR	5223137	IfStatement	if ( ! ( machineAd = parser . ParseClassAd ( machineString ) ) )		5223015	12					
ANR	5223138	Condition	! ( machineAd = parser . ParseClassAd ( machineString ) )	56:5:1538:1590	5223015	0	True				
ANR	5223139	UnaryOperationExpression	! ( machineAd = parser . ParseClassAd ( machineString ) )		5223015	0					
ANR	5223140	UnaryOperator	!		5223015	0					
ANR	5223141	AssignmentExpression	machineAd = parser . ParseClassAd ( machineString )		5223015	1		=			
ANR	5223142	Identifier	machineAd		5223015	0					
ANR	5223143	CallExpression	parser . ParseClassAd ( machineString )		5223015	1					
ANR	5223144	Callee	parser . ParseClassAd		5223015	0					
ANR	5223145	MemberAccess	parser . ParseClassAd		5223015	0					
ANR	5223146	Identifier	parser		5223015	0					
ANR	5223147	Identifier	ParseClassAd		5223015	1					
ANR	5223148	ArgumentList	machineString		5223015	1					
ANR	5223149	Argument	machineString		5223015	0					
ANR	5223150	Identifier	machineString		5223015	0					
ANR	5223151	CompoundStatement		29:61:598:598	5223015	1					
ANR	5223152	ExpressionStatement	"cerr << ""error parsing machine ad\\n"" << endl"	57:2:1598:1642	5223015	0	True				
ANR	5223153	ShiftExpression	"cerr << ""error parsing machine ad\\n"" << endl"		5223015	0		<<			
ANR	5223154	Identifier	cerr		5223015	0					
ANR	5223155	ShiftExpression	"""error parsing machine ad\\n"" << endl"		5223015	1		<<			
ANR	5223156	PrimaryExpression	"""error parsing machine ad\\n"""		5223015	0					
ANR	5223157	Identifier	endl		5223015	1					
ANR	5223158	ExpressionStatement	exit ( 1 )	58:2:1646:1653	5223015	1	True				
ANR	5223159	CallExpression	exit ( 1 )		5223015	0					
ANR	5223160	Callee	exit		5223015	0					
ANR	5223161	Identifier	exit		5223015	0					
ANR	5223162	ArgumentList	1		5223015	1					
ANR	5223163	Argument	1		5223015	0					
ANR	5223164	PrimaryExpression	1		5223015	0					
ANR	5223165	IfStatement	"if ( ! ( analyzer . AnalyzeExprToBuffer ( machineAd , jobAd , start , buffer ) ) )"		5223015	13					
ANR	5223166	Condition	"! ( analyzer . AnalyzeExprToBuffer ( machineAd , jobAd , start , buffer ) )"	62:5:1681:1759	5223015	0	True				
ANR	5223167	UnaryOperationExpression	"! ( analyzer . AnalyzeExprToBuffer ( machineAd , jobAd , start , buffer ) )"		5223015	0					
ANR	5223168	UnaryOperator	!		5223015	0					
ANR	5223169	CallExpression	"analyzer . AnalyzeExprToBuffer ( machineAd , jobAd , start , buffer )"		5223015	1					
ANR	5223170	Callee	analyzer . AnalyzeExprToBuffer		5223015	0					
ANR	5223171	MemberAccess	analyzer . AnalyzeExprToBuffer		5223015	0					
ANR	5223172	Identifier	analyzer		5223015	0					
ANR	5223173	Identifier	AnalyzeExprToBuffer		5223015	1					
ANR	5223174	ArgumentList	machineAd		5223015	1					
ANR	5223175	Argument	machineAd		5223015	0					
ANR	5223176	Identifier	machineAd		5223015	0					
ANR	5223177	Argument	jobAd		5223015	1					
ANR	5223178	Identifier	jobAd		5223015	0					
ANR	5223179	Argument	start		5223015	2					
ANR	5223180	Identifier	start		5223015	0					
ANR	5223181	Argument	buffer		5223015	3					
ANR	5223182	Identifier	buffer		5223015	0					
ANR	5223183	CompoundStatement		36:24:767:767	5223015	1					
ANR	5223184	ExpressionStatement	"cerr << ""error analyzing expression\\n"" << endl"	64:2:1767:1813	5223015	0	True				
ANR	5223185	ShiftExpression	"cerr << ""error analyzing expression\\n"" << endl"		5223015	0		<<			
ANR	5223186	Identifier	cerr		5223015	0					
ANR	5223187	ShiftExpression	"""error analyzing expression\\n"" << endl"		5223015	1		<<			
ANR	5223188	PrimaryExpression	"""error analyzing expression\\n"""		5223015	0					
ANR	5223189	Identifier	endl		5223015	1					
ANR	5223190	ExpressionStatement	exit ( 1 )	65:2:1817:1824	5223015	1	True				
ANR	5223191	CallExpression	exit ( 1 )		5223015	0					
ANR	5223192	Callee	exit		5223015	0					
ANR	5223193	Identifier	exit		5223015	0					
ANR	5223194	ArgumentList	1		5223015	1					
ANR	5223195	Argument	1		5223015	0					
ANR	5223196	PrimaryExpression	1		5223015	0					
ANR	5223197	ExpressionStatement	cout << buffer	68:1:1831:1845	5223015	14	True				
ANR	5223198	ShiftExpression	cout << buffer		5223015	0		<<			
ANR	5223199	Identifier	cout		5223015	0					
ANR	5223200	Identifier	buffer		5223015	1					
ANR	5223201	ReturnType	int		5223015	1					
ANR	5223202	Identifier	main		5223015	2					
ANR	5223203	ParameterList	"int argc , char * argv [ ]"		5223015	3					
ANR	5223204	Parameter	int argc	27:10:971:978	5223015	0	True				
ANR	5223205	ParameterType	int		5223015	0					
ANR	5223206	Identifier	argc		5223015	1					
ANR	5223207	Parameter	char * argv [ ]	27:20:981:992	5223015	1	True				
ANR	5223208	ParameterType	char * [ ]		5223015	0					
ANR	5223209	Identifier	argv		5223015	1					
ANR	5223210	CFGEntryNode	ENTRY		5223015		True				
ANR	5223211	CFGExitNode	EXIT		5223015		True				
ANR	5223212	Symbol	argc		5223015						
ANR	5223213	Symbol	ATTR_START		5223015						
ANR	5223214	Symbol	SIZE		5223015						
ANR	5223215	Symbol	start		5223015						
ANR	5223216	Symbol	jobAd		5223015						
ANR	5223217	Symbol	* argv		5223015						
ANR	5223218	Symbol	argv		5223015						
ANR	5223219	Symbol	parser . ParseClassAd		5223015						
ANR	5223220	Symbol	analyzer . AnalyzeExprToBuffer		5223015						
ANR	5223221	Symbol	parser		5223015						
ANR	5223222	Symbol	analyzer		5223015						
ANR	5223223	Symbol	machineString		5223015						
ANR	5223224	Symbol	jobString		5223015						
ANR	5223225	Symbol	machineAd		5223015						
ANR	5223226	Symbol	buffer		5223015						
ANR	5223227	Function	usage	71:0:1850:1937							
ANR	5223228	FunctionDef	usage (char * myName)		5223227	0					
ANR	5223229	CompoundStatement		71:27:1877:1937	5223227	0					
ANR	5223230	ExpressionStatement	"printf ( ""Usage: %s <jobfile> <machinefile>\\n"" , myName )"	72:1:1880:1935	5223227	0	True				
ANR	5223231	CallExpression	"printf ( ""Usage: %s <jobfile> <machinefile>\\n"" , myName )"		5223227	0					
ANR	5223232	Callee	printf		5223227	0					
ANR	5223233	Identifier	printf		5223227	0					
ANR	5223234	ArgumentList	"""Usage: %s <jobfile> <machinefile>\\n"""		5223227	1					
ANR	5223235	Argument	"""Usage: %s <jobfile> <machinefile>\\n"""		5223227	0					
ANR	5223236	PrimaryExpression	"""Usage: %s <jobfile> <machinefile>\\n"""		5223227	0					
ANR	5223237	Argument	myName		5223227	1					
ANR	5223238	Identifier	myName		5223227	0					
ANR	5223239	ReturnType	void		5223227	1					
ANR	5223240	Identifier	usage		5223227	2					
ANR	5223241	ParameterList	char * myName		5223227	3					
ANR	5223242	Parameter	char * myName	71:12:1862:1873	5223227	0	True				
ANR	5223243	ParameterType	char *		5223227	0					
ANR	5223244	Identifier	myName		5223227	1					
ANR	5223245	CFGEntryNode	ENTRY		5223227		True				
ANR	5223246	CFGExitNode	EXIT		5223227		True				
ANR	5223247	Symbol	myName		5223227						
ANR	5223248	Function	readFileIntoString	75:0:1940:2393							
ANR	5223249	FunctionDef	"readFileIntoString (char * fileName , char * resultString , int size)"		5223248	0					
ANR	5223250	CompoundStatement		75:68:2008:2393	5223248	0					
ANR	5223251	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( fileName , O_RDONLY ) ;"	77:2:2072:2125	5223248	0	True				
ANR	5223252	IdentifierDecl	"fd = safe_open_wrapper_follow ( fileName , O_RDONLY )"		5223248	0					
ANR	5223253	IdentifierDeclType	int		5223248	0					
ANR	5223254	Identifier	fd		5223248	1					
ANR	5223255	AssignmentExpression	"fd = safe_open_wrapper_follow ( fileName , O_RDONLY )"		5223248	2		=			
ANR	5223256	Identifier	fd		5223248	0					
ANR	5223257	CallExpression	"safe_open_wrapper_follow ( fileName , O_RDONLY )"		5223248	1					
ANR	5223258	Callee	safe_open_wrapper_follow		5223248	0					
ANR	5223259	Identifier	safe_open_wrapper_follow		5223248	0					
ANR	5223260	ArgumentList	fileName		5223248	1					
ANR	5223261	Argument	fileName		5223248	0					
ANR	5223262	Identifier	fileName		5223248	0					
ANR	5223263	Argument	O_RDONLY		5223248	1					
ANR	5223264	Identifier	O_RDONLY		5223248	0					
ANR	5223265	IfStatement	if ( fd < 0 )		5223248	1					
ANR	5223266	Condition	fd < 0	78:5:2132:2137	5223248	0	True				
ANR	5223267	RelationalExpression	fd < 0		5223248	0		<			
ANR	5223268	Identifier	fd		5223248	0					
ANR	5223269	PrimaryExpression	0		5223248	1					
ANR	5223270	CompoundStatement		4:12:130:130	5223248	1					
ANR	5223271	ExpressionStatement	"cerr << ""couldn't open"" << fileName << endl"	79:4:2145:2188	5223248	0	True				
ANR	5223272	ShiftExpression	"cerr << ""couldn't open"" << fileName << endl"		5223248	0		<<			
ANR	5223273	Identifier	cerr		5223248	0					
ANR	5223274	ShiftExpression	"""couldn't open"" << fileName << endl"		5223248	1		<<			
ANR	5223275	PrimaryExpression	"""couldn't open"""		5223248	0					
ANR	5223276	ShiftExpression	fileName << endl		5223248	1		<<			
ANR	5223277	Identifier	fileName		5223248	0					
ANR	5223278	Identifier	endl		5223248	1					
ANR	5223279	ExpressionStatement	exit ( 1 )	80:4:2194:2201	5223248	1	True				
ANR	5223280	CallExpression	exit ( 1 )		5223248	0					
ANR	5223281	Callee	exit		5223248	0					
ANR	5223282	Identifier	exit		5223248	0					
ANR	5223283	ArgumentList	1		5223248	1					
ANR	5223284	Argument	1		5223248	0					
ANR	5223285	PrimaryExpression	1		5223248	0					
ANR	5223286	IdentifierDeclStatement	"int nread = read ( fd , resultString , size ) ;"	82:2:2209:2249	5223248	2	True				
ANR	5223287	IdentifierDecl	"nread = read ( fd , resultString , size )"		5223248	0					
ANR	5223288	IdentifierDeclType	int		5223248	0					
ANR	5223289	Identifier	nread		5223248	1					
ANR	5223290	AssignmentExpression	"nread = read ( fd , resultString , size )"		5223248	2		=			
ANR	5223291	Identifier	nread		5223248	0					
ANR	5223292	CallExpression	"read ( fd , resultString , size )"		5223248	1					
ANR	5223293	Callee	read		5223248	0					
ANR	5223294	Identifier	read		5223248	0					
ANR	5223295	ArgumentList	fd		5223248	1					
ANR	5223296	Argument	fd		5223248	0					
ANR	5223297	Identifier	fd		5223248	0					
ANR	5223298	Argument	resultString		5223248	1					
ANR	5223299	Identifier	resultString		5223248	0					
ANR	5223300	Argument	size		5223248	2					
ANR	5223301	Identifier	size		5223248	0					
ANR	5223302	IfStatement	if ( nread < 0 )		5223248	3					
ANR	5223303	Condition	nread < 0	83:5:2256:2264	5223248	0	True				
ANR	5223304	RelationalExpression	nread < 0		5223248	0		<			
ANR	5223305	Identifier	nread		5223248	0					
ANR	5223306	PrimaryExpression	0		5223248	1					
ANR	5223307	CompoundStatement		9:15:257:257	5223248	1					
ANR	5223308	ExpressionStatement	"cerr << ""couldn't read"" << fileName << endl"	84:4:2272:2315	5223248	0	True				
ANR	5223309	ShiftExpression	"cerr << ""couldn't read"" << fileName << endl"		5223248	0		<<			
ANR	5223310	Identifier	cerr		5223248	0					
ANR	5223311	ShiftExpression	"""couldn't read"" << fileName << endl"		5223248	1		<<			
ANR	5223312	PrimaryExpression	"""couldn't read"""		5223248	0					
ANR	5223313	ShiftExpression	fileName << endl		5223248	1		<<			
ANR	5223314	Identifier	fileName		5223248	0					
ANR	5223315	Identifier	endl		5223248	1					
ANR	5223316	ExpressionStatement	exit ( 1 )	85:4:2321:2328	5223248	1	True				
ANR	5223317	CallExpression	exit ( 1 )		5223248	0					
ANR	5223318	Callee	exit		5223248	0					
ANR	5223319	Identifier	exit		5223248	0					
ANR	5223320	ArgumentList	1		5223248	1					
ANR	5223321	Argument	1		5223248	0					
ANR	5223322	PrimaryExpression	1		5223248	0					
ANR	5223323	ExpressionStatement	close ( fd )	87:2:2340:2349	5223248	4	True				
ANR	5223324	CallExpression	close ( fd )		5223248	0					
ANR	5223325	Callee	close		5223248	0					
ANR	5223326	Identifier	close		5223248	0					
ANR	5223327	ArgumentList	fd		5223248	1					
ANR	5223328	Argument	fd		5223248	0					
ANR	5223329	Identifier	fd		5223248	0					
ANR	5223330	ExpressionStatement	resultString [ nread ] = '\\0'	88:2:2353:2379	5223248	5	True				
ANR	5223331	AssignmentExpression	resultString [ nread ] = '\\0'		5223248	0		=			
ANR	5223332	ArrayIndexing	resultString [ nread ]		5223248	0					
ANR	5223333	Identifier	resultString		5223248	0					
ANR	5223334	Identifier	nread		5223248	1					
ANR	5223335	PrimaryExpression	'\\0'		5223248	1					
ANR	5223336	ReturnStatement	return 0 ;	89:2:2383:2391	5223248	6	True				
ANR	5223337	PrimaryExpression	0		5223248	0					
ANR	5223338	ReturnType	int		5223248	1					
ANR	5223339	Identifier	readFileIntoString		5223248	2					
ANR	5223340	ParameterList	"char * fileName , char * resultString , int size"		5223248	3					
ANR	5223341	Parameter	char * fileName	75:23:1963:1976	5223248	0	True				
ANR	5223342	ParameterType	char *		5223248	0					
ANR	5223343	Identifier	fileName		5223248	1					
ANR	5223344	Parameter	char * resultString	75:39:1979:1996	5223248	1	True				
ANR	5223345	ParameterType	char *		5223248	0					
ANR	5223346	Identifier	resultString		5223248	1					
ANR	5223347	Parameter	int size	75:59:1999:2006	5223248	2	True				
ANR	5223348	ParameterType	int		5223248	0					
ANR	5223349	Identifier	size		5223248	1					
ANR	5223350	CFGEntryNode	ENTRY		5223248		True				
ANR	5223351	CFGExitNode	EXIT		5223248		True				
ANR	5223352	Symbol	fileName		5223248						
ANR	5223353	Symbol	O_RDONLY		5223248						
ANR	5223354	Symbol	safe_open_wrapper_follow		5223248						
ANR	5223355	Symbol	read		5223248						
ANR	5223356	Symbol	size		5223248						
ANR	5223357	Symbol	nread		5223248						
ANR	5223358	Symbol	resultString		5223248						
ANR	5223359	Symbol	* nread		5223248						
ANR	5223360	Symbol	fd		5223248						
ANR	5223361	Symbol	* resultString		5223248						
