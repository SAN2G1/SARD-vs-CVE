command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2568571	File	data/converged/CVE-2011-4930_htcondor/src_classad_sink.cpp								
ANR	2568572	DeclStmt									
ANR	2568573	Decl							bool	bool ( const string & )	identifierNeedsQuoting
ANR	2568574	Function	ClassAdUnParser :: ClassAdUnParser	34:0:1039:1147							
ANR	2568575	FunctionDef	ClassAdUnParser :: ClassAdUnParser ()		2568574	0					
ANR	2568576	CompoundStatement		36:0:1075:1147	2568574	0					
ANR	2568577	ExpressionStatement	oldClassAd = false	37:1:1078:1096	2568574	0	True				
ANR	2568578	AssignmentExpression	oldClassAd = false		2568574	0		=			
ANR	2568579	Identifier	oldClassAd		2568574	0					
ANR	2568580	Identifier	false		2568574	1					
ANR	2568581	ExpressionStatement	xmlUnparse = false	38:1:1099:1117	2568574	1	True				
ANR	2568582	AssignmentExpression	xmlUnparse = false		2568574	0		=			
ANR	2568583	Identifier	xmlUnparse		2568574	0					
ANR	2568584	Identifier	false		2568574	1					
ANR	2568585	ExpressionStatement	"delimiter = '\\""'"	39:1:1120:1136	2568574	2	True				
ANR	2568586	AssignmentExpression	"delimiter = '\\""'"		2568574	0		=			
ANR	2568587	Identifier	delimiter		2568574	0					
ANR	2568588	PrimaryExpression	"'\\""'"		2568574	1					
ANR	2568589	ReturnStatement	return ;	40:1:1139:1145	2568574	3	True				
ANR	2568590	Identifier	ClassAdUnParser :: ClassAdUnParser		2568574	1					
ANR	2568591	ParameterList			2568574	2					
ANR	2568592	CFGEntryNode	ENTRY		2568574		True				
ANR	2568593	CFGExitNode	EXIT		2568574		True				
ANR	2568594	Symbol	oldClassAd		2568574						
ANR	2568595	Symbol	delimiter		2568574						
ANR	2568596	Symbol	false		2568574						
ANR	2568597	Symbol	xmlUnparse		2568574						
ANR	2568598	Function	ClassAdUnParser :: ~ClassAdUnParser	44:0:1151:1199							
ANR	2568599	FunctionDef	ClassAdUnParser :: ~ClassAdUnParser ()		2568598	0					
ANR	2568600	CompoundStatement		46:0:1188:1199	2568598	0					
ANR	2568601	ReturnStatement	return ;	47:1:1191:1197	2568598	0	True				
ANR	2568602	Identifier	ClassAdUnParser :: ~ClassAdUnParser		2568598	1					
ANR	2568603	ParameterList			2568598	2					
ANR	2568604	CFGEntryNode	ENTRY		2568598		True				
ANR	2568605	CFGExitNode	EXIT		2568598		True				
ANR	2568606	DeclStmt									
ANR	2568607	Decl							const char	const char * [ ]	ClassAdUnParser :: opString
ANR	2568608	Function	ClassAdUnParser :: setXMLUnparse	90:0:1768:1864							
ANR	2568609	FunctionDef	ClassAdUnParser :: setXMLUnparse (bool doXMLUnparse)		2568608	0					
ANR	2568610	CompoundStatement		92:0:1825:1864	2568608	0					
ANR	2568611	ExpressionStatement	xmlUnparse = doXMLUnparse	93:1:1828:1853	2568608	0	True				
ANR	2568612	AssignmentExpression	xmlUnparse = doXMLUnparse		2568608	0		=			
ANR	2568613	Identifier	xmlUnparse		2568608	0					
ANR	2568614	Identifier	doXMLUnparse		2568608	1					
ANR	2568615	ReturnStatement	return ;	94:1:1856:1862	2568608	1	True				
ANR	2568616	ReturnType	void		2568608	1					
ANR	2568617	Identifier	ClassAdUnParser :: setXMLUnparse		2568608	2					
ANR	2568618	ParameterList	bool doXMLUnparse		2568608	3					
ANR	2568619	Parameter	bool doXMLUnparse	91:14:1805:1821	2568608	0	True				
ANR	2568620	ParameterType	bool		2568608	0					
ANR	2568621	Identifier	doXMLUnparse		2568608	1					
ANR	2568622	CFGEntryNode	ENTRY		2568608		True				
ANR	2568623	CFGExitNode	EXIT		2568608		True				
ANR	2568624	Symbol	doXMLUnparse		2568608						
ANR	2568625	Symbol	xmlUnparse		2568608						
ANR	2568626	Function	ClassAdUnParser :: setDelimiter	97:0:1867:1947							
ANR	2568627	FunctionDef	ClassAdUnParser :: setDelimiter (char delim)		2568626	0					
ANR	2568628	CompoundStatement		99:0:1916:1947	2568626	0					
ANR	2568629	ExpressionStatement	delimiter = delim	100:1:1919:1936	2568626	0	True				
ANR	2568630	AssignmentExpression	delimiter = delim		2568626	0		=			
ANR	2568631	Identifier	delimiter		2568626	0					
ANR	2568632	Identifier	delim		2568626	1					
ANR	2568633	ReturnStatement	return ;	101:1:1939:1945	2568626	1	True				
ANR	2568634	ReturnType	void		2568626	1					
ANR	2568635	Identifier	ClassAdUnParser :: setDelimiter		2568626	2					
ANR	2568636	ParameterList	char delim		2568626	3					
ANR	2568637	Parameter	char delim	98:13:1903:1912	2568626	0	True				
ANR	2568638	ParameterType	char		2568626	0					
ANR	2568639	Identifier	delim		2568626	1					
ANR	2568640	CFGEntryNode	ENTRY		2568626		True				
ANR	2568641	CFGExitNode	EXIT		2568626		True				
ANR	2568642	Symbol	delimiter		2568626						
ANR	2568643	Symbol	delim		2568626						
ANR	2568644	Function	ClassAdUnParser :: Unparse	105:0:1951:5709							
ANR	2568645	FunctionDef	"ClassAdUnParser :: Unparse (string & buffer , const Value & val)"		2568644	0					
ANR	2568646	CompoundStatement		107:0:2018:5709	2568644	0					
ANR	2568647	IdentifierDeclStatement	char tempBuf [ 512 ] ;	108:1:2021:2038	2568644	0	True				
ANR	2568648	IdentifierDecl	tempBuf [ 512 ]		2568644	0					
ANR	2568649	IdentifierDeclType	char [ 512 ]		2568644	0					
ANR	2568650	Identifier	tempBuf		2568644	1					
ANR	2568651	PrimaryExpression	512		2568644	2					
ANR	2568652	SwitchStatement	switch ( val . GetType ( ) )		2568644	1					
ANR	2568653	Condition	val . GetType ( )	109:9:2049:2062	2568644	0	True				
ANR	2568654	CallExpression	val . GetType ( )		2568644	0					
ANR	2568655	Callee	val . GetType		2568644	0					
ANR	2568656	MemberAccess	val . GetType		2568644	0					
ANR	2568657	Identifier	val		2568644	0					
ANR	2568658	Identifier	GetType		2568644	1					
ANR	2568659	ArgumentList			2568644	1					
ANR	2568660	CompoundStatement		3:26:47:47	2568644	1					
ANR	2568661	Label	case Value :: NULL_VALUE :	110:2:2070:2092	2568644	0	True				
ANR	2568662	Identifier	Value :: NULL_VALUE		2568644	0					
ANR	2568663	ExpressionStatement	"buffer += ""(null-value)"""	111:3:2098:2122	2568644	1	True				
ANR	2568664	AssignmentExpression	"buffer += ""(null-value)"""		2568644	0		+=			
ANR	2568665	Identifier	buffer		2568644	0					
ANR	2568666	PrimaryExpression	"""(null-value)"""		2568644	1					
ANR	2568667	BreakStatement	break ;	112:3:2127:2132	2568644	2	True				
ANR	2568668	Label	case Value :: STRING_VALUE :	114:2:2137:2161	2568644	3	True				
ANR	2568669	Identifier	Value :: STRING_VALUE		2568644	0					
ANR	2568670	CompoundStatement		9:3:149:157	2568644	4					
ANR	2568671	IdentifierDeclStatement	string s ;	115:3:2168:2176	2568644	0	True				
ANR	2568672	IdentifierDecl	s		2568644	0					
ANR	2568673	IdentifierDeclType	string		2568644	0					
ANR	2568674	Identifier	s		2568644	1					
ANR	2568675	ExpressionStatement	val . IsStringValue ( s )	116:3:2181:2203	2568644	1	True				
ANR	2568676	CallExpression	val . IsStringValue ( s )		2568644	0					
ANR	2568677	Callee	val . IsStringValue		2568644	0					
ANR	2568678	MemberAccess	val . IsStringValue		2568644	0					
ANR	2568679	Identifier	val		2568644	0					
ANR	2568680	Identifier	IsStringValue		2568644	1					
ANR	2568681	ArgumentList	s		2568644	1					
ANR	2568682	Argument	s		2568644	0					
ANR	2568683	Identifier	s		2568644	0					
ANR	2568684	ExpressionStatement	"buffer += '""'"	117:3:2208:2221	2568644	2	True				
ANR	2568685	AssignmentExpression	"buffer += '""'"		2568644	0		+=			
ANR	2568686	Identifier	buffer		2568644	0					
ANR	2568687	PrimaryExpression	"'""'"		2568644	1					
ANR	2568688	ForStatement	for ( string :: const_iterator itr = s . begin ( ) ; itr != s . end ( ) ; itr ++ )		2568644	3					
ANR	2568689	ForInit	string :: const_iterator itr = s . begin ( ) ;	118:8:2231:2268	2568644	0	True				
ANR	2568690	IdentifierDeclStatement	string :: const_iterator itr = s . begin ( ) ;		2568644	0					
ANR	2568691	IdentifierDecl	itr = s . begin ( )		2568644	0					
ANR	2568692	IdentifierDeclType	string :: const_iterator		2568644	0					
ANR	2568693	Identifier	itr		2568644	1					
ANR	2568694	AssignmentExpression	itr = s . begin ( )		2568644	2		=			
ANR	2568695	Identifier	itr		2568644	0					
ANR	2568696	CallExpression	s . begin ( )		2568644	1					
ANR	2568697	Callee	s . begin		2568644	0					
ANR	2568698	MemberAccess	s . begin		2568644	0					
ANR	2568699	Identifier	s		2568644	0					
ANR	2568700	Identifier	begin		2568644	1					
ANR	2568701	ArgumentList			2568644	1					
ANR	2568702	Condition	itr != s . end ( )	118:47:2270:2282	2568644	1	True				
ANR	2568703	EqualityExpression	itr != s . end ( )		2568644	0		!=			
ANR	2568704	Identifier	itr		2568644	0					
ANR	2568705	CallExpression	s . end ( )		2568644	1					
ANR	2568706	Callee	s . end		2568644	0					
ANR	2568707	MemberAccess	s . end		2568644	0					
ANR	2568708	Identifier	s		2568644	0					
ANR	2568709	Identifier	end		2568644	1					
ANR	2568710	ArgumentList			2568644	1					
ANR	2568711	PostIncDecOperationExpression	itr ++	118:62:2285:2289	2568644	2	True				
ANR	2568712	Identifier	itr		2568644	0					
ANR	2568713	IncDec	++		2568644	1					
ANR	2568714	CompoundStatement		12:70:274:274	2568644	3					
ANR	2568715	IfStatement	if ( * itr == delimiter )		2568644	0					
ANR	2568716	Condition	* itr == delimiter	119:7:2302:2318	2568644	0	True				
ANR	2568717	EqualityExpression	* itr == delimiter		2568644	0		==			
ANR	2568718	UnaryOperationExpression	* itr		2568644	0					
ANR	2568719	UnaryOperator	*		2568644	0					
ANR	2568720	Identifier	itr		2568644	1					
ANR	2568721	Identifier	delimiter		2568644	1					
ANR	2568722	CompoundStatement		13:26:302:302	2568644	1					
ANR	2568723	IfStatement	"if ( delimiter == '\\""' )"		2568644	0					
ANR	2568724	Condition	"delimiter == '\\""'"	120:8:2331:2347	2568644	0	True				
ANR	2568725	EqualityExpression	"delimiter == '\\""'"		2568644	0		==			
ANR	2568726	Identifier	delimiter		2568644	0					
ANR	2568727	PrimaryExpression	"'\\""'"		2568644	1					
ANR	2568728	CompoundStatement		14:27:331:331	2568644	1					
ANR	2568729	ExpressionStatement	"buffer += ""\\\\\\"""""	121:6:2358:2374	2568644	0	True				
ANR	2568730	AssignmentExpression	"buffer += ""\\\\\\"""""		2568644	0		+=			
ANR	2568731	Identifier	buffer		2568644	0					
ANR	2568732	PrimaryExpression	"""\\\\\\"""""		2568644	1					
ANR	2568733	ContinueStatement	continue ;	122:6:2383:2391	2568644	1	True				
ANR	2568734	ElseStatement	else		2568644	0					
ANR	2568735	CompoundStatement		18:10:391:391	2568644	0					
ANR	2568736	ExpressionStatement	"buffer += ""\\\\\\'"""	125:6:2418:2434	2568644	0	True				
ANR	2568737	AssignmentExpression	"buffer += ""\\\\\\'"""		2568644	0		+=			
ANR	2568738	Identifier	buffer		2568644	0					
ANR	2568739	PrimaryExpression	"""\\\\\\'"""		2568644	1					
ANR	2568740	ContinueStatement	continue ;	126:6:2443:2451	2568644	1	True				
ANR	2568741	IfStatement	if ( ! oldClassAd )		2568644	1					
ANR	2568742	Condition	! oldClassAd	129:8:2477:2487	2568644	0	True				
ANR	2568743	UnaryOperationExpression	! oldClassAd		2568644	0					
ANR	2568744	UnaryOperator	!		2568644	0					
ANR	2568745	Identifier	oldClassAd		2568644	1					
ANR	2568746	CompoundStatement		23:22:472:472	2568644	1					
ANR	2568747	SwitchStatement	switch ( * itr )		2568644	0					
ANR	2568748	Condition	* itr	130:13:2506:2509	2568644	0	True				
ANR	2568749	UnaryOperationExpression	* itr		2568644	0					
ANR	2568750	UnaryOperator	*		2568644	0					
ANR	2568751	Identifier	itr		2568644	1					
ANR	2568752	CompoundStatement		24:20:494:494	2568644	1					
ANR	2568753	Label	case '\\a' :	131:6:2521:2530	2568644	0	True				
ANR	2568754	ExpressionStatement	"buffer += ""\\\\a"""	131:17:2532:2547	2568644	1	True				
ANR	2568755	AssignmentExpression	"buffer += ""\\\\a"""		2568644	0		+=			
ANR	2568756	Identifier	buffer		2568644	0					
ANR	2568757	PrimaryExpression	"""\\\\a"""		2568644	1					
ANR	2568758	ContinueStatement	continue ;	131:34:2549:2557	2568644	2	True				
ANR	2568759	Label	case '\\b' :	132:6:2565:2574	2568644	3	True				
ANR	2568760	ExpressionStatement	"buffer += ""\\\\b"""	132:17:2576:2591	2568644	4	True				
ANR	2568761	AssignmentExpression	"buffer += ""\\\\b"""		2568644	0		+=			
ANR	2568762	Identifier	buffer		2568644	0					
ANR	2568763	PrimaryExpression	"""\\\\b"""		2568644	1					
ANR	2568764	ContinueStatement	continue ;	132:34:2593:2601	2568644	5	True				
ANR	2568765	Label	case '\\f' :	133:6:2609:2618	2568644	6	True				
ANR	2568766	ExpressionStatement	"buffer += ""\\\\f"""	133:17:2620:2635	2568644	7	True				
ANR	2568767	AssignmentExpression	"buffer += ""\\\\f"""		2568644	0		+=			
ANR	2568768	Identifier	buffer		2568644	0					
ANR	2568769	PrimaryExpression	"""\\\\f"""		2568644	1					
ANR	2568770	ContinueStatement	continue ;	133:34:2637:2645	2568644	8	True				
ANR	2568771	Label	case '\\n' :	134:6:2653:2662	2568644	9	True				
ANR	2568772	ExpressionStatement	"buffer += ""\\\\n"""	134:17:2664:2679	2568644	10	True				
ANR	2568773	AssignmentExpression	"buffer += ""\\\\n"""		2568644	0		+=			
ANR	2568774	Identifier	buffer		2568644	0					
ANR	2568775	PrimaryExpression	"""\\\\n"""		2568644	1					
ANR	2568776	ContinueStatement	continue ;	134:34:2681:2689	2568644	11	True				
ANR	2568777	Label	case '\\r' :	135:6:2697:2706	2568644	12	True				
ANR	2568778	ExpressionStatement	"buffer += ""\\\\r"""	135:17:2708:2723	2568644	13	True				
ANR	2568779	AssignmentExpression	"buffer += ""\\\\r"""		2568644	0		+=			
ANR	2568780	Identifier	buffer		2568644	0					
ANR	2568781	PrimaryExpression	"""\\\\r"""		2568644	1					
ANR	2568782	ContinueStatement	continue ;	135:34:2725:2733	2568644	14	True				
ANR	2568783	Label	case '\\t' :	136:6:2741:2750	2568644	15	True				
ANR	2568784	ExpressionStatement	"buffer += ""\\\\t"""	136:17:2752:2767	2568644	16	True				
ANR	2568785	AssignmentExpression	"buffer += ""\\\\t"""		2568644	0		+=			
ANR	2568786	Identifier	buffer		2568644	0					
ANR	2568787	PrimaryExpression	"""\\\\t"""		2568644	1					
ANR	2568788	ContinueStatement	continue ;	136:34:2769:2777	2568644	17	True				
ANR	2568789	Label	case '\\v' :	137:6:2785:2794	2568644	18	True				
ANR	2568790	ExpressionStatement	"buffer += ""\\\\v"""	137:17:2796:2811	2568644	19	True				
ANR	2568791	AssignmentExpression	"buffer += ""\\\\v"""		2568644	0		+=			
ANR	2568792	Identifier	buffer		2568644	0					
ANR	2568793	PrimaryExpression	"""\\\\v"""		2568644	1					
ANR	2568794	ContinueStatement	continue ;	137:34:2813:2821	2568644	20	True				
ANR	2568795	Label	case '\\\\' :	138:6:2829:2838	2568644	21	True				
ANR	2568796	ExpressionStatement	"buffer += ""\\\\\\\\"""	138:17:2840:2856	2568644	22	True				
ANR	2568797	AssignmentExpression	"buffer += ""\\\\\\\\"""		2568644	0		+=			
ANR	2568798	Identifier	buffer		2568644	0					
ANR	2568799	PrimaryExpression	"""\\\\\\\\"""		2568644	1					
ANR	2568800	ContinueStatement	continue ;	138:35:2858:2866	2568644	23	True				
ANR	2568801	Label	case '\\'' :	139:6:2874:2883	2568644	24	True				
ANR	2568802	ExpressionStatement	"buffer += ""\\'"""	139:17:2885:2899	2568644	25	True				
ANR	2568803	AssignmentExpression	"buffer += ""\\'"""		2568644	0		+=			
ANR	2568804	Identifier	buffer		2568644	0					
ANR	2568805	PrimaryExpression	"""\\'"""		2568644	1					
ANR	2568806	ContinueStatement	continue ;	139:33:2901:2909	2568644	26	True				
ANR	2568807	Label	"case '\\""' :"	140:6:2917:2926	2568644	27	True				
ANR	2568808	ExpressionStatement	"buffer += ""\\"""""	140:17:2928:2942	2568644	28	True				
ANR	2568809	AssignmentExpression	"buffer += ""\\"""""		2568644	0		+=			
ANR	2568810	Identifier	buffer		2568644	0					
ANR	2568811	PrimaryExpression	"""\\"""""		2568644	1					
ANR	2568812	ContinueStatement	continue ;	140:33:2944:2952	2568644	29	True				
ANR	2568813	Label	default :	142:6:2961:2968	2568644	30	True				
ANR	2568814	Identifier	default		2568644	0					
ANR	2568815	IfStatement	if ( ! isprint ( * itr ) )		2568644	31					
ANR	2568816	Condition	! isprint ( * itr )	143:11:2981:2996	2568644	0	True				
ANR	2568817	UnaryOperationExpression	! isprint ( * itr )		2568644	0					
ANR	2568818	UnaryOperator	!		2568644	0					
ANR	2568819	CallExpression	isprint ( * itr )		2568644	1					
ANR	2568820	Callee	isprint		2568644	0					
ANR	2568821	Identifier	isprint		2568644	0					
ANR	2568822	ArgumentList	* itr		2568644	1					
ANR	2568823	Argument	* itr		2568644	0					
ANR	2568824	UnaryOperationExpression	* itr		2568644	0					
ANR	2568825	UnaryOperator	*		2568644	0					
ANR	2568826	Identifier	itr		2568644	1					
ANR	2568827	CompoundStatement		37:30:981:981	2568644	1					
ANR	2568828	ExpressionStatement	"sprintf ( tempBuf , ""\\\\%03o"" , ( unsigned char ) * itr )"	145:8:3049:3098	2568644	0	True				
ANR	2568829	CallExpression	"sprintf ( tempBuf , ""\\\\%03o"" , ( unsigned char ) * itr )"		2568644	0					
ANR	2568830	Callee	sprintf		2568644	0					
ANR	2568831	Identifier	sprintf		2568644	0					
ANR	2568832	ArgumentList	tempBuf		2568644	1					
ANR	2568833	Argument	tempBuf		2568644	0					
ANR	2568834	Identifier	tempBuf		2568644	0					
ANR	2568835	Argument	"""\\\\%03o"""		2568644	1					
ANR	2568836	PrimaryExpression	"""\\\\%03o"""		2568644	0					
ANR	2568837	Argument	( unsigned char ) * itr		2568644	2					
ANR	2568838	CastExpression	( unsigned char ) * itr		2568644	0					
ANR	2568839	CastTarget	unsigned char		2568644	0					
ANR	2568840	UnaryOperationExpression	* itr		2568644	1					
ANR	2568841	UnaryOperator	*		2568644	0					
ANR	2568842	Identifier	itr		2568644	1					
ANR	2568843	ExpressionStatement	buffer += tempBuf	146:8:3108:3125	2568644	1	True				
ANR	2568844	AssignmentExpression	buffer += tempBuf		2568644	0		+=			
ANR	2568845	Identifier	buffer		2568644	0					
ANR	2568846	Identifier	tempBuf		2568644	1					
ANR	2568847	ContinueStatement	continue ;	147:8:3135:3143	2568644	2	True				
ANR	2568848	BreakStatement	break ;	149:7:3161:3166	2568644	32	True				
ANR	2568849	IfStatement	if ( ! xmlUnparse )		2568644	2					
ANR	2568850	Condition	! xmlUnparse	153:8:3190:3200	2568644	0	True				
ANR	2568851	UnaryOperationExpression	! xmlUnparse		2568644	0					
ANR	2568852	UnaryOperator	!		2568644	0					
ANR	2568853	Identifier	xmlUnparse		2568644	1					
ANR	2568854	CompoundStatement		47:21:1184:1184	2568644	1					
ANR	2568855	ExpressionStatement	buffer += * itr	154:5:3210:3224	2568644	0	True				
ANR	2568856	AssignmentExpression	buffer += * itr		2568644	0		+=			
ANR	2568857	Identifier	buffer		2568644	0					
ANR	2568858	UnaryOperationExpression	* itr		2568644	1					
ANR	2568859	UnaryOperator	*		2568644	0					
ANR	2568860	Identifier	itr		2568644	1					
ANR	2568861	ElseStatement	else		2568644	0					
ANR	2568862	CompoundStatement		49:11:1218:1218	2568644	0					
ANR	2568863	SwitchStatement	switch ( * itr )		2568644	0					
ANR	2568864	Condition	* itr	156:13:3252:3255	2568644	0	True				
ANR	2568865	UnaryOperationExpression	* itr		2568644	0					
ANR	2568866	UnaryOperator	*		2568644	0					
ANR	2568867	Identifier	itr		2568644	1					
ANR	2568868	CompoundStatement		50:19:1239:1239	2568644	1					
ANR	2568869	Label	case '&' :	157:6:3266:3274	2568644	0	True				
ANR	2568870	ExpressionStatement	"buffer += ""&amp;"""	157:16:3276:3293	2568644	1	True				
ANR	2568871	AssignmentExpression	"buffer += ""&amp;"""		2568644	0		+=			
ANR	2568872	Identifier	buffer		2568644	0					
ANR	2568873	PrimaryExpression	"""&amp;"""		2568644	1					
ANR	2568874	BreakStatement	break ;	157:35:3295:3300	2568644	2	True				
ANR	2568875	Label	case '<' :	158:6:3308:3316	2568644	3	True				
ANR	2568876	ExpressionStatement	"buffer += ""&lt;"""	158:16:3318:3334	2568644	4	True				
ANR	2568877	AssignmentExpression	"buffer += ""&lt;"""		2568644	0		+=			
ANR	2568878	Identifier	buffer		2568644	0					
ANR	2568879	PrimaryExpression	"""&lt;"""		2568644	1					
ANR	2568880	BreakStatement	break ;	158:35:3337:3342	2568644	5	True				
ANR	2568881	Label	case '>' :	159:6:3350:3358	2568644	6	True				
ANR	2568882	ExpressionStatement	"buffer += ""&gt;"""	159:16:3360:3376	2568644	7	True				
ANR	2568883	AssignmentExpression	"buffer += ""&gt;"""		2568644	0		+=			
ANR	2568884	Identifier	buffer		2568644	0					
ANR	2568885	PrimaryExpression	"""&gt;"""		2568644	1					
ANR	2568886	BreakStatement	break ;	159:35:3379:3384	2568644	8	True				
ANR	2568887	Label	default :	160:6:3392:3399	2568644	9	True				
ANR	2568888	Identifier	default		2568644	0					
ANR	2568889	ExpressionStatement	buffer += * itr	160:16:3402:3416	2568644	10	True				
ANR	2568890	AssignmentExpression	buffer += * itr		2568644	0		+=			
ANR	2568891	Identifier	buffer		2568644	0					
ANR	2568892	UnaryOperationExpression	* itr		2568644	1					
ANR	2568893	UnaryOperator	*		2568644	0					
ANR	2568894	Identifier	itr		2568644	1					
ANR	2568895	BreakStatement	break ;	160:35:3421:3426	2568644	11	True				
ANR	2568896	ExpressionStatement	"buffer += '""'"	164:3:3449:3462	2568644	4	True				
ANR	2568897	AssignmentExpression	"buffer += '""'"		2568644	0		+=			
ANR	2568898	Identifier	buffer		2568644	0					
ANR	2568899	PrimaryExpression	"'""'"		2568644	1					
ANR	2568900	ReturnStatement	return ;	165:3:3467:3473	2568644	5	True				
ANR	2568901	Label	case Value :: INTEGER_VALUE :	167:2:3481:3506	2568644	5	True				
ANR	2568902	Identifier	Value :: INTEGER_VALUE		2568644	0					
ANR	2568903	CompoundStatement		62:3:1494:1499	2568644	6					
ANR	2568904	IdentifierDeclStatement	int i ;	168:3:3513:3518	2568644	0	True				
ANR	2568905	IdentifierDecl	i		2568644	0					
ANR	2568906	IdentifierDeclType	int		2568644	0					
ANR	2568907	Identifier	i		2568644	1					
ANR	2568908	ExpressionStatement	val . IsIntegerValue ( i )	169:3:3523:3546	2568644	1	True				
ANR	2568909	CallExpression	val . IsIntegerValue ( i )		2568644	0					
ANR	2568910	Callee	val . IsIntegerValue		2568644	0					
ANR	2568911	MemberAccess	val . IsIntegerValue		2568644	0					
ANR	2568912	Identifier	val		2568644	0					
ANR	2568913	Identifier	IsIntegerValue		2568644	1					
ANR	2568914	ArgumentList	i		2568644	1					
ANR	2568915	Argument	i		2568644	0					
ANR	2568916	Identifier	i		2568644	0					
ANR	2568917	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , i )"	170:3:3551:3578	2568644	2	True				
ANR	2568918	CallExpression	"sprintf ( tempBuf , ""%d"" , i )"		2568644	0					
ANR	2568919	Callee	sprintf		2568644	0					
ANR	2568920	Identifier	sprintf		2568644	0					
ANR	2568921	ArgumentList	tempBuf		2568644	1					
ANR	2568922	Argument	tempBuf		2568644	0					
ANR	2568923	Identifier	tempBuf		2568644	0					
ANR	2568924	Argument	"""%d"""		2568644	1					
ANR	2568925	PrimaryExpression	"""%d"""		2568644	0					
ANR	2568926	Argument	i		2568644	2					
ANR	2568927	Identifier	i		2568644	0					
ANR	2568928	ExpressionStatement	buffer += tempBuf	171:3:3583:3600	2568644	3	True				
ANR	2568929	AssignmentExpression	buffer += tempBuf		2568644	0		+=			
ANR	2568930	Identifier	buffer		2568644	0					
ANR	2568931	Identifier	tempBuf		2568644	1					
ANR	2568932	ReturnStatement	return ;	172:3:3605:3611	2568644	4	True				
ANR	2568933	Label	case Value :: REAL_VALUE :	174:2:3619:3641	2568644	7	True				
ANR	2568934	Identifier	Value :: REAL_VALUE		2568644	0					
ANR	2568935	CompoundStatement		69:3:1629:1640	2568644	8					
ANR	2568936	IdentifierDeclStatement	double real ;	175:3:3648:3659	2568644	0	True				
ANR	2568937	IdentifierDecl	real		2568644	0					
ANR	2568938	IdentifierDeclType	double		2568644	0					
ANR	2568939	Identifier	real		2568644	1					
ANR	2568940	ExpressionStatement	val . IsRealValue ( real )	176:3:3664:3685	2568644	1	True				
ANR	2568941	CallExpression	val . IsRealValue ( real )		2568644	0					
ANR	2568942	Callee	val . IsRealValue		2568644	0					
ANR	2568943	MemberAccess	val . IsRealValue		2568644	0					
ANR	2568944	Identifier	val		2568644	0					
ANR	2568945	Identifier	IsRealValue		2568644	1					
ANR	2568946	ArgumentList	real		2568644	1					
ANR	2568947	Argument	real		2568644	0					
ANR	2568948	Identifier	real		2568644	0					
ANR	2568949	IfStatement	if ( real == 0.0 )		2568644	2					
ANR	2568950	Condition	real == 0.0	177:16:3703:3713	2568644	0	True				
ANR	2568951	EqualityExpression	real == 0.0		2568644	0		==			
ANR	2568952	Identifier	real		2568644	0					
ANR	2568953	PrimaryExpression	0.0		2568644	1					
ANR	2568954	CompoundStatement		71:29:1697:1697	2568644	1					
ANR	2568955	ExpressionStatement	"sprintf ( tempBuf , ""%.1f"" , real )"	183:16:4019:4049	2568644	0	True				
ANR	2568956	CallExpression	"sprintf ( tempBuf , ""%.1f"" , real )"		2568644	0					
ANR	2568957	Callee	sprintf		2568644	0					
ANR	2568958	Identifier	sprintf		2568644	0					
ANR	2568959	ArgumentList	tempBuf		2568644	1					
ANR	2568960	Argument	tempBuf		2568644	0					
ANR	2568961	Identifier	tempBuf		2568644	0					
ANR	2568962	Argument	"""%.1f"""		2568644	1					
ANR	2568963	PrimaryExpression	"""%.1f"""		2568644	0					
ANR	2568964	Argument	real		2568644	2					
ANR	2568965	Identifier	real		2568644	0					
ANR	2568966	ExpressionStatement	buffer += tempBuf	184:16:4067:4084	2568644	1	True				
ANR	2568967	AssignmentExpression	buffer += tempBuf		2568644	0		+=			
ANR	2568968	Identifier	buffer		2568644	0					
ANR	2568969	Identifier	tempBuf		2568644	1					
ANR	2568970	ElseStatement	else		2568644	0					
ANR	2568971	IfStatement	if ( classad_isnan ( real ) )		2568644	0					
ANR	2568972	Condition	classad_isnan ( real )	185:23:4109:4127	2568644	0	True				
ANR	2568973	CallExpression	classad_isnan ( real )		2568644	0					
ANR	2568974	Callee	classad_isnan		2568644	0					
ANR	2568975	Identifier	classad_isnan		2568644	0					
ANR	2568976	ArgumentList	real		2568644	1					
ANR	2568977	Argument	real		2568644	0					
ANR	2568978	Identifier	real		2568644	0					
ANR	2568979	CompoundStatement		79:44:2111:2111	2568644	1					
ANR	2568980	ExpressionStatement	"buffer += ""real(\\""NaN\\"")"""	186:16:4148:4173	2568644	0	True				
ANR	2568981	AssignmentExpression	"buffer += ""real(\\""NaN\\"")"""		2568644	0		+=			
ANR	2568982	Identifier	buffer		2568644	0					
ANR	2568983	PrimaryExpression	"""real(\\""NaN\\"")"""		2568644	1					
ANR	2568984	ElseStatement	else		2568644	0					
ANR	2568985	IfStatement	if ( classad_isinf ( real ) == - 1 )		2568644	0					
ANR	2568986	Condition	classad_isinf ( real ) == - 1	187:23:4198:4222	2568644	0	True				
ANR	2568987	EqualityExpression	classad_isinf ( real ) == - 1		2568644	0		==			
ANR	2568988	CallExpression	classad_isinf ( real )		2568644	0					
ANR	2568989	Callee	classad_isinf		2568644	0					
ANR	2568990	Identifier	classad_isinf		2568644	0					
ANR	2568991	ArgumentList	real		2568644	1					
ANR	2568992	Argument	real		2568644	0					
ANR	2568993	Identifier	real		2568644	0					
ANR	2568994	UnaryOperationExpression	- 1		2568644	1					
ANR	2568995	UnaryOperator	-		2568644	0					
ANR	2568996	PrimaryExpression	1		2568644	1					
ANR	2568997	CompoundStatement		81:49:2205:2205	2568644	1					
ANR	2568998	ExpressionStatement	"buffer += ""real(\\""-INF\\"")"""	188:16:4242:4268	2568644	0	True				
ANR	2568999	AssignmentExpression	"buffer += ""real(\\""-INF\\"")"""		2568644	0		+=			
ANR	2569000	Identifier	buffer		2568644	0					
ANR	2569001	PrimaryExpression	"""real(\\""-INF\\"")"""		2568644	1					
ANR	2569002	ElseStatement	else		2568644	0					
ANR	2569003	IfStatement	if ( classad_isinf ( real ) == 1 )		2568644	0					
ANR	2569004	Condition	classad_isinf ( real ) == 1	189:23:4293:4316	2568644	0	True				
ANR	2569005	EqualityExpression	classad_isinf ( real ) == 1		2568644	0		==			
ANR	2569006	CallExpression	classad_isinf ( real )		2568644	0					
ANR	2569007	Callee	classad_isinf		2568644	0					
ANR	2569008	Identifier	classad_isinf		2568644	0					
ANR	2569009	ArgumentList	real		2568644	1					
ANR	2569010	Argument	real		2568644	0					
ANR	2569011	Identifier	real		2568644	0					
ANR	2569012	PrimaryExpression	1		2568644	1					
ANR	2569013	CompoundStatement		83:49:2300:2300	2568644	1					
ANR	2569014	ExpressionStatement	"buffer += ""real(\\""INF\\"")"""	190:16:4337:4362	2568644	0	True				
ANR	2569015	AssignmentExpression	"buffer += ""real(\\""INF\\"")"""		2568644	0		+=			
ANR	2569016	Identifier	buffer		2568644	0					
ANR	2569017	PrimaryExpression	"""real(\\""INF\\"")"""		2568644	1					
ANR	2569018	ElseStatement	else		2568644	0					
ANR	2569019	IfStatement	if ( oldClassAd )		2568644	0					
ANR	2569020	Condition	oldClassAd	191:14:4378:4387	2568644	0	True				
ANR	2569021	Identifier	oldClassAd		2568644	0					
ANR	2569022	CompoundStatement		85:26:2371:2371	2568644	1					
ANR	2569023	ExpressionStatement	"sprintf ( tempBuf , ""%f"" , real )"	192:16:4408:4436	2568644	0	True				
ANR	2569024	CallExpression	"sprintf ( tempBuf , ""%f"" , real )"		2568644	0					
ANR	2569025	Callee	sprintf		2568644	0					
ANR	2569026	Identifier	sprintf		2568644	0					
ANR	2569027	ArgumentList	tempBuf		2568644	1					
ANR	2569028	Argument	tempBuf		2568644	0					
ANR	2569029	Identifier	tempBuf		2568644	0					
ANR	2569030	Argument	"""%f"""		2568644	1					
ANR	2569031	PrimaryExpression	"""%f"""		2568644	0					
ANR	2569032	Argument	real		2568644	2					
ANR	2569033	Identifier	real		2568644	0					
ANR	2569034	ExpressionStatement	buffer += tempBuf	193:16:4454:4471	2568644	1	True				
ANR	2569035	AssignmentExpression	buffer += tempBuf		2568644	0		+=			
ANR	2569036	Identifier	buffer		2568644	0					
ANR	2569037	Identifier	tempBuf		2568644	1					
ANR	2569038	ElseStatement	else		2568644	0					
ANR	2569039	CompoundStatement		88:19:2473:2473	2568644	0					
ANR	2569040	ExpressionStatement	"sprintf ( tempBuf , ""%1.15E"" , real )"	195:16:4510:4542	2568644	0	True				
ANR	2569041	CallExpression	"sprintf ( tempBuf , ""%1.15E"" , real )"		2568644	0					
ANR	2569042	Callee	sprintf		2568644	0					
ANR	2569043	Identifier	sprintf		2568644	0					
ANR	2569044	ArgumentList	tempBuf		2568644	1					
ANR	2569045	Argument	tempBuf		2568644	0					
ANR	2569046	Identifier	tempBuf		2568644	0					
ANR	2569047	Argument	"""%1.15E"""		2568644	1					
ANR	2569048	PrimaryExpression	"""%1.15E"""		2568644	0					
ANR	2569049	Argument	real		2568644	2					
ANR	2569050	Identifier	real		2568644	0					
ANR	2569051	ExpressionStatement	buffer += tempBuf	196:16:4560:4577	2568644	1	True				
ANR	2569052	AssignmentExpression	buffer += tempBuf		2568644	0		+=			
ANR	2569053	Identifier	buffer		2568644	0					
ANR	2569054	Identifier	tempBuf		2568644	1					
ANR	2569055	ReturnStatement	return ;	198:3:4596:4602	2568644	3	True				
ANR	2569056	Label	case Value :: BOOLEAN_VALUE :	200:2:4610:4635	2568644	9	True				
ANR	2569057	Identifier	Value :: BOOLEAN_VALUE		2568644	0					
ANR	2569058	CompoundStatement		95:3:2623:2629	2568644	10					
ANR	2569059	IdentifierDeclStatement	bool b ;	201:3:4642:4648	2568644	0	True				
ANR	2569060	IdentifierDecl	b		2568644	0					
ANR	2569061	IdentifierDeclType	bool		2568644	0					
ANR	2569062	Identifier	b		2568644	1					
ANR	2569063	ExpressionStatement	val . IsBooleanValue ( b )	202:3:4653:4676	2568644	1	True				
ANR	2569064	CallExpression	val . IsBooleanValue ( b )		2568644	0					
ANR	2569065	Callee	val . IsBooleanValue		2568644	0					
ANR	2569066	MemberAccess	val . IsBooleanValue		2568644	0					
ANR	2569067	Identifier	val		2568644	0					
ANR	2569068	Identifier	IsBooleanValue		2568644	1					
ANR	2569069	ArgumentList	b		2568644	1					
ANR	2569070	Argument	b		2568644	0					
ANR	2569071	Identifier	b		2568644	0					
ANR	2569072	ExpressionStatement	"buffer += b ? ""true"" : ""false"""	203:3:4681:4711	2568644	2	True				
ANR	2569073	AssignmentExpression	"buffer += b ? ""true"" : ""false"""		2568644	0		+=			
ANR	2569074	Identifier	buffer		2568644	0					
ANR	2569075	ConditionalExpression	"b ? ""true"" : ""false"""		2568644	1					
ANR	2569076	Condition	b		2568644	0					
ANR	2569077	Identifier	b		2568644	0					
ANR	2569078	PrimaryExpression	"""true"""		2568644	1					
ANR	2569079	PrimaryExpression	"""false"""		2568644	2					
ANR	2569080	ReturnStatement	return ;	204:3:4716:4722	2568644	3	True				
ANR	2569081	Label	case Value :: UNDEFINED_VALUE :	206:2:4730:4757	2568644	11	True				
ANR	2569082	Identifier	Value :: UNDEFINED_VALUE		2568644	0					
ANR	2569083	CompoundStatement		100:31:2740:2740	2568644	12					
ANR	2569084	ExpressionStatement	"buffer += ""undefined"""	207:3:4764:4785	2568644	0	True				
ANR	2569085	AssignmentExpression	"buffer += ""undefined"""		2568644	0		+=			
ANR	2569086	Identifier	buffer		2568644	0					
ANR	2569087	PrimaryExpression	"""undefined"""		2568644	1					
ANR	2569088	ReturnStatement	return ;	208:3:4790:4796	2568644	1	True				
ANR	2569089	Label	case Value :: ERROR_VALUE :	210:2:4804:4827	2568644	13	True				
ANR	2569090	Identifier	Value :: ERROR_VALUE		2568644	0					
ANR	2569091	CompoundStatement		104:27:2810:2810	2568644	14					
ANR	2569092	ExpressionStatement	"buffer += ""error"""	211:3:4834:4851	2568644	0	True				
ANR	2569093	AssignmentExpression	"buffer += ""error"""		2568644	0		+=			
ANR	2569094	Identifier	buffer		2568644	0					
ANR	2569095	PrimaryExpression	"""error"""		2568644	1					
ANR	2569096	ReturnStatement	return ;	212:3:4856:4862	2568644	1	True				
ANR	2569097	Label	case Value :: ABSOLUTE_TIME_VALUE :	214:2:4870:4901	2568644	15	True				
ANR	2569098	Identifier	Value :: ABSOLUTE_TIME_VALUE		2568644	0					
ANR	2569099	CompoundStatement		109:3:2889:2904	2568644	16					
ANR	2569100	IdentifierDeclStatement	abstime_t asecs ;	215:3:4908:4923	2568644	0	True				
ANR	2569101	IdentifierDecl	asecs		2568644	0					
ANR	2569102	IdentifierDeclType	abstime_t		2568644	0					
ANR	2569103	Identifier	asecs		2568644	1					
ANR	2569104	ExpressionStatement	val . IsAbsoluteTimeValue ( asecs )	216:3:4928:4958	2568644	1	True				
ANR	2569105	CallExpression	val . IsAbsoluteTimeValue ( asecs )		2568644	0					
ANR	2569106	Callee	val . IsAbsoluteTimeValue		2568644	0					
ANR	2569107	MemberAccess	val . IsAbsoluteTimeValue		2568644	0					
ANR	2569108	Identifier	val		2568644	0					
ANR	2569109	Identifier	IsAbsoluteTimeValue		2568644	1					
ANR	2569110	ArgumentList	asecs		2568644	1					
ANR	2569111	Argument	asecs		2568644	0					
ANR	2569112	Identifier	asecs		2568644	0					
ANR	2569113	ExpressionStatement	"buffer += ""absTime(\\"""""	218:3:4964:4986	2568644	2	True				
ANR	2569114	AssignmentExpression	"buffer += ""absTime(\\"""""		2568644	0		+=			
ANR	2569115	Identifier	buffer		2568644	0					
ANR	2569116	PrimaryExpression	"""absTime(\\"""""		2568644	1					
ANR	2569117	ExpressionStatement	"absTimeToString ( asecs , buffer )"	219:12:5000:5030	2568644	3	True				
ANR	2569118	CallExpression	"absTimeToString ( asecs , buffer )"		2568644	0					
ANR	2569119	Callee	absTimeToString		2568644	0					
ANR	2569120	Identifier	absTimeToString		2568644	0					
ANR	2569121	ArgumentList	asecs		2568644	1					
ANR	2569122	Argument	asecs		2568644	0					
ANR	2569123	Identifier	asecs		2568644	0					
ANR	2569124	Argument	buffer		2568644	1					
ANR	2569125	Identifier	buffer		2568644	0					
ANR	2569126	ExpressionStatement	"buffer += ""\\"")"""	220:12:5044:5059	2568644	4	True				
ANR	2569127	AssignmentExpression	"buffer += ""\\"")"""		2568644	0		+=			
ANR	2569128	Identifier	buffer		2568644	0					
ANR	2569129	PrimaryExpression	"""\\"")"""		2568644	1					
ANR	2569130	ReturnStatement	return ;	222:3:5067:5073	2568644	5	True				
ANR	2569131	Label	case Value :: RELATIVE_TIME_VALUE :	224:2:5081:5112	2568644	17	True				
ANR	2569132	Identifier	Value :: RELATIVE_TIME_VALUE		2568644	0					
ANR	2569133	CompoundStatement		119:12:3109:3121	2568644	18					
ANR	2569134	IdentifierDeclStatement	double rsecs ;	225:12:5128:5140	2568644	0	True				
ANR	2569135	IdentifierDecl	rsecs		2568644	0					
ANR	2569136	IdentifierDeclType	double		2568644	0					
ANR	2569137	Identifier	rsecs		2568644	1					
ANR	2569138	ExpressionStatement	val . IsRelativeTimeValue ( rsecs )	226:12:5154:5184	2568644	1	True				
ANR	2569139	CallExpression	val . IsRelativeTimeValue ( rsecs )		2568644	0					
ANR	2569140	Callee	val . IsRelativeTimeValue		2568644	0					
ANR	2569141	MemberAccess	val . IsRelativeTimeValue		2568644	0					
ANR	2569142	Identifier	val		2568644	0					
ANR	2569143	Identifier	IsRelativeTimeValue		2568644	1					
ANR	2569144	ArgumentList	rsecs		2568644	1					
ANR	2569145	Argument	rsecs		2568644	0					
ANR	2569146	Identifier	rsecs		2568644	0					
ANR	2569147	ExpressionStatement	"buffer += ""relTime(\\"""""	228:3:5190:5212	2568644	2	True				
ANR	2569148	AssignmentExpression	"buffer += ""relTime(\\"""""		2568644	0		+=			
ANR	2569149	Identifier	buffer		2568644	0					
ANR	2569150	PrimaryExpression	"""relTime(\\"""""		2568644	1					
ANR	2569151	ExpressionStatement	"relTimeToString ( rsecs , buffer )"	229:12:5226:5256	2568644	3	True				
ANR	2569152	CallExpression	"relTimeToString ( rsecs , buffer )"		2568644	0					
ANR	2569153	Callee	relTimeToString		2568644	0					
ANR	2569154	Identifier	relTimeToString		2568644	0					
ANR	2569155	ArgumentList	rsecs		2568644	1					
ANR	2569156	Argument	rsecs		2568644	0					
ANR	2569157	Identifier	rsecs		2568644	0					
ANR	2569158	Argument	buffer		2568644	1					
ANR	2569159	Identifier	buffer		2568644	0					
ANR	2569160	ExpressionStatement	"buffer += ""\\"")"""	230:12:5270:5285	2568644	4	True				
ANR	2569161	AssignmentExpression	"buffer += ""\\"")"""		2568644	0		+=			
ANR	2569162	Identifier	buffer		2568644	0					
ANR	2569163	PrimaryExpression	"""\\"")"""		2568644	1					
ANR	2569164	ReturnStatement	return ;	232:3:5294:5300	2568644	5	True				
ANR	2569165	Label	case Value :: CLASSAD_VALUE :	234:2:5308:5333	2568644	19	True				
ANR	2569166	Identifier	Value :: CLASSAD_VALUE		2568644	0					
ANR	2569167	CompoundStatement		130:3:3350:3388	2568644	20					
ANR	2569168	IdentifierDeclStatement	const ClassAd * ad = NULL ;	235:3:5340:5364	2568644	0	True				
ANR	2569169	IdentifierDecl	* ad = NULL		2568644	0					
ANR	2569170	IdentifierDeclType	const ClassAd *		2568644	0					
ANR	2569171	Identifier	ad		2568644	1					
ANR	2569172	AssignmentExpression	* ad = NULL		2568644	2		=			
ANR	2569173	Identifier	NULL		2568644	0					
ANR	2569174	Identifier	NULL		2568644	1					
ANR	2569175	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	236:3:5369:5407	2568644	1	True				
ANR	2569176	IdentifierDecl	attrs		2568644	0					
ANR	2569177	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		2568644	0					
ANR	2569178	Identifier	attrs		2568644	1					
ANR	2569179	ExpressionStatement	val . IsClassAdValue ( ad )	237:3:5412:5436	2568644	2	True				
ANR	2569180	CallExpression	val . IsClassAdValue ( ad )		2568644	0					
ANR	2569181	Callee	val . IsClassAdValue		2568644	0					
ANR	2569182	MemberAccess	val . IsClassAdValue		2568644	0					
ANR	2569183	Identifier	val		2568644	0					
ANR	2569184	Identifier	IsClassAdValue		2568644	1					
ANR	2569185	ArgumentList	ad		2568644	1					
ANR	2569186	Argument	ad		2568644	0					
ANR	2569187	Identifier	ad		2568644	0					
ANR	2569188	ExpressionStatement	ad -> GetComponents ( attrs )	238:3:5441:5467	2568644	3	True				
ANR	2569189	CallExpression	ad -> GetComponents ( attrs )		2568644	0					
ANR	2569190	Callee	ad -> GetComponents		2568644	0					
ANR	2569191	PtrMemberAccess	ad -> GetComponents		2568644	0					
ANR	2569192	Identifier	ad		2568644	0					
ANR	2569193	Identifier	GetComponents		2568644	1					
ANR	2569194	ArgumentList	attrs		2568644	1					
ANR	2569195	Argument	attrs		2568644	0					
ANR	2569196	Identifier	attrs		2568644	0					
ANR	2569197	ExpressionStatement	"UnparseAux ( buffer , attrs )"	239:3:5472:5499	2568644	4	True				
ANR	2569198	CallExpression	"UnparseAux ( buffer , attrs )"		2568644	0					
ANR	2569199	Callee	UnparseAux		2568644	0					
ANR	2569200	Identifier	UnparseAux		2568644	0					
ANR	2569201	ArgumentList	buffer		2568644	1					
ANR	2569202	Argument	buffer		2568644	0					
ANR	2569203	Identifier	buffer		2568644	0					
ANR	2569204	Argument	attrs		2568644	1					
ANR	2569205	Identifier	attrs		2568644	0					
ANR	2569206	ReturnStatement	return ;	240:3:5504:5510	2568644	5	True				
ANR	2569207	Label	case Value :: LIST_VALUE :	242:2:5518:5540	2568644	21	True				
ANR	2569208	Identifier	Value :: LIST_VALUE		2568644	0					
ANR	2569209	CompoundStatement		138:3:3558:3581	2568644	22					
ANR	2569210	IdentifierDeclStatement	const ExprList * el = NULL ;	243:3:5547:5572	2568644	0	True				
ANR	2569211	IdentifierDecl	* el = NULL		2568644	0					
ANR	2569212	IdentifierDeclType	const ExprList *		2568644	0					
ANR	2569213	Identifier	el		2568644	1					
ANR	2569214	AssignmentExpression	* el = NULL		2568644	2		=			
ANR	2569215	Identifier	NULL		2568644	0					
ANR	2569216	Identifier	NULL		2568644	1					
ANR	2569217	IdentifierDeclStatement	vector < ExprTree * > exprs ;	244:3:5577:5600	2568644	1	True				
ANR	2569218	IdentifierDecl	exprs		2568644	0					
ANR	2569219	IdentifierDeclType	vector < ExprTree * >		2568644	0					
ANR	2569220	Identifier	exprs		2568644	1					
ANR	2569221	ExpressionStatement	val . IsListValue ( el )	245:3:5605:5626	2568644	2	True				
ANR	2569222	CallExpression	val . IsListValue ( el )		2568644	0					
ANR	2569223	Callee	val . IsListValue		2568644	0					
ANR	2569224	MemberAccess	val . IsListValue		2568644	0					
ANR	2569225	Identifier	val		2568644	0					
ANR	2569226	Identifier	IsListValue		2568644	1					
ANR	2569227	ArgumentList	el		2568644	1					
ANR	2569228	Argument	el		2568644	0					
ANR	2569229	Identifier	el		2568644	0					
ANR	2569230	ExpressionStatement	el -> GetComponents ( exprs )	246:3:5631:5657	2568644	3	True				
ANR	2569231	CallExpression	el -> GetComponents ( exprs )		2568644	0					
ANR	2569232	Callee	el -> GetComponents		2568644	0					
ANR	2569233	PtrMemberAccess	el -> GetComponents		2568644	0					
ANR	2569234	Identifier	el		2568644	0					
ANR	2569235	Identifier	GetComponents		2568644	1					
ANR	2569236	ArgumentList	exprs		2568644	1					
ANR	2569237	Argument	exprs		2568644	0					
ANR	2569238	Identifier	exprs		2568644	0					
ANR	2569239	ExpressionStatement	"UnparseAux ( buffer , exprs )"	247:3:5662:5689	2568644	4	True				
ANR	2569240	CallExpression	"UnparseAux ( buffer , exprs )"		2568644	0					
ANR	2569241	Callee	UnparseAux		2568644	0					
ANR	2569242	Identifier	UnparseAux		2568644	0					
ANR	2569243	ArgumentList	buffer		2568644	1					
ANR	2569244	Argument	buffer		2568644	0					
ANR	2569245	Identifier	buffer		2568644	0					
ANR	2569246	Argument	exprs		2568644	1					
ANR	2569247	Identifier	exprs		2568644	0					
ANR	2569248	ReturnStatement	return ;	248:3:5694:5700	2568644	5	True				
ANR	2569249	ReturnType	void		2568644	1					
ANR	2569250	Identifier	ClassAdUnParser :: Unparse		2568644	2					
ANR	2569251	ParameterList	"string & buffer , const Value & val"		2568644	3					
ANR	2569252	Parameter	string & buffer	106:9:1983:1996	2568644	0	True				
ANR	2569253	ParameterType	string &		2568644	0					
ANR	2569254	Identifier	buffer		2568644	1					
ANR	2569255	Parameter	const Value & val	106:25:1999:2014	2568644	1	True				
ANR	2569256	ParameterType	const Value &		2568644	0					
ANR	2569257	Identifier	val		2568644	1					
ANR	2569258	CFGEntryNode	ENTRY		2568644		True				
ANR	2569259	CFGExitNode	EXIT		2568644		True				
ANR	2569260	Symbol	isprint		2568644						
ANR	2569261	Symbol	classad_isinf		2568644						
ANR	2569262	Symbol	rsecs		2568644						
ANR	2569263	Symbol	val . GetType		2568644						
ANR	2569264	Symbol	oldClassAd		2568644						
ANR	2569265	Symbol	delimiter		2568644						
ANR	2569266	Symbol	classad_isnan		2568644						
ANR	2569267	Symbol	exprs		2568644						
ANR	2569268	Symbol	buffer		2568644						
ANR	2569269	Symbol	tempBuf		2568644						
ANR	2569270	Symbol	val		2568644						
ANR	2569271	Symbol	b		2568644						
ANR	2569272	Symbol	s . end		2568644						
ANR	2569273	Symbol	NULL		2568644						
ANR	2569274	Symbol	ad		2568644						
ANR	2569275	Symbol	itr		2568644						
ANR	2569276	Symbol	el		2568644						
ANR	2569277	Symbol	i		2568644						
ANR	2569278	Symbol	real		2568644						
ANR	2569279	Symbol	xmlUnparse		2568644						
ANR	2569280	Symbol	* itr		2568644						
ANR	2569281	Symbol	asecs		2568644						
ANR	2569282	Symbol	attrs		2568644						
ANR	2569283	Symbol	s		2568644						
ANR	2569284	Symbol	s . begin		2568644						
ANR	2569285	Function	ClassAdUnParser :: Unparse	254:0:5713:7264							
ANR	2569286	FunctionDef	"ClassAdUnParser :: Unparse (string & buffer , const ExprTree * tree)"		2569285	0					
ANR	2569287	CompoundStatement		256:0:5784:7264	2569285	0					
ANR	2569288	IfStatement	if ( ! tree )		2569285	0					
ANR	2569289	Condition	! tree	257:5:5791:5795	2569285	0	True				
ANR	2569290	UnaryOperationExpression	! tree		2569285	0					
ANR	2569291	UnaryOperator	!		2569285	0					
ANR	2569292	Identifier	tree		2569285	1					
ANR	2569293	CompoundStatement		2:13:14:14	2569285	1					
ANR	2569294	ExpressionStatement	"buffer = ""<error:null expr>"""	258:2:5803:5831	2569285	0	True				
ANR	2569295	AssignmentExpression	"buffer = ""<error:null expr>"""		2569285	0		=			
ANR	2569296	Identifier	buffer		2569285	0					
ANR	2569297	PrimaryExpression	"""<error:null expr>"""		2569285	1					
ANR	2569298	ReturnStatement	return ;	259:2:5835:5841	2569285	1	True				
ANR	2569299	SwitchStatement	switch ( tree -> GetKind ( ) )		2569285	1					
ANR	2569300	Condition	tree -> GetKind ( )	262:9:5856:5871	2569285	0	True				
ANR	2569301	CallExpression	tree -> GetKind ( )		2569285	0					
ANR	2569302	Callee	tree -> GetKind		2569285	0					
ANR	2569303	PtrMemberAccess	tree -> GetKind		2569285	0					
ANR	2569304	Identifier	tree		2569285	0					
ANR	2569305	Identifier	GetKind		2569285	1					
ANR	2569306	ArgumentList			2569285	1					
ANR	2569307	CompoundStatement		7:28:90:90	2569285	1					
ANR	2569308	Label	case ExprTree :: LITERAL_NODE :	263:2:5879:5906	2569285	0	True				
ANR	2569309	Identifier	ExprTree :: LITERAL_NODE		2569285	0					
ANR	2569310	CompoundStatement		10:3:145:171	2569285	1					
ANR	2569311	IdentifierDeclStatement	Value val ;	264:3:5913:5925	2569285	0	True				
ANR	2569312	IdentifierDecl	val		2569285	0					
ANR	2569313	IdentifierDeclType	Value		2569285	0					
ANR	2569314	Identifier	val		2569285	1					
ANR	2569315	IdentifierDeclStatement	Value :: NumberFactor factor ;	265:3:5930:5956	2569285	1	True				
ANR	2569316	IdentifierDecl	factor		2569285	0					
ANR	2569317	IdentifierDeclType	Value :: NumberFactor		2569285	0					
ANR	2569318	Identifier	factor		2569285	1					
ANR	2569319	ExpressionStatement	"( ( Literal * ) tree ) -> GetComponents ( val , factor )"	266:3:5961:6007	2569285	2	True				
ANR	2569320	CallExpression	"( ( Literal * ) tree ) -> GetComponents ( val , factor )"		2569285	0					
ANR	2569321	Callee	( ( Literal * ) tree ) -> GetComponents		2569285	0					
ANR	2569322	PtrMemberAccess	( ( Literal * ) tree ) -> GetComponents		2569285	0					
ANR	2569323	CastExpression	( Literal * ) tree		2569285	0					
ANR	2569324	CastTarget	Literal *		2569285	0					
ANR	2569325	Identifier	tree		2569285	1					
ANR	2569326	Identifier	GetComponents		2569285	1					
ANR	2569327	ArgumentList	val		2569285	1					
ANR	2569328	Argument	val		2569285	0					
ANR	2569329	Identifier	val		2569285	0					
ANR	2569330	Argument	factor		2569285	1					
ANR	2569331	Identifier	factor		2569285	0					
ANR	2569332	ExpressionStatement	"UnparseAux ( buffer , val , factor )"	267:3:6012:6045	2569285	3	True				
ANR	2569333	CallExpression	"UnparseAux ( buffer , val , factor )"		2569285	0					
ANR	2569334	Callee	UnparseAux		2569285	0					
ANR	2569335	Identifier	UnparseAux		2569285	0					
ANR	2569336	ArgumentList	buffer		2569285	1					
ANR	2569337	Argument	buffer		2569285	0					
ANR	2569338	Identifier	buffer		2569285	0					
ANR	2569339	Argument	val		2569285	1					
ANR	2569340	Identifier	val		2569285	0					
ANR	2569341	Argument	factor		2569285	2					
ANR	2569342	Identifier	factor		2569285	0					
ANR	2569343	ReturnStatement	return ;	268:3:6050:6056	2569285	4	True				
ANR	2569344	Label	case ExprTree :: ATTRREF_NODE :	271:2:6065:6092	2569285	2	True				
ANR	2569345	Identifier	ExprTree :: ATTRREF_NODE		2569285	0					
ANR	2569346	CompoundStatement		19:3:348:361	2569285	3					
ANR	2569347	IdentifierDeclStatement	ExprTree * expr ;	272:3:6099:6113	2569285	0	True				
ANR	2569348	IdentifierDecl	* expr		2569285	0					
ANR	2569349	IdentifierDeclType	ExprTree *		2569285	0					
ANR	2569350	Identifier	expr		2569285	1					
ANR	2569351	IdentifierDeclStatement	string ref ;	273:3:6118:6128	2569285	1	True				
ANR	2569352	IdentifierDecl	ref		2569285	0					
ANR	2569353	IdentifierDeclType	string		2569285	0					
ANR	2569354	Identifier	ref		2569285	1					
ANR	2569355	IdentifierDeclStatement	bool absolute ;	274:3:6133:6146	2569285	2	True				
ANR	2569356	IdentifierDecl	absolute		2569285	0					
ANR	2569357	IdentifierDeclType	bool		2569285	0					
ANR	2569358	Identifier	absolute		2569285	1					
ANR	2569359	ExpressionStatement	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , ref , absolute )"	275:3:6151:6216	2569285	3	True				
ANR	2569360	CallExpression	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , ref , absolute )"		2569285	0					
ANR	2569361	Callee	( ( AttributeReference * ) tree ) -> GetComponents		2569285	0					
ANR	2569362	PtrMemberAccess	( ( AttributeReference * ) tree ) -> GetComponents		2569285	0					
ANR	2569363	CastExpression	( AttributeReference * ) tree		2569285	0					
ANR	2569364	CastTarget	AttributeReference *		2569285	0					
ANR	2569365	Identifier	tree		2569285	1					
ANR	2569366	Identifier	GetComponents		2569285	1					
ANR	2569367	ArgumentList	expr		2569285	1					
ANR	2569368	Argument	expr		2569285	0					
ANR	2569369	Identifier	expr		2569285	0					
ANR	2569370	Argument	ref		2569285	1					
ANR	2569371	Identifier	ref		2569285	0					
ANR	2569372	Argument	absolute		2569285	2					
ANR	2569373	Identifier	absolute		2569285	0					
ANR	2569374	ExpressionStatement	"UnparseAux ( buffer , expr , ref , absolute )"	276:3:6221:6262	2569285	4	True				
ANR	2569375	CallExpression	"UnparseAux ( buffer , expr , ref , absolute )"		2569285	0					
ANR	2569376	Callee	UnparseAux		2569285	0					
ANR	2569377	Identifier	UnparseAux		2569285	0					
ANR	2569378	ArgumentList	buffer		2569285	1					
ANR	2569379	Argument	buffer		2569285	0					
ANR	2569380	Identifier	buffer		2569285	0					
ANR	2569381	Argument	expr		2569285	1					
ANR	2569382	Identifier	expr		2569285	0					
ANR	2569383	Argument	ref		2569285	2					
ANR	2569384	Identifier	ref		2569285	0					
ANR	2569385	Argument	absolute		2569285	3					
ANR	2569386	Identifier	absolute		2569285	0					
ANR	2569387	ReturnStatement	return ;	277:3:6267:6273	2569285	5	True				
ANR	2569388	Label	case ExprTree :: OP_NODE :	280:2:6282:6304	2569285	4	True				
ANR	2569389	Identifier	ExprTree :: OP_NODE		2569285	0					
ANR	2569390	CompoundStatement		27:3:551:575	2569285	5					
ANR	2569391	IdentifierDeclStatement	Operation :: OpKind op ;	281:3:6311:6331	2569285	0	True				
ANR	2569392	IdentifierDecl	op		2569285	0					
ANR	2569393	IdentifierDeclType	Operation :: OpKind		2569285	0					
ANR	2569394	Identifier	op		2569285	1					
ANR	2569395	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	282:3:6336:6360	2569285	1	True				
ANR	2569396	IdentifierDecl	* t1		2569285	0					
ANR	2569397	IdentifierDeclType	ExprTree *		2569285	0					
ANR	2569398	Identifier	t1		2569285	1					
ANR	2569399	IdentifierDecl	* t2		2569285	1					
ANR	2569400	IdentifierDeclType	ExprTree *		2569285	0					
ANR	2569401	Identifier	t2		2569285	1					
ANR	2569402	IdentifierDecl	* t3		2569285	2					
ANR	2569403	IdentifierDeclType	ExprTree *		2569285	0					
ANR	2569404	Identifier	t3		2569285	1					
ANR	2569405	ExpressionStatement	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , t3 )"	283:3:6365:6416	2569285	2	True				
ANR	2569406	CallExpression	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , t3 )"		2569285	0					
ANR	2569407	Callee	( ( Operation * ) tree ) -> GetComponents		2569285	0					
ANR	2569408	PtrMemberAccess	( ( Operation * ) tree ) -> GetComponents		2569285	0					
ANR	2569409	CastExpression	( Operation * ) tree		2569285	0					
ANR	2569410	CastTarget	Operation *		2569285	0					
ANR	2569411	Identifier	tree		2569285	1					
ANR	2569412	Identifier	GetComponents		2569285	1					
ANR	2569413	ArgumentList	op		2569285	1					
ANR	2569414	Argument	op		2569285	0					
ANR	2569415	Identifier	op		2569285	0					
ANR	2569416	Argument	t1		2569285	1					
ANR	2569417	Identifier	t1		2569285	0					
ANR	2569418	Argument	t2		2569285	2					
ANR	2569419	Identifier	t2		2569285	0					
ANR	2569420	Argument	t3		2569285	3					
ANR	2569421	Identifier	t3		2569285	0					
ANR	2569422	ExpressionStatement	"UnparseAux ( buffer , op , t1 , t2 , t3 )"	284:3:6421:6457	2569285	3	True				
ANR	2569423	CallExpression	"UnparseAux ( buffer , op , t1 , t2 , t3 )"		2569285	0					
ANR	2569424	Callee	UnparseAux		2569285	0					
ANR	2569425	Identifier	UnparseAux		2569285	0					
ANR	2569426	ArgumentList	buffer		2569285	1					
ANR	2569427	Argument	buffer		2569285	0					
ANR	2569428	Identifier	buffer		2569285	0					
ANR	2569429	Argument	op		2569285	1					
ANR	2569430	Identifier	op		2569285	0					
ANR	2569431	Argument	t1		2569285	2					
ANR	2569432	Identifier	t1		2569285	0					
ANR	2569433	Argument	t2		2569285	3					
ANR	2569434	Identifier	t2		2569285	0					
ANR	2569435	Argument	t3		2569285	4					
ANR	2569436	Identifier	t3		2569285	0					
ANR	2569437	ReturnStatement	return ;	285:3:6462:6468	2569285	4	True				
ANR	2569438	Label	case ExprTree :: FN_CALL_NODE :	288:2:6477:6504	2569285	6	True				
ANR	2569439	Identifier	ExprTree :: FN_CALL_NODE		2569285	0					
ANR	2569440	CompoundStatement		35:3:748:770	2569285	7					
ANR	2569441	IdentifierDeclStatement	string fnName ;	289:3:6511:6528	2569285	0	True				
ANR	2569442	IdentifierDecl	fnName		2569285	0					
ANR	2569443	IdentifierDeclType	string		2569285	0					
ANR	2569444	Identifier	fnName		2569285	1					
ANR	2569445	IdentifierDeclStatement	vector < ExprTree * > args ;	290:3:6533:6555	2569285	1	True				
ANR	2569446	IdentifierDecl	args		2569285	0					
ANR	2569447	IdentifierDeclType	vector < ExprTree * >		2569285	0					
ANR	2569448	Identifier	args		2569285	1					
ANR	2569449	ExpressionStatement	"( ( FunctionCall * ) tree ) -> GetComponents ( fnName , args )"	291:3:6560:6612	2569285	2	True				
ANR	2569450	CallExpression	"( ( FunctionCall * ) tree ) -> GetComponents ( fnName , args )"		2569285	0					
ANR	2569451	Callee	( ( FunctionCall * ) tree ) -> GetComponents		2569285	0					
ANR	2569452	PtrMemberAccess	( ( FunctionCall * ) tree ) -> GetComponents		2569285	0					
ANR	2569453	CastExpression	( FunctionCall * ) tree		2569285	0					
ANR	2569454	CastTarget	FunctionCall *		2569285	0					
ANR	2569455	Identifier	tree		2569285	1					
ANR	2569456	Identifier	GetComponents		2569285	1					
ANR	2569457	ArgumentList	fnName		2569285	1					
ANR	2569458	Argument	fnName		2569285	0					
ANR	2569459	Identifier	fnName		2569285	0					
ANR	2569460	Argument	args		2569285	1					
ANR	2569461	Identifier	args		2569285	0					
ANR	2569462	ExpressionStatement	"UnparseAux ( buffer , fnName , args )"	292:3:6617:6651	2569285	3	True				
ANR	2569463	CallExpression	"UnparseAux ( buffer , fnName , args )"		2569285	0					
ANR	2569464	Callee	UnparseAux		2569285	0					
ANR	2569465	Identifier	UnparseAux		2569285	0					
ANR	2569466	ArgumentList	buffer		2569285	1					
ANR	2569467	Argument	buffer		2569285	0					
ANR	2569468	Identifier	buffer		2569285	0					
ANR	2569469	Argument	fnName		2569285	1					
ANR	2569470	Identifier	fnName		2569285	0					
ANR	2569471	Argument	args		2569285	2					
ANR	2569472	Identifier	args		2569285	0					
ANR	2569473	ReturnStatement	return ;	293:3:6656:6662	2569285	4	True				
ANR	2569474	Label	case ExprTree :: CLASSAD_NODE :	296:2:6671:6698	2569285	8	True				
ANR	2569475	Identifier	ExprTree :: CLASSAD_NODE		2569285	0					
ANR	2569476	CompoundStatement		42:3:920:959	2569285	9					
ANR	2569477	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	297:3:6705:6744	2569285	0	True				
ANR	2569478	IdentifierDecl	attrs		2569285	0					
ANR	2569479	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		2569285	0					
ANR	2569480	Identifier	attrs		2569285	1					
ANR	2569481	ExpressionStatement	( ( ClassAd * ) tree ) -> GetComponents ( attrs )	298:3:6749:6789	2569285	1	True				
ANR	2569482	CallExpression	( ( ClassAd * ) tree ) -> GetComponents ( attrs )		2569285	0					
ANR	2569483	Callee	( ( ClassAd * ) tree ) -> GetComponents		2569285	0					
ANR	2569484	PtrMemberAccess	( ( ClassAd * ) tree ) -> GetComponents		2569285	0					
ANR	2569485	CastExpression	( ClassAd * ) tree		2569285	0					
ANR	2569486	CastTarget	ClassAd *		2569285	0					
ANR	2569487	Identifier	tree		2569285	1					
ANR	2569488	Identifier	GetComponents		2569285	1					
ANR	2569489	ArgumentList	attrs		2569285	1					
ANR	2569490	Argument	attrs		2569285	0					
ANR	2569491	Identifier	attrs		2569285	0					
ANR	2569492	ExpressionStatement	"UnparseAux ( buffer , attrs )"	299:3:6794:6821	2569285	2	True				
ANR	2569493	CallExpression	"UnparseAux ( buffer , attrs )"		2569285	0					
ANR	2569494	Callee	UnparseAux		2569285	0					
ANR	2569495	Identifier	UnparseAux		2569285	0					
ANR	2569496	ArgumentList	buffer		2569285	1					
ANR	2569497	Argument	buffer		2569285	0					
ANR	2569498	Identifier	buffer		2569285	0					
ANR	2569499	Argument	attrs		2569285	1					
ANR	2569500	Identifier	attrs		2569285	0					
ANR	2569501	ReturnStatement	return ;	300:3:6826:6832	2569285	3	True				
ANR	2569502	Label	case ExprTree :: EXPR_LIST_NODE :	303:2:6841:6870	2569285	10	True				
ANR	2569503	Identifier	ExprTree :: EXPR_LIST_NODE		2569285	0					
ANR	2569504	CompoundStatement		49:3:1092:1115	2569285	11					
ANR	2569505	IdentifierDeclStatement	vector < ExprTree * > exprs ;	304:3:6877:6900	2569285	0	True				
ANR	2569506	IdentifierDecl	exprs		2569285	0					
ANR	2569507	IdentifierDeclType	vector < ExprTree * >		2569285	0					
ANR	2569508	Identifier	exprs		2569285	1					
ANR	2569509	ExpressionStatement	( ( ExprList * ) tree ) -> GetComponents ( exprs )	305:3:6905:6946	2569285	1	True				
ANR	2569510	CallExpression	( ( ExprList * ) tree ) -> GetComponents ( exprs )		2569285	0					
ANR	2569511	Callee	( ( ExprList * ) tree ) -> GetComponents		2569285	0					
ANR	2569512	PtrMemberAccess	( ( ExprList * ) tree ) -> GetComponents		2569285	0					
ANR	2569513	CastExpression	( ExprList * ) tree		2569285	0					
ANR	2569514	CastTarget	ExprList *		2569285	0					
ANR	2569515	Identifier	tree		2569285	1					
ANR	2569516	Identifier	GetComponents		2569285	1					
ANR	2569517	ArgumentList	exprs		2569285	1					
ANR	2569518	Argument	exprs		2569285	0					
ANR	2569519	Identifier	exprs		2569285	0					
ANR	2569520	ExpressionStatement	"UnparseAux ( buffer , exprs )"	306:3:6951:6978	2569285	2	True				
ANR	2569521	CallExpression	"UnparseAux ( buffer , exprs )"		2569285	0					
ANR	2569522	Callee	UnparseAux		2569285	0					
ANR	2569523	Identifier	UnparseAux		2569285	0					
ANR	2569524	ArgumentList	buffer		2569285	1					
ANR	2569525	Argument	buffer		2569285	0					
ANR	2569526	Identifier	buffer		2569285	0					
ANR	2569527	Argument	exprs		2569285	1					
ANR	2569528	Identifier	exprs		2569285	0					
ANR	2569529	ReturnStatement	return ;	307:3:6983:6989	2569285	3	True				
ANR	2569530	Label	default :	310:2:6998:7005	2569285	12	True				
ANR	2569531	Identifier	default		2569285	0					
ANR	2569532	ExpressionStatement	"buffer = """""	314:3:7155:7166	2569285	13	True				
ANR	2569533	AssignmentExpression	"buffer = """""		2569285	0		=			
ANR	2569534	Identifier	buffer		2569285	0					
ANR	2569535	PrimaryExpression	""""""		2569285	1					
ANR	2569536	ExpressionStatement	CondorErrno = ERR_BAD_EXPRESSION	315:3:7171:7203	2569285	14	True				
ANR	2569537	AssignmentExpression	CondorErrno = ERR_BAD_EXPRESSION		2569285	0		=			
ANR	2569538	Identifier	CondorErrno		2569285	0					
ANR	2569539	Identifier	ERR_BAD_EXPRESSION		2569285	1					
ANR	2569540	ExpressionStatement	"CondorErrMsg = ""unknown expression type"""	316:3:7208:7248	2569285	15	True				
ANR	2569541	AssignmentExpression	"CondorErrMsg = ""unknown expression type"""		2569285	0		=			
ANR	2569542	Identifier	CondorErrMsg		2569285	0					
ANR	2569543	PrimaryExpression	"""unknown expression type"""		2569285	1					
ANR	2569544	ReturnStatement	return ;	317:3:7253:7259	2569285	16	True				
ANR	2569545	ReturnType	void		2569285	1					
ANR	2569546	Identifier	ClassAdUnParser :: Unparse		2569285	2					
ANR	2569547	ParameterList	"string & buffer , const ExprTree * tree"		2569285	3					
ANR	2569548	Parameter	string & buffer	255:9:5745:5758	2569285	0	True				
ANR	2569549	ParameterType	string &		2569285	0					
ANR	2569550	Identifier	buffer		2569285	1					
ANR	2569551	Parameter	const ExprTree * tree	255:25:5761:5780	2569285	1	True				
ANR	2569552	ParameterType	const ExprTree *		2569285	0					
ANR	2569553	Identifier	tree		2569285	1					
ANR	2569554	CFGEntryNode	ENTRY		2569285		True				
ANR	2569555	CFGExitNode	EXIT		2569285		True				
ANR	2569556	Symbol	val		2569285						
ANR	2569557	Symbol	op		2569285						
ANR	2569558	Symbol	tree		2569285						
ANR	2569559	Symbol	ERR_BAD_EXPRESSION		2569285						
ANR	2569560	Symbol	attrs		2569285						
ANR	2569561	Symbol	CondorErrno		2569285						
ANR	2569562	Symbol	* tree		2569285						
ANR	2569563	Symbol	args		2569285						
ANR	2569564	Symbol	ref		2569285						
ANR	2569565	Symbol	fnName		2569285						
ANR	2569566	Symbol	tree -> GetKind		2569285						
ANR	2569567	Symbol	CondorErrMsg		2569285						
ANR	2569568	Symbol	absolute		2569285						
ANR	2569569	Symbol	exprs		2569285						
ANR	2569570	Symbol	expr		2569285						
ANR	2569571	Symbol	buffer		2569285						
ANR	2569572	Symbol	factor		2569285						
ANR	2569573	Symbol	t1		2569285						
ANR	2569574	Symbol	t2		2569285						
ANR	2569575	Symbol	t3		2569285						
ANR	2569576	Function	ClassAdUnParser :: UnparseAux	323:0:7273:7684							
ANR	2569577	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , const Value & val , Value :: NumberFactor factor)"		2569576	0					
ANR	2569578	CompoundStatement		325:0:7371:7684	2569576	0					
ANR	2569579	ExpressionStatement	"Unparse ( buffer , val )"	326:1:7374:7396	2569576	0	True				
ANR	2569580	CallExpression	"Unparse ( buffer , val )"		2569576	0					
ANR	2569581	Callee	Unparse		2569576	0					
ANR	2569582	Identifier	Unparse		2569576	0					
ANR	2569583	ArgumentList	buffer		2569576	1					
ANR	2569584	Argument	buffer		2569576	0					
ANR	2569585	Identifier	buffer		2569576	0					
ANR	2569586	Argument	val		2569576	1					
ANR	2569587	Identifier	val		2569576	0					
ANR	2569588	IfStatement	if ( val . IsNumber ( ) && factor != Value :: NO_FACTOR )		2569576	1					
ANR	2569589	Condition	val . IsNumber ( ) && factor != Value :: NO_FACTOR	327:5:7403:7447	2569576	0	True				
ANR	2569590	AndExpression	val . IsNumber ( ) && factor != Value :: NO_FACTOR		2569576	0		&&			
ANR	2569591	CallExpression	val . IsNumber ( )		2569576	0					
ANR	2569592	Callee	val . IsNumber		2569576	0					
ANR	2569593	MemberAccess	val . IsNumber		2569576	0					
ANR	2569594	Identifier	val		2569576	0					
ANR	2569595	Identifier	IsNumber		2569576	1					
ANR	2569596	ArgumentList			2569576	1					
ANR	2569597	EqualityExpression	factor != Value :: NO_FACTOR		2569576	1		!=			
ANR	2569598	Identifier	factor		2569576	0					
ANR	2569599	Identifier	Value :: NO_FACTOR		2569576	1					
ANR	2569600	CompoundStatement		3:53:79:79	2569576	1					
ANR	2569601	ExpressionStatement	"buffer += ( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""	328:2:7455:7670	2569576	0	True				
ANR	2569602	AssignmentExpression	"buffer += ( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	0		+=			
ANR	2569603	Identifier	buffer		2569576	0					
ANR	2569604	ConditionalExpression	"( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	1					
ANR	2569605	Condition	factor == Value :: B_FACTOR		2569576	0					
ANR	2569606	EqualityExpression	factor == Value :: B_FACTOR		2569576	0		==			
ANR	2569607	Identifier	factor		2569576	0					
ANR	2569608	Identifier	Value :: B_FACTOR		2569576	1					
ANR	2569609	PrimaryExpression	"""B"""		2569576	1					
ANR	2569610	ConditionalExpression	"( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	2					
ANR	2569611	Condition	factor == Value :: K_FACTOR		2569576	0					
ANR	2569612	EqualityExpression	factor == Value :: K_FACTOR		2569576	0		==			
ANR	2569613	Identifier	factor		2569576	0					
ANR	2569614	Identifier	Value :: K_FACTOR		2569576	1					
ANR	2569615	PrimaryExpression	"""K"""		2569576	1					
ANR	2569616	ConditionalExpression	"( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	2					
ANR	2569617	Condition	factor == Value :: M_FACTOR		2569576	0					
ANR	2569618	EqualityExpression	factor == Value :: M_FACTOR		2569576	0		==			
ANR	2569619	Identifier	factor		2569576	0					
ANR	2569620	Identifier	Value :: M_FACTOR		2569576	1					
ANR	2569621	PrimaryExpression	"""M"""		2569576	1					
ANR	2569622	ConditionalExpression	"( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	2					
ANR	2569623	Condition	factor == Value :: G_FACTOR		2569576	0					
ANR	2569624	EqualityExpression	factor == Value :: G_FACTOR		2569576	0		==			
ANR	2569625	Identifier	factor		2569576	0					
ANR	2569626	Identifier	Value :: G_FACTOR		2569576	1					
ANR	2569627	PrimaryExpression	"""G"""		2569576	1					
ANR	2569628	ConditionalExpression	"( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2569576	2					
ANR	2569629	Condition	factor == Value :: T_FACTOR		2569576	0					
ANR	2569630	EqualityExpression	factor == Value :: T_FACTOR		2569576	0		==			
ANR	2569631	Identifier	factor		2569576	0					
ANR	2569632	Identifier	Value :: T_FACTOR		2569576	1					
ANR	2569633	PrimaryExpression	"""T"""		2569576	1					
ANR	2569634	PrimaryExpression	"""<error:bad factor>"""		2569576	2					
ANR	2569635	ReturnStatement	return ;	335:1:7676:7682	2569576	2	True				
ANR	2569636	ReturnType	void		2569576	1					
ANR	2569637	Identifier	ClassAdUnParser :: UnparseAux		2569576	2					
ANR	2569638	ParameterList	"string & buffer , const Value & val , Value :: NumberFactor factor"		2569576	3					
ANR	2569639	Parameter	string & buffer	324:12:7308:7321	2569576	0	True				
ANR	2569640	ParameterType	string &		2569576	0					
ANR	2569641	Identifier	buffer		2569576	1					
ANR	2569642	Parameter	const Value & val	324:28:7324:7339	2569576	1	True				
ANR	2569643	ParameterType	const Value &		2569576	0					
ANR	2569644	Identifier	val		2569576	1					
ANR	2569645	Parameter	Value :: NumberFactor factor	324:46:7342:7367	2569576	2	True				
ANR	2569646	ParameterType	Value :: NumberFactor		2569576	0					
ANR	2569647	Identifier	factor		2569576	1					
ANR	2569648	CFGEntryNode	ENTRY		2569576		True				
ANR	2569649	CFGExitNode	EXIT		2569576		True				
ANR	2569650	Symbol	val		2569576						
ANR	2569651	Symbol	Value :: NO_FACTOR		2569576						
ANR	2569652	Symbol	buffer		2569576						
ANR	2569653	Symbol	factor		2569576						
ANR	2569654	Symbol	val . IsNumber		2569576						
ANR	2569655	Symbol	Value :: B_FACTOR		2569576						
ANR	2569656	Symbol	Value :: G_FACTOR		2569576						
ANR	2569657	Symbol	Value :: K_FACTOR		2569576						
ANR	2569658	Symbol	Value :: T_FACTOR		2569576						
ANR	2569659	Symbol	Value :: M_FACTOR		2569576						
ANR	2569660	Function	ClassAdUnParser :: UnparseAux	338:0:7687:7939							
ANR	2569661	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , const ExprTree * expr , string & attrName , bool absolute)"		2569660	0					
ANR	2569662	CompoundStatement		340:0:7794:7939	2569660	0					
ANR	2569663	IfStatement	if ( expr )		2569660	0					
ANR	2569664	Condition	expr	341:5:7801:7804	2569660	0	True				
ANR	2569665	Identifier	expr		2569660	0					
ANR	2569666	CompoundStatement		2:12:13:13	2569660	1					
ANR	2569667	ExpressionStatement	"Unparse ( buffer , expr )"	342:2:7812:7835	2569660	0	True				
ANR	2569668	CallExpression	"Unparse ( buffer , expr )"		2569660	0					
ANR	2569669	Callee	Unparse		2569660	0					
ANR	2569670	Identifier	Unparse		2569660	0					
ANR	2569671	ArgumentList	buffer		2569660	1					
ANR	2569672	Argument	buffer		2569660	0					
ANR	2569673	Identifier	buffer		2569660	0					
ANR	2569674	Argument	expr		2569660	1					
ANR	2569675	Identifier	expr		2569660	0					
ANR	2569676	ExpressionStatement	"buffer += ""."" + attrName"	343:2:7839:7863	2569660	1	True				
ANR	2569677	AssignmentExpression	"buffer += ""."" + attrName"		2569660	0		+=			
ANR	2569678	Identifier	buffer		2569660	0					
ANR	2569679	AdditiveExpression	"""."" + attrName"		2569660	1		+			
ANR	2569680	PrimaryExpression	"""."""		2569660	0					
ANR	2569681	Identifier	attrName		2569660	1					
ANR	2569682	ReturnStatement	return ;	344:2:7867:7873	2569660	2	True				
ANR	2569683	IfStatement	if ( absolute )		2569660	1					
ANR	2569684	Condition	absolute	346:5:7883:7890	2569660	0	True				
ANR	2569685	Identifier	absolute		2569660	0					
ANR	2569686	ExpressionStatement	"buffer += ""."""	346:16:7894:7907	2569660	1	True				
ANR	2569687	AssignmentExpression	"buffer += ""."""		2569660	0		+=			
ANR	2569688	Identifier	buffer		2569660	0					
ANR	2569689	PrimaryExpression	"""."""		2569660	1					
ANR	2569690	ExpressionStatement	"UnparseAux ( buffer , attrName )"	347:1:7910:7937	2569660	2	True				
ANR	2569691	CallExpression	"UnparseAux ( buffer , attrName )"		2569660	0					
ANR	2569692	Callee	UnparseAux		2569660	0					
ANR	2569693	Identifier	UnparseAux		2569660	0					
ANR	2569694	ArgumentList	buffer		2569660	1					
ANR	2569695	Argument	buffer		2569660	0					
ANR	2569696	Identifier	buffer		2569660	0					
ANR	2569697	Argument	attrName		2569660	1					
ANR	2569698	Identifier	attrName		2569660	0					
ANR	2569699	ReturnType	void		2569660	1					
ANR	2569700	Identifier	ClassAdUnParser :: UnparseAux		2569660	2					
ANR	2569701	ParameterList	"string & buffer , const ExprTree * expr , string & attrName , bool absolute"		2569660	3					
ANR	2569702	Parameter	string & buffer	339:12:7722:7735	2569660	0	True				
ANR	2569703	ParameterType	string &		2569660	0					
ANR	2569704	Identifier	buffer		2569660	1					
ANR	2569705	Parameter	const ExprTree * expr	339:28:7738:7757	2569660	1	True				
ANR	2569706	ParameterType	const ExprTree *		2569660	0					
ANR	2569707	Identifier	expr		2569660	1					
ANR	2569708	Parameter	string & attrName	339:50:7760:7775	2569660	2	True				
ANR	2569709	ParameterType	string &		2569660	0					
ANR	2569710	Identifier	attrName		2569660	1					
ANR	2569711	Parameter	bool absolute	339:68:7778:7790	2569660	3	True				
ANR	2569712	ParameterType	bool		2569660	0					
ANR	2569713	Identifier	absolute		2569660	1					
ANR	2569714	CFGEntryNode	ENTRY		2569660		True				
ANR	2569715	CFGExitNode	EXIT		2569660		True				
ANR	2569716	Symbol	absolute		2569660						
ANR	2569717	Symbol	expr		2569660						
ANR	2569718	Symbol	buffer		2569660						
ANR	2569719	Symbol	attrName		2569660						
ANR	2569720	Function	ClassAdUnParser :: UnparseAux	350:0:7942:9571							
ANR	2569721	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , Operation :: OpKind op , ExprTree * t1 , ExprTree * t2 , ExprTree * t3)"		2569720	0					
ANR	2569722	CompoundStatement		353:0:8058:9571	2569720	0					
ANR	2569723	IfStatement	if ( op == Operation :: PARENTHESES_OP )		2569720	0					
ANR	2569724	Condition	op == Operation :: PARENTHESES_OP	355:5:8093:8121	2569720	0	True				
ANR	2569725	EqualityExpression	op == Operation :: PARENTHESES_OP		2569720	0		==			
ANR	2569726	Identifier	op		2569720	0					
ANR	2569727	Identifier	Operation :: PARENTHESES_OP		2569720	1					
ANR	2569728	CompoundStatement		3:37:66:66	2569720	1					
ANR	2569729	ExpressionStatement	"buffer += ""( """	356:2:8129:8143	2569720	0	True				
ANR	2569730	AssignmentExpression	"buffer += ""( """		2569720	0		+=			
ANR	2569731	Identifier	buffer		2569720	0					
ANR	2569732	PrimaryExpression	"""( """		2569720	1					
ANR	2569733	ExpressionStatement	"Unparse ( buffer , t1 )"	357:2:8147:8168	2569720	1	True				
ANR	2569734	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569735	Callee	Unparse		2569720	0					
ANR	2569736	Identifier	Unparse		2569720	0					
ANR	2569737	ArgumentList	buffer		2569720	1					
ANR	2569738	Argument	buffer		2569720	0					
ANR	2569739	Identifier	buffer		2569720	0					
ANR	2569740	Argument	t1		2569720	1					
ANR	2569741	Identifier	t1		2569720	0					
ANR	2569742	ExpressionStatement	"buffer += "" )"""	358:2:8172:8186	2569720	2	True				
ANR	2569743	AssignmentExpression	"buffer += "" )"""		2569720	0		+=			
ANR	2569744	Identifier	buffer		2569720	0					
ANR	2569745	PrimaryExpression	""" )"""		2569720	1					
ANR	2569746	ReturnStatement	return ;	359:2:8190:8196	2569720	3	True				
ANR	2569747	IfStatement	if ( op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP )		2569720	1					
ANR	2569748	Condition	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP	362:5:8239:8369	2569720	0	True				
ANR	2569749	OrExpression	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2569720	0		||			
ANR	2569750	EqualityExpression	op == Operation :: UNARY_PLUS_OP		2569720	0		==			
ANR	2569751	Identifier	op		2569720	0					
ANR	2569752	Identifier	Operation :: UNARY_PLUS_OP		2569720	1					
ANR	2569753	OrExpression	op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2569720	1		||			
ANR	2569754	EqualityExpression	op == Operation :: UNARY_MINUS_OP		2569720	0		==			
ANR	2569755	Identifier	op		2569720	0					
ANR	2569756	Identifier	Operation :: UNARY_MINUS_OP		2569720	1					
ANR	2569757	OrExpression	op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2569720	1		||			
ANR	2569758	EqualityExpression	op == Operation :: LOGICAL_NOT_OP		2569720	0		==			
ANR	2569759	Identifier	op		2569720	0					
ANR	2569760	Identifier	Operation :: LOGICAL_NOT_OP		2569720	1					
ANR	2569761	EqualityExpression	op == Operation :: BITWISE_NOT_OP		2569720	1		==			
ANR	2569762	Identifier	op		2569720	0					
ANR	2569763	Identifier	Operation :: BITWISE_NOT_OP		2569720	1					
ANR	2569764	CompoundStatement		11:68:314:314	2569720	1					
ANR	2569765	ExpressionStatement	buffer += opString [ op ]	364:2:8377:8399	2569720	0	True				
ANR	2569766	AssignmentExpression	buffer += opString [ op ]		2569720	0		+=			
ANR	2569767	Identifier	buffer		2569720	0					
ANR	2569768	ArrayIndexing	opString [ op ]		2569720	1					
ANR	2569769	Identifier	opString		2569720	0					
ANR	2569770	Identifier	op		2569720	1					
ANR	2569771	ExpressionStatement	"Unparse ( buffer , t1 )"	365:2:8403:8424	2569720	1	True				
ANR	2569772	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569773	Callee	Unparse		2569720	0					
ANR	2569774	Identifier	Unparse		2569720	0					
ANR	2569775	ArgumentList	buffer		2569720	1					
ANR	2569776	Argument	buffer		2569720	0					
ANR	2569777	Identifier	buffer		2569720	0					
ANR	2569778	Argument	t1		2569720	1					
ANR	2569779	Identifier	t1		2569720	0					
ANR	2569780	ReturnStatement	return ;	366:2:8428:8434	2569720	2	True				
ANR	2569781	IfStatement	if ( op == Operation :: TERNARY_OP )		2569720	2					
ANR	2569782	Condition	op == Operation :: TERNARY_OP	369:5:8478:8502	2569720	0	True				
ANR	2569783	EqualityExpression	op == Operation :: TERNARY_OP		2569720	0		==			
ANR	2569784	Identifier	op		2569720	0					
ANR	2569785	Identifier	Operation :: TERNARY_OP		2569720	1					
ANR	2569786	CompoundStatement		17:33:447:447	2569720	1					
ANR	2569787	ExpressionStatement	"Unparse ( buffer , t1 )"	370:2:8510:8531	2569720	0	True				
ANR	2569788	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569789	Callee	Unparse		2569720	0					
ANR	2569790	Identifier	Unparse		2569720	0					
ANR	2569791	ArgumentList	buffer		2569720	1					
ANR	2569792	Argument	buffer		2569720	0					
ANR	2569793	Identifier	buffer		2569720	0					
ANR	2569794	Argument	t1		2569720	1					
ANR	2569795	Identifier	t1		2569720	0					
ANR	2569796	ExpressionStatement	"buffer += "" ? """	371:2:8535:8550	2569720	1	True				
ANR	2569797	AssignmentExpression	"buffer += "" ? """		2569720	0		+=			
ANR	2569798	Identifier	buffer		2569720	0					
ANR	2569799	PrimaryExpression	""" ? """		2569720	1					
ANR	2569800	ExpressionStatement	"Unparse ( buffer , t2 )"	372:2:8554:8575	2569720	2	True				
ANR	2569801	CallExpression	"Unparse ( buffer , t2 )"		2569720	0					
ANR	2569802	Callee	Unparse		2569720	0					
ANR	2569803	Identifier	Unparse		2569720	0					
ANR	2569804	ArgumentList	buffer		2569720	1					
ANR	2569805	Argument	buffer		2569720	0					
ANR	2569806	Identifier	buffer		2569720	0					
ANR	2569807	Argument	t2		2569720	1					
ANR	2569808	Identifier	t2		2569720	0					
ANR	2569809	ExpressionStatement	"buffer += "" : """	373:2:8579:8594	2569720	3	True				
ANR	2569810	AssignmentExpression	"buffer += "" : """		2569720	0		+=			
ANR	2569811	Identifier	buffer		2569720	0					
ANR	2569812	PrimaryExpression	""" : """		2569720	1					
ANR	2569813	ExpressionStatement	"Unparse ( buffer , t3 )"	374:2:8598:8619	2569720	4	True				
ANR	2569814	CallExpression	"Unparse ( buffer , t3 )"		2569720	0					
ANR	2569815	Callee	Unparse		2569720	0					
ANR	2569816	Identifier	Unparse		2569720	0					
ANR	2569817	ArgumentList	buffer		2569720	1					
ANR	2569818	Argument	buffer		2569720	0					
ANR	2569819	Identifier	buffer		2569720	0					
ANR	2569820	Argument	t3		2569720	1					
ANR	2569821	Identifier	t3		2569720	0					
ANR	2569822	ReturnStatement	return ;	375:2:8623:8629	2569720	5	True				
ANR	2569823	IfStatement	if ( op == Operation :: SUBSCRIPT_OP )		2569720	3					
ANR	2569824	Condition	op == Operation :: SUBSCRIPT_OP	378:5:8675:8701	2569720	0	True				
ANR	2569825	EqualityExpression	op == Operation :: SUBSCRIPT_OP		2569720	0		==			
ANR	2569826	Identifier	op		2569720	0					
ANR	2569827	Identifier	Operation :: SUBSCRIPT_OP		2569720	1					
ANR	2569828	CompoundStatement		26:35:646:646	2569720	1					
ANR	2569829	ExpressionStatement	"Unparse ( buffer , t1 )"	379:2:8709:8730	2569720	0	True				
ANR	2569830	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569831	Callee	Unparse		2569720	0					
ANR	2569832	Identifier	Unparse		2569720	0					
ANR	2569833	ArgumentList	buffer		2569720	1					
ANR	2569834	Argument	buffer		2569720	0					
ANR	2569835	Identifier	buffer		2569720	0					
ANR	2569836	Argument	t1		2569720	1					
ANR	2569837	Identifier	t1		2569720	0					
ANR	2569838	ExpressionStatement	buffer += '['	380:2:8734:8747	2569720	1	True				
ANR	2569839	AssignmentExpression	buffer += '['		2569720	0		+=			
ANR	2569840	Identifier	buffer		2569720	0					
ANR	2569841	PrimaryExpression	'['		2569720	1					
ANR	2569842	ExpressionStatement	"Unparse ( buffer , t2 )"	381:2:8751:8772	2569720	2	True				
ANR	2569843	CallExpression	"Unparse ( buffer , t2 )"		2569720	0					
ANR	2569844	Callee	Unparse		2569720	0					
ANR	2569845	Identifier	Unparse		2569720	0					
ANR	2569846	ArgumentList	buffer		2569720	1					
ANR	2569847	Argument	buffer		2569720	0					
ANR	2569848	Identifier	buffer		2569720	0					
ANR	2569849	Argument	t2		2569720	1					
ANR	2569850	Identifier	t2		2569720	0					
ANR	2569851	ExpressionStatement	buffer += ']'	382:2:8776:8789	2569720	3	True				
ANR	2569852	AssignmentExpression	buffer += ']'		2569720	0		+=			
ANR	2569853	Identifier	buffer		2569720	0					
ANR	2569854	PrimaryExpression	']'		2569720	1					
ANR	2569855	ReturnStatement	return ;	383:2:8793:8799	2569720	4	True				
ANR	2569856	IfStatement	if ( oldClassAd )		2569720	4					
ANR	2569857	Condition	oldClassAd	387:5:8845:8854	2569720	0	True				
ANR	2569858	Identifier	oldClassAd		2569720	0					
ANR	2569859	CompoundStatement		35:18:799:799	2569720	1					
ANR	2569860	ExpressionStatement	"Unparse ( buffer , t1 )"	388:2:8862:8883	2569720	0	True				
ANR	2569861	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569862	Callee	Unparse		2569720	0					
ANR	2569863	Identifier	Unparse		2569720	0					
ANR	2569864	ArgumentList	buffer		2569720	1					
ANR	2569865	Argument	buffer		2569720	0					
ANR	2569866	Identifier	buffer		2569720	0					
ANR	2569867	Argument	t1		2569720	1					
ANR	2569868	Identifier	t1		2569720	0					
ANR	2569869	IfStatement	if ( op == Operation :: META_EQUAL_OP )		2569720	1					
ANR	2569870	Condition	op == Operation :: META_EQUAL_OP	389:6:8891:8918	2569720	0	True				
ANR	2569871	EqualityExpression	op == Operation :: META_EQUAL_OP		2569720	0		==			
ANR	2569872	Identifier	op		2569720	0					
ANR	2569873	Identifier	Operation :: META_EQUAL_OP		2569720	1					
ANR	2569874	CompoundStatement		37:37:863:863	2569720	1					
ANR	2569875	ExpressionStatement	"buffer += "" =?= """	390:3:8927:8944	2569720	0	True				
ANR	2569876	AssignmentExpression	"buffer += "" =?= """		2569720	0		+=			
ANR	2569877	Identifier	buffer		2569720	0					
ANR	2569878	PrimaryExpression	""" =?= """		2569720	1					
ANR	2569879	ElseStatement	else		2569720	0					
ANR	2569880	IfStatement	if ( op == Operation :: META_NOT_EQUAL_OP )		2569720	0					
ANR	2569881	Condition	op == Operation :: META_NOT_EQUAL_OP	392:11:8961:8992	2569720	0	True				
ANR	2569882	EqualityExpression	op == Operation :: META_NOT_EQUAL_OP		2569720	0		==			
ANR	2569883	Identifier	op		2569720	0					
ANR	2569884	Identifier	Operation :: META_NOT_EQUAL_OP		2569720	1					
ANR	2569885	CompoundStatement		40:46:937:937	2569720	1					
ANR	2569886	ExpressionStatement	"buffer += "" =!= """	393:3:9001:9018	2569720	0	True				
ANR	2569887	AssignmentExpression	"buffer += "" =!= """		2569720	0		+=			
ANR	2569888	Identifier	buffer		2569720	0					
ANR	2569889	PrimaryExpression	""" =!= """		2569720	1					
ANR	2569890	ElseStatement	else		2569720	0					
ANR	2569891	CompoundStatement		43:7:972:972	2569720	0					
ANR	2569892	ExpressionStatement	buffer += opString [ op ]	396:3:9036:9058	2569720	0	True				
ANR	2569893	AssignmentExpression	buffer += opString [ op ]		2569720	0		+=			
ANR	2569894	Identifier	buffer		2569720	0					
ANR	2569895	ArrayIndexing	opString [ op ]		2569720	1					
ANR	2569896	Identifier	opString		2569720	0					
ANR	2569897	Identifier	op		2569720	1					
ANR	2569898	ExpressionStatement	"Unparse ( buffer , t2 )"	398:2:9066:9087	2569720	2	True				
ANR	2569899	CallExpression	"Unparse ( buffer , t2 )"		2569720	0					
ANR	2569900	Callee	Unparse		2569720	0					
ANR	2569901	Identifier	Unparse		2569720	0					
ANR	2569902	ArgumentList	buffer		2569720	1					
ANR	2569903	Argument	buffer		2569720	0					
ANR	2569904	Identifier	buffer		2569720	0					
ANR	2569905	Argument	t2		2569720	1					
ANR	2569906	Identifier	t2		2569720	0					
ANR	2569907	ReturnStatement	return ;	399:2:9091:9097	2569720	3	True				
ANR	2569908	ExpressionStatement	"Unparse ( buffer , t1 )"	403:1:9135:9156	2569720	5	True				
ANR	2569909	CallExpression	"Unparse ( buffer , t1 )"		2569720	0					
ANR	2569910	Callee	Unparse		2569720	0					
ANR	2569911	Identifier	Unparse		2569720	0					
ANR	2569912	ArgumentList	buffer		2569720	1					
ANR	2569913	Argument	buffer		2569720	0					
ANR	2569914	Identifier	buffer		2569720	0					
ANR	2569915	Argument	t1		2569720	1					
ANR	2569916	Identifier	t1		2569720	0					
ANR	2569917	IfStatement	if ( ! xmlUnparse )		2569720	6					
ANR	2569918	Condition	! xmlUnparse	404:5:9163:9173	2569720	0	True				
ANR	2569919	UnaryOperationExpression	! xmlUnparse		2569720	0					
ANR	2569920	UnaryOperator	!		2569720	0					
ANR	2569921	Identifier	xmlUnparse		2569720	1					
ANR	2569922	CompoundStatement		52:18:1117:1117	2569720	1					
ANR	2569923	ExpressionStatement	buffer += opString [ op ]	405:2:9180:9202	2569720	0	True				
ANR	2569924	AssignmentExpression	buffer += opString [ op ]		2569720	0		+=			
ANR	2569925	Identifier	buffer		2569720	0					
ANR	2569926	ArrayIndexing	opString [ op ]		2569720	1					
ANR	2569927	Identifier	opString		2569720	0					
ANR	2569928	Identifier	op		2569720	1					
ANR	2569929	ElseStatement	else		2569720	0					
ANR	2569930	CompoundStatement		56:2:1196:1229	2569720	0					
ANR	2569931	IdentifierDeclStatement	const char * opstring = opString [ op ] ;	407:2:9216:9251	2569720	0	True				
ANR	2569932	IdentifierDecl	* opstring = opString [ op ]		2569720	0					
ANR	2569933	IdentifierDeclType	const char *		2569720	0					
ANR	2569934	Identifier	opstring		2569720	1					
ANR	2569935	AssignmentExpression	* opstring = opString [ op ]		2569720	2		=			
ANR	2569936	Identifier	opstring		2569720	0					
ANR	2569937	ArrayIndexing	opString [ op ]		2569720	1					
ANR	2569938	Identifier	opString		2569720	0					
ANR	2569939	Identifier	op		2569720	1					
ANR	2569940	IdentifierDeclStatement	int length = strlen ( opstring ) ;	408:2:9255:9288	2569720	1	True				
ANR	2569941	IdentifierDecl	length = strlen ( opstring )		2569720	0					
ANR	2569942	IdentifierDeclType	int		2569720	0					
ANR	2569943	Identifier	length		2569720	1					
ANR	2569944	AssignmentExpression	length = strlen ( opstring )		2569720	2		=			
ANR	2569945	Identifier	length		2569720	0					
ANR	2569946	CallExpression	strlen ( opstring )		2569720	1					
ANR	2569947	Callee	strlen		2569720	0					
ANR	2569948	Identifier	strlen		2569720	0					
ANR	2569949	ArgumentList	opstring		2569720	1					
ANR	2569950	Argument	opstring		2569720	0					
ANR	2569951	Identifier	opstring		2569720	0					
ANR	2569952	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2569720	2					
ANR	2569953	ForInit	int i = 0 ;	409:6:9296:9305	2569720	0	True				
ANR	2569954	IdentifierDeclStatement	int i = 0 ;		2569720	0					
ANR	2569955	IdentifierDecl	i = 0		2569720	0					
ANR	2569956	IdentifierDeclType	int		2569720	0					
ANR	2569957	Identifier	i		2569720	1					
ANR	2569958	AssignmentExpression	i = 0		2569720	2		=			
ANR	2569959	Identifier	i		2569720	0					
ANR	2569960	PrimaryExpression	0		2569720	1					
ANR	2569961	Condition	i < length	409:17:9307:9316	2569720	1	True				
ANR	2569962	RelationalExpression	i < length		2569720	0		<			
ANR	2569963	Identifier	i		2569720	0					
ANR	2569964	Identifier	length		2569720	1					
ANR	2569965	PostIncDecOperationExpression	i ++	409:29:9319:9321	2569720	2	True				
ANR	2569966	Identifier	i		2569720	0					
ANR	2569967	IncDec	++		2569720	1					
ANR	2569968	CompoundStatement		58:3:1270:1288	2569720	3					
ANR	2569969	IdentifierDeclStatement	char c = * opstring ;	410:3:9329:9347	2569720	0	True				
ANR	2569970	IdentifierDecl	c = * opstring		2569720	0					
ANR	2569971	IdentifierDeclType	char		2569720	0					
ANR	2569972	Identifier	c		2569720	1					
ANR	2569973	AssignmentExpression	c = * opstring		2569720	2		=			
ANR	2569974	Identifier	c		2569720	0					
ANR	2569975	UnaryOperationExpression	* opstring		2569720	1					
ANR	2569976	UnaryOperator	*		2569720	0					
ANR	2569977	Identifier	opstring		2569720	1					
ANR	2569978	SwitchStatement	switch ( c )		2569720	1					
ANR	2569979	Condition	c	411:11:9360:9360	2569720	0	True				
ANR	2569980	Identifier	c		2569720	0					
ANR	2569981	CompoundStatement		59:14:1304:1304	2569720	1					
ANR	2569982	Label	case '&' :	412:3:9368:9376	2569720	0	True				
ANR	2569983	ExpressionStatement	"buffer += ""&amp;"""	412:14:9379:9396	2569720	1	True				
ANR	2569984	AssignmentExpression	"buffer += ""&amp;"""		2569720	0		+=			
ANR	2569985	Identifier	buffer		2569720	0					
ANR	2569986	PrimaryExpression	"""&amp;"""		2569720	1					
ANR	2569987	BreakStatement	break ;	412:34:9399:9404	2569720	2	True				
ANR	2569988	Label	case '<' :	413:3:9409:9417	2569720	3	True				
ANR	2569989	ExpressionStatement	"buffer += ""&lt;"""	413:14:9420:9436	2569720	4	True				
ANR	2569990	AssignmentExpression	"buffer += ""&lt;"""		2569720	0		+=			
ANR	2569991	Identifier	buffer		2569720	0					
ANR	2569992	PrimaryExpression	"""&lt;"""		2569720	1					
ANR	2569993	BreakStatement	break ;	413:34:9440:9445	2569720	5	True				
ANR	2569994	Label	case '>' :	414:3:9450:9458	2569720	6	True				
ANR	2569995	ExpressionStatement	"buffer += ""&gt;"""	414:14:9461:9477	2569720	7	True				
ANR	2569996	AssignmentExpression	"buffer += ""&gt;"""		2569720	0		+=			
ANR	2569997	Identifier	buffer		2569720	0					
ANR	2569998	PrimaryExpression	"""&gt;"""		2569720	1					
ANR	2569999	BreakStatement	break ;	414:34:9481:9486	2569720	8	True				
ANR	2570000	Label	default :	415:3:9491:9498	2569720	9	True				
ANR	2570001	Identifier	default		2569720	0					
ANR	2570002	ExpressionStatement	buffer += c	415:12:9500:9511	2569720	10	True				
ANR	2570003	AssignmentExpression	buffer += c		2569720	0		+=			
ANR	2570004	Identifier	buffer		2569720	0					
ANR	2570005	Identifier	c		2569720	1					
ANR	2570006	BreakStatement	break ;	415:25:9513:9518	2569720	11	True				
ANR	2570007	ExpressionStatement	opstring ++	417:3:9528:9538	2569720	2	True				
ANR	2570008	PostIncDecOperationExpression	opstring ++		2569720	0					
ANR	2570009	Identifier	opstring		2569720	0					
ANR	2570010	IncDec	++		2569720	1					
ANR	2570011	ExpressionStatement	"Unparse ( buffer , t2 )"	420:1:9548:9569	2569720	7	True				
ANR	2570012	CallExpression	"Unparse ( buffer , t2 )"		2569720	0					
ANR	2570013	Callee	Unparse		2569720	0					
ANR	2570014	Identifier	Unparse		2569720	0					
ANR	2570015	ArgumentList	buffer		2569720	1					
ANR	2570016	Argument	buffer		2569720	0					
ANR	2570017	Identifier	buffer		2569720	0					
ANR	2570018	Argument	t2		2569720	1					
ANR	2570019	Identifier	t2		2569720	0					
ANR	2570020	ReturnType	void		2569720	1					
ANR	2570021	Identifier	ClassAdUnParser :: UnparseAux		2569720	2					
ANR	2570022	ParameterList	"string & buffer , Operation :: OpKind op , ExprTree * t1 , ExprTree * t2 , ExprTree * t3"		2569720	3					
ANR	2570023	Parameter	string & buffer	351:11:7976:7989	2569720	0	True				
ANR	2570024	ParameterType	string &		2569720	0					
ANR	2570025	Identifier	buffer		2569720	1					
ANR	2570026	Parameter	Operation :: OpKind op	351:27:7992:8011	2569720	1	True				
ANR	2570027	ParameterType	Operation :: OpKind		2569720	0					
ANR	2570028	Identifier	op		2569720	1					
ANR	2570029	Parameter	ExprTree * t1	351:49:8014:8025	2569720	2	True				
ANR	2570030	ParameterType	ExprTree *		2569720	0					
ANR	2570031	Identifier	t1		2569720	1					
ANR	2570032	Parameter	ExprTree * t2	351:63:8028:8039	2569720	3	True				
ANR	2570033	ParameterType	ExprTree *		2569720	0					
ANR	2570034	Identifier	t2		2569720	1					
ANR	2570035	Parameter	ExprTree * t3	352:1:8044:8055	2569720	4	True				
ANR	2570036	ParameterType	ExprTree *		2569720	0					
ANR	2570037	Identifier	t3		2569720	1					
ANR	2570038	CFGEntryNode	ENTRY		2569720		True				
ANR	2570039	CFGExitNode	EXIT		2569720		True				
ANR	2570040	Symbol	opstring		2569720						
ANR	2570041	Symbol	opString		2569720						
ANR	2570042	Symbol	* op		2569720						
ANR	2570043	Symbol	Operation :: LOGICAL_NOT_OP		2569720						
ANR	2570044	Symbol	Operation :: META_EQUAL_OP		2569720						
ANR	2570045	Symbol	Operation :: META_NOT_EQUAL_OP		2569720						
ANR	2570046	Symbol	Operation :: UNARY_MINUS_OP		2569720						
ANR	2570047	Symbol	strlen		2569720						
ANR	2570048	Symbol	oldClassAd		2569720						
ANR	2570049	Symbol	Operation :: TERNARY_OP		2569720						
ANR	2570050	Symbol	Operation :: BITWISE_NOT_OP		2569720						
ANR	2570051	Symbol	buffer		2569720						
ANR	2570052	Symbol	Operation :: SUBSCRIPT_OP		2569720						
ANR	2570053	Symbol	Operation :: UNARY_PLUS_OP		2569720						
ANR	2570054	Symbol	op		2569720						
ANR	2570055	Symbol	c		2569720						
ANR	2570056	Symbol	* opstring		2569720						
ANR	2570057	Symbol	length		2569720						
ANR	2570058	Symbol	i		2569720						
ANR	2570059	Symbol	xmlUnparse		2569720						
ANR	2570060	Symbol	Operation :: PARENTHESES_OP		2569720						
ANR	2570061	Symbol	* opString		2569720						
ANR	2570062	Symbol	t1		2569720						
ANR	2570063	Symbol	t2		2569720						
ANR	2570064	Symbol	t3		2569720						
ANR	2570065	Function	ClassAdUnParser :: UnparseAux	423:0:9574:9878							
ANR	2570066	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , string & fnName , vector < ExprTree * > & args)"		2570065	0					
ANR	2570067	CompoundStatement		425:0:9667:9878	2570065	0					
ANR	2570068	IdentifierDeclStatement	vector < ExprTree * > :: const_iterator itr ;	426:1:9670:9707	2570065	0	True				
ANR	2570069	IdentifierDecl	itr		2570065	0					
ANR	2570070	IdentifierDeclType	vector < ExprTree * > :: const_iterator		2570065	0					
ANR	2570071	Identifier	itr		2570065	1					
ANR	2570072	ExpressionStatement	"buffer += fnName + ""("""	428:1:9711:9733	2570065	1	True				
ANR	2570073	AssignmentExpression	"buffer += fnName + ""("""		2570065	0		+=			
ANR	2570074	Identifier	buffer		2570065	0					
ANR	2570075	AdditiveExpression	"fnName + ""("""		2570065	1		+			
ANR	2570076	Identifier	fnName		2570065	0					
ANR	2570077	PrimaryExpression	"""("""		2570065	1					
ANR	2570078	ForStatement	for ( itr = args . begin ( ) ; itr != args . end ( ) ; itr ++ )		2570065	2					
ANR	2570079	ForInit	itr = args . begin ( ) ;	429:6:9741:9758	2570065	0	True				
ANR	2570080	AssignmentExpression	itr = args . begin ( )		2570065	0		=			
ANR	2570081	Identifier	itr		2570065	0					
ANR	2570082	CallExpression	args . begin ( )		2570065	1					
ANR	2570083	Callee	args . begin		2570065	0					
ANR	2570084	MemberAccess	args . begin		2570065	0					
ANR	2570085	Identifier	args		2570065	0					
ANR	2570086	Identifier	begin		2570065	1					
ANR	2570087	ArgumentList			2570065	1					
ANR	2570088	Condition	itr != args . end ( )	429:25:9760:9775	2570065	1	True				
ANR	2570089	EqualityExpression	itr != args . end ( )		2570065	0		!=			
ANR	2570090	Identifier	itr		2570065	0					
ANR	2570091	CallExpression	args . end ( )		2570065	1					
ANR	2570092	Callee	args . end		2570065	0					
ANR	2570093	MemberAccess	args . end		2570065	0					
ANR	2570094	Identifier	args		2570065	0					
ANR	2570095	Identifier	end		2570065	1					
ANR	2570096	ArgumentList			2570065	1					
ANR	2570097	PostIncDecOperationExpression	itr ++	429:43:9778:9782	2570065	2	True				
ANR	2570098	Identifier	itr		2570065	0					
ANR	2570099	IncDec	++		2570065	1					
ANR	2570100	CompoundStatement		5:51:118:118	2570065	3					
ANR	2570101	ExpressionStatement	"Unparse ( buffer , * itr )"	430:2:9790:9813	2570065	0	True				
ANR	2570102	CallExpression	"Unparse ( buffer , * itr )"		2570065	0					
ANR	2570103	Callee	Unparse		2570065	0					
ANR	2570104	Identifier	Unparse		2570065	0					
ANR	2570105	ArgumentList	buffer		2570065	1					
ANR	2570106	Argument	buffer		2570065	0					
ANR	2570107	Identifier	buffer		2570065	0					
ANR	2570108	Argument	* itr		2570065	1					
ANR	2570109	UnaryOperationExpression	* itr		2570065	0					
ANR	2570110	UnaryOperator	*		2570065	0					
ANR	2570111	Identifier	itr		2570065	1					
ANR	2570112	IfStatement	if ( itr + 1 != args . end ( ) )		2570065	1					
ANR	2570113	Condition	itr + 1 != args . end ( )	431:6:9821:9840	2570065	0	True				
ANR	2570114	EqualityExpression	itr + 1 != args . end ( )		2570065	0		!=			
ANR	2570115	AdditiveExpression	itr + 1		2570065	0		+			
ANR	2570116	Identifier	itr		2570065	0					
ANR	2570117	PrimaryExpression	1		2570065	1					
ANR	2570118	CallExpression	args . end ( )		2570065	1					
ANR	2570119	Callee	args . end		2570065	0					
ANR	2570120	MemberAccess	args . end		2570065	0					
ANR	2570121	Identifier	args		2570065	0					
ANR	2570122	Identifier	end		2570065	1					
ANR	2570123	ArgumentList			2570065	1					
ANR	2570124	ExpressionStatement	"buffer += ','"	431:29:9844:9857	2570065	1	True				
ANR	2570125	AssignmentExpression	"buffer += ','"		2570065	0		+=			
ANR	2570126	Identifier	buffer		2570065	0					
ANR	2570127	PrimaryExpression	"','"		2570065	1					
ANR	2570128	ExpressionStatement	"buffer += "")"""	433:1:9863:9876	2570065	3	True				
ANR	2570129	AssignmentExpression	"buffer += "")"""		2570065	0		+=			
ANR	2570130	Identifier	buffer		2570065	0					
ANR	2570131	PrimaryExpression	""")"""		2570065	1					
ANR	2570132	ReturnType	void		2570065	1					
ANR	2570133	Identifier	ClassAdUnParser :: UnparseAux		2570065	2					
ANR	2570134	ParameterList	"string & buffer , string & fnName , vector < ExprTree * > & args"		2570065	3					
ANR	2570135	Parameter	string & buffer	424:12:9609:9622	2570065	0	True				
ANR	2570136	ParameterType	string &		2570065	0					
ANR	2570137	Identifier	buffer		2570065	1					
ANR	2570138	Parameter	string & fnName	424:28:9625:9638	2570065	1	True				
ANR	2570139	ParameterType	string &		2570065	0					
ANR	2570140	Identifier	fnName		2570065	1					
ANR	2570141	Parameter	vector < ExprTree * > & args	424:44:9641:9663	2570065	2	True				
ANR	2570142	ParameterType	vector < ExprTree * > &		2570065	0					
ANR	2570143	Identifier	args		2570065	1					
ANR	2570144	CFGEntryNode	ENTRY		2570065		True				
ANR	2570145	CFGExitNode	EXIT		2570065		True				
ANR	2570146	Symbol	args		2570065						
ANR	2570147	Symbol	args . end		2570065						
ANR	2570148	Symbol	args . begin		2570065						
ANR	2570149	Symbol	fnName		2570065						
ANR	2570150	Symbol	itr		2570065						
ANR	2570151	Symbol	buffer		2570065						
ANR	2570152	Symbol	* itr		2570065						
ANR	2570153	Function	ClassAdUnParser :: UnparseAux	436:0:9881:10605							
ANR	2570154	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , vector < pair < string , ExprTree * > > & attrs)"		2570153	0					
ANR	2570155	CompoundStatement		438:0:9974:10605	2570153	0					
ANR	2570156	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: const_iterator itr ;"	439:1:9977:10029	2570153	0	True				
ANR	2570157	IdentifierDecl	itr		2570153	0					
ANR	2570158	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: const_iterator"		2570153	0					
ANR	2570159	Identifier	itr		2570153	1					
ANR	2570160	IdentifierDeclStatement	string delim ;	441:1:10033:10045	2570153	1	True				
ANR	2570161	IdentifierDecl	delim		2570153	0					
ANR	2570162	IdentifierDeclType	string		2570153	0					
ANR	2570163	Identifier	delim		2570153	1					
ANR	2570164	IfStatement	if ( oldClassAd )		2570153	2					
ANR	2570165	Condition	oldClassAd	442:5:10060:10069	2570153	0	True				
ANR	2570166	Identifier	oldClassAd		2570153	0					
ANR	2570167	CompoundStatement		5:18:98:98	2570153	1					
ANR	2570168	ExpressionStatement	"delim = ""\\n"""	443:2:10084:10096	2570153	0	True				
ANR	2570169	AssignmentExpression	"delim = ""\\n"""		2570153	0		=			
ANR	2570170	Identifier	delim		2570153	0					
ANR	2570171	PrimaryExpression	"""\\n"""		2570153	1					
ANR	2570172	ElseStatement	else		2570153	0					
ANR	2570173	CompoundStatement		8:6:150:150	2570153	0					
ANR	2570174	ExpressionStatement	"delim = ""; """	446:2:10139:10151	2570153	0	True				
ANR	2570175	AssignmentExpression	"delim = ""; """		2570153	0		=			
ANR	2570176	Identifier	delim		2570153	0					
ANR	2570177	PrimaryExpression	"""; """		2570153	1					
ANR	2570178	IfStatement	if ( ! oldClassAd )		2570153	3					
ANR	2570179	Condition	! oldClassAd	449:5:10180:10190	2570153	0	True				
ANR	2570180	UnaryOperationExpression	! oldClassAd		2570153	0					
ANR	2570181	UnaryOperator	!		2570153	0					
ANR	2570182	Identifier	oldClassAd		2570153	1					
ANR	2570183	CompoundStatement		12:19:219:219	2570153	1					
ANR	2570184	ExpressionStatement	"buffer += ""[ """	450:2:10205:10219	2570153	0	True				
ANR	2570185	AssignmentExpression	"buffer += ""[ """		2570153	0		+=			
ANR	2570186	Identifier	buffer		2570153	0					
ANR	2570187	PrimaryExpression	"""[ """		2570153	1					
ANR	2570188	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		2570153	4					
ANR	2570189	ForInit	itr = attrs . begin ( ) ;	452:6:10241:10259	2570153	0	True				
ANR	2570190	AssignmentExpression	itr = attrs . begin ( )		2570153	0		=			
ANR	2570191	Identifier	itr		2570153	0					
ANR	2570192	CallExpression	attrs . begin ( )		2570153	1					
ANR	2570193	Callee	attrs . begin		2570153	0					
ANR	2570194	MemberAccess	attrs . begin		2570153	0					
ANR	2570195	Identifier	attrs		2570153	0					
ANR	2570196	Identifier	begin		2570153	1					
ANR	2570197	ArgumentList			2570153	1					
ANR	2570198	Condition	itr != attrs . end ( )	452:26:10261:10277	2570153	1	True				
ANR	2570199	EqualityExpression	itr != attrs . end ( )		2570153	0		!=			
ANR	2570200	Identifier	itr		2570153	0					
ANR	2570201	CallExpression	attrs . end ( )		2570153	1					
ANR	2570202	Callee	attrs . end		2570153	0					
ANR	2570203	MemberAccess	attrs . end		2570153	0					
ANR	2570204	Identifier	attrs		2570153	0					
ANR	2570205	Identifier	end		2570153	1					
ANR	2570206	ArgumentList			2570153	1					
ANR	2570207	PostIncDecOperationExpression	itr ++	452:45:10280:10284	2570153	2	True				
ANR	2570208	Identifier	itr		2570153	0					
ANR	2570209	IncDec	++		2570153	1					
ANR	2570210	CompoundStatement		15:53:313:313	2570153	3					
ANR	2570211	ExpressionStatement	"UnparseAux ( buffer , itr -> first )"	453:3:10293:10325	2570153	0	True				
ANR	2570212	CallExpression	"UnparseAux ( buffer , itr -> first )"		2570153	0					
ANR	2570213	Callee	UnparseAux		2570153	0					
ANR	2570214	Identifier	UnparseAux		2570153	0					
ANR	2570215	ArgumentList	buffer		2570153	1					
ANR	2570216	Argument	buffer		2570153	0					
ANR	2570217	Identifier	buffer		2570153	0					
ANR	2570218	Argument	itr -> first		2570153	1					
ANR	2570219	PtrMemberAccess	itr -> first		2570153	0					
ANR	2570220	Identifier	itr		2570153	0					
ANR	2570221	Identifier	first		2570153	1					
ANR	2570222	ExpressionStatement	"buffer += "" = """	454:3:10331:10346	2570153	1	True				
ANR	2570223	AssignmentExpression	"buffer += "" = """		2570153	0		+=			
ANR	2570224	Identifier	buffer		2570153	0					
ANR	2570225	PrimaryExpression	""" = """		2570153	1					
ANR	2570226	ExpressionStatement	"Unparse ( buffer , itr -> second )"	455:2:10350:10380	2570153	2	True				
ANR	2570227	CallExpression	"Unparse ( buffer , itr -> second )"		2570153	0					
ANR	2570228	Callee	Unparse		2570153	0					
ANR	2570229	Identifier	Unparse		2570153	0					
ANR	2570230	ArgumentList	buffer		2570153	1					
ANR	2570231	Argument	buffer		2570153	0					
ANR	2570232	Identifier	buffer		2570153	0					
ANR	2570233	Argument	itr -> second		2570153	1					
ANR	2570234	PtrMemberAccess	itr -> second		2570153	0					
ANR	2570235	Identifier	itr		2570153	0					
ANR	2570236	Identifier	second		2570153	1					
ANR	2570237	IfStatement	if ( itr + 1 != attrs . end ( ) )		2570153	3					
ANR	2570238	Condition	itr + 1 != attrs . end ( )	457:6:10436:10456	2570153	0	True				
ANR	2570239	EqualityExpression	itr + 1 != attrs . end ( )		2570153	0		!=			
ANR	2570240	AdditiveExpression	itr + 1		2570153	0		+			
ANR	2570241	Identifier	itr		2570153	0					
ANR	2570242	PrimaryExpression	1		2570153	1					
ANR	2570243	CallExpression	attrs . end ( )		2570153	1					
ANR	2570244	Callee	attrs . end		2570153	0					
ANR	2570245	MemberAccess	attrs . end		2570153	0					
ANR	2570246	Identifier	attrs		2570153	0					
ANR	2570247	Identifier	end		2570153	1					
ANR	2570248	ArgumentList			2570153	1					
ANR	2570249	ExpressionStatement	buffer += delim	457:30:10460:10475	2570153	1	True				
ANR	2570250	AssignmentExpression	buffer += delim		2570153	0		+=			
ANR	2570251	Identifier	buffer		2570153	0					
ANR	2570252	Identifier	delim		2570153	1					
ANR	2570253	IfStatement	if ( ! oldClassAd )		2570153	5					
ANR	2570254	Condition	! oldClassAd	460:5:10493:10503	2570153	0	True				
ANR	2570255	UnaryOperationExpression	! oldClassAd		2570153	0					
ANR	2570256	UnaryOperator	!		2570153	0					
ANR	2570257	Identifier	oldClassAd		2570153	1					
ANR	2570258	CompoundStatement		23:19:532:532	2570153	1					
ANR	2570259	ExpressionStatement	"buffer += "" ]"""	461:2:10518:10532	2570153	0	True				
ANR	2570260	AssignmentExpression	"buffer += "" ]"""		2570153	0		+=			
ANR	2570261	Identifier	buffer		2570153	0					
ANR	2570262	PrimaryExpression	""" ]"""		2570153	1					
ANR	2570263	ElseStatement	else		2570153	0					
ANR	2570264	CompoundStatement		26:6:579:579	2570153	0					
ANR	2570265	ExpressionStatement	"buffer += ""\\n"""	464:2:10568:10582	2570153	0	True				
ANR	2570266	AssignmentExpression	"buffer += ""\\n"""		2570153	0		+=			
ANR	2570267	Identifier	buffer		2570153	0					
ANR	2570268	PrimaryExpression	"""\\n"""		2570153	1					
ANR	2570269	ReturnType	void		2570153	1					
ANR	2570270	Identifier	ClassAdUnParser :: UnparseAux		2570153	2					
ANR	2570271	ParameterList	"string & buffer , vector < pair < string , ExprTree * > > & attrs"		2570153	3					
ANR	2570272	Parameter	string & buffer	437:12:9916:9929	2570153	0	True				
ANR	2570273	ParameterType	string &		2570153	0					
ANR	2570274	Identifier	buffer		2570153	1					
ANR	2570275	Parameter	"vector < pair < string , ExprTree * > > & attrs"	437:28:9932:9970	2570153	1	True				
ANR	2570276	ParameterType	"vector < pair < string , ExprTree * > > &"		2570153	0					
ANR	2570277	Identifier	attrs		2570153	1					
ANR	2570278	CFGEntryNode	ENTRY		2570153		True				
ANR	2570279	CFGExitNode	EXIT		2570153		True				
ANR	2570280	Symbol	oldClassAd		2570153						
ANR	2570281	Symbol	attrs . begin		2570153						
ANR	2570282	Symbol	itr		2570153						
ANR	2570283	Symbol	buffer		2570153						
ANR	2570284	Symbol	itr -> first		2570153						
ANR	2570285	Symbol	attrs . end		2570153						
ANR	2570286	Symbol	* itr		2570153						
ANR	2570287	Symbol	attrs		2570153						
ANR	2570288	Symbol	delim		2570153						
ANR	2570289	Symbol	itr -> second		2570153						
ANR	2570290	Function	ClassAdUnParser :: UnparseAux	469:0:10609:10894							
ANR	2570291	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , vector < ExprTree * > & exprs)"		2570290	0					
ANR	2570292	CompoundStatement		471:0:10687:10894	2570290	0					
ANR	2570293	IdentifierDeclStatement	vector < ExprTree * > :: const_iterator itr ;	472:1:10690:10727	2570290	0	True				
ANR	2570294	IdentifierDecl	itr		2570290	0					
ANR	2570295	IdentifierDeclType	vector < ExprTree * > :: const_iterator		2570290	0					
ANR	2570296	Identifier	itr		2570290	1					
ANR	2570297	ExpressionStatement	"buffer += ""{ """	474:1:10731:10745	2570290	1	True				
ANR	2570298	AssignmentExpression	"buffer += ""{ """		2570290	0		+=			
ANR	2570299	Identifier	buffer		2570290	0					
ANR	2570300	PrimaryExpression	"""{ """		2570290	1					
ANR	2570301	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		2570290	2					
ANR	2570302	ForInit	itr = exprs . begin ( ) ;	475:6:10753:10771	2570290	0	True				
ANR	2570303	AssignmentExpression	itr = exprs . begin ( )		2570290	0		=			
ANR	2570304	Identifier	itr		2570290	0					
ANR	2570305	CallExpression	exprs . begin ( )		2570290	1					
ANR	2570306	Callee	exprs . begin		2570290	0					
ANR	2570307	MemberAccess	exprs . begin		2570290	0					
ANR	2570308	Identifier	exprs		2570290	0					
ANR	2570309	Identifier	begin		2570290	1					
ANR	2570310	ArgumentList			2570290	1					
ANR	2570311	Condition	itr != exprs . end ( )	475:26:10773:10789	2570290	1	True				
ANR	2570312	EqualityExpression	itr != exprs . end ( )		2570290	0		!=			
ANR	2570313	Identifier	itr		2570290	0					
ANR	2570314	CallExpression	exprs . end ( )		2570290	1					
ANR	2570315	Callee	exprs . end		2570290	0					
ANR	2570316	MemberAccess	exprs . end		2570290	0					
ANR	2570317	Identifier	exprs		2570290	0					
ANR	2570318	Identifier	end		2570290	1					
ANR	2570319	ArgumentList			2570290	1					
ANR	2570320	PostIncDecOperationExpression	itr ++	475:45:10792:10796	2570290	2	True				
ANR	2570321	Identifier	itr		2570290	0					
ANR	2570322	IncDec	++		2570290	1					
ANR	2570323	CompoundStatement		5:53:112:112	2570290	3					
ANR	2570324	ExpressionStatement	"Unparse ( buffer , * itr )"	476:2:10804:10827	2570290	0	True				
ANR	2570325	CallExpression	"Unparse ( buffer , * itr )"		2570290	0					
ANR	2570326	Callee	Unparse		2570290	0					
ANR	2570327	Identifier	Unparse		2570290	0					
ANR	2570328	ArgumentList	buffer		2570290	1					
ANR	2570329	Argument	buffer		2570290	0					
ANR	2570330	Identifier	buffer		2570290	0					
ANR	2570331	Argument	* itr		2570290	1					
ANR	2570332	UnaryOperationExpression	* itr		2570290	0					
ANR	2570333	UnaryOperator	*		2570290	0					
ANR	2570334	Identifier	itr		2570290	1					
ANR	2570335	IfStatement	if ( itr + 1 != exprs . end ( ) )		2570290	1					
ANR	2570336	Condition	itr + 1 != exprs . end ( )	477:6:10835:10855	2570290	0	True				
ANR	2570337	EqualityExpression	itr + 1 != exprs . end ( )		2570290	0		!=			
ANR	2570338	AdditiveExpression	itr + 1		2570290	0		+			
ANR	2570339	Identifier	itr		2570290	0					
ANR	2570340	PrimaryExpression	1		2570290	1					
ANR	2570341	CallExpression	exprs . end ( )		2570290	1					
ANR	2570342	Callee	exprs . end		2570290	0					
ANR	2570343	MemberAccess	exprs . end		2570290	0					
ANR	2570344	Identifier	exprs		2570290	0					
ANR	2570345	Identifier	end		2570290	1					
ANR	2570346	ArgumentList			2570290	1					
ANR	2570347	ExpressionStatement	"buffer += ','"	477:30:10859:10872	2570290	1	True				
ANR	2570348	AssignmentExpression	"buffer += ','"		2570290	0		+=			
ANR	2570349	Identifier	buffer		2570290	0					
ANR	2570350	PrimaryExpression	"','"		2570290	1					
ANR	2570351	ExpressionStatement	"buffer += "" }"""	479:1:10878:10892	2570290	3	True				
ANR	2570352	AssignmentExpression	"buffer += "" }"""		2570290	0		+=			
ANR	2570353	Identifier	buffer		2570290	0					
ANR	2570354	PrimaryExpression	""" }"""		2570290	1					
ANR	2570355	ReturnType	void		2570290	1					
ANR	2570356	Identifier	ClassAdUnParser :: UnparseAux		2570290	2					
ANR	2570357	ParameterList	"string & buffer , vector < ExprTree * > & exprs"		2570290	3					
ANR	2570358	Parameter	string & buffer	470:12:10644:10657	2570290	0	True				
ANR	2570359	ParameterType	string &		2570290	0					
ANR	2570360	Identifier	buffer		2570290	1					
ANR	2570361	Parameter	vector < ExprTree * > & exprs	470:28:10660:10683	2570290	1	True				
ANR	2570362	ParameterType	vector < ExprTree * > &		2570290	0					
ANR	2570363	Identifier	exprs		2570290	1					
ANR	2570364	CFGEntryNode	ENTRY		2570290		True				
ANR	2570365	CFGExitNode	EXIT		2570290		True				
ANR	2570366	Symbol	itr		2570290						
ANR	2570367	Symbol	exprs		2570290						
ANR	2570368	Symbol	exprs . end		2570290						
ANR	2570369	Symbol	buffer		2570290						
ANR	2570370	Symbol	exprs . begin		2570290						
ANR	2570371	Symbol	* itr		2570290						
ANR	2570372	Function	ClassAdUnParser :: UnparseAux	487:0:11046:11510							
ANR	2570373	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , string identifier)"		2570372	0					
ANR	2570374	CompoundStatement		489:0:11117:11510	2570372	0					
ANR	2570375	IdentifierDeclStatement	Value val ;	490:1:11120:11130	2570372	0	True				
ANR	2570376	IdentifierDecl	val		2570372	0					
ANR	2570377	IdentifierDeclType	Value		2570372	0					
ANR	2570378	Identifier	val		2570372	1					
ANR	2570379	IdentifierDeclStatement	string idstr ;	491:1:11133:11145	2570372	1	True				
ANR	2570380	IdentifierDecl	idstr		2570372	0					
ANR	2570381	IdentifierDeclType	string		2570372	0					
ANR	2570382	Identifier	idstr		2570372	1					
ANR	2570383	ExpressionStatement	val . SetStringValue ( identifier )	493:1:11149:11179	2570372	2	True				
ANR	2570384	CallExpression	val . SetStringValue ( identifier )		2570372	0					
ANR	2570385	Callee	val . SetStringValue		2570372	0					
ANR	2570386	MemberAccess	val . SetStringValue		2570372	0					
ANR	2570387	Identifier	val		2570372	0					
ANR	2570388	Identifier	SetStringValue		2570372	1					
ANR	2570389	ArgumentList	identifier		2570372	1					
ANR	2570390	Argument	identifier		2570372	0					
ANR	2570391	Identifier	identifier		2570372	0					
ANR	2570392	ExpressionStatement	setDelimiter ( '\\'' )	494:1:11182:11200	2570372	3	True				
ANR	2570393	CallExpression	setDelimiter ( '\\'' )		2570372	0					
ANR	2570394	Callee	setDelimiter		2570372	0					
ANR	2570395	Identifier	setDelimiter		2570372	0					
ANR	2570396	ArgumentList	'\\''		2570372	1					
ANR	2570397	Argument	'\\''		2570372	0					
ANR	2570398	PrimaryExpression	'\\''		2570372	0					
ANR	2570399	ExpressionStatement	"Unparse ( idstr , val )"	495:1:11277:11295	2570372	4	True				
ANR	2570400	CallExpression	"Unparse ( idstr , val )"		2570372	0					
ANR	2570401	Callee	Unparse		2570372	0					
ANR	2570402	Identifier	Unparse		2570372	0					
ANR	2570403	ArgumentList	idstr		2570372	1					
ANR	2570404	Argument	idstr		2570372	0					
ANR	2570405	Identifier	idstr		2570372	0					
ANR	2570406	Argument	val		2570372	1					
ANR	2570407	Identifier	val		2570372	0					
ANR	2570408	ExpressionStatement	"setDelimiter ( '\\""' )"	496:1:11298:11316	2570372	5	True				
ANR	2570409	CallExpression	"setDelimiter ( '\\""' )"		2570372	0					
ANR	2570410	Callee	setDelimiter		2570372	0					
ANR	2570411	Identifier	setDelimiter		2570372	0					
ANR	2570412	ArgumentList	"'\\""'"		2570372	1					
ANR	2570413	Argument	"'\\""'"		2570372	0					
ANR	2570414	PrimaryExpression	"'\\""'"		2570372	0					
ANR	2570415	ExpressionStatement	"idstr . erase ( 0 , 1 )"	497:1:11360:11376	2570372	6	True				
ANR	2570416	CallExpression	"idstr . erase ( 0 , 1 )"		2570372	0					
ANR	2570417	Callee	idstr . erase		2570372	0					
ANR	2570418	MemberAccess	idstr . erase		2570372	0					
ANR	2570419	Identifier	idstr		2570372	0					
ANR	2570420	Identifier	erase		2570372	1					
ANR	2570421	ArgumentList	0		2570372	1					
ANR	2570422	Argument	0		2570372	0					
ANR	2570423	PrimaryExpression	0		2570372	0					
ANR	2570424	Argument	1		2570372	1					
ANR	2570425	PrimaryExpression	1		2570372	0					
ANR	2570426	ExpressionStatement	"idstr . erase ( idstr . length ( ) - 1 , 1 )"	498:1:11379:11410	2570372	7	True				
ANR	2570427	CallExpression	"idstr . erase ( idstr . length ( ) - 1 , 1 )"		2570372	0					
ANR	2570428	Callee	idstr . erase		2570372	0					
ANR	2570429	MemberAccess	idstr . erase		2570372	0					
ANR	2570430	Identifier	idstr		2570372	0					
ANR	2570431	Identifier	erase		2570372	1					
ANR	2570432	ArgumentList	idstr . length ( ) - 1		2570372	1					
ANR	2570433	Argument	idstr . length ( ) - 1		2570372	0					
ANR	2570434	AdditiveExpression	idstr . length ( ) - 1		2570372	0		-			
ANR	2570435	CallExpression	idstr . length ( )		2570372	0					
ANR	2570436	Callee	idstr . length		2570372	0					
ANR	2570437	MemberAccess	idstr . length		2570372	0					
ANR	2570438	Identifier	idstr		2570372	0					
ANR	2570439	Identifier	length		2570372	1					
ANR	2570440	ArgumentList			2570372	1					
ANR	2570441	PrimaryExpression	1		2570372	1					
ANR	2570442	Argument	1		2570372	1					
ANR	2570443	PrimaryExpression	1		2570372	0					
ANR	2570444	IfStatement	if ( identifierNeedsQuoting ( idstr ) )		2570372	8					
ANR	2570445	Condition	identifierNeedsQuoting ( idstr )	499:5:11417:11445	2570372	0	True				
ANR	2570446	CallExpression	identifierNeedsQuoting ( idstr )		2570372	0					
ANR	2570447	Callee	identifierNeedsQuoting		2570372	0					
ANR	2570448	Identifier	identifierNeedsQuoting		2570372	0					
ANR	2570449	ArgumentList	idstr		2570372	1					
ANR	2570450	Argument	idstr		2570372	0					
ANR	2570451	Identifier	idstr		2570372	0					
ANR	2570452	CompoundStatement		11:36:330:330	2570372	1					
ANR	2570453	ExpressionStatement	"idstr . insert ( 0 , ""'"" )"	500:2:11452:11471	2570372	0	True				
ANR	2570454	CallExpression	"idstr . insert ( 0 , ""'"" )"		2570372	0					
ANR	2570455	Callee	idstr . insert		2570372	0					
ANR	2570456	MemberAccess	idstr . insert		2570372	0					
ANR	2570457	Identifier	idstr		2570372	0					
ANR	2570458	Identifier	insert		2570372	1					
ANR	2570459	ArgumentList	0		2570372	1					
ANR	2570460	Argument	0		2570372	0					
ANR	2570461	PrimaryExpression	0		2570372	0					
ANR	2570462	Argument	"""'"""		2570372	1					
ANR	2570463	PrimaryExpression	"""'"""		2570372	0					
ANR	2570464	ExpressionStatement	"idstr += ""'"""	501:2:11475:11487	2570372	1	True				
ANR	2570465	AssignmentExpression	"idstr += ""'"""		2570372	0		+=			
ANR	2570466	Identifier	idstr		2570372	0					
ANR	2570467	PrimaryExpression	"""'"""		2570372	1					
ANR	2570468	ExpressionStatement	buffer += idstr	503:1:11493:11508	2570372	9	True				
ANR	2570469	AssignmentExpression	buffer += idstr		2570372	0		+=			
ANR	2570470	Identifier	buffer		2570372	0					
ANR	2570471	Identifier	idstr		2570372	1					
ANR	2570472	ReturnType	void		2570372	1					
ANR	2570473	Identifier	ClassAdUnParser :: UnparseAux		2570372	2					
ANR	2570474	ParameterList	"string & buffer , string identifier"		2570372	3					
ANR	2570475	Parameter	string & buffer	488:12:11081:11094	2570372	0	True				
ANR	2570476	ParameterType	string &		2570372	0					
ANR	2570477	Identifier	buffer		2570372	1					
ANR	2570478	Parameter	string identifier	488:28:11097:11113	2570372	1	True				
ANR	2570479	ParameterType	string		2570372	0					
ANR	2570480	Identifier	identifier		2570372	1					
ANR	2570481	CFGEntryNode	ENTRY		2570372		True				
ANR	2570482	CFGExitNode	EXIT		2570372		True				
ANR	2570483	Symbol	val		2570372						
ANR	2570484	Symbol	idstr		2570372						
ANR	2570485	Symbol	idstr . length		2570372						
ANR	2570486	Symbol	identifier		2570372						
ANR	2570487	Symbol	identifierNeedsQuoting		2570372						
ANR	2570488	Symbol	buffer		2570372						
ANR	2570489	Function	ClassAdUnParser :: SetOldClassAd	507:0:11546:11612							
ANR	2570490	FunctionDef	ClassAdUnParser :: SetOldClassAd (bool b)		2570489	0					
ANR	2570491	CompoundStatement		509:0:11593:11612	2570489	0					
ANR	2570492	ExpressionStatement	oldClassAd = b	510:1:11596:11610	2570489	0	True				
ANR	2570493	AssignmentExpression	oldClassAd = b		2570489	0		=			
ANR	2570494	Identifier	oldClassAd		2570489	0					
ANR	2570495	Identifier	b		2570489	1					
ANR	2570496	ReturnType	void		2570489	1					
ANR	2570497	Identifier	ClassAdUnParser :: SetOldClassAd		2570489	2					
ANR	2570498	ParameterList	bool b		2570489	3					
ANR	2570499	Parameter	bool b	508:15:11584:11589	2570489	0	True				
ANR	2570500	ParameterType	bool		2570489	0					
ANR	2570501	Identifier	b		2570489	1					
ANR	2570502	CFGEntryNode	ENTRY		2570489		True				
ANR	2570503	CFGExitNode	EXIT		2570489		True				
ANR	2570504	Symbol	b		2570489						
ANR	2570505	Symbol	oldClassAd		2570489						
ANR	2570506	Function	ClassAdUnParser :: GetOldClassAd	513:0:11615:11676							
ANR	2570507	FunctionDef	ClassAdUnParser :: GetOldClassAd ()		2570506	0					
ANR	2570508	CompoundStatement		515:0:11654:11676	2570506	0					
ANR	2570509	ReturnStatement	return oldClassAd ;	516:1:11657:11674	2570506	0	True				
ANR	2570510	Identifier	oldClassAd		2570506	0					
ANR	2570511	ReturnType	bool		2570506	1					
ANR	2570512	Identifier	ClassAdUnParser :: GetOldClassAd		2570506	2					
ANR	2570513	ParameterList			2570506	3					
ANR	2570514	CFGEntryNode	ENTRY		2570506		True				
ANR	2570515	CFGExitNode	EXIT		2570506		True				
ANR	2570516	Symbol	oldClassAd		2570506						
ANR	2570517	Function	PrettyPrint :: PrettyPrint	521:0:11717:11853							
ANR	2570518	FunctionDef	PrettyPrint :: PrettyPrint ()		2570517	0					
ANR	2570519	CompoundStatement		523:0:11746:11853	2570517	0					
ANR	2570520	ExpressionStatement	classadIndent = 4	524:1:11749:11766	2570517	0	True				
ANR	2570521	AssignmentExpression	classadIndent = 4		2570517	0		=			
ANR	2570522	Identifier	classadIndent		2570517	0					
ANR	2570523	PrimaryExpression	4		2570517	1					
ANR	2570524	ExpressionStatement	listIndent = 3	525:1:11769:11783	2570517	1	True				
ANR	2570525	AssignmentExpression	listIndent = 3		2570517	0		=			
ANR	2570526	Identifier	listIndent		2570517	0					
ANR	2570527	PrimaryExpression	3		2570517	1					
ANR	2570528	ExpressionStatement	wantStringQuotes = true	526:1:11786:11809	2570517	2	True				
ANR	2570529	AssignmentExpression	wantStringQuotes = true		2570517	0		=			
ANR	2570530	Identifier	wantStringQuotes		2570517	0					
ANR	2570531	Identifier	true		2570517	1					
ANR	2570532	ExpressionStatement	minimalParens = false	527:1:11812:11833	2570517	3	True				
ANR	2570533	AssignmentExpression	minimalParens = false		2570517	0		=			
ANR	2570534	Identifier	minimalParens		2570517	0					
ANR	2570535	Identifier	false		2570517	1					
ANR	2570536	ExpressionStatement	indentLevel = 0	528:1:11836:11851	2570517	4	True				
ANR	2570537	AssignmentExpression	indentLevel = 0		2570517	0		=			
ANR	2570538	Identifier	indentLevel		2570517	0					
ANR	2570539	PrimaryExpression	0		2570517	1					
ANR	2570540	Identifier	PrettyPrint :: PrettyPrint		2570517	1					
ANR	2570541	ParameterList			2570517	2					
ANR	2570542	CFGEntryNode	ENTRY		2570517		True				
ANR	2570543	CFGExitNode	EXIT		2570517		True				
ANR	2570544	Symbol	indentLevel		2570517						
ANR	2570545	Symbol	wantStringQuotes		2570517						
ANR	2570546	Symbol	classadIndent		2570517						
ANR	2570547	Symbol	true		2570517						
ANR	2570548	Symbol	false		2570517						
ANR	2570549	Symbol	minimalParens		2570517						
ANR	2570550	Symbol	listIndent		2570517						
ANR	2570551	Function	PrettyPrint :: ~PrettyPrint	532:0:11857:11889							
ANR	2570552	FunctionDef	PrettyPrint :: ~PrettyPrint ()		2570551	0					
ANR	2570553	CompoundStatement		534:0:11887:11889	2570551	0					
ANR	2570554	Identifier	PrettyPrint :: ~PrettyPrint		2570551	1					
ANR	2570555	ParameterList			2570551	2					
ANR	2570556	CFGEntryNode	ENTRY		2570551		True				
ANR	2570557	CFGExitNode	EXIT		2570551		True				
ANR	2570558	Function	PrettyPrint :: SetClassAdIndentation	537:0:11892:11968							
ANR	2570559	FunctionDef	PrettyPrint :: SetClassAdIndentation (int len)		2570558	0					
ANR	2570560	CompoundStatement		539:0:11944:11968	2570558	0					
ANR	2570561	ExpressionStatement	classadIndent = len	540:1:11947:11966	2570558	0	True				
ANR	2570562	AssignmentExpression	classadIndent = len		2570558	0		=			
ANR	2570563	Identifier	classadIndent		2570558	0					
ANR	2570564	Identifier	len		2570558	1					
ANR	2570565	ReturnType	void		2570558	1					
ANR	2570566	Identifier	PrettyPrint :: SetClassAdIndentation		2570558	2					
ANR	2570567	ParameterList	int len		2570558	3					
ANR	2570568	Parameter	int len	538:23:11934:11940	2570558	0	True				
ANR	2570569	ParameterType	int		2570558	0					
ANR	2570570	Identifier	len		2570558	1					
ANR	2570571	CFGEntryNode	ENTRY		2570558		True				
ANR	2570572	CFGExitNode	EXIT		2570558		True				
ANR	2570573	Symbol	len		2570558						
ANR	2570574	Symbol	classadIndent		2570558						
ANR	2570575	Function	PrettyPrint :: GetClassAdIndentation	543:0:11971:12042							
ANR	2570576	FunctionDef	PrettyPrint :: GetClassAdIndentation ()		2570575	0					
ANR	2570577	CompoundStatement		545:0:12014:12042	2570575	0					
ANR	2570578	ReturnStatement	return ( classadIndent ) ;	546:1:12017:12040	2570575	0	True				
ANR	2570579	Identifier	classadIndent		2570575	0					
ANR	2570580	ReturnType	int		2570575	1					
ANR	2570581	Identifier	PrettyPrint :: GetClassAdIndentation		2570575	2					
ANR	2570582	ParameterList			2570575	3					
ANR	2570583	CFGEntryNode	ENTRY		2570575		True				
ANR	2570584	CFGExitNode	EXIT		2570575		True				
ANR	2570585	Symbol	classadIndent		2570575						
ANR	2570586	Function	PrettyPrint :: SetListIndentation	549:0:12045:12115							
ANR	2570587	FunctionDef	PrettyPrint :: SetListIndentation (int len)		2570586	0					
ANR	2570588	CompoundStatement		551:0:12094:12115	2570586	0					
ANR	2570589	ExpressionStatement	listIndent = len	552:1:12097:12113	2570586	0	True				
ANR	2570590	AssignmentExpression	listIndent = len		2570586	0		=			
ANR	2570591	Identifier	listIndent		2570586	0					
ANR	2570592	Identifier	len		2570586	1					
ANR	2570593	ReturnType	void		2570586	1					
ANR	2570594	Identifier	PrettyPrint :: SetListIndentation		2570586	2					
ANR	2570595	ParameterList	int len		2570586	3					
ANR	2570596	Parameter	int len	550:20:12084:12090	2570586	0	True				
ANR	2570597	ParameterType	int		2570586	0					
ANR	2570598	Identifier	len		2570586	1					
ANR	2570599	CFGEntryNode	ENTRY		2570586		True				
ANR	2570600	CFGExitNode	EXIT		2570586		True				
ANR	2570601	Symbol	len		2570586						
ANR	2570602	Symbol	listIndent		2570586						
ANR	2570603	Function	PrettyPrint :: GetListIndentation	555:0:12118:12183							
ANR	2570604	FunctionDef	PrettyPrint :: GetListIndentation ()		2570603	0					
ANR	2570605	CompoundStatement		557:0:12158:12183	2570603	0					
ANR	2570606	ReturnStatement	return ( listIndent ) ;	558:1:12161:12181	2570603	0	True				
ANR	2570607	Identifier	listIndent		2570603	0					
ANR	2570608	ReturnType	int		2570603	1					
ANR	2570609	Identifier	PrettyPrint :: GetListIndentation		2570603	2					
ANR	2570610	ParameterList			2570603	3					
ANR	2570611	CFGEntryNode	ENTRY		2570603		True				
ANR	2570612	CFGExitNode	EXIT		2570603		True				
ANR	2570613	Symbol	listIndent		2570603						
ANR	2570614	Function	PrettyPrint :: SetWantStringQuotes	561:0:12186:12260							
ANR	2570615	FunctionDef	PrettyPrint :: SetWantStringQuotes (bool b)		2570614	0					
ANR	2570616	CompoundStatement		563:0:12235:12260	2570614	0					
ANR	2570617	ExpressionStatement	wantStringQuotes = b	564:1:12238:12258	2570614	0	True				
ANR	2570618	AssignmentExpression	wantStringQuotes = b		2570614	0		=			
ANR	2570619	Identifier	wantStringQuotes		2570614	0					
ANR	2570620	Identifier	b		2570614	1					
ANR	2570621	ReturnType	void		2570614	1					
ANR	2570622	Identifier	PrettyPrint :: SetWantStringQuotes		2570614	2					
ANR	2570623	ParameterList	bool b		2570614	3					
ANR	2570624	Parameter	bool b	562:21:12226:12231	2570614	0	True				
ANR	2570625	ParameterType	bool		2570614	0					
ANR	2570626	Identifier	b		2570614	1					
ANR	2570627	CFGEntryNode	ENTRY		2570614		True				
ANR	2570628	CFGExitNode	EXIT		2570614		True				
ANR	2570629	Symbol	b		2570614						
ANR	2570630	Symbol	wantStringQuotes		2570614						
ANR	2570631	Function	PrettyPrint :: GetWantStringQuotes	567:0:12263:12336							
ANR	2570632	FunctionDef	PrettyPrint :: GetWantStringQuotes ()		2570631	0					
ANR	2570633	CompoundStatement		569:0:12305:12336	2570631	0					
ANR	2570634	ReturnStatement	return ( wantStringQuotes ) ;	570:1:12308:12334	2570631	0	True				
ANR	2570635	Identifier	wantStringQuotes		2570631	0					
ANR	2570636	ReturnType	bool		2570631	1					
ANR	2570637	Identifier	PrettyPrint :: GetWantStringQuotes		2570631	2					
ANR	2570638	ParameterList			2570631	3					
ANR	2570639	CFGEntryNode	ENTRY		2570631		True				
ANR	2570640	CFGExitNode	EXIT		2570631		True				
ANR	2570641	Symbol	wantStringQuotes		2570631						
ANR	2570642	Function	PrettyPrint :: SetMinimalParentheses	573:0:12339:12412							
ANR	2570643	FunctionDef	PrettyPrint :: SetMinimalParentheses (bool b)		2570642	0					
ANR	2570644	CompoundStatement		575:0:12390:12412	2570642	0					
ANR	2570645	ExpressionStatement	minimalParens = b	576:1:12393:12410	2570642	0	True				
ANR	2570646	AssignmentExpression	minimalParens = b		2570642	0		=			
ANR	2570647	Identifier	minimalParens		2570642	0					
ANR	2570648	Identifier	b		2570642	1					
ANR	2570649	ReturnType	void		2570642	1					
ANR	2570650	Identifier	PrettyPrint :: SetMinimalParentheses		2570642	2					
ANR	2570651	ParameterList	bool b		2570642	3					
ANR	2570652	Parameter	bool b	574:23:12381:12386	2570642	0	True				
ANR	2570653	ParameterType	bool		2570642	0					
ANR	2570654	Identifier	b		2570642	1					
ANR	2570655	CFGEntryNode	ENTRY		2570642		True				
ANR	2570656	CFGExitNode	EXIT		2570642		True				
ANR	2570657	Symbol	b		2570642						
ANR	2570658	Symbol	minimalParens		2570642						
ANR	2570659	Function	PrettyPrint :: GetMinimalParentheses	579:0:12415:12487							
ANR	2570660	FunctionDef	PrettyPrint :: GetMinimalParentheses ()		2570659	0					
ANR	2570661	CompoundStatement		581:0:12459:12487	2570659	0					
ANR	2570662	ReturnStatement	return ( minimalParens ) ;	582:1:12462:12485	2570659	0	True				
ANR	2570663	Identifier	minimalParens		2570659	0					
ANR	2570664	ReturnType	bool		2570659	1					
ANR	2570665	Identifier	PrettyPrint :: GetMinimalParentheses		2570659	2					
ANR	2570666	ParameterList			2570659	3					
ANR	2570667	CFGEntryNode	ENTRY		2570659		True				
ANR	2570668	CFGExitNode	EXIT		2570659		True				
ANR	2570669	Symbol	minimalParens		2570659						
ANR	2570670	Function	PrettyPrint :: UnparseAux	587:0:12492:14124							
ANR	2570671	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , Operation :: OpKind op , ExprTree * op1 , ExprTree * op2 , ExprTree * op3)"		2570670	0					
ANR	2570672	CompoundStatement		590:0:12603:14124	2570670	0					
ANR	2570673	IfStatement	if ( ! minimalParens )		2570670	0					
ANR	2570674	Condition	! minimalParens	591:5:12610:12623	2570670	0	True				
ANR	2570675	UnaryOperationExpression	! minimalParens		2570670	0					
ANR	2570676	UnaryOperator	!		2570670	0					
ANR	2570677	Identifier	minimalParens		2570670	1					
ANR	2570678	CompoundStatement		2:22:23:23	2570670	1					
ANR	2570679	ExpressionStatement	"ClassAdUnParser :: UnparseAux ( buffer , op , op1 , op2 , op3 )"	592:2:12631:12687	2570670	0	True				
ANR	2570680	CallExpression	"ClassAdUnParser :: UnparseAux ( buffer , op , op1 , op2 , op3 )"		2570670	0					
ANR	2570681	Callee	ClassAdUnParser :: UnparseAux		2570670	0					
ANR	2570682	Identifier	ClassAdUnParser :: UnparseAux		2570670	0					
ANR	2570683	ArgumentList	buffer		2570670	1					
ANR	2570684	Argument	buffer		2570670	0					
ANR	2570685	Identifier	buffer		2570670	0					
ANR	2570686	Argument	op		2570670	1					
ANR	2570687	Identifier	op		2570670	0					
ANR	2570688	Argument	op1		2570670	2					
ANR	2570689	Identifier	op1		2570670	0					
ANR	2570690	Argument	op2		2570670	3					
ANR	2570691	Identifier	op2		2570670	0					
ANR	2570692	Argument	op3		2570670	4					
ANR	2570693	Identifier	op3		2570670	0					
ANR	2570694	ReturnStatement	return ;	593:2:12691:12697	2570670	1	True				
ANR	2570695	IfStatement	if ( op == Operation :: PARENTHESES_OP )		2570670	1					
ANR	2570696	Condition	op == Operation :: PARENTHESES_OP	597:5:12736:12764	2570670	0	True				
ANR	2570697	EqualityExpression	op == Operation :: PARENTHESES_OP		2570670	0		==			
ANR	2570698	Identifier	op		2570670	0					
ANR	2570699	Identifier	Operation :: PARENTHESES_OP		2570670	1					
ANR	2570700	CompoundStatement		8:37:164:164	2570670	1					
ANR	2570701	ExpressionStatement	"Unparse ( buffer , op1 )"	598:2:12772:12794	2570670	0	True				
ANR	2570702	CallExpression	"Unparse ( buffer , op1 )"		2570670	0					
ANR	2570703	Callee	Unparse		2570670	0					
ANR	2570704	Identifier	Unparse		2570670	0					
ANR	2570705	ArgumentList	buffer		2570670	1					
ANR	2570706	Argument	buffer		2570670	0					
ANR	2570707	Identifier	buffer		2570670	0					
ANR	2570708	Argument	op1		2570670	1					
ANR	2570709	Identifier	op1		2570670	0					
ANR	2570710	ReturnStatement	return ;	599:2:12798:12804	2570670	1	True				
ANR	2570711	IfStatement	if ( op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP )		2570670	2					
ANR	2570712	Condition	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP	602:5:12847:12977	2570670	0	True				
ANR	2570713	OrExpression	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2570670	0		||			
ANR	2570714	EqualityExpression	op == Operation :: UNARY_PLUS_OP		2570670	0		==			
ANR	2570715	Identifier	op		2570670	0					
ANR	2570716	Identifier	Operation :: UNARY_PLUS_OP		2570670	1					
ANR	2570717	OrExpression	op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2570670	1		||			
ANR	2570718	EqualityExpression	op == Operation :: UNARY_MINUS_OP		2570670	0		==			
ANR	2570719	Identifier	op		2570670	0					
ANR	2570720	Identifier	Operation :: UNARY_MINUS_OP		2570670	1					
ANR	2570721	OrExpression	op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2570670	1		||			
ANR	2570722	EqualityExpression	op == Operation :: LOGICAL_NOT_OP		2570670	0		==			
ANR	2570723	Identifier	op		2570670	0					
ANR	2570724	Identifier	Operation :: LOGICAL_NOT_OP		2570670	1					
ANR	2570725	EqualityExpression	op == Operation :: BITWISE_NOT_OP		2570670	1		==			
ANR	2570726	Identifier	op		2570670	0					
ANR	2570727	Identifier	Operation :: BITWISE_NOT_OP		2570670	1					
ANR	2570728	CompoundStatement		14:68:377:377	2570670	1					
ANR	2570729	ExpressionStatement	buffer += opString [ op ]	604:2:12985:13007	2570670	0	True				
ANR	2570730	AssignmentExpression	buffer += opString [ op ]		2570670	0		+=			
ANR	2570731	Identifier	buffer		2570670	0					
ANR	2570732	ArrayIndexing	opString [ op ]		2570670	1					
ANR	2570733	Identifier	opString		2570670	0					
ANR	2570734	Identifier	op		2570670	1					
ANR	2570735	ExpressionStatement	"Unparse ( buffer , op1 )"	605:2:13011:13033	2570670	1	True				
ANR	2570736	CallExpression	"Unparse ( buffer , op1 )"		2570670	0					
ANR	2570737	Callee	Unparse		2570670	0					
ANR	2570738	Identifier	Unparse		2570670	0					
ANR	2570739	ArgumentList	buffer		2570670	1					
ANR	2570740	Argument	buffer		2570670	0					
ANR	2570741	Identifier	buffer		2570670	0					
ANR	2570742	Argument	op1		2570670	1					
ANR	2570743	Identifier	op1		2570670	0					
ANR	2570744	ReturnStatement	return ;	606:2:13037:13043	2570670	2	True				
ANR	2570745	IfStatement	if ( op == Operation :: TERNARY_OP )		2570670	3					
ANR	2570746	Condition	op == Operation :: TERNARY_OP	609:5:13087:13111	2570670	0	True				
ANR	2570747	EqualityExpression	op == Operation :: TERNARY_OP		2570670	0		==			
ANR	2570748	Identifier	op		2570670	0					
ANR	2570749	Identifier	Operation :: TERNARY_OP		2570670	1					
ANR	2570750	CompoundStatement		20:33:511:511	2570670	1					
ANR	2570751	ExpressionStatement	"Unparse ( buffer , op1 )"	610:2:13119:13141	2570670	0	True				
ANR	2570752	CallExpression	"Unparse ( buffer , op1 )"		2570670	0					
ANR	2570753	Callee	Unparse		2570670	0					
ANR	2570754	Identifier	Unparse		2570670	0					
ANR	2570755	ArgumentList	buffer		2570670	1					
ANR	2570756	Argument	buffer		2570670	0					
ANR	2570757	Identifier	buffer		2570670	0					
ANR	2570758	Argument	op1		2570670	1					
ANR	2570759	Identifier	op1		2570670	0					
ANR	2570760	ExpressionStatement	"buffer += "" ? """	611:2:13145:13160	2570670	1	True				
ANR	2570761	AssignmentExpression	"buffer += "" ? """		2570670	0		+=			
ANR	2570762	Identifier	buffer		2570670	0					
ANR	2570763	PrimaryExpression	""" ? """		2570670	1					
ANR	2570764	ExpressionStatement	"Unparse ( buffer , op2 )"	612:2:13164:13186	2570670	2	True				
ANR	2570765	CallExpression	"Unparse ( buffer , op2 )"		2570670	0					
ANR	2570766	Callee	Unparse		2570670	0					
ANR	2570767	Identifier	Unparse		2570670	0					
ANR	2570768	ArgumentList	buffer		2570670	1					
ANR	2570769	Argument	buffer		2570670	0					
ANR	2570770	Identifier	buffer		2570670	0					
ANR	2570771	Argument	op2		2570670	1					
ANR	2570772	Identifier	op2		2570670	0					
ANR	2570773	ExpressionStatement	"buffer += "" : """	613:2:13190:13205	2570670	3	True				
ANR	2570774	AssignmentExpression	"buffer += "" : """		2570670	0		+=			
ANR	2570775	Identifier	buffer		2570670	0					
ANR	2570776	PrimaryExpression	""" : """		2570670	1					
ANR	2570777	ExpressionStatement	"Unparse ( buffer , op3 )"	614:2:13209:13231	2570670	4	True				
ANR	2570778	CallExpression	"Unparse ( buffer , op3 )"		2570670	0					
ANR	2570779	Callee	Unparse		2570670	0					
ANR	2570780	Identifier	Unparse		2570670	0					
ANR	2570781	ArgumentList	buffer		2570670	1					
ANR	2570782	Argument	buffer		2570670	0					
ANR	2570783	Identifier	buffer		2570670	0					
ANR	2570784	Argument	op3		2570670	1					
ANR	2570785	Identifier	op3		2570670	0					
ANR	2570786	ReturnStatement	return ;	615:2:13235:13241	2570670	5	True				
ANR	2570787	IfStatement	if ( op == Operation :: SUBSCRIPT_OP )		2570670	4					
ANR	2570788	Condition	op == Operation :: SUBSCRIPT_OP	618:5:13287:13313	2570670	0	True				
ANR	2570789	EqualityExpression	op == Operation :: SUBSCRIPT_OP		2570670	0		==			
ANR	2570790	Identifier	op		2570670	0					
ANR	2570791	Identifier	Operation :: SUBSCRIPT_OP		2570670	1					
ANR	2570792	CompoundStatement		29:35:713:713	2570670	1					
ANR	2570793	ExpressionStatement	"Unparse ( buffer , op1 )"	619:2:13321:13343	2570670	0	True				
ANR	2570794	CallExpression	"Unparse ( buffer , op1 )"		2570670	0					
ANR	2570795	Callee	Unparse		2570670	0					
ANR	2570796	Identifier	Unparse		2570670	0					
ANR	2570797	ArgumentList	buffer		2570670	1					
ANR	2570798	Argument	buffer		2570670	0					
ANR	2570799	Identifier	buffer		2570670	0					
ANR	2570800	Argument	op1		2570670	1					
ANR	2570801	Identifier	op1		2570670	0					
ANR	2570802	ExpressionStatement	buffer += '['	620:2:13347:13360	2570670	1	True				
ANR	2570803	AssignmentExpression	buffer += '['		2570670	0		+=			
ANR	2570804	Identifier	buffer		2570670	0					
ANR	2570805	PrimaryExpression	'['		2570670	1					
ANR	2570806	ExpressionStatement	"Unparse ( buffer , op2 )"	621:2:13364:13386	2570670	2	True				
ANR	2570807	CallExpression	"Unparse ( buffer , op2 )"		2570670	0					
ANR	2570808	Callee	Unparse		2570670	0					
ANR	2570809	Identifier	Unparse		2570670	0					
ANR	2570810	ArgumentList	buffer		2570670	1					
ANR	2570811	Argument	buffer		2570670	0					
ANR	2570812	Identifier	buffer		2570670	0					
ANR	2570813	Argument	op2		2570670	1					
ANR	2570814	Identifier	op2		2570670	0					
ANR	2570815	ExpressionStatement	buffer += ']'	622:2:13390:13403	2570670	3	True				
ANR	2570816	AssignmentExpression	buffer += ']'		2570670	0		+=			
ANR	2570817	Identifier	buffer		2570670	0					
ANR	2570818	PrimaryExpression	']'		2570670	1					
ANR	2570819	ReturnStatement	return ;	623:2:13407:13413	2570670	4	True				
ANR	2570820	IdentifierDeclStatement	Operation :: OpKind top ;	626:1:13450:13471	2570670	5	True				
ANR	2570821	IdentifierDecl	top		2570670	0					
ANR	2570822	IdentifierDeclType	Operation :: OpKind		2570670	0					
ANR	2570823	Identifier	top		2570670	1					
ANR	2570824	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	627:1:13474:13498	2570670	6	True				
ANR	2570825	IdentifierDecl	* t1		2570670	0					
ANR	2570826	IdentifierDeclType	ExprTree *		2570670	0					
ANR	2570827	Identifier	t1		2570670	1					
ANR	2570828	IdentifierDecl	* t2		2570670	1					
ANR	2570829	IdentifierDeclType	ExprTree *		2570670	0					
ANR	2570830	Identifier	t2		2570670	1					
ANR	2570831	IdentifierDecl	* t3		2570670	2					
ANR	2570832	IdentifierDeclType	ExprTree *		2570670	0					
ANR	2570833	Identifier	t3		2570670	1					
ANR	2570834	IfStatement	if ( op1 -> GetKind ( ) == ExprTree :: OP_NODE )		2570670	7					
ANR	2570835	Condition	op1 -> GetKind ( ) == ExprTree :: OP_NODE	629:5:13506:13541	2570670	0	True				
ANR	2570836	EqualityExpression	op1 -> GetKind ( ) == ExprTree :: OP_NODE		2570670	0		==			
ANR	2570837	CallExpression	op1 -> GetKind ( )		2570670	0					
ANR	2570838	Callee	op1 -> GetKind		2570670	0					
ANR	2570839	PtrMemberAccess	op1 -> GetKind		2570670	0					
ANR	2570840	Identifier	op1		2570670	0					
ANR	2570841	Identifier	GetKind		2570670	1					
ANR	2570842	ArgumentList			2570670	1					
ANR	2570843	Identifier	ExprTree :: OP_NODE		2570670	1					
ANR	2570844	CompoundStatement		40:44:941:941	2570670	1					
ANR	2570845	ExpressionStatement	"( ( Operation * ) op1 ) -> GetComponents ( top , t1 , t2 , t3 )"	630:2:13549:13600	2570670	0	True				
ANR	2570846	CallExpression	"( ( Operation * ) op1 ) -> GetComponents ( top , t1 , t2 , t3 )"		2570670	0					
ANR	2570847	Callee	( ( Operation * ) op1 ) -> GetComponents		2570670	0					
ANR	2570848	PtrMemberAccess	( ( Operation * ) op1 ) -> GetComponents		2570670	0					
ANR	2570849	CastExpression	( Operation * ) op1		2570670	0					
ANR	2570850	CastTarget	Operation *		2570670	0					
ANR	2570851	Identifier	op1		2570670	1					
ANR	2570852	Identifier	GetComponents		2570670	1					
ANR	2570853	ArgumentList	top		2570670	1					
ANR	2570854	Argument	top		2570670	0					
ANR	2570855	Identifier	top		2570670	0					
ANR	2570856	Argument	t1		2570670	1					
ANR	2570857	Identifier	t1		2570670	0					
ANR	2570858	Argument	t2		2570670	2					
ANR	2570859	Identifier	t2		2570670	0					
ANR	2570860	Argument	t3		2570670	3					
ANR	2570861	Identifier	t3		2570670	0					
ANR	2570862	IfStatement	if ( Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op ) )		2570670	1					
ANR	2570863	Condition	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )	631:6:13608:13669	2570670	0	True				
ANR	2570864	RelationalExpression	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )		2570670	0		<			
ANR	2570865	CallExpression	Operation :: PrecedenceLevel ( top )		2570670	0					
ANR	2570866	Callee	Operation :: PrecedenceLevel		2570670	0					
ANR	2570867	Identifier	Operation :: PrecedenceLevel		2570670	0					
ANR	2570868	ArgumentList	top		2570670	1					
ANR	2570869	Argument	top		2570670	0					
ANR	2570870	Identifier	top		2570670	0					
ANR	2570871	CallExpression	Operation :: PrecedenceLevel ( op )		2570670	1					
ANR	2570872	Callee	Operation :: PrecedenceLevel		2570670	0					
ANR	2570873	Identifier	Operation :: PrecedenceLevel		2570670	0					
ANR	2570874	ArgumentList	op		2570670	1					
ANR	2570875	Argument	op		2570670	0					
ANR	2570876	Identifier	op		2570670	0					
ANR	2570877	CompoundStatement		42:71:1069:1069	2570670	1					
ANR	2570878	ExpressionStatement	"buffer += "" ( """	632:3:13678:13693	2570670	0	True				
ANR	2570879	AssignmentExpression	"buffer += "" ( """		2570670	0		+=			
ANR	2570880	Identifier	buffer		2570670	0					
ANR	2570881	PrimaryExpression	""" ( """		2570670	1					
ANR	2570882	ExpressionStatement	"UnparseAux ( buffer , top , t1 , t2 , t3 )"	633:3:13698:13735	2570670	1	True				
ANR	2570883	CallExpression	"UnparseAux ( buffer , top , t1 , t2 , t3 )"		2570670	0					
ANR	2570884	Callee	UnparseAux		2570670	0					
ANR	2570885	Identifier	UnparseAux		2570670	0					
ANR	2570886	ArgumentList	buffer		2570670	1					
ANR	2570887	Argument	buffer		2570670	0					
ANR	2570888	Identifier	buffer		2570670	0					
ANR	2570889	Argument	top		2570670	1					
ANR	2570890	Identifier	top		2570670	0					
ANR	2570891	Argument	t1		2570670	2					
ANR	2570892	Identifier	t1		2570670	0					
ANR	2570893	Argument	t2		2570670	3					
ANR	2570894	Identifier	t2		2570670	0					
ANR	2570895	Argument	t3		2570670	4					
ANR	2570896	Identifier	t3		2570670	0					
ANR	2570897	ExpressionStatement	"buffer += "" ) """	634:3:13740:13755	2570670	2	True				
ANR	2570898	AssignmentExpression	"buffer += "" ) """		2570670	0		+=			
ANR	2570899	Identifier	buffer		2570670	0					
ANR	2570900	PrimaryExpression	""" ) """		2570670	1					
ANR	2570901	ElseStatement	else		2570670	0					
ANR	2570902	CompoundStatement		47:8:1165:1165	2570670	0					
ANR	2570903	ExpressionStatement	"Unparse ( buffer , op1 )"	637:2:13773:13795	2570670	0	True				
ANR	2570904	CallExpression	"Unparse ( buffer , op1 )"		2570670	0					
ANR	2570905	Callee	Unparse		2570670	0					
ANR	2570906	Identifier	Unparse		2570670	0					
ANR	2570907	ArgumentList	buffer		2570670	1					
ANR	2570908	Argument	buffer		2570670	0					
ANR	2570909	Identifier	buffer		2570670	0					
ANR	2570910	Argument	op1		2570670	1					
ANR	2570911	Identifier	op1		2570670	0					
ANR	2570912	ExpressionStatement	buffer += opString [ op ]	639:1:13801:13823	2570670	8	True				
ANR	2570913	AssignmentExpression	buffer += opString [ op ]		2570670	0		+=			
ANR	2570914	Identifier	buffer		2570670	0					
ANR	2570915	ArrayIndexing	opString [ op ]		2570670	1					
ANR	2570916	Identifier	opString		2570670	0					
ANR	2570917	Identifier	op		2570670	1					
ANR	2570918	IfStatement	if ( op2 -> GetKind ( ) == ExprTree :: OP_NODE )		2570670	9					
ANR	2570919	Condition	op2 -> GetKind ( ) == ExprTree :: OP_NODE	640:5:13830:13865	2570670	0	True				
ANR	2570920	EqualityExpression	op2 -> GetKind ( ) == ExprTree :: OP_NODE		2570670	0		==			
ANR	2570921	CallExpression	op2 -> GetKind ( )		2570670	0					
ANR	2570922	Callee	op2 -> GetKind		2570670	0					
ANR	2570923	PtrMemberAccess	op2 -> GetKind		2570670	0					
ANR	2570924	Identifier	op2		2570670	0					
ANR	2570925	Identifier	GetKind		2570670	1					
ANR	2570926	ArgumentList			2570670	1					
ANR	2570927	Identifier	ExprTree :: OP_NODE		2570670	1					
ANR	2570928	CompoundStatement		51:44:1265:1265	2570670	1					
ANR	2570929	ExpressionStatement	"( ( Operation * ) op2 ) -> GetComponents ( top , t1 , t2 , t3 )"	641:2:13873:13924	2570670	0	True				
ANR	2570930	CallExpression	"( ( Operation * ) op2 ) -> GetComponents ( top , t1 , t2 , t3 )"		2570670	0					
ANR	2570931	Callee	( ( Operation * ) op2 ) -> GetComponents		2570670	0					
ANR	2570932	PtrMemberAccess	( ( Operation * ) op2 ) -> GetComponents		2570670	0					
ANR	2570933	CastExpression	( Operation * ) op2		2570670	0					
ANR	2570934	CastTarget	Operation *		2570670	0					
ANR	2570935	Identifier	op2		2570670	1					
ANR	2570936	Identifier	GetComponents		2570670	1					
ANR	2570937	ArgumentList	top		2570670	1					
ANR	2570938	Argument	top		2570670	0					
ANR	2570939	Identifier	top		2570670	0					
ANR	2570940	Argument	t1		2570670	1					
ANR	2570941	Identifier	t1		2570670	0					
ANR	2570942	Argument	t2		2570670	2					
ANR	2570943	Identifier	t2		2570670	0					
ANR	2570944	Argument	t3		2570670	3					
ANR	2570945	Identifier	t3		2570670	0					
ANR	2570946	IfStatement	if ( Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op ) )		2570670	1					
ANR	2570947	Condition	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )	642:6:13932:13993	2570670	0	True				
ANR	2570948	RelationalExpression	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )		2570670	0		<			
ANR	2570949	CallExpression	Operation :: PrecedenceLevel ( top )		2570670	0					
ANR	2570950	Callee	Operation :: PrecedenceLevel		2570670	0					
ANR	2570951	Identifier	Operation :: PrecedenceLevel		2570670	0					
ANR	2570952	ArgumentList	top		2570670	1					
ANR	2570953	Argument	top		2570670	0					
ANR	2570954	Identifier	top		2570670	0					
ANR	2570955	CallExpression	Operation :: PrecedenceLevel ( op )		2570670	1					
ANR	2570956	Callee	Operation :: PrecedenceLevel		2570670	0					
ANR	2570957	Identifier	Operation :: PrecedenceLevel		2570670	0					
ANR	2570958	ArgumentList	op		2570670	1					
ANR	2570959	Argument	op		2570670	0					
ANR	2570960	Identifier	op		2570670	0					
ANR	2570961	CompoundStatement		53:71:1393:1393	2570670	1					
ANR	2570962	ExpressionStatement	"buffer += "" ( """	643:3:14002:14017	2570670	0	True				
ANR	2570963	AssignmentExpression	"buffer += "" ( """		2570670	0		+=			
ANR	2570964	Identifier	buffer		2570670	0					
ANR	2570965	PrimaryExpression	""" ( """		2570670	1					
ANR	2570966	ExpressionStatement	"UnparseAux ( buffer , top , t1 , t2 , t3 )"	644:3:14022:14059	2570670	1	True				
ANR	2570967	CallExpression	"UnparseAux ( buffer , top , t1 , t2 , t3 )"		2570670	0					
ANR	2570968	Callee	UnparseAux		2570670	0					
ANR	2570969	Identifier	UnparseAux		2570670	0					
ANR	2570970	ArgumentList	buffer		2570670	1					
ANR	2570971	Argument	buffer		2570670	0					
ANR	2570972	Identifier	buffer		2570670	0					
ANR	2570973	Argument	top		2570670	1					
ANR	2570974	Identifier	top		2570670	0					
ANR	2570975	Argument	t1		2570670	2					
ANR	2570976	Identifier	t1		2570670	0					
ANR	2570977	Argument	t2		2570670	3					
ANR	2570978	Identifier	t2		2570670	0					
ANR	2570979	Argument	t3		2570670	4					
ANR	2570980	Identifier	t3		2570670	0					
ANR	2570981	ExpressionStatement	"buffer += "" ) """	645:3:14064:14079	2570670	2	True				
ANR	2570982	AssignmentExpression	"buffer += "" ) """		2570670	0		+=			
ANR	2570983	Identifier	buffer		2570670	0					
ANR	2570984	PrimaryExpression	""" ) """		2570670	1					
ANR	2570985	ElseStatement	else		2570670	0					
ANR	2570986	CompoundStatement		58:8:1489:1489	2570670	0					
ANR	2570987	ExpressionStatement	"Unparse ( buffer , op2 )"	648:2:14097:14119	2570670	0	True				
ANR	2570988	CallExpression	"Unparse ( buffer , op2 )"		2570670	0					
ANR	2570989	Callee	Unparse		2570670	0					
ANR	2570990	Identifier	Unparse		2570670	0					
ANR	2570991	ArgumentList	buffer		2570670	1					
ANR	2570992	Argument	buffer		2570670	0					
ANR	2570993	Identifier	buffer		2570670	0					
ANR	2570994	Argument	op2		2570670	1					
ANR	2570995	Identifier	op2		2570670	0					
ANR	2570996	ReturnType	void		2570670	1					
ANR	2570997	Identifier	PrettyPrint :: UnparseAux		2570670	2					
ANR	2570998	ParameterList	"string & buffer , Operation :: OpKind op , ExprTree * op1 , ExprTree * op2 , ExprTree * op3"		2570670	3					
ANR	2570999	Parameter	string & buffer	588:11:12522:12535	2570670	0	True				
ANR	2571000	ParameterType	string &		2570670	0					
ANR	2571001	Identifier	buffer		2570670	1					
ANR	2571002	Parameter	Operation :: OpKind op	588:26:12537:12556	2570670	1	True				
ANR	2571003	ParameterType	Operation :: OpKind		2570670	0					
ANR	2571004	Identifier	op		2570670	1					
ANR	2571005	Parameter	ExprTree * op1	588:47:12558:12570	2570670	2	True				
ANR	2571006	ParameterType	ExprTree *		2570670	0					
ANR	2571007	Identifier	op1		2570670	1					
ANR	2571008	Parameter	ExprTree * op2	588:61:12572:12584	2570670	3	True				
ANR	2571009	ParameterType	ExprTree *		2570670	0					
ANR	2571010	Identifier	op2		2570670	1					
ANR	2571011	Parameter	ExprTree * op3	589:1:12588:12600	2570670	4	True				
ANR	2571012	ParameterType	ExprTree *		2570670	0					
ANR	2571013	Identifier	op3		2570670	1					
ANR	2571014	CFGEntryNode	ENTRY		2570670		True				
ANR	2571015	CFGExitNode	EXIT		2570670		True				
ANR	2571016	Symbol	ExprTree :: OP_NODE		2570670						
ANR	2571017	Symbol	* op		2570670						
ANR	2571018	Symbol	opString		2570670						
ANR	2571019	Symbol	op1 -> GetKind		2570670						
ANR	2571020	Symbol	Operation :: LOGICAL_NOT_OP		2570670						
ANR	2571021	Symbol	Operation :: UNARY_MINUS_OP		2570670						
ANR	2571022	Symbol	Operation :: TERNARY_OP		2570670						
ANR	2571023	Symbol	top		2570670						
ANR	2571024	Symbol	Operation :: BITWISE_NOT_OP		2570670						
ANR	2571025	Symbol	* op1		2570670						
ANR	2571026	Symbol	buffer		2570670						
ANR	2571027	Symbol	minimalParens		2570670						
ANR	2571028	Symbol	Operation :: SUBSCRIPT_OP		2570670						
ANR	2571029	Symbol	* op2		2570670						
ANR	2571030	Symbol	Operation :: UNARY_PLUS_OP		2570670						
ANR	2571031	Symbol	op		2570670						
ANR	2571032	Symbol	Operation :: PrecedenceLevel		2570670						
ANR	2571033	Symbol	op2 -> GetKind		2570670						
ANR	2571034	Symbol	op2		2570670						
ANR	2571035	Symbol	op1		2570670						
ANR	2571036	Symbol	op3		2570670						
ANR	2571037	Symbol	Operation :: PARENTHESES_OP		2570670						
ANR	2571038	Symbol	* opString		2570670						
ANR	2571039	Symbol	t1		2570670						
ANR	2571040	Symbol	t2		2570670						
ANR	2571041	Symbol	t3		2570670						
ANR	2571042	Function	PrettyPrint :: UnparseAux	653:0:14128:14922							
ANR	2571043	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , vector < pair < string , ExprTree * > > & attrs)"		2571042	0					
ANR	2571044	CompoundStatement		655:0:14217:14922	2571042	0					
ANR	2571045	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	656:1:14220:14267	2571042	0	True				
ANR	2571046	IdentifierDecl	itr		2571042	0					
ANR	2571047	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		2571042	0					
ANR	2571048	Identifier	itr		2571042	1					
ANR	2571049	IfStatement	if ( classadIndent > 0 )		2571042	1					
ANR	2571050	Condition	classadIndent > 0	658:5:14275:14291	2571042	0	True				
ANR	2571051	RelationalExpression	classadIndent > 0		2571042	0		>			
ANR	2571052	Identifier	classadIndent		2571042	0					
ANR	2571053	PrimaryExpression	0		2571042	1					
ANR	2571054	CompoundStatement		4:25:77:77	2571042	1					
ANR	2571055	ExpressionStatement	indentLevel += classadIndent	659:2:14299:14327	2571042	0	True				
ANR	2571056	AssignmentExpression	indentLevel += classadIndent		2571042	0		+=			
ANR	2571057	Identifier	indentLevel		2571042	0					
ANR	2571058	Identifier	classadIndent		2571042	1					
ANR	2571059	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '['"	660:2:14331:14380	2571042	1	True				
ANR	2571060	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '['"		2571042	0		+=			
ANR	2571061	Identifier	buffer		2571042	0					
ANR	2571062	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '['"		2571042	1		+			
ANR	2571063	PrimaryExpression	'\\n'		2571042	0					
ANR	2571064	AdditiveExpression	"string ( indentLevel , ' ' ) + '['"		2571042	1		+			
ANR	2571065	CallExpression	"string ( indentLevel , ' ' )"		2571042	0					
ANR	2571066	Callee	string		2571042	0					
ANR	2571067	Identifier	string		2571042	0					
ANR	2571068	ArgumentList	indentLevel		2571042	1					
ANR	2571069	Argument	indentLevel		2571042	0					
ANR	2571070	Identifier	indentLevel		2571042	0					
ANR	2571071	Argument	' '		2571042	1					
ANR	2571072	PrimaryExpression	' '		2571042	0					
ANR	2571073	PrimaryExpression	'['		2571042	1					
ANR	2571074	ExpressionStatement	indentLevel += classadIndent	661:2:14384:14412	2571042	2	True				
ANR	2571075	AssignmentExpression	indentLevel += classadIndent		2571042	0		+=			
ANR	2571076	Identifier	indentLevel		2571042	0					
ANR	2571077	Identifier	classadIndent		2571042	1					
ANR	2571078	ElseStatement	else		2571042	0					
ANR	2571079	CompoundStatement		8:8:204:204	2571042	0					
ANR	2571080	ExpressionStatement	"buffer += ""[ """	663:2:14426:14440	2571042	0	True				
ANR	2571081	AssignmentExpression	"buffer += ""[ """		2571042	0		+=			
ANR	2571082	Identifier	buffer		2571042	0					
ANR	2571083	PrimaryExpression	"""[ """		2571042	1					
ANR	2571084	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		2571042	2					
ANR	2571085	ForInit	itr = attrs . begin ( ) ;	665:6:14451:14469	2571042	0	True				
ANR	2571086	AssignmentExpression	itr = attrs . begin ( )		2571042	0		=			
ANR	2571087	Identifier	itr		2571042	0					
ANR	2571088	CallExpression	attrs . begin ( )		2571042	1					
ANR	2571089	Callee	attrs . begin		2571042	0					
ANR	2571090	MemberAccess	attrs . begin		2571042	0					
ANR	2571091	Identifier	attrs		2571042	0					
ANR	2571092	Identifier	begin		2571042	1					
ANR	2571093	ArgumentList			2571042	1					
ANR	2571094	Condition	itr != attrs . end ( )	665:26:14471:14487	2571042	1	True				
ANR	2571095	EqualityExpression	itr != attrs . end ( )		2571042	0		!=			
ANR	2571096	Identifier	itr		2571042	0					
ANR	2571097	CallExpression	attrs . end ( )		2571042	1					
ANR	2571098	Callee	attrs . end		2571042	0					
ANR	2571099	MemberAccess	attrs . end		2571042	0					
ANR	2571100	Identifier	attrs		2571042	0					
ANR	2571101	Identifier	end		2571042	1					
ANR	2571102	ArgumentList			2571042	1					
ANR	2571103	PostIncDecOperationExpression	itr ++	665:45:14490:14494	2571042	2	True				
ANR	2571104	Identifier	itr		2571042	0					
ANR	2571105	IncDec	++		2571042	1					
ANR	2571106	CompoundStatement		11:53:280:280	2571042	3					
ANR	2571107	IfStatement	if ( classadIndent > 0 )		2571042	0					
ANR	2571108	Condition	classadIndent > 0	666:6:14506:14522	2571042	0	True				
ANR	2571109	RelationalExpression	classadIndent > 0		2571042	0		>			
ANR	2571110	Identifier	classadIndent		2571042	0					
ANR	2571111	PrimaryExpression	0		2571042	1					
ANR	2571112	CompoundStatement		12:26:308:308	2571042	1					
ANR	2571113	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' )"	667:3:14531:14574	2571042	0	True				
ANR	2571114	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' )"		2571042	0		+=			
ANR	2571115	Identifier	buffer		2571042	0					
ANR	2571116	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' )"		2571042	1		+			
ANR	2571117	PrimaryExpression	'\\n'		2571042	0					
ANR	2571118	CallExpression	"string ( indentLevel , ' ' )"		2571042	1					
ANR	2571119	Callee	string		2571042	0					
ANR	2571120	Identifier	string		2571042	0					
ANR	2571121	ArgumentList	indentLevel		2571042	1					
ANR	2571122	Argument	indentLevel		2571042	0					
ANR	2571123	Identifier	indentLevel		2571042	0					
ANR	2571124	Argument	' '		2571042	1					
ANR	2571125	PrimaryExpression	' '		2571042	0					
ANR	2571126	ExpressionStatement	"ClassAdUnParser :: UnparseAux ( buffer , itr -> first )"	669:2:14583:14632	2571042	1	True				
ANR	2571127	CallExpression	"ClassAdUnParser :: UnparseAux ( buffer , itr -> first )"		2571042	0					
ANR	2571128	Callee	ClassAdUnParser :: UnparseAux		2571042	0					
ANR	2571129	Identifier	ClassAdUnParser :: UnparseAux		2571042	0					
ANR	2571130	ArgumentList	buffer		2571042	1					
ANR	2571131	Argument	buffer		2571042	0					
ANR	2571132	Identifier	buffer		2571042	0					
ANR	2571133	Argument	itr -> first		2571042	1					
ANR	2571134	PtrMemberAccess	itr -> first		2571042	0					
ANR	2571135	Identifier	itr		2571042	0					
ANR	2571136	Identifier	first		2571042	1					
ANR	2571137	ExpressionStatement	"buffer += "" = """	670:2:14636:14652	2571042	2	True				
ANR	2571138	AssignmentExpression	"buffer += "" = """		2571042	0		+=			
ANR	2571139	Identifier	buffer		2571042	0					
ANR	2571140	PrimaryExpression	""" = """		2571042	1					
ANR	2571141	ExpressionStatement	"Unparse ( buffer , itr -> second )"	671:2:14656:14686	2571042	3	True				
ANR	2571142	CallExpression	"Unparse ( buffer , itr -> second )"		2571042	0					
ANR	2571143	Callee	Unparse		2571042	0					
ANR	2571144	Identifier	Unparse		2571042	0					
ANR	2571145	ArgumentList	buffer		2571042	1					
ANR	2571146	Argument	buffer		2571042	0					
ANR	2571147	Identifier	buffer		2571042	0					
ANR	2571148	Argument	itr -> second		2571042	1					
ANR	2571149	PtrMemberAccess	itr -> second		2571042	0					
ANR	2571150	Identifier	itr		2571042	0					
ANR	2571151	Identifier	second		2571042	1					
ANR	2571152	IfStatement	if ( itr + 1 != attrs . end ( ) )		2571042	4					
ANR	2571153	Condition	itr + 1 != attrs . end ( )	672:7:14695:14715	2571042	0	True				
ANR	2571154	EqualityExpression	itr + 1 != attrs . end ( )		2571042	0		!=			
ANR	2571155	AdditiveExpression	itr + 1		2571042	0		+			
ANR	2571156	Identifier	itr		2571042	0					
ANR	2571157	PrimaryExpression	1		2571042	1					
ANR	2571158	CallExpression	attrs . end ( )		2571042	1					
ANR	2571159	Callee	attrs . end		2571042	0					
ANR	2571160	MemberAccess	attrs . end		2571042	0					
ANR	2571161	Identifier	attrs		2571042	0					
ANR	2571162	Identifier	end		2571042	1					
ANR	2571163	ArgumentList			2571042	1					
ANR	2571164	CompoundStatement		18:31:501:501	2571042	1					
ANR	2571165	ExpressionStatement	"buffer += ""; """	673:3:14724:14738	2571042	0	True				
ANR	2571166	AssignmentExpression	"buffer += ""; """		2571042	0		+=			
ANR	2571167	Identifier	buffer		2571042	0					
ANR	2571168	PrimaryExpression	"""; """		2571042	1					
ANR	2571169	IfStatement	if ( classadIndent > 0 )		2571042	3					
ANR	2571170	Condition	classadIndent > 0	676:5:14752:14768	2571042	0	True				
ANR	2571171	RelationalExpression	classadIndent > 0		2571042	0		>			
ANR	2571172	Identifier	classadIndent		2571042	0					
ANR	2571173	PrimaryExpression	0		2571042	1					
ANR	2571174	CompoundStatement		22:25:554:554	2571042	1					
ANR	2571175	ExpressionStatement	indentLevel -= classadIndent	677:2:14776:14804	2571042	0	True				
ANR	2571176	AssignmentExpression	indentLevel -= classadIndent		2571042	0		-=			
ANR	2571177	Identifier	indentLevel		2571042	0					
ANR	2571178	Identifier	classadIndent		2571042	1					
ANR	2571179	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + ']'"	678:2:14808:14857	2571042	1	True				
ANR	2571180	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + ']'"		2571042	0		+=			
ANR	2571181	Identifier	buffer		2571042	0					
ANR	2571182	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + ']'"		2571042	1		+			
ANR	2571183	PrimaryExpression	'\\n'		2571042	0					
ANR	2571184	AdditiveExpression	"string ( indentLevel , ' ' ) + ']'"		2571042	1		+			
ANR	2571185	CallExpression	"string ( indentLevel , ' ' )"		2571042	0					
ANR	2571186	Callee	string		2571042	0					
ANR	2571187	Identifier	string		2571042	0					
ANR	2571188	ArgumentList	indentLevel		2571042	1					
ANR	2571189	Argument	indentLevel		2571042	0					
ANR	2571190	Identifier	indentLevel		2571042	0					
ANR	2571191	Argument	' '		2571042	1					
ANR	2571192	PrimaryExpression	' '		2571042	0					
ANR	2571193	PrimaryExpression	']'		2571042	1					
ANR	2571194	ExpressionStatement	indentLevel -= classadIndent	679:2:14861:14889	2571042	2	True				
ANR	2571195	AssignmentExpression	indentLevel -= classadIndent		2571042	0		-=			
ANR	2571196	Identifier	indentLevel		2571042	0					
ANR	2571197	Identifier	classadIndent		2571042	1					
ANR	2571198	ElseStatement	else		2571042	0					
ANR	2571199	CompoundStatement		26:8:681:681	2571042	0					
ANR	2571200	ExpressionStatement	"buffer += "" ]"""	681:2:14903:14917	2571042	0	True				
ANR	2571201	AssignmentExpression	"buffer += "" ]"""		2571042	0		+=			
ANR	2571202	Identifier	buffer		2571042	0					
ANR	2571203	PrimaryExpression	""" ]"""		2571042	1					
ANR	2571204	ReturnType	void		2571042	1					
ANR	2571205	Identifier	PrettyPrint :: UnparseAux		2571042	2					
ANR	2571206	ParameterList	"string & buffer , vector < pair < string , ExprTree * > > & attrs"		2571042	3					
ANR	2571207	Parameter	string & buffer	654:12:14159:14172	2571042	0	True				
ANR	2571208	ParameterType	string &		2571042	0					
ANR	2571209	Identifier	buffer		2571042	1					
ANR	2571210	Parameter	"vector < pair < string , ExprTree * > > & attrs"	654:28:14175:14213	2571042	1	True				
ANR	2571211	ParameterType	"vector < pair < string , ExprTree * > > &"		2571042	0					
ANR	2571212	Identifier	attrs		2571042	1					
ANR	2571213	CFGEntryNode	ENTRY		2571042		True				
ANR	2571214	CFGExitNode	EXIT		2571042		True				
ANR	2571215	Symbol	attrs . begin		2571042						
ANR	2571216	Symbol	indentLevel		2571042						
ANR	2571217	Symbol	string		2571042						
ANR	2571218	Symbol	itr		2571042						
ANR	2571219	Symbol	classadIndent		2571042						
ANR	2571220	Symbol	buffer		2571042						
ANR	2571221	Symbol	itr -> first		2571042						
ANR	2571222	Symbol	attrs . end		2571042						
ANR	2571223	Symbol	* itr		2571042						
ANR	2571224	Symbol	attrs		2571042						
ANR	2571225	Symbol	itr -> second		2571042						
ANR	2571226	Function	PrettyPrint :: UnparseAux	686:0:14926:15593							
ANR	2571227	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , vector < ExprTree * > & exprs)"		2571226	0					
ANR	2571228	CompoundStatement		688:0:15000:15593	2571226	0					
ANR	2571229	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	689:1:15003:15034	2571226	0	True				
ANR	2571230	IdentifierDecl	itr		2571226	0					
ANR	2571231	IdentifierDeclType	vector < ExprTree * > :: iterator		2571226	0					
ANR	2571232	Identifier	itr		2571226	1					
ANR	2571233	IfStatement	if ( listIndent > 0 )		2571226	1					
ANR	2571234	Condition	listIndent > 0	691:5:15042:15055	2571226	0	True				
ANR	2571235	RelationalExpression	listIndent > 0		2571226	0		>			
ANR	2571236	Identifier	listIndent		2571226	0					
ANR	2571237	PrimaryExpression	0		2571226	1					
ANR	2571238	CompoundStatement		4:22:58:58	2571226	1					
ANR	2571239	ExpressionStatement	indentLevel += listIndent	692:2:15063:15088	2571226	0	True				
ANR	2571240	AssignmentExpression	indentLevel += listIndent		2571226	0		+=			
ANR	2571241	Identifier	indentLevel		2571226	0					
ANR	2571242	Identifier	listIndent		2571226	1					
ANR	2571243	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '{'"	693:2:15092:15141	2571226	1	True				
ANR	2571244	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '{'"		2571226	0		+=			
ANR	2571245	Identifier	buffer		2571226	0					
ANR	2571246	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '{'"		2571226	1		+			
ANR	2571247	PrimaryExpression	'\\n'		2571226	0					
ANR	2571248	AdditiveExpression	"string ( indentLevel , ' ' ) + '{'"		2571226	1		+			
ANR	2571249	CallExpression	"string ( indentLevel , ' ' )"		2571226	0					
ANR	2571250	Callee	string		2571226	0					
ANR	2571251	Identifier	string		2571226	0					
ANR	2571252	ArgumentList	indentLevel		2571226	1					
ANR	2571253	Argument	indentLevel		2571226	0					
ANR	2571254	Identifier	indentLevel		2571226	0					
ANR	2571255	Argument	' '		2571226	1					
ANR	2571256	PrimaryExpression	' '		2571226	0					
ANR	2571257	PrimaryExpression	'{'		2571226	1					
ANR	2571258	ExpressionStatement	indentLevel += listIndent	694:2:15145:15170	2571226	2	True				
ANR	2571259	AssignmentExpression	indentLevel += listIndent		2571226	0		+=			
ANR	2571260	Identifier	indentLevel		2571226	0					
ANR	2571261	Identifier	listIndent		2571226	1					
ANR	2571262	ElseStatement	else		2571226	0					
ANR	2571263	CompoundStatement		8:8:179:179	2571226	0					
ANR	2571264	ExpressionStatement	"buffer += ""{ """	696:2:15184:15198	2571226	0	True				
ANR	2571265	AssignmentExpression	"buffer += ""{ """		2571226	0		+=			
ANR	2571266	Identifier	buffer		2571226	0					
ANR	2571267	PrimaryExpression	"""{ """		2571226	1					
ANR	2571268	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		2571226	2					
ANR	2571269	ForInit	itr = exprs . begin ( ) ;	698:6:15209:15227	2571226	0	True				
ANR	2571270	AssignmentExpression	itr = exprs . begin ( )		2571226	0		=			
ANR	2571271	Identifier	itr		2571226	0					
ANR	2571272	CallExpression	exprs . begin ( )		2571226	1					
ANR	2571273	Callee	exprs . begin		2571226	0					
ANR	2571274	MemberAccess	exprs . begin		2571226	0					
ANR	2571275	Identifier	exprs		2571226	0					
ANR	2571276	Identifier	begin		2571226	1					
ANR	2571277	ArgumentList			2571226	1					
ANR	2571278	Condition	itr != exprs . end ( )	698:26:15229:15245	2571226	1	True				
ANR	2571279	EqualityExpression	itr != exprs . end ( )		2571226	0		!=			
ANR	2571280	Identifier	itr		2571226	0					
ANR	2571281	CallExpression	exprs . end ( )		2571226	1					
ANR	2571282	Callee	exprs . end		2571226	0					
ANR	2571283	MemberAccess	exprs . end		2571226	0					
ANR	2571284	Identifier	exprs		2571226	0					
ANR	2571285	Identifier	end		2571226	1					
ANR	2571286	ArgumentList			2571226	1					
ANR	2571287	PostIncDecOperationExpression	itr ++	698:45:15248:15252	2571226	2	True				
ANR	2571288	Identifier	itr		2571226	0					
ANR	2571289	IncDec	++		2571226	1					
ANR	2571290	CompoundStatement		11:53:255:255	2571226	3					
ANR	2571291	IfStatement	if ( listIndent > 0 )		2571226	0					
ANR	2571292	Condition	listIndent > 0	699:6:15264:15277	2571226	0	True				
ANR	2571293	RelationalExpression	listIndent > 0		2571226	0		>			
ANR	2571294	Identifier	listIndent		2571226	0					
ANR	2571295	PrimaryExpression	0		2571226	1					
ANR	2571296	CompoundStatement		12:23:280:280	2571226	1					
ANR	2571297	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' )"	700:3:15286:15329	2571226	0	True				
ANR	2571298	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' )"		2571226	0		+=			
ANR	2571299	Identifier	buffer		2571226	0					
ANR	2571300	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' )"		2571226	1		+			
ANR	2571301	PrimaryExpression	'\\n'		2571226	0					
ANR	2571302	CallExpression	"string ( indentLevel , ' ' )"		2571226	1					
ANR	2571303	Callee	string		2571226	0					
ANR	2571304	Identifier	string		2571226	0					
ANR	2571305	ArgumentList	indentLevel		2571226	1					
ANR	2571306	Argument	indentLevel		2571226	0					
ANR	2571307	Identifier	indentLevel		2571226	0					
ANR	2571308	Argument	' '		2571226	1					
ANR	2571309	PrimaryExpression	' '		2571226	0					
ANR	2571310	ExpressionStatement	"ClassAdUnParser :: Unparse ( buffer , * itr )"	702:2:15337:15377	2571226	1	True				
ANR	2571311	CallExpression	"ClassAdUnParser :: Unparse ( buffer , * itr )"		2571226	0					
ANR	2571312	Callee	ClassAdUnParser :: Unparse		2571226	0					
ANR	2571313	Identifier	ClassAdUnParser :: Unparse		2571226	0					
ANR	2571314	ArgumentList	buffer		2571226	1					
ANR	2571315	Argument	buffer		2571226	0					
ANR	2571316	Identifier	buffer		2571226	0					
ANR	2571317	Argument	* itr		2571226	1					
ANR	2571318	UnaryOperationExpression	* itr		2571226	0					
ANR	2571319	UnaryOperator	*		2571226	0					
ANR	2571320	Identifier	itr		2571226	1					
ANR	2571321	IfStatement	if ( itr + 1 != exprs . end ( ) )		2571226	2					
ANR	2571322	Condition	itr + 1 != exprs . end ( )	703:6:15385:15405	2571226	0	True				
ANR	2571323	EqualityExpression	itr + 1 != exprs . end ( )		2571226	0		!=			
ANR	2571324	AdditiveExpression	itr + 1		2571226	0		+			
ANR	2571325	Identifier	itr		2571226	0					
ANR	2571326	PrimaryExpression	1		2571226	1					
ANR	2571327	CallExpression	exprs . end ( )		2571226	1					
ANR	2571328	Callee	exprs . end		2571226	0					
ANR	2571329	MemberAccess	exprs . end		2571226	0					
ANR	2571330	Identifier	exprs		2571226	0					
ANR	2571331	Identifier	end		2571226	1					
ANR	2571332	ArgumentList			2571226	1					
ANR	2571333	ExpressionStatement	"buffer += ','"	703:30:15409:15422	2571226	1	True				
ANR	2571334	AssignmentExpression	"buffer += ','"		2571226	0		+=			
ANR	2571335	Identifier	buffer		2571226	0					
ANR	2571336	PrimaryExpression	"','"		2571226	1					
ANR	2571337	IfStatement	if ( listIndent > 0 )		2571226	3					
ANR	2571338	Condition	listIndent > 0	705:5:15432:15445	2571226	0	True				
ANR	2571339	RelationalExpression	listIndent > 0		2571226	0		>			
ANR	2571340	Identifier	listIndent		2571226	0					
ANR	2571341	PrimaryExpression	0		2571226	1					
ANR	2571342	CompoundStatement		18:22:448:448	2571226	1					
ANR	2571343	ExpressionStatement	indentLevel -= listIndent	706:2:15453:15478	2571226	0	True				
ANR	2571344	AssignmentExpression	indentLevel -= listIndent		2571226	0		-=			
ANR	2571345	Identifier	indentLevel		2571226	0					
ANR	2571346	Identifier	listIndent		2571226	1					
ANR	2571347	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '}'"	707:2:15482:15531	2571226	1	True				
ANR	2571348	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '}'"		2571226	0		+=			
ANR	2571349	Identifier	buffer		2571226	0					
ANR	2571350	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '}'"		2571226	1		+			
ANR	2571351	PrimaryExpression	'\\n'		2571226	0					
ANR	2571352	AdditiveExpression	"string ( indentLevel , ' ' ) + '}'"		2571226	1		+			
ANR	2571353	CallExpression	"string ( indentLevel , ' ' )"		2571226	0					
ANR	2571354	Callee	string		2571226	0					
ANR	2571355	Identifier	string		2571226	0					
ANR	2571356	ArgumentList	indentLevel		2571226	1					
ANR	2571357	Argument	indentLevel		2571226	0					
ANR	2571358	Identifier	indentLevel		2571226	0					
ANR	2571359	Argument	' '		2571226	1					
ANR	2571360	PrimaryExpression	' '		2571226	0					
ANR	2571361	PrimaryExpression	'}'		2571226	1					
ANR	2571362	ExpressionStatement	indentLevel -= listIndent	708:2:15535:15560	2571226	2	True				
ANR	2571363	AssignmentExpression	indentLevel -= listIndent		2571226	0		-=			
ANR	2571364	Identifier	indentLevel		2571226	0					
ANR	2571365	Identifier	listIndent		2571226	1					
ANR	2571366	ElseStatement	else		2571226	0					
ANR	2571367	CompoundStatement		22:8:569:569	2571226	0					
ANR	2571368	ExpressionStatement	"buffer += "" }"""	710:2:15574:15588	2571226	0	True				
ANR	2571369	AssignmentExpression	"buffer += "" }"""		2571226	0		+=			
ANR	2571370	Identifier	buffer		2571226	0					
ANR	2571371	PrimaryExpression	""" }"""		2571226	1					
ANR	2571372	ReturnType	void		2571226	1					
ANR	2571373	Identifier	PrettyPrint :: UnparseAux		2571226	2					
ANR	2571374	ParameterList	"string & buffer , vector < ExprTree * > & exprs"		2571226	3					
ANR	2571375	Parameter	string & buffer	687:12:14957:14970	2571226	0	True				
ANR	2571376	ParameterType	string &		2571226	0					
ANR	2571377	Identifier	buffer		2571226	1					
ANR	2571378	Parameter	vector < ExprTree * > & exprs	687:28:14973:14996	2571226	1	True				
ANR	2571379	ParameterType	vector < ExprTree * > &		2571226	0					
ANR	2571380	Identifier	exprs		2571226	1					
ANR	2571381	CFGEntryNode	ENTRY		2571226		True				
ANR	2571382	CFGExitNode	EXIT		2571226		True				
ANR	2571383	Symbol	indentLevel		2571226						
ANR	2571384	Symbol	string		2571226						
ANR	2571385	Symbol	itr		2571226						
ANR	2571386	Symbol	exprs		2571226						
ANR	2571387	Symbol	exprs . end		2571226						
ANR	2571388	Symbol	buffer		2571226						
ANR	2571389	Symbol	listIndent		2571226						
ANR	2571390	Symbol	exprs . begin		2571226						
ANR	2571391	Symbol	* itr		2571226						
ANR	2571392	Function	identifierNeedsQuoting	715:0:15663:16141							
ANR	2571393	FunctionDef	identifierNeedsQuoting (const string & str)		2571392	0					
ANR	2571394	CompoundStatement		717:0:15720:16141	2571392	0					
ANR	2571395	IdentifierDeclStatement	bool needs_quoting ;	718:1:15723:15742	2571392	0	True				
ANR	2571396	IdentifierDecl	needs_quoting		2571392	0					
ANR	2571397	IdentifierDeclType	bool		2571392	0					
ANR	2571398	Identifier	needs_quoting		2571392	1					
ANR	2571399	IdentifierDeclStatement	const char * ch = str . c_str ( ) ;	719:1:15745:15774	2571392	1	True				
ANR	2571400	IdentifierDecl	* ch = str . c_str ( )		2571392	0					
ANR	2571401	IdentifierDeclType	const char *		2571392	0					
ANR	2571402	Identifier	ch		2571392	1					
ANR	2571403	AssignmentExpression	* ch = str . c_str ( )		2571392	2		=			
ANR	2571404	Identifier	ch		2571392	0					
ANR	2571405	CallExpression	str . c_str ( )		2571392	1					
ANR	2571406	Callee	str . c_str		2571392	0					
ANR	2571407	MemberAccess	str . c_str		2571392	0					
ANR	2571408	Identifier	str		2571392	0					
ANR	2571409	Identifier	c_str		2571392	1					
ANR	2571410	ArgumentList			2571392	1					
ANR	2571411	IfStatement	if ( ! isalpha ( * ch ) && * ch != '_' )		2571392	2					
ANR	2571412	Condition	! isalpha ( * ch ) && * ch != '_'	722:5:15812:15840	2571392	0	True				
ANR	2571413	AndExpression	! isalpha ( * ch ) && * ch != '_'		2571392	0		&&			
ANR	2571414	UnaryOperationExpression	! isalpha ( * ch )		2571392	0					
ANR	2571415	UnaryOperator	!		2571392	0					
ANR	2571416	CallExpression	isalpha ( * ch )		2571392	1					
ANR	2571417	Callee	isalpha		2571392	0					
ANR	2571418	Identifier	isalpha		2571392	0					
ANR	2571419	ArgumentList	* ch		2571392	1					
ANR	2571420	Argument	* ch		2571392	0					
ANR	2571421	UnaryOperationExpression	* ch		2571392	0					
ANR	2571422	UnaryOperator	*		2571392	0					
ANR	2571423	Identifier	ch		2571392	1					
ANR	2571424	EqualityExpression	* ch != '_'		2571392	1		!=			
ANR	2571425	UnaryOperationExpression	* ch		2571392	0					
ANR	2571426	UnaryOperator	*		2571392	0					
ANR	2571427	Identifier	ch		2571392	1					
ANR	2571428	PrimaryExpression	'_'		2571392	1					
ANR	2571429	CompoundStatement		6:37:123:123	2571392	1					
ANR	2571430	ExpressionStatement	needs_quoting = false	723:2:15848:15869	2571392	0	True				
ANR	2571431	AssignmentExpression	needs_quoting = false		2571392	0		=			
ANR	2571432	Identifier	needs_quoting		2571392	0					
ANR	2571433	Identifier	false		2571392	1					
ANR	2571434	ElseStatement	else		2571392	0					
ANR	2571435	CompoundStatement		8:8:158:158	2571392	0					
ANR	2571436	ExpressionStatement	ch ++	727:2:15931:15935	2571392	0	True				
ANR	2571437	PostIncDecOperationExpression	ch ++		2571392	0					
ANR	2571438	Identifier	ch		2571392	0					
ANR	2571439	IncDec	++		2571392	1					
ANR	2571440	WhileStatement	while ( isalnum ( * ch ) || * ch == '_' )		2571392	1					
ANR	2571441	Condition	isalnum ( * ch ) || * ch == '_'	728:9:15946:15973	2571392	0	True				
ANR	2571442	OrExpression	isalnum ( * ch ) || * ch == '_'		2571392	0		||			
ANR	2571443	CallExpression	isalnum ( * ch )		2571392	0					
ANR	2571444	Callee	isalnum		2571392	0					
ANR	2571445	Identifier	isalnum		2571392	0					
ANR	2571446	ArgumentList	* ch		2571392	1					
ANR	2571447	Argument	* ch		2571392	0					
ANR	2571448	UnaryOperationExpression	* ch		2571392	0					
ANR	2571449	UnaryOperator	*		2571392	0					
ANR	2571450	Identifier	ch		2571392	1					
ANR	2571451	EqualityExpression	* ch == '_'		2571392	1		==			
ANR	2571452	UnaryOperationExpression	* ch		2571392	0					
ANR	2571453	UnaryOperator	*		2571392	0					
ANR	2571454	Identifier	ch		2571392	1					
ANR	2571455	PrimaryExpression	'_'		2571392	1					
ANR	2571456	CompoundStatement		12:40:256:256	2571392	1					
ANR	2571457	ExpressionStatement	ch ++	729:3:15982:15986	2571392	0	True				
ANR	2571458	PostIncDecOperationExpression	ch ++		2571392	0					
ANR	2571459	Identifier	ch		2571392	0					
ANR	2571460	IncDec	++		2571392	1					
ANR	2571461	ExpressionStatement	needs_quoting = ! ( * ch == '\\0' )	734:2:16081:16113	2571392	2	True				
ANR	2571462	AssignmentExpression	needs_quoting = ! ( * ch == '\\0' )		2571392	0		=			
ANR	2571463	Identifier	needs_quoting		2571392	0					
ANR	2571464	UnaryOperationExpression	! ( * ch == '\\0' )		2571392	1					
ANR	2571465	UnaryOperator	!		2571392	0					
ANR	2571466	EqualityExpression	* ch == '\\0'		2571392	1		==			
ANR	2571467	UnaryOperationExpression	* ch		2571392	0					
ANR	2571468	UnaryOperator	*		2571392	0					
ANR	2571469	Identifier	ch		2571392	1					
ANR	2571470	PrimaryExpression	'\\0'		2571392	1					
ANR	2571471	ReturnStatement	return needs_quoting ;	736:1:16119:16139	2571392	3	True				
ANR	2571472	Identifier	needs_quoting		2571392	0					
ANR	2571473	ReturnType	static bool		2571392	1					
ANR	2571474	Identifier	identifierNeedsQuoting		2571392	2					
ANR	2571475	ParameterList	const string & str		2571392	3					
ANR	2571476	Parameter	const string & str	716:24:15700:15716	2571392	0	True				
ANR	2571477	ParameterType	const string &		2571392	0					
ANR	2571478	Identifier	str		2571392	1					
ANR	2571479	CFGEntryNode	ENTRY		2571392		True				
ANR	2571480	CFGExitNode	EXIT		2571392		True				
ANR	2571481	Symbol	str		2571392						
ANR	2571482	Symbol	isalpha		2571392						
ANR	2571483	Symbol	needs_quoting		2571392						
ANR	2571484	Symbol	isalnum		2571392						
ANR	2571485	Symbol	ch		2571392						
ANR	2571486	Symbol	str . c_str		2571392						
ANR	2571487	Symbol	* ch		2571392						
ANR	2571488	Symbol	false		2571392						
