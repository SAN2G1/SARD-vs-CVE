command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3156261	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_node_scheduler_StreamTokenizer.cpp								
ANR	3156262	Function	StreamTokenizer :: StreamTokenizer	43:0:1017:1188							
ANR	3156263	FunctionDef	StreamTokenizer :: StreamTokenizer (const char * fileName)		3156262	0					
ANR	3156264	CompoundStatement		44:0:1074:1188	3156262	0					
ANR	3156265	ExpressionStatement	"stream = fopen ( fileName , ""rt"" )"	45:1:1077:1106	3156262	0	True				
ANR	3156266	AssignmentExpression	"stream = fopen ( fileName , ""rt"" )"		3156262	0		=			
ANR	3156267	Identifier	stream		3156262	0					
ANR	3156268	CallExpression	"fopen ( fileName , ""rt"" )"		3156262	1					
ANR	3156269	Callee	fopen		3156262	0					
ANR	3156270	Identifier	fopen		3156262	0					
ANR	3156271	ArgumentList	fileName		3156262	1					
ANR	3156272	Argument	fileName		3156262	0					
ANR	3156273	Identifier	fileName		3156262	0					
ANR	3156274	Argument	"""rt"""		3156262	1					
ANR	3156275	PrimaryExpression	"""rt"""		3156262	0					
ANR	3156276	IfStatement	if ( NULL == stream )		3156262	1					
ANR	3156277	Condition	NULL == stream	46:5:1113:1124	3156262	0	True				
ANR	3156278	EqualityExpression	NULL == stream		3156262	0		==			
ANR	3156279	Identifier	NULL		3156262	0					
ANR	3156280	Identifier	stream		3156262	1					
ANR	3156281	ThrowStatement	"throw ""StreamTokenizer::StreamTokenizer, stream is NULL"" ;"	47:2:1130:1186	3156262	1	True				
ANR	3156282	PrimaryExpression	"""StreamTokenizer::StreamTokenizer, stream is NULL"""		3156262	0					
ANR	3156283	Identifier	StreamTokenizer :: StreamTokenizer		3156262	1					
ANR	3156284	ParameterList	const char * fileName		3156262	2					
ANR	3156285	Parameter	const char * fileName	43:34:1051:1070	3156262	0	True				
ANR	3156286	ParameterType	const char *		3156262	0					
ANR	3156287	Identifier	fileName		3156262	1					
ANR	3156288	CFGEntryNode	ENTRY		3156262		True				
ANR	3156289	CFGExitNode	EXIT		3156262		True				
ANR	3156290	CFGExceptionNode	EXCEPTION		3156262		True				
ANR	3156291	Symbol	fopen		3156262						
ANR	3156292	Symbol	fileName		3156262						
ANR	3156293	Symbol	NULL		3156262						
ANR	3156294	Symbol	stream		3156262						
ANR	3156295	Function	StreamTokenizer :: ~StreamTokenizer	64:0:1331:1411							
ANR	3156296	FunctionDef	StreamTokenizer :: ~StreamTokenizer ()		3156295	0					
ANR	3156297	CompoundStatement		65:0:1371:1411	3156295	0					
ANR	3156298	IfStatement	if ( NULL != stream )		3156295	0					
ANR	3156299	Condition	NULL != stream	66:5:1378:1389	3156295	0	True				
ANR	3156300	EqualityExpression	NULL != stream		3156295	0		!=			
ANR	3156301	Identifier	NULL		3156295	0					
ANR	3156302	Identifier	stream		3156295	1					
ANR	3156303	ExpressionStatement	fclose ( stream )	67:2:1395:1409	3156295	1	True				
ANR	3156304	CallExpression	fclose ( stream )		3156295	0					
ANR	3156305	Callee	fclose		3156295	0					
ANR	3156306	Identifier	fclose		3156295	0					
ANR	3156307	ArgumentList	stream		3156295	1					
ANR	3156308	Argument	stream		3156295	0					
ANR	3156309	Identifier	stream		3156295	0					
ANR	3156310	Identifier	StreamTokenizer :: ~StreamTokenizer		3156295	1					
ANR	3156311	ParameterList			3156295	2					
ANR	3156312	CFGEntryNode	ENTRY		3156295		True				
ANR	3156313	CFGExitNode	EXIT		3156295		True				
ANR	3156314	Symbol	NULL		3156295						
ANR	3156315	Symbol	stream		3156295						
ANR	3156316	Function	StreamTokenizer :: readToken	89:0:1932:2826							
ANR	3156317	FunctionDef	"StreamTokenizer :: readToken (char * tab , int max)"		3156316	0					
ANR	3156318	CompoundStatement		90:0:1983:2826	3156316	0					
ANR	3156319	IfStatement	if ( NULL == stream )		3156316	0					
ANR	3156320	Condition	NULL == stream	91:5:1990:2001	3156316	0	True				
ANR	3156321	EqualityExpression	NULL == stream		3156316	0		==			
ANR	3156322	Identifier	NULL		3156316	0					
ANR	3156323	Identifier	stream		3156316	1					
ANR	3156324	ThrowStatement	"throw ""StreamTokenizer::readToken, stream is NULL"" ;"	92:2:2007:2057	3156316	1	True				
ANR	3156325	PrimaryExpression	"""StreamTokenizer::readToken, stream is NULL"""		3156316	0					
ANR	3156326	IfStatement	if ( NULL == tab )		3156316	1					
ANR	3156327	Condition	NULL == tab	93:5:2064:2072	3156316	0	True				
ANR	3156328	EqualityExpression	NULL == tab		3156316	0		==			
ANR	3156329	Identifier	NULL		3156316	0					
ANR	3156330	Identifier	tab		3156316	1					
ANR	3156331	ThrowStatement	"throw ""StreamTokenizer::readToken, tab is NULL"" ;"	94:2:2078:2125	3156316	1	True				
ANR	3156332	PrimaryExpression	"""StreamTokenizer::readToken, tab is NULL"""		3156316	0					
ANR	3156333	IfStatement	if ( max <= 1 )		3156316	2					
ANR	3156334	Condition	max <= 1	95:5:2132:2137	3156316	0	True				
ANR	3156335	RelationalExpression	max <= 1		3156316	0		<=			
ANR	3156336	Identifier	max		3156316	0					
ANR	3156337	PrimaryExpression	1		3156316	1					
ANR	3156338	ThrowStatement	"throw ""StreamTokenizer::readToken, max too small"" ;"	96:2:2143:2192	3156316	1	True				
ANR	3156339	PrimaryExpression	"""StreamTokenizer::readToken, max too small"""		3156316	0					
ANR	3156340	IdentifierDeclStatement	int c ;	98:1:2196:2201	3156316	3	True				
ANR	3156341	IdentifierDecl	c		3156316	0					
ANR	3156342	IdentifierDeclType	int		3156316	0					
ANR	3156343	Identifier	c		3156316	1					
ANR	3156344	IdentifierDeclStatement	int i ;	99:1:2204:2209	3156316	4	True				
ANR	3156345	IdentifierDecl	i		3156316	0					
ANR	3156346	IdentifierDeclType	int		3156316	0					
ANR	3156347	Identifier	i		3156316	1					
ANR	3156348	ExpressionStatement	tab [ 0 ] = 0	102:1:2244:2252	3156316	5	True				
ANR	3156349	AssignmentExpression	tab [ 0 ] = 0		3156316	0		=			
ANR	3156350	ArrayIndexing	tab [ 0 ]		3156316	0					
ANR	3156351	Identifier	tab		3156316	0					
ANR	3156352	PrimaryExpression	0		3156316	1					
ANR	3156353	PrimaryExpression	0		3156316	1					
ANR	3156354	ExpressionStatement	c = fgetc ( stream )	105:1:2310:2325	3156316	6	True				
ANR	3156355	AssignmentExpression	c = fgetc ( stream )		3156316	0		=			
ANR	3156356	Identifier	c		3156316	0					
ANR	3156357	CallExpression	fgetc ( stream )		3156316	1					
ANR	3156358	Callee	fgetc		3156316	0					
ANR	3156359	Identifier	fgetc		3156316	0					
ANR	3156360	ArgumentList	stream		3156316	1					
ANR	3156361	Argument	stream		3156316	0					
ANR	3156362	Identifier	stream		3156316	0					
ANR	3156363	WhileStatement	while ( c == '\\t' || c == ' ' )		3156316	7					
ANR	3156364	Condition	c == '\\t' || c == ' '	106:8:2335:2351	3156316	0	True				
ANR	3156365	OrExpression	c == '\\t' || c == ' '		3156316	0		||			
ANR	3156366	EqualityExpression	c == '\\t'		3156316	0		==			
ANR	3156367	Identifier	c		3156316	0					
ANR	3156368	PrimaryExpression	'\\t'		3156316	1					
ANR	3156369	EqualityExpression	c == ' '		3156316	1		==			
ANR	3156370	Identifier	c		3156316	0					
ANR	3156371	PrimaryExpression	' '		3156316	1					
ANR	3156372	CompoundStatement		17:28:371:371	3156316	1					
ANR	3156373	ExpressionStatement	line . append ( c )	107:2:2359:2373	3156316	0	True				
ANR	3156374	CallExpression	line . append ( c )		3156316	0					
ANR	3156375	Callee	line . append		3156316	0					
ANR	3156376	MemberAccess	line . append		3156316	0					
ANR	3156377	Identifier	line		3156316	0					
ANR	3156378	Identifier	append		3156316	1					
ANR	3156379	ArgumentList	c		3156316	1					
ANR	3156380	Argument	c		3156316	0					
ANR	3156381	Identifier	c		3156316	0					
ANR	3156382	ExpressionStatement	c = fgetc ( stream )	108:2:2377:2392	3156316	1	True				
ANR	3156383	AssignmentExpression	c = fgetc ( stream )		3156316	0		=			
ANR	3156384	Identifier	c		3156316	0					
ANR	3156385	CallExpression	fgetc ( stream )		3156316	1					
ANR	3156386	Callee	fgetc		3156316	0					
ANR	3156387	Identifier	fgetc		3156316	0					
ANR	3156388	ArgumentList	stream		3156316	1					
ANR	3156389	Argument	stream		3156316	0					
ANR	3156390	Identifier	stream		3156316	0					
ANR	3156391	ExpressionStatement		109:2:2396:2396	3156316	8	True				
ANR	3156392	IfStatement	if ( c == EOF || c == '\\n' )		3156316	9					
ANR	3156393	Condition	c == EOF || c == '\\n'	112:5:2456:2472	3156316	0	True				
ANR	3156394	OrExpression	c == EOF || c == '\\n'		3156316	0		||			
ANR	3156395	EqualityExpression	c == EOF		3156316	0		==			
ANR	3156396	Identifier	c		3156316	0					
ANR	3156397	Identifier	EOF		3156316	1					
ANR	3156398	EqualityExpression	c == '\\n'		3156316	1		==			
ANR	3156399	Identifier	c		3156316	0					
ANR	3156400	PrimaryExpression	'\\n'		3156316	1					
ANR	3156401	CompoundStatement		23:25:492:492	3156316	1					
ANR	3156402	ExpressionStatement	"ungetc ( c , stream )"	113:2:2480:2496	3156316	0	True				
ANR	3156403	CallExpression	"ungetc ( c , stream )"		3156316	0					
ANR	3156404	Callee	ungetc		3156316	0					
ANR	3156405	Identifier	ungetc		3156316	0					
ANR	3156406	ArgumentList	c		3156316	1					
ANR	3156407	Argument	c		3156316	0					
ANR	3156408	Identifier	c		3156316	0					
ANR	3156409	Argument	stream		3156316	1					
ANR	3156410	Identifier	stream		3156316	0					
ANR	3156411	ReturnStatement	return 0 ;	114:2:2500:2508	3156316	1	True				
ANR	3156412	PrimaryExpression	0		3156316	0					
ANR	3156413	ExpressionStatement		115:2:2512:2512	3156316	10	True				
ANR	3156414	ExpressionStatement	i = 0	118:1:2535:2538	3156316	11	True				
ANR	3156415	AssignmentExpression	i = 0		3156316	0		=			
ANR	3156416	Identifier	i		3156316	0					
ANR	3156417	PrimaryExpression	0		3156316	1					
ANR	3156418	WhileStatement	while ( i < ( max - 1 ) && c != EOF && c != '\\t' && c != '\\n' && c != ' ' )		3156316	12					
ANR	3156419	Condition	i < ( max - 1 ) && c != EOF && c != '\\t' && c != '\\n' && c != ' '	119:8:2548:2598	3156316	0	True				
ANR	3156420	AndExpression	i < ( max - 1 ) && c != EOF && c != '\\t' && c != '\\n' && c != ' '		3156316	0		&&			
ANR	3156421	RelationalExpression	i < ( max - 1 )		3156316	0		<			
ANR	3156422	Identifier	i		3156316	0					
ANR	3156423	AdditiveExpression	max - 1		3156316	1		-			
ANR	3156424	Identifier	max		3156316	0					
ANR	3156425	PrimaryExpression	1		3156316	1					
ANR	3156426	AndExpression	c != EOF && c != '\\t' && c != '\\n' && c != ' '		3156316	1		&&			
ANR	3156427	EqualityExpression	c != EOF		3156316	0		!=			
ANR	3156428	Identifier	c		3156316	0					
ANR	3156429	Identifier	EOF		3156316	1					
ANR	3156430	AndExpression	c != '\\t' && c != '\\n' && c != ' '		3156316	1		&&			
ANR	3156431	EqualityExpression	c != '\\t'		3156316	0		!=			
ANR	3156432	Identifier	c		3156316	0					
ANR	3156433	PrimaryExpression	'\\t'		3156316	1					
ANR	3156434	AndExpression	c != '\\n' && c != ' '		3156316	1		&&			
ANR	3156435	EqualityExpression	c != '\\n'		3156316	0		!=			
ANR	3156436	Identifier	c		3156316	0					
ANR	3156437	PrimaryExpression	'\\n'		3156316	1					
ANR	3156438	EqualityExpression	c != ' '		3156316	1		!=			
ANR	3156439	Identifier	c		3156316	0					
ANR	3156440	PrimaryExpression	' '		3156316	1					
ANR	3156441	CompoundStatement		30:62:618:618	3156316	1					
ANR	3156442	ExpressionStatement	tab [ i ++ ] = c	120:2:2606:2616	3156316	0	True				
ANR	3156443	AssignmentExpression	tab [ i ++ ] = c		3156316	0		=			
ANR	3156444	ArrayIndexing	tab [ i ++ ]		3156316	0					
ANR	3156445	Identifier	tab		3156316	0					
ANR	3156446	PostIncDecOperationExpression	i ++		3156316	1					
ANR	3156447	Identifier	i		3156316	0					
ANR	3156448	IncDec	++		3156316	1					
ANR	3156449	Identifier	c		3156316	1					
ANR	3156450	ExpressionStatement	line . append ( c )	121:2:2620:2634	3156316	1	True				
ANR	3156451	CallExpression	line . append ( c )		3156316	0					
ANR	3156452	Callee	line . append		3156316	0					
ANR	3156453	MemberAccess	line . append		3156316	0					
ANR	3156454	Identifier	line		3156316	0					
ANR	3156455	Identifier	append		3156316	1					
ANR	3156456	ArgumentList	c		3156316	1					
ANR	3156457	Argument	c		3156316	0					
ANR	3156458	Identifier	c		3156316	0					
ANR	3156459	ExpressionStatement	c = fgetc ( stream )	122:2:2638:2653	3156316	2	True				
ANR	3156460	AssignmentExpression	c = fgetc ( stream )		3156316	0		=			
ANR	3156461	Identifier	c		3156316	0					
ANR	3156462	CallExpression	fgetc ( stream )		3156316	1					
ANR	3156463	Callee	fgetc		3156316	0					
ANR	3156464	Identifier	fgetc		3156316	0					
ANR	3156465	ArgumentList	stream		3156316	1					
ANR	3156466	Argument	stream		3156316	0					
ANR	3156467	Identifier	stream		3156316	0					
ANR	3156468	ExpressionStatement		123:2:2657:2657	3156316	13	True				
ANR	3156469	ExpressionStatement	tab [ i ] = 0	126:1:2693:2701	3156316	14	True				
ANR	3156470	AssignmentExpression	tab [ i ] = 0		3156316	0		=			
ANR	3156471	ArrayIndexing	tab [ i ]		3156316	0					
ANR	3156472	Identifier	tab		3156316	0					
ANR	3156473	Identifier	i		3156316	1					
ANR	3156474	PrimaryExpression	0		3156316	1					
ANR	3156475	IfStatement	if ( c != EOF )		3156316	15					
ANR	3156476	Condition	c != EOF	129:5:2779:2784	3156316	0	True				
ANR	3156477	EqualityExpression	c != EOF		3156316	0		!=			
ANR	3156478	Identifier	c		3156316	0					
ANR	3156479	Identifier	EOF		3156316	1					
ANR	3156480	CompoundStatement		40:14:804:804	3156316	1					
ANR	3156481	ExpressionStatement	"ungetc ( c , stream )"	130:2:2792:2808	3156316	0	True				
ANR	3156482	CallExpression	"ungetc ( c , stream )"		3156316	0					
ANR	3156483	Callee	ungetc		3156316	0					
ANR	3156484	Identifier	ungetc		3156316	0					
ANR	3156485	ArgumentList	c		3156316	1					
ANR	3156486	Argument	c		3156316	0					
ANR	3156487	Identifier	c		3156316	0					
ANR	3156488	Argument	stream		3156316	1					
ANR	3156489	Identifier	stream		3156316	0					
ANR	3156490	ExpressionStatement		131:2:2812:2812	3156316	16	True				
ANR	3156491	ReturnStatement	return 1 ;	133:1:2816:2824	3156316	17	True				
ANR	3156492	PrimaryExpression	1		3156316	0					
ANR	3156493	ReturnType	int		3156316	1					
ANR	3156494	Identifier	StreamTokenizer :: readToken		3156316	2					
ANR	3156495	ParameterList	"char * tab , int max"		3156316	3					
ANR	3156496	Parameter	char * tab	89:31:1963:1971	3156316	0	True				
ANR	3156497	ParameterType	char *		3156316	0					
ANR	3156498	Identifier	tab		3156316	1					
ANR	3156499	Parameter	int max	89:42:1974:1980	3156316	1	True				
ANR	3156500	ParameterType	int		3156316	0					
ANR	3156501	Identifier	max		3156316	1					
ANR	3156502	CFGEntryNode	ENTRY		3156316		True				
ANR	3156503	CFGExitNode	EXIT		3156316		True				
ANR	3156504	CFGExceptionNode	EXCEPTION		3156316		True				
ANR	3156505	CFGExceptionNode	EXCEPTION		3156316		True				
ANR	3156506	CFGExceptionNode	EXCEPTION		3156316		True				
ANR	3156507	CFGExceptionNode	EXCEPTION		3156316		True				
ANR	3156508	CFGExceptionNode	EXCEPTION		3156316		True				
ANR	3156509	Symbol	NULL		3156316						
ANR	3156510	Symbol	c		3156316						
ANR	3156511	Symbol	* i		3156316						
ANR	3156512	Symbol	tab		3156316						
ANR	3156513	Symbol	max		3156316						
ANR	3156514	Symbol	stream		3156316						
ANR	3156515	Symbol	line		3156316						
ANR	3156516	Symbol	i		3156316						
ANR	3156517	Symbol	EOF		3156316						
ANR	3156518	Symbol	fgetc		3156316						
ANR	3156519	Symbol	* tab		3156316						
ANR	3156520	Function	StreamTokenizer :: skipLine	152:0:3120:3362							
ANR	3156521	FunctionDef	StreamTokenizer :: skipLine ()		3156520	0					
ANR	3156522	CompoundStatement		153:0:3157:3362	3156520	0					
ANR	3156523	IfStatement	if ( NULL == stream )		3156520	0					
ANR	3156524	Condition	NULL == stream	154:5:3164:3175	3156520	0	True				
ANR	3156525	EqualityExpression	NULL == stream		3156520	0		==			
ANR	3156526	Identifier	NULL		3156520	0					
ANR	3156527	Identifier	stream		3156520	1					
ANR	3156528	ThrowStatement	"throw ""StreamTokenizer::skipLine, stream is NULL"" ;"	155:2:3181:3230	3156520	1	True				
ANR	3156529	PrimaryExpression	"""StreamTokenizer::skipLine, stream is NULL"""		3156520	0					
ANR	3156530	IdentifierDeclStatement	int c ;	157:1:3234:3239	3156520	1	True				
ANR	3156531	IdentifierDecl	c		3156520	0					
ANR	3156532	IdentifierDeclType	int		3156520	0					
ANR	3156533	Identifier	c		3156520	1					
ANR	3156534	ExpressionStatement	c = fgetc ( stream )	158:1:3242:3257	3156520	2	True				
ANR	3156535	AssignmentExpression	c = fgetc ( stream )		3156520	0		=			
ANR	3156536	Identifier	c		3156520	0					
ANR	3156537	CallExpression	fgetc ( stream )		3156520	1					
ANR	3156538	Callee	fgetc		3156520	0					
ANR	3156539	Identifier	fgetc		3156520	0					
ANR	3156540	ArgumentList	stream		3156520	1					
ANR	3156541	Argument	stream		3156520	0					
ANR	3156542	Identifier	stream		3156520	0					
ANR	3156543	WhileStatement	while ( c != EOF && c != '\\n' )		3156520	3					
ANR	3156544	Condition	c != EOF && c != '\\n'	159:8:3267:3283	3156520	0	True				
ANR	3156545	AndExpression	c != EOF && c != '\\n'		3156520	0		&&			
ANR	3156546	EqualityExpression	c != EOF		3156520	0		!=			
ANR	3156547	Identifier	c		3156520	0					
ANR	3156548	Identifier	EOF		3156520	1					
ANR	3156549	EqualityExpression	c != '\\n'		3156520	1		!=			
ANR	3156550	Identifier	c		3156520	0					
ANR	3156551	PrimaryExpression	'\\n'		3156520	1					
ANR	3156552	CompoundStatement		7:28:129:129	3156520	1					
ANR	3156553	ExpressionStatement	line . append ( c )	160:2:3291:3305	3156520	0	True				
ANR	3156554	CallExpression	line . append ( c )		3156520	0					
ANR	3156555	Callee	line . append		3156520	0					
ANR	3156556	MemberAccess	line . append		3156520	0					
ANR	3156557	Identifier	line		3156520	0					
ANR	3156558	Identifier	append		3156520	1					
ANR	3156559	ArgumentList	c		3156520	1					
ANR	3156560	Argument	c		3156520	0					
ANR	3156561	Identifier	c		3156520	0					
ANR	3156562	ExpressionStatement	c = fgetc ( stream )	161:2:3309:3324	3156520	1	True				
ANR	3156563	AssignmentExpression	c = fgetc ( stream )		3156520	0		=			
ANR	3156564	Identifier	c		3156520	0					
ANR	3156565	CallExpression	fgetc ( stream )		3156520	1					
ANR	3156566	Callee	fgetc		3156520	0					
ANR	3156567	Identifier	fgetc		3156520	0					
ANR	3156568	ArgumentList	stream		3156520	1					
ANR	3156569	Argument	stream		3156520	0					
ANR	3156570	Identifier	stream		3156520	0					
ANR	3156571	ExpressionStatement		162:2:3328:3328	3156520	4	True				
ANR	3156572	IfStatement	if ( c != EOF )		3156520	5					
ANR	3156573	Condition	c != EOF	163:5:3335:3340	3156520	0	True				
ANR	3156574	EqualityExpression	c != EOF		3156520	0		!=			
ANR	3156575	Identifier	c		3156520	0					
ANR	3156576	Identifier	EOF		3156520	1					
ANR	3156577	ExpressionStatement	line . append ( c )	164:2:3346:3360	3156520	1	True				
ANR	3156578	CallExpression	line . append ( c )		3156520	0					
ANR	3156579	Callee	line . append		3156520	0					
ANR	3156580	MemberAccess	line . append		3156520	0					
ANR	3156581	Identifier	line		3156520	0					
ANR	3156582	Identifier	append		3156520	1					
ANR	3156583	ArgumentList	c		3156520	1					
ANR	3156584	Argument	c		3156520	0					
ANR	3156585	Identifier	c		3156520	0					
ANR	3156586	ReturnType	void		3156520	1					
ANR	3156587	Identifier	StreamTokenizer :: skipLine		3156520	2					
ANR	3156588	ParameterList			3156520	3					
ANR	3156589	CFGEntryNode	ENTRY		3156520		True				
ANR	3156590	CFGExitNode	EXIT		3156520		True				
ANR	3156591	CFGExceptionNode	EXCEPTION		3156520		True				
ANR	3156592	Symbol	NULL		3156520						
ANR	3156593	Symbol	c		3156520						
ANR	3156594	Symbol	stream		3156520						
ANR	3156595	Symbol	line		3156520						
ANR	3156596	Symbol	EOF		3156520						
ANR	3156597	Symbol	fgetc		3156520						
ANR	3156598	Function	StreamTokenizer :: isEOF	182:0:3559:3977							
ANR	3156599	FunctionDef	StreamTokenizer :: isEOF ()		3156598	0					
ANR	3156600	CompoundStatement		183:0:3593:3977	3156598	0					
ANR	3156601	IfStatement	if ( NULL == stream )		3156598	0					
ANR	3156602	Condition	NULL == stream	184:5:3600:3611	3156598	0	True				
ANR	3156603	EqualityExpression	NULL == stream		3156598	0		==			
ANR	3156604	Identifier	NULL		3156598	0					
ANR	3156605	Identifier	stream		3156598	1					
ANR	3156606	ThrowStatement	"throw ""StreamTokenizer::isEOF, stream is NULL"" ;"	185:2:3617:3663	3156598	1	True				
ANR	3156607	PrimaryExpression	"""StreamTokenizer::isEOF, stream is NULL"""		3156598	0					
ANR	3156608	IdentifierDeclStatement	int c = fgetc ( stream ) ;	187:1:3667:3686	3156598	1	True				
ANR	3156609	IdentifierDecl	c = fgetc ( stream )		3156598	0					
ANR	3156610	IdentifierDeclType	int		3156598	0					
ANR	3156611	Identifier	c		3156598	1					
ANR	3156612	AssignmentExpression	c = fgetc ( stream )		3156598	2		=			
ANR	3156613	Identifier	c		3156598	0					
ANR	3156614	CallExpression	fgetc ( stream )		3156598	1					
ANR	3156615	Callee	fgetc		3156598	0					
ANR	3156616	Identifier	fgetc		3156598	0					
ANR	3156617	ArgumentList	stream		3156598	1					
ANR	3156618	Argument	stream		3156598	0					
ANR	3156619	Identifier	stream		3156598	0					
ANR	3156620	IfStatement	if ( EOF == c )		3156598	2					
ANR	3156621	Condition	EOF == c	188:5:3811:3816	3156598	0	True				
ANR	3156622	EqualityExpression	EOF == c		3156598	0		==			
ANR	3156623	Identifier	EOF		3156598	0					
ANR	3156624	Identifier	c		3156598	1					
ANR	3156625	CompoundStatement		6:14:226:226	3156598	1					
ANR	3156626	IfStatement	if ( feof ( stream ) )		3156598	0					
ANR	3156627	Condition	feof ( stream )	189:6:3828:3839	3156598	0	True				
ANR	3156628	CallExpression	feof ( stream )		3156598	0					
ANR	3156629	Callee	feof		3156598	0					
ANR	3156630	Identifier	feof		3156598	0					
ANR	3156631	ArgumentList	stream		3156598	1					
ANR	3156632	Argument	stream		3156598	0					
ANR	3156633	Identifier	stream		3156598	0					
ANR	3156634	ReturnStatement	return true ;	190:3:3846:3857	3156598	1	True				
ANR	3156635	Identifier	true		3156598	0					
ANR	3156636	ElseStatement	else		3156598	0					
ANR	3156637	ThrowStatement	"throw ""StreamTokenizer::isEOF, unable to read the file"" ;"	192:3:3869:3924	3156598	0	True				
ANR	3156638	PrimaryExpression	"""StreamTokenizer::isEOF, unable to read the file"""		3156598	0					
ANR	3156639	ElseStatement	else		3156598	0					
ANR	3156640	CompoundStatement		12:6:341:341	3156598	0					
ANR	3156641	ExpressionStatement	"ungetc ( c , stream )"	195:2:3939:3955	3156598	0	True				
ANR	3156642	CallExpression	"ungetc ( c , stream )"		3156598	0					
ANR	3156643	Callee	ungetc		3156598	0					
ANR	3156644	Identifier	ungetc		3156598	0					
ANR	3156645	ArgumentList	c		3156598	1					
ANR	3156646	Argument	c		3156598	0					
ANR	3156647	Identifier	c		3156598	0					
ANR	3156648	Argument	stream		3156598	1					
ANR	3156649	Identifier	stream		3156598	0					
ANR	3156650	ReturnStatement	return false ;	196:2:3959:3971	3156598	1	True				
ANR	3156651	Identifier	false		3156598	0					
ANR	3156652	ExpressionStatement		197:2:3975:3975	3156598	3	True				
ANR	3156653	ReturnType	bool		3156598	1					
ANR	3156654	Identifier	StreamTokenizer :: isEOF		3156598	2					
ANR	3156655	ParameterList			3156598	3					
ANR	3156656	CFGEntryNode	ENTRY		3156598		True				
ANR	3156657	CFGExitNode	EXIT		3156598		True				
ANR	3156658	CFGExceptionNode	EXCEPTION		3156598		True				
ANR	3156659	CFGExceptionNode	EXCEPTION		3156598		True				
ANR	3156660	CFGExceptionNode	EXCEPTION		3156598		True				
ANR	3156661	Symbol	NULL		3156598						
ANR	3156662	Symbol	c		3156598						
ANR	3156663	Symbol	stream		3156598						
ANR	3156664	Symbol	true		3156598						
ANR	3156665	Symbol	false		3156598						
ANR	3156666	Symbol	feof		3156598						
ANR	3156667	Symbol	EOF		3156598						
ANR	3156668	Symbol	fgetc		3156598						
ANR	3156669	Function	StreamTokenizer :: saveRecentLine	217:0:4318:4449							
ANR	3156670	FunctionDef	StreamTokenizer :: saveRecentLine (FILE * stream)		3156669	0					
ANR	3156671	CompoundStatement		218:0:4369:4449	3156669	0					
ANR	3156672	ForStatement	for ( int i = 0 ; i < line . getNumElem ( ) ; i ++ )		3156669	0					
ANR	3156673	ForInit	int i = 0 ;	219:6:4377:4384	3156669	0	True				
ANR	3156674	IdentifierDeclStatement	int i = 0 ;		3156669	0					
ANR	3156675	IdentifierDecl	i = 0		3156669	0					
ANR	3156676	IdentifierDeclType	int		3156669	0					
ANR	3156677	Identifier	i		3156669	1					
ANR	3156678	AssignmentExpression	i = 0		3156669	2		=			
ANR	3156679	Identifier	i		3156669	0					
ANR	3156680	PrimaryExpression	0		3156669	1					
ANR	3156681	Condition	i < line . getNumElem ( )	219:15:4386:4404	3156669	1	True				
ANR	3156682	RelationalExpression	i < line . getNumElem ( )		3156669	0		<			
ANR	3156683	Identifier	i		3156669	0					
ANR	3156684	CallExpression	line . getNumElem ( )		3156669	1					
ANR	3156685	Callee	line . getNumElem		3156669	0					
ANR	3156686	MemberAccess	line . getNumElem		3156669	0					
ANR	3156687	Identifier	line		3156669	0					
ANR	3156688	Identifier	getNumElem		3156669	1					
ANR	3156689	ArgumentList			3156669	1					
ANR	3156690	PostIncDecOperationExpression	i ++	219:36:4407:4409	3156669	2	True				
ANR	3156691	Identifier	i		3156669	0					
ANR	3156692	IncDec	++		3156669	1					
ANR	3156693	ExpressionStatement	"fputc ( line . getElem ( i ) , stream )"	220:2:4415:4447	3156669	3	True				
ANR	3156694	CallExpression	"fputc ( line . getElem ( i ) , stream )"		3156669	0					
ANR	3156695	Callee	fputc		3156669	0					
ANR	3156696	Identifier	fputc		3156669	0					
ANR	3156697	ArgumentList	line . getElem ( i )		3156669	1					
ANR	3156698	Argument	line . getElem ( i )		3156669	0					
ANR	3156699	CallExpression	line . getElem ( i )		3156669	0					
ANR	3156700	Callee	line . getElem		3156669	0					
ANR	3156701	MemberAccess	line . getElem		3156669	0					
ANR	3156702	Identifier	line		3156669	0					
ANR	3156703	Identifier	getElem		3156669	1					
ANR	3156704	ArgumentList	i		3156669	1					
ANR	3156705	Argument	i		3156669	0					
ANR	3156706	Identifier	i		3156669	0					
ANR	3156707	Argument	stream		3156669	1					
ANR	3156708	Identifier	stream		3156669	0					
ANR	3156709	ReturnType	void		3156669	1					
ANR	3156710	Identifier	StreamTokenizer :: saveRecentLine		3156669	2					
ANR	3156711	ParameterList	FILE * stream		3156669	3					
ANR	3156712	Parameter	FILE * stream	217:37:4355:4366	3156669	0	True				
ANR	3156713	ParameterType	FILE *		3156669	0					
ANR	3156714	Identifier	stream		3156669	1					
ANR	3156715	CFGEntryNode	ENTRY		3156669		True				
ANR	3156716	CFGExitNode	EXIT		3156669		True				
ANR	3156717	Symbol	stream		3156669						
ANR	3156718	Symbol	line . getNumElem		3156669						
ANR	3156719	Symbol	line		3156669						
ANR	3156720	Symbol	i		3156669						
ANR	3156721	Symbol	line . getElem		3156669						
ANR	3156722	Function	StreamTokenizer :: resetRecentLine	237:0:4621:4682							
ANR	3156723	FunctionDef	StreamTokenizer :: resetRecentLine ()		3156722	0					
ANR	3156724	CompoundStatement		238:0:4665:4682	3156722	0					
ANR	3156725	ExpressionStatement	line . reset ( )	239:1:4668:4680	3156722	0	True				
ANR	3156726	CallExpression	line . reset ( )		3156722	0					
ANR	3156727	Callee	line . reset		3156722	0					
ANR	3156728	MemberAccess	line . reset		3156722	0					
ANR	3156729	Identifier	line		3156722	0					
ANR	3156730	Identifier	reset		3156722	1					
ANR	3156731	ArgumentList			3156722	1					
ANR	3156732	ReturnType	void		3156722	1					
ANR	3156733	Identifier	StreamTokenizer :: resetRecentLine		3156722	2					
ANR	3156734	ParameterList			3156722	3					
ANR	3156735	CFGEntryNode	ENTRY		3156722		True				
ANR	3156736	CFGExitNode	EXIT		3156722		True				
ANR	3156737	Symbol	line		3156722						
ANR	3156738	Function	StreamTokenizer_test	256:0:4848:5331							
ANR	3156739	FunctionDef	StreamTokenizer_test ()		3156738	0					
ANR	3156740	CompoundStatement		257:0:4880:5331	3156738	0					
ANR	3156741	IdentifierDeclStatement	char tab [ 10 ] ;	258:1:4883:4895	3156738	0	True				
ANR	3156742	IdentifierDecl	tab [ 10 ]		3156738	0					
ANR	3156743	IdentifierDeclType	char [ 10 ]		3156738	0					
ANR	3156744	Identifier	tab		3156738	1					
ANR	3156745	PrimaryExpression	10		3156738	2					
ANR	3156746	IdentifierDeclStatement	int res ;	259:1:4898:4905	3156738	1	True				
ANR	3156747	IdentifierDecl	res		3156738	0					
ANR	3156748	IdentifierDeclType	int		3156738	0					
ANR	3156749	Identifier	res		3156738	1					
ANR	3156750	IdentifierDeclStatement	int line = 0 ;	260:1:4908:4919	3156738	2	True				
ANR	3156751	IdentifierDecl	line = 0		3156738	0					
ANR	3156752	IdentifierDeclType	int		3156738	0					
ANR	3156753	Identifier	line		3156738	1					
ANR	3156754	AssignmentExpression	line = 0		3156738	2		=			
ANR	3156755	Identifier	line		3156738	0					
ANR	3156756	PrimaryExpression	0		3156738	1					
ANR	3156757	IdentifierDeclStatement	"StreamTokenizer * st = new StreamTokenizer ( ""tokenizerTest.txt"" ) ;"	262:1:4923:4985	3156738	3	True				
ANR	3156758	IdentifierDecl	"* st = new StreamTokenizer ( ""tokenizerTest.txt"" )"		3156738	0					
ANR	3156759	IdentifierDeclType	StreamTokenizer *		3156738	0					
ANR	3156760	Identifier	st		3156738	1					
ANR	3156761	AssignmentExpression	"* st = new StreamTokenizer ( ""tokenizerTest.txt"" )"		3156738	2		=			
ANR	3156762	Identifier	st		3156738	0					
ANR	3156763	PrimaryExpression	"""tokenizerTest.txt"""		3156738	1					
ANR	3156764	WhileStatement	while ( ! st -> isEOF ( ) )		3156738	4					
ANR	3156765	Condition	! st -> isEOF ( )	263:8:4995:5007	3156738	0	True				
ANR	3156766	UnaryOperationExpression	! st -> isEOF ( )		3156738	0					
ANR	3156767	UnaryOperator	!		3156738	0					
ANR	3156768	CallExpression	st -> isEOF ( )		3156738	1					
ANR	3156769	Callee	st -> isEOF		3156738	0					
ANR	3156770	PtrMemberAccess	st -> isEOF		3156738	0					
ANR	3156771	Identifier	st		3156738	0					
ANR	3156772	Identifier	isEOF		3156738	1					
ANR	3156773	ArgumentList			3156738	1					
ANR	3156774	CompoundStatement		7:24:130:130	3156738	1					
ANR	3156775	ExpressionStatement	line ++	264:2:5015:5022	3156738	0	True				
ANR	3156776	PostIncDecOperationExpression	line ++		3156738	0					
ANR	3156777	Identifier	line		3156738	0					
ANR	3156778	IncDec	++		3156738	1					
ANR	3156779	ExpressionStatement	"printf ( ""LINE %d\\n"" , line )"	265:2:5026:5050	3156738	1	True				
ANR	3156780	CallExpression	"printf ( ""LINE %d\\n"" , line )"		3156738	0					
ANR	3156781	Callee	printf		3156738	0					
ANR	3156782	Identifier	printf		3156738	0					
ANR	3156783	ArgumentList	"""LINE %d\\n"""		3156738	1					
ANR	3156784	Argument	"""LINE %d\\n"""		3156738	0					
ANR	3156785	PrimaryExpression	"""LINE %d\\n"""		3156738	0					
ANR	3156786	Argument	line		3156738	1					
ANR	3156787	Identifier	line		3156738	0					
ANR	3156788	ExpressionStatement	"res = st -> readToken ( tab , 10 )"	266:2:5054:5081	3156738	2	True				
ANR	3156789	AssignmentExpression	"res = st -> readToken ( tab , 10 )"		3156738	0		=			
ANR	3156790	Identifier	res		3156738	0					
ANR	3156791	CallExpression	"st -> readToken ( tab , 10 )"		3156738	1					
ANR	3156792	Callee	st -> readToken		3156738	0					
ANR	3156793	PtrMemberAccess	st -> readToken		3156738	0					
ANR	3156794	Identifier	st		3156738	0					
ANR	3156795	Identifier	readToken		3156738	1					
ANR	3156796	ArgumentList	tab		3156738	1					
ANR	3156797	Argument	tab		3156738	0					
ANR	3156798	Identifier	tab		3156738	0					
ANR	3156799	Argument	10		3156738	1					
ANR	3156800	PrimaryExpression	10		3156738	0					
ANR	3156801	ExpressionStatement	"printf ( ""%d  %s\\n"" , res , tab )"	267:2:5085:5113	3156738	3	True				
ANR	3156802	CallExpression	"printf ( ""%d  %s\\n"" , res , tab )"		3156738	0					
ANR	3156803	Callee	printf		3156738	0					
ANR	3156804	Identifier	printf		3156738	0					
ANR	3156805	ArgumentList	"""%d  %s\\n"""		3156738	1					
ANR	3156806	Argument	"""%d  %s\\n"""		3156738	0					
ANR	3156807	PrimaryExpression	"""%d  %s\\n"""		3156738	0					
ANR	3156808	Argument	res		3156738	1					
ANR	3156809	Identifier	res		3156738	0					
ANR	3156810	Argument	tab		3156738	2					
ANR	3156811	Identifier	tab		3156738	0					
ANR	3156812	ExpressionStatement	"res = st -> readToken ( tab , 10 )"	268:2:5117:5144	3156738	4	True				
ANR	3156813	AssignmentExpression	"res = st -> readToken ( tab , 10 )"		3156738	0		=			
ANR	3156814	Identifier	res		3156738	0					
ANR	3156815	CallExpression	"st -> readToken ( tab , 10 )"		3156738	1					
ANR	3156816	Callee	st -> readToken		3156738	0					
ANR	3156817	PtrMemberAccess	st -> readToken		3156738	0					
ANR	3156818	Identifier	st		3156738	0					
ANR	3156819	Identifier	readToken		3156738	1					
ANR	3156820	ArgumentList	tab		3156738	1					
ANR	3156821	Argument	tab		3156738	0					
ANR	3156822	Identifier	tab		3156738	0					
ANR	3156823	Argument	10		3156738	1					
ANR	3156824	PrimaryExpression	10		3156738	0					
ANR	3156825	ExpressionStatement	"printf ( ""%d  %s\\n"" , res , tab )"	269:2:5148:5176	3156738	5	True				
ANR	3156826	CallExpression	"printf ( ""%d  %s\\n"" , res , tab )"		3156738	0					
ANR	3156827	Callee	printf		3156738	0					
ANR	3156828	Identifier	printf		3156738	0					
ANR	3156829	ArgumentList	"""%d  %s\\n"""		3156738	1					
ANR	3156830	Argument	"""%d  %s\\n"""		3156738	0					
ANR	3156831	PrimaryExpression	"""%d  %s\\n"""		3156738	0					
ANR	3156832	Argument	res		3156738	1					
ANR	3156833	Identifier	res		3156738	0					
ANR	3156834	Argument	tab		3156738	2					
ANR	3156835	Identifier	tab		3156738	0					
ANR	3156836	ExpressionStatement	st -> skipLine ( )	270:2:5180:5194	3156738	6	True				
ANR	3156837	CallExpression	st -> skipLine ( )		3156738	0					
ANR	3156838	Callee	st -> skipLine		3156738	0					
ANR	3156839	PtrMemberAccess	st -> skipLine		3156738	0					
ANR	3156840	Identifier	st		3156738	0					
ANR	3156841	Identifier	skipLine		3156738	1					
ANR	3156842	ArgumentList			3156738	1					
ANR	3156843	ExpressionStatement	st -> saveRecentLine ( stderr )	271:2:5198:5226	3156738	7	True				
ANR	3156844	CallExpression	st -> saveRecentLine ( stderr )		3156738	0					
ANR	3156845	Callee	st -> saveRecentLine		3156738	0					
ANR	3156846	PtrMemberAccess	st -> saveRecentLine		3156738	0					
ANR	3156847	Identifier	st		3156738	0					
ANR	3156848	Identifier	saveRecentLine		3156738	1					
ANR	3156849	ArgumentList	stderr		3156738	1					
ANR	3156850	Argument	stderr		3156738	0					
ANR	3156851	Identifier	stderr		3156738	0					
ANR	3156852	ExpressionStatement	st -> resetRecentLine ( )	272:2:5230:5251	3156738	8	True				
ANR	3156853	CallExpression	st -> resetRecentLine ( )		3156738	0					
ANR	3156854	Callee	st -> resetRecentLine		3156738	0					
ANR	3156855	PtrMemberAccess	st -> resetRecentLine		3156738	0					
ANR	3156856	Identifier	st		3156738	0					
ANR	3156857	Identifier	resetRecentLine		3156738	1					
ANR	3156858	ArgumentList			3156738	1					
ANR	3156859	ExpressionStatement	"fprintf ( stderr , ""<END>"" )"	273:2:5255:5278	3156738	9	True				
ANR	3156860	CallExpression	"fprintf ( stderr , ""<END>"" )"		3156738	0					
ANR	3156861	Callee	fprintf		3156738	0					
ANR	3156862	Identifier	fprintf		3156738	0					
ANR	3156863	ArgumentList	stderr		3156738	1					
ANR	3156864	Argument	stderr		3156738	0					
ANR	3156865	Identifier	stderr		3156738	0					
ANR	3156866	Argument	"""<END>"""		3156738	1					
ANR	3156867	PrimaryExpression	"""<END>"""		3156738	0					
ANR	3156868	ExpressionStatement		274:2:5282:5282	3156738	5	True				
ANR	3156869	Statement	delete	275:1:5285:5290	3156738	6	True				
ANR	3156870	ExpressionStatement	st	275:8:5292:5294	3156738	7	True				
ANR	3156871	Identifier	st		3156738	0					
ANR	3156872	ExpressionStatement	"printf ( ""read %d lines\\n"" , line )"	276:1:5297:5329	3156738	8	True				
ANR	3156873	CallExpression	"printf ( ""read %d lines\\n"" , line )"		3156738	0					
ANR	3156874	Callee	printf		3156738	0					
ANR	3156875	Identifier	printf		3156738	0					
ANR	3156876	ArgumentList	"""read %d lines\\n"""		3156738	1					
ANR	3156877	Argument	"""read %d lines\\n"""		3156738	0					
ANR	3156878	PrimaryExpression	"""read %d lines\\n"""		3156738	0					
ANR	3156879	Argument	line		3156738	1					
ANR	3156880	Identifier	line		3156738	0					
ANR	3156881	ReturnType	void		3156738	1					
ANR	3156882	Identifier	StreamTokenizer_test		3156738	2					
ANR	3156883	ParameterList			3156738	3					
ANR	3156884	CFGEntryNode	ENTRY		3156738		True				
ANR	3156885	CFGExitNode	EXIT		3156738		True				
ANR	3156886	Symbol	res		3156738						
ANR	3156887	Symbol	st		3156738						
ANR	3156888	Symbol	st -> isEOF		3156738						
ANR	3156889	Symbol	st -> readToken		3156738						
ANR	3156890	Symbol	tab		3156738						
ANR	3156891	Symbol	* st		3156738						
ANR	3156892	Symbol	line		3156738						
ANR	3156893	Symbol	stderr		3156738						
