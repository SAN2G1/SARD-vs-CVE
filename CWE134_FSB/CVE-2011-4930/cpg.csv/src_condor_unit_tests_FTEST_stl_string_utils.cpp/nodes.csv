command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4291816	File	data/converged/CVE-2011-4930_htcondor/src_condor_unit_tests_FTEST_stl_string_utils.cpp								
ANR	4291817	DeclStmt									
ANR	4291818	Decl							bool	bool ( void )	test_sprintf_string
ANR	4291819	DeclStmt									
ANR	4291820	Decl							bool	bool ( void )	test_sprintf_MyString
ANR	4291821	DeclStmt									
ANR	4291822	Decl							bool	bool ( void )	test_sprintf_cat_string
ANR	4291823	DeclStmt									
ANR	4291824	Decl							bool	bool ( void )	test_sprintf_cat_MyString
ANR	4291825	DeclStmt									
ANR	4291826	Decl							bool	bool ( void )	test_comparison_ops_lhs_string
ANR	4291827	DeclStmt									
ANR	4291828	Decl							bool	bool ( void )	test_comparison_ops_lhs_MyString
ANR	4291829	DeclStmt									
ANR	4291830	Decl							bool	bool ( void )	test_lower_case_empty
ANR	4291831	DeclStmt									
ANR	4291832	Decl							bool	bool ( void )	test_lower_case_non_empty
ANR	4291833	DeclStmt									
ANR	4291834	Decl							bool	bool ( void )	test_upper_case_empty
ANR	4291835	DeclStmt									
ANR	4291836	Decl							bool	bool ( void )	test_upper_case_non_empty
ANR	4291837	DeclStmt									
ANR	4291838	Decl							bool	bool ( void )	test_chomp_new_line_end
ANR	4291839	DeclStmt									
ANR	4291840	Decl							bool	bool ( void )	test_chomp_crlf_end
ANR	4291841	DeclStmt									
ANR	4291842	Decl							bool	bool ( void )	test_chomp_new_line_beginning
ANR	4291843	DeclStmt									
ANR	4291844	Decl							bool	bool ( void )	test_chomp_return_false
ANR	4291845	DeclStmt									
ANR	4291846	Decl							bool	bool ( void )	test_chomp_return_true
ANR	4291847	DeclStmt									
ANR	4291848	Decl							bool	bool ( void )	test_trim_beginning_and_end
ANR	4291849	DeclStmt									
ANR	4291850	Decl							bool	bool ( void )	test_trim_end
ANR	4291851	DeclStmt									
ANR	4291852	Decl							bool	bool ( void )	test_trim_none
ANR	4291853	DeclStmt									
ANR	4291854	Decl							bool	bool ( void )	test_trim_beginning
ANR	4291855	DeclStmt									
ANR	4291856	Decl							bool	bool ( void )	test_trim_empty
ANR	4291857	DeclStmt									
ANR	4291858	Decl							bool	bool ( void )	tokenize_null
ANR	4291859	DeclStmt									
ANR	4291860	Decl							bool	bool ( void )	tokenize_skip
ANR	4291861	DeclStmt									
ANR	4291862	Decl							bool	bool ( void )	tokenize_multiple_calls
ANR	4291863	DeclStmt									
ANR	4291864	Decl							bool	bool ( void )	tokenize_end
ANR	4291865	DeclStmt									
ANR	4291866	Decl							bool	bool ( void )	tokenize_empty
ANR	4291867	DeclStmt									
ANR	4291868	Decl							bool	bool ( void )	tokenize_empty_delimiter
ANR	4291869	Function	FTEST_stl_string_utils	61:0:2140:3777							
ANR	4291870	FunctionDef	FTEST_stl_string_utils ()		4291869	0					
ANR	4291871	CompoundStatement		61:34:2174:3777	4291869	0					
ANR	4291872	ExpressionStatement	"emit_function ( ""STL string utils"" )"	63:1:2222:2255	4291869	0	True				
ANR	4291873	CallExpression	"emit_function ( ""STL string utils"" )"		4291869	0					
ANR	4291874	Callee	emit_function		4291869	0					
ANR	4291875	Identifier	emit_function		4291869	0					
ANR	4291876	ArgumentList	"""STL string utils"""		4291869	1					
ANR	4291877	Argument	"""STL string utils"""		4291869	0					
ANR	4291878	PrimaryExpression	"""STL string utils"""		4291869	0					
ANR	4291879	ExpressionStatement	"emit_comment ( ""Package of functions/operators to facilitate adoption of std::string"" )"	64:1:2258:2342	4291869	1	True				
ANR	4291880	CallExpression	"emit_comment ( ""Package of functions/operators to facilitate adoption of std::string"" )"		4291869	0					
ANR	4291881	Callee	emit_comment		4291869	0					
ANR	4291882	Identifier	emit_comment		4291869	0					
ANR	4291883	ArgumentList	"""Package of functions/operators to facilitate adoption of std::string"""		4291869	1					
ANR	4291884	Argument	"""Package of functions/operators to facilitate adoption of std::string"""		4291869	0					
ANR	4291885	PrimaryExpression	"""Package of functions/operators to facilitate adoption of std::string"""		4291869	0					
ANR	4291886	IdentifierDeclStatement	FunctionDriver driver ;	67:1:2399:2420	4291869	2	True				
ANR	4291887	IdentifierDecl	driver		4291869	0					
ANR	4291888	IdentifierDeclType	FunctionDriver		4291869	0					
ANR	4291889	Identifier	driver		4291869	1					
ANR	4291890	ExpressionStatement	driver . register_function ( test_comparison_ops_lhs_string )	68:1:2423:2479	4291869	3	True				
ANR	4291891	CallExpression	driver . register_function ( test_comparison_ops_lhs_string )		4291869	0					
ANR	4291892	Callee	driver . register_function		4291869	0					
ANR	4291893	MemberAccess	driver . register_function		4291869	0					
ANR	4291894	Identifier	driver		4291869	0					
ANR	4291895	Identifier	register_function		4291869	1					
ANR	4291896	ArgumentList	test_comparison_ops_lhs_string		4291869	1					
ANR	4291897	Argument	test_comparison_ops_lhs_string		4291869	0					
ANR	4291898	Identifier	test_comparison_ops_lhs_string		4291869	0					
ANR	4291899	ExpressionStatement	driver . register_function ( test_comparison_ops_lhs_MyString )	69:1:2482:2540	4291869	4	True				
ANR	4291900	CallExpression	driver . register_function ( test_comparison_ops_lhs_MyString )		4291869	0					
ANR	4291901	Callee	driver . register_function		4291869	0					
ANR	4291902	MemberAccess	driver . register_function		4291869	0					
ANR	4291903	Identifier	driver		4291869	0					
ANR	4291904	Identifier	register_function		4291869	1					
ANR	4291905	ArgumentList	test_comparison_ops_lhs_MyString		4291869	1					
ANR	4291906	Argument	test_comparison_ops_lhs_MyString		4291869	0					
ANR	4291907	Identifier	test_comparison_ops_lhs_MyString		4291869	0					
ANR	4291908	ExpressionStatement	driver . register_function ( test_sprintf_string )	70:1:2543:2588	4291869	5	True				
ANR	4291909	CallExpression	driver . register_function ( test_sprintf_string )		4291869	0					
ANR	4291910	Callee	driver . register_function		4291869	0					
ANR	4291911	MemberAccess	driver . register_function		4291869	0					
ANR	4291912	Identifier	driver		4291869	0					
ANR	4291913	Identifier	register_function		4291869	1					
ANR	4291914	ArgumentList	test_sprintf_string		4291869	1					
ANR	4291915	Argument	test_sprintf_string		4291869	0					
ANR	4291916	Identifier	test_sprintf_string		4291869	0					
ANR	4291917	ExpressionStatement	driver . register_function ( test_sprintf_MyString )	71:1:2591:2638	4291869	6	True				
ANR	4291918	CallExpression	driver . register_function ( test_sprintf_MyString )		4291869	0					
ANR	4291919	Callee	driver . register_function		4291869	0					
ANR	4291920	MemberAccess	driver . register_function		4291869	0					
ANR	4291921	Identifier	driver		4291869	0					
ANR	4291922	Identifier	register_function		4291869	1					
ANR	4291923	ArgumentList	test_sprintf_MyString		4291869	1					
ANR	4291924	Argument	test_sprintf_MyString		4291869	0					
ANR	4291925	Identifier	test_sprintf_MyString		4291869	0					
ANR	4291926	ExpressionStatement	driver . register_function ( test_sprintf_cat_string )	72:1:2641:2690	4291869	7	True				
ANR	4291927	CallExpression	driver . register_function ( test_sprintf_cat_string )		4291869	0					
ANR	4291928	Callee	driver . register_function		4291869	0					
ANR	4291929	MemberAccess	driver . register_function		4291869	0					
ANR	4291930	Identifier	driver		4291869	0					
ANR	4291931	Identifier	register_function		4291869	1					
ANR	4291932	ArgumentList	test_sprintf_cat_string		4291869	1					
ANR	4291933	Argument	test_sprintf_cat_string		4291869	0					
ANR	4291934	Identifier	test_sprintf_cat_string		4291869	0					
ANR	4291935	ExpressionStatement	driver . register_function ( test_sprintf_cat_MyString )	73:1:2693:2744	4291869	8	True				
ANR	4291936	CallExpression	driver . register_function ( test_sprintf_cat_MyString )		4291869	0					
ANR	4291937	Callee	driver . register_function		4291869	0					
ANR	4291938	MemberAccess	driver . register_function		4291869	0					
ANR	4291939	Identifier	driver		4291869	0					
ANR	4291940	Identifier	register_function		4291869	1					
ANR	4291941	ArgumentList	test_sprintf_cat_MyString		4291869	1					
ANR	4291942	Argument	test_sprintf_cat_MyString		4291869	0					
ANR	4291943	Identifier	test_sprintf_cat_MyString		4291869	0					
ANR	4291944	ExpressionStatement	driver . register_function ( test_lower_case_empty )	74:1:2747:2794	4291869	9	True				
ANR	4291945	CallExpression	driver . register_function ( test_lower_case_empty )		4291869	0					
ANR	4291946	Callee	driver . register_function		4291869	0					
ANR	4291947	MemberAccess	driver . register_function		4291869	0					
ANR	4291948	Identifier	driver		4291869	0					
ANR	4291949	Identifier	register_function		4291869	1					
ANR	4291950	ArgumentList	test_lower_case_empty		4291869	1					
ANR	4291951	Argument	test_lower_case_empty		4291869	0					
ANR	4291952	Identifier	test_lower_case_empty		4291869	0					
ANR	4291953	ExpressionStatement	driver . register_function ( test_lower_case_non_empty )	75:1:2797:2848	4291869	10	True				
ANR	4291954	CallExpression	driver . register_function ( test_lower_case_non_empty )		4291869	0					
ANR	4291955	Callee	driver . register_function		4291869	0					
ANR	4291956	MemberAccess	driver . register_function		4291869	0					
ANR	4291957	Identifier	driver		4291869	0					
ANR	4291958	Identifier	register_function		4291869	1					
ANR	4291959	ArgumentList	test_lower_case_non_empty		4291869	1					
ANR	4291960	Argument	test_lower_case_non_empty		4291869	0					
ANR	4291961	Identifier	test_lower_case_non_empty		4291869	0					
ANR	4291962	ExpressionStatement	driver . register_function ( test_upper_case_empty )	76:1:2851:2898	4291869	11	True				
ANR	4291963	CallExpression	driver . register_function ( test_upper_case_empty )		4291869	0					
ANR	4291964	Callee	driver . register_function		4291869	0					
ANR	4291965	MemberAccess	driver . register_function		4291869	0					
ANR	4291966	Identifier	driver		4291869	0					
ANR	4291967	Identifier	register_function		4291869	1					
ANR	4291968	ArgumentList	test_upper_case_empty		4291869	1					
ANR	4291969	Argument	test_upper_case_empty		4291869	0					
ANR	4291970	Identifier	test_upper_case_empty		4291869	0					
ANR	4291971	ExpressionStatement	driver . register_function ( test_upper_case_non_empty )	77:1:2901:2952	4291869	12	True				
ANR	4291972	CallExpression	driver . register_function ( test_upper_case_non_empty )		4291869	0					
ANR	4291973	Callee	driver . register_function		4291869	0					
ANR	4291974	MemberAccess	driver . register_function		4291869	0					
ANR	4291975	Identifier	driver		4291869	0					
ANR	4291976	Identifier	register_function		4291869	1					
ANR	4291977	ArgumentList	test_upper_case_non_empty		4291869	1					
ANR	4291978	Argument	test_upper_case_non_empty		4291869	0					
ANR	4291979	Identifier	test_upper_case_non_empty		4291869	0					
ANR	4291980	ExpressionStatement	driver . register_function ( test_chomp_new_line_end )	78:1:2955:3004	4291869	13	True				
ANR	4291981	CallExpression	driver . register_function ( test_chomp_new_line_end )		4291869	0					
ANR	4291982	Callee	driver . register_function		4291869	0					
ANR	4291983	MemberAccess	driver . register_function		4291869	0					
ANR	4291984	Identifier	driver		4291869	0					
ANR	4291985	Identifier	register_function		4291869	1					
ANR	4291986	ArgumentList	test_chomp_new_line_end		4291869	1					
ANR	4291987	Argument	test_chomp_new_line_end		4291869	0					
ANR	4291988	Identifier	test_chomp_new_line_end		4291869	0					
ANR	4291989	ExpressionStatement	driver . register_function ( test_chomp_crlf_end )	79:1:3007:3052	4291869	14	True				
ANR	4291990	CallExpression	driver . register_function ( test_chomp_crlf_end )		4291869	0					
ANR	4291991	Callee	driver . register_function		4291869	0					
ANR	4291992	MemberAccess	driver . register_function		4291869	0					
ANR	4291993	Identifier	driver		4291869	0					
ANR	4291994	Identifier	register_function		4291869	1					
ANR	4291995	ArgumentList	test_chomp_crlf_end		4291869	1					
ANR	4291996	Argument	test_chomp_crlf_end		4291869	0					
ANR	4291997	Identifier	test_chomp_crlf_end		4291869	0					
ANR	4291998	ExpressionStatement	driver . register_function ( test_chomp_new_line_beginning )	80:1:3055:3110	4291869	15	True				
ANR	4291999	CallExpression	driver . register_function ( test_chomp_new_line_beginning )		4291869	0					
ANR	4292000	Callee	driver . register_function		4291869	0					
ANR	4292001	MemberAccess	driver . register_function		4291869	0					
ANR	4292002	Identifier	driver		4291869	0					
ANR	4292003	Identifier	register_function		4291869	1					
ANR	4292004	ArgumentList	test_chomp_new_line_beginning		4291869	1					
ANR	4292005	Argument	test_chomp_new_line_beginning		4291869	0					
ANR	4292006	Identifier	test_chomp_new_line_beginning		4291869	0					
ANR	4292007	ExpressionStatement	driver . register_function ( test_chomp_return_false )	81:1:3113:3162	4291869	16	True				
ANR	4292008	CallExpression	driver . register_function ( test_chomp_return_false )		4291869	0					
ANR	4292009	Callee	driver . register_function		4291869	0					
ANR	4292010	MemberAccess	driver . register_function		4291869	0					
ANR	4292011	Identifier	driver		4291869	0					
ANR	4292012	Identifier	register_function		4291869	1					
ANR	4292013	ArgumentList	test_chomp_return_false		4291869	1					
ANR	4292014	Argument	test_chomp_return_false		4291869	0					
ANR	4292015	Identifier	test_chomp_return_false		4291869	0					
ANR	4292016	ExpressionStatement	driver . register_function ( test_chomp_return_true )	82:1:3165:3213	4291869	17	True				
ANR	4292017	CallExpression	driver . register_function ( test_chomp_return_true )		4291869	0					
ANR	4292018	Callee	driver . register_function		4291869	0					
ANR	4292019	MemberAccess	driver . register_function		4291869	0					
ANR	4292020	Identifier	driver		4291869	0					
ANR	4292021	Identifier	register_function		4291869	1					
ANR	4292022	ArgumentList	test_chomp_return_true		4291869	1					
ANR	4292023	Argument	test_chomp_return_true		4291869	0					
ANR	4292024	Identifier	test_chomp_return_true		4291869	0					
ANR	4292025	ExpressionStatement	driver . register_function ( test_trim_beginning_and_end )	83:1:3216:3269	4291869	18	True				
ANR	4292026	CallExpression	driver . register_function ( test_trim_beginning_and_end )		4291869	0					
ANR	4292027	Callee	driver . register_function		4291869	0					
ANR	4292028	MemberAccess	driver . register_function		4291869	0					
ANR	4292029	Identifier	driver		4291869	0					
ANR	4292030	Identifier	register_function		4291869	1					
ANR	4292031	ArgumentList	test_trim_beginning_and_end		4291869	1					
ANR	4292032	Argument	test_trim_beginning_and_end		4291869	0					
ANR	4292033	Identifier	test_trim_beginning_and_end		4291869	0					
ANR	4292034	ExpressionStatement	driver . register_function ( test_trim_end )	84:1:3272:3311	4291869	19	True				
ANR	4292035	CallExpression	driver . register_function ( test_trim_end )		4291869	0					
ANR	4292036	Callee	driver . register_function		4291869	0					
ANR	4292037	MemberAccess	driver . register_function		4291869	0					
ANR	4292038	Identifier	driver		4291869	0					
ANR	4292039	Identifier	register_function		4291869	1					
ANR	4292040	ArgumentList	test_trim_end		4291869	1					
ANR	4292041	Argument	test_trim_end		4291869	0					
ANR	4292042	Identifier	test_trim_end		4291869	0					
ANR	4292043	ExpressionStatement	driver . register_function ( test_trim_none )	85:1:3314:3354	4291869	20	True				
ANR	4292044	CallExpression	driver . register_function ( test_trim_none )		4291869	0					
ANR	4292045	Callee	driver . register_function		4291869	0					
ANR	4292046	MemberAccess	driver . register_function		4291869	0					
ANR	4292047	Identifier	driver		4291869	0					
ANR	4292048	Identifier	register_function		4291869	1					
ANR	4292049	ArgumentList	test_trim_none		4291869	1					
ANR	4292050	Argument	test_trim_none		4291869	0					
ANR	4292051	Identifier	test_trim_none		4291869	0					
ANR	4292052	ExpressionStatement	driver . register_function ( test_trim_beginning )	86:1:3357:3402	4291869	21	True				
ANR	4292053	CallExpression	driver . register_function ( test_trim_beginning )		4291869	0					
ANR	4292054	Callee	driver . register_function		4291869	0					
ANR	4292055	MemberAccess	driver . register_function		4291869	0					
ANR	4292056	Identifier	driver		4291869	0					
ANR	4292057	Identifier	register_function		4291869	1					
ANR	4292058	ArgumentList	test_trim_beginning		4291869	1					
ANR	4292059	Argument	test_trim_beginning		4291869	0					
ANR	4292060	Identifier	test_trim_beginning		4291869	0					
ANR	4292061	ExpressionStatement	driver . register_function ( test_trim_empty )	87:1:3405:3446	4291869	22	True				
ANR	4292062	CallExpression	driver . register_function ( test_trim_empty )		4291869	0					
ANR	4292063	Callee	driver . register_function		4291869	0					
ANR	4292064	MemberAccess	driver . register_function		4291869	0					
ANR	4292065	Identifier	driver		4291869	0					
ANR	4292066	Identifier	register_function		4291869	1					
ANR	4292067	ArgumentList	test_trim_empty		4291869	1					
ANR	4292068	Argument	test_trim_empty		4291869	0					
ANR	4292069	Identifier	test_trim_empty		4291869	0					
ANR	4292070	ExpressionStatement	driver . register_function ( tokenize_null )	88:1:3449:3488	4291869	23	True				
ANR	4292071	CallExpression	driver . register_function ( tokenize_null )		4291869	0					
ANR	4292072	Callee	driver . register_function		4291869	0					
ANR	4292073	MemberAccess	driver . register_function		4291869	0					
ANR	4292074	Identifier	driver		4291869	0					
ANR	4292075	Identifier	register_function		4291869	1					
ANR	4292076	ArgumentList	tokenize_null		4291869	1					
ANR	4292077	Argument	tokenize_null		4291869	0					
ANR	4292078	Identifier	tokenize_null		4291869	0					
ANR	4292079	ExpressionStatement	driver . register_function ( tokenize_skip )	89:1:3491:3530	4291869	24	True				
ANR	4292080	CallExpression	driver . register_function ( tokenize_skip )		4291869	0					
ANR	4292081	Callee	driver . register_function		4291869	0					
ANR	4292082	MemberAccess	driver . register_function		4291869	0					
ANR	4292083	Identifier	driver		4291869	0					
ANR	4292084	Identifier	register_function		4291869	1					
ANR	4292085	ArgumentList	tokenize_skip		4291869	1					
ANR	4292086	Argument	tokenize_skip		4291869	0					
ANR	4292087	Identifier	tokenize_skip		4291869	0					
ANR	4292088	ExpressionStatement	driver . register_function ( tokenize_multiple_calls )	90:1:3533:3582	4291869	25	True				
ANR	4292089	CallExpression	driver . register_function ( tokenize_multiple_calls )		4291869	0					
ANR	4292090	Callee	driver . register_function		4291869	0					
ANR	4292091	MemberAccess	driver . register_function		4291869	0					
ANR	4292092	Identifier	driver		4291869	0					
ANR	4292093	Identifier	register_function		4291869	1					
ANR	4292094	ArgumentList	tokenize_multiple_calls		4291869	1					
ANR	4292095	Argument	tokenize_multiple_calls		4291869	0					
ANR	4292096	Identifier	tokenize_multiple_calls		4291869	0					
ANR	4292097	ExpressionStatement	driver . register_function ( tokenize_end )	91:1:3585:3623	4291869	26	True				
ANR	4292098	CallExpression	driver . register_function ( tokenize_end )		4291869	0					
ANR	4292099	Callee	driver . register_function		4291869	0					
ANR	4292100	MemberAccess	driver . register_function		4291869	0					
ANR	4292101	Identifier	driver		4291869	0					
ANR	4292102	Identifier	register_function		4291869	1					
ANR	4292103	ArgumentList	tokenize_end		4291869	1					
ANR	4292104	Argument	tokenize_end		4291869	0					
ANR	4292105	Identifier	tokenize_end		4291869	0					
ANR	4292106	ExpressionStatement	driver . register_function ( tokenize_empty )	92:1:3626:3666	4291869	27	True				
ANR	4292107	CallExpression	driver . register_function ( tokenize_empty )		4291869	0					
ANR	4292108	Callee	driver . register_function		4291869	0					
ANR	4292109	MemberAccess	driver . register_function		4291869	0					
ANR	4292110	Identifier	driver		4291869	0					
ANR	4292111	Identifier	register_function		4291869	1					
ANR	4292112	ArgumentList	tokenize_empty		4291869	1					
ANR	4292113	Argument	tokenize_empty		4291869	0					
ANR	4292114	Identifier	tokenize_empty		4291869	0					
ANR	4292115	ExpressionStatement	driver . register_function ( tokenize_empty_delimiter )	93:1:3669:3719	4291869	28	True				
ANR	4292116	CallExpression	driver . register_function ( tokenize_empty_delimiter )		4291869	0					
ANR	4292117	Callee	driver . register_function		4291869	0					
ANR	4292118	MemberAccess	driver . register_function		4291869	0					
ANR	4292119	Identifier	driver		4291869	0					
ANR	4292120	Identifier	register_function		4291869	1					
ANR	4292121	ArgumentList	tokenize_empty_delimiter		4291869	1					
ANR	4292122	Argument	tokenize_empty_delimiter		4291869	0					
ANR	4292123	Identifier	tokenize_empty_delimiter		4291869	0					
ANR	4292124	ReturnStatement	return driver . do_all_functions ( ) ;	96:1:3743:3775	4291869	29	True				
ANR	4292125	CallExpression	driver . do_all_functions ( )		4291869	0					
ANR	4292126	Callee	driver . do_all_functions		4291869	0					
ANR	4292127	MemberAccess	driver . do_all_functions		4291869	0					
ANR	4292128	Identifier	driver		4291869	0					
ANR	4292129	Identifier	do_all_functions		4291869	1					
ANR	4292130	ArgumentList			4291869	1					
ANR	4292131	ReturnType	bool		4291869	1					
ANR	4292132	Identifier	FTEST_stl_string_utils		4291869	2					
ANR	4292133	ParameterList			4291869	3					
ANR	4292134	CFGEntryNode	ENTRY		4291869		True				
ANR	4292135	CFGExitNode	EXIT		4291869		True				
ANR	4292136	Symbol	test_trim_beginning		4291869						
ANR	4292137	Symbol	test_trim_end		4291869						
ANR	4292138	Symbol	test_trim_none		4291869						
ANR	4292139	Symbol	test_sprintf_cat_MyString		4291869						
ANR	4292140	Symbol	tokenize_multiple_calls		4291869						
ANR	4292141	Symbol	test_chomp_return_false		4291869						
ANR	4292142	Symbol	test_trim_empty		4291869						
ANR	4292143	Symbol	test_trim_beginning_and_end		4291869						
ANR	4292144	Symbol	test_chomp_new_line_beginning		4291869						
ANR	4292145	Symbol	tokenize_empty_delimiter		4291869						
ANR	4292146	Symbol	test_comparison_ops_lhs_string		4291869						
ANR	4292147	Symbol	test_lower_case_non_empty		4291869						
ANR	4292148	Symbol	test_sprintf_MyString		4291869						
ANR	4292149	Symbol	driver . do_all_functions		4291869						
ANR	4292150	Symbol	tokenize_end		4291869						
ANR	4292151	Symbol	tokenize_empty		4291869						
ANR	4292152	Symbol	test_upper_case_empty		4291869						
ANR	4292153	Symbol	test_sprintf_string		4291869						
ANR	4292154	Symbol	tokenize_null		4291869						
ANR	4292155	Symbol	driver		4291869						
ANR	4292156	Symbol	test_chomp_new_line_end		4291869						
ANR	4292157	Symbol	test_chomp_crlf_end		4291869						
ANR	4292158	Symbol	test_chomp_return_true		4291869						
ANR	4292159	Symbol	tokenize_skip		4291869						
ANR	4292160	Symbol	test_comparison_ops_lhs_MyString		4291869						
ANR	4292161	Symbol	test_sprintf_cat_string		4291869						
ANR	4292162	Symbol	test_lower_case_empty		4291869						
ANR	4292163	Symbol	test_upper_case_non_empty		4291869						
ANR	4292164	Function	test_sprintf_string	100:0:3781:5278							
ANR	4292165	FunctionDef	test_sprintf_string ()		4292164	0					
ANR	4292166	CompoundStatement		100:34:3815:5278	4292164	0					
ANR	4292167	ExpressionStatement	"emit_test ( ""Test sprintf overloading for std::string"" )"	101:4:3821:3874	4292164	0	True				
ANR	4292168	CallExpression	"emit_test ( ""Test sprintf overloading for std::string"" )"		4292164	0					
ANR	4292169	Callee	emit_test		4292164	0					
ANR	4292170	Identifier	emit_test		4292164	0					
ANR	4292171	ArgumentList	"""Test sprintf overloading for std::string"""		4292164	1					
ANR	4292172	Argument	"""Test sprintf overloading for std::string"""		4292164	0					
ANR	4292173	PrimaryExpression	"""Test sprintf overloading for std::string"""		4292164	0					
ANR	4292174	IdentifierDeclStatement	int nchars = 0 ;	103:4:3881:3895	4292164	1	True				
ANR	4292175	IdentifierDecl	nchars = 0		4292164	0					
ANR	4292176	IdentifierDeclType	int		4292164	0					
ANR	4292177	Identifier	nchars		4292164	1					
ANR	4292178	AssignmentExpression	nchars = 0		4292164	2		=			
ANR	4292179	Identifier	nchars		4292164	0					
ANR	4292180	PrimaryExpression	0		4292164	1					
ANR	4292181	IdentifierDeclStatement	int rchars = 0 ;	104:4:3901:3915	4292164	2	True				
ANR	4292182	IdentifierDecl	rchars = 0		4292164	0					
ANR	4292183	IdentifierDeclType	int		4292164	0					
ANR	4292184	Identifier	rchars		4292164	1					
ANR	4292185	AssignmentExpression	rchars = 0		4292164	2		=			
ANR	4292186	Identifier	rchars		4292164	0					
ANR	4292187	PrimaryExpression	0		4292164	1					
ANR	4292188	IdentifierDeclStatement	std :: string dst ;	105:4:3921:3936	4292164	3	True				
ANR	4292189	IdentifierDecl	dst		4292164	0					
ANR	4292190	IdentifierDeclType	std :: string		4292164	0					
ANR	4292191	Identifier	dst		4292164	1					
ANR	4292192	IdentifierDeclStatement	std :: string src ;	106:4:3942:3957	4292164	4	True				
ANR	4292193	IdentifierDecl	src		4292164	0					
ANR	4292194	IdentifierDeclType	std :: string		4292164	0					
ANR	4292195	Identifier	src		4292164	1					
ANR	4292196	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF / 2	108:4:3964:4000	4292164	5	True				
ANR	4292197	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF / 2		4292164	0		=			
ANR	4292198	Identifier	nchars		4292164	0					
ANR	4292199	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF / 2		4292164	1		/			
ANR	4292200	Identifier	STL_STRING_UTILS_FIXBUF		4292164	0					
ANR	4292201	PrimaryExpression	2		4292164	1					
ANR	4292202	ExpressionStatement	"src = """""	109:4:4006:4012	4292164	6	True				
ANR	4292203	AssignmentExpression	"src = """""		4292164	0		=			
ANR	4292204	Identifier	src		4292164	0					
ANR	4292205	PrimaryExpression	""""""		4292164	1					
ANR	4292206	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292164	7					
ANR	4292207	ForInit	int j = 0 ;	110:9:4023:4032	4292164	0	True				
ANR	4292208	IdentifierDeclStatement	int j = 0 ;		4292164	0					
ANR	4292209	IdentifierDecl	j = 0		4292164	0					
ANR	4292210	IdentifierDeclType	int		4292164	0					
ANR	4292211	Identifier	j		4292164	1					
ANR	4292212	AssignmentExpression	j = 0		4292164	2		=			
ANR	4292213	Identifier	j		4292164	0					
ANR	4292214	PrimaryExpression	0		4292164	1					
ANR	4292215	Condition	j < nchars	110:21:4035:4044	4292164	1	True				
ANR	4292216	RelationalExpression	j < nchars		4292164	0		<			
ANR	4292217	Identifier	j		4292164	0					
ANR	4292218	Identifier	nchars		4292164	1					
ANR	4292219	UnaryExpression	++ j	110:34:4048:4050	4292164	2	True				
ANR	4292220	IncDec	++		4292164	0					
ANR	4292221	Identifier	j		4292164	1					
ANR	4292222	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	110:39:4053:4080	4292164	3	True				
ANR	4292223	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292164	0		+=			
ANR	4292224	Identifier	src		4292164	0					
ANR	4292225	CallExpression	char ( '0' + ( j % 10 ) )		4292164	1					
ANR	4292226	Callee	char		4292164	0					
ANR	4292227	Identifier	char		4292164	0					
ANR	4292228	ArgumentList	'0' + ( j % 10 )		4292164	1					
ANR	4292229	Argument	'0' + ( j % 10 )		4292164	0					
ANR	4292230	AdditiveExpression	'0' + ( j % 10 )		4292164	0		+			
ANR	4292231	PrimaryExpression	'0'		4292164	0					
ANR	4292232	MultiplicativeExpression	j % 10		4292164	1		%			
ANR	4292233	Identifier	j		4292164	0					
ANR	4292234	PrimaryExpression	10		4292164	1					
ANR	4292235	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	111:4:4086:4126	4292164	8	True				
ANR	4292236	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	0		=			
ANR	4292237	Identifier	rchars		4292164	0					
ANR	4292238	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	1					
ANR	4292239	Callee	sprintf		4292164	0					
ANR	4292240	Identifier	sprintf		4292164	0					
ANR	4292241	ArgumentList	dst		4292164	1					
ANR	4292242	Argument	dst		4292164	0					
ANR	4292243	Identifier	dst		4292164	0					
ANR	4292244	Argument	"""%s"""		4292164	1					
ANR	4292245	PrimaryExpression	"""%s"""		4292164	0					
ANR	4292246	Argument	src . c_str ( )		4292164	2					
ANR	4292247	CallExpression	src . c_str ( )		4292164	0					
ANR	4292248	Callee	src . c_str		4292164	0					
ANR	4292249	MemberAccess	src . c_str		4292164	0					
ANR	4292250	Identifier	src		4292164	0					
ANR	4292251	Identifier	c_str		4292164	1					
ANR	4292252	ArgumentList			4292164	1					
ANR	4292253	IfStatement	if ( dst != src )		4292164	9					
ANR	4292254	Condition	dst != src	112:8:4136:4145	4292164	0	True				
ANR	4292255	EqualityExpression	dst != src		4292164	0		!=			
ANR	4292256	Identifier	dst		4292164	0					
ANR	4292257	Identifier	src		4292164	1					
ANR	4292258	CompoundStatement		13:20:332:332	4292164	1					
ANR	4292259	ExpressionStatement	FAIL	113:2:4152:4156	4292164	0	True				
ANR	4292260	Identifier	FAIL		4292164	0					
ANR	4292261	IfStatement	if ( rchars != nchars )		4292164	10					
ANR	4292262	Condition	rchars != nchars	115:8:4180:4195	4292164	0	True				
ANR	4292263	EqualityExpression	rchars != nchars		4292164	0		!=			
ANR	4292264	Identifier	rchars		4292164	0					
ANR	4292265	Identifier	nchars		4292164	1					
ANR	4292266	CompoundStatement		16:26:382:382	4292164	1					
ANR	4292267	ExpressionStatement	FAIL	116:2:4202:4206	4292164	0	True				
ANR	4292268	Identifier	FAIL		4292164	0					
ANR	4292269	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF - 1	119:4:4227:4263	4292164	11	True				
ANR	4292270	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF - 1		4292164	0		=			
ANR	4292271	Identifier	nchars		4292164	0					
ANR	4292272	AdditiveExpression	STL_STRING_UTILS_FIXBUF - 1		4292164	1		-			
ANR	4292273	Identifier	STL_STRING_UTILS_FIXBUF		4292164	0					
ANR	4292274	PrimaryExpression	1		4292164	1					
ANR	4292275	ExpressionStatement	"src = """""	120:4:4269:4275	4292164	12	True				
ANR	4292276	AssignmentExpression	"src = """""		4292164	0		=			
ANR	4292277	Identifier	src		4292164	0					
ANR	4292278	PrimaryExpression	""""""		4292164	1					
ANR	4292279	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292164	13					
ANR	4292280	ForInit	int j = 0 ;	121:9:4286:4295	4292164	0	True				
ANR	4292281	IdentifierDeclStatement	int j = 0 ;		4292164	0					
ANR	4292282	IdentifierDecl	j = 0		4292164	0					
ANR	4292283	IdentifierDeclType	int		4292164	0					
ANR	4292284	Identifier	j		4292164	1					
ANR	4292285	AssignmentExpression	j = 0		4292164	2		=			
ANR	4292286	Identifier	j		4292164	0					
ANR	4292287	PrimaryExpression	0		4292164	1					
ANR	4292288	Condition	j < nchars	121:21:4298:4307	4292164	1	True				
ANR	4292289	RelationalExpression	j < nchars		4292164	0		<			
ANR	4292290	Identifier	j		4292164	0					
ANR	4292291	Identifier	nchars		4292164	1					
ANR	4292292	UnaryExpression	++ j	121:34:4311:4313	4292164	2	True				
ANR	4292293	IncDec	++		4292164	0					
ANR	4292294	Identifier	j		4292164	1					
ANR	4292295	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	121:39:4316:4343	4292164	3	True				
ANR	4292296	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292164	0		+=			
ANR	4292297	Identifier	src		4292164	0					
ANR	4292298	CallExpression	char ( '0' + ( j % 10 ) )		4292164	1					
ANR	4292299	Callee	char		4292164	0					
ANR	4292300	Identifier	char		4292164	0					
ANR	4292301	ArgumentList	'0' + ( j % 10 )		4292164	1					
ANR	4292302	Argument	'0' + ( j % 10 )		4292164	0					
ANR	4292303	AdditiveExpression	'0' + ( j % 10 )		4292164	0		+			
ANR	4292304	PrimaryExpression	'0'		4292164	0					
ANR	4292305	MultiplicativeExpression	j % 10		4292164	1		%			
ANR	4292306	Identifier	j		4292164	0					
ANR	4292307	PrimaryExpression	10		4292164	1					
ANR	4292308	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	122:4:4349:4389	4292164	14	True				
ANR	4292309	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	0		=			
ANR	4292310	Identifier	rchars		4292164	0					
ANR	4292311	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	1					
ANR	4292312	Callee	sprintf		4292164	0					
ANR	4292313	Identifier	sprintf		4292164	0					
ANR	4292314	ArgumentList	dst		4292164	1					
ANR	4292315	Argument	dst		4292164	0					
ANR	4292316	Identifier	dst		4292164	0					
ANR	4292317	Argument	"""%s"""		4292164	1					
ANR	4292318	PrimaryExpression	"""%s"""		4292164	0					
ANR	4292319	Argument	src . c_str ( )		4292164	2					
ANR	4292320	CallExpression	src . c_str ( )		4292164	0					
ANR	4292321	Callee	src . c_str		4292164	0					
ANR	4292322	MemberAccess	src . c_str		4292164	0					
ANR	4292323	Identifier	src		4292164	0					
ANR	4292324	Identifier	c_str		4292164	1					
ANR	4292325	ArgumentList			4292164	1					
ANR	4292326	IfStatement	if ( dst != src )		4292164	15					
ANR	4292327	Condition	dst != src	123:8:4399:4408	4292164	0	True				
ANR	4292328	EqualityExpression	dst != src		4292164	0		!=			
ANR	4292329	Identifier	dst		4292164	0					
ANR	4292330	Identifier	src		4292164	1					
ANR	4292331	CompoundStatement		24:20:595:595	4292164	1					
ANR	4292332	ExpressionStatement	FAIL	124:2:4415:4419	4292164	0	True				
ANR	4292333	Identifier	FAIL		4292164	0					
ANR	4292334	IfStatement	if ( rchars != nchars )		4292164	16					
ANR	4292335	Condition	rchars != nchars	126:8:4443:4458	4292164	0	True				
ANR	4292336	EqualityExpression	rchars != nchars		4292164	0		!=			
ANR	4292337	Identifier	rchars		4292164	0					
ANR	4292338	Identifier	nchars		4292164	1					
ANR	4292339	CompoundStatement		27:26:645:645	4292164	1					
ANR	4292340	ExpressionStatement	FAIL	127:2:4465:4469	4292164	0	True				
ANR	4292341	Identifier	FAIL		4292164	0					
ANR	4292342	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF	130:4:4490:4522	4292164	17	True				
ANR	4292343	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF		4292164	0		=			
ANR	4292344	Identifier	nchars		4292164	0					
ANR	4292345	Identifier	STL_STRING_UTILS_FIXBUF		4292164	1					
ANR	4292346	ExpressionStatement	"src = """""	131:4:4528:4534	4292164	18	True				
ANR	4292347	AssignmentExpression	"src = """""		4292164	0		=			
ANR	4292348	Identifier	src		4292164	0					
ANR	4292349	PrimaryExpression	""""""		4292164	1					
ANR	4292350	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292164	19					
ANR	4292351	ForInit	int j = 0 ;	132:9:4545:4554	4292164	0	True				
ANR	4292352	IdentifierDeclStatement	int j = 0 ;		4292164	0					
ANR	4292353	IdentifierDecl	j = 0		4292164	0					
ANR	4292354	IdentifierDeclType	int		4292164	0					
ANR	4292355	Identifier	j		4292164	1					
ANR	4292356	AssignmentExpression	j = 0		4292164	2		=			
ANR	4292357	Identifier	j		4292164	0					
ANR	4292358	PrimaryExpression	0		4292164	1					
ANR	4292359	Condition	j < nchars	132:21:4557:4566	4292164	1	True				
ANR	4292360	RelationalExpression	j < nchars		4292164	0		<			
ANR	4292361	Identifier	j		4292164	0					
ANR	4292362	Identifier	nchars		4292164	1					
ANR	4292363	UnaryExpression	++ j	132:34:4570:4572	4292164	2	True				
ANR	4292364	IncDec	++		4292164	0					
ANR	4292365	Identifier	j		4292164	1					
ANR	4292366	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	132:39:4575:4602	4292164	3	True				
ANR	4292367	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292164	0		+=			
ANR	4292368	Identifier	src		4292164	0					
ANR	4292369	CallExpression	char ( '0' + ( j % 10 ) )		4292164	1					
ANR	4292370	Callee	char		4292164	0					
ANR	4292371	Identifier	char		4292164	0					
ANR	4292372	ArgumentList	'0' + ( j % 10 )		4292164	1					
ANR	4292373	Argument	'0' + ( j % 10 )		4292164	0					
ANR	4292374	AdditiveExpression	'0' + ( j % 10 )		4292164	0		+			
ANR	4292375	PrimaryExpression	'0'		4292164	0					
ANR	4292376	MultiplicativeExpression	j % 10		4292164	1		%			
ANR	4292377	Identifier	j		4292164	0					
ANR	4292378	PrimaryExpression	10		4292164	1					
ANR	4292379	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	133:4:4608:4648	4292164	20	True				
ANR	4292380	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	0		=			
ANR	4292381	Identifier	rchars		4292164	0					
ANR	4292382	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	1					
ANR	4292383	Callee	sprintf		4292164	0					
ANR	4292384	Identifier	sprintf		4292164	0					
ANR	4292385	ArgumentList	dst		4292164	1					
ANR	4292386	Argument	dst		4292164	0					
ANR	4292387	Identifier	dst		4292164	0					
ANR	4292388	Argument	"""%s"""		4292164	1					
ANR	4292389	PrimaryExpression	"""%s"""		4292164	0					
ANR	4292390	Argument	src . c_str ( )		4292164	2					
ANR	4292391	CallExpression	src . c_str ( )		4292164	0					
ANR	4292392	Callee	src . c_str		4292164	0					
ANR	4292393	MemberAccess	src . c_str		4292164	0					
ANR	4292394	Identifier	src		4292164	0					
ANR	4292395	Identifier	c_str		4292164	1					
ANR	4292396	ArgumentList			4292164	1					
ANR	4292397	IfStatement	if ( dst != src )		4292164	21					
ANR	4292398	Condition	dst != src	134:8:4658:4667	4292164	0	True				
ANR	4292399	EqualityExpression	dst != src		4292164	0		!=			
ANR	4292400	Identifier	dst		4292164	0					
ANR	4292401	Identifier	src		4292164	1					
ANR	4292402	CompoundStatement		35:20:854:854	4292164	1					
ANR	4292403	ExpressionStatement	FAIL	135:2:4674:4678	4292164	0	True				
ANR	4292404	Identifier	FAIL		4292164	0					
ANR	4292405	IfStatement	if ( rchars != nchars )		4292164	22					
ANR	4292406	Condition	rchars != nchars	137:8:4702:4717	4292164	0	True				
ANR	4292407	EqualityExpression	rchars != nchars		4292164	0		!=			
ANR	4292408	Identifier	rchars		4292164	0					
ANR	4292409	Identifier	nchars		4292164	1					
ANR	4292410	CompoundStatement		38:26:904:904	4292164	1					
ANR	4292411	ExpressionStatement	FAIL	138:2:4724:4728	4292164	0	True				
ANR	4292412	Identifier	FAIL		4292164	0					
ANR	4292413	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF + 1	141:4:4749:4785	4292164	23	True				
ANR	4292414	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF + 1		4292164	0		=			
ANR	4292415	Identifier	nchars		4292164	0					
ANR	4292416	AdditiveExpression	STL_STRING_UTILS_FIXBUF + 1		4292164	1		+			
ANR	4292417	Identifier	STL_STRING_UTILS_FIXBUF		4292164	0					
ANR	4292418	PrimaryExpression	1		4292164	1					
ANR	4292419	ExpressionStatement	"src = """""	142:4:4791:4797	4292164	24	True				
ANR	4292420	AssignmentExpression	"src = """""		4292164	0		=			
ANR	4292421	Identifier	src		4292164	0					
ANR	4292422	PrimaryExpression	""""""		4292164	1					
ANR	4292423	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292164	25					
ANR	4292424	ForInit	int j = 0 ;	143:9:4808:4817	4292164	0	True				
ANR	4292425	IdentifierDeclStatement	int j = 0 ;		4292164	0					
ANR	4292426	IdentifierDecl	j = 0		4292164	0					
ANR	4292427	IdentifierDeclType	int		4292164	0					
ANR	4292428	Identifier	j		4292164	1					
ANR	4292429	AssignmentExpression	j = 0		4292164	2		=			
ANR	4292430	Identifier	j		4292164	0					
ANR	4292431	PrimaryExpression	0		4292164	1					
ANR	4292432	Condition	j < nchars	143:21:4820:4829	4292164	1	True				
ANR	4292433	RelationalExpression	j < nchars		4292164	0		<			
ANR	4292434	Identifier	j		4292164	0					
ANR	4292435	Identifier	nchars		4292164	1					
ANR	4292436	UnaryExpression	++ j	143:34:4833:4835	4292164	2	True				
ANR	4292437	IncDec	++		4292164	0					
ANR	4292438	Identifier	j		4292164	1					
ANR	4292439	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	143:39:4838:4865	4292164	3	True				
ANR	4292440	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292164	0		+=			
ANR	4292441	Identifier	src		4292164	0					
ANR	4292442	CallExpression	char ( '0' + ( j % 10 ) )		4292164	1					
ANR	4292443	Callee	char		4292164	0					
ANR	4292444	Identifier	char		4292164	0					
ANR	4292445	ArgumentList	'0' + ( j % 10 )		4292164	1					
ANR	4292446	Argument	'0' + ( j % 10 )		4292164	0					
ANR	4292447	AdditiveExpression	'0' + ( j % 10 )		4292164	0		+			
ANR	4292448	PrimaryExpression	'0'		4292164	0					
ANR	4292449	MultiplicativeExpression	j % 10		4292164	1		%			
ANR	4292450	Identifier	j		4292164	0					
ANR	4292451	PrimaryExpression	10		4292164	1					
ANR	4292452	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	144:4:4871:4911	4292164	26	True				
ANR	4292453	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	0		=			
ANR	4292454	Identifier	rchars		4292164	0					
ANR	4292455	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	1					
ANR	4292456	Callee	sprintf		4292164	0					
ANR	4292457	Identifier	sprintf		4292164	0					
ANR	4292458	ArgumentList	dst		4292164	1					
ANR	4292459	Argument	dst		4292164	0					
ANR	4292460	Identifier	dst		4292164	0					
ANR	4292461	Argument	"""%s"""		4292164	1					
ANR	4292462	PrimaryExpression	"""%s"""		4292164	0					
ANR	4292463	Argument	src . c_str ( )		4292164	2					
ANR	4292464	CallExpression	src . c_str ( )		4292164	0					
ANR	4292465	Callee	src . c_str		4292164	0					
ANR	4292466	MemberAccess	src . c_str		4292164	0					
ANR	4292467	Identifier	src		4292164	0					
ANR	4292468	Identifier	c_str		4292164	1					
ANR	4292469	ArgumentList			4292164	1					
ANR	4292470	IfStatement	if ( dst != src )		4292164	27					
ANR	4292471	Condition	dst != src	145:8:4921:4930	4292164	0	True				
ANR	4292472	EqualityExpression	dst != src		4292164	0		!=			
ANR	4292473	Identifier	dst		4292164	0					
ANR	4292474	Identifier	src		4292164	1					
ANR	4292475	CompoundStatement		46:20:1117:1117	4292164	1					
ANR	4292476	ExpressionStatement	FAIL	146:2:4937:4941	4292164	0	True				
ANR	4292477	Identifier	FAIL		4292164	0					
ANR	4292478	IfStatement	if ( rchars != nchars )		4292164	28					
ANR	4292479	Condition	rchars != nchars	148:8:4965:4980	4292164	0	True				
ANR	4292480	EqualityExpression	rchars != nchars		4292164	0		!=			
ANR	4292481	Identifier	rchars		4292164	0					
ANR	4292482	Identifier	nchars		4292164	1					
ANR	4292483	CompoundStatement		49:26:1167:1167	4292164	1					
ANR	4292484	ExpressionStatement	FAIL	149:2:4987:4991	4292164	0	True				
ANR	4292485	Identifier	FAIL		4292164	0					
ANR	4292486	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF * 2	152:4:5012:5048	4292164	29	True				
ANR	4292487	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF * 2		4292164	0		=			
ANR	4292488	Identifier	nchars		4292164	0					
ANR	4292489	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF * 2		4292164	1		*			
ANR	4292490	Identifier	STL_STRING_UTILS_FIXBUF		4292164	0					
ANR	4292491	PrimaryExpression	2		4292164	1					
ANR	4292492	ExpressionStatement	"src = """""	153:4:5054:5060	4292164	30	True				
ANR	4292493	AssignmentExpression	"src = """""		4292164	0		=			
ANR	4292494	Identifier	src		4292164	0					
ANR	4292495	PrimaryExpression	""""""		4292164	1					
ANR	4292496	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292164	31					
ANR	4292497	ForInit	int j = 0 ;	154:9:5071:5080	4292164	0	True				
ANR	4292498	IdentifierDeclStatement	int j = 0 ;		4292164	0					
ANR	4292499	IdentifierDecl	j = 0		4292164	0					
ANR	4292500	IdentifierDeclType	int		4292164	0					
ANR	4292501	Identifier	j		4292164	1					
ANR	4292502	AssignmentExpression	j = 0		4292164	2		=			
ANR	4292503	Identifier	j		4292164	0					
ANR	4292504	PrimaryExpression	0		4292164	1					
ANR	4292505	Condition	j < nchars	154:21:5083:5092	4292164	1	True				
ANR	4292506	RelationalExpression	j < nchars		4292164	0		<			
ANR	4292507	Identifier	j		4292164	0					
ANR	4292508	Identifier	nchars		4292164	1					
ANR	4292509	UnaryExpression	++ j	154:34:5096:5098	4292164	2	True				
ANR	4292510	IncDec	++		4292164	0					
ANR	4292511	Identifier	j		4292164	1					
ANR	4292512	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	154:39:5101:5128	4292164	3	True				
ANR	4292513	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292164	0		+=			
ANR	4292514	Identifier	src		4292164	0					
ANR	4292515	CallExpression	char ( '0' + ( j % 10 ) )		4292164	1					
ANR	4292516	Callee	char		4292164	0					
ANR	4292517	Identifier	char		4292164	0					
ANR	4292518	ArgumentList	'0' + ( j % 10 )		4292164	1					
ANR	4292519	Argument	'0' + ( j % 10 )		4292164	0					
ANR	4292520	AdditiveExpression	'0' + ( j % 10 )		4292164	0		+			
ANR	4292521	PrimaryExpression	'0'		4292164	0					
ANR	4292522	MultiplicativeExpression	j % 10		4292164	1		%			
ANR	4292523	Identifier	j		4292164	0					
ANR	4292524	PrimaryExpression	10		4292164	1					
ANR	4292525	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	155:4:5134:5174	4292164	32	True				
ANR	4292526	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	0		=			
ANR	4292527	Identifier	rchars		4292164	0					
ANR	4292528	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		4292164	1					
ANR	4292529	Callee	sprintf		4292164	0					
ANR	4292530	Identifier	sprintf		4292164	0					
ANR	4292531	ArgumentList	dst		4292164	1					
ANR	4292532	Argument	dst		4292164	0					
ANR	4292533	Identifier	dst		4292164	0					
ANR	4292534	Argument	"""%s"""		4292164	1					
ANR	4292535	PrimaryExpression	"""%s"""		4292164	0					
ANR	4292536	Argument	src . c_str ( )		4292164	2					
ANR	4292537	CallExpression	src . c_str ( )		4292164	0					
ANR	4292538	Callee	src . c_str		4292164	0					
ANR	4292539	MemberAccess	src . c_str		4292164	0					
ANR	4292540	Identifier	src		4292164	0					
ANR	4292541	Identifier	c_str		4292164	1					
ANR	4292542	ArgumentList			4292164	1					
ANR	4292543	IfStatement	if ( dst != src )		4292164	33					
ANR	4292544	Condition	dst != src	156:8:5184:5193	4292164	0	True				
ANR	4292545	EqualityExpression	dst != src		4292164	0		!=			
ANR	4292546	Identifier	dst		4292164	0					
ANR	4292547	Identifier	src		4292164	1					
ANR	4292548	CompoundStatement		57:20:1380:1380	4292164	1					
ANR	4292549	ExpressionStatement	FAIL	157:2:5200:5204	4292164	0	True				
ANR	4292550	Identifier	FAIL		4292164	0					
ANR	4292551	IfStatement	if ( rchars != nchars )		4292164	34					
ANR	4292552	Condition	rchars != nchars	159:8:5228:5243	4292164	0	True				
ANR	4292553	EqualityExpression	rchars != nchars		4292164	0		!=			
ANR	4292554	Identifier	rchars		4292164	0					
ANR	4292555	Identifier	nchars		4292164	1					
ANR	4292556	CompoundStatement		60:26:1430:1430	4292164	1					
ANR	4292557	ExpressionStatement	FAIL	160:2:5250:5254	4292164	0	True				
ANR	4292558	Identifier	FAIL		4292164	0					
ANR	4292559	ExpressionStatement	PASS	163:1:5272:5276	4292164	35	True				
ANR	4292560	Identifier	PASS		4292164	0					
ANR	4292561	ReturnType	static bool		4292164	1					
ANR	4292562	Identifier	test_sprintf_string		4292164	2					
ANR	4292563	ParameterList			4292164	3					
ANR	4292564	CFGEntryNode	ENTRY		4292164		True				
ANR	4292565	CFGExitNode	EXIT		4292164		True				
ANR	4292566	Symbol	src . c_str		4292164						
ANR	4292567	Symbol	dst		4292164						
ANR	4292568	Symbol	STL_STRING_UTILS_FIXBUF		4292164						
ANR	4292569	Symbol	src		4292164						
ANR	4292570	Symbol	nchars		4292164						
ANR	4292571	Symbol	rchars		4292164						
ANR	4292572	Symbol	char		4292164						
ANR	4292573	Symbol	j		4292164						
ANR	4292574	Symbol	sprintf		4292164						
ANR	4292575	Function	test_sprintf_MyString	166:0:5281:6771							
ANR	4292576	FunctionDef	test_sprintf_MyString ()		4292575	0					
ANR	4292577	CompoundStatement		166:36:5317:6771	4292575	0					
ANR	4292578	ExpressionStatement	"emit_test ( ""Test sprintf overloading for MyString"" )"	167:4:5323:5373	4292575	0	True				
ANR	4292579	CallExpression	"emit_test ( ""Test sprintf overloading for MyString"" )"		4292575	0					
ANR	4292580	Callee	emit_test		4292575	0					
ANR	4292581	Identifier	emit_test		4292575	0					
ANR	4292582	ArgumentList	"""Test sprintf overloading for MyString"""		4292575	1					
ANR	4292583	Argument	"""Test sprintf overloading for MyString"""		4292575	0					
ANR	4292584	PrimaryExpression	"""Test sprintf overloading for MyString"""		4292575	0					
ANR	4292585	IdentifierDeclStatement	int nchars = 0 ;	169:4:5380:5394	4292575	1	True				
ANR	4292586	IdentifierDecl	nchars = 0		4292575	0					
ANR	4292587	IdentifierDeclType	int		4292575	0					
ANR	4292588	Identifier	nchars		4292575	1					
ANR	4292589	AssignmentExpression	nchars = 0		4292575	2		=			
ANR	4292590	Identifier	nchars		4292575	0					
ANR	4292591	PrimaryExpression	0		4292575	1					
ANR	4292592	IdentifierDeclStatement	int rchars = 0 ;	170:4:5400:5414	4292575	2	True				
ANR	4292593	IdentifierDecl	rchars = 0		4292575	0					
ANR	4292594	IdentifierDeclType	int		4292575	0					
ANR	4292595	Identifier	rchars		4292575	1					
ANR	4292596	AssignmentExpression	rchars = 0		4292575	2		=			
ANR	4292597	Identifier	rchars		4292575	0					
ANR	4292598	PrimaryExpression	0		4292575	1					
ANR	4292599	IdentifierDeclStatement	MyString dst ;	171:4:5420:5432	4292575	3	True				
ANR	4292600	IdentifierDecl	dst		4292575	0					
ANR	4292601	IdentifierDeclType	MyString		4292575	0					
ANR	4292602	Identifier	dst		4292575	1					
ANR	4292603	IdentifierDeclStatement	MyString src ;	172:4:5438:5450	4292575	4	True				
ANR	4292604	IdentifierDecl	src		4292575	0					
ANR	4292605	IdentifierDeclType	MyString		4292575	0					
ANR	4292606	Identifier	src		4292575	1					
ANR	4292607	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF / 2	174:4:5457:5493	4292575	5	True				
ANR	4292608	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF / 2		4292575	0		=			
ANR	4292609	Identifier	nchars		4292575	0					
ANR	4292610	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF / 2		4292575	1		/			
ANR	4292611	Identifier	STL_STRING_UTILS_FIXBUF		4292575	0					
ANR	4292612	PrimaryExpression	2		4292575	1					
ANR	4292613	ExpressionStatement	"src = """""	175:4:5499:5505	4292575	6	True				
ANR	4292614	AssignmentExpression	"src = """""		4292575	0		=			
ANR	4292615	Identifier	src		4292575	0					
ANR	4292616	PrimaryExpression	""""""		4292575	1					
ANR	4292617	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292575	7					
ANR	4292618	ForInit	int j = 0 ;	176:9:5516:5525	4292575	0	True				
ANR	4292619	IdentifierDeclStatement	int j = 0 ;		4292575	0					
ANR	4292620	IdentifierDecl	j = 0		4292575	0					
ANR	4292621	IdentifierDeclType	int		4292575	0					
ANR	4292622	Identifier	j		4292575	1					
ANR	4292623	AssignmentExpression	j = 0		4292575	2		=			
ANR	4292624	Identifier	j		4292575	0					
ANR	4292625	PrimaryExpression	0		4292575	1					
ANR	4292626	Condition	j < nchars	176:21:5528:5537	4292575	1	True				
ANR	4292627	RelationalExpression	j < nchars		4292575	0		<			
ANR	4292628	Identifier	j		4292575	0					
ANR	4292629	Identifier	nchars		4292575	1					
ANR	4292630	UnaryExpression	++ j	176:34:5541:5543	4292575	2	True				
ANR	4292631	IncDec	++		4292575	0					
ANR	4292632	Identifier	j		4292575	1					
ANR	4292633	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	176:39:5546:5573	4292575	3	True				
ANR	4292634	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292575	0		+=			
ANR	4292635	Identifier	src		4292575	0					
ANR	4292636	CallExpression	char ( '0' + ( j % 10 ) )		4292575	1					
ANR	4292637	Callee	char		4292575	0					
ANR	4292638	Identifier	char		4292575	0					
ANR	4292639	ArgumentList	'0' + ( j % 10 )		4292575	1					
ANR	4292640	Argument	'0' + ( j % 10 )		4292575	0					
ANR	4292641	AdditiveExpression	'0' + ( j % 10 )		4292575	0		+			
ANR	4292642	PrimaryExpression	'0'		4292575	0					
ANR	4292643	MultiplicativeExpression	j % 10		4292575	1		%			
ANR	4292644	Identifier	j		4292575	0					
ANR	4292645	PrimaryExpression	10		4292575	1					
ANR	4292646	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	177:4:5579:5619	4292575	8	True				
ANR	4292647	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	0		=			
ANR	4292648	Identifier	rchars		4292575	0					
ANR	4292649	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	1					
ANR	4292650	Callee	sprintf		4292575	0					
ANR	4292651	Identifier	sprintf		4292575	0					
ANR	4292652	ArgumentList	dst		4292575	1					
ANR	4292653	Argument	dst		4292575	0					
ANR	4292654	Identifier	dst		4292575	0					
ANR	4292655	Argument	"""%s"""		4292575	1					
ANR	4292656	PrimaryExpression	"""%s"""		4292575	0					
ANR	4292657	Argument	src . Value ( )		4292575	2					
ANR	4292658	CallExpression	src . Value ( )		4292575	0					
ANR	4292659	Callee	src . Value		4292575	0					
ANR	4292660	MemberAccess	src . Value		4292575	0					
ANR	4292661	Identifier	src		4292575	0					
ANR	4292662	Identifier	Value		4292575	1					
ANR	4292663	ArgumentList			4292575	1					
ANR	4292664	IfStatement	if ( dst != src )		4292575	9					
ANR	4292665	Condition	dst != src	178:8:5629:5638	4292575	0	True				
ANR	4292666	EqualityExpression	dst != src		4292575	0		!=			
ANR	4292667	Identifier	dst		4292575	0					
ANR	4292668	Identifier	src		4292575	1					
ANR	4292669	CompoundStatement		13:20:323:323	4292575	1					
ANR	4292670	ExpressionStatement	FAIL	179:2:5645:5649	4292575	0	True				
ANR	4292671	Identifier	FAIL		4292575	0					
ANR	4292672	IfStatement	if ( rchars != nchars )		4292575	10					
ANR	4292673	Condition	rchars != nchars	181:8:5673:5688	4292575	0	True				
ANR	4292674	EqualityExpression	rchars != nchars		4292575	0		!=			
ANR	4292675	Identifier	rchars		4292575	0					
ANR	4292676	Identifier	nchars		4292575	1					
ANR	4292677	CompoundStatement		16:26:373:373	4292575	1					
ANR	4292678	ExpressionStatement	FAIL	182:2:5695:5699	4292575	0	True				
ANR	4292679	Identifier	FAIL		4292575	0					
ANR	4292680	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF - 1	185:4:5720:5756	4292575	11	True				
ANR	4292681	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF - 1		4292575	0		=			
ANR	4292682	Identifier	nchars		4292575	0					
ANR	4292683	AdditiveExpression	STL_STRING_UTILS_FIXBUF - 1		4292575	1		-			
ANR	4292684	Identifier	STL_STRING_UTILS_FIXBUF		4292575	0					
ANR	4292685	PrimaryExpression	1		4292575	1					
ANR	4292686	ExpressionStatement	"src = """""	186:4:5762:5768	4292575	12	True				
ANR	4292687	AssignmentExpression	"src = """""		4292575	0		=			
ANR	4292688	Identifier	src		4292575	0					
ANR	4292689	PrimaryExpression	""""""		4292575	1					
ANR	4292690	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292575	13					
ANR	4292691	ForInit	int j = 0 ;	187:9:5779:5788	4292575	0	True				
ANR	4292692	IdentifierDeclStatement	int j = 0 ;		4292575	0					
ANR	4292693	IdentifierDecl	j = 0		4292575	0					
ANR	4292694	IdentifierDeclType	int		4292575	0					
ANR	4292695	Identifier	j		4292575	1					
ANR	4292696	AssignmentExpression	j = 0		4292575	2		=			
ANR	4292697	Identifier	j		4292575	0					
ANR	4292698	PrimaryExpression	0		4292575	1					
ANR	4292699	Condition	j < nchars	187:21:5791:5800	4292575	1	True				
ANR	4292700	RelationalExpression	j < nchars		4292575	0		<			
ANR	4292701	Identifier	j		4292575	0					
ANR	4292702	Identifier	nchars		4292575	1					
ANR	4292703	UnaryExpression	++ j	187:34:5804:5806	4292575	2	True				
ANR	4292704	IncDec	++		4292575	0					
ANR	4292705	Identifier	j		4292575	1					
ANR	4292706	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	187:39:5809:5836	4292575	3	True				
ANR	4292707	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292575	0		+=			
ANR	4292708	Identifier	src		4292575	0					
ANR	4292709	CallExpression	char ( '0' + ( j % 10 ) )		4292575	1					
ANR	4292710	Callee	char		4292575	0					
ANR	4292711	Identifier	char		4292575	0					
ANR	4292712	ArgumentList	'0' + ( j % 10 )		4292575	1					
ANR	4292713	Argument	'0' + ( j % 10 )		4292575	0					
ANR	4292714	AdditiveExpression	'0' + ( j % 10 )		4292575	0		+			
ANR	4292715	PrimaryExpression	'0'		4292575	0					
ANR	4292716	MultiplicativeExpression	j % 10		4292575	1		%			
ANR	4292717	Identifier	j		4292575	0					
ANR	4292718	PrimaryExpression	10		4292575	1					
ANR	4292719	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	188:4:5842:5882	4292575	14	True				
ANR	4292720	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	0		=			
ANR	4292721	Identifier	rchars		4292575	0					
ANR	4292722	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	1					
ANR	4292723	Callee	sprintf		4292575	0					
ANR	4292724	Identifier	sprintf		4292575	0					
ANR	4292725	ArgumentList	dst		4292575	1					
ANR	4292726	Argument	dst		4292575	0					
ANR	4292727	Identifier	dst		4292575	0					
ANR	4292728	Argument	"""%s"""		4292575	1					
ANR	4292729	PrimaryExpression	"""%s"""		4292575	0					
ANR	4292730	Argument	src . Value ( )		4292575	2					
ANR	4292731	CallExpression	src . Value ( )		4292575	0					
ANR	4292732	Callee	src . Value		4292575	0					
ANR	4292733	MemberAccess	src . Value		4292575	0					
ANR	4292734	Identifier	src		4292575	0					
ANR	4292735	Identifier	Value		4292575	1					
ANR	4292736	ArgumentList			4292575	1					
ANR	4292737	IfStatement	if ( dst != src )		4292575	15					
ANR	4292738	Condition	dst != src	189:8:5892:5901	4292575	0	True				
ANR	4292739	EqualityExpression	dst != src		4292575	0		!=			
ANR	4292740	Identifier	dst		4292575	0					
ANR	4292741	Identifier	src		4292575	1					
ANR	4292742	CompoundStatement		24:20:586:586	4292575	1					
ANR	4292743	ExpressionStatement	FAIL	190:2:5908:5912	4292575	0	True				
ANR	4292744	Identifier	FAIL		4292575	0					
ANR	4292745	IfStatement	if ( rchars != nchars )		4292575	16					
ANR	4292746	Condition	rchars != nchars	192:8:5936:5951	4292575	0	True				
ANR	4292747	EqualityExpression	rchars != nchars		4292575	0		!=			
ANR	4292748	Identifier	rchars		4292575	0					
ANR	4292749	Identifier	nchars		4292575	1					
ANR	4292750	CompoundStatement		27:26:636:636	4292575	1					
ANR	4292751	ExpressionStatement	FAIL	193:2:5958:5962	4292575	0	True				
ANR	4292752	Identifier	FAIL		4292575	0					
ANR	4292753	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF	196:4:5983:6015	4292575	17	True				
ANR	4292754	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF		4292575	0		=			
ANR	4292755	Identifier	nchars		4292575	0					
ANR	4292756	Identifier	STL_STRING_UTILS_FIXBUF		4292575	1					
ANR	4292757	ExpressionStatement	"src = """""	197:4:6021:6027	4292575	18	True				
ANR	4292758	AssignmentExpression	"src = """""		4292575	0		=			
ANR	4292759	Identifier	src		4292575	0					
ANR	4292760	PrimaryExpression	""""""		4292575	1					
ANR	4292761	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292575	19					
ANR	4292762	ForInit	int j = 0 ;	198:9:6038:6047	4292575	0	True				
ANR	4292763	IdentifierDeclStatement	int j = 0 ;		4292575	0					
ANR	4292764	IdentifierDecl	j = 0		4292575	0					
ANR	4292765	IdentifierDeclType	int		4292575	0					
ANR	4292766	Identifier	j		4292575	1					
ANR	4292767	AssignmentExpression	j = 0		4292575	2		=			
ANR	4292768	Identifier	j		4292575	0					
ANR	4292769	PrimaryExpression	0		4292575	1					
ANR	4292770	Condition	j < nchars	198:21:6050:6059	4292575	1	True				
ANR	4292771	RelationalExpression	j < nchars		4292575	0		<			
ANR	4292772	Identifier	j		4292575	0					
ANR	4292773	Identifier	nchars		4292575	1					
ANR	4292774	UnaryExpression	++ j	198:34:6063:6065	4292575	2	True				
ANR	4292775	IncDec	++		4292575	0					
ANR	4292776	Identifier	j		4292575	1					
ANR	4292777	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	198:39:6068:6095	4292575	3	True				
ANR	4292778	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292575	0		+=			
ANR	4292779	Identifier	src		4292575	0					
ANR	4292780	CallExpression	char ( '0' + ( j % 10 ) )		4292575	1					
ANR	4292781	Callee	char		4292575	0					
ANR	4292782	Identifier	char		4292575	0					
ANR	4292783	ArgumentList	'0' + ( j % 10 )		4292575	1					
ANR	4292784	Argument	'0' + ( j % 10 )		4292575	0					
ANR	4292785	AdditiveExpression	'0' + ( j % 10 )		4292575	0		+			
ANR	4292786	PrimaryExpression	'0'		4292575	0					
ANR	4292787	MultiplicativeExpression	j % 10		4292575	1		%			
ANR	4292788	Identifier	j		4292575	0					
ANR	4292789	PrimaryExpression	10		4292575	1					
ANR	4292790	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	199:4:6101:6141	4292575	20	True				
ANR	4292791	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	0		=			
ANR	4292792	Identifier	rchars		4292575	0					
ANR	4292793	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	1					
ANR	4292794	Callee	sprintf		4292575	0					
ANR	4292795	Identifier	sprintf		4292575	0					
ANR	4292796	ArgumentList	dst		4292575	1					
ANR	4292797	Argument	dst		4292575	0					
ANR	4292798	Identifier	dst		4292575	0					
ANR	4292799	Argument	"""%s"""		4292575	1					
ANR	4292800	PrimaryExpression	"""%s"""		4292575	0					
ANR	4292801	Argument	src . Value ( )		4292575	2					
ANR	4292802	CallExpression	src . Value ( )		4292575	0					
ANR	4292803	Callee	src . Value		4292575	0					
ANR	4292804	MemberAccess	src . Value		4292575	0					
ANR	4292805	Identifier	src		4292575	0					
ANR	4292806	Identifier	Value		4292575	1					
ANR	4292807	ArgumentList			4292575	1					
ANR	4292808	IfStatement	if ( dst != src )		4292575	21					
ANR	4292809	Condition	dst != src	200:8:6151:6160	4292575	0	True				
ANR	4292810	EqualityExpression	dst != src		4292575	0		!=			
ANR	4292811	Identifier	dst		4292575	0					
ANR	4292812	Identifier	src		4292575	1					
ANR	4292813	CompoundStatement		35:20:845:845	4292575	1					
ANR	4292814	ExpressionStatement	FAIL	201:2:6167:6171	4292575	0	True				
ANR	4292815	Identifier	FAIL		4292575	0					
ANR	4292816	IfStatement	if ( rchars != nchars )		4292575	22					
ANR	4292817	Condition	rchars != nchars	203:8:6195:6210	4292575	0	True				
ANR	4292818	EqualityExpression	rchars != nchars		4292575	0		!=			
ANR	4292819	Identifier	rchars		4292575	0					
ANR	4292820	Identifier	nchars		4292575	1					
ANR	4292821	CompoundStatement		38:26:895:895	4292575	1					
ANR	4292822	ExpressionStatement	FAIL	204:2:6217:6221	4292575	0	True				
ANR	4292823	Identifier	FAIL		4292575	0					
ANR	4292824	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF + 1	207:4:6242:6278	4292575	23	True				
ANR	4292825	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF + 1		4292575	0		=			
ANR	4292826	Identifier	nchars		4292575	0					
ANR	4292827	AdditiveExpression	STL_STRING_UTILS_FIXBUF + 1		4292575	1		+			
ANR	4292828	Identifier	STL_STRING_UTILS_FIXBUF		4292575	0					
ANR	4292829	PrimaryExpression	1		4292575	1					
ANR	4292830	ExpressionStatement	"src = """""	208:4:6284:6290	4292575	24	True				
ANR	4292831	AssignmentExpression	"src = """""		4292575	0		=			
ANR	4292832	Identifier	src		4292575	0					
ANR	4292833	PrimaryExpression	""""""		4292575	1					
ANR	4292834	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292575	25					
ANR	4292835	ForInit	int j = 0 ;	209:9:6301:6310	4292575	0	True				
ANR	4292836	IdentifierDeclStatement	int j = 0 ;		4292575	0					
ANR	4292837	IdentifierDecl	j = 0		4292575	0					
ANR	4292838	IdentifierDeclType	int		4292575	0					
ANR	4292839	Identifier	j		4292575	1					
ANR	4292840	AssignmentExpression	j = 0		4292575	2		=			
ANR	4292841	Identifier	j		4292575	0					
ANR	4292842	PrimaryExpression	0		4292575	1					
ANR	4292843	Condition	j < nchars	209:21:6313:6322	4292575	1	True				
ANR	4292844	RelationalExpression	j < nchars		4292575	0		<			
ANR	4292845	Identifier	j		4292575	0					
ANR	4292846	Identifier	nchars		4292575	1					
ANR	4292847	UnaryExpression	++ j	209:34:6326:6328	4292575	2	True				
ANR	4292848	IncDec	++		4292575	0					
ANR	4292849	Identifier	j		4292575	1					
ANR	4292850	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	209:39:6331:6358	4292575	3	True				
ANR	4292851	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292575	0		+=			
ANR	4292852	Identifier	src		4292575	0					
ANR	4292853	CallExpression	char ( '0' + ( j % 10 ) )		4292575	1					
ANR	4292854	Callee	char		4292575	0					
ANR	4292855	Identifier	char		4292575	0					
ANR	4292856	ArgumentList	'0' + ( j % 10 )		4292575	1					
ANR	4292857	Argument	'0' + ( j % 10 )		4292575	0					
ANR	4292858	AdditiveExpression	'0' + ( j % 10 )		4292575	0		+			
ANR	4292859	PrimaryExpression	'0'		4292575	0					
ANR	4292860	MultiplicativeExpression	j % 10		4292575	1		%			
ANR	4292861	Identifier	j		4292575	0					
ANR	4292862	PrimaryExpression	10		4292575	1					
ANR	4292863	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	210:4:6364:6404	4292575	26	True				
ANR	4292864	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	0		=			
ANR	4292865	Identifier	rchars		4292575	0					
ANR	4292866	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	1					
ANR	4292867	Callee	sprintf		4292575	0					
ANR	4292868	Identifier	sprintf		4292575	0					
ANR	4292869	ArgumentList	dst		4292575	1					
ANR	4292870	Argument	dst		4292575	0					
ANR	4292871	Identifier	dst		4292575	0					
ANR	4292872	Argument	"""%s"""		4292575	1					
ANR	4292873	PrimaryExpression	"""%s"""		4292575	0					
ANR	4292874	Argument	src . Value ( )		4292575	2					
ANR	4292875	CallExpression	src . Value ( )		4292575	0					
ANR	4292876	Callee	src . Value		4292575	0					
ANR	4292877	MemberAccess	src . Value		4292575	0					
ANR	4292878	Identifier	src		4292575	0					
ANR	4292879	Identifier	Value		4292575	1					
ANR	4292880	ArgumentList			4292575	1					
ANR	4292881	IfStatement	if ( dst != src )		4292575	27					
ANR	4292882	Condition	dst != src	211:8:6414:6423	4292575	0	True				
ANR	4292883	EqualityExpression	dst != src		4292575	0		!=			
ANR	4292884	Identifier	dst		4292575	0					
ANR	4292885	Identifier	src		4292575	1					
ANR	4292886	CompoundStatement		46:20:1108:1108	4292575	1					
ANR	4292887	ExpressionStatement	FAIL	212:2:6430:6434	4292575	0	True				
ANR	4292888	Identifier	FAIL		4292575	0					
ANR	4292889	IfStatement	if ( rchars != nchars )		4292575	28					
ANR	4292890	Condition	rchars != nchars	214:8:6458:6473	4292575	0	True				
ANR	4292891	EqualityExpression	rchars != nchars		4292575	0		!=			
ANR	4292892	Identifier	rchars		4292575	0					
ANR	4292893	Identifier	nchars		4292575	1					
ANR	4292894	CompoundStatement		49:26:1158:1158	4292575	1					
ANR	4292895	ExpressionStatement	FAIL	215:2:6480:6484	4292575	0	True				
ANR	4292896	Identifier	FAIL		4292575	0					
ANR	4292897	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF * 2	218:4:6505:6541	4292575	29	True				
ANR	4292898	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF * 2		4292575	0		=			
ANR	4292899	Identifier	nchars		4292575	0					
ANR	4292900	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF * 2		4292575	1		*			
ANR	4292901	Identifier	STL_STRING_UTILS_FIXBUF		4292575	0					
ANR	4292902	PrimaryExpression	2		4292575	1					
ANR	4292903	ExpressionStatement	"src = """""	219:4:6547:6553	4292575	30	True				
ANR	4292904	AssignmentExpression	"src = """""		4292575	0		=			
ANR	4292905	Identifier	src		4292575	0					
ANR	4292906	PrimaryExpression	""""""		4292575	1					
ANR	4292907	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		4292575	31					
ANR	4292908	ForInit	int j = 0 ;	220:9:6564:6573	4292575	0	True				
ANR	4292909	IdentifierDeclStatement	int j = 0 ;		4292575	0					
ANR	4292910	IdentifierDecl	j = 0		4292575	0					
ANR	4292911	IdentifierDeclType	int		4292575	0					
ANR	4292912	Identifier	j		4292575	1					
ANR	4292913	AssignmentExpression	j = 0		4292575	2		=			
ANR	4292914	Identifier	j		4292575	0					
ANR	4292915	PrimaryExpression	0		4292575	1					
ANR	4292916	Condition	j < nchars	220:21:6576:6585	4292575	1	True				
ANR	4292917	RelationalExpression	j < nchars		4292575	0		<			
ANR	4292918	Identifier	j		4292575	0					
ANR	4292919	Identifier	nchars		4292575	1					
ANR	4292920	UnaryExpression	++ j	220:34:6589:6591	4292575	2	True				
ANR	4292921	IncDec	++		4292575	0					
ANR	4292922	Identifier	j		4292575	1					
ANR	4292923	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	220:39:6594:6621	4292575	3	True				
ANR	4292924	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		4292575	0		+=			
ANR	4292925	Identifier	src		4292575	0					
ANR	4292926	CallExpression	char ( '0' + ( j % 10 ) )		4292575	1					
ANR	4292927	Callee	char		4292575	0					
ANR	4292928	Identifier	char		4292575	0					
ANR	4292929	ArgumentList	'0' + ( j % 10 )		4292575	1					
ANR	4292930	Argument	'0' + ( j % 10 )		4292575	0					
ANR	4292931	AdditiveExpression	'0' + ( j % 10 )		4292575	0		+			
ANR	4292932	PrimaryExpression	'0'		4292575	0					
ANR	4292933	MultiplicativeExpression	j % 10		4292575	1		%			
ANR	4292934	Identifier	j		4292575	0					
ANR	4292935	PrimaryExpression	10		4292575	1					
ANR	4292936	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	221:4:6627:6667	4292575	32	True				
ANR	4292937	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	0		=			
ANR	4292938	Identifier	rchars		4292575	0					
ANR	4292939	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		4292575	1					
ANR	4292940	Callee	sprintf		4292575	0					
ANR	4292941	Identifier	sprintf		4292575	0					
ANR	4292942	ArgumentList	dst		4292575	1					
ANR	4292943	Argument	dst		4292575	0					
ANR	4292944	Identifier	dst		4292575	0					
ANR	4292945	Argument	"""%s"""		4292575	1					
ANR	4292946	PrimaryExpression	"""%s"""		4292575	0					
ANR	4292947	Argument	src . Value ( )		4292575	2					
ANR	4292948	CallExpression	src . Value ( )		4292575	0					
ANR	4292949	Callee	src . Value		4292575	0					
ANR	4292950	MemberAccess	src . Value		4292575	0					
ANR	4292951	Identifier	src		4292575	0					
ANR	4292952	Identifier	Value		4292575	1					
ANR	4292953	ArgumentList			4292575	1					
ANR	4292954	IfStatement	if ( dst != src )		4292575	33					
ANR	4292955	Condition	dst != src	222:8:6677:6686	4292575	0	True				
ANR	4292956	EqualityExpression	dst != src		4292575	0		!=			
ANR	4292957	Identifier	dst		4292575	0					
ANR	4292958	Identifier	src		4292575	1					
ANR	4292959	CompoundStatement		57:20:1371:1371	4292575	1					
ANR	4292960	ExpressionStatement	FAIL	223:2:6693:6697	4292575	0	True				
ANR	4292961	Identifier	FAIL		4292575	0					
ANR	4292962	IfStatement	if ( rchars != nchars )		4292575	34					
ANR	4292963	Condition	rchars != nchars	225:8:6721:6736	4292575	0	True				
ANR	4292964	EqualityExpression	rchars != nchars		4292575	0		!=			
ANR	4292965	Identifier	rchars		4292575	0					
ANR	4292966	Identifier	nchars		4292575	1					
ANR	4292967	CompoundStatement		60:26:1421:1421	4292575	1					
ANR	4292968	ExpressionStatement	FAIL	226:2:6743:6747	4292575	0	True				
ANR	4292969	Identifier	FAIL		4292575	0					
ANR	4292970	ExpressionStatement	PASS	229:1:6765:6769	4292575	35	True				
ANR	4292971	Identifier	PASS		4292575	0					
ANR	4292972	ReturnType	static bool		4292575	1					
ANR	4292973	Identifier	test_sprintf_MyString		4292575	2					
ANR	4292974	ParameterList			4292575	3					
ANR	4292975	CFGEntryNode	ENTRY		4292575		True				
ANR	4292976	CFGExitNode	EXIT		4292575		True				
ANR	4292977	Symbol	src . Value		4292575						
ANR	4292978	Symbol	dst		4292575						
ANR	4292979	Symbol	STL_STRING_UTILS_FIXBUF		4292575						
ANR	4292980	Symbol	src		4292575						
ANR	4292981	Symbol	nchars		4292575						
ANR	4292982	Symbol	rchars		4292575						
ANR	4292983	Symbol	char		4292575						
ANR	4292984	Symbol	j		4292575						
ANR	4292985	Symbol	sprintf		4292575						
ANR	4292986	Function	test_sprintf_cat_string	232:0:6774:7041							
ANR	4292987	FunctionDef	test_sprintf_cat_string ()		4292986	0					
ANR	4292988	CompoundStatement		232:38:6812:7041	4292986	0					
ANR	4292989	ExpressionStatement	"emit_test ( ""Test sprintf_cat overloading for std::string"" )"	233:4:6818:6875	4292986	0	True				
ANR	4292990	CallExpression	"emit_test ( ""Test sprintf_cat overloading for std::string"" )"		4292986	0					
ANR	4292991	Callee	emit_test		4292986	0					
ANR	4292992	Identifier	emit_test		4292986	0					
ANR	4292993	ArgumentList	"""Test sprintf_cat overloading for std::string"""		4292986	1					
ANR	4292994	Argument	"""Test sprintf_cat overloading for std::string"""		4292986	0					
ANR	4292995	PrimaryExpression	"""Test sprintf_cat overloading for std::string"""		4292986	0					
ANR	4292996	IdentifierDeclStatement	"std :: string s = ""foo"" ;"	235:4:6882:6903	4292986	1	True				
ANR	4292997	IdentifierDecl	"s = ""foo"""		4292986	0					
ANR	4292998	IdentifierDeclType	std :: string		4292986	0					
ANR	4292999	Identifier	s		4292986	1					
ANR	4293000	AssignmentExpression	"s = ""foo"""		4292986	2		=			
ANR	4293001	Identifier	s		4292986	0					
ANR	4293002	PrimaryExpression	"""foo"""		4292986	1					
ANR	4293003	IdentifierDeclStatement	"int r = sprintf_cat ( s , ""%s"" , ""bar"" ) ;"	236:4:6909:6944	4292986	2	True				
ANR	4293004	IdentifierDecl	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		4292986	0					
ANR	4293005	IdentifierDeclType	int		4292986	0					
ANR	4293006	Identifier	r		4292986	1					
ANR	4293007	AssignmentExpression	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		4292986	2		=			
ANR	4293008	Identifier	r		4292986	0					
ANR	4293009	CallExpression	"sprintf_cat ( s , ""%s"" , ""bar"" )"		4292986	1					
ANR	4293010	Callee	sprintf_cat		4292986	0					
ANR	4293011	Identifier	sprintf_cat		4292986	0					
ANR	4293012	ArgumentList	s		4292986	1					
ANR	4293013	Argument	s		4292986	0					
ANR	4293014	Identifier	s		4292986	0					
ANR	4293015	Argument	"""%s"""		4292986	1					
ANR	4293016	PrimaryExpression	"""%s"""		4292986	0					
ANR	4293017	Argument	"""bar"""		4292986	2					
ANR	4293018	PrimaryExpression	"""bar"""		4292986	0					
ANR	4293019	IfStatement	"if ( s != ""foobar"" )"		4292986	3					
ANR	4293020	Condition	"s != ""foobar"""	237:8:6954:6966	4292986	0	True				
ANR	4293021	EqualityExpression	"s != ""foobar"""		4292986	0		!=			
ANR	4293022	Identifier	s		4292986	0					
ANR	4293023	PrimaryExpression	"""foobar"""		4292986	1					
ANR	4293024	CompoundStatement		6:23:156:156	4292986	1					
ANR	4293025	ExpressionStatement	FAIL	238:2:6973:6977	4292986	0	True				
ANR	4293026	Identifier	FAIL		4292986	0					
ANR	4293027	IfStatement	if ( r != 3 )		4292986	4					
ANR	4293028	Condition	r != 3	240:8:7001:7006	4292986	0	True				
ANR	4293029	EqualityExpression	r != 3		4292986	0		!=			
ANR	4293030	Identifier	r		4292986	0					
ANR	4293031	PrimaryExpression	3		4292986	1					
ANR	4293032	CompoundStatement		9:16:196:196	4292986	1					
ANR	4293033	ExpressionStatement	FAIL	241:2:7013:7017	4292986	0	True				
ANR	4293034	Identifier	FAIL		4292986	0					
ANR	4293035	ExpressionStatement	PASS	244:1:7035:7039	4292986	5	True				
ANR	4293036	Identifier	PASS		4292986	0					
ANR	4293037	ReturnType	static bool		4292986	1					
ANR	4293038	Identifier	test_sprintf_cat_string		4292986	2					
ANR	4293039	ParameterList			4292986	3					
ANR	4293040	CFGEntryNode	ENTRY		4292986		True				
ANR	4293041	CFGExitNode	EXIT		4292986		True				
ANR	4293042	Symbol	r		4292986						
ANR	4293043	Symbol	s		4292986						
ANR	4293044	Symbol	sprintf_cat		4292986						
ANR	4293045	Function	test_sprintf_cat_MyString	247:0:7044:7311							
ANR	4293046	FunctionDef	test_sprintf_cat_MyString ()		4293045	0					
ANR	4293047	CompoundStatement		247:40:7084:7311	4293045	0					
ANR	4293048	ExpressionStatement	"emit_test ( ""Test sprintf_cat overloading for MyString"" )"	248:4:7090:7144	4293045	0	True				
ANR	4293049	CallExpression	"emit_test ( ""Test sprintf_cat overloading for MyString"" )"		4293045	0					
ANR	4293050	Callee	emit_test		4293045	0					
ANR	4293051	Identifier	emit_test		4293045	0					
ANR	4293052	ArgumentList	"""Test sprintf_cat overloading for MyString"""		4293045	1					
ANR	4293053	Argument	"""Test sprintf_cat overloading for MyString"""		4293045	0					
ANR	4293054	PrimaryExpression	"""Test sprintf_cat overloading for MyString"""		4293045	0					
ANR	4293055	IdentifierDeclStatement	"MyString s = ""foo"" ;"	250:4:7151:7169	4293045	1	True				
ANR	4293056	IdentifierDecl	"s = ""foo"""		4293045	0					
ANR	4293057	IdentifierDeclType	MyString		4293045	0					
ANR	4293058	Identifier	s		4293045	1					
ANR	4293059	AssignmentExpression	"s = ""foo"""		4293045	2		=			
ANR	4293060	Identifier	s		4293045	0					
ANR	4293061	PrimaryExpression	"""foo"""		4293045	1					
ANR	4293062	IdentifierDeclStatement	"int r = sprintf_cat ( s , ""%s"" , ""bar"" ) ;"	251:4:7175:7210	4293045	2	True				
ANR	4293063	IdentifierDecl	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		4293045	0					
ANR	4293064	IdentifierDeclType	int		4293045	0					
ANR	4293065	Identifier	r		4293045	1					
ANR	4293066	AssignmentExpression	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		4293045	2		=			
ANR	4293067	Identifier	r		4293045	0					
ANR	4293068	CallExpression	"sprintf_cat ( s , ""%s"" , ""bar"" )"		4293045	1					
ANR	4293069	Callee	sprintf_cat		4293045	0					
ANR	4293070	Identifier	sprintf_cat		4293045	0					
ANR	4293071	ArgumentList	s		4293045	1					
ANR	4293072	Argument	s		4293045	0					
ANR	4293073	Identifier	s		4293045	0					
ANR	4293074	Argument	"""%s"""		4293045	1					
ANR	4293075	PrimaryExpression	"""%s"""		4293045	0					
ANR	4293076	Argument	"""bar"""		4293045	2					
ANR	4293077	PrimaryExpression	"""bar"""		4293045	0					
ANR	4293078	IfStatement	"if ( s != ""foobar"" )"		4293045	3					
ANR	4293079	Condition	"s != ""foobar"""	252:8:7220:7232	4293045	0	True				
ANR	4293080	EqualityExpression	"s != ""foobar"""		4293045	0		!=			
ANR	4293081	Identifier	s		4293045	0					
ANR	4293082	PrimaryExpression	"""foobar"""		4293045	1					
ANR	4293083	CompoundStatement		6:23:150:150	4293045	1					
ANR	4293084	ExpressionStatement	FAIL	253:2:7239:7243	4293045	0	True				
ANR	4293085	Identifier	FAIL		4293045	0					
ANR	4293086	IfStatement	if ( r != 3 )		4293045	4					
ANR	4293087	Condition	r != 3	255:8:7267:7272	4293045	0	True				
ANR	4293088	EqualityExpression	r != 3		4293045	0		!=			
ANR	4293089	Identifier	r		4293045	0					
ANR	4293090	PrimaryExpression	3		4293045	1					
ANR	4293091	CompoundStatement		9:16:190:190	4293045	1					
ANR	4293092	ExpressionStatement	FAIL	256:2:7279:7283	4293045	0	True				
ANR	4293093	Identifier	FAIL		4293045	0					
ANR	4293094	ExpressionStatement	PASS	259:1:7305:7309	4293045	5	True				
ANR	4293095	Identifier	PASS		4293045	0					
ANR	4293096	ReturnType	static bool		4293045	1					
ANR	4293097	Identifier	test_sprintf_cat_MyString		4293045	2					
ANR	4293098	ParameterList			4293045	3					
ANR	4293099	CFGEntryNode	ENTRY		4293045		True				
ANR	4293100	CFGExitNode	EXIT		4293045		True				
ANR	4293101	Symbol	r		4293045						
ANR	4293102	Symbol	s		4293045						
ANR	4293103	Symbol	sprintf_cat		4293045						
ANR	4293104	Function	test_comparison_ops_lhs_string	262:0:7314:8685							
ANR	4293105	FunctionDef	test_comparison_ops_lhs_string ()		4293104	0					
ANR	4293106	CompoundStatement		262:45:7359:8685	4293104	0					
ANR	4293107	ExpressionStatement	"emit_test ( ""Test comparison operators: LHS is std::string and RHS is MyString"" )"	263:4:7365:7443	4293104	0	True				
ANR	4293108	CallExpression	"emit_test ( ""Test comparison operators: LHS is std::string and RHS is MyString"" )"		4293104	0					
ANR	4293109	Callee	emit_test		4293104	0					
ANR	4293110	Identifier	emit_test		4293104	0					
ANR	4293111	ArgumentList	"""Test comparison operators: LHS is std::string and RHS is MyString"""		4293104	1					
ANR	4293112	Argument	"""Test comparison operators: LHS is std::string and RHS is MyString"""		4293104	0					
ANR	4293113	PrimaryExpression	"""Test comparison operators: LHS is std::string and RHS is MyString"""		4293104	0					
ANR	4293114	IdentifierDeclStatement	std :: string lhs ;	265:4:7450:7465	4293104	1	True				
ANR	4293115	IdentifierDecl	lhs		4293104	0					
ANR	4293116	IdentifierDeclType	std :: string		4293104	0					
ANR	4293117	Identifier	lhs		4293104	1					
ANR	4293118	IdentifierDeclStatement	MyString rhs ;	266:4:7471:7483	4293104	2	True				
ANR	4293119	IdentifierDecl	rhs		4293104	0					
ANR	4293120	IdentifierDeclType	MyString		4293104	0					
ANR	4293121	Identifier	rhs		4293104	1					
ANR	4293122	ExpressionStatement	"lhs = ""a"""	269:4:7532:7541	4293104	3	True				
ANR	4293123	AssignmentExpression	"lhs = ""a"""		4293104	0		=			
ANR	4293124	Identifier	lhs		4293104	0					
ANR	4293125	PrimaryExpression	"""a"""		4293104	1					
ANR	4293126	ExpressionStatement	"rhs = ""a"""	270:4:7547:7556	4293104	4	True				
ANR	4293127	AssignmentExpression	"rhs = ""a"""		4293104	0		=			
ANR	4293128	Identifier	rhs		4293104	0					
ANR	4293129	PrimaryExpression	"""a"""		4293104	1					
ANR	4293130	IfStatement	if ( ( lhs == rhs ) != true )		4293104	5					
ANR	4293131	Condition	( lhs == rhs ) != true	271:8:7566:7585	4293104	0	True				
ANR	4293132	EqualityExpression	( lhs == rhs ) != true		4293104	0		!=			
ANR	4293133	EqualityExpression	lhs == rhs		4293104	0		==			
ANR	4293134	Identifier	lhs		4293104	0					
ANR	4293135	Identifier	rhs		4293104	1					
ANR	4293136	Identifier	true		4293104	1					
ANR	4293137	CompoundStatement		10:30:228:228	4293104	1					
ANR	4293138	ExpressionStatement	FAIL	272:2:7592:7596	4293104	0	True				
ANR	4293139	Identifier	FAIL		4293104	0					
ANR	4293140	IfStatement	if ( ( lhs != rhs ) != false )		4293104	6					
ANR	4293141	Condition	( lhs != rhs ) != false	274:8:7620:7640	4293104	0	True				
ANR	4293142	EqualityExpression	( lhs != rhs ) != false		4293104	0		!=			
ANR	4293143	EqualityExpression	lhs != rhs		4293104	0		!=			
ANR	4293144	Identifier	lhs		4293104	0					
ANR	4293145	Identifier	rhs		4293104	1					
ANR	4293146	Identifier	false		4293104	1					
ANR	4293147	CompoundStatement		13:31:283:283	4293104	1					
ANR	4293148	ExpressionStatement	FAIL	275:2:7647:7651	4293104	0	True				
ANR	4293149	Identifier	FAIL		4293104	0					
ANR	4293150	IfStatement	if ( ( lhs < rhs ) != false )		4293104	7					
ANR	4293151	Condition	( lhs < rhs ) != false	277:8:7675:7694	4293104	0	True				
ANR	4293152	EqualityExpression	( lhs < rhs ) != false		4293104	0		!=			
ANR	4293153	RelationalExpression	lhs < rhs		4293104	0		<			
ANR	4293154	Identifier	lhs		4293104	0					
ANR	4293155	Identifier	rhs		4293104	1					
ANR	4293156	Identifier	false		4293104	1					
ANR	4293157	CompoundStatement		16:30:337:337	4293104	1					
ANR	4293158	ExpressionStatement	FAIL	278:2:7701:7705	4293104	0	True				
ANR	4293159	Identifier	FAIL		4293104	0					
ANR	4293160	IfStatement	if ( ( lhs > rhs ) != false )		4293104	8					
ANR	4293161	Condition	( lhs > rhs ) != false	280:8:7729:7748	4293104	0	True				
ANR	4293162	EqualityExpression	( lhs > rhs ) != false		4293104	0		!=			
ANR	4293163	RelationalExpression	lhs > rhs		4293104	0		>			
ANR	4293164	Identifier	lhs		4293104	0					
ANR	4293165	Identifier	rhs		4293104	1					
ANR	4293166	Identifier	false		4293104	1					
ANR	4293167	CompoundStatement		19:30:391:391	4293104	1					
ANR	4293168	ExpressionStatement	FAIL	281:2:7755:7759	4293104	0	True				
ANR	4293169	Identifier	FAIL		4293104	0					
ANR	4293170	IfStatement	if ( ( lhs <= rhs ) != true )		4293104	9					
ANR	4293171	Condition	( lhs <= rhs ) != true	283:8:7783:7802	4293104	0	True				
ANR	4293172	EqualityExpression	( lhs <= rhs ) != true		4293104	0		!=			
ANR	4293173	RelationalExpression	lhs <= rhs		4293104	0		<=			
ANR	4293174	Identifier	lhs		4293104	0					
ANR	4293175	Identifier	rhs		4293104	1					
ANR	4293176	Identifier	true		4293104	1					
ANR	4293177	CompoundStatement		22:30:445:445	4293104	1					
ANR	4293178	ExpressionStatement	FAIL	284:2:7809:7813	4293104	0	True				
ANR	4293179	Identifier	FAIL		4293104	0					
ANR	4293180	IfStatement	if ( ( lhs >= rhs ) != true )		4293104	10					
ANR	4293181	Condition	( lhs >= rhs ) != true	286:8:7837:7856	4293104	0	True				
ANR	4293182	EqualityExpression	( lhs >= rhs ) != true		4293104	0		!=			
ANR	4293183	RelationalExpression	lhs >= rhs		4293104	0		>=			
ANR	4293184	Identifier	lhs		4293104	0					
ANR	4293185	Identifier	rhs		4293104	1					
ANR	4293186	Identifier	true		4293104	1					
ANR	4293187	CompoundStatement		25:30:499:499	4293104	1					
ANR	4293188	ExpressionStatement	FAIL	287:2:7863:7867	4293104	0	True				
ANR	4293189	Identifier	FAIL		4293104	0					
ANR	4293190	ExpressionStatement	"lhs = ""a"""	291:4:7929:7938	4293104	11	True				
ANR	4293191	AssignmentExpression	"lhs = ""a"""		4293104	0		=			
ANR	4293192	Identifier	lhs		4293104	0					
ANR	4293193	PrimaryExpression	"""a"""		4293104	1					
ANR	4293194	ExpressionStatement	"rhs = ""b"""	292:4:7944:7953	4293104	12	True				
ANR	4293195	AssignmentExpression	"rhs = ""b"""		4293104	0		=			
ANR	4293196	Identifier	rhs		4293104	0					
ANR	4293197	PrimaryExpression	"""b"""		4293104	1					
ANR	4293198	IfStatement	if ( ( lhs == rhs ) != false )		4293104	13					
ANR	4293199	Condition	( lhs == rhs ) != false	293:8:7963:7983	4293104	0	True				
ANR	4293200	EqualityExpression	( lhs == rhs ) != false		4293104	0		!=			
ANR	4293201	EqualityExpression	lhs == rhs		4293104	0		==			
ANR	4293202	Identifier	lhs		4293104	0					
ANR	4293203	Identifier	rhs		4293104	1					
ANR	4293204	Identifier	false		4293104	1					
ANR	4293205	CompoundStatement		32:31:626:626	4293104	1					
ANR	4293206	ExpressionStatement	FAIL	294:2:7990:7994	4293104	0	True				
ANR	4293207	Identifier	FAIL		4293104	0					
ANR	4293208	IfStatement	if ( ( lhs != rhs ) != true )		4293104	14					
ANR	4293209	Condition	( lhs != rhs ) != true	296:8:8018:8037	4293104	0	True				
ANR	4293210	EqualityExpression	( lhs != rhs ) != true		4293104	0		!=			
ANR	4293211	EqualityExpression	lhs != rhs		4293104	0		!=			
ANR	4293212	Identifier	lhs		4293104	0					
ANR	4293213	Identifier	rhs		4293104	1					
ANR	4293214	Identifier	true		4293104	1					
ANR	4293215	CompoundStatement		35:30:680:680	4293104	1					
ANR	4293216	ExpressionStatement	FAIL	297:2:8044:8048	4293104	0	True				
ANR	4293217	Identifier	FAIL		4293104	0					
ANR	4293218	IfStatement	if ( ( lhs < rhs ) != true )		4293104	15					
ANR	4293219	Condition	( lhs < rhs ) != true	299:8:8072:8090	4293104	0	True				
ANR	4293220	EqualityExpression	( lhs < rhs ) != true		4293104	0		!=			
ANR	4293221	RelationalExpression	lhs < rhs		4293104	0		<			
ANR	4293222	Identifier	lhs		4293104	0					
ANR	4293223	Identifier	rhs		4293104	1					
ANR	4293224	Identifier	true		4293104	1					
ANR	4293225	CompoundStatement		38:29:733:733	4293104	1					
ANR	4293226	ExpressionStatement	FAIL	300:2:8097:8101	4293104	0	True				
ANR	4293227	Identifier	FAIL		4293104	0					
ANR	4293228	IfStatement	if ( ( lhs > rhs ) != false )		4293104	16					
ANR	4293229	Condition	( lhs > rhs ) != false	302:8:8125:8144	4293104	0	True				
ANR	4293230	EqualityExpression	( lhs > rhs ) != false		4293104	0		!=			
ANR	4293231	RelationalExpression	lhs > rhs		4293104	0		>			
ANR	4293232	Identifier	lhs		4293104	0					
ANR	4293233	Identifier	rhs		4293104	1					
ANR	4293234	Identifier	false		4293104	1					
ANR	4293235	CompoundStatement		41:30:787:787	4293104	1					
ANR	4293236	ExpressionStatement	FAIL	303:2:8151:8155	4293104	0	True				
ANR	4293237	Identifier	FAIL		4293104	0					
ANR	4293238	IfStatement	if ( ( lhs <= rhs ) != true )		4293104	17					
ANR	4293239	Condition	( lhs <= rhs ) != true	305:8:8179:8198	4293104	0	True				
ANR	4293240	EqualityExpression	( lhs <= rhs ) != true		4293104	0		!=			
ANR	4293241	RelationalExpression	lhs <= rhs		4293104	0		<=			
ANR	4293242	Identifier	lhs		4293104	0					
ANR	4293243	Identifier	rhs		4293104	1					
ANR	4293244	Identifier	true		4293104	1					
ANR	4293245	CompoundStatement		44:30:841:841	4293104	1					
ANR	4293246	ExpressionStatement	FAIL	306:2:8205:8209	4293104	0	True				
ANR	4293247	Identifier	FAIL		4293104	0					
ANR	4293248	IfStatement	if ( ( lhs >= rhs ) != false )		4293104	18					
ANR	4293249	Condition	( lhs >= rhs ) != false	308:8:8233:8253	4293104	0	True				
ANR	4293250	EqualityExpression	( lhs >= rhs ) != false		4293104	0		!=			
ANR	4293251	RelationalExpression	lhs >= rhs		4293104	0		>=			
ANR	4293252	Identifier	lhs		4293104	0					
ANR	4293253	Identifier	rhs		4293104	1					
ANR	4293254	Identifier	false		4293104	1					
ANR	4293255	CompoundStatement		47:31:896:896	4293104	1					
ANR	4293256	ExpressionStatement	FAIL	309:2:8260:8264	4293104	0	True				
ANR	4293257	Identifier	FAIL		4293104	0					
ANR	4293258	ExpressionStatement	"lhs = ""b"""	313:4:8326:8335	4293104	19	True				
ANR	4293259	AssignmentExpression	"lhs = ""b"""		4293104	0		=			
ANR	4293260	Identifier	lhs		4293104	0					
ANR	4293261	PrimaryExpression	"""b"""		4293104	1					
ANR	4293262	ExpressionStatement	"rhs = ""a"""	314:4:8341:8350	4293104	20	True				
ANR	4293263	AssignmentExpression	"rhs = ""a"""		4293104	0		=			
ANR	4293264	Identifier	rhs		4293104	0					
ANR	4293265	PrimaryExpression	"""a"""		4293104	1					
ANR	4293266	IfStatement	if ( ( lhs == rhs ) != false )		4293104	21					
ANR	4293267	Condition	( lhs == rhs ) != false	315:8:8360:8380	4293104	0	True				
ANR	4293268	EqualityExpression	( lhs == rhs ) != false		4293104	0		!=			
ANR	4293269	EqualityExpression	lhs == rhs		4293104	0		==			
ANR	4293270	Identifier	lhs		4293104	0					
ANR	4293271	Identifier	rhs		4293104	1					
ANR	4293272	Identifier	false		4293104	1					
ANR	4293273	CompoundStatement		54:31:1023:1023	4293104	1					
ANR	4293274	ExpressionStatement	FAIL	316:2:8387:8391	4293104	0	True				
ANR	4293275	Identifier	FAIL		4293104	0					
ANR	4293276	IfStatement	if ( ( lhs != rhs ) != true )		4293104	22					
ANR	4293277	Condition	( lhs != rhs ) != true	318:8:8415:8434	4293104	0	True				
ANR	4293278	EqualityExpression	( lhs != rhs ) != true		4293104	0		!=			
ANR	4293279	EqualityExpression	lhs != rhs		4293104	0		!=			
ANR	4293280	Identifier	lhs		4293104	0					
ANR	4293281	Identifier	rhs		4293104	1					
ANR	4293282	Identifier	true		4293104	1					
ANR	4293283	CompoundStatement		57:30:1077:1077	4293104	1					
ANR	4293284	ExpressionStatement	FAIL	319:2:8441:8445	4293104	0	True				
ANR	4293285	Identifier	FAIL		4293104	0					
ANR	4293286	IfStatement	if ( ( lhs < rhs ) != false )		4293104	23					
ANR	4293287	Condition	( lhs < rhs ) != false	321:8:8469:8488	4293104	0	True				
ANR	4293288	EqualityExpression	( lhs < rhs ) != false		4293104	0		!=			
ANR	4293289	RelationalExpression	lhs < rhs		4293104	0		<			
ANR	4293290	Identifier	lhs		4293104	0					
ANR	4293291	Identifier	rhs		4293104	1					
ANR	4293292	Identifier	false		4293104	1					
ANR	4293293	CompoundStatement		60:30:1131:1131	4293104	1					
ANR	4293294	ExpressionStatement	FAIL	322:2:8495:8499	4293104	0	True				
ANR	4293295	Identifier	FAIL		4293104	0					
ANR	4293296	IfStatement	if ( ( lhs > rhs ) != true )		4293104	24					
ANR	4293297	Condition	( lhs > rhs ) != true	324:8:8523:8541	4293104	0	True				
ANR	4293298	EqualityExpression	( lhs > rhs ) != true		4293104	0		!=			
ANR	4293299	RelationalExpression	lhs > rhs		4293104	0		>			
ANR	4293300	Identifier	lhs		4293104	0					
ANR	4293301	Identifier	rhs		4293104	1					
ANR	4293302	Identifier	true		4293104	1					
ANR	4293303	CompoundStatement		63:29:1184:1184	4293104	1					
ANR	4293304	ExpressionStatement	FAIL	325:2:8548:8552	4293104	0	True				
ANR	4293305	Identifier	FAIL		4293104	0					
ANR	4293306	IfStatement	if ( ( lhs <= rhs ) != false )		4293104	25					
ANR	4293307	Condition	( lhs <= rhs ) != false	327:8:8576:8596	4293104	0	True				
ANR	4293308	EqualityExpression	( lhs <= rhs ) != false		4293104	0		!=			
ANR	4293309	RelationalExpression	lhs <= rhs		4293104	0		<=			
ANR	4293310	Identifier	lhs		4293104	0					
ANR	4293311	Identifier	rhs		4293104	1					
ANR	4293312	Identifier	false		4293104	1					
ANR	4293313	CompoundStatement		66:31:1239:1239	4293104	1					
ANR	4293314	ExpressionStatement	FAIL	328:2:8603:8607	4293104	0	True				
ANR	4293315	Identifier	FAIL		4293104	0					
ANR	4293316	IfStatement	if ( ( lhs >= rhs ) != true )		4293104	26					
ANR	4293317	Condition	( lhs >= rhs ) != true	330:8:8631:8650	4293104	0	True				
ANR	4293318	EqualityExpression	( lhs >= rhs ) != true		4293104	0		!=			
ANR	4293319	RelationalExpression	lhs >= rhs		4293104	0		>=			
ANR	4293320	Identifier	lhs		4293104	0					
ANR	4293321	Identifier	rhs		4293104	1					
ANR	4293322	Identifier	true		4293104	1					
ANR	4293323	CompoundStatement		69:30:1293:1293	4293104	1					
ANR	4293324	ExpressionStatement	FAIL	331:2:8657:8661	4293104	0	True				
ANR	4293325	Identifier	FAIL		4293104	0					
ANR	4293326	ExpressionStatement	PASS	334:1:8679:8683	4293104	27	True				
ANR	4293327	Identifier	PASS		4293104	0					
ANR	4293328	ReturnType	static bool		4293104	1					
ANR	4293329	Identifier	test_comparison_ops_lhs_string		4293104	2					
ANR	4293330	ParameterList			4293104	3					
ANR	4293331	CFGEntryNode	ENTRY		4293104		True				
ANR	4293332	CFGExitNode	EXIT		4293104		True				
ANR	4293333	Symbol	lhs		4293104						
ANR	4293334	Symbol	true		4293104						
ANR	4293335	Symbol	false		4293104						
ANR	4293336	Symbol	rhs		4293104						
ANR	4293337	Function	test_comparison_ops_lhs_MyString	337:0:8688:10061							
ANR	4293338	FunctionDef	test_comparison_ops_lhs_MyString ()		4293337	0					
ANR	4293339	CompoundStatement		337:47:8735:10061	4293337	0					
ANR	4293340	ExpressionStatement	"emit_test ( ""Test comparison operators: LHS is MyString and LHS is std::string"" )"	338:4:8741:8819	4293337	0	True				
ANR	4293341	CallExpression	"emit_test ( ""Test comparison operators: LHS is MyString and LHS is std::string"" )"		4293337	0					
ANR	4293342	Callee	emit_test		4293337	0					
ANR	4293343	Identifier	emit_test		4293337	0					
ANR	4293344	ArgumentList	"""Test comparison operators: LHS is MyString and LHS is std::string"""		4293337	1					
ANR	4293345	Argument	"""Test comparison operators: LHS is MyString and LHS is std::string"""		4293337	0					
ANR	4293346	PrimaryExpression	"""Test comparison operators: LHS is MyString and LHS is std::string"""		4293337	0					
ANR	4293347	IdentifierDeclStatement	MyString lhs ;	340:4:8826:8838	4293337	1	True				
ANR	4293348	IdentifierDecl	lhs		4293337	0					
ANR	4293349	IdentifierDeclType	MyString		4293337	0					
ANR	4293350	Identifier	lhs		4293337	1					
ANR	4293351	IdentifierDeclStatement	std :: string rhs ;	341:4:8844:8859	4293337	2	True				
ANR	4293352	IdentifierDecl	rhs		4293337	0					
ANR	4293353	IdentifierDeclType	std :: string		4293337	0					
ANR	4293354	Identifier	rhs		4293337	1					
ANR	4293355	ExpressionStatement	"lhs = ""a"""	344:4:8908:8917	4293337	3	True				
ANR	4293356	AssignmentExpression	"lhs = ""a"""		4293337	0		=			
ANR	4293357	Identifier	lhs		4293337	0					
ANR	4293358	PrimaryExpression	"""a"""		4293337	1					
ANR	4293359	ExpressionStatement	"rhs = ""a"""	345:4:8923:8932	4293337	4	True				
ANR	4293360	AssignmentExpression	"rhs = ""a"""		4293337	0		=			
ANR	4293361	Identifier	rhs		4293337	0					
ANR	4293362	PrimaryExpression	"""a"""		4293337	1					
ANR	4293363	IfStatement	if ( ( lhs == rhs ) != true )		4293337	5					
ANR	4293364	Condition	( lhs == rhs ) != true	346:8:8942:8961	4293337	0	True				
ANR	4293365	EqualityExpression	( lhs == rhs ) != true		4293337	0		!=			
ANR	4293366	EqualityExpression	lhs == rhs		4293337	0		==			
ANR	4293367	Identifier	lhs		4293337	0					
ANR	4293368	Identifier	rhs		4293337	1					
ANR	4293369	Identifier	true		4293337	1					
ANR	4293370	CompoundStatement		10:30:228:228	4293337	1					
ANR	4293371	ExpressionStatement	FAIL	347:2:8968:8972	4293337	0	True				
ANR	4293372	Identifier	FAIL		4293337	0					
ANR	4293373	IfStatement	if ( ( lhs != rhs ) != false )		4293337	6					
ANR	4293374	Condition	( lhs != rhs ) != false	349:8:8996:9016	4293337	0	True				
ANR	4293375	EqualityExpression	( lhs != rhs ) != false		4293337	0		!=			
ANR	4293376	EqualityExpression	lhs != rhs		4293337	0		!=			
ANR	4293377	Identifier	lhs		4293337	0					
ANR	4293378	Identifier	rhs		4293337	1					
ANR	4293379	Identifier	false		4293337	1					
ANR	4293380	CompoundStatement		13:31:283:283	4293337	1					
ANR	4293381	ExpressionStatement	FAIL	350:2:9023:9027	4293337	0	True				
ANR	4293382	Identifier	FAIL		4293337	0					
ANR	4293383	IfStatement	if ( ( lhs < rhs ) != false )		4293337	7					
ANR	4293384	Condition	( lhs < rhs ) != false	352:8:9051:9070	4293337	0	True				
ANR	4293385	EqualityExpression	( lhs < rhs ) != false		4293337	0		!=			
ANR	4293386	RelationalExpression	lhs < rhs		4293337	0		<			
ANR	4293387	Identifier	lhs		4293337	0					
ANR	4293388	Identifier	rhs		4293337	1					
ANR	4293389	Identifier	false		4293337	1					
ANR	4293390	CompoundStatement		16:30:337:337	4293337	1					
ANR	4293391	ExpressionStatement	FAIL	353:2:9077:9081	4293337	0	True				
ANR	4293392	Identifier	FAIL		4293337	0					
ANR	4293393	IfStatement	if ( ( lhs > rhs ) != false )		4293337	8					
ANR	4293394	Condition	( lhs > rhs ) != false	355:8:9105:9124	4293337	0	True				
ANR	4293395	EqualityExpression	( lhs > rhs ) != false		4293337	0		!=			
ANR	4293396	RelationalExpression	lhs > rhs		4293337	0		>			
ANR	4293397	Identifier	lhs		4293337	0					
ANR	4293398	Identifier	rhs		4293337	1					
ANR	4293399	Identifier	false		4293337	1					
ANR	4293400	CompoundStatement		19:30:391:391	4293337	1					
ANR	4293401	ExpressionStatement	FAIL	356:2:9131:9135	4293337	0	True				
ANR	4293402	Identifier	FAIL		4293337	0					
ANR	4293403	IfStatement	if ( ( lhs <= rhs ) != true )		4293337	9					
ANR	4293404	Condition	( lhs <= rhs ) != true	358:8:9159:9178	4293337	0	True				
ANR	4293405	EqualityExpression	( lhs <= rhs ) != true		4293337	0		!=			
ANR	4293406	RelationalExpression	lhs <= rhs		4293337	0		<=			
ANR	4293407	Identifier	lhs		4293337	0					
ANR	4293408	Identifier	rhs		4293337	1					
ANR	4293409	Identifier	true		4293337	1					
ANR	4293410	CompoundStatement		22:30:445:445	4293337	1					
ANR	4293411	ExpressionStatement	FAIL	359:2:9185:9189	4293337	0	True				
ANR	4293412	Identifier	FAIL		4293337	0					
ANR	4293413	IfStatement	if ( ( lhs >= rhs ) != true )		4293337	10					
ANR	4293414	Condition	( lhs >= rhs ) != true	361:8:9213:9232	4293337	0	True				
ANR	4293415	EqualityExpression	( lhs >= rhs ) != true		4293337	0		!=			
ANR	4293416	RelationalExpression	lhs >= rhs		4293337	0		>=			
ANR	4293417	Identifier	lhs		4293337	0					
ANR	4293418	Identifier	rhs		4293337	1					
ANR	4293419	Identifier	true		4293337	1					
ANR	4293420	CompoundStatement		25:30:499:499	4293337	1					
ANR	4293421	ExpressionStatement	FAIL	362:2:9239:9243	4293337	0	True				
ANR	4293422	Identifier	FAIL		4293337	0					
ANR	4293423	ExpressionStatement	"lhs = ""a"""	366:4:9305:9314	4293337	11	True				
ANR	4293424	AssignmentExpression	"lhs = ""a"""		4293337	0		=			
ANR	4293425	Identifier	lhs		4293337	0					
ANR	4293426	PrimaryExpression	"""a"""		4293337	1					
ANR	4293427	ExpressionStatement	"rhs = ""b"""	367:4:9320:9329	4293337	12	True				
ANR	4293428	AssignmentExpression	"rhs = ""b"""		4293337	0		=			
ANR	4293429	Identifier	rhs		4293337	0					
ANR	4293430	PrimaryExpression	"""b"""		4293337	1					
ANR	4293431	IfStatement	if ( ( lhs == rhs ) != false )		4293337	13					
ANR	4293432	Condition	( lhs == rhs ) != false	368:8:9339:9359	4293337	0	True				
ANR	4293433	EqualityExpression	( lhs == rhs ) != false		4293337	0		!=			
ANR	4293434	EqualityExpression	lhs == rhs		4293337	0		==			
ANR	4293435	Identifier	lhs		4293337	0					
ANR	4293436	Identifier	rhs		4293337	1					
ANR	4293437	Identifier	false		4293337	1					
ANR	4293438	CompoundStatement		32:31:626:626	4293337	1					
ANR	4293439	ExpressionStatement	FAIL	369:2:9366:9370	4293337	0	True				
ANR	4293440	Identifier	FAIL		4293337	0					
ANR	4293441	IfStatement	if ( ( lhs != rhs ) != true )		4293337	14					
ANR	4293442	Condition	( lhs != rhs ) != true	371:8:9394:9413	4293337	0	True				
ANR	4293443	EqualityExpression	( lhs != rhs ) != true		4293337	0		!=			
ANR	4293444	EqualityExpression	lhs != rhs		4293337	0		!=			
ANR	4293445	Identifier	lhs		4293337	0					
ANR	4293446	Identifier	rhs		4293337	1					
ANR	4293447	Identifier	true		4293337	1					
ANR	4293448	CompoundStatement		35:30:680:680	4293337	1					
ANR	4293449	ExpressionStatement	FAIL	372:2:9420:9424	4293337	0	True				
ANR	4293450	Identifier	FAIL		4293337	0					
ANR	4293451	IfStatement	if ( ( lhs < rhs ) != true )		4293337	15					
ANR	4293452	Condition	( lhs < rhs ) != true	374:8:9448:9466	4293337	0	True				
ANR	4293453	EqualityExpression	( lhs < rhs ) != true		4293337	0		!=			
ANR	4293454	RelationalExpression	lhs < rhs		4293337	0		<			
ANR	4293455	Identifier	lhs		4293337	0					
ANR	4293456	Identifier	rhs		4293337	1					
ANR	4293457	Identifier	true		4293337	1					
ANR	4293458	CompoundStatement		38:29:733:733	4293337	1					
ANR	4293459	ExpressionStatement	FAIL	375:2:9473:9477	4293337	0	True				
ANR	4293460	Identifier	FAIL		4293337	0					
ANR	4293461	IfStatement	if ( ( lhs > rhs ) != false )		4293337	16					
ANR	4293462	Condition	( lhs > rhs ) != false	377:8:9501:9520	4293337	0	True				
ANR	4293463	EqualityExpression	( lhs > rhs ) != false		4293337	0		!=			
ANR	4293464	RelationalExpression	lhs > rhs		4293337	0		>			
ANR	4293465	Identifier	lhs		4293337	0					
ANR	4293466	Identifier	rhs		4293337	1					
ANR	4293467	Identifier	false		4293337	1					
ANR	4293468	CompoundStatement		41:30:787:787	4293337	1					
ANR	4293469	ExpressionStatement	FAIL	378:2:9527:9531	4293337	0	True				
ANR	4293470	Identifier	FAIL		4293337	0					
ANR	4293471	IfStatement	if ( ( lhs <= rhs ) != true )		4293337	17					
ANR	4293472	Condition	( lhs <= rhs ) != true	380:8:9555:9574	4293337	0	True				
ANR	4293473	EqualityExpression	( lhs <= rhs ) != true		4293337	0		!=			
ANR	4293474	RelationalExpression	lhs <= rhs		4293337	0		<=			
ANR	4293475	Identifier	lhs		4293337	0					
ANR	4293476	Identifier	rhs		4293337	1					
ANR	4293477	Identifier	true		4293337	1					
ANR	4293478	CompoundStatement		44:30:841:841	4293337	1					
ANR	4293479	ExpressionStatement	FAIL	381:2:9581:9585	4293337	0	True				
ANR	4293480	Identifier	FAIL		4293337	0					
ANR	4293481	IfStatement	if ( ( lhs >= rhs ) != false )		4293337	18					
ANR	4293482	Condition	( lhs >= rhs ) != false	383:8:9609:9629	4293337	0	True				
ANR	4293483	EqualityExpression	( lhs >= rhs ) != false		4293337	0		!=			
ANR	4293484	RelationalExpression	lhs >= rhs		4293337	0		>=			
ANR	4293485	Identifier	lhs		4293337	0					
ANR	4293486	Identifier	rhs		4293337	1					
ANR	4293487	Identifier	false		4293337	1					
ANR	4293488	CompoundStatement		47:31:896:896	4293337	1					
ANR	4293489	ExpressionStatement	FAIL	384:2:9636:9640	4293337	0	True				
ANR	4293490	Identifier	FAIL		4293337	0					
ANR	4293491	ExpressionStatement	"lhs = ""b"""	388:4:9702:9711	4293337	19	True				
ANR	4293492	AssignmentExpression	"lhs = ""b"""		4293337	0		=			
ANR	4293493	Identifier	lhs		4293337	0					
ANR	4293494	PrimaryExpression	"""b"""		4293337	1					
ANR	4293495	ExpressionStatement	"rhs = ""a"""	389:4:9717:9726	4293337	20	True				
ANR	4293496	AssignmentExpression	"rhs = ""a"""		4293337	0		=			
ANR	4293497	Identifier	rhs		4293337	0					
ANR	4293498	PrimaryExpression	"""a"""		4293337	1					
ANR	4293499	IfStatement	if ( ( lhs == rhs ) != false )		4293337	21					
ANR	4293500	Condition	( lhs == rhs ) != false	390:8:9736:9756	4293337	0	True				
ANR	4293501	EqualityExpression	( lhs == rhs ) != false		4293337	0		!=			
ANR	4293502	EqualityExpression	lhs == rhs		4293337	0		==			
ANR	4293503	Identifier	lhs		4293337	0					
ANR	4293504	Identifier	rhs		4293337	1					
ANR	4293505	Identifier	false		4293337	1					
ANR	4293506	CompoundStatement		54:31:1023:1023	4293337	1					
ANR	4293507	ExpressionStatement	FAIL	391:2:9763:9767	4293337	0	True				
ANR	4293508	Identifier	FAIL		4293337	0					
ANR	4293509	IfStatement	if ( ( lhs != rhs ) != true )		4293337	22					
ANR	4293510	Condition	( lhs != rhs ) != true	393:8:9791:9810	4293337	0	True				
ANR	4293511	EqualityExpression	( lhs != rhs ) != true		4293337	0		!=			
ANR	4293512	EqualityExpression	lhs != rhs		4293337	0		!=			
ANR	4293513	Identifier	lhs		4293337	0					
ANR	4293514	Identifier	rhs		4293337	1					
ANR	4293515	Identifier	true		4293337	1					
ANR	4293516	CompoundStatement		57:30:1077:1077	4293337	1					
ANR	4293517	ExpressionStatement	FAIL	394:2:9817:9821	4293337	0	True				
ANR	4293518	Identifier	FAIL		4293337	0					
ANR	4293519	IfStatement	if ( ( lhs < rhs ) != false )		4293337	23					
ANR	4293520	Condition	( lhs < rhs ) != false	396:8:9845:9864	4293337	0	True				
ANR	4293521	EqualityExpression	( lhs < rhs ) != false		4293337	0		!=			
ANR	4293522	RelationalExpression	lhs < rhs		4293337	0		<			
ANR	4293523	Identifier	lhs		4293337	0					
ANR	4293524	Identifier	rhs		4293337	1					
ANR	4293525	Identifier	false		4293337	1					
ANR	4293526	CompoundStatement		60:30:1131:1131	4293337	1					
ANR	4293527	ExpressionStatement	FAIL	397:2:9871:9875	4293337	0	True				
ANR	4293528	Identifier	FAIL		4293337	0					
ANR	4293529	IfStatement	if ( ( lhs > rhs ) != true )		4293337	24					
ANR	4293530	Condition	( lhs > rhs ) != true	399:8:9899:9917	4293337	0	True				
ANR	4293531	EqualityExpression	( lhs > rhs ) != true		4293337	0		!=			
ANR	4293532	RelationalExpression	lhs > rhs		4293337	0		>			
ANR	4293533	Identifier	lhs		4293337	0					
ANR	4293534	Identifier	rhs		4293337	1					
ANR	4293535	Identifier	true		4293337	1					
ANR	4293536	CompoundStatement		63:29:1184:1184	4293337	1					
ANR	4293537	ExpressionStatement	FAIL	400:2:9924:9928	4293337	0	True				
ANR	4293538	Identifier	FAIL		4293337	0					
ANR	4293539	IfStatement	if ( ( lhs <= rhs ) != false )		4293337	25					
ANR	4293540	Condition	( lhs <= rhs ) != false	402:8:9952:9972	4293337	0	True				
ANR	4293541	EqualityExpression	( lhs <= rhs ) != false		4293337	0		!=			
ANR	4293542	RelationalExpression	lhs <= rhs		4293337	0		<=			
ANR	4293543	Identifier	lhs		4293337	0					
ANR	4293544	Identifier	rhs		4293337	1					
ANR	4293545	Identifier	false		4293337	1					
ANR	4293546	CompoundStatement		66:31:1239:1239	4293337	1					
ANR	4293547	ExpressionStatement	FAIL	403:2:9979:9983	4293337	0	True				
ANR	4293548	Identifier	FAIL		4293337	0					
ANR	4293549	IfStatement	if ( ( lhs >= rhs ) != true )		4293337	26					
ANR	4293550	Condition	( lhs >= rhs ) != true	405:8:10007:10026	4293337	0	True				
ANR	4293551	EqualityExpression	( lhs >= rhs ) != true		4293337	0		!=			
ANR	4293552	RelationalExpression	lhs >= rhs		4293337	0		>=			
ANR	4293553	Identifier	lhs		4293337	0					
ANR	4293554	Identifier	rhs		4293337	1					
ANR	4293555	Identifier	true		4293337	1					
ANR	4293556	CompoundStatement		69:30:1293:1293	4293337	1					
ANR	4293557	ExpressionStatement	FAIL	406:2:10033:10037	4293337	0	True				
ANR	4293558	Identifier	FAIL		4293337	0					
ANR	4293559	ExpressionStatement	PASS	409:1:10055:10059	4293337	27	True				
ANR	4293560	Identifier	PASS		4293337	0					
ANR	4293561	ReturnType	static bool		4293337	1					
ANR	4293562	Identifier	test_comparison_ops_lhs_MyString		4293337	2					
ANR	4293563	ParameterList			4293337	3					
ANR	4293564	CFGEntryNode	ENTRY		4293337		True				
ANR	4293565	CFGExitNode	EXIT		4293337		True				
ANR	4293566	Symbol	lhs		4293337						
ANR	4293567	Symbol	true		4293337						
ANR	4293568	Symbol	false		4293337						
ANR	4293569	Symbol	rhs		4293337						
ANR	4293570	Function	test_lower_case_empty	412:0:10064:10365							
ANR	4293571	FunctionDef	test_lower_case_empty ()		4293570	0					
ANR	4293572	CompoundStatement		412:36:10100:10365	4293570	0					
ANR	4293573	ExpressionStatement	"emit_test ( ""Test lower_case() on an empty std::string."" )"	413:1:10103:10158	4293570	0	True				
ANR	4293574	CallExpression	"emit_test ( ""Test lower_case() on an empty std::string."" )"		4293570	0					
ANR	4293575	Callee	emit_test		4293570	0					
ANR	4293576	Identifier	emit_test		4293570	0					
ANR	4293577	ArgumentList	"""Test lower_case() on an empty std::string."""		4293570	1					
ANR	4293578	Argument	"""Test lower_case() on an empty std::string."""		4293570	0					
ANR	4293579	PrimaryExpression	"""Test lower_case() on an empty std::string."""		4293570	0					
ANR	4293580	IdentifierDeclStatement	std :: string a ;	414:1:10161:10174	4293570	1	True				
ANR	4293581	IdentifierDecl	a		4293570	0					
ANR	4293582	IdentifierDeclType	std :: string		4293570	0					
ANR	4293583	Identifier	a		4293570	1					
ANR	4293584	ExpressionStatement	lower_case ( a )	415:1:10177:10190	4293570	2	True				
ANR	4293585	CallExpression	lower_case ( a )		4293570	0					
ANR	4293586	Callee	lower_case		4293570	0					
ANR	4293587	Identifier	lower_case		4293570	0					
ANR	4293588	ArgumentList	a		4293570	1					
ANR	4293589	Argument	a		4293570	0					
ANR	4293590	Identifier	a		4293570	0					
ANR	4293591	ExpressionStatement	emit_output_expected_header ( )	416:1:10193:10222	4293570	3	True				
ANR	4293592	CallExpression	emit_output_expected_header ( )		4293570	0					
ANR	4293593	Callee	emit_output_expected_header		4293570	0					
ANR	4293594	Identifier	emit_output_expected_header		4293570	0					
ANR	4293595	ArgumentList			4293570	1					
ANR	4293596	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	417:1:10225:10246	4293570	4	True				
ANR	4293597	CallExpression	"emit_retval ( ""%s"" , """" )"		4293570	0					
ANR	4293598	Callee	emit_retval		4293570	0					
ANR	4293599	Identifier	emit_retval		4293570	0					
ANR	4293600	ArgumentList	"""%s"""		4293570	1					
ANR	4293601	Argument	"""%s"""		4293570	0					
ANR	4293602	PrimaryExpression	"""%s"""		4293570	0					
ANR	4293603	Argument	""""""		4293570	1					
ANR	4293604	PrimaryExpression	""""""		4293570	0					
ANR	4293605	ExpressionStatement	emit_output_actual_header ( )	418:1:10249:10276	4293570	5	True				
ANR	4293606	CallExpression	emit_output_actual_header ( )		4293570	0					
ANR	4293607	Callee	emit_output_actual_header		4293570	0					
ANR	4293608	Identifier	emit_output_actual_header		4293570	0					
ANR	4293609	ArgumentList			4293570	1					
ANR	4293610	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	419:1:10279:10307	4293570	6	True				
ANR	4293611	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293570	0					
ANR	4293612	Callee	emit_retval		4293570	0					
ANR	4293613	Identifier	emit_retval		4293570	0					
ANR	4293614	ArgumentList	"""%s"""		4293570	1					
ANR	4293615	Argument	"""%s"""		4293570	0					
ANR	4293616	PrimaryExpression	"""%s"""		4293570	0					
ANR	4293617	Argument	a . c_str ( )		4293570	1					
ANR	4293618	CallExpression	a . c_str ( )		4293570	0					
ANR	4293619	Callee	a . c_str		4293570	0					
ANR	4293620	MemberAccess	a . c_str		4293570	0					
ANR	4293621	Identifier	a		4293570	0					
ANR	4293622	Identifier	c_str		4293570	1					
ANR	4293623	ArgumentList			4293570	1					
ANR	4293624	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		4293570	7					
ANR	4293625	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	420:4:10313:10342	4293570	0	True				
ANR	4293626	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		4293570	0		!=			
ANR	4293627	CallExpression	"strcmp ( a . c_str ( ) , """" )"		4293570	0					
ANR	4293628	Callee	strcmp		4293570	0					
ANR	4293629	Identifier	strcmp		4293570	0					
ANR	4293630	ArgumentList	a . c_str ( )		4293570	1					
ANR	4293631	Argument	a . c_str ( )		4293570	0					
ANR	4293632	CallExpression	a . c_str ( )		4293570	0					
ANR	4293633	Callee	a . c_str		4293570	0					
ANR	4293634	MemberAccess	a . c_str		4293570	0					
ANR	4293635	Identifier	a		4293570	0					
ANR	4293636	Identifier	c_str		4293570	1					
ANR	4293637	ArgumentList			4293570	1					
ANR	4293638	Argument	""""""		4293570	1					
ANR	4293639	PrimaryExpression	""""""		4293570	0					
ANR	4293640	Identifier	MATCH		4293570	1					
ANR	4293641	CompoundStatement		9:36:244:244	4293570	1					
ANR	4293642	ExpressionStatement	FAIL	421:2:10349:10353	4293570	0	True				
ANR	4293643	Identifier	FAIL		4293570	0					
ANR	4293644	ExpressionStatement	PASS	423:1:10359:10363	4293570	8	True				
ANR	4293645	Identifier	PASS		4293570	0					
ANR	4293646	ReturnType	static bool		4293570	1					
ANR	4293647	Identifier	test_lower_case_empty		4293570	2					
ANR	4293648	ParameterList			4293570	3					
ANR	4293649	CFGEntryNode	ENTRY		4293570		True				
ANR	4293650	CFGExitNode	EXIT		4293570		True				
ANR	4293651	Symbol	strcmp		4293570						
ANR	4293652	Symbol	a		4293570						
ANR	4293653	Symbol	a . c_str		4293570						
ANR	4293654	Symbol	MATCH		4293570						
ANR	4293655	Function	test_lower_case_non_empty	426:0:10368:10713							
ANR	4293656	FunctionDef	test_lower_case_non_empty ()		4293655	0					
ANR	4293657	CompoundStatement		426:40:10408:10713	4293655	0					
ANR	4293658	ExpressionStatement	"emit_test ( ""Test lower_case() on a non-empty std::string."" )"	427:1:10411:10469	4293655	0	True				
ANR	4293659	CallExpression	"emit_test ( ""Test lower_case() on a non-empty std::string."" )"		4293655	0					
ANR	4293660	Callee	emit_test		4293655	0					
ANR	4293661	Identifier	emit_test		4293655	0					
ANR	4293662	ArgumentList	"""Test lower_case() on a non-empty std::string."""		4293655	1					
ANR	4293663	Argument	"""Test lower_case() on a non-empty std::string."""		4293655	0					
ANR	4293664	PrimaryExpression	"""Test lower_case() on a non-empty std::string."""		4293655	0					
ANR	4293665	IdentifierDeclStatement	"std :: string a ( ""lower UPPER"" ) ;"	428:1:10472:10500	4293655	1	True				
ANR	4293666	IdentifierDecl	"a ( ""lower UPPER"" )"		4293655	0					
ANR	4293667	IdentifierDeclType	std :: string		4293655	0					
ANR	4293668	Identifier	a		4293655	1					
ANR	4293669	PrimaryExpression	"""lower UPPER"""		4293655	2					
ANR	4293670	ExpressionStatement	lower_case ( a )	429:1:10503:10516	4293655	2	True				
ANR	4293671	CallExpression	lower_case ( a )		4293655	0					
ANR	4293672	Callee	lower_case		4293655	0					
ANR	4293673	Identifier	lower_case		4293655	0					
ANR	4293674	ArgumentList	a		4293655	1					
ANR	4293675	Argument	a		4293655	0					
ANR	4293676	Identifier	a		4293655	0					
ANR	4293677	ExpressionStatement	emit_output_expected_header ( )	430:1:10519:10548	4293655	3	True				
ANR	4293678	CallExpression	emit_output_expected_header ( )		4293655	0					
ANR	4293679	Callee	emit_output_expected_header		4293655	0					
ANR	4293680	Identifier	emit_output_expected_header		4293655	0					
ANR	4293681	ArgumentList			4293655	1					
ANR	4293682	ExpressionStatement	"emit_retval ( ""%s"" , ""lower upper"" )"	431:1:10551:10583	4293655	4	True				
ANR	4293683	CallExpression	"emit_retval ( ""%s"" , ""lower upper"" )"		4293655	0					
ANR	4293684	Callee	emit_retval		4293655	0					
ANR	4293685	Identifier	emit_retval		4293655	0					
ANR	4293686	ArgumentList	"""%s"""		4293655	1					
ANR	4293687	Argument	"""%s"""		4293655	0					
ANR	4293688	PrimaryExpression	"""%s"""		4293655	0					
ANR	4293689	Argument	"""lower upper"""		4293655	1					
ANR	4293690	PrimaryExpression	"""lower upper"""		4293655	0					
ANR	4293691	ExpressionStatement	emit_output_actual_header ( )	432:1:10586:10613	4293655	5	True				
ANR	4293692	CallExpression	emit_output_actual_header ( )		4293655	0					
ANR	4293693	Callee	emit_output_actual_header		4293655	0					
ANR	4293694	Identifier	emit_output_actual_header		4293655	0					
ANR	4293695	ArgumentList			4293655	1					
ANR	4293696	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	433:1:10616:10644	4293655	6	True				
ANR	4293697	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293655	0					
ANR	4293698	Callee	emit_retval		4293655	0					
ANR	4293699	Identifier	emit_retval		4293655	0					
ANR	4293700	ArgumentList	"""%s"""		4293655	1					
ANR	4293701	Argument	"""%s"""		4293655	0					
ANR	4293702	PrimaryExpression	"""%s"""		4293655	0					
ANR	4293703	Argument	a . c_str ( )		4293655	1					
ANR	4293704	CallExpression	a . c_str ( )		4293655	0					
ANR	4293705	Callee	a . c_str		4293655	0					
ANR	4293706	MemberAccess	a . c_str		4293655	0					
ANR	4293707	Identifier	a		4293655	0					
ANR	4293708	Identifier	c_str		4293655	1					
ANR	4293709	ArgumentList			4293655	1					
ANR	4293710	IfStatement	"if ( strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH )"		4293655	7					
ANR	4293711	Condition	"strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH"	434:4:10650:10690	4293655	0	True				
ANR	4293712	EqualityExpression	"strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH"		4293655	0		!=			
ANR	4293713	CallExpression	"strcmp ( a . c_str ( ) , ""lower upper"" )"		4293655	0					
ANR	4293714	Callee	strcmp		4293655	0					
ANR	4293715	Identifier	strcmp		4293655	0					
ANR	4293716	ArgumentList	a . c_str ( )		4293655	1					
ANR	4293717	Argument	a . c_str ( )		4293655	0					
ANR	4293718	CallExpression	a . c_str ( )		4293655	0					
ANR	4293719	Callee	a . c_str		4293655	0					
ANR	4293720	MemberAccess	a . c_str		4293655	0					
ANR	4293721	Identifier	a		4293655	0					
ANR	4293722	Identifier	c_str		4293655	1					
ANR	4293723	ArgumentList			4293655	1					
ANR	4293724	Argument	"""lower upper"""		4293655	1					
ANR	4293725	PrimaryExpression	"""lower upper"""		4293655	0					
ANR	4293726	Identifier	MATCH		4293655	1					
ANR	4293727	CompoundStatement		9:47:284:284	4293655	1					
ANR	4293728	ExpressionStatement	FAIL	435:2:10697:10701	4293655	0	True				
ANR	4293729	Identifier	FAIL		4293655	0					
ANR	4293730	ExpressionStatement	PASS	437:1:10707:10711	4293655	8	True				
ANR	4293731	Identifier	PASS		4293655	0					
ANR	4293732	ReturnType	static bool		4293655	1					
ANR	4293733	Identifier	test_lower_case_non_empty		4293655	2					
ANR	4293734	ParameterList			4293655	3					
ANR	4293735	CFGEntryNode	ENTRY		4293655		True				
ANR	4293736	CFGExitNode	EXIT		4293655		True				
ANR	4293737	Symbol	strcmp		4293655						
ANR	4293738	Symbol	a		4293655						
ANR	4293739	Symbol	a . c_str		4293655						
ANR	4293740	Symbol	MATCH		4293655						
ANR	4293741	Function	test_upper_case_empty	440:0:10716:11017							
ANR	4293742	FunctionDef	test_upper_case_empty ()		4293741	0					
ANR	4293743	CompoundStatement		440:36:10752:11017	4293741	0					
ANR	4293744	ExpressionStatement	"emit_test ( ""Test upper_case() on an empty std::string."" )"	441:1:10755:10810	4293741	0	True				
ANR	4293745	CallExpression	"emit_test ( ""Test upper_case() on an empty std::string."" )"		4293741	0					
ANR	4293746	Callee	emit_test		4293741	0					
ANR	4293747	Identifier	emit_test		4293741	0					
ANR	4293748	ArgumentList	"""Test upper_case() on an empty std::string."""		4293741	1					
ANR	4293749	Argument	"""Test upper_case() on an empty std::string."""		4293741	0					
ANR	4293750	PrimaryExpression	"""Test upper_case() on an empty std::string."""		4293741	0					
ANR	4293751	IdentifierDeclStatement	std :: string a ;	442:1:10813:10826	4293741	1	True				
ANR	4293752	IdentifierDecl	a		4293741	0					
ANR	4293753	IdentifierDeclType	std :: string		4293741	0					
ANR	4293754	Identifier	a		4293741	1					
ANR	4293755	ExpressionStatement	upper_case ( a )	443:1:10829:10842	4293741	2	True				
ANR	4293756	CallExpression	upper_case ( a )		4293741	0					
ANR	4293757	Callee	upper_case		4293741	0					
ANR	4293758	Identifier	upper_case		4293741	0					
ANR	4293759	ArgumentList	a		4293741	1					
ANR	4293760	Argument	a		4293741	0					
ANR	4293761	Identifier	a		4293741	0					
ANR	4293762	ExpressionStatement	emit_output_expected_header ( )	444:1:10845:10874	4293741	3	True				
ANR	4293763	CallExpression	emit_output_expected_header ( )		4293741	0					
ANR	4293764	Callee	emit_output_expected_header		4293741	0					
ANR	4293765	Identifier	emit_output_expected_header		4293741	0					
ANR	4293766	ArgumentList			4293741	1					
ANR	4293767	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	445:1:10877:10898	4293741	4	True				
ANR	4293768	CallExpression	"emit_retval ( ""%s"" , """" )"		4293741	0					
ANR	4293769	Callee	emit_retval		4293741	0					
ANR	4293770	Identifier	emit_retval		4293741	0					
ANR	4293771	ArgumentList	"""%s"""		4293741	1					
ANR	4293772	Argument	"""%s"""		4293741	0					
ANR	4293773	PrimaryExpression	"""%s"""		4293741	0					
ANR	4293774	Argument	""""""		4293741	1					
ANR	4293775	PrimaryExpression	""""""		4293741	0					
ANR	4293776	ExpressionStatement	emit_output_actual_header ( )	446:1:10901:10928	4293741	5	True				
ANR	4293777	CallExpression	emit_output_actual_header ( )		4293741	0					
ANR	4293778	Callee	emit_output_actual_header		4293741	0					
ANR	4293779	Identifier	emit_output_actual_header		4293741	0					
ANR	4293780	ArgumentList			4293741	1					
ANR	4293781	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	447:1:10931:10959	4293741	6	True				
ANR	4293782	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293741	0					
ANR	4293783	Callee	emit_retval		4293741	0					
ANR	4293784	Identifier	emit_retval		4293741	0					
ANR	4293785	ArgumentList	"""%s"""		4293741	1					
ANR	4293786	Argument	"""%s"""		4293741	0					
ANR	4293787	PrimaryExpression	"""%s"""		4293741	0					
ANR	4293788	Argument	a . c_str ( )		4293741	1					
ANR	4293789	CallExpression	a . c_str ( )		4293741	0					
ANR	4293790	Callee	a . c_str		4293741	0					
ANR	4293791	MemberAccess	a . c_str		4293741	0					
ANR	4293792	Identifier	a		4293741	0					
ANR	4293793	Identifier	c_str		4293741	1					
ANR	4293794	ArgumentList			4293741	1					
ANR	4293795	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		4293741	7					
ANR	4293796	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	448:4:10965:10994	4293741	0	True				
ANR	4293797	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		4293741	0		!=			
ANR	4293798	CallExpression	"strcmp ( a . c_str ( ) , """" )"		4293741	0					
ANR	4293799	Callee	strcmp		4293741	0					
ANR	4293800	Identifier	strcmp		4293741	0					
ANR	4293801	ArgumentList	a . c_str ( )		4293741	1					
ANR	4293802	Argument	a . c_str ( )		4293741	0					
ANR	4293803	CallExpression	a . c_str ( )		4293741	0					
ANR	4293804	Callee	a . c_str		4293741	0					
ANR	4293805	MemberAccess	a . c_str		4293741	0					
ANR	4293806	Identifier	a		4293741	0					
ANR	4293807	Identifier	c_str		4293741	1					
ANR	4293808	ArgumentList			4293741	1					
ANR	4293809	Argument	""""""		4293741	1					
ANR	4293810	PrimaryExpression	""""""		4293741	0					
ANR	4293811	Identifier	MATCH		4293741	1					
ANR	4293812	CompoundStatement		9:36:244:244	4293741	1					
ANR	4293813	ExpressionStatement	FAIL	449:2:11001:11005	4293741	0	True				
ANR	4293814	Identifier	FAIL		4293741	0					
ANR	4293815	ExpressionStatement	PASS	451:1:11011:11015	4293741	8	True				
ANR	4293816	Identifier	PASS		4293741	0					
ANR	4293817	ReturnType	static bool		4293741	1					
ANR	4293818	Identifier	test_upper_case_empty		4293741	2					
ANR	4293819	ParameterList			4293741	3					
ANR	4293820	CFGEntryNode	ENTRY		4293741		True				
ANR	4293821	CFGExitNode	EXIT		4293741		True				
ANR	4293822	Symbol	strcmp		4293741						
ANR	4293823	Symbol	a		4293741						
ANR	4293824	Symbol	a . c_str		4293741						
ANR	4293825	Symbol	MATCH		4293741						
ANR	4293826	Function	test_upper_case_non_empty	454:0:11020:11365							
ANR	4293827	FunctionDef	test_upper_case_non_empty ()		4293826	0					
ANR	4293828	CompoundStatement		454:40:11060:11365	4293826	0					
ANR	4293829	ExpressionStatement	"emit_test ( ""Test upper_case() on a non-empty std::string."" )"	455:1:11063:11121	4293826	0	True				
ANR	4293830	CallExpression	"emit_test ( ""Test upper_case() on a non-empty std::string."" )"		4293826	0					
ANR	4293831	Callee	emit_test		4293826	0					
ANR	4293832	Identifier	emit_test		4293826	0					
ANR	4293833	ArgumentList	"""Test upper_case() on a non-empty std::string."""		4293826	1					
ANR	4293834	Argument	"""Test upper_case() on a non-empty std::string."""		4293826	0					
ANR	4293835	PrimaryExpression	"""Test upper_case() on a non-empty std::string."""		4293826	0					
ANR	4293836	IdentifierDeclStatement	"std :: string a ( ""lower UPPER"" ) ;"	456:1:11124:11152	4293826	1	True				
ANR	4293837	IdentifierDecl	"a ( ""lower UPPER"" )"		4293826	0					
ANR	4293838	IdentifierDeclType	std :: string		4293826	0					
ANR	4293839	Identifier	a		4293826	1					
ANR	4293840	PrimaryExpression	"""lower UPPER"""		4293826	2					
ANR	4293841	ExpressionStatement	upper_case ( a )	457:1:11155:11168	4293826	2	True				
ANR	4293842	CallExpression	upper_case ( a )		4293826	0					
ANR	4293843	Callee	upper_case		4293826	0					
ANR	4293844	Identifier	upper_case		4293826	0					
ANR	4293845	ArgumentList	a		4293826	1					
ANR	4293846	Argument	a		4293826	0					
ANR	4293847	Identifier	a		4293826	0					
ANR	4293848	ExpressionStatement	emit_output_expected_header ( )	458:1:11171:11200	4293826	3	True				
ANR	4293849	CallExpression	emit_output_expected_header ( )		4293826	0					
ANR	4293850	Callee	emit_output_expected_header		4293826	0					
ANR	4293851	Identifier	emit_output_expected_header		4293826	0					
ANR	4293852	ArgumentList			4293826	1					
ANR	4293853	ExpressionStatement	"emit_retval ( ""%s"" , ""LOWER UPPER"" )"	459:1:11203:11235	4293826	4	True				
ANR	4293854	CallExpression	"emit_retval ( ""%s"" , ""LOWER UPPER"" )"		4293826	0					
ANR	4293855	Callee	emit_retval		4293826	0					
ANR	4293856	Identifier	emit_retval		4293826	0					
ANR	4293857	ArgumentList	"""%s"""		4293826	1					
ANR	4293858	Argument	"""%s"""		4293826	0					
ANR	4293859	PrimaryExpression	"""%s"""		4293826	0					
ANR	4293860	Argument	"""LOWER UPPER"""		4293826	1					
ANR	4293861	PrimaryExpression	"""LOWER UPPER"""		4293826	0					
ANR	4293862	ExpressionStatement	emit_output_actual_header ( )	460:1:11238:11265	4293826	5	True				
ANR	4293863	CallExpression	emit_output_actual_header ( )		4293826	0					
ANR	4293864	Callee	emit_output_actual_header		4293826	0					
ANR	4293865	Identifier	emit_output_actual_header		4293826	0					
ANR	4293866	ArgumentList			4293826	1					
ANR	4293867	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	461:1:11268:11296	4293826	6	True				
ANR	4293868	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293826	0					
ANR	4293869	Callee	emit_retval		4293826	0					
ANR	4293870	Identifier	emit_retval		4293826	0					
ANR	4293871	ArgumentList	"""%s"""		4293826	1					
ANR	4293872	Argument	"""%s"""		4293826	0					
ANR	4293873	PrimaryExpression	"""%s"""		4293826	0					
ANR	4293874	Argument	a . c_str ( )		4293826	1					
ANR	4293875	CallExpression	a . c_str ( )		4293826	0					
ANR	4293876	Callee	a . c_str		4293826	0					
ANR	4293877	MemberAccess	a . c_str		4293826	0					
ANR	4293878	Identifier	a		4293826	0					
ANR	4293879	Identifier	c_str		4293826	1					
ANR	4293880	ArgumentList			4293826	1					
ANR	4293881	IfStatement	"if ( strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH )"		4293826	7					
ANR	4293882	Condition	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH"	462:4:11302:11342	4293826	0	True				
ANR	4293883	EqualityExpression	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH"		4293826	0		!=			
ANR	4293884	CallExpression	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" )"		4293826	0					
ANR	4293885	Callee	strcmp		4293826	0					
ANR	4293886	Identifier	strcmp		4293826	0					
ANR	4293887	ArgumentList	a . c_str ( )		4293826	1					
ANR	4293888	Argument	a . c_str ( )		4293826	0					
ANR	4293889	CallExpression	a . c_str ( )		4293826	0					
ANR	4293890	Callee	a . c_str		4293826	0					
ANR	4293891	MemberAccess	a . c_str		4293826	0					
ANR	4293892	Identifier	a		4293826	0					
ANR	4293893	Identifier	c_str		4293826	1					
ANR	4293894	ArgumentList			4293826	1					
ANR	4293895	Argument	"""LOWER UPPER"""		4293826	1					
ANR	4293896	PrimaryExpression	"""LOWER UPPER"""		4293826	0					
ANR	4293897	Identifier	MATCH		4293826	1					
ANR	4293898	CompoundStatement		9:47:284:284	4293826	1					
ANR	4293899	ExpressionStatement	FAIL	463:2:11349:11353	4293826	0	True				
ANR	4293900	Identifier	FAIL		4293826	0					
ANR	4293901	ExpressionStatement	PASS	465:1:11359:11363	4293826	8	True				
ANR	4293902	Identifier	PASS		4293826	0					
ANR	4293903	ReturnType	static bool		4293826	1					
ANR	4293904	Identifier	test_upper_case_non_empty		4293826	2					
ANR	4293905	ParameterList			4293826	3					
ANR	4293906	CFGEntryNode	ENTRY		4293826		True				
ANR	4293907	CFGExitNode	EXIT		4293826		True				
ANR	4293908	Symbol	strcmp		4293826						
ANR	4293909	Symbol	a		4293826						
ANR	4293910	Symbol	a . c_str		4293826						
ANR	4293911	Symbol	MATCH		4293826						
ANR	4293912	Function	test_chomp_new_line_end	468:0:11368:11727							
ANR	4293913	FunctionDef	test_chomp_new_line_end ()		4293912	0					
ANR	4293914	CompoundStatement		468:38:11406:11727	4293912	0					
ANR	4293915	Statement	emit_test	469:1:11409:11417	4293912	0	True				
ANR	4293916	Statement	(	469:10:11418:11418	4293912	1	True				
ANR	4293917	Statement	"""Does chomp() remove the newLine if its the last character in """	469:11:11419:11481	4293912	2	True				
ANR	4293918	Statement	"""the std::string?"""	470:2:11485:11502	4293912	3	True				
ANR	4293919	Statement	)	470:20:11503:11503	4293912	4	True				
ANR	4293920	ExpressionStatement		470:21:11504:11504	4293912	5	True				
ANR	4293921	IdentifierDeclStatement	"std :: string a ( ""stuff\\n"" ) ;"	471:1:11507:11531	4293912	6	True				
ANR	4293922	IdentifierDecl	"a ( ""stuff\\n"" )"		4293912	0					
ANR	4293923	IdentifierDeclType	std :: string		4293912	0					
ANR	4293924	Identifier	a		4293912	1					
ANR	4293925	PrimaryExpression	"""stuff\\n"""		4293912	2					
ANR	4293926	ExpressionStatement	chomp ( a )	472:1:11534:11542	4293912	7	True				
ANR	4293927	CallExpression	chomp ( a )		4293912	0					
ANR	4293928	Callee	chomp		4293912	0					
ANR	4293929	Identifier	chomp		4293912	0					
ANR	4293930	ArgumentList	a		4293912	1					
ANR	4293931	Argument	a		4293912	0					
ANR	4293932	Identifier	a		4293912	0					
ANR	4293933	ExpressionStatement	emit_output_expected_header ( )	473:1:11545:11574	4293912	8	True				
ANR	4293934	CallExpression	emit_output_expected_header ( )		4293912	0					
ANR	4293935	Callee	emit_output_expected_header		4293912	0					
ANR	4293936	Identifier	emit_output_expected_header		4293912	0					
ANR	4293937	ArgumentList			4293912	1					
ANR	4293938	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff"" )"	474:1:11577:11603	4293912	9	True				
ANR	4293939	CallExpression	"emit_retval ( ""%s"" , ""stuff"" )"		4293912	0					
ANR	4293940	Callee	emit_retval		4293912	0					
ANR	4293941	Identifier	emit_retval		4293912	0					
ANR	4293942	ArgumentList	"""%s"""		4293912	1					
ANR	4293943	Argument	"""%s"""		4293912	0					
ANR	4293944	PrimaryExpression	"""%s"""		4293912	0					
ANR	4293945	Argument	"""stuff"""		4293912	1					
ANR	4293946	PrimaryExpression	"""stuff"""		4293912	0					
ANR	4293947	ExpressionStatement	emit_output_actual_header ( )	475:1:11606:11633	4293912	10	True				
ANR	4293948	CallExpression	emit_output_actual_header ( )		4293912	0					
ANR	4293949	Callee	emit_output_actual_header		4293912	0					
ANR	4293950	Identifier	emit_output_actual_header		4293912	0					
ANR	4293951	ArgumentList			4293912	1					
ANR	4293952	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	476:1:11636:11664	4293912	11	True				
ANR	4293953	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293912	0					
ANR	4293954	Callee	emit_retval		4293912	0					
ANR	4293955	Identifier	emit_retval		4293912	0					
ANR	4293956	ArgumentList	"""%s"""		4293912	1					
ANR	4293957	Argument	"""%s"""		4293912	0					
ANR	4293958	PrimaryExpression	"""%s"""		4293912	0					
ANR	4293959	Argument	a . c_str ( )		4293912	1					
ANR	4293960	CallExpression	a . c_str ( )		4293912	0					
ANR	4293961	Callee	a . c_str		4293912	0					
ANR	4293962	MemberAccess	a . c_str		4293912	0					
ANR	4293963	Identifier	a		4293912	0					
ANR	4293964	Identifier	c_str		4293912	1					
ANR	4293965	ArgumentList			4293912	1					
ANR	4293966	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH )"		4293912	12					
ANR	4293967	Condition	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"	477:4:11670:11704	4293912	0	True				
ANR	4293968	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"		4293912	0		!=			
ANR	4293969	CallExpression	"strcmp ( a . c_str ( ) , ""stuff"" )"		4293912	0					
ANR	4293970	Callee	strcmp		4293912	0					
ANR	4293971	Identifier	strcmp		4293912	0					
ANR	4293972	ArgumentList	a . c_str ( )		4293912	1					
ANR	4293973	Argument	a . c_str ( )		4293912	0					
ANR	4293974	CallExpression	a . c_str ( )		4293912	0					
ANR	4293975	Callee	a . c_str		4293912	0					
ANR	4293976	MemberAccess	a . c_str		4293912	0					
ANR	4293977	Identifier	a		4293912	0					
ANR	4293978	Identifier	c_str		4293912	1					
ANR	4293979	ArgumentList			4293912	1					
ANR	4293980	Argument	"""stuff"""		4293912	1					
ANR	4293981	PrimaryExpression	"""stuff"""		4293912	0					
ANR	4293982	Identifier	MATCH		4293912	1					
ANR	4293983	CompoundStatement		10:41:300:300	4293912	1					
ANR	4293984	ExpressionStatement	FAIL	478:2:11711:11715	4293912	0	True				
ANR	4293985	Identifier	FAIL		4293912	0					
ANR	4293986	ExpressionStatement	PASS	480:1:11721:11725	4293912	13	True				
ANR	4293987	Identifier	PASS		4293912	0					
ANR	4293988	ReturnType	static bool		4293912	1					
ANR	4293989	Identifier	test_chomp_new_line_end		4293912	2					
ANR	4293990	ParameterList			4293912	3					
ANR	4293991	CFGEntryNode	ENTRY		4293912		True				
ANR	4293992	CFGExitNode	EXIT		4293912		True				
ANR	4293993	Symbol	strcmp		4293912						
ANR	4293994	Symbol	a		4293912						
ANR	4293995	Symbol	a . c_str		4293912						
ANR	4293996	Symbol	MATCH		4293912						
ANR	4293997	Function	test_chomp_crlf_end	483:0:11730:12091							
ANR	4293998	FunctionDef	test_chomp_crlf_end ()		4293997	0					
ANR	4293999	CompoundStatement		483:34:11764:12091	4293997	0					
ANR	4294000	Statement	emit_test	484:1:11767:11775	4293997	0	True				
ANR	4294001	Statement	(	484:10:11776:11776	4293997	1	True				
ANR	4294002	Statement	"""Does chomp() remove CR and LF if they are the last characters"""	484:11:11777:11839	4293997	2	True				
ANR	4294003	Statement	""" in the std::string?"""	485:2:11843:11864	4293997	3	True				
ANR	4294004	Statement	)	485:24:11865:11865	4293997	4	True				
ANR	4294005	ExpressionStatement		485:25:11866:11866	4293997	5	True				
ANR	4294006	IdentifierDeclStatement	"std :: string a ( ""stuff\\r\\n"" ) ;"	486:1:11869:11895	4293997	6	True				
ANR	4294007	IdentifierDecl	"a ( ""stuff\\r\\n"" )"		4293997	0					
ANR	4294008	IdentifierDeclType	std :: string		4293997	0					
ANR	4294009	Identifier	a		4293997	1					
ANR	4294010	PrimaryExpression	"""stuff\\r\\n"""		4293997	2					
ANR	4294011	ExpressionStatement	chomp ( a )	487:1:11898:11906	4293997	7	True				
ANR	4294012	CallExpression	chomp ( a )		4293997	0					
ANR	4294013	Callee	chomp		4293997	0					
ANR	4294014	Identifier	chomp		4293997	0					
ANR	4294015	ArgumentList	a		4293997	1					
ANR	4294016	Argument	a		4293997	0					
ANR	4294017	Identifier	a		4293997	0					
ANR	4294018	ExpressionStatement	emit_output_expected_header ( )	488:1:11909:11938	4293997	8	True				
ANR	4294019	CallExpression	emit_output_expected_header ( )		4293997	0					
ANR	4294020	Callee	emit_output_expected_header		4293997	0					
ANR	4294021	Identifier	emit_output_expected_header		4293997	0					
ANR	4294022	ArgumentList			4293997	1					
ANR	4294023	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff"" )"	489:1:11941:11967	4293997	9	True				
ANR	4294024	CallExpression	"emit_retval ( ""%s"" , ""stuff"" )"		4293997	0					
ANR	4294025	Callee	emit_retval		4293997	0					
ANR	4294026	Identifier	emit_retval		4293997	0					
ANR	4294027	ArgumentList	"""%s"""		4293997	1					
ANR	4294028	Argument	"""%s"""		4293997	0					
ANR	4294029	PrimaryExpression	"""%s"""		4293997	0					
ANR	4294030	Argument	"""stuff"""		4293997	1					
ANR	4294031	PrimaryExpression	"""stuff"""		4293997	0					
ANR	4294032	ExpressionStatement	emit_output_actual_header ( )	490:1:11970:11997	4293997	10	True				
ANR	4294033	CallExpression	emit_output_actual_header ( )		4293997	0					
ANR	4294034	Callee	emit_output_actual_header		4293997	0					
ANR	4294035	Identifier	emit_output_actual_header		4293997	0					
ANR	4294036	ArgumentList			4293997	1					
ANR	4294037	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	491:1:12000:12028	4293997	11	True				
ANR	4294038	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4293997	0					
ANR	4294039	Callee	emit_retval		4293997	0					
ANR	4294040	Identifier	emit_retval		4293997	0					
ANR	4294041	ArgumentList	"""%s"""		4293997	1					
ANR	4294042	Argument	"""%s"""		4293997	0					
ANR	4294043	PrimaryExpression	"""%s"""		4293997	0					
ANR	4294044	Argument	a . c_str ( )		4293997	1					
ANR	4294045	CallExpression	a . c_str ( )		4293997	0					
ANR	4294046	Callee	a . c_str		4293997	0					
ANR	4294047	MemberAccess	a . c_str		4293997	0					
ANR	4294048	Identifier	a		4293997	0					
ANR	4294049	Identifier	c_str		4293997	1					
ANR	4294050	ArgumentList			4293997	1					
ANR	4294051	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH )"		4293997	12					
ANR	4294052	Condition	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"	492:4:12034:12068	4293997	0	True				
ANR	4294053	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"		4293997	0		!=			
ANR	4294054	CallExpression	"strcmp ( a . c_str ( ) , ""stuff"" )"		4293997	0					
ANR	4294055	Callee	strcmp		4293997	0					
ANR	4294056	Identifier	strcmp		4293997	0					
ANR	4294057	ArgumentList	a . c_str ( )		4293997	1					
ANR	4294058	Argument	a . c_str ( )		4293997	0					
ANR	4294059	CallExpression	a . c_str ( )		4293997	0					
ANR	4294060	Callee	a . c_str		4293997	0					
ANR	4294061	MemberAccess	a . c_str		4293997	0					
ANR	4294062	Identifier	a		4293997	0					
ANR	4294063	Identifier	c_str		4293997	1					
ANR	4294064	ArgumentList			4293997	1					
ANR	4294065	Argument	"""stuff"""		4293997	1					
ANR	4294066	PrimaryExpression	"""stuff"""		4293997	0					
ANR	4294067	Identifier	MATCH		4293997	1					
ANR	4294068	CompoundStatement		10:41:306:306	4293997	1					
ANR	4294069	ExpressionStatement	FAIL	493:2:12075:12079	4293997	0	True				
ANR	4294070	Identifier	FAIL		4293997	0					
ANR	4294071	ExpressionStatement	PASS	495:1:12085:12089	4293997	13	True				
ANR	4294072	Identifier	PASS		4293997	0					
ANR	4294073	ReturnType	static bool		4293997	1					
ANR	4294074	Identifier	test_chomp_crlf_end		4293997	2					
ANR	4294075	ParameterList			4293997	3					
ANR	4294076	CFGEntryNode	ENTRY		4293997		True				
ANR	4294077	CFGExitNode	EXIT		4293997		True				
ANR	4294078	Symbol	strcmp		4293997						
ANR	4294079	Symbol	a		4293997						
ANR	4294080	Symbol	a . c_str		4293997						
ANR	4294081	Symbol	MATCH		4293997						
ANR	4294082	Function	test_chomp_new_line_beginning	498:0:12094:12505							
ANR	4294083	FunctionDef	test_chomp_new_line_beginning ()		4294082	0					
ANR	4294084	CompoundStatement		498:44:12138:12505	4294082	0					
ANR	4294085	Statement	emit_test	499:1:12141:12149	4294082	0	True				
ANR	4294086	Statement	(	499:10:12150:12150	4294082	1	True				
ANR	4294087	Statement	"""Does chomp() do nothing if the newLine if it's not the last """	499:11:12151:12212	4294082	2	True				
ANR	4294088	Statement	"""character in the std::string?"""	500:2:12216:12246	4294082	3	True				
ANR	4294089	Statement	)	500:33:12247:12247	4294082	4	True				
ANR	4294090	ExpressionStatement		500:34:12248:12248	4294082	5	True				
ANR	4294091	IdentifierDeclStatement	"std :: string a ( ""stuff\\nmore stuff"" ) ;"	501:1:12251:12285	4294082	6	True				
ANR	4294092	IdentifierDecl	"a ( ""stuff\\nmore stuff"" )"		4294082	0					
ANR	4294093	IdentifierDeclType	std :: string		4294082	0					
ANR	4294094	Identifier	a		4294082	1					
ANR	4294095	PrimaryExpression	"""stuff\\nmore stuff"""		4294082	2					
ANR	4294096	ExpressionStatement	chomp ( a )	502:1:12288:12296	4294082	7	True				
ANR	4294097	CallExpression	chomp ( a )		4294082	0					
ANR	4294098	Callee	chomp		4294082	0					
ANR	4294099	Identifier	chomp		4294082	0					
ANR	4294100	ArgumentList	a		4294082	1					
ANR	4294101	Argument	a		4294082	0					
ANR	4294102	Identifier	a		4294082	0					
ANR	4294103	ExpressionStatement	emit_output_expected_header ( )	503:1:12299:12328	4294082	8	True				
ANR	4294104	CallExpression	emit_output_expected_header ( )		4294082	0					
ANR	4294105	Callee	emit_output_expected_header		4294082	0					
ANR	4294106	Identifier	emit_output_expected_header		4294082	0					
ANR	4294107	ArgumentList			4294082	1					
ANR	4294108	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff\\nmore stuff"" )"	504:1:12331:12369	4294082	9	True				
ANR	4294109	CallExpression	"emit_retval ( ""%s"" , ""stuff\\nmore stuff"" )"		4294082	0					
ANR	4294110	Callee	emit_retval		4294082	0					
ANR	4294111	Identifier	emit_retval		4294082	0					
ANR	4294112	ArgumentList	"""%s"""		4294082	1					
ANR	4294113	Argument	"""%s"""		4294082	0					
ANR	4294114	PrimaryExpression	"""%s"""		4294082	0					
ANR	4294115	Argument	"""stuff\\nmore stuff"""		4294082	1					
ANR	4294116	PrimaryExpression	"""stuff\\nmore stuff"""		4294082	0					
ANR	4294117	ExpressionStatement	emit_output_actual_header ( )	505:1:12372:12399	4294082	10	True				
ANR	4294118	CallExpression	emit_output_actual_header ( )		4294082	0					
ANR	4294119	Callee	emit_output_actual_header		4294082	0					
ANR	4294120	Identifier	emit_output_actual_header		4294082	0					
ANR	4294121	ArgumentList			4294082	1					
ANR	4294122	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	506:1:12402:12430	4294082	11	True				
ANR	4294123	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294082	0					
ANR	4294124	Callee	emit_retval		4294082	0					
ANR	4294125	Identifier	emit_retval		4294082	0					
ANR	4294126	ArgumentList	"""%s"""		4294082	1					
ANR	4294127	Argument	"""%s"""		4294082	0					
ANR	4294128	PrimaryExpression	"""%s"""		4294082	0					
ANR	4294129	Argument	a . c_str ( )		4294082	1					
ANR	4294130	CallExpression	a . c_str ( )		4294082	0					
ANR	4294131	Callee	a . c_str		4294082	0					
ANR	4294132	MemberAccess	a . c_str		4294082	0					
ANR	4294133	Identifier	a		4294082	0					
ANR	4294134	Identifier	c_str		4294082	1					
ANR	4294135	ArgumentList			4294082	1					
ANR	4294136	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH )"		4294082	12					
ANR	4294137	Condition	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH"	507:4:12436:12482	4294082	0	True				
ANR	4294138	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH"		4294082	0		!=			
ANR	4294139	CallExpression	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" )"		4294082	0					
ANR	4294140	Callee	strcmp		4294082	0					
ANR	4294141	Identifier	strcmp		4294082	0					
ANR	4294142	ArgumentList	a . c_str ( )		4294082	1					
ANR	4294143	Argument	a . c_str ( )		4294082	0					
ANR	4294144	CallExpression	a . c_str ( )		4294082	0					
ANR	4294145	Callee	a . c_str		4294082	0					
ANR	4294146	MemberAccess	a . c_str		4294082	0					
ANR	4294147	Identifier	a		4294082	0					
ANR	4294148	Identifier	c_str		4294082	1					
ANR	4294149	ArgumentList			4294082	1					
ANR	4294150	Argument	"""stuff\\nmore stuff"""		4294082	1					
ANR	4294151	PrimaryExpression	"""stuff\\nmore stuff"""		4294082	0					
ANR	4294152	Identifier	MATCH		4294082	1					
ANR	4294153	CompoundStatement		10:53:346:346	4294082	1					
ANR	4294154	ExpressionStatement	FAIL	508:2:12489:12493	4294082	0	True				
ANR	4294155	Identifier	FAIL		4294082	0					
ANR	4294156	ExpressionStatement	PASS	510:1:12499:12503	4294082	13	True				
ANR	4294157	Identifier	PASS		4294082	0					
ANR	4294158	ReturnType	static bool		4294082	1					
ANR	4294159	Identifier	test_chomp_new_line_beginning		4294082	2					
ANR	4294160	ParameterList			4294082	3					
ANR	4294161	CFGEntryNode	ENTRY		4294082		True				
ANR	4294162	CFGExitNode	EXIT		4294082		True				
ANR	4294163	Symbol	strcmp		4294082						
ANR	4294164	Symbol	a		4294082						
ANR	4294165	Symbol	a . c_str		4294082						
ANR	4294166	Symbol	MATCH		4294082						
ANR	4294167	Function	test_chomp_return_false	513:0:12508:12832							
ANR	4294168	FunctionDef	test_chomp_return_false ()		4294167	0					
ANR	4294169	CompoundStatement		513:38:12546:12832	4294167	0					
ANR	4294170	Statement	emit_test	514:1:12549:12557	4294167	0	True				
ANR	4294171	Statement	(	514:10:12558:12558	4294167	1	True				
ANR	4294172	Statement	"""Does chomp() return false if the std::string doesn't have a """	514:11:12559:12620	4294167	2	True				
ANR	4294173	Statement	"""newLine?"""	515:2:12624:12633	4294167	3	True				
ANR	4294174	Statement	)	515:12:12634:12634	4294167	4	True				
ANR	4294175	ExpressionStatement		515:13:12635:12635	4294167	5	True				
ANR	4294176	IdentifierDeclStatement	"std :: string a ( ""stuff"" ) ;"	516:1:12638:12660	4294167	6	True				
ANR	4294177	IdentifierDecl	"a ( ""stuff"" )"		4294167	0					
ANR	4294178	IdentifierDeclType	std :: string		4294167	0					
ANR	4294179	Identifier	a		4294167	1					
ANR	4294180	PrimaryExpression	"""stuff"""		4294167	2					
ANR	4294181	IdentifierDeclStatement	bool result = chomp ( a ) ;	517:1:12663:12685	4294167	7	True				
ANR	4294182	IdentifierDecl	result = chomp ( a )		4294167	0					
ANR	4294183	IdentifierDeclType	bool		4294167	0					
ANR	4294184	Identifier	result		4294167	1					
ANR	4294185	AssignmentExpression	result = chomp ( a )		4294167	2		=			
ANR	4294186	Identifier	result		4294167	0					
ANR	4294187	CallExpression	chomp ( a )		4294167	1					
ANR	4294188	Callee	chomp		4294167	0					
ANR	4294189	Identifier	chomp		4294167	0					
ANR	4294190	ArgumentList	a		4294167	1					
ANR	4294191	Argument	a		4294167	0					
ANR	4294192	Identifier	a		4294167	0					
ANR	4294193	ExpressionStatement	emit_output_expected_header ( )	518:1:12688:12717	4294167	8	True				
ANR	4294194	CallExpression	emit_output_expected_header ( )		4294167	0					
ANR	4294195	Callee	emit_output_expected_header		4294167	0					
ANR	4294196	Identifier	emit_output_expected_header		4294167	0					
ANR	4294197	ArgumentList			4294167	1					
ANR	4294198	ExpressionStatement	"emit_retval ( ""%d"" , 0 )"	519:1:12720:12740	4294167	9	True				
ANR	4294199	CallExpression	"emit_retval ( ""%d"" , 0 )"		4294167	0					
ANR	4294200	Callee	emit_retval		4294167	0					
ANR	4294201	Identifier	emit_retval		4294167	0					
ANR	4294202	ArgumentList	"""%d"""		4294167	1					
ANR	4294203	Argument	"""%d"""		4294167	0					
ANR	4294204	PrimaryExpression	"""%d"""		4294167	0					
ANR	4294205	Argument	0		4294167	1					
ANR	4294206	PrimaryExpression	0		4294167	0					
ANR	4294207	ExpressionStatement	emit_output_actual_header ( )	520:1:12743:12770	4294167	10	True				
ANR	4294208	CallExpression	emit_output_actual_header ( )		4294167	0					
ANR	4294209	Callee	emit_output_actual_header		4294167	0					
ANR	4294210	Identifier	emit_output_actual_header		4294167	0					
ANR	4294211	ArgumentList			4294167	1					
ANR	4294212	ExpressionStatement	"emit_retval ( ""%d"" , result )"	521:1:12773:12798	4294167	11	True				
ANR	4294213	CallExpression	"emit_retval ( ""%d"" , result )"		4294167	0					
ANR	4294214	Callee	emit_retval		4294167	0					
ANR	4294215	Identifier	emit_retval		4294167	0					
ANR	4294216	ArgumentList	"""%d"""		4294167	1					
ANR	4294217	Argument	"""%d"""		4294167	0					
ANR	4294218	PrimaryExpression	"""%d"""		4294167	0					
ANR	4294219	Argument	result		4294167	1					
ANR	4294220	Identifier	result		4294167	0					
ANR	4294221	IfStatement	if ( result )		4294167	12					
ANR	4294222	Condition	result	522:4:12804:12809	4294167	0	True				
ANR	4294223	Identifier	result		4294167	0					
ANR	4294224	CompoundStatement		10:12:265:265	4294167	1					
ANR	4294225	ExpressionStatement	FAIL	523:2:12816:12820	4294167	0	True				
ANR	4294226	Identifier	FAIL		4294167	0					
ANR	4294227	ExpressionStatement	PASS	525:1:12826:12830	4294167	13	True				
ANR	4294228	Identifier	PASS		4294167	0					
ANR	4294229	ReturnType	static bool		4294167	1					
ANR	4294230	Identifier	test_chomp_return_false		4294167	2					
ANR	4294231	ParameterList			4294167	3					
ANR	4294232	CFGEntryNode	ENTRY		4294167		True				
ANR	4294233	CFGExitNode	EXIT		4294167		True				
ANR	4294234	Symbol	result		4294167						
ANR	4294235	Symbol	a		4294167						
ANR	4294236	Symbol	chomp		4294167						
ANR	4294237	Function	test_chomp_return_true	528:0:12835:13162							
ANR	4294238	FunctionDef	test_chomp_return_true ()		4294237	0					
ANR	4294239	CompoundStatement		528:37:12872:13162	4294237	0					
ANR	4294240	Statement	emit_test	529:1:12875:12883	4294237	0	True				
ANR	4294241	Statement	(	529:10:12884:12884	4294237	1	True				
ANR	4294242	Statement	"""Does chomp() return true if the std::string has a newLine at the """	529:11:12885:12951	4294237	2	True				
ANR	4294243	Statement	"""end?"""	530:2:12955:12960	4294237	3	True				
ANR	4294244	Statement	)	530:8:12961:12961	4294237	4	True				
ANR	4294245	ExpressionStatement		530:9:12962:12962	4294237	5	True				
ANR	4294246	IdentifierDeclStatement	"std :: string a ( ""stuff\\n"" ) ;"	531:1:12965:12989	4294237	6	True				
ANR	4294247	IdentifierDecl	"a ( ""stuff\\n"" )"		4294237	0					
ANR	4294248	IdentifierDeclType	std :: string		4294237	0					
ANR	4294249	Identifier	a		4294237	1					
ANR	4294250	PrimaryExpression	"""stuff\\n"""		4294237	2					
ANR	4294251	IdentifierDeclStatement	bool result = chomp ( a ) ;	532:1:12992:13014	4294237	7	True				
ANR	4294252	IdentifierDecl	result = chomp ( a )		4294237	0					
ANR	4294253	IdentifierDeclType	bool		4294237	0					
ANR	4294254	Identifier	result		4294237	1					
ANR	4294255	AssignmentExpression	result = chomp ( a )		4294237	2		=			
ANR	4294256	Identifier	result		4294237	0					
ANR	4294257	CallExpression	chomp ( a )		4294237	1					
ANR	4294258	Callee	chomp		4294237	0					
ANR	4294259	Identifier	chomp		4294237	0					
ANR	4294260	ArgumentList	a		4294237	1					
ANR	4294261	Argument	a		4294237	0					
ANR	4294262	Identifier	a		4294237	0					
ANR	4294263	ExpressionStatement	emit_output_expected_header ( )	533:1:13017:13046	4294237	8	True				
ANR	4294264	CallExpression	emit_output_expected_header ( )		4294237	0					
ANR	4294265	Callee	emit_output_expected_header		4294237	0					
ANR	4294266	Identifier	emit_output_expected_header		4294237	0					
ANR	4294267	ArgumentList			4294237	1					
ANR	4294268	ExpressionStatement	"emit_retval ( ""%d"" , 1 )"	534:1:13049:13069	4294237	9	True				
ANR	4294269	CallExpression	"emit_retval ( ""%d"" , 1 )"		4294237	0					
ANR	4294270	Callee	emit_retval		4294237	0					
ANR	4294271	Identifier	emit_retval		4294237	0					
ANR	4294272	ArgumentList	"""%d"""		4294237	1					
ANR	4294273	Argument	"""%d"""		4294237	0					
ANR	4294274	PrimaryExpression	"""%d"""		4294237	0					
ANR	4294275	Argument	1		4294237	1					
ANR	4294276	PrimaryExpression	1		4294237	0					
ANR	4294277	ExpressionStatement	emit_output_actual_header ( )	535:1:13072:13099	4294237	10	True				
ANR	4294278	CallExpression	emit_output_actual_header ( )		4294237	0					
ANR	4294279	Callee	emit_output_actual_header		4294237	0					
ANR	4294280	Identifier	emit_output_actual_header		4294237	0					
ANR	4294281	ArgumentList			4294237	1					
ANR	4294282	ExpressionStatement	"emit_retval ( ""%d"" , result )"	536:1:13102:13127	4294237	11	True				
ANR	4294283	CallExpression	"emit_retval ( ""%d"" , result )"		4294237	0					
ANR	4294284	Callee	emit_retval		4294237	0					
ANR	4294285	Identifier	emit_retval		4294237	0					
ANR	4294286	ArgumentList	"""%d"""		4294237	1					
ANR	4294287	Argument	"""%d"""		4294237	0					
ANR	4294288	PrimaryExpression	"""%d"""		4294237	0					
ANR	4294289	Argument	result		4294237	1					
ANR	4294290	Identifier	result		4294237	0					
ANR	4294291	IfStatement	if ( ! result )		4294237	12					
ANR	4294292	Condition	! result	537:4:13133:13139	4294237	0	True				
ANR	4294293	UnaryOperationExpression	! result		4294237	0					
ANR	4294294	UnaryOperator	!		4294237	0					
ANR	4294295	Identifier	result		4294237	1					
ANR	4294296	CompoundStatement		10:13:269:269	4294237	1					
ANR	4294297	ExpressionStatement	FAIL	538:2:13146:13150	4294237	0	True				
ANR	4294298	Identifier	FAIL		4294237	0					
ANR	4294299	ExpressionStatement	PASS	540:1:13156:13160	4294237	13	True				
ANR	4294300	Identifier	PASS		4294237	0					
ANR	4294301	ReturnType	static bool		4294237	1					
ANR	4294302	Identifier	test_chomp_return_true		4294237	2					
ANR	4294303	ParameterList			4294237	3					
ANR	4294304	CFGEntryNode	ENTRY		4294237		True				
ANR	4294305	CFGExitNode	EXIT		4294237		True				
ANR	4294306	Symbol	result		4294237						
ANR	4294307	Symbol	a		4294237						
ANR	4294308	Symbol	chomp		4294237						
ANR	4294309	Function	test_trim_beginning_and_end	543:0:13165:13525							
ANR	4294310	FunctionDef	test_trim_beginning_and_end ()		4294309	0					
ANR	4294311	CompoundStatement		543:42:13207:13525	4294309	0					
ANR	4294312	Statement	emit_test	544:1:13210:13218	4294309	0	True				
ANR	4294313	Statement	(	544:10:13219:13219	4294309	1	True				
ANR	4294314	Statement	"""Test trim on a std::string with white space at the beginning and """	544:11:13220:13286	4294309	2	True				
ANR	4294315	Statement	"""end."""	545:2:13290:13295	4294309	3	True				
ANR	4294316	Statement	)	545:8:13296:13296	4294309	4	True				
ANR	4294317	ExpressionStatement		545:9:13297:13297	4294309	5	True				
ANR	4294318	IdentifierDeclStatement	"std :: string a ( ""  Miguel   "" ) ;"	546:1:13300:13328	4294309	6	True				
ANR	4294319	IdentifierDecl	"a ( ""  Miguel   "" )"		4294309	0					
ANR	4294320	IdentifierDeclType	std :: string		4294309	0					
ANR	4294321	Identifier	a		4294309	1					
ANR	4294322	PrimaryExpression	"""  Miguel   """		4294309	2					
ANR	4294323	ExpressionStatement	trim ( a )	547:1:13331:13338	4294309	7	True				
ANR	4294324	CallExpression	trim ( a )		4294309	0					
ANR	4294325	Callee	trim		4294309	0					
ANR	4294326	Identifier	trim		4294309	0					
ANR	4294327	ArgumentList	a		4294309	1					
ANR	4294328	Argument	a		4294309	0					
ANR	4294329	Identifier	a		4294309	0					
ANR	4294330	ExpressionStatement	emit_output_expected_header ( )	548:1:13341:13370	4294309	8	True				
ANR	4294331	CallExpression	emit_output_expected_header ( )		4294309	0					
ANR	4294332	Callee	emit_output_expected_header		4294309	0					
ANR	4294333	Identifier	emit_output_expected_header		4294309	0					
ANR	4294334	ArgumentList			4294309	1					
ANR	4294335	ExpressionStatement	"emit_retval ( ""%s"" , ""Miguel"" )"	549:1:13373:13400	4294309	9	True				
ANR	4294336	CallExpression	"emit_retval ( ""%s"" , ""Miguel"" )"		4294309	0					
ANR	4294337	Callee	emit_retval		4294309	0					
ANR	4294338	Identifier	emit_retval		4294309	0					
ANR	4294339	ArgumentList	"""%s"""		4294309	1					
ANR	4294340	Argument	"""%s"""		4294309	0					
ANR	4294341	PrimaryExpression	"""%s"""		4294309	0					
ANR	4294342	Argument	"""Miguel"""		4294309	1					
ANR	4294343	PrimaryExpression	"""Miguel"""		4294309	0					
ANR	4294344	ExpressionStatement	emit_output_actual_header ( )	550:1:13403:13430	4294309	10	True				
ANR	4294345	CallExpression	emit_output_actual_header ( )		4294309	0					
ANR	4294346	Callee	emit_output_actual_header		4294309	0					
ANR	4294347	Identifier	emit_output_actual_header		4294309	0					
ANR	4294348	ArgumentList			4294309	1					
ANR	4294349	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	551:1:13433:13461	4294309	11	True				
ANR	4294350	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294309	0					
ANR	4294351	Callee	emit_retval		4294309	0					
ANR	4294352	Identifier	emit_retval		4294309	0					
ANR	4294353	ArgumentList	"""%s"""		4294309	1					
ANR	4294354	Argument	"""%s"""		4294309	0					
ANR	4294355	PrimaryExpression	"""%s"""		4294309	0					
ANR	4294356	Argument	a . c_str ( )		4294309	1					
ANR	4294357	CallExpression	a . c_str ( )		4294309	0					
ANR	4294358	Callee	a . c_str		4294309	0					
ANR	4294359	MemberAccess	a . c_str		4294309	0					
ANR	4294360	Identifier	a		4294309	0					
ANR	4294361	Identifier	c_str		4294309	1					
ANR	4294362	ArgumentList			4294309	1					
ANR	4294363	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH )"		4294309	12					
ANR	4294364	Condition	"strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH"	552:4:13467:13502	4294309	0	True				
ANR	4294365	EqualityExpression	"strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH"		4294309	0		!=			
ANR	4294366	CallExpression	"strcmp ( a . c_str ( ) , ""Miguel"" )"		4294309	0					
ANR	4294367	Callee	strcmp		4294309	0					
ANR	4294368	Identifier	strcmp		4294309	0					
ANR	4294369	ArgumentList	a . c_str ( )		4294309	1					
ANR	4294370	Argument	a . c_str ( )		4294309	0					
ANR	4294371	CallExpression	a . c_str ( )		4294309	0					
ANR	4294372	Callee	a . c_str		4294309	0					
ANR	4294373	MemberAccess	a . c_str		4294309	0					
ANR	4294374	Identifier	a		4294309	0					
ANR	4294375	Identifier	c_str		4294309	1					
ANR	4294376	ArgumentList			4294309	1					
ANR	4294377	Argument	"""Miguel"""		4294309	1					
ANR	4294378	PrimaryExpression	"""Miguel"""		4294309	0					
ANR	4294379	Identifier	MATCH		4294309	1					
ANR	4294380	CompoundStatement		10:42:297:297	4294309	1					
ANR	4294381	ExpressionStatement	FAIL	553:2:13509:13513	4294309	0	True				
ANR	4294382	Identifier	FAIL		4294309	0					
ANR	4294383	ExpressionStatement	PASS	555:1:13519:13523	4294309	13	True				
ANR	4294384	Identifier	PASS		4294309	0					
ANR	4294385	ReturnType	static bool		4294309	1					
ANR	4294386	Identifier	test_trim_beginning_and_end		4294309	2					
ANR	4294387	ParameterList			4294309	3					
ANR	4294388	CFGEntryNode	ENTRY		4294309		True				
ANR	4294389	CFGExitNode	EXIT		4294309		True				
ANR	4294390	Symbol	strcmp		4294309						
ANR	4294391	Symbol	a		4294309						
ANR	4294392	Symbol	a . c_str		4294309						
ANR	4294393	Symbol	MATCH		4294309						
ANR	4294394	Function	test_trim_end	558:0:13528:13858							
ANR	4294395	FunctionDef	test_trim_end ()		4294394	0					
ANR	4294396	CompoundStatement		558:28:13556:13858	4294394	0					
ANR	4294397	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with white space at the end."" )"	559:1:13559:13629	4294394	0	True				
ANR	4294398	CallExpression	"emit_test ( ""Test trim() on a std::string with white space at the end."" )"		4294394	0					
ANR	4294399	Callee	emit_test		4294394	0					
ANR	4294400	Identifier	emit_test		4294394	0					
ANR	4294401	ArgumentList	"""Test trim() on a std::string with white space at the end."""		4294394	1					
ANR	4294402	Argument	"""Test trim() on a std::string with white space at the end."""		4294394	0					
ANR	4294403	PrimaryExpression	"""Test trim() on a std::string with white space at the end."""		4294394	0					
ANR	4294404	IdentifierDeclStatement	"std :: string a ( ""Hinault   "" ) ;"	560:1:13632:13659	4294394	1	True				
ANR	4294405	IdentifierDecl	"a ( ""Hinault   "" )"		4294394	0					
ANR	4294406	IdentifierDeclType	std :: string		4294394	0					
ANR	4294407	Identifier	a		4294394	1					
ANR	4294408	PrimaryExpression	"""Hinault   """		4294394	2					
ANR	4294409	ExpressionStatement	trim ( a )	561:1:13662:13669	4294394	2	True				
ANR	4294410	CallExpression	trim ( a )		4294394	0					
ANR	4294411	Callee	trim		4294394	0					
ANR	4294412	Identifier	trim		4294394	0					
ANR	4294413	ArgumentList	a		4294394	1					
ANR	4294414	Argument	a		4294394	0					
ANR	4294415	Identifier	a		4294394	0					
ANR	4294416	ExpressionStatement	emit_output_expected_header ( )	562:1:13672:13701	4294394	3	True				
ANR	4294417	CallExpression	emit_output_expected_header ( )		4294394	0					
ANR	4294418	Callee	emit_output_expected_header		4294394	0					
ANR	4294419	Identifier	emit_output_expected_header		4294394	0					
ANR	4294420	ArgumentList			4294394	1					
ANR	4294421	ExpressionStatement	"emit_retval ( ""%s"" , ""Hinault"" )"	563:1:13704:13732	4294394	4	True				
ANR	4294422	CallExpression	"emit_retval ( ""%s"" , ""Hinault"" )"		4294394	0					
ANR	4294423	Callee	emit_retval		4294394	0					
ANR	4294424	Identifier	emit_retval		4294394	0					
ANR	4294425	ArgumentList	"""%s"""		4294394	1					
ANR	4294426	Argument	"""%s"""		4294394	0					
ANR	4294427	PrimaryExpression	"""%s"""		4294394	0					
ANR	4294428	Argument	"""Hinault"""		4294394	1					
ANR	4294429	PrimaryExpression	"""Hinault"""		4294394	0					
ANR	4294430	ExpressionStatement	emit_output_actual_header ( )	564:1:13735:13762	4294394	5	True				
ANR	4294431	CallExpression	emit_output_actual_header ( )		4294394	0					
ANR	4294432	Callee	emit_output_actual_header		4294394	0					
ANR	4294433	Identifier	emit_output_actual_header		4294394	0					
ANR	4294434	ArgumentList			4294394	1					
ANR	4294435	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	565:1:13765:13793	4294394	6	True				
ANR	4294436	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294394	0					
ANR	4294437	Callee	emit_retval		4294394	0					
ANR	4294438	Identifier	emit_retval		4294394	0					
ANR	4294439	ArgumentList	"""%s"""		4294394	1					
ANR	4294440	Argument	"""%s"""		4294394	0					
ANR	4294441	PrimaryExpression	"""%s"""		4294394	0					
ANR	4294442	Argument	a . c_str ( )		4294394	1					
ANR	4294443	CallExpression	a . c_str ( )		4294394	0					
ANR	4294444	Callee	a . c_str		4294394	0					
ANR	4294445	MemberAccess	a . c_str		4294394	0					
ANR	4294446	Identifier	a		4294394	0					
ANR	4294447	Identifier	c_str		4294394	1					
ANR	4294448	ArgumentList			4294394	1					
ANR	4294449	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH )"		4294394	7					
ANR	4294450	Condition	"strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH"	566:4:13799:13835	4294394	0	True				
ANR	4294451	EqualityExpression	"strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH"		4294394	0		!=			
ANR	4294452	CallExpression	"strcmp ( a . c_str ( ) , ""Hinault"" )"		4294394	0					
ANR	4294453	Callee	strcmp		4294394	0					
ANR	4294454	Identifier	strcmp		4294394	0					
ANR	4294455	ArgumentList	a . c_str ( )		4294394	1					
ANR	4294456	Argument	a . c_str ( )		4294394	0					
ANR	4294457	CallExpression	a . c_str ( )		4294394	0					
ANR	4294458	Callee	a . c_str		4294394	0					
ANR	4294459	MemberAccess	a . c_str		4294394	0					
ANR	4294460	Identifier	a		4294394	0					
ANR	4294461	Identifier	c_str		4294394	1					
ANR	4294462	ArgumentList			4294394	1					
ANR	4294463	Argument	"""Hinault"""		4294394	1					
ANR	4294464	PrimaryExpression	"""Hinault"""		4294394	0					
ANR	4294465	Identifier	MATCH		4294394	1					
ANR	4294466	CompoundStatement		9:43:281:281	4294394	1					
ANR	4294467	ExpressionStatement	FAIL	567:2:13842:13846	4294394	0	True				
ANR	4294468	Identifier	FAIL		4294394	0					
ANR	4294469	ExpressionStatement	PASS	569:1:13852:13856	4294394	8	True				
ANR	4294470	Identifier	PASS		4294394	0					
ANR	4294471	ReturnType	static bool		4294394	1					
ANR	4294472	Identifier	test_trim_end		4294394	2					
ANR	4294473	ParameterList			4294394	3					
ANR	4294474	CFGEntryNode	ENTRY		4294394		True				
ANR	4294475	CFGExitNode	EXIT		4294394		True				
ANR	4294476	Symbol	strcmp		4294394						
ANR	4294477	Symbol	a		4294394						
ANR	4294478	Symbol	a . c_str		4294394						
ANR	4294479	Symbol	MATCH		4294394						
ANR	4294480	Function	test_trim_none	572:0:13861:14184							
ANR	4294481	FunctionDef	test_trim_none ()		4294480	0					
ANR	4294482	CompoundStatement		572:29:13890:14184	4294480	0					
ANR	4294483	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with no white space."" )"	573:1:13893:13955	4294480	0	True				
ANR	4294484	CallExpression	"emit_test ( ""Test trim() on a std::string with no white space."" )"		4294480	0					
ANR	4294485	Callee	emit_test		4294480	0					
ANR	4294486	Identifier	emit_test		4294480	0					
ANR	4294487	ArgumentList	"""Test trim() on a std::string with no white space."""		4294480	1					
ANR	4294488	Argument	"""Test trim() on a std::string with no white space."""		4294480	0					
ANR	4294489	PrimaryExpression	"""Test trim() on a std::string with no white space."""		4294480	0					
ANR	4294490	IdentifierDeclStatement	"std :: string a ( ""Indurain"" ) ;"	574:1:13958:13983	4294480	1	True				
ANR	4294491	IdentifierDecl	"a ( ""Indurain"" )"		4294480	0					
ANR	4294492	IdentifierDeclType	std :: string		4294480	0					
ANR	4294493	Identifier	a		4294480	1					
ANR	4294494	PrimaryExpression	"""Indurain"""		4294480	2					
ANR	4294495	ExpressionStatement	trim ( a )	575:1:13986:13993	4294480	2	True				
ANR	4294496	CallExpression	trim ( a )		4294480	0					
ANR	4294497	Callee	trim		4294480	0					
ANR	4294498	Identifier	trim		4294480	0					
ANR	4294499	ArgumentList	a		4294480	1					
ANR	4294500	Argument	a		4294480	0					
ANR	4294501	Identifier	a		4294480	0					
ANR	4294502	ExpressionStatement	emit_output_expected_header ( )	576:1:13996:14025	4294480	3	True				
ANR	4294503	CallExpression	emit_output_expected_header ( )		4294480	0					
ANR	4294504	Callee	emit_output_expected_header		4294480	0					
ANR	4294505	Identifier	emit_output_expected_header		4294480	0					
ANR	4294506	ArgumentList			4294480	1					
ANR	4294507	ExpressionStatement	"emit_retval ( ""%s"" , ""Indurain"" )"	577:1:14028:14057	4294480	4	True				
ANR	4294508	CallExpression	"emit_retval ( ""%s"" , ""Indurain"" )"		4294480	0					
ANR	4294509	Callee	emit_retval		4294480	0					
ANR	4294510	Identifier	emit_retval		4294480	0					
ANR	4294511	ArgumentList	"""%s"""		4294480	1					
ANR	4294512	Argument	"""%s"""		4294480	0					
ANR	4294513	PrimaryExpression	"""%s"""		4294480	0					
ANR	4294514	Argument	"""Indurain"""		4294480	1					
ANR	4294515	PrimaryExpression	"""Indurain"""		4294480	0					
ANR	4294516	ExpressionStatement	emit_output_actual_header ( )	578:1:14060:14087	4294480	5	True				
ANR	4294517	CallExpression	emit_output_actual_header ( )		4294480	0					
ANR	4294518	Callee	emit_output_actual_header		4294480	0					
ANR	4294519	Identifier	emit_output_actual_header		4294480	0					
ANR	4294520	ArgumentList			4294480	1					
ANR	4294521	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	579:1:14090:14118	4294480	6	True				
ANR	4294522	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294480	0					
ANR	4294523	Callee	emit_retval		4294480	0					
ANR	4294524	Identifier	emit_retval		4294480	0					
ANR	4294525	ArgumentList	"""%s"""		4294480	1					
ANR	4294526	Argument	"""%s"""		4294480	0					
ANR	4294527	PrimaryExpression	"""%s"""		4294480	0					
ANR	4294528	Argument	a . c_str ( )		4294480	1					
ANR	4294529	CallExpression	a . c_str ( )		4294480	0					
ANR	4294530	Callee	a . c_str		4294480	0					
ANR	4294531	MemberAccess	a . c_str		4294480	0					
ANR	4294532	Identifier	a		4294480	0					
ANR	4294533	Identifier	c_str		4294480	1					
ANR	4294534	ArgumentList			4294480	1					
ANR	4294535	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH )"		4294480	7					
ANR	4294536	Condition	"strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH"	580:4:14124:14161	4294480	0	True				
ANR	4294537	EqualityExpression	"strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH"		4294480	0		!=			
ANR	4294538	CallExpression	"strcmp ( a . c_str ( ) , ""Indurain"" )"		4294480	0					
ANR	4294539	Callee	strcmp		4294480	0					
ANR	4294540	Identifier	strcmp		4294480	0					
ANR	4294541	ArgumentList	a . c_str ( )		4294480	1					
ANR	4294542	Argument	a . c_str ( )		4294480	0					
ANR	4294543	CallExpression	a . c_str ( )		4294480	0					
ANR	4294544	Callee	a . c_str		4294480	0					
ANR	4294545	MemberAccess	a . c_str		4294480	0					
ANR	4294546	Identifier	a		4294480	0					
ANR	4294547	Identifier	c_str		4294480	1					
ANR	4294548	ArgumentList			4294480	1					
ANR	4294549	Argument	"""Indurain"""		4294480	1					
ANR	4294550	PrimaryExpression	"""Indurain"""		4294480	0					
ANR	4294551	Identifier	MATCH		4294480	1					
ANR	4294552	CompoundStatement		9:44:273:273	4294480	1					
ANR	4294553	ExpressionStatement	FAIL	581:2:14168:14172	4294480	0	True				
ANR	4294554	Identifier	FAIL		4294480	0					
ANR	4294555	ExpressionStatement	PASS	583:1:14178:14182	4294480	8	True				
ANR	4294556	Identifier	PASS		4294480	0					
ANR	4294557	ReturnType	static bool		4294480	1					
ANR	4294558	Identifier	test_trim_none		4294480	2					
ANR	4294559	ParameterList			4294480	3					
ANR	4294560	CFGEntryNode	ENTRY		4294480		True				
ANR	4294561	CFGExitNode	EXIT		4294480		True				
ANR	4294562	Symbol	strcmp		4294480						
ANR	4294563	Symbol	a		4294480						
ANR	4294564	Symbol	a . c_str		4294480						
ANR	4294565	Symbol	MATCH		4294480						
ANR	4294566	Function	test_trim_beginning	586:0:14187:14526							
ANR	4294567	FunctionDef	test_trim_beginning ()		4294566	0					
ANR	4294568	CompoundStatement		586:34:14221:14526	4294566	0					
ANR	4294569	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with white space at the beginning."" )"	587:1:14224:14300	4294566	0	True				
ANR	4294570	CallExpression	"emit_test ( ""Test trim() on a std::string with white space at the beginning."" )"		4294566	0					
ANR	4294571	Callee	emit_test		4294566	0					
ANR	4294572	Identifier	emit_test		4294566	0					
ANR	4294573	ArgumentList	"""Test trim() on a std::string with white space at the beginning."""		4294566	1					
ANR	4294574	Argument	"""Test trim() on a std::string with white space at the beginning."""		4294566	0					
ANR	4294575	PrimaryExpression	"""Test trim() on a std::string with white space at the beginning."""		4294566	0					
ANR	4294576	IdentifierDeclStatement	"std :: string a ( ""   Merckx"" ) ;"	588:1:14303:14329	4294566	1	True				
ANR	4294577	IdentifierDecl	"a ( ""   Merckx"" )"		4294566	0					
ANR	4294578	IdentifierDeclType	std :: string		4294566	0					
ANR	4294579	Identifier	a		4294566	1					
ANR	4294580	PrimaryExpression	"""   Merckx"""		4294566	2					
ANR	4294581	ExpressionStatement	trim ( a )	589:1:14332:14339	4294566	2	True				
ANR	4294582	CallExpression	trim ( a )		4294566	0					
ANR	4294583	Callee	trim		4294566	0					
ANR	4294584	Identifier	trim		4294566	0					
ANR	4294585	ArgumentList	a		4294566	1					
ANR	4294586	Argument	a		4294566	0					
ANR	4294587	Identifier	a		4294566	0					
ANR	4294588	ExpressionStatement	emit_output_expected_header ( )	590:1:14342:14371	4294566	3	True				
ANR	4294589	CallExpression	emit_output_expected_header ( )		4294566	0					
ANR	4294590	Callee	emit_output_expected_header		4294566	0					
ANR	4294591	Identifier	emit_output_expected_header		4294566	0					
ANR	4294592	ArgumentList			4294566	1					
ANR	4294593	ExpressionStatement	"emit_retval ( ""%s"" , ""Merckx"" )"	591:1:14374:14401	4294566	4	True				
ANR	4294594	CallExpression	"emit_retval ( ""%s"" , ""Merckx"" )"		4294566	0					
ANR	4294595	Callee	emit_retval		4294566	0					
ANR	4294596	Identifier	emit_retval		4294566	0					
ANR	4294597	ArgumentList	"""%s"""		4294566	1					
ANR	4294598	Argument	"""%s"""		4294566	0					
ANR	4294599	PrimaryExpression	"""%s"""		4294566	0					
ANR	4294600	Argument	"""Merckx"""		4294566	1					
ANR	4294601	PrimaryExpression	"""Merckx"""		4294566	0					
ANR	4294602	ExpressionStatement	emit_output_actual_header ( )	592:1:14404:14431	4294566	5	True				
ANR	4294603	CallExpression	emit_output_actual_header ( )		4294566	0					
ANR	4294604	Callee	emit_output_actual_header		4294566	0					
ANR	4294605	Identifier	emit_output_actual_header		4294566	0					
ANR	4294606	ArgumentList			4294566	1					
ANR	4294607	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	593:1:14434:14462	4294566	6	True				
ANR	4294608	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294566	0					
ANR	4294609	Callee	emit_retval		4294566	0					
ANR	4294610	Identifier	emit_retval		4294566	0					
ANR	4294611	ArgumentList	"""%s"""		4294566	1					
ANR	4294612	Argument	"""%s"""		4294566	0					
ANR	4294613	PrimaryExpression	"""%s"""		4294566	0					
ANR	4294614	Argument	a . c_str ( )		4294566	1					
ANR	4294615	CallExpression	a . c_str ( )		4294566	0					
ANR	4294616	Callee	a . c_str		4294566	0					
ANR	4294617	MemberAccess	a . c_str		4294566	0					
ANR	4294618	Identifier	a		4294566	0					
ANR	4294619	Identifier	c_str		4294566	1					
ANR	4294620	ArgumentList			4294566	1					
ANR	4294621	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH )"		4294566	7					
ANR	4294622	Condition	"strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH"	594:4:14468:14503	4294566	0	True				
ANR	4294623	EqualityExpression	"strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH"		4294566	0		!=			
ANR	4294624	CallExpression	"strcmp ( a . c_str ( ) , ""Merckx"" )"		4294566	0					
ANR	4294625	Callee	strcmp		4294566	0					
ANR	4294626	Identifier	strcmp		4294566	0					
ANR	4294627	ArgumentList	a . c_str ( )		4294566	1					
ANR	4294628	Argument	a . c_str ( )		4294566	0					
ANR	4294629	CallExpression	a . c_str ( )		4294566	0					
ANR	4294630	Callee	a . c_str		4294566	0					
ANR	4294631	MemberAccess	a . c_str		4294566	0					
ANR	4294632	Identifier	a		4294566	0					
ANR	4294633	Identifier	c_str		4294566	1					
ANR	4294634	ArgumentList			4294566	1					
ANR	4294635	Argument	"""Merckx"""		4294566	1					
ANR	4294636	PrimaryExpression	"""Merckx"""		4294566	0					
ANR	4294637	Identifier	MATCH		4294566	1					
ANR	4294638	CompoundStatement		9:42:284:284	4294566	1					
ANR	4294639	ExpressionStatement	FAIL	595:2:14510:14514	4294566	0	True				
ANR	4294640	Identifier	FAIL		4294566	0					
ANR	4294641	ExpressionStatement	PASS	597:1:14520:14524	4294566	8	True				
ANR	4294642	Identifier	PASS		4294566	0					
ANR	4294643	ReturnType	static bool		4294566	1					
ANR	4294644	Identifier	test_trim_beginning		4294566	2					
ANR	4294645	ParameterList			4294566	3					
ANR	4294646	CFGEntryNode	ENTRY		4294566		True				
ANR	4294647	CFGExitNode	EXIT		4294566		True				
ANR	4294648	Symbol	strcmp		4294566						
ANR	4294649	Symbol	a		4294566						
ANR	4294650	Symbol	a . c_str		4294566						
ANR	4294651	Symbol	MATCH		4294566						
ANR	4294652	Function	test_trim_empty	600:0:14529:14812							
ANR	4294653	FunctionDef	test_trim_empty ()		4294652	0					
ANR	4294654	CompoundStatement		600:30:14559:14812	4294652	0					
ANR	4294655	ExpressionStatement	"emit_test ( ""Test trim() on an empty std::string."" )"	601:1:14562:14611	4294652	0	True				
ANR	4294656	CallExpression	"emit_test ( ""Test trim() on an empty std::string."" )"		4294652	0					
ANR	4294657	Callee	emit_test		4294652	0					
ANR	4294658	Identifier	emit_test		4294652	0					
ANR	4294659	ArgumentList	"""Test trim() on an empty std::string."""		4294652	1					
ANR	4294660	Argument	"""Test trim() on an empty std::string."""		4294652	0					
ANR	4294661	PrimaryExpression	"""Test trim() on an empty std::string."""		4294652	0					
ANR	4294662	IdentifierDeclStatement	std :: string a ;	602:1:14614:14627	4294652	1	True				
ANR	4294663	IdentifierDecl	a		4294652	0					
ANR	4294664	IdentifierDeclType	std :: string		4294652	0					
ANR	4294665	Identifier	a		4294652	1					
ANR	4294666	ExpressionStatement	trim ( a )	603:1:14630:14637	4294652	2	True				
ANR	4294667	CallExpression	trim ( a )		4294652	0					
ANR	4294668	Callee	trim		4294652	0					
ANR	4294669	Identifier	trim		4294652	0					
ANR	4294670	ArgumentList	a		4294652	1					
ANR	4294671	Argument	a		4294652	0					
ANR	4294672	Identifier	a		4294652	0					
ANR	4294673	ExpressionStatement	emit_output_expected_header ( )	604:1:14640:14669	4294652	3	True				
ANR	4294674	CallExpression	emit_output_expected_header ( )		4294652	0					
ANR	4294675	Callee	emit_output_expected_header		4294652	0					
ANR	4294676	Identifier	emit_output_expected_header		4294652	0					
ANR	4294677	ArgumentList			4294652	1					
ANR	4294678	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	605:1:14672:14693	4294652	4	True				
ANR	4294679	CallExpression	"emit_retval ( ""%s"" , """" )"		4294652	0					
ANR	4294680	Callee	emit_retval		4294652	0					
ANR	4294681	Identifier	emit_retval		4294652	0					
ANR	4294682	ArgumentList	"""%s"""		4294652	1					
ANR	4294683	Argument	"""%s"""		4294652	0					
ANR	4294684	PrimaryExpression	"""%s"""		4294652	0					
ANR	4294685	Argument	""""""		4294652	1					
ANR	4294686	PrimaryExpression	""""""		4294652	0					
ANR	4294687	ExpressionStatement	emit_output_actual_header ( )	606:1:14696:14723	4294652	5	True				
ANR	4294688	CallExpression	emit_output_actual_header ( )		4294652	0					
ANR	4294689	Callee	emit_output_actual_header		4294652	0					
ANR	4294690	Identifier	emit_output_actual_header		4294652	0					
ANR	4294691	ArgumentList			4294652	1					
ANR	4294692	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	607:1:14726:14754	4294652	6	True				
ANR	4294693	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		4294652	0					
ANR	4294694	Callee	emit_retval		4294652	0					
ANR	4294695	Identifier	emit_retval		4294652	0					
ANR	4294696	ArgumentList	"""%s"""		4294652	1					
ANR	4294697	Argument	"""%s"""		4294652	0					
ANR	4294698	PrimaryExpression	"""%s"""		4294652	0					
ANR	4294699	Argument	a . c_str ( )		4294652	1					
ANR	4294700	CallExpression	a . c_str ( )		4294652	0					
ANR	4294701	Callee	a . c_str		4294652	0					
ANR	4294702	MemberAccess	a . c_str		4294652	0					
ANR	4294703	Identifier	a		4294652	0					
ANR	4294704	Identifier	c_str		4294652	1					
ANR	4294705	ArgumentList			4294652	1					
ANR	4294706	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		4294652	7					
ANR	4294707	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	608:4:14760:14789	4294652	0	True				
ANR	4294708	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		4294652	0		!=			
ANR	4294709	CallExpression	"strcmp ( a . c_str ( ) , """" )"		4294652	0					
ANR	4294710	Callee	strcmp		4294652	0					
ANR	4294711	Identifier	strcmp		4294652	0					
ANR	4294712	ArgumentList	a . c_str ( )		4294652	1					
ANR	4294713	Argument	a . c_str ( )		4294652	0					
ANR	4294714	CallExpression	a . c_str ( )		4294652	0					
ANR	4294715	Callee	a . c_str		4294652	0					
ANR	4294716	MemberAccess	a . c_str		4294652	0					
ANR	4294717	Identifier	a		4294652	0					
ANR	4294718	Identifier	c_str		4294652	1					
ANR	4294719	ArgumentList			4294652	1					
ANR	4294720	Argument	""""""		4294652	1					
ANR	4294721	PrimaryExpression	""""""		4294652	0					
ANR	4294722	Identifier	MATCH		4294652	1					
ANR	4294723	CompoundStatement		9:36:232:232	4294652	1					
ANR	4294724	ExpressionStatement	FAIL	609:2:14796:14800	4294652	0	True				
ANR	4294725	Identifier	FAIL		4294652	0					
ANR	4294726	ExpressionStatement	PASS	611:1:14806:14810	4294652	8	True				
ANR	4294727	Identifier	PASS		4294652	0					
ANR	4294728	ReturnType	static bool		4294652	1					
ANR	4294729	Identifier	test_trim_empty		4294652	2					
ANR	4294730	ParameterList			4294652	3					
ANR	4294731	CFGEntryNode	ENTRY		4294652		True				
ANR	4294732	CFGExitNode	EXIT		4294652		True				
ANR	4294733	Symbol	strcmp		4294652						
ANR	4294734	Symbol	a		4294652						
ANR	4294735	Symbol	a . c_str		4294652						
ANR	4294736	Symbol	MATCH		4294652						
ANR	4294737	Function	tokenize_null	614:0:14815:15174							
ANR	4294738	FunctionDef	tokenize_null ()		4294737	0					
ANR	4294739	CompoundStatement		614:28:14843:15174	4294737	0					
ANR	4294740	Statement	emit_test	615:1:14846:14854	4294737	0	True				
ANR	4294741	Statement	(	615:10:14855:14855	4294737	1	True				
ANR	4294742	Statement	"""Does calling GetNextToken() before calling Tokenize() return """	615:11:14856:14918	4294737	2	True				
ANR	4294743	Statement	"""NULL?"""	616:2:14922:14928	4294737	3	True				
ANR	4294744	Statement	)	616:9:14929:14929	4294737	4	True				
ANR	4294745	ExpressionStatement		616:10:14930:14930	4294737	5	True				
ANR	4294746	IdentifierDeclStatement	"const char * tok = GetNextToken ( "","" , false ) ;"	617:1:14933:14975	4294737	6	True				
ANR	4294747	IdentifierDecl	"* tok = GetNextToken ( "","" , false )"		4294737	0					
ANR	4294748	IdentifierDeclType	const char *		4294737	0					
ANR	4294749	Identifier	tok		4294737	1					
ANR	4294750	AssignmentExpression	"* tok = GetNextToken ( "","" , false )"		4294737	2		=			
ANR	4294751	Identifier	tok		4294737	0					
ANR	4294752	CallExpression	"GetNextToken ( "","" , false )"		4294737	1					
ANR	4294753	Callee	GetNextToken		4294737	0					
ANR	4294754	Identifier	GetNextToken		4294737	0					
ANR	4294755	ArgumentList	""","""		4294737	1					
ANR	4294756	Argument	""","""		4294737	0					
ANR	4294757	PrimaryExpression	""","""		4294737	0					
ANR	4294758	Argument	false		4294737	1					
ANR	4294759	Identifier	false		4294737	0					
ANR	4294760	ExpressionStatement	emit_input_header ( )	618:1:14978:14997	4294737	7	True				
ANR	4294761	CallExpression	emit_input_header ( )		4294737	0					
ANR	4294762	Callee	emit_input_header		4294737	0					
ANR	4294763	Identifier	emit_input_header		4294737	0					
ANR	4294764	ArgumentList			4294737	1					
ANR	4294765	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "","" )"	619:1:15000:15030	4294737	8	True				
ANR	4294766	CallExpression	"emit_param ( ""delim"" , ""%s"" , "","" )"		4294737	0					
ANR	4294767	Callee	emit_param		4294737	0					
ANR	4294768	Identifier	emit_param		4294737	0					
ANR	4294769	ArgumentList	"""delim"""		4294737	1					
ANR	4294770	Argument	"""delim"""		4294737	0					
ANR	4294771	PrimaryExpression	"""delim"""		4294737	0					
ANR	4294772	Argument	"""%s"""		4294737	1					
ANR	4294773	PrimaryExpression	"""%s"""		4294737	0					
ANR	4294774	Argument	""","""		4294737	2					
ANR	4294775	PrimaryExpression	""","""		4294737	0					
ANR	4294776	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	620:1:15033:15075	4294737	9	True				
ANR	4294777	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		4294737	0					
ANR	4294778	Callee	emit_param		4294737	0					
ANR	4294779	Identifier	emit_param		4294737	0					
ANR	4294780	ArgumentList	"""skipBlankTokens"""		4294737	1					
ANR	4294781	Argument	"""skipBlankTokens"""		4294737	0					
ANR	4294782	PrimaryExpression	"""skipBlankTokens"""		4294737	0					
ANR	4294783	Argument	"""%d"""		4294737	1					
ANR	4294784	PrimaryExpression	"""%d"""		4294737	0					
ANR	4294785	Argument	false		4294737	2					
ANR	4294786	Identifier	false		4294737	0					
ANR	4294787	ExpressionStatement	emit_output_expected_header ( )	621:1:15078:15107	4294737	10	True				
ANR	4294788	CallExpression	emit_output_expected_header ( )		4294737	0					
ANR	4294789	Callee	emit_output_expected_header		4294737	0					
ANR	4294790	Identifier	emit_output_expected_header		4294737	0					
ANR	4294791	ArgumentList			4294737	1					
ANR	4294792	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	622:1:15110:15135	4294737	11	True				
ANR	4294793	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		4294737	0					
ANR	4294794	Callee	emit_retval		4294737	0					
ANR	4294795	Identifier	emit_retval		4294737	0					
ANR	4294796	ArgumentList	"""%s"""		4294737	1					
ANR	4294797	Argument	"""%s"""		4294737	0					
ANR	4294798	PrimaryExpression	"""%s"""		4294737	0					
ANR	4294799	Argument	"""NULL"""		4294737	1					
ANR	4294800	PrimaryExpression	"""NULL"""		4294737	0					
ANR	4294801	IfStatement	if ( tok != NULL )		4294737	12					
ANR	4294802	Condition	tok != NULL	623:4:15141:15151	4294737	0	True				
ANR	4294803	EqualityExpression	tok != NULL		4294737	0		!=			
ANR	4294804	Identifier	tok		4294737	0					
ANR	4294805	Identifier	NULL		4294737	1					
ANR	4294806	CompoundStatement		10:17:310:310	4294737	1					
ANR	4294807	ExpressionStatement	FAIL	624:2:15158:15162	4294737	0	True				
ANR	4294808	Identifier	FAIL		4294737	0					
ANR	4294809	ExpressionStatement	PASS	626:1:15168:15172	4294737	13	True				
ANR	4294810	Identifier	PASS		4294737	0					
ANR	4294811	ReturnType	static bool		4294737	1					
ANR	4294812	Identifier	tokenize_null		4294737	2					
ANR	4294813	ParameterList			4294737	3					
ANR	4294814	CFGEntryNode	ENTRY		4294737		True				
ANR	4294815	CFGExitNode	EXIT		4294737		True				
ANR	4294816	Symbol	tok		4294737						
ANR	4294817	Symbol	NULL		4294737						
ANR	4294818	Symbol	GetNextToken		4294737						
ANR	4294819	Symbol	false		4294737						
ANR	4294820	Function	tokenize_skip	629:0:15177:15646							
ANR	4294821	FunctionDef	tokenize_skip ()		4294820	0					
ANR	4294822	CompoundStatement		629:28:15205:15646	4294820	0					
ANR	4294823	ExpressionStatement	"emit_test ( ""Test GetNextToken() when skipping blank tokens."" )"	630:1:15208:15268	4294820	0	True				
ANR	4294824	CallExpression	"emit_test ( ""Test GetNextToken() when skipping blank tokens."" )"		4294820	0					
ANR	4294825	Callee	emit_test		4294820	0					
ANR	4294826	Identifier	emit_test		4294820	0					
ANR	4294827	ArgumentList	"""Test GetNextToken() when skipping blank tokens."""		4294820	1					
ANR	4294828	Argument	"""Test GetNextToken() when skipping blank tokens."""		4294820	0					
ANR	4294829	PrimaryExpression	"""Test GetNextToken() when skipping blank tokens."""		4294820	0					
ANR	4294830	IdentifierDeclStatement	"const char * a = ""     Ottavio Bottechia_"" ;"	631:1:15271:15312	4294820	1	True				
ANR	4294831	IdentifierDecl	"* a = ""     Ottavio Bottechia_"""		4294820	0					
ANR	4294832	IdentifierDeclType	const char *		4294820	0					
ANR	4294833	Identifier	a		4294820	1					
ANR	4294834	AssignmentExpression	"* a = ""     Ottavio Bottechia_"""		4294820	2		=			
ANR	4294835	Identifier	a		4294820	0					
ANR	4294836	PrimaryExpression	"""     Ottavio Bottechia_"""		4294820	1					
ANR	4294837	ExpressionStatement	Tokenize ( a )	632:1:15315:15326	4294820	2	True				
ANR	4294838	CallExpression	Tokenize ( a )		4294820	0					
ANR	4294839	Callee	Tokenize		4294820	0					
ANR	4294840	Identifier	Tokenize		4294820	0					
ANR	4294841	ArgumentList	a		4294820	1					
ANR	4294842	Argument	a		4294820	0					
ANR	4294843	Identifier	a		4294820	0					
ANR	4294844	IdentifierDeclStatement	"const char * tok = GetNextToken ( "" "" , true ) ;"	633:1:15329:15370	4294820	3	True				
ANR	4294845	IdentifierDecl	"* tok = GetNextToken ( "" "" , true )"		4294820	0					
ANR	4294846	IdentifierDeclType	const char *		4294820	0					
ANR	4294847	Identifier	tok		4294820	1					
ANR	4294848	AssignmentExpression	"* tok = GetNextToken ( "" "" , true )"		4294820	2		=			
ANR	4294849	Identifier	tok		4294820	0					
ANR	4294850	CallExpression	"GetNextToken ( "" "" , true )"		4294820	1					
ANR	4294851	Callee	GetNextToken		4294820	0					
ANR	4294852	Identifier	GetNextToken		4294820	0					
ANR	4294853	ArgumentList	""" """		4294820	1					
ANR	4294854	Argument	""" """		4294820	0					
ANR	4294855	PrimaryExpression	""" """		4294820	0					
ANR	4294856	Argument	true		4294820	1					
ANR	4294857	Identifier	true		4294820	0					
ANR	4294858	ExpressionStatement	emit_input_header ( )	634:1:15373:15392	4294820	4	True				
ANR	4294859	CallExpression	emit_input_header ( )		4294820	0					
ANR	4294860	Callee	emit_input_header		4294820	0					
ANR	4294861	Identifier	emit_input_header		4294820	0					
ANR	4294862	ArgumentList			4294820	1					
ANR	4294863	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	635:1:15395:15425	4294820	5	True				
ANR	4294864	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		4294820	0					
ANR	4294865	Callee	emit_param		4294820	0					
ANR	4294866	Identifier	emit_param		4294820	0					
ANR	4294867	ArgumentList	"""delim"""		4294820	1					
ANR	4294868	Argument	"""delim"""		4294820	0					
ANR	4294869	PrimaryExpression	"""delim"""		4294820	0					
ANR	4294870	Argument	"""%s"""		4294820	1					
ANR	4294871	PrimaryExpression	"""%s"""		4294820	0					
ANR	4294872	Argument	""" """		4294820	2					
ANR	4294873	PrimaryExpression	""" """		4294820	0					
ANR	4294874	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , true )"	636:1:15428:15469	4294820	6	True				
ANR	4294875	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , true )"		4294820	0					
ANR	4294876	Callee	emit_param		4294820	0					
ANR	4294877	Identifier	emit_param		4294820	0					
ANR	4294878	ArgumentList	"""skipBlankTokens"""		4294820	1					
ANR	4294879	Argument	"""skipBlankTokens"""		4294820	0					
ANR	4294880	PrimaryExpression	"""skipBlankTokens"""		4294820	0					
ANR	4294881	Argument	"""%d"""		4294820	1					
ANR	4294882	PrimaryExpression	"""%d"""		4294820	0					
ANR	4294883	Argument	true		4294820	2					
ANR	4294884	Identifier	true		4294820	0					
ANR	4294885	ExpressionStatement	emit_output_expected_header ( )	637:1:15472:15501	4294820	7	True				
ANR	4294886	CallExpression	emit_output_expected_header ( )		4294820	0					
ANR	4294887	Callee	emit_output_expected_header		4294820	0					
ANR	4294888	Identifier	emit_output_expected_header		4294820	0					
ANR	4294889	ArgumentList			4294820	1					
ANR	4294890	ExpressionStatement	"emit_retval ( ""%s"" , ""Ottavio"" )"	638:1:15504:15532	4294820	8	True				
ANR	4294891	CallExpression	"emit_retval ( ""%s"" , ""Ottavio"" )"		4294820	0					
ANR	4294892	Callee	emit_retval		4294820	0					
ANR	4294893	Identifier	emit_retval		4294820	0					
ANR	4294894	ArgumentList	"""%s"""		4294820	1					
ANR	4294895	Argument	"""%s"""		4294820	0					
ANR	4294896	PrimaryExpression	"""%s"""		4294820	0					
ANR	4294897	Argument	"""Ottavio"""		4294820	1					
ANR	4294898	PrimaryExpression	"""Ottavio"""		4294820	0					
ANR	4294899	ExpressionStatement	emit_output_actual_header ( )	639:1:15535:15562	4294820	9	True				
ANR	4294900	CallExpression	emit_output_actual_header ( )		4294820	0					
ANR	4294901	Callee	emit_output_actual_header		4294820	0					
ANR	4294902	Identifier	emit_output_actual_header		4294820	0					
ANR	4294903	ArgumentList			4294820	1					
ANR	4294904	ExpressionStatement	"emit_retval ( ""%s"" , tok )"	640:1:15565:15587	4294820	10	True				
ANR	4294905	CallExpression	"emit_retval ( ""%s"" , tok )"		4294820	0					
ANR	4294906	Callee	emit_retval		4294820	0					
ANR	4294907	Identifier	emit_retval		4294820	0					
ANR	4294908	ArgumentList	"""%s"""		4294820	1					
ANR	4294909	Argument	"""%s"""		4294820	0					
ANR	4294910	PrimaryExpression	"""%s"""		4294820	0					
ANR	4294911	Argument	tok		4294820	1					
ANR	4294912	Identifier	tok		4294820	0					
ANR	4294913	IfStatement	"if ( strcmp ( tok , ""Ottavio"" ) != MATCH )"		4294820	11					
ANR	4294914	Condition	"strcmp ( tok , ""Ottavio"" ) != MATCH"	641:4:15593:15623	4294820	0	True				
ANR	4294915	EqualityExpression	"strcmp ( tok , ""Ottavio"" ) != MATCH"		4294820	0		!=			
ANR	4294916	CallExpression	"strcmp ( tok , ""Ottavio"" )"		4294820	0					
ANR	4294917	Callee	strcmp		4294820	0					
ANR	4294918	Identifier	strcmp		4294820	0					
ANR	4294919	ArgumentList	tok		4294820	1					
ANR	4294920	Argument	tok		4294820	0					
ANR	4294921	Identifier	tok		4294820	0					
ANR	4294922	Argument	"""Ottavio"""		4294820	1					
ANR	4294923	PrimaryExpression	"""Ottavio"""		4294820	0					
ANR	4294924	Identifier	MATCH		4294820	1					
ANR	4294925	CompoundStatement		13:37:420:420	4294820	1					
ANR	4294926	ExpressionStatement	FAIL	642:2:15630:15634	4294820	0	True				
ANR	4294927	Identifier	FAIL		4294820	0					
ANR	4294928	ExpressionStatement	PASS	644:1:15640:15644	4294820	12	True				
ANR	4294929	Identifier	PASS		4294820	0					
ANR	4294930	ReturnType	static bool		4294820	1					
ANR	4294931	Identifier	tokenize_skip		4294820	2					
ANR	4294932	ParameterList			4294820	3					
ANR	4294933	CFGEntryNode	ENTRY		4294820		True				
ANR	4294934	CFGExitNode	EXIT		4294820		True				
ANR	4294935	Symbol	strcmp		4294820						
ANR	4294936	Symbol	a		4294820						
ANR	4294937	Symbol	tok		4294820						
ANR	4294938	Symbol	true		4294820						
ANR	4294939	Symbol	GetNextToken		4294820						
ANR	4294940	Symbol	MATCH		4294820						
ANR	4294941	Function	tokenize_multiple_calls	647:0:15649:18569							
ANR	4294942	FunctionDef	tokenize_multiple_calls ()		4294941	0					
ANR	4294943	CompoundStatement		647:38:15687:18569	4294941	0					
ANR	4294944	ExpressionStatement	"emit_test ( ""Test multiple calls to GetNextToken()."" )"	648:1:15690:15741	4294941	0	True				
ANR	4294945	CallExpression	"emit_test ( ""Test multiple calls to GetNextToken()."" )"		4294941	0					
ANR	4294946	Callee	emit_test		4294941	0					
ANR	4294947	Identifier	emit_test		4294941	0					
ANR	4294948	ArgumentList	"""Test multiple calls to GetNextToken()."""		4294941	1					
ANR	4294949	Argument	"""Test multiple calls to GetNextToken()."""		4294941	0					
ANR	4294950	PrimaryExpression	"""Test multiple calls to GetNextToken()."""		4294941	0					
ANR	4294951	IdentifierDeclStatement	"const char * a = ""To  be or not to be; that is the question"" ;"	649:1:15744:15803	4294941	1	True				
ANR	4294952	IdentifierDecl	"* a = ""To  be or not to be; that is the question"""		4294941	0					
ANR	4294953	IdentifierDeclType	const char *		4294941	0					
ANR	4294954	Identifier	a		4294941	1					
ANR	4294955	AssignmentExpression	"* a = ""To  be or not to be; that is the question"""		4294941	2		=			
ANR	4294956	Identifier	a		4294941	0					
ANR	4294957	PrimaryExpression	"""To  be or not to be; that is the question"""		4294941	1					
ANR	4294958	ExpressionStatement	Tokenize ( a )	650:1:15806:15817	4294941	2	True				
ANR	4294959	CallExpression	Tokenize ( a )		4294941	0					
ANR	4294960	Callee	Tokenize		4294941	0					
ANR	4294961	Identifier	Tokenize		4294941	0					
ANR	4294962	ArgumentList	a		4294941	1					
ANR	4294963	Argument	a		4294941	0					
ANR	4294964	Identifier	a		4294941	0					
ANR	4294965	IdentifierDeclStatement	"const char * expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" } ;"	651:1:15820:15932	4294941	3	True				
ANR	4294966	IdentifierDecl	"* expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" }"		4294941	0					
ANR	4294967	IdentifierDeclType	const char * [ ]		4294941	0					
ANR	4294968	Identifier	expectedTokens		4294941	1					
ANR	4294969	AssignmentExpression	"* expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" }"		4294941	2		=			
ANR	4294970	Identifier	expectedTokens		4294941	0					
ANR	4294971	InitializerList	"""To"""		4294941	1					
ANR	4294972	PrimaryExpression	"""To"""		4294941	0					
ANR	4294973	PrimaryExpression	""""""		4294941	1					
ANR	4294974	PrimaryExpression	"""be"""		4294941	2					
ANR	4294975	PrimaryExpression	"""or"""		4294941	3					
ANR	4294976	PrimaryExpression	"""not"""		4294941	4					
ANR	4294977	PrimaryExpression	"""to"""		4294941	5					
ANR	4294978	PrimaryExpression	"""be"""		4294941	6					
ANR	4294979	PrimaryExpression	""""""		4294941	7					
ANR	4294980	PrimaryExpression	"""that"""		4294941	8					
ANR	4294981	PrimaryExpression	"""is"""		4294941	9					
ANR	4294982	PrimaryExpression	"""the"""		4294941	10					
ANR	4294983	PrimaryExpression	"""question"""		4294941	11					
ANR	4294984	IdentifierDeclStatement	"const char * resultToken0 = GetNextToken ( "" ;"" , false ) ;"	653:1:15935:15987	4294941	4	True				
ANR	4294985	IdentifierDecl	"* resultToken0 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4294986	IdentifierDeclType	const char *		4294941	0					
ANR	4294987	Identifier	resultToken0		4294941	1					
ANR	4294988	AssignmentExpression	"* resultToken0 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4294989	Identifier	resultToken0		4294941	0					
ANR	4294990	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4294991	Callee	GetNextToken		4294941	0					
ANR	4294992	Identifier	GetNextToken		4294941	0					
ANR	4294993	ArgumentList	""" ;"""		4294941	1					
ANR	4294994	Argument	""" ;"""		4294941	0					
ANR	4294995	PrimaryExpression	""" ;"""		4294941	0					
ANR	4294996	Argument	false		4294941	1					
ANR	4294997	Identifier	false		4294941	0					
ANR	4294998	IdentifierDeclStatement	"const char * resultToken1 = GetNextToken ( "" ;"" , false ) ;"	654:1:15990:16042	4294941	5	True				
ANR	4294999	IdentifierDecl	"* resultToken1 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295000	IdentifierDeclType	const char *		4294941	0					
ANR	4295001	Identifier	resultToken1		4294941	1					
ANR	4295002	AssignmentExpression	"* resultToken1 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295003	Identifier	resultToken1		4294941	0					
ANR	4295004	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295005	Callee	GetNextToken		4294941	0					
ANR	4295006	Identifier	GetNextToken		4294941	0					
ANR	4295007	ArgumentList	""" ;"""		4294941	1					
ANR	4295008	Argument	""" ;"""		4294941	0					
ANR	4295009	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295010	Argument	false		4294941	1					
ANR	4295011	Identifier	false		4294941	0					
ANR	4295012	IdentifierDeclStatement	"const char * resultToken2 = GetNextToken ( "" ;"" , false ) ;"	655:1:16045:16097	4294941	6	True				
ANR	4295013	IdentifierDecl	"* resultToken2 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295014	IdentifierDeclType	const char *		4294941	0					
ANR	4295015	Identifier	resultToken2		4294941	1					
ANR	4295016	AssignmentExpression	"* resultToken2 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295017	Identifier	resultToken2		4294941	0					
ANR	4295018	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295019	Callee	GetNextToken		4294941	0					
ANR	4295020	Identifier	GetNextToken		4294941	0					
ANR	4295021	ArgumentList	""" ;"""		4294941	1					
ANR	4295022	Argument	""" ;"""		4294941	0					
ANR	4295023	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295024	Argument	false		4294941	1					
ANR	4295025	Identifier	false		4294941	0					
ANR	4295026	IdentifierDeclStatement	"const char * resultToken3 = GetNextToken ( "" ;"" , false ) ;"	656:1:16100:16152	4294941	7	True				
ANR	4295027	IdentifierDecl	"* resultToken3 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295028	IdentifierDeclType	const char *		4294941	0					
ANR	4295029	Identifier	resultToken3		4294941	1					
ANR	4295030	AssignmentExpression	"* resultToken3 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295031	Identifier	resultToken3		4294941	0					
ANR	4295032	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295033	Callee	GetNextToken		4294941	0					
ANR	4295034	Identifier	GetNextToken		4294941	0					
ANR	4295035	ArgumentList	""" ;"""		4294941	1					
ANR	4295036	Argument	""" ;"""		4294941	0					
ANR	4295037	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295038	Argument	false		4294941	1					
ANR	4295039	Identifier	false		4294941	0					
ANR	4295040	IdentifierDeclStatement	"const char * resultToken4 = GetNextToken ( "" ;"" , false ) ;"	657:1:16155:16207	4294941	8	True				
ANR	4295041	IdentifierDecl	"* resultToken4 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295042	IdentifierDeclType	const char *		4294941	0					
ANR	4295043	Identifier	resultToken4		4294941	1					
ANR	4295044	AssignmentExpression	"* resultToken4 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295045	Identifier	resultToken4		4294941	0					
ANR	4295046	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295047	Callee	GetNextToken		4294941	0					
ANR	4295048	Identifier	GetNextToken		4294941	0					
ANR	4295049	ArgumentList	""" ;"""		4294941	1					
ANR	4295050	Argument	""" ;"""		4294941	0					
ANR	4295051	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295052	Argument	false		4294941	1					
ANR	4295053	Identifier	false		4294941	0					
ANR	4295054	IdentifierDeclStatement	"const char * resultToken5 = GetNextToken ( "" ;"" , false ) ;"	658:1:16210:16262	4294941	9	True				
ANR	4295055	IdentifierDecl	"* resultToken5 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295056	IdentifierDeclType	const char *		4294941	0					
ANR	4295057	Identifier	resultToken5		4294941	1					
ANR	4295058	AssignmentExpression	"* resultToken5 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295059	Identifier	resultToken5		4294941	0					
ANR	4295060	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295061	Callee	GetNextToken		4294941	0					
ANR	4295062	Identifier	GetNextToken		4294941	0					
ANR	4295063	ArgumentList	""" ;"""		4294941	1					
ANR	4295064	Argument	""" ;"""		4294941	0					
ANR	4295065	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295066	Argument	false		4294941	1					
ANR	4295067	Identifier	false		4294941	0					
ANR	4295068	IdentifierDeclStatement	"const char * resultToken6 = GetNextToken ( "" ;"" , false ) ;"	659:1:16265:16317	4294941	10	True				
ANR	4295069	IdentifierDecl	"* resultToken6 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295070	IdentifierDeclType	const char *		4294941	0					
ANR	4295071	Identifier	resultToken6		4294941	1					
ANR	4295072	AssignmentExpression	"* resultToken6 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295073	Identifier	resultToken6		4294941	0					
ANR	4295074	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295075	Callee	GetNextToken		4294941	0					
ANR	4295076	Identifier	GetNextToken		4294941	0					
ANR	4295077	ArgumentList	""" ;"""		4294941	1					
ANR	4295078	Argument	""" ;"""		4294941	0					
ANR	4295079	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295080	Argument	false		4294941	1					
ANR	4295081	Identifier	false		4294941	0					
ANR	4295082	IdentifierDeclStatement	"const char * resultToken7 = GetNextToken ( "" ;"" , false ) ;"	660:1:16320:16372	4294941	11	True				
ANR	4295083	IdentifierDecl	"* resultToken7 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295084	IdentifierDeclType	const char *		4294941	0					
ANR	4295085	Identifier	resultToken7		4294941	1					
ANR	4295086	AssignmentExpression	"* resultToken7 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295087	Identifier	resultToken7		4294941	0					
ANR	4295088	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295089	Callee	GetNextToken		4294941	0					
ANR	4295090	Identifier	GetNextToken		4294941	0					
ANR	4295091	ArgumentList	""" ;"""		4294941	1					
ANR	4295092	Argument	""" ;"""		4294941	0					
ANR	4295093	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295094	Argument	false		4294941	1					
ANR	4295095	Identifier	false		4294941	0					
ANR	4295096	IdentifierDeclStatement	"const char * resultToken8 = GetNextToken ( "" ;"" , false ) ;"	661:1:16375:16427	4294941	12	True				
ANR	4295097	IdentifierDecl	"* resultToken8 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295098	IdentifierDeclType	const char *		4294941	0					
ANR	4295099	Identifier	resultToken8		4294941	1					
ANR	4295100	AssignmentExpression	"* resultToken8 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295101	Identifier	resultToken8		4294941	0					
ANR	4295102	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295103	Callee	GetNextToken		4294941	0					
ANR	4295104	Identifier	GetNextToken		4294941	0					
ANR	4295105	ArgumentList	""" ;"""		4294941	1					
ANR	4295106	Argument	""" ;"""		4294941	0					
ANR	4295107	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295108	Argument	false		4294941	1					
ANR	4295109	Identifier	false		4294941	0					
ANR	4295110	IdentifierDeclStatement	"const char * resultToken9 = GetNextToken ( "" ;"" , false ) ;"	662:1:16430:16482	4294941	13	True				
ANR	4295111	IdentifierDecl	"* resultToken9 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295112	IdentifierDeclType	const char *		4294941	0					
ANR	4295113	Identifier	resultToken9		4294941	1					
ANR	4295114	AssignmentExpression	"* resultToken9 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295115	Identifier	resultToken9		4294941	0					
ANR	4295116	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295117	Callee	GetNextToken		4294941	0					
ANR	4295118	Identifier	GetNextToken		4294941	0					
ANR	4295119	ArgumentList	""" ;"""		4294941	1					
ANR	4295120	Argument	""" ;"""		4294941	0					
ANR	4295121	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295122	Argument	false		4294941	1					
ANR	4295123	Identifier	false		4294941	0					
ANR	4295124	IdentifierDeclStatement	"const char * resultToken10 = GetNextToken ( "" ;"" , false ) ;"	663:1:16485:16538	4294941	14	True				
ANR	4295125	IdentifierDecl	"* resultToken10 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295126	IdentifierDeclType	const char *		4294941	0					
ANR	4295127	Identifier	resultToken10		4294941	1					
ANR	4295128	AssignmentExpression	"* resultToken10 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295129	Identifier	resultToken10		4294941	0					
ANR	4295130	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295131	Callee	GetNextToken		4294941	0					
ANR	4295132	Identifier	GetNextToken		4294941	0					
ANR	4295133	ArgumentList	""" ;"""		4294941	1					
ANR	4295134	Argument	""" ;"""		4294941	0					
ANR	4295135	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295136	Argument	false		4294941	1					
ANR	4295137	Identifier	false		4294941	0					
ANR	4295138	IdentifierDeclStatement	"const char * resultToken11 = GetNextToken ( "" ;"" , false ) ;"	664:1:16541:16594	4294941	15	True				
ANR	4295139	IdentifierDecl	"* resultToken11 = GetNextToken ( "" ;"" , false )"		4294941	0					
ANR	4295140	IdentifierDeclType	const char *		4294941	0					
ANR	4295141	Identifier	resultToken11		4294941	1					
ANR	4295142	AssignmentExpression	"* resultToken11 = GetNextToken ( "" ;"" , false )"		4294941	2		=			
ANR	4295143	Identifier	resultToken11		4294941	0					
ANR	4295144	CallExpression	"GetNextToken ( "" ;"" , false )"		4294941	1					
ANR	4295145	Callee	GetNextToken		4294941	0					
ANR	4295146	Identifier	GetNextToken		4294941	0					
ANR	4295147	ArgumentList	""" ;"""		4294941	1					
ANR	4295148	Argument	""" ;"""		4294941	0					
ANR	4295149	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295150	Argument	false		4294941	1					
ANR	4295151	Identifier	false		4294941	0					
ANR	4295152	ExpressionStatement	emit_input_header ( )	665:1:16597:16616	4294941	16	True				
ANR	4295153	CallExpression	emit_input_header ( )		4294941	0					
ANR	4295154	Callee	emit_input_header		4294941	0					
ANR	4295155	Identifier	emit_input_header		4294941	0					
ANR	4295156	ArgumentList			4294941	1					
ANR	4295157	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" ;"" )"	666:1:16619:16650	4294941	17	True				
ANR	4295158	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" ;"" )"		4294941	0					
ANR	4295159	Callee	emit_param		4294941	0					
ANR	4295160	Identifier	emit_param		4294941	0					
ANR	4295161	ArgumentList	"""delim"""		4294941	1					
ANR	4295162	Argument	"""delim"""		4294941	0					
ANR	4295163	PrimaryExpression	"""delim"""		4294941	0					
ANR	4295164	Argument	"""%s"""		4294941	1					
ANR	4295165	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295166	Argument	""" ;"""		4294941	2					
ANR	4295167	PrimaryExpression	""" ;"""		4294941	0					
ANR	4295168	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	667:1:16653:16695	4294941	18	True				
ANR	4295169	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		4294941	0					
ANR	4295170	Callee	emit_param		4294941	0					
ANR	4295171	Identifier	emit_param		4294941	0					
ANR	4295172	ArgumentList	"""skipBlankTokens"""		4294941	1					
ANR	4295173	Argument	"""skipBlankTokens"""		4294941	0					
ANR	4295174	PrimaryExpression	"""skipBlankTokens"""		4294941	0					
ANR	4295175	Argument	"""%d"""		4294941	1					
ANR	4295176	PrimaryExpression	"""%d"""		4294941	0					
ANR	4295177	Argument	false		4294941	2					
ANR	4295178	Identifier	false		4294941	0					
ANR	4295179	ExpressionStatement	emit_output_expected_header ( )	668:1:16698:16727	4294941	19	True				
ANR	4295180	CallExpression	emit_output_expected_header ( )		4294941	0					
ANR	4295181	Callee	emit_output_expected_header		4294941	0					
ANR	4295182	Identifier	emit_output_expected_header		4294941	0					
ANR	4295183	ArgumentList			4294941	1					
ANR	4295184	ExpressionStatement	"emit_param ( ""Token 1"" , ""%s"" , expectedTokens [ 0 ] )"	669:1:16730:16776	4294941	20	True				
ANR	4295185	CallExpression	"emit_param ( ""Token 1"" , ""%s"" , expectedTokens [ 0 ] )"		4294941	0					
ANR	4295186	Callee	emit_param		4294941	0					
ANR	4295187	Identifier	emit_param		4294941	0					
ANR	4295188	ArgumentList	"""Token 1"""		4294941	1					
ANR	4295189	Argument	"""Token 1"""		4294941	0					
ANR	4295190	PrimaryExpression	"""Token 1"""		4294941	0					
ANR	4295191	Argument	"""%s"""		4294941	1					
ANR	4295192	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295193	Argument	expectedTokens [ 0 ]		4294941	2					
ANR	4295194	ArrayIndexing	expectedTokens [ 0 ]		4294941	0					
ANR	4295195	Identifier	expectedTokens		4294941	0					
ANR	4295196	PrimaryExpression	0		4294941	1					
ANR	4295197	ExpressionStatement	"emit_param ( ""Token 2"" , ""%s"" , expectedTokens [ 1 ] )"	670:1:16779:16825	4294941	21	True				
ANR	4295198	CallExpression	"emit_param ( ""Token 2"" , ""%s"" , expectedTokens [ 1 ] )"		4294941	0					
ANR	4295199	Callee	emit_param		4294941	0					
ANR	4295200	Identifier	emit_param		4294941	0					
ANR	4295201	ArgumentList	"""Token 2"""		4294941	1					
ANR	4295202	Argument	"""Token 2"""		4294941	0					
ANR	4295203	PrimaryExpression	"""Token 2"""		4294941	0					
ANR	4295204	Argument	"""%s"""		4294941	1					
ANR	4295205	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295206	Argument	expectedTokens [ 1 ]		4294941	2					
ANR	4295207	ArrayIndexing	expectedTokens [ 1 ]		4294941	0					
ANR	4295208	Identifier	expectedTokens		4294941	0					
ANR	4295209	PrimaryExpression	1		4294941	1					
ANR	4295210	ExpressionStatement	"emit_param ( ""Token 3"" , ""%s"" , expectedTokens [ 2 ] )"	671:1:16828:16874	4294941	22	True				
ANR	4295211	CallExpression	"emit_param ( ""Token 3"" , ""%s"" , expectedTokens [ 2 ] )"		4294941	0					
ANR	4295212	Callee	emit_param		4294941	0					
ANR	4295213	Identifier	emit_param		4294941	0					
ANR	4295214	ArgumentList	"""Token 3"""		4294941	1					
ANR	4295215	Argument	"""Token 3"""		4294941	0					
ANR	4295216	PrimaryExpression	"""Token 3"""		4294941	0					
ANR	4295217	Argument	"""%s"""		4294941	1					
ANR	4295218	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295219	Argument	expectedTokens [ 2 ]		4294941	2					
ANR	4295220	ArrayIndexing	expectedTokens [ 2 ]		4294941	0					
ANR	4295221	Identifier	expectedTokens		4294941	0					
ANR	4295222	PrimaryExpression	2		4294941	1					
ANR	4295223	ExpressionStatement	"emit_param ( ""Token 4"" , ""%s"" , expectedTokens [ 3 ] )"	672:1:16877:16923	4294941	23	True				
ANR	4295224	CallExpression	"emit_param ( ""Token 4"" , ""%s"" , expectedTokens [ 3 ] )"		4294941	0					
ANR	4295225	Callee	emit_param		4294941	0					
ANR	4295226	Identifier	emit_param		4294941	0					
ANR	4295227	ArgumentList	"""Token 4"""		4294941	1					
ANR	4295228	Argument	"""Token 4"""		4294941	0					
ANR	4295229	PrimaryExpression	"""Token 4"""		4294941	0					
ANR	4295230	Argument	"""%s"""		4294941	1					
ANR	4295231	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295232	Argument	expectedTokens [ 3 ]		4294941	2					
ANR	4295233	ArrayIndexing	expectedTokens [ 3 ]		4294941	0					
ANR	4295234	Identifier	expectedTokens		4294941	0					
ANR	4295235	PrimaryExpression	3		4294941	1					
ANR	4295236	ExpressionStatement	"emit_param ( ""Token 5"" , ""%s"" , expectedTokens [ 4 ] )"	673:1:16926:16972	4294941	24	True				
ANR	4295237	CallExpression	"emit_param ( ""Token 5"" , ""%s"" , expectedTokens [ 4 ] )"		4294941	0					
ANR	4295238	Callee	emit_param		4294941	0					
ANR	4295239	Identifier	emit_param		4294941	0					
ANR	4295240	ArgumentList	"""Token 5"""		4294941	1					
ANR	4295241	Argument	"""Token 5"""		4294941	0					
ANR	4295242	PrimaryExpression	"""Token 5"""		4294941	0					
ANR	4295243	Argument	"""%s"""		4294941	1					
ANR	4295244	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295245	Argument	expectedTokens [ 4 ]		4294941	2					
ANR	4295246	ArrayIndexing	expectedTokens [ 4 ]		4294941	0					
ANR	4295247	Identifier	expectedTokens		4294941	0					
ANR	4295248	PrimaryExpression	4		4294941	1					
ANR	4295249	ExpressionStatement	"emit_param ( ""Token 6"" , ""%s"" , expectedTokens [ 5 ] )"	674:1:16975:17021	4294941	25	True				
ANR	4295250	CallExpression	"emit_param ( ""Token 6"" , ""%s"" , expectedTokens [ 5 ] )"		4294941	0					
ANR	4295251	Callee	emit_param		4294941	0					
ANR	4295252	Identifier	emit_param		4294941	0					
ANR	4295253	ArgumentList	"""Token 6"""		4294941	1					
ANR	4295254	Argument	"""Token 6"""		4294941	0					
ANR	4295255	PrimaryExpression	"""Token 6"""		4294941	0					
ANR	4295256	Argument	"""%s"""		4294941	1					
ANR	4295257	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295258	Argument	expectedTokens [ 5 ]		4294941	2					
ANR	4295259	ArrayIndexing	expectedTokens [ 5 ]		4294941	0					
ANR	4295260	Identifier	expectedTokens		4294941	0					
ANR	4295261	PrimaryExpression	5		4294941	1					
ANR	4295262	ExpressionStatement	"emit_param ( ""Token 7"" , ""%s"" , expectedTokens [ 6 ] )"	675:1:17024:17070	4294941	26	True				
ANR	4295263	CallExpression	"emit_param ( ""Token 7"" , ""%s"" , expectedTokens [ 6 ] )"		4294941	0					
ANR	4295264	Callee	emit_param		4294941	0					
ANR	4295265	Identifier	emit_param		4294941	0					
ANR	4295266	ArgumentList	"""Token 7"""		4294941	1					
ANR	4295267	Argument	"""Token 7"""		4294941	0					
ANR	4295268	PrimaryExpression	"""Token 7"""		4294941	0					
ANR	4295269	Argument	"""%s"""		4294941	1					
ANR	4295270	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295271	Argument	expectedTokens [ 6 ]		4294941	2					
ANR	4295272	ArrayIndexing	expectedTokens [ 6 ]		4294941	0					
ANR	4295273	Identifier	expectedTokens		4294941	0					
ANR	4295274	PrimaryExpression	6		4294941	1					
ANR	4295275	ExpressionStatement	"emit_param ( ""Token 8"" , ""%s"" , expectedTokens [ 7 ] )"	676:1:17073:17119	4294941	27	True				
ANR	4295276	CallExpression	"emit_param ( ""Token 8"" , ""%s"" , expectedTokens [ 7 ] )"		4294941	0					
ANR	4295277	Callee	emit_param		4294941	0					
ANR	4295278	Identifier	emit_param		4294941	0					
ANR	4295279	ArgumentList	"""Token 8"""		4294941	1					
ANR	4295280	Argument	"""Token 8"""		4294941	0					
ANR	4295281	PrimaryExpression	"""Token 8"""		4294941	0					
ANR	4295282	Argument	"""%s"""		4294941	1					
ANR	4295283	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295284	Argument	expectedTokens [ 7 ]		4294941	2					
ANR	4295285	ArrayIndexing	expectedTokens [ 7 ]		4294941	0					
ANR	4295286	Identifier	expectedTokens		4294941	0					
ANR	4295287	PrimaryExpression	7		4294941	1					
ANR	4295288	ExpressionStatement	"emit_param ( ""Token 9"" , ""%s"" , expectedTokens [ 8 ] )"	677:1:17122:17168	4294941	28	True				
ANR	4295289	CallExpression	"emit_param ( ""Token 9"" , ""%s"" , expectedTokens [ 8 ] )"		4294941	0					
ANR	4295290	Callee	emit_param		4294941	0					
ANR	4295291	Identifier	emit_param		4294941	0					
ANR	4295292	ArgumentList	"""Token 9"""		4294941	1					
ANR	4295293	Argument	"""Token 9"""		4294941	0					
ANR	4295294	PrimaryExpression	"""Token 9"""		4294941	0					
ANR	4295295	Argument	"""%s"""		4294941	1					
ANR	4295296	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295297	Argument	expectedTokens [ 8 ]		4294941	2					
ANR	4295298	ArrayIndexing	expectedTokens [ 8 ]		4294941	0					
ANR	4295299	Identifier	expectedTokens		4294941	0					
ANR	4295300	PrimaryExpression	8		4294941	1					
ANR	4295301	ExpressionStatement	"emit_param ( ""Token 10"" , ""%s"" , expectedTokens [ 9 ] )"	678:1:17171:17218	4294941	29	True				
ANR	4295302	CallExpression	"emit_param ( ""Token 10"" , ""%s"" , expectedTokens [ 9 ] )"		4294941	0					
ANR	4295303	Callee	emit_param		4294941	0					
ANR	4295304	Identifier	emit_param		4294941	0					
ANR	4295305	ArgumentList	"""Token 10"""		4294941	1					
ANR	4295306	Argument	"""Token 10"""		4294941	0					
ANR	4295307	PrimaryExpression	"""Token 10"""		4294941	0					
ANR	4295308	Argument	"""%s"""		4294941	1					
ANR	4295309	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295310	Argument	expectedTokens [ 9 ]		4294941	2					
ANR	4295311	ArrayIndexing	expectedTokens [ 9 ]		4294941	0					
ANR	4295312	Identifier	expectedTokens		4294941	0					
ANR	4295313	PrimaryExpression	9		4294941	1					
ANR	4295314	ExpressionStatement	"emit_param ( ""Token 11"" , ""%s"" , expectedTokens [ 10 ] )"	679:1:17221:17269	4294941	30	True				
ANR	4295315	CallExpression	"emit_param ( ""Token 11"" , ""%s"" , expectedTokens [ 10 ] )"		4294941	0					
ANR	4295316	Callee	emit_param		4294941	0					
ANR	4295317	Identifier	emit_param		4294941	0					
ANR	4295318	ArgumentList	"""Token 11"""		4294941	1					
ANR	4295319	Argument	"""Token 11"""		4294941	0					
ANR	4295320	PrimaryExpression	"""Token 11"""		4294941	0					
ANR	4295321	Argument	"""%s"""		4294941	1					
ANR	4295322	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295323	Argument	expectedTokens [ 10 ]		4294941	2					
ANR	4295324	ArrayIndexing	expectedTokens [ 10 ]		4294941	0					
ANR	4295325	Identifier	expectedTokens		4294941	0					
ANR	4295326	PrimaryExpression	10		4294941	1					
ANR	4295327	ExpressionStatement	"emit_param ( ""Token 12"" , ""%s"" , expectedTokens [ 11 ] )"	680:1:17272:17320	4294941	31	True				
ANR	4295328	CallExpression	"emit_param ( ""Token 12"" , ""%s"" , expectedTokens [ 11 ] )"		4294941	0					
ANR	4295329	Callee	emit_param		4294941	0					
ANR	4295330	Identifier	emit_param		4294941	0					
ANR	4295331	ArgumentList	"""Token 12"""		4294941	1					
ANR	4295332	Argument	"""Token 12"""		4294941	0					
ANR	4295333	PrimaryExpression	"""Token 12"""		4294941	0					
ANR	4295334	Argument	"""%s"""		4294941	1					
ANR	4295335	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295336	Argument	expectedTokens [ 11 ]		4294941	2					
ANR	4295337	ArrayIndexing	expectedTokens [ 11 ]		4294941	0					
ANR	4295338	Identifier	expectedTokens		4294941	0					
ANR	4295339	PrimaryExpression	11		4294941	1					
ANR	4295340	ExpressionStatement	emit_output_actual_header ( )	681:1:17323:17350	4294941	32	True				
ANR	4295341	CallExpression	emit_output_actual_header ( )		4294941	0					
ANR	4295342	Callee	emit_output_actual_header		4294941	0					
ANR	4295343	Identifier	emit_output_actual_header		4294941	0					
ANR	4295344	ArgumentList			4294941	1					
ANR	4295345	ExpressionStatement	"emit_param ( ""Token 1"" , ""%s"" , resultToken0 )"	682:1:17353:17394	4294941	33	True				
ANR	4295346	CallExpression	"emit_param ( ""Token 1"" , ""%s"" , resultToken0 )"		4294941	0					
ANR	4295347	Callee	emit_param		4294941	0					
ANR	4295348	Identifier	emit_param		4294941	0					
ANR	4295349	ArgumentList	"""Token 1"""		4294941	1					
ANR	4295350	Argument	"""Token 1"""		4294941	0					
ANR	4295351	PrimaryExpression	"""Token 1"""		4294941	0					
ANR	4295352	Argument	"""%s"""		4294941	1					
ANR	4295353	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295354	Argument	resultToken0		4294941	2					
ANR	4295355	Identifier	resultToken0		4294941	0					
ANR	4295356	ExpressionStatement	"emit_param ( ""Token 2"" , ""%s"" , resultToken1 )"	683:1:17397:17438	4294941	34	True				
ANR	4295357	CallExpression	"emit_param ( ""Token 2"" , ""%s"" , resultToken1 )"		4294941	0					
ANR	4295358	Callee	emit_param		4294941	0					
ANR	4295359	Identifier	emit_param		4294941	0					
ANR	4295360	ArgumentList	"""Token 2"""		4294941	1					
ANR	4295361	Argument	"""Token 2"""		4294941	0					
ANR	4295362	PrimaryExpression	"""Token 2"""		4294941	0					
ANR	4295363	Argument	"""%s"""		4294941	1					
ANR	4295364	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295365	Argument	resultToken1		4294941	2					
ANR	4295366	Identifier	resultToken1		4294941	0					
ANR	4295367	ExpressionStatement	"emit_param ( ""Token 3"" , ""%s"" , resultToken2 )"	684:1:17441:17482	4294941	35	True				
ANR	4295368	CallExpression	"emit_param ( ""Token 3"" , ""%s"" , resultToken2 )"		4294941	0					
ANR	4295369	Callee	emit_param		4294941	0					
ANR	4295370	Identifier	emit_param		4294941	0					
ANR	4295371	ArgumentList	"""Token 3"""		4294941	1					
ANR	4295372	Argument	"""Token 3"""		4294941	0					
ANR	4295373	PrimaryExpression	"""Token 3"""		4294941	0					
ANR	4295374	Argument	"""%s"""		4294941	1					
ANR	4295375	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295376	Argument	resultToken2		4294941	2					
ANR	4295377	Identifier	resultToken2		4294941	0					
ANR	4295378	ExpressionStatement	"emit_param ( ""Token 4"" , ""%s"" , resultToken3 )"	685:1:17485:17526	4294941	36	True				
ANR	4295379	CallExpression	"emit_param ( ""Token 4"" , ""%s"" , resultToken3 )"		4294941	0					
ANR	4295380	Callee	emit_param		4294941	0					
ANR	4295381	Identifier	emit_param		4294941	0					
ANR	4295382	ArgumentList	"""Token 4"""		4294941	1					
ANR	4295383	Argument	"""Token 4"""		4294941	0					
ANR	4295384	PrimaryExpression	"""Token 4"""		4294941	0					
ANR	4295385	Argument	"""%s"""		4294941	1					
ANR	4295386	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295387	Argument	resultToken3		4294941	2					
ANR	4295388	Identifier	resultToken3		4294941	0					
ANR	4295389	ExpressionStatement	"emit_param ( ""Token 5"" , ""%s"" , resultToken4 )"	686:1:17529:17570	4294941	37	True				
ANR	4295390	CallExpression	"emit_param ( ""Token 5"" , ""%s"" , resultToken4 )"		4294941	0					
ANR	4295391	Callee	emit_param		4294941	0					
ANR	4295392	Identifier	emit_param		4294941	0					
ANR	4295393	ArgumentList	"""Token 5"""		4294941	1					
ANR	4295394	Argument	"""Token 5"""		4294941	0					
ANR	4295395	PrimaryExpression	"""Token 5"""		4294941	0					
ANR	4295396	Argument	"""%s"""		4294941	1					
ANR	4295397	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295398	Argument	resultToken4		4294941	2					
ANR	4295399	Identifier	resultToken4		4294941	0					
ANR	4295400	ExpressionStatement	"emit_param ( ""Token 6"" , ""%s"" , resultToken5 )"	687:1:17573:17614	4294941	38	True				
ANR	4295401	CallExpression	"emit_param ( ""Token 6"" , ""%s"" , resultToken5 )"		4294941	0					
ANR	4295402	Callee	emit_param		4294941	0					
ANR	4295403	Identifier	emit_param		4294941	0					
ANR	4295404	ArgumentList	"""Token 6"""		4294941	1					
ANR	4295405	Argument	"""Token 6"""		4294941	0					
ANR	4295406	PrimaryExpression	"""Token 6"""		4294941	0					
ANR	4295407	Argument	"""%s"""		4294941	1					
ANR	4295408	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295409	Argument	resultToken5		4294941	2					
ANR	4295410	Identifier	resultToken5		4294941	0					
ANR	4295411	ExpressionStatement	"emit_param ( ""Token 7"" , ""%s"" , resultToken6 )"	688:1:17617:17658	4294941	39	True				
ANR	4295412	CallExpression	"emit_param ( ""Token 7"" , ""%s"" , resultToken6 )"		4294941	0					
ANR	4295413	Callee	emit_param		4294941	0					
ANR	4295414	Identifier	emit_param		4294941	0					
ANR	4295415	ArgumentList	"""Token 7"""		4294941	1					
ANR	4295416	Argument	"""Token 7"""		4294941	0					
ANR	4295417	PrimaryExpression	"""Token 7"""		4294941	0					
ANR	4295418	Argument	"""%s"""		4294941	1					
ANR	4295419	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295420	Argument	resultToken6		4294941	2					
ANR	4295421	Identifier	resultToken6		4294941	0					
ANR	4295422	ExpressionStatement	"emit_param ( ""Token 8"" , ""%s"" , resultToken7 )"	689:1:17661:17702	4294941	40	True				
ANR	4295423	CallExpression	"emit_param ( ""Token 8"" , ""%s"" , resultToken7 )"		4294941	0					
ANR	4295424	Callee	emit_param		4294941	0					
ANR	4295425	Identifier	emit_param		4294941	0					
ANR	4295426	ArgumentList	"""Token 8"""		4294941	1					
ANR	4295427	Argument	"""Token 8"""		4294941	0					
ANR	4295428	PrimaryExpression	"""Token 8"""		4294941	0					
ANR	4295429	Argument	"""%s"""		4294941	1					
ANR	4295430	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295431	Argument	resultToken7		4294941	2					
ANR	4295432	Identifier	resultToken7		4294941	0					
ANR	4295433	ExpressionStatement	"emit_param ( ""Token 9"" , ""%s"" , resultToken8 )"	690:1:17705:17746	4294941	41	True				
ANR	4295434	CallExpression	"emit_param ( ""Token 9"" , ""%s"" , resultToken8 )"		4294941	0					
ANR	4295435	Callee	emit_param		4294941	0					
ANR	4295436	Identifier	emit_param		4294941	0					
ANR	4295437	ArgumentList	"""Token 9"""		4294941	1					
ANR	4295438	Argument	"""Token 9"""		4294941	0					
ANR	4295439	PrimaryExpression	"""Token 9"""		4294941	0					
ANR	4295440	Argument	"""%s"""		4294941	1					
ANR	4295441	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295442	Argument	resultToken8		4294941	2					
ANR	4295443	Identifier	resultToken8		4294941	0					
ANR	4295444	ExpressionStatement	"emit_param ( ""Token 10"" , ""%s"" , resultToken9 )"	691:1:17749:17791	4294941	42	True				
ANR	4295445	CallExpression	"emit_param ( ""Token 10"" , ""%s"" , resultToken9 )"		4294941	0					
ANR	4295446	Callee	emit_param		4294941	0					
ANR	4295447	Identifier	emit_param		4294941	0					
ANR	4295448	ArgumentList	"""Token 10"""		4294941	1					
ANR	4295449	Argument	"""Token 10"""		4294941	0					
ANR	4295450	PrimaryExpression	"""Token 10"""		4294941	0					
ANR	4295451	Argument	"""%s"""		4294941	1					
ANR	4295452	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295453	Argument	resultToken9		4294941	2					
ANR	4295454	Identifier	resultToken9		4294941	0					
ANR	4295455	ExpressionStatement	"emit_param ( ""Token 11"" , ""%s"" , resultToken10 )"	692:1:17794:17837	4294941	43	True				
ANR	4295456	CallExpression	"emit_param ( ""Token 11"" , ""%s"" , resultToken10 )"		4294941	0					
ANR	4295457	Callee	emit_param		4294941	0					
ANR	4295458	Identifier	emit_param		4294941	0					
ANR	4295459	ArgumentList	"""Token 11"""		4294941	1					
ANR	4295460	Argument	"""Token 11"""		4294941	0					
ANR	4295461	PrimaryExpression	"""Token 11"""		4294941	0					
ANR	4295462	Argument	"""%s"""		4294941	1					
ANR	4295463	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295464	Argument	resultToken10		4294941	2					
ANR	4295465	Identifier	resultToken10		4294941	0					
ANR	4295466	ExpressionStatement	"emit_param ( ""Token 12"" , ""%s"" , resultToken11 )"	693:1:17840:17883	4294941	44	True				
ANR	4295467	CallExpression	"emit_param ( ""Token 12"" , ""%s"" , resultToken11 )"		4294941	0					
ANR	4295468	Callee	emit_param		4294941	0					
ANR	4295469	Identifier	emit_param		4294941	0					
ANR	4295470	ArgumentList	"""Token 12"""		4294941	1					
ANR	4295471	Argument	"""Token 12"""		4294941	0					
ANR	4295472	PrimaryExpression	"""Token 12"""		4294941	0					
ANR	4295473	Argument	"""%s"""		4294941	1					
ANR	4295474	PrimaryExpression	"""%s"""		4294941	0					
ANR	4295475	Argument	resultToken11		4294941	2					
ANR	4295476	Identifier	resultToken11		4294941	0					
ANR	4295477	IfStatement	"if ( strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH )"		4294941	45					
ANR	4295478	Condition	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"	694:4:17889:18546	4294941	0	True				
ANR	4295479	OrExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	0		||			
ANR	4295480	EqualityExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH"		4294941	0		!=			
ANR	4295481	CallExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 )"		4294941	0					
ANR	4295482	Callee	strcmp		4294941	0					
ANR	4295483	Identifier	strcmp		4294941	0					
ANR	4295484	ArgumentList	expectedTokens [ 0 ]		4294941	1					
ANR	4295485	Argument	expectedTokens [ 0 ]		4294941	0					
ANR	4295486	ArrayIndexing	expectedTokens [ 0 ]		4294941	0					
ANR	4295487	Identifier	expectedTokens		4294941	0					
ANR	4295488	PrimaryExpression	0		4294941	1					
ANR	4295489	Argument	resultToken0		4294941	1					
ANR	4295490	Identifier	resultToken0		4294941	0					
ANR	4295491	Identifier	MATCH		4294941	1					
ANR	4295492	OrExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295493	EqualityExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH"		4294941	0		!=			
ANR	4295494	CallExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 )"		4294941	0					
ANR	4295495	Callee	strcmp		4294941	0					
ANR	4295496	Identifier	strcmp		4294941	0					
ANR	4295497	ArgumentList	expectedTokens [ 1 ]		4294941	1					
ANR	4295498	Argument	expectedTokens [ 1 ]		4294941	0					
ANR	4295499	ArrayIndexing	expectedTokens [ 1 ]		4294941	0					
ANR	4295500	Identifier	expectedTokens		4294941	0					
ANR	4295501	PrimaryExpression	1		4294941	1					
ANR	4295502	Argument	resultToken1		4294941	1					
ANR	4295503	Identifier	resultToken1		4294941	0					
ANR	4295504	Identifier	MATCH		4294941	1					
ANR	4295505	OrExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295506	EqualityExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH"		4294941	0		!=			
ANR	4295507	CallExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 )"		4294941	0					
ANR	4295508	Callee	strcmp		4294941	0					
ANR	4295509	Identifier	strcmp		4294941	0					
ANR	4295510	ArgumentList	expectedTokens [ 2 ]		4294941	1					
ANR	4295511	Argument	expectedTokens [ 2 ]		4294941	0					
ANR	4295512	ArrayIndexing	expectedTokens [ 2 ]		4294941	0					
ANR	4295513	Identifier	expectedTokens		4294941	0					
ANR	4295514	PrimaryExpression	2		4294941	1					
ANR	4295515	Argument	resultToken2		4294941	1					
ANR	4295516	Identifier	resultToken2		4294941	0					
ANR	4295517	Identifier	MATCH		4294941	1					
ANR	4295518	OrExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295519	EqualityExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH"		4294941	0		!=			
ANR	4295520	CallExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 )"		4294941	0					
ANR	4295521	Callee	strcmp		4294941	0					
ANR	4295522	Identifier	strcmp		4294941	0					
ANR	4295523	ArgumentList	expectedTokens [ 3 ]		4294941	1					
ANR	4295524	Argument	expectedTokens [ 3 ]		4294941	0					
ANR	4295525	ArrayIndexing	expectedTokens [ 3 ]		4294941	0					
ANR	4295526	Identifier	expectedTokens		4294941	0					
ANR	4295527	PrimaryExpression	3		4294941	1					
ANR	4295528	Argument	resultToken3		4294941	1					
ANR	4295529	Identifier	resultToken3		4294941	0					
ANR	4295530	Identifier	MATCH		4294941	1					
ANR	4295531	OrExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295532	EqualityExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH"		4294941	0		!=			
ANR	4295533	CallExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 )"		4294941	0					
ANR	4295534	Callee	strcmp		4294941	0					
ANR	4295535	Identifier	strcmp		4294941	0					
ANR	4295536	ArgumentList	expectedTokens [ 4 ]		4294941	1					
ANR	4295537	Argument	expectedTokens [ 4 ]		4294941	0					
ANR	4295538	ArrayIndexing	expectedTokens [ 4 ]		4294941	0					
ANR	4295539	Identifier	expectedTokens		4294941	0					
ANR	4295540	PrimaryExpression	4		4294941	1					
ANR	4295541	Argument	resultToken4		4294941	1					
ANR	4295542	Identifier	resultToken4		4294941	0					
ANR	4295543	Identifier	MATCH		4294941	1					
ANR	4295544	OrExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295545	EqualityExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH"		4294941	0		!=			
ANR	4295546	CallExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 )"		4294941	0					
ANR	4295547	Callee	strcmp		4294941	0					
ANR	4295548	Identifier	strcmp		4294941	0					
ANR	4295549	ArgumentList	expectedTokens [ 5 ]		4294941	1					
ANR	4295550	Argument	expectedTokens [ 5 ]		4294941	0					
ANR	4295551	ArrayIndexing	expectedTokens [ 5 ]		4294941	0					
ANR	4295552	Identifier	expectedTokens		4294941	0					
ANR	4295553	PrimaryExpression	5		4294941	1					
ANR	4295554	Argument	resultToken5		4294941	1					
ANR	4295555	Identifier	resultToken5		4294941	0					
ANR	4295556	Identifier	MATCH		4294941	1					
ANR	4295557	OrExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295558	EqualityExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH"		4294941	0		!=			
ANR	4295559	CallExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 )"		4294941	0					
ANR	4295560	Callee	strcmp		4294941	0					
ANR	4295561	Identifier	strcmp		4294941	0					
ANR	4295562	ArgumentList	expectedTokens [ 6 ]		4294941	1					
ANR	4295563	Argument	expectedTokens [ 6 ]		4294941	0					
ANR	4295564	ArrayIndexing	expectedTokens [ 6 ]		4294941	0					
ANR	4295565	Identifier	expectedTokens		4294941	0					
ANR	4295566	PrimaryExpression	6		4294941	1					
ANR	4295567	Argument	resultToken6		4294941	1					
ANR	4295568	Identifier	resultToken6		4294941	0					
ANR	4295569	Identifier	MATCH		4294941	1					
ANR	4295570	OrExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295571	EqualityExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH"		4294941	0		!=			
ANR	4295572	CallExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 )"		4294941	0					
ANR	4295573	Callee	strcmp		4294941	0					
ANR	4295574	Identifier	strcmp		4294941	0					
ANR	4295575	ArgumentList	expectedTokens [ 7 ]		4294941	1					
ANR	4295576	Argument	expectedTokens [ 7 ]		4294941	0					
ANR	4295577	ArrayIndexing	expectedTokens [ 7 ]		4294941	0					
ANR	4295578	Identifier	expectedTokens		4294941	0					
ANR	4295579	PrimaryExpression	7		4294941	1					
ANR	4295580	Argument	resultToken7		4294941	1					
ANR	4295581	Identifier	resultToken7		4294941	0					
ANR	4295582	Identifier	MATCH		4294941	1					
ANR	4295583	OrExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295584	EqualityExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH"		4294941	0		!=			
ANR	4295585	CallExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 )"		4294941	0					
ANR	4295586	Callee	strcmp		4294941	0					
ANR	4295587	Identifier	strcmp		4294941	0					
ANR	4295588	ArgumentList	expectedTokens [ 8 ]		4294941	1					
ANR	4295589	Argument	expectedTokens [ 8 ]		4294941	0					
ANR	4295590	ArrayIndexing	expectedTokens [ 8 ]		4294941	0					
ANR	4295591	Identifier	expectedTokens		4294941	0					
ANR	4295592	PrimaryExpression	8		4294941	1					
ANR	4295593	Argument	resultToken8		4294941	1					
ANR	4295594	Identifier	resultToken8		4294941	0					
ANR	4295595	Identifier	MATCH		4294941	1					
ANR	4295596	OrExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295597	EqualityExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH"		4294941	0		!=			
ANR	4295598	CallExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 )"		4294941	0					
ANR	4295599	Callee	strcmp		4294941	0					
ANR	4295600	Identifier	strcmp		4294941	0					
ANR	4295601	ArgumentList	expectedTokens [ 9 ]		4294941	1					
ANR	4295602	Argument	expectedTokens [ 9 ]		4294941	0					
ANR	4295603	ArrayIndexing	expectedTokens [ 9 ]		4294941	0					
ANR	4295604	Identifier	expectedTokens		4294941	0					
ANR	4295605	PrimaryExpression	9		4294941	1					
ANR	4295606	Argument	resultToken9		4294941	1					
ANR	4295607	Identifier	resultToken9		4294941	0					
ANR	4295608	Identifier	MATCH		4294941	1					
ANR	4295609	OrExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		||			
ANR	4295610	EqualityExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH"		4294941	0		!=			
ANR	4295611	CallExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 )"		4294941	0					
ANR	4295612	Callee	strcmp		4294941	0					
ANR	4295613	Identifier	strcmp		4294941	0					
ANR	4295614	ArgumentList	expectedTokens [ 10 ]		4294941	1					
ANR	4295615	Argument	expectedTokens [ 10 ]		4294941	0					
ANR	4295616	ArrayIndexing	expectedTokens [ 10 ]		4294941	0					
ANR	4295617	Identifier	expectedTokens		4294941	0					
ANR	4295618	PrimaryExpression	10		4294941	1					
ANR	4295619	Argument	resultToken10		4294941	1					
ANR	4295620	Identifier	resultToken10		4294941	0					
ANR	4295621	Identifier	MATCH		4294941	1					
ANR	4295622	EqualityExpression	"strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		4294941	1		!=			
ANR	4295623	CallExpression	"strcmp ( expectedTokens [ 11 ] , resultToken11 )"		4294941	0					
ANR	4295624	Callee	strcmp		4294941	0					
ANR	4295625	Identifier	strcmp		4294941	0					
ANR	4295626	ArgumentList	expectedTokens [ 11 ]		4294941	1					
ANR	4295627	Argument	expectedTokens [ 11 ]		4294941	0					
ANR	4295628	ArrayIndexing	expectedTokens [ 11 ]		4294941	0					
ANR	4295629	Identifier	expectedTokens		4294941	0					
ANR	4295630	PrimaryExpression	11		4294941	1					
ANR	4295631	Argument	resultToken11		4294941	1					
ANR	4295632	Identifier	resultToken11		4294941	0					
ANR	4295633	Identifier	MATCH		4294941	1					
ANR	4295634	CompoundStatement		59:55:2861:2861	4294941	1					
ANR	4295635	ExpressionStatement	FAIL	706:2:18553:18557	4294941	0	True				
ANR	4295636	Identifier	FAIL		4294941	0					
ANR	4295637	ExpressionStatement	PASS	708:1:18563:18567	4294941	46	True				
ANR	4295638	Identifier	PASS		4294941	0					
ANR	4295639	ReturnType	static bool		4294941	1					
ANR	4295640	Identifier	tokenize_multiple_calls		4294941	2					
ANR	4295641	ParameterList			4294941	3					
ANR	4295642	CFGEntryNode	ENTRY		4294941		True				
ANR	4295643	CFGExitNode	EXIT		4294941		True				
ANR	4295644	Symbol	expectedTokens		4294941						
ANR	4295645	Symbol	strcmp		4294941						
ANR	4295646	Symbol	a		4294941						
ANR	4295647	Symbol	resultToken1		4294941						
ANR	4295648	Symbol	resultToken0		4294941						
ANR	4295649	Symbol	resultToken3		4294941						
ANR	4295650	Symbol	* expectedTokens		4294941						
ANR	4295651	Symbol	resultToken2		4294941						
ANR	4295652	Symbol	false		4294941						
ANR	4295653	Symbol	resultToken5		4294941						
ANR	4295654	Symbol	resultToken4		4294941						
ANR	4295655	Symbol	resultToken7		4294941						
ANR	4295656	Symbol	resultToken6		4294941						
ANR	4295657	Symbol	resultToken9		4294941						
ANR	4295658	Symbol	resultToken8		4294941						
ANR	4295659	Symbol	resultToken11		4294941						
ANR	4295660	Symbol	resultToken10		4294941						
ANR	4295661	Symbol	GetNextToken		4294941						
ANR	4295662	Symbol	MATCH		4294941						
ANR	4295663	Function	tokenize_end	711:0:18572:19009							
ANR	4295664	FunctionDef	tokenize_end ()		4295663	0					
ANR	4295665	CompoundStatement		711:27:18599:19009	4295663	0					
ANR	4295666	ExpressionStatement	"emit_test ( ""Test GetNextToken() after getting to the end."" )"	712:1:18602:18660	4295663	0	True				
ANR	4295667	CallExpression	"emit_test ( ""Test GetNextToken() after getting to the end."" )"		4295663	0					
ANR	4295668	Callee	emit_test		4295663	0					
ANR	4295669	Identifier	emit_test		4295663	0					
ANR	4295670	ArgumentList	"""Test GetNextToken() after getting to the end."""		4295663	1					
ANR	4295671	Argument	"""Test GetNextToken() after getting to the end."""		4295663	0					
ANR	4295672	PrimaryExpression	"""Test GetNextToken() after getting to the end."""		4295663	0					
ANR	4295673	IdentifierDeclStatement	"const char * a = ""foo;"" ;"	713:1:18663:18685	4295663	1	True				
ANR	4295674	IdentifierDecl	"* a = ""foo;"""		4295663	0					
ANR	4295675	IdentifierDeclType	const char *		4295663	0					
ANR	4295676	Identifier	a		4295663	1					
ANR	4295677	AssignmentExpression	"* a = ""foo;"""		4295663	2		=			
ANR	4295678	Identifier	a		4295663	0					
ANR	4295679	PrimaryExpression	"""foo;"""		4295663	1					
ANR	4295680	ExpressionStatement	Tokenize ( a )	714:1:18688:18699	4295663	2	True				
ANR	4295681	CallExpression	Tokenize ( a )		4295663	0					
ANR	4295682	Callee	Tokenize		4295663	0					
ANR	4295683	Identifier	Tokenize		4295663	0					
ANR	4295684	ArgumentList	a		4295663	1					
ANR	4295685	Argument	a		4295663	0					
ANR	4295686	Identifier	a		4295663	0					
ANR	4295687	IdentifierDeclStatement	"const char * tok = GetNextToken ( "";"" , false ) ;"	715:1:18702:18744	4295663	3	True				
ANR	4295688	IdentifierDecl	"* tok = GetNextToken ( "";"" , false )"		4295663	0					
ANR	4295689	IdentifierDeclType	const char *		4295663	0					
ANR	4295690	Identifier	tok		4295663	1					
ANR	4295691	AssignmentExpression	"* tok = GetNextToken ( "";"" , false )"		4295663	2		=			
ANR	4295692	Identifier	tok		4295663	0					
ANR	4295693	CallExpression	"GetNextToken ( "";"" , false )"		4295663	1					
ANR	4295694	Callee	GetNextToken		4295663	0					
ANR	4295695	Identifier	GetNextToken		4295663	0					
ANR	4295696	ArgumentList	""";"""		4295663	1					
ANR	4295697	Argument	""";"""		4295663	0					
ANR	4295698	PrimaryExpression	""";"""		4295663	0					
ANR	4295699	Argument	false		4295663	1					
ANR	4295700	Identifier	false		4295663	0					
ANR	4295701	ExpressionStatement	"tok = GetNextToken ( "";"" , false )"	716:1:18747:18777	4295663	4	True				
ANR	4295702	AssignmentExpression	"tok = GetNextToken ( "";"" , false )"		4295663	0		=			
ANR	4295703	Identifier	tok		4295663	0					
ANR	4295704	CallExpression	"GetNextToken ( "";"" , false )"		4295663	1					
ANR	4295705	Callee	GetNextToken		4295663	0					
ANR	4295706	Identifier	GetNextToken		4295663	0					
ANR	4295707	ArgumentList	""";"""		4295663	1					
ANR	4295708	Argument	""";"""		4295663	0					
ANR	4295709	PrimaryExpression	""";"""		4295663	0					
ANR	4295710	Argument	false		4295663	1					
ANR	4295711	Identifier	false		4295663	0					
ANR	4295712	ExpressionStatement	"tok = GetNextToken ( "";"" , false )"	717:1:18780:18810	4295663	5	True				
ANR	4295713	AssignmentExpression	"tok = GetNextToken ( "";"" , false )"		4295663	0		=			
ANR	4295714	Identifier	tok		4295663	0					
ANR	4295715	CallExpression	"GetNextToken ( "";"" , false )"		4295663	1					
ANR	4295716	Callee	GetNextToken		4295663	0					
ANR	4295717	Identifier	GetNextToken		4295663	0					
ANR	4295718	ArgumentList	""";"""		4295663	1					
ANR	4295719	Argument	""";"""		4295663	0					
ANR	4295720	PrimaryExpression	""";"""		4295663	0					
ANR	4295721	Argument	false		4295663	1					
ANR	4295722	Identifier	false		4295663	0					
ANR	4295723	ExpressionStatement	emit_input_header ( )	718:1:18813:18832	4295663	6	True				
ANR	4295724	CallExpression	emit_input_header ( )		4295663	0					
ANR	4295725	Callee	emit_input_header		4295663	0					
ANR	4295726	Identifier	emit_input_header		4295663	0					
ANR	4295727	ArgumentList			4295663	1					
ANR	4295728	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "";"" )"	719:1:18835:18865	4295663	7	True				
ANR	4295729	CallExpression	"emit_param ( ""delim"" , ""%s"" , "";"" )"		4295663	0					
ANR	4295730	Callee	emit_param		4295663	0					
ANR	4295731	Identifier	emit_param		4295663	0					
ANR	4295732	ArgumentList	"""delim"""		4295663	1					
ANR	4295733	Argument	"""delim"""		4295663	0					
ANR	4295734	PrimaryExpression	"""delim"""		4295663	0					
ANR	4295735	Argument	"""%s"""		4295663	1					
ANR	4295736	PrimaryExpression	"""%s"""		4295663	0					
ANR	4295737	Argument	""";"""		4295663	2					
ANR	4295738	PrimaryExpression	""";"""		4295663	0					
ANR	4295739	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	720:1:18868:18910	4295663	8	True				
ANR	4295740	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		4295663	0					
ANR	4295741	Callee	emit_param		4295663	0					
ANR	4295742	Identifier	emit_param		4295663	0					
ANR	4295743	ArgumentList	"""skipBlankTokens"""		4295663	1					
ANR	4295744	Argument	"""skipBlankTokens"""		4295663	0					
ANR	4295745	PrimaryExpression	"""skipBlankTokens"""		4295663	0					
ANR	4295746	Argument	"""%d"""		4295663	1					
ANR	4295747	PrimaryExpression	"""%d"""		4295663	0					
ANR	4295748	Argument	false		4295663	2					
ANR	4295749	Identifier	false		4295663	0					
ANR	4295750	ExpressionStatement	emit_output_expected_header ( )	721:1:18913:18942	4295663	9	True				
ANR	4295751	CallExpression	emit_output_expected_header ( )		4295663	0					
ANR	4295752	Callee	emit_output_expected_header		4295663	0					
ANR	4295753	Identifier	emit_output_expected_header		4295663	0					
ANR	4295754	ArgumentList			4295663	1					
ANR	4295755	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	722:1:18945:18970	4295663	10	True				
ANR	4295756	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		4295663	0					
ANR	4295757	Callee	emit_retval		4295663	0					
ANR	4295758	Identifier	emit_retval		4295663	0					
ANR	4295759	ArgumentList	"""%s"""		4295663	1					
ANR	4295760	Argument	"""%s"""		4295663	0					
ANR	4295761	PrimaryExpression	"""%s"""		4295663	0					
ANR	4295762	Argument	"""NULL"""		4295663	1					
ANR	4295763	PrimaryExpression	"""NULL"""		4295663	0					
ANR	4295764	IfStatement	if ( tok != NULL )		4295663	11					
ANR	4295765	Condition	tok != NULL	723:4:18976:18986	4295663	0	True				
ANR	4295766	EqualityExpression	tok != NULL		4295663	0		!=			
ANR	4295767	Identifier	tok		4295663	0					
ANR	4295768	Identifier	NULL		4295663	1					
ANR	4295769	CompoundStatement		13:17:389:389	4295663	1					
ANR	4295770	ExpressionStatement	FAIL	724:2:18993:18997	4295663	0	True				
ANR	4295771	Identifier	FAIL		4295663	0					
ANR	4295772	ExpressionStatement	PASS	726:1:19003:19007	4295663	12	True				
ANR	4295773	Identifier	PASS		4295663	0					
ANR	4295774	ReturnType	static bool		4295663	1					
ANR	4295775	Identifier	tokenize_end		4295663	2					
ANR	4295776	ParameterList			4295663	3					
ANR	4295777	CFGEntryNode	ENTRY		4295663		True				
ANR	4295778	CFGExitNode	EXIT		4295663		True				
ANR	4295779	Symbol	a		4295663						
ANR	4295780	Symbol	tok		4295663						
ANR	4295781	Symbol	NULL		4295663						
ANR	4295782	Symbol	GetNextToken		4295663						
ANR	4295783	Symbol	false		4295663						
ANR	4295784	Function	tokenize_empty	729:0:19012:19357							
ANR	4295785	FunctionDef	tokenize_empty ()		4295784	0					
ANR	4295786	CompoundStatement		729:29:19041:19357	4295784	0					
ANR	4295787	ExpressionStatement	"emit_test ( ""Test GetNextToken() on an empty MyString."" )"	730:1:19044:19098	4295784	0	True				
ANR	4295788	CallExpression	"emit_test ( ""Test GetNextToken() on an empty MyString."" )"		4295784	0					
ANR	4295789	Callee	emit_test		4295784	0					
ANR	4295790	Identifier	emit_test		4295784	0					
ANR	4295791	ArgumentList	"""Test GetNextToken() on an empty MyString."""		4295784	1					
ANR	4295792	Argument	"""Test GetNextToken() on an empty MyString."""		4295784	0					
ANR	4295793	PrimaryExpression	"""Test GetNextToken() on an empty MyString."""		4295784	0					
ANR	4295794	ExpressionStatement	"Tokenize ( """" )"	731:1:19101:19113	4295784	1	True				
ANR	4295795	CallExpression	"Tokenize ( """" )"		4295784	0					
ANR	4295796	Callee	Tokenize		4295784	0					
ANR	4295797	Identifier	Tokenize		4295784	0					
ANR	4295798	ArgumentList	""""""		4295784	1					
ANR	4295799	Argument	""""""		4295784	0					
ANR	4295800	PrimaryExpression	""""""		4295784	0					
ANR	4295801	IdentifierDeclStatement	"const char * tok = GetNextToken ( "" "" , false ) ;"	732:1:19116:19158	4295784	2	True				
ANR	4295802	IdentifierDecl	"* tok = GetNextToken ( "" "" , false )"		4295784	0					
ANR	4295803	IdentifierDeclType	const char *		4295784	0					
ANR	4295804	Identifier	tok		4295784	1					
ANR	4295805	AssignmentExpression	"* tok = GetNextToken ( "" "" , false )"		4295784	2		=			
ANR	4295806	Identifier	tok		4295784	0					
ANR	4295807	CallExpression	"GetNextToken ( "" "" , false )"		4295784	1					
ANR	4295808	Callee	GetNextToken		4295784	0					
ANR	4295809	Identifier	GetNextToken		4295784	0					
ANR	4295810	ArgumentList	""" """		4295784	1					
ANR	4295811	Argument	""" """		4295784	0					
ANR	4295812	PrimaryExpression	""" """		4295784	0					
ANR	4295813	Argument	false		4295784	1					
ANR	4295814	Identifier	false		4295784	0					
ANR	4295815	ExpressionStatement	emit_input_header ( )	733:1:19161:19180	4295784	3	True				
ANR	4295816	CallExpression	emit_input_header ( )		4295784	0					
ANR	4295817	Callee	emit_input_header		4295784	0					
ANR	4295818	Identifier	emit_input_header		4295784	0					
ANR	4295819	ArgumentList			4295784	1					
ANR	4295820	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	734:1:19183:19213	4295784	4	True				
ANR	4295821	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		4295784	0					
ANR	4295822	Callee	emit_param		4295784	0					
ANR	4295823	Identifier	emit_param		4295784	0					
ANR	4295824	ArgumentList	"""delim"""		4295784	1					
ANR	4295825	Argument	"""delim"""		4295784	0					
ANR	4295826	PrimaryExpression	"""delim"""		4295784	0					
ANR	4295827	Argument	"""%s"""		4295784	1					
ANR	4295828	PrimaryExpression	"""%s"""		4295784	0					
ANR	4295829	Argument	""" """		4295784	2					
ANR	4295830	PrimaryExpression	""" """		4295784	0					
ANR	4295831	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	735:1:19216:19258	4295784	5	True				
ANR	4295832	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		4295784	0					
ANR	4295833	Callee	emit_param		4295784	0					
ANR	4295834	Identifier	emit_param		4295784	0					
ANR	4295835	ArgumentList	"""skipBlankTokens"""		4295784	1					
ANR	4295836	Argument	"""skipBlankTokens"""		4295784	0					
ANR	4295837	PrimaryExpression	"""skipBlankTokens"""		4295784	0					
ANR	4295838	Argument	"""%d"""		4295784	1					
ANR	4295839	PrimaryExpression	"""%d"""		4295784	0					
ANR	4295840	Argument	false		4295784	2					
ANR	4295841	Identifier	false		4295784	0					
ANR	4295842	ExpressionStatement	emit_output_expected_header ( )	736:1:19261:19290	4295784	6	True				
ANR	4295843	CallExpression	emit_output_expected_header ( )		4295784	0					
ANR	4295844	Callee	emit_output_expected_header		4295784	0					
ANR	4295845	Identifier	emit_output_expected_header		4295784	0					
ANR	4295846	ArgumentList			4295784	1					
ANR	4295847	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	737:1:19293:19318	4295784	7	True				
ANR	4295848	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		4295784	0					
ANR	4295849	Callee	emit_retval		4295784	0					
ANR	4295850	Identifier	emit_retval		4295784	0					
ANR	4295851	ArgumentList	"""%s"""		4295784	1					
ANR	4295852	Argument	"""%s"""		4295784	0					
ANR	4295853	PrimaryExpression	"""%s"""		4295784	0					
ANR	4295854	Argument	"""NULL"""		4295784	1					
ANR	4295855	PrimaryExpression	"""NULL"""		4295784	0					
ANR	4295856	IfStatement	if ( tok != NULL )		4295784	8					
ANR	4295857	Condition	tok != NULL	738:4:19324:19334	4295784	0	True				
ANR	4295858	EqualityExpression	tok != NULL		4295784	0		!=			
ANR	4295859	Identifier	tok		4295784	0					
ANR	4295860	Identifier	NULL		4295784	1					
ANR	4295861	CompoundStatement		10:17:295:295	4295784	1					
ANR	4295862	ExpressionStatement	FAIL	739:2:19341:19345	4295784	0	True				
ANR	4295863	Identifier	FAIL		4295784	0					
ANR	4295864	ExpressionStatement	PASS	741:1:19351:19355	4295784	9	True				
ANR	4295865	Identifier	PASS		4295784	0					
ANR	4295866	ReturnType	static bool		4295784	1					
ANR	4295867	Identifier	tokenize_empty		4295784	2					
ANR	4295868	ParameterList			4295784	3					
ANR	4295869	CFGEntryNode	ENTRY		4295784		True				
ANR	4295870	CFGExitNode	EXIT		4295784		True				
ANR	4295871	Symbol	tok		4295784						
ANR	4295872	Symbol	NULL		4295784						
ANR	4295873	Symbol	GetNextToken		4295784						
ANR	4295874	Symbol	false		4295784						
ANR	4295875	Function	tokenize_empty_delimiter	744:0:19360:19748							
ANR	4295876	FunctionDef	tokenize_empty_delimiter ()		4295875	0					
ANR	4295877	CompoundStatement		744:39:19399:19748	4295875	0					
ANR	4295878	ExpressionStatement	"emit_test ( ""Test GetNextToken() on an empty delimiter string."" )"	745:1:19402:19464	4295875	0	True				
ANR	4295879	CallExpression	"emit_test ( ""Test GetNextToken() on an empty delimiter string."" )"		4295875	0					
ANR	4295880	Callee	emit_test		4295875	0					
ANR	4295881	Identifier	emit_test		4295875	0					
ANR	4295882	ArgumentList	"""Test GetNextToken() on an empty delimiter string."""		4295875	1					
ANR	4295883	Argument	"""Test GetNextToken() on an empty delimiter string."""		4295875	0					
ANR	4295884	PrimaryExpression	"""Test GetNextToken() on an empty delimiter string."""		4295875	0					
ANR	4295885	IdentifierDeclStatement	"const char * a = ""foobar"" ;"	746:1:19467:19491	4295875	1	True				
ANR	4295886	IdentifierDecl	"* a = ""foobar"""		4295875	0					
ANR	4295887	IdentifierDeclType	const char *		4295875	0					
ANR	4295888	Identifier	a		4295875	1					
ANR	4295889	AssignmentExpression	"* a = ""foobar"""		4295875	2		=			
ANR	4295890	Identifier	a		4295875	0					
ANR	4295891	PrimaryExpression	"""foobar"""		4295875	1					
ANR	4295892	ExpressionStatement	Tokenize ( a )	747:1:19494:19505	4295875	2	True				
ANR	4295893	CallExpression	Tokenize ( a )		4295875	0					
ANR	4295894	Callee	Tokenize		4295875	0					
ANR	4295895	Identifier	Tokenize		4295875	0					
ANR	4295896	ArgumentList	a		4295875	1					
ANR	4295897	Argument	a		4295875	0					
ANR	4295898	Identifier	a		4295875	0					
ANR	4295899	IdentifierDeclStatement	"const char * tok = GetNextToken ( """" , false ) ;"	748:1:19508:19549	4295875	3	True				
ANR	4295900	IdentifierDecl	"* tok = GetNextToken ( """" , false )"		4295875	0					
ANR	4295901	IdentifierDeclType	const char *		4295875	0					
ANR	4295902	Identifier	tok		4295875	1					
ANR	4295903	AssignmentExpression	"* tok = GetNextToken ( """" , false )"		4295875	2		=			
ANR	4295904	Identifier	tok		4295875	0					
ANR	4295905	CallExpression	"GetNextToken ( """" , false )"		4295875	1					
ANR	4295906	Callee	GetNextToken		4295875	0					
ANR	4295907	Identifier	GetNextToken		4295875	0					
ANR	4295908	ArgumentList	""""""		4295875	1					
ANR	4295909	Argument	""""""		4295875	0					
ANR	4295910	PrimaryExpression	""""""		4295875	0					
ANR	4295911	Argument	false		4295875	1					
ANR	4295912	Identifier	false		4295875	0					
ANR	4295913	ExpressionStatement	emit_input_header ( )	749:1:19552:19571	4295875	4	True				
ANR	4295914	CallExpression	emit_input_header ( )		4295875	0					
ANR	4295915	Callee	emit_input_header		4295875	0					
ANR	4295916	Identifier	emit_input_header		4295875	0					
ANR	4295917	ArgumentList			4295875	1					
ANR	4295918	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	750:1:19574:19604	4295875	5	True				
ANR	4295919	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		4295875	0					
ANR	4295920	Callee	emit_param		4295875	0					
ANR	4295921	Identifier	emit_param		4295875	0					
ANR	4295922	ArgumentList	"""delim"""		4295875	1					
ANR	4295923	Argument	"""delim"""		4295875	0					
ANR	4295924	PrimaryExpression	"""delim"""		4295875	0					
ANR	4295925	Argument	"""%s"""		4295875	1					
ANR	4295926	PrimaryExpression	"""%s"""		4295875	0					
ANR	4295927	Argument	""" """		4295875	2					
ANR	4295928	PrimaryExpression	""" """		4295875	0					
ANR	4295929	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	751:1:19607:19649	4295875	6	True				
ANR	4295930	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		4295875	0					
ANR	4295931	Callee	emit_param		4295875	0					
ANR	4295932	Identifier	emit_param		4295875	0					
ANR	4295933	ArgumentList	"""skipBlankTokens"""		4295875	1					
ANR	4295934	Argument	"""skipBlankTokens"""		4295875	0					
ANR	4295935	PrimaryExpression	"""skipBlankTokens"""		4295875	0					
ANR	4295936	Argument	"""%d"""		4295875	1					
ANR	4295937	PrimaryExpression	"""%d"""		4295875	0					
ANR	4295938	Argument	false		4295875	2					
ANR	4295939	Identifier	false		4295875	0					
ANR	4295940	ExpressionStatement	emit_output_expected_header ( )	752:1:19652:19681	4295875	7	True				
ANR	4295941	CallExpression	emit_output_expected_header ( )		4295875	0					
ANR	4295942	Callee	emit_output_expected_header		4295875	0					
ANR	4295943	Identifier	emit_output_expected_header		4295875	0					
ANR	4295944	ArgumentList			4295875	1					
ANR	4295945	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	753:1:19684:19709	4295875	8	True				
ANR	4295946	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		4295875	0					
ANR	4295947	Callee	emit_retval		4295875	0					
ANR	4295948	Identifier	emit_retval		4295875	0					
ANR	4295949	ArgumentList	"""%s"""		4295875	1					
ANR	4295950	Argument	"""%s"""		4295875	0					
ANR	4295951	PrimaryExpression	"""%s"""		4295875	0					
ANR	4295952	Argument	"""NULL"""		4295875	1					
ANR	4295953	PrimaryExpression	"""NULL"""		4295875	0					
ANR	4295954	IfStatement	if ( tok != NULL )		4295875	9					
ANR	4295955	Condition	tok != NULL	754:4:19715:19725	4295875	0	True				
ANR	4295956	EqualityExpression	tok != NULL		4295875	0		!=			
ANR	4295957	Identifier	tok		4295875	0					
ANR	4295958	Identifier	NULL		4295875	1					
ANR	4295959	CompoundStatement		11:17:328:328	4295875	1					
ANR	4295960	ExpressionStatement	FAIL	755:2:19732:19736	4295875	0	True				
ANR	4295961	Identifier	FAIL		4295875	0					
ANR	4295962	ExpressionStatement	PASS	757:1:19742:19746	4295875	10	True				
ANR	4295963	Identifier	PASS		4295875	0					
ANR	4295964	ReturnType	static bool		4295875	1					
ANR	4295965	Identifier	tokenize_empty_delimiter		4295875	2					
ANR	4295966	ParameterList			4295875	3					
ANR	4295967	CFGEntryNode	ENTRY		4295875		True				
ANR	4295968	CFGExitNode	EXIT		4295875		True				
ANR	4295969	Symbol	a		4295875						
ANR	4295970	Symbol	tok		4295875						
ANR	4295971	Symbol	NULL		4295875						
ANR	4295972	Symbol	GetNextToken		4295875						
ANR	4295973	Symbol	false		4295875						
