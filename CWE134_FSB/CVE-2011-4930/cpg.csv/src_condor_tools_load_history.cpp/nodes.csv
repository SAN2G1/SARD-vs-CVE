command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4233686	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_load_history.cpp								
ANR	4233687	Function	Usage	52:0:1590:1740							
ANR	4233688	FunctionDef	"Usage (char * name , int iExitCode)"		4233687	0					
ANR	4233689	CompoundStatement		53:0:1629:1740	4233687	0					
ANR	4233690	ExpressionStatement	"printf ( ""Usage: %s -f history-filename [-name schedd-name jobqueue-birthdate]\\n"" , name )"	54:2:1633:1719	4233687	0	True				
ANR	4233691	CallExpression	"printf ( ""Usage: %s -f history-filename [-name schedd-name jobqueue-birthdate]\\n"" , name )"		4233687	0					
ANR	4233692	Callee	printf		4233687	0					
ANR	4233693	Identifier	printf		4233687	0					
ANR	4233694	ArgumentList	"""Usage: %s -f history-filename [-name schedd-name jobqueue-birthdate]\\n"""		4233687	1					
ANR	4233695	Argument	"""Usage: %s -f history-filename [-name schedd-name jobqueue-birthdate]\\n"""		4233687	0					
ANR	4233696	PrimaryExpression	"""Usage: %s -f history-filename [-name schedd-name jobqueue-birthdate]\\n"""		4233687	0					
ANR	4233697	Argument	name		4233687	1					
ANR	4233698	Identifier	name		4233687	0					
ANR	4233699	ExpressionStatement	exit ( iExitCode )	55:2:1723:1738	4233687	1	True				
ANR	4233700	CallExpression	exit ( iExitCode )		4233687	0					
ANR	4233701	Callee	exit		4233687	0					
ANR	4233702	Identifier	exit		4233687	0					
ANR	4233703	ArgumentList	iExitCode		4233687	1					
ANR	4233704	Argument	iExitCode		4233687	0					
ANR	4233705	Identifier	iExitCode		4233687	0					
ANR	4233706	ReturnType	void		4233687	1					
ANR	4233707	Identifier	Usage		4233687	2					
ANR	4233708	ParameterList	"char * name , int iExitCode"		4233687	3					
ANR	4233709	Parameter	char * name	52:11:1601:1610	4233687	0	True				
ANR	4233710	ParameterType	char *		4233687	0					
ANR	4233711	Identifier	name		4233687	1					
ANR	4233712	Parameter	int iExitCode	52:23:1613:1625	4233687	1	True				
ANR	4233713	ParameterType	int		4233687	0					
ANR	4233714	Identifier	iExitCode		4233687	1					
ANR	4233715	CFGEntryNode	ENTRY		4233687		True				
ANR	4233716	CFGExitNode	EXIT		4233687		True				
ANR	4233717	Symbol	name		4233687						
ANR	4233718	Symbol	iExitCode		4233687						
ANR	4233719	DeclStmt									
ANR	4233720	Decl							void	void ( )	doDBconfig
ANR	4233721	DeclStmt									
ANR	4233722	Decl							void	void ( char * JobHistoryFileName )	readHistoryFromFile
ANR	4233723	DeclStmt									
ANR	4233724	Decl							MyString	"MyString ( const char * write_passwd_fname , const char * host , const char * port , const char * db , const char * dbuser )"	getWritePassword
ANR	4233725	DeclStmt									
ANR	4233726	Decl							JobQueueDatabase	JobQueueDatabase *	DBObj
ANR	4233727	DeclStmt									
ANR	4233728	Decl							dbtype	dbtype	dt
ANR	4233729	DeclStmt									
ANR	4233730	Decl							char	char *	ScheddName
ANR	4233731	DeclStmt									
ANR	4233732	Decl							int	int	ScheddBirthdate
ANR	4233733	Function	main	83:0:2568:5812							
ANR	4233734	FunctionDef	"main (int argc , char * argv [ ])"		4233733	0					
ANR	4233735	CompoundStatement		85:0:2601:5812	4233733	0					
ANR	4233736	IdentifierDeclStatement	void * * parameters ;	87:2:2606:2623	4233733	0	True				
ANR	4233737	IdentifierDecl	* * parameters		4233733	0					
ANR	4233738	IdentifierDeclType	void * *		4233733	0					
ANR	4233739	Identifier	parameters		4233733	1					
ANR	4233740	IdentifierDeclStatement	char * JobHistoryFileName = NULL ;	89:2:2628:2657	4233733	1	True				
ANR	4233741	IdentifierDecl	* JobHistoryFileName = NULL		4233733	0					
ANR	4233742	IdentifierDeclType	char *		4233733	0					
ANR	4233743	Identifier	JobHistoryFileName		4233733	1					
ANR	4233744	AssignmentExpression	* JobHistoryFileName = NULL		4233733	2		=			
ANR	4233745	Identifier	NULL		4233733	0					
ANR	4233746	Identifier	NULL		4233733	1					
ANR	4233747	IdentifierDeclStatement	int i ;	91:2:2662:2667	4233733	2	True				
ANR	4233748	IdentifierDecl	i		4233733	0					
ANR	4233749	IdentifierDeclType	int		4233733	0					
ANR	4233750	Identifier	i		4233733	1					
ANR	4233751	ExpressionStatement	parameters = ( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )	92:2:2671:2733	4233733	3	True				
ANR	4233752	AssignmentExpression	parameters = ( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )		4233733	0		=			
ANR	4233753	Identifier	parameters		4233733	0					
ANR	4233754	CastExpression	( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )		4233733	1					
ANR	4233755	CastTarget	void * *		4233733	0					
ANR	4233756	CallExpression	malloc ( NUM_PARAMETERS * sizeof ( void * ) )		4233733	1					
ANR	4233757	Callee	malloc		4233733	0					
ANR	4233758	Identifier	malloc		4233733	0					
ANR	4233759	ArgumentList	NUM_PARAMETERS * sizeof ( void * )		4233733	1					
ANR	4233760	Argument	NUM_PARAMETERS * sizeof ( void * )		4233733	0					
ANR	4233761	MultiplicativeExpression	NUM_PARAMETERS * sizeof ( void * )		4233733	0		*			
ANR	4233762	Identifier	NUM_PARAMETERS		4233733	0					
ANR	4233763	SizeofExpression	sizeof ( void * )		4233733	1					
ANR	4233764	Sizeof	sizeof		4233733	0					
ANR	4233765	SizeofOperand	void *		4233733	1					
ANR	4233766	ExpressionStatement	"myDistro -> Init ( argc , argv )"	93:2:2737:2765	4233733	4	True				
ANR	4233767	CallExpression	"myDistro -> Init ( argc , argv )"		4233733	0					
ANR	4233768	Callee	myDistro -> Init		4233733	0					
ANR	4233769	PtrMemberAccess	myDistro -> Init		4233733	0					
ANR	4233770	Identifier	myDistro		4233733	0					
ANR	4233771	Identifier	Init		4233733	1					
ANR	4233772	ArgumentList	argc		4233733	1					
ANR	4233773	Argument	argc		4233733	0					
ANR	4233774	Identifier	argc		4233733	0					
ANR	4233775	Argument	argv		4233733	1					
ANR	4233776	Identifier	argv		4233733	0					
ANR	4233777	ExpressionStatement	config ( )	95:2:2770:2778	4233733	5	True				
ANR	4233778	CallExpression	config ( )		4233733	0					
ANR	4233779	Callee	config		4233733	0					
ANR	4233780	Identifier	config		4233733	0					
ANR	4233781	ArgumentList			4233733	1					
ANR	4233782	ExpressionStatement	Termlog = 1	96:2:2782:2793	4233733	6	True				
ANR	4233783	AssignmentExpression	Termlog = 1		4233733	0		=			
ANR	4233784	Identifier	Termlog		4233733	0					
ANR	4233785	PrimaryExpression	1		4233733	1					
ANR	4233786	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	97:2:2797:2842	4233733	7	True				
ANR	4233787	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		4233733	0					
ANR	4233788	Callee	dprintf_config		4233733	0					
ANR	4233789	Identifier	dprintf_config		4233733	0					
ANR	4233790	ArgumentList	"""TOOL"""		4233733	1					
ANR	4233791	Argument	"""TOOL"""		4233733	0					
ANR	4233792	PrimaryExpression	"""TOOL"""		4233733	0					
ANR	4233793	Argument	get_param_functions ( )		4233733	1					
ANR	4233794	CallExpression	get_param_functions ( )		4233733	0					
ANR	4233795	Callee	get_param_functions		4233733	0					
ANR	4233796	Identifier	get_param_functions		4233733	0					
ANR	4233797	ArgumentList			4233733	1					
ANR	4233798	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4233733	8					
ANR	4233799	ForInit	i = 1 ;	99:6:2851:2854	4233733	0	True				
ANR	4233800	AssignmentExpression	i = 1		4233733	0		=			
ANR	4233801	Identifier	i		4233733	0					
ANR	4233802	PrimaryExpression	1		4233733	1					
ANR	4233803	Condition	i < argc	99:11:2856:2861	4233733	1	True				
ANR	4233804	RelationalExpression	i < argc		4233733	0		<			
ANR	4233805	Identifier	i		4233733	0					
ANR	4233806	Identifier	argc		4233733	1					
ANR	4233807	PostIncDecOperationExpression	i ++	99:19:2864:2866	4233733	2	True				
ANR	4233808	Identifier	i		4233733	0					
ANR	4233809	IncDec	++		4233733	1					
ANR	4233810	CompoundStatement		15:24:267:267	4233733	3					
ANR	4233811	IfStatement	"if ( strcmp ( argv [ i ] , ""-f"" ) == 0 )"		4233733	0					
ANR	4233812	Condition	"strcmp ( argv [ i ] , ""-f"" ) == 0"	101:8:2880:2902	4233733	0	True				
ANR	4233813	EqualityExpression	"strcmp ( argv [ i ] , ""-f"" ) == 0"		4233733	0		==			
ANR	4233814	CallExpression	"strcmp ( argv [ i ] , ""-f"" )"		4233733	0					
ANR	4233815	Callee	strcmp		4233733	0					
ANR	4233816	Identifier	strcmp		4233733	0					
ANR	4233817	ArgumentList	argv [ i ]		4233733	1					
ANR	4233818	Argument	argv [ i ]		4233733	0					
ANR	4233819	ArrayIndexing	argv [ i ]		4233733	0					
ANR	4233820	Identifier	argv		4233733	0					
ANR	4233821	Identifier	i		4233733	1					
ANR	4233822	Argument	"""-f"""		4233733	1					
ANR	4233823	PrimaryExpression	"""-f"""		4233733	0					
ANR	4233824	PrimaryExpression	0		4233733	1					
ANR	4233825	CompoundStatement		17:33:303:303	4233733	1					
ANR	4233826	IfStatement	if ( i + 1 == argc || JobHistoryFileName )		4233733	0					
ANR	4233827	Condition	i + 1 == argc || JobHistoryFileName	102:6:2913:2943	4233733	0	True				
ANR	4233828	OrExpression	i + 1 == argc || JobHistoryFileName		4233733	0		||			
ANR	4233829	EqualityExpression	i + 1 == argc		4233733	0		==			
ANR	4233830	AdditiveExpression	i + 1		4233733	0		+			
ANR	4233831	Identifier	i		4233733	0					
ANR	4233832	PrimaryExpression	1		4233733	1					
ANR	4233833	Identifier	argc		4233733	1					
ANR	4233834	Identifier	JobHistoryFileName		4233733	1					
ANR	4233835	BreakStatement	break ;	102:39:2946:2951	4233733	1	True				
ANR	4233836	ExpressionStatement	i ++	103:2:2955:2958	4233733	1	True				
ANR	4233837	PostIncDecOperationExpression	i ++		4233733	0					
ANR	4233838	Identifier	i		4233733	0					
ANR	4233839	IncDec	++		4233733	1					
ANR	4233840	ExpressionStatement	JobHistoryFileName = argv [ i ]	104:2:2962:2988	4233733	2	True				
ANR	4233841	AssignmentExpression	JobHistoryFileName = argv [ i ]		4233733	0		=			
ANR	4233842	Identifier	JobHistoryFileName		4233733	0					
ANR	4233843	ArrayIndexing	argv [ i ]		4233733	1					
ANR	4233844	Identifier	argv		4233733	0					
ANR	4233845	Identifier	i		4233733	1					
ANR	4233846	ElseStatement	else		4233733	0					
ANR	4233847	IfStatement	"if ( strcmp ( argv [ i ] , ""-help"" ) == 0 )"		4233733	0					
ANR	4233848	Condition	"strcmp ( argv [ i ] , ""-help"" ) == 0"	106:13:3009:3034	4233733	0	True				
ANR	4233849	EqualityExpression	"strcmp ( argv [ i ] , ""-help"" ) == 0"		4233733	0		==			
ANR	4233850	CallExpression	"strcmp ( argv [ i ] , ""-help"" )"		4233733	0					
ANR	4233851	Callee	strcmp		4233733	0					
ANR	4233852	Identifier	strcmp		4233733	0					
ANR	4233853	ArgumentList	argv [ i ]		4233733	1					
ANR	4233854	Argument	argv [ i ]		4233733	0					
ANR	4233855	ArrayIndexing	argv [ i ]		4233733	0					
ANR	4233856	Identifier	argv		4233733	0					
ANR	4233857	Identifier	i		4233733	1					
ANR	4233858	Argument	"""-help"""		4233733	1					
ANR	4233859	PrimaryExpression	"""-help"""		4233733	0					
ANR	4233860	PrimaryExpression	0		4233733	1					
ANR	4233861	CompoundStatement		22:41:435:435	4233733	1					
ANR	4233862	ExpressionStatement	"Usage ( argv [ 0 ] , 0 )"	107:2:3041:3057	4233733	0	True				
ANR	4233863	CallExpression	"Usage ( argv [ 0 ] , 0 )"		4233733	0					
ANR	4233864	Callee	Usage		4233733	0					
ANR	4233865	Identifier	Usage		4233733	0					
ANR	4233866	ArgumentList	argv [ 0 ]		4233733	1					
ANR	4233867	Argument	argv [ 0 ]		4233733	0					
ANR	4233868	ArrayIndexing	argv [ 0 ]		4233733	0					
ANR	4233869	Identifier	argv		4233733	0					
ANR	4233870	PrimaryExpression	0		4233733	1					
ANR	4233871	Argument	0		4233733	1					
ANR	4233872	PrimaryExpression	0		4233733	0					
ANR	4233873	ElseStatement	else		4233733	0					
ANR	4233874	IfStatement	"if ( strcmp ( argv [ i ] , ""-name"" ) == 0 )"		4233733	0					
ANR	4233875	Condition	"strcmp ( argv [ i ] , ""-name"" ) == 0"	109:13:3078:3103	4233733	0	True				
ANR	4233876	EqualityExpression	"strcmp ( argv [ i ] , ""-name"" ) == 0"		4233733	0		==			
ANR	4233877	CallExpression	"strcmp ( argv [ i ] , ""-name"" )"		4233733	0					
ANR	4233878	Callee	strcmp		4233733	0					
ANR	4233879	Identifier	strcmp		4233733	0					
ANR	4233880	ArgumentList	argv [ i ]		4233733	1					
ANR	4233881	Argument	argv [ i ]		4233733	0					
ANR	4233882	ArrayIndexing	argv [ i ]		4233733	0					
ANR	4233883	Identifier	argv		4233733	0					
ANR	4233884	Identifier	i		4233733	1					
ANR	4233885	Argument	"""-name"""		4233733	1					
ANR	4233886	PrimaryExpression	"""-name"""		4233733	0					
ANR	4233887	PrimaryExpression	0		4233733	1					
ANR	4233888	CompoundStatement		25:41:504:504	4233733	1					
ANR	4233889	IfStatement	if ( i + 1 == argc || ScheddName )		4233733	0					
ANR	4233890	Condition	i + 1 == argc || ScheddName	110:6:3114:3136	4233733	0	True				
ANR	4233891	OrExpression	i + 1 == argc || ScheddName		4233733	0		||			
ANR	4233892	EqualityExpression	i + 1 == argc		4233733	0		==			
ANR	4233893	AdditiveExpression	i + 1		4233733	0		+			
ANR	4233894	Identifier	i		4233733	0					
ANR	4233895	PrimaryExpression	1		4233733	1					
ANR	4233896	Identifier	argc		4233733	1					
ANR	4233897	Identifier	ScheddName		4233733	1					
ANR	4233898	BreakStatement	break ;	110:31:3139:3144	4233733	1	True				
ANR	4233899	ExpressionStatement	i ++	111:2:3148:3151	4233733	1	True				
ANR	4233900	PostIncDecOperationExpression	i ++		4233733	0					
ANR	4233901	Identifier	i		4233733	0					
ANR	4233902	IncDec	++		4233733	1					
ANR	4233903	ExpressionStatement	ScheddName = strdup ( argv [ i ] )	112:2:3155:3181	4233733	2	True				
ANR	4233904	AssignmentExpression	ScheddName = strdup ( argv [ i ] )		4233733	0		=			
ANR	4233905	Identifier	ScheddName		4233733	0					
ANR	4233906	CallExpression	strdup ( argv [ i ] )		4233733	1					
ANR	4233907	Callee	strdup		4233733	0					
ANR	4233908	Identifier	strdup		4233733	0					
ANR	4233909	ArgumentList	argv [ i ]		4233733	1					
ANR	4233910	Argument	argv [ i ]		4233733	0					
ANR	4233911	ArrayIndexing	argv [ i ]		4233733	0					
ANR	4233912	Identifier	argv		4233733	0					
ANR	4233913	Identifier	i		4233733	1					
ANR	4233914	IfStatement	if ( ( i + 1 == argc ) || ScheddBirthdate )		4233733	3					
ANR	4233915	Condition	( i + 1 == argc ) || ScheddBirthdate	113:12:3195:3224	4233733	0	True				
ANR	4233916	OrExpression	( i + 1 == argc ) || ScheddBirthdate		4233733	0		||			
ANR	4233917	EqualityExpression	i + 1 == argc		4233733	0		==			
ANR	4233918	AdditiveExpression	i + 1		4233733	0		+			
ANR	4233919	Identifier	i		4233733	0					
ANR	4233920	PrimaryExpression	1		4233733	1					
ANR	4233921	Identifier	argc		4233733	1					
ANR	4233922	Identifier	ScheddBirthdate		4233733	1					
ANR	4233923	BreakStatement	break ;	113:44:3227:3232	4233733	1	True				
ANR	4233924	ExpressionStatement	i ++	114:8:3242:3245	4233733	4	True				
ANR	4233925	PostIncDecOperationExpression	i ++		4233733	0					
ANR	4233926	Identifier	i		4233733	0					
ANR	4233927	IncDec	++		4233733	1					
ANR	4233928	ExpressionStatement	ScheddBirthdate = atoi ( argv [ i ] )	115:8:3255:3286	4233733	5	True				
ANR	4233929	AssignmentExpression	ScheddBirthdate = atoi ( argv [ i ] )		4233733	0		=			
ANR	4233930	Identifier	ScheddBirthdate		4233733	0					
ANR	4233931	CallExpression	atoi ( argv [ i ] )		4233733	1					
ANR	4233932	Callee	atoi		4233733	0					
ANR	4233933	Identifier	atoi		4233733	0					
ANR	4233934	ArgumentList	argv [ i ]		4233733	1					
ANR	4233935	Argument	argv [ i ]		4233733	0					
ANR	4233936	ArrayIndexing	argv [ i ]		4233733	0					
ANR	4233937	Identifier	argv		4233733	0					
ANR	4233938	Identifier	i		4233733	1					
ANR	4233939	ElseStatement	else		4233733	0					
ANR	4233940	CompoundStatement		38:9:811:811	4233733	0					
ANR	4233941	ExpressionStatement	Usage ( argv [ 0 ] )	123:2:3417:3431	4233733	0	True				
ANR	4233942	CallExpression	Usage ( argv [ 0 ] )		4233733	0					
ANR	4233943	Callee	Usage		4233733	0					
ANR	4233944	Identifier	Usage		4233733	0					
ANR	4233945	ArgumentList	argv [ 0 ]		4233733	1					
ANR	4233946	Argument	argv [ 0 ]		4233733	0					
ANR	4233947	ArrayIndexing	argv [ 0 ]		4233733	0					
ANR	4233948	Identifier	argv		4233733	0					
ANR	4233949	PrimaryExpression	0		4233733	1					
ANR	4233950	IfStatement	if ( i < argc )		4233733	9					
ANR	4233951	Condition	i < argc	126:6:3449:3454	4233733	0	True				
ANR	4233952	RelationalExpression	i < argc		4233733	0		<			
ANR	4233953	Identifier	i		4233733	0					
ANR	4233954	Identifier	argc		4233733	1					
ANR	4233955	ExpressionStatement	Usage ( argv [ 0 ] )	126:14:3457:3471	4233733	1	True				
ANR	4233956	CallExpression	Usage ( argv [ 0 ] )		4233733	0					
ANR	4233957	Callee	Usage		4233733	0					
ANR	4233958	Identifier	Usage		4233733	0					
ANR	4233959	ArgumentList	argv [ 0 ]		4233733	1					
ANR	4233960	Argument	argv [ 0 ]		4233733	0					
ANR	4233961	ArrayIndexing	argv [ 0 ]		4233733	0					
ANR	4233962	Identifier	argv		4233733	0					
ANR	4233963	PrimaryExpression	0		4233733	1					
ANR	4233964	IfStatement	if ( JobHistoryFileName == NULL )		4233733	10					
ANR	4233965	Condition	JobHistoryFileName == NULL	128:6:3480:3505	4233733	0	True				
ANR	4233966	EqualityExpression	JobHistoryFileName == NULL		4233733	0		==			
ANR	4233967	Identifier	JobHistoryFileName		4233733	0					
ANR	4233968	Identifier	NULL		4233733	1					
ANR	4233969	ExpressionStatement	Usage ( argv [ 0 ] )	129:3:3512:3526	4233733	1	True				
ANR	4233970	CallExpression	Usage ( argv [ 0 ] )		4233733	0					
ANR	4233971	Callee	Usage		4233733	0					
ANR	4233972	Identifier	Usage		4233733	0					
ANR	4233973	ArgumentList	argv [ 0 ]		4233733	1					
ANR	4233974	Argument	argv [ 0 ]		4233733	0					
ANR	4233975	ArrayIndexing	argv [ 0 ]		4233733	0					
ANR	4233976	Identifier	argv		4233733	0					
ANR	4233977	PrimaryExpression	0		4233733	1					
ANR	4233978	IfStatement	if ( ( ScheddName == NULL ) || ( ScheddBirthdate == 0 ) )		4233733	11					
ANR	4233979	Condition	( ScheddName == NULL ) || ( ScheddBirthdate == 0 )	131:6:3535:3580	4233733	0	True				
ANR	4233980	OrExpression	( ScheddName == NULL ) || ( ScheddBirthdate == 0 )		4233733	0		||			
ANR	4233981	EqualityExpression	ScheddName == NULL		4233733	0		==			
ANR	4233982	Identifier	ScheddName		4233733	0					
ANR	4233983	Identifier	NULL		4233733	1					
ANR	4233984	EqualityExpression	ScheddBirthdate == 0		4233733	1		==			
ANR	4233985	Identifier	ScheddBirthdate		4233733	0					
ANR	4233986	PrimaryExpression	0		4233733	1					
ANR	4233987	CompoundStatement		53:4:1161:1193	4233733	1					
ANR	4233988	IfStatement	if ( ScheddName )		4233733	0					
ANR	4233989	Condition	ScheddName	133:8:3594:3603	4233733	0	True				
ANR	4233990	Identifier	ScheddName		4233733	0					
ANR	4233991	Statement	fprintf	134:8:3615:3621	4233733	1	True				
ANR	4233992	Statement	(	134:15:3622:3622	4233733	1	True				
ANR	4233993	Statement	stdout	134:16:3623:3628	4233733	2	True				
ANR	4233994	Statement	","	134:22:3629:3629	4233733	3	True				
ANR	4233995	Statement	"""You specified Schedd name without a Job Queue"""	134:24:3631:3677	4233733	4	True				
ANR	4233996	Statement	"""Birthdate. Ignoring value %s\\n"""	135:24:3703:3734	4233733	5	True				
ANR	4233997	Statement	","	135:56:3735:3735	4233733	6	True				
ANR	4233998	Statement	ScheddName	135:58:3737:3746	4233733	7	True				
ANR	4233999	Statement	)	135:68:3747:3747	4233733	8	True				
ANR	4234000	ExpressionStatement		135:69:3748:3748	4233733	9	True				
ANR	4234001	IdentifierDeclStatement	"Daemon schedd ( DT_SCHEDD , 0 , 0 ) ;"	137:4:3763:3795	4233733	10	True				
ANR	4234002	IdentifierDecl	"schedd ( DT_SCHEDD , 0 , 0 )"		4233733	0					
ANR	4234003	IdentifierDeclType	Daemon		4233733	0					
ANR	4234004	Identifier	schedd		4233733	1					
ANR	4234005	Expression	"DT_SCHEDD , 0 , 0"		4233733	2					
ANR	4234006	Identifier	DT_SCHEDD		4233733	0					
ANR	4234007	Expression	"0 , 0"		4233733	1					
ANR	4234008	PrimaryExpression	0		4233733	0					
ANR	4234009	PrimaryExpression	0		4233733	1					
ANR	4234010	IfStatement	if ( schedd . locate ( ) )		4233733	11					
ANR	4234011	Condition	schedd . locate ( )	139:9:3807:3821	4233733	0	True				
ANR	4234012	CallExpression	schedd . locate ( )		4233733	0					
ANR	4234013	Callee	schedd . locate		4233733	0					
ANR	4234014	MemberAccess	schedd . locate		4233733	0					
ANR	4234015	Identifier	schedd		4233733	0					
ANR	4234016	Identifier	locate		4233733	1					
ANR	4234017	ArgumentList			4233733	1					
ANR	4234018	CompoundStatement		69:8:1886:1923	4233733	1					
ANR	4234019	IdentifierDeclStatement	char * scheddname ;	140:8:3835:3851	4233733	0	True				
ANR	4234020	IdentifierDecl	* scheddname		4233733	0					
ANR	4234021	IdentifierDeclType	char *		4233733	0					
ANR	4234022	Identifier	scheddname		4233733	1					
ANR	4234023	IfStatement	if ( ( scheddname = schedd . name ( ) ) )		4233733	1					
ANR	4234024	Condition	scheddname = schedd . name ( )	141:12:3866:3893	4233733	0	True				
ANR	4234025	AssignmentExpression	scheddname = schedd . name ( )		4233733	0		=			
ANR	4234026	Identifier	scheddname		4233733	0					
ANR	4234027	CallExpression	schedd . name ( )		4233733	1					
ANR	4234028	Callee	schedd . name		4233733	0					
ANR	4234029	MemberAccess	schedd . name		4233733	0					
ANR	4234030	Identifier	schedd		4233733	0					
ANR	4234031	Identifier	name		4233733	1					
ANR	4234032	ArgumentList			4233733	1					
ANR	4234033	CompoundStatement		57:43:1295:1295	4233733	1					
ANR	4234034	ExpressionStatement	ScheddName = strdup ( scheddname )	142:12:3911:3942	4233733	0	True				
ANR	4234035	AssignmentExpression	ScheddName = strdup ( scheddname )		4233733	0		=			
ANR	4234036	Identifier	ScheddName		4233733	0					
ANR	4234037	CallExpression	strdup ( scheddname )		4233733	1					
ANR	4234038	Callee	strdup		4233733	0					
ANR	4234039	Identifier	strdup		4233733	0					
ANR	4234040	ArgumentList	scheddname		4233733	1					
ANR	4234041	Argument	scheddname		4233733	0					
ANR	4234042	Identifier	scheddname		4233733	0					
ANR	4234043	ElseStatement	else		4233733	0					
ANR	4234044	CompoundStatement		59:15:1357:1357	4233733	0					
ANR	4234045	Statement	fprintf	144:12:3973:3979	4233733	0	True				
ANR	4234046	Statement	(	144:19:3980:3980	4233733	1	True				
ANR	4234047	Statement	stderr	144:20:3981:3986	4233733	2	True				
ANR	4234048	Statement	","	144:26:3987:3987	4233733	3	True				
ANR	4234049	Statement	"""You did not specify a Schedd name and Job Queue """	144:28:3989:4038	4233733	4	True				
ANR	4234050	Statement	"""Birthdate on the command line """	145:27:4067:4098	4233733	5	True				
ANR	4234051	Statement	"""and there was an error getting the Schedd """	146:27:4127:4170	4233733	6	True				
ANR	4234052	Statement	"""name from the local Schedd Daemon Ad. Please """	147:27:4199:4245	4233733	7	True				
ANR	4234053	Statement	"""check that the SCHEDD_DAEMON_AD_FILE config """	148:27:4274:4319	4233733	8	True				
ANR	4234054	Statement	"""parameter is set and the file contains a valid """	149:27:4348:4396	4233733	9	True				
ANR	4234055	Statement	"""Schedd Daemon ad.\\n"""	150:27:4425:4445	4233733	10	True				
ANR	4234056	Statement	)	150:48:4446:4446	4233733	11	True				
ANR	4234057	ExpressionStatement		150:49:4447:4447	4233733	12	True				
ANR	4234058	ExpressionStatement	exit ( 1 )	151:12:4461:4468	4233733	13	True				
ANR	4234059	CallExpression	exit ( 1 )		4233733	0					
ANR	4234060	Callee	exit		4233733	0					
ANR	4234061	Identifier	exit		4233733	0					
ANR	4234062	ArgumentList	1		4233733	1					
ANR	4234063	Argument	1		4233733	0					
ANR	4234064	PrimaryExpression	1		4233733	0					
ANR	4234065	IdentifierDeclStatement	ClassAd * daemonAd = schedd . daemonAd ( ) ;	153:8:4488:4525	4233733	2	True				
ANR	4234066	IdentifierDecl	* daemonAd = schedd . daemonAd ( )		4233733	0					
ANR	4234067	IdentifierDeclType	ClassAd *		4233733	0					
ANR	4234068	Identifier	daemonAd		4233733	1					
ANR	4234069	AssignmentExpression	* daemonAd = schedd . daemonAd ( )		4233733	2		=			
ANR	4234070	Identifier	daemonAd		4233733	0					
ANR	4234071	CallExpression	schedd . daemonAd ( )		4233733	1					
ANR	4234072	Callee	schedd . daemonAd		4233733	0					
ANR	4234073	MemberAccess	schedd . daemonAd		4233733	0					
ANR	4234074	Identifier	schedd		4233733	0					
ANR	4234075	Identifier	daemonAd		4233733	1					
ANR	4234076	ArgumentList			4233733	1					
ANR	4234077	IfStatement	if ( daemonAd )		4233733	3					
ANR	4234078	Condition	daemonAd	154:11:4538:4545	4233733	0	True				
ANR	4234079	Identifier	daemonAd		4233733	0					
ANR	4234080	CompoundStatement		70:21:1946:1946	4233733	1					
ANR	4234081	IfStatement	"if ( ! ( daemonAd -> LookupInteger ( ATTR_JOB_QUEUE_BIRTHDATE , ScheddBirthdate ) ) )"		4233733	0					
ANR	4234082	Condition	"! ( daemonAd -> LookupInteger ( ATTR_JOB_QUEUE_BIRTHDATE , ScheddBirthdate ) )"	155:16:4566:4661	4233733	0	True				
ANR	4234083	UnaryOperationExpression	"! ( daemonAd -> LookupInteger ( ATTR_JOB_QUEUE_BIRTHDATE , ScheddBirthdate ) )"		4233733	0					
ANR	4234084	UnaryOperator	!		4233733	0					
ANR	4234085	CallExpression	"daemonAd -> LookupInteger ( ATTR_JOB_QUEUE_BIRTHDATE , ScheddBirthdate )"		4233733	1					
ANR	4234086	Callee	daemonAd -> LookupInteger		4233733	0					
ANR	4234087	PtrMemberAccess	daemonAd -> LookupInteger		4233733	0					
ANR	4234088	Identifier	daemonAd		4233733	0					
ANR	4234089	Identifier	LookupInteger		4233733	1					
ANR	4234090	ArgumentList	ATTR_JOB_QUEUE_BIRTHDATE		4233733	1					
ANR	4234091	Argument	ATTR_JOB_QUEUE_BIRTHDATE		4233733	0					
ANR	4234092	Identifier	ATTR_JOB_QUEUE_BIRTHDATE		4233733	0					
ANR	4234093	Argument	ScheddBirthdate		4233733	1					
ANR	4234094	Identifier	ScheddBirthdate		4233733	0					
ANR	4234095	CompoundStatement		72:44:2062:2062	4233733	1					
ANR	4234096	Statement	fprintf	158:16:4736:4742	4233733	0	True				
ANR	4234097	Statement	(	158:23:4743:4743	4233733	1	True				
ANR	4234098	Statement	stderr	158:24:4744:4749	4233733	2	True				
ANR	4234099	Statement	","	158:30:4750:4750	4233733	3	True				
ANR	4234100	Statement	"""You did not specify a Schedd name and """	158:32:4752:4791	4233733	4	True				
ANR	4234101	Statement	"""Job Queue Birthdate on the command line """	159:27:4820:4861	4233733	5	True				
ANR	4234102	Statement	"""and there was an error getting the Job Queue """	160:27:4890:4936	4233733	6	True				
ANR	4234103	Statement	"""Birthdate from the local Schedd Daemon Ad. Please """	161:27:4965:5016	4233733	7	True				
ANR	4234104	Statement	"""check that the SCHEDD_DAEMON_AD_FILE config """	162:27:5045:5090	4233733	8	True				
ANR	4234105	Statement	"""parameter is set and the file contains a valid """	163:27:5119:5167	4233733	9	True				
ANR	4234106	Statement	"""Schedd Daemon ad.\\n"""	164:27:5196:5216	4233733	10	True				
ANR	4234107	Statement	)	164:48:5217:5217	4233733	11	True				
ANR	4234108	ExpressionStatement		164:49:5218:5218	4233733	12	True				
ANR	4234109	ExpressionStatement	exit ( 1 )	165:16:5236:5243	4233733	13	True				
ANR	4234110	CallExpression	exit ( 1 )		4233733	0					
ANR	4234111	Callee	exit		4233733	0					
ANR	4234112	Identifier	exit		4233733	0					
ANR	4234113	ArgumentList	1		4233733	1					
ANR	4234114	Argument	1		4233733	0					
ANR	4234115	PrimaryExpression	1		4233733	0					
ANR	4234116	ElseStatement	else		4233733	0					
ANR	4234117	CompoundStatement		84:11:2678:2678	4233733	0					
ANR	4234118	Statement	fprintf	170:2:5285:5291	4233733	0	True				
ANR	4234119	Statement	(	170:9:5292:5292	4233733	1	True				
ANR	4234120	Statement	stderr	170:10:5293:5298	4233733	2	True				
ANR	4234121	Statement	","	170:16:5299:5299	4233733	3	True				
ANR	4234122	Statement	"""You did not specify a Schedd name and Job Queue """	170:18:5301:5350	4233733	4	True				
ANR	4234123	Statement	"""Birthdate on the command line and there was """	171:12:5364:5409	4233733	5	True				
ANR	4234124	Statement	"""an error getting the Schedd Daemon Ad. Please """	172:12:5423:5470	4233733	6	True				
ANR	4234125	Statement	"""check that Condor is running and the SCHEDD_DAEMON_AD_FILE """	173:12:5484:5544	4233733	7	True				
ANR	4234126	Statement	"""config parameter is set and the file contains a valid """	174:12:5558:5613	4233733	8	True				
ANR	4234127	Statement	"""Schedd Daemon ad.\\n"""	175:12:5627:5647	4233733	9	True				
ANR	4234128	Statement	)	175:33:5648:5648	4233733	10	True				
ANR	4234129	ExpressionStatement		175:34:5649:5649	4233733	11	True				
ANR	4234130	ExpressionStatement	exit ( 1 )	176:2:5653:5660	4233733	12	True				
ANR	4234131	CallExpression	exit ( 1 )		4233733	0					
ANR	4234132	Callee	exit		4233733	0					
ANR	4234133	Identifier	exit		4233733	0					
ANR	4234134	ArgumentList	1		4233733	1					
ANR	4234135	Argument	1		4233733	0					
ANR	4234136	PrimaryExpression	1		4233733	0					
ANR	4234137	ExpressionStatement	doDBconfig ( )	180:2:5672:5684	4233733	12	True				
ANR	4234138	CallExpression	doDBconfig ( )		4233733	0					
ANR	4234139	Callee	doDBconfig		4233733	0					
ANR	4234140	Identifier	doDBconfig		4233733	0					
ANR	4234141	ArgumentList			4233733	1					
ANR	4234142	ExpressionStatement	readHistoryFromFile ( JobHistoryFileName )	181:2:5688:5727	4233733	13	True				
ANR	4234143	CallExpression	readHistoryFromFile ( JobHistoryFileName )		4233733	0					
ANR	4234144	Callee	readHistoryFromFile		4233733	0					
ANR	4234145	Identifier	readHistoryFromFile		4233733	0					
ANR	4234146	ArgumentList	JobHistoryFileName		4233733	1					
ANR	4234147	Argument	JobHistoryFileName		4233733	0					
ANR	4234148	Identifier	JobHistoryFileName		4233733	0					
ANR	4234149	IfStatement	if ( parameters )		4233733	14					
ANR	4234150	Condition	parameters	183:5:5735:5744	4233733	0	True				
ANR	4234151	Identifier	parameters		4233733	0					
ANR	4234152	ExpressionStatement	free ( parameters )	183:17:5747:5763	4233733	1	True				
ANR	4234153	CallExpression	free ( parameters )		4233733	0					
ANR	4234154	Callee	free		4233733	0					
ANR	4234155	Identifier	free		4233733	0					
ANR	4234156	ArgumentList	parameters		4233733	1					
ANR	4234157	Argument	parameters		4233733	0					
ANR	4234158	Identifier	parameters		4233733	0					
ANR	4234159	IfStatement	if ( ScheddName )		4233733	15					
ANR	4234160	Condition	ScheddName	184:5:5770:5779	4233733	0	True				
ANR	4234161	Identifier	ScheddName		4233733	0					
ANR	4234162	ExpressionStatement	free ( ScheddName )	184:17:5782:5798	4233733	1	True				
ANR	4234163	CallExpression	free ( ScheddName )		4233733	0					
ANR	4234164	Callee	free		4233733	0					
ANR	4234165	Identifier	free		4233733	0					
ANR	4234166	ArgumentList	ScheddName		4233733	1					
ANR	4234167	Argument	ScheddName		4233733	0					
ANR	4234168	Identifier	ScheddName		4233733	0					
ANR	4234169	ReturnStatement	return 0 ;	185:2:5802:5810	4233733	16	True				
ANR	4234170	PrimaryExpression	0		4233733	0					
ANR	4234171	ReturnType	int		4233733	1					
ANR	4234172	Identifier	main		4233733	2					
ANR	4234173	ParameterList	"int argc , char * argv [ ]"		4233733	3					
ANR	4234174	Parameter	int argc	84:5:2577:2584	4233733	0	True				
ANR	4234175	ParameterType	int		4233733	0					
ANR	4234176	Identifier	argc		4233733	1					
ANR	4234177	Parameter	char * argv [ ]	84:15:2587:2598	4233733	1	True				
ANR	4234178	ParameterType	char * [ ]		4233733	0					
ANR	4234179	Identifier	argv		4233733	1					
ANR	4234180	CFGEntryNode	ENTRY		4233733		True				
ANR	4234181	CFGExitNode	EXIT		4233733		True				
ANR	4234182	Symbol	NUM_PARAMETERS		4233733						
ANR	4234183	Symbol	scheddname		4233733						
ANR	4234184	Symbol	* argv		4233733						
ANR	4234185	Symbol	argv		4233733						
ANR	4234186	Symbol	JobHistoryFileName		4233733						
ANR	4234187	Symbol	myDistro		4233733						
ANR	4234188	Symbol	ATTR_JOB_QUEUE_BIRTHDATE		4233733						
ANR	4234189	Symbol	daemonAd -> LookupInteger		4233733						
ANR	4234190	Symbol	argc		4233733						
ANR	4234191	Symbol	strcmp		4233733						
ANR	4234192	Symbol	ScheddBirthdate		4233733						
ANR	4234193	Symbol	atoi		4233733						
ANR	4234194	Symbol	malloc		4233733						
ANR	4234195	Symbol	NULL		4233733						
ANR	4234196	Symbol	* daemonAd		4233733						
ANR	4234197	Symbol	Termlog		4233733						
ANR	4234198	Symbol	get_param_functions		4233733						
ANR	4234199	Symbol	schedd . daemonAd		4233733						
ANR	4234200	Symbol	i		4233733						
ANR	4234201	Symbol	schedd		4233733						
ANR	4234202	Symbol	schedd . name		4233733						
ANR	4234203	Symbol	* i		4233733						
ANR	4234204	Symbol	ScheddName		4233733						
ANR	4234205	Symbol	daemonAd		4233733						
ANR	4234206	Symbol	schedd . locate		4233733						
ANR	4234207	Symbol	strdup		4233733						
ANR	4234208	Symbol	parameters		4233733						
ANR	4234209	Function	doDBconfig	191:0:5892:9455							
ANR	4234210	FunctionDef	doDBconfig ()		4234209	0					
ANR	4234211	CompoundStatement		191:25:5917:9455	4234209	0					
ANR	4234212	IdentifierDeclStatement	"char * tmp , * host = NULL , * port = NULL , * DBIpAddress = NULL , * DBName = NULL , * DBUser = NULL ;"	193:1:5921:6005	4234209	0	True				
ANR	4234213	IdentifierDecl	* tmp		4234209	0					
ANR	4234214	IdentifierDeclType	char *		4234209	0					
ANR	4234215	Identifier	tmp		4234209	1					
ANR	4234216	IdentifierDecl	* host = NULL		4234209	1					
ANR	4234217	IdentifierDeclType	char *		4234209	0					
ANR	4234218	Identifier	host		4234209	1					
ANR	4234219	AssignmentExpression	* host = NULL		4234209	2		=			
ANR	4234220	Identifier	NULL		4234209	0					
ANR	4234221	Identifier	NULL		4234209	1					
ANR	4234222	IdentifierDecl	* port = NULL		4234209	2					
ANR	4234223	IdentifierDeclType	char *		4234209	0					
ANR	4234224	Identifier	port		4234209	1					
ANR	4234225	AssignmentExpression	* port = NULL		4234209	2		=			
ANR	4234226	Identifier	NULL		4234209	0					
ANR	4234227	Identifier	NULL		4234209	1					
ANR	4234228	IdentifierDecl	* DBIpAddress = NULL		4234209	3					
ANR	4234229	IdentifierDeclType	char *		4234209	0					
ANR	4234230	Identifier	DBIpAddress		4234209	1					
ANR	4234231	AssignmentExpression	* DBIpAddress = NULL		4234209	2		=			
ANR	4234232	Identifier	NULL		4234209	0					
ANR	4234233	Identifier	NULL		4234209	1					
ANR	4234234	IdentifierDecl	* DBName = NULL		4234209	4					
ANR	4234235	IdentifierDeclType	char *		4234209	0					
ANR	4234236	Identifier	DBName		4234209	1					
ANR	4234237	AssignmentExpression	* DBName = NULL		4234209	2		=			
ANR	4234238	Identifier	NULL		4234209	0					
ANR	4234239	Identifier	NULL		4234209	1					
ANR	4234240	IdentifierDecl	* DBUser = NULL		4234209	5					
ANR	4234241	IdentifierDeclType	char *		4234209	0					
ANR	4234242	Identifier	DBUser		4234209	1					
ANR	4234243	AssignmentExpression	* DBUser = NULL		4234209	2		=			
ANR	4234244	Identifier	NULL		4234209	0					
ANR	4234245	Identifier	NULL		4234209	1					
ANR	4234246	IdentifierDeclStatement	int len ;	194:1:6008:6015	4234209	1	True				
ANR	4234247	IdentifierDecl	len		4234209	0					
ANR	4234248	IdentifierDeclType	int		4234209	0					
ANR	4234249	Identifier	len		4234209	1					
ANR	4234250	IfStatement	"if ( param_boolean ( ""QUILL_ENABLED"" , false ) == false )"		4234209	2					
ANR	4234251	Condition	"param_boolean ( ""QUILL_ENABLED"" , false ) == false"	196:5:6023:6068	4234209	0	True				
ANR	4234252	EqualityExpression	"param_boolean ( ""QUILL_ENABLED"" , false ) == false"		4234209	0		==			
ANR	4234253	CallExpression	"param_boolean ( ""QUILL_ENABLED"" , false )"		4234209	0					
ANR	4234254	Callee	param_boolean		4234209	0					
ANR	4234255	Identifier	param_boolean		4234209	0					
ANR	4234256	ArgumentList	"""QUILL_ENABLED"""		4234209	1					
ANR	4234257	Argument	"""QUILL_ENABLED"""		4234209	0					
ANR	4234258	PrimaryExpression	"""QUILL_ENABLED"""		4234209	0					
ANR	4234259	Argument	false		4234209	1					
ANR	4234260	Identifier	false		4234209	0					
ANR	4234261	Identifier	false		4234209	1					
ANR	4234262	CompoundStatement		6:53:153:153	4234209	1					
ANR	4234263	Statement	EXCEPT	197:2:6075:6080	4234209	0	True				
ANR	4234264	Statement	(	197:8:6081:6081	4234209	1	True				
ANR	4234265	Statement	"""Quill++ is currently disabled. Please set QUILL_ENABLED to """	197:9:6082:6142	4234209	2	True				
ANR	4234266	Statement	"""TRUE if you want this functionality and read the manual """	198:6:6150:6207	4234209	3	True				
ANR	4234267	Statement	"""about this feature since it requires other attributes to be """	199:6:6215:6276	4234209	4	True				
ANR	4234268	Statement	"""set properly."""	200:6:6284:6298	4234209	5	True				
ANR	4234269	Statement	)	200:21:6299:6299	4234209	6	True				
ANR	4234270	ExpressionStatement		200:22:6300:6300	4234209	7	True				
ANR	4234271	IdentifierDeclStatement	"char * spool = param ( ""SPOOL"" ) ;"	205:1:6419:6447	4234209	3	True				
ANR	4234272	IdentifierDecl	"* spool = param ( ""SPOOL"" )"		4234209	0					
ANR	4234273	IdentifierDeclType	char *		4234209	0					
ANR	4234274	Identifier	spool		4234209	1					
ANR	4234275	AssignmentExpression	"* spool = param ( ""SPOOL"" )"		4234209	2		=			
ANR	4234276	Identifier	spool		4234209	0					
ANR	4234277	CallExpression	"param ( ""SPOOL"" )"		4234209	1					
ANR	4234278	Callee	param		4234209	0					
ANR	4234279	Identifier	param		4234209	0					
ANR	4234280	ArgumentList	"""SPOOL"""		4234209	1					
ANR	4234281	Argument	"""SPOOL"""		4234209	0					
ANR	4234282	PrimaryExpression	"""SPOOL"""		4234209	0					
ANR	4234283	IfStatement	if ( ! spool )		4234209	4					
ANR	4234284	Condition	! spool	206:4:6453:6458	4234209	0	True				
ANR	4234285	UnaryOperationExpression	! spool		4234209	0					
ANR	4234286	UnaryOperator	!		4234209	0					
ANR	4234287	Identifier	spool		4234209	1					
ANR	4234288	CompoundStatement		16:12:543:543	4234209	1					
ANR	4234289	ExpressionStatement	"EXCEPT ( ""No SPOOL variable found in config file\\n"" )"	207:2:6465:6515	4234209	0	True				
ANR	4234290	CallExpression	"EXCEPT ( ""No SPOOL variable found in config file\\n"" )"		4234209	0					
ANR	4234291	Callee	EXCEPT		4234209	0					
ANR	4234292	Identifier	EXCEPT		4234209	0					
ANR	4234293	ArgumentList	"""No SPOOL variable found in config file\\n"""		4234209	1					
ANR	4234294	Argument	"""No SPOOL variable found in config file\\n"""		4234209	0					
ANR	4234295	PrimaryExpression	"""No SPOOL variable found in config file\\n"""		4234209	0					
ANR	4234296	ExpressionStatement	"tmp = param ( ""QUILL_DB_TYPE"" )"	210:1:6524:6552	4234209	5	True				
ANR	4234297	AssignmentExpression	"tmp = param ( ""QUILL_DB_TYPE"" )"		4234209	0		=			
ANR	4234298	Identifier	tmp		4234209	0					
ANR	4234299	CallExpression	"param ( ""QUILL_DB_TYPE"" )"		4234209	1					
ANR	4234300	Callee	param		4234209	0					
ANR	4234301	Identifier	param		4234209	0					
ANR	4234302	ArgumentList	"""QUILL_DB_TYPE"""		4234209	1					
ANR	4234303	Argument	"""QUILL_DB_TYPE"""		4234209	0					
ANR	4234304	PrimaryExpression	"""QUILL_DB_TYPE"""		4234209	0					
ANR	4234305	IfStatement	if ( tmp )		4234209	6					
ANR	4234306	Condition	tmp	211:5:6559:6561	4234209	0	True				
ANR	4234307	Identifier	tmp		4234209	0					
ANR	4234308	CompoundStatement		21:10:646:646	4234209	1					
ANR	4234309	IfStatement	"if ( strcasecmp ( tmp , ""PGSQL"" ) == 0 )"		4234209	0					
ANR	4234310	Condition	"strcasecmp ( tmp , ""PGSQL"" ) == 0"	212:6:6572:6600	4234209	0	True				
ANR	4234311	EqualityExpression	"strcasecmp ( tmp , ""PGSQL"" ) == 0"		4234209	0		==			
ANR	4234312	CallExpression	"strcasecmp ( tmp , ""PGSQL"" )"		4234209	0					
ANR	4234313	Callee	strcasecmp		4234209	0					
ANR	4234314	Identifier	strcasecmp		4234209	0					
ANR	4234315	ArgumentList	tmp		4234209	1					
ANR	4234316	Argument	tmp		4234209	0					
ANR	4234317	Identifier	tmp		4234209	0					
ANR	4234318	Argument	"""PGSQL"""		4234209	1					
ANR	4234319	PrimaryExpression	"""PGSQL"""		4234209	0					
ANR	4234320	PrimaryExpression	0		4234209	1					
ANR	4234321	CompoundStatement		22:37:685:685	4234209	1					
ANR	4234322	ExpressionStatement	dt = T_PGSQL	213:3:6608:6620	4234209	0	True				
ANR	4234323	AssignmentExpression	dt = T_PGSQL		4234209	0		=			
ANR	4234324	Identifier	dt		4234209	0					
ANR	4234325	Identifier	T_PGSQL		4234209	1					
ANR	4234326	ExpressionStatement	free ( tmp )	215:2:6628:6637	4234209	1	True				
ANR	4234327	CallExpression	free ( tmp )		4234209	0					
ANR	4234328	Callee	free		4234209	0					
ANR	4234329	Identifier	free		4234209	0					
ANR	4234330	ArgumentList	tmp		4234209	1					
ANR	4234331	Argument	tmp		4234209	0					
ANR	4234332	Identifier	tmp		4234209	0					
ANR	4234333	ElseStatement	else		4234209	0					
ANR	4234334	CompoundStatement		26:8:729:729	4234209	0					
ANR	4234335	ExpressionStatement	dt = T_PGSQL	217:2:6651:6663	4234209	0	True				
ANR	4234336	AssignmentExpression	dt = T_PGSQL		4234209	0		=			
ANR	4234337	Identifier	dt		4234209	0					
ANR	4234338	Identifier	T_PGSQL		4234209	1					
ANR	4234339	ExpressionStatement	"DBIpAddress = param ( ""QUILL_DB_IP_ADDR"" )"	225:1:6887:6926	4234209	7	True				
ANR	4234340	AssignmentExpression	"DBIpAddress = param ( ""QUILL_DB_IP_ADDR"" )"		4234209	0		=			
ANR	4234341	Identifier	DBIpAddress		4234209	0					
ANR	4234342	CallExpression	"param ( ""QUILL_DB_IP_ADDR"" )"		4234209	1					
ANR	4234343	Callee	param		4234209	0					
ANR	4234344	Identifier	param		4234209	0					
ANR	4234345	ArgumentList	"""QUILL_DB_IP_ADDR"""		4234209	1					
ANR	4234346	Argument	"""QUILL_DB_IP_ADDR"""		4234209	0					
ANR	4234347	PrimaryExpression	"""QUILL_DB_IP_ADDR"""		4234209	0					
ANR	4234348	IfStatement	if ( DBIpAddress )		4234209	8					
ANR	4234349	Condition	DBIpAddress	226:4:6932:6942	4234209	0	True				
ANR	4234350	Identifier	DBIpAddress		4234209	0					
ANR	4234351	CompoundStatement		42:2:1216:1258	4234209	1					
ANR	4234352	ExpressionStatement	len = strlen ( DBIpAddress )	227:2:6949:6974	4234209	0	True				
ANR	4234353	AssignmentExpression	len = strlen ( DBIpAddress )		4234209	0		=			
ANR	4234354	Identifier	len		4234209	0					
ANR	4234355	CallExpression	strlen ( DBIpAddress )		4234209	1					
ANR	4234356	Callee	strlen		4234209	0					
ANR	4234357	Identifier	strlen		4234209	0					
ANR	4234358	ArgumentList	DBIpAddress		4234209	1					
ANR	4234359	Argument	DBIpAddress		4234209	0					
ANR	4234360	Identifier	DBIpAddress		4234209	0					
ANR	4234361	ExpressionStatement	host = ( char * ) malloc ( len * sizeof ( char ) )	228:2:6978:7020	4234209	1	True				
ANR	4234362	AssignmentExpression	host = ( char * ) malloc ( len * sizeof ( char ) )		4234209	0		=			
ANR	4234363	Identifier	host		4234209	0					
ANR	4234364	CastExpression	( char * ) malloc ( len * sizeof ( char ) )		4234209	1					
ANR	4234365	CastTarget	char *		4234209	0					
ANR	4234366	CallExpression	malloc ( len * sizeof ( char ) )		4234209	1					
ANR	4234367	Callee	malloc		4234209	0					
ANR	4234368	Identifier	malloc		4234209	0					
ANR	4234369	ArgumentList	len * sizeof ( char )		4234209	1					
ANR	4234370	Argument	len * sizeof ( char )		4234209	0					
ANR	4234371	MultiplicativeExpression	len * sizeof ( char )		4234209	0		*			
ANR	4234372	Identifier	len		4234209	0					
ANR	4234373	SizeofExpression	sizeof ( char )		4234209	1					
ANR	4234374	Sizeof	sizeof		4234209	0					
ANR	4234375	SizeofOperand	char		4234209	1					
ANR	4234376	ExpressionStatement	port = ( char * ) malloc ( len * sizeof ( char ) )	229:2:7024:7066	4234209	2	True				
ANR	4234377	AssignmentExpression	port = ( char * ) malloc ( len * sizeof ( char ) )		4234209	0		=			
ANR	4234378	Identifier	port		4234209	0					
ANR	4234379	CastExpression	( char * ) malloc ( len * sizeof ( char ) )		4234209	1					
ANR	4234380	CastTarget	char *		4234209	0					
ANR	4234381	CallExpression	malloc ( len * sizeof ( char ) )		4234209	1					
ANR	4234382	Callee	malloc		4234209	0					
ANR	4234383	Identifier	malloc		4234209	0					
ANR	4234384	ArgumentList	len * sizeof ( char )		4234209	1					
ANR	4234385	Argument	len * sizeof ( char )		4234209	0					
ANR	4234386	MultiplicativeExpression	len * sizeof ( char )		4234209	0		*			
ANR	4234387	Identifier	len		4234209	0					
ANR	4234388	SizeofExpression	sizeof ( char )		4234209	1					
ANR	4234389	Sizeof	sizeof		4234209	0					
ANR	4234390	SizeofOperand	char		4234209	1					
ANR	4234391	IdentifierDeclStatement	"char * ptr_colon = strchr ( DBIpAddress , ':' ) ;"	232:2:7134:7176	4234209	3	True				
ANR	4234392	IdentifierDecl	"* ptr_colon = strchr ( DBIpAddress , ':' )"		4234209	0					
ANR	4234393	IdentifierDeclType	char *		4234209	0					
ANR	4234394	Identifier	ptr_colon		4234209	1					
ANR	4234395	AssignmentExpression	"* ptr_colon = strchr ( DBIpAddress , ':' )"		4234209	2		=			
ANR	4234396	Identifier	ptr_colon		4234209	0					
ANR	4234397	CallExpression	"strchr ( DBIpAddress , ':' )"		4234209	1					
ANR	4234398	Callee	strchr		4234209	0					
ANR	4234399	Identifier	strchr		4234209	0					
ANR	4234400	ArgumentList	DBIpAddress		4234209	1					
ANR	4234401	Argument	DBIpAddress		4234209	0					
ANR	4234402	Identifier	DBIpAddress		4234209	0					
ANR	4234403	Argument	':'		4234209	1					
ANR	4234404	PrimaryExpression	':'		4234209	0					
ANR	4234405	ExpressionStatement	"strncpy ( host , DBIpAddress , ptr_colon - DBIpAddress )"	233:2:7180:7236	4234209	4	True				
ANR	4234406	CallExpression	"strncpy ( host , DBIpAddress , ptr_colon - DBIpAddress )"		4234209	0					
ANR	4234407	Callee	strncpy		4234209	0					
ANR	4234408	Identifier	strncpy		4234209	0					
ANR	4234409	ArgumentList	host		4234209	1					
ANR	4234410	Argument	host		4234209	0					
ANR	4234411	Identifier	host		4234209	0					
ANR	4234412	Argument	DBIpAddress		4234209	1					
ANR	4234413	Identifier	DBIpAddress		4234209	0					
ANR	4234414	Argument	ptr_colon - DBIpAddress		4234209	2					
ANR	4234415	AdditiveExpression	ptr_colon - DBIpAddress		4234209	0		-			
ANR	4234416	Identifier	ptr_colon		4234209	0					
ANR	4234417	Identifier	DBIpAddress		4234209	1					
ANR	4234418	ExpressionStatement	host [ ptr_colon - DBIpAddress ] = '\\0'	236:2:7276:7312	4234209	5	True				
ANR	4234419	AssignmentExpression	host [ ptr_colon - DBIpAddress ] = '\\0'		4234209	0		=			
ANR	4234420	ArrayIndexing	host [ ptr_colon - DBIpAddress ]		4234209	0					
ANR	4234421	Identifier	host		4234209	0					
ANR	4234422	AdditiveExpression	ptr_colon - DBIpAddress		4234209	1		-			
ANR	4234423	Identifier	ptr_colon		4234209	0					
ANR	4234424	Identifier	DBIpAddress		4234209	1					
ANR	4234425	PrimaryExpression	'\\0'		4234209	1					
ANR	4234426	ExpressionStatement	"strncpy ( port , ptr_colon + 1 , len )"	237:2:7316:7347	4234209	6	True				
ANR	4234427	CallExpression	"strncpy ( port , ptr_colon + 1 , len )"		4234209	0					
ANR	4234428	Callee	strncpy		4234209	0					
ANR	4234429	Identifier	strncpy		4234209	0					
ANR	4234430	ArgumentList	port		4234209	1					
ANR	4234431	Argument	port		4234209	0					
ANR	4234432	Identifier	port		4234209	0					
ANR	4234433	Argument	ptr_colon + 1		4234209	1					
ANR	4234434	AdditiveExpression	ptr_colon + 1		4234209	0		+			
ANR	4234435	Identifier	ptr_colon		4234209	0					
ANR	4234436	PrimaryExpression	1		4234209	1					
ANR	4234437	Argument	len		4234209	2					
ANR	4234438	Identifier	len		4234209	0					
ANR	4234439	ExpressionStatement	port [ strlen ( ptr_colon + 1 ) ] = '\\0'	239:2:7388:7420	4234209	7	True				
ANR	4234440	AssignmentExpression	port [ strlen ( ptr_colon + 1 ) ] = '\\0'		4234209	0		=			
ANR	4234441	ArrayIndexing	port [ strlen ( ptr_colon + 1 ) ]		4234209	0					
ANR	4234442	Identifier	port		4234209	0					
ANR	4234443	CallExpression	strlen ( ptr_colon + 1 )		4234209	1					
ANR	4234444	Callee	strlen		4234209	0					
ANR	4234445	Identifier	strlen		4234209	0					
ANR	4234446	ArgumentList	ptr_colon + 1		4234209	1					
ANR	4234447	Argument	ptr_colon + 1		4234209	0					
ANR	4234448	AdditiveExpression	ptr_colon + 1		4234209	0		+			
ANR	4234449	Identifier	ptr_colon		4234209	0					
ANR	4234450	PrimaryExpression	1		4234209	1					
ANR	4234451	PrimaryExpression	'\\0'		4234209	1					
ANR	4234452	ExpressionStatement	"DBName = param ( ""QUILL_DB_NAME"" )"	249:1:7791:7822	4234209	9	True				
ANR	4234453	AssignmentExpression	"DBName = param ( ""QUILL_DB_NAME"" )"		4234209	0		=			
ANR	4234454	Identifier	DBName		4234209	0					
ANR	4234455	CallExpression	"param ( ""QUILL_DB_NAME"" )"		4234209	1					
ANR	4234456	Callee	param		4234209	0					
ANR	4234457	Identifier	param		4234209	0					
ANR	4234458	ArgumentList	"""QUILL_DB_NAME"""		4234209	1					
ANR	4234459	Argument	"""QUILL_DB_NAME"""		4234209	0					
ANR	4234460	PrimaryExpression	"""QUILL_DB_NAME"""		4234209	0					
ANR	4234461	ExpressionStatement	"DBUser = param ( ""QUILL_DB_USER"" )"	251:1:7826:7857	4234209	10	True				
ANR	4234462	AssignmentExpression	"DBUser = param ( ""QUILL_DB_USER"" )"		4234209	0		=			
ANR	4234463	Identifier	DBUser		4234209	0					
ANR	4234464	CallExpression	"param ( ""QUILL_DB_USER"" )"		4234209	1					
ANR	4234465	Callee	param		4234209	0					
ANR	4234466	Identifier	param		4234209	0					
ANR	4234467	ArgumentList	"""QUILL_DB_USER"""		4234209	1					
ANR	4234468	Argument	"""QUILL_DB_USER"""		4234209	0					
ANR	4234469	PrimaryExpression	"""QUILL_DB_USER"""		4234209	0					
ANR	4234470	IdentifierDeclStatement	MyString writePasswordFile ;	254:1:7905:7931	4234209	11	True				
ANR	4234471	IdentifierDecl	writePasswordFile		4234209	0					
ANR	4234472	IdentifierDeclType	MyString		4234209	0					
ANR	4234473	Identifier	writePasswordFile		4234209	1					
ANR	4234474	ExpressionStatement	"writePasswordFile . sprintf ( ""%s/.pgpass"" , spool )"	255:1:7935:7981	4234209	12	True				
ANR	4234475	CallExpression	"writePasswordFile . sprintf ( ""%s/.pgpass"" , spool )"		4234209	0					
ANR	4234476	Callee	writePasswordFile . sprintf		4234209	0					
ANR	4234477	MemberAccess	writePasswordFile . sprintf		4234209	0					
ANR	4234478	Identifier	writePasswordFile		4234209	0					
ANR	4234479	Identifier	sprintf		4234209	1					
ANR	4234480	ArgumentList	"""%s/.pgpass"""		4234209	1					
ANR	4234481	Argument	"""%s/.pgpass"""		4234209	0					
ANR	4234482	PrimaryExpression	"""%s/.pgpass"""		4234209	0					
ANR	4234483	Argument	spool		4234209	1					
ANR	4234484	Identifier	spool		4234209	0					
ANR	4234485	IdentifierDeclStatement	"MyString writePassword = getWritePassword ( writePasswordFile . Value ( ) , host ? host : """" , port ? port : """" , DBName ? DBName : """" , DBUser ) ;"	257:1:7985:8149	4234209	13	True				
ANR	4234486	IdentifierDecl	"writePassword = getWritePassword ( writePasswordFile . Value ( ) , host ? host : """" , port ? port : """" , DBName ? DBName : """" , DBUser )"		4234209	0					
ANR	4234487	IdentifierDeclType	MyString		4234209	0					
ANR	4234488	Identifier	writePassword		4234209	1					
ANR	4234489	AssignmentExpression	"writePassword = getWritePassword ( writePasswordFile . Value ( ) , host ? host : """" , port ? port : """" , DBName ? DBName : """" , DBUser )"		4234209	2		=			
ANR	4234490	Identifier	writePassword		4234209	0					
ANR	4234491	CallExpression	"getWritePassword ( writePasswordFile . Value ( ) , host ? host : """" , port ? port : """" , DBName ? DBName : """" , DBUser )"		4234209	1					
ANR	4234492	Callee	getWritePassword		4234209	0					
ANR	4234493	Identifier	getWritePassword		4234209	0					
ANR	4234494	ArgumentList	writePasswordFile . Value ( )		4234209	1					
ANR	4234495	Argument	writePasswordFile . Value ( )		4234209	0					
ANR	4234496	CallExpression	writePasswordFile . Value ( )		4234209	0					
ANR	4234497	Callee	writePasswordFile . Value		4234209	0					
ANR	4234498	MemberAccess	writePasswordFile . Value		4234209	0					
ANR	4234499	Identifier	writePasswordFile		4234209	0					
ANR	4234500	Identifier	Value		4234209	1					
ANR	4234501	ArgumentList			4234209	1					
ANR	4234502	Argument	"host ? host : """""		4234209	1					
ANR	4234503	ConditionalExpression	"host ? host : """""		4234209	0					
ANR	4234504	Condition	host		4234209	0					
ANR	4234505	Identifier	host		4234209	0					
ANR	4234506	Identifier	host		4234209	1					
ANR	4234507	PrimaryExpression	""""""		4234209	2					
ANR	4234508	Argument	"port ? port : """""		4234209	2					
ANR	4234509	ConditionalExpression	"port ? port : """""		4234209	0					
ANR	4234510	Condition	port		4234209	0					
ANR	4234511	Identifier	port		4234209	0					
ANR	4234512	Identifier	port		4234209	1					
ANR	4234513	PrimaryExpression	""""""		4234209	2					
ANR	4234514	Argument	"DBName ? DBName : """""		4234209	3					
ANR	4234515	ConditionalExpression	"DBName ? DBName : """""		4234209	0					
ANR	4234516	Condition	DBName		4234209	0					
ANR	4234517	Identifier	DBName		4234209	0					
ANR	4234518	Identifier	DBName		4234209	1					
ANR	4234519	PrimaryExpression	""""""		4234209	2					
ANR	4234520	Argument	DBUser		4234209	4					
ANR	4234521	Identifier	DBUser		4234209	0					
ANR	4234522	IdentifierDeclStatement	MyString DBConn ;	261:1:8152:8167	4234209	14	True				
ANR	4234523	IdentifierDecl	DBConn		4234209	0					
ANR	4234524	IdentifierDeclType	MyString		4234209	0					
ANR	4234525	Identifier	DBConn		4234209	1					
ANR	4234526	ExpressionStatement	"DBConn . sprintf ( ""host=%s port=%s user=%s password=%s dbname=%s"" , host ? host : """" , port ? port : """" , DBUser ? DBUser : """" , writePassword . Value ( ) , DBName ? DBName : """" )"	263:1:8171:8353	4234209	15	True				
ANR	4234527	CallExpression	"DBConn . sprintf ( ""host=%s port=%s user=%s password=%s dbname=%s"" , host ? host : """" , port ? port : """" , DBUser ? DBUser : """" , writePassword . Value ( ) , DBName ? DBName : """" )"		4234209	0					
ANR	4234528	Callee	DBConn . sprintf		4234209	0					
ANR	4234529	MemberAccess	DBConn . sprintf		4234209	0					
ANR	4234530	Identifier	DBConn		4234209	0					
ANR	4234531	Identifier	sprintf		4234209	1					
ANR	4234532	ArgumentList	"""host=%s port=%s user=%s password=%s dbname=%s"""		4234209	1					
ANR	4234533	Argument	"""host=%s port=%s user=%s password=%s dbname=%s"""		4234209	0					
ANR	4234534	PrimaryExpression	"""host=%s port=%s user=%s password=%s dbname=%s"""		4234209	0					
ANR	4234535	Argument	"host ? host : """""		4234209	1					
ANR	4234536	ConditionalExpression	"host ? host : """""		4234209	0					
ANR	4234537	Condition	host		4234209	0					
ANR	4234538	Identifier	host		4234209	0					
ANR	4234539	Identifier	host		4234209	1					
ANR	4234540	PrimaryExpression	""""""		4234209	2					
ANR	4234541	Argument	"port ? port : """""		4234209	2					
ANR	4234542	ConditionalExpression	"port ? port : """""		4234209	0					
ANR	4234543	Condition	port		4234209	0					
ANR	4234544	Identifier	port		4234209	0					
ANR	4234545	Identifier	port		4234209	1					
ANR	4234546	PrimaryExpression	""""""		4234209	2					
ANR	4234547	Argument	"DBUser ? DBUser : """""		4234209	3					
ANR	4234548	ConditionalExpression	"DBUser ? DBUser : """""		4234209	0					
ANR	4234549	Condition	DBUser		4234209	0					
ANR	4234550	Identifier	DBUser		4234209	0					
ANR	4234551	Identifier	DBUser		4234209	1					
ANR	4234552	PrimaryExpression	""""""		4234209	2					
ANR	4234553	Argument	writePassword . Value ( )		4234209	4					
ANR	4234554	CallExpression	writePassword . Value ( )		4234209	0					
ANR	4234555	Callee	writePassword . Value		4234209	0					
ANR	4234556	MemberAccess	writePassword . Value		4234209	0					
ANR	4234557	Identifier	writePassword		4234209	0					
ANR	4234558	Identifier	Value		4234209	1					
ANR	4234559	ArgumentList			4234209	1					
ANR	4234560	Argument	"DBName ? DBName : """""		4234209	5					
ANR	4234561	ConditionalExpression	"DBName ? DBName : """""		4234209	0					
ANR	4234562	Condition	DBName		4234209	0					
ANR	4234563	Identifier	DBName		4234209	0					
ANR	4234564	Identifier	DBName		4234209	1					
ANR	4234565	PrimaryExpression	""""""		4234209	2					
ANR	4234566	ExpressionStatement	"fprintf ( stdout , ""Using Database Type = Postgres\\n"" )"	269:1:8360:8411	4234209	16	True				
ANR	4234567	CallExpression	"fprintf ( stdout , ""Using Database Type = Postgres\\n"" )"		4234209	0					
ANR	4234568	Callee	fprintf		4234209	0					
ANR	4234569	Identifier	fprintf		4234209	0					
ANR	4234570	ArgumentList	stdout		4234209	1					
ANR	4234571	Argument	stdout		4234209	0					
ANR	4234572	Identifier	stdout		4234209	0					
ANR	4234573	Argument	"""Using Database Type = Postgres\\n"""		4234209	1					
ANR	4234574	PrimaryExpression	"""Using Database Type = Postgres\\n"""		4234209	0					
ANR	4234575	ExpressionStatement	"fprintf ( stdout , ""Using Database IpAddress = %s\\n"" , DBIpAddress ? DBIpAddress : """" )"	270:1:8414:8496	4234209	17	True				
ANR	4234576	CallExpression	"fprintf ( stdout , ""Using Database IpAddress = %s\\n"" , DBIpAddress ? DBIpAddress : """" )"		4234209	0					
ANR	4234577	Callee	fprintf		4234209	0					
ANR	4234578	Identifier	fprintf		4234209	0					
ANR	4234579	ArgumentList	stdout		4234209	1					
ANR	4234580	Argument	stdout		4234209	0					
ANR	4234581	Identifier	stdout		4234209	0					
ANR	4234582	Argument	"""Using Database IpAddress = %s\\n"""		4234209	1					
ANR	4234583	PrimaryExpression	"""Using Database IpAddress = %s\\n"""		4234209	0					
ANR	4234584	Argument	"DBIpAddress ? DBIpAddress : """""		4234209	2					
ANR	4234585	ConditionalExpression	"DBIpAddress ? DBIpAddress : """""		4234209	0					
ANR	4234586	Condition	DBIpAddress		4234209	0					
ANR	4234587	Identifier	DBIpAddress		4234209	0					
ANR	4234588	Identifier	DBIpAddress		4234209	1					
ANR	4234589	PrimaryExpression	""""""		4234209	2					
ANR	4234590	ExpressionStatement	"fprintf ( stdout , ""Using Database Name = %s\\n"" , DBName ? DBName : """" )"	272:1:8499:8566	4234209	18	True				
ANR	4234591	CallExpression	"fprintf ( stdout , ""Using Database Name = %s\\n"" , DBName ? DBName : """" )"		4234209	0					
ANR	4234592	Callee	fprintf		4234209	0					
ANR	4234593	Identifier	fprintf		4234209	0					
ANR	4234594	ArgumentList	stdout		4234209	1					
ANR	4234595	Argument	stdout		4234209	0					
ANR	4234596	Identifier	stdout		4234209	0					
ANR	4234597	Argument	"""Using Database Name = %s\\n"""		4234209	1					
ANR	4234598	PrimaryExpression	"""Using Database Name = %s\\n"""		4234209	0					
ANR	4234599	Argument	"DBName ? DBName : """""		4234209	2					
ANR	4234600	ConditionalExpression	"DBName ? DBName : """""		4234209	0					
ANR	4234601	Condition	DBName		4234209	0					
ANR	4234602	Identifier	DBName		4234209	0					
ANR	4234603	Identifier	DBName		4234209	1					
ANR	4234604	PrimaryExpression	""""""		4234209	2					
ANR	4234605	ExpressionStatement	"fprintf ( stdout , ""Using Database User = %s\\n"" , DBUser ? DBUser : """" )"	274:1:8569:8636	4234209	19	True				
ANR	4234606	CallExpression	"fprintf ( stdout , ""Using Database User = %s\\n"" , DBUser ? DBUser : """" )"		4234209	0					
ANR	4234607	Callee	fprintf		4234209	0					
ANR	4234608	Identifier	fprintf		4234209	0					
ANR	4234609	ArgumentList	stdout		4234209	1					
ANR	4234610	Argument	stdout		4234209	0					
ANR	4234611	Identifier	stdout		4234209	0					
ANR	4234612	Argument	"""Using Database User = %s\\n"""		4234209	1					
ANR	4234613	PrimaryExpression	"""Using Database User = %s\\n"""		4234209	0					
ANR	4234614	Argument	"DBUser ? DBUser : """""		4234209	2					
ANR	4234615	ConditionalExpression	"DBUser ? DBUser : """""		4234209	0					
ANR	4234616	Condition	DBUser		4234209	0					
ANR	4234617	Identifier	DBUser		4234209	0					
ANR	4234618	Identifier	DBUser		4234209	1					
ANR	4234619	PrimaryExpression	""""""		4234209	2					
ANR	4234620	IfStatement	if ( spool )		4234209	20					
ANR	4234621	Condition	spool	277:4:8643:8647	4234209	0	True				
ANR	4234622	Identifier	spool		4234209	0					
ANR	4234623	CompoundStatement		87:11:2732:2732	4234209	1					
ANR	4234624	ExpressionStatement	free ( spool )	278:2:8654:8665	4234209	0	True				
ANR	4234625	CallExpression	free ( spool )		4234209	0					
ANR	4234626	Callee	free		4234209	0					
ANR	4234627	Identifier	free		4234209	0					
ANR	4234628	ArgumentList	spool		4234209	1					
ANR	4234629	Argument	spool		4234209	0					
ANR	4234630	Identifier	spool		4234209	0					
ANR	4234631	ExpressionStatement	spool = NULL	279:2:8669:8681	4234209	1	True				
ANR	4234632	AssignmentExpression	spool = NULL		4234209	0		=			
ANR	4234633	Identifier	spool		4234209	0					
ANR	4234634	Identifier	NULL		4234209	1					
ANR	4234635	IfStatement	if ( host )		4234209	21					
ANR	4234636	Condition	host	282:4:8691:8694	4234209	0	True				
ANR	4234637	Identifier	host		4234209	0					
ANR	4234638	CompoundStatement		92:10:2779:2779	4234209	1					
ANR	4234639	ExpressionStatement	free ( host )	283:2:8701:8711	4234209	0	True				
ANR	4234640	CallExpression	free ( host )		4234209	0					
ANR	4234641	Callee	free		4234209	0					
ANR	4234642	Identifier	free		4234209	0					
ANR	4234643	ArgumentList	host		4234209	1					
ANR	4234644	Argument	host		4234209	0					
ANR	4234645	Identifier	host		4234209	0					
ANR	4234646	ExpressionStatement	host = NULL	284:2:8715:8726	4234209	1	True				
ANR	4234647	AssignmentExpression	host = NULL		4234209	0		=			
ANR	4234648	Identifier	host		4234209	0					
ANR	4234649	Identifier	NULL		4234209	1					
ANR	4234650	IfStatement	if ( port )		4234209	22					
ANR	4234651	Condition	port	287:4:8736:8739	4234209	0	True				
ANR	4234652	Identifier	port		4234209	0					
ANR	4234653	CompoundStatement		97:10:2824:2824	4234209	1					
ANR	4234654	ExpressionStatement	free ( port )	288:2:8746:8756	4234209	0	True				
ANR	4234655	CallExpression	free ( port )		4234209	0					
ANR	4234656	Callee	free		4234209	0					
ANR	4234657	Identifier	free		4234209	0					
ANR	4234658	ArgumentList	port		4234209	1					
ANR	4234659	Argument	port		4234209	0					
ANR	4234660	Identifier	port		4234209	0					
ANR	4234661	ExpressionStatement	port = NULL	289:2:8760:8771	4234209	1	True				
ANR	4234662	AssignmentExpression	port = NULL		4234209	0		=			
ANR	4234663	Identifier	port		4234209	0					
ANR	4234664	Identifier	NULL		4234209	1					
ANR	4234665	SwitchStatement	switch ( dt )		4234209	23					
ANR	4234666	Condition	dt	292:9:8786:8787	4234209	0	True				
ANR	4234667	Identifier	dt		4234209	0					
ANR	4234668	CompoundStatement		102:13:2872:2872	4234209	1					
ANR	4234669	Label	case T_PGSQL :	293:2:8798:8810	4234209	0	True				
ANR	4234670	Identifier	T_PGSQL		4234209	0					
ANR	4234671	ExpressionStatement	DBObj = new PGSQLDatabase ( DBConn . Value ( ) )	294:3:8815:8856	4234209	1	True				
ANR	4234672	AssignmentExpression	DBObj = new PGSQLDatabase ( DBConn . Value ( ) )		4234209	0		=			
ANR	4234673	Identifier	DBObj		4234209	0					
ANR	4234674	CallExpression	DBConn . Value ( )		4234209	1					
ANR	4234675	Callee	DBConn . Value		4234209	0					
ANR	4234676	MemberAccess	DBConn . Value		4234209	0					
ANR	4234677	Identifier	DBConn		4234209	0					
ANR	4234678	Identifier	Value		4234209	1					
ANR	4234679	ArgumentList			4234209	1					
ANR	4234680	BreakStatement	break ;	295:3:8861:8866	4234209	2	True				
ANR	4234681	Label	default :	296:2:8870:8877	4234209	3	True				
ANR	4234682	Identifier	default		4234209	0					
ANR	4234683	BreakStatement	break ;	297:3:8882:8887	4234209	4	True				
ANR	4234684	ExpressionStatement		297:9:8888:8888	4234209	5	True				
ANR	4234685	IdentifierDeclStatement	QuillErrCode ret_st ;	300:1:8895:8914	4234209	24	True				
ANR	4234686	IdentifierDecl	ret_st		4234209	0					
ANR	4234687	IdentifierDeclType	QuillErrCode		4234209	0					
ANR	4234688	Identifier	ret_st		4234209	1					
ANR	4234689	ExpressionStatement	ret_st = DBObj -> connectDB ( )	302:1:8918:8945	4234209	25	True				
ANR	4234690	AssignmentExpression	ret_st = DBObj -> connectDB ( )		4234209	0		=			
ANR	4234691	Identifier	ret_st		4234209	0					
ANR	4234692	CallExpression	DBObj -> connectDB ( )		4234209	1					
ANR	4234693	Callee	DBObj -> connectDB		4234209	0					
ANR	4234694	PtrMemberAccess	DBObj -> connectDB		4234209	0					
ANR	4234695	Identifier	DBObj		4234209	0					
ANR	4234696	Identifier	connectDB		4234209	1					
ANR	4234697	ArgumentList			4234209	1					
ANR	4234698	IfStatement	if ( ret_st == QUILL_FAILURE )		4234209	26					
ANR	4234699	Condition	ret_st == QUILL_FAILURE	303:5:8952:8974	4234209	0	True				
ANR	4234700	EqualityExpression	ret_st == QUILL_FAILURE		4234209	0		==			
ANR	4234701	Identifier	ret_st		4234209	0					
ANR	4234702	Identifier	QUILL_FAILURE		4234209	1					
ANR	4234703	CompoundStatement		113:30:3059:3059	4234209	1					
ANR	4234704	ExpressionStatement	"fprintf ( stderr , ""doDBconfig: unable to connect to DB--- ERROR"" )"	304:2:8981:9044	4234209	0	True				
ANR	4234705	CallExpression	"fprintf ( stderr , ""doDBconfig: unable to connect to DB--- ERROR"" )"		4234209	0					
ANR	4234706	Callee	fprintf		4234209	0					
ANR	4234707	Identifier	fprintf		4234209	0					
ANR	4234708	ArgumentList	stderr		4234209	1					
ANR	4234709	Argument	stderr		4234209	0					
ANR	4234710	Identifier	stderr		4234209	0					
ANR	4234711	Argument	"""doDBconfig: unable to connect to DB--- ERROR"""		4234209	1					
ANR	4234712	PrimaryExpression	"""doDBconfig: unable to connect to DB--- ERROR"""		4234209	0					
ANR	4234713	ExpressionStatement	exit ( 1 )	305:2:9048:9055	4234209	1	True				
ANR	4234714	CallExpression	exit ( 1 )		4234209	0					
ANR	4234715	Callee	exit		4234209	0					
ANR	4234716	Identifier	exit		4234209	0					
ANR	4234717	ArgumentList	1		4234209	1					
ANR	4234718	Argument	1		4234209	0					
ANR	4234719	PrimaryExpression	1		4234209	0					
ANR	4234720	ExpressionStatement	free ( DBIpAddress )	322:1:9406:9423	4234209	27	True				
ANR	4234721	CallExpression	free ( DBIpAddress )		4234209	0					
ANR	4234722	Callee	free		4234209	0					
ANR	4234723	Identifier	free		4234209	0					
ANR	4234724	ArgumentList	DBIpAddress		4234209	1					
ANR	4234725	Argument	DBIpAddress		4234209	0					
ANR	4234726	Identifier	DBIpAddress		4234209	0					
ANR	4234727	ExpressionStatement	free ( DBName )	323:1:9426:9438	4234209	28	True				
ANR	4234728	CallExpression	free ( DBName )		4234209	0					
ANR	4234729	Callee	free		4234209	0					
ANR	4234730	Identifier	free		4234209	0					
ANR	4234731	ArgumentList	DBName		4234209	1					
ANR	4234732	Argument	DBName		4234209	0					
ANR	4234733	Identifier	DBName		4234209	0					
ANR	4234734	ExpressionStatement	free ( DBUser )	324:1:9441:9453	4234209	29	True				
ANR	4234735	CallExpression	free ( DBUser )		4234209	0					
ANR	4234736	Callee	free		4234209	0					
ANR	4234737	Identifier	free		4234209	0					
ANR	4234738	ArgumentList	DBUser		4234209	1					
ANR	4234739	Argument	DBUser		4234209	0					
ANR	4234740	Identifier	DBUser		4234209	0					
ANR	4234741	ReturnType	static void		4234209	1					
ANR	4234742	Identifier	doDBconfig		4234209	2					
ANR	4234743	ParameterList			4234209	3					
ANR	4234744	CFGEntryNode	ENTRY		4234209		True				
ANR	4234745	CFGExitNode	EXIT		4234209		True				
ANR	4234746	Symbol	* DBIpAddress		4234209						
ANR	4234747	Symbol	* host		4234209						
ANR	4234748	Symbol	DBConn		4234209						
ANR	4234749	Symbol	writePassword . Value		4234209						
ANR	4234750	Symbol	stdout		4234209						
ANR	4234751	Symbol	DBObj		4234209						
ANR	4234752	Symbol	writePasswordFile . Value		4234209						
ANR	4234753	Symbol	spool		4234209						
ANR	4234754	Symbol	strchr		4234209						
ANR	4234755	Symbol	ptr_colon		4234209						
ANR	4234756	Symbol	QUILL_FAILURE		4234209						
ANR	4234757	Symbol	dt		4234209						
ANR	4234758	Symbol	strlen		4234209						
ANR	4234759	Symbol	DBConn . Value		4234209						
ANR	4234760	Symbol	len		4234209						
ANR	4234761	Symbol	* port		4234209						
ANR	4234762	Symbol	param		4234209						
ANR	4234763	Symbol	tmp		4234209						
ANR	4234764	Symbol	host		4234209						
ANR	4234765	Symbol	writePasswordFile		4234209						
ANR	4234766	Symbol	strcasecmp		4234209						
ANR	4234767	Symbol	T_PGSQL		4234209						
ANR	4234768	Symbol	* DBObj		4234209						
ANR	4234769	Symbol	malloc		4234209						
ANR	4234770	Symbol	NULL		4234209						
ANR	4234771	Symbol	writePassword		4234209						
ANR	4234772	Symbol	false		4234209						
ANR	4234773	Symbol	DBIpAddress		4234209						
ANR	4234774	Symbol	DBObj -> connectDB		4234209						
ANR	4234775	Symbol	param_boolean		4234209						
ANR	4234776	Symbol	stderr		4234209						
ANR	4234777	Symbol	* ptr_colon		4234209						
ANR	4234778	Symbol	ret_st		4234209						
ANR	4234779	Symbol	* strlen		4234209						
ANR	4234780	Symbol	port		4234209						
ANR	4234781	Symbol	DBName		4234209						
ANR	4234782	Symbol	DBUser		4234209						
ANR	4234783	Symbol	getWritePassword		4234209						
ANR	4234784	Function	getWritePassword	329:0:9545:10683							
ANR	4234785	FunctionDef	"getWritePassword (const char * write_passwd_fname , const char * host , const char * port , const char * db , const char * dbuser)"		4234784	0					
ANR	4234786	CompoundStatement		332:30:9714:10683	4234784	0					
ANR	4234787	IdentifierDeclStatement	FILE * fp = NULL ;	333:1:9717:9732	4234784	0	True				
ANR	4234788	IdentifierDecl	* fp = NULL		4234784	0					
ANR	4234789	IdentifierDeclType	FILE *		4234784	0					
ANR	4234790	Identifier	fp		4234784	1					
ANR	4234791	AssignmentExpression	* fp = NULL		4234784	2		=			
ANR	4234792	Identifier	NULL		4234784	0					
ANR	4234793	Identifier	NULL		4234784	1					
ANR	4234794	IdentifierDeclStatement	MyString passwd ;	334:1:9735:9750	4234784	1	True				
ANR	4234795	IdentifierDecl	passwd		4234784	0					
ANR	4234796	IdentifierDeclType	MyString		4234784	0					
ANR	4234797	Identifier	passwd		4234784	1					
ANR	4234798	IdentifierDeclStatement	int len ;	335:1:9753:9760	4234784	2	True				
ANR	4234799	IdentifierDecl	len		4234784	0					
ANR	4234800	IdentifierDeclType	int		4234784	0					
ANR	4234801	Identifier	len		4234784	1					
ANR	4234802	IdentifierDeclStatement	MyString prefix ;	336:1:9763:9778	4234784	3	True				
ANR	4234803	IdentifierDecl	prefix		4234784	0					
ANR	4234804	IdentifierDeclType	MyString		4234784	0					
ANR	4234805	Identifier	prefix		4234784	1					
ANR	4234806	IdentifierDeclStatement	MyString msbuf ;	337:1:9781:9795	4234784	4	True				
ANR	4234807	IdentifierDecl	msbuf		4234784	0					
ANR	4234808	IdentifierDeclType	MyString		4234784	0					
ANR	4234809	Identifier	msbuf		4234784	1					
ANR	4234810	IdentifierDeclStatement	const char * buf ;	338:1:9798:9813	4234784	5	True				
ANR	4234811	IdentifierDecl	* buf		4234784	0					
ANR	4234812	IdentifierDeclType	const char *		4234784	0					
ANR	4234813	Identifier	buf		4234784	1					
ANR	4234814	IdentifierDeclStatement	bool found = FALSE ;	339:1:9816:9834	4234784	6	True				
ANR	4234815	IdentifierDecl	found = FALSE		4234784	0					
ANR	4234816	IdentifierDeclType	bool		4234784	0					
ANR	4234817	Identifier	found		4234784	1					
ANR	4234818	AssignmentExpression	found = FALSE		4234784	2		=			
ANR	4234819	Identifier	FALSE		4234784	0					
ANR	4234820	Identifier	FALSE		4234784	1					
ANR	4234821	ExpressionStatement	"prefix . sprintf ( ""%s:%s:%s:%s:"" , host , port , db , dbuser )"	345:1:9972:10026	4234784	7	True				
ANR	4234822	CallExpression	"prefix . sprintf ( ""%s:%s:%s:%s:"" , host , port , db , dbuser )"		4234784	0					
ANR	4234823	Callee	prefix . sprintf		4234784	0					
ANR	4234824	MemberAccess	prefix . sprintf		4234784	0					
ANR	4234825	Identifier	prefix		4234784	0					
ANR	4234826	Identifier	sprintf		4234784	1					
ANR	4234827	ArgumentList	"""%s:%s:%s:%s:"""		4234784	1					
ANR	4234828	Argument	"""%s:%s:%s:%s:"""		4234784	0					
ANR	4234829	PrimaryExpression	"""%s:%s:%s:%s:"""		4234784	0					
ANR	4234830	Argument	host		4234784	1					
ANR	4234831	Identifier	host		4234784	0					
ANR	4234832	Argument	port		4234784	2					
ANR	4234833	Identifier	port		4234784	0					
ANR	4234834	Argument	db		4234784	3					
ANR	4234835	Identifier	db		4234784	0					
ANR	4234836	Argument	dbuser		4234784	4					
ANR	4234837	Identifier	dbuser		4234784	0					
ANR	4234838	ExpressionStatement	len = prefix . Length ( )	347:1:10030:10051	4234784	8	True				
ANR	4234839	AssignmentExpression	len = prefix . Length ( )		4234784	0		=			
ANR	4234840	Identifier	len		4234784	0					
ANR	4234841	CallExpression	prefix . Length ( )		4234784	1					
ANR	4234842	Callee	prefix . Length		4234784	0					
ANR	4234843	MemberAccess	prefix . Length		4234784	0					
ANR	4234844	Identifier	prefix		4234784	0					
ANR	4234845	Identifier	Length		4234784	1					
ANR	4234846	ArgumentList			4234784	1					
ANR	4234847	ExpressionStatement	"fp = safe_fopen_wrapper ( write_passwd_fname , ""r"" )"	349:1:10055:10103	4234784	9	True				
ANR	4234848	AssignmentExpression	"fp = safe_fopen_wrapper ( write_passwd_fname , ""r"" )"		4234784	0		=			
ANR	4234849	Identifier	fp		4234784	0					
ANR	4234850	CallExpression	"safe_fopen_wrapper ( write_passwd_fname , ""r"" )"		4234784	1					
ANR	4234851	Callee	safe_fopen_wrapper		4234784	0					
ANR	4234852	Identifier	safe_fopen_wrapper		4234784	0					
ANR	4234853	ArgumentList	write_passwd_fname		4234784	1					
ANR	4234854	Argument	write_passwd_fname		4234784	0					
ANR	4234855	Identifier	write_passwd_fname		4234784	0					
ANR	4234856	Argument	"""r"""		4234784	1					
ANR	4234857	PrimaryExpression	"""r"""		4234784	0					
ANR	4234858	IfStatement	if ( fp == NULL )		4234784	10					
ANR	4234859	Condition	fp == NULL	351:4:10110:10119	4234784	0	True				
ANR	4234860	EqualityExpression	fp == NULL		4234784	0		==			
ANR	4234861	Identifier	fp		4234784	0					
ANR	4234862	Identifier	NULL		4234784	1					
ANR	4234863	CompoundStatement		20:16:407:407	4234784	1					
ANR	4234864	ExpressionStatement	"EXCEPT ( ""Unable to open password file %s\\n"" , write_passwd_fname )"	352:2:10126:10189	4234784	0	True				
ANR	4234865	CallExpression	"EXCEPT ( ""Unable to open password file %s\\n"" , write_passwd_fname )"		4234784	0					
ANR	4234866	Callee	EXCEPT		4234784	0					
ANR	4234867	Identifier	EXCEPT		4234784	0					
ANR	4234868	ArgumentList	"""Unable to open password file %s\\n"""		4234784	1					
ANR	4234869	Argument	"""Unable to open password file %s\\n"""		4234784	0					
ANR	4234870	PrimaryExpression	"""Unable to open password file %s\\n"""		4234784	0					
ANR	4234871	Argument	write_passwd_fname		4234784	1					
ANR	4234872	Identifier	write_passwd_fname		4234784	0					
ANR	4234873	WhileStatement	while ( msbuf . readLine ( fp ) )		4234784	11					
ANR	4234874	Condition	msbuf . readLine ( fp )	357:7:10251:10268	4234784	0	True				
ANR	4234875	CallExpression	msbuf . readLine ( fp )		4234784	0					
ANR	4234876	Callee	msbuf . readLine		4234784	0					
ANR	4234877	MemberAccess	msbuf . readLine		4234784	0					
ANR	4234878	Identifier	msbuf		4234784	0					
ANR	4234879	Identifier	readLine		4234784	1					
ANR	4234880	ArgumentList	fp		4234784	1					
ANR	4234881	Argument	fp		4234784	0					
ANR	4234882	Identifier	fp		4234784	0					
ANR	4234883	CompoundStatement		26:27:556:556	4234784	1					
ANR	4234884	ExpressionStatement	msbuf . chomp ( )	358:2:10275:10288	4234784	0	True				
ANR	4234885	CallExpression	msbuf . chomp ( )		4234784	0					
ANR	4234886	Callee	msbuf . chomp		4234784	0					
ANR	4234887	MemberAccess	msbuf . chomp		4234784	0					
ANR	4234888	Identifier	msbuf		4234784	0					
ANR	4234889	Identifier	chomp		4234784	1					
ANR	4234890	ArgumentList			4234784	1					
ANR	4234891	ExpressionStatement	buf = msbuf . Value ( )	359:2:10292:10311	4234784	1	True				
ANR	4234892	AssignmentExpression	buf = msbuf . Value ( )		4234784	0		=			
ANR	4234893	Identifier	buf		4234784	0					
ANR	4234894	CallExpression	msbuf . Value ( )		4234784	1					
ANR	4234895	Callee	msbuf . Value		4234784	0					
ANR	4234896	MemberAccess	msbuf . Value		4234784	0					
ANR	4234897	Identifier	msbuf		4234784	0					
ANR	4234898	Identifier	Value		4234784	1					
ANR	4234899	ArgumentList			4234784	1					
ANR	4234900	IfStatement	"if ( strncmp ( buf , prefix . Value ( ) , len ) == 0 )"		4234784	2					
ANR	4234901	Condition	"strncmp ( buf , prefix . Value ( ) , len ) == 0"	364:6:10406:10443	4234784	0	True				
ANR	4234902	EqualityExpression	"strncmp ( buf , prefix . Value ( ) , len ) == 0"		4234784	0		==			
ANR	4234903	CallExpression	"strncmp ( buf , prefix . Value ( ) , len )"		4234784	0					
ANR	4234904	Callee	strncmp		4234784	0					
ANR	4234905	Identifier	strncmp		4234784	0					
ANR	4234906	ArgumentList	buf		4234784	1					
ANR	4234907	Argument	buf		4234784	0					
ANR	4234908	Identifier	buf		4234784	0					
ANR	4234909	Argument	prefix . Value ( )		4234784	1					
ANR	4234910	CallExpression	prefix . Value ( )		4234784	0					
ANR	4234911	Callee	prefix . Value		4234784	0					
ANR	4234912	MemberAccess	prefix . Value		4234784	0					
ANR	4234913	Identifier	prefix		4234784	0					
ANR	4234914	Identifier	Value		4234784	1					
ANR	4234915	ArgumentList			4234784	1					
ANR	4234916	Argument	len		4234784	2					
ANR	4234917	Identifier	len		4234784	0					
ANR	4234918	PrimaryExpression	0		4234784	1					
ANR	4234919	CompoundStatement		33:46:731:731	4234784	1					
ANR	4234920	ExpressionStatement	"passwd = msbuf . Substr ( len , msbuf . Length ( ) )"	366:3:10479:10521	4234784	0	True				
ANR	4234921	AssignmentExpression	"passwd = msbuf . Substr ( len , msbuf . Length ( ) )"		4234784	0		=			
ANR	4234922	Identifier	passwd		4234784	0					
ANR	4234923	CallExpression	"msbuf . Substr ( len , msbuf . Length ( ) )"		4234784	1					
ANR	4234924	Callee	msbuf . Substr		4234784	0					
ANR	4234925	MemberAccess	msbuf . Substr		4234784	0					
ANR	4234926	Identifier	msbuf		4234784	0					
ANR	4234927	Identifier	Substr		4234784	1					
ANR	4234928	ArgumentList	len		4234784	1					
ANR	4234929	Argument	len		4234784	0					
ANR	4234930	Identifier	len		4234784	0					
ANR	4234931	Argument	msbuf . Length ( )		4234784	1					
ANR	4234932	CallExpression	msbuf . Length ( )		4234784	0					
ANR	4234933	Callee	msbuf . Length		4234784	0					
ANR	4234934	MemberAccess	msbuf . Length		4234784	0					
ANR	4234935	Identifier	msbuf		4234784	0					
ANR	4234936	Identifier	Length		4234784	1					
ANR	4234937	ArgumentList			4234784	1					
ANR	4234938	ExpressionStatement	found = TRUE	367:3:10526:10538	4234784	1	True				
ANR	4234939	AssignmentExpression	found = TRUE		4234784	0		=			
ANR	4234940	Identifier	found		4234784	0					
ANR	4234941	Identifier	TRUE		4234784	1					
ANR	4234942	BreakStatement	break ;	369:3:10544:10549	4234784	2	True				
ANR	4234943	ExpressionStatement	fclose ( fp )	374:4:10564:10574	4234784	12	True				
ANR	4234944	CallExpression	fclose ( fp )		4234784	0					
ANR	4234945	Callee	fclose		4234784	0					
ANR	4234946	Identifier	fclose		4234784	0					
ANR	4234947	ArgumentList	fp		4234784	1					
ANR	4234948	Argument	fp		4234784	0					
ANR	4234949	Identifier	fp		4234784	0					
ANR	4234950	IfStatement	if ( ! found )		4234784	13					
ANR	4234951	Condition	! found	375:5:10581:10586	4234784	0	True				
ANR	4234952	UnaryOperationExpression	! found		4234784	0					
ANR	4234953	UnaryOperator	!		4234784	0					
ANR	4234954	Identifier	found		4234784	1					
ANR	4234955	CompoundStatement		44:13:874:874	4234784	1					
ANR	4234956	ExpressionStatement	"EXCEPT ( ""Unable to find password from file %s\\n"" , write_passwd_fname )"	376:2:10593:10661	4234784	0	True				
ANR	4234957	CallExpression	"EXCEPT ( ""Unable to find password from file %s\\n"" , write_passwd_fname )"		4234784	0					
ANR	4234958	Callee	EXCEPT		4234784	0					
ANR	4234959	Identifier	EXCEPT		4234784	0					
ANR	4234960	ArgumentList	"""Unable to find password from file %s\\n"""		4234784	1					
ANR	4234961	Argument	"""Unable to find password from file %s\\n"""		4234784	0					
ANR	4234962	PrimaryExpression	"""Unable to find password from file %s\\n"""		4234784	0					
ANR	4234963	Argument	write_passwd_fname		4234784	1					
ANR	4234964	Identifier	write_passwd_fname		4234784	0					
ANR	4234965	ReturnStatement	return passwd ;	379:1:10668:10681	4234784	14	True				
ANR	4234966	Identifier	passwd		4234784	0					
ANR	4234967	ReturnType	static MyString		4234784	1					
ANR	4234968	Identifier	getWritePassword		4234784	2					
ANR	4234969	ParameterList	"const char * write_passwd_fname , const char * host , const char * port , const char * db , const char * dbuser"		4234784	3					
ANR	4234970	Parameter	const char * write_passwd_fname	329:33:9578:9607	4234784	0	True				
ANR	4234971	ParameterType	const char *		4234784	0					
ANR	4234972	Identifier	write_passwd_fname		4234784	1					
ANR	4234973	Parameter	const char * host	330:10:9621:9636	4234784	1	True				
ANR	4234974	ParameterType	const char *		4234784	0					
ANR	4234975	Identifier	host		4234784	1					
ANR	4234976	Parameter	const char * port	330:28:9639:9654	4234784	2	True				
ANR	4234977	ParameterType	const char *		4234784	0					
ANR	4234978	Identifier	port		4234784	1					
ANR	4234979	Parameter	const char * db	331:10:9668:9681	4234784	3	True				
ANR	4234980	ParameterType	const char *		4234784	0					
ANR	4234981	Identifier	db		4234784	1					
ANR	4234982	Parameter	const char * dbuser	332:10:9694:9711	4234784	4	True				
ANR	4234983	ParameterType	const char *		4234784	0					
ANR	4234984	Identifier	dbuser		4234784	1					
ANR	4234985	CFGEntryNode	ENTRY		4234784		True				
ANR	4234986	CFGExitNode	EXIT		4234784		True				
ANR	4234987	Symbol	NULL		4234784						
ANR	4234988	Symbol	prefix . Value		4234784						
ANR	4234989	Symbol	safe_fopen_wrapper		4234784						
ANR	4234990	Symbol	prefix		4234784						
ANR	4234991	Symbol	write_passwd_fname		4234784						
ANR	4234992	Symbol	dbuser		4234784						
ANR	4234993	Symbol	TRUE		4234784						
ANR	4234994	Symbol	fp		4234784						
ANR	4234995	Symbol	msbuf . Value		4234784						
ANR	4234996	Symbol	strncmp		4234784						
ANR	4234997	Symbol	buf		4234784						
ANR	4234998	Symbol	prefix . Length		4234784						
ANR	4234999	Symbol	found		4234784						
ANR	4235000	Symbol	len		4234784						
ANR	4235001	Symbol	port		4234784						
ANR	4235002	Symbol	passwd		4234784						
ANR	4235003	Symbol	msbuf . readLine		4234784						
ANR	4235004	Symbol	msbuf . Substr		4234784						
ANR	4235005	Symbol	host		4234784						
ANR	4235006	Symbol	msbuf		4234784						
ANR	4235007	Symbol	msbuf . Length		4234784						
ANR	4235008	Symbol	FALSE		4234784						
ANR	4235009	Symbol	db		4234784						
ANR	4235010	Function	insertHistoryJob	382:0:10686:10936							
ANR	4235011	FunctionDef	insertHistoryJob (AttrList * ad)		4235010	0					
ANR	4235012	CompoundStatement		382:44:10730:10936	4235010	0					
ANR	4235013	IdentifierDeclStatement	MyString errorSqlStmt ;	384:1:10734:10755	4235010	0	True				
ANR	4235014	IdentifierDecl	errorSqlStmt		4235010	0					
ANR	4235015	IdentifierDeclType	MyString		4235010	0					
ANR	4235016	Identifier	errorSqlStmt		4235010	1					
ANR	4235017	ExpressionStatement	DBObj -> beginTransaction ( )	385:1:10758:10783	4235010	1	True				
ANR	4235018	CallExpression	DBObj -> beginTransaction ( )		4235010	0					
ANR	4235019	Callee	DBObj -> beginTransaction		4235010	0					
ANR	4235020	PtrMemberAccess	DBObj -> beginTransaction		4235010	0					
ANR	4235021	Identifier	DBObj		4235010	0					
ANR	4235022	Identifier	beginTransaction		4235010	1					
ANR	4235023	ArgumentList			4235010	1					
ANR	4235024	IdentifierDeclStatement	"QuillErrCode ec = insertHistoryJobCommon ( ad , DBObj , dt , errorSqlStmt , ScheddName , ( time_t ) ScheddBirthdate ) ;"	386:1:10786:10893	4235010	2	True				
ANR	4235025	IdentifierDecl	"ec = insertHistoryJobCommon ( ad , DBObj , dt , errorSqlStmt , ScheddName , ( time_t ) ScheddBirthdate )"		4235010	0					
ANR	4235026	IdentifierDeclType	QuillErrCode		4235010	0					
ANR	4235027	Identifier	ec		4235010	1					
ANR	4235028	AssignmentExpression	"ec = insertHistoryJobCommon ( ad , DBObj , dt , errorSqlStmt , ScheddName , ( time_t ) ScheddBirthdate )"		4235010	2		=			
ANR	4235029	Identifier	ec		4235010	0					
ANR	4235030	CallExpression	"insertHistoryJobCommon ( ad , DBObj , dt , errorSqlStmt , ScheddName , ( time_t ) ScheddBirthdate )"		4235010	1					
ANR	4235031	Callee	insertHistoryJobCommon		4235010	0					
ANR	4235032	Identifier	insertHistoryJobCommon		4235010	0					
ANR	4235033	ArgumentList	ad		4235010	1					
ANR	4235034	Argument	ad		4235010	0					
ANR	4235035	Identifier	ad		4235010	0					
ANR	4235036	Argument	DBObj		4235010	1					
ANR	4235037	Identifier	DBObj		4235010	0					
ANR	4235038	Argument	dt		4235010	2					
ANR	4235039	Identifier	dt		4235010	0					
ANR	4235040	Argument	errorSqlStmt		4235010	3					
ANR	4235041	Identifier	errorSqlStmt		4235010	0					
ANR	4235042	Argument	ScheddName		4235010	4					
ANR	4235043	Identifier	ScheddName		4235010	0					
ANR	4235044	Argument	( time_t ) ScheddBirthdate		4235010	5					
ANR	4235045	CastExpression	( time_t ) ScheddBirthdate		4235010	0					
ANR	4235046	CastTarget	time_t		4235010	0					
ANR	4235047	Identifier	ScheddBirthdate		4235010	1					
ANR	4235048	ExpressionStatement	DBObj -> commitTransaction ( )	387:1:10896:10922	4235010	3	True				
ANR	4235049	CallExpression	DBObj -> commitTransaction ( )		4235010	0					
ANR	4235050	Callee	DBObj -> commitTransaction		4235010	0					
ANR	4235051	PtrMemberAccess	DBObj -> commitTransaction		4235010	0					
ANR	4235052	Identifier	DBObj		4235010	0					
ANR	4235053	Identifier	commitTransaction		4235010	1					
ANR	4235054	ArgumentList			4235010	1					
ANR	4235055	ReturnStatement	return ec ;	388:1:10925:10934	4235010	4	True				
ANR	4235056	Identifier	ec		4235010	0					
ANR	4235057	ReturnType	QuillErrCode		4235010	1					
ANR	4235058	Identifier	insertHistoryJob		4235010	2					
ANR	4235059	ParameterList	AttrList * ad		4235010	3					
ANR	4235060	Parameter	AttrList * ad	382:30:10716:10727	4235010	0	True				
ANR	4235061	ParameterType	AttrList *		4235010	0					
ANR	4235062	Identifier	ad		4235010	1					
ANR	4235063	CFGEntryNode	ENTRY		4235010		True				
ANR	4235064	CFGExitNode	EXIT		4235010		True				
ANR	4235065	Symbol	dt		4235010						
ANR	4235066	Symbol	ScheddBirthdate		4235010						
ANR	4235067	Symbol	ad		4235010						
ANR	4235068	Symbol	DBObj		4235010						
ANR	4235069	Symbol	insertHistoryJobCommon		4235010						
ANR	4235070	Symbol	errorSqlStmt		4235010						
ANR	4235071	Symbol	ScheddName		4235010						
ANR	4235072	Symbol	ec		4235010						
ANR	4235073	Function	readHistoryFromFile	392:0:10997:12316							
ANR	4235074	FunctionDef	readHistoryFromFile (char * JobHistoryFileName)		4235073	0					
ANR	4235075	CompoundStatement		393:0:11055:12316	4235073	0					
ANR	4235076	IdentifierDeclStatement	int EndFlag = 0 ;	394:4:11061:11078	4235073	0	True				
ANR	4235077	IdentifierDecl	EndFlag = 0		4235073	0					
ANR	4235078	IdentifierDeclType	int		4235073	0					
ANR	4235079	Identifier	EndFlag		4235073	1					
ANR	4235080	AssignmentExpression	EndFlag = 0		4235073	2		=			
ANR	4235081	Identifier	EndFlag		4235073	0					
ANR	4235082	PrimaryExpression	0		4235073	1					
ANR	4235083	IdentifierDeclStatement	int ErrorFlag = 0 ;	395:4:11084:11101	4235073	1	True				
ANR	4235084	IdentifierDecl	ErrorFlag = 0		4235073	0					
ANR	4235085	IdentifierDeclType	int		4235073	0					
ANR	4235086	Identifier	ErrorFlag		4235073	1					
ANR	4235087	AssignmentExpression	ErrorFlag = 0		4235073	2		=			
ANR	4235088	Identifier	ErrorFlag		4235073	0					
ANR	4235089	PrimaryExpression	0		4235073	1					
ANR	4235090	IdentifierDeclStatement	int EmptyFlag = 0 ;	396:4:11107:11124	4235073	2	True				
ANR	4235091	IdentifierDecl	EmptyFlag = 0		4235073	0					
ANR	4235092	IdentifierDeclType	int		4235073	0					
ANR	4235093	Identifier	EmptyFlag		4235073	1					
ANR	4235094	AssignmentExpression	EmptyFlag = 0		4235073	2		=			
ANR	4235095	Identifier	EmptyFlag		4235073	0					
ANR	4235096	PrimaryExpression	0		4235073	1					
ANR	4235097	IdentifierDeclStatement	AttrList * ad = NULL ;	397:4:11130:11149	4235073	3	True				
ANR	4235098	IdentifierDecl	* ad = NULL		4235073	0					
ANR	4235099	IdentifierDeclType	AttrList *		4235073	0					
ANR	4235100	Identifier	ad		4235073	1					
ANR	4235101	AssignmentExpression	* ad = NULL		4235073	2		=			
ANR	4235102	Identifier	NULL		4235073	0					
ANR	4235103	Identifier	NULL		4235073	1					
ANR	4235104	IdentifierDeclStatement	MyString buf ;	399:4:11156:11168	4235073	4	True				
ANR	4235105	IdentifierDecl	buf		4235073	0					
ANR	4235106	IdentifierDeclType	MyString		4235073	0					
ANR	4235107	Identifier	buf		4235073	1					
ANR	4235108	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( JobHistoryFileName , O_RDONLY | O_LARGEFILE ) ;"	401:4:11179:11256	4235073	5	True				
ANR	4235109	IdentifierDecl	"fd = safe_open_wrapper_follow ( JobHistoryFileName , O_RDONLY | O_LARGEFILE )"		4235073	0					
ANR	4235110	IdentifierDeclType	int		4235073	0					
ANR	4235111	Identifier	fd		4235073	1					
ANR	4235112	AssignmentExpression	"fd = safe_open_wrapper_follow ( JobHistoryFileName , O_RDONLY | O_LARGEFILE )"		4235073	2		=			
ANR	4235113	Identifier	fd		4235073	0					
ANR	4235114	CallExpression	"safe_open_wrapper_follow ( JobHistoryFileName , O_RDONLY | O_LARGEFILE )"		4235073	1					
ANR	4235115	Callee	safe_open_wrapper_follow		4235073	0					
ANR	4235116	Identifier	safe_open_wrapper_follow		4235073	0					
ANR	4235117	ArgumentList	JobHistoryFileName		4235073	1					
ANR	4235118	Argument	JobHistoryFileName		4235073	0					
ANR	4235119	Identifier	JobHistoryFileName		4235073	0					
ANR	4235120	Argument	O_RDONLY | O_LARGEFILE		4235073	1					
ANR	4235121	InclusiveOrExpression	O_RDONLY | O_LARGEFILE		4235073	0		|			
ANR	4235122	Identifier	O_RDONLY		4235073	0					
ANR	4235123	Identifier	O_LARGEFILE		4235073	1					
ANR	4235124	IfStatement	if ( fd < 0 )		4235073	6					
ANR	4235125	Condition	fd < 0	402:5:11263:11268	4235073	0	True				
ANR	4235126	RelationalExpression	fd < 0		4235073	0		<			
ANR	4235127	Identifier	fd		4235073	0					
ANR	4235128	PrimaryExpression	0		4235073	1					
ANR	4235129	CompoundStatement		10:13:215:215	4235073	1					
ANR	4235130	ExpressionStatement	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"	403:8:11281:11358	4235073	0	True				
ANR	4235131	CallExpression	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"		4235073	0					
ANR	4235132	Callee	fprintf		4235073	0					
ANR	4235133	Identifier	fprintf		4235073	0					
ANR	4235134	ArgumentList	stderr		4235073	1					
ANR	4235135	Argument	stderr		4235073	0					
ANR	4235136	Identifier	stderr		4235073	0					
ANR	4235137	Argument	"""History file (%s) not found or empty.\\n"""		4235073	1					
ANR	4235138	PrimaryExpression	"""History file (%s) not found or empty.\\n"""		4235073	0					
ANR	4235139	Argument	JobHistoryFileName		4235073	2					
ANR	4235140	Identifier	JobHistoryFileName		4235073	0					
ANR	4235141	ExpressionStatement	exit ( 1 )	404:8:11368:11375	4235073	1	True				
ANR	4235142	CallExpression	exit ( 1 )		4235073	0					
ANR	4235143	Callee	exit		4235073	0					
ANR	4235144	Identifier	exit		4235073	0					
ANR	4235145	ArgumentList	1		4235073	1					
ANR	4235146	Argument	1		4235073	0					
ANR	4235147	PrimaryExpression	1		4235073	0					
ANR	4235148	IdentifierDeclStatement	"FILE * LogFile = fdopen ( fd , ""r"" ) ;"	407:1:11389:11420	4235073	7	True				
ANR	4235149	IdentifierDecl	"* LogFile = fdopen ( fd , ""r"" )"		4235073	0					
ANR	4235150	IdentifierDeclType	FILE *		4235073	0					
ANR	4235151	Identifier	LogFile		4235073	1					
ANR	4235152	AssignmentExpression	"* LogFile = fdopen ( fd , ""r"" )"		4235073	2		=			
ANR	4235153	Identifier	LogFile		4235073	0					
ANR	4235154	CallExpression	"fdopen ( fd , ""r"" )"		4235073	1					
ANR	4235155	Callee	fdopen		4235073	0					
ANR	4235156	Identifier	fdopen		4235073	0					
ANR	4235157	ArgumentList	fd		4235073	1					
ANR	4235158	Argument	fd		4235073	0					
ANR	4235159	Identifier	fd		4235073	0					
ANR	4235160	Argument	"""r"""		4235073	1					
ANR	4235161	PrimaryExpression	"""r"""		4235073	0					
ANR	4235162	IfStatement	if ( ! LogFile )		4235073	8					
ANR	4235163	Condition	! LogFile	408:5:11427:11434	4235073	0	True				
ANR	4235164	UnaryOperationExpression	! LogFile		4235073	0					
ANR	4235165	UnaryOperator	!		4235073	0					
ANR	4235166	Identifier	LogFile		4235073	1					
ANR	4235167	CompoundStatement		16:15:381:381	4235073	1					
ANR	4235168	ExpressionStatement	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"	409:8:11447:11524	4235073	0	True				
ANR	4235169	CallExpression	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"		4235073	0					
ANR	4235170	Callee	fprintf		4235073	0					
ANR	4235171	Identifier	fprintf		4235073	0					
ANR	4235172	ArgumentList	stderr		4235073	1					
ANR	4235173	Argument	stderr		4235073	0					
ANR	4235174	Identifier	stderr		4235073	0					
ANR	4235175	Argument	"""History file (%s) not found or empty.\\n"""		4235073	1					
ANR	4235176	PrimaryExpression	"""History file (%s) not found or empty.\\n"""		4235073	0					
ANR	4235177	Argument	JobHistoryFileName		4235073	2					
ANR	4235178	Identifier	JobHistoryFileName		4235073	0					
ANR	4235179	ExpressionStatement	exit ( 1 )	410:8:11534:11541	4235073	1	True				
ANR	4235180	CallExpression	exit ( 1 )		4235073	0					
ANR	4235181	Callee	exit		4235073	0					
ANR	4235182	Identifier	exit		4235073	0					
ANR	4235183	ArgumentList	1		4235073	1					
ANR	4235184	Argument	1		4235073	0					
ANR	4235185	PrimaryExpression	1		4235073	0					
ANR	4235186	WhileStatement	while ( ! EndFlag )		4235073	9					
ANR	4235187	Condition	! EndFlag	414:10:11561:11568	4235073	0	True				
ANR	4235188	UnaryOperationExpression	! EndFlag		4235073	0					
ANR	4235189	UnaryOperator	!		4235073	0					
ANR	4235190	Identifier	EndFlag		4235073	1					
ANR	4235191	CompoundStatement		22:20:515:515	4235073	1					
ANR	4235192	IfStatement	"if ( ! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) ) )"		4235073	0					
ANR	4235193	Condition	"! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"	416:12:11586:11651	4235073	0	True				
ANR	4235194	UnaryOperationExpression	"! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"		4235073	0					
ANR	4235195	UnaryOperator	!		4235073	0					
ANR	4235196	AssignmentExpression	"ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag )"		4235073	1		=			
ANR	4235197	Identifier	ad		4235073	0					
ANR	4235198	Expression	"LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag"		4235073	1					
ANR	4235199	Identifier	LogFile		4235073	0					
ANR	4235200	Expression	"""***"" , EndFlag , ErrorFlag , EmptyFlag"		4235073	1					
ANR	4235201	PrimaryExpression	"""***"""		4235073	0					
ANR	4235202	Expression	"EndFlag , ErrorFlag , EmptyFlag"		4235073	1					
ANR	4235203	Identifier	EndFlag		4235073	0					
ANR	4235204	Expression	"ErrorFlag , EmptyFlag"		4235073	1					
ANR	4235205	Identifier	ErrorFlag		4235073	0					
ANR	4235206	Identifier	EmptyFlag		4235073	1					
ANR	4235207	CompoundStatement		24:80:598:598	4235073	1					
ANR	4235208	ExpressionStatement	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"	417:12:11668:11712	4235073	0	True				
ANR	4235209	CallExpression	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"		4235073	0					
ANR	4235210	Callee	fprintf		4235073	0					
ANR	4235211	Identifier	fprintf		4235073	0					
ANR	4235212	ArgumentList	stderr		4235073	1					
ANR	4235213	Argument	stderr		4235073	0					
ANR	4235214	Identifier	stderr		4235073	0					
ANR	4235215	Argument	"""Error:  Out of memory\\n"""		4235073	1					
ANR	4235216	PrimaryExpression	"""Error:  Out of memory\\n"""		4235073	0					
ANR	4235217	ExpressionStatement	exit ( 1 )	418:12:11726:11735	4235073	1	True				
ANR	4235218	CallExpression	exit ( 1 )		4235073	0					
ANR	4235219	Callee	exit		4235073	0					
ANR	4235220	Identifier	exit		4235073	0					
ANR	4235221	ArgumentList	1		4235073	1					
ANR	4235222	Argument	1		4235073	0					
ANR	4235223	PrimaryExpression	1		4235073	0					
ANR	4235224	IfStatement	if ( ErrorFlag )		4235073	1					
ANR	4235225	Condition	ErrorFlag	420:12:11760:11768	4235073	0	True				
ANR	4235226	Identifier	ErrorFlag		4235073	0					
ANR	4235227	CompoundStatement		28:24:716:716	4235073	1					
ANR	4235228	ExpressionStatement	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"	421:12:11786:11857	4235073	0	True				
ANR	4235229	CallExpression	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"		4235073	0					
ANR	4235230	Callee	printf		4235073	0					
ANR	4235231	Identifier	printf		4235073	0					
ANR	4235232	ArgumentList	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		4235073	1					
ANR	4235233	Argument	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		4235073	0					
ANR	4235234	PrimaryExpression	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		4235073	0					
ANR	4235235	ExpressionStatement	ErrorFlag = 0	422:12:11871:11882	4235073	1	True				
ANR	4235236	AssignmentExpression	ErrorFlag = 0		4235073	0		=			
ANR	4235237	Identifier	ErrorFlag		4235073	0					
ANR	4235238	PrimaryExpression	0		4235073	1					
ANR	4235239	IfStatement	if ( ad )		4235073	2					
ANR	4235240	Condition	ad	423:15:11899:11900	4235073	0	True				
ANR	4235241	Identifier	ad		4235073	0					
ANR	4235242	CompoundStatement		31:19:847:847	4235073	1					
ANR	4235243	Statement	delete	424:16:11921:11926	4235073	0	True				
ANR	4235244	ExpressionStatement	ad	424:23:11928:11930	4235073	1	True				
ANR	4235245	Identifier	ad		4235073	0					
ANR	4235246	ExpressionStatement	ad = NULL	425:16:11948:11957	4235073	2	True				
ANR	4235247	AssignmentExpression	ad = NULL		4235073	0		=			
ANR	4235248	Identifier	ad		4235073	0					
ANR	4235249	Identifier	NULL		4235073	1					
ANR	4235250	ContinueStatement	continue ;	427:12:11985:11993	4235073	3	True				
ANR	4235251	IfStatement	if ( EmptyFlag )		4235073	2					
ANR	4235252	Condition	EmptyFlag	429:12:12018:12026	4235073	0	True				
ANR	4235253	Identifier	EmptyFlag		4235073	0					
ANR	4235254	CompoundStatement		37:24:974:974	4235073	1					
ANR	4235255	ExpressionStatement	EmptyFlag = 0	430:12:12044:12055	4235073	0	True				
ANR	4235256	AssignmentExpression	EmptyFlag = 0		4235073	0		=			
ANR	4235257	Identifier	EmptyFlag		4235073	0					
ANR	4235258	PrimaryExpression	0		4235073	1					
ANR	4235259	IfStatement	if ( ad )		4235073	1					
ANR	4235260	Condition	ad	431:15:12072:12073	4235073	0	True				
ANR	4235261	Identifier	ad		4235073	0					
ANR	4235262	CompoundStatement		39:19:1020:1020	4235073	1					
ANR	4235263	Statement	delete	432:16:12094:12099	4235073	0	True				
ANR	4235264	ExpressionStatement	ad	432:23:12101:12103	4235073	1	True				
ANR	4235265	Identifier	ad		4235073	0					
ANR	4235266	ExpressionStatement	ad = NULL	433:16:12121:12130	4235073	2	True				
ANR	4235267	AssignmentExpression	ad = NULL		4235073	0		=			
ANR	4235268	Identifier	ad		4235073	0					
ANR	4235269	Identifier	NULL		4235073	1					
ANR	4235270	ContinueStatement	continue ;	435:12:12158:12166	4235073	2	True				
ANR	4235271	ExpressionStatement	insertHistoryJob ( ad )	438:2:12181:12201	4235073	3	True				
ANR	4235272	CallExpression	insertHistoryJob ( ad )		4235073	0					
ANR	4235273	Callee	insertHistoryJob		4235073	0					
ANR	4235274	Identifier	insertHistoryJob		4235073	0					
ANR	4235275	ArgumentList	ad		4235073	1					
ANR	4235276	Argument	ad		4235073	0					
ANR	4235277	Identifier	ad		4235073	0					
ANR	4235278	IfStatement	if ( ad )		4235073	4					
ANR	4235279	Condition	ad	440:11:12215:12216	4235073	0	True				
ANR	4235280	Identifier	ad		4235073	0					
ANR	4235281	CompoundStatement		48:15:1163:1163	4235073	1					
ANR	4235282	Statement	delete	441:12:12233:12238	4235073	0	True				
ANR	4235283	ExpressionStatement	ad	441:19:12240:12242	4235073	1	True				
ANR	4235284	Identifier	ad		4235073	0					
ANR	4235285	ExpressionStatement	ad = NULL	442:12:12256:12265	4235073	2	True				
ANR	4235286	AssignmentExpression	ad = NULL		4235073	0		=			
ANR	4235287	Identifier	ad		4235073	0					
ANR	4235288	Identifier	NULL		4235073	1					
ANR	4235289	ExpressionStatement	fclose ( LogFile )	445:4:12287:12302	4235073	10	True				
ANR	4235290	CallExpression	fclose ( LogFile )		4235073	0					
ANR	4235291	Callee	fclose		4235073	0					
ANR	4235292	Identifier	fclose		4235073	0					
ANR	4235293	ArgumentList	LogFile		4235073	1					
ANR	4235294	Argument	LogFile		4235073	0					
ANR	4235295	Identifier	LogFile		4235073	0					
ANR	4235296	ReturnStatement	return ;	446:4:12308:12314	4235073	11	True				
ANR	4235297	ReturnType	static void		4235073	1					
ANR	4235298	Identifier	readHistoryFromFile		4235073	2					
ANR	4235299	ParameterList	char * JobHistoryFileName		4235073	3					
ANR	4235300	Parameter	char * JobHistoryFileName	392:32:11029:11052	4235073	0	True				
ANR	4235301	ParameterType	char *		4235073	0					
ANR	4235302	Identifier	JobHistoryFileName		4235073	1					
ANR	4235303	CFGEntryNode	ENTRY		4235073		True				
ANR	4235304	CFGExitNode	EXIT		4235073		True				
ANR	4235305	Symbol	EndFlag		4235073						
ANR	4235306	Symbol	O_LARGEFILE		4235073						
ANR	4235307	Symbol	NULL		4235073						
ANR	4235308	Symbol	ad		4235073						
ANR	4235309	Symbol	safe_open_wrapper_follow		4235073						
ANR	4235310	Symbol	ErrorFlag		4235073						
ANR	4235311	Symbol	fdopen		4235073						
ANR	4235312	Symbol	stderr		4235073						
ANR	4235313	Symbol	LogFile		4235073						
ANR	4235314	Symbol	EmptyFlag		4235073						
ANR	4235315	Symbol	buf		4235073						
ANR	4235316	Symbol	O_RDONLY		4235073						
ANR	4235317	Symbol	JobHistoryFileName		4235073						
ANR	4235318	Symbol	fd		4235073						
ANR	4235319	DeclStmt									
ANR	4235320	Decl							int	int	cid
ANR	4235321	Decl							int	int	pid
ANR	4235322	DeclStmt									
ANR	4235323	Decl							MyString	MyString	sql_stmt
ANR	4235324	Decl							MyString	MyString	sql_stmt2
ANR	4235325	DeclStmt									
ANR	4235326	Decl							ExprTree	ExprTree *	expr
ANR	4235327	DeclStmt									
ANR	4235328	Decl							ExprTree	ExprTree *	L_expr
ANR	4235329	DeclStmt									
ANR	4235330	Decl							ExprTree	ExprTree *	R_expr
ANR	4235331	DeclStmt									
ANR	4235332	Decl							MyString	MyString	name
ANR	4235333	Decl							MyString	MyString	value
ANR	4235334	DeclStmt									
ANR	4235335	Decl							MyString	MyString	newvalue
ANR	4235336	DeclStmt									
ANR	4235337	Decl							bool	bool	flag1
ANR	4235338	Decl							bool	bool	flag2
ANR	4235339	Decl							bool	bool	flag3
ANR	4235340	Decl							bool	bool	flag4
ANR	4235341	DeclStmt									
ANR	4235342	Decl							const char	const char *	scheddname
ANR	4235343	DeclStmt									
ANR	4235344	Decl							time_t	time_t	clock
ANR	4235345	DeclStmt									
ANR	4235346	Decl							MyString	MyString	ts_expr
