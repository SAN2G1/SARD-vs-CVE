command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	583119	File	data/converged/CVE-2011-4930_htcondor/Trie.cpp								
ANR	583120	Function	Trie :: Trie	43:0:1013:1240							
ANR	583121	FunctionDef	Trie :: Trie ()		583120	0					
ANR	583122	CompoundStatement		44:0:1030:1240	583120	0					
ANR	583123	Statement	root	45:1:1033:1036	583120	0	True				
ANR	583124	Statement	=	45:6:1038:1038	583120	1	True				
ANR	583125	Statement	new	45:8:1040:1042	583120	2	True				
ANR	583126	ExpressionStatement	Trie_Node	45:12:1044:1053	583120	3	True				
ANR	583127	Identifier	Trie_Node		583120	0					
ANR	583128	IfStatement	if ( NULL == root )		583120	4					
ANR	583129	Condition	NULL == root	46:5:1060:1069	583120	0	True				
ANR	583130	EqualityExpression	NULL == root		583120	0		==			
ANR	583131	Identifier	NULL		583120	0					
ANR	583132	Identifier	root		583120	1					
ANR	583133	ThrowStatement	"throw ""Trie::Trie, root is NULL"" ;"	47:2:1075:1107	583120	1	True				
ANR	583134	PrimaryExpression	"""Trie::Trie, root is NULL"""		583120	0					
ANR	583135	ExpressionStatement	root -> letter = 'a'	49:1:1111:1129	583120	5	True				
ANR	583136	AssignmentExpression	root -> letter = 'a'		583120	0		=			
ANR	583137	PtrMemberAccess	root -> letter		583120	0					
ANR	583138	Identifier	root		583120	0					
ANR	583139	Identifier	letter		583120	1					
ANR	583140	PrimaryExpression	'a'		583120	1					
ANR	583141	ExpressionStatement	root -> id = - 1	50:1:1132:1145	583120	6	True				
ANR	583142	AssignmentExpression	root -> id = - 1		583120	0		=			
ANR	583143	PtrMemberAccess	root -> id		583120	0					
ANR	583144	Identifier	root		583120	0					
ANR	583145	Identifier	id		583120	1					
ANR	583146	UnaryOperationExpression	- 1		583120	1					
ANR	583147	UnaryOperator	-		583120	0					
ANR	583148	PrimaryExpression	1		583120	1					
ANR	583149	ExpressionStatement	root -> child = NULL	51:1:1197:1215	583120	7	True				
ANR	583150	AssignmentExpression	root -> child = NULL		583120	0		=			
ANR	583151	PtrMemberAccess	root -> child		583120	0					
ANR	583152	Identifier	root		583120	0					
ANR	583153	Identifier	child		583120	1					
ANR	583154	Identifier	NULL		583120	1					
ANR	583155	ExpressionStatement	root -> sibling = NULL	52:1:1218:1238	583120	8	True				
ANR	583156	AssignmentExpression	root -> sibling = NULL		583120	0		=			
ANR	583157	PtrMemberAccess	root -> sibling		583120	0					
ANR	583158	Identifier	root		583120	0					
ANR	583159	Identifier	sibling		583120	1					
ANR	583160	Identifier	NULL		583120	1					
ANR	583161	Identifier	Trie :: Trie		583120	1					
ANR	583162	ParameterList			583120	2					
ANR	583163	CFGEntryNode	ENTRY		583120		True				
ANR	583164	CFGExitNode	EXIT		583120		True				
ANR	583165	CFGExceptionNode	EXCEPTION		583120		True				
ANR	583166	Symbol	NULL		583120						
ANR	583167	Symbol	root -> letter		583120						
ANR	583168	Symbol	root -> sibling		583120						
ANR	583169	Symbol	root		583120						
ANR	583170	Symbol	* root		583120						
ANR	583171	Symbol	root -> id		583120						
ANR	583172	Symbol	root -> child		583120						
ANR	583173	Function	Trie :: ~Trie	70:0:1436:1494							
ANR	583174	FunctionDef	Trie :: ~Trie ()		583173	0					
ANR	583175	CompoundStatement		71:0:1454:1494	583173	0					
ANR	583176	ExpressionStatement	removeRecursive ( root )	72:1:1457:1478	583173	0	True				
ANR	583177	CallExpression	removeRecursive ( root )		583173	0					
ANR	583178	Callee	removeRecursive		583173	0					
ANR	583179	Identifier	removeRecursive		583173	0					
ANR	583180	ArgumentList	root		583173	1					
ANR	583181	Argument	root		583173	0					
ANR	583182	Identifier	root		583173	0					
ANR	583183	ExpressionStatement	root = NULL	73:1:1481:1492	583173	1	True				
ANR	583184	AssignmentExpression	root = NULL		583173	0		=			
ANR	583185	Identifier	root		583173	0					
ANR	583186	Identifier	NULL		583173	1					
ANR	583187	Identifier	Trie :: ~Trie		583173	1					
ANR	583188	ParameterList			583173	2					
ANR	583189	CFGEntryNode	ENTRY		583173		True				
ANR	583190	CFGExitNode	EXIT		583173		True				
ANR	583191	Symbol	NULL		583173						
ANR	583192	Symbol	root		583173						
ANR	583193	Function	Trie :: removeRecursive	90:0:1683:1867							
ANR	583194	FunctionDef	Trie :: removeRecursive (Trie_Node * node)		583193	0					
ANR	583195	CompoundStatement		91:0:1729:1867	583193	0					
ANR	583196	IdentifierDeclStatement	Trie_Node * temp ;	92:1:1732:1747	583193	0	True				
ANR	583197	IdentifierDecl	* temp		583193	0					
ANR	583198	IdentifierDeclType	Trie_Node *		583193	0					
ANR	583199	Identifier	temp		583193	1					
ANR	583200	WhileStatement	while ( NULL != node )		583193	1					
ANR	583201	Condition	NULL != node	94:8:1758:1769	583193	0	True				
ANR	583202	EqualityExpression	NULL != node		583193	0		!=			
ANR	583203	Identifier	NULL		583193	0					
ANR	583204	Identifier	node		583193	1					
ANR	583205	CompoundStatement		4:23:43:43	583193	1					
ANR	583206	ExpressionStatement	removeRecursive ( node -> child )	95:2:1777:1807	583193	0	True				
ANR	583207	CallExpression	removeRecursive ( node -> child )		583193	0					
ANR	583208	Callee	removeRecursive		583193	0					
ANR	583209	Identifier	removeRecursive		583193	0					
ANR	583210	ArgumentList	node -> child		583193	1					
ANR	583211	Argument	node -> child		583193	0					
ANR	583212	PtrMemberAccess	node -> child		583193	0					
ANR	583213	Identifier	node		583193	0					
ANR	583214	Identifier	child		583193	1					
ANR	583215	ExpressionStatement	temp = node	96:2:1811:1822	583193	1	True				
ANR	583216	AssignmentExpression	temp = node		583193	0		=			
ANR	583217	Identifier	temp		583193	0					
ANR	583218	Identifier	node		583193	1					
ANR	583219	ExpressionStatement	node = node -> sibling	97:2:1826:1846	583193	2	True				
ANR	583220	AssignmentExpression	node = node -> sibling		583193	0		=			
ANR	583221	Identifier	node		583193	0					
ANR	583222	PtrMemberAccess	node -> sibling		583193	1					
ANR	583223	Identifier	node		583193	0					
ANR	583224	Identifier	sibling		583193	1					
ANR	583225	Statement	delete	98:2:1850:1855	583193	3	True				
ANR	583226	ExpressionStatement	temp	98:9:1857:1861	583193	4	True				
ANR	583227	Identifier	temp		583193	0					
ANR	583228	ExpressionStatement		99:2:1865:1865	583193	2	True				
ANR	583229	ReturnType	void		583193	1					
ANR	583230	Identifier	Trie :: removeRecursive		583193	2					
ANR	583231	ParameterList	Trie_Node * node		583193	3					
ANR	583232	Parameter	Trie_Node * node	90:28:1711:1725	583193	0	True				
ANR	583233	ParameterType	Trie_Node *		583193	0					
ANR	583234	Identifier	node		583193	1					
ANR	583235	CFGEntryNode	ENTRY		583193		True				
ANR	583236	CFGExitNode	EXIT		583193		True				
ANR	583237	Symbol	node		583193						
ANR	583238	Symbol	temp		583193						
ANR	583239	Symbol	NULL		583193						
ANR	583240	Symbol	* node		583193						
ANR	583241	Symbol	node -> child		583193						
ANR	583242	Symbol	node -> sibling		583193						
ANR	583243	Function	Trie :: add	119:0:2201:4436							
ANR	583244	FunctionDef	"Trie :: add (const char * string , int id)"		583243	0					
ANR	583245	CompoundStatement		120:0:2246:4436	583243	0					
ANR	583246	IdentifierDeclStatement	Trie_Node * node ;	121:1:2249:2264	583243	0	True				
ANR	583247	IdentifierDecl	* node		583243	0					
ANR	583248	IdentifierDeclType	Trie_Node *		583243	0					
ANR	583249	Identifier	node		583243	1					
ANR	583250	IdentifierDeclStatement	int i ;	122:1:2267:2272	583243	1	True				
ANR	583251	IdentifierDecl	i		583243	0					
ANR	583252	IdentifierDeclType	int		583243	0					
ANR	583253	Identifier	i		583243	1					
ANR	583254	IfStatement	if ( NULL == string || '\\0' == string [ 0 ] )		583243	2					
ANR	583255	Condition	NULL == string || '\\0' == string [ 0 ]	125:5:2315:2345	583243	0	True				
ANR	583256	OrExpression	NULL == string || '\\0' == string [ 0 ]		583243	0		||			
ANR	583257	EqualityExpression	NULL == string		583243	0		==			
ANR	583258	Identifier	NULL		583243	0					
ANR	583259	Identifier	string		583243	1					
ANR	583260	EqualityExpression	'\\0' == string [ 0 ]		583243	1		==			
ANR	583261	PrimaryExpression	'\\0'		583243	0					
ANR	583262	ArrayIndexing	string [ 0 ]		583243	1					
ANR	583263	Identifier	string		583243	0					
ANR	583264	PrimaryExpression	0		583243	1					
ANR	583265	ThrowStatement	"throw ""Trie::add, null or empty string"" ;"	126:2:2351:2390	583243	1	True				
ANR	583266	PrimaryExpression	"""Trie::add, null or empty string"""		583243	0					
ANR	583267	IfStatement	if ( id < 0 )		583243	3					
ANR	583268	Condition	id < 0	129:5:2426:2429	583243	0	True				
ANR	583269	RelationalExpression	id < 0		583243	0		<			
ANR	583270	Identifier	id		583243	0					
ANR	583271	PrimaryExpression	0		583243	1					
ANR	583272	ThrowStatement	"throw ""Trie::add, negative id"" ;"	130:2:2435:2465	583243	1	True				
ANR	583273	PrimaryExpression	"""Trie::add, negative id"""		583243	0					
ANR	583274	ExpressionStatement	i = 0	133:1:2494:2497	583243	4	True				
ANR	583275	AssignmentExpression	i = 0		583243	0		=			
ANR	583276	Identifier	i		583243	0					
ANR	583277	PrimaryExpression	0		583243	1					
ANR	583278	ExpressionStatement	node = root	134:1:2500:2511	583243	5	True				
ANR	583279	AssignmentExpression	node = root		583243	0		=			
ANR	583280	Identifier	node		583243	0					
ANR	583281	Identifier	root		583243	1					
ANR	583282	WhileStatement	while ( true )		583243	6					
ANR	583283	Condition	true	135:8:2521:2524	583243	0	True				
ANR	583284	Identifier	true		583243	0					
ANR	583285	CompoundStatement		24:2:471:489	583243	1					
ANR	583286	IfStatement	if ( i > 10000 )		583243	0					
ANR	583287	Condition	i > 10000	138:6:2588:2594	583243	0	True				
ANR	583288	RelationalExpression	i > 10000		583243	0		>			
ANR	583289	Identifier	i		583243	0					
ANR	583290	PrimaryExpression	10000		583243	1					
ANR	583291	ThrowStatement	"throw ""Trie::add, lack of zero?"" ;"	139:3:2601:2633	583243	1	True				
ANR	583292	PrimaryExpression	"""Trie::add, lack of zero?"""		583243	0					
ANR	583293	IdentifierDeclStatement	Trie_Node * temp = node ;	142:2:2692:2714	583243	1	True				
ANR	583294	IdentifierDecl	* temp = node		583243	0					
ANR	583295	IdentifierDeclType	Trie_Node *		583243	0					
ANR	583296	Identifier	temp		583243	1					
ANR	583297	AssignmentExpression	* temp = node		583243	2		=			
ANR	583298	Identifier	node		583243	0					
ANR	583299	Identifier	node		583243	1					
ANR	583300	IdentifierDeclStatement	bool found = false ;	143:2:2718:2736	583243	2	True				
ANR	583301	IdentifierDecl	found = false		583243	0					
ANR	583302	IdentifierDeclType	bool		583243	0					
ANR	583303	Identifier	found		583243	1					
ANR	583304	AssignmentExpression	found = false		583243	2		=			
ANR	583305	Identifier	false		583243	0					
ANR	583306	Identifier	false		583243	1					
ANR	583307	WhileStatement	while ( true )		583243	3					
ANR	583308	Condition	true	144:9:2747:2750	583243	0	True				
ANR	583309	Identifier	true		583243	0					
ANR	583310	CompoundStatement		25:16:507:507	583243	1					
ANR	583311	IfStatement	if ( temp -> letter == string [ i ] )		583243	0					
ANR	583312	Condition	temp -> letter == string [ i ]	145:7:2763:2787	583243	0	True				
ANR	583313	EqualityExpression	temp -> letter == string [ i ]		583243	0		==			
ANR	583314	PtrMemberAccess	temp -> letter		583243	0					
ANR	583315	Identifier	temp		583243	0					
ANR	583316	Identifier	letter		583243	1					
ANR	583317	ArrayIndexing	string [ i ]		583243	1					
ANR	583318	Identifier	string		583243	0					
ANR	583319	Identifier	i		583243	1					
ANR	583320	CompoundStatement		26:35:544:544	583243	1					
ANR	583321	ExpressionStatement	found = true	146:4:2797:2809	583243	0	True				
ANR	583322	AssignmentExpression	found = true		583243	0		=			
ANR	583323	Identifier	found		583243	0					
ANR	583324	Identifier	true		583243	1					
ANR	583325	BreakStatement	break ;	147:4:2815:2820	583243	1	True				
ANR	583326	ExpressionStatement		148:4:2826:2826	583243	1	True				
ANR	583327	IfStatement	if ( NULL != temp -> sibling )		583243	2					
ANR	583328	Condition	NULL != temp -> sibling	149:7:2835:2855	583243	0	True				
ANR	583329	EqualityExpression	NULL != temp -> sibling		583243	0		!=			
ANR	583330	Identifier	NULL		583243	0					
ANR	583331	PtrMemberAccess	temp -> sibling		583243	1					
ANR	583332	Identifier	temp		583243	0					
ANR	583333	Identifier	sibling		583243	1					
ANR	583334	ExpressionStatement	temp = temp -> sibling	150:4:2863:2883	583243	1	True				
ANR	583335	AssignmentExpression	temp = temp -> sibling		583243	0		=			
ANR	583336	Identifier	temp		583243	0					
ANR	583337	PtrMemberAccess	temp -> sibling		583243	1					
ANR	583338	Identifier	temp		583243	0					
ANR	583339	Identifier	sibling		583243	1					
ANR	583340	ElseStatement	else		583243	0					
ANR	583341	BreakStatement	break ;	152:4:2897:2902	583243	0	True				
ANR	583342	ExpressionStatement		153:3:2907:2907	583243	4	True				
ANR	583343	IfStatement	if ( found )		583243	5					
ANR	583344	Condition	found	155:6:2916:2920	583243	0	True				
ANR	583345	Identifier	found		583243	0					
ANR	583346	CompoundStatement		36:14:677:677	583243	1					
ANR	583347	IfStatement	if ( '\\0' == string [ i + 1 ] )		583243	0					
ANR	583348	Condition	'\\0' == string [ i + 1 ]	158:7:3013:3031	583243	0	True				
ANR	583349	EqualityExpression	'\\0' == string [ i + 1 ]		583243	0		==			
ANR	583350	PrimaryExpression	'\\0'		583243	0					
ANR	583351	ArrayIndexing	string [ i + 1 ]		583243	1					
ANR	583352	Identifier	string		583243	0					
ANR	583353	AdditiveExpression	i + 1		583243	1		+			
ANR	583354	Identifier	i		583243	0					
ANR	583355	PrimaryExpression	1		583243	1					
ANR	583356	CompoundStatement		39:29:788:788	583243	1					
ANR	583357	IfStatement	if ( - 1 != temp -> id )		583243	0					
ANR	583358	Condition	- 1 != temp -> id	161:8:3096:3109	583243	0	True				
ANR	583359	EqualityExpression	- 1 != temp -> id		583243	0		!=			
ANR	583360	UnaryOperationExpression	- 1		583243	0					
ANR	583361	UnaryOperator	-		583243	0					
ANR	583362	PrimaryExpression	1		583243	1					
ANR	583363	PtrMemberAccess	temp -> id		583243	1					
ANR	583364	Identifier	temp		583243	0					
ANR	583365	Identifier	id		583243	1					
ANR	583366	CompoundStatement		42:25:866:866	583243	1					
ANR	583367	ThrowStatement	"throw ""Trie::add, string already exists\\n"" ;"	162:5:3120:3162	583243	0	True				
ANR	583368	PrimaryExpression	"""Trie::add, string already exists\\n"""		583243	0					
ANR	583369	ElseStatement	else		583243	0					
ANR	583370	CompoundStatement		45:9:932:932	583243	0					
ANR	583371	ExpressionStatement	temp -> id = id	165:5:3186:3199	583243	0	True				
ANR	583372	AssignmentExpression	temp -> id = id		583243	0		=			
ANR	583373	PtrMemberAccess	temp -> id		583243	0					
ANR	583374	Identifier	temp		583243	0					
ANR	583375	Identifier	id		583243	1					
ANR	583376	Identifier	id		583243	1					
ANR	583377	BreakStatement	break ;	166:5:3206:3211	583243	1	True				
ANR	583378	ExpressionStatement		167:5:3218:3218	583243	1	True				
ANR	583379	ElseStatement	else		583243	0					
ANR	583380	CompoundStatement		51:8:1064:1064	583243	0					
ANR	583381	IfStatement	if ( NULL != temp -> child )		583243	0					
ANR	583382	Condition	NULL != temp -> child	173:8:3374:3392	583243	0	True				
ANR	583383	EqualityExpression	NULL != temp -> child		583243	0		!=			
ANR	583384	Identifier	NULL		583243	0					
ANR	583385	PtrMemberAccess	temp -> child		583243	1					
ANR	583386	Identifier	temp		583243	0					
ANR	583387	Identifier	child		583243	1					
ANR	583388	CompoundStatement		54:30:1149:1149	583243	1					
ANR	583389	ExpressionStatement	node = temp -> child	174:5:3403:3421	583243	0	True				
ANR	583390	AssignmentExpression	node = temp -> child		583243	0		=			
ANR	583391	Identifier	node		583243	0					
ANR	583392	PtrMemberAccess	temp -> child		583243	1					
ANR	583393	Identifier	temp		583243	0					
ANR	583394	Identifier	child		583243	1					
ANR	583395	ExpressionStatement	i ++	175:5:3428:3431	583243	1	True				
ANR	583396	PostIncDecOperationExpression	i ++		583243	0					
ANR	583397	Identifier	i		583243	0					
ANR	583398	IncDec	++		583243	1					
ANR	583399	ElseStatement	else		583243	0					
ANR	583400	CompoundStatement		58:9:1201:1201	583243	0					
ANR	583401	WhileStatement	while ( '\\0' != string [ i + 1 ] )		583243	0					
ANR	583402	Condition	'\\0' != string [ i + 1 ]	180:12:3549:3567	583243	0	True				
ANR	583403	EqualityExpression	'\\0' != string [ i + 1 ]		583243	0		!=			
ANR	583404	PrimaryExpression	'\\0'		583243	0					
ANR	583405	ArrayIndexing	string [ i + 1 ]		583243	1					
ANR	583406	Identifier	string		583243	0					
ANR	583407	AdditiveExpression	i + 1		583243	1		+			
ANR	583408	Identifier	i		583243	0					
ANR	583409	PrimaryExpression	1		583243	1					
ANR	583410	CompoundStatement		61:34:1324:1324	583243	1					
ANR	583411	ExpressionStatement	i ++	181:6:3579:3582	583243	0	True				
ANR	583412	PostIncDecOperationExpression	i ++		583243	0					
ANR	583413	Identifier	i		583243	0					
ANR	583414	IncDec	++		583243	1					
ANR	583415	Statement	temp	182:6:3590:3593	583243	1	True				
ANR	583416	Statement	->	182:10:3594:3595	583243	2	True				
ANR	583417	Statement	child	182:12:3596:3600	583243	3	True				
ANR	583418	Statement	=	182:18:3602:3602	583243	4	True				
ANR	583419	Statement	new	182:20:3604:3606	583243	5	True				
ANR	583420	ExpressionStatement	Trie_Node	182:24:3608:3617	583243	6	True				
ANR	583421	Identifier	Trie_Node		583243	0					
ANR	583422	ExpressionStatement	temp = temp -> child	183:6:3625:3643	583243	7	True				
ANR	583423	AssignmentExpression	temp = temp -> child		583243	0		=			
ANR	583424	Identifier	temp		583243	0					
ANR	583425	PtrMemberAccess	temp -> child		583243	1					
ANR	583426	Identifier	temp		583243	0					
ANR	583427	Identifier	child		583243	1					
ANR	583428	ExpressionStatement	temp -> child = NULL	184:6:3651:3669	583243	8	True				
ANR	583429	AssignmentExpression	temp -> child = NULL		583243	0		=			
ANR	583430	PtrMemberAccess	temp -> child		583243	0					
ANR	583431	Identifier	temp		583243	0					
ANR	583432	Identifier	child		583243	1					
ANR	583433	Identifier	NULL		583243	1					
ANR	583434	ExpressionStatement	temp -> id = - 1	185:6:3677:3690	583243	9	True				
ANR	583435	AssignmentExpression	temp -> id = - 1		583243	0		=			
ANR	583436	PtrMemberAccess	temp -> id		583243	0					
ANR	583437	Identifier	temp		583243	0					
ANR	583438	Identifier	id		583243	1					
ANR	583439	UnaryOperationExpression	- 1		583243	1					
ANR	583440	UnaryOperator	-		583243	0					
ANR	583441	PrimaryExpression	1		583243	1					
ANR	583442	ExpressionStatement	temp -> letter = string [ i ]	186:6:3698:3722	583243	10	True				
ANR	583443	AssignmentExpression	temp -> letter = string [ i ]		583243	0		=			
ANR	583444	PtrMemberAccess	temp -> letter		583243	0					
ANR	583445	Identifier	temp		583243	0					
ANR	583446	Identifier	letter		583243	1					
ANR	583447	ArrayIndexing	string [ i ]		583243	1					
ANR	583448	Identifier	string		583243	0					
ANR	583449	Identifier	i		583243	1					
ANR	583450	ExpressionStatement	temp -> sibling = NULL	187:6:3730:3750	583243	11	True				
ANR	583451	AssignmentExpression	temp -> sibling = NULL		583243	0		=			
ANR	583452	PtrMemberAccess	temp -> sibling		583243	0					
ANR	583453	Identifier	temp		583243	0					
ANR	583454	Identifier	sibling		583243	1					
ANR	583455	Identifier	NULL		583243	1					
ANR	583456	ExpressionStatement		188:6:3758:3758	583243	1	True				
ANR	583457	ExpressionStatement	temp -> id = id	189:5:3765:3778	583243	2	True				
ANR	583458	AssignmentExpression	temp -> id = id		583243	0		=			
ANR	583459	PtrMemberAccess	temp -> id		583243	0					
ANR	583460	Identifier	temp		583243	0					
ANR	583461	Identifier	id		583243	1					
ANR	583462	Identifier	id		583243	1					
ANR	583463	BreakStatement	break ;	190:5:3785:3790	583243	3	True				
ANR	583464	ExpressionStatement		191:5:3797:3797	583243	1	True				
ANR	583465	ExpressionStatement		193:4:3820:3820	583243	1	True				
ANR	583466	ElseStatement	else		583243	0					
ANR	583467	CompoundStatement		77:7:1587:1587	583243	0					
ANR	583468	Statement	temp	201:3:3976:3979	583243	0	True				
ANR	583469	Statement	->	201:7:3980:3981	583243	1	True				
ANR	583470	Statement	sibling	201:9:3982:3988	583243	2	True				
ANR	583471	Statement	=	201:17:3990:3990	583243	3	True				
ANR	583472	Statement	new	201:19:3992:3994	583243	4	True				
ANR	583473	ExpressionStatement	Trie_Node	201:23:3996:4005	583243	5	True				
ANR	583474	Identifier	Trie_Node		583243	0					
ANR	583475	ExpressionStatement	temp = temp -> sibling	202:3:4010:4030	583243	6	True				
ANR	583476	AssignmentExpression	temp = temp -> sibling		583243	0		=			
ANR	583477	Identifier	temp		583243	0					
ANR	583478	PtrMemberAccess	temp -> sibling		583243	1					
ANR	583479	Identifier	temp		583243	0					
ANR	583480	Identifier	sibling		583243	1					
ANR	583481	ExpressionStatement	temp -> child = NULL	203:3:4035:4053	583243	7	True				
ANR	583482	AssignmentExpression	temp -> child = NULL		583243	0		=			
ANR	583483	PtrMemberAccess	temp -> child		583243	0					
ANR	583484	Identifier	temp		583243	0					
ANR	583485	Identifier	child		583243	1					
ANR	583486	Identifier	NULL		583243	1					
ANR	583487	ExpressionStatement	temp -> id = - 1	204:3:4058:4071	583243	8	True				
ANR	583488	AssignmentExpression	temp -> id = - 1		583243	0		=			
ANR	583489	PtrMemberAccess	temp -> id		583243	0					
ANR	583490	Identifier	temp		583243	0					
ANR	583491	Identifier	id		583243	1					
ANR	583492	UnaryOperationExpression	- 1		583243	1					
ANR	583493	UnaryOperator	-		583243	0					
ANR	583494	PrimaryExpression	1		583243	1					
ANR	583495	ExpressionStatement	temp -> letter = string [ i ]	205:3:4076:4100	583243	9	True				
ANR	583496	AssignmentExpression	temp -> letter = string [ i ]		583243	0		=			
ANR	583497	PtrMemberAccess	temp -> letter		583243	0					
ANR	583498	Identifier	temp		583243	0					
ANR	583499	Identifier	letter		583243	1					
ANR	583500	ArrayIndexing	string [ i ]		583243	1					
ANR	583501	Identifier	string		583243	0					
ANR	583502	Identifier	i		583243	1					
ANR	583503	ExpressionStatement	temp -> sibling = NULL	206:3:4105:4125	583243	10	True				
ANR	583504	AssignmentExpression	temp -> sibling = NULL		583243	0		=			
ANR	583505	PtrMemberAccess	temp -> sibling		583243	0					
ANR	583506	Identifier	temp		583243	0					
ANR	583507	Identifier	sibling		583243	1					
ANR	583508	Identifier	NULL		583243	1					
ANR	583509	ExpressionStatement	i ++	207:3:4130:4133	583243	11	True				
ANR	583510	PostIncDecOperationExpression	i ++		583243	0					
ANR	583511	Identifier	i		583243	0					
ANR	583512	IncDec	++		583243	1					
ANR	583513	WhileStatement	while ( '\\0' != string [ i ] )		583243	12					
ANR	583514	Condition	'\\0' != string [ i ]	210:10:4205:4221	583243	0	True				
ANR	583515	EqualityExpression	'\\0' != string [ i ]		583243	0		!=			
ANR	583516	PrimaryExpression	'\\0'		583243	0					
ANR	583517	ArrayIndexing	string [ i ]		583243	1					
ANR	583518	Identifier	string		583243	0					
ANR	583519	Identifier	i		583243	1					
ANR	583520	CompoundStatement		91:30:1978:1978	583243	1					
ANR	583521	Statement	temp	211:4:4231:4234	583243	0	True				
ANR	583522	Statement	->	211:8:4235:4236	583243	1	True				
ANR	583523	Statement	child	211:10:4237:4241	583243	2	True				
ANR	583524	Statement	=	211:16:4243:4243	583243	3	True				
ANR	583525	Statement	new	211:18:4245:4247	583243	4	True				
ANR	583526	ExpressionStatement	Trie_Node	211:22:4249:4258	583243	5	True				
ANR	583527	Identifier	Trie_Node		583243	0					
ANR	583528	ExpressionStatement	temp = temp -> child	212:4:4264:4282	583243	6	True				
ANR	583529	AssignmentExpression	temp = temp -> child		583243	0		=			
ANR	583530	Identifier	temp		583243	0					
ANR	583531	PtrMemberAccess	temp -> child		583243	1					
ANR	583532	Identifier	temp		583243	0					
ANR	583533	Identifier	child		583243	1					
ANR	583534	ExpressionStatement	temp -> child = NULL	213:4:4288:4306	583243	7	True				
ANR	583535	AssignmentExpression	temp -> child = NULL		583243	0		=			
ANR	583536	PtrMemberAccess	temp -> child		583243	0					
ANR	583537	Identifier	temp		583243	0					
ANR	583538	Identifier	child		583243	1					
ANR	583539	Identifier	NULL		583243	1					
ANR	583540	ExpressionStatement	temp -> id = - 1	214:4:4312:4325	583243	8	True				
ANR	583541	AssignmentExpression	temp -> id = - 1		583243	0		=			
ANR	583542	PtrMemberAccess	temp -> id		583243	0					
ANR	583543	Identifier	temp		583243	0					
ANR	583544	Identifier	id		583243	1					
ANR	583545	UnaryOperationExpression	- 1		583243	1					
ANR	583546	UnaryOperator	-		583243	0					
ANR	583547	PrimaryExpression	1		583243	1					
ANR	583548	ExpressionStatement	temp -> letter = string [ i ]	215:4:4331:4355	583243	9	True				
ANR	583549	AssignmentExpression	temp -> letter = string [ i ]		583243	0		=			
ANR	583550	PtrMemberAccess	temp -> letter		583243	0					
ANR	583551	Identifier	temp		583243	0					
ANR	583552	Identifier	letter		583243	1					
ANR	583553	ArrayIndexing	string [ i ]		583243	1					
ANR	583554	Identifier	string		583243	0					
ANR	583555	Identifier	i		583243	1					
ANR	583556	ExpressionStatement	temp -> sibling = NULL	216:4:4361:4381	583243	10	True				
ANR	583557	AssignmentExpression	temp -> sibling = NULL		583243	0		=			
ANR	583558	PtrMemberAccess	temp -> sibling		583243	0					
ANR	583559	Identifier	temp		583243	0					
ANR	583560	Identifier	sibling		583243	1					
ANR	583561	Identifier	NULL		583243	1					
ANR	583562	ExpressionStatement	i ++	217:4:4387:4390	583243	11	True				
ANR	583563	PostIncDecOperationExpression	i ++		583243	0					
ANR	583564	Identifier	i		583243	0					
ANR	583565	IncDec	++		583243	1					
ANR	583566	ExpressionStatement		218:4:4396:4396	583243	13	True				
ANR	583567	ExpressionStatement	temp -> id = id	219:3:4401:4414	583243	14	True				
ANR	583568	AssignmentExpression	temp -> id = id		583243	0		=			
ANR	583569	PtrMemberAccess	temp -> id		583243	0					
ANR	583570	Identifier	temp		583243	0					
ANR	583571	Identifier	id		583243	1					
ANR	583572	Identifier	id		583243	1					
ANR	583573	BreakStatement	break ;	220:3:4419:4424	583243	15	True				
ANR	583574	ExpressionStatement		221:3:4429:4429	583243	6	True				
ANR	583575	ExpressionStatement		223:2:4434:4434	583243	7	True				
ANR	583576	ReturnType	void		583243	1					
ANR	583577	Identifier	Trie :: add		583243	2					
ANR	583578	ParameterList	"const char * string , int id"		583243	3					
ANR	583579	Parameter	const char * string	119:16:2217:2234	583243	0	True				
ANR	583580	ParameterType	const char *		583243	0					
ANR	583581	Identifier	string		583243	1					
ANR	583582	Parameter	int id	119:36:2237:2242	583243	1	True				
ANR	583583	ParameterType	int		583243	0					
ANR	583584	Identifier	id		583243	1					
ANR	583585	CFGEntryNode	ENTRY		583243		True				
ANR	583586	CFGExitNode	EXIT		583243		True				
ANR	583587	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583588	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583589	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583590	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583591	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583592	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583593	CFGExceptionNode	EXCEPTION		583243		True				
ANR	583594	Symbol	temp		583243						
ANR	583595	Symbol	NULL		583243						
ANR	583596	Symbol	temp -> child		583243						
ANR	583597	Symbol	string		583243						
ANR	583598	Symbol	false		583243						
ANR	583599	Symbol	temp -> sibling		583243						
ANR	583600	Symbol	i		583243						
ANR	583601	Symbol	* string		583243						
ANR	583602	Symbol	temp -> id		583243						
ANR	583603	Symbol	* temp		583243						
ANR	583604	Symbol	temp -> letter		583243						
ANR	583605	Symbol	node		583243						
ANR	583606	Symbol	found		583243						
ANR	583607	Symbol	* i		583243						
ANR	583608	Symbol	root		583243						
ANR	583609	Symbol	true		583243						
ANR	583610	Symbol	id		583243						
ANR	583611	Function	Trie :: find	242:0:4743:5820							
ANR	583612	FunctionDef	Trie :: find (const char * string)		583611	0					
ANR	583613	CompoundStatement		243:0:4786:5820	583611	0					
ANR	583614	IdentifierDeclStatement	Trie_Node * node ;	244:1:4789:4804	583611	0	True				
ANR	583615	IdentifierDecl	* node		583611	0					
ANR	583616	IdentifierDeclType	Trie_Node *		583611	0					
ANR	583617	Identifier	node		583611	1					
ANR	583618	IdentifierDeclStatement	int i ;	245:1:4807:4812	583611	1	True				
ANR	583619	IdentifierDecl	i		583611	0					
ANR	583620	IdentifierDeclType	int		583611	0					
ANR	583621	Identifier	i		583611	1					
ANR	583622	IfStatement	if ( NULL == string || '\\0' == string [ 0 ] )		583611	2					
ANR	583623	Condition	NULL == string || '\\0' == string [ 0 ]	248:5:4855:4885	583611	0	True				
ANR	583624	OrExpression	NULL == string || '\\0' == string [ 0 ]		583611	0		||			
ANR	583625	EqualityExpression	NULL == string		583611	0		==			
ANR	583626	Identifier	NULL		583611	0					
ANR	583627	Identifier	string		583611	1					
ANR	583628	EqualityExpression	'\\0' == string [ 0 ]		583611	1		==			
ANR	583629	PrimaryExpression	'\\0'		583611	0					
ANR	583630	ArrayIndexing	string [ 0 ]		583611	1					
ANR	583631	Identifier	string		583611	0					
ANR	583632	PrimaryExpression	0		583611	1					
ANR	583633	ThrowStatement	"throw ""Trie::find, null or empty string"" ;"	249:2:4891:4931	583611	1	True				
ANR	583634	PrimaryExpression	"""Trie::find, null or empty string"""		583611	0					
ANR	583635	ExpressionStatement	i = 0	252:1:4960:4963	583611	3	True				
ANR	583636	AssignmentExpression	i = 0		583611	0		=			
ANR	583637	Identifier	i		583611	0					
ANR	583638	PrimaryExpression	0		583611	1					
ANR	583639	ExpressionStatement	node = root	253:1:4966:4977	583611	4	True				
ANR	583640	AssignmentExpression	node = root		583611	0		=			
ANR	583641	Identifier	node		583611	0					
ANR	583642	Identifier	root		583611	1					
ANR	583643	WhileStatement	while ( true )		583611	5					
ANR	583644	Condition	true	254:8:4987:4990	583611	0	True				
ANR	583645	Identifier	true		583611	0					
ANR	583646	CompoundStatement		20:2:398:416	583611	1					
ANR	583647	IfStatement	if ( i > 10000 )		583611	0					
ANR	583648	Condition	i > 10000	257:6:5054:5060	583611	0	True				
ANR	583649	RelationalExpression	i > 10000		583611	0		>			
ANR	583650	Identifier	i		583611	0					
ANR	583651	PrimaryExpression	10000		583611	1					
ANR	583652	ThrowStatement	"throw ""Trie::find, lack of zero?"" ;"	258:3:5067:5100	583611	1	True				
ANR	583653	PrimaryExpression	"""Trie::find, lack of zero?"""		583611	0					
ANR	583654	IdentifierDeclStatement	Trie_Node * temp = node ;	261:2:5159:5181	583611	1	True				
ANR	583655	IdentifierDecl	* temp = node		583611	0					
ANR	583656	IdentifierDeclType	Trie_Node *		583611	0					
ANR	583657	Identifier	temp		583611	1					
ANR	583658	AssignmentExpression	* temp = node		583611	2		=			
ANR	583659	Identifier	node		583611	0					
ANR	583660	Identifier	node		583611	1					
ANR	583661	IdentifierDeclStatement	bool found = false ;	262:2:5185:5203	583611	2	True				
ANR	583662	IdentifierDecl	found = false		583611	0					
ANR	583663	IdentifierDeclType	bool		583611	0					
ANR	583664	Identifier	found		583611	1					
ANR	583665	AssignmentExpression	found = false		583611	2		=			
ANR	583666	Identifier	false		583611	0					
ANR	583667	Identifier	false		583611	1					
ANR	583668	WhileStatement	while ( true )		583611	3					
ANR	583669	Condition	true	263:9:5214:5217	583611	0	True				
ANR	583670	Identifier	true		583611	0					
ANR	583671	CompoundStatement		21:16:434:434	583611	1					
ANR	583672	IfStatement	if ( temp -> letter == string [ i ] )		583611	0					
ANR	583673	Condition	temp -> letter == string [ i ]	264:7:5230:5254	583611	0	True				
ANR	583674	EqualityExpression	temp -> letter == string [ i ]		583611	0		==			
ANR	583675	PtrMemberAccess	temp -> letter		583611	0					
ANR	583676	Identifier	temp		583611	0					
ANR	583677	Identifier	letter		583611	1					
ANR	583678	ArrayIndexing	string [ i ]		583611	1					
ANR	583679	Identifier	string		583611	0					
ANR	583680	Identifier	i		583611	1					
ANR	583681	CompoundStatement		22:35:471:471	583611	1					
ANR	583682	ExpressionStatement	found = true	265:4:5264:5276	583611	0	True				
ANR	583683	AssignmentExpression	found = true		583611	0		=			
ANR	583684	Identifier	found		583611	0					
ANR	583685	Identifier	true		583611	1					
ANR	583686	BreakStatement	break ;	266:4:5282:5287	583611	1	True				
ANR	583687	ExpressionStatement		267:4:5293:5293	583611	1	True				
ANR	583688	IfStatement	if ( NULL != temp -> sibling )		583611	2					
ANR	583689	Condition	NULL != temp -> sibling	268:7:5302:5322	583611	0	True				
ANR	583690	EqualityExpression	NULL != temp -> sibling		583611	0		!=			
ANR	583691	Identifier	NULL		583611	0					
ANR	583692	PtrMemberAccess	temp -> sibling		583611	1					
ANR	583693	Identifier	temp		583611	0					
ANR	583694	Identifier	sibling		583611	1					
ANR	583695	ExpressionStatement	temp = temp -> sibling	269:4:5330:5350	583611	1	True				
ANR	583696	AssignmentExpression	temp = temp -> sibling		583611	0		=			
ANR	583697	Identifier	temp		583611	0					
ANR	583698	PtrMemberAccess	temp -> sibling		583611	1					
ANR	583699	Identifier	temp		583611	0					
ANR	583700	Identifier	sibling		583611	1					
ANR	583701	ElseStatement	else		583611	0					
ANR	583702	BreakStatement	break ;	271:4:5364:5369	583611	0	True				
ANR	583703	ExpressionStatement		272:3:5374:5374	583611	4	True				
ANR	583704	IfStatement	if ( ! found )		583611	5					
ANR	583705	Condition	! found	274:6:5383:5388	583611	0	True				
ANR	583706	UnaryOperationExpression	! found		583611	0					
ANR	583707	UnaryOperator	!		583611	0					
ANR	583708	Identifier	found		583611	1					
ANR	583709	ReturnStatement	return - 1 ;	275:3:5395:5404	583611	1	True				
ANR	583710	UnaryOperationExpression	- 1		583611	0					
ANR	583711	UnaryOperator	-		583611	0					
ANR	583712	PrimaryExpression	1		583611	1					
ANR	583713	ElseStatement	else		583611	0					
ANR	583714	CompoundStatement		34:7:626:626	583611	0					
ANR	583715	IfStatement	if ( '\\0' == string [ i + 1 ] )		583611	0					
ANR	583716	Condition	'\\0' == string [ i + 1 ]	280:7:5514:5532	583611	0	True				
ANR	583717	EqualityExpression	'\\0' == string [ i + 1 ]		583611	0		==			
ANR	583718	PrimaryExpression	'\\0'		583611	0					
ANR	583719	ArrayIndexing	string [ i + 1 ]		583611	1					
ANR	583720	Identifier	string		583611	0					
ANR	583721	AdditiveExpression	i + 1		583611	1		+			
ANR	583722	Identifier	i		583611	0					
ANR	583723	PrimaryExpression	1		583611	1					
ANR	583724	CompoundStatement		38:29:749:749	583611	1					
ANR	583725	ReturnStatement	return temp -> id ;	281:4:5542:5557	583611	0	True				
ANR	583726	PtrMemberAccess	temp -> id		583611	0					
ANR	583727	Identifier	temp		583611	0					
ANR	583728	Identifier	id		583611	1					
ANR	583729	ElseStatement	else		583611	0					
ANR	583730	CompoundStatement		41:8:785:785	583611	0					
ANR	583731	IfStatement	if ( NULL == temp -> child )		583611	0					
ANR	583732	Condition	NULL == temp -> child	285:8:5663:5681	583611	0	True				
ANR	583733	EqualityExpression	NULL == temp -> child		583611	0		==			
ANR	583734	Identifier	NULL		583611	0					
ANR	583735	PtrMemberAccess	temp -> child		583611	1					
ANR	583736	Identifier	temp		583611	0					
ANR	583737	Identifier	child		583611	1					
ANR	583738	ReturnStatement	return - 1 ;	286:5:5691:5700	583611	1	True				
ANR	583739	UnaryOperationExpression	- 1		583611	0					
ANR	583740	UnaryOperator	-		583611	0					
ANR	583741	PrimaryExpression	1		583611	1					
ANR	583742	ElseStatement	else		583611	0					
ANR	583743	CompoundStatement		45:9:924:924	583611	0					
ANR	583744	ExpressionStatement	node = temp -> child	289:5:5756:5774	583611	0	True				
ANR	583745	AssignmentExpression	node = temp -> child		583611	0		=			
ANR	583746	Identifier	node		583611	0					
ANR	583747	PtrMemberAccess	temp -> child		583611	1					
ANR	583748	Identifier	temp		583611	0					
ANR	583749	Identifier	child		583611	1					
ANR	583750	ExpressionStatement	i ++	290:5:5781:5784	583611	1	True				
ANR	583751	PostIncDecOperationExpression	i ++		583611	0					
ANR	583752	Identifier	i		583611	0					
ANR	583753	IncDec	++		583611	1					
ANR	583754	ExpressionStatement		291:5:5791:5791	583611	1	True				
ANR	583755	ExpressionStatement		292:4:5797:5797	583611	1	True				
ANR	583756	ExpressionStatement		293:3:5802:5802	583611	6	True				
ANR	583757	ExpressionStatement		294:2:5806:5806	583611	6	True				
ANR	583758	ReturnStatement	return - 1 ;	295:1:5809:5818	583611	7	True				
ANR	583759	UnaryOperationExpression	- 1		583611	0					
ANR	583760	UnaryOperator	-		583611	0					
ANR	583761	PrimaryExpression	1		583611	1					
ANR	583762	ReturnType	int		583611	1					
ANR	583763	Identifier	Trie :: find		583611	2					
ANR	583764	ParameterList	const char * string		583611	3					
ANR	583765	Parameter	const char * string	242:16:4759:4776	583611	0	True				
ANR	583766	ParameterType	const char *		583611	0					
ANR	583767	Identifier	string		583611	1					
ANR	583768	CFGEntryNode	ENTRY		583611		True				
ANR	583769	CFGExitNode	EXIT		583611		True				
ANR	583770	CFGExceptionNode	EXCEPTION		583611		True				
ANR	583771	CFGExceptionNode	EXCEPTION		583611		True				
ANR	583772	CFGExceptionNode	EXCEPTION		583611		True				
ANR	583773	Symbol	temp		583611						
ANR	583774	Symbol	NULL		583611						
ANR	583775	Symbol	temp -> child		583611						
ANR	583776	Symbol	string		583611						
ANR	583777	Symbol	false		583611						
ANR	583778	Symbol	temp -> sibling		583611						
ANR	583779	Symbol	i		583611						
ANR	583780	Symbol	* string		583611						
ANR	583781	Symbol	temp -> id		583611						
ANR	583782	Symbol	* temp		583611						
ANR	583783	Symbol	temp -> letter		583611						
ANR	583784	Symbol	node		583611						
ANR	583785	Symbol	found		583611						
ANR	583786	Symbol	* i		583611						
ANR	583787	Symbol	root		583611						
ANR	583788	Symbol	true		583611						
ANR	583789	Function	Trie :: print	312:0:5967:6017							
ANR	583790	FunctionDef	Trie :: print ()		583789	0					
ANR	583791	CompoundStatement		313:0:5996:6017	583789	0					
ANR	583792	ExpressionStatement	"print ( root , 0 )"	314:1:5999:6015	583789	0	True				
ANR	583793	CallExpression	"print ( root , 0 )"		583789	0					
ANR	583794	Callee	print		583789	0					
ANR	583795	Identifier	print		583789	0					
ANR	583796	ArgumentList	root		583789	1					
ANR	583797	Argument	root		583789	0					
ANR	583798	Identifier	root		583789	0					
ANR	583799	Argument	0		583789	1					
ANR	583800	PrimaryExpression	0		583789	0					
ANR	583801	ReturnType	void		583789	1					
ANR	583802	Identifier	Trie :: print		583789	2					
ANR	583803	ParameterList			583789	3					
ANR	583804	CFGEntryNode	ENTRY		583789		True				
ANR	583805	CFGExitNode	EXIT		583789		True				
ANR	583806	Symbol	root		583789						
ANR	583807	Function	Trie :: print	333:0:6256:6530							
ANR	583808	FunctionDef	"Trie :: print (Trie_Node * node , int indent)"		583807	0					
ANR	583809	CompoundStatement		334:0:6309:6530	583807	0					
ANR	583810	IfStatement	if ( NULL != node )		583807	0					
ANR	583811	Condition	NULL != node	335:5:6316:6325	583807	0	True				
ANR	583812	EqualityExpression	NULL != node		583807	0		!=			
ANR	583813	Identifier	NULL		583807	0					
ANR	583814	Identifier	node		583807	1					
ANR	583815	CompoundStatement		2:18:19:19	583807	1					
ANR	583816	WhileStatement	while ( NULL != node )		583807	0					
ANR	583817	Condition	NULL != node	336:9:6340:6351	583807	0	True				
ANR	583818	EqualityExpression	NULL != node		583807	0		!=			
ANR	583819	Identifier	NULL		583807	0					
ANR	583820	Identifier	node		583807	1					
ANR	583821	CompoundStatement		3:24:45:45	583807	1					
ANR	583822	ForStatement	for ( int i = 0 ; i < indent ; i ++ )		583807	0					
ANR	583823	ForInit	int i = 0 ;	337:7:6364:6371	583807	0	True				
ANR	583824	IdentifierDeclStatement	int i = 0 ;		583807	0					
ANR	583825	IdentifierDecl	i = 0		583807	0					
ANR	583826	IdentifierDeclType	int		583807	0					
ANR	583827	Identifier	i		583807	1					
ANR	583828	AssignmentExpression	i = 0		583807	2		=			
ANR	583829	Identifier	i		583807	0					
ANR	583830	PrimaryExpression	0		583807	1					
ANR	583831	Condition	i < indent	337:16:6373:6380	583807	1	True				
ANR	583832	RelationalExpression	i < indent		583807	0		<			
ANR	583833	Identifier	i		583807	0					
ANR	583834	Identifier	indent		583807	1					
ANR	583835	PostIncDecOperationExpression	i ++	337:26:6383:6385	583807	2	True				
ANR	583836	Identifier	i		583807	0					
ANR	583837	IncDec	++		583807	1					
ANR	583838	ExpressionStatement	"printf ( "" "" )"	338:4:6393:6404	583807	3	True				
ANR	583839	CallExpression	"printf ( "" "" )"		583807	0					
ANR	583840	Callee	printf		583807	0					
ANR	583841	Identifier	printf		583807	0					
ANR	583842	ArgumentList	""" """		583807	1					
ANR	583843	Argument	""" """		583807	0					
ANR	583844	PrimaryExpression	""" """		583807	0					
ANR	583845	ExpressionStatement	"printf ( ""l: %c,  id: %d\\n"" , node -> letter , node -> id )"	339:3:6409:6460	583807	1	True				
ANR	583846	CallExpression	"printf ( ""l: %c,  id: %d\\n"" , node -> letter , node -> id )"		583807	0					
ANR	583847	Callee	printf		583807	0					
ANR	583848	Identifier	printf		583807	0					
ANR	583849	ArgumentList	"""l: %c,  id: %d\\n"""		583807	1					
ANR	583850	Argument	"""l: %c,  id: %d\\n"""		583807	0					
ANR	583851	PrimaryExpression	"""l: %c,  id: %d\\n"""		583807	0					
ANR	583852	Argument	node -> letter		583807	1					
ANR	583853	PtrMemberAccess	node -> letter		583807	0					
ANR	583854	Identifier	node		583807	0					
ANR	583855	Identifier	letter		583807	1					
ANR	583856	Argument	node -> id		583807	2					
ANR	583857	PtrMemberAccess	node -> id		583807	0					
ANR	583858	Identifier	node		583807	0					
ANR	583859	Identifier	id		583807	1					
ANR	583860	ExpressionStatement	"print ( node -> child , indent + 4 )"	340:3:6465:6494	583807	2	True				
ANR	583861	CallExpression	"print ( node -> child , indent + 4 )"		583807	0					
ANR	583862	Callee	print		583807	0					
ANR	583863	Identifier	print		583807	0					
ANR	583864	ArgumentList	node -> child		583807	1					
ANR	583865	Argument	node -> child		583807	0					
ANR	583866	PtrMemberAccess	node -> child		583807	0					
ANR	583867	Identifier	node		583807	0					
ANR	583868	Identifier	child		583807	1					
ANR	583869	Argument	indent + 4		583807	1					
ANR	583870	AdditiveExpression	indent + 4		583807	0		+			
ANR	583871	Identifier	indent		583807	0					
ANR	583872	PrimaryExpression	4		583807	1					
ANR	583873	ExpressionStatement	node = node -> sibling	341:3:6499:6519	583807	3	True				
ANR	583874	AssignmentExpression	node = node -> sibling		583807	0		=			
ANR	583875	Identifier	node		583807	0					
ANR	583876	PtrMemberAccess	node -> sibling		583807	1					
ANR	583877	Identifier	node		583807	0					
ANR	583878	Identifier	sibling		583807	1					
ANR	583879	ExpressionStatement		342:3:6524:6524	583807	1	True				
ANR	583880	ExpressionStatement		343:2:6528:6528	583807	1	True				
ANR	583881	ReturnType	void		583807	1					
ANR	583882	Identifier	Trie :: print		583807	2					
ANR	583883	ParameterList	"Trie_Node * node , int indent"		583807	3					
ANR	583884	Parameter	Trie_Node * node	333:17:6273:6288	583807	0	True				
ANR	583885	ParameterType	Trie_Node *		583807	0					
ANR	583886	Identifier	node		583807	1					
ANR	583887	Parameter	int indent	333:35:6291:6300	583807	1	True				
ANR	583888	ParameterType	int		583807	0					
ANR	583889	Identifier	indent		583807	1					
ANR	583890	CFGEntryNode	ENTRY		583807		True				
ANR	583891	CFGExitNode	EXIT		583807		True				
ANR	583892	Symbol	node		583807						
ANR	583893	Symbol	NULL		583807						
ANR	583894	Symbol	indent		583807						
ANR	583895	Symbol	node -> letter		583807						
ANR	583896	Symbol	i		583807						
ANR	583897	Symbol	* node		583807						
ANR	583898	Symbol	node -> id		583807						
ANR	583899	Symbol	node -> child		583807						
ANR	583900	Symbol	node -> sibling		583807						
ANR	583901	Function	Trie_test	360:0:6670:7726							
ANR	583902	FunctionDef	Trie_test ()		583901	0					
ANR	583903	CompoundStatement		361:0:6691:7726	583901	0					
ANR	583904	IdentifierDeclStatement	Trie t ;	362:1:6694:6700	583901	0	True				
ANR	583905	IdentifierDecl	t		583901	0					
ANR	583906	IdentifierDeclType	Trie		583901	0					
ANR	583907	Identifier	t		583901	1					
ANR	583908	ExpressionStatement	"t . add ( ""ab"" , 0 )"	364:1:6704:6717	583901	1	True				
ANR	583909	CallExpression	"t . add ( ""ab"" , 0 )"		583901	0					
ANR	583910	Callee	t . add		583901	0					
ANR	583911	MemberAccess	t . add		583901	0					
ANR	583912	Identifier	t		583901	0					
ANR	583913	Identifier	add		583901	1					
ANR	583914	ArgumentList	"""ab"""		583901	1					
ANR	583915	Argument	"""ab"""		583901	0					
ANR	583916	PrimaryExpression	"""ab"""		583901	0					
ANR	583917	Argument	0		583901	1					
ANR	583918	PrimaryExpression	0		583901	0					
ANR	583919	ExpressionStatement	t . print ( )	365:1:6720:6729	583901	2	True				
ANR	583920	CallExpression	t . print ( )		583901	0					
ANR	583921	Callee	t . print		583901	0					
ANR	583922	MemberAccess	t . print		583901	0					
ANR	583923	Identifier	t		583901	0					
ANR	583924	Identifier	print		583901	1					
ANR	583925	ArgumentList			583901	1					
ANR	583926	ExpressionStatement	"printf ( ""===============\\n"" )"	366:1:6732:6759	583901	3	True				
ANR	583927	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	583928	Callee	printf		583901	0					
ANR	583929	Identifier	printf		583901	0					
ANR	583930	ArgumentList	"""===============\\n"""		583901	1					
ANR	583931	Argument	"""===============\\n"""		583901	0					
ANR	583932	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	583933	ExpressionStatement	"t . add ( ""a"" , 2 )"	367:1:6762:6774	583901	4	True				
ANR	583934	CallExpression	"t . add ( ""a"" , 2 )"		583901	0					
ANR	583935	Callee	t . add		583901	0					
ANR	583936	MemberAccess	t . add		583901	0					
ANR	583937	Identifier	t		583901	0					
ANR	583938	Identifier	add		583901	1					
ANR	583939	ArgumentList	"""a"""		583901	1					
ANR	583940	Argument	"""a"""		583901	0					
ANR	583941	PrimaryExpression	"""a"""		583901	0					
ANR	583942	Argument	2		583901	1					
ANR	583943	PrimaryExpression	2		583901	0					
ANR	583944	ExpressionStatement	t . print ( )	368:1:6777:6786	583901	5	True				
ANR	583945	CallExpression	t . print ( )		583901	0					
ANR	583946	Callee	t . print		583901	0					
ANR	583947	MemberAccess	t . print		583901	0					
ANR	583948	Identifier	t		583901	0					
ANR	583949	Identifier	print		583901	1					
ANR	583950	ArgumentList			583901	1					
ANR	583951	ExpressionStatement	"printf ( ""===============\\n"" )"	369:1:6789:6816	583901	6	True				
ANR	583952	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	583953	Callee	printf		583901	0					
ANR	583954	Identifier	printf		583901	0					
ANR	583955	ArgumentList	"""===============\\n"""		583901	1					
ANR	583956	Argument	"""===============\\n"""		583901	0					
ANR	583957	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	583958	ExpressionStatement	"t . add ( ""abcde"" , 3 )"	370:1:6819:6835	583901	7	True				
ANR	583959	CallExpression	"t . add ( ""abcde"" , 3 )"		583901	0					
ANR	583960	Callee	t . add		583901	0					
ANR	583961	MemberAccess	t . add		583901	0					
ANR	583962	Identifier	t		583901	0					
ANR	583963	Identifier	add		583901	1					
ANR	583964	ArgumentList	"""abcde"""		583901	1					
ANR	583965	Argument	"""abcde"""		583901	0					
ANR	583966	PrimaryExpression	"""abcde"""		583901	0					
ANR	583967	Argument	3		583901	1					
ANR	583968	PrimaryExpression	3		583901	0					
ANR	583969	ExpressionStatement	t . print ( )	371:1:6838:6847	583901	8	True				
ANR	583970	CallExpression	t . print ( )		583901	0					
ANR	583971	Callee	t . print		583901	0					
ANR	583972	MemberAccess	t . print		583901	0					
ANR	583973	Identifier	t		583901	0					
ANR	583974	Identifier	print		583901	1					
ANR	583975	ArgumentList			583901	1					
ANR	583976	ExpressionStatement	"printf ( ""===============\\n"" )"	372:1:6850:6877	583901	9	True				
ANR	583977	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	583978	Callee	printf		583901	0					
ANR	583979	Identifier	printf		583901	0					
ANR	583980	ArgumentList	"""===============\\n"""		583901	1					
ANR	583981	Argument	"""===============\\n"""		583901	0					
ANR	583982	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	583983	ExpressionStatement	"t . add ( ""z"" , 4 )"	373:1:6880:6892	583901	10	True				
ANR	583984	CallExpression	"t . add ( ""z"" , 4 )"		583901	0					
ANR	583985	Callee	t . add		583901	0					
ANR	583986	MemberAccess	t . add		583901	0					
ANR	583987	Identifier	t		583901	0					
ANR	583988	Identifier	add		583901	1					
ANR	583989	ArgumentList	"""z"""		583901	1					
ANR	583990	Argument	"""z"""		583901	0					
ANR	583991	PrimaryExpression	"""z"""		583901	0					
ANR	583992	Argument	4		583901	1					
ANR	583993	PrimaryExpression	4		583901	0					
ANR	583994	ExpressionStatement	t . print ( )	374:1:6895:6904	583901	11	True				
ANR	583995	CallExpression	t . print ( )		583901	0					
ANR	583996	Callee	t . print		583901	0					
ANR	583997	MemberAccess	t . print		583901	0					
ANR	583998	Identifier	t		583901	0					
ANR	583999	Identifier	print		583901	1					
ANR	584000	ArgumentList			583901	1					
ANR	584001	ExpressionStatement	"printf ( ""===============\\n"" )"	375:1:6907:6934	583901	12	True				
ANR	584002	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	584003	Callee	printf		583901	0					
ANR	584004	Identifier	printf		583901	0					
ANR	584005	ArgumentList	"""===============\\n"""		583901	1					
ANR	584006	Argument	"""===============\\n"""		583901	0					
ANR	584007	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	584008	ExpressionStatement	"t . add ( ""ze"" , 5 )"	376:1:6937:6950	583901	13	True				
ANR	584009	CallExpression	"t . add ( ""ze"" , 5 )"		583901	0					
ANR	584010	Callee	t . add		583901	0					
ANR	584011	MemberAccess	t . add		583901	0					
ANR	584012	Identifier	t		583901	0					
ANR	584013	Identifier	add		583901	1					
ANR	584014	ArgumentList	"""ze"""		583901	1					
ANR	584015	Argument	"""ze"""		583901	0					
ANR	584016	PrimaryExpression	"""ze"""		583901	0					
ANR	584017	Argument	5		583901	1					
ANR	584018	PrimaryExpression	5		583901	0					
ANR	584019	ExpressionStatement	t . print ( )	377:1:6953:6962	583901	14	True				
ANR	584020	CallExpression	t . print ( )		583901	0					
ANR	584021	Callee	t . print		583901	0					
ANR	584022	MemberAccess	t . print		583901	0					
ANR	584023	Identifier	t		583901	0					
ANR	584024	Identifier	print		583901	1					
ANR	584025	ArgumentList			583901	1					
ANR	584026	ExpressionStatement	"printf ( ""===============\\n"" )"	378:1:6965:6992	583901	15	True				
ANR	584027	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	584028	Callee	printf		583901	0					
ANR	584029	Identifier	printf		583901	0					
ANR	584030	ArgumentList	"""===============\\n"""		583901	1					
ANR	584031	Argument	"""===============\\n"""		583901	0					
ANR	584032	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	584033	ExpressionStatement	"t . add ( ""abd"" , 6 )"	379:1:6995:7009	583901	16	True				
ANR	584034	CallExpression	"t . add ( ""abd"" , 6 )"		583901	0					
ANR	584035	Callee	t . add		583901	0					
ANR	584036	MemberAccess	t . add		583901	0					
ANR	584037	Identifier	t		583901	0					
ANR	584038	Identifier	add		583901	1					
ANR	584039	ArgumentList	"""abd"""		583901	1					
ANR	584040	Argument	"""abd"""		583901	0					
ANR	584041	PrimaryExpression	"""abd"""		583901	0					
ANR	584042	Argument	6		583901	1					
ANR	584043	PrimaryExpression	6		583901	0					
ANR	584044	ExpressionStatement	t . print ( )	380:1:7012:7021	583901	17	True				
ANR	584045	CallExpression	t . print ( )		583901	0					
ANR	584046	Callee	t . print		583901	0					
ANR	584047	MemberAccess	t . print		583901	0					
ANR	584048	Identifier	t		583901	0					
ANR	584049	Identifier	print		583901	1					
ANR	584050	ArgumentList			583901	1					
ANR	584051	ExpressionStatement	"printf ( ""===============\\n"" )"	381:1:7024:7051	583901	18	True				
ANR	584052	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	584053	Callee	printf		583901	0					
ANR	584054	Identifier	printf		583901	0					
ANR	584055	ArgumentList	"""===============\\n"""		583901	1					
ANR	584056	Argument	"""===============\\n"""		583901	0					
ANR	584057	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	584058	ExpressionStatement	"t . add ( ""abcf"" , 7 )"	382:1:7054:7069	583901	19	True				
ANR	584059	CallExpression	"t . add ( ""abcf"" , 7 )"		583901	0					
ANR	584060	Callee	t . add		583901	0					
ANR	584061	MemberAccess	t . add		583901	0					
ANR	584062	Identifier	t		583901	0					
ANR	584063	Identifier	add		583901	1					
ANR	584064	ArgumentList	"""abcf"""		583901	1					
ANR	584065	Argument	"""abcf"""		583901	0					
ANR	584066	PrimaryExpression	"""abcf"""		583901	0					
ANR	584067	Argument	7		583901	1					
ANR	584068	PrimaryExpression	7		583901	0					
ANR	584069	ExpressionStatement	t . print ( )	383:1:7072:7081	583901	20	True				
ANR	584070	CallExpression	t . print ( )		583901	0					
ANR	584071	Callee	t . print		583901	0					
ANR	584072	MemberAccess	t . print		583901	0					
ANR	584073	Identifier	t		583901	0					
ANR	584074	Identifier	print		583901	1					
ANR	584075	ArgumentList			583901	1					
ANR	584076	ExpressionStatement	"printf ( ""===============\\n"" )"	384:1:7084:7111	583901	21	True				
ANR	584077	CallExpression	"printf ( ""===============\\n"" )"		583901	0					
ANR	584078	Callee	printf		583901	0					
ANR	584079	Identifier	printf		583901	0					
ANR	584080	ArgumentList	"""===============\\n"""		583901	1					
ANR	584081	Argument	"""===============\\n"""		583901	0					
ANR	584082	PrimaryExpression	"""===============\\n"""		583901	0					
ANR	584083	IfStatement	"if ( - 1 != t . find ( ""c"" ) )"		583901	22					
ANR	584084	Condition	"- 1 != t . find ( ""c"" )"	385:5:7118:7132	583901	0	True				
ANR	584085	EqualityExpression	"- 1 != t . find ( ""c"" )"		583901	0		!=			
ANR	584086	UnaryOperationExpression	- 1		583901	0					
ANR	584087	UnaryOperator	-		583901	0					
ANR	584088	PrimaryExpression	1		583901	1					
ANR	584089	CallExpression	"t . find ( ""c"" )"		583901	1					
ANR	584090	Callee	t . find		583901	0					
ANR	584091	MemberAccess	t . find		583901	0					
ANR	584092	Identifier	t		583901	0					
ANR	584093	Identifier	find		583901	1					
ANR	584094	ArgumentList	"""c"""		583901	1					
ANR	584095	Argument	"""c"""		583901	0					
ANR	584096	PrimaryExpression	"""c"""		583901	0					
ANR	584097	ThrowStatement	"throw ""Trie_test, 1"" ;"	386:2:7138:7158	583901	1	True				
ANR	584098	PrimaryExpression	"""Trie_test, 1"""		583901	0					
ANR	584099	IfStatement	"if ( - 1 != t . find ( ""abe"" ) )"		583901	23					
ANR	584100	Condition	"- 1 != t . find ( ""abe"" )"	387:5:7165:7181	583901	0	True				
ANR	584101	EqualityExpression	"- 1 != t . find ( ""abe"" )"		583901	0		!=			
ANR	584102	UnaryOperationExpression	- 1		583901	0					
ANR	584103	UnaryOperator	-		583901	0					
ANR	584104	PrimaryExpression	1		583901	1					
ANR	584105	CallExpression	"t . find ( ""abe"" )"		583901	1					
ANR	584106	Callee	t . find		583901	0					
ANR	584107	MemberAccess	t . find		583901	0					
ANR	584108	Identifier	t		583901	0					
ANR	584109	Identifier	find		583901	1					
ANR	584110	ArgumentList	"""abe"""		583901	1					
ANR	584111	Argument	"""abe"""		583901	0					
ANR	584112	PrimaryExpression	"""abe"""		583901	0					
ANR	584113	ThrowStatement	"throw ""Trie_test, 2"" ;"	388:2:7187:7207	583901	1	True				
ANR	584114	PrimaryExpression	"""Trie_test, 2"""		583901	0					
ANR	584115	IfStatement	"if ( - 1 != t . find ( ""abcdef"" ) )"		583901	24					
ANR	584116	Condition	"- 1 != t . find ( ""abcdef"" )"	389:5:7214:7233	583901	0	True				
ANR	584117	EqualityExpression	"- 1 != t . find ( ""abcdef"" )"		583901	0		!=			
ANR	584118	UnaryOperationExpression	- 1		583901	0					
ANR	584119	UnaryOperator	-		583901	0					
ANR	584120	PrimaryExpression	1		583901	1					
ANR	584121	CallExpression	"t . find ( ""abcdef"" )"		583901	1					
ANR	584122	Callee	t . find		583901	0					
ANR	584123	MemberAccess	t . find		583901	0					
ANR	584124	Identifier	t		583901	0					
ANR	584125	Identifier	find		583901	1					
ANR	584126	ArgumentList	"""abcdef"""		583901	1					
ANR	584127	Argument	"""abcdef"""		583901	0					
ANR	584128	PrimaryExpression	"""abcdef"""		583901	0					
ANR	584129	ThrowStatement	"throw ""Trie_test, 3"" ;"	390:2:7239:7259	583901	1	True				
ANR	584130	PrimaryExpression	"""Trie_test, 3"""		583901	0					
ANR	584131	IfStatement	"if ( 2 != t . find ( ""a"" ) )"		583901	25					
ANR	584132	Condition	"2 != t . find ( ""a"" )"	391:5:7266:7279	583901	0	True				
ANR	584133	EqualityExpression	"2 != t . find ( ""a"" )"		583901	0		!=			
ANR	584134	PrimaryExpression	2		583901	0					
ANR	584135	CallExpression	"t . find ( ""a"" )"		583901	1					
ANR	584136	Callee	t . find		583901	0					
ANR	584137	MemberAccess	t . find		583901	0					
ANR	584138	Identifier	t		583901	0					
ANR	584139	Identifier	find		583901	1					
ANR	584140	ArgumentList	"""a"""		583901	1					
ANR	584141	Argument	"""a"""		583901	0					
ANR	584142	PrimaryExpression	"""a"""		583901	0					
ANR	584143	ThrowStatement	"throw ""Trie_test, 4"" ;"	392:2:7285:7305	583901	1	True				
ANR	584144	PrimaryExpression	"""Trie_test, 4"""		583901	0					
ANR	584145	IfStatement	"if ( 7 != t . find ( ""abcf"" ) )"		583901	26					
ANR	584146	Condition	"7 != t . find ( ""abcf"" )"	393:5:7312:7328	583901	0	True				
ANR	584147	EqualityExpression	"7 != t . find ( ""abcf"" )"		583901	0		!=			
ANR	584148	PrimaryExpression	7		583901	0					
ANR	584149	CallExpression	"t . find ( ""abcf"" )"		583901	1					
ANR	584150	Callee	t . find		583901	0					
ANR	584151	MemberAccess	t . find		583901	0					
ANR	584152	Identifier	t		583901	0					
ANR	584153	Identifier	find		583901	1					
ANR	584154	ArgumentList	"""abcf"""		583901	1					
ANR	584155	Argument	"""abcf"""		583901	0					
ANR	584156	PrimaryExpression	"""abcf"""		583901	0					
ANR	584157	ThrowStatement	"throw ""Trie_test, 5"" ;"	394:2:7334:7354	583901	1	True				
ANR	584158	PrimaryExpression	"""Trie_test, 5"""		583901	0					
ANR	584159	ExpressionStatement	"printf ( ""must be 5 error messages -- ok\\n"" )"	395:1:7357:7399	583901	27	True				
ANR	584160	CallExpression	"printf ( ""must be 5 error messages -- ok\\n"" )"		583901	0					
ANR	584161	Callee	printf		583901	0					
ANR	584162	Identifier	printf		583901	0					
ANR	584163	ArgumentList	"""must be 5 error messages -- ok\\n"""		583901	1					
ANR	584164	Argument	"""must be 5 error messages -- ok\\n"""		583901	0					
ANR	584165	PrimaryExpression	"""must be 5 error messages -- ok\\n"""		583901	0					
ANR	584166	TryStatement	try		583901	28					
ANR	584167	CompoundStatement		36:5:714:714	583901	0					
ANR	584168	ExpressionStatement	"t . add ( NULL , 1 )"		583901	0					
ANR	584169	CallExpression	"t . add ( NULL , 1 )"		583901	0					
ANR	584170	Callee	t . add		583901	0					
ANR	584171	MemberAccess	t . add		583901	0					
ANR	584172	Identifier	t		583901	0					
ANR	584173	Identifier	add		583901	1					
ANR	584174	ArgumentList	NULL		583901	1					
ANR	584175	Argument	NULL		583901	0					
ANR	584176	Identifier	NULL		583901	0					
ANR	584177	Argument	1		583901	1					
ANR	584178	PrimaryExpression	1		583901	0					
ANR	584179	CatchList			583901	1					
ANR	584180	CatchStatement	catch ( char * msg )		583901	0					
ANR	584181	Identifier	msg		583901	0					
ANR	584182	CompoundStatement		38:22:755:755	583901	1					
ANR	584183	ExpressionStatement	alert ( msg )	399:2:7451:7461	583901	0	True				
ANR	584184	CallExpression	alert ( msg )		583901	0					
ANR	584185	Callee	alert		583901	0					
ANR	584186	Identifier	alert		583901	0					
ANR	584187	ArgumentList	msg		583901	1					
ANR	584188	Argument	msg		583901	0					
ANR	584189	Identifier	msg		583901	0					
ANR	584190	ExpressionStatement		400:2:7465:7465	583901	29	True				
ANR	584191	TryStatement	try		583901	30					
ANR	584192	CompoundStatement		41:5:780:780	583901	0					
ANR	584193	ExpressionStatement	"t . add ( """" , 1 )"		583901	0					
ANR	584194	CallExpression	"t . add ( """" , 1 )"		583901	0					
ANR	584195	Callee	t . add		583901	0					
ANR	584196	MemberAccess	t . add		583901	0					
ANR	584197	Identifier	t		583901	0					
ANR	584198	Identifier	add		583901	1					
ANR	584199	ArgumentList	""""""		583901	1					
ANR	584200	Argument	""""""		583901	0					
ANR	584201	PrimaryExpression	""""""		583901	0					
ANR	584202	Argument	1		583901	1					
ANR	584203	PrimaryExpression	1		583901	0					
ANR	584204	CatchList			583901	1					
ANR	584205	CatchStatement	catch ( char * msg )		583901	0					
ANR	584206	Identifier	msg		583901	0					
ANR	584207	CompoundStatement		43:22:819:819	583901	1					
ANR	584208	ExpressionStatement	alert ( msg )	404:2:7515:7525	583901	0	True				
ANR	584209	CallExpression	alert ( msg )		583901	0					
ANR	584210	Callee	alert		583901	0					
ANR	584211	Identifier	alert		583901	0					
ANR	584212	ArgumentList	msg		583901	1					
ANR	584213	Argument	msg		583901	0					
ANR	584214	Identifier	msg		583901	0					
ANR	584215	ExpressionStatement		405:2:7529:7529	583901	31	True				
ANR	584216	TryStatement	try		583901	32					
ANR	584217	CompoundStatement		46:5:844:844	583901	0					
ANR	584218	ExpressionStatement	"t . add ( ""aa"" , - 1 )"		583901	0					
ANR	584219	CallExpression	"t . add ( ""aa"" , - 1 )"		583901	0					
ANR	584220	Callee	t . add		583901	0					
ANR	584221	MemberAccess	t . add		583901	0					
ANR	584222	Identifier	t		583901	0					
ANR	584223	Identifier	add		583901	1					
ANR	584224	ArgumentList	"""aa"""		583901	1					
ANR	584225	Argument	"""aa"""		583901	0					
ANR	584226	PrimaryExpression	"""aa"""		583901	0					
ANR	584227	Argument	- 1		583901	1					
ANR	584228	UnaryOperationExpression	- 1		583901	0					
ANR	584229	UnaryOperator	-		583901	0					
ANR	584230	PrimaryExpression	1		583901	1					
ANR	584231	CatchList			583901	1					
ANR	584232	CatchStatement	catch ( char * msg )		583901	0					
ANR	584233	Identifier	msg		583901	0					
ANR	584234	CompoundStatement		48:22:886:886	583901	1					
ANR	584235	ExpressionStatement	alert ( msg )	409:2:7582:7592	583901	0	True				
ANR	584236	CallExpression	alert ( msg )		583901	0					
ANR	584237	Callee	alert		583901	0					
ANR	584238	Identifier	alert		583901	0					
ANR	584239	ArgumentList	msg		583901	1					
ANR	584240	Argument	msg		583901	0					
ANR	584241	Identifier	msg		583901	0					
ANR	584242	ExpressionStatement		410:2:7596:7596	583901	33	True				
ANR	584243	TryStatement	try		583901	34					
ANR	584244	CompoundStatement		51:5:911:911	583901	0					
ANR	584245	ExpressionStatement	t . find ( NULL )		583901	0					
ANR	584246	CallExpression	t . find ( NULL )		583901	0					
ANR	584247	Callee	t . find		583901	0					
ANR	584248	MemberAccess	t . find		583901	0					
ANR	584249	Identifier	t		583901	0					
ANR	584250	Identifier	find		583901	1					
ANR	584251	ArgumentList	NULL		583901	1					
ANR	584252	Argument	NULL		583901	0					
ANR	584253	Identifier	NULL		583901	0					
ANR	584254	CatchList			583901	1					
ANR	584255	CatchStatement	catch ( char * msg )		583901	0					
ANR	584256	Identifier	msg		583901	0					
ANR	584257	CompoundStatement		53:22:951:951	583901	1					
ANR	584258	ExpressionStatement	alert ( msg )	414:2:7647:7657	583901	0	True				
ANR	584259	CallExpression	alert ( msg )		583901	0					
ANR	584260	Callee	alert		583901	0					
ANR	584261	Identifier	alert		583901	0					
ANR	584262	ArgumentList	msg		583901	1					
ANR	584263	Argument	msg		583901	0					
ANR	584264	Identifier	msg		583901	0					
ANR	584265	ExpressionStatement		415:2:7661:7661	583901	35	True				
ANR	584266	TryStatement	try		583901	36					
ANR	584267	CompoundStatement		56:5:976:976	583901	0					
ANR	584268	ExpressionStatement	"t . find ( """" )"		583901	0					
ANR	584269	CallExpression	"t . find ( """" )"		583901	0					
ANR	584270	Callee	t . find		583901	0					
ANR	584271	MemberAccess	t . find		583901	0					
ANR	584272	Identifier	t		583901	0					
ANR	584273	Identifier	find		583901	1					
ANR	584274	ArgumentList	""""""		583901	1					
ANR	584275	Argument	""""""		583901	0					
ANR	584276	PrimaryExpression	""""""		583901	0					
ANR	584277	CatchList			583901	1					
ANR	584278	CatchStatement	catch ( char * msg )		583901	0					
ANR	584279	Identifier	msg		583901	0					
ANR	584280	CompoundStatement		58:22:1014:1014	583901	1					
ANR	584281	ExpressionStatement	alert ( msg )	419:2:7710:7720	583901	0	True				
ANR	584282	CallExpression	alert ( msg )		583901	0					
ANR	584283	Callee	alert		583901	0					
ANR	584284	Identifier	alert		583901	0					
ANR	584285	ArgumentList	msg		583901	1					
ANR	584286	Argument	msg		583901	0					
ANR	584287	Identifier	msg		583901	0					
ANR	584288	ExpressionStatement		420:2:7724:7724	583901	37	True				
ANR	584289	ReturnType	void		583901	1					
ANR	584290	Identifier	Trie_test		583901	2					
ANR	584291	ParameterList			583901	3					
ANR	584292	CFGEntryNode	ENTRY		583901		True				
ANR	584293	CFGExitNode	EXIT		583901		True				
ANR	584294	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584295	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584296	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584297	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584298	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584299	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584300	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584301	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584302	CFGExceptionNode	EXCEPTION		583901		True				
ANR	584303	CFGErrorNode	ERROR		583901		True				
ANR	584304	CFGErrorNode	ERROR		583901		True				
ANR	584305	CFGErrorNode	ERROR		583901		True				
ANR	584306	CFGErrorNode	ERROR		583901		True				
ANR	584307	CFGErrorNode	ERROR		583901		True				
ANR	584308	Symbol	t		583901						
ANR	584309	Symbol	t . find		583901						
