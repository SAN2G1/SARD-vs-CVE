command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	824768	File	data/converged/CVE-2011-4930_htcondor/compat_classad_list.cpp								
ANR	824769	DeclStmt									
ANR	824770	Decl							intptr_t	intptr_t	i
ANR	824771	Function	ClassAdListDoesNotDeleteAds :: ClassAdListDoesNotDeleteAds	41:0:1167:1900							
ANR	824772	FunctionDef	ClassAdListDoesNotDeleteAds :: ClassAdListDoesNotDeleteAds ()		824771	0					
ANR	824773	CompoundStatement		43:0:1248:1900	824771	0					
ANR	824774	Statement	list_head	52:1:1725:1733	824771	0	True				
ANR	824775	Statement	=	52:11:1735:1735	824771	1	True				
ANR	824776	Statement	new	52:13:1737:1739	824771	2	True				
ANR	824777	ExpressionStatement	ClassAdListItem	52:17:1741:1756	824771	3	True				
ANR	824778	Identifier	ClassAdListItem		824771	0					
ANR	824779	ExpressionStatement	list_head -> ad = NULL	53:1:1759:1779	824771	4	True				
ANR	824780	AssignmentExpression	list_head -> ad = NULL		824771	0		=			
ANR	824781	PtrMemberAccess	list_head -> ad		824771	0					
ANR	824782	Identifier	list_head		824771	0					
ANR	824783	Identifier	ad		824771	1					
ANR	824784	Identifier	NULL		824771	1					
ANR	824785	ExpressionStatement	list_head -> next = list_head	54:1:1782:1809	824771	5	True				
ANR	824786	AssignmentExpression	list_head -> next = list_head		824771	0		=			
ANR	824787	PtrMemberAccess	list_head -> next		824771	0					
ANR	824788	Identifier	list_head		824771	0					
ANR	824789	Identifier	next		824771	1					
ANR	824790	Identifier	list_head		824771	1					
ANR	824791	ExpressionStatement	list_head -> prev = list_head	55:1:1833:1860	824771	6	True				
ANR	824792	AssignmentExpression	list_head -> prev = list_head		824771	0		=			
ANR	824793	PtrMemberAccess	list_head -> prev		824771	0					
ANR	824794	Identifier	list_head		824771	0					
ANR	824795	Identifier	prev		824771	1					
ANR	824796	Identifier	list_head		824771	1					
ANR	824797	ExpressionStatement	list_cur = list_head	56:1:1878:1898	824771	7	True				
ANR	824798	AssignmentExpression	list_cur = list_head		824771	0		=			
ANR	824799	Identifier	list_cur		824771	0					
ANR	824800	Identifier	list_head		824771	1					
ANR	824801	Identifier	ClassAdListDoesNotDeleteAds :: ClassAdListDoesNotDeleteAds		824771	1					
ANR	824802	ParameterList			824771	2					
ANR	824803	CFGEntryNode	ENTRY		824771		True				
ANR	824804	CFGExitNode	EXIT		824771		True				
ANR	824805	Symbol	list_head -> next		824771						
ANR	824806	Symbol	* list_head		824771						
ANR	824807	Symbol	NULL		824771						
ANR	824808	Symbol	list_head		824771						
ANR	824809	Symbol	list_cur		824771						
ANR	824810	Symbol	list_head -> prev		824771						
ANR	824811	Symbol	list_head -> ad		824771						
ANR	824812	Function	ClassAdListDoesNotDeleteAds :: ~ClassAdListDoesNotDeleteAds	59:0:1903:2013							
ANR	824813	FunctionDef	ClassAdListDoesNotDeleteAds :: ~ClassAdListDoesNotDeleteAds ()		824812	0					
ANR	824814	CompoundStatement		60:0:1963:2013	824812	0					
ANR	824815	ExpressionStatement	Clear ( )	61:1:1966:1973	824812	0	True				
ANR	824816	CallExpression	Clear ( )		824812	0					
ANR	824817	Callee	Clear		824812	0					
ANR	824818	Identifier	Clear		824812	0					
ANR	824819	ArgumentList			824812	1					
ANR	824820	Statement	delete	62:1:1976:1981	824812	1	True				
ANR	824821	ExpressionStatement	list_head	62:8:1983:1992	824812	2	True				
ANR	824822	Identifier	list_head		824812	0					
ANR	824823	ExpressionStatement	list_head = NULL	63:1:1995:2011	824812	3	True				
ANR	824824	AssignmentExpression	list_head = NULL		824812	0		=			
ANR	824825	Identifier	list_head		824812	0					
ANR	824826	Identifier	NULL		824812	1					
ANR	824827	Identifier	ClassAdListDoesNotDeleteAds :: ~ClassAdListDoesNotDeleteAds		824812	1					
ANR	824828	ParameterList			824812	2					
ANR	824829	CFGEntryNode	ENTRY		824812		True				
ANR	824830	CFGExitNode	EXIT		824812		True				
ANR	824831	Symbol	NULL		824812						
ANR	824832	Symbol	list_head		824812						
ANR	824833	Function	ClassAdList :: ~ClassAdList	66:0:2016:2056							
ANR	824834	FunctionDef	ClassAdList :: ~ClassAdList ()		824833	0					
ANR	824835	CompoundStatement		67:0:2044:2056	824833	0					
ANR	824836	ExpressionStatement	Clear ( )	68:1:2047:2054	824833	0	True				
ANR	824837	CallExpression	Clear ( )		824833	0					
ANR	824838	Callee	Clear		824833	0					
ANR	824839	Identifier	Clear		824833	0					
ANR	824840	ArgumentList			824833	1					
ANR	824841	Identifier	ClassAdList :: ~ClassAdList		824833	1					
ANR	824842	ParameterList			824833	2					
ANR	824843	CFGEntryNode	ENTRY		824833		True				
ANR	824844	CFGExitNode	EXIT		824833		True				
ANR	824845	Function	ClassAdListDoesNotDeleteAds :: Clear	71:0:2059:2329							
ANR	824846	FunctionDef	ClassAdListDoesNotDeleteAds :: Clear ()		824845	0					
ANR	824847	CompoundStatement		72:0:2101:2329	824845	0					
ANR	824848	ForStatement	for ( list_cur = list_head -> next ; list_cur != list_head ; list_cur = list_head -> next )		824845	0					
ANR	824849	ForInit	list_cur = list_head -> next ;	73:5:2108:2132	824845	0	True				
ANR	824850	AssignmentExpression	list_cur = list_head -> next		824845	0		=			
ANR	824851	Identifier	list_cur		824845	0					
ANR	824852	PtrMemberAccess	list_head -> next		824845	1					
ANR	824853	Identifier	list_head		824845	0					
ANR	824854	Identifier	next		824845	1					
ANR	824855	Condition	list_cur != list_head	74:2:2136:2154	824845	1	True				
ANR	824856	EqualityExpression	list_cur != list_head		824845	0		!=			
ANR	824857	Identifier	list_cur		824845	0					
ANR	824858	Identifier	list_head		824845	1					
ANR	824859	AssignmentExpression	list_cur = list_head -> next	75:2:2159:2182	824845	2	True	=			
ANR	824860	Identifier	list_cur		824845	0					
ANR	824861	PtrMemberAccess	list_head -> next		824845	1					
ANR	824862	Identifier	list_head		824845	0					
ANR	824863	Identifier	next		824845	1					
ANR	824864	CompoundStatement		5:1:84:84	824845	3					
ANR	824865	ExpressionStatement	list_head -> next = list_cur -> next	77:2:2190:2222	824845	0	True				
ANR	824866	AssignmentExpression	list_head -> next = list_cur -> next		824845	0		=			
ANR	824867	PtrMemberAccess	list_head -> next		824845	0					
ANR	824868	Identifier	list_head		824845	0					
ANR	824869	Identifier	next		824845	1					
ANR	824870	PtrMemberAccess	list_cur -> next		824845	1					
ANR	824871	Identifier	list_cur		824845	0					
ANR	824872	Identifier	next		824845	1					
ANR	824873	Statement	delete	78:2:2226:2231	824845	1	True				
ANR	824874	ExpressionStatement	list_cur	78:9:2233:2241	824845	2	True				
ANR	824875	Identifier	list_cur		824845	0					
ANR	824876	ExpressionStatement	list_head -> next = list_head	80:1:2247:2274	824845	1	True				
ANR	824877	AssignmentExpression	list_head -> next = list_head		824845	0		=			
ANR	824878	PtrMemberAccess	list_head -> next		824845	0					
ANR	824879	Identifier	list_head		824845	0					
ANR	824880	Identifier	next		824845	1					
ANR	824881	Identifier	list_head		824845	1					
ANR	824882	ExpressionStatement	list_head -> prev = list_head	81:1:2277:2304	824845	2	True				
ANR	824883	AssignmentExpression	list_head -> prev = list_head		824845	0		=			
ANR	824884	PtrMemberAccess	list_head -> prev		824845	0					
ANR	824885	Identifier	list_head		824845	0					
ANR	824886	Identifier	prev		824845	1					
ANR	824887	Identifier	list_head		824845	1					
ANR	824888	ExpressionStatement	list_cur = list_head	82:1:2307:2327	824845	3	True				
ANR	824889	AssignmentExpression	list_cur = list_head		824845	0		=			
ANR	824890	Identifier	list_cur		824845	0					
ANR	824891	Identifier	list_head		824845	1					
ANR	824892	ReturnType	void		824845	1					
ANR	824893	Identifier	ClassAdListDoesNotDeleteAds :: Clear		824845	2					
ANR	824894	ParameterList			824845	3					
ANR	824895	CFGEntryNode	ENTRY		824845		True				
ANR	824896	CFGExitNode	EXIT		824845		True				
ANR	824897	Symbol	list_head -> next		824845						
ANR	824898	Symbol	list_cur -> next		824845						
ANR	824899	Symbol	* list_cur		824845						
ANR	824900	Symbol	* list_head		824845						
ANR	824901	Symbol	list_head		824845						
ANR	824902	Symbol	list_cur		824845						
ANR	824903	Symbol	list_head -> prev		824845						
ANR	824904	Function	ClassAdList :: Clear	85:0:2332:2532							
ANR	824905	FunctionDef	ClassAdList :: Clear ()		824904	0					
ANR	824906	CompoundStatement		86:0:2358:2532	824904	0					
ANR	824907	ForStatement	for ( list_cur = list_head -> next ; list_cur != list_head ; list_cur = list_cur -> next )		824904	0					
ANR	824908	ForInit	list_cur = list_head -> next ;	87:5:2365:2389	824904	0	True				
ANR	824909	AssignmentExpression	list_cur = list_head -> next		824904	0		=			
ANR	824910	Identifier	list_cur		824904	0					
ANR	824911	PtrMemberAccess	list_head -> next		824904	1					
ANR	824912	Identifier	list_head		824904	0					
ANR	824913	Identifier	next		824904	1					
ANR	824914	Condition	list_cur != list_head	88:2:2393:2411	824904	1	True				
ANR	824915	EqualityExpression	list_cur != list_head		824904	0		!=			
ANR	824916	Identifier	list_cur		824904	0					
ANR	824917	Identifier	list_head		824904	1					
ANR	824918	AssignmentExpression	list_cur = list_cur -> next	89:2:2416:2438	824904	2	True	=			
ANR	824919	Identifier	list_cur		824904	0					
ANR	824920	PtrMemberAccess	list_cur -> next		824904	1					
ANR	824921	Identifier	list_cur		824904	0					
ANR	824922	Identifier	next		824904	1					
ANR	824923	CompoundStatement		5:1:83:83	824904	3					
ANR	824924	Statement	delete	91:2:2446:2451	824904	0	True				
ANR	824925	ExpressionStatement	list_cur -> ad	91:9:2453:2465	824904	1	True				
ANR	824926	PtrMemberAccess	list_cur -> ad		824904	0					
ANR	824927	Identifier	list_cur		824904	0					
ANR	824928	Identifier	ad		824904	1					
ANR	824929	ExpressionStatement	list_cur -> ad = NULL	92:2:2469:2488	824904	2	True				
ANR	824930	AssignmentExpression	list_cur -> ad = NULL		824904	0		=			
ANR	824931	PtrMemberAccess	list_cur -> ad		824904	0					
ANR	824932	Identifier	list_cur		824904	0					
ANR	824933	Identifier	ad		824904	1					
ANR	824934	Identifier	NULL		824904	1					
ANR	824935	ExpressionStatement	ClassAdListDoesNotDeleteAds :: Clear ( )	94:1:2494:2530	824904	1	True				
ANR	824936	CallExpression	ClassAdListDoesNotDeleteAds :: Clear ( )		824904	0					
ANR	824937	Callee	ClassAdListDoesNotDeleteAds :: Clear		824904	0					
ANR	824938	Identifier	ClassAdListDoesNotDeleteAds :: Clear		824904	0					
ANR	824939	ArgumentList			824904	1					
ANR	824940	ReturnType	void		824904	1					
ANR	824941	Identifier	ClassAdList :: Clear		824904	2					
ANR	824942	ParameterList			824904	3					
ANR	824943	CFGEntryNode	ENTRY		824904		True				
ANR	824944	CFGExitNode	EXIT		824904		True				
ANR	824945	Symbol	list_head -> next		824904						
ANR	824946	Symbol	list_cur -> next		824904						
ANR	824947	Symbol	* list_cur		824904						
ANR	824948	Symbol	* list_head		824904						
ANR	824949	Symbol	NULL		824904						
ANR	824950	Symbol	list_head		824904						
ANR	824951	Symbol	list_cur		824904						
ANR	824952	Symbol	list_cur -> ad		824904						
ANR	824953	Function	ClassAdListDoesNotDeleteAds :: Next	97:0:2535:2653							
ANR	824954	FunctionDef	ClassAdListDoesNotDeleteAds :: Next ()		824953	0					
ANR	824955	CompoundStatement		98:0:2580:2653	824953	0					
ANR	824956	ExpressionStatement	ASSERT ( list_cur )	99:1:2583:2601	824953	0	True				
ANR	824957	CallExpression	ASSERT ( list_cur )		824953	0					
ANR	824958	Callee	ASSERT		824953	0					
ANR	824959	Identifier	ASSERT		824953	0					
ANR	824960	ArgumentList	list_cur		824953	1					
ANR	824961	Argument	list_cur		824953	0					
ANR	824962	Identifier	list_cur		824953	0					
ANR	824963	ExpressionStatement	list_cur = list_cur -> next	100:1:2604:2629	824953	1	True				
ANR	824964	AssignmentExpression	list_cur = list_cur -> next		824953	0		=			
ANR	824965	Identifier	list_cur		824953	0					
ANR	824966	PtrMemberAccess	list_cur -> next		824953	1					
ANR	824967	Identifier	list_cur		824953	0					
ANR	824968	Identifier	next		824953	1					
ANR	824969	ReturnStatement	return list_cur -> ad ;	101:1:2632:2651	824953	2	True				
ANR	824970	PtrMemberAccess	list_cur -> ad		824953	0					
ANR	824971	Identifier	list_cur		824953	0					
ANR	824972	Identifier	ad		824953	1					
ANR	824973	ReturnType	ClassAd *		824953	1					
ANR	824974	Identifier	ClassAdListDoesNotDeleteAds :: Next		824953	2					
ANR	824975	ParameterList			824953	3					
ANR	824976	CFGEntryNode	ENTRY		824953		True				
ANR	824977	CFGExitNode	EXIT		824953		True				
ANR	824978	Symbol	list_cur -> next		824953						
ANR	824979	Symbol	* list_cur		824953						
ANR	824980	Symbol	list_cur		824953						
ANR	824981	Symbol	list_cur -> ad		824953						
ANR	824982	Function	ClassAdList :: Delete	104:0:2656:2774							
ANR	824983	FunctionDef	ClassAdList :: Delete (ClassAd * cad)		824982	0					
ANR	824984	CompoundStatement		105:0:2694:2774	824982	0					
ANR	824985	IdentifierDeclStatement	int ret = Remove ( cad ) ;	106:1:2697:2720	824982	0	True				
ANR	824986	IdentifierDecl	ret = Remove ( cad )		824982	0					
ANR	824987	IdentifierDeclType	int		824982	0					
ANR	824988	Identifier	ret		824982	1					
ANR	824989	AssignmentExpression	ret = Remove ( cad )		824982	2		=			
ANR	824990	Identifier	ret		824982	0					
ANR	824991	CallExpression	Remove ( cad )		824982	1					
ANR	824992	Callee	Remove		824982	0					
ANR	824993	Identifier	Remove		824982	0					
ANR	824994	ArgumentList	cad		824982	1					
ANR	824995	Argument	cad		824982	0					
ANR	824996	Identifier	cad		824982	0					
ANR	824997	IfStatement	if ( ret == TRUE )		824982	1					
ANR	824998	Condition	ret == TRUE	107:6:2728:2738	824982	0	True				
ANR	824999	EqualityExpression	ret == TRUE		824982	0		==			
ANR	825000	Identifier	ret		824982	0					
ANR	825001	Identifier	TRUE		824982	1					
ANR	825002	CompoundStatement		3:20:47:47	824982	1					
ANR	825003	Statement	delete	108:2:2746:2751	824982	0	True				
ANR	825004	ExpressionStatement	cad	108:9:2753:2756	824982	1	True				
ANR	825005	Identifier	cad		824982	0					
ANR	825006	ReturnStatement	return ret ;	110:1:2762:2772	824982	2	True				
ANR	825007	Identifier	ret		824982	0					
ANR	825008	ReturnType	int		824982	1					
ANR	825009	Identifier	ClassAdList :: Delete		824982	2					
ANR	825010	ParameterList	ClassAd * cad		824982	3					
ANR	825011	Parameter	ClassAd * cad	104:24:2680:2691	824982	0	True				
ANR	825012	ParameterType	ClassAd *		824982	0					
ANR	825013	Identifier	cad		824982	1					
ANR	825014	CFGEntryNode	ENTRY		824982		True				
ANR	825015	CFGExitNode	EXIT		824982		True				
ANR	825016	Symbol	ret		824982						
ANR	825017	Symbol	cad		824982						
ANR	825018	Symbol	TRUE		824982						
ANR	825019	Symbol	Remove		824982						
ANR	825020	Function	ClassAdListDoesNotDeleteAds :: Remove	113:0:2777:3113							
ANR	825021	FunctionDef	ClassAdListDoesNotDeleteAds :: Remove (ClassAd * cad)		825020	0					
ANR	825022	CompoundStatement		114:0:2831:3113	825020	0					
ANR	825023	IdentifierDeclStatement	ClassAdListItem * item = NULL ;	115:1:2834:2862	825020	0	True				
ANR	825024	IdentifierDecl	* item = NULL		825020	0					
ANR	825025	IdentifierDeclType	ClassAdListItem *		825020	0					
ANR	825026	Identifier	item		825020	1					
ANR	825027	AssignmentExpression	* item = NULL		825020	2		=			
ANR	825028	Identifier	NULL		825020	0					
ANR	825029	Identifier	NULL		825020	1					
ANR	825030	IfStatement	"if ( htable . lookup ( cad , item ) == 0 )"		825020	1					
ANR	825031	Condition	"htable . lookup ( cad , item ) == 0"	116:5:2869:2896	825020	0	True				
ANR	825032	EqualityExpression	"htable . lookup ( cad , item ) == 0"		825020	0		==			
ANR	825033	CallExpression	"htable . lookup ( cad , item )"		825020	0					
ANR	825034	Callee	htable . lookup		825020	0					
ANR	825035	MemberAccess	htable . lookup		825020	0					
ANR	825036	Identifier	htable		825020	0					
ANR	825037	Identifier	lookup		825020	1					
ANR	825038	ArgumentList	cad		825020	1					
ANR	825039	Argument	cad		825020	0					
ANR	825040	Identifier	cad		825020	0					
ANR	825041	Argument	item		825020	1					
ANR	825042	Identifier	item		825020	0					
ANR	825043	PrimaryExpression	0		825020	1					
ANR	825044	CompoundStatement		3:36:68:68	825020	1					
ANR	825045	ExpressionStatement	htable . remove ( cad )	117:2:2904:2922	825020	0	True				
ANR	825046	CallExpression	htable . remove ( cad )		825020	0					
ANR	825047	Callee	htable . remove		825020	0					
ANR	825048	MemberAccess	htable . remove		825020	0					
ANR	825049	Identifier	htable		825020	0					
ANR	825050	Identifier	remove		825020	1					
ANR	825051	ArgumentList	cad		825020	1					
ANR	825052	Argument	cad		825020	0					
ANR	825053	Identifier	cad		825020	0					
ANR	825054	ExpressionStatement	ASSERT ( item )	118:2:2926:2940	825020	1	True				
ANR	825055	CallExpression	ASSERT ( item )		825020	0					
ANR	825056	Callee	ASSERT		825020	0					
ANR	825057	Identifier	ASSERT		825020	0					
ANR	825058	ArgumentList	item		825020	1					
ANR	825059	Argument	item		825020	0					
ANR	825060	Identifier	item		825020	0					
ANR	825061	ExpressionStatement	item -> prev -> next = item -> next	119:2:2944:2973	825020	2	True				
ANR	825062	AssignmentExpression	item -> prev -> next = item -> next		825020	0		=			
ANR	825063	PtrMemberAccess	item -> prev -> next		825020	0					
ANR	825064	PtrMemberAccess	item -> prev		825020	0					
ANR	825065	Identifier	item		825020	0					
ANR	825066	Identifier	prev		825020	1					
ANR	825067	Identifier	next		825020	1					
ANR	825068	PtrMemberAccess	item -> next		825020	1					
ANR	825069	Identifier	item		825020	0					
ANR	825070	Identifier	next		825020	1					
ANR	825071	ExpressionStatement	item -> next -> prev = item -> prev	120:2:2977:3006	825020	3	True				
ANR	825072	AssignmentExpression	item -> next -> prev = item -> prev		825020	0		=			
ANR	825073	PtrMemberAccess	item -> next -> prev		825020	0					
ANR	825074	PtrMemberAccess	item -> next		825020	0					
ANR	825075	Identifier	item		825020	0					
ANR	825076	Identifier	next		825020	1					
ANR	825077	Identifier	prev		825020	1					
ANR	825078	PtrMemberAccess	item -> prev		825020	1					
ANR	825079	Identifier	item		825020	0					
ANR	825080	Identifier	prev		825020	1					
ANR	825081	IfStatement	if ( list_cur == item )		825020	4					
ANR	825082	Condition	list_cur == item	121:6:3014:3029	825020	0	True				
ANR	825083	EqualityExpression	list_cur == item		825020	0		==			
ANR	825084	Identifier	list_cur		825020	0					
ANR	825085	Identifier	item		825020	1					
ANR	825086	CompoundStatement		8:25:201:201	825020	1					
ANR	825087	ExpressionStatement	list_cur = item -> prev	122:3:3038:3059	825020	0	True				
ANR	825088	AssignmentExpression	list_cur = item -> prev		825020	0		=			
ANR	825089	Identifier	list_cur		825020	0					
ANR	825090	PtrMemberAccess	item -> prev		825020	1					
ANR	825091	Identifier	item		825020	0					
ANR	825092	Identifier	prev		825020	1					
ANR	825093	Statement	delete	124:2:3067:3072	825020	5	True				
ANR	825094	ExpressionStatement	item	124:9:3074:3078	825020	6	True				
ANR	825095	Identifier	item		825020	0					
ANR	825096	ReturnStatement	return TRUE ;	125:2:3082:3093	825020	7	True				
ANR	825097	Identifier	TRUE		825020	0					
ANR	825098	ReturnStatement	return FALSE ;	127:1:3099:3111	825020	2	True				
ANR	825099	Identifier	FALSE		825020	0					
ANR	825100	ReturnType	int		825020	1					
ANR	825101	Identifier	ClassAdListDoesNotDeleteAds :: Remove		825020	2					
ANR	825102	ParameterList	ClassAd * cad		825020	3					
ANR	825103	Parameter	ClassAd * cad	113:40:2817:2828	825020	0	True				
ANR	825104	ParameterType	ClassAd *		825020	0					
ANR	825105	Identifier	cad		825020	1					
ANR	825106	CFGEntryNode	ENTRY		825020		True				
ANR	825107	CFGExitNode	EXIT		825020		True				
ANR	825108	Symbol	item		825020						
ANR	825109	Symbol	NULL		825020						
ANR	825110	Symbol	htable . lookup		825020						
ANR	825111	Symbol	item -> prev -> next		825020						
ANR	825112	Symbol	list_cur		825020						
ANR	825113	Symbol	cad		825020						
ANR	825114	Symbol	* * item		825020						
ANR	825115	Symbol	item -> prev		825020						
ANR	825116	Symbol	TRUE		825020						
ANR	825117	Symbol	* item -> prev		825020						
ANR	825118	Symbol	item -> next -> prev		825020						
ANR	825119	Symbol	htable		825020						
ANR	825120	Symbol	item -> next		825020						
ANR	825121	Symbol	* item -> next		825020						
ANR	825122	Symbol	* item		825020						
ANR	825123	Symbol	FALSE		825020						
ANR	825124	Function	ClassAdListDoesNotDeleteAds :: Insert	130:0:3116:3458							
ANR	825125	FunctionDef	ClassAdListDoesNotDeleteAds :: Insert (ClassAd * cad)		825124	0					
ANR	825126	CompoundStatement		131:0:3171:3458	825124	0					
ANR	825127	Statement	ClassAdListItem	132:1:3174:3188	825124	0	True				
ANR	825128	Statement	*	132:17:3190:3190	825124	1	True				
ANR	825129	Statement	item	132:18:3191:3194	825124	2	True				
ANR	825130	Statement	=	132:23:3196:3196	825124	3	True				
ANR	825131	Statement	new	132:25:3198:3200	825124	4	True				
ANR	825132	ExpressionStatement	ClassAdListItem	132:29:3202:3217	825124	5	True				
ANR	825133	Identifier	ClassAdListItem		825124	0					
ANR	825134	ExpressionStatement	item -> ad = cad	133:1:3220:3234	825124	6	True				
ANR	825135	AssignmentExpression	item -> ad = cad		825124	0		=			
ANR	825136	PtrMemberAccess	item -> ad		825124	0					
ANR	825137	Identifier	item		825124	0					
ANR	825138	Identifier	ad		825124	1					
ANR	825139	Identifier	cad		825124	1					
ANR	825140	IfStatement	"if ( htable . insert ( cad , item ) == - 1 )"		825124	7					
ANR	825141	Condition	"htable . insert ( cad , item ) == - 1"	135:5:3242:3270	825124	0	True				
ANR	825142	EqualityExpression	"htable . insert ( cad , item ) == - 1"		825124	0		==			
ANR	825143	CallExpression	"htable . insert ( cad , item )"		825124	0					
ANR	825144	Callee	htable . insert		825124	0					
ANR	825145	MemberAccess	htable . insert		825124	0					
ANR	825146	Identifier	htable		825124	0					
ANR	825147	Identifier	insert		825124	1					
ANR	825148	ArgumentList	cad		825124	1					
ANR	825149	Argument	cad		825124	0					
ANR	825150	Identifier	cad		825124	0					
ANR	825151	Argument	item		825124	1					
ANR	825152	Identifier	item		825124	0					
ANR	825153	UnaryOperationExpression	- 1		825124	1					
ANR	825154	UnaryOperator	-		825124	0					
ANR	825155	PrimaryExpression	1		825124	1					
ANR	825156	CompoundStatement		5:37:102:102	825124	1					
ANR	825157	Statement	delete	136:2:3278:3283	825124	0	True				
ANR	825158	ExpressionStatement	item	136:9:3285:3289	825124	1	True				
ANR	825159	Identifier	item		825124	0					
ANR	825160	ReturnStatement	return ;	137:2:3293:3299	825124	2	True				
ANR	825161	ExpressionStatement	item -> next = list_head	140:1:3351:3373	825124	8	True				
ANR	825162	AssignmentExpression	item -> next = list_head		825124	0		=			
ANR	825163	PtrMemberAccess	item -> next		825124	0					
ANR	825164	Identifier	item		825124	0					
ANR	825165	Identifier	next		825124	1					
ANR	825166	Identifier	list_head		825124	1					
ANR	825167	ExpressionStatement	item -> prev = list_head -> prev	141:1:3376:3404	825124	9	True				
ANR	825168	AssignmentExpression	item -> prev = list_head -> prev		825124	0		=			
ANR	825169	PtrMemberAccess	item -> prev		825124	0					
ANR	825170	Identifier	item		825124	0					
ANR	825171	Identifier	prev		825124	1					
ANR	825172	PtrMemberAccess	list_head -> prev		825124	1					
ANR	825173	Identifier	list_head		825124	0					
ANR	825174	Identifier	prev		825124	1					
ANR	825175	ExpressionStatement	item -> prev -> next = item	142:1:3407:3430	825124	10	True				
ANR	825176	AssignmentExpression	item -> prev -> next = item		825124	0		=			
ANR	825177	PtrMemberAccess	item -> prev -> next		825124	0					
ANR	825178	PtrMemberAccess	item -> prev		825124	0					
ANR	825179	Identifier	item		825124	0					
ANR	825180	Identifier	prev		825124	1					
ANR	825181	Identifier	next		825124	1					
ANR	825182	Identifier	item		825124	1					
ANR	825183	ExpressionStatement	item -> next -> prev = item	143:1:3433:3456	825124	11	True				
ANR	825184	AssignmentExpression	item -> next -> prev = item		825124	0		=			
ANR	825185	PtrMemberAccess	item -> next -> prev		825124	0					
ANR	825186	PtrMemberAccess	item -> next		825124	0					
ANR	825187	Identifier	item		825124	0					
ANR	825188	Identifier	next		825124	1					
ANR	825189	Identifier	prev		825124	1					
ANR	825190	Identifier	item		825124	1					
ANR	825191	ReturnType	void		825124	1					
ANR	825192	Identifier	ClassAdListDoesNotDeleteAds :: Insert		825124	2					
ANR	825193	ParameterList	ClassAd * cad		825124	3					
ANR	825194	Parameter	ClassAd * cad	130:41:3157:3168	825124	0	True				
ANR	825195	ParameterType	ClassAd *		825124	0					
ANR	825196	Identifier	cad		825124	1					
ANR	825197	CFGEntryNode	ENTRY		825124		True				
ANR	825198	CFGExitNode	EXIT		825124		True				
ANR	825199	Symbol	item		825124						
ANR	825200	Symbol	list_head		825124						
ANR	825201	Symbol	item -> prev -> next		825124						
ANR	825202	Symbol	cad		825124						
ANR	825203	Symbol	list_head -> prev		825124						
ANR	825204	Symbol	* * item		825124						
ANR	825205	Symbol	item -> prev		825124						
ANR	825206	Symbol	* item -> prev		825124						
ANR	825207	Symbol	item -> next -> prev		825124						
ANR	825208	Symbol	htable		825124						
ANR	825209	Symbol	item -> next		825124						
ANR	825210	Symbol	* list_head		825124						
ANR	825211	Symbol	item -> ad		825124						
ANR	825212	Symbol	* item -> next		825124						
ANR	825213	Symbol	* item		825124						
ANR	825214	Symbol	htable . insert		825124						
ANR	825215	Function	ClassAdListDoesNotDeleteAds :: Open	146:0:3461:3527							
ANR	825216	FunctionDef	ClassAdListDoesNotDeleteAds :: Open ()		825215	0					
ANR	825217	CompoundStatement		147:0:3502:3527	825215	0					
ANR	825218	ExpressionStatement	list_cur = list_head	148:1:3505:3525	825215	0	True				
ANR	825219	AssignmentExpression	list_cur = list_head		825215	0		=			
ANR	825220	Identifier	list_cur		825215	0					
ANR	825221	Identifier	list_head		825215	1					
ANR	825222	ReturnType	void		825215	1					
ANR	825223	Identifier	ClassAdListDoesNotDeleteAds :: Open		825215	2					
ANR	825224	ParameterList			825215	3					
ANR	825225	CFGEntryNode	ENTRY		825215		True				
ANR	825226	CFGExitNode	EXIT		825215		True				
ANR	825227	Symbol	list_head		825215						
ANR	825228	Symbol	list_cur		825215						
ANR	825229	Function	ClassAdListDoesNotDeleteAds :: Close	151:0:3530:3574							
ANR	825230	FunctionDef	ClassAdListDoesNotDeleteAds :: Close ()		825229	0					
ANR	825231	CompoundStatement		152:0:3572:3574	825229	0					
ANR	825232	ReturnType	void		825229	1					
ANR	825233	Identifier	ClassAdListDoesNotDeleteAds :: Close		825229	2					
ANR	825234	ParameterList			825229	3					
ANR	825235	CFGEntryNode	ENTRY		825229		True				
ANR	825236	CFGExitNode	EXIT		825229		True				
ANR	825237	Function	ClassAdListDoesNotDeleteAds :: Length	155:0:3577:3654							
ANR	825238	FunctionDef	ClassAdListDoesNotDeleteAds :: Length ()		825237	0					
ANR	825239	CompoundStatement		156:0:3619:3654	825237	0					
ANR	825240	ReturnStatement	return htable . getNumElements ( ) ;	157:1:3622:3652	825237	0	True				
ANR	825241	CallExpression	htable . getNumElements ( )		825237	0					
ANR	825242	Callee	htable . getNumElements		825237	0					
ANR	825243	MemberAccess	htable . getNumElements		825237	0					
ANR	825244	Identifier	htable		825237	0					
ANR	825245	Identifier	getNumElements		825237	1					
ANR	825246	ArgumentList			825237	1					
ANR	825247	ReturnType	int		825237	1					
ANR	825248	Identifier	ClassAdListDoesNotDeleteAds :: Length		825237	2					
ANR	825249	ParameterList			825237	3					
ANR	825250	CFGEntryNode	ENTRY		825237		True				
ANR	825251	CFGExitNode	EXIT		825237		True				
ANR	825252	Symbol	htable . getNumElements		825237						
ANR	825253	Symbol	htable		825237						
ANR	825254	Function	ClassAdListDoesNotDeleteAds :: Sort	160:0:3657:4485							
ANR	825255	FunctionDef	"ClassAdListDoesNotDeleteAds :: Sort (SortFunctionType smallerThan , void * userInfo)"		825254	0					
ANR	825256	CompoundStatement		161:0:3742:4485	825254	0					
ANR	825257	IdentifierDeclStatement	"ClassAdComparator isSmallerThan ( userInfo , smallerThan ) ;"	162:1:3745:3799	825254	0	True				
ANR	825258	IdentifierDecl	"isSmallerThan ( userInfo , smallerThan )"		825254	0					
ANR	825259	IdentifierDeclType	ClassAdComparator		825254	0					
ANR	825260	Identifier	isSmallerThan		825254	1					
ANR	825261	Expression	"userInfo , smallerThan"		825254	2					
ANR	825262	Identifier	userInfo		825254	0					
ANR	825263	Identifier	smallerThan		825254	1					
ANR	825264	IdentifierDeclStatement	std :: vector < ClassAdListItem * > tmp_vect ;	166:1:3856:3895	825254	1	True				
ANR	825265	IdentifierDecl	tmp_vect		825254	0					
ANR	825266	IdentifierDeclType	std :: vector < ClassAdListItem * >		825254	0					
ANR	825267	Identifier	tmp_vect		825254	1					
ANR	825268	IdentifierDeclStatement	ClassAdListItem * item ;	167:1:3898:3919	825254	2	True				
ANR	825269	IdentifierDecl	* item		825254	0					
ANR	825270	IdentifierDeclType	ClassAdListItem *		825254	0					
ANR	825271	Identifier	item		825254	1					
ANR	825272	ForStatement	for ( item = list_head -> next ; item != list_head ; item = item -> next )		825254	3					
ANR	825273	ForInit	item = list_head -> next ;	169:5:3927:3947	825254	0	True				
ANR	825274	AssignmentExpression	item = list_head -> next		825254	0		=			
ANR	825275	Identifier	item		825254	0					
ANR	825276	PtrMemberAccess	list_head -> next		825254	1					
ANR	825277	Identifier	list_head		825254	0					
ANR	825278	Identifier	next		825254	1					
ANR	825279	Condition	item != list_head	170:2:3951:3965	825254	1	True				
ANR	825280	EqualityExpression	item != list_head		825254	0		!=			
ANR	825281	Identifier	item		825254	0					
ANR	825282	Identifier	list_head		825254	1					
ANR	825283	AssignmentExpression	item = item -> next	171:2:3970:3984	825254	2	True	=			
ANR	825284	Identifier	item		825254	0					
ANR	825285	PtrMemberAccess	item -> next		825254	1					
ANR	825286	Identifier	item		825254	0					
ANR	825287	Identifier	next		825254	1					
ANR	825288	CompoundStatement		12:1:245:245	825254	3					
ANR	825289	ExpressionStatement	tmp_vect . push_back ( item )	173:2:3992:4016	825254	0	True				
ANR	825290	CallExpression	tmp_vect . push_back ( item )		825254	0					
ANR	825291	Callee	tmp_vect . push_back		825254	0					
ANR	825292	MemberAccess	tmp_vect . push_back		825254	0					
ANR	825293	Identifier	tmp_vect		825254	0					
ANR	825294	Identifier	push_back		825254	1					
ANR	825295	ArgumentList	item		825254	1					
ANR	825296	Argument	item		825254	0					
ANR	825297	Identifier	item		825254	0					
ANR	825298	ExpressionStatement	"std :: sort ( tmp_vect . begin ( ) , tmp_vect . end ( ) , isSmallerThan )"	176:1:4023:4081	825254	4	True				
ANR	825299	CallExpression	"std :: sort ( tmp_vect . begin ( ) , tmp_vect . end ( ) , isSmallerThan )"		825254	0					
ANR	825300	Callee	std :: sort		825254	0					
ANR	825301	Identifier	std :: sort		825254	0					
ANR	825302	ArgumentList	tmp_vect . begin ( )		825254	1					
ANR	825303	Argument	tmp_vect . begin ( )		825254	0					
ANR	825304	CallExpression	tmp_vect . begin ( )		825254	0					
ANR	825305	Callee	tmp_vect . begin		825254	0					
ANR	825306	MemberAccess	tmp_vect . begin		825254	0					
ANR	825307	Identifier	tmp_vect		825254	0					
ANR	825308	Identifier	begin		825254	1					
ANR	825309	ArgumentList			825254	1					
ANR	825310	Argument	tmp_vect . end ( )		825254	1					
ANR	825311	CallExpression	tmp_vect . end ( )		825254	0					
ANR	825312	Callee	tmp_vect . end		825254	0					
ANR	825313	MemberAccess	tmp_vect . end		825254	0					
ANR	825314	Identifier	tmp_vect		825254	0					
ANR	825315	Identifier	end		825254	1					
ANR	825316	ArgumentList			825254	1					
ANR	825317	Argument	isSmallerThan		825254	2					
ANR	825318	Identifier	isSmallerThan		825254	0					
ANR	825319	ExpressionStatement	list_head -> next = list_head	179:1:4105:4132	825254	5	True				
ANR	825320	AssignmentExpression	list_head -> next = list_head		825254	0		=			
ANR	825321	PtrMemberAccess	list_head -> next		825254	0					
ANR	825322	Identifier	list_head		825254	0					
ANR	825323	Identifier	next		825254	1					
ANR	825324	Identifier	list_head		825254	1					
ANR	825325	ExpressionStatement	list_head -> prev = list_head	180:1:4135:4162	825254	6	True				
ANR	825326	AssignmentExpression	list_head -> prev = list_head		825254	0		=			
ANR	825327	PtrMemberAccess	list_head -> prev		825254	0					
ANR	825328	Identifier	list_head		825254	0					
ANR	825329	Identifier	prev		825254	1					
ANR	825330	Identifier	list_head		825254	1					
ANR	825331	IdentifierDeclStatement	std :: vector < ClassAdListItem * > :: iterator it ;	183:1:4214:4257	825254	7	True				
ANR	825332	IdentifierDecl	it		825254	0					
ANR	825333	IdentifierDeclType	std :: vector < ClassAdListItem * > :: iterator		825254	0					
ANR	825334	Identifier	it		825254	1					
ANR	825335	ForStatement	for ( it = tmp_vect . begin ( ) ; it != tmp_vect . end ( ) ; it ++ )		825254	8					
ANR	825336	ForInit	it = tmp_vect . begin ( ) ;	184:5:4264:4285	825254	0	True				
ANR	825337	AssignmentExpression	it = tmp_vect . begin ( )		825254	0		=			
ANR	825338	Identifier	it		825254	0					
ANR	825339	CallExpression	tmp_vect . begin ( )		825254	1					
ANR	825340	Callee	tmp_vect . begin		825254	0					
ANR	825341	MemberAccess	tmp_vect . begin		825254	0					
ANR	825342	Identifier	tmp_vect		825254	0					
ANR	825343	Identifier	begin		825254	1					
ANR	825344	ArgumentList			825254	1					
ANR	825345	Condition	it != tmp_vect . end ( )	185:2:4289:4308	825254	1	True				
ANR	825346	EqualityExpression	it != tmp_vect . end ( )		825254	0		!=			
ANR	825347	Identifier	it		825254	0					
ANR	825348	CallExpression	tmp_vect . end ( )		825254	1					
ANR	825349	Callee	tmp_vect . end		825254	0					
ANR	825350	MemberAccess	tmp_vect . end		825254	0					
ANR	825351	Identifier	tmp_vect		825254	0					
ANR	825352	Identifier	end		825254	1					
ANR	825353	ArgumentList			825254	1					
ANR	825354	PostIncDecOperationExpression	it ++	186:2:4313:4316	825254	2	True				
ANR	825355	Identifier	it		825254	0					
ANR	825356	IncDec	++		825254	1					
ANR	825357	CompoundStatement		27:1:577:577	825254	3					
ANR	825358	ExpressionStatement	item = * ( it )	188:2:4324:4336	825254	0	True				
ANR	825359	AssignmentExpression	item = * ( it )		825254	0		=			
ANR	825360	Identifier	item		825254	0					
ANR	825361	UnaryOperationExpression	* ( it )		825254	1					
ANR	825362	UnaryOperator	*		825254	0					
ANR	825363	Identifier	it		825254	1					
ANR	825364	ExpressionStatement	item -> next = list_head	190:2:4372:4394	825254	1	True				
ANR	825365	AssignmentExpression	item -> next = list_head		825254	0		=			
ANR	825366	PtrMemberAccess	item -> next		825254	0					
ANR	825367	Identifier	item		825254	0					
ANR	825368	Identifier	next		825254	1					
ANR	825369	Identifier	list_head		825254	1					
ANR	825370	ExpressionStatement	item -> prev = list_head -> prev	191:2:4398:4426	825254	2	True				
ANR	825371	AssignmentExpression	item -> prev = list_head -> prev		825254	0		=			
ANR	825372	PtrMemberAccess	item -> prev		825254	0					
ANR	825373	Identifier	item		825254	0					
ANR	825374	Identifier	prev		825254	1					
ANR	825375	PtrMemberAccess	list_head -> prev		825254	1					
ANR	825376	Identifier	list_head		825254	0					
ANR	825377	Identifier	prev		825254	1					
ANR	825378	ExpressionStatement	item -> prev -> next = item	192:2:4430:4453	825254	3	True				
ANR	825379	AssignmentExpression	item -> prev -> next = item		825254	0		=			
ANR	825380	PtrMemberAccess	item -> prev -> next		825254	0					
ANR	825381	PtrMemberAccess	item -> prev		825254	0					
ANR	825382	Identifier	item		825254	0					
ANR	825383	Identifier	prev		825254	1					
ANR	825384	Identifier	next		825254	1					
ANR	825385	Identifier	item		825254	1					
ANR	825386	ExpressionStatement	item -> next -> prev = item	193:2:4457:4480	825254	4	True				
ANR	825387	AssignmentExpression	item -> next -> prev = item		825254	0		=			
ANR	825388	PtrMemberAccess	item -> next -> prev		825254	0					
ANR	825389	PtrMemberAccess	item -> next		825254	0					
ANR	825390	Identifier	item		825254	0					
ANR	825391	Identifier	next		825254	1					
ANR	825392	Identifier	prev		825254	1					
ANR	825393	Identifier	item		825254	1					
ANR	825394	ReturnType	void		825254	1					
ANR	825395	Identifier	ClassAdListDoesNotDeleteAds :: Sort		825254	2					
ANR	825396	ParameterList	"SortFunctionType smallerThan , void * userInfo"		825254	3					
ANR	825397	Parameter	SortFunctionType smallerThan	160:39:3696:3723	825254	0	True				
ANR	825398	ParameterType	SortFunctionType		825254	0					
ANR	825399	Identifier	smallerThan		825254	1					
ANR	825400	Parameter	void * userInfo	160:69:3726:3739	825254	1	True				
ANR	825401	ParameterType	void *		825254	0					
ANR	825402	Identifier	userInfo		825254	1					
ANR	825403	CFGEntryNode	ENTRY		825254		True				
ANR	825404	CFGExitNode	EXIT		825254		True				
ANR	825405	Symbol	isSmallerThan		825254						
ANR	825406	Symbol	list_head -> next		825254						
ANR	825407	Symbol	userInfo		825254						
ANR	825408	Symbol	smallerThan		825254						
ANR	825409	Symbol	item		825254						
ANR	825410	Symbol	list_head		825254						
ANR	825411	Symbol	tmp_vect . end		825254						
ANR	825412	Symbol	item -> prev -> next		825254						
ANR	825413	Symbol	list_head -> prev		825254						
ANR	825414	Symbol	* * item		825254						
ANR	825415	Symbol	tmp_vect		825254						
ANR	825416	Symbol	item -> prev		825254						
ANR	825417	Symbol	it		825254						
ANR	825418	Symbol	* item -> prev		825254						
ANR	825419	Symbol	item -> next -> prev		825254						
ANR	825420	Symbol	* ( it )		825254						
ANR	825421	Symbol	item -> next		825254						
ANR	825422	Symbol	* it		825254						
ANR	825423	Symbol	* list_head		825254						
ANR	825424	Symbol	* item -> next		825254						
ANR	825425	Symbol	* item		825254						
ANR	825426	Symbol	tmp_vect . begin		825254						
ANR	825427	Function	ClassAdListDoesNotDeleteAds :: Shuffle	197:0:4488:5212							
ANR	825428	FunctionDef	ClassAdListDoesNotDeleteAds :: Shuffle ()		825427	0					
ANR	825429	CompoundStatement		199:0:4532:5212	825427	0					
ANR	825430	IdentifierDeclStatement	std :: vector < ClassAdListItem * > tmp_vect ;	202:1:4588:4627	825427	0	True				
ANR	825431	IdentifierDecl	tmp_vect		825427	0					
ANR	825432	IdentifierDeclType	std :: vector < ClassAdListItem * >		825427	0					
ANR	825433	Identifier	tmp_vect		825427	1					
ANR	825434	IdentifierDeclStatement	ClassAdListItem * item ;	203:1:4630:4651	825427	1	True				
ANR	825435	IdentifierDecl	* item		825427	0					
ANR	825436	IdentifierDeclType	ClassAdListItem *		825427	0					
ANR	825437	Identifier	item		825427	1					
ANR	825438	ForStatement	for ( item = list_head -> next ; item != list_head ; item = item -> next )		825427	2					
ANR	825439	ForInit	item = list_head -> next ;	205:5:4659:4679	825427	0	True				
ANR	825440	AssignmentExpression	item = list_head -> next		825427	0		=			
ANR	825441	Identifier	item		825427	0					
ANR	825442	PtrMemberAccess	list_head -> next		825427	1					
ANR	825443	Identifier	list_head		825427	0					
ANR	825444	Identifier	next		825427	1					
ANR	825445	Condition	item != list_head	206:2:4683:4697	825427	1	True				
ANR	825446	EqualityExpression	item != list_head		825427	0		!=			
ANR	825447	Identifier	item		825427	0					
ANR	825448	Identifier	list_head		825427	1					
ANR	825449	AssignmentExpression	item = item -> next	207:2:4702:4716	825427	2	True	=			
ANR	825450	Identifier	item		825427	0					
ANR	825451	PtrMemberAccess	item -> next		825427	1					
ANR	825452	Identifier	item		825427	0					
ANR	825453	Identifier	next		825427	1					
ANR	825454	CompoundStatement		10:1:187:187	825427	3					
ANR	825455	ExpressionStatement	tmp_vect . push_back ( item )	209:2:4724:4748	825427	0	True				
ANR	825456	CallExpression	tmp_vect . push_back ( item )		825427	0					
ANR	825457	Callee	tmp_vect . push_back		825427	0					
ANR	825458	MemberAccess	tmp_vect . push_back		825427	0					
ANR	825459	Identifier	tmp_vect		825427	0					
ANR	825460	Identifier	push_back		825427	1					
ANR	825461	ArgumentList	item		825427	1					
ANR	825462	Argument	item		825427	0					
ANR	825463	Identifier	item		825427	0					
ANR	825464	ExpressionStatement	"std :: random_shuffle ( tmp_vect . begin ( ) , tmp_vect . end ( ) )"	212:1:4755:4808	825427	3	True				
ANR	825465	CallExpression	"std :: random_shuffle ( tmp_vect . begin ( ) , tmp_vect . end ( ) )"		825427	0					
ANR	825466	Callee	std :: random_shuffle		825427	0					
ANR	825467	Identifier	std :: random_shuffle		825427	0					
ANR	825468	ArgumentList	tmp_vect . begin ( )		825427	1					
ANR	825469	Argument	tmp_vect . begin ( )		825427	0					
ANR	825470	CallExpression	tmp_vect . begin ( )		825427	0					
ANR	825471	Callee	tmp_vect . begin		825427	0					
ANR	825472	MemberAccess	tmp_vect . begin		825427	0					
ANR	825473	Identifier	tmp_vect		825427	0					
ANR	825474	Identifier	begin		825427	1					
ANR	825475	ArgumentList			825427	1					
ANR	825476	Argument	tmp_vect . end ( )		825427	1					
ANR	825477	CallExpression	tmp_vect . end ( )		825427	0					
ANR	825478	Callee	tmp_vect . end		825427	0					
ANR	825479	MemberAccess	tmp_vect . end		825427	0					
ANR	825480	Identifier	tmp_vect		825427	0					
ANR	825481	Identifier	end		825427	1					
ANR	825482	ArgumentList			825427	1					
ANR	825483	ExpressionStatement	list_head -> next = list_head	215:1:4832:4859	825427	4	True				
ANR	825484	AssignmentExpression	list_head -> next = list_head		825427	0		=			
ANR	825485	PtrMemberAccess	list_head -> next		825427	0					
ANR	825486	Identifier	list_head		825427	0					
ANR	825487	Identifier	next		825427	1					
ANR	825488	Identifier	list_head		825427	1					
ANR	825489	ExpressionStatement	list_head -> prev = list_head	216:1:4862:4889	825427	5	True				
ANR	825490	AssignmentExpression	list_head -> prev = list_head		825427	0		=			
ANR	825491	PtrMemberAccess	list_head -> prev		825427	0					
ANR	825492	Identifier	list_head		825427	0					
ANR	825493	Identifier	prev		825427	1					
ANR	825494	Identifier	list_head		825427	1					
ANR	825495	IdentifierDeclStatement	std :: vector < ClassAdListItem * > :: iterator it ;	219:1:4941:4984	825427	6	True				
ANR	825496	IdentifierDecl	it		825427	0					
ANR	825497	IdentifierDeclType	std :: vector < ClassAdListItem * > :: iterator		825427	0					
ANR	825498	Identifier	it		825427	1					
ANR	825499	ForStatement	for ( it = tmp_vect . begin ( ) ; it != tmp_vect . end ( ) ; it ++ )		825427	7					
ANR	825500	ForInit	it = tmp_vect . begin ( ) ;	220:5:4991:5012	825427	0	True				
ANR	825501	AssignmentExpression	it = tmp_vect . begin ( )		825427	0		=			
ANR	825502	Identifier	it		825427	0					
ANR	825503	CallExpression	tmp_vect . begin ( )		825427	1					
ANR	825504	Callee	tmp_vect . begin		825427	0					
ANR	825505	MemberAccess	tmp_vect . begin		825427	0					
ANR	825506	Identifier	tmp_vect		825427	0					
ANR	825507	Identifier	begin		825427	1					
ANR	825508	ArgumentList			825427	1					
ANR	825509	Condition	it != tmp_vect . end ( )	221:2:5016:5035	825427	1	True				
ANR	825510	EqualityExpression	it != tmp_vect . end ( )		825427	0		!=			
ANR	825511	Identifier	it		825427	0					
ANR	825512	CallExpression	tmp_vect . end ( )		825427	1					
ANR	825513	Callee	tmp_vect . end		825427	0					
ANR	825514	MemberAccess	tmp_vect . end		825427	0					
ANR	825515	Identifier	tmp_vect		825427	0					
ANR	825516	Identifier	end		825427	1					
ANR	825517	ArgumentList			825427	1					
ANR	825518	PostIncDecOperationExpression	it ++	222:2:5040:5043	825427	2	True				
ANR	825519	Identifier	it		825427	0					
ANR	825520	IncDec	++		825427	1					
ANR	825521	CompoundStatement		25:1:514:514	825427	3					
ANR	825522	ExpressionStatement	item = * ( it )	224:2:5051:5063	825427	0	True				
ANR	825523	AssignmentExpression	item = * ( it )		825427	0		=			
ANR	825524	Identifier	item		825427	0					
ANR	825525	UnaryOperationExpression	* ( it )		825427	1					
ANR	825526	UnaryOperator	*		825427	0					
ANR	825527	Identifier	it		825427	1					
ANR	825528	ExpressionStatement	item -> next = list_head	226:2:5099:5121	825427	1	True				
ANR	825529	AssignmentExpression	item -> next = list_head		825427	0		=			
ANR	825530	PtrMemberAccess	item -> next		825427	0					
ANR	825531	Identifier	item		825427	0					
ANR	825532	Identifier	next		825427	1					
ANR	825533	Identifier	list_head		825427	1					
ANR	825534	ExpressionStatement	item -> prev = list_head -> prev	227:2:5125:5153	825427	2	True				
ANR	825535	AssignmentExpression	item -> prev = list_head -> prev		825427	0		=			
ANR	825536	PtrMemberAccess	item -> prev		825427	0					
ANR	825537	Identifier	item		825427	0					
ANR	825538	Identifier	prev		825427	1					
ANR	825539	PtrMemberAccess	list_head -> prev		825427	1					
ANR	825540	Identifier	list_head		825427	0					
ANR	825541	Identifier	prev		825427	1					
ANR	825542	ExpressionStatement	item -> prev -> next = item	228:2:5157:5180	825427	3	True				
ANR	825543	AssignmentExpression	item -> prev -> next = item		825427	0		=			
ANR	825544	PtrMemberAccess	item -> prev -> next		825427	0					
ANR	825545	PtrMemberAccess	item -> prev		825427	0					
ANR	825546	Identifier	item		825427	0					
ANR	825547	Identifier	prev		825427	1					
ANR	825548	Identifier	next		825427	1					
ANR	825549	Identifier	item		825427	1					
ANR	825550	ExpressionStatement	item -> next -> prev = item	229:2:5184:5207	825427	4	True				
ANR	825551	AssignmentExpression	item -> next -> prev = item		825427	0		=			
ANR	825552	PtrMemberAccess	item -> next -> prev		825427	0					
ANR	825553	PtrMemberAccess	item -> next		825427	0					
ANR	825554	Identifier	item		825427	0					
ANR	825555	Identifier	next		825427	1					
ANR	825556	Identifier	prev		825427	1					
ANR	825557	Identifier	item		825427	1					
ANR	825558	ReturnType	void		825427	1					
ANR	825559	Identifier	ClassAdListDoesNotDeleteAds :: Shuffle		825427	2					
ANR	825560	ParameterList			825427	3					
ANR	825561	CFGEntryNode	ENTRY		825427		True				
ANR	825562	CFGExitNode	EXIT		825427		True				
ANR	825563	Symbol	list_head -> next		825427						
ANR	825564	Symbol	item		825427						
ANR	825565	Symbol	list_head		825427						
ANR	825566	Symbol	tmp_vect . end		825427						
ANR	825567	Symbol	item -> prev -> next		825427						
ANR	825568	Symbol	list_head -> prev		825427						
ANR	825569	Symbol	* * item		825427						
ANR	825570	Symbol	tmp_vect		825427						
ANR	825571	Symbol	item -> prev		825427						
ANR	825572	Symbol	it		825427						
ANR	825573	Symbol	* item -> prev		825427						
ANR	825574	Symbol	item -> next -> prev		825427						
ANR	825575	Symbol	* ( it )		825427						
ANR	825576	Symbol	item -> next		825427						
ANR	825577	Symbol	* it		825427						
ANR	825578	Symbol	* list_head		825427						
ANR	825579	Symbol	* item -> next		825427						
ANR	825580	Symbol	* item		825427						
ANR	825581	Symbol	tmp_vect . begin		825427						
ANR	825582	Function	ClassAdListDoesNotDeleteAds :: fPrintAttrListList	233:0:5215:5959							
ANR	825583	FunctionDef	"ClassAdListDoesNotDeleteAds :: fPrintAttrListList (FILE * f , bool use_xml , StringList * attr_white_list)"		825582	0					
ANR	825584	CompoundStatement		234:0:5320:5959	825582	0					
ANR	825585	IdentifierDeclStatement	ClassAd * tmpAttrList ;	235:1:5323:5354	825582	0	True				
ANR	825586	IdentifierDecl	* tmpAttrList		825582	0					
ANR	825587	IdentifierDeclType	ClassAd *		825582	0					
ANR	825588	Identifier	tmpAttrList		825582	1					
ANR	825589	IdentifierDeclStatement	ClassAdXMLUnparser unparser ;	236:1:5357:5385	825582	1	True				
ANR	825590	IdentifierDecl	unparser		825582	0					
ANR	825591	IdentifierDeclType	ClassAdXMLUnparser		825582	0					
ANR	825592	Identifier	unparser		825582	1					
ANR	825593	IdentifierDeclStatement	MyString xml ;	237:1:5388:5411	825582	2	True				
ANR	825594	IdentifierDecl	xml		825582	0					
ANR	825595	IdentifierDeclType	MyString		825582	0					
ANR	825596	Identifier	xml		825582	1					
ANR	825597	IfStatement	if ( use_xml )		825582	3					
ANR	825598	Condition	use_xml	239:5:5419:5425	825582	0	True				
ANR	825599	Identifier	use_xml		825582	0					
ANR	825600	CompoundStatement		6:14:107:107	825582	1					
ANR	825601	ExpressionStatement	unparser . SetUseCompactSpacing ( false )	240:2:5432:5468	825582	0	True				
ANR	825602	CallExpression	unparser . SetUseCompactSpacing ( false )		825582	0					
ANR	825603	Callee	unparser . SetUseCompactSpacing		825582	0					
ANR	825604	MemberAccess	unparser . SetUseCompactSpacing		825582	0					
ANR	825605	Identifier	unparser		825582	0					
ANR	825606	Identifier	SetUseCompactSpacing		825582	1					
ANR	825607	ArgumentList	false		825582	1					
ANR	825608	Argument	false		825582	0					
ANR	825609	Identifier	false		825582	0					
ANR	825610	ExpressionStatement	unparser . AddXMLFileHeader ( xml )	241:2:5472:5502	825582	1	True				
ANR	825611	CallExpression	unparser . AddXMLFileHeader ( xml )		825582	0					
ANR	825612	Callee	unparser . AddXMLFileHeader		825582	0					
ANR	825613	MemberAccess	unparser . AddXMLFileHeader		825582	0					
ANR	825614	Identifier	unparser		825582	0					
ANR	825615	Identifier	AddXMLFileHeader		825582	1					
ANR	825616	ArgumentList	xml		825582	1					
ANR	825617	Argument	xml		825582	0					
ANR	825618	Identifier	xml		825582	0					
ANR	825619	ExpressionStatement	"printf ( ""%s\\n"" , xml . Value ( ) )"	242:2:5506:5533	825582	2	True				
ANR	825620	CallExpression	"printf ( ""%s\\n"" , xml . Value ( ) )"		825582	0					
ANR	825621	Callee	printf		825582	0					
ANR	825622	Identifier	printf		825582	0					
ANR	825623	ArgumentList	"""%s\\n"""		825582	1					
ANR	825624	Argument	"""%s\\n"""		825582	0					
ANR	825625	PrimaryExpression	"""%s\\n"""		825582	0					
ANR	825626	Argument	xml . Value ( )		825582	1					
ANR	825627	CallExpression	xml . Value ( )		825582	0					
ANR	825628	Callee	xml . Value		825582	0					
ANR	825629	MemberAccess	xml . Value		825582	0					
ANR	825630	Identifier	xml		825582	0					
ANR	825631	Identifier	Value		825582	1					
ANR	825632	ArgumentList			825582	1					
ANR	825633	ExpressionStatement	"xml = """""	243:2:5537:5545	825582	3	True				
ANR	825634	AssignmentExpression	"xml = """""		825582	0		=			
ANR	825635	Identifier	xml		825582	0					
ANR	825636	PrimaryExpression	""""""		825582	1					
ANR	825637	ExpressionStatement	Open ( )	246:4:5555:5561	825582	4	True				
ANR	825638	CallExpression	Open ( )		825582	0					
ANR	825639	Callee	Open		825582	0					
ANR	825640	Identifier	Open		825582	0					
ANR	825641	ArgumentList			825582	1					
ANR	825642	ForStatement	for ( tmpAttrList = Next ( ) ; tmpAttrList ; tmpAttrList = Next ( ) )		825582	5					
ANR	825643	ForInit	tmpAttrList = Next ( ) ;	247:8:5571:5591	825582	0	True				
ANR	825644	AssignmentExpression	tmpAttrList = Next ( )		825582	0		=			
ANR	825645	Identifier	tmpAttrList		825582	0					
ANR	825646	CallExpression	Next ( )		825582	1					
ANR	825647	Callee	Next		825582	0					
ANR	825648	Identifier	Next		825582	0					
ANR	825649	ArgumentList			825582	1					
ANR	825650	Condition	tmpAttrList	247:30:5593:5603	825582	1	True				
ANR	825651	Identifier	tmpAttrList		825582	0					
ANR	825652	AssignmentExpression	tmpAttrList = Next ( )	247:43:5606:5625	825582	2	True	=			
ANR	825653	Identifier	tmpAttrList		825582	0					
ANR	825654	CallExpression	Next ( )		825582	1					
ANR	825655	Callee	Next		825582	0					
ANR	825656	Identifier	Next		825582	0					
ANR	825657	ArgumentList			825582	1					
ANR	825658	CompoundStatement		14:65:307:307	825582	3					
ANR	825659	IfStatement	if ( use_xml )		825582	0					
ANR	825660	Condition	use_xml	248:6:5636:5642	825582	0	True				
ANR	825661	Identifier	use_xml		825582	0					
ANR	825662	CompoundStatement		15:15:324:324	825582	1					
ANR	825663	ExpressionStatement	"unparser . Unparse ( ( ClassAd * ) tmpAttrList , xml , attr_white_list )"	249:3:5650:5713	825582	0	True				
ANR	825664	CallExpression	"unparser . Unparse ( ( ClassAd * ) tmpAttrList , xml , attr_white_list )"		825582	0					
ANR	825665	Callee	unparser . Unparse		825582	0					
ANR	825666	MemberAccess	unparser . Unparse		825582	0					
ANR	825667	Identifier	unparser		825582	0					
ANR	825668	Identifier	Unparse		825582	1					
ANR	825669	ArgumentList	( ClassAd * ) tmpAttrList		825582	1					
ANR	825670	Argument	( ClassAd * ) tmpAttrList		825582	0					
ANR	825671	CastExpression	( ClassAd * ) tmpAttrList		825582	0					
ANR	825672	CastTarget	ClassAd *		825582	0					
ANR	825673	Identifier	tmpAttrList		825582	1					
ANR	825674	Argument	xml		825582	1					
ANR	825675	Identifier	xml		825582	0					
ANR	825676	Argument	attr_white_list		825582	2					
ANR	825677	Identifier	attr_white_list		825582	0					
ANR	825678	ExpressionStatement	"printf ( ""%s\\n"" , xml . Value ( ) )"	250:3:5718:5745	825582	1	True				
ANR	825679	CallExpression	"printf ( ""%s\\n"" , xml . Value ( ) )"		825582	0					
ANR	825680	Callee	printf		825582	0					
ANR	825681	Identifier	printf		825582	0					
ANR	825682	ArgumentList	"""%s\\n"""		825582	1					
ANR	825683	Argument	"""%s\\n"""		825582	0					
ANR	825684	PrimaryExpression	"""%s\\n"""		825582	0					
ANR	825685	Argument	xml . Value ( )		825582	1					
ANR	825686	CallExpression	xml . Value ( )		825582	0					
ANR	825687	Callee	xml . Value		825582	0					
ANR	825688	MemberAccess	xml . Value		825582	0					
ANR	825689	Identifier	xml		825582	0					
ANR	825690	Identifier	Value		825582	1					
ANR	825691	ArgumentList			825582	1					
ANR	825692	ExpressionStatement	"xml = """""	251:3:5750:5758	825582	2	True				
ANR	825693	AssignmentExpression	"xml = """""		825582	0		=			
ANR	825694	Identifier	xml		825582	0					
ANR	825695	PrimaryExpression	""""""		825582	1					
ANR	825696	ElseStatement	else		825582	0					
ANR	825697	CompoundStatement		19:9:448:448	825582	0					
ANR	825698	ExpressionStatement	"tmpAttrList -> fPrint ( f , attr_white_list )"	253:3:5774:5812	825582	0	True				
ANR	825699	CallExpression	"tmpAttrList -> fPrint ( f , attr_white_list )"		825582	0					
ANR	825700	Callee	tmpAttrList -> fPrint		825582	0					
ANR	825701	PtrMemberAccess	tmpAttrList -> fPrint		825582	0					
ANR	825702	Identifier	tmpAttrList		825582	0					
ANR	825703	Identifier	fPrint		825582	1					
ANR	825704	ArgumentList	f		825582	1					
ANR	825705	Argument	f		825582	0					
ANR	825706	Identifier	f		825582	0					
ANR	825707	Argument	attr_white_list		825582	1					
ANR	825708	Identifier	attr_white_list		825582	0					
ANR	825709	ExpressionStatement	"fprintf ( f , ""\\n"" )"	255:8:5826:5842	825582	1	True				
ANR	825710	CallExpression	"fprintf ( f , ""\\n"" )"		825582	0					
ANR	825711	Callee	fprintf		825582	0					
ANR	825712	Identifier	fprintf		825582	0					
ANR	825713	ArgumentList	f		825582	1					
ANR	825714	Argument	f		825582	0					
ANR	825715	Identifier	f		825582	0					
ANR	825716	Argument	"""\\n"""		825582	1					
ANR	825717	PrimaryExpression	"""\\n"""		825582	0					
ANR	825718	IfStatement	if ( use_xml )		825582	6					
ANR	825719	Condition	use_xml	257:5:5855:5861	825582	0	True				
ANR	825720	Identifier	use_xml		825582	0					
ANR	825721	CompoundStatement		24:14:543:543	825582	1					
ANR	825722	ExpressionStatement	unparser . AddXMLFileFooter ( xml )	258:2:5868:5898	825582	0	True				
ANR	825723	CallExpression	unparser . AddXMLFileFooter ( xml )		825582	0					
ANR	825724	Callee	unparser . AddXMLFileFooter		825582	0					
ANR	825725	MemberAccess	unparser . AddXMLFileFooter		825582	0					
ANR	825726	Identifier	unparser		825582	0					
ANR	825727	Identifier	AddXMLFileFooter		825582	1					
ANR	825728	ArgumentList	xml		825582	1					
ANR	825729	Argument	xml		825582	0					
ANR	825730	Identifier	xml		825582	0					
ANR	825731	ExpressionStatement	"printf ( ""%s\\n"" , xml . Value ( ) )"	259:2:5902:5929	825582	1	True				
ANR	825732	CallExpression	"printf ( ""%s\\n"" , xml . Value ( ) )"		825582	0					
ANR	825733	Callee	printf		825582	0					
ANR	825734	Identifier	printf		825582	0					
ANR	825735	ArgumentList	"""%s\\n"""		825582	1					
ANR	825736	Argument	"""%s\\n"""		825582	0					
ANR	825737	PrimaryExpression	"""%s\\n"""		825582	0					
ANR	825738	Argument	xml . Value ( )		825582	1					
ANR	825739	CallExpression	xml . Value ( )		825582	0					
ANR	825740	Callee	xml . Value		825582	0					
ANR	825741	MemberAccess	xml . Value		825582	0					
ANR	825742	Identifier	xml		825582	0					
ANR	825743	Identifier	Value		825582	1					
ANR	825744	ArgumentList			825582	1					
ANR	825745	ExpressionStatement	"xml = """""	260:2:5933:5941	825582	2	True				
ANR	825746	AssignmentExpression	"xml = """""		825582	0		=			
ANR	825747	Identifier	xml		825582	0					
ANR	825748	PrimaryExpression	""""""		825582	1					
ANR	825749	ExpressionStatement	Close ( )	262:4:5950:5957	825582	7	True				
ANR	825750	CallExpression	Close ( )		825582	0					
ANR	825751	Callee	Close		825582	0					
ANR	825752	Identifier	Close		825582	0					
ANR	825753	ArgumentList			825582	1					
ANR	825754	ReturnType	void		825582	1					
ANR	825755	Identifier	ClassAdListDoesNotDeleteAds :: fPrintAttrListList		825582	2					
ANR	825756	ParameterList	"FILE * f , bool use_xml , StringList * attr_white_list"		825582	3					
ANR	825757	Parameter	FILE * f	233:53:5268:5274	825582	0	True				
ANR	825758	ParameterType	FILE *		825582	0					
ANR	825759	Identifier	f		825582	1					
ANR	825760	Parameter	bool use_xml	233:62:5277:5288	825582	1	True				
ANR	825761	ParameterType	bool		825582	0					
ANR	825762	Identifier	use_xml		825582	1					
ANR	825763	Parameter	StringList * attr_white_list	233:76:5291:5317	825582	2	True				
ANR	825764	ParameterType	StringList *		825582	0					
ANR	825765	Identifier	attr_white_list		825582	1					
ANR	825766	CFGEntryNode	ENTRY		825582		True				
ANR	825767	CFGExitNode	EXIT		825582		True				
ANR	825768	Symbol	attr_white_list		825582						
ANR	825769	Symbol	tmpAttrList		825582						
ANR	825770	Symbol	f		825582						
ANR	825771	Symbol	xml		825582						
ANR	825772	Symbol	xml . Value		825582						
ANR	825773	Symbol	Next		825582						
ANR	825774	Symbol	false		825582						
ANR	825775	Symbol	unparser		825582						
ANR	825776	Symbol	use_xml		825582						
ANR	825777	Function	ClassAdListDoesNotDeleteAds :: CountMatches	265:0:5962:6284							
ANR	825778	FunctionDef	ClassAdListDoesNotDeleteAds :: CountMatches (classad :: ExprTree * constraint)		825777	0					
ANR	825779	CompoundStatement		266:0:6039:6284	825777	0					
ANR	825780	IdentifierDeclStatement	ClassAd * ad = NULL ;	267:1:6042:6060	825777	0	True				
ANR	825781	IdentifierDecl	* ad = NULL		825777	0					
ANR	825782	IdentifierDeclType	ClassAd *		825777	0					
ANR	825783	Identifier	ad		825777	1					
ANR	825784	AssignmentExpression	* ad = NULL		825777	2		=			
ANR	825785	Identifier	NULL		825777	0					
ANR	825786	Identifier	NULL		825777	1					
ANR	825787	IdentifierDeclStatement	int matchCount = 0 ;	268:1:6063:6082	825777	1	True				
ANR	825788	IdentifierDecl	matchCount = 0		825777	0					
ANR	825789	IdentifierDeclType	int		825777	0					
ANR	825790	Identifier	matchCount		825777	1					
ANR	825791	AssignmentExpression	matchCount = 0		825777	2		=			
ANR	825792	Identifier	matchCount		825777	0					
ANR	825793	PrimaryExpression	0		825777	1					
ANR	825794	IfStatement	if ( constraint == NULL )		825777	2					
ANR	825795	Condition	constraint == NULL	271:6:6122:6139	825777	0	True				
ANR	825796	EqualityExpression	constraint == NULL		825777	0		==			
ANR	825797	Identifier	constraint		825777	0					
ANR	825798	Identifier	NULL		825777	1					
ANR	825799	CompoundStatement		6:27:103:103	825777	1					
ANR	825800	ReturnStatement	return 0 ;	272:2:6147:6155	825777	0	True				
ANR	825801	PrimaryExpression	0		825777	0					
ANR	825802	ExpressionStatement	Rewind ( )	275:1:6162:6170	825777	3	True				
ANR	825803	CallExpression	Rewind ( )		825777	0					
ANR	825804	Callee	Rewind		825777	0					
ANR	825805	Identifier	Rewind		825777	0					
ANR	825806	ArgumentList			825777	1					
ANR	825807	WhileStatement	while ( ( ad = Next ( ) ) )		825777	4					
ANR	825808	Condition	ad = Next ( )	276:8:6180:6192	825777	0	True				
ANR	825809	AssignmentExpression	ad = Next ( )		825777	0		=			
ANR	825810	Identifier	ad		825777	0					
ANR	825811	CallExpression	Next ( )		825777	1					
ANR	825812	Callee	Next		825777	0					
ANR	825813	Identifier	Next		825777	0					
ANR	825814	ArgumentList			825777	1					
ANR	825815	CompoundStatement		11:24:156:156	825777	1					
ANR	825816	IfStatement	"if ( EvalBool ( ad , constraint ) )"		825777	0					
ANR	825817	Condition	"EvalBool ( ad , constraint )"	277:7:6205:6228	825777	0	True				
ANR	825818	CallExpression	"EvalBool ( ad , constraint )"		825777	0					
ANR	825819	Callee	EvalBool		825777	0					
ANR	825820	Identifier	EvalBool		825777	0					
ANR	825821	ArgumentList	ad		825777	1					
ANR	825822	Argument	ad		825777	0					
ANR	825823	Identifier	ad		825777	0					
ANR	825824	Argument	constraint		825777	1					
ANR	825825	Identifier	constraint		825777	0					
ANR	825826	CompoundStatement		12:34:192:192	825777	1					
ANR	825827	ExpressionStatement	matchCount ++	278:3:6237:6249	825777	0	True				
ANR	825828	PostIncDecOperationExpression	matchCount ++		825777	0					
ANR	825829	Identifier	matchCount		825777	0					
ANR	825830	IncDec	++		825777	1					
ANR	825831	ReturnStatement	return matchCount ;	281:1:6265:6282	825777	5	True				
ANR	825832	Identifier	matchCount		825777	0					
ANR	825833	ReturnType	int		825777	1					
ANR	825834	Identifier	ClassAdListDoesNotDeleteAds :: CountMatches		825777	2					
ANR	825835	ParameterList	classad :: ExprTree * constraint		825777	3					
ANR	825836	Parameter	classad :: ExprTree * constraint	265:46:6008:6036	825777	0	True				
ANR	825837	ParameterType	classad :: ExprTree *		825777	0					
ANR	825838	Identifier	constraint		825777	1					
ANR	825839	CFGEntryNode	ENTRY		825777		True				
ANR	825840	CFGExitNode	EXIT		825777		True				
ANR	825841	Symbol	NULL		825777						
ANR	825842	Symbol	ad		825777						
ANR	825843	Symbol	Next		825777						
ANR	825844	Symbol	constraint		825777						
ANR	825845	Symbol	matchCount		825777						
ANR	825846	Symbol	EvalBool		825777						
