command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2003353	File	data/converged/CVE-2011-4930_htcondor/print_wrapped_text.cpp								
ANR	2003354	Function	print_wrapped_text	24:0:871:1708							
ANR	2003355	FunctionDef	"print_wrapped_text (const char * text , FILE * output , int chars_per_line)"		2003354	0					
ANR	2003356	CompoundStatement		28:0:956:1708	2003354	0					
ANR	2003357	IdentifierDeclStatement	"char * text_copy , * t , * token ;"	29:1:959:986	2003354	0	True				
ANR	2003358	IdentifierDecl	* text_copy		2003354	0					
ANR	2003359	IdentifierDeclType	char *		2003354	0					
ANR	2003360	Identifier	text_copy		2003354	1					
ANR	2003361	IdentifierDecl	* t		2003354	1					
ANR	2003362	IdentifierDeclType	char *		2003354	0					
ANR	2003363	Identifier	t		2003354	1					
ANR	2003364	IdentifierDecl	* token		2003354	2					
ANR	2003365	IdentifierDeclType	char *		2003354	0					
ANR	2003366	Identifier	token		2003354	1					
ANR	2003367	IdentifierDeclStatement	int char_count ;	30:1:989:1003	2003354	1	True				
ANR	2003368	IdentifierDecl	char_count		2003354	0					
ANR	2003369	IdentifierDeclType	int		2003354	0					
ANR	2003370	Identifier	char_count		2003354	1					
ANR	2003371	ExpressionStatement	text_copy = strdup ( text )	32:1:1007:1031	2003354	2	True				
ANR	2003372	AssignmentExpression	text_copy = strdup ( text )		2003354	0		=			
ANR	2003373	Identifier	text_copy		2003354	0					
ANR	2003374	CallExpression	strdup ( text )		2003354	1					
ANR	2003375	Callee	strdup		2003354	0					
ANR	2003376	Identifier	strdup		2003354	0					
ANR	2003377	ArgumentList	text		2003354	1					
ANR	2003378	Argument	text		2003354	0					
ANR	2003379	Identifier	text		2003354	0					
ANR	2003380	ExpressionStatement	t = text_copy	33:1:1034:1047	2003354	3	True				
ANR	2003381	AssignmentExpression	t = text_copy		2003354	0		=			
ANR	2003382	Identifier	t		2003354	0					
ANR	2003383	Identifier	text_copy		2003354	1					
ANR	2003384	ExpressionStatement	char_count = 0	35:1:1051:1065	2003354	4	True				
ANR	2003385	AssignmentExpression	char_count = 0		2003354	0		=			
ANR	2003386	Identifier	char_count		2003354	0					
ANR	2003387	PrimaryExpression	0		2003354	1					
ANR	2003388	ExpressionStatement	"token = strtok ( text_copy , "" \\t"" )"	36:1:1068:1100	2003354	5	True				
ANR	2003389	AssignmentExpression	"token = strtok ( text_copy , "" \\t"" )"		2003354	0		=			
ANR	2003390	Identifier	token		2003354	0					
ANR	2003391	CallExpression	"strtok ( text_copy , "" \\t"" )"		2003354	1					
ANR	2003392	Callee	strtok		2003354	0					
ANR	2003393	Identifier	strtok		2003354	0					
ANR	2003394	ArgumentList	text_copy		2003354	1					
ANR	2003395	Argument	text_copy		2003354	0					
ANR	2003396	Identifier	text_copy		2003354	0					
ANR	2003397	Argument	""" \\t"""		2003354	1					
ANR	2003398	PrimaryExpression	""" \\t"""		2003354	0					
ANR	2003399	WhileStatement	while ( token != NULL )		2003354	6					
ANR	2003400	Condition	token != NULL	37:8:1110:1122	2003354	0	True				
ANR	2003401	EqualityExpression	token != NULL		2003354	0		!=			
ANR	2003402	Identifier	token		2003354	0					
ANR	2003403	Identifier	NULL		2003354	1					
ANR	2003404	CompoundStatement		11:2:172:188	2003354	1					
ANR	2003405	IdentifierDeclStatement	int token_length ;	38:2:1129:1145	2003354	0	True				
ANR	2003406	IdentifierDecl	token_length		2003354	0					
ANR	2003407	IdentifierDeclType	int		2003354	0					
ANR	2003408	Identifier	token_length		2003354	1					
ANR	2003409	ExpressionStatement	token_length = strlen ( token )	39:2:1149:1177	2003354	1	True				
ANR	2003410	AssignmentExpression	token_length = strlen ( token )		2003354	0		=			
ANR	2003411	Identifier	token_length		2003354	0					
ANR	2003412	CallExpression	strlen ( token )		2003354	1					
ANR	2003413	Callee	strlen		2003354	0					
ANR	2003414	Identifier	strlen		2003354	0					
ANR	2003415	ArgumentList	token		2003354	1					
ANR	2003416	Argument	token		2003354	0					
ANR	2003417	Identifier	token		2003354	0					
ANR	2003418	IfStatement	if ( token_length < ( chars_per_line - char_count ) )		2003354	2					
ANR	2003419	Condition	token_length < ( chars_per_line - char_count )	40:6:1185:1228	2003354	0	True				
ANR	2003420	RelationalExpression	token_length < ( chars_per_line - char_count )		2003354	0		<			
ANR	2003421	Identifier	token_length		2003354	0					
ANR	2003422	AdditiveExpression	chars_per_line - char_count		2003354	1		-			
ANR	2003423	Identifier	chars_per_line		2003354	0					
ANR	2003424	Identifier	char_count		2003354	1					
ANR	2003425	CompoundStatement		13:52:274:274	2003354	1					
ANR	2003426	ExpressionStatement	"fprintf ( output , ""%s"" , token )"	41:3:1236:1264	2003354	0	True				
ANR	2003427	CallExpression	"fprintf ( output , ""%s"" , token )"		2003354	0					
ANR	2003428	Callee	fprintf		2003354	0					
ANR	2003429	Identifier	fprintf		2003354	0					
ANR	2003430	ArgumentList	output		2003354	1					
ANR	2003431	Argument	output		2003354	0					
ANR	2003432	Identifier	output		2003354	0					
ANR	2003433	Argument	"""%s"""		2003354	1					
ANR	2003434	PrimaryExpression	"""%s"""		2003354	0					
ANR	2003435	Argument	token		2003354	2					
ANR	2003436	Identifier	token		2003354	0					
ANR	2003437	ExpressionStatement	char_count += token_length	42:3:1269:1295	2003354	1	True				
ANR	2003438	AssignmentExpression	char_count += token_length		2003354	0		+=			
ANR	2003439	Identifier	char_count		2003354	0					
ANR	2003440	Identifier	token_length		2003354	1					
ANR	2003441	ElseStatement	else		2003354	0					
ANR	2003442	CompoundStatement		17:7:351:351	2003354	0					
ANR	2003443	ExpressionStatement	"fprintf ( output , ""\\n%s"" , token )"	47:3:1422:1452	2003354	0	True				
ANR	2003444	CallExpression	"fprintf ( output , ""\\n%s"" , token )"		2003354	0					
ANR	2003445	Callee	fprintf		2003354	0					
ANR	2003446	Identifier	fprintf		2003354	0					
ANR	2003447	ArgumentList	output		2003354	1					
ANR	2003448	Argument	output		2003354	0					
ANR	2003449	Identifier	output		2003354	0					
ANR	2003450	Argument	"""\\n%s"""		2003354	1					
ANR	2003451	PrimaryExpression	"""\\n%s"""		2003354	0					
ANR	2003452	Argument	token		2003354	2					
ANR	2003453	Identifier	token		2003354	0					
ANR	2003454	ExpressionStatement	char_count = token_length	48:3:1457:1482	2003354	1	True				
ANR	2003455	AssignmentExpression	char_count = token_length		2003354	0		=			
ANR	2003456	Identifier	char_count		2003354	0					
ANR	2003457	Identifier	token_length		2003354	1					
ANR	2003458	IfStatement	if ( char_count < chars_per_line )		2003354	3					
ANR	2003459	Condition	char_count < chars_per_line	50:6:1494:1520	2003354	0	True				
ANR	2003460	RelationalExpression	char_count < chars_per_line		2003354	0		<			
ANR	2003461	Identifier	char_count		2003354	0					
ANR	2003462	Identifier	chars_per_line		2003354	1					
ANR	2003463	CompoundStatement		23:35:566:566	2003354	1					
ANR	2003464	ExpressionStatement	"fprintf ( output , "" "" )"	51:3:1528:1548	2003354	0	True				
ANR	2003465	CallExpression	"fprintf ( output , "" "" )"		2003354	0					
ANR	2003466	Callee	fprintf		2003354	0					
ANR	2003467	Identifier	fprintf		2003354	0					
ANR	2003468	ArgumentList	output		2003354	1					
ANR	2003469	Argument	output		2003354	0					
ANR	2003470	Identifier	output		2003354	0					
ANR	2003471	Argument	""" """		2003354	1					
ANR	2003472	PrimaryExpression	""" """		2003354	0					
ANR	2003473	ExpressionStatement	char_count ++	52:3:1553:1565	2003354	1	True				
ANR	2003474	PostIncDecOperationExpression	char_count ++		2003354	0					
ANR	2003475	Identifier	char_count		2003354	0					
ANR	2003476	IncDec	++		2003354	1					
ANR	2003477	ElseStatement	else		2003354	0					
ANR	2003478	CompoundStatement		26:9:619:619	2003354	0					
ANR	2003479	ExpressionStatement	"fprintf ( output , ""\\n"" )"	54:3:1581:1602	2003354	0	True				
ANR	2003480	CallExpression	"fprintf ( output , ""\\n"" )"		2003354	0					
ANR	2003481	Callee	fprintf		2003354	0					
ANR	2003482	Identifier	fprintf		2003354	0					
ANR	2003483	ArgumentList	output		2003354	1					
ANR	2003484	Argument	output		2003354	0					
ANR	2003485	Identifier	output		2003354	0					
ANR	2003486	Argument	"""\\n"""		2003354	1					
ANR	2003487	PrimaryExpression	"""\\n"""		2003354	0					
ANR	2003488	ExpressionStatement	char_count = 0	55:3:1607:1621	2003354	1	True				
ANR	2003489	AssignmentExpression	char_count = 0		2003354	0		=			
ANR	2003490	Identifier	char_count		2003354	0					
ANR	2003491	PrimaryExpression	0		2003354	1					
ANR	2003492	ExpressionStatement	"token = strtok ( NULL , "" \\t"" )"	57:2:1632:1659	2003354	4	True				
ANR	2003493	AssignmentExpression	"token = strtok ( NULL , "" \\t"" )"		2003354	0		=			
ANR	2003494	Identifier	token		2003354	0					
ANR	2003495	CallExpression	"strtok ( NULL , "" \\t"" )"		2003354	1					
ANR	2003496	Callee	strtok		2003354	0					
ANR	2003497	Identifier	strtok		2003354	0					
ANR	2003498	ArgumentList	NULL		2003354	1					
ANR	2003499	Argument	NULL		2003354	0					
ANR	2003500	Identifier	NULL		2003354	0					
ANR	2003501	Argument	""" \\t"""		2003354	1					
ANR	2003502	PrimaryExpression	""" \\t"""		2003354	0					
ANR	2003503	ExpressionStatement	"fprintf ( output , ""\\n"" )"	59:1:1665:1686	2003354	7	True				
ANR	2003504	CallExpression	"fprintf ( output , ""\\n"" )"		2003354	0					
ANR	2003505	Callee	fprintf		2003354	0					
ANR	2003506	Identifier	fprintf		2003354	0					
ANR	2003507	ArgumentList	output		2003354	1					
ANR	2003508	Argument	output		2003354	0					
ANR	2003509	Identifier	output		2003354	0					
ANR	2003510	Argument	"""\\n"""		2003354	1					
ANR	2003511	PrimaryExpression	"""\\n"""		2003354	0					
ANR	2003512	ExpressionStatement	free ( t )	61:1:1690:1697	2003354	8	True				
ANR	2003513	CallExpression	free ( t )		2003354	0					
ANR	2003514	Callee	free		2003354	0					
ANR	2003515	Identifier	free		2003354	0					
ANR	2003516	ArgumentList	t		2003354	1					
ANR	2003517	Argument	t		2003354	0					
ANR	2003518	Identifier	t		2003354	0					
ANR	2003519	ReturnStatement	return ;	62:1:1700:1706	2003354	9	True				
ANR	2003520	ReturnType	void		2003354	1					
ANR	2003521	Identifier	print_wrapped_text		2003354	2					
ANR	2003522	ParameterList	"const char * text , FILE * output , int chars_per_line"		2003354	3					
ANR	2003523	Parameter	const char * text	25:4:900:915	2003354	0	True				
ANR	2003524	ParameterType	const char *		2003354	0					
ANR	2003525	Identifier	text		2003354	1					
ANR	2003526	Parameter	FILE * output	26:1:920:931	2003354	1	True				
ANR	2003527	ParameterType	FILE *		2003354	0					
ANR	2003528	Identifier	output		2003354	1					
ANR	2003529	Parameter	int chars_per_line	27:1:936:953	2003354	2	True				
ANR	2003530	ParameterType	int		2003354	0					
ANR	2003531	Identifier	chars_per_line		2003354	1					
ANR	2003532	CFGEntryNode	ENTRY		2003354		True				
ANR	2003533	CFGExitNode	EXIT		2003354		True				
ANR	2003534	Symbol	output		2003354						
ANR	2003535	Symbol	chars_per_line		2003354						
ANR	2003536	Symbol	strlen		2003354						
ANR	2003537	Symbol	NULL		2003354						
ANR	2003538	Symbol	t		2003354						
ANR	2003539	Symbol	token_length		2003354						
ANR	2003540	Symbol	text_copy		2003354						
ANR	2003541	Symbol	char_count		2003354						
ANR	2003542	Symbol	strtok		2003354						
ANR	2003543	Symbol	text		2003354						
ANR	2003544	Symbol	strdup		2003354						
ANR	2003545	Symbol	token		2003354						
