command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5362270	File	data/converged/CVE-2011-4930_htcondor/test_classad_put.cpp								
ANR	5362271	ClassDef	DummyStream	43:0:1430:1816							
ANR	5362272	DeclStmt									
ANR	5362273	Decl							std :: vector < char * > :: iterator	std :: vector < char * > :: iterator ( )	getItr
ANR	5362274	DeclStmt									
ANR	5362275	Decl							void	void ( )	emptyVec
ANR	5362276	DeclStmt									
ANR	5362277	Decl							void	void ( )	printContents
ANR	5362278	Function	~DummyStream	53:8:1599:1625							
ANR	5362279	FunctionDef	~DummyStream ()		5362278	3					
ANR	5362280	CompoundStatement		53:22:1613:1625	5362278	0					
ANR	5362281	ExpressionStatement	emptyVec ( )	53:0:1614:1624	5362278	0	True				
ANR	5362282	CallExpression	emptyVec ( )		5362278	0					
ANR	5362283	Callee	emptyVec		5362278	0					
ANR	5362284	Identifier	emptyVec		5362278	0					
ANR	5362285	ArgumentList			5362278	1					
ANR	5362286	Identifier	~DummyStream		5362278	1					
ANR	5362287	ParameterList			5362278	2					
ANR	5362288	CFGEntryNode	ENTRY		5362278		True				
ANR	5362289	CFGExitNode	EXIT		5362278		True				
ANR	5362290	DeclStmt									
ANR	5362291	Decl							void	void ( )	encode
ANR	5362292	DeclStmt									
ANR	5362293	Decl							int	int ( int blah )	code
ANR	5362294	DeclStmt									
ANR	5362295	Decl							int	int ( char * str )	put
ANR	5362296	DeclStmt									
ANR	5362297	Decl							int	int ( const char * )	put
ANR	5362298	DeclStmt									
ANR	5362299	Decl							int	int ( int i )	put
ANR	5362300	DeclStmt									
ANR	5362301	Decl							std :: vector < char * >	std :: vector < char * >	testVec
ANR	5362302	Function	DummyStream :: DummyStream	67:0:1820:1850							
ANR	5362303	FunctionDef	DummyStream :: DummyStream ()		5362302	0					
ANR	5362304	CompoundStatement		68:0:1848:1850	5362302	0					
ANR	5362305	Identifier	DummyStream :: DummyStream		5362302	1					
ANR	5362306	ParameterList			5362302	2					
ANR	5362307	CFGEntryNode	ENTRY		5362302		True				
ANR	5362308	CFGExitNode	EXIT		5362302		True				
ANR	5362309	Function	DummyStream :: encode	71:0:1853:1906							
ANR	5362310	FunctionDef	DummyStream :: encode ()		5362309	0					
ANR	5362311	CompoundStatement		72:0:1880:1906	5362309	0					
ANR	5362312	ReturnStatement	return ;	74:4:1898:1904	5362309	0	True				
ANR	5362313	ReturnType	void		5362309	1					
ANR	5362314	Identifier	DummyStream :: encode		5362309	2					
ANR	5362315	ParameterList			5362309	3					
ANR	5362316	CFGEntryNode	ENTRY		5362309		True				
ANR	5362317	CFGExitNode	EXIT		5362309		True				
ANR	5362318	Function	DummyStream :: code	77:0:1909:1974							
ANR	5362319	FunctionDef	DummyStream :: code (int blah)		5362318	0					
ANR	5362320	CompoundStatement		78:0:1942:1974	5362318	0					
ANR	5362321	ExpressionStatement	put ( blah )	79:4:1948:1957	5362318	0	True				
ANR	5362322	CallExpression	put ( blah )		5362318	0					
ANR	5362323	Callee	put		5362318	0					
ANR	5362324	Identifier	put		5362318	0					
ANR	5362325	ArgumentList	blah		5362318	1					
ANR	5362326	Argument	blah		5362318	0					
ANR	5362327	Identifier	blah		5362318	0					
ANR	5362328	ReturnStatement	return 1 ;	80:4:1964:1972	5362318	1	True				
ANR	5362329	PrimaryExpression	1		5362318	0					
ANR	5362330	ReturnType	int		5362318	1					
ANR	5362331	Identifier	DummyStream :: code		5362318	2					
ANR	5362332	ParameterList	int blah		5362318	3					
ANR	5362333	Parameter	int blah	77:23:1932:1939	5362318	0	True				
ANR	5362334	ParameterType	int		5362318	0					
ANR	5362335	Identifier	blah		5362318	1					
ANR	5362336	CFGEntryNode	ENTRY		5362318		True				
ANR	5362337	CFGExitNode	EXIT		5362318		True				
ANR	5362338	Symbol	blah		5362318						
ANR	5362339	Function	DummyStream :: put	83:0:1977:2136							
ANR	5362340	FunctionDef	DummyStream :: put (char * str)		5362339	0					
ANR	5362341	CompoundStatement		84:0:2009:2136	5362339	0					
ANR	5362342	IdentifierDeclStatement	char * foo = new char [ strlen ( str ) + 1 ] ;	85:4:2015:2052	5362339	0	True				
ANR	5362343	IdentifierDecl	* foo = new char [ strlen ( str ) + 1 ]		5362339	0					
ANR	5362344	IdentifierDeclType	char *		5362339	0					
ANR	5362345	Identifier	foo		5362339	1					
ANR	5362346	AssignmentExpression	* foo = new char [ strlen ( str ) + 1 ]		5362339	2		=			
ANR	5362347	Identifier	foo		5362339	0					
ANR	5362348	AdditiveExpression	strlen ( str ) + 1		5362339	1		+			
ANR	5362349	CallExpression	strlen ( str )		5362339	0					
ANR	5362350	Callee	strlen		5362339	0					
ANR	5362351	Identifier	strlen		5362339	0					
ANR	5362352	ArgumentList	str		5362339	1					
ANR	5362353	Argument	str		5362339	0					
ANR	5362354	Identifier	str		5362339	0					
ANR	5362355	PrimaryExpression	1		5362339	1					
ANR	5362356	ExpressionStatement	"strncpy ( foo , str , strlen ( str ) + 1 )"	86:4:2058:2092	5362339	1	True				
ANR	5362357	CallExpression	"strncpy ( foo , str , strlen ( str ) + 1 )"		5362339	0					
ANR	5362358	Callee	strncpy		5362339	0					
ANR	5362359	Identifier	strncpy		5362339	0					
ANR	5362360	ArgumentList	foo		5362339	1					
ANR	5362361	Argument	foo		5362339	0					
ANR	5362362	Identifier	foo		5362339	0					
ANR	5362363	Argument	str		5362339	1					
ANR	5362364	Identifier	str		5362339	0					
ANR	5362365	Argument	strlen ( str ) + 1		5362339	2					
ANR	5362366	AdditiveExpression	strlen ( str ) + 1		5362339	0		+			
ANR	5362367	CallExpression	strlen ( str )		5362339	0					
ANR	5362368	Callee	strlen		5362339	0					
ANR	5362369	Identifier	strlen		5362339	0					
ANR	5362370	ArgumentList	str		5362339	1					
ANR	5362371	Argument	str		5362339	0					
ANR	5362372	Identifier	str		5362339	0					
ANR	5362373	PrimaryExpression	1		5362339	1					
ANR	5362374	ExpressionStatement	testVec . push_back ( foo )	87:4:2098:2120	5362339	2	True				
ANR	5362375	CallExpression	testVec . push_back ( foo )		5362339	0					
ANR	5362376	Callee	testVec . push_back		5362339	0					
ANR	5362377	MemberAccess	testVec . push_back		5362339	0					
ANR	5362378	Identifier	testVec		5362339	0					
ANR	5362379	Identifier	push_back		5362339	1					
ANR	5362380	ArgumentList	foo		5362339	1					
ANR	5362381	Argument	foo		5362339	0					
ANR	5362382	Identifier	foo		5362339	0					
ANR	5362383	ReturnStatement	return 1 ;	88:4:2126:2134	5362339	3	True				
ANR	5362384	PrimaryExpression	1		5362339	0					
ANR	5362385	ReturnType	int		5362339	1					
ANR	5362386	Identifier	DummyStream :: put		5362339	2					
ANR	5362387	ParameterList	char * str		5362339	3					
ANR	5362388	Parameter	char * str	83:21:1998:2006	5362339	0	True				
ANR	5362389	ParameterType	char *		5362339	0					
ANR	5362390	Identifier	str		5362339	1					
ANR	5362391	CFGEntryNode	ENTRY		5362339		True				
ANR	5362392	CFGExitNode	EXIT		5362339		True				
ANR	5362393	Symbol	str		5362339						
ANR	5362394	Symbol	strlen		5362339						
ANR	5362395	Symbol	testVec		5362339						
ANR	5362396	Symbol	foo		5362339						
ANR	5362397	Function	DummyStream :: put	91:0:2139:2304							
ANR	5362398	FunctionDef	DummyStream :: put (const char * str)		5362397	0					
ANR	5362399	CompoundStatement		92:0:2177:2304	5362397	0					
ANR	5362400	IdentifierDeclStatement	char * foo = new char [ strlen ( str ) + 1 ] ;	93:4:2183:2220	5362397	0	True				
ANR	5362401	IdentifierDecl	* foo = new char [ strlen ( str ) + 1 ]		5362397	0					
ANR	5362402	IdentifierDeclType	char *		5362397	0					
ANR	5362403	Identifier	foo		5362397	1					
ANR	5362404	AssignmentExpression	* foo = new char [ strlen ( str ) + 1 ]		5362397	2		=			
ANR	5362405	Identifier	foo		5362397	0					
ANR	5362406	AdditiveExpression	strlen ( str ) + 1		5362397	1		+			
ANR	5362407	CallExpression	strlen ( str )		5362397	0					
ANR	5362408	Callee	strlen		5362397	0					
ANR	5362409	Identifier	strlen		5362397	0					
ANR	5362410	ArgumentList	str		5362397	1					
ANR	5362411	Argument	str		5362397	0					
ANR	5362412	Identifier	str		5362397	0					
ANR	5362413	PrimaryExpression	1		5362397	1					
ANR	5362414	ExpressionStatement	"strncpy ( foo , str , strlen ( str ) + 1 )"	94:4:2226:2260	5362397	1	True				
ANR	5362415	CallExpression	"strncpy ( foo , str , strlen ( str ) + 1 )"		5362397	0					
ANR	5362416	Callee	strncpy		5362397	0					
ANR	5362417	Identifier	strncpy		5362397	0					
ANR	5362418	ArgumentList	foo		5362397	1					
ANR	5362419	Argument	foo		5362397	0					
ANR	5362420	Identifier	foo		5362397	0					
ANR	5362421	Argument	str		5362397	1					
ANR	5362422	Identifier	str		5362397	0					
ANR	5362423	Argument	strlen ( str ) + 1		5362397	2					
ANR	5362424	AdditiveExpression	strlen ( str ) + 1		5362397	0		+			
ANR	5362425	CallExpression	strlen ( str )		5362397	0					
ANR	5362426	Callee	strlen		5362397	0					
ANR	5362427	Identifier	strlen		5362397	0					
ANR	5362428	ArgumentList	str		5362397	1					
ANR	5362429	Argument	str		5362397	0					
ANR	5362430	Identifier	str		5362397	0					
ANR	5362431	PrimaryExpression	1		5362397	1					
ANR	5362432	ExpressionStatement	testVec . push_back ( foo )	95:4:2266:2288	5362397	2	True				
ANR	5362433	CallExpression	testVec . push_back ( foo )		5362397	0					
ANR	5362434	Callee	testVec . push_back		5362397	0					
ANR	5362435	MemberAccess	testVec . push_back		5362397	0					
ANR	5362436	Identifier	testVec		5362397	0					
ANR	5362437	Identifier	push_back		5362397	1					
ANR	5362438	ArgumentList	foo		5362397	1					
ANR	5362439	Argument	foo		5362397	0					
ANR	5362440	Identifier	foo		5362397	0					
ANR	5362441	ReturnStatement	return 1 ;	96:4:2294:2302	5362397	3	True				
ANR	5362442	PrimaryExpression	1		5362397	0					
ANR	5362443	ReturnType	int		5362397	1					
ANR	5362444	Identifier	DummyStream :: put		5362397	2					
ANR	5362445	ParameterList	const char * str		5362397	3					
ANR	5362446	Parameter	const char * str	91:21:2160:2174	5362397	0	True				
ANR	5362447	ParameterType	const char *		5362397	0					
ANR	5362448	Identifier	str		5362397	1					
ANR	5362449	CFGEntryNode	ENTRY		5362397		True				
ANR	5362450	CFGExitNode	EXIT		5362397		True				
ANR	5362451	Symbol	str		5362397						
ANR	5362452	Symbol	strlen		5362397						
ANR	5362453	Symbol	testVec		5362397						
ANR	5362454	Symbol	foo		5362397						
ANR	5362455	Function	DummyStream :: put	100:0:2308:2471							
ANR	5362456	FunctionDef	DummyStream :: put (int i)		5362455	0					
ANR	5362457	CompoundStatement		101:0:2336:2471	5362455	0					
ANR	5362458	IdentifierDeclStatement	char * tmp = new char [ 16 ] ;	102:4:2342:2366	5362455	0	True				
ANR	5362459	IdentifierDecl	* tmp = new char [ 16 ]		5362455	0					
ANR	5362460	IdentifierDeclType	char *		5362455	0					
ANR	5362461	Identifier	tmp		5362455	1					
ANR	5362462	AssignmentExpression	* tmp = new char [ 16 ]		5362455	2		=			
ANR	5362463	Identifier	tmp		5362455	0					
ANR	5362464	PrimaryExpression	16		5362455	1					
ANR	5362465	ExpressionStatement	"sprintf ( tmp , ""%d"" , i )"	103:4:2372:2393	5362455	1	True				
ANR	5362466	CallExpression	"sprintf ( tmp , ""%d"" , i )"		5362455	0					
ANR	5362467	Callee	sprintf		5362455	0					
ANR	5362468	Identifier	sprintf		5362455	0					
ANR	5362469	ArgumentList	tmp		5362455	1					
ANR	5362470	Argument	tmp		5362455	0					
ANR	5362471	Identifier	tmp		5362455	0					
ANR	5362472	Argument	"""%d"""		5362455	1					
ANR	5362473	PrimaryExpression	"""%d"""		5362455	0					
ANR	5362474	Argument	i		5362455	2					
ANR	5362475	Identifier	i		5362455	0					
ANR	5362476	ExpressionStatement	put ( tmp )	104:4:2399:2407	5362455	2	True				
ANR	5362477	CallExpression	put ( tmp )		5362455	0					
ANR	5362478	Callee	put		5362455	0					
ANR	5362479	Identifier	put		5362455	0					
ANR	5362480	ArgumentList	tmp		5362455	1					
ANR	5362481	Argument	tmp		5362455	0					
ANR	5362482	Identifier	tmp		5362455	0					
ANR	5362483	Statement	delete	106:4:2443:2448	5362455	3	True				
ANR	5362484	Statement	[	106:10:2449:2449	5362455	4	True				
ANR	5362485	Statement	]	106:11:2450:2450	5362455	5	True				
ANR	5362486	ExpressionStatement	tmp	106:13:2452:2455	5362455	6	True				
ANR	5362487	Identifier	tmp		5362455	0					
ANR	5362488	ReturnStatement	return 1 ;	107:4:2461:2469	5362455	7	True				
ANR	5362489	PrimaryExpression	1		5362455	0					
ANR	5362490	ReturnType	int		5362455	1					
ANR	5362491	Identifier	DummyStream :: put		5362455	2					
ANR	5362492	ParameterList	int i		5362455	3					
ANR	5362493	Parameter	int i	100:21:2329:2333	5362455	0	True				
ANR	5362494	ParameterType	int		5362455	0					
ANR	5362495	Identifier	i		5362455	1					
ANR	5362496	CFGEntryNode	ENTRY		5362455		True				
ANR	5362497	CFGExitNode	EXIT		5362455		True				
ANR	5362498	Symbol	tmp		5362455						
ANR	5362499	Symbol	i		5362455						
ANR	5362500	Function	DummyStream :: getItr	110:0:2474:2555							
ANR	5362501	FunctionDef	DummyStream :: getItr ()		5362500	0					
ANR	5362502	CompoundStatement		111:0:2525:2555	5362500	0					
ANR	5362503	ReturnStatement	return testVec . begin ( ) ;	112:4:2531:2553	5362500	0	True				
ANR	5362504	CallExpression	testVec . begin ( )		5362500	0					
ANR	5362505	Callee	testVec . begin		5362500	0					
ANR	5362506	MemberAccess	testVec . begin		5362500	0					
ANR	5362507	Identifier	testVec		5362500	0					
ANR	5362508	Identifier	begin		5362500	1					
ANR	5362509	ArgumentList			5362500	1					
ANR	5362510	ReturnType	std :: vector < char * > :: iterator		5362500	1					
ANR	5362511	Identifier	DummyStream :: getItr		5362500	2					
ANR	5362512	ParameterList			5362500	3					
ANR	5362513	CFGEntryNode	ENTRY		5362500		True				
ANR	5362514	CFGExitNode	EXIT		5362500		True				
ANR	5362515	Symbol	testVec		5362500						
ANR	5362516	Symbol	testVec . begin		5362500						
ANR	5362517	Function	DummyStream :: emptyVec	115:0:2558:2742							
ANR	5362518	FunctionDef	DummyStream :: emptyVec ()		5362517	0					
ANR	5362519	CompoundStatement		116:0:2587:2742	5362517	0					
ANR	5362520	IdentifierDeclStatement	std :: vector < char * > :: iterator itr ;	117:4:2593:2625	5362517	0	True				
ANR	5362521	IdentifierDecl	itr		5362517	0					
ANR	5362522	IdentifierDeclType	std :: vector < char * > :: iterator		5362517	0					
ANR	5362523	Identifier	itr		5362517	1					
ANR	5362524	ForStatement	for ( itr = testVec . begin ( ) ; itr < testVec . end ( ) ; itr ++ )		5362517	1					
ANR	5362525	ForInit	itr = testVec . begin ( ) ;	118:8:2635:2656	5362517	0	True				
ANR	5362526	AssignmentExpression	itr = testVec . begin ( )		5362517	0		=			
ANR	5362527	Identifier	itr		5362517	0					
ANR	5362528	CallExpression	testVec . begin ( )		5362517	1					
ANR	5362529	Callee	testVec . begin		5362517	0					
ANR	5362530	MemberAccess	testVec . begin		5362517	0					
ANR	5362531	Identifier	testVec		5362517	0					
ANR	5362532	Identifier	begin		5362517	1					
ANR	5362533	ArgumentList			5362517	1					
ANR	5362534	Condition	itr < testVec . end ( )	118:31:2658:2676	5362517	1	True				
ANR	5362535	RelationalExpression	itr < testVec . end ( )		5362517	0		<			
ANR	5362536	Identifier	itr		5362517	0					
ANR	5362537	CallExpression	testVec . end ( )		5362517	1					
ANR	5362538	Callee	testVec . end		5362517	0					
ANR	5362539	MemberAccess	testVec . end		5362517	0					
ANR	5362540	Identifier	testVec		5362517	0					
ANR	5362541	Identifier	end		5362517	1					
ANR	5362542	ArgumentList			5362517	1					
ANR	5362543	PostIncDecOperationExpression	itr ++	118:52:2679:2683	5362517	2	True				
ANR	5362544	Identifier	itr		5362517	0					
ANR	5362545	IncDec	++		5362517	1					
ANR	5362546	CompoundStatement		4:4:102:102	5362517	3					
ANR	5362547	Statement	delete	120:8:2700:2705	5362517	0	True				
ANR	5362548	Statement	[	120:14:2706:2706	5362517	1	True				
ANR	5362549	Statement	]	120:15:2707:2707	5362517	2	True				
ANR	5362550	ExpressionStatement	* itr	120:17:2709:2713	5362517	3	True				
ANR	5362551	UnaryOperationExpression	* itr		5362517	0					
ANR	5362552	UnaryOperator	*		5362517	0					
ANR	5362553	Identifier	itr		5362517	1					
ANR	5362554	ExpressionStatement	testVec . clear ( )	122:4:2725:2740	5362517	2	True				
ANR	5362555	CallExpression	testVec . clear ( )		5362517	0					
ANR	5362556	Callee	testVec . clear		5362517	0					
ANR	5362557	MemberAccess	testVec . clear		5362517	0					
ANR	5362558	Identifier	testVec		5362517	0					
ANR	5362559	Identifier	clear		5362517	1					
ANR	5362560	ArgumentList			5362517	1					
ANR	5362561	ReturnType	void		5362517	1					
ANR	5362562	Identifier	DummyStream :: emptyVec		5362517	2					
ANR	5362563	ParameterList			5362517	3					
ANR	5362564	CFGEntryNode	ENTRY		5362517		True				
ANR	5362565	CFGExitNode	EXIT		5362517		True				
ANR	5362566	Symbol	testVec . end		5362517						
ANR	5362567	Symbol	testVec		5362517						
ANR	5362568	Symbol	itr		5362517						
ANR	5362569	Symbol	testVec . begin		5362517						
ANR	5362570	Function	DummyStream :: printContents	125:0:2745:3034							
ANR	5362571	FunctionDef	DummyStream :: printContents ()		5362570	0					
ANR	5362572	CompoundStatement		126:0:2779:3034	5362570	0					
ANR	5362573	IdentifierDeclStatement	std :: vector < char * > :: iterator itr ;	127:4:2785:2817	5362570	0	True				
ANR	5362574	IdentifierDecl	itr		5362570	0					
ANR	5362575	IdentifierDeclType	std :: vector < char * > :: iterator		5362570	0					
ANR	5362576	Identifier	itr		5362570	1					
ANR	5362577	ExpressionStatement	"printf ( ""Size of vec: %d. Printing contents.\\n"" , testVec . size ( ) )"	129:4:2824:2888	5362570	1	True				
ANR	5362578	CallExpression	"printf ( ""Size of vec: %d. Printing contents.\\n"" , testVec . size ( ) )"		5362570	0					
ANR	5362579	Callee	printf		5362570	0					
ANR	5362580	Identifier	printf		5362570	0					
ANR	5362581	ArgumentList	"""Size of vec: %d. Printing contents.\\n"""		5362570	1					
ANR	5362582	Argument	"""Size of vec: %d. Printing contents.\\n"""		5362570	0					
ANR	5362583	PrimaryExpression	"""Size of vec: %d. Printing contents.\\n"""		5362570	0					
ANR	5362584	Argument	testVec . size ( )		5362570	1					
ANR	5362585	CallExpression	testVec . size ( )		5362570	0					
ANR	5362586	Callee	testVec . size		5362570	0					
ANR	5362587	MemberAccess	testVec . size		5362570	0					
ANR	5362588	Identifier	testVec		5362570	0					
ANR	5362589	Identifier	size		5362570	1					
ANR	5362590	ArgumentList			5362570	1					
ANR	5362591	ForStatement	for ( itr = testVec . begin ( ) ; itr < testVec . end ( ) ; itr ++ )		5362570	2					
ANR	5362592	ForInit	itr = testVec . begin ( ) ;	131:8:2899:2920	5362570	0	True				
ANR	5362593	AssignmentExpression	itr = testVec . begin ( )		5362570	0		=			
ANR	5362594	Identifier	itr		5362570	0					
ANR	5362595	CallExpression	testVec . begin ( )		5362570	1					
ANR	5362596	Callee	testVec . begin		5362570	0					
ANR	5362597	MemberAccess	testVec . begin		5362570	0					
ANR	5362598	Identifier	testVec		5362570	0					
ANR	5362599	Identifier	begin		5362570	1					
ANR	5362600	ArgumentList			5362570	1					
ANR	5362601	Condition	itr < testVec . end ( )	131:31:2922:2940	5362570	1	True				
ANR	5362602	RelationalExpression	itr < testVec . end ( )		5362570	0		<			
ANR	5362603	Identifier	itr		5362570	0					
ANR	5362604	CallExpression	testVec . end ( )		5362570	1					
ANR	5362605	Callee	testVec . end		5362570	0					
ANR	5362606	MemberAccess	testVec . end		5362570	0					
ANR	5362607	Identifier	testVec		5362570	0					
ANR	5362608	Identifier	end		5362570	1					
ANR	5362609	ArgumentList			5362570	1					
ANR	5362610	PostIncDecOperationExpression	itr ++	131:52:2943:2947	5362570	2	True				
ANR	5362611	Identifier	itr		5362570	0					
ANR	5362612	IncDec	++		5362570	1					
ANR	5362613	CompoundStatement		7:4:174:174	5362570	3					
ANR	5362614	ExpressionStatement	"printf ( ""%s\\n"" , * itr )"	133:8:2964:2984	5362570	0	True				
ANR	5362615	CallExpression	"printf ( ""%s\\n"" , * itr )"		5362570	0					
ANR	5362616	Callee	printf		5362570	0					
ANR	5362617	Identifier	printf		5362570	0					
ANR	5362618	ArgumentList	"""%s\\n"""		5362570	1					
ANR	5362619	Argument	"""%s\\n"""		5362570	0					
ANR	5362620	PrimaryExpression	"""%s\\n"""		5362570	0					
ANR	5362621	Argument	* itr		5362570	1					
ANR	5362622	UnaryOperationExpression	* itr		5362570	0					
ANR	5362623	UnaryOperator	*		5362570	0					
ANR	5362624	Identifier	itr		5362570	1					
ANR	5362625	ExpressionStatement	"printf ( ""Done printing contents.\\n"" )"	136:4:2997:3032	5362570	3	True				
ANR	5362626	CallExpression	"printf ( ""Done printing contents.\\n"" )"		5362570	0					
ANR	5362627	Callee	printf		5362570	0					
ANR	5362628	Identifier	printf		5362570	0					
ANR	5362629	ArgumentList	"""Done printing contents.\\n"""		5362570	1					
ANR	5362630	Argument	"""Done printing contents.\\n"""		5362570	0					
ANR	5362631	PrimaryExpression	"""Done printing contents.\\n"""		5362570	0					
ANR	5362632	ReturnType	void		5362570	1					
ANR	5362633	Identifier	DummyStream :: printContents		5362570	2					
ANR	5362634	ParameterList			5362570	3					
ANR	5362635	CFGEntryNode	ENTRY		5362570		True				
ANR	5362636	CFGExitNode	EXIT		5362570		True				
ANR	5362637	Symbol	testVec . end		5362570						
ANR	5362638	Symbol	testVec		5362570						
ANR	5362639	Symbol	itr		5362570						
ANR	5362640	Symbol	testVec . begin		5362570						
ANR	5362641	Symbol	* itr		5362570						
ANR	5362642	Symbol	testVec . size		5362570						
ANR	5362643	DeclStmt									
ANR	5362644	Decl							bool	bool	publish_server_timeMangled
ANR	5362645	Function	AttrList_setPublishServerTimeMangled2	141:0:3091:3193							
ANR	5362646	FunctionDef	AttrList_setPublishServerTimeMangled2 (bool publish)		5362645	0					
ANR	5362647	CompoundStatement		142:0:3149:3193	5362645	0					
ANR	5362648	ExpressionStatement	publish_server_timeMangled = publish	143:4:3155:3191	5362645	0	True				
ANR	5362649	AssignmentExpression	publish_server_timeMangled = publish		5362645	0		=			
ANR	5362650	Identifier	publish_server_timeMangled		5362645	0					
ANR	5362651	Identifier	publish		5362645	1					
ANR	5362652	ReturnType	void		5362645	1					
ANR	5362653	Identifier	AttrList_setPublishServerTimeMangled2		5362645	2					
ANR	5362654	ParameterList	bool publish		5362645	3					
ANR	5362655	Parameter	bool publish	141:44:3135:3146	5362645	0	True				
ANR	5362656	ParameterType	bool		5362645	0					
ANR	5362657	Identifier	publish		5362645	1					
ANR	5362658	CFGEntryNode	ENTRY		5362645		True				
ANR	5362659	CFGExitNode	EXIT		5362645		True				
ANR	5362660	Symbol	publish		5362645						
ANR	5362661	Symbol	publish_server_timeMangled		5362645						
ANR	5362662	Function	putOldClassAd	150:0:3299:8152							
ANR	5362663	FunctionDef	"putOldClassAd (DummyStream * sock , classad :: ClassAd & ad , bool excludeTypes)"		5362662	0					
ANR	5362664	CompoundStatement		151:0:3381:8152	5362662	0					
ANR	5362665	IdentifierDeclStatement	classad :: ClassAdUnParser unp ;	152:1:3384:3412	5362662	0	True				
ANR	5362666	IdentifierDecl	unp		5362662	0					
ANR	5362667	IdentifierDeclType	classad :: ClassAdUnParser		5362662	0					
ANR	5362668	Identifier	unp		5362662	1					
ANR	5362669	IdentifierDeclStatement	string buf ;	153:1:3415:3430	5362662	1	True				
ANR	5362670	IdentifierDecl	buf		5362662	0					
ANR	5362671	IdentifierDeclType	string		5362662	0					
ANR	5362672	Identifier	buf		5362662	1					
ANR	5362673	IdentifierDeclStatement	const classad :: ExprTree * expr ;	154:1:3433:3463	5362662	2	True				
ANR	5362674	IdentifierDecl	* expr		5362662	0					
ANR	5362675	IdentifierDeclType	const classad :: ExprTree *		5362662	0					
ANR	5362676	Identifier	expr		5362662	1					
ANR	5362677	IdentifierDeclStatement	bool send_server_time = false ;	155:4:3469:3498	5362662	3	True				
ANR	5362678	IdentifierDecl	send_server_time = false		5362662	0					
ANR	5362679	IdentifierDeclType	bool		5362662	0					
ANR	5362680	Identifier	send_server_time		5362662	1					
ANR	5362681	AssignmentExpression	send_server_time = false		5362662	2		=			
ANR	5362682	Identifier	false		5362662	0					
ANR	5362683	Identifier	false		5362662	1					
ANR	5362684	IdentifierDeclStatement	int numExprs = 0 ;	157:1:3502:3516	5362662	4	True				
ANR	5362685	IdentifierDecl	numExprs = 0		5362662	0					
ANR	5362686	IdentifierDeclType	int		5362662	0					
ANR	5362687	Identifier	numExprs		5362662	1					
ANR	5362688	AssignmentExpression	numExprs = 0		5362662	2		=			
ANR	5362689	Identifier	numExprs		5362662	0					
ANR	5362690	PrimaryExpression	0		5362662	1					
ANR	5362691	IdentifierDeclStatement	classad :: ClassAdIterator itor ( ad ) ;	159:1:3520:3553	5362662	5	True				
ANR	5362692	IdentifierDecl	itor ( ad )		5362662	0					
ANR	5362693	IdentifierDeclType	classad :: ClassAdIterator		5362662	0					
ANR	5362694	Identifier	itor		5362662	1					
ANR	5362695	Identifier	ad		5362662	2					
ANR	5362696	IdentifierDeclStatement	bool haveChainedAd = false ;	161:4:3560:3586	5362662	6	True				
ANR	5362697	IdentifierDecl	haveChainedAd = false		5362662	0					
ANR	5362698	IdentifierDeclType	bool		5362662	0					
ANR	5362699	Identifier	haveChainedAd		5362662	1					
ANR	5362700	AssignmentExpression	haveChainedAd = false		5362662	2		=			
ANR	5362701	Identifier	false		5362662	0					
ANR	5362702	Identifier	false		5362662	1					
ANR	5362703	IdentifierDeclStatement	classad :: ClassAd * chainedAd = ad . GetChainedParentAd ( ) ;	163:4:3597:3650	5362662	7	True				
ANR	5362704	IdentifierDecl	* chainedAd = ad . GetChainedParentAd ( )		5362662	0					
ANR	5362705	IdentifierDeclType	classad :: ClassAd *		5362662	0					
ANR	5362706	Identifier	chainedAd		5362662	1					
ANR	5362707	AssignmentExpression	* chainedAd = ad . GetChainedParentAd ( )		5362662	2		=			
ANR	5362708	Identifier	chainedAd		5362662	0					
ANR	5362709	CallExpression	ad . GetChainedParentAd ( )		5362662	1					
ANR	5362710	Callee	ad . GetChainedParentAd		5362662	0					
ANR	5362711	MemberAccess	ad . GetChainedParentAd		5362662	0					
ANR	5362712	Identifier	ad		5362662	0					
ANR	5362713	Identifier	GetChainedParentAd		5362662	1					
ANR	5362714	ArgumentList			5362662	1					
ANR	5362715	IfStatement	if ( chainedAd )		5362662	8					
ANR	5362716	Condition	chainedAd	165:7:3664:3672	5362662	0	True				
ANR	5362717	Identifier	chainedAd		5362662	0					
ANR	5362718	CompoundStatement		15:17:292:292	5362662	1					
ANR	5362719	ExpressionStatement	haveChainedAd = true	166:8:3684:3704	5362662	0	True				
ANR	5362720	AssignmentExpression	haveChainedAd = true		5362662	0		=			
ANR	5362721	Identifier	haveChainedAd		5362662	0					
ANR	5362722	Identifier	true		5362662	1					
ANR	5362723	ForStatement	for ( int pass = 0 ; pass < 2 ; pass ++ )		5362662	9					
ANR	5362724	ForInit	int pass = 0 ;	169:8:3721:3733	5362662	0	True				
ANR	5362725	IdentifierDeclStatement	int pass = 0 ;		5362662	0					
ANR	5362726	IdentifierDecl	pass = 0		5362662	0					
ANR	5362727	IdentifierDeclType	int		5362662	0					
ANR	5362728	Identifier	pass		5362662	1					
ANR	5362729	AssignmentExpression	pass = 0		5362662	2		=			
ANR	5362730	Identifier	pass		5362662	0					
ANR	5362731	PrimaryExpression	0		5362662	1					
ANR	5362732	Condition	pass < 2	169:22:3735:3742	5362662	1	True				
ANR	5362733	RelationalExpression	pass < 2		5362662	0		<			
ANR	5362734	Identifier	pass		5362662	0					
ANR	5362735	PrimaryExpression	2		5362662	1					
ANR	5362736	PostIncDecOperationExpression	pass ++	169:32:3745:3750	5362662	2	True				
ANR	5362737	Identifier	pass		5362662	0					
ANR	5362738	IncDec	++		5362662	1					
ANR	5362739	CompoundStatement		19:39:370:370	5362662	3					
ANR	5362740	IfStatement	if ( pass == 0 )		5362662	0					
ANR	5362741	Condition	pass == 0	176:11:3950:3958	5362662	0	True				
ANR	5362742	EqualityExpression	pass == 0		5362662	0		==			
ANR	5362743	Identifier	pass		5362662	0					
ANR	5362744	PrimaryExpression	0		5362662	1					
ANR	5362745	CompoundStatement		26:21:578:578	5362662	1					
ANR	5362746	IfStatement	if ( ! haveChainedAd )		5362662	0					
ANR	5362747	Condition	! haveChainedAd	177:15:3977:3990	5362662	0	True				
ANR	5362748	UnaryOperationExpression	! haveChainedAd		5362662	0					
ANR	5362749	UnaryOperator	!		5362662	0					
ANR	5362750	Identifier	haveChainedAd		5362662	1					
ANR	5362751	CompoundStatement		27:30:610:610	5362662	1					
ANR	5362752	ContinueStatement	continue ;	178:16:4010:4018	5362662	0	True				
ANR	5362753	ExpressionStatement	itor . Initialize ( * chainedAd )	180:12:4046:4073	5362662	1	True				
ANR	5362754	CallExpression	itor . Initialize ( * chainedAd )		5362662	0					
ANR	5362755	Callee	itor . Initialize		5362662	0					
ANR	5362756	MemberAccess	itor . Initialize		5362662	0					
ANR	5362757	Identifier	itor		5362662	0					
ANR	5362758	Identifier	Initialize		5362662	1					
ANR	5362759	ArgumentList	* chainedAd		5362662	1					
ANR	5362760	Argument	* chainedAd		5362662	0					
ANR	5362761	UnaryOperationExpression	* chainedAd		5362662	0					
ANR	5362762	UnaryOperator	*		5362662	0					
ANR	5362763	Identifier	chainedAd		5362662	1					
ANR	5362764	ElseStatement	else		5362662	0					
ANR	5362765	CompoundStatement		32:13:716:716	5362662	0					
ANR	5362766	ExpressionStatement	itor . Initialize ( ad )	183:12:4112:4131	5362662	0	True				
ANR	5362767	CallExpression	itor . Initialize ( ad )		5362662	0					
ANR	5362768	Callee	itor . Initialize		5362662	0					
ANR	5362769	MemberAccess	itor . Initialize		5362662	0					
ANR	5362770	Identifier	itor		5362662	0					
ANR	5362771	Identifier	Initialize		5362662	1					
ANR	5362772	ArgumentList	ad		5362662	1					
ANR	5362773	Argument	ad		5362662	0					
ANR	5362774	Identifier	ad		5362662	0					
ANR	5362775	WhileStatement	while ( ! itor . IsAfterLast ( ) )		5362662	1					
ANR	5362776	Condition	! itor . IsAfterLast ( )	186:15:4159:4178	5362662	0	True				
ANR	5362777	UnaryOperationExpression	! itor . IsAfterLast ( )		5362662	0					
ANR	5362778	UnaryOperator	!		5362662	0					
ANR	5362779	CallExpression	itor . IsAfterLast ( )		5362662	1					
ANR	5362780	Callee	itor . IsAfterLast		5362662	0					
ANR	5362781	MemberAccess	itor . IsAfterLast		5362662	0					
ANR	5362782	Identifier	itor		5362662	0					
ANR	5362783	Identifier	IsAfterLast		5362662	1					
ANR	5362784	ArgumentList			5362662	1					
ANR	5362785	CompoundStatement		36:38:800:800	5362662	1					
ANR	5362786	ExpressionStatement	"itor . CurrentAttribute ( buf , expr )"	187:12:4196:4230	5362662	0	True				
ANR	5362787	CallExpression	"itor . CurrentAttribute ( buf , expr )"		5362662	0					
ANR	5362788	Callee	itor . CurrentAttribute		5362662	0					
ANR	5362789	MemberAccess	itor . CurrentAttribute		5362662	0					
ANR	5362790	Identifier	itor		5362662	0					
ANR	5362791	Identifier	CurrentAttribute		5362662	1					
ANR	5362792	ArgumentList	buf		5362662	1					
ANR	5362793	Argument	buf		5362662	0					
ANR	5362794	Identifier	buf		5362662	0					
ANR	5362795	Argument	expr		5362662	1					
ANR	5362796	Identifier	expr		5362662	0					
ANR	5362797	IfStatement	if ( ! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) ) )		5362662	1					
ANR	5362798	Condition	! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )	190:15:4249:4312	5362662	0	True				
ANR	5362799	UnaryOperationExpression	! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		5362662	0					
ANR	5362800	UnaryOperator	!		5362662	0					
ANR	5362801	CallExpression	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		5362662	1					
ANR	5362802	Callee	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		5362662	0					
ANR	5362803	Identifier	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		5362662	0					
ANR	5362804	ArgumentList	buf . c_str ( )		5362662	1					
ANR	5362805	Argument	buf . c_str ( )		5362662	0					
ANR	5362806	CallExpression	buf . c_str ( )		5362662	0					
ANR	5362807	Callee	buf . c_str		5362662	0					
ANR	5362808	MemberAccess	buf . c_str		5362662	0					
ANR	5362809	Identifier	buf		5362662	0					
ANR	5362810	Identifier	c_str		5362662	1					
ANR	5362811	ArgumentList			5362662	1					
ANR	5362812	CompoundStatement		41:12:945:945	5362662	1					
ANR	5362813	IfStatement	if ( excludeTypes )		5362662	0					
ANR	5362814	Condition	excludeTypes	192:19:4348:4359	5362662	0	True				
ANR	5362815	Identifier	excludeTypes		5362662	0					
ANR	5362816	CompoundStatement		43:16:996:996	5362662	1					
ANR	5362817	IfStatement	"if ( strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0 )"		5362662	0					
ANR	5362818	Condition	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"	194:23:4403:4514	5362662	0	True				
ANR	5362819	AndExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"		5362662	0		&&			
ANR	5362820	EqualityExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0"		5362662	0		!=			
ANR	5362821	CallExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) )"		5362662	0					
ANR	5362822	Callee	strcasecmp		5362662	0					
ANR	5362823	Identifier	strcasecmp		5362662	0					
ANR	5362824	ArgumentList	"""MyType"""		5362662	1					
ANR	5362825	Argument	"""MyType"""		5362662	0					
ANR	5362826	PrimaryExpression	"""MyType"""		5362662	0					
ANR	5362827	Argument	buf . c_str ( )		5362662	1					
ANR	5362828	CallExpression	buf . c_str ( )		5362662	0					
ANR	5362829	Callee	buf . c_str		5362662	0					
ANR	5362830	MemberAccess	buf . c_str		5362662	0					
ANR	5362831	Identifier	buf		5362662	0					
ANR	5362832	Identifier	c_str		5362662	1					
ANR	5362833	ArgumentList			5362662	1					
ANR	5362834	PrimaryExpression	0		5362662	1					
ANR	5362835	EqualityExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"		5362662	1		!=			
ANR	5362836	CallExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) )"		5362662	0					
ANR	5362837	Callee	strcasecmp		5362662	0					
ANR	5362838	Identifier	strcasecmp		5362662	0					
ANR	5362839	ArgumentList	"""TargetType"""		5362662	1					
ANR	5362840	Argument	"""TargetType"""		5362662	0					
ANR	5362841	PrimaryExpression	"""TargetType"""		5362662	0					
ANR	5362842	Argument	buf . c_str ( )		5362662	1					
ANR	5362843	CallExpression	buf . c_str ( )		5362662	0					
ANR	5362844	Callee	buf . c_str		5362662	0					
ANR	5362845	MemberAccess	buf . c_str		5362662	0					
ANR	5362846	Identifier	buf		5362662	0					
ANR	5362847	Identifier	c_str		5362662	1					
ANR	5362848	ArgumentList			5362662	1					
ANR	5362849	PrimaryExpression	0		5362662	1					
ANR	5362850	CompoundStatement		46:20:1155:1155	5362662	1					
ANR	5362851	ExpressionStatement	numExprs ++	197:24:4563:4573	5362662	0	True				
ANR	5362852	PostIncDecOperationExpression	numExprs ++		5362662	0					
ANR	5362853	Identifier	numExprs		5362662	0					
ANR	5362854	IncDec	++		5362662	1					
ANR	5362855	ElseStatement	else		5362662	0					
ANR	5362856	CompoundStatement		50:21:1254:1254	5362662	0					
ANR	5362857	ExpressionStatement	numExprs ++	200:23:4638:4648	5362662	0	True				
ANR	5362858	PostIncDecOperationExpression	numExprs ++		5362662	0					
ANR	5362859	Identifier	numExprs		5362662	0					
ANR	5362860	IncDec	++		5362662	1					
ANR	5362861	ExpressionStatement	"itor . NextAttribute ( buf , expr )"	202:12:4678:4709	5362662	2	True				
ANR	5362862	CallExpression	"itor . NextAttribute ( buf , expr )"		5362662	0					
ANR	5362863	Callee	itor . NextAttribute		5362662	0					
ANR	5362864	MemberAccess	itor . NextAttribute		5362662	0					
ANR	5362865	Identifier	itor		5362662	0					
ANR	5362866	Identifier	NextAttribute		5362662	1					
ANR	5362867	ArgumentList	buf		5362662	1					
ANR	5362868	Argument	buf		5362662	0					
ANR	5362869	Identifier	buf		5362662	0					
ANR	5362870	Argument	expr		5362662	1					
ANR	5362871	Identifier	expr		5362662	0					
ANR	5362872	IfStatement	if ( publish_server_timeMangled )		5362662	10					
ANR	5362873	Condition	publish_server_timeMangled	206:8:4736:4761	5362662	0	True				
ANR	5362874	Identifier	publish_server_timeMangled		5362662	0					
ANR	5362875	CompoundStatement		56:36:1382:1382	5362662	1					
ANR	5362876	ExpressionStatement	numExprs ++	208:8:4822:4832	5362662	0	True				
ANR	5362877	PostIncDecOperationExpression	numExprs ++		5362662	0					
ANR	5362878	Identifier	numExprs		5362662	0					
ANR	5362879	IncDec	++		5362662	1					
ANR	5362880	ExpressionStatement	send_server_time = true	209:8:4842:4865	5362662	1	True				
ANR	5362881	AssignmentExpression	send_server_time = true		5362662	0		=			
ANR	5362882	Identifier	send_server_time		5362662	0					
ANR	5362883	Identifier	true		5362662	1					
ANR	5362884	ExpressionStatement	sock -> encode ( )	212:1:4875:4890	5362662	11	True				
ANR	5362885	CallExpression	sock -> encode ( )		5362662	0					
ANR	5362886	Callee	sock -> encode		5362662	0					
ANR	5362887	PtrMemberAccess	sock -> encode		5362662	0					
ANR	5362888	Identifier	sock		5362662	0					
ANR	5362889	Identifier	encode		5362662	1					
ANR	5362890	ArgumentList			5362662	1					
ANR	5362891	IfStatement	if ( ! sock -> code ( numExprs ) )		5362662	12					
ANR	5362892	Condition	! sock -> code ( numExprs )	213:5:4897:4919	5362662	0	True				
ANR	5362893	UnaryOperationExpression	! sock -> code ( numExprs )		5362662	0					
ANR	5362894	UnaryOperator	!		5362662	0					
ANR	5362895	CallExpression	sock -> code ( numExprs )		5362662	1					
ANR	5362896	Callee	sock -> code		5362662	0					
ANR	5362897	PtrMemberAccess	sock -> code		5362662	0					
ANR	5362898	Identifier	sock		5362662	0					
ANR	5362899	Identifier	code		5362662	1					
ANR	5362900	ArgumentList	numExprs		5362662	1					
ANR	5362901	Argument	numExprs		5362662	0					
ANR	5362902	Identifier	numExprs		5362662	0					
ANR	5362903	CompoundStatement		63:31:1541:1541	5362662	1					
ANR	5362904	ReturnStatement	return false ;	214:2:4927:4939	5362662	0	True				
ANR	5362905	Identifier	false		5362662	0					
ANR	5362906	IdentifierDeclStatement	classad :: ClassAdIterator attrItor ;	217:4:4953:4986	5362662	13	True				
ANR	5362907	IdentifierDecl	attrItor		5362662	0					
ANR	5362908	IdentifierDeclType	classad :: ClassAdIterator		5362662	0					
ANR	5362909	Identifier	attrItor		5362662	1					
ANR	5362910	ForStatement	for ( int pass = 0 ; pass < 2 ; pass ++ )		5362662	14					
ANR	5362911	ForInit	int pass = 0 ;	218:8:4997:5009	5362662	0	True				
ANR	5362912	IdentifierDeclStatement	int pass = 0 ;		5362662	0					
ANR	5362913	IdentifierDecl	pass = 0		5362662	0					
ANR	5362914	IdentifierDeclType	int		5362662	0					
ANR	5362915	Identifier	pass		5362662	1					
ANR	5362916	AssignmentExpression	pass = 0		5362662	2		=			
ANR	5362917	Identifier	pass		5362662	0					
ANR	5362918	PrimaryExpression	0		5362662	1					
ANR	5362919	Condition	pass < 2	218:22:5011:5018	5362662	1	True				
ANR	5362920	RelationalExpression	pass < 2		5362662	0		<			
ANR	5362921	Identifier	pass		5362662	0					
ANR	5362922	PrimaryExpression	2		5362662	1					
ANR	5362923	PostIncDecOperationExpression	pass ++	218:32:5021:5026	5362662	2	True				
ANR	5362924	Identifier	pass		5362662	0					
ANR	5362925	IncDec	++		5362662	1					
ANR	5362926	CompoundStatement		83:8:2041:2057	5362662	3					
ANR	5362927	IfStatement	if ( pass == 0 )		5362662	0					
ANR	5362928	Condition	pass == 0	219:11:5041:5049	5362662	0	True				
ANR	5362929	EqualityExpression	pass == 0		5362662	0		==			
ANR	5362930	Identifier	pass		5362662	0					
ANR	5362931	PrimaryExpression	0		5362662	1					
ANR	5362932	CompoundStatement		69:22:1670:1670	5362662	1					
ANR	5362933	IfStatement	if ( ! haveChainedAd )		5362662	0					
ANR	5362934	Condition	! haveChainedAd	224:15:5239:5252	5362662	0	True				
ANR	5362935	UnaryOperationExpression	! haveChainedAd		5362662	0					
ANR	5362936	UnaryOperator	!		5362662	0					
ANR	5362937	Identifier	haveChainedAd		5362662	1					
ANR	5362938	CompoundStatement		74:30:1872:1872	5362662	1					
ANR	5362939	ContinueStatement	continue ;	225:16:5272:5280	5362662	0	True				
ANR	5362940	ExpressionStatement	attrItor . Initialize ( * chainedAd )	227:12:5308:5339	5362662	1	True				
ANR	5362941	CallExpression	attrItor . Initialize ( * chainedAd )		5362662	0					
ANR	5362942	Callee	attrItor . Initialize		5362662	0					
ANR	5362943	MemberAccess	attrItor . Initialize		5362662	0					
ANR	5362944	Identifier	attrItor		5362662	0					
ANR	5362945	Identifier	Initialize		5362662	1					
ANR	5362946	ArgumentList	* chainedAd		5362662	1					
ANR	5362947	Argument	* chainedAd		5362662	0					
ANR	5362948	UnaryOperationExpression	* chainedAd		5362662	0					
ANR	5362949	UnaryOperator	*		5362662	0					
ANR	5362950	Identifier	chainedAd		5362662	1					
ANR	5362951	ElseStatement	else		5362662	0					
ANR	5362952	CompoundStatement		79:13:1983:1983	5362662	0					
ANR	5362953	ExpressionStatement	attrItor . Initialize ( ad )	230:12:5379:5402	5362662	0	True				
ANR	5362954	CallExpression	attrItor . Initialize ( ad )		5362662	0					
ANR	5362955	Callee	attrItor . Initialize		5362662	0					
ANR	5362956	MemberAccess	attrItor . Initialize		5362662	0					
ANR	5362957	Identifier	attrItor		5362662	0					
ANR	5362958	Identifier	Initialize		5362662	1					
ANR	5362959	ArgumentList	ad		5362662	1					
ANR	5362960	Argument	ad		5362662	0					
ANR	5362961	Identifier	ad		5362662	0					
ANR	5362962	IdentifierDeclStatement	char * exprString ;	233:8:5423:5439	5362662	1	True				
ANR	5362963	IdentifierDecl	* exprString		5362662	0					
ANR	5362964	IdentifierDeclType	char *		5362662	0					
ANR	5362965	Identifier	exprString		5362662	1					
ANR	5362966	ForStatement	"for ( attrItor . ToFirst ( ) ; ! attrItor . IsAfterLast ( ) ; attrItor . NextAttribute ( buf , expr ) )"		5362662	2					
ANR	5362967	ForInit	attrItor . ToFirst ( ) ;	234:13:5454:5472	5362662	0	True				
ANR	5362968	CallExpression	attrItor . ToFirst ( )		5362662	0					
ANR	5362969	Callee	attrItor . ToFirst		5362662	0					
ANR	5362970	MemberAccess	attrItor . ToFirst		5362662	0					
ANR	5362971	Identifier	attrItor		5362662	0					
ANR	5362972	Identifier	ToFirst		5362662	1					
ANR	5362973	ArgumentList			5362662	1					
ANR	5362974	Condition	! attrItor . IsAfterLast ( )	235:12:5486:5508	5362662	1	True				
ANR	5362975	UnaryOperationExpression	! attrItor . IsAfterLast ( )		5362662	0					
ANR	5362976	UnaryOperator	!		5362662	0					
ANR	5362977	CallExpression	attrItor . IsAfterLast ( )		5362662	1					
ANR	5362978	Callee	attrItor . IsAfterLast		5362662	0					
ANR	5362979	MemberAccess	attrItor . IsAfterLast		5362662	0					
ANR	5362980	Identifier	attrItor		5362662	0					
ANR	5362981	Identifier	IsAfterLast		5362662	1					
ANR	5362982	ArgumentList			5362662	1					
ANR	5362983	CallExpression	"attrItor . NextAttribute ( buf , expr )"	236:12:5523:5555	5362662	2	True				
ANR	5362984	Callee	attrItor . NextAttribute		5362662	0					
ANR	5362985	MemberAccess	attrItor . NextAttribute		5362662	0					
ANR	5362986	Identifier	attrItor		5362662	0					
ANR	5362987	Identifier	NextAttribute		5362662	1					
ANR	5362988	ArgumentList	buf		5362662	1					
ANR	5362989	Argument	buf		5362662	0					
ANR	5362990	Identifier	buf		5362662	0					
ANR	5362991	Argument	expr		5362662	1					
ANR	5362992	Identifier	expr		5362662	0					
ANR	5362993	CompoundStatement		102:12:2637:2660	5362662	3					
ANR	5362994	ExpressionStatement	"attrItor . CurrentAttribute ( buf , expr )"	238:12:5574:5612	5362662	0	True				
ANR	5362995	CallExpression	"attrItor . CurrentAttribute ( buf , expr )"		5362662	0					
ANR	5362996	Callee	attrItor . CurrentAttribute		5362662	0					
ANR	5362997	MemberAccess	attrItor . CurrentAttribute		5362662	0					
ANR	5362998	Identifier	attrItor		5362662	0					
ANR	5362999	Identifier	CurrentAttribute		5362662	1					
ANR	5363000	ArgumentList	buf		5362662	1					
ANR	5363001	Argument	buf		5362662	0					
ANR	5363002	Identifier	buf		5362662	0					
ANR	5363003	Argument	expr		5362662	1					
ANR	5363004	Identifier	expr		5362662	0					
ANR	5363005	IfStatement	if ( compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) ) )		5362662	1					
ANR	5363006	Condition	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )	240:15:5630:5692	5362662	0	True				
ANR	5363007	CallExpression	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		5362662	0					
ANR	5363008	Callee	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		5362662	0					
ANR	5363009	Identifier	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		5362662	0					
ANR	5363010	ArgumentList	buf . c_str ( )		5362662	1					
ANR	5363011	Argument	buf . c_str ( )		5362662	0					
ANR	5363012	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363013	Callee	buf . c_str		5362662	0					
ANR	5363014	MemberAccess	buf . c_str		5362662	0					
ANR	5363015	Identifier	buf		5362662	0					
ANR	5363016	Identifier	c_str		5362662	1					
ANR	5363017	ArgumentList			5362662	1					
ANR	5363018	CompoundStatement		90:79:2312:2312	5362662	1					
ANR	5363019	ContinueStatement	continue ;	241:16:5712:5720	5362662	0	True				
ANR	5363020	IfStatement	if ( excludeTypes )		5362662	2					
ANR	5363021	Condition	excludeTypes	244:15:5752:5763	5362662	0	True				
ANR	5363022	Identifier	excludeTypes		5362662	0					
ANR	5363023	CompoundStatement		94:28:2383:2383	5362662	1					
ANR	5363024	IfStatement	"if ( strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0 )"		5362662	0					
ANR	5363025	Condition	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"	245:19:5786:5900	5362662	0	True				
ANR	5363026	OrExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"		5362662	0		||			
ANR	5363027	EqualityExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0"		5362662	0		==			
ANR	5363028	CallExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) )"		5362662	0					
ANR	5363029	Callee	strcasecmp		5362662	0					
ANR	5363030	Identifier	strcasecmp		5362662	0					
ANR	5363031	ArgumentList	"""MyType"""		5362662	1					
ANR	5363032	Argument	"""MyType"""		5362662	0					
ANR	5363033	PrimaryExpression	"""MyType"""		5362662	0					
ANR	5363034	Argument	buf . c_str ( )		5362662	1					
ANR	5363035	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363036	Callee	buf . c_str		5362662	0					
ANR	5363037	MemberAccess	buf . c_str		5362662	0					
ANR	5363038	Identifier	buf		5362662	0					
ANR	5363039	Identifier	c_str		5362662	1					
ANR	5363040	ArgumentList			5362662	1					
ANR	5363041	PrimaryExpression	0		5362662	1					
ANR	5363042	EqualityExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"		5362662	1		==			
ANR	5363043	CallExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) )"		5362662	0					
ANR	5363044	Callee	strcasecmp		5362662	0					
ANR	5363045	Identifier	strcasecmp		5362662	0					
ANR	5363046	ArgumentList	"""TargetType"""		5362662	1					
ANR	5363047	Argument	"""TargetType"""		5362662	0					
ANR	5363048	PrimaryExpression	"""TargetType"""		5362662	0					
ANR	5363049	Argument	buf . c_str ( )		5362662	1					
ANR	5363050	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363051	Callee	buf . c_str		5362662	0					
ANR	5363052	MemberAccess	buf . c_str		5362662	0					
ANR	5363053	Identifier	buf		5362662	0					
ANR	5363054	Identifier	c_str		5362662	1					
ANR	5363055	ArgumentList			5362662	1					
ANR	5363056	PrimaryExpression	0		5362662	1					
ANR	5363057	CompoundStatement		96:71:2521:2521	5362662	1					
ANR	5363058	ContinueStatement	continue ;	247:20:5925:5933	5362662	0	True				
ANR	5363059	IdentifierDeclStatement	string tmpAttrName ( buf ) ;	252:12:6019:6042	5362662	3	True				
ANR	5363060	IdentifierDecl	tmpAttrName ( buf )		5362662	0					
ANR	5363061	IdentifierDeclType	string		5362662	0					
ANR	5363062	Identifier	tmpAttrName		5362662	1					
ANR	5363063	Identifier	buf		5362662	2					
ANR	5363064	ExpressionStatement	"buf += "" = """	253:12:6056:6068	5362662	4	True				
ANR	5363065	AssignmentExpression	"buf += "" = """		5362662	0		+=			
ANR	5363066	Identifier	buf		5362662	0					
ANR	5363067	PrimaryExpression	""" = """		5362662	1					
ANR	5363068	ExpressionStatement	"unp . Unparse ( buf , expr )"	254:12:6082:6106	5362662	5	True				
ANR	5363069	CallExpression	"unp . Unparse ( buf , expr )"		5362662	0					
ANR	5363070	Callee	unp . Unparse		5362662	0					
ANR	5363071	MemberAccess	unp . Unparse		5362662	0					
ANR	5363072	Identifier	unp		5362662	0					
ANR	5363073	Identifier	Unparse		5362662	1					
ANR	5363074	ArgumentList	buf		5362662	1					
ANR	5363075	Argument	buf		5362662	0					
ANR	5363076	Identifier	buf		5362662	0					
ANR	5363077	Argument	expr		5362662	1					
ANR	5363078	Identifier	expr		5362662	0					
ANR	5363079	ExpressionStatement	exprString = ( char * ) malloc ( buf . size ( ) + 1 )	257:12:6185:6227	5362662	6	True				
ANR	5363080	AssignmentExpression	exprString = ( char * ) malloc ( buf . size ( ) + 1 )		5362662	0		=			
ANR	5363081	Identifier	exprString		5362662	0					
ANR	5363082	CastExpression	( char * ) malloc ( buf . size ( ) + 1 )		5362662	1					
ANR	5363083	CastTarget	char *		5362662	0					
ANR	5363084	CallExpression	malloc ( buf . size ( ) + 1 )		5362662	1					
ANR	5363085	Callee	malloc		5362662	0					
ANR	5363086	Identifier	malloc		5362662	0					
ANR	5363087	ArgumentList	buf . size ( ) + 1		5362662	1					
ANR	5363088	Argument	buf . size ( ) + 1		5362662	0					
ANR	5363089	AdditiveExpression	buf . size ( ) + 1		5362662	0		+			
ANR	5363090	CallExpression	buf . size ( )		5362662	0					
ANR	5363091	Callee	buf . size		5362662	0					
ANR	5363092	MemberAccess	buf . size		5362662	0					
ANR	5363093	Identifier	buf		5362662	0					
ANR	5363094	Identifier	size		5362662	1					
ANR	5363095	ArgumentList			5362662	1					
ANR	5363096	PrimaryExpression	1		5362662	1					
ANR	5363097	ExpressionStatement	"strncpy ( exprString , buf . c_str ( ) , buf . size ( ) + 1 )"	258:12:6241:6289	5362662	7	True				
ANR	5363098	CallExpression	"strncpy ( exprString , buf . c_str ( ) , buf . size ( ) + 1 )"		5362662	0					
ANR	5363099	Callee	strncpy		5362662	0					
ANR	5363100	Identifier	strncpy		5362662	0					
ANR	5363101	ArgumentList	exprString		5362662	1					
ANR	5363102	Argument	exprString		5362662	0					
ANR	5363103	Identifier	exprString		5362662	0					
ANR	5363104	Argument	buf . c_str ( )		5362662	1					
ANR	5363105	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363106	Callee	buf . c_str		5362662	0					
ANR	5363107	MemberAccess	buf . c_str		5362662	0					
ANR	5363108	Identifier	buf		5362662	0					
ANR	5363109	Identifier	c_str		5362662	1					
ANR	5363110	ArgumentList			5362662	1					
ANR	5363111	Argument	buf . size ( ) + 1		5362662	2					
ANR	5363112	AdditiveExpression	buf . size ( ) + 1		5362662	0		+			
ANR	5363113	CallExpression	buf . size ( )		5362662	0					
ANR	5363114	Callee	buf . size		5362662	0					
ANR	5363115	MemberAccess	buf . size		5362662	0					
ANR	5363116	Identifier	buf		5362662	0					
ANR	5363117	Identifier	size		5362662	1					
ANR	5363118	ArgumentList			5362662	1					
ANR	5363119	PrimaryExpression	1		5362662	1					
ANR	5363120	IfStatement	if ( ! sock -> put ( exprString ) )		5362662	8					
ANR	5363121	Condition	! sock -> put ( exprString )	267:24:6673:6694	5362662	0	True				
ANR	5363122	UnaryOperationExpression	! sock -> put ( exprString )		5362662	0					
ANR	5363123	UnaryOperator	!		5362662	0					
ANR	5363124	CallExpression	sock -> put ( exprString )		5362662	1					
ANR	5363125	Callee	sock -> put		5362662	0					
ANR	5363126	PtrMemberAccess	sock -> put		5362662	0					
ANR	5363127	Identifier	sock		5362662	0					
ANR	5363128	Identifier	put		5362662	1					
ANR	5363129	ArgumentList	exprString		5362662	1					
ANR	5363130	Argument	exprString		5362662	0					
ANR	5363131	Identifier	exprString		5362662	0					
ANR	5363132	CompoundStatement		117:48:3315:3315	5362662	1					
ANR	5363133	ExpressionStatement	free ( exprString )	268:16:6715:6731	5362662	0	True				
ANR	5363134	CallExpression	free ( exprString )		5362662	0					
ANR	5363135	Callee	free		5362662	0					
ANR	5363136	Identifier	free		5362662	0					
ANR	5363137	ArgumentList	exprString		5362662	1					
ANR	5363138	Argument	exprString		5362662	0					
ANR	5363139	Identifier	exprString		5362662	0					
ANR	5363140	ReturnStatement	return false ;	269:16:6749:6761	5362662	1	True				
ANR	5363141	Identifier	false		5362662	0					
ANR	5363142	ExpressionStatement	free ( exprString )	271:12:6789:6805	5362662	9	True				
ANR	5363143	CallExpression	free ( exprString )		5362662	0					
ANR	5363144	Callee	free		5362662	0					
ANR	5363145	Identifier	free		5362662	0					
ANR	5363146	ArgumentList	exprString		5362662	1					
ANR	5363147	Argument	exprString		5362662	0					
ANR	5363148	Identifier	exprString		5362662	0					
ANR	5363149	IfStatement	if ( send_server_time )		5362662	15					
ANR	5363150	Condition	send_server_time	275:7:6831:6846	5362662	0	True				
ANR	5363151	Identifier	send_server_time		5362662	0					
ANR	5363152	CompoundStatement		132:8:3793:3812	5362662	1					
ANR	5363153	IdentifierDeclStatement	char * serverTimeStr ;	282:8:7175:7194	5362662	0	True				
ANR	5363154	IdentifierDecl	* serverTimeStr		5362662	0					
ANR	5363155	IdentifierDeclType	char *		5362662	0					
ANR	5363156	Identifier	serverTimeStr		5362662	1					
ANR	5363157	ExpressionStatement	serverTimeStr = ( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )	283:8:7204:7427	5362662	1	True				
ANR	5363158	AssignmentExpression	serverTimeStr = ( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		5362662	0		=			
ANR	5363159	Identifier	serverTimeStr		5362662	0					
ANR	5363160	CastExpression	( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		5362662	1					
ANR	5363161	CastTarget	char *		5362662	0					
ANR	5363162	CallExpression	malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		5362662	1					
ANR	5363163	Callee	malloc		5362662	0					
ANR	5363164	Identifier	malloc		5362662	0					
ANR	5363165	ArgumentList	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		5362662	1					
ANR	5363166	Argument	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		5362662	0					
ANR	5363167	AdditiveExpression	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		5362662	0		+			
ANR	5363168	CallExpression	strlen ( ATTR_SERVER_TIME )		5362662	0					
ANR	5363169	Callee	strlen		5362662	0					
ANR	5363170	Identifier	strlen		5362662	0					
ANR	5363171	ArgumentList	ATTR_SERVER_TIME		5362662	1					
ANR	5363172	Argument	ATTR_SERVER_TIME		5362662	0					
ANR	5363173	Identifier	ATTR_SERVER_TIME		5362662	0					
ANR	5363174	AdditiveExpression	3 + 12 + 1		5362662	1		+			
ANR	5363175	PrimaryExpression	3		5362662	0					
ANR	5363176	AdditiveExpression	12 + 1		5362662	1		+			
ANR	5363177	PrimaryExpression	12		5362662	0					
ANR	5363178	PrimaryExpression	1		5362662	1					
ANR	5363179	ExpressionStatement	"sprintf ( serverTimeStr , ""%s = %ld"" , ATTR_SERVER_TIME , ( long ) time ( NULL ) )"	287:8:7463:7534	5362662	2	True				
ANR	5363180	CallExpression	"sprintf ( serverTimeStr , ""%s = %ld"" , ATTR_SERVER_TIME , ( long ) time ( NULL ) )"		5362662	0					
ANR	5363181	Callee	sprintf		5362662	0					
ANR	5363182	Identifier	sprintf		5362662	0					
ANR	5363183	ArgumentList	serverTimeStr		5362662	1					
ANR	5363184	Argument	serverTimeStr		5362662	0					
ANR	5363185	Identifier	serverTimeStr		5362662	0					
ANR	5363186	Argument	"""%s = %ld"""		5362662	1					
ANR	5363187	PrimaryExpression	"""%s = %ld"""		5362662	0					
ANR	5363188	Argument	ATTR_SERVER_TIME		5362662	2					
ANR	5363189	Identifier	ATTR_SERVER_TIME		5362662	0					
ANR	5363190	Argument	( long ) time ( NULL )		5362662	3					
ANR	5363191	CastExpression	( long ) time ( NULL )		5362662	0					
ANR	5363192	CastTarget	long		5362662	0					
ANR	5363193	CallExpression	time ( NULL )		5362662	1					
ANR	5363194	Callee	time		5362662	0					
ANR	5363195	Identifier	time		5362662	0					
ANR	5363196	ArgumentList	NULL		5362662	1					
ANR	5363197	Argument	NULL		5362662	0					
ANR	5363198	Identifier	NULL		5362662	0					
ANR	5363199	IfStatement	if ( ! sock -> put ( serverTimeStr ) )		5362662	3					
ANR	5363200	Condition	! sock -> put ( serverTimeStr )	288:11:7547:7571	5362662	0	True				
ANR	5363201	UnaryOperationExpression	! sock -> put ( serverTimeStr )		5362662	0					
ANR	5363202	UnaryOperator	!		5362662	0					
ANR	5363203	CallExpression	sock -> put ( serverTimeStr )		5362662	1					
ANR	5363204	Callee	sock -> put		5362662	0					
ANR	5363205	PtrMemberAccess	sock -> put		5362662	0					
ANR	5363206	Identifier	sock		5362662	0					
ANR	5363207	Identifier	put		5362662	1					
ANR	5363208	ArgumentList	serverTimeStr		5362662	1					
ANR	5363209	Argument	serverTimeStr		5362662	0					
ANR	5363210	Identifier	serverTimeStr		5362662	0					
ANR	5363211	CompoundStatement		138:37:4191:4191	5362662	1					
ANR	5363212	ExpressionStatement	free ( serverTimeStr )	289:12:7587:7606	5362662	0	True				
ANR	5363213	CallExpression	free ( serverTimeStr )		5362662	0					
ANR	5363214	Callee	free		5362662	0					
ANR	5363215	Identifier	free		5362662	0					
ANR	5363216	ArgumentList	serverTimeStr		5362662	1					
ANR	5363217	Argument	serverTimeStr		5362662	0					
ANR	5363218	Identifier	serverTimeStr		5362662	0					
ANR	5363219	ReturnStatement	return 0 ;	290:12:7620:7628	5362662	1	True				
ANR	5363220	PrimaryExpression	0		5362662	0					
ANR	5363221	ExpressionStatement	free ( serverTimeStr )	292:8:7648:7667	5362662	4	True				
ANR	5363222	CallExpression	free ( serverTimeStr )		5362662	0					
ANR	5363223	Callee	free		5362662	0					
ANR	5363224	Identifier	free		5362662	0					
ANR	5363225	ArgumentList	serverTimeStr		5362662	1					
ANR	5363226	Argument	serverTimeStr		5362662	0					
ANR	5363227	Identifier	serverTimeStr		5362662	0					
ANR	5363228	IfStatement	if ( excludeTypes )		5362662	16					
ANR	5363229	Condition	excludeTypes	296:7:7739:7750	5362662	0	True				
ANR	5363230	Identifier	excludeTypes		5362662	0					
ANR	5363231	CompoundStatement		147:4:4375:4375	5362662	1					
ANR	5363232	IfStatement	"if ( ! ad . EvaluateAttrString ( ""MyType"" , buf ) )"		5362662	0					
ANR	5363233	Condition	"! ad . EvaluateAttrString ( ""MyType"" , buf )"	299:12:7796:7831	5362662	0	True				
ANR	5363234	UnaryOperationExpression	"! ad . EvaluateAttrString ( ""MyType"" , buf )"		5362662	0					
ANR	5363235	UnaryOperator	!		5362662	0					
ANR	5363236	CallExpression	"ad . EvaluateAttrString ( ""MyType"" , buf )"		5362662	1					
ANR	5363237	Callee	ad . EvaluateAttrString		5362662	0					
ANR	5363238	MemberAccess	ad . EvaluateAttrString		5362662	0					
ANR	5363239	Identifier	ad		5362662	0					
ANR	5363240	Identifier	EvaluateAttrString		5362662	1					
ANR	5363241	ArgumentList	"""MyType"""		5362662	1					
ANR	5363242	Argument	"""MyType"""		5362662	0					
ANR	5363243	PrimaryExpression	"""MyType"""		5362662	0					
ANR	5363244	Argument	buf		5362662	1					
ANR	5363245	Identifier	buf		5362662	0					
ANR	5363246	CompoundStatement		149:50:4452:4452	5362662	1					
ANR	5363247	ExpressionStatement	"buf = ""(unknown type)"""	300:12:7848:7868	5362662	0	True				
ANR	5363248	AssignmentExpression	"buf = ""(unknown type)"""		5362662	0		=			
ANR	5363249	Identifier	buf		5362662	0					
ANR	5363250	PrimaryExpression	"""(unknown type)"""		5362662	1					
ANR	5363251	IfStatement	if ( ! sock -> put ( buf . c_str ( ) ) )		5362662	1					
ANR	5363252	Condition	! sock -> put ( buf . c_str ( ) )	302:12:7892:7914	5362662	0	True				
ANR	5363253	UnaryOperationExpression	! sock -> put ( buf . c_str ( ) )		5362662	0					
ANR	5363254	UnaryOperator	!		5362662	0					
ANR	5363255	CallExpression	sock -> put ( buf . c_str ( ) )		5362662	1					
ANR	5363256	Callee	sock -> put		5362662	0					
ANR	5363257	PtrMemberAccess	sock -> put		5362662	0					
ANR	5363258	Identifier	sock		5362662	0					
ANR	5363259	Identifier	put		5362662	1					
ANR	5363260	ArgumentList	buf . c_str ( )		5362662	1					
ANR	5363261	Argument	buf . c_str ( )		5362662	0					
ANR	5363262	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363263	Callee	buf . c_str		5362662	0					
ANR	5363264	MemberAccess	buf . c_str		5362662	0					
ANR	5363265	Identifier	buf		5362662	0					
ANR	5363266	Identifier	c_str		5362662	1					
ANR	5363267	ArgumentList			5362662	1					
ANR	5363268	CompoundStatement		152:37:4535:4535	5362662	1					
ANR	5363269	ReturnStatement	return false ;	303:12:7931:7943	5362662	0	True				
ANR	5363270	Identifier	false		5362662	0					
ANR	5363271	IfStatement	"if ( ! ad . EvaluateAttrString ( ""TargetType"" , buf ) )"		5362662	2					
ANR	5363272	Condition	"! ad . EvaluateAttrString ( ""TargetType"" , buf )"	306:12:7968:8007	5362662	0	True				
ANR	5363273	UnaryOperationExpression	"! ad . EvaluateAttrString ( ""TargetType"" , buf )"		5362662	0					
ANR	5363274	UnaryOperator	!		5362662	0					
ANR	5363275	CallExpression	"ad . EvaluateAttrString ( ""TargetType"" , buf )"		5362662	1					
ANR	5363276	Callee	ad . EvaluateAttrString		5362662	0					
ANR	5363277	MemberAccess	ad . EvaluateAttrString		5362662	0					
ANR	5363278	Identifier	ad		5362662	0					
ANR	5363279	Identifier	EvaluateAttrString		5362662	1					
ANR	5363280	ArgumentList	"""TargetType"""		5362662	1					
ANR	5363281	Argument	"""TargetType"""		5362662	0					
ANR	5363282	PrimaryExpression	"""TargetType"""		5362662	0					
ANR	5363283	Argument	buf		5362662	1					
ANR	5363284	Identifier	buf		5362662	0					
ANR	5363285	CompoundStatement		156:54:4628:4628	5362662	1					
ANR	5363286	ExpressionStatement	"buf = ""(unknown type)"""	307:12:8024:8044	5362662	0	True				
ANR	5363287	AssignmentExpression	"buf = ""(unknown type)"""		5362662	0		=			
ANR	5363288	Identifier	buf		5362662	0					
ANR	5363289	PrimaryExpression	"""(unknown type)"""		5362662	1					
ANR	5363290	IfStatement	if ( ! sock -> put ( buf . c_str ( ) ) )		5362662	3					
ANR	5363291	Condition	! sock -> put ( buf . c_str ( ) )	309:12:8068:8090	5362662	0	True				
ANR	5363292	UnaryOperationExpression	! sock -> put ( buf . c_str ( ) )		5362662	0					
ANR	5363293	UnaryOperator	!		5362662	0					
ANR	5363294	CallExpression	sock -> put ( buf . c_str ( ) )		5362662	1					
ANR	5363295	Callee	sock -> put		5362662	0					
ANR	5363296	PtrMemberAccess	sock -> put		5362662	0					
ANR	5363297	Identifier	sock		5362662	0					
ANR	5363298	Identifier	put		5362662	1					
ANR	5363299	ArgumentList	buf . c_str ( )		5362662	1					
ANR	5363300	Argument	buf . c_str ( )		5362662	0					
ANR	5363301	CallExpression	buf . c_str ( )		5362662	0					
ANR	5363302	Callee	buf . c_str		5362662	0					
ANR	5363303	MemberAccess	buf . c_str		5362662	0					
ANR	5363304	Identifier	buf		5362662	0					
ANR	5363305	Identifier	c_str		5362662	1					
ANR	5363306	ArgumentList			5362662	1					
ANR	5363307	CompoundStatement		159:37:4711:4711	5362662	1					
ANR	5363308	ReturnStatement	return false ;	310:12:8107:8119	5362662	0	True				
ANR	5363309	Identifier	false		5362662	0					
ANR	5363310	ReturnStatement	return true ;	314:1:8139:8150	5362662	17	True				
ANR	5363311	Identifier	true		5362662	0					
ANR	5363312	ReturnType	bool		5362662	1					
ANR	5363313	Identifier	putOldClassAd		5362662	2					
ANR	5363314	ParameterList	"DummyStream * sock , classad :: ClassAd & ad , bool excludeTypes"		5362662	3					
ANR	5363315	Parameter	DummyStream * sock	150:21:3320:3336	5362662	0	True				
ANR	5363316	ParameterType	DummyStream *		5362662	0					
ANR	5363317	Identifier	sock		5362662	1					
ANR	5363318	Parameter	classad :: ClassAd & ad	150:40:3339:3358	5362662	1	True				
ANR	5363319	ParameterType	classad :: ClassAd &		5362662	0					
ANR	5363320	Identifier	ad		5362662	1					
ANR	5363321	Parameter	bool excludeTypes	150:62:3361:3377	5362662	2	True				
ANR	5363322	ParameterType	bool		5362662	0					
ANR	5363323	Identifier	excludeTypes		5362662	1					
ANR	5363324	CFGEntryNode	ENTRY		5362662		True				
ANR	5363325	CFGExitNode	EXIT		5362662		True				
ANR	5363326	Symbol	numExprs		5362662						
ANR	5363327	Symbol	sock -> put		5362662						
ANR	5363328	Symbol	strlen		5362662						
ANR	5363329	Symbol	buf . c_str		5362662						
ANR	5363330	Symbol	expr		5362662						
ANR	5363331	Symbol	send_server_time		5362662						
ANR	5363332	Symbol	publish_server_timeMangled		5362662						
ANR	5363333	Symbol	buf . size		5362662						
ANR	5363334	Symbol	strcasecmp		5362662						
ANR	5363335	Symbol	* sock		5362662						
ANR	5363336	Symbol	attrItor		5362662						
ANR	5363337	Symbol	tmpAttrName		5362662						
ANR	5363338	Symbol	malloc		5362662						
ANR	5363339	Symbol	ad . EvaluateAttrString		5362662						
ANR	5363340	Symbol	ad		5362662						
ANR	5363341	Symbol	haveChainedAd		5362662						
ANR	5363342	Symbol	NULL		5362662						
ANR	5363343	Symbol	ad . GetChainedParentAd		5362662						
ANR	5363344	Symbol	excludeTypes		5362662						
ANR	5363345	Symbol	pass		5362662						
ANR	5363346	Symbol	* chainedAd		5362662						
ANR	5363347	Symbol	attrItor . IsAfterLast		5362662						
ANR	5363348	Symbol	false		5362662						
ANR	5363349	Symbol	ATTR_SERVER_TIME		5362662						
ANR	5363350	Symbol	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		5362662						
ANR	5363351	Symbol	serverTimeStr		5362662						
ANR	5363352	Symbol	sock		5362662						
ANR	5363353	Symbol	buf		5362662						
ANR	5363354	Symbol	chainedAd		5362662						
ANR	5363355	Symbol	sock -> code		5362662						
ANR	5363356	Symbol	unp		5362662						
ANR	5363357	Symbol	exprString		5362662						
ANR	5363358	Symbol	true		5362662						
ANR	5363359	Symbol	itor . IsAfterLast		5362662						
ANR	5363360	Symbol	time		5362662						
ANR	5363361	Symbol	itor		5362662						
ANR	5363362	DeclStmt									
ANR	5363363	Decl							char	char * [ ]	classad_strings
ANR	5363364	Function	setUpClassAds	326:0:8288:9450							
ANR	5363365	FunctionDef	"setUpClassAds (ClassAd * c1 , ClassAd * c2 , ClassAd * c3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose)"		5363364	0					
ANR	5363366	CompoundStatement		328:0:8416:9450	5363364	0					
ANR	5363367	IfStatement	if ( verbose )		5363364	0					
ANR	5363368	Condition	verbose	329:7:8425:8431	5363364	0	True				
ANR	5363369	Identifier	verbose		5363364	0					
ANR	5363370	ExpressionStatement	"printf ( ""Creating ClassAds\\n"" )"	330:8:8442:8471	5363364	1	True				
ANR	5363371	CallExpression	"printf ( ""Creating ClassAds\\n"" )"		5363364	0					
ANR	5363372	Callee	printf		5363364	0					
ANR	5363373	Identifier	printf		5363364	0					
ANR	5363374	ArgumentList	"""Creating ClassAds\\n"""		5363364	1					
ANR	5363375	Argument	"""Creating ClassAds\\n"""		5363364	0					
ANR	5363376	PrimaryExpression	"""Creating ClassAds\\n"""		5363364	0					
ANR	5363377	Statement	c1	332:1:8475:8476	5363364	1	True				
ANR	5363378	Statement	=	332:4:8478:8478	5363364	2	True				
ANR	5363379	Statement	new	332:6:8480:8482	5363364	3	True				
ANR	5363380	ExpressionStatement	ClassAd	332:10:8484:8491	5363364	4	True				
ANR	5363381	Identifier	ClassAd		5363364	0					
ANR	5363382	Statement	c2	333:1:8494:8495	5363364	5	True				
ANR	5363383	Statement	=	333:4:8497:8497	5363364	6	True				
ANR	5363384	Statement	new	333:6:8499:8501	5363364	7	True				
ANR	5363385	ExpressionStatement	ClassAd	333:10:8503:8510	5363364	8	True				
ANR	5363386	Identifier	ClassAd		5363364	0					
ANR	5363387	Statement	c3	334:1:8513:8514	5363364	9	True				
ANR	5363388	Statement	=	334:4:8516:8516	5363364	10	True				
ANR	5363389	Statement	new	334:7:8519:8521	5363364	11	True				
ANR	5363390	ExpressionStatement	ClassAd	334:11:8523:8530	5363364	12	True				
ANR	5363391	Identifier	ClassAd		5363364	0					
ANR	5363392	ExpressionStatement	"c1 -> initFromString ( classad_strings [ 0 ] , NULL )"	335:4:8536:8580	5363364	13	True				
ANR	5363393	CallExpression	"c1 -> initFromString ( classad_strings [ 0 ] , NULL )"		5363364	0					
ANR	5363394	Callee	c1 -> initFromString		5363364	0					
ANR	5363395	PtrMemberAccess	c1 -> initFromString		5363364	0					
ANR	5363396	Identifier	c1		5363364	0					
ANR	5363397	Identifier	initFromString		5363364	1					
ANR	5363398	ArgumentList	classad_strings [ 0 ]		5363364	1					
ANR	5363399	Argument	classad_strings [ 0 ]		5363364	0					
ANR	5363400	ArrayIndexing	classad_strings [ 0 ]		5363364	0					
ANR	5363401	Identifier	classad_strings		5363364	0					
ANR	5363402	PrimaryExpression	0		5363364	1					
ANR	5363403	Argument	NULL		5363364	1					
ANR	5363404	Identifier	NULL		5363364	0					
ANR	5363405	ExpressionStatement	"c2 -> initFromString ( classad_strings [ 1 ] , NULL )"	336:4:8586:8630	5363364	14	True				
ANR	5363406	CallExpression	"c2 -> initFromString ( classad_strings [ 1 ] , NULL )"		5363364	0					
ANR	5363407	Callee	c2 -> initFromString		5363364	0					
ANR	5363408	PtrMemberAccess	c2 -> initFromString		5363364	0					
ANR	5363409	Identifier	c2		5363364	0					
ANR	5363410	Identifier	initFromString		5363364	1					
ANR	5363411	ArgumentList	classad_strings [ 1 ]		5363364	1					
ANR	5363412	Argument	classad_strings [ 1 ]		5363364	0					
ANR	5363413	ArrayIndexing	classad_strings [ 1 ]		5363364	0					
ANR	5363414	Identifier	classad_strings		5363364	0					
ANR	5363415	PrimaryExpression	1		5363364	1					
ANR	5363416	Argument	NULL		5363364	1					
ANR	5363417	Identifier	NULL		5363364	0					
ANR	5363418	ExpressionStatement	"c3 -> initFromString ( classad_strings [ 2 ] , NULL )"	337:4:8636:8680	5363364	15	True				
ANR	5363419	CallExpression	"c3 -> initFromString ( classad_strings [ 2 ] , NULL )"		5363364	0					
ANR	5363420	Callee	c3 -> initFromString		5363364	0					
ANR	5363421	PtrMemberAccess	c3 -> initFromString		5363364	0					
ANR	5363422	Identifier	c3		5363364	0					
ANR	5363423	Identifier	initFromString		5363364	1					
ANR	5363424	ArgumentList	classad_strings [ 2 ]		5363364	1					
ANR	5363425	Argument	classad_strings [ 2 ]		5363364	0					
ANR	5363426	ArrayIndexing	classad_strings [ 2 ]		5363364	0					
ANR	5363427	Identifier	classad_strings		5363364	0					
ANR	5363428	PrimaryExpression	2		5363364	1					
ANR	5363429	Argument	NULL		5363364	1					
ANR	5363430	Identifier	NULL		5363364	0					
ANR	5363431	ExpressionStatement	"c1 -> SetMyTypeName ( ""c1"" )"	338:4:8686:8709	5363364	16	True				
ANR	5363432	CallExpression	"c1 -> SetMyTypeName ( ""c1"" )"		5363364	0					
ANR	5363433	Callee	c1 -> SetMyTypeName		5363364	0					
ANR	5363434	PtrMemberAccess	c1 -> SetMyTypeName		5363364	0					
ANR	5363435	Identifier	c1		5363364	0					
ANR	5363436	Identifier	SetMyTypeName		5363364	1					
ANR	5363437	ArgumentList	"""c1"""		5363364	1					
ANR	5363438	Argument	"""c1"""		5363364	0					
ANR	5363439	PrimaryExpression	"""c1"""		5363364	0					
ANR	5363440	ExpressionStatement	"c2 -> SetMyTypeName ( ""c2"" )"	339:4:8715:8738	5363364	17	True				
ANR	5363441	CallExpression	"c2 -> SetMyTypeName ( ""c2"" )"		5363364	0					
ANR	5363442	Callee	c2 -> SetMyTypeName		5363364	0					
ANR	5363443	PtrMemberAccess	c2 -> SetMyTypeName		5363364	0					
ANR	5363444	Identifier	c2		5363364	0					
ANR	5363445	Identifier	SetMyTypeName		5363364	1					
ANR	5363446	ArgumentList	"""c2"""		5363364	1					
ANR	5363447	Argument	"""c2"""		5363364	0					
ANR	5363448	PrimaryExpression	"""c2"""		5363364	0					
ANR	5363449	ExpressionStatement	"c3 -> SetMyTypeName ( ""c3"" )"	340:4:8744:8767	5363364	18	True				
ANR	5363450	CallExpression	"c3 -> SetMyTypeName ( ""c3"" )"		5363364	0					
ANR	5363451	Callee	c3 -> SetMyTypeName		5363364	0					
ANR	5363452	PtrMemberAccess	c3 -> SetMyTypeName		5363364	0					
ANR	5363453	Identifier	c3		5363364	0					
ANR	5363454	Identifier	SetMyTypeName		5363364	1					
ANR	5363455	ArgumentList	"""c3"""		5363364	1					
ANR	5363456	Argument	"""c3"""		5363364	0					
ANR	5363457	PrimaryExpression	"""c3"""		5363364	0					
ANR	5363458	ExpressionStatement	"c1 -> SetTargetTypeName ( ""not c1!"" )"	342:4:8774:8806	5363364	19	True				
ANR	5363459	CallExpression	"c1 -> SetTargetTypeName ( ""not c1!"" )"		5363364	0					
ANR	5363460	Callee	c1 -> SetTargetTypeName		5363364	0					
ANR	5363461	PtrMemberAccess	c1 -> SetTargetTypeName		5363364	0					
ANR	5363462	Identifier	c1		5363364	0					
ANR	5363463	Identifier	SetTargetTypeName		5363364	1					
ANR	5363464	ArgumentList	"""not c1!"""		5363364	1					
ANR	5363465	Argument	"""not c1!"""		5363364	0					
ANR	5363466	PrimaryExpression	"""not c1!"""		5363364	0					
ANR	5363467	ExpressionStatement	"c2 -> SetTargetTypeName ( ""not c2!"" )"	343:4:8812:8844	5363364	20	True				
ANR	5363468	CallExpression	"c2 -> SetTargetTypeName ( ""not c2!"" )"		5363364	0					
ANR	5363469	Callee	c2 -> SetTargetTypeName		5363364	0					
ANR	5363470	PtrMemberAccess	c2 -> SetTargetTypeName		5363364	0					
ANR	5363471	Identifier	c2		5363364	0					
ANR	5363472	Identifier	SetTargetTypeName		5363364	1					
ANR	5363473	ArgumentList	"""not c2!"""		5363364	1					
ANR	5363474	Argument	"""not c2!"""		5363364	0					
ANR	5363475	PrimaryExpression	"""not c2!"""		5363364	0					
ANR	5363476	ExpressionStatement	"c3 -> SetTargetTypeName ( ""not c3!"" )"	344:4:8850:8882	5363364	21	True				
ANR	5363477	CallExpression	"c3 -> SetTargetTypeName ( ""not c3!"" )"		5363364	0					
ANR	5363478	Callee	c3 -> SetTargetTypeName		5363364	0					
ANR	5363479	PtrMemberAccess	c3 -> SetTargetTypeName		5363364	0					
ANR	5363480	Identifier	c3		5363364	0					
ANR	5363481	Identifier	SetTargetTypeName		5363364	1					
ANR	5363482	ArgumentList	"""not c3!"""		5363364	1					
ANR	5363483	Argument	"""not c3!"""		5363364	0					
ANR	5363484	PrimaryExpression	"""not c3!"""		5363364	0					
ANR	5363485	IfStatement	if ( verbose )		5363364	22					
ANR	5363486	Condition	verbose	346:7:8892:8898	5363364	0	True				
ANR	5363487	Identifier	verbose		5363364	0					
ANR	5363488	CompoundStatement		20:4:488:488	5363364	1					
ANR	5363489	ExpressionStatement	"printf ( ""C1:\\n"" )"	348:8:8915:8930	5363364	0	True				
ANR	5363490	CallExpression	"printf ( ""C1:\\n"" )"		5363364	0					
ANR	5363491	Callee	printf		5363364	0					
ANR	5363492	Identifier	printf		5363364	0					
ANR	5363493	ArgumentList	"""C1:\\n"""		5363364	1					
ANR	5363494	Argument	"""C1:\\n"""		5363364	0					
ANR	5363495	PrimaryExpression	"""C1:\\n"""		5363364	0					
ANR	5363496	ExpressionStatement	c1 -> fPrint ( stdout )	348:25:8932:8950	5363364	1	True				
ANR	5363497	CallExpression	c1 -> fPrint ( stdout )		5363364	0					
ANR	5363498	Callee	c1 -> fPrint		5363364	0					
ANR	5363499	PtrMemberAccess	c1 -> fPrint		5363364	0					
ANR	5363500	Identifier	c1		5363364	0					
ANR	5363501	Identifier	fPrint		5363364	1					
ANR	5363502	ArgumentList	stdout		5363364	1					
ANR	5363503	Argument	stdout		5363364	0					
ANR	5363504	Identifier	stdout		5363364	0					
ANR	5363505	ExpressionStatement	"printf ( ""\\n"" )"	348:45:8952:8964	5363364	2	True				
ANR	5363506	CallExpression	"printf ( ""\\n"" )"		5363364	0					
ANR	5363507	Callee	printf		5363364	0					
ANR	5363508	Identifier	printf		5363364	0					
ANR	5363509	ArgumentList	"""\\n"""		5363364	1					
ANR	5363510	Argument	"""\\n"""		5363364	0					
ANR	5363511	PrimaryExpression	"""\\n"""		5363364	0					
ANR	5363512	ExpressionStatement	"printf ( ""C2:\\n"" )"	349:8:8974:8989	5363364	3	True				
ANR	5363513	CallExpression	"printf ( ""C2:\\n"" )"		5363364	0					
ANR	5363514	Callee	printf		5363364	0					
ANR	5363515	Identifier	printf		5363364	0					
ANR	5363516	ArgumentList	"""C2:\\n"""		5363364	1					
ANR	5363517	Argument	"""C2:\\n"""		5363364	0					
ANR	5363518	PrimaryExpression	"""C2:\\n"""		5363364	0					
ANR	5363519	ExpressionStatement	c2 -> fPrint ( stdout )	349:25:8991:9009	5363364	4	True				
ANR	5363520	CallExpression	c2 -> fPrint ( stdout )		5363364	0					
ANR	5363521	Callee	c2 -> fPrint		5363364	0					
ANR	5363522	PtrMemberAccess	c2 -> fPrint		5363364	0					
ANR	5363523	Identifier	c2		5363364	0					
ANR	5363524	Identifier	fPrint		5363364	1					
ANR	5363525	ArgumentList	stdout		5363364	1					
ANR	5363526	Argument	stdout		5363364	0					
ANR	5363527	Identifier	stdout		5363364	0					
ANR	5363528	ExpressionStatement	"printf ( ""\\n"" )"	349:45:9011:9023	5363364	5	True				
ANR	5363529	CallExpression	"printf ( ""\\n"" )"		5363364	0					
ANR	5363530	Callee	printf		5363364	0					
ANR	5363531	Identifier	printf		5363364	0					
ANR	5363532	ArgumentList	"""\\n"""		5363364	1					
ANR	5363533	Argument	"""\\n"""		5363364	0					
ANR	5363534	PrimaryExpression	"""\\n"""		5363364	0					
ANR	5363535	ExpressionStatement	"printf ( ""C3:\\n"" )"	350:8:9033:9048	5363364	6	True				
ANR	5363536	CallExpression	"printf ( ""C3:\\n"" )"		5363364	0					
ANR	5363537	Callee	printf		5363364	0					
ANR	5363538	Identifier	printf		5363364	0					
ANR	5363539	ArgumentList	"""C3:\\n"""		5363364	1					
ANR	5363540	Argument	"""C3:\\n"""		5363364	0					
ANR	5363541	PrimaryExpression	"""C3:\\n"""		5363364	0					
ANR	5363542	ExpressionStatement	c3 -> fPrint ( stdout )	350:25:9050:9068	5363364	7	True				
ANR	5363543	CallExpression	c3 -> fPrint ( stdout )		5363364	0					
ANR	5363544	Callee	c3 -> fPrint		5363364	0					
ANR	5363545	PtrMemberAccess	c3 -> fPrint		5363364	0					
ANR	5363546	Identifier	c3		5363364	0					
ANR	5363547	Identifier	fPrint		5363364	1					
ANR	5363548	ArgumentList	stdout		5363364	1					
ANR	5363549	Argument	stdout		5363364	0					
ANR	5363550	Identifier	stdout		5363364	0					
ANR	5363551	ExpressionStatement	"printf ( ""\\n"" )"	350:45:9070:9082	5363364	8	True				
ANR	5363552	CallExpression	"printf ( ""\\n"" )"		5363364	0					
ANR	5363553	Callee	printf		5363364	0					
ANR	5363554	Identifier	printf		5363364	0					
ANR	5363555	ArgumentList	"""\\n"""		5363364	1					
ANR	5363556	Argument	"""\\n"""		5363364	0					
ANR	5363557	PrimaryExpression	"""\\n"""		5363364	0					
ANR	5363558	ExpressionStatement	"c1FP = fopen ( ""c1FP.txt"" , ""w+"" )"	355:4:9232:9262	5363364	23	True				
ANR	5363559	AssignmentExpression	"c1FP = fopen ( ""c1FP.txt"" , ""w+"" )"		5363364	0		=			
ANR	5363560	Identifier	c1FP		5363364	0					
ANR	5363561	CallExpression	"fopen ( ""c1FP.txt"" , ""w+"" )"		5363364	1					
ANR	5363562	Callee	fopen		5363364	0					
ANR	5363563	Identifier	fopen		5363364	0					
ANR	5363564	ArgumentList	"""c1FP.txt"""		5363364	1					
ANR	5363565	Argument	"""c1FP.txt"""		5363364	0					
ANR	5363566	PrimaryExpression	"""c1FP.txt"""		5363364	0					
ANR	5363567	Argument	"""w+"""		5363364	1					
ANR	5363568	PrimaryExpression	"""w+"""		5363364	0					
ANR	5363569	ExpressionStatement	"c2FP = fopen ( ""c2FP.txt"" , ""w+"" )"	356:4:9268:9298	5363364	24	True				
ANR	5363570	AssignmentExpression	"c2FP = fopen ( ""c2FP.txt"" , ""w+"" )"		5363364	0		=			
ANR	5363571	Identifier	c2FP		5363364	0					
ANR	5363572	CallExpression	"fopen ( ""c2FP.txt"" , ""w+"" )"		5363364	1					
ANR	5363573	Callee	fopen		5363364	0					
ANR	5363574	Identifier	fopen		5363364	0					
ANR	5363575	ArgumentList	"""c2FP.txt"""		5363364	1					
ANR	5363576	Argument	"""c2FP.txt"""		5363364	0					
ANR	5363577	PrimaryExpression	"""c2FP.txt"""		5363364	0					
ANR	5363578	Argument	"""w+"""		5363364	1					
ANR	5363579	PrimaryExpression	"""w+"""		5363364	0					
ANR	5363580	ExpressionStatement	"c3FP = fopen ( ""c3FP.txt"" , ""w+"" )"	357:4:9304:9334	5363364	25	True				
ANR	5363581	AssignmentExpression	"c3FP = fopen ( ""c3FP.txt"" , ""w+"" )"		5363364	0		=			
ANR	5363582	Identifier	c3FP		5363364	0					
ANR	5363583	CallExpression	"fopen ( ""c3FP.txt"" , ""w+"" )"		5363364	1					
ANR	5363584	Callee	fopen		5363364	0					
ANR	5363585	Identifier	fopen		5363364	0					
ANR	5363586	ArgumentList	"""c3FP.txt"""		5363364	1					
ANR	5363587	Argument	"""c3FP.txt"""		5363364	0					
ANR	5363588	PrimaryExpression	"""c3FP.txt"""		5363364	0					
ANR	5363589	Argument	"""w+"""		5363364	1					
ANR	5363590	PrimaryExpression	"""w+"""		5363364	0					
ANR	5363591	ExpressionStatement	c1 -> fPrint ( c1FP )	359:4:9341:9357	5363364	26	True				
ANR	5363592	CallExpression	c1 -> fPrint ( c1FP )		5363364	0					
ANR	5363593	Callee	c1 -> fPrint		5363364	0					
ANR	5363594	PtrMemberAccess	c1 -> fPrint		5363364	0					
ANR	5363595	Identifier	c1		5363364	0					
ANR	5363596	Identifier	fPrint		5363364	1					
ANR	5363597	ArgumentList	c1FP		5363364	1					
ANR	5363598	Argument	c1FP		5363364	0					
ANR	5363599	Identifier	c1FP		5363364	0					
ANR	5363600	ExpressionStatement	c2 -> fPrint ( c2FP )	360:4:9363:9379	5363364	27	True				
ANR	5363601	CallExpression	c2 -> fPrint ( c2FP )		5363364	0					
ANR	5363602	Callee	c2 -> fPrint		5363364	0					
ANR	5363603	PtrMemberAccess	c2 -> fPrint		5363364	0					
ANR	5363604	Identifier	c2		5363364	0					
ANR	5363605	Identifier	fPrint		5363364	1					
ANR	5363606	ArgumentList	c2FP		5363364	1					
ANR	5363607	Argument	c2FP		5363364	0					
ANR	5363608	Identifier	c2FP		5363364	0					
ANR	5363609	ExpressionStatement	c3 -> fPrint ( c3FP )	361:4:9385:9401	5363364	28	True				
ANR	5363610	CallExpression	c3 -> fPrint ( c3FP )		5363364	0					
ANR	5363611	Callee	c3 -> fPrint		5363364	0					
ANR	5363612	PtrMemberAccess	c3 -> fPrint		5363364	0					
ANR	5363613	Identifier	c3		5363364	0					
ANR	5363614	Identifier	fPrint		5363364	1					
ANR	5363615	ArgumentList	c3FP		5363364	1					
ANR	5363616	Argument	c3FP		5363364	0					
ANR	5363617	Identifier	c3FP		5363364	0					
ANR	5363618	ExpressionStatement	fclose ( c1FP )	363:4:9408:9420	5363364	29	True				
ANR	5363619	CallExpression	fclose ( c1FP )		5363364	0					
ANR	5363620	Callee	fclose		5363364	0					
ANR	5363621	Identifier	fclose		5363364	0					
ANR	5363622	ArgumentList	c1FP		5363364	1					
ANR	5363623	Argument	c1FP		5363364	0					
ANR	5363624	Identifier	c1FP		5363364	0					
ANR	5363625	ExpressionStatement	fclose ( c2FP )	363:18:9422:9434	5363364	30	True				
ANR	5363626	CallExpression	fclose ( c2FP )		5363364	0					
ANR	5363627	Callee	fclose		5363364	0					
ANR	5363628	Identifier	fclose		5363364	0					
ANR	5363629	ArgumentList	c2FP		5363364	1					
ANR	5363630	Argument	c2FP		5363364	0					
ANR	5363631	Identifier	c2FP		5363364	0					
ANR	5363632	ExpressionStatement	fclose ( c3FP )	363:32:9436:9448	5363364	31	True				
ANR	5363633	CallExpression	fclose ( c3FP )		5363364	0					
ANR	5363634	Callee	fclose		5363364	0					
ANR	5363635	Identifier	fclose		5363364	0					
ANR	5363636	ArgumentList	c3FP		5363364	1					
ANR	5363637	Argument	c3FP		5363364	0					
ANR	5363638	Identifier	c3FP		5363364	0					
ANR	5363639	ReturnType	void		5363364	1					
ANR	5363640	Identifier	setUpClassAds		5363364	2					
ANR	5363641	ParameterList	"ClassAd * c1 , ClassAd * c2 , ClassAd * c3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose"		5363364	3					
ANR	5363642	Parameter	ClassAd * c1	326:19:8307:8317	5363364	0	True				
ANR	5363643	ParameterType	ClassAd *		5363364	0					
ANR	5363644	Identifier	c1		5363364	1					
ANR	5363645	Parameter	ClassAd * c2	326:32:8320:8330	5363364	1	True				
ANR	5363646	ParameterType	ClassAd *		5363364	0					
ANR	5363647	Identifier	c2		5363364	1					
ANR	5363648	Parameter	ClassAd * c3	326:45:8333:8343	5363364	2	True				
ANR	5363649	ParameterType	ClassAd *		5363364	0					
ANR	5363650	Identifier	c3		5363364	1					
ANR	5363651	Parameter	FILE * c1FP	326:58:8346:8355	5363364	3	True				
ANR	5363652	ParameterType	FILE *		5363364	0					
ANR	5363653	Identifier	c1FP		5363364	1					
ANR	5363654	Parameter	FILE * c2FP	327:20:8378:8387	5363364	4	True				
ANR	5363655	ParameterType	FILE *		5363364	0					
ANR	5363656	Identifier	c2FP		5363364	1					
ANR	5363657	Parameter	FILE * c3FP	327:32:8390:8399	5363364	5	True				
ANR	5363658	ParameterType	FILE *		5363364	0					
ANR	5363659	Identifier	c3FP		5363364	1					
ANR	5363660	Parameter	bool verbose	327:44:8402:8413	5363364	6	True				
ANR	5363661	ParameterType	bool		5363364	0					
ANR	5363662	Identifier	verbose		5363364	1					
ANR	5363663	CFGEntryNode	ENTRY		5363364		True				
ANR	5363664	CFGExitNode	EXIT		5363364		True				
ANR	5363665	Symbol	c3		5363364						
ANR	5363666	Symbol	classad_strings		5363364						
ANR	5363667	Symbol	* classad_strings		5363364						
ANR	5363668	Symbol	fopen		5363364						
ANR	5363669	Symbol	NULL		5363364						
ANR	5363670	Symbol	c2FP		5363364						
ANR	5363671	Symbol	stdout		5363364						
ANR	5363672	Symbol	c1FP		5363364						
ANR	5363673	Symbol	c3FP		5363364						
ANR	5363674	Symbol	c1		5363364						
ANR	5363675	Symbol	c2		5363364						
ANR	5363676	Symbol	verbose		5363364						
ANR	5363677	Function	setUpCompatClassAds	368:0:9485:10482							
ANR	5363678	FunctionDef	"setUpCompatClassAds (compat_classad :: ClassAd * * compC1 , compat_classad :: ClassAd * * compC2 , compat_classad :: ClassAd * * compC3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose)"		5363677	0					
ANR	5363679	CompoundStatement		371:0:9677:10482	5363677	0					
ANR	5363680	ExpressionStatement	"c1FP = fopen ( ""c1FP.txt"" , ""r+"" )"	372:4:9683:9713	5363677	0	True				
ANR	5363681	AssignmentExpression	"c1FP = fopen ( ""c1FP.txt"" , ""r+"" )"		5363677	0		=			
ANR	5363682	Identifier	c1FP		5363677	0					
ANR	5363683	CallExpression	"fopen ( ""c1FP.txt"" , ""r+"" )"		5363677	1					
ANR	5363684	Callee	fopen		5363677	0					
ANR	5363685	Identifier	fopen		5363677	0					
ANR	5363686	ArgumentList	"""c1FP.txt"""		5363677	1					
ANR	5363687	Argument	"""c1FP.txt"""		5363677	0					
ANR	5363688	PrimaryExpression	"""c1FP.txt"""		5363677	0					
ANR	5363689	Argument	"""r+"""		5363677	1					
ANR	5363690	PrimaryExpression	"""r+"""		5363677	0					
ANR	5363691	ExpressionStatement	"c2FP = fopen ( ""c2FP.txt"" , ""r+"" )"	373:4:9719:9749	5363677	1	True				
ANR	5363692	AssignmentExpression	"c2FP = fopen ( ""c2FP.txt"" , ""r+"" )"		5363677	0		=			
ANR	5363693	Identifier	c2FP		5363677	0					
ANR	5363694	CallExpression	"fopen ( ""c2FP.txt"" , ""r+"" )"		5363677	1					
ANR	5363695	Callee	fopen		5363677	0					
ANR	5363696	Identifier	fopen		5363677	0					
ANR	5363697	ArgumentList	"""c2FP.txt"""		5363677	1					
ANR	5363698	Argument	"""c2FP.txt"""		5363677	0					
ANR	5363699	PrimaryExpression	"""c2FP.txt"""		5363677	0					
ANR	5363700	Argument	"""r+"""		5363677	1					
ANR	5363701	PrimaryExpression	"""r+"""		5363677	0					
ANR	5363702	ExpressionStatement	"c3FP = fopen ( ""c3FP.txt"" , ""r+"" )"	374:4:9755:9785	5363677	2	True				
ANR	5363703	AssignmentExpression	"c3FP = fopen ( ""c3FP.txt"" , ""r+"" )"		5363677	0		=			
ANR	5363704	Identifier	c3FP		5363677	0					
ANR	5363705	CallExpression	"fopen ( ""c3FP.txt"" , ""r+"" )"		5363677	1					
ANR	5363706	Callee	fopen		5363677	0					
ANR	5363707	Identifier	fopen		5363677	0					
ANR	5363708	ArgumentList	"""c3FP.txt"""		5363677	1					
ANR	5363709	Argument	"""c3FP.txt"""		5363677	0					
ANR	5363710	PrimaryExpression	"""c3FP.txt"""		5363677	0					
ANR	5363711	Argument	"""r+"""		5363677	1					
ANR	5363712	PrimaryExpression	"""r+"""		5363677	0					
ANR	5363713	IfStatement	if ( verbose )		5363677	3					
ANR	5363714	Condition	verbose	376:7:9795:9801	5363677	0	True				
ANR	5363715	Identifier	verbose		5363677	0					
ANR	5363716	ExpressionStatement	"printf ( ""creating compatclassads\\n"" )"	377:8:9812:9847	5363677	1	True				
ANR	5363717	CallExpression	"printf ( ""creating compatclassads\\n"" )"		5363677	0					
ANR	5363718	Callee	printf		5363677	0					
ANR	5363719	Identifier	printf		5363677	0					
ANR	5363720	ArgumentList	"""creating compatclassads\\n"""		5363677	1					
ANR	5363721	Argument	"""creating compatclassads\\n"""		5363677	0					
ANR	5363722	PrimaryExpression	"""creating compatclassads\\n"""		5363677	0					
ANR	5363723	IdentifierDeclStatement	"int eofCheck , errorCheck , emptyCheck ;"	379:4:9854:9890	5363677	4	True				
ANR	5363724	IdentifierDecl	eofCheck		5363677	0					
ANR	5363725	IdentifierDeclType	int		5363677	0					
ANR	5363726	Identifier	eofCheck		5363677	1					
ANR	5363727	IdentifierDecl	errorCheck		5363677	1					
ANR	5363728	IdentifierDeclType	int		5363677	0					
ANR	5363729	Identifier	errorCheck		5363677	1					
ANR	5363730	IdentifierDecl	emptyCheck		5363677	2					
ANR	5363731	IdentifierDeclType	int		5363677	0					
ANR	5363732	Identifier	emptyCheck		5363677	1					
ANR	5363733	ExpressionStatement	"( * compC1 ) = new compat_classad :: ClassAd ( c1FP , "","" , eofCheck , errorCheck , emptyCheck )"	380:4:9897:9981	5363677	5	True				
ANR	5363734	AssignmentExpression	"( * compC1 ) = new compat_classad :: ClassAd ( c1FP , "","" , eofCheck , errorCheck , emptyCheck )"		5363677	0		=			
ANR	5363735	UnaryOperationExpression	* compC1		5363677	0					
ANR	5363736	UnaryOperator	*		5363677	0					
ANR	5363737	Identifier	compC1		5363677	1					
ANR	5363738	Expression	"c1FP , "","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363739	Identifier	c1FP		5363677	0					
ANR	5363740	Expression	""","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363741	PrimaryExpression	""","""		5363677	0					
ANR	5363742	Expression	"eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363743	Identifier	eofCheck		5363677	0					
ANR	5363744	Expression	"errorCheck , emptyCheck"		5363677	1					
ANR	5363745	Identifier	errorCheck		5363677	0					
ANR	5363746	Identifier	emptyCheck		5363677	1					
ANR	5363747	ExpressionStatement	"( * compC2 ) = new compat_classad :: ClassAd ( c2FP , "","" , eofCheck , errorCheck , emptyCheck )"	381:4:9988:10071	5363677	6	True				
ANR	5363748	AssignmentExpression	"( * compC2 ) = new compat_classad :: ClassAd ( c2FP , "","" , eofCheck , errorCheck , emptyCheck )"		5363677	0		=			
ANR	5363749	UnaryOperationExpression	* compC2		5363677	0					
ANR	5363750	UnaryOperator	*		5363677	0					
ANR	5363751	Identifier	compC2		5363677	1					
ANR	5363752	Expression	"c2FP , "","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363753	Identifier	c2FP		5363677	0					
ANR	5363754	Expression	""","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363755	PrimaryExpression	""","""		5363677	0					
ANR	5363756	Expression	"eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363757	Identifier	eofCheck		5363677	0					
ANR	5363758	Expression	"errorCheck , emptyCheck"		5363677	1					
ANR	5363759	Identifier	errorCheck		5363677	0					
ANR	5363760	Identifier	emptyCheck		5363677	1					
ANR	5363761	ExpressionStatement	"( * compC3 ) = new compat_classad :: ClassAd ( c3FP , "","" , eofCheck , errorCheck , emptyCheck )"	382:4:10078:10162	5363677	7	True				
ANR	5363762	AssignmentExpression	"( * compC3 ) = new compat_classad :: ClassAd ( c3FP , "","" , eofCheck , errorCheck , emptyCheck )"		5363677	0		=			
ANR	5363763	UnaryOperationExpression	* compC3		5363677	0					
ANR	5363764	UnaryOperator	*		5363677	0					
ANR	5363765	Identifier	compC3		5363677	1					
ANR	5363766	Expression	"c3FP , "","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363767	Identifier	c3FP		5363677	0					
ANR	5363768	Expression	""","" , eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363769	PrimaryExpression	""","""		5363677	0					
ANR	5363770	Expression	"eofCheck , errorCheck , emptyCheck"		5363677	1					
ANR	5363771	Identifier	eofCheck		5363677	0					
ANR	5363772	Expression	"errorCheck , emptyCheck"		5363677	1					
ANR	5363773	Identifier	errorCheck		5363677	0					
ANR	5363774	Identifier	emptyCheck		5363677	1					
ANR	5363775	ExpressionStatement	fclose ( c1FP )	383:4:10169:10181	5363677	8	True				
ANR	5363776	CallExpression	fclose ( c1FP )		5363677	0					
ANR	5363777	Callee	fclose		5363677	0					
ANR	5363778	Identifier	fclose		5363677	0					
ANR	5363779	ArgumentList	c1FP		5363677	1					
ANR	5363780	Argument	c1FP		5363677	0					
ANR	5363781	Identifier	c1FP		5363677	0					
ANR	5363782	ExpressionStatement	fclose ( c2FP )	383:18:10183:10195	5363677	9	True				
ANR	5363783	CallExpression	fclose ( c2FP )		5363677	0					
ANR	5363784	Callee	fclose		5363677	0					
ANR	5363785	Identifier	fclose		5363677	0					
ANR	5363786	ArgumentList	c2FP		5363677	1					
ANR	5363787	Argument	c2FP		5363677	0					
ANR	5363788	Identifier	c2FP		5363677	0					
ANR	5363789	ExpressionStatement	fclose ( c3FP )	383:32:10197:10209	5363677	10	True				
ANR	5363790	CallExpression	fclose ( c3FP )		5363677	0					
ANR	5363791	Callee	fclose		5363677	0					
ANR	5363792	Identifier	fclose		5363677	0					
ANR	5363793	ArgumentList	c3FP		5363677	1					
ANR	5363794	Argument	c3FP		5363677	0					
ANR	5363795	Identifier	c3FP		5363677	0					
ANR	5363796	ExpressionStatement	"( * compC1 ) -> SetMyTypeName ( ""compC1"" )"	385:4:10216:10250	5363677	11	True				
ANR	5363797	CallExpression	"( * compC1 ) -> SetMyTypeName ( ""compC1"" )"		5363677	0					
ANR	5363798	Callee	( * compC1 ) -> SetMyTypeName		5363677	0					
ANR	5363799	PtrMemberAccess	( * compC1 ) -> SetMyTypeName		5363677	0					
ANR	5363800	UnaryOperationExpression	* compC1		5363677	0					
ANR	5363801	UnaryOperator	*		5363677	0					
ANR	5363802	Identifier	compC1		5363677	1					
ANR	5363803	Identifier	SetMyTypeName		5363677	1					
ANR	5363804	ArgumentList	"""compC1"""		5363677	1					
ANR	5363805	Argument	"""compC1"""		5363677	0					
ANR	5363806	PrimaryExpression	"""compC1"""		5363677	0					
ANR	5363807	ExpressionStatement	"( * compC2 ) -> SetMyTypeName ( ""compC2"" )"	386:4:10256:10290	5363677	12	True				
ANR	5363808	CallExpression	"( * compC2 ) -> SetMyTypeName ( ""compC2"" )"		5363677	0					
ANR	5363809	Callee	( * compC2 ) -> SetMyTypeName		5363677	0					
ANR	5363810	PtrMemberAccess	( * compC2 ) -> SetMyTypeName		5363677	0					
ANR	5363811	UnaryOperationExpression	* compC2		5363677	0					
ANR	5363812	UnaryOperator	*		5363677	0					
ANR	5363813	Identifier	compC2		5363677	1					
ANR	5363814	Identifier	SetMyTypeName		5363677	1					
ANR	5363815	ArgumentList	"""compC2"""		5363677	1					
ANR	5363816	Argument	"""compC2"""		5363677	0					
ANR	5363817	PrimaryExpression	"""compC2"""		5363677	0					
ANR	5363818	ExpressionStatement	"( * compC3 ) -> SetMyTypeName ( ""compC3"" )"	387:4:10296:10330	5363677	13	True				
ANR	5363819	CallExpression	"( * compC3 ) -> SetMyTypeName ( ""compC3"" )"		5363677	0					
ANR	5363820	Callee	( * compC3 ) -> SetMyTypeName		5363677	0					
ANR	5363821	PtrMemberAccess	( * compC3 ) -> SetMyTypeName		5363677	0					
ANR	5363822	UnaryOperationExpression	* compC3		5363677	0					
ANR	5363823	UnaryOperator	*		5363677	0					
ANR	5363824	Identifier	compC3		5363677	1					
ANR	5363825	Identifier	SetMyTypeName		5363677	1					
ANR	5363826	ArgumentList	"""compC3"""		5363677	1					
ANR	5363827	Argument	"""compC3"""		5363677	0					
ANR	5363828	PrimaryExpression	"""compC3"""		5363677	0					
ANR	5363829	ExpressionStatement	"( * compC1 ) -> SetTargetTypeName ( ""not compC1!"" )"	389:4:10337:10380	5363677	14	True				
ANR	5363830	CallExpression	"( * compC1 ) -> SetTargetTypeName ( ""not compC1!"" )"		5363677	0					
ANR	5363831	Callee	( * compC1 ) -> SetTargetTypeName		5363677	0					
ANR	5363832	PtrMemberAccess	( * compC1 ) -> SetTargetTypeName		5363677	0					
ANR	5363833	UnaryOperationExpression	* compC1		5363677	0					
ANR	5363834	UnaryOperator	*		5363677	0					
ANR	5363835	Identifier	compC1		5363677	1					
ANR	5363836	Identifier	SetTargetTypeName		5363677	1					
ANR	5363837	ArgumentList	"""not compC1!"""		5363677	1					
ANR	5363838	Argument	"""not compC1!"""		5363677	0					
ANR	5363839	PrimaryExpression	"""not compC1!"""		5363677	0					
ANR	5363840	ExpressionStatement	"( * compC2 ) -> SetTargetTypeName ( ""not compC2!"" )"	390:4:10386:10429	5363677	15	True				
ANR	5363841	CallExpression	"( * compC2 ) -> SetTargetTypeName ( ""not compC2!"" )"		5363677	0					
ANR	5363842	Callee	( * compC2 ) -> SetTargetTypeName		5363677	0					
ANR	5363843	PtrMemberAccess	( * compC2 ) -> SetTargetTypeName		5363677	0					
ANR	5363844	UnaryOperationExpression	* compC2		5363677	0					
ANR	5363845	UnaryOperator	*		5363677	0					
ANR	5363846	Identifier	compC2		5363677	1					
ANR	5363847	Identifier	SetTargetTypeName		5363677	1					
ANR	5363848	ArgumentList	"""not compC2!"""		5363677	1					
ANR	5363849	Argument	"""not compC2!"""		5363677	0					
ANR	5363850	PrimaryExpression	"""not compC2!"""		5363677	0					
ANR	5363851	ExpressionStatement	"( * compC3 ) -> SetTargetTypeName ( ""not compC3!"" )"	391:4:10435:10478	5363677	16	True				
ANR	5363852	CallExpression	"( * compC3 ) -> SetTargetTypeName ( ""not compC3!"" )"		5363677	0					
ANR	5363853	Callee	( * compC3 ) -> SetTargetTypeName		5363677	0					
ANR	5363854	PtrMemberAccess	( * compC3 ) -> SetTargetTypeName		5363677	0					
ANR	5363855	UnaryOperationExpression	* compC3		5363677	0					
ANR	5363856	UnaryOperator	*		5363677	0					
ANR	5363857	Identifier	compC3		5363677	1					
ANR	5363858	Identifier	SetTargetTypeName		5363677	1					
ANR	5363859	ArgumentList	"""not compC3!"""		5363677	1					
ANR	5363860	Argument	"""not compC3!"""		5363677	0					
ANR	5363861	PrimaryExpression	"""not compC3!"""		5363677	0					
ANR	5363862	ReturnType	void		5363677	1					
ANR	5363863	Identifier	setUpCompatClassAds		5363677	2					
ANR	5363864	ParameterList	"compat_classad :: ClassAd * * compC1 , compat_classad :: ClassAd * * compC2 , compat_classad :: ClassAd * * compC3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose"		5363677	3					
ANR	5363865	Parameter	compat_classad :: ClassAd * * compC1	368:25:9510:9541	5363677	0	True				
ANR	5363866	ParameterType	compat_classad :: ClassAd * *		5363677	0					
ANR	5363867	Identifier	compC1		5363677	1					
ANR	5363868	Parameter	compat_classad :: ClassAd * * compC2	368:59:9544:9575	5363677	1	True				
ANR	5363869	ParameterType	compat_classad :: ClassAd * *		5363677	0					
ANR	5363870	Identifier	compC2		5363677	1					
ANR	5363871	Parameter	compat_classad :: ClassAd * * compC3	369:7:9585:9616	5363677	2	True				
ANR	5363872	ParameterType	compat_classad :: ClassAd * *		5363677	0					
ANR	5363873	Identifier	compC3		5363677	1					
ANR	5363874	Parameter	FILE * c1FP	369:41:9619:9628	5363677	3	True				
ANR	5363875	ParameterType	FILE *		5363677	0					
ANR	5363876	Identifier	c1FP		5363677	1					
ANR	5363877	Parameter	FILE * c2FP	369:53:9631:9640	5363677	4	True				
ANR	5363878	ParameterType	FILE *		5363677	0					
ANR	5363879	Identifier	c2FP		5363677	1					
ANR	5363880	Parameter	FILE * c3FP	369:65:9643:9652	5363677	5	True				
ANR	5363881	ParameterType	FILE *		5363677	0					
ANR	5363882	Identifier	c3FP		5363677	1					
ANR	5363883	Parameter	bool verbose	370:8:9663:9674	5363677	6	True				
ANR	5363884	ParameterType	bool		5363677	0					
ANR	5363885	Identifier	verbose		5363677	1					
ANR	5363886	CFGEntryNode	ENTRY		5363677		True				
ANR	5363887	CFGExitNode	EXIT		5363677		True				
ANR	5363888	Symbol	compC3		5363677						
ANR	5363889	Symbol	compC2		5363677						
ANR	5363890	Symbol	fopen		5363677						
ANR	5363891	Symbol	compC1		5363677						
ANR	5363892	Symbol	* compC3		5363677						
ANR	5363893	Symbol	* compC2		5363677						
ANR	5363894	Symbol	* compC1		5363677						
ANR	5363895	Symbol	verbose		5363677						
ANR	5363896	Symbol	c2FP		5363677						
ANR	5363897	Symbol	c1FP		5363677						
ANR	5363898	Symbol	emptyCheck		5363677						
ANR	5363899	Symbol	eofCheck		5363677						
ANR	5363900	Symbol	errorCheck		5363677						
ANR	5363901	Symbol	c3FP		5363677						
ANR	5363902	Function	test_put_server_time	398:0:10518:12004							
ANR	5363903	FunctionDef	test_put_server_time (bool verbose)		5363902	0					
ANR	5363904	CompoundStatement		399:0:10558:12004	5363902	0					
ANR	5363905	IdentifierDeclStatement	DummyStream ds ;	400:4:10564:10578	5363902	0	True				
ANR	5363906	IdentifierDecl	ds		5363902	0					
ANR	5363907	IdentifierDeclType	DummyStream		5363902	0					
ANR	5363908	Identifier	ds		5363902	1					
ANR	5363909	IdentifierDeclStatement	bool failed = false ;	402:4:10585:10604	5363902	1	True				
ANR	5363910	IdentifierDecl	failed = false		5363902	0					
ANR	5363911	IdentifierDeclType	bool		5363902	0					
ANR	5363912	Identifier	failed		5363902	1					
ANR	5363913	AssignmentExpression	failed = false		5363902	2		=			
ANR	5363914	Identifier	false		5363902	0					
ANR	5363915	Identifier	false		5363902	1					
ANR	5363916	IdentifierDeclStatement	"ClassAd * c1 , * c2 , * c3 ;"	403:4:10611:10632	5363902	2	True				
ANR	5363917	IdentifierDecl	* c1		5363902	0					
ANR	5363918	IdentifierDeclType	ClassAd *		5363902	0					
ANR	5363919	Identifier	c1		5363902	1					
ANR	5363920	IdentifierDecl	* c2		5363902	1					
ANR	5363921	IdentifierDeclType	ClassAd *		5363902	0					
ANR	5363922	Identifier	c2		5363902	1					
ANR	5363923	IdentifierDecl	* c3		5363902	2					
ANR	5363924	IdentifierDeclType	ClassAd *		5363902	0					
ANR	5363925	Identifier	c3		5363902	1					
ANR	5363926	IdentifierDeclStatement	"FILE * c1FP , * c2FP , * c3FP ;"	404:4:10638:10662	5363902	3	True				
ANR	5363927	IdentifierDecl	* c1FP		5363902	0					
ANR	5363928	IdentifierDeclType	FILE *		5363902	0					
ANR	5363929	Identifier	c1FP		5363902	1					
ANR	5363930	IdentifierDecl	* c2FP		5363902	1					
ANR	5363931	IdentifierDeclType	FILE *		5363902	0					
ANR	5363932	Identifier	c2FP		5363902	1					
ANR	5363933	IdentifierDecl	* c3FP		5363902	2					
ANR	5363934	IdentifierDeclType	FILE *		5363902	0					
ANR	5363935	Identifier	c3FP		5363902	1					
ANR	5363936	ExpressionStatement	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"	406:4:10669:10720	5363902	4	True				
ANR	5363937	CallExpression	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"		5363902	0					
ANR	5363938	Callee	setUpClassAds		5363902	0					
ANR	5363939	Identifier	setUpClassAds		5363902	0					
ANR	5363940	ArgumentList	c1		5363902	1					
ANR	5363941	Argument	c1		5363902	0					
ANR	5363942	Identifier	c1		5363902	0					
ANR	5363943	Argument	c2		5363902	1					
ANR	5363944	Identifier	c2		5363902	0					
ANR	5363945	Argument	c3		5363902	2					
ANR	5363946	Identifier	c3		5363902	0					
ANR	5363947	Argument	c1FP		5363902	3					
ANR	5363948	Identifier	c1FP		5363902	0					
ANR	5363949	Argument	c2FP		5363902	4					
ANR	5363950	Identifier	c2FP		5363902	0					
ANR	5363951	Argument	c3FP		5363902	5					
ANR	5363952	Identifier	c3FP		5363902	0					
ANR	5363953	Argument	verbose		5363902	6					
ANR	5363954	Identifier	verbose		5363902	0					
ANR	5363955	IdentifierDeclStatement	"compat_classad :: ClassAd * compC1 , * compC2 , * compC3 ;"	408:1:10724:10773	5363902	5	True				
ANR	5363956	IdentifierDecl	* compC1		5363902	0					
ANR	5363957	IdentifierDeclType	compat_classad :: ClassAd *		5363902	0					
ANR	5363958	Identifier	compC1		5363902	1					
ANR	5363959	IdentifierDecl	* compC2		5363902	1					
ANR	5363960	IdentifierDeclType	compat_classad :: ClassAd *		5363902	0					
ANR	5363961	Identifier	compC2		5363902	1					
ANR	5363962	IdentifierDecl	* compC3		5363902	2					
ANR	5363963	IdentifierDeclType	compat_classad :: ClassAd *		5363902	0					
ANR	5363964	Identifier	compC3		5363902	1					
ANR	5363965	ExpressionStatement	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"	410:4:10780:10852	5363902	6	True				
ANR	5363966	CallExpression	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"		5363902	0					
ANR	5363967	Callee	setUpCompatClassAds		5363902	0					
ANR	5363968	Identifier	setUpCompatClassAds		5363902	0					
ANR	5363969	ArgumentList	& compC1		5363902	1					
ANR	5363970	Argument	& compC1		5363902	0					
ANR	5363971	UnaryOperationExpression	& compC1		5363902	0					
ANR	5363972	UnaryOperator	&		5363902	0					
ANR	5363973	Identifier	compC1		5363902	1					
ANR	5363974	Argument	& compC2		5363902	1					
ANR	5363975	UnaryOperationExpression	& compC2		5363902	0					
ANR	5363976	UnaryOperator	&		5363902	0					
ANR	5363977	Identifier	compC2		5363902	1					
ANR	5363978	Argument	& compC3		5363902	2					
ANR	5363979	UnaryOperationExpression	& compC3		5363902	0					
ANR	5363980	UnaryOperator	&		5363902	0					
ANR	5363981	Identifier	compC3		5363902	1					
ANR	5363982	Argument	c1FP		5363902	3					
ANR	5363983	Identifier	c1FP		5363902	0					
ANR	5363984	Argument	c2FP		5363902	4					
ANR	5363985	Identifier	c2FP		5363902	0					
ANR	5363986	Argument	c3FP		5363902	5					
ANR	5363987	Identifier	c3FP		5363902	0					
ANR	5363988	Argument	verbose		5363902	6					
ANR	5363989	Identifier	verbose		5363902	0					
ANR	5363990	IfStatement	if ( verbose )		5363902	7					
ANR	5363991	Condition	verbose	412:7:10862:10868	5363902	0	True				
ANR	5363992	Identifier	verbose		5363902	0					
ANR	5363993	CompoundStatement		15:4:316:316	5363902	1					
ANR	5363994	ExpressionStatement	"printf ( ""Comp1:\\n"" )"	414:8:10885:10903	5363902	0	True				
ANR	5363995	CallExpression	"printf ( ""Comp1:\\n"" )"		5363902	0					
ANR	5363996	Callee	printf		5363902	0					
ANR	5363997	Identifier	printf		5363902	0					
ANR	5363998	ArgumentList	"""Comp1:\\n"""		5363902	1					
ANR	5363999	Argument	"""Comp1:\\n"""		5363902	0					
ANR	5364000	PrimaryExpression	"""Comp1:\\n"""		5363902	0					
ANR	5364001	ExpressionStatement	compC1 -> fPrint ( stdout )	414:28:10905:10927	5363902	1	True				
ANR	5364002	CallExpression	compC1 -> fPrint ( stdout )		5363902	0					
ANR	5364003	Callee	compC1 -> fPrint		5363902	0					
ANR	5364004	PtrMemberAccess	compC1 -> fPrint		5363902	0					
ANR	5364005	Identifier	compC1		5363902	0					
ANR	5364006	Identifier	fPrint		5363902	1					
ANR	5364007	ArgumentList	stdout		5363902	1					
ANR	5364008	Argument	stdout		5363902	0					
ANR	5364009	Identifier	stdout		5363902	0					
ANR	5364010	ExpressionStatement	"printf ( ""\\n"" )"	414:52:10929:10941	5363902	2	True				
ANR	5364011	CallExpression	"printf ( ""\\n"" )"		5363902	0					
ANR	5364012	Callee	printf		5363902	0					
ANR	5364013	Identifier	printf		5363902	0					
ANR	5364014	ArgumentList	"""\\n"""		5363902	1					
ANR	5364015	Argument	"""\\n"""		5363902	0					
ANR	5364016	PrimaryExpression	"""\\n"""		5363902	0					
ANR	5364017	ExpressionStatement	"printf ( ""Comp2:\\n"" )"	415:8:10951:10969	5363902	3	True				
ANR	5364018	CallExpression	"printf ( ""Comp2:\\n"" )"		5363902	0					
ANR	5364019	Callee	printf		5363902	0					
ANR	5364020	Identifier	printf		5363902	0					
ANR	5364021	ArgumentList	"""Comp2:\\n"""		5363902	1					
ANR	5364022	Argument	"""Comp2:\\n"""		5363902	0					
ANR	5364023	PrimaryExpression	"""Comp2:\\n"""		5363902	0					
ANR	5364024	ExpressionStatement	compC2 -> fPrint ( stdout )	415:28:10971:10993	5363902	4	True				
ANR	5364025	CallExpression	compC2 -> fPrint ( stdout )		5363902	0					
ANR	5364026	Callee	compC2 -> fPrint		5363902	0					
ANR	5364027	PtrMemberAccess	compC2 -> fPrint		5363902	0					
ANR	5364028	Identifier	compC2		5363902	0					
ANR	5364029	Identifier	fPrint		5363902	1					
ANR	5364030	ArgumentList	stdout		5363902	1					
ANR	5364031	Argument	stdout		5363902	0					
ANR	5364032	Identifier	stdout		5363902	0					
ANR	5364033	ExpressionStatement	"printf ( ""\\n"" )"	415:52:10995:11007	5363902	5	True				
ANR	5364034	CallExpression	"printf ( ""\\n"" )"		5363902	0					
ANR	5364035	Callee	printf		5363902	0					
ANR	5364036	Identifier	printf		5363902	0					
ANR	5364037	ArgumentList	"""\\n"""		5363902	1					
ANR	5364038	Argument	"""\\n"""		5363902	0					
ANR	5364039	PrimaryExpression	"""\\n"""		5363902	0					
ANR	5364040	ExpressionStatement	"printf ( ""Comp3:\\n"" )"	416:8:11017:11035	5363902	6	True				
ANR	5364041	CallExpression	"printf ( ""Comp3:\\n"" )"		5363902	0					
ANR	5364042	Callee	printf		5363902	0					
ANR	5364043	Identifier	printf		5363902	0					
ANR	5364044	ArgumentList	"""Comp3:\\n"""		5363902	1					
ANR	5364045	Argument	"""Comp3:\\n"""		5363902	0					
ANR	5364046	PrimaryExpression	"""Comp3:\\n"""		5363902	0					
ANR	5364047	ExpressionStatement	compC3 -> fPrint ( stdout )	416:28:11037:11059	5363902	7	True				
ANR	5364048	CallExpression	compC3 -> fPrint ( stdout )		5363902	0					
ANR	5364049	Callee	compC3 -> fPrint		5363902	0					
ANR	5364050	PtrMemberAccess	compC3 -> fPrint		5363902	0					
ANR	5364051	Identifier	compC3		5363902	0					
ANR	5364052	Identifier	fPrint		5363902	1					
ANR	5364053	ArgumentList	stdout		5363902	1					
ANR	5364054	Argument	stdout		5363902	0					
ANR	5364055	Identifier	stdout		5363902	0					
ANR	5364056	ExpressionStatement	"printf ( ""\\n"" )"	416:52:11061:11073	5363902	8	True				
ANR	5364057	CallExpression	"printf ( ""\\n"" )"		5363902	0					
ANR	5364058	Callee	printf		5363902	0					
ANR	5364059	Identifier	printf		5363902	0					
ANR	5364060	ArgumentList	"""\\n"""		5363902	1					
ANR	5364061	Argument	"""\\n"""		5363902	0					
ANR	5364062	PrimaryExpression	"""\\n"""		5363902	0					
ANR	5364063	ExpressionStatement	"printf ( ""----------------\\n\\n"" )"	418:8:11088:11118	5363902	9	True				
ANR	5364064	CallExpression	"printf ( ""----------------\\n\\n"" )"		5363902	0					
ANR	5364065	Callee	printf		5363902	0					
ANR	5364066	Identifier	printf		5363902	0					
ANR	5364067	ArgumentList	"""----------------\\n\\n"""		5363902	1					
ANR	5364068	Argument	"""----------------\\n\\n"""		5363902	0					
ANR	5364069	PrimaryExpression	"""----------------\\n\\n"""		5363902	0					
ANR	5364070	ExpressionStatement	"printf ( ""Trying out excludeTypes = false\\n"" )"	445:4:11724:11767	5363902	8	True				
ANR	5364071	CallExpression	"printf ( ""Trying out excludeTypes = false\\n"" )"		5363902	0					
ANR	5364072	Callee	printf		5363902	0					
ANR	5364073	Identifier	printf		5363902	0					
ANR	5364074	ArgumentList	"""Trying out excludeTypes = false\\n"""		5363902	1					
ANR	5364075	Argument	"""Trying out excludeTypes = false\\n"""		5363902	0					
ANR	5364076	PrimaryExpression	"""Trying out excludeTypes = false\\n"""		5363902	0					
ANR	5364077	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , false )"	446:4:11773:11807	5363902	9	True				
ANR	5364078	CallExpression	"putOldClassAd ( & ds , * compC3 , false )"		5363902	0					
ANR	5364079	Callee	putOldClassAd		5363902	0					
ANR	5364080	Identifier	putOldClassAd		5363902	0					
ANR	5364081	ArgumentList	& ds		5363902	1					
ANR	5364082	Argument	& ds		5363902	0					
ANR	5364083	UnaryOperationExpression	& ds		5363902	0					
ANR	5364084	UnaryOperator	&		5363902	0					
ANR	5364085	Identifier	ds		5363902	1					
ANR	5364086	Argument	* compC3		5363902	1					
ANR	5364087	UnaryOperationExpression	* compC3		5363902	0					
ANR	5364088	UnaryOperator	*		5363902	0					
ANR	5364089	Identifier	compC3		5363902	1					
ANR	5364090	Argument	false		5363902	2					
ANR	5364091	Identifier	false		5363902	0					
ANR	5364092	ExpressionStatement	ds . printContents ( )	447:4:11813:11831	5363902	10	True				
ANR	5364093	CallExpression	ds . printContents ( )		5363902	0					
ANR	5364094	Callee	ds . printContents		5363902	0					
ANR	5364095	MemberAccess	ds . printContents		5363902	0					
ANR	5364096	Identifier	ds		5363902	0					
ANR	5364097	Identifier	printContents		5363902	1					
ANR	5364098	ArgumentList			5363902	1					
ANR	5364099	ExpressionStatement	ds . emptyVec ( )	448:4:11837:11850	5363902	11	True				
ANR	5364100	CallExpression	ds . emptyVec ( )		5363902	0					
ANR	5364101	Callee	ds . emptyVec		5363902	0					
ANR	5364102	MemberAccess	ds . emptyVec		5363902	0					
ANR	5364103	Identifier	ds		5363902	0					
ANR	5364104	Identifier	emptyVec		5363902	1					
ANR	5364105	ArgumentList			5363902	1					
ANR	5364106	ExpressionStatement	"printf ( ""Trying out excludeTypes = true\\n"" )"	450:4:11857:11899	5363902	12	True				
ANR	5364107	CallExpression	"printf ( ""Trying out excludeTypes = true\\n"" )"		5363902	0					
ANR	5364108	Callee	printf		5363902	0					
ANR	5364109	Identifier	printf		5363902	0					
ANR	5364110	ArgumentList	"""Trying out excludeTypes = true\\n"""		5363902	1					
ANR	5364111	Argument	"""Trying out excludeTypes = true\\n"""		5363902	0					
ANR	5364112	PrimaryExpression	"""Trying out excludeTypes = true\\n"""		5363902	0					
ANR	5364113	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , true )"	451:4:11905:11938	5363902	13	True				
ANR	5364114	CallExpression	"putOldClassAd ( & ds , * compC3 , true )"		5363902	0					
ANR	5364115	Callee	putOldClassAd		5363902	0					
ANR	5364116	Identifier	putOldClassAd		5363902	0					
ANR	5364117	ArgumentList	& ds		5363902	1					
ANR	5364118	Argument	& ds		5363902	0					
ANR	5364119	UnaryOperationExpression	& ds		5363902	0					
ANR	5364120	UnaryOperator	&		5363902	0					
ANR	5364121	Identifier	ds		5363902	1					
ANR	5364122	Argument	* compC3		5363902	1					
ANR	5364123	UnaryOperationExpression	* compC3		5363902	0					
ANR	5364124	UnaryOperator	*		5363902	0					
ANR	5364125	Identifier	compC3		5363902	1					
ANR	5364126	Argument	true		5363902	2					
ANR	5364127	Identifier	true		5363902	0					
ANR	5364128	ExpressionStatement	ds . printContents ( )	452:4:11944:11962	5363902	14	True				
ANR	5364129	CallExpression	ds . printContents ( )		5363902	0					
ANR	5364130	Callee	ds . printContents		5363902	0					
ANR	5364131	MemberAccess	ds . printContents		5363902	0					
ANR	5364132	Identifier	ds		5363902	0					
ANR	5364133	Identifier	printContents		5363902	1					
ANR	5364134	ArgumentList			5363902	1					
ANR	5364135	ExpressionStatement	ds . emptyVec ( )	453:4:11968:11981	5363902	15	True				
ANR	5364136	CallExpression	ds . emptyVec ( )		5363902	0					
ANR	5364137	Callee	ds . emptyVec		5363902	0					
ANR	5364138	MemberAccess	ds . emptyVec		5363902	0					
ANR	5364139	Identifier	ds		5363902	0					
ANR	5364140	Identifier	emptyVec		5363902	1					
ANR	5364141	ArgumentList			5363902	1					
ANR	5364142	ReturnStatement	return failed ;	455:4:11988:12001	5363902	16	True				
ANR	5364143	Identifier	failed		5363902	0					
ANR	5364144	ReturnType	bool		5363902	1					
ANR	5364145	Identifier	test_put_server_time		5363902	2					
ANR	5364146	ParameterList	bool verbose		5363902	3					
ANR	5364147	Parameter	bool verbose	398:26:10544:10555	5363902	0	True				
ANR	5364148	ParameterType	bool		5363902	0					
ANR	5364149	Identifier	verbose		5363902	1					
ANR	5364150	CFGEntryNode	ENTRY		5363902		True				
ANR	5364151	CFGExitNode	EXIT		5363902		True				
ANR	5364152	Symbol	compC3		5363902						
ANR	5364153	Symbol	compC2		5363902						
ANR	5364154	Symbol	compC1		5363902						
ANR	5364155	Symbol	* compC3		5363902						
ANR	5364156	Symbol	& compC1		5363902						
ANR	5364157	Symbol	stdout		5363902						
ANR	5364158	Symbol	false		5363902						
ANR	5364159	Symbol	& compC3		5363902						
ANR	5364160	Symbol	failed		5363902						
ANR	5364161	Symbol	& compC2		5363902						
ANR	5364162	Symbol	c1		5363902						
ANR	5364163	Symbol	verbose		5363902						
ANR	5364164	Symbol	ds		5363902						
ANR	5364165	Symbol	c2		5363902						
ANR	5364166	Symbol	c3		5363902						
ANR	5364167	Symbol	c2FP		5363902						
ANR	5364168	Symbol	c1FP		5363902						
ANR	5364169	Symbol	c3FP		5363902						
ANR	5364170	Symbol	& ds		5363902						
ANR	5364171	Symbol	true		5363902						
ANR	5364172	Function	test_put_chained_ads	460:0:12039:13275							
ANR	5364173	FunctionDef	test_put_chained_ads (bool verbose)		5364172	0					
ANR	5364174	CompoundStatement		461:0:12079:13275	5364172	0					
ANR	5364175	IdentifierDeclStatement	DummyStream ds ;	463:4:12086:12100	5364172	0	True				
ANR	5364176	IdentifierDecl	ds		5364172	0					
ANR	5364177	IdentifierDeclType	DummyStream		5364172	0					
ANR	5364178	Identifier	ds		5364172	1					
ANR	5364179	IdentifierDeclStatement	bool failed = false ;	465:4:12107:12126	5364172	1	True				
ANR	5364180	IdentifierDecl	failed = false		5364172	0					
ANR	5364181	IdentifierDeclType	bool		5364172	0					
ANR	5364182	Identifier	failed		5364172	1					
ANR	5364183	AssignmentExpression	failed = false		5364172	2		=			
ANR	5364184	Identifier	false		5364172	0					
ANR	5364185	Identifier	false		5364172	1					
ANR	5364186	IdentifierDeclStatement	"ClassAd * c1 , * c2 , * c3 ;"	467:4:12133:12154	5364172	2	True				
ANR	5364187	IdentifierDecl	* c1		5364172	0					
ANR	5364188	IdentifierDeclType	ClassAd *		5364172	0					
ANR	5364189	Identifier	c1		5364172	1					
ANR	5364190	IdentifierDecl	* c2		5364172	1					
ANR	5364191	IdentifierDeclType	ClassAd *		5364172	0					
ANR	5364192	Identifier	c2		5364172	1					
ANR	5364193	IdentifierDecl	* c3		5364172	2					
ANR	5364194	IdentifierDeclType	ClassAd *		5364172	0					
ANR	5364195	Identifier	c3		5364172	1					
ANR	5364196	IdentifierDeclStatement	"FILE * c1FP , * c2FP , * c3FP ;"	468:4:12160:12184	5364172	3	True				
ANR	5364197	IdentifierDecl	* c1FP		5364172	0					
ANR	5364198	IdentifierDeclType	FILE *		5364172	0					
ANR	5364199	Identifier	c1FP		5364172	1					
ANR	5364200	IdentifierDecl	* c2FP		5364172	1					
ANR	5364201	IdentifierDeclType	FILE *		5364172	0					
ANR	5364202	Identifier	c2FP		5364172	1					
ANR	5364203	IdentifierDecl	* c3FP		5364172	2					
ANR	5364204	IdentifierDeclType	FILE *		5364172	0					
ANR	5364205	Identifier	c3FP		5364172	1					
ANR	5364206	ExpressionStatement	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"	470:4:12191:12243	5364172	4	True				
ANR	5364207	CallExpression	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"		5364172	0					
ANR	5364208	Callee	setUpClassAds		5364172	0					
ANR	5364209	Identifier	setUpClassAds		5364172	0					
ANR	5364210	ArgumentList	c1		5364172	1					
ANR	5364211	Argument	c1		5364172	0					
ANR	5364212	Identifier	c1		5364172	0					
ANR	5364213	Argument	c2		5364172	1					
ANR	5364214	Identifier	c2		5364172	0					
ANR	5364215	Argument	c3		5364172	2					
ANR	5364216	Identifier	c3		5364172	0					
ANR	5364217	Argument	c1FP		5364172	3					
ANR	5364218	Identifier	c1FP		5364172	0					
ANR	5364219	Argument	c2FP		5364172	4					
ANR	5364220	Identifier	c2FP		5364172	0					
ANR	5364221	Argument	c3FP		5364172	5					
ANR	5364222	Identifier	c3FP		5364172	0					
ANR	5364223	Argument	verbose		5364172	6					
ANR	5364224	Identifier	verbose		5364172	0					
ANR	5364225	IdentifierDeclStatement	"compat_classad :: ClassAd * compC1 , * compC2 , * compC3 ;"	472:1:12247:12296	5364172	5	True				
ANR	5364226	IdentifierDecl	* compC1		5364172	0					
ANR	5364227	IdentifierDeclType	compat_classad :: ClassAd *		5364172	0					
ANR	5364228	Identifier	compC1		5364172	1					
ANR	5364229	IdentifierDecl	* compC2		5364172	1					
ANR	5364230	IdentifierDeclType	compat_classad :: ClassAd *		5364172	0					
ANR	5364231	Identifier	compC2		5364172	1					
ANR	5364232	IdentifierDecl	* compC3		5364172	2					
ANR	5364233	IdentifierDeclType	compat_classad :: ClassAd *		5364172	0					
ANR	5364234	Identifier	compC3		5364172	1					
ANR	5364235	ExpressionStatement	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"	474:4:12303:12375	5364172	6	True				
ANR	5364236	CallExpression	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"		5364172	0					
ANR	5364237	Callee	setUpCompatClassAds		5364172	0					
ANR	5364238	Identifier	setUpCompatClassAds		5364172	0					
ANR	5364239	ArgumentList	& compC1		5364172	1					
ANR	5364240	Argument	& compC1		5364172	0					
ANR	5364241	UnaryOperationExpression	& compC1		5364172	0					
ANR	5364242	UnaryOperator	&		5364172	0					
ANR	5364243	Identifier	compC1		5364172	1					
ANR	5364244	Argument	& compC2		5364172	1					
ANR	5364245	UnaryOperationExpression	& compC2		5364172	0					
ANR	5364246	UnaryOperator	&		5364172	0					
ANR	5364247	Identifier	compC2		5364172	1					
ANR	5364248	Argument	& compC3		5364172	2					
ANR	5364249	UnaryOperationExpression	& compC3		5364172	0					
ANR	5364250	UnaryOperator	&		5364172	0					
ANR	5364251	Identifier	compC3		5364172	1					
ANR	5364252	Argument	c1FP		5364172	3					
ANR	5364253	Identifier	c1FP		5364172	0					
ANR	5364254	Argument	c2FP		5364172	4					
ANR	5364255	Identifier	c2FP		5364172	0					
ANR	5364256	Argument	c3FP		5364172	5					
ANR	5364257	Identifier	c3FP		5364172	0					
ANR	5364258	Argument	verbose		5364172	6					
ANR	5364259	Identifier	verbose		5364172	0					
ANR	5364260	ExpressionStatement	compC1 -> ChainToAd ( compC3 )	476:4:12382:12407	5364172	7	True				
ANR	5364261	CallExpression	compC1 -> ChainToAd ( compC3 )		5364172	0					
ANR	5364262	Callee	compC1 -> ChainToAd		5364172	0					
ANR	5364263	PtrMemberAccess	compC1 -> ChainToAd		5364172	0					
ANR	5364264	Identifier	compC1		5364172	0					
ANR	5364265	Identifier	ChainToAd		5364172	1					
ANR	5364266	ArgumentList	compC3		5364172	1					
ANR	5364267	Argument	compC3		5364172	0					
ANR	5364268	Identifier	compC3		5364172	0					
ANR	5364269	ExpressionStatement	compC3 -> ChainToAd ( compC2 )	477:4:12413:12438	5364172	8	True				
ANR	5364270	CallExpression	compC3 -> ChainToAd ( compC2 )		5364172	0					
ANR	5364271	Callee	compC3 -> ChainToAd		5364172	0					
ANR	5364272	PtrMemberAccess	compC3 -> ChainToAd		5364172	0					
ANR	5364273	Identifier	compC3		5364172	0					
ANR	5364274	Identifier	ChainToAd		5364172	1					
ANR	5364275	ArgumentList	compC2		5364172	1					
ANR	5364276	Argument	compC2		5364172	0					
ANR	5364277	Identifier	compC2		5364172	0					
ANR	5364278	IfStatement	if ( verbose )		5364172	9					
ANR	5364279	Condition	verbose	479:7:12448:12454	5364172	0	True				
ANR	5364280	Identifier	verbose		5364172	0					
ANR	5364281	CompoundStatement		20:4:381:381	5364172	1					
ANR	5364282	ExpressionStatement	"printf ( ""Comp1:\\n"" )"	481:8:12471:12489	5364172	0	True				
ANR	5364283	CallExpression	"printf ( ""Comp1:\\n"" )"		5364172	0					
ANR	5364284	Callee	printf		5364172	0					
ANR	5364285	Identifier	printf		5364172	0					
ANR	5364286	ArgumentList	"""Comp1:\\n"""		5364172	1					
ANR	5364287	Argument	"""Comp1:\\n"""		5364172	0					
ANR	5364288	PrimaryExpression	"""Comp1:\\n"""		5364172	0					
ANR	5364289	ExpressionStatement	compC1 -> fPrint ( stdout )	481:28:12491:12513	5364172	1	True				
ANR	5364290	CallExpression	compC1 -> fPrint ( stdout )		5364172	0					
ANR	5364291	Callee	compC1 -> fPrint		5364172	0					
ANR	5364292	PtrMemberAccess	compC1 -> fPrint		5364172	0					
ANR	5364293	Identifier	compC1		5364172	0					
ANR	5364294	Identifier	fPrint		5364172	1					
ANR	5364295	ArgumentList	stdout		5364172	1					
ANR	5364296	Argument	stdout		5364172	0					
ANR	5364297	Identifier	stdout		5364172	0					
ANR	5364298	ExpressionStatement	"printf ( ""\\n"" )"	481:52:12515:12527	5364172	2	True				
ANR	5364299	CallExpression	"printf ( ""\\n"" )"		5364172	0					
ANR	5364300	Callee	printf		5364172	0					
ANR	5364301	Identifier	printf		5364172	0					
ANR	5364302	ArgumentList	"""\\n"""		5364172	1					
ANR	5364303	Argument	"""\\n"""		5364172	0					
ANR	5364304	PrimaryExpression	"""\\n"""		5364172	0					
ANR	5364305	ExpressionStatement	"printf ( ""Comp2:\\n"" )"	482:8:12537:12555	5364172	3	True				
ANR	5364306	CallExpression	"printf ( ""Comp2:\\n"" )"		5364172	0					
ANR	5364307	Callee	printf		5364172	0					
ANR	5364308	Identifier	printf		5364172	0					
ANR	5364309	ArgumentList	"""Comp2:\\n"""		5364172	1					
ANR	5364310	Argument	"""Comp2:\\n"""		5364172	0					
ANR	5364311	PrimaryExpression	"""Comp2:\\n"""		5364172	0					
ANR	5364312	ExpressionStatement	compC2 -> fPrint ( stdout )	482:28:12557:12579	5364172	4	True				
ANR	5364313	CallExpression	compC2 -> fPrint ( stdout )		5364172	0					
ANR	5364314	Callee	compC2 -> fPrint		5364172	0					
ANR	5364315	PtrMemberAccess	compC2 -> fPrint		5364172	0					
ANR	5364316	Identifier	compC2		5364172	0					
ANR	5364317	Identifier	fPrint		5364172	1					
ANR	5364318	ArgumentList	stdout		5364172	1					
ANR	5364319	Argument	stdout		5364172	0					
ANR	5364320	Identifier	stdout		5364172	0					
ANR	5364321	ExpressionStatement	"printf ( ""\\n"" )"	482:52:12581:12593	5364172	5	True				
ANR	5364322	CallExpression	"printf ( ""\\n"" )"		5364172	0					
ANR	5364323	Callee	printf		5364172	0					
ANR	5364324	Identifier	printf		5364172	0					
ANR	5364325	ArgumentList	"""\\n"""		5364172	1					
ANR	5364326	Argument	"""\\n"""		5364172	0					
ANR	5364327	PrimaryExpression	"""\\n"""		5364172	0					
ANR	5364328	ExpressionStatement	"printf ( ""Comp3:\\n"" )"	483:8:12603:12621	5364172	6	True				
ANR	5364329	CallExpression	"printf ( ""Comp3:\\n"" )"		5364172	0					
ANR	5364330	Callee	printf		5364172	0					
ANR	5364331	Identifier	printf		5364172	0					
ANR	5364332	ArgumentList	"""Comp3:\\n"""		5364172	1					
ANR	5364333	Argument	"""Comp3:\\n"""		5364172	0					
ANR	5364334	PrimaryExpression	"""Comp3:\\n"""		5364172	0					
ANR	5364335	ExpressionStatement	compC3 -> fPrint ( stdout )	483:28:12623:12645	5364172	7	True				
ANR	5364336	CallExpression	compC3 -> fPrint ( stdout )		5364172	0					
ANR	5364337	Callee	compC3 -> fPrint		5364172	0					
ANR	5364338	PtrMemberAccess	compC3 -> fPrint		5364172	0					
ANR	5364339	Identifier	compC3		5364172	0					
ANR	5364340	Identifier	fPrint		5364172	1					
ANR	5364341	ArgumentList	stdout		5364172	1					
ANR	5364342	Argument	stdout		5364172	0					
ANR	5364343	Identifier	stdout		5364172	0					
ANR	5364344	ExpressionStatement	"printf ( ""\\n"" )"	483:52:12647:12659	5364172	8	True				
ANR	5364345	CallExpression	"printf ( ""\\n"" )"		5364172	0					
ANR	5364346	Callee	printf		5364172	0					
ANR	5364347	Identifier	printf		5364172	0					
ANR	5364348	ArgumentList	"""\\n"""		5364172	1					
ANR	5364349	Argument	"""\\n"""		5364172	0					
ANR	5364350	PrimaryExpression	"""\\n"""		5364172	0					
ANR	5364351	ExpressionStatement	"printf ( ""Putting CompClassAd1\\n"" )"	485:8:12670:12702	5364172	9	True				
ANR	5364352	CallExpression	"printf ( ""Putting CompClassAd1\\n"" )"		5364172	0					
ANR	5364353	Callee	printf		5364172	0					
ANR	5364354	Identifier	printf		5364172	0					
ANR	5364355	ArgumentList	"""Putting CompClassAd1\\n"""		5364172	1					
ANR	5364356	Argument	"""Putting CompClassAd1\\n"""		5364172	0					
ANR	5364357	PrimaryExpression	"""Putting CompClassAd1\\n"""		5364172	0					
ANR	5364358	ExpressionStatement	ds . emptyVec ( )	487:4:12714:12727	5364172	10	True				
ANR	5364359	CallExpression	ds . emptyVec ( )		5364172	0					
ANR	5364360	Callee	ds . emptyVec		5364172	0					
ANR	5364361	MemberAccess	ds . emptyVec		5364172	0					
ANR	5364362	Identifier	ds		5364172	0					
ANR	5364363	Identifier	emptyVec		5364172	1					
ANR	5364364	ArgumentList			5364172	1					
ANR	5364365	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( true )	489:4:12734:12777	5364172	11	True				
ANR	5364366	CallExpression	AttrList_setPublishServerTimeMangled2 ( true )		5364172	0					
ANR	5364367	Callee	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364368	Identifier	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364369	ArgumentList	true		5364172	1					
ANR	5364370	Argument	true		5364172	0					
ANR	5364371	Identifier	true		5364172	0					
ANR	5364372	ExpressionStatement	"putOldClassAd ( & ds , * compC1 , false )"	490:4:12783:12817	5364172	12	True				
ANR	5364373	CallExpression	"putOldClassAd ( & ds , * compC1 , false )"		5364172	0					
ANR	5364374	Callee	putOldClassAd		5364172	0					
ANR	5364375	Identifier	putOldClassAd		5364172	0					
ANR	5364376	ArgumentList	& ds		5364172	1					
ANR	5364377	Argument	& ds		5364172	0					
ANR	5364378	UnaryOperationExpression	& ds		5364172	0					
ANR	5364379	UnaryOperator	&		5364172	0					
ANR	5364380	Identifier	ds		5364172	1					
ANR	5364381	Argument	* compC1		5364172	1					
ANR	5364382	UnaryOperationExpression	* compC1		5364172	0					
ANR	5364383	UnaryOperator	*		5364172	0					
ANR	5364384	Identifier	compC1		5364172	1					
ANR	5364385	Argument	false		5364172	2					
ANR	5364386	Identifier	false		5364172	0					
ANR	5364387	ExpressionStatement	ds . printContents ( )	491:4:12823:12841	5364172	13	True				
ANR	5364388	CallExpression	ds . printContents ( )		5364172	0					
ANR	5364389	Callee	ds . printContents		5364172	0					
ANR	5364390	MemberAccess	ds . printContents		5364172	0					
ANR	5364391	Identifier	ds		5364172	0					
ANR	5364392	Identifier	printContents		5364172	1					
ANR	5364393	ArgumentList			5364172	1					
ANR	5364394	ExpressionStatement	ds . emptyVec ( )	492:4:12847:12860	5364172	14	True				
ANR	5364395	CallExpression	ds . emptyVec ( )		5364172	0					
ANR	5364396	Callee	ds . emptyVec		5364172	0					
ANR	5364397	MemberAccess	ds . emptyVec		5364172	0					
ANR	5364398	Identifier	ds		5364172	0					
ANR	5364399	Identifier	emptyVec		5364172	1					
ANR	5364400	ArgumentList			5364172	1					
ANR	5364401	ExpressionStatement	"printf ( ""\\nPutting CompClassAd2\\n"" )"	494:4:12867:12901	5364172	15	True				
ANR	5364402	CallExpression	"printf ( ""\\nPutting CompClassAd2\\n"" )"		5364172	0					
ANR	5364403	Callee	printf		5364172	0					
ANR	5364404	Identifier	printf		5364172	0					
ANR	5364405	ArgumentList	"""\\nPutting CompClassAd2\\n"""		5364172	1					
ANR	5364406	Argument	"""\\nPutting CompClassAd2\\n"""		5364172	0					
ANR	5364407	PrimaryExpression	"""\\nPutting CompClassAd2\\n"""		5364172	0					
ANR	5364408	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( false )	495:4:12907:12951	5364172	16	True				
ANR	5364409	CallExpression	AttrList_setPublishServerTimeMangled2 ( false )		5364172	0					
ANR	5364410	Callee	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364411	Identifier	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364412	ArgumentList	false		5364172	1					
ANR	5364413	Argument	false		5364172	0					
ANR	5364414	Identifier	false		5364172	0					
ANR	5364415	ExpressionStatement	"putOldClassAd ( & ds , * compC2 , false )"	496:4:12957:12991	5364172	17	True				
ANR	5364416	CallExpression	"putOldClassAd ( & ds , * compC2 , false )"		5364172	0					
ANR	5364417	Callee	putOldClassAd		5364172	0					
ANR	5364418	Identifier	putOldClassAd		5364172	0					
ANR	5364419	ArgumentList	& ds		5364172	1					
ANR	5364420	Argument	& ds		5364172	0					
ANR	5364421	UnaryOperationExpression	& ds		5364172	0					
ANR	5364422	UnaryOperator	&		5364172	0					
ANR	5364423	Identifier	ds		5364172	1					
ANR	5364424	Argument	* compC2		5364172	1					
ANR	5364425	UnaryOperationExpression	* compC2		5364172	0					
ANR	5364426	UnaryOperator	*		5364172	0					
ANR	5364427	Identifier	compC2		5364172	1					
ANR	5364428	Argument	false		5364172	2					
ANR	5364429	Identifier	false		5364172	0					
ANR	5364430	ExpressionStatement	ds . printContents ( )	497:4:12997:13015	5364172	18	True				
ANR	5364431	CallExpression	ds . printContents ( )		5364172	0					
ANR	5364432	Callee	ds . printContents		5364172	0					
ANR	5364433	MemberAccess	ds . printContents		5364172	0					
ANR	5364434	Identifier	ds		5364172	0					
ANR	5364435	Identifier	printContents		5364172	1					
ANR	5364436	ArgumentList			5364172	1					
ANR	5364437	ExpressionStatement	ds . emptyVec ( )	498:4:13021:13034	5364172	19	True				
ANR	5364438	CallExpression	ds . emptyVec ( )		5364172	0					
ANR	5364439	Callee	ds . emptyVec		5364172	0					
ANR	5364440	MemberAccess	ds . emptyVec		5364172	0					
ANR	5364441	Identifier	ds		5364172	0					
ANR	5364442	Identifier	emptyVec		5364172	1					
ANR	5364443	ArgumentList			5364172	1					
ANR	5364444	ExpressionStatement	"printf ( ""\\nTurning server_time on\\n"" )"	500:4:13041:13077	5364172	20	True				
ANR	5364445	CallExpression	"printf ( ""\\nTurning server_time on\\n"" )"		5364172	0					
ANR	5364446	Callee	printf		5364172	0					
ANR	5364447	Identifier	printf		5364172	0					
ANR	5364448	ArgumentList	"""\\nTurning server_time on\\n"""		5364172	1					
ANR	5364449	Argument	"""\\nTurning server_time on\\n"""		5364172	0					
ANR	5364450	PrimaryExpression	"""\\nTurning server_time on\\n"""		5364172	0					
ANR	5364451	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( true )	501:4:13083:13126	5364172	21	True				
ANR	5364452	CallExpression	AttrList_setPublishServerTimeMangled2 ( true )		5364172	0					
ANR	5364453	Callee	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364454	Identifier	AttrList_setPublishServerTimeMangled2		5364172	0					
ANR	5364455	ArgumentList	true		5364172	1					
ANR	5364456	Argument	true		5364172	0					
ANR	5364457	Identifier	true		5364172	0					
ANR	5364458	ExpressionStatement	"printf ( ""Putting CompClassAd3\\n"" )"	503:4:13133:13165	5364172	22	True				
ANR	5364459	CallExpression	"printf ( ""Putting CompClassAd3\\n"" )"		5364172	0					
ANR	5364460	Callee	printf		5364172	0					
ANR	5364461	Identifier	printf		5364172	0					
ANR	5364462	ArgumentList	"""Putting CompClassAd3\\n"""		5364172	1					
ANR	5364463	Argument	"""Putting CompClassAd3\\n"""		5364172	0					
ANR	5364464	PrimaryExpression	"""Putting CompClassAd3\\n"""		5364172	0					
ANR	5364465	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , false )"	504:4:13171:13205	5364172	23	True				
ANR	5364466	CallExpression	"putOldClassAd ( & ds , * compC3 , false )"		5364172	0					
ANR	5364467	Callee	putOldClassAd		5364172	0					
ANR	5364468	Identifier	putOldClassAd		5364172	0					
ANR	5364469	ArgumentList	& ds		5364172	1					
ANR	5364470	Argument	& ds		5364172	0					
ANR	5364471	UnaryOperationExpression	& ds		5364172	0					
ANR	5364472	UnaryOperator	&		5364172	0					
ANR	5364473	Identifier	ds		5364172	1					
ANR	5364474	Argument	* compC3		5364172	1					
ANR	5364475	UnaryOperationExpression	* compC3		5364172	0					
ANR	5364476	UnaryOperator	*		5364172	0					
ANR	5364477	Identifier	compC3		5364172	1					
ANR	5364478	Argument	false		5364172	2					
ANR	5364479	Identifier	false		5364172	0					
ANR	5364480	ExpressionStatement	ds . printContents ( )	505:4:13211:13229	5364172	24	True				
ANR	5364481	CallExpression	ds . printContents ( )		5364172	0					
ANR	5364482	Callee	ds . printContents		5364172	0					
ANR	5364483	MemberAccess	ds . printContents		5364172	0					
ANR	5364484	Identifier	ds		5364172	0					
ANR	5364485	Identifier	printContents		5364172	1					
ANR	5364486	ArgumentList			5364172	1					
ANR	5364487	ExpressionStatement	ds . emptyVec ( )	506:4:13235:13248	5364172	25	True				
ANR	5364488	CallExpression	ds . emptyVec ( )		5364172	0					
ANR	5364489	Callee	ds . emptyVec		5364172	0					
ANR	5364490	MemberAccess	ds . emptyVec		5364172	0					
ANR	5364491	Identifier	ds		5364172	0					
ANR	5364492	Identifier	emptyVec		5364172	1					
ANR	5364493	ArgumentList			5364172	1					
ANR	5364494	ReturnStatement	return failed ;	509:4:13260:13273	5364172	26	True				
ANR	5364495	Identifier	failed		5364172	0					
ANR	5364496	ReturnType	bool		5364172	1					
ANR	5364497	Identifier	test_put_chained_ads		5364172	2					
ANR	5364498	ParameterList	bool verbose		5364172	3					
ANR	5364499	Parameter	bool verbose	460:26:12065:12076	5364172	0	True				
ANR	5364500	ParameterType	bool		5364172	0					
ANR	5364501	Identifier	verbose		5364172	1					
ANR	5364502	CFGEntryNode	ENTRY		5364172		True				
ANR	5364503	CFGExitNode	EXIT		5364172		True				
ANR	5364504	Symbol	compC3		5364172						
ANR	5364505	Symbol	compC2		5364172						
ANR	5364506	Symbol	compC1		5364172						
ANR	5364507	Symbol	* compC3		5364172						
ANR	5364508	Symbol	* compC2		5364172						
ANR	5364509	Symbol	& compC1		5364172						
ANR	5364510	Symbol	stdout		5364172						
ANR	5364511	Symbol	* compC1		5364172						
ANR	5364512	Symbol	false		5364172						
ANR	5364513	Symbol	& compC3		5364172						
ANR	5364514	Symbol	failed		5364172						
ANR	5364515	Symbol	& compC2		5364172						
ANR	5364516	Symbol	c1		5364172						
ANR	5364517	Symbol	verbose		5364172						
ANR	5364518	Symbol	ds		5364172						
ANR	5364519	Symbol	c2		5364172						
ANR	5364520	Symbol	c3		5364172						
ANR	5364521	Symbol	c2FP		5364172						
ANR	5364522	Symbol	c1FP		5364172						
ANR	5364523	Symbol	c3FP		5364172						
ANR	5364524	Symbol	true		5364172						
ANR	5364525	Symbol	& ds		5364172						
ANR	5364526	Function	main	513:0:13284:13716							
ANR	5364527	FunctionDef	"main (int argc , char * * argv)"		5364526	0					
ANR	5364528	CompoundStatement		514:0:13316:13716	5364526	0					
ANR	5364529	IdentifierDeclStatement	bool verbose ;	515:4:13322:13334	5364526	0	True				
ANR	5364530	IdentifierDecl	verbose		5364526	0					
ANR	5364531	IdentifierDeclType	bool		5364526	0					
ANR	5364532	Identifier	verbose		5364526	1					
ANR	5364533	IfStatement	"if ( argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" ) )"		5364526	1					
ANR	5364534	Condition	"argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" )"	517:7:13344:13377	5364526	0	True				
ANR	5364535	AndExpression	"argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" )"		5364526	0		&&			
ANR	5364536	RelationalExpression	argc > 1		5364526	0		>			
ANR	5364537	Identifier	argc		5364526	0					
ANR	5364538	PrimaryExpression	1		5364526	1					
ANR	5364539	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""-v"" )"		5364526	1					
ANR	5364540	UnaryOperator	!		5364526	0					
ANR	5364541	CallExpression	"strcmp ( argv [ 1 ] , ""-v"" )"		5364526	1					
ANR	5364542	Callee	strcmp		5364526	0					
ANR	5364543	Identifier	strcmp		5364526	0					
ANR	5364544	ArgumentList	argv [ 1 ]		5364526	1					
ANR	5364545	Argument	argv [ 1 ]		5364526	0					
ANR	5364546	ArrayIndexing	argv [ 1 ]		5364526	0					
ANR	5364547	Identifier	argv		5364526	0					
ANR	5364548	PrimaryExpression	1		5364526	1					
ANR	5364549	Argument	"""-v"""		5364526	1					
ANR	5364550	PrimaryExpression	"""-v"""		5364526	0					
ANR	5364551	CompoundStatement		5:4:67:67	5364526	1					
ANR	5364552	ExpressionStatement	verbose = true	519:8:13394:13408	5364526	0	True				
ANR	5364553	AssignmentExpression	verbose = true		5364526	0		=			
ANR	5364554	Identifier	verbose		5364526	0					
ANR	5364555	Identifier	true		5364526	1					
ANR	5364556	ElseStatement	else		5364526	0					
ANR	5364557	CompoundStatement		9:4:112:112	5364526	0					
ANR	5364558	ExpressionStatement	verbose = false	523:8:13439:13454	5364526	0	True				
ANR	5364559	AssignmentExpression	verbose = false		5364526	0		=			
ANR	5364560	Identifier	verbose		5364526	0					
ANR	5364561	Identifier	false		5364526	1					
ANR	5364562	ExpressionStatement	"printf ( ""testing server time\\n"" )"	526:4:13467:13498	5364526	2	True				
ANR	5364563	CallExpression	"printf ( ""testing server time\\n"" )"		5364526	0					
ANR	5364564	Callee	printf		5364526	0					
ANR	5364565	Identifier	printf		5364526	0					
ANR	5364566	ArgumentList	"""testing server time\\n"""		5364526	1					
ANR	5364567	Argument	"""testing server time\\n"""		5364526	0					
ANR	5364568	PrimaryExpression	"""testing server time\\n"""		5364526	0					
ANR	5364569	ExpressionStatement	test_put_server_time ( verbose )	527:4:13504:13533	5364526	3	True				
ANR	5364570	CallExpression	test_put_server_time ( verbose )		5364526	0					
ANR	5364571	Callee	test_put_server_time		5364526	0					
ANR	5364572	Identifier	test_put_server_time		5364526	0					
ANR	5364573	ArgumentList	verbose		5364526	1					
ANR	5364574	Argument	verbose		5364526	0					
ANR	5364575	Identifier	verbose		5364526	0					
ANR	5364576	ExpressionStatement	"printf ( ""Server time complete.\\n-----------------\\nTesting chained ads.\\n"" )"	528:4:13539:13613	5364526	4	True				
ANR	5364577	CallExpression	"printf ( ""Server time complete.\\n-----------------\\nTesting chained ads.\\n"" )"		5364526	0					
ANR	5364578	Callee	printf		5364526	0					
ANR	5364579	Identifier	printf		5364526	0					
ANR	5364580	ArgumentList	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		5364526	1					
ANR	5364581	Argument	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		5364526	0					
ANR	5364582	PrimaryExpression	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		5364526	0					
ANR	5364583	ExpressionStatement	"printf ( ""chained ads complete.\\n-----------------\\n"" )"	532:4:13662:13714	5364526	5	True				
ANR	5364584	CallExpression	"printf ( ""chained ads complete.\\n-----------------\\n"" )"		5364526	0					
ANR	5364585	Callee	printf		5364526	0					
ANR	5364586	Identifier	printf		5364526	0					
ANR	5364587	ArgumentList	"""chained ads complete.\\n-----------------\\n"""		5364526	1					
ANR	5364588	Argument	"""chained ads complete.\\n-----------------\\n"""		5364526	0					
ANR	5364589	PrimaryExpression	"""chained ads complete.\\n-----------------\\n"""		5364526	0					
ANR	5364590	ReturnType	int		5364526	1					
ANR	5364591	Identifier	main		5364526	2					
ANR	5364592	ParameterList	"int argc , char * * argv"		5364526	3					
ANR	5364593	Parameter	int argc	513:9:13293:13300	5364526	0	True				
ANR	5364594	ParameterType	int		5364526	0					
ANR	5364595	Identifier	argc		5364526	1					
ANR	5364596	Parameter	char * * argv	513:19:13303:13313	5364526	1	True				
ANR	5364597	ParameterType	char * *		5364526	0					
ANR	5364598	Identifier	argv		5364526	1					
ANR	5364599	CFGEntryNode	ENTRY		5364526		True				
ANR	5364600	CFGExitNode	EXIT		5364526		True				
ANR	5364601	Symbol	argc		5364526						
ANR	5364602	Symbol	strcmp		5364526						
ANR	5364603	Symbol	true		5364526						
ANR	5364604	Symbol	false		5364526						
ANR	5364605	Symbol	* argv		5364526						
ANR	5364606	Symbol	argv		5364526						
ANR	5364607	Symbol	verbose		5364526						
