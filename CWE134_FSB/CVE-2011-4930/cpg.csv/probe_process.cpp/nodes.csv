command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2008853	File	data/converged/CVE-2011-4930_htcondor/probe_process.cpp								
ANR	2008854	DeclStmt									
ANR	2008855	Decl							SegmentTable	SegmentTable	g_segment_table
ANR	2008856	DeclStmt									
ANR	2008857	Decl							SegmentTable	SegmentTable *	g_st
ANR	2008858	DeclStmt									
ANR	2008859	Decl							void	void ( char * argv0 )	usage
ANR	2008860	DeclStmt									
ANR	2008861	Decl							int	"int ( char * arg , char * thing )"	matches
ANR	2008862	Function	usage	36:0:1209:1537							
ANR	2008863	FunctionDef	usage (char * argv0)		2008862	0					
ANR	2008864	CompoundStatement		37:0:1233:1537	2008862	0					
ANR	2008865	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s <options>\\n"" , argv0 )"	38:1:1236:1278	2008862	0	True				
ANR	2008866	CallExpression	"dprintf ( D_ALWAYS , ""%s <options>\\n"" , argv0 )"		2008862	0					
ANR	2008867	Callee	dprintf		2008862	0					
ANR	2008868	Identifier	dprintf		2008862	0					
ANR	2008869	ArgumentList	D_ALWAYS		2008862	1					
ANR	2008870	Argument	D_ALWAYS		2008862	0					
ANR	2008871	Identifier	D_ALWAYS		2008862	0					
ANR	2008872	Argument	"""%s <options>\\n"""		2008862	1					
ANR	2008873	PrimaryExpression	"""%s <options>\\n"""		2008862	0					
ANR	2008874	Argument	argv0		2008862	2					
ANR	2008875	Identifier	argv0		2008862	0					
ANR	2008876	Statement	dprintf	40:1:1282:1288	2008862	1	True				
ANR	2008877	Statement	(	40:8:1289:1289	2008862	2	True				
ANR	2008878	Statement	D_ALWAYS	40:9:1290:1297	2008862	3	True				
ANR	2008879	Statement	","	40:17:1298:1298	2008862	4	True				
ANR	2008880	Statement	""" --vdso-addr        Emit the vsyscall page location if applicable\\n"""	42:0:1301:1369	2008862	5	True				
ANR	2008881	Statement	""" --segments         Emit a map of all loaded segments\\n"""	43:0:1371:1427	2008862	6	True				
ANR	2008882	Statement	""" --no-pers-change   [Linux Only] Don't change the personality of the process\\n"""	44:0:1429:1508	2008862	7	True				
ANR	2008883	Statement	)	46:1:1512:1512	2008862	8	True				
ANR	2008884	ExpressionStatement		46:2:1513:1513	2008862	9	True				
ANR	2008885	ExpressionStatement	exit ( EXIT_FAILURE )	48:1:1517:1535	2008862	10	True				
ANR	2008886	CallExpression	exit ( EXIT_FAILURE )		2008862	0					
ANR	2008887	Callee	exit		2008862	0					
ANR	2008888	Identifier	exit		2008862	0					
ANR	2008889	ArgumentList	EXIT_FAILURE		2008862	1					
ANR	2008890	Argument	EXIT_FAILURE		2008862	0					
ANR	2008891	Identifier	EXIT_FAILURE		2008862	0					
ANR	2008892	ReturnType	void		2008862	1					
ANR	2008893	Identifier	usage		2008862	2					
ANR	2008894	ParameterList	char * argv0		2008862	3					
ANR	2008895	Parameter	char * argv0	36:11:1220:1230	2008862	0	True				
ANR	2008896	ParameterType	char *		2008862	0					
ANR	2008897	Identifier	argv0		2008862	1					
ANR	2008898	CFGEntryNode	ENTRY		2008862		True				
ANR	2008899	CFGExitNode	EXIT		2008862		True				
ANR	2008900	Symbol	EXIT_FAILURE		2008862						
ANR	2008901	Symbol	D_ALWAYS		2008862						
ANR	2008902	Symbol	argv0		2008862						
ANR	2008903	Function	matches	52:0:1590:1703							
ANR	2008904	FunctionDef	"matches (char * arg , char * thing)"		2008903	0					
ANR	2008905	CompoundStatement		53:0:1626:1703	2008903	0					
ANR	2008906	IfStatement	"if ( strncmp ( arg , thing , strlen ( thing ) ) == 0 )"		2008903	0					
ANR	2008907	Condition	"strncmp ( arg , thing , strlen ( thing ) ) == 0"	54:5:1633:1671	2008903	0	True				
ANR	2008908	EqualityExpression	"strncmp ( arg , thing , strlen ( thing ) ) == 0"		2008903	0		==			
ANR	2008909	CallExpression	"strncmp ( arg , thing , strlen ( thing ) )"		2008903	0					
ANR	2008910	Callee	strncmp		2008903	0					
ANR	2008911	Identifier	strncmp		2008903	0					
ANR	2008912	ArgumentList	arg		2008903	1					
ANR	2008913	Argument	arg		2008903	0					
ANR	2008914	Identifier	arg		2008903	0					
ANR	2008915	Argument	thing		2008903	1					
ANR	2008916	Identifier	thing		2008903	0					
ANR	2008917	Argument	strlen ( thing )		2008903	2					
ANR	2008918	CallExpression	strlen ( thing )		2008903	0					
ANR	2008919	Callee	strlen		2008903	0					
ANR	2008920	Identifier	strlen		2008903	0					
ANR	2008921	ArgumentList	thing		2008903	1					
ANR	2008922	Argument	thing		2008903	0					
ANR	2008923	Identifier	thing		2008903	0					
ANR	2008924	PrimaryExpression	0		2008903	1					
ANR	2008925	CompoundStatement		2:46:47:47	2008903	1					
ANR	2008926	ReturnStatement	return 1 ;	55:2:1678:1686	2008903	0	True				
ANR	2008927	PrimaryExpression	1		2008903	0					
ANR	2008928	ReturnStatement	return 0 ;	58:1:1693:1701	2008903	1	True				
ANR	2008929	PrimaryExpression	0		2008903	0					
ANR	2008930	ReturnType	int		2008903	1					
ANR	2008931	Identifier	matches		2008903	2					
ANR	2008932	ParameterList	"char * arg , char * thing"		2008903	3					
ANR	2008933	Parameter	char * arg	52:12:1602:1610	2008903	0	True				
ANR	2008934	ParameterType	char *		2008903	0					
ANR	2008935	Identifier	arg		2008903	1					
ANR	2008936	Parameter	char * thing	52:23:1613:1623	2008903	1	True				
ANR	2008937	ParameterType	char *		2008903	0					
ANR	2008938	Identifier	thing		2008903	1					
ANR	2008939	CFGEntryNode	ENTRY		2008903		True				
ANR	2008940	CFGExitNode	EXIT		2008903		True				
ANR	2008941	Symbol	strncmp		2008903						
ANR	2008942	Symbol	strlen		2008903						
ANR	2008943	Symbol	arg		2008903						
ANR	2008944	Symbol	thing		2008903						
ANR	2008945	Function	main	61:0:1706:3518							
ANR	2008946	FunctionDef	"main (int argc , char * argv [ ] , char * envp [ ])"		2008945	0					
ANR	2008947	CompoundStatement		62:0:1753:3518	2008945	0					
ANR	2008948	IdentifierDeclStatement	unsigned long long vdso_idx ;	63:1:1756:1783	2008945	0	True				
ANR	2008949	IdentifierDecl	vdso_idx		2008945	0					
ANR	2008950	IdentifierDeclType	unsigned long long		2008945	0					
ANR	2008951	Identifier	vdso_idx		2008945	1					
ANR	2008952	IdentifierDeclStatement	int i ;	64:1:1786:1791	2008945	1	True				
ANR	2008953	IdentifierDecl	i		2008945	0					
ANR	2008954	IdentifierDeclType	int		2008945	0					
ANR	2008955	Identifier	i		2008945	1					
ANR	2008956	IdentifierDeclStatement	int pers_change = 1 ;	65:1:1794:1813	2008945	2	True				
ANR	2008957	IdentifierDecl	pers_change = 1		2008945	0					
ANR	2008958	IdentifierDeclType	int		2008945	0					
ANR	2008959	Identifier	pers_change		2008945	1					
ANR	2008960	AssignmentExpression	pers_change = 1		2008945	2		=			
ANR	2008961	Identifier	pers_change		2008945	0					
ANR	2008962	PrimaryExpression	1		2008945	1					
ANR	2008963	IdentifierDeclStatement	char * * new_args ;	66:1:1833:1848	2008945	3	True				
ANR	2008964	IdentifierDecl	* * new_args		2008945	0					
ANR	2008965	IdentifierDeclType	char * *		2008945	0					
ANR	2008966	Identifier	new_args		2008945	1					
ANR	2008967	IdentifierDeclStatement	char my_exec [ PATH_MAX ] ;	67:1:1851:1873	2008945	4	True				
ANR	2008968	IdentifierDecl	my_exec [ PATH_MAX ]		2008945	0					
ANR	2008969	IdentifierDeclType	char [ PATH_MAX ]		2008945	0					
ANR	2008970	Identifier	my_exec		2008945	1					
ANR	2008971	Identifier	PATH_MAX		2008945	2					
ANR	2008972	ExpressionStatement	Termlog = 1	69:1:1877:1888	2008945	5	True				
ANR	2008973	AssignmentExpression	Termlog = 1		2008945	0		=			
ANR	2008974	Identifier	Termlog		2008945	0					
ANR	2008975	PrimaryExpression	1		2008945	1					
ANR	2008976	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	70:1:1891:1936	2008945	6	True				
ANR	2008977	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		2008945	0					
ANR	2008978	Callee	dprintf_config		2008945	0					
ANR	2008979	Identifier	dprintf_config		2008945	0					
ANR	2008980	ArgumentList	"""TOOL"""		2008945	1					
ANR	2008981	Argument	"""TOOL"""		2008945	0					
ANR	2008982	PrimaryExpression	"""TOOL"""		2008945	0					
ANR	2008983	Argument	get_param_functions ( )		2008945	1					
ANR	2008984	CallExpression	get_param_functions ( )		2008945	0					
ANR	2008985	Callee	get_param_functions		2008945	0					
ANR	2008986	Identifier	get_param_functions		2008945	0					
ANR	2008987	ArgumentList			2008945	1					
ANR	2008988	ExpressionStatement	"set_debug_flags ( ""D_ALWAYS"" )"	71:1:1939:1966	2008945	7	True				
ANR	2008989	CallExpression	"set_debug_flags ( ""D_ALWAYS"" )"		2008945	0					
ANR	2008990	Callee	set_debug_flags		2008945	0					
ANR	2008991	Identifier	set_debug_flags		2008945	0					
ANR	2008992	ArgumentList	"""D_ALWAYS"""		2008945	1					
ANR	2008993	Argument	"""D_ALWAYS"""		2008945	0					
ANR	2008994	PrimaryExpression	"""D_ALWAYS"""		2008945	0					
ANR	2008995	ExpressionStatement	"set_debug_flags ( ""D_NOHEADER"" )"	72:1:1969:1998	2008945	8	True				
ANR	2008996	CallExpression	"set_debug_flags ( ""D_NOHEADER"" )"		2008945	0					
ANR	2008997	Callee	set_debug_flags		2008945	0					
ANR	2008998	Identifier	set_debug_flags		2008945	0					
ANR	2008999	ArgumentList	"""D_NOHEADER"""		2008945	1					
ANR	2009000	Argument	"""D_NOHEADER"""		2008945	0					
ANR	2009001	PrimaryExpression	"""D_NOHEADER"""		2008945	0					
ANR	2009002	IfStatement	if ( argc < 2 )		2008945	9					
ANR	2009003	Condition	argc < 2	75:5:2047:2054	2008945	0	True				
ANR	2009004	RelationalExpression	argc < 2		2008945	0		<			
ANR	2009005	Identifier	argc		2008945	0					
ANR	2009006	PrimaryExpression	2		2008945	1					
ANR	2009007	CompoundStatement		14:15:303:303	2008945	1					
ANR	2009008	ExpressionStatement	usage ( argv [ 0 ] )	76:2:2061:2075	2008945	0	True				
ANR	2009009	CallExpression	usage ( argv [ 0 ] )		2008945	0					
ANR	2009010	Callee	usage		2008945	0					
ANR	2009011	Identifier	usage		2008945	0					
ANR	2009012	ArgumentList	argv [ 0 ]		2008945	1					
ANR	2009013	Argument	argv [ 0 ]		2008945	0					
ANR	2009014	ArrayIndexing	argv [ 0 ]		2008945	0					
ANR	2009015	Identifier	argv		2008945	0					
ANR	2009016	PrimaryExpression	0		2008945	1					
ANR	2009017	ForStatement	for ( i = 1 ; i < argc ; i ++ )		2008945	10					
ANR	2009018	ForInit	i = 1 ;	83:6:2211:2216	2008945	0	True				
ANR	2009019	AssignmentExpression	i = 1		2008945	0		=			
ANR	2009020	Identifier	i		2008945	0					
ANR	2009021	PrimaryExpression	1		2008945	1					
ANR	2009022	Condition	i < argc	83:13:2218:2225	2008945	1	True				
ANR	2009023	RelationalExpression	i < argc		2008945	0		<			
ANR	2009024	Identifier	i		2008945	0					
ANR	2009025	Identifier	argc		2008945	1					
ANR	2009026	PostIncDecOperationExpression	i ++	83:23:2228:2230	2008945	2	True				
ANR	2009027	Identifier	i		2008945	0					
ANR	2009028	IncDec	++		2008945	1					
ANR	2009029	CompoundStatement		22:28:479:479	2008945	3					
ANR	2009030	IfStatement	"if ( matches ( argv [ i ] , ""--no-pers-change"" ) )"		2008945	0					
ANR	2009031	Condition	"matches ( argv [ i ] , ""--no-pers-change"" )"	84:6:2241:2276	2008945	0	True				
ANR	2009032	CallExpression	"matches ( argv [ i ] , ""--no-pers-change"" )"		2008945	0					
ANR	2009033	Callee	matches		2008945	0					
ANR	2009034	Identifier	matches		2008945	0					
ANR	2009035	ArgumentList	argv [ i ]		2008945	1					
ANR	2009036	Argument	argv [ i ]		2008945	0					
ANR	2009037	ArrayIndexing	argv [ i ]		2008945	0					
ANR	2009038	Identifier	argv		2008945	0					
ANR	2009039	Identifier	i		2008945	1					
ANR	2009040	Argument	"""--no-pers-change"""		2008945	1					
ANR	2009041	PrimaryExpression	"""--no-pers-change"""		2008945	0					
ANR	2009042	CompoundStatement		23:44:525:525	2008945	1					
ANR	2009043	ExpressionStatement	pers_change = 0	85:3:2284:2299	2008945	0	True				
ANR	2009044	AssignmentExpression	pers_change = 0		2008945	0		=			
ANR	2009045	Identifier	pers_change		2008945	0					
ANR	2009046	PrimaryExpression	0		2008945	1					
ANR	2009047	BreakStatement	break ;	86:3:2304:2309	2008945	1	True				
ANR	2009048	IfStatement	if ( pers_change )		2008945	11					
ANR	2009049	Condition	pers_change	90:5:2324:2334	2008945	0	True				
ANR	2009050	Identifier	pers_change		2008945	0					
ANR	2009051	CompoundStatement		29:18:583:583	2008945	1					
ANR	2009052	ExpressionStatement	new_args = ( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )	92:2:2396:2449	2008945	0	True				
ANR	2009053	AssignmentExpression	new_args = ( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )		2008945	0		=			
ANR	2009054	Identifier	new_args		2008945	0					
ANR	2009055	CastExpression	( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )		2008945	1					
ANR	2009056	CastTarget	char * *		2008945	0					
ANR	2009057	CallExpression	malloc ( sizeof ( char * ) * ( argc + 2 ) )		2008945	1					
ANR	2009058	Callee	malloc		2008945	0					
ANR	2009059	Identifier	malloc		2008945	0					
ANR	2009060	ArgumentList	sizeof ( char * ) * ( argc + 2 )		2008945	1					
ANR	2009061	Argument	sizeof ( char * ) * ( argc + 2 )		2008945	0					
ANR	2009062	MultiplicativeExpression	sizeof ( char * ) * ( argc + 2 )		2008945	0		*			
ANR	2009063	SizeofExpression	sizeof ( char * )		2008945	0					
ANR	2009064	Sizeof	sizeof		2008945	0					
ANR	2009065	SizeofOperand	char *		2008945	1					
ANR	2009066	AdditiveExpression	argc + 2		2008945	1		+			
ANR	2009067	Identifier	argc		2008945	0					
ANR	2009068	PrimaryExpression	2		2008945	1					
ANR	2009069	IfStatement	if ( new_args == NULL )		2008945	1					
ANR	2009070	Condition	new_args == NULL	93:6:2457:2472	2008945	0	True				
ANR	2009071	EqualityExpression	new_args == NULL		2008945	0		==			
ANR	2009072	Identifier	new_args		2008945	0					
ANR	2009073	Identifier	NULL		2008945	1					
ANR	2009074	CompoundStatement		32:24:721:721	2008945	1					
ANR	2009075	ExpressionStatement	"dprintf ( D_ALWAYS , ""Out of memory! Exiting.\\n"" )"	94:3:2480:2526	2008945	0	True				
ANR	2009076	CallExpression	"dprintf ( D_ALWAYS , ""Out of memory! Exiting.\\n"" )"		2008945	0					
ANR	2009077	Callee	dprintf		2008945	0					
ANR	2009078	Identifier	dprintf		2008945	0					
ANR	2009079	ArgumentList	D_ALWAYS		2008945	1					
ANR	2009080	Argument	D_ALWAYS		2008945	0					
ANR	2009081	Identifier	D_ALWAYS		2008945	0					
ANR	2009082	Argument	"""Out of memory! Exiting.\\n"""		2008945	1					
ANR	2009083	PrimaryExpression	"""Out of memory! Exiting.\\n"""		2008945	0					
ANR	2009084	ExpressionStatement	exit ( EXIT_FAILURE )	95:3:2531:2549	2008945	1	True				
ANR	2009085	CallExpression	exit ( EXIT_FAILURE )		2008945	0					
ANR	2009086	Callee	exit		2008945	0					
ANR	2009087	Identifier	exit		2008945	0					
ANR	2009088	ArgumentList	EXIT_FAILURE		2008945	1					
ANR	2009089	Argument	EXIT_FAILURE		2008945	0					
ANR	2009090	Identifier	EXIT_FAILURE		2008945	0					
ANR	2009091	ExpressionStatement	new_args [ 0 ] = strdup ( argv [ 0 ] )	99:2:2628:2657	2008945	2	True				
ANR	2009092	AssignmentExpression	new_args [ 0 ] = strdup ( argv [ 0 ] )		2008945	0		=			
ANR	2009093	ArrayIndexing	new_args [ 0 ]		2008945	0					
ANR	2009094	Identifier	new_args		2008945	0					
ANR	2009095	PrimaryExpression	0		2008945	1					
ANR	2009096	CallExpression	strdup ( argv [ 0 ] )		2008945	1					
ANR	2009097	Callee	strdup		2008945	0					
ANR	2009098	Identifier	strdup		2008945	0					
ANR	2009099	ArgumentList	argv [ 0 ]		2008945	1					
ANR	2009100	Argument	argv [ 0 ]		2008945	0					
ANR	2009101	ArrayIndexing	argv [ 0 ]		2008945	0					
ANR	2009102	Identifier	argv		2008945	0					
ANR	2009103	PrimaryExpression	0		2008945	1					
ANR	2009104	ExpressionStatement	"new_args [ 1 ] = strdup ( ""--no-pers-change"" )"	100:2:2661:2701	2008945	3	True				
ANR	2009105	AssignmentExpression	"new_args [ 1 ] = strdup ( ""--no-pers-change"" )"		2008945	0		=			
ANR	2009106	ArrayIndexing	new_args [ 1 ]		2008945	0					
ANR	2009107	Identifier	new_args		2008945	0					
ANR	2009108	PrimaryExpression	1		2008945	1					
ANR	2009109	CallExpression	"strdup ( ""--no-pers-change"" )"		2008945	1					
ANR	2009110	Callee	strdup		2008945	0					
ANR	2009111	Identifier	strdup		2008945	0					
ANR	2009112	ArgumentList	"""--no-pers-change"""		2008945	1					
ANR	2009113	Argument	"""--no-pers-change"""		2008945	0					
ANR	2009114	PrimaryExpression	"""--no-pers-change"""		2008945	0					
ANR	2009115	ForStatement	for ( i = 1 ; i < argc ; i ++ )		2008945	4					
ANR	2009116	ForInit	i = 1 ;	101:7:2710:2715	2008945	0	True				
ANR	2009117	AssignmentExpression	i = 1		2008945	0		=			
ANR	2009118	Identifier	i		2008945	0					
ANR	2009119	PrimaryExpression	1		2008945	1					
ANR	2009120	Condition	i < argc	101:14:2717:2724	2008945	1	True				
ANR	2009121	RelationalExpression	i < argc		2008945	0		<			
ANR	2009122	Identifier	i		2008945	0					
ANR	2009123	Identifier	argc		2008945	1					
ANR	2009124	PostIncDecOperationExpression	i ++	101:24:2727:2729	2008945	2	True				
ANR	2009125	Identifier	i		2008945	0					
ANR	2009126	IncDec	++		2008945	1					
ANR	2009127	CompoundStatement		40:29:978:978	2008945	3					
ANR	2009128	ExpressionStatement	new_args [ 1 + i ] = strdup ( argv [ i ] )	102:3:2737:2768	2008945	0	True				
ANR	2009129	AssignmentExpression	new_args [ 1 + i ] = strdup ( argv [ i ] )		2008945	0		=			
ANR	2009130	ArrayIndexing	new_args [ 1 + i ]		2008945	0					
ANR	2009131	Identifier	new_args		2008945	0					
ANR	2009132	AdditiveExpression	1 + i		2008945	1		+			
ANR	2009133	PrimaryExpression	1		2008945	0					
ANR	2009134	Identifier	i		2008945	1					
ANR	2009135	CallExpression	strdup ( argv [ i ] )		2008945	1					
ANR	2009136	Callee	strdup		2008945	0					
ANR	2009137	Identifier	strdup		2008945	0					
ANR	2009138	ArgumentList	argv [ i ]		2008945	1					
ANR	2009139	Argument	argv [ i ]		2008945	0					
ANR	2009140	ArrayIndexing	argv [ i ]		2008945	0					
ANR	2009141	Identifier	argv		2008945	0					
ANR	2009142	Identifier	i		2008945	1					
ANR	2009143	ExpressionStatement	new_args [ 1 + i ] = NULL	104:2:2776:2796	2008945	5	True				
ANR	2009144	AssignmentExpression	new_args [ 1 + i ] = NULL		2008945	0		=			
ANR	2009145	ArrayIndexing	new_args [ 1 + i ]		2008945	0					
ANR	2009146	Identifier	new_args		2008945	0					
ANR	2009147	AdditiveExpression	1 + i		2008945	1		+			
ANR	2009148	PrimaryExpression	1		2008945	0					
ANR	2009149	Identifier	i		2008945	1					
ANR	2009150	Identifier	NULL		2008945	1					
ANR	2009151	ExpressionStatement	patch_personality ( )	106:2:2801:2820	2008945	6	True				
ANR	2009152	CallExpression	patch_personality ( )		2008945	0					
ANR	2009153	Callee	patch_personality		2008945	0					
ANR	2009154	Identifier	patch_personality		2008945	0					
ANR	2009155	ArgumentList			2008945	1					
ANR	2009156	ExpressionStatement	"execve ( ""/proc/self/exe"" , new_args , envp )"	108:2:2825:2865	2008945	7	True				
ANR	2009157	CallExpression	"execve ( ""/proc/self/exe"" , new_args , envp )"		2008945	0					
ANR	2009158	Callee	execve		2008945	0					
ANR	2009159	Identifier	execve		2008945	0					
ANR	2009160	ArgumentList	"""/proc/self/exe"""		2008945	1					
ANR	2009161	Argument	"""/proc/self/exe"""		2008945	0					
ANR	2009162	PrimaryExpression	"""/proc/self/exe"""		2008945	0					
ANR	2009163	Argument	new_args		2008945	1					
ANR	2009164	Identifier	new_args		2008945	0					
ANR	2009165	Argument	envp		2008945	2					
ANR	2009166	Identifier	envp		2008945	0					
ANR	2009167	ExpressionStatement	"dprintf ( D_ALWAYS , ""execve failed: errno %d(%s)\\n"" , errno , strerror ( errno ) )"	110:2:2870:2947	2008945	8	True				
ANR	2009168	CallExpression	"dprintf ( D_ALWAYS , ""execve failed: errno %d(%s)\\n"" , errno , strerror ( errno ) )"		2008945	0					
ANR	2009169	Callee	dprintf		2008945	0					
ANR	2009170	Identifier	dprintf		2008945	0					
ANR	2009171	ArgumentList	D_ALWAYS		2008945	1					
ANR	2009172	Argument	D_ALWAYS		2008945	0					
ANR	2009173	Identifier	D_ALWAYS		2008945	0					
ANR	2009174	Argument	"""execve failed: errno %d(%s)\\n"""		2008945	1					
ANR	2009175	PrimaryExpression	"""execve failed: errno %d(%s)\\n"""		2008945	0					
ANR	2009176	Argument	errno		2008945	2					
ANR	2009177	Identifier	errno		2008945	0					
ANR	2009178	Argument	strerror ( errno )		2008945	3					
ANR	2009179	CallExpression	strerror ( errno )		2008945	0					
ANR	2009180	Callee	strerror		2008945	0					
ANR	2009181	Identifier	strerror		2008945	0					
ANR	2009182	ArgumentList	errno		2008945	1					
ANR	2009183	Argument	errno		2008945	0					
ANR	2009184	Identifier	errno		2008945	0					
ANR	2009185	ExpressionStatement	exit ( EXIT_FAILURE )	113:2:2952:2970	2008945	9	True				
ANR	2009186	CallExpression	exit ( EXIT_FAILURE )		2008945	0					
ANR	2009187	Callee	exit		2008945	0					
ANR	2009188	Identifier	exit		2008945	0					
ANR	2009189	ArgumentList	EXIT_FAILURE		2008945	1					
ANR	2009190	Argument	EXIT_FAILURE		2008945	0					
ANR	2009191	Identifier	EXIT_FAILURE		2008945	0					
ANR	2009192	ExpressionStatement	"segment_table_init ( g_st , getpid ( ) )"	117:1:2984:3018	2008945	12	True				
ANR	2009193	CallExpression	"segment_table_init ( g_st , getpid ( ) )"		2008945	0					
ANR	2009194	Callee	segment_table_init		2008945	0					
ANR	2009195	Identifier	segment_table_init		2008945	0					
ANR	2009196	ArgumentList	g_st		2008945	1					
ANR	2009197	Argument	g_st		2008945	0					
ANR	2009198	Identifier	g_st		2008945	0					
ANR	2009199	Argument	getpid ( )		2008945	1					
ANR	2009200	CallExpression	getpid ( )		2008945	0					
ANR	2009201	Callee	getpid		2008945	0					
ANR	2009202	Identifier	getpid		2008945	0					
ANR	2009203	ArgumentList			2008945	1					
ANR	2009204	ForStatement	for ( i = 1 ; i < argc ; i ++ )		2008945	13					
ANR	2009205	ForInit	i = 1 ;	119:6:3027:3032	2008945	0	True				
ANR	2009206	AssignmentExpression	i = 1		2008945	0		=			
ANR	2009207	Identifier	i		2008945	0					
ANR	2009208	PrimaryExpression	1		2008945	1					
ANR	2009209	Condition	i < argc	119:13:3034:3041	2008945	1	True				
ANR	2009210	RelationalExpression	i < argc		2008945	0		<			
ANR	2009211	Identifier	i		2008945	0					
ANR	2009212	Identifier	argc		2008945	1					
ANR	2009213	PostIncDecOperationExpression	i ++	119:23:3044:3046	2008945	2	True				
ANR	2009214	Identifier	i		2008945	0					
ANR	2009215	IncDec	++		2008945	1					
ANR	2009216	CompoundStatement		58:28:1295:1295	2008945	3					
ANR	2009217	IfStatement	"if ( matches ( argv [ i ] , ""--vdso-addr"" ) )"		2008945	0					
ANR	2009218	Condition	"matches ( argv [ i ] , ""--vdso-addr"" )"	120:6:3057:3087	2008945	0	True				
ANR	2009219	CallExpression	"matches ( argv [ i ] , ""--vdso-addr"" )"		2008945	0					
ANR	2009220	Callee	matches		2008945	0					
ANR	2009221	Identifier	matches		2008945	0					
ANR	2009222	ArgumentList	argv [ i ]		2008945	1					
ANR	2009223	Argument	argv [ i ]		2008945	0					
ANR	2009224	ArrayIndexing	argv [ i ]		2008945	0					
ANR	2009225	Identifier	argv		2008945	0					
ANR	2009226	Identifier	i		2008945	1					
ANR	2009227	Argument	"""--vdso-addr"""		2008945	1					
ANR	2009228	PrimaryExpression	"""--vdso-addr"""		2008945	0					
ANR	2009229	CompoundStatement		59:39:1336:1336	2008945	1					
ANR	2009230	ExpressionStatement	vdso_idx = segment_table_find_vdso ( g_st )	121:3:3095:3135	2008945	0	True				
ANR	2009231	AssignmentExpression	vdso_idx = segment_table_find_vdso ( g_st )		2008945	0		=			
ANR	2009232	Identifier	vdso_idx		2008945	0					
ANR	2009233	CallExpression	segment_table_find_vdso ( g_st )		2008945	1					
ANR	2009234	Callee	segment_table_find_vdso		2008945	0					
ANR	2009235	Identifier	segment_table_find_vdso		2008945	0					
ANR	2009236	ArgumentList	g_st		2008945	1					
ANR	2009237	Argument	g_st		2008945	0					
ANR	2009238	Identifier	g_st		2008945	0					
ANR	2009239	IfStatement	if ( vdso_idx == NOT_FOUND )		2008945	1					
ANR	2009240	Condition	vdso_idx == NOT_FOUND	123:7:3145:3165	2008945	0	True				
ANR	2009241	EqualityExpression	vdso_idx == NOT_FOUND		2008945	0		==			
ANR	2009242	Identifier	vdso_idx		2008945	0					
ANR	2009243	Identifier	NOT_FOUND		2008945	1					
ANR	2009244	CompoundStatement		62:30:1414:1414	2008945	1					
ANR	2009245	ExpressionStatement	"dprintf ( D_ALWAYS , ""VDSO: N/A\\n"" )"	124:4:3174:3206	2008945	0	True				
ANR	2009246	CallExpression	"dprintf ( D_ALWAYS , ""VDSO: N/A\\n"" )"		2008945	0					
ANR	2009247	Callee	dprintf		2008945	0					
ANR	2009248	Identifier	dprintf		2008945	0					
ANR	2009249	ArgumentList	D_ALWAYS		2008945	1					
ANR	2009250	Argument	D_ALWAYS		2008945	0					
ANR	2009251	Identifier	D_ALWAYS		2008945	0					
ANR	2009252	Argument	"""VDSO: N/A\\n"""		2008945	1					
ANR	2009253	PrimaryExpression	"""VDSO: N/A\\n"""		2008945	0					
ANR	2009254	ReturnStatement	return EXIT_FAILURE ;	125:4:3212:3231	2008945	1	True				
ANR	2009255	Identifier	EXIT_FAILURE		2008945	0					
ANR	2009256	ExpressionStatement	"dprintf ( D_ALWAYS , ""VDSO: 0x%llx\\n"" , g_st -> segs [ vdso_idx ] . mem_start )"	127:3:3241:3308	2008945	2	True				
ANR	2009257	CallExpression	"dprintf ( D_ALWAYS , ""VDSO: 0x%llx\\n"" , g_st -> segs [ vdso_idx ] . mem_start )"		2008945	0					
ANR	2009258	Callee	dprintf		2008945	0					
ANR	2009259	Identifier	dprintf		2008945	0					
ANR	2009260	ArgumentList	D_ALWAYS		2008945	1					
ANR	2009261	Argument	D_ALWAYS		2008945	0					
ANR	2009262	Identifier	D_ALWAYS		2008945	0					
ANR	2009263	Argument	"""VDSO: 0x%llx\\n"""		2008945	1					
ANR	2009264	PrimaryExpression	"""VDSO: 0x%llx\\n"""		2008945	0					
ANR	2009265	Argument	g_st -> segs [ vdso_idx ] . mem_start		2008945	2					
ANR	2009266	MemberAccess	g_st -> segs [ vdso_idx ] . mem_start		2008945	0					
ANR	2009267	ArrayIndexing	g_st -> segs [ vdso_idx ]		2008945	0					
ANR	2009268	PtrMemberAccess	g_st -> segs		2008945	0					
ANR	2009269	Identifier	g_st		2008945	0					
ANR	2009270	Identifier	segs		2008945	1					
ANR	2009271	Identifier	vdso_idx		2008945	1					
ANR	2009272	Identifier	mem_start		2008945	1					
ANR	2009273	ElseStatement	else		2008945	0					
ANR	2009274	IfStatement	"if ( matches ( argv [ i ] , ""--segments"" ) )"		2008945	0					
ANR	2009275	Condition	"matches ( argv [ i ] , ""--segments"" )"	129:13:3324:3353	2008945	0	True				
ANR	2009276	CallExpression	"matches ( argv [ i ] , ""--segments"" )"		2008945	0					
ANR	2009277	Callee	matches		2008945	0					
ANR	2009278	Identifier	matches		2008945	0					
ANR	2009279	ArgumentList	argv [ i ]		2008945	1					
ANR	2009280	Argument	argv [ i ]		2008945	0					
ANR	2009281	ArrayIndexing	argv [ i ]		2008945	0					
ANR	2009282	Identifier	argv		2008945	0					
ANR	2009283	Identifier	i		2008945	1					
ANR	2009284	Argument	"""--segments"""		2008945	1					
ANR	2009285	PrimaryExpression	"""--segments"""		2008945	0					
ANR	2009286	CompoundStatement		68:45:1602:1602	2008945	1					
ANR	2009287	ExpressionStatement	segment_table_stdout ( g_st )	130:3:3361:3387	2008945	0	True				
ANR	2009288	CallExpression	segment_table_stdout ( g_st )		2008945	0					
ANR	2009289	Callee	segment_table_stdout		2008945	0					
ANR	2009290	Identifier	segment_table_stdout		2008945	0					
ANR	2009291	ArgumentList	g_st		2008945	1					
ANR	2009292	Argument	g_st		2008945	0					
ANR	2009293	Identifier	g_st		2008945	0					
ANR	2009294	ElseStatement	else		2008945	0					
ANR	2009295	IfStatement	"if ( matches ( argv [ i ] , ""--no-pers-change"" ) )"		2008945	0					
ANR	2009296	Condition	"matches ( argv [ i ] , ""--no-pers-change"" )"	131:13:3402:3437	2008945	0	True				
ANR	2009297	CallExpression	"matches ( argv [ i ] , ""--no-pers-change"" )"		2008945	0					
ANR	2009298	Callee	matches		2008945	0					
ANR	2009299	Identifier	matches		2008945	0					
ANR	2009300	ArgumentList	argv [ i ]		2008945	1					
ANR	2009301	Argument	argv [ i ]		2008945	0					
ANR	2009302	ArrayIndexing	argv [ i ]		2008945	0					
ANR	2009303	Identifier	argv		2008945	0					
ANR	2009304	Identifier	i		2008945	1					
ANR	2009305	Argument	"""--no-pers-change"""		2008945	1					
ANR	2009306	PrimaryExpression	"""--no-pers-change"""		2008945	0					
ANR	2009307	CompoundStatement		70:51:1686:1686	2008945	1					
ANR	2009308	ElseStatement	else		2008945	0					
ANR	2009309	CompoundStatement		72:9:1713:1713	2008945	0					
ANR	2009310	ExpressionStatement	usage ( argv [ 0 ] )	134:3:3472:3486	2008945	0	True				
ANR	2009311	CallExpression	usage ( argv [ 0 ] )		2008945	0					
ANR	2009312	Callee	usage		2008945	0					
ANR	2009313	Identifier	usage		2008945	0					
ANR	2009314	ArgumentList	argv [ 0 ]		2008945	1					
ANR	2009315	Argument	argv [ 0 ]		2008945	0					
ANR	2009316	ArrayIndexing	argv [ 0 ]		2008945	0					
ANR	2009317	Identifier	argv		2008945	0					
ANR	2009318	PrimaryExpression	0		2008945	1					
ANR	2009319	ReturnStatement	return EXIT_SUCCESS ;	138:1:3497:3516	2008945	14	True				
ANR	2009320	Identifier	EXIT_SUCCESS		2008945	0					
ANR	2009321	ReturnType	int		2008945	1					
ANR	2009322	Identifier	main		2008945	2					
ANR	2009323	ParameterList	"int argc , char * argv [ ] , char * envp [ ]"		2008945	3					
ANR	2009324	Parameter	int argc	61:9:1715:1722	2008945	0	True				
ANR	2009325	ParameterType	int		2008945	0					
ANR	2009326	Identifier	argc		2008945	1					
ANR	2009327	Parameter	char * argv [ ]	61:19:1725:1736	2008945	1	True				
ANR	2009328	ParameterType	char * [ ]		2008945	0					
ANR	2009329	Identifier	argv		2008945	1					
ANR	2009330	Parameter	char * envp [ ]	61:33:1739:1750	2008945	2	True				
ANR	2009331	ParameterType	char * [ ]		2008945	0					
ANR	2009332	Identifier	envp		2008945	1					
ANR	2009333	CFGEntryNode	ENTRY		2008945		True				
ANR	2009334	CFGExitNode	EXIT		2008945		True				
ANR	2009335	Symbol	vdso_idx		2008945						
ANR	2009336	Symbol	g_st		2008945						
ANR	2009337	Symbol	* argv		2008945						
ANR	2009338	Symbol	envp		2008945						
ANR	2009339	Symbol	argv		2008945						
ANR	2009340	Symbol	new_args		2008945						
ANR	2009341	Symbol	g_st -> segs [ vdso_idx ] . mem_start		2008945						
ANR	2009342	Symbol	g_st -> segs		2008945						
ANR	2009343	Symbol	argc		2008945						
ANR	2009344	Symbol	malloc		2008945						
ANR	2009345	Symbol	errno		2008945						
ANR	2009346	Symbol	NULL		2008945						
ANR	2009347	Symbol	* g_st -> segs		2008945						
ANR	2009348	Symbol	* vdso_idx		2008945						
ANR	2009349	Symbol	Termlog		2008945						
ANR	2009350	Symbol	get_param_functions		2008945						
ANR	2009351	Symbol	my_exec		2008945						
ANR	2009352	Symbol	D_ALWAYS		2008945						
ANR	2009353	Symbol	NOT_FOUND		2008945						
ANR	2009354	Symbol	i		2008945						
ANR	2009355	Symbol	matches		2008945						
ANR	2009356	Symbol	strerror		2008945						
ANR	2009357	Symbol	* g_st		2008945						
ANR	2009358	Symbol	* * g_st		2008945						
ANR	2009359	Symbol	* i		2008945						
ANR	2009360	Symbol	EXIT_FAILURE		2008945						
ANR	2009361	Symbol	pers_change		2008945						
ANR	2009362	Symbol	EXIT_SUCCESS		2008945						
ANR	2009363	Symbol	* new_args		2008945						
ANR	2009364	Symbol	strdup		2008945						
ANR	2009365	Symbol	getpid		2008945						
ANR	2009366	Symbol	segment_table_find_vdso		2008945						
