command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	14387	File	data/converged/CVE-2011-4930_htcondor/AviaryCommon_ArchType.cpp								
ANR	14388	Function	AviaryCommon :: ArchType :: ArchType	23:11:577:997							
ANR	14389	FunctionDef	AviaryCommon :: ArchType :: ArchType ()		14388	0					
ANR	14390	CompoundStatement		24:8:620:997	14388	0					
ANR	14391	ExpressionStatement	qname = NULL	27:12:644:656	14388	0	True				
ANR	14392	AssignmentExpression	qname = NULL		14388	0		=			
ANR	14393	Identifier	qname		14388	0					
ANR	14394	Identifier	NULL		14388	1					
ANR	14395	ExpressionStatement	property_ArchType	29:20:687:704	14388	1	True				
ANR	14396	Identifier	property_ArchType		14388	0					
ANR	14397	ExpressionStatement	isValidArchType = false	31:12:735:759	14388	2	True				
ANR	14398	AssignmentExpression	isValidArchType = false		14388	0		=			
ANR	14399	Identifier	isValidArchType		14388	0					
ANR	14400	Identifier	false		14388	1					
ANR	14401	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"	33:18:788:970	14388	3	True				
ANR	14402	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		14388	0		=			
ANR	14403	Identifier	qname		14388	0					
ANR	14404	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		14388	1					
ANR	14405	Callee	axutil_qname_create		14388	0					
ANR	14406	Identifier	axutil_qname_create		14388	0					
ANR	14407	ArgumentList	Environment :: getEnv ( )		14388	1					
ANR	14408	Argument	Environment :: getEnv ( )		14388	0					
ANR	14409	CallExpression	Environment :: getEnv ( )		14388	0					
ANR	14410	Callee	Environment :: getEnv		14388	0					
ANR	14411	Identifier	Environment :: getEnv		14388	0					
ANR	14412	ArgumentList			14388	1					
ANR	14413	Argument	"""ArchType"""		14388	1					
ANR	14414	PrimaryExpression	"""ArchType"""		14388	0					
ANR	14415	Argument	"""http://common.aviary.grid.redhat.com"""		14388	2					
ANR	14416	PrimaryExpression	"""http://common.aviary.grid.redhat.com"""		14388	0					
ANR	14417	Argument	NULL		14388	3					
ANR	14418	Identifier	NULL		14388	0					
ANR	14419	Identifier	AviaryCommon :: ArchType :: ArchType		14388	1					
ANR	14420	ParameterList			14388	2					
ANR	14421	CFGEntryNode	ENTRY		14388		True				
ANR	14422	CFGExitNode	EXIT		14388		True				
ANR	14423	Symbol	Environment :: getEnv		14388						
ANR	14424	Symbol	NULL		14388						
ANR	14425	Symbol	qname		14388						
ANR	14426	Symbol	false		14388						
ANR	14427	Symbol	axutil_qname_create		14388						
ANR	14428	Symbol	isValidArchType		14388						
ANR	14429	Function	AviaryCommon :: ArchType :: ArchType	40:7:1007:1526							
ANR	14430	FunctionDef	AviaryCommon :: ArchType :: ArchType (std :: string arg_ArchType)		14429	0					
ANR	14431	CompoundStatement		41:8:1074:1526	14429	0					
ANR	14432	ExpressionStatement	qname = NULL	43:19:1109:1121	14429	0	True				
ANR	14433	AssignmentExpression	qname = NULL		14429	0		=			
ANR	14434	Identifier	qname		14429	0					
ANR	14435	Identifier	NULL		14429	1					
ANR	14436	ExpressionStatement	property_ArchType	45:17:1154:1171	14429	1	True				
ANR	14437	Identifier	property_ArchType		14429	0					
ANR	14438	ExpressionStatement	isValidArchType = true	47:12:1199:1222	14429	2	True				
ANR	14439	AssignmentExpression	isValidArchType = true		14429	0		=			
ANR	14440	Identifier	isValidArchType		14429	0					
ANR	14441	Identifier	true		14429	1					
ANR	14442	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"	49:17:1254:1433	14429	3	True				
ANR	14443	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		14429	0		=			
ANR	14444	Identifier	qname		14429	0					
ANR	14445	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""ArchType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		14429	1					
ANR	14446	Callee	axutil_qname_create		14429	0					
ANR	14447	Identifier	axutil_qname_create		14429	0					
ANR	14448	ArgumentList	Environment :: getEnv ( )		14429	1					
ANR	14449	Argument	Environment :: getEnv ( )		14429	0					
ANR	14450	CallExpression	Environment :: getEnv ( )		14429	0					
ANR	14451	Callee	Environment :: getEnv		14429	0					
ANR	14452	Identifier	Environment :: getEnv		14429	0					
ANR	14453	ArgumentList			14429	1					
ANR	14454	Argument	"""ArchType"""		14429	1					
ANR	14455	PrimaryExpression	"""ArchType"""		14429	0					
ANR	14456	Argument	"""http://common.aviary.grid.redhat.com"""		14429	2					
ANR	14457	PrimaryExpression	"""http://common.aviary.grid.redhat.com"""		14429	0					
ANR	14458	Argument	NULL		14429	3					
ANR	14459	Identifier	NULL		14429	0					
ANR	14460	ExpressionStatement	property_ArchType = arg_ArchType	54:20:1471:1503	14429	4	True				
ANR	14461	AssignmentExpression	property_ArchType = arg_ArchType		14429	0		=			
ANR	14462	Identifier	property_ArchType		14429	0					
ANR	14463	Identifier	arg_ArchType		14429	1					
ANR	14464	Identifier	AviaryCommon :: ArchType :: ArchType		14429	1					
ANR	14465	ParameterList	std :: string arg_ArchType		14429	2					
ANR	14466	Parameter	std :: string arg_ArchType	40:40:1040:1063	14429	0	True				
ANR	14467	ParameterType	std :: string		14429	0					
ANR	14468	Identifier	arg_ArchType		14429	1					
ANR	14469	CFGEntryNode	ENTRY		14429		True				
ANR	14470	CFGExitNode	EXIT		14429		True				
ANR	14471	Symbol	Environment :: getEnv		14429						
ANR	14472	Symbol	NULL		14429						
ANR	14473	Symbol	arg_ArchType		14429						
ANR	14474	Symbol	property_ArchType		14429						
ANR	14475	Symbol	qname		14429						
ANR	14476	Symbol	true		14429						
ANR	14477	Symbol	axutil_qname_create		14429						
ANR	14478	Symbol	isValidArchType		14429						
ANR	14479	Function	AviaryCommon :: ArchType :: ~ArchType	57:8:1536:1650							
ANR	14480	FunctionDef	AviaryCommon :: ArchType :: ~ArchType ()		14479	0					
ANR	14481	CompoundStatement		58:8:1580:1650	14479	0					
ANR	14482	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	59:12:1594:1640	14479	0	True				
ANR	14483	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		14479	0					
ANR	14484	Callee	axutil_qname_free		14479	0					
ANR	14485	Identifier	axutil_qname_free		14479	0					
ANR	14486	ArgumentList	qname		14479	1					
ANR	14487	Argument	qname		14479	0					
ANR	14488	Identifier	qname		14479	0					
ANR	14489	Argument	Environment :: getEnv ( )		14479	1					
ANR	14490	CallExpression	Environment :: getEnv ( )		14479	0					
ANR	14491	Callee	Environment :: getEnv		14479	0					
ANR	14492	Identifier	Environment :: getEnv		14479	0					
ANR	14493	ArgumentList			14479	1					
ANR	14494	Identifier	AviaryCommon :: ArchType :: ~ArchType		14479	1					
ANR	14495	ParameterList			14479	2					
ANR	14496	CFGEntryNode	ENTRY		14479		True				
ANR	14497	CFGExitNode	EXIT		14479		True				
ANR	14498	Symbol	Environment :: getEnv		14479						
ANR	14499	Symbol	qname		14479						
ANR	14500	Function	ArchType :: deserializeFromString	63:12:1674:2047							
ANR	14501	FunctionDef	"ArchType :: deserializeFromString (const axis2_char_t * node_value , axiom_node_t * parent)"		14500	0					
ANR	14502	CompoundStatement		67:12:1887:2047	14500	0					
ANR	14503	IdentifierDeclStatement	bool status = true ;	68:14:1903:1921	14500	0	True				
ANR	14504	IdentifierDecl	status = true		14500	0					
ANR	14505	IdentifierDeclType	bool		14500	0					
ANR	14506	Identifier	status		14500	1					
ANR	14507	AssignmentExpression	status = true		14500	2		=			
ANR	14508	Identifier	true		14500	0					
ANR	14509	Identifier	true		14500	1					
ANR	14510	ExpressionStatement	setArchType ( node_value )	70:24:1960:1983	14500	1	True				
ANR	14511	CallExpression	setArchType ( node_value )		14500	0					
ANR	14512	Callee	setArchType		14500	0					
ANR	14513	Identifier	setArchType		14500	0					
ANR	14514	ArgumentList	node_value		14500	1					
ANR	14515	Argument	node_value		14500	0					
ANR	14516	Identifier	node_value		14500	0					
ANR	14517	ReturnStatement	return status ;	72:14:2020:2033	14500	2	True				
ANR	14518	Identifier	status		14500	0					
ANR	14519	ReturnType	bool WSF_CALL		14500	1					
ANR	14520	Identifier	ArchType :: deserializeFromString		14500	2					
ANR	14521	ParameterList	"const axis2_char_t * node_value , axiom_node_t * parent"		14500	3					
ANR	14522	Parameter	const axis2_char_t * node_value	65:44:1777:1806	14500	0	True				
ANR	14523	ParameterType	const axis2_char_t *		14500	0					
ANR	14524	Identifier	node_value		14500	1					
ANR	14525	Parameter	axiom_node_t * parent	66:44:1853:1872	14500	1	True				
ANR	14526	ParameterType	axiom_node_t *		14500	0					
ANR	14527	Identifier	parent		14500	1					
ANR	14528	CFGEntryNode	ENTRY		14500		True				
ANR	14529	CFGExitNode	EXIT		14500		True				
ANR	14530	Symbol	parent		14500						
ANR	14531	Symbol	true		14500						
ANR	14532	Symbol	node_value		14500						
ANR	14533	Symbol	status		14500						
ANR	14534	Function	AviaryCommon :: ArchType :: deserialize	76:8:2067:3971							
ANR	14535	FunctionDef	"AviaryCommon :: ArchType :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		14534	0					
ANR	14536	CompoundStatement		78:8:2214:3971	14534	0					
ANR	14537	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	79:10:2226:2259	14534	0	True				
ANR	14538	IdentifierDecl	* parent = * dp_parent		14534	0					
ANR	14539	IdentifierDeclType	axiom_node_t *		14534	0					
ANR	14540	Identifier	parent		14534	1					
ANR	14541	AssignmentExpression	* parent = * dp_parent		14534	2		=			
ANR	14542	Identifier	parent		14534	0					
ANR	14543	UnaryOperationExpression	* dp_parent		14534	1					
ANR	14544	UnaryOperator	*		14534	0					
ANR	14545	Identifier	dp_parent		14534	1					
ANR	14546	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	81:10:2282:2309	14534	1	True				
ANR	14547	IdentifierDecl	status = AXIS2_SUCCESS		14534	0					
ANR	14548	IdentifierDeclType	bool		14534	0					
ANR	14549	Identifier	status		14534	1					
ANR	14550	AssignmentExpression	status = AXIS2_SUCCESS		14534	2		=			
ANR	14551	Identifier	AXIS2_SUCCESS		14534	0					
ANR	14552	Identifier	AXIS2_SUCCESS		14534	1					
ANR	14553	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	83:9:2332:2369	14534	2	True				
ANR	14554	IdentifierDecl	* text_value = NULL		14534	0					
ANR	14555	IdentifierDeclType	const axis2_char_t *		14534	0					
ANR	14556	Identifier	text_value		14534	1					
ANR	14557	AssignmentExpression	* text_value = NULL		14534	2		=			
ANR	14558	Identifier	NULL		14534	0					
ANR	14559	Identifier	NULL		14534	1					
ANR	14560	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	84:9:2380:2409	14534	3	True				
ANR	14561	IdentifierDecl	* mqname = NULL		14534	0					
ANR	14562	IdentifierDeclType	axutil_qname_t *		14534	0					
ANR	14563	Identifier	mqname		14534	1					
ANR	14564	AssignmentExpression	* mqname = NULL		14534	2		=			
ANR	14565	Identifier	NULL		14534	0					
ANR	14566	Identifier	NULL		14534	1					
ANR	14567	ExpressionStatement	status = AXIS2_FAILURE	87:8:2443:2465	14534	4	True				
ANR	14568	AssignmentExpression	status = AXIS2_FAILURE		14534	0		=			
ANR	14569	Identifier	status		14534	0					
ANR	14570	Identifier	AXIS2_FAILURE		14534	1					
ANR	14571	IfStatement	if ( parent )		14534	5					
ANR	14572	Condition	parent	88:11:2478:2483	14534	0	True				
ANR	14573	Identifier	parent		14534	0					
ANR	14574	CompoundStatement		13:12:293:325	14534	1					
ANR	14575	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	90:12:2508:2540	14534	0	True				
ANR	14576	IdentifierDecl	* attrib_text = NULL		14534	0					
ANR	14577	IdentifierDeclType	axis2_char_t *		14534	0					
ANR	14578	Identifier	attrib_text		14534	1					
ANR	14579	AssignmentExpression	* attrib_text = NULL		14534	2		=			
ANR	14580	Identifier	NULL		14534	0					
ANR	14581	Identifier	NULL		14534	1					
ANR	14582	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"	91:12:2554:2717	14534	1	True				
ANR	14583	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"		14534	0		=			
ANR	14584	Identifier	attrib_text		14534	0					
ANR	14585	CallExpression	"axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"		14534	1					
ANR	14586	Callee	axiom_element_get_attribute_value_by_name		14534	0					
ANR	14587	Identifier	axiom_element_get_attribute_value_by_name		14534	0					
ANR	14588	ArgumentList	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		14534	1					
ANR	14589	Argument	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		14534	0					
ANR	14590	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		14534	0					
ANR	14591	CastTarget	axiom_element_t *		14534	0					
ANR	14592	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		14534	1					
ANR	14593	Callee	axiom_node_get_data_element		14534	0					
ANR	14594	Identifier	axiom_node_get_data_element		14534	0					
ANR	14595	ArgumentList	parent		14534	1					
ANR	14596	Argument	parent		14534	0					
ANR	14597	Identifier	parent		14534	0					
ANR	14598	Argument	Environment :: getEnv ( )		14534	1					
ANR	14599	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14600	Callee	Environment :: getEnv		14534	0					
ANR	14601	Identifier	Environment :: getEnv		14534	0					
ANR	14602	ArgumentList			14534	1					
ANR	14603	Argument	Environment :: getEnv ( )		14534	1					
ANR	14604	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14605	Callee	Environment :: getEnv		14534	0					
ANR	14606	Identifier	Environment :: getEnv		14534	0					
ANR	14607	ArgumentList			14534	1					
ANR	14608	Argument	"""nil"""		14534	2					
ANR	14609	PrimaryExpression	"""nil"""		14534	0					
ANR	14610	IfStatement	"if ( attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" ) )"		14534	2					
ANR	14611	Condition	"attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" )"	92:16:2735:2796	14534	0	True				
ANR	14612	AndExpression	"attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" )"		14534	0		&&			
ANR	14613	EqualityExpression	attrib_text != NULL		14534	0		!=			
ANR	14614	Identifier	attrib_text		14534	0					
ANR	14615	Identifier	NULL		14534	1					
ANR	14616	UnaryOperationExpression	"! axutil_strcasecmp ( attrib_text , ""true"" )"		14534	1					
ANR	14617	UnaryOperator	!		14534	0					
ANR	14618	CallExpression	"axutil_strcasecmp ( attrib_text , ""true"" )"		14534	1					
ANR	14619	Callee	axutil_strcasecmp		14534	0					
ANR	14620	Identifier	axutil_strcasecmp		14534	0					
ANR	14621	ArgumentList	attrib_text		14534	1					
ANR	14622	Argument	attrib_text		14534	0					
ANR	14623	Identifier	attrib_text		14534	0					
ANR	14624	Argument	"""true"""		14534	1					
ANR	14625	PrimaryExpression	"""true"""		14534	0					
ANR	14626	CompoundStatement		16:12:596:596	14534	1					
ANR	14627	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element ArchType"" )"	96:16:2910:3023	14534	0	True				
ANR	14628	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element ArchType"" )"		14534	0					
ANR	14629	Callee	WSF_LOG_ERROR_MSG		14534	0					
ANR	14630	Identifier	WSF_LOG_ERROR_MSG		14534	0					
ANR	14631	ArgumentList	Environment :: getEnv ( ) -> log		14534	1					
ANR	14632	Argument	Environment :: getEnv ( ) -> log		14534	0					
ANR	14633	PtrMemberAccess	Environment :: getEnv ( ) -> log		14534	0					
ANR	14634	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14635	Callee	Environment :: getEnv		14534	0					
ANR	14636	Identifier	Environment :: getEnv		14534	0					
ANR	14637	ArgumentList			14534	1					
ANR	14638	Identifier	log		14534	1					
ANR	14639	Argument	WSF_LOG_SI		14534	1					
ANR	14640	Identifier	WSF_LOG_SI		14534	0					
ANR	14641	Argument	"""NULL value is set to a non nillable element ArchType"""		14534	2					
ANR	14642	PrimaryExpression	"""NULL value is set to a non nillable element ArchType"""		14534	0					
ANR	14643	ExpressionStatement	status = AXIS2_FAILURE	97:16:3041:3063	14534	1	True				
ANR	14644	AssignmentExpression	status = AXIS2_FAILURE		14534	0		=			
ANR	14645	Identifier	status		14534	0					
ANR	14646	Identifier	AXIS2_FAILURE		14534	1					
ANR	14647	ElseStatement	else		14534	0					
ANR	14648	CompoundStatement		27:16:1062:1095	14534	0					
ANR	14649	IdentifierDeclStatement	axiom_node_t * text_node = NULL ;	102:16:3142:3172	14534	0	True				
ANR	14650	IdentifierDecl	* text_node = NULL		14534	0					
ANR	14651	IdentifierDeclType	axiom_node_t *		14534	0					
ANR	14652	Identifier	text_node		14534	1					
ANR	14653	AssignmentExpression	* text_node = NULL		14534	2		=			
ANR	14654	Identifier	NULL		14534	0					
ANR	14655	Identifier	NULL		14534	1					
ANR	14656	ExpressionStatement	"text_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	103:16:3190:3259	14534	1	True				
ANR	14657	AssignmentExpression	"text_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		14534	0		=			
ANR	14658	Identifier	text_node		14534	0					
ANR	14659	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		14534	1					
ANR	14660	Callee	axiom_node_get_first_child		14534	0					
ANR	14661	Identifier	axiom_node_get_first_child		14534	0					
ANR	14662	ArgumentList	parent		14534	1					
ANR	14663	Argument	parent		14534	0					
ANR	14664	Identifier	parent		14534	0					
ANR	14665	Argument	Environment :: getEnv ( )		14534	1					
ANR	14666	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14667	Callee	Environment :: getEnv		14534	0					
ANR	14668	Identifier	Environment :: getEnv		14534	0					
ANR	14669	ArgumentList			14534	1					
ANR	14670	IdentifierDeclStatement	axiom_text_t * text_element = NULL ;	104:16:3277:3310	14534	2	True				
ANR	14671	IdentifierDecl	* text_element = NULL		14534	0					
ANR	14672	IdentifierDeclType	axiom_text_t *		14534	0					
ANR	14673	Identifier	text_element		14534	1					
ANR	14674	AssignmentExpression	* text_element = NULL		14534	2		=			
ANR	14675	Identifier	NULL		14534	0					
ANR	14676	Identifier	NULL		14534	1					
ANR	14677	IfStatement	"if ( text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT )"		14534	3					
ANR	14678	Condition	"text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"	105:20:3332:3440	14534	0	True				
ANR	14679	AndExpression	"text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"		14534	0		&&			
ANR	14680	Identifier	text_node		14534	0					
ANR	14681	EqualityExpression	"axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"		14534	1		==			
ANR	14682	CallExpression	"axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) )"		14534	0					
ANR	14683	Callee	axiom_node_get_node_type		14534	0					
ANR	14684	Identifier	axiom_node_get_node_type		14534	0					
ANR	14685	ArgumentList	text_node		14534	1					
ANR	14686	Argument	text_node		14534	0					
ANR	14687	Identifier	text_node		14534	0					
ANR	14688	Argument	Environment :: getEnv ( )		14534	1					
ANR	14689	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14690	Callee	Environment :: getEnv		14534	0					
ANR	14691	Identifier	Environment :: getEnv		14534	0					
ANR	14692	ArgumentList			14534	1					
ANR	14693	Identifier	AXIOM_TEXT		14534	1					
ANR	14694	ExpressionStatement	"text_element = ( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"	107:20:3463:3554	14534	1	True				
ANR	14695	AssignmentExpression	"text_element = ( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		14534	0		=			
ANR	14696	Identifier	text_element		14534	0					
ANR	14697	CastExpression	"( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		14534	1					
ANR	14698	CastTarget	axiom_text_t *		14534	0					
ANR	14699	CallExpression	"axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		14534	1					
ANR	14700	Callee	axiom_node_get_data_element		14534	0					
ANR	14701	Identifier	axiom_node_get_data_element		14534	0					
ANR	14702	ArgumentList	text_node		14534	1					
ANR	14703	Argument	text_node		14534	0					
ANR	14704	Identifier	text_node		14534	0					
ANR	14705	Argument	Environment :: getEnv ( )		14534	1					
ANR	14706	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14707	Callee	Environment :: getEnv		14534	0					
ANR	14708	Identifier	Environment :: getEnv		14534	0					
ANR	14709	ArgumentList			14534	1					
ANR	14710	ExpressionStatement	"text_value = """""	108:16:3572:3587	14534	4	True				
ANR	14711	AssignmentExpression	"text_value = """""		14534	0		=			
ANR	14712	Identifier	text_value		14534	0					
ANR	14713	PrimaryExpression	""""""		14534	1					
ANR	14714	IfStatement	"if ( text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) ) )"		14534	5					
ANR	14715	Condition	"text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"	109:19:3608:3680	14534	0	True				
ANR	14716	AndExpression	"text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		14534	0		&&			
ANR	14717	Identifier	text_element		14534	0					
ANR	14718	CallExpression	"axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		14534	1					
ANR	14719	Callee	axiom_text_get_value		14534	0					
ANR	14720	Identifier	axiom_text_get_value		14534	0					
ANR	14721	ArgumentList	text_element		14534	1					
ANR	14722	Argument	text_element		14534	0					
ANR	14723	Identifier	text_element		14534	0					
ANR	14724	Argument	Environment :: getEnv ( )		14534	1					
ANR	14725	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14726	Callee	Environment :: getEnv		14534	0					
ANR	14727	Identifier	Environment :: getEnv		14534	0					
ANR	14728	ArgumentList			14534	1					
ANR	14729	CompoundStatement		33:16:1484:1484	14534	1					
ANR	14730	ExpressionStatement	"text_value = ( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"	111:20:3721:3806	14534	0	True				
ANR	14731	AssignmentExpression	"text_value = ( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		14534	0		=			
ANR	14732	Identifier	text_value		14534	0					
ANR	14733	CastExpression	"( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		14534	1					
ANR	14734	CastTarget	axis2_char_t *		14534	0					
ANR	14735	CallExpression	"axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		14534	1					
ANR	14736	Callee	axiom_text_get_value		14534	0					
ANR	14737	Identifier	axiom_text_get_value		14534	0					
ANR	14738	ArgumentList	text_element		14534	1					
ANR	14739	Argument	text_element		14534	0					
ANR	14740	Identifier	text_element		14534	0					
ANR	14741	Argument	Environment :: getEnv ( )		14534	1					
ANR	14742	CallExpression	Environment :: getEnv ( )		14534	0					
ANR	14743	Callee	Environment :: getEnv		14534	0					
ANR	14744	Identifier	Environment :: getEnv		14534	0					
ANR	14745	ArgumentList			14534	1					
ANR	14746	ExpressionStatement	"status = deserializeFromString ( text_value , parent )"	113:16:3842:3892	14534	6	True				
ANR	14747	AssignmentExpression	"status = deserializeFromString ( text_value , parent )"		14534	0		=			
ANR	14748	Identifier	status		14534	0					
ANR	14749	CallExpression	"deserializeFromString ( text_value , parent )"		14534	1					
ANR	14750	Callee	deserializeFromString		14534	0					
ANR	14751	Identifier	deserializeFromString		14534	0					
ANR	14752	ArgumentList	text_value		14534	1					
ANR	14753	Argument	text_value		14534	0					
ANR	14754	Identifier	text_value		14534	0					
ANR	14755	Argument	parent		14534	1					
ANR	14756	Identifier	parent		14534	0					
ANR	14757	ReturnStatement	return status ;	117:10:3949:3962	14534	6	True				
ANR	14758	Identifier	status		14534	0					
ANR	14759	ReturnType	bool WSF_CALL		14534	1					
ANR	14760	Identifier	AviaryCommon :: ArchType :: deserialize		14534	2					
ANR	14761	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		14534	3					
ANR	14762	Parameter	axiom_node_t * * dp_parent	77:44:2125:2148	14534	0	True				
ANR	14763	ParameterType	axiom_node_t * *		14534	0					
ANR	14764	Identifier	dp_parent		14534	1					
ANR	14765	Parameter	bool * dp_is_early_node_valid	77:69:2150:2177	14534	1	True				
ANR	14766	ParameterType	bool *		14534	0					
ANR	14767	Identifier	dp_is_early_node_valid		14534	1					
ANR	14768	Parameter	bool dont_care_minoccurs	77:99:2180:2203	14534	2	True				
ANR	14769	ParameterType	bool		14534	0					
ANR	14770	Identifier	dont_care_minoccurs		14534	1					
ANR	14771	CFGEntryNode	ENTRY		14534		True				
ANR	14772	CFGExitNode	EXIT		14534		True				
ANR	14773	Symbol	parent		14534						
ANR	14774	Symbol	Environment :: getEnv		14534						
ANR	14775	Symbol	mqname		14534						
ANR	14776	Symbol	axiom_element_get_attribute_value_by_name		14534						
ANR	14777	Symbol	deserializeFromString		14534						
ANR	14778	Symbol	AXIOM_TEXT		14534						
ANR	14779	Symbol	* dp_parent		14534						
ANR	14780	Symbol	AXIS2_FAILURE		14534						
ANR	14781	Symbol	axiom_node_get_data_element		14534						
ANR	14782	Symbol	dont_care_minoccurs		14534						
ANR	14783	Symbol	attrib_text		14534						
ANR	14784	Symbol	dp_is_early_node_valid		14534						
ANR	14785	Symbol	WSF_LOG_SI		14534						
ANR	14786	Symbol	AXIS2_SUCCESS		14534						
ANR	14787	Symbol	axutil_strcasecmp		14534						
ANR	14788	Symbol	NULL		14534						
ANR	14789	Symbol	dp_parent		14534						
ANR	14790	Symbol	axiom_node_get_node_type		14534						
ANR	14791	Symbol	Environment :: getEnv ( ) -> log		14534						
ANR	14792	Symbol	axiom_text_get_value		14534						
ANR	14793	Symbol	text_value		14534						
ANR	14794	Symbol	text_node		14534						
ANR	14795	Symbol	axiom_node_get_first_child		14534						
ANR	14796	Symbol	text_element		14534						
ANR	14797	Symbol	* Environment :: getEnv		14534						
ANR	14798	Symbol	status		14534						
ANR	14799	Function	AviaryCommon :: ArchType :: isParticle	120:10:3984:4126							
ANR	14800	FunctionDef	AviaryCommon :: ArchType :: isParticle ()		14799	0					
ANR	14801	CompoundStatement		122:10:4055:4126	14799	0					
ANR	14802	ReturnStatement	return false ;	124:17:4087:4099	14799	0	True				
ANR	14803	Identifier	false		14799	0					
ANR	14804	ReturnType	bool WSF_CALL		14799	1					
ANR	14805	Identifier	AviaryCommon :: ArchType :: isParticle		14799	2					
ANR	14806	ParameterList			14799	3					
ANR	14807	CFGEntryNode	ENTRY		14799		True				
ANR	14808	CFGExitNode	EXIT		14799		True				
ANR	14809	Symbol	false		14799						
ANR	14810	Function	AviaryCommon :: ArchType :: declareParentNamespaces	129:10:4140:4461							
ANR	14811	FunctionDef	"AviaryCommon :: ArchType :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		14810	0					
ANR	14812	CompoundStatement		133:10:4343:4461	14810	0					
ANR	14813	ReturnType	void WSF_CALL		14810	1					
ANR	14814	Identifier	AviaryCommon :: ArchType :: declareParentNamespaces		14810	2					
ANR	14815	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		14810	3					
ANR	14816	Parameter	axiom_element_t * parent_element	131:20:4233:4263	14810	0	True				
ANR	14817	ParameterType	axiom_element_t *		14810	0					
ANR	14818	Identifier	parent_element		14810	1					
ANR	14819	Parameter	axutil_hash_t * namespaces	132:20:4286:4310	14810	1	True				
ANR	14820	ParameterType	axutil_hash_t *		14810	0					
ANR	14821	Identifier	namespaces		14810	1					
ANR	14822	Parameter	int * next_ns_index	132:47:4313:4330	14810	2	True				
ANR	14823	ParameterType	int *		14810	0					
ANR	14824	Identifier	next_ns_index		14810	1					
ANR	14825	CFGEntryNode	ENTRY		14810		True				
ANR	14826	CFGExitNode	EXIT		14810		True				
ANR	14827	Symbol	parent_element		14810						
ANR	14828	Symbol	next_ns_index		14810						
ANR	14829	Symbol	namespaces		14810						
ANR	14830	Function	AviaryCommon :: ArchType :: serializeToString	140:18:4491:5198							
ANR	14831	FunctionDef	AviaryCommon :: ArchType :: serializeToString (axutil_hash_t * namespaces)		14830	0					
ANR	14832	CompoundStatement		142:12:4593:5198	14830	0					
ANR	14833	IdentifierDeclStatement	axis2_char_t * text_value = NULL ;	143:16:4611:4642	14830	0	True				
ANR	14834	IdentifierDecl	* text_value = NULL		14830	0					
ANR	14835	IdentifierDeclType	axis2_char_t *		14830	0					
ANR	14836	Identifier	text_value		14830	1					
ANR	14837	AssignmentExpression	* text_value = NULL		14830	2		=			
ANR	14838	Identifier	NULL		14830	0					
ANR	14839	Identifier	NULL		14830	1					
ANR	14840	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	144:16:4660:4690	14830	1	True				
ANR	14841	IdentifierDecl	* qname_uri = NULL		14830	0					
ANR	14842	IdentifierDeclType	axis2_char_t *		14830	0					
ANR	14843	Identifier	qname_uri		14830	1					
ANR	14844	AssignmentExpression	* qname_uri = NULL		14830	2		=			
ANR	14845	Identifier	NULL		14830	0					
ANR	14846	Identifier	NULL		14830	1					
ANR	14847	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	145:16:4708:4741	14830	2	True				
ANR	14848	IdentifierDecl	* qname_prefix = NULL		14830	0					
ANR	14849	IdentifierDeclType	axis2_char_t *		14830	0					
ANR	14850	Identifier	qname_prefix		14830	1					
ANR	14851	AssignmentExpression	* qname_prefix = NULL		14830	2		=			
ANR	14852	Identifier	NULL		14830	0					
ANR	14853	Identifier	NULL		14830	1					
ANR	14854	ExpressionStatement	"text_value = ( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_ArchType . c_str ( ) , false )"	147:25:4785:4908	14830	3	True				
ANR	14855	AssignmentExpression	"text_value = ( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_ArchType . c_str ( ) , false )"		14830	0		=			
ANR	14856	Identifier	text_value		14830	0					
ANR	14857	CastExpression	"( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_ArchType . c_str ( ) , false )"		14830	1					
ANR	14858	CastTarget	axis2_char_t *		14830	0					
ANR	14859	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_ArchType . c_str ( ) , false )"		14830	1					
ANR	14860	Callee	axutil_xml_quote_string		14830	0					
ANR	14861	Identifier	axutil_xml_quote_string		14830	0					
ANR	14862	ArgumentList	Environment :: getEnv ( )		14830	1					
ANR	14863	Argument	Environment :: getEnv ( )		14830	0					
ANR	14864	CallExpression	Environment :: getEnv ( )		14830	0					
ANR	14865	Callee	Environment :: getEnv		14830	0					
ANR	14866	Identifier	Environment :: getEnv		14830	0					
ANR	14867	ArgumentList			14830	1					
ANR	14868	Argument	( axis2_char_t * ) property_ArchType . c_str ( )		14830	1					
ANR	14869	CastExpression	( axis2_char_t * ) property_ArchType . c_str ( )		14830	0					
ANR	14870	CastTarget	axis2_char_t *		14830	0					
ANR	14871	CallExpression	property_ArchType . c_str ( )		14830	1					
ANR	14872	Callee	property_ArchType . c_str		14830	0					
ANR	14873	MemberAccess	property_ArchType . c_str		14830	0					
ANR	14874	Identifier	property_ArchType		14830	0					
ANR	14875	Identifier	c_str		14830	1					
ANR	14876	ArgumentList			14830	1					
ANR	14877	Argument	false		14830	2					
ANR	14878	Identifier	false		14830	0					
ANR	14879	IfStatement	if ( ! text_value )		14830	4					
ANR	14880	Condition	! text_value	148:29:4939:4949	14830	0	True				
ANR	14881	UnaryOperationExpression	! text_value		14830	0					
ANR	14882	UnaryOperator	!		14830	0					
ANR	14883	Identifier	text_value		14830	1					
ANR	14884	CompoundStatement		8:25:383:383	14830	1					
ANR	14885	ExpressionStatement	"text_value = ( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_ArchType . c_str ( ) )"	150:29:5008:5099	14830	0	True				
ANR	14886	AssignmentExpression	"text_value = ( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_ArchType . c_str ( ) )"		14830	0		=			
ANR	14887	Identifier	text_value		14830	0					
ANR	14888	CastExpression	"( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_ArchType . c_str ( ) )"		14830	1					
ANR	14889	CastTarget	axis2_char_t *		14830	0					
ANR	14890	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , property_ArchType . c_str ( ) )"		14830	1					
ANR	14891	Callee	axutil_strdup		14830	0					
ANR	14892	Identifier	axutil_strdup		14830	0					
ANR	14893	ArgumentList	Environment :: getEnv ( )		14830	1					
ANR	14894	Argument	Environment :: getEnv ( )		14830	0					
ANR	14895	CallExpression	Environment :: getEnv ( )		14830	0					
ANR	14896	Callee	Environment :: getEnv		14830	0					
ANR	14897	Identifier	Environment :: getEnv		14830	0					
ANR	14898	ArgumentList			14830	1					
ANR	14899	Argument	property_ArchType . c_str ( )		14830	1					
ANR	14900	CallExpression	property_ArchType . c_str ( )		14830	0					
ANR	14901	Callee	property_ArchType . c_str		14830	0					
ANR	14902	MemberAccess	property_ArchType . c_str		14830	0					
ANR	14903	Identifier	property_ArchType		14830	0					
ANR	14904	Identifier	c_str		14830	1					
ANR	14905	ArgumentList			14830	1					
ANR	14906	ReturnStatement	return text_value ;	153:16:5167:5184	14830	5	True				
ANR	14907	Identifier	text_value		14830	0					
ANR	14908	ReturnType	WSF_CALL		14830	1					
ANR	14909	Identifier	AviaryCommon :: ArchType :: serializeToString		14830	2					
ANR	14910	ParameterList	axutil_hash_t * namespaces		14830	3					
ANR	14911	Parameter	axutil_hash_t * namespaces	141:54:4554:4578	14830	0	True				
ANR	14912	ParameterType	axutil_hash_t *		14830	0					
ANR	14913	Identifier	namespaces		14830	1					
ANR	14914	CFGEntryNode	ENTRY		14830		True				
ANR	14915	CFGExitNode	EXIT		14830		True				
ANR	14916	Symbol	text_value		14830						
ANR	14917	Symbol	Environment :: getEnv		14830						
ANR	14918	Symbol	NULL		14830						
ANR	14919	Symbol	axutil_xml_quote_string		14830						
ANR	14920	Symbol	qname_prefix		14830						
ANR	14921	Symbol	property_ArchType		14830						
ANR	14922	Symbol	qname_uri		14830						
ANR	14923	Symbol	false		14830						
ANR	14924	Symbol	axutil_strdup		14830						
ANR	14925	Symbol	property_ArchType . c_str		14830						
ANR	14926	Symbol	namespaces		14830						
ANR	14927	Function	AviaryCommon :: ArchType :: serialize	157:22:5240:6792							
ANR	14928	FunctionDef	"AviaryCommon :: ArchType :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		14927	0					
ANR	14929	CompoundStatement		163:8:5433:6792	14927	0					
ANR	14930	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	167:9:5480:5513	14927	0	True				
ANR	14931	IdentifierDecl	* current_node = NULL		14927	0					
ANR	14932	IdentifierDeclType	axiom_node_t *		14927	0					
ANR	14933	Identifier	current_node		14927	1					
ANR	14934	AssignmentExpression	* current_node = NULL		14927	2		=			
ANR	14935	Identifier	NULL		14927	0					
ANR	14936	Identifier	NULL		14927	1					
ANR	14937	IdentifierDeclStatement	int tag_closed = 0 ;	168:9:5524:5542	14927	1	True				
ANR	14938	IdentifierDecl	tag_closed = 0		14927	0					
ANR	14939	IdentifierDeclType	int		14927	0					
ANR	14940	Identifier	tag_closed		14927	1					
ANR	14941	AssignmentExpression	tag_closed = 0		14927	2		=			
ANR	14942	Identifier	tag_closed		14927	0					
ANR	14943	PrimaryExpression	0		14927	1					
ANR	14944	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	172:12:5577:5616	14927	2	True				
ANR	14945	IdentifierDecl	* data_source = NULL		14927	0					
ANR	14946	IdentifierDeclType	axiom_data_source_t *		14927	0					
ANR	14947	Identifier	data_source		14927	1					
ANR	14948	AssignmentExpression	* data_source = NULL		14927	2		=			
ANR	14949	Identifier	NULL		14927	0					
ANR	14950	Identifier	NULL		14927	1					
ANR	14951	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	173:12:5630:5660	14927	3	True				
ANR	14952	IdentifierDecl	* stream = NULL		14927	0					
ANR	14953	IdentifierDeclType	axutil_stream_t *		14927	0					
ANR	14954	Identifier	stream		14927	1					
ANR	14955	AssignmentExpression	* stream = NULL		14927	2		=			
ANR	14956	Identifier	NULL		14927	0					
ANR	14957	Identifier	NULL		14927	1					
ANR	14958	IdentifierDeclStatement	axis2_char_t * text_value ;	174:12:5674:5698	14927	4	True				
ANR	14959	IdentifierDecl	* text_value		14927	0					
ANR	14960	IdentifierDeclType	axis2_char_t *		14927	0					
ANR	14961	Identifier	text_value		14927	1					
ANR	14962	ExpressionStatement	current_node = parent	176:20:5734:5755	14927	5	True				
ANR	14963	AssignmentExpression	current_node = parent		14927	0		=			
ANR	14964	Identifier	current_node		14927	0					
ANR	14965	Identifier	parent		14927	1					
ANR	14966	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	177:20:5777:5878	14927	6	True				
ANR	14967	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		14927	0		=			
ANR	14968	Identifier	data_source		14927	0					
ANR	14969	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		14927	1					
ANR	14970	CastTarget	axiom_data_source_t *		14927	0					
ANR	14971	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		14927	1					
ANR	14972	Callee	axiom_node_get_data_element		14927	0					
ANR	14973	Identifier	axiom_node_get_data_element		14927	0					
ANR	14974	ArgumentList	current_node		14927	1					
ANR	14975	Argument	current_node		14927	0					
ANR	14976	Identifier	current_node		14927	0					
ANR	14977	Argument	Environment :: getEnv ( )		14927	1					
ANR	14978	CallExpression	Environment :: getEnv ( )		14927	0					
ANR	14979	Callee	Environment :: getEnv		14927	0					
ANR	14980	Identifier	Environment :: getEnv		14927	0					
ANR	14981	ArgumentList			14927	1					
ANR	14982	IfStatement	if ( ! data_source )		14927	7					
ANR	14983	Condition	! data_source	178:24:5904:5915	14927	0	True				
ANR	14984	UnaryOperationExpression	! data_source		14927	0					
ANR	14985	UnaryOperator	!		14927	0					
ANR	14986	Identifier	data_source		14927	1					
ANR	14987	ReturnStatement	return NULL ;	179:24:5942:5953	14927	1	True				
ANR	14988	Identifier	NULL		14927	0					
ANR	14989	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	180:20:5975:6048	14927	8	True				
ANR	14990	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		14927	0		=			
ANR	14991	Identifier	stream		14927	0					
ANR	14992	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		14927	1					
ANR	14993	Callee	axiom_data_source_get_stream		14927	0					
ANR	14994	Identifier	axiom_data_source_get_stream		14927	0					
ANR	14995	ArgumentList	data_source		14927	1					
ANR	14996	Argument	data_source		14927	0					
ANR	14997	Identifier	data_source		14927	0					
ANR	14998	Argument	Environment :: getEnv ( )		14927	1					
ANR	14999	CallExpression	Environment :: getEnv ( )		14927	0					
ANR	15000	Callee	Environment :: getEnv		14927	0					
ANR	15001	Identifier	Environment :: getEnv		14927	0					
ANR	15002	ArgumentList			14927	1					
ANR	15003	IfStatement	if ( ! stream )		14927	9					
ANR	15004	Condition	! stream	181:24:6117:6123	14927	0	True				
ANR	15005	UnaryOperationExpression	! stream		14927	0					
ANR	15006	UnaryOperator	!		14927	0					
ANR	15007	Identifier	stream		14927	1					
ANR	15008	ReturnStatement	return NULL ;	182:24:6150:6161	14927	1	True				
ANR	15009	Identifier	NULL		14927	0					
ANR	15010	IfStatement	if ( ! parent_tag_closed && ! tag_closed )		14927	10					
ANR	15011	Condition	! parent_tag_closed && ! tag_closed	184:18:6200:6232	14927	0	True				
ANR	15012	AndExpression	! parent_tag_closed && ! tag_closed		14927	0		&&			
ANR	15013	UnaryOperationExpression	! parent_tag_closed		14927	0					
ANR	15014	UnaryOperator	!		14927	0					
ANR	15015	Identifier	parent_tag_closed		14927	1					
ANR	15016	UnaryOperationExpression	! tag_closed		14927	1					
ANR	15017	UnaryOperator	!		14927	0					
ANR	15018	Identifier	tag_closed		14927	1					
ANR	15019	CompoundStatement		23:15:816:816	14927	1					
ANR	15020	ExpressionStatement	"text_value = "">"""	186:18:6270:6286	14927	0	True				
ANR	15021	AssignmentExpression	"text_value = "">"""		14927	0		=			
ANR	15022	Identifier	text_value		14927	0					
ANR	15023	PrimaryExpression	""">"""		14927	1					
ANR	15024	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"	187:18:6307:6396	14927	1	True				
ANR	15025	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"		14927	0					
ANR	15026	Callee	axutil_stream_write		14927	0					
ANR	15027	Identifier	axutil_stream_write		14927	0					
ANR	15028	ArgumentList	stream		14927	1					
ANR	15029	Argument	stream		14927	0					
ANR	15030	Identifier	stream		14927	0					
ANR	15031	Argument	Environment :: getEnv ( )		14927	1					
ANR	15032	CallExpression	Environment :: getEnv ( )		14927	0					
ANR	15033	Callee	Environment :: getEnv		14927	0					
ANR	15034	Identifier	Environment :: getEnv		14927	0					
ANR	15035	ArgumentList			14927	1					
ANR	15036	Argument	text_value		14927	2					
ANR	15037	Identifier	text_value		14927	0					
ANR	15038	Argument	axutil_strlen ( text_value )		14927	3					
ANR	15039	CallExpression	axutil_strlen ( text_value )		14927	0					
ANR	15040	Callee	axutil_strlen		14927	0					
ANR	15041	Identifier	axutil_strlen		14927	0					
ANR	15042	ArgumentList	text_value		14927	1					
ANR	15043	Argument	text_value		14927	0					
ANR	15044	Identifier	text_value		14927	0					
ANR	15045	ExpressionStatement	text_value = serializeToString ( namespaces )	190:15:6446:6488	14927	11	True				
ANR	15046	AssignmentExpression	text_value = serializeToString ( namespaces )		14927	0		=			
ANR	15047	Identifier	text_value		14927	0					
ANR	15048	CallExpression	serializeToString ( namespaces )		14927	1					
ANR	15049	Callee	serializeToString		14927	0					
ANR	15050	Identifier	serializeToString		14927	0					
ANR	15051	ArgumentList	namespaces		14927	1					
ANR	15052	Argument	namespaces		14927	0					
ANR	15053	Identifier	namespaces		14927	0					
ANR	15054	IfStatement	if ( text_value )		14927	12					
ANR	15055	Condition	text_value	191:18:6508:6517	14927	0	True				
ANR	15056	Identifier	text_value		14927	0					
ANR	15057	CompoundStatement		30:15:1101:1101	14927	1					
ANR	15058	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"	193:20:6557:6646	14927	0	True				
ANR	15059	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"		14927	0					
ANR	15060	Callee	axutil_stream_write		14927	0					
ANR	15061	Identifier	axutil_stream_write		14927	0					
ANR	15062	ArgumentList	stream		14927	1					
ANR	15063	Argument	stream		14927	0					
ANR	15064	Identifier	stream		14927	0					
ANR	15065	Argument	Environment :: getEnv ( )		14927	1					
ANR	15066	CallExpression	Environment :: getEnv ( )		14927	0					
ANR	15067	Callee	Environment :: getEnv		14927	0					
ANR	15068	Identifier	Environment :: getEnv		14927	0					
ANR	15069	ArgumentList			14927	1					
ANR	15070	Argument	text_value		14927	2					
ANR	15071	Identifier	text_value		14927	0					
ANR	15072	Argument	axutil_strlen ( text_value )		14927	3					
ANR	15073	CallExpression	axutil_strlen ( text_value )		14927	0					
ANR	15074	Callee	axutil_strlen		14927	0					
ANR	15075	Identifier	axutil_strlen		14927	0					
ANR	15076	ArgumentList	text_value		14927	1					
ANR	15077	Argument	text_value		14927	0					
ANR	15078	Identifier	text_value		14927	0					
ANR	15079	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"	194:20:6668:6724	14927	1	True				
ANR	15080	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"		14927	0					
ANR	15081	Callee	AXIS2_FREE		14927	0					
ANR	15082	Identifier	AXIS2_FREE		14927	0					
ANR	15083	ArgumentList	Environment :: getEnv ( ) -> allocator		14927	1					
ANR	15084	Argument	Environment :: getEnv ( ) -> allocator		14927	0					
ANR	15085	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		14927	0					
ANR	15086	CallExpression	Environment :: getEnv ( )		14927	0					
ANR	15087	Callee	Environment :: getEnv		14927	0					
ANR	15088	Identifier	Environment :: getEnv		14927	0					
ANR	15089	ArgumentList			14927	1					
ANR	15090	Identifier	allocator		14927	1					
ANR	15091	Argument	text_value		14927	1					
ANR	15092	Identifier	text_value		14927	0					
ANR	15093	ReturnStatement	return parent ;	198:12:6769:6782	14927	13	True				
ANR	15094	Identifier	parent		14927	0					
ANR	15095	ReturnType	WSF_CALL		14927	1					
ANR	15096	Identifier	AviaryCommon :: ArchType :: serialize		14927	2					
ANR	15097	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		14927	3					
ANR	15098	Parameter	axiom_node_t * parent	158:35:5284:5303	14927	0	True				
ANR	15099	ParameterType	axiom_node_t *		14927	0					
ANR	15100	Identifier	parent		14927	1					
ANR	15101	Parameter	axiom_element_t * parent_element	159:3:5310:5340	14927	1	True				
ANR	15102	ParameterType	axiom_element_t *		14927	0					
ANR	15103	Identifier	parent_element		14927	1					
ANR	15104	Parameter	int parent_tag_closed	160:3:5347:5367	14927	2	True				
ANR	15105	ParameterType	int		14927	0					
ANR	15106	Identifier	parent_tag_closed		14927	1					
ANR	15107	Parameter	axutil_hash_t * namespaces	161:3:5374:5398	14927	3	True				
ANR	15108	ParameterType	axutil_hash_t *		14927	0					
ANR	15109	Identifier	namespaces		14927	1					
ANR	15110	Parameter	int * next_ns_index	162:3:5405:5422	14927	4	True				
ANR	15111	ParameterType	int *		14927	0					
ANR	15112	Identifier	next_ns_index		14927	1					
ANR	15113	CFGEntryNode	ENTRY		14927		True				
ANR	15114	CFGExitNode	EXIT		14927		True				
ANR	15115	Symbol	parent_element		14927						
ANR	15116	Symbol	parent		14927						
ANR	15117	Symbol	axiom_data_source_get_stream		14927						
ANR	15118	Symbol	Environment :: getEnv		14927						
ANR	15119	Symbol	NULL		14927						
ANR	15120	Symbol	current_node		14927						
ANR	15121	Symbol	tag_closed		14927						
ANR	15122	Symbol	axutil_strlen		14927						
ANR	15123	Symbol	parent_tag_closed		14927						
ANR	15124	Symbol	next_ns_index		14927						
ANR	15125	Symbol	data_source		14927						
ANR	15126	Symbol	axiom_node_get_data_element		14927						
ANR	15127	Symbol	text_value		14927						
ANR	15128	Symbol	serializeToString		14927						
ANR	15129	Symbol	stream		14927						
ANR	15130	Symbol	* Environment :: getEnv		14927						
ANR	15131	Symbol	Environment :: getEnv ( ) -> allocator		14927						
ANR	15132	Symbol	namespaces		14927						
ANR	15133	Function	AviaryCommon :: ArchType :: getProperty1	207:12:6907:7043							
ANR	15134	FunctionDef	AviaryCommon :: ArchType :: getProperty1 ()		15133	0					
ANR	15135	CompoundStatement		209:12:6991:7043	15133	0					
ANR	15136	ReturnStatement	return getArchType ( ) ;	210:16:7009:7029	15133	0	True				
ANR	15137	CallExpression	getArchType ( )		15133	0					
ANR	15138	Callee	getArchType		15133	0					
ANR	15139	Identifier	getArchType		15133	0					
ANR	15140	ArgumentList			15133	1					
ANR	15141	ReturnType	std :: string WSF_CALL		15133	1					
ANR	15142	Identifier	AviaryCommon :: ArchType :: getProperty1		15133	2					
ANR	15143	ParameterList			15133	3					
ANR	15144	CFGEntryNode	ENTRY		15133		True				
ANR	15145	CFGExitNode	EXIT		15133		True				
ANR	15146	Symbol	getArchType		15133						
ANR	15147	Function	AviaryCommon :: ArchType :: getArchType	216:12:7126:7267							
ANR	15148	FunctionDef	AviaryCommon :: ArchType :: getArchType ()		15147	0					
ANR	15149	CompoundStatement		218:13:7210:7267	15147	0					
ANR	15150	ReturnStatement	return property_ArchType ;	219:16:7228:7252	15147	0	True				
ANR	15151	Identifier	property_ArchType		15147	0					
ANR	15152	ReturnType	std :: string WSF_CALL		15147	1					
ANR	15153	Identifier	AviaryCommon :: ArchType :: getArchType		15147	2					
ANR	15154	ParameterList			15147	3					
ANR	15155	CFGEntryNode	ENTRY		15147		True				
ANR	15156	CFGExitNode	EXIT		15147		True				
ANR	15157	Symbol	property_ArchType		15147						
ANR	15158	Function	AviaryCommon :: ArchType :: setArchType	225:12:7349:8277							
ANR	15159	FunctionDef	AviaryCommon :: ArchType :: setArchType (const std :: string arg_ArchType)		15158	0					
ANR	15160	CompoundStatement		228:13:7478:8277	15158	0					
ANR	15161	IfStatement	if ( isValidArchType && arg_ArchType == property_ArchType )		15158	0					
ANR	15162	Condition	isValidArchType && arg_ArchType == property_ArchType	231:19:7517:7592	15158	0	True				
ANR	15163	AndExpression	isValidArchType && arg_ArchType == property_ArchType		15158	0		&&			
ANR	15164	Identifier	isValidArchType		15158	0					
ANR	15165	EqualityExpression	arg_ArchType == property_ArchType		15158	1		==			
ANR	15166	Identifier	arg_ArchType		15158	0					
ANR	15167	Identifier	property_ArchType		15158	1					
ANR	15168	CompoundStatement		6:16:132:132	15158	1					
ANR	15169	ReturnStatement	return true ;	235:20:7654:7665	15158	0	True				
ANR	15170	Identifier	true		15158	0					
ANR	15171	IfStatement	if ( arg_ArchType . empty ( ) )		15158	1					
ANR	15172	Condition	arg_ArchType . empty ( )	239:21:7724:7743	15158	0	True				
ANR	15173	CallExpression	arg_ArchType . empty ( )		15158	0					
ANR	15174	Callee	arg_ArchType . empty		15158	0					
ANR	15175	MemberAccess	arg_ArchType . empty		15158	0					
ANR	15176	Identifier	arg_ArchType		15158	0					
ANR	15177	Identifier	empty		15158	1					
ANR	15178	ArgumentList			15158	1					
ANR	15179	CompoundStatement		14:18:309:309	15158	1					
ANR	15180	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ArchType is being set to NULL, but it is not a nullable element"" )"	242:22:7812:7935	15158	0	True				
ANR	15181	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ArchType is being set to NULL, but it is not a nullable element"" )"		15158	0					
ANR	15182	Callee	WSF_LOG_ERROR_MSG		15158	0					
ANR	15183	Identifier	WSF_LOG_ERROR_MSG		15158	0					
ANR	15184	ArgumentList	Environment :: getEnv ( ) -> log		15158	1					
ANR	15185	Argument	Environment :: getEnv ( ) -> log		15158	0					
ANR	15186	PtrMemberAccess	Environment :: getEnv ( ) -> log		15158	0					
ANR	15187	CallExpression	Environment :: getEnv ( )		15158	0					
ANR	15188	Callee	Environment :: getEnv		15158	0					
ANR	15189	Identifier	Environment :: getEnv		15158	0					
ANR	15190	ArgumentList			15158	1					
ANR	15191	Identifier	log		15158	1					
ANR	15192	Argument	WSF_LOG_SI		15158	1					
ANR	15193	Identifier	WSF_LOG_SI		15158	0					
ANR	15194	Argument	"""ArchType is being set to NULL, but it is not a nullable element"""		15158	2					
ANR	15195	PrimaryExpression	"""ArchType is being set to NULL, but it is not a nullable element"""		15158	0					
ANR	15196	ReturnStatement	return AXIS2_FAILURE ;	243:22:7959:7979	15158	1	True				
ANR	15197	Identifier	AXIS2_FAILURE		15158	0					
ANR	15198	ExpressionStatement	resetArchType ( )	248:16:8052:8067	15158	2	True				
ANR	15199	CallExpression	resetArchType ( )		15158	0					
ANR	15200	Callee	resetArchType		15158	0					
ANR	15201	Identifier	resetArchType		15158	0					
ANR	15202	ArgumentList			15158	1					
ANR	15203	ExpressionStatement	property_ArchType = std :: string ( arg_ArchType . c_str ( ) )	251:24:8111:8164	15158	3	True				
ANR	15204	AssignmentExpression	property_ArchType = std :: string ( arg_ArchType . c_str ( ) )		15158	0		=			
ANR	15205	Identifier	property_ArchType		15158	0					
ANR	15206	CallExpression	std :: string ( arg_ArchType . c_str ( ) )		15158	1					
ANR	15207	Callee	std :: string		15158	0					
ANR	15208	Identifier	std :: string		15158	0					
ANR	15209	ArgumentList	arg_ArchType . c_str ( )		15158	1					
ANR	15210	Argument	arg_ArchType . c_str ( )		15158	0					
ANR	15211	CallExpression	arg_ArchType . c_str ( )		15158	0					
ANR	15212	Callee	arg_ArchType . c_str		15158	0					
ANR	15213	MemberAccess	arg_ArchType . c_str		15158	0					
ANR	15214	Identifier	arg_ArchType		15158	0					
ANR	15215	Identifier	c_str		15158	1					
ANR	15216	ArgumentList			15158	1					
ANR	15217	ExpressionStatement	isValidArchType = true	252:24:8190:8212	15158	4	True				
ANR	15218	AssignmentExpression	isValidArchType = true		15158	0		=			
ANR	15219	Identifier	isValidArchType		15158	0					
ANR	15220	Identifier	true		15158	1					
ANR	15221	ReturnStatement	return true ;	254:16:8251:8262	15158	5	True				
ANR	15222	Identifier	true		15158	0					
ANR	15223	ReturnType	bool WSF_CALL		15158	1					
ANR	15224	Identifier	AviaryCommon :: ArchType :: setArchType		15158	2					
ANR	15225	ParameterList	const std :: string arg_ArchType		15158	3					
ANR	15226	Parameter	const std :: string arg_ArchType	227:20:7432:7462	15158	0	True				
ANR	15227	ParameterType	const std :: string		15158	0					
ANR	15228	Identifier	arg_ArchType		15158	1					
ANR	15229	CFGEntryNode	ENTRY		15158		True				
ANR	15230	CFGExitNode	EXIT		15158		True				
ANR	15231	Symbol	Environment :: getEnv		15158						
ANR	15232	Symbol	arg_ArchType . c_str		15158						
ANR	15233	Symbol	arg_ArchType		15158						
ANR	15234	Symbol	WSF_LOG_SI		15158						
ANR	15235	Symbol	std :: string		15158						
ANR	15236	Symbol	property_ArchType		15158						
ANR	15237	Symbol	arg_ArchType . empty		15158						
ANR	15238	Symbol	* Environment :: getEnv		15158						
ANR	15239	Symbol	true		15158						
ANR	15240	Symbol	isValidArchType		15158						
ANR	15241	Symbol	Environment :: getEnv ( ) -> log		15158						
ANR	15242	Symbol	AXIS2_FAILURE		15158						
ANR	15243	Function	AviaryCommon :: ArchType :: getArchTypeEnum	261:13:8392:8925							
ANR	15244	FunctionDef	AviaryCommon :: ArchType :: getArchTypeEnum ()		15243	0					
ANR	15245	CompoundStatement		263:13:8485:8925	15243	0					
ANR	15246	IfStatement	"if ( axutil_strcmp ( property_ArchType . c_str ( ) , ""INTEL"" ) == 0 )"		15243	0					
ANR	15247	Condition	"axutil_strcmp ( property_ArchType . c_str ( ) , ""INTEL"" ) == 0"	266:21:8526:8579	15243	0	True				
ANR	15248	EqualityExpression	"axutil_strcmp ( property_ArchType . c_str ( ) , ""INTEL"" ) == 0"		15243	0		==			
ANR	15249	CallExpression	"axutil_strcmp ( property_ArchType . c_str ( ) , ""INTEL"" )"		15243	0					
ANR	15250	Callee	axutil_strcmp		15243	0					
ANR	15251	Identifier	axutil_strcmp		15243	0					
ANR	15252	ArgumentList	property_ArchType . c_str ( )		15243	1					
ANR	15253	Argument	property_ArchType . c_str ( )		15243	0					
ANR	15254	CallExpression	property_ArchType . c_str ( )		15243	0					
ANR	15255	Callee	property_ArchType . c_str		15243	0					
ANR	15256	MemberAccess	property_ArchType . c_str		15243	0					
ANR	15257	Identifier	property_ArchType		15243	0					
ANR	15258	Identifier	c_str		15243	1					
ANR	15259	ArgumentList			15243	1					
ANR	15260	Argument	"""INTEL"""		15243	1					
ANR	15261	PrimaryExpression	"""INTEL"""		15243	0					
ANR	15262	PrimaryExpression	0		15243	1					
ANR	15263	ReturnStatement	return ArchType_INTEL ;	267:20:8602:8623	15243	1	True				
ANR	15264	Identifier	ArchType_INTEL		15243	0					
ANR	15265	IfStatement	"if ( axutil_strcmp ( property_ArchType . c_str ( ) , ""X86_64"" ) == 0 )"		15243	1					
ANR	15266	Condition	"axutil_strcmp ( property_ArchType . c_str ( ) , ""X86_64"" ) == 0"	269:21:8660:8714	15243	0	True				
ANR	15267	EqualityExpression	"axutil_strcmp ( property_ArchType . c_str ( ) , ""X86_64"" ) == 0"		15243	0		==			
ANR	15268	CallExpression	"axutil_strcmp ( property_ArchType . c_str ( ) , ""X86_64"" )"		15243	0					
ANR	15269	Callee	axutil_strcmp		15243	0					
ANR	15270	Identifier	axutil_strcmp		15243	0					
ANR	15271	ArgumentList	property_ArchType . c_str ( )		15243	1					
ANR	15272	Argument	property_ArchType . c_str ( )		15243	0					
ANR	15273	CallExpression	property_ArchType . c_str ( )		15243	0					
ANR	15274	Callee	property_ArchType . c_str		15243	0					
ANR	15275	MemberAccess	property_ArchType . c_str		15243	0					
ANR	15276	Identifier	property_ArchType		15243	0					
ANR	15277	Identifier	c_str		15243	1					
ANR	15278	ArgumentList			15243	1					
ANR	15279	Argument	"""X86_64"""		15243	1					
ANR	15280	PrimaryExpression	"""X86_64"""		15243	0					
ANR	15281	PrimaryExpression	0		15243	1					
ANR	15282	ReturnStatement	return ArchType_X86_64 ;	270:20:8737:8759	15243	1	True				
ANR	15283	Identifier	ArchType_X86_64		15243	0					
ANR	15284	ReturnStatement	return ( ADBArchTypeEnum ) - 1 ;	274:17:8884:8910	15243	2	True				
ANR	15285	CastExpression	( ADBArchTypeEnum ) - 1		15243	0					
ANR	15286	CastTarget	ADBArchTypeEnum		15243	0					
ANR	15287	UnaryOperationExpression	- 1		15243	1					
ANR	15288	UnaryOperator	-		15243	0					
ANR	15289	PrimaryExpression	1		15243	1					
ANR	15290	ReturnType	ADBArchTypeEnum WSF_CALL		15243	1					
ANR	15291	Identifier	AviaryCommon :: ArchType :: getArchTypeEnum		15243	2					
ANR	15292	ParameterList			15243	3					
ANR	15293	CFGEntryNode	ENTRY		15243		True				
ANR	15294	CFGExitNode	EXIT		15243		True				
ANR	15295	Symbol	ArchType_INTEL		15243						
ANR	15296	Symbol	ArchType_X86_64		15243						
ANR	15297	Symbol	property_ArchType		15243						
ANR	15298	Symbol	axutil_strcmp		15243						
ANR	15299	Symbol	property_ArchType . c_str		15243						
ANR	15300	Function	AviaryCommon :: ArchType :: setArchTypeEnum	281:13:9054:10295							
ANR	15301	FunctionDef	AviaryCommon :: ArchType :: setArchTypeEnum (const ADBArchTypeEnum arg_ArchType)		15300	0					
ANR	15302	CompoundStatement		283:13:9170:10295	15300	0					
ANR	15303	ExpressionStatement	resetArchType ( )	287:16:9223:9238	15300	0	True				
ANR	15304	CallExpression	resetArchType ( )		15300	0					
ANR	15305	Callee	resetArchType		15300	0					
ANR	15306	Identifier	resetArchType		15300	0					
ANR	15307	ArgumentList			15300	1					
ANR	15308	SwitchStatement	switch ( arg_ArchType )		15300	1					
ANR	15309	Condition	arg_ArchType	290:27:9288:9299	15300	0	True				
ANR	15310	Identifier	arg_ArchType		15300	0					
ANR	15311	CompoundStatement		9:19:150:150	15300	1					
ANR	15312	Label	case ArchType_INTEL :	293:23:9368:9388	15300	0	True				
ANR	15313	Identifier	ArchType_INTEL		15300	0					
ANR	15314	ExpressionStatement	"property_ArchType = ( ""INTEL"" )"	294:28:9418:9447	15300	1	True				
ANR	15315	AssignmentExpression	"property_ArchType = ( ""INTEL"" )"		15300	0		=			
ANR	15316	Identifier	property_ArchType		15300	0					
ANR	15317	PrimaryExpression	"""INTEL"""		15300	1					
ANR	15318	BreakStatement	break ;	295:26:9475:9480	15300	2	True				
ANR	15319	Label	case ArchType_X86_64 :	297:23:9527:9548	15300	3	True				
ANR	15320	Identifier	ArchType_X86_64		15300	0					
ANR	15321	ExpressionStatement	"property_ArchType = ( ""X86_64"" )"	298:28:9578:9608	15300	4	True				
ANR	15322	AssignmentExpression	"property_ArchType = ( ""X86_64"" )"		15300	0		=			
ANR	15323	Identifier	property_ArchType		15300	0					
ANR	15324	PrimaryExpression	"""X86_64"""		15300	1					
ANR	15325	BreakStatement	break ;	299:26:9636:9641	15300	5	True				
ANR	15326	Label	default :	302:23:9710:9717	15300	6	True				
ANR	15327	Identifier	default		15300	0					
ANR	15328	ExpressionStatement	isValidArchType = false	303:26:9745:9768	15300	7	True				
ANR	15329	AssignmentExpression	isValidArchType = false		15300	0		=			
ANR	15330	Identifier	isValidArchType		15300	0					
ANR	15331	Identifier	false		15300	1					
ANR	15332	ExpressionStatement	"property_ArchType = """""	304:26:9796:9818	15300	8	True				
ANR	15333	AssignmentExpression	"property_ArchType = """""		15300	0		=			
ANR	15334	Identifier	property_ArchType		15300	0					
ANR	15335	PrimaryExpression	""""""		15300	1					
ANR	15336	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Error setting ArchType: undefined enum value"" )"	305:26:9846:9950	15300	9	True				
ANR	15337	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Error setting ArchType: undefined enum value"" )"		15300	0					
ANR	15338	Callee	WSF_LOG_ERROR_MSG		15300	0					
ANR	15339	Identifier	WSF_LOG_ERROR_MSG		15300	0					
ANR	15340	ArgumentList	Environment :: getEnv ( ) -> log		15300	1					
ANR	15341	Argument	Environment :: getEnv ( ) -> log		15300	0					
ANR	15342	PtrMemberAccess	Environment :: getEnv ( ) -> log		15300	0					
ANR	15343	CallExpression	Environment :: getEnv ( )		15300	0					
ANR	15344	Callee	Environment :: getEnv		15300	0					
ANR	15345	Identifier	Environment :: getEnv		15300	0					
ANR	15346	ArgumentList			15300	1					
ANR	15347	Identifier	log		15300	1					
ANR	15348	Argument	WSF_LOG_SI		15300	1					
ANR	15349	Identifier	WSF_LOG_SI		15300	0					
ANR	15350	Argument	"""Error setting ArchType: undefined enum value"""		15300	2					
ANR	15351	PrimaryExpression	"""Error setting ArchType: undefined enum value"""		15300	0					
ANR	15352	ReturnStatement	return false ;	306:26:9978:9990	15300	10	True				
ANR	15353	Identifier	false		15300	0					
ANR	15354	IfStatement	if ( property_ArchType . empty ( ) )		15300	2					
ANR	15355	Condition	property_ArchType . empty ( )	309:22:10052:10076	15300	0	True				
ANR	15356	CallExpression	property_ArchType . empty ( )		15300	0					
ANR	15357	Callee	property_ArchType . empty		15300	0					
ANR	15358	MemberAccess	property_ArchType . empty		15300	0					
ANR	15359	Identifier	property_ArchType		15300	0					
ANR	15360	Identifier	empty		15300	1					
ANR	15361	ArgumentList			15300	1					
ANR	15362	CompoundStatement		28:19:927:927	15300	1					
ANR	15363	ReturnStatement	return AXIS2_FAILURE ;	311:23:10123:10143	15300	0	True				
ANR	15364	Identifier	AXIS2_FAILURE		15300	0					
ANR	15365	ExpressionStatement	isValidArchType = true	313:21:10187:10209	15300	3	True				
ANR	15366	AssignmentExpression	isValidArchType = true		15300	0		=			
ANR	15367	Identifier	isValidArchType		15300	0					
ANR	15368	Identifier	true		15300	1					
ANR	15369	ReturnStatement	return true ;	316:16:10269:10280	15300	4	True				
ANR	15370	Identifier	true		15300	0					
ANR	15371	ReturnType	bool WSF_CALL		15300	1					
ANR	15372	Identifier	AviaryCommon :: ArchType :: setArchTypeEnum		15300	2					
ANR	15373	ParameterList	const ADBArchTypeEnum arg_ArchType		15300	3					
ANR	15374	Parameter	const ADBArchTypeEnum arg_ArchType	282:52:9120:9154	15300	0	True				
ANR	15375	ParameterType	const ADBArchTypeEnum		15300	0					
ANR	15376	Identifier	arg_ArchType		15300	1					
ANR	15377	CFGEntryNode	ENTRY		15300		True				
ANR	15378	CFGExitNode	EXIT		15300		True				
ANR	15379	Symbol	Environment :: getEnv		15300						
ANR	15380	Symbol	property_ArchType . empty		15300						
ANR	15381	Symbol	arg_ArchType		15300						
ANR	15382	Symbol	WSF_LOG_SI		15300						
ANR	15383	Symbol	property_ArchType		15300						
ANR	15384	Symbol	* Environment :: getEnv		15300						
ANR	15385	Symbol	false		15300						
ANR	15386	Symbol	true		15300						
ANR	15387	Symbol	isValidArchType		15300						
ANR	15388	Symbol	Environment :: getEnv ( ) -> log		15300						
ANR	15389	Symbol	AXIS2_FAILURE		15300						
ANR	15390	Function	AviaryCommon :: ArchType :: resetArchType	323:11:10389:10621							
ANR	15391	FunctionDef	AviaryCommon :: ArchType :: resetArchType ()		15390	0					
ANR	15392	CompoundStatement		325:11:10465:10621	15390	0					
ANR	15393	IdentifierDeclStatement	int i = 0 ;	326:15:10482:10491	15390	0	True				
ANR	15394	IdentifierDecl	i = 0		15390	0					
ANR	15395	IdentifierDeclType	int		15390	0					
ANR	15396	Identifier	i		15390	1					
ANR	15397	AssignmentExpression	i = 0		15390	2		=			
ANR	15398	Identifier	i		15390	0					
ANR	15399	PrimaryExpression	0		15390	1					
ANR	15400	IdentifierDeclStatement	int count = 0 ;	327:15:10508:10521	15390	1	True				
ANR	15401	IdentifierDecl	count = 0		15390	0					
ANR	15402	IdentifierDeclType	int		15390	0					
ANR	15403	Identifier	count		15390	1					
ANR	15404	AssignmentExpression	count = 0		15390	2		=			
ANR	15405	Identifier	count		15390	0					
ANR	15406	PrimaryExpression	0		15390	1					
ANR	15407	ExpressionStatement	isValidArchType = false	331:15:10556:10579	15390	2	True				
ANR	15408	AssignmentExpression	isValidArchType = false		15390	0		=			
ANR	15409	Identifier	isValidArchType		15390	0					
ANR	15410	Identifier	false		15390	1					
ANR	15411	ReturnStatement	return true ;	332:15:10597:10608	15390	3	True				
ANR	15412	Identifier	true		15390	0					
ANR	15413	ReturnType	bool WSF_CALL		15390	1					
ANR	15414	Identifier	AviaryCommon :: ArchType :: resetArchType		15390	2					
ANR	15415	ParameterList			15390	3					
ANR	15416	CFGEntryNode	ENTRY		15390		True				
ANR	15417	CFGExitNode	EXIT		15390		True				
ANR	15418	Symbol	count		15390						
ANR	15419	Symbol	false		15390						
ANR	15420	Symbol	true		15390						
ANR	15421	Symbol	i		15390						
ANR	15422	Symbol	isValidArchType		15390						
ANR	15423	Function	AviaryCommon :: ArchType :: isArchTypeNil	338:11:10710:10839							
ANR	15424	FunctionDef	AviaryCommon :: ArchType :: isArchTypeNil ()		15423	0					
ANR	15425	CompoundStatement		340:11:10786:10839	15423	0					
ANR	15426	ReturnStatement	return ! isValidArchType ;	341:15:10803:10826	15423	0	True				
ANR	15427	UnaryOperationExpression	! isValidArchType		15423	0					
ANR	15428	UnaryOperator	!		15423	0					
ANR	15429	Identifier	isValidArchType		15423	1					
ANR	15430	ReturnType	bool WSF_CALL		15423	1					
ANR	15431	Identifier	AviaryCommon :: ArchType :: isArchTypeNil		15423	2					
ANR	15432	ParameterList			15423	3					
ANR	15433	CFGEntryNode	ENTRY		15423		True				
ANR	15434	CFGExitNode	EXIT		15423		True				
ANR	15435	Symbol	isValidArchType		15423						
ANR	15436	Function	AviaryCommon :: ArchType :: setArchTypeNil	347:11:10948:11077							
ANR	15437	FunctionDef	AviaryCommon :: ArchType :: setArchTypeNil ()		15436	0					
ANR	15438	CompoundStatement		349:11:11025:11077	15436	0					
ANR	15439	ReturnStatement	return resetArchType ( ) ;	350:15:11042:11064	15436	0	True				
ANR	15440	CallExpression	resetArchType ( )		15436	0					
ANR	15441	Callee	resetArchType		15436	0					
ANR	15442	Identifier	resetArchType		15436	0					
ANR	15443	ArgumentList			15436	1					
ANR	15444	ReturnType	bool WSF_CALL		15436	1					
ANR	15445	Identifier	AviaryCommon :: ArchType :: setArchTypeNil		15436	2					
ANR	15446	ParameterList			15436	3					
ANR	15447	CFGEntryNode	ENTRY		15436		True				
ANR	15448	CFGExitNode	EXIT		15436		True				
ANR	15449	Symbol	resetArchType		15436						
