command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4271665	File	data/converged/CVE-2011-4930_htcondor/src_condor_unit_tests_FTEST_basename.cpp								
ANR	4271666	DeclStmt									
ANR	4271667	Decl							bool	bool ( void )	test_null
ANR	4271668	DeclStmt									
ANR	4271669	Decl							bool	bool ( void )	test_empty_string
ANR	4271670	DeclStmt									
ANR	4271671	Decl							bool	bool ( void )	test_current_directory
ANR	4271672	DeclStmt									
ANR	4271673	Decl							bool	bool ( void )	test_simple_path_1
ANR	4271674	DeclStmt									
ANR	4271675	Decl							bool	bool ( void )	test_simple_path_2
ANR	4271676	DeclStmt									
ANR	4271677	Decl							bool	bool ( void )	test_simple_directory_1
ANR	4271678	DeclStmt									
ANR	4271679	Decl							bool	bool ( void )	test_simple_directory_2
ANR	4271680	DeclStmt									
ANR	4271681	Decl							bool	bool ( void )	test_directory_and_file_1
ANR	4271682	DeclStmt									
ANR	4271683	Decl							bool	bool ( void )	test_directory_and_file_2
ANR	4271684	DeclStmt									
ANR	4271685	Decl							bool	bool ( void )	test_root_directory
ANR	4271686	DeclStmt									
ANR	4271687	Decl							bool	bool ( void )	test_directory_and_directory
ANR	4271688	DeclStmt									
ANR	4271689	Decl							bool	bool ( void )	test_directory_and_directory_in_root
ANR	4271690	DeclStmt									
ANR	4271691	Decl							bool	bool ( void )	test_forward_slash
ANR	4271692	DeclStmt									
ANR	4271693	Decl							bool	bool ( void )	test_backslash
ANR	4271694	DeclStmt									
ANR	4271695	Decl							bool	bool ( void )	test_period_and_forward_slash_1
ANR	4271696	DeclStmt									
ANR	4271697	Decl							bool	bool ( void )	test_period_and_backslash_1
ANR	4271698	DeclStmt									
ANR	4271699	Decl							bool	bool ( void )	test_period_and_forward_slash_2
ANR	4271700	DeclStmt									
ANR	4271701	Decl							bool	bool ( void )	test_period_and_backslash_2
ANR	4271702	DeclStmt									
ANR	4271703	Decl							bool	bool ( void )	test_backslash_and_period
ANR	4271704	DeclStmt									
ANR	4271705	Decl							bool	bool ( void )	test_forward_slash_and_file_extension
ANR	4271706	DeclStmt									
ANR	4271707	Decl							bool	bool ( void )	test_backslash_and_file_extension
ANR	4271708	DeclStmt									
ANR	4271709	Decl							bool	bool ( void )	test_period_and_forward_slash
ANR	4271710	DeclStmt									
ANR	4271711	Decl							bool	bool ( void )	test_period_and_backslash
ANR	4271712	DeclStmt									
ANR	4271713	Decl							bool	bool ( void )	test_period_and_forward_slash_with_special_file
ANR	4271714	DeclStmt									
ANR	4271715	Decl							bool	bool ( void )	test_period_and_backslash_with_special_file
ANR	4271716	DeclStmt									
ANR	4271717	Decl							bool	bool ( void )	test_double_forward_slash
ANR	4271718	DeclStmt									
ANR	4271719	Decl							bool	bool ( void )	test_double_backslash
ANR	4271720	Function	FTEST_basename	61:0:2323:4293							
ANR	4271721	FunctionDef	FTEST_basename ()		4271720	0					
ANR	4271722	CompoundStatement		61:26:2349:4293	4271720	0					
ANR	4271723	ExpressionStatement	"emit_function ( ""const char* condor_basename(const char *path)"" )"	62:1:2352:2414	4271720	0	True				
ANR	4271724	CallExpression	"emit_function ( ""const char* condor_basename(const char *path)"" )"		4271720	0					
ANR	4271725	Callee	emit_function		4271720	0					
ANR	4271726	Identifier	emit_function		4271720	0					
ANR	4271727	ArgumentList	"""const char* condor_basename(const char *path)"""		4271720	1					
ANR	4271728	Argument	"""const char* condor_basename(const char *path)"""		4271720	0					
ANR	4271729	PrimaryExpression	"""const char* condor_basename(const char *path)"""		4271720	0					
ANR	4271730	ExpressionStatement	"emit_comment ( ""A basename() function that is happy on both Unix and NT. It returns a pointer to the last element of the path it was given, or the whole string, if there are no directory delimiters.  There's no memory allocated, overwritten or changed in anyway."" )"	63:1:2417:2679	4271720	1	True				
ANR	4271731	CallExpression	"emit_comment ( ""A basename() function that is happy on both Unix and NT. It returns a pointer to the last element of the path it was given, or the whole string, if there are no directory delimiters.  There's no memory allocated, overwritten or changed in anyway."" )"		4271720	0					
ANR	4271732	Callee	emit_comment		4271720	0					
ANR	4271733	Identifier	emit_comment		4271720	0					
ANR	4271734	ArgumentList	"""A basename() function that is happy on both Unix and NT. It returns a pointer to the last element of the path it was given, or the whole string, if there are no directory delimiters.  There's no memory allocated, overwritten or changed in anyway."""		4271720	1					
ANR	4271735	Argument	"""A basename() function that is happy on both Unix and NT. It returns a pointer to the last element of the path it was given, or the whole string, if there are no directory delimiters.  There's no memory allocated, overwritten or changed in anyway."""		4271720	0					
ANR	4271736	PrimaryExpression	"""A basename() function that is happy on both Unix and NT. It returns a pointer to the last element of the path it was given, or the whole string, if there are no directory delimiters.  There's no memory allocated, overwritten or changed in anyway."""		4271720	0					
ANR	4271737	IdentifierDeclStatement	FunctionDriver driver ;	66:1:2736:2757	4271720	2	True				
ANR	4271738	IdentifierDecl	driver		4271720	0					
ANR	4271739	IdentifierDeclType	FunctionDriver		4271720	0					
ANR	4271740	Identifier	driver		4271720	1					
ANR	4271741	ExpressionStatement	driver . register_function ( test_null )	67:1:2760:2795	4271720	3	True				
ANR	4271742	CallExpression	driver . register_function ( test_null )		4271720	0					
ANR	4271743	Callee	driver . register_function		4271720	0					
ANR	4271744	MemberAccess	driver . register_function		4271720	0					
ANR	4271745	Identifier	driver		4271720	0					
ANR	4271746	Identifier	register_function		4271720	1					
ANR	4271747	ArgumentList	test_null		4271720	1					
ANR	4271748	Argument	test_null		4271720	0					
ANR	4271749	Identifier	test_null		4271720	0					
ANR	4271750	ExpressionStatement	driver . register_function ( test_empty_string )	68:1:2798:2841	4271720	4	True				
ANR	4271751	CallExpression	driver . register_function ( test_empty_string )		4271720	0					
ANR	4271752	Callee	driver . register_function		4271720	0					
ANR	4271753	MemberAccess	driver . register_function		4271720	0					
ANR	4271754	Identifier	driver		4271720	0					
ANR	4271755	Identifier	register_function		4271720	1					
ANR	4271756	ArgumentList	test_empty_string		4271720	1					
ANR	4271757	Argument	test_empty_string		4271720	0					
ANR	4271758	Identifier	test_empty_string		4271720	0					
ANR	4271759	ExpressionStatement	driver . register_function ( test_current_directory )	69:1:2844:2892	4271720	5	True				
ANR	4271760	CallExpression	driver . register_function ( test_current_directory )		4271720	0					
ANR	4271761	Callee	driver . register_function		4271720	0					
ANR	4271762	MemberAccess	driver . register_function		4271720	0					
ANR	4271763	Identifier	driver		4271720	0					
ANR	4271764	Identifier	register_function		4271720	1					
ANR	4271765	ArgumentList	test_current_directory		4271720	1					
ANR	4271766	Argument	test_current_directory		4271720	0					
ANR	4271767	Identifier	test_current_directory		4271720	0					
ANR	4271768	ExpressionStatement	driver . register_function ( test_simple_path_1 )	70:1:2895:2939	4271720	6	True				
ANR	4271769	CallExpression	driver . register_function ( test_simple_path_1 )		4271720	0					
ANR	4271770	Callee	driver . register_function		4271720	0					
ANR	4271771	MemberAccess	driver . register_function		4271720	0					
ANR	4271772	Identifier	driver		4271720	0					
ANR	4271773	Identifier	register_function		4271720	1					
ANR	4271774	ArgumentList	test_simple_path_1		4271720	1					
ANR	4271775	Argument	test_simple_path_1		4271720	0					
ANR	4271776	Identifier	test_simple_path_1		4271720	0					
ANR	4271777	ExpressionStatement	driver . register_function ( test_simple_path_2 )	71:1:2942:2986	4271720	7	True				
ANR	4271778	CallExpression	driver . register_function ( test_simple_path_2 )		4271720	0					
ANR	4271779	Callee	driver . register_function		4271720	0					
ANR	4271780	MemberAccess	driver . register_function		4271720	0					
ANR	4271781	Identifier	driver		4271720	0					
ANR	4271782	Identifier	register_function		4271720	1					
ANR	4271783	ArgumentList	test_simple_path_2		4271720	1					
ANR	4271784	Argument	test_simple_path_2		4271720	0					
ANR	4271785	Identifier	test_simple_path_2		4271720	0					
ANR	4271786	ExpressionStatement	driver . register_function ( test_simple_directory_1 )	72:1:2989:3038	4271720	8	True				
ANR	4271787	CallExpression	driver . register_function ( test_simple_directory_1 )		4271720	0					
ANR	4271788	Callee	driver . register_function		4271720	0					
ANR	4271789	MemberAccess	driver . register_function		4271720	0					
ANR	4271790	Identifier	driver		4271720	0					
ANR	4271791	Identifier	register_function		4271720	1					
ANR	4271792	ArgumentList	test_simple_directory_1		4271720	1					
ANR	4271793	Argument	test_simple_directory_1		4271720	0					
ANR	4271794	Identifier	test_simple_directory_1		4271720	0					
ANR	4271795	ExpressionStatement	driver . register_function ( test_simple_directory_2 )	73:1:3041:3090	4271720	9	True				
ANR	4271796	CallExpression	driver . register_function ( test_simple_directory_2 )		4271720	0					
ANR	4271797	Callee	driver . register_function		4271720	0					
ANR	4271798	MemberAccess	driver . register_function		4271720	0					
ANR	4271799	Identifier	driver		4271720	0					
ANR	4271800	Identifier	register_function		4271720	1					
ANR	4271801	ArgumentList	test_simple_directory_2		4271720	1					
ANR	4271802	Argument	test_simple_directory_2		4271720	0					
ANR	4271803	Identifier	test_simple_directory_2		4271720	0					
ANR	4271804	ExpressionStatement	driver . register_function ( test_directory_and_file_1 )	74:1:3093:3144	4271720	10	True				
ANR	4271805	CallExpression	driver . register_function ( test_directory_and_file_1 )		4271720	0					
ANR	4271806	Callee	driver . register_function		4271720	0					
ANR	4271807	MemberAccess	driver . register_function		4271720	0					
ANR	4271808	Identifier	driver		4271720	0					
ANR	4271809	Identifier	register_function		4271720	1					
ANR	4271810	ArgumentList	test_directory_and_file_1		4271720	1					
ANR	4271811	Argument	test_directory_and_file_1		4271720	0					
ANR	4271812	Identifier	test_directory_and_file_1		4271720	0					
ANR	4271813	ExpressionStatement	driver . register_function ( test_directory_and_file_2 )	75:1:3147:3198	4271720	11	True				
ANR	4271814	CallExpression	driver . register_function ( test_directory_and_file_2 )		4271720	0					
ANR	4271815	Callee	driver . register_function		4271720	0					
ANR	4271816	MemberAccess	driver . register_function		4271720	0					
ANR	4271817	Identifier	driver		4271720	0					
ANR	4271818	Identifier	register_function		4271720	1					
ANR	4271819	ArgumentList	test_directory_and_file_2		4271720	1					
ANR	4271820	Argument	test_directory_and_file_2		4271720	0					
ANR	4271821	Identifier	test_directory_and_file_2		4271720	0					
ANR	4271822	ExpressionStatement	driver . register_function ( test_root_directory )	76:1:3201:3246	4271720	12	True				
ANR	4271823	CallExpression	driver . register_function ( test_root_directory )		4271720	0					
ANR	4271824	Callee	driver . register_function		4271720	0					
ANR	4271825	MemberAccess	driver . register_function		4271720	0					
ANR	4271826	Identifier	driver		4271720	0					
ANR	4271827	Identifier	register_function		4271720	1					
ANR	4271828	ArgumentList	test_root_directory		4271720	1					
ANR	4271829	Argument	test_root_directory		4271720	0					
ANR	4271830	Identifier	test_root_directory		4271720	0					
ANR	4271831	ExpressionStatement	driver . register_function ( test_directory_and_directory )	77:1:3249:3303	4271720	13	True				
ANR	4271832	CallExpression	driver . register_function ( test_directory_and_directory )		4271720	0					
ANR	4271833	Callee	driver . register_function		4271720	0					
ANR	4271834	MemberAccess	driver . register_function		4271720	0					
ANR	4271835	Identifier	driver		4271720	0					
ANR	4271836	Identifier	register_function		4271720	1					
ANR	4271837	ArgumentList	test_directory_and_directory		4271720	1					
ANR	4271838	Argument	test_directory_and_directory		4271720	0					
ANR	4271839	Identifier	test_directory_and_directory		4271720	0					
ANR	4271840	ExpressionStatement	driver . register_function ( test_directory_and_directory_in_root )	78:1:3306:3368	4271720	14	True				
ANR	4271841	CallExpression	driver . register_function ( test_directory_and_directory_in_root )		4271720	0					
ANR	4271842	Callee	driver . register_function		4271720	0					
ANR	4271843	MemberAccess	driver . register_function		4271720	0					
ANR	4271844	Identifier	driver		4271720	0					
ANR	4271845	Identifier	register_function		4271720	1					
ANR	4271846	ArgumentList	test_directory_and_directory_in_root		4271720	1					
ANR	4271847	Argument	test_directory_and_directory_in_root		4271720	0					
ANR	4271848	Identifier	test_directory_and_directory_in_root		4271720	0					
ANR	4271849	ExpressionStatement	driver . register_function ( test_forward_slash )	79:1:3371:3415	4271720	15	True				
ANR	4271850	CallExpression	driver . register_function ( test_forward_slash )		4271720	0					
ANR	4271851	Callee	driver . register_function		4271720	0					
ANR	4271852	MemberAccess	driver . register_function		4271720	0					
ANR	4271853	Identifier	driver		4271720	0					
ANR	4271854	Identifier	register_function		4271720	1					
ANR	4271855	ArgumentList	test_forward_slash		4271720	1					
ANR	4271856	Argument	test_forward_slash		4271720	0					
ANR	4271857	Identifier	test_forward_slash		4271720	0					
ANR	4271858	ExpressionStatement	driver . register_function ( test_backslash )	80:1:3418:3458	4271720	16	True				
ANR	4271859	CallExpression	driver . register_function ( test_backslash )		4271720	0					
ANR	4271860	Callee	driver . register_function		4271720	0					
ANR	4271861	MemberAccess	driver . register_function		4271720	0					
ANR	4271862	Identifier	driver		4271720	0					
ANR	4271863	Identifier	register_function		4271720	1					
ANR	4271864	ArgumentList	test_backslash		4271720	1					
ANR	4271865	Argument	test_backslash		4271720	0					
ANR	4271866	Identifier	test_backslash		4271720	0					
ANR	4271867	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_1 )	81:1:3461:3518	4271720	17	True				
ANR	4271868	CallExpression	driver . register_function ( test_period_and_forward_slash_1 )		4271720	0					
ANR	4271869	Callee	driver . register_function		4271720	0					
ANR	4271870	MemberAccess	driver . register_function		4271720	0					
ANR	4271871	Identifier	driver		4271720	0					
ANR	4271872	Identifier	register_function		4271720	1					
ANR	4271873	ArgumentList	test_period_and_forward_slash_1		4271720	1					
ANR	4271874	Argument	test_period_and_forward_slash_1		4271720	0					
ANR	4271875	Identifier	test_period_and_forward_slash_1		4271720	0					
ANR	4271876	ExpressionStatement	driver . register_function ( test_period_and_backslash_1 )	82:1:3521:3574	4271720	18	True				
ANR	4271877	CallExpression	driver . register_function ( test_period_and_backslash_1 )		4271720	0					
ANR	4271878	Callee	driver . register_function		4271720	0					
ANR	4271879	MemberAccess	driver . register_function		4271720	0					
ANR	4271880	Identifier	driver		4271720	0					
ANR	4271881	Identifier	register_function		4271720	1					
ANR	4271882	ArgumentList	test_period_and_backslash_1		4271720	1					
ANR	4271883	Argument	test_period_and_backslash_1		4271720	0					
ANR	4271884	Identifier	test_period_and_backslash_1		4271720	0					
ANR	4271885	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_2 )	83:1:3577:3634	4271720	19	True				
ANR	4271886	CallExpression	driver . register_function ( test_period_and_forward_slash_2 )		4271720	0					
ANR	4271887	Callee	driver . register_function		4271720	0					
ANR	4271888	MemberAccess	driver . register_function		4271720	0					
ANR	4271889	Identifier	driver		4271720	0					
ANR	4271890	Identifier	register_function		4271720	1					
ANR	4271891	ArgumentList	test_period_and_forward_slash_2		4271720	1					
ANR	4271892	Argument	test_period_and_forward_slash_2		4271720	0					
ANR	4271893	Identifier	test_period_and_forward_slash_2		4271720	0					
ANR	4271894	ExpressionStatement	driver . register_function ( test_period_and_backslash_2 )	84:1:3637:3690	4271720	20	True				
ANR	4271895	CallExpression	driver . register_function ( test_period_and_backslash_2 )		4271720	0					
ANR	4271896	Callee	driver . register_function		4271720	0					
ANR	4271897	MemberAccess	driver . register_function		4271720	0					
ANR	4271898	Identifier	driver		4271720	0					
ANR	4271899	Identifier	register_function		4271720	1					
ANR	4271900	ArgumentList	test_period_and_backslash_2		4271720	1					
ANR	4271901	Argument	test_period_and_backslash_2		4271720	0					
ANR	4271902	Identifier	test_period_and_backslash_2		4271720	0					
ANR	4271903	ExpressionStatement	driver . register_function ( test_backslash_and_period )	85:1:3693:3744	4271720	21	True				
ANR	4271904	CallExpression	driver . register_function ( test_backslash_and_period )		4271720	0					
ANR	4271905	Callee	driver . register_function		4271720	0					
ANR	4271906	MemberAccess	driver . register_function		4271720	0					
ANR	4271907	Identifier	driver		4271720	0					
ANR	4271908	Identifier	register_function		4271720	1					
ANR	4271909	ArgumentList	test_backslash_and_period		4271720	1					
ANR	4271910	Argument	test_backslash_and_period		4271720	0					
ANR	4271911	Identifier	test_backslash_and_period		4271720	0					
ANR	4271912	ExpressionStatement	driver . register_function ( test_forward_slash_and_file_extension )	86:1:3747:3810	4271720	22	True				
ANR	4271913	CallExpression	driver . register_function ( test_forward_slash_and_file_extension )		4271720	0					
ANR	4271914	Callee	driver . register_function		4271720	0					
ANR	4271915	MemberAccess	driver . register_function		4271720	0					
ANR	4271916	Identifier	driver		4271720	0					
ANR	4271917	Identifier	register_function		4271720	1					
ANR	4271918	ArgumentList	test_forward_slash_and_file_extension		4271720	1					
ANR	4271919	Argument	test_forward_slash_and_file_extension		4271720	0					
ANR	4271920	Identifier	test_forward_slash_and_file_extension		4271720	0					
ANR	4271921	ExpressionStatement	driver . register_function ( test_backslash_and_file_extension )	87:1:3813:3872	4271720	23	True				
ANR	4271922	CallExpression	driver . register_function ( test_backslash_and_file_extension )		4271720	0					
ANR	4271923	Callee	driver . register_function		4271720	0					
ANR	4271924	MemberAccess	driver . register_function		4271720	0					
ANR	4271925	Identifier	driver		4271720	0					
ANR	4271926	Identifier	register_function		4271720	1					
ANR	4271927	ArgumentList	test_backslash_and_file_extension		4271720	1					
ANR	4271928	Argument	test_backslash_and_file_extension		4271720	0					
ANR	4271929	Identifier	test_backslash_and_file_extension		4271720	0					
ANR	4271930	ExpressionStatement	driver . register_function ( test_period_and_forward_slash )	88:1:3875:3930	4271720	24	True				
ANR	4271931	CallExpression	driver . register_function ( test_period_and_forward_slash )		4271720	0					
ANR	4271932	Callee	driver . register_function		4271720	0					
ANR	4271933	MemberAccess	driver . register_function		4271720	0					
ANR	4271934	Identifier	driver		4271720	0					
ANR	4271935	Identifier	register_function		4271720	1					
ANR	4271936	ArgumentList	test_period_and_forward_slash		4271720	1					
ANR	4271937	Argument	test_period_and_forward_slash		4271720	0					
ANR	4271938	Identifier	test_period_and_forward_slash		4271720	0					
ANR	4271939	ExpressionStatement	driver . register_function ( test_period_and_backslash )	89:1:3933:3984	4271720	25	True				
ANR	4271940	CallExpression	driver . register_function ( test_period_and_backslash )		4271720	0					
ANR	4271941	Callee	driver . register_function		4271720	0					
ANR	4271942	MemberAccess	driver . register_function		4271720	0					
ANR	4271943	Identifier	driver		4271720	0					
ANR	4271944	Identifier	register_function		4271720	1					
ANR	4271945	ArgumentList	test_period_and_backslash		4271720	1					
ANR	4271946	Argument	test_period_and_backslash		4271720	0					
ANR	4271947	Identifier	test_period_and_backslash		4271720	0					
ANR	4271948	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_with_special_file )	90:1:3987:4060	4271720	26	True				
ANR	4271949	CallExpression	driver . register_function ( test_period_and_forward_slash_with_special_file )		4271720	0					
ANR	4271950	Callee	driver . register_function		4271720	0					
ANR	4271951	MemberAccess	driver . register_function		4271720	0					
ANR	4271952	Identifier	driver		4271720	0					
ANR	4271953	Identifier	register_function		4271720	1					
ANR	4271954	ArgumentList	test_period_and_forward_slash_with_special_file		4271720	1					
ANR	4271955	Argument	test_period_and_forward_slash_with_special_file		4271720	0					
ANR	4271956	Identifier	test_period_and_forward_slash_with_special_file		4271720	0					
ANR	4271957	ExpressionStatement	driver . register_function ( test_period_and_backslash_with_special_file )	91:1:4063:4132	4271720	27	True				
ANR	4271958	CallExpression	driver . register_function ( test_period_and_backslash_with_special_file )		4271720	0					
ANR	4271959	Callee	driver . register_function		4271720	0					
ANR	4271960	MemberAccess	driver . register_function		4271720	0					
ANR	4271961	Identifier	driver		4271720	0					
ANR	4271962	Identifier	register_function		4271720	1					
ANR	4271963	ArgumentList	test_period_and_backslash_with_special_file		4271720	1					
ANR	4271964	Argument	test_period_and_backslash_with_special_file		4271720	0					
ANR	4271965	Identifier	test_period_and_backslash_with_special_file		4271720	0					
ANR	4271966	ExpressionStatement	driver . register_function ( test_double_forward_slash )	92:1:4135:4186	4271720	28	True				
ANR	4271967	CallExpression	driver . register_function ( test_double_forward_slash )		4271720	0					
ANR	4271968	Callee	driver . register_function		4271720	0					
ANR	4271969	MemberAccess	driver . register_function		4271720	0					
ANR	4271970	Identifier	driver		4271720	0					
ANR	4271971	Identifier	register_function		4271720	1					
ANR	4271972	ArgumentList	test_double_forward_slash		4271720	1					
ANR	4271973	Argument	test_double_forward_slash		4271720	0					
ANR	4271974	Identifier	test_double_forward_slash		4271720	0					
ANR	4271975	ExpressionStatement	driver . register_function ( test_double_backslash )	93:1:4189:4236	4271720	29	True				
ANR	4271976	CallExpression	driver . register_function ( test_double_backslash )		4271720	0					
ANR	4271977	Callee	driver . register_function		4271720	0					
ANR	4271978	MemberAccess	driver . register_function		4271720	0					
ANR	4271979	Identifier	driver		4271720	0					
ANR	4271980	Identifier	register_function		4271720	1					
ANR	4271981	ArgumentList	test_double_backslash		4271720	1					
ANR	4271982	Argument	test_double_backslash		4271720	0					
ANR	4271983	Identifier	test_double_backslash		4271720	0					
ANR	4271984	ReturnStatement	return driver . do_all_functions ( ) ;	96:1:4259:4291	4271720	30	True				
ANR	4271985	CallExpression	driver . do_all_functions ( )		4271720	0					
ANR	4271986	Callee	driver . do_all_functions		4271720	0					
ANR	4271987	MemberAccess	driver . do_all_functions		4271720	0					
ANR	4271988	Identifier	driver		4271720	0					
ANR	4271989	Identifier	do_all_functions		4271720	1					
ANR	4271990	ArgumentList			4271720	1					
ANR	4271991	ReturnType	bool		4271720	1					
ANR	4271992	Identifier	FTEST_basename		4271720	2					
ANR	4271993	ParameterList			4271720	3					
ANR	4271994	CFGEntryNode	ENTRY		4271720		True				
ANR	4271995	CFGExitNode	EXIT		4271720		True				
ANR	4271996	Symbol	test_backslash		4271720						
ANR	4271997	Symbol	test_backslash_and_period		4271720						
ANR	4271998	Symbol	test_directory_and_directory_in_root		4271720						
ANR	4271999	Symbol	test_period_and_forward_slash		4271720						
ANR	4272000	Symbol	test_double_backslash		4271720						
ANR	4272001	Symbol	test_period_and_backslash_2		4271720						
ANR	4272002	Symbol	test_period_and_backslash_with_special_file		4271720						
ANR	4272003	Symbol	test_forward_slash		4271720						
ANR	4272004	Symbol	test_simple_directory_1		4271720						
ANR	4272005	Symbol	test_directory_and_directory		4271720						
ANR	4272006	Symbol	test_empty_string		4271720						
ANR	4272007	Symbol	test_period_and_backslash		4271720						
ANR	4272008	Symbol	test_period_and_backslash_1		4271720						
ANR	4272009	Symbol	driver . do_all_functions		4271720						
ANR	4272010	Symbol	test_current_directory		4271720						
ANR	4272011	Symbol	test_forward_slash_and_file_extension		4271720						
ANR	4272012	Symbol	test_directory_and_file_1		4271720						
ANR	4272013	Symbol	test_directory_and_file_2		4271720						
ANR	4272014	Symbol	test_period_and_forward_slash_with_special_file		4271720						
ANR	4272015	Symbol	test_root_directory		4271720						
ANR	4272016	Symbol	test_simple_directory_2		4271720						
ANR	4272017	Symbol	test_null		4271720						
ANR	4272018	Symbol	test_simple_path_2		4271720						
ANR	4272019	Symbol	driver		4271720						
ANR	4272020	Symbol	test_period_and_forward_slash_1		4271720						
ANR	4272021	Symbol	test_double_forward_slash		4271720						
ANR	4272022	Symbol	test_period_and_forward_slash_2		4271720						
ANR	4272023	Symbol	test_simple_path_1		4271720						
ANR	4272024	Symbol	test_backslash_and_file_extension		4271720						
ANR	4272025	Function	test_null	99:0:4296:4706							
ANR	4272026	FunctionDef	test_null ()		4272025	0					
ANR	4272027	CompoundStatement		99:24:4320:4706	4272025	0					
ANR	4272028	ExpressionStatement	"emit_test ( ""Does a NULL path return the empty string?"" )"	100:1:4323:4377	4272025	0	True				
ANR	4272029	CallExpression	"emit_test ( ""Does a NULL path return the empty string?"" )"		4272025	0					
ANR	4272030	Callee	emit_test		4272025	0					
ANR	4272031	Identifier	emit_test		4272025	0					
ANR	4272032	ArgumentList	"""Does a NULL path return the empty string?"""		4272025	1					
ANR	4272033	Argument	"""Does a NULL path return the empty string?"""		4272025	0					
ANR	4272034	PrimaryExpression	"""Does a NULL path return the empty string?"""		4272025	0					
ANR	4272035	IdentifierDeclStatement	const char * param = NULL ;	101:1:4380:4404	4272025	1	True				
ANR	4272036	IdentifierDecl	* param = NULL		4272025	0					
ANR	4272037	IdentifierDeclType	const char *		4272025	0					
ANR	4272038	Identifier	param		4272025	1					
ANR	4272039	AssignmentExpression	* param = NULL		4272025	2		=			
ANR	4272040	Identifier	NULL		4272025	0					
ANR	4272041	Identifier	NULL		4272025	1					
ANR	4272042	IdentifierDeclStatement	"const char * expected = """" ;"	102:1:4407:4432	4272025	2	True				
ANR	4272043	IdentifierDecl	"* expected = """""		4272025	0					
ANR	4272044	IdentifierDeclType	const char *		4272025	0					
ANR	4272045	Identifier	expected		4272025	1					
ANR	4272046	AssignmentExpression	"* expected = """""		4272025	2		=			
ANR	4272047	Identifier	expected		4272025	0					
ANR	4272048	PrimaryExpression	""""""		4272025	1					
ANR	4272049	ExpressionStatement	emit_input_header ( )	103:1:4435:4454	4272025	3	True				
ANR	4272050	CallExpression	emit_input_header ( )		4272025	0					
ANR	4272051	Callee	emit_input_header		4272025	0					
ANR	4272052	Identifier	emit_input_header		4272025	0					
ANR	4272053	ArgumentList			4272025	1					
ANR	4272054	ExpressionStatement	"emit_param ( ""STRING"" , ""NULL"" )"	104:1:4457:4485	4272025	4	True				
ANR	4272055	CallExpression	"emit_param ( ""STRING"" , ""NULL"" )"		4272025	0					
ANR	4272056	Callee	emit_param		4272025	0					
ANR	4272057	Identifier	emit_param		4272025	0					
ANR	4272058	ArgumentList	"""STRING"""		4272025	1					
ANR	4272059	Argument	"""STRING"""		4272025	0					
ANR	4272060	PrimaryExpression	"""STRING"""		4272025	0					
ANR	4272061	Argument	"""NULL"""		4272025	1					
ANR	4272062	PrimaryExpression	"""NULL"""		4272025	0					
ANR	4272063	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	105:1:4488:4529	4272025	5	True				
ANR	4272064	IdentifierDecl	* path = condor_basename ( param )		4272025	0					
ANR	4272065	IdentifierDeclType	const char *		4272025	0					
ANR	4272066	Identifier	path		4272025	1					
ANR	4272067	AssignmentExpression	* path = condor_basename ( param )		4272025	2		=			
ANR	4272068	Identifier	path		4272025	0					
ANR	4272069	CallExpression	condor_basename ( param )		4272025	1					
ANR	4272070	Callee	condor_basename		4272025	0					
ANR	4272071	Identifier	condor_basename		4272025	0					
ANR	4272072	ArgumentList	param		4272025	1					
ANR	4272073	Argument	param		4272025	0					
ANR	4272074	Identifier	param		4272025	0					
ANR	4272075	ExpressionStatement	emit_output_expected_header ( )	106:1:4532:4561	4272025	6	True				
ANR	4272076	CallExpression	emit_output_expected_header ( )		4272025	0					
ANR	4272077	Callee	emit_output_expected_header		4272025	0					
ANR	4272078	Identifier	emit_output_expected_header		4272025	0					
ANR	4272079	ArgumentList			4272025	1					
ANR	4272080	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	107:1:4564:4591	4272025	7	True				
ANR	4272081	CallExpression	"emit_retval ( ""%s"" , expected )"		4272025	0					
ANR	4272082	Callee	emit_retval		4272025	0					
ANR	4272083	Identifier	emit_retval		4272025	0					
ANR	4272084	ArgumentList	"""%s"""		4272025	1					
ANR	4272085	Argument	"""%s"""		4272025	0					
ANR	4272086	PrimaryExpression	"""%s"""		4272025	0					
ANR	4272087	Argument	expected		4272025	1					
ANR	4272088	Identifier	expected		4272025	0					
ANR	4272089	ExpressionStatement	emit_output_actual_header ( )	108:1:4594:4621	4272025	8	True				
ANR	4272090	CallExpression	emit_output_actual_header ( )		4272025	0					
ANR	4272091	Callee	emit_output_actual_header		4272025	0					
ANR	4272092	Identifier	emit_output_actual_header		4272025	0					
ANR	4272093	ArgumentList			4272025	1					
ANR	4272094	ExpressionStatement	"emit_retval ( ""%s"" , path )"	109:1:4624:4647	4272025	9	True				
ANR	4272095	CallExpression	"emit_retval ( ""%s"" , path )"		4272025	0					
ANR	4272096	Callee	emit_retval		4272025	0					
ANR	4272097	Identifier	emit_retval		4272025	0					
ANR	4272098	ArgumentList	"""%s"""		4272025	1					
ANR	4272099	Argument	"""%s"""		4272025	0					
ANR	4272100	PrimaryExpression	"""%s"""		4272025	0					
ANR	4272101	Argument	path		4272025	1					
ANR	4272102	Identifier	path		4272025	0					
ANR	4272103	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272025	10					
ANR	4272104	Condition	"strcmp ( path , expected ) != MATCH"	110:4:4653:4683	4272025	0	True				
ANR	4272105	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272025	0		!=			
ANR	4272106	CallExpression	"strcmp ( path , expected )"		4272025	0					
ANR	4272107	Callee	strcmp		4272025	0					
ANR	4272108	Identifier	strcmp		4272025	0					
ANR	4272109	ArgumentList	path		4272025	1					
ANR	4272110	Argument	path		4272025	0					
ANR	4272111	Identifier	path		4272025	0					
ANR	4272112	Argument	expected		4272025	1					
ANR	4272113	Identifier	expected		4272025	0					
ANR	4272114	Identifier	MATCH		4272025	1					
ANR	4272115	CompoundStatement		12:37:365:365	4272025	1					
ANR	4272116	ExpressionStatement	FAIL	111:2:4690:4694	4272025	0	True				
ANR	4272117	Identifier	FAIL		4272025	0					
ANR	4272118	ExpressionStatement	PASS	113:1:4700:4704	4272025	11	True				
ANR	4272119	Identifier	PASS		4272025	0					
ANR	4272120	ReturnType	static bool		4272025	1					
ANR	4272121	Identifier	test_null		4272025	2					
ANR	4272122	ParameterList			4272025	3					
ANR	4272123	CFGEntryNode	ENTRY		4272025		True				
ANR	4272124	CFGExitNode	EXIT		4272025		True				
ANR	4272125	Symbol	strcmp		4272025						
ANR	4272126	Symbol	path		4272025						
ANR	4272127	Symbol	NULL		4272025						
ANR	4272128	Symbol	param		4272025						
ANR	4272129	Symbol	expected		4272025						
ANR	4272130	Symbol	condor_basename		4272025						
ANR	4272131	Symbol	MATCH		4272025						
ANR	4272132	Function	test_empty_string	116:0:4709:5125							
ANR	4272133	FunctionDef	test_empty_string ()		4272132	0					
ANR	4272134	CompoundStatement		116:32:4741:5125	4272132	0					
ANR	4272135	ExpressionStatement	"emit_test ( ""Does a empty path return the empty string?"" )"	117:1:4744:4799	4272132	0	True				
ANR	4272136	CallExpression	"emit_test ( ""Does a empty path return the empty string?"" )"		4272132	0					
ANR	4272137	Callee	emit_test		4272132	0					
ANR	4272138	Identifier	emit_test		4272132	0					
ANR	4272139	ArgumentList	"""Does a empty path return the empty string?"""		4272132	1					
ANR	4272140	Argument	"""Does a empty path return the empty string?"""		4272132	0					
ANR	4272141	PrimaryExpression	"""Does a empty path return the empty string?"""		4272132	0					
ANR	4272142	IdentifierDeclStatement	"const char * param = """" ;"	118:1:4802:4824	4272132	1	True				
ANR	4272143	IdentifierDecl	"* param = """""		4272132	0					
ANR	4272144	IdentifierDeclType	const char *		4272132	0					
ANR	4272145	Identifier	param		4272132	1					
ANR	4272146	AssignmentExpression	"* param = """""		4272132	2		=			
ANR	4272147	Identifier	param		4272132	0					
ANR	4272148	PrimaryExpression	""""""		4272132	1					
ANR	4272149	IdentifierDeclStatement	"const char * expected = """" ;"	119:1:4827:4852	4272132	2	True				
ANR	4272150	IdentifierDecl	"* expected = """""		4272132	0					
ANR	4272151	IdentifierDeclType	const char *		4272132	0					
ANR	4272152	Identifier	expected		4272132	1					
ANR	4272153	AssignmentExpression	"* expected = """""		4272132	2		=			
ANR	4272154	Identifier	expected		4272132	0					
ANR	4272155	PrimaryExpression	""""""		4272132	1					
ANR	4272156	ExpressionStatement	emit_input_header ( )	120:1:4855:4874	4272132	3	True				
ANR	4272157	CallExpression	emit_input_header ( )		4272132	0					
ANR	4272158	Callee	emit_input_header		4272132	0					
ANR	4272159	Identifier	emit_input_header		4272132	0					
ANR	4272160	ArgumentList			4272132	1					
ANR	4272161	ExpressionStatement	"emit_param ( ""STRING"" , param )"	121:1:4877:4904	4272132	4	True				
ANR	4272162	CallExpression	"emit_param ( ""STRING"" , param )"		4272132	0					
ANR	4272163	Callee	emit_param		4272132	0					
ANR	4272164	Identifier	emit_param		4272132	0					
ANR	4272165	ArgumentList	"""STRING"""		4272132	1					
ANR	4272166	Argument	"""STRING"""		4272132	0					
ANR	4272167	PrimaryExpression	"""STRING"""		4272132	0					
ANR	4272168	Argument	param		4272132	1					
ANR	4272169	Identifier	param		4272132	0					
ANR	4272170	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	122:1:4907:4948	4272132	5	True				
ANR	4272171	IdentifierDecl	* path = condor_basename ( param )		4272132	0					
ANR	4272172	IdentifierDeclType	const char *		4272132	0					
ANR	4272173	Identifier	path		4272132	1					
ANR	4272174	AssignmentExpression	* path = condor_basename ( param )		4272132	2		=			
ANR	4272175	Identifier	path		4272132	0					
ANR	4272176	CallExpression	condor_basename ( param )		4272132	1					
ANR	4272177	Callee	condor_basename		4272132	0					
ANR	4272178	Identifier	condor_basename		4272132	0					
ANR	4272179	ArgumentList	param		4272132	1					
ANR	4272180	Argument	param		4272132	0					
ANR	4272181	Identifier	param		4272132	0					
ANR	4272182	ExpressionStatement	emit_output_expected_header ( )	123:1:4951:4980	4272132	6	True				
ANR	4272183	CallExpression	emit_output_expected_header ( )		4272132	0					
ANR	4272184	Callee	emit_output_expected_header		4272132	0					
ANR	4272185	Identifier	emit_output_expected_header		4272132	0					
ANR	4272186	ArgumentList			4272132	1					
ANR	4272187	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	124:1:4983:5010	4272132	7	True				
ANR	4272188	CallExpression	"emit_retval ( ""%s"" , expected )"		4272132	0					
ANR	4272189	Callee	emit_retval		4272132	0					
ANR	4272190	Identifier	emit_retval		4272132	0					
ANR	4272191	ArgumentList	"""%s"""		4272132	1					
ANR	4272192	Argument	"""%s"""		4272132	0					
ANR	4272193	PrimaryExpression	"""%s"""		4272132	0					
ANR	4272194	Argument	expected		4272132	1					
ANR	4272195	Identifier	expected		4272132	0					
ANR	4272196	ExpressionStatement	emit_output_actual_header ( )	125:1:5013:5040	4272132	8	True				
ANR	4272197	CallExpression	emit_output_actual_header ( )		4272132	0					
ANR	4272198	Callee	emit_output_actual_header		4272132	0					
ANR	4272199	Identifier	emit_output_actual_header		4272132	0					
ANR	4272200	ArgumentList			4272132	1					
ANR	4272201	ExpressionStatement	"emit_retval ( ""%s"" , path )"	126:1:5043:5066	4272132	9	True				
ANR	4272202	CallExpression	"emit_retval ( ""%s"" , path )"		4272132	0					
ANR	4272203	Callee	emit_retval		4272132	0					
ANR	4272204	Identifier	emit_retval		4272132	0					
ANR	4272205	ArgumentList	"""%s"""		4272132	1					
ANR	4272206	Argument	"""%s"""		4272132	0					
ANR	4272207	PrimaryExpression	"""%s"""		4272132	0					
ANR	4272208	Argument	path		4272132	1					
ANR	4272209	Identifier	path		4272132	0					
ANR	4272210	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272132	10					
ANR	4272211	Condition	"strcmp ( path , expected ) != MATCH"	127:4:5072:5102	4272132	0	True				
ANR	4272212	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272132	0		!=			
ANR	4272213	CallExpression	"strcmp ( path , expected )"		4272132	0					
ANR	4272214	Callee	strcmp		4272132	0					
ANR	4272215	Identifier	strcmp		4272132	0					
ANR	4272216	ArgumentList	path		4272132	1					
ANR	4272217	Argument	path		4272132	0					
ANR	4272218	Identifier	path		4272132	0					
ANR	4272219	Argument	expected		4272132	1					
ANR	4272220	Identifier	expected		4272132	0					
ANR	4272221	Identifier	MATCH		4272132	1					
ANR	4272222	CompoundStatement		12:37:363:363	4272132	1					
ANR	4272223	ExpressionStatement	FAIL	128:2:5109:5113	4272132	0	True				
ANR	4272224	Identifier	FAIL		4272132	0					
ANR	4272225	ExpressionStatement	PASS	130:1:5119:5123	4272132	11	True				
ANR	4272226	Identifier	PASS		4272132	0					
ANR	4272227	ReturnType	static bool		4272132	1					
ANR	4272228	Identifier	test_empty_string		4272132	2					
ANR	4272229	ParameterList			4272132	3					
ANR	4272230	CFGEntryNode	ENTRY		4272132		True				
ANR	4272231	CFGExitNode	EXIT		4272132		True				
ANR	4272232	Symbol	strcmp		4272132						
ANR	4272233	Symbol	path		4272132						
ANR	4272234	Symbol	param		4272132						
ANR	4272235	Symbol	expected		4272132						
ANR	4272236	Symbol	condor_basename		4272132						
ANR	4272237	Symbol	MATCH		4272132						
ANR	4272238	Function	test_current_directory	133:0:5128:5564							
ANR	4272239	FunctionDef	test_current_directory ()		4272238	0					
ANR	4272240	CompoundStatement		133:37:5165:5564	4272238	0					
ANR	4272241	ExpressionStatement	"emit_test ( ""Does the current directory return the current directory"" )"	134:1:5168:5236	4272238	0	True				
ANR	4272242	CallExpression	"emit_test ( ""Does the current directory return the current directory"" )"		4272238	0					
ANR	4272243	Callee	emit_test		4272238	0					
ANR	4272244	Identifier	emit_test		4272238	0					
ANR	4272245	ArgumentList	"""Does the current directory return the current directory"""		4272238	1					
ANR	4272246	Argument	"""Does the current directory return the current directory"""		4272238	0					
ANR	4272247	PrimaryExpression	"""Does the current directory return the current directory"""		4272238	0					
ANR	4272248	IdentifierDeclStatement	"const char * param = ""."" ;"	135:1:5239:5262	4272238	1	True				
ANR	4272249	IdentifierDecl	"* param = ""."""		4272238	0					
ANR	4272250	IdentifierDeclType	const char *		4272238	0					
ANR	4272251	Identifier	param		4272238	1					
ANR	4272252	AssignmentExpression	"* param = ""."""		4272238	2		=			
ANR	4272253	Identifier	param		4272238	0					
ANR	4272254	PrimaryExpression	"""."""		4272238	1					
ANR	4272255	IdentifierDeclStatement	"const char * expected = ""."" ;"	136:1:5265:5291	4272238	2	True				
ANR	4272256	IdentifierDecl	"* expected = ""."""		4272238	0					
ANR	4272257	IdentifierDeclType	const char *		4272238	0					
ANR	4272258	Identifier	expected		4272238	1					
ANR	4272259	AssignmentExpression	"* expected = ""."""		4272238	2		=			
ANR	4272260	Identifier	expected		4272238	0					
ANR	4272261	PrimaryExpression	"""."""		4272238	1					
ANR	4272262	ExpressionStatement	emit_input_header ( )	137:1:5294:5313	4272238	3	True				
ANR	4272263	CallExpression	emit_input_header ( )		4272238	0					
ANR	4272264	Callee	emit_input_header		4272238	0					
ANR	4272265	Identifier	emit_input_header		4272238	0					
ANR	4272266	ArgumentList			4272238	1					
ANR	4272267	ExpressionStatement	"emit_param ( ""STRING"" , param )"	138:1:5316:5343	4272238	4	True				
ANR	4272268	CallExpression	"emit_param ( ""STRING"" , param )"		4272238	0					
ANR	4272269	Callee	emit_param		4272238	0					
ANR	4272270	Identifier	emit_param		4272238	0					
ANR	4272271	ArgumentList	"""STRING"""		4272238	1					
ANR	4272272	Argument	"""STRING"""		4272238	0					
ANR	4272273	PrimaryExpression	"""STRING"""		4272238	0					
ANR	4272274	Argument	param		4272238	1					
ANR	4272275	Identifier	param		4272238	0					
ANR	4272276	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	139:1:5346:5387	4272238	5	True				
ANR	4272277	IdentifierDecl	* path = condor_basename ( param )		4272238	0					
ANR	4272278	IdentifierDeclType	const char *		4272238	0					
ANR	4272279	Identifier	path		4272238	1					
ANR	4272280	AssignmentExpression	* path = condor_basename ( param )		4272238	2		=			
ANR	4272281	Identifier	path		4272238	0					
ANR	4272282	CallExpression	condor_basename ( param )		4272238	1					
ANR	4272283	Callee	condor_basename		4272238	0					
ANR	4272284	Identifier	condor_basename		4272238	0					
ANR	4272285	ArgumentList	param		4272238	1					
ANR	4272286	Argument	param		4272238	0					
ANR	4272287	Identifier	param		4272238	0					
ANR	4272288	ExpressionStatement	emit_output_expected_header ( )	140:1:5390:5419	4272238	6	True				
ANR	4272289	CallExpression	emit_output_expected_header ( )		4272238	0					
ANR	4272290	Callee	emit_output_expected_header		4272238	0					
ANR	4272291	Identifier	emit_output_expected_header		4272238	0					
ANR	4272292	ArgumentList			4272238	1					
ANR	4272293	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	141:1:5422:5449	4272238	7	True				
ANR	4272294	CallExpression	"emit_retval ( ""%s"" , expected )"		4272238	0					
ANR	4272295	Callee	emit_retval		4272238	0					
ANR	4272296	Identifier	emit_retval		4272238	0					
ANR	4272297	ArgumentList	"""%s"""		4272238	1					
ANR	4272298	Argument	"""%s"""		4272238	0					
ANR	4272299	PrimaryExpression	"""%s"""		4272238	0					
ANR	4272300	Argument	expected		4272238	1					
ANR	4272301	Identifier	expected		4272238	0					
ANR	4272302	ExpressionStatement	emit_output_actual_header ( )	142:1:5452:5479	4272238	8	True				
ANR	4272303	CallExpression	emit_output_actual_header ( )		4272238	0					
ANR	4272304	Callee	emit_output_actual_header		4272238	0					
ANR	4272305	Identifier	emit_output_actual_header		4272238	0					
ANR	4272306	ArgumentList			4272238	1					
ANR	4272307	ExpressionStatement	"emit_retval ( ""%s"" , path )"	143:1:5482:5505	4272238	9	True				
ANR	4272308	CallExpression	"emit_retval ( ""%s"" , path )"		4272238	0					
ANR	4272309	Callee	emit_retval		4272238	0					
ANR	4272310	Identifier	emit_retval		4272238	0					
ANR	4272311	ArgumentList	"""%s"""		4272238	1					
ANR	4272312	Argument	"""%s"""		4272238	0					
ANR	4272313	PrimaryExpression	"""%s"""		4272238	0					
ANR	4272314	Argument	path		4272238	1					
ANR	4272315	Identifier	path		4272238	0					
ANR	4272316	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272238	10					
ANR	4272317	Condition	"strcmp ( path , expected ) != MATCH"	144:4:5511:5541	4272238	0	True				
ANR	4272318	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272238	0		!=			
ANR	4272319	CallExpression	"strcmp ( path , expected )"		4272238	0					
ANR	4272320	Callee	strcmp		4272238	0					
ANR	4272321	Identifier	strcmp		4272238	0					
ANR	4272322	ArgumentList	path		4272238	1					
ANR	4272323	Argument	path		4272238	0					
ANR	4272324	Identifier	path		4272238	0					
ANR	4272325	Argument	expected		4272238	1					
ANR	4272326	Identifier	expected		4272238	0					
ANR	4272327	Identifier	MATCH		4272238	1					
ANR	4272328	CompoundStatement		12:37:378:378	4272238	1					
ANR	4272329	ExpressionStatement	FAIL	145:2:5548:5552	4272238	0	True				
ANR	4272330	Identifier	FAIL		4272238	0					
ANR	4272331	ExpressionStatement	PASS	147:1:5558:5562	4272238	11	True				
ANR	4272332	Identifier	PASS		4272238	0					
ANR	4272333	ReturnType	static bool		4272238	1					
ANR	4272334	Identifier	test_current_directory		4272238	2					
ANR	4272335	ParameterList			4272238	3					
ANR	4272336	CFGEntryNode	ENTRY		4272238		True				
ANR	4272337	CFGExitNode	EXIT		4272238		True				
ANR	4272338	Symbol	strcmp		4272238						
ANR	4272339	Symbol	path		4272238						
ANR	4272340	Symbol	param		4272238						
ANR	4272341	Symbol	expected		4272238						
ANR	4272342	Symbol	condor_basename		4272238						
ANR	4272343	Symbol	MATCH		4272238						
ANR	4272344	Function	test_simple_path_1	150:0:5567:5994							
ANR	4272345	FunctionDef	test_simple_path_1 ()		4272344	0					
ANR	4272346	CompoundStatement		150:33:5600:5994	4272344	0					
ANR	4272347	ExpressionStatement	"emit_test ( ""Does a single character path return the base name?"" )"	151:1:5603:5666	4272344	0	True				
ANR	4272348	CallExpression	"emit_test ( ""Does a single character path return the base name?"" )"		4272344	0					
ANR	4272349	Callee	emit_test		4272344	0					
ANR	4272350	Identifier	emit_test		4272344	0					
ANR	4272351	ArgumentList	"""Does a single character path return the base name?"""		4272344	1					
ANR	4272352	Argument	"""Does a single character path return the base name?"""		4272344	0					
ANR	4272353	PrimaryExpression	"""Does a single character path return the base name?"""		4272344	0					
ANR	4272354	IdentifierDeclStatement	"const char * param = ""f"" ;"	152:1:5669:5692	4272344	1	True				
ANR	4272355	IdentifierDecl	"* param = ""f"""		4272344	0					
ANR	4272356	IdentifierDeclType	const char *		4272344	0					
ANR	4272357	Identifier	param		4272344	1					
ANR	4272358	AssignmentExpression	"* param = ""f"""		4272344	2		=			
ANR	4272359	Identifier	param		4272344	0					
ANR	4272360	PrimaryExpression	"""f"""		4272344	1					
ANR	4272361	IdentifierDeclStatement	"const char * expected = ""f"" ;"	153:1:5695:5721	4272344	2	True				
ANR	4272362	IdentifierDecl	"* expected = ""f"""		4272344	0					
ANR	4272363	IdentifierDeclType	const char *		4272344	0					
ANR	4272364	Identifier	expected		4272344	1					
ANR	4272365	AssignmentExpression	"* expected = ""f"""		4272344	2		=			
ANR	4272366	Identifier	expected		4272344	0					
ANR	4272367	PrimaryExpression	"""f"""		4272344	1					
ANR	4272368	ExpressionStatement	emit_input_header ( )	154:1:5724:5743	4272344	3	True				
ANR	4272369	CallExpression	emit_input_header ( )		4272344	0					
ANR	4272370	Callee	emit_input_header		4272344	0					
ANR	4272371	Identifier	emit_input_header		4272344	0					
ANR	4272372	ArgumentList			4272344	1					
ANR	4272373	ExpressionStatement	"emit_param ( ""STRING"" , param )"	155:1:5746:5773	4272344	4	True				
ANR	4272374	CallExpression	"emit_param ( ""STRING"" , param )"		4272344	0					
ANR	4272375	Callee	emit_param		4272344	0					
ANR	4272376	Identifier	emit_param		4272344	0					
ANR	4272377	ArgumentList	"""STRING"""		4272344	1					
ANR	4272378	Argument	"""STRING"""		4272344	0					
ANR	4272379	PrimaryExpression	"""STRING"""		4272344	0					
ANR	4272380	Argument	param		4272344	1					
ANR	4272381	Identifier	param		4272344	0					
ANR	4272382	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	156:1:5776:5817	4272344	5	True				
ANR	4272383	IdentifierDecl	* path = condor_basename ( param )		4272344	0					
ANR	4272384	IdentifierDeclType	const char *		4272344	0					
ANR	4272385	Identifier	path		4272344	1					
ANR	4272386	AssignmentExpression	* path = condor_basename ( param )		4272344	2		=			
ANR	4272387	Identifier	path		4272344	0					
ANR	4272388	CallExpression	condor_basename ( param )		4272344	1					
ANR	4272389	Callee	condor_basename		4272344	0					
ANR	4272390	Identifier	condor_basename		4272344	0					
ANR	4272391	ArgumentList	param		4272344	1					
ANR	4272392	Argument	param		4272344	0					
ANR	4272393	Identifier	param		4272344	0					
ANR	4272394	ExpressionStatement	emit_output_expected_header ( )	157:1:5820:5849	4272344	6	True				
ANR	4272395	CallExpression	emit_output_expected_header ( )		4272344	0					
ANR	4272396	Callee	emit_output_expected_header		4272344	0					
ANR	4272397	Identifier	emit_output_expected_header		4272344	0					
ANR	4272398	ArgumentList			4272344	1					
ANR	4272399	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	158:1:5852:5879	4272344	7	True				
ANR	4272400	CallExpression	"emit_retval ( ""%s"" , expected )"		4272344	0					
ANR	4272401	Callee	emit_retval		4272344	0					
ANR	4272402	Identifier	emit_retval		4272344	0					
ANR	4272403	ArgumentList	"""%s"""		4272344	1					
ANR	4272404	Argument	"""%s"""		4272344	0					
ANR	4272405	PrimaryExpression	"""%s"""		4272344	0					
ANR	4272406	Argument	expected		4272344	1					
ANR	4272407	Identifier	expected		4272344	0					
ANR	4272408	ExpressionStatement	emit_output_actual_header ( )	159:1:5882:5909	4272344	8	True				
ANR	4272409	CallExpression	emit_output_actual_header ( )		4272344	0					
ANR	4272410	Callee	emit_output_actual_header		4272344	0					
ANR	4272411	Identifier	emit_output_actual_header		4272344	0					
ANR	4272412	ArgumentList			4272344	1					
ANR	4272413	ExpressionStatement	"emit_retval ( ""%s"" , path )"	160:1:5912:5935	4272344	9	True				
ANR	4272414	CallExpression	"emit_retval ( ""%s"" , path )"		4272344	0					
ANR	4272415	Callee	emit_retval		4272344	0					
ANR	4272416	Identifier	emit_retval		4272344	0					
ANR	4272417	ArgumentList	"""%s"""		4272344	1					
ANR	4272418	Argument	"""%s"""		4272344	0					
ANR	4272419	PrimaryExpression	"""%s"""		4272344	0					
ANR	4272420	Argument	path		4272344	1					
ANR	4272421	Identifier	path		4272344	0					
ANR	4272422	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272344	10					
ANR	4272423	Condition	"strcmp ( path , expected ) != MATCH"	161:4:5941:5971	4272344	0	True				
ANR	4272424	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272344	0		!=			
ANR	4272425	CallExpression	"strcmp ( path , expected )"		4272344	0					
ANR	4272426	Callee	strcmp		4272344	0					
ANR	4272427	Identifier	strcmp		4272344	0					
ANR	4272428	ArgumentList	path		4272344	1					
ANR	4272429	Argument	path		4272344	0					
ANR	4272430	Identifier	path		4272344	0					
ANR	4272431	Argument	expected		4272344	1					
ANR	4272432	Identifier	expected		4272344	0					
ANR	4272433	Identifier	MATCH		4272344	1					
ANR	4272434	CompoundStatement		12:37:373:373	4272344	1					
ANR	4272435	ExpressionStatement	FAIL	162:2:5978:5982	4272344	0	True				
ANR	4272436	Identifier	FAIL		4272344	0					
ANR	4272437	ExpressionStatement	PASS	164:1:5988:5992	4272344	11	True				
ANR	4272438	Identifier	PASS		4272344	0					
ANR	4272439	ReturnType	static bool		4272344	1					
ANR	4272440	Identifier	test_simple_path_1		4272344	2					
ANR	4272441	ParameterList			4272344	3					
ANR	4272442	CFGEntryNode	ENTRY		4272344		True				
ANR	4272443	CFGExitNode	EXIT		4272344		True				
ANR	4272444	Symbol	strcmp		4272344						
ANR	4272445	Symbol	path		4272344						
ANR	4272446	Symbol	param		4272344						
ANR	4272447	Symbol	expected		4272344						
ANR	4272448	Symbol	condor_basename		4272344						
ANR	4272449	Symbol	MATCH		4272344						
ANR	4272450	Function	test_simple_path_2	167:0:5997:6430							
ANR	4272451	FunctionDef	test_simple_path_2 ()		4272450	0					
ANR	4272452	CompoundStatement		167:33:6030:6430	4272450	0					
ANR	4272453	ExpressionStatement	"emit_test ( ""Does a multiple character path return the base name?"" )"	168:1:6033:6098	4272450	0	True				
ANR	4272454	CallExpression	"emit_test ( ""Does a multiple character path return the base name?"" )"		4272450	0					
ANR	4272455	Callee	emit_test		4272450	0					
ANR	4272456	Identifier	emit_test		4272450	0					
ANR	4272457	ArgumentList	"""Does a multiple character path return the base name?"""		4272450	1					
ANR	4272458	Argument	"""Does a multiple character path return the base name?"""		4272450	0					
ANR	4272459	PrimaryExpression	"""Does a multiple character path return the base name?"""		4272450	0					
ANR	4272460	IdentifierDeclStatement	"const char * param = ""foo"" ;"	169:1:6101:6126	4272450	1	True				
ANR	4272461	IdentifierDecl	"* param = ""foo"""		4272450	0					
ANR	4272462	IdentifierDeclType	const char *		4272450	0					
ANR	4272463	Identifier	param		4272450	1					
ANR	4272464	AssignmentExpression	"* param = ""foo"""		4272450	2		=			
ANR	4272465	Identifier	param		4272450	0					
ANR	4272466	PrimaryExpression	"""foo"""		4272450	1					
ANR	4272467	IdentifierDeclStatement	"const char * expected = ""foo"" ;"	170:1:6129:6157	4272450	2	True				
ANR	4272468	IdentifierDecl	"* expected = ""foo"""		4272450	0					
ANR	4272469	IdentifierDeclType	const char *		4272450	0					
ANR	4272470	Identifier	expected		4272450	1					
ANR	4272471	AssignmentExpression	"* expected = ""foo"""		4272450	2		=			
ANR	4272472	Identifier	expected		4272450	0					
ANR	4272473	PrimaryExpression	"""foo"""		4272450	1					
ANR	4272474	ExpressionStatement	emit_input_header ( )	171:1:6160:6179	4272450	3	True				
ANR	4272475	CallExpression	emit_input_header ( )		4272450	0					
ANR	4272476	Callee	emit_input_header		4272450	0					
ANR	4272477	Identifier	emit_input_header		4272450	0					
ANR	4272478	ArgumentList			4272450	1					
ANR	4272479	ExpressionStatement	"emit_param ( ""STRING"" , param )"	172:1:6182:6209	4272450	4	True				
ANR	4272480	CallExpression	"emit_param ( ""STRING"" , param )"		4272450	0					
ANR	4272481	Callee	emit_param		4272450	0					
ANR	4272482	Identifier	emit_param		4272450	0					
ANR	4272483	ArgumentList	"""STRING"""		4272450	1					
ANR	4272484	Argument	"""STRING"""		4272450	0					
ANR	4272485	PrimaryExpression	"""STRING"""		4272450	0					
ANR	4272486	Argument	param		4272450	1					
ANR	4272487	Identifier	param		4272450	0					
ANR	4272488	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	173:1:6212:6253	4272450	5	True				
ANR	4272489	IdentifierDecl	* path = condor_basename ( param )		4272450	0					
ANR	4272490	IdentifierDeclType	const char *		4272450	0					
ANR	4272491	Identifier	path		4272450	1					
ANR	4272492	AssignmentExpression	* path = condor_basename ( param )		4272450	2		=			
ANR	4272493	Identifier	path		4272450	0					
ANR	4272494	CallExpression	condor_basename ( param )		4272450	1					
ANR	4272495	Callee	condor_basename		4272450	0					
ANR	4272496	Identifier	condor_basename		4272450	0					
ANR	4272497	ArgumentList	param		4272450	1					
ANR	4272498	Argument	param		4272450	0					
ANR	4272499	Identifier	param		4272450	0					
ANR	4272500	ExpressionStatement	emit_output_expected_header ( )	174:1:6256:6285	4272450	6	True				
ANR	4272501	CallExpression	emit_output_expected_header ( )		4272450	0					
ANR	4272502	Callee	emit_output_expected_header		4272450	0					
ANR	4272503	Identifier	emit_output_expected_header		4272450	0					
ANR	4272504	ArgumentList			4272450	1					
ANR	4272505	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	175:1:6288:6315	4272450	7	True				
ANR	4272506	CallExpression	"emit_retval ( ""%s"" , expected )"		4272450	0					
ANR	4272507	Callee	emit_retval		4272450	0					
ANR	4272508	Identifier	emit_retval		4272450	0					
ANR	4272509	ArgumentList	"""%s"""		4272450	1					
ANR	4272510	Argument	"""%s"""		4272450	0					
ANR	4272511	PrimaryExpression	"""%s"""		4272450	0					
ANR	4272512	Argument	expected		4272450	1					
ANR	4272513	Identifier	expected		4272450	0					
ANR	4272514	ExpressionStatement	emit_output_actual_header ( )	176:1:6318:6345	4272450	8	True				
ANR	4272515	CallExpression	emit_output_actual_header ( )		4272450	0					
ANR	4272516	Callee	emit_output_actual_header		4272450	0					
ANR	4272517	Identifier	emit_output_actual_header		4272450	0					
ANR	4272518	ArgumentList			4272450	1					
ANR	4272519	ExpressionStatement	"emit_retval ( ""%s"" , path )"	177:1:6348:6371	4272450	9	True				
ANR	4272520	CallExpression	"emit_retval ( ""%s"" , path )"		4272450	0					
ANR	4272521	Callee	emit_retval		4272450	0					
ANR	4272522	Identifier	emit_retval		4272450	0					
ANR	4272523	ArgumentList	"""%s"""		4272450	1					
ANR	4272524	Argument	"""%s"""		4272450	0					
ANR	4272525	PrimaryExpression	"""%s"""		4272450	0					
ANR	4272526	Argument	path		4272450	1					
ANR	4272527	Identifier	path		4272450	0					
ANR	4272528	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272450	10					
ANR	4272529	Condition	"strcmp ( path , expected ) != MATCH"	178:4:6377:6407	4272450	0	True				
ANR	4272530	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272450	0		!=			
ANR	4272531	CallExpression	"strcmp ( path , expected )"		4272450	0					
ANR	4272532	Callee	strcmp		4272450	0					
ANR	4272533	Identifier	strcmp		4272450	0					
ANR	4272534	ArgumentList	path		4272450	1					
ANR	4272535	Argument	path		4272450	0					
ANR	4272536	Identifier	path		4272450	0					
ANR	4272537	Argument	expected		4272450	1					
ANR	4272538	Identifier	expected		4272450	0					
ANR	4272539	Identifier	MATCH		4272450	1					
ANR	4272540	CompoundStatement		12:37:379:379	4272450	1					
ANR	4272541	ExpressionStatement	FAIL	179:2:6414:6418	4272450	0	True				
ANR	4272542	Identifier	FAIL		4272450	0					
ANR	4272543	ExpressionStatement	PASS	181:1:6424:6428	4272450	11	True				
ANR	4272544	Identifier	PASS		4272450	0					
ANR	4272545	ReturnType	static bool		4272450	1					
ANR	4272546	Identifier	test_simple_path_2		4272450	2					
ANR	4272547	ParameterList			4272450	3					
ANR	4272548	CFGEntryNode	ENTRY		4272450		True				
ANR	4272549	CFGExitNode	EXIT		4272450		True				
ANR	4272550	Symbol	strcmp		4272450						
ANR	4272551	Symbol	path		4272450						
ANR	4272552	Symbol	param		4272450						
ANR	4272553	Symbol	expected		4272450						
ANR	4272554	Symbol	condor_basename		4272450						
ANR	4272555	Symbol	MATCH		4272450						
ANR	4272556	Function	test_simple_directory_1	184:0:6433:6880							
ANR	4272557	FunctionDef	test_simple_directory_1 ()		4272556	0					
ANR	4272558	CompoundStatement		184:38:6471:6880	4272556	0					
ANR	4272559	ExpressionStatement	"emit_test ( ""Does a path with a directory return the directory base name?"" )"	185:1:6474:6547	4272556	0	True				
ANR	4272560	CallExpression	"emit_test ( ""Does a path with a directory return the directory base name?"" )"		4272556	0					
ANR	4272561	Callee	emit_test		4272556	0					
ANR	4272562	Identifier	emit_test		4272556	0					
ANR	4272563	ArgumentList	"""Does a path with a directory return the directory base name?"""		4272556	1					
ANR	4272564	Argument	"""Does a path with a directory return the directory base name?"""		4272556	0					
ANR	4272565	PrimaryExpression	"""Does a path with a directory return the directory base name?"""		4272556	0					
ANR	4272566	IdentifierDeclStatement	"const char * param = ""/foo"" ;"	186:1:6550:6576	4272556	1	True				
ANR	4272567	IdentifierDecl	"* param = ""/foo"""		4272556	0					
ANR	4272568	IdentifierDeclType	const char *		4272556	0					
ANR	4272569	Identifier	param		4272556	1					
ANR	4272570	AssignmentExpression	"* param = ""/foo"""		4272556	2		=			
ANR	4272571	Identifier	param		4272556	0					
ANR	4272572	PrimaryExpression	"""/foo"""		4272556	1					
ANR	4272573	IdentifierDeclStatement	"const char * expected = ""foo"" ;"	187:1:6579:6607	4272556	2	True				
ANR	4272574	IdentifierDecl	"* expected = ""foo"""		4272556	0					
ANR	4272575	IdentifierDeclType	const char *		4272556	0					
ANR	4272576	Identifier	expected		4272556	1					
ANR	4272577	AssignmentExpression	"* expected = ""foo"""		4272556	2		=			
ANR	4272578	Identifier	expected		4272556	0					
ANR	4272579	PrimaryExpression	"""foo"""		4272556	1					
ANR	4272580	ExpressionStatement	emit_input_header ( )	188:1:6610:6629	4272556	3	True				
ANR	4272581	CallExpression	emit_input_header ( )		4272556	0					
ANR	4272582	Callee	emit_input_header		4272556	0					
ANR	4272583	Identifier	emit_input_header		4272556	0					
ANR	4272584	ArgumentList			4272556	1					
ANR	4272585	ExpressionStatement	"emit_param ( ""STRING"" , param )"	189:1:6632:6659	4272556	4	True				
ANR	4272586	CallExpression	"emit_param ( ""STRING"" , param )"		4272556	0					
ANR	4272587	Callee	emit_param		4272556	0					
ANR	4272588	Identifier	emit_param		4272556	0					
ANR	4272589	ArgumentList	"""STRING"""		4272556	1					
ANR	4272590	Argument	"""STRING"""		4272556	0					
ANR	4272591	PrimaryExpression	"""STRING"""		4272556	0					
ANR	4272592	Argument	param		4272556	1					
ANR	4272593	Identifier	param		4272556	0					
ANR	4272594	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	190:1:6662:6703	4272556	5	True				
ANR	4272595	IdentifierDecl	* path = condor_basename ( param )		4272556	0					
ANR	4272596	IdentifierDeclType	const char *		4272556	0					
ANR	4272597	Identifier	path		4272556	1					
ANR	4272598	AssignmentExpression	* path = condor_basename ( param )		4272556	2		=			
ANR	4272599	Identifier	path		4272556	0					
ANR	4272600	CallExpression	condor_basename ( param )		4272556	1					
ANR	4272601	Callee	condor_basename		4272556	0					
ANR	4272602	Identifier	condor_basename		4272556	0					
ANR	4272603	ArgumentList	param		4272556	1					
ANR	4272604	Argument	param		4272556	0					
ANR	4272605	Identifier	param		4272556	0					
ANR	4272606	ExpressionStatement	emit_output_expected_header ( )	191:1:6706:6735	4272556	6	True				
ANR	4272607	CallExpression	emit_output_expected_header ( )		4272556	0					
ANR	4272608	Callee	emit_output_expected_header		4272556	0					
ANR	4272609	Identifier	emit_output_expected_header		4272556	0					
ANR	4272610	ArgumentList			4272556	1					
ANR	4272611	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	192:1:6738:6765	4272556	7	True				
ANR	4272612	CallExpression	"emit_retval ( ""%s"" , expected )"		4272556	0					
ANR	4272613	Callee	emit_retval		4272556	0					
ANR	4272614	Identifier	emit_retval		4272556	0					
ANR	4272615	ArgumentList	"""%s"""		4272556	1					
ANR	4272616	Argument	"""%s"""		4272556	0					
ANR	4272617	PrimaryExpression	"""%s"""		4272556	0					
ANR	4272618	Argument	expected		4272556	1					
ANR	4272619	Identifier	expected		4272556	0					
ANR	4272620	ExpressionStatement	emit_output_actual_header ( )	193:1:6768:6795	4272556	8	True				
ANR	4272621	CallExpression	emit_output_actual_header ( )		4272556	0					
ANR	4272622	Callee	emit_output_actual_header		4272556	0					
ANR	4272623	Identifier	emit_output_actual_header		4272556	0					
ANR	4272624	ArgumentList			4272556	1					
ANR	4272625	ExpressionStatement	"emit_retval ( ""%s"" , path )"	194:1:6798:6821	4272556	9	True				
ANR	4272626	CallExpression	"emit_retval ( ""%s"" , path )"		4272556	0					
ANR	4272627	Callee	emit_retval		4272556	0					
ANR	4272628	Identifier	emit_retval		4272556	0					
ANR	4272629	ArgumentList	"""%s"""		4272556	1					
ANR	4272630	Argument	"""%s"""		4272556	0					
ANR	4272631	PrimaryExpression	"""%s"""		4272556	0					
ANR	4272632	Argument	path		4272556	1					
ANR	4272633	Identifier	path		4272556	0					
ANR	4272634	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272556	10					
ANR	4272635	Condition	"strcmp ( path , expected ) != MATCH"	195:4:6827:6857	4272556	0	True				
ANR	4272636	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272556	0		!=			
ANR	4272637	CallExpression	"strcmp ( path , expected )"		4272556	0					
ANR	4272638	Callee	strcmp		4272556	0					
ANR	4272639	Identifier	strcmp		4272556	0					
ANR	4272640	ArgumentList	path		4272556	1					
ANR	4272641	Argument	path		4272556	0					
ANR	4272642	Identifier	path		4272556	0					
ANR	4272643	Argument	expected		4272556	1					
ANR	4272644	Identifier	expected		4272556	0					
ANR	4272645	Identifier	MATCH		4272556	1					
ANR	4272646	CompoundStatement		12:37:388:388	4272556	1					
ANR	4272647	ExpressionStatement	FAIL	196:2:6864:6868	4272556	0	True				
ANR	4272648	Identifier	FAIL		4272556	0					
ANR	4272649	ExpressionStatement	PASS	198:1:6874:6878	4272556	11	True				
ANR	4272650	Identifier	PASS		4272556	0					
ANR	4272651	ReturnType	static bool		4272556	1					
ANR	4272652	Identifier	test_simple_directory_1		4272556	2					
ANR	4272653	ParameterList			4272556	3					
ANR	4272654	CFGEntryNode	ENTRY		4272556		True				
ANR	4272655	CFGExitNode	EXIT		4272556		True				
ANR	4272656	Symbol	strcmp		4272556						
ANR	4272657	Symbol	path		4272556						
ANR	4272658	Symbol	param		4272556						
ANR	4272659	Symbol	expected		4272556						
ANR	4272660	Symbol	condor_basename		4272556						
ANR	4272661	Symbol	MATCH		4272556						
ANR	4272662	Function	test_simple_directory_2	201:0:6883:7331							
ANR	4272663	FunctionDef	test_simple_directory_2 ()		4272662	0					
ANR	4272664	CompoundStatement		201:38:6921:7331	4272662	0					
ANR	4272665	ExpressionStatement	"emit_test ( ""Does a path with a backslash return the directory base name?"" )"	202:1:6924:6997	4272662	0	True				
ANR	4272666	CallExpression	"emit_test ( ""Does a path with a backslash return the directory base name?"" )"		4272662	0					
ANR	4272667	Callee	emit_test		4272662	0					
ANR	4272668	Identifier	emit_test		4272662	0					
ANR	4272669	ArgumentList	"""Does a path with a backslash return the directory base name?"""		4272662	1					
ANR	4272670	Argument	"""Does a path with a backslash return the directory base name?"""		4272662	0					
ANR	4272671	PrimaryExpression	"""Does a path with a backslash return the directory base name?"""		4272662	0					
ANR	4272672	IdentifierDeclStatement	"const char * param = ""\\\\foo"" ;"	203:1:7000:7027	4272662	1	True				
ANR	4272673	IdentifierDecl	"* param = ""\\\\foo"""		4272662	0					
ANR	4272674	IdentifierDeclType	const char *		4272662	0					
ANR	4272675	Identifier	param		4272662	1					
ANR	4272676	AssignmentExpression	"* param = ""\\\\foo"""		4272662	2		=			
ANR	4272677	Identifier	param		4272662	0					
ANR	4272678	PrimaryExpression	"""\\\\foo"""		4272662	1					
ANR	4272679	IdentifierDeclStatement	"const char * expected = ""foo"" ;"	204:1:7030:7058	4272662	2	True				
ANR	4272680	IdentifierDecl	"* expected = ""foo"""		4272662	0					
ANR	4272681	IdentifierDeclType	const char *		4272662	0					
ANR	4272682	Identifier	expected		4272662	1					
ANR	4272683	AssignmentExpression	"* expected = ""foo"""		4272662	2		=			
ANR	4272684	Identifier	expected		4272662	0					
ANR	4272685	PrimaryExpression	"""foo"""		4272662	1					
ANR	4272686	ExpressionStatement	emit_input_header ( )	205:1:7061:7080	4272662	3	True				
ANR	4272687	CallExpression	emit_input_header ( )		4272662	0					
ANR	4272688	Callee	emit_input_header		4272662	0					
ANR	4272689	Identifier	emit_input_header		4272662	0					
ANR	4272690	ArgumentList			4272662	1					
ANR	4272691	ExpressionStatement	"emit_param ( ""STRING"" , param )"	206:1:7083:7110	4272662	4	True				
ANR	4272692	CallExpression	"emit_param ( ""STRING"" , param )"		4272662	0					
ANR	4272693	Callee	emit_param		4272662	0					
ANR	4272694	Identifier	emit_param		4272662	0					
ANR	4272695	ArgumentList	"""STRING"""		4272662	1					
ANR	4272696	Argument	"""STRING"""		4272662	0					
ANR	4272697	PrimaryExpression	"""STRING"""		4272662	0					
ANR	4272698	Argument	param		4272662	1					
ANR	4272699	Identifier	param		4272662	0					
ANR	4272700	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	207:1:7113:7154	4272662	5	True				
ANR	4272701	IdentifierDecl	* path = condor_basename ( param )		4272662	0					
ANR	4272702	IdentifierDeclType	const char *		4272662	0					
ANR	4272703	Identifier	path		4272662	1					
ANR	4272704	AssignmentExpression	* path = condor_basename ( param )		4272662	2		=			
ANR	4272705	Identifier	path		4272662	0					
ANR	4272706	CallExpression	condor_basename ( param )		4272662	1					
ANR	4272707	Callee	condor_basename		4272662	0					
ANR	4272708	Identifier	condor_basename		4272662	0					
ANR	4272709	ArgumentList	param		4272662	1					
ANR	4272710	Argument	param		4272662	0					
ANR	4272711	Identifier	param		4272662	0					
ANR	4272712	ExpressionStatement	emit_output_expected_header ( )	208:1:7157:7186	4272662	6	True				
ANR	4272713	CallExpression	emit_output_expected_header ( )		4272662	0					
ANR	4272714	Callee	emit_output_expected_header		4272662	0					
ANR	4272715	Identifier	emit_output_expected_header		4272662	0					
ANR	4272716	ArgumentList			4272662	1					
ANR	4272717	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	209:1:7189:7216	4272662	7	True				
ANR	4272718	CallExpression	"emit_retval ( ""%s"" , expected )"		4272662	0					
ANR	4272719	Callee	emit_retval		4272662	0					
ANR	4272720	Identifier	emit_retval		4272662	0					
ANR	4272721	ArgumentList	"""%s"""		4272662	1					
ANR	4272722	Argument	"""%s"""		4272662	0					
ANR	4272723	PrimaryExpression	"""%s"""		4272662	0					
ANR	4272724	Argument	expected		4272662	1					
ANR	4272725	Identifier	expected		4272662	0					
ANR	4272726	ExpressionStatement	emit_output_actual_header ( )	210:1:7219:7246	4272662	8	True				
ANR	4272727	CallExpression	emit_output_actual_header ( )		4272662	0					
ANR	4272728	Callee	emit_output_actual_header		4272662	0					
ANR	4272729	Identifier	emit_output_actual_header		4272662	0					
ANR	4272730	ArgumentList			4272662	1					
ANR	4272731	ExpressionStatement	"emit_retval ( ""%s"" , path )"	211:1:7249:7272	4272662	9	True				
ANR	4272732	CallExpression	"emit_retval ( ""%s"" , path )"		4272662	0					
ANR	4272733	Callee	emit_retval		4272662	0					
ANR	4272734	Identifier	emit_retval		4272662	0					
ANR	4272735	ArgumentList	"""%s"""		4272662	1					
ANR	4272736	Argument	"""%s"""		4272662	0					
ANR	4272737	PrimaryExpression	"""%s"""		4272662	0					
ANR	4272738	Argument	path		4272662	1					
ANR	4272739	Identifier	path		4272662	0					
ANR	4272740	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272662	10					
ANR	4272741	Condition	"strcmp ( path , expected ) != MATCH"	212:4:7278:7308	4272662	0	True				
ANR	4272742	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272662	0		!=			
ANR	4272743	CallExpression	"strcmp ( path , expected )"		4272662	0					
ANR	4272744	Callee	strcmp		4272662	0					
ANR	4272745	Identifier	strcmp		4272662	0					
ANR	4272746	ArgumentList	path		4272662	1					
ANR	4272747	Argument	path		4272662	0					
ANR	4272748	Identifier	path		4272662	0					
ANR	4272749	Argument	expected		4272662	1					
ANR	4272750	Identifier	expected		4272662	0					
ANR	4272751	Identifier	MATCH		4272662	1					
ANR	4272752	CompoundStatement		12:37:389:389	4272662	1					
ANR	4272753	ExpressionStatement	FAIL	213:2:7315:7319	4272662	0	True				
ANR	4272754	Identifier	FAIL		4272662	0					
ANR	4272755	ExpressionStatement	PASS	215:1:7325:7329	4272662	11	True				
ANR	4272756	Identifier	PASS		4272662	0					
ANR	4272757	ReturnType	static bool		4272662	1					
ANR	4272758	Identifier	test_simple_directory_2		4272662	2					
ANR	4272759	ParameterList			4272662	3					
ANR	4272760	CFGEntryNode	ENTRY		4272662		True				
ANR	4272761	CFGExitNode	EXIT		4272662		True				
ANR	4272762	Symbol	strcmp		4272662						
ANR	4272763	Symbol	path		4272662						
ANR	4272764	Symbol	param		4272662						
ANR	4272765	Symbol	expected		4272662						
ANR	4272766	Symbol	condor_basename		4272662						
ANR	4272767	Symbol	MATCH		4272662						
ANR	4272768	Function	test_directory_and_file_1	218:0:7334:7790							
ANR	4272769	FunctionDef	test_directory_and_file_1 ()		4272768	0					
ANR	4272770	CompoundStatement		218:40:7374:7790	4272768	0					
ANR	4272771	ExpressionStatement	"emit_test ( ""Does a path with both a directory and file return the file base?"" )"	219:1:7377:7454	4272768	0	True				
ANR	4272772	CallExpression	"emit_test ( ""Does a path with both a directory and file return the file base?"" )"		4272768	0					
ANR	4272773	Callee	emit_test		4272768	0					
ANR	4272774	Identifier	emit_test		4272768	0					
ANR	4272775	ArgumentList	"""Does a path with both a directory and file return the file base?"""		4272768	1					
ANR	4272776	Argument	"""Does a path with both a directory and file return the file base?"""		4272768	0					
ANR	4272777	PrimaryExpression	"""Does a path with both a directory and file return the file base?"""		4272768	0					
ANR	4272778	IdentifierDeclStatement	"const char * param = ""foo/bar"" ;"	220:1:7457:7486	4272768	1	True				
ANR	4272779	IdentifierDecl	"* param = ""foo/bar"""		4272768	0					
ANR	4272780	IdentifierDeclType	const char *		4272768	0					
ANR	4272781	Identifier	param		4272768	1					
ANR	4272782	AssignmentExpression	"* param = ""foo/bar"""		4272768	2		=			
ANR	4272783	Identifier	param		4272768	0					
ANR	4272784	PrimaryExpression	"""foo/bar"""		4272768	1					
ANR	4272785	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	221:1:7489:7517	4272768	2	True				
ANR	4272786	IdentifierDecl	"* expected = ""bar"""		4272768	0					
ANR	4272787	IdentifierDeclType	const char *		4272768	0					
ANR	4272788	Identifier	expected		4272768	1					
ANR	4272789	AssignmentExpression	"* expected = ""bar"""		4272768	2		=			
ANR	4272790	Identifier	expected		4272768	0					
ANR	4272791	PrimaryExpression	"""bar"""		4272768	1					
ANR	4272792	ExpressionStatement	emit_input_header ( )	222:1:7520:7539	4272768	3	True				
ANR	4272793	CallExpression	emit_input_header ( )		4272768	0					
ANR	4272794	Callee	emit_input_header		4272768	0					
ANR	4272795	Identifier	emit_input_header		4272768	0					
ANR	4272796	ArgumentList			4272768	1					
ANR	4272797	ExpressionStatement	"emit_param ( ""STRING"" , param )"	223:1:7542:7569	4272768	4	True				
ANR	4272798	CallExpression	"emit_param ( ""STRING"" , param )"		4272768	0					
ANR	4272799	Callee	emit_param		4272768	0					
ANR	4272800	Identifier	emit_param		4272768	0					
ANR	4272801	ArgumentList	"""STRING"""		4272768	1					
ANR	4272802	Argument	"""STRING"""		4272768	0					
ANR	4272803	PrimaryExpression	"""STRING"""		4272768	0					
ANR	4272804	Argument	param		4272768	1					
ANR	4272805	Identifier	param		4272768	0					
ANR	4272806	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	224:1:7572:7613	4272768	5	True				
ANR	4272807	IdentifierDecl	* path = condor_basename ( param )		4272768	0					
ANR	4272808	IdentifierDeclType	const char *		4272768	0					
ANR	4272809	Identifier	path		4272768	1					
ANR	4272810	AssignmentExpression	* path = condor_basename ( param )		4272768	2		=			
ANR	4272811	Identifier	path		4272768	0					
ANR	4272812	CallExpression	condor_basename ( param )		4272768	1					
ANR	4272813	Callee	condor_basename		4272768	0					
ANR	4272814	Identifier	condor_basename		4272768	0					
ANR	4272815	ArgumentList	param		4272768	1					
ANR	4272816	Argument	param		4272768	0					
ANR	4272817	Identifier	param		4272768	0					
ANR	4272818	ExpressionStatement	emit_output_expected_header ( )	225:1:7616:7645	4272768	6	True				
ANR	4272819	CallExpression	emit_output_expected_header ( )		4272768	0					
ANR	4272820	Callee	emit_output_expected_header		4272768	0					
ANR	4272821	Identifier	emit_output_expected_header		4272768	0					
ANR	4272822	ArgumentList			4272768	1					
ANR	4272823	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	226:1:7648:7675	4272768	7	True				
ANR	4272824	CallExpression	"emit_retval ( ""%s"" , expected )"		4272768	0					
ANR	4272825	Callee	emit_retval		4272768	0					
ANR	4272826	Identifier	emit_retval		4272768	0					
ANR	4272827	ArgumentList	"""%s"""		4272768	1					
ANR	4272828	Argument	"""%s"""		4272768	0					
ANR	4272829	PrimaryExpression	"""%s"""		4272768	0					
ANR	4272830	Argument	expected		4272768	1					
ANR	4272831	Identifier	expected		4272768	0					
ANR	4272832	ExpressionStatement	emit_output_actual_header ( )	227:1:7678:7705	4272768	8	True				
ANR	4272833	CallExpression	emit_output_actual_header ( )		4272768	0					
ANR	4272834	Callee	emit_output_actual_header		4272768	0					
ANR	4272835	Identifier	emit_output_actual_header		4272768	0					
ANR	4272836	ArgumentList			4272768	1					
ANR	4272837	ExpressionStatement	"emit_retval ( ""%s"" , path )"	228:1:7708:7731	4272768	9	True				
ANR	4272838	CallExpression	"emit_retval ( ""%s"" , path )"		4272768	0					
ANR	4272839	Callee	emit_retval		4272768	0					
ANR	4272840	Identifier	emit_retval		4272768	0					
ANR	4272841	ArgumentList	"""%s"""		4272768	1					
ANR	4272842	Argument	"""%s"""		4272768	0					
ANR	4272843	PrimaryExpression	"""%s"""		4272768	0					
ANR	4272844	Argument	path		4272768	1					
ANR	4272845	Identifier	path		4272768	0					
ANR	4272846	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272768	10					
ANR	4272847	Condition	"strcmp ( path , expected ) != MATCH"	229:4:7737:7767	4272768	0	True				
ANR	4272848	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272768	0		!=			
ANR	4272849	CallExpression	"strcmp ( path , expected )"		4272768	0					
ANR	4272850	Callee	strcmp		4272768	0					
ANR	4272851	Identifier	strcmp		4272768	0					
ANR	4272852	ArgumentList	path		4272768	1					
ANR	4272853	Argument	path		4272768	0					
ANR	4272854	Identifier	path		4272768	0					
ANR	4272855	Argument	expected		4272768	1					
ANR	4272856	Identifier	expected		4272768	0					
ANR	4272857	Identifier	MATCH		4272768	1					
ANR	4272858	CompoundStatement		12:37:395:395	4272768	1					
ANR	4272859	ExpressionStatement	FAIL	230:2:7774:7778	4272768	0	True				
ANR	4272860	Identifier	FAIL		4272768	0					
ANR	4272861	ExpressionStatement	PASS	232:1:7784:7788	4272768	11	True				
ANR	4272862	Identifier	PASS		4272768	0					
ANR	4272863	ReturnType	static bool		4272768	1					
ANR	4272864	Identifier	test_directory_and_file_1		4272768	2					
ANR	4272865	ParameterList			4272768	3					
ANR	4272866	CFGEntryNode	ENTRY		4272768		True				
ANR	4272867	CFGExitNode	EXIT		4272768		True				
ANR	4272868	Symbol	strcmp		4272768						
ANR	4272869	Symbol	path		4272768						
ANR	4272870	Symbol	param		4272768						
ANR	4272871	Symbol	expected		4272768						
ANR	4272872	Symbol	condor_basename		4272768						
ANR	4272873	Symbol	MATCH		4272768						
ANR	4272874	Function	test_directory_and_file_2	235:0:7793:8272							
ANR	4272875	FunctionDef	test_directory_and_file_2 ()		4272874	0					
ANR	4272876	CompoundStatement		235:40:7833:8272	4272874	0					
ANR	4272877	ExpressionStatement	"emit_test ( ""Does a path with both a directory and file in the root directory return the base name?"" )"	236:1:7836:7935	4272874	0	True				
ANR	4272878	CallExpression	"emit_test ( ""Does a path with both a directory and file in the root directory return the base name?"" )"		4272874	0					
ANR	4272879	Callee	emit_test		4272874	0					
ANR	4272880	Identifier	emit_test		4272874	0					
ANR	4272881	ArgumentList	"""Does a path with both a directory and file in the root directory return the base name?"""		4272874	1					
ANR	4272882	Argument	"""Does a path with both a directory and file in the root directory return the base name?"""		4272874	0					
ANR	4272883	PrimaryExpression	"""Does a path with both a directory and file in the root directory return the base name?"""		4272874	0					
ANR	4272884	IdentifierDeclStatement	"const char * param = ""/foo/bar"" ;"	237:1:7938:7968	4272874	1	True				
ANR	4272885	IdentifierDecl	"* param = ""/foo/bar"""		4272874	0					
ANR	4272886	IdentifierDeclType	const char *		4272874	0					
ANR	4272887	Identifier	param		4272874	1					
ANR	4272888	AssignmentExpression	"* param = ""/foo/bar"""		4272874	2		=			
ANR	4272889	Identifier	param		4272874	0					
ANR	4272890	PrimaryExpression	"""/foo/bar"""		4272874	1					
ANR	4272891	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	238:1:7971:7999	4272874	2	True				
ANR	4272892	IdentifierDecl	"* expected = ""bar"""		4272874	0					
ANR	4272893	IdentifierDeclType	const char *		4272874	0					
ANR	4272894	Identifier	expected		4272874	1					
ANR	4272895	AssignmentExpression	"* expected = ""bar"""		4272874	2		=			
ANR	4272896	Identifier	expected		4272874	0					
ANR	4272897	PrimaryExpression	"""bar"""		4272874	1					
ANR	4272898	ExpressionStatement	emit_input_header ( )	239:1:8002:8021	4272874	3	True				
ANR	4272899	CallExpression	emit_input_header ( )		4272874	0					
ANR	4272900	Callee	emit_input_header		4272874	0					
ANR	4272901	Identifier	emit_input_header		4272874	0					
ANR	4272902	ArgumentList			4272874	1					
ANR	4272903	ExpressionStatement	"emit_param ( ""STRING"" , param )"	240:1:8024:8051	4272874	4	True				
ANR	4272904	CallExpression	"emit_param ( ""STRING"" , param )"		4272874	0					
ANR	4272905	Callee	emit_param		4272874	0					
ANR	4272906	Identifier	emit_param		4272874	0					
ANR	4272907	ArgumentList	"""STRING"""		4272874	1					
ANR	4272908	Argument	"""STRING"""		4272874	0					
ANR	4272909	PrimaryExpression	"""STRING"""		4272874	0					
ANR	4272910	Argument	param		4272874	1					
ANR	4272911	Identifier	param		4272874	0					
ANR	4272912	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	241:1:8054:8095	4272874	5	True				
ANR	4272913	IdentifierDecl	* path = condor_basename ( param )		4272874	0					
ANR	4272914	IdentifierDeclType	const char *		4272874	0					
ANR	4272915	Identifier	path		4272874	1					
ANR	4272916	AssignmentExpression	* path = condor_basename ( param )		4272874	2		=			
ANR	4272917	Identifier	path		4272874	0					
ANR	4272918	CallExpression	condor_basename ( param )		4272874	1					
ANR	4272919	Callee	condor_basename		4272874	0					
ANR	4272920	Identifier	condor_basename		4272874	0					
ANR	4272921	ArgumentList	param		4272874	1					
ANR	4272922	Argument	param		4272874	0					
ANR	4272923	Identifier	param		4272874	0					
ANR	4272924	ExpressionStatement	emit_output_expected_header ( )	242:1:8098:8127	4272874	6	True				
ANR	4272925	CallExpression	emit_output_expected_header ( )		4272874	0					
ANR	4272926	Callee	emit_output_expected_header		4272874	0					
ANR	4272927	Identifier	emit_output_expected_header		4272874	0					
ANR	4272928	ArgumentList			4272874	1					
ANR	4272929	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	243:1:8130:8157	4272874	7	True				
ANR	4272930	CallExpression	"emit_retval ( ""%s"" , expected )"		4272874	0					
ANR	4272931	Callee	emit_retval		4272874	0					
ANR	4272932	Identifier	emit_retval		4272874	0					
ANR	4272933	ArgumentList	"""%s"""		4272874	1					
ANR	4272934	Argument	"""%s"""		4272874	0					
ANR	4272935	PrimaryExpression	"""%s"""		4272874	0					
ANR	4272936	Argument	expected		4272874	1					
ANR	4272937	Identifier	expected		4272874	0					
ANR	4272938	ExpressionStatement	emit_output_actual_header ( )	244:1:8160:8187	4272874	8	True				
ANR	4272939	CallExpression	emit_output_actual_header ( )		4272874	0					
ANR	4272940	Callee	emit_output_actual_header		4272874	0					
ANR	4272941	Identifier	emit_output_actual_header		4272874	0					
ANR	4272942	ArgumentList			4272874	1					
ANR	4272943	ExpressionStatement	"emit_retval ( ""%s"" , path )"	245:1:8190:8213	4272874	9	True				
ANR	4272944	CallExpression	"emit_retval ( ""%s"" , path )"		4272874	0					
ANR	4272945	Callee	emit_retval		4272874	0					
ANR	4272946	Identifier	emit_retval		4272874	0					
ANR	4272947	ArgumentList	"""%s"""		4272874	1					
ANR	4272948	Argument	"""%s"""		4272874	0					
ANR	4272949	PrimaryExpression	"""%s"""		4272874	0					
ANR	4272950	Argument	path		4272874	1					
ANR	4272951	Identifier	path		4272874	0					
ANR	4272952	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272874	10					
ANR	4272953	Condition	"strcmp ( path , expected ) != MATCH"	246:4:8219:8249	4272874	0	True				
ANR	4272954	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272874	0		!=			
ANR	4272955	CallExpression	"strcmp ( path , expected )"		4272874	0					
ANR	4272956	Callee	strcmp		4272874	0					
ANR	4272957	Identifier	strcmp		4272874	0					
ANR	4272958	ArgumentList	path		4272874	1					
ANR	4272959	Argument	path		4272874	0					
ANR	4272960	Identifier	path		4272874	0					
ANR	4272961	Argument	expected		4272874	1					
ANR	4272962	Identifier	expected		4272874	0					
ANR	4272963	Identifier	MATCH		4272874	1					
ANR	4272964	CompoundStatement		12:37:418:418	4272874	1					
ANR	4272965	ExpressionStatement	FAIL	247:2:8256:8260	4272874	0	True				
ANR	4272966	Identifier	FAIL		4272874	0					
ANR	4272967	ExpressionStatement	PASS	249:1:8266:8270	4272874	11	True				
ANR	4272968	Identifier	PASS		4272874	0					
ANR	4272969	ReturnType	static bool		4272874	1					
ANR	4272970	Identifier	test_directory_and_file_2		4272874	2					
ANR	4272971	ParameterList			4272874	3					
ANR	4272972	CFGEntryNode	ENTRY		4272874		True				
ANR	4272973	CFGExitNode	EXIT		4272874		True				
ANR	4272974	Symbol	strcmp		4272874						
ANR	4272975	Symbol	path		4272874						
ANR	4272976	Symbol	param		4272874						
ANR	4272977	Symbol	expected		4272874						
ANR	4272978	Symbol	condor_basename		4272874						
ANR	4272979	Symbol	MATCH		4272874						
ANR	4272980	Function	test_root_directory	252:0:8275:8736							
ANR	4272981	FunctionDef	test_root_directory ()		4272980	0					
ANR	4272982	CompoundStatement		252:34:8309:8736	4272980	0					
ANR	4272983	ExpressionStatement	"emit_test ( ""Does a path with a backslash in the root directory return the base name?"" )"	253:1:8312:8397	4272980	0	True				
ANR	4272984	CallExpression	"emit_test ( ""Does a path with a backslash in the root directory return the base name?"" )"		4272980	0					
ANR	4272985	Callee	emit_test		4272980	0					
ANR	4272986	Identifier	emit_test		4272980	0					
ANR	4272987	ArgumentList	"""Does a path with a backslash in the root directory return the base name?"""		4272980	1					
ANR	4272988	Argument	"""Does a path with a backslash in the root directory return the base name?"""		4272980	0					
ANR	4272989	PrimaryExpression	"""Does a path with a backslash in the root directory return the base name?"""		4272980	0					
ANR	4272990	IdentifierDeclStatement	"const char * param = ""\\\\foo\\\\bar"" ;"	254:1:8400:8432	4272980	1	True				
ANR	4272991	IdentifierDecl	"* param = ""\\\\foo\\\\bar"""		4272980	0					
ANR	4272992	IdentifierDeclType	const char *		4272980	0					
ANR	4272993	Identifier	param		4272980	1					
ANR	4272994	AssignmentExpression	"* param = ""\\\\foo\\\\bar"""		4272980	2		=			
ANR	4272995	Identifier	param		4272980	0					
ANR	4272996	PrimaryExpression	"""\\\\foo\\\\bar"""		4272980	1					
ANR	4272997	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	255:1:8435:8463	4272980	2	True				
ANR	4272998	IdentifierDecl	"* expected = ""bar"""		4272980	0					
ANR	4272999	IdentifierDeclType	const char *		4272980	0					
ANR	4273000	Identifier	expected		4272980	1					
ANR	4273001	AssignmentExpression	"* expected = ""bar"""		4272980	2		=			
ANR	4273002	Identifier	expected		4272980	0					
ANR	4273003	PrimaryExpression	"""bar"""		4272980	1					
ANR	4273004	ExpressionStatement	emit_input_header ( )	256:1:8466:8485	4272980	3	True				
ANR	4273005	CallExpression	emit_input_header ( )		4272980	0					
ANR	4273006	Callee	emit_input_header		4272980	0					
ANR	4273007	Identifier	emit_input_header		4272980	0					
ANR	4273008	ArgumentList			4272980	1					
ANR	4273009	ExpressionStatement	"emit_param ( ""STRING"" , param )"	257:1:8488:8515	4272980	4	True				
ANR	4273010	CallExpression	"emit_param ( ""STRING"" , param )"		4272980	0					
ANR	4273011	Callee	emit_param		4272980	0					
ANR	4273012	Identifier	emit_param		4272980	0					
ANR	4273013	ArgumentList	"""STRING"""		4272980	1					
ANR	4273014	Argument	"""STRING"""		4272980	0					
ANR	4273015	PrimaryExpression	"""STRING"""		4272980	0					
ANR	4273016	Argument	param		4272980	1					
ANR	4273017	Identifier	param		4272980	0					
ANR	4273018	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	258:1:8518:8559	4272980	5	True				
ANR	4273019	IdentifierDecl	* path = condor_basename ( param )		4272980	0					
ANR	4273020	IdentifierDeclType	const char *		4272980	0					
ANR	4273021	Identifier	path		4272980	1					
ANR	4273022	AssignmentExpression	* path = condor_basename ( param )		4272980	2		=			
ANR	4273023	Identifier	path		4272980	0					
ANR	4273024	CallExpression	condor_basename ( param )		4272980	1					
ANR	4273025	Callee	condor_basename		4272980	0					
ANR	4273026	Identifier	condor_basename		4272980	0					
ANR	4273027	ArgumentList	param		4272980	1					
ANR	4273028	Argument	param		4272980	0					
ANR	4273029	Identifier	param		4272980	0					
ANR	4273030	ExpressionStatement	emit_output_expected_header ( )	259:1:8562:8591	4272980	6	True				
ANR	4273031	CallExpression	emit_output_expected_header ( )		4272980	0					
ANR	4273032	Callee	emit_output_expected_header		4272980	0					
ANR	4273033	Identifier	emit_output_expected_header		4272980	0					
ANR	4273034	ArgumentList			4272980	1					
ANR	4273035	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	260:1:8594:8621	4272980	7	True				
ANR	4273036	CallExpression	"emit_retval ( ""%s"" , expected )"		4272980	0					
ANR	4273037	Callee	emit_retval		4272980	0					
ANR	4273038	Identifier	emit_retval		4272980	0					
ANR	4273039	ArgumentList	"""%s"""		4272980	1					
ANR	4273040	Argument	"""%s"""		4272980	0					
ANR	4273041	PrimaryExpression	"""%s"""		4272980	0					
ANR	4273042	Argument	expected		4272980	1					
ANR	4273043	Identifier	expected		4272980	0					
ANR	4273044	ExpressionStatement	emit_output_actual_header ( )	261:1:8624:8651	4272980	8	True				
ANR	4273045	CallExpression	emit_output_actual_header ( )		4272980	0					
ANR	4273046	Callee	emit_output_actual_header		4272980	0					
ANR	4273047	Identifier	emit_output_actual_header		4272980	0					
ANR	4273048	ArgumentList			4272980	1					
ANR	4273049	ExpressionStatement	"emit_retval ( ""%s"" , path )"	262:1:8654:8677	4272980	9	True				
ANR	4273050	CallExpression	"emit_retval ( ""%s"" , path )"		4272980	0					
ANR	4273051	Callee	emit_retval		4272980	0					
ANR	4273052	Identifier	emit_retval		4272980	0					
ANR	4273053	ArgumentList	"""%s"""		4272980	1					
ANR	4273054	Argument	"""%s"""		4272980	0					
ANR	4273055	PrimaryExpression	"""%s"""		4272980	0					
ANR	4273056	Argument	path		4272980	1					
ANR	4273057	Identifier	path		4272980	0					
ANR	4273058	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4272980	10					
ANR	4273059	Condition	"strcmp ( path , expected ) != MATCH"	263:4:8683:8713	4272980	0	True				
ANR	4273060	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4272980	0		!=			
ANR	4273061	CallExpression	"strcmp ( path , expected )"		4272980	0					
ANR	4273062	Callee	strcmp		4272980	0					
ANR	4273063	Identifier	strcmp		4272980	0					
ANR	4273064	ArgumentList	path		4272980	1					
ANR	4273065	Argument	path		4272980	0					
ANR	4273066	Identifier	path		4272980	0					
ANR	4273067	Argument	expected		4272980	1					
ANR	4273068	Identifier	expected		4272980	0					
ANR	4273069	Identifier	MATCH		4272980	1					
ANR	4273070	CompoundStatement		12:37:406:406	4272980	1					
ANR	4273071	ExpressionStatement	FAIL	264:2:8720:8724	4272980	0	True				
ANR	4273072	Identifier	FAIL		4272980	0					
ANR	4273073	ExpressionStatement	PASS	266:1:8730:8734	4272980	11	True				
ANR	4273074	Identifier	PASS		4272980	0					
ANR	4273075	ReturnType	static bool		4272980	1					
ANR	4273076	Identifier	test_root_directory		4272980	2					
ANR	4273077	ParameterList			4272980	3					
ANR	4273078	CFGEntryNode	ENTRY		4272980		True				
ANR	4273079	CFGExitNode	EXIT		4272980		True				
ANR	4273080	Symbol	strcmp		4272980						
ANR	4273081	Symbol	path		4272980						
ANR	4273082	Symbol	param		4272980						
ANR	4273083	Symbol	expected		4272980						
ANR	4273084	Symbol	condor_basename		4272980						
ANR	4273085	Symbol	MATCH		4272980						
ANR	4273086	Function	test_directory_and_directory	269:0:8739:9189							
ANR	4273087	FunctionDef	test_directory_and_directory ()		4273086	0					
ANR	4273088	CompoundStatement		269:43:8782:9189	4273086	0					
ANR	4273089	ExpressionStatement	"emit_test ( ""Does a path with two directories return the empty string?"" )"	270:1:8785:8855	4273086	0	True				
ANR	4273090	CallExpression	"emit_test ( ""Does a path with two directories return the empty string?"" )"		4273086	0					
ANR	4273091	Callee	emit_test		4273086	0					
ANR	4273092	Identifier	emit_test		4273086	0					
ANR	4273093	ArgumentList	"""Does a path with two directories return the empty string?"""		4273086	1					
ANR	4273094	Argument	"""Does a path with two directories return the empty string?"""		4273086	0					
ANR	4273095	PrimaryExpression	"""Does a path with two directories return the empty string?"""		4273086	0					
ANR	4273096	IdentifierDeclStatement	"const char * param = ""foo/bar/"" ;"	271:1:8858:8888	4273086	1	True				
ANR	4273097	IdentifierDecl	"* param = ""foo/bar/"""		4273086	0					
ANR	4273098	IdentifierDeclType	const char *		4273086	0					
ANR	4273099	Identifier	param		4273086	1					
ANR	4273100	AssignmentExpression	"* param = ""foo/bar/"""		4273086	2		=			
ANR	4273101	Identifier	param		4273086	0					
ANR	4273102	PrimaryExpression	"""foo/bar/"""		4273086	1					
ANR	4273103	IdentifierDeclStatement	"const char * expected = """" ;"	272:1:8891:8916	4273086	2	True				
ANR	4273104	IdentifierDecl	"* expected = """""		4273086	0					
ANR	4273105	IdentifierDeclType	const char *		4273086	0					
ANR	4273106	Identifier	expected		4273086	1					
ANR	4273107	AssignmentExpression	"* expected = """""		4273086	2		=			
ANR	4273108	Identifier	expected		4273086	0					
ANR	4273109	PrimaryExpression	""""""		4273086	1					
ANR	4273110	ExpressionStatement	emit_input_header ( )	273:1:8919:8938	4273086	3	True				
ANR	4273111	CallExpression	emit_input_header ( )		4273086	0					
ANR	4273112	Callee	emit_input_header		4273086	0					
ANR	4273113	Identifier	emit_input_header		4273086	0					
ANR	4273114	ArgumentList			4273086	1					
ANR	4273115	ExpressionStatement	"emit_param ( ""STRING"" , param )"	274:1:8941:8968	4273086	4	True				
ANR	4273116	CallExpression	"emit_param ( ""STRING"" , param )"		4273086	0					
ANR	4273117	Callee	emit_param		4273086	0					
ANR	4273118	Identifier	emit_param		4273086	0					
ANR	4273119	ArgumentList	"""STRING"""		4273086	1					
ANR	4273120	Argument	"""STRING"""		4273086	0					
ANR	4273121	PrimaryExpression	"""STRING"""		4273086	0					
ANR	4273122	Argument	param		4273086	1					
ANR	4273123	Identifier	param		4273086	0					
ANR	4273124	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	275:1:8971:9012	4273086	5	True				
ANR	4273125	IdentifierDecl	* path = condor_basename ( param )		4273086	0					
ANR	4273126	IdentifierDeclType	const char *		4273086	0					
ANR	4273127	Identifier	path		4273086	1					
ANR	4273128	AssignmentExpression	* path = condor_basename ( param )		4273086	2		=			
ANR	4273129	Identifier	path		4273086	0					
ANR	4273130	CallExpression	condor_basename ( param )		4273086	1					
ANR	4273131	Callee	condor_basename		4273086	0					
ANR	4273132	Identifier	condor_basename		4273086	0					
ANR	4273133	ArgumentList	param		4273086	1					
ANR	4273134	Argument	param		4273086	0					
ANR	4273135	Identifier	param		4273086	0					
ANR	4273136	ExpressionStatement	emit_output_expected_header ( )	276:1:9015:9044	4273086	6	True				
ANR	4273137	CallExpression	emit_output_expected_header ( )		4273086	0					
ANR	4273138	Callee	emit_output_expected_header		4273086	0					
ANR	4273139	Identifier	emit_output_expected_header		4273086	0					
ANR	4273140	ArgumentList			4273086	1					
ANR	4273141	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	277:1:9047:9074	4273086	7	True				
ANR	4273142	CallExpression	"emit_retval ( ""%s"" , expected )"		4273086	0					
ANR	4273143	Callee	emit_retval		4273086	0					
ANR	4273144	Identifier	emit_retval		4273086	0					
ANR	4273145	ArgumentList	"""%s"""		4273086	1					
ANR	4273146	Argument	"""%s"""		4273086	0					
ANR	4273147	PrimaryExpression	"""%s"""		4273086	0					
ANR	4273148	Argument	expected		4273086	1					
ANR	4273149	Identifier	expected		4273086	0					
ANR	4273150	ExpressionStatement	emit_output_actual_header ( )	278:1:9077:9104	4273086	8	True				
ANR	4273151	CallExpression	emit_output_actual_header ( )		4273086	0					
ANR	4273152	Callee	emit_output_actual_header		4273086	0					
ANR	4273153	Identifier	emit_output_actual_header		4273086	0					
ANR	4273154	ArgumentList			4273086	1					
ANR	4273155	ExpressionStatement	"emit_retval ( ""%s"" , path )"	279:1:9107:9130	4273086	9	True				
ANR	4273156	CallExpression	"emit_retval ( ""%s"" , path )"		4273086	0					
ANR	4273157	Callee	emit_retval		4273086	0					
ANR	4273158	Identifier	emit_retval		4273086	0					
ANR	4273159	ArgumentList	"""%s"""		4273086	1					
ANR	4273160	Argument	"""%s"""		4273086	0					
ANR	4273161	PrimaryExpression	"""%s"""		4273086	0					
ANR	4273162	Argument	path		4273086	1					
ANR	4273163	Identifier	path		4273086	0					
ANR	4273164	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273086	10					
ANR	4273165	Condition	"strcmp ( path , expected ) != MATCH"	280:4:9136:9166	4273086	0	True				
ANR	4273166	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273086	0		!=			
ANR	4273167	CallExpression	"strcmp ( path , expected )"		4273086	0					
ANR	4273168	Callee	strcmp		4273086	0					
ANR	4273169	Identifier	strcmp		4273086	0					
ANR	4273170	ArgumentList	path		4273086	1					
ANR	4273171	Argument	path		4273086	0					
ANR	4273172	Identifier	path		4273086	0					
ANR	4273173	Argument	expected		4273086	1					
ANR	4273174	Identifier	expected		4273086	0					
ANR	4273175	Identifier	MATCH		4273086	1					
ANR	4273176	CompoundStatement		12:37:386:386	4273086	1					
ANR	4273177	ExpressionStatement	FAIL	281:2:9173:9177	4273086	0	True				
ANR	4273178	Identifier	FAIL		4273086	0					
ANR	4273179	ExpressionStatement	PASS	283:1:9183:9187	4273086	11	True				
ANR	4273180	Identifier	PASS		4273086	0					
ANR	4273181	ReturnType	static bool		4273086	1					
ANR	4273182	Identifier	test_directory_and_directory		4273086	2					
ANR	4273183	ParameterList			4273086	3					
ANR	4273184	CFGEntryNode	ENTRY		4273086		True				
ANR	4273185	CFGExitNode	EXIT		4273086		True				
ANR	4273186	Symbol	strcmp		4273086						
ANR	4273187	Symbol	path		4273086						
ANR	4273188	Symbol	param		4273086						
ANR	4273189	Symbol	expected		4273086						
ANR	4273190	Symbol	condor_basename		4273086						
ANR	4273191	Symbol	MATCH		4273086						
ANR	4273192	Function	test_directory_and_directory_in_root	286:0:9192:9673							
ANR	4273193	FunctionDef	test_directory_and_directory_in_root ()		4273192	0					
ANR	4273194	CompoundStatement		286:51:9243:9673	4273192	0					
ANR	4273195	ExpressionStatement	"emit_test ( ""Does a path with two directories in the root directory return the empty string?"" )"	287:1:9246:9338	4273192	0	True				
ANR	4273196	CallExpression	"emit_test ( ""Does a path with two directories in the root directory return the empty string?"" )"		4273192	0					
ANR	4273197	Callee	emit_test		4273192	0					
ANR	4273198	Identifier	emit_test		4273192	0					
ANR	4273199	ArgumentList	"""Does a path with two directories in the root directory return the empty string?"""		4273192	1					
ANR	4273200	Argument	"""Does a path with two directories in the root directory return the empty string?"""		4273192	0					
ANR	4273201	PrimaryExpression	"""Does a path with two directories in the root directory return the empty string?"""		4273192	0					
ANR	4273202	IdentifierDeclStatement	"const char * param = ""/foo/bar/"" ;"	288:1:9341:9372	4273192	1	True				
ANR	4273203	IdentifierDecl	"* param = ""/foo/bar/"""		4273192	0					
ANR	4273204	IdentifierDeclType	const char *		4273192	0					
ANR	4273205	Identifier	param		4273192	1					
ANR	4273206	AssignmentExpression	"* param = ""/foo/bar/"""		4273192	2		=			
ANR	4273207	Identifier	param		4273192	0					
ANR	4273208	PrimaryExpression	"""/foo/bar/"""		4273192	1					
ANR	4273209	IdentifierDeclStatement	"const char * expected = """" ;"	289:1:9375:9400	4273192	2	True				
ANR	4273210	IdentifierDecl	"* expected = """""		4273192	0					
ANR	4273211	IdentifierDeclType	const char *		4273192	0					
ANR	4273212	Identifier	expected		4273192	1					
ANR	4273213	AssignmentExpression	"* expected = """""		4273192	2		=			
ANR	4273214	Identifier	expected		4273192	0					
ANR	4273215	PrimaryExpression	""""""		4273192	1					
ANR	4273216	ExpressionStatement	emit_input_header ( )	290:1:9403:9422	4273192	3	True				
ANR	4273217	CallExpression	emit_input_header ( )		4273192	0					
ANR	4273218	Callee	emit_input_header		4273192	0					
ANR	4273219	Identifier	emit_input_header		4273192	0					
ANR	4273220	ArgumentList			4273192	1					
ANR	4273221	ExpressionStatement	"emit_param ( ""STRING"" , param )"	291:1:9425:9452	4273192	4	True				
ANR	4273222	CallExpression	"emit_param ( ""STRING"" , param )"		4273192	0					
ANR	4273223	Callee	emit_param		4273192	0					
ANR	4273224	Identifier	emit_param		4273192	0					
ANR	4273225	ArgumentList	"""STRING"""		4273192	1					
ANR	4273226	Argument	"""STRING"""		4273192	0					
ANR	4273227	PrimaryExpression	"""STRING"""		4273192	0					
ANR	4273228	Argument	param		4273192	1					
ANR	4273229	Identifier	param		4273192	0					
ANR	4273230	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	292:1:9455:9496	4273192	5	True				
ANR	4273231	IdentifierDecl	* path = condor_basename ( param )		4273192	0					
ANR	4273232	IdentifierDeclType	const char *		4273192	0					
ANR	4273233	Identifier	path		4273192	1					
ANR	4273234	AssignmentExpression	* path = condor_basename ( param )		4273192	2		=			
ANR	4273235	Identifier	path		4273192	0					
ANR	4273236	CallExpression	condor_basename ( param )		4273192	1					
ANR	4273237	Callee	condor_basename		4273192	0					
ANR	4273238	Identifier	condor_basename		4273192	0					
ANR	4273239	ArgumentList	param		4273192	1					
ANR	4273240	Argument	param		4273192	0					
ANR	4273241	Identifier	param		4273192	0					
ANR	4273242	ExpressionStatement	emit_output_expected_header ( )	293:1:9499:9528	4273192	6	True				
ANR	4273243	CallExpression	emit_output_expected_header ( )		4273192	0					
ANR	4273244	Callee	emit_output_expected_header		4273192	0					
ANR	4273245	Identifier	emit_output_expected_header		4273192	0					
ANR	4273246	ArgumentList			4273192	1					
ANR	4273247	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	294:1:9531:9558	4273192	7	True				
ANR	4273248	CallExpression	"emit_retval ( ""%s"" , expected )"		4273192	0					
ANR	4273249	Callee	emit_retval		4273192	0					
ANR	4273250	Identifier	emit_retval		4273192	0					
ANR	4273251	ArgumentList	"""%s"""		4273192	1					
ANR	4273252	Argument	"""%s"""		4273192	0					
ANR	4273253	PrimaryExpression	"""%s"""		4273192	0					
ANR	4273254	Argument	expected		4273192	1					
ANR	4273255	Identifier	expected		4273192	0					
ANR	4273256	ExpressionStatement	emit_output_actual_header ( )	295:1:9561:9588	4273192	8	True				
ANR	4273257	CallExpression	emit_output_actual_header ( )		4273192	0					
ANR	4273258	Callee	emit_output_actual_header		4273192	0					
ANR	4273259	Identifier	emit_output_actual_header		4273192	0					
ANR	4273260	ArgumentList			4273192	1					
ANR	4273261	ExpressionStatement	"emit_retval ( ""%s"" , path )"	296:1:9591:9614	4273192	9	True				
ANR	4273262	CallExpression	"emit_retval ( ""%s"" , path )"		4273192	0					
ANR	4273263	Callee	emit_retval		4273192	0					
ANR	4273264	Identifier	emit_retval		4273192	0					
ANR	4273265	ArgumentList	"""%s"""		4273192	1					
ANR	4273266	Argument	"""%s"""		4273192	0					
ANR	4273267	PrimaryExpression	"""%s"""		4273192	0					
ANR	4273268	Argument	path		4273192	1					
ANR	4273269	Identifier	path		4273192	0					
ANR	4273270	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273192	10					
ANR	4273271	Condition	"strcmp ( path , expected ) != MATCH"	297:4:9620:9650	4273192	0	True				
ANR	4273272	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273192	0		!=			
ANR	4273273	CallExpression	"strcmp ( path , expected )"		4273192	0					
ANR	4273274	Callee	strcmp		4273192	0					
ANR	4273275	Identifier	strcmp		4273192	0					
ANR	4273276	ArgumentList	path		4273192	1					
ANR	4273277	Argument	path		4273192	0					
ANR	4273278	Identifier	path		4273192	0					
ANR	4273279	Argument	expected		4273192	1					
ANR	4273280	Identifier	expected		4273192	0					
ANR	4273281	Identifier	MATCH		4273192	1					
ANR	4273282	CompoundStatement		12:37:409:409	4273192	1					
ANR	4273283	ExpressionStatement	FAIL	298:2:9657:9661	4273192	0	True				
ANR	4273284	Identifier	FAIL		4273192	0					
ANR	4273285	ExpressionStatement	PASS	300:1:9667:9671	4273192	11	True				
ANR	4273286	Identifier	PASS		4273192	0					
ANR	4273287	ReturnType	static bool		4273192	1					
ANR	4273288	Identifier	test_directory_and_directory_in_root		4273192	2					
ANR	4273289	ParameterList			4273192	3					
ANR	4273290	CFGEntryNode	ENTRY		4273192		True				
ANR	4273291	CFGExitNode	EXIT		4273192		True				
ANR	4273292	Symbol	strcmp		4273192						
ANR	4273293	Symbol	path		4273192						
ANR	4273294	Symbol	param		4273192						
ANR	4273295	Symbol	expected		4273192						
ANR	4273296	Symbol	condor_basename		4273192						
ANR	4273297	Symbol	MATCH		4273192						
ANR	4273298	Function	test_forward_slash	303:0:9676:10114							
ANR	4273299	FunctionDef	test_forward_slash ()		4273298	0					
ANR	4273300	CompoundStatement		303:33:9709:10114	4273298	0					
ANR	4273301	ExpressionStatement	"emit_test ( ""Does a path with only a forward slash return the empty string?"" )"	304:1:9712:9787	4273298	0	True				
ANR	4273302	CallExpression	"emit_test ( ""Does a path with only a forward slash return the empty string?"" )"		4273298	0					
ANR	4273303	Callee	emit_test		4273298	0					
ANR	4273304	Identifier	emit_test		4273298	0					
ANR	4273305	ArgumentList	"""Does a path with only a forward slash return the empty string?"""		4273298	1					
ANR	4273306	Argument	"""Does a path with only a forward slash return the empty string?"""		4273298	0					
ANR	4273307	PrimaryExpression	"""Does a path with only a forward slash return the empty string?"""		4273298	0					
ANR	4273308	IdentifierDeclStatement	"const char * param = ""/"" ;"	305:1:9790:9813	4273298	1	True				
ANR	4273309	IdentifierDecl	"* param = ""/"""		4273298	0					
ANR	4273310	IdentifierDeclType	const char *		4273298	0					
ANR	4273311	Identifier	param		4273298	1					
ANR	4273312	AssignmentExpression	"* param = ""/"""		4273298	2		=			
ANR	4273313	Identifier	param		4273298	0					
ANR	4273314	PrimaryExpression	"""/"""		4273298	1					
ANR	4273315	IdentifierDeclStatement	"const char * expected = """" ;"	306:1:9816:9841	4273298	2	True				
ANR	4273316	IdentifierDecl	"* expected = """""		4273298	0					
ANR	4273317	IdentifierDeclType	const char *		4273298	0					
ANR	4273318	Identifier	expected		4273298	1					
ANR	4273319	AssignmentExpression	"* expected = """""		4273298	2		=			
ANR	4273320	Identifier	expected		4273298	0					
ANR	4273321	PrimaryExpression	""""""		4273298	1					
ANR	4273322	ExpressionStatement	emit_input_header ( )	307:1:9844:9863	4273298	3	True				
ANR	4273323	CallExpression	emit_input_header ( )		4273298	0					
ANR	4273324	Callee	emit_input_header		4273298	0					
ANR	4273325	Identifier	emit_input_header		4273298	0					
ANR	4273326	ArgumentList			4273298	1					
ANR	4273327	ExpressionStatement	"emit_param ( ""STRING"" , param )"	308:1:9866:9893	4273298	4	True				
ANR	4273328	CallExpression	"emit_param ( ""STRING"" , param )"		4273298	0					
ANR	4273329	Callee	emit_param		4273298	0					
ANR	4273330	Identifier	emit_param		4273298	0					
ANR	4273331	ArgumentList	"""STRING"""		4273298	1					
ANR	4273332	Argument	"""STRING"""		4273298	0					
ANR	4273333	PrimaryExpression	"""STRING"""		4273298	0					
ANR	4273334	Argument	param		4273298	1					
ANR	4273335	Identifier	param		4273298	0					
ANR	4273336	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	309:1:9896:9937	4273298	5	True				
ANR	4273337	IdentifierDecl	* path = condor_basename ( param )		4273298	0					
ANR	4273338	IdentifierDeclType	const char *		4273298	0					
ANR	4273339	Identifier	path		4273298	1					
ANR	4273340	AssignmentExpression	* path = condor_basename ( param )		4273298	2		=			
ANR	4273341	Identifier	path		4273298	0					
ANR	4273342	CallExpression	condor_basename ( param )		4273298	1					
ANR	4273343	Callee	condor_basename		4273298	0					
ANR	4273344	Identifier	condor_basename		4273298	0					
ANR	4273345	ArgumentList	param		4273298	1					
ANR	4273346	Argument	param		4273298	0					
ANR	4273347	Identifier	param		4273298	0					
ANR	4273348	ExpressionStatement	emit_output_expected_header ( )	310:1:9940:9969	4273298	6	True				
ANR	4273349	CallExpression	emit_output_expected_header ( )		4273298	0					
ANR	4273350	Callee	emit_output_expected_header		4273298	0					
ANR	4273351	Identifier	emit_output_expected_header		4273298	0					
ANR	4273352	ArgumentList			4273298	1					
ANR	4273353	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	311:1:9972:9999	4273298	7	True				
ANR	4273354	CallExpression	"emit_retval ( ""%s"" , expected )"		4273298	0					
ANR	4273355	Callee	emit_retval		4273298	0					
ANR	4273356	Identifier	emit_retval		4273298	0					
ANR	4273357	ArgumentList	"""%s"""		4273298	1					
ANR	4273358	Argument	"""%s"""		4273298	0					
ANR	4273359	PrimaryExpression	"""%s"""		4273298	0					
ANR	4273360	Argument	expected		4273298	1					
ANR	4273361	Identifier	expected		4273298	0					
ANR	4273362	ExpressionStatement	emit_output_actual_header ( )	312:1:10002:10029	4273298	8	True				
ANR	4273363	CallExpression	emit_output_actual_header ( )		4273298	0					
ANR	4273364	Callee	emit_output_actual_header		4273298	0					
ANR	4273365	Identifier	emit_output_actual_header		4273298	0					
ANR	4273366	ArgumentList			4273298	1					
ANR	4273367	ExpressionStatement	"emit_retval ( ""%s"" , path )"	313:1:10032:10055	4273298	9	True				
ANR	4273368	CallExpression	"emit_retval ( ""%s"" , path )"		4273298	0					
ANR	4273369	Callee	emit_retval		4273298	0					
ANR	4273370	Identifier	emit_retval		4273298	0					
ANR	4273371	ArgumentList	"""%s"""		4273298	1					
ANR	4273372	Argument	"""%s"""		4273298	0					
ANR	4273373	PrimaryExpression	"""%s"""		4273298	0					
ANR	4273374	Argument	path		4273298	1					
ANR	4273375	Identifier	path		4273298	0					
ANR	4273376	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273298	10					
ANR	4273377	Condition	"strcmp ( path , expected ) != MATCH"	314:4:10061:10091	4273298	0	True				
ANR	4273378	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273298	0		!=			
ANR	4273379	CallExpression	"strcmp ( path , expected )"		4273298	0					
ANR	4273380	Callee	strcmp		4273298	0					
ANR	4273381	Identifier	strcmp		4273298	0					
ANR	4273382	ArgumentList	path		4273298	1					
ANR	4273383	Argument	path		4273298	0					
ANR	4273384	Identifier	path		4273298	0					
ANR	4273385	Argument	expected		4273298	1					
ANR	4273386	Identifier	expected		4273298	0					
ANR	4273387	Identifier	MATCH		4273298	1					
ANR	4273388	CompoundStatement		12:37:384:384	4273298	1					
ANR	4273389	ExpressionStatement	FAIL	315:2:10098:10102	4273298	0	True				
ANR	4273390	Identifier	FAIL		4273298	0					
ANR	4273391	ExpressionStatement	PASS	317:1:10108:10112	4273298	11	True				
ANR	4273392	Identifier	PASS		4273298	0					
ANR	4273393	ReturnType	static bool		4273298	1					
ANR	4273394	Identifier	test_forward_slash		4273298	2					
ANR	4273395	ParameterList			4273298	3					
ANR	4273396	CFGEntryNode	ENTRY		4273298		True				
ANR	4273397	CFGExitNode	EXIT		4273298		True				
ANR	4273398	Symbol	strcmp		4273298						
ANR	4273399	Symbol	path		4273298						
ANR	4273400	Symbol	param		4273298						
ANR	4273401	Symbol	expected		4273298						
ANR	4273402	Symbol	condor_basename		4273298						
ANR	4273403	Symbol	MATCH		4273298						
ANR	4273404	Function	test_backslash	320:0:10117:10548							
ANR	4273405	FunctionDef	test_backslash ()		4273404	0					
ANR	4273406	CompoundStatement		320:29:10146:10548	4273404	0					
ANR	4273407	ExpressionStatement	"emit_test ( ""Does a path with only a backslash return the empty string?"" )"	321:1:10149:10220	4273404	0	True				
ANR	4273408	CallExpression	"emit_test ( ""Does a path with only a backslash return the empty string?"" )"		4273404	0					
ANR	4273409	Callee	emit_test		4273404	0					
ANR	4273410	Identifier	emit_test		4273404	0					
ANR	4273411	ArgumentList	"""Does a path with only a backslash return the empty string?"""		4273404	1					
ANR	4273412	Argument	"""Does a path with only a backslash return the empty string?"""		4273404	0					
ANR	4273413	PrimaryExpression	"""Does a path with only a backslash return the empty string?"""		4273404	0					
ANR	4273414	IdentifierDeclStatement	"const char * param = ""\\\\"" ;"	322:1:10223:10247	4273404	1	True				
ANR	4273415	IdentifierDecl	"* param = ""\\\\"""		4273404	0					
ANR	4273416	IdentifierDeclType	const char *		4273404	0					
ANR	4273417	Identifier	param		4273404	1					
ANR	4273418	AssignmentExpression	"* param = ""\\\\"""		4273404	2		=			
ANR	4273419	Identifier	param		4273404	0					
ANR	4273420	PrimaryExpression	"""\\\\"""		4273404	1					
ANR	4273421	IdentifierDeclStatement	"const char * expected = """" ;"	323:1:10250:10275	4273404	2	True				
ANR	4273422	IdentifierDecl	"* expected = """""		4273404	0					
ANR	4273423	IdentifierDeclType	const char *		4273404	0					
ANR	4273424	Identifier	expected		4273404	1					
ANR	4273425	AssignmentExpression	"* expected = """""		4273404	2		=			
ANR	4273426	Identifier	expected		4273404	0					
ANR	4273427	PrimaryExpression	""""""		4273404	1					
ANR	4273428	ExpressionStatement	emit_input_header ( )	324:1:10278:10297	4273404	3	True				
ANR	4273429	CallExpression	emit_input_header ( )		4273404	0					
ANR	4273430	Callee	emit_input_header		4273404	0					
ANR	4273431	Identifier	emit_input_header		4273404	0					
ANR	4273432	ArgumentList			4273404	1					
ANR	4273433	ExpressionStatement	"emit_param ( ""STRING"" , param )"	325:1:10300:10327	4273404	4	True				
ANR	4273434	CallExpression	"emit_param ( ""STRING"" , param )"		4273404	0					
ANR	4273435	Callee	emit_param		4273404	0					
ANR	4273436	Identifier	emit_param		4273404	0					
ANR	4273437	ArgumentList	"""STRING"""		4273404	1					
ANR	4273438	Argument	"""STRING"""		4273404	0					
ANR	4273439	PrimaryExpression	"""STRING"""		4273404	0					
ANR	4273440	Argument	param		4273404	1					
ANR	4273441	Identifier	param		4273404	0					
ANR	4273442	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	326:1:10330:10371	4273404	5	True				
ANR	4273443	IdentifierDecl	* path = condor_basename ( param )		4273404	0					
ANR	4273444	IdentifierDeclType	const char *		4273404	0					
ANR	4273445	Identifier	path		4273404	1					
ANR	4273446	AssignmentExpression	* path = condor_basename ( param )		4273404	2		=			
ANR	4273447	Identifier	path		4273404	0					
ANR	4273448	CallExpression	condor_basename ( param )		4273404	1					
ANR	4273449	Callee	condor_basename		4273404	0					
ANR	4273450	Identifier	condor_basename		4273404	0					
ANR	4273451	ArgumentList	param		4273404	1					
ANR	4273452	Argument	param		4273404	0					
ANR	4273453	Identifier	param		4273404	0					
ANR	4273454	ExpressionStatement	emit_output_expected_header ( )	327:1:10374:10403	4273404	6	True				
ANR	4273455	CallExpression	emit_output_expected_header ( )		4273404	0					
ANR	4273456	Callee	emit_output_expected_header		4273404	0					
ANR	4273457	Identifier	emit_output_expected_header		4273404	0					
ANR	4273458	ArgumentList			4273404	1					
ANR	4273459	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	328:1:10406:10433	4273404	7	True				
ANR	4273460	CallExpression	"emit_retval ( ""%s"" , expected )"		4273404	0					
ANR	4273461	Callee	emit_retval		4273404	0					
ANR	4273462	Identifier	emit_retval		4273404	0					
ANR	4273463	ArgumentList	"""%s"""		4273404	1					
ANR	4273464	Argument	"""%s"""		4273404	0					
ANR	4273465	PrimaryExpression	"""%s"""		4273404	0					
ANR	4273466	Argument	expected		4273404	1					
ANR	4273467	Identifier	expected		4273404	0					
ANR	4273468	ExpressionStatement	emit_output_actual_header ( )	329:1:10436:10463	4273404	8	True				
ANR	4273469	CallExpression	emit_output_actual_header ( )		4273404	0					
ANR	4273470	Callee	emit_output_actual_header		4273404	0					
ANR	4273471	Identifier	emit_output_actual_header		4273404	0					
ANR	4273472	ArgumentList			4273404	1					
ANR	4273473	ExpressionStatement	"emit_retval ( ""%s"" , path )"	330:1:10466:10489	4273404	9	True				
ANR	4273474	CallExpression	"emit_retval ( ""%s"" , path )"		4273404	0					
ANR	4273475	Callee	emit_retval		4273404	0					
ANR	4273476	Identifier	emit_retval		4273404	0					
ANR	4273477	ArgumentList	"""%s"""		4273404	1					
ANR	4273478	Argument	"""%s"""		4273404	0					
ANR	4273479	PrimaryExpression	"""%s"""		4273404	0					
ANR	4273480	Argument	path		4273404	1					
ANR	4273481	Identifier	path		4273404	0					
ANR	4273482	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273404	10					
ANR	4273483	Condition	"strcmp ( path , expected ) != MATCH"	331:4:10495:10525	4273404	0	True				
ANR	4273484	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273404	0		!=			
ANR	4273485	CallExpression	"strcmp ( path , expected )"		4273404	0					
ANR	4273486	Callee	strcmp		4273404	0					
ANR	4273487	Identifier	strcmp		4273404	0					
ANR	4273488	ArgumentList	path		4273404	1					
ANR	4273489	Argument	path		4273404	0					
ANR	4273490	Identifier	path		4273404	0					
ANR	4273491	Argument	expected		4273404	1					
ANR	4273492	Identifier	expected		4273404	0					
ANR	4273493	Identifier	MATCH		4273404	1					
ANR	4273494	CompoundStatement		12:37:381:381	4273404	1					
ANR	4273495	ExpressionStatement	FAIL	332:2:10532:10536	4273404	0	True				
ANR	4273496	Identifier	FAIL		4273404	0					
ANR	4273497	ExpressionStatement	PASS	334:1:10542:10546	4273404	11	True				
ANR	4273498	Identifier	PASS		4273404	0					
ANR	4273499	ReturnType	static bool		4273404	1					
ANR	4273500	Identifier	test_backslash		4273404	2					
ANR	4273501	ParameterList			4273404	3					
ANR	4273502	CFGEntryNode	ENTRY		4273404		True				
ANR	4273503	CFGExitNode	EXIT		4273404		True				
ANR	4273504	Symbol	strcmp		4273404						
ANR	4273505	Symbol	path		4273404						
ANR	4273506	Symbol	param		4273404						
ANR	4273507	Symbol	expected		4273404						
ANR	4273508	Symbol	condor_basename		4273404						
ANR	4273509	Symbol	MATCH		4273404						
ANR	4273510	Function	test_period_and_forward_slash_1	337:0:10551:11018							
ANR	4273511	FunctionDef	test_period_and_forward_slash_1 ()		4273510	0					
ANR	4273512	CompoundStatement		337:46:10597:11018	4273510	0					
ANR	4273513	ExpressionStatement	"emit_test ( ""Does a path with a period and backslash return the directory base name?"" )"	338:1:10600:10684	4273510	0	True				
ANR	4273514	CallExpression	"emit_test ( ""Does a path with a period and backslash return the directory base name?"" )"		4273510	0					
ANR	4273515	Callee	emit_test		4273510	0					
ANR	4273516	Identifier	emit_test		4273510	0					
ANR	4273517	ArgumentList	"""Does a path with a period and backslash return the directory base name?"""		4273510	1					
ANR	4273518	Argument	"""Does a path with a period and backslash return the directory base name?"""		4273510	0					
ANR	4273519	PrimaryExpression	"""Does a path with a period and backslash return the directory base name?"""		4273510	0					
ANR	4273520	IdentifierDeclStatement	"const char * param = ""./bar"" ;"	339:1:10687:10714	4273510	1	True				
ANR	4273521	IdentifierDecl	"* param = ""./bar"""		4273510	0					
ANR	4273522	IdentifierDeclType	const char *		4273510	0					
ANR	4273523	Identifier	param		4273510	1					
ANR	4273524	AssignmentExpression	"* param = ""./bar"""		4273510	2		=			
ANR	4273525	Identifier	param		4273510	0					
ANR	4273526	PrimaryExpression	"""./bar"""		4273510	1					
ANR	4273527	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	340:1:10717:10745	4273510	2	True				
ANR	4273528	IdentifierDecl	"* expected = ""bar"""		4273510	0					
ANR	4273529	IdentifierDeclType	const char *		4273510	0					
ANR	4273530	Identifier	expected		4273510	1					
ANR	4273531	AssignmentExpression	"* expected = ""bar"""		4273510	2		=			
ANR	4273532	Identifier	expected		4273510	0					
ANR	4273533	PrimaryExpression	"""bar"""		4273510	1					
ANR	4273534	ExpressionStatement	emit_input_header ( )	341:1:10748:10767	4273510	3	True				
ANR	4273535	CallExpression	emit_input_header ( )		4273510	0					
ANR	4273536	Callee	emit_input_header		4273510	0					
ANR	4273537	Identifier	emit_input_header		4273510	0					
ANR	4273538	ArgumentList			4273510	1					
ANR	4273539	ExpressionStatement	"emit_param ( ""STRING"" , param )"	342:1:10770:10797	4273510	4	True				
ANR	4273540	CallExpression	"emit_param ( ""STRING"" , param )"		4273510	0					
ANR	4273541	Callee	emit_param		4273510	0					
ANR	4273542	Identifier	emit_param		4273510	0					
ANR	4273543	ArgumentList	"""STRING"""		4273510	1					
ANR	4273544	Argument	"""STRING"""		4273510	0					
ANR	4273545	PrimaryExpression	"""STRING"""		4273510	0					
ANR	4273546	Argument	param		4273510	1					
ANR	4273547	Identifier	param		4273510	0					
ANR	4273548	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	343:1:10800:10841	4273510	5	True				
ANR	4273549	IdentifierDecl	* path = condor_basename ( param )		4273510	0					
ANR	4273550	IdentifierDeclType	const char *		4273510	0					
ANR	4273551	Identifier	path		4273510	1					
ANR	4273552	AssignmentExpression	* path = condor_basename ( param )		4273510	2		=			
ANR	4273553	Identifier	path		4273510	0					
ANR	4273554	CallExpression	condor_basename ( param )		4273510	1					
ANR	4273555	Callee	condor_basename		4273510	0					
ANR	4273556	Identifier	condor_basename		4273510	0					
ANR	4273557	ArgumentList	param		4273510	1					
ANR	4273558	Argument	param		4273510	0					
ANR	4273559	Identifier	param		4273510	0					
ANR	4273560	ExpressionStatement	emit_output_expected_header ( )	344:1:10844:10873	4273510	6	True				
ANR	4273561	CallExpression	emit_output_expected_header ( )		4273510	0					
ANR	4273562	Callee	emit_output_expected_header		4273510	0					
ANR	4273563	Identifier	emit_output_expected_header		4273510	0					
ANR	4273564	ArgumentList			4273510	1					
ANR	4273565	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	345:1:10876:10903	4273510	7	True				
ANR	4273566	CallExpression	"emit_retval ( ""%s"" , expected )"		4273510	0					
ANR	4273567	Callee	emit_retval		4273510	0					
ANR	4273568	Identifier	emit_retval		4273510	0					
ANR	4273569	ArgumentList	"""%s"""		4273510	1					
ANR	4273570	Argument	"""%s"""		4273510	0					
ANR	4273571	PrimaryExpression	"""%s"""		4273510	0					
ANR	4273572	Argument	expected		4273510	1					
ANR	4273573	Identifier	expected		4273510	0					
ANR	4273574	ExpressionStatement	emit_output_actual_header ( )	346:1:10906:10933	4273510	8	True				
ANR	4273575	CallExpression	emit_output_actual_header ( )		4273510	0					
ANR	4273576	Callee	emit_output_actual_header		4273510	0					
ANR	4273577	Identifier	emit_output_actual_header		4273510	0					
ANR	4273578	ArgumentList			4273510	1					
ANR	4273579	ExpressionStatement	"emit_retval ( ""%s"" , path )"	347:1:10936:10959	4273510	9	True				
ANR	4273580	CallExpression	"emit_retval ( ""%s"" , path )"		4273510	0					
ANR	4273581	Callee	emit_retval		4273510	0					
ANR	4273582	Identifier	emit_retval		4273510	0					
ANR	4273583	ArgumentList	"""%s"""		4273510	1					
ANR	4273584	Argument	"""%s"""		4273510	0					
ANR	4273585	PrimaryExpression	"""%s"""		4273510	0					
ANR	4273586	Argument	path		4273510	1					
ANR	4273587	Identifier	path		4273510	0					
ANR	4273588	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273510	10					
ANR	4273589	Condition	"strcmp ( path , expected ) != MATCH"	348:4:10965:10995	4273510	0	True				
ANR	4273590	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273510	0		!=			
ANR	4273591	CallExpression	"strcmp ( path , expected )"		4273510	0					
ANR	4273592	Callee	strcmp		4273510	0					
ANR	4273593	Identifier	strcmp		4273510	0					
ANR	4273594	ArgumentList	path		4273510	1					
ANR	4273595	Argument	path		4273510	0					
ANR	4273596	Identifier	path		4273510	0					
ANR	4273597	Argument	expected		4273510	1					
ANR	4273598	Identifier	expected		4273510	0					
ANR	4273599	Identifier	MATCH		4273510	1					
ANR	4273600	CompoundStatement		12:37:400:400	4273510	1					
ANR	4273601	ExpressionStatement	FAIL	349:2:11002:11006	4273510	0	True				
ANR	4273602	Identifier	FAIL		4273510	0					
ANR	4273603	ExpressionStatement	PASS	351:1:11012:11016	4273510	11	True				
ANR	4273604	Identifier	PASS		4273510	0					
ANR	4273605	ReturnType	static bool		4273510	1					
ANR	4273606	Identifier	test_period_and_forward_slash_1		4273510	2					
ANR	4273607	ParameterList			4273510	3					
ANR	4273608	CFGEntryNode	ENTRY		4273510		True				
ANR	4273609	CFGExitNode	EXIT		4273510		True				
ANR	4273610	Symbol	strcmp		4273510						
ANR	4273611	Symbol	path		4273510						
ANR	4273612	Symbol	param		4273510						
ANR	4273613	Symbol	expected		4273510						
ANR	4273614	Symbol	condor_basename		4273510						
ANR	4273615	Symbol	MATCH		4273510						
ANR	4273616	Function	test_period_and_backslash_1	354:0:11021:11488							
ANR	4273617	FunctionDef	test_period_and_backslash_1 ()		4273616	0					
ANR	4273618	CompoundStatement		354:42:11063:11488	4273616	0					
ANR	4273619	ExpressionStatement	"emit_test ( ""Does a path with a period and forwardslash return the directory base name?"" )"	355:1:11066:11153	4273616	0	True				
ANR	4273620	CallExpression	"emit_test ( ""Does a path with a period and forwardslash return the directory base name?"" )"		4273616	0					
ANR	4273621	Callee	emit_test		4273616	0					
ANR	4273622	Identifier	emit_test		4273616	0					
ANR	4273623	ArgumentList	"""Does a path with a period and forwardslash return the directory base name?"""		4273616	1					
ANR	4273624	Argument	"""Does a path with a period and forwardslash return the directory base name?"""		4273616	0					
ANR	4273625	PrimaryExpression	"""Does a path with a period and forwardslash return the directory base name?"""		4273616	0					
ANR	4273626	IdentifierDeclStatement	"const char * param = "".\\\\bar"" ;"	356:1:11156:11184	4273616	1	True				
ANR	4273627	IdentifierDecl	"* param = "".\\\\bar"""		4273616	0					
ANR	4273628	IdentifierDeclType	const char *		4273616	0					
ANR	4273629	Identifier	param		4273616	1					
ANR	4273630	AssignmentExpression	"* param = "".\\\\bar"""		4273616	2		=			
ANR	4273631	Identifier	param		4273616	0					
ANR	4273632	PrimaryExpression	""".\\\\bar"""		4273616	1					
ANR	4273633	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	357:1:11187:11215	4273616	2	True				
ANR	4273634	IdentifierDecl	"* expected = ""bar"""		4273616	0					
ANR	4273635	IdentifierDeclType	const char *		4273616	0					
ANR	4273636	Identifier	expected		4273616	1					
ANR	4273637	AssignmentExpression	"* expected = ""bar"""		4273616	2		=			
ANR	4273638	Identifier	expected		4273616	0					
ANR	4273639	PrimaryExpression	"""bar"""		4273616	1					
ANR	4273640	ExpressionStatement	emit_input_header ( )	358:1:11218:11237	4273616	3	True				
ANR	4273641	CallExpression	emit_input_header ( )		4273616	0					
ANR	4273642	Callee	emit_input_header		4273616	0					
ANR	4273643	Identifier	emit_input_header		4273616	0					
ANR	4273644	ArgumentList			4273616	1					
ANR	4273645	ExpressionStatement	"emit_param ( ""STRING"" , param )"	359:1:11240:11267	4273616	4	True				
ANR	4273646	CallExpression	"emit_param ( ""STRING"" , param )"		4273616	0					
ANR	4273647	Callee	emit_param		4273616	0					
ANR	4273648	Identifier	emit_param		4273616	0					
ANR	4273649	ArgumentList	"""STRING"""		4273616	1					
ANR	4273650	Argument	"""STRING"""		4273616	0					
ANR	4273651	PrimaryExpression	"""STRING"""		4273616	0					
ANR	4273652	Argument	param		4273616	1					
ANR	4273653	Identifier	param		4273616	0					
ANR	4273654	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	360:1:11270:11311	4273616	5	True				
ANR	4273655	IdentifierDecl	* path = condor_basename ( param )		4273616	0					
ANR	4273656	IdentifierDeclType	const char *		4273616	0					
ANR	4273657	Identifier	path		4273616	1					
ANR	4273658	AssignmentExpression	* path = condor_basename ( param )		4273616	2		=			
ANR	4273659	Identifier	path		4273616	0					
ANR	4273660	CallExpression	condor_basename ( param )		4273616	1					
ANR	4273661	Callee	condor_basename		4273616	0					
ANR	4273662	Identifier	condor_basename		4273616	0					
ANR	4273663	ArgumentList	param		4273616	1					
ANR	4273664	Argument	param		4273616	0					
ANR	4273665	Identifier	param		4273616	0					
ANR	4273666	ExpressionStatement	emit_output_expected_header ( )	361:1:11314:11343	4273616	6	True				
ANR	4273667	CallExpression	emit_output_expected_header ( )		4273616	0					
ANR	4273668	Callee	emit_output_expected_header		4273616	0					
ANR	4273669	Identifier	emit_output_expected_header		4273616	0					
ANR	4273670	ArgumentList			4273616	1					
ANR	4273671	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	362:1:11346:11373	4273616	7	True				
ANR	4273672	CallExpression	"emit_retval ( ""%s"" , expected )"		4273616	0					
ANR	4273673	Callee	emit_retval		4273616	0					
ANR	4273674	Identifier	emit_retval		4273616	0					
ANR	4273675	ArgumentList	"""%s"""		4273616	1					
ANR	4273676	Argument	"""%s"""		4273616	0					
ANR	4273677	PrimaryExpression	"""%s"""		4273616	0					
ANR	4273678	Argument	expected		4273616	1					
ANR	4273679	Identifier	expected		4273616	0					
ANR	4273680	ExpressionStatement	emit_output_actual_header ( )	363:1:11376:11403	4273616	8	True				
ANR	4273681	CallExpression	emit_output_actual_header ( )		4273616	0					
ANR	4273682	Callee	emit_output_actual_header		4273616	0					
ANR	4273683	Identifier	emit_output_actual_header		4273616	0					
ANR	4273684	ArgumentList			4273616	1					
ANR	4273685	ExpressionStatement	"emit_retval ( ""%s"" , path )"	364:1:11406:11429	4273616	9	True				
ANR	4273686	CallExpression	"emit_retval ( ""%s"" , path )"		4273616	0					
ANR	4273687	Callee	emit_retval		4273616	0					
ANR	4273688	Identifier	emit_retval		4273616	0					
ANR	4273689	ArgumentList	"""%s"""		4273616	1					
ANR	4273690	Argument	"""%s"""		4273616	0					
ANR	4273691	PrimaryExpression	"""%s"""		4273616	0					
ANR	4273692	Argument	path		4273616	1					
ANR	4273693	Identifier	path		4273616	0					
ANR	4273694	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273616	10					
ANR	4273695	Condition	"strcmp ( path , expected ) != MATCH"	365:4:11435:11465	4273616	0	True				
ANR	4273696	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273616	0		!=			
ANR	4273697	CallExpression	"strcmp ( path , expected )"		4273616	0					
ANR	4273698	Callee	strcmp		4273616	0					
ANR	4273699	Identifier	strcmp		4273616	0					
ANR	4273700	ArgumentList	path		4273616	1					
ANR	4273701	Argument	path		4273616	0					
ANR	4273702	Identifier	path		4273616	0					
ANR	4273703	Argument	expected		4273616	1					
ANR	4273704	Identifier	expected		4273616	0					
ANR	4273705	Identifier	MATCH		4273616	1					
ANR	4273706	CompoundStatement		12:37:404:404	4273616	1					
ANR	4273707	ExpressionStatement	FAIL	366:2:11472:11476	4273616	0	True				
ANR	4273708	Identifier	FAIL		4273616	0					
ANR	4273709	ExpressionStatement	PASS	368:1:11482:11486	4273616	11	True				
ANR	4273710	Identifier	PASS		4273616	0					
ANR	4273711	ReturnType	static bool		4273616	1					
ANR	4273712	Identifier	test_period_and_backslash_1		4273616	2					
ANR	4273713	ParameterList			4273616	3					
ANR	4273714	CFGEntryNode	ENTRY		4273616		True				
ANR	4273715	CFGExitNode	EXIT		4273616		True				
ANR	4273716	Symbol	strcmp		4273616						
ANR	4273717	Symbol	path		4273616						
ANR	4273718	Symbol	param		4273616						
ANR	4273719	Symbol	expected		4273616						
ANR	4273720	Symbol	condor_basename		4273616						
ANR	4273721	Symbol	MATCH		4273616						
ANR	4273722	Function	test_period_and_forward_slash_2	371:0:11491:11954							
ANR	4273723	FunctionDef	test_period_and_forward_slash_2 ()		4273722	0					
ANR	4273724	CompoundStatement		371:46:11537:11954	4273722	0					
ANR	4273725	ExpressionStatement	"emit_test ( ""Does a path with only a period then forwardslash return the empty string?"" )"	372:1:11540:11626	4273722	0	True				
ANR	4273726	CallExpression	"emit_test ( ""Does a path with only a period then forwardslash return the empty string?"" )"		4273722	0					
ANR	4273727	Callee	emit_test		4273722	0					
ANR	4273728	Identifier	emit_test		4273722	0					
ANR	4273729	ArgumentList	"""Does a path with only a period then forwardslash return the empty string?"""		4273722	1					
ANR	4273730	Argument	"""Does a path with only a period then forwardslash return the empty string?"""		4273722	0					
ANR	4273731	PrimaryExpression	"""Does a path with only a period then forwardslash return the empty string?"""		4273722	0					
ANR	4273732	IdentifierDeclStatement	"const char * param = ""./"" ;"	373:1:11629:11653	4273722	1	True				
ANR	4273733	IdentifierDecl	"* param = ""./"""		4273722	0					
ANR	4273734	IdentifierDeclType	const char *		4273722	0					
ANR	4273735	Identifier	param		4273722	1					
ANR	4273736	AssignmentExpression	"* param = ""./"""		4273722	2		=			
ANR	4273737	Identifier	param		4273722	0					
ANR	4273738	PrimaryExpression	"""./"""		4273722	1					
ANR	4273739	IdentifierDeclStatement	"const char * expected = """" ;"	374:1:11656:11681	4273722	2	True				
ANR	4273740	IdentifierDecl	"* expected = """""		4273722	0					
ANR	4273741	IdentifierDeclType	const char *		4273722	0					
ANR	4273742	Identifier	expected		4273722	1					
ANR	4273743	AssignmentExpression	"* expected = """""		4273722	2		=			
ANR	4273744	Identifier	expected		4273722	0					
ANR	4273745	PrimaryExpression	""""""		4273722	1					
ANR	4273746	ExpressionStatement	emit_input_header ( )	375:1:11684:11703	4273722	3	True				
ANR	4273747	CallExpression	emit_input_header ( )		4273722	0					
ANR	4273748	Callee	emit_input_header		4273722	0					
ANR	4273749	Identifier	emit_input_header		4273722	0					
ANR	4273750	ArgumentList			4273722	1					
ANR	4273751	ExpressionStatement	"emit_param ( ""STRING"" , param )"	376:1:11706:11733	4273722	4	True				
ANR	4273752	CallExpression	"emit_param ( ""STRING"" , param )"		4273722	0					
ANR	4273753	Callee	emit_param		4273722	0					
ANR	4273754	Identifier	emit_param		4273722	0					
ANR	4273755	ArgumentList	"""STRING"""		4273722	1					
ANR	4273756	Argument	"""STRING"""		4273722	0					
ANR	4273757	PrimaryExpression	"""STRING"""		4273722	0					
ANR	4273758	Argument	param		4273722	1					
ANR	4273759	Identifier	param		4273722	0					
ANR	4273760	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	377:1:11736:11777	4273722	5	True				
ANR	4273761	IdentifierDecl	* path = condor_basename ( param )		4273722	0					
ANR	4273762	IdentifierDeclType	const char *		4273722	0					
ANR	4273763	Identifier	path		4273722	1					
ANR	4273764	AssignmentExpression	* path = condor_basename ( param )		4273722	2		=			
ANR	4273765	Identifier	path		4273722	0					
ANR	4273766	CallExpression	condor_basename ( param )		4273722	1					
ANR	4273767	Callee	condor_basename		4273722	0					
ANR	4273768	Identifier	condor_basename		4273722	0					
ANR	4273769	ArgumentList	param		4273722	1					
ANR	4273770	Argument	param		4273722	0					
ANR	4273771	Identifier	param		4273722	0					
ANR	4273772	ExpressionStatement	emit_output_expected_header ( )	378:1:11780:11809	4273722	6	True				
ANR	4273773	CallExpression	emit_output_expected_header ( )		4273722	0					
ANR	4273774	Callee	emit_output_expected_header		4273722	0					
ANR	4273775	Identifier	emit_output_expected_header		4273722	0					
ANR	4273776	ArgumentList			4273722	1					
ANR	4273777	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	379:1:11812:11839	4273722	7	True				
ANR	4273778	CallExpression	"emit_retval ( ""%s"" , expected )"		4273722	0					
ANR	4273779	Callee	emit_retval		4273722	0					
ANR	4273780	Identifier	emit_retval		4273722	0					
ANR	4273781	ArgumentList	"""%s"""		4273722	1					
ANR	4273782	Argument	"""%s"""		4273722	0					
ANR	4273783	PrimaryExpression	"""%s"""		4273722	0					
ANR	4273784	Argument	expected		4273722	1					
ANR	4273785	Identifier	expected		4273722	0					
ANR	4273786	ExpressionStatement	emit_output_actual_header ( )	380:1:11842:11869	4273722	8	True				
ANR	4273787	CallExpression	emit_output_actual_header ( )		4273722	0					
ANR	4273788	Callee	emit_output_actual_header		4273722	0					
ANR	4273789	Identifier	emit_output_actual_header		4273722	0					
ANR	4273790	ArgumentList			4273722	1					
ANR	4273791	ExpressionStatement	"emit_retval ( ""%s"" , path )"	381:1:11872:11895	4273722	9	True				
ANR	4273792	CallExpression	"emit_retval ( ""%s"" , path )"		4273722	0					
ANR	4273793	Callee	emit_retval		4273722	0					
ANR	4273794	Identifier	emit_retval		4273722	0					
ANR	4273795	ArgumentList	"""%s"""		4273722	1					
ANR	4273796	Argument	"""%s"""		4273722	0					
ANR	4273797	PrimaryExpression	"""%s"""		4273722	0					
ANR	4273798	Argument	path		4273722	1					
ANR	4273799	Identifier	path		4273722	0					
ANR	4273800	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273722	10					
ANR	4273801	Condition	"strcmp ( path , expected ) != MATCH"	382:4:11901:11931	4273722	0	True				
ANR	4273802	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273722	0		!=			
ANR	4273803	CallExpression	"strcmp ( path , expected )"		4273722	0					
ANR	4273804	Callee	strcmp		4273722	0					
ANR	4273805	Identifier	strcmp		4273722	0					
ANR	4273806	ArgumentList	path		4273722	1					
ANR	4273807	Argument	path		4273722	0					
ANR	4273808	Identifier	path		4273722	0					
ANR	4273809	Argument	expected		4273722	1					
ANR	4273810	Identifier	expected		4273722	0					
ANR	4273811	Identifier	MATCH		4273722	1					
ANR	4273812	CompoundStatement		12:37:396:396	4273722	1					
ANR	4273813	ExpressionStatement	FAIL	383:2:11938:11942	4273722	0	True				
ANR	4273814	Identifier	FAIL		4273722	0					
ANR	4273815	ExpressionStatement	PASS	385:1:11948:11952	4273722	11	True				
ANR	4273816	Identifier	PASS		4273722	0					
ANR	4273817	ReturnType	static bool		4273722	1					
ANR	4273818	Identifier	test_period_and_forward_slash_2		4273722	2					
ANR	4273819	ParameterList			4273722	3					
ANR	4273820	CFGEntryNode	ENTRY		4273722		True				
ANR	4273821	CFGExitNode	EXIT		4273722		True				
ANR	4273822	Symbol	strcmp		4273722						
ANR	4273823	Symbol	path		4273722						
ANR	4273824	Symbol	param		4273722						
ANR	4273825	Symbol	expected		4273722						
ANR	4273826	Symbol	condor_basename		4273722						
ANR	4273827	Symbol	MATCH		4273722						
ANR	4273828	Function	test_period_and_backslash_2	388:0:11957:12414							
ANR	4273829	FunctionDef	test_period_and_backslash_2 ()		4273828	0					
ANR	4273830	CompoundStatement		388:42:11999:12414	4273828	0					
ANR	4273831	ExpressionStatement	"emit_test ( ""Does a path with only a period then backslash return the empty string?"" )"	389:1:12002:12085	4273828	0	True				
ANR	4273832	CallExpression	"emit_test ( ""Does a path with only a period then backslash return the empty string?"" )"		4273828	0					
ANR	4273833	Callee	emit_test		4273828	0					
ANR	4273834	Identifier	emit_test		4273828	0					
ANR	4273835	ArgumentList	"""Does a path with only a period then backslash return the empty string?"""		4273828	1					
ANR	4273836	Argument	"""Does a path with only a period then backslash return the empty string?"""		4273828	0					
ANR	4273837	PrimaryExpression	"""Does a path with only a period then backslash return the empty string?"""		4273828	0					
ANR	4273838	IdentifierDeclStatement	"const char * param = "".\\\\"" ;"	390:1:12088:12113	4273828	1	True				
ANR	4273839	IdentifierDecl	"* param = "".\\\\"""		4273828	0					
ANR	4273840	IdentifierDeclType	const char *		4273828	0					
ANR	4273841	Identifier	param		4273828	1					
ANR	4273842	AssignmentExpression	"* param = "".\\\\"""		4273828	2		=			
ANR	4273843	Identifier	param		4273828	0					
ANR	4273844	PrimaryExpression	""".\\\\"""		4273828	1					
ANR	4273845	IdentifierDeclStatement	"const char * expected = """" ;"	391:1:12116:12141	4273828	2	True				
ANR	4273846	IdentifierDecl	"* expected = """""		4273828	0					
ANR	4273847	IdentifierDeclType	const char *		4273828	0					
ANR	4273848	Identifier	expected		4273828	1					
ANR	4273849	AssignmentExpression	"* expected = """""		4273828	2		=			
ANR	4273850	Identifier	expected		4273828	0					
ANR	4273851	PrimaryExpression	""""""		4273828	1					
ANR	4273852	ExpressionStatement	emit_input_header ( )	392:1:12144:12163	4273828	3	True				
ANR	4273853	CallExpression	emit_input_header ( )		4273828	0					
ANR	4273854	Callee	emit_input_header		4273828	0					
ANR	4273855	Identifier	emit_input_header		4273828	0					
ANR	4273856	ArgumentList			4273828	1					
ANR	4273857	ExpressionStatement	"emit_param ( ""STRING"" , param )"	393:1:12166:12193	4273828	4	True				
ANR	4273858	CallExpression	"emit_param ( ""STRING"" , param )"		4273828	0					
ANR	4273859	Callee	emit_param		4273828	0					
ANR	4273860	Identifier	emit_param		4273828	0					
ANR	4273861	ArgumentList	"""STRING"""		4273828	1					
ANR	4273862	Argument	"""STRING"""		4273828	0					
ANR	4273863	PrimaryExpression	"""STRING"""		4273828	0					
ANR	4273864	Argument	param		4273828	1					
ANR	4273865	Identifier	param		4273828	0					
ANR	4273866	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	394:1:12196:12237	4273828	5	True				
ANR	4273867	IdentifierDecl	* path = condor_basename ( param )		4273828	0					
ANR	4273868	IdentifierDeclType	const char *		4273828	0					
ANR	4273869	Identifier	path		4273828	1					
ANR	4273870	AssignmentExpression	* path = condor_basename ( param )		4273828	2		=			
ANR	4273871	Identifier	path		4273828	0					
ANR	4273872	CallExpression	condor_basename ( param )		4273828	1					
ANR	4273873	Callee	condor_basename		4273828	0					
ANR	4273874	Identifier	condor_basename		4273828	0					
ANR	4273875	ArgumentList	param		4273828	1					
ANR	4273876	Argument	param		4273828	0					
ANR	4273877	Identifier	param		4273828	0					
ANR	4273878	ExpressionStatement	emit_output_expected_header ( )	395:1:12240:12269	4273828	6	True				
ANR	4273879	CallExpression	emit_output_expected_header ( )		4273828	0					
ANR	4273880	Callee	emit_output_expected_header		4273828	0					
ANR	4273881	Identifier	emit_output_expected_header		4273828	0					
ANR	4273882	ArgumentList			4273828	1					
ANR	4273883	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	396:1:12272:12299	4273828	7	True				
ANR	4273884	CallExpression	"emit_retval ( ""%s"" , expected )"		4273828	0					
ANR	4273885	Callee	emit_retval		4273828	0					
ANR	4273886	Identifier	emit_retval		4273828	0					
ANR	4273887	ArgumentList	"""%s"""		4273828	1					
ANR	4273888	Argument	"""%s"""		4273828	0					
ANR	4273889	PrimaryExpression	"""%s"""		4273828	0					
ANR	4273890	Argument	expected		4273828	1					
ANR	4273891	Identifier	expected		4273828	0					
ANR	4273892	ExpressionStatement	emit_output_actual_header ( )	397:1:12302:12329	4273828	8	True				
ANR	4273893	CallExpression	emit_output_actual_header ( )		4273828	0					
ANR	4273894	Callee	emit_output_actual_header		4273828	0					
ANR	4273895	Identifier	emit_output_actual_header		4273828	0					
ANR	4273896	ArgumentList			4273828	1					
ANR	4273897	ExpressionStatement	"emit_retval ( ""%s"" , path )"	398:1:12332:12355	4273828	9	True				
ANR	4273898	CallExpression	"emit_retval ( ""%s"" , path )"		4273828	0					
ANR	4273899	Callee	emit_retval		4273828	0					
ANR	4273900	Identifier	emit_retval		4273828	0					
ANR	4273901	ArgumentList	"""%s"""		4273828	1					
ANR	4273902	Argument	"""%s"""		4273828	0					
ANR	4273903	PrimaryExpression	"""%s"""		4273828	0					
ANR	4273904	Argument	path		4273828	1					
ANR	4273905	Identifier	path		4273828	0					
ANR	4273906	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273828	10					
ANR	4273907	Condition	"strcmp ( path , expected ) != MATCH"	399:4:12361:12391	4273828	0	True				
ANR	4273908	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273828	0		!=			
ANR	4273909	CallExpression	"strcmp ( path , expected )"		4273828	0					
ANR	4273910	Callee	strcmp		4273828	0					
ANR	4273911	Identifier	strcmp		4273828	0					
ANR	4273912	ArgumentList	path		4273828	1					
ANR	4273913	Argument	path		4273828	0					
ANR	4273914	Identifier	path		4273828	0					
ANR	4273915	Argument	expected		4273828	1					
ANR	4273916	Identifier	expected		4273828	0					
ANR	4273917	Identifier	MATCH		4273828	1					
ANR	4273918	CompoundStatement		12:37:394:394	4273828	1					
ANR	4273919	ExpressionStatement	FAIL	400:2:12398:12402	4273828	0	True				
ANR	4273920	Identifier	FAIL		4273828	0					
ANR	4273921	ExpressionStatement	PASS	402:1:12408:12412	4273828	11	True				
ANR	4273922	Identifier	PASS		4273828	0					
ANR	4273923	ReturnType	static bool		4273828	1					
ANR	4273924	Identifier	test_period_and_backslash_2		4273828	2					
ANR	4273925	ParameterList			4273828	3					
ANR	4273926	CFGEntryNode	ENTRY		4273828		True				
ANR	4273927	CFGExitNode	EXIT		4273828		True				
ANR	4273928	Symbol	strcmp		4273828						
ANR	4273929	Symbol	path		4273828						
ANR	4273930	Symbol	param		4273828						
ANR	4273931	Symbol	expected		4273828						
ANR	4273932	Symbol	condor_basename		4273828						
ANR	4273933	Symbol	MATCH		4273828						
ANR	4273934	Function	test_backslash_and_period	405:0:12417:12867							
ANR	4273935	FunctionDef	test_backslash_and_period ()		4273934	0					
ANR	4273936	CompoundStatement		405:40:12457:12867	4273934	0					
ANR	4273937	ExpressionStatement	"emit_test ( ""Does a path with only a backslash then a period return a period?"" )"	406:1:12460:12537	4273934	0	True				
ANR	4273938	CallExpression	"emit_test ( ""Does a path with only a backslash then a period return a period?"" )"		4273934	0					
ANR	4273939	Callee	emit_test		4273934	0					
ANR	4273940	Identifier	emit_test		4273934	0					
ANR	4273941	ArgumentList	"""Does a path with only a backslash then a period return a period?"""		4273934	1					
ANR	4273942	Argument	"""Does a path with only a backslash then a period return a period?"""		4273934	0					
ANR	4273943	PrimaryExpression	"""Does a path with only a backslash then a period return a period?"""		4273934	0					
ANR	4273944	IdentifierDeclStatement	"const char * param = ""\\\\."" ;"	407:1:12540:12565	4273934	1	True				
ANR	4273945	IdentifierDecl	"* param = ""\\\\."""		4273934	0					
ANR	4273946	IdentifierDeclType	const char *		4273934	0					
ANR	4273947	Identifier	param		4273934	1					
ANR	4273948	AssignmentExpression	"* param = ""\\\\."""		4273934	2		=			
ANR	4273949	Identifier	param		4273934	0					
ANR	4273950	PrimaryExpression	"""\\\\."""		4273934	1					
ANR	4273951	IdentifierDeclStatement	"const char * expected = ""."" ;"	408:1:12568:12594	4273934	2	True				
ANR	4273952	IdentifierDecl	"* expected = ""."""		4273934	0					
ANR	4273953	IdentifierDeclType	const char *		4273934	0					
ANR	4273954	Identifier	expected		4273934	1					
ANR	4273955	AssignmentExpression	"* expected = ""."""		4273934	2		=			
ANR	4273956	Identifier	expected		4273934	0					
ANR	4273957	PrimaryExpression	"""."""		4273934	1					
ANR	4273958	ExpressionStatement	emit_input_header ( )	409:1:12597:12616	4273934	3	True				
ANR	4273959	CallExpression	emit_input_header ( )		4273934	0					
ANR	4273960	Callee	emit_input_header		4273934	0					
ANR	4273961	Identifier	emit_input_header		4273934	0					
ANR	4273962	ArgumentList			4273934	1					
ANR	4273963	ExpressionStatement	"emit_param ( ""STRING"" , param )"	410:1:12619:12646	4273934	4	True				
ANR	4273964	CallExpression	"emit_param ( ""STRING"" , param )"		4273934	0					
ANR	4273965	Callee	emit_param		4273934	0					
ANR	4273966	Identifier	emit_param		4273934	0					
ANR	4273967	ArgumentList	"""STRING"""		4273934	1					
ANR	4273968	Argument	"""STRING"""		4273934	0					
ANR	4273969	PrimaryExpression	"""STRING"""		4273934	0					
ANR	4273970	Argument	param		4273934	1					
ANR	4273971	Identifier	param		4273934	0					
ANR	4273972	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	411:1:12649:12690	4273934	5	True				
ANR	4273973	IdentifierDecl	* path = condor_basename ( param )		4273934	0					
ANR	4273974	IdentifierDeclType	const char *		4273934	0					
ANR	4273975	Identifier	path		4273934	1					
ANR	4273976	AssignmentExpression	* path = condor_basename ( param )		4273934	2		=			
ANR	4273977	Identifier	path		4273934	0					
ANR	4273978	CallExpression	condor_basename ( param )		4273934	1					
ANR	4273979	Callee	condor_basename		4273934	0					
ANR	4273980	Identifier	condor_basename		4273934	0					
ANR	4273981	ArgumentList	param		4273934	1					
ANR	4273982	Argument	param		4273934	0					
ANR	4273983	Identifier	param		4273934	0					
ANR	4273984	ExpressionStatement	emit_output_expected_header ( )	412:1:12693:12722	4273934	6	True				
ANR	4273985	CallExpression	emit_output_expected_header ( )		4273934	0					
ANR	4273986	Callee	emit_output_expected_header		4273934	0					
ANR	4273987	Identifier	emit_output_expected_header		4273934	0					
ANR	4273988	ArgumentList			4273934	1					
ANR	4273989	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	413:1:12725:12752	4273934	7	True				
ANR	4273990	CallExpression	"emit_retval ( ""%s"" , expected )"		4273934	0					
ANR	4273991	Callee	emit_retval		4273934	0					
ANR	4273992	Identifier	emit_retval		4273934	0					
ANR	4273993	ArgumentList	"""%s"""		4273934	1					
ANR	4273994	Argument	"""%s"""		4273934	0					
ANR	4273995	PrimaryExpression	"""%s"""		4273934	0					
ANR	4273996	Argument	expected		4273934	1					
ANR	4273997	Identifier	expected		4273934	0					
ANR	4273998	ExpressionStatement	emit_output_actual_header ( )	414:1:12755:12782	4273934	8	True				
ANR	4273999	CallExpression	emit_output_actual_header ( )		4273934	0					
ANR	4274000	Callee	emit_output_actual_header		4273934	0					
ANR	4274001	Identifier	emit_output_actual_header		4273934	0					
ANR	4274002	ArgumentList			4273934	1					
ANR	4274003	ExpressionStatement	"emit_retval ( ""%s"" , path )"	415:1:12785:12808	4273934	9	True				
ANR	4274004	CallExpression	"emit_retval ( ""%s"" , path )"		4273934	0					
ANR	4274005	Callee	emit_retval		4273934	0					
ANR	4274006	Identifier	emit_retval		4273934	0					
ANR	4274007	ArgumentList	"""%s"""		4273934	1					
ANR	4274008	Argument	"""%s"""		4273934	0					
ANR	4274009	PrimaryExpression	"""%s"""		4273934	0					
ANR	4274010	Argument	path		4273934	1					
ANR	4274011	Identifier	path		4273934	0					
ANR	4274012	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4273934	10					
ANR	4274013	Condition	"strcmp ( path , expected ) != MATCH"	416:4:12814:12844	4273934	0	True				
ANR	4274014	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4273934	0		!=			
ANR	4274015	CallExpression	"strcmp ( path , expected )"		4273934	0					
ANR	4274016	Callee	strcmp		4273934	0					
ANR	4274017	Identifier	strcmp		4273934	0					
ANR	4274018	ArgumentList	path		4273934	1					
ANR	4274019	Argument	path		4273934	0					
ANR	4274020	Identifier	path		4273934	0					
ANR	4274021	Argument	expected		4273934	1					
ANR	4274022	Identifier	expected		4273934	0					
ANR	4274023	Identifier	MATCH		4273934	1					
ANR	4274024	CompoundStatement		12:37:389:389	4273934	1					
ANR	4274025	ExpressionStatement	FAIL	417:2:12851:12855	4273934	0	True				
ANR	4274026	Identifier	FAIL		4273934	0					
ANR	4274027	ExpressionStatement	PASS	419:1:12861:12865	4273934	11	True				
ANR	4274028	Identifier	PASS		4273934	0					
ANR	4274029	ReturnType	static bool		4273934	1					
ANR	4274030	Identifier	test_backslash_and_period		4273934	2					
ANR	4274031	ParameterList			4273934	3					
ANR	4274032	CFGEntryNode	ENTRY		4273934		True				
ANR	4274033	CFGExitNode	EXIT		4273934		True				
ANR	4274034	Symbol	strcmp		4273934						
ANR	4274035	Symbol	path		4273934						
ANR	4274036	Symbol	param		4273934						
ANR	4274037	Symbol	expected		4273934						
ANR	4274038	Symbol	condor_basename		4273934						
ANR	4274039	Symbol	MATCH		4273934						
ANR	4274040	Function	test_forward_slash_and_file_extension	422:0:12870:13379							
ANR	4274041	FunctionDef	test_forward_slash_and_file_extension ()		4274040	0					
ANR	4274042	CompoundStatement		422:52:12922:13379	4274040	0					
ANR	4274043	ExpressionStatement	"emit_test ( ""Does a path with two directories and a file extension return the file name and its extension?"" )"	423:1:12925:13031	4274040	0	True				
ANR	4274044	CallExpression	"emit_test ( ""Does a path with two directories and a file extension return the file name and its extension?"" )"		4274040	0					
ANR	4274045	Callee	emit_test		4274040	0					
ANR	4274046	Identifier	emit_test		4274040	0					
ANR	4274047	ArgumentList	"""Does a path with two directories and a file extension return the file name and its extension?"""		4274040	1					
ANR	4274048	Argument	"""Does a path with two directories and a file extension return the file name and its extension?"""		4274040	0					
ANR	4274049	PrimaryExpression	"""Does a path with two directories and a file extension return the file name and its extension?"""		4274040	0					
ANR	4274050	IdentifierDeclStatement	"const char * param = ""foo/bar/zap.txt"" ;"	424:1:13034:13071	4274040	1	True				
ANR	4274051	IdentifierDecl	"* param = ""foo/bar/zap.txt"""		4274040	0					
ANR	4274052	IdentifierDeclType	const char *		4274040	0					
ANR	4274053	Identifier	param		4274040	1					
ANR	4274054	AssignmentExpression	"* param = ""foo/bar/zap.txt"""		4274040	2		=			
ANR	4274055	Identifier	param		4274040	0					
ANR	4274056	PrimaryExpression	"""foo/bar/zap.txt"""		4274040	1					
ANR	4274057	IdentifierDeclStatement	"const char * expected = ""zap.txt"" ;"	425:1:13074:13106	4274040	2	True				
ANR	4274058	IdentifierDecl	"* expected = ""zap.txt"""		4274040	0					
ANR	4274059	IdentifierDeclType	const char *		4274040	0					
ANR	4274060	Identifier	expected		4274040	1					
ANR	4274061	AssignmentExpression	"* expected = ""zap.txt"""		4274040	2		=			
ANR	4274062	Identifier	expected		4274040	0					
ANR	4274063	PrimaryExpression	"""zap.txt"""		4274040	1					
ANR	4274064	ExpressionStatement	emit_input_header ( )	426:1:13109:13128	4274040	3	True				
ANR	4274065	CallExpression	emit_input_header ( )		4274040	0					
ANR	4274066	Callee	emit_input_header		4274040	0					
ANR	4274067	Identifier	emit_input_header		4274040	0					
ANR	4274068	ArgumentList			4274040	1					
ANR	4274069	ExpressionStatement	"emit_param ( ""STRING"" , param )"	427:1:13131:13158	4274040	4	True				
ANR	4274070	CallExpression	"emit_param ( ""STRING"" , param )"		4274040	0					
ANR	4274071	Callee	emit_param		4274040	0					
ANR	4274072	Identifier	emit_param		4274040	0					
ANR	4274073	ArgumentList	"""STRING"""		4274040	1					
ANR	4274074	Argument	"""STRING"""		4274040	0					
ANR	4274075	PrimaryExpression	"""STRING"""		4274040	0					
ANR	4274076	Argument	param		4274040	1					
ANR	4274077	Identifier	param		4274040	0					
ANR	4274078	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	428:1:13161:13202	4274040	5	True				
ANR	4274079	IdentifierDecl	* path = condor_basename ( param )		4274040	0					
ANR	4274080	IdentifierDeclType	const char *		4274040	0					
ANR	4274081	Identifier	path		4274040	1					
ANR	4274082	AssignmentExpression	* path = condor_basename ( param )		4274040	2		=			
ANR	4274083	Identifier	path		4274040	0					
ANR	4274084	CallExpression	condor_basename ( param )		4274040	1					
ANR	4274085	Callee	condor_basename		4274040	0					
ANR	4274086	Identifier	condor_basename		4274040	0					
ANR	4274087	ArgumentList	param		4274040	1					
ANR	4274088	Argument	param		4274040	0					
ANR	4274089	Identifier	param		4274040	0					
ANR	4274090	ExpressionStatement	emit_output_expected_header ( )	429:1:13205:13234	4274040	6	True				
ANR	4274091	CallExpression	emit_output_expected_header ( )		4274040	0					
ANR	4274092	Callee	emit_output_expected_header		4274040	0					
ANR	4274093	Identifier	emit_output_expected_header		4274040	0					
ANR	4274094	ArgumentList			4274040	1					
ANR	4274095	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	430:1:13237:13264	4274040	7	True				
ANR	4274096	CallExpression	"emit_retval ( ""%s"" , expected )"		4274040	0					
ANR	4274097	Callee	emit_retval		4274040	0					
ANR	4274098	Identifier	emit_retval		4274040	0					
ANR	4274099	ArgumentList	"""%s"""		4274040	1					
ANR	4274100	Argument	"""%s"""		4274040	0					
ANR	4274101	PrimaryExpression	"""%s"""		4274040	0					
ANR	4274102	Argument	expected		4274040	1					
ANR	4274103	Identifier	expected		4274040	0					
ANR	4274104	ExpressionStatement	emit_output_actual_header ( )	431:1:13267:13294	4274040	8	True				
ANR	4274105	CallExpression	emit_output_actual_header ( )		4274040	0					
ANR	4274106	Callee	emit_output_actual_header		4274040	0					
ANR	4274107	Identifier	emit_output_actual_header		4274040	0					
ANR	4274108	ArgumentList			4274040	1					
ANR	4274109	ExpressionStatement	"emit_retval ( ""%s"" , path )"	432:1:13297:13320	4274040	9	True				
ANR	4274110	CallExpression	"emit_retval ( ""%s"" , path )"		4274040	0					
ANR	4274111	Callee	emit_retval		4274040	0					
ANR	4274112	Identifier	emit_retval		4274040	0					
ANR	4274113	ArgumentList	"""%s"""		4274040	1					
ANR	4274114	Argument	"""%s"""		4274040	0					
ANR	4274115	PrimaryExpression	"""%s"""		4274040	0					
ANR	4274116	Argument	path		4274040	1					
ANR	4274117	Identifier	path		4274040	0					
ANR	4274118	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274040	10					
ANR	4274119	Condition	"strcmp ( path , expected ) != MATCH"	433:4:13326:13356	4274040	0	True				
ANR	4274120	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274040	0		!=			
ANR	4274121	CallExpression	"strcmp ( path , expected )"		4274040	0					
ANR	4274122	Callee	strcmp		4274040	0					
ANR	4274123	Identifier	strcmp		4274040	0					
ANR	4274124	ArgumentList	path		4274040	1					
ANR	4274125	Argument	path		4274040	0					
ANR	4274126	Identifier	path		4274040	0					
ANR	4274127	Argument	expected		4274040	1					
ANR	4274128	Identifier	expected		4274040	0					
ANR	4274129	Identifier	MATCH		4274040	1					
ANR	4274130	CompoundStatement		12:37:436:436	4274040	1					
ANR	4274131	ExpressionStatement	FAIL	434:2:13363:13367	4274040	0	True				
ANR	4274132	Identifier	FAIL		4274040	0					
ANR	4274133	ExpressionStatement	PASS	436:1:13373:13377	4274040	11	True				
ANR	4274134	Identifier	PASS		4274040	0					
ANR	4274135	ReturnType	static bool		4274040	1					
ANR	4274136	Identifier	test_forward_slash_and_file_extension		4274040	2					
ANR	4274137	ParameterList			4274040	3					
ANR	4274138	CFGEntryNode	ENTRY		4274040		True				
ANR	4274139	CFGExitNode	EXIT		4274040		True				
ANR	4274140	Symbol	strcmp		4274040						
ANR	4274141	Symbol	path		4274040						
ANR	4274142	Symbol	param		4274040						
ANR	4274143	Symbol	expected		4274040						
ANR	4274144	Symbol	condor_basename		4274040						
ANR	4274145	Symbol	MATCH		4274040						
ANR	4274146	Function	test_backslash_and_file_extension	439:0:13382:13907							
ANR	4274147	FunctionDef	test_backslash_and_file_extension ()		4274146	0					
ANR	4274148	CompoundStatement		439:48:13430:13907	4274146	0					
ANR	4274149	ExpressionStatement	"emit_test ( ""Does a path with two directories and a file extension using backslashes return the file name and its extension?"" )"	440:1:13433:13557	4274146	0	True				
ANR	4274150	CallExpression	"emit_test ( ""Does a path with two directories and a file extension using backslashes return the file name and its extension?"" )"		4274146	0					
ANR	4274151	Callee	emit_test		4274146	0					
ANR	4274152	Identifier	emit_test		4274146	0					
ANR	4274153	ArgumentList	"""Does a path with two directories and a file extension using backslashes return the file name and its extension?"""		4274146	1					
ANR	4274154	Argument	"""Does a path with two directories and a file extension using backslashes return the file name and its extension?"""		4274146	0					
ANR	4274155	PrimaryExpression	"""Does a path with two directories and a file extension using backslashes return the file name and its extension?"""		4274146	0					
ANR	4274156	IdentifierDeclStatement	"const char * param = ""foo\\\\bar\\\\zap.txt"" ;"	441:1:13560:13599	4274146	1	True				
ANR	4274157	IdentifierDecl	"* param = ""foo\\\\bar\\\\zap.txt"""		4274146	0					
ANR	4274158	IdentifierDeclType	const char *		4274146	0					
ANR	4274159	Identifier	param		4274146	1					
ANR	4274160	AssignmentExpression	"* param = ""foo\\\\bar\\\\zap.txt"""		4274146	2		=			
ANR	4274161	Identifier	param		4274146	0					
ANR	4274162	PrimaryExpression	"""foo\\\\bar\\\\zap.txt"""		4274146	1					
ANR	4274163	IdentifierDeclStatement	"const char * expected = ""zap.txt"" ;"	442:1:13602:13634	4274146	2	True				
ANR	4274164	IdentifierDecl	"* expected = ""zap.txt"""		4274146	0					
ANR	4274165	IdentifierDeclType	const char *		4274146	0					
ANR	4274166	Identifier	expected		4274146	1					
ANR	4274167	AssignmentExpression	"* expected = ""zap.txt"""		4274146	2		=			
ANR	4274168	Identifier	expected		4274146	0					
ANR	4274169	PrimaryExpression	"""zap.txt"""		4274146	1					
ANR	4274170	ExpressionStatement	emit_input_header ( )	443:1:13637:13656	4274146	3	True				
ANR	4274171	CallExpression	emit_input_header ( )		4274146	0					
ANR	4274172	Callee	emit_input_header		4274146	0					
ANR	4274173	Identifier	emit_input_header		4274146	0					
ANR	4274174	ArgumentList			4274146	1					
ANR	4274175	ExpressionStatement	"emit_param ( ""STRING"" , param )"	444:1:13659:13686	4274146	4	True				
ANR	4274176	CallExpression	"emit_param ( ""STRING"" , param )"		4274146	0					
ANR	4274177	Callee	emit_param		4274146	0					
ANR	4274178	Identifier	emit_param		4274146	0					
ANR	4274179	ArgumentList	"""STRING"""		4274146	1					
ANR	4274180	Argument	"""STRING"""		4274146	0					
ANR	4274181	PrimaryExpression	"""STRING"""		4274146	0					
ANR	4274182	Argument	param		4274146	1					
ANR	4274183	Identifier	param		4274146	0					
ANR	4274184	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	445:1:13689:13730	4274146	5	True				
ANR	4274185	IdentifierDecl	* path = condor_basename ( param )		4274146	0					
ANR	4274186	IdentifierDeclType	const char *		4274146	0					
ANR	4274187	Identifier	path		4274146	1					
ANR	4274188	AssignmentExpression	* path = condor_basename ( param )		4274146	2		=			
ANR	4274189	Identifier	path		4274146	0					
ANR	4274190	CallExpression	condor_basename ( param )		4274146	1					
ANR	4274191	Callee	condor_basename		4274146	0					
ANR	4274192	Identifier	condor_basename		4274146	0					
ANR	4274193	ArgumentList	param		4274146	1					
ANR	4274194	Argument	param		4274146	0					
ANR	4274195	Identifier	param		4274146	0					
ANR	4274196	ExpressionStatement	emit_output_expected_header ( )	446:1:13733:13762	4274146	6	True				
ANR	4274197	CallExpression	emit_output_expected_header ( )		4274146	0					
ANR	4274198	Callee	emit_output_expected_header		4274146	0					
ANR	4274199	Identifier	emit_output_expected_header		4274146	0					
ANR	4274200	ArgumentList			4274146	1					
ANR	4274201	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	447:1:13765:13792	4274146	7	True				
ANR	4274202	CallExpression	"emit_retval ( ""%s"" , expected )"		4274146	0					
ANR	4274203	Callee	emit_retval		4274146	0					
ANR	4274204	Identifier	emit_retval		4274146	0					
ANR	4274205	ArgumentList	"""%s"""		4274146	1					
ANR	4274206	Argument	"""%s"""		4274146	0					
ANR	4274207	PrimaryExpression	"""%s"""		4274146	0					
ANR	4274208	Argument	expected		4274146	1					
ANR	4274209	Identifier	expected		4274146	0					
ANR	4274210	ExpressionStatement	emit_output_actual_header ( )	448:1:13795:13822	4274146	8	True				
ANR	4274211	CallExpression	emit_output_actual_header ( )		4274146	0					
ANR	4274212	Callee	emit_output_actual_header		4274146	0					
ANR	4274213	Identifier	emit_output_actual_header		4274146	0					
ANR	4274214	ArgumentList			4274146	1					
ANR	4274215	ExpressionStatement	"emit_retval ( ""%s"" , path )"	449:1:13825:13848	4274146	9	True				
ANR	4274216	CallExpression	"emit_retval ( ""%s"" , path )"		4274146	0					
ANR	4274217	Callee	emit_retval		4274146	0					
ANR	4274218	Identifier	emit_retval		4274146	0					
ANR	4274219	ArgumentList	"""%s"""		4274146	1					
ANR	4274220	Argument	"""%s"""		4274146	0					
ANR	4274221	PrimaryExpression	"""%s"""		4274146	0					
ANR	4274222	Argument	path		4274146	1					
ANR	4274223	Identifier	path		4274146	0					
ANR	4274224	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274146	10					
ANR	4274225	Condition	"strcmp ( path , expected ) != MATCH"	450:4:13854:13884	4274146	0	True				
ANR	4274226	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274146	0		!=			
ANR	4274227	CallExpression	"strcmp ( path , expected )"		4274146	0					
ANR	4274228	Callee	strcmp		4274146	0					
ANR	4274229	Identifier	strcmp		4274146	0					
ANR	4274230	ArgumentList	path		4274146	1					
ANR	4274231	Argument	path		4274146	0					
ANR	4274232	Identifier	path		4274146	0					
ANR	4274233	Argument	expected		4274146	1					
ANR	4274234	Identifier	expected		4274146	0					
ANR	4274235	Identifier	MATCH		4274146	1					
ANR	4274236	CompoundStatement		12:37:456:456	4274146	1					
ANR	4274237	ExpressionStatement	FAIL	451:2:13891:13895	4274146	0	True				
ANR	4274238	Identifier	FAIL		4274146	0					
ANR	4274239	ExpressionStatement	PASS	453:1:13901:13905	4274146	11	True				
ANR	4274240	Identifier	PASS		4274146	0					
ANR	4274241	ReturnType	static bool		4274146	1					
ANR	4274242	Identifier	test_backslash_and_file_extension		4274146	2					
ANR	4274243	ParameterList			4274146	3					
ANR	4274244	CFGEntryNode	ENTRY		4274146		True				
ANR	4274245	CFGExitNode	EXIT		4274146		True				
ANR	4274246	Symbol	strcmp		4274146						
ANR	4274247	Symbol	path		4274146						
ANR	4274248	Symbol	param		4274146						
ANR	4274249	Symbol	expected		4274146						
ANR	4274250	Symbol	condor_basename		4274146						
ANR	4274251	Symbol	MATCH		4274146						
ANR	4274252	Function	test_period_and_forward_slash	456:0:13910:14379							
ANR	4274253	FunctionDef	test_period_and_forward_slash ()		4274252	0					
ANR	4274254	CompoundStatement		456:44:13954:14379	4274252	0					
ANR	4274255	ExpressionStatement	"emit_test ( ""Does a path using both a period and a forwardslash return the base name?"" )"	457:1:13957:14042	4274252	0	True				
ANR	4274256	CallExpression	"emit_test ( ""Does a path using both a period and a forwardslash return the base name?"" )"		4274252	0					
ANR	4274257	Callee	emit_test		4274252	0					
ANR	4274258	Identifier	emit_test		4274252	0					
ANR	4274259	ArgumentList	"""Does a path using both a period and a forwardslash return the base name?"""		4274252	1					
ANR	4274260	Argument	"""Does a path using both a period and a forwardslash return the base name?"""		4274252	0					
ANR	4274261	PrimaryExpression	"""Does a path using both a period and a forwardslash return the base name?"""		4274252	0					
ANR	4274262	IdentifierDeclStatement	"const char * param = "".foo/bar"" ;"	458:1:14045:14075	4274252	1	True				
ANR	4274263	IdentifierDecl	"* param = "".foo/bar"""		4274252	0					
ANR	4274264	IdentifierDeclType	const char *		4274252	0					
ANR	4274265	Identifier	param		4274252	1					
ANR	4274266	AssignmentExpression	"* param = "".foo/bar"""		4274252	2		=			
ANR	4274267	Identifier	param		4274252	0					
ANR	4274268	PrimaryExpression	""".foo/bar"""		4274252	1					
ANR	4274269	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	459:1:14078:14106	4274252	2	True				
ANR	4274270	IdentifierDecl	"* expected = ""bar"""		4274252	0					
ANR	4274271	IdentifierDeclType	const char *		4274252	0					
ANR	4274272	Identifier	expected		4274252	1					
ANR	4274273	AssignmentExpression	"* expected = ""bar"""		4274252	2		=			
ANR	4274274	Identifier	expected		4274252	0					
ANR	4274275	PrimaryExpression	"""bar"""		4274252	1					
ANR	4274276	ExpressionStatement	emit_input_header ( )	460:1:14109:14128	4274252	3	True				
ANR	4274277	CallExpression	emit_input_header ( )		4274252	0					
ANR	4274278	Callee	emit_input_header		4274252	0					
ANR	4274279	Identifier	emit_input_header		4274252	0					
ANR	4274280	ArgumentList			4274252	1					
ANR	4274281	ExpressionStatement	"emit_param ( ""STRING"" , param )"	461:1:14131:14158	4274252	4	True				
ANR	4274282	CallExpression	"emit_param ( ""STRING"" , param )"		4274252	0					
ANR	4274283	Callee	emit_param		4274252	0					
ANR	4274284	Identifier	emit_param		4274252	0					
ANR	4274285	ArgumentList	"""STRING"""		4274252	1					
ANR	4274286	Argument	"""STRING"""		4274252	0					
ANR	4274287	PrimaryExpression	"""STRING"""		4274252	0					
ANR	4274288	Argument	param		4274252	1					
ANR	4274289	Identifier	param		4274252	0					
ANR	4274290	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	462:1:14161:14202	4274252	5	True				
ANR	4274291	IdentifierDecl	* path = condor_basename ( param )		4274252	0					
ANR	4274292	IdentifierDeclType	const char *		4274252	0					
ANR	4274293	Identifier	path		4274252	1					
ANR	4274294	AssignmentExpression	* path = condor_basename ( param )		4274252	2		=			
ANR	4274295	Identifier	path		4274252	0					
ANR	4274296	CallExpression	condor_basename ( param )		4274252	1					
ANR	4274297	Callee	condor_basename		4274252	0					
ANR	4274298	Identifier	condor_basename		4274252	0					
ANR	4274299	ArgumentList	param		4274252	1					
ANR	4274300	Argument	param		4274252	0					
ANR	4274301	Identifier	param		4274252	0					
ANR	4274302	ExpressionStatement	emit_output_expected_header ( )	463:1:14205:14234	4274252	6	True				
ANR	4274303	CallExpression	emit_output_expected_header ( )		4274252	0					
ANR	4274304	Callee	emit_output_expected_header		4274252	0					
ANR	4274305	Identifier	emit_output_expected_header		4274252	0					
ANR	4274306	ArgumentList			4274252	1					
ANR	4274307	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	464:1:14237:14264	4274252	7	True				
ANR	4274308	CallExpression	"emit_retval ( ""%s"" , expected )"		4274252	0					
ANR	4274309	Callee	emit_retval		4274252	0					
ANR	4274310	Identifier	emit_retval		4274252	0					
ANR	4274311	ArgumentList	"""%s"""		4274252	1					
ANR	4274312	Argument	"""%s"""		4274252	0					
ANR	4274313	PrimaryExpression	"""%s"""		4274252	0					
ANR	4274314	Argument	expected		4274252	1					
ANR	4274315	Identifier	expected		4274252	0					
ANR	4274316	ExpressionStatement	emit_output_actual_header ( )	465:1:14267:14294	4274252	8	True				
ANR	4274317	CallExpression	emit_output_actual_header ( )		4274252	0					
ANR	4274318	Callee	emit_output_actual_header		4274252	0					
ANR	4274319	Identifier	emit_output_actual_header		4274252	0					
ANR	4274320	ArgumentList			4274252	1					
ANR	4274321	ExpressionStatement	"emit_retval ( ""%s"" , path )"	466:1:14297:14320	4274252	9	True				
ANR	4274322	CallExpression	"emit_retval ( ""%s"" , path )"		4274252	0					
ANR	4274323	Callee	emit_retval		4274252	0					
ANR	4274324	Identifier	emit_retval		4274252	0					
ANR	4274325	ArgumentList	"""%s"""		4274252	1					
ANR	4274326	Argument	"""%s"""		4274252	0					
ANR	4274327	PrimaryExpression	"""%s"""		4274252	0					
ANR	4274328	Argument	path		4274252	1					
ANR	4274329	Identifier	path		4274252	0					
ANR	4274330	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274252	10					
ANR	4274331	Condition	"strcmp ( path , expected ) != MATCH"	467:4:14326:14356	4274252	0	True				
ANR	4274332	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274252	0		!=			
ANR	4274333	CallExpression	"strcmp ( path , expected )"		4274252	0					
ANR	4274334	Callee	strcmp		4274252	0					
ANR	4274335	Identifier	strcmp		4274252	0					
ANR	4274336	ArgumentList	path		4274252	1					
ANR	4274337	Argument	path		4274252	0					
ANR	4274338	Identifier	path		4274252	0					
ANR	4274339	Argument	expected		4274252	1					
ANR	4274340	Identifier	expected		4274252	0					
ANR	4274341	Identifier	MATCH		4274252	1					
ANR	4274342	CompoundStatement		12:37:404:404	4274252	1					
ANR	4274343	ExpressionStatement	FAIL	468:2:14363:14367	4274252	0	True				
ANR	4274344	Identifier	FAIL		4274252	0					
ANR	4274345	ExpressionStatement	PASS	470:1:14373:14377	4274252	11	True				
ANR	4274346	Identifier	PASS		4274252	0					
ANR	4274347	ReturnType	static bool		4274252	1					
ANR	4274348	Identifier	test_period_and_forward_slash		4274252	2					
ANR	4274349	ParameterList			4274252	3					
ANR	4274350	CFGEntryNode	ENTRY		4274252		True				
ANR	4274351	CFGExitNode	EXIT		4274252		True				
ANR	4274352	Symbol	strcmp		4274252						
ANR	4274353	Symbol	path		4274252						
ANR	4274354	Symbol	param		4274252						
ANR	4274355	Symbol	expected		4274252						
ANR	4274356	Symbol	condor_basename		4274252						
ANR	4274357	Symbol	MATCH		4274252						
ANR	4274358	Function	test_period_and_backslash	473:0:14382:14873							
ANR	4274359	FunctionDef	test_period_and_backslash ()		4274358	0					
ANR	4274360	CompoundStatement		473:40:14422:14873	4274358	0					
ANR	4274361	ExpressionStatement	"emit_test ( ""Does a path with one directory using a period and another using a backslash return the base name?"" )"	474:1:14425:14535	4274358	0	True				
ANR	4274362	CallExpression	"emit_test ( ""Does a path with one directory using a period and another using a backslash return the base name?"" )"		4274358	0					
ANR	4274363	Callee	emit_test		4274358	0					
ANR	4274364	Identifier	emit_test		4274358	0					
ANR	4274365	ArgumentList	"""Does a path with one directory using a period and another using a backslash return the base name?"""		4274358	1					
ANR	4274366	Argument	"""Does a path with one directory using a period and another using a backslash return the base name?"""		4274358	0					
ANR	4274367	PrimaryExpression	"""Does a path with one directory using a period and another using a backslash return the base name?"""		4274358	0					
ANR	4274368	IdentifierDeclStatement	"const char * param = "".foo\\\\bar"" ;"	475:1:14538:14569	4274358	1	True				
ANR	4274369	IdentifierDecl	"* param = "".foo\\\\bar"""		4274358	0					
ANR	4274370	IdentifierDeclType	const char *		4274358	0					
ANR	4274371	Identifier	param		4274358	1					
ANR	4274372	AssignmentExpression	"* param = "".foo\\\\bar"""		4274358	2		=			
ANR	4274373	Identifier	param		4274358	0					
ANR	4274374	PrimaryExpression	""".foo\\\\bar"""		4274358	1					
ANR	4274375	IdentifierDeclStatement	"const char * expected = ""bar"" ;"	476:1:14572:14600	4274358	2	True				
ANR	4274376	IdentifierDecl	"* expected = ""bar"""		4274358	0					
ANR	4274377	IdentifierDeclType	const char *		4274358	0					
ANR	4274378	Identifier	expected		4274358	1					
ANR	4274379	AssignmentExpression	"* expected = ""bar"""		4274358	2		=			
ANR	4274380	Identifier	expected		4274358	0					
ANR	4274381	PrimaryExpression	"""bar"""		4274358	1					
ANR	4274382	ExpressionStatement	emit_input_header ( )	477:1:14603:14622	4274358	3	True				
ANR	4274383	CallExpression	emit_input_header ( )		4274358	0					
ANR	4274384	Callee	emit_input_header		4274358	0					
ANR	4274385	Identifier	emit_input_header		4274358	0					
ANR	4274386	ArgumentList			4274358	1					
ANR	4274387	ExpressionStatement	"emit_param ( ""STRING"" , param )"	478:1:14625:14652	4274358	4	True				
ANR	4274388	CallExpression	"emit_param ( ""STRING"" , param )"		4274358	0					
ANR	4274389	Callee	emit_param		4274358	0					
ANR	4274390	Identifier	emit_param		4274358	0					
ANR	4274391	ArgumentList	"""STRING"""		4274358	1					
ANR	4274392	Argument	"""STRING"""		4274358	0					
ANR	4274393	PrimaryExpression	"""STRING"""		4274358	0					
ANR	4274394	Argument	param		4274358	1					
ANR	4274395	Identifier	param		4274358	0					
ANR	4274396	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	479:1:14655:14696	4274358	5	True				
ANR	4274397	IdentifierDecl	* path = condor_basename ( param )		4274358	0					
ANR	4274398	IdentifierDeclType	const char *		4274358	0					
ANR	4274399	Identifier	path		4274358	1					
ANR	4274400	AssignmentExpression	* path = condor_basename ( param )		4274358	2		=			
ANR	4274401	Identifier	path		4274358	0					
ANR	4274402	CallExpression	condor_basename ( param )		4274358	1					
ANR	4274403	Callee	condor_basename		4274358	0					
ANR	4274404	Identifier	condor_basename		4274358	0					
ANR	4274405	ArgumentList	param		4274358	1					
ANR	4274406	Argument	param		4274358	0					
ANR	4274407	Identifier	param		4274358	0					
ANR	4274408	ExpressionStatement	emit_output_expected_header ( )	480:1:14699:14728	4274358	6	True				
ANR	4274409	CallExpression	emit_output_expected_header ( )		4274358	0					
ANR	4274410	Callee	emit_output_expected_header		4274358	0					
ANR	4274411	Identifier	emit_output_expected_header		4274358	0					
ANR	4274412	ArgumentList			4274358	1					
ANR	4274413	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	481:1:14731:14758	4274358	7	True				
ANR	4274414	CallExpression	"emit_retval ( ""%s"" , expected )"		4274358	0					
ANR	4274415	Callee	emit_retval		4274358	0					
ANR	4274416	Identifier	emit_retval		4274358	0					
ANR	4274417	ArgumentList	"""%s"""		4274358	1					
ANR	4274418	Argument	"""%s"""		4274358	0					
ANR	4274419	PrimaryExpression	"""%s"""		4274358	0					
ANR	4274420	Argument	expected		4274358	1					
ANR	4274421	Identifier	expected		4274358	0					
ANR	4274422	ExpressionStatement	emit_output_actual_header ( )	482:1:14761:14788	4274358	8	True				
ANR	4274423	CallExpression	emit_output_actual_header ( )		4274358	0					
ANR	4274424	Callee	emit_output_actual_header		4274358	0					
ANR	4274425	Identifier	emit_output_actual_header		4274358	0					
ANR	4274426	ArgumentList			4274358	1					
ANR	4274427	ExpressionStatement	"emit_retval ( ""%s"" , path )"	483:1:14791:14814	4274358	9	True				
ANR	4274428	CallExpression	"emit_retval ( ""%s"" , path )"		4274358	0					
ANR	4274429	Callee	emit_retval		4274358	0					
ANR	4274430	Identifier	emit_retval		4274358	0					
ANR	4274431	ArgumentList	"""%s"""		4274358	1					
ANR	4274432	Argument	"""%s"""		4274358	0					
ANR	4274433	PrimaryExpression	"""%s"""		4274358	0					
ANR	4274434	Argument	path		4274358	1					
ANR	4274435	Identifier	path		4274358	0					
ANR	4274436	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274358	10					
ANR	4274437	Condition	"strcmp ( path , expected ) != MATCH"	484:4:14820:14850	4274358	0	True				
ANR	4274438	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274358	0		!=			
ANR	4274439	CallExpression	"strcmp ( path , expected )"		4274358	0					
ANR	4274440	Callee	strcmp		4274358	0					
ANR	4274441	Identifier	strcmp		4274358	0					
ANR	4274442	ArgumentList	path		4274358	1					
ANR	4274443	Argument	path		4274358	0					
ANR	4274444	Identifier	path		4274358	0					
ANR	4274445	Argument	expected		4274358	1					
ANR	4274446	Identifier	expected		4274358	0					
ANR	4274447	Identifier	MATCH		4274358	1					
ANR	4274448	CompoundStatement		12:37:430:430	4274358	1					
ANR	4274449	ExpressionStatement	FAIL	485:2:14857:14861	4274358	0	True				
ANR	4274450	Identifier	FAIL		4274358	0					
ANR	4274451	ExpressionStatement	PASS	487:1:14867:14871	4274358	11	True				
ANR	4274452	Identifier	PASS		4274358	0					
ANR	4274453	ReturnType	static bool		4274358	1					
ANR	4274454	Identifier	test_period_and_backslash		4274358	2					
ANR	4274455	ParameterList			4274358	3					
ANR	4274456	CFGEntryNode	ENTRY		4274358		True				
ANR	4274457	CFGExitNode	EXIT		4274358		True				
ANR	4274458	Symbol	strcmp		4274358						
ANR	4274459	Symbol	path		4274358						
ANR	4274460	Symbol	param		4274358						
ANR	4274461	Symbol	expected		4274358						
ANR	4274462	Symbol	condor_basename		4274358						
ANR	4274463	Symbol	MATCH		4274358						
ANR	4274464	Function	test_period_and_forward_slash_with_special_file	490:0:14876:15442							
ANR	4274465	FunctionDef	test_period_and_forward_slash_with_special_file ()		4274464	0					
ANR	4274466	CompoundStatement		490:62:14938:15442	4274464	0					
ANR	4274467	ExpressionStatement	"emit_test ( ""Does a path with one directory using a period and another using a forwardslash return the file name starting with a period and its extension?"" )"	491:1:14941:15095	4274464	0	True				
ANR	4274468	CallExpression	"emit_test ( ""Does a path with one directory using a period and another using a forwardslash return the file name starting with a period and its extension?"" )"		4274464	0					
ANR	4274469	Callee	emit_test		4274464	0					
ANR	4274470	Identifier	emit_test		4274464	0					
ANR	4274471	ArgumentList	"""Does a path with one directory using a period and another using a forwardslash return the file name starting with a period and its extension?"""		4274464	1					
ANR	4274472	Argument	"""Does a path with one directory using a period and another using a forwardslash return the file name starting with a period and its extension?"""		4274464	0					
ANR	4274473	PrimaryExpression	"""Does a path with one directory using a period and another using a forwardslash return the file name starting with a period and its extension?"""		4274464	0					
ANR	4274474	IdentifierDeclStatement	"const char * param = "".foo/.bar.txt"" ;"	492:1:15098:15133	4274464	1	True				
ANR	4274475	IdentifierDecl	"* param = "".foo/.bar.txt"""		4274464	0					
ANR	4274476	IdentifierDeclType	const char *		4274464	0					
ANR	4274477	Identifier	param		4274464	1					
ANR	4274478	AssignmentExpression	"* param = "".foo/.bar.txt"""		4274464	2		=			
ANR	4274479	Identifier	param		4274464	0					
ANR	4274480	PrimaryExpression	""".foo/.bar.txt"""		4274464	1					
ANR	4274481	IdentifierDeclStatement	"const char * expected = "".bar.txt"" ;"	493:1:15136:15169	4274464	2	True				
ANR	4274482	IdentifierDecl	"* expected = "".bar.txt"""		4274464	0					
ANR	4274483	IdentifierDeclType	const char *		4274464	0					
ANR	4274484	Identifier	expected		4274464	1					
ANR	4274485	AssignmentExpression	"* expected = "".bar.txt"""		4274464	2		=			
ANR	4274486	Identifier	expected		4274464	0					
ANR	4274487	PrimaryExpression	""".bar.txt"""		4274464	1					
ANR	4274488	ExpressionStatement	emit_input_header ( )	494:1:15172:15191	4274464	3	True				
ANR	4274489	CallExpression	emit_input_header ( )		4274464	0					
ANR	4274490	Callee	emit_input_header		4274464	0					
ANR	4274491	Identifier	emit_input_header		4274464	0					
ANR	4274492	ArgumentList			4274464	1					
ANR	4274493	ExpressionStatement	"emit_param ( ""STRING"" , param )"	495:1:15194:15221	4274464	4	True				
ANR	4274494	CallExpression	"emit_param ( ""STRING"" , param )"		4274464	0					
ANR	4274495	Callee	emit_param		4274464	0					
ANR	4274496	Identifier	emit_param		4274464	0					
ANR	4274497	ArgumentList	"""STRING"""		4274464	1					
ANR	4274498	Argument	"""STRING"""		4274464	0					
ANR	4274499	PrimaryExpression	"""STRING"""		4274464	0					
ANR	4274500	Argument	param		4274464	1					
ANR	4274501	Identifier	param		4274464	0					
ANR	4274502	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	496:1:15224:15265	4274464	5	True				
ANR	4274503	IdentifierDecl	* path = condor_basename ( param )		4274464	0					
ANR	4274504	IdentifierDeclType	const char *		4274464	0					
ANR	4274505	Identifier	path		4274464	1					
ANR	4274506	AssignmentExpression	* path = condor_basename ( param )		4274464	2		=			
ANR	4274507	Identifier	path		4274464	0					
ANR	4274508	CallExpression	condor_basename ( param )		4274464	1					
ANR	4274509	Callee	condor_basename		4274464	0					
ANR	4274510	Identifier	condor_basename		4274464	0					
ANR	4274511	ArgumentList	param		4274464	1					
ANR	4274512	Argument	param		4274464	0					
ANR	4274513	Identifier	param		4274464	0					
ANR	4274514	ExpressionStatement	emit_output_expected_header ( )	497:1:15268:15297	4274464	6	True				
ANR	4274515	CallExpression	emit_output_expected_header ( )		4274464	0					
ANR	4274516	Callee	emit_output_expected_header		4274464	0					
ANR	4274517	Identifier	emit_output_expected_header		4274464	0					
ANR	4274518	ArgumentList			4274464	1					
ANR	4274519	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	498:1:15300:15327	4274464	7	True				
ANR	4274520	CallExpression	"emit_retval ( ""%s"" , expected )"		4274464	0					
ANR	4274521	Callee	emit_retval		4274464	0					
ANR	4274522	Identifier	emit_retval		4274464	0					
ANR	4274523	ArgumentList	"""%s"""		4274464	1					
ANR	4274524	Argument	"""%s"""		4274464	0					
ANR	4274525	PrimaryExpression	"""%s"""		4274464	0					
ANR	4274526	Argument	expected		4274464	1					
ANR	4274527	Identifier	expected		4274464	0					
ANR	4274528	ExpressionStatement	emit_output_actual_header ( )	499:1:15330:15357	4274464	8	True				
ANR	4274529	CallExpression	emit_output_actual_header ( )		4274464	0					
ANR	4274530	Callee	emit_output_actual_header		4274464	0					
ANR	4274531	Identifier	emit_output_actual_header		4274464	0					
ANR	4274532	ArgumentList			4274464	1					
ANR	4274533	ExpressionStatement	"emit_retval ( ""%s"" , path )"	500:1:15360:15383	4274464	9	True				
ANR	4274534	CallExpression	"emit_retval ( ""%s"" , path )"		4274464	0					
ANR	4274535	Callee	emit_retval		4274464	0					
ANR	4274536	Identifier	emit_retval		4274464	0					
ANR	4274537	ArgumentList	"""%s"""		4274464	1					
ANR	4274538	Argument	"""%s"""		4274464	0					
ANR	4274539	PrimaryExpression	"""%s"""		4274464	0					
ANR	4274540	Argument	path		4274464	1					
ANR	4274541	Identifier	path		4274464	0					
ANR	4274542	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274464	10					
ANR	4274543	Condition	"strcmp ( path , expected ) != MATCH"	501:4:15389:15419	4274464	0	True				
ANR	4274544	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274464	0		!=			
ANR	4274545	CallExpression	"strcmp ( path , expected )"		4274464	0					
ANR	4274546	Callee	strcmp		4274464	0					
ANR	4274547	Identifier	strcmp		4274464	0					
ANR	4274548	ArgumentList	path		4274464	1					
ANR	4274549	Argument	path		4274464	0					
ANR	4274550	Identifier	path		4274464	0					
ANR	4274551	Argument	expected		4274464	1					
ANR	4274552	Identifier	expected		4274464	0					
ANR	4274553	Identifier	MATCH		4274464	1					
ANR	4274554	CompoundStatement		12:37:483:483	4274464	1					
ANR	4274555	ExpressionStatement	FAIL	502:2:15426:15430	4274464	0	True				
ANR	4274556	Identifier	FAIL		4274464	0					
ANR	4274557	ExpressionStatement	PASS	504:1:15436:15440	4274464	11	True				
ANR	4274558	Identifier	PASS		4274464	0					
ANR	4274559	ReturnType	static bool		4274464	1					
ANR	4274560	Identifier	test_period_and_forward_slash_with_special_file		4274464	2					
ANR	4274561	ParameterList			4274464	3					
ANR	4274562	CFGEntryNode	ENTRY		4274464		True				
ANR	4274563	CFGExitNode	EXIT		4274464		True				
ANR	4274564	Symbol	strcmp		4274464						
ANR	4274565	Symbol	path		4274464						
ANR	4274566	Symbol	param		4274464						
ANR	4274567	Symbol	expected		4274464						
ANR	4274568	Symbol	condor_basename		4274464						
ANR	4274569	Symbol	MATCH		4274464						
ANR	4274570	Function	test_period_and_backslash_with_special_file	507:0:15445:16005							
ANR	4274571	FunctionDef	test_period_and_backslash_with_special_file ()		4274570	0					
ANR	4274572	CompoundStatement		507:58:15503:16005	4274570	0					
ANR	4274573	ExpressionStatement	"emit_test ( ""Does a path with one directory using a period and another using a backslash return the file name starting with a period and its extension?"" )"	508:1:15506:15657	4274570	0	True				
ANR	4274574	CallExpression	"emit_test ( ""Does a path with one directory using a period and another using a backslash return the file name starting with a period and its extension?"" )"		4274570	0					
ANR	4274575	Callee	emit_test		4274570	0					
ANR	4274576	Identifier	emit_test		4274570	0					
ANR	4274577	ArgumentList	"""Does a path with one directory using a period and another using a backslash return the file name starting with a period and its extension?"""		4274570	1					
ANR	4274578	Argument	"""Does a path with one directory using a period and another using a backslash return the file name starting with a period and its extension?"""		4274570	0					
ANR	4274579	PrimaryExpression	"""Does a path with one directory using a period and another using a backslash return the file name starting with a period and its extension?"""		4274570	0					
ANR	4274580	IdentifierDeclStatement	"const char * param = "".foo\\\\.bar.txt"" ;"	509:1:15660:15696	4274570	1	True				
ANR	4274581	IdentifierDecl	"* param = "".foo\\\\.bar.txt"""		4274570	0					
ANR	4274582	IdentifierDeclType	const char *		4274570	0					
ANR	4274583	Identifier	param		4274570	1					
ANR	4274584	AssignmentExpression	"* param = "".foo\\\\.bar.txt"""		4274570	2		=			
ANR	4274585	Identifier	param		4274570	0					
ANR	4274586	PrimaryExpression	""".foo\\\\.bar.txt"""		4274570	1					
ANR	4274587	IdentifierDeclStatement	"const char * expected = "".bar.txt"" ;"	510:1:15699:15732	4274570	2	True				
ANR	4274588	IdentifierDecl	"* expected = "".bar.txt"""		4274570	0					
ANR	4274589	IdentifierDeclType	const char *		4274570	0					
ANR	4274590	Identifier	expected		4274570	1					
ANR	4274591	AssignmentExpression	"* expected = "".bar.txt"""		4274570	2		=			
ANR	4274592	Identifier	expected		4274570	0					
ANR	4274593	PrimaryExpression	""".bar.txt"""		4274570	1					
ANR	4274594	ExpressionStatement	emit_input_header ( )	511:1:15735:15754	4274570	3	True				
ANR	4274595	CallExpression	emit_input_header ( )		4274570	0					
ANR	4274596	Callee	emit_input_header		4274570	0					
ANR	4274597	Identifier	emit_input_header		4274570	0					
ANR	4274598	ArgumentList			4274570	1					
ANR	4274599	ExpressionStatement	"emit_param ( ""STRING"" , param )"	512:1:15757:15784	4274570	4	True				
ANR	4274600	CallExpression	"emit_param ( ""STRING"" , param )"		4274570	0					
ANR	4274601	Callee	emit_param		4274570	0					
ANR	4274602	Identifier	emit_param		4274570	0					
ANR	4274603	ArgumentList	"""STRING"""		4274570	1					
ANR	4274604	Argument	"""STRING"""		4274570	0					
ANR	4274605	PrimaryExpression	"""STRING"""		4274570	0					
ANR	4274606	Argument	param		4274570	1					
ANR	4274607	Identifier	param		4274570	0					
ANR	4274608	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	513:1:15787:15828	4274570	5	True				
ANR	4274609	IdentifierDecl	* path = condor_basename ( param )		4274570	0					
ANR	4274610	IdentifierDeclType	const char *		4274570	0					
ANR	4274611	Identifier	path		4274570	1					
ANR	4274612	AssignmentExpression	* path = condor_basename ( param )		4274570	2		=			
ANR	4274613	Identifier	path		4274570	0					
ANR	4274614	CallExpression	condor_basename ( param )		4274570	1					
ANR	4274615	Callee	condor_basename		4274570	0					
ANR	4274616	Identifier	condor_basename		4274570	0					
ANR	4274617	ArgumentList	param		4274570	1					
ANR	4274618	Argument	param		4274570	0					
ANR	4274619	Identifier	param		4274570	0					
ANR	4274620	ExpressionStatement	emit_output_expected_header ( )	514:1:15831:15860	4274570	6	True				
ANR	4274621	CallExpression	emit_output_expected_header ( )		4274570	0					
ANR	4274622	Callee	emit_output_expected_header		4274570	0					
ANR	4274623	Identifier	emit_output_expected_header		4274570	0					
ANR	4274624	ArgumentList			4274570	1					
ANR	4274625	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	515:1:15863:15890	4274570	7	True				
ANR	4274626	CallExpression	"emit_retval ( ""%s"" , expected )"		4274570	0					
ANR	4274627	Callee	emit_retval		4274570	0					
ANR	4274628	Identifier	emit_retval		4274570	0					
ANR	4274629	ArgumentList	"""%s"""		4274570	1					
ANR	4274630	Argument	"""%s"""		4274570	0					
ANR	4274631	PrimaryExpression	"""%s"""		4274570	0					
ANR	4274632	Argument	expected		4274570	1					
ANR	4274633	Identifier	expected		4274570	0					
ANR	4274634	ExpressionStatement	emit_output_actual_header ( )	516:1:15893:15920	4274570	8	True				
ANR	4274635	CallExpression	emit_output_actual_header ( )		4274570	0					
ANR	4274636	Callee	emit_output_actual_header		4274570	0					
ANR	4274637	Identifier	emit_output_actual_header		4274570	0					
ANR	4274638	ArgumentList			4274570	1					
ANR	4274639	ExpressionStatement	"emit_retval ( ""%s"" , path )"	517:1:15923:15946	4274570	9	True				
ANR	4274640	CallExpression	"emit_retval ( ""%s"" , path )"		4274570	0					
ANR	4274641	Callee	emit_retval		4274570	0					
ANR	4274642	Identifier	emit_retval		4274570	0					
ANR	4274643	ArgumentList	"""%s"""		4274570	1					
ANR	4274644	Argument	"""%s"""		4274570	0					
ANR	4274645	PrimaryExpression	"""%s"""		4274570	0					
ANR	4274646	Argument	path		4274570	1					
ANR	4274647	Identifier	path		4274570	0					
ANR	4274648	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274570	10					
ANR	4274649	Condition	"strcmp ( path , expected ) != MATCH"	518:4:15952:15982	4274570	0	True				
ANR	4274650	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274570	0		!=			
ANR	4274651	CallExpression	"strcmp ( path , expected )"		4274570	0					
ANR	4274652	Callee	strcmp		4274570	0					
ANR	4274653	Identifier	strcmp		4274570	0					
ANR	4274654	ArgumentList	path		4274570	1					
ANR	4274655	Argument	path		4274570	0					
ANR	4274656	Identifier	path		4274570	0					
ANR	4274657	Argument	expected		4274570	1					
ANR	4274658	Identifier	expected		4274570	0					
ANR	4274659	Identifier	MATCH		4274570	1					
ANR	4274660	CompoundStatement		12:37:481:481	4274570	1					
ANR	4274661	ExpressionStatement	FAIL	519:2:15989:15993	4274570	0	True				
ANR	4274662	Identifier	FAIL		4274570	0					
ANR	4274663	ExpressionStatement	PASS	521:1:15999:16003	4274570	11	True				
ANR	4274664	Identifier	PASS		4274570	0					
ANR	4274665	ReturnType	static bool		4274570	1					
ANR	4274666	Identifier	test_period_and_backslash_with_special_file		4274570	2					
ANR	4274667	ParameterList			4274570	3					
ANR	4274668	CFGEntryNode	ENTRY		4274570		True				
ANR	4274669	CFGExitNode	EXIT		4274570		True				
ANR	4274670	Symbol	strcmp		4274570						
ANR	4274671	Symbol	path		4274570						
ANR	4274672	Symbol	param		4274570						
ANR	4274673	Symbol	expected		4274570						
ANR	4274674	Symbol	condor_basename		4274570						
ANR	4274675	Symbol	MATCH		4274570						
ANR	4274676	Function	test_double_forward_slash	524:0:16008:16555							
ANR	4274677	FunctionDef	test_double_forward_slash ()		4274676	0					
ANR	4274678	CompoundStatement		524:40:16048:16555	4274676	0					
ANR	4274679	ExpressionStatement	"emit_test ( ""Does a path with one directory using a double forwardslash and the others using single forwardslashes return the file name and its extension?"" )"	525:1:16051:16205	4274676	0	True				
ANR	4274680	CallExpression	"emit_test ( ""Does a path with one directory using a double forwardslash and the others using single forwardslashes return the file name and its extension?"" )"		4274676	0					
ANR	4274681	Callee	emit_test		4274676	0					
ANR	4274682	Identifier	emit_test		4274676	0					
ANR	4274683	ArgumentList	"""Does a path with one directory using a double forwardslash and the others using single forwardslashes return the file name and its extension?"""		4274676	1					
ANR	4274684	Argument	"""Does a path with one directory using a double forwardslash and the others using single forwardslashes return the file name and its extension?"""		4274676	0					
ANR	4274685	PrimaryExpression	"""Does a path with one directory using a double forwardslash and the others using single forwardslashes return the file name and its extension?"""		4274676	0					
ANR	4274686	IdentifierDeclStatement	"const char * param = ""//foo/bar/zap.txt"" ;"	526:1:16208:16247	4274676	1	True				
ANR	4274687	IdentifierDecl	"* param = ""//foo/bar/zap.txt"""		4274676	0					
ANR	4274688	IdentifierDeclType	const char *		4274676	0					
ANR	4274689	Identifier	param		4274676	1					
ANR	4274690	AssignmentExpression	"* param = ""//foo/bar/zap.txt"""		4274676	2		=			
ANR	4274691	Identifier	param		4274676	0					
ANR	4274692	PrimaryExpression	"""//foo/bar/zap.txt"""		4274676	1					
ANR	4274693	IdentifierDeclStatement	"const char * expected = ""zap.txt"" ;"	527:1:16250:16282	4274676	2	True				
ANR	4274694	IdentifierDecl	"* expected = ""zap.txt"""		4274676	0					
ANR	4274695	IdentifierDeclType	const char *		4274676	0					
ANR	4274696	Identifier	expected		4274676	1					
ANR	4274697	AssignmentExpression	"* expected = ""zap.txt"""		4274676	2		=			
ANR	4274698	Identifier	expected		4274676	0					
ANR	4274699	PrimaryExpression	"""zap.txt"""		4274676	1					
ANR	4274700	ExpressionStatement	emit_input_header ( )	528:1:16285:16304	4274676	3	True				
ANR	4274701	CallExpression	emit_input_header ( )		4274676	0					
ANR	4274702	Callee	emit_input_header		4274676	0					
ANR	4274703	Identifier	emit_input_header		4274676	0					
ANR	4274704	ArgumentList			4274676	1					
ANR	4274705	ExpressionStatement	"emit_param ( ""STRING"" , param )"	529:1:16307:16334	4274676	4	True				
ANR	4274706	CallExpression	"emit_param ( ""STRING"" , param )"		4274676	0					
ANR	4274707	Callee	emit_param		4274676	0					
ANR	4274708	Identifier	emit_param		4274676	0					
ANR	4274709	ArgumentList	"""STRING"""		4274676	1					
ANR	4274710	Argument	"""STRING"""		4274676	0					
ANR	4274711	PrimaryExpression	"""STRING"""		4274676	0					
ANR	4274712	Argument	param		4274676	1					
ANR	4274713	Identifier	param		4274676	0					
ANR	4274714	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	530:1:16337:16378	4274676	5	True				
ANR	4274715	IdentifierDecl	* path = condor_basename ( param )		4274676	0					
ANR	4274716	IdentifierDeclType	const char *		4274676	0					
ANR	4274717	Identifier	path		4274676	1					
ANR	4274718	AssignmentExpression	* path = condor_basename ( param )		4274676	2		=			
ANR	4274719	Identifier	path		4274676	0					
ANR	4274720	CallExpression	condor_basename ( param )		4274676	1					
ANR	4274721	Callee	condor_basename		4274676	0					
ANR	4274722	Identifier	condor_basename		4274676	0					
ANR	4274723	ArgumentList	param		4274676	1					
ANR	4274724	Argument	param		4274676	0					
ANR	4274725	Identifier	param		4274676	0					
ANR	4274726	ExpressionStatement	emit_output_expected_header ( )	531:1:16381:16410	4274676	6	True				
ANR	4274727	CallExpression	emit_output_expected_header ( )		4274676	0					
ANR	4274728	Callee	emit_output_expected_header		4274676	0					
ANR	4274729	Identifier	emit_output_expected_header		4274676	0					
ANR	4274730	ArgumentList			4274676	1					
ANR	4274731	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	532:1:16413:16440	4274676	7	True				
ANR	4274732	CallExpression	"emit_retval ( ""%s"" , expected )"		4274676	0					
ANR	4274733	Callee	emit_retval		4274676	0					
ANR	4274734	Identifier	emit_retval		4274676	0					
ANR	4274735	ArgumentList	"""%s"""		4274676	1					
ANR	4274736	Argument	"""%s"""		4274676	0					
ANR	4274737	PrimaryExpression	"""%s"""		4274676	0					
ANR	4274738	Argument	expected		4274676	1					
ANR	4274739	Identifier	expected		4274676	0					
ANR	4274740	ExpressionStatement	emit_output_actual_header ( )	533:1:16443:16470	4274676	8	True				
ANR	4274741	CallExpression	emit_output_actual_header ( )		4274676	0					
ANR	4274742	Callee	emit_output_actual_header		4274676	0					
ANR	4274743	Identifier	emit_output_actual_header		4274676	0					
ANR	4274744	ArgumentList			4274676	1					
ANR	4274745	ExpressionStatement	"emit_retval ( ""%s"" , path )"	534:1:16473:16496	4274676	9	True				
ANR	4274746	CallExpression	"emit_retval ( ""%s"" , path )"		4274676	0					
ANR	4274747	Callee	emit_retval		4274676	0					
ANR	4274748	Identifier	emit_retval		4274676	0					
ANR	4274749	ArgumentList	"""%s"""		4274676	1					
ANR	4274750	Argument	"""%s"""		4274676	0					
ANR	4274751	PrimaryExpression	"""%s"""		4274676	0					
ANR	4274752	Argument	path		4274676	1					
ANR	4274753	Identifier	path		4274676	0					
ANR	4274754	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274676	10					
ANR	4274755	Condition	"strcmp ( path , expected ) != MATCH"	535:4:16502:16532	4274676	0	True				
ANR	4274756	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274676	0		!=			
ANR	4274757	CallExpression	"strcmp ( path , expected )"		4274676	0					
ANR	4274758	Callee	strcmp		4274676	0					
ANR	4274759	Identifier	strcmp		4274676	0					
ANR	4274760	ArgumentList	path		4274676	1					
ANR	4274761	Argument	path		4274676	0					
ANR	4274762	Identifier	path		4274676	0					
ANR	4274763	Argument	expected		4274676	1					
ANR	4274764	Identifier	expected		4274676	0					
ANR	4274765	Identifier	MATCH		4274676	1					
ANR	4274766	CompoundStatement		12:37:486:486	4274676	1					
ANR	4274767	ExpressionStatement	FAIL	536:2:16539:16543	4274676	0	True				
ANR	4274768	Identifier	FAIL		4274676	0					
ANR	4274769	ExpressionStatement	PASS	538:1:16549:16553	4274676	11	True				
ANR	4274770	Identifier	PASS		4274676	0					
ANR	4274771	ReturnType	static bool		4274676	1					
ANR	4274772	Identifier	test_double_forward_slash		4274676	2					
ANR	4274773	ParameterList			4274676	3					
ANR	4274774	CFGEntryNode	ENTRY		4274676		True				
ANR	4274775	CFGExitNode	EXIT		4274676		True				
ANR	4274776	Symbol	strcmp		4274676						
ANR	4274777	Symbol	path		4274676						
ANR	4274778	Symbol	param		4274676						
ANR	4274779	Symbol	expected		4274676						
ANR	4274780	Symbol	condor_basename		4274676						
ANR	4274781	Symbol	MATCH		4274676						
ANR	4274782	Function	test_double_backslash	541:0:16558:17099							
ANR	4274783	FunctionDef	test_double_backslash ()		4274782	0					
ANR	4274784	CompoundStatement		541:36:16594:17099	4274782	0					
ANR	4274785	ExpressionStatement	"emit_test ( ""Does a path with one directory using a double backslash and the othere using single backslashes return the file name and its extension?"" )"	542:1:16597:16745	4274782	0	True				
ANR	4274786	CallExpression	"emit_test ( ""Does a path with one directory using a double backslash and the othere using single backslashes return the file name and its extension?"" )"		4274782	0					
ANR	4274787	Callee	emit_test		4274782	0					
ANR	4274788	Identifier	emit_test		4274782	0					
ANR	4274789	ArgumentList	"""Does a path with one directory using a double backslash and the othere using single backslashes return the file name and its extension?"""		4274782	1					
ANR	4274790	Argument	"""Does a path with one directory using a double backslash and the othere using single backslashes return the file name and its extension?"""		4274782	0					
ANR	4274791	PrimaryExpression	"""Does a path with one directory using a double backslash and the othere using single backslashes return the file name and its extension?"""		4274782	0					
ANR	4274792	IdentifierDeclStatement	"const char * param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"" ;"	543:1:16748:16791	4274782	1	True				
ANR	4274793	IdentifierDecl	"* param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4274782	0					
ANR	4274794	IdentifierDeclType	const char *		4274782	0					
ANR	4274795	Identifier	param		4274782	1					
ANR	4274796	AssignmentExpression	"* param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4274782	2		=			
ANR	4274797	Identifier	param		4274782	0					
ANR	4274798	PrimaryExpression	"""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4274782	1					
ANR	4274799	IdentifierDeclStatement	"const char * expected = ""zap.txt"" ;"	544:1:16794:16826	4274782	2	True				
ANR	4274800	IdentifierDecl	"* expected = ""zap.txt"""		4274782	0					
ANR	4274801	IdentifierDeclType	const char *		4274782	0					
ANR	4274802	Identifier	expected		4274782	1					
ANR	4274803	AssignmentExpression	"* expected = ""zap.txt"""		4274782	2		=			
ANR	4274804	Identifier	expected		4274782	0					
ANR	4274805	PrimaryExpression	"""zap.txt"""		4274782	1					
ANR	4274806	ExpressionStatement	emit_input_header ( )	545:1:16829:16848	4274782	3	True				
ANR	4274807	CallExpression	emit_input_header ( )		4274782	0					
ANR	4274808	Callee	emit_input_header		4274782	0					
ANR	4274809	Identifier	emit_input_header		4274782	0					
ANR	4274810	ArgumentList			4274782	1					
ANR	4274811	ExpressionStatement	"emit_param ( ""STRING"" , param )"	546:1:16851:16878	4274782	4	True				
ANR	4274812	CallExpression	"emit_param ( ""STRING"" , param )"		4274782	0					
ANR	4274813	Callee	emit_param		4274782	0					
ANR	4274814	Identifier	emit_param		4274782	0					
ANR	4274815	ArgumentList	"""STRING"""		4274782	1					
ANR	4274816	Argument	"""STRING"""		4274782	0					
ANR	4274817	PrimaryExpression	"""STRING"""		4274782	0					
ANR	4274818	Argument	param		4274782	1					
ANR	4274819	Identifier	param		4274782	0					
ANR	4274820	IdentifierDeclStatement	const char * path = condor_basename ( param ) ;	547:1:16881:16922	4274782	5	True				
ANR	4274821	IdentifierDecl	* path = condor_basename ( param )		4274782	0					
ANR	4274822	IdentifierDeclType	const char *		4274782	0					
ANR	4274823	Identifier	path		4274782	1					
ANR	4274824	AssignmentExpression	* path = condor_basename ( param )		4274782	2		=			
ANR	4274825	Identifier	path		4274782	0					
ANR	4274826	CallExpression	condor_basename ( param )		4274782	1					
ANR	4274827	Callee	condor_basename		4274782	0					
ANR	4274828	Identifier	condor_basename		4274782	0					
ANR	4274829	ArgumentList	param		4274782	1					
ANR	4274830	Argument	param		4274782	0					
ANR	4274831	Identifier	param		4274782	0					
ANR	4274832	ExpressionStatement	emit_output_expected_header ( )	548:1:16925:16954	4274782	6	True				
ANR	4274833	CallExpression	emit_output_expected_header ( )		4274782	0					
ANR	4274834	Callee	emit_output_expected_header		4274782	0					
ANR	4274835	Identifier	emit_output_expected_header		4274782	0					
ANR	4274836	ArgumentList			4274782	1					
ANR	4274837	ExpressionStatement	"emit_retval ( ""%s"" , expected )"	549:1:16957:16984	4274782	7	True				
ANR	4274838	CallExpression	"emit_retval ( ""%s"" , expected )"		4274782	0					
ANR	4274839	Callee	emit_retval		4274782	0					
ANR	4274840	Identifier	emit_retval		4274782	0					
ANR	4274841	ArgumentList	"""%s"""		4274782	1					
ANR	4274842	Argument	"""%s"""		4274782	0					
ANR	4274843	PrimaryExpression	"""%s"""		4274782	0					
ANR	4274844	Argument	expected		4274782	1					
ANR	4274845	Identifier	expected		4274782	0					
ANR	4274846	ExpressionStatement	emit_output_actual_header ( )	550:1:16987:17014	4274782	8	True				
ANR	4274847	CallExpression	emit_output_actual_header ( )		4274782	0					
ANR	4274848	Callee	emit_output_actual_header		4274782	0					
ANR	4274849	Identifier	emit_output_actual_header		4274782	0					
ANR	4274850	ArgumentList			4274782	1					
ANR	4274851	ExpressionStatement	"emit_retval ( ""%s"" , path )"	551:1:17017:17040	4274782	9	True				
ANR	4274852	CallExpression	"emit_retval ( ""%s"" , path )"		4274782	0					
ANR	4274853	Callee	emit_retval		4274782	0					
ANR	4274854	Identifier	emit_retval		4274782	0					
ANR	4274855	ArgumentList	"""%s"""		4274782	1					
ANR	4274856	Argument	"""%s"""		4274782	0					
ANR	4274857	PrimaryExpression	"""%s"""		4274782	0					
ANR	4274858	Argument	path		4274782	1					
ANR	4274859	Identifier	path		4274782	0					
ANR	4274860	IfStatement	"if ( strcmp ( path , expected ) != MATCH )"		4274782	10					
ANR	4274861	Condition	"strcmp ( path , expected ) != MATCH"	552:4:17046:17076	4274782	0	True				
ANR	4274862	EqualityExpression	"strcmp ( path , expected ) != MATCH"		4274782	0		!=			
ANR	4274863	CallExpression	"strcmp ( path , expected )"		4274782	0					
ANR	4274864	Callee	strcmp		4274782	0					
ANR	4274865	Identifier	strcmp		4274782	0					
ANR	4274866	ArgumentList	path		4274782	1					
ANR	4274867	Argument	path		4274782	0					
ANR	4274868	Identifier	path		4274782	0					
ANR	4274869	Argument	expected		4274782	1					
ANR	4274870	Identifier	expected		4274782	0					
ANR	4274871	Identifier	MATCH		4274782	1					
ANR	4274872	CompoundStatement		12:37:484:484	4274782	1					
ANR	4274873	ExpressionStatement	FAIL	553:2:17083:17087	4274782	0	True				
ANR	4274874	Identifier	FAIL		4274782	0					
ANR	4274875	ExpressionStatement	PASS	555:1:17093:17097	4274782	11	True				
ANR	4274876	Identifier	PASS		4274782	0					
ANR	4274877	ReturnType	static bool		4274782	1					
ANR	4274878	Identifier	test_double_backslash		4274782	2					
ANR	4274879	ParameterList			4274782	3					
ANR	4274880	CFGEntryNode	ENTRY		4274782		True				
ANR	4274881	CFGExitNode	EXIT		4274782		True				
ANR	4274882	Symbol	strcmp		4274782						
ANR	4274883	Symbol	path		4274782						
ANR	4274884	Symbol	param		4274782						
ANR	4274885	Symbol	expected		4274782						
ANR	4274886	Symbol	condor_basename		4274782						
ANR	4274887	Symbol	MATCH		4274782						
