command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1671652	File	data/converged/CVE-2011-4930_htcondor/io_loop_pthread.cpp								
ANR	1671653	DeclStmt									
ANR	1671654	Decl							int	int	RESULT_OUTBOX
ANR	1671655	DeclStmt									
ANR	1671656	Decl							int	int	REQUEST_INBOX
ANR	1671657	DeclStmt									
ANR	1671658	Decl							const char	const char *	version
ANR	1671659	DeclStmt									
ANR	1671660	Decl							IOProcess	IOProcess *	ioprocess
ANR	1671661	DeclStmt									
ANR	1671662	Decl							void	void ( )	gahp_output_return_error
ANR	1671663	DeclStmt									
ANR	1671664	Decl							void	void ( )	gahp_output_return_success
ANR	1671665	DeclStmt									
ANR	1671666	Decl							void	"void ( const char * * results , const int count )"	gahp_output_return
ANR	1671667	DeclStmt									
ANR	1671668	Decl							int	"int ( char * * argv , int argc )"	verify_gahp_command
ANR	1671669	DeclStmt									
ANR	1671670	Decl							void	void * ( void * ptr )	worker_function
ANR	1671671	DeclStmt									
ANR	1671672	Decl							pthread_mutex_t	pthread_mutex_t	global_big_mutex
ANR	1671673	Function	io_process_exit	63:0:2231:2294							
ANR	1671674	FunctionDef	io_process_exit (int exit_num)		1671673	0					
ANR	1671675	CompoundStatement		64:0:2273:2294	1671673	0					
ANR	1671676	ExpressionStatement	exit ( exit_num )	65:1:2276:2292	1671673	0	True				
ANR	1671677	CallExpression	exit ( exit_num )		1671673	0					
ANR	1671678	Callee	exit		1671673	0					
ANR	1671679	Identifier	exit		1671673	0					
ANR	1671680	ArgumentList	exit_num		1671673	1					
ANR	1671681	Argument	exit_num		1671673	0					
ANR	1671682	Identifier	exit_num		1671673	0					
ANR	1671683	ReturnType	static void		1671673	1					
ANR	1671684	Identifier	io_process_exit		1671673	2					
ANR	1671685	ParameterList	int exit_num		1671673	3					
ANR	1671686	Parameter	int exit_num	63:28:2259:2270	1671673	0	True				
ANR	1671687	ParameterType	int		1671673	0					
ANR	1671688	Identifier	exit_num		1671673	1					
ANR	1671689	CFGEntryNode	ENTRY		1671673		True				
ANR	1671690	CFGExitNode	EXIT		1671673		True				
ANR	1671691	Symbol	exit_num		1671673						
ANR	1671692	Function	usage	68:0:2297:2419							
ANR	1671693	FunctionDef	usage ()		1671692	0					
ANR	1671694	CompoundStatement		70:0:2310:2419	1671692	0					
ANR	1671695	ExpressionStatement	"dprintf ( D_ALWAYS , ""Usage: amazon_gahp -d debuglevel -w min_worker_nums -m max_worker_nums\\n"" )"	71:1:2313:2407	1671692	0	True				
ANR	1671696	CallExpression	"dprintf ( D_ALWAYS , ""Usage: amazon_gahp -d debuglevel -w min_worker_nums -m max_worker_nums\\n"" )"		1671692	0					
ANR	1671697	Callee	dprintf		1671692	0					
ANR	1671698	Identifier	dprintf		1671692	0					
ANR	1671699	ArgumentList	D_ALWAYS		1671692	1					
ANR	1671700	Argument	D_ALWAYS		1671692	0					
ANR	1671701	Identifier	D_ALWAYS		1671692	0					
ANR	1671702	Argument	"""Usage: amazon_gahp -d debuglevel -w min_worker_nums -m max_worker_nums\\n"""		1671692	1					
ANR	1671703	PrimaryExpression	"""Usage: amazon_gahp -d debuglevel -w min_worker_nums -m max_worker_nums\\n"""		1671692	0					
ANR	1671704	ExpressionStatement	exit ( 1 )	72:1:2410:2417	1671692	1	True				
ANR	1671705	CallExpression	exit ( 1 )		1671692	0					
ANR	1671706	Callee	exit		1671692	0					
ANR	1671707	Identifier	exit		1671692	0					
ANR	1671708	ArgumentList	1		1671692	1					
ANR	1671709	Argument	1		1671692	0					
ANR	1671710	PrimaryExpression	1		1671692	0					
ANR	1671711	ReturnType	void		1671692	1					
ANR	1671712	Identifier	usage		1671692	2					
ANR	1671713	ParameterList			1671692	3					
ANR	1671714	CFGEntryNode	ENTRY		1671692		True				
ANR	1671715	CFGExitNode	EXIT		1671692		True				
ANR	1671716	Symbol	D_ALWAYS		1671692						
ANR	1671717	Function	registerAllAmazonCommands	75:0:2422:6514							
ANR	1671718	FunctionDef	registerAllAmazonCommands ()		1671717	0					
ANR	1671719	CompoundStatement		77:0:2466:6514	1671717	0					
ANR	1671720	IfStatement	if ( numofAmazonCommands ( ) > 0 )		1671717	0					
ANR	1671721	Condition	numofAmazonCommands ( ) > 0	78:5:2473:2497	1671717	0	True				
ANR	1671722	RelationalExpression	numofAmazonCommands ( ) > 0		1671717	0		>			
ANR	1671723	CallExpression	numofAmazonCommands ( )		1671717	0					
ANR	1671724	Callee	numofAmazonCommands		1671717	0					
ANR	1671725	Identifier	numofAmazonCommands		1671717	0					
ANR	1671726	ArgumentList			1671717	1					
ANR	1671727	PrimaryExpression	0		1671717	1					
ANR	1671728	CompoundStatement		2:33:34:34	1671717	1					
ANR	1671729	ExpressionStatement	"dprintf ( D_ALWAYS , ""There are already registered commands\\n"" )"	79:2:2505:2565	1671717	0	True				
ANR	1671730	CallExpression	"dprintf ( D_ALWAYS , ""There are already registered commands\\n"" )"		1671717	0					
ANR	1671731	Callee	dprintf		1671717	0					
ANR	1671732	Identifier	dprintf		1671717	0					
ANR	1671733	ArgumentList	D_ALWAYS		1671717	1					
ANR	1671734	Argument	D_ALWAYS		1671717	0					
ANR	1671735	Identifier	D_ALWAYS		1671717	0					
ANR	1671736	Argument	"""There are already registered commands\\n"""		1671717	1					
ANR	1671737	PrimaryExpression	"""There are already registered commands\\n"""		1671717	0					
ANR	1671738	ReturnStatement	return false ;	80:2:2569:2581	1671717	1	True				
ANR	1671739	Identifier	false		1671717	0					
ANR	1671740	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_START , AmazonVMStart :: ioCheck , AmazonVMStart :: workerFunction )"	85:1:2606:2715	1671717	1	True				
ANR	1671741	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_START , AmazonVMStart :: ioCheck , AmazonVMStart :: workerFunction )"		1671717	0					
ANR	1671742	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671743	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671744	ArgumentList	AMAZON_COMMAND_VM_START		1671717	1					
ANR	1671745	Argument	AMAZON_COMMAND_VM_START		1671717	0					
ANR	1671746	Identifier	AMAZON_COMMAND_VM_START		1671717	0					
ANR	1671747	Argument	AmazonVMStart :: ioCheck		1671717	1					
ANR	1671748	Identifier	AmazonVMStart :: ioCheck		1671717	0					
ANR	1671749	Argument	AmazonVMStart :: workerFunction		1671717	2					
ANR	1671750	Identifier	AmazonVMStart :: workerFunction		1671717	0					
ANR	1671751	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STOP , AmazonVMStop :: ioCheck , AmazonVMStop :: workerFunction )"	88:1:2719:2825	1671717	2	True				
ANR	1671752	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STOP , AmazonVMStop :: ioCheck , AmazonVMStop :: workerFunction )"		1671717	0					
ANR	1671753	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671754	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671755	ArgumentList	AMAZON_COMMAND_VM_STOP		1671717	1					
ANR	1671756	Argument	AMAZON_COMMAND_VM_STOP		1671717	0					
ANR	1671757	Identifier	AMAZON_COMMAND_VM_STOP		1671717	0					
ANR	1671758	Argument	AmazonVMStop :: ioCheck		1671717	1					
ANR	1671759	Identifier	AmazonVMStop :: ioCheck		1671717	0					
ANR	1671760	Argument	AmazonVMStop :: workerFunction		1671717	2					
ANR	1671761	Identifier	AmazonVMStop :: workerFunction		1671717	0					
ANR	1671762	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STATUS , AmazonVMStatus :: ioCheck , AmazonVMStatus :: workerFunction )"	96:1:2953:3065	1671717	3	True				
ANR	1671763	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STATUS , AmazonVMStatus :: ioCheck , AmazonVMStatus :: workerFunction )"		1671717	0					
ANR	1671764	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671765	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671766	ArgumentList	AMAZON_COMMAND_VM_STATUS		1671717	1					
ANR	1671767	Argument	AMAZON_COMMAND_VM_STATUS		1671717	0					
ANR	1671768	Identifier	AMAZON_COMMAND_VM_STATUS		1671717	0					
ANR	1671769	Argument	AmazonVMStatus :: ioCheck		1671717	1					
ANR	1671770	Identifier	AmazonVMStatus :: ioCheck		1671717	0					
ANR	1671771	Argument	AmazonVMStatus :: workerFunction		1671717	2					
ANR	1671772	Identifier	AmazonVMStatus :: workerFunction		1671717	0					
ANR	1671773	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STATUS_ALL , AmazonVMStatusAll :: ioCheck , AmazonVMStatusAll :: workerFunction )"	99:1:3069:3191	1671717	4	True				
ANR	1671774	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_STATUS_ALL , AmazonVMStatusAll :: ioCheck , AmazonVMStatusAll :: workerFunction )"		1671717	0					
ANR	1671775	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671776	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671777	ArgumentList	AMAZON_COMMAND_VM_STATUS_ALL		1671717	1					
ANR	1671778	Argument	AMAZON_COMMAND_VM_STATUS_ALL		1671717	0					
ANR	1671779	Identifier	AMAZON_COMMAND_VM_STATUS_ALL		1671717	0					
ANR	1671780	Argument	AmazonVMStatusAll :: ioCheck		1671717	1					
ANR	1671781	Identifier	AmazonVMStatusAll :: ioCheck		1671717	0					
ANR	1671782	Argument	AmazonVMStatusAll :: workerFunction		1671717	2					
ANR	1671783	Identifier	AmazonVMStatusAll :: workerFunction		1671717	0					
ANR	1671784	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_RUNNING_KEYPAIR , AmazonVMRunningKeypair :: ioCheck , AmazonVMRunningKeypair :: workerFunction )"	102:1:3195:3332	1671717	5	True				
ANR	1671785	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_RUNNING_KEYPAIR , AmazonVMRunningKeypair :: ioCheck , AmazonVMRunningKeypair :: workerFunction )"		1671717	0					
ANR	1671786	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671787	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671788	ArgumentList	AMAZON_COMMAND_VM_RUNNING_KEYPAIR		1671717	1					
ANR	1671789	Argument	AMAZON_COMMAND_VM_RUNNING_KEYPAIR		1671717	0					
ANR	1671790	Identifier	AMAZON_COMMAND_VM_RUNNING_KEYPAIR		1671717	0					
ANR	1671791	Argument	AmazonVMRunningKeypair :: ioCheck		1671717	1					
ANR	1671792	Identifier	AmazonVMRunningKeypair :: ioCheck		1671717	0					
ANR	1671793	Argument	AmazonVMRunningKeypair :: workerFunction		1671717	2					
ANR	1671794	Identifier	AmazonVMRunningKeypair :: workerFunction		1671717	0					
ANR	1671795	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_CREATE_KEYPAIR , AmazonVMCreateKeypair :: ioCheck , AmazonVMCreateKeypair :: workerFunction )"	126:1:4139:4273	1671717	6	True				
ANR	1671796	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_CREATE_KEYPAIR , AmazonVMCreateKeypair :: ioCheck , AmazonVMCreateKeypair :: workerFunction )"		1671717	0					
ANR	1671797	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671798	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671799	ArgumentList	AMAZON_COMMAND_VM_CREATE_KEYPAIR		1671717	1					
ANR	1671800	Argument	AMAZON_COMMAND_VM_CREATE_KEYPAIR		1671717	0					
ANR	1671801	Identifier	AMAZON_COMMAND_VM_CREATE_KEYPAIR		1671717	0					
ANR	1671802	Argument	AmazonVMCreateKeypair :: ioCheck		1671717	1					
ANR	1671803	Identifier	AmazonVMCreateKeypair :: ioCheck		1671717	0					
ANR	1671804	Argument	AmazonVMCreateKeypair :: workerFunction		1671717	2					
ANR	1671805	Identifier	AmazonVMCreateKeypair :: workerFunction		1671717	0					
ANR	1671806	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_DESTROY_KEYPAIR , AmazonVMDestroyKeypair :: ioCheck , AmazonVMDestroyKeypair :: workerFunction )"	129:1:4277:4414	1671717	7	True				
ANR	1671807	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_DESTROY_KEYPAIR , AmazonVMDestroyKeypair :: ioCheck , AmazonVMDestroyKeypair :: workerFunction )"		1671717	0					
ANR	1671808	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671809	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671810	ArgumentList	AMAZON_COMMAND_VM_DESTROY_KEYPAIR		1671717	1					
ANR	1671811	Argument	AMAZON_COMMAND_VM_DESTROY_KEYPAIR		1671717	0					
ANR	1671812	Identifier	AMAZON_COMMAND_VM_DESTROY_KEYPAIR		1671717	0					
ANR	1671813	Argument	AmazonVMDestroyKeypair :: ioCheck		1671717	1					
ANR	1671814	Identifier	AmazonVMDestroyKeypair :: ioCheck		1671717	0					
ANR	1671815	Argument	AmazonVMDestroyKeypair :: workerFunction		1671717	2					
ANR	1671816	Identifier	AmazonVMDestroyKeypair :: workerFunction		1671717	0					
ANR	1671817	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_KEYPAIR_NAMES , AmazonVMKeypairNames :: ioCheck , AmazonVMKeypairNames :: workerFunction )"	132:1:4418:4549	1671717	8	True				
ANR	1671818	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_KEYPAIR_NAMES , AmazonVMKeypairNames :: ioCheck , AmazonVMKeypairNames :: workerFunction )"		1671717	0					
ANR	1671819	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671820	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671821	ArgumentList	AMAZON_COMMAND_VM_KEYPAIR_NAMES		1671717	1					
ANR	1671822	Argument	AMAZON_COMMAND_VM_KEYPAIR_NAMES		1671717	0					
ANR	1671823	Identifier	AMAZON_COMMAND_VM_KEYPAIR_NAMES		1671717	0					
ANR	1671824	Argument	AmazonVMKeypairNames :: ioCheck		1671717	1					
ANR	1671825	Identifier	AmazonVMKeypairNames :: ioCheck		1671717	0					
ANR	1671826	Argument	AmazonVMKeypairNames :: workerFunction		1671717	2					
ANR	1671827	Identifier	AmazonVMKeypairNames :: workerFunction		1671717	0					
ANR	1671828	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS , AmazonAssociateAddress :: ioCheck , AmazonAssociateAddress :: workerFunction )"	135:4:4560:4708	1671717	9	True				
ANR	1671829	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS , AmazonAssociateAddress :: ioCheck , AmazonAssociateAddress :: workerFunction )"		1671717	0					
ANR	1671830	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671831	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671832	ArgumentList	AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS		1671717	1					
ANR	1671833	Argument	AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS		1671717	0					
ANR	1671834	Identifier	AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS		1671717	0					
ANR	1671835	Argument	AmazonAssociateAddress :: ioCheck		1671717	1					
ANR	1671836	Identifier	AmazonAssociateAddress :: ioCheck		1671717	0					
ANR	1671837	Argument	AmazonAssociateAddress :: workerFunction		1671717	2					
ANR	1671838	Identifier	AmazonAssociateAddress :: workerFunction		1671717	0					
ANR	1671839	ExpressionStatement	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_ATTACH_VOLUME , AmazonAttachVolume :: ioCheck , AmazonAttachVolume :: workerFunction )"	138:2:4714:4850	1671717	10	True				
ANR	1671840	CallExpression	"registerAmazonGahpCommand ( AMAZON_COMMAND_VM_ATTACH_VOLUME , AmazonAttachVolume :: ioCheck , AmazonAttachVolume :: workerFunction )"		1671717	0					
ANR	1671841	Callee	registerAmazonGahpCommand		1671717	0					
ANR	1671842	Identifier	registerAmazonGahpCommand		1671717	0					
ANR	1671843	ArgumentList	AMAZON_COMMAND_VM_ATTACH_VOLUME		1671717	1					
ANR	1671844	Argument	AMAZON_COMMAND_VM_ATTACH_VOLUME		1671717	0					
ANR	1671845	Identifier	AMAZON_COMMAND_VM_ATTACH_VOLUME		1671717	0					
ANR	1671846	Argument	AmazonAttachVolume :: ioCheck		1671717	1					
ANR	1671847	Identifier	AmazonAttachVolume :: ioCheck		1671717	0					
ANR	1671848	Argument	AmazonAttachVolume :: workerFunction		1671717	2					
ANR	1671849	Identifier	AmazonAttachVolume :: workerFunction		1671717	0					
ANR	1671850	ReturnStatement	return true ;	183:1:6501:6512	1671717	11	True				
ANR	1671851	Identifier	true		1671717	0					
ANR	1671852	ReturnType	static bool		1671717	1					
ANR	1671853	Identifier	registerAllAmazonCommands		1671717	2					
ANR	1671854	ParameterList			1671717	3					
ANR	1671855	CFGEntryNode	ENTRY		1671717		True				
ANR	1671856	CFGExitNode	EXIT		1671717		True				
ANR	1671857	Symbol	AmazonAssociateAddress :: workerFunction		1671717						
ANR	1671858	Symbol	AMAZON_COMMAND_VM_STATUS_ALL		1671717						
ANR	1671859	Symbol	AmazonVMStop :: ioCheck		1671717						
ANR	1671860	Symbol	AMAZON_COMMAND_VM_CREATE_KEYPAIR		1671717						
ANR	1671861	Symbol	AmazonVMDestroyKeypair :: workerFunction		1671717						
ANR	1671862	Symbol	AMAZON_COMMAND_VM_STATUS		1671717						
ANR	1671863	Symbol	AmazonVMCreateKeypair :: ioCheck		1671717						
ANR	1671864	Symbol	AmazonVMKeypairNames :: workerFunction		1671717						
ANR	1671865	Symbol	numofAmazonCommands		1671717						
ANR	1671866	Symbol	AMAZON_COMMAND_VM_DESTROY_KEYPAIR		1671717						
ANR	1671867	Symbol	AmazonAttachVolume :: workerFunction		1671717						
ANR	1671868	Symbol	AMAZON_COMMAND_VM_ATTACH_VOLUME		1671717						
ANR	1671869	Symbol	AmazonVMDestroyKeypair :: ioCheck		1671717						
ANR	1671870	Symbol	AmazonVMStart :: ioCheck		1671717						
ANR	1671871	Symbol	AmazonVMStop :: workerFunction		1671717						
ANR	1671872	Symbol	AmazonVMStatus :: workerFunction		1671717						
ANR	1671873	Symbol	AMAZON_COMMAND_VM_START		1671717						
ANR	1671874	Symbol	AmazonVMCreateKeypair :: workerFunction		1671717						
ANR	1671875	Symbol	AMAZON_COMMAND_VM_ASSOCIATE_ADDRESS		1671717						
ANR	1671876	Symbol	AMAZON_COMMAND_VM_STOP		1671717						
ANR	1671877	Symbol	AmazonVMStatusAll :: workerFunction		1671717						
ANR	1671878	Symbol	AmazonVMStatusAll :: ioCheck		1671717						
ANR	1671879	Symbol	D_ALWAYS		1671717						
ANR	1671880	Symbol	false		1671717						
ANR	1671881	Symbol	AMAZON_COMMAND_VM_RUNNING_KEYPAIR		1671717						
ANR	1671882	Symbol	AmazonVMStatus :: ioCheck		1671717						
ANR	1671883	Symbol	AmazonVMStart :: workerFunction		1671717						
ANR	1671884	Symbol	AmazonAssociateAddress :: ioCheck		1671717						
ANR	1671885	Symbol	AmazonVMRunningKeypair :: workerFunction		1671717						
ANR	1671886	Symbol	true		1671717						
ANR	1671887	Symbol	AmazonVMRunningKeypair :: ioCheck		1671717						
ANR	1671888	Symbol	AmazonVMKeypairNames :: ioCheck		1671717						
ANR	1671889	Symbol	AMAZON_COMMAND_VM_KEYPAIR_NAMES		1671717						
ANR	1671890	Symbol	AmazonAttachVolume :: ioCheck		1671717						
ANR	1671891	Function	quit_on_signal	186:0:6517:6622							
ANR	1671892	FunctionDef	quit_on_signal (int sig)		1671891	0					
ANR	1671893	CompoundStatement		188:0:6546:6622	1671891	0					
ANR	1671894	ExpressionStatement	_exit ( sig )	190:1:6610:6620	1671891	0	True				
ANR	1671895	CallExpression	_exit ( sig )		1671891	0					
ANR	1671896	Callee	_exit		1671891	0					
ANR	1671897	Identifier	_exit		1671891	0					
ANR	1671898	ArgumentList	sig		1671891	1					
ANR	1671899	Argument	sig		1671891	0					
ANR	1671900	Identifier	sig		1671891	0					
ANR	1671901	ReturnType	void		1671891	1					
ANR	1671902	Identifier	quit_on_signal		1671891	2					
ANR	1671903	ParameterList	int sig		1671891	3					
ANR	1671904	Parameter	int sig	187:15:6537:6543	1671891	0	True				
ANR	1671905	ParameterType	int		1671891	0					
ANR	1671906	Identifier	sig		1671891	1					
ANR	1671907	CFGEntryNode	ENTRY		1671891		True				
ANR	1671908	CFGExitNode	EXIT		1671891		True				
ANR	1671909	Symbol	sig		1671891						
ANR	1671910	DeclStmt									
ANR	1671911	Decl							sigset_t	sigset_t	sigSet
ANR	1671912	DeclStmt									
ANR	1671913	Decl							struct sigaction	struct sigaction	act
ANR	1671914	DeclStmt									
ANR	1671915	Decl							const char	const char *	debug_string
ANR	1671916	DeclStmt									
ANR	1671917	Decl							int	int	min_workers
ANR	1671918	DeclStmt									
ANR	1671919	Decl							int	int	max_workers
ANR	1671920	DeclStmt									
ANR	1671921	Decl							int	int	c
ANR	1671922	DeclStmt									
ANR	1671923	Decl							const char	const char *	buff
ANR	1671924	Function	verify_gahp_command	311:0:9360:9905							
ANR	1671925	FunctionDef	"verify_gahp_command (char * * argv , int argc)"		1671924	0					
ANR	1671926	CompoundStatement		312:44:9415:9905	1671924	0					
ANR	1671927	IfStatement	"if ( strcasecmp ( argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0 )"		1671924	0					
ANR	1671928	Condition	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"	314:5:9449:9776	1671924	0	True				
ANR	1671929	OrExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	0		||			
ANR	1671930	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0"		1671924	0		==			
ANR	1671931	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_RESULTS )"		1671924	0					
ANR	1671932	Callee	strcasecmp		1671924	0					
ANR	1671933	Identifier	strcasecmp		1671924	0					
ANR	1671934	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671935	Argument	argv [ 0 ]		1671924	0					
ANR	1671936	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1671937	Identifier	argv		1671924	0					
ANR	1671938	PrimaryExpression	0		1671924	1					
ANR	1671939	Argument	GAHP_COMMAND_RESULTS		1671924	1					
ANR	1671940	Identifier	GAHP_COMMAND_RESULTS		1671924	0					
ANR	1671941	PrimaryExpression	0		1671924	1					
ANR	1671942	OrExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	1		||			
ANR	1671943	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0"		1671924	0		==			
ANR	1671944	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_VERSION )"		1671924	0					
ANR	1671945	Callee	strcasecmp		1671924	0					
ANR	1671946	Identifier	strcasecmp		1671924	0					
ANR	1671947	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671948	Argument	argv [ 0 ]		1671924	0					
ANR	1671949	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1671950	Identifier	argv		1671924	0					
ANR	1671951	PrimaryExpression	0		1671924	1					
ANR	1671952	Argument	GAHP_COMMAND_VERSION		1671924	1					
ANR	1671953	Identifier	GAHP_COMMAND_VERSION		1671924	0					
ANR	1671954	PrimaryExpression	0		1671924	1					
ANR	1671955	OrExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	1		||			
ANR	1671956	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0"		1671924	0		==			
ANR	1671957	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_COMMANDS )"		1671924	0					
ANR	1671958	Callee	strcasecmp		1671924	0					
ANR	1671959	Identifier	strcasecmp		1671924	0					
ANR	1671960	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671961	Argument	argv [ 0 ]		1671924	0					
ANR	1671962	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1671963	Identifier	argv		1671924	0					
ANR	1671964	PrimaryExpression	0		1671924	1					
ANR	1671965	Argument	GAHP_COMMAND_COMMANDS		1671924	1					
ANR	1671966	Identifier	GAHP_COMMAND_COMMANDS		1671924	0					
ANR	1671967	PrimaryExpression	0		1671924	1					
ANR	1671968	OrExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	1		||			
ANR	1671969	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0"		1671924	0		==			
ANR	1671970	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_QUIT )"		1671924	0					
ANR	1671971	Callee	strcasecmp		1671924	0					
ANR	1671972	Identifier	strcasecmp		1671924	0					
ANR	1671973	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671974	Argument	argv [ 0 ]		1671924	0					
ANR	1671975	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1671976	Identifier	argv		1671924	0					
ANR	1671977	PrimaryExpression	0		1671924	1					
ANR	1671978	Argument	GAHP_COMMAND_QUIT		1671924	1					
ANR	1671979	Identifier	GAHP_COMMAND_QUIT		1671924	0					
ANR	1671980	PrimaryExpression	0		1671924	1					
ANR	1671981	OrExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 || strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	1		||			
ANR	1671982	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0"		1671924	0		==			
ANR	1671983	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON )"		1671924	0					
ANR	1671984	Callee	strcasecmp		1671924	0					
ANR	1671985	Identifier	strcasecmp		1671924	0					
ANR	1671986	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671987	Argument	argv [ 0 ]		1671924	0					
ANR	1671988	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1671989	Identifier	argv		1671924	0					
ANR	1671990	PrimaryExpression	0		1671924	1					
ANR	1671991	Argument	GAHP_COMMAND_ASYNC_MODE_ON		1671924	1					
ANR	1671992	Identifier	GAHP_COMMAND_ASYNC_MODE_ON		1671924	0					
ANR	1671993	PrimaryExpression	0		1671924	1					
ANR	1671994	EqualityExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1671924	1		==			
ANR	1671995	CallExpression	"strcasecmp ( argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF )"		1671924	0					
ANR	1671996	Callee	strcasecmp		1671924	0					
ANR	1671997	Identifier	strcasecmp		1671924	0					
ANR	1671998	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1671999	Argument	argv [ 0 ]		1671924	0					
ANR	1672000	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1672001	Identifier	argv		1671924	0					
ANR	1672002	PrimaryExpression	0		1671924	1					
ANR	1672003	Argument	GAHP_COMMAND_ASYNC_MODE_OFF		1671924	1					
ANR	1672004	Identifier	GAHP_COMMAND_ASYNC_MODE_OFF		1671924	0					
ANR	1672005	PrimaryExpression	0		1671924	1					
ANR	1672006	CompoundStatement		8:59:363:363	1671924	1					
ANR	1672007	ReturnStatement	"return verify_number_args ( argc , 1 ) ;"	321:2:9814:9849	1671924	0	True				
ANR	1672008	CallExpression	"verify_number_args ( argc , 1 )"		1671924	0					
ANR	1672009	Callee	verify_number_args		1671924	0					
ANR	1672010	Identifier	verify_number_args		1671924	0					
ANR	1672011	ArgumentList	argc		1671924	1					
ANR	1672012	Argument	argc		1671924	0					
ANR	1672013	Identifier	argc		1671924	0					
ANR	1672014	Argument	1		1671924	1					
ANR	1672015	PrimaryExpression	1		1671924	0					
ANR	1672016	ReturnStatement	"return executeIOCheckFunc ( argv [ 0 ] , argv , argc ) ;"	324:1:9856:9902	1671924	1	True				
ANR	1672017	CallExpression	"executeIOCheckFunc ( argv [ 0 ] , argv , argc )"		1671924	0					
ANR	1672018	Callee	executeIOCheckFunc		1671924	0					
ANR	1672019	Identifier	executeIOCheckFunc		1671924	0					
ANR	1672020	ArgumentList	argv [ 0 ]		1671924	1					
ANR	1672021	Argument	argv [ 0 ]		1671924	0					
ANR	1672022	ArrayIndexing	argv [ 0 ]		1671924	0					
ANR	1672023	Identifier	argv		1671924	0					
ANR	1672024	PrimaryExpression	0		1671924	1					
ANR	1672025	Argument	argv		1671924	1					
ANR	1672026	Identifier	argv		1671924	0					
ANR	1672027	Argument	argc		1671924	2					
ANR	1672028	Identifier	argc		1671924	0					
ANR	1672029	ReturnType	static int		1671924	1					
ANR	1672030	Identifier	verify_gahp_command		1671924	2					
ANR	1672031	ParameterList	"char * * argv , int argc"		1671924	3					
ANR	1672032	Parameter	char * * argv	312:20:9391:9402	1671924	0	True				
ANR	1672033	ParameterType	char * *		1671924	0					
ANR	1672034	Identifier	argv		1671924	1					
ANR	1672035	Parameter	int argc	312:34:9405:9412	1671924	1	True				
ANR	1672036	ParameterType	int		1671924	0					
ANR	1672037	Identifier	argc		1671924	1					
ANR	1672038	CFGEntryNode	ENTRY		1671924		True				
ANR	1672039	CFGExitNode	EXIT		1671924		True				
ANR	1672040	Symbol	argc		1671924						
ANR	1672041	Symbol	GAHP_COMMAND_ASYNC_MODE_ON		1671924						
ANR	1672042	Symbol	GAHP_COMMAND_QUIT		1671924						
ANR	1672043	Symbol	GAHP_COMMAND_COMMANDS		1671924						
ANR	1672044	Symbol	executeIOCheckFunc		1671924						
ANR	1672045	Symbol	GAHP_COMMAND_ASYNC_MODE_OFF		1671924						
ANR	1672046	Symbol	* argv		1671924						
ANR	1672047	Symbol	GAHP_COMMAND_RESULTS		1671924						
ANR	1672048	Symbol	strcasecmp		1671924						
ANR	1672049	Symbol	verify_number_args		1671924						
ANR	1672050	Symbol	argv		1671924						
ANR	1672051	Symbol	GAHP_COMMAND_VERSION		1671924						
ANR	1672052	Function	gahp_output_return	327:0:9908:10181							
ANR	1672053	FunctionDef	"gahp_output_return (const char * * results , const int count)"		1672052	0					
ANR	1672054	CompoundStatement		328:60:9973:10181	1672052	0					
ANR	1672055	IdentifierDeclStatement	int i = 0 ;	331:1:10003:10010	1672052	0	True				
ANR	1672056	IdentifierDecl	i = 0		1672052	0					
ANR	1672057	IdentifierDeclType	int		1672052	0					
ANR	1672058	Identifier	i		1672052	1					
ANR	1672059	AssignmentExpression	i = 0		1672052	2		=			
ANR	1672060	Identifier	i		1672052	0					
ANR	1672061	PrimaryExpression	0		1672052	1					
ANR	1672062	ForStatement	for ( i = 0 ; i < count ; i ++ )		1672052	1					
ANR	1672063	ForInit	i = 0 ;	332:6:10018:10021	1672052	0	True				
ANR	1672064	AssignmentExpression	i = 0		1672052	0		=			
ANR	1672065	Identifier	i		1672052	0					
ANR	1672066	PrimaryExpression	0		1672052	1					
ANR	1672067	Condition	i < count	332:11:10023:10029	1672052	1	True				
ANR	1672068	RelationalExpression	i < count		1672052	0		<			
ANR	1672069	Identifier	i		1672052	0					
ANR	1672070	Identifier	count		1672052	1					
ANR	1672071	PostIncDecOperationExpression	i ++	332:20:10032:10034	1672052	2	True				
ANR	1672072	Identifier	i		1672052	0					
ANR	1672073	IncDec	++		1672052	1					
ANR	1672074	CompoundStatement		5:25:63:63	1672052	3					
ANR	1672075	ExpressionStatement	"printf ( ""%s"" , results [ i ] )"	333:2:10041:10066	1672052	0	True				
ANR	1672076	CallExpression	"printf ( ""%s"" , results [ i ] )"		1672052	0					
ANR	1672077	Callee	printf		1672052	0					
ANR	1672078	Identifier	printf		1672052	0					
ANR	1672079	ArgumentList	"""%s"""		1672052	1					
ANR	1672080	Argument	"""%s"""		1672052	0					
ANR	1672081	PrimaryExpression	"""%s"""		1672052	0					
ANR	1672082	Argument	results [ i ]		1672052	1					
ANR	1672083	ArrayIndexing	results [ i ]		1672052	0					
ANR	1672084	Identifier	results		1672052	0					
ANR	1672085	Identifier	i		1672052	1					
ANR	1672086	IfStatement	if ( i < ( count - 1 ) )		1672052	1					
ANR	1672087	Condition	i < ( count - 1 )	334:6:10074:10089	1672052	0	True				
ANR	1672088	RelationalExpression	i < ( count - 1 )		1672052	0		<			
ANR	1672089	Identifier	i		1672052	0					
ANR	1672090	AdditiveExpression	count - 1		1672052	1		-			
ANR	1672091	Identifier	count		1672052	0					
ANR	1672092	PrimaryExpression	1		1672052	1					
ANR	1672093	CompoundStatement		7:24:118:118	1672052	1					
ANR	1672094	ExpressionStatement	"printf ( "" "" )"	335:3:10097:10109	1672052	0	True				
ANR	1672095	CallExpression	"printf ( "" "" )"		1672052	0					
ANR	1672096	Callee	printf		1672052	0					
ANR	1672097	Identifier	printf		1672052	0					
ANR	1672098	ArgumentList	""" """		1672052	1					
ANR	1672099	Argument	""" """		1672052	0					
ANR	1672100	PrimaryExpression	""" """		1672052	0					
ANR	1672101	ExpressionStatement	"printf ( ""\\n"" )"	339:1:10120:10133	1672052	2	True				
ANR	1672102	CallExpression	"printf ( ""\\n"" )"		1672052	0					
ANR	1672103	Callee	printf		1672052	0					
ANR	1672104	Identifier	printf		1672052	0					
ANR	1672105	ArgumentList	"""\\n"""		1672052	1					
ANR	1672106	Argument	"""\\n"""		1672052	0					
ANR	1672107	PrimaryExpression	"""\\n"""		1672052	0					
ANR	1672108	ExpressionStatement	fflush ( stdout )	340:1:10136:10150	1672052	3	True				
ANR	1672109	CallExpression	fflush ( stdout )		1672052	0					
ANR	1672110	Callee	fflush		1672052	0					
ANR	1672111	Identifier	fflush		1672052	0					
ANR	1672112	ArgumentList	stdout		1672052	1					
ANR	1672113	Argument	stdout		1672052	0					
ANR	1672114	Identifier	stdout		1672052	0					
ANR	1672115	ReturnType	void		1672052	1					
ANR	1672116	Identifier	gahp_output_return		1672052	2					
ANR	1672117	ParameterList	"const char * * results , const int count"		1672052	3					
ANR	1672118	Parameter	const char * * results	328:20:9933:9953	1672052	0	True				
ANR	1672119	ParameterType	const char * *		1672052	0					
ANR	1672120	Identifier	results		1672052	1					
ANR	1672121	Parameter	const int count	328:43:9956:9970	1672052	1	True				
ANR	1672122	ParameterType	const int		1672052	0					
ANR	1672123	Identifier	count		1672052	1					
ANR	1672124	CFGEntryNode	ENTRY		1672052		True				
ANR	1672125	CFGExitNode	EXIT		1672052		True				
ANR	1672126	Symbol	* i		1672052						
ANR	1672127	Symbol	stdout		1672052						
ANR	1672128	Symbol	count		1672052						
ANR	1672129	Symbol	i		1672052						
ANR	1672130	Symbol	* results		1672052						
ANR	1672131	Symbol	results		1672052						
ANR	1672132	Function	gahp_output_return_success	345:0:10184:10307							
ANR	1672133	FunctionDef	gahp_output_return_success ()		1672132	0					
ANR	1672134	CompoundStatement		346:29:10225:10307	1672132	0					
ANR	1672135	IdentifierDeclStatement	const char * result [ ] = { GAHP_RESULT_SUCCESS } ;	347:1:10228:10272	1672132	0	True				
ANR	1672136	IdentifierDecl	* result [ ] = { GAHP_RESULT_SUCCESS }		1672132	0					
ANR	1672137	IdentifierDeclType	const char * [ ]		1672132	0					
ANR	1672138	Identifier	result		1672132	1					
ANR	1672139	AssignmentExpression	* result [ ] = { GAHP_RESULT_SUCCESS }		1672132	2		=			
ANR	1672140	Identifier	result		1672132	0					
ANR	1672141	InitializerList	GAHP_RESULT_SUCCESS		1672132	1					
ANR	1672142	Identifier	GAHP_RESULT_SUCCESS		1672132	0					
ANR	1672143	ExpressionStatement	"gahp_output_return ( result , 1 )"	348:1:10275:10305	1672132	1	True				
ANR	1672144	CallExpression	"gahp_output_return ( result , 1 )"		1672132	0					
ANR	1672145	Callee	gahp_output_return		1672132	0					
ANR	1672146	Identifier	gahp_output_return		1672132	0					
ANR	1672147	ArgumentList	result		1672132	1					
ANR	1672148	Argument	result		1672132	0					
ANR	1672149	Identifier	result		1672132	0					
ANR	1672150	Argument	1		1672132	1					
ANR	1672151	PrimaryExpression	1		1672132	0					
ANR	1672152	ReturnType	static void		1672132	1					
ANR	1672153	Identifier	gahp_output_return_success		1672132	2					
ANR	1672154	ParameterList			1672132	3					
ANR	1672155	CFGEntryNode	ENTRY		1672132		True				
ANR	1672156	CFGExitNode	EXIT		1672132		True				
ANR	1672157	Symbol	result		1672132						
ANR	1672158	Symbol	GAHP_RESULT_SUCCESS		1672132						
ANR	1672159	Function	gahp_output_return_error	351:0:10310:10429							
ANR	1672160	FunctionDef	gahp_output_return_error ()		1672159	0					
ANR	1672161	CompoundStatement		352:27:10349:10429	1672159	0					
ANR	1672162	IdentifierDeclStatement	const char * result [ ] = { GAHP_RESULT_ERROR } ;	353:1:10352:10394	1672159	0	True				
ANR	1672163	IdentifierDecl	* result [ ] = { GAHP_RESULT_ERROR }		1672159	0					
ANR	1672164	IdentifierDeclType	const char * [ ]		1672159	0					
ANR	1672165	Identifier	result		1672159	1					
ANR	1672166	AssignmentExpression	* result [ ] = { GAHP_RESULT_ERROR }		1672159	2		=			
ANR	1672167	Identifier	result		1672159	0					
ANR	1672168	InitializerList	GAHP_RESULT_ERROR		1672159	1					
ANR	1672169	Identifier	GAHP_RESULT_ERROR		1672159	0					
ANR	1672170	ExpressionStatement	"gahp_output_return ( result , 1 )"	354:1:10397:10427	1672159	1	True				
ANR	1672171	CallExpression	"gahp_output_return ( result , 1 )"		1672159	0					
ANR	1672172	Callee	gahp_output_return		1672159	0					
ANR	1672173	Identifier	gahp_output_return		1672159	0					
ANR	1672174	ArgumentList	result		1672159	1					
ANR	1672175	Argument	result		1672159	0					
ANR	1672176	Identifier	result		1672159	0					
ANR	1672177	Argument	1		1672159	1					
ANR	1672178	PrimaryExpression	1		1672159	0					
ANR	1672179	ReturnType	static void		1672159	1					
ANR	1672180	Identifier	gahp_output_return_error		1672159	2					
ANR	1672181	ParameterList			1672159	3					
ANR	1672182	CFGEntryNode	ENTRY		1672159		True				
ANR	1672183	CFGExitNode	EXIT		1672159		True				
ANR	1672184	Symbol	result		1672159						
ANR	1672185	Symbol	GAHP_RESULT_ERROR		1672159						
ANR	1672186	Function	Worker :: Worker	357:0:10432:10649							
ANR	1672187	FunctionDef	Worker :: Worker (int worker_id)		1672186	0					
ANR	1672188	CompoundStatement		358:0:10463:10649	1672186	0					
ANR	1672189	ExpressionStatement	m_id = worker_id	359:1:10466:10482	1672186	0	True				
ANR	1672190	AssignmentExpression	m_id = worker_id		1672186	0		=			
ANR	1672191	Identifier	m_id		1672186	0					
ANR	1672192	Identifier	worker_id		1672186	1					
ANR	1672193	ExpressionStatement	m_can_use = false	360:1:10485:10502	1672186	1	True				
ANR	1672194	AssignmentExpression	m_can_use = false		1672186	0		=			
ANR	1672195	Identifier	m_can_use		1672186	0					
ANR	1672196	Identifier	false		1672186	1					
ANR	1672197	ExpressionStatement	m_is_doing = false	361:1:10505:10523	1672186	2	True				
ANR	1672198	AssignmentExpression	m_is_doing = false		1672186	0		=			
ANR	1672199	Identifier	m_is_doing		1672186	0					
ANR	1672200	Identifier	false		1672186	1					
ANR	1672201	ExpressionStatement	m_is_waiting = false	362:1:10526:10546	1672186	3	True				
ANR	1672202	AssignmentExpression	m_is_waiting = false		1672186	0		=			
ANR	1672203	Identifier	m_is_waiting		1672186	0					
ANR	1672204	Identifier	false		1672186	1					
ANR	1672205	ExpressionStatement	m_must_be_alive = false	363:1:10549:10572	1672186	4	True				
ANR	1672206	AssignmentExpression	m_must_be_alive = false		1672186	0		=			
ANR	1672207	Identifier	m_must_be_alive		1672186	0					
ANR	1672208	Identifier	false		1672186	1					
ANR	1672209	ExpressionStatement	"pthread_cond_init ( & m_cond , NULL )"	366:1:10615:10647	1672186	5	True				
ANR	1672210	CallExpression	"pthread_cond_init ( & m_cond , NULL )"		1672186	0					
ANR	1672211	Callee	pthread_cond_init		1672186	0					
ANR	1672212	Identifier	pthread_cond_init		1672186	0					
ANR	1672213	ArgumentList	& m_cond		1672186	1					
ANR	1672214	Argument	& m_cond		1672186	0					
ANR	1672215	UnaryOperationExpression	& m_cond		1672186	0					
ANR	1672216	UnaryOperator	&		1672186	0					
ANR	1672217	Identifier	m_cond		1672186	1					
ANR	1672218	Argument	NULL		1672186	1					
ANR	1672219	Identifier	NULL		1672186	0					
ANR	1672220	Identifier	Worker :: Worker		1672186	1					
ANR	1672221	ParameterList	int worker_id		1672186	2					
ANR	1672222	Parameter	int worker_id	357:15:10447:10459	1672186	0	True				
ANR	1672223	ParameterType	int		1672186	0					
ANR	1672224	Identifier	worker_id		1672186	1					
ANR	1672225	CFGEntryNode	ENTRY		1672186		True				
ANR	1672226	CFGExitNode	EXIT		1672186		True				
ANR	1672227	Symbol	m_is_waiting		1672186						
ANR	1672228	Symbol	& m_cond		1672186						
ANR	1672229	Symbol	NULL		1672186						
ANR	1672230	Symbol	m_is_doing		1672186						
ANR	1672231	Symbol	false		1672186						
ANR	1672232	Symbol	m_can_use		1672186						
ANR	1672233	Symbol	m_must_be_alive		1672186						
ANR	1672234	Symbol	worker_id		1672186						
ANR	1672235	Symbol	m_id		1672186						
ANR	1672236	Function	Worker :: ~Worker	369:0:10652:10960							
ANR	1672237	FunctionDef	Worker :: ~Worker ()		1672236	0					
ANR	1672238	CompoundStatement		370:0:10671:10960	1672236	0					
ANR	1672239	IdentifierDeclStatement	Request * request = NULL ;	371:1:10674:10697	1672236	0	True				
ANR	1672240	IdentifierDecl	* request = NULL		1672236	0					
ANR	1672241	IdentifierDeclType	Request *		1672236	0					
ANR	1672242	Identifier	request		1672236	1					
ANR	1672243	AssignmentExpression	* request = NULL		1672236	2		=			
ANR	1672244	Identifier	NULL		1672236	0					
ANR	1672245	Identifier	NULL		1672236	1					
ANR	1672246	ExpressionStatement	m_request_list . Rewind ( )	374:1:10734:10757	1672236	1	True				
ANR	1672247	CallExpression	m_request_list . Rewind ( )		1672236	0					
ANR	1672248	Callee	m_request_list . Rewind		1672236	0					
ANR	1672249	MemberAccess	m_request_list . Rewind		1672236	0					
ANR	1672250	Identifier	m_request_list		1672236	0					
ANR	1672251	Identifier	Rewind		1672236	1					
ANR	1672252	ArgumentList			1672236	1					
ANR	1672253	WhileStatement	while ( m_request_list . Next ( request ) )		1672236	2					
ANR	1672254	Condition	m_request_list . Next ( request )	375:8:10767:10794	1672236	0	True				
ANR	1672255	CallExpression	m_request_list . Next ( request )		1672236	0					
ANR	1672256	Callee	m_request_list . Next		1672236	0					
ANR	1672257	MemberAccess	m_request_list . Next		1672236	0					
ANR	1672258	Identifier	m_request_list		1672236	0					
ANR	1672259	Identifier	Next		1672236	1					
ANR	1672260	ArgumentList	request		1672236	1					
ANR	1672261	Argument	request		1672236	0					
ANR	1672262	Identifier	request		1672236	0					
ANR	1672263	CompoundStatement		6:39:126:126	1672236	1					
ANR	1672264	ExpressionStatement	m_request_list . DeleteCurrent ( )	376:2:10802:10832	1672236	0	True				
ANR	1672265	CallExpression	m_request_list . DeleteCurrent ( )		1672236	0					
ANR	1672266	Callee	m_request_list . DeleteCurrent		1672236	0					
ANR	1672267	MemberAccess	m_request_list . DeleteCurrent		1672236	0					
ANR	1672268	Identifier	m_request_list		1672236	0					
ANR	1672269	Identifier	DeleteCurrent		1672236	1					
ANR	1672270	ArgumentList			1672236	1					
ANR	1672271	Statement	delete	377:2:10836:10841	1672236	1	True				
ANR	1672272	ExpressionStatement	request	377:9:10843:10850	1672236	2	True				
ANR	1672273	Identifier	request		1672236	0					
ANR	1672274	ExpressionStatement	pthread_cond_destroy ( & m_cond )	382:1:10893:10922	1672236	3	True				
ANR	1672275	CallExpression	pthread_cond_destroy ( & m_cond )		1672236	0					
ANR	1672276	Callee	pthread_cond_destroy		1672236	0					
ANR	1672277	Identifier	pthread_cond_destroy		1672236	0					
ANR	1672278	ArgumentList	& m_cond		1672236	1					
ANR	1672279	Argument	& m_cond		1672236	0					
ANR	1672280	UnaryOperationExpression	& m_cond		1672236	0					
ANR	1672281	UnaryOperator	&		1672236	0					
ANR	1672282	Identifier	m_cond		1672236	1					
ANR	1672283	Identifier	Worker :: ~Worker		1672236	1					
ANR	1672284	ParameterList			1672236	2					
ANR	1672285	CFGEntryNode	ENTRY		1672236		True				
ANR	1672286	CFGExitNode	EXIT		1672236		True				
ANR	1672287	Symbol	request		1672236						
ANR	1672288	Symbol	NULL		1672236						
ANR	1672289	Symbol	& m_cond		1672236						
ANR	1672290	Symbol	m_request_list		1672236						
ANR	1672291	Symbol	m_request_list . Next		1672236						
ANR	1672292	Function	Worker :: removeRequest	386:0:10963:11387							
ANR	1672293	FunctionDef	Worker :: removeRequest (int req_id)		1672292	0					
ANR	1672294	CompoundStatement		388:0:11002:11387	1672292	0					
ANR	1672295	IdentifierDeclStatement	Request * request = NULL ;	389:1:11005:11028	1672292	0	True				
ANR	1672296	IdentifierDecl	* request = NULL		1672292	0					
ANR	1672297	IdentifierDeclType	Request *		1672292	0					
ANR	1672298	Identifier	request		1672292	1					
ANR	1672299	AssignmentExpression	* request = NULL		1672292	2		=			
ANR	1672300	Identifier	NULL		1672292	0					
ANR	1672301	Identifier	NULL		1672292	1					
ANR	1672302	ExpressionStatement	m_request_list . Rewind ( )	392:1:11065:11088	1672292	1	True				
ANR	1672303	CallExpression	m_request_list . Rewind ( )		1672292	0					
ANR	1672304	Callee	m_request_list . Rewind		1672292	0					
ANR	1672305	MemberAccess	m_request_list . Rewind		1672292	0					
ANR	1672306	Identifier	m_request_list		1672292	0					
ANR	1672307	Identifier	Rewind		1672292	1					
ANR	1672308	ArgumentList			1672292	1					
ANR	1672309	WhileStatement	while ( m_request_list . Next ( request ) )		1672292	2					
ANR	1672310	Condition	m_request_list . Next ( request )	393:8:11098:11125	1672292	0	True				
ANR	1672311	CallExpression	m_request_list . Next ( request )		1672292	0					
ANR	1672312	Callee	m_request_list . Next		1672292	0					
ANR	1672313	MemberAccess	m_request_list . Next		1672292	0					
ANR	1672314	Identifier	m_request_list		1672292	0					
ANR	1672315	Identifier	Next		1672292	1					
ANR	1672316	ArgumentList	request		1672292	1					
ANR	1672317	Argument	request		1672292	0					
ANR	1672318	Identifier	request		1672292	0					
ANR	1672319	CompoundStatement		6:39:126:126	1672292	1					
ANR	1672320	IfStatement	if ( request -> m_reqid == req_id )		1672292	0					
ANR	1672321	Condition	request -> m_reqid == req_id	395:6:11138:11163	1672292	0	True				
ANR	1672322	EqualityExpression	request -> m_reqid == req_id		1672292	0		==			
ANR	1672323	PtrMemberAccess	request -> m_reqid		1672292	0					
ANR	1672324	Identifier	request		1672292	0					
ANR	1672325	Identifier	m_reqid		1672292	1					
ANR	1672326	Identifier	req_id		1672292	1					
ANR	1672327	CompoundStatement		8:35:164:164	1672292	1					
ANR	1672328	ExpressionStatement	m_request_list . DeleteCurrent ( )	397:3:11224:11254	1672292	0	True				
ANR	1672329	CallExpression	m_request_list . DeleteCurrent ( )		1672292	0					
ANR	1672330	Callee	m_request_list . DeleteCurrent		1672292	0					
ANR	1672331	MemberAccess	m_request_list . DeleteCurrent		1672292	0					
ANR	1672332	Identifier	m_request_list		1672292	0					
ANR	1672333	Identifier	DeleteCurrent		1672292	1					
ANR	1672334	ArgumentList			1672292	1					
ANR	1672335	Statement	delete	398:3:11259:11264	1672292	1	True				
ANR	1672336	ExpressionStatement	request	398:10:11266:11273	1672292	2	True				
ANR	1672337	Identifier	request		1672292	0					
ANR	1672338	ReturnStatement	return true ;	400:3:11315:11326	1672292	3	True				
ANR	1672339	Identifier	true		1672292	0					
ANR	1672340	ReturnStatement	return false ;	405:1:11373:11385	1672292	3	True				
ANR	1672341	Identifier	false		1672292	0					
ANR	1672342	ReturnType	bool		1672292	1					
ANR	1672343	Identifier	Worker :: removeRequest		1672292	2					
ANR	1672344	ParameterList	int req_id		1672292	3					
ANR	1672345	Parameter	int req_id	387:22:10990:10999	1672292	0	True				
ANR	1672346	ParameterType	int		1672292	0					
ANR	1672347	Identifier	req_id		1672292	1					
ANR	1672348	CFGEntryNode	ENTRY		1672292		True				
ANR	1672349	CFGExitNode	EXIT		1672292		True				
ANR	1672350	Symbol	req_id		1672292						
ANR	1672351	Symbol	request		1672292						
ANR	1672352	Symbol	NULL		1672292						
ANR	1672353	Symbol	* request		1672292						
ANR	1672354	Symbol	m_request_list		1672292						
ANR	1672355	Symbol	true		1672292						
ANR	1672356	Symbol	false		1672292						
ANR	1672357	Symbol	m_request_list . Next		1672292						
ANR	1672358	Symbol	request -> m_reqid		1672292						
ANR	1672359	Function	IOProcess :: IOProcess	410:0:11424:11838							
ANR	1672360	FunctionDef	IOProcess :: IOProcess ()		1672359	0					
ANR	1672361	CompoundStatement		412:0:11484:11838	1672359	0					
ANR	1672362	ExpressionStatement	m_async_mode = false	413:1:11487:11507	1672359	0	True				
ANR	1672363	AssignmentExpression	m_async_mode = false		1672359	0		=			
ANR	1672364	Identifier	m_async_mode		1672359	0					
ANR	1672365	Identifier	false		1672359	1					
ANR	1672366	ExpressionStatement	m_new_results_signaled = false	414:1:11510:11540	1672359	1	True				
ANR	1672367	AssignmentExpression	m_new_results_signaled = false		1672359	0		=			
ANR	1672368	Identifier	m_new_results_signaled		1672359	0					
ANR	1672369	Identifier	false		1672359	1					
ANR	1672370	ExpressionStatement	m_min_workers = MIN_NUMBER_WORKERS	416:1:11545:11579	1672359	2	True				
ANR	1672371	AssignmentExpression	m_min_workers = MIN_NUMBER_WORKERS		1672359	0		=			
ANR	1672372	Identifier	m_min_workers		1672359	0					
ANR	1672373	Identifier	MIN_NUMBER_WORKERS		1672359	1					
ANR	1672374	ExpressionStatement	m_max_workers = - 1	417:1:11582:11600	1672359	3	True				
ANR	1672375	AssignmentExpression	m_max_workers = - 1		1672359	0		=			
ANR	1672376	Identifier	m_max_workers		1672359	0					
ANR	1672377	UnaryOperationExpression	- 1		1672359	1					
ANR	1672378	UnaryOperator	-		1672359	0					
ANR	1672379	PrimaryExpression	1		1672359	1					
ANR	1672380	ExpressionStatement	m_next_worker_id = 0	419:1:11604:11624	1672359	4	True				
ANR	1672381	AssignmentExpression	m_next_worker_id = 0		1672359	0		=			
ANR	1672382	Identifier	m_next_worker_id		1672359	0					
ANR	1672383	PrimaryExpression	0		1672359	1					
ANR	1672384	ExpressionStatement	m_rotated_worker_ids = false	420:1:11627:11655	1672359	5	True				
ANR	1672385	AssignmentExpression	m_rotated_worker_ids = false		1672359	0		=			
ANR	1672386	Identifier	m_rotated_worker_ids		1672359	0					
ANR	1672387	Identifier	false		1672359	1					
ANR	1672388	ExpressionStatement	m_avail_workers_num = 0	422:1:11659:11682	1672359	6	True				
ANR	1672389	AssignmentExpression	m_avail_workers_num = 0		1672359	0		=			
ANR	1672390	Identifier	m_avail_workers_num		1672359	0					
ANR	1672391	PrimaryExpression	0		1672359	1					
ANR	1672392	Identifier	IOProcess :: IOProcess		1672359	1					
ANR	1672393	ParameterList			1672359	2					
ANR	1672394	CFGEntryNode	ENTRY		1672359		True				
ANR	1672395	CFGExitNode	EXIT		1672359		True				
ANR	1672396	Symbol	m_new_results_signaled		1672359						
ANR	1672397	Symbol	m_rotated_worker_ids		1672359						
ANR	1672398	Symbol	m_min_workers		1672359						
ANR	1672399	Symbol	m_next_worker_id		1672359						
ANR	1672400	Symbol	m_async_mode		1672359						
ANR	1672401	Symbol	false		1672359						
ANR	1672402	Symbol	m_avail_workers_num		1672359						
ANR	1672403	Symbol	m_max_workers		1672359						
ANR	1672404	Symbol	MIN_NUMBER_WORKERS		1672359						
ANR	1672405	Function	IOProcess :: ~IOProcess	429:0:11841:12011							
ANR	1672406	FunctionDef	IOProcess :: ~IOProcess ()		1672405	0					
ANR	1672407	CompoundStatement		430:0:11865:12011	1672405	0					
ANR	1672408	Identifier	IOProcess :: ~IOProcess		1672405	1					
ANR	1672409	ParameterList			1672405	2					
ANR	1672410	CFGEntryNode	ENTRY		1672405		True				
ANR	1672411	CFGExitNode	EXIT		1672405		True				
ANR	1672412	Function	IOProcess :: startUp	436:0:12014:12459							
ANR	1672413	FunctionDef	"IOProcess :: startUp (int stdin_pipe , int min_workers , int max_workers)"		1672412	0					
ANR	1672414	CompoundStatement		438:0:12088:12459	1672412	0					
ANR	1672415	ExpressionStatement	m_min_workers = min_workers	439:1:12091:12118	1672412	0	True				
ANR	1672416	AssignmentExpression	m_min_workers = min_workers		1672412	0		=			
ANR	1672417	Identifier	m_min_workers		1672412	0					
ANR	1672418	Identifier	min_workers		1672412	1					
ANR	1672419	ExpressionStatement	m_max_workers = max_workers	440:1:12121:12148	1672412	1	True				
ANR	1672420	AssignmentExpression	m_max_workers = max_workers		1672412	0		=			
ANR	1672421	Identifier	m_max_workers		1672412	0					
ANR	1672422	Identifier	max_workers		1672412	1					
ANR	1672423	ExpressionStatement	m_stdin_buffer . setPipeEnd ( stdin_pipe )	441:1:12151:12188	1672412	2	True				
ANR	1672424	CallExpression	m_stdin_buffer . setPipeEnd ( stdin_pipe )		1672412	0					
ANR	1672425	Callee	m_stdin_buffer . setPipeEnd		1672412	0					
ANR	1672426	MemberAccess	m_stdin_buffer . setPipeEnd		1672412	0					
ANR	1672427	Identifier	m_stdin_buffer		1672412	0					
ANR	1672428	Identifier	setPipeEnd		1672412	1					
ANR	1672429	ArgumentList	stdin_pipe		1672412	1					
ANR	1672430	Argument	stdin_pipe		1672412	0					
ANR	1672431	Identifier	stdin_pipe		1672412	0					
ANR	1672432	IdentifierDeclStatement	int i = 0 ;	444:1:12228:12237	1672412	3	True				
ANR	1672433	IdentifierDecl	i = 0		1672412	0					
ANR	1672434	IdentifierDeclType	int		1672412	0					
ANR	1672435	Identifier	i		1672412	1					
ANR	1672436	AssignmentExpression	i = 0		1672412	2		=			
ANR	1672437	Identifier	i		1672412	0					
ANR	1672438	PrimaryExpression	0		1672412	1					
ANR	1672439	ForStatement	for ( i = 0 ; i < m_min_workers ; i ++ )		1672412	4					
ANR	1672440	ForInit	i = 0 ;	445:6:12245:12250	1672412	0	True				
ANR	1672441	AssignmentExpression	i = 0		1672412	0		=			
ANR	1672442	Identifier	i		1672412	0					
ANR	1672443	PrimaryExpression	0		1672412	1					
ANR	1672444	Condition	i < m_min_workers	445:13:12252:12268	1672412	1	True				
ANR	1672445	RelationalExpression	i < m_min_workers		1672412	0		<			
ANR	1672446	Identifier	i		1672412	0					
ANR	1672447	Identifier	m_min_workers		1672412	1					
ANR	1672448	PostIncDecOperationExpression	i ++	445:32:12271:12273	1672412	2	True				
ANR	1672449	Identifier	i		1672412	0					
ANR	1672450	IncDec	++		1672412	1					
ANR	1672451	CompoundStatement		8:38:188:188	1672412	3					
ANR	1672452	IfStatement	if ( createNewWorker ( ) == NULL )		1672412	0					
ANR	1672453	Condition	createNewWorker ( ) == NULL	446:6:12285:12309	1672412	0	True				
ANR	1672454	EqualityExpression	createNewWorker ( ) == NULL		1672412	0		==			
ANR	1672455	CallExpression	createNewWorker ( )		1672412	0					
ANR	1672456	Callee	createNewWorker		1672412	0					
ANR	1672457	Identifier	createNewWorker		1672412	0					
ANR	1672458	ArgumentList			1672412	1					
ANR	1672459	Identifier	NULL		1672412	1					
ANR	1672460	CompoundStatement		9:34:224:224	1672412	1					
ANR	1672461	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create initial workers\\n"" )"	447:3:12318:12373	1672412	0	True				
ANR	1672462	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create initial workers\\n"" )"		1672412	0					
ANR	1672463	Callee	dprintf		1672412	0					
ANR	1672464	Identifier	dprintf		1672412	0					
ANR	1672465	ArgumentList	D_ALWAYS		1672412	1					
ANR	1672466	Argument	D_ALWAYS		1672412	0					
ANR	1672467	Identifier	D_ALWAYS		1672412	0					
ANR	1672468	Argument	"""Failed to create initial workers\\n"""		1672412	1					
ANR	1672469	PrimaryExpression	"""Failed to create initial workers\\n"""		1672412	0					
ANR	1672470	ExpressionStatement	"dprintf ( D_ALWAYS , ""Exiting....\\n"" )"	448:3:12378:12412	1672412	1	True				
ANR	1672471	CallExpression	"dprintf ( D_ALWAYS , ""Exiting....\\n"" )"		1672412	0					
ANR	1672472	Callee	dprintf		1672412	0					
ANR	1672473	Identifier	dprintf		1672412	0					
ANR	1672474	ArgumentList	D_ALWAYS		1672412	1					
ANR	1672475	Argument	D_ALWAYS		1672412	0					
ANR	1672476	Identifier	D_ALWAYS		1672412	0					
ANR	1672477	Argument	"""Exiting....\\n"""		1672412	1					
ANR	1672478	PrimaryExpression	"""Exiting....\\n"""		1672412	0					
ANR	1672479	ExpressionStatement	io_process_exit ( 1 )	449:3:12417:12435	1672412	2	True				
ANR	1672480	CallExpression	io_process_exit ( 1 )		1672412	0					
ANR	1672481	Callee	io_process_exit		1672412	0					
ANR	1672482	Identifier	io_process_exit		1672412	0					
ANR	1672483	ArgumentList	1		1672412	1					
ANR	1672484	Argument	1		1672412	0					
ANR	1672485	PrimaryExpression	1		1672412	0					
ANR	1672486	ReturnStatement	return true ;	453:1:12446:12457	1672412	5	True				
ANR	1672487	Identifier	true		1672412	0					
ANR	1672488	ReturnType	bool		1672412	1					
ANR	1672489	Identifier	IOProcess :: startUp		1672412	2					
ANR	1672490	ParameterList	"int stdin_pipe , int min_workers , int max_workers"		1672412	3					
ANR	1672491	Parameter	int stdin_pipe	437:19:12038:12051	1672412	0	True				
ANR	1672492	ParameterType	int		1672412	0					
ANR	1672493	Identifier	stdin_pipe		1672412	1					
ANR	1672494	Parameter	int min_workers	437:35:12054:12068	1672412	1	True				
ANR	1672495	ParameterType	int		1672412	0					
ANR	1672496	Identifier	min_workers		1672412	1					
ANR	1672497	Parameter	int max_workers	437:52:12071:12085	1672412	2	True				
ANR	1672498	ParameterType	int		1672412	0					
ANR	1672499	Identifier	max_workers		1672412	1					
ANR	1672500	CFGEntryNode	ENTRY		1672412		True				
ANR	1672501	CFGExitNode	EXIT		1672412		True				
ANR	1672502	Symbol	m_stdin_buffer		1672412						
ANR	1672503	Symbol	m_min_workers		1672412						
ANR	1672504	Symbol	NULL		1672412						
ANR	1672505	Symbol	max_workers		1672412						
ANR	1672506	Symbol	createNewWorker		1672412						
ANR	1672507	Symbol	min_workers		1672412						
ANR	1672508	Symbol	D_ALWAYS		1672412						
ANR	1672509	Symbol	true		1672412						
ANR	1672510	Symbol	i		1672412						
ANR	1672511	Symbol	stdin_pipe		1672412						
ANR	1672512	Symbol	m_max_workers		1672412						
ANR	1672513	Function	IOProcess :: stdinPipeHandler	456:0:12462:15269							
ANR	1672514	FunctionDef	IOProcess :: stdinPipeHandler ()		1672513	0					
ANR	1672515	CompoundStatement		458:0:12497:15269	1672513	0					
ANR	1672516	IdentifierDeclStatement	std :: string * line ;	459:1:12500:12517	1672513	0	True				
ANR	1672517	IdentifierDecl	* line		1672513	0					
ANR	1672518	IdentifierDeclType	std :: string *		1672513	0					
ANR	1672519	Identifier	line		1672513	1					
ANR	1672520	WhileStatement	while ( ( line = m_stdin_buffer . GetNextLine ( ) ) != NULL )		1672513	1					
ANR	1672521	Condition	( line = m_stdin_buffer . GetNextLine ( ) ) != NULL	460:8:12527:12571	1672513	0	True				
ANR	1672522	EqualityExpression	( line = m_stdin_buffer . GetNextLine ( ) ) != NULL		1672513	0		!=			
ANR	1672523	AssignmentExpression	line = m_stdin_buffer . GetNextLine ( )		1672513	0		=			
ANR	1672524	Identifier	line		1672513	0					
ANR	1672525	CallExpression	m_stdin_buffer . GetNextLine ( )		1672513	1					
ANR	1672526	Callee	m_stdin_buffer . GetNextLine		1672513	0					
ANR	1672527	MemberAccess	m_stdin_buffer . GetNextLine		1672513	0					
ANR	1672528	Identifier	m_stdin_buffer		1672513	0					
ANR	1672529	Identifier	GetNextLine		1672513	1					
ANR	1672530	ArgumentList			1672513	1					
ANR	1672531	Identifier	NULL		1672513	1					
ANR	1672532	CompoundStatement		9:2:175:189	1672513	1					
ANR	1672533	IdentifierDeclStatement	const char * command = line -> c_str ( ) ;	462:2:12579:12614	1672513	0	True				
ANR	1672534	IdentifierDecl	* command = line -> c_str ( )		1672513	0					
ANR	1672535	IdentifierDeclType	const char *		1672513	0					
ANR	1672536	Identifier	command		1672513	1					
ANR	1672537	AssignmentExpression	* command = line -> c_str ( )		1672513	2		=			
ANR	1672538	Identifier	command		1672513	0					
ANR	1672539	CallExpression	line -> c_str ( )		1672513	1					
ANR	1672540	Callee	line -> c_str		1672513	0					
ANR	1672541	PtrMemberAccess	line -> c_str		1672513	0					
ANR	1672542	Identifier	line		1672513	0					
ANR	1672543	Identifier	c_str		1672513	1					
ANR	1672544	ArgumentList			1672513	1					
ANR	1672545	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""got stdin: %s\\n"" , command )"	464:2:12619:12668	1672513	1	True				
ANR	1672546	CallExpression	"dprintf ( D_FULLDEBUG , ""got stdin: %s\\n"" , command )"		1672513	0					
ANR	1672547	Callee	dprintf		1672513	0					
ANR	1672548	Identifier	dprintf		1672513	0					
ANR	1672549	ArgumentList	D_FULLDEBUG		1672513	1					
ANR	1672550	Argument	D_FULLDEBUG		1672513	0					
ANR	1672551	Identifier	D_FULLDEBUG		1672513	0					
ANR	1672552	Argument	"""got stdin: %s\\n"""		1672513	1					
ANR	1672553	PrimaryExpression	"""got stdin: %s\\n"""		1672513	0					
ANR	1672554	Argument	command		1672513	2					
ANR	1672555	Identifier	command		1672513	0					
ANR	1672556	IdentifierDeclStatement	Gahp_Args args ;	466:2:12673:12687	1672513	2	True				
ANR	1672557	IdentifierDecl	args		1672513	0					
ANR	1672558	IdentifierDeclType	Gahp_Args		1672513	0					
ANR	1672559	Identifier	args		1672513	1					
ANR	1672560	IfStatement	"if ( parse_gahp_command ( command , & args ) && verify_gahp_command ( args . argv , args . argc ) )"		1672513	3					
ANR	1672561	Condition	"parse_gahp_command ( command , & args ) && verify_gahp_command ( args . argv , args . argc )"	468:6:12696:12779	1672513	0	True				
ANR	1672562	AndExpression	"parse_gahp_command ( command , & args ) && verify_gahp_command ( args . argv , args . argc )"		1672513	0		&&			
ANR	1672563	CallExpression	"parse_gahp_command ( command , & args )"		1672513	0					
ANR	1672564	Callee	parse_gahp_command		1672513	0					
ANR	1672565	Identifier	parse_gahp_command		1672513	0					
ANR	1672566	ArgumentList	command		1672513	1					
ANR	1672567	Argument	command		1672513	0					
ANR	1672568	Identifier	command		1672513	0					
ANR	1672569	Argument	& args		1672513	1					
ANR	1672570	UnaryOperationExpression	& args		1672513	0					
ANR	1672571	UnaryOperator	&		1672513	0					
ANR	1672572	Identifier	args		1672513	1					
ANR	1672573	CallExpression	"verify_gahp_command ( args . argv , args . argc )"		1672513	1					
ANR	1672574	Callee	verify_gahp_command		1672513	0					
ANR	1672575	Identifier	verify_gahp_command		1672513	0					
ANR	1672576	ArgumentList	args . argv		1672513	1					
ANR	1672577	Argument	args . argv		1672513	0					
ANR	1672578	MemberAccess	args . argv		1672513	0					
ANR	1672579	Identifier	args		1672513	0					
ANR	1672580	Identifier	argv		1672513	1					
ANR	1672581	Argument	args . argc		1672513	1					
ANR	1672582	MemberAccess	args . argc		1672513	0					
ANR	1672583	Identifier	args		1672513	0					
ANR	1672584	Identifier	argc		1672513	1					
ANR	1672585	CompoundStatement		12:47:284:284	1672513	1					
ANR	1672586	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0 )"		1672513	0					
ANR	1672587	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0"	472:7:12829:12880	1672513	0	True				
ANR	1672588	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_RESULTS ) == 0"		1672513	0		==			
ANR	1672589	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_RESULTS )"		1672513	0					
ANR	1672590	Callee	strcasecmp		1672513	0					
ANR	1672591	Identifier	strcasecmp		1672513	0					
ANR	1672592	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672593	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672594	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672595	MemberAccess	args . argv		1672513	0					
ANR	1672596	Identifier	args		1672513	0					
ANR	1672597	Identifier	argv		1672513	1					
ANR	1672598	PrimaryExpression	0		1672513	1					
ANR	1672599	Argument	GAHP_COMMAND_RESULTS		1672513	1					
ANR	1672600	Identifier	GAHP_COMMAND_RESULTS		1672513	0					
ANR	1672601	PrimaryExpression	0		1672513	1					
ANR	1672602	CompoundStatement		27:4:635:652	1672513	1					
ANR	1672603	ExpressionStatement	"printf ( ""%s %d\\n"" , GAHP_RESULT_SUCCESS , numOfResult ( ) )"	479:4:13024:13077	1672513	0	True				
ANR	1672604	CallExpression	"printf ( ""%s %d\\n"" , GAHP_RESULT_SUCCESS , numOfResult ( ) )"		1672513	0					
ANR	1672605	Callee	printf		1672513	0					
ANR	1672606	Identifier	printf		1672513	0					
ANR	1672607	ArgumentList	"""%s %d\\n"""		1672513	1					
ANR	1672608	Argument	"""%s %d\\n"""		1672513	0					
ANR	1672609	PrimaryExpression	"""%s %d\\n"""		1672513	0					
ANR	1672610	Argument	GAHP_RESULT_SUCCESS		1672513	1					
ANR	1672611	Identifier	GAHP_RESULT_SUCCESS		1672513	0					
ANR	1672612	Argument	numOfResult ( )		1672513	2					
ANR	1672613	CallExpression	numOfResult ( )		1672513	0					
ANR	1672614	Callee	numOfResult		1672513	0					
ANR	1672615	Identifier	numOfResult		1672513	0					
ANR	1672616	ArgumentList			1672513	1					
ANR	1672617	ExpressionStatement	fflush ( stdout )	480:4:13083:13097	1672513	1	True				
ANR	1672618	CallExpression	fflush ( stdout )		1672513	0					
ANR	1672619	Callee	fflush		1672513	0					
ANR	1672620	Identifier	fflush		1672513	0					
ANR	1672621	ArgumentList	stdout		1672513	1					
ANR	1672622	Argument	stdout		1672513	0					
ANR	1672623	Identifier	stdout		1672513	0					
ANR	1672624	ExpressionStatement	startResultIteration ( )	482:4:13104:13126	1672513	2	True				
ANR	1672625	CallExpression	startResultIteration ( )		1672513	0					
ANR	1672626	Callee	startResultIteration		1672513	0					
ANR	1672627	Identifier	startResultIteration		1672513	0					
ANR	1672628	ArgumentList			1672513	1					
ANR	1672629	IdentifierDeclStatement	char * next = NULL ;	484:4:13133:13150	1672513	3	True				
ANR	1672630	IdentifierDecl	* next = NULL		1672513	0					
ANR	1672631	IdentifierDeclType	char *		1672513	0					
ANR	1672632	Identifier	next		1672513	1					
ANR	1672633	AssignmentExpression	* next = NULL		1672513	2		=			
ANR	1672634	Identifier	NULL		1672513	0					
ANR	1672635	Identifier	NULL		1672513	1					
ANR	1672636	WhileStatement	while ( ( next = NextResult ( ) ) != NULL )		1672513	4					
ANR	1672637	Condition	( next = NextResult ( ) ) != NULL	485:11:13163:13191	1672513	0	True				
ANR	1672638	EqualityExpression	( next = NextResult ( ) ) != NULL		1672513	0		!=			
ANR	1672639	AssignmentExpression	next = NextResult ( )		1672513	0		=			
ANR	1672640	Identifier	next		1672513	0					
ANR	1672641	CallExpression	NextResult ( )		1672513	1					
ANR	1672642	Callee	NextResult		1672513	0					
ANR	1672643	Identifier	NextResult		1672513	0					
ANR	1672644	ArgumentList			1672513	1					
ANR	1672645	Identifier	NULL		1672513	1					
ANR	1672646	CompoundStatement		28:42:696:696	1672513	1					
ANR	1672647	ExpressionStatement	"printf ( ""%s"" , next )"	486:5:13201:13220	1672513	0	True				
ANR	1672648	CallExpression	"printf ( ""%s"" , next )"		1672513	0					
ANR	1672649	Callee	printf		1672513	0					
ANR	1672650	Identifier	printf		1672513	0					
ANR	1672651	ArgumentList	"""%s"""		1672513	1					
ANR	1672652	Argument	"""%s"""		1672513	0					
ANR	1672653	PrimaryExpression	"""%s"""		1672513	0					
ANR	1672654	Argument	next		1672513	1					
ANR	1672655	Identifier	next		1672513	0					
ANR	1672656	ExpressionStatement	fflush ( stdout )	487:5:13227:13241	1672513	1	True				
ANR	1672657	CallExpression	fflush ( stdout )		1672513	0					
ANR	1672658	Callee	fflush		1672513	0					
ANR	1672659	Identifier	fflush		1672513	0					
ANR	1672660	ArgumentList	stdout		1672513	1					
ANR	1672661	Argument	stdout		1672513	0					
ANR	1672662	Identifier	stdout		1672513	0					
ANR	1672663	ExpressionStatement	deleteCurrentResult ( )	488:5:13248:13269	1672513	2	True				
ANR	1672664	CallExpression	deleteCurrentResult ( )		1672513	0					
ANR	1672665	Callee	deleteCurrentResult		1672513	0					
ANR	1672666	Identifier	deleteCurrentResult		1672513	0					
ANR	1672667	ArgumentList			1672513	1					
ANR	1672668	ExpressionStatement	m_new_results_signaled = false	490:4:13281:13311	1672513	5	True				
ANR	1672669	AssignmentExpression	m_new_results_signaled = false		1672513	0		=			
ANR	1672670	Identifier	m_new_results_signaled		1672513	0					
ANR	1672671	Identifier	false		1672513	1					
ANR	1672672	ElseStatement	else		1672513	0					
ANR	1672673	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0 )"		1672513	0					
ANR	1672674	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0"	495:14:13416:13467	1672513	0	True				
ANR	1672675	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_VERSION ) == 0"		1672513	0		==			
ANR	1672676	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_VERSION )"		1672513	0					
ANR	1672677	Callee	strcasecmp		1672513	0					
ANR	1672678	Identifier	strcasecmp		1672513	0					
ANR	1672679	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672680	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672681	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672682	MemberAccess	args . argv		1672513	0					
ANR	1672683	Identifier	args		1672513	0					
ANR	1672684	Identifier	argv		1672513	1					
ANR	1672685	PrimaryExpression	0		1672513	1					
ANR	1672686	Argument	GAHP_COMMAND_VERSION		1672513	1					
ANR	1672687	Identifier	GAHP_COMMAND_VERSION		1672513	0					
ANR	1672688	PrimaryExpression	0		1672513	1					
ANR	1672689	CompoundStatement		38:68:972:972	1672513	1					
ANR	1672690	ExpressionStatement	"printf ( ""S %s\\n"" , version )"	498:4:13506:13532	1672513	0	True				
ANR	1672691	CallExpression	"printf ( ""S %s\\n"" , version )"		1672513	0					
ANR	1672692	Callee	printf		1672513	0					
ANR	1672693	Identifier	printf		1672513	0					
ANR	1672694	ArgumentList	"""S %s\\n"""		1672513	1					
ANR	1672695	Argument	"""S %s\\n"""		1672513	0					
ANR	1672696	PrimaryExpression	"""S %s\\n"""		1672513	0					
ANR	1672697	Argument	version		1672513	1					
ANR	1672698	Identifier	version		1672513	0					
ANR	1672699	ExpressionStatement	fflush ( stdout )	499:4:13538:13553	1672513	1	True				
ANR	1672700	CallExpression	fflush ( stdout )		1672513	0					
ANR	1672701	Callee	fflush		1672513	0					
ANR	1672702	Identifier	fflush		1672513	0					
ANR	1672703	ArgumentList	stdout		1672513	1					
ANR	1672704	Argument	stdout		1672513	0					
ANR	1672705	Identifier	stdout		1672513	0					
ANR	1672706	ElseStatement	else		1672513	0					
ANR	1672707	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0 )"		1672513	0					
ANR	1672708	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0"	502:14:13601:13649	1672513	0	True				
ANR	1672709	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_QUIT ) == 0"		1672513	0		==			
ANR	1672710	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_QUIT )"		1672513	0					
ANR	1672711	Callee	strcasecmp		1672513	0					
ANR	1672712	Identifier	strcasecmp		1672513	0					
ANR	1672713	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672714	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672715	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672716	MemberAccess	args . argv		1672513	0					
ANR	1672717	Identifier	args		1672513	0					
ANR	1672718	Identifier	argv		1672513	1					
ANR	1672719	PrimaryExpression	0		1672513	1					
ANR	1672720	Argument	GAHP_COMMAND_QUIT		1672513	1					
ANR	1672721	Identifier	GAHP_COMMAND_QUIT		1672513	0					
ANR	1672722	PrimaryExpression	0		1672513	1					
ANR	1672723	CompoundStatement		45:65:1154:1154	1672513	1					
ANR	1672724	ExpressionStatement	gahp_output_return_success ( )	503:4:13658:13686	1672513	0	True				
ANR	1672725	CallExpression	gahp_output_return_success ( )		1672513	0					
ANR	1672726	Callee	gahp_output_return_success		1672513	0					
ANR	1672727	Identifier	gahp_output_return_success		1672513	0					
ANR	1672728	ArgumentList			1672513	1					
ANR	1672729	ExpressionStatement	io_process_exit ( 0 )	504:4:13692:13710	1672513	1	True				
ANR	1672730	CallExpression	io_process_exit ( 0 )		1672513	0					
ANR	1672731	Callee	io_process_exit		1672513	0					
ANR	1672732	Identifier	io_process_exit		1672513	0					
ANR	1672733	ArgumentList	0		1672513	1					
ANR	1672734	Argument	0		1672513	0					
ANR	1672735	PrimaryExpression	0		1672513	0					
ANR	1672736	ElseStatement	else		1672513	0					
ANR	1672737	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0 )"		1672513	0					
ANR	1672738	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0"	505:14:13726:13783	1672513	0	True				
ANR	1672739	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON ) == 0"		1672513	0		==			
ANR	1672740	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_ON )"		1672513	0					
ANR	1672741	Callee	strcasecmp		1672513	0					
ANR	1672742	Identifier	strcasecmp		1672513	0					
ANR	1672743	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672744	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672745	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672746	MemberAccess	args . argv		1672513	0					
ANR	1672747	Identifier	args		1672513	0					
ANR	1672748	Identifier	argv		1672513	1					
ANR	1672749	PrimaryExpression	0		1672513	1					
ANR	1672750	Argument	GAHP_COMMAND_ASYNC_MODE_ON		1672513	1					
ANR	1672751	Identifier	GAHP_COMMAND_ASYNC_MODE_ON		1672513	0					
ANR	1672752	PrimaryExpression	0		1672513	1					
ANR	1672753	CompoundStatement		48:74:1288:1288	1672513	1					
ANR	1672754	ExpressionStatement	m_async_mode = true	506:4:13792:13811	1672513	0	True				
ANR	1672755	AssignmentExpression	m_async_mode = true		1672513	0		=			
ANR	1672756	Identifier	m_async_mode		1672513	0					
ANR	1672757	Identifier	true		1672513	1					
ANR	1672758	ExpressionStatement	m_new_results_signaled = false	507:4:13817:13847	1672513	1	True				
ANR	1672759	AssignmentExpression	m_new_results_signaled = false		1672513	0		=			
ANR	1672760	Identifier	m_new_results_signaled		1672513	0					
ANR	1672761	Identifier	false		1672513	1					
ANR	1672762	ExpressionStatement	gahp_output_return_success ( )	508:4:13853:13881	1672513	2	True				
ANR	1672763	CallExpression	gahp_output_return_success ( )		1672513	0					
ANR	1672764	Callee	gahp_output_return_success		1672513	0					
ANR	1672765	Identifier	gahp_output_return_success		1672513	0					
ANR	1672766	ArgumentList			1672513	1					
ANR	1672767	ElseStatement	else		1672513	0					
ANR	1672768	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0 )"		1672513	0					
ANR	1672769	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"	509:14:13897:13955	1672513	0	True				
ANR	1672770	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF ) == 0"		1672513	0		==			
ANR	1672771	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_ASYNC_MODE_OFF )"		1672513	0					
ANR	1672772	Callee	strcasecmp		1672513	0					
ANR	1672773	Identifier	strcasecmp		1672513	0					
ANR	1672774	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672775	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672776	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672777	MemberAccess	args . argv		1672513	0					
ANR	1672778	Identifier	args		1672513	0					
ANR	1672779	Identifier	argv		1672513	1					
ANR	1672780	PrimaryExpression	0		1672513	1					
ANR	1672781	Argument	GAHP_COMMAND_ASYNC_MODE_OFF		1672513	1					
ANR	1672782	Identifier	GAHP_COMMAND_ASYNC_MODE_OFF		1672513	0					
ANR	1672783	PrimaryExpression	0		1672513	1					
ANR	1672784	CompoundStatement		52:75:1460:1460	1672513	1					
ANR	1672785	ExpressionStatement	m_async_mode = false	510:4:13964:13984	1672513	0	True				
ANR	1672786	AssignmentExpression	m_async_mode = false		1672513	0		=			
ANR	1672787	Identifier	m_async_mode		1672513	0					
ANR	1672788	Identifier	false		1672513	1					
ANR	1672789	ExpressionStatement	gahp_output_return_success ( )	511:4:13990:14018	1672513	1	True				
ANR	1672790	CallExpression	gahp_output_return_success ( )		1672513	0					
ANR	1672791	Callee	gahp_output_return_success		1672513	0					
ANR	1672792	Identifier	gahp_output_return_success		1672513	0					
ANR	1672793	ArgumentList			1672513	1					
ANR	1672794	ElseStatement	else		1672513	0					
ANR	1672795	IfStatement	"if ( strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0 )"		1672513	0					
ANR	1672796	Condition	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0"	512:14:14034:14086	1672513	0	True				
ANR	1672797	EqualityExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_COMMANDS ) == 0"		1672513	0		==			
ANR	1672798	CallExpression	"strcasecmp ( args . argv [ 0 ] , GAHP_COMMAND_COMMANDS )"		1672513	0					
ANR	1672799	Callee	strcasecmp		1672513	0					
ANR	1672800	Identifier	strcasecmp		1672513	0					
ANR	1672801	ArgumentList	args . argv [ 0 ]		1672513	1					
ANR	1672802	Argument	args . argv [ 0 ]		1672513	0					
ANR	1672803	ArrayIndexing	args . argv [ 0 ]		1672513	0					
ANR	1672804	MemberAccess	args . argv		1672513	0					
ANR	1672805	Identifier	args		1672513	0					
ANR	1672806	Identifier	argv		1672513	1					
ANR	1672807	PrimaryExpression	0		1672513	1					
ANR	1672808	Argument	GAHP_COMMAND_COMMANDS		1672513	1					
ANR	1672809	Identifier	GAHP_COMMAND_COMMANDS		1672513	0					
ANR	1672810	PrimaryExpression	0		1672513	1					
ANR	1672811	CompoundStatement		73:4:2125:2156	1672513	1					
ANR	1672812	IdentifierDeclStatement	StringList amazon_commands ;	513:4:14095:14121	1672513	0	True				
ANR	1672813	IdentifierDecl	amazon_commands		1672513	0					
ANR	1672814	IdentifierDeclType	StringList		1672513	0					
ANR	1672815	Identifier	amazon_commands		1672513	1					
ANR	1672816	IdentifierDeclStatement	int num_commands = 0 ;	514:4:14127:14147	1672513	1	True				
ANR	1672817	IdentifierDecl	num_commands = 0		1672513	0					
ANR	1672818	IdentifierDeclType	int		1672513	0					
ANR	1672819	Identifier	num_commands		1672513	1					
ANR	1672820	AssignmentExpression	num_commands = 0		1672513	2		=			
ANR	1672821	Identifier	num_commands		1672513	0					
ANR	1672822	PrimaryExpression	0		1672513	1					
ANR	1672823	ExpressionStatement	num_commands = allAmazonCommands ( amazon_commands )	516:4:14154:14203	1672513	2	True				
ANR	1672824	AssignmentExpression	num_commands = allAmazonCommands ( amazon_commands )		1672513	0		=			
ANR	1672825	Identifier	num_commands		1672513	0					
ANR	1672826	CallExpression	allAmazonCommands ( amazon_commands )		1672513	1					
ANR	1672827	Callee	allAmazonCommands		1672513	0					
ANR	1672828	Identifier	allAmazonCommands		1672513	0					
ANR	1672829	ArgumentList	amazon_commands		1672513	1					
ANR	1672830	Argument	amazon_commands		1672513	0					
ANR	1672831	Identifier	amazon_commands		1672513	0					
ANR	1672832	ExpressionStatement	num_commands += 7	517:4:14209:14226	1672513	3	True				
ANR	1672833	AssignmentExpression	num_commands += 7		1672513	0		+=			
ANR	1672834	Identifier	num_commands		1672513	0					
ANR	1672835	PrimaryExpression	7		1672513	1					
ANR	1672836	IdentifierDeclStatement	const char * commands [ num_commands ] ;	519:4:14233:14267	1672513	4	True				
ANR	1672837	IdentifierDecl	* commands [ num_commands ]		1672513	0					
ANR	1672838	IdentifierDeclType	const char * [ num_commands ]		1672513	0					
ANR	1672839	Identifier	commands		1672513	1					
ANR	1672840	Identifier	num_commands		1672513	2					
ANR	1672841	IdentifierDeclStatement	int i = 0 ;	520:4:14273:14282	1672513	5	True				
ANR	1672842	IdentifierDecl	i = 0		1672513	0					
ANR	1672843	IdentifierDeclType	int		1672513	0					
ANR	1672844	Identifier	i		1672513	1					
ANR	1672845	AssignmentExpression	i = 0		1672513	2		=			
ANR	1672846	Identifier	i		1672513	0					
ANR	1672847	PrimaryExpression	0		1672513	1					
ANR	1672848	ExpressionStatement	commands [ i ++ ] = GAHP_RESULT_SUCCESS	521:4:14288:14323	1672513	6	True				
ANR	1672849	AssignmentExpression	commands [ i ++ ] = GAHP_RESULT_SUCCESS		1672513	0		=			
ANR	1672850	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672851	Identifier	commands		1672513	0					
ANR	1672852	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672853	Identifier	i		1672513	0					
ANR	1672854	IncDec	++		1672513	1					
ANR	1672855	Identifier	GAHP_RESULT_SUCCESS		1672513	1					
ANR	1672856	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_ASYNC_MODE_ON	522:4:14329:14371	1672513	7	True				
ANR	1672857	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_ASYNC_MODE_ON		1672513	0		=			
ANR	1672858	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672859	Identifier	commands		1672513	0					
ANR	1672860	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672861	Identifier	i		1672513	0					
ANR	1672862	IncDec	++		1672513	1					
ANR	1672863	Identifier	GAHP_COMMAND_ASYNC_MODE_ON		1672513	1					
ANR	1672864	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_ASYNC_MODE_OFF	523:4:14377:14420	1672513	8	True				
ANR	1672865	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_ASYNC_MODE_OFF		1672513	0		=			
ANR	1672866	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672867	Identifier	commands		1672513	0					
ANR	1672868	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672869	Identifier	i		1672513	0					
ANR	1672870	IncDec	++		1672513	1					
ANR	1672871	Identifier	GAHP_COMMAND_ASYNC_MODE_OFF		1672513	1					
ANR	1672872	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_RESULTS	524:4:14426:14462	1672513	9	True				
ANR	1672873	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_RESULTS		1672513	0		=			
ANR	1672874	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672875	Identifier	commands		1672513	0					
ANR	1672876	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672877	Identifier	i		1672513	0					
ANR	1672878	IncDec	++		1672513	1					
ANR	1672879	Identifier	GAHP_COMMAND_RESULTS		1672513	1					
ANR	1672880	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_QUIT	525:4:14468:14501	1672513	10	True				
ANR	1672881	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_QUIT		1672513	0		=			
ANR	1672882	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672883	Identifier	commands		1672513	0					
ANR	1672884	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672885	Identifier	i		1672513	0					
ANR	1672886	IncDec	++		1672513	1					
ANR	1672887	Identifier	GAHP_COMMAND_QUIT		1672513	1					
ANR	1672888	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_VERSION	526:4:14507:14543	1672513	11	True				
ANR	1672889	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_VERSION		1672513	0		=			
ANR	1672890	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672891	Identifier	commands		1672513	0					
ANR	1672892	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672893	Identifier	i		1672513	0					
ANR	1672894	IncDec	++		1672513	1					
ANR	1672895	Identifier	GAHP_COMMAND_VERSION		1672513	1					
ANR	1672896	ExpressionStatement	commands [ i ++ ] = GAHP_COMMAND_COMMANDS	527:4:14549:14586	1672513	12	True				
ANR	1672897	AssignmentExpression	commands [ i ++ ] = GAHP_COMMAND_COMMANDS		1672513	0		=			
ANR	1672898	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672899	Identifier	commands		1672513	0					
ANR	1672900	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672901	Identifier	i		1672513	0					
ANR	1672902	IncDec	++		1672513	1					
ANR	1672903	Identifier	GAHP_COMMAND_COMMANDS		1672513	1					
ANR	1672904	ExpressionStatement	amazon_commands . rewind ( )	529:4:14593:14617	1672513	13	True				
ANR	1672905	CallExpression	amazon_commands . rewind ( )		1672513	0					
ANR	1672906	Callee	amazon_commands . rewind		1672513	0					
ANR	1672907	MemberAccess	amazon_commands . rewind		1672513	0					
ANR	1672908	Identifier	amazon_commands		1672513	0					
ANR	1672909	Identifier	rewind		1672513	1					
ANR	1672910	ArgumentList			1672513	1					
ANR	1672911	IdentifierDeclStatement	char * one_amazon_command = NULL ;	530:4:14623:14654	1672513	14	True				
ANR	1672912	IdentifierDecl	* one_amazon_command = NULL		1672513	0					
ANR	1672913	IdentifierDeclType	char *		1672513	0					
ANR	1672914	Identifier	one_amazon_command		1672513	1					
ANR	1672915	AssignmentExpression	* one_amazon_command = NULL		1672513	2		=			
ANR	1672916	Identifier	NULL		1672513	0					
ANR	1672917	Identifier	NULL		1672513	1					
ANR	1672918	WhileStatement	while ( ( one_amazon_command = amazon_commands . next ( ) ) != NULL )		1672513	15					
ANR	1672919	Condition	( one_amazon_command = amazon_commands . next ( ) ) != NULL	532:11:14668:14721	1672513	0	True				
ANR	1672920	EqualityExpression	( one_amazon_command = amazon_commands . next ( ) ) != NULL		1672513	0		!=			
ANR	1672921	AssignmentExpression	one_amazon_command = amazon_commands . next ( )		1672513	0		=			
ANR	1672922	Identifier	one_amazon_command		1672513	0					
ANR	1672923	CallExpression	amazon_commands . next ( )		1672513	1					
ANR	1672924	Callee	amazon_commands . next		1672513	0					
ANR	1672925	MemberAccess	amazon_commands . next		1672513	0					
ANR	1672926	Identifier	amazon_commands		1672513	0					
ANR	1672927	Identifier	next		1672513	1					
ANR	1672928	ArgumentList			1672513	1					
ANR	1672929	Identifier	NULL		1672513	1					
ANR	1672930	CompoundStatement		75:68:2227:2227	1672513	1					
ANR	1672931	ExpressionStatement	commands [ i ++ ] = one_amazon_command	533:5:14732:14766	1672513	0	True				
ANR	1672932	AssignmentExpression	commands [ i ++ ] = one_amazon_command		1672513	0		=			
ANR	1672933	ArrayIndexing	commands [ i ++ ]		1672513	0					
ANR	1672934	Identifier	commands		1672513	0					
ANR	1672935	PostIncDecOperationExpression	i ++		1672513	1					
ANR	1672936	Identifier	i		1672513	0					
ANR	1672937	IncDec	++		1672513	1					
ANR	1672938	Identifier	one_amazon_command		1672513	1					
ANR	1672939	ExpressionStatement	"gahp_output_return ( commands , i )"	536:4:14779:14811	1672513	16	True				
ANR	1672940	CallExpression	"gahp_output_return ( commands , i )"		1672513	0					
ANR	1672941	Callee	gahp_output_return		1672513	0					
ANR	1672942	Identifier	gahp_output_return		1672513	0					
ANR	1672943	ArgumentList	commands		1672513	1					
ANR	1672944	Argument	commands		1672513	0					
ANR	1672945	Identifier	commands		1672513	0					
ANR	1672946	Argument	i		1672513	1					
ANR	1672947	Identifier	i		1672513	0					
ANR	1672948	ElseStatement	else		1672513	0					
ANR	1672949	CompoundStatement		80:10:2325:2325	1672513	0					
ANR	1672950	IfStatement	if ( ! addNewRequest ( command ) )		1672513	0					
ANR	1672951	Condition	! addNewRequest ( command )	539:8:14856:14878	1672513	0	True				
ANR	1672952	UnaryOperationExpression	! addNewRequest ( command )		1672513	0					
ANR	1672953	UnaryOperator	!		1672513	0					
ANR	1672954	CallExpression	addNewRequest ( command )		1672513	1					
ANR	1672955	Callee	addNewRequest		1672513	0					
ANR	1672956	Identifier	addNewRequest		1672513	0					
ANR	1672957	ArgumentList	command		1672513	1					
ANR	1672958	Argument	command		1672513	0					
ANR	1672959	Identifier	command		1672513	0					
ANR	1672960	CompoundStatement		82:34:2384:2384	1672513	1					
ANR	1672961	ExpressionStatement	gahp_output_return_error ( )	540:5:14889:14915	1672513	0	True				
ANR	1672962	CallExpression	gahp_output_return_error ( )		1672513	0					
ANR	1672963	Callee	gahp_output_return_error		1672513	0					
ANR	1672964	Identifier	gahp_output_return_error		1672513	0					
ANR	1672965	ArgumentList			1672513	1					
ANR	1672966	ElseStatement	else		1672513	0					
ANR	1672967	CompoundStatement		84:10:2429:2429	1672513	0					
ANR	1672968	ExpressionStatement	gahp_output_return_success ( )	542:5:14934:14962	1672513	0	True				
ANR	1672969	CallExpression	gahp_output_return_success ( )		1672513	0					
ANR	1672970	Callee	gahp_output_return_success		1672513	0					
ANR	1672971	Identifier	gahp_output_return_success		1672513	0					
ANR	1672972	ArgumentList			1672513	1					
ANR	1672973	ElseStatement	else		1672513	0					
ANR	1672974	CompoundStatement		89:9:2491:2491	1672513	0					
ANR	1672975	ExpressionStatement	gahp_output_return_error ( )	547:3:14994:15020	1672513	0	True				
ANR	1672976	CallExpression	gahp_output_return_error ( )		1672513	0					
ANR	1672977	Callee	gahp_output_return_error		1672513	0					
ANR	1672978	Identifier	gahp_output_return_error		1672513	0					
ANR	1672979	ArgumentList			1672513	1					
ANR	1672980	Statement	delete	550:2:15029:15034	1672513	4	True				
ANR	1672981	ExpressionStatement	line	550:9:15036:15040	1672513	5	True				
ANR	1672982	Identifier	line		1672513	0					
ANR	1672983	IfStatement	if ( m_stdin_buffer . IsError ( ) || m_stdin_buffer . IsEOF ( ) )		1672513	2					
ANR	1672984	Condition	m_stdin_buffer . IsError ( ) || m_stdin_buffer . IsEOF ( )	554:5:15119:15168	1672513	0	True				
ANR	1672985	OrExpression	m_stdin_buffer . IsError ( ) || m_stdin_buffer . IsEOF ( )		1672513	0		||			
ANR	1672986	CallExpression	m_stdin_buffer . IsError ( )		1672513	0					
ANR	1672987	Callee	m_stdin_buffer . IsError		1672513	0					
ANR	1672988	MemberAccess	m_stdin_buffer . IsError		1672513	0					
ANR	1672989	Identifier	m_stdin_buffer		1672513	0					
ANR	1672990	Identifier	IsError		1672513	1					
ANR	1672991	ArgumentList			1672513	1					
ANR	1672992	CallExpression	m_stdin_buffer . IsEOF ( )		1672513	1					
ANR	1672993	Callee	m_stdin_buffer . IsEOF		1672513	0					
ANR	1672994	MemberAccess	m_stdin_buffer . IsEOF		1672513	0					
ANR	1672995	Identifier	m_stdin_buffer		1672513	0					
ANR	1672996	Identifier	IsEOF		1672513	1					
ANR	1672997	ArgumentList			1672513	1					
ANR	1672998	CompoundStatement		97:57:2673:2673	1672513	1					
ANR	1672999	ExpressionStatement	"dprintf ( D_ALWAYS , ""stdin buffer closed, exiting\\n"" )"	555:2:15175:15227	1672513	0	True				
ANR	1673000	CallExpression	"dprintf ( D_ALWAYS , ""stdin buffer closed, exiting\\n"" )"		1672513	0					
ANR	1673001	Callee	dprintf		1672513	0					
ANR	1673002	Identifier	dprintf		1672513	0					
ANR	1673003	ArgumentList	D_ALWAYS		1672513	1					
ANR	1673004	Argument	D_ALWAYS		1672513	0					
ANR	1673005	Identifier	D_ALWAYS		1672513	0					
ANR	1673006	Argument	"""stdin buffer closed, exiting\\n"""		1672513	1					
ANR	1673007	PrimaryExpression	"""stdin buffer closed, exiting\\n"""		1672513	0					
ANR	1673008	ExpressionStatement	io_process_exit ( 1 )	556:2:15231:15249	1672513	1	True				
ANR	1673009	CallExpression	io_process_exit ( 1 )		1672513	0					
ANR	1673010	Callee	io_process_exit		1672513	0					
ANR	1673011	Identifier	io_process_exit		1672513	0					
ANR	1673012	ArgumentList	1		1672513	1					
ANR	1673013	Argument	1		1672513	0					
ANR	1673014	PrimaryExpression	1		1672513	0					
ANR	1673015	ReturnStatement	return TRUE ;	559:1:15256:15267	1672513	3	True				
ANR	1673016	Identifier	TRUE		1672513	0					
ANR	1673017	ReturnType	int		1672513	1					
ANR	1673018	Identifier	IOProcess :: stdinPipeHandler		1672513	2					
ANR	1673019	ParameterList			1672513	3					
ANR	1673020	CFGEntryNode	ENTRY		1672513		True				
ANR	1673021	CFGExitNode	EXIT		1672513		True				
ANR	1673022	Symbol	next		1672513						
ANR	1673023	Symbol	stdout		1672513						
ANR	1673024	Symbol	one_amazon_command		1672513						
ANR	1673025	Symbol	line		1672513						
ANR	1673026	Symbol	parse_gahp_command		1672513						
ANR	1673027	Symbol	* args . argv		1672513						
ANR	1673028	Symbol	* line		1672513						
ANR	1673029	Symbol	* commands		1672513						
ANR	1673030	Symbol	* args		1672513						
ANR	1673031	Symbol	GAHP_COMMAND_VERSION		1672513						
ANR	1673032	Symbol	line -> c_str		1672513						
ANR	1673033	Symbol	m_async_mode		1672513						
ANR	1673034	Symbol	numOfResult		1672513						
ANR	1673035	Symbol	GAHP_COMMAND_ASYNC_MODE_OFF		1672513						
ANR	1673036	Symbol	GAHP_COMMAND_RESULTS		1672513						
ANR	1673037	Symbol	strcasecmp		1672513						
ANR	1673038	Symbol	commands		1672513						
ANR	1673039	Symbol	m_stdin_buffer . IsError		1672513						
ANR	1673040	Symbol	& args		1672513						
ANR	1673041	Symbol	args . argc		1672513						
ANR	1673042	Symbol	m_stdin_buffer		1672513						
ANR	1673043	Symbol	NextResult		1672513						
ANR	1673044	Symbol	m_new_results_signaled		1672513						
ANR	1673045	Symbol	NULL		1672513						
ANR	1673046	Symbol	allAmazonCommands		1672513						
ANR	1673047	Symbol	addNewRequest		1672513						
ANR	1673048	Symbol	GAHP_COMMAND_QUIT		1672513						
ANR	1673049	Symbol	GAHP_COMMAND_ASYNC_MODE_ON		1672513						
ANR	1673050	Symbol	GAHP_COMMAND_COMMANDS		1672513						
ANR	1673051	Symbol	false		1672513						
ANR	1673052	Symbol	D_ALWAYS		1672513						
ANR	1673053	Symbol	i		1672513						
ANR	1673054	Symbol	TRUE		1672513						
ANR	1673055	Symbol	D_FULLDEBUG		1672513						
ANR	1673056	Symbol	version		1672513						
ANR	1673057	Symbol	command		1672513						
ANR	1673058	Symbol	args		1672513						
ANR	1673059	Symbol	amazon_commands		1672513						
ANR	1673060	Symbol	m_stdin_buffer . IsEOF		1672513						
ANR	1673061	Symbol	args . argv		1672513						
ANR	1673062	Symbol	GAHP_RESULT_SUCCESS		1672513						
ANR	1673063	Symbol	true		1672513						
ANR	1673064	Symbol	verify_gahp_command		1672513						
ANR	1673065	Symbol	num_commands		1672513						
ANR	1673066	Symbol	amazon_commands . next		1672513						
ANR	1673067	Symbol	m_stdin_buffer . GetNextLine		1672513						
ANR	1673068	Function	IOProcess :: createNewWorker	562:0:15272:16085							
ANR	1673069	FunctionDef	IOProcess :: createNewWorker ()		1673068	0					
ANR	1673070	CompoundStatement		564:0:15313:16085	1673068	0					
ANR	1673071	IdentifierDeclStatement	Worker * new_worker = NULL ;	565:1:15316:15341	1673068	0	True				
ANR	1673072	IdentifierDecl	* new_worker = NULL		1673068	0					
ANR	1673073	IdentifierDeclType	Worker *		1673068	0					
ANR	1673074	Identifier	new_worker		1673068	1					
ANR	1673075	AssignmentExpression	* new_worker = NULL		1673068	2		=			
ANR	1673076	Identifier	NULL		1673068	0					
ANR	1673077	Identifier	NULL		1673068	1					
ANR	1673078	ExpressionStatement	new_worker = new Worker ( newWorkerId ( ) )	566:1:15344:15382	1673068	1	True				
ANR	1673079	AssignmentExpression	new_worker = new Worker ( newWorkerId ( ) )		1673068	0		=			
ANR	1673080	Identifier	new_worker		1673068	0					
ANR	1673081	CallExpression	newWorkerId ( )		1673068	1					
ANR	1673082	Callee	newWorkerId		1673068	0					
ANR	1673083	Identifier	newWorkerId		1673068	0					
ANR	1673084	ArgumentList			1673068	1					
ANR	1673085	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""About to start a new thread\\n"" )"	568:1:15386:15440	1673068	2	True				
ANR	1673086	CallExpression	"dprintf ( D_FULLDEBUG , ""About to start a new thread\\n"" )"		1673068	0					
ANR	1673087	Callee	dprintf		1673068	0					
ANR	1673088	Identifier	dprintf		1673068	0					
ANR	1673089	ArgumentList	D_FULLDEBUG		1673068	1					
ANR	1673090	Argument	D_FULLDEBUG		1673068	0					
ANR	1673091	Identifier	D_FULLDEBUG		1673068	0					
ANR	1673092	Argument	"""About to start a new thread\\n"""		1673068	1					
ANR	1673093	PrimaryExpression	"""About to start a new thread\\n"""		1673068	0					
ANR	1673094	ExpressionStatement	new_worker -> m_can_use = true	571:1:15477:15505	1673068	3	True				
ANR	1673095	AssignmentExpression	new_worker -> m_can_use = true		1673068	0		=			
ANR	1673096	PtrMemberAccess	new_worker -> m_can_use		1673068	0					
ANR	1673097	Identifier	new_worker		1673068	0					
ANR	1673098	Identifier	m_can_use		1673068	1					
ANR	1673099	Identifier	true		1673068	1					
ANR	1673100	IdentifierDeclStatement	pthread_t thread ;	574:1:15529:15545	1673068	4	True				
ANR	1673101	IdentifierDecl	thread		1673068	0					
ANR	1673102	IdentifierDeclType	pthread_t		1673068	0					
ANR	1673103	Identifier	thread		1673068	1					
ANR	1673104	IfStatement	"if ( pthread_create ( & thread , NULL , worker_function , ( void * ) new_worker ) != 0 )"		1673068	5					
ANR	1673105	Condition	"pthread_create ( & thread , NULL , worker_function , ( void * ) new_worker ) != 0"	575:5:15552:15628	1673068	0	True				
ANR	1673106	EqualityExpression	"pthread_create ( & thread , NULL , worker_function , ( void * ) new_worker ) != 0"		1673068	0		!=			
ANR	1673107	CallExpression	"pthread_create ( & thread , NULL , worker_function , ( void * ) new_worker )"		1673068	0					
ANR	1673108	Callee	pthread_create		1673068	0					
ANR	1673109	Identifier	pthread_create		1673068	0					
ANR	1673110	ArgumentList	& thread		1673068	1					
ANR	1673111	Argument	& thread		1673068	0					
ANR	1673112	UnaryOperationExpression	& thread		1673068	0					
ANR	1673113	UnaryOperator	&		1673068	0					
ANR	1673114	Identifier	thread		1673068	1					
ANR	1673115	Argument	NULL		1673068	1					
ANR	1673116	Identifier	NULL		1673068	0					
ANR	1673117	Argument	worker_function		1673068	2					
ANR	1673118	Identifier	worker_function		1673068	0					
ANR	1673119	Argument	( void * ) new_worker		1673068	3					
ANR	1673120	CastExpression	( void * ) new_worker		1673068	0					
ANR	1673121	CastTarget	void *		1673068	0					
ANR	1673122	Identifier	new_worker		1673068	1					
ANR	1673123	PrimaryExpression	0		1673068	1					
ANR	1673124	CompoundStatement		13:49:318:318	1673068	1					
ANR	1673125	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create a new thread\\n"" )"	577:2:15636:15688	1673068	0	True				
ANR	1673126	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create a new thread\\n"" )"		1673068	0					
ANR	1673127	Callee	dprintf		1673068	0					
ANR	1673128	Identifier	dprintf		1673068	0					
ANR	1673129	ArgumentList	D_ALWAYS		1673068	1					
ANR	1673130	Argument	D_ALWAYS		1673068	0					
ANR	1673131	Identifier	D_ALWAYS		1673068	0					
ANR	1673132	Argument	"""Failed to create a new thread\\n"""		1673068	1					
ANR	1673133	PrimaryExpression	"""Failed to create a new thread\\n"""		1673068	0					
ANR	1673134	Statement	delete	579:2:15693:15698	1673068	1	True				
ANR	1673135	ExpressionStatement	new_worker	579:9:15700:15710	1673068	2	True				
ANR	1673136	Identifier	new_worker		1673068	0					
ANR	1673137	ReturnStatement	return NULL ;	580:2:15714:15725	1673068	3	True				
ANR	1673138	Identifier	NULL		1673068	0					
ANR	1673139	ExpressionStatement	pthread_detach ( thread )	584:1:15756:15778	1673068	6	True				
ANR	1673140	CallExpression	pthread_detach ( thread )		1673068	0					
ANR	1673141	Callee	pthread_detach		1673068	0					
ANR	1673142	Identifier	pthread_detach		1673068	0					
ANR	1673143	ArgumentList	thread		1673068	1					
ANR	1673144	Argument	thread		1673068	0					
ANR	1673145	Identifier	thread		1673068	0					
ANR	1673146	ExpressionStatement	"m_workers_list . insert ( new_worker -> m_id , new_worker )"	588:1:15864:15915	1673068	7	True				
ANR	1673147	CallExpression	"m_workers_list . insert ( new_worker -> m_id , new_worker )"		1673068	0					
ANR	1673148	Callee	m_workers_list . insert		1673068	0					
ANR	1673149	MemberAccess	m_workers_list . insert		1673068	0					
ANR	1673150	Identifier	m_workers_list		1673068	0					
ANR	1673151	Identifier	insert		1673068	1					
ANR	1673152	ArgumentList	new_worker -> m_id		1673068	1					
ANR	1673153	Argument	new_worker -> m_id		1673068	0					
ANR	1673154	PtrMemberAccess	new_worker -> m_id		1673068	0					
ANR	1673155	Identifier	new_worker		1673068	0					
ANR	1673156	Identifier	m_id		1673068	1					
ANR	1673157	Argument	new_worker		1673068	1					
ANR	1673158	Identifier	new_worker		1673068	0					
ANR	1673159	ExpressionStatement	m_avail_workers_num ++	589:1:15918:15939	1673068	8	True				
ANR	1673160	PostIncDecOperationExpression	m_avail_workers_num ++		1673068	0					
ANR	1673161	Identifier	m_avail_workers_num		1673068	0					
ANR	1673162	IncDec	++		1673068	1					
ANR	1673163	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""New Worker[id=%d] is created!\\n"" , new_worker -> m_id )"	592:1:15990:16063	1673068	9	True				
ANR	1673164	CallExpression	"dprintf ( D_FULLDEBUG , ""New Worker[id=%d] is created!\\n"" , new_worker -> m_id )"		1673068	0					
ANR	1673165	Callee	dprintf		1673068	0					
ANR	1673166	Identifier	dprintf		1673068	0					
ANR	1673167	ArgumentList	D_FULLDEBUG		1673068	1					
ANR	1673168	Argument	D_FULLDEBUG		1673068	0					
ANR	1673169	Identifier	D_FULLDEBUG		1673068	0					
ANR	1673170	Argument	"""New Worker[id=%d] is created!\\n"""		1673068	1					
ANR	1673171	PrimaryExpression	"""New Worker[id=%d] is created!\\n"""		1673068	0					
ANR	1673172	Argument	new_worker -> m_id		1673068	2					
ANR	1673173	PtrMemberAccess	new_worker -> m_id		1673068	0					
ANR	1673174	Identifier	new_worker		1673068	0					
ANR	1673175	Identifier	m_id		1673068	1					
ANR	1673176	ReturnStatement	return new_worker ;	593:1:16066:16083	1673068	10	True				
ANR	1673177	Identifier	new_worker		1673068	0					
ANR	1673178	ReturnType	Worker *		1673068	1					
ANR	1673179	Identifier	IOProcess :: createNewWorker		1673068	2					
ANR	1673180	ParameterList			1673068	3					
ANR	1673181	CFGEntryNode	ENTRY		1673068		True				
ANR	1673182	CFGExitNode	EXIT		1673068		True				
ANR	1673183	Symbol	NULL		1673068						
ANR	1673184	Symbol	new_worker -> m_id		1673068						
ANR	1673185	Symbol	D_ALWAYS		1673068						
ANR	1673186	Symbol	m_avail_workers_num		1673068						
ANR	1673187	Symbol	D_FULLDEBUG		1673068						
ANR	1673188	Symbol	thread		1673068						
ANR	1673189	Symbol	new_worker -> m_can_use		1673068						
ANR	1673190	Symbol	new_worker		1673068						
ANR	1673191	Symbol	& thread		1673068						
ANR	1673192	Symbol	true		1673068						
ANR	1673193	Symbol	m_workers_list		1673068						
ANR	1673194	Symbol	newWorkerId		1673068						
ANR	1673195	Symbol	* new_worker		1673068						
ANR	1673196	Symbol	worker_function		1673068						
ANR	1673197	Symbol	pthread_create		1673068						
ANR	1673198	Function	IOProcess :: findFreeWorker	596:0:16088:16676							
ANR	1673199	FunctionDef	IOProcess :: findFreeWorker ()		1673198	0					
ANR	1673200	CompoundStatement		598:0:16129:16676	1673198	0					
ANR	1673201	IdentifierDeclStatement	int currentkey = 0 ;	599:1:16132:16150	1673198	0	True				
ANR	1673202	IdentifierDecl	currentkey = 0		1673198	0					
ANR	1673203	IdentifierDeclType	int		1673198	0					
ANR	1673204	Identifier	currentkey		1673198	1					
ANR	1673205	AssignmentExpression	currentkey = 0		1673198	2		=			
ANR	1673206	Identifier	currentkey		1673198	0					
ANR	1673207	PrimaryExpression	0		1673198	1					
ANR	1673208	IdentifierDeclStatement	Worker * worker = NULL ;	600:1:16153:16174	1673198	1	True				
ANR	1673209	IdentifierDecl	* worker = NULL		1673198	0					
ANR	1673210	IdentifierDeclType	Worker *		1673198	0					
ANR	1673211	Identifier	worker		1673198	1					
ANR	1673212	AssignmentExpression	* worker = NULL		1673198	2		=			
ANR	1673213	Identifier	NULL		1673198	0					
ANR	1673214	Identifier	NULL		1673198	1					
ANR	1673215	ExpressionStatement	m_workers_list . startIterations ( )	603:1:16223:16255	1673198	2	True				
ANR	1673216	CallExpression	m_workers_list . startIterations ( )		1673198	0					
ANR	1673217	Callee	m_workers_list . startIterations		1673198	0					
ANR	1673218	MemberAccess	m_workers_list . startIterations		1673198	0					
ANR	1673219	Identifier	m_workers_list		1673198	0					
ANR	1673220	Identifier	startIterations		1673198	1					
ANR	1673221	ArgumentList			1673198	1					
ANR	1673222	WhileStatement	"while ( m_workers_list . iterate ( currentkey , worker ) != 0 )"		1673198	3					
ANR	1673223	Condition	"m_workers_list . iterate ( currentkey , worker ) != 0"	604:8:16265:16311	1673198	0	True				
ANR	1673224	EqualityExpression	"m_workers_list . iterate ( currentkey , worker ) != 0"		1673198	0		!=			
ANR	1673225	CallExpression	"m_workers_list . iterate ( currentkey , worker )"		1673198	0					
ANR	1673226	Callee	m_workers_list . iterate		1673198	0					
ANR	1673227	MemberAccess	m_workers_list . iterate		1673198	0					
ANR	1673228	Identifier	m_workers_list		1673198	0					
ANR	1673229	Identifier	iterate		1673198	1					
ANR	1673230	ArgumentList	currentkey		1673198	1					
ANR	1673231	Argument	currentkey		1673198	0					
ANR	1673232	Identifier	currentkey		1673198	0					
ANR	1673233	Argument	worker		1673198	1					
ANR	1673234	Identifier	worker		1673198	0					
ANR	1673235	PrimaryExpression	0		1673198	1					
ANR	1673236	CompoundStatement		7:58:185:185	1673198	1					
ANR	1673237	IfStatement	if ( ! worker -> m_is_doing && worker -> m_can_use )		1673198	0					
ANR	1673238	Condition	! worker -> m_is_doing && worker -> m_can_use	608:6:16367:16406	1673198	0	True				
ANR	1673239	AndExpression	! worker -> m_is_doing && worker -> m_can_use		1673198	0		&&			
ANR	1673240	UnaryOperationExpression	! worker -> m_is_doing		1673198	0					
ANR	1673241	UnaryOperator	!		1673198	0					
ANR	1673242	PtrMemberAccess	worker -> m_is_doing		1673198	1					
ANR	1673243	Identifier	worker		1673198	0					
ANR	1673244	Identifier	m_is_doing		1673198	1					
ANR	1673245	PtrMemberAccess	worker -> m_can_use		1673198	1					
ANR	1673246	Identifier	worker		1673198	0					
ANR	1673247	Identifier	m_can_use		1673198	1					
ANR	1673248	CompoundStatement		11:49:280:280	1673198	1					
ANR	1673249	ExpressionStatement	worker -> m_must_be_alive = true	609:3:16416:16446	1673198	0	True				
ANR	1673250	AssignmentExpression	worker -> m_must_be_alive = true		1673198	0		=			
ANR	1673251	PtrMemberAccess	worker -> m_must_be_alive		1673198	0					
ANR	1673252	Identifier	worker		1673198	0					
ANR	1673253	Identifier	m_must_be_alive		1673198	1					
ANR	1673254	Identifier	true		1673198	1					
ANR	1673255	ReturnStatement	return worker ;	614:3:16548:16561	1673198	1	True				
ANR	1673256	Identifier	worker		1673198	0					
ANR	1673257	ReturnStatement	return NULL ;	620:1:16663:16674	1673198	4	True				
ANR	1673258	Identifier	NULL		1673198	0					
ANR	1673259	ReturnType	Worker *		1673198	1					
ANR	1673260	Identifier	IOProcess :: findFreeWorker		1673198	2					
ANR	1673261	ParameterList			1673198	3					
ANR	1673262	CFGEntryNode	ENTRY		1673198		True				
ANR	1673263	CFGExitNode	EXIT		1673198		True				
ANR	1673264	Symbol	currentkey		1673198						
ANR	1673265	Symbol	NULL		1673198						
ANR	1673266	Symbol	worker -> m_is_doing		1673198						
ANR	1673267	Symbol	worker -> m_can_use		1673198						
ANR	1673268	Symbol	m_workers_list		1673198						
ANR	1673269	Symbol	true		1673198						
ANR	1673270	Symbol	worker -> m_must_be_alive		1673198						
ANR	1673271	Symbol	worker		1673198						
ANR	1673272	Symbol	m_workers_list . iterate		1673198						
ANR	1673273	Symbol	* worker		1673198						
ANR	1673274	Function	IOProcess :: findFirstAvailWorker	623:0:16679:17248							
ANR	1673275	FunctionDef	IOProcess :: findFirstAvailWorker ()		1673274	0					
ANR	1673276	CompoundStatement		625:0:16725:17248	1673274	0					
ANR	1673277	IdentifierDeclStatement	int currentkey = 0 ;	626:1:16728:16746	1673274	0	True				
ANR	1673278	IdentifierDecl	currentkey = 0		1673274	0					
ANR	1673279	IdentifierDeclType	int		1673274	0					
ANR	1673280	Identifier	currentkey		1673274	1					
ANR	1673281	AssignmentExpression	currentkey = 0		1673274	2		=			
ANR	1673282	Identifier	currentkey		1673274	0					
ANR	1673283	PrimaryExpression	0		1673274	1					
ANR	1673284	IdentifierDeclStatement	Worker * worker = NULL ;	627:1:16749:16770	1673274	1	True				
ANR	1673285	IdentifierDecl	* worker = NULL		1673274	0					
ANR	1673286	IdentifierDeclType	Worker *		1673274	0					
ANR	1673287	Identifier	worker		1673274	1					
ANR	1673288	AssignmentExpression	* worker = NULL		1673274	2		=			
ANR	1673289	Identifier	NULL		1673274	0					
ANR	1673290	Identifier	NULL		1673274	1					
ANR	1673291	ExpressionStatement	m_workers_list . startIterations ( )	631:1:16820:16852	1673274	2	True				
ANR	1673292	CallExpression	m_workers_list . startIterations ( )		1673274	0					
ANR	1673293	Callee	m_workers_list . startIterations		1673274	0					
ANR	1673294	MemberAccess	m_workers_list . startIterations		1673274	0					
ANR	1673295	Identifier	m_workers_list		1673274	0					
ANR	1673296	Identifier	startIterations		1673274	1					
ANR	1673297	ArgumentList			1673274	1					
ANR	1673298	WhileStatement	"while ( m_workers_list . iterate ( currentkey , worker ) != 0 )"		1673274	3					
ANR	1673299	Condition	"m_workers_list . iterate ( currentkey , worker ) != 0"	632:8:16862:16908	1673274	0	True				
ANR	1673300	EqualityExpression	"m_workers_list . iterate ( currentkey , worker ) != 0"		1673274	0		!=			
ANR	1673301	CallExpression	"m_workers_list . iterate ( currentkey , worker )"		1673274	0					
ANR	1673302	Callee	m_workers_list . iterate		1673274	0					
ANR	1673303	MemberAccess	m_workers_list . iterate		1673274	0					
ANR	1673304	Identifier	m_workers_list		1673274	0					
ANR	1673305	Identifier	iterate		1673274	1					
ANR	1673306	ArgumentList	currentkey		1673274	1					
ANR	1673307	Argument	currentkey		1673274	0					
ANR	1673308	Identifier	currentkey		1673274	0					
ANR	1673309	Argument	worker		1673274	1					
ANR	1673310	Identifier	worker		1673274	0					
ANR	1673311	PrimaryExpression	0		1673274	1					
ANR	1673312	CompoundStatement		8:58:186:186	1673274	1					
ANR	1673313	IfStatement	if ( worker -> m_can_use )		1673274	0					
ANR	1673314	Condition	worker -> m_can_use	636:6:16964:16980	1673274	0	True				
ANR	1673315	PtrMemberAccess	worker -> m_can_use		1673274	0					
ANR	1673316	Identifier	worker		1673274	0					
ANR	1673317	Identifier	m_can_use		1673274	1					
ANR	1673318	CompoundStatement		12:26:258:258	1673274	1					
ANR	1673319	ExpressionStatement	worker -> m_must_be_alive = true	637:3:16989:17019	1673274	0	True				
ANR	1673320	AssignmentExpression	worker -> m_must_be_alive = true		1673274	0		=			
ANR	1673321	PtrMemberAccess	worker -> m_must_be_alive		1673274	0					
ANR	1673322	Identifier	worker		1673274	0					
ANR	1673323	Identifier	m_must_be_alive		1673274	1					
ANR	1673324	Identifier	true		1673274	1					
ANR	1673325	ReturnStatement	return worker ;	641:3:17119:17132	1673274	1	True				
ANR	1673326	Identifier	worker		1673274	0					
ANR	1673327	ReturnStatement	return NULL ;	648:1:17235:17246	1673274	4	True				
ANR	1673328	Identifier	NULL		1673274	0					
ANR	1673329	ReturnType	Worker *		1673274	1					
ANR	1673330	Identifier	IOProcess :: findFirstAvailWorker		1673274	2					
ANR	1673331	ParameterList			1673274	3					
ANR	1673332	CFGEntryNode	ENTRY		1673274		True				
ANR	1673333	CFGExitNode	EXIT		1673274		True				
ANR	1673334	Symbol	currentkey		1673274						
ANR	1673335	Symbol	NULL		1673274						
ANR	1673336	Symbol	worker -> m_can_use		1673274						
ANR	1673337	Symbol	m_workers_list		1673274						
ANR	1673338	Symbol	true		1673274						
ANR	1673339	Symbol	worker -> m_must_be_alive		1673274						
ANR	1673340	Symbol	worker		1673274						
ANR	1673341	Symbol	m_workers_list . iterate		1673274						
ANR	1673342	Symbol	* worker		1673274						
ANR	1673343	Function	IOProcess :: findWorker	652:0:17252:17370							
ANR	1673344	FunctionDef	IOProcess :: findWorker (int id)		1673343	0					
ANR	1673345	CompoundStatement		654:0:17291:17370	1673343	0					
ANR	1673346	IdentifierDeclStatement	Worker * worker = NULL ;	655:1:17294:17315	1673343	0	True				
ANR	1673347	IdentifierDecl	* worker = NULL		1673343	0					
ANR	1673348	IdentifierDeclType	Worker *		1673343	0					
ANR	1673349	Identifier	worker		1673343	1					
ANR	1673350	AssignmentExpression	* worker = NULL		1673343	2		=			
ANR	1673351	Identifier	NULL		1673343	0					
ANR	1673352	Identifier	NULL		1673343	1					
ANR	1673353	ExpressionStatement	"m_workers_list . lookup ( id , worker )"	657:1:17319:17352	1673343	1	True				
ANR	1673354	CallExpression	"m_workers_list . lookup ( id , worker )"		1673343	0					
ANR	1673355	Callee	m_workers_list . lookup		1673343	0					
ANR	1673356	MemberAccess	m_workers_list . lookup		1673343	0					
ANR	1673357	Identifier	m_workers_list		1673343	0					
ANR	1673358	Identifier	lookup		1673343	1					
ANR	1673359	ArgumentList	id		1673343	1					
ANR	1673360	Argument	id		1673343	0					
ANR	1673361	Identifier	id		1673343	0					
ANR	1673362	Argument	worker		1673343	1					
ANR	1673363	Identifier	worker		1673343	0					
ANR	1673364	ReturnStatement	return worker ;	658:1:17355:17368	1673343	2	True				
ANR	1673365	Identifier	worker		1673343	0					
ANR	1673366	ReturnType	Worker *		1673343	1					
ANR	1673367	Identifier	IOProcess :: findWorker		1673343	2					
ANR	1673368	ParameterList	int id		1673343	3					
ANR	1673369	Parameter	int id	653:22:17283:17288	1673343	0	True				
ANR	1673370	ParameterType	int		1673343	0					
ANR	1673371	Identifier	id		1673343	1					
ANR	1673372	CFGEntryNode	ENTRY		1673343		True				
ANR	1673373	CFGExitNode	EXIT		1673343		True				
ANR	1673374	Symbol	NULL		1673343						
ANR	1673375	Symbol	m_workers_list		1673343						
ANR	1673376	Symbol	id		1673343						
ANR	1673377	Symbol	worker		1673343						
ANR	1673378	Function	IOProcess :: removeWorkerFromWorkerList	661:0:17373:17558							
ANR	1673379	FunctionDef	IOProcess :: removeWorkerFromWorkerList (int id)		1673378	0					
ANR	1673380	CompoundStatement		663:0:17425:17558	1673378	0					
ANR	1673381	IdentifierDeclStatement	Worker * worker = findWorker ( id ) ;	664:1:17428:17459	1673378	0	True				
ANR	1673382	IdentifierDecl	* worker = findWorker ( id )		1673378	0					
ANR	1673383	IdentifierDeclType	Worker *		1673378	0					
ANR	1673384	Identifier	worker		1673378	1					
ANR	1673385	AssignmentExpression	* worker = findWorker ( id )		1673378	2		=			
ANR	1673386	Identifier	worker		1673378	0					
ANR	1673387	CallExpression	findWorker ( id )		1673378	1					
ANR	1673388	Callee	findWorker		1673378	0					
ANR	1673389	Identifier	findWorker		1673378	0					
ANR	1673390	ArgumentList	id		1673378	1					
ANR	1673391	Argument	id		1673378	0					
ANR	1673392	Identifier	id		1673378	0					
ANR	1673393	IfStatement	if ( worker )		1673378	1					
ANR	1673394	Condition	worker	665:5:17466:17471	1673378	0	True				
ANR	1673395	Identifier	worker		1673378	0					
ANR	1673396	CompoundStatement		3:14:49:49	1673378	1					
ANR	1673397	ExpressionStatement	m_workers_list . remove ( id )	666:2:17479:17504	1673378	0	True				
ANR	1673398	CallExpression	m_workers_list . remove ( id )		1673378	0					
ANR	1673399	Callee	m_workers_list . remove		1673378	0					
ANR	1673400	MemberAccess	m_workers_list . remove		1673378	0					
ANR	1673401	Identifier	m_workers_list		1673378	0					
ANR	1673402	Identifier	remove		1673378	1					
ANR	1673403	ArgumentList	id		1673378	1					
ANR	1673404	Argument	id		1673378	0					
ANR	1673405	Identifier	id		1673378	0					
ANR	1673406	Statement	delete	668:2:17509:17514	1673378	1	True				
ANR	1673407	ExpressionStatement	worker	668:9:17516:17522	1673378	2	True				
ANR	1673408	Identifier	worker		1673378	0					
ANR	1673409	ReturnStatement	return true ;	669:2:17526:17537	1673378	3	True				
ANR	1673410	Identifier	true		1673378	0					
ANR	1673411	ReturnStatement	return false ;	672:1:17544:17556	1673378	2	True				
ANR	1673412	Identifier	false		1673378	0					
ANR	1673413	ReturnType	bool		1673378	1					
ANR	1673414	Identifier	IOProcess :: removeWorkerFromWorkerList		1673378	2					
ANR	1673415	ParameterList	int id		1673378	3					
ANR	1673416	Parameter	int id	662:38:17417:17422	1673378	0	True				
ANR	1673417	ParameterType	int		1673378	0					
ANR	1673418	Identifier	id		1673378	1					
ANR	1673419	CFGEntryNode	ENTRY		1673378		True				
ANR	1673420	CFGExitNode	EXIT		1673378		True				
ANR	1673421	Symbol	m_workers_list		1673378						
ANR	1673422	Symbol	true		1673378						
ANR	1673423	Symbol	false		1673378						
ANR	1673424	Symbol	id		1673378						
ANR	1673425	Symbol	findWorker		1673378						
ANR	1673426	Symbol	worker		1673378						
ANR	1673427	Function	IOProcess :: LockWorkerList	675:0:17561:17645							
ANR	1673428	FunctionDef	IOProcess :: LockWorkerList ()		1673427	0					
ANR	1673429	CompoundStatement		677:0:17598:17645	1673427	0					
ANR	1673430	ReturnType	void		1673427	1					
ANR	1673431	Identifier	IOProcess :: LockWorkerList		1673427	2					
ANR	1673432	ParameterList			1673427	3					
ANR	1673433	CFGEntryNode	ENTRY		1673427		True				
ANR	1673434	CFGExitNode	EXIT		1673427		True				
ANR	1673435	Function	IOProcess :: UnlockWorkerList	681:0:17648:17736							
ANR	1673436	FunctionDef	IOProcess :: UnlockWorkerList ()		1673435	0					
ANR	1673437	CompoundStatement		683:0:17687:17736	1673435	0					
ANR	1673438	ReturnType	void		1673435	1					
ANR	1673439	Identifier	IOProcess :: UnlockWorkerList		1673435	2					
ANR	1673440	ParameterList			1673435	3					
ANR	1673441	CFGEntryNode	ENTRY		1673435		True				
ANR	1673442	CFGExitNode	EXIT		1673435		True				
ANR	1673443	Function	IOProcess :: addNewRequest	687:0:17739:18182							
ANR	1673444	FunctionDef	IOProcess :: addNewRequest (const char * cmd)		1673443	0					
ANR	1673445	CompoundStatement		689:0:17791:18182	1673443	0					
ANR	1673446	IfStatement	if ( ! cmd )		1673443	0					
ANR	1673447	Condition	! cmd	690:5:17798:17801	1673443	0	True				
ANR	1673448	UnaryOperationExpression	! cmd		1673443	0					
ANR	1673449	UnaryOperator	!		1673443	0					
ANR	1673450	Identifier	cmd		1673443	1					
ANR	1673451	CompoundStatement		2:12:13:13	1673443	1					
ANR	1673452	ReturnStatement	return NULL ;	691:2:17809:17820	1673443	0	True				
ANR	1673453	Identifier	NULL		1673443	0					
ANR	1673454	IdentifierDeclStatement	Request * new_req = new Request ( cmd ) ;	694:1:17827:17862	1673443	1	True				
ANR	1673455	IdentifierDecl	* new_req = new Request ( cmd )		1673443	0					
ANR	1673456	IdentifierDeclType	Request *		1673443	0					
ANR	1673457	Identifier	new_req		1673443	1					
ANR	1673458	AssignmentExpression	* new_req = new Request ( cmd )		1673443	2		=			
ANR	1673459	Identifier	cmd		1673443	0					
ANR	1673460	Identifier	cmd		1673443	1					
ANR	1673461	ExpressionStatement	ASSERT ( new_req )	695:1:17865:17880	1673443	2	True				
ANR	1673462	CallExpression	ASSERT ( new_req )		1673443	0					
ANR	1673463	Callee	ASSERT		1673443	0					
ANR	1673464	Identifier	ASSERT		1673443	0					
ANR	1673465	ArgumentList	new_req		1673443	1					
ANR	1673466	Argument	new_req		1673443	0					
ANR	1673467	Identifier	new_req		1673443	0					
ANR	1673468	IdentifierDeclStatement	Worker * worker = findFreeWorker ( ) ;	698:1:17931:17964	1673443	3	True				
ANR	1673469	IdentifierDecl	* worker = findFreeWorker ( )		1673443	0					
ANR	1673470	IdentifierDeclType	Worker *		1673443	0					
ANR	1673471	Identifier	worker		1673443	1					
ANR	1673472	AssignmentExpression	* worker = findFreeWorker ( )		1673443	2		=			
ANR	1673473	Identifier	worker		1673443	0					
ANR	1673474	CallExpression	findFreeWorker ( )		1673443	1					
ANR	1673475	Callee	findFreeWorker		1673443	0					
ANR	1673476	Identifier	findFreeWorker		1673443	0					
ANR	1673477	ArgumentList			1673443	1					
ANR	1673478	IfStatement	if ( ! worker )		1673443	4					
ANR	1673479	Condition	! worker	700:5:17972:17978	1673443	0	True				
ANR	1673480	UnaryOperationExpression	! worker		1673443	0					
ANR	1673481	UnaryOperator	!		1673443	0					
ANR	1673482	Identifier	worker		1673443	1					
ANR	1673483	CompoundStatement		12:15:190:190	1673443	1					
ANR	1673484	IfStatement	if ( m_max_workers == - 1 || m_avail_workers_num < m_max_workers )		1673443	0					
ANR	1673485	Condition	m_max_workers == - 1 || m_avail_workers_num < m_max_workers	703:6:18025:18082	1673443	0	True				
ANR	1673486	OrExpression	m_max_workers == - 1 || m_avail_workers_num < m_max_workers		1673443	0		||			
ANR	1673487	EqualityExpression	m_max_workers == - 1		1673443	0		==			
ANR	1673488	Identifier	m_max_workers		1673443	0					
ANR	1673489	UnaryOperationExpression	- 1		1673443	1					
ANR	1673490	UnaryOperator	-		1673443	0					
ANR	1673491	PrimaryExpression	1		1673443	1					
ANR	1673492	RelationalExpression	m_avail_workers_num < m_max_workers		1673443	1		<			
ANR	1673493	Identifier	m_avail_workers_num		1673443	0					
ANR	1673494	Identifier	m_max_workers		1673443	1					
ANR	1673495	CompoundStatement		15:67:294:294	1673443	1					
ANR	1673496	ExpressionStatement	worker = createNewWorker ( )	704:3:18091:18117	1673443	0	True				
ANR	1673497	AssignmentExpression	worker = createNewWorker ( )		1673443	0		=			
ANR	1673498	Identifier	worker		1673443	0					
ANR	1673499	CallExpression	createNewWorker ( )		1673443	1					
ANR	1673500	Callee	createNewWorker		1673443	0					
ANR	1673501	Identifier	createNewWorker		1673443	0					
ANR	1673502	ArgumentList			1673443	1					
ANR	1673503	ExpressionStatement	"addRequestToWorker ( new_req , worker )"	708:1:18128:18163	1673443	5	True				
ANR	1673504	CallExpression	"addRequestToWorker ( new_req , worker )"		1673443	0					
ANR	1673505	Callee	addRequestToWorker		1673443	0					
ANR	1673506	Identifier	addRequestToWorker		1673443	0					
ANR	1673507	ArgumentList	new_req		1673443	1					
ANR	1673508	Argument	new_req		1673443	0					
ANR	1673509	Identifier	new_req		1673443	0					
ANR	1673510	Argument	worker		1673443	1					
ANR	1673511	Identifier	worker		1673443	0					
ANR	1673512	ReturnStatement	return new_req ;	709:1:18166:18180	1673443	6	True				
ANR	1673513	Identifier	new_req		1673443	0					
ANR	1673514	ReturnType	Request *		1673443	1					
ANR	1673515	Identifier	IOProcess :: addNewRequest		1673443	2					
ANR	1673516	ParameterList	const char * cmd		1673443	3					
ANR	1673517	Parameter	const char * cmd	688:25:17774:17788	1673443	0	True				
ANR	1673518	ParameterType	const char *		1673443	0					
ANR	1673519	Identifier	cmd		1673443	1					
ANR	1673520	CFGEntryNode	ENTRY		1673443		True				
ANR	1673521	CFGExitNode	EXIT		1673443		True				
ANR	1673522	Symbol	NULL		1673443						
ANR	1673523	Symbol	createNewWorker		1673443						
ANR	1673524	Symbol	m_avail_workers_num		1673443						
ANR	1673525	Symbol	cmd		1673443						
ANR	1673526	Symbol	findFreeWorker		1673443						
ANR	1673527	Symbol	worker		1673443						
ANR	1673528	Symbol	m_max_workers		1673443						
ANR	1673529	Symbol	new_req		1673443						
ANR	1673530	Function	IOProcess :: addResult	712:0:18185:18637							
ANR	1673531	FunctionDef	IOProcess :: addResult (const char * result)		1673530	0					
ANR	1673532	CompoundStatement		714:0:18232:18637	1673530	0					
ANR	1673533	IfStatement	if ( ! result )		1673530	0					
ANR	1673534	Condition	! result	715:5:18239:18245	1673530	0	True				
ANR	1673535	UnaryOperationExpression	! result		1673530	0					
ANR	1673536	UnaryOperator	!		1673530	0					
ANR	1673537	Identifier	result		1673530	1					
ANR	1673538	CompoundStatement		2:15:16:16	1673530	1					
ANR	1673539	ReturnStatement	return ;	716:2:18253:18259	1673530	0	True				
ANR	1673540	ExpressionStatement	m_result_list . append ( result )	723:1:18372:18400	1673530	1	True				
ANR	1673541	CallExpression	m_result_list . append ( result )		1673530	0					
ANR	1673542	Callee	m_result_list . append		1673530	0					
ANR	1673543	MemberAccess	m_result_list . append		1673530	0					
ANR	1673544	Identifier	m_result_list		1673530	0					
ANR	1673545	Identifier	append		1673530	1					
ANR	1673546	ArgumentList	result		1673530	1					
ANR	1673547	Argument	result		1673530	0					
ANR	1673548	Identifier	result		1673530	0					
ANR	1673549	IfStatement	if ( m_async_mode )		1673530	2					
ANR	1673550	Condition	m_async_mode	725:5:18408:18419	1673530	0	True				
ANR	1673551	Identifier	m_async_mode		1673530	0					
ANR	1673552	CompoundStatement		12:19:189:189	1673530	1					
ANR	1673553	IfStatement	if ( ! m_new_results_signaled )		1673530	0					
ANR	1673554	Condition	! m_new_results_signaled	726:6:18430:18452	1673530	0	True				
ANR	1673555	UnaryOperationExpression	! m_new_results_signaled		1673530	0					
ANR	1673556	UnaryOperator	!		1673530	0					
ANR	1673557	Identifier	m_new_results_signaled		1673530	1					
ANR	1673558	CompoundStatement		13:31:222:222	1673530	1					
ANR	1673559	ExpressionStatement	"printf ( ""R\\n"" )"	727:3:18460:18474	1673530	0	True				
ANR	1673560	CallExpression	"printf ( ""R\\n"" )"		1673530	0					
ANR	1673561	Callee	printf		1673530	0					
ANR	1673562	Identifier	printf		1673530	0					
ANR	1673563	ArgumentList	"""R\\n"""		1673530	1					
ANR	1673564	Argument	"""R\\n"""		1673530	0					
ANR	1673565	PrimaryExpression	"""R\\n"""		1673530	0					
ANR	1673566	ExpressionStatement	fflush ( stdout )	728:3:18479:18494	1673530	1	True				
ANR	1673567	CallExpression	fflush ( stdout )		1673530	0					
ANR	1673568	Callee	fflush		1673530	0					
ANR	1673569	Identifier	fflush		1673530	0					
ANR	1673570	ArgumentList	stdout		1673530	1					
ANR	1673571	Argument	stdout		1673530	0					
ANR	1673572	Identifier	stdout		1673530	0					
ANR	1673573	ExpressionStatement	m_new_results_signaled = true	730:2:18502:18531	1673530	1	True				
ANR	1673574	AssignmentExpression	m_new_results_signaled = true		1673530	0		=			
ANR	1673575	Identifier	m_new_results_signaled		1673530	0					
ANR	1673576	Identifier	true		1673530	1					
ANR	1673577	ReturnType	void		1673530	1					
ANR	1673578	Identifier	IOProcess :: addResult		1673530	2					
ANR	1673579	ParameterList	const char * result		1673530	3					
ANR	1673580	Parameter	const char * result	713:21:18212:18229	1673530	0	True				
ANR	1673581	ParameterType	const char *		1673530	0					
ANR	1673582	Identifier	result		1673530	1					
ANR	1673583	CFGEntryNode	ENTRY		1673530		True				
ANR	1673584	CFGExitNode	EXIT		1673530		True				
ANR	1673585	Symbol	result		1673530						
ANR	1673586	Symbol	m_result_list		1673530						
ANR	1673587	Symbol	m_new_results_signaled		1673530						
ANR	1673588	Symbol	m_async_mode		1673530						
ANR	1673589	Symbol	stdout		1673530						
ANR	1673590	Symbol	true		1673530						
ANR	1673591	Function	IOProcess :: newWorkerId	737:0:18640:19449							
ANR	1673592	FunctionDef	IOProcess :: newWorkerId ()		1673591	0					
ANR	1673593	CompoundStatement		739:0:18674:19449	1673591	0					
ANR	1673594	IdentifierDeclStatement	Worker * unused = NULL ;	740:1:18677:18698	1673591	0	True				
ANR	1673595	IdentifierDecl	* unused = NULL		1673591	0					
ANR	1673596	IdentifierDeclType	Worker *		1673591	0					
ANR	1673597	Identifier	unused		1673591	1					
ANR	1673598	AssignmentExpression	* unused = NULL		1673591	2		=			
ANR	1673599	Identifier	NULL		1673591	0					
ANR	1673600	Identifier	NULL		1673591	1					
ANR	1673601	IdentifierDeclStatement	int starting_worker_id = m_next_worker_id ++ ;	741:1:18701:18744	1673591	1	True				
ANR	1673602	IdentifierDecl	starting_worker_id = m_next_worker_id ++		1673591	0					
ANR	1673603	IdentifierDeclType	int		1673591	0					
ANR	1673604	Identifier	starting_worker_id		1673591	1					
ANR	1673605	AssignmentExpression	starting_worker_id = m_next_worker_id ++		1673591	2		=			
ANR	1673606	Identifier	starting_worker_id		1673591	0					
ANR	1673607	PostIncDecOperationExpression	m_next_worker_id ++		1673591	1					
ANR	1673608	Identifier	m_next_worker_id		1673591	0					
ANR	1673609	IncDec	++		1673591	1					
ANR	1673610	WhileStatement	while ( starting_worker_id != m_next_worker_id )		1673591	2					
ANR	1673611	Condition	starting_worker_id != m_next_worker_id	743:8:18755:18792	1673591	0	True				
ANR	1673612	EqualityExpression	starting_worker_id != m_next_worker_id		1673591	0		!=			
ANR	1673613	Identifier	starting_worker_id		1673591	0					
ANR	1673614	Identifier	m_next_worker_id		1673591	1					
ANR	1673615	CompoundStatement		5:49:121:121	1673591	1					
ANR	1673616	IfStatement	if ( m_next_worker_id > 990000000 )		1673591	0					
ANR	1673617	Condition	m_next_worker_id > 990000000	744:6:18804:18831	1673591	0	True				
ANR	1673618	RelationalExpression	m_next_worker_id > 990000000		1673591	0		>			
ANR	1673619	Identifier	m_next_worker_id		1673591	0					
ANR	1673620	PrimaryExpression	990000000		1673591	1					
ANR	1673621	CompoundStatement		6:37:160:160	1673591	1					
ANR	1673622	ExpressionStatement	m_next_worker_id = 1	745:3:18840:18860	1673591	0	True				
ANR	1673623	AssignmentExpression	m_next_worker_id = 1		1673591	0		=			
ANR	1673624	Identifier	m_next_worker_id		1673591	0					
ANR	1673625	PrimaryExpression	1		1673591	1					
ANR	1673626	ExpressionStatement	m_rotated_worker_ids = true	746:3:18865:18892	1673591	1	True				
ANR	1673627	AssignmentExpression	m_rotated_worker_ids = true		1673591	0		=			
ANR	1673628	Identifier	m_rotated_worker_ids		1673591	0					
ANR	1673629	Identifier	true		1673591	1					
ANR	1673630	IfStatement	if ( ! m_rotated_worker_ids )		1673591	1					
ANR	1673631	Condition	! m_rotated_worker_ids	749:6:18905:18925	1673591	0	True				
ANR	1673632	UnaryOperationExpression	! m_rotated_worker_ids		1673591	0					
ANR	1673633	UnaryOperator	!		1673591	0					
ANR	1673634	Identifier	m_rotated_worker_ids		1673591	1					
ANR	1673635	CompoundStatement		11:30:254:254	1673591	1					
ANR	1673636	ReturnStatement	return m_next_worker_id ;	750:3:18934:18957	1673591	0	True				
ANR	1673637	Identifier	m_next_worker_id		1673591	0					
ANR	1673638	IfStatement	"if ( m_workers_list . lookup ( m_next_worker_id , unused ) == - 1 )"		1673591	2					
ANR	1673639	Condition	"m_workers_list . lookup ( m_next_worker_id , unused ) == - 1"	755:6:19072:19124	1673591	0	True				
ANR	1673640	EqualityExpression	"m_workers_list . lookup ( m_next_worker_id , unused ) == - 1"		1673591	0		==			
ANR	1673641	CallExpression	"m_workers_list . lookup ( m_next_worker_id , unused )"		1673591	0					
ANR	1673642	Callee	m_workers_list . lookup		1673591	0					
ANR	1673643	MemberAccess	m_workers_list . lookup		1673591	0					
ANR	1673644	Identifier	m_workers_list		1673591	0					
ANR	1673645	Identifier	lookup		1673591	1					
ANR	1673646	ArgumentList	m_next_worker_id		1673591	1					
ANR	1673647	Argument	m_next_worker_id		1673591	0					
ANR	1673648	Identifier	m_next_worker_id		1673591	0					
ANR	1673649	Argument	unused		1673591	1					
ANR	1673650	Identifier	unused		1673591	0					
ANR	1673651	UnaryOperationExpression	- 1		1673591	1					
ANR	1673652	UnaryOperator	-		1673591	0					
ANR	1673653	PrimaryExpression	1		1673591	1					
ANR	1673654	CompoundStatement		17:62:453:453	1673591	1					
ANR	1673655	ReturnStatement	return m_next_worker_id ;	758:3:19212:19235	1673591	0	True				
ANR	1673656	Identifier	m_next_worker_id		1673591	0					
ANR	1673657	ExpressionStatement	m_next_worker_id ++	762:2:19292:19310	1673591	3	True				
ANR	1673658	PostIncDecOperationExpression	m_next_worker_id ++		1673591	0					
ANR	1673659	Identifier	m_next_worker_id		1673591	0					
ANR	1673660	IncDec	++		1673591	1					
ANR	1673661	ExpressionStatement	"dprintf ( D_ALWAYS , ""Gahp Server Error - out of worker ids !!!?!?!?\\n"" )"	766:1:19366:19435	1673591	3	True				
ANR	1673662	CallExpression	"dprintf ( D_ALWAYS , ""Gahp Server Error - out of worker ids !!!?!?!?\\n"" )"		1673591	0					
ANR	1673663	Callee	dprintf		1673591	0					
ANR	1673664	Identifier	dprintf		1673591	0					
ANR	1673665	ArgumentList	D_ALWAYS		1673591	1					
ANR	1673666	Argument	D_ALWAYS		1673591	0					
ANR	1673667	Identifier	D_ALWAYS		1673591	0					
ANR	1673668	Argument	"""Gahp Server Error - out of worker ids !!!?!?!?\\n"""		1673591	1					
ANR	1673669	PrimaryExpression	"""Gahp Server Error - out of worker ids !!!?!?!?\\n"""		1673591	0					
ANR	1673670	ReturnStatement	return - 1 ;	767:1:19438:19447	1673591	4	True				
ANR	1673671	UnaryOperationExpression	- 1		1673591	0					
ANR	1673672	UnaryOperator	-		1673591	0					
ANR	1673673	PrimaryExpression	1		1673591	1					
ANR	1673674	ReturnType	int		1673591	1					
ANR	1673675	Identifier	IOProcess :: newWorkerId		1673591	2					
ANR	1673676	ParameterList			1673591	3					
ANR	1673677	CFGEntryNode	ENTRY		1673591		True				
ANR	1673678	CFGExitNode	EXIT		1673591		True				
ANR	1673679	Symbol	m_workers_list . lookup		1673591						
ANR	1673680	Symbol	m_rotated_worker_ids		1673591						
ANR	1673681	Symbol	NULL		1673591						
ANR	1673682	Symbol	m_next_worker_id		1673591						
ANR	1673683	Symbol	true		1673591						
ANR	1673684	Symbol	m_workers_list		1673591						
ANR	1673685	Symbol	D_ALWAYS		1673591						
ANR	1673686	Symbol	unused		1673591						
ANR	1673687	Symbol	starting_worker_id		1673591						
ANR	1673688	Function	IOProcess :: addRequestToWorker	770:0:19452:20304							
ANR	1673689	FunctionDef	"IOProcess :: addRequestToWorker (Request * request , Worker * worker)"		1673688	0					
ANR	1673690	CompoundStatement		772:0:19521:20304	1673688	0					
ANR	1673691	IfStatement	if ( ! request )		1673688	0					
ANR	1673692	Condition	! request	773:5:19528:19535	1673688	0	True				
ANR	1673693	UnaryOperationExpression	! request		1673688	0					
ANR	1673694	UnaryOperator	!		1673688	0					
ANR	1673695	Identifier	request		1673688	1					
ANR	1673696	CompoundStatement		2:16:17:17	1673688	1					
ANR	1673697	ReturnStatement	return ;	774:2:19543:19549	1673688	0	True				
ANR	1673698	IfStatement	if ( worker )		1673688	1					
ANR	1673699	Condition	worker	777:5:19560:19565	1673688	0	True				
ANR	1673700	Identifier	worker		1673688	0					
ANR	1673701	CompoundStatement		6:14:47:47	1673688	1					
ANR	1673702	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Sending %s to worker %d\\n"" , request -> m_raw_cmd . c_str ( ) , worker -> m_id )"	778:2:19574:19671	1673688	0	True				
ANR	1673703	CallExpression	"dprintf ( D_FULLDEBUG , ""Sending %s to worker %d\\n"" , request -> m_raw_cmd . c_str ( ) , worker -> m_id )"		1673688	0					
ANR	1673704	Callee	dprintf		1673688	0					
ANR	1673705	Identifier	dprintf		1673688	0					
ANR	1673706	ArgumentList	D_FULLDEBUG		1673688	1					
ANR	1673707	Argument	D_FULLDEBUG		1673688	0					
ANR	1673708	Identifier	D_FULLDEBUG		1673688	0					
ANR	1673709	Argument	"""Sending %s to worker %d\\n"""		1673688	1					
ANR	1673710	PrimaryExpression	"""Sending %s to worker %d\\n"""		1673688	0					
ANR	1673711	Argument	request -> m_raw_cmd . c_str ( )		1673688	2					
ANR	1673712	CallExpression	request -> m_raw_cmd . c_str ( )		1673688	0					
ANR	1673713	Callee	request -> m_raw_cmd . c_str		1673688	0					
ANR	1673714	MemberAccess	request -> m_raw_cmd . c_str		1673688	0					
ANR	1673715	PtrMemberAccess	request -> m_raw_cmd		1673688	0					
ANR	1673716	Identifier	request		1673688	0					
ANR	1673717	Identifier	m_raw_cmd		1673688	1					
ANR	1673718	Identifier	c_str		1673688	1					
ANR	1673719	ArgumentList			1673688	1					
ANR	1673720	Argument	worker -> m_id		1673688	3					
ANR	1673721	PtrMemberAccess	worker -> m_id		1673688	0					
ANR	1673722	Identifier	worker		1673688	0					
ANR	1673723	Identifier	m_id		1673688	1					
ANR	1673724	ExpressionStatement	request -> m_worker = worker	783:2:19719:19745	1673688	1	True				
ANR	1673725	AssignmentExpression	request -> m_worker = worker		1673688	0		=			
ANR	1673726	PtrMemberAccess	request -> m_worker		1673688	0					
ANR	1673727	Identifier	request		1673688	0					
ANR	1673728	Identifier	m_worker		1673688	1					
ANR	1673729	Identifier	worker		1673688	1					
ANR	1673730	ExpressionStatement	worker -> m_request_list . Append ( request )	784:2:19749:19787	1673688	2	True				
ANR	1673731	CallExpression	worker -> m_request_list . Append ( request )		1673688	0					
ANR	1673732	Callee	worker -> m_request_list . Append		1673688	0					
ANR	1673733	MemberAccess	worker -> m_request_list . Append		1673688	0					
ANR	1673734	PtrMemberAccess	worker -> m_request_list		1673688	0					
ANR	1673735	Identifier	worker		1673688	0					
ANR	1673736	Identifier	m_request_list		1673688	1					
ANR	1673737	Identifier	Append		1673688	1					
ANR	1673738	ArgumentList	request		1673688	1					
ANR	1673739	Argument	request		1673688	0					
ANR	1673740	Identifier	request		1673688	0					
ANR	1673741	ExpressionStatement	worker -> m_is_doing = true	785:2:19791:19816	1673688	3	True				
ANR	1673742	AssignmentExpression	worker -> m_is_doing = true		1673688	0		=			
ANR	1673743	PtrMemberAccess	worker -> m_is_doing		1673688	0					
ANR	1673744	Identifier	worker		1673688	0					
ANR	1673745	Identifier	m_is_doing		1673688	1					
ANR	1673746	Identifier	true		1673688	1					
ANR	1673747	IfStatement	if ( worker -> m_is_waiting )		1673688	4					
ANR	1673748	Condition	worker -> m_is_waiting	787:6:19825:19844	1673688	0	True				
ANR	1673749	PtrMemberAccess	worker -> m_is_waiting		1673688	0					
ANR	1673750	Identifier	worker		1673688	0					
ANR	1673751	Identifier	m_is_waiting		1673688	1					
ANR	1673752	CompoundStatement		16:29:326:326	1673688	1					
ANR	1673753	ExpressionStatement	pthread_cond_signal ( & worker -> m_cond )	788:3:19853:19889	1673688	0	True				
ANR	1673754	CallExpression	pthread_cond_signal ( & worker -> m_cond )		1673688	0					
ANR	1673755	Callee	pthread_cond_signal		1673688	0					
ANR	1673756	Identifier	pthread_cond_signal		1673688	0					
ANR	1673757	ArgumentList	& worker -> m_cond		1673688	1					
ANR	1673758	Argument	& worker -> m_cond		1673688	0					
ANR	1673759	UnaryOperationExpression	& worker -> m_cond		1673688	0					
ANR	1673760	UnaryOperator	&		1673688	0					
ANR	1673761	PtrMemberAccess	worker -> m_cond		1673688	1					
ANR	1673762	Identifier	worker		1673688	0					
ANR	1673763	Identifier	m_cond		1673688	1					
ANR	1673764	ElseStatement	else		1673688	0					
ANR	1673765	CompoundStatement		21:7:425:425	1673688	0					
ANR	1673766	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Appending %s to global pending request list\\n"" , request -> m_raw_cmd . c_str ( ) )"	795:2:20053:20156	1673688	0	True				
ANR	1673767	CallExpression	"dprintf ( D_FULLDEBUG , ""Appending %s to global pending request list\\n"" , request -> m_raw_cmd . c_str ( ) )"		1673688	0					
ANR	1673768	Callee	dprintf		1673688	0					
ANR	1673769	Identifier	dprintf		1673688	0					
ANR	1673770	ArgumentList	D_FULLDEBUG		1673688	1					
ANR	1673771	Argument	D_FULLDEBUG		1673688	0					
ANR	1673772	Identifier	D_FULLDEBUG		1673688	0					
ANR	1673773	Argument	"""Appending %s to global pending request list\\n"""		1673688	1					
ANR	1673774	PrimaryExpression	"""Appending %s to global pending request list\\n"""		1673688	0					
ANR	1673775	Argument	request -> m_raw_cmd . c_str ( )		1673688	2					
ANR	1673776	CallExpression	request -> m_raw_cmd . c_str ( )		1673688	0					
ANR	1673777	Callee	request -> m_raw_cmd . c_str		1673688	0					
ANR	1673778	MemberAccess	request -> m_raw_cmd . c_str		1673688	0					
ANR	1673779	PtrMemberAccess	request -> m_raw_cmd		1673688	0					
ANR	1673780	Identifier	request		1673688	0					
ANR	1673781	Identifier	m_raw_cmd		1673688	1					
ANR	1673782	Identifier	c_str		1673688	1					
ANR	1673783	ArgumentList			1673688	1					
ANR	1673784	ExpressionStatement	m_pending_req_list . Append ( request )	799:2:20212:20246	1673688	1	True				
ANR	1673785	CallExpression	m_pending_req_list . Append ( request )		1673688	0					
ANR	1673786	Callee	m_pending_req_list . Append		1673688	0					
ANR	1673787	MemberAccess	m_pending_req_list . Append		1673688	0					
ANR	1673788	Identifier	m_pending_req_list		1673688	0					
ANR	1673789	Identifier	Append		1673688	1					
ANR	1673790	ArgumentList	request		1673688	1					
ANR	1673791	Argument	request		1673688	0					
ANR	1673792	Identifier	request		1673688	0					
ANR	1673793	ReturnType	void		1673688	1					
ANR	1673794	Identifier	IOProcess :: addRequestToWorker		1673688	2					
ANR	1673795	ParameterList	"Request * request , Worker * worker"		1673688	3					
ANR	1673796	Parameter	Request * request	771:30:19487:19502	1673688	0	True				
ANR	1673797	ParameterType	Request *		1673688	0					
ANR	1673798	Identifier	request		1673688	1					
ANR	1673799	Parameter	Worker * worker	771:48:19505:19518	1673688	1	True				
ANR	1673800	ParameterType	Worker *		1673688	0					
ANR	1673801	Identifier	worker		1673688	1					
ANR	1673802	CFGEntryNode	ENTRY		1673688		True				
ANR	1673803	CFGExitNode	EXIT		1673688		True				
ANR	1673804	Symbol	request -> m_raw_cmd		1673688						
ANR	1673805	Symbol	request		1673688						
ANR	1673806	Symbol	& worker -> m_cond		1673688						
ANR	1673807	Symbol	worker -> m_is_waiting		1673688						
ANR	1673808	Symbol	D_FULLDEBUG		1673688						
ANR	1673809	Symbol	m_pending_req_list		1673688						
ANR	1673810	Symbol	worker -> m_request_list		1673688						
ANR	1673811	Symbol	request -> m_raw_cmd . c_str		1673688						
ANR	1673812	Symbol	* worker		1673688						
ANR	1673813	Symbol	worker -> m_id		1673688						
ANR	1673814	Symbol	worker -> m_is_doing		1673688						
ANR	1673815	Symbol	* request		1673688						
ANR	1673816	Symbol	request -> m_worker		1673688						
ANR	1673817	Symbol	true		1673688						
ANR	1673818	Symbol	worker		1673688						
ANR	1673819	Function	IOProcess :: numOfPendingRequest	804:0:20307:20517							
ANR	1673820	FunctionDef	IOProcess :: numOfPendingRequest ()		1673819	0					
ANR	1673821	CompoundStatement		806:0:20349:20517	1673819	0					
ANR	1673822	IdentifierDeclStatement	int num = 0 ;	807:1:20352:20363	1673819	0	True				
ANR	1673823	IdentifierDecl	num = 0		1673819	0					
ANR	1673824	IdentifierDeclType	int		1673819	0					
ANR	1673825	Identifier	num		1673819	1					
ANR	1673826	AssignmentExpression	num = 0		1673819	2		=			
ANR	1673827	Identifier	num		1673819	0					
ANR	1673828	PrimaryExpression	0		1673819	1					
ANR	1673829	ExpressionStatement	num = m_pending_req_list . Number ( )	809:1:20416:20449	1673819	1	True				
ANR	1673830	AssignmentExpression	num = m_pending_req_list . Number ( )		1673819	0		=			
ANR	1673831	Identifier	num		1673819	0					
ANR	1673832	CallExpression	m_pending_req_list . Number ( )		1673819	1					
ANR	1673833	Callee	m_pending_req_list . Number		1673819	0					
ANR	1673834	MemberAccess	m_pending_req_list . Number		1673819	0					
ANR	1673835	Identifier	m_pending_req_list		1673819	0					
ANR	1673836	Identifier	Number		1673819	1					
ANR	1673837	ArgumentList			1673819	1					
ANR	1673838	ReturnStatement	return num ;	812:1:20505:20515	1673819	2	True				
ANR	1673839	Identifier	num		1673819	0					
ANR	1673840	ReturnType	int		1673819	1					
ANR	1673841	Identifier	IOProcess :: numOfPendingRequest		1673819	2					
ANR	1673842	ParameterList			1673819	3					
ANR	1673843	CFGEntryNode	ENTRY		1673819		True				
ANR	1673844	CFGExitNode	EXIT		1673819		True				
ANR	1673845	Symbol	m_pending_req_list . Number		1673819						
ANR	1673846	Symbol	num		1673819						
ANR	1673847	Symbol	m_pending_req_list		1673819						
ANR	1673848	Function	IOProcess :: popPendingRequest	815:0:20520:20853							
ANR	1673849	FunctionDef	IOProcess :: popPendingRequest ()		1673848	0					
ANR	1673850	CompoundStatement		817:0:20565:20853	1673848	0					
ANR	1673851	IdentifierDeclStatement	Request * new_request = NULL ;	818:1:20568:20595	1673848	0	True				
ANR	1673852	IdentifierDecl	* new_request = NULL		1673848	0					
ANR	1673853	IdentifierDeclType	Request *		1673848	0					
ANR	1673854	Identifier	new_request		1673848	1					
ANR	1673855	AssignmentExpression	* new_request = NULL		1673848	2		=			
ANR	1673856	Identifier	NULL		1673848	0					
ANR	1673857	Identifier	NULL		1673848	1					
ANR	1673858	ExpressionStatement	m_pending_req_list . Rewind ( )	821:1:20649:20676	1673848	1	True				
ANR	1673859	CallExpression	m_pending_req_list . Rewind ( )		1673848	0					
ANR	1673860	Callee	m_pending_req_list . Rewind		1673848	0					
ANR	1673861	MemberAccess	m_pending_req_list . Rewind		1673848	0					
ANR	1673862	Identifier	m_pending_req_list		1673848	0					
ANR	1673863	Identifier	Rewind		1673848	1					
ANR	1673864	ArgumentList			1673848	1					
ANR	1673865	ExpressionStatement	m_pending_req_list . Next ( new_request )	822:1:20679:20715	1673848	2	True				
ANR	1673866	CallExpression	m_pending_req_list . Next ( new_request )		1673848	0					
ANR	1673867	Callee	m_pending_req_list . Next		1673848	0					
ANR	1673868	MemberAccess	m_pending_req_list . Next		1673848	0					
ANR	1673869	Identifier	m_pending_req_list		1673848	0					
ANR	1673870	Identifier	Next		1673848	1					
ANR	1673871	ArgumentList	new_request		1673848	1					
ANR	1673872	Argument	new_request		1673848	0					
ANR	1673873	Identifier	new_request		1673848	0					
ANR	1673874	IfStatement	if ( new_request )		1673848	3					
ANR	1673875	Condition	new_request	823:5:20722:20732	1673848	0	True				
ANR	1673876	Identifier	new_request		1673848	0					
ANR	1673877	CompoundStatement		7:19:170:170	1673848	1					
ANR	1673878	ExpressionStatement	m_pending_req_list . DeleteCurrent ( )	824:2:20740:20774	1673848	0	True				
ANR	1673879	CallExpression	m_pending_req_list . DeleteCurrent ( )		1673848	0					
ANR	1673880	Callee	m_pending_req_list . DeleteCurrent		1673848	0					
ANR	1673881	MemberAccess	m_pending_req_list . DeleteCurrent		1673848	0					
ANR	1673882	Identifier	m_pending_req_list		1673848	0					
ANR	1673883	Identifier	DeleteCurrent		1673848	1					
ANR	1673884	ArgumentList			1673848	1					
ANR	1673885	ReturnStatement	return new_request ;	828:1:20833:20851	1673848	4	True				
ANR	1673886	Identifier	new_request		1673848	0					
ANR	1673887	ReturnType	Request *		1673848	1					
ANR	1673888	Identifier	IOProcess :: popPendingRequest		1673848	2					
ANR	1673889	ParameterList			1673848	3					
ANR	1673890	CFGEntryNode	ENTRY		1673848		True				
ANR	1673891	CFGExitNode	EXIT		1673848		True				
ANR	1673892	Symbol	NULL		1673848						
ANR	1673893	Symbol	m_pending_req_list		1673848						
ANR	1673894	Symbol	new_request		1673848						
ANR	1673895	Function	popRequest	831:0:20856:21436							
ANR	1673896	FunctionDef	popRequest (Worker * worker)		1673895	0					
ANR	1673897	CompoundStatement		832:0:20892:21436	1673895	0					
ANR	1673898	IdentifierDeclStatement	Request * new_request = NULL ;	833:1:20895:20922	1673895	0	True				
ANR	1673899	IdentifierDecl	* new_request = NULL		1673895	0					
ANR	1673900	IdentifierDeclType	Request *		1673895	0					
ANR	1673901	Identifier	new_request		1673895	1					
ANR	1673902	AssignmentExpression	* new_request = NULL		1673895	2		=			
ANR	1673903	Identifier	NULL		1673895	0					
ANR	1673904	Identifier	NULL		1673895	1					
ANR	1673905	IfStatement	if ( ! worker )		1673895	1					
ANR	1673906	Condition	! worker	834:5:20929:20935	1673895	0	True				
ANR	1673907	UnaryOperationExpression	! worker		1673895	0					
ANR	1673908	UnaryOperator	!		1673895	0					
ANR	1673909	Identifier	worker		1673895	1					
ANR	1673910	CompoundStatement		3:15:46:46	1673895	1					
ANR	1673911	ReturnStatement	return NULL ;	835:2:20943:20954	1673895	0	True				
ANR	1673912	Identifier	NULL		1673895	0					
ANR	1673913	ExpressionStatement	worker -> m_request_list . Rewind ( )	838:1:20961:20992	1673895	2	True				
ANR	1673914	CallExpression	worker -> m_request_list . Rewind ( )		1673895	0					
ANR	1673915	Callee	worker -> m_request_list . Rewind		1673895	0					
ANR	1673916	MemberAccess	worker -> m_request_list . Rewind		1673895	0					
ANR	1673917	PtrMemberAccess	worker -> m_request_list		1673895	0					
ANR	1673918	Identifier	worker		1673895	0					
ANR	1673919	Identifier	m_request_list		1673895	1					
ANR	1673920	Identifier	Rewind		1673895	1					
ANR	1673921	ArgumentList			1673895	1					
ANR	1673922	ExpressionStatement	worker -> m_request_list . Next ( new_request )	839:1:20995:21035	1673895	3	True				
ANR	1673923	CallExpression	worker -> m_request_list . Next ( new_request )		1673895	0					
ANR	1673924	Callee	worker -> m_request_list . Next		1673895	0					
ANR	1673925	MemberAccess	worker -> m_request_list . Next		1673895	0					
ANR	1673926	PtrMemberAccess	worker -> m_request_list		1673895	0					
ANR	1673927	Identifier	worker		1673895	0					
ANR	1673928	Identifier	m_request_list		1673895	1					
ANR	1673929	Identifier	Next		1673895	1					
ANR	1673930	ArgumentList	new_request		1673895	1					
ANR	1673931	Argument	new_request		1673895	0					
ANR	1673932	Identifier	new_request		1673895	0					
ANR	1673933	IfStatement	if ( new_request )		1673895	4					
ANR	1673934	Condition	new_request	841:5:21043:21053	1673895	0	True				
ANR	1673935	Identifier	new_request		1673895	0					
ANR	1673936	CompoundStatement		10:19:164:164	1673895	1					
ANR	1673937	ExpressionStatement	worker -> m_request_list . DeleteCurrent ( )	843:2:21112:21150	1673895	0	True				
ANR	1673938	CallExpression	worker -> m_request_list . DeleteCurrent ( )		1673895	0					
ANR	1673939	Callee	worker -> m_request_list . DeleteCurrent		1673895	0					
ANR	1673940	MemberAccess	worker -> m_request_list . DeleteCurrent		1673895	0					
ANR	1673941	PtrMemberAccess	worker -> m_request_list		1673895	0					
ANR	1673942	Identifier	worker		1673895	0					
ANR	1673943	Identifier	m_request_list		1673895	1					
ANR	1673944	Identifier	DeleteCurrent		1673895	1					
ANR	1673945	ArgumentList			1673895	1					
ANR	1673946	ElseStatement	else		1673895	0					
ANR	1673947	CompoundStatement		13:7:266:266	1673895	0					
ANR	1673948	IfStatement	if ( ioprocess )		1673895	0					
ANR	1673949	Condition	ioprocess	845:6:21167:21175	1673895	0	True				
ANR	1673950	Identifier	ioprocess		1673895	0					
ANR	1673951	CompoundStatement		14:18:286:286	1673895	1					
ANR	1673952	ExpressionStatement	new_request = ioprocess -> popPendingRequest ( )	846:3:21184:21228	1673895	0	True				
ANR	1673953	AssignmentExpression	new_request = ioprocess -> popPendingRequest ( )		1673895	0		=			
ANR	1673954	Identifier	new_request		1673895	0					
ANR	1673955	CallExpression	ioprocess -> popPendingRequest ( )		1673895	1					
ANR	1673956	Callee	ioprocess -> popPendingRequest		1673895	0					
ANR	1673957	PtrMemberAccess	ioprocess -> popPendingRequest		1673895	0					
ANR	1673958	Identifier	ioprocess		1673895	0					
ANR	1673959	Identifier	popPendingRequest		1673895	1					
ANR	1673960	ArgumentList			1673895	1					
ANR	1673961	IfStatement	if ( new_request )		1673895	1					
ANR	1673962	Condition	new_request	848:7:21238:21248	1673895	0	True				
ANR	1673963	Identifier	new_request		1673895	0					
ANR	1673964	CompoundStatement		17:21:359:359	1673895	1					
ANR	1673965	ExpressionStatement	new_request -> m_worker = worker	849:4:21258:21288	1673895	0	True				
ANR	1673966	AssignmentExpression	new_request -> m_worker = worker		1673895	0		=			
ANR	1673967	PtrMemberAccess	new_request -> m_worker		1673895	0					
ANR	1673968	Identifier	new_request		1673895	0					
ANR	1673969	Identifier	m_worker		1673895	1					
ANR	1673970	Identifier	worker		1673895	1					
ANR	1673971	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Assigning %s to worker %d\\n"" , new_request -> m_raw_cmd . c_str ( ) , worker -> m_id )"	851:4:21295:21400	1673895	1	True				
ANR	1673972	CallExpression	"dprintf ( D_FULLDEBUG , ""Assigning %s to worker %d\\n"" , new_request -> m_raw_cmd . c_str ( ) , worker -> m_id )"		1673895	0					
ANR	1673973	Callee	dprintf		1673895	0					
ANR	1673974	Identifier	dprintf		1673895	0					
ANR	1673975	ArgumentList	D_FULLDEBUG		1673895	1					
ANR	1673976	Argument	D_FULLDEBUG		1673895	0					
ANR	1673977	Identifier	D_FULLDEBUG		1673895	0					
ANR	1673978	Argument	"""Assigning %s to worker %d\\n"""		1673895	1					
ANR	1673979	PrimaryExpression	"""Assigning %s to worker %d\\n"""		1673895	0					
ANR	1673980	Argument	new_request -> m_raw_cmd . c_str ( )		1673895	2					
ANR	1673981	CallExpression	new_request -> m_raw_cmd . c_str ( )		1673895	0					
ANR	1673982	Callee	new_request -> m_raw_cmd . c_str		1673895	0					
ANR	1673983	MemberAccess	new_request -> m_raw_cmd . c_str		1673895	0					
ANR	1673984	PtrMemberAccess	new_request -> m_raw_cmd		1673895	0					
ANR	1673985	Identifier	new_request		1673895	0					
ANR	1673986	Identifier	m_raw_cmd		1673895	1					
ANR	1673987	Identifier	c_str		1673895	1					
ANR	1673988	ArgumentList			1673895	1					
ANR	1673989	Argument	worker -> m_id		1673895	3					
ANR	1673990	PtrMemberAccess	worker -> m_id		1673895	0					
ANR	1673991	Identifier	worker		1673895	0					
ANR	1673992	Identifier	m_id		1673895	1					
ANR	1673993	ReturnStatement	return new_request ;	857:1:21416:21434	1673895	5	True				
ANR	1673994	Identifier	new_request		1673895	0					
ANR	1673995	ReturnType	Request *		1673895	1					
ANR	1673996	Identifier	popRequest		1673895	2					
ANR	1673997	ParameterList	Worker * worker		1673895	3					
ANR	1673998	Parameter	Worker * worker	831:20:20876:20889	1673895	0	True				
ANR	1673999	ParameterType	Worker *		1673895	0					
ANR	1674000	Identifier	worker		1673895	1					
ANR	1674001	CFGEntryNode	ENTRY		1673895		True				
ANR	1674002	CFGExitNode	EXIT		1673895		True				
ANR	1674003	Symbol	new_request -> m_raw_cmd . c_str		1673895						
ANR	1674004	Symbol	NULL		1673895						
ANR	1674005	Symbol	ioprocess -> popPendingRequest		1673895						
ANR	1674006	Symbol	* ioprocess		1673895						
ANR	1674007	Symbol	ioprocess		1673895						
ANR	1674008	Symbol	D_FULLDEBUG		1673895						
ANR	1674009	Symbol	worker -> m_request_list		1673895						
ANR	1674010	Symbol	new_request -> m_raw_cmd		1673895						
ANR	1674011	Symbol	* worker		1673895						
ANR	1674012	Symbol	worker -> m_id		1673895						
ANR	1674013	Symbol	* new_request		1673895						
ANR	1674014	Symbol	worker		1673895						
ANR	1674015	Symbol	new_request		1673895						
ANR	1674016	Symbol	new_request -> m_worker		1673895						
ANR	1674017	Function	enqueue_result	860:0:21439:21615							
ANR	1674018	FunctionDef	enqueue_result (Request * request)		1674017	0					
ANR	1674019	CompoundStatement		862:0:21484:21615	1674017	0					
ANR	1674020	IfStatement	if ( ! request || request -> m_result . empty ( ) || ! ioprocess )		1674017	0					
ANR	1674021	Condition	! request || request -> m_result . empty ( ) || ! ioprocess	863:5:21491:21545	1674017	0	True				
ANR	1674022	OrExpression	! request || request -> m_result . empty ( ) || ! ioprocess		1674017	0		||			
ANR	1674023	UnaryOperationExpression	! request		1674017	0					
ANR	1674024	UnaryOperator	!		1674017	0					
ANR	1674025	Identifier	request		1674017	1					
ANR	1674026	OrExpression	request -> m_result . empty ( ) || ! ioprocess		1674017	1		||			
ANR	1674027	CallExpression	request -> m_result . empty ( )		1674017	0					
ANR	1674028	Callee	request -> m_result . empty		1674017	0					
ANR	1674029	MemberAccess	request -> m_result . empty		1674017	0					
ANR	1674030	PtrMemberAccess	request -> m_result		1674017	0					
ANR	1674031	Identifier	request		1674017	0					
ANR	1674032	Identifier	m_result		1674017	1					
ANR	1674033	Identifier	empty		1674017	1					
ANR	1674034	ArgumentList			1674017	1					
ANR	1674035	UnaryOperationExpression	! ioprocess		1674017	1					
ANR	1674036	UnaryOperator	!		1674017	0					
ANR	1674037	Identifier	ioprocess		1674017	1					
ANR	1674038	CompoundStatement		3:19:64:64	1674017	1					
ANR	1674039	ReturnStatement	return ;	865:2:21553:21559	1674017	0	True				
ANR	1674040	ExpressionStatement	ioprocess -> addResult ( request -> m_result . c_str ( ) )	868:1:21566:21613	1674017	1	True				
ANR	1674041	CallExpression	ioprocess -> addResult ( request -> m_result . c_str ( ) )		1674017	0					
ANR	1674042	Callee	ioprocess -> addResult		1674017	0					
ANR	1674043	PtrMemberAccess	ioprocess -> addResult		1674017	0					
ANR	1674044	Identifier	ioprocess		1674017	0					
ANR	1674045	Identifier	addResult		1674017	1					
ANR	1674046	ArgumentList	request -> m_result . c_str ( )		1674017	1					
ANR	1674047	Argument	request -> m_result . c_str ( )		1674017	0					
ANR	1674048	CallExpression	request -> m_result . c_str ( )		1674017	0					
ANR	1674049	Callee	request -> m_result . c_str		1674017	0					
ANR	1674050	MemberAccess	request -> m_result . c_str		1674017	0					
ANR	1674051	PtrMemberAccess	request -> m_result		1674017	0					
ANR	1674052	Identifier	request		1674017	0					
ANR	1674053	Identifier	m_result		1674017	1					
ANR	1674054	Identifier	c_str		1674017	1					
ANR	1674055	ArgumentList			1674017	1					
ANR	1674056	ReturnType	static void		1674017	1					
ANR	1674057	Identifier	enqueue_result		1674017	2					
ANR	1674058	ParameterList	Request * request		1674017	3					
ANR	1674059	Parameter	Request * request	861:15:21466:21481	1674017	0	True				
ANR	1674060	ParameterType	Request *		1674017	0					
ANR	1674061	Identifier	request		1674017	1					
ANR	1674062	CFGEntryNode	ENTRY		1674017		True				
ANR	1674063	CFGExitNode	EXIT		1674017		True				
ANR	1674064	Symbol	request		1674017						
ANR	1674065	Symbol	* request		1674017						
ANR	1674066	Symbol	ioprocess		1674017						
ANR	1674067	Symbol	request -> m_result . empty		1674017						
ANR	1674068	Symbol	request -> m_result		1674017						
ANR	1674069	Symbol	request -> m_result . c_str		1674017						
ANR	1674070	Function	handle_gahp_command	871:0:21618:22160							
ANR	1674071	FunctionDef	handle_gahp_command (Request * request)		1674070	0					
ANR	1674072	CompoundStatement		873:0:21668:22160	1674070	0					
ANR	1674073	IfStatement	if ( ! request )		1674070	0					
ANR	1674074	Condition	! request	874:5:21675:21682	1674070	0	True				
ANR	1674075	UnaryOperationExpression	! request		1674070	0					
ANR	1674076	UnaryOperator	!		1674070	0					
ANR	1674077	Identifier	request		1674070	1					
ANR	1674078	CompoundStatement		2:16:17:17	1674070	1					
ANR	1674079	ReturnStatement	return false ;	875:2:21690:21702	1674070	0	True				
ANR	1674080	Identifier	false		1674070	0					
ANR	1674081	IdentifierDeclStatement	char * * argv = request -> m_args . argv ;	877:1:21708:21743	1674070	1	True				
ANR	1674082	IdentifierDecl	* * argv = request -> m_args . argv		1674070	0					
ANR	1674083	IdentifierDeclType	char * *		1674070	0					
ANR	1674084	Identifier	argv		1674070	1					
ANR	1674085	AssignmentExpression	* * argv = request -> m_args . argv		1674070	2		=			
ANR	1674086	Identifier	argv		1674070	0					
ANR	1674087	MemberAccess	request -> m_args . argv		1674070	1					
ANR	1674088	PtrMemberAccess	request -> m_args		1674070	0					
ANR	1674089	Identifier	request		1674070	0					
ANR	1674090	Identifier	m_args		1674070	1					
ANR	1674091	Identifier	argv		1674070	1					
ANR	1674092	IdentifierDeclStatement	int argc = request -> m_args . argc ;	878:1:21746:21777	1674070	2	True				
ANR	1674093	IdentifierDecl	argc = request -> m_args . argc		1674070	0					
ANR	1674094	IdentifierDeclType	int		1674070	0					
ANR	1674095	Identifier	argc		1674070	1					
ANR	1674096	AssignmentExpression	argc = request -> m_args . argc		1674070	2		=			
ANR	1674097	Identifier	argc		1674070	0					
ANR	1674098	MemberAccess	request -> m_args . argc		1674070	1					
ANR	1674099	PtrMemberAccess	request -> m_args		1674070	0					
ANR	1674100	Identifier	request		1674070	0					
ANR	1674101	Identifier	m_args		1674070	1					
ANR	1674102	Identifier	argc		1674070	1					
ANR	1674103	IfStatement	if ( argc < 2 )		1674070	3					
ANR	1674104	Condition	argc < 2	881:5:21815:21822	1674070	0	True				
ANR	1674105	RelationalExpression	argc < 2		1674070	0		<			
ANR	1674106	Identifier	argc		1674070	0					
ANR	1674107	PrimaryExpression	2		1674070	1					
ANR	1674108	CompoundStatement		9:16:157:157	1674070	1					
ANR	1674109	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid request\\n"" )"	882:2:21830:21869	1674070	0	True				
ANR	1674110	CallExpression	"dprintf ( D_ALWAYS , ""Invalid request\\n"" )"		1674070	0					
ANR	1674111	Callee	dprintf		1674070	0					
ANR	1674112	Identifier	dprintf		1674070	0					
ANR	1674113	ArgumentList	D_ALWAYS		1674070	1					
ANR	1674114	Argument	D_ALWAYS		1674070	0					
ANR	1674115	Identifier	D_ALWAYS		1674070	0					
ANR	1674116	Argument	"""Invalid request\\n"""		1674070	1					
ANR	1674117	PrimaryExpression	"""Invalid request\\n"""		1674070	0					
ANR	1674118	ReturnStatement	return false ;	883:2:21873:21885	1674070	1	True				
ANR	1674119	Identifier	false		1674070	0					
ANR	1674120	IfStatement	if ( ! verify_request_id ( argv [ 1 ] ) )		1674070	4					
ANR	1674121	Condition	! verify_request_id ( argv [ 1 ] )	886:5:21896:21922	1674070	0	True				
ANR	1674122	UnaryOperationExpression	! verify_request_id ( argv [ 1 ] )		1674070	0					
ANR	1674123	UnaryOperator	!		1674070	0					
ANR	1674124	CallExpression	verify_request_id ( argv [ 1 ] )		1674070	1					
ANR	1674125	Callee	verify_request_id		1674070	0					
ANR	1674126	Identifier	verify_request_id		1674070	0					
ANR	1674127	ArgumentList	argv [ 1 ]		1674070	1					
ANR	1674128	Argument	argv [ 1 ]		1674070	0					
ANR	1674129	ArrayIndexing	argv [ 1 ]		1674070	0					
ANR	1674130	Identifier	argv		1674070	0					
ANR	1674131	PrimaryExpression	1		1674070	1					
ANR	1674132	CompoundStatement		14:35:257:257	1674070	1					
ANR	1674133	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid request ID\\n"" )"	887:2:21930:21972	1674070	0	True				
ANR	1674134	CallExpression	"dprintf ( D_ALWAYS , ""Invalid request ID\\n"" )"		1674070	0					
ANR	1674135	Callee	dprintf		1674070	0					
ANR	1674136	Identifier	dprintf		1674070	0					
ANR	1674137	ArgumentList	D_ALWAYS		1674070	1					
ANR	1674138	Argument	D_ALWAYS		1674070	0					
ANR	1674139	Identifier	D_ALWAYS		1674070	0					
ANR	1674140	Argument	"""Invalid request ID\\n"""		1674070	1					
ANR	1674141	PrimaryExpression	"""Invalid request ID\\n"""		1674070	0					
ANR	1674142	ReturnStatement	return false ;	888:2:21976:21988	1674070	1	True				
ANR	1674143	Identifier	false		1674070	0					
ANR	1674144	IdentifierDeclStatement	"bool result = executeWorkerFunc ( argv [ 0 ] , argv , argc , request -> m_result ) ;"	891:1:21995:22066	1674070	5	True				
ANR	1674145	IdentifierDecl	"result = executeWorkerFunc ( argv [ 0 ] , argv , argc , request -> m_result )"		1674070	0					
ANR	1674146	IdentifierDeclType	bool		1674070	0					
ANR	1674147	Identifier	result		1674070	1					
ANR	1674148	AssignmentExpression	"result = executeWorkerFunc ( argv [ 0 ] , argv , argc , request -> m_result )"		1674070	2		=			
ANR	1674149	Identifier	result		1674070	0					
ANR	1674150	CallExpression	"executeWorkerFunc ( argv [ 0 ] , argv , argc , request -> m_result )"		1674070	1					
ANR	1674151	Callee	executeWorkerFunc		1674070	0					
ANR	1674152	Identifier	executeWorkerFunc		1674070	0					
ANR	1674153	ArgumentList	argv [ 0 ]		1674070	1					
ANR	1674154	Argument	argv [ 0 ]		1674070	0					
ANR	1674155	ArrayIndexing	argv [ 0 ]		1674070	0					
ANR	1674156	Identifier	argv		1674070	0					
ANR	1674157	PrimaryExpression	0		1674070	1					
ANR	1674158	Argument	argv		1674070	1					
ANR	1674159	Identifier	argv		1674070	0					
ANR	1674160	Argument	argc		1674070	2					
ANR	1674161	Identifier	argc		1674070	0					
ANR	1674162	Argument	request -> m_result		1674070	3					
ANR	1674163	PtrMemberAccess	request -> m_result		1674070	0					
ANR	1674164	Identifier	request		1674070	0					
ANR	1674165	Identifier	m_result		1674070	1					
ANR	1674166	IfStatement	if ( request -> m_result . empty ( ) == false )		1674070	6					
ANR	1674167	Condition	request -> m_result . empty ( ) == false	893:5:22074:22107	1674070	0	True				
ANR	1674168	EqualityExpression	request -> m_result . empty ( ) == false		1674070	0		==			
ANR	1674169	CallExpression	request -> m_result . empty ( )		1674070	0					
ANR	1674170	Callee	request -> m_result . empty		1674070	0					
ANR	1674171	MemberAccess	request -> m_result . empty		1674070	0					
ANR	1674172	PtrMemberAccess	request -> m_result		1674070	0					
ANR	1674173	Identifier	request		1674070	0					
ANR	1674174	Identifier	m_result		1674070	1					
ANR	1674175	Identifier	empty		1674070	1					
ANR	1674176	ArgumentList			1674070	1					
ANR	1674177	Identifier	false		1674070	1					
ANR	1674178	CompoundStatement		21:42:442:442	1674070	1					
ANR	1674179	ExpressionStatement	enqueue_result ( request )	894:2:22115:22138	1674070	0	True				
ANR	1674180	CallExpression	enqueue_result ( request )		1674070	0					
ANR	1674181	Callee	enqueue_result		1674070	0					
ANR	1674182	Identifier	enqueue_result		1674070	0					
ANR	1674183	ArgumentList	request		1674070	1					
ANR	1674184	Argument	request		1674070	0					
ANR	1674185	Identifier	request		1674070	0					
ANR	1674186	ReturnStatement	return result ;	897:1:22145:22158	1674070	7	True				
ANR	1674187	Identifier	result		1674070	0					
ANR	1674188	ReturnType	static bool		1674070	1					
ANR	1674189	Identifier	handle_gahp_command		1674070	2					
ANR	1674190	ParameterList	Request * request		1674070	3					
ANR	1674191	Parameter	Request * request	872:20:21650:21665	1674070	0	True				
ANR	1674192	ParameterType	Request *		1674070	0					
ANR	1674193	Identifier	request		1674070	1					
ANR	1674194	CFGEntryNode	ENTRY		1674070		True				
ANR	1674195	CFGExitNode	EXIT		1674070		True				
ANR	1674196	Symbol	argc		1674070						
ANR	1674197	Symbol	request		1674070						
ANR	1674198	Symbol	request -> m_args . argv		1674070						
ANR	1674199	Symbol	false		1674070						
ANR	1674200	Symbol	D_ALWAYS		1674070						
ANR	1674201	Symbol	request -> m_result . empty		1674070						
ANR	1674202	Symbol	* argv		1674070						
ANR	1674203	Symbol	request -> m_result		1674070						
ANR	1674204	Symbol	argv		1674070						
ANR	1674205	Symbol	executeWorkerFunc		1674070						
ANR	1674206	Symbol	result		1674070						
ANR	1674207	Symbol	request -> m_args . argc		1674070						
ANR	1674208	Symbol	* request		1674070						
ANR	1674209	Symbol	verify_request_id		1674070						
ANR	1674210	Symbol	request -> m_args		1674070						
ANR	1674211	Function	worker_exit	900:0:22163:23249							
ANR	1674212	FunctionDef	"worker_exit (Worker * worker , bool force)"		1674211	0					
ANR	1674213	CompoundStatement		901:0:22215:23249	1674211	0					
ANR	1674214	IfStatement	if ( ! worker )		1674211	0					
ANR	1674215	Condition	! worker	902:5:22222:22228	1674211	0	True				
ANR	1674216	UnaryOperationExpression	! worker		1674211	0					
ANR	1674217	UnaryOperator	!		1674211	0					
ANR	1674218	Identifier	worker		1674211	1					
ANR	1674219	CompoundStatement		2:15:16:16	1674211	1					
ANR	1674220	ReturnStatement	return ;	903:2:22236:22242	1674211	0	True				
ANR	1674221	IdentifierDeclStatement	int worker_id = worker -> m_id ;	906:1:22249:22277	1674211	1	True				
ANR	1674222	IdentifierDecl	worker_id = worker -> m_id		1674211	0					
ANR	1674223	IdentifierDeclType	int		1674211	0					
ANR	1674224	Identifier	worker_id		1674211	1					
ANR	1674225	AssignmentExpression	worker_id = worker -> m_id		1674211	2		=			
ANR	1674226	Identifier	worker_id		1674211	0					
ANR	1674227	PtrMemberAccess	worker -> m_id		1674211	1					
ANR	1674228	Identifier	worker		1674211	0					
ANR	1674229	Identifier	m_id		1674211	1					
ANR	1674230	IdentifierDeclStatement	bool need_remove = force ;	908:1:22281:22305	1674211	2	True				
ANR	1674231	IdentifierDecl	need_remove = force		1674211	0					
ANR	1674232	IdentifierDeclType	bool		1674211	0					
ANR	1674233	Identifier	need_remove		1674211	1					
ANR	1674234	AssignmentExpression	need_remove = force		1674211	2		=			
ANR	1674235	Identifier	force		1674211	0					
ANR	1674236	Identifier	force		1674211	1					
ANR	1674237	IfStatement	if ( ioprocess )		1674211	3					
ANR	1674238	Condition	ioprocess	909:5:22312:22320	1674211	0	True				
ANR	1674239	Identifier	ioprocess		1674211	0					
ANR	1674240	CompoundStatement		9:17:108:108	1674211	1					
ANR	1674241	ExpressionStatement	ioprocess -> LockWorkerList ( )	910:2:22328:22355	1674211	0	True				
ANR	1674242	CallExpression	ioprocess -> LockWorkerList ( )		1674211	0					
ANR	1674243	Callee	ioprocess -> LockWorkerList		1674211	0					
ANR	1674244	PtrMemberAccess	ioprocess -> LockWorkerList		1674211	0					
ANR	1674245	Identifier	ioprocess		1674211	0					
ANR	1674246	Identifier	LockWorkerList		1674211	1					
ANR	1674247	ArgumentList			1674211	1					
ANR	1674248	IfStatement	if ( need_remove == false )		1674211	1					
ANR	1674249	Condition	need_remove == false	912:6:22364:22383	1674211	0	True				
ANR	1674250	EqualityExpression	need_remove == false		1674211	0		==			
ANR	1674251	Identifier	need_remove		1674211	0					
ANR	1674252	Identifier	false		1674211	1					
ANR	1674253	CompoundStatement		12:29:171:171	1674211	1					
ANR	1674254	IfStatement	if ( ioprocess -> m_avail_workers_num > ioprocess -> m_min_workers )		1674211	0					
ANR	1674255	Condition	ioprocess -> m_avail_workers_num > ioprocess -> m_min_workers	913:7:22396:22452	1674211	0	True				
ANR	1674256	RelationalExpression	ioprocess -> m_avail_workers_num > ioprocess -> m_min_workers		1674211	0		>			
ANR	1674257	PtrMemberAccess	ioprocess -> m_avail_workers_num		1674211	0					
ANR	1674258	Identifier	ioprocess		1674211	0					
ANR	1674259	Identifier	m_avail_workers_num		1674211	1					
ANR	1674260	PtrMemberAccess	ioprocess -> m_min_workers		1674211	1					
ANR	1674261	Identifier	ioprocess		1674211	0					
ANR	1674262	Identifier	m_min_workers		1674211	1					
ANR	1674263	CompoundStatement		13:67:240:240	1674211	1					
ANR	1674264	ExpressionStatement	need_remove = true	914:4:22462:22480	1674211	0	True				
ANR	1674265	AssignmentExpression	need_remove = true		1674211	0		=			
ANR	1674266	Identifier	need_remove		1674211	0					
ANR	1674267	Identifier	true		1674211	1					
ANR	1674268	IfStatement	if ( need_remove )		1674211	2					
ANR	1674269	Condition	need_remove	918:6:22498:22508	1674211	0	True				
ANR	1674270	Identifier	need_remove		1674211	0					
ANR	1674271	CompoundStatement		18:20:296:296	1674211	1					
ANR	1674272	ExpressionStatement	ioprocess -> removeWorkerFromWorkerList ( worker -> m_id )	920:3:22580:22631	1674211	0	True				
ANR	1674273	CallExpression	ioprocess -> removeWorkerFromWorkerList ( worker -> m_id )		1674211	0					
ANR	1674274	Callee	ioprocess -> removeWorkerFromWorkerList		1674211	0					
ANR	1674275	PtrMemberAccess	ioprocess -> removeWorkerFromWorkerList		1674211	0					
ANR	1674276	Identifier	ioprocess		1674211	0					
ANR	1674277	Identifier	removeWorkerFromWorkerList		1674211	1					
ANR	1674278	ArgumentList	worker -> m_id		1674211	1					
ANR	1674279	Argument	worker -> m_id		1674211	0					
ANR	1674280	PtrMemberAccess	worker -> m_id		1674211	0					
ANR	1674281	Identifier	worker		1674211	0					
ANR	1674282	Identifier	m_id		1674211	1					
ANR	1674283	ExpressionStatement	worker = NULL	921:3:22636:22649	1674211	1	True				
ANR	1674284	AssignmentExpression	worker = NULL		1674211	0		=			
ANR	1674285	Identifier	worker		1674211	0					
ANR	1674286	Identifier	NULL		1674211	1					
ANR	1674287	ExpressionStatement	ioprocess -> m_avail_workers_num --	922:3:22654:22686	1674211	2	True				
ANR	1674288	PostIncDecOperationExpression	ioprocess -> m_avail_workers_num --		1674211	0					
ANR	1674289	PtrMemberAccess	ioprocess -> m_avail_workers_num		1674211	0					
ANR	1674290	Identifier	ioprocess		1674211	0					
ANR	1674291	Identifier	m_avail_workers_num		1674211	1					
ANR	1674292	IncDec	--		1674211	1					
ANR	1674293	ExpressionStatement	ioprocess -> UnlockWorkerList ( )	925:2:22695:22724	1674211	3	True				
ANR	1674294	CallExpression	ioprocess -> UnlockWorkerList ( )		1674211	0					
ANR	1674295	Callee	ioprocess -> UnlockWorkerList		1674211	0					
ANR	1674296	PtrMemberAccess	ioprocess -> UnlockWorkerList		1674211	0					
ANR	1674297	Identifier	ioprocess		1674211	0					
ANR	1674298	Identifier	UnlockWorkerList		1674211	1					
ANR	1674299	ArgumentList			1674211	1					
ANR	1674300	IfStatement	if ( need_remove )		1674211	4					
ANR	1674301	Condition	need_remove	928:5:22735:22745	1674211	0	True				
ANR	1674302	Identifier	need_remove		1674211	0					
ANR	1674303	CompoundStatement		31:2:604:618	1674211	1					
ANR	1674304	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Thread(%d) is exiting...\\n"" , worker_id )"	929:2:22753:22814	1674211	0	True				
ANR	1674305	CallExpression	"dprintf ( D_FULLDEBUG , ""Thread(%d) is exiting...\\n"" , worker_id )"		1674211	0					
ANR	1674306	Callee	dprintf		1674211	0					
ANR	1674307	Identifier	dprintf		1674211	0					
ANR	1674308	ArgumentList	D_FULLDEBUG		1674211	1					
ANR	1674309	Argument	D_FULLDEBUG		1674211	0					
ANR	1674310	Identifier	D_FULLDEBUG		1674211	0					
ANR	1674311	Argument	"""Thread(%d) is exiting...\\n"""		1674211	1					
ANR	1674312	PrimaryExpression	"""Thread(%d) is exiting...\\n"""		1674211	0					
ANR	1674313	Argument	worker_id		1674211	2					
ANR	1674314	Identifier	worker_id		1674211	0					
ANR	1674315	IdentifierDeclStatement	int retval = 0 ;	931:2:22820:22834	1674211	1	True				
ANR	1674316	IdentifierDecl	retval = 0		1674211	0					
ANR	1674317	IdentifierDeclType	int		1674211	0					
ANR	1674318	Identifier	retval		1674211	1					
ANR	1674319	AssignmentExpression	retval = 0		1674211	2		=			
ANR	1674320	Identifier	retval		1674211	0					
ANR	1674321	PrimaryExpression	0		1674211	1					
ANR	1674322	ExpressionStatement	amazon_gahp_release_big_mutex ( )	932:2:22838:22869	1674211	2	True				
ANR	1674323	CallExpression	amazon_gahp_release_big_mutex ( )		1674211	0					
ANR	1674324	Callee	amazon_gahp_release_big_mutex		1674211	0					
ANR	1674325	Identifier	amazon_gahp_release_big_mutex		1674211	0					
ANR	1674326	ArgumentList			1674211	1					
ANR	1674327	ExpressionStatement	pthread_exit ( & retval )	933:2:22873:22894	1674211	3	True				
ANR	1674328	CallExpression	pthread_exit ( & retval )		1674211	0					
ANR	1674329	Callee	pthread_exit		1674211	0					
ANR	1674330	Identifier	pthread_exit		1674211	0					
ANR	1674331	ArgumentList	& retval		1674211	1					
ANR	1674332	Argument	& retval		1674211	0					
ANR	1674333	UnaryOperationExpression	& retval		1674211	0					
ANR	1674334	UnaryOperator	&		1674211	0					
ANR	1674335	Identifier	retval		1674211	1					
ANR	1674336	ElseStatement	else		1674211	0					
ANR	1674337	CompoundStatement		34:7:687:687	1674211	0					
ANR	1674338	ExpressionStatement	worker -> m_can_use = true	941:2:23077:23101	1674211	0	True				
ANR	1674339	AssignmentExpression	worker -> m_can_use = true		1674211	0		=			
ANR	1674340	PtrMemberAccess	worker -> m_can_use		1674211	0					
ANR	1674341	Identifier	worker		1674211	0					
ANR	1674342	Identifier	m_can_use		1674211	1					
ANR	1674343	Identifier	true		1674211	1					
ANR	1674344	ExpressionStatement	worker -> m_is_doing = false	943:2:23106:23132	1674211	1	True				
ANR	1674345	AssignmentExpression	worker -> m_is_doing = false		1674211	0		=			
ANR	1674346	PtrMemberAccess	worker -> m_is_doing		1674211	0					
ANR	1674347	Identifier	worker		1674211	0					
ANR	1674348	Identifier	m_is_doing		1674211	1					
ANR	1674349	Identifier	false		1674211	1					
ANR	1674350	ExpressionStatement	worker -> m_is_waiting = false	944:2:23136:23164	1674211	2	True				
ANR	1674351	AssignmentExpression	worker -> m_is_waiting = false		1674211	0		=			
ANR	1674352	PtrMemberAccess	worker -> m_is_waiting		1674211	0					
ANR	1674353	Identifier	worker		1674211	0					
ANR	1674354	Identifier	m_is_waiting		1674211	1					
ANR	1674355	Identifier	false		1674211	1					
ANR	1674356	ExpressionStatement	worker -> m_must_be_alive = false	945:2:23168:23199	1674211	3	True				
ANR	1674357	AssignmentExpression	worker -> m_must_be_alive = false		1674211	0		=			
ANR	1674358	PtrMemberAccess	worker -> m_must_be_alive		1674211	0					
ANR	1674359	Identifier	worker		1674211	0					
ANR	1674360	Identifier	m_must_be_alive		1674211	1					
ANR	1674361	Identifier	false		1674211	1					
ANR	1674362	ReturnType	static void		1674211	1					
ANR	1674363	Identifier	worker_exit		1674211	2					
ANR	1674364	ParameterList	"Worker * worker , bool force"		1674211	3					
ANR	1674365	Parameter	Worker * worker	900:24:22187:22200	1674211	0	True				
ANR	1674366	ParameterType	Worker *		1674211	0					
ANR	1674367	Identifier	worker		1674211	1					
ANR	1674368	Parameter	bool force	900:40:22203:22212	1674211	1	True				
ANR	1674369	ParameterType	bool		1674211	0					
ANR	1674370	Identifier	force		1674211	1					
ANR	1674371	CFGEntryNode	ENTRY		1674211		True				
ANR	1674372	CFGExitNode	EXIT		1674211		True				
ANR	1674373	Symbol	need_remove		1674211						
ANR	1674374	Symbol	NULL		1674211						
ANR	1674375	Symbol	worker -> m_is_waiting		1674211						
ANR	1674376	Symbol	ioprocess -> m_min_workers		1674211						
ANR	1674377	Symbol	ioprocess -> m_avail_workers_num		1674211						
ANR	1674378	Symbol	* ioprocess		1674211						
ANR	1674379	Symbol	ioprocess		1674211						
ANR	1674380	Symbol	false		1674211						
ANR	1674381	Symbol	D_FULLDEBUG		1674211						
ANR	1674382	Symbol	worker -> m_must_be_alive		1674211						
ANR	1674383	Symbol	retval		1674211						
ANR	1674384	Symbol	* worker		1674211						
ANR	1674385	Symbol	worker_id		1674211						
ANR	1674386	Symbol	worker -> m_id		1674211						
ANR	1674387	Symbol	worker -> m_is_doing		1674211						
ANR	1674388	Symbol	worker -> m_can_use		1674211						
ANR	1674389	Symbol	true		1674211						
ANR	1674390	Symbol	& retval		1674211						
ANR	1674391	Symbol	force		1674211						
ANR	1674392	Symbol	worker		1674211						
ANR	1674393	Function	worker_function	951:0:23252:26239							
ANR	1674394	FunctionDef	worker_function (void * ptr)		1674393	0					
ANR	1674395	CompoundStatement		952:0:23295:26239	1674393	0					
ANR	1674396	IdentifierDeclStatement	Worker * worker = ( Worker * ) ptr ;	953:1:23298:23328	1674393	0	True				
ANR	1674397	IdentifierDecl	* worker = ( Worker * ) ptr		1674393	0					
ANR	1674398	IdentifierDeclType	Worker *		1674393	0					
ANR	1674399	Identifier	worker		1674393	1					
ANR	1674400	AssignmentExpression	* worker = ( Worker * ) ptr		1674393	2		=			
ANR	1674401	Identifier	worker		1674393	0					
ANR	1674402	CastExpression	( Worker * ) ptr		1674393	1					
ANR	1674403	CastTarget	Worker *		1674393	0					
ANR	1674404	Identifier	ptr		1674393	1					
ANR	1674405	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	960:1:23497:23525	1674393	1	True				
ANR	1674406	CallExpression	amazon_gahp_grab_big_mutex ( )		1674393	0					
ANR	1674407	Callee	amazon_gahp_grab_big_mutex		1674393	0					
ANR	1674408	Identifier	amazon_gahp_grab_big_mutex		1674393	0					
ANR	1674409	ArgumentList			1674393	1					
ANR	1674410	IfStatement	if ( ! worker )		1674393	2					
ANR	1674411	Condition	! worker	962:5:23533:23539	1674393	0	True				
ANR	1674412	UnaryOperationExpression	! worker		1674393	0					
ANR	1674413	UnaryOperator	!		1674393	0					
ANR	1674414	Identifier	worker		1674393	1					
ANR	1674415	CompoundStatement		11:15:247:247	1674393	1					
ANR	1674416	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ooops!! No input Data in worker thread\\n"" )"	963:2:23547:23609	1674393	0	True				
ANR	1674417	CallExpression	"dprintf ( D_ALWAYS , ""Ooops!! No input Data in worker thread\\n"" )"		1674393	0					
ANR	1674418	Callee	dprintf		1674393	0					
ANR	1674419	Identifier	dprintf		1674393	0					
ANR	1674420	ArgumentList	D_ALWAYS		1674393	1					
ANR	1674421	Argument	D_ALWAYS		1674393	0					
ANR	1674422	Identifier	D_ALWAYS		1674393	0					
ANR	1674423	Argument	"""Ooops!! No input Data in worker thread\\n"""		1674393	1					
ANR	1674424	PrimaryExpression	"""Ooops!! No input Data in worker thread\\n"""		1674393	0					
ANR	1674425	ExpressionStatement	amazon_gahp_release_big_mutex ( )	964:2:23613:23644	1674393	1	True				
ANR	1674426	CallExpression	amazon_gahp_release_big_mutex ( )		1674393	0					
ANR	1674427	Callee	amazon_gahp_release_big_mutex		1674393	0					
ANR	1674428	Identifier	amazon_gahp_release_big_mutex		1674393	0					
ANR	1674429	ArgumentList			1674393	1					
ANR	1674430	ReturnStatement	return NULL ;	965:2:23648:23659	1674393	2	True				
ANR	1674431	Identifier	NULL		1674393	0					
ANR	1674432	IdentifierDeclStatement	Request * new_request = NULL ;	969:1:23683:23710	1674393	3	True				
ANR	1674433	IdentifierDecl	* new_request = NULL		1674393	0					
ANR	1674434	IdentifierDeclType	Request *		1674393	0					
ANR	1674435	Identifier	new_request		1674393	1					
ANR	1674436	AssignmentExpression	* new_request = NULL		1674393	2		=			
ANR	1674437	Identifier	NULL		1674393	0					
ANR	1674438	Identifier	NULL		1674393	1					
ANR	1674439	IdentifierDeclStatement	struct timespec ts ;	970:1:23713:23731	1674393	4	True				
ANR	1674440	IdentifierDecl	ts		1674393	0					
ANR	1674441	IdentifierDeclType	struct timespec		1674393	0					
ANR	1674442	Identifier	ts		1674393	1					
ANR	1674443	IdentifierDeclStatement	struct timeval tp ;	971:1:23734:23751	1674393	5	True				
ANR	1674444	IdentifierDecl	tp		1674393	0					
ANR	1674445	IdentifierDeclType	struct timeval		1674393	0					
ANR	1674446	Identifier	tp		1674393	1					
ANR	1674447	WhileStatement	while ( 1 )		1674393	6					
ANR	1674448	Condition	1	973:7:23761:23761	1674393	0	True				
ANR	1674449	PrimaryExpression	1		1674393	0					
ANR	1674450	CompoundStatement		22:10:468:468	1674393	1					
ANR	1674451	ExpressionStatement	worker -> m_is_doing = false	977:2:23812:23838	1674393	0	True				
ANR	1674452	AssignmentExpression	worker -> m_is_doing = false		1674393	0		=			
ANR	1674453	PtrMemberAccess	worker -> m_is_doing		1674393	0					
ANR	1674454	Identifier	worker		1674393	0					
ANR	1674455	Identifier	m_is_doing		1674393	1					
ANR	1674456	Identifier	false		1674393	1					
ANR	1674457	ExpressionStatement	worker -> m_is_waiting = false	978:2:23842:23870	1674393	1	True				
ANR	1674458	AssignmentExpression	worker -> m_is_waiting = false		1674393	0		=			
ANR	1674459	PtrMemberAccess	worker -> m_is_waiting		1674393	0					
ANR	1674460	Identifier	worker		1674393	0					
ANR	1674461	Identifier	m_is_waiting		1674393	1					
ANR	1674462	Identifier	false		1674393	1					
ANR	1674463	IfStatement	if ( worker -> m_can_use == false )		1674393	2					
ANR	1674464	Condition	worker -> m_can_use == false	980:6:23879:23904	1674393	0	True				
ANR	1674465	EqualityExpression	worker -> m_can_use == false		1674393	0		==			
ANR	1674466	PtrMemberAccess	worker -> m_can_use		1674393	0					
ANR	1674467	Identifier	worker		1674393	0					
ANR	1674468	Identifier	m_can_use		1674393	1					
ANR	1674469	Identifier	false		1674393	1					
ANR	1674470	CompoundStatement		29:35:612:612	1674393	1					
ANR	1674471	ExpressionStatement	"worker_exit ( worker , true )"	983:3:23976:24001	1674393	0	True				
ANR	1674472	CallExpression	"worker_exit ( worker , true )"		1674393	0					
ANR	1674473	Callee	worker_exit		1674393	0					
ANR	1674474	Identifier	worker_exit		1674393	0					
ANR	1674475	ArgumentList	worker		1674393	1					
ANR	1674476	Argument	worker		1674393	0					
ANR	1674477	Identifier	worker		1674393	0					
ANR	1674478	Argument	true		1674393	1					
ANR	1674479	Identifier	true		1674393	0					
ANR	1674480	WhileStatement	while ( ( new_request = popRequest ( worker ) ) == NULL )		1674393	3					
ANR	1674481	Condition	( new_request = popRequest ( worker ) ) == NULL	986:9:24017:24058	1674393	0	True				
ANR	1674482	EqualityExpression	( new_request = popRequest ( worker ) ) == NULL		1674393	0		==			
ANR	1674483	AssignmentExpression	new_request = popRequest ( worker )		1674393	0		=			
ANR	1674484	Identifier	new_request		1674393	0					
ANR	1674485	CallExpression	popRequest ( worker )		1674393	1					
ANR	1674486	Callee	popRequest		1674393	0					
ANR	1674487	Identifier	popRequest		1674393	0					
ANR	1674488	ArgumentList	worker		1674393	1					
ANR	1674489	Argument	worker		1674393	0					
ANR	1674490	Identifier	worker		1674393	0					
ANR	1674491	Identifier	NULL		1674393	1					
ANR	1674492	CompoundStatement		60:3:1403:1485	1674393	1					
ANR	1674493	ExpressionStatement	worker -> m_is_waiting = true	988:3:24068:24095	1674393	0	True				
ANR	1674494	AssignmentExpression	worker -> m_is_waiting = true		1674393	0		=			
ANR	1674495	PtrMemberAccess	worker -> m_is_waiting		1674393	0					
ANR	1674496	Identifier	worker		1674393	0					
ANR	1674497	Identifier	m_is_waiting		1674393	1					
ANR	1674498	Identifier	true		1674393	1					
ANR	1674499	ExpressionStatement	"gettimeofday ( & tp , NULL )"	991:3:24124:24147	1674393	1	True				
ANR	1674500	CallExpression	"gettimeofday ( & tp , NULL )"		1674393	0					
ANR	1674501	Callee	gettimeofday		1674393	0					
ANR	1674502	Identifier	gettimeofday		1674393	0					
ANR	1674503	ArgumentList	& tp		1674393	1					
ANR	1674504	Argument	& tp		1674393	0					
ANR	1674505	UnaryOperationExpression	& tp		1674393	0					
ANR	1674506	UnaryOperator	&		1674393	0					
ANR	1674507	Identifier	tp		1674393	1					
ANR	1674508	Argument	NULL		1674393	1					
ANR	1674509	Identifier	NULL		1674393	0					
ANR	1674510	ExpressionStatement	ts . tv_sec = tp . tv_sec	994:3:24195:24216	1674393	2	True				
ANR	1674511	AssignmentExpression	ts . tv_sec = tp . tv_sec		1674393	0		=			
ANR	1674512	MemberAccess	ts . tv_sec		1674393	0					
ANR	1674513	Identifier	ts		1674393	0					
ANR	1674514	Identifier	tv_sec		1674393	1					
ANR	1674515	MemberAccess	tp . tv_sec		1674393	1					
ANR	1674516	Identifier	tp		1674393	0					
ANR	1674517	Identifier	tv_sec		1674393	1					
ANR	1674518	ExpressionStatement	ts . tv_nsec = tp . tv_usec * 1000	995:3:24221:24251	1674393	3	True				
ANR	1674519	AssignmentExpression	ts . tv_nsec = tp . tv_usec * 1000		1674393	0		=			
ANR	1674520	MemberAccess	ts . tv_nsec		1674393	0					
ANR	1674521	Identifier	ts		1674393	0					
ANR	1674522	Identifier	tv_nsec		1674393	1					
ANR	1674523	MultiplicativeExpression	tp . tv_usec * 1000		1674393	1		*			
ANR	1674524	MemberAccess	tp . tv_usec		1674393	0					
ANR	1674525	Identifier	tp		1674393	0					
ANR	1674526	Identifier	tv_usec		1674393	1					
ANR	1674527	PrimaryExpression	1000		1674393	1					
ANR	1674528	ExpressionStatement	ts . tv_sec += WORKER_MANAGER_TIMER_INTERVAL	996:3:24256:24298	1674393	4	True				
ANR	1674529	AssignmentExpression	ts . tv_sec += WORKER_MANAGER_TIMER_INTERVAL		1674393	0		+=			
ANR	1674530	MemberAccess	ts . tv_sec		1674393	0					
ANR	1674531	Identifier	ts		1674393	0					
ANR	1674532	Identifier	tv_sec		1674393	1					
ANR	1674533	Identifier	WORKER_MANAGER_TIMER_INTERVAL		1674393	1					
ANR	1674534	IfStatement	if ( ioprocess )		1674393	5					
ANR	1674535	Condition	ioprocess	998:7:24308:24316	1674393	0	True				
ANR	1674536	Identifier	ioprocess		1674393	0					
ANR	1674537	CompoundStatement		47:19:1024:1024	1674393	1					
ANR	1674538	IfStatement	if ( ioprocess -> numOfPendingRequest ( ) > 0 )		1674393	0					
ANR	1674539	Condition	ioprocess -> numOfPendingRequest ( ) > 0	999:8:24330:24365	1674393	0	True				
ANR	1674540	RelationalExpression	ioprocess -> numOfPendingRequest ( ) > 0		1674393	0		>			
ANR	1674541	CallExpression	ioprocess -> numOfPendingRequest ( )		1674393	0					
ANR	1674542	Callee	ioprocess -> numOfPendingRequest		1674393	0					
ANR	1674543	PtrMemberAccess	ioprocess -> numOfPendingRequest		1674393	0					
ANR	1674544	Identifier	ioprocess		1674393	0					
ANR	1674545	Identifier	numOfPendingRequest		1674393	1					
ANR	1674546	ArgumentList			1674393	1					
ANR	1674547	PrimaryExpression	0		1674393	1					
ANR	1674548	CompoundStatement		48:47:1073:1073	1674393	1					
ANR	1674549	ContinueStatement	continue ;	1000:5:24376:24384	1674393	0	True				
ANR	1674550	IdentifierDeclStatement	"int retval = pthread_cond_timedwait ( & worker -> m_cond , & global_big_mutex , & ts ) ;"	1011:3:24699:24781	1674393	6	True				
ANR	1674551	IdentifierDecl	"retval = pthread_cond_timedwait ( & worker -> m_cond , & global_big_mutex , & ts )"		1674393	0					
ANR	1674552	IdentifierDeclType	int		1674393	0					
ANR	1674553	Identifier	retval		1674393	1					
ANR	1674554	AssignmentExpression	"retval = pthread_cond_timedwait ( & worker -> m_cond , & global_big_mutex , & ts )"		1674393	2		=			
ANR	1674555	Identifier	retval		1674393	0					
ANR	1674556	CallExpression	"pthread_cond_timedwait ( & worker -> m_cond , & global_big_mutex , & ts )"		1674393	1					
ANR	1674557	Callee	pthread_cond_timedwait		1674393	0					
ANR	1674558	Identifier	pthread_cond_timedwait		1674393	0					
ANR	1674559	ArgumentList	& worker -> m_cond		1674393	1					
ANR	1674560	Argument	& worker -> m_cond		1674393	0					
ANR	1674561	UnaryOperationExpression	& worker -> m_cond		1674393	0					
ANR	1674562	UnaryOperator	&		1674393	0					
ANR	1674563	PtrMemberAccess	worker -> m_cond		1674393	1					
ANR	1674564	Identifier	worker		1674393	0					
ANR	1674565	Identifier	m_cond		1674393	1					
ANR	1674566	Argument	& global_big_mutex		1674393	1					
ANR	1674567	UnaryOperationExpression	& global_big_mutex		1674393	0					
ANR	1674568	UnaryOperator	&		1674393	0					
ANR	1674569	Identifier	global_big_mutex		1674393	1					
ANR	1674570	Argument	& ts		1674393	2					
ANR	1674571	UnaryOperationExpression	& ts		1674393	0					
ANR	1674572	UnaryOperator	&		1674393	0					
ANR	1674573	Identifier	ts		1674393	1					
ANR	1674574	IfStatement	if ( worker -> m_can_use == false )		1674393	7					
ANR	1674575	Condition	worker -> m_can_use == false	1015:7:24826:24851	1674393	0	True				
ANR	1674576	EqualityExpression	worker -> m_can_use == false		1674393	0		==			
ANR	1674577	PtrMemberAccess	worker -> m_can_use		1674393	0					
ANR	1674578	Identifier	worker		1674393	0					
ANR	1674579	Identifier	m_can_use		1674393	1					
ANR	1674580	Identifier	false		1674393	1					
ANR	1674581	CompoundStatement		64:36:1559:1559	1674393	1					
ANR	1674582	ExpressionStatement	worker -> m_is_waiting = false	1017:4:24880:24908	1674393	0	True				
ANR	1674583	AssignmentExpression	worker -> m_is_waiting = false		1674393	0		=			
ANR	1674584	PtrMemberAccess	worker -> m_is_waiting		1674393	0					
ANR	1674585	Identifier	worker		1674393	0					
ANR	1674586	Identifier	m_is_waiting		1674393	1					
ANR	1674587	Identifier	false		1674393	1					
ANR	1674588	ExpressionStatement	"worker_exit ( worker , true )"	1020:4:24962:24987	1674393	1	True				
ANR	1674589	CallExpression	"worker_exit ( worker , true )"		1674393	0					
ANR	1674590	Callee	worker_exit		1674393	0					
ANR	1674591	Identifier	worker_exit		1674393	0					
ANR	1674592	ArgumentList	worker		1674393	1					
ANR	1674593	Argument	worker		1674393	0					
ANR	1674594	Identifier	worker		1674393	0					
ANR	1674595	Argument	true		1674393	1					
ANR	1674596	Identifier	true		1674393	0					
ANR	1674597	ElseStatement	else		1674393	0					
ANR	1674598	CompoundStatement		70:9:1702:1702	1674393	0					
ANR	1674599	IfStatement	if ( retval == ETIMEDOUT )		1674393	0					
ANR	1674600	Condition	retval == ETIMEDOUT	1023:8:25066:25084	1674393	0	True				
ANR	1674601	EqualityExpression	retval == ETIMEDOUT		1674393	0		==			
ANR	1674602	Identifier	retval		1674393	0					
ANR	1674603	Identifier	ETIMEDOUT		1674393	1					
ANR	1674604	CompoundStatement		72:30:1792:1792	1674393	1					
ANR	1674605	IfStatement	if ( ioprocess )		1674393	0					
ANR	1674606	Condition	ioprocess	1027:9:25186:25194	1674393	0	True				
ANR	1674607	Identifier	ioprocess		1674393	0					
ANR	1674608	CompoundStatement		76:21:1902:1902	1674393	1					
ANR	1674609	IfStatement	if ( ioprocess -> numOfPendingRequest ( ) > 0 )		1674393	0					
ANR	1674610	Condition	ioprocess -> numOfPendingRequest ( ) > 0	1028:10:25210:25245	1674393	0	True				
ANR	1674611	RelationalExpression	ioprocess -> numOfPendingRequest ( ) > 0		1674393	0		>			
ANR	1674612	CallExpression	ioprocess -> numOfPendingRequest ( )		1674393	0					
ANR	1674613	Callee	ioprocess -> numOfPendingRequest		1674393	0					
ANR	1674614	PtrMemberAccess	ioprocess -> numOfPendingRequest		1674393	0					
ANR	1674615	Identifier	ioprocess		1674393	0					
ANR	1674616	Identifier	numOfPendingRequest		1674393	1					
ANR	1674617	ArgumentList			1674393	1					
ANR	1674618	PrimaryExpression	0		1674393	1					
ANR	1674619	CompoundStatement		77:49:1953:1953	1674393	1					
ANR	1674620	ContinueStatement	continue ;	1029:7:25258:25266	1674393	0	True				
ANR	1674621	IfStatement	if ( ! worker -> m_must_be_alive )		1674393	1					
ANR	1674622	Condition	! worker -> m_must_be_alive	1033:9:25293:25316	1674393	0	True				
ANR	1674623	UnaryOperationExpression	! worker -> m_must_be_alive		1674393	0					
ANR	1674624	UnaryOperator	!		1674393	0					
ANR	1674625	PtrMemberAccess	worker -> m_must_be_alive		1674393	1					
ANR	1674626	Identifier	worker		1674393	0					
ANR	1674627	Identifier	m_must_be_alive		1674393	1					
ANR	1674628	CompoundStatement		82:36:2024:2024	1674393	1					
ANR	1674629	ExpressionStatement	worker -> m_is_waiting = false	1036:6:25389:25417	1674393	0	True				
ANR	1674630	AssignmentExpression	worker -> m_is_waiting = false		1674393	0		=			
ANR	1674631	PtrMemberAccess	worker -> m_is_waiting		1674393	0					
ANR	1674632	Identifier	worker		1674393	0					
ANR	1674633	Identifier	m_is_waiting		1674393	1					
ANR	1674634	Identifier	false		1674393	1					
ANR	1674635	ExpressionStatement	worker -> m_can_use = false	1037:6:25426:25451	1674393	1	True				
ANR	1674636	AssignmentExpression	worker -> m_can_use = false		1674393	0		=			
ANR	1674637	PtrMemberAccess	worker -> m_can_use		1674393	0					
ANR	1674638	Identifier	worker		1674393	0					
ANR	1674639	Identifier	m_can_use		1674393	1					
ANR	1674640	Identifier	false		1674393	1					
ANR	1674641	ExpressionStatement	"worker_exit ( worker , false )"	1040:6:25508:25534	1674393	2	True				
ANR	1674642	CallExpression	"worker_exit ( worker , false )"		1674393	0					
ANR	1674643	Callee	worker_exit		1674393	0					
ANR	1674644	Identifier	worker_exit		1674393	0					
ANR	1674645	ArgumentList	worker		1674393	1					
ANR	1674646	Argument	worker		1674393	0					
ANR	1674647	Identifier	worker		1674393	0					
ANR	1674648	Argument	false		1674393	1					
ANR	1674649	Identifier	false		1674393	0					
ANR	1674650	ElseStatement	else		1674393	0					
ANR	1674651	CompoundStatement		90:11:2251:2251	1674393	0					
ANR	1674652	Statement	dprintf	1042:6:25555:25561	1674393	0	True				
ANR	1674653	Statement	(	1042:13:25562:25562	1674393	1	True				
ANR	1674654	Statement	D_FULLDEBUG	1042:14:25563:25573	1674393	2	True				
ANR	1674655	Statement	","	1042:25:25574:25574	1674393	3	True				
ANR	1674656	Statement	"""Thread(%d) must be alive for """	1042:27:25576:25606	1674393	4	True				
ANR	1674657	Statement	"""another request\\n"""	1043:8:25616:25634	1674393	5	True				
ANR	1674658	Statement	","	1043:27:25635:25635	1674393	6	True				
ANR	1674659	Statement	worker	1043:29:25637:25642	1674393	7	True				
ANR	1674660	Statement	->	1043:35:25643:25644	1674393	8	True				
ANR	1674661	Statement	m_id	1043:37:25645:25648	1674393	9	True				
ANR	1674662	Statement	)	1043:41:25649:25649	1674393	10	True				
ANR	1674663	ExpressionStatement		1043:42:25650:25650	1674393	11	True				
ANR	1674664	ExpressionStatement	worker -> m_is_doing = true	1049:2:25677:25702	1674393	4	True				
ANR	1674665	AssignmentExpression	worker -> m_is_doing = true		1674393	0		=			
ANR	1674666	PtrMemberAccess	worker -> m_is_doing		1674393	0					
ANR	1674667	Identifier	worker		1674393	0					
ANR	1674668	Identifier	m_is_doing		1674393	1					
ANR	1674669	Identifier	true		1674393	1					
ANR	1674670	ExpressionStatement	worker -> m_is_waiting = false	1050:2:25706:25734	1674393	5	True				
ANR	1674671	AssignmentExpression	worker -> m_is_waiting = false		1674393	0		=			
ANR	1674672	PtrMemberAccess	worker -> m_is_waiting		1674393	0					
ANR	1674673	Identifier	worker		1674393	0					
ANR	1674674	Identifier	m_is_waiting		1674393	1					
ANR	1674675	Identifier	false		1674393	1					
ANR	1674676	ExpressionStatement	worker -> m_must_be_alive = false	1051:2:25738:25769	1674393	6	True				
ANR	1674677	AssignmentExpression	worker -> m_must_be_alive = false		1674393	0		=			
ANR	1674678	PtrMemberAccess	worker -> m_must_be_alive		1674393	0					
ANR	1674679	Identifier	worker		1674393	0					
ANR	1674680	Identifier	m_must_be_alive		1674393	1					
ANR	1674681	Identifier	false		1674393	1					
ANR	1674682	IfStatement	if ( ! handle_gahp_command ( new_request ) )		1674393	7					
ANR	1674683	Condition	! handle_gahp_command ( new_request )	1055:5:25822:25854	1674393	0	True				
ANR	1674684	UnaryOperationExpression	! handle_gahp_command ( new_request )		1674393	0					
ANR	1674685	UnaryOperator	!		1674393	0					
ANR	1674686	CallExpression	handle_gahp_command ( new_request )		1674393	1					
ANR	1674687	Callee	handle_gahp_command		1674393	0					
ANR	1674688	Identifier	handle_gahp_command		1674393	0					
ANR	1674689	ArgumentList	new_request		1674393	1					
ANR	1674690	Argument	new_request		1674393	0					
ANR	1674691	Identifier	new_request		1674393	0					
ANR	1674692	CompoundStatement		104:41:2562:2562	1674393	1					
ANR	1674693	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR (io_loop) processing %s\\n"" , new_request -> m_raw_cmd . c_str ( ) )"	1056:3:25863:25953	1674393	0	True				
ANR	1674694	CallExpression	"dprintf ( D_ALWAYS , ""ERROR (io_loop) processing %s\\n"" , new_request -> m_raw_cmd . c_str ( ) )"		1674393	0					
ANR	1674695	Callee	dprintf		1674393	0					
ANR	1674696	Identifier	dprintf		1674393	0					
ANR	1674697	ArgumentList	D_ALWAYS		1674393	1					
ANR	1674698	Argument	D_ALWAYS		1674393	0					
ANR	1674699	Identifier	D_ALWAYS		1674393	0					
ANR	1674700	Argument	"""ERROR (io_loop) processing %s\\n"""		1674393	1					
ANR	1674701	PrimaryExpression	"""ERROR (io_loop) processing %s\\n"""		1674393	0					
ANR	1674702	Argument	new_request -> m_raw_cmd . c_str ( )		1674393	2					
ANR	1674703	CallExpression	new_request -> m_raw_cmd . c_str ( )		1674393	0					
ANR	1674704	Callee	new_request -> m_raw_cmd . c_str		1674393	0					
ANR	1674705	MemberAccess	new_request -> m_raw_cmd . c_str		1674393	0					
ANR	1674706	PtrMemberAccess	new_request -> m_raw_cmd		1674393	0					
ANR	1674707	Identifier	new_request		1674393	0					
ANR	1674708	Identifier	m_raw_cmd		1674393	1					
ANR	1674709	Identifier	c_str		1674393	1					
ANR	1674710	ArgumentList			1674393	1					
ANR	1674711	ElseStatement	else		1674393	0					
ANR	1674712	CompoundStatement		107:8:2667:2667	1674393	0					
ANR	1674713	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CMD(\\""%s\\"") is done with result %s"" , new_request -> m_raw_cmd . c_str ( ) , new_request -> m_result . c_str ( ) )"	1059:3:25968:26100	1674393	0	True				
ANR	1674714	CallExpression	"dprintf ( D_FULLDEBUG , ""CMD(\\""%s\\"") is done with result %s"" , new_request -> m_raw_cmd . c_str ( ) , new_request -> m_result . c_str ( ) )"		1674393	0					
ANR	1674715	Callee	dprintf		1674393	0					
ANR	1674716	Identifier	dprintf		1674393	0					
ANR	1674717	ArgumentList	D_FULLDEBUG		1674393	1					
ANR	1674718	Argument	D_FULLDEBUG		1674393	0					
ANR	1674719	Identifier	D_FULLDEBUG		1674393	0					
ANR	1674720	Argument	"""CMD(\\""%s\\"") is done with result %s"""		1674393	1					
ANR	1674721	PrimaryExpression	"""CMD(\\""%s\\"") is done with result %s"""		1674393	0					
ANR	1674722	Argument	new_request -> m_raw_cmd . c_str ( )		1674393	2					
ANR	1674723	CallExpression	new_request -> m_raw_cmd . c_str ( )		1674393	0					
ANR	1674724	Callee	new_request -> m_raw_cmd . c_str		1674393	0					
ANR	1674725	MemberAccess	new_request -> m_raw_cmd . c_str		1674393	0					
ANR	1674726	PtrMemberAccess	new_request -> m_raw_cmd		1674393	0					
ANR	1674727	Identifier	new_request		1674393	0					
ANR	1674728	Identifier	m_raw_cmd		1674393	1					
ANR	1674729	Identifier	c_str		1674393	1					
ANR	1674730	ArgumentList			1674393	1					
ANR	1674731	Argument	new_request -> m_result . c_str ( )		1674393	3					
ANR	1674732	CallExpression	new_request -> m_result . c_str ( )		1674393	0					
ANR	1674733	Callee	new_request -> m_result . c_str		1674393	0					
ANR	1674734	MemberAccess	new_request -> m_result . c_str		1674393	0					
ANR	1674735	PtrMemberAccess	new_request -> m_result		1674393	0					
ANR	1674736	Identifier	new_request		1674393	0					
ANR	1674737	Identifier	m_result		1674393	1					
ANR	1674738	Identifier	c_str		1674393	1					
ANR	1674739	ArgumentList			1674393	1					
ANR	1674740	Statement	delete	1065:2:26144:26149	1674393	8	True				
ANR	1674741	ExpressionStatement	new_request	1065:9:26151:26162	1674393	9	True				
ANR	1674742	Identifier	new_request		1674393	0					
ANR	1674743	ExpressionStatement	new_request = NULL	1066:2:26166:26184	1674393	10	True				
ANR	1674744	AssignmentExpression	new_request = NULL		1674393	0		=			
ANR	1674745	Identifier	new_request		1674393	0					
ANR	1674746	Identifier	NULL		1674393	1					
ANR	1674747	ExpressionStatement	amazon_gahp_release_big_mutex ( )	1070:1:26192:26223	1674393	7	True				
ANR	1674748	CallExpression	amazon_gahp_release_big_mutex ( )		1674393	0					
ANR	1674749	Callee	amazon_gahp_release_big_mutex		1674393	0					
ANR	1674750	Identifier	amazon_gahp_release_big_mutex		1674393	0					
ANR	1674751	ArgumentList			1674393	1					
ANR	1674752	ReturnStatement	return NULL ;	1071:1:26226:26237	1674393	8	True				
ANR	1674753	Identifier	NULL		1674393	0					
ANR	1674754	ReturnType	static void *		1674393	1					
ANR	1674755	Identifier	worker_function		1674393	2					
ANR	1674756	ParameterList	void * ptr		1674393	3					
ANR	1674757	Parameter	void * ptr	951:30:23282:23290	1674393	0	True				
ANR	1674758	ParameterType	void *		1674393	0					
ANR	1674759	Identifier	ptr		1674393	1					
ANR	1674760	CFGEntryNode	ENTRY		1674393		True				
ANR	1674761	CFGExitNode	EXIT		1674393		True				
ANR	1674762	Symbol	new_request -> m_raw_cmd . c_str		1674393						
ANR	1674763	Symbol	tp . tv_sec		1674393						
ANR	1674764	Symbol	ioprocess		1674393						
ANR	1674765	Symbol	worker -> m_must_be_alive		1674393						
ANR	1674766	Symbol	pthread_cond_timedwait		1674393						
ANR	1674767	Symbol	tp . tv_usec		1674393						
ANR	1674768	Symbol	ts . tv_sec		1674393						
ANR	1674769	Symbol	worker -> m_is_doing		1674393						
ANR	1674770	Symbol	ts . tv_nsec		1674393						
ANR	1674771	Symbol	& global_big_mutex		1674393						
ANR	1674772	Symbol	* new_request		1674393						
ANR	1674773	Symbol	worker		1674393						
ANR	1674774	Symbol	new_request		1674393						
ANR	1674775	Symbol	handle_gahp_command		1674393						
ANR	1674776	Symbol	& worker -> m_cond		1674393						
ANR	1674777	Symbol	NULL		1674393						
ANR	1674778	Symbol	worker -> m_is_waiting		1674393						
ANR	1674779	Symbol	popRequest		1674393						
ANR	1674780	Symbol	& tp		1674393						
ANR	1674781	Symbol	* ioprocess		1674393						
ANR	1674782	Symbol	D_ALWAYS		1674393						
ANR	1674783	Symbol	false		1674393						
ANR	1674784	Symbol	& ts		1674393						
ANR	1674785	Symbol	new_request -> m_result . c_str		1674393						
ANR	1674786	Symbol	D_FULLDEBUG		1674393						
ANR	1674787	Symbol	retval		1674393						
ANR	1674788	Symbol	new_request -> m_raw_cmd		1674393						
ANR	1674789	Symbol	ptr		1674393						
ANR	1674790	Symbol	* worker		1674393						
ANR	1674791	Symbol	WORKER_MANAGER_TIMER_INTERVAL		1674393						
ANR	1674792	Symbol	ETIMEDOUT		1674393						
ANR	1674793	Symbol	new_request -> m_result		1674393						
ANR	1674794	Symbol	worker -> m_can_use		1674393						
ANR	1674795	Symbol	ioprocess -> numOfPendingRequest		1674393						
ANR	1674796	Symbol	true		1674393						
ANR	1674797	Symbol	tp		1674393						
ANR	1674798	Symbol	ts		1674393						
