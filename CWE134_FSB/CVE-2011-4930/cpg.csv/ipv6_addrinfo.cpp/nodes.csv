command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1680748	File	data/converged/CVE-2011-4930_htcondor/ipv6_addrinfo.cpp								
ANR	1680749	Function	get_default_hint	26:0:918:1254							
ANR	1680750	FunctionDef	get_default_hint ()		1680749	0					
ANR	1680751	CompoundStatement		27:0:946:1254	1680749	0					
ANR	1680752	IdentifierDeclStatement	addrinfo ret ;	28:1:949:961	1680749	0	True				
ANR	1680753	IdentifierDecl	ret		1680749	0					
ANR	1680754	IdentifierDeclType	addrinfo		1680749	0					
ANR	1680755	Identifier	ret		1680749	1					
ANR	1680756	ExpressionStatement	"memset ( & ret , 0 , sizeof ( ret ) )"	29:1:964:992	1680749	1	True				
ANR	1680757	CallExpression	"memset ( & ret , 0 , sizeof ( ret ) )"		1680749	0					
ANR	1680758	Callee	memset		1680749	0					
ANR	1680759	Identifier	memset		1680749	0					
ANR	1680760	ArgumentList	& ret		1680749	1					
ANR	1680761	Argument	& ret		1680749	0					
ANR	1680762	UnaryOperationExpression	& ret		1680749	0					
ANR	1680763	UnaryOperator	&		1680749	0					
ANR	1680764	Identifier	ret		1680749	1					
ANR	1680765	Argument	0		1680749	1					
ANR	1680766	PrimaryExpression	0		1680749	0					
ANR	1680767	Argument	sizeof ( ret )		1680749	2					
ANR	1680768	SizeofExpression	sizeof ( ret )		1680749	0					
ANR	1680769	Sizeof	sizeof		1680749	0					
ANR	1680770	SizeofOperand	ret		1680749	1					
ANR	1680771	ExpressionStatement	ret . ai_flags = AI_ADDRCONFIG	31:1:1009:1037	1680749	2	True				
ANR	1680772	AssignmentExpression	ret . ai_flags = AI_ADDRCONFIG		1680749	0		=			
ANR	1680773	MemberAccess	ret . ai_flags		1680749	0					
ANR	1680774	Identifier	ret		1680749	0					
ANR	1680775	Identifier	ai_flags		1680749	1					
ANR	1680776	Identifier	AI_ADDRCONFIG		1680749	1					
ANR	1680777	ExpressionStatement	ret . ai_flags |= AI_CANONNAME	33:1:1047:1075	1680749	3	True				
ANR	1680778	AssignmentExpression	ret . ai_flags |= AI_CANONNAME		1680749	0		|=			
ANR	1680779	MemberAccess	ret . ai_flags		1680749	0					
ANR	1680780	Identifier	ret		1680749	0					
ANR	1680781	Identifier	ai_flags		1680749	1					
ANR	1680782	Identifier	AI_CANONNAME		1680749	1					
ANR	1680783	ExpressionStatement	ret . ai_socktype = SOCK_STREAM	35:1:1079:1108	1680749	4	True				
ANR	1680784	AssignmentExpression	ret . ai_socktype = SOCK_STREAM		1680749	0		=			
ANR	1680785	MemberAccess	ret . ai_socktype		1680749	0					
ANR	1680786	Identifier	ret		1680749	0					
ANR	1680787	Identifier	ai_socktype		1680749	1					
ANR	1680788	Identifier	SOCK_STREAM		1680749	1					
ANR	1680789	ExpressionStatement	ret . ai_protocol = IPPROTO_TCP	36:1:1111:1140	1680749	5	True				
ANR	1680790	AssignmentExpression	ret . ai_protocol = IPPROTO_TCP		1680749	0		=			
ANR	1680791	MemberAccess	ret . ai_protocol		1680749	0					
ANR	1680792	Identifier	ret		1680749	0					
ANR	1680793	Identifier	ai_protocol		1680749	1					
ANR	1680794	Identifier	IPPROTO_TCP		1680749	1					
ANR	1680795	IfStatement	if ( _condor_is_ipv6_mode ( ) )		1680749	6					
ANR	1680796	Condition	_condor_is_ipv6_mode ( )	37:4:1146:1167	1680749	0	True				
ANR	1680797	CallExpression	_condor_is_ipv6_mode ( )		1680749	0					
ANR	1680798	Callee	_condor_is_ipv6_mode		1680749	0					
ANR	1680799	Identifier	_condor_is_ipv6_mode		1680749	0					
ANR	1680800	ArgumentList			1680749	1					
ANR	1680801	CompoundStatement		11:28:223:223	1680749	1					
ANR	1680802	ExpressionStatement	ret . ai_family = AF_UNSPEC	38:2:1174:1199	1680749	0	True				
ANR	1680803	AssignmentExpression	ret . ai_family = AF_UNSPEC		1680749	0		=			
ANR	1680804	MemberAccess	ret . ai_family		1680749	0					
ANR	1680805	Identifier	ret		1680749	0					
ANR	1680806	Identifier	ai_family		1680749	1					
ANR	1680807	Identifier	AF_UNSPEC		1680749	1					
ANR	1680808	ElseStatement	else		1680749	0					
ANR	1680809	CompoundStatement		13:8:262:262	1680749	0					
ANR	1680810	ExpressionStatement	ret . ai_family = AF_INET	40:2:1213:1236	1680749	0	True				
ANR	1680811	AssignmentExpression	ret . ai_family = AF_INET		1680749	0		=			
ANR	1680812	MemberAccess	ret . ai_family		1680749	0					
ANR	1680813	Identifier	ret		1680749	0					
ANR	1680814	Identifier	ai_family		1680749	1					
ANR	1680815	Identifier	AF_INET		1680749	1					
ANR	1680816	ReturnStatement	return ret ;	42:1:1242:1252	1680749	7	True				
ANR	1680817	Identifier	ret		1680749	0					
ANR	1680818	ReturnType	addrinfo		1680749	1					
ANR	1680819	Identifier	get_default_hint		1680749	2					
ANR	1680820	ParameterList			1680749	3					
ANR	1680821	CFGEntryNode	ENTRY		1680749		True				
ANR	1680822	CFGExitNode	EXIT		1680749		True				
ANR	1680823	Symbol	ret		1680749						
ANR	1680824	Symbol	& ret		1680749						
ANR	1680825	Symbol	ret . ai_socktype		1680749						
ANR	1680826	Symbol	ret . ai_family		1680749						
ANR	1680827	Symbol	AF_INET		1680749						
ANR	1680828	Symbol	AF_UNSPEC		1680749						
ANR	1680829	Symbol	AI_CANONNAME		1680749						
ANR	1680830	Symbol	SOCK_STREAM		1680749						
ANR	1680831	Symbol	_condor_is_ipv6_mode		1680749						
ANR	1680832	Symbol	ret . ai_protocol		1680749						
ANR	1680833	Symbol	AI_ADDRCONFIG		1680749						
ANR	1680834	Symbol	IPPROTO_TCP		1680749						
ANR	1680835	Symbol	ret . ai_flags		1680749						
ANR	1680836	ClassDef	shared_context	51:0:1373:1634							
ANR	1680837	Function	shared_context	53:1:1398:1439							
ANR	1680838	FunctionDef	shared_context ()		1680837	0					
ANR	1680839	CompoundStatement		53:41:1438:1439	1680837	0					
ANR	1680840	Identifier	shared_context		1680837	1					
ANR	1680841	ParameterList			1680837	2					
ANR	1680842	CFGEntryNode	ENTRY		1680837		True				
ANR	1680843	CFGExitNode	EXIT		1680837		True				
ANR	1680844	DeclStmt									
ANR	1680845	Decl							int	int	count
ANR	1680846	DeclStmt									
ANR	1680847	Decl							addrinfo	addrinfo *	head
ANR	1680848	Function	add_ref	56:1:1471:1506							
ANR	1680849	FunctionDef	add_ref ()		1680848	3					
ANR	1680850	CompoundStatement		56:16:1486:1506	1680848	0					
ANR	1680851	ExpressionStatement	count ++	57:5:1493:1500	1680848	0	True				
ANR	1680852	PostIncDecOperationExpression	count ++		1680848	0					
ANR	1680853	Identifier	count		1680848	0					
ANR	1680854	IncDec	++		1680848	1					
ANR	1680855	ReturnType	void		1680848	1					
ANR	1680856	Identifier	add_ref		1680848	2					
ANR	1680857	ParameterList			1680848	3					
ANR	1680858	CFGEntryNode	ENTRY		1680848		True				
ANR	1680859	CFGExitNode	EXIT		1680848		True				
ANR	1680860	Symbol	count		1680848						
ANR	1680861	Function	release	59:1:1509:1632							
ANR	1680862	FunctionDef	release ()		1680861	4					
ANR	1680863	CompoundStatement		59:16:1524:1632	1680861	0					
ANR	1680864	ExpressionStatement	count --	60:5:1531:1538	1680861	0	True				
ANR	1680865	PostIncDecOperationExpression	count --		1680861	0					
ANR	1680866	Identifier	count		1680861	0					
ANR	1680867	IncDec	--		1680861	1					
ANR	1680868	IfStatement	if ( ! count && head )		1680861	1					
ANR	1680869	Condition	! count && head	61:9:1549:1562	1680861	0	True				
ANR	1680870	AndExpression	! count && head		1680861	0		&&			
ANR	1680871	UnaryOperationExpression	! count		1680861	0					
ANR	1680872	UnaryOperator	!		1680861	0					
ANR	1680873	Identifier	count		1680861	1					
ANR	1680874	Identifier	head		1680861	1					
ANR	1680875	CompoundStatement		3:25:40:40	1680861	1					
ANR	1680876	ExpressionStatement	freeaddrinfo ( head )	62:9:1576:1594	1680861	0	True				
ANR	1680877	CallExpression	freeaddrinfo ( head )		1680861	0					
ANR	1680878	Callee	freeaddrinfo		1680861	0					
ANR	1680879	Identifier	freeaddrinfo		1680861	0					
ANR	1680880	ArgumentList	head		1680861	1					
ANR	1680881	Argument	head		1680861	0					
ANR	1680882	Identifier	head		1680861	0					
ANR	1680883	Statement	delete	63:12:1608:1613	1680861	1	True				
ANR	1680884	ExpressionStatement	this	63:19:1615:1619	1680861	2	True				
ANR	1680885	Identifier	this		1680861	0					
ANR	1680886	ReturnType	void		1680861	1					
ANR	1680887	Identifier	release		1680861	2					
ANR	1680888	ParameterList			1680861	3					
ANR	1680889	CFGEntryNode	ENTRY		1680861		True				
ANR	1680890	CFGExitNode	EXIT		1680861		True				
ANR	1680891	Symbol	head		1680861						
ANR	1680892	Symbol	count		1680861						
ANR	1680893	Function	addrinfo_iterator :: addrinfo_iterator	68:0:1638:1709							
ANR	1680894	FunctionDef	addrinfo_iterator :: addrinfo_iterator ()		1680893	0					
ANR	1680895	CompoundStatement		70:0:1707:1709	1680893	0					
ANR	1680896	Identifier	addrinfo_iterator :: addrinfo_iterator		1680893	1					
ANR	1680897	ParameterList			1680893	2					
ANR	1680898	CFGEntryNode	ENTRY		1680893		True				
ANR	1680899	CFGExitNode	EXIT		1680893		True				
ANR	1680900	Function	addrinfo_iterator :: addrinfo_iterator	73:0:1712:1843							
ANR	1680901	FunctionDef	addrinfo_iterator :: addrinfo_iterator (const addrinfo_iterator & rhs)		1680900	0					
ANR	1680902	CompoundStatement		75:0:1813:1843	1680900	0					
ANR	1680903	IfStatement	if ( cxt_ )		1680900	0					
ANR	1680904	Condition	cxt_	76:5:1820:1823	1680900	0	True				
ANR	1680905	Identifier	cxt_		1680900	0					
ANR	1680906	ExpressionStatement	cxt_ -> add_ref ( )	76:11:1826:1841	1680900	1	True				
ANR	1680907	CallExpression	cxt_ -> add_ref ( )		1680900	0					
ANR	1680908	Callee	cxt_ -> add_ref		1680900	0					
ANR	1680909	PtrMemberAccess	cxt_ -> add_ref		1680900	0					
ANR	1680910	Identifier	cxt_		1680900	0					
ANR	1680911	Identifier	add_ref		1680900	1					
ANR	1680912	ArgumentList			1680900	1					
ANR	1680913	Identifier	addrinfo_iterator :: addrinfo_iterator		1680900	1					
ANR	1680914	ParameterList	const addrinfo_iterator & rhs		1680900	2					
ANR	1680915	Parameter	const addrinfo_iterator & rhs	73:37:1749:1776	1680900	0	True				
ANR	1680916	ParameterType	const addrinfo_iterator &		1680900	0					
ANR	1680917	Identifier	rhs		1680900	1					
ANR	1680918	CFGEntryNode	ENTRY		1680900		True				
ANR	1680919	CFGExitNode	EXIT		1680900		True				
ANR	1680920	Symbol	rhs		1680900						
ANR	1680921	Symbol	cxt_		1680900						
ANR	1680922	Function	addrinfo_iterator :: ~addrinfo_iterator	86:0:1984:2061							
ANR	1680923	FunctionDef	addrinfo_iterator :: ~addrinfo_iterator ()		1680922	0					
ANR	1680924	CompoundStatement		87:0:2024:2061	1680922	0					
ANR	1680925	IfStatement	if ( cxt_ )		1680922	0					
ANR	1680926	Condition	cxt_	88:5:2031:2034	1680922	0	True				
ANR	1680927	Identifier	cxt_		1680922	0					
ANR	1680928	CompoundStatement		2:11:12:12	1680922	1					
ANR	1680929	ExpressionStatement	cxt_ -> release ( )	89:2:2041:2056	1680922	0	True				
ANR	1680930	CallExpression	cxt_ -> release ( )		1680922	0					
ANR	1680931	Callee	cxt_ -> release		1680922	0					
ANR	1680932	PtrMemberAccess	cxt_ -> release		1680922	0					
ANR	1680933	Identifier	cxt_		1680922	0					
ANR	1680934	Identifier	release		1680922	1					
ANR	1680935	ArgumentList			1680922	1					
ANR	1680936	Identifier	addrinfo_iterator :: ~addrinfo_iterator		1680922	1					
ANR	1680937	ParameterList			1680922	2					
ANR	1680938	CFGEntryNode	ENTRY		1680922		True				
ANR	1680939	CFGExitNode	EXIT		1680922		True				
ANR	1680940	Symbol	cxt_		1680922						
ANR	1680941	Function	operator =	93:38:2102:2243							
ANR	1680942	FunctionDef	operator = (const addrinfo_iterator & rhs)		1680941	0					
ANR	1680943	CompoundStatement		94:0:2143:2243	1680941	0					
ANR	1680944	IfStatement	if ( cxt_ )		1680941	0					
ANR	1680945	Condition	cxt_	95:5:2150:2153	1680941	0	True				
ANR	1680946	Identifier	cxt_		1680941	0					
ANR	1680947	ExpressionStatement	cxt_ -> release ( )	95:11:2156:2171	1680941	1	True				
ANR	1680948	CallExpression	cxt_ -> release ( )		1680941	0					
ANR	1680949	Callee	cxt_ -> release		1680941	0					
ANR	1680950	PtrMemberAccess	cxt_ -> release		1680941	0					
ANR	1680951	Identifier	cxt_		1680941	0					
ANR	1680952	Identifier	release		1680941	1					
ANR	1680953	ArgumentList			1680941	1					
ANR	1680954	ExpressionStatement	cxt_ = rhs . cxt_	96:1:2174:2189	1680941	1	True				
ANR	1680955	AssignmentExpression	cxt_ = rhs . cxt_		1680941	0		=			
ANR	1680956	Identifier	cxt_		1680941	0					
ANR	1680957	MemberAccess	rhs . cxt_		1680941	1					
ANR	1680958	Identifier	rhs		1680941	0					
ANR	1680959	Identifier	cxt_		1680941	1					
ANR	1680960	ExpressionStatement	cxt_ -> add_ref ( )	97:1:2192:2207	1680941	2	True				
ANR	1680961	CallExpression	cxt_ -> add_ref ( )		1680941	0					
ANR	1680962	Callee	cxt_ -> add_ref		1680941	0					
ANR	1680963	PtrMemberAccess	cxt_ -> add_ref		1680941	0					
ANR	1680964	Identifier	cxt_		1680941	0					
ANR	1680965	Identifier	add_ref		1680941	1					
ANR	1680966	ArgumentList			1680941	1					
ANR	1680967	ExpressionStatement	current_ = NULL	99:1:2211:2226	1680941	3	True				
ANR	1680968	AssignmentExpression	current_ = NULL		1680941	0		=			
ANR	1680969	Identifier	current_		1680941	0					
ANR	1680970	Identifier	NULL		1680941	1					
ANR	1680971	ReturnStatement	return * this ;	100:1:2229:2241	1680941	4	True				
ANR	1680972	UnaryOperationExpression	* this		1680941	0					
ANR	1680973	UnaryOperator	*		1680941	0					
ANR	1680974	Identifier	this		1680941	1					
ANR	1680975	Identifier	operator =		1680941	1					
ANR	1680976	ParameterList	const addrinfo_iterator & rhs		1680941	2					
ANR	1680977	Parameter	const addrinfo_iterator & rhs	93:49:2113:2140	1680941	0	True				
ANR	1680978	ParameterType	const addrinfo_iterator &		1680941	0					
ANR	1680979	Identifier	rhs		1680941	1					
ANR	1680980	CFGEntryNode	ENTRY		1680941		True				
ANR	1680981	CFGExitNode	EXIT		1680941		True				
ANR	1680982	Symbol	* this		1680941						
ANR	1680983	Symbol	NULL		1680941						
ANR	1680984	Symbol	rhs . cxt_		1680941						
ANR	1680985	Symbol	this		1680941						
ANR	1680986	Symbol	rhs		1680941						
ANR	1680987	Symbol	current_		1680941						
ANR	1680988	Symbol	cxt_		1680941						
ANR	1680989	Function	addrinfo_iterator :: next	103:0:2246:2426							
ANR	1680990	FunctionDef	addrinfo_iterator :: next ()		1680989	0					
ANR	1680991	CompoundStatement		104:0:2282:2426	1680989	0					
ANR	1680992	IfStatement	if ( ! current_ )		1680989	0					
ANR	1680993	Condition	! current_	105:5:2289:2297	1680989	0	True				
ANR	1680994	UnaryOperationExpression	! current_		1680989	0					
ANR	1680995	UnaryOperator	!		1680989	0					
ANR	1680996	Identifier	current_		1680989	1					
ANR	1680997	ExpressionStatement	current_ = cxt_ -> head	106:2:2302:2323	1680989	1	True				
ANR	1680998	AssignmentExpression	current_ = cxt_ -> head		1680989	0		=			
ANR	1680999	Identifier	current_		1680989	0					
ANR	1681000	PtrMemberAccess	cxt_ -> head		1680989	1					
ANR	1681001	Identifier	cxt_		1680989	0					
ANR	1681002	Identifier	head		1680989	1					
ANR	1681003	ElseStatement	else		1680989	0					
ANR	1681004	IfStatement	if ( ! current_ -> ai_next )		1680989	0					
ANR	1681005	Condition	! current_ -> ai_next	107:10:2335:2352	1680989	0	True				
ANR	1681006	UnaryOperationExpression	! current_ -> ai_next		1680989	0					
ANR	1681007	UnaryOperator	!		1680989	0					
ANR	1681008	PtrMemberAccess	current_ -> ai_next		1680989	1					
ANR	1681009	Identifier	current_		1680989	0					
ANR	1681010	Identifier	ai_next		1680989	1					
ANR	1681011	ReturnStatement	return NULL ;	108:2:2357:2368	1680989	1	True				
ANR	1681012	Identifier	NULL		1680989	0					
ANR	1681013	ElseStatement	else		1680989	0					
ANR	1681014	ExpressionStatement	current_ = current_ -> ai_next	110:2:2378:2406	1680989	0	True				
ANR	1681015	AssignmentExpression	current_ = current_ -> ai_next		1680989	0		=			
ANR	1681016	Identifier	current_		1680989	0					
ANR	1681017	PtrMemberAccess	current_ -> ai_next		1680989	1					
ANR	1681018	Identifier	current_		1680989	0					
ANR	1681019	Identifier	ai_next		1680989	1					
ANR	1681020	ReturnStatement	return current_ ;	111:1:2409:2424	1680989	1	True				
ANR	1681021	Identifier	current_		1680989	0					
ANR	1681022	ReturnType	addrinfo *		1680989	1					
ANR	1681023	Identifier	addrinfo_iterator :: next		1680989	2					
ANR	1681024	ParameterList			1680989	3					
ANR	1681025	CFGEntryNode	ENTRY		1680989		True				
ANR	1681026	CFGExitNode	EXIT		1680989		True				
ANR	1681027	Symbol	NULL		1680989						
ANR	1681028	Symbol	current_ -> ai_next		1680989						
ANR	1681029	Symbol	* current_		1680989						
ANR	1681030	Symbol	* cxt_		1680989						
ANR	1681031	Symbol	current_		1680989						
ANR	1681032	Symbol	cxt_		1680989						
ANR	1681033	Symbol	cxt_ -> head		1680989						
ANR	1681034	Function	addrinfo_iterator :: reset	114:0:2429:2481							
ANR	1681035	FunctionDef	addrinfo_iterator :: reset ()		1681034	0					
ANR	1681036	CompoundStatement		115:0:2461:2481	1681034	0					
ANR	1681037	ExpressionStatement	current_ = NULL	116:1:2464:2479	1681034	0	True				
ANR	1681038	AssignmentExpression	current_ = NULL		1681034	0		=			
ANR	1681039	Identifier	current_		1681034	0					
ANR	1681040	Identifier	NULL		1681034	1					
ANR	1681041	ReturnType	void		1681034	1					
ANR	1681042	Identifier	addrinfo_iterator :: reset		1681034	2					
ANR	1681043	ParameterList			1681034	3					
ANR	1681044	CFGEntryNode	ENTRY		1681034		True				
ANR	1681045	CFGExitNode	EXIT		1681034		True				
ANR	1681046	Symbol	NULL		1681034						
ANR	1681047	Symbol	current_		1681034						
ANR	1681048	Function	find_any_ipv4	119:0:2484:2695							
ANR	1681049	FunctionDef	"find_any_ipv4 (addrinfo_iterator & ai , sockaddr_in & sin)"		1681048	0					
ANR	1681050	CompoundStatement		120:0:2544:2695	1681048	0					
ANR	1681051	WhileStatement	while ( addrinfo * r = ai . next ( ) )		1681048	0					
ANR	1681052	Condition	addrinfo * r = ai . next ( )	121:9:2555:2577	1681048	0	True				
ANR	1681053	AssignmentExpression	addrinfo * r = ai . next ( )		1681048	0		=			
ANR	1681054	MultiplicativeExpression	addrinfo * r		1681048	0		*			
ANR	1681055	Identifier	addrinfo		1681048	0					
ANR	1681056	Identifier	r		1681048	1					
ANR	1681057	CallExpression	ai . next ( )		1681048	1					
ANR	1681058	Callee	ai . next		1681048	0					
ANR	1681059	MemberAccess	ai . next		1681048	0					
ANR	1681060	Identifier	ai		1681048	0					
ANR	1681061	Identifier	next		1681048	1					
ANR	1681062	ArgumentList			1681048	1					
ANR	1681063	IfStatement	if ( r -> ai_family == AF_INET )		1681048	1					
ANR	1681064	Condition	r -> ai_family == AF_INET	122:7:2588:2610	1681048	0	True				
ANR	1681065	EqualityExpression	r -> ai_family == AF_INET		1681048	0		==			
ANR	1681066	PtrMemberAccess	r -> ai_family		1681048	0					
ANR	1681067	Identifier	r		1681048	0					
ANR	1681068	Identifier	ai_family		1681048	1					
ANR	1681069	Identifier	AF_INET		1681048	1					
ANR	1681070	CompoundStatement		3:33:69:69	1681048	1					
ANR	1681071	ExpressionStatement	"memcpy ( & sin , r -> ai_addr , r -> ai_addrlen )"	123:3:2619:2658	1681048	0	True				
ANR	1681072	CallExpression	"memcpy ( & sin , r -> ai_addr , r -> ai_addrlen )"		1681048	0					
ANR	1681073	Callee	memcpy		1681048	0					
ANR	1681074	Identifier	memcpy		1681048	0					
ANR	1681075	ArgumentList	& sin		1681048	1					
ANR	1681076	Argument	& sin		1681048	0					
ANR	1681077	UnaryOperationExpression	& sin		1681048	0					
ANR	1681078	UnaryOperator	&		1681048	0					
ANR	1681079	Identifier	sin		1681048	1					
ANR	1681080	Argument	r -> ai_addr		1681048	1					
ANR	1681081	PtrMemberAccess	r -> ai_addr		1681048	0					
ANR	1681082	Identifier	r		1681048	0					
ANR	1681083	Identifier	ai_addr		1681048	1					
ANR	1681084	Argument	r -> ai_addrlen		1681048	2					
ANR	1681085	PtrMemberAccess	r -> ai_addrlen		1681048	0					
ANR	1681086	Identifier	r		1681048	0					
ANR	1681087	Identifier	ai_addrlen		1681048	1					
ANR	1681088	ReturnStatement	return true ;	124:3:2663:2674	1681048	1	True				
ANR	1681089	Identifier	true		1681048	0					
ANR	1681090	ReturnStatement	return false ;	126:1:2681:2693	1681048	1	True				
ANR	1681091	Identifier	false		1681048	0					
ANR	1681092	ReturnType	bool		1681048	1					
ANR	1681093	Identifier	find_any_ipv4		1681048	2					
ANR	1681094	ParameterList	"addrinfo_iterator & ai , sockaddr_in & sin"		1681048	3					
ANR	1681095	Parameter	addrinfo_iterator & ai	119:19:2503:2523	1681048	0	True				
ANR	1681096	ParameterType	addrinfo_iterator &		1681048	0					
ANR	1681097	Identifier	ai		1681048	1					
ANR	1681098	Parameter	sockaddr_in & sin	119:42:2526:2541	1681048	1	True				
ANR	1681099	ParameterType	sockaddr_in &		1681048	0					
ANR	1681100	Identifier	sin		1681048	1					
ANR	1681101	CFGEntryNode	ENTRY		1681048		True				
ANR	1681102	CFGExitNode	EXIT		1681048		True				
ANR	1681103	Symbol	addrinfo		1681048						
ANR	1681104	Symbol	r -> ai_addr		1681048						
ANR	1681105	Symbol	ai		1681048						
ANR	1681106	Symbol	false		1681048						
ANR	1681107	Symbol	AF_INET		1681048						
ANR	1681108	Symbol	r -> ai_addrlen		1681048						
ANR	1681109	Symbol	r		1681048						
ANR	1681110	Symbol	true		1681048						
ANR	1681111	Symbol	sin		1681048						
ANR	1681112	Symbol	& sin		1681048						
ANR	1681113	Symbol	ai . next		1681048						
ANR	1681114	Symbol	r -> ai_family		1681048						
ANR	1681115	Symbol	* r		1681048						
ANR	1681116	Function	ipv6_getaddrinfo	130:0:2699:2944							
ANR	1681117	FunctionDef	"ipv6_getaddrinfo (const char * node , const char * service , addrinfo_iterator & ai , const addrinfo & hint)"		1681116	0					
ANR	1681118	CompoundStatement		132:0:2806:2944	1681116	0					
ANR	1681119	IdentifierDeclStatement	addrinfo * res = NULL ;	133:1:2809:2829	1681116	0	True				
ANR	1681120	IdentifierDecl	* res = NULL		1681116	0					
ANR	1681121	IdentifierDeclType	addrinfo *		1681116	0					
ANR	1681122	Identifier	res		1681116	1					
ANR	1681123	AssignmentExpression	* res = NULL		1681116	2		=			
ANR	1681124	Identifier	NULL		1681116	0					
ANR	1681125	Identifier	NULL		1681116	1					
ANR	1681126	IdentifierDeclStatement	"int e = getaddrinfo ( node , service , & hint , & res ) ;"	134:1:2832:2880	1681116	1	True				
ANR	1681127	IdentifierDecl	"e = getaddrinfo ( node , service , & hint , & res )"		1681116	0					
ANR	1681128	IdentifierDeclType	int		1681116	0					
ANR	1681129	Identifier	e		1681116	1					
ANR	1681130	AssignmentExpression	"e = getaddrinfo ( node , service , & hint , & res )"		1681116	2		=			
ANR	1681131	Identifier	e		1681116	0					
ANR	1681132	CallExpression	"getaddrinfo ( node , service , & hint , & res )"		1681116	1					
ANR	1681133	Callee	getaddrinfo		1681116	0					
ANR	1681134	Identifier	getaddrinfo		1681116	0					
ANR	1681135	ArgumentList	node		1681116	1					
ANR	1681136	Argument	node		1681116	0					
ANR	1681137	Identifier	node		1681116	0					
ANR	1681138	Argument	service		1681116	1					
ANR	1681139	Identifier	service		1681116	0					
ANR	1681140	Argument	& hint		1681116	2					
ANR	1681141	UnaryOperationExpression	& hint		1681116	0					
ANR	1681142	UnaryOperator	&		1681116	0					
ANR	1681143	Identifier	hint		1681116	1					
ANR	1681144	Argument	& res		1681116	3					
ANR	1681145	UnaryOperationExpression	& res		1681116	0					
ANR	1681146	UnaryOperator	&		1681116	0					
ANR	1681147	Identifier	res		1681116	1					
ANR	1681148	IfStatement	if ( e != 0 )		1681116	2					
ANR	1681149	Condition	e != 0	135:5:2887:2890	1681116	0	True				
ANR	1681150	EqualityExpression	e != 0		1681116	0		!=			
ANR	1681151	Identifier	e		1681116	0					
ANR	1681152	PrimaryExpression	0		1681116	1					
ANR	1681153	ReturnStatement	return e ;	135:11:2893:2901	1681116	1	True				
ANR	1681154	Identifier	e		1681116	0					
ANR	1681155	ExpressionStatement	ai = addrinfo_iterator ( res )	136:1:2904:2931	1681116	3	True				
ANR	1681156	AssignmentExpression	ai = addrinfo_iterator ( res )		1681116	0		=			
ANR	1681157	Identifier	ai		1681116	0					
ANR	1681158	CallExpression	addrinfo_iterator ( res )		1681116	1					
ANR	1681159	Callee	addrinfo_iterator		1681116	0					
ANR	1681160	Identifier	addrinfo_iterator		1681116	0					
ANR	1681161	ArgumentList	res		1681116	1					
ANR	1681162	Argument	res		1681116	0					
ANR	1681163	Identifier	res		1681116	0					
ANR	1681164	ReturnStatement	return 0 ;	137:1:2934:2942	1681116	4	True				
ANR	1681165	PrimaryExpression	0		1681116	0					
ANR	1681166	ReturnType	int		1681116	1					
ANR	1681167	Identifier	ipv6_getaddrinfo		1681116	2					
ANR	1681168	ParameterList	"const char * node , const char * service , addrinfo_iterator & ai , const addrinfo & hint"		1681116	3					
ANR	1681169	Parameter	const char * node	130:21:2720:2735	1681116	0	True				
ANR	1681170	ParameterType	const char *		1681116	0					
ANR	1681171	Identifier	node		1681116	1					
ANR	1681172	Parameter	const char * service	130:39:2738:2756	1681116	1	True				
ANR	1681173	ParameterType	const char *		1681116	0					
ANR	1681174	Identifier	service		1681116	1					
ANR	1681175	Parameter	addrinfo_iterator & ai	131:2:2761:2781	1681116	2	True				
ANR	1681176	ParameterType	addrinfo_iterator &		1681116	0					
ANR	1681177	Identifier	ai		1681116	1					
ANR	1681178	Parameter	const addrinfo & hint	131:25:2784:2803	1681116	3	True				
ANR	1681179	ParameterType	const addrinfo &		1681116	0					
ANR	1681180	Identifier	hint		1681116	1					
ANR	1681181	CFGEntryNode	ENTRY		1681116		True				
ANR	1681182	CFGExitNode	EXIT		1681116		True				
ANR	1681183	Symbol	node		1681116						
ANR	1681184	Symbol	res		1681116						
ANR	1681185	Symbol	& res		1681116						
ANR	1681186	Symbol	addrinfo_iterator		1681116						
ANR	1681187	Symbol	NULL		1681116						
ANR	1681188	Symbol	e		1681116						
ANR	1681189	Symbol	service		1681116						
ANR	1681190	Symbol	hint		1681116						
ANR	1681191	Symbol	ai		1681116						
ANR	1681192	Symbol	getaddrinfo		1681116						
ANR	1681193	Symbol	& hint		1681116						
