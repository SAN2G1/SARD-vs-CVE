command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1138694	File	data/converged/CVE-2011-4930_htcondor/dap_client_interface.cpp								
ANR	1138695	Function	get_stork_sinful_string	34:0:1163:1898							
ANR	1138696	FunctionDef	get_stork_sinful_string (const char * hostname)		1138695	0					
ANR	1138697	CompoundStatement		35:48:1219:1898	1138695	0					
ANR	1138698	IdentifierDeclStatement	MyString _hostname ;	36:2:1223:1241	1138695	0	True				
ANR	1138699	IdentifierDecl	_hostname		1138695	0					
ANR	1138700	IdentifierDeclType	MyString		1138695	0					
ANR	1138701	Identifier	_hostname		1138695	1					
ANR	1138702	IfStatement	"if ( ( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 ) )"		1138695	1					
ANR	1138703	Condition	"( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 )"	37:6:1249:1307	1138695	0	True				
ANR	1138704	OrExpression	"( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 )"		1138695	0		||			
ANR	1138705	EqualityExpression	hostname == NULL		1138695	0		==			
ANR	1138706	Identifier	hostname		1138695	0					
ANR	1138707	Identifier	NULL		1138695	1					
ANR	1138708	EqualityExpression	"strcmp ( hostname , ""localhost"" ) == 0"		1138695	1		==			
ANR	1138709	CallExpression	"strcmp ( hostname , ""localhost"" )"		1138695	0					
ANR	1138710	Callee	strcmp		1138695	0					
ANR	1138711	Identifier	strcmp		1138695	0					
ANR	1138712	ArgumentList	hostname		1138695	1					
ANR	1138713	Argument	hostname		1138695	0					
ANR	1138714	Identifier	hostname		1138695	0					
ANR	1138715	Argument	"""localhost"""		1138695	1					
ANR	1138716	PrimaryExpression	"""localhost"""		1138695	0					
ANR	1138717	PrimaryExpression	0		1138695	1					
ANR	1138718	CompoundStatement		3:67:90:90	1138695	1					
ANR	1138719	ExpressionStatement	_hostname = my_hostname ( )	38:4:1316:1341	1138695	0	True				
ANR	1138720	AssignmentExpression	_hostname = my_hostname ( )		1138695	0		=			
ANR	1138721	Identifier	_hostname		1138695	0					
ANR	1138722	CallExpression	my_hostname ( )		1138695	1					
ANR	1138723	Callee	my_hostname		1138695	0					
ANR	1138724	Identifier	my_hostname		1138695	0					
ANR	1138725	ArgumentList			1138695	1					
ANR	1138726	ElseStatement	else		1138695	0					
ANR	1138727	CompoundStatement		5:9:132:132	1138695	0					
ANR	1138728	ExpressionStatement	_hostname = hostname	40:4:1358:1378	1138695	0	True				
ANR	1138729	AssignmentExpression	_hostname = hostname		1138695	0		=			
ANR	1138730	Identifier	_hostname		1138695	0					
ANR	1138731	Identifier	hostname		1138695	1					
ANR	1138732	IdentifierDeclStatement	char * host = getHostFromAddr ( _hostname . Value ( ) ) ;	43:2:1387:1436	1138695	2	True				
ANR	1138733	IdentifierDecl	* host = getHostFromAddr ( _hostname . Value ( ) )		1138695	0					
ANR	1138734	IdentifierDeclType	char *		1138695	0					
ANR	1138735	Identifier	host		1138695	1					
ANR	1138736	AssignmentExpression	* host = getHostFromAddr ( _hostname . Value ( ) )		1138695	2		=			
ANR	1138737	Identifier	host		1138695	0					
ANR	1138738	CallExpression	getHostFromAddr ( _hostname . Value ( ) )		1138695	1					
ANR	1138739	Callee	getHostFromAddr		1138695	0					
ANR	1138740	Identifier	getHostFromAddr		1138695	0					
ANR	1138741	ArgumentList	_hostname . Value ( )		1138695	1					
ANR	1138742	Argument	_hostname . Value ( )		1138695	0					
ANR	1138743	CallExpression	_hostname . Value ( )		1138695	0					
ANR	1138744	Callee	_hostname . Value		1138695	0					
ANR	1138745	MemberAccess	_hostname . Value		1138695	0					
ANR	1138746	Identifier	_hostname		1138695	0					
ANR	1138747	Identifier	Value		1138695	1					
ANR	1138748	ArgumentList			1138695	1					
ANR	1138749	IdentifierDeclStatement	struct hostent * phe = NULL ;	46:2:1456:1482	1138695	3	True				
ANR	1138750	IdentifierDecl	* phe = NULL		1138695	0					
ANR	1138751	IdentifierDeclType	struct hostent *		1138695	0					
ANR	1138752	Identifier	phe		1138695	1					
ANR	1138753	AssignmentExpression	* phe = NULL		1138695	2		=			
ANR	1138754	Identifier	NULL		1138695	0					
ANR	1138755	Identifier	NULL		1138695	1					
ANR	1138756	IfStatement	if ( host )		1138695	4					
ANR	1138757	Condition	host	47:6:1490:1493	1138695	0	True				
ANR	1138758	Identifier	host		1138695	0					
ANR	1138759	CompoundStatement		13:12:276:276	1138695	1					
ANR	1138760	ExpressionStatement	phe = condor_gethostbyname ( host )	48:4:1502:1532	1138695	0	True				
ANR	1138761	AssignmentExpression	phe = condor_gethostbyname ( host )		1138695	0		=			
ANR	1138762	Identifier	phe		1138695	0					
ANR	1138763	CallExpression	condor_gethostbyname ( host )		1138695	1					
ANR	1138764	Callee	condor_gethostbyname		1138695	0					
ANR	1138765	Identifier	condor_gethostbyname		1138695	0					
ANR	1138766	ArgumentList	host		1138695	1					
ANR	1138767	Argument	host		1138695	0					
ANR	1138768	Identifier	host		1138695	0					
ANR	1138769	IfStatement	if ( ! phe )		1138695	5					
ANR	1138770	Condition	! phe	50:6:1544:1547	1138695	0	True				
ANR	1138771	UnaryOperationExpression	! phe		1138695	0					
ANR	1138772	UnaryOperator	!		1138695	0					
ANR	1138773	Identifier	phe		1138695	1					
ANR	1138774	CompoundStatement		16:12:330:330	1138695	1					
ANR	1138775	ReturnStatement	return NULL ;	51:4:1556:1567	1138695	0	True				
ANR	1138776	Identifier	NULL		1138695	0					
ANR	1138777	IdentifierDeclStatement	struct in_addr addr ;	53:2:1575:1594	1138695	6	True				
ANR	1138778	IdentifierDecl	addr		1138695	0					
ANR	1138779	IdentifierDeclType	struct in_addr		1138695	0					
ANR	1138780	Identifier	addr		1138695	1					
ANR	1138781	ExpressionStatement	"memcpy ( & addr , phe -> h_addr_list [ 0 ] , sizeof ( struct in_addr ) )"	54:2:1598:1656	1138695	7	True				
ANR	1138782	CallExpression	"memcpy ( & addr , phe -> h_addr_list [ 0 ] , sizeof ( struct in_addr ) )"		1138695	0					
ANR	1138783	Callee	memcpy		1138695	0					
ANR	1138784	Identifier	memcpy		1138695	0					
ANR	1138785	ArgumentList	& addr		1138695	1					
ANR	1138786	Argument	& addr		1138695	0					
ANR	1138787	UnaryOperationExpression	& addr		1138695	0					
ANR	1138788	UnaryOperator	&		1138695	0					
ANR	1138789	Identifier	addr		1138695	1					
ANR	1138790	Argument	phe -> h_addr_list [ 0 ]		1138695	1					
ANR	1138791	ArrayIndexing	phe -> h_addr_list [ 0 ]		1138695	0					
ANR	1138792	PtrMemberAccess	phe -> h_addr_list		1138695	0					
ANR	1138793	Identifier	phe		1138695	0					
ANR	1138794	Identifier	h_addr_list		1138695	1					
ANR	1138795	PrimaryExpression	0		1138695	1					
ANR	1138796	Argument	sizeof ( struct in_addr )		1138695	2					
ANR	1138797	SizeofExpression	sizeof ( struct in_addr )		1138695	0					
ANR	1138798	Sizeof	sizeof		1138695	0					
ANR	1138799	SizeofOperand	struct in_addr		1138695	1					
ANR	1138800	IdentifierDeclStatement	char * ip = inet_ntoa ( addr ) ;	55:2:1660:1687	1138695	8	True				
ANR	1138801	IdentifierDecl	* ip = inet_ntoa ( addr )		1138695	0					
ANR	1138802	IdentifierDeclType	char *		1138695	0					
ANR	1138803	Identifier	ip		1138695	1					
ANR	1138804	AssignmentExpression	* ip = inet_ntoa ( addr )		1138695	2		=			
ANR	1138805	Identifier	ip		1138695	0					
ANR	1138806	CallExpression	inet_ntoa ( addr )		1138695	1					
ANR	1138807	Callee	inet_ntoa		1138695	0					
ANR	1138808	Identifier	inet_ntoa		1138695	0					
ANR	1138809	ArgumentList	addr		1138695	1					
ANR	1138810	Argument	addr		1138695	0					
ANR	1138811	Identifier	addr		1138695	0					
ANR	1138812	IdentifierDeclStatement	int port = getPortFromAddr ( hostname ) ;	57:2:1694:1731	1138695	9	True				
ANR	1138813	IdentifierDecl	port = getPortFromAddr ( hostname )		1138695	0					
ANR	1138814	IdentifierDeclType	int		1138695	0					
ANR	1138815	Identifier	port		1138695	1					
ANR	1138816	AssignmentExpression	port = getPortFromAddr ( hostname )		1138695	2		=			
ANR	1138817	Identifier	port		1138695	0					
ANR	1138818	CallExpression	getPortFromAddr ( hostname )		1138695	1					
ANR	1138819	Callee	getPortFromAddr		1138695	0					
ANR	1138820	Identifier	getPortFromAddr		1138695	0					
ANR	1138821	ArgumentList	hostname		1138695	1					
ANR	1138822	Argument	hostname		1138695	0					
ANR	1138823	Identifier	hostname		1138695	0					
ANR	1138824	IfStatement	if ( port == 0 )		1138695	10					
ANR	1138825	Condition	port == 0	58:6:1739:1747	1138695	0	True				
ANR	1138826	EqualityExpression	port == 0		1138695	0		==			
ANR	1138827	Identifier	port		1138695	0					
ANR	1138828	PrimaryExpression	0		1138695	1					
ANR	1138829	ExpressionStatement	port = CLI_AGENT_SUBMIT_TCP_PORT	59:4:1754:1786	1138695	1	True				
ANR	1138830	AssignmentExpression	port = CLI_AGENT_SUBMIT_TCP_PORT		1138695	0		=			
ANR	1138831	Identifier	port		1138695	0					
ANR	1138832	Identifier	CLI_AGENT_SUBMIT_TCP_PORT		1138695	1					
ANR	1138833	IdentifierDeclStatement	char * stork_host = ( char * ) malloc ( 100 ) ;	61:2:1791:1829	1138695	11	True				
ANR	1138834	IdentifierDecl	* stork_host = ( char * ) malloc ( 100 )		1138695	0					
ANR	1138835	IdentifierDeclType	char *		1138695	0					
ANR	1138836	Identifier	stork_host		1138695	1					
ANR	1138837	AssignmentExpression	* stork_host = ( char * ) malloc ( 100 )		1138695	2		=			
ANR	1138838	Identifier	stork_host		1138695	0					
ANR	1138839	CastExpression	( char * ) malloc ( 100 )		1138695	1					
ANR	1138840	CastTarget	char *		1138695	0					
ANR	1138841	CallExpression	malloc ( 100 )		1138695	1					
ANR	1138842	Callee	malloc		1138695	0					
ANR	1138843	Identifier	malloc		1138695	0					
ANR	1138844	ArgumentList	100		1138695	1					
ANR	1138845	Argument	100		1138695	0					
ANR	1138846	PrimaryExpression	100		1138695	0					
ANR	1138847	ExpressionStatement	"generate_sinful ( stork_host , 100 , ip , port )"	62:2:1833:1875	1138695	12	True				
ANR	1138848	CallExpression	"generate_sinful ( stork_host , 100 , ip , port )"		1138695	0					
ANR	1138849	Callee	generate_sinful		1138695	0					
ANR	1138850	Identifier	generate_sinful		1138695	0					
ANR	1138851	ArgumentList	stork_host		1138695	1					
ANR	1138852	Argument	stork_host		1138695	0					
ANR	1138853	Identifier	stork_host		1138695	0					
ANR	1138854	Argument	100		1138695	1					
ANR	1138855	PrimaryExpression	100		1138695	0					
ANR	1138856	Argument	ip		1138695	2					
ANR	1138857	Identifier	ip		1138695	0					
ANR	1138858	Argument	port		1138695	3					
ANR	1138859	Identifier	port		1138695	0					
ANR	1138860	ReturnStatement	return stork_host ;	63:2:1879:1896	1138695	13	True				
ANR	1138861	Identifier	stork_host		1138695	0					
ANR	1138862	ReturnType	char *		1138695	1					
ANR	1138863	Identifier	get_stork_sinful_string		1138695	2					
ANR	1138864	ParameterList	const char * hostname		1138695	3					
ANR	1138865	Parameter	const char * hostname	35:25:1196:1216	1138695	0	True				
ANR	1138866	ParameterType	const char *		1138695	0					
ANR	1138867	Identifier	hostname		1138695	1					
ANR	1138868	CFGEntryNode	ENTRY		1138695		True				
ANR	1138869	CFGExitNode	EXIT		1138695		True				
ANR	1138870	Symbol	strcmp		1138695						
ANR	1138871	Symbol	* * phe		1138695						
ANR	1138872	Symbol	malloc		1138695						
ANR	1138873	Symbol	condor_gethostbyname		1138695						
ANR	1138874	Symbol	NULL		1138695						
ANR	1138875	Symbol	& addr		1138695						
ANR	1138876	Symbol	ip		1138695						
ANR	1138877	Symbol	_hostname . Value		1138695						
ANR	1138878	Symbol	* phe -> h_addr_list		1138695						
ANR	1138879	Symbol	inet_ntoa		1138695						
ANR	1138880	Symbol	stork_host		1138695						
ANR	1138881	Symbol	phe		1138695						
ANR	1138882	Symbol	getHostFromAddr		1138695						
ANR	1138883	Symbol	hostname		1138695						
ANR	1138884	Symbol	_hostname		1138695						
ANR	1138885	Symbol	phe -> h_addr_list		1138695						
ANR	1138886	Symbol	port		1138695						
ANR	1138887	Symbol	* phe		1138695						
ANR	1138888	Symbol	host		1138695						
ANR	1138889	Symbol	my_hostname		1138695						
ANR	1138890	Symbol	addr		1138695						
ANR	1138891	Symbol	CLI_AGENT_SUBMIT_TCP_PORT		1138695						
ANR	1138892	Symbol	getPortFromAddr		1138695						
ANR	1138893	Function	stork_version	66:0:1901:1994							
ANR	1138894	FunctionDef	stork_version ()		1138893	0					
ANR	1138895	CompoundStatement		68:0:1922:1994	1138893	0					
ANR	1138896	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	69:4:1928:1983	1138893	0	True				
ANR	1138897	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		1138893	0					
ANR	1138898	Callee	printf		1138893	0					
ANR	1138899	Identifier	printf		1138893	0					
ANR	1138900	ArgumentList	"""%s\\n%s\\n"""		1138893	1					
ANR	1138901	Argument	"""%s\\n%s\\n"""		1138893	0					
ANR	1138902	PrimaryExpression	"""%s\\n%s\\n"""		1138893	0					
ANR	1138903	Argument	CondorVersion ( )		1138893	1					
ANR	1138904	CallExpression	CondorVersion ( )		1138893	0					
ANR	1138905	Callee	CondorVersion		1138893	0					
ANR	1138906	Identifier	CondorVersion		1138893	0					
ANR	1138907	ArgumentList			1138893	1					
ANR	1138908	Argument	CondorPlatform ( )		1138893	2					
ANR	1138909	CallExpression	CondorPlatform ( )		1138893	0					
ANR	1138910	Callee	CondorPlatform		1138893	0					
ANR	1138911	Identifier	CondorPlatform		1138893	0					
ANR	1138912	ArgumentList			1138893	1					
ANR	1138913	ReturnStatement	return ;	70:1:1986:1992	1138893	1	True				
ANR	1138914	ReturnType	void		1138893	1					
ANR	1138915	Identifier	stork_version		1138893	2					
ANR	1138916	ParameterList			1138893	3					
ANR	1138917	CFGEntryNode	ENTRY		1138893		True				
ANR	1138918	CFGExitNode	EXIT		1138893		True				
ANR	1138919	Symbol	CondorVersion		1138893						
ANR	1138920	Symbol	CondorPlatform		1138893						
ANR	1138921	Function	stork_print_usage	73:0:1997:2604							
ANR	1138922	FunctionDef	"stork_print_usage (FILE * stream , const char * argv0 , const char * usage , bool remote_connect)"		1138921	0					
ANR	1138923	CompoundStatement		80:0:2099:2604	1138921	0					
ANR	1138924	IdentifierDeclStatement	const char * my_name = NULL ;	81:1:2102:2128	1138921	0	True				
ANR	1138925	IdentifierDecl	* my_name = NULL		1138921	0					
ANR	1138926	IdentifierDeclType	const char *		1138921	0					
ANR	1138927	Identifier	my_name		1138921	1					
ANR	1138928	AssignmentExpression	* my_name = NULL		1138921	2		=			
ANR	1138929	Identifier	NULL		1138921	0					
ANR	1138930	Identifier	NULL		1138921	1					
ANR	1138931	ExpressionStatement	"my_name = strrchr ( argv0 , DIR_DELIM_CHAR )"	82:1:2131:2173	1138921	1	True				
ANR	1138932	AssignmentExpression	"my_name = strrchr ( argv0 , DIR_DELIM_CHAR )"		1138921	0		=			
ANR	1138933	Identifier	my_name		1138921	0					
ANR	1138934	CallExpression	"strrchr ( argv0 , DIR_DELIM_CHAR )"		1138921	1					
ANR	1138935	Callee	strrchr		1138921	0					
ANR	1138936	Identifier	strrchr		1138921	0					
ANR	1138937	ArgumentList	argv0		1138921	1					
ANR	1138938	Argument	argv0		1138921	0					
ANR	1138939	Identifier	argv0		1138921	0					
ANR	1138940	Argument	DIR_DELIM_CHAR		1138921	1					
ANR	1138941	Identifier	DIR_DELIM_CHAR		1138921	0					
ANR	1138942	IfStatement	if ( ! my_name )		1138921	2					
ANR	1138943	Condition	! my_name	83:5:2180:2187	1138921	0	True				
ANR	1138944	UnaryOperationExpression	! my_name		1138921	0					
ANR	1138945	UnaryOperator	!		1138921	0					
ANR	1138946	Identifier	my_name		1138921	1					
ANR	1138947	CompoundStatement		4:16:91:91	1138921	1					
ANR	1138948	ExpressionStatement	my_name = argv0	84:2:2195:2210	1138921	0	True				
ANR	1138949	AssignmentExpression	my_name = argv0		1138921	0		=			
ANR	1138950	Identifier	my_name		1138921	0					
ANR	1138951	Identifier	argv0		1138921	1					
ANR	1138952	ElseStatement	else		1138921	0					
ANR	1138953	CompoundStatement		6:8:120:120	1138921	0					
ANR	1138954	ExpressionStatement	my_name ++	86:2:2224:2233	1138921	0	True				
ANR	1138955	PostIncDecOperationExpression	my_name ++		1138921	0					
ANR	1138956	Identifier	my_name		1138921	0					
ANR	1138957	IncDec	++		1138921	1					
ANR	1138958	ExpressionStatement	"fprintf ( stream , ""usage: %s  [option]... %s\\n"" , my_name , usage )"	88:1:2239:2302	1138921	3	True				
ANR	1138959	CallExpression	"fprintf ( stream , ""usage: %s  [option]... %s\\n"" , my_name , usage )"		1138921	0					
ANR	1138960	Callee	fprintf		1138921	0					
ANR	1138961	Identifier	fprintf		1138921	0					
ANR	1138962	ArgumentList	stream		1138921	1					
ANR	1138963	Argument	stream		1138921	0					
ANR	1138964	Identifier	stream		1138921	0					
ANR	1138965	Argument	"""usage: %s  [option]... %s\\n"""		1138921	1					
ANR	1138966	PrimaryExpression	"""usage: %s  [option]... %s\\n"""		1138921	0					
ANR	1138967	Argument	my_name		1138921	2					
ANR	1138968	Identifier	my_name		1138921	0					
ANR	1138969	Argument	usage		1138921	3					
ANR	1138970	Identifier	usage		1138921	0					
ANR	1138971	ExpressionStatement	"fprintf ( stream , ""\\t-help\\t\\t\\tprint this help information\\n"" )"	89:1:2305:2367	1138921	4	True				
ANR	1138972	CallExpression	"fprintf ( stream , ""\\t-help\\t\\t\\tprint this help information\\n"" )"		1138921	0					
ANR	1138973	Callee	fprintf		1138921	0					
ANR	1138974	Identifier	fprintf		1138921	0					
ANR	1138975	ArgumentList	stream		1138921	1					
ANR	1138976	Argument	stream		1138921	0					
ANR	1138977	Identifier	stream		1138921	0					
ANR	1138978	Argument	"""\\t-help\\t\\t\\tprint this help information\\n"""		1138921	1					
ANR	1138979	PrimaryExpression	"""\\t-help\\t\\t\\tprint this help information\\n"""		1138921	0					
ANR	1138980	ExpressionStatement	"fprintf ( stream , ""\\t-version\\t\\tprint version information\\n"" )"	90:1:2370:2431	1138921	5	True				
ANR	1138981	CallExpression	"fprintf ( stream , ""\\t-version\\t\\tprint version information\\n"" )"		1138921	0					
ANR	1138982	Callee	fprintf		1138921	0					
ANR	1138983	Identifier	fprintf		1138921	0					
ANR	1138984	ArgumentList	stream		1138921	1					
ANR	1138985	Argument	stream		1138921	0					
ANR	1138986	Identifier	stream		1138921	0					
ANR	1138987	Argument	"""\\t-version\\t\\tprint version information\\n"""		1138921	1					
ANR	1138988	PrimaryExpression	"""\\t-version\\t\\tprint version information\\n"""		1138921	0					
ANR	1138989	IfStatement	if ( remote_connect )		1138921	6					
ANR	1138990	Condition	remote_connect	91:5:2438:2451	1138921	0	True				
ANR	1138991	Identifier	remote_connect		1138921	0					
ANR	1138992	CompoundStatement		12:21:354:354	1138921	1					
ANR	1138993	ExpressionStatement	"fprintf ( stream , ""\\t-debug\\t\\t\\tprint debugging information to console\\n"" )"	92:1:2457:2531	1138921	0	True				
ANR	1138994	CallExpression	"fprintf ( stream , ""\\t-debug\\t\\t\\tprint debugging information to console\\n"" )"		1138921	0					
ANR	1138995	Callee	fprintf		1138921	0					
ANR	1138996	Identifier	fprintf		1138921	0					
ANR	1138997	ArgumentList	stream		1138921	1					
ANR	1138998	Argument	stream		1138921	0					
ANR	1138999	Identifier	stream		1138921	0					
ANR	1139000	Argument	"""\\t-debug\\t\\t\\tprint debugging information to console\\n"""		1138921	1					
ANR	1139001	PrimaryExpression	"""\\t-debug\\t\\t\\tprint debugging information to console\\n"""		1138921	0					
ANR	1139002	ExpressionStatement	"fprintf ( stream , ""\\t-name stork_server\\tstork server\\n"" )"	93:1:2534:2590	1138921	1	True				
ANR	1139003	CallExpression	"fprintf ( stream , ""\\t-name stork_server\\tstork server\\n"" )"		1138921	0					
ANR	1139004	Callee	fprintf		1138921	0					
ANR	1139005	Identifier	fprintf		1138921	0					
ANR	1139006	ArgumentList	stream		1138921	1					
ANR	1139007	Argument	stream		1138921	0					
ANR	1139008	Identifier	stream		1138921	0					
ANR	1139009	Argument	"""\\t-name stork_server\\tstork server\\n"""		1138921	1					
ANR	1139010	PrimaryExpression	"""\\t-name stork_server\\tstork server\\n"""		1138921	0					
ANR	1139011	ReturnStatement	return ;	95:1:2596:2602	1138921	7	True				
ANR	1139012	ReturnType	void		1138921	1					
ANR	1139013	Identifier	stork_print_usage		1138921	2					
ANR	1139014	ParameterList	"FILE * stream , const char * argv0 , const char * usage , bool remote_connect"		1138921	3					
ANR	1139015	Parameter	FILE * stream	75:1:2022:2033	1138921	0	True				
ANR	1139016	ParameterType	FILE *		1138921	0					
ANR	1139017	Identifier	stream		1138921	1					
ANR	1139018	Parameter	const char * argv0	76:1:2037:2053	1138921	1	True				
ANR	1139019	ParameterType	const char *		1138921	0					
ANR	1139020	Identifier	argv0		1138921	1					
ANR	1139021	Parameter	const char * usage	77:1:2057:2073	1138921	2	True				
ANR	1139022	ParameterType	const char *		1138921	0					
ANR	1139023	Identifier	usage		1138921	1					
ANR	1139024	Parameter	bool remote_connect	78:1:2077:2095	1138921	3	True				
ANR	1139025	ParameterType	bool		1138921	0					
ANR	1139026	Identifier	remote_connect		1138921	1					
ANR	1139027	CFGEntryNode	ENTRY		1138921		True				
ANR	1139028	CFGExitNode	EXIT		1138921		True				
ANR	1139029	Symbol	my_name		1138921						
ANR	1139030	Symbol	NULL		1138921						
ANR	1139031	Symbol	stream		1138921						
ANR	1139032	Symbol	strrchr		1138921						
ANR	1139033	Symbol	usage		1138921						
ANR	1139034	Symbol	DIR_DELIM_CHAR		1138921						
ANR	1139035	Symbol	argv0		1138921						
ANR	1139036	Symbol	remote_connect		1138921						
ANR	1139037	Function	stork_parse_global_opts	98:0:2607:4020							
ANR	1139038	FunctionDef	"stork_parse_global_opts (int & argc , char * argv [ ] , const char * usage , struct stork_global_opts * parsed , bool remote_connect)"		1139037	0					
ANR	1139039	CompoundStatement		106:0:2744:4020	1139037	0					
ANR	1139040	IdentifierDeclStatement	const char * argv0 = argv [ 0 ] ;	107:1:2747:2774	1139037	0	True				
ANR	1139041	IdentifierDecl	* argv0 = argv [ 0 ]		1139037	0					
ANR	1139042	IdentifierDeclType	const char *		1139037	0					
ANR	1139043	Identifier	argv0		1139037	1					
ANR	1139044	AssignmentExpression	* argv0 = argv [ 0 ]		1139037	2		=			
ANR	1139045	Identifier	argv0		1139037	0					
ANR	1139046	ArrayIndexing	argv [ 0 ]		1139037	1					
ANR	1139047	Identifier	argv		1139037	0					
ANR	1139048	PrimaryExpression	0		1139037	1					
ANR	1139049	IdentifierDeclStatement	int local_argc = 0 ;	108:1:2777:2795	1139037	1	True				
ANR	1139050	IdentifierDecl	local_argc = 0		1139037	0					
ANR	1139051	IdentifierDeclType	int		1139037	0					
ANR	1139052	Identifier	local_argc		1139037	1					
ANR	1139053	AssignmentExpression	local_argc = 0		1139037	2		=			
ANR	1139054	Identifier	local_argc		1139037	0					
ANR	1139055	PrimaryExpression	0		1139037	1					
ANR	1139056	ExpressionStatement	"memset ( parsed , 0 , sizeof ( * parsed ) )"	109:1:2835:2870	1139037	2	True				
ANR	1139057	CallExpression	"memset ( parsed , 0 , sizeof ( * parsed ) )"		1139037	0					
ANR	1139058	Callee	memset		1139037	0					
ANR	1139059	Identifier	memset		1139037	0					
ANR	1139060	ArgumentList	parsed		1139037	1					
ANR	1139061	Argument	parsed		1139037	0					
ANR	1139062	Identifier	parsed		1139037	0					
ANR	1139063	Argument	0		1139037	1					
ANR	1139064	PrimaryExpression	0		1139037	0					
ANR	1139065	Argument	sizeof ( * parsed )		1139037	2					
ANR	1139066	SizeofExpression	sizeof ( * parsed )		1139037	0					
ANR	1139067	Sizeof	sizeof		1139037	0					
ANR	1139068	UnaryOperationExpression	* parsed		1139037	1					
ANR	1139069	UnaryOperator	*		1139037	0					
ANR	1139070	Identifier	parsed		1139037	1					
ANR	1139071	IdentifierDeclStatement	char * * tmp1 = argv ;	110:1:2895:2913	1139037	3	True				
ANR	1139072	IdentifierDecl	* * tmp1 = argv		1139037	0					
ANR	1139073	IdentifierDeclType	char * *		1139037	0					
ANR	1139074	Identifier	tmp1		1139037	1					
ANR	1139075	AssignmentExpression	* * tmp1 = argv		1139037	2		=			
ANR	1139076	Identifier	argv		1139037	0					
ANR	1139077	Identifier	argv		1139037	1					
ANR	1139078	ForStatement	for ( tmp1 ++ ; * tmp1 ; tmp1 ++ )		1139037	4					
ANR	1139079	ForInit	tmp1 ++ ;	112:6:2922:2928	1139037	0	True				
ANR	1139080	PostIncDecOperationExpression	tmp1 ++		1139037	0					
ANR	1139081	Identifier	tmp1		1139037	0					
ANR	1139082	IncDec	++		1139037	1					
ANR	1139083	Condition	* tmp1	112:14:2930:2934	1139037	1	True				
ANR	1139084	UnaryOperationExpression	* tmp1		1139037	0					
ANR	1139085	UnaryOperator	*		1139037	0					
ANR	1139086	Identifier	tmp1		1139037	1					
ANR	1139087	PostIncDecOperationExpression	tmp1 ++	112:21:2937:2942	1139037	2	True				
ANR	1139088	Identifier	tmp1		1139037	0					
ANR	1139089	IncDec	++		1139037	1					
ANR	1139090	CompoundStatement		7:30:201:201	1139037	3					
ANR	1139091	IfStatement	if ( ( * tmp1 ) [ 0 ] != '-' )		1139037	0					
ANR	1139092	Condition	( * tmp1 ) [ 0 ] != '-'	113:7:2955:2971	1139037	0	True				
ANR	1139093	EqualityExpression	( * tmp1 ) [ 0 ] != '-'		1139037	0		!=			
ANR	1139094	ArrayIndexing	( * tmp1 ) [ 0 ]		1139037	0					
ANR	1139095	UnaryOperationExpression	* tmp1		1139037	0					
ANR	1139096	UnaryOperator	*		1139037	0					
ANR	1139097	Identifier	tmp1		1139037	1					
ANR	1139098	PrimaryExpression	0		1139037	1					
ANR	1139099	PrimaryExpression	'-'		1139037	1					
ANR	1139100	CompoundStatement		8:27:230:230	1139037	1					
ANR	1139101	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	115:3:3024:3052	1139037	0	True				
ANR	1139102	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		1139037	0		=			
ANR	1139103	ArrayIndexing	argv [ ++ local_argc ]		1139037	0					
ANR	1139104	Identifier	argv		1139037	0					
ANR	1139105	UnaryExpression	++ local_argc		1139037	1					
ANR	1139106	IncDec	++		1139037	0					
ANR	1139107	Identifier	local_argc		1139037	1					
ANR	1139108	UnaryOperationExpression	* tmp1		1139037	1					
ANR	1139109	UnaryOperator	*		1139037	0					
ANR	1139110	Identifier	tmp1		1139037	1					
ANR	1139111	ContinueStatement	continue ;	116:3:3081:3089	1139037	1	True				
ANR	1139112	SwitchStatement	switch ( ( * tmp1 ) [ 1 ] )		1139037	1					
ANR	1139113	Condition	( * tmp1 ) [ 1 ]	118:10:3111:3120	1139037	0	True				
ANR	1139114	ArrayIndexing	( * tmp1 ) [ 1 ]		1139037	0					
ANR	1139115	UnaryOperationExpression	* tmp1		1139037	0					
ANR	1139116	UnaryOperator	*		1139037	0					
ANR	1139117	Identifier	tmp1		1139037	1					
ANR	1139118	PrimaryExpression	1		1139037	1					
ANR	1139119	CompoundStatement		13:23:379:379	1139037	1					
ANR	1139120	Label	case 'h' :	119:3:3129:3137	1139037	0	True				
ANR	1139121	ExpressionStatement	"stork_print_usage ( stdout , argv0 , usage , remote_connect )"	121:4:3156:3211	1139037	1	True				
ANR	1139122	CallExpression	"stork_print_usage ( stdout , argv0 , usage , remote_connect )"		1139037	0					
ANR	1139123	Callee	stork_print_usage		1139037	0					
ANR	1139124	Identifier	stork_print_usage		1139037	0					
ANR	1139125	ArgumentList	stdout		1139037	1					
ANR	1139126	Argument	stdout		1139037	0					
ANR	1139127	Identifier	stdout		1139037	0					
ANR	1139128	Argument	argv0		1139037	1					
ANR	1139129	Identifier	argv0		1139037	0					
ANR	1139130	Argument	usage		1139037	2					
ANR	1139131	Identifier	usage		1139037	0					
ANR	1139132	Argument	remote_connect		1139037	3					
ANR	1139133	Identifier	remote_connect		1139037	0					
ANR	1139134	ExpressionStatement	exit ( 0 )	122:4:3217:3224	1139037	2	True				
ANR	1139135	CallExpression	exit ( 0 )		1139037	0					
ANR	1139136	Callee	exit		1139037	0					
ANR	1139137	Identifier	exit		1139037	0					
ANR	1139138	ArgumentList	0		1139037	1					
ANR	1139139	Argument	0		1139037	0					
ANR	1139140	PrimaryExpression	0		1139037	0					
ANR	1139141	Label	case 'v' :	123:3:3229:3237	1139037	3	True				
ANR	1139142	ExpressionStatement	stork_version ( )	124:4:3243:3258	1139037	4	True				
ANR	1139143	CallExpression	stork_version ( )		1139037	0					
ANR	1139144	Callee	stork_version		1139037	0					
ANR	1139145	Identifier	stork_version		1139037	0					
ANR	1139146	ArgumentList			1139037	1					
ANR	1139147	ExpressionStatement	exit ( 0 )	125:4:3264:3271	1139037	5	True				
ANR	1139148	CallExpression	exit ( 0 )		1139037	0					
ANR	1139149	Callee	exit		1139037	0					
ANR	1139150	Identifier	exit		1139037	0					
ANR	1139151	ArgumentList	0		1139037	1					
ANR	1139152	Argument	0		1139037	0					
ANR	1139153	PrimaryExpression	0		1139037	0					
ANR	1139154	Label	case 'd' :	126:3:3276:3284	1139037	6	True				
ANR	1139155	ExpressionStatement	Termlog = 1	128:4:3304:3315	1139037	7	True				
ANR	1139156	AssignmentExpression	Termlog = 1		1139037	0		=			
ANR	1139157	Identifier	Termlog		1139037	0					
ANR	1139158	PrimaryExpression	1		1139037	1					
ANR	1139159	ExpressionStatement	"dprintf_config ( ""TOOL"" )"	129:4:3321:3344	1139037	8	True				
ANR	1139160	CallExpression	"dprintf_config ( ""TOOL"" )"		1139037	0					
ANR	1139161	Callee	dprintf_config		1139037	0					
ANR	1139162	Identifier	dprintf_config		1139037	0					
ANR	1139163	ArgumentList	"""TOOL"""		1139037	1					
ANR	1139164	Argument	"""TOOL"""		1139037	0					
ANR	1139165	PrimaryExpression	"""TOOL"""		1139037	0					
ANR	1139166	ExpressionStatement	argc --	130:4:3350:3356	1139037	9	True				
ANR	1139167	PostIncDecOperationExpression	argc --		1139037	0					
ANR	1139168	Identifier	argc		1139037	0					
ANR	1139169	IncDec	--		1139037	1					
ANR	1139170	BreakStatement	break ;	131:4:3402:3407	1139037	10	True				
ANR	1139171	Label	case 'n' :	132:3:3412:3420	1139037	11	True				
ANR	1139172	IfStatement	if ( remote_connect )		1139037	12					
ANR	1139173	Condition	remote_connect	133:8:3430:3443	1139037	0	True				
ANR	1139174	Identifier	remote_connect		1139037	0					
ANR	1139175	CompoundStatement		28:24:701:701	1139037	1					
ANR	1139176	ExpressionStatement	argc --	135:5:3484:3490	1139037	0	True				
ANR	1139177	PostIncDecOperationExpression	argc --		1139037	0					
ANR	1139178	Identifier	argc		1139037	0					
ANR	1139179	IncDec	--		1139037	1					
ANR	1139180	ExpressionStatement	tmp1 ++	136:5:3537:3543	1139037	1	True				
ANR	1139181	PostIncDecOperationExpression	tmp1 ++		1139037	0					
ANR	1139182	Identifier	tmp1		1139037	0					
ANR	1139183	IncDec	++		1139037	1					
ANR	1139184	IfStatement	if ( tmp1 && * tmp1 )		1139037	2					
ANR	1139185	Condition	tmp1 && * tmp1	137:10:3555:3567	1139037	0	True				
ANR	1139186	AndExpression	tmp1 && * tmp1		1139037	0		&&			
ANR	1139187	Identifier	tmp1		1139037	0					
ANR	1139188	UnaryOperationExpression	* tmp1		1139037	1					
ANR	1139189	UnaryOperator	*		1139037	0					
ANR	1139190	Identifier	tmp1		1139037	1					
ANR	1139191	CompoundStatement		32:26:826:826	1139037	1					
ANR	1139192	ExpressionStatement	parsed -> server = * tmp1	138:6:3579:3601	1139037	0	True				
ANR	1139193	AssignmentExpression	parsed -> server = * tmp1		1139037	0		=			
ANR	1139194	PtrMemberAccess	parsed -> server		1139037	0					
ANR	1139195	Identifier	parsed		1139037	0					
ANR	1139196	Identifier	server		1139037	1					
ANR	1139197	UnaryOperationExpression	* tmp1		1139037	1					
ANR	1139198	UnaryOperator	*		1139037	0					
ANR	1139199	Identifier	tmp1		1139037	1					
ANR	1139200	ExpressionStatement	argc --	139:6:3609:3615	1139037	1	True				
ANR	1139201	PostIncDecOperationExpression	argc --		1139037	0					
ANR	1139202	Identifier	argc		1139037	0					
ANR	1139203	IncDec	--		1139037	1					
ANR	1139204	ElseStatement	else		1139037	0					
ANR	1139205	CompoundStatement		35:12:924:924	1139037	0					
ANR	1139206	ExpressionStatement	"fprintf ( stderr , ""-name requires another argument\\n"" )"	141:6:3677:3729	1139037	0	True				
ANR	1139207	CallExpression	"fprintf ( stderr , ""-name requires another argument\\n"" )"		1139037	0					
ANR	1139208	Callee	fprintf		1139037	0					
ANR	1139209	Identifier	fprintf		1139037	0					
ANR	1139210	ArgumentList	stderr		1139037	1					
ANR	1139211	Argument	stderr		1139037	0					
ANR	1139212	Identifier	stderr		1139037	0					
ANR	1139213	Argument	"""-name requires another argument\\n"""		1139037	1					
ANR	1139214	PrimaryExpression	"""-name requires another argument\\n"""		1139037	0					
ANR	1139215	ExpressionStatement	"stork_print_usage ( stderr , argv0 , usage , remote_connect )"	142:6:3737:3789	1139037	1	True				
ANR	1139216	CallExpression	"stork_print_usage ( stderr , argv0 , usage , remote_connect )"		1139037	0					
ANR	1139217	Callee	stork_print_usage		1139037	0					
ANR	1139218	Identifier	stork_print_usage		1139037	0					
ANR	1139219	ArgumentList	stderr		1139037	1					
ANR	1139220	Argument	stderr		1139037	0					
ANR	1139221	Identifier	stderr		1139037	0					
ANR	1139222	Argument	argv0		1139037	1					
ANR	1139223	Identifier	argv0		1139037	0					
ANR	1139224	Argument	usage		1139037	2					
ANR	1139225	Identifier	usage		1139037	0					
ANR	1139226	Argument	remote_connect		1139037	3					
ANR	1139227	Identifier	remote_connect		1139037	0					
ANR	1139228	ExpressionStatement	exit ( 1 )	143:6:3797:3804	1139037	2	True				
ANR	1139229	CallExpression	exit ( 1 )		1139037	0					
ANR	1139230	Callee	exit		1139037	0					
ANR	1139231	Identifier	exit		1139037	0					
ANR	1139232	ArgumentList	1		1139037	1					
ANR	1139233	Argument	1		1139037	0					
ANR	1139234	PrimaryExpression	1		1139037	0					
ANR	1139235	ElseStatement	else		1139037	0					
ANR	1139236	CompoundStatement		40:11:1079:1079	1139037	0					
ANR	1139237	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	146:5:3831:3859	1139037	0	True				
ANR	1139238	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		1139037	0		=			
ANR	1139239	ArrayIndexing	argv [ ++ local_argc ]		1139037	0					
ANR	1139240	Identifier	argv		1139037	0					
ANR	1139241	UnaryExpression	++ local_argc		1139037	1					
ANR	1139242	IncDec	++		1139037	0					
ANR	1139243	Identifier	local_argc		1139037	1					
ANR	1139244	UnaryOperationExpression	* tmp1		1139037	1					
ANR	1139245	UnaryOperator	*		1139037	0					
ANR	1139246	Identifier	tmp1		1139037	1					
ANR	1139247	BreakStatement	break ;	148:4:3895:3900	1139037	13	True				
ANR	1139248	Label	default :	149:3:3905:3912	1139037	14	True				
ANR	1139249	Identifier	default		1139037	0					
ANR	1139250	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	150:4:3918:3946	1139037	15	True				
ANR	1139251	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		1139037	0		=			
ANR	1139252	ArrayIndexing	argv [ ++ local_argc ]		1139037	0					
ANR	1139253	Identifier	argv		1139037	0					
ANR	1139254	UnaryExpression	++ local_argc		1139037	1					
ANR	1139255	IncDec	++		1139037	0					
ANR	1139256	Identifier	local_argc		1139037	1					
ANR	1139257	UnaryOperationExpression	* tmp1		1139037	1					
ANR	1139258	UnaryOperator	*		1139037	0					
ANR	1139259	Identifier	tmp1		1139037	1					
ANR	1139260	BreakStatement	break ;	151:4:3976:3981	1139037	16	True				
ANR	1139261	ExpressionStatement	argv [ ++ local_argc ] = NULL	154:1:3991:4018	1139037	5	True				
ANR	1139262	AssignmentExpression	argv [ ++ local_argc ] = NULL		1139037	0		=			
ANR	1139263	ArrayIndexing	argv [ ++ local_argc ]		1139037	0					
ANR	1139264	Identifier	argv		1139037	0					
ANR	1139265	UnaryExpression	++ local_argc		1139037	1					
ANR	1139266	IncDec	++		1139037	0					
ANR	1139267	Identifier	local_argc		1139037	1					
ANR	1139268	Identifier	NULL		1139037	1					
ANR	1139269	ReturnType	void		1139037	1					
ANR	1139270	Identifier	stork_parse_global_opts		1139037	2					
ANR	1139271	ParameterList	"int & argc , char * argv [ ] , const char * usage , struct stork_global_opts * parsed , bool remote_connect"		1139037	3					
ANR	1139272	Parameter	int & argc	100:1:2638:2648	1139037	0	True				
ANR	1139273	ParameterType	int &		1139037	0					
ANR	1139274	Identifier	argc		1139037	1					
ANR	1139275	Parameter	char * argv [ ]	101:1:2652:2663	1139037	1	True				
ANR	1139276	ParameterType	char * [ ]		1139037	0					
ANR	1139277	Identifier	argv		1139037	1					
ANR	1139278	Parameter	const char * usage	102:1:2667:2683	1139037	2	True				
ANR	1139279	ParameterType	const char *		1139037	0					
ANR	1139280	Identifier	usage		1139037	1					
ANR	1139281	Parameter	struct stork_global_opts * parsed	103:1:2687:2718	1139037	3	True				
ANR	1139282	ParameterType	struct stork_global_opts *		1139037	0					
ANR	1139283	Identifier	parsed		1139037	1					
ANR	1139284	Parameter	bool remote_connect	104:1:2722:2740	1139037	4	True				
ANR	1139285	ParameterType	bool		1139037	0					
ANR	1139286	Identifier	remote_connect		1139037	1					
ANR	1139287	CFGEntryNode	ENTRY		1139037		True				
ANR	1139288	CFGExitNode	EXIT		1139037		True				
ANR	1139289	Symbol	argc		1139037						
ANR	1139290	Symbol	* parsed		1139037						
ANR	1139291	Symbol	NULL		1139037						
ANR	1139292	Symbol	stdout		1139037						
ANR	1139293	Symbol	Termlog		1139037						
ANR	1139294	Symbol	usage		1139037						
ANR	1139295	Symbol	* argv		1139037						
ANR	1139296	Symbol	parsed -> server		1139037						
ANR	1139297	Symbol	tmp1		1139037						
ANR	1139298	Symbol	stderr		1139037						
ANR	1139299	Symbol	argv		1139037						
ANR	1139300	Symbol	local_argc		1139037						
ANR	1139301	Symbol	* tmp1		1139037						
ANR	1139302	Symbol	parsed		1139037						
ANR	1139303	Symbol	* * tmp1		1139037						
ANR	1139304	Symbol	remote_connect		1139037						
ANR	1139305	Symbol	argv0		1139037						
ANR	1139306	Symbol	* local_argc		1139037						
ANR	1139307	Function	start_stork_command_and_authenticate	157:0:4023:4716							
ANR	1139308	FunctionDef	"start_stork_command_and_authenticate (const char * stork_host , const int command , MyString & error_reason)"		1139307	0					
ANR	1139309	CompoundStatement		161:31:4156:4716	1139307	0					
ANR	1139310	IdentifierDeclStatement	"Daemon my_stork ( DT_STORK , stork_host , NULL ) ;"	163:1:4160:4203	1139307	0	True				
ANR	1139311	IdentifierDecl	"my_stork ( DT_STORK , stork_host , NULL )"		1139307	0					
ANR	1139312	IdentifierDeclType	Daemon		1139307	0					
ANR	1139313	Identifier	my_stork		1139307	1					
ANR	1139314	Expression	"DT_STORK , stork_host , NULL"		1139307	2					
ANR	1139315	Identifier	DT_STORK		1139307	0					
ANR	1139316	Expression	"stork_host , NULL"		1139307	1					
ANR	1139317	Identifier	stork_host		1139307	0					
ANR	1139318	Identifier	NULL		1139307	1					
ANR	1139319	IdentifierDeclStatement	"Sock * sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 ) ;"	165:1:4207:4295	1139307	1	True				
ANR	1139320	IdentifierDecl	"* sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		1139307	0					
ANR	1139321	IdentifierDeclType	Sock *		1139307	0					
ANR	1139322	Identifier	sock		1139307	1					
ANR	1139323	AssignmentExpression	"* sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		1139307	2		=			
ANR	1139324	Identifier	sock		1139307	0					
ANR	1139325	CallExpression	"my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		1139307	1					
ANR	1139326	Callee	my_stork . startCommand		1139307	0					
ANR	1139327	MemberAccess	my_stork . startCommand		1139307	0					
ANR	1139328	Identifier	my_stork		1139307	0					
ANR	1139329	Identifier	startCommand		1139307	1					
ANR	1139330	ArgumentList	command		1139307	1					
ANR	1139331	Argument	command		1139307	0					
ANR	1139332	Identifier	command		1139307	0					
ANR	1139333	Argument	Stream :: reli_sock		1139307	1					
ANR	1139334	Identifier	Stream :: reli_sock		1139307	0					
ANR	1139335	Argument	0		1139307	2					
ANR	1139336	PrimaryExpression	0		1139307	0					
ANR	1139337	IfStatement	if ( ! sock )		1139307	2					
ANR	1139338	Condition	! sock	168:5:4302:4306	1139307	0	True				
ANR	1139339	UnaryOperationExpression	! sock		1139307	0					
ANR	1139340	UnaryOperator	!		1139307	0					
ANR	1139341	Identifier	sock		1139307	1					
ANR	1139342	CompoundStatement		8:12:152:152	1139307	1					
ANR	1139343	ExpressionStatement	"error_reason . sprintf ( ""Unable to start STORK_SUBMIT command to host %s\\n"" , stork_host )"	169:2:4313:4411	1139307	0	True				
ANR	1139344	CallExpression	"error_reason . sprintf ( ""Unable to start STORK_SUBMIT command to host %s\\n"" , stork_host )"		1139307	0					
ANR	1139345	Callee	error_reason . sprintf		1139307	0					
ANR	1139346	MemberAccess	error_reason . sprintf		1139307	0					
ANR	1139347	Identifier	error_reason		1139307	0					
ANR	1139348	Identifier	sprintf		1139307	1					
ANR	1139349	ArgumentList	"""Unable to start STORK_SUBMIT command to host %s\\n"""		1139307	1					
ANR	1139350	Argument	"""Unable to start STORK_SUBMIT command to host %s\\n"""		1139307	0					
ANR	1139351	PrimaryExpression	"""Unable to start STORK_SUBMIT command to host %s\\n"""		1139307	0					
ANR	1139352	Argument	stork_host		1139307	1					
ANR	1139353	Identifier	stork_host		1139307	0					
ANR	1139354	ReturnStatement	return NULL ;	172:2:4415:4426	1139307	1	True				
ANR	1139355	Identifier	NULL		1139307	0					
ANR	1139356	IdentifierDeclStatement	ReliSock * reli_sock = ( ReliSock * ) sock ;	176:1:4434:4472	1139307	3	True				
ANR	1139357	IdentifierDecl	* reli_sock = ( ReliSock * ) sock		1139307	0					
ANR	1139358	IdentifierDeclType	ReliSock *		1139307	0					
ANR	1139359	Identifier	reli_sock		1139307	1					
ANR	1139360	AssignmentExpression	* reli_sock = ( ReliSock * ) sock		1139307	2		=			
ANR	1139361	Identifier	reli_sock		1139307	0					
ANR	1139362	CastExpression	( ReliSock * ) sock		1139307	1					
ANR	1139363	CastTarget	ReliSock *		1139307	0					
ANR	1139364	Identifier	sock		1139307	1					
ANR	1139365	IfStatement	if ( ! reli_sock -> triedAuthentication ( ) )		1139307	4					
ANR	1139366	Condition	! reli_sock -> triedAuthentication ( )	178:5:4480:4512	1139307	0	True				
ANR	1139367	UnaryOperationExpression	! reli_sock -> triedAuthentication ( )		1139307	0					
ANR	1139368	UnaryOperator	!		1139307	0					
ANR	1139369	CallExpression	reli_sock -> triedAuthentication ( )		1139307	1					
ANR	1139370	Callee	reli_sock -> triedAuthentication		1139307	0					
ANR	1139371	PtrMemberAccess	reli_sock -> triedAuthentication		1139307	0					
ANR	1139372	Identifier	reli_sock		1139307	0					
ANR	1139373	Identifier	triedAuthentication		1139307	1					
ANR	1139374	ArgumentList			1139307	1					
ANR	1139375	CompoundStatement		19:2:363:383	1139307	1					
ANR	1139376	IdentifierDeclStatement	CondorError errstack ;	179:2:4520:4540	1139307	0	True				
ANR	1139377	IdentifierDecl	errstack		1139307	0					
ANR	1139378	IdentifierDeclType	CondorError		1139307	0					
ANR	1139379	Identifier	errstack		1139307	1					
ANR	1139380	IfStatement	"if ( ! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack ) )"		1139307	1					
ANR	1139381	Condition	"! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"	180:6:4548:4609	1139307	0	True				
ANR	1139382	UnaryOperationExpression	"! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"		1139307	0					
ANR	1139383	UnaryOperator	!		1139307	0					
ANR	1139384	CallExpression	"SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"		1139307	1					
ANR	1139385	Callee	SecMan :: authenticate_sock		1139307	0					
ANR	1139386	Identifier	SecMan :: authenticate_sock		1139307	0					
ANR	1139387	ArgumentList	reli_sock		1139307	1					
ANR	1139388	Argument	reli_sock		1139307	0					
ANR	1139389	Identifier	reli_sock		1139307	0					
ANR	1139390	Argument	CLIENT_PERM		1139307	1					
ANR	1139391	Identifier	CLIENT_PERM		1139307	0					
ANR	1139392	Argument	& errstack		1139307	2					
ANR	1139393	UnaryOperationExpression	& errstack		1139307	0					
ANR	1139394	UnaryOperator	&		1139307	0					
ANR	1139395	Identifier	errstack		1139307	1					
ANR	1139396	CompoundStatement		20:71:456:456	1139307	1					
ANR	1139397	ExpressionStatement	"error_reason = ""Authentication error"""	181:3:4618:4655	1139307	0	True				
ANR	1139398	AssignmentExpression	"error_reason = ""Authentication error"""		1139307	0		=			
ANR	1139399	Identifier	error_reason		1139307	0					
ANR	1139400	PrimaryExpression	"""Authentication error"""		1139307	1					
ANR	1139401	Statement	delete	182:3:4660:4665	1139307	1	True				
ANR	1139402	ExpressionStatement	reli_sock	182:10:4667:4676	1139307	2	True				
ANR	1139403	Identifier	reli_sock		1139307	0					
ANR	1139404	ReturnStatement	return NULL ;	183:3:4681:4692	1139307	3	True				
ANR	1139405	Identifier	NULL		1139307	0					
ANR	1139406	ReturnStatement	return sock ;	187:1:4703:4714	1139307	5	True				
ANR	1139407	Identifier	sock		1139307	0					
ANR	1139408	ReturnType	Sock *		1139307	1					
ANR	1139409	Identifier	start_stork_command_and_authenticate		1139307	2					
ANR	1139410	ParameterList	"const char * stork_host , const int command , MyString & error_reason"		1139307	3					
ANR	1139411	Parameter	const char * stork_host	159:6:4075:4097	1139307	0	True				
ANR	1139412	ParameterType	const char *		1139307	0					
ANR	1139413	Identifier	stork_host		1139307	1					
ANR	1139414	Parameter	const int command	160:6:4106:4122	1139307	1	True				
ANR	1139415	ParameterType	const int		1139307	0					
ANR	1139416	Identifier	command		1139307	1					
ANR	1139417	Parameter	MyString & error_reason	161:6:4131:4153	1139307	2	True				
ANR	1139418	ParameterType	MyString &		1139307	0					
ANR	1139419	Identifier	error_reason		1139307	1					
ANR	1139420	CFGEntryNode	ENTRY		1139307		True				
ANR	1139421	CFGExitNode	EXIT		1139307		True				
ANR	1139422	Symbol	my_stork . startCommand		1139307						
ANR	1139423	Symbol	SecMan :: authenticate_sock		1139307						
ANR	1139424	Symbol	NULL		1139307						
ANR	1139425	Symbol	stork_host		1139307						
ANR	1139426	Symbol	my_stork		1139307						
ANR	1139427	Symbol	command		1139307						
ANR	1139428	Symbol	sock		1139307						
ANR	1139429	Symbol	error_reason		1139307						
ANR	1139430	Symbol	errstack		1139307						
ANR	1139431	Symbol	& errstack		1139307						
ANR	1139432	Symbol	Stream :: reli_sock		1139307						
ANR	1139433	Symbol	reli_sock		1139307						
ANR	1139434	Symbol	CLIENT_PERM		1139307						
ANR	1139435	Symbol	reli_sock -> triedAuthentication		1139307						
ANR	1139436	Symbol	* reli_sock		1139307						
ANR	1139437	Function	stork_submit	194:0:4723:6293							
ANR	1139438	FunctionDef	"stork_submit (Sock * sock , const classad :: ClassAd * request , const char * host , const char * cred , const int cred_size , char * & id , char * & _error_reason)"		1139437	0					
ANR	1139439	CompoundStatement		202:27:4912:6293	1139437	0					
ANR	1139440	IdentifierDeclStatement	bool cleanup_sock = false ;	204:1:4916:4941	1139437	0	True				
ANR	1139441	IdentifierDecl	cleanup_sock = false		1139437	0					
ANR	1139442	IdentifierDeclType	bool		1139437	0					
ANR	1139443	Identifier	cleanup_sock		1139437	1					
ANR	1139444	AssignmentExpression	cleanup_sock = false		1139437	2		=			
ANR	1139445	Identifier	false		1139437	0					
ANR	1139446	Identifier	false		1139437	1					
ANR	1139447	IfStatement	if ( sock == NULL )		1139437	1					
ANR	1139448	Condition	sock == NULL	208:5:5080:5091	1139437	0	True				
ANR	1139449	EqualityExpression	sock == NULL		1139437	0		==			
ANR	1139450	Identifier	sock		1139437	0					
ANR	1139451	Identifier	NULL		1139437	1					
ANR	1139452	CompoundStatement		9:2:207:228	1139437	1					
ANR	1139453	IdentifierDeclStatement	MyString error_reason ;	210:2:5120:5141	1139437	0	True				
ANR	1139454	IdentifierDecl	error_reason		1139437	0					
ANR	1139455	IdentifierDeclType	MyString		1139437	0					
ANR	1139456	Identifier	error_reason		1139437	1					
ANR	1139457	ExpressionStatement	"sock = start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"	211:2:5145:5234	1139437	1	True				
ANR	1139458	AssignmentExpression	"sock = start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"		1139437	0		=			
ANR	1139459	Identifier	sock		1139437	0					
ANR	1139460	CallExpression	"start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"		1139437	1					
ANR	1139461	Callee	start_stork_command_and_authenticate		1139437	0					
ANR	1139462	Identifier	start_stork_command_and_authenticate		1139437	0					
ANR	1139463	ArgumentList	host		1139437	1					
ANR	1139464	Argument	host		1139437	0					
ANR	1139465	Identifier	host		1139437	0					
ANR	1139466	Argument	STORK_SUBMIT		1139437	1					
ANR	1139467	Identifier	STORK_SUBMIT		1139437	0					
ANR	1139468	Argument	error_reason		1139437	2					
ANR	1139469	Identifier	error_reason		1139437	0					
ANR	1139470	IfStatement	if ( ! sock )		1139437	2					
ANR	1139471	Condition	! sock	216:6:5243:5247	1139437	0	True				
ANR	1139472	UnaryOperationExpression	! sock		1139437	0					
ANR	1139473	UnaryOperator	!		1139437	0					
ANR	1139474	Identifier	sock		1139437	1					
ANR	1139475	CompoundStatement		15:13:337:337	1139437	1					
ANR	1139476	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	217:3:5255:5300	1139437	0	True				
ANR	1139477	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		1139437	0		=			
ANR	1139478	Identifier	_error_reason		1139437	0					
ANR	1139479	CallExpression	strdup ( error_reason . Value ( ) )		1139437	1					
ANR	1139480	Callee	strdup		1139437	0					
ANR	1139481	Identifier	strdup		1139437	0					
ANR	1139482	ArgumentList	error_reason . Value ( )		1139437	1					
ANR	1139483	Argument	error_reason . Value ( )		1139437	0					
ANR	1139484	CallExpression	error_reason . Value ( )		1139437	0					
ANR	1139485	Callee	error_reason . Value		1139437	0					
ANR	1139486	MemberAccess	error_reason . Value		1139437	0					
ANR	1139487	Identifier	error_reason		1139437	0					
ANR	1139488	Identifier	Value		1139437	1					
ANR	1139489	ArgumentList			1139437	1					
ANR	1139490	ReturnStatement	return FALSE ;	218:3:5305:5317	1139437	1	True				
ANR	1139491	Identifier	FALSE		1139437	0					
ANR	1139492	ExpressionStatement	cleanup_sock = true	220:2:5325:5344	1139437	3	True				
ANR	1139493	AssignmentExpression	cleanup_sock = true		1139437	0		=			
ANR	1139494	Identifier	cleanup_sock		1139437	0					
ANR	1139495	Identifier	true		1139437	1					
ANR	1139496	ExpressionStatement	sock -> encode ( )	223:1:5351:5365	1139437	2	True				
ANR	1139497	CallExpression	sock -> encode ( )		1139437	0					
ANR	1139498	Callee	sock -> encode		1139437	0					
ANR	1139499	PtrMemberAccess	sock -> encode		1139437	0					
ANR	1139500	Identifier	sock		1139437	0					
ANR	1139501	Identifier	encode		1139437	1					
ANR	1139502	ArgumentList			1139437	1					
ANR	1139503	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	225:1:5369:5402	1139437	3	True				
ANR	1139504	IdentifierDecl	unparser		1139437	0					
ANR	1139505	IdentifierDeclType	classad :: ClassAdUnParser		1139437	0					
ANR	1139506	Identifier	unparser		1139437	1					
ANR	1139507	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	226:1:5405:5430	1139437	4	True				
ANR	1139508	IdentifierDecl	"adbuffer = """""		1139437	0					
ANR	1139509	IdentifierDeclType	std :: string		1139437	0					
ANR	1139510	Identifier	adbuffer		1139437	1					
ANR	1139511	AssignmentExpression	"adbuffer = """""		1139437	2		=			
ANR	1139512	Identifier	adbuffer		1139437	0					
ANR	1139513	PrimaryExpression	""""""		1139437	1					
ANR	1139514	ExpressionStatement	"unparser . Unparse ( adbuffer , request )"	227:4:5436:5471	1139437	5	True				
ANR	1139515	CallExpression	"unparser . Unparse ( adbuffer , request )"		1139437	0					
ANR	1139516	Callee	unparser . Unparse		1139437	0					
ANR	1139517	MemberAccess	unparser . Unparse		1139437	0					
ANR	1139518	Identifier	unparser		1139437	0					
ANR	1139519	Identifier	Unparse		1139437	1					
ANR	1139520	ArgumentList	adbuffer		1139437	1					
ANR	1139521	Argument	adbuffer		1139437	0					
ANR	1139522	Identifier	adbuffer		1139437	0					
ANR	1139523	Argument	request		1139437	1					
ANR	1139524	Identifier	request		1139437	0					
ANR	1139525	IdentifierDeclStatement	char * _request = strdup ( adbuffer . c_str ( ) ) ;	229:1:5475:5516	1139437	6	True				
ANR	1139526	IdentifierDecl	* _request = strdup ( adbuffer . c_str ( ) )		1139437	0					
ANR	1139527	IdentifierDeclType	char *		1139437	0					
ANR	1139528	Identifier	_request		1139437	1					
ANR	1139529	AssignmentExpression	* _request = strdup ( adbuffer . c_str ( ) )		1139437	2		=			
ANR	1139530	Identifier	_request		1139437	0					
ANR	1139531	CallExpression	strdup ( adbuffer . c_str ( ) )		1139437	1					
ANR	1139532	Callee	strdup		1139437	0					
ANR	1139533	Identifier	strdup		1139437	0					
ANR	1139534	ArgumentList	adbuffer . c_str ( )		1139437	1					
ANR	1139535	Argument	adbuffer . c_str ( )		1139437	0					
ANR	1139536	CallExpression	adbuffer . c_str ( )		1139437	0					
ANR	1139537	Callee	adbuffer . c_str		1139437	0					
ANR	1139538	MemberAccess	adbuffer . c_str		1139437	0					
ANR	1139539	Identifier	adbuffer		1139437	0					
ANR	1139540	Identifier	c_str		1139437	1					
ANR	1139541	ArgumentList			1139437	1					
ANR	1139542	IfStatement	if ( ! sock -> code ( _request ) )		1139437	7					
ANR	1139543	Condition	! sock -> code ( _request )	230:5:5538:5559	1139437	0	True				
ANR	1139544	UnaryOperationExpression	! sock -> code ( _request )		1139437	0					
ANR	1139545	UnaryOperator	!		1139437	0					
ANR	1139546	CallExpression	sock -> code ( _request )		1139437	1					
ANR	1139547	Callee	sock -> code		1139437	0					
ANR	1139548	PtrMemberAccess	sock -> code		1139437	0					
ANR	1139549	Identifier	sock		1139437	0					
ANR	1139550	Identifier	code		1139437	1					
ANR	1139551	ArgumentList	_request		1139437	1					
ANR	1139552	Argument	_request		1139437	0					
ANR	1139553	Identifier	_request		1139437	0					
ANR	1139554	CompoundStatement		29:29:649:649	1139437	1					
ANR	1139555	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	231:2:5566:5609	1139437	0	True				
ANR	1139556	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		1139437	0		=			
ANR	1139557	Identifier	_error_reason		1139437	0					
ANR	1139558	CallExpression	"strdup ( ""Client send error"" )"		1139437	1					
ANR	1139559	Callee	strdup		1139437	0					
ANR	1139560	Identifier	strdup		1139437	0					
ANR	1139561	ArgumentList	"""Client send error"""		1139437	1					
ANR	1139562	Argument	"""Client send error"""		1139437	0					
ANR	1139563	PrimaryExpression	"""Client send error"""		1139437	0					
ANR	1139564	IfStatement	if ( cleanup_sock )		1139437	1					
ANR	1139565	Condition	cleanup_sock	232:6:5617:5628	1139437	0	True				
ANR	1139566	Identifier	cleanup_sock		1139437	0					
ANR	1139567	Statement	delete	232:20:5631:5636	1139437	1	True				
ANR	1139568	ExpressionStatement	sock	232:27:5638:5642	1139437	2	True				
ANR	1139569	Identifier	sock		1139437	0					
ANR	1139570	ReturnStatement	return FALSE ;	233:2:5646:5658	1139437	3	True				
ANR	1139571	Identifier	FALSE		1139437	0					
ANR	1139572	ExpressionStatement	free ( _request )	235:1:5664:5679	1139437	8	True				
ANR	1139573	CallExpression	free ( _request )		1139437	0					
ANR	1139574	Callee	free		1139437	0					
ANR	1139575	Identifier	free		1139437	0					
ANR	1139576	ArgumentList	_request		1139437	1					
ANR	1139577	Argument	_request		1139437	0					
ANR	1139578	Identifier	_request		1139437	0					
ANR	1139579	IdentifierDeclStatement	int _cred_size = cred_size ;	237:1:5684:5710	1139437	9	True				
ANR	1139580	IdentifierDecl	_cred_size = cred_size		1139437	0					
ANR	1139581	IdentifierDeclType	int		1139437	0					
ANR	1139582	Identifier	_cred_size		1139437	1					
ANR	1139583	AssignmentExpression	_cred_size = cred_size		1139437	2		=			
ANR	1139584	Identifier	cred_size		1139437	0					
ANR	1139585	Identifier	cred_size		1139437	1					
ANR	1139586	IfStatement	if ( ! sock -> code ( & _cred_size ) )		1139437	10					
ANR	1139587	Condition	! sock -> code ( & _cred_size )	239:6:5731:5755	1139437	0	True				
ANR	1139588	UnaryOperationExpression	! sock -> code ( & _cred_size )		1139437	0					
ANR	1139589	UnaryOperator	!		1139437	0					
ANR	1139590	CallExpression	sock -> code ( & _cred_size )		1139437	1					
ANR	1139591	Callee	sock -> code		1139437	0					
ANR	1139592	PtrMemberAccess	sock -> code		1139437	0					
ANR	1139593	Identifier	sock		1139437	0					
ANR	1139594	Identifier	code		1139437	1					
ANR	1139595	ArgumentList	& _cred_size		1139437	1					
ANR	1139596	Argument	& _cred_size		1139437	0					
ANR	1139597	UnaryOperationExpression	& _cred_size		1139437	0					
ANR	1139598	UnaryOperator	&		1139437	0					
ANR	1139599	Identifier	_cred_size		1139437	1					
ANR	1139600	CompoundStatement		38:34:846:846	1139437	1					
ANR	1139601	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	240:2:5763:5806	1139437	0	True				
ANR	1139602	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		1139437	0		=			
ANR	1139603	Identifier	_error_reason		1139437	0					
ANR	1139604	CallExpression	"strdup ( ""Client send error"" )"		1139437	1					
ANR	1139605	Callee	strdup		1139437	0					
ANR	1139606	Identifier	strdup		1139437	0					
ANR	1139607	ArgumentList	"""Client send error"""		1139437	1					
ANR	1139608	Argument	"""Client send error"""		1139437	0					
ANR	1139609	PrimaryExpression	"""Client send error"""		1139437	0					
ANR	1139610	IfStatement	if ( cleanup_sock )		1139437	1					
ANR	1139611	Condition	cleanup_sock	241:6:5814:5825	1139437	0	True				
ANR	1139612	Identifier	cleanup_sock		1139437	0					
ANR	1139613	Statement	delete	241:20:5828:5833	1139437	1	True				
ANR	1139614	ExpressionStatement	sock	241:27:5835:5839	1139437	2	True				
ANR	1139615	Identifier	sock		1139437	0					
ANR	1139616	ReturnStatement	return FALSE ;	242:2:5843:5855	1139437	3	True				
ANR	1139617	Identifier	FALSE		1139437	0					
ANR	1139618	IfStatement	if ( cred_size )		1139437	11					
ANR	1139619	Condition	cred_size	244:5:5865:5873	1139437	0	True				
ANR	1139620	Identifier	cred_size		1139437	0					
ANR	1139621	CompoundStatement		44:2:967:995	1139437	1					
ANR	1139622	IdentifierDeclStatement	char * _cred = strdup ( cred ) ;	245:2:5880:5908	1139437	0	True				
ANR	1139623	IdentifierDecl	* _cred = strdup ( cred )		1139437	0					
ANR	1139624	IdentifierDeclType	char *		1139437	0					
ANR	1139625	Identifier	_cred		1139437	1					
ANR	1139626	AssignmentExpression	* _cred = strdup ( cred )		1139437	2		=			
ANR	1139627	Identifier	_cred		1139437	0					
ANR	1139628	CallExpression	strdup ( cred )		1139437	1					
ANR	1139629	Callee	strdup		1139437	0					
ANR	1139630	Identifier	strdup		1139437	0					
ANR	1139631	ArgumentList	cred		1139437	1					
ANR	1139632	Argument	cred		1139437	0					
ANR	1139633	Identifier	cred		1139437	0					
ANR	1139634	ExpressionStatement	"sock -> code_bytes ( _cred , cred_size )"	246:2:5914:5949	1139437	1	True				
ANR	1139635	CallExpression	"sock -> code_bytes ( _cred , cred_size )"		1139437	0					
ANR	1139636	Callee	sock -> code_bytes		1139437	0					
ANR	1139637	PtrMemberAccess	sock -> code_bytes		1139437	0					
ANR	1139638	Identifier	sock		1139437	0					
ANR	1139639	Identifier	code_bytes		1139437	1					
ANR	1139640	ArgumentList	_cred		1139437	1					
ANR	1139641	Argument	_cred		1139437	0					
ANR	1139642	Identifier	_cred		1139437	0					
ANR	1139643	Argument	cred_size		1139437	1					
ANR	1139644	Identifier	cred_size		1139437	0					
ANR	1139645	ExpressionStatement	free ( _cred )	247:2:5953:5965	1139437	2	True				
ANR	1139646	CallExpression	free ( _cred )		1139437	0					
ANR	1139647	Callee	free		1139437	0					
ANR	1139648	Identifier	free		1139437	0					
ANR	1139649	ArgumentList	_cred		1139437	1					
ANR	1139650	Argument	_cred		1139437	0					
ANR	1139651	Identifier	_cred		1139437	0					
ANR	1139652	ExpressionStatement	sock -> end_of_message ( )	251:1:5973:5995	1139437	12	True				
ANR	1139653	CallExpression	sock -> end_of_message ( )		1139437	0					
ANR	1139654	Callee	sock -> end_of_message		1139437	0					
ANR	1139655	PtrMemberAccess	sock -> end_of_message		1139437	0					
ANR	1139656	Identifier	sock		1139437	0					
ANR	1139657	Identifier	end_of_message		1139437	1					
ANR	1139658	ArgumentList			1139437	1					
ANR	1139659	ExpressionStatement	sock -> decode ( )	252:1:5998:6012	1139437	13	True				
ANR	1139660	CallExpression	sock -> decode ( )		1139437	0					
ANR	1139661	Callee	sock -> decode		1139437	0					
ANR	1139662	PtrMemberAccess	sock -> decode		1139437	0					
ANR	1139663	Identifier	sock		1139437	0					
ANR	1139664	Identifier	decode		1139437	1					
ANR	1139665	ArgumentList			1139437	1					
ANR	1139666	IdentifierDeclStatement	char * line = NULL ;	254:1:6016:6033	1139437	14	True				
ANR	1139667	IdentifierDecl	* line = NULL		1139437	0					
ANR	1139668	IdentifierDeclType	char *		1139437	0					
ANR	1139669	Identifier	line		1139437	1					
ANR	1139670	AssignmentExpression	* line = NULL		1139437	2		=			
ANR	1139671	Identifier	NULL		1139437	0					
ANR	1139672	Identifier	NULL		1139437	1					
ANR	1139673	IfStatement	if ( ! sock -> code ( line ) )		1139437	15					
ANR	1139674	Condition	! sock -> code ( line )	255:5:6040:6057	1139437	0	True				
ANR	1139675	UnaryOperationExpression	! sock -> code ( line )		1139437	0					
ANR	1139676	UnaryOperator	!		1139437	0					
ANR	1139677	CallExpression	sock -> code ( line )		1139437	1					
ANR	1139678	Callee	sock -> code		1139437	0					
ANR	1139679	PtrMemberAccess	sock -> code		1139437	0					
ANR	1139680	Identifier	sock		1139437	0					
ANR	1139681	Identifier	code		1139437	1					
ANR	1139682	ArgumentList	line		1139437	1					
ANR	1139683	Argument	line		1139437	0					
ANR	1139684	Identifier	line		1139437	0					
ANR	1139685	CompoundStatement		54:25:1147:1147	1139437	1					
ANR	1139686	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	256:2:6064:6107	1139437	0	True				
ANR	1139687	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		1139437	0		=			
ANR	1139688	Identifier	_error_reason		1139437	0					
ANR	1139689	CallExpression	"strdup ( ""Client recv error"" )"		1139437	1					
ANR	1139690	Callee	strdup		1139437	0					
ANR	1139691	Identifier	strdup		1139437	0					
ANR	1139692	ArgumentList	"""Client recv error"""		1139437	1					
ANR	1139693	Argument	"""Client recv error"""		1139437	0					
ANR	1139694	PrimaryExpression	"""Client recv error"""		1139437	0					
ANR	1139695	IfStatement	if ( cleanup_sock )		1139437	1					
ANR	1139696	Condition	cleanup_sock	257:6:6115:6126	1139437	0	True				
ANR	1139697	Identifier	cleanup_sock		1139437	0					
ANR	1139698	Statement	delete	257:20:6129:6134	1139437	1	True				
ANR	1139699	ExpressionStatement	sock	257:27:6136:6140	1139437	2	True				
ANR	1139700	Identifier	sock		1139437	0					
ANR	1139701	ReturnStatement	return FALSE ;	258:2:6144:6156	1139437	3	True				
ANR	1139702	Identifier	FALSE		1139437	0					
ANR	1139703	ExpressionStatement	sock -> end_of_message ( )	260:1:6162:6184	1139437	16	True				
ANR	1139704	CallExpression	sock -> end_of_message ( )		1139437	0					
ANR	1139705	Callee	sock -> end_of_message		1139437	0					
ANR	1139706	PtrMemberAccess	sock -> end_of_message		1139437	0					
ANR	1139707	Identifier	sock		1139437	0					
ANR	1139708	Identifier	end_of_message		1139437	1					
ANR	1139709	ArgumentList			1139437	1					
ANR	1139710	ExpressionStatement	_error_reason = NULL	262:1:6188:6208	1139437	17	True				
ANR	1139711	AssignmentExpression	_error_reason = NULL		1139437	0		=			
ANR	1139712	Identifier	_error_reason		1139437	0					
ANR	1139713	Identifier	NULL		1139437	1					
ANR	1139714	ExpressionStatement	id = line	263:1:6211:6218	1139437	18	True				
ANR	1139715	AssignmentExpression	id = line		1139437	0		=			
ANR	1139716	Identifier	id		1139437	0					
ANR	1139717	Identifier	line		1139437	1					
ANR	1139718	IfStatement	if ( cleanup_sock )		1139437	19					
ANR	1139719	Condition	cleanup_sock	265:5:6226:6237	1139437	0	True				
ANR	1139720	Identifier	cleanup_sock		1139437	0					
ANR	1139721	CompoundStatement		64:19:1327:1327	1139437	1					
ANR	1139722	ExpressionStatement	sock -> close ( )	266:2:6244:6257	1139437	0	True				
ANR	1139723	CallExpression	sock -> close ( )		1139437	0					
ANR	1139724	Callee	sock -> close		1139437	0					
ANR	1139725	PtrMemberAccess	sock -> close		1139437	0					
ANR	1139726	Identifier	sock		1139437	0					
ANR	1139727	Identifier	close		1139437	1					
ANR	1139728	ArgumentList			1139437	1					
ANR	1139729	Statement	delete	267:2:6261:6266	1139437	1	True				
ANR	1139730	ExpressionStatement	sock	267:9:6268:6272	1139437	2	True				
ANR	1139731	Identifier	sock		1139437	0					
ANR	1139732	ReturnStatement	return TRUE ;	270:1:6280:6291	1139437	20	True				
ANR	1139733	Identifier	TRUE		1139437	0					
ANR	1139734	ReturnType	int		1139437	1					
ANR	1139735	Identifier	stork_submit		1139437	2					
ANR	1139736	ParameterList	"Sock * sock , const classad :: ClassAd * request , const char * host , const char * cred , const int cred_size , char * & id , char * & _error_reason"		1139437	3					
ANR	1139737	Parameter	Sock * sock	196:3:4746:4756	1139437	0	True				
ANR	1139738	ParameterType	Sock *		1139437	0					
ANR	1139739	Identifier	sock		1139437	1					
ANR	1139740	Parameter	const classad :: ClassAd * request	197:3:4762:4793	1139437	1	True				
ANR	1139741	ParameterType	const classad :: ClassAd *		1139437	0					
ANR	1139742	Identifier	request		1139437	1					
ANR	1139743	Parameter	const char * host	198:3:4799:4815	1139437	2	True				
ANR	1139744	ParameterType	const char *		1139437	0					
ANR	1139745	Identifier	host		1139437	1					
ANR	1139746	Parameter	const char * cred	199:3:4822:4838	1139437	3	True				
ANR	1139747	ParameterType	const char *		1139437	0					
ANR	1139748	Identifier	cred		1139437	1					
ANR	1139749	Parameter	const int cred_size	200:3:4845:4863	1139437	4	True				
ANR	1139750	ParameterType	const int		1139437	0					
ANR	1139751	Identifier	cred_size		1139437	1					
ANR	1139752	Parameter	char * & id	201:6:4873:4882	1139437	5	True				
ANR	1139753	ParameterType	char * &		1139437	0					
ANR	1139754	Identifier	id		1139437	1					
ANR	1139755	Parameter	char * & _error_reason	202:3:4888:4909	1139437	6	True				
ANR	1139756	ParameterType	char * &		1139437	0					
ANR	1139757	Identifier	_error_reason		1139437	1					
ANR	1139758	CFGEntryNode	ENTRY		1139437		True				
ANR	1139759	CFGExitNode	EXIT		1139437		True				
ANR	1139760	Symbol	STORK_SUBMIT		1139437						
ANR	1139761	Symbol	request		1139437						
ANR	1139762	Symbol	_cred		1139437						
ANR	1139763	Symbol	line		1139437						
ANR	1139764	Symbol	_request		1139437						
ANR	1139765	Symbol	& _cred_size		1139437						
ANR	1139766	Symbol	error_reason		1139437						
ANR	1139767	Symbol	_error_reason		1139437						
ANR	1139768	Symbol	host		1139437						
ANR	1139769	Symbol	error_reason . Value		1139437						
ANR	1139770	Symbol	id		1139437						
ANR	1139771	Symbol	* sock		1139437						
ANR	1139772	Symbol	start_stork_command_and_authenticate		1139437						
ANR	1139773	Symbol	cred		1139437						
ANR	1139774	Symbol	cleanup_sock		1139437						
ANR	1139775	Symbol	NULL		1139437						
ANR	1139776	Symbol	false		1139437						
ANR	1139777	Symbol	TRUE		1139437						
ANR	1139778	Symbol	sock		1139437						
ANR	1139779	Symbol	sock -> code		1139437						
ANR	1139780	Symbol	cred_size		1139437						
ANR	1139781	Symbol	true		1139437						
ANR	1139782	Symbol	FALSE		1139437						
ANR	1139783	Symbol	unparser		1139437						
ANR	1139784	Symbol	strdup		1139437						
ANR	1139785	Symbol	adbuffer . c_str		1139437						
ANR	1139786	Symbol	_cred_size		1139437						
ANR	1139787	Symbol	adbuffer		1139437						
ANR	1139788	Function	stork_rm	273:0:6296:7200							
ANR	1139789	FunctionDef	"stork_rm (const char * id , const char * host , char * & result , char * & _error_reason)"		1139788	0					
ANR	1139790	CompoundStatement		278:27:6402:7200	1139788	0					
ANR	1139791	IdentifierDeclStatement	MyString error_reason ;	281:1:6428:6449	1139788	0	True				
ANR	1139792	IdentifierDecl	error_reason		1139788	0					
ANR	1139793	IdentifierDeclType	MyString		1139788	0					
ANR	1139794	Identifier	error_reason		1139788	1					
ANR	1139795	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason ) ;"	282:1:6452:6581	1139788	1	True				
ANR	1139796	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		1139788	0					
ANR	1139797	IdentifierDeclType	Sock *		1139788	0					
ANR	1139798	Identifier	sock		1139788	1					
ANR	1139799	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		1139788	2		=			
ANR	1139800	Identifier	sock		1139788	0					
ANR	1139801	CallExpression	"start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		1139788	1					
ANR	1139802	Callee	start_stork_command_and_authenticate		1139788	0					
ANR	1139803	Identifier	start_stork_command_and_authenticate		1139788	0					
ANR	1139804	ArgumentList	host		1139788	1					
ANR	1139805	Argument	host		1139788	0					
ANR	1139806	Identifier	host		1139788	0					
ANR	1139807	Argument	STORK_REMOVE		1139788	1					
ANR	1139808	Identifier	STORK_REMOVE		1139788	0					
ANR	1139809	Argument	error_reason		1139788	2					
ANR	1139810	Identifier	error_reason		1139788	0					
ANR	1139811	IfStatement	if ( ! sock )		1139788	2					
ANR	1139812	Condition	! sock	288:5:6589:6593	1139788	0	True				
ANR	1139813	UnaryOperationExpression	! sock		1139788	0					
ANR	1139814	UnaryOperator	!		1139788	0					
ANR	1139815	Identifier	sock		1139788	1					
ANR	1139816	CompoundStatement		11:12:193:193	1139788	1					
ANR	1139817	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	289:2:6600:6645	1139788	0	True				
ANR	1139818	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		1139788	0		=			
ANR	1139819	Identifier	_error_reason		1139788	0					
ANR	1139820	CallExpression	strdup ( error_reason . Value ( ) )		1139788	1					
ANR	1139821	Callee	strdup		1139788	0					
ANR	1139822	Identifier	strdup		1139788	0					
ANR	1139823	ArgumentList	error_reason . Value ( )		1139788	1					
ANR	1139824	Argument	error_reason . Value ( )		1139788	0					
ANR	1139825	CallExpression	error_reason . Value ( )		1139788	0					
ANR	1139826	Callee	error_reason . Value		1139788	0					
ANR	1139827	MemberAccess	error_reason . Value		1139788	0					
ANR	1139828	Identifier	error_reason		1139788	0					
ANR	1139829	Identifier	Value		1139788	1					
ANR	1139830	ArgumentList			1139788	1					
ANR	1139831	ReturnStatement	return FALSE ;	290:2:6649:6661	1139788	1	True				
ANR	1139832	Identifier	FALSE		1139788	0					
ANR	1139833	ExpressionStatement	sock -> encode ( )	293:1:6668:6682	1139788	3	True				
ANR	1139834	CallExpression	sock -> encode ( )		1139788	0					
ANR	1139835	Callee	sock -> encode		1139788	0					
ANR	1139836	PtrMemberAccess	sock -> encode		1139788	0					
ANR	1139837	Identifier	sock		1139788	0					
ANR	1139838	Identifier	encode		1139788	1					
ANR	1139839	ArgumentList			1139788	1					
ANR	1139840	IfStatement	if ( ! sock -> put ( id ) )		1139788	4					
ANR	1139841	Condition	! sock -> put ( id )	295:5:6690:6704	1139788	0	True				
ANR	1139842	UnaryOperationExpression	! sock -> put ( id )		1139788	0					
ANR	1139843	UnaryOperator	!		1139788	0					
ANR	1139844	CallExpression	sock -> put ( id )		1139788	1					
ANR	1139845	Callee	sock -> put		1139788	0					
ANR	1139846	PtrMemberAccess	sock -> put		1139788	0					
ANR	1139847	Identifier	sock		1139788	0					
ANR	1139848	Identifier	put		1139788	1					
ANR	1139849	ArgumentList	id		1139788	1					
ANR	1139850	Argument	id		1139788	0					
ANR	1139851	Identifier	id		1139788	0					
ANR	1139852	CompoundStatement		18:22:304:304	1139788	1					
ANR	1139853	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	296:2:6711:6755	1139788	0	True				
ANR	1139854	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		1139788	0		=			
ANR	1139855	Identifier	_error_reason		1139788	0					
ANR	1139856	CallExpression	"strdup ( ""Client send error"" )"		1139788	1					
ANR	1139857	Callee	strdup		1139788	0					
ANR	1139858	Identifier	strdup		1139788	0					
ANR	1139859	ArgumentList	"""Client send error"""		1139788	1					
ANR	1139860	Argument	"""Client send error"""		1139788	0					
ANR	1139861	PrimaryExpression	"""Client send error"""		1139788	0					
ANR	1139862	Statement	delete	297:2:6759:6764	1139788	1	True				
ANR	1139863	ExpressionStatement	sock	297:9:6766:6770	1139788	2	True				
ANR	1139864	Identifier	sock		1139788	0					
ANR	1139865	ReturnStatement	return FALSE ;	298:2:6774:6786	1139788	3	True				
ANR	1139866	Identifier	FALSE		1139788	0					
ANR	1139867	ExpressionStatement	sock -> end_of_message ( )	301:1:6793:6815	1139788	5	True				
ANR	1139868	CallExpression	sock -> end_of_message ( )		1139788	0					
ANR	1139869	Callee	sock -> end_of_message		1139788	0					
ANR	1139870	PtrMemberAccess	sock -> end_of_message		1139788	0					
ANR	1139871	Identifier	sock		1139788	0					
ANR	1139872	Identifier	end_of_message		1139788	1					
ANR	1139873	ArgumentList			1139788	1					
ANR	1139874	ExpressionStatement	sock -> decode ( )	302:1:6818:6832	1139788	6	True				
ANR	1139875	CallExpression	sock -> decode ( )		1139788	0					
ANR	1139876	Callee	sock -> decode		1139788	0					
ANR	1139877	PtrMemberAccess	sock -> decode		1139788	0					
ANR	1139878	Identifier	sock		1139788	0					
ANR	1139879	Identifier	decode		1139788	1					
ANR	1139880	ArgumentList			1139788	1					
ANR	1139881	IdentifierDeclStatement	int rc = 0 ;	304:1:6836:6844	1139788	7	True				
ANR	1139882	IdentifierDecl	rc = 0		1139788	0					
ANR	1139883	IdentifierDeclType	int		1139788	0					
ANR	1139884	Identifier	rc		1139788	1					
ANR	1139885	AssignmentExpression	rc = 0		1139788	2		=			
ANR	1139886	Identifier	rc		1139788	0					
ANR	1139887	PrimaryExpression	0		1139788	1					
ANR	1139888	IdentifierDeclStatement	char * buff = NULL ;	307:1:6890:6907	1139788	8	True				
ANR	1139889	IdentifierDecl	* buff = NULL		1139788	0					
ANR	1139890	IdentifierDeclType	char *		1139788	0					
ANR	1139891	Identifier	buff		1139788	1					
ANR	1139892	AssignmentExpression	* buff = NULL		1139788	2		=			
ANR	1139893	Identifier	NULL		1139788	0					
ANR	1139894	Identifier	NULL		1139788	1					
ANR	1139895	IfStatement	if ( ! ( sock -> code ( rc ) && sock -> code ( buff ) ) )		1139788	9					
ANR	1139896	Condition	! ( sock -> code ( rc ) && sock -> code ( buff ) )	308:5:6914:6950	1139788	0	True				
ANR	1139897	UnaryOperationExpression	! ( sock -> code ( rc ) && sock -> code ( buff ) )		1139788	0					
ANR	1139898	UnaryOperator	!		1139788	0					
ANR	1139899	AndExpression	sock -> code ( rc ) && sock -> code ( buff )		1139788	1		&&			
ANR	1139900	CallExpression	sock -> code ( rc )		1139788	0					
ANR	1139901	Callee	sock -> code		1139788	0					
ANR	1139902	PtrMemberAccess	sock -> code		1139788	0					
ANR	1139903	Identifier	sock		1139788	0					
ANR	1139904	Identifier	code		1139788	1					
ANR	1139905	ArgumentList	rc		1139788	1					
ANR	1139906	Argument	rc		1139788	0					
ANR	1139907	Identifier	rc		1139788	0					
ANR	1139908	CallExpression	sock -> code ( buff )		1139788	1					
ANR	1139909	Callee	sock -> code		1139788	0					
ANR	1139910	PtrMemberAccess	sock -> code		1139788	0					
ANR	1139911	Identifier	sock		1139788	0					
ANR	1139912	Identifier	code		1139788	1					
ANR	1139913	ArgumentList	buff		1139788	1					
ANR	1139914	Argument	buff		1139788	0					
ANR	1139915	Identifier	buff		1139788	0					
ANR	1139916	CompoundStatement		31:44:550:550	1139788	1					
ANR	1139917	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	309:2:6957:7001	1139788	0	True				
ANR	1139918	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		1139788	0		=			
ANR	1139919	Identifier	_error_reason		1139788	0					
ANR	1139920	CallExpression	"strdup ( ""Client recv error"" )"		1139788	1					
ANR	1139921	Callee	strdup		1139788	0					
ANR	1139922	Identifier	strdup		1139788	0					
ANR	1139923	ArgumentList	"""Client recv error"""		1139788	1					
ANR	1139924	Argument	"""Client recv error"""		1139788	0					
ANR	1139925	PrimaryExpression	"""Client recv error"""		1139788	0					
ANR	1139926	Statement	delete	310:2:7005:7010	1139788	1	True				
ANR	1139927	ExpressionStatement	sock	310:9:7012:7016	1139788	2	True				
ANR	1139928	Identifier	sock		1139788	0					
ANR	1139929	ReturnStatement	return FALSE ;	311:2:7020:7032	1139788	3	True				
ANR	1139930	Identifier	FALSE		1139788	0					
ANR	1139931	IfStatement	if ( rc )		1139788	10					
ANR	1139932	Condition	rc	314:5:7043:7044	1139788	0	True				
ANR	1139933	Identifier	rc		1139788	0					
ANR	1139934	CompoundStatement		37:9:644:644	1139788	1					
ANR	1139935	ExpressionStatement	result = buff	315:2:7051:7064	1139788	0	True				
ANR	1139936	AssignmentExpression	result = buff		1139788	0		=			
ANR	1139937	Identifier	result		1139788	0					
ANR	1139938	Identifier	buff		1139788	1					
ANR	1139939	ExpressionStatement	_error_reason = NULL	316:2:7068:7088	1139788	1	True				
ANR	1139940	AssignmentExpression	_error_reason = NULL		1139788	0		=			
ANR	1139941	Identifier	_error_reason		1139788	0					
ANR	1139942	Identifier	NULL		1139788	1					
ANR	1139943	ElseStatement	else		1139788	0					
ANR	1139944	CompoundStatement		40:8:695:695	1139788	0					
ANR	1139945	ExpressionStatement	result = NULL	318:2:7102:7115	1139788	0	True				
ANR	1139946	AssignmentExpression	result = NULL		1139788	0		=			
ANR	1139947	Identifier	result		1139788	0					
ANR	1139948	Identifier	NULL		1139788	1					
ANR	1139949	ExpressionStatement	_error_reason = buff	319:2:7119:7139	1139788	1	True				
ANR	1139950	AssignmentExpression	_error_reason = buff		1139788	0		=			
ANR	1139951	Identifier	_error_reason		1139788	0					
ANR	1139952	Identifier	buff		1139788	1					
ANR	1139953	ExpressionStatement	sock -> close ( )	322:1:7146:7159	1139788	11	True				
ANR	1139954	CallExpression	sock -> close ( )		1139788	0					
ANR	1139955	Callee	sock -> close		1139788	0					
ANR	1139956	PtrMemberAccess	sock -> close		1139788	0					
ANR	1139957	Identifier	sock		1139788	0					
ANR	1139958	Identifier	close		1139788	1					
ANR	1139959	ArgumentList			1139788	1					
ANR	1139960	Statement	delete	323:1:7162:7167	1139788	12	True				
ANR	1139961	ExpressionStatement	sock	323:8:7169:7173	1139788	13	True				
ANR	1139962	Identifier	sock		1139788	0					
ANR	1139963	ReturnStatement	return ( rc ) ? TRUE : FALSE ;	324:1:7176:7198	1139788	14	True				
ANR	1139964	ConditionalExpression	( rc ) ? TRUE : FALSE		1139788	0					
ANR	1139965	Condition	rc		1139788	0					
ANR	1139966	Identifier	rc		1139788	0					
ANR	1139967	Identifier	TRUE		1139788	1					
ANR	1139968	Identifier	FALSE		1139788	2					
ANR	1139969	ReturnType	int		1139788	1					
ANR	1139970	Identifier	stork_rm		1139788	2					
ANR	1139971	ParameterList	"const char * id , const char * host , char * & result , char * & _error_reason"		1139788	3					
ANR	1139972	Parameter	const char * id	275:3:6314:6328	1139788	0	True				
ANR	1139973	ParameterType	const char *		1139788	0					
ANR	1139974	Identifier	id		1139788	1					
ANR	1139975	Parameter	const char * host	276:3:6335:6351	1139788	1	True				
ANR	1139976	ParameterType	const char *		1139788	0					
ANR	1139977	Identifier	host		1139788	1					
ANR	1139978	Parameter	char * & result	277:3:6358:6372	1139788	2	True				
ANR	1139979	ParameterType	char * &		1139788	0					
ANR	1139980	Identifier	result		1139788	1					
ANR	1139981	Parameter	char * & _error_reason	278:3:6378:6399	1139788	3	True				
ANR	1139982	ParameterType	char * &		1139788	0					
ANR	1139983	Identifier	_error_reason		1139788	1					
ANR	1139984	CFGEntryNode	ENTRY		1139788		True				
ANR	1139985	CFGExitNode	EXIT		1139788		True				
ANR	1139986	Symbol	STORK_REMOVE		1139788						
ANR	1139987	Symbol	NULL		1139788						
ANR	1139988	Symbol	sock -> put		1139788						
ANR	1139989	Symbol	TRUE		1139788						
ANR	1139990	Symbol	result		1139788						
ANR	1139991	Symbol	sock		1139788						
ANR	1139992	Symbol	rc		1139788						
ANR	1139993	Symbol	error_reason		1139788						
ANR	1139994	Symbol	_error_reason		1139788						
ANR	1139995	Symbol	sock -> code		1139788						
ANR	1139996	Symbol	host		1139788						
ANR	1139997	Symbol	error_reason . Value		1139788						
ANR	1139998	Symbol	FALSE		1139788						
ANR	1139999	Symbol	id		1139788						
ANR	1140000	Symbol	strdup		1139788						
ANR	1140001	Symbol	buff		1139788						
ANR	1140002	Symbol	* sock		1139788						
ANR	1140003	Symbol	start_stork_command_and_authenticate		1139788						
ANR	1140004	Function	stork_status	328:0:7204:8294							
ANR	1140005	FunctionDef	"stork_status (const char * id , const char * host , classad :: ClassAd * & result , char * & _error_reason)"		1140004	0					
ANR	1140006	CompoundStatement		333:27:7326:8294	1140004	0					
ANR	1140007	IdentifierDeclStatement	MyString error_reason ;	336:1:7352:7373	1140004	0	True				
ANR	1140008	IdentifierDecl	error_reason		1140004	0					
ANR	1140009	IdentifierDeclType	MyString		1140004	0					
ANR	1140010	Identifier	error_reason		1140004	1					
ANR	1140011	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason ) ;"	337:1:7376:7505	1140004	1	True				
ANR	1140012	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		1140004	0					
ANR	1140013	IdentifierDeclType	Sock *		1140004	0					
ANR	1140014	Identifier	sock		1140004	1					
ANR	1140015	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		1140004	2		=			
ANR	1140016	Identifier	sock		1140004	0					
ANR	1140017	CallExpression	"start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		1140004	1					
ANR	1140018	Callee	start_stork_command_and_authenticate		1140004	0					
ANR	1140019	Identifier	start_stork_command_and_authenticate		1140004	0					
ANR	1140020	ArgumentList	host		1140004	1					
ANR	1140021	Argument	host		1140004	0					
ANR	1140022	Identifier	host		1140004	0					
ANR	1140023	Argument	STORK_STATUS		1140004	1					
ANR	1140024	Identifier	STORK_STATUS		1140004	0					
ANR	1140025	Argument	error_reason		1140004	2					
ANR	1140026	Identifier	error_reason		1140004	0					
ANR	1140027	IfStatement	if ( ! sock )		1140004	2					
ANR	1140028	Condition	! sock	343:5:7513:7517	1140004	0	True				
ANR	1140029	UnaryOperationExpression	! sock		1140004	0					
ANR	1140030	UnaryOperator	!		1140004	0					
ANR	1140031	Identifier	sock		1140004	1					
ANR	1140032	CompoundStatement		11:12:193:193	1140004	1					
ANR	1140033	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	344:2:7524:7569	1140004	0	True				
ANR	1140034	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		1140004	0		=			
ANR	1140035	Identifier	_error_reason		1140004	0					
ANR	1140036	CallExpression	strdup ( error_reason . Value ( ) )		1140004	1					
ANR	1140037	Callee	strdup		1140004	0					
ANR	1140038	Identifier	strdup		1140004	0					
ANR	1140039	ArgumentList	error_reason . Value ( )		1140004	1					
ANR	1140040	Argument	error_reason . Value ( )		1140004	0					
ANR	1140041	CallExpression	error_reason . Value ( )		1140004	0					
ANR	1140042	Callee	error_reason . Value		1140004	0					
ANR	1140043	MemberAccess	error_reason . Value		1140004	0					
ANR	1140044	Identifier	error_reason		1140004	0					
ANR	1140045	Identifier	Value		1140004	1					
ANR	1140046	ArgumentList			1140004	1					
ANR	1140047	ReturnStatement	return FALSE ;	345:2:7573:7585	1140004	1	True				
ANR	1140048	Identifier	FALSE		1140004	0					
ANR	1140049	ExpressionStatement	sock -> encode ( )	348:1:7592:7606	1140004	3	True				
ANR	1140050	CallExpression	sock -> encode ( )		1140004	0					
ANR	1140051	Callee	sock -> encode		1140004	0					
ANR	1140052	PtrMemberAccess	sock -> encode		1140004	0					
ANR	1140053	Identifier	sock		1140004	0					
ANR	1140054	Identifier	encode		1140004	1					
ANR	1140055	ArgumentList			1140004	1					
ANR	1140056	IfStatement	if ( ! sock -> put ( id ) )		1140004	4					
ANR	1140057	Condition	! sock -> put ( id )	350:5:7614:7628	1140004	0	True				
ANR	1140058	UnaryOperationExpression	! sock -> put ( id )		1140004	0					
ANR	1140059	UnaryOperator	!		1140004	0					
ANR	1140060	CallExpression	sock -> put ( id )		1140004	1					
ANR	1140061	Callee	sock -> put		1140004	0					
ANR	1140062	PtrMemberAccess	sock -> put		1140004	0					
ANR	1140063	Identifier	sock		1140004	0					
ANR	1140064	Identifier	put		1140004	1					
ANR	1140065	ArgumentList	id		1140004	1					
ANR	1140066	Argument	id		1140004	0					
ANR	1140067	Identifier	id		1140004	0					
ANR	1140068	CompoundStatement		18:22:304:304	1140004	1					
ANR	1140069	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	351:2:7635:7679	1140004	0	True				
ANR	1140070	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		1140004	0		=			
ANR	1140071	Identifier	_error_reason		1140004	0					
ANR	1140072	CallExpression	"strdup ( ""Client send error"" )"		1140004	1					
ANR	1140073	Callee	strdup		1140004	0					
ANR	1140074	Identifier	strdup		1140004	0					
ANR	1140075	ArgumentList	"""Client send error"""		1140004	1					
ANR	1140076	Argument	"""Client send error"""		1140004	0					
ANR	1140077	PrimaryExpression	"""Client send error"""		1140004	0					
ANR	1140078	Statement	delete	352:2:7683:7688	1140004	1	True				
ANR	1140079	ExpressionStatement	sock	352:9:7690:7694	1140004	2	True				
ANR	1140080	Identifier	sock		1140004	0					
ANR	1140081	ReturnStatement	return FALSE ;	353:2:7698:7710	1140004	3	True				
ANR	1140082	Identifier	FALSE		1140004	0					
ANR	1140083	ExpressionStatement	sock -> end_of_message ( )	356:1:7717:7739	1140004	5	True				
ANR	1140084	CallExpression	sock -> end_of_message ( )		1140004	0					
ANR	1140085	Callee	sock -> end_of_message		1140004	0					
ANR	1140086	PtrMemberAccess	sock -> end_of_message		1140004	0					
ANR	1140087	Identifier	sock		1140004	0					
ANR	1140088	Identifier	end_of_message		1140004	1					
ANR	1140089	ArgumentList			1140004	1					
ANR	1140090	ExpressionStatement	sock -> decode ( )	357:1:7742:7756	1140004	6	True				
ANR	1140091	CallExpression	sock -> decode ( )		1140004	0					
ANR	1140092	Callee	sock -> decode		1140004	0					
ANR	1140093	PtrMemberAccess	sock -> decode		1140004	0					
ANR	1140094	Identifier	sock		1140004	0					
ANR	1140095	Identifier	decode		1140004	1					
ANR	1140096	ArgumentList			1140004	1					
ANR	1140097	IdentifierDeclStatement	int rc = 0 ;	359:1:7761:7771	1140004	7	True				
ANR	1140098	IdentifierDecl	rc = 0		1140004	0					
ANR	1140099	IdentifierDeclType	int		1140004	0					
ANR	1140100	Identifier	rc		1140004	1					
ANR	1140101	AssignmentExpression	rc = 0		1140004	2		=			
ANR	1140102	Identifier	rc		1140004	0					
ANR	1140103	PrimaryExpression	0		1140004	1					
ANR	1140104	IdentifierDeclStatement	MyString buf ;	361:1:7815:7827	1140004	8	True				
ANR	1140105	IdentifierDecl	buf		1140004	0					
ANR	1140106	IdentifierDeclType	MyString		1140004	0					
ANR	1140107	Identifier	buf		1140004	1					
ANR	1140108	IfStatement	if ( ! ( sock -> code ( rc ) && sock -> code ( buf ) ) )		1140004	9					
ANR	1140109	Condition	! ( sock -> code ( rc ) && sock -> code ( buf ) )	362:5:7834:7869	1140004	0	True				
ANR	1140110	UnaryOperationExpression	! ( sock -> code ( rc ) && sock -> code ( buf ) )		1140004	0					
ANR	1140111	UnaryOperator	!		1140004	0					
ANR	1140112	AndExpression	sock -> code ( rc ) && sock -> code ( buf )		1140004	1		&&			
ANR	1140113	CallExpression	sock -> code ( rc )		1140004	0					
ANR	1140114	Callee	sock -> code		1140004	0					
ANR	1140115	PtrMemberAccess	sock -> code		1140004	0					
ANR	1140116	Identifier	sock		1140004	0					
ANR	1140117	Identifier	code		1140004	1					
ANR	1140118	ArgumentList	rc		1140004	1					
ANR	1140119	Argument	rc		1140004	0					
ANR	1140120	Identifier	rc		1140004	0					
ANR	1140121	CallExpression	sock -> code ( buf )		1140004	1					
ANR	1140122	Callee	sock -> code		1140004	0					
ANR	1140123	PtrMemberAccess	sock -> code		1140004	0					
ANR	1140124	Identifier	sock		1140004	0					
ANR	1140125	Identifier	code		1140004	1					
ANR	1140126	ArgumentList	buf		1140004	1					
ANR	1140127	Argument	buf		1140004	0					
ANR	1140128	Identifier	buf		1140004	0					
ANR	1140129	CompoundStatement		30:43:545:545	1140004	1					
ANR	1140130	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	363:2:7876:7920	1140004	0	True				
ANR	1140131	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		1140004	0		=			
ANR	1140132	Identifier	_error_reason		1140004	0					
ANR	1140133	CallExpression	"strdup ( ""Client recv error"" )"		1140004	1					
ANR	1140134	Callee	strdup		1140004	0					
ANR	1140135	Identifier	strdup		1140004	0					
ANR	1140136	ArgumentList	"""Client recv error"""		1140004	1					
ANR	1140137	Argument	"""Client recv error"""		1140004	0					
ANR	1140138	PrimaryExpression	"""Client recv error"""		1140004	0					
ANR	1140139	Statement	delete	364:2:7924:7929	1140004	1	True				
ANR	1140140	ExpressionStatement	sock	364:9:7931:7935	1140004	2	True				
ANR	1140141	Identifier	sock		1140004	0					
ANR	1140142	ReturnStatement	return FALSE ;	365:2:7939:7951	1140004	3	True				
ANR	1140143	Identifier	FALSE		1140004	0					
ANR	1140144	IfStatement	if ( rc )		1140004	10					
ANR	1140145	Condition	rc	369:5:7963:7964	1140004	0	True				
ANR	1140146	Identifier	rc		1140004	0					
ANR	1140147	CompoundStatement		38:3:645:674	1140004	1					
ANR	1140148	IdentifierDeclStatement	classad :: ClassAdParser parser ;	370:3:7972:8001	1140004	0	True				
ANR	1140149	IdentifierDecl	parser		1140004	0					
ANR	1140150	IdentifierDeclType	classad :: ClassAdParser		1140004	0					
ANR	1140151	Identifier	parser		1140004	1					
ANR	1140152	ExpressionStatement	result = parser . ParseClassAd ( buf . Value ( ) )	371:3:8006:8050	1140004	1	True				
ANR	1140153	AssignmentExpression	result = parser . ParseClassAd ( buf . Value ( ) )		1140004	0		=			
ANR	1140154	Identifier	result		1140004	0					
ANR	1140155	CallExpression	parser . ParseClassAd ( buf . Value ( ) )		1140004	1					
ANR	1140156	Callee	parser . ParseClassAd		1140004	0					
ANR	1140157	MemberAccess	parser . ParseClassAd		1140004	0					
ANR	1140158	Identifier	parser		1140004	0					
ANR	1140159	Identifier	ParseClassAd		1140004	1					
ANR	1140160	ArgumentList	buf . Value ( )		1140004	1					
ANR	1140161	Argument	buf . Value ( )		1140004	0					
ANR	1140162	CallExpression	buf . Value ( )		1140004	0					
ANR	1140163	Callee	buf . Value		1140004	0					
ANR	1140164	MemberAccess	buf . Value		1140004	0					
ANR	1140165	Identifier	buf		1140004	0					
ANR	1140166	Identifier	Value		1140004	1					
ANR	1140167	ArgumentList			1140004	1					
ANR	1140168	IfStatement	if ( ! result )		1140004	2					
ANR	1140169	Condition	! result	372:7:8059:8065	1140004	0	True				
ANR	1140170	UnaryOperationExpression	! result		1140004	0					
ANR	1140171	UnaryOperator	!		1140004	0					
ANR	1140172	Identifier	result		1140004	1					
ANR	1140173	CompoundStatement		40:16:741:741	1140004	1					
ANR	1140174	ExpressionStatement	"_error_reason = strdup ( ""Unable to parse result"" )"	373:4:8074:8120	1140004	0	True				
ANR	1140175	AssignmentExpression	"_error_reason = strdup ( ""Unable to parse result"" )"		1140004	0		=			
ANR	1140176	Identifier	_error_reason		1140004	0					
ANR	1140177	CallExpression	"strdup ( ""Unable to parse result"" )"		1140004	1					
ANR	1140178	Callee	strdup		1140004	0					
ANR	1140179	Identifier	strdup		1140004	0					
ANR	1140180	ArgumentList	"""Unable to parse result"""		1140004	1					
ANR	1140181	Argument	"""Unable to parse result"""		1140004	0					
ANR	1140182	PrimaryExpression	"""Unable to parse result"""		1140004	0					
ANR	1140183	ExpressionStatement	rc = 0	374:4:8126:8130	1140004	1	True				
ANR	1140184	AssignmentExpression	rc = 0		1140004	0		=			
ANR	1140185	Identifier	rc		1140004	0					
ANR	1140186	PrimaryExpression	0		1140004	1					
ANR	1140187	ElseStatement	else		1140004	0					
ANR	1140188	CompoundStatement		43:10:815:815	1140004	0					
ANR	1140189	ExpressionStatement	_error_reason = NULL	376:4:8148:8168	1140004	0	True				
ANR	1140190	AssignmentExpression	_error_reason = NULL		1140004	0		=			
ANR	1140191	Identifier	_error_reason		1140004	0					
ANR	1140192	Identifier	NULL		1140004	1					
ANR	1140193	ElseStatement	else		1140004	0					
ANR	1140194	CompoundStatement		46:8:856:856	1140004	0					
ANR	1140195	ExpressionStatement	result = NULL	379:2:8187:8200	1140004	0	True				
ANR	1140196	AssignmentExpression	result = NULL		1140004	0		=			
ANR	1140197	Identifier	result		1140004	0					
ANR	1140198	Identifier	NULL		1140004	1					
ANR	1140199	ExpressionStatement	_error_reason = buf . StrDup ( )	380:2:8204:8233	1140004	1	True				
ANR	1140200	AssignmentExpression	_error_reason = buf . StrDup ( )		1140004	0		=			
ANR	1140201	Identifier	_error_reason		1140004	0					
ANR	1140202	CallExpression	buf . StrDup ( )		1140004	1					
ANR	1140203	Callee	buf . StrDup		1140004	0					
ANR	1140204	MemberAccess	buf . StrDup		1140004	0					
ANR	1140205	Identifier	buf		1140004	0					
ANR	1140206	Identifier	StrDup		1140004	1					
ANR	1140207	ArgumentList			1140004	1					
ANR	1140208	ExpressionStatement	sock -> close ( )	383:1:8240:8253	1140004	11	True				
ANR	1140209	CallExpression	sock -> close ( )		1140004	0					
ANR	1140210	Callee	sock -> close		1140004	0					
ANR	1140211	PtrMemberAccess	sock -> close		1140004	0					
ANR	1140212	Identifier	sock		1140004	0					
ANR	1140213	Identifier	close		1140004	1					
ANR	1140214	ArgumentList			1140004	1					
ANR	1140215	Statement	delete	384:1:8256:8261	1140004	12	True				
ANR	1140216	ExpressionStatement	sock	384:8:8263:8267	1140004	13	True				
ANR	1140217	Identifier	sock		1140004	0					
ANR	1140218	ReturnStatement	return ( rc ) ? TRUE : FALSE ;	385:1:8270:8292	1140004	14	True				
ANR	1140219	ConditionalExpression	( rc ) ? TRUE : FALSE		1140004	0					
ANR	1140220	Condition	rc		1140004	0					
ANR	1140221	Identifier	rc		1140004	0					
ANR	1140222	Identifier	TRUE		1140004	1					
ANR	1140223	Identifier	FALSE		1140004	2					
ANR	1140224	ReturnType	int		1140004	1					
ANR	1140225	Identifier	stork_status		1140004	2					
ANR	1140226	ParameterList	"const char * id , const char * host , classad :: ClassAd * & result , char * & _error_reason"		1140004	3					
ANR	1140227	Parameter	const char * id	330:3:7226:7240	1140004	0	True				
ANR	1140228	ParameterType	const char *		1140004	0					
ANR	1140229	Identifier	id		1140004	1					
ANR	1140230	Parameter	const char * host	331:3:7247:7263	1140004	1	True				
ANR	1140231	ParameterType	const char *		1140004	0					
ANR	1140232	Identifier	host		1140004	1					
ANR	1140233	Parameter	classad :: ClassAd * & result	332:3:7270:7296	1140004	2	True				
ANR	1140234	ParameterType	classad :: ClassAd * &		1140004	0					
ANR	1140235	Identifier	result		1140004	1					
ANR	1140236	Parameter	char * & _error_reason	333:3:7302:7323	1140004	3	True				
ANR	1140237	ParameterType	char * &		1140004	0					
ANR	1140238	Identifier	_error_reason		1140004	1					
ANR	1140239	CFGEntryNode	ENTRY		1140004		True				
ANR	1140240	CFGExitNode	EXIT		1140004		True				
ANR	1140241	Symbol	buf . StrDup		1140004						
ANR	1140242	Symbol	NULL		1140004						
ANR	1140243	Symbol	sock -> put		1140004						
ANR	1140244	Symbol	TRUE		1140004						
ANR	1140245	Symbol	STORK_STATUS		1140004						
ANR	1140246	Symbol	parser . ParseClassAd		1140004						
ANR	1140247	Symbol	result		1140004						
ANR	1140248	Symbol	sock		1140004						
ANR	1140249	Symbol	rc		1140004						
ANR	1140250	Symbol	error_reason		1140004						
ANR	1140251	Symbol	buf		1140004						
ANR	1140252	Symbol	_error_reason		1140004						
ANR	1140253	Symbol	sock -> code		1140004						
ANR	1140254	Symbol	parser		1140004						
ANR	1140255	Symbol	host		1140004						
ANR	1140256	Symbol	error_reason . Value		1140004						
ANR	1140257	Symbol	buf . Value		1140004						
ANR	1140258	Symbol	FALSE		1140004						
ANR	1140259	Symbol	id		1140004						
ANR	1140260	Symbol	strdup		1140004						
ANR	1140261	Symbol	* sock		1140004						
ANR	1140262	Symbol	start_stork_command_and_authenticate		1140004						
ANR	1140263	Function	stork_list	391:0:8300:9230							
ANR	1140264	FunctionDef	"stork_list (const char * host , int & result_size , classad :: ClassAd * * & result , char * & _error_reason)"		1140263	0					
ANR	1140265	CompoundStatement		396:27:8423:9230	1140263	0					
ANR	1140266	IdentifierDeclStatement	MyString error_reason ;	399:1:8449:8470	1140263	0	True				
ANR	1140267	IdentifierDecl	error_reason		1140263	0					
ANR	1140268	IdentifierDeclType	MyString		1140263	0					
ANR	1140269	Identifier	error_reason		1140263	1					
ANR	1140270	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason ) ;"	400:1:8473:8600	1140263	1	True				
ANR	1140271	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		1140263	0					
ANR	1140272	IdentifierDeclType	Sock *		1140263	0					
ANR	1140273	Identifier	sock		1140263	1					
ANR	1140274	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		1140263	2		=			
ANR	1140275	Identifier	sock		1140263	0					
ANR	1140276	CallExpression	"start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		1140263	1					
ANR	1140277	Callee	start_stork_command_and_authenticate		1140263	0					
ANR	1140278	Identifier	start_stork_command_and_authenticate		1140263	0					
ANR	1140279	ArgumentList	host		1140263	1					
ANR	1140280	Argument	host		1140263	0					
ANR	1140281	Identifier	host		1140263	0					
ANR	1140282	Argument	STORK_LIST		1140263	1					
ANR	1140283	Identifier	STORK_LIST		1140263	0					
ANR	1140284	Argument	error_reason		1140263	2					
ANR	1140285	Identifier	error_reason		1140263	0					
ANR	1140286	IfStatement	if ( ! sock )		1140263	2					
ANR	1140287	Condition	! sock	406:5:8608:8612	1140263	0	True				
ANR	1140288	UnaryOperationExpression	! sock		1140263	0					
ANR	1140289	UnaryOperator	!		1140263	0					
ANR	1140290	Identifier	sock		1140263	1					
ANR	1140291	CompoundStatement		11:12:191:191	1140263	1					
ANR	1140292	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	407:2:8619:8664	1140263	0	True				
ANR	1140293	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		1140263	0		=			
ANR	1140294	Identifier	_error_reason		1140263	0					
ANR	1140295	CallExpression	strdup ( error_reason . Value ( ) )		1140263	1					
ANR	1140296	Callee	strdup		1140263	0					
ANR	1140297	Identifier	strdup		1140263	0					
ANR	1140298	ArgumentList	error_reason . Value ( )		1140263	1					
ANR	1140299	Argument	error_reason . Value ( )		1140263	0					
ANR	1140300	CallExpression	error_reason . Value ( )		1140263	0					
ANR	1140301	Callee	error_reason . Value		1140263	0					
ANR	1140302	MemberAccess	error_reason . Value		1140263	0					
ANR	1140303	Identifier	error_reason		1140263	0					
ANR	1140304	Identifier	Value		1140263	1					
ANR	1140305	ArgumentList			1140263	1					
ANR	1140306	ReturnStatement	return FALSE ;	408:2:8668:8680	1140263	1	True				
ANR	1140307	Identifier	FALSE		1140263	0					
ANR	1140308	ExpressionStatement	sock -> decode ( )	410:1:8686:8700	1140263	3	True				
ANR	1140309	CallExpression	sock -> decode ( )		1140263	0					
ANR	1140310	Callee	sock -> decode		1140263	0					
ANR	1140311	PtrMemberAccess	sock -> decode		1140263	0					
ANR	1140312	Identifier	sock		1140263	0					
ANR	1140313	Identifier	decode		1140263	1					
ANR	1140314	ArgumentList			1140263	1					
ANR	1140315	IdentifierDeclStatement	int rc = 0 ;	412:1:8704:8714	1140263	4	True				
ANR	1140316	IdentifierDecl	rc = 0		1140263	0					
ANR	1140317	IdentifierDeclType	int		1140263	0					
ANR	1140318	Identifier	rc		1140263	1					
ANR	1140319	AssignmentExpression	rc = 0		1140263	2		=			
ANR	1140320	Identifier	rc		1140263	0					
ANR	1140321	PrimaryExpression	0		1140263	1					
ANR	1140322	IfStatement	if ( ! sock -> code ( rc ) )		1140263	5					
ANR	1140323	Condition	! sock -> code ( rc )	413:5:8721:8735	1140263	0	True				
ANR	1140324	UnaryOperationExpression	! sock -> code ( rc )		1140263	0					
ANR	1140325	UnaryOperator	!		1140263	0					
ANR	1140326	CallExpression	sock -> code ( rc )		1140263	1					
ANR	1140327	Callee	sock -> code		1140263	0					
ANR	1140328	PtrMemberAccess	sock -> code		1140263	0					
ANR	1140329	Identifier	sock		1140263	0					
ANR	1140330	Identifier	code		1140263	1					
ANR	1140331	ArgumentList	rc		1140263	1					
ANR	1140332	Argument	rc		1140263	0					
ANR	1140333	Identifier	rc		1140263	0					
ANR	1140334	CompoundStatement		18:22:314:314	1140263	1					
ANR	1140335	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	414:2:8742:8786	1140263	0	True				
ANR	1140336	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		1140263	0		=			
ANR	1140337	Identifier	_error_reason		1140263	0					
ANR	1140338	CallExpression	"strdup ( ""Client recv error"" )"		1140263	1					
ANR	1140339	Callee	strdup		1140263	0					
ANR	1140340	Identifier	strdup		1140263	0					
ANR	1140341	ArgumentList	"""Client recv error"""		1140263	1					
ANR	1140342	Argument	"""Client recv error"""		1140263	0					
ANR	1140343	PrimaryExpression	"""Client recv error"""		1140263	0					
ANR	1140344	Statement	delete	415:2:8790:8795	1140263	1	True				
ANR	1140345	ExpressionStatement	sock	415:9:8797:8801	1140263	2	True				
ANR	1140346	Identifier	sock		1140263	0					
ANR	1140347	ReturnStatement	return FALSE ;	416:2:8805:8817	1140263	3	True				
ANR	1140348	Identifier	FALSE		1140263	0					
ANR	1140349	ExpressionStatement	result_size = rc	419:1:8824:8840	1140263	6	True				
ANR	1140350	AssignmentExpression	result_size = rc		1140263	0		=			
ANR	1140351	Identifier	result_size		1140263	0					
ANR	1140352	Identifier	rc		1140263	1					
ANR	1140353	IdentifierDeclStatement	int i ;	420:1:8843:8848	1140263	7	True				
ANR	1140354	IdentifierDecl	i		1140263	0					
ANR	1140355	IdentifierDeclType	int		1140263	0					
ANR	1140356	Identifier	i		1140263	1					
ANR	1140357	IdentifierDeclStatement	MyString buf ;	422:1:8852:8864	1140263	8	True				
ANR	1140358	IdentifierDecl	buf		1140263	0					
ANR	1140359	IdentifierDeclType	MyString		1140263	0					
ANR	1140360	Identifier	buf		1140263	1					
ANR	1140361	IdentifierDeclStatement	classad :: ClassAdParser parser ;	423:1:8867:8896	1140263	9	True				
ANR	1140362	IdentifierDecl	parser		1140263	0					
ANR	1140363	IdentifierDeclType	classad :: ClassAdParser		1140263	0					
ANR	1140364	Identifier	parser		1140263	1					
ANR	1140365	Statement	result	425:1:8900:8905	1140263	10	True				
ANR	1140366	Statement	=	425:8:8907:8907	1140263	11	True				
ANR	1140367	Statement	new	425:10:8909:8911	1140263	12	True				
ANR	1140368	Statement	classad	425:14:8913:8919	1140263	13	True				
ANR	1140369	Statement	::	425:21:8920:8921	1140263	14	True				
ANR	1140370	Statement	ClassAd	425:23:8922:8928	1140263	15	True				
ANR	1140371	Statement	*	425:30:8929:8929	1140263	16	True				
ANR	1140372	Statement	[	425:31:8930:8930	1140263	17	True				
ANR	1140373	Statement	result_size	425:32:8931:8941	1140263	18	True				
ANR	1140374	Statement	]	425:43:8942:8942	1140263	19	True				
ANR	1140375	ExpressionStatement		425:44:8943:8943	1140263	20	True				
ANR	1140376	ForStatement	for ( i = 0 ; i < result_size ; i ++ )		1140263	21					
ANR	1140377	ForInit	i = 0 ;	426:6:8951:8954	1140263	0	True				
ANR	1140378	AssignmentExpression	i = 0		1140263	0		=			
ANR	1140379	Identifier	i		1140263	0					
ANR	1140380	PrimaryExpression	0		1140263	1					
ANR	1140381	Condition	i < result_size	426:11:8956:8968	1140263	1	True				
ANR	1140382	RelationalExpression	i < result_size		1140263	0		<			
ANR	1140383	Identifier	i		1140263	0					
ANR	1140384	Identifier	result_size		1140263	1					
ANR	1140385	PostIncDecOperationExpression	i ++	426:26:8971:8973	1140263	2	True				
ANR	1140386	Identifier	i		1140263	0					
ANR	1140387	IncDec	++		1140263	1					
ANR	1140388	CompoundStatement		31:31:552:552	1140263	3					
ANR	1140389	IfStatement	if ( ! sock -> code ( buf ) )		1140263	0					
ANR	1140390	Condition	! sock -> code ( buf )	427:6:8984:8999	1140263	0	True				
ANR	1140391	UnaryOperationExpression	! sock -> code ( buf )		1140263	0					
ANR	1140392	UnaryOperator	!		1140263	0					
ANR	1140393	CallExpression	sock -> code ( buf )		1140263	1					
ANR	1140394	Callee	sock -> code		1140263	0					
ANR	1140395	PtrMemberAccess	sock -> code		1140263	0					
ANR	1140396	Identifier	sock		1140263	0					
ANR	1140397	Identifier	code		1140263	1					
ANR	1140398	ArgumentList	buf		1140263	1					
ANR	1140399	Argument	buf		1140263	0					
ANR	1140400	Identifier	buf		1140263	0					
ANR	1140401	CompoundStatement		32:24:578:578	1140263	1					
ANR	1140402	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	428:3:9007:9051	1140263	0	True				
ANR	1140403	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		1140263	0		=			
ANR	1140404	Identifier	_error_reason		1140263	0					
ANR	1140405	CallExpression	"strdup ( ""Client recv error"" )"		1140263	1					
ANR	1140406	Callee	strdup		1140263	0					
ANR	1140407	Identifier	strdup		1140263	0					
ANR	1140408	ArgumentList	"""Client recv error"""		1140263	1					
ANR	1140409	Argument	"""Client recv error"""		1140263	0					
ANR	1140410	PrimaryExpression	"""Client recv error"""		1140263	0					
ANR	1140411	Statement	delete	429:3:9056:9061	1140263	1	True				
ANR	1140412	ExpressionStatement	sock	429:10:9063:9067	1140263	2	True				
ANR	1140413	Identifier	sock		1140263	0					
ANR	1140414	ReturnStatement	return FALSE ;	430:3:9072:9084	1140263	3	True				
ANR	1140415	Identifier	FALSE		1140263	0					
ANR	1140416	ExpressionStatement	result [ i ] = parser . ParseClassAd ( buf . Value ( ) )	433:2:9095:9141	1140263	1	True				
ANR	1140417	AssignmentExpression	result [ i ] = parser . ParseClassAd ( buf . Value ( ) )		1140263	0		=			
ANR	1140418	ArrayIndexing	result [ i ]		1140263	0					
ANR	1140419	Identifier	result		1140263	0					
ANR	1140420	Identifier	i		1140263	1					
ANR	1140421	CallExpression	parser . ParseClassAd ( buf . Value ( ) )		1140263	1					
ANR	1140422	Callee	parser . ParseClassAd		1140263	0					
ANR	1140423	MemberAccess	parser . ParseClassAd		1140263	0					
ANR	1140424	Identifier	parser		1140263	0					
ANR	1140425	Identifier	ParseClassAd		1140263	1					
ANR	1140426	ArgumentList	buf . Value ( )		1140263	1					
ANR	1140427	Argument	buf . Value ( )		1140263	0					
ANR	1140428	CallExpression	buf . Value ( )		1140263	0					
ANR	1140429	Callee	buf . Value		1140263	0					
ANR	1140430	MemberAccess	buf . Value		1140263	0					
ANR	1140431	Identifier	buf		1140263	0					
ANR	1140432	Identifier	Value		1140263	1					
ANR	1140433	ArgumentList			1140263	1					
ANR	1140434	ExpressionStatement	_error_reason = NULL	435:1:9147:9167	1140263	22	True				
ANR	1140435	AssignmentExpression	_error_reason = NULL		1140263	0		=			
ANR	1140436	Identifier	_error_reason		1140263	0					
ANR	1140437	Identifier	NULL		1140263	1					
ANR	1140438	ExpressionStatement	sock -> close ( )	437:1:9171:9184	1140263	23	True				
ANR	1140439	CallExpression	sock -> close ( )		1140263	0					
ANR	1140440	Callee	sock -> close		1140263	0					
ANR	1140441	PtrMemberAccess	sock -> close		1140263	0					
ANR	1140442	Identifier	sock		1140263	0					
ANR	1140443	Identifier	close		1140263	1					
ANR	1140444	ArgumentList			1140263	1					
ANR	1140445	Statement	delete	438:1:9187:9192	1140263	24	True				
ANR	1140446	ExpressionStatement	sock	438:8:9194:9198	1140263	25	True				
ANR	1140447	Identifier	sock		1140263	0					
ANR	1140448	ReturnStatement	return ( rc >= 0 ) ? TRUE : FALSE ;	439:1:9201:9228	1140263	26	True				
ANR	1140449	ConditionalExpression	( rc >= 0 ) ? TRUE : FALSE		1140263	0					
ANR	1140450	Condition	rc >= 0		1140263	0					
ANR	1140451	RelationalExpression	rc >= 0		1140263	0		>=			
ANR	1140452	Identifier	rc		1140263	0					
ANR	1140453	PrimaryExpression	0		1140263	1					
ANR	1140454	Identifier	TRUE		1140263	1					
ANR	1140455	Identifier	FALSE		1140263	2					
ANR	1140456	ReturnType	int		1140263	1					
ANR	1140457	Identifier	stork_list		1140263	2					
ANR	1140458	ParameterList	"const char * host , int & result_size , classad :: ClassAd * * & result , char * & _error_reason"		1140263	3					
ANR	1140459	Parameter	const char * host	393:3:8320:8336	1140263	0	True				
ANR	1140460	ParameterType	const char *		1140263	0					
ANR	1140461	Identifier	host		1140263	1					
ANR	1140462	Parameter	int & result_size	394:3:8343:8359	1140263	1	True				
ANR	1140463	ParameterType	int &		1140263	0					
ANR	1140464	Identifier	result_size		1140263	1					
ANR	1140465	Parameter	classad :: ClassAd * * & result	395:3:8366:8393	1140263	2	True				
ANR	1140466	ParameterType	classad :: ClassAd * * &		1140263	0					
ANR	1140467	Identifier	result		1140263	1					
ANR	1140468	Parameter	char * & _error_reason	396:3:8399:8420	1140263	3	True				
ANR	1140469	ParameterType	char * &		1140263	0					
ANR	1140470	Identifier	_error_reason		1140263	1					
ANR	1140471	CFGEntryNode	ENTRY		1140263		True				
ANR	1140472	CFGExitNode	EXIT		1140263		True				
ANR	1140473	Symbol	NULL		1140263						
ANR	1140474	Symbol	i		1140263						
ANR	1140475	Symbol	TRUE		1140263						
ANR	1140476	Symbol	parser . ParseClassAd		1140263						
ANR	1140477	Symbol	STORK_LIST		1140263						
ANR	1140478	Symbol	result		1140263						
ANR	1140479	Symbol	sock		1140263						
ANR	1140480	Symbol	rc		1140263						
ANR	1140481	Symbol	error_reason		1140263						
ANR	1140482	Symbol	buf		1140263						
ANR	1140483	Symbol	_error_reason		1140263						
ANR	1140484	Symbol	* i		1140263						
ANR	1140485	Symbol	sock -> code		1140263						
ANR	1140486	Symbol	parser		1140263						
ANR	1140487	Symbol	* result		1140263						
ANR	1140488	Symbol	host		1140263						
ANR	1140489	Symbol	error_reason . Value		1140263						
ANR	1140490	Symbol	buf . Value		1140263						
ANR	1140491	Symbol	FALSE		1140263						
ANR	1140492	Symbol	strdup		1140263						
ANR	1140493	Symbol	* sock		1140263						
ANR	1140494	Symbol	result_size		1140263						
ANR	1140495	Symbol	start_stork_command_and_authenticate		1140263						
