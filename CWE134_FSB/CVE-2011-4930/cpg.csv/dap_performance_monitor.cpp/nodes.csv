command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1144949	File	data/converged/CVE-2011-4930_htcondor/dap_performance_monitor.cpp								
ANR	1144950	DeclStmt									
ANR	1144951	Decl							int	int	logtype
ANR	1144952	DeclStmt									
ANR	1144953	Decl							char	char	Node
ANR	1144954	DeclStmt									
ANR	1144955	Decl							char	char [ MAXSTR ]	terminatednormally_true
ANR	1144956	DeclStmt									
ANR	1144957	Decl							char	char [ MAXSTR ]	jobcompletedevent_true
ANR	1144958	DeclStmt									
ANR	1144959	Decl							float	float [ 7 * 1440 ]	dailychart
ANR	1144960	DeclStmt									
ANR	1144961	Decl							float	float [ 7 * 1440 ]	dailychart_A
ANR	1144962	DeclStmt									
ANR	1144963	Decl							float	float [ 7 * 1440 ]	dailychart_C
ANR	1144964	DeclStmt									
ANR	1144965	Decl							int	int [ 7 * 1440 ]	concurrency
ANR	1144966	DeclStmt									
ANR	1144967	Decl							int	int [ 7 * 1440 ]	concurrency_A
ANR	1144968	DeclStmt									
ANR	1144969	Decl							int	int [ 7 * 1440 ]	concurrency_C
ANR	1144970	Function	getmonth	46:0:1335:2019							
ANR	1144971	FunctionDef	getmonth (char * monthstr)		1144970	0					
ANR	1144972	CompoundStatement		47:0:1364:2019	1144970	0					
ANR	1144973	IfStatement	"if ( ! strcmp ( monthstr , ""Jan"" ) )"		1144970	0					
ANR	1144974	Condition	"! strcmp ( monthstr , ""Jan"" )"	48:6:1372:1395	1144970	0	True				
ANR	1144975	UnaryOperationExpression	"! strcmp ( monthstr , ""Jan"" )"		1144970	0					
ANR	1144976	UnaryOperator	!		1144970	0					
ANR	1144977	CallExpression	"strcmp ( monthstr , ""Jan"" )"		1144970	1					
ANR	1144978	Callee	strcmp		1144970	0					
ANR	1144979	Identifier	strcmp		1144970	0					
ANR	1144980	ArgumentList	monthstr		1144970	1					
ANR	1144981	Argument	monthstr		1144970	0					
ANR	1144982	Identifier	monthstr		1144970	0					
ANR	1144983	Argument	"""Jan"""		1144970	1					
ANR	1144984	PrimaryExpression	"""Jan"""		1144970	0					
ANR	1144985	ReturnStatement	return 1 ;	49:4:1402:1410	1144970	1	True				
ANR	1144986	PrimaryExpression	1		1144970	0					
ANR	1144987	ElseStatement	else		1144970	0					
ANR	1144988	IfStatement	"if ( ! strcmp ( monthstr , ""Feb"" ) )"		1144970	0					
ANR	1144989	Condition	"! strcmp ( monthstr , ""Feb"" )"	50:11:1423:1446	1144970	0	True				
ANR	1144990	UnaryOperationExpression	"! strcmp ( monthstr , ""Feb"" )"		1144970	0					
ANR	1144991	UnaryOperator	!		1144970	0					
ANR	1144992	CallExpression	"strcmp ( monthstr , ""Feb"" )"		1144970	1					
ANR	1144993	Callee	strcmp		1144970	0					
ANR	1144994	Identifier	strcmp		1144970	0					
ANR	1144995	ArgumentList	monthstr		1144970	1					
ANR	1144996	Argument	monthstr		1144970	0					
ANR	1144997	Identifier	monthstr		1144970	0					
ANR	1144998	Argument	"""Feb"""		1144970	1					
ANR	1144999	PrimaryExpression	"""Feb"""		1144970	0					
ANR	1145000	ReturnStatement	return 2 ;	51:4:1453:1461	1144970	1	True				
ANR	1145001	PrimaryExpression	2		1144970	0					
ANR	1145002	ElseStatement	else		1144970	0					
ANR	1145003	IfStatement	"if ( ! strcmp ( monthstr , ""Mar"" ) )"		1144970	0					
ANR	1145004	Condition	"! strcmp ( monthstr , ""Mar"" )"	52:11:1474:1497	1144970	0	True				
ANR	1145005	UnaryOperationExpression	"! strcmp ( monthstr , ""Mar"" )"		1144970	0					
ANR	1145006	UnaryOperator	!		1144970	0					
ANR	1145007	CallExpression	"strcmp ( monthstr , ""Mar"" )"		1144970	1					
ANR	1145008	Callee	strcmp		1144970	0					
ANR	1145009	Identifier	strcmp		1144970	0					
ANR	1145010	ArgumentList	monthstr		1144970	1					
ANR	1145011	Argument	monthstr		1144970	0					
ANR	1145012	Identifier	monthstr		1144970	0					
ANR	1145013	Argument	"""Mar"""		1144970	1					
ANR	1145014	PrimaryExpression	"""Mar"""		1144970	0					
ANR	1145015	ReturnStatement	return 3 ;	53:4:1504:1512	1144970	1	True				
ANR	1145016	PrimaryExpression	3		1144970	0					
ANR	1145017	ElseStatement	else		1144970	0					
ANR	1145018	IfStatement	"if ( ! strcmp ( monthstr , ""Apr"" ) )"		1144970	0					
ANR	1145019	Condition	"! strcmp ( monthstr , ""Apr"" )"	54:11:1525:1548	1144970	0	True				
ANR	1145020	UnaryOperationExpression	"! strcmp ( monthstr , ""Apr"" )"		1144970	0					
ANR	1145021	UnaryOperator	!		1144970	0					
ANR	1145022	CallExpression	"strcmp ( monthstr , ""Apr"" )"		1144970	1					
ANR	1145023	Callee	strcmp		1144970	0					
ANR	1145024	Identifier	strcmp		1144970	0					
ANR	1145025	ArgumentList	monthstr		1144970	1					
ANR	1145026	Argument	monthstr		1144970	0					
ANR	1145027	Identifier	monthstr		1144970	0					
ANR	1145028	Argument	"""Apr"""		1144970	1					
ANR	1145029	PrimaryExpression	"""Apr"""		1144970	0					
ANR	1145030	ReturnStatement	return 4 ;	55:4:1555:1563	1144970	1	True				
ANR	1145031	PrimaryExpression	4		1144970	0					
ANR	1145032	ElseStatement	else		1144970	0					
ANR	1145033	IfStatement	"if ( ! strcmp ( monthstr , ""May"" ) )"		1144970	0					
ANR	1145034	Condition	"! strcmp ( monthstr , ""May"" )"	56:11:1576:1599	1144970	0	True				
ANR	1145035	UnaryOperationExpression	"! strcmp ( monthstr , ""May"" )"		1144970	0					
ANR	1145036	UnaryOperator	!		1144970	0					
ANR	1145037	CallExpression	"strcmp ( monthstr , ""May"" )"		1144970	1					
ANR	1145038	Callee	strcmp		1144970	0					
ANR	1145039	Identifier	strcmp		1144970	0					
ANR	1145040	ArgumentList	monthstr		1144970	1					
ANR	1145041	Argument	monthstr		1144970	0					
ANR	1145042	Identifier	monthstr		1144970	0					
ANR	1145043	Argument	"""May"""		1144970	1					
ANR	1145044	PrimaryExpression	"""May"""		1144970	0					
ANR	1145045	ReturnStatement	return 5 ;	57:4:1606:1614	1144970	1	True				
ANR	1145046	PrimaryExpression	5		1144970	0					
ANR	1145047	ElseStatement	else		1144970	0					
ANR	1145048	IfStatement	"if ( ! strcmp ( monthstr , ""Jun"" ) )"		1144970	0					
ANR	1145049	Condition	"! strcmp ( monthstr , ""Jun"" )"	58:11:1627:1650	1144970	0	True				
ANR	1145050	UnaryOperationExpression	"! strcmp ( monthstr , ""Jun"" )"		1144970	0					
ANR	1145051	UnaryOperator	!		1144970	0					
ANR	1145052	CallExpression	"strcmp ( monthstr , ""Jun"" )"		1144970	1					
ANR	1145053	Callee	strcmp		1144970	0					
ANR	1145054	Identifier	strcmp		1144970	0					
ANR	1145055	ArgumentList	monthstr		1144970	1					
ANR	1145056	Argument	monthstr		1144970	0					
ANR	1145057	Identifier	monthstr		1144970	0					
ANR	1145058	Argument	"""Jun"""		1144970	1					
ANR	1145059	PrimaryExpression	"""Jun"""		1144970	0					
ANR	1145060	ReturnStatement	return 6 ;	59:4:1657:1665	1144970	1	True				
ANR	1145061	PrimaryExpression	6		1144970	0					
ANR	1145062	ElseStatement	else		1144970	0					
ANR	1145063	IfStatement	"if ( ! strcmp ( monthstr , ""Jul"" ) )"		1144970	0					
ANR	1145064	Condition	"! strcmp ( monthstr , ""Jul"" )"	60:11:1678:1701	1144970	0	True				
ANR	1145065	UnaryOperationExpression	"! strcmp ( monthstr , ""Jul"" )"		1144970	0					
ANR	1145066	UnaryOperator	!		1144970	0					
ANR	1145067	CallExpression	"strcmp ( monthstr , ""Jul"" )"		1144970	1					
ANR	1145068	Callee	strcmp		1144970	0					
ANR	1145069	Identifier	strcmp		1144970	0					
ANR	1145070	ArgumentList	monthstr		1144970	1					
ANR	1145071	Argument	monthstr		1144970	0					
ANR	1145072	Identifier	monthstr		1144970	0					
ANR	1145073	Argument	"""Jul"""		1144970	1					
ANR	1145074	PrimaryExpression	"""Jul"""		1144970	0					
ANR	1145075	ReturnStatement	return 7 ;	61:4:1708:1716	1144970	1	True				
ANR	1145076	PrimaryExpression	7		1144970	0					
ANR	1145077	ElseStatement	else		1144970	0					
ANR	1145078	IfStatement	"if ( ! strcmp ( monthstr , ""Aug"" ) )"		1144970	0					
ANR	1145079	Condition	"! strcmp ( monthstr , ""Aug"" )"	62:11:1729:1752	1144970	0	True				
ANR	1145080	UnaryOperationExpression	"! strcmp ( monthstr , ""Aug"" )"		1144970	0					
ANR	1145081	UnaryOperator	!		1144970	0					
ANR	1145082	CallExpression	"strcmp ( monthstr , ""Aug"" )"		1144970	1					
ANR	1145083	Callee	strcmp		1144970	0					
ANR	1145084	Identifier	strcmp		1144970	0					
ANR	1145085	ArgumentList	monthstr		1144970	1					
ANR	1145086	Argument	monthstr		1144970	0					
ANR	1145087	Identifier	monthstr		1144970	0					
ANR	1145088	Argument	"""Aug"""		1144970	1					
ANR	1145089	PrimaryExpression	"""Aug"""		1144970	0					
ANR	1145090	ReturnStatement	return 8 ;	63:4:1759:1767	1144970	1	True				
ANR	1145091	PrimaryExpression	8		1144970	0					
ANR	1145092	ElseStatement	else		1144970	0					
ANR	1145093	IfStatement	"if ( ! strcmp ( monthstr , ""Sep"" ) )"		1144970	0					
ANR	1145094	Condition	"! strcmp ( monthstr , ""Sep"" )"	64:11:1780:1803	1144970	0	True				
ANR	1145095	UnaryOperationExpression	"! strcmp ( monthstr , ""Sep"" )"		1144970	0					
ANR	1145096	UnaryOperator	!		1144970	0					
ANR	1145097	CallExpression	"strcmp ( monthstr , ""Sep"" )"		1144970	1					
ANR	1145098	Callee	strcmp		1144970	0					
ANR	1145099	Identifier	strcmp		1144970	0					
ANR	1145100	ArgumentList	monthstr		1144970	1					
ANR	1145101	Argument	monthstr		1144970	0					
ANR	1145102	Identifier	monthstr		1144970	0					
ANR	1145103	Argument	"""Sep"""		1144970	1					
ANR	1145104	PrimaryExpression	"""Sep"""		1144970	0					
ANR	1145105	ReturnStatement	return 9 ;	65:4:1810:1818	1144970	1	True				
ANR	1145106	PrimaryExpression	9		1144970	0					
ANR	1145107	ElseStatement	else		1144970	0					
ANR	1145108	IfStatement	"if ( ! strcmp ( monthstr , ""Oct"" ) )"		1144970	0					
ANR	1145109	Condition	"! strcmp ( monthstr , ""Oct"" )"	66:11:1831:1854	1144970	0	True				
ANR	1145110	UnaryOperationExpression	"! strcmp ( monthstr , ""Oct"" )"		1144970	0					
ANR	1145111	UnaryOperator	!		1144970	0					
ANR	1145112	CallExpression	"strcmp ( monthstr , ""Oct"" )"		1144970	1					
ANR	1145113	Callee	strcmp		1144970	0					
ANR	1145114	Identifier	strcmp		1144970	0					
ANR	1145115	ArgumentList	monthstr		1144970	1					
ANR	1145116	Argument	monthstr		1144970	0					
ANR	1145117	Identifier	monthstr		1144970	0					
ANR	1145118	Argument	"""Oct"""		1144970	1					
ANR	1145119	PrimaryExpression	"""Oct"""		1144970	0					
ANR	1145120	ReturnStatement	return 10 ;	67:4:1861:1870	1144970	1	True				
ANR	1145121	PrimaryExpression	10		1144970	0					
ANR	1145122	ElseStatement	else		1144970	0					
ANR	1145123	IfStatement	"if ( ! strcmp ( monthstr , ""Nov"" ) )"		1144970	0					
ANR	1145124	Condition	"! strcmp ( monthstr , ""Nov"" )"	68:11:1883:1906	1144970	0	True				
ANR	1145125	UnaryOperationExpression	"! strcmp ( monthstr , ""Nov"" )"		1144970	0					
ANR	1145126	UnaryOperator	!		1144970	0					
ANR	1145127	CallExpression	"strcmp ( monthstr , ""Nov"" )"		1144970	1					
ANR	1145128	Callee	strcmp		1144970	0					
ANR	1145129	Identifier	strcmp		1144970	0					
ANR	1145130	ArgumentList	monthstr		1144970	1					
ANR	1145131	Argument	monthstr		1144970	0					
ANR	1145132	Identifier	monthstr		1144970	0					
ANR	1145133	Argument	"""Nov"""		1144970	1					
ANR	1145134	PrimaryExpression	"""Nov"""		1144970	0					
ANR	1145135	ReturnStatement	return 11 ;	69:4:1913:1922	1144970	1	True				
ANR	1145136	PrimaryExpression	11		1144970	0					
ANR	1145137	ElseStatement	else		1144970	0					
ANR	1145138	IfStatement	"if ( ! strcmp ( monthstr , ""Dec"" ) )"		1144970	0					
ANR	1145139	Condition	"! strcmp ( monthstr , ""Dec"" )"	70:11:1935:1958	1144970	0	True				
ANR	1145140	UnaryOperationExpression	"! strcmp ( monthstr , ""Dec"" )"		1144970	0					
ANR	1145141	UnaryOperator	!		1144970	0					
ANR	1145142	CallExpression	"strcmp ( monthstr , ""Dec"" )"		1144970	1					
ANR	1145143	Callee	strcmp		1144970	0					
ANR	1145144	Identifier	strcmp		1144970	0					
ANR	1145145	ArgumentList	monthstr		1144970	1					
ANR	1145146	Argument	monthstr		1144970	0					
ANR	1145147	Identifier	monthstr		1144970	0					
ANR	1145148	Argument	"""Dec"""		1144970	1					
ANR	1145149	PrimaryExpression	"""Dec"""		1144970	0					
ANR	1145150	ReturnStatement	return 12 ;	71:4:1965:1974	1144970	1	True				
ANR	1145151	PrimaryExpression	12		1144970	0					
ANR	1145152	ReturnStatement	return - 1 ;	73:4:1981:1990	1144970	1	True				
ANR	1145153	UnaryOperationExpression	- 1		1144970	0					
ANR	1145154	UnaryOperator	-		1144970	0					
ANR	1145155	PrimaryExpression	1		1144970	1					
ANR	1145156	ReturnType	int		1144970	1					
ANR	1145157	Identifier	getmonth		1144970	2					
ANR	1145158	ParameterList	char * monthstr		1144970	3					
ANR	1145159	Parameter	char * monthstr	46:13:1348:1361	1144970	0	True				
ANR	1145160	ParameterType	char *		1144970	0					
ANR	1145161	Identifier	monthstr		1144970	1					
ANR	1145162	CFGEntryNode	ENTRY		1144970		True				
ANR	1145163	CFGExitNode	EXIT		1144970		True				
ANR	1145164	Symbol	strcmp		1144970						
ANR	1145165	Symbol	monthstr		1144970						
ANR	1145166	Function	getValue	77:0:2023:2514							
ANR	1145167	FunctionDef	"getValue (classad :: ClassAd * currentAd , char * attr , char * attrval)"		1145166	0					
ANR	1145168	CompoundStatement		78:0:2092:2514	1145166	0					
ANR	1145169	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	79:2:2096:2121	1145166	0	True				
ANR	1145170	IdentifierDecl	"adbuffer = """""		1145166	0					
ANR	1145171	IdentifierDeclType	std :: string		1145166	0					
ANR	1145172	Identifier	adbuffer		1145166	1					
ANR	1145173	AssignmentExpression	"adbuffer = """""		1145166	2		=			
ANR	1145174	Identifier	adbuffer		1145166	0					
ANR	1145175	PrimaryExpression	""""""		1145166	1					
ANR	1145176	IdentifierDeclStatement	classad :: ClassAdXMLUnParser unparser ;	80:2:2125:2161	1145166	1	True				
ANR	1145177	IdentifierDecl	unparser		1145166	0					
ANR	1145178	IdentifierDeclType	classad :: ClassAdXMLUnParser		1145166	0					
ANR	1145179	Identifier	unparser		1145166	1					
ANR	1145180	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	81:2:2165:2199	1145166	2	True				
ANR	1145181	IdentifierDecl	* attrexpr = NULL		1145166	0					
ANR	1145182	IdentifierDeclType	classad :: ExprTree *		1145166	0					
ANR	1145183	Identifier	attrexpr		1145166	1					
ANR	1145184	AssignmentExpression	* attrexpr = NULL		1145166	2		=			
ANR	1145185	Identifier	NULL		1145166	0					
ANR	1145186	Identifier	NULL		1145166	1					
ANR	1145187	IfStatement	if ( ! ( attrexpr = currentAd -> Lookup ( attr ) ) )		1145166	3					
ANR	1145188	Condition	! ( attrexpr = currentAd -> Lookup ( attr ) )	83:6:2208:2244	1145166	0	True				
ANR	1145189	UnaryOperationExpression	! ( attrexpr = currentAd -> Lookup ( attr ) )		1145166	0					
ANR	1145190	UnaryOperator	!		1145166	0					
ANR	1145191	AssignmentExpression	attrexpr = currentAd -> Lookup ( attr )		1145166	1		=			
ANR	1145192	Identifier	attrexpr		1145166	0					
ANR	1145193	CallExpression	currentAd -> Lookup ( attr )		1145166	1					
ANR	1145194	Callee	currentAd -> Lookup		1145166	0					
ANR	1145195	PtrMemberAccess	currentAd -> Lookup		1145166	0					
ANR	1145196	Identifier	currentAd		1145166	0					
ANR	1145197	Identifier	Lookup		1145166	1					
ANR	1145198	ArgumentList	attr		1145166	1					
ANR	1145199	Argument	attr		1145166	0					
ANR	1145200	Identifier	attr		1145166	0					
ANR	1145201	CompoundStatement		6:45:154:154	1145166	1					
ANR	1145202	ExpressionStatement	"strncpy ( attrval , """" , 1024 )"	85:4:2292:2318	1145166	0	True				
ANR	1145203	CallExpression	"strncpy ( attrval , """" , 1024 )"		1145166	0					
ANR	1145204	Callee	strncpy		1145166	0					
ANR	1145205	Identifier	strncpy		1145166	0					
ANR	1145206	ArgumentList	attrval		1145166	1					
ANR	1145207	Argument	attrval		1145166	0					
ANR	1145208	Identifier	attrval		1145166	0					
ANR	1145209	Argument	""""""		1145166	1					
ANR	1145210	PrimaryExpression	""""""		1145166	0					
ANR	1145211	Argument	1024		1145166	2					
ANR	1145212	PrimaryExpression	1024		1145166	0					
ANR	1145213	ReturnStatement	return DAP_ERROR ;	86:4:2324:2340	1145166	1	True				
ANR	1145214	Identifier	DAP_ERROR		1145166	0					
ANR	1145215	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	89:2:2349:2385	1145166	4	True				
ANR	1145216	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1145166	0					
ANR	1145217	Callee	unparser . Unparse		1145166	0					
ANR	1145218	MemberAccess	unparser . Unparse		1145166	0					
ANR	1145219	Identifier	unparser		1145166	0					
ANR	1145220	Identifier	Unparse		1145166	1					
ANR	1145221	ArgumentList	adbuffer		1145166	1					
ANR	1145222	Argument	adbuffer		1145166	0					
ANR	1145223	Identifier	adbuffer		1145166	0					
ANR	1145224	Argument	attrexpr		1145166	1					
ANR	1145225	Identifier	attrexpr		1145166	0					
ANR	1145226	ExpressionStatement	"strncpy ( attrval , adbuffer . c_str ( ) , 1024 )"	90:2:2389:2429	1145166	5	True				
ANR	1145227	CallExpression	"strncpy ( attrval , adbuffer . c_str ( ) , 1024 )"		1145166	0					
ANR	1145228	Callee	strncpy		1145166	0					
ANR	1145229	Identifier	strncpy		1145166	0					
ANR	1145230	ArgumentList	attrval		1145166	1					
ANR	1145231	Argument	attrval		1145166	0					
ANR	1145232	Identifier	attrval		1145166	0					
ANR	1145233	Argument	adbuffer . c_str ( )		1145166	1					
ANR	1145234	CallExpression	adbuffer . c_str ( )		1145166	0					
ANR	1145235	Callee	adbuffer . c_str		1145166	0					
ANR	1145236	MemberAccess	adbuffer . c_str		1145166	0					
ANR	1145237	Identifier	adbuffer		1145166	0					
ANR	1145238	Identifier	c_str		1145166	1					
ANR	1145239	ArgumentList			1145166	1					
ANR	1145240	Argument	1024		1145166	2					
ANR	1145241	PrimaryExpression	1024		1145166	0					
ANR	1145242	ReturnStatement	return DAP_SUCCESS ;	93:2:2494:2512	1145166	6	True				
ANR	1145243	Identifier	DAP_SUCCESS		1145166	0					
ANR	1145244	ReturnType	int		1145166	1					
ANR	1145245	Identifier	getValue		1145166	2					
ANR	1145246	ParameterList	"classad :: ClassAd * currentAd , char * attr , char * attrval"		1145166	3					
ANR	1145247	Parameter	classad :: ClassAd * currentAd	77:13:2036:2062	1145166	0	True				
ANR	1145248	ParameterType	classad :: ClassAd *		1145166	0					
ANR	1145249	Identifier	currentAd		1145166	1					
ANR	1145250	Parameter	char * attr	77:42:2065:2074	1145166	1	True				
ANR	1145251	ParameterType	char *		1145166	0					
ANR	1145252	Identifier	attr		1145166	1					
ANR	1145253	Parameter	char * attrval	77:54:2077:2089	1145166	2	True				
ANR	1145254	ParameterType	char *		1145166	0					
ANR	1145255	Identifier	attrval		1145166	1					
ANR	1145256	CFGEntryNode	ENTRY		1145166		True				
ANR	1145257	CFGExitNode	EXIT		1145166		True				
ANR	1145258	Symbol	NULL		1145166						
ANR	1145259	Symbol	* currentAd		1145166						
ANR	1145260	Symbol	attrval		1145166						
ANR	1145261	Symbol	DAP_ERROR		1145166						
ANR	1145262	Symbol	currentAd -> Lookup		1145166						
ANR	1145263	Symbol	unparser		1145166						
ANR	1145264	Symbol	attrexpr		1145166						
ANR	1145265	Symbol	adbuffer . c_str		1145166						
ANR	1145266	Symbol	attr		1145166						
ANR	1145267	Symbol	currentAd		1145166						
ANR	1145268	Symbol	adbuffer		1145166						
ANR	1145269	Symbol	DAP_SUCCESS		1145166						
ANR	1145270	Function	main	96:0:2517:11085							
ANR	1145271	FunctionDef	"main (int argc , char * argv [ ])"		1145270	0					
ANR	1145272	CompoundStatement		97:0:2550:11085	1145270	0					
ANR	1145273	IdentifierDeclStatement	int fd ;	98:2:2554:2560	1145270	0	True				
ANR	1145274	IdentifierDecl	fd		1145270	0					
ANR	1145275	IdentifierDeclType	int		1145270	0					
ANR	1145276	Identifier	fd		1145270	1					
ANR	1145277	IdentifierDeclStatement	"FILE * fp , * fout , * foutA , * foutC ;"	99:2:2564:2595	1145270	1	True				
ANR	1145278	IdentifierDecl	* fp		1145270	0					
ANR	1145279	IdentifierDeclType	FILE *		1145270	0					
ANR	1145280	Identifier	fp		1145270	1					
ANR	1145281	IdentifierDecl	* fout		1145270	1					
ANR	1145282	IdentifierDeclType	FILE *		1145270	0					
ANR	1145283	Identifier	fout		1145270	1					
ANR	1145284	IdentifierDecl	* foutA		1145270	2					
ANR	1145285	IdentifierDeclType	FILE *		1145270	0					
ANR	1145286	Identifier	foutA		1145270	1					
ANR	1145287	IdentifierDecl	* foutC		1145270	3					
ANR	1145288	IdentifierDeclType	FILE *		1145270	0					
ANR	1145289	Identifier	foutC		1145270	1					
ANR	1145290	IdentifierDeclStatement	std :: string mystr ;	100:2:2599:2616	1145270	2	True				
ANR	1145291	IdentifierDecl	mystr		1145270	0					
ANR	1145292	IdentifierDeclType	std :: string		1145270	0					
ANR	1145293	Identifier	mystr		1145270	1					
ANR	1145294	IdentifierDeclStatement	bool job_completed = false ;	102:2:2621:2647	1145270	3	True				
ANR	1145295	IdentifierDecl	job_completed = false		1145270	0					
ANR	1145296	IdentifierDeclType	bool		1145270	0					
ANR	1145297	Identifier	job_completed		1145270	1					
ANR	1145298	AssignmentExpression	job_completed = false		1145270	2		=			
ANR	1145299	Identifier	false		1145270	0					
ANR	1145300	Identifier	false		1145270	1					
ANR	1145301	IdentifierDeclStatement	"int jobs_succeeded = 0 , jobs_failed = 0 , jobs_unfinished = 0 ;"	103:2:2651:2711	1145270	4	True				
ANR	1145302	IdentifierDecl	jobs_succeeded = 0		1145270	0					
ANR	1145303	IdentifierDeclType	int		1145270	0					
ANR	1145304	Identifier	jobs_succeeded		1145270	1					
ANR	1145305	AssignmentExpression	jobs_succeeded = 0		1145270	2		=			
ANR	1145306	Identifier	jobs_succeeded		1145270	0					
ANR	1145307	PrimaryExpression	0		1145270	1					
ANR	1145308	IdentifierDecl	jobs_failed = 0		1145270	1					
ANR	1145309	IdentifierDeclType	int		1145270	0					
ANR	1145310	Identifier	jobs_failed		1145270	1					
ANR	1145311	AssignmentExpression	jobs_failed = 0		1145270	2		=			
ANR	1145312	Identifier	jobs_failed		1145270	0					
ANR	1145313	PrimaryExpression	0		1145270	1					
ANR	1145314	IdentifierDecl	jobs_unfinished = 0		1145270	2					
ANR	1145315	IdentifierDeclType	int		1145270	0					
ANR	1145316	Identifier	jobs_unfinished		1145270	1					
ANR	1145317	AssignmentExpression	jobs_unfinished = 0		1145270	2		=			
ANR	1145318	Identifier	jobs_unfinished		1145270	0					
ANR	1145319	PrimaryExpression	0		1145270	1					
ANR	1145320	IdentifierDeclStatement	"int timeinseconds = 0 , firstday = 0 ;"	104:2:2715:2750	1145270	5	True				
ANR	1145321	IdentifierDecl	timeinseconds = 0		1145270	0					
ANR	1145322	IdentifierDeclType	int		1145270	0					
ANR	1145323	Identifier	timeinseconds		1145270	1					
ANR	1145324	AssignmentExpression	timeinseconds = 0		1145270	2		=			
ANR	1145325	Identifier	timeinseconds		1145270	0					
ANR	1145326	PrimaryExpression	0		1145270	1					
ANR	1145327	IdentifierDecl	firstday = 0		1145270	1					
ANR	1145328	IdentifierDeclType	int		1145270	0					
ANR	1145329	Identifier	firstday		1145270	1					
ANR	1145330	AssignmentExpression	firstday = 0		1145270	2		=			
ANR	1145331	Identifier	firstday		1145270	0					
ANR	1145332	PrimaryExpression	0		1145270	1					
ANR	1145333	IdentifierDeclStatement	long epocseconds ;	105:2:2754:2770	1145270	6	True				
ANR	1145334	IdentifierDecl	epocseconds		1145270	0					
ANR	1145335	IdentifierDeclType	long		1145270	0					
ANR	1145336	Identifier	epocseconds		1145270	1					
ANR	1145337	IfStatement	if ( argc < 4 )		1145270	7					
ANR	1145338	Condition	argc < 4	107:6:2781:2787	1145270	0	True				
ANR	1145339	RelationalExpression	argc < 4		1145270	0		<			
ANR	1145340	Identifier	argc		1145270	0					
ANR	1145341	PrimaryExpression	4		1145270	1					
ANR	1145342	CompoundStatement		11:14:238:238	1145270	1					
ANR	1145343	ExpressionStatement	"printf ( ""Usage: %s <logfile> <logtype> <outfile>\\n"" , argv [ 0 ] )"	108:4:2795:2855	1145270	0	True				
ANR	1145344	CallExpression	"printf ( ""Usage: %s <logfile> <logtype> <outfile>\\n"" , argv [ 0 ] )"		1145270	0					
ANR	1145345	Callee	printf		1145270	0					
ANR	1145346	Identifier	printf		1145270	0					
ANR	1145347	ArgumentList	"""Usage: %s <logfile> <logtype> <outfile>\\n"""		1145270	1					
ANR	1145348	Argument	"""Usage: %s <logfile> <logtype> <outfile>\\n"""		1145270	0					
ANR	1145349	PrimaryExpression	"""Usage: %s <logfile> <logtype> <outfile>\\n"""		1145270	0					
ANR	1145350	Argument	argv [ 0 ]		1145270	1					
ANR	1145351	ArrayIndexing	argv [ 0 ]		1145270	0					
ANR	1145352	Identifier	argv		1145270	0					
ANR	1145353	PrimaryExpression	0		1145270	1					
ANR	1145354	ExpressionStatement	exit ( 1 )	109:4:2861:2869	1145270	1	True				
ANR	1145355	CallExpression	exit ( 1 )		1145270	0					
ANR	1145356	Callee	exit		1145270	0					
ANR	1145357	Identifier	exit		1145270	0					
ANR	1145358	ArgumentList	1		1145270	1					
ANR	1145359	Argument	1		1145270	0					
ANR	1145360	PrimaryExpression	1		1145270	0					
ANR	1145361	ExpressionStatement	logtype = atoi ( argv [ 2 ] )	111:2:2877:2900	1145270	8	True				
ANR	1145362	AssignmentExpression	logtype = atoi ( argv [ 2 ] )		1145270	0		=			
ANR	1145363	Identifier	logtype		1145270	0					
ANR	1145364	CallExpression	atoi ( argv [ 2 ] )		1145270	1					
ANR	1145365	Callee	atoi		1145270	0					
ANR	1145366	Identifier	atoi		1145270	0					
ANR	1145367	ArgumentList	argv [ 2 ]		1145270	1					
ANR	1145368	Argument	argv [ 2 ]		1145270	0					
ANR	1145369	ArrayIndexing	argv [ 2 ]		1145270	0					
ANR	1145370	Identifier	argv		1145270	0					
ANR	1145371	PrimaryExpression	2		1145270	1					
ANR	1145372	IdentifierDeclStatement	long i ;	113:2:2905:2911	1145270	9	True				
ANR	1145373	IdentifierDecl	i		1145270	0					
ANR	1145374	IdentifierDeclType	long		1145270	0					
ANR	1145375	Identifier	i		1145270	1					
ANR	1145376	ForStatement	for ( i = 0 ; i < 7 * 1440 ; i ++ )		1145270	10					
ANR	1145377	ForInit	i = 0 ;	116:7:2941:2944	1145270	0	True				
ANR	1145378	AssignmentExpression	i = 0		1145270	0		=			
ANR	1145379	Identifier	i		1145270	0					
ANR	1145380	PrimaryExpression	0		1145270	1					
ANR	1145381	Condition	i < 7 * 1440	116:11:2945:2952	1145270	1	True				
ANR	1145382	RelationalExpression	i < 7 * 1440		1145270	0		<			
ANR	1145383	Identifier	i		1145270	0					
ANR	1145384	MultiplicativeExpression	7 * 1440		1145270	1		*			
ANR	1145385	PrimaryExpression	7		1145270	0					
ANR	1145386	PrimaryExpression	1440		1145270	1					
ANR	1145387	PostIncDecOperationExpression	i ++	116:20:2954:2956	1145270	2	True				
ANR	1145388	Identifier	i		1145270	0					
ANR	1145389	IncDec	++		1145270	1					
ANR	1145390	CompoundStatement		20:24:407:407	1145270	3					
ANR	1145391	ExpressionStatement	dailychart [ i ] = 0	117:4:2964:2981	1145270	0	True				
ANR	1145392	AssignmentExpression	dailychart [ i ] = 0		1145270	0		=			
ANR	1145393	ArrayIndexing	dailychart [ i ]		1145270	0					
ANR	1145394	Identifier	dailychart		1145270	0					
ANR	1145395	Identifier	i		1145270	1					
ANR	1145396	PrimaryExpression	0		1145270	1					
ANR	1145397	ExpressionStatement	dailychart_A [ i ] = 0	118:4:2987:3006	1145270	1	True				
ANR	1145398	AssignmentExpression	dailychart_A [ i ] = 0		1145270	0		=			
ANR	1145399	ArrayIndexing	dailychart_A [ i ]		1145270	0					
ANR	1145400	Identifier	dailychart_A		1145270	0					
ANR	1145401	Identifier	i		1145270	1					
ANR	1145402	PrimaryExpression	0		1145270	1					
ANR	1145403	ExpressionStatement	dailychart_C [ i ] = 0	119:4:3012:3031	1145270	2	True				
ANR	1145404	AssignmentExpression	dailychart_C [ i ] = 0		1145270	0		=			
ANR	1145405	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1145406	Identifier	dailychart_C		1145270	0					
ANR	1145407	Identifier	i		1145270	1					
ANR	1145408	PrimaryExpression	0		1145270	1					
ANR	1145409	ExpressionStatement	concurrency [ i ] = 0	121:4:3038:3056	1145270	3	True				
ANR	1145410	AssignmentExpression	concurrency [ i ] = 0		1145270	0		=			
ANR	1145411	ArrayIndexing	concurrency [ i ]		1145270	0					
ANR	1145412	Identifier	concurrency		1145270	0					
ANR	1145413	Identifier	i		1145270	1					
ANR	1145414	PrimaryExpression	0		1145270	1					
ANR	1145415	ExpressionStatement	concurrency_A [ i ] = 0	122:4:3062:3082	1145270	4	True				
ANR	1145416	AssignmentExpression	concurrency_A [ i ] = 0		1145270	0		=			
ANR	1145417	ArrayIndexing	concurrency_A [ i ]		1145270	0					
ANR	1145418	Identifier	concurrency_A		1145270	0					
ANR	1145419	Identifier	i		1145270	1					
ANR	1145420	PrimaryExpression	0		1145270	1					
ANR	1145421	ExpressionStatement	concurrency_C [ i ] = 0	123:4:3088:3108	1145270	5	True				
ANR	1145422	AssignmentExpression	concurrency_C [ i ] = 0		1145270	0		=			
ANR	1145423	ArrayIndexing	concurrency_C [ i ]		1145270	0					
ANR	1145424	Identifier	concurrency_C		1145270	0					
ANR	1145425	Identifier	i		1145270	1					
ANR	1145426	PrimaryExpression	0		1145270	1					
ANR	1145427	IfStatement	if ( logtype == CONDOR )		1145270	11					
ANR	1145428	Condition	logtype == CONDOR	127:6:3126:3142	1145270	0	True				
ANR	1145429	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1145430	Identifier	logtype		1145270	0					
ANR	1145431	Identifier	CONDOR		1145270	1					
ANR	1145432	CompoundStatement		31:24:593:593	1145270	1					
ANR	1145433	ExpressionStatement	"strcpy ( terminatednormally_true , ""<b v=\\""t\\""/>"" )"	128:4:3150:3197	1145270	0	True				
ANR	1145434	CallExpression	"strcpy ( terminatednormally_true , ""<b v=\\""t\\""/>"" )"		1145270	0					
ANR	1145435	Callee	strcpy		1145270	0					
ANR	1145436	Identifier	strcpy		1145270	0					
ANR	1145437	ArgumentList	terminatednormally_true		1145270	1					
ANR	1145438	Argument	terminatednormally_true		1145270	0					
ANR	1145439	Identifier	terminatednormally_true		1145270	0					
ANR	1145440	Argument	"""<b v=\\""t\\""/>"""		1145270	1					
ANR	1145441	PrimaryExpression	"""<b v=\\""t\\""/>"""		1145270	0					
ANR	1145442	ExpressionStatement	"strcpy ( jobcompletedevent_true , ""<s>JobTerminatedEvent</s>"" )"	129:4:3203:3262	1145270	1	True				
ANR	1145443	CallExpression	"strcpy ( jobcompletedevent_true , ""<s>JobTerminatedEvent</s>"" )"		1145270	0					
ANR	1145444	Callee	strcpy		1145270	0					
ANR	1145445	Identifier	strcpy		1145270	0					
ANR	1145446	ArgumentList	jobcompletedevent_true		1145270	1					
ANR	1145447	Argument	jobcompletedevent_true		1145270	0					
ANR	1145448	Identifier	jobcompletedevent_true		1145270	0					
ANR	1145449	Argument	"""<s>JobTerminatedEvent</s>"""		1145270	1					
ANR	1145450	PrimaryExpression	"""<s>JobTerminatedEvent</s>"""		1145270	0					
ANR	1145451	ElseStatement	else		1145270	0					
ANR	1145452	CompoundStatement		35:6:723:723	1145270	0					
ANR	1145453	ExpressionStatement	"strcpy ( terminatednormally_true , ""<n>1</n>"" )"	132:4:3290:3333	1145270	0	True				
ANR	1145454	CallExpression	"strcpy ( terminatednormally_true , ""<n>1</n>"" )"		1145270	0					
ANR	1145455	Callee	strcpy		1145270	0					
ANR	1145456	Identifier	strcpy		1145270	0					
ANR	1145457	ArgumentList	terminatednormally_true		1145270	1					
ANR	1145458	Argument	terminatednormally_true		1145270	0					
ANR	1145459	Identifier	terminatednormally_true		1145270	0					
ANR	1145460	Argument	"""<n>1</n>"""		1145270	1					
ANR	1145461	PrimaryExpression	"""<n>1</n>"""		1145270	0					
ANR	1145462	ExpressionStatement	"strcpy ( jobcompletedevent_true , ""<s>JobCompleteEvent</s>"" )"	133:4:3340:3397	1145270	1	True				
ANR	1145463	CallExpression	"strcpy ( jobcompletedevent_true , ""<s>JobCompleteEvent</s>"" )"		1145270	0					
ANR	1145464	Callee	strcpy		1145270	0					
ANR	1145465	Identifier	strcpy		1145270	0					
ANR	1145466	ArgumentList	jobcompletedevent_true		1145270	1					
ANR	1145467	Argument	jobcompletedevent_true		1145270	0					
ANR	1145468	Identifier	jobcompletedevent_true		1145270	0					
ANR	1145469	Argument	"""<s>JobCompleteEvent</s>"""		1145270	1					
ANR	1145470	PrimaryExpression	"""<s>JobCompleteEvent</s>"""		1145270	0					
ANR	1145471	IfStatement	"if ( ( fd = open ( argv [ 1 ] , O_RDWR , 0 ) ) == - 1 )"		1145270	12					
ANR	1145472	Condition	"( fd = open ( argv [ 1 ] , O_RDWR , 0 ) ) == - 1"	137:6:3417:3455	1145270	0	True				
ANR	1145473	EqualityExpression	"( fd = open ( argv [ 1 ] , O_RDWR , 0 ) ) == - 1"		1145270	0		==			
ANR	1145474	AssignmentExpression	"fd = open ( argv [ 1 ] , O_RDWR , 0 )"		1145270	0		=			
ANR	1145475	Identifier	fd		1145270	0					
ANR	1145476	CallExpression	"open ( argv [ 1 ] , O_RDWR , 0 )"		1145270	1					
ANR	1145477	Callee	open		1145270	0					
ANR	1145478	Identifier	open		1145270	0					
ANR	1145479	ArgumentList	argv [ 1 ]		1145270	1					
ANR	1145480	Argument	argv [ 1 ]		1145270	0					
ANR	1145481	ArrayIndexing	argv [ 1 ]		1145270	0					
ANR	1145482	Identifier	argv		1145270	0					
ANR	1145483	PrimaryExpression	1		1145270	1					
ANR	1145484	Argument	O_RDWR		1145270	1					
ANR	1145485	Identifier	O_RDWR		1145270	0					
ANR	1145486	Argument	0		1145270	2					
ANR	1145487	PrimaryExpression	0		1145270	0					
ANR	1145488	UnaryOperationExpression	- 1		1145270	1					
ANR	1145489	UnaryOperator	-		1145270	0					
ANR	1145490	PrimaryExpression	1		1145270	1					
ANR	1145491	CompoundStatement		41:48:908:908	1145270	1					
ANR	1145492	ExpressionStatement	"printf ( ""Error in opening file : %s\\n"" , argv [ 1 ] )"	138:4:3465:3512	1145270	0	True				
ANR	1145493	CallExpression	"printf ( ""Error in opening file : %s\\n"" , argv [ 1 ] )"		1145270	0					
ANR	1145494	Callee	printf		1145270	0					
ANR	1145495	Identifier	printf		1145270	0					
ANR	1145496	ArgumentList	"""Error in opening file : %s\\n"""		1145270	1					
ANR	1145497	Argument	"""Error in opening file : %s\\n"""		1145270	0					
ANR	1145498	PrimaryExpression	"""Error in opening file : %s\\n"""		1145270	0					
ANR	1145499	Argument	argv [ 1 ]		1145270	1					
ANR	1145500	ArrayIndexing	argv [ 1 ]		1145270	0					
ANR	1145501	Identifier	argv		1145270	0					
ANR	1145502	PrimaryExpression	1		1145270	1					
ANR	1145503	ReturnStatement	return DAP_ERROR ;	139:4:3518:3534	1145270	1	True				
ANR	1145504	Identifier	DAP_ERROR		1145270	0					
ANR	1145505	ElseStatement	else		1145270	0					
ANR	1145506	IfStatement	"if ( ( fp = fdopen ( fd , ""r"" ) ) == NULL )"		1145270	0					
ANR	1145507	Condition	"( fp = fdopen ( fd , ""r"" ) ) == NULL"	141:11:3551:3581	1145270	0	True				
ANR	1145508	EqualityExpression	"( fp = fdopen ( fd , ""r"" ) ) == NULL"		1145270	0		==			
ANR	1145509	AssignmentExpression	"fp = fdopen ( fd , ""r"" )"		1145270	0		=			
ANR	1145510	Identifier	fp		1145270	0					
ANR	1145511	CallExpression	"fdopen ( fd , ""r"" )"		1145270	1					
ANR	1145512	Callee	fdopen		1145270	0					
ANR	1145513	Identifier	fdopen		1145270	0					
ANR	1145514	ArgumentList	fd		1145270	1					
ANR	1145515	Argument	fd		1145270	0					
ANR	1145516	Identifier	fd		1145270	0					
ANR	1145517	Argument	"""r"""		1145270	1					
ANR	1145518	PrimaryExpression	"""r"""		1145270	0					
ANR	1145519	Identifier	NULL		1145270	1					
ANR	1145520	ReturnStatement	return DAP_ERROR ;	141:44:3584:3600	1145270	1	True				
ANR	1145521	Identifier	DAP_ERROR		1145270	0					
ANR	1145522	IfStatement	if ( logtype == CONDOR )		1145270	13					
ANR	1145523	Condition	logtype == CONDOR	143:6:3611:3627	1145270	0	True				
ANR	1145524	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1145525	Identifier	logtype		1145270	0					
ANR	1145526	Identifier	CONDOR		1145270	1					
ANR	1145527	CompoundStatement		48:4:1084:1121	1145270	1					
ANR	1145528	IdentifierDeclStatement	"char fname_A [ MAXSTR ] , fname_C [ MAXSTR ] ;"	144:4:3635:3672	1145270	0	True				
ANR	1145529	IdentifierDecl	fname_A [ MAXSTR ]		1145270	0					
ANR	1145530	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145531	Identifier	fname_A		1145270	1					
ANR	1145532	Identifier	MAXSTR		1145270	2					
ANR	1145533	IdentifierDecl	fname_C [ MAXSTR ]		1145270	1					
ANR	1145534	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145535	Identifier	fname_C		1145270	1					
ANR	1145536	Identifier	MAXSTR		1145270	2					
ANR	1145537	ExpressionStatement	"sprintf ( fname_A , ""%s_A"" , argv [ 3 ] )"	145:4:3678:3709	1145270	1	True				
ANR	1145538	CallExpression	"sprintf ( fname_A , ""%s_A"" , argv [ 3 ] )"		1145270	0					
ANR	1145539	Callee	sprintf		1145270	0					
ANR	1145540	Identifier	sprintf		1145270	0					
ANR	1145541	ArgumentList	fname_A		1145270	1					
ANR	1145542	Argument	fname_A		1145270	0					
ANR	1145543	Identifier	fname_A		1145270	0					
ANR	1145544	Argument	"""%s_A"""		1145270	1					
ANR	1145545	PrimaryExpression	"""%s_A"""		1145270	0					
ANR	1145546	Argument	argv [ 3 ]		1145270	2					
ANR	1145547	ArrayIndexing	argv [ 3 ]		1145270	0					
ANR	1145548	Identifier	argv		1145270	0					
ANR	1145549	PrimaryExpression	3		1145270	1					
ANR	1145550	ExpressionStatement	"sprintf ( fname_C , ""%s_C"" , argv [ 3 ] )"	146:4:3715:3746	1145270	2	True				
ANR	1145551	CallExpression	"sprintf ( fname_C , ""%s_C"" , argv [ 3 ] )"		1145270	0					
ANR	1145552	Callee	sprintf		1145270	0					
ANR	1145553	Identifier	sprintf		1145270	0					
ANR	1145554	ArgumentList	fname_C		1145270	1					
ANR	1145555	Argument	fname_C		1145270	0					
ANR	1145556	Identifier	fname_C		1145270	0					
ANR	1145557	Argument	"""%s_C"""		1145270	1					
ANR	1145558	PrimaryExpression	"""%s_C"""		1145270	0					
ANR	1145559	Argument	argv [ 3 ]		1145270	2					
ANR	1145560	ArrayIndexing	argv [ 3 ]		1145270	0					
ANR	1145561	Identifier	argv		1145270	0					
ANR	1145562	PrimaryExpression	3		1145270	1					
ANR	1145563	Statement	if	148:4:3753:3754	1145270	3	True				
ANR	1145564	Statement	(	148:7:3756:3756	1145270	4	True				
ANR	1145565	Statement	(	148:9:3758:3758	1145270	5	True				
ANR	1145566	Statement	foutA	148:10:3759:3763	1145270	6	True				
ANR	1145567	Statement	=	148:16:3765:3765	1145270	7	True				
ANR	1145568	Statement	safe_fopen_wrapper	148:18:3767:3784	1145270	8	True				
ANR	1145569	Statement	(	148:36:3785:3785	1145270	9	True				
ANR	1145570	Statement	(	148:37:3786:3786	1145270	10	True				
ANR	1145571	Statement	fname_A	148:38:3787:3793	1145270	11	True				
ANR	1145572	Statement	","	148:45:3794:3794	1145270	12	True				
ANR	1145573	Statement	"""w"""	148:47:3796:3798	1145270	13	True				
ANR	1145574	Statement	)	148:50:3799:3799	1145270	14	True				
ANR	1145575	Statement	)	148:51:3800:3800	1145270	15	True				
ANR	1145576	Statement	==	148:53:3802:3803	1145270	16	True				
ANR	1145577	Statement	NULL	148:56:3805:3808	1145270	17	True				
ANR	1145578	Statement	)	148:61:3810:3810	1145270	18	True				
ANR	1145579	CompoundStatement		52:62:1260:1260	1145270	19					
ANR	1145580	ExpressionStatement	"printf ( ""Error in creating file : %s\\n"" , fname_A )"	149:6:3819:3867	1145270	0	True				
ANR	1145581	CallExpression	"printf ( ""Error in creating file : %s\\n"" , fname_A )"		1145270	0					
ANR	1145582	Callee	printf		1145270	0					
ANR	1145583	Identifier	printf		1145270	0					
ANR	1145584	ArgumentList	"""Error in creating file : %s\\n"""		1145270	1					
ANR	1145585	Argument	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145586	PrimaryExpression	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145587	Argument	fname_A		1145270	1					
ANR	1145588	Identifier	fname_A		1145270	0					
ANR	1145589	ReturnStatement	return DAP_ERROR ;	150:6:3875:3891	1145270	1	True				
ANR	1145590	Identifier	DAP_ERROR		1145270	0					
ANR	1145591	Statement	if	152:4:3903:3904	1145270	20	True				
ANR	1145592	Statement	(	152:7:3906:3906	1145270	21	True				
ANR	1145593	Statement	(	152:9:3908:3908	1145270	22	True				
ANR	1145594	Statement	foutC	152:10:3909:3913	1145270	23	True				
ANR	1145595	Statement	=	152:16:3915:3915	1145270	24	True				
ANR	1145596	Statement	safe_fopen_wrapper	152:18:3917:3934	1145270	25	True				
ANR	1145597	Statement	(	152:36:3935:3935	1145270	26	True				
ANR	1145598	Statement	(	152:37:3936:3936	1145270	27	True				
ANR	1145599	Statement	fname_C	152:38:3937:3943	1145270	28	True				
ANR	1145600	Statement	","	152:45:3944:3944	1145270	29	True				
ANR	1145601	Statement	"""w"""	152:47:3946:3948	1145270	30	True				
ANR	1145602	Statement	)	152:50:3949:3949	1145270	31	True				
ANR	1145603	Statement	)	152:51:3950:3950	1145270	32	True				
ANR	1145604	Statement	==	152:53:3952:3953	1145270	33	True				
ANR	1145605	Statement	NULL	152:56:3955:3958	1145270	34	True				
ANR	1145606	Statement	)	152:61:3960:3960	1145270	35	True				
ANR	1145607	CompoundStatement		56:62:1410:1410	1145270	36					
ANR	1145608	ExpressionStatement	"printf ( ""Error in creating file : %s\\n"" , fname_C )"	153:6:3969:4017	1145270	0	True				
ANR	1145609	CallExpression	"printf ( ""Error in creating file : %s\\n"" , fname_C )"		1145270	0					
ANR	1145610	Callee	printf		1145270	0					
ANR	1145611	Identifier	printf		1145270	0					
ANR	1145612	ArgumentList	"""Error in creating file : %s\\n"""		1145270	1					
ANR	1145613	Argument	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145614	PrimaryExpression	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145615	Argument	fname_C		1145270	1					
ANR	1145616	Identifier	fname_C		1145270	0					
ANR	1145617	ReturnStatement	return DAP_ERROR ;	154:6:4025:4041	1145270	1	True				
ANR	1145618	Identifier	DAP_ERROR		1145270	0					
ANR	1145619	ElseStatement	else		1145270	0					
ANR	1145620	CompoundStatement		61:6:1508:1508	1145270	0					
ANR	1145621	Statement	if	158:4:4084:4085	1145270	0	True				
ANR	1145622	Statement	(	158:7:4087:4087	1145270	1	True				
ANR	1145623	Statement	(	158:9:4089:4089	1145270	2	True				
ANR	1145624	Statement	fout	158:10:4090:4093	1145270	3	True				
ANR	1145625	Statement	=	158:15:4095:4095	1145270	4	True				
ANR	1145626	Statement	safe_fopen_wrapper	158:17:4097:4114	1145270	5	True				
ANR	1145627	Statement	(	158:35:4115:4115	1145270	6	True				
ANR	1145628	Statement	(	158:36:4116:4116	1145270	7	True				
ANR	1145629	Statement	argv	158:37:4117:4120	1145270	8	True				
ANR	1145630	Statement	[	158:41:4121:4121	1145270	9	True				
ANR	1145631	Statement	3	158:42:4122:4122	1145270	10	True				
ANR	1145632	Statement	]	158:43:4123:4123	1145270	11	True				
ANR	1145633	Statement	","	158:44:4124:4124	1145270	12	True				
ANR	1145634	Statement	"""w"""	158:46:4126:4128	1145270	13	True				
ANR	1145635	Statement	)	158:49:4129:4129	1145270	14	True				
ANR	1145636	Statement	)	158:50:4130:4130	1145270	15	True				
ANR	1145637	Statement	==	158:52:4132:4133	1145270	16	True				
ANR	1145638	Statement	NULL	158:55:4135:4138	1145270	17	True				
ANR	1145639	Statement	)	158:60:4140:4140	1145270	18	True				
ANR	1145640	CompoundStatement		62:61:1590:1590	1145270	19					
ANR	1145641	ExpressionStatement	"printf ( ""Error in creating file : %s\\n"" , argv [ 3 ] )"	159:4:4147:4195	1145270	0	True				
ANR	1145642	CallExpression	"printf ( ""Error in creating file : %s\\n"" , argv [ 3 ] )"		1145270	0					
ANR	1145643	Callee	printf		1145270	0					
ANR	1145644	Identifier	printf		1145270	0					
ANR	1145645	ArgumentList	"""Error in creating file : %s\\n"""		1145270	1					
ANR	1145646	Argument	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145647	PrimaryExpression	"""Error in creating file : %s\\n"""		1145270	0					
ANR	1145648	Argument	argv [ 3 ]		1145270	1					
ANR	1145649	ArrayIndexing	argv [ 3 ]		1145270	0					
ANR	1145650	Identifier	argv		1145270	0					
ANR	1145651	PrimaryExpression	3		1145270	1					
ANR	1145652	ReturnStatement	return DAP_ERROR ;	160:4:4201:4217	1145270	1	True				
ANR	1145653	Identifier	DAP_ERROR		1145270	0					
ANR	1145654	IdentifierDeclStatement	classad :: ClassAd * newAd = 0 ;	165:2:4235:4262	1145270	14	True				
ANR	1145655	IdentifierDecl	* newAd = 0		1145270	0					
ANR	1145656	IdentifierDeclType	classad :: ClassAd *		1145270	0					
ANR	1145657	Identifier	newAd		1145270	1					
ANR	1145658	AssignmentExpression	* newAd = 0		1145270	2		=			
ANR	1145659	Identifier	newAd		1145270	0					
ANR	1145660	PrimaryExpression	0		1145270	1					
ANR	1145661	IdentifierDeclStatement	classad :: ClassAdXMLParser xmlp ;	166:2:4266:4296	1145270	15	True				
ANR	1145662	IdentifierDecl	xmlp		1145270	0					
ANR	1145663	IdentifierDeclType	classad :: ClassAdXMLParser		1145270	0					
ANR	1145664	Identifier	xmlp		1145270	1					
ANR	1145665	IdentifierDeclStatement	classad :: ClassAdXMLUnParser unparser ;	167:2:4300:4336	1145270	16	True				
ANR	1145666	IdentifierDecl	unparser		1145270	0					
ANR	1145667	IdentifierDeclType	classad :: ClassAdXMLUnParser		1145270	0					
ANR	1145668	Identifier	unparser		1145270	1					
ANR	1145669	IdentifierDeclStatement	"char mytype [ MAXSTR ] , cluster [ MAXSTR ] , lognotes [ MAXSTR ] ;"	168:2:4340:4394	1145270	17	True				
ANR	1145670	IdentifierDecl	mytype [ MAXSTR ]		1145270	0					
ANR	1145671	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145672	Identifier	mytype		1145270	1					
ANR	1145673	Identifier	MAXSTR		1145270	2					
ANR	1145674	IdentifierDecl	cluster [ MAXSTR ]		1145270	1					
ANR	1145675	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145676	Identifier	cluster		1145270	1					
ANR	1145677	Identifier	MAXSTR		1145270	2					
ANR	1145678	IdentifierDecl	lognotes [ MAXSTR ]		1145270	2					
ANR	1145679	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145680	Identifier	lognotes		1145270	1					
ANR	1145681	Identifier	MAXSTR		1145270	2					
ANR	1145682	IdentifierDeclStatement	"char terminatednormally [ MAXSTR ] , returnvalue [ MAXSTR ] ;"	169:2:4398:4450	1145270	18	True				
ANR	1145683	IdentifierDecl	terminatednormally [ MAXSTR ]		1145270	0					
ANR	1145684	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145685	Identifier	terminatednormally		1145270	1					
ANR	1145686	Identifier	MAXSTR		1145270	2					
ANR	1145687	IdentifierDecl	returnvalue [ MAXSTR ]		1145270	1					
ANR	1145688	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145689	Identifier	returnvalue		1145270	1					
ANR	1145690	Identifier	MAXSTR		1145270	2					
ANR	1145691	IdentifierDeclStatement	char eventtime1 [ MAXSTR ] ;	171:2:4455:4478	1145270	19	True				
ANR	1145692	IdentifierDecl	eventtime1 [ MAXSTR ]		1145270	0					
ANR	1145693	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145694	Identifier	eventtime1		1145270	1					
ANR	1145695	Identifier	MAXSTR		1145270	2					
ANR	1145696	IdentifierDeclStatement	"int year = 0 , month = 0 , day , hour , minute , second ;"	172:2:4506:4556	1145270	20	True				
ANR	1145697	IdentifierDecl	year = 0		1145270	0					
ANR	1145698	IdentifierDeclType	int		1145270	0					
ANR	1145699	Identifier	year		1145270	1					
ANR	1145700	AssignmentExpression	year = 0		1145270	2		=			
ANR	1145701	Identifier	year		1145270	0					
ANR	1145702	PrimaryExpression	0		1145270	1					
ANR	1145703	IdentifierDecl	month = 0		1145270	1					
ANR	1145704	IdentifierDeclType	int		1145270	0					
ANR	1145705	Identifier	month		1145270	1					
ANR	1145706	AssignmentExpression	month = 0		1145270	2		=			
ANR	1145707	Identifier	month		1145270	0					
ANR	1145708	PrimaryExpression	0		1145270	1					
ANR	1145709	IdentifierDecl	day		1145270	2					
ANR	1145710	IdentifierDeclType	int		1145270	0					
ANR	1145711	Identifier	day		1145270	1					
ANR	1145712	IdentifierDecl	hour		1145270	3					
ANR	1145713	IdentifierDeclType	int		1145270	0					
ANR	1145714	Identifier	hour		1145270	1					
ANR	1145715	IdentifierDecl	minute		1145270	4					
ANR	1145716	IdentifierDeclType	int		1145270	0					
ANR	1145717	Identifier	minute		1145270	1					
ANR	1145718	IdentifierDecl	second		1145270	5					
ANR	1145719	IdentifierDeclType	int		1145270	0					
ANR	1145720	Identifier	second		1145270	1					
ANR	1145721	IdentifierDeclStatement	"char daystr [ MAXSTR ] , monthstr [ MAXSTR ] ;"	173:2:4560:4597	1145270	21	True				
ANR	1145722	IdentifierDecl	daystr [ MAXSTR ]		1145270	0					
ANR	1145723	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145724	Identifier	daystr		1145270	1					
ANR	1145725	Identifier	MAXSTR		1145270	2					
ANR	1145726	IdentifierDecl	monthstr [ MAXSTR ]		1145270	1					
ANR	1145727	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145728	Identifier	monthstr		1145270	1					
ANR	1145729	Identifier	MAXSTR		1145270	2					
ANR	1145730	IdentifierDeclStatement	int dateinminutes ;	174:2:4601:4618	1145270	22	True				
ANR	1145731	IdentifierDecl	dateinminutes		1145270	0					
ANR	1145732	IdentifierDeclType	int		1145270	0					
ANR	1145733	Identifier	dateinminutes		1145270	1					
ANR	1145734	IdentifierDeclStatement	"char mytype2 [ MAXSTR ] , cluster2 [ MAXSTR ] ;"	177:2:4649:4687	1145270	23	True				
ANR	1145735	IdentifierDecl	mytype2 [ MAXSTR ]		1145270	0					
ANR	1145736	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145737	Identifier	mytype2		1145270	1					
ANR	1145738	Identifier	MAXSTR		1145270	2					
ANR	1145739	IdentifierDecl	cluster2 [ MAXSTR ]		1145270	1					
ANR	1145740	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145741	Identifier	cluster2		1145270	1					
ANR	1145742	Identifier	MAXSTR		1145270	2					
ANR	1145743	IdentifierDeclStatement	"char terminatednormally2 [ MAXSTR ] , returnvalue2 [ MAXSTR ] ;"	178:2:4691:4745	1145270	24	True				
ANR	1145744	IdentifierDecl	terminatednormally2 [ MAXSTR ]		1145270	0					
ANR	1145745	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145746	Identifier	terminatednormally2		1145270	1					
ANR	1145747	Identifier	MAXSTR		1145270	2					
ANR	1145748	IdentifierDecl	returnvalue2 [ MAXSTR ]		1145270	1					
ANR	1145749	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145750	Identifier	returnvalue2		1145270	1					
ANR	1145751	Identifier	MAXSTR		1145270	2					
ANR	1145752	IdentifierDeclStatement	char eventtime2 [ MAXSTR ] ;	179:2:4749:4772	1145270	25	True				
ANR	1145753	IdentifierDecl	eventtime2 [ MAXSTR ]		1145270	0					
ANR	1145754	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145755	Identifier	eventtime2		1145270	1					
ANR	1145756	Identifier	MAXSTR		1145270	2					
ANR	1145757	IdentifierDeclStatement	"int year2 = 0 , month2 = 0 , day2 , hour2 , minute2 , second2 ;"	180:2:4802:4859	1145270	26	True				
ANR	1145758	IdentifierDecl	year2 = 0		1145270	0					
ANR	1145759	IdentifierDeclType	int		1145270	0					
ANR	1145760	Identifier	year2		1145270	1					
ANR	1145761	AssignmentExpression	year2 = 0		1145270	2		=			
ANR	1145762	Identifier	year2		1145270	0					
ANR	1145763	PrimaryExpression	0		1145270	1					
ANR	1145764	IdentifierDecl	month2 = 0		1145270	1					
ANR	1145765	IdentifierDeclType	int		1145270	0					
ANR	1145766	Identifier	month2		1145270	1					
ANR	1145767	AssignmentExpression	month2 = 0		1145270	2		=			
ANR	1145768	Identifier	month2		1145270	0					
ANR	1145769	PrimaryExpression	0		1145270	1					
ANR	1145770	IdentifierDecl	day2		1145270	2					
ANR	1145771	IdentifierDeclType	int		1145270	0					
ANR	1145772	Identifier	day2		1145270	1					
ANR	1145773	IdentifierDecl	hour2		1145270	3					
ANR	1145774	IdentifierDeclType	int		1145270	0					
ANR	1145775	Identifier	hour2		1145270	1					
ANR	1145776	IdentifierDecl	minute2		1145270	4					
ANR	1145777	IdentifierDeclType	int		1145270	0					
ANR	1145778	Identifier	minute2		1145270	1					
ANR	1145779	IdentifierDecl	second2		1145270	5					
ANR	1145780	IdentifierDeclType	int		1145270	0					
ANR	1145781	Identifier	second2		1145270	1					
ANR	1145782	IdentifierDeclStatement	"char daystr2 [ MAXSTR ] , monthstr2 [ MAXSTR ] ;"	181:2:4863:4902	1145270	27	True				
ANR	1145783	IdentifierDecl	daystr2 [ MAXSTR ]		1145270	0					
ANR	1145784	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145785	Identifier	daystr2		1145270	1					
ANR	1145786	Identifier	MAXSTR		1145270	2					
ANR	1145787	IdentifierDecl	monthstr2 [ MAXSTR ]		1145270	1					
ANR	1145788	IdentifierDeclType	char [ MAXSTR ]		1145270	0					
ANR	1145789	Identifier	monthstr2		1145270	1					
ANR	1145790	Identifier	MAXSTR		1145270	2					
ANR	1145791	IdentifierDeclStatement	int dateinminutes2 ;	182:2:4906:4924	1145270	28	True				
ANR	1145792	IdentifierDecl	dateinminutes2		1145270	0					
ANR	1145793	IdentifierDeclType	int		1145270	0					
ANR	1145794	Identifier	dateinminutes2		1145270	1					
ANR	1145795	IdentifierDeclStatement	fpos_t * lastpos ;	185:2:4957:4972	1145270	29	True				
ANR	1145796	IdentifierDecl	* lastpos		1145270	0					
ANR	1145797	IdentifierDeclType	fpos_t *		1145270	0					
ANR	1145798	Identifier	lastpos		1145270	1					
ANR	1145799	ExpressionStatement	lastpos = ( fpos_t * ) malloc ( sizeof ( fpos_t ) )	186:2:4976:5017	1145270	30	True				
ANR	1145800	AssignmentExpression	lastpos = ( fpos_t * ) malloc ( sizeof ( fpos_t ) )		1145270	0		=			
ANR	1145801	Identifier	lastpos		1145270	0					
ANR	1145802	CastExpression	( fpos_t * ) malloc ( sizeof ( fpos_t ) )		1145270	1					
ANR	1145803	CastTarget	fpos_t *		1145270	0					
ANR	1145804	CallExpression	malloc ( sizeof ( fpos_t ) )		1145270	1					
ANR	1145805	Callee	malloc		1145270	0					
ANR	1145806	Identifier	malloc		1145270	0					
ANR	1145807	ArgumentList	sizeof ( fpos_t )		1145270	1					
ANR	1145808	Argument	sizeof ( fpos_t )		1145270	0					
ANR	1145809	SizeofExpression	sizeof ( fpos_t )		1145270	0					
ANR	1145810	Sizeof	sizeof		1145270	0					
ANR	1145811	SizeofOperand	fpos_t		1145270	1					
ANR	1145812	IdentifierDeclStatement	int job_count = 0 ;	188:2:5022:5039	1145270	31	True				
ANR	1145813	IdentifierDecl	job_count = 0		1145270	0					
ANR	1145814	IdentifierDeclType	int		1145270	0					
ANR	1145815	Identifier	job_count		1145270	1					
ANR	1145816	AssignmentExpression	job_count = 0		1145270	2		=			
ANR	1145817	Identifier	job_count		1145270	0					
ANR	1145818	PrimaryExpression	0		1145270	1					
ANR	1145819	WhileStatement	while ( 1 )		1145270	32					
ANR	1145820	Condition	1	189:9:5050:5050	1145270	0	True				
ANR	1145821	PrimaryExpression	1		1145270	0					
ANR	1145822	CompoundStatement		93:11:2501:2501	1145270	1					
ANR	1145823	IfStatement	if ( job_count ++ >= 1500 )		1145270	0					
ANR	1145824	Condition	job_count ++ >= 1500	191:8:5063:5081	1145270	0	True				
ANR	1145825	RelationalExpression	job_count ++ >= 1500		1145270	0		>=			
ANR	1145826	PostIncDecOperationExpression	job_count ++		1145270	0					
ANR	1145827	Identifier	job_count		1145270	0					
ANR	1145828	IncDec	++		1145270	1					
ANR	1145829	PrimaryExpression	1500		1145270	1					
ANR	1145830	BreakStatement	break ;	191:29:5084:5089	1145270	1	True				
ANR	1145831	ExpressionStatement	newAd = xmlp . ParseClassAd ( fp )	193:4:5100:5129	1145270	1	True				
ANR	1145832	AssignmentExpression	newAd = xmlp . ParseClassAd ( fp )		1145270	0		=			
ANR	1145833	Identifier	newAd		1145270	0					
ANR	1145834	CallExpression	xmlp . ParseClassAd ( fp )		1145270	1					
ANR	1145835	Callee	xmlp . ParseClassAd		1145270	0					
ANR	1145836	MemberAccess	xmlp . ParseClassAd		1145270	0					
ANR	1145837	Identifier	xmlp		1145270	0					
ANR	1145838	Identifier	ParseClassAd		1145270	1					
ANR	1145839	ArgumentList	fp		1145270	1					
ANR	1145840	Argument	fp		1145270	0					
ANR	1145841	Identifier	fp		1145270	0					
ANR	1145842	IfStatement	if ( feof ( fp ) )		1145270	2					
ANR	1145843	Condition	feof ( fp )	195:8:5140:5147	1145270	0	True				
ANR	1145844	CallExpression	feof ( fp )		1145270	0					
ANR	1145845	Callee	feof		1145270	0					
ANR	1145846	Identifier	feof		1145270	0					
ANR	1145847	ArgumentList	fp		1145270	1					
ANR	1145848	Argument	fp		1145270	0					
ANR	1145849	Identifier	fp		1145270	0					
ANR	1145850	BreakStatement	break ;	195:18:5150:5155	1145270	1	True				
ANR	1145851	ExpressionStatement	"getValue ( newAd , ""MyType"" , mytype )"	197:4:5162:5195	1145270	3	True				
ANR	1145852	CallExpression	"getValue ( newAd , ""MyType"" , mytype )"		1145270	0					
ANR	1145853	Callee	getValue		1145270	0					
ANR	1145854	Identifier	getValue		1145270	0					
ANR	1145855	ArgumentList	newAd		1145270	1					
ANR	1145856	Argument	newAd		1145270	0					
ANR	1145857	Identifier	newAd		1145270	0					
ANR	1145858	Argument	"""MyType"""		1145270	1					
ANR	1145859	PrimaryExpression	"""MyType"""		1145270	0					
ANR	1145860	Argument	mytype		1145270	2					
ANR	1145861	Identifier	mytype		1145270	0					
ANR	1145862	ExpressionStatement	"getValue ( newAd , ""Cluster"" , cluster )"	198:4:5201:5236	1145270	4	True				
ANR	1145863	CallExpression	"getValue ( newAd , ""Cluster"" , cluster )"		1145270	0					
ANR	1145864	Callee	getValue		1145270	0					
ANR	1145865	Identifier	getValue		1145270	0					
ANR	1145866	ArgumentList	newAd		1145270	1					
ANR	1145867	Argument	newAd		1145270	0					
ANR	1145868	Identifier	newAd		1145270	0					
ANR	1145869	Argument	"""Cluster"""		1145270	1					
ANR	1145870	PrimaryExpression	"""Cluster"""		1145270	0					
ANR	1145871	Argument	cluster		1145270	2					
ANR	1145872	Identifier	cluster		1145270	0					
ANR	1145873	ExpressionStatement	"getValue ( newAd , ""LogNotes"" , lognotes )"	199:4:5242:5279	1145270	5	True				
ANR	1145874	CallExpression	"getValue ( newAd , ""LogNotes"" , lognotes )"		1145270	0					
ANR	1145875	Callee	getValue		1145270	0					
ANR	1145876	Identifier	getValue		1145270	0					
ANR	1145877	ArgumentList	newAd		1145270	1					
ANR	1145878	Argument	newAd		1145270	0					
ANR	1145879	Identifier	newAd		1145270	0					
ANR	1145880	Argument	"""LogNotes"""		1145270	1					
ANR	1145881	PrimaryExpression	"""LogNotes"""		1145270	0					
ANR	1145882	Argument	lognotes		1145270	2					
ANR	1145883	Identifier	lognotes		1145270	0					
ANR	1145884	ExpressionStatement	"getValue ( newAd , ""TerminatedNormally"" , terminatednormally )"	200:4:5285:5342	1145270	6	True				
ANR	1145885	CallExpression	"getValue ( newAd , ""TerminatedNormally"" , terminatednormally )"		1145270	0					
ANR	1145886	Callee	getValue		1145270	0					
ANR	1145887	Identifier	getValue		1145270	0					
ANR	1145888	ArgumentList	newAd		1145270	1					
ANR	1145889	Argument	newAd		1145270	0					
ANR	1145890	Identifier	newAd		1145270	0					
ANR	1145891	Argument	"""TerminatedNormally"""		1145270	1					
ANR	1145892	PrimaryExpression	"""TerminatedNormally"""		1145270	0					
ANR	1145893	Argument	terminatednormally		1145270	2					
ANR	1145894	Identifier	terminatednormally		1145270	0					
ANR	1145895	ExpressionStatement	"getValue ( newAd , ""ReturnValue"" , returnvalue )"	201:4:5348:5391	1145270	7	True				
ANR	1145896	CallExpression	"getValue ( newAd , ""ReturnValue"" , returnvalue )"		1145270	0					
ANR	1145897	Callee	getValue		1145270	0					
ANR	1145898	Identifier	getValue		1145270	0					
ANR	1145899	ArgumentList	newAd		1145270	1					
ANR	1145900	Argument	newAd		1145270	0					
ANR	1145901	Identifier	newAd		1145270	0					
ANR	1145902	Argument	"""ReturnValue"""		1145270	1					
ANR	1145903	PrimaryExpression	"""ReturnValue"""		1145270	0					
ANR	1145904	Argument	returnvalue		1145270	2					
ANR	1145905	Identifier	returnvalue		1145270	0					
ANR	1145906	IfStatement	"if ( ! strcmp ( mytype , ""<s>SubmitEvent</s>"" ) )"		1145270	8					
ANR	1145907	Condition	"! strcmp ( mytype , ""<s>SubmitEvent</s>"" )"	227:8:6114:6150	1145270	0	True				
ANR	1145908	UnaryOperationExpression	"! strcmp ( mytype , ""<s>SubmitEvent</s>"" )"		1145270	0					
ANR	1145909	UnaryOperator	!		1145270	0					
ANR	1145910	CallExpression	"strcmp ( mytype , ""<s>SubmitEvent</s>"" )"		1145270	1					
ANR	1145911	Callee	strcmp		1145270	0					
ANR	1145912	Identifier	strcmp		1145270	0					
ANR	1145913	ArgumentList	mytype		1145270	1					
ANR	1145914	Argument	mytype		1145270	0					
ANR	1145915	Identifier	mytype		1145270	0					
ANR	1145916	Argument	"""<s>SubmitEvent</s>"""		1145270	1					
ANR	1145917	PrimaryExpression	"""<s>SubmitEvent</s>"""		1145270	0					
ANR	1145918	CompoundStatement		131:46:3601:3601	1145270	1					
ANR	1145919	ExpressionStatement	"fgetpos ( fp , lastpos )"	229:6:6204:6224	1145270	0	True				
ANR	1145920	CallExpression	"fgetpos ( fp , lastpos )"		1145270	0					
ANR	1145921	Callee	fgetpos		1145270	0					
ANR	1145922	Identifier	fgetpos		1145270	0					
ANR	1145923	ArgumentList	fp		1145270	1					
ANR	1145924	Argument	fp		1145270	0					
ANR	1145925	Identifier	fp		1145270	0					
ANR	1145926	Argument	lastpos		1145270	1					
ANR	1145927	Identifier	lastpos		1145270	0					
ANR	1145928	WhileStatement	while ( 1 )		1145270	1					
ANR	1145929	Condition	1	231:12:6245:6245	1145270	0	True				
ANR	1145930	PrimaryExpression	1		1145270	0					
ANR	1145931	CompoundStatement		135:14:3696:3696	1145270	1					
ANR	1145932	IfStatement	if ( newAd != NULL )		1145270	0					
ANR	1145933	Condition	newAd != NULL	233:5:6255:6267	1145270	0	True				
ANR	1145934	EqualityExpression	newAd != NULL		1145270	0		!=			
ANR	1145935	Identifier	newAd		1145270	0					
ANR	1145936	Identifier	NULL		1145270	1					
ANR	1145937	Statement	delete	233:20:6270:6275	1145270	1	True				
ANR	1145938	ExpressionStatement	newAd	233:27:6277:6282	1145270	1	True				
ANR	1145939	Identifier	newAd		1145270	0					
ANR	1145940	ExpressionStatement	newAd = NULL	233:34:6284:6296	1145270	2	True				
ANR	1145941	AssignmentExpression	newAd = NULL		1145270	0		=			
ANR	1145942	Identifier	newAd		1145270	0					
ANR	1145943	Identifier	NULL		1145270	1					
ANR	1145944	ExpressionStatement	newAd = xmlp . ParseClassAd ( fp )	234:1:6300:6329	1145270	3	True				
ANR	1145945	AssignmentExpression	newAd = xmlp . ParseClassAd ( fp )		1145270	0		=			
ANR	1145946	Identifier	newAd		1145270	0					
ANR	1145947	CallExpression	xmlp . ParseClassAd ( fp )		1145270	1					
ANR	1145948	Callee	xmlp . ParseClassAd		1145270	0					
ANR	1145949	MemberAccess	xmlp . ParseClassAd		1145270	0					
ANR	1145950	Identifier	xmlp		1145270	0					
ANR	1145951	Identifier	ParseClassAd		1145270	1					
ANR	1145952	ArgumentList	fp		1145270	1					
ANR	1145953	Argument	fp		1145270	0					
ANR	1145954	Identifier	fp		1145270	0					
ANR	1145955	IfStatement	if ( feof ( fp ) )		1145270	4					
ANR	1145956	Condition	feof ( fp )	235:5:6336:6343	1145270	0	True				
ANR	1145957	CallExpression	feof ( fp )		1145270	0					
ANR	1145958	Callee	feof		1145270	0					
ANR	1145959	Identifier	feof		1145270	0					
ANR	1145960	ArgumentList	fp		1145270	1					
ANR	1145961	Argument	fp		1145270	0					
ANR	1145962	Identifier	fp		1145270	0					
ANR	1145963	BreakStatement	break ;	235:15:6346:6351	1145270	1	True				
ANR	1145964	ExpressionStatement	"getValue ( newAd , ""Cluster"" , cluster2 )"	237:1:6355:6391	1145270	5	True				
ANR	1145965	CallExpression	"getValue ( newAd , ""Cluster"" , cluster2 )"		1145270	0					
ANR	1145966	Callee	getValue		1145270	0					
ANR	1145967	Identifier	getValue		1145270	0					
ANR	1145968	ArgumentList	newAd		1145270	1					
ANR	1145969	Argument	newAd		1145270	0					
ANR	1145970	Identifier	newAd		1145270	0					
ANR	1145971	Argument	"""Cluster"""		1145270	1					
ANR	1145972	PrimaryExpression	"""Cluster"""		1145270	0					
ANR	1145973	Argument	cluster2		1145270	2					
ANR	1145974	Identifier	cluster2		1145270	0					
ANR	1145975	IfStatement	"if ( ! strcmp ( cluster , cluster2 ) )"		1145270	6					
ANR	1145976	Condition	"! strcmp ( cluster , cluster2 )"	238:5:6398:6423	1145270	0	True				
ANR	1145977	UnaryOperationExpression	"! strcmp ( cluster , cluster2 )"		1145270	0					
ANR	1145978	UnaryOperator	!		1145270	0					
ANR	1145979	CallExpression	"strcmp ( cluster , cluster2 )"		1145270	1					
ANR	1145980	Callee	strcmp		1145270	0					
ANR	1145981	Identifier	strcmp		1145270	0					
ANR	1145982	ArgumentList	cluster		1145270	1					
ANR	1145983	Argument	cluster		1145270	0					
ANR	1145984	Identifier	cluster		1145270	0					
ANR	1145985	Argument	cluster2		1145270	1					
ANR	1145986	Identifier	cluster2		1145270	0					
ANR	1145987	CompoundStatement		142:32:3874:3874	1145270	1					
ANR	1145988	ExpressionStatement	"getValue ( newAd , ""MyType"" , mytype2 )"	239:3:6430:6464	1145270	0	True				
ANR	1145989	CallExpression	"getValue ( newAd , ""MyType"" , mytype2 )"		1145270	0					
ANR	1145990	Callee	getValue		1145270	0					
ANR	1145991	Identifier	getValue		1145270	0					
ANR	1145992	ArgumentList	newAd		1145270	1					
ANR	1145993	Argument	newAd		1145270	0					
ANR	1145994	Identifier	newAd		1145270	0					
ANR	1145995	Argument	"""MyType"""		1145270	1					
ANR	1145996	PrimaryExpression	"""MyType"""		1145270	0					
ANR	1145997	Argument	mytype2		1145270	2					
ANR	1145998	Identifier	mytype2		1145270	0					
ANR	1145999	ExpressionStatement	"getValue ( newAd , ""TerminatedNormally"" , terminatednormally2 )"	240:3:6469:6527	1145270	1	True				
ANR	1146000	CallExpression	"getValue ( newAd , ""TerminatedNormally"" , terminatednormally2 )"		1145270	0					
ANR	1146001	Callee	getValue		1145270	0					
ANR	1146002	Identifier	getValue		1145270	0					
ANR	1146003	ArgumentList	newAd		1145270	1					
ANR	1146004	Argument	newAd		1145270	0					
ANR	1146005	Identifier	newAd		1145270	0					
ANR	1146006	Argument	"""TerminatedNormally"""		1145270	1					
ANR	1146007	PrimaryExpression	"""TerminatedNormally"""		1145270	0					
ANR	1146008	Argument	terminatednormally2		1145270	2					
ANR	1146009	Identifier	terminatednormally2		1145270	0					
ANR	1146010	ExpressionStatement	"getValue ( newAd , ""ReturnValue"" , returnvalue2 )"	241:3:6532:6576	1145270	2	True				
ANR	1146011	CallExpression	"getValue ( newAd , ""ReturnValue"" , returnvalue2 )"		1145270	0					
ANR	1146012	Callee	getValue		1145270	0					
ANR	1146013	Identifier	getValue		1145270	0					
ANR	1146014	ArgumentList	newAd		1145270	1					
ANR	1146015	Argument	newAd		1145270	0					
ANR	1146016	Identifier	newAd		1145270	0					
ANR	1146017	Argument	"""ReturnValue"""		1145270	1					
ANR	1146018	PrimaryExpression	"""ReturnValue"""		1145270	0					
ANR	1146019	Argument	returnvalue2		1145270	2					
ANR	1146020	Identifier	returnvalue2		1145270	0					
ANR	1146021	IfStatement	"if ( ! strcmp ( mytype2 , ""<s>ExecuteEvent</s>"" ) )"		1145270	3					
ANR	1146022	Condition	"! strcmp ( mytype2 , ""<s>ExecuteEvent</s>"" )"	243:7:6586:6624	1145270	0	True				
ANR	1146023	UnaryOperationExpression	"! strcmp ( mytype2 , ""<s>ExecuteEvent</s>"" )"		1145270	0					
ANR	1146024	UnaryOperator	!		1145270	0					
ANR	1146025	CallExpression	"strcmp ( mytype2 , ""<s>ExecuteEvent</s>"" )"		1145270	1					
ANR	1146026	Callee	strcmp		1145270	0					
ANR	1146027	Identifier	strcmp		1145270	0					
ANR	1146028	ArgumentList	mytype2		1145270	1					
ANR	1146029	Argument	mytype2		1145270	0					
ANR	1146030	Identifier	mytype2		1145270	0					
ANR	1146031	Argument	"""<s>ExecuteEvent</s>"""		1145270	1					
ANR	1146032	PrimaryExpression	"""<s>ExecuteEvent</s>"""		1145270	0					
ANR	1146033	CompoundStatement		147:47:4075:4075	1145270	1					
ANR	1146034	ExpressionStatement	"getValue ( newAd , ""EventTime"" , eventtime1 )"	244:5:6633:6673	1145270	0	True				
ANR	1146035	CallExpression	"getValue ( newAd , ""EventTime"" , eventtime1 )"		1145270	0					
ANR	1146036	Callee	getValue		1145270	0					
ANR	1146037	Identifier	getValue		1145270	0					
ANR	1146038	ArgumentList	newAd		1145270	1					
ANR	1146039	Argument	newAd		1145270	0					
ANR	1146040	Identifier	newAd		1145270	0					
ANR	1146041	Argument	"""EventTime"""		1145270	1					
ANR	1146042	PrimaryExpression	"""EventTime"""		1145270	0					
ANR	1146043	Argument	eventtime1		1145270	2					
ANR	1146044	Identifier	eventtime1		1145270	0					
ANR	1146045	IfStatement	if ( logtype == CONDOR )		1145270	1					
ANR	1146046	Condition	logtype == CONDOR	245:9:6684:6700	1145270	0	True				
ANR	1146047	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1146048	Identifier	logtype		1145270	0					
ANR	1146049	Identifier	CONDOR		1145270	1					
ANR	1146050	CompoundStatement		149:27:4151:4151	1145270	1					
ANR	1146051	ExpressionStatement	"sscanf ( eventtime1 , ""<s>%d-%d-%dT%d:%d:%d</s>"" , & year , & month , & day , & hour , & minute , & second )"	246:7:6711:6810	1145270	0	True				
ANR	1146052	CallExpression	"sscanf ( eventtime1 , ""<s>%d-%d-%dT%d:%d:%d</s>"" , & year , & month , & day , & hour , & minute , & second )"		1145270	0					
ANR	1146053	Callee	sscanf		1145270	0					
ANR	1146054	Identifier	sscanf		1145270	0					
ANR	1146055	ArgumentList	eventtime1		1145270	1					
ANR	1146056	Argument	eventtime1		1145270	0					
ANR	1146057	Identifier	eventtime1		1145270	0					
ANR	1146058	Argument	"""<s>%d-%d-%dT%d:%d:%d</s>"""		1145270	1					
ANR	1146059	PrimaryExpression	"""<s>%d-%d-%dT%d:%d:%d</s>"""		1145270	0					
ANR	1146060	Argument	& year		1145270	2					
ANR	1146061	UnaryOperationExpression	& year		1145270	0					
ANR	1146062	UnaryOperator	&		1145270	0					
ANR	1146063	Identifier	year		1145270	1					
ANR	1146064	Argument	& month		1145270	3					
ANR	1146065	UnaryOperationExpression	& month		1145270	0					
ANR	1146066	UnaryOperator	&		1145270	0					
ANR	1146067	Identifier	month		1145270	1					
ANR	1146068	Argument	& day		1145270	4					
ANR	1146069	UnaryOperationExpression	& day		1145270	0					
ANR	1146070	UnaryOperator	&		1145270	0					
ANR	1146071	Identifier	day		1145270	1					
ANR	1146072	Argument	& hour		1145270	5					
ANR	1146073	UnaryOperationExpression	& hour		1145270	0					
ANR	1146074	UnaryOperator	&		1145270	0					
ANR	1146075	Identifier	hour		1145270	1					
ANR	1146076	Argument	& minute		1145270	6					
ANR	1146077	UnaryOperationExpression	& minute		1145270	0					
ANR	1146078	UnaryOperator	&		1145270	0					
ANR	1146079	Identifier	minute		1145270	1					
ANR	1146080	Argument	& second		1145270	7					
ANR	1146081	UnaryOperationExpression	& second		1145270	0					
ANR	1146082	UnaryOperator	&		1145270	0					
ANR	1146083	Identifier	second		1145270	1					
ANR	1146084	ElseStatement	else		1145270	0					
ANR	1146085	CompoundStatement		153:9:4277:4277	1145270	0					
ANR	1146086	ExpressionStatement	"sscanf ( eventtime1 , ""<s>%s %s %d %d:%d:%d %d </s>"" , daystr , monthstr , & day , & hour , & minute , & second , & year )"	250:7:6837:6950	1145270	0	True				
ANR	1146087	CallExpression	"sscanf ( eventtime1 , ""<s>%s %s %d %d:%d:%d %d </s>"" , daystr , monthstr , & day , & hour , & minute , & second , & year )"		1145270	0					
ANR	1146088	Callee	sscanf		1145270	0					
ANR	1146089	Identifier	sscanf		1145270	0					
ANR	1146090	ArgumentList	eventtime1		1145270	1					
ANR	1146091	Argument	eventtime1		1145270	0					
ANR	1146092	Identifier	eventtime1		1145270	0					
ANR	1146093	Argument	"""<s>%s %s %d %d:%d:%d %d </s>"""		1145270	1					
ANR	1146094	PrimaryExpression	"""<s>%s %s %d %d:%d:%d %d </s>"""		1145270	0					
ANR	1146095	Argument	daystr		1145270	2					
ANR	1146096	Identifier	daystr		1145270	0					
ANR	1146097	Argument	monthstr		1145270	3					
ANR	1146098	Identifier	monthstr		1145270	0					
ANR	1146099	Argument	& day		1145270	4					
ANR	1146100	UnaryOperationExpression	& day		1145270	0					
ANR	1146101	UnaryOperator	&		1145270	0					
ANR	1146102	Identifier	day		1145270	1					
ANR	1146103	Argument	& hour		1145270	5					
ANR	1146104	UnaryOperationExpression	& hour		1145270	0					
ANR	1146105	UnaryOperator	&		1145270	0					
ANR	1146106	Identifier	hour		1145270	1					
ANR	1146107	Argument	& minute		1145270	6					
ANR	1146108	UnaryOperationExpression	& minute		1145270	0					
ANR	1146109	UnaryOperator	&		1145270	0					
ANR	1146110	Identifier	minute		1145270	1					
ANR	1146111	Argument	& second		1145270	7					
ANR	1146112	UnaryOperationExpression	& second		1145270	0					
ANR	1146113	UnaryOperator	&		1145270	0					
ANR	1146114	Identifier	second		1145270	1					
ANR	1146115	Argument	& year		1145270	8					
ANR	1146116	UnaryOperationExpression	& year		1145270	0					
ANR	1146117	UnaryOperator	&		1145270	0					
ANR	1146118	Identifier	year		1145270	1					
ANR	1146119	ExpressionStatement	month = getmonth ( monthstr )	252:7:6959:6985	1145270	1	True				
ANR	1146120	AssignmentExpression	month = getmonth ( monthstr )		1145270	0		=			
ANR	1146121	Identifier	month		1145270	0					
ANR	1146122	CallExpression	getmonth ( monthstr )		1145270	1					
ANR	1146123	Callee	getmonth		1145270	0					
ANR	1146124	Identifier	getmonth		1145270	0					
ANR	1146125	ArgumentList	monthstr		1145270	1					
ANR	1146126	Argument	monthstr		1145270	0					
ANR	1146127	Identifier	monthstr		1145270	0					
ANR	1146128	IfStatement	if ( firstday == 0 )		1145270	4					
ANR	1146129	Condition	firstday == 0	255:7:7006:7018	1145270	0	True				
ANR	1146130	EqualityExpression	firstday == 0		1145270	0		==			
ANR	1146131	Identifier	firstday		1145270	0					
ANR	1146132	PrimaryExpression	0		1145270	1					
ANR	1146133	CompoundStatement		159:22:4470:4470	1145270	1					
ANR	1146134	ExpressionStatement	firstday = day	256:5:7028:7042	1145270	0	True				
ANR	1146135	AssignmentExpression	firstday = day		1145270	0		=			
ANR	1146136	Identifier	firstday		1145270	0					
ANR	1146137	Identifier	day		1145270	1					
ANR	1146138	ExpressionStatement	epocseconds = ( year - 1970 ) * 365 * 24 * 60 * 60 + ( month - 1 ) * 30 * 24 * 60 * 60 + ( day - 1 ) * 24 * 60 * 60 + ( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60	257:5:7049:7210	1145270	1	True				
ANR	1146139	AssignmentExpression	epocseconds = ( year - 1970 ) * 365 * 24 * 60 * 60 + ( month - 1 ) * 30 * 24 * 60 * 60 + ( day - 1 ) * 24 * 60 * 60 + ( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60		1145270	0		=			
ANR	1146140	Identifier	epocseconds		1145270	0					
ANR	1146141	AdditiveExpression	( year - 1970 ) * 365 * 24 * 60 * 60 + ( month - 1 ) * 30 * 24 * 60 * 60 + ( day - 1 ) * 24 * 60 * 60 + ( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60		1145270	1		+			
ANR	1146142	MultiplicativeExpression	( year - 1970 ) * 365 * 24 * 60 * 60		1145270	0		*			
ANR	1146143	AdditiveExpression	year - 1970		1145270	0		-			
ANR	1146144	Identifier	year		1145270	0					
ANR	1146145	PrimaryExpression	1970		1145270	1					
ANR	1146146	MultiplicativeExpression	365 * 24 * 60 * 60		1145270	1		*			
ANR	1146147	PrimaryExpression	365		1145270	0					
ANR	1146148	MultiplicativeExpression	24 * 60 * 60		1145270	1		*			
ANR	1146149	PrimaryExpression	24		1145270	0					
ANR	1146150	MultiplicativeExpression	60 * 60		1145270	1		*			
ANR	1146151	PrimaryExpression	60		1145270	0					
ANR	1146152	PrimaryExpression	60		1145270	1					
ANR	1146153	AdditiveExpression	( month - 1 ) * 30 * 24 * 60 * 60 + ( day - 1 ) * 24 * 60 * 60 + ( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60		1145270	1		+			
ANR	1146154	MultiplicativeExpression	( month - 1 ) * 30 * 24 * 60 * 60		1145270	0		*			
ANR	1146155	AdditiveExpression	month - 1		1145270	0		-			
ANR	1146156	Identifier	month		1145270	0					
ANR	1146157	PrimaryExpression	1		1145270	1					
ANR	1146158	MultiplicativeExpression	30 * 24 * 60 * 60		1145270	1		*			
ANR	1146159	PrimaryExpression	30		1145270	0					
ANR	1146160	MultiplicativeExpression	24 * 60 * 60		1145270	1		*			
ANR	1146161	PrimaryExpression	24		1145270	0					
ANR	1146162	MultiplicativeExpression	60 * 60		1145270	1		*			
ANR	1146163	PrimaryExpression	60		1145270	0					
ANR	1146164	PrimaryExpression	60		1145270	1					
ANR	1146165	AdditiveExpression	( day - 1 ) * 24 * 60 * 60 + ( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60		1145270	1		+			
ANR	1146166	MultiplicativeExpression	( day - 1 ) * 24 * 60 * 60		1145270	0		*			
ANR	1146167	AdditiveExpression	day - 1		1145270	0		-			
ANR	1146168	Identifier	day		1145270	0					
ANR	1146169	PrimaryExpression	1		1145270	1					
ANR	1146170	MultiplicativeExpression	24 * 60 * 60		1145270	1		*			
ANR	1146171	PrimaryExpression	24		1145270	0					
ANR	1146172	MultiplicativeExpression	60 * 60		1145270	1		*			
ANR	1146173	PrimaryExpression	60		1145270	0					
ANR	1146174	PrimaryExpression	60		1145270	1					
ANR	1146175	AdditiveExpression	( 9 ) * 24 * 60 * 60 + ( 5 ) * 60 * 60		1145270	1		+			
ANR	1146176	MultiplicativeExpression	( 9 ) * 24 * 60 * 60		1145270	0		*			
ANR	1146177	PrimaryExpression	9		1145270	0					
ANR	1146178	MultiplicativeExpression	24 * 60 * 60		1145270	1		*			
ANR	1146179	PrimaryExpression	24		1145270	0					
ANR	1146180	MultiplicativeExpression	60 * 60		1145270	1		*			
ANR	1146181	PrimaryExpression	60		1145270	0					
ANR	1146182	PrimaryExpression	60		1145270	1					
ANR	1146183	MultiplicativeExpression	( 5 ) * 60 * 60		1145270	1		*			
ANR	1146184	PrimaryExpression	5		1145270	0					
ANR	1146185	MultiplicativeExpression	60 * 60		1145270	1		*			
ANR	1146186	PrimaryExpression	60		1145270	0					
ANR	1146187	PrimaryExpression	60		1145270	1					
ANR	1146188	IfStatement	"if ( ! strcmp ( mytype2 , jobcompletedevent_true ) )"		1145270	5					
ANR	1146189	Condition	"! strcmp ( mytype2 , jobcompletedevent_true )"	266:7:7242:7281	1145270	0	True				
ANR	1146190	UnaryOperationExpression	"! strcmp ( mytype2 , jobcompletedevent_true )"		1145270	0					
ANR	1146191	UnaryOperator	!		1145270	0					
ANR	1146192	CallExpression	"strcmp ( mytype2 , jobcompletedevent_true )"		1145270	1					
ANR	1146193	Callee	strcmp		1145270	0					
ANR	1146194	Identifier	strcmp		1145270	0					
ANR	1146195	ArgumentList	mytype2		1145270	1					
ANR	1146196	Argument	mytype2		1145270	0					
ANR	1146197	Identifier	mytype2		1145270	0					
ANR	1146198	Argument	jobcompletedevent_true		1145270	1					
ANR	1146199	Identifier	jobcompletedevent_true		1145270	0					
ANR	1146200	CompoundStatement		170:48:4732:4732	1145270	1					
ANR	1146201	IfStatement	"if ( ( ! strcmp ( terminatednormally2 , terminatednormally_true ) ) && ( ! strcmp ( returnvalue2 , ""<n>0</n>"" ) ) )"		1145270	0					
ANR	1146202	Condition	"( ! strcmp ( terminatednormally2 , terminatednormally_true ) ) && ( ! strcmp ( returnvalue2 , ""<n>0</n>"" ) )"	267:9:7294:7387	1145270	0	True				
ANR	1146203	AndExpression	"( ! strcmp ( terminatednormally2 , terminatednormally_true ) ) && ( ! strcmp ( returnvalue2 , ""<n>0</n>"" ) )"		1145270	0		&&			
ANR	1146204	UnaryOperationExpression	"! strcmp ( terminatednormally2 , terminatednormally_true )"		1145270	0					
ANR	1146205	UnaryOperator	!		1145270	0					
ANR	1146206	CallExpression	"strcmp ( terminatednormally2 , terminatednormally_true )"		1145270	1					
ANR	1146207	Callee	strcmp		1145270	0					
ANR	1146208	Identifier	strcmp		1145270	0					
ANR	1146209	ArgumentList	terminatednormally2		1145270	1					
ANR	1146210	Argument	terminatednormally2		1145270	0					
ANR	1146211	Identifier	terminatednormally2		1145270	0					
ANR	1146212	Argument	terminatednormally_true		1145270	1					
ANR	1146213	Identifier	terminatednormally_true		1145270	0					
ANR	1146214	UnaryOperationExpression	"! strcmp ( returnvalue2 , ""<n>0</n>"" )"		1145270	1					
ANR	1146215	UnaryOperator	!		1145270	0					
ANR	1146216	CallExpression	"strcmp ( returnvalue2 , ""<n>0</n>"" )"		1145270	1					
ANR	1146217	Callee	strcmp		1145270	0					
ANR	1146218	Identifier	strcmp		1145270	0					
ANR	1146219	ArgumentList	returnvalue2		1145270	1					
ANR	1146220	Argument	returnvalue2		1145270	0					
ANR	1146221	Identifier	returnvalue2		1145270	0					
ANR	1146222	Argument	"""<n>0</n>"""		1145270	1					
ANR	1146223	PrimaryExpression	"""<n>0</n>"""		1145270	0					
ANR	1146224	CompoundStatement		173:7:4846:4846	1145270	1					
ANR	1146225	ExpressionStatement	"getValue ( newAd , ""EventTime"" , eventtime2 )"	276:2:7509:7549	1145270	0	True				
ANR	1146226	CallExpression	"getValue ( newAd , ""EventTime"" , eventtime2 )"		1145270	0					
ANR	1146227	Callee	getValue		1145270	0					
ANR	1146228	Identifier	getValue		1145270	0					
ANR	1146229	ArgumentList	newAd		1145270	1					
ANR	1146230	Argument	newAd		1145270	0					
ANR	1146231	Identifier	newAd		1145270	0					
ANR	1146232	Argument	"""EventTime"""		1145270	1					
ANR	1146233	PrimaryExpression	"""EventTime"""		1145270	0					
ANR	1146234	Argument	eventtime2		1145270	2					
ANR	1146235	Identifier	eventtime2		1145270	0					
ANR	1146236	IfStatement	if ( logtype == CONDOR )		1145270	1					
ANR	1146237	Condition	logtype == CONDOR	278:6:7558:7574	1145270	0	True				
ANR	1146238	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1146239	Identifier	logtype		1145270	0					
ANR	1146240	Identifier	CONDOR		1145270	1					
ANR	1146241	CompoundStatement		182:24:5025:5025	1145270	1					
ANR	1146242	ExpressionStatement	"sscanf ( eventtime2 , ""<s>%d-%d-%dT%d:%d:%d</s>"" , & year2 , & month2 , & day2 , & hour2 , & minute2 , & second2 )"	279:4:7582:7685	1145270	0	True				
ANR	1146243	CallExpression	"sscanf ( eventtime2 , ""<s>%d-%d-%dT%d:%d:%d</s>"" , & year2 , & month2 , & day2 , & hour2 , & minute2 , & second2 )"		1145270	0					
ANR	1146244	Callee	sscanf		1145270	0					
ANR	1146245	Identifier	sscanf		1145270	0					
ANR	1146246	ArgumentList	eventtime2		1145270	1					
ANR	1146247	Argument	eventtime2		1145270	0					
ANR	1146248	Identifier	eventtime2		1145270	0					
ANR	1146249	Argument	"""<s>%d-%d-%dT%d:%d:%d</s>"""		1145270	1					
ANR	1146250	PrimaryExpression	"""<s>%d-%d-%dT%d:%d:%d</s>"""		1145270	0					
ANR	1146251	Argument	& year2		1145270	2					
ANR	1146252	UnaryOperationExpression	& year2		1145270	0					
ANR	1146253	UnaryOperator	&		1145270	0					
ANR	1146254	Identifier	year2		1145270	1					
ANR	1146255	Argument	& month2		1145270	3					
ANR	1146256	UnaryOperationExpression	& month2		1145270	0					
ANR	1146257	UnaryOperator	&		1145270	0					
ANR	1146258	Identifier	month2		1145270	1					
ANR	1146259	Argument	& day2		1145270	4					
ANR	1146260	UnaryOperationExpression	& day2		1145270	0					
ANR	1146261	UnaryOperator	&		1145270	0					
ANR	1146262	Identifier	day2		1145270	1					
ANR	1146263	Argument	& hour2		1145270	5					
ANR	1146264	UnaryOperationExpression	& hour2		1145270	0					
ANR	1146265	UnaryOperator	&		1145270	0					
ANR	1146266	Identifier	hour2		1145270	1					
ANR	1146267	Argument	& minute2		1145270	6					
ANR	1146268	UnaryOperationExpression	& minute2		1145270	0					
ANR	1146269	UnaryOperator	&		1145270	0					
ANR	1146270	Identifier	minute2		1145270	1					
ANR	1146271	Argument	& second2		1145270	7					
ANR	1146272	UnaryOperationExpression	& second2		1145270	0					
ANR	1146273	UnaryOperator	&		1145270	0					
ANR	1146274	Identifier	second2		1145270	1					
ANR	1146275	ExpressionStatement	"sscanf ( lognotes , ""<s>DAG Node: %c"" , & Node )"	281:4:7691:7733	1145270	1	True				
ANR	1146276	CallExpression	"sscanf ( lognotes , ""<s>DAG Node: %c"" , & Node )"		1145270	0					
ANR	1146277	Callee	sscanf		1145270	0					
ANR	1146278	Identifier	sscanf		1145270	0					
ANR	1146279	ArgumentList	lognotes		1145270	1					
ANR	1146280	Argument	lognotes		1145270	0					
ANR	1146281	Identifier	lognotes		1145270	0					
ANR	1146282	Argument	"""<s>DAG Node: %c"""		1145270	1					
ANR	1146283	PrimaryExpression	"""<s>DAG Node: %c"""		1145270	0					
ANR	1146284	Argument	& Node		1145270	2					
ANR	1146285	UnaryOperationExpression	& Node		1145270	0					
ANR	1146286	UnaryOperator	&		1145270	0					
ANR	1146287	Identifier	Node		1145270	1					
ANR	1146288	ElseStatement	else		1145270	0					
ANR	1146289	CompoundStatement		189:6:5233:5233	1145270	0					
ANR	1146290	ExpressionStatement	"sscanf ( eventtime2 , ""<s>%s %s %d %d:%d:%d %d (CST) </s>"" , monthstr2 , daystr2 , & day2 , & hour2 , & minute2 , & second2 , & year2 )"	286:4:7790:7919	1145270	0	True				
ANR	1146291	CallExpression	"sscanf ( eventtime2 , ""<s>%s %s %d %d:%d:%d %d (CST) </s>"" , monthstr2 , daystr2 , & day2 , & hour2 , & minute2 , & second2 , & year2 )"		1145270	0					
ANR	1146292	Callee	sscanf		1145270	0					
ANR	1146293	Identifier	sscanf		1145270	0					
ANR	1146294	ArgumentList	eventtime2		1145270	1					
ANR	1146295	Argument	eventtime2		1145270	0					
ANR	1146296	Identifier	eventtime2		1145270	0					
ANR	1146297	Argument	"""<s>%s %s %d %d:%d:%d %d (CST) </s>"""		1145270	1					
ANR	1146298	PrimaryExpression	"""<s>%s %s %d %d:%d:%d %d (CST) </s>"""		1145270	0					
ANR	1146299	Argument	monthstr2		1145270	2					
ANR	1146300	Identifier	monthstr2		1145270	0					
ANR	1146301	Argument	daystr2		1145270	3					
ANR	1146302	Identifier	daystr2		1145270	0					
ANR	1146303	Argument	& day2		1145270	4					
ANR	1146304	UnaryOperationExpression	& day2		1145270	0					
ANR	1146305	UnaryOperator	&		1145270	0					
ANR	1146306	Identifier	day2		1145270	1					
ANR	1146307	Argument	& hour2		1145270	5					
ANR	1146308	UnaryOperationExpression	& hour2		1145270	0					
ANR	1146309	UnaryOperator	&		1145270	0					
ANR	1146310	Identifier	hour2		1145270	1					
ANR	1146311	Argument	& minute2		1145270	6					
ANR	1146312	UnaryOperationExpression	& minute2		1145270	0					
ANR	1146313	UnaryOperator	&		1145270	0					
ANR	1146314	Identifier	minute2		1145270	1					
ANR	1146315	Argument	& second2		1145270	7					
ANR	1146316	UnaryOperationExpression	& second2		1145270	0					
ANR	1146317	UnaryOperator	&		1145270	0					
ANR	1146318	Identifier	second2		1145270	1					
ANR	1146319	Argument	& year2		1145270	8					
ANR	1146320	UnaryOperationExpression	& year2		1145270	0					
ANR	1146321	UnaryOperator	&		1145270	0					
ANR	1146322	Identifier	year2		1145270	1					
ANR	1146323	ExpressionStatement	timeinseconds = ( second2 - second ) + 60 * ( minute2 - minute ) + 60 * 60 * ( hour2 - hour ) + 24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )	291:2:7930:8071	1145270	2	True				
ANR	1146324	AssignmentExpression	timeinseconds = ( second2 - second ) + 60 * ( minute2 - minute ) + 60 * 60 * ( hour2 - hour ) + 24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )		1145270	0		=			
ANR	1146325	Identifier	timeinseconds		1145270	0					
ANR	1146326	AdditiveExpression	( second2 - second ) + 60 * ( minute2 - minute ) + 60 * 60 * ( hour2 - hour ) + 24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )		1145270	1		+			
ANR	1146327	AdditiveExpression	second2 - second		1145270	0		-			
ANR	1146328	Identifier	second2		1145270	0					
ANR	1146329	Identifier	second		1145270	1					
ANR	1146330	AdditiveExpression	60 * ( minute2 - minute ) + 60 * 60 * ( hour2 - hour ) + 24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )		1145270	1		+			
ANR	1146331	MultiplicativeExpression	60 * ( minute2 - minute )		1145270	0		*			
ANR	1146332	PrimaryExpression	60		1145270	0					
ANR	1146333	AdditiveExpression	minute2 - minute		1145270	1		-			
ANR	1146334	Identifier	minute2		1145270	0					
ANR	1146335	Identifier	minute		1145270	1					
ANR	1146336	AdditiveExpression	60 * 60 * ( hour2 - hour ) + 24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )		1145270	1		+			
ANR	1146337	MultiplicativeExpression	60 * 60 * ( hour2 - hour )		1145270	0		*			
ANR	1146338	PrimaryExpression	60		1145270	0					
ANR	1146339	MultiplicativeExpression	60 * ( hour2 - hour )		1145270	1		*			
ANR	1146340	PrimaryExpression	60		1145270	0					
ANR	1146341	AdditiveExpression	hour2 - hour		1145270	1		-			
ANR	1146342	Identifier	hour2		1145270	0					
ANR	1146343	Identifier	hour		1145270	1					
ANR	1146344	AdditiveExpression	24 * 60 * 60 * ( day2 - day ) + 365 * 24 * 60 * 60 * ( year2 - year )		1145270	1		+			
ANR	1146345	MultiplicativeExpression	24 * 60 * 60 * ( day2 - day )		1145270	0		*			
ANR	1146346	PrimaryExpression	24		1145270	0					
ANR	1146347	MultiplicativeExpression	60 * 60 * ( day2 - day )		1145270	1		*			
ANR	1146348	PrimaryExpression	60		1145270	0					
ANR	1146349	MultiplicativeExpression	60 * ( day2 - day )		1145270	1		*			
ANR	1146350	PrimaryExpression	60		1145270	0					
ANR	1146351	AdditiveExpression	day2 - day		1145270	1		-			
ANR	1146352	Identifier	day2		1145270	0					
ANR	1146353	Identifier	day		1145270	1					
ANR	1146354	MultiplicativeExpression	365 * 24 * 60 * 60 * ( year2 - year )		1145270	1		*			
ANR	1146355	PrimaryExpression	365		1145270	0					
ANR	1146356	MultiplicativeExpression	24 * 60 * 60 * ( year2 - year )		1145270	1		*			
ANR	1146357	PrimaryExpression	24		1145270	0					
ANR	1146358	MultiplicativeExpression	60 * 60 * ( year2 - year )		1145270	1		*			
ANR	1146359	PrimaryExpression	60		1145270	0					
ANR	1146360	MultiplicativeExpression	60 * ( year2 - year )		1145270	1		*			
ANR	1146361	PrimaryExpression	60		1145270	0					
ANR	1146362	AdditiveExpression	year2 - year		1145270	1		-			
ANR	1146363	Identifier	year2		1145270	0					
ANR	1146364	Identifier	year		1145270	1					
ANR	1146365	ExpressionStatement	dateinminutes = ( day - firstday ) * 1440 + 60 * hour + minute	301:2:8295:8349	1145270	3	True				
ANR	1146366	AssignmentExpression	dateinminutes = ( day - firstday ) * 1440 + 60 * hour + minute		1145270	0		=			
ANR	1146367	Identifier	dateinminutes		1145270	0					
ANR	1146368	AdditiveExpression	( day - firstday ) * 1440 + 60 * hour + minute		1145270	1		+			
ANR	1146369	MultiplicativeExpression	( day - firstday ) * 1440		1145270	0		*			
ANR	1146370	AdditiveExpression	day - firstday		1145270	0		-			
ANR	1146371	Identifier	day		1145270	0					
ANR	1146372	Identifier	firstday		1145270	1					
ANR	1146373	PrimaryExpression	1440		1145270	1					
ANR	1146374	AdditiveExpression	60 * hour + minute		1145270	1		+			
ANR	1146375	MultiplicativeExpression	60 * hour		1145270	0		*			
ANR	1146376	PrimaryExpression	60		1145270	0					
ANR	1146377	Identifier	hour		1145270	1					
ANR	1146378	Identifier	minute		1145270	1					
ANR	1146379	ExpressionStatement	dateinminutes2 = ( day2 - firstday ) * 1440 + 60 * hour2 + minute2	305:2:8477:8535	1145270	4	True				
ANR	1146380	AssignmentExpression	dateinminutes2 = ( day2 - firstday ) * 1440 + 60 * hour2 + minute2		1145270	0		=			
ANR	1146381	Identifier	dateinminutes2		1145270	0					
ANR	1146382	AdditiveExpression	( day2 - firstday ) * 1440 + 60 * hour2 + minute2		1145270	1		+			
ANR	1146383	MultiplicativeExpression	( day2 - firstday ) * 1440		1145270	0		*			
ANR	1146384	AdditiveExpression	day2 - firstday		1145270	0		-			
ANR	1146385	Identifier	day2		1145270	0					
ANR	1146386	Identifier	firstday		1145270	1					
ANR	1146387	PrimaryExpression	1440		1145270	1					
ANR	1146388	AdditiveExpression	60 * hour2 + minute2		1145270	1		+			
ANR	1146389	MultiplicativeExpression	60 * hour2		1145270	0		*			
ANR	1146390	PrimaryExpression	60		1145270	0					
ANR	1146391	Identifier	hour2		1145270	1					
ANR	1146392	Identifier	minute2		1145270	1					
ANR	1146393	ForStatement	for ( i = dateinminutes ; i < dateinminutes2 ; i ++ )		1145270	5					
ANR	1146394	ForInit	i = dateinminutes ;	310:7:8676:8691	1145270	0	True				
ANR	1146395	AssignmentExpression	i = dateinminutes		1145270	0		=			
ANR	1146396	Identifier	i		1145270	0					
ANR	1146397	Identifier	dateinminutes		1145270	1					
ANR	1146398	Condition	i < dateinminutes2	310:24:8693:8708	1145270	1	True				
ANR	1146399	RelationalExpression	i < dateinminutes2		1145270	0		<			
ANR	1146400	Identifier	i		1145270	0					
ANR	1146401	Identifier	dateinminutes2		1145270	1					
ANR	1146402	PostIncDecOperationExpression	i ++	310:42:8711:8713	1145270	2	True				
ANR	1146403	Identifier	i		1145270	0					
ANR	1146404	IncDec	++		1145270	1					
ANR	1146405	CompoundStatement		214:46:6164:6164	1145270	3					
ANR	1146406	IfStatement	if ( logtype == CONDOR )		1145270	0					
ANR	1146407	Condition	logtype == CONDOR	311:8:8725:8741	1145270	0	True				
ANR	1146408	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1146409	Identifier	logtype		1145270	0					
ANR	1146410	Identifier	CONDOR		1145270	1					
ANR	1146411	CompoundStatement		215:26:6192:6192	1145270	1					
ANR	1146412	IfStatement	if ( Node == 'A' )		1145270	0					
ANR	1146413	Condition	Node == 'A'	312:10:8755:8765	1145270	0	True				
ANR	1146414	EqualityExpression	Node == 'A'		1145270	0		==			
ANR	1146415	Identifier	Node		1145270	0					
ANR	1146416	PrimaryExpression	'A'		1145270	1					
ANR	1146417	CompoundStatement		216:22:6216:6216	1145270	1					
ANR	1146418	ExpressionStatement	dailychart_A [ i ] += ( float ) 1058 / timeinseconds	313:8:8777:8821	1145270	0	True				
ANR	1146419	AssignmentExpression	dailychart_A [ i ] += ( float ) 1058 / timeinseconds		1145270	0		+=			
ANR	1146420	ArrayIndexing	dailychart_A [ i ]		1145270	0					
ANR	1146421	Identifier	dailychart_A		1145270	0					
ANR	1146422	Identifier	i		1145270	1					
ANR	1146423	MultiplicativeExpression	( float ) 1058 / timeinseconds		1145270	1		/			
ANR	1146424	CastExpression	( float ) 1058		1145270	0					
ANR	1146425	CastTarget	float		1145270	0					
ANR	1146426	PrimaryExpression	1058		1145270	1					
ANR	1146427	Identifier	timeinseconds		1145270	1					
ANR	1146428	ExpressionStatement	concurrency_A [ i ] += 1	314:8:8831:8852	1145270	1	True				
ANR	1146429	AssignmentExpression	concurrency_A [ i ] += 1		1145270	0		+=			
ANR	1146430	ArrayIndexing	concurrency_A [ i ]		1145270	0					
ANR	1146431	Identifier	concurrency_A		1145270	0					
ANR	1146432	Identifier	i		1145270	1					
ANR	1146433	PrimaryExpression	1		1145270	1					
ANR	1146434	ElseStatement	else		1145270	0					
ANR	1146435	IfStatement	if ( Node == 'C' )		1145270	0					
ANR	1146436	Condition	Node == 'C'	316:15:8877:8887	1145270	0	True				
ANR	1146437	EqualityExpression	Node == 'C'		1145270	0		==			
ANR	1146438	Identifier	Node		1145270	0					
ANR	1146439	PrimaryExpression	'C'		1145270	1					
ANR	1146440	CompoundStatement		220:27:6338:6338	1145270	1					
ANR	1146441	ExpressionStatement	dailychart_C [ i ] += ( float ) 1058 / timeinseconds	317:8:8899:8943	1145270	0	True				
ANR	1146442	AssignmentExpression	dailychart_C [ i ] += ( float ) 1058 / timeinseconds		1145270	0		+=			
ANR	1146443	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1146444	Identifier	dailychart_C		1145270	0					
ANR	1146445	Identifier	i		1145270	1					
ANR	1146446	MultiplicativeExpression	( float ) 1058 / timeinseconds		1145270	1		/			
ANR	1146447	CastExpression	( float ) 1058		1145270	0					
ANR	1146448	CastTarget	float		1145270	0					
ANR	1146449	PrimaryExpression	1058		1145270	1					
ANR	1146450	Identifier	timeinseconds		1145270	1					
ANR	1146451	ExpressionStatement	concurrency_C [ i ] += 1	318:8:8953:8974	1145270	1	True				
ANR	1146452	AssignmentExpression	concurrency_C [ i ] += 1		1145270	0		+=			
ANR	1146453	ArrayIndexing	concurrency_C [ i ]		1145270	0					
ANR	1146454	Identifier	concurrency_C		1145270	0					
ANR	1146455	Identifier	i		1145270	1					
ANR	1146456	PrimaryExpression	1		1145270	1					
ANR	1146457	ElseStatement	else		1145270	0					
ANR	1146458	CompoundStatement		226:8:6454:6454	1145270	0					
ANR	1146459	ExpressionStatement	dailychart [ i ] += ( float ) 1058 / timeinseconds	323:6:9013:9055	1145270	0	True				
ANR	1146460	AssignmentExpression	dailychart [ i ] += ( float ) 1058 / timeinseconds		1145270	0		+=			
ANR	1146461	ArrayIndexing	dailychart [ i ]		1145270	0					
ANR	1146462	Identifier	dailychart		1145270	0					
ANR	1146463	Identifier	i		1145270	1					
ANR	1146464	MultiplicativeExpression	( float ) 1058 / timeinseconds		1145270	1		/			
ANR	1146465	CastExpression	( float ) 1058		1145270	0					
ANR	1146466	CastTarget	float		1145270	0					
ANR	1146467	PrimaryExpression	1058		1145270	1					
ANR	1146468	Identifier	timeinseconds		1145270	1					
ANR	1146469	ExpressionStatement	concurrency [ i ] += 1	324:6:9063:9082	1145270	1	True				
ANR	1146470	AssignmentExpression	concurrency [ i ] += 1		1145270	0		+=			
ANR	1146471	ArrayIndexing	concurrency [ i ]		1145270	0					
ANR	1146472	Identifier	concurrency		1145270	0					
ANR	1146473	Identifier	i		1145270	1					
ANR	1146474	PrimaryExpression	1		1145270	1					
ANR	1146475	ExpressionStatement	jobs_succeeded ++	335:2:9371:9388	1145270	6	True				
ANR	1146476	PostIncDecOperationExpression	jobs_succeeded ++		1145270	0					
ANR	1146477	Identifier	jobs_succeeded		1145270	0					
ANR	1146478	IncDec	++		1145270	1					
ANR	1146479	ExpressionStatement	job_completed = true	336:2:9392:9412	1145270	7	True				
ANR	1146480	AssignmentExpression	job_completed = true		1145270	0		=			
ANR	1146481	Identifier	job_completed		1145270	0					
ANR	1146482	Identifier	true		1145270	1					
ANR	1146483	BreakStatement	break ;	337:2:9416:9421	1145270	8	True				
ANR	1146484	ElseStatement	else		1145270	0					
ANR	1146485	CompoundStatement		245:7:6919:6919	1145270	0					
ANR	1146486	ExpressionStatement	"printf ( ""job %s failed!\\n"" , cluster )"	342:2:9474:9509	1145270	0	True				
ANR	1146487	CallExpression	"printf ( ""job %s failed!\\n"" , cluster )"		1145270	0					
ANR	1146488	Callee	printf		1145270	0					
ANR	1146489	Identifier	printf		1145270	0					
ANR	1146490	ArgumentList	"""job %s failed!\\n"""		1145270	1					
ANR	1146491	Argument	"""job %s failed!\\n"""		1145270	0					
ANR	1146492	PrimaryExpression	"""job %s failed!\\n"""		1145270	0					
ANR	1146493	Argument	cluster		1145270	1					
ANR	1146494	Identifier	cluster		1145270	0					
ANR	1146495	ExpressionStatement	jobs_failed ++	343:2:9513:9527	1145270	1	True				
ANR	1146496	PostIncDecOperationExpression	jobs_failed ++		1145270	0					
ANR	1146497	Identifier	jobs_failed		1145270	0					
ANR	1146498	IncDec	++		1145270	1					
ANR	1146499	ExpressionStatement	job_completed = true	344:2:9531:9551	1145270	2	True				
ANR	1146500	AssignmentExpression	job_completed = true		1145270	0		=			
ANR	1146501	Identifier	job_completed		1145270	0					
ANR	1146502	Identifier	true		1145270	1					
ANR	1146503	BreakStatement	break ;	345:2:9555:9560	1145270	3	True				
ANR	1146504	IfStatement	if ( ! job_completed )		1145270	2					
ANR	1146505	Condition	! job_completed	353:10:9728:9741	1145270	0	True				
ANR	1146506	UnaryOperationExpression	! job_completed		1145270	0					
ANR	1146507	UnaryOperator	!		1145270	0					
ANR	1146508	Identifier	job_completed		1145270	1					
ANR	1146509	CompoundStatement		257:25:7192:7192	1145270	1					
ANR	1146510	ExpressionStatement	"printf ( ""job %s not completed!\\n"" , cluster )"	354:1:9746:9788	1145270	0	True				
ANR	1146511	CallExpression	"printf ( ""job %s not completed!\\n"" , cluster )"		1145270	0					
ANR	1146512	Callee	printf		1145270	0					
ANR	1146513	Identifier	printf		1145270	0					
ANR	1146514	ArgumentList	"""job %s not completed!\\n"""		1145270	1					
ANR	1146515	Argument	"""job %s not completed!\\n"""		1145270	0					
ANR	1146516	PrimaryExpression	"""job %s not completed!\\n"""		1145270	0					
ANR	1146517	Argument	cluster		1145270	1					
ANR	1146518	Identifier	cluster		1145270	0					
ANR	1146519	ExpressionStatement	jobs_unfinished ++	355:1:9791:9809	1145270	1	True				
ANR	1146520	PostIncDecOperationExpression	jobs_unfinished ++		1145270	0					
ANR	1146521	Identifier	jobs_unfinished		1145270	0					
ANR	1146522	IncDec	++		1145270	1					
ANR	1146523	ExpressionStatement	"fsetpos ( fp , lastpos )"	358:6:9826:9846	1145270	3	True				
ANR	1146524	CallExpression	"fsetpos ( fp , lastpos )"		1145270	0					
ANR	1146525	Callee	fsetpos		1145270	0					
ANR	1146526	Identifier	fsetpos		1145270	0					
ANR	1146527	ArgumentList	fp		1145270	1					
ANR	1146528	Argument	fp		1145270	0					
ANR	1146529	Identifier	fp		1145270	0					
ANR	1146530	Argument	lastpos		1145270	1					
ANR	1146531	Identifier	lastpos		1145270	0					
ANR	1146532	IfStatement	if ( newAd != NULL )		1145270	9					
ANR	1146533	Condition	newAd != NULL	366:8:9998:10010	1145270	0	True				
ANR	1146534	EqualityExpression	newAd != NULL		1145270	0		!=			
ANR	1146535	Identifier	newAd		1145270	0					
ANR	1146536	Identifier	NULL		1145270	1					
ANR	1146537	Statement	delete	366:23:10013:10018	1145270	1	True				
ANR	1146538	ExpressionStatement	newAd	366:30:10020:10025	1145270	10	True				
ANR	1146539	Identifier	newAd		1145270	0					
ANR	1146540	ExpressionStatement	newAd = NULL	366:37:10027:10039	1145270	11	True				
ANR	1146541	AssignmentExpression	newAd = NULL		1145270	0		=			
ANR	1146542	Identifier	newAd		1145270	0					
ANR	1146543	Identifier	NULL		1145270	1					
ANR	1146544	ExpressionStatement	"printf ( ""Search complete!\\n"" )"	370:2:10078:10106	1145270	33	True				
ANR	1146545	CallExpression	"printf ( ""Search complete!\\n"" )"		1145270	0					
ANR	1146546	Callee	printf		1145270	0					
ANR	1146547	Identifier	printf		1145270	0					
ANR	1146548	ArgumentList	"""Search complete!\\n"""		1145270	1					
ANR	1146549	Argument	"""Search complete!\\n"""		1145270	0					
ANR	1146550	PrimaryExpression	"""Search complete!\\n"""		1145270	0					
ANR	1146551	IdentifierDeclStatement	"long j = 1 , ja = 1 , jc = 1 ;"	373:2:10114:10140	1145270	34	True				
ANR	1146552	IdentifierDecl	j = 1		1145270	0					
ANR	1146553	IdentifierDeclType	long		1145270	0					
ANR	1146554	Identifier	j		1145270	1					
ANR	1146555	AssignmentExpression	j = 1		1145270	2		=			
ANR	1146556	Identifier	j		1145270	0					
ANR	1146557	PrimaryExpression	1		1145270	1					
ANR	1146558	IdentifierDecl	ja = 1		1145270	1					
ANR	1146559	IdentifierDeclType	long		1145270	0					
ANR	1146560	Identifier	ja		1145270	1					
ANR	1146561	AssignmentExpression	ja = 1		1145270	2		=			
ANR	1146562	Identifier	ja		1145270	0					
ANR	1146563	PrimaryExpression	1		1145270	1					
ANR	1146564	IdentifierDecl	jc = 1		1145270	2					
ANR	1146565	IdentifierDeclType	long		1145270	0					
ANR	1146566	Identifier	jc		1145270	1					
ANR	1146567	AssignmentExpression	jc = 1		1145270	2		=			
ANR	1146568	Identifier	jc		1145270	0					
ANR	1146569	PrimaryExpression	1		1145270	1					
ANR	1146570	ForStatement	for ( i = 0 ; i < 7 * 1440 ; i ++ )		1145270	35					
ANR	1146571	ForInit	i = 0 ;	375:7:10150:10153	1145270	0	True				
ANR	1146572	AssignmentExpression	i = 0		1145270	0		=			
ANR	1146573	Identifier	i		1145270	0					
ANR	1146574	PrimaryExpression	0		1145270	1					
ANR	1146575	Condition	i < 7 * 1440	375:11:10154:10161	1145270	1	True				
ANR	1146576	RelationalExpression	i < 7 * 1440		1145270	0		<			
ANR	1146577	Identifier	i		1145270	0					
ANR	1146578	MultiplicativeExpression	7 * 1440		1145270	1		*			
ANR	1146579	PrimaryExpression	7		1145270	0					
ANR	1146580	PrimaryExpression	1440		1145270	1					
ANR	1146581	PostIncDecOperationExpression	i ++	375:20:10163:10165	1145270	2	True				
ANR	1146582	Identifier	i		1145270	0					
ANR	1146583	IncDec	++		1145270	1					
ANR	1146584	CompoundStatement		279:24:7616:7616	1145270	3					
ANR	1146585	IfStatement	if ( dailychart_C [ i ] > 12.5 )		1145270	0					
ANR	1146586	Condition	dailychart_C [ i ] > 12.5	376:8:10177:10198	1145270	0	True				
ANR	1146587	RelationalExpression	dailychart_C [ i ] > 12.5		1145270	0		>			
ANR	1146588	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1146589	Identifier	dailychart_C		1145270	0					
ANR	1146590	Identifier	i		1145270	1					
ANR	1146591	PrimaryExpression	12.5		1145270	1					
ANR	1146592	ExpressionStatement	dailychart_C [ i ] = 12.5	376:32:10201:10223	1145270	1	True				
ANR	1146593	AssignmentExpression	dailychart_C [ i ] = 12.5		1145270	0		=			
ANR	1146594	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1146595	Identifier	dailychart_C		1145270	0					
ANR	1146596	Identifier	i		1145270	1					
ANR	1146597	PrimaryExpression	12.5		1145270	1					
ANR	1146598	ForStatement	for ( i = 0 ; i < 7 * 1440 ; i ++ )		1145270	36					
ANR	1146599	ForInit	i = 0 ;	379:7:10282:10285	1145270	0	True				
ANR	1146600	AssignmentExpression	i = 0		1145270	0		=			
ANR	1146601	Identifier	i		1145270	0					
ANR	1146602	PrimaryExpression	0		1145270	1					
ANR	1146603	Condition	i < 7 * 1440	379:11:10286:10293	1145270	1	True				
ANR	1146604	RelationalExpression	i < 7 * 1440		1145270	0		<			
ANR	1146605	Identifier	i		1145270	0					
ANR	1146606	MultiplicativeExpression	7 * 1440		1145270	1		*			
ANR	1146607	PrimaryExpression	7		1145270	0					
ANR	1146608	PrimaryExpression	1440		1145270	1					
ANR	1146609	PostIncDecOperationExpression	i ++	379:20:10295:10297	1145270	2	True				
ANR	1146610	Identifier	i		1145270	0					
ANR	1146611	IncDec	++		1145270	1					
ANR	1146612	CompoundStatement		283:24:7748:7748	1145270	3					
ANR	1146613	IfStatement	if ( logtype == CONDOR )		1145270	0					
ANR	1146614	Condition	logtype == CONDOR	380:8:10309:10325	1145270	0	True				
ANR	1146615	EqualityExpression	logtype == CONDOR		1145270	0		==			
ANR	1146616	Identifier	logtype		1145270	0					
ANR	1146617	Identifier	CONDOR		1145270	1					
ANR	1146618	CompoundStatement		284:26:7776:7776	1145270	1					
ANR	1146619	IfStatement	if ( dailychart_A [ i ] > 0 )		1145270	0					
ANR	1146620	Condition	dailychart_A [ i ] > 0	381:10:10339:10357	1145270	0	True				
ANR	1146621	RelationalExpression	dailychart_A [ i ] > 0		1145270	0		>			
ANR	1146622	ArrayIndexing	dailychart_A [ i ]		1145270	0					
ANR	1146623	Identifier	dailychart_A		1145270	0					
ANR	1146624	Identifier	i		1145270	1					
ANR	1146625	PrimaryExpression	0		1145270	1					
ANR	1146626	CompoundStatement		285:30:7808:7808	1145270	1					
ANR	1146627	ExpressionStatement	"fprintf ( foutA , ""%ld %ld %f %d\\n"" , ja , epocseconds + i * 60 , dailychart_A [ i ] , concurrency_A [ i ] )"	382:1:10362:10456	1145270	0	True				
ANR	1146628	CallExpression	"fprintf ( foutA , ""%ld %ld %f %d\\n"" , ja , epocseconds + i * 60 , dailychart_A [ i ] , concurrency_A [ i ] )"		1145270	0					
ANR	1146629	Callee	fprintf		1145270	0					
ANR	1146630	Identifier	fprintf		1145270	0					
ANR	1146631	ArgumentList	foutA		1145270	1					
ANR	1146632	Argument	foutA		1145270	0					
ANR	1146633	Identifier	foutA		1145270	0					
ANR	1146634	Argument	"""%ld %ld %f %d\\n"""		1145270	1					
ANR	1146635	PrimaryExpression	"""%ld %ld %f %d\\n"""		1145270	0					
ANR	1146636	Argument	ja		1145270	2					
ANR	1146637	Identifier	ja		1145270	0					
ANR	1146638	Argument	epocseconds + i * 60		1145270	3					
ANR	1146639	AdditiveExpression	epocseconds + i * 60		1145270	0		+			
ANR	1146640	Identifier	epocseconds		1145270	0					
ANR	1146641	MultiplicativeExpression	i * 60		1145270	1		*			
ANR	1146642	Identifier	i		1145270	0					
ANR	1146643	PrimaryExpression	60		1145270	1					
ANR	1146644	Argument	dailychart_A [ i ]		1145270	4					
ANR	1146645	ArrayIndexing	dailychart_A [ i ]		1145270	0					
ANR	1146646	Identifier	dailychart_A		1145270	0					
ANR	1146647	Identifier	i		1145270	1					
ANR	1146648	Argument	concurrency_A [ i ]		1145270	5					
ANR	1146649	ArrayIndexing	concurrency_A [ i ]		1145270	0					
ANR	1146650	Identifier	concurrency_A		1145270	0					
ANR	1146651	Identifier	i		1145270	1					
ANR	1146652	ExpressionStatement	ja ++	384:1:10459:10463	1145270	1	True				
ANR	1146653	PostIncDecOperationExpression	ja ++		1145270	0					
ANR	1146654	Identifier	ja		1145270	0					
ANR	1146655	IncDec	++		1145270	1					
ANR	1146656	IfStatement	if ( dailychart_C [ i ] > 0 )		1145270	1					
ANR	1146657	Condition	dailychart_C [ i ] > 0	387:10:10491:10509	1145270	0	True				
ANR	1146658	RelationalExpression	dailychart_C [ i ] > 0		1145270	0		>			
ANR	1146659	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1146660	Identifier	dailychart_C		1145270	0					
ANR	1146661	Identifier	i		1145270	1					
ANR	1146662	PrimaryExpression	0		1145270	1					
ANR	1146663	CompoundStatement		291:30:7960:7960	1145270	1					
ANR	1146664	ExpressionStatement	"fprintf ( foutC , ""%ld %ld %f %d\\n"" , jc , epocseconds + i * 60 , dailychart_C [ i ] , concurrency_C [ i ] )"	388:1:10514:10608	1145270	0	True				
ANR	1146665	CallExpression	"fprintf ( foutC , ""%ld %ld %f %d\\n"" , jc , epocseconds + i * 60 , dailychart_C [ i ] , concurrency_C [ i ] )"		1145270	0					
ANR	1146666	Callee	fprintf		1145270	0					
ANR	1146667	Identifier	fprintf		1145270	0					
ANR	1146668	ArgumentList	foutC		1145270	1					
ANR	1146669	Argument	foutC		1145270	0					
ANR	1146670	Identifier	foutC		1145270	0					
ANR	1146671	Argument	"""%ld %ld %f %d\\n"""		1145270	1					
ANR	1146672	PrimaryExpression	"""%ld %ld %f %d\\n"""		1145270	0					
ANR	1146673	Argument	jc		1145270	2					
ANR	1146674	Identifier	jc		1145270	0					
ANR	1146675	Argument	epocseconds + i * 60		1145270	3					
ANR	1146676	AdditiveExpression	epocseconds + i * 60		1145270	0		+			
ANR	1146677	Identifier	epocseconds		1145270	0					
ANR	1146678	MultiplicativeExpression	i * 60		1145270	1		*			
ANR	1146679	Identifier	i		1145270	0					
ANR	1146680	PrimaryExpression	60		1145270	1					
ANR	1146681	Argument	dailychart_C [ i ]		1145270	4					
ANR	1146682	ArrayIndexing	dailychart_C [ i ]		1145270	0					
ANR	1146683	Identifier	dailychart_C		1145270	0					
ANR	1146684	Identifier	i		1145270	1					
ANR	1146685	Argument	concurrency_C [ i ]		1145270	5					
ANR	1146686	ArrayIndexing	concurrency_C [ i ]		1145270	0					
ANR	1146687	Identifier	concurrency_C		1145270	0					
ANR	1146688	Identifier	i		1145270	1					
ANR	1146689	ExpressionStatement	jc ++	390:1:10611:10615	1145270	1	True				
ANR	1146690	PostIncDecOperationExpression	jc ++		1145270	0					
ANR	1146691	Identifier	jc		1145270	0					
ANR	1146692	IncDec	++		1145270	1					
ANR	1146693	ElseStatement	else		1145270	0					
ANR	1146694	CompoundStatement		297:8:8089:8089	1145270	0					
ANR	1146695	IfStatement	if ( dailychart [ i ] > 0 )		1145270	0					
ANR	1146696	Condition	dailychart [ i ] > 0	394:10:10671:10687	1145270	0	True				
ANR	1146697	RelationalExpression	dailychart [ i ] > 0		1145270	0		>			
ANR	1146698	ArrayIndexing	dailychart [ i ]		1145270	0					
ANR	1146699	Identifier	dailychart		1145270	0					
ANR	1146700	Identifier	i		1145270	1					
ANR	1146701	PrimaryExpression	0		1145270	1					
ANR	1146702	CompoundStatement		298:28:8138:8138	1145270	1					
ANR	1146703	ExpressionStatement	"fprintf ( fout , ""%ld %ld %f %d\\n"" , j , epocseconds + i * 60 , dailychart [ i ] , concurrency [ i ] )"	395:1:10692:10780	1145270	0	True				
ANR	1146704	CallExpression	"fprintf ( fout , ""%ld %ld %f %d\\n"" , j , epocseconds + i * 60 , dailychart [ i ] , concurrency [ i ] )"		1145270	0					
ANR	1146705	Callee	fprintf		1145270	0					
ANR	1146706	Identifier	fprintf		1145270	0					
ANR	1146707	ArgumentList	fout		1145270	1					
ANR	1146708	Argument	fout		1145270	0					
ANR	1146709	Identifier	fout		1145270	0					
ANR	1146710	Argument	"""%ld %ld %f %d\\n"""		1145270	1					
ANR	1146711	PrimaryExpression	"""%ld %ld %f %d\\n"""		1145270	0					
ANR	1146712	Argument	j		1145270	2					
ANR	1146713	Identifier	j		1145270	0					
ANR	1146714	Argument	epocseconds + i * 60		1145270	3					
ANR	1146715	AdditiveExpression	epocseconds + i * 60		1145270	0		+			
ANR	1146716	Identifier	epocseconds		1145270	0					
ANR	1146717	MultiplicativeExpression	i * 60		1145270	1		*			
ANR	1146718	Identifier	i		1145270	0					
ANR	1146719	PrimaryExpression	60		1145270	1					
ANR	1146720	Argument	dailychart [ i ]		1145270	4					
ANR	1146721	ArrayIndexing	dailychart [ i ]		1145270	0					
ANR	1146722	Identifier	dailychart		1145270	0					
ANR	1146723	Identifier	i		1145270	1					
ANR	1146724	Argument	concurrency [ i ]		1145270	5					
ANR	1146725	ArrayIndexing	concurrency [ i ]		1145270	0					
ANR	1146726	Identifier	concurrency		1145270	0					
ANR	1146727	Identifier	i		1145270	1					
ANR	1146728	ExpressionStatement	j ++	397:1:10783:10786	1145270	1	True				
ANR	1146729	PostIncDecOperationExpression	j ++		1145270	0					
ANR	1146730	Identifier	j		1145270	0					
ANR	1146731	IncDec	++		1145270	1					
ANR	1146732	ExpressionStatement	"printf ( ""==========================\\n"" )"	404:2:10831:10869	1145270	37	True				
ANR	1146733	CallExpression	"printf ( ""==========================\\n"" )"		1145270	0					
ANR	1146734	Callee	printf		1145270	0					
ANR	1146735	Identifier	printf		1145270	0					
ANR	1146736	ArgumentList	"""==========================\\n"""		1145270	1					
ANR	1146737	Argument	"""==========================\\n"""		1145270	0					
ANR	1146738	PrimaryExpression	"""==========================\\n"""		1145270	0					
ANR	1146739	ExpressionStatement	"printf ( ""# of jobs succeeded  : %d\\n"" , jobs_succeeded )"	405:2:10873:10926	1145270	38	True				
ANR	1146740	CallExpression	"printf ( ""# of jobs succeeded  : %d\\n"" , jobs_succeeded )"		1145270	0					
ANR	1146741	Callee	printf		1145270	0					
ANR	1146742	Identifier	printf		1145270	0					
ANR	1146743	ArgumentList	"""# of jobs succeeded  : %d\\n"""		1145270	1					
ANR	1146744	Argument	"""# of jobs succeeded  : %d\\n"""		1145270	0					
ANR	1146745	PrimaryExpression	"""# of jobs succeeded  : %d\\n"""		1145270	0					
ANR	1146746	Argument	jobs_succeeded		1145270	1					
ANR	1146747	Identifier	jobs_succeeded		1145270	0					
ANR	1146748	ExpressionStatement	"printf ( ""# of jobs failed     : %d\\n"" , jobs_failed )"	406:2:10930:10980	1145270	39	True				
ANR	1146749	CallExpression	"printf ( ""# of jobs failed     : %d\\n"" , jobs_failed )"		1145270	0					
ANR	1146750	Callee	printf		1145270	0					
ANR	1146751	Identifier	printf		1145270	0					
ANR	1146752	ArgumentList	"""# of jobs failed     : %d\\n"""		1145270	1					
ANR	1146753	Argument	"""# of jobs failed     : %d\\n"""		1145270	0					
ANR	1146754	PrimaryExpression	"""# of jobs failed     : %d\\n"""		1145270	0					
ANR	1146755	Argument	jobs_failed		1145270	1					
ANR	1146756	Identifier	jobs_failed		1145270	0					
ANR	1146757	ExpressionStatement	"printf ( ""# of jobs unfinished : %d\\n"" , jobs_unfinished )"	407:2:10984:11038	1145270	40	True				
ANR	1146758	CallExpression	"printf ( ""# of jobs unfinished : %d\\n"" , jobs_unfinished )"		1145270	0					
ANR	1146759	Callee	printf		1145270	0					
ANR	1146760	Identifier	printf		1145270	0					
ANR	1146761	ArgumentList	"""# of jobs unfinished : %d\\n"""		1145270	1					
ANR	1146762	Argument	"""# of jobs unfinished : %d\\n"""		1145270	0					
ANR	1146763	PrimaryExpression	"""# of jobs unfinished : %d\\n"""		1145270	0					
ANR	1146764	Argument	jobs_unfinished		1145270	1					
ANR	1146765	Identifier	jobs_unfinished		1145270	0					
ANR	1146766	ExpressionStatement	"printf ( ""==========================\\n"" )"	408:2:11042:11080	1145270	41	True				
ANR	1146767	CallExpression	"printf ( ""==========================\\n"" )"		1145270	0					
ANR	1146768	Callee	printf		1145270	0					
ANR	1146769	Identifier	printf		1145270	0					
ANR	1146770	ArgumentList	"""==========================\\n"""		1145270	1					
ANR	1146771	Argument	"""==========================\\n"""		1145270	0					
ANR	1146772	PrimaryExpression	"""==========================\\n"""		1145270	0					
ANR	1146773	ReturnType	int		1145270	1					
ANR	1146774	Identifier	main		1145270	2					
ANR	1146775	ParameterList	"int argc , char * argv [ ]"		1145270	3					
ANR	1146776	Parameter	int argc	96:9:2526:2533	1145270	0	True				
ANR	1146777	ParameterType	int		1145270	0					
ANR	1146778	Identifier	argc		1145270	1					
ANR	1146779	Parameter	char * argv [ ]	96:19:2536:2547	1145270	1	True				
ANR	1146780	ParameterType	char * [ ]		1145270	0					
ANR	1146781	Identifier	argv		1145270	1					
ANR	1146782	CFGEntryNode	ENTRY		1145270		True				
ANR	1146783	CFGExitNode	EXIT		1145270		True				
ANR	1146784	Symbol	xmlp		1145270						
ANR	1146785	Symbol	cluster		1145270						
ANR	1146786	Symbol	year		1145270						
ANR	1146787	Symbol	Node		1145270						
ANR	1146788	Symbol	terminatednormally_true		1145270						
ANR	1146789	Symbol	mytype2		1145270						
ANR	1146790	Symbol	logtype		1145270						
ANR	1146791	Symbol	fout		1145270						
ANR	1146792	Symbol	& day2		1145270						
ANR	1146793	Symbol	& Node		1145270						
ANR	1146794	Symbol	cluster2		1145270						
ANR	1146795	Symbol	daystr		1145270						
ANR	1146796	Symbol	hour2		1145270						
ANR	1146797	Symbol	& year		1145270						
ANR	1146798	Symbol	lognotes		1145270						
ANR	1146799	Symbol	* concurrency		1145270						
ANR	1146800	Symbol	monthstr2		1145270						
ANR	1146801	Symbol	ja		1145270						
ANR	1146802	Symbol	day2		1145270						
ANR	1146803	Symbol	mytype		1145270						
ANR	1146804	Symbol	jc		1145270						
ANR	1146805	Symbol	job_completed		1145270						
ANR	1146806	Symbol	mystr		1145270						
ANR	1146807	Symbol	jobs_unfinished		1145270						
ANR	1146808	Symbol	DAP_ERROR		1145270						
ANR	1146809	Symbol	dateinminutes		1145270						
ANR	1146810	Symbol	monthstr		1145270						
ANR	1146811	Symbol	year2		1145270						
ANR	1146812	Symbol	O_RDWR		1145270						
ANR	1146813	Symbol	& hour		1145270						
ANR	1146814	Symbol	second2		1145270						
ANR	1146815	Symbol	* dailychart_C		1145270						
ANR	1146816	Symbol	* dailychart_A		1145270						
ANR	1146817	Symbol	CONDOR		1145270						
ANR	1146818	Symbol	timeinseconds		1145270						
ANR	1146819	Symbol	dailychart		1145270						
ANR	1146820	Symbol	atoi		1145270						
ANR	1146821	Symbol	dailychart_A		1145270						
ANR	1146822	Symbol	malloc		1145270						
ANR	1146823	Symbol	& minute		1145270						
ANR	1146824	Symbol	terminatednormally		1145270						
ANR	1146825	Symbol	& minute2		1145270						
ANR	1146826	Symbol	eventtime2		1145270						
ANR	1146827	Symbol	eventtime1		1145270						
ANR	1146828	Symbol	& month2		1145270						
ANR	1146829	Symbol	epocseconds		1145270						
ANR	1146830	Symbol	i		1145270						
ANR	1146831	Symbol	j		1145270						
ANR	1146832	Symbol	dailychart_C		1145270						
ANR	1146833	Symbol	concurrency		1145270						
ANR	1146834	Symbol	unparser		1145270						
ANR	1146835	Symbol	open		1145270						
ANR	1146836	Symbol	getmonth		1145270						
ANR	1146837	Symbol	& second		1145270						
ANR	1146838	Symbol	& day		1145270						
ANR	1146839	Symbol	fname_A		1145270						
ANR	1146840	Symbol	* argv		1145270						
ANR	1146841	Symbol	xmlp . ParseClassAd		1145270						
ANR	1146842	Symbol	fname_C		1145270						
ANR	1146843	Symbol	second		1145270						
ANR	1146844	Symbol	concurrency_C		1145270						
ANR	1146845	Symbol	concurrency_A		1145270						
ANR	1146846	Symbol	day		1145270						
ANR	1146847	Symbol	* concurrency_C		1145270						
ANR	1146848	Symbol	* concurrency_A		1145270						
ANR	1146849	Symbol	strcmp		1145270						
ANR	1146850	Symbol	NULL		1145270						
ANR	1146851	Symbol	jobs_failed		1145270						
ANR	1146852	Symbol	month		1145270						
ANR	1146853	Symbol	dateinminutes2		1145270						
ANR	1146854	Symbol	jobcompletedevent_true		1145270						
ANR	1146855	Symbol	true		1145270						
ANR	1146856	Symbol	jobs_succeeded		1145270						
ANR	1146857	Symbol	& year2		1145270						
ANR	1146858	Symbol	fd		1145270						
ANR	1146859	Symbol	foutA		1145270						
ANR	1146860	Symbol	foutC		1145270						
ANR	1146861	Symbol	fp		1145270						
ANR	1146862	Symbol	fdopen		1145270						
ANR	1146863	Symbol	terminatednormally2		1145270						
ANR	1146864	Symbol	lastpos		1145270						
ANR	1146865	Symbol	argv		1145270						
ANR	1146866	Symbol	job_count		1145270						
ANR	1146867	Symbol	hour		1145270						
ANR	1146868	Symbol	firstday		1145270						
ANR	1146869	Symbol	newAd		1145270						
ANR	1146870	Symbol	argc		1145270						
ANR	1146871	Symbol	& hour2		1145270						
ANR	1146872	Symbol	month2		1145270						
ANR	1146873	Symbol	returnvalue		1145270						
ANR	1146874	Symbol	minute2		1145270						
ANR	1146875	Symbol	false		1145270						
ANR	1146876	Symbol	daystr2		1145270						
ANR	1146877	Symbol	returnvalue2		1145270						
ANR	1146878	Symbol	* dailychart		1145270						
ANR	1146879	Symbol	minute		1145270						
ANR	1146880	Symbol	* i		1145270						
ANR	1146881	Symbol	feof		1145270						
ANR	1146882	Symbol	& month		1145270						
ANR	1146883	Symbol	& second2		1145270						
