command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1259257	File	data/converged/CVE-2011-4930_htcondor/directory.cpp								
ANR	1259258	DeclStmt									
ANR	1259259	Decl							priv_state	priv_state	saved_priv
ANR	1259260	Function	DeleteFileLater :: DeleteFileLater	53:0:1803:1900							
ANR	1259261	FunctionDef	DeleteFileLater :: DeleteFileLater (const char * _name)		1259260	0					
ANR	1259262	CompoundStatement		54:0:1857:1900	1259260	0					
ANR	1259263	ExpressionStatement	filename = _name ? strdup ( _name ) : NULL	55:4:1863:1898	1259260	0	True				
ANR	1259264	AssignmentExpression	filename = _name ? strdup ( _name ) : NULL		1259260	0		=			
ANR	1259265	Identifier	filename		1259260	0					
ANR	1259266	ConditionalExpression	_name ? strdup ( _name ) : NULL		1259260	1					
ANR	1259267	Condition	_name		1259260	0					
ANR	1259268	Identifier	_name		1259260	0					
ANR	1259269	CallExpression	strdup ( _name )		1259260	1					
ANR	1259270	Callee	strdup		1259260	0					
ANR	1259271	Identifier	strdup		1259260	0					
ANR	1259272	ArgumentList	_name		1259260	1					
ANR	1259273	Argument	_name		1259260	0					
ANR	1259274	Identifier	_name		1259260	0					
ANR	1259275	Identifier	NULL		1259260	2					
ANR	1259276	Identifier	DeleteFileLater :: DeleteFileLater		1259260	1					
ANR	1259277	ParameterList	const char * _name		1259260	2					
ANR	1259278	Parameter	const char * _name	53:34:1837:1854	1259260	0	True				
ANR	1259279	ParameterType	const char *		1259260	0					
ANR	1259280	Identifier	_name		1259260	1					
ANR	1259281	CFGEntryNode	ENTRY		1259260		True				
ANR	1259282	CFGExitNode	EXIT		1259260		True				
ANR	1259283	Symbol	filename		1259260						
ANR	1259284	Symbol	NULL		1259260						
ANR	1259285	Symbol	_name		1259260						
ANR	1259286	Symbol	strdup		1259260						
ANR	1259287	Function	DeleteFileLater :: ~DeleteFileLater	58:0:1903:2153							
ANR	1259288	FunctionDef	DeleteFileLater :: ~DeleteFileLater ()		1259287	0					
ANR	1259289	CompoundStatement		59:0:1940:2153	1259287	0					
ANR	1259290	IfStatement	if ( filename )		1259287	0					
ANR	1259291	Condition	filename	60:5:1947:1954	1259287	0	True				
ANR	1259292	Identifier	filename		1259287	0					
ANR	1259293	CompoundStatement		2:15:16:16	1259287	1					
ANR	1259294	IfStatement	if ( unlink ( filename ) )		1259287	0					
ANR	1259295	Condition	unlink ( filename )	61:12:1971:1986	1259287	0	True				
ANR	1259296	CallExpression	unlink ( filename )		1259287	0					
ANR	1259297	Callee	unlink		1259287	0					
ANR	1259298	Identifier	unlink		1259287	0					
ANR	1259299	ArgumentList	filename		1259287	1					
ANR	1259300	Argument	filename		1259287	0					
ANR	1259301	Identifier	filename		1259287	0					
ANR	1259302	CompoundStatement		3:30:48:48	1259287	1					
ANR	1259303	ExpressionStatement	"dprintf ( D_ALWAYS , ""DeleteFileLater of %s failed err=%d"" , filename , errno )"	62:12:2046:2119	1259287	0	True				
ANR	1259304	CallExpression	"dprintf ( D_ALWAYS , ""DeleteFileLater of %s failed err=%d"" , filename , errno )"		1259287	0					
ANR	1259305	Callee	dprintf		1259287	0					
ANR	1259306	Identifier	dprintf		1259287	0					
ANR	1259307	ArgumentList	D_ALWAYS		1259287	1					
ANR	1259308	Argument	D_ALWAYS		1259287	0					
ANR	1259309	Identifier	D_ALWAYS		1259287	0					
ANR	1259310	Argument	"""DeleteFileLater of %s failed err=%d"""		1259287	1					
ANR	1259311	PrimaryExpression	"""DeleteFileLater of %s failed err=%d"""		1259287	0					
ANR	1259312	Argument	filename		1259287	2					
ANR	1259313	Identifier	filename		1259287	0					
ANR	1259314	Argument	errno		1259287	3					
ANR	1259315	Identifier	errno		1259287	0					
ANR	1259316	ExpressionStatement	free ( filename )	64:2:2133:2148	1259287	1	True				
ANR	1259317	CallExpression	free ( filename )		1259287	0					
ANR	1259318	Callee	free		1259287	0					
ANR	1259319	Identifier	free		1259287	0					
ANR	1259320	ArgumentList	filename		1259287	1					
ANR	1259321	Argument	filename		1259287	0					
ANR	1259322	Identifier	filename		1259287	0					
ANR	1259323	Identifier	DeleteFileLater :: ~DeleteFileLater		1259287	1					
ANR	1259324	ParameterList			1259287	2					
ANR	1259325	CFGEntryNode	ENTRY		1259287		True				
ANR	1259326	CFGExitNode	EXIT		1259287		True				
ANR	1259327	Symbol	errno		1259287						
ANR	1259328	Symbol	filename		1259287						
ANR	1259329	Symbol	unlink		1259287						
ANR	1259330	Symbol	D_ALWAYS		1259287						
ANR	1259331	DeclStmt									
ANR	1259332	Decl							bool	"bool ( const char * path , uid_t * owner , gid_t * group , si_error_t & err )"	GetIds
ANR	1259333	DeclStmt									
ANR	1259334	Decl							bool	"bool ( const char * path , perm * po )"	recursive_chown_win32
ANR	1259335	Function	Directory :: Directory	77:0:2349:2683							
ANR	1259336	FunctionDef	"Directory :: Directory (const char * name , priv_state priv)"		1259335	0					
ANR	1259337	CompoundStatement		78:0:2408:2683	1259335	0					
ANR	1259338	ExpressionStatement	initialize ( priv )	79:1:2411:2429	1259335	0	True				
ANR	1259339	CallExpression	initialize ( priv )		1259335	0					
ANR	1259340	Callee	initialize		1259335	0					
ANR	1259341	Identifier	initialize		1259335	0					
ANR	1259342	ArgumentList	priv		1259335	1					
ANR	1259343	Argument	priv		1259335	0					
ANR	1259344	Identifier	priv		1259335	0					
ANR	1259345	ExpressionStatement	curr_dir = strnewp ( name )	81:1:2433:2457	1259335	1	True				
ANR	1259346	AssignmentExpression	curr_dir = strnewp ( name )		1259335	0		=			
ANR	1259347	Identifier	curr_dir		1259335	0					
ANR	1259348	CallExpression	strnewp ( name )		1259335	1					
ANR	1259349	Callee	strnewp		1259335	0					
ANR	1259350	Identifier	strnewp		1259335	0					
ANR	1259351	ArgumentList	name		1259335	1					
ANR	1259352	Argument	name		1259335	0					
ANR	1259353	Identifier	name		1259335	0					
ANR	1259354	ExpressionStatement	ASSERT ( curr_dir )	82:1:2460:2476	1259335	2	True				
ANR	1259355	CallExpression	ASSERT ( curr_dir )		1259335	0					
ANR	1259356	Callee	ASSERT		1259335	0					
ANR	1259357	Identifier	ASSERT		1259335	0					
ANR	1259358	ArgumentList	curr_dir		1259335	1					
ANR	1259359	Argument	curr_dir		1259335	0					
ANR	1259360	Identifier	curr_dir		1259335	0					
ANR	1259361	ExpressionStatement	owner_ids_inited = false	85:1:2494:2518	1259335	3	True				
ANR	1259362	AssignmentExpression	owner_ids_inited = false		1259335	0		=			
ANR	1259363	Identifier	owner_ids_inited		1259335	0					
ANR	1259364	Identifier	false		1259335	1					
ANR	1259365	ExpressionStatement	owner_uid = owner_gid = - 1	86:1:2521:2547	1259335	4	True				
ANR	1259366	AssignmentExpression	owner_uid = owner_gid = - 1		1259335	0		=			
ANR	1259367	Identifier	owner_uid		1259335	0					
ANR	1259368	AssignmentExpression	owner_gid = - 1		1259335	1		=			
ANR	1259369	Identifier	owner_gid		1259335	0					
ANR	1259370	UnaryOperationExpression	- 1		1259335	1					
ANR	1259371	UnaryOperator	-		1259335	0					
ANR	1259372	PrimaryExpression	1		1259335	1					
ANR	1259373	IfStatement	if ( priv == PRIV_FILE_OWNER )		1259335	5					
ANR	1259374	Condition	priv == PRIV_FILE_OWNER	87:5:2554:2576	1259335	0	True				
ANR	1259375	EqualityExpression	priv == PRIV_FILE_OWNER		1259335	0		==			
ANR	1259376	Identifier	priv		1259335	0					
ANR	1259377	Identifier	PRIV_FILE_OWNER		1259335	1					
ANR	1259378	CompoundStatement		10:31:171:171	1259335	1					
ANR	1259379	Statement	EXCEPT	88:2:2584:2589	1259335	0	True				
ANR	1259380	Statement	(	88:8:2590:2590	1259335	1	True				
ANR	1259381	Statement	"""Internal error: """	88:10:2592:2609	1259335	2	True				
ANR	1259382	Statement	"""Directory instantiated with PRIV_FILE_OWNER"""	89:13:2624:2668	1259335	3	True				
ANR	1259383	Statement	)	89:59:2670:2670	1259335	4	True				
ANR	1259384	ExpressionStatement		89:60:2671:2671	1259335	5	True				
ANR	1259385	Identifier	Directory :: Directory		1259335	1					
ANR	1259386	ParameterList	"const char * name , priv_state priv"		1259335	2					
ANR	1259387	Parameter	const char * name	77:22:2371:2386	1259335	0	True				
ANR	1259388	ParameterType	const char *		1259335	0					
ANR	1259389	Identifier	name		1259335	1					
ANR	1259390	Parameter	priv_state priv	77:40:2389:2403	1259335	1	True				
ANR	1259391	ParameterType	priv_state		1259335	0					
ANR	1259392	Identifier	priv		1259335	1					
ANR	1259393	CFGEntryNode	ENTRY		1259335		True				
ANR	1259394	CFGExitNode	EXIT		1259335		True				
ANR	1259395	Symbol	PRIV_FILE_OWNER		1259335						
ANR	1259396	Symbol	owner_gid		1259335						
ANR	1259397	Symbol	owner_ids_inited		1259335						
ANR	1259398	Symbol	owner_uid		1259335						
ANR	1259399	Symbol	name		1259335						
ANR	1259400	Symbol	false		1259335						
ANR	1259401	Symbol	strnewp		1259335						
ANR	1259402	Symbol	curr_dir		1259335						
ANR	1259403	Symbol	priv		1259335						
ANR	1259404	Function	Directory :: Directory	95:0:2687:3080							
ANR	1259405	FunctionDef	"Directory :: Directory (StatInfo * info , priv_state priv)"		1259404	0					
ANR	1259406	CompoundStatement		96:0:2744:3080	1259404	0					
ANR	1259407	ExpressionStatement	ASSERT ( info )	97:1:2747:2759	1259404	0	True				
ANR	1259408	CallExpression	ASSERT ( info )		1259404	0					
ANR	1259409	Callee	ASSERT		1259404	0					
ANR	1259410	Identifier	ASSERT		1259404	0					
ANR	1259411	ArgumentList	info		1259404	1					
ANR	1259412	Argument	info		1259404	0					
ANR	1259413	Identifier	info		1259404	0					
ANR	1259414	ExpressionStatement	initialize ( priv )	98:1:2762:2780	1259404	1	True				
ANR	1259415	CallExpression	initialize ( priv )		1259404	0					
ANR	1259416	Callee	initialize		1259404	0					
ANR	1259417	Identifier	initialize		1259404	0					
ANR	1259418	ArgumentList	priv		1259404	1					
ANR	1259419	Argument	priv		1259404	0					
ANR	1259420	Identifier	priv		1259404	0					
ANR	1259421	ExpressionStatement	curr_dir = strnewp ( info -> FullPath ( ) )	100:1:2784:2822	1259404	2	True				
ANR	1259422	AssignmentExpression	curr_dir = strnewp ( info -> FullPath ( ) )		1259404	0		=			
ANR	1259423	Identifier	curr_dir		1259404	0					
ANR	1259424	CallExpression	strnewp ( info -> FullPath ( ) )		1259404	1					
ANR	1259425	Callee	strnewp		1259404	0					
ANR	1259426	Identifier	strnewp		1259404	0					
ANR	1259427	ArgumentList	info -> FullPath ( )		1259404	1					
ANR	1259428	Argument	info -> FullPath ( )		1259404	0					
ANR	1259429	CallExpression	info -> FullPath ( )		1259404	0					
ANR	1259430	Callee	info -> FullPath		1259404	0					
ANR	1259431	PtrMemberAccess	info -> FullPath		1259404	0					
ANR	1259432	Identifier	info		1259404	0					
ANR	1259433	Identifier	FullPath		1259404	1					
ANR	1259434	ArgumentList			1259404	1					
ANR	1259435	ExpressionStatement	ASSERT ( curr_dir )	101:1:2825:2841	1259404	3	True				
ANR	1259436	CallExpression	ASSERT ( curr_dir )		1259404	0					
ANR	1259437	Callee	ASSERT		1259404	0					
ANR	1259438	Identifier	ASSERT		1259404	0					
ANR	1259439	ArgumentList	curr_dir		1259404	1					
ANR	1259440	Argument	curr_dir		1259404	0					
ANR	1259441	Identifier	curr_dir		1259404	0					
ANR	1259442	ExpressionStatement	owner_uid = info -> GetOwner ( )	104:1:2859:2887	1259404	4	True				
ANR	1259443	AssignmentExpression	owner_uid = info -> GetOwner ( )		1259404	0		=			
ANR	1259444	Identifier	owner_uid		1259404	0					
ANR	1259445	CallExpression	info -> GetOwner ( )		1259404	1					
ANR	1259446	Callee	info -> GetOwner		1259404	0					
ANR	1259447	PtrMemberAccess	info -> GetOwner		1259404	0					
ANR	1259448	Identifier	info		1259404	0					
ANR	1259449	Identifier	GetOwner		1259404	1					
ANR	1259450	ArgumentList			1259404	1					
ANR	1259451	ExpressionStatement	owner_gid = info -> GetGroup ( )	105:1:2890:2918	1259404	5	True				
ANR	1259452	AssignmentExpression	owner_gid = info -> GetGroup ( )		1259404	0		=			
ANR	1259453	Identifier	owner_gid		1259404	0					
ANR	1259454	CallExpression	info -> GetGroup ( )		1259404	1					
ANR	1259455	Callee	info -> GetGroup		1259404	0					
ANR	1259456	PtrMemberAccess	info -> GetGroup		1259404	0					
ANR	1259457	Identifier	info		1259404	0					
ANR	1259458	Identifier	GetGroup		1259404	1					
ANR	1259459	ArgumentList			1259404	1					
ANR	1259460	ExpressionStatement	owner_ids_inited = true	106:1:2921:2944	1259404	6	True				
ANR	1259461	AssignmentExpression	owner_ids_inited = true		1259404	0		=			
ANR	1259462	Identifier	owner_ids_inited		1259404	0					
ANR	1259463	Identifier	true		1259404	1					
ANR	1259464	IfStatement	if ( priv == PRIV_FILE_OWNER )		1259404	7					
ANR	1259465	Condition	priv == PRIV_FILE_OWNER	107:5:2951:2973	1259404	0	True				
ANR	1259466	EqualityExpression	priv == PRIV_FILE_OWNER		1259404	0		==			
ANR	1259467	Identifier	priv		1259404	0					
ANR	1259468	Identifier	PRIV_FILE_OWNER		1259404	1					
ANR	1259469	CompoundStatement		12:31:232:232	1259404	1					
ANR	1259470	Statement	EXCEPT	108:2:2981:2986	1259404	0	True				
ANR	1259471	Statement	(	108:8:2987:2987	1259404	1	True				
ANR	1259472	Statement	"""Internal error: """	108:10:2989:3006	1259404	2	True				
ANR	1259473	Statement	"""Directory instantiated with PRIV_FILE_OWNER"""	109:13:3021:3065	1259404	3	True				
ANR	1259474	Statement	)	109:59:3067:3067	1259404	4	True				
ANR	1259475	ExpressionStatement		109:60:3068:3068	1259404	5	True				
ANR	1259476	Identifier	Directory :: Directory		1259404	1					
ANR	1259477	ParameterList	"StatInfo * info , priv_state priv"		1259404	2					
ANR	1259478	Parameter	StatInfo * info	95:22:2709:2722	1259404	0	True				
ANR	1259479	ParameterType	StatInfo *		1259404	0					
ANR	1259480	Identifier	info		1259404	1					
ANR	1259481	Parameter	priv_state priv	95:38:2725:2739	1259404	1	True				
ANR	1259482	ParameterType	priv_state		1259404	0					
ANR	1259483	Identifier	priv		1259404	1					
ANR	1259484	CFGEntryNode	ENTRY		1259404		True				
ANR	1259485	CFGExitNode	EXIT		1259404		True				
ANR	1259486	Symbol	PRIV_FILE_OWNER		1259404						
ANR	1259487	Symbol	owner_gid		1259404						
ANR	1259488	Symbol	info -> GetGroup		1259404						
ANR	1259489	Symbol	info -> FullPath		1259404						
ANR	1259490	Symbol	curr_dir		1259404						
ANR	1259491	Symbol	info -> GetOwner		1259404						
ANR	1259492	Symbol	owner_uid		1259404						
ANR	1259493	Symbol	owner_ids_inited		1259404						
ANR	1259494	Symbol	true		1259404						
ANR	1259495	Symbol	strnewp		1259404						
ANR	1259496	Symbol	priv		1259404						
ANR	1259497	Symbol	* info		1259404						
ANR	1259498	Symbol	info		1259404						
ANR	1259499	Function	Directory :: initialize	115:0:3084:3552							
ANR	1259500	FunctionDef	Directory :: initialize (priv_state priv)		1259499	0					
ANR	1259501	CompoundStatement		117:0:3130:3552	1259499	0					
ANR	1259502	ExpressionStatement	curr = NULL	118:1:3133:3144	1259499	0	True				
ANR	1259503	AssignmentExpression	curr = NULL		1259499	0		=			
ANR	1259504	Identifier	curr		1259499	0					
ANR	1259505	Identifier	NULL		1259499	1					
ANR	1259506	ExpressionStatement	dirp = - 1	121:1:3161:3170	1259499	1	True				
ANR	1259507	AssignmentExpression	dirp = - 1		1259499	0		=			
ANR	1259508	Identifier	dirp		1259499	0					
ANR	1259509	UnaryOperationExpression	- 1		1259499	1					
ANR	1259510	UnaryOperator	-		1259499	0					
ANR	1259511	PrimaryExpression	1		1259499	1					
ANR	1259512	IfStatement	if ( can_switch_ids ( ) )		1259499	2					
ANR	1259513	Condition	can_switch_ids ( )	126:5:3206:3221	1259499	0	True				
ANR	1259514	CallExpression	can_switch_ids ( )		1259499	0					
ANR	1259515	Callee	can_switch_ids		1259499	0					
ANR	1259516	Identifier	can_switch_ids		1259499	0					
ANR	1259517	ArgumentList			1259499	1					
ANR	1259518	CompoundStatement		10:24:94:94	1259499	1					
ANR	1259519	ExpressionStatement	desired_priv_state = priv	127:2:3229:3254	1259499	0	True				
ANR	1259520	AssignmentExpression	desired_priv_state = priv		1259499	0		=			
ANR	1259521	Identifier	desired_priv_state		1259499	0					
ANR	1259522	Identifier	priv		1259499	1					
ANR	1259523	IfStatement	if ( priv == PRIV_UNKNOWN )		1259499	1					
ANR	1259524	Condition	priv == PRIV_UNKNOWN	128:6:3262:3281	1259499	0	True				
ANR	1259525	EqualityExpression	priv == PRIV_UNKNOWN		1259499	0		==			
ANR	1259526	Identifier	priv		1259499	0					
ANR	1259527	Identifier	PRIV_UNKNOWN		1259499	1					
ANR	1259528	CompoundStatement		12:29:154:154	1259499	1					
ANR	1259529	ExpressionStatement	want_priv_change = false	129:3:3290:3314	1259499	0	True				
ANR	1259530	AssignmentExpression	want_priv_change = false		1259499	0		=			
ANR	1259531	Identifier	want_priv_change		1259499	0					
ANR	1259532	Identifier	false		1259499	1					
ANR	1259533	ElseStatement	else		1259499	0					
ANR	1259534	CompoundStatement		14:9:194:194	1259499	0					
ANR	1259535	ExpressionStatement	want_priv_change = true	131:3:3330:3353	1259499	0	True				
ANR	1259536	AssignmentExpression	want_priv_change = true		1259499	0		=			
ANR	1259537	Identifier	want_priv_change		1259499	0					
ANR	1259538	Identifier	true		1259499	1					
ANR	1259539	ElseStatement	else		1259499	0					
ANR	1259540	CompoundStatement		17:8:236:236	1259499	0					
ANR	1259541	ExpressionStatement	desired_priv_state = PRIV_CONDOR	136:2:3487:3519	1259499	0	True				
ANR	1259542	AssignmentExpression	desired_priv_state = PRIV_CONDOR		1259499	0		=			
ANR	1259543	Identifier	desired_priv_state		1259499	0					
ANR	1259544	Identifier	PRIV_CONDOR		1259499	1					
ANR	1259545	ExpressionStatement	want_priv_change = false	137:2:3523:3547	1259499	1	True				
ANR	1259546	AssignmentExpression	want_priv_change = false		1259499	0		=			
ANR	1259547	Identifier	want_priv_change		1259499	0					
ANR	1259548	Identifier	false		1259499	1					
ANR	1259549	ReturnType	void		1259499	1					
ANR	1259550	Identifier	Directory :: initialize		1259499	2					
ANR	1259551	ParameterList	priv_state priv		1259499	3					
ANR	1259552	Parameter	priv_state priv	116:23:3112:3126	1259499	0	True				
ANR	1259553	ParameterType	priv_state		1259499	0					
ANR	1259554	Identifier	priv		1259499	1					
ANR	1259555	CFGEntryNode	ENTRY		1259499		True				
ANR	1259556	CFGExitNode	EXIT		1259499		True				
ANR	1259557	Symbol	NULL		1259499						
ANR	1259558	Symbol	can_switch_ids		1259499						
ANR	1259559	Symbol	false		1259499						
ANR	1259560	Symbol	true		1259499						
ANR	1259561	Symbol	priv		1259499						
ANR	1259562	Symbol	curr		1259499						
ANR	1259563	Symbol	dirp		1259499						
ANR	1259564	Symbol	PRIV_CONDOR		1259499						
ANR	1259565	Symbol	desired_priv_state		1259499						
ANR	1259566	Symbol	PRIV_UNKNOWN		1259499						
ANR	1259567	Symbol	want_priv_change		1259499						
ANR	1259568	Function	Directory :: ~Directory	142:0:3556:3781							
ANR	1259569	FunctionDef	Directory :: ~Directory ()		1259568	0					
ANR	1259570	CompoundStatement		143:0:3580:3781	1259568	0					
ANR	1259571	Statement	delete	144:1:3583:3588	1259568	0	True				
ANR	1259572	Statement	[	144:8:3590:3590	1259568	1	True				
ANR	1259573	Statement	]	144:9:3591:3591	1259568	2	True				
ANR	1259574	ExpressionStatement	curr_dir	144:11:3593:3601	1259568	3	True				
ANR	1259575	Identifier	curr_dir		1259568	0					
ANR	1259576	IfStatement	if ( curr )		1259568	4					
ANR	1259577	Condition	curr	145:5:3608:3611	1259568	0	True				
ANR	1259578	Identifier	curr		1259568	0					
ANR	1259579	CompoundStatement		3:12:34:34	1259568	1					
ANR	1259580	Statement	delete	146:2:3619:3624	1259568	0	True				
ANR	1259581	ExpressionStatement	curr	146:9:3626:3630	1259568	1	True				
ANR	1259582	Identifier	curr		1259568	0					
ANR	1259583	IfStatement	if ( dirp )		1259568	5					
ANR	1259584	Condition	dirp	151:5:3664:3667	1259568	0	True				
ANR	1259585	Identifier	dirp		1259568	0					
ANR	1259586	CompoundStatement		9:12:90:90	1259568	1					
ANR	1259587	ExpressionStatement	( void ) condor_closedir ( dirp )	152:2:3675:3704	1259568	0	True				
ANR	1259588	CastExpression	( void ) condor_closedir ( dirp )		1259568	0					
ANR	1259589	CastTarget	void		1259568	0					
ANR	1259590	CallExpression	condor_closedir ( dirp )		1259568	1					
ANR	1259591	Callee	condor_closedir		1259568	0					
ANR	1259592	Identifier	condor_closedir		1259568	0					
ANR	1259593	ArgumentList	dirp		1259568	1					
ANR	1259594	Argument	dirp		1259568	0					
ANR	1259595	Identifier	dirp		1259568	0					
ANR	1259596	Identifier	Directory :: ~Directory		1259568	1					
ANR	1259597	ParameterList			1259568	2					
ANR	1259598	CFGEntryNode	ENTRY		1259568		True				
ANR	1259599	CFGExitNode	EXIT		1259568		True				
ANR	1259600	Symbol	curr		1259568						
ANR	1259601	Symbol	dirp		1259568						
ANR	1259602	Function	Directory :: GetDirectorySize	162:0:3784:4216							
ANR	1259603	FunctionDef	Directory :: GetDirectorySize ()		1259602	0					
ANR	1259604	CompoundStatement		164:0:3825:4216	1259602	0					
ANR	1259605	IdentifierDeclStatement	const char * thefile = NULL ;	165:1:3828:3854	1259602	0	True				
ANR	1259606	IdentifierDecl	* thefile = NULL		1259602	0					
ANR	1259607	IdentifierDeclType	const char *		1259602	0					
ANR	1259608	Identifier	thefile		1259602	1					
ANR	1259609	AssignmentExpression	* thefile = NULL		1259602	2		=			
ANR	1259610	Identifier	NULL		1259602	0					
ANR	1259611	Identifier	NULL		1259602	1					
ANR	1259612	IdentifierDeclStatement	filesize_t dir_size = 0 ;	166:1:3857:3880	1259602	1	True				
ANR	1259613	IdentifierDecl	dir_size = 0		1259602	0					
ANR	1259614	IdentifierDeclType	filesize_t		1259602	0					
ANR	1259615	Identifier	dir_size		1259602	1					
ANR	1259616	AssignmentExpression	dir_size = 0		1259602	2		=			
ANR	1259617	Identifier	dir_size		1259602	0					
ANR	1259618	PrimaryExpression	0		1259602	1					
ANR	1259619	ExpressionStatement	Set_Access_Priv ( )	168:1:3884:3901	1259602	2	True				
ANR	1259620	CallExpression	Set_Access_Priv ( )		1259602	0					
ANR	1259621	Callee	Set_Access_Priv		1259602	0					
ANR	1259622	Identifier	Set_Access_Priv		1259602	0					
ANR	1259623	ArgumentList			1259602	1					
ANR	1259624	ExpressionStatement	Rewind ( )	170:1:3905:3913	1259602	3	True				
ANR	1259625	CallExpression	Rewind ( )		1259602	0					
ANR	1259626	Callee	Rewind		1259602	0					
ANR	1259627	Identifier	Rewind		1259602	0					
ANR	1259628	ArgumentList			1259602	1					
ANR	1259629	WhileStatement	while ( ( thefile = Next ( ) ) )		1259602	4					
ANR	1259630	Condition	thefile = Next ( )	172:9:3925:3940	1259602	0	True				
ANR	1259631	AssignmentExpression	thefile = Next ( )		1259602	0		=			
ANR	1259632	Identifier	thefile		1259602	0					
ANR	1259633	CallExpression	Next ( )		1259602	1					
ANR	1259634	Callee	Next		1259602	0					
ANR	1259635	Identifier	Next		1259602	0					
ANR	1259636	ArgumentList			1259602	1					
ANR	1259637	CompoundStatement		9:28:118:118	1259602	1					
ANR	1259638	IfStatement	if ( IsDirectory ( ) && ! IsSymlink ( ) )		1259602	0					
ANR	1259639	Condition	IsDirectory ( ) && ! IsSymlink ( )	173:7:3953:3981	1259602	0	True				
ANR	1259640	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		1259602	0		&&			
ANR	1259641	CallExpression	IsDirectory ( )		1259602	0					
ANR	1259642	Callee	IsDirectory		1259602	0					
ANR	1259643	Identifier	IsDirectory		1259602	0					
ANR	1259644	ArgumentList			1259602	1					
ANR	1259645	UnaryOperationExpression	! IsSymlink ( )		1259602	1					
ANR	1259646	UnaryOperator	!		1259602	0					
ANR	1259647	CallExpression	IsSymlink ( )		1259602	1					
ANR	1259648	Callee	IsSymlink		1259602	0					
ANR	1259649	Identifier	IsSymlink		1259602	0					
ANR	1259650	ArgumentList			1259602	1					
ANR	1259651	CompoundStatement		12:3:211:264	1259602	1					
ANR	1259652	IdentifierDeclStatement	"Directory subdir ( GetFullPath ( ) , desired_priv_state ) ;"	175:3:4037:4090	1259602	0	True				
ANR	1259653	IdentifierDecl	"subdir ( GetFullPath ( ) , desired_priv_state )"		1259602	0					
ANR	1259654	IdentifierDeclType	Directory		1259602	0					
ANR	1259655	Identifier	subdir		1259602	1					
ANR	1259656	Expression	"GetFullPath ( ) , desired_priv_state"		1259602	2					
ANR	1259657	CallExpression	GetFullPath ( )		1259602	0					
ANR	1259658	Callee	GetFullPath		1259602	0					
ANR	1259659	Identifier	GetFullPath		1259602	0					
ANR	1259660	ArgumentList			1259602	1					
ANR	1259661	Identifier	desired_priv_state		1259602	1					
ANR	1259662	ExpressionStatement	dir_size += subdir . GetDirectorySize ( )	176:3:4095:4132	1259602	1	True				
ANR	1259663	AssignmentExpression	dir_size += subdir . GetDirectorySize ( )		1259602	0		+=			
ANR	1259664	Identifier	dir_size		1259602	0					
ANR	1259665	CallExpression	subdir . GetDirectorySize ( )		1259602	1					
ANR	1259666	Callee	subdir . GetDirectorySize		1259602	0					
ANR	1259667	MemberAccess	subdir . GetDirectorySize		1259602	0					
ANR	1259668	Identifier	subdir		1259602	0					
ANR	1259669	Identifier	GetDirectorySize		1259602	1					
ANR	1259670	ArgumentList			1259602	1					
ANR	1259671	ElseStatement	else		1259602	0					
ANR	1259672	CompoundStatement		14:9:317:317	1259602	0					
ANR	1259673	ExpressionStatement	dir_size += GetFileSize ( )	178:3:4148:4173	1259602	0	True				
ANR	1259674	AssignmentExpression	dir_size += GetFileSize ( )		1259602	0		+=			
ANR	1259675	Identifier	dir_size		1259602	0					
ANR	1259676	CallExpression	GetFileSize ( )		1259602	1					
ANR	1259677	Callee	GetFileSize		1259602	0					
ANR	1259678	Identifier	GetFileSize		1259602	0					
ANR	1259679	ArgumentList			1259602	1					
ANR	1259680	ExpressionStatement	return_and_resetpriv ( dir_size )	182:1:4184:4214	1259602	5	True				
ANR	1259681	CallExpression	return_and_resetpriv ( dir_size )		1259602	0					
ANR	1259682	Callee	return_and_resetpriv		1259602	0					
ANR	1259683	Identifier	return_and_resetpriv		1259602	0					
ANR	1259684	ArgumentList	dir_size		1259602	1					
ANR	1259685	Argument	dir_size		1259602	0					
ANR	1259686	Identifier	dir_size		1259602	0					
ANR	1259687	ReturnType	filesize_t		1259602	1					
ANR	1259688	Identifier	Directory :: GetDirectorySize		1259602	2					
ANR	1259689	ParameterList			1259602	3					
ANR	1259690	CFGEntryNode	ENTRY		1259602		True				
ANR	1259691	CFGExitNode	EXIT		1259602		True				
ANR	1259692	Symbol	subdir		1259602						
ANR	1259693	Symbol	NULL		1259602						
ANR	1259694	Symbol	IsDirectory		1259602						
ANR	1259695	Symbol	subdir . GetDirectorySize		1259602						
ANR	1259696	Symbol	thefile		1259602						
ANR	1259697	Symbol	Next		1259602						
ANR	1259698	Symbol	IsSymlink		1259602						
ANR	1259699	Symbol	dir_size		1259602						
ANR	1259700	Symbol	GetFileSize		1259602						
ANR	1259701	Function	Directory :: Find_Named_Entry	185:0:4219:4524							
ANR	1259702	FunctionDef	Directory :: Find_Named_Entry (const char * name)		1259701	0					
ANR	1259703	CompoundStatement		187:0:4272:4524	1259701	0					
ANR	1259704	ExpressionStatement	ASSERT ( name )	188:1:4275:4287	1259701	0	True				
ANR	1259705	CallExpression	ASSERT ( name )		1259701	0					
ANR	1259706	Callee	ASSERT		1259701	0					
ANR	1259707	Identifier	ASSERT		1259701	0					
ANR	1259708	ArgumentList	name		1259701	1					
ANR	1259709	Argument	name		1259701	0					
ANR	1259710	Identifier	name		1259701	0					
ANR	1259711	IdentifierDeclStatement	const char * entry = NULL ;	189:1:4290:4314	1259701	1	True				
ANR	1259712	IdentifierDecl	* entry = NULL		1259701	0					
ANR	1259713	IdentifierDeclType	const char *		1259701	0					
ANR	1259714	Identifier	entry		1259701	1					
ANR	1259715	AssignmentExpression	* entry = NULL		1259701	2		=			
ANR	1259716	Identifier	NULL		1259701	0					
ANR	1259717	Identifier	NULL		1259701	1					
ANR	1259718	IdentifierDeclStatement	bool ret_value = false ;	190:1:4317:4339	1259701	2	True				
ANR	1259719	IdentifierDecl	ret_value = false		1259701	0					
ANR	1259720	IdentifierDeclType	bool		1259701	0					
ANR	1259721	Identifier	ret_value		1259701	1					
ANR	1259722	AssignmentExpression	ret_value = false		1259701	2		=			
ANR	1259723	Identifier	false		1259701	0					
ANR	1259724	Identifier	false		1259701	1					
ANR	1259725	ExpressionStatement	Set_Access_Priv ( )	192:1:4343:4360	1259701	3	True				
ANR	1259726	CallExpression	Set_Access_Priv ( )		1259701	0					
ANR	1259727	Callee	Set_Access_Priv		1259701	0					
ANR	1259728	Identifier	Set_Access_Priv		1259701	0					
ANR	1259729	ArgumentList			1259701	1					
ANR	1259730	ExpressionStatement	Rewind ( )	194:1:4364:4372	1259701	4	True				
ANR	1259731	CallExpression	Rewind ( )		1259701	0					
ANR	1259732	Callee	Rewind		1259701	0					
ANR	1259733	Identifier	Rewind		1259701	0					
ANR	1259734	ArgumentList			1259701	1					
ANR	1259735	WhileStatement	while ( ( entry = Next ( ) ) )		1259701	5					
ANR	1259736	Condition	entry = Next ( )	196:9:4384:4399	1259701	0	True				
ANR	1259737	AssignmentExpression	entry = Next ( )		1259701	0		=			
ANR	1259738	Identifier	entry		1259701	0					
ANR	1259739	CallExpression	Next ( )		1259701	1					
ANR	1259740	Callee	Next		1259701	0					
ANR	1259741	Identifier	Next		1259701	0					
ANR	1259742	ArgumentList			1259701	1					
ANR	1259743	CompoundStatement		10:28:130:130	1259701	1					
ANR	1259744	IfStatement	"if ( ! strcmp ( entry , name ) )"		1259701	0					
ANR	1259745	Condition	"! strcmp ( entry , name )"	197:7:4412:4434	1259701	0	True				
ANR	1259746	UnaryOperationExpression	"! strcmp ( entry , name )"		1259701	0					
ANR	1259747	UnaryOperator	!		1259701	0					
ANR	1259748	CallExpression	"strcmp ( entry , name )"		1259701	1					
ANR	1259749	Callee	strcmp		1259701	0					
ANR	1259750	Identifier	strcmp		1259701	0					
ANR	1259751	ArgumentList	entry		1259701	1					
ANR	1259752	Argument	entry		1259701	0					
ANR	1259753	Identifier	entry		1259701	0					
ANR	1259754	Argument	name		1259701	1					
ANR	1259755	Identifier	name		1259701	0					
ANR	1259756	CompoundStatement		11:33:165:165	1259701	1					
ANR	1259757	ExpressionStatement	ret_value = true	198:3:4443:4459	1259701	0	True				
ANR	1259758	AssignmentExpression	ret_value = true		1259701	0		=			
ANR	1259759	Identifier	ret_value		1259701	0					
ANR	1259760	Identifier	true		1259701	1					
ANR	1259761	BreakStatement	break ;	199:3:4464:4469	1259701	1	True				
ANR	1259762	ExpressionStatement	return_and_resetpriv ( ret_value )	204:1:4489:4522	1259701	6	True				
ANR	1259763	CallExpression	return_and_resetpriv ( ret_value )		1259701	0					
ANR	1259764	Callee	return_and_resetpriv		1259701	0					
ANR	1259765	Identifier	return_and_resetpriv		1259701	0					
ANR	1259766	ArgumentList	ret_value		1259701	1					
ANR	1259767	Argument	ret_value		1259701	0					
ANR	1259768	Identifier	ret_value		1259701	0					
ANR	1259769	ReturnType	bool		1259701	1					
ANR	1259770	Identifier	Directory :: Find_Named_Entry		1259701	2					
ANR	1259771	ParameterList	const char * name		1259701	3					
ANR	1259772	Parameter	const char * name	186:29:4253:4268	1259701	0	True				
ANR	1259773	ParameterType	const char *		1259701	0					
ANR	1259774	Identifier	name		1259701	1					
ANR	1259775	CFGEntryNode	ENTRY		1259701		True				
ANR	1259776	CFGExitNode	EXIT		1259701		True				
ANR	1259777	Symbol	strcmp		1259701						
ANR	1259778	Symbol	entry		1259701						
ANR	1259779	Symbol	NULL		1259701						
ANR	1259780	Symbol	Next		1259701						
ANR	1259781	Symbol	name		1259701						
ANR	1259782	Symbol	false		1259701						
ANR	1259783	Symbol	ret_value		1259701						
ANR	1259784	Symbol	true		1259701						
ANR	1259785	Function	Directory :: Remove_Entire_Directory	207:0:4527:4832							
ANR	1259786	FunctionDef	Directory :: Remove_Entire_Directory ()		1259785	0					
ANR	1259787	CompoundStatement		209:0:4575:4832	1259785	0					
ANR	1259788	IdentifierDeclStatement	const char * thefile = NULL ;	210:1:4578:4604	1259785	0	True				
ANR	1259789	IdentifierDecl	* thefile = NULL		1259785	0					
ANR	1259790	IdentifierDeclType	const char *		1259785	0					
ANR	1259791	Identifier	thefile		1259785	1					
ANR	1259792	AssignmentExpression	* thefile = NULL		1259785	2		=			
ANR	1259793	Identifier	NULL		1259785	0					
ANR	1259794	Identifier	NULL		1259785	1					
ANR	1259795	IdentifierDeclStatement	bool ret_value = true ;	211:1:4607:4628	1259785	1	True				
ANR	1259796	IdentifierDecl	ret_value = true		1259785	0					
ANR	1259797	IdentifierDeclType	bool		1259785	0					
ANR	1259798	Identifier	ret_value		1259785	1					
ANR	1259799	AssignmentExpression	ret_value = true		1259785	2		=			
ANR	1259800	Identifier	true		1259785	0					
ANR	1259801	Identifier	true		1259785	1					
ANR	1259802	ExpressionStatement	Set_Access_Priv ( )	213:1:4632:4649	1259785	2	True				
ANR	1259803	CallExpression	Set_Access_Priv ( )		1259785	0					
ANR	1259804	Callee	Set_Access_Priv		1259785	0					
ANR	1259805	Identifier	Set_Access_Priv		1259785	0					
ANR	1259806	ArgumentList			1259785	1					
ANR	1259807	IfStatement	if ( ! Rewind ( ) )		1259785	3					
ANR	1259808	Condition	! Rewind ( )	215:4:4656:4664	1259785	0	True				
ANR	1259809	UnaryOperationExpression	! Rewind ( )		1259785	0					
ANR	1259810	UnaryOperator	!		1259785	0					
ANR	1259811	CallExpression	Rewind ( )		1259785	1					
ANR	1259812	Callee	Rewind		1259785	0					
ANR	1259813	Identifier	Rewind		1259785	0					
ANR	1259814	ArgumentList			1259785	1					
ANR	1259815	CompoundStatement		7:15:91:91	1259785	1					
ANR	1259816	ExpressionStatement	return_and_resetpriv ( false )	216:2:4671:4698	1259785	0	True				
ANR	1259817	CallExpression	return_and_resetpriv ( false )		1259785	0					
ANR	1259818	Callee	return_and_resetpriv		1259785	0					
ANR	1259819	Identifier	return_and_resetpriv		1259785	0					
ANR	1259820	ArgumentList	false		1259785	1					
ANR	1259821	Argument	false		1259785	0					
ANR	1259822	Identifier	false		1259785	0					
ANR	1259823	WhileStatement	while ( ( thefile = Next ( ) ) )		1259785	4					
ANR	1259824	Condition	thefile = Next ( )	219:9:4713:4728	1259785	0	True				
ANR	1259825	AssignmentExpression	thefile = Next ( )		1259785	0		=			
ANR	1259826	Identifier	thefile		1259785	0					
ANR	1259827	CallExpression	Next ( )		1259785	1					
ANR	1259828	Callee	Next		1259785	0					
ANR	1259829	Identifier	Next		1259785	0					
ANR	1259830	ArgumentList			1259785	1					
ANR	1259831	CompoundStatement		11:28:156:156	1259785	1					
ANR	1259832	IfStatement	if ( ! Remove_Current_File ( ) )		1259785	0					
ANR	1259833	Condition	! Remove_Current_File ( )	220:6:4740:4762	1259785	0	True				
ANR	1259834	UnaryOperationExpression	! Remove_Current_File ( )		1259785	0					
ANR	1259835	UnaryOperator	!		1259785	0					
ANR	1259836	CallExpression	Remove_Current_File ( )		1259785	1					
ANR	1259837	Callee	Remove_Current_File		1259785	0					
ANR	1259838	Identifier	Remove_Current_File		1259785	0					
ANR	1259839	ArgumentList			1259785	1					
ANR	1259840	CompoundStatement		12:32:190:190	1259785	1					
ANR	1259841	ExpressionStatement	ret_value = false	221:3:4771:4788	1259785	0	True				
ANR	1259842	AssignmentExpression	ret_value = false		1259785	0		=			
ANR	1259843	Identifier	ret_value		1259785	0					
ANR	1259844	Identifier	false		1259785	1					
ANR	1259845	ExpressionStatement	return_and_resetpriv ( ret_value )	225:1:4799:4830	1259785	5	True				
ANR	1259846	CallExpression	return_and_resetpriv ( ret_value )		1259785	0					
ANR	1259847	Callee	return_and_resetpriv		1259785	0					
ANR	1259848	Identifier	return_and_resetpriv		1259785	0					
ANR	1259849	ArgumentList	ret_value		1259785	1					
ANR	1259850	Argument	ret_value		1259785	0					
ANR	1259851	Identifier	ret_value		1259785	0					
ANR	1259852	ReturnType	bool		1259785	1					
ANR	1259853	Identifier	Directory :: Remove_Entire_Directory		1259785	2					
ANR	1259854	ParameterList			1259785	3					
ANR	1259855	CFGEntryNode	ENTRY		1259785		True				
ANR	1259856	CFGExitNode	EXIT		1259785		True				
ANR	1259857	Symbol	NULL		1259785						
ANR	1259858	Symbol	Remove_Current_File		1259785						
ANR	1259859	Symbol	thefile		1259785						
ANR	1259860	Symbol	Next		1259785						
ANR	1259861	Symbol	true		1259785						
ANR	1259862	Symbol	ret_value		1259785						
ANR	1259863	Symbol	false		1259785						
ANR	1259864	Symbol	Rewind		1259785						
ANR	1259865	Function	Directory :: Recursive_Chown	229:0:4856:5057							
ANR	1259866	FunctionDef	"Directory :: Recursive_Chown (uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay)"		1259865	0					
ANR	1259867	CompoundStatement		232:0:4966:5057	1259865	0					
ANR	1259868	ReturnStatement	"return recursive_chown ( GetDirectoryPath ( ) , src_uid , dst_uid , dst_gid , non_root_okay ) ;"	233:1:4969:5055	1259865	0	True				
ANR	1259869	CallExpression	"recursive_chown ( GetDirectoryPath ( ) , src_uid , dst_uid , dst_gid , non_root_okay )"		1259865	0					
ANR	1259870	Callee	recursive_chown		1259865	0					
ANR	1259871	Identifier	recursive_chown		1259865	0					
ANR	1259872	ArgumentList	GetDirectoryPath ( )		1259865	1					
ANR	1259873	Argument	GetDirectoryPath ( )		1259865	0					
ANR	1259874	CallExpression	GetDirectoryPath ( )		1259865	0					
ANR	1259875	Callee	GetDirectoryPath		1259865	0					
ANR	1259876	Identifier	GetDirectoryPath		1259865	0					
ANR	1259877	ArgumentList			1259865	1					
ANR	1259878	Argument	src_uid		1259865	1					
ANR	1259879	Identifier	src_uid		1259865	0					
ANR	1259880	Argument	dst_uid		1259865	2					
ANR	1259881	Identifier	dst_uid		1259865	0					
ANR	1259882	Argument	dst_gid		1259865	3					
ANR	1259883	Identifier	dst_gid		1259865	0					
ANR	1259884	Argument	non_root_okay		1259865	4					
ANR	1259885	Identifier	non_root_okay		1259865	0					
ANR	1259886	ReturnType	bool		1259865	1					
ANR	1259887	Identifier	Directory :: Recursive_Chown		1259865	2					
ANR	1259888	ParameterList	"uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay"		1259865	3					
ANR	1259889	Parameter	uid_t src_uid	230:27:4888:4900	1259865	0	True				
ANR	1259890	ParameterType	uid_t		1259865	0					
ANR	1259891	Identifier	src_uid		1259865	1					
ANR	1259892	Parameter	uid_t dst_uid	230:42:4903:4915	1259865	1	True				
ANR	1259893	ParameterType	uid_t		1259865	0					
ANR	1259894	Identifier	dst_uid		1259865	1					
ANR	1259895	Parameter	gid_t dst_gid	230:57:4918:4930	1259865	2	True				
ANR	1259896	ParameterType	gid_t		1259865	0					
ANR	1259897	Identifier	dst_gid		1259865	1					
ANR	1259898	Parameter	bool non_root_okay	231:2:4935:4952	1259865	3	True				
ANR	1259899	ParameterType	bool		1259865	0					
ANR	1259900	Identifier	non_root_okay		1259865	1					
ANR	1259901	CFGEntryNode	ENTRY		1259865		True				
ANR	1259902	CFGExitNode	EXIT		1259865		True				
ANR	1259903	Symbol	src_uid		1259865						
ANR	1259904	Symbol	dst_gid		1259865						
ANR	1259905	Symbol	non_root_okay		1259865						
ANR	1259906	Symbol	GetDirectoryPath		1259865						
ANR	1259907	Symbol	dst_uid		1259865						
ANR	1259908	Symbol	recursive_chown		1259865						
ANR	1259909	Function	Directory :: Remove_Full_Path	238:0:5090:5179							
ANR	1259910	FunctionDef	Directory :: Remove_Full_Path (const char * path)		1259909	0					
ANR	1259911	CompoundStatement		240:0:5143:5179	1259909	0					
ANR	1259912	ReturnStatement	"return do_remove ( path , false ) ;"	241:1:5146:5177	1259909	0	True				
ANR	1259913	CallExpression	"do_remove ( path , false )"		1259909	0					
ANR	1259914	Callee	do_remove		1259909	0					
ANR	1259915	Identifier	do_remove		1259909	0					
ANR	1259916	ArgumentList	path		1259909	1					
ANR	1259917	Argument	path		1259909	0					
ANR	1259918	Identifier	path		1259909	0					
ANR	1259919	Argument	false		1259909	1					
ANR	1259920	Identifier	false		1259909	0					
ANR	1259921	ReturnType	bool		1259909	1					
ANR	1259922	Identifier	Directory :: Remove_Full_Path		1259909	2					
ANR	1259923	ParameterList	const char * path		1259909	3					
ANR	1259924	Parameter	const char * path	239:29:5124:5139	1259909	0	True				
ANR	1259925	ParameterType	const char *		1259909	0					
ANR	1259926	Identifier	path		1259909	1					
ANR	1259927	CFGEntryNode	ENTRY		1259909		True				
ANR	1259928	CFGExitNode	EXIT		1259909		True				
ANR	1259929	Symbol	do_remove		1259909						
ANR	1259930	Symbol	path		1259909						
ANR	1259931	Symbol	false		1259909						
ANR	1259932	Function	Directory :: Remove_Current_File	244:0:5182:5391							
ANR	1259933	FunctionDef	Directory :: Remove_Current_File ()		1259932	0					
ANR	1259934	CompoundStatement		246:0:5227:5391	1259932	0					
ANR	1259935	IfStatement	if ( curr == NULL )		1259932	0					
ANR	1259936	Condition	curr == NULL	247:6:5235:5246	1259932	0	True				
ANR	1259937	EqualityExpression	curr == NULL		1259932	0		==			
ANR	1259938	Identifier	curr		1259932	0					
ANR	1259939	Identifier	NULL		1259932	1					
ANR	1259940	CompoundStatement		2:21:22:22	1259932	1					
ANR	1259941	ReturnStatement	return false ;	250:2:5329:5341	1259932	0	True				
ANR	1259942	Identifier	false		1259932	0					
ANR	1259943	ReturnStatement	"return do_remove ( curr -> FullPath ( ) , true ) ;"	252:1:5347:5389	1259932	1	True				
ANR	1259944	CallExpression	"do_remove ( curr -> FullPath ( ) , true )"		1259932	0					
ANR	1259945	Callee	do_remove		1259932	0					
ANR	1259946	Identifier	do_remove		1259932	0					
ANR	1259947	ArgumentList	curr -> FullPath ( )		1259932	1					
ANR	1259948	Argument	curr -> FullPath ( )		1259932	0					
ANR	1259949	CallExpression	curr -> FullPath ( )		1259932	0					
ANR	1259950	Callee	curr -> FullPath		1259932	0					
ANR	1259951	PtrMemberAccess	curr -> FullPath		1259932	0					
ANR	1259952	Identifier	curr		1259932	0					
ANR	1259953	Identifier	FullPath		1259932	1					
ANR	1259954	ArgumentList			1259932	1					
ANR	1259955	Argument	true		1259932	1					
ANR	1259956	Identifier	true		1259932	0					
ANR	1259957	ReturnType	bool		1259932	1					
ANR	1259958	Identifier	Directory :: Remove_Current_File		1259932	2					
ANR	1259959	ParameterList			1259932	3					
ANR	1259960	CFGEntryNode	ENTRY		1259932		True				
ANR	1259961	CFGExitNode	EXIT		1259932		True				
ANR	1259962	Symbol	do_remove		1259932						
ANR	1259963	Symbol	NULL		1259932						
ANR	1259964	Symbol	* curr		1259932						
ANR	1259965	Symbol	false		1259932						
ANR	1259966	Symbol	true		1259932						
ANR	1259967	Symbol	curr		1259932						
ANR	1259968	Symbol	curr -> FullPath		1259932						
ANR	1259969	Function	Directory :: do_remove	256:0:5396:5837							
ANR	1259970	FunctionDef	"Directory :: do_remove (const char * path , bool is_curr)"		1259969	0					
ANR	1259971	CompoundStatement		258:0:5457:5837	1259969	0					
ANR	1259972	IdentifierDeclStatement	bool is_dir = false ;	259:1:5460:5479	1259969	0	True				
ANR	1259973	IdentifierDecl	is_dir = false		1259969	0					
ANR	1259974	IdentifierDeclType	bool		1259969	0					
ANR	1259975	Identifier	is_dir		1259969	1					
ANR	1259976	AssignmentExpression	is_dir = false		1259969	2		=			
ANR	1259977	Identifier	false		1259969	0					
ANR	1259978	Identifier	false		1259969	1					
ANR	1259979	IfStatement	if ( is_curr )		1259969	1					
ANR	1259980	Condition	is_curr	264:5:5614:5620	1259969	0	True				
ANR	1259981	Identifier	is_curr		1259969	0					
ANR	1259982	CompoundStatement		7:15:166:166	1259969	1					
ANR	1259983	ExpressionStatement	is_dir = IsDirectory ( ) && ! IsSymlink ( )	265:2:5628:5666	1259969	0	True				
ANR	1259984	AssignmentExpression	is_dir = IsDirectory ( ) && ! IsSymlink ( )		1259969	0		=			
ANR	1259985	Identifier	is_dir		1259969	0					
ANR	1259986	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		1259969	1		&&			
ANR	1259987	CallExpression	IsDirectory ( )		1259969	0					
ANR	1259988	Callee	IsDirectory		1259969	0					
ANR	1259989	Identifier	IsDirectory		1259969	0					
ANR	1259990	ArgumentList			1259969	1					
ANR	1259991	UnaryOperationExpression	! IsSymlink ( )		1259969	1					
ANR	1259992	UnaryOperator	!		1259969	0					
ANR	1259993	CallExpression	IsSymlink ( )		1259969	1					
ANR	1259994	Callee	IsSymlink		1259969	0					
ANR	1259995	Identifier	IsSymlink		1259969	0					
ANR	1259996	ArgumentList			1259969	1					
ANR	1259997	ElseStatement	else		1259969	0					
ANR	1259998	CompoundStatement		10:2:222:241	1259969	0					
ANR	1259999	IdentifierDeclStatement	StatInfo si ( path ) ;	267:2:5680:5699	1259969	0	True				
ANR	1260000	IdentifierDecl	si ( path )		1259969	0					
ANR	1260001	IdentifierDeclType	StatInfo		1259969	0					
ANR	1260002	Identifier	si		1259969	1					
ANR	1260003	Identifier	path		1259969	2					
ANR	1260004	ExpressionStatement	is_dir = si . IsDirectory ( ) && ! si . IsSymlink ( )	268:2:5703:5748	1259969	1	True				
ANR	1260005	AssignmentExpression	is_dir = si . IsDirectory ( ) && ! si . IsSymlink ( )		1259969	0		=			
ANR	1260006	Identifier	is_dir		1259969	0					
ANR	1260007	AndExpression	si . IsDirectory ( ) && ! si . IsSymlink ( )		1259969	1		&&			
ANR	1260008	CallExpression	si . IsDirectory ( )		1259969	0					
ANR	1260009	Callee	si . IsDirectory		1259969	0					
ANR	1260010	MemberAccess	si . IsDirectory		1259969	0					
ANR	1260011	Identifier	si		1259969	0					
ANR	1260012	Identifier	IsDirectory		1259969	1					
ANR	1260013	ArgumentList			1259969	1					
ANR	1260014	UnaryOperationExpression	! si . IsSymlink ( )		1259969	1					
ANR	1260015	UnaryOperator	!		1259969	0					
ANR	1260016	CallExpression	si . IsSymlink ( )		1259969	1					
ANR	1260017	Callee	si . IsSymlink		1259969	0					
ANR	1260018	MemberAccess	si . IsSymlink		1259969	0					
ANR	1260019	Identifier	si		1259969	0					
ANR	1260020	Identifier	IsSymlink		1259969	1					
ANR	1260021	ArgumentList			1259969	1					
ANR	1260022	IfStatement	if ( is_dir )		1259969	2					
ANR	1260023	Condition	is_dir	271:5:5759:5764	1259969	0	True				
ANR	1260024	Identifier	is_dir		1259969	0					
ANR	1260025	CompoundStatement		14:14:310:310	1259969	1					
ANR	1260026	ReturnStatement	return do_remove_dir ( path ) ;	272:2:5772:5800	1259969	0	True				
ANR	1260027	CallExpression	do_remove_dir ( path )		1259969	0					
ANR	1260028	Callee	do_remove_dir		1259969	0					
ANR	1260029	Identifier	do_remove_dir		1259969	0					
ANR	1260030	ArgumentList	path		1259969	1					
ANR	1260031	Argument	path		1259969	0					
ANR	1260032	Identifier	path		1259969	0					
ANR	1260033	ReturnStatement	return do_remove_file ( path ) ;	274:1:5806:5835	1259969	3	True				
ANR	1260034	CallExpression	do_remove_file ( path )		1259969	0					
ANR	1260035	Callee	do_remove_file		1259969	0					
ANR	1260036	Identifier	do_remove_file		1259969	0					
ANR	1260037	ArgumentList	path		1259969	1					
ANR	1260038	Argument	path		1259969	0					
ANR	1260039	Identifier	path		1259969	0					
ANR	1260040	ReturnType	bool		1259969	1					
ANR	1260041	Identifier	Directory :: do_remove		1259969	2					
ANR	1260042	ParameterList	"const char * path , bool is_curr"		1259969	3					
ANR	1260043	Parameter	const char * path	257:22:5424:5439	1259969	0	True				
ANR	1260044	ParameterType	const char *		1259969	0					
ANR	1260045	Identifier	path		1259969	1					
ANR	1260046	Parameter	bool is_curr	257:40:5442:5453	1259969	1	True				
ANR	1260047	ParameterType	bool		1259969	0					
ANR	1260048	Identifier	is_curr		1259969	1					
ANR	1260049	CFGEntryNode	ENTRY		1259969		True				
ANR	1260050	CFGExitNode	EXIT		1259969		True				
ANR	1260051	Symbol	path		1259969						
ANR	1260052	Symbol	is_curr		1259969						
ANR	1260053	Symbol	si . IsDirectory		1259969						
ANR	1260054	Symbol	IsDirectory		1259969						
ANR	1260055	Symbol	do_remove_dir		1259969						
ANR	1260056	Symbol	is_dir		1259969						
ANR	1260057	Symbol	si		1259969						
ANR	1260058	Symbol	false		1259969						
ANR	1260059	Symbol	IsSymlink		1259969						
ANR	1260060	Symbol	do_remove_file		1259969						
ANR	1260061	Symbol	si . IsSymlink		1259969						
ANR	1260062	Function	Directory :: do_remove_dir	278:0:5841:9716							
ANR	1260063	FunctionDef	Directory :: do_remove_dir (const char * path)		1260062	0					
ANR	1260064	CompoundStatement		280:0:5892:9716	1260062	0					
ANR	1260065	ExpressionStatement	"rmdirAttempt ( path , desired_priv_state )"	287:1:6152:6192	1260062	0	True				
ANR	1260066	CallExpression	"rmdirAttempt ( path , desired_priv_state )"		1260062	0					
ANR	1260067	Callee	rmdirAttempt		1260062	0					
ANR	1260068	Identifier	rmdirAttempt		1260062	0					
ANR	1260069	ArgumentList	path		1260062	1					
ANR	1260070	Argument	path		1260062	0					
ANR	1260071	Identifier	path		1260062	0					
ANR	1260072	Argument	desired_priv_state		1260062	1					
ANR	1260073	Identifier	desired_priv_state		1260062	0					
ANR	1260074	IdentifierDeclStatement	StatInfo si1 ( path ) ;	288:1:6195:6215	1260062	1	True				
ANR	1260075	IdentifierDecl	si1 ( path )		1260062	0					
ANR	1260076	IdentifierDeclType	StatInfo		1260062	0					
ANR	1260077	Identifier	si1		1260062	1					
ANR	1260078	Identifier	path		1260062	2					
ANR	1260079	IfStatement	if ( si1 . Error ( ) == SINoFile )		1260062	2					
ANR	1260080	Condition	si1 . Error ( ) == SINoFile	289:5:6222:6244	1260062	0	True				
ANR	1260081	EqualityExpression	si1 . Error ( ) == SINoFile		1260062	0		==			
ANR	1260082	CallExpression	si1 . Error ( )		1260062	0					
ANR	1260083	Callee	si1 . Error		1260062	0					
ANR	1260084	MemberAccess	si1 . Error		1260062	0					
ANR	1260085	Identifier	si1		1260062	0					
ANR	1260086	Identifier	Error		1260062	1					
ANR	1260087	ArgumentList			1260062	1					
ANR	1260088	Identifier	SINoFile		1260062	1					
ANR	1260089	CompoundStatement		10:31:355:355	1260062	1					
ANR	1260090	ReturnStatement	return true ;	294:2:6453:6464	1260062	0	True				
ANR	1260091	Identifier	true		1260062	0					
ANR	1260092	IdentifierDeclStatement	"char * usr , * dom ;"	302:1:6638:6653	1260062	3	True				
ANR	1260093	IdentifierDecl	* usr		1260062	0					
ANR	1260094	IdentifierDeclType	char *		1260062	0					
ANR	1260095	Identifier	usr		1260062	1					
ANR	1260096	IdentifierDecl	* dom		1260062	1					
ANR	1260097	IdentifierDeclType	char *		1260062	0					
ANR	1260098	Identifier	dom		1260062	1					
ANR	1260099	IdentifierDeclStatement	extern int rmdir_with_acls_win32 ( const char * path ) ;	305:4:6666:6717	1260062	4	True				
ANR	1260100	IdentifierDecl	rmdir_with_acls_win32 ( const char * path )		1260062	0					
ANR	1260101	IdentifierDeclType	extern int ( const char * path )		1260062	0					
ANR	1260102	Identifier	rmdir_with_acls_win32		1260062	1					
ANR	1260103	Identifier	path		1260062	2					
ANR	1260104	ExpressionStatement	rmdir_with_acls_win32 ( path )	306:4:6723:6752	1260062	5	True				
ANR	1260105	CallExpression	rmdir_with_acls_win32 ( path )		1260062	0					
ANR	1260106	Callee	rmdir_with_acls_win32		1260062	0					
ANR	1260107	Identifier	rmdir_with_acls_win32		1260062	0					
ANR	1260108	ArgumentList	path		1260062	1					
ANR	1260109	Argument	path		1260062	0					
ANR	1260110	Identifier	path		1260062	0					
ANR	1260111	IdentifierDeclStatement	StatInfo si2 ( path ) ;	318:1:6912:6932	1260062	6	True				
ANR	1260112	IdentifierDecl	si2 ( path )		1260062	0					
ANR	1260113	IdentifierDeclType	StatInfo		1260062	0					
ANR	1260114	Identifier	si2		1260062	1					
ANR	1260115	Identifier	path		1260062	2					
ANR	1260116	IfStatement	if ( si2 . Error ( ) == SINoFile )		1260062	7					
ANR	1260117	Condition	si2 . Error ( ) == SINoFile	320:5:6940:6962	1260062	0	True				
ANR	1260118	EqualityExpression	si2 . Error ( ) == SINoFile		1260062	0		==			
ANR	1260119	CallExpression	si2 . Error ( )		1260062	0					
ANR	1260120	Callee	si2 . Error		1260062	0					
ANR	1260121	MemberAccess	si2 . Error		1260062	0					
ANR	1260122	Identifier	si2		1260062	0					
ANR	1260123	Identifier	Error		1260062	1					
ANR	1260124	ArgumentList			1260062	1					
ANR	1260125	Identifier	SINoFile		1260062	1					
ANR	1260126	CompoundStatement		41:31:1073:1073	1260062	1					
ANR	1260127	ReturnStatement	return true ;	321:2:6970:6981	1260062	0	True				
ANR	1260128	Identifier	true		1260062	0					
ANR	1260129	ElseStatement	else		1260062	0					
ANR	1260130	CompoundStatement		43:8:1098:1098	1260062	0					
ANR	1260131	Statement	dprintf	324:2:6997:7003	1260062	0	True				
ANR	1260132	Statement	(	324:9:7004:7004	1260062	1	True				
ANR	1260133	Statement	D_ALWAYS	324:11:7006:7013	1260062	2	True				
ANR	1260134	Statement	","	324:19:7014:7014	1260062	3	True				
ANR	1260135	Statement	"""ERROR: %s still exists after trying """	324:21:7016:7053	1260062	4	True				
ANR	1260136	Statement	"""to add Full control to ACLs for %s\\n"""	325:5:7060:7097	1260062	5	True				
ANR	1260137	Statement	","	325:43:7098:7098	1260062	6	True				
ANR	1260138	Statement	path	325:45:7100:7103	1260062	7	True				
ANR	1260139	Statement	","	325:49:7104:7104	1260062	8	True				
ANR	1260140	Statement	priv_to_string	326:5:7112:7125	1260062	9	True				
ANR	1260141	Statement	(	326:19:7126:7126	1260062	10	True				
ANR	1260142	Statement	desired_priv_state	326:20:7127:7144	1260062	11	True				
ANR	1260143	Statement	)	326:38:7145:7145	1260062	12	True				
ANR	1260144	Statement	)	326:40:7147:7147	1260062	13	True				
ANR	1260145	ExpressionStatement		326:41:7148:7148	1260062	14	True				
ANR	1260146	ReturnStatement	return false ;	327:2:7152:7164	1260062	15	True				
ANR	1260147	Identifier	false		1260062	0					
ANR	1260148	ExpressionStatement	"EXCEPT ( ""Programmer error: Directory::do_remove_dir() didn't return"" )"	398:1:9629:9699	1260062	8	True				
ANR	1260149	CallExpression	"EXCEPT ( ""Programmer error: Directory::do_remove_dir() didn't return"" )"		1260062	0					
ANR	1260150	Callee	EXCEPT		1260062	0					
ANR	1260151	Identifier	EXCEPT		1260062	0					
ANR	1260152	ArgumentList	"""Programmer error: Directory::do_remove_dir() didn't return"""		1260062	1					
ANR	1260153	Argument	"""Programmer error: Directory::do_remove_dir() didn't return"""		1260062	0					
ANR	1260154	PrimaryExpression	"""Programmer error: Directory::do_remove_dir() didn't return"""		1260062	0					
ANR	1260155	ReturnStatement	return false ;	399:1:9702:9714	1260062	9	True				
ANR	1260156	Identifier	false		1260062	0					
ANR	1260157	ReturnType	bool		1260062	1					
ANR	1260158	Identifier	Directory :: do_remove_dir		1260062	2					
ANR	1260159	ParameterList	const char * path		1260062	3					
ANR	1260160	Parameter	const char * path	279:26:5873:5888	1260062	0	True				
ANR	1260161	ParameterType	const char *		1260062	0					
ANR	1260162	Identifier	path		1260062	1					
ANR	1260163	CFGEntryNode	ENTRY		1260062		True				
ANR	1260164	CFGExitNode	EXIT		1260062		True				
ANR	1260165	Symbol	path		1260062						
ANR	1260166	Symbol	SINoFile		1260062						
ANR	1260167	Symbol	dom		1260062						
ANR	1260168	Symbol	usr		1260062						
ANR	1260169	Symbol	si1 . Error		1260062						
ANR	1260170	Symbol	true		1260062						
ANR	1260171	Symbol	si2 . Error		1260062						
ANR	1260172	Symbol	false		1260062						
ANR	1260173	Symbol	si1		1260062						
ANR	1260174	Symbol	desired_priv_state		1260062						
ANR	1260175	Symbol	si2		1260062						
ANR	1260176	Symbol	rmdir_with_acls_win32		1260062						
ANR	1260177	Function	Directory :: do_remove_file	403:0:9720:11446							
ANR	1260178	FunctionDef	Directory :: do_remove_file (const char * path)		1260177	0					
ANR	1260179	CompoundStatement		405:0:9772:11446	1260177	0					
ANR	1260180	IdentifierDeclStatement	bool ret_val = true ;	406:4:9778:9797	1260177	0	True				
ANR	1260181	IdentifierDecl	ret_val = true		1260177	0					
ANR	1260182	IdentifierDeclType	bool		1260177	0					
ANR	1260183	Identifier	ret_val		1260177	1					
ANR	1260184	AssignmentExpression	ret_val = true		1260177	2		=			
ANR	1260185	Identifier	true		1260177	0					
ANR	1260186	Identifier	true		1260177	1					
ANR	1260187	ExpressionStatement	Set_Access_Priv ( )	407:1:9841:9858	1260177	1	True				
ANR	1260188	CallExpression	Set_Access_Priv ( )		1260177	0					
ANR	1260189	Callee	Set_Access_Priv		1260177	0					
ANR	1260190	Identifier	Set_Access_Priv		1260177	0					
ANR	1260191	ArgumentList			1260177	1					
ANR	1260192	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory: about to unlink %s\\n"" , path )"	410:1:9888:9948	1260177	2	True				
ANR	1260193	CallExpression	"dprintf ( D_ALWAYS , ""Directory: about to unlink %s\\n"" , path )"		1260177	0					
ANR	1260194	Callee	dprintf		1260177	0					
ANR	1260195	Identifier	dprintf		1260177	0					
ANR	1260196	ArgumentList	D_ALWAYS		1260177	1					
ANR	1260197	Argument	D_ALWAYS		1260177	0					
ANR	1260198	Identifier	D_ALWAYS		1260177	0					
ANR	1260199	Argument	"""Directory: about to unlink %s\\n"""		1260177	1					
ANR	1260200	PrimaryExpression	"""Directory: about to unlink %s\\n"""		1260177	0					
ANR	1260201	Argument	path		1260177	2					
ANR	1260202	Identifier	path		1260177	0					
ANR	1260203	IfStatement	if ( ret_val == false && errno == ENOENT )		1260177	3					
ANR	1260204	Condition	ret_val == false && errno == ENOENT	454:5:11351:11386	1260177	0	True				
ANR	1260205	AndExpression	ret_val == false && errno == ENOENT		1260177	0		&&			
ANR	1260206	EqualityExpression	ret_val == false		1260177	0		==			
ANR	1260207	Identifier	ret_val		1260177	0					
ANR	1260208	Identifier	false		1260177	1					
ANR	1260209	EqualityExpression	errno == ENOENT		1260177	1		==			
ANR	1260210	Identifier	errno		1260177	0					
ANR	1260211	Identifier	ENOENT		1260177	1					
ANR	1260212	CompoundStatement		50:44:1617:1617	1260177	1					
ANR	1260213	ExpressionStatement	ret_val = true	455:2:11394:11408	1260177	0	True				
ANR	1260214	AssignmentExpression	ret_val = true		1260177	0		=			
ANR	1260215	Identifier	ret_val		1260177	0					
ANR	1260216	Identifier	true		1260177	1					
ANR	1260217	ExpressionStatement	return_and_resetpriv ( ret_val )	457:1:11415:11444	1260177	4	True				
ANR	1260218	CallExpression	return_and_resetpriv ( ret_val )		1260177	0					
ANR	1260219	Callee	return_and_resetpriv		1260177	0					
ANR	1260220	Identifier	return_and_resetpriv		1260177	0					
ANR	1260221	ArgumentList	ret_val		1260177	1					
ANR	1260222	Argument	ret_val		1260177	0					
ANR	1260223	Identifier	ret_val		1260177	0					
ANR	1260224	ReturnType	bool		1260177	1					
ANR	1260225	Identifier	Directory :: do_remove_file		1260177	2					
ANR	1260226	ParameterList	const char * path		1260177	3					
ANR	1260227	Parameter	const char * path	404:27:9753:9768	1260177	0	True				
ANR	1260228	ParameterType	const char *		1260177	0					
ANR	1260229	Identifier	path		1260177	1					
ANR	1260230	CFGEntryNode	ENTRY		1260177		True				
ANR	1260231	CFGExitNode	EXIT		1260177		True				
ANR	1260232	Symbol	path		1260177						
ANR	1260233	Symbol	errno		1260177						
ANR	1260234	Symbol	true		1260177						
ANR	1260235	Symbol	D_ALWAYS		1260177						
ANR	1260236	Symbol	false		1260177						
ANR	1260237	Symbol	ENOENT		1260177						
ANR	1260238	Symbol	ret_val		1260177						
ANR	1260239	Function	Directory :: rmdirAttempt	461:0:11450:15797							
ANR	1260240	FunctionDef	"Directory :: rmdirAttempt (const char * path , priv_state priv)"		1260239	0					
ANR	1260241	CompoundStatement		463:0:11516:15797	1260239	0					
ANR	1260242	IdentifierDeclStatement	MyString rm_buf ;	465:1:11520:11535	1260239	0	True				
ANR	1260243	IdentifierDecl	rm_buf		1260239	0					
ANR	1260244	IdentifierDeclType	MyString		1260239	0					
ANR	1260245	Identifier	rm_buf		1260239	1					
ANR	1260246	IdentifierDeclStatement	const char * log_msg = 0 ;	466:1:11538:11559	1260239	1	True				
ANR	1260247	IdentifierDecl	* log_msg = 0		1260239	0					
ANR	1260248	IdentifierDeclType	const char *		1260239	0					
ANR	1260249	Identifier	log_msg		1260239	1					
ANR	1260250	AssignmentExpression	* log_msg = 0		1260239	2		=			
ANR	1260251	Identifier	log_msg		1260239	0					
ANR	1260252	PrimaryExpression	0		1260239	1					
ANR	1260253	IdentifierDeclStatement	priv_state saved_priv = PRIV_UNKNOWN ;	467:1:11562:11596	1260239	2	True				
ANR	1260254	IdentifierDecl	saved_priv = PRIV_UNKNOWN		1260239	0					
ANR	1260255	IdentifierDeclType	priv_state		1260239	0					
ANR	1260256	Identifier	saved_priv		1260239	1					
ANR	1260257	AssignmentExpression	saved_priv = PRIV_UNKNOWN		1260239	2		=			
ANR	1260258	Identifier	PRIV_UNKNOWN		1260239	0					
ANR	1260259	Identifier	PRIV_UNKNOWN		1260239	1					
ANR	1260260	IdentifierDeclStatement	int rval ;	468:1:11599:11607	1260239	3	True				
ANR	1260261	IdentifierDecl	rval		1260239	0					
ANR	1260262	IdentifierDeclType	int		1260239	0					
ANR	1260263	Identifier	rval		1260239	1					
ANR	1260264	IdentifierDeclStatement	si_error_t err = SIGood ;	479:1:11977:12000	1260239	4	True				
ANR	1260265	IdentifierDecl	err = SIGood		1260239	0					
ANR	1260266	IdentifierDeclType	si_error_t		1260239	0					
ANR	1260267	Identifier	err		1260239	1					
ANR	1260268	AssignmentExpression	err = SIGood		1260239	2		=			
ANR	1260269	Identifier	SIGood		1260239	0					
ANR	1260270	Identifier	SIGood		1260239	1					
ANR	1260271	IfStatement	if ( want_priv_change )		1260239	5					
ANR	1260272	Condition	want_priv_change	481:5:12014:12029	1260239	0	True				
ANR	1260273	Identifier	want_priv_change		1260239	0					
ANR	1260274	CompoundStatement		19:24:516:516	1260239	1					
ANR	1260275	SwitchStatement	switch ( priv )		1260239	0					
ANR	1260276	Condition	priv	482:10:12045:12048	1260239	0	True				
ANR	1260277	Identifier	priv		1260239	0					
ANR	1260278	CompoundStatement		20:17:535:535	1260239	1					
ANR	1260279	Label	case PRIV_UNKNOWN :	484:2:12057:12074	1260239	0	True				
ANR	1260280	Identifier	PRIV_UNKNOWN		1260239	0					
ANR	1260281	ExpressionStatement	log_msg = priv_identifier ( get_priv ( ) )	485:3:12079:12118	1260239	1	True				
ANR	1260282	AssignmentExpression	log_msg = priv_identifier ( get_priv ( ) )		1260239	0		=			
ANR	1260283	Identifier	log_msg		1260239	0					
ANR	1260284	CallExpression	priv_identifier ( get_priv ( ) )		1260239	1					
ANR	1260285	Callee	priv_identifier		1260239	0					
ANR	1260286	Identifier	priv_identifier		1260239	0					
ANR	1260287	ArgumentList	get_priv ( )		1260239	1					
ANR	1260288	Argument	get_priv ( )		1260239	0					
ANR	1260289	CallExpression	get_priv ( )		1260239	0					
ANR	1260290	Callee	get_priv		1260239	0					
ANR	1260291	Identifier	get_priv		1260239	0					
ANR	1260292	ArgumentList			1260239	1					
ANR	1260293	BreakStatement	break ;	486:3:12123:12128	1260239	2	True				
ANR	1260294	Label	case PRIV_FILE_OWNER :	488:2:12133:12153	1260239	3	True				
ANR	1260295	Identifier	PRIV_FILE_OWNER		1260239	0					
ANR	1260296	Statement	EXCEPT	490:3:12171:12176	1260239	4	True				
ANR	1260297	Statement	(	490:9:12177:12177	1260239	5	True				
ANR	1260298	Statement	"""Programmer error: Directory::rmdirAttempt() called """	490:11:12179:12231	1260239	6	True				
ANR	1260299	Statement	"""with PRIV_FILE_OWNER on WIN32!"""	491:5:12238:12269	1260239	7	True				
ANR	1260300	Statement	)	491:38:12271:12271	1260239	8	True				
ANR	1260301	ExpressionStatement		491:39:12272:12272	1260239	9	True				
ANR	1260302	BreakStatement	break ;	496:3:12371:12376	1260239	10	True				
ANR	1260303	Label	case PRIV_USER :	498:2:12381:12395	1260239	11	True				
ANR	1260304	Identifier	PRIV_USER		1260239	0					
ANR	1260305	Label	case PRIV_ROOT :	499:2:12399:12413	1260239	12	True				
ANR	1260306	Identifier	PRIV_ROOT		1260239	0					
ANR	1260307	Label	case PRIV_CONDOR :	500:2:12417:12433	1260239	13	True				
ANR	1260308	Identifier	PRIV_CONDOR		1260239	0					
ANR	1260309	ExpressionStatement	saved_priv = set_priv ( priv )	501:3:12438:12467	1260239	14	True				
ANR	1260310	AssignmentExpression	saved_priv = set_priv ( priv )		1260239	0		=			
ANR	1260311	Identifier	saved_priv		1260239	0					
ANR	1260312	CallExpression	set_priv ( priv )		1260239	1					
ANR	1260313	Callee	set_priv		1260239	0					
ANR	1260314	Identifier	set_priv		1260239	0					
ANR	1260315	ArgumentList	priv		1260239	1					
ANR	1260316	Argument	priv		1260239	0					
ANR	1260317	Identifier	priv		1260239	0					
ANR	1260318	ExpressionStatement	log_msg = priv_identifier ( priv )	502:3:12472:12505	1260239	15	True				
ANR	1260319	AssignmentExpression	log_msg = priv_identifier ( priv )		1260239	0		=			
ANR	1260320	Identifier	log_msg		1260239	0					
ANR	1260321	CallExpression	priv_identifier ( priv )		1260239	1					
ANR	1260322	Callee	priv_identifier		1260239	0					
ANR	1260323	Identifier	priv_identifier		1260239	0					
ANR	1260324	ArgumentList	priv		1260239	1					
ANR	1260325	Argument	priv		1260239	0					
ANR	1260326	Identifier	priv		1260239	0					
ANR	1260327	BreakStatement	break ;	503:3:12510:12515	1260239	16	True				
ANR	1260328	Label	default :	505:2:12520:12527	1260239	17	True				
ANR	1260329	Identifier	default		1260239	0					
ANR	1260330	Statement	EXCEPT	506:3:12532:12537	1260239	18	True				
ANR	1260331	Statement	(	506:9:12538:12538	1260239	19	True				
ANR	1260332	Statement	"""Programmer error: Directory::rmdirAttempt() called """	506:11:12540:12592	1260239	20	True				
ANR	1260333	Statement	"""with unexpected priv_state (%d: %s)"""	507:5:12599:12635	1260239	21	True				
ANR	1260334	Statement	","	507:42:12636:12636	1260239	22	True				
ANR	1260335	Statement	priv	507:44:12638:12641	1260239	23	True				
ANR	1260336	Statement	","	507:48:12642:12642	1260239	24	True				
ANR	1260337	Statement	priv_to_string	508:5:12649:12662	1260239	25	True				
ANR	1260338	Statement	(	508:19:12663:12663	1260239	26	True				
ANR	1260339	Statement	priv	508:20:12664:12667	1260239	27	True				
ANR	1260340	Statement	)	508:24:12668:12668	1260239	28	True				
ANR	1260341	Statement	)	508:26:12670:12670	1260239	29	True				
ANR	1260342	ExpressionStatement		508:27:12671:12671	1260239	30	True				
ANR	1260343	BreakStatement	break ;	509:3:12676:12681	1260239	31	True				
ANR	1260344	ElseStatement	else		1260239	0					
ANR	1260345	CompoundStatement		49:8:1178:1178	1260239	0					
ANR	1260346	ExpressionStatement	log_msg = priv_identifier ( get_priv ( ) )	518:2:13040:13079	1260239	0	True				
ANR	1260347	AssignmentExpression	log_msg = priv_identifier ( get_priv ( ) )		1260239	0		=			
ANR	1260348	Identifier	log_msg		1260239	0					
ANR	1260349	CallExpression	priv_identifier ( get_priv ( ) )		1260239	1					
ANR	1260350	Callee	priv_identifier		1260239	0					
ANR	1260351	Identifier	priv_identifier		1260239	0					
ANR	1260352	ArgumentList	get_priv ( )		1260239	1					
ANR	1260353	Argument	get_priv ( )		1260239	0					
ANR	1260354	CallExpression	get_priv ( )		1260239	0					
ANR	1260355	Callee	get_priv		1260239	0					
ANR	1260356	Identifier	get_priv		1260239	0					
ANR	1260357	ArgumentList			1260239	1					
ANR	1260358	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to remove %s as %s\\n"" , path , log_msg )"	522:1:13118:13194	1260239	6	True				
ANR	1260359	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to remove %s as %s\\n"" , path , log_msg )"		1260239	0					
ANR	1260360	Callee	dprintf		1260239	0					
ANR	1260361	Identifier	dprintf		1260239	0					
ANR	1260362	ArgumentList	D_FULLDEBUG		1260239	1					
ANR	1260363	Argument	D_FULLDEBUG		1260239	0					
ANR	1260364	Identifier	D_FULLDEBUG		1260239	0					
ANR	1260365	Argument	"""Attempting to remove %s as %s\\n"""		1260239	1					
ANR	1260366	PrimaryExpression	"""Attempting to remove %s as %s\\n"""		1260239	0					
ANR	1260367	Argument	path		1260239	2					
ANR	1260368	Identifier	path		1260239	0					
ANR	1260369	Argument	log_msg		1260239	3					
ANR	1260370	Identifier	log_msg		1260239	0					
ANR	1260371	IdentifierDeclStatement	"char * rmdir_exe_p = param ( ""WINDOWS_RMDIR"" ) ;"	526:8:13218:13261	1260239	7	True				
ANR	1260372	IdentifierDecl	"* rmdir_exe_p = param ( ""WINDOWS_RMDIR"" )"		1260239	0					
ANR	1260373	IdentifierDeclType	char *		1260239	0					
ANR	1260374	Identifier	rmdir_exe_p		1260239	1					
ANR	1260375	AssignmentExpression	"* rmdir_exe_p = param ( ""WINDOWS_RMDIR"" )"		1260239	2		=			
ANR	1260376	Identifier	rmdir_exe_p		1260239	0					
ANR	1260377	CallExpression	"param ( ""WINDOWS_RMDIR"" )"		1260239	1					
ANR	1260378	Callee	param		1260239	0					
ANR	1260379	Identifier	param		1260239	0					
ANR	1260380	ArgumentList	"""WINDOWS_RMDIR"""		1260239	1					
ANR	1260381	Argument	"""WINDOWS_RMDIR"""		1260239	0					
ANR	1260382	PrimaryExpression	"""WINDOWS_RMDIR"""		1260239	0					
ANR	1260383	IdentifierDeclStatement	"char * rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" ) ;"	527:8:13271:13323	1260239	8	True				
ANR	1260384	IdentifierDecl	"* rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" )"		1260239	0					
ANR	1260385	IdentifierDeclType	char *		1260239	0					
ANR	1260386	Identifier	rmdir_opts_p		1260239	1					
ANR	1260387	AssignmentExpression	"* rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" )"		1260239	2		=			
ANR	1260388	Identifier	rmdir_opts_p		1260239	0					
ANR	1260389	CallExpression	"param ( ""WINDOWS_RMDIR_OPTIONS"" )"		1260239	1					
ANR	1260390	Callee	param		1260239	0					
ANR	1260391	Identifier	param		1260239	0					
ANR	1260392	ArgumentList	"""WINDOWS_RMDIR_OPTIONS"""		1260239	1					
ANR	1260393	Argument	"""WINDOWS_RMDIR_OPTIONS"""		1260239	0					
ANR	1260394	PrimaryExpression	"""WINDOWS_RMDIR_OPTIONS"""		1260239	0					
ANR	1260395	IdentifierDeclStatement	bool fNativeRmdir = false ;	528:8:13333:13358	1260239	9	True				
ANR	1260396	IdentifierDecl	fNativeRmdir = false		1260239	0					
ANR	1260397	IdentifierDeclType	bool		1260239	0					
ANR	1260398	Identifier	fNativeRmdir		1260239	1					
ANR	1260399	AssignmentExpression	fNativeRmdir = false		1260239	2		=			
ANR	1260400	Identifier	false		1260239	0					
ANR	1260401	Identifier	false		1260239	1					
ANR	1260402	IdentifierDeclStatement	bool fCondorRmdir = false ;	529:8:13368:13393	1260239	10	True				
ANR	1260403	IdentifierDecl	fCondorRmdir = false		1260239	0					
ANR	1260404	IdentifierDeclType	bool		1260239	0					
ANR	1260405	Identifier	fCondorRmdir		1260239	1					
ANR	1260406	AssignmentExpression	fCondorRmdir = false		1260239	2		=			
ANR	1260407	Identifier	false		1260239	0					
ANR	1260408	Identifier	false		1260239	1					
ANR	1260409	IfStatement	if ( ! rmdir_exe_p || ! rmdir_exe_p [ 0 ] )		1260239	11					
ANR	1260410	Condition	! rmdir_exe_p || ! rmdir_exe_p [ 0 ]	530:13:13408:13440	1260239	0	True				
ANR	1260411	OrExpression	! rmdir_exe_p || ! rmdir_exe_p [ 0 ]		1260239	0		||			
ANR	1260412	UnaryOperationExpression	! rmdir_exe_p		1260239	0					
ANR	1260413	UnaryOperator	!		1260239	0					
ANR	1260414	Identifier	rmdir_exe_p		1260239	1					
ANR	1260415	UnaryOperationExpression	! rmdir_exe_p [ 0 ]		1260239	1					
ANR	1260416	UnaryOperator	!		1260239	0					
ANR	1260417	ArrayIndexing	rmdir_exe_p [ 0 ]		1260239	1					
ANR	1260418	Identifier	rmdir_exe_p		1260239	0					
ANR	1260419	PrimaryExpression	0		1260239	1					
ANR	1260420	ExpressionStatement	fNativeRmdir = true	531:11:13454:13473	1260239	1	True				
ANR	1260421	AssignmentExpression	fNativeRmdir = true		1260239	0		=			
ANR	1260422	Identifier	fNativeRmdir		1260239	0					
ANR	1260423	Identifier	true		1260239	1					
ANR	1260424	ElseStatement	else		1260239	0					
ANR	1260425	IfStatement	"if ( ! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" ) )"		1260239	0					
ANR	1260426	Condition	"! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" )"	532:18:13493:13561	1260239	0	True				
ANR	1260427	OrExpression	"! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" )"		1260239	0		||			
ANR	1260428	UnaryOperationExpression	"! strcasecmp ( rmdir_exe_p , ""rmdir"" )"		1260239	0					
ANR	1260429	UnaryOperator	!		1260239	0					
ANR	1260430	CallExpression	"strcasecmp ( rmdir_exe_p , ""rmdir"" )"		1260239	1					
ANR	1260431	Callee	strcasecmp		1260239	0					
ANR	1260432	Identifier	strcasecmp		1260239	0					
ANR	1260433	ArgumentList	rmdir_exe_p		1260239	1					
ANR	1260434	Argument	rmdir_exe_p		1260239	0					
ANR	1260435	Identifier	rmdir_exe_p		1260239	0					
ANR	1260436	Argument	"""rmdir"""		1260239	1					
ANR	1260437	PrimaryExpression	"""rmdir"""		1260239	0					
ANR	1260438	UnaryOperationExpression	"! strcasecmp ( rmdir_exe_p , ""rd"" )"		1260239	1					
ANR	1260439	UnaryOperator	!		1260239	0					
ANR	1260440	CallExpression	"strcasecmp ( rmdir_exe_p , ""rd"" )"		1260239	1					
ANR	1260441	Callee	strcasecmp		1260239	0					
ANR	1260442	Identifier	strcasecmp		1260239	0					
ANR	1260443	ArgumentList	rmdir_exe_p		1260239	1					
ANR	1260444	Argument	rmdir_exe_p		1260239	0					
ANR	1260445	Identifier	rmdir_exe_p		1260239	0					
ANR	1260446	Argument	"""rd"""		1260239	1					
ANR	1260447	PrimaryExpression	"""rd"""		1260239	0					
ANR	1260448	ExpressionStatement	fNativeRmdir = true	533:11:13575:13594	1260239	1	True				
ANR	1260449	AssignmentExpression	fNativeRmdir = true		1260239	0		=			
ANR	1260450	Identifier	fNativeRmdir		1260239	0					
ANR	1260451	Identifier	true		1260239	1					
ANR	1260452	ElseStatement	else		1260239	0					
ANR	1260453	IfStatement	if ( INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p ) )		1260239	0					
ANR	1260454	Condition	INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p )	534:17:13613:13669	1260239	0	True				
ANR	1260455	EqualityExpression	INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p )		1260239	0		==			
ANR	1260456	Identifier	INVALID_FILE_ATTRIBUTES		1260239	0					
ANR	1260457	CallExpression	GetFileAttributes ( rmdir_exe_p )		1260239	1					
ANR	1260458	Callee	GetFileAttributes		1260239	0					
ANR	1260459	Identifier	GetFileAttributes		1260239	0					
ANR	1260460	ArgumentList	rmdir_exe_p		1260239	1					
ANR	1260461	Argument	rmdir_exe_p		1260239	0					
ANR	1260462	Identifier	rmdir_exe_p		1260239	0					
ANR	1260463	CompoundStatement		72:76:2155:2155	1260239	1					
ANR	1260464	ExpressionStatement	fNativeRmdir = true	535:11:13685:13704	1260239	0	True				
ANR	1260465	AssignmentExpression	fNativeRmdir = true		1260239	0		=			
ANR	1260466	Identifier	fNativeRmdir		1260239	0					
ANR	1260467	Identifier	true		1260239	1					
ANR	1260468	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"" , rmdir_exe_p , GetLastError ( ) )"	536:11:13717:13823	1260239	1	True				
ANR	1260469	CallExpression	"dprintf ( D_ALWAYS , ""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"" , rmdir_exe_p , GetLastError ( ) )"		1260239	0					
ANR	1260470	Callee	dprintf		1260239	0					
ANR	1260471	Identifier	dprintf		1260239	0					
ANR	1260472	ArgumentList	D_ALWAYS		1260239	1					
ANR	1260473	Argument	D_ALWAYS		1260239	0					
ANR	1260474	Identifier	D_ALWAYS		1260239	0					
ANR	1260475	Argument	"""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"""		1260239	1					
ANR	1260476	PrimaryExpression	"""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"""		1260239	0					
ANR	1260477	Argument	rmdir_exe_p		1260239	2					
ANR	1260478	Identifier	rmdir_exe_p		1260239	0					
ANR	1260479	Argument	GetLastError ( )		1260239	3					
ANR	1260480	CallExpression	GetLastError ( )		1260239	0					
ANR	1260481	Callee	GetLastError		1260239	0					
ANR	1260482	Identifier	GetLastError		1260239	0					
ANR	1260483	ArgumentList			1260239	1					
ANR	1260484	ElseStatement	else		1260239	0					
ANR	1260485	CompoundStatement		78:11:2446:2471	1260239	0					
ANR	1260486	IdentifierDeclStatement	MyString exe ( rmdir_exe_p ) ;	540:11:13963:13988	1260239	0	True				
ANR	1260487	IdentifierDecl	exe ( rmdir_exe_p )		1260239	0					
ANR	1260488	IdentifierDeclType	MyString		1260239	0					
ANR	1260489	Identifier	exe		1260239	1					
ANR	1260490	Identifier	rmdir_exe_p		1260239	2					
ANR	1260491	ExpressionStatement	exe . lower_case ( )	541:11:14001:14017	1260239	1	True				
ANR	1260492	CallExpression	exe . lower_case ( )		1260239	0					
ANR	1260493	Callee	exe . lower_case		1260239	0					
ANR	1260494	MemberAccess	exe . lower_case		1260239	0					
ANR	1260495	Identifier	exe		1260239	0					
ANR	1260496	Identifier	lower_case		1260239	1					
ANR	1260497	ArgumentList			1260239	1					
ANR	1260498	ExpressionStatement	"fCondorRmdir = ( exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0 )"	542:11:14030:14082	1260239	2	True				
ANR	1260499	AssignmentExpression	"fCondorRmdir = ( exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0 )"		1260239	0		=			
ANR	1260500	Identifier	fCondorRmdir		1260239	0					
ANR	1260501	RelationalExpression	"exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0"		1260239	1		>=			
ANR	1260502	CallExpression	"exe . find ( ""condor_rmdir.exe"" , 0 )"		1260239	0					
ANR	1260503	Callee	exe . find		1260239	0					
ANR	1260504	MemberAccess	exe . find		1260239	0					
ANR	1260505	Identifier	exe		1260239	0					
ANR	1260506	Identifier	find		1260239	1					
ANR	1260507	ArgumentList	"""condor_rmdir.exe"""		1260239	1					
ANR	1260508	Argument	"""condor_rmdir.exe"""		1260239	0					
ANR	1260509	PrimaryExpression	"""condor_rmdir.exe"""		1260239	0					
ANR	1260510	Argument	0		1260239	1					
ANR	1260511	PrimaryExpression	0		1260239	0					
ANR	1260512	PrimaryExpression	0		1260239	1					
ANR	1260513	IfStatement	if ( fNativeRmdir )		1260239	12					
ANR	1260514	Condition	fNativeRmdir	545:12:14107:14118	1260239	0	True				
ANR	1260515	Identifier	fNativeRmdir		1260239	0					
ANR	1260516	CompoundStatement		83:26:2604:2604	1260239	1					
ANR	1260517	ExpressionStatement	"rm_buf = ""cmd.exe /s /c \\""rmdir /s /q \\"""""	546:11:14134:14175	1260239	0	True				
ANR	1260518	AssignmentExpression	"rm_buf = ""cmd.exe /s /c \\""rmdir /s /q \\"""""		1260239	0		=			
ANR	1260519	Identifier	rm_buf		1260239	0					
ANR	1260520	PrimaryExpression	"""cmd.exe /s /c \\""rmdir /s /q \\"""""		1260239	1					
ANR	1260521	ExpressionStatement	rm_buf += path	547:11:14188:14202	1260239	1	True				
ANR	1260522	AssignmentExpression	rm_buf += path		1260239	0		+=			
ANR	1260523	Identifier	rm_buf		1260239	0					
ANR	1260524	Identifier	path		1260239	1					
ANR	1260525	ExpressionStatement	"rm_buf += ""\\"" \\"""""	548:11:14215:14232	1260239	2	True				
ANR	1260526	AssignmentExpression	"rm_buf += ""\\"" \\"""""		1260239	0		+=			
ANR	1260527	Identifier	rm_buf		1260239	0					
ANR	1260528	PrimaryExpression	"""\\"" \\"""""		1260239	1					
ANR	1260529	ElseStatement	else		1260239	0					
ANR	1260530	CompoundStatement		87:15:2732:2732	1260239	0					
ANR	1260531	ExpressionStatement	rm_buf = rmdir_exe_p	550:11:14262:14282	1260239	0	True				
ANR	1260532	AssignmentExpression	rm_buf = rmdir_exe_p		1260239	0		=			
ANR	1260533	Identifier	rm_buf		1260239	0					
ANR	1260534	Identifier	rmdir_exe_p		1260239	1					
ANR	1260535	ExpressionStatement	"rm_buf += "" """	551:11:14295:14308	1260239	1	True				
ANR	1260536	AssignmentExpression	"rm_buf += "" """		1260239	0		+=			
ANR	1260537	Identifier	rm_buf		1260239	0					
ANR	1260538	PrimaryExpression	""" """		1260239	1					
ANR	1260539	IfStatement	if ( fCondorRmdir )		1260239	2					
ANR	1260540	Condition	fCondorRmdir	552:15:14325:14336	1260239	0	True				
ANR	1260541	Identifier	fCondorRmdir		1260239	0					
ANR	1260542	ExpressionStatement	"rm_buf += ""/s """	553:14:14353:14368	1260239	1	True				
ANR	1260543	AssignmentExpression	"rm_buf += ""/s """		1260239	0		+=			
ANR	1260544	Identifier	rm_buf		1260239	0					
ANR	1260545	PrimaryExpression	"""/s """		1260239	1					
ANR	1260546	IfStatement	if ( rmdir_opts_p && rmdir_opts_p [ 0 ] )		1260239	3					
ANR	1260547	Condition	rmdir_opts_p && rmdir_opts_p [ 0 ]	555:15:14405:14435	1260239	0	True				
ANR	1260548	AndExpression	rmdir_opts_p && rmdir_opts_p [ 0 ]		1260239	0		&&			
ANR	1260549	Identifier	rmdir_opts_p		1260239	0					
ANR	1260550	ArrayIndexing	rmdir_opts_p [ 0 ]		1260239	1					
ANR	1260551	Identifier	rmdir_opts_p		1260239	0					
ANR	1260552	PrimaryExpression	0		1260239	1					
ANR	1260553	ExpressionStatement	rm_buf += rmdir_opts_p	556:14:14452:14474	1260239	1	True				
ANR	1260554	AssignmentExpression	rm_buf += rmdir_opts_p		1260239	0		+=			
ANR	1260555	Identifier	rm_buf		1260239	0					
ANR	1260556	Identifier	rmdir_opts_p		1260239	1					
ANR	1260557	ElseStatement	else		1260239	0					
ANR	1260558	IfStatement	if ( fCondorRmdir )		1260239	0					
ANR	1260559	Condition	fCondorRmdir	557:20:14496:14507	1260239	0	True				
ANR	1260560	Identifier	fCondorRmdir		1260239	0					
ANR	1260561	ExpressionStatement	"rm_buf += "" /c"""	558:14:14524:14539	1260239	1	True				
ANR	1260562	AssignmentExpression	"rm_buf += "" /c"""		1260239	0		+=			
ANR	1260563	Identifier	rm_buf		1260239	0					
ANR	1260564	PrimaryExpression	""" /c"""		1260239	1					
ANR	1260565	ExpressionStatement	"rm_buf += "" \\"""""	560:11:14580:14595	1260239	4	True				
ANR	1260566	AssignmentExpression	"rm_buf += "" \\"""""		1260239	0		+=			
ANR	1260567	Identifier	rm_buf		1260239	0					
ANR	1260568	PrimaryExpression	""" \\"""""		1260239	1					
ANR	1260569	ExpressionStatement	rm_buf += path	561:11:14608:14622	1260239	5	True				
ANR	1260570	AssignmentExpression	rm_buf += path		1260239	0		+=			
ANR	1260571	Identifier	rm_buf		1260239	0					
ANR	1260572	Identifier	path		1260239	1					
ANR	1260573	ExpressionStatement	"rm_buf += ""\\"""""	562:11:14635:14649	1260239	6	True				
ANR	1260574	AssignmentExpression	"rm_buf += ""\\"""""		1260239	0		+=			
ANR	1260575	Identifier	rm_buf		1260239	0					
ANR	1260576	PrimaryExpression	"""\\"""""		1260239	1					
ANR	1260577	ExpressionStatement	"dprintf ( D_ALWAYS , ""rmdirAttempt using command: %s\\n"" , rm_buf . Value ( ) )"	566:8:14684:14754	1260239	13	True				
ANR	1260578	CallExpression	"dprintf ( D_ALWAYS , ""rmdirAttempt using command: %s\\n"" , rm_buf . Value ( ) )"		1260239	0					
ANR	1260579	Callee	dprintf		1260239	0					
ANR	1260580	Identifier	dprintf		1260239	0					
ANR	1260581	ArgumentList	D_ALWAYS		1260239	1					
ANR	1260582	Argument	D_ALWAYS		1260239	0					
ANR	1260583	Identifier	D_ALWAYS		1260239	0					
ANR	1260584	Argument	"""rmdirAttempt using command: %s\\n"""		1260239	1					
ANR	1260585	PrimaryExpression	"""rmdirAttempt using command: %s\\n"""		1260239	0					
ANR	1260586	Argument	rm_buf . Value ( )		1260239	2					
ANR	1260587	CallExpression	rm_buf . Value ( )		1260239	0					
ANR	1260588	Callee	rm_buf . Value		1260239	0					
ANR	1260589	MemberAccess	rm_buf . Value		1260239	0					
ANR	1260590	Identifier	rm_buf		1260239	0					
ANR	1260591	Identifier	Value		1260239	1					
ANR	1260592	ArgumentList			1260239	1					
ANR	1260593	IfStatement	if ( rmdir_exe_p )		1260239	14					
ANR	1260594	Condition	rmdir_exe_p	570:12:14864:14874	1260239	0	True				
ANR	1260595	Identifier	rmdir_exe_p		1260239	0					
ANR	1260596	ExpressionStatement	free ( rmdir_exe_p )	570:25:14877:14895	1260239	1	True				
ANR	1260597	CallExpression	free ( rmdir_exe_p )		1260239	0					
ANR	1260598	Callee	free		1260239	0					
ANR	1260599	Identifier	free		1260239	0					
ANR	1260600	ArgumentList	rmdir_exe_p		1260239	1					
ANR	1260601	Argument	rmdir_exe_p		1260239	0					
ANR	1260602	Identifier	rmdir_exe_p		1260239	0					
ANR	1260603	IfStatement	if ( rmdir_opts_p )		1260239	15					
ANR	1260604	Condition	rmdir_opts_p	571:12:14909:14920	1260239	0	True				
ANR	1260605	Identifier	rmdir_opts_p		1260239	0					
ANR	1260606	ExpressionStatement	free ( rmdir_opts_p )	571:26:14923:14942	1260239	1	True				
ANR	1260607	CallExpression	free ( rmdir_opts_p )		1260239	0					
ANR	1260608	Callee	free		1260239	0					
ANR	1260609	Identifier	free		1260239	0					
ANR	1260610	ArgumentList	rmdir_opts_p		1260239	1					
ANR	1260611	Argument	rmdir_opts_p		1260239	0					
ANR	1260612	Identifier	rmdir_opts_p		1260239	0					
ANR	1260613	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory: about to call \\""%s\\"" as %s\\n"" , rm_buf . Value ( ) , log_msg )"	579:1:15056:15147	1260239	16	True				
ANR	1260614	CallExpression	"dprintf ( D_ALWAYS , ""Directory: about to call \\""%s\\"" as %s\\n"" , rm_buf . Value ( ) , log_msg )"		1260239	0					
ANR	1260615	Callee	dprintf		1260239	0					
ANR	1260616	Identifier	dprintf		1260239	0					
ANR	1260617	ArgumentList	D_ALWAYS		1260239	1					
ANR	1260618	Argument	D_ALWAYS		1260239	0					
ANR	1260619	Identifier	D_ALWAYS		1260239	0					
ANR	1260620	Argument	"""Directory: about to call \\""%s\\"" as %s\\n"""		1260239	1					
ANR	1260621	PrimaryExpression	"""Directory: about to call \\""%s\\"" as %s\\n"""		1260239	0					
ANR	1260622	Argument	rm_buf . Value ( )		1260239	2					
ANR	1260623	CallExpression	rm_buf . Value ( )		1260239	0					
ANR	1260624	Callee	rm_buf . Value		1260239	0					
ANR	1260625	MemberAccess	rm_buf . Value		1260239	0					
ANR	1260626	Identifier	rm_buf		1260239	0					
ANR	1260627	Identifier	Value		1260239	1					
ANR	1260628	ArgumentList			1260239	1					
ANR	1260629	Argument	log_msg		1260239	3					
ANR	1260630	Identifier	log_msg		1260239	0					
ANR	1260631	IfStatement	if ( want_priv_change )		1260239	17					
ANR	1260632	Condition	want_priv_change	589:5:15428:15443	1260239	0	True				
ANR	1260633	Identifier	want_priv_change		1260239	0					
ANR	1260634	CompoundStatement		127:24:3930:3930	1260239	1					
ANR	1260635	ExpressionStatement	set_priv ( saved_priv )	590:2:15451:15473	1260239	0	True				
ANR	1260636	CallExpression	set_priv ( saved_priv )		1260239	0					
ANR	1260637	Callee	set_priv		1260239	0					
ANR	1260638	Identifier	set_priv		1260239	0					
ANR	1260639	ArgumentList	saved_priv		1260239	1					
ANR	1260640	Argument	saved_priv		1260239	0					
ANR	1260641	Identifier	saved_priv		1260239	0					
ANR	1260642	IfStatement	if ( rval != 0 )		1260239	18					
ANR	1260643	Condition	rval != 0	593:5:15484:15492	1260239	0	True				
ANR	1260644	EqualityExpression	rval != 0		1260239	0		!=			
ANR	1260645	Identifier	rval		1260239	0					
ANR	1260646	PrimaryExpression	0		1260239	1					
ANR	1260647	CompoundStatement		132:2:3984:3999	1260239	1					
ANR	1260648	IdentifierDeclStatement	MyString errmsg ;	594:2:15501:15516	1260239	0	True				
ANR	1260649	IdentifierDecl	errmsg		1260239	0					
ANR	1260650	IdentifierDeclType	MyString		1260239	0					
ANR	1260651	Identifier	errmsg		1260239	1					
ANR	1260652	IfStatement	if ( rval < 0 )		1260239	1					
ANR	1260653	Condition	rval < 0	595:6:15524:15531	1260239	0	True				
ANR	1260654	RelationalExpression	rval < 0		1260239	0		<			
ANR	1260655	Identifier	rval		1260239	0					
ANR	1260656	PrimaryExpression	0		1260239	1					
ANR	1260657	CompoundStatement		133:17:4018:4018	1260239	1					
ANR	1260658	ExpressionStatement	"errmsg = ""my_spawnl returned """	596:3:15540:15570	1260239	0	True				
ANR	1260659	AssignmentExpression	"errmsg = ""my_spawnl returned """		1260239	0		=			
ANR	1260660	Identifier	errmsg		1260239	0					
ANR	1260661	PrimaryExpression	"""my_spawnl returned """		1260239	1					
ANR	1260662	ExpressionStatement	errmsg += rval	597:3:15575:15589	1260239	1	True				
ANR	1260663	AssignmentExpression	errmsg += rval		1260239	0		+=			
ANR	1260664	Identifier	errmsg		1260239	0					
ANR	1260665	Identifier	rval		1260239	1					
ANR	1260666	ElseStatement	else		1260239	0					
ANR	1260667	CompoundStatement		136:9:4083:4083	1260239	0					
ANR	1260668	ExpressionStatement	"errmsg = ""/bin/rm """	599:3:15605:15624	1260239	0	True				
ANR	1260669	AssignmentExpression	"errmsg = ""/bin/rm """		1260239	0		=			
ANR	1260670	Identifier	errmsg		1260239	0					
ANR	1260671	PrimaryExpression	"""/bin/rm """		1260239	1					
ANR	1260672	ExpressionStatement	"statusString ( rval , errmsg )"	600:3:15629:15657	1260239	1	True				
ANR	1260673	CallExpression	"statusString ( rval , errmsg )"		1260239	0					
ANR	1260674	Callee	statusString		1260239	0					
ANR	1260675	Identifier	statusString		1260239	0					
ANR	1260676	ArgumentList	rval		1260239	1					
ANR	1260677	Argument	rval		1260239	0					
ANR	1260678	Identifier	rval		1260239	0					
ANR	1260679	Argument	errmsg		1260239	1					
ANR	1260680	Identifier	errmsg		1260239	0					
ANR	1260681	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removing \\""%s\\"" as %s failed: %s\\n"" , path , log_msg , errmsg . Value ( ) )"	602:2:15665:15762	1260239	2	True				
ANR	1260682	CallExpression	"dprintf ( D_FULLDEBUG , ""Removing \\""%s\\"" as %s failed: %s\\n"" , path , log_msg , errmsg . Value ( ) )"		1260239	0					
ANR	1260683	Callee	dprintf		1260239	0					
ANR	1260684	Identifier	dprintf		1260239	0					
ANR	1260685	ArgumentList	D_FULLDEBUG		1260239	1					
ANR	1260686	Argument	D_FULLDEBUG		1260239	0					
ANR	1260687	Identifier	D_FULLDEBUG		1260239	0					
ANR	1260688	Argument	"""Removing \\""%s\\"" as %s failed: %s\\n"""		1260239	1					
ANR	1260689	PrimaryExpression	"""Removing \\""%s\\"" as %s failed: %s\\n"""		1260239	0					
ANR	1260690	Argument	path		1260239	2					
ANR	1260691	Identifier	path		1260239	0					
ANR	1260692	Argument	log_msg		1260239	3					
ANR	1260693	Identifier	log_msg		1260239	0					
ANR	1260694	Argument	errmsg . Value ( )		1260239	4					
ANR	1260695	CallExpression	errmsg . Value ( )		1260239	0					
ANR	1260696	Callee	errmsg . Value		1260239	0					
ANR	1260697	MemberAccess	errmsg . Value		1260239	0					
ANR	1260698	Identifier	errmsg		1260239	0					
ANR	1260699	Identifier	Value		1260239	1					
ANR	1260700	ArgumentList			1260239	1					
ANR	1260701	ReturnStatement	return false ;	604:2:15766:15778	1260239	3	True				
ANR	1260702	Identifier	false		1260239	0					
ANR	1260703	ReturnStatement	return true ;	606:1:15784:15795	1260239	19	True				
ANR	1260704	Identifier	true		1260239	0					
ANR	1260705	ReturnType	bool		1260239	1					
ANR	1260706	Identifier	Directory :: rmdirAttempt		1260239	2					
ANR	1260707	ParameterList	"const char * path , priv_state priv"		1260239	3					
ANR	1260708	Parameter	const char * path	462:25:11480:11495	1260239	0	True				
ANR	1260709	ParameterType	const char *		1260239	0					
ANR	1260710	Identifier	path		1260239	1					
ANR	1260711	Parameter	priv_state priv	462:43:11498:11512	1260239	1	True				
ANR	1260712	ParameterType	priv_state		1260239	0					
ANR	1260713	Identifier	priv		1260239	1					
ANR	1260714	CFGEntryNode	ENTRY		1260239		True				
ANR	1260715	CFGExitNode	EXIT		1260239		True				
ANR	1260716	Symbol	rmdir_opts_p		1260239						
ANR	1260717	Symbol	fNativeRmdir		1260239						
ANR	1260718	Symbol	rm_buf . Value		1260239						
ANR	1260719	Symbol	fCondorRmdir		1260239						
ANR	1260720	Symbol	PRIV_UNKNOWN		1260239						
ANR	1260721	Symbol	path		1260239						
ANR	1260722	Symbol	* rmdir_exe_p		1260239						
ANR	1260723	Symbol	exe		1260239						
ANR	1260724	Symbol	param		1260239						
ANR	1260725	Symbol	INVALID_FILE_ATTRIBUTES		1260239						
ANR	1260726	Symbol	rm_buf		1260239						
ANR	1260727	Symbol	rval		1260239						
ANR	1260728	Symbol	priv		1260239						
ANR	1260729	Symbol	strcasecmp		1260239						
ANR	1260730	Symbol	errmsg . Value		1260239						
ANR	1260731	Symbol	err		1260239						
ANR	1260732	Symbol	exe . find		1260239						
ANR	1260733	Symbol	log_msg		1260239						
ANR	1260734	Symbol	false		1260239						
ANR	1260735	Symbol	D_ALWAYS		1260239						
ANR	1260736	Symbol	errmsg		1260239						
ANR	1260737	Symbol	D_FULLDEBUG		1260239						
ANR	1260738	Symbol	GetFileAttributes		1260239						
ANR	1260739	Symbol	rmdir_exe_p		1260239						
ANR	1260740	Symbol	priv_identifier		1260239						
ANR	1260741	Symbol	set_priv		1260239						
ANR	1260742	Symbol	GetLastError		1260239						
ANR	1260743	Symbol	* rmdir_opts_p		1260239						
ANR	1260744	Symbol	get_priv		1260239						
ANR	1260745	Symbol	saved_priv		1260239						
ANR	1260746	Symbol	true		1260239						
ANR	1260747	Symbol	SIGood		1260239						
ANR	1260748	Symbol	want_priv_change		1260239						
ANR	1260749	Function	Directory :: setOwnerPriv	612:0:15816:16976							
ANR	1260750	FunctionDef	"Directory :: setOwnerPriv (const char * path , si_error_t & err)"		1260749	0					
ANR	1260751	CompoundStatement		614:0:15887:16976	1260749	0					
ANR	1260752	IdentifierDeclStatement	uid_t uid ;	615:1:15890:15899	1260749	0	True				
ANR	1260753	IdentifierDecl	uid		1260749	0					
ANR	1260754	IdentifierDeclType	uid_t		1260749	0					
ANR	1260755	Identifier	uid		1260749	1					
ANR	1260756	IdentifierDeclStatement	gid_t gid ;	616:1:15902:15911	1260749	1	True				
ANR	1260757	IdentifierDecl	gid		1260749	0					
ANR	1260758	IdentifierDeclType	gid_t		1260749	0					
ANR	1260759	Identifier	gid		1260749	1					
ANR	1260760	IdentifierDeclStatement	bool is_root_dir = false ;	617:1:15914:15938	1260749	2	True				
ANR	1260761	IdentifierDecl	is_root_dir = false		1260749	0					
ANR	1260762	IdentifierDeclType	bool		1260749	0					
ANR	1260763	Identifier	is_root_dir		1260749	1					
ANR	1260764	AssignmentExpression	is_root_dir = false		1260749	2		=			
ANR	1260765	Identifier	false		1260749	0					
ANR	1260766	Identifier	false		1260749	1					
ANR	1260767	IfStatement	"if ( ! strcmp ( path , curr_dir ) )"		1260749	3					
ANR	1260768	Condition	"! strcmp ( path , curr_dir )"	619:5:15946:15969	1260749	0	True				
ANR	1260769	UnaryOperationExpression	"! strcmp ( path , curr_dir )"		1260749	0					
ANR	1260770	UnaryOperator	!		1260749	0					
ANR	1260771	CallExpression	"strcmp ( path , curr_dir )"		1260749	1					
ANR	1260772	Callee	strcmp		1260749	0					
ANR	1260773	Identifier	strcmp		1260749	0					
ANR	1260774	ArgumentList	path		1260749	1					
ANR	1260775	Argument	path		1260749	0					
ANR	1260776	Identifier	path		1260749	0					
ANR	1260777	Argument	curr_dir		1260749	1					
ANR	1260778	Identifier	curr_dir		1260749	0					
ANR	1260779	CompoundStatement		6:32:85:85	1260749	1					
ANR	1260780	ExpressionStatement	is_root_dir = true	620:2:15977:15995	1260749	0	True				
ANR	1260781	AssignmentExpression	is_root_dir = true		1260749	0		=			
ANR	1260782	Identifier	is_root_dir		1260749	0					
ANR	1260783	Identifier	true		1260749	1					
ANR	1260784	IfStatement	if ( is_root_dir && owner_ids_inited )		1260749	4					
ANR	1260785	Condition	is_root_dir && owner_ids_inited	623:5:16007:16037	1260749	0	True				
ANR	1260786	AndExpression	is_root_dir && owner_ids_inited		1260749	0		&&			
ANR	1260787	Identifier	is_root_dir		1260749	0					
ANR	1260788	Identifier	owner_ids_inited		1260749	1					
ANR	1260789	CompoundStatement		10:39:153:153	1260749	1					
ANR	1260790	ExpressionStatement	uid = owner_uid	624:2:16045:16060	1260749	0	True				
ANR	1260791	AssignmentExpression	uid = owner_uid		1260749	0		=			
ANR	1260792	Identifier	uid		1260749	0					
ANR	1260793	Identifier	owner_uid		1260749	1					
ANR	1260794	ExpressionStatement	gid = owner_gid	625:2:16064:16079	1260749	1	True				
ANR	1260795	AssignmentExpression	gid = owner_gid		1260749	0		=			
ANR	1260796	Identifier	gid		1260749	0					
ANR	1260797	Identifier	owner_gid		1260749	1					
ANR	1260798	ElseStatement	else		1260749	0					
ANR	1260799	CompoundStatement		13:8:201:201	1260749	0					
ANR	1260800	IfStatement	"if ( ! GetIds ( path , & uid , & gid , err ) )"		1260749	0					
ANR	1260801	Condition	"! GetIds ( path , & uid , & gid , err )"	629:6:16185:16217	1260749	0	True				
ANR	1260802	UnaryOperationExpression	"! GetIds ( path , & uid , & gid , err )"		1260749	0					
ANR	1260803	UnaryOperator	!		1260749	0					
ANR	1260804	CallExpression	"GetIds ( path , & uid , & gid , err )"		1260749	1					
ANR	1260805	Callee	GetIds		1260749	0					
ANR	1260806	Identifier	GetIds		1260749	0					
ANR	1260807	ArgumentList	path		1260749	1					
ANR	1260808	Argument	path		1260749	0					
ANR	1260809	Identifier	path		1260749	0					
ANR	1260810	Argument	& uid		1260749	1					
ANR	1260811	UnaryOperationExpression	& uid		1260749	0					
ANR	1260812	UnaryOperator	&		1260749	0					
ANR	1260813	Identifier	uid		1260749	1					
ANR	1260814	Argument	& gid		1260749	2					
ANR	1260815	UnaryOperationExpression	& gid		1260749	0					
ANR	1260816	UnaryOperator	&		1260749	0					
ANR	1260817	Identifier	gid		1260749	1					
ANR	1260818	Argument	err		1260749	3					
ANR	1260819	Identifier	err		1260749	0					
ANR	1260820	CompoundStatement		16:42:333:333	1260749	1					
ANR	1260821	IfStatement	if ( err == SINoFile )		1260749	0					
ANR	1260822	Condition	err == SINoFile	630:7:16230:16244	1260749	0	True				
ANR	1260823	EqualityExpression	err == SINoFile		1260749	0		==			
ANR	1260824	Identifier	err		1260749	0					
ANR	1260825	Identifier	SINoFile		1260749	1					
ANR	1260826	CompoundStatement		17:24:359:359	1260749	1					
ANR	1260827	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"" , path )"	631:4:16253:16343	1260749	0	True				
ANR	1260828	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"" , path )"		1260749	0					
ANR	1260829	Callee	dprintf		1260749	0					
ANR	1260830	Identifier	dprintf		1260749	0					
ANR	1260831	ArgumentList	D_FULLDEBUG		1260749	1					
ANR	1260832	Argument	D_FULLDEBUG		1260749	0					
ANR	1260833	Identifier	D_FULLDEBUG		1260749	0					
ANR	1260834	Argument	"""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"""		1260749	1					
ANR	1260835	PrimaryExpression	"""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"""		1260749	0					
ANR	1260836	Argument	path		1260749	2					
ANR	1260837	Identifier	path		1260749	0					
ANR	1260838	ElseStatement	else		1260749	0					
ANR	1260839	CompoundStatement		19:10:467:467	1260749	0					
ANR	1260840	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory::setOwnerPriv() -- failed to find owner of %s\\n"" , path )"	633:4:16361:16447	1260749	0	True				
ANR	1260841	CallExpression	"dprintf ( D_ALWAYS , ""Directory::setOwnerPriv() -- failed to find owner of %s\\n"" , path )"		1260749	0					
ANR	1260842	Callee	dprintf		1260749	0					
ANR	1260843	Identifier	dprintf		1260749	0					
ANR	1260844	ArgumentList	D_ALWAYS		1260749	1					
ANR	1260845	Argument	D_ALWAYS		1260749	0					
ANR	1260846	Identifier	D_ALWAYS		1260749	0					
ANR	1260847	Argument	"""Directory::setOwnerPriv() -- failed to find owner of %s\\n"""		1260749	1					
ANR	1260848	PrimaryExpression	"""Directory::setOwnerPriv() -- failed to find owner of %s\\n"""		1260749	0					
ANR	1260849	Argument	path		1260749	2					
ANR	1260850	Identifier	path		1260749	0					
ANR	1260851	ReturnStatement	return PRIV_UNKNOWN ;	635:3:16457:16476	1260749	1	True				
ANR	1260852	Identifier	PRIV_UNKNOWN		1260749	0					
ANR	1260853	IfStatement	if ( is_root_dir )		1260749	1					
ANR	1260854	Condition	is_root_dir	637:6:16488:16498	1260749	0	True				
ANR	1260855	Identifier	is_root_dir		1260749	0					
ANR	1260856	CompoundStatement		24:20:614:614	1260749	1					
ANR	1260857	ExpressionStatement	owner_uid = uid	638:3:16507:16522	1260749	0	True				
ANR	1260858	AssignmentExpression	owner_uid = uid		1260749	0		=			
ANR	1260859	Identifier	owner_uid		1260749	0					
ANR	1260860	Identifier	uid		1260749	1					
ANR	1260861	ExpressionStatement	owner_gid = gid	639:3:16527:16542	1260749	1	True				
ANR	1260862	AssignmentExpression	owner_gid = gid		1260749	0		=			
ANR	1260863	Identifier	owner_gid		1260749	0					
ANR	1260864	Identifier	gid		1260749	1					
ANR	1260865	ExpressionStatement	owner_ids_inited = true	640:3:16547:16570	1260749	2	True				
ANR	1260866	AssignmentExpression	owner_ids_inited = true		1260749	0		=			
ANR	1260867	Identifier	owner_ids_inited		1260749	0					
ANR	1260868	Identifier	true		1260749	1					
ANR	1260869	IfStatement	if ( ( 0 == uid ) || ( 0 == gid ) )		1260749	5					
ANR	1260870	Condition	( 0 == uid ) || ( 0 == gid )	645:6:16627:16650	1260749	0	True				
ANR	1260871	OrExpression	( 0 == uid ) || ( 0 == gid )		1260749	0		||			
ANR	1260872	EqualityExpression	0 == uid		1260749	0		==			
ANR	1260873	PrimaryExpression	0		1260749	0					
ANR	1260874	Identifier	uid		1260749	1					
ANR	1260875	EqualityExpression	0 == gid		1260749	1		==			
ANR	1260876	PrimaryExpression	0		1260749	0					
ANR	1260877	Identifier	gid		1260749	1					
ANR	1260878	CompoundStatement		32:33:766:766	1260749	1					
ANR	1260879	Statement	dprintf	646:2:16658:16664	1260749	0	True				
ANR	1260880	Statement	(	646:9:16665:16665	1260749	1	True				
ANR	1260881	Statement	D_ALWAYS	646:11:16667:16674	1260749	2	True				
ANR	1260882	Statement	","	646:19:16675:16675	1260749	3	True				
ANR	1260883	Statement	"""Directory::setOwnerPriv(): NOT changing """	646:21:16677:16718	1260749	4	True				
ANR	1260884	Statement	"""priv state to owner of \\""%s\\"" (%d.%d), that's root!\\n"""	647:5:16725:16779	1260749	5	True				
ANR	1260885	Statement	","	647:60:16780:16780	1260749	6	True				
ANR	1260886	Statement	path	648:5:16787:16790	1260749	7	True				
ANR	1260887	Statement	","	648:9:16791:16791	1260749	8	True				
ANR	1260888	Statement	(	648:11:16793:16793	1260749	9	True				
ANR	1260889	Statement	int	648:12:16794:16796	1260749	10	True				
ANR	1260890	Statement	)	648:15:16797:16797	1260749	11	True				
ANR	1260891	Statement	uid	648:16:16798:16800	1260749	12	True				
ANR	1260892	Statement	","	648:19:16801:16801	1260749	13	True				
ANR	1260893	Statement	(	648:21:16803:16803	1260749	14	True				
ANR	1260894	Statement	int	648:22:16804:16806	1260749	15	True				
ANR	1260895	Statement	)	648:25:16807:16807	1260749	16	True				
ANR	1260896	Statement	gid	648:26:16808:16810	1260749	17	True				
ANR	1260897	Statement	)	648:30:16812:16812	1260749	18	True				
ANR	1260898	ExpressionStatement		648:31:16813:16813	1260749	19	True				
ANR	1260899	ReturnStatement	return PRIV_UNKNOWN ;	649:2:16817:16836	1260749	20	True				
ANR	1260900	Identifier	PRIV_UNKNOWN		1260749	0					
ANR	1260901	ExpressionStatement	uninit_file_owner_ids ( )	653:1:16887:16910	1260749	6	True				
ANR	1260902	CallExpression	uninit_file_owner_ids ( )		1260749	0					
ANR	1260903	Callee	uninit_file_owner_ids		1260749	0					
ANR	1260904	Identifier	uninit_file_owner_ids		1260749	0					
ANR	1260905	ArgumentList			1260749	1					
ANR	1260906	ExpressionStatement	"set_file_owner_ids ( uid , gid )"	654:1:16913:16943	1260749	7	True				
ANR	1260907	CallExpression	"set_file_owner_ids ( uid , gid )"		1260749	0					
ANR	1260908	Callee	set_file_owner_ids		1260749	0					
ANR	1260909	Identifier	set_file_owner_ids		1260749	0					
ANR	1260910	ArgumentList	uid		1260749	1					
ANR	1260911	Argument	uid		1260749	0					
ANR	1260912	Identifier	uid		1260749	0					
ANR	1260913	Argument	gid		1260749	1					
ANR	1260914	Identifier	gid		1260749	0					
ANR	1260915	ReturnStatement	return set_file_owner_priv ( ) ;	655:1:16946:16974	1260749	8	True				
ANR	1260916	CallExpression	set_file_owner_priv ( )		1260749	0					
ANR	1260917	Callee	set_file_owner_priv		1260749	0					
ANR	1260918	Identifier	set_file_owner_priv		1260749	0					
ANR	1260919	ArgumentList			1260749	1					
ANR	1260920	ReturnType	priv_state		1260749	1					
ANR	1260921	Identifier	Directory :: setOwnerPriv		1260749	2					
ANR	1260922	ParameterList	"const char * path , si_error_t & err"		1260749	3					
ANR	1260923	Parameter	const char * path	613:25:15852:15867	1260749	0	True				
ANR	1260924	ParameterType	const char *		1260749	0					
ANR	1260925	Identifier	path		1260749	1					
ANR	1260926	Parameter	si_error_t & err	613:43:15870:15884	1260749	1	True				
ANR	1260927	ParameterType	si_error_t &		1260749	0					
ANR	1260928	Identifier	err		1260749	1					
ANR	1260929	CFGEntryNode	ENTRY		1260749		True				
ANR	1260930	CFGExitNode	EXIT		1260749		True				
ANR	1260931	Symbol	strcmp		1260749						
ANR	1260932	Symbol	gid		1260749						
ANR	1260933	Symbol	err		1260749						
ANR	1260934	Symbol	owner_gid		1260749						
ANR	1260935	Symbol	is_root_dir		1260749						
ANR	1260936	Symbol	set_file_owner_priv		1260749						
ANR	1260937	Symbol	false		1260749						
ANR	1260938	Symbol	D_ALWAYS		1260749						
ANR	1260939	Symbol	curr_dir		1260749						
ANR	1260940	Symbol	D_FULLDEBUG		1260749						
ANR	1260941	Symbol	PRIV_UNKNOWN		1260749						
ANR	1260942	Symbol	& gid		1260749						
ANR	1260943	Symbol	GetIds		1260749						
ANR	1260944	Symbol	path		1260749						
ANR	1260945	Symbol	uid		1260749						
ANR	1260946	Symbol	& uid		1260749						
ANR	1260947	Symbol	SINoFile		1260749						
ANR	1260948	Symbol	owner_ids_inited		1260749						
ANR	1260949	Symbol	owner_uid		1260749						
ANR	1260950	Symbol	true		1260749						
ANR	1260951	Function	Directory :: chmodDirectories	659:0:16980:19065							
ANR	1260952	FunctionDef	Directory :: chmodDirectories (mode_t mode)		1260951	0					
ANR	1260953	CompoundStatement		661:0:17028:19065	1260951	0					
ANR	1260954	IdentifierDeclStatement	const char * thefile = NULL ;	662:1:17031:17057	1260951	0	True				
ANR	1260955	IdentifierDecl	* thefile = NULL		1260951	0					
ANR	1260956	IdentifierDeclType	const char *		1260951	0					
ANR	1260957	Identifier	thefile		1260951	1					
ANR	1260958	AssignmentExpression	* thefile = NULL		1260951	2		=			
ANR	1260959	Identifier	NULL		1260951	0					
ANR	1260960	Identifier	NULL		1260951	1					
ANR	1260961	IdentifierDeclStatement	int chmod_rval ;	663:1:17061:17075	1260951	1	True				
ANR	1260962	IdentifierDecl	chmod_rval		1260951	0					
ANR	1260963	IdentifierDeclType	int		1260951	0					
ANR	1260964	Identifier	chmod_rval		1260951	1					
ANR	1260965	IdentifierDeclStatement	bool rval = true ;	664:1:17078:17094	1260951	2	True				
ANR	1260966	IdentifierDecl	rval = true		1260951	0					
ANR	1260967	IdentifierDeclType	bool		1260951	0					
ANR	1260968	Identifier	rval		1260951	1					
ANR	1260969	AssignmentExpression	rval = true		1260951	2		=			
ANR	1260970	Identifier	true		1260951	0					
ANR	1260971	Identifier	true		1260951	1					
ANR	1260972	IdentifierDeclStatement	priv_state saved_priv = PRIV_UNKNOWN ;	665:1:17097:17131	1260951	3	True				
ANR	1260973	IdentifierDecl	saved_priv = PRIV_UNKNOWN		1260951	0					
ANR	1260974	IdentifierDeclType	priv_state		1260951	0					
ANR	1260975	Identifier	saved_priv		1260951	1					
ANR	1260976	AssignmentExpression	saved_priv = PRIV_UNKNOWN		1260951	2		=			
ANR	1260977	Identifier	PRIV_UNKNOWN		1260951	0					
ANR	1260978	Identifier	PRIV_UNKNOWN		1260951	1					
ANR	1260979	IfStatement	if ( want_priv_change )		1260951	4					
ANR	1260980	Condition	want_priv_change	674:5:17560:17575	1260951	0	True				
ANR	1260981	Identifier	want_priv_change		1260951	0					
ANR	1260982	CompoundStatement		15:2:554:577	1260951	1					
ANR	1260983	IdentifierDeclStatement	si_error_t err = SIGood ;	675:2:17583:17606	1260951	0	True				
ANR	1260984	IdentifierDecl	err = SIGood		1260951	0					
ANR	1260985	IdentifierDeclType	si_error_t		1260951	0					
ANR	1260986	Identifier	err		1260951	1					
ANR	1260987	AssignmentExpression	err = SIGood		1260951	2		=			
ANR	1260988	Identifier	SIGood		1260951	0					
ANR	1260989	Identifier	SIGood		1260951	1					
ANR	1260990	ExpressionStatement	"saved_priv = setOwnerPriv ( GetDirectoryPath ( ) , err )"	676:2:17610:17662	1260951	1	True				
ANR	1260991	AssignmentExpression	"saved_priv = setOwnerPriv ( GetDirectoryPath ( ) , err )"		1260951	0		=			
ANR	1260992	Identifier	saved_priv		1260951	0					
ANR	1260993	CallExpression	"setOwnerPriv ( GetDirectoryPath ( ) , err )"		1260951	1					
ANR	1260994	Callee	setOwnerPriv		1260951	0					
ANR	1260995	Identifier	setOwnerPriv		1260951	0					
ANR	1260996	ArgumentList	GetDirectoryPath ( )		1260951	1					
ANR	1260997	Argument	GetDirectoryPath ( )		1260951	0					
ANR	1260998	CallExpression	GetDirectoryPath ( )		1260951	0					
ANR	1260999	Callee	GetDirectoryPath		1260951	0					
ANR	1261000	Identifier	GetDirectoryPath		1260951	0					
ANR	1261001	ArgumentList			1260951	1					
ANR	1261002	Argument	err		1260951	1					
ANR	1261003	Identifier	err		1260951	0					
ANR	1261004	IfStatement	if ( saved_priv == PRIV_UNKNOWN )		1260951	2					
ANR	1261005	Condition	saved_priv == PRIV_UNKNOWN	677:6:17670:17695	1260951	0	True				
ANR	1261006	EqualityExpression	saved_priv == PRIV_UNKNOWN		1260951	0		==			
ANR	1261007	Identifier	saved_priv		1260951	0					
ANR	1261008	Identifier	PRIV_UNKNOWN		1260951	1					
ANR	1261009	CompoundStatement		17:35:670:670	1260951	1					
ANR	1261010	IfStatement	if ( err == SINoFile )		1260951	0					
ANR	1261011	Condition	err == SINoFile	678:7:17708:17722	1260951	0	True				
ANR	1261012	EqualityExpression	err == SINoFile		1260951	0		==			
ANR	1261013	Identifier	err		1260951	0					
ANR	1261014	Identifier	SINoFile		1260951	1					
ANR	1261015	Statement	dprintf	679:4:17729:17735	1260951	1	True				
ANR	1261016	ElseStatement	else		1260951	0					
ANR	1261017	Statement	dprintf	683:4:17873:17879	1260951	0	True				
ANR	1261018	Statement	(	679:11:17736:17736	1260951	1	True				
ANR	1261019	Statement	D_FULLDEBUG	679:13:17738:17748	1260951	2	True				
ANR	1261020	Statement	","	679:24:17749:17749	1260951	3	True				
ANR	1261021	Statement	"""Directory::chmodDirectories(): """	679:26:17751:17783	1260951	4	True				
ANR	1261022	Statement	"""path \\""%s\\"" does not exist (yet).\\n"""	680:7:17792:17828	1260951	5	True				
ANR	1261023	Statement	","	680:44:17829:17829	1260951	6	True				
ANR	1261024	Statement	GetDirectoryPath	681:7:17838:17853	1260951	7	True				
ANR	1261025	Statement	(	681:23:17854:17854	1260951	8	True				
ANR	1261026	Statement	)	681:24:17855:17855	1260951	9	True				
ANR	1261027	Statement	)	681:26:17857:17857	1260951	10	True				
ANR	1261028	ExpressionStatement		681:27:17858:17858	1260951	11	True				
ANR	1261029	Statement	(	683:11:17880:17880	1260951	12	True				
ANR	1261030	Statement	D_ALWAYS	683:13:17882:17889	1260951	13	True				
ANR	1261031	Statement	","	683:21:17890:17890	1260951	14	True				
ANR	1261032	Statement	"""Directory::chmodDirectories(): """	683:23:17892:17924	1260951	15	True				
ANR	1261033	Statement	"""failed to find owner of \\""%s\\""\\n"""	684:6:17932:17965	1260951	16	True				
ANR	1261034	Statement	","	684:40:17966:17966	1260951	17	True				
ANR	1261035	Statement	GetDirectoryPath	685:6:17974:17989	1260951	18	True				
ANR	1261036	Statement	(	685:22:17990:17990	1260951	19	True				
ANR	1261037	Statement	)	685:23:17991:17991	1260951	20	True				
ANR	1261038	Statement	)	685:25:17993:17993	1260951	21	True				
ANR	1261039	ExpressionStatement		685:26:17994:17994	1260951	22	True				
ANR	1261040	ReturnStatement	return false ;	689:3:18170:18182	1260951	23	True				
ANR	1261041	Identifier	false		1260951	0					
ANR	1261042	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to chmod %s as %s\\n"" , GetDirectoryPath ( ) , priv_identifier ( get_priv ( ) ) )"	694:1:18225:18335	1260951	5	True				
ANR	1261043	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to chmod %s as %s\\n"" , GetDirectoryPath ( ) , priv_identifier ( get_priv ( ) ) )"		1260951	0					
ANR	1261044	Callee	dprintf		1260951	0					
ANR	1261045	Identifier	dprintf		1260951	0					
ANR	1261046	ArgumentList	D_FULLDEBUG		1260951	1					
ANR	1261047	Argument	D_FULLDEBUG		1260951	0					
ANR	1261048	Identifier	D_FULLDEBUG		1260951	0					
ANR	1261049	Argument	"""Attempting to chmod %s as %s\\n"""		1260951	1					
ANR	1261050	PrimaryExpression	"""Attempting to chmod %s as %s\\n"""		1260951	0					
ANR	1261051	Argument	GetDirectoryPath ( )		1260951	2					
ANR	1261052	CallExpression	GetDirectoryPath ( )		1260951	0					
ANR	1261053	Callee	GetDirectoryPath		1260951	0					
ANR	1261054	Identifier	GetDirectoryPath		1260951	0					
ANR	1261055	ArgumentList			1260951	1					
ANR	1261056	Argument	priv_identifier ( get_priv ( ) )		1260951	3					
ANR	1261057	CallExpression	priv_identifier ( get_priv ( ) )		1260951	0					
ANR	1261058	Callee	priv_identifier		1260951	0					
ANR	1261059	Identifier	priv_identifier		1260951	0					
ANR	1261060	ArgumentList	get_priv ( )		1260951	1					
ANR	1261061	Argument	get_priv ( )		1260951	0					
ANR	1261062	CallExpression	get_priv ( )		1260951	0					
ANR	1261063	Callee	get_priv		1260951	0					
ANR	1261064	Identifier	get_priv		1260951	0					
ANR	1261065	ArgumentList			1260951	1					
ANR	1261066	ExpressionStatement	"chmod_rval = chmod ( GetDirectoryPath ( ) , mode )"	698:1:18399:18445	1260951	6	True				
ANR	1261067	AssignmentExpression	"chmod_rval = chmod ( GetDirectoryPath ( ) , mode )"		1260951	0		=			
ANR	1261068	Identifier	chmod_rval		1260951	0					
ANR	1261069	CallExpression	"chmod ( GetDirectoryPath ( ) , mode )"		1260951	1					
ANR	1261070	Callee	chmod		1260951	0					
ANR	1261071	Identifier	chmod		1260951	0					
ANR	1261072	ArgumentList	GetDirectoryPath ( )		1260951	1					
ANR	1261073	Argument	GetDirectoryPath ( )		1260951	0					
ANR	1261074	CallExpression	GetDirectoryPath ( )		1260951	0					
ANR	1261075	Callee	GetDirectoryPath		1260951	0					
ANR	1261076	Identifier	GetDirectoryPath		1260951	0					
ANR	1261077	ArgumentList			1260951	1					
ANR	1261078	Argument	mode		1260951	1					
ANR	1261079	Identifier	mode		1260951	0					
ANR	1261080	IfStatement	if ( chmod_rval < 0 )		1260951	7					
ANR	1261081	Condition	chmod_rval < 0	700:5:18453:18466	1260951	0	True				
ANR	1261082	RelationalExpression	chmod_rval < 0		1260951	0		<			
ANR	1261083	Identifier	chmod_rval		1260951	0					
ANR	1261084	PrimaryExpression	0		1260951	1					
ANR	1261085	CompoundStatement		40:22:1441:1441	1260951	1					
ANR	1261086	ExpressionStatement	"dprintf ( D_ALWAYS , ""chmod(%s) failed: %s (errno %d)\\n"" , GetDirectoryPath ( ) , strerror ( errno ) , errno )"	701:2:18474:18579	1260951	0	True				
ANR	1261087	CallExpression	"dprintf ( D_ALWAYS , ""chmod(%s) failed: %s (errno %d)\\n"" , GetDirectoryPath ( ) , strerror ( errno ) , errno )"		1260951	0					
ANR	1261088	Callee	dprintf		1260951	0					
ANR	1261089	Identifier	dprintf		1260951	0					
ANR	1261090	ArgumentList	D_ALWAYS		1260951	1					
ANR	1261091	Argument	D_ALWAYS		1260951	0					
ANR	1261092	Identifier	D_ALWAYS		1260951	0					
ANR	1261093	Argument	"""chmod(%s) failed: %s (errno %d)\\n"""		1260951	1					
ANR	1261094	PrimaryExpression	"""chmod(%s) failed: %s (errno %d)\\n"""		1260951	0					
ANR	1261095	Argument	GetDirectoryPath ( )		1260951	2					
ANR	1261096	CallExpression	GetDirectoryPath ( )		1260951	0					
ANR	1261097	Callee	GetDirectoryPath		1260951	0					
ANR	1261098	Identifier	GetDirectoryPath		1260951	0					
ANR	1261099	ArgumentList			1260951	1					
ANR	1261100	Argument	strerror ( errno )		1260951	3					
ANR	1261101	CallExpression	strerror ( errno )		1260951	0					
ANR	1261102	Callee	strerror		1260951	0					
ANR	1261103	Identifier	strerror		1260951	0					
ANR	1261104	ArgumentList	errno		1260951	1					
ANR	1261105	Argument	errno		1260951	0					
ANR	1261106	Identifier	errno		1260951	0					
ANR	1261107	Argument	errno		1260951	4					
ANR	1261108	Identifier	errno		1260951	0					
ANR	1261109	ExpressionStatement	return_and_resetpriv ( false )	703:2:18583:18612	1260951	1	True				
ANR	1261110	CallExpression	return_and_resetpriv ( false )		1260951	0					
ANR	1261111	Callee	return_and_resetpriv		1260951	0					
ANR	1261112	Identifier	return_and_resetpriv		1260951	0					
ANR	1261113	ArgumentList	false		1260951	1					
ANR	1261114	Argument	false		1260951	0					
ANR	1261115	Identifier	false		1260951	0					
ANR	1261116	ExpressionStatement	Rewind ( )	710:1:18831:18839	1260951	8	True				
ANR	1261117	CallExpression	Rewind ( )		1260951	0					
ANR	1261118	Callee	Rewind		1260951	0					
ANR	1261119	Identifier	Rewind		1260951	0					
ANR	1261120	ArgumentList			1260951	1					
ANR	1261121	WhileStatement	while ( ( thefile = Next ( ) ) )		1260951	9					
ANR	1261122	Condition	thefile = Next ( )	711:8:18849:18866	1260951	0	True				
ANR	1261123	AssignmentExpression	thefile = Next ( )		1260951	0		=			
ANR	1261124	Identifier	thefile		1260951	0					
ANR	1261125	CallExpression	Next ( )		1260951	1					
ANR	1261126	Callee	Next		1260951	0					
ANR	1261127	Identifier	Next		1260951	0					
ANR	1261128	ArgumentList			1260951	1					
ANR	1261129	CompoundStatement		51:29:1841:1841	1260951	1					
ANR	1261130	IfStatement	if ( IsDirectory ( ) && ! IsSymlink ( ) )		1260951	0					
ANR	1261131	Condition	IsDirectory ( ) && ! IsSymlink ( )	712:6:18878:18906	1260951	0	True				
ANR	1261132	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		1260951	0		&&			
ANR	1261133	CallExpression	IsDirectory ( )		1260951	0					
ANR	1261134	Callee	IsDirectory		1260951	0					
ANR	1261135	Identifier	IsDirectory		1260951	0					
ANR	1261136	ArgumentList			1260951	1					
ANR	1261137	UnaryOperationExpression	! IsSymlink ( )		1260951	1					
ANR	1261138	UnaryOperator	!		1260951	0					
ANR	1261139	CallExpression	IsSymlink ( )		1260951	1					
ANR	1261140	Callee	IsSymlink		1260951	0					
ANR	1261141	Identifier	IsSymlink		1260951	0					
ANR	1261142	ArgumentList			1260951	1					
ANR	1261143	CompoundStatement		53:3:1886:1930	1260951	1					
ANR	1261144	IdentifierDeclStatement	"Directory subdir ( curr , desired_priv_state ) ;"	713:3:18915:18959	1260951	0	True				
ANR	1261145	IdentifierDecl	"subdir ( curr , desired_priv_state )"		1260951	0					
ANR	1261146	IdentifierDeclType	Directory		1260951	0					
ANR	1261147	Identifier	subdir		1260951	1					
ANR	1261148	Expression	"curr , desired_priv_state"		1260951	2					
ANR	1261149	Identifier	curr		1260951	0					
ANR	1261150	Identifier	desired_priv_state		1260951	1					
ANR	1261151	IfStatement	if ( ! subdir . chmodDirectories ( mode ) )		1260951	1					
ANR	1261152	Condition	! subdir . chmodDirectories ( mode )	714:7:18968:18998	1260951	0	True				
ANR	1261153	UnaryOperationExpression	! subdir . chmodDirectories ( mode )		1260951	0					
ANR	1261154	UnaryOperator	!		1260951	0					
ANR	1261155	CallExpression	subdir . chmodDirectories ( mode )		1260951	1					
ANR	1261156	Callee	subdir . chmodDirectories		1260951	0					
ANR	1261157	MemberAccess	subdir . chmodDirectories		1260951	0					
ANR	1261158	Identifier	subdir		1260951	0					
ANR	1261159	Identifier	chmodDirectories		1260951	1					
ANR	1261160	ArgumentList	mode		1260951	1					
ANR	1261161	Argument	mode		1260951	0					
ANR	1261162	Identifier	mode		1260951	0					
ANR	1261163	CompoundStatement		54:41:1973:1973	1260951	1					
ANR	1261164	ExpressionStatement	rval = false	715:4:19008:19020	1260951	0	True				
ANR	1261165	AssignmentExpression	rval = false		1260951	0		=			
ANR	1261166	Identifier	rval		1260951	0					
ANR	1261167	Identifier	false		1260951	1					
ANR	1261168	ExpressionStatement	return_and_resetpriv ( rval )	719:1:19035:19063	1260951	10	True				
ANR	1261169	CallExpression	return_and_resetpriv ( rval )		1260951	0					
ANR	1261170	Callee	return_and_resetpriv		1260951	0					
ANR	1261171	Identifier	return_and_resetpriv		1260951	0					
ANR	1261172	ArgumentList	rval		1260951	1					
ANR	1261173	Argument	rval		1260951	0					
ANR	1261174	Identifier	rval		1260951	0					
ANR	1261175	ReturnType	bool		1260951	1					
ANR	1261176	Identifier	Directory :: chmodDirectories		1260951	2					
ANR	1261177	ParameterList	mode_t mode		1260951	3					
ANR	1261178	Parameter	mode_t mode	660:29:17014:17024	1260951	0	True				
ANR	1261179	ParameterType	mode_t		1260951	0					
ANR	1261180	Identifier	mode		1260951	1					
ANR	1261181	CFGEntryNode	ENTRY		1260951		True				
ANR	1261182	CFGExitNode	EXIT		1260951		True				
ANR	1261183	Symbol	IsDirectory		1260951						
ANR	1261184	Symbol	setOwnerPriv		1260951						
ANR	1261185	Symbol	chmod_rval		1260951						
ANR	1261186	Symbol	PRIV_UNKNOWN		1260951						
ANR	1261187	Symbol	mode		1260951						
ANR	1261188	Symbol	subdir		1260951						
ANR	1261189	Symbol	SINoFile		1260951						
ANR	1261190	Symbol	chmod		1260951						
ANR	1261191	Symbol	rval		1260951						
ANR	1261192	Symbol	errno		1260951						
ANR	1261193	Symbol	NULL		1260951						
ANR	1261194	Symbol	err		1260951						
ANR	1261195	Symbol	thefile		1260951						
ANR	1261196	Symbol	false		1260951						
ANR	1261197	Symbol	D_ALWAYS		1260951						
ANR	1261198	Symbol	subdir . chmodDirectories		1260951						
ANR	1261199	Symbol	D_FULLDEBUG		1260951						
ANR	1261200	Symbol	IsSymlink		1260951						
ANR	1261201	Symbol	priv_identifier		1260951						
ANR	1261202	Symbol	strerror		1260951						
ANR	1261203	Symbol	GetDirectoryPath		1260951						
ANR	1261204	Symbol	get_priv		1260951						
ANR	1261205	Symbol	Next		1260951						
ANR	1261206	Symbol	true		1260951						
ANR	1261207	Symbol	saved_priv		1260951						
ANR	1261208	Symbol	SIGood		1260951						
ANR	1261209	Symbol	want_priv_change		1260951						
ANR	1261210	Function	Directory :: Rewind	725:0:19091:21031							
ANR	1261211	FunctionDef	Directory :: Rewind ()		1261210	0					
ANR	1261212	CompoundStatement		727:0:19116:21031	1261210	0					
ANR	1261213	IfStatement	if ( curr )		1261210	0					
ANR	1261214	Condition	curr	728:5:19123:19126	1261210	0	True				
ANR	1261215	Identifier	curr		1261210	0					
ANR	1261216	CompoundStatement		2:12:13:13	1261210	1					
ANR	1261217	Statement	delete	729:2:19134:19139	1261210	0	True				
ANR	1261218	ExpressionStatement	curr	729:9:19141:19145	1261210	1	True				
ANR	1261219	Identifier	curr		1261210	0					
ANR	1261220	ExpressionStatement	curr = NULL	730:2:19149:19160	1261210	2	True				
ANR	1261221	AssignmentExpression	curr = NULL		1261210	0		=			
ANR	1261222	Identifier	curr		1261210	0					
ANR	1261223	Identifier	NULL		1261210	1					
ANR	1261224	ExpressionStatement	Set_Access_Priv ( )	733:1:19167:19184	1261210	1	True				
ANR	1261225	CallExpression	Set_Access_Priv ( )		1261210	0					
ANR	1261226	Callee	Set_Access_Priv		1261210	0					
ANR	1261227	Identifier	Set_Access_Priv		1261210	0					
ANR	1261228	ArgumentList			1261210	1					
ANR	1261229	IfStatement	if ( dirp == NULL )		1261210	2					
ANR	1261230	Condition	dirp == NULL	737:5:19215:19226	1261210	0	True				
ANR	1261231	EqualityExpression	dirp == NULL		1261210	0		==			
ANR	1261232	Identifier	dirp		1261210	0					
ANR	1261233	Identifier	NULL		1261210	1					
ANR	1261234	CompoundStatement		11:20:113:113	1261210	1					
ANR	1261235	ExpressionStatement	errno = 0	738:2:19234:19243	1261210	0	True				
ANR	1261236	AssignmentExpression	errno = 0		1261210	0		=			
ANR	1261237	Identifier	errno		1261210	0					
ANR	1261238	PrimaryExpression	0		1261210	1					
ANR	1261239	ExpressionStatement	dirp = condor_opendir ( curr_dir )	739:2:19247:19280	1261210	1	True				
ANR	1261240	AssignmentExpression	dirp = condor_opendir ( curr_dir )		1261210	0		=			
ANR	1261241	Identifier	dirp		1261210	0					
ANR	1261242	CallExpression	condor_opendir ( curr_dir )		1261210	1					
ANR	1261243	Callee	condor_opendir		1261210	0					
ANR	1261244	Identifier	condor_opendir		1261210	0					
ANR	1261245	ArgumentList	curr_dir		1261210	1					
ANR	1261246	Argument	curr_dir		1261210	0					
ANR	1261247	Identifier	curr_dir		1261210	0					
ANR	1261248	IfStatement	if ( dirp == NULL )		1261210	2					
ANR	1261249	Condition	dirp == NULL	740:6:19288:19299	1261210	0	True				
ANR	1261250	EqualityExpression	dirp == NULL		1261210	0		==			
ANR	1261251	Identifier	dirp		1261210	0					
ANR	1261252	Identifier	NULL		1261210	1					
ANR	1261253	CompoundStatement		31:3:863:914	1261210	1					
ANR	1261254	IfStatement	if ( ! want_priv_change )		1261210	0					
ANR	1261255	Condition	! want_priv_change	747:7:19657:19674	1261210	0	True				
ANR	1261256	UnaryOperationExpression	! want_priv_change		1261210	0					
ANR	1261257	UnaryOperator	!		1261210	0					
ANR	1261258	Identifier	want_priv_change		1261210	1					
ANR	1261259	CompoundStatement		21:28:561:561	1261210	1					
ANR	1261260	Statement	dprintf	748:4:19684:19690	1261210	0	True				
ANR	1261261	Statement	(	748:11:19691:19691	1261210	1	True				
ANR	1261262	Statement	D_ALWAYS	748:13:19693:19700	1261210	2	True				
ANR	1261263	Statement	","	748:21:19701:19701	1261210	3	True				
ANR	1261264	Statement	"""Can't open directory \\""%s\\"" as %s, """	748:23:19703:19739	1261210	4	True				
ANR	1261265	Statement	"""errno: %d (%s)\\n"""	749:7:19748:19765	1261210	5	True				
ANR	1261266	Statement	","	749:25:19766:19766	1261210	6	True				
ANR	1261267	Statement	curr_dir	749:27:19768:19775	1261210	7	True				
ANR	1261268	Statement	","	749:35:19776:19776	1261210	8	True				
ANR	1261269	Statement	priv_to_string	750:7:19786:19799	1261210	9	True				
ANR	1261270	Statement	(	750:21:19800:19800	1261210	10	True				
ANR	1261271	Statement	get_priv	750:22:19801:19808	1261210	11	True				
ANR	1261272	Statement	(	750:30:19809:19809	1261210	12	True				
ANR	1261273	Statement	)	750:31:19810:19810	1261210	13	True				
ANR	1261274	Statement	)	750:32:19811:19811	1261210	14	True				
ANR	1261275	Statement	","	750:33:19812:19812	1261210	15	True				
ANR	1261276	Statement	errno	750:35:19814:19818	1261210	16	True				
ANR	1261277	Statement	","	750:40:19819:19819	1261210	17	True				
ANR	1261278	Statement	strerror	751:7:19829:19836	1261210	18	True				
ANR	1261279	Statement	(	751:15:19837:19837	1261210	19	True				
ANR	1261280	Statement	errno	751:16:19838:19842	1261210	20	True				
ANR	1261281	Statement	)	751:21:19843:19843	1261210	21	True				
ANR	1261282	Statement	)	751:23:19845:19845	1261210	22	True				
ANR	1261283	ExpressionStatement		751:24:19846:19846	1261210	23	True				
ANR	1261284	ExpressionStatement	return_and_resetpriv ( false )	752:4:19852:19879	1261210	24	True				
ANR	1261285	CallExpression	return_and_resetpriv ( false )		1261210	0					
ANR	1261286	Callee	return_and_resetpriv		1261210	0					
ANR	1261287	Identifier	return_and_resetpriv		1261210	0					
ANR	1261288	ArgumentList	false		1261210	1					
ANR	1261289	Argument	false		1261210	0					
ANR	1261290	Identifier	false		1261210	0					
ANR	1261291	IdentifierDeclStatement	si_error_t err = SIGood ;	756:3:19951:19974	1261210	1	True				
ANR	1261292	IdentifierDecl	err = SIGood		1261210	0					
ANR	1261293	IdentifierDeclType	si_error_t		1261210	0					
ANR	1261294	Identifier	err		1261210	1					
ANR	1261295	AssignmentExpression	err = SIGood		1261210	2		=			
ANR	1261296	Identifier	SIGood		1261210	0					
ANR	1261297	Identifier	SIGood		1261210	1					
ANR	1261298	IdentifierDeclStatement	"priv_state old_priv = setOwnerPriv ( curr_dir , err ) ;"	757:3:19980:20031	1261210	2	True				
ANR	1261299	IdentifierDecl	"old_priv = setOwnerPriv ( curr_dir , err )"		1261210	0					
ANR	1261300	IdentifierDeclType	priv_state		1261210	0					
ANR	1261301	Identifier	old_priv		1261210	1					
ANR	1261302	AssignmentExpression	"old_priv = setOwnerPriv ( curr_dir , err )"		1261210	2		=			
ANR	1261303	Identifier	old_priv		1261210	0					
ANR	1261304	CallExpression	"setOwnerPriv ( curr_dir , err )"		1261210	1					
ANR	1261305	Callee	setOwnerPriv		1261210	0					
ANR	1261306	Identifier	setOwnerPriv		1261210	0					
ANR	1261307	ArgumentList	curr_dir		1261210	1					
ANR	1261308	Argument	curr_dir		1261210	0					
ANR	1261309	Identifier	curr_dir		1261210	0					
ANR	1261310	Argument	err		1261210	1					
ANR	1261311	Identifier	err		1261210	0					
ANR	1261312	IfStatement	if ( old_priv == PRIV_UNKNOWN )		1261210	3					
ANR	1261313	Condition	old_priv == PRIV_UNKNOWN	758:7:20040:20063	1261210	0	True				
ANR	1261314	EqualityExpression	old_priv == PRIV_UNKNOWN		1261210	0		==			
ANR	1261315	Identifier	old_priv		1261210	0					
ANR	1261316	Identifier	PRIV_UNKNOWN		1261210	1					
ANR	1261317	CompoundStatement		32:34:950:950	1261210	1					
ANR	1261318	IfStatement	if ( err == SINoFile )		1261210	0					
ANR	1261319	Condition	err == SINoFile	759:8:20077:20091	1261210	0	True				
ANR	1261320	EqualityExpression	err == SINoFile		1261210	0		==			
ANR	1261321	Identifier	err		1261210	0					
ANR	1261322	Identifier	SINoFile		1261210	1					
ANR	1261323	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"" , curr_dir )"	760:5:20099:20189	1261210	1	True				
ANR	1261324	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"" , curr_dir )"		1261210	0					
ANR	1261325	Callee	dprintf		1261210	0					
ANR	1261326	Identifier	dprintf		1261210	0					
ANR	1261327	ArgumentList	D_FULLDEBUG		1261210	1					
ANR	1261328	Argument	D_FULLDEBUG		1261210	0					
ANR	1261329	Identifier	D_FULLDEBUG		1261210	0					
ANR	1261330	Argument	"""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"""		1261210	1					
ANR	1261331	PrimaryExpression	"""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"""		1261210	0					
ANR	1261332	Argument	curr_dir		1261210	2					
ANR	1261333	Identifier	curr_dir		1261210	0					
ANR	1261334	ElseStatement	else		1261210	0					
ANR	1261335	Statement	dprintf	762:5:20206:20212	1261210	0	True				
ANR	1261336	Statement	(	762:12:20213:20213	1261210	1	True				
ANR	1261337	Statement	D_ALWAYS	762:14:20215:20222	1261210	2	True				
ANR	1261338	Statement	","	762:22:20223:20223	1261210	3	True				
ANR	1261339	Statement	"""Directory::Rewind(): """	762:24:20225:20247	1261210	4	True				
ANR	1261340	Statement	"""failed to find owner of \\""%s\\""\\n"""	763:8:20257:20290	1261210	5	True				
ANR	1261341	Statement	","	763:42:20291:20291	1261210	6	True				
ANR	1261342	Statement	curr_dir	763:44:20293:20300	1261210	7	True				
ANR	1261343	Statement	)	763:53:20302:20302	1261210	8	True				
ANR	1261344	ExpressionStatement		763:54:20303:20303	1261210	9	True				
ANR	1261345	ExpressionStatement	return_and_resetpriv ( false )	766:4:20410:20437	1261210	10	True				
ANR	1261346	CallExpression	return_and_resetpriv ( false )		1261210	0					
ANR	1261347	Callee	return_and_resetpriv		1261210	0					
ANR	1261348	Identifier	return_and_resetpriv		1261210	0					
ANR	1261349	ArgumentList	false		1261210	1					
ANR	1261350	Argument	false		1261210	0					
ANR	1261351	Identifier	false		1261210	0					
ANR	1261352	ExpressionStatement	errno = 0	770:3:20547:20556	1261210	4	True				
ANR	1261353	AssignmentExpression	errno = 0		1261210	0		=			
ANR	1261354	Identifier	errno		1261210	0					
ANR	1261355	PrimaryExpression	0		1261210	1					
ANR	1261356	ExpressionStatement	dirp = condor_opendir ( curr_dir )	771:3:20561:20594	1261210	5	True				
ANR	1261357	AssignmentExpression	dirp = condor_opendir ( curr_dir )		1261210	0		=			
ANR	1261358	Identifier	dirp		1261210	0					
ANR	1261359	CallExpression	condor_opendir ( curr_dir )		1261210	1					
ANR	1261360	Callee	condor_opendir		1261210	0					
ANR	1261361	Identifier	condor_opendir		1261210	0					
ANR	1261362	ArgumentList	curr_dir		1261210	1					
ANR	1261363	Argument	curr_dir		1261210	0					
ANR	1261364	Identifier	curr_dir		1261210	0					
ANR	1261365	IfStatement	if ( dirp == NULL )		1261210	6					
ANR	1261366	Condition	dirp == NULL	772:7:20603:20614	1261210	0	True				
ANR	1261367	EqualityExpression	dirp == NULL		1261210	0		==			
ANR	1261368	Identifier	dirp		1261210	0					
ANR	1261369	Identifier	NULL		1261210	1					
ANR	1261370	CompoundStatement		46:22:1501:1501	1261210	1					
ANR	1261371	Statement	dprintf	773:4:20624:20630	1261210	0	True				
ANR	1261372	Statement	(	773:11:20631:20631	1261210	1	True				
ANR	1261373	Statement	D_ALWAYS	773:13:20633:20640	1261210	2	True				
ANR	1261374	Statement	","	773:21:20641:20641	1261210	3	True				
ANR	1261375	Statement	"""Can't open directory \\""%s\\"" as owner, """	773:23:20643:20682	1261210	4	True				
ANR	1261376	Statement	"""errno: %d (%s)"""	774:7:20691:20706	1261210	5	True				
ANR	1261377	Statement	","	774:23:20707:20707	1261210	6	True				
ANR	1261378	Statement	curr_dir	774:25:20709:20716	1261210	7	True				
ANR	1261379	Statement	","	774:33:20717:20717	1261210	8	True				
ANR	1261380	Statement	errno	774:35:20719:20723	1261210	9	True				
ANR	1261381	Statement	","	774:40:20724:20724	1261210	10	True				
ANR	1261382	Statement	strerror	774:42:20726:20733	1261210	11	True				
ANR	1261383	Statement	(	774:50:20734:20734	1261210	12	True				
ANR	1261384	Statement	errno	774:51:20735:20739	1261210	13	True				
ANR	1261385	Statement	)	774:56:20740:20740	1261210	14	True				
ANR	1261386	Statement	)	774:58:20742:20742	1261210	15	True				
ANR	1261387	ExpressionStatement		774:59:20743:20743	1261210	16	True				
ANR	1261388	ExpressionStatement	return_and_resetpriv ( false )	777:4:20848:20875	1261210	17	True				
ANR	1261389	CallExpression	return_and_resetpriv ( false )		1261210	0					
ANR	1261390	Callee	return_and_resetpriv		1261210	0					
ANR	1261391	Identifier	return_and_resetpriv		1261210	0					
ANR	1261392	ArgumentList	false		1261210	1					
ANR	1261393	Argument	false		1261210	0					
ANR	1261394	Identifier	false		1261210	0					
ANR	1261395	ExpressionStatement	condor_rewinddir ( dirp )	781:1:20890:20914	1261210	3	True				
ANR	1261396	CallExpression	condor_rewinddir ( dirp )		1261210	0					
ANR	1261397	Callee	condor_rewinddir		1261210	0					
ANR	1261398	Identifier	condor_rewinddir		1261210	0					
ANR	1261399	ArgumentList	dirp		1261210	1					
ANR	1261400	Argument	dirp		1261210	0					
ANR	1261401	Identifier	dirp		1261210	0					
ANR	1261402	ExpressionStatement	return_and_resetpriv ( true )	790:1:21003:21029	1261210	4	True				
ANR	1261403	CallExpression	return_and_resetpriv ( true )		1261210	0					
ANR	1261404	Callee	return_and_resetpriv		1261210	0					
ANR	1261405	Identifier	return_and_resetpriv		1261210	0					
ANR	1261406	ArgumentList	true		1261210	1					
ANR	1261407	Argument	true		1261210	0					
ANR	1261408	Identifier	true		1261210	0					
ANR	1261409	ReturnType	bool		1261210	1					
ANR	1261410	Identifier	Directory :: Rewind		1261210	2					
ANR	1261411	ParameterList			1261210	3					
ANR	1261412	CFGEntryNode	ENTRY		1261210		True				
ANR	1261413	CFGExitNode	EXIT		1261210		True				
ANR	1261414	Symbol	errno		1261210						
ANR	1261415	Symbol	NULL		1261210						
ANR	1261416	Symbol	err		1261210						
ANR	1261417	Symbol	false		1261210						
ANR	1261418	Symbol	curr_dir		1261210						
ANR	1261419	Symbol	D_FULLDEBUG		1261210						
ANR	1261420	Symbol	dirp		1261210						
ANR	1261421	Symbol	setOwnerPriv		1261210						
ANR	1261422	Symbol	PRIV_UNKNOWN		1261210						
ANR	1261423	Symbol	old_priv		1261210						
ANR	1261424	Symbol	SINoFile		1261210						
ANR	1261425	Symbol	true		1261210						
ANR	1261426	Symbol	SIGood		1261210						
ANR	1261427	Symbol	curr		1261210						
ANR	1261428	Symbol	want_priv_change		1261210						
ANR	1261429	Symbol	condor_opendir		1261210						
ANR	1261430	Function	Directory :: Next	793:0:21034:23025							
ANR	1261431	FunctionDef	Directory :: Next ()		1261430	0					
ANR	1261432	CompoundStatement		795:0:21065:23025	1261430	0					
ANR	1261433	IdentifierDeclStatement	MyString path ;	796:1:21068:21081	1261430	0	True				
ANR	1261434	IdentifierDecl	path		1261430	0					
ANR	1261435	IdentifierDeclType	MyString		1261430	0					
ANR	1261436	Identifier	path		1261430	1					
ANR	1261437	IdentifierDeclStatement	bool done = false ;	797:1:21084:21101	1261430	1	True				
ANR	1261438	IdentifierDecl	done = false		1261430	0					
ANR	1261439	IdentifierDeclType	bool		1261430	0					
ANR	1261440	Identifier	done		1261430	1					
ANR	1261441	AssignmentExpression	done = false		1261430	2		=			
ANR	1261442	Identifier	false		1261430	0					
ANR	1261443	Identifier	false		1261430	1					
ANR	1261444	ExpressionStatement	Set_Access_Priv ( )	798:1:21104:21121	1261430	2	True				
ANR	1261445	CallExpression	Set_Access_Priv ( )		1261430	0					
ANR	1261446	Callee	Set_Access_Priv		1261430	0					
ANR	1261447	Identifier	Set_Access_Priv		1261430	0					
ANR	1261448	ArgumentList			1261430	1					
ANR	1261449	IfStatement	if ( curr )		1261430	3					
ANR	1261450	Condition	curr	799:5:21128:21131	1261430	0	True				
ANR	1261451	Identifier	curr		1261430	0					
ANR	1261452	CompoundStatement		5:12:69:69	1261430	1					
ANR	1261453	Statement	delete	800:2:21139:21144	1261430	0	True				
ANR	1261454	ExpressionStatement	curr	800:9:21146:21150	1261430	1	True				
ANR	1261455	Identifier	curr		1261430	0					
ANR	1261456	ExpressionStatement	curr = NULL	801:2:21154:21165	1261430	2	True				
ANR	1261457	AssignmentExpression	curr = NULL		1261430	0		=			
ANR	1261458	Identifier	curr		1261430	0					
ANR	1261459	Identifier	NULL		1261430	1					
ANR	1261460	IfStatement	if ( dirp == NULL )		1261430	4					
ANR	1261461	Condition	dirp == NULL	805:5:21190:21201	1261430	0	True				
ANR	1261462	EqualityExpression	dirp == NULL		1261430	0		==			
ANR	1261463	Identifier	dirp		1261430	0					
ANR	1261464	Identifier	NULL		1261430	1					
ANR	1261465	CompoundStatement		11:20:139:139	1261430	1					
ANR	1261466	ExpressionStatement	Rewind ( )	806:2:21209:21217	1261430	0	True				
ANR	1261467	CallExpression	Rewind ( )		1261430	0					
ANR	1261468	Callee	Rewind		1261430	0					
ANR	1261469	Identifier	Rewind		1261430	0					
ANR	1261470	ArgumentList			1261430	1					
ANR	1261471	IdentifierDeclStatement	condor_dirent * dirent ;	809:1:21232:21253	1261430	5	True				
ANR	1261472	IdentifierDecl	* dirent		1261430	0					
ANR	1261473	IdentifierDeclType	condor_dirent *		1261430	0					
ANR	1261474	Identifier	dirent		1261430	1					
ANR	1261475	WhileStatement	while ( ! done && dirp && ( dirent = condor_readdir ( dirp ) ) )		1261430	6					
ANR	1261476	Condition	! done && dirp && ( dirent = condor_readdir ( dirp ) )	810:8:21263:21311	1261430	0	True				
ANR	1261477	AndExpression	! done && dirp && ( dirent = condor_readdir ( dirp ) )		1261430	0		&&			
ANR	1261478	UnaryOperationExpression	! done		1261430	0					
ANR	1261479	UnaryOperator	!		1261430	0					
ANR	1261480	Identifier	done		1261430	1					
ANR	1261481	AndExpression	dirp && ( dirent = condor_readdir ( dirp ) )		1261430	1		&&			
ANR	1261482	Identifier	dirp		1261430	0					
ANR	1261483	AssignmentExpression	dirent = condor_readdir ( dirp )		1261430	1		=			
ANR	1261484	Identifier	dirent		1261430	0					
ANR	1261485	CallExpression	condor_readdir ( dirp )		1261430	1					
ANR	1261486	Callee	condor_readdir		1261430	0					
ANR	1261487	Identifier	condor_readdir		1261430	0					
ANR	1261488	ArgumentList	dirp		1261430	1					
ANR	1261489	Argument	dirp		1261430	0					
ANR	1261490	Identifier	dirp		1261430	0					
ANR	1261491	CompoundStatement		16:60:249:249	1261430	1					
ANR	1261492	IfStatement	"if ( strcmp ( ""."" , dirent -> d_name ) == MATCH )"		1261430	0					
ANR	1261493	Condition	"strcmp ( ""."" , dirent -> d_name ) == MATCH"	811:6:21323:21357	1261430	0	True				
ANR	1261494	EqualityExpression	"strcmp ( ""."" , dirent -> d_name ) == MATCH"		1261430	0		==			
ANR	1261495	CallExpression	"strcmp ( ""."" , dirent -> d_name )"		1261430	0					
ANR	1261496	Callee	strcmp		1261430	0					
ANR	1261497	Identifier	strcmp		1261430	0					
ANR	1261498	ArgumentList	"""."""		1261430	1					
ANR	1261499	Argument	"""."""		1261430	0					
ANR	1261500	PrimaryExpression	"""."""		1261430	0					
ANR	1261501	Argument	dirent -> d_name		1261430	1					
ANR	1261502	PtrMemberAccess	dirent -> d_name		1261430	0					
ANR	1261503	Identifier	dirent		1261430	0					
ANR	1261504	Identifier	d_name		1261430	1					
ANR	1261505	Identifier	MATCH		1261430	1					
ANR	1261506	CompoundStatement		17:44:295:295	1261430	1					
ANR	1261507	ContinueStatement	continue ;	812:3:21366:21374	1261430	0	True				
ANR	1261508	IfStatement	"if ( strcmp ( "".."" , dirent -> d_name ) == MATCH )"		1261430	1					
ANR	1261509	Condition	"strcmp ( "".."" , dirent -> d_name ) == MATCH"	814:6:21386:21421	1261430	0	True				
ANR	1261510	EqualityExpression	"strcmp ( "".."" , dirent -> d_name ) == MATCH"		1261430	0		==			
ANR	1261511	CallExpression	"strcmp ( "".."" , dirent -> d_name )"		1261430	0					
ANR	1261512	Callee	strcmp		1261430	0					
ANR	1261513	Identifier	strcmp		1261430	0					
ANR	1261514	ArgumentList	""".."""		1261430	1					
ANR	1261515	Argument	""".."""		1261430	0					
ANR	1261516	PrimaryExpression	""".."""		1261430	0					
ANR	1261517	Argument	dirent -> d_name		1261430	1					
ANR	1261518	PtrMemberAccess	dirent -> d_name		1261430	0					
ANR	1261519	Identifier	dirent		1261430	0					
ANR	1261520	Identifier	d_name		1261430	1					
ANR	1261521	Identifier	MATCH		1261430	1					
ANR	1261522	CompoundStatement		20:45:359:359	1261430	1					
ANR	1261523	ContinueStatement	continue ;	815:3:21430:21438	1261430	0	True				
ANR	1261524	CompoundStatement		23:2:380:380	1261430	2					
ANR	1261525	ExpressionStatement	path = curr_dir	818:3:21451:21466	1261430	0	True				
ANR	1261526	AssignmentExpression	path = curr_dir		1261430	0		=			
ANR	1261527	Identifier	path		1261430	0					
ANR	1261528	Identifier	curr_dir		1261430	1					
ANR	1261529	ExpressionStatement	path += DIR_DELIM_CHAR	819:3:21471:21493	1261430	1	True				
ANR	1261530	AssignmentExpression	path += DIR_DELIM_CHAR		1261430	0		+=			
ANR	1261531	Identifier	path		1261430	0					
ANR	1261532	Identifier	DIR_DELIM_CHAR		1261430	1					
ANR	1261533	ExpressionStatement	path += dirent -> d_name	820:3:21498:21520	1261430	2	True				
ANR	1261534	AssignmentExpression	path += dirent -> d_name		1261430	0		+=			
ANR	1261535	Identifier	path		1261430	0					
ANR	1261536	PtrMemberAccess	dirent -> d_name		1261430	1					
ANR	1261537	Identifier	dirent		1261430	0					
ANR	1261538	Identifier	d_name		1261430	1					
ANR	1261539	ExpressionStatement	curr = new StatInfo ( path . Value ( ) )	821:3:21525:21560	1261430	3	True				
ANR	1261540	AssignmentExpression	curr = new StatInfo ( path . Value ( ) )		1261430	0		=			
ANR	1261541	Identifier	curr		1261430	0					
ANR	1261542	CallExpression	path . Value ( )		1261430	1					
ANR	1261543	Callee	path . Value		1261430	0					
ANR	1261544	MemberAccess	path . Value		1261430	0					
ANR	1261545	Identifier	path		1261430	0					
ANR	1261546	Identifier	Value		1261430	1					
ANR	1261547	ArgumentList			1261430	1					
ANR	1261548	SwitchStatement	switch ( curr -> Error ( ) )		1261430	4					
ANR	1261549	Condition	curr -> Error ( )	822:11:21573:21585	1261430	0	True				
ANR	1261550	CallExpression	curr -> Error ( )		1261430	0					
ANR	1261551	Callee	curr -> Error		1261430	0					
ANR	1261552	PtrMemberAccess	curr -> Error		1261430	0					
ANR	1261553	Identifier	curr		1261430	0					
ANR	1261554	Identifier	Error		1261430	1					
ANR	1261555	ArgumentList			1261430	1					
ANR	1261556	CompoundStatement		28:27:523:523	1261430	1					
ANR	1261557	Label	case SINoFile :	823:3:21594:21607	1261430	0	True				
ANR	1261558	Identifier	SINoFile		1261430	0					
ANR	1261559	Statement	delete	825:4:21674:21679	1261430	1	True				
ANR	1261560	ExpressionStatement	curr	825:11:21681:21685	1261430	2	True				
ANR	1261561	Identifier	curr		1261430	0					
ANR	1261562	ExpressionStatement	curr = NULL	826:4:21692:21703	1261430	3	True				
ANR	1261563	AssignmentExpression	curr = NULL		1261430	0		=			
ANR	1261564	Identifier	curr		1261430	0					
ANR	1261565	Identifier	NULL		1261430	1					
ANR	1261566	BreakStatement	break ;	827:4:21709:21714	1261430	4	True				
ANR	1261567	Label	case SIFailure :	828:3:21719:21733	1261430	5	True				
ANR	1261568	Identifier	SIFailure		1261430	0					
ANR	1261569	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"" , path . Value ( ) , curr -> Errno ( ) , strerror ( curr -> Errno ( ) ) )"	830:4:21777:21922	1261430	6	True				
ANR	1261570	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"" , path . Value ( ) , curr -> Errno ( ) , strerror ( curr -> Errno ( ) ) )"		1261430	0					
ANR	1261571	Callee	dprintf		1261430	0					
ANR	1261572	Identifier	dprintf		1261430	0					
ANR	1261573	ArgumentList	D_FULLDEBUG		1261430	1					
ANR	1261574	Argument	D_FULLDEBUG		1261430	0					
ANR	1261575	Identifier	D_FULLDEBUG		1261430	0					
ANR	1261576	Argument	"""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"""		1261430	1					
ANR	1261577	PrimaryExpression	"""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"""		1261430	0					
ANR	1261578	Argument	path . Value ( )		1261430	2					
ANR	1261579	CallExpression	path . Value ( )		1261430	0					
ANR	1261580	Callee	path . Value		1261430	0					
ANR	1261581	MemberAccess	path . Value		1261430	0					
ANR	1261582	Identifier	path		1261430	0					
ANR	1261583	Identifier	Value		1261430	1					
ANR	1261584	ArgumentList			1261430	1					
ANR	1261585	Argument	curr -> Errno ( )		1261430	3					
ANR	1261586	CallExpression	curr -> Errno ( )		1261430	0					
ANR	1261587	Callee	curr -> Errno		1261430	0					
ANR	1261588	PtrMemberAccess	curr -> Errno		1261430	0					
ANR	1261589	Identifier	curr		1261430	0					
ANR	1261590	Identifier	Errno		1261430	1					
ANR	1261591	ArgumentList			1261430	1					
ANR	1261592	Argument	strerror ( curr -> Errno ( ) )		1261430	4					
ANR	1261593	CallExpression	strerror ( curr -> Errno ( ) )		1261430	0					
ANR	1261594	Callee	strerror		1261430	0					
ANR	1261595	Identifier	strerror		1261430	0					
ANR	1261596	ArgumentList	curr -> Errno ( )		1261430	1					
ANR	1261597	Argument	curr -> Errno ( )		1261430	0					
ANR	1261598	CallExpression	curr -> Errno ( )		1261430	0					
ANR	1261599	Callee	curr -> Errno		1261430	0					
ANR	1261600	PtrMemberAccess	curr -> Errno		1261430	0					
ANR	1261601	Identifier	curr		1261430	0					
ANR	1261602	Identifier	Errno		1261430	1					
ANR	1261603	ArgumentList			1261430	1					
ANR	1261604	Statement	delete	833:4:21928:21933	1261430	7	True				
ANR	1261605	ExpressionStatement	curr	833:11:21935:21939	1261430	8	True				
ANR	1261606	Identifier	curr		1261430	0					
ANR	1261607	ExpressionStatement	curr = NULL	834:4:21945:21956	1261430	9	True				
ANR	1261608	AssignmentExpression	curr = NULL		1261430	0		=			
ANR	1261609	Identifier	curr		1261430	0					
ANR	1261610	Identifier	NULL		1261430	1					
ANR	1261611	BreakStatement	break ;	835:4:21962:21967	1261430	10	True				
ANR	1261612	Label	default :	836:3:21972:21979	1261430	11	True				
ANR	1261613	Identifier	default		1261430	0					
ANR	1261614	ExpressionStatement	done = true	838:4:22024:22035	1261430	12	True				
ANR	1261615	AssignmentExpression	done = true		1261430	0		=			
ANR	1261616	Identifier	done		1261430	0					
ANR	1261617	Identifier	true		1261430	1					
ANR	1261618	BreakStatement	break ;	839:4:22041:22046	1261430	13	True				
ANR	1261619	IfStatement	if ( curr )		1261430	7					
ANR	1261620	Condition	curr	875:5:22925:22928	1261430	0	True				
ANR	1261621	Identifier	curr		1261430	0					
ANR	1261622	CompoundStatement		81:12:1866:1866	1261430	1					
ANR	1261623	ExpressionStatement	return_and_resetpriv ( curr -> BaseName ( ) )	876:2:22936:22976	1261430	0	True				
ANR	1261624	CallExpression	return_and_resetpriv ( curr -> BaseName ( ) )		1261430	0					
ANR	1261625	Callee	return_and_resetpriv		1261430	0					
ANR	1261626	Identifier	return_and_resetpriv		1261430	0					
ANR	1261627	ArgumentList	curr -> BaseName ( )		1261430	1					
ANR	1261628	Argument	curr -> BaseName ( )		1261430	0					
ANR	1261629	CallExpression	curr -> BaseName ( )		1261430	0					
ANR	1261630	Callee	curr -> BaseName		1261430	0					
ANR	1261631	PtrMemberAccess	curr -> BaseName		1261430	0					
ANR	1261632	Identifier	curr		1261430	0					
ANR	1261633	Identifier	BaseName		1261430	1					
ANR	1261634	ArgumentList			1261430	1					
ANR	1261635	ElseStatement	else		1261430	0					
ANR	1261636	CompoundStatement		83:8:1922:1922	1261430	0					
ANR	1261637	ExpressionStatement	return_and_resetpriv ( NULL )	878:2:22992:23020	1261430	0	True				
ANR	1261638	CallExpression	return_and_resetpriv ( NULL )		1261430	0					
ANR	1261639	Callee	return_and_resetpriv		1261430	0					
ANR	1261640	Identifier	return_and_resetpriv		1261430	0					
ANR	1261641	ArgumentList	NULL		1261430	1					
ANR	1261642	Argument	NULL		1261430	0					
ANR	1261643	Identifier	NULL		1261430	0					
ANR	1261644	ReturnType	const char *		1261430	1					
ANR	1261645	Identifier	Directory :: Next		1261430	2					
ANR	1261646	ParameterList			1261430	3					
ANR	1261647	CFGEntryNode	ENTRY		1261430		True				
ANR	1261648	CFGExitNode	EXIT		1261430		True				
ANR	1261649	Symbol	strcmp		1261430						
ANR	1261650	Symbol	NULL		1261430						
ANR	1261651	Symbol	DIR_DELIM_CHAR		1261430						
ANR	1261652	Symbol	false		1261430						
ANR	1261653	Symbol	curr_dir		1261430						
ANR	1261654	Symbol	D_FULLDEBUG		1261430						
ANR	1261655	Symbol	dirp		1261430						
ANR	1261656	Symbol	done		1261430						
ANR	1261657	Symbol	curr -> Error		1261430						
ANR	1261658	Symbol	dirent -> d_name		1261430						
ANR	1261659	Symbol	* dirent		1261430						
ANR	1261660	Symbol	curr -> Errno		1261430						
ANR	1261661	Symbol	strerror		1261430						
ANR	1261662	Symbol	path		1261430						
ANR	1261663	Symbol	* curr		1261430						
ANR	1261664	Symbol	true		1261430						
ANR	1261665	Symbol	path . Value		1261430						
ANR	1261666	Symbol	curr -> BaseName		1261430						
ANR	1261667	Symbol	condor_readdir		1261430						
ANR	1261668	Symbol	curr		1261430						
ANR	1261669	Symbol	MATCH		1261430						
ANR	1261670	Symbol	dirent		1261430						
ANR	1261671	Function	Directory :: Recursive_Chown	883:0:23029:23168							
ANR	1261672	FunctionDef	"Directory :: Recursive_Chown (const char * username , const char * domain)"		1261671	0					
ANR	1261673	CompoundStatement		884:69:23103:23168	1261671	0					
ANR	1261674	ReturnStatement	"return recursive_chown ( GetDirectoryPath ( ) , username , domain ) ;"	885:1:23106:23166	1261671	0	True				
ANR	1261675	CallExpression	"recursive_chown ( GetDirectoryPath ( ) , username , domain )"		1261671	0					
ANR	1261676	Callee	recursive_chown		1261671	0					
ANR	1261677	Identifier	recursive_chown		1261671	0					
ANR	1261678	ArgumentList	GetDirectoryPath ( )		1261671	1					
ANR	1261679	Argument	GetDirectoryPath ( )		1261671	0					
ANR	1261680	CallExpression	GetDirectoryPath ( )		1261671	0					
ANR	1261681	Callee	GetDirectoryPath		1261671	0					
ANR	1261682	Identifier	GetDirectoryPath		1261671	0					
ANR	1261683	ArgumentList			1261671	1					
ANR	1261684	Argument	username		1261671	1					
ANR	1261685	Identifier	username		1261671	0					
ANR	1261686	Argument	domain		1261671	2					
ANR	1261687	Identifier	domain		1261671	0					
ANR	1261688	ReturnType	bool		1261671	1					
ANR	1261689	Identifier	Directory :: Recursive_Chown		1261671	2					
ANR	1261690	ParameterList	"const char * username , const char * domain"		1261671	3					
ANR	1261691	Parameter	const char * username	884:27:23061:23080	1261671	0	True				
ANR	1261692	ParameterType	const char *		1261671	0					
ANR	1261693	Identifier	username		1261671	1					
ANR	1261694	Parameter	const char * domain	884:49:23083:23100	1261671	1	True				
ANR	1261695	ParameterType	const char *		1261671	0					
ANR	1261696	Identifier	domain		1261671	1					
ANR	1261697	CFGEntryNode	ENTRY		1261671		True				
ANR	1261698	CFGExitNode	EXIT		1261671		True				
ANR	1261699	Symbol	GetDirectoryPath		1261671						
ANR	1261700	Symbol	domain		1261671						
ANR	1261701	Symbol	recursive_chown		1261671						
ANR	1261702	Symbol	username		1261671						
ANR	1261703	Function	recursive_chown	893:0:23316:23910							
ANR	1261704	FunctionDef	"recursive_chown (const char * path , const char * username , const char * domain)"		1261703	0					
ANR	1261705	CompoundStatement		894:76:23398:23910	1261703	0					
ANR	1261706	IdentifierDeclStatement	perm po ;	902:1:23693:23700	1261703	0	True				
ANR	1261707	IdentifierDecl	po		1261703	0					
ANR	1261708	IdentifierDeclType	perm		1261703	0					
ANR	1261709	Identifier	po		1261703	1					
ANR	1261710	IfStatement	"if ( ! po . init ( username , domain ) )"		1261703	1					
ANR	1261711	Condition	"! po . init ( username , domain )"	904:6:23709:23735	1261703	0	True				
ANR	1261712	UnaryOperationExpression	"! po . init ( username , domain )"		1261703	0					
ANR	1261713	UnaryOperator	!		1261703	0					
ANR	1261714	CallExpression	"po . init ( username , domain )"		1261703	1					
ANR	1261715	Callee	po . init		1261703	0					
ANR	1261716	MemberAccess	po . init		1261703	0					
ANR	1261717	Identifier	po		1261703	0					
ANR	1261718	Identifier	init		1261703	1					
ANR	1261719	ArgumentList	username		1261703	1					
ANR	1261720	Argument	username		1261703	0					
ANR	1261721	Identifier	username		1261703	0					
ANR	1261722	Argument	domain		1261703	1					
ANR	1261723	Identifier	domain		1261703	0					
ANR	1261724	CompoundStatement		11:36:340:340	1261703	1					
ANR	1261725	Statement	dprintf	906:2:23744:23750	1261703	0	True				
ANR	1261726	Statement	(	906:9:23751:23751	1261703	1	True				
ANR	1261727	Statement	D_ALWAYS	906:10:23752:23759	1261703	2	True				
ANR	1261728	Statement	","	906:18:23760:23760	1261703	3	True				
ANR	1261729	Statement	"""recursive_chown() failed because the perm object """	906:20:23762:23812	1261703	4	True				
ANR	1261730	Statement	"""failed to initialize.\\n"""	907:4:23818:23842	1261703	5	True				
ANR	1261731	Statement	)	907:29:23843:23843	1261703	6	True				
ANR	1261732	ExpressionStatement		907:30:23844:23844	1261703	7	True				
ANR	1261733	ReturnStatement	return false ;	908:2:23848:23860	1261703	8	True				
ANR	1261734	Identifier	false		1261703	0					
ANR	1261735	ReturnStatement	"return recursive_chown_win32 ( path , & po ) ;"	911:1:23868:23907	1261703	2	True				
ANR	1261736	CallExpression	"recursive_chown_win32 ( path , & po )"		1261703	0					
ANR	1261737	Callee	recursive_chown_win32		1261703	0					
ANR	1261738	Identifier	recursive_chown_win32		1261703	0					
ANR	1261739	ArgumentList	path		1261703	1					
ANR	1261740	Argument	path		1261703	0					
ANR	1261741	Identifier	path		1261703	0					
ANR	1261742	Argument	& po		1261703	1					
ANR	1261743	UnaryOperationExpression	& po		1261703	0					
ANR	1261744	UnaryOperator	&		1261703	0					
ANR	1261745	Identifier	po		1261703	1					
ANR	1261746	ReturnType	bool		1261703	1					
ANR	1261747	Identifier	recursive_chown		1261703	2					
ANR	1261748	ParameterList	"const char * path , const char * username , const char * domain"		1261703	3					
ANR	1261749	Parameter	const char * path	894:16:23338:23353	1261703	0	True				
ANR	1261750	ParameterType	const char *		1261703	0					
ANR	1261751	Identifier	path		1261703	1					
ANR	1261752	Parameter	const char * username	894:34:23356:23375	1261703	1	True				
ANR	1261753	ParameterType	const char *		1261703	0					
ANR	1261754	Identifier	username		1261703	1					
ANR	1261755	Parameter	const char * domain	894:56:23378:23395	1261703	2	True				
ANR	1261756	ParameterType	const char *		1261703	0					
ANR	1261757	Identifier	domain		1261703	1					
ANR	1261758	CFGEntryNode	ENTRY		1261703		True				
ANR	1261759	CFGExitNode	EXIT		1261703		True				
ANR	1261760	Symbol	path		1261703						
ANR	1261761	Symbol	recursive_chown_win32		1261703						
ANR	1261762	Symbol	domain		1261703						
ANR	1261763	Symbol	false		1261703						
ANR	1261764	Symbol	& po		1261703						
ANR	1261765	Symbol	po . init		1261703						
ANR	1261766	Symbol	username		1261703						
ANR	1261767	Symbol	po		1261703						
ANR	1261768	Function	recursive_chown_win32	929:0:24185:25382							
ANR	1261769	FunctionDef	"recursive_chown_win32 (const char * path , perm * po)"		1261768	0					
ANR	1261770	CompoundStatement		930:51:24242:25382	1261768	0					
ANR	1261771	IdentifierDeclStatement	bool result = true ;	932:1:24246:24264	1261768	0	True				
ANR	1261772	IdentifierDecl	result = true		1261768	0					
ANR	1261773	IdentifierDeclType	bool		1261768	0					
ANR	1261774	Identifier	result		1261768	1					
ANR	1261775	AssignmentExpression	result = true		1261768	2		=			
ANR	1261776	Identifier	true		1261768	0					
ANR	1261777	Identifier	true		1261768	1					
ANR	1261778	IfStatement	if ( ! po -> set_acls ( path ) )		1261768	1					
ANR	1261779	Condition	! po -> set_acls ( path )	941:6:24469:24488	1261768	0	True				
ANR	1261780	UnaryOperationExpression	! po -> set_acls ( path )		1261768	0					
ANR	1261781	UnaryOperator	!		1261768	0					
ANR	1261782	CallExpression	po -> set_acls ( path )		1261768	1					
ANR	1261783	Callee	po -> set_acls		1261768	0					
ANR	1261784	PtrMemberAccess	po -> set_acls		1261768	0					
ANR	1261785	Identifier	po		1261768	0					
ANR	1261786	Identifier	set_acls		1261768	1					
ANR	1261787	ArgumentList	path		1261768	1					
ANR	1261788	Argument	path		1261768	0					
ANR	1261789	Identifier	path		1261768	0					
ANR	1261790	CompoundStatement		12:29:249:249	1261768	1					
ANR	1261791	IfStatement	if ( ! po -> set_owner ( path ) )		1261768	0					
ANR	1261792	Condition	! po -> set_owner ( path )	944:7:24557:24577	1261768	0	True				
ANR	1261793	UnaryOperationExpression	! po -> set_owner ( path )		1261768	0					
ANR	1261794	UnaryOperator	!		1261768	0					
ANR	1261795	CallExpression	po -> set_owner ( path )		1261768	1					
ANR	1261796	Callee	po -> set_owner		1261768	0					
ANR	1261797	PtrMemberAccess	po -> set_owner		1261768	0					
ANR	1261798	Identifier	po		1261768	0					
ANR	1261799	Identifier	set_owner		1261768	1					
ANR	1261800	ArgumentList	path		1261768	1					
ANR	1261801	Argument	path		1261768	0					
ANR	1261802	Identifier	path		1261768	0					
ANR	1261803	CompoundStatement		15:31:338:338	1261768	1					
ANR	1261804	Statement	dprintf	945:3:24586:24592	1261768	0	True				
ANR	1261805	Statement	(	945:10:24593:24593	1261768	1	True				
ANR	1261806	Statement	D_FULLDEBUG	945:11:24594:24604	1261768	2	True				
ANR	1261807	Statement	","	945:22:24605:24605	1261768	3	True				
ANR	1261808	Statement	"""perm obj failed to set ACLs and change owner"""	945:24:24607:24652	1261768	4	True				
ANR	1261809	Statement	""" on %s\\n"""	946:7:24661:24670	1261768	5	True				
ANR	1261810	Statement	","	946:17:24671:24671	1261768	6	True				
ANR	1261811	Statement	path	946:19:24673:24676	1261768	7	True				
ANR	1261812	Statement	)	946:23:24677:24677	1261768	8	True				
ANR	1261813	ExpressionStatement		946:24:24678:24678	1261768	9	True				
ANR	1261814	ExpressionStatement	result = false	947:3:24683:24697	1261768	10	True				
ANR	1261815	AssignmentExpression	result = false		1261768	0		=			
ANR	1261816	Identifier	result		1261768	0					
ANR	1261817	Identifier	false		1261768	1					
ANR	1261818	ElseStatement	else		1261768	0					
ANR	1261819	CompoundStatement		19:9:465:465	1261768	0					
ANR	1261820	IfStatement	if ( ! po -> set_acls ( path ) )		1261768	0					
ANR	1261821	Condition	! po -> set_acls ( path )	951:8:24819:24838	1261768	0	True				
ANR	1261822	UnaryOperationExpression	! po -> set_acls ( path )		1261768	0					
ANR	1261823	UnaryOperator	!		1261768	0					
ANR	1261824	CallExpression	po -> set_acls ( path )		1261768	1					
ANR	1261825	Callee	po -> set_acls		1261768	0					
ANR	1261826	PtrMemberAccess	po -> set_acls		1261768	0					
ANR	1261827	Identifier	po		1261768	0					
ANR	1261828	Identifier	set_acls		1261768	1					
ANR	1261829	ArgumentList	path		1261768	1					
ANR	1261830	Argument	path		1261768	0					
ANR	1261831	Identifier	path		1261768	0					
ANR	1261832	CompoundStatement		22:31:599:599	1261768	1					
ANR	1261833	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""perm obj failed to set ACLs on %s\\n"" , path )"	952:4:24848:24922	1261768	0	True				
ANR	1261834	CallExpression	"dprintf ( D_FULLDEBUG , ""perm obj failed to set ACLs on %s\\n"" , path )"		1261768	0					
ANR	1261835	Callee	dprintf		1261768	0					
ANR	1261836	Identifier	dprintf		1261768	0					
ANR	1261837	ArgumentList	D_FULLDEBUG		1261768	1					
ANR	1261838	Argument	D_FULLDEBUG		1261768	0					
ANR	1261839	Identifier	D_FULLDEBUG		1261768	0					
ANR	1261840	Argument	"""perm obj failed to set ACLs on %s\\n"""		1261768	1					
ANR	1261841	PrimaryExpression	"""perm obj failed to set ACLs on %s\\n"""		1261768	0					
ANR	1261842	Argument	path		1261768	2					
ANR	1261843	Identifier	path		1261768	0					
ANR	1261844	ExpressionStatement	result = false	954:4:24928:24942	1261768	1	True				
ANR	1261845	AssignmentExpression	result = false		1261768	0		=			
ANR	1261846	Identifier	result		1261768	0					
ANR	1261847	Identifier	false		1261768	1					
ANR	1261848	IfStatement	if ( IsDirectory ( path ) )		1261768	2					
ANR	1261849	Condition	IsDirectory ( path )	962:5:25042:25058	1261768	0	True				
ANR	1261850	CallExpression	IsDirectory ( path )		1261768	0					
ANR	1261851	Callee	IsDirectory		1261768	0					
ANR	1261852	Identifier	IsDirectory		1261768	0					
ANR	1261853	ArgumentList	path		1261768	1					
ANR	1261854	Argument	path		1261768	0					
ANR	1261855	Identifier	path		1261768	0					
ANR	1261856	CompoundStatement		35:2:846:871	1261768	1					
ANR	1261857	IdentifierDeclStatement	Directory dir ( path ) ;	963:2:25066:25085	1261768	0	True				
ANR	1261858	IdentifierDecl	dir ( path )		1261768	0					
ANR	1261859	IdentifierDeclType	Directory		1261768	0					
ANR	1261860	Identifier	dir		1261768	1					
ANR	1261861	Identifier	path		1261768	2					
ANR	1261862	IdentifierDeclStatement	const char * filename = 0 ;	964:2:25089:25114	1261768	1	True				
ANR	1261863	IdentifierDecl	* filename = 0		1261768	0					
ANR	1261864	IdentifierDeclType	const char *		1261768	0					
ANR	1261865	Identifier	filename		1261768	1					
ANR	1261866	AssignmentExpression	* filename = 0		1261768	2		=			
ANR	1261867	Identifier	filename		1261768	0					
ANR	1261868	PrimaryExpression	0		1261768	1					
ANR	1261869	WhileStatement	while ( ( filename = dir . Next ( ) ) )		1261768	2					
ANR	1261870	Condition	filename = dir . Next ( )	965:9:25125:25147	1261768	0	True				
ANR	1261871	AssignmentExpression	filename = dir . Next ( )		1261768	0		=			
ANR	1261872	Identifier	filename		1261768	0					
ANR	1261873	CallExpression	dir . Next ( )		1261768	1					
ANR	1261874	Callee	dir . Next		1261768	0					
ANR	1261875	MemberAccess	dir . Next		1261768	0					
ANR	1261876	Identifier	dir		1261768	0					
ANR	1261877	Identifier	Next		1261768	1					
ANR	1261878	ArgumentList			1261768	1					
ANR	1261879	CompoundStatement		36:35:908:908	1261768	1					
ANR	1261880	ExpressionStatement	filename = dir . GetFullPath ( )	966:3:25156:25184	1261768	0	True				
ANR	1261881	AssignmentExpression	filename = dir . GetFullPath ( )		1261768	0		=			
ANR	1261882	Identifier	filename		1261768	0					
ANR	1261883	CallExpression	dir . GetFullPath ( )		1261768	1					
ANR	1261884	Callee	dir . GetFullPath		1261768	0					
ANR	1261885	MemberAccess	dir . GetFullPath		1261768	0					
ANR	1261886	Identifier	dir		1261768	0					
ANR	1261887	Identifier	GetFullPath		1261768	1					
ANR	1261888	ArgumentList			1261768	1					
ANR	1261889	IfStatement	"if ( ! recursive_chown_win32 ( filename , po ) )"		1261768	1					
ANR	1261890	Condition	"! recursive_chown_win32 ( filename , po )"	967:7:25193:25229	1261768	0	True				
ANR	1261891	UnaryOperationExpression	"! recursive_chown_win32 ( filename , po )"		1261768	0					
ANR	1261892	UnaryOperator	!		1261768	0					
ANR	1261893	CallExpression	"recursive_chown_win32 ( filename , po )"		1261768	1					
ANR	1261894	Callee	recursive_chown_win32		1261768	0					
ANR	1261895	Identifier	recursive_chown_win32		1261768	0					
ANR	1261896	ArgumentList	filename		1261768	1					
ANR	1261897	Argument	filename		1261768	0					
ANR	1261898	Identifier	filename		1261768	0					
ANR	1261899	Argument	po		1261768	1					
ANR	1261900	Identifier	po		1261768	0					
ANR	1261901	CompoundStatement		38:47:990:990	1261768	1					
ANR	1261902	Statement	dprintf	968:4:25239:25245	1261768	0	True				
ANR	1261903	Statement	(	968:11:25246:25246	1261768	1	True				
ANR	1261904	Statement	D_FULLDEBUG	968:12:25247:25257	1261768	2	True				
ANR	1261905	Statement	","	968:23:25258:25258	1261768	3	True				
ANR	1261906	Statement	"""recursive_chown() failed for %s; """	968:25:25260:25294	1261768	4	True				
ANR	1261907	Statement	"""iteration stopping.\\n"""	969:6:25302:25324	1261768	5	True				
ANR	1261908	Statement	","	969:29:25325:25325	1261768	6	True				
ANR	1261909	Statement	path	969:31:25327:25330	1261768	7	True				
ANR	1261910	Statement	)	969:35:25331:25331	1261768	8	True				
ANR	1261911	ExpressionStatement		969:36:25332:25332	1261768	9	True				
ANR	1261912	ReturnStatement	return false ;	970:4:25338:25350	1261768	10	True				
ANR	1261913	Identifier	false		1261768	0					
ANR	1261914	ReturnStatement	return result ;	976:1:25367:25380	1261768	3	True				
ANR	1261915	Identifier	result		1261768	0					
ANR	1261916	ReturnType	bool		1261768	1					
ANR	1261917	Identifier	recursive_chown_win32		1261768	2					
ANR	1261918	ParameterList	"const char * path , perm * po"		1261768	3					
ANR	1261919	Parameter	const char * path	930:22:24213:24229	1261768	0	True				
ANR	1261920	ParameterType	const char *		1261768	0					
ANR	1261921	Identifier	path		1261768	1					
ANR	1261922	Parameter	perm * po	930:41:24232:24239	1261768	1	True				
ANR	1261923	ParameterType	perm *		1261768	0					
ANR	1261924	Identifier	po		1261768	1					
ANR	1261925	CFGEntryNode	ENTRY		1261768		True				
ANR	1261926	CFGExitNode	EXIT		1261768		True				
ANR	1261927	Symbol	recursive_chown_win32		1261768						
ANR	1261928	Symbol	po -> set_owner		1261768						
ANR	1261929	Symbol	IsDirectory		1261768						
ANR	1261930	Symbol	* po		1261768						
ANR	1261931	Symbol	false		1261768						
ANR	1261932	Symbol	D_FULLDEBUG		1261768						
ANR	1261933	Symbol	dir		1261768						
ANR	1261934	Symbol	dir . Next		1261768						
ANR	1261935	Symbol	result		1261768						
ANR	1261936	Symbol	dir . GetFullPath		1261768						
ANR	1261937	Symbol	path		1261768						
ANR	1261938	Symbol	filename		1261768						
ANR	1261939	Symbol	true		1261768						
ANR	1261940	Symbol	po -> set_acls		1261768						
ANR	1261941	Symbol	po		1261768						
ANR	1261942	Function	IsDirectory	981:0:25393:26041							
ANR	1261943	FunctionDef	IsDirectory (const char * path)		1261942	0					
ANR	1261944	CompoundStatement		983:0:25431:26041	1261942	0					
ANR	1261945	IfStatement	if ( path == NULL )		1261942	0					
ANR	1261946	Condition	path == NULL	984:5:25438:25449	1261942	0	True				
ANR	1261947	EqualityExpression	path == NULL		1261942	0		==			
ANR	1261948	Identifier	path		1261942	0					
ANR	1261949	Identifier	NULL		1261942	1					
ANR	1261950	CompoundStatement		2:19:20:20	1261942	1					
ANR	1261951	ReturnStatement	return false ;	988:2:25636:25648	1261942	0	True				
ANR	1261952	Identifier	false		1261942	0					
ANR	1261953	IdentifierDeclStatement	StatInfo si ( path ) ;	991:1:25655:25674	1261942	1	True				
ANR	1261954	IdentifierDecl	si ( path )		1261942	0					
ANR	1261955	IdentifierDeclType	StatInfo		1261942	0					
ANR	1261956	Identifier	si		1261942	1					
ANR	1261957	Identifier	path		1261942	2					
ANR	1261958	SwitchStatement	switch ( si . Error ( ) )		1261942	2					
ANR	1261959	Condition	si . Error ( )	992:9:25685:25694	1261942	0	True				
ANR	1261960	CallExpression	si . Error ( )		1261942	0					
ANR	1261961	Callee	si . Error		1261942	0					
ANR	1261962	MemberAccess	si . Error		1261942	0					
ANR	1261963	Identifier	si		1261942	0					
ANR	1261964	Identifier	Error		1261942	1					
ANR	1261965	ArgumentList			1261942	1					
ANR	1261966	CompoundStatement		10:22:266:266	1261942	1					
ANR	1261967	Label	case SIGood :	993:1:25701:25712	1261942	0	True				
ANR	1261968	Identifier	SIGood		1261942	0					
ANR	1261969	ReturnStatement	return si . IsDirectory ( ) ;	994:2:25716:25739	1261942	1	True				
ANR	1261970	CallExpression	si . IsDirectory ( )		1261942	0					
ANR	1261971	Callee	si . IsDirectory		1261942	0					
ANR	1261972	MemberAccess	si . IsDirectory		1261942	0					
ANR	1261973	Identifier	si		1261942	0					
ANR	1261974	Identifier	IsDirectory		1261942	1					
ANR	1261975	ArgumentList			1261942	1					
ANR	1261976	BreakStatement	break ;	995:2:25743:25748	1261942	2	True				
ANR	1261977	Label	case SINoFile :	996:1:25751:25764	1261942	3	True				
ANR	1261978	Identifier	SINoFile		1261942	0					
ANR	1261979	ReturnStatement	return false ;	998:2:25796:25808	1261942	4	True				
ANR	1261980	Identifier	false		1261942	0					
ANR	1261981	BreakStatement	break ;	999:2:25812:25817	1261942	5	True				
ANR	1261982	Label	case SIFailure :	1000:1:25820:25834	1261942	6	True				
ANR	1261983	Identifier	SIFailure		1261942	0					
ANR	1261984	ExpressionStatement	"dprintf ( D_ALWAYS , ""IsDirectory: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"	1001:2:25838:25928	1261942	7	True				
ANR	1261985	CallExpression	"dprintf ( D_ALWAYS , ""IsDirectory: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"		1261942	0					
ANR	1261986	Callee	dprintf		1261942	0					
ANR	1261987	Identifier	dprintf		1261942	0					
ANR	1261988	ArgumentList	D_ALWAYS		1261942	1					
ANR	1261989	Argument	D_ALWAYS		1261942	0					
ANR	1261990	Identifier	D_ALWAYS		1261942	0					
ANR	1261991	Argument	"""IsDirectory: Error in stat(%s), errno: %d\\n"""		1261942	1					
ANR	1261992	PrimaryExpression	"""IsDirectory: Error in stat(%s), errno: %d\\n"""		1261942	0					
ANR	1261993	Argument	path		1261942	2					
ANR	1261994	Identifier	path		1261942	0					
ANR	1261995	Argument	si . Errno ( )		1261942	3					
ANR	1261996	CallExpression	si . Errno ( )		1261942	0					
ANR	1261997	Callee	si . Errno		1261942	0					
ANR	1261998	MemberAccess	si . Errno		1261942	0					
ANR	1261999	Identifier	si		1261942	0					
ANR	1262000	Identifier	Errno		1261942	1					
ANR	1262001	ArgumentList			1261942	1					
ANR	1262002	ReturnStatement	return false ;	1003:2:25932:25944	1261942	8	True				
ANR	1262003	Identifier	false		1261942	0					
ANR	1262004	BreakStatement	break ;	1004:2:25948:25953	1261942	9	True				
ANR	1262005	ExpressionStatement	"EXCEPT ( ""IsDirectory() unexpected error code"" )"	1007:1:25960:26005	1261942	3	True				
ANR	1262006	CallExpression	"EXCEPT ( ""IsDirectory() unexpected error code"" )"		1261942	0					
ANR	1262007	Callee	EXCEPT		1261942	0					
ANR	1262008	Identifier	EXCEPT		1261942	0					
ANR	1262009	ArgumentList	"""IsDirectory() unexpected error code"""		1261942	1					
ANR	1262010	Argument	"""IsDirectory() unexpected error code"""		1261942	0					
ANR	1262011	PrimaryExpression	"""IsDirectory() unexpected error code"""		1261942	0					
ANR	1262012	ReturnStatement	return false ;	1008:1:26027:26039	1261942	4	True				
ANR	1262013	Identifier	false		1261942	0					
ANR	1262014	ReturnType	bool		1261942	1					
ANR	1262015	Identifier	IsDirectory		1261942	2					
ANR	1262016	ParameterList	const char * path		1261942	3					
ANR	1262017	Parameter	const char * path	982:13:25412:25427	1261942	0	True				
ANR	1262018	ParameterType	const char *		1261942	0					
ANR	1262019	Identifier	path		1261942	1					
ANR	1262020	CFGEntryNode	ENTRY		1261942		True				
ANR	1262021	CFGExitNode	EXIT		1261942		True				
ANR	1262022	Symbol	path		1261942						
ANR	1262023	Symbol	si . IsDirectory		1261942						
ANR	1262024	Symbol	NULL		1261942						
ANR	1262025	Symbol	si		1261942						
ANR	1262026	Symbol	false		1261942						
ANR	1262027	Symbol	D_ALWAYS		1261942						
ANR	1262028	Symbol	si . Errno		1261942						
ANR	1262029	Symbol	si . Error		1261942						
ANR	1262030	Function	IsSymlink	1011:0:26044:26682							
ANR	1262031	FunctionDef	IsSymlink (const char * path)		1262030	0					
ANR	1262032	CompoundStatement		1013:0:26080:26682	1262030	0					
ANR	1262033	IfStatement	if ( path == NULL )		1262030	0					
ANR	1262034	Condition	path == NULL	1014:5:26087:26098	1262030	0	True				
ANR	1262035	EqualityExpression	path == NULL		1262030	0		==			
ANR	1262036	Identifier	path		1262030	0					
ANR	1262037	Identifier	NULL		1262030	1					
ANR	1262038	CompoundStatement		2:19:20:20	1262030	1					
ANR	1262039	ReturnStatement	return false ;	1018:2:26283:26295	1262030	0	True				
ANR	1262040	Identifier	false		1262030	0					
ANR	1262041	IdentifierDeclStatement	StatInfo si ( path ) ;	1021:1:26302:26321	1262030	1	True				
ANR	1262042	IdentifierDecl	si ( path )		1262030	0					
ANR	1262043	IdentifierDeclType	StatInfo		1262030	0					
ANR	1262044	Identifier	si		1262030	1					
ANR	1262045	Identifier	path		1262030	2					
ANR	1262046	SwitchStatement	switch ( si . Error ( ) )		1262030	2					
ANR	1262047	Condition	si . Error ( )	1022:9:26332:26341	1262030	0	True				
ANR	1262048	CallExpression	si . Error ( )		1262030	0					
ANR	1262049	Callee	si . Error		1262030	0					
ANR	1262050	MemberAccess	si . Error		1262030	0					
ANR	1262051	Identifier	si		1262030	0					
ANR	1262052	Identifier	Error		1262030	1					
ANR	1262053	ArgumentList			1262030	1					
ANR	1262054	CompoundStatement		10:22:264:264	1262030	1					
ANR	1262055	Label	case SIGood :	1023:1:26348:26359	1262030	0	True				
ANR	1262056	Identifier	SIGood		1262030	0					
ANR	1262057	ReturnStatement	return si . IsSymlink ( ) ;	1024:2:26363:26384	1262030	1	True				
ANR	1262058	CallExpression	si . IsSymlink ( )		1262030	0					
ANR	1262059	Callee	si . IsSymlink		1262030	0					
ANR	1262060	MemberAccess	si . IsSymlink		1262030	0					
ANR	1262061	Identifier	si		1262030	0					
ANR	1262062	Identifier	IsSymlink		1262030	1					
ANR	1262063	ArgumentList			1262030	1					
ANR	1262064	BreakStatement	break ;	1025:2:26388:26393	1262030	2	True				
ANR	1262065	Label	case SINoFile :	1026:1:26396:26409	1262030	3	True				
ANR	1262066	Identifier	SINoFile		1262030	0					
ANR	1262067	ReturnStatement	return false ;	1028:2:26441:26453	1262030	4	True				
ANR	1262068	Identifier	false		1262030	0					
ANR	1262069	BreakStatement	break ;	1029:2:26457:26462	1262030	5	True				
ANR	1262070	Label	case SIFailure :	1030:1:26465:26479	1262030	6	True				
ANR	1262071	Identifier	SIFailure		1262030	0					
ANR	1262072	ExpressionStatement	"dprintf ( D_ALWAYS , ""IsSymlink: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"	1031:2:26483:26571	1262030	7	True				
ANR	1262073	CallExpression	"dprintf ( D_ALWAYS , ""IsSymlink: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"		1262030	0					
ANR	1262074	Callee	dprintf		1262030	0					
ANR	1262075	Identifier	dprintf		1262030	0					
ANR	1262076	ArgumentList	D_ALWAYS		1262030	1					
ANR	1262077	Argument	D_ALWAYS		1262030	0					
ANR	1262078	Identifier	D_ALWAYS		1262030	0					
ANR	1262079	Argument	"""IsSymlink: Error in stat(%s), errno: %d\\n"""		1262030	1					
ANR	1262080	PrimaryExpression	"""IsSymlink: Error in stat(%s), errno: %d\\n"""		1262030	0					
ANR	1262081	Argument	path		1262030	2					
ANR	1262082	Identifier	path		1262030	0					
ANR	1262083	Argument	si . Errno ( )		1262030	3					
ANR	1262084	CallExpression	si . Errno ( )		1262030	0					
ANR	1262085	Callee	si . Errno		1262030	0					
ANR	1262086	MemberAccess	si . Errno		1262030	0					
ANR	1262087	Identifier	si		1262030	0					
ANR	1262088	Identifier	Errno		1262030	1					
ANR	1262089	ArgumentList			1262030	1					
ANR	1262090	ReturnStatement	return false ;	1033:2:26575:26587	1262030	8	True				
ANR	1262091	Identifier	false		1262030	0					
ANR	1262092	BreakStatement	break ;	1034:2:26591:26596	1262030	9	True				
ANR	1262093	ExpressionStatement	"EXCEPT ( ""IsSymlink() unexpected error code"" )"	1037:1:26603:26646	1262030	3	True				
ANR	1262094	CallExpression	"EXCEPT ( ""IsSymlink() unexpected error code"" )"		1262030	0					
ANR	1262095	Callee	EXCEPT		1262030	0					
ANR	1262096	Identifier	EXCEPT		1262030	0					
ANR	1262097	ArgumentList	"""IsSymlink() unexpected error code"""		1262030	1					
ANR	1262098	Argument	"""IsSymlink() unexpected error code"""		1262030	0					
ANR	1262099	PrimaryExpression	"""IsSymlink() unexpected error code"""		1262030	0					
ANR	1262100	ReturnStatement	return false ;	1038:1:26668:26680	1262030	4	True				
ANR	1262101	Identifier	false		1262030	0					
ANR	1262102	ReturnType	bool		1262030	1					
ANR	1262103	Identifier	IsSymlink		1262030	2					
ANR	1262104	ParameterList	const char * path		1262030	3					
ANR	1262105	Parameter	const char * path	1012:11:26061:26076	1262030	0	True				
ANR	1262106	ParameterType	const char *		1262030	0					
ANR	1262107	Identifier	path		1262030	1					
ANR	1262108	CFGEntryNode	ENTRY		1262030		True				
ANR	1262109	CFGExitNode	EXIT		1262030		True				
ANR	1262110	Symbol	path		1262030						
ANR	1262111	Symbol	NULL		1262030						
ANR	1262112	Symbol	si		1262030						
ANR	1262113	Symbol	false		1262030						
ANR	1262114	Symbol	D_ALWAYS		1262030						
ANR	1262115	Symbol	si . Errno		1262030						
ANR	1262116	Symbol	si . Error		1262030						
ANR	1262117	Symbol	si . IsSymlink		1262030						
ANR	1262118	Function	GetIds	1043:0:26700:27252							
ANR	1262119	FunctionDef	"GetIds (const char * path , uid_t * owner , gid_t * group , si_error_t & err)"		1262118	0					
ANR	1262120	CompoundStatement		1045:0:26785:27252	1262118	0					
ANR	1262121	IdentifierDeclStatement	StatInfo si ( path ) ;	1046:1:26788:26807	1262118	0	True				
ANR	1262122	IdentifierDecl	si ( path )		1262118	0					
ANR	1262123	IdentifierDeclType	StatInfo		1262118	0					
ANR	1262124	Identifier	si		1262118	1					
ANR	1262125	Identifier	path		1262118	2					
ANR	1262126	ExpressionStatement	err = si . Error ( )	1047:1:26810:26826	1262118	1	True				
ANR	1262127	AssignmentExpression	err = si . Error ( )		1262118	0		=			
ANR	1262128	Identifier	err		1262118	0					
ANR	1262129	CallExpression	si . Error ( )		1262118	1					
ANR	1262130	Callee	si . Error		1262118	0					
ANR	1262131	MemberAccess	si . Error		1262118	0					
ANR	1262132	Identifier	si		1262118	0					
ANR	1262133	Identifier	Error		1262118	1					
ANR	1262134	ArgumentList			1262118	1					
ANR	1262135	SwitchStatement	switch ( si . Error ( ) )		1262118	2					
ANR	1262136	Condition	si . Error ( )	1048:9:26837:26846	1262118	0	True				
ANR	1262137	CallExpression	si . Error ( )		1262118	0					
ANR	1262138	Callee	si . Error		1262118	0					
ANR	1262139	MemberAccess	si . Error		1262118	0					
ANR	1262140	Identifier	si		1262118	0					
ANR	1262141	Identifier	Error		1262118	1					
ANR	1262142	ArgumentList			1262118	1					
ANR	1262143	CompoundStatement		4:22:64:64	1262118	1					
ANR	1262144	Label	case SIGood :	1049:1:26853:26864	1262118	0	True				
ANR	1262145	Identifier	SIGood		1262118	0					
ANR	1262146	ExpressionStatement	* owner = si . GetOwner ( )	1050:2:26868:26891	1262118	1	True				
ANR	1262147	AssignmentExpression	* owner = si . GetOwner ( )		1262118	0		=			
ANR	1262148	UnaryOperationExpression	* owner		1262118	0					
ANR	1262149	UnaryOperator	*		1262118	0					
ANR	1262150	Identifier	owner		1262118	1					
ANR	1262151	CallExpression	si . GetOwner ( )		1262118	1					
ANR	1262152	Callee	si . GetOwner		1262118	0					
ANR	1262153	MemberAccess	si . GetOwner		1262118	0					
ANR	1262154	Identifier	si		1262118	0					
ANR	1262155	Identifier	GetOwner		1262118	1					
ANR	1262156	ArgumentList			1262118	1					
ANR	1262157	ExpressionStatement	* group = si . GetGroup ( )	1051:2:26895:26918	1262118	2	True				
ANR	1262158	AssignmentExpression	* group = si . GetGroup ( )		1262118	0		=			
ANR	1262159	UnaryOperationExpression	* group		1262118	0					
ANR	1262160	UnaryOperator	*		1262118	0					
ANR	1262161	Identifier	group		1262118	1					
ANR	1262162	CallExpression	si . GetGroup ( )		1262118	1					
ANR	1262163	Callee	si . GetGroup		1262118	0					
ANR	1262164	MemberAccess	si . GetGroup		1262118	0					
ANR	1262165	Identifier	si		1262118	0					
ANR	1262166	Identifier	GetGroup		1262118	1					
ANR	1262167	ArgumentList			1262118	1					
ANR	1262168	ReturnStatement	return true ;	1052:2:26922:26933	1262118	3	True				
ANR	1262169	Identifier	true		1262118	0					
ANR	1262170	BreakStatement	break ;	1053:2:26937:26942	1262118	4	True				
ANR	1262171	Label	case SINoFile :	1054:1:26945:26958	1262118	5	True				
ANR	1262172	Identifier	SINoFile		1262118	0					
ANR	1262173	ReturnStatement	return false ;	1056:2:26990:27002	1262118	6	True				
ANR	1262174	Identifier	false		1262118	0					
ANR	1262175	BreakStatement	break ;	1057:2:27006:27011	1262118	7	True				
ANR	1262176	Label	case SIFailure :	1058:1:27014:27028	1262118	8	True				
ANR	1262177	Identifier	SIFailure		1262118	0					
ANR	1262178	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetIds: Error in stat(%s), errno: %d (%s)\\n"" , path , si . Errno ( ) , strerror ( si . Errno ( ) ) )"	1059:2:27032:27144	1262118	9	True				
ANR	1262179	CallExpression	"dprintf ( D_ALWAYS , ""GetIds: Error in stat(%s), errno: %d (%s)\\n"" , path , si . Errno ( ) , strerror ( si . Errno ( ) ) )"		1262118	0					
ANR	1262180	Callee	dprintf		1262118	0					
ANR	1262181	Identifier	dprintf		1262118	0					
ANR	1262182	ArgumentList	D_ALWAYS		1262118	1					
ANR	1262183	Argument	D_ALWAYS		1262118	0					
ANR	1262184	Identifier	D_ALWAYS		1262118	0					
ANR	1262185	Argument	"""GetIds: Error in stat(%s), errno: %d (%s)\\n"""		1262118	1					
ANR	1262186	PrimaryExpression	"""GetIds: Error in stat(%s), errno: %d (%s)\\n"""		1262118	0					
ANR	1262187	Argument	path		1262118	2					
ANR	1262188	Identifier	path		1262118	0					
ANR	1262189	Argument	si . Errno ( )		1262118	3					
ANR	1262190	CallExpression	si . Errno ( )		1262118	0					
ANR	1262191	Callee	si . Errno		1262118	0					
ANR	1262192	MemberAccess	si . Errno		1262118	0					
ANR	1262193	Identifier	si		1262118	0					
ANR	1262194	Identifier	Errno		1262118	1					
ANR	1262195	ArgumentList			1262118	1					
ANR	1262196	Argument	strerror ( si . Errno ( ) )		1262118	4					
ANR	1262197	CallExpression	strerror ( si . Errno ( ) )		1262118	0					
ANR	1262198	Callee	strerror		1262118	0					
ANR	1262199	Identifier	strerror		1262118	0					
ANR	1262200	ArgumentList	si . Errno ( )		1262118	1					
ANR	1262201	Argument	si . Errno ( )		1262118	0					
ANR	1262202	CallExpression	si . Errno ( )		1262118	0					
ANR	1262203	Callee	si . Errno		1262118	0					
ANR	1262204	MemberAccess	si . Errno		1262118	0					
ANR	1262205	Identifier	si		1262118	0					
ANR	1262206	Identifier	Errno		1262118	1					
ANR	1262207	ArgumentList			1262118	1					
ANR	1262208	ReturnStatement	return false ;	1061:2:27148:27160	1262118	10	True				
ANR	1262209	Identifier	false		1262118	0					
ANR	1262210	BreakStatement	break ;	1062:2:27164:27169	1262118	11	True				
ANR	1262211	ExpressionStatement	"EXCEPT ( ""GetIds() unexpected error code"" )"	1065:1:27176:27216	1262118	3	True				
ANR	1262212	CallExpression	"EXCEPT ( ""GetIds() unexpected error code"" )"		1262118	0					
ANR	1262213	Callee	EXCEPT		1262118	0					
ANR	1262214	Identifier	EXCEPT		1262118	0					
ANR	1262215	ArgumentList	"""GetIds() unexpected error code"""		1262118	1					
ANR	1262216	Argument	"""GetIds() unexpected error code"""		1262118	0					
ANR	1262217	PrimaryExpression	"""GetIds() unexpected error code"""		1262118	0					
ANR	1262218	ReturnStatement	return false ;	1066:1:27238:27250	1262118	4	True				
ANR	1262219	Identifier	false		1262118	0					
ANR	1262220	ReturnType	static bool		1262118	1					
ANR	1262221	Identifier	GetIds		1262118	2					
ANR	1262222	ParameterList	"const char * path , uid_t * owner , gid_t * group , si_error_t & err"		1262118	3					
ANR	1262223	Parameter	const char * path	1044:8:26721:26736	1262118	0	True				
ANR	1262224	ParameterType	const char *		1262118	0					
ANR	1262225	Identifier	path		1262118	1					
ANR	1262226	Parameter	uid_t * owner	1044:26:26739:26750	1262118	1	True				
ANR	1262227	ParameterType	uid_t *		1262118	0					
ANR	1262228	Identifier	owner		1262118	1					
ANR	1262229	Parameter	gid_t * group	1044:40:26753:26764	1262118	2	True				
ANR	1262230	ParameterType	gid_t *		1262118	0					
ANR	1262231	Identifier	group		1262118	1					
ANR	1262232	Parameter	si_error_t & err	1044:54:26767:26781	1262118	3	True				
ANR	1262233	ParameterType	si_error_t &		1262118	0					
ANR	1262234	Identifier	err		1262118	1					
ANR	1262235	CFGEntryNode	ENTRY		1262118		True				
ANR	1262236	CFGExitNode	EXIT		1262118		True				
ANR	1262237	Symbol	owner		1262118						
ANR	1262238	Symbol	si . GetOwner		1262118						
ANR	1262239	Symbol	err		1262118						
ANR	1262240	Symbol	* group		1262118						
ANR	1262241	Symbol	false		1262118						
ANR	1262242	Symbol	D_ALWAYS		1262118						
ANR	1262243	Symbol	* owner		1262118						
ANR	1262244	Symbol	si . GetGroup		1262118						
ANR	1262245	Symbol	strerror		1262118						
ANR	1262246	Symbol	path		1262118						
ANR	1262247	Symbol	si		1262118						
ANR	1262248	Symbol	true		1262118						
ANR	1262249	Symbol	si . Errno		1262118						
ANR	1262250	Symbol	si . Error		1262118						
ANR	1262251	Symbol	group		1262118						
ANR	1262252	Function	create_temp_file	1079:0:27506:28360							
ANR	1262253	FunctionDef	create_temp_file (bool create_as_subdirectory)		1262252	0					
ANR	1262254	CompoundStatement		1080:46:27560:28360	1262252	0					
ANR	1262255	IdentifierDeclStatement	char * temp_dir = temp_dir_path ( ) ;	1081:1:27563:27596	1262252	0	True				
ANR	1262256	IdentifierDecl	* temp_dir = temp_dir_path ( )		1262252	0					
ANR	1262257	IdentifierDeclType	char *		1262252	0					
ANR	1262258	Identifier	temp_dir		1262252	1					
ANR	1262259	AssignmentExpression	* temp_dir = temp_dir_path ( )		1262252	2		=			
ANR	1262260	Identifier	temp_dir		1262252	0					
ANR	1262261	CallExpression	temp_dir_path ( )		1262252	1					
ANR	1262262	Callee	temp_dir_path		1262252	0					
ANR	1262263	Identifier	temp_dir_path		1262252	0					
ANR	1262264	ArgumentList			1262252	1					
ANR	1262265	IdentifierDeclStatement	char * filename = ( char * ) ( malloc ( 500 ) ) ;	1082:1:27599:27638	1262252	1	True				
ANR	1262266	IdentifierDecl	* filename = ( char * ) ( malloc ( 500 ) )		1262252	0					
ANR	1262267	IdentifierDeclType	char *		1262252	0					
ANR	1262268	Identifier	filename		1262252	1					
ANR	1262269	AssignmentExpression	* filename = ( char * ) ( malloc ( 500 ) )		1262252	2		=			
ANR	1262270	Identifier	filename		1262252	0					
ANR	1262271	CastExpression	( char * ) ( malloc ( 500 ) )		1262252	1					
ANR	1262272	CastTarget	char *		1262252	0					
ANR	1262273	CallExpression	malloc ( 500 )		1262252	1					
ANR	1262274	Callee	malloc		1262252	0					
ANR	1262275	Identifier	malloc		1262252	0					
ANR	1262276	ArgumentList	500		1262252	1					
ANR	1262277	Argument	500		1262252	0					
ANR	1262278	PrimaryExpression	500		1262252	0					
ANR	1262279	IdentifierDeclStatement	int mypid ;	1083:1:27641:27650	1262252	2	True				
ANR	1262280	IdentifierDecl	mypid		1262252	0					
ANR	1262281	IdentifierDeclType	int		1262252	0					
ANR	1262282	Identifier	mypid		1262252	1					
ANR	1262283	Statement	static	1084:1:27653:27658	1262252	3	True				
ANR	1262284	IdentifierDeclStatement	unsigned int counter = 0 ;	1084:8:27660:27684	1262252	4	True				
ANR	1262285	IdentifierDecl	counter = 0		1262252	0					
ANR	1262286	IdentifierDeclType	unsigned int		1262252	0					
ANR	1262287	Identifier	counter		1262252	1					
ANR	1262288	AssignmentExpression	counter = 0		1262252	2		=			
ANR	1262289	Identifier	counter		1262252	0					
ANR	1262290	PrimaryExpression	0		1262252	1					
ANR	1262291	ExpressionStatement	mypid = GetCurrentProcessId ( )	1087:1:27701:27730	1262252	5	True				
ANR	1262292	AssignmentExpression	mypid = GetCurrentProcessId ( )		1262252	0		=			
ANR	1262293	Identifier	mypid		1262252	0					
ANR	1262294	CallExpression	GetCurrentProcessId ( )		1262252	1					
ANR	1262295	Callee	GetCurrentProcessId		1262252	0					
ANR	1262296	Identifier	GetCurrentProcessId		1262252	0					
ANR	1262297	ArgumentList			1262252	1					
ANR	1262298	IdentifierDeclStatement	int timestamp = ( int ) time ( NULL ) ;	1093:1:27802:27833	1262252	6	True				
ANR	1262299	IdentifierDecl	timestamp = ( int ) time ( NULL )		1262252	0					
ANR	1262300	IdentifierDeclType	int		1262252	0					
ANR	1262301	Identifier	timestamp		1262252	1					
ANR	1262302	AssignmentExpression	timestamp = ( int ) time ( NULL )		1262252	2		=			
ANR	1262303	Identifier	timestamp		1262252	0					
ANR	1262304	CastExpression	( int ) time ( NULL )		1262252	1					
ANR	1262305	CastTarget	int		1262252	0					
ANR	1262306	CallExpression	time ( NULL )		1262252	1					
ANR	1262307	Callee	time		1262252	0					
ANR	1262308	Identifier	time		1262252	0					
ANR	1262309	ArgumentList	NULL		1262252	1					
ANR	1262310	Argument	NULL		1262252	0					
ANR	1262311	Identifier	NULL		1262252	0					
ANR	1262312	IdentifierDeclStatement	int fd = - 1 ;	1094:1:27836:27845	1262252	7	True				
ANR	1262313	IdentifierDecl	fd = - 1		1262252	0					
ANR	1262314	IdentifierDeclType	int		1262252	0					
ANR	1262315	Identifier	fd		1262252	1					
ANR	1262316	AssignmentExpression	fd = - 1		1262252	2		=			
ANR	1262317	Identifier	fd		1262252	0					
ANR	1262318	UnaryOperationExpression	- 1		1262252	1					
ANR	1262319	UnaryOperator	-		1262252	0					
ANR	1262320	PrimaryExpression	1		1262252	1					
ANR	1262321	IdentifierDeclStatement	int retry_count = 10 ;	1096:1:27849:27869	1262252	8	True				
ANR	1262322	IdentifierDecl	retry_count = 10		1262252	0					
ANR	1262323	IdentifierDeclType	int		1262252	0					
ANR	1262324	Identifier	retry_count		1262252	1					
ANR	1262325	AssignmentExpression	retry_count = 10		1262252	2		=			
ANR	1262326	Identifier	retry_count		1262252	0					
ANR	1262327	PrimaryExpression	10		1262252	1					
ANR	1262328	DoStatement	do		1262252	9					
ANR	1262329	CompoundStatement		19:4:315:315	1262252	0					
ANR	1262330	ExpressionStatement	"snprintf ( filename , 500 , ""%s/tmp.%d.%d.%d"" , temp_dir , mypid , timestamp ++ , counter ++ )"	1099:2:27880:27964	1262252	0	True				
ANR	1262331	CallExpression	"snprintf ( filename , 500 , ""%s/tmp.%d.%d.%d"" , temp_dir , mypid , timestamp ++ , counter ++ )"		1262252	0					
ANR	1262332	Callee	snprintf		1262252	0					
ANR	1262333	Identifier	snprintf		1262252	0					
ANR	1262334	ArgumentList	filename		1262252	1					
ANR	1262335	Argument	filename		1262252	0					
ANR	1262336	Identifier	filename		1262252	0					
ANR	1262337	Argument	500		1262252	1					
ANR	1262338	PrimaryExpression	500		1262252	0					
ANR	1262339	Argument	"""%s/tmp.%d.%d.%d"""		1262252	2					
ANR	1262340	PrimaryExpression	"""%s/tmp.%d.%d.%d"""		1262252	0					
ANR	1262341	Argument	temp_dir		1262252	3					
ANR	1262342	Identifier	temp_dir		1262252	0					
ANR	1262343	Argument	mypid		1262252	4					
ANR	1262344	Identifier	mypid		1262252	0					
ANR	1262345	Argument	timestamp ++		1262252	5					
ANR	1262346	PostIncDecOperationExpression	timestamp ++		1262252	0					
ANR	1262347	Identifier	timestamp		1262252	0					
ANR	1262348	IncDec	++		1262252	1					
ANR	1262349	Argument	counter ++		1262252	6					
ANR	1262350	PostIncDecOperationExpression	counter ++		1262252	0					
ANR	1262351	Identifier	counter		1262252	0					
ANR	1262352	IncDec	++		1262252	1					
ANR	1262353	Condition	"( -- retry_count > 0 ) && ( ( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 ) )"	1100:10:27976:28189	1262252	1	True				
ANR	1262354	AndExpression	"( -- retry_count > 0 ) && ( ( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 ) )"		1262252	0		&&			
ANR	1262355	RelationalExpression	-- retry_count > 0		1262252	0		>			
ANR	1262356	UnaryExpression	-- retry_count		1262252	0					
ANR	1262357	IncDec	--		1262252	0					
ANR	1262358	Identifier	retry_count		1262252	1					
ANR	1262359	PrimaryExpression	0		1262252	1					
ANR	1262360	OrExpression	"( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 )"		1262252	1		||			
ANR	1262361	AndExpression	"! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1"		1262252	0		&&			
ANR	1262362	UnaryOperationExpression	! create_as_subdirectory		1262252	0					
ANR	1262363	UnaryOperator	!		1262252	0					
ANR	1262364	Identifier	create_as_subdirectory		1262252	1					
ANR	1262365	EqualityExpression	"( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1"		1262252	1		==			
ANR	1262366	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE )"		1262252	0		=			
ANR	1262367	Identifier	fd		1262252	0					
ANR	1262368	CallExpression	"safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE )"		1262252	1					
ANR	1262369	Callee	safe_open_wrapper_follow		1262252	0					
ANR	1262370	Identifier	safe_open_wrapper_follow		1262252	0					
ANR	1262371	ArgumentList	filename		1262252	1					
ANR	1262372	Argument	filename		1262252	0					
ANR	1262373	Identifier	filename		1262252	0					
ANR	1262374	Argument	O_EXCL | O_CREAT		1262252	1					
ANR	1262375	InclusiveOrExpression	O_EXCL | O_CREAT		1262252	0		|			
ANR	1262376	Identifier	O_EXCL		1262252	0					
ANR	1262377	Identifier	O_CREAT		1262252	1					
ANR	1262378	Argument	S_IREAD | S_IWRITE		1262252	2					
ANR	1262379	InclusiveOrExpression	S_IREAD | S_IWRITE		1262252	0		|			
ANR	1262380	Identifier	S_IREAD		1262252	0					
ANR	1262381	Identifier	S_IWRITE		1262252	1					
ANR	1262382	UnaryOperationExpression	- 1		1262252	1					
ANR	1262383	UnaryOperator	-		1262252	0					
ANR	1262384	PrimaryExpression	1		1262252	1					
ANR	1262385	AndExpression	"create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1"		1262252	1		&&			
ANR	1262386	Identifier	create_as_subdirectory		1262252	0					
ANR	1262387	EqualityExpression	"( fd = mkdir ( filename , 0700 ) ) == - 1"		1262252	1		==			
ANR	1262388	AssignmentExpression	"fd = mkdir ( filename , 0700 )"		1262252	0		=			
ANR	1262389	Identifier	fd		1262252	0					
ANR	1262390	CallExpression	"mkdir ( filename , 0700 )"		1262252	1					
ANR	1262391	Callee	mkdir		1262252	0					
ANR	1262392	Identifier	mkdir		1262252	0					
ANR	1262393	ArgumentList	filename		1262252	1					
ANR	1262394	Argument	filename		1262252	0					
ANR	1262395	Identifier	filename		1262252	0					
ANR	1262396	Argument	0700		1262252	1					
ANR	1262397	PrimaryExpression	0700		1262252	0					
ANR	1262398	UnaryOperationExpression	- 1		1262252	1					
ANR	1262399	UnaryOperator	-		1262252	0					
ANR	1262400	PrimaryExpression	1		1262252	1					
ANR	1262401	IfStatement	if ( fd == - 1 )		1262252	10					
ANR	1262402	Condition	fd == - 1	1105:5:28204:28211	1262252	0	True				
ANR	1262403	EqualityExpression	fd == - 1		1262252	0		==			
ANR	1262404	Identifier	fd		1262252	0					
ANR	1262405	UnaryOperationExpression	- 1		1262252	1					
ANR	1262406	UnaryOperator	-		1262252	0					
ANR	1262407	PrimaryExpression	1		1262252	1					
ANR	1262408	CompoundStatement		26:15:653:653	1262252	1					
ANR	1262409	ExpressionStatement	free ( temp_dir )	1106:2:28218:28232	1262252	0	True				
ANR	1262410	CallExpression	free ( temp_dir )		1262252	0					
ANR	1262411	Callee	free		1262252	0					
ANR	1262412	Identifier	free		1262252	0					
ANR	1262413	ArgumentList	temp_dir		1262252	1					
ANR	1262414	Argument	temp_dir		1262252	0					
ANR	1262415	Identifier	temp_dir		1262252	0					
ANR	1262416	ExpressionStatement	free ( filename )	1107:2:28236:28250	1262252	1	True				
ANR	1262417	CallExpression	free ( filename )		1262252	0					
ANR	1262418	Callee	free		1262252	0					
ANR	1262419	Identifier	free		1262252	0					
ANR	1262420	ArgumentList	filename		1262252	1					
ANR	1262421	Argument	filename		1262252	0					
ANR	1262422	Identifier	filename		1262252	0					
ANR	1262423	ReturnStatement	return NULL ;	1108:2:28254:28265	1262252	2	True				
ANR	1262424	Identifier	NULL		1262252	0					
ANR	1262425	IfStatement	if ( ! create_as_subdirectory )		1262252	11					
ANR	1262426	Condition	! create_as_subdirectory	1111:6:28277:28299	1262252	0	True				
ANR	1262427	UnaryOperationExpression	! create_as_subdirectory		1262252	0					
ANR	1262428	UnaryOperator	!		1262252	0					
ANR	1262429	Identifier	create_as_subdirectory		1262252	1					
ANR	1262430	CompoundStatement		32:32:742:742	1262252	1					
ANR	1262431	ExpressionStatement	close ( fd )	1112:2:28307:28317	1262252	0	True				
ANR	1262432	CallExpression	close ( fd )		1262252	0					
ANR	1262433	Callee	close		1262252	0					
ANR	1262434	Identifier	close		1262252	0					
ANR	1262435	ArgumentList	fd		1262252	1					
ANR	1262436	Argument	fd		1262252	0					
ANR	1262437	Identifier	fd		1262252	0					
ANR	1262438	ExpressionStatement	free ( temp_dir )	1115:1:28324:28339	1262252	12	True				
ANR	1262439	CallExpression	free ( temp_dir )		1262252	0					
ANR	1262440	Callee	free		1262252	0					
ANR	1262441	Identifier	free		1262252	0					
ANR	1262442	ArgumentList	temp_dir		1262252	1					
ANR	1262443	Argument	temp_dir		1262252	0					
ANR	1262444	Identifier	temp_dir		1262252	0					
ANR	1262445	ReturnStatement	return filename ;	1117:1:28343:28358	1262252	13	True				
ANR	1262446	Identifier	filename		1262252	0					
ANR	1262447	ReturnType	char *		1262252	1					
ANR	1262448	Identifier	create_temp_file		1262252	2					
ANR	1262449	ParameterList	bool create_as_subdirectory		1262252	3					
ANR	1262450	Parameter	bool create_as_subdirectory	1080:17:27531:27557	1262252	0	True				
ANR	1262451	ParameterType	bool		1262252	0					
ANR	1262452	Identifier	create_as_subdirectory		1262252	1					
ANR	1262453	CFGEntryNode	ENTRY		1262252		True				
ANR	1262454	CFGExitNode	EXIT		1262252		True				
ANR	1262455	Symbol	malloc		1262252						
ANR	1262456	Symbol	NULL		1262252						
ANR	1262457	Symbol	safe_open_wrapper_follow		1262252						
ANR	1262458	Symbol	create_as_subdirectory		1262252						
ANR	1262459	Symbol	O_CREAT		1262252						
ANR	1262460	Symbol	O_EXCL		1262252						
ANR	1262461	Symbol	mypid		1262252						
ANR	1262462	Symbol	counter		1262252						
ANR	1262463	Symbol	GetCurrentProcessId		1262252						
ANR	1262464	Symbol	S_IWRITE		1262252						
ANR	1262465	Symbol	filename		1262252						
ANR	1262466	Symbol	temp_dir_path		1262252						
ANR	1262467	Symbol	temp_dir		1262252						
ANR	1262468	Symbol	retry_count		1262252						
ANR	1262469	Symbol	time		1262252						
ANR	1262470	Symbol	mkdir		1262252						
ANR	1262471	Symbol	fd		1262252						
ANR	1262472	Symbol	timestamp		1262252						
ANR	1262473	Symbol	S_IREAD		1262252						
ANR	1262474	DeclStmt									
ANR	1262475	Decl							bool	"bool ( const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid )"	recursive_chown_impl
ANR	1262476	Function	recursive_chown_impl_fast	1132:0:28657:30146							
ANR	1262477	FunctionDef	"recursive_chown_impl_fast (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid)"		1262476	0					
ANR	1262478	CompoundStatement		1134:0:28760:30146	1262476	0					
ANR	1262479	IdentifierDeclStatement	StatInfo si ( path ) ;	1135:1:28763:28780	1262476	0	True				
ANR	1262480	IdentifierDecl	si ( path )		1262476	0					
ANR	1262481	IdentifierDeclType	StatInfo		1262476	0					
ANR	1262482	Identifier	si		1262476	1					
ANR	1262483	Identifier	path		1262476	2					
ANR	1262484	IfStatement	if ( si . Error ( ) != SIGood )		1262476	1					
ANR	1262485	Condition	si . Error ( ) != SIGood	1136:4:28786:28805	1262476	0	True				
ANR	1262486	EqualityExpression	si . Error ( ) != SIGood		1262476	0		!=			
ANR	1262487	CallExpression	si . Error ( )		1262476	0					
ANR	1262488	Callee	si . Error		1262476	0					
ANR	1262489	MemberAccess	si . Error		1262476	0					
ANR	1262490	Identifier	si		1262476	0					
ANR	1262491	Identifier	Error		1262476	1					
ANR	1262492	ArgumentList			1262476	1					
ANR	1262493	Identifier	SIGood		1262476	1					
ANR	1262494	CompoundStatement		3:26:47:47	1262476	1					
ANR	1262495	IfStatement	if ( si . Error ( ) == SINoFile )		1262476	0					
ANR	1262496	Condition	si . Error ( ) == SINoFile	1137:5:28815:28836	1262476	0	True				
ANR	1262497	EqualityExpression	si . Error ( ) == SINoFile		1262476	0		==			
ANR	1262498	CallExpression	si . Error ( )		1262476	0					
ANR	1262499	Callee	si . Error		1262476	0					
ANR	1262500	MemberAccess	si . Error		1262476	0					
ANR	1262501	Identifier	si		1262476	0					
ANR	1262502	Identifier	Error		1262476	1					
ANR	1262503	ArgumentList			1262476	1					
ANR	1262504	Identifier	SINoFile		1262476	1					
ANR	1262505	CompoundStatement		4:29:78:78	1262476	1					
ANR	1262506	Statement	dprintf	1138:3:28844:28850	1262476	0	True				
ANR	1262507	Statement	(	1138:10:28851:28851	1262476	1	True				
ANR	1262508	Statement	D_FULLDEBUG	1138:11:28852:28862	1262476	2	True				
ANR	1262509	Statement	","	1138:22:28863:28863	1262476	3	True				
ANR	1262510	Statement	"""Attempting to chown '%s', """	1138:24:28865:28892	1262476	4	True				
ANR	1262511	Statement	"""but it doesn't appear to exist.\\n"""	1139:4:28898:28932	1262476	5	True				
ANR	1262512	Statement	","	1139:39:28933:28933	1262476	6	True				
ANR	1262513	Statement	path	1139:41:28935:28938	1262476	7	True				
ANR	1262514	Statement	)	1139:45:28939:28939	1262476	8	True				
ANR	1262515	ExpressionStatement		1139:46:28940:28940	1262476	9	True				
ANR	1262516	ElseStatement	else		1262476	0					
ANR	1262517	CompoundStatement		7:9:191:191	1262476	0					
ANR	1262518	Statement	dprintf	1141:3:28957:28963	1262476	0	True				
ANR	1262519	Statement	(	1141:10:28964:28964	1262476	1	True				
ANR	1262520	Statement	D_ALWAYS	1141:11:28965:28972	1262476	2	True				
ANR	1262521	Statement	","	1141:19:28973:28973	1262476	3	True				
ANR	1262522	Statement	"""Attempting to chown '%s', """	1141:21:28975:29002	1262476	4	True				
ANR	1262523	Statement	"""but encountered an error inspecting it (errno %d)\\n"""	1142:4:29008:29060	1262476	5	True				
ANR	1262524	Statement	","	1142:57:29061:29061	1262476	6	True				
ANR	1262525	Statement	path	1143:4:29067:29070	1262476	7	True				
ANR	1262526	Statement	","	1143:8:29071:29071	1262476	8	True				
ANR	1262527	Statement	si	1143:10:29073:29074	1262476	9	True				
ANR	1262528	Statement	.	1143:12:29075:29075	1262476	10	True				
ANR	1262529	Statement	Errno	1143:13:29076:29080	1262476	11	True				
ANR	1262530	Statement	(	1143:18:29081:29081	1262476	12	True				
ANR	1262531	Statement	)	1143:19:29082:29082	1262476	13	True				
ANR	1262532	Statement	)	1143:20:29083:29083	1262476	14	True				
ANR	1262533	ExpressionStatement		1143:21:29084:29084	1262476	15	True				
ANR	1262534	ReturnStatement	return false ;	1145:2:29093:29105	1262476	1	True				
ANR	1262535	Identifier	false		1262476	0					
ANR	1262536	IdentifierDeclStatement	uid_t real_uid = si . GetOwner ( ) ;	1148:1:29112:29142	1262476	2	True				
ANR	1262537	IdentifierDecl	real_uid = si . GetOwner ( )		1262476	0					
ANR	1262538	IdentifierDeclType	uid_t		1262476	0					
ANR	1262539	Identifier	real_uid		1262476	1					
ANR	1262540	AssignmentExpression	real_uid = si . GetOwner ( )		1262476	2		=			
ANR	1262541	Identifier	real_uid		1262476	0					
ANR	1262542	CallExpression	si . GetOwner ( )		1262476	1					
ANR	1262543	Callee	si . GetOwner		1262476	0					
ANR	1262544	MemberAccess	si . GetOwner		1262476	0					
ANR	1262545	Identifier	si		1262476	0					
ANR	1262546	Identifier	GetOwner		1262476	1					
ANR	1262547	ArgumentList			1262476	1					
ANR	1262548	IfStatement	if ( real_uid != src_uid && real_uid != dst_uid )		1262476	3					
ANR	1262549	Condition	real_uid != src_uid && real_uid != dst_uid	1149:4:29148:29189	1262476	0	True				
ANR	1262550	AndExpression	real_uid != src_uid && real_uid != dst_uid		1262476	0		&&			
ANR	1262551	EqualityExpression	real_uid != src_uid		1262476	0		!=			
ANR	1262552	Identifier	real_uid		1262476	0					
ANR	1262553	Identifier	src_uid		1262476	1					
ANR	1262554	EqualityExpression	real_uid != dst_uid		1262476	1		!=			
ANR	1262555	Identifier	real_uid		1262476	0					
ANR	1262556	Identifier	dst_uid		1262476	1					
ANR	1262557	CompoundStatement		16:48:431:431	1262476	1					
ANR	1262558	Statement	dprintf	1150:2:29196:29202	1262476	0	True				
ANR	1262559	Statement	(	1150:9:29203:29203	1262476	1	True				
ANR	1262560	Statement	D_ALWAYS	1150:10:29204:29211	1262476	2	True				
ANR	1262561	Statement	","	1150:18:29212:29212	1262476	3	True				
ANR	1262562	Statement	"""Attempting to chown '%s' from %d to %d.%d,"""	1150:20:29214:29257	1262476	4	True				
ANR	1262563	Statement	""" but the path was unexpectedly owned by %d\\n"""	1151:3:29262:29307	1262476	5	True				
ANR	1262564	Statement	","	1151:49:29308:29308	1262476	6	True				
ANR	1262565	Statement	path	1152:3:29314:29317	1262476	7	True				
ANR	1262566	Statement	","	1152:7:29318:29318	1262476	8	True				
ANR	1262567	Statement	(	1152:9:29320:29320	1262476	9	True				
ANR	1262568	Statement	int	1152:10:29321:29323	1262476	10	True				
ANR	1262569	Statement	)	1152:13:29324:29324	1262476	11	True				
ANR	1262570	Statement	src_uid	1152:14:29325:29331	1262476	12	True				
ANR	1262571	Statement	","	1152:21:29332:29332	1262476	13	True				
ANR	1262572	Statement	(	1152:23:29334:29334	1262476	14	True				
ANR	1262573	Statement	int	1152:24:29335:29337	1262476	15	True				
ANR	1262574	Statement	)	1152:27:29338:29338	1262476	16	True				
ANR	1262575	Statement	dst_uid	1152:28:29339:29345	1262476	17	True				
ANR	1262576	Statement	","	1152:35:29346:29346	1262476	18	True				
ANR	1262577	Statement	(	1152:37:29348:29348	1262476	19	True				
ANR	1262578	Statement	int	1152:38:29349:29351	1262476	20	True				
ANR	1262579	Statement	)	1152:41:29352:29352	1262476	21	True				
ANR	1262580	Statement	dst_gid	1152:42:29353:29359	1262476	22	True				
ANR	1262581	Statement	","	1152:49:29360:29360	1262476	23	True				
ANR	1262582	Statement	(	1153:3:29366:29366	1262476	24	True				
ANR	1262583	Statement	int	1153:4:29367:29369	1262476	25	True				
ANR	1262584	Statement	)	1153:7:29370:29370	1262476	26	True				
ANR	1262585	Statement	real_uid	1153:8:29371:29378	1262476	27	True				
ANR	1262586	Statement	)	1153:16:29379:29379	1262476	28	True				
ANR	1262587	ExpressionStatement		1153:17:29380:29380	1262476	29	True				
ANR	1262588	ReturnStatement	return false ;	1154:2:29384:29396	1262476	30	True				
ANR	1262589	Identifier	false		1262476	0					
ANR	1262590	IfStatement	if ( IsDirectory ( path ) )		1262476	4					
ANR	1262591	Condition	IsDirectory ( path )	1157:5:29407:29423	1262476	0	True				
ANR	1262592	CallExpression	IsDirectory ( path )		1262476	0					
ANR	1262593	Callee	IsDirectory		1262476	0					
ANR	1262594	Identifier	IsDirectory		1262476	0					
ANR	1262595	ArgumentList	path		1262476	1					
ANR	1262596	Argument	path		1262476	0					
ANR	1262597	Identifier	path		1262476	0					
ANR	1262598	CompoundStatement		26:2:693:718	1262476	1					
ANR	1262599	IdentifierDeclStatement	Directory dir ( path ) ;	1158:2:29431:29450	1262476	0	True				
ANR	1262600	IdentifierDecl	dir ( path )		1262476	0					
ANR	1262601	IdentifierDeclType	Directory		1262476	0					
ANR	1262602	Identifier	dir		1262476	1					
ANR	1262603	Identifier	path		1262476	2					
ANR	1262604	IdentifierDeclStatement	const char * filename = 0 ;	1159:2:29454:29479	1262476	1	True				
ANR	1262605	IdentifierDecl	* filename = 0		1262476	0					
ANR	1262606	IdentifierDeclType	const char *		1262476	0					
ANR	1262607	Identifier	filename		1262476	1					
ANR	1262608	AssignmentExpression	* filename = 0		1262476	2		=			
ANR	1262609	Identifier	filename		1262476	0					
ANR	1262610	PrimaryExpression	0		1262476	1					
ANR	1262611	WhileStatement	while ( ( filename = dir . Next ( ) ) )		1262476	2					
ANR	1262612	Condition	filename = dir . Next ( )	1160:9:29490:29512	1262476	0	True				
ANR	1262613	AssignmentExpression	filename = dir . Next ( )		1262476	0		=			
ANR	1262614	Identifier	filename		1262476	0					
ANR	1262615	CallExpression	dir . Next ( )		1262476	1					
ANR	1262616	Callee	dir . Next		1262476	0					
ANR	1262617	MemberAccess	dir . Next		1262476	0					
ANR	1262618	Identifier	dir		1262476	0					
ANR	1262619	Identifier	Next		1262476	1					
ANR	1262620	ArgumentList			1262476	1					
ANR	1262621	CompoundStatement		27:35:755:755	1262476	1					
ANR	1262622	ExpressionStatement	filename = dir . GetFullPath ( )	1164:3:29669:29697	1262476	0	True				
ANR	1262623	AssignmentExpression	filename = dir . GetFullPath ( )		1262476	0		=			
ANR	1262624	Identifier	filename		1262476	0					
ANR	1262625	CallExpression	dir . GetFullPath ( )		1262476	1					
ANR	1262626	Callee	dir . GetFullPath		1262476	0					
ANR	1262627	MemberAccess	dir . GetFullPath		1262476	0					
ANR	1262628	Identifier	dir		1262476	0					
ANR	1262629	Identifier	GetFullPath		1262476	1					
ANR	1262630	ArgumentList			1262476	1					
ANR	1262631	IfStatement	"if ( ! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid ) )"		1262476	1					
ANR	1262632	Condition	"! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"	1165:7:29706:29769	1262476	0	True				
ANR	1262633	UnaryOperationExpression	"! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"		1262476	0					
ANR	1262634	UnaryOperator	!		1262476	0					
ANR	1262635	CallExpression	"recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"		1262476	1					
ANR	1262636	Callee	recursive_chown_impl		1262476	0					
ANR	1262637	Identifier	recursive_chown_impl		1262476	0					
ANR	1262638	ArgumentList	filename		1262476	1					
ANR	1262639	Argument	filename		1262476	0					
ANR	1262640	Identifier	filename		1262476	0					
ANR	1262641	Argument	src_uid		1262476	1					
ANR	1262642	Identifier	src_uid		1262476	0					
ANR	1262643	Argument	dst_uid		1262476	2					
ANR	1262644	Identifier	dst_uid		1262476	0					
ANR	1262645	Argument	dst_gid		1262476	3					
ANR	1262646	Identifier	dst_gid		1262476	0					
ANR	1262647	CompoundStatement		33:25:1012:1012	1262476	1					
ANR	1262648	ReturnStatement	return false ;	1167:4:29779:29791	1262476	0	True				
ANR	1262649	Identifier	false		1262476	0					
ANR	1262650	IfStatement	"if ( chown ( path , dst_uid , dst_gid ) != 0 )"		1262476	5					
ANR	1262651	Condition	"chown ( path , dst_uid , dst_gid ) != 0"	1177:5:30074:30107	1262476	0	True				
ANR	1262652	EqualityExpression	"chown ( path , dst_uid , dst_gid ) != 0"		1262476	0		!=			
ANR	1262653	CallExpression	"chown ( path , dst_uid , dst_gid )"		1262476	0					
ANR	1262654	Callee	chown		1262476	0					
ANR	1262655	Identifier	chown		1262476	0					
ANR	1262656	ArgumentList	path		1262476	1					
ANR	1262657	Argument	path		1262476	0					
ANR	1262658	Identifier	path		1262476	0					
ANR	1262659	Argument	dst_uid		1262476	1					
ANR	1262660	Identifier	dst_uid		1262476	0					
ANR	1262661	Argument	dst_gid		1262476	2					
ANR	1262662	Identifier	dst_gid		1262476	0					
ANR	1262663	PrimaryExpression	0		1262476	1					
ANR	1262664	CompoundStatement		44:42:1350:1350	1262476	1					
ANR	1262665	ReturnStatement	return false ;	1178:2:30115:30127	1262476	0	True				
ANR	1262666	Identifier	false		1262476	0					
ANR	1262667	ReturnStatement	return true ;	1180:1:30133:30144	1262476	6	True				
ANR	1262668	Identifier	true		1262476	0					
ANR	1262669	ReturnType	static bool		1262476	1					
ANR	1262670	Identifier	recursive_chown_impl_fast		1262476	2					
ANR	1262671	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid"		1262476	3					
ANR	1262672	Parameter	const char * path	1132:38:28695:28711	1262476	0	True				
ANR	1262673	ParameterType	const char *		1262476	0					
ANR	1262674	Identifier	path		1262476	1					
ANR	1262675	Parameter	uid_t src_uid	1133:1:28715:28727	1262476	1	True				
ANR	1262676	ParameterType	uid_t		1262476	0					
ANR	1262677	Identifier	src_uid		1262476	1					
ANR	1262678	Parameter	uid_t dst_uid	1133:16:28730:28742	1262476	2	True				
ANR	1262679	ParameterType	uid_t		1262476	0					
ANR	1262680	Identifier	dst_uid		1262476	1					
ANR	1262681	Parameter	gid_t dst_gid	1133:31:28745:28757	1262476	3	True				
ANR	1262682	ParameterType	gid_t		1262476	0					
ANR	1262683	Identifier	dst_gid		1262476	1					
ANR	1262684	CFGEntryNode	ENTRY		1262476		True				
ANR	1262685	CFGExitNode	EXIT		1262476		True				
ANR	1262686	Symbol	src_uid		1262476						
ANR	1262687	Symbol	recursive_chown_impl		1262476						
ANR	1262688	Symbol	si . GetOwner		1262476						
ANR	1262689	Symbol	IsDirectory		1262476						
ANR	1262690	Symbol	chown		1262476						
ANR	1262691	Symbol	false		1262476						
ANR	1262692	Symbol	dst_uid		1262476						
ANR	1262693	Symbol	dir		1262476						
ANR	1262694	Symbol	dir . Next		1262476						
ANR	1262695	Symbol	real_uid		1262476						
ANR	1262696	Symbol	dir . GetFullPath		1262476						
ANR	1262697	Symbol	path		1262476						
ANR	1262698	Symbol	dst_gid		1262476						
ANR	1262699	Symbol	SINoFile		1262476						
ANR	1262700	Symbol	filename		1262476						
ANR	1262701	Symbol	si		1262476						
ANR	1262702	Symbol	true		1262476						
ANR	1262703	Symbol	SIGood		1262476						
ANR	1262704	Symbol	si . Error		1262476						
ANR	1262705	Function	recursive_chown_impl	1185:0:30192:30894							
ANR	1262706	FunctionDef	"recursive_chown_impl (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid)"		1262705	0					
ANR	1262707	CompoundStatement		1187:0:30291:30894	1262705	0					
ANR	1262708	ExpressionStatement	ASSERT ( get_priv ( ) == PRIV_ROOT )	1188:1:30294:30325	1262705	0	True				
ANR	1262709	CallExpression	ASSERT ( get_priv ( ) == PRIV_ROOT )		1262705	0					
ANR	1262710	Callee	ASSERT		1262705	0					
ANR	1262711	Identifier	ASSERT		1262705	0					
ANR	1262712	ArgumentList	get_priv ( ) == PRIV_ROOT		1262705	1					
ANR	1262713	Argument	get_priv ( ) == PRIV_ROOT		1262705	0					
ANR	1262714	EqualityExpression	get_priv ( ) == PRIV_ROOT		1262705	0		==			
ANR	1262715	CallExpression	get_priv ( )		1262705	0					
ANR	1262716	Callee	get_priv		1262705	0					
ANR	1262717	Identifier	get_priv		1262705	0					
ANR	1262718	ArgumentList			1262705	1					
ANR	1262719	Identifier	PRIV_ROOT		1262705	1					
ANR	1262720	IfStatement	"if ( recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid ) )"		1262705	1					
ANR	1262721	Condition	"recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid )"	1190:5:30334:30391	1262705	0	True				
ANR	1262722	CallExpression	"recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid )"		1262705	0					
ANR	1262723	Callee	recursive_chown_impl_fast		1262705	0					
ANR	1262724	Identifier	recursive_chown_impl_fast		1262705	0					
ANR	1262725	ArgumentList	path		1262705	1					
ANR	1262726	Argument	path		1262705	0					
ANR	1262727	Identifier	path		1262705	0					
ANR	1262728	Argument	src_uid		1262705	1					
ANR	1262729	Identifier	src_uid		1262705	0					
ANR	1262730	Argument	dst_uid		1262705	2					
ANR	1262731	Identifier	dst_uid		1262705	0					
ANR	1262732	Argument	dst_gid		1262705	3					
ANR	1262733	Identifier	dst_gid		1262705	0					
ANR	1262734	CompoundStatement		4:66:103:103	1262705	1					
ANR	1262735	ReturnStatement	return true ;	1191:2:30399:30410	1262705	0	True				
ANR	1262736	Identifier	true		1262705	0					
ANR	1262737	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Error: Unable to chown '%s' from %d to %d.%d\\n"" , path , ( int ) src_uid , ( int ) dst_uid , ( int ) dst_gid )"	1204:1:30757:30877	1262705	2	True				
ANR	1262738	CallExpression	"dprintf ( D_FULLDEBUG , ""Error: Unable to chown '%s' from %d to %d.%d\\n"" , path , ( int ) src_uid , ( int ) dst_uid , ( int ) dst_gid )"		1262705	0					
ANR	1262739	Callee	dprintf		1262705	0					
ANR	1262740	Identifier	dprintf		1262705	0					
ANR	1262741	ArgumentList	D_FULLDEBUG		1262705	1					
ANR	1262742	Argument	D_FULLDEBUG		1262705	0					
ANR	1262743	Identifier	D_FULLDEBUG		1262705	0					
ANR	1262744	Argument	"""Error: Unable to chown '%s' from %d to %d.%d\\n"""		1262705	1					
ANR	1262745	PrimaryExpression	"""Error: Unable to chown '%s' from %d to %d.%d\\n"""		1262705	0					
ANR	1262746	Argument	path		1262705	2					
ANR	1262747	Identifier	path		1262705	0					
ANR	1262748	Argument	( int ) src_uid		1262705	3					
ANR	1262749	CastExpression	( int ) src_uid		1262705	0					
ANR	1262750	CastTarget	int		1262705	0					
ANR	1262751	Identifier	src_uid		1262705	1					
ANR	1262752	Argument	( int ) dst_uid		1262705	4					
ANR	1262753	CastExpression	( int ) dst_uid		1262705	0					
ANR	1262754	CastTarget	int		1262705	0					
ANR	1262755	Identifier	dst_uid		1262705	1					
ANR	1262756	Argument	( int ) dst_gid		1262705	5					
ANR	1262757	CastExpression	( int ) dst_gid		1262705	0					
ANR	1262758	CastTarget	int		1262705	0					
ANR	1262759	Identifier	dst_gid		1262705	1					
ANR	1262760	ReturnStatement	return false ;	1206:1:30880:30892	1262705	3	True				
ANR	1262761	Identifier	false		1262705	0					
ANR	1262762	ReturnType	static bool		1262705	1					
ANR	1262763	Identifier	recursive_chown_impl		1262705	2					
ANR	1262764	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid"		1262705	3					
ANR	1262765	Parameter	const char * path	1185:33:30225:30241	1262705	0	True				
ANR	1262766	ParameterType	const char *		1262705	0					
ANR	1262767	Identifier	path		1262705	1					
ANR	1262768	Parameter	uid_t src_uid	1186:1:30246:30258	1262705	1	True				
ANR	1262769	ParameterType	uid_t		1262705	0					
ANR	1262770	Identifier	src_uid		1262705	1					
ANR	1262771	Parameter	uid_t dst_uid	1186:16:30261:30273	1262705	2	True				
ANR	1262772	ParameterType	uid_t		1262705	0					
ANR	1262773	Identifier	dst_uid		1262705	1					
ANR	1262774	Parameter	gid_t dst_gid	1186:31:30276:30288	1262705	3	True				
ANR	1262775	ParameterType	gid_t		1262705	0					
ANR	1262776	Identifier	dst_gid		1262705	1					
ANR	1262777	CFGEntryNode	ENTRY		1262705		True				
ANR	1262778	CFGExitNode	EXIT		1262705		True				
ANR	1262779	Symbol	src_uid		1262705						
ANR	1262780	Symbol	path		1262705						
ANR	1262781	Symbol	recursive_chown_impl_fast		1262705						
ANR	1262782	Symbol	dst_gid		1262705						
ANR	1262783	Symbol	get_priv		1262705						
ANR	1262784	Symbol	true		1262705						
ANR	1262785	Symbol	false		1262705						
ANR	1262786	Symbol	PRIV_ROOT		1262705						
ANR	1262787	Symbol	dst_uid		1262705						
ANR	1262788	Symbol	D_FULLDEBUG		1262705						
ANR	1262789	Function	recursive_chown	1214:0:31124:32114							
ANR	1262790	FunctionDef	"recursive_chown (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay)"		1262789	0					
ANR	1262791	CompoundStatement		1217:0:31245:32114	1262789	0					
ANR	1262792	IfStatement	if ( ! can_switch_ids ( ) )		1262789	0					
ANR	1262793	Condition	! can_switch_ids ( )	1219:5:31298:31315	1262789	0	True				
ANR	1262794	UnaryOperationExpression	! can_switch_ids ( )		1262789	0					
ANR	1262795	UnaryOperator	!		1262789	0					
ANR	1262796	CallExpression	can_switch_ids ( )		1262789	1					
ANR	1262797	Callee	can_switch_ids		1262789	0					
ANR	1262798	Identifier	can_switch_ids		1262789	0					
ANR	1262799	ArgumentList			1262789	1					
ANR	1262800	CompoundStatement		3:25:72:72	1262789	1					
ANR	1262801	IfStatement	if ( non_root_okay )		1262789	0					
ANR	1262802	Condition	non_root_okay	1222:6:31362:31374	1262789	0	True				
ANR	1262803	Identifier	non_root_okay		1262789	0					
ANR	1262804	CompoundStatement		6:21:131:131	1262789	1					
ANR	1262805	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"" , path , src_uid , dst_uid , dst_gid )"	1224:3:31403:31616	1262789	0	True				
ANR	1262806	CallExpression	"dprintf ( D_FULLDEBUG , ""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"" , path , src_uid , dst_uid , dst_gid )"		1262789	0					
ANR	1262807	Callee	dprintf		1262789	0					
ANR	1262808	Identifier	dprintf		1262789	0					
ANR	1262809	ArgumentList	D_FULLDEBUG		1262789	1					
ANR	1262810	Argument	D_FULLDEBUG		1262789	0					
ANR	1262811	Identifier	D_FULLDEBUG		1262789	0					
ANR	1262812	Argument	"""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"""		1262789	1					
ANR	1262813	PrimaryExpression	"""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"""		1262789	0					
ANR	1262814	Argument	path		1262789	2					
ANR	1262815	Identifier	path		1262789	0					
ANR	1262816	Argument	src_uid		1262789	3					
ANR	1262817	Identifier	src_uid		1262789	0					
ANR	1262818	Argument	dst_uid		1262789	4					
ANR	1262819	Identifier	dst_uid		1262789	0					
ANR	1262820	Argument	dst_gid		1262789	5					
ANR	1262821	Identifier	dst_gid		1262789	0					
ANR	1262822	ReturnStatement	return true ;	1225:3:31621:31632	1262789	1	True				
ANR	1262823	Identifier	true		1262789	0					
ANR	1262824	ElseStatement	else		1262789	0					
ANR	1262825	CompoundStatement		11:9:398:398	1262789	0					
ANR	1262826	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"" , path , src_uid , dst_uid , dst_gid )"	1229:3:31685:31800	1262789	0	True				
ANR	1262827	CallExpression	"dprintf ( D_ALWAYS , ""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"" , path , src_uid , dst_uid , dst_gid )"		1262789	0					
ANR	1262828	Callee	dprintf		1262789	0					
ANR	1262829	Identifier	dprintf		1262789	0					
ANR	1262830	ArgumentList	D_ALWAYS		1262789	1					
ANR	1262831	Argument	D_ALWAYS		1262789	0					
ANR	1262832	Identifier	D_ALWAYS		1262789	0					
ANR	1262833	Argument	"""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"""		1262789	1					
ANR	1262834	PrimaryExpression	"""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"""		1262789	0					
ANR	1262835	Argument	path		1262789	2					
ANR	1262836	Identifier	path		1262789	0					
ANR	1262837	Argument	src_uid		1262789	3					
ANR	1262838	Identifier	src_uid		1262789	0					
ANR	1262839	Argument	dst_uid		1262789	4					
ANR	1262840	Identifier	dst_uid		1262789	0					
ANR	1262841	Argument	dst_gid		1262789	5					
ANR	1262842	Identifier	dst_gid		1262789	0					
ANR	1262843	ReturnStatement	return false ;	1230:3:31805:31817	1262789	1	True				
ANR	1262844	Identifier	false		1262789	0					
ANR	1262845	IdentifierDeclStatement	priv_state previous = set_priv ( PRIV_ROOT ) ;	1238:1:31973:32014	1262789	1	True				
ANR	1262846	IdentifierDecl	previous = set_priv ( PRIV_ROOT )		1262789	0					
ANR	1262847	IdentifierDeclType	priv_state		1262789	0					
ANR	1262848	Identifier	previous		1262789	1					
ANR	1262849	AssignmentExpression	previous = set_priv ( PRIV_ROOT )		1262789	2		=			
ANR	1262850	Identifier	previous		1262789	0					
ANR	1262851	CallExpression	set_priv ( PRIV_ROOT )		1262789	1					
ANR	1262852	Callee	set_priv		1262789	0					
ANR	1262853	Identifier	set_priv		1262789	0					
ANR	1262854	ArgumentList	PRIV_ROOT		1262789	1					
ANR	1262855	Argument	PRIV_ROOT		1262789	0					
ANR	1262856	Identifier	PRIV_ROOT		1262789	0					
ANR	1262857	IdentifierDeclStatement	"bool ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid ) ;"	1239:1:32017:32078	1262789	2	True				
ANR	1262858	IdentifierDecl	"ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		1262789	0					
ANR	1262859	IdentifierDeclType	bool		1262789	0					
ANR	1262860	Identifier	ret		1262789	1					
ANR	1262861	AssignmentExpression	"ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		1262789	2		=			
ANR	1262862	Identifier	ret		1262789	0					
ANR	1262863	CallExpression	"recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		1262789	1					
ANR	1262864	Callee	recursive_chown_impl		1262789	0					
ANR	1262865	Identifier	recursive_chown_impl		1262789	0					
ANR	1262866	ArgumentList	path		1262789	1					
ANR	1262867	Argument	path		1262789	0					
ANR	1262868	Identifier	path		1262789	0					
ANR	1262869	Argument	src_uid		1262789	1					
ANR	1262870	Identifier	src_uid		1262789	0					
ANR	1262871	Argument	dst_uid		1262789	2					
ANR	1262872	Identifier	dst_uid		1262789	0					
ANR	1262873	Argument	dst_gid		1262789	3					
ANR	1262874	Identifier	dst_gid		1262789	0					
ANR	1262875	ExpressionStatement	set_priv ( previous )	1240:1:32081:32099	1262789	3	True				
ANR	1262876	CallExpression	set_priv ( previous )		1262789	0					
ANR	1262877	Callee	set_priv		1262789	0					
ANR	1262878	Identifier	set_priv		1262789	0					
ANR	1262879	ArgumentList	previous		1262789	1					
ANR	1262880	Argument	previous		1262789	0					
ANR	1262881	Identifier	previous		1262789	0					
ANR	1262882	ReturnStatement	return ret ;	1241:1:32102:32112	1262789	4	True				
ANR	1262883	Identifier	ret		1262789	0					
ANR	1262884	ReturnType	bool		1262789	1					
ANR	1262885	Identifier	recursive_chown		1262789	2					
ANR	1262886	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay"		1262789	3					
ANR	1262887	Parameter	const char * path	1214:21:31145:31161	1262789	0	True				
ANR	1262888	ParameterType	const char *		1262789	0					
ANR	1262889	Identifier	path		1262789	1					
ANR	1262890	Parameter	uid_t src_uid	1215:1:31165:31177	1262789	1	True				
ANR	1262891	ParameterType	uid_t		1262789	0					
ANR	1262892	Identifier	src_uid		1262789	1					
ANR	1262893	Parameter	uid_t dst_uid	1215:16:31180:31192	1262789	2	True				
ANR	1262894	ParameterType	uid_t		1262789	0					
ANR	1262895	Identifier	dst_uid		1262789	1					
ANR	1262896	Parameter	gid_t dst_gid	1215:31:31195:31207	1262789	3	True				
ANR	1262897	ParameterType	gid_t		1262789	0					
ANR	1262898	Identifier	dst_gid		1262789	1					
ANR	1262899	Parameter	bool non_root_okay	1216:1:31212:31229	1262789	4	True				
ANR	1262900	ParameterType	bool		1262789	0					
ANR	1262901	Identifier	non_root_okay		1262789	1					
ANR	1262902	CFGEntryNode	ENTRY		1262789		True				
ANR	1262903	CFGExitNode	EXIT		1262789		True				
ANR	1262904	Symbol	src_uid		1262789						
ANR	1262905	Symbol	ret		1262789						
ANR	1262906	Symbol	recursive_chown_impl		1262789						
ANR	1262907	Symbol	previous		1262789						
ANR	1262908	Symbol	D_ALWAYS		1262789						
ANR	1262909	Symbol	false		1262789						
ANR	1262910	Symbol	dst_uid		1262789						
ANR	1262911	Symbol	D_FULLDEBUG		1262789						
ANR	1262912	Symbol	path		1262789						
ANR	1262913	Symbol	set_priv		1262789						
ANR	1262914	Symbol	dst_gid		1262789						
ANR	1262915	Symbol	can_switch_ids		1262789						
ANR	1262916	Symbol	non_root_okay		1262789						
ANR	1262917	Symbol	true		1262789						
ANR	1262918	Symbol	PRIV_ROOT		1262789						
ANR	1262919	Function	mkdir_and_parents_if_needed_cur_priv	1246:0:32148:33470							
ANR	1262920	FunctionDef	"mkdir_and_parents_if_needed_cur_priv (const char * path , mode_t mode)"		1262919	0					
ANR	1262921	CompoundStatement		1247:0:32223:33470	1262919	0					
ANR	1262922	IdentifierDeclStatement	int tries = 0 ;	1248:1:32226:32239	1262919	0	True				
ANR	1262923	IdentifierDecl	tries = 0		1262919	0					
ANR	1262924	IdentifierDeclType	int		1262919	0					
ANR	1262925	Identifier	tries		1262919	1					
ANR	1262926	AssignmentExpression	tries = 0		1262919	2		=			
ANR	1262927	Identifier	tries		1262919	0					
ANR	1262928	PrimaryExpression	0		1262919	1					
ANR	1262929	ForStatement	for ( tries = 0 ; tries < 100 ; tries ++ )		1262919	1					
ANR	1262930	ForInit	tries = 0 ;	1259:5:32712:32719	1262919	0	True				
ANR	1262931	AssignmentExpression	tries = 0		1262919	0		=			
ANR	1262932	Identifier	tries		1262919	0					
ANR	1262933	PrimaryExpression	0		1262919	1					
ANR	1262934	Condition	tries < 100	1259:14:32721:32731	1262919	1	True				
ANR	1262935	RelationalExpression	tries < 100		1262919	0		<			
ANR	1262936	Identifier	tries		1262919	0					
ANR	1262937	PrimaryExpression	100		1262919	1					
ANR	1262938	PostIncDecOperationExpression	tries ++	1259:27:32734:32740	1262919	2	True				
ANR	1262939	Identifier	tries		1262919	0					
ANR	1262940	IncDec	++		1262919	1					
ANR	1262941	CompoundStatement		32:2:983:1006	1262919	3					
ANR	1262942	IfStatement	"if ( mkdir ( path , mode ) == 0 )"		1262919	0					
ANR	1262943	Condition	"mkdir ( path , mode ) == 0"	1264:6:32881:32904	1262919	0	True				
ANR	1262944	EqualityExpression	"mkdir ( path , mode ) == 0"		1262919	0		==			
ANR	1262945	CallExpression	"mkdir ( path , mode )"		1262919	0					
ANR	1262946	Callee	mkdir		1262919	0					
ANR	1262947	Identifier	mkdir		1262919	0					
ANR	1262948	ArgumentList	path		1262919	1					
ANR	1262949	Argument	path		1262919	0					
ANR	1262950	Identifier	path		1262919	0					
ANR	1262951	Argument	mode		1262919	1					
ANR	1262952	Identifier	mode		1262919	0					
ANR	1262953	PrimaryExpression	0		1262919	1					
ANR	1262954	CompoundStatement		18:33:684:684	1262919	1					
ANR	1262955	ExpressionStatement	errno = 0	1265:3:32913:32922	1262919	0	True				
ANR	1262956	AssignmentExpression	errno = 0		1262919	0		=			
ANR	1262957	Identifier	errno		1262919	0					
ANR	1262958	PrimaryExpression	0		1262919	1					
ANR	1262959	ReturnStatement	return true ;	1266:3:32974:32985	1262919	1	True				
ANR	1262960	Identifier	true		1262919	0					
ANR	1262961	IfStatement	if ( errno == EEXIST )		1262919	1					
ANR	1262962	Condition	errno == EEXIST	1269:6:32998:33012	1262919	0	True				
ANR	1262963	EqualityExpression	errno == EEXIST		1262919	0		==			
ANR	1262964	Identifier	errno		1262919	0					
ANR	1262965	Identifier	EEXIST		1262919	1					
ANR	1262966	CompoundStatement		23:24:792:792	1262919	1					
ANR	1262967	ReturnStatement	return true ;	1271:3:33078:33089	1262919	0	True				
ANR	1262968	Identifier	true		1262919	0					
ANR	1262969	IfStatement	if ( errno != ENOENT )		1262919	2					
ANR	1262970	Condition	errno != ENOENT	1273:6:33101:33115	1262919	0	True				
ANR	1262971	EqualityExpression	errno != ENOENT		1262919	0		!=			
ANR	1262972	Identifier	errno		1262919	0					
ANR	1262973	Identifier	ENOENT		1262919	1					
ANR	1262974	CompoundStatement		27:24:895:895	1262919	1					
ANR	1262975	ReturnStatement	return false ;	1275:3:33186:33198	1262919	0	True				
ANR	1262976	Identifier	false		1262919	0					
ANR	1262977	IdentifierDeclStatement	"std :: string parent , junk ;"	1278:2:33207:33230	1262919	3	True				
ANR	1262978	IdentifierDecl	parent		1262919	0					
ANR	1262979	IdentifierDeclType	std :: string		1262919	0					
ANR	1262980	Identifier	parent		1262919	1					
ANR	1262981	IdentifierDecl	junk		1262919	1					
ANR	1262982	IdentifierDeclType	std :: string		1262919	0					
ANR	1262983	Identifier	junk		1262919	1					
ANR	1262984	IfStatement	"if ( filename_split ( path , parent , junk ) )"		1262919	4					
ANR	1262985	Condition	"filename_split ( path , parent , junk )"	1279:6:33238:33269	1262919	0	True				
ANR	1262986	CallExpression	"filename_split ( path , parent , junk )"		1262919	0					
ANR	1262987	Callee	filename_split		1262919	0					
ANR	1262988	Identifier	filename_split		1262919	0					
ANR	1262989	ArgumentList	path		1262919	1					
ANR	1262990	Argument	path		1262919	0					
ANR	1262991	Identifier	path		1262919	0					
ANR	1262992	Argument	parent		1262919	1					
ANR	1262993	Identifier	parent		1262919	0					
ANR	1262994	Argument	junk		1262919	2					
ANR	1262995	Identifier	junk		1262919	0					
ANR	1262996	CompoundStatement		33:41:1049:1049	1262919	1					
ANR	1262997	IfStatement	"if ( ! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode ) )"		1262919	0					
ANR	1262998	Condition	"! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"	1280:6:33281:33339	1262919	0	True				
ANR	1262999	UnaryOperationExpression	"! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"		1262919	0					
ANR	1263000	UnaryOperator	!		1262919	0					
ANR	1263001	CallExpression	"mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"		1262919	1					
ANR	1263002	Callee	mkdir_and_parents_if_needed_cur_priv		1262919	0					
ANR	1263003	Identifier	mkdir_and_parents_if_needed_cur_priv		1262919	0					
ANR	1263004	ArgumentList	parent . c_str ( )		1262919	1					
ANR	1263005	Argument	parent . c_str ( )		1262919	0					
ANR	1263006	CallExpression	parent . c_str ( )		1262919	0					
ANR	1263007	Callee	parent . c_str		1262919	0					
ANR	1263008	MemberAccess	parent . c_str		1262919	0					
ANR	1263009	Identifier	parent		1262919	0					
ANR	1263010	Identifier	c_str		1262919	1					
ANR	1263011	ArgumentList			1262919	1					
ANR	1263012	Argument	mode		1262919	1					
ANR	1263013	Identifier	mode		1262919	0					
ANR	1263014	CompoundStatement		34:67:1118:1118	1262919	1					
ANR	1263015	ReturnStatement	return false ;	1281:4:33348:33360	1262919	0	True				
ANR	1263016	Identifier	false		1262919	0					
ANR	1263017	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create %s after %d attempts.\\n"" , path , tries )"	1286:1:33376:33453	1262919	2	True				
ANR	1263018	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create %s after %d attempts.\\n"" , path , tries )"		1262919	0					
ANR	1263019	Callee	dprintf		1262919	0					
ANR	1263020	Identifier	dprintf		1262919	0					
ANR	1263021	ArgumentList	D_ALWAYS		1262919	1					
ANR	1263022	Argument	D_ALWAYS		1262919	0					
ANR	1263023	Identifier	D_ALWAYS		1262919	0					
ANR	1263024	Argument	"""Failed to create %s after %d attempts.\\n"""		1262919	1					
ANR	1263025	PrimaryExpression	"""Failed to create %s after %d attempts.\\n"""		1262919	0					
ANR	1263026	Argument	path		1262919	2					
ANR	1263027	Identifier	path		1262919	0					
ANR	1263028	Argument	tries		1262919	3					
ANR	1263029	Identifier	tries		1262919	0					
ANR	1263030	ReturnStatement	return false ;	1288:1:33456:33468	1262919	3	True				
ANR	1263031	Identifier	false		1262919	0					
ANR	1263032	ReturnType	bool		1262919	1					
ANR	1263033	Identifier	mkdir_and_parents_if_needed_cur_priv		1262919	2					
ANR	1263034	ParameterList	"const char * path , mode_t mode"		1262919	3					
ANR	1263035	Parameter	const char * path	1246:43:32191:32206	1262919	0	True				
ANR	1263036	ParameterType	const char *		1262919	0					
ANR	1263037	Identifier	path		1262919	1					
ANR	1263038	Parameter	mode_t mode	1246:61:32209:32219	1262919	1	True				
ANR	1263039	ParameterType	mode_t		1262919	0					
ANR	1263040	Identifier	mode		1262919	1					
ANR	1263041	CFGEntryNode	ENTRY		1262919		True				
ANR	1263042	CFGExitNode	EXIT		1262919		True				
ANR	1263043	Symbol	tries		1262919						
ANR	1263044	Symbol	EEXIST		1262919						
ANR	1263045	Symbol	parent		1262919						
ANR	1263046	Symbol	errno		1262919						
ANR	1263047	Symbol	false		1262919						
ANR	1263048	Symbol	D_ALWAYS		1262919						
ANR	1263049	Symbol	ENOENT		1262919						
ANR	1263050	Symbol	mode		1262919						
ANR	1263051	Symbol	mkdir_and_parents_if_needed_cur_priv		1262919						
ANR	1263052	Symbol	path		1262919						
ANR	1263053	Symbol	true		1262919						
ANR	1263054	Symbol	junk		1262919						
ANR	1263055	Symbol	parent . c_str		1262919						
ANR	1263056	Symbol	mkdir		1262919						
ANR	1263057	Symbol	filename_split		1262919						
ANR	1263058	Function	mkdir_and_parents_if_needed	1291:0:33473:33795							
ANR	1263059	FunctionDef	"mkdir_and_parents_if_needed (const char * path , mode_t mode , priv_state priv)"		1263058	0					
ANR	1263060	CompoundStatement		1292:0:33556:33795	1263058	0					
ANR	1263061	IdentifierDeclStatement	bool retval ;	1293:1:33559:33570	1263058	0	True				
ANR	1263062	IdentifierDecl	retval		1263058	0					
ANR	1263063	IdentifierDeclType	bool		1263058	0					
ANR	1263064	Identifier	retval		1263058	1					
ANR	1263065	IdentifierDeclStatement	priv_state saved_priv ;	1294:1:33573:33594	1263058	1	True				
ANR	1263066	IdentifierDecl	saved_priv		1263058	0					
ANR	1263067	IdentifierDeclType	priv_state		1263058	0					
ANR	1263068	Identifier	saved_priv		1263058	1					
ANR	1263069	IfStatement	if ( priv != PRIV_UNKNOWN )		1263058	2					
ANR	1263070	Condition	priv != PRIV_UNKNOWN	1296:5:33602:33621	1263058	0	True				
ANR	1263071	EqualityExpression	priv != PRIV_UNKNOWN		1263058	0		!=			
ANR	1263072	Identifier	priv		1263058	0					
ANR	1263073	Identifier	PRIV_UNKNOWN		1263058	1					
ANR	1263074	CompoundStatement		5:28:68:68	1263058	1					
ANR	1263075	ExpressionStatement	saved_priv = set_priv ( priv )	1297:2:33629:33656	1263058	0	True				
ANR	1263076	AssignmentExpression	saved_priv = set_priv ( priv )		1263058	0		=			
ANR	1263077	Identifier	saved_priv		1263058	0					
ANR	1263078	CallExpression	set_priv ( priv )		1263058	1					
ANR	1263079	Callee	set_priv		1263058	0					
ANR	1263080	Identifier	set_priv		1263058	0					
ANR	1263081	ArgumentList	priv		1263058	1					
ANR	1263082	Argument	priv		1263058	0					
ANR	1263083	Identifier	priv		1263058	0					
ANR	1263084	ExpressionStatement	"retval = mkdir_and_parents_if_needed_cur_priv ( path , mode )"	1300:1:33663:33719	1263058	3	True				
ANR	1263085	AssignmentExpression	"retval = mkdir_and_parents_if_needed_cur_priv ( path , mode )"		1263058	0		=			
ANR	1263086	Identifier	retval		1263058	0					
ANR	1263087	CallExpression	"mkdir_and_parents_if_needed_cur_priv ( path , mode )"		1263058	1					
ANR	1263088	Callee	mkdir_and_parents_if_needed_cur_priv		1263058	0					
ANR	1263089	Identifier	mkdir_and_parents_if_needed_cur_priv		1263058	0					
ANR	1263090	ArgumentList	path		1263058	1					
ANR	1263091	Argument	path		1263058	0					
ANR	1263092	Identifier	path		1263058	0					
ANR	1263093	Argument	mode		1263058	1					
ANR	1263094	Identifier	mode		1263058	0					
ANR	1263095	IfStatement	if ( priv != PRIV_UNKNOWN )		1263058	4					
ANR	1263096	Condition	priv != PRIV_UNKNOWN	1302:5:33727:33746	1263058	0	True				
ANR	1263097	EqualityExpression	priv != PRIV_UNKNOWN		1263058	0		!=			
ANR	1263098	Identifier	priv		1263058	0					
ANR	1263099	Identifier	PRIV_UNKNOWN		1263058	1					
ANR	1263100	CompoundStatement		11:28:193:193	1263058	1					
ANR	1263101	ExpressionStatement	set_priv ( saved_priv )	1303:2:33754:33774	1263058	0	True				
ANR	1263102	CallExpression	set_priv ( saved_priv )		1263058	0					
ANR	1263103	Callee	set_priv		1263058	0					
ANR	1263104	Identifier	set_priv		1263058	0					
ANR	1263105	ArgumentList	saved_priv		1263058	1					
ANR	1263106	Argument	saved_priv		1263058	0					
ANR	1263107	Identifier	saved_priv		1263058	0					
ANR	1263108	ReturnStatement	return retval ;	1305:1:33780:33793	1263058	5	True				
ANR	1263109	Identifier	retval		1263058	0					
ANR	1263110	ReturnType	bool		1263058	1					
ANR	1263111	Identifier	mkdir_and_parents_if_needed		1263058	2					
ANR	1263112	ParameterList	"const char * path , mode_t mode , priv_state priv"		1263058	3					
ANR	1263113	Parameter	const char * path	1291:34:33507:33522	1263058	0	True				
ANR	1263114	ParameterType	const char *		1263058	0					
ANR	1263115	Identifier	path		1263058	1					
ANR	1263116	Parameter	mode_t mode	1291:52:33525:33535	1263058	1	True				
ANR	1263117	ParameterType	mode_t		1263058	0					
ANR	1263118	Identifier	mode		1263058	1					
ANR	1263119	Parameter	priv_state priv	1291:65:33538:33552	1263058	2	True				
ANR	1263120	ParameterType	priv_state		1263058	0					
ANR	1263121	Identifier	priv		1263058	1					
ANR	1263122	CFGEntryNode	ENTRY		1263058		True				
ANR	1263123	CFGExitNode	EXIT		1263058		True				
ANR	1263124	Symbol	mode		1263058						
ANR	1263125	Symbol	mkdir_and_parents_if_needed_cur_priv		1263058						
ANR	1263126	Symbol	path		1263058						
ANR	1263127	Symbol	set_priv		1263058						
ANR	1263128	Symbol	saved_priv		1263058						
ANR	1263129	Symbol	priv		1263058						
ANR	1263130	Symbol	retval		1263058						
ANR	1263131	Symbol	PRIV_UNKNOWN		1263058						
ANR	1263132	Function	make_parents_if_needed	1308:0:33798:34044							
ANR	1263133	FunctionDef	"make_parents_if_needed (const char * path , mode_t mode , priv_state priv)"		1263132	0					
ANR	1263134	CompoundStatement		1309:0:33876:34044	1263132	0					
ANR	1263135	IdentifierDeclStatement	"std :: string parent , junk ;"	1310:1:33879:33902	1263132	0	True				
ANR	1263136	IdentifierDecl	parent		1263132	0					
ANR	1263137	IdentifierDeclType	std :: string		1263132	0					
ANR	1263138	Identifier	parent		1263132	1					
ANR	1263139	IdentifierDecl	junk		1263132	1					
ANR	1263140	IdentifierDeclType	std :: string		1263132	0					
ANR	1263141	Identifier	junk		1263132	1					
ANR	1263142	ExpressionStatement	ASSERT ( path )	1312:1:33906:33920	1263132	1	True				
ANR	1263143	CallExpression	ASSERT ( path )		1263132	0					
ANR	1263144	Callee	ASSERT		1263132	0					
ANR	1263145	Identifier	ASSERT		1263132	0					
ANR	1263146	ArgumentList	path		1263132	1					
ANR	1263147	Argument	path		1263132	0					
ANR	1263148	Identifier	path		1263132	0					
ANR	1263149	IfStatement	"if ( filename_split ( path , parent , junk ) )"		1263132	2					
ANR	1263150	Condition	"filename_split ( path , parent , junk )"	1314:4:33927:33958	1263132	0	True				
ANR	1263151	CallExpression	"filename_split ( path , parent , junk )"		1263132	0					
ANR	1263152	Callee	filename_split		1263132	0					
ANR	1263153	Identifier	filename_split		1263132	0					
ANR	1263154	ArgumentList	path		1263132	1					
ANR	1263155	Argument	path		1263132	0					
ANR	1263156	Identifier	path		1263132	0					
ANR	1263157	Argument	parent		1263132	1					
ANR	1263158	Identifier	parent		1263132	0					
ANR	1263159	Argument	junk		1263132	2					
ANR	1263160	Identifier	junk		1263132	0					
ANR	1263161	ReturnStatement	"return mkdir_and_parents_if_needed ( parent . c_str ( ) , mode , priv ) ;"	1315:2:33963:34027	1263132	1	True				
ANR	1263162	CallExpression	"mkdir_and_parents_if_needed ( parent . c_str ( ) , mode , priv )"		1263132	0					
ANR	1263163	Callee	mkdir_and_parents_if_needed		1263132	0					
ANR	1263164	Identifier	mkdir_and_parents_if_needed		1263132	0					
ANR	1263165	ArgumentList	parent . c_str ( )		1263132	1					
ANR	1263166	Argument	parent . c_str ( )		1263132	0					
ANR	1263167	CallExpression	parent . c_str ( )		1263132	0					
ANR	1263168	Callee	parent . c_str		1263132	0					
ANR	1263169	MemberAccess	parent . c_str		1263132	0					
ANR	1263170	Identifier	parent		1263132	0					
ANR	1263171	Identifier	c_str		1263132	1					
ANR	1263172	ArgumentList			1263132	1					
ANR	1263173	Argument	mode		1263132	1					
ANR	1263174	Identifier	mode		1263132	0					
ANR	1263175	Argument	priv		1263132	2					
ANR	1263176	Identifier	priv		1263132	0					
ANR	1263177	ReturnStatement	return false ;	1316:1:34030:34042	1263132	3	True				
ANR	1263178	Identifier	false		1263132	0					
ANR	1263179	ReturnType	bool		1263132	1					
ANR	1263180	Identifier	make_parents_if_needed		1263132	2					
ANR	1263181	ParameterList	"const char * path , mode_t mode , priv_state priv"		1263132	3					
ANR	1263182	Parameter	const char * path	1308:29:33827:33842	1263132	0	True				
ANR	1263183	ParameterType	const char *		1263132	0					
ANR	1263184	Identifier	path		1263132	1					
ANR	1263185	Parameter	mode_t mode	1308:47:33845:33855	1263132	1	True				
ANR	1263186	ParameterType	mode_t		1263132	0					
ANR	1263187	Identifier	mode		1263132	1					
ANR	1263188	Parameter	priv_state priv	1308:60:33858:33872	1263132	2	True				
ANR	1263189	ParameterType	priv_state		1263132	0					
ANR	1263190	Identifier	priv		1263132	1					
ANR	1263191	CFGEntryNode	ENTRY		1263132		True				
ANR	1263192	CFGExitNode	EXIT		1263132		True				
ANR	1263193	Symbol	mode		1263132						
ANR	1263194	Symbol	path		1263132						
ANR	1263195	Symbol	parent		1263132						
ANR	1263196	Symbol	false		1263132						
ANR	1263197	Symbol	junk		1263132						
ANR	1263198	Symbol	parent . c_str		1263132						
ANR	1263199	Symbol	priv		1263132						
ANR	1263200	Symbol	filename_split		1263132						
ANR	1263201	Symbol	mkdir_and_parents_if_needed		1263132						
