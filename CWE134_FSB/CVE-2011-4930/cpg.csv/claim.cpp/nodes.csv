command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	717587	File	data/converged/CVE-2011-4930_htcondor/claim.cpp								
ANR	717588	Function	Claim :: Claim	41:0:1440:2853							
ANR	717589	FunctionDef	"Claim :: Claim (Resource * res_ip , ClaimType claim_type , int lease_duration)"		717588	0					
ANR	717590	CompoundStatement		42:0:1515:2853	717588	0					
ANR	717591	Statement	c_client	43:1:1518:1525	717588	0	True				
ANR	717592	Statement	=	43:10:1527:1527	717588	1	True				
ANR	717593	Statement	new	43:12:1529:1531	717588	2	True				
ANR	717594	ExpressionStatement	Client	43:16:1533:1539	717588	3	True				
ANR	717595	Identifier	Client		717588	0					
ANR	717596	ExpressionStatement	"c_id = new ClaimId ( claim_type , res_ip -> r_id_str )"	44:1:1542:1592	717588	4	True				
ANR	717597	AssignmentExpression	"c_id = new ClaimId ( claim_type , res_ip -> r_id_str )"		717588	0		=			
ANR	717598	Identifier	c_id		717588	0					
ANR	717599	Expression	"claim_type , res_ip -> r_id_str"		717588	1					
ANR	717600	Identifier	claim_type		717588	0					
ANR	717601	PtrMemberAccess	res_ip -> r_id_str		717588	1					
ANR	717602	Identifier	res_ip		717588	0					
ANR	717603	Identifier	r_id_str		717588	1					
ANR	717604	IfStatement	if ( claim_type == CLAIM_OPPORTUNISTIC )		717588	5					
ANR	717605	Condition	claim_type == CLAIM_OPPORTUNISTIC	45:5:1599:1631	717588	0	True				
ANR	717606	EqualityExpression	claim_type == CLAIM_OPPORTUNISTIC		717588	0		==			
ANR	717607	Identifier	claim_type		717588	0					
ANR	717608	Identifier	CLAIM_OPPORTUNISTIC		717588	1					
ANR	717609	CompoundStatement		4:41:119:119	717588	1					
ANR	717610	ExpressionStatement	c_id -> dropFile ( res_ip -> r_id )	46:2:1639:1669	717588	0	True				
ANR	717611	CallExpression	c_id -> dropFile ( res_ip -> r_id )		717588	0					
ANR	717612	Callee	c_id -> dropFile		717588	0					
ANR	717613	PtrMemberAccess	c_id -> dropFile		717588	0					
ANR	717614	Identifier	c_id		717588	0					
ANR	717615	Identifier	dropFile		717588	1					
ANR	717616	ArgumentList	res_ip -> r_id		717588	1					
ANR	717617	Argument	res_ip -> r_id		717588	0					
ANR	717618	PtrMemberAccess	res_ip -> r_id		717588	0					
ANR	717619	Identifier	res_ip		717588	0					
ANR	717620	Identifier	r_id		717588	1					
ANR	717621	ExpressionStatement	c_ad = NULL	48:1:1675:1686	717588	6	True				
ANR	717622	AssignmentExpression	c_ad = NULL		717588	0		=			
ANR	717623	Identifier	c_ad		717588	0					
ANR	717624	Identifier	NULL		717588	1					
ANR	717625	ExpressionStatement	c_starter = NULL	49:1:1689:1705	717588	7	True				
ANR	717626	AssignmentExpression	c_starter = NULL		717588	0		=			
ANR	717627	Identifier	c_starter		717588	0					
ANR	717628	Identifier	NULL		717588	1					
ANR	717629	ExpressionStatement	c_rank = 0	50:1:1708:1718	717588	8	True				
ANR	717630	AssignmentExpression	c_rank = 0		717588	0		=			
ANR	717631	Identifier	c_rank		717588	0					
ANR	717632	PrimaryExpression	0		717588	1					
ANR	717633	ExpressionStatement	c_oldrank = 0	51:1:1721:1734	717588	9	True				
ANR	717634	AssignmentExpression	c_oldrank = 0		717588	0		=			
ANR	717635	Identifier	c_oldrank		717588	0					
ANR	717636	PrimaryExpression	0		717588	1					
ANR	717637	ExpressionStatement	c_universe = - 1	52:1:1737:1752	717588	10	True				
ANR	717638	AssignmentExpression	c_universe = - 1		717588	0		=			
ANR	717639	Identifier	c_universe		717588	0					
ANR	717640	UnaryOperationExpression	- 1		717588	1					
ANR	717641	UnaryOperator	-		717588	0					
ANR	717642	PrimaryExpression	1		717588	1					
ANR	717643	ExpressionStatement	c_request_stream = NULL	53:1:1755:1778	717588	11	True				
ANR	717644	AssignmentExpression	c_request_stream = NULL		717588	0		=			
ANR	717645	Identifier	c_request_stream		717588	0					
ANR	717646	Identifier	NULL		717588	1					
ANR	717647	ExpressionStatement	c_match_tid = - 1	54:1:1781:1797	717588	12	True				
ANR	717648	AssignmentExpression	c_match_tid = - 1		717588	0		=			
ANR	717649	Identifier	c_match_tid		717588	0					
ANR	717650	UnaryOperationExpression	- 1		717588	1					
ANR	717651	UnaryOperator	-		717588	0					
ANR	717652	PrimaryExpression	1		717588	1					
ANR	717653	ExpressionStatement	c_lease_tid = - 1	55:1:1800:1816	717588	13	True				
ANR	717654	AssignmentExpression	c_lease_tid = - 1		717588	0		=			
ANR	717655	Identifier	c_lease_tid		717588	0					
ANR	717656	UnaryOperationExpression	- 1		717588	1					
ANR	717657	UnaryOperator	-		717588	0					
ANR	717658	PrimaryExpression	1		717588	1					
ANR	717659	ExpressionStatement	c_sendalive_tid = - 1	56:1:1819:1839	717588	14	True				
ANR	717660	AssignmentExpression	c_sendalive_tid = - 1		717588	0		=			
ANR	717661	Identifier	c_sendalive_tid		717588	0					
ANR	717662	UnaryOperationExpression	- 1		717588	1					
ANR	717663	UnaryOperator	-		717588	0					
ANR	717664	PrimaryExpression	1		717588	1					
ANR	717665	ExpressionStatement	c_alive_inprogress_sock = NULL	57:1:1842:1872	717588	15	True				
ANR	717666	AssignmentExpression	c_alive_inprogress_sock = NULL		717588	0		=			
ANR	717667	Identifier	c_alive_inprogress_sock		717588	0					
ANR	717668	Identifier	NULL		717588	1					
ANR	717669	ExpressionStatement	c_aliveint = - 1	58:1:1875:1890	717588	16	True				
ANR	717670	AssignmentExpression	c_aliveint = - 1		717588	0		=			
ANR	717671	Identifier	c_aliveint		717588	0					
ANR	717672	UnaryOperationExpression	- 1		717588	1					
ANR	717673	UnaryOperator	-		717588	0					
ANR	717674	PrimaryExpression	1		717588	1					
ANR	717675	ExpressionStatement	c_lease_duration = lease_duration	59:1:1893:1926	717588	17	True				
ANR	717676	AssignmentExpression	c_lease_duration = lease_duration		717588	0		=			
ANR	717677	Identifier	c_lease_duration		717588	0					
ANR	717678	Identifier	lease_duration		717588	1					
ANR	717679	ExpressionStatement	c_cluster = - 1	60:1:1929:1943	717588	18	True				
ANR	717680	AssignmentExpression	c_cluster = - 1		717588	0		=			
ANR	717681	Identifier	c_cluster		717588	0					
ANR	717682	UnaryOperationExpression	- 1		717588	1					
ANR	717683	UnaryOperator	-		717588	0					
ANR	717684	PrimaryExpression	1		717588	1					
ANR	717685	ExpressionStatement	c_proc = - 1	61:1:1946:1957	717588	19	True				
ANR	717686	AssignmentExpression	c_proc = - 1		717588	0		=			
ANR	717687	Identifier	c_proc		717588	0					
ANR	717688	UnaryOperationExpression	- 1		717588	1					
ANR	717689	UnaryOperator	-		717588	0					
ANR	717690	PrimaryExpression	1		717588	1					
ANR	717691	ExpressionStatement	c_global_job_id = NULL	62:1:1960:1982	717588	20	True				
ANR	717692	AssignmentExpression	c_global_job_id = NULL		717588	0		=			
ANR	717693	Identifier	c_global_job_id		717588	0					
ANR	717694	Identifier	NULL		717588	1					
ANR	717695	ExpressionStatement	c_job_start = - 1	63:1:1985:2001	717588	21	True				
ANR	717696	AssignmentExpression	c_job_start = - 1		717588	0		=			
ANR	717697	Identifier	c_job_start		717588	0					
ANR	717698	UnaryOperationExpression	- 1		717588	1					
ANR	717699	UnaryOperator	-		717588	0					
ANR	717700	PrimaryExpression	1		717588	1					
ANR	717701	ExpressionStatement	c_last_pckpt = - 1	64:1:2004:2021	717588	22	True				
ANR	717702	AssignmentExpression	c_last_pckpt = - 1		717588	0		=			
ANR	717703	Identifier	c_last_pckpt		717588	0					
ANR	717704	UnaryOperationExpression	- 1		717588	1					
ANR	717705	UnaryOperator	-		717588	0					
ANR	717706	PrimaryExpression	1		717588	1					
ANR	717707	ExpressionStatement	setResource ( res_ip )	65:1:2024:2045	717588	23	True				
ANR	717708	CallExpression	setResource ( res_ip )		717588	0					
ANR	717709	Callee	setResource		717588	0					
ANR	717710	Identifier	setResource		717588	0					
ANR	717711	ArgumentList	res_ip		717588	1					
ANR	717712	Argument	res_ip		717588	0					
ANR	717713	Identifier	res_ip		717588	0					
ANR	717714	ExpressionStatement	c_type = claim_type	66:1:2048:2067	717588	24	True				
ANR	717715	AssignmentExpression	c_type = claim_type		717588	0		=			
ANR	717716	Identifier	c_type		717588	0					
ANR	717717	Identifier	claim_type		717588	1					
ANR	717718	ExpressionStatement	c_cod_keyword = NULL	67:1:2070:2090	717588	25	True				
ANR	717719	AssignmentExpression	c_cod_keyword = NULL		717588	0		=			
ANR	717720	Identifier	c_cod_keyword		717588	0					
ANR	717721	Identifier	NULL		717588	1					
ANR	717722	ExpressionStatement	c_has_job_ad = 0	68:1:2093:2109	717588	26	True				
ANR	717723	AssignmentExpression	c_has_job_ad = 0		717588	0		=			
ANR	717724	Identifier	c_has_job_ad		717588	0					
ANR	717725	PrimaryExpression	0		717588	1					
ANR	717726	ExpressionStatement	c_pending_cmd = - 1	69:1:2112:2130	717588	27	True				
ANR	717727	AssignmentExpression	c_pending_cmd = - 1		717588	0		=			
ANR	717728	Identifier	c_pending_cmd		717588	0					
ANR	717729	UnaryOperationExpression	- 1		717588	1					
ANR	717730	UnaryOperator	-		717588	0					
ANR	717731	PrimaryExpression	1		717588	1					
ANR	717732	ExpressionStatement	c_wants_remove = false	70:1:2133:2155	717588	28	True				
ANR	717733	AssignmentExpression	c_wants_remove = false		717588	0		=			
ANR	717734	Identifier	c_wants_remove		717588	0					
ANR	717735	Identifier	false		717588	1					
ANR	717736	ExpressionStatement	c_claim_started = 0	71:1:2158:2177	717588	29	True				
ANR	717737	AssignmentExpression	c_claim_started = 0		717588	0		=			
ANR	717738	Identifier	c_claim_started		717588	0					
ANR	717739	PrimaryExpression	0		717588	1					
ANR	717740	ExpressionStatement	c_state = CLAIM_IDLE	76:1:2426:2446	717588	30	True				
ANR	717741	AssignmentExpression	c_state = CLAIM_IDLE		717588	0		=			
ANR	717742	Identifier	c_state		717588	0					
ANR	717743	Identifier	CLAIM_IDLE		717588	1					
ANR	717744	ExpressionStatement	changeState ( CLAIM_UNCLAIMED )	77:1:2449:2479	717588	31	True				
ANR	717745	CallExpression	changeState ( CLAIM_UNCLAIMED )		717588	0					
ANR	717746	Callee	changeState		717588	0					
ANR	717747	Identifier	changeState		717588	0					
ANR	717748	ArgumentList	CLAIM_UNCLAIMED		717588	1					
ANR	717749	Argument	CLAIM_UNCLAIMED		717588	0					
ANR	717750	Identifier	CLAIM_UNCLAIMED		717588	0					
ANR	717751	ExpressionStatement	c_job_total_run_time = 0	78:1:2482:2506	717588	32	True				
ANR	717752	AssignmentExpression	c_job_total_run_time = 0		717588	0		=			
ANR	717753	Identifier	c_job_total_run_time		717588	0					
ANR	717754	PrimaryExpression	0		717588	1					
ANR	717755	ExpressionStatement	c_job_total_suspend_time = 0	79:1:2509:2537	717588	33	True				
ANR	717756	AssignmentExpression	c_job_total_suspend_time = 0		717588	0		=			
ANR	717757	Identifier	c_job_total_suspend_time		717588	0					
ANR	717758	PrimaryExpression	0		717588	1					
ANR	717759	ExpressionStatement	c_claim_total_run_time = 0	80:1:2540:2566	717588	34	True				
ANR	717760	AssignmentExpression	c_claim_total_run_time = 0		717588	0		=			
ANR	717761	Identifier	c_claim_total_run_time		717588	0					
ANR	717762	PrimaryExpression	0		717588	1					
ANR	717763	ExpressionStatement	c_claim_total_suspend_time = 0	81:1:2569:2599	717588	35	True				
ANR	717764	AssignmentExpression	c_claim_total_suspend_time = 0		717588	0		=			
ANR	717765	Identifier	c_claim_total_suspend_time		717588	0					
ANR	717766	PrimaryExpression	0		717588	1					
ANR	717767	ExpressionStatement	c_activation_count = 0	82:1:2602:2624	717588	36	True				
ANR	717768	AssignmentExpression	c_activation_count = 0		717588	0		=			
ANR	717769	Identifier	c_activation_count		717588	0					
ANR	717770	PrimaryExpression	0		717588	1					
ANR	717771	ExpressionStatement	c_may_unretire = true	83:1:2627:2648	717588	37	True				
ANR	717772	AssignmentExpression	c_may_unretire = true		717588	0		=			
ANR	717773	Identifier	c_may_unretire		717588	0					
ANR	717774	Identifier	true		717588	1					
ANR	717775	ExpressionStatement	c_retire_peacefully = false	84:1:2651:2678	717588	38	True				
ANR	717776	AssignmentExpression	c_retire_peacefully = false		717588	0		=			
ANR	717777	Identifier	c_retire_peacefully		717588	0					
ANR	717778	Identifier	false		717588	1					
ANR	717779	ExpressionStatement	c_preempt_was_true = false	85:1:2681:2707	717588	39	True				
ANR	717780	AssignmentExpression	c_preempt_was_true = false		717588	0		=			
ANR	717781	Identifier	c_preempt_was_true		717588	0					
ANR	717782	Identifier	false		717588	1					
ANR	717783	ExpressionStatement	c_badput_caused_by_draining = false	86:1:2710:2745	717588	40	True				
ANR	717784	AssignmentExpression	c_badput_caused_by_draining = false		717588	0		=			
ANR	717785	Identifier	c_badput_caused_by_draining		717588	0					
ANR	717786	Identifier	false		717588	1					
ANR	717787	ExpressionStatement	c_schedd_closed_claim = false	87:1:2748:2777	717588	41	True				
ANR	717788	AssignmentExpression	c_schedd_closed_claim = false		717588	0		=			
ANR	717789	Identifier	c_schedd_closed_claim		717588	0					
ANR	717790	Identifier	false		717588	1					
ANR	717791	ExpressionStatement	c_last_state = CLAIM_UNCLAIMED	89:1:2781:2811	717588	42	True				
ANR	717792	AssignmentExpression	c_last_state = CLAIM_UNCLAIMED		717588	0		=			
ANR	717793	Identifier	c_last_state		717588	0					
ANR	717794	Identifier	CLAIM_UNCLAIMED		717588	1					
ANR	717795	ExpressionStatement	c_pledged_machine_max_vacate_time = 0	90:1:2814:2851	717588	43	True				
ANR	717796	AssignmentExpression	c_pledged_machine_max_vacate_time = 0		717588	0		=			
ANR	717797	Identifier	c_pledged_machine_max_vacate_time		717588	0					
ANR	717798	PrimaryExpression	0		717588	1					
ANR	717799	Identifier	Claim :: Claim		717588	1					
ANR	717800	ParameterList	"Resource * res_ip , ClaimType claim_type , int lease_duration"		717588	2					
ANR	717801	Parameter	Resource * res_ip	41:14:1454:1469	717588	0	True				
ANR	717802	ParameterType	Resource *		717588	0					
ANR	717803	Identifier	res_ip		717588	1					
ANR	717804	Parameter	ClaimType claim_type	41:32:1472:1491	717588	1	True				
ANR	717805	ParameterType	ClaimType		717588	0					
ANR	717806	Identifier	claim_type		717588	1					
ANR	717807	Parameter	int lease_duration	41:54:1494:1511	717588	2	True				
ANR	717808	ParameterType	int		717588	0					
ANR	717809	Identifier	lease_duration		717588	1					
ANR	717810	CFGEntryNode	ENTRY		717588		True				
ANR	717811	CFGExitNode	EXIT		717588		True				
ANR	717812	Symbol	CLAIM_OPPORTUNISTIC		717588						
ANR	717813	Symbol	c_job_total_suspend_time		717588						
ANR	717814	Symbol	c_activation_count		717588						
ANR	717815	Symbol	c_state		717588						
ANR	717816	Symbol	res_ip -> r_id_str		717588						
ANR	717817	Symbol	c_claim_started		717588						
ANR	717818	Symbol	CLAIM_IDLE		717588						
ANR	717819	Symbol	res_ip -> r_id		717588						
ANR	717820	Symbol	c_claim_total_suspend_time		717588						
ANR	717821	Symbol	c_last_state		717588						
ANR	717822	Symbol	c_pledged_machine_max_vacate_time		717588						
ANR	717823	Symbol	c_may_unretire		717588						
ANR	717824	Symbol	c_has_job_ad		717588						
ANR	717825	Symbol	c_cluster		717588						
ANR	717826	Symbol	NULL		717588						
ANR	717827	Symbol	c_job_total_run_time		717588						
ANR	717828	Symbol	c_last_pckpt		717588						
ANR	717829	Symbol	CLAIM_UNCLAIMED		717588						
ANR	717830	Symbol	lease_duration		717588						
ANR	717831	Symbol	claim_type		717588						
ANR	717832	Symbol	c_oldrank		717588						
ANR	717833	Symbol	c_wants_remove		717588						
ANR	717834	Symbol	c_request_stream		717588						
ANR	717835	Symbol	true		717588						
ANR	717836	Symbol	c_sendalive_tid		717588						
ANR	717837	Symbol	c_claim_total_run_time		717588						
ANR	717838	Symbol	c_global_job_id		717588						
ANR	717839	Symbol	c_starter		717588						
ANR	717840	Symbol	c_schedd_closed_claim		717588						
ANR	717841	Symbol	c_aliveint		717588						
ANR	717842	Symbol	c_pending_cmd		717588						
ANR	717843	Symbol	c_ad		717588						
ANR	717844	Symbol	c_preempt_was_true		717588						
ANR	717845	Symbol	c_lease_tid		717588						
ANR	717846	Symbol	c_rank		717588						
ANR	717847	Symbol	c_id		717588						
ANR	717848	Symbol	* res_ip		717588						
ANR	717849	Symbol	c_universe		717588						
ANR	717850	Symbol	c_cod_keyword		717588						
ANR	717851	Symbol	false		717588						
ANR	717852	Symbol	c_match_tid		717588						
ANR	717853	Symbol	c_alive_inprogress_sock		717588						
ANR	717854	Symbol	res_ip		717588						
ANR	717855	Symbol	c_proc		717588						
ANR	717856	Symbol	c_job_start		717588						
ANR	717857	Symbol	c_lease_duration		717588						
ANR	717858	Symbol	c_type		717588						
ANR	717859	Symbol	c_retire_peacefully		717588						
ANR	717860	Symbol	c_badput_caused_by_draining		717588						
ANR	717861	Function	Claim :: ~Claim	94:0:2857:3674							
ANR	717862	FunctionDef	Claim :: ~Claim ()		717861	0					
ANR	717863	CompoundStatement		95:0:2873:3674	717861	0					
ANR	717864	IfStatement	if ( c_type == CLAIM_COD )		717861	0					
ANR	717865	Condition	c_type == CLAIM_COD	96:5:2881:2899	717861	0	True				
ANR	717866	EqualityExpression	c_type == CLAIM_COD		717861	0		==			
ANR	717867	Identifier	c_type		717861	0					
ANR	717868	Identifier	CLAIM_COD		717861	1					
ANR	717869	CompoundStatement		2:27:29:29	717861	1					
ANR	717870	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Deleted claim %s (owner '%s')\\n"" , c_id -> id ( ) , c_client -> owner ( ) ? c_client -> owner ( ) : ""unknown"" )"	97:2:2907:3039	717861	0	True				
ANR	717871	CallExpression	"dprintf ( D_FULLDEBUG , ""Deleted claim %s (owner '%s')\\n"" , c_id -> id ( ) , c_client -> owner ( ) ? c_client -> owner ( ) : ""unknown"" )"		717861	0					
ANR	717872	Callee	dprintf		717861	0					
ANR	717873	Identifier	dprintf		717861	0					
ANR	717874	ArgumentList	D_FULLDEBUG		717861	1					
ANR	717875	Argument	D_FULLDEBUG		717861	0					
ANR	717876	Identifier	D_FULLDEBUG		717861	0					
ANR	717877	Argument	"""Deleted claim %s (owner '%s')\\n"""		717861	1					
ANR	717878	PrimaryExpression	"""Deleted claim %s (owner '%s')\\n"""		717861	0					
ANR	717879	Argument	c_id -> id ( )		717861	2					
ANR	717880	CallExpression	c_id -> id ( )		717861	0					
ANR	717881	Callee	c_id -> id		717861	0					
ANR	717882	PtrMemberAccess	c_id -> id		717861	0					
ANR	717883	Identifier	c_id		717861	0					
ANR	717884	Identifier	id		717861	1					
ANR	717885	ArgumentList			717861	1					
ANR	717886	Argument	"c_client -> owner ( ) ? c_client -> owner ( ) : ""unknown"""		717861	3					
ANR	717887	ConditionalExpression	"c_client -> owner ( ) ? c_client -> owner ( ) : ""unknown"""		717861	0					
ANR	717888	Condition	c_client -> owner ( )		717861	0					
ANR	717889	CallExpression	c_client -> owner ( )		717861	0					
ANR	717890	Callee	c_client -> owner		717861	0					
ANR	717891	PtrMemberAccess	c_client -> owner		717861	0					
ANR	717892	Identifier	c_client		717861	0					
ANR	717893	Identifier	owner		717861	1					
ANR	717894	ArgumentList			717861	1					
ANR	717895	CallExpression	c_client -> owner ( )		717861	1					
ANR	717896	Callee	c_client -> owner		717861	0					
ANR	717897	PtrMemberAccess	c_client -> owner		717861	0					
ANR	717898	Identifier	c_client		717861	0					
ANR	717899	Identifier	owner		717861	1					
ANR	717900	ArgumentList			717861	1					
ANR	717901	PrimaryExpression	"""unknown"""		717861	2					
ANR	717902	ExpressionStatement	this -> cancel_match_timer ( )	103:1:3109:3135	717861	1	True				
ANR	717903	CallExpression	this -> cancel_match_timer ( )		717861	0					
ANR	717904	Callee	this -> cancel_match_timer		717861	0					
ANR	717905	PtrMemberAccess	this -> cancel_match_timer		717861	0					
ANR	717906	Identifier	this		717861	0					
ANR	717907	Identifier	cancel_match_timer		717861	1					
ANR	717908	ArgumentList			717861	1					
ANR	717909	ExpressionStatement	this -> cancelLeaseTimer ( )	104:1:3138:3162	717861	2	True				
ANR	717910	CallExpression	this -> cancelLeaseTimer ( )		717861	0					
ANR	717911	Callee	this -> cancelLeaseTimer		717861	0					
ANR	717912	PtrMemberAccess	this -> cancelLeaseTimer		717861	0					
ANR	717913	Identifier	this		717861	0					
ANR	717914	Identifier	cancelLeaseTimer		717861	1					
ANR	717915	ArgumentList			717861	1					
ANR	717916	IfStatement	if ( c_alive_inprogress_sock )		717861	3					
ANR	717917	Condition	c_alive_inprogress_sock	105:6:3170:3192	717861	0	True				
ANR	717918	Identifier	c_alive_inprogress_sock		717861	0					
ANR	717919	CompoundStatement		11:32:322:322	717861	1					
ANR	717920	ExpressionStatement	daemonCore -> Cancel_Socket ( c_alive_inprogress_sock )	106:2:3200:3250	717861	0	True				
ANR	717921	CallExpression	daemonCore -> Cancel_Socket ( c_alive_inprogress_sock )		717861	0					
ANR	717922	Callee	daemonCore -> Cancel_Socket		717861	0					
ANR	717923	PtrMemberAccess	daemonCore -> Cancel_Socket		717861	0					
ANR	717924	Identifier	daemonCore		717861	0					
ANR	717925	Identifier	Cancel_Socket		717861	1					
ANR	717926	ArgumentList	c_alive_inprogress_sock		717861	1					
ANR	717927	Argument	c_alive_inprogress_sock		717861	0					
ANR	717928	Identifier	c_alive_inprogress_sock		717861	0					
ANR	717929	ExpressionStatement	c_alive_inprogress_sock = NULL	107:2:3254:3284	717861	1	True				
ANR	717930	AssignmentExpression	c_alive_inprogress_sock = NULL		717861	0		=			
ANR	717931	Identifier	c_alive_inprogress_sock		717861	0					
ANR	717932	Identifier	NULL		717861	1					
ANR	717933	IfStatement	if ( c_ad )		717861	4					
ANR	717934	Condition	c_ad	111:5:3337:3340	717861	0	True				
ANR	717935	Identifier	c_ad		717861	0					
ANR	717936	CompoundStatement		17:12:470:470	717861	1					
ANR	717937	Statement	delete	112:2:3348:3353	717861	0	True				
ANR	717938	ExpressionStatement	c_ad	112:8:3354:3362	717861	1	True				
ANR	717939	Identifier	c_ad		717861	0					
ANR	717940	Statement	delete	114:1:3368:3373	717861	5	True				
ANR	717941	ExpressionStatement	c_id	114:7:3374:3382	717861	6	True				
ANR	717942	Identifier	c_id		717861	0					
ANR	717943	IfStatement	if ( c_client )		717861	7					
ANR	717944	Condition	c_client	115:5:3389:3396	717861	0	True				
ANR	717945	Identifier	c_client		717861	0					
ANR	717946	CompoundStatement		21:16:526:526	717861	1					
ANR	717947	Statement	delete	116:2:3404:3409	717861	0	True				
ANR	717948	ExpressionStatement	c_client	116:8:3410:3422	717861	1	True				
ANR	717949	Identifier	c_client		717861	0					
ANR	717950	ExpressionStatement	setRequestStream ( NULL )	119:1:3496:3520	717861	8	True				
ANR	717951	CallExpression	setRequestStream ( NULL )		717861	0					
ANR	717952	Callee	setRequestStream		717861	0					
ANR	717953	Identifier	setRequestStream		717861	0					
ANR	717954	ArgumentList	NULL		717861	1					
ANR	717955	Argument	NULL		717861	0					
ANR	717956	Identifier	NULL		717861	0					
ANR	717957	IfStatement	if ( c_starter )		717861	9					
ANR	717958	Condition	c_starter	120:5:3527:3535	717861	0	True				
ANR	717959	Identifier	c_starter		717861	0					
ANR	717960	CompoundStatement		26:17:665:665	717861	1					
ANR	717961	Statement	delete	121:2:3543:3548	717861	0	True				
ANR	717962	ExpressionStatement	c_starter	121:8:3549:3562	717861	1	True				
ANR	717963	Identifier	c_starter		717861	0					
ANR	717964	IfStatement	if ( c_global_job_id )		717861	10					
ANR	717965	Condition	c_global_job_id	123:5:3572:3586	717861	0	True				
ANR	717966	Identifier	c_global_job_id		717861	0					
ANR	717967	CompoundStatement		29:23:716:716	717861	1					
ANR	717968	ExpressionStatement	free ( c_global_job_id )	124:2:3595:3618	717861	0	True				
ANR	717969	CallExpression	free ( c_global_job_id )		717861	0					
ANR	717970	Callee	free		717861	0					
ANR	717971	Identifier	free		717861	0					
ANR	717972	ArgumentList	c_global_job_id		717861	1					
ANR	717973	Argument	c_global_job_id		717861	0					
ANR	717974	Identifier	c_global_job_id		717861	0					
ANR	717975	IfStatement	if ( c_cod_keyword )		717861	11					
ANR	717976	Condition	c_cod_keyword	126:5:3628:3640	717861	0	True				
ANR	717977	Identifier	c_cod_keyword		717861	0					
ANR	717978	CompoundStatement		32:21:770:770	717861	1					
ANR	717979	ExpressionStatement	free ( c_cod_keyword )	127:2:3648:3669	717861	0	True				
ANR	717980	CallExpression	free ( c_cod_keyword )		717861	0					
ANR	717981	Callee	free		717861	0					
ANR	717982	Identifier	free		717861	0					
ANR	717983	ArgumentList	c_cod_keyword		717861	1					
ANR	717984	Argument	c_cod_keyword		717861	0					
ANR	717985	Identifier	c_cod_keyword		717861	0					
ANR	717986	Identifier	Claim :: ~Claim		717861	1					
ANR	717987	ParameterList			717861	2					
ANR	717988	CFGEntryNode	ENTRY		717861		True				
ANR	717989	CFGExitNode	EXIT		717861		True				
ANR	717990	Symbol	c_starter		717861						
ANR	717991	Symbol	NULL		717861						
ANR	717992	Symbol	CLAIM_COD		717861						
ANR	717993	Symbol	c_cod_keyword		717861						
ANR	717994	Symbol	this		717861						
ANR	717995	Symbol	c_id -> id		717861						
ANR	717996	Symbol	c_alive_inprogress_sock		717861						
ANR	717997	Symbol	D_FULLDEBUG		717861						
ANR	717998	Symbol	c_client -> owner		717861						
ANR	717999	Symbol	* c_client		717861						
ANR	718000	Symbol	c_client		717861						
ANR	718001	Symbol	* c_id		717861						
ANR	718002	Symbol	c_ad		717861						
ANR	718003	Symbol	c_type		717861						
ANR	718004	Symbol	daemonCore		717861						
ANR	718005	Symbol	c_id		717861						
ANR	718006	Symbol	c_global_job_id		717861						
ANR	718007	Function	Claim :: scheddClosedClaim	131:0:3678:3892							
ANR	718008	FunctionDef	Claim :: scheddClosedClaim ()		718007	0					
ANR	718009	CompoundStatement		132:27:3710:3892	718007	0					
ANR	718010	ExpressionStatement	c_schedd_closed_claim = true	136:1:3862:3890	718007	0	True				
ANR	718011	AssignmentExpression	c_schedd_closed_claim = true		718007	0		=			
ANR	718012	Identifier	c_schedd_closed_claim		718007	0					
ANR	718013	Identifier	true		718007	1					
ANR	718014	ReturnType	void		718007	1					
ANR	718015	Identifier	Claim :: scheddClosedClaim		718007	2					
ANR	718016	ParameterList			718007	3					
ANR	718017	CFGEntryNode	ENTRY		718007		True				
ANR	718018	CFGExitNode	EXIT		718007		True				
ANR	718019	Symbol	c_schedd_closed_claim		718007						
ANR	718020	Symbol	true		718007						
ANR	718021	Function	Claim :: vacate	139:0:3896:4224							
ANR	718022	FunctionDef	Claim :: vacate ()		718021	0					
ANR	718023	CompoundStatement		141:0:3918:4224	718021	0					
ANR	718024	ExpressionStatement	ASSERT ( c_id )	142:1:3921:3935	718021	0	True				
ANR	718025	CallExpression	ASSERT ( c_id )		718021	0					
ANR	718026	Callee	ASSERT		718021	0					
ANR	718027	Identifier	ASSERT		718021	0					
ANR	718028	ArgumentList	c_id		718021	1					
ANR	718029	Argument	c_id		718021	0					
ANR	718030	Identifier	c_id		718021	0					
ANR	718031	IfStatement	if ( c_client && c_client -> addr ( ) && ! c_schedd_closed_claim )		718021	1					
ANR	718032	Condition	c_client && c_client -> addr ( ) && ! c_schedd_closed_claim	144:5:4001:4054	718021	0	True				
ANR	718033	AndExpression	c_client && c_client -> addr ( ) && ! c_schedd_closed_claim		718021	0		&&			
ANR	718034	Identifier	c_client		718021	0					
ANR	718035	AndExpression	c_client -> addr ( ) && ! c_schedd_closed_claim		718021	1		&&			
ANR	718036	CallExpression	c_client -> addr ( )		718021	0					
ANR	718037	Callee	c_client -> addr		718021	0					
ANR	718038	PtrMemberAccess	c_client -> addr		718021	0					
ANR	718039	Identifier	c_client		718021	0					
ANR	718040	Identifier	addr		718021	1					
ANR	718041	ArgumentList			718021	1					
ANR	718042	UnaryOperationExpression	! c_schedd_closed_claim		718021	1					
ANR	718043	UnaryOperator	!		718021	0					
ANR	718044	Identifier	c_schedd_closed_claim		718021	1					
ANR	718045	CompoundStatement		4:62:139:139	718021	1					
ANR	718046	ExpressionStatement	c_client -> vacate ( c_id -> id ( ) )	145:2:4062:4092	718021	0	True				
ANR	718047	CallExpression	c_client -> vacate ( c_id -> id ( ) )		718021	0					
ANR	718048	Callee	c_client -> vacate		718021	0					
ANR	718049	PtrMemberAccess	c_client -> vacate		718021	0					
ANR	718050	Identifier	c_client		718021	0					
ANR	718051	Identifier	vacate		718021	1					
ANR	718052	ArgumentList	c_id -> id ( )		718021	1					
ANR	718053	Argument	c_id -> id ( )		718021	0					
ANR	718054	CallExpression	c_id -> id ( )		718021	0					
ANR	718055	Callee	c_id -> id		718021	0					
ANR	718056	PtrMemberAccess	c_id -> id		718021	0					
ANR	718057	Identifier	c_id		718021	0					
ANR	718058	Identifier	id		718021	1					
ANR	718059	ArgumentList			718021	1					
ANR	718060	IfStatement	if ( c_type == CLAIM_FETCH )		718021	2					
ANR	718061	Condition	c_type == CLAIM_FETCH	149:5:4122:4142	718021	0	True				
ANR	718062	EqualityExpression	c_type == CLAIM_FETCH		718021	0		==			
ANR	718063	Identifier	c_type		718021	0					
ANR	718064	Identifier	CLAIM_FETCH		718021	1					
ANR	718065	CompoundStatement		9:28:226:226	718021	1					
ANR	718066	ExpressionStatement	resmgr -> m_hook_mgr -> hookEvictClaim ( c_rip )	150:2:4149:4190	718021	0	True				
ANR	718067	CallExpression	resmgr -> m_hook_mgr -> hookEvictClaim ( c_rip )		718021	0					
ANR	718068	Callee	resmgr -> m_hook_mgr -> hookEvictClaim		718021	0					
ANR	718069	PtrMemberAccess	resmgr -> m_hook_mgr -> hookEvictClaim		718021	0					
ANR	718070	PtrMemberAccess	resmgr -> m_hook_mgr		718021	0					
ANR	718071	Identifier	resmgr		718021	0					
ANR	718072	Identifier	m_hook_mgr		718021	1					
ANR	718073	Identifier	hookEvictClaim		718021	1					
ANR	718074	ArgumentList	c_rip		718021	1					
ANR	718075	Argument	c_rip		718021	0					
ANR	718076	Identifier	c_rip		718021	0					
ANR	718077	ReturnType	void		718021	1					
ANR	718078	Identifier	Claim :: vacate		718021	2					
ANR	718079	ParameterList			718021	3					
ANR	718080	CFGEntryNode	ENTRY		718021		True				
ANR	718081	CFGExitNode	EXIT		718021		True				
ANR	718082	Symbol	CLAIM_FETCH		718021						
ANR	718083	Symbol	c_rip		718021						
ANR	718084	Symbol	c_schedd_closed_claim		718021						
ANR	718085	Symbol	c_client -> addr		718021						
ANR	718086	Symbol	* resmgr		718021						
ANR	718087	Symbol	c_id -> id		718021						
ANR	718088	Symbol	resmgr -> m_hook_mgr		718021						
ANR	718089	Symbol	* c_client		718021						
ANR	718090	Symbol	c_client		718021						
ANR	718091	Symbol	* c_id		718021						
ANR	718092	Symbol	resmgr		718021						
ANR	718093	Symbol	c_type		718021						
ANR	718094	Symbol	c_id		718021						
ANR	718095	Function	Claim :: publish	157:0:4228:7175							
ANR	718096	FunctionDef	"Claim :: publish (ClassAd * cad , amask_t how_much)"		718095	0					
ANR	718097	CompoundStatement		159:0:4282:7175	718095	0					
ANR	718098	IdentifierDeclStatement	MyString line ;	160:1:4285:4298	718095	0	True				
ANR	718099	IdentifierDecl	line		718095	0					
ANR	718100	IdentifierDeclType	MyString		718095	0					
ANR	718101	Identifier	line		718095	1					
ANR	718102	IdentifierDeclStatement	char * tmp ;	161:1:4301:4310	718095	1	True				
ANR	718103	IdentifierDecl	* tmp		718095	0					
ANR	718104	IdentifierDeclType	char *		718095	0					
ANR	718105	Identifier	tmp		718095	1					
ANR	718106	IdentifierDeclStatement	char * remoteUser ;	162:1:4313:4329	718095	2	True				
ANR	718107	IdentifierDecl	* remoteUser		718095	0					
ANR	718108	IdentifierDeclType	char *		718095	0					
ANR	718109	Identifier	remoteUser		718095	1					
ANR	718110	ExpressionStatement	"line . sprintf ( ""%s = %f"" , ATTR_CURRENT_RANK , c_rank )"	176:1:4869:4921	718095	3	True				
ANR	718111	CallExpression	"line . sprintf ( ""%s = %f"" , ATTR_CURRENT_RANK , c_rank )"		718095	0					
ANR	718112	Callee	line . sprintf		718095	0					
ANR	718113	MemberAccess	line . sprintf		718095	0					
ANR	718114	Identifier	line		718095	0					
ANR	718115	Identifier	sprintf		718095	1					
ANR	718116	ArgumentList	"""%s = %f"""		718095	1					
ANR	718117	Argument	"""%s = %f"""		718095	0					
ANR	718118	PrimaryExpression	"""%s = %f"""		718095	0					
ANR	718119	Argument	ATTR_CURRENT_RANK		718095	1					
ANR	718120	Identifier	ATTR_CURRENT_RANK		718095	0					
ANR	718121	Argument	c_rank		718095	2					
ANR	718122	Identifier	c_rank		718095	0					
ANR	718123	ExpressionStatement	cad -> Insert ( line . Value ( ) )	177:1:4924:4951	718095	4	True				
ANR	718124	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718125	Callee	cad -> Insert		718095	0					
ANR	718126	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718127	Identifier	cad		718095	0					
ANR	718128	Identifier	Insert		718095	1					
ANR	718129	ArgumentList	line . Value ( )		718095	1					
ANR	718130	Argument	line . Value ( )		718095	0					
ANR	718131	CallExpression	line . Value ( )		718095	0					
ANR	718132	Callee	line . Value		718095	0					
ANR	718133	MemberAccess	line . Value		718095	0					
ANR	718134	Identifier	line		718095	0					
ANR	718135	Identifier	Value		718095	1					
ANR	718136	ArgumentList			718095	1					
ANR	718137	IfStatement	if ( c_client )		718095	5					
ANR	718138	Condition	c_client	179:5:4959:4966	718095	0	True				
ANR	718139	Identifier	c_client		718095	0					
ANR	718140	CompoundStatement		58:2:1636:1672	718095	1					
ANR	718141	ExpressionStatement	remoteUser = c_client -> user ( )	180:2:4974:5003	718095	0	True				
ANR	718142	AssignmentExpression	remoteUser = c_client -> user ( )		718095	0		=			
ANR	718143	Identifier	remoteUser		718095	0					
ANR	718144	CallExpression	c_client -> user ( )		718095	1					
ANR	718145	Callee	c_client -> user		718095	0					
ANR	718146	PtrMemberAccess	c_client -> user		718095	0					
ANR	718147	Identifier	c_client		718095	0					
ANR	718148	Identifier	user		718095	1					
ANR	718149	ArgumentList			718095	1					
ANR	718150	IfStatement	if ( remoteUser )		718095	1					
ANR	718151	Condition	remoteUser	181:6:5011:5020	718095	0	True				
ANR	718152	Identifier	remoteUser		718095	0					
ANR	718153	CompoundStatement		23:19:741:741	718095	1					
ANR	718154	ExpressionStatement	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_REMOTE_USER , remoteUser )"	182:3:5029:5086	718095	0	True				
ANR	718155	CallExpression	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_REMOTE_USER , remoteUser )"		718095	0					
ANR	718156	Callee	line . sprintf		718095	0					
ANR	718157	MemberAccess	line . sprintf		718095	0					
ANR	718158	Identifier	line		718095	0					
ANR	718159	Identifier	sprintf		718095	1					
ANR	718160	ArgumentList	"""%s=\\""%s\\"""""		718095	1					
ANR	718161	Argument	"""%s=\\""%s\\"""""		718095	0					
ANR	718162	PrimaryExpression	"""%s=\\""%s\\"""""		718095	0					
ANR	718163	Argument	ATTR_REMOTE_USER		718095	1					
ANR	718164	Identifier	ATTR_REMOTE_USER		718095	0					
ANR	718165	Argument	remoteUser		718095	2					
ANR	718166	Identifier	remoteUser		718095	0					
ANR	718167	ExpressionStatement	cad -> Insert ( line . Value ( ) )	183:3:5091:5118	718095	1	True				
ANR	718168	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718169	Callee	cad -> Insert		718095	0					
ANR	718170	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718171	Identifier	cad		718095	0					
ANR	718172	Identifier	Insert		718095	1					
ANR	718173	ArgumentList	line . Value ( )		718095	1					
ANR	718174	Argument	line . Value ( )		718095	0					
ANR	718175	CallExpression	line . Value ( )		718095	0					
ANR	718176	Callee	line . Value		718095	0					
ANR	718177	MemberAccess	line . Value		718095	0					
ANR	718178	Identifier	line		718095	0					
ANR	718179	Identifier	Value		718095	1					
ANR	718180	ArgumentList			718095	1					
ANR	718181	ExpressionStatement	tmp = c_client -> owner ( )	185:2:5126:5149	718095	2	True				
ANR	718182	AssignmentExpression	tmp = c_client -> owner ( )		718095	0		=			
ANR	718183	Identifier	tmp		718095	0					
ANR	718184	CallExpression	c_client -> owner ( )		718095	1					
ANR	718185	Callee	c_client -> owner		718095	0					
ANR	718186	PtrMemberAccess	c_client -> owner		718095	0					
ANR	718187	Identifier	c_client		718095	0					
ANR	718188	Identifier	owner		718095	1					
ANR	718189	ArgumentList			718095	1					
ANR	718190	IfStatement	if ( tmp )		718095	3					
ANR	718191	Condition	tmp	186:6:5157:5159	718095	0	True				
ANR	718192	Identifier	tmp		718095	0					
ANR	718193	CompoundStatement		28:12:880:880	718095	1					
ANR	718194	ExpressionStatement	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_REMOTE_OWNER , tmp )"	187:3:5168:5219	718095	0	True				
ANR	718195	CallExpression	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_REMOTE_OWNER , tmp )"		718095	0					
ANR	718196	Callee	line . sprintf		718095	0					
ANR	718197	MemberAccess	line . sprintf		718095	0					
ANR	718198	Identifier	line		718095	0					
ANR	718199	Identifier	sprintf		718095	1					
ANR	718200	ArgumentList	"""%s=\\""%s\\"""""		718095	1					
ANR	718201	Argument	"""%s=\\""%s\\"""""		718095	0					
ANR	718202	PrimaryExpression	"""%s=\\""%s\\"""""		718095	0					
ANR	718203	Argument	ATTR_REMOTE_OWNER		718095	1					
ANR	718204	Identifier	ATTR_REMOTE_OWNER		718095	0					
ANR	718205	Argument	tmp		718095	2					
ANR	718206	Identifier	tmp		718095	0					
ANR	718207	ExpressionStatement	cad -> Insert ( line . Value ( ) )	188:3:5224:5251	718095	1	True				
ANR	718208	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718209	Callee	cad -> Insert		718095	0					
ANR	718210	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718211	Identifier	cad		718095	0					
ANR	718212	Identifier	Insert		718095	1					
ANR	718213	ArgumentList	line . Value ( )		718095	1					
ANR	718214	Argument	line . Value ( )		718095	0					
ANR	718215	CallExpression	line . Value ( )		718095	0					
ANR	718216	Callee	line . Value		718095	0					
ANR	718217	MemberAccess	line . Value		718095	0					
ANR	718218	Identifier	line		718095	0					
ANR	718219	Identifier	Value		718095	1					
ANR	718220	ArgumentList			718095	1					
ANR	718221	ExpressionStatement	tmp = c_client -> accountingGroup ( )	190:2:5259:5292	718095	4	True				
ANR	718222	AssignmentExpression	tmp = c_client -> accountingGroup ( )		718095	0		=			
ANR	718223	Identifier	tmp		718095	0					
ANR	718224	CallExpression	c_client -> accountingGroup ( )		718095	1					
ANR	718225	Callee	c_client -> accountingGroup		718095	0					
ANR	718226	PtrMemberAccess	c_client -> accountingGroup		718095	0					
ANR	718227	Identifier	c_client		718095	0					
ANR	718228	Identifier	accountingGroup		718095	1					
ANR	718229	ArgumentList			718095	1					
ANR	718230	IfStatement	if ( tmp )		718095	5					
ANR	718231	Condition	tmp	191:6:5300:5302	718095	0	True				
ANR	718232	Identifier	tmp		718095	0					
ANR	718233	CompoundStatement		34:3:1028:1047	718095	1					
ANR	718234	IdentifierDeclStatement	char * uidDom = NULL ;	192:3:5311:5330	718095	0	True				
ANR	718235	IdentifierDecl	* uidDom = NULL		718095	0					
ANR	718236	IdentifierDeclType	char *		718095	0					
ANR	718237	Identifier	uidDom		718095	1					
ANR	718238	AssignmentExpression	* uidDom = NULL		718095	2		=			
ANR	718239	Identifier	NULL		718095	0					
ANR	718240	Identifier	NULL		718095	1					
ANR	718241	IfStatement	if ( remoteUser )		718095	1					
ANR	718242	Condition	remoteUser	195:8:5421:5430	718095	0	True				
ANR	718243	Identifier	remoteUser		718095	0					
ANR	718244	CompoundStatement		37:21:1151:1151	718095	1					
ANR	718245	ExpressionStatement	"uidDom = strchr ( remoteUser , '@' )"	196:4:5440:5471	718095	0	True				
ANR	718246	AssignmentExpression	"uidDom = strchr ( remoteUser , '@' )"		718095	0		=			
ANR	718247	Identifier	uidDom		718095	0					
ANR	718248	CallExpression	"strchr ( remoteUser , '@' )"		718095	1					
ANR	718249	Callee	strchr		718095	0					
ANR	718250	Identifier	strchr		718095	0					
ANR	718251	ArgumentList	remoteUser		718095	1					
ANR	718252	Argument	remoteUser		718095	0					
ANR	718253	Identifier	remoteUser		718095	0					
ANR	718254	Argument	'@'		718095	1					
ANR	718255	PrimaryExpression	'@'		718095	0					
ANR	718256	IfStatement	if ( uidDom )		718095	2					
ANR	718257	Condition	uidDom	198:8:5486:5491	718095	0	True				
ANR	718258	Identifier	uidDom		718095	0					
ANR	718259	CompoundStatement		40:17:1212:1212	718095	1					
ANR	718260	ExpressionStatement	"line . sprintf ( ""%s=\\""%s%s\\"""" , ATTR_ACCOUNTING_GROUP , tmp , uidDom )"	199:4:5501:5561	718095	0	True				
ANR	718261	CallExpression	"line . sprintf ( ""%s=\\""%s%s\\"""" , ATTR_ACCOUNTING_GROUP , tmp , uidDom )"		718095	0					
ANR	718262	Callee	line . sprintf		718095	0					
ANR	718263	MemberAccess	line . sprintf		718095	0					
ANR	718264	Identifier	line		718095	0					
ANR	718265	Identifier	sprintf		718095	1					
ANR	718266	ArgumentList	"""%s=\\""%s%s\\"""""		718095	1					
ANR	718267	Argument	"""%s=\\""%s%s\\"""""		718095	0					
ANR	718268	PrimaryExpression	"""%s=\\""%s%s\\"""""		718095	0					
ANR	718269	Argument	ATTR_ACCOUNTING_GROUP		718095	1					
ANR	718270	Identifier	ATTR_ACCOUNTING_GROUP		718095	0					
ANR	718271	Argument	tmp		718095	2					
ANR	718272	Identifier	tmp		718095	0					
ANR	718273	Argument	uidDom		718095	3					
ANR	718274	Identifier	uidDom		718095	0					
ANR	718275	ElseStatement	else		718095	0					
ANR	718276	CompoundStatement		42:10:1290:1290	718095	0					
ANR	718277	ExpressionStatement	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_ACCOUNTING_GROUP , tmp )"	201:4:5579:5633	718095	0	True				
ANR	718278	CallExpression	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_ACCOUNTING_GROUP , tmp )"		718095	0					
ANR	718279	Callee	line . sprintf		718095	0					
ANR	718280	MemberAccess	line . sprintf		718095	0					
ANR	718281	Identifier	line		718095	0					
ANR	718282	Identifier	sprintf		718095	1					
ANR	718283	ArgumentList	"""%s=\\""%s\\"""""		718095	1					
ANR	718284	Argument	"""%s=\\""%s\\"""""		718095	0					
ANR	718285	PrimaryExpression	"""%s=\\""%s\\"""""		718095	0					
ANR	718286	Argument	ATTR_ACCOUNTING_GROUP		718095	1					
ANR	718287	Identifier	ATTR_ACCOUNTING_GROUP		718095	0					
ANR	718288	Argument	tmp		718095	2					
ANR	718289	Identifier	tmp		718095	0					
ANR	718290	ExpressionStatement	cad -> Insert ( line . Value ( ) )	203:3:5643:5670	718095	3	True				
ANR	718291	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718292	Callee	cad -> Insert		718095	0					
ANR	718293	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718294	Identifier	cad		718095	0					
ANR	718295	Identifier	Insert		718095	1					
ANR	718296	ArgumentList	line . Value ( )		718095	1					
ANR	718297	Argument	line . Value ( )		718095	0					
ANR	718298	CallExpression	line . Value ( )		718095	0					
ANR	718299	Callee	line . Value		718095	0					
ANR	718300	MemberAccess	line . Value		718095	0					
ANR	718301	Identifier	line		718095	0					
ANR	718302	Identifier	Value		718095	1					
ANR	718303	ArgumentList			718095	1					
ANR	718304	ExpressionStatement	tmp = c_client -> host ( )	205:2:5678:5700	718095	6	True				
ANR	718305	AssignmentExpression	tmp = c_client -> host ( )		718095	0		=			
ANR	718306	Identifier	tmp		718095	0					
ANR	718307	CallExpression	c_client -> host ( )		718095	1					
ANR	718308	Callee	c_client -> host		718095	0					
ANR	718309	PtrMemberAccess	c_client -> host		718095	0					
ANR	718310	Identifier	c_client		718095	0					
ANR	718311	Identifier	host		718095	1					
ANR	718312	ArgumentList			718095	1					
ANR	718313	IfStatement	if ( tmp )		718095	7					
ANR	718314	Condition	tmp	206:6:5708:5710	718095	0	True				
ANR	718315	Identifier	tmp		718095	0					
ANR	718316	CompoundStatement		48:12:1431:1431	718095	1					
ANR	718317	ExpressionStatement	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_CLIENT_MACHINE , tmp )"	207:3:5719:5772	718095	0	True				
ANR	718318	CallExpression	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_CLIENT_MACHINE , tmp )"		718095	0					
ANR	718319	Callee	line . sprintf		718095	0					
ANR	718320	MemberAccess	line . sprintf		718095	0					
ANR	718321	Identifier	line		718095	0					
ANR	718322	Identifier	sprintf		718095	1					
ANR	718323	ArgumentList	"""%s=\\""%s\\"""""		718095	1					
ANR	718324	Argument	"""%s=\\""%s\\"""""		718095	0					
ANR	718325	PrimaryExpression	"""%s=\\""%s\\"""""		718095	0					
ANR	718326	Argument	ATTR_CLIENT_MACHINE		718095	1					
ANR	718327	Identifier	ATTR_CLIENT_MACHINE		718095	0					
ANR	718328	Argument	tmp		718095	2					
ANR	718329	Identifier	tmp		718095	0					
ANR	718330	ExpressionStatement	cad -> Insert ( line . Value ( ) )	208:3:5777:5804	718095	1	True				
ANR	718331	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718332	Callee	cad -> Insert		718095	0					
ANR	718333	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718334	Identifier	cad		718095	0					
ANR	718335	Identifier	Insert		718095	1					
ANR	718336	ArgumentList	line . Value ( )		718095	1					
ANR	718337	Argument	line . Value ( )		718095	0					
ANR	718338	CallExpression	line . Value ( )		718095	0					
ANR	718339	Callee	line . Value		718095	0					
ANR	718340	MemberAccess	line . Value		718095	0					
ANR	718341	Identifier	line		718095	0					
ANR	718342	Identifier	Value		718095	1					
ANR	718343	ArgumentList			718095	1					
ANR	718344	ExpressionStatement	tmp = c_client -> getConcurrencyLimits ( )	211:2:5813:5851	718095	8	True				
ANR	718345	AssignmentExpression	tmp = c_client -> getConcurrencyLimits ( )		718095	0		=			
ANR	718346	Identifier	tmp		718095	0					
ANR	718347	CallExpression	c_client -> getConcurrencyLimits ( )		718095	1					
ANR	718348	Callee	c_client -> getConcurrencyLimits		718095	0					
ANR	718349	PtrMemberAccess	c_client -> getConcurrencyLimits		718095	0					
ANR	718350	Identifier	c_client		718095	0					
ANR	718351	Identifier	getConcurrencyLimits		718095	1					
ANR	718352	ArgumentList			718095	1					
ANR	718353	IfStatement	if ( tmp )		718095	9					
ANR	718354	Condition	tmp	212:6:5859:5861	718095	0	True				
ANR	718355	Identifier	tmp		718095	0					
ANR	718356	CompoundStatement		54:11:1581:1581	718095	1					
ANR	718357	ExpressionStatement	"cad -> Assign ( ATTR_CONCURRENCY_LIMITS , tmp )"	213:3:5869:5910	718095	0	True				
ANR	718358	CallExpression	"cad -> Assign ( ATTR_CONCURRENCY_LIMITS , tmp )"		718095	0					
ANR	718359	Callee	cad -> Assign		718095	0					
ANR	718360	PtrMemberAccess	cad -> Assign		718095	0					
ANR	718361	Identifier	cad		718095	0					
ANR	718362	Identifier	Assign		718095	1					
ANR	718363	ArgumentList	ATTR_CONCURRENCY_LIMITS		718095	1					
ANR	718364	Argument	ATTR_CONCURRENCY_LIMITS		718095	0					
ANR	718365	Identifier	ATTR_CONCURRENCY_LIMITS		718095	0					
ANR	718366	Argument	tmp		718095	1					
ANR	718367	Identifier	tmp		718095	0					
ANR	718368	IdentifierDeclStatement	int numJobPids = c_client -> numPids ( ) ;	216:2:5919:5955	718095	10	True				
ANR	718369	IdentifierDecl	numJobPids = c_client -> numPids ( )		718095	0					
ANR	718370	IdentifierDeclType	int		718095	0					
ANR	718371	Identifier	numJobPids		718095	1					
ANR	718372	AssignmentExpression	numJobPids = c_client -> numPids ( )		718095	2		=			
ANR	718373	Identifier	numJobPids		718095	0					
ANR	718374	CallExpression	c_client -> numPids ( )		718095	1					
ANR	718375	Callee	c_client -> numPids		718095	0					
ANR	718376	PtrMemberAccess	c_client -> numPids		718095	0					
ANR	718377	Identifier	c_client		718095	0					
ANR	718378	Identifier	numPids		718095	1					
ANR	718379	ArgumentList			718095	1					
ANR	718380	IfStatement	if ( c_universe == CONDOR_UNIVERSE_STANDARD )		718095	11					
ANR	718381	Condition	c_universe == CONDOR_UNIVERSE_STANDARD	219:5:6014:6051	718095	0	True				
ANR	718382	EqualityExpression	c_universe == CONDOR_UNIVERSE_STANDARD		718095	0		==			
ANR	718383	Identifier	c_universe		718095	0					
ANR	718384	Identifier	CONDOR_UNIVERSE_STANDARD		718095	1					
ANR	718385	CompoundStatement		61:45:1771:1771	718095	1					
ANR	718386	ExpressionStatement	numJobPids = 1	220:3:6059:6073	718095	0	True				
ANR	718387	AssignmentExpression	numJobPids = 1		718095	0		=			
ANR	718388	Identifier	numJobPids		718095	0					
ANR	718389	PrimaryExpression	1		718095	1					
ANR	718390	ExpressionStatement	"line . sprintf ( ""%s=%d"" , ATTR_NUM_PIDS , numJobPids )"	222:2:6081:6129	718095	12	True				
ANR	718391	CallExpression	"line . sprintf ( ""%s=%d"" , ATTR_NUM_PIDS , numJobPids )"		718095	0					
ANR	718392	Callee	line . sprintf		718095	0					
ANR	718393	MemberAccess	line . sprintf		718095	0					
ANR	718394	Identifier	line		718095	0					
ANR	718395	Identifier	sprintf		718095	1					
ANR	718396	ArgumentList	"""%s=%d"""		718095	1					
ANR	718397	Argument	"""%s=%d"""		718095	0					
ANR	718398	PrimaryExpression	"""%s=%d"""		718095	0					
ANR	718399	Argument	ATTR_NUM_PIDS		718095	1					
ANR	718400	Identifier	ATTR_NUM_PIDS		718095	0					
ANR	718401	Argument	numJobPids		718095	2					
ANR	718402	Identifier	numJobPids		718095	0					
ANR	718403	ExpressionStatement	cad -> Insert ( line . Value ( ) )	223:2:6133:6160	718095	13	True				
ANR	718404	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718405	Callee	cad -> Insert		718095	0					
ANR	718406	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718407	Identifier	cad		718095	0					
ANR	718408	Identifier	Insert		718095	1					
ANR	718409	ArgumentList	line . Value ( )		718095	1					
ANR	718410	Argument	line . Value ( )		718095	0					
ANR	718411	CallExpression	line . Value ( )		718095	0					
ANR	718412	Callee	line . Value		718095	0					
ANR	718413	MemberAccess	line . Value		718095	0					
ANR	718414	Identifier	line		718095	0					
ANR	718415	Identifier	Value		718095	1					
ANR	718416	ArgumentList			718095	1					
ANR	718417	IfStatement	if ( ( c_cluster > 0 ) && ( c_proc >= 0 ) )		718095	6					
ANR	718418	Condition	( c_cluster > 0 ) && ( c_proc >= 0 )	226:5:6171:6202	718095	0	True				
ANR	718419	AndExpression	( c_cluster > 0 ) && ( c_proc >= 0 )		718095	0		&&			
ANR	718420	RelationalExpression	c_cluster > 0		718095	0		>			
ANR	718421	Identifier	c_cluster		718095	0					
ANR	718422	PrimaryExpression	0		718095	1					
ANR	718423	RelationalExpression	c_proc >= 0		718095	1		>=			
ANR	718424	Identifier	c_proc		718095	0					
ANR	718425	PrimaryExpression	0		718095	1					
ANR	718426	CompoundStatement		68:40:1923:1923	718095	1					
ANR	718427	ExpressionStatement	"line . sprintf ( ""%s=\\""%d.%d\\"""" , ATTR_JOB_ID , c_cluster , c_proc )"	227:2:6210:6272	718095	0	True				
ANR	718428	CallExpression	"line . sprintf ( ""%s=\\""%d.%d\\"""" , ATTR_JOB_ID , c_cluster , c_proc )"		718095	0					
ANR	718429	Callee	line . sprintf		718095	0					
ANR	718430	MemberAccess	line . sprintf		718095	0					
ANR	718431	Identifier	line		718095	0					
ANR	718432	Identifier	sprintf		718095	1					
ANR	718433	ArgumentList	"""%s=\\""%d.%d\\"""""		718095	1					
ANR	718434	Argument	"""%s=\\""%d.%d\\"""""		718095	0					
ANR	718435	PrimaryExpression	"""%s=\\""%d.%d\\"""""		718095	0					
ANR	718436	Argument	ATTR_JOB_ID		718095	1					
ANR	718437	Identifier	ATTR_JOB_ID		718095	0					
ANR	718438	Argument	c_cluster		718095	2					
ANR	718439	Identifier	c_cluster		718095	0					
ANR	718440	Argument	c_proc		718095	3					
ANR	718441	Identifier	c_proc		718095	0					
ANR	718442	ExpressionStatement	cad -> Insert ( line . Value ( ) )	228:2:6276:6303	718095	1	True				
ANR	718443	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718444	Callee	cad -> Insert		718095	0					
ANR	718445	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718446	Identifier	cad		718095	0					
ANR	718447	Identifier	Insert		718095	1					
ANR	718448	ArgumentList	line . Value ( )		718095	1					
ANR	718449	Argument	line . Value ( )		718095	0					
ANR	718450	CallExpression	line . Value ( )		718095	0					
ANR	718451	Callee	line . Value		718095	0					
ANR	718452	MemberAccess	line . Value		718095	0					
ANR	718453	Identifier	line		718095	0					
ANR	718454	Identifier	Value		718095	1					
ANR	718455	ArgumentList			718095	1					
ANR	718456	IfStatement	if ( c_global_job_id )		718095	7					
ANR	718457	Condition	c_global_job_id	231:5:6314:6328	718095	0	True				
ANR	718458	Identifier	c_global_job_id		718095	0					
ANR	718459	CompoundStatement		73:23:2049:2049	718095	1					
ANR	718460	ExpressionStatement	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_GLOBAL_JOB_ID , c_global_job_id )"	232:2:6336:6400	718095	0	True				
ANR	718461	CallExpression	"line . sprintf ( ""%s=\\""%s\\"""" , ATTR_GLOBAL_JOB_ID , c_global_job_id )"		718095	0					
ANR	718462	Callee	line . sprintf		718095	0					
ANR	718463	MemberAccess	line . sprintf		718095	0					
ANR	718464	Identifier	line		718095	0					
ANR	718465	Identifier	sprintf		718095	1					
ANR	718466	ArgumentList	"""%s=\\""%s\\"""""		718095	1					
ANR	718467	Argument	"""%s=\\""%s\\"""""		718095	0					
ANR	718468	PrimaryExpression	"""%s=\\""%s\\"""""		718095	0					
ANR	718469	Argument	ATTR_GLOBAL_JOB_ID		718095	1					
ANR	718470	Identifier	ATTR_GLOBAL_JOB_ID		718095	0					
ANR	718471	Argument	c_global_job_id		718095	2					
ANR	718472	Identifier	c_global_job_id		718095	0					
ANR	718473	ExpressionStatement	cad -> Insert ( line . Value ( ) )	233:2:6404:6431	718095	1	True				
ANR	718474	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718475	Callee	cad -> Insert		718095	0					
ANR	718476	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718477	Identifier	cad		718095	0					
ANR	718478	Identifier	Insert		718095	1					
ANR	718479	ArgumentList	line . Value ( )		718095	1					
ANR	718480	Argument	line . Value ( )		718095	0					
ANR	718481	CallExpression	line . Value ( )		718095	0					
ANR	718482	Callee	line . Value		718095	0					
ANR	718483	MemberAccess	line . Value		718095	0					
ANR	718484	Identifier	line		718095	0					
ANR	718485	Identifier	Value		718095	1					
ANR	718486	ArgumentList			718095	1					
ANR	718487	IfStatement	if ( c_job_start > 0 )		718095	8					
ANR	718488	Condition	c_job_start > 0	236:5:6442:6456	718095	0	True				
ANR	718489	RelationalExpression	c_job_start > 0		718095	0		>			
ANR	718490	Identifier	c_job_start		718095	0					
ANR	718491	PrimaryExpression	0		718095	1					
ANR	718492	CompoundStatement		78:23:2177:2177	718095	1					
ANR	718493	ExpressionStatement	"line . sprintf ( ""%s=%d"" , ATTR_JOB_START , c_job_start )"	237:2:6464:6516	718095	0	True				
ANR	718494	CallExpression	"line . sprintf ( ""%s=%d"" , ATTR_JOB_START , c_job_start )"		718095	0					
ANR	718495	Callee	line . sprintf		718095	0					
ANR	718496	MemberAccess	line . sprintf		718095	0					
ANR	718497	Identifier	line		718095	0					
ANR	718498	Identifier	sprintf		718095	1					
ANR	718499	ArgumentList	"""%s=%d"""		718095	1					
ANR	718500	Argument	"""%s=%d"""		718095	0					
ANR	718501	PrimaryExpression	"""%s=%d"""		718095	0					
ANR	718502	Argument	ATTR_JOB_START		718095	1					
ANR	718503	Identifier	ATTR_JOB_START		718095	0					
ANR	718504	Argument	c_job_start		718095	2					
ANR	718505	Identifier	c_job_start		718095	0					
ANR	718506	ExpressionStatement	cad -> Insert ( line . Value ( ) )	238:2:6520:6547	718095	1	True				
ANR	718507	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718508	Callee	cad -> Insert		718095	0					
ANR	718509	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718510	Identifier	cad		718095	0					
ANR	718511	Identifier	Insert		718095	1					
ANR	718512	ArgumentList	line . Value ( )		718095	1					
ANR	718513	Argument	line . Value ( )		718095	0					
ANR	718514	CallExpression	line . Value ( )		718095	0					
ANR	718515	Callee	line . Value		718095	0					
ANR	718516	MemberAccess	line . Value		718095	0					
ANR	718517	Identifier	line		718095	0					
ANR	718518	Identifier	Value		718095	1					
ANR	718519	ArgumentList			718095	1					
ANR	718520	IfStatement	if ( c_last_pckpt > 0 )		718095	9					
ANR	718521	Condition	c_last_pckpt > 0	241:5:6558:6573	718095	0	True				
ANR	718522	RelationalExpression	c_last_pckpt > 0		718095	0		>			
ANR	718523	Identifier	c_last_pckpt		718095	0					
ANR	718524	PrimaryExpression	0		718095	1					
ANR	718525	CompoundStatement		83:24:2294:2294	718095	1					
ANR	718526	ExpressionStatement	"line . sprintf ( ""%s=%d"" , ATTR_LAST_PERIODIC_CHECKPOINT , c_last_pckpt )"	242:2:6581:6649	718095	0	True				
ANR	718527	CallExpression	"line . sprintf ( ""%s=%d"" , ATTR_LAST_PERIODIC_CHECKPOINT , c_last_pckpt )"		718095	0					
ANR	718528	Callee	line . sprintf		718095	0					
ANR	718529	MemberAccess	line . sprintf		718095	0					
ANR	718530	Identifier	line		718095	0					
ANR	718531	Identifier	sprintf		718095	1					
ANR	718532	ArgumentList	"""%s=%d"""		718095	1					
ANR	718533	Argument	"""%s=%d"""		718095	0					
ANR	718534	PrimaryExpression	"""%s=%d"""		718095	0					
ANR	718535	Argument	ATTR_LAST_PERIODIC_CHECKPOINT		718095	1					
ANR	718536	Identifier	ATTR_LAST_PERIODIC_CHECKPOINT		718095	0					
ANR	718537	Argument	c_last_pckpt		718095	2					
ANR	718538	Identifier	c_last_pckpt		718095	0					
ANR	718539	ExpressionStatement	cad -> Insert ( line . Value ( ) )	243:2:6653:6680	718095	1	True				
ANR	718540	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718541	Callee	cad -> Insert		718095	0					
ANR	718542	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718543	Identifier	cad		718095	0					
ANR	718544	Identifier	Insert		718095	1					
ANR	718545	ArgumentList	line . Value ( )		718095	1					
ANR	718546	Argument	line . Value ( )		718095	0					
ANR	718547	CallExpression	line . Value ( )		718095	0					
ANR	718548	Callee	line . Value		718095	0					
ANR	718549	MemberAccess	line . Value		718095	0					
ANR	718550	Identifier	line		718095	0					
ANR	718551	Identifier	Value		718095	1					
ANR	718552	ArgumentList			718095	1					
ANR	718553	IfStatement	if ( isActive ( ) )		718095	10					
ANR	718554	Condition	isActive ( )	248:5:6792:6801	718095	0	True				
ANR	718555	CallExpression	isActive ( )		718095	0					
ANR	718556	Callee	isActive		718095	0					
ANR	718557	Identifier	isActive		718095	0					
ANR	718558	ArgumentList			718095	1					
ANR	718559	CompoundStatement		91:2:2526:2561	718095	1					
ANR	718560	IdentifierDeclStatement	unsigned long imgsize = imageSize ( ) ;	249:2:6809:6844	718095	0	True				
ANR	718561	IdentifierDecl	imgsize = imageSize ( )		718095	0					
ANR	718562	IdentifierDeclType	unsigned long		718095	0					
ANR	718563	Identifier	imgsize		718095	1					
ANR	718564	AssignmentExpression	imgsize = imageSize ( )		718095	2		=			
ANR	718565	Identifier	imgsize		718095	0					
ANR	718566	CallExpression	imageSize ( )		718095	1					
ANR	718567	Callee	imageSize		718095	0					
ANR	718568	Identifier	imageSize		718095	0					
ANR	718569	ArgumentList			718095	1					
ANR	718570	ExpressionStatement	"line . sprintf ( ""%s = %lu"" , ATTR_IMAGE_SIZE , imgsize )"	250:2:6848:6900	718095	1	True				
ANR	718571	CallExpression	"line . sprintf ( ""%s = %lu"" , ATTR_IMAGE_SIZE , imgsize )"		718095	0					
ANR	718572	Callee	line . sprintf		718095	0					
ANR	718573	MemberAccess	line . sprintf		718095	0					
ANR	718574	Identifier	line		718095	0					
ANR	718575	Identifier	sprintf		718095	1					
ANR	718576	ArgumentList	"""%s = %lu"""		718095	1					
ANR	718577	Argument	"""%s = %lu"""		718095	0					
ANR	718578	PrimaryExpression	"""%s = %lu"""		718095	0					
ANR	718579	Argument	ATTR_IMAGE_SIZE		718095	1					
ANR	718580	Identifier	ATTR_IMAGE_SIZE		718095	0					
ANR	718581	Argument	imgsize		718095	2					
ANR	718582	Identifier	imgsize		718095	0					
ANR	718583	ExpressionStatement	cad -> Insert ( line . Value ( ) )	251:2:6904:6931	718095	2	True				
ANR	718584	CallExpression	cad -> Insert ( line . Value ( ) )		718095	0					
ANR	718585	Callee	cad -> Insert		718095	0					
ANR	718586	PtrMemberAccess	cad -> Insert		718095	0					
ANR	718587	Identifier	cad		718095	0					
ANR	718588	Identifier	Insert		718095	1					
ANR	718589	ArgumentList	line . Value ( )		718095	1					
ANR	718590	Argument	line . Value ( )		718095	0					
ANR	718591	CallExpression	line . Value ( )		718095	0					
ANR	718592	Callee	line . Value		718095	0					
ANR	718593	MemberAccess	line . Value		718095	0					
ANR	718594	Identifier	line		718095	0					
ANR	718595	Identifier	Value		718095	1					
ANR	718596	ArgumentList			718095	1					
ANR	718597	IfStatement	if ( c_starter )		718095	11					
ANR	718598	Condition	c_starter	255:5:7006:7014	718095	0	True				
ANR	718599	Identifier	c_starter		718095	0					
ANR	718600	CompoundStatement		98:2:2739:2769	718095	1					
ANR	718601	IdentifierDeclStatement	pid_t s_pid = c_starter -> pid ( ) ;	256:2:7022:7052	718095	0	True				
ANR	718602	IdentifierDecl	s_pid = c_starter -> pid ( )		718095	0					
ANR	718603	IdentifierDeclType	pid_t		718095	0					
ANR	718604	Identifier	s_pid		718095	1					
ANR	718605	AssignmentExpression	s_pid = c_starter -> pid ( )		718095	2		=			
ANR	718606	Identifier	s_pid		718095	0					
ANR	718607	CallExpression	c_starter -> pid ( )		718095	1					
ANR	718608	Callee	c_starter -> pid		718095	0					
ANR	718609	PtrMemberAccess	c_starter -> pid		718095	0					
ANR	718610	Identifier	c_starter		718095	0					
ANR	718611	Identifier	pid		718095	1					
ANR	718612	ArgumentList			718095	1					
ANR	718613	IfStatement	if ( s_pid > 0 )		718095	1					
ANR	718614	Condition	s_pid > 0	257:6:7060:7068	718095	0	True				
ANR	718615	RelationalExpression	s_pid > 0		718095	0		>			
ANR	718616	Identifier	s_pid		718095	0					
ANR	718617	PrimaryExpression	0		718095	1					
ANR	718618	CompoundStatement		99:18:2789:2789	718095	1					
ANR	718619	ExpressionStatement	"resmgr -> m_vmuniverse_mgr . publishVMInfo ( s_pid , cad , how_much )"	258:3:7077:7137	718095	0	True				
ANR	718620	CallExpression	"resmgr -> m_vmuniverse_mgr . publishVMInfo ( s_pid , cad , how_much )"		718095	0					
ANR	718621	Callee	resmgr -> m_vmuniverse_mgr . publishVMInfo		718095	0					
ANR	718622	MemberAccess	resmgr -> m_vmuniverse_mgr . publishVMInfo		718095	0					
ANR	718623	PtrMemberAccess	resmgr -> m_vmuniverse_mgr		718095	0					
ANR	718624	Identifier	resmgr		718095	0					
ANR	718625	Identifier	m_vmuniverse_mgr		718095	1					
ANR	718626	Identifier	publishVMInfo		718095	1					
ANR	718627	ArgumentList	s_pid		718095	1					
ANR	718628	Argument	s_pid		718095	0					
ANR	718629	Identifier	s_pid		718095	0					
ANR	718630	Argument	cad		718095	1					
ANR	718631	Identifier	cad		718095	0					
ANR	718632	Argument	how_much		718095	2					
ANR	718633	Identifier	how_much		718095	0					
ANR	718634	ExpressionStatement	publishStateTimes ( cad )	262:1:7148:7172	718095	12	True				
ANR	718635	CallExpression	publishStateTimes ( cad )		718095	0					
ANR	718636	Callee	publishStateTimes		718095	0					
ANR	718637	Identifier	publishStateTimes		718095	0					
ANR	718638	ArgumentList	cad		718095	1					
ANR	718639	Argument	cad		718095	0					
ANR	718640	Identifier	cad		718095	0					
ANR	718641	ReturnType	void		718095	1					
ANR	718642	Identifier	Claim :: publish		718095	2					
ANR	718643	ParameterList	"ClassAd * cad , amask_t how_much"		718095	3					
ANR	718644	Parameter	ClassAd * cad	158:16:4249:4260	718095	0	True				
ANR	718645	ParameterType	ClassAd *		718095	0					
ANR	718646	Identifier	cad		718095	1					
ANR	718647	Parameter	amask_t how_much	158:30:4263:4278	718095	1	True				
ANR	718648	ParameterType	amask_t		718095	0					
ANR	718649	Identifier	how_much		718095	1					
ANR	718650	CFGEntryNode	ENTRY		718095		True				
ANR	718651	CFGExitNode	EXIT		718095		True				
ANR	718652	Symbol	ATTR_JOB_START		718095						
ANR	718653	Symbol	c_starter		718095						
ANR	718654	Symbol	line		718095						
ANR	718655	Symbol	cad		718095						
ANR	718656	Symbol	ATTR_CONCURRENCY_LIMITS		718095						
ANR	718657	Symbol	numJobPids		718095						
ANR	718658	Symbol	strchr		718095						
ANR	718659	Symbol	imgsize		718095						
ANR	718660	Symbol	c_client -> user		718095						
ANR	718661	Symbol	isActive		718095						
ANR	718662	Symbol	c_client -> getConcurrencyLimits		718095						
ANR	718663	Symbol	uidDom		718095						
ANR	718664	Symbol	how_much		718095						
ANR	718665	Symbol	tmp		718095						
ANR	718666	Symbol	c_rank		718095						
ANR	718667	Symbol	ATTR_NUM_PIDS		718095						
ANR	718668	Symbol	* c_starter		718095						
ANR	718669	Symbol	c_client -> host		718095						
ANR	718670	Symbol	ATTR_LAST_PERIODIC_CHECKPOINT		718095						
ANR	718671	Symbol	imageSize		718095						
ANR	718672	Symbol	resmgr -> m_vmuniverse_mgr		718095						
ANR	718673	Symbol	ATTR_REMOTE_OWNER		718095						
ANR	718674	Symbol	c_universe		718095						
ANR	718675	Symbol	c_cluster		718095						
ANR	718676	Symbol	remoteUser		718095						
ANR	718677	Symbol	NULL		718095						
ANR	718678	Symbol	ATTR_CLIENT_MACHINE		718095						
ANR	718679	Symbol	line . Value		718095						
ANR	718680	Symbol	ATTR_JOB_ID		718095						
ANR	718681	Symbol	c_last_pckpt		718095						
ANR	718682	Symbol	c_client -> numPids		718095						
ANR	718683	Symbol	CONDOR_UNIVERSE_STANDARD		718095						
ANR	718684	Symbol	ATTR_REMOTE_USER		718095						
ANR	718685	Symbol	* resmgr		718095						
ANR	718686	Symbol	* c_client		718095						
ANR	718687	Symbol	c_client -> owner		718095						
ANR	718688	Symbol	c_proc		718095						
ANR	718689	Symbol	c_client		718095						
ANR	718690	Symbol	c_job_start		718095						
ANR	718691	Symbol	ATTR_GLOBAL_JOB_ID		718095						
ANR	718692	Symbol	ATTR_CURRENT_RANK		718095						
ANR	718693	Symbol	ATTR_ACCOUNTING_GROUP		718095						
ANR	718694	Symbol	resmgr		718095						
ANR	718695	Symbol	c_starter -> pid		718095						
ANR	718696	Symbol	c_global_job_id		718095						
ANR	718697	Symbol	c_client -> accountingGroup		718095						
ANR	718698	Symbol	s_pid		718095						
ANR	718699	Symbol	ATTR_IMAGE_SIZE		718095						
ANR	718700	DeclStmt									
ANR	718701	Decl							MyString	MyString	line
ANR	718702	DeclStmt									
ANR	718703	Decl							char	char *	tmp
ANR	718704	DeclStmt									
ANR	718705	Decl							char	char *	remoteUser
ANR	718706	DeclStmt									
ANR	718707	Decl							char	char *	uidDom
ANR	718708	Function	Claim :: publishCOD	318:0:8515:10293							
ANR	718709	FunctionDef	Claim :: publishCOD (ClassAd * cad)		718708	0					
ANR	718710	CompoundStatement		320:0:8554:10293	718708	0					
ANR	718711	IdentifierDeclStatement	MyString line ;	321:1:8557:8570	718708	0	True				
ANR	718712	IdentifierDecl	line		718708	0					
ANR	718713	IdentifierDeclType	MyString		718708	0					
ANR	718714	Identifier	line		718708	1					
ANR	718715	IdentifierDeclStatement	char * tmp ;	322:1:8573:8582	718708	1	True				
ANR	718716	IdentifierDecl	* tmp		718708	0					
ANR	718717	IdentifierDeclType	char *		718708	0					
ANR	718718	Identifier	tmp		718708	1					
ANR	718719	ExpressionStatement	line = codId ( )	324:1:8586:8600	718708	2	True				
ANR	718720	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718721	Identifier	line		718708	0					
ANR	718722	CallExpression	codId ( )		718708	1					
ANR	718723	Callee	codId		718708	0					
ANR	718724	Identifier	codId		718708	0					
ANR	718725	ArgumentList			718708	1					
ANR	718726	ExpressionStatement	line += '_'	325:1:8603:8614	718708	3	True				
ANR	718727	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718728	Identifier	line		718708	0					
ANR	718729	PrimaryExpression	'_'		718708	1					
ANR	718730	ExpressionStatement	line += ATTR_CLAIM_ID	326:1:8617:8638	718708	4	True				
ANR	718731	AssignmentExpression	line += ATTR_CLAIM_ID		718708	0		+=			
ANR	718732	Identifier	line		718708	0					
ANR	718733	Identifier	ATTR_CLAIM_ID		718708	1					
ANR	718734	ExpressionStatement	"line += ""=\\"""""	327:1:8641:8654	718708	5	True				
ANR	718735	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	718736	Identifier	line		718708	0					
ANR	718737	PrimaryExpression	"""=\\"""""		718708	1					
ANR	718738	ExpressionStatement	line += id ( )	328:1:8657:8669	718708	6	True				
ANR	718739	AssignmentExpression	line += id ( )		718708	0		+=			
ANR	718740	Identifier	line		718708	0					
ANR	718741	CallExpression	id ( )		718708	1					
ANR	718742	Callee	id		718708	0					
ANR	718743	Identifier	id		718708	0					
ANR	718744	ArgumentList			718708	1					
ANR	718745	ExpressionStatement	"line += '""'"	329:1:8672:8683	718708	7	True				
ANR	718746	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	718747	Identifier	line		718708	0					
ANR	718748	PrimaryExpression	"'""'"		718708	1					
ANR	718749	ExpressionStatement	cad -> Insert ( line . Value ( ) )	330:1:8686:8713	718708	8	True				
ANR	718750	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	718751	Callee	cad -> Insert		718708	0					
ANR	718752	PtrMemberAccess	cad -> Insert		718708	0					
ANR	718753	Identifier	cad		718708	0					
ANR	718754	Identifier	Insert		718708	1					
ANR	718755	ArgumentList	line . Value ( )		718708	1					
ANR	718756	Argument	line . Value ( )		718708	0					
ANR	718757	CallExpression	line . Value ( )		718708	0					
ANR	718758	Callee	line . Value		718708	0					
ANR	718759	MemberAccess	line . Value		718708	0					
ANR	718760	Identifier	line		718708	0					
ANR	718761	Identifier	Value		718708	1					
ANR	718762	ArgumentList			718708	1					
ANR	718763	ExpressionStatement	line = codId ( )	332:1:8717:8731	718708	9	True				
ANR	718764	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718765	Identifier	line		718708	0					
ANR	718766	CallExpression	codId ( )		718708	1					
ANR	718767	Callee	codId		718708	0					
ANR	718768	Identifier	codId		718708	0					
ANR	718769	ArgumentList			718708	1					
ANR	718770	ExpressionStatement	line += '_'	333:1:8734:8745	718708	10	True				
ANR	718771	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718772	Identifier	line		718708	0					
ANR	718773	PrimaryExpression	'_'		718708	1					
ANR	718774	ExpressionStatement	line += ATTR_CLAIM_STATE	334:1:8748:8772	718708	11	True				
ANR	718775	AssignmentExpression	line += ATTR_CLAIM_STATE		718708	0		+=			
ANR	718776	Identifier	line		718708	0					
ANR	718777	Identifier	ATTR_CLAIM_STATE		718708	1					
ANR	718778	ExpressionStatement	"line += ""=\\"""""	335:1:8775:8788	718708	12	True				
ANR	718779	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	718780	Identifier	line		718708	0					
ANR	718781	PrimaryExpression	"""=\\"""""		718708	1					
ANR	718782	ExpressionStatement	line += getClaimStateString ( c_state )	336:1:8791:8829	718708	13	True				
ANR	718783	AssignmentExpression	line += getClaimStateString ( c_state )		718708	0		+=			
ANR	718784	Identifier	line		718708	0					
ANR	718785	CallExpression	getClaimStateString ( c_state )		718708	1					
ANR	718786	Callee	getClaimStateString		718708	0					
ANR	718787	Identifier	getClaimStateString		718708	0					
ANR	718788	ArgumentList	c_state		718708	1					
ANR	718789	Argument	c_state		718708	0					
ANR	718790	Identifier	c_state		718708	0					
ANR	718791	ExpressionStatement	"line += '""'"	337:1:8832:8843	718708	14	True				
ANR	718792	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	718793	Identifier	line		718708	0					
ANR	718794	PrimaryExpression	"'""'"		718708	1					
ANR	718795	ExpressionStatement	cad -> Insert ( line . Value ( ) )	338:1:8846:8873	718708	15	True				
ANR	718796	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	718797	Callee	cad -> Insert		718708	0					
ANR	718798	PtrMemberAccess	cad -> Insert		718708	0					
ANR	718799	Identifier	cad		718708	0					
ANR	718800	Identifier	Insert		718708	1					
ANR	718801	ArgumentList	line . Value ( )		718708	1					
ANR	718802	Argument	line . Value ( )		718708	0					
ANR	718803	CallExpression	line . Value ( )		718708	0					
ANR	718804	Callee	line . Value		718708	0					
ANR	718805	MemberAccess	line . Value		718708	0					
ANR	718806	Identifier	line		718708	0					
ANR	718807	Identifier	Value		718708	1					
ANR	718808	ArgumentList			718708	1					
ANR	718809	ExpressionStatement	line = codId ( )	340:1:8877:8891	718708	16	True				
ANR	718810	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718811	Identifier	line		718708	0					
ANR	718812	CallExpression	codId ( )		718708	1					
ANR	718813	Callee	codId		718708	0					
ANR	718814	Identifier	codId		718708	0					
ANR	718815	ArgumentList			718708	1					
ANR	718816	ExpressionStatement	line += '_'	341:1:8894:8905	718708	17	True				
ANR	718817	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718818	Identifier	line		718708	0					
ANR	718819	PrimaryExpression	'_'		718708	1					
ANR	718820	ExpressionStatement	line += ATTR_ENTERED_CURRENT_STATE	342:1:8908:8942	718708	18	True				
ANR	718821	AssignmentExpression	line += ATTR_ENTERED_CURRENT_STATE		718708	0		+=			
ANR	718822	Identifier	line		718708	0					
ANR	718823	Identifier	ATTR_ENTERED_CURRENT_STATE		718708	1					
ANR	718824	ExpressionStatement	line += '='	343:1:8945:8956	718708	19	True				
ANR	718825	AssignmentExpression	line += '='		718708	0		+=			
ANR	718826	Identifier	line		718708	0					
ANR	718827	PrimaryExpression	'='		718708	1					
ANR	718828	ExpressionStatement	line += ( int ) c_entered_state	344:1:8959:8987	718708	20	True				
ANR	718829	AssignmentExpression	line += ( int ) c_entered_state		718708	0		+=			
ANR	718830	Identifier	line		718708	0					
ANR	718831	CastExpression	( int ) c_entered_state		718708	1					
ANR	718832	CastTarget	int		718708	0					
ANR	718833	Identifier	c_entered_state		718708	1					
ANR	718834	ExpressionStatement	cad -> Insert ( line . Value ( ) )	345:1:8990:9017	718708	21	True				
ANR	718835	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	718836	Callee	cad -> Insert		718708	0					
ANR	718837	PtrMemberAccess	cad -> Insert		718708	0					
ANR	718838	Identifier	cad		718708	0					
ANR	718839	Identifier	Insert		718708	1					
ANR	718840	ArgumentList	line . Value ( )		718708	1					
ANR	718841	Argument	line . Value ( )		718708	0					
ANR	718842	CallExpression	line . Value ( )		718708	0					
ANR	718843	Callee	line . Value		718708	0					
ANR	718844	MemberAccess	line . Value		718708	0					
ANR	718845	Identifier	line		718708	0					
ANR	718846	Identifier	Value		718708	1					
ANR	718847	ArgumentList			718708	1					
ANR	718848	IfStatement	if ( c_client )		718708	22					
ANR	718849	Condition	c_client	347:5:9025:9032	718708	0	True				
ANR	718850	Identifier	c_client		718708	0					
ANR	718851	CompoundStatement		28:16:481:481	718708	1					
ANR	718852	ExpressionStatement	tmp = c_client -> user ( )	348:2:9040:9062	718708	0	True				
ANR	718853	AssignmentExpression	tmp = c_client -> user ( )		718708	0		=			
ANR	718854	Identifier	tmp		718708	0					
ANR	718855	CallExpression	c_client -> user ( )		718708	1					
ANR	718856	Callee	c_client -> user		718708	0					
ANR	718857	PtrMemberAccess	c_client -> user		718708	0					
ANR	718858	Identifier	c_client		718708	0					
ANR	718859	Identifier	user		718708	1					
ANR	718860	ArgumentList			718708	1					
ANR	718861	IfStatement	if ( tmp )		718708	1					
ANR	718862	Condition	tmp	349:6:9070:9072	718708	0	True				
ANR	718863	Identifier	tmp		718708	0					
ANR	718864	CompoundStatement		30:12:521:521	718708	1					
ANR	718865	ExpressionStatement	line = codId ( )	350:3:9081:9095	718708	0	True				
ANR	718866	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718867	Identifier	line		718708	0					
ANR	718868	CallExpression	codId ( )		718708	1					
ANR	718869	Callee	codId		718708	0					
ANR	718870	Identifier	codId		718708	0					
ANR	718871	ArgumentList			718708	1					
ANR	718872	ExpressionStatement	line += '_'	351:3:9100:9111	718708	1	True				
ANR	718873	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718874	Identifier	line		718708	0					
ANR	718875	PrimaryExpression	'_'		718708	1					
ANR	718876	ExpressionStatement	line += ATTR_REMOTE_USER	352:3:9116:9140	718708	2	True				
ANR	718877	AssignmentExpression	line += ATTR_REMOTE_USER		718708	0		+=			
ANR	718878	Identifier	line		718708	0					
ANR	718879	Identifier	ATTR_REMOTE_USER		718708	1					
ANR	718880	ExpressionStatement	"line += ""=\\"""""	353:3:9145:9158	718708	3	True				
ANR	718881	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	718882	Identifier	line		718708	0					
ANR	718883	PrimaryExpression	"""=\\"""""		718708	1					
ANR	718884	ExpressionStatement	line += tmp	354:3:9163:9174	718708	4	True				
ANR	718885	AssignmentExpression	line += tmp		718708	0		+=			
ANR	718886	Identifier	line		718708	0					
ANR	718887	Identifier	tmp		718708	1					
ANR	718888	ExpressionStatement	"line += '""'"	355:3:9179:9190	718708	5	True				
ANR	718889	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	718890	Identifier	line		718708	0					
ANR	718891	PrimaryExpression	"'""'"		718708	1					
ANR	718892	ExpressionStatement	cad -> Insert ( line . Value ( ) )	356:3:9195:9222	718708	6	True				
ANR	718893	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	718894	Callee	cad -> Insert		718708	0					
ANR	718895	PtrMemberAccess	cad -> Insert		718708	0					
ANR	718896	Identifier	cad		718708	0					
ANR	718897	Identifier	Insert		718708	1					
ANR	718898	ArgumentList	line . Value ( )		718708	1					
ANR	718899	Argument	line . Value ( )		718708	0					
ANR	718900	CallExpression	line . Value ( )		718708	0					
ANR	718901	Callee	line . Value		718708	0					
ANR	718902	MemberAccess	line . Value		718708	0					
ANR	718903	Identifier	line		718708	0					
ANR	718904	Identifier	Value		718708	1					
ANR	718905	ArgumentList			718708	1					
ANR	718906	ExpressionStatement	tmp = c_client -> accountingGroup ( )	358:2:9230:9263	718708	2	True				
ANR	718907	AssignmentExpression	tmp = c_client -> accountingGroup ( )		718708	0		=			
ANR	718908	Identifier	tmp		718708	0					
ANR	718909	CallExpression	c_client -> accountingGroup ( )		718708	1					
ANR	718910	Callee	c_client -> accountingGroup		718708	0					
ANR	718911	PtrMemberAccess	c_client -> accountingGroup		718708	0					
ANR	718912	Identifier	c_client		718708	0					
ANR	718913	Identifier	accountingGroup		718708	1					
ANR	718914	ArgumentList			718708	1					
ANR	718915	IfStatement	if ( tmp )		718708	3					
ANR	718916	Condition	tmp	359:6:9271:9273	718708	0	True				
ANR	718917	Identifier	tmp		718708	0					
ANR	718918	CompoundStatement		40:12:722:722	718708	1					
ANR	718919	ExpressionStatement	line = codId ( )	360:3:9282:9296	718708	0	True				
ANR	718920	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718921	Identifier	line		718708	0					
ANR	718922	CallExpression	codId ( )		718708	1					
ANR	718923	Callee	codId		718708	0					
ANR	718924	Identifier	codId		718708	0					
ANR	718925	ArgumentList			718708	1					
ANR	718926	ExpressionStatement	line += '_'	361:3:9301:9312	718708	1	True				
ANR	718927	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718928	Identifier	line		718708	0					
ANR	718929	PrimaryExpression	'_'		718708	1					
ANR	718930	ExpressionStatement	line += ATTR_ACCOUNTING_GROUP	362:3:9317:9346	718708	2	True				
ANR	718931	AssignmentExpression	line += ATTR_ACCOUNTING_GROUP		718708	0		+=			
ANR	718932	Identifier	line		718708	0					
ANR	718933	Identifier	ATTR_ACCOUNTING_GROUP		718708	1					
ANR	718934	ExpressionStatement	"line += ""=\\"""""	363:3:9351:9364	718708	3	True				
ANR	718935	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	718936	Identifier	line		718708	0					
ANR	718937	PrimaryExpression	"""=\\"""""		718708	1					
ANR	718938	ExpressionStatement	line += tmp	364:3:9369:9380	718708	4	True				
ANR	718939	AssignmentExpression	line += tmp		718708	0		+=			
ANR	718940	Identifier	line		718708	0					
ANR	718941	Identifier	tmp		718708	1					
ANR	718942	ExpressionStatement	"line += '""'"	365:3:9385:9396	718708	5	True				
ANR	718943	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	718944	Identifier	line		718708	0					
ANR	718945	PrimaryExpression	"'""'"		718708	1					
ANR	718946	ExpressionStatement	cad -> Insert ( line . Value ( ) )	366:3:9401:9428	718708	6	True				
ANR	718947	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	718948	Callee	cad -> Insert		718708	0					
ANR	718949	PtrMemberAccess	cad -> Insert		718708	0					
ANR	718950	Identifier	cad		718708	0					
ANR	718951	Identifier	Insert		718708	1					
ANR	718952	ArgumentList	line . Value ( )		718708	1					
ANR	718953	Argument	line . Value ( )		718708	0					
ANR	718954	CallExpression	line . Value ( )		718708	0					
ANR	718955	Callee	line . Value		718708	0					
ANR	718956	MemberAccess	line . Value		718708	0					
ANR	718957	Identifier	line		718708	0					
ANR	718958	Identifier	Value		718708	1					
ANR	718959	ArgumentList			718708	1					
ANR	718960	ExpressionStatement	tmp = c_client -> host ( )	368:2:9436:9458	718708	4	True				
ANR	718961	AssignmentExpression	tmp = c_client -> host ( )		718708	0		=			
ANR	718962	Identifier	tmp		718708	0					
ANR	718963	CallExpression	c_client -> host ( )		718708	1					
ANR	718964	Callee	c_client -> host		718708	0					
ANR	718965	PtrMemberAccess	c_client -> host		718708	0					
ANR	718966	Identifier	c_client		718708	0					
ANR	718967	Identifier	host		718708	1					
ANR	718968	ArgumentList			718708	1					
ANR	718969	IfStatement	if ( tmp )		718708	5					
ANR	718970	Condition	tmp	369:6:9466:9468	718708	0	True				
ANR	718971	Identifier	tmp		718708	0					
ANR	718972	CompoundStatement		50:12:917:917	718708	1					
ANR	718973	ExpressionStatement	line = codId ( )	370:3:9477:9491	718708	0	True				
ANR	718974	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	718975	Identifier	line		718708	0					
ANR	718976	CallExpression	codId ( )		718708	1					
ANR	718977	Callee	codId		718708	0					
ANR	718978	Identifier	codId		718708	0					
ANR	718979	ArgumentList			718708	1					
ANR	718980	ExpressionStatement	line += '_'	371:3:9496:9507	718708	1	True				
ANR	718981	AssignmentExpression	line += '_'		718708	0		+=			
ANR	718982	Identifier	line		718708	0					
ANR	718983	PrimaryExpression	'_'		718708	1					
ANR	718984	ExpressionStatement	line += ATTR_CLIENT_MACHINE	372:3:9512:9539	718708	2	True				
ANR	718985	AssignmentExpression	line += ATTR_CLIENT_MACHINE		718708	0		+=			
ANR	718986	Identifier	line		718708	0					
ANR	718987	Identifier	ATTR_CLIENT_MACHINE		718708	1					
ANR	718988	ExpressionStatement	"line += ""=\\"""""	373:3:9544:9557	718708	3	True				
ANR	718989	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	718990	Identifier	line		718708	0					
ANR	718991	PrimaryExpression	"""=\\"""""		718708	1					
ANR	718992	ExpressionStatement	line += tmp	374:3:9562:9573	718708	4	True				
ANR	718993	AssignmentExpression	line += tmp		718708	0		+=			
ANR	718994	Identifier	line		718708	0					
ANR	718995	Identifier	tmp		718708	1					
ANR	718996	ExpressionStatement	"line += '""'"	375:3:9578:9589	718708	5	True				
ANR	718997	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	718998	Identifier	line		718708	0					
ANR	718999	PrimaryExpression	"'""'"		718708	1					
ANR	719000	ExpressionStatement	cad -> Insert ( line . Value ( ) )	376:3:9594:9621	718708	6	True				
ANR	719001	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	719002	Callee	cad -> Insert		718708	0					
ANR	719003	PtrMemberAccess	cad -> Insert		718708	0					
ANR	719004	Identifier	cad		718708	0					
ANR	719005	Identifier	Insert		718708	1					
ANR	719006	ArgumentList	line . Value ( )		718708	1					
ANR	719007	Argument	line . Value ( )		718708	0					
ANR	719008	CallExpression	line . Value ( )		718708	0					
ANR	719009	Callee	line . Value		718708	0					
ANR	719010	MemberAccess	line . Value		718708	0					
ANR	719011	Identifier	line		718708	0					
ANR	719012	Identifier	Value		718708	1					
ANR	719013	ArgumentList			718708	1					
ANR	719014	IfStatement	if ( c_starter )		718708	23					
ANR	719015	Condition	c_starter	380:5:9636:9644	718708	0	True				
ANR	719016	Identifier	c_starter		718708	0					
ANR	719017	CompoundStatement		71:2:1281:1294	718708	1					
ANR	719018	IfStatement	if ( c_cod_keyword )		718708	0					
ANR	719019	Condition	c_cod_keyword	381:6:9656:9668	718708	0	True				
ANR	719020	Identifier	c_cod_keyword		718708	0					
ANR	719021	CompoundStatement		62:22:1117:1117	718708	1					
ANR	719022	ExpressionStatement	line = codId ( )	382:3:9677:9691	718708	0	True				
ANR	719023	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	719024	Identifier	line		718708	0					
ANR	719025	CallExpression	codId ( )		718708	1					
ANR	719026	Callee	codId		718708	0					
ANR	719027	Identifier	codId		718708	0					
ANR	719028	ArgumentList			718708	1					
ANR	719029	ExpressionStatement	line += '_'	383:3:9696:9707	718708	1	True				
ANR	719030	AssignmentExpression	line += '_'		718708	0		+=			
ANR	719031	Identifier	line		718708	0					
ANR	719032	PrimaryExpression	'_'		718708	1					
ANR	719033	ExpressionStatement	line += ATTR_JOB_KEYWORD	384:3:9712:9736	718708	2	True				
ANR	719034	AssignmentExpression	line += ATTR_JOB_KEYWORD		718708	0		+=			
ANR	719035	Identifier	line		718708	0					
ANR	719036	Identifier	ATTR_JOB_KEYWORD		718708	1					
ANR	719037	ExpressionStatement	"line += ""=\\"""""	385:3:9741:9754	718708	3	True				
ANR	719038	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	719039	Identifier	line		718708	0					
ANR	719040	PrimaryExpression	"""=\\"""""		718708	1					
ANR	719041	ExpressionStatement	line += c_cod_keyword	386:3:9759:9780	718708	4	True				
ANR	719042	AssignmentExpression	line += c_cod_keyword		718708	0		+=			
ANR	719043	Identifier	line		718708	0					
ANR	719044	Identifier	c_cod_keyword		718708	1					
ANR	719045	ExpressionStatement	"line += '""'"	387:3:9785:9796	718708	5	True				
ANR	719046	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	719047	Identifier	line		718708	0					
ANR	719048	PrimaryExpression	"'""'"		718708	1					
ANR	719049	ExpressionStatement	cad -> Insert ( line . Value ( ) )	388:3:9801:9828	718708	6	True				
ANR	719050	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	719051	Callee	cad -> Insert		718708	0					
ANR	719052	PtrMemberAccess	cad -> Insert		718708	0					
ANR	719053	Identifier	cad		718708	0					
ANR	719054	Identifier	Insert		718708	1					
ANR	719055	ArgumentList	line . Value ( )		718708	1					
ANR	719056	Argument	line . Value ( )		718708	0					
ANR	719057	CallExpression	line . Value ( )		718708	0					
ANR	719058	Callee	line . Value		718708	0					
ANR	719059	MemberAccess	line . Value		718708	0					
ANR	719060	Identifier	line		718708	0					
ANR	719061	Identifier	Value		718708	1					
ANR	719062	ArgumentList			718708	1					
ANR	719063	IdentifierDeclStatement	char buf [ 128 ] ;	390:2:9836:9849	718708	1	True				
ANR	719064	IdentifierDecl	buf [ 128 ]		718708	0					
ANR	719065	IdentifierDeclType	char [ 128 ]		718708	0					
ANR	719066	Identifier	buf		718708	1					
ANR	719067	PrimaryExpression	128		718708	2					
ANR	719068	IfStatement	if ( ( c_cluster > 0 ) && ( c_proc >= 0 ) )		718708	2					
ANR	719069	Condition	( c_cluster > 0 ) && ( c_proc >= 0 )	391:6:9857:9888	718708	0	True				
ANR	719070	AndExpression	( c_cluster > 0 ) && ( c_proc >= 0 )		718708	0		&&			
ANR	719071	RelationalExpression	c_cluster > 0		718708	0		>			
ANR	719072	Identifier	c_cluster		718708	0					
ANR	719073	PrimaryExpression	0		718708	1					
ANR	719074	RelationalExpression	c_proc >= 0		718708	1		>=			
ANR	719075	Identifier	c_proc		718708	0					
ANR	719076	PrimaryExpression	0		718708	1					
ANR	719077	CompoundStatement		72:41:1337:1337	718708	1					
ANR	719078	ExpressionStatement	"snprintf ( buf , 128 , ""%d.%d"" , c_cluster , c_proc )"	392:3:9897:9945	718708	0	True				
ANR	719079	CallExpression	"snprintf ( buf , 128 , ""%d.%d"" , c_cluster , c_proc )"		718708	0					
ANR	719080	Callee	snprintf		718708	0					
ANR	719081	Identifier	snprintf		718708	0					
ANR	719082	ArgumentList	buf		718708	1					
ANR	719083	Argument	buf		718708	0					
ANR	719084	Identifier	buf		718708	0					
ANR	719085	Argument	128		718708	1					
ANR	719086	PrimaryExpression	128		718708	0					
ANR	719087	Argument	"""%d.%d"""		718708	2					
ANR	719088	PrimaryExpression	"""%d.%d"""		718708	0					
ANR	719089	Argument	c_cluster		718708	3					
ANR	719090	Identifier	c_cluster		718708	0					
ANR	719091	Argument	c_proc		718708	4					
ANR	719092	Identifier	c_proc		718708	0					
ANR	719093	ElseStatement	else		718708	0					
ANR	719094	CompoundStatement		74:9:1401:1401	718708	0					
ANR	719095	ExpressionStatement	"strcpy ( buf , ""1.0"" )"	394:3:9961:9981	718708	0	True				
ANR	719096	CallExpression	"strcpy ( buf , ""1.0"" )"		718708	0					
ANR	719097	Callee	strcpy		718708	0					
ANR	719098	Identifier	strcpy		718708	0					
ANR	719099	ArgumentList	buf		718708	1					
ANR	719100	Argument	buf		718708	0					
ANR	719101	Identifier	buf		718708	0					
ANR	719102	Argument	"""1.0"""		718708	1					
ANR	719103	PrimaryExpression	"""1.0"""		718708	0					
ANR	719104	ExpressionStatement	line = codId ( )	396:2:9989:10003	718708	3	True				
ANR	719105	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	719106	Identifier	line		718708	0					
ANR	719107	CallExpression	codId ( )		718708	1					
ANR	719108	Callee	codId		718708	0					
ANR	719109	Identifier	codId		718708	0					
ANR	719110	ArgumentList			718708	1					
ANR	719111	ExpressionStatement	line += '_'	397:2:10007:10018	718708	4	True				
ANR	719112	AssignmentExpression	line += '_'		718708	0		+=			
ANR	719113	Identifier	line		718708	0					
ANR	719114	PrimaryExpression	'_'		718708	1					
ANR	719115	ExpressionStatement	line += ATTR_JOB_ID	398:2:10022:10041	718708	5	True				
ANR	719116	AssignmentExpression	line += ATTR_JOB_ID		718708	0		+=			
ANR	719117	Identifier	line		718708	0					
ANR	719118	Identifier	ATTR_JOB_ID		718708	1					
ANR	719119	ExpressionStatement	"line += ""=\\"""""	399:2:10045:10058	718708	6	True				
ANR	719120	AssignmentExpression	"line += ""=\\"""""		718708	0		+=			
ANR	719121	Identifier	line		718708	0					
ANR	719122	PrimaryExpression	"""=\\"""""		718708	1					
ANR	719123	ExpressionStatement	line += buf	400:2:10062:10073	718708	7	True				
ANR	719124	AssignmentExpression	line += buf		718708	0		+=			
ANR	719125	Identifier	line		718708	0					
ANR	719126	Identifier	buf		718708	1					
ANR	719127	ExpressionStatement	"line += '""'"	401:2:10077:10088	718708	8	True				
ANR	719128	AssignmentExpression	"line += '""'"		718708	0		+=			
ANR	719129	Identifier	line		718708	0					
ANR	719130	PrimaryExpression	"'""'"		718708	1					
ANR	719131	ExpressionStatement	cad -> Insert ( line . Value ( ) )	402:2:10092:10119	718708	9	True				
ANR	719132	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	719133	Callee	cad -> Insert		718708	0					
ANR	719134	PtrMemberAccess	cad -> Insert		718708	0					
ANR	719135	Identifier	cad		718708	0					
ANR	719136	Identifier	Insert		718708	1					
ANR	719137	ArgumentList	line . Value ( )		718708	1					
ANR	719138	Argument	line . Value ( )		718708	0					
ANR	719139	CallExpression	line . Value ( )		718708	0					
ANR	719140	Callee	line . Value		718708	0					
ANR	719141	MemberAccess	line . Value		718708	0					
ANR	719142	Identifier	line		718708	0					
ANR	719143	Identifier	Value		718708	1					
ANR	719144	ArgumentList			718708	1					
ANR	719145	IfStatement	if ( c_job_start > 0 )		718708	10					
ANR	719146	Condition	c_job_start > 0	404:6:10130:10144	718708	0	True				
ANR	719147	RelationalExpression	c_job_start > 0		718708	0		>			
ANR	719148	Identifier	c_job_start		718708	0					
ANR	719149	PrimaryExpression	0		718708	1					
ANR	719150	CompoundStatement		85:24:1593:1593	718708	1					
ANR	719151	ExpressionStatement	line = codId ( )	405:3:10153:10167	718708	0	True				
ANR	719152	AssignmentExpression	line = codId ( )		718708	0		=			
ANR	719153	Identifier	line		718708	0					
ANR	719154	CallExpression	codId ( )		718708	1					
ANR	719155	Callee	codId		718708	0					
ANR	719156	Identifier	codId		718708	0					
ANR	719157	ArgumentList			718708	1					
ANR	719158	ExpressionStatement	line += '_'	406:3:10172:10183	718708	1	True				
ANR	719159	AssignmentExpression	line += '_'		718708	0		+=			
ANR	719160	Identifier	line		718708	0					
ANR	719161	PrimaryExpression	'_'		718708	1					
ANR	719162	ExpressionStatement	line += ATTR_JOB_START	407:3:10188:10210	718708	2	True				
ANR	719163	AssignmentExpression	line += ATTR_JOB_START		718708	0		+=			
ANR	719164	Identifier	line		718708	0					
ANR	719165	Identifier	ATTR_JOB_START		718708	1					
ANR	719166	ExpressionStatement	line += '='	408:3:10215:10226	718708	3	True				
ANR	719167	AssignmentExpression	line += '='		718708	0		+=			
ANR	719168	Identifier	line		718708	0					
ANR	719169	PrimaryExpression	'='		718708	1					
ANR	719170	ExpressionStatement	line += c_job_start	409:3:10231:10250	718708	4	True				
ANR	719171	AssignmentExpression	line += c_job_start		718708	0		+=			
ANR	719172	Identifier	line		718708	0					
ANR	719173	Identifier	c_job_start		718708	1					
ANR	719174	ExpressionStatement	cad -> Insert ( line . Value ( ) )	410:3:10256:10283	718708	5	True				
ANR	719175	CallExpression	cad -> Insert ( line . Value ( ) )		718708	0					
ANR	719176	Callee	cad -> Insert		718708	0					
ANR	719177	PtrMemberAccess	cad -> Insert		718708	0					
ANR	719178	Identifier	cad		718708	0					
ANR	719179	Identifier	Insert		718708	1					
ANR	719180	ArgumentList	line . Value ( )		718708	1					
ANR	719181	Argument	line . Value ( )		718708	0					
ANR	719182	CallExpression	line . Value ( )		718708	0					
ANR	719183	Callee	line . Value		718708	0					
ANR	719184	MemberAccess	line . Value		718708	0					
ANR	719185	Identifier	line		718708	0					
ANR	719186	Identifier	Value		718708	1					
ANR	719187	ArgumentList			718708	1					
ANR	719188	ReturnType	void		718708	1					
ANR	719189	Identifier	Claim :: publishCOD		718708	2					
ANR	719190	ParameterList	ClassAd * cad		718708	3					
ANR	719191	Parameter	ClassAd * cad	319:19:8539:8550	718708	0	True				
ANR	719192	ParameterType	ClassAd *		718708	0					
ANR	719193	Identifier	cad		718708	1					
ANR	719194	CFGEntryNode	ENTRY		718708		True				
ANR	719195	CFGExitNode	EXIT		718708		True				
ANR	719196	Symbol	c_entered_state		718708						
ANR	719197	Symbol	c_starter		718708						
ANR	719198	Symbol	ATTR_JOB_START		718708						
ANR	719199	Symbol	c_state		718708						
ANR	719200	Symbol	line		718708						
ANR	719201	Symbol	ATTR_CLAIM_STATE		718708						
ANR	719202	Symbol	cad		718708						
ANR	719203	Symbol	ATTR_ENTERED_CURRENT_STATE		718708						
ANR	719204	Symbol	c_client -> user		718708						
ANR	719205	Symbol	ATTR_CLAIM_ID		718708						
ANR	719206	Symbol	codId		718708						
ANR	719207	Symbol	tmp		718708						
ANR	719208	Symbol	c_client -> host		718708						
ANR	719209	Symbol	id		718708						
ANR	719210	Symbol	c_cluster		718708						
ANR	719211	Symbol	ATTR_CLIENT_MACHINE		718708						
ANR	719212	Symbol	line . Value		718708						
ANR	719213	Symbol	ATTR_JOB_ID		718708						
ANR	719214	Symbol	c_cod_keyword		718708						
ANR	719215	Symbol	ATTR_REMOTE_USER		718708						
ANR	719216	Symbol	* c_client		718708						
ANR	719217	Symbol	c_proc		718708						
ANR	719218	Symbol	c_client		718708						
ANR	719219	Symbol	c_job_start		718708						
ANR	719220	Symbol	buf		718708						
ANR	719221	Symbol	getClaimStateString		718708						
ANR	719222	Symbol	ATTR_JOB_KEYWORD		718708						
ANR	719223	Symbol	ATTR_ACCOUNTING_GROUP		718708						
ANR	719224	Symbol	c_client -> accountingGroup		718708						
ANR	719225	Function	Claim :: getJobTotalRunTime	415:0:10296:10506							
ANR	719226	FunctionDef	Claim :: getJobTotalRunTime ()		719225	0					
ANR	719227	CompoundStatement		417:0:10331:10506	719225	0					
ANR	719228	IdentifierDeclStatement	time_t my_job_run = c_job_total_run_time ;	418:1:10334:10374	719225	0	True				
ANR	719229	IdentifierDecl	my_job_run = c_job_total_run_time		719225	0					
ANR	719230	IdentifierDeclType	time_t		719225	0					
ANR	719231	Identifier	my_job_run		719225	1					
ANR	719232	AssignmentExpression	my_job_run = c_job_total_run_time		719225	2		=			
ANR	719233	Identifier	c_job_total_run_time		719225	0					
ANR	719234	Identifier	c_job_total_run_time		719225	1					
ANR	719235	IdentifierDeclStatement	time_t now ;	419:1:10377:10387	719225	1	True				
ANR	719236	IdentifierDecl	now		719225	0					
ANR	719237	IdentifierDeclType	time_t		719225	0					
ANR	719238	Identifier	now		719225	1					
ANR	719239	IfStatement	if ( c_state == CLAIM_RUNNING )		719225	2					
ANR	719240	Condition	c_state == CLAIM_RUNNING	420:5:10394:10417	719225	0	True				
ANR	719241	EqualityExpression	c_state == CLAIM_RUNNING		719225	0		==			
ANR	719242	Identifier	c_state		719225	0					
ANR	719243	Identifier	CLAIM_RUNNING		719225	1					
ANR	719244	CompoundStatement		4:32:89:89	719225	1					
ANR	719245	ExpressionStatement	now = time ( NULL )	421:2:10426:10442	719225	0	True				
ANR	719246	AssignmentExpression	now = time ( NULL )		719225	0		=			
ANR	719247	Identifier	now		719225	0					
ANR	719248	CallExpression	time ( NULL )		719225	1					
ANR	719249	Callee	time		719225	0					
ANR	719250	Identifier	time		719225	0					
ANR	719251	ArgumentList	NULL		719225	1					
ANR	719252	Argument	NULL		719225	0					
ANR	719253	Identifier	NULL		719225	0					
ANR	719254	ExpressionStatement	my_job_run += now - c_entered_state	422:2:10446:10481	719225	1	True				
ANR	719255	AssignmentExpression	my_job_run += now - c_entered_state		719225	0		+=			
ANR	719256	Identifier	my_job_run		719225	0					
ANR	719257	AdditiveExpression	now - c_entered_state		719225	1		-			
ANR	719258	Identifier	now		719225	0					
ANR	719259	Identifier	c_entered_state		719225	1					
ANR	719260	ReturnStatement	return my_job_run ;	424:1:10487:10504	719225	3	True				
ANR	719261	Identifier	my_job_run		719225	0					
ANR	719262	ReturnType	time_t		719225	1					
ANR	719263	Identifier	Claim :: getJobTotalRunTime		719225	2					
ANR	719264	ParameterList			719225	3					
ANR	719265	CFGEntryNode	ENTRY		719225		True				
ANR	719266	CFGExitNode	EXIT		719225		True				
ANR	719267	Symbol	c_entered_state		719225						
ANR	719268	Symbol	NULL		719225						
ANR	719269	Symbol	c_job_total_run_time		719225						
ANR	719270	Symbol	c_state		719225						
ANR	719271	Symbol	CLAIM_RUNNING		719225						
ANR	719272	Symbol	now		719225						
ANR	719273	Symbol	my_job_run		719225						
ANR	719274	Symbol	time		719225						
ANR	719275	Function	Claim :: publishStateTimes	427:0:10509:11870							
ANR	719276	FunctionDef	Claim :: publishStateTimes (ClassAd * cad)		719275	0					
ANR	719277	CompoundStatement		429:0:10555:11870	719275	0					
ANR	719278	IdentifierDeclStatement	MyString line ;	430:1:10558:10571	719275	0	True				
ANR	719279	IdentifierDecl	line		719275	0					
ANR	719280	IdentifierDeclType	MyString		719275	0					
ANR	719281	Identifier	line		719275	1					
ANR	719282	IdentifierDeclStatement	"time_t now , time_dif = 0 ;"	431:1:10574:10598	719275	1	True				
ANR	719283	IdentifierDecl	now		719275	0					
ANR	719284	IdentifierDeclType	time_t		719275	0					
ANR	719285	Identifier	now		719275	1					
ANR	719286	IdentifierDecl	time_dif = 0		719275	1					
ANR	719287	IdentifierDeclType	time_t		719275	0					
ANR	719288	Identifier	time_dif		719275	1					
ANR	719289	AssignmentExpression	time_dif = 0		719275	2		=			
ANR	719290	Identifier	time_dif		719275	0					
ANR	719291	PrimaryExpression	0		719275	1					
ANR	719292	IdentifierDeclStatement	time_t my_job_run = c_job_total_run_time ;	432:1:10601:10641	719275	2	True				
ANR	719293	IdentifierDecl	my_job_run = c_job_total_run_time		719275	0					
ANR	719294	IdentifierDeclType	time_t		719275	0					
ANR	719295	Identifier	my_job_run		719275	1					
ANR	719296	AssignmentExpression	my_job_run = c_job_total_run_time		719275	2		=			
ANR	719297	Identifier	c_job_total_run_time		719275	0					
ANR	719298	Identifier	c_job_total_run_time		719275	1					
ANR	719299	IdentifierDeclStatement	time_t my_job_sus = c_job_total_suspend_time ;	433:1:10644:10688	719275	3	True				
ANR	719300	IdentifierDecl	my_job_sus = c_job_total_suspend_time		719275	0					
ANR	719301	IdentifierDeclType	time_t		719275	0					
ANR	719302	Identifier	my_job_sus		719275	1					
ANR	719303	AssignmentExpression	my_job_sus = c_job_total_suspend_time		719275	2		=			
ANR	719304	Identifier	c_job_total_suspend_time		719275	0					
ANR	719305	Identifier	c_job_total_suspend_time		719275	1					
ANR	719306	IdentifierDeclStatement	time_t my_claim_run = c_claim_total_run_time ;	434:1:10691:10735	719275	4	True				
ANR	719307	IdentifierDecl	my_claim_run = c_claim_total_run_time		719275	0					
ANR	719308	IdentifierDeclType	time_t		719275	0					
ANR	719309	Identifier	my_claim_run		719275	1					
ANR	719310	AssignmentExpression	my_claim_run = c_claim_total_run_time		719275	2		=			
ANR	719311	Identifier	c_claim_total_run_time		719275	0					
ANR	719312	Identifier	c_claim_total_run_time		719275	1					
ANR	719313	IdentifierDeclStatement	time_t my_claim_sus = c_claim_total_suspend_time ;	435:1:10738:10786	719275	5	True				
ANR	719314	IdentifierDecl	my_claim_sus = c_claim_total_suspend_time		719275	0					
ANR	719315	IdentifierDeclType	time_t		719275	0					
ANR	719316	Identifier	my_claim_sus		719275	1					
ANR	719317	AssignmentExpression	my_claim_sus = c_claim_total_suspend_time		719275	2		=			
ANR	719318	Identifier	c_claim_total_suspend_time		719275	0					
ANR	719319	Identifier	c_claim_total_suspend_time		719275	1					
ANR	719320	IfStatement	if ( c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED )		719275	6					
ANR	719321	Condition	c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED	440:5:10970:11023	719275	0	True				
ANR	719322	OrExpression	c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED		719275	0		||			
ANR	719323	EqualityExpression	c_state == CLAIM_RUNNING		719275	0		==			
ANR	719324	Identifier	c_state		719275	0					
ANR	719325	Identifier	CLAIM_RUNNING		719275	1					
ANR	719326	EqualityExpression	c_state == CLAIM_SUSPENDED		719275	1		==			
ANR	719327	Identifier	c_state		719275	0					
ANR	719328	Identifier	CLAIM_SUSPENDED		719275	1					
ANR	719329	CompoundStatement		12:62:471:471	719275	1					
ANR	719330	ExpressionStatement	now = time ( NULL )	441:2:11031:11049	719275	0	True				
ANR	719331	AssignmentExpression	now = time ( NULL )		719275	0		=			
ANR	719332	Identifier	now		719275	0					
ANR	719333	CallExpression	time ( NULL )		719275	1					
ANR	719334	Callee	time		719275	0					
ANR	719335	Identifier	time		719275	0					
ANR	719336	ArgumentList	NULL		719275	1					
ANR	719337	Argument	NULL		719275	0					
ANR	719338	Identifier	NULL		719275	0					
ANR	719339	ExpressionStatement	time_dif = now - c_entered_state	442:2:11053:11085	719275	1	True				
ANR	719340	AssignmentExpression	time_dif = now - c_entered_state		719275	0		=			
ANR	719341	Identifier	time_dif		719275	0					
ANR	719342	AdditiveExpression	now - c_entered_state		719275	1		-			
ANR	719343	Identifier	now		719275	0					
ANR	719344	Identifier	c_entered_state		719275	1					
ANR	719345	IfStatement	if ( c_state == CLAIM_RUNNING )		719275	7					
ANR	719346	Condition	c_state == CLAIM_RUNNING	444:5:11095:11118	719275	0	True				
ANR	719347	EqualityExpression	c_state == CLAIM_RUNNING		719275	0		==			
ANR	719348	Identifier	c_state		719275	0					
ANR	719349	Identifier	CLAIM_RUNNING		719275	1					
ANR	719350	CompoundStatement		16:32:566:566	719275	1					
ANR	719351	ExpressionStatement	my_job_run += time_dif	445:2:11127:11149	719275	0	True				
ANR	719352	AssignmentExpression	my_job_run += time_dif		719275	0		+=			
ANR	719353	Identifier	my_job_run		719275	0					
ANR	719354	Identifier	time_dif		719275	1					
ANR	719355	ExpressionStatement	my_claim_run += time_dif	446:2:11153:11177	719275	1	True				
ANR	719356	AssignmentExpression	my_claim_run += time_dif		719275	0		+=			
ANR	719357	Identifier	my_claim_run		719275	0					
ANR	719358	Identifier	time_dif		719275	1					
ANR	719359	IfStatement	if ( c_state == CLAIM_SUSPENDED )		719275	8					
ANR	719360	Condition	c_state == CLAIM_SUSPENDED	448:5:11187:11212	719275	0	True				
ANR	719361	EqualityExpression	c_state == CLAIM_SUSPENDED		719275	0		==			
ANR	719362	Identifier	c_state		719275	0					
ANR	719363	Identifier	CLAIM_SUSPENDED		719275	1					
ANR	719364	CompoundStatement		20:34:660:660	719275	1					
ANR	719365	ExpressionStatement	my_job_sus += time_dif	449:2:11220:11242	719275	0	True				
ANR	719366	AssignmentExpression	my_job_sus += time_dif		719275	0		+=			
ANR	719367	Identifier	my_job_sus		719275	0					
ANR	719368	Identifier	time_dif		719275	1					
ANR	719369	ExpressionStatement	my_claim_sus += time_dif	450:2:11246:11270	719275	1	True				
ANR	719370	AssignmentExpression	my_claim_sus += time_dif		719275	0		+=			
ANR	719371	Identifier	my_claim_sus		719275	0					
ANR	719372	Identifier	time_dif		719275	1					
ANR	719373	IfStatement	if ( my_job_run > 0 )		719275	9					
ANR	719374	Condition	my_job_run > 0	454:5:11339:11352	719275	0	True				
ANR	719375	RelationalExpression	my_job_run > 0		719275	0		>			
ANR	719376	Identifier	my_job_run		719275	0					
ANR	719377	PrimaryExpression	0		719275	1					
ANR	719378	CompoundStatement		26:22:800:800	719275	1					
ANR	719379	ExpressionStatement	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_JOB_RUN_TIME , ( long ) my_job_run )"	455:2:11360:11427	719275	0	True				
ANR	719380	CallExpression	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_JOB_RUN_TIME , ( long ) my_job_run )"		719275	0					
ANR	719381	Callee	line . sprintf		719275	0					
ANR	719382	MemberAccess	line . sprintf		719275	0					
ANR	719383	Identifier	line		719275	0					
ANR	719384	Identifier	sprintf		719275	1					
ANR	719385	ArgumentList	"""%s=%ld"""		719275	1					
ANR	719386	Argument	"""%s=%ld"""		719275	0					
ANR	719387	PrimaryExpression	"""%s=%ld"""		719275	0					
ANR	719388	Argument	ATTR_TOTAL_JOB_RUN_TIME		719275	1					
ANR	719389	Identifier	ATTR_TOTAL_JOB_RUN_TIME		719275	0					
ANR	719390	Argument	( long ) my_job_run		719275	2					
ANR	719391	CastExpression	( long ) my_job_run		719275	0					
ANR	719392	CastTarget	long		719275	0					
ANR	719393	Identifier	my_job_run		719275	1					
ANR	719394	ExpressionStatement	cad -> Insert ( line . Value ( ) )	456:2:11431:11458	719275	1	True				
ANR	719395	CallExpression	cad -> Insert ( line . Value ( ) )		719275	0					
ANR	719396	Callee	cad -> Insert		719275	0					
ANR	719397	PtrMemberAccess	cad -> Insert		719275	0					
ANR	719398	Identifier	cad		719275	0					
ANR	719399	Identifier	Insert		719275	1					
ANR	719400	ArgumentList	line . Value ( )		719275	1					
ANR	719401	Argument	line . Value ( )		719275	0					
ANR	719402	CallExpression	line . Value ( )		719275	0					
ANR	719403	Callee	line . Value		719275	0					
ANR	719404	MemberAccess	line . Value		719275	0					
ANR	719405	Identifier	line		719275	0					
ANR	719406	Identifier	Value		719275	1					
ANR	719407	ArgumentList			719275	1					
ANR	719408	IfStatement	if ( my_job_sus > 0 )		719275	10					
ANR	719409	Condition	my_job_sus > 0	458:5:11468:11481	719275	0	True				
ANR	719410	RelationalExpression	my_job_sus > 0		719275	0		>			
ANR	719411	Identifier	my_job_sus		719275	0					
ANR	719412	PrimaryExpression	0		719275	1					
ANR	719413	CompoundStatement		30:22:929:929	719275	1					
ANR	719414	ExpressionStatement	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_JOB_SUSPEND_TIME , ( long ) my_job_sus )"	459:2:11489:11560	719275	0	True				
ANR	719415	CallExpression	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_JOB_SUSPEND_TIME , ( long ) my_job_sus )"		719275	0					
ANR	719416	Callee	line . sprintf		719275	0					
ANR	719417	MemberAccess	line . sprintf		719275	0					
ANR	719418	Identifier	line		719275	0					
ANR	719419	Identifier	sprintf		719275	1					
ANR	719420	ArgumentList	"""%s=%ld"""		719275	1					
ANR	719421	Argument	"""%s=%ld"""		719275	0					
ANR	719422	PrimaryExpression	"""%s=%ld"""		719275	0					
ANR	719423	Argument	ATTR_TOTAL_JOB_SUSPEND_TIME		719275	1					
ANR	719424	Identifier	ATTR_TOTAL_JOB_SUSPEND_TIME		719275	0					
ANR	719425	Argument	( long ) my_job_sus		719275	2					
ANR	719426	CastExpression	( long ) my_job_sus		719275	0					
ANR	719427	CastTarget	long		719275	0					
ANR	719428	Identifier	my_job_sus		719275	1					
ANR	719429	ExpressionStatement	cad -> Insert ( line . Value ( ) )	460:2:11564:11591	719275	1	True				
ANR	719430	CallExpression	cad -> Insert ( line . Value ( ) )		719275	0					
ANR	719431	Callee	cad -> Insert		719275	0					
ANR	719432	PtrMemberAccess	cad -> Insert		719275	0					
ANR	719433	Identifier	cad		719275	0					
ANR	719434	Identifier	Insert		719275	1					
ANR	719435	ArgumentList	line . Value ( )		719275	1					
ANR	719436	Argument	line . Value ( )		719275	0					
ANR	719437	CallExpression	line . Value ( )		719275	0					
ANR	719438	Callee	line . Value		719275	0					
ANR	719439	MemberAccess	line . Value		719275	0					
ANR	719440	Identifier	line		719275	0					
ANR	719441	Identifier	Value		719275	1					
ANR	719442	ArgumentList			719275	1					
ANR	719443	IfStatement	if ( my_claim_run > 0 )		719275	11					
ANR	719444	Condition	my_claim_run > 0	462:5:11601:11616	719275	0	True				
ANR	719445	RelationalExpression	my_claim_run > 0		719275	0		>			
ANR	719446	Identifier	my_claim_run		719275	0					
ANR	719447	PrimaryExpression	0		719275	1					
ANR	719448	CompoundStatement		34:24:1064:1064	719275	1					
ANR	719449	ExpressionStatement	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_CLAIM_RUN_TIME , ( long ) my_claim_run )"	463:2:11624:11695	719275	0	True				
ANR	719450	CallExpression	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_CLAIM_RUN_TIME , ( long ) my_claim_run )"		719275	0					
ANR	719451	Callee	line . sprintf		719275	0					
ANR	719452	MemberAccess	line . sprintf		719275	0					
ANR	719453	Identifier	line		719275	0					
ANR	719454	Identifier	sprintf		719275	1					
ANR	719455	ArgumentList	"""%s=%ld"""		719275	1					
ANR	719456	Argument	"""%s=%ld"""		719275	0					
ANR	719457	PrimaryExpression	"""%s=%ld"""		719275	0					
ANR	719458	Argument	ATTR_TOTAL_CLAIM_RUN_TIME		719275	1					
ANR	719459	Identifier	ATTR_TOTAL_CLAIM_RUN_TIME		719275	0					
ANR	719460	Argument	( long ) my_claim_run		719275	2					
ANR	719461	CastExpression	( long ) my_claim_run		719275	0					
ANR	719462	CastTarget	long		719275	0					
ANR	719463	Identifier	my_claim_run		719275	1					
ANR	719464	ExpressionStatement	cad -> Insert ( line . Value ( ) )	464:2:11699:11726	719275	1	True				
ANR	719465	CallExpression	cad -> Insert ( line . Value ( ) )		719275	0					
ANR	719466	Callee	cad -> Insert		719275	0					
ANR	719467	PtrMemberAccess	cad -> Insert		719275	0					
ANR	719468	Identifier	cad		719275	0					
ANR	719469	Identifier	Insert		719275	1					
ANR	719470	ArgumentList	line . Value ( )		719275	1					
ANR	719471	Argument	line . Value ( )		719275	0					
ANR	719472	CallExpression	line . Value ( )		719275	0					
ANR	719473	Callee	line . Value		719275	0					
ANR	719474	MemberAccess	line . Value		719275	0					
ANR	719475	Identifier	line		719275	0					
ANR	719476	Identifier	Value		719275	1					
ANR	719477	ArgumentList			719275	1					
ANR	719478	IfStatement	if ( my_claim_sus > 0 )		719275	12					
ANR	719479	Condition	my_claim_sus > 0	466:5:11736:11751	719275	0	True				
ANR	719480	RelationalExpression	my_claim_sus > 0		719275	0		>			
ANR	719481	Identifier	my_claim_sus		719275	0					
ANR	719482	PrimaryExpression	0		719275	1					
ANR	719483	CompoundStatement		38:24:1199:1199	719275	1					
ANR	719484	ExpressionStatement	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_CLAIM_SUSPEND_TIME , ( long ) my_claim_sus )"	467:2:11759:11834	719275	0	True				
ANR	719485	CallExpression	"line . sprintf ( ""%s=%ld"" , ATTR_TOTAL_CLAIM_SUSPEND_TIME , ( long ) my_claim_sus )"		719275	0					
ANR	719486	Callee	line . sprintf		719275	0					
ANR	719487	MemberAccess	line . sprintf		719275	0					
ANR	719488	Identifier	line		719275	0					
ANR	719489	Identifier	sprintf		719275	1					
ANR	719490	ArgumentList	"""%s=%ld"""		719275	1					
ANR	719491	Argument	"""%s=%ld"""		719275	0					
ANR	719492	PrimaryExpression	"""%s=%ld"""		719275	0					
ANR	719493	Argument	ATTR_TOTAL_CLAIM_SUSPEND_TIME		719275	1					
ANR	719494	Identifier	ATTR_TOTAL_CLAIM_SUSPEND_TIME		719275	0					
ANR	719495	Argument	( long ) my_claim_sus		719275	2					
ANR	719496	CastExpression	( long ) my_claim_sus		719275	0					
ANR	719497	CastTarget	long		719275	0					
ANR	719498	Identifier	my_claim_sus		719275	1					
ANR	719499	ExpressionStatement	cad -> Insert ( line . Value ( ) )	468:2:11838:11865	719275	1	True				
ANR	719500	CallExpression	cad -> Insert ( line . Value ( ) )		719275	0					
ANR	719501	Callee	cad -> Insert		719275	0					
ANR	719502	PtrMemberAccess	cad -> Insert		719275	0					
ANR	719503	Identifier	cad		719275	0					
ANR	719504	Identifier	Insert		719275	1					
ANR	719505	ArgumentList	line . Value ( )		719275	1					
ANR	719506	Argument	line . Value ( )		719275	0					
ANR	719507	CallExpression	line . Value ( )		719275	0					
ANR	719508	Callee	line . Value		719275	0					
ANR	719509	MemberAccess	line . Value		719275	0					
ANR	719510	Identifier	line		719275	0					
ANR	719511	Identifier	Value		719275	1					
ANR	719512	ArgumentList			719275	1					
ANR	719513	ReturnType	void		719275	1					
ANR	719514	Identifier	Claim :: publishStateTimes		719275	2					
ANR	719515	ParameterList	ClassAd * cad		719275	3					
ANR	719516	Parameter	ClassAd * cad	428:26:10540:10551	719275	0	True				
ANR	719517	ParameterType	ClassAd *		719275	0					
ANR	719518	Identifier	cad		719275	1					
ANR	719519	CFGEntryNode	ENTRY		719275		True				
ANR	719520	CFGExitNode	EXIT		719275		True				
ANR	719521	Symbol	my_job_sus		719275						
ANR	719522	Symbol	ATTR_TOTAL_JOB_SUSPEND_TIME		719275						
ANR	719523	Symbol	c_job_total_suspend_time		719275						
ANR	719524	Symbol	c_entered_state		719275						
ANR	719525	Symbol	NULL		719275						
ANR	719526	Symbol	c_job_total_run_time		719275						
ANR	719527	Symbol	c_state		719275						
ANR	719528	Symbol	line . Value		719275						
ANR	719529	Symbol	ATTR_TOTAL_CLAIM_SUSPEND_TIME		719275						
ANR	719530	Symbol	line		719275						
ANR	719531	Symbol	cad		719275						
ANR	719532	Symbol	my_job_run		719275						
ANR	719533	Symbol	CLAIM_SUSPENDED		719275						
ANR	719534	Symbol	ATTR_TOTAL_JOB_RUN_TIME		719275						
ANR	719535	Symbol	my_claim_sus		719275						
ANR	719536	Symbol	CLAIM_RUNNING		719275						
ANR	719537	Symbol	ATTR_TOTAL_CLAIM_RUN_TIME		719275						
ANR	719538	Symbol	now		719275						
ANR	719539	Symbol	c_claim_total_suspend_time		719275						
ANR	719540	Symbol	time		719275						
ANR	719541	Symbol	c_claim_total_run_time		719275						
ANR	719542	Symbol	time_dif		719275						
ANR	719543	Symbol	my_claim_run		719275						
ANR	719544	Function	Claim :: dprintf	474:0:11875:12028							
ANR	719545	FunctionDef	"Claim :: dprintf (int flags , const char * fmt)"		719544	0					
ANR	719546	CompoundStatement		476:0:11930:12028	719544	0					
ANR	719547	IdentifierDeclStatement	va_list args ;	477:1:11933:11945	719544	0	True				
ANR	719548	IdentifierDecl	args		719544	0					
ANR	719549	IdentifierDeclType	va_list		719544	0					
ANR	719550	Identifier	args		719544	1					
ANR	719551	ExpressionStatement	"va_start ( args , fmt )"	478:1:11948:11969	719544	1	True				
ANR	719552	CallExpression	"va_start ( args , fmt )"		719544	0					
ANR	719553	Callee	va_start		719544	0					
ANR	719554	Identifier	va_start		719544	0					
ANR	719555	ArgumentList	args		719544	1					
ANR	719556	Argument	args		719544	0					
ANR	719557	Identifier	args		719544	0					
ANR	719558	Argument	fmt		719544	1					
ANR	719559	Identifier	fmt		719544	0					
ANR	719560	ExpressionStatement	"c_rip -> dprintf_va ( flags , fmt , args )"	479:1:11972:12009	719544	2	True				
ANR	719561	CallExpression	"c_rip -> dprintf_va ( flags , fmt , args )"		719544	0					
ANR	719562	Callee	c_rip -> dprintf_va		719544	0					
ANR	719563	PtrMemberAccess	c_rip -> dprintf_va		719544	0					
ANR	719564	Identifier	c_rip		719544	0					
ANR	719565	Identifier	dprintf_va		719544	1					
ANR	719566	ArgumentList	flags		719544	1					
ANR	719567	Argument	flags		719544	0					
ANR	719568	Identifier	flags		719544	0					
ANR	719569	Argument	fmt		719544	1					
ANR	719570	Identifier	fmt		719544	0					
ANR	719571	Argument	args		719544	2					
ANR	719572	Identifier	args		719544	0					
ANR	719573	ExpressionStatement	va_end ( args )	480:1:12012:12026	719544	3	True				
ANR	719574	CallExpression	va_end ( args )		719544	0					
ANR	719575	Callee	va_end		719544	0					
ANR	719576	Identifier	va_end		719544	0					
ANR	719577	ArgumentList	args		719544	1					
ANR	719578	Argument	args		719544	0					
ANR	719579	Identifier	args		719544	0					
ANR	719580	ReturnType	void		719544	1					
ANR	719581	Identifier	Claim :: dprintf		719544	2					
ANR	719582	ParameterList	"int flags , const char * fmt"		719544	3					
ANR	719583	Parameter	int flags	475:16:11896:11904	719544	0	True				
ANR	719584	ParameterType	int		719544	0					
ANR	719585	Identifier	flags		719544	1					
ANR	719586	Parameter	const char * fmt	475:27:11907:11921	719544	1	True				
ANR	719587	ParameterType	const char *		719544	0					
ANR	719588	Identifier	fmt		719544	1					
ANR	719589	CFGEntryNode	ENTRY		719544		True				
ANR	719590	CFGExitNode	EXIT		719544		True				
ANR	719591	Symbol	args		719544						
ANR	719592	Symbol	c_rip		719544						
ANR	719593	Symbol	flags		719544						
ANR	719594	Symbol	fmt		719544						
ANR	719595	Function	Claim :: refuseClaimRequest	484:0:12032:12267							
ANR	719596	FunctionDef	Claim :: refuseClaimRequest ()		719595	0					
ANR	719597	CompoundStatement		486:0:12065:12267	719595	0					
ANR	719598	IfStatement	if ( ! c_request_stream )		719595	0					
ANR	719599	Condition	! c_request_stream	487:5:12072:12088	719595	0	True				
ANR	719600	UnaryOperationExpression	! c_request_stream		719595	0					
ANR	719601	UnaryOperator	!		719595	0					
ANR	719602	Identifier	c_request_stream		719595	1					
ANR	719603	CompoundStatement		2:25:26:26	719595	1					
ANR	719604	ReturnStatement	return ;	488:2:12096:12102	719595	0	True				
ANR	719605	ExpressionStatement	"dprintf ( D_ALWAYS , ""Refusing request to claim Resource\\n"" )"	490:1:12108:12167	719595	1	True				
ANR	719606	CallExpression	"dprintf ( D_ALWAYS , ""Refusing request to claim Resource\\n"" )"		719595	0					
ANR	719607	Callee	dprintf		719595	0					
ANR	719608	Identifier	dprintf		719595	0					
ANR	719609	ArgumentList	D_ALWAYS		719595	1					
ANR	719610	Argument	D_ALWAYS		719595	0					
ANR	719611	Identifier	D_ALWAYS		719595	0					
ANR	719612	Argument	"""Refusing request to claim Resource\\n"""		719595	1					
ANR	719613	PrimaryExpression	"""Refusing request to claim Resource\\n"""		719595	0					
ANR	719614	ExpressionStatement	c_request_stream -> encode ( )	491:1:12170:12196	719595	2	True				
ANR	719615	CallExpression	c_request_stream -> encode ( )		719595	0					
ANR	719616	Callee	c_request_stream -> encode		719595	0					
ANR	719617	PtrMemberAccess	c_request_stream -> encode		719595	0					
ANR	719618	Identifier	c_request_stream		719595	0					
ANR	719619	Identifier	encode		719595	1					
ANR	719620	ArgumentList			719595	1					
ANR	719621	ExpressionStatement	c_request_stream -> put ( NOT_OK )	492:1:12199:12228	719595	3	True				
ANR	719622	CallExpression	c_request_stream -> put ( NOT_OK )		719595	0					
ANR	719623	Callee	c_request_stream -> put		719595	0					
ANR	719624	PtrMemberAccess	c_request_stream -> put		719595	0					
ANR	719625	Identifier	c_request_stream		719595	0					
ANR	719626	Identifier	put		719595	1					
ANR	719627	ArgumentList	NOT_OK		719595	1					
ANR	719628	Argument	NOT_OK		719595	0					
ANR	719629	Identifier	NOT_OK		719595	0					
ANR	719630	ExpressionStatement	c_request_stream -> end_of_message ( )	493:1:12231:12265	719595	4	True				
ANR	719631	CallExpression	c_request_stream -> end_of_message ( )		719595	0					
ANR	719632	Callee	c_request_stream -> end_of_message		719595	0					
ANR	719633	PtrMemberAccess	c_request_stream -> end_of_message		719595	0					
ANR	719634	Identifier	c_request_stream		719595	0					
ANR	719635	Identifier	end_of_message		719595	1					
ANR	719636	ArgumentList			719595	1					
ANR	719637	ReturnType	void		719595	1					
ANR	719638	Identifier	Claim :: refuseClaimRequest		719595	2					
ANR	719639	ParameterList			719595	3					
ANR	719640	CFGEntryNode	ENTRY		719595		True				
ANR	719641	CFGExitNode	EXIT		719595		True				
ANR	719642	Symbol	NOT_OK		719595						
ANR	719643	Symbol	c_request_stream		719595						
ANR	719644	Symbol	D_ALWAYS		719595						
ANR	719645	Function	Claim :: start_match_timer	497:0:12271:13505							
ANR	719646	FunctionDef	Claim :: start_match_timer ()		719645	0					
ANR	719647	CompoundStatement		499:0:12303:13505	719645	0					
ANR	719648	IfStatement	if ( c_match_tid != - 1 )		719645	0					
ANR	719649	Condition	c_match_tid != - 1	500:5:12310:12326	719645	0	True				
ANR	719650	EqualityExpression	c_match_tid != - 1		719645	0		!=			
ANR	719651	Identifier	c_match_tid		719645	0					
ANR	719652	UnaryOperationExpression	- 1		719645	1					
ANR	719653	UnaryOperator	-		719645	0					
ANR	719654	PrimaryExpression	1		719645	1					
ANR	719655	CompoundStatement		2:25:26:26	719645	1					
ANR	719656	Statement	dprintf	511:4:12724:12730	719645	0	True				
ANR	719657	Statement	(	511:11:12731:12731	719645	1	True				
ANR	719658	Statement	D_FAILURE	511:13:12733:12741	719645	2	True				
ANR	719659	Statement	|	511:22:12742:12742	719645	3	True				
ANR	719660	Statement	D_ALWAYS	511:23:12743:12750	719645	4	True				
ANR	719661	Statement	","	511:31:12751:12751	719645	5	True				
ANR	719662	Statement	"""Warning: got matched twice for same ClaimId."""	511:33:12753:12798	719645	6	True				
ANR	719663	Statement	""" Canceling old match timer (%d)\\n"""	512:4:12804:12838	719645	7	True				
ANR	719664	Statement	","	512:39:12839:12839	719645	8	True				
ANR	719665	Statement	c_match_tid	512:41:12841:12851	719645	9	True				
ANR	719666	Statement	)	512:53:12853:12853	719645	10	True				
ANR	719667	ExpressionStatement		512:54:12854:12854	719645	11	True				
ANR	719668	IfStatement	if ( daemonCore -> Cancel_Timer ( c_match_tid ) < 0 )		719645	12					
ANR	719669	Condition	daemonCore -> Cancel_Timer ( c_match_tid ) < 0	513:8:12864:12904	719645	0	True				
ANR	719670	RelationalExpression	daemonCore -> Cancel_Timer ( c_match_tid ) < 0		719645	0		<			
ANR	719671	CallExpression	daemonCore -> Cancel_Timer ( c_match_tid )		719645	0					
ANR	719672	Callee	daemonCore -> Cancel_Timer		719645	0					
ANR	719673	PtrMemberAccess	daemonCore -> Cancel_Timer		719645	0					
ANR	719674	Identifier	daemonCore		719645	0					
ANR	719675	Identifier	Cancel_Timer		719645	1					
ANR	719676	ArgumentList	c_match_tid		719645	1					
ANR	719677	Argument	c_match_tid		719645	0					
ANR	719678	Identifier	c_match_tid		719645	0					
ANR	719679	PrimaryExpression	0		719645	1					
ANR	719680	CompoundStatement		15:52:604:604	719645	1					
ANR	719681	Statement	dprintf	514:5:12915:12921	719645	0	True				
ANR	719682	Statement	(	514:12:12922:12922	719645	1	True				
ANR	719683	Statement	D_ALWAYS	514:14:12924:12931	719645	2	True				
ANR	719684	Statement	","	514:22:12932:12932	719645	3	True				
ANR	719685	Statement	"""Failed to cancel old match timer (%d): """	514:24:12934:12974	719645	4	True				
ANR	719686	Statement	"""daemonCore error\\n"""	515:5:12981:13000	719645	5	True				
ANR	719687	Statement	","	515:25:13001:13001	719645	6	True				
ANR	719688	Statement	c_match_tid	515:27:13003:13013	719645	7	True				
ANR	719689	Statement	)	515:39:13015:13015	719645	8	True				
ANR	719690	ExpressionStatement		515:40:13016:13016	719645	9	True				
ANR	719691	ElseStatement	else		719645	0					
ANR	719692	CompoundStatement		18:11:725:725	719645	0					
ANR	719693	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cancelled old match timer (%d)\\n"" , c_match_tid )"	517:5:13036:13113	719645	0	True				
ANR	719694	CallExpression	"dprintf ( D_FULLDEBUG , ""Cancelled old match timer (%d)\\n"" , c_match_tid )"		719645	0					
ANR	719695	Callee	dprintf		719645	0					
ANR	719696	Identifier	dprintf		719645	0					
ANR	719697	ArgumentList	D_FULLDEBUG		719645	1					
ANR	719698	Argument	D_FULLDEBUG		719645	0					
ANR	719699	Identifier	D_FULLDEBUG		719645	0					
ANR	719700	Argument	"""Cancelled old match timer (%d)\\n"""		719645	1					
ANR	719701	PrimaryExpression	"""Cancelled old match timer (%d)\\n"""		719645	0					
ANR	719702	Argument	c_match_tid		719645	2					
ANR	719703	Identifier	c_match_tid		719645	0					
ANR	719704	ExpressionStatement	c_match_tid = - 1	520:4:13125:13141	719645	13	True				
ANR	719705	AssignmentExpression	c_match_tid = - 1		719645	0		=			
ANR	719706	Identifier	c_match_tid		719645	0					
ANR	719707	UnaryOperationExpression	- 1		719645	1					
ANR	719708	UnaryOperator	-		719645	0					
ANR	719709	PrimaryExpression	1		719645	1					
ANR	719710	ExpressionStatement	"c_match_tid = daemonCore -> Register_Timer ( match_timeout , 0 , ( TimerHandlercpp ) & Claim :: match_timed_out , ""match_timed_out"" , this )"	523:1:13148:13313	719645	1	True				
ANR	719711	AssignmentExpression	"c_match_tid = daemonCore -> Register_Timer ( match_timeout , 0 , ( TimerHandlercpp ) & Claim :: match_timed_out , ""match_timed_out"" , this )"		719645	0		=			
ANR	719712	Identifier	c_match_tid		719645	0					
ANR	719713	CallExpression	"daemonCore -> Register_Timer ( match_timeout , 0 , ( TimerHandlercpp ) & Claim :: match_timed_out , ""match_timed_out"" , this )"		719645	1					
ANR	719714	Callee	daemonCore -> Register_Timer		719645	0					
ANR	719715	PtrMemberAccess	daemonCore -> Register_Timer		719645	0					
ANR	719716	Identifier	daemonCore		719645	0					
ANR	719717	Identifier	Register_Timer		719645	1					
ANR	719718	ArgumentList	match_timeout		719645	1					
ANR	719719	Argument	match_timeout		719645	0					
ANR	719720	Identifier	match_timeout		719645	0					
ANR	719721	Argument	0		719645	1					
ANR	719722	PrimaryExpression	0		719645	0					
ANR	719723	Argument	( TimerHandlercpp ) & Claim :: match_timed_out		719645	2					
ANR	719724	CastExpression	( TimerHandlercpp ) & Claim :: match_timed_out		719645	0					
ANR	719725	CastTarget	TimerHandlercpp		719645	0					
ANR	719726	UnaryOperationExpression	& Claim :: match_timed_out		719645	1					
ANR	719727	UnaryOperator	&		719645	0					
ANR	719728	Identifier	Claim :: match_timed_out		719645	1					
ANR	719729	Argument	"""match_timed_out"""		719645	3					
ANR	719730	PrimaryExpression	"""match_timed_out"""		719645	0					
ANR	719731	Argument	this		719645	4					
ANR	719732	Identifier	this		719645	0					
ANR	719733	IfStatement	if ( c_match_tid == - 1 )		719645	2					
ANR	719734	Condition	c_match_tid == - 1	528:5:13320:13336	719645	0	True				
ANR	719735	EqualityExpression	c_match_tid == - 1		719645	0		==			
ANR	719736	Identifier	c_match_tid		719645	0					
ANR	719737	UnaryOperationExpression	- 1		719645	1					
ANR	719738	UnaryOperator	-		719645	0					
ANR	719739	PrimaryExpression	1		719645	1					
ANR	719740	CompoundStatement		30:25:1036:1036	719645	1					
ANR	719741	ExpressionStatement	"EXCEPT ( ""Couldn't register timer (out of memory)."" )"	529:2:13344:13396	719645	0	True				
ANR	719742	CallExpression	"EXCEPT ( ""Couldn't register timer (out of memory)."" )"		719645	0					
ANR	719743	Callee	EXCEPT		719645	0					
ANR	719744	Identifier	EXCEPT		719645	0					
ANR	719745	ArgumentList	"""Couldn't register timer (out of memory)."""		719645	1					
ANR	719746	Argument	"""Couldn't register timer (out of memory)."""		719645	0					
ANR	719747	PrimaryExpression	"""Couldn't register timer (out of memory)."""		719645	0					
ANR	719748	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Started match timer (%d) for %d seconds.\\n"" , c_match_tid , match_timeout )"	531:1:13402:13503	719645	3	True				
ANR	719749	CallExpression	"dprintf ( D_FULLDEBUG , ""Started match timer (%d) for %d seconds.\\n"" , c_match_tid , match_timeout )"		719645	0					
ANR	719750	Callee	dprintf		719645	0					
ANR	719751	Identifier	dprintf		719645	0					
ANR	719752	ArgumentList	D_FULLDEBUG		719645	1					
ANR	719753	Argument	D_FULLDEBUG		719645	0					
ANR	719754	Identifier	D_FULLDEBUG		719645	0					
ANR	719755	Argument	"""Started match timer (%d) for %d seconds.\\n"""		719645	1					
ANR	719756	PrimaryExpression	"""Started match timer (%d) for %d seconds.\\n"""		719645	0					
ANR	719757	Argument	c_match_tid		719645	2					
ANR	719758	Identifier	c_match_tid		719645	0					
ANR	719759	Argument	match_timeout		719645	3					
ANR	719760	Identifier	match_timeout		719645	0					
ANR	719761	ReturnType	void		719645	1					
ANR	719762	Identifier	Claim :: start_match_timer		719645	2					
ANR	719763	ParameterList			719645	3					
ANR	719764	CFGEntryNode	ENTRY		719645		True				
ANR	719765	CFGExitNode	EXIT		719645		True				
ANR	719766	Symbol	* daemonCore		719645						
ANR	719767	Symbol	daemonCore		719645						
ANR	719768	Symbol	daemonCore -> Register_Timer		719645						
ANR	719769	Symbol	this		719645						
ANR	719770	Symbol	c_match_tid		719645						
ANR	719771	Symbol	D_FULLDEBUG		719645						
ANR	719772	Symbol	& Claim :: match_timed_out		719645						
ANR	719773	Symbol	match_timeout		719645						
ANR	719774	Symbol	daemonCore -> Cancel_Timer		719645						
ANR	719775	Function	Claim :: cancel_match_timer	536:0:13509:13870							
ANR	719776	FunctionDef	Claim :: cancel_match_timer ()		719775	0					
ANR	719777	CompoundStatement		538:0:13542:13870	719775	0					
ANR	719778	IdentifierDeclStatement	int rval ;	539:1:13545:13553	719775	0	True				
ANR	719779	IdentifierDecl	rval		719775	0					
ANR	719780	IdentifierDeclType	int		719775	0					
ANR	719781	Identifier	rval		719775	1					
ANR	719782	IfStatement	if ( c_match_tid != - 1 )		719775	1					
ANR	719783	Condition	c_match_tid != - 1	540:5:13560:13576	719775	0	True				
ANR	719784	EqualityExpression	c_match_tid != - 1		719775	0		!=			
ANR	719785	Identifier	c_match_tid		719775	0					
ANR	719786	UnaryOperationExpression	- 1		719775	1					
ANR	719787	UnaryOperator	-		719775	0					
ANR	719788	PrimaryExpression	1		719775	1					
ANR	719789	CompoundStatement		3:25:37:37	719775	1					
ANR	719790	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( c_match_tid )	541:2:13584:13630	719775	0	True				
ANR	719791	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( c_match_tid )		719775	0		=			
ANR	719792	Identifier	rval		719775	0					
ANR	719793	CallExpression	daemonCore -> Cancel_Timer ( c_match_tid )		719775	1					
ANR	719794	Callee	daemonCore -> Cancel_Timer		719775	0					
ANR	719795	PtrMemberAccess	daemonCore -> Cancel_Timer		719775	0					
ANR	719796	Identifier	daemonCore		719775	0					
ANR	719797	Identifier	Cancel_Timer		719775	1					
ANR	719798	ArgumentList	c_match_tid		719775	1					
ANR	719799	Argument	c_match_tid		719775	0					
ANR	719800	Identifier	c_match_tid		719775	0					
ANR	719801	IfStatement	if ( rval < 0 )		719775	1					
ANR	719802	Condition	rval < 0	542:6:13638:13645	719775	0	True				
ANR	719803	RelationalExpression	rval < 0		719775	0		<			
ANR	719804	Identifier	rval		719775	0					
ANR	719805	PrimaryExpression	0		719775	1					
ANR	719806	CompoundStatement		5:17:106:106	719775	1					
ANR	719807	Statement	dprintf	543:3:13654:13660	719775	0	True				
ANR	719808	Statement	(	543:10:13661:13661	719775	1	True				
ANR	719809	Statement	D_ALWAYS	543:12:13663:13670	719775	2	True				
ANR	719810	Statement	","	543:20:13671:13671	719775	3	True				
ANR	719811	Statement	"""Failed to cancel match timer (%d): """	543:22:13673:13709	719775	4	True				
ANR	719812	Statement	"""daemonCore error\\n"""	544:6:13717:13736	719775	5	True				
ANR	719813	Statement	","	544:26:13737:13737	719775	6	True				
ANR	719814	Statement	c_match_tid	544:28:13739:13749	719775	7	True				
ANR	719815	Statement	)	544:40:13751:13751	719775	8	True				
ANR	719816	ExpressionStatement		544:41:13752:13752	719775	9	True				
ANR	719817	ElseStatement	else		719775	0					
ANR	719818	CompoundStatement		8:9:220:220	719775	0					
ANR	719819	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled match timer (%d)\\n"" , c_match_tid )"	546:3:13768:13841	719775	0	True				
ANR	719820	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled match timer (%d)\\n"" , c_match_tid )"		719775	0					
ANR	719821	Callee	dprintf		719775	0					
ANR	719822	Identifier	dprintf		719775	0					
ANR	719823	ArgumentList	D_FULLDEBUG		719775	1					
ANR	719824	Argument	D_FULLDEBUG		719775	0					
ANR	719825	Identifier	D_FULLDEBUG		719775	0					
ANR	719826	Argument	"""Canceled match timer (%d)\\n"""		719775	1					
ANR	719827	PrimaryExpression	"""Canceled match timer (%d)\\n"""		719775	0					
ANR	719828	Argument	c_match_tid		719775	2					
ANR	719829	Identifier	c_match_tid		719775	0					
ANR	719830	ExpressionStatement	c_match_tid = - 1	549:2:13849:13865	719775	2	True				
ANR	719831	AssignmentExpression	c_match_tid = - 1		719775	0		=			
ANR	719832	Identifier	c_match_tid		719775	0					
ANR	719833	UnaryOperationExpression	- 1		719775	1					
ANR	719834	UnaryOperator	-		719775	0					
ANR	719835	PrimaryExpression	1		719775	1					
ANR	719836	ReturnType	void		719775	1					
ANR	719837	Identifier	Claim :: cancel_match_timer		719775	2					
ANR	719838	ParameterList			719775	3					
ANR	719839	CFGEntryNode	ENTRY		719775		True				
ANR	719840	CFGExitNode	EXIT		719775		True				
ANR	719841	Symbol	* daemonCore		719775						
ANR	719842	Symbol	daemonCore		719775						
ANR	719843	Symbol	c_match_tid		719775						
ANR	719844	Symbol	rval		719775						
ANR	719845	Symbol	D_FULLDEBUG		719775						
ANR	719846	Symbol	daemonCore -> Cancel_Timer		719775						
ANR	719847	Function	Claim :: match_timed_out	554:0:13874:17131							
ANR	719848	FunctionDef	Claim :: match_timed_out ()		719847	0					
ANR	719849	CompoundStatement		556:0:13904:17131	719847	0					
ANR	719850	IdentifierDeclStatement	char * my_id = id ( ) ;	557:1:13907:13925	719847	0	True				
ANR	719851	IdentifierDecl	* my_id = id ( )		719847	0					
ANR	719852	IdentifierDeclType	char *		719847	0					
ANR	719853	Identifier	my_id		719847	1					
ANR	719854	AssignmentExpression	* my_id = id ( )		719847	2		=			
ANR	719855	Identifier	my_id		719847	0					
ANR	719856	CallExpression	id ( )		719847	1					
ANR	719857	Callee	id		719847	0					
ANR	719858	Identifier	id		719847	0					
ANR	719859	ArgumentList			719847	1					
ANR	719860	IfStatement	if ( ! my_id )		719847	1					
ANR	719861	Condition	! my_id	558:5:13932:13937	719847	0	True				
ANR	719862	UnaryOperationExpression	! my_id		719847	0					
ANR	719863	UnaryOperator	!		719847	0					
ANR	719864	Identifier	my_id		719847	1					
ANR	719865	CompoundStatement		3:14:36:36	719847	1					
ANR	719866	Statement	::	563:2:14141:14142	719847	0	True				
ANR	719867	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""ERROR: Match timed out but there's no ClaimId\\n"" )"	563:4:14143:14230	719847	1	True				
ANR	719868	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""ERROR: Match timed out but there's no ClaimId\\n"" )"		719847	0					
ANR	719869	Callee	dprintf		719847	0					
ANR	719870	Identifier	dprintf		719847	0					
ANR	719871	ArgumentList	D_FAILURE | D_ALWAYS		719847	1					
ANR	719872	Argument	D_FAILURE | D_ALWAYS		719847	0					
ANR	719873	InclusiveOrExpression	D_FAILURE | D_ALWAYS		719847	0		|			
ANR	719874	Identifier	D_FAILURE		719847	0					
ANR	719875	Identifier	D_ALWAYS		719847	1					
ANR	719876	Argument	"""ERROR: Match timed out but there's no ClaimId\\n"""		719847	1					
ANR	719877	PrimaryExpression	"""ERROR: Match timed out but there's no ClaimId\\n"""		719847	0					
ANR	719878	ReturnStatement	return ;	565:2:14234:14240	719847	2	True				
ANR	719879	IdentifierDeclStatement	Resource * res_ip = resmgr -> get_by_any_id ( my_id ) ;	568:1:14249:14298	719847	2	True				
ANR	719880	IdentifierDecl	* res_ip = resmgr -> get_by_any_id ( my_id )		719847	0					
ANR	719881	IdentifierDeclType	Resource *		719847	0					
ANR	719882	Identifier	res_ip		719847	1					
ANR	719883	AssignmentExpression	* res_ip = resmgr -> get_by_any_id ( my_id )		719847	2		=			
ANR	719884	Identifier	res_ip		719847	0					
ANR	719885	CallExpression	resmgr -> get_by_any_id ( my_id )		719847	1					
ANR	719886	Callee	resmgr -> get_by_any_id		719847	0					
ANR	719887	PtrMemberAccess	resmgr -> get_by_any_id		719847	0					
ANR	719888	Identifier	resmgr		719847	0					
ANR	719889	Identifier	get_by_any_id		719847	1					
ANR	719890	ArgumentList	my_id		719847	1					
ANR	719891	Argument	my_id		719847	0					
ANR	719892	Identifier	my_id		719847	0					
ANR	719893	IfStatement	if ( ! res_ip )		719847	3					
ANR	719894	Condition	! res_ip	569:5:14305:14311	719847	0	True				
ANR	719895	UnaryOperationExpression	! res_ip		719847	0					
ANR	719896	UnaryOperator	!		719847	0					
ANR	719897	Identifier	res_ip		719847	1					
ANR	719898	CompoundStatement		14:15:410:410	719847	1					
ANR	719899	Statement	::	570:2:14319:14320	719847	0	True				
ANR	719900	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""ERROR: Can't find resource of expired match\\n"" )"	570:4:14321:14406	719847	1	True				
ANR	719901	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""ERROR: Can't find resource of expired match\\n"" )"		719847	0					
ANR	719902	Callee	dprintf		719847	0					
ANR	719903	Identifier	dprintf		719847	0					
ANR	719904	ArgumentList	D_FAILURE | D_ALWAYS		719847	1					
ANR	719905	Argument	D_FAILURE | D_ALWAYS		719847	0					
ANR	719906	InclusiveOrExpression	D_FAILURE | D_ALWAYS		719847	0		|			
ANR	719907	Identifier	D_FAILURE		719847	0					
ANR	719908	Identifier	D_ALWAYS		719847	1					
ANR	719909	Argument	"""ERROR: Can't find resource of expired match\\n"""		719847	1					
ANR	719910	PrimaryExpression	"""ERROR: Can't find resource of expired match\\n"""		719847	0					
ANR	719911	ReturnStatement	return ;	572:2:14410:14416	719847	2	True				
ANR	719912	IfStatement	if ( res_ip -> r_cur -> idMatches ( id ( ) ) )		719847	4					
ANR	719913	Condition	res_ip -> r_cur -> idMatches ( id ( ) )	575:5:14427:14458	719847	0	True				
ANR	719914	CallExpression	res_ip -> r_cur -> idMatches ( id ( ) )		719847	0					
ANR	719915	Callee	res_ip -> r_cur -> idMatches		719847	0					
ANR	719916	PtrMemberAccess	res_ip -> r_cur -> idMatches		719847	0					
ANR	719917	PtrMemberAccess	res_ip -> r_cur		719847	0					
ANR	719918	Identifier	res_ip		719847	0					
ANR	719919	Identifier	r_cur		719847	1					
ANR	719920	Identifier	idMatches		719847	1					
ANR	719921	ArgumentList	id ( )		719847	1					
ANR	719922	Argument	id ( )		719847	0					
ANR	719923	CallExpression	id ( )		719847	0					
ANR	719924	Callee	id		719847	0					
ANR	719925	Identifier	id		719847	0					
ANR	719926	ArgumentList			719847	1					
ANR	719927	CompoundStatement		20:40:557:557	719847	1					
ANR	719928	IfStatement	if ( res_ip -> state ( ) == backfill_state )		719847	0					
ANR	719929	Condition	res_ip -> state ( ) == backfill_state	577:6:14488:14520	719847	0	True				
ANR	719930	EqualityExpression	res_ip -> state ( ) == backfill_state		719847	0		==			
ANR	719931	CallExpression	res_ip -> state ( )		719847	0					
ANR	719932	Callee	res_ip -> state		719847	0					
ANR	719933	PtrMemberAccess	res_ip -> state		719847	0					
ANR	719934	Identifier	res_ip		719847	0					
ANR	719935	Identifier	state		719847	1					
ANR	719936	ArgumentList			719847	1					
ANR	719937	Identifier	backfill_state		719847	1					
ANR	719938	CompoundStatement		22:42:619:619	719847	1					
ANR	719939	Statement	dprintf	588:3:14995:15001	719847	0	True				
ANR	719940	Statement	(	588:10:15002:15002	719847	1	True				
ANR	719941	Statement	D_FAILURE	588:12:15004:15012	719847	2	True				
ANR	719942	Statement	|	588:21:15013:15013	719847	3	True				
ANR	719943	Statement	D_ALWAYS	588:22:15014:15021	719847	4	True				
ANR	719944	Statement	","	588:30:15022:15022	719847	5	True				
ANR	719945	Statement	"""WARNING: Match timed out """	588:32:15024:15050	719847	6	True				
ANR	719946	Statement	"""while still in the %s state. This might mean """	589:6:15058:15104	719847	7	True				
ANR	719947	Statement	"""your MATCH_TIMEOUT setting (%d) is too small, """	590:6:15112:15159	719847	8	True				
ANR	719948	Statement	"""or that there's a problem with how quickly your """	591:6:15167:15216	719847	9	True				
ANR	719949	Statement	"""backfill jobs can evict themselves.\\n"""	592:6:15224:15262	719847	10	True				
ANR	719950	Statement	","	592:45:15263:15263	719847	11	True				
ANR	719951	Statement	state_to_string	593:6:15272:15286	719847	12	True				
ANR	719952	Statement	(	593:21:15287:15287	719847	13	True				
ANR	719953	Statement	res_ip	593:22:15288:15293	719847	14	True				
ANR	719954	Statement	->	593:28:15294:15295	719847	15	True				
ANR	719955	Statement	state	593:30:15296:15300	719847	16	True				
ANR	719956	Statement	(	593:35:15301:15301	719847	17	True				
ANR	719957	Statement	)	593:36:15302:15302	719847	18	True				
ANR	719958	Statement	)	593:37:15303:15303	719847	19	True				
ANR	719959	Statement	","	593:38:15304:15304	719847	20	True				
ANR	719960	Statement	match_timeout	593:40:15306:15318	719847	21	True				
ANR	719961	Statement	)	593:54:15320:15320	719847	22	True				
ANR	719962	ExpressionStatement		593:55:15321:15321	719847	23	True				
ANR	719963	ExpressionStatement	res_ip -> set_destination_state ( owner_state )	594:3:15326:15370	719847	24	True				
ANR	719964	CallExpression	res_ip -> set_destination_state ( owner_state )		719847	0					
ANR	719965	Callee	res_ip -> set_destination_state		719847	0					
ANR	719966	PtrMemberAccess	res_ip -> set_destination_state		719847	0					
ANR	719967	Identifier	res_ip		719847	0					
ANR	719968	Identifier	set_destination_state		719847	1					
ANR	719969	ArgumentList	owner_state		719847	1					
ANR	719970	Argument	owner_state		719847	0					
ANR	719971	Identifier	owner_state		719847	0					
ANR	719972	ReturnStatement	return ;	595:3:15375:15381	719847	25	True				
ANR	719973	IfStatement	if ( res_ip -> state ( ) != matched_state )		719847	1					
ANR	719974	Condition	res_ip -> state ( ) != matched_state	598:6:15420:15451	719847	0	True				
ANR	719975	EqualityExpression	res_ip -> state ( ) != matched_state		719847	0		!=			
ANR	719976	CallExpression	res_ip -> state ( )		719847	0					
ANR	719977	Callee	res_ip -> state		719847	0					
ANR	719978	PtrMemberAccess	res_ip -> state		719847	0					
ANR	719979	Identifier	res_ip		719847	0					
ANR	719980	Identifier	state		719847	1					
ANR	719981	ArgumentList			719847	1					
ANR	719982	Identifier	matched_state		719847	1					
ANR	719983	CompoundStatement		43:41:1550:1550	719847	1					
ANR	719984	ExpressionStatement	"dprintf ( D_FAILURE | D_FULLDEBUG , ""WARNING: Current match timed out but in %s state.\\n"" , state_to_string ( res_ip -> state ( ) ) )"	612:3:16097:16231	719847	0	True				
ANR	719985	CallExpression	"dprintf ( D_FAILURE | D_FULLDEBUG , ""WARNING: Current match timed out but in %s state.\\n"" , state_to_string ( res_ip -> state ( ) ) )"		719847	0					
ANR	719986	Callee	dprintf		719847	0					
ANR	719987	Identifier	dprintf		719847	0					
ANR	719988	ArgumentList	D_FAILURE | D_FULLDEBUG		719847	1					
ANR	719989	Argument	D_FAILURE | D_FULLDEBUG		719847	0					
ANR	719990	InclusiveOrExpression	D_FAILURE | D_FULLDEBUG		719847	0		|			
ANR	719991	Identifier	D_FAILURE		719847	0					
ANR	719992	Identifier	D_FULLDEBUG		719847	1					
ANR	719993	Argument	"""WARNING: Current match timed out but in %s state.\\n"""		719847	1					
ANR	719994	PrimaryExpression	"""WARNING: Current match timed out but in %s state.\\n"""		719847	0					
ANR	719995	Argument	state_to_string ( res_ip -> state ( ) )		719847	2					
ANR	719996	CallExpression	state_to_string ( res_ip -> state ( ) )		719847	0					
ANR	719997	Callee	state_to_string		719847	0					
ANR	719998	Identifier	state_to_string		719847	0					
ANR	719999	ArgumentList	res_ip -> state ( )		719847	1					
ANR	720000	Argument	res_ip -> state ( )		719847	0					
ANR	720001	CallExpression	res_ip -> state ( )		719847	0					
ANR	720002	Callee	res_ip -> state		719847	0					
ANR	720003	PtrMemberAccess	res_ip -> state		719847	0					
ANR	720004	Identifier	res_ip		719847	0					
ANR	720005	Identifier	state		719847	1					
ANR	720006	ArgumentList			719847	1					
ANR	720007	ReturnStatement	return ;	615:3:16236:16242	719847	1	True				
ANR	720008	Statement	delete	617:2:16250:16255	719847	2	True				
ANR	720009	ExpressionStatement	res_ip -> r_cur	617:9:16257:16270	719847	3	True				
ANR	720010	PtrMemberAccess	res_ip -> r_cur		719847	0					
ANR	720011	Identifier	res_ip		719847	0					
ANR	720012	Identifier	r_cur		719847	1					
ANR	720013	ExpressionStatement	res_ip -> r_cur = new Claim ( res_ip )	621:2:16439:16474	719847	4	True				
ANR	720014	AssignmentExpression	res_ip -> r_cur = new Claim ( res_ip )		719847	0		=			
ANR	720015	PtrMemberAccess	res_ip -> r_cur		719847	0					
ANR	720016	Identifier	res_ip		719847	0					
ANR	720017	Identifier	r_cur		719847	1					
ANR	720018	Identifier	res_ip		719847	1					
ANR	720019	ExpressionStatement	"res_ip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: match timed out\\n"" )"	622:2:16478:16550	719847	5	True				
ANR	720020	CallExpression	"res_ip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: match timed out\\n"" )"		719847	0					
ANR	720021	Callee	res_ip -> dprintf		719847	0					
ANR	720022	PtrMemberAccess	res_ip -> dprintf		719847	0					
ANR	720023	Identifier	res_ip		719847	0					
ANR	720024	Identifier	dprintf		719847	1					
ANR	720025	ArgumentList	D_FAILURE | D_ALWAYS		719847	1					
ANR	720026	Argument	D_FAILURE | D_ALWAYS		719847	0					
ANR	720027	InclusiveOrExpression	D_FAILURE | D_ALWAYS		719847	0		|			
ANR	720028	Identifier	D_FAILURE		719847	0					
ANR	720029	Identifier	D_ALWAYS		719847	1					
ANR	720030	Argument	"""State change: match timed out\\n"""		719847	1					
ANR	720031	PrimaryExpression	"""State change: match timed out\\n"""		719847	0					
ANR	720032	ExpressionStatement	res_ip -> change_state ( owner_state )	623:2:16554:16589	719847	6	True				
ANR	720033	CallExpression	res_ip -> change_state ( owner_state )		719847	0					
ANR	720034	Callee	res_ip -> change_state		719847	0					
ANR	720035	PtrMemberAccess	res_ip -> change_state		719847	0					
ANR	720036	Identifier	res_ip		719847	0					
ANR	720037	Identifier	change_state		719847	1					
ANR	720038	ArgumentList	owner_state		719847	1					
ANR	720039	Argument	owner_state		719847	0					
ANR	720040	Identifier	owner_state		719847	0					
ANR	720041	ElseStatement	else		719847	0					
ANR	720042	CompoundStatement		71:2:2755:2770	719847	0					
ANR	720043	IdentifierDeclStatement	Claim * c = NULL ;	626:2:16660:16675	719847	0	True				
ANR	720044	IdentifierDecl	* c = NULL		719847	0					
ANR	720045	IdentifierDeclType	Claim *		719847	0					
ANR	720046	Identifier	c		719847	1					
ANR	720047	AssignmentExpression	* c = NULL		719847	2		=			
ANR	720048	Identifier	NULL		719847	0					
ANR	720049	Identifier	NULL		719847	1					
ANR	720050	IfStatement	if ( res_ip -> r_pre && res_ip -> r_pre -> idMatches ( id ( ) ) )		719847	1					
ANR	720051	Condition	res_ip -> r_pre && res_ip -> r_pre -> idMatches ( id ( ) )	627:6:16683:16731	719847	0	True				
ANR	720052	AndExpression	res_ip -> r_pre && res_ip -> r_pre -> idMatches ( id ( ) )		719847	0		&&			
ANR	720053	PtrMemberAccess	res_ip -> r_pre		719847	0					
ANR	720054	Identifier	res_ip		719847	0					
ANR	720055	Identifier	r_pre		719847	1					
ANR	720056	CallExpression	res_ip -> r_pre -> idMatches ( id ( ) )		719847	1					
ANR	720057	Callee	res_ip -> r_pre -> idMatches		719847	0					
ANR	720058	PtrMemberAccess	res_ip -> r_pre -> idMatches		719847	0					
ANR	720059	PtrMemberAccess	res_ip -> r_pre		719847	0					
ANR	720060	Identifier	res_ip		719847	0					
ANR	720061	Identifier	r_pre		719847	1					
ANR	720062	Identifier	idMatches		719847	1					
ANR	720063	ArgumentList	id ( )		719847	1					
ANR	720064	Argument	id ( )		719847	0					
ANR	720065	CallExpression	id ( )		719847	0					
ANR	720066	Callee	id		719847	0					
ANR	720067	Identifier	id		719847	0					
ANR	720068	ArgumentList			719847	1					
ANR	720069	CompoundStatement		72:58:2830:2830	719847	1					
ANR	720070	ExpressionStatement	c = res_ip -> r_pre	628:3:16740:16757	719847	0	True				
ANR	720071	AssignmentExpression	c = res_ip -> r_pre		719847	0		=			
ANR	720072	Identifier	c		719847	0					
ANR	720073	PtrMemberAccess	res_ip -> r_pre		719847	1					
ANR	720074	Identifier	res_ip		719847	0					
ANR	720075	Identifier	r_pre		719847	1					
ANR	720076	ElseStatement	else		719847	0					
ANR	720077	IfStatement	if ( res_ip -> r_pre_pre && res_ip -> r_pre_pre -> idMatches ( id ( ) ) )		719847	0					
ANR	720078	Condition	res_ip -> r_pre_pre && res_ip -> r_pre_pre -> idMatches ( id ( ) )	630:11:16774:16830	719847	0	True				
ANR	720079	AndExpression	res_ip -> r_pre_pre && res_ip -> r_pre_pre -> idMatches ( id ( ) )		719847	0		&&			
ANR	720080	PtrMemberAccess	res_ip -> r_pre_pre		719847	0					
ANR	720081	Identifier	res_ip		719847	0					
ANR	720082	Identifier	r_pre_pre		719847	1					
ANR	720083	CallExpression	res_ip -> r_pre_pre -> idMatches ( id ( ) )		719847	1					
ANR	720084	Callee	res_ip -> r_pre_pre -> idMatches		719847	0					
ANR	720085	PtrMemberAccess	res_ip -> r_pre_pre -> idMatches		719847	0					
ANR	720086	PtrMemberAccess	res_ip -> r_pre_pre		719847	0					
ANR	720087	Identifier	res_ip		719847	0					
ANR	720088	Identifier	r_pre_pre		719847	1					
ANR	720089	Identifier	idMatches		719847	1					
ANR	720090	ArgumentList	id ( )		719847	1					
ANR	720091	Argument	id ( )		719847	0					
ANR	720092	CallExpression	id ( )		719847	0					
ANR	720093	Callee	id		719847	0					
ANR	720094	Identifier	id		719847	0					
ANR	720095	ArgumentList			719847	1					
ANR	720096	CompoundStatement		75:71:2929:2929	719847	1					
ANR	720097	ExpressionStatement	c = res_ip -> r_pre_pre	631:3:16839:16860	719847	0	True				
ANR	720098	AssignmentExpression	c = res_ip -> r_pre_pre		719847	0		=			
ANR	720099	Identifier	c		719847	0					
ANR	720100	PtrMemberAccess	res_ip -> r_pre_pre		719847	1					
ANR	720101	Identifier	res_ip		719847	0					
ANR	720102	Identifier	r_pre_pre		719847	1					
ANR	720103	ElseStatement	else		719847	0					
ANR	720104	CompoundStatement		78:7:2968:2968	719847	0					
ANR	720105	ExpressionStatement	"EXCEPT ( ""Unexpected timeout of claim id: %s\\n"" , id ( ) )"	634:3:16878:16929	719847	0	True				
ANR	720106	CallExpression	"EXCEPT ( ""Unexpected timeout of claim id: %s\\n"" , id ( ) )"		719847	0					
ANR	720107	Callee	EXCEPT		719847	0					
ANR	720108	Identifier	EXCEPT		719847	0					
ANR	720109	ArgumentList	"""Unexpected timeout of claim id: %s\\n"""		719847	1					
ANR	720110	Argument	"""Unexpected timeout of claim id: %s\\n"""		719847	0					
ANR	720111	PrimaryExpression	"""Unexpected timeout of claim id: %s\\n"""		719847	0					
ANR	720112	Argument	id ( )		719847	1					
ANR	720113	CallExpression	id ( )		719847	0					
ANR	720114	Callee	id		719847	0					
ANR	720115	Identifier	id		719847	0					
ANR	720116	ArgumentList			719847	1					
ANR	720117	ExpressionStatement	res_ip -> removeClaim ( c )	638:2:17040:17064	719847	2	True				
ANR	720118	CallExpression	res_ip -> removeClaim ( c )		719847	0					
ANR	720119	Callee	res_ip -> removeClaim		719847	0					
ANR	720120	PtrMemberAccess	res_ip -> removeClaim		719847	0					
ANR	720121	Identifier	res_ip		719847	0					
ANR	720122	Identifier	removeClaim		719847	1					
ANR	720123	ArgumentList	c		719847	1					
ANR	720124	Argument	c		719847	0					
ANR	720125	Identifier	c		719847	0					
ANR	720126	ExpressionStatement	res_ip -> r_reqexp -> restore ( )	639:2:17068:17095	719847	3	True				
ANR	720127	CallExpression	res_ip -> r_reqexp -> restore ( )		719847	0					
ANR	720128	Callee	res_ip -> r_reqexp -> restore		719847	0					
ANR	720129	PtrMemberAccess	res_ip -> r_reqexp -> restore		719847	0					
ANR	720130	PtrMemberAccess	res_ip -> r_reqexp		719847	0					
ANR	720131	Identifier	res_ip		719847	0					
ANR	720132	Identifier	r_reqexp		719847	1					
ANR	720133	Identifier	restore		719847	1					
ANR	720134	ArgumentList			719847	1					
ANR	720135	ExpressionStatement	res_ip -> update ( )	640:2:17099:17115	719847	4	True				
ANR	720136	CallExpression	res_ip -> update ( )		719847	0					
ANR	720137	Callee	res_ip -> update		719847	0					
ANR	720138	PtrMemberAccess	res_ip -> update		719847	0					
ANR	720139	Identifier	res_ip		719847	0					
ANR	720140	Identifier	update		719847	1					
ANR	720141	ArgumentList			719847	1					
ANR	720142	ReturnStatement	return ;	642:1:17123:17129	719847	5	True				
ANR	720143	ReturnType	void		719847	1					
ANR	720144	Identifier	Claim :: match_timed_out		719847	2					
ANR	720145	ParameterList			719847	3					
ANR	720146	CFGEntryNode	ENTRY		719847		True				
ANR	720147	CFGExitNode	EXIT		719847		True				
ANR	720148	Symbol	res_ip -> r_cur -> idMatches		719847						
ANR	720149	Symbol	res_ip -> r_pre		719847						
ANR	720150	Symbol	resmgr -> get_by_any_id		719847						
ANR	720151	Symbol	backfill_state		719847						
ANR	720152	Symbol	* res_ip -> r_pre		719847						
ANR	720153	Symbol	res_ip -> r_pre -> idMatches		719847						
ANR	720154	Symbol	* res_ip		719847						
ANR	720155	Symbol	id		719847						
ANR	720156	Symbol	res_ip -> r_pre_pre		719847						
ANR	720157	Symbol	res_ip -> r_cur		719847						
ANR	720158	Symbol	NULL		719847						
ANR	720159	Symbol	c		719847						
ANR	720160	Symbol	* res_ip -> r_pre_pre		719847						
ANR	720161	Symbol	D_ALWAYS		719847						
ANR	720162	Symbol	* resmgr		719847						
ANR	720163	Symbol	D_FULLDEBUG		719847						
ANR	720164	Symbol	D_FAILURE		719847						
ANR	720165	Symbol	res_ip		719847						
ANR	720166	Symbol	res_ip -> state		719847						
ANR	720167	Symbol	matched_state		719847						
ANR	720168	Symbol	* res_ip -> r_cur		719847						
ANR	720169	Symbol	* * res_ip		719847						
ANR	720170	Symbol	resmgr		719847						
ANR	720171	Symbol	my_id		719847						
ANR	720172	Symbol	res_ip -> r_pre_pre -> idMatches		719847						
ANR	720173	Symbol	res_ip -> r_reqexp		719847						
ANR	720174	Symbol	owner_state		719847						
ANR	720175	Symbol	state_to_string		719847						
ANR	720176	Function	Claim :: beginClaim	646:0:17135:17257							
ANR	720177	FunctionDef	Claim :: beginClaim ()		720176	0					
ANR	720178	CompoundStatement		648:0:17167:17257	720176	0					
ANR	720179	ExpressionStatement	ASSERT ( c_state == CLAIM_UNCLAIMED )	649:1:17170:17206	720176	0	True				
ANR	720180	CallExpression	ASSERT ( c_state == CLAIM_UNCLAIMED )		720176	0					
ANR	720181	Callee	ASSERT		720176	0					
ANR	720182	Identifier	ASSERT		720176	0					
ANR	720183	ArgumentList	c_state == CLAIM_UNCLAIMED		720176	1					
ANR	720184	Argument	c_state == CLAIM_UNCLAIMED		720176	0					
ANR	720185	EqualityExpression	c_state == CLAIM_UNCLAIMED		720176	0		==			
ANR	720186	Identifier	c_state		720176	0					
ANR	720187	Identifier	CLAIM_UNCLAIMED		720176	1					
ANR	720188	ExpressionStatement	changeState ( CLAIM_IDLE )	650:1:17209:17234	720176	1	True				
ANR	720189	CallExpression	changeState ( CLAIM_IDLE )		720176	0					
ANR	720190	Callee	changeState		720176	0					
ANR	720191	Identifier	changeState		720176	0					
ANR	720192	ArgumentList	CLAIM_IDLE		720176	1					
ANR	720193	Argument	CLAIM_IDLE		720176	0					
ANR	720194	Identifier	CLAIM_IDLE		720176	0					
ANR	720195	ExpressionStatement	startLeaseTimer ( )	652:1:17238:17255	720176	2	True				
ANR	720196	CallExpression	startLeaseTimer ( )		720176	0					
ANR	720197	Callee	startLeaseTimer		720176	0					
ANR	720198	Identifier	startLeaseTimer		720176	0					
ANR	720199	ArgumentList			720176	1					
ANR	720200	ReturnType	void		720176	1					
ANR	720201	Identifier	Claim :: beginClaim		720176	2					
ANR	720202	ParameterList			720176	3					
ANR	720203	CFGEntryNode	ENTRY		720176		True				
ANR	720204	CFGExitNode	EXIT		720176		True				
ANR	720205	Symbol	c_state		720176						
ANR	720206	Symbol	CLAIM_UNCLAIMED		720176						
ANR	720207	Symbol	CLAIM_IDLE		720176						
ANR	720208	Function	Claim :: loadAccountingInfo	655:0:17260:18394							
ANR	720209	FunctionDef	Claim :: loadAccountingInfo ()		720208	0					
ANR	720210	CompoundStatement		657:0:17293:18394	720208	0					
ANR	720211	IdentifierDeclStatement	char * tmp = NULL ;	664:1:17565:17581	720208	0	True				
ANR	720212	IdentifierDecl	* tmp = NULL		720208	0					
ANR	720213	IdentifierDeclType	char *		720208	0					
ANR	720214	Identifier	tmp		720208	1					
ANR	720215	AssignmentExpression	* tmp = NULL		720208	2		=			
ANR	720216	Identifier	NULL		720208	0					
ANR	720217	Identifier	NULL		720208	1					
ANR	720218	IfStatement	"if ( ! c_ad -> LookupString ( ATTR_USER , & tmp ) )"		720208	1					
ANR	720219	Condition	"! c_ad -> LookupString ( ATTR_USER , & tmp )"	665:5:17588:17624	720208	0	True				
ANR	720220	UnaryOperationExpression	"! c_ad -> LookupString ( ATTR_USER , & tmp )"		720208	0					
ANR	720221	UnaryOperator	!		720208	0					
ANR	720222	CallExpression	"c_ad -> LookupString ( ATTR_USER , & tmp )"		720208	1					
ANR	720223	Callee	c_ad -> LookupString		720208	0					
ANR	720224	PtrMemberAccess	c_ad -> LookupString		720208	0					
ANR	720225	Identifier	c_ad		720208	0					
ANR	720226	Identifier	LookupString		720208	1					
ANR	720227	ArgumentList	ATTR_USER		720208	1					
ANR	720228	Argument	ATTR_USER		720208	0					
ANR	720229	Identifier	ATTR_USER		720208	0					
ANR	720230	Argument	& tmp		720208	1					
ANR	720231	UnaryOperationExpression	& tmp		720208	0					
ANR	720232	UnaryOperator	&		720208	0					
ANR	720233	Identifier	tmp		720208	1					
ANR	720234	CompoundStatement		9:45:334:334	720208	1					
ANR	720235	IfStatement	if ( c_type != CLAIM_COD )		720208	0					
ANR	720236	Condition	c_type != CLAIM_COD	666:6:17636:17654	720208	0	True				
ANR	720237	EqualityExpression	c_type != CLAIM_COD		720208	0		!=			
ANR	720238	Identifier	c_type		720208	0					
ANR	720239	Identifier	CLAIM_COD		720208	1					
ANR	720240	CompoundStatement		10:28:364:364	720208	1					
ANR	720241	Statement	c_rip	667:3:17664:17668	720208	0	True				
ANR	720242	Statement	->	667:8:17669:17670	720208	1	True				
ANR	720243	Statement	dprintf	667:10:17671:17677	720208	2	True				
ANR	720244	Statement	(	667:17:17678:17678	720208	3	True				
ANR	720245	Statement	D_FULLDEBUG	667:19:17680:17690	720208	4	True				
ANR	720246	Statement	","	667:30:17691:17691	720208	5	True				
ANR	720247	Statement	"""WARNING: %s not defined in """	667:32:17693:17721	720208	6	True				
ANR	720248	Statement	"""request classad!  Using old value (%s)\\n"""	668:8:17731:17772	720208	7	True				
ANR	720249	Statement	","	668:50:17773:17773	720208	8	True				
ANR	720250	Statement	ATTR_USER	669:8:17784:17792	720208	9	True				
ANR	720251	Statement	","	669:17:17793:17793	720208	10	True				
ANR	720252	Statement	c_client	669:19:17795:17802	720208	11	True				
ANR	720253	Statement	->	669:27:17803:17804	720208	12	True				
ANR	720254	Statement	user	669:29:17805:17808	720208	13	True				
ANR	720255	Statement	(	669:33:17809:17809	720208	14	True				
ANR	720256	Statement	)	669:34:17810:17810	720208	15	True				
ANR	720257	Statement	)	669:36:17812:17812	720208	16	True				
ANR	720258	ExpressionStatement		669:37:17813:17813	720208	17	True				
ANR	720259	ElseStatement	else		720208	0					
ANR	720260	CompoundStatement		15:8:533:533	720208	0					
ANR	720261	ExpressionStatement	"c_rip -> dprintf ( D_FULLDEBUG , ""Got RemoteUser (%s) from request classad\\n"" , tmp )"	672:2:17831:17918	720208	0	True				
ANR	720262	CallExpression	"c_rip -> dprintf ( D_FULLDEBUG , ""Got RemoteUser (%s) from request classad\\n"" , tmp )"		720208	0					
ANR	720263	Callee	c_rip -> dprintf		720208	0					
ANR	720264	PtrMemberAccess	c_rip -> dprintf		720208	0					
ANR	720265	Identifier	c_rip		720208	0					
ANR	720266	Identifier	dprintf		720208	1					
ANR	720267	ArgumentList	D_FULLDEBUG		720208	1					
ANR	720268	Argument	D_FULLDEBUG		720208	0					
ANR	720269	Identifier	D_FULLDEBUG		720208	0					
ANR	720270	Argument	"""Got RemoteUser (%s) from request classad\\n"""		720208	1					
ANR	720271	PrimaryExpression	"""Got RemoteUser (%s) from request classad\\n"""		720208	0					
ANR	720272	Argument	tmp		720208	2					
ANR	720273	Identifier	tmp		720208	0					
ANR	720274	ExpressionStatement	c_client -> setuser ( tmp )	674:2:17923:17947	720208	1	True				
ANR	720275	CallExpression	c_client -> setuser ( tmp )		720208	0					
ANR	720276	Callee	c_client -> setuser		720208	0					
ANR	720277	PtrMemberAccess	c_client -> setuser		720208	0					
ANR	720278	Identifier	c_client		720208	0					
ANR	720279	Identifier	setuser		720208	1					
ANR	720280	ArgumentList	tmp		720208	1					
ANR	720281	Argument	tmp		720208	0					
ANR	720282	Identifier	tmp		720208	0					
ANR	720283	ExpressionStatement	free ( tmp )	675:2:17951:17962	720208	2	True				
ANR	720284	CallExpression	free ( tmp )		720208	0					
ANR	720285	Callee	free		720208	0					
ANR	720286	Identifier	free		720208	0					
ANR	720287	ArgumentList	tmp		720208	1					
ANR	720288	Argument	tmp		720208	0					
ANR	720289	Identifier	tmp		720208	0					
ANR	720290	ExpressionStatement	tmp = NULL	676:2:17966:17976	720208	3	True				
ANR	720291	AssignmentExpression	tmp = NULL		720208	0		=			
ANR	720292	Identifier	tmp		720208	0					
ANR	720293	Identifier	NULL		720208	1					
ANR	720294	IfStatement	"if ( c_ad -> LookupString ( ATTR_ACCOUNTING_GROUP , & tmp ) )"		720208	2					
ANR	720295	Condition	"c_ad -> LookupString ( ATTR_ACCOUNTING_GROUP , & tmp )"	681:5:18070:18116	720208	0	True				
ANR	720296	CallExpression	"c_ad -> LookupString ( ATTR_ACCOUNTING_GROUP , & tmp )"		720208	0					
ANR	720297	Callee	c_ad -> LookupString		720208	0					
ANR	720298	PtrMemberAccess	c_ad -> LookupString		720208	0					
ANR	720299	Identifier	c_ad		720208	0					
ANR	720300	Identifier	LookupString		720208	1					
ANR	720301	ArgumentList	ATTR_ACCOUNTING_GROUP		720208	1					
ANR	720302	Argument	ATTR_ACCOUNTING_GROUP		720208	0					
ANR	720303	Identifier	ATTR_ACCOUNTING_GROUP		720208	0					
ANR	720304	Argument	& tmp		720208	1					
ANR	720305	UnaryOperationExpression	& tmp		720208	0					
ANR	720306	UnaryOperator	&		720208	0					
ANR	720307	Identifier	tmp		720208	1					
ANR	720308	CompoundStatement		25:55:826:826	720208	1					
ANR	720309	ExpressionStatement	c_client -> setAccountingGroup ( tmp )	682:2:18124:18159	720208	0	True				
ANR	720310	CallExpression	c_client -> setAccountingGroup ( tmp )		720208	0					
ANR	720311	Callee	c_client -> setAccountingGroup		720208	0					
ANR	720312	PtrMemberAccess	c_client -> setAccountingGroup		720208	0					
ANR	720313	Identifier	c_client		720208	0					
ANR	720314	Identifier	setAccountingGroup		720208	1					
ANR	720315	ArgumentList	tmp		720208	1					
ANR	720316	Argument	tmp		720208	0					
ANR	720317	Identifier	tmp		720208	0					
ANR	720318	ExpressionStatement	free ( tmp )	683:2:18163:18174	720208	1	True				
ANR	720319	CallExpression	free ( tmp )		720208	0					
ANR	720320	Callee	free		720208	0					
ANR	720321	Identifier	free		720208	0					
ANR	720322	ArgumentList	tmp		720208	1					
ANR	720323	Argument	tmp		720208	0					
ANR	720324	Identifier	tmp		720208	0					
ANR	720325	ExpressionStatement	tmp = NULL	684:2:18178:18188	720208	2	True				
ANR	720326	AssignmentExpression	tmp = NULL		720208	0		=			
ANR	720327	Identifier	tmp		720208	0					
ANR	720328	Identifier	NULL		720208	1					
ANR	720329	IfStatement	if ( ! c_client -> owner ( ) )		720208	3					
ANR	720330	Condition	! c_client -> owner ( )	687:4:18198:18215	720208	0	True				
ANR	720331	UnaryOperationExpression	! c_client -> owner ( )		720208	0					
ANR	720332	UnaryOperator	!		720208	0					
ANR	720333	CallExpression	c_client -> owner ( )		720208	1					
ANR	720334	Callee	c_client -> owner		720208	0					
ANR	720335	PtrMemberAccess	c_client -> owner		720208	0					
ANR	720336	Identifier	c_client		720208	0					
ANR	720337	Identifier	owner		720208	1					
ANR	720338	ArgumentList			720208	1					
ANR	720339	CompoundStatement		31:24:924:924	720208	1					
ANR	720340	IfStatement	"if ( c_ad -> LookupString ( ATTR_OWNER , & tmp ) )"		720208	0					
ANR	720341	Condition	"c_ad -> LookupString ( ATTR_OWNER , & tmp )"	689:5:18286:18321	720208	0	True				
ANR	720342	CallExpression	"c_ad -> LookupString ( ATTR_OWNER , & tmp )"		720208	0					
ANR	720343	Callee	c_ad -> LookupString		720208	0					
ANR	720344	PtrMemberAccess	c_ad -> LookupString		720208	0					
ANR	720345	Identifier	c_ad		720208	0					
ANR	720346	Identifier	LookupString		720208	1					
ANR	720347	ArgumentList	ATTR_OWNER		720208	1					
ANR	720348	Argument	ATTR_OWNER		720208	0					
ANR	720349	Identifier	ATTR_OWNER		720208	0					
ANR	720350	Argument	& tmp		720208	1					
ANR	720351	UnaryOperationExpression	& tmp		720208	0					
ANR	720352	UnaryOperator	&		720208	0					
ANR	720353	Identifier	tmp		720208	1					
ANR	720354	CompoundStatement		33:43:1030:1030	720208	1					
ANR	720355	ExpressionStatement	c_client -> setowner ( tmp )	690:3:18329:18354	720208	0	True				
ANR	720356	CallExpression	c_client -> setowner ( tmp )		720208	0					
ANR	720357	Callee	c_client -> setowner		720208	0					
ANR	720358	PtrMemberAccess	c_client -> setowner		720208	0					
ANR	720359	Identifier	c_client		720208	0					
ANR	720360	Identifier	setowner		720208	1					
ANR	720361	ArgumentList	tmp		720208	1					
ANR	720362	Argument	tmp		720208	0					
ANR	720363	Identifier	tmp		720208	0					
ANR	720364	ExpressionStatement	free ( tmp )	691:3:18359:18370	720208	1	True				
ANR	720365	CallExpression	free ( tmp )		720208	0					
ANR	720366	Callee	free		720208	0					
ANR	720367	Identifier	free		720208	0					
ANR	720368	ArgumentList	tmp		720208	1					
ANR	720369	Argument	tmp		720208	0					
ANR	720370	Identifier	tmp		720208	0					
ANR	720371	ExpressionStatement	tmp = NULL	692:3:18375:18385	720208	2	True				
ANR	720372	AssignmentExpression	tmp = NULL		720208	0		=			
ANR	720373	Identifier	tmp		720208	0					
ANR	720374	Identifier	NULL		720208	1					
ANR	720375	ReturnType	void		720208	1					
ANR	720376	Identifier	Claim :: loadAccountingInfo		720208	2					
ANR	720377	ParameterList			720208	3					
ANR	720378	CFGEntryNode	ENTRY		720208		True				
ANR	720379	CFGExitNode	EXIT		720208		True				
ANR	720380	Symbol	c_rip		720208						
ANR	720381	Symbol	NULL		720208						
ANR	720382	Symbol	ATTR_USER		720208						
ANR	720383	Symbol	CLAIM_COD		720208						
ANR	720384	Symbol	* c_ad		720208						
ANR	720385	Symbol	D_FULLDEBUG		720208						
ANR	720386	Symbol	* c_client		720208						
ANR	720387	Symbol	c_client -> owner		720208						
ANR	720388	Symbol	c_client		720208						
ANR	720389	Symbol	c_ad		720208						
ANR	720390	Symbol	c_ad -> LookupString		720208						
ANR	720391	Symbol	ATTR_ACCOUNTING_GROUP		720208						
ANR	720392	Symbol	tmp		720208						
ANR	720393	Symbol	c_type		720208						
ANR	720394	Symbol	& tmp		720208						
ANR	720395	Symbol	ATTR_OWNER		720208						
ANR	720396	Function	Claim :: loadRequestInfo	697:0:18397:18684							
ANR	720397	FunctionDef	Claim :: loadRequestInfo ()		720396	0					
ANR	720398	CompoundStatement		699:0:18427:18684	720396	0					
ANR	720399	IdentifierDeclStatement	char * limits = NULL ;	702:1:18517:18536	720396	0	True				
ANR	720400	IdentifierDecl	* limits = NULL		720396	0					
ANR	720401	IdentifierDeclType	char *		720396	0					
ANR	720402	Identifier	limits		720396	1					
ANR	720403	AssignmentExpression	* limits = NULL		720396	2		=			
ANR	720404	Identifier	NULL		720396	0					
ANR	720405	Identifier	NULL		720396	1					
ANR	720406	ExpressionStatement	"c_ad -> LookupString ( ATTR_CONCURRENCY_LIMITS , & limits )"	703:1:18539:18591	720396	1	True				
ANR	720407	CallExpression	"c_ad -> LookupString ( ATTR_CONCURRENCY_LIMITS , & limits )"		720396	0					
ANR	720408	Callee	c_ad -> LookupString		720396	0					
ANR	720409	PtrMemberAccess	c_ad -> LookupString		720396	0					
ANR	720410	Identifier	c_ad		720396	0					
ANR	720411	Identifier	LookupString		720396	1					
ANR	720412	ArgumentList	ATTR_CONCURRENCY_LIMITS		720396	1					
ANR	720413	Argument	ATTR_CONCURRENCY_LIMITS		720396	0					
ANR	720414	Identifier	ATTR_CONCURRENCY_LIMITS		720396	0					
ANR	720415	Argument	& limits		720396	1					
ANR	720416	UnaryOperationExpression	& limits		720396	0					
ANR	720417	UnaryOperator	&		720396	0					
ANR	720418	Identifier	limits		720396	1					
ANR	720419	IfStatement	if ( limits )		720396	2					
ANR	720420	Condition	limits	704:5:18598:18603	720396	0	True				
ANR	720421	Identifier	limits		720396	0					
ANR	720422	CompoundStatement		6:13:178:178	720396	1					
ANR	720423	ExpressionStatement	c_client -> setConcurrencyLimits ( limits )	705:2:18610:18648	720396	0	True				
ANR	720424	CallExpression	c_client -> setConcurrencyLimits ( limits )		720396	0					
ANR	720425	Callee	c_client -> setConcurrencyLimits		720396	0					
ANR	720426	PtrMemberAccess	c_client -> setConcurrencyLimits		720396	0					
ANR	720427	Identifier	c_client		720396	0					
ANR	720428	Identifier	setConcurrencyLimits		720396	1					
ANR	720429	ArgumentList	limits		720396	1					
ANR	720430	Argument	limits		720396	0					
ANR	720431	Identifier	limits		720396	0					
ANR	720432	ExpressionStatement	free ( limits )	706:2:18652:18664	720396	1	True				
ANR	720433	CallExpression	free ( limits )		720396	0					
ANR	720434	Callee	free		720396	0					
ANR	720435	Identifier	free		720396	0					
ANR	720436	ArgumentList	limits		720396	1					
ANR	720437	Argument	limits		720396	0					
ANR	720438	Identifier	limits		720396	0					
ANR	720439	ExpressionStatement	limits = NULL	706:16:18666:18679	720396	2	True				
ANR	720440	AssignmentExpression	limits = NULL		720396	0		=			
ANR	720441	Identifier	limits		720396	0					
ANR	720442	Identifier	NULL		720396	1					
ANR	720443	ReturnType	void		720396	1					
ANR	720444	Identifier	Claim :: loadRequestInfo		720396	2					
ANR	720445	ParameterList			720396	3					
ANR	720446	CFGEntryNode	ENTRY		720396		True				
ANR	720447	CFGExitNode	EXIT		720396		True				
ANR	720448	Symbol	c_client		720396						
ANR	720449	Symbol	c_ad		720396						
ANR	720450	Symbol	NULL		720396						
ANR	720451	Symbol	ATTR_CONCURRENCY_LIMITS		720396						
ANR	720452	Symbol	& limits		720396						
ANR	720453	Symbol	limits		720396						
ANR	720454	Function	Claim :: loadStatistics	710:0:18687:18925							
ANR	720455	FunctionDef	Claim :: loadStatistics ()		720454	0					
ANR	720456	CompoundStatement		712:0:18716:18925	720454	0					
ANR	720457	IfStatement	if ( c_client )		720454	0					
ANR	720458	Condition	c_client	715:6:18801:18808	720454	0	True				
ANR	720459	Identifier	c_client		720454	0					
ANR	720460	CompoundStatement		5:2:99:117	720454	1					
ANR	720461	IdentifierDeclStatement	int numJobPids = 0 ;	716:2:18816:18834	720454	0	True				
ANR	720462	IdentifierDecl	numJobPids = 0		720454	0					
ANR	720463	IdentifierDeclType	int		720454	0					
ANR	720464	Identifier	numJobPids		720454	1					
ANR	720465	AssignmentExpression	numJobPids = 0		720454	2		=			
ANR	720466	Identifier	numJobPids		720454	0					
ANR	720467	PrimaryExpression	0		720454	1					
ANR	720468	ExpressionStatement	"c_ad -> LookupInteger ( ATTR_NUM_PIDS , numJobPids )"	717:2:18838:18884	720454	1	True				
ANR	720469	CallExpression	"c_ad -> LookupInteger ( ATTR_NUM_PIDS , numJobPids )"		720454	0					
ANR	720470	Callee	c_ad -> LookupInteger		720454	0					
ANR	720471	PtrMemberAccess	c_ad -> LookupInteger		720454	0					
ANR	720472	Identifier	c_ad		720454	0					
ANR	720473	Identifier	LookupInteger		720454	1					
ANR	720474	ArgumentList	ATTR_NUM_PIDS		720454	1					
ANR	720475	Argument	ATTR_NUM_PIDS		720454	0					
ANR	720476	Identifier	ATTR_NUM_PIDS		720454	0					
ANR	720477	Argument	numJobPids		720454	1					
ANR	720478	Identifier	numJobPids		720454	0					
ANR	720479	ExpressionStatement	c_client -> setNumPids ( numJobPids )	718:2:18888:18920	720454	2	True				
ANR	720480	CallExpression	c_client -> setNumPids ( numJobPids )		720454	0					
ANR	720481	Callee	c_client -> setNumPids		720454	0					
ANR	720482	PtrMemberAccess	c_client -> setNumPids		720454	0					
ANR	720483	Identifier	c_client		720454	0					
ANR	720484	Identifier	setNumPids		720454	1					
ANR	720485	ArgumentList	numJobPids		720454	1					
ANR	720486	Argument	numJobPids		720454	0					
ANR	720487	Identifier	numJobPids		720454	0					
ANR	720488	ReturnType	void		720454	1					
ANR	720489	Identifier	Claim :: loadStatistics		720454	2					
ANR	720490	ParameterList			720454	3					
ANR	720491	CFGEntryNode	ENTRY		720454		True				
ANR	720492	CFGExitNode	EXIT		720454		True				
ANR	720493	Symbol	c_client		720454						
ANR	720494	Symbol	c_ad		720454						
ANR	720495	Symbol	numJobPids		720454						
ANR	720496	Symbol	ATTR_NUM_PIDS		720454						
ANR	720497	Function	Claim :: beginActivation	722:0:18928:20225							
ANR	720498	FunctionDef	Claim :: beginActivation (time_t now)		720497	0					
ANR	720499	CompoundStatement		724:0:18970:20225	720497	0					
ANR	720500	ExpressionStatement	loadAccountingInfo ( )	725:1:18973:18993	720497	0	True				
ANR	720501	CallExpression	loadAccountingInfo ( )		720497	0					
ANR	720502	Callee	loadAccountingInfo		720497	0					
ANR	720503	Identifier	loadAccountingInfo		720497	0					
ANR	720504	ArgumentList			720497	1					
ANR	720505	ExpressionStatement	c_activation_count += 1	727:1:18997:19020	720497	1	True				
ANR	720506	AssignmentExpression	c_activation_count += 1		720497	0		+=			
ANR	720507	Identifier	c_activation_count		720497	0					
ANR	720508	PrimaryExpression	1		720497	1					
ANR	720509	ExpressionStatement	c_job_start = ( int ) now	729:1:19024:19046	720497	2	True				
ANR	720510	AssignmentExpression	c_job_start = ( int ) now		720497	0		=			
ANR	720511	Identifier	c_job_start		720497	0					
ANR	720512	CastExpression	( int ) now		720497	1					
ANR	720513	CastTarget	int		720497	0					
ANR	720514	Identifier	now		720497	1					
ANR	720515	ExpressionStatement	c_pledged_machine_max_vacate_time = 0	731:1:19050:19087	720497	3	True				
ANR	720516	AssignmentExpression	c_pledged_machine_max_vacate_time = 0		720497	0		=			
ANR	720517	Identifier	c_pledged_machine_max_vacate_time		720497	0					
ANR	720518	PrimaryExpression	0		720497	1					
ANR	720519	IfStatement	if ( c_rip -> r_classad -> LookupExpr ( ATTR_MACHINE_MAX_VACATE_TIME ) )		720497	4					
ANR	720520	Condition	c_rip -> r_classad -> LookupExpr ( ATTR_MACHINE_MAX_VACATE_TIME )	732:4:19093:19150	720497	0	True				
ANR	720521	CallExpression	c_rip -> r_classad -> LookupExpr ( ATTR_MACHINE_MAX_VACATE_TIME )		720497	0					
ANR	720522	Callee	c_rip -> r_classad -> LookupExpr		720497	0					
ANR	720523	PtrMemberAccess	c_rip -> r_classad -> LookupExpr		720497	0					
ANR	720524	PtrMemberAccess	c_rip -> r_classad		720497	0					
ANR	720525	Identifier	c_rip		720497	0					
ANR	720526	Identifier	r_classad		720497	1					
ANR	720527	Identifier	LookupExpr		720497	1					
ANR	720528	ArgumentList	ATTR_MACHINE_MAX_VACATE_TIME		720497	1					
ANR	720529	Argument	ATTR_MACHINE_MAX_VACATE_TIME		720497	0					
ANR	720530	Identifier	ATTR_MACHINE_MAX_VACATE_TIME		720497	0					
ANR	720531	CompoundStatement		9:64:182:182	720497	1					
ANR	720532	IfStatement	"if ( ! c_rip -> r_classad -> EvalInteger ( ATTR_MACHINE_MAX_VACATE_TIME , c_ad , c_pledged_machine_max_vacate_time ) )"		720497	0					
ANR	720533	Condition	"! c_rip -> r_classad -> EvalInteger ( ATTR_MACHINE_MAX_VACATE_TIME , c_ad , c_pledged_machine_max_vacate_time )"	733:6:19161:19271	720497	0	True				
ANR	720534	UnaryOperationExpression	"! c_rip -> r_classad -> EvalInteger ( ATTR_MACHINE_MAX_VACATE_TIME , c_ad , c_pledged_machine_max_vacate_time )"		720497	0					
ANR	720535	UnaryOperator	!		720497	0					
ANR	720536	CallExpression	"c_rip -> r_classad -> EvalInteger ( ATTR_MACHINE_MAX_VACATE_TIME , c_ad , c_pledged_machine_max_vacate_time )"		720497	1					
ANR	720537	Callee	c_rip -> r_classad -> EvalInteger		720497	0					
ANR	720538	PtrMemberAccess	c_rip -> r_classad -> EvalInteger		720497	0					
ANR	720539	PtrMemberAccess	c_rip -> r_classad		720497	0					
ANR	720540	Identifier	c_rip		720497	0					
ANR	720541	Identifier	r_classad		720497	1					
ANR	720542	Identifier	EvalInteger		720497	1					
ANR	720543	ArgumentList	ATTR_MACHINE_MAX_VACATE_TIME		720497	1					
ANR	720544	Argument	ATTR_MACHINE_MAX_VACATE_TIME		720497	0					
ANR	720545	Identifier	ATTR_MACHINE_MAX_VACATE_TIME		720497	0					
ANR	720546	Argument	c_ad		720497	1					
ANR	720547	Identifier	c_ad		720497	0					
ANR	720548	Argument	c_pledged_machine_max_vacate_time		720497	2					
ANR	720549	Identifier	c_pledged_machine_max_vacate_time		720497	0					
ANR	720550	CompoundStatement		14:2:305:305	720497	1					
ANR	720551	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to evaluate %s as an integer.\\n"" , ATTR_MACHINE_MAX_VACATE_TIME )"	738:3:19281:19368	720497	0	True				
ANR	720552	CallExpression	"dprintf ( D_ALWAYS , ""Failed to evaluate %s as an integer.\\n"" , ATTR_MACHINE_MAX_VACATE_TIME )"		720497	0					
ANR	720553	Callee	dprintf		720497	0					
ANR	720554	Identifier	dprintf		720497	0					
ANR	720555	ArgumentList	D_ALWAYS		720497	1					
ANR	720556	Argument	D_ALWAYS		720497	0					
ANR	720557	Identifier	D_ALWAYS		720497	0					
ANR	720558	Argument	"""Failed to evaluate %s as an integer.\\n"""		720497	1					
ANR	720559	PrimaryExpression	"""Failed to evaluate %s as an integer.\\n"""		720497	0					
ANR	720560	Argument	ATTR_MACHINE_MAX_VACATE_TIME		720497	2					
ANR	720561	Identifier	ATTR_MACHINE_MAX_VACATE_TIME		720497	0					
ANR	720562	ExpressionStatement	c_pledged_machine_max_vacate_time = 0	739:3:19373:19410	720497	1	True				
ANR	720563	AssignmentExpression	c_pledged_machine_max_vacate_time = 0		720497	0		=			
ANR	720564	Identifier	c_pledged_machine_max_vacate_time		720497	0					
ANR	720565	PrimaryExpression	0		720497	1					
ANR	720566	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""pledged MachineMaxVacateTime = %d\\n"" , c_pledged_machine_max_vacate_time )"	742:1:19420:19512	720497	5	True				
ANR	720567	CallExpression	"dprintf ( D_FULLDEBUG , ""pledged MachineMaxVacateTime = %d\\n"" , c_pledged_machine_max_vacate_time )"		720497	0					
ANR	720568	Callee	dprintf		720497	0					
ANR	720569	Identifier	dprintf		720497	0					
ANR	720570	ArgumentList	D_FULLDEBUG		720497	1					
ANR	720571	Argument	D_FULLDEBUG		720497	0					
ANR	720572	Identifier	D_FULLDEBUG		720497	0					
ANR	720573	Argument	"""pledged MachineMaxVacateTime = %d\\n"""		720497	1					
ANR	720574	PrimaryExpression	"""pledged MachineMaxVacateTime = %d\\n"""		720497	0					
ANR	720575	Argument	c_pledged_machine_max_vacate_time		720497	2					
ANR	720576	Identifier	c_pledged_machine_max_vacate_time		720497	0					
ANR	720577	IfStatement	if ( c_type == CLAIM_COD )		720497	6					
ANR	720578	Condition	c_type == CLAIM_COD	748:5:19679:19697	720497	0	True				
ANR	720579	EqualityExpression	c_type == CLAIM_COD		720497	0		==			
ANR	720580	Identifier	c_type		720497	0					
ANR	720581	Identifier	CLAIM_COD		720497	1					
ANR	720582	CompoundStatement		25:27:730:730	720497	1					
ANR	720583	ReturnStatement	return ;	749:2:19705:19711	720497	0	True				
ANR	720584	IdentifierDeclStatement	int univ ;	752:1:19718:19726	720497	7	True				
ANR	720585	IdentifierDecl	univ		720497	0					
ANR	720586	IdentifierDeclType	int		720497	0					
ANR	720587	Identifier	univ		720497	1					
ANR	720588	IfStatement	"if ( c_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) == 0 )"		720497	8					
ANR	720589	Condition	"c_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) == 0"	753:5:19733:19781	720497	0	True				
ANR	720590	EqualityExpression	"c_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) == 0"		720497	0		==			
ANR	720591	CallExpression	"c_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , univ )"		720497	0					
ANR	720592	Callee	c_ad -> LookupInteger		720497	0					
ANR	720593	PtrMemberAccess	c_ad -> LookupInteger		720497	0					
ANR	720594	Identifier	c_ad		720497	0					
ANR	720595	Identifier	LookupInteger		720497	1					
ANR	720596	ArgumentList	ATTR_JOB_UNIVERSE		720497	1					
ANR	720597	Argument	ATTR_JOB_UNIVERSE		720497	0					
ANR	720598	Identifier	ATTR_JOB_UNIVERSE		720497	0					
ANR	720599	Argument	univ		720497	1					
ANR	720600	Identifier	univ		720497	0					
ANR	720601	PrimaryExpression	0		720497	1					
ANR	720602	CompoundStatement		30:57:814:814	720497	1					
ANR	720603	ExpressionStatement	univ = CONDOR_UNIVERSE_STANDARD	754:2:19789:19820	720497	0	True				
ANR	720604	AssignmentExpression	univ = CONDOR_UNIVERSE_STANDARD		720497	0		=			
ANR	720605	Identifier	univ		720497	0					
ANR	720606	Identifier	CONDOR_UNIVERSE_STANDARD		720497	1					
ANR	720607	Statement	c_rip	755:2:19824:19828	720497	1	True				
ANR	720608	Statement	->	755:7:19829:19830	720497	2	True				
ANR	720609	Statement	dprintf	755:9:19831:19837	720497	3	True				
ANR	720610	Statement	(	755:16:19838:19838	720497	4	True				
ANR	720611	Statement	D_ALWAYS	755:18:19840:19847	720497	5	True				
ANR	720612	Statement	","	755:26:19848:19848	720497	6	True				
ANR	720613	Statement	"""Default universe \\""%s\\"" (%d) """	755:28:19850:19880	720497	7	True				
ANR	720614	Statement	"""since not in classad\\n"""	756:6:19888:19911	720497	8	True				
ANR	720615	Statement	","	756:30:19912:19912	720497	9	True				
ANR	720616	Statement	CondorUniverseName	757:6:19920:19937	720497	10	True				
ANR	720617	Statement	(	757:24:19938:19938	720497	11	True				
ANR	720618	Statement	univ	757:25:19939:19942	720497	12	True				
ANR	720619	Statement	)	757:29:19943:19943	720497	13	True				
ANR	720620	Statement	","	757:30:19944:19944	720497	14	True				
ANR	720621	Statement	univ	757:32:19946:19949	720497	15	True				
ANR	720622	Statement	)	757:37:19951:19951	720497	16	True				
ANR	720623	ExpressionStatement		757:38:19952:19952	720497	17	True				
ANR	720624	ElseStatement	else		720497	0					
ANR	720625	CompoundStatement		35:8:991:991	720497	0					
ANR	720626	Statement	c_rip	759:2:19966:19970	720497	0	True				
ANR	720627	Statement	->	759:7:19971:19972	720497	1	True				
ANR	720628	Statement	dprintf	759:9:19973:19979	720497	2	True				
ANR	720629	Statement	(	759:16:19980:19980	720497	3	True				
ANR	720630	Statement	D_ALWAYS	759:18:19982:19989	720497	4	True				
ANR	720631	Statement	","	759:26:19990:19990	720497	5	True				
ANR	720632	Statement	"""Got universe \\""%s\\"" (%d) """	759:28:19992:20018	720497	6	True				
ANR	720633	Statement	"""from request classad\\n"""	760:6:20026:20049	720497	7	True				
ANR	720634	Statement	","	760:30:20050:20050	720497	8	True				
ANR	720635	Statement	CondorUniverseName	761:6:20058:20075	720497	9	True				
ANR	720636	Statement	(	761:24:20076:20076	720497	10	True				
ANR	720637	Statement	univ	761:25:20077:20080	720497	11	True				
ANR	720638	Statement	)	761:29:20081:20081	720497	12	True				
ANR	720639	Statement	","	761:30:20082:20082	720497	13	True				
ANR	720640	Statement	univ	761:32:20084:20087	720497	14	True				
ANR	720641	Statement	)	761:37:20089:20089	720497	15	True				
ANR	720642	ExpressionStatement		761:38:20090:20090	720497	16	True				
ANR	720643	ExpressionStatement	c_universe = univ	763:1:20096:20113	720497	9	True				
ANR	720644	AssignmentExpression	c_universe = univ		720497	0		=			
ANR	720645	Identifier	c_universe		720497	0					
ANR	720646	Identifier	univ		720497	1					
ANR	720647	IfStatement	if ( ( univ == CONDOR_UNIVERSE_STANDARD ) || ( univ == CONDOR_UNIVERSE_VM ) )		720497	10					
ANR	720648	Condition	( univ == CONDOR_UNIVERSE_STANDARD ) || ( univ == CONDOR_UNIVERSE_VM )	765:5:20121:20190	720497	0	True				
ANR	720649	OrExpression	( univ == CONDOR_UNIVERSE_STANDARD ) || ( univ == CONDOR_UNIVERSE_VM )		720497	0		||			
ANR	720650	EqualityExpression	univ == CONDOR_UNIVERSE_STANDARD		720497	0		==			
ANR	720651	Identifier	univ		720497	0					
ANR	720652	Identifier	CONDOR_UNIVERSE_STANDARD		720497	1					
ANR	720653	EqualityExpression	univ == CONDOR_UNIVERSE_VM		720497	1		==			
ANR	720654	Identifier	univ		720497	0					
ANR	720655	Identifier	CONDOR_UNIVERSE_VM		720497	1					
ANR	720656	CompoundStatement		43:33:1222:1222	720497	1					
ANR	720657	ExpressionStatement	c_last_pckpt = ( int ) now	767:2:20197:20220	720497	0	True				
ANR	720658	AssignmentExpression	c_last_pckpt = ( int ) now		720497	0		=			
ANR	720659	Identifier	c_last_pckpt		720497	0					
ANR	720660	CastExpression	( int ) now		720497	1					
ANR	720661	CastTarget	int		720497	0					
ANR	720662	Identifier	now		720497	1					
ANR	720663	ReturnType	void		720497	1					
ANR	720664	Identifier	Claim :: beginActivation		720497	2					
ANR	720665	ParameterList	time_t now		720497	3					
ANR	720666	Parameter	time_t now	723:24:18957:18966	720497	0	True				
ANR	720667	ParameterType	time_t		720497	0					
ANR	720668	Identifier	now		720497	1					
ANR	720669	CFGEntryNode	ENTRY		720497		True				
ANR	720670	CFGExitNode	EXIT		720497		True				
ANR	720671	Symbol	c_activation_count		720497						
ANR	720672	Symbol	* c_rip -> r_classad		720497						
ANR	720673	Symbol	* c_rip		720497						
ANR	720674	Symbol	CLAIM_COD		720497						
ANR	720675	Symbol	c_rip -> r_classad -> LookupExpr		720497						
ANR	720676	Symbol	c_ad		720497						
ANR	720677	Symbol	now		720497						
ANR	720678	Symbol	c_pledged_machine_max_vacate_time		720497						
ANR	720679	Symbol	c_universe		720497						
ANR	720680	Symbol	c_rip		720497						
ANR	720681	Symbol	c_rip -> r_classad		720497						
ANR	720682	Symbol	c_last_pckpt		720497						
ANR	720683	Symbol	CONDOR_UNIVERSE_STANDARD		720497						
ANR	720684	Symbol	c_rip -> r_classad -> EvalInteger		720497						
ANR	720685	Symbol	D_ALWAYS		720497						
ANR	720686	Symbol	c_ad -> LookupInteger		720497						
ANR	720687	Symbol	* c_ad		720497						
ANR	720688	Symbol	D_FULLDEBUG		720497						
ANR	720689	Symbol	c_job_start		720497						
ANR	720690	Symbol	univ		720497						
ANR	720691	Symbol	* * c_rip		720497						
ANR	720692	Symbol	ATTR_JOB_UNIVERSE		720497						
ANR	720693	Symbol	c_type		720497						
ANR	720694	Symbol	CONDOR_UNIVERSE_VM		720497						
ANR	720695	Symbol	ATTR_MACHINE_MAX_VACATE_TIME		720497						
ANR	720696	Function	Claim :: setaliveint	772:0:20229:20530							
ANR	720697	FunctionDef	Claim :: setaliveint (int new_alive)		720696	0					
ANR	720698	CompoundStatement		774:0:20270:20530	720696	0					
ANR	720699	ExpressionStatement	c_aliveint = new_alive	775:1:20273:20295	720696	0	True				
ANR	720700	AssignmentExpression	c_aliveint = new_alive		720696	0		=			
ANR	720701	Identifier	c_aliveint		720696	0					
ANR	720702	Identifier	new_alive		720696	1					
ANR	720703	ExpressionStatement	c_lease_duration = max_claim_alives_missed * new_alive	779:1:20474:20528	720696	1	True				
ANR	720704	AssignmentExpression	c_lease_duration = max_claim_alives_missed * new_alive		720696	0		=			
ANR	720705	Identifier	c_lease_duration		720696	0					
ANR	720706	MultiplicativeExpression	max_claim_alives_missed * new_alive		720696	1		*			
ANR	720707	Identifier	max_claim_alives_missed		720696	0					
ANR	720708	Identifier	new_alive		720696	1					
ANR	720709	ReturnType	void		720696	1					
ANR	720710	Identifier	Claim :: setaliveint		720696	2					
ANR	720711	ParameterList	int new_alive		720696	3					
ANR	720712	Parameter	int new_alive	773:20:20254:20266	720696	0	True				
ANR	720713	ParameterType	int		720696	0					
ANR	720714	Identifier	new_alive		720696	1					
ANR	720715	CFGEntryNode	ENTRY		720696		True				
ANR	720716	CFGExitNode	EXIT		720696		True				
ANR	720717	Symbol	c_lease_duration		720696						
ANR	720718	Symbol	c_aliveint		720696						
ANR	720719	Symbol	new_alive		720696						
ANR	720720	Symbol	max_claim_alives_missed		720696						
ANR	720721	Function	Claim :: saveJobInfo	782:0:20533:22334							
ANR	720722	FunctionDef	Claim :: saveJobInfo (ClassAd * request_ad)		720721	0					
ANR	720723	CompoundStatement		784:0:20580:22334	720721	0					
ANR	720724	IfStatement	if ( request_ad )		720721	0					
ANR	720725	Condition	request_ad	788:5:20766:20775	720721	0	True				
ANR	720726	Identifier	request_ad		720721	0					
ANR	720727	CompoundStatement		5:17:197:197	720721	1					
ANR	720728	ExpressionStatement	setad ( request_ad )	789:2:20782:20799	720721	0	True				
ANR	720729	CallExpression	setad ( request_ad )		720721	0					
ANR	720730	Callee	setad		720721	0					
ANR	720731	Identifier	setad		720721	0					
ANR	720732	ArgumentList	request_ad		720721	1					
ANR	720733	Argument	request_ad		720721	0					
ANR	720734	Identifier	request_ad		720721	0					
ANR	720735	ExpressionStatement	ASSERT ( c_ad )	791:1:20805:20817	720721	1	True				
ANR	720736	CallExpression	ASSERT ( c_ad )		720721	0					
ANR	720737	Callee	ASSERT		720721	0					
ANR	720738	Identifier	ASSERT		720721	0					
ANR	720739	ArgumentList	c_ad		720721	1					
ANR	720740	Argument	c_ad		720721	0					
ANR	720741	Identifier	c_ad		720721	0					
ANR	720742	ExpressionStatement	"c_ad -> LookupInteger ( ATTR_CLUSTER_ID , c_cluster )"	793:1:20821:20870	720721	2	True				
ANR	720743	CallExpression	"c_ad -> LookupInteger ( ATTR_CLUSTER_ID , c_cluster )"		720721	0					
ANR	720744	Callee	c_ad -> LookupInteger		720721	0					
ANR	720745	PtrMemberAccess	c_ad -> LookupInteger		720721	0					
ANR	720746	Identifier	c_ad		720721	0					
ANR	720747	Identifier	LookupInteger		720721	1					
ANR	720748	ArgumentList	ATTR_CLUSTER_ID		720721	1					
ANR	720749	Argument	ATTR_CLUSTER_ID		720721	0					
ANR	720750	Identifier	ATTR_CLUSTER_ID		720721	0					
ANR	720751	Argument	c_cluster		720721	1					
ANR	720752	Identifier	c_cluster		720721	0					
ANR	720753	ExpressionStatement	"c_ad -> LookupInteger ( ATTR_PROC_ID , c_proc )"	794:1:20873:20916	720721	3	True				
ANR	720754	CallExpression	"c_ad -> LookupInteger ( ATTR_PROC_ID , c_proc )"		720721	0					
ANR	720755	Callee	c_ad -> LookupInteger		720721	0					
ANR	720756	PtrMemberAccess	c_ad -> LookupInteger		720721	0					
ANR	720757	Identifier	c_ad		720721	0					
ANR	720758	Identifier	LookupInteger		720721	1					
ANR	720759	ArgumentList	ATTR_PROC_ID		720721	1					
ANR	720760	Argument	ATTR_PROC_ID		720721	0					
ANR	720761	Identifier	ATTR_PROC_ID		720721	0					
ANR	720762	Argument	c_proc		720721	1					
ANR	720763	Identifier	c_proc		720721	0					
ANR	720764	IfStatement	if ( c_cluster >= 0 )		720721	4					
ANR	720765	Condition	c_cluster >= 0	795:5:20923:20936	720721	0	True				
ANR	720766	RelationalExpression	c_cluster >= 0		720721	0		>=			
ANR	720767	Identifier	c_cluster		720721	0					
ANR	720768	PrimaryExpression	0		720721	1					
ANR	720769	CompoundStatement		12:22:359:359	720721	1					
ANR	720770	IfStatement	if ( c_proc < 0 )		720721	0					
ANR	720771	Condition	c_proc < 0	797:6:21004:21013	720721	0	True				
ANR	720772	RelationalExpression	c_proc < 0		720721	0		<			
ANR	720773	Identifier	c_proc		720721	0					
ANR	720774	PrimaryExpression	0		720721	1					
ANR	720775	CompoundStatement		14:19:436:436	720721	1					
ANR	720776	ExpressionStatement	c_proc = 0	798:3:21023:21033	720721	0	True				
ANR	720777	AssignmentExpression	c_proc = 0		720721	0		=			
ANR	720778	Identifier	c_proc		720721	0					
ANR	720779	PrimaryExpression	0		720721	1					
ANR	720780	ExpressionStatement	"c_rip -> dprintf ( D_ALWAYS , ""Remote job ID is %d.%d\\n"" , c_cluster , c_proc )"	801:2:21094:21174	720721	1	True				
ANR	720781	CallExpression	"c_rip -> dprintf ( D_ALWAYS , ""Remote job ID is %d.%d\\n"" , c_cluster , c_proc )"		720721	0					
ANR	720782	Callee	c_rip -> dprintf		720721	0					
ANR	720783	PtrMemberAccess	c_rip -> dprintf		720721	0					
ANR	720784	Identifier	c_rip		720721	0					
ANR	720785	Identifier	dprintf		720721	1					
ANR	720786	ArgumentList	D_ALWAYS		720721	1					
ANR	720787	Argument	D_ALWAYS		720721	0					
ANR	720788	Identifier	D_ALWAYS		720721	0					
ANR	720789	Argument	"""Remote job ID is %d.%d\\n"""		720721	1					
ANR	720790	PrimaryExpression	"""Remote job ID is %d.%d\\n"""		720721	0					
ANR	720791	Argument	c_cluster		720721	2					
ANR	720792	Identifier	c_cluster		720721	0					
ANR	720793	Argument	c_proc		720721	3					
ANR	720794	Identifier	c_proc		720721	0					
ANR	720795	ExpressionStatement	"c_ad -> LookupString ( ATTR_GLOBAL_JOB_ID , & c_global_job_id )"	805:1:21181:21239	720721	5	True				
ANR	720796	CallExpression	"c_ad -> LookupString ( ATTR_GLOBAL_JOB_ID , & c_global_job_id )"		720721	0					
ANR	720797	Callee	c_ad -> LookupString		720721	0					
ANR	720798	PtrMemberAccess	c_ad -> LookupString		720721	0					
ANR	720799	Identifier	c_ad		720721	0					
ANR	720800	Identifier	LookupString		720721	1					
ANR	720801	ArgumentList	ATTR_GLOBAL_JOB_ID		720721	1					
ANR	720802	Argument	ATTR_GLOBAL_JOB_ID		720721	0					
ANR	720803	Identifier	ATTR_GLOBAL_JOB_ID		720721	0					
ANR	720804	Argument	& c_global_job_id		720721	1					
ANR	720805	UnaryOperationExpression	& c_global_job_id		720721	0					
ANR	720806	UnaryOperator	&		720721	0					
ANR	720807	Identifier	c_global_job_id		720721	1					
ANR	720808	IfStatement	if ( c_global_job_id )		720721	6					
ANR	720809	Condition	c_global_job_id	806:5:21246:21260	720721	0	True				
ANR	720810	Identifier	c_global_job_id		720721	0					
ANR	720811	CompoundStatement		23:23:683:683	720721	1					
ANR	720812	ExpressionStatement	"c_rip -> dprintf ( D_FULLDEBUG , ""Remote global job ID is %s\\n"" , c_global_job_id )"	808:2:21321:21406	720721	0	True				
ANR	720813	CallExpression	"c_rip -> dprintf ( D_FULLDEBUG , ""Remote global job ID is %s\\n"" , c_global_job_id )"		720721	0					
ANR	720814	Callee	c_rip -> dprintf		720721	0					
ANR	720815	PtrMemberAccess	c_rip -> dprintf		720721	0					
ANR	720816	Identifier	c_rip		720721	0					
ANR	720817	Identifier	dprintf		720721	1					
ANR	720818	ArgumentList	D_FULLDEBUG		720721	1					
ANR	720819	Argument	D_FULLDEBUG		720721	0					
ANR	720820	Identifier	D_FULLDEBUG		720721	0					
ANR	720821	Argument	"""Remote global job ID is %s\\n"""		720721	1					
ANR	720822	PrimaryExpression	"""Remote global job ID is %s\\n"""		720721	0					
ANR	720823	Argument	c_global_job_id		720721	2					
ANR	720824	Identifier	c_global_job_id		720721	0					
ANR	720825	IfStatement	"if ( c_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , c_lease_duration ) )"		720721	7					
ANR	720826	Condition	"c_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , c_lease_duration )"	814:5:21541:21602	720721	0	True				
ANR	720827	CallExpression	"c_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , c_lease_duration )"		720721	0					
ANR	720828	Callee	c_ad -> LookupInteger		720721	0					
ANR	720829	PtrMemberAccess	c_ad -> LookupInteger		720721	0					
ANR	720830	Identifier	c_ad		720721	0					
ANR	720831	Identifier	LookupInteger		720721	1					
ANR	720832	ArgumentList	ATTR_JOB_LEASE_DURATION		720721	1					
ANR	720833	Argument	ATTR_JOB_LEASE_DURATION		720721	0					
ANR	720834	Identifier	ATTR_JOB_LEASE_DURATION		720721	0					
ANR	720835	Argument	c_lease_duration		720721	1					
ANR	720836	Identifier	c_lease_duration		720721	0					
ANR	720837	CompoundStatement		31:70:1025:1025	720721	1					
ANR	720838	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s defined in job ClassAd: %d\\n"" , ATTR_JOB_LEASE_DURATION , c_lease_duration )"	815:2:21610:21716	720721	0	True				
ANR	720839	CallExpression	"dprintf ( D_FULLDEBUG , ""%s defined in job ClassAd: %d\\n"" , ATTR_JOB_LEASE_DURATION , c_lease_duration )"		720721	0					
ANR	720840	Callee	dprintf		720721	0					
ANR	720841	Identifier	dprintf		720721	0					
ANR	720842	ArgumentList	D_FULLDEBUG		720721	1					
ANR	720843	Argument	D_FULLDEBUG		720721	0					
ANR	720844	Identifier	D_FULLDEBUG		720721	0					
ANR	720845	Argument	"""%s defined in job ClassAd: %d\\n"""		720721	1					
ANR	720846	PrimaryExpression	"""%s defined in job ClassAd: %d\\n"""		720721	0					
ANR	720847	Argument	ATTR_JOB_LEASE_DURATION		720721	2					
ANR	720848	Identifier	ATTR_JOB_LEASE_DURATION		720721	0					
ANR	720849	Argument	c_lease_duration		720721	3					
ANR	720850	Identifier	c_lease_duration		720721	0					
ANR	720851	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Resetting ClaimLease timer (%d) with new duration\\n"" , c_lease_tid )"	817:2:21720:21821	720721	1	True				
ANR	720852	CallExpression	"dprintf ( D_FULLDEBUG , ""Resetting ClaimLease timer (%d) with new duration\\n"" , c_lease_tid )"		720721	0					
ANR	720853	Callee	dprintf		720721	0					
ANR	720854	Identifier	dprintf		720721	0					
ANR	720855	ArgumentList	D_FULLDEBUG		720721	1					
ANR	720856	Argument	D_FULLDEBUG		720721	0					
ANR	720857	Identifier	D_FULLDEBUG		720721	0					
ANR	720858	Argument	"""Resetting ClaimLease timer (%d) with new duration\\n"""		720721	1					
ANR	720859	PrimaryExpression	"""Resetting ClaimLease timer (%d) with new duration\\n"""		720721	0					
ANR	720860	Argument	c_lease_tid		720721	2					
ANR	720861	Identifier	c_lease_tid		720721	0					
ANR	720862	ElseStatement	else		720721	0					
ANR	720863	IfStatement	if ( c_type == CLAIM_OPPORTUNISTIC )		720721	0					
ANR	720864	Condition	c_type == CLAIM_OPPORTUNISTIC	820:12:21835:21863	720721	0	True				
ANR	720865	EqualityExpression	c_type == CLAIM_OPPORTUNISTIC		720721	0		==			
ANR	720866	Identifier	c_type		720721	0					
ANR	720867	Identifier	CLAIM_OPPORTUNISTIC		720721	1					
ANR	720868	CompoundStatement		37:44:1286:1286	720721	1					
ANR	720869	ExpressionStatement	c_lease_duration = max_claim_alives_missed * c_aliveint	821:2:21871:21926	720721	0	True				
ANR	720870	AssignmentExpression	c_lease_duration = max_claim_alives_missed * c_aliveint		720721	0		=			
ANR	720871	Identifier	c_lease_duration		720721	0					
ANR	720872	MultiplicativeExpression	max_claim_alives_missed * c_aliveint		720721	1		*			
ANR	720873	Identifier	max_claim_alives_missed		720721	0					
ANR	720874	Identifier	c_aliveint		720721	1					
ANR	720875	Statement	dprintf	822:2:21930:21936	720721	1	True				
ANR	720876	Statement	(	822:9:21937:21937	720721	2	True				
ANR	720877	Statement	D_FULLDEBUG	822:11:21939:21949	720721	3	True				
ANR	720878	Statement	","	822:22:21950:21950	720721	4	True				
ANR	720879	Statement	"""%s not defined: using %d ("""	822:24:21952:21979	720721	5	True				
ANR	720880	Statement	"""alive_interval [%d] * max_missed [%d]\\n"""	823:5:21986:22026	720721	6	True				
ANR	720881	Statement	","	823:46:22027:22027	720721	7	True				
ANR	720882	Statement	ATTR_JOB_LEASE_DURATION	824:5:22035:22057	720721	8	True				
ANR	720883	Statement	","	824:28:22058:22058	720721	9	True				
ANR	720884	Statement	c_lease_duration	824:30:22060:22075	720721	10	True				
ANR	720885	Statement	","	824:46:22076:22076	720721	11	True				
ANR	720886	Statement	c_aliveint	825:5:22083:22092	720721	12	True				
ANR	720887	Statement	","	825:15:22093:22093	720721	13	True				
ANR	720888	Statement	max_claim_alives_missed	825:17:22095:22117	720721	14	True				
ANR	720889	Statement	)	825:41:22119:22119	720721	15	True				
ANR	720890	ExpressionStatement		825:42:22120:22120	720721	16	True				
ANR	720891	ExpressionStatement	alive ( )	832:1:22323:22330	720721	8	True				
ANR	720892	CallExpression	alive ( )		720721	0					
ANR	720893	Callee	alive		720721	0					
ANR	720894	Identifier	alive		720721	0					
ANR	720895	ArgumentList			720721	1					
ANR	720896	ReturnType	void		720721	1					
ANR	720897	Identifier	Claim :: saveJobInfo		720721	2					
ANR	720898	ParameterList	ClassAd * request_ad		720721	3					
ANR	720899	Parameter	ClassAd * request_ad	783:20:20558:20576	720721	0	True				
ANR	720900	ParameterType	ClassAd *		720721	0					
ANR	720901	Identifier	request_ad		720721	1					
ANR	720902	CFGEntryNode	ENTRY		720721		True				
ANR	720903	CFGExitNode	EXIT		720721		True				
ANR	720904	Symbol	CLAIM_OPPORTUNISTIC		720721						
ANR	720905	Symbol	c_rip		720721						
ANR	720906	Symbol	c_aliveint		720721						
ANR	720907	Symbol	request_ad		720721						
ANR	720908	Symbol	ATTR_PROC_ID		720721						
ANR	720909	Symbol	D_ALWAYS		720721						
ANR	720910	Symbol	c_ad -> LookupInteger		720721						
ANR	720911	Symbol	* c_ad		720721						
ANR	720912	Symbol	D_FULLDEBUG		720721						
ANR	720913	Symbol	c_proc		720721						
ANR	720914	Symbol	max_claim_alives_missed		720721						
ANR	720915	Symbol	& c_global_job_id		720721						
ANR	720916	Symbol	c_ad		720721						
ANR	720917	Symbol	ATTR_CLUSTER_ID		720721						
ANR	720918	Symbol	ATTR_GLOBAL_JOB_ID		720721						
ANR	720919	Symbol	c_lease_duration		720721						
ANR	720920	Symbol	c_lease_tid		720721						
ANR	720921	Symbol	ATTR_JOB_LEASE_DURATION		720721						
ANR	720922	Symbol	c_type		720721						
ANR	720923	Symbol	c_global_job_id		720721						
ANR	720924	Symbol	c_cluster		720721						
ANR	720925	Function	Claim :: startLeaseTimer	836:0:22338:23973							
ANR	720926	FunctionDef	Claim :: startLeaseTimer ()		720925	0					
ANR	720927	CompoundStatement		838:0:22368:23973	720925	0					
ANR	720928	IfStatement	if ( c_lease_duration < 0 )		720925	0					
ANR	720929	Condition	c_lease_duration < 0	839:5:22375:22394	720925	0	True				
ANR	720930	RelationalExpression	c_lease_duration < 0		720925	0		<			
ANR	720931	Identifier	c_lease_duration		720925	0					
ANR	720932	PrimaryExpression	0		720925	1					
ANR	720933	CompoundStatement		2:28:29:29	720925	1					
ANR	720934	IfStatement	if ( c_type == CLAIM_COD )		720925	0					
ANR	720935	Condition	c_type == CLAIM_COD	840:6:22406:22424	720925	0	True				
ANR	720936	EqualityExpression	c_type == CLAIM_COD		720925	0		==			
ANR	720937	Identifier	c_type		720925	0					
ANR	720938	Identifier	CLAIM_COD		720925	1					
ANR	720939	CompoundStatement		3:28:59:59	720925	1					
ANR	720940	ReturnStatement	return ;	842:3:22477:22483	720925	0	True				
ANR	720941	Statement	dprintf	844:2:22491:22497	720925	1	True				
ANR	720942	Statement	(	844:9:22498:22498	720925	2	True				
ANR	720943	Statement	D_ALWAYS	844:11:22500:22507	720925	3	True				
ANR	720944	Statement	","	844:19:22508:22508	720925	4	True				
ANR	720945	Statement	"""Warning: starting ClaimLease timer before """	844:21:22510:22553	720925	5	True				
ANR	720946	Statement	"""lease duration set.\\n"""	845:5:22560:22582	720925	6	True				
ANR	720947	Statement	)	845:29:22584:22584	720925	7	True				
ANR	720948	ExpressionStatement		845:30:22585:22585	720925	8	True				
ANR	720949	ExpressionStatement	c_lease_duration = 1200	846:2:22589:22612	720925	9	True				
ANR	720950	AssignmentExpression	c_lease_duration = 1200		720925	0		=			
ANR	720951	Identifier	c_lease_duration		720925	0					
ANR	720952	PrimaryExpression	1200		720925	1					
ANR	720953	IfStatement	if ( c_lease_tid != - 1 )		720925	1					
ANR	720954	Condition	c_lease_tid != - 1	848:5:22622:22638	720925	0	True				
ANR	720955	EqualityExpression	c_lease_tid != - 1		720925	0		!=			
ANR	720956	Identifier	c_lease_tid		720925	0					
ANR	720957	UnaryOperationExpression	- 1		720925	1					
ANR	720958	UnaryOperator	-		720925	0					
ANR	720959	PrimaryExpression	1		720925	1					
ANR	720960	CompoundStatement		11:25:273:273	720925	1					
ANR	720961	ExpressionStatement	"EXCEPT ( ""Claim::startLeaseTimer() called w/ c_lease_tid = %d"" , c_lease_tid )"	849:4:22648:22731	720925	0	True				
ANR	720962	CallExpression	"EXCEPT ( ""Claim::startLeaseTimer() called w/ c_lease_tid = %d"" , c_lease_tid )"		720925	0					
ANR	720963	Callee	EXCEPT		720925	0					
ANR	720964	Identifier	EXCEPT		720925	0					
ANR	720965	ArgumentList	"""Claim::startLeaseTimer() called w/ c_lease_tid = %d"""		720925	1					
ANR	720966	Argument	"""Claim::startLeaseTimer() called w/ c_lease_tid = %d"""		720925	0					
ANR	720967	PrimaryExpression	"""Claim::startLeaseTimer() called w/ c_lease_tid = %d"""		720925	0					
ANR	720968	Argument	c_lease_tid		720925	1					
ANR	720969	Identifier	c_lease_tid		720925	0					
ANR	720970	ExpressionStatement	"c_lease_tid = daemonCore -> Register_Timer ( c_lease_duration , 0 , ( TimerHandlercpp ) & Claim :: leaseExpired , ""Claim::leaseExpired"" , this )"	852:1:22737:22879	720925	2	True				
ANR	720971	AssignmentExpression	"c_lease_tid = daemonCore -> Register_Timer ( c_lease_duration , 0 , ( TimerHandlercpp ) & Claim :: leaseExpired , ""Claim::leaseExpired"" , this )"		720925	0		=			
ANR	720972	Identifier	c_lease_tid		720925	0					
ANR	720973	CallExpression	"daemonCore -> Register_Timer ( c_lease_duration , 0 , ( TimerHandlercpp ) & Claim :: leaseExpired , ""Claim::leaseExpired"" , this )"		720925	1					
ANR	720974	Callee	daemonCore -> Register_Timer		720925	0					
ANR	720975	PtrMemberAccess	daemonCore -> Register_Timer		720925	0					
ANR	720976	Identifier	daemonCore		720925	0					
ANR	720977	Identifier	Register_Timer		720925	1					
ANR	720978	ArgumentList	c_lease_duration		720925	1					
ANR	720979	Argument	c_lease_duration		720925	0					
ANR	720980	Identifier	c_lease_duration		720925	0					
ANR	720981	Argument	0		720925	1					
ANR	720982	PrimaryExpression	0		720925	0					
ANR	720983	Argument	( TimerHandlercpp ) & Claim :: leaseExpired		720925	2					
ANR	720984	CastExpression	( TimerHandlercpp ) & Claim :: leaseExpired		720925	0					
ANR	720985	CastTarget	TimerHandlercpp		720925	0					
ANR	720986	UnaryOperationExpression	& Claim :: leaseExpired		720925	1					
ANR	720987	UnaryOperator	&		720925	0					
ANR	720988	Identifier	Claim :: leaseExpired		720925	1					
ANR	720989	Argument	"""Claim::leaseExpired"""		720925	3					
ANR	720990	PrimaryExpression	"""Claim::leaseExpired"""		720925	0					
ANR	720991	Argument	this		720925	4					
ANR	720992	Identifier	this		720925	0					
ANR	720993	IfStatement	if ( c_lease_tid == - 1 )		720925	3					
ANR	720994	Condition	c_lease_tid == - 1	856:5:22886:22902	720925	0	True				
ANR	720995	EqualityExpression	c_lease_tid == - 1		720925	0		==			
ANR	720996	Identifier	c_lease_tid		720925	0					
ANR	720997	UnaryOperationExpression	- 1		720925	1					
ANR	720998	UnaryOperator	-		720925	0					
ANR	720999	PrimaryExpression	1		720925	1					
ANR	721000	CompoundStatement		19:25:537:537	720925	1					
ANR	721001	ExpressionStatement	"EXCEPT ( ""Couldn't register timer (out of memory)."" )"	857:2:22910:22962	720925	0	True				
ANR	721002	CallExpression	"EXCEPT ( ""Couldn't register timer (out of memory)."" )"		720925	0					
ANR	721003	Callee	EXCEPT		720925	0					
ANR	721004	Identifier	EXCEPT		720925	0					
ANR	721005	ArgumentList	"""Couldn't register timer (out of memory)."""		720925	1					
ANR	721006	Argument	"""Couldn't register timer (out of memory)."""		720925	0					
ANR	721007	PrimaryExpression	"""Couldn't register timer (out of memory)."""		720925	0					
ANR	721008	IdentifierDeclStatement	bool startd_sends_alives ;	861:1:23000:23024	720925	4	True				
ANR	721009	IdentifierDecl	startd_sends_alives		720925	0					
ANR	721010	IdentifierDeclType	bool		720925	0					
ANR	721011	Identifier	startd_sends_alives		720925	1					
ANR	721012	IdentifierDeclStatement	std :: string value ;	862:1:23027:23044	720925	5	True				
ANR	721013	IdentifierDecl	value		720925	0					
ANR	721014	IdentifierDeclType	std :: string		720925	0					
ANR	721015	Identifier	value		720925	1					
ANR	721016	ExpressionStatement	"param ( value , ""STARTD_SENDS_ALIVES"" , ""peer"" )"	863:1:23047:23092	720925	6	True				
ANR	721017	CallExpression	"param ( value , ""STARTD_SENDS_ALIVES"" , ""peer"" )"		720925	0					
ANR	721018	Callee	param		720925	0					
ANR	721019	Identifier	param		720925	0					
ANR	721020	ArgumentList	value		720925	1					
ANR	721021	Argument	value		720925	0					
ANR	721022	Identifier	value		720925	0					
ANR	721023	Argument	"""STARTD_SENDS_ALIVES"""		720925	1					
ANR	721024	PrimaryExpression	"""STARTD_SENDS_ALIVES"""		720925	0					
ANR	721025	Argument	"""peer"""		720925	2					
ANR	721026	PrimaryExpression	"""peer"""		720925	0					
ANR	721027	IfStatement	"if ( c_ad && c_ad -> LookupBool ( ATTR_STARTD_SENDS_ALIVES , startd_sends_alives ) )"		720925	7					
ANR	721028	Condition	"c_ad && c_ad -> LookupBool ( ATTR_STARTD_SENDS_ALIVES , startd_sends_alives )"	864:6:23100:23172	720925	0	True				
ANR	721029	AndExpression	"c_ad && c_ad -> LookupBool ( ATTR_STARTD_SENDS_ALIVES , startd_sends_alives )"		720925	0		&&			
ANR	721030	Identifier	c_ad		720925	0					
ANR	721031	CallExpression	"c_ad -> LookupBool ( ATTR_STARTD_SENDS_ALIVES , startd_sends_alives )"		720925	1					
ANR	721032	Callee	c_ad -> LookupBool		720925	0					
ANR	721033	PtrMemberAccess	c_ad -> LookupBool		720925	0					
ANR	721034	Identifier	c_ad		720925	0					
ANR	721035	Identifier	LookupBool		720925	1					
ANR	721036	ArgumentList	ATTR_STARTD_SENDS_ALIVES		720925	1					
ANR	721037	Argument	ATTR_STARTD_SENDS_ALIVES		720925	0					
ANR	721038	Identifier	ATTR_STARTD_SENDS_ALIVES		720925	0					
ANR	721039	Argument	startd_sends_alives		720925	1					
ANR	721040	Identifier	startd_sends_alives		720925	0					
ANR	721041	CompoundStatement		27:82:807:807	720925	1					
ANR	721042	ElseStatement	else		720925	0					
ANR	721043	IfStatement	"if ( strcasecmp ( value . c_str ( ) , ""false"" ) == 0 )"		720925	0					
ANR	721044	Condition	"strcasecmp ( value . c_str ( ) , ""false"" ) == 0"	866:13:23214:23254	720925	0	True				
ANR	721045	EqualityExpression	"strcasecmp ( value . c_str ( ) , ""false"" ) == 0"		720925	0		==			
ANR	721046	CallExpression	"strcasecmp ( value . c_str ( ) , ""false"" )"		720925	0					
ANR	721047	Callee	strcasecmp		720925	0					
ANR	721048	Identifier	strcasecmp		720925	0					
ANR	721049	ArgumentList	value . c_str ( )		720925	1					
ANR	721050	Argument	value . c_str ( )		720925	0					
ANR	721051	CallExpression	value . c_str ( )		720925	0					
ANR	721052	Callee	value . c_str		720925	0					
ANR	721053	MemberAccess	value . c_str		720925	0					
ANR	721054	Identifier	value		720925	0					
ANR	721055	Identifier	c_str		720925	1					
ANR	721056	ArgumentList			720925	1					
ANR	721057	Argument	"""false"""		720925	1					
ANR	721058	PrimaryExpression	"""false"""		720925	0					
ANR	721059	PrimaryExpression	0		720925	1					
ANR	721060	CompoundStatement		29:57:889:889	720925	1					
ANR	721061	ExpressionStatement	startd_sends_alives = false	867:2:23262:23289	720925	0	True				
ANR	721062	AssignmentExpression	startd_sends_alives = false		720925	0		=			
ANR	721063	Identifier	startd_sends_alives		720925	0					
ANR	721064	Identifier	false		720925	1					
ANR	721065	ElseStatement	else		720925	0					
ANR	721066	IfStatement	"if ( strcasecmp ( value . c_str ( ) , ""true"" ) == 0 )"		720925	0					
ANR	721067	Condition	"strcasecmp ( value . c_str ( ) , ""true"" ) == 0"	868:13:23304:23343	720925	0	True				
ANR	721068	EqualityExpression	"strcasecmp ( value . c_str ( ) , ""true"" ) == 0"		720925	0		==			
ANR	721069	CallExpression	"strcasecmp ( value . c_str ( ) , ""true"" )"		720925	0					
ANR	721070	Callee	strcasecmp		720925	0					
ANR	721071	Identifier	strcasecmp		720925	0					
ANR	721072	ArgumentList	value . c_str ( )		720925	1					
ANR	721073	Argument	value . c_str ( )		720925	0					
ANR	721074	CallExpression	value . c_str ( )		720925	0					
ANR	721075	Callee	value . c_str		720925	0					
ANR	721076	MemberAccess	value . c_str		720925	0					
ANR	721077	Identifier	value		720925	0					
ANR	721078	Identifier	c_str		720925	1					
ANR	721079	ArgumentList			720925	1					
ANR	721080	Argument	"""true"""		720925	1					
ANR	721081	PrimaryExpression	"""true"""		720925	0					
ANR	721082	PrimaryExpression	0		720925	1					
ANR	721083	CompoundStatement		31:56:978:978	720925	1					
ANR	721084	ExpressionStatement	startd_sends_alives = true	869:2:23351:23377	720925	0	True				
ANR	721085	AssignmentExpression	startd_sends_alives = true		720925	0		=			
ANR	721086	Identifier	startd_sends_alives		720925	0					
ANR	721087	Identifier	true		720925	1					
ANR	721088	ElseStatement	else		720925	0					
ANR	721089	CompoundStatement		33:8:1018:1018	720925	0					
ANR	721090	ExpressionStatement	startd_sends_alives = false	872:2:23442:23469	720925	0	True				
ANR	721091	AssignmentExpression	startd_sends_alives = false		720925	0		=			
ANR	721092	Identifier	startd_sends_alives		720925	0					
ANR	721093	Identifier	false		720925	1					
ANR	721094	IfStatement	if ( startd_sends_alives && c_type != CLAIM_COD && c_lease_duration > 0 )		720925	8					
ANR	721095	Condition	startd_sends_alives && c_type != CLAIM_COD && c_lease_duration > 0	874:6:23480:23551	720925	0	True				
ANR	721096	AndExpression	startd_sends_alives && c_type != CLAIM_COD && c_lease_duration > 0		720925	0		&&			
ANR	721097	Identifier	startd_sends_alives		720925	0					
ANR	721098	AndExpression	c_type != CLAIM_COD && c_lease_duration > 0		720925	1		&&			
ANR	721099	EqualityExpression	c_type != CLAIM_COD		720925	0		!=			
ANR	721100	Identifier	c_type		720925	0					
ANR	721101	Identifier	CLAIM_COD		720925	1					
ANR	721102	RelationalExpression	c_lease_duration > 0		720925	1		>			
ANR	721103	Identifier	c_lease_duration		720925	0					
ANR	721104	PrimaryExpression	0		720925	1					
ANR	721105	CompoundStatement		40:1:1213:1213	720925	1					
ANR	721106	IfStatement	if ( c_sendalive_tid != - 1 )		720925	0					
ANR	721107	Condition	c_sendalive_tid != - 1	878:7:23591:23611	720925	0	True				
ANR	721108	EqualityExpression	c_sendalive_tid != - 1		720925	0		!=			
ANR	721109	Identifier	c_sendalive_tid		720925	0					
ANR	721110	UnaryOperationExpression	- 1		720925	1					
ANR	721111	UnaryOperator	-		720925	0					
ANR	721112	PrimaryExpression	1		720925	1					
ANR	721113	CompoundStatement		41:31:1246:1246	720925	1					
ANR	721114	ExpressionStatement	daemonCore -> Cancel_Timer ( c_sendalive_tid )	879:3:23620:23661	720925	0	True				
ANR	721115	CallExpression	daemonCore -> Cancel_Timer ( c_sendalive_tid )		720925	0					
ANR	721116	Callee	daemonCore -> Cancel_Timer		720925	0					
ANR	721117	PtrMemberAccess	daemonCore -> Cancel_Timer		720925	0					
ANR	721118	Identifier	daemonCore		720925	0					
ANR	721119	Identifier	Cancel_Timer		720925	1					
ANR	721120	ArgumentList	c_sendalive_tid		720925	1					
ANR	721121	Argument	c_sendalive_tid		720925	0					
ANR	721122	Identifier	c_sendalive_tid		720925	0					
ANR	721123	ExpressionStatement	"c_sendalive_tid = daemonCore -> Register_Timer ( c_lease_duration / 3 , c_lease_duration / 3 , ( TimerHandlercpp ) & Claim :: sendAlive , ""Claim::sendAlive"" , this )"	882:2:23672:23841	720925	1	True				
ANR	721124	AssignmentExpression	"c_sendalive_tid = daemonCore -> Register_Timer ( c_lease_duration / 3 , c_lease_duration / 3 , ( TimerHandlercpp ) & Claim :: sendAlive , ""Claim::sendAlive"" , this )"		720925	0		=			
ANR	721125	Identifier	c_sendalive_tid		720925	0					
ANR	721126	CallExpression	"daemonCore -> Register_Timer ( c_lease_duration / 3 , c_lease_duration / 3 , ( TimerHandlercpp ) & Claim :: sendAlive , ""Claim::sendAlive"" , this )"		720925	1					
ANR	721127	Callee	daemonCore -> Register_Timer		720925	0					
ANR	721128	PtrMemberAccess	daemonCore -> Register_Timer		720925	0					
ANR	721129	Identifier	daemonCore		720925	0					
ANR	721130	Identifier	Register_Timer		720925	1					
ANR	721131	ArgumentList	c_lease_duration / 3		720925	1					
ANR	721132	Argument	c_lease_duration / 3		720925	0					
ANR	721133	MultiplicativeExpression	c_lease_duration / 3		720925	0		/			
ANR	721134	Identifier	c_lease_duration		720925	0					
ANR	721135	PrimaryExpression	3		720925	1					
ANR	721136	Argument	c_lease_duration / 3		720925	1					
ANR	721137	MultiplicativeExpression	c_lease_duration / 3		720925	0		/			
ANR	721138	Identifier	c_lease_duration		720925	0					
ANR	721139	PrimaryExpression	3		720925	1					
ANR	721140	Argument	( TimerHandlercpp ) & Claim :: sendAlive		720925	2					
ANR	721141	CastExpression	( TimerHandlercpp ) & Claim :: sendAlive		720925	0					
ANR	721142	CastTarget	TimerHandlercpp		720925	0					
ANR	721143	UnaryOperationExpression	& Claim :: sendAlive		720925	1					
ANR	721144	UnaryOperator	&		720925	0					
ANR	721145	Identifier	Claim :: sendAlive		720925	1					
ANR	721146	Argument	"""Claim::sendAlive"""		720925	3					
ANR	721147	PrimaryExpression	"""Claim::sendAlive"""		720925	0					
ANR	721148	Argument	this		720925	4					
ANR	721149	Identifier	this		720925	0					
ANR	721150	Statement	dprintf	889:1:23848:23854	720925	9	True				
ANR	721151	Statement	(	889:8:23855:23855	720925	10	True				
ANR	721152	Statement	D_FULLDEBUG	889:10:23857:23867	720925	11	True				
ANR	721153	Statement	","	889:21:23868:23868	720925	12	True				
ANR	721154	Statement	"""Started ClaimLease timer (%d) w/ %d second """	889:23:23870:23914	720925	13	True				
ANR	721155	Statement	"""lease duration\\n"""	890:4:23920:23937	720925	14	True				
ANR	721156	Statement	","	890:22:23938:23938	720925	15	True				
ANR	721157	Statement	c_lease_tid	890:24:23940:23950	720925	16	True				
ANR	721158	Statement	","	890:35:23951:23951	720925	17	True				
ANR	721159	Statement	c_lease_duration	890:37:23953:23968	720925	18	True				
ANR	721160	Statement	)	890:54:23970:23970	720925	19	True				
ANR	721161	ExpressionStatement		890:55:23971:23971	720925	20	True				
ANR	721162	ReturnType	void		720925	1					
ANR	721163	Identifier	Claim :: startLeaseTimer		720925	2					
ANR	721164	ParameterList			720925	3					
ANR	721165	CFGEntryNode	ENTRY		720925		True				
ANR	721166	CFGExitNode	EXIT		720925		True				
ANR	721167	Symbol	startd_sends_alives		720925						
ANR	721168	Symbol	c_ad -> LookupBool		720925						
ANR	721169	Symbol	CLAIM_COD		720925						
ANR	721170	Symbol	this		720925						
ANR	721171	Symbol	false		720925						
ANR	721172	Symbol	* c_ad		720925						
ANR	721173	Symbol	value . c_str		720925						
ANR	721174	Symbol	& Claim :: sendAlive		720925						
ANR	721175	Symbol	c_ad		720925						
ANR	721176	Symbol	c_lease_duration		720925						
ANR	721177	Symbol	c_lease_tid		720925						
ANR	721178	Symbol	* daemonCore		720925						
ANR	721179	Symbol	c_type		720925						
ANR	721180	Symbol	daemonCore		720925						
ANR	721181	Symbol	daemonCore -> Register_Timer		720925						
ANR	721182	Symbol	true		720925						
ANR	721183	Symbol	ATTR_STARTD_SENDS_ALIVES		720925						
ANR	721184	Symbol	c_sendalive_tid		720925						
ANR	721185	Symbol	& Claim :: leaseExpired		720925						
ANR	721186	Symbol	strcasecmp		720925						
ANR	721187	Symbol	value		720925						
ANR	721188	Function	Claim :: cancelLeaseTimer	894:0:23977:24559							
ANR	721189	FunctionDef	Claim :: cancelLeaseTimer ()		721188	0					
ANR	721190	CompoundStatement		896:0:24008:24559	721188	0					
ANR	721191	IdentifierDeclStatement	int rval ;	897:1:24011:24019	721188	0	True				
ANR	721192	IdentifierDecl	rval		721188	0					
ANR	721193	IdentifierDeclType	int		721188	0					
ANR	721194	Identifier	rval		721188	1					
ANR	721195	IfStatement	if ( c_lease_tid != - 1 )		721188	1					
ANR	721196	Condition	c_lease_tid != - 1	898:5:24026:24042	721188	0	True				
ANR	721197	EqualityExpression	c_lease_tid != - 1		721188	0		!=			
ANR	721198	Identifier	c_lease_tid		721188	0					
ANR	721199	UnaryOperationExpression	- 1		721188	1					
ANR	721200	UnaryOperator	-		721188	0					
ANR	721201	PrimaryExpression	1		721188	1					
ANR	721202	CompoundStatement		3:25:37:37	721188	1					
ANR	721203	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( c_lease_tid )	899:2:24050:24096	721188	0	True				
ANR	721204	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( c_lease_tid )		721188	0		=			
ANR	721205	Identifier	rval		721188	0					
ANR	721206	CallExpression	daemonCore -> Cancel_Timer ( c_lease_tid )		721188	1					
ANR	721207	Callee	daemonCore -> Cancel_Timer		721188	0					
ANR	721208	PtrMemberAccess	daemonCore -> Cancel_Timer		721188	0					
ANR	721209	Identifier	daemonCore		721188	0					
ANR	721210	Identifier	Cancel_Timer		721188	1					
ANR	721211	ArgumentList	c_lease_tid		721188	1					
ANR	721212	Argument	c_lease_tid		721188	0					
ANR	721213	Identifier	c_lease_tid		721188	0					
ANR	721214	IfStatement	if ( rval < 0 )		721188	1					
ANR	721215	Condition	rval < 0	900:6:24104:24111	721188	0	True				
ANR	721216	RelationalExpression	rval < 0		721188	0		<			
ANR	721217	Identifier	rval		721188	0					
ANR	721218	PrimaryExpression	0		721188	1					
ANR	721219	CompoundStatement		5:17:106:106	721188	1					
ANR	721220	Statement	dprintf	901:3:24120:24126	721188	0	True				
ANR	721221	Statement	(	901:10:24127:24127	721188	1	True				
ANR	721222	Statement	D_ALWAYS	901:12:24129:24136	721188	2	True				
ANR	721223	Statement	","	901:20:24137:24137	721188	3	True				
ANR	721224	Statement	"""Failed to cancel ClaimLease timer (%d): """	901:22:24139:24180	721188	4	True				
ANR	721225	Statement	"""daemonCore error\\n"""	902:6:24188:24207	721188	5	True				
ANR	721226	Statement	","	902:26:24208:24208	721188	6	True				
ANR	721227	Statement	c_lease_tid	902:28:24210:24220	721188	7	True				
ANR	721228	Statement	)	902:40:24222:24222	721188	8	True				
ANR	721229	ExpressionStatement		902:41:24223:24223	721188	9	True				
ANR	721230	ElseStatement	else		721188	0					
ANR	721231	CompoundStatement		8:9:225:225	721188	0					
ANR	721232	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled ClaimLease timer (%d)\\n"" , c_lease_tid )"	904:3:24239:24316	721188	0	True				
ANR	721233	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled ClaimLease timer (%d)\\n"" , c_lease_tid )"		721188	0					
ANR	721234	Callee	dprintf		721188	0					
ANR	721235	Identifier	dprintf		721188	0					
ANR	721236	ArgumentList	D_FULLDEBUG		721188	1					
ANR	721237	Argument	D_FULLDEBUG		721188	0					
ANR	721238	Identifier	D_FULLDEBUG		721188	0					
ANR	721239	Argument	"""Canceled ClaimLease timer (%d)\\n"""		721188	1					
ANR	721240	PrimaryExpression	"""Canceled ClaimLease timer (%d)\\n"""		721188	0					
ANR	721241	Argument	c_lease_tid		721188	2					
ANR	721242	Identifier	c_lease_tid		721188	0					
ANR	721243	ExpressionStatement	c_lease_tid = - 1	907:2:24324:24340	721188	2	True				
ANR	721244	AssignmentExpression	c_lease_tid = - 1		721188	0		=			
ANR	721245	Identifier	c_lease_tid		721188	0					
ANR	721246	UnaryOperationExpression	- 1		721188	1					
ANR	721247	UnaryOperator	-		721188	0					
ANR	721248	PrimaryExpression	1		721188	1					
ANR	721249	IfStatement	if ( c_sendalive_tid != - 1 )		721188	2					
ANR	721250	Condition	c_sendalive_tid != - 1	912:6:24460:24480	721188	0	True				
ANR	721251	EqualityExpression	c_sendalive_tid != - 1		721188	0		!=			
ANR	721252	Identifier	c_sendalive_tid		721188	0					
ANR	721253	UnaryOperationExpression	- 1		721188	1					
ANR	721254	UnaryOperator	-		721188	0					
ANR	721255	PrimaryExpression	1		721188	1					
ANR	721256	CompoundStatement		17:30:475:475	721188	1					
ANR	721257	ExpressionStatement	daemonCore -> Cancel_Timer ( c_sendalive_tid )	913:2:24488:24529	721188	0	True				
ANR	721258	CallExpression	daemonCore -> Cancel_Timer ( c_sendalive_tid )		721188	0					
ANR	721259	Callee	daemonCore -> Cancel_Timer		721188	0					
ANR	721260	PtrMemberAccess	daemonCore -> Cancel_Timer		721188	0					
ANR	721261	Identifier	daemonCore		721188	0					
ANR	721262	Identifier	Cancel_Timer		721188	1					
ANR	721263	ArgumentList	c_sendalive_tid		721188	1					
ANR	721264	Argument	c_sendalive_tid		721188	0					
ANR	721265	Identifier	c_sendalive_tid		721188	0					
ANR	721266	ExpressionStatement	c_sendalive_tid = - 1	914:2:24533:24553	721188	1	True				
ANR	721267	AssignmentExpression	c_sendalive_tid = - 1		721188	0		=			
ANR	721268	Identifier	c_sendalive_tid		721188	0					
ANR	721269	UnaryOperationExpression	- 1		721188	1					
ANR	721270	UnaryOperator	-		721188	0					
ANR	721271	PrimaryExpression	1		721188	1					
ANR	721272	ReturnType	void		721188	1					
ANR	721273	Identifier	Claim :: cancelLeaseTimer		721188	2					
ANR	721274	ParameterList			721188	3					
ANR	721275	CFGEntryNode	ENTRY		721188		True				
ANR	721276	CFGExitNode	EXIT		721188		True				
ANR	721277	Symbol	c_lease_tid		721188						
ANR	721278	Symbol	* daemonCore		721188						
ANR	721279	Symbol	daemonCore		721188						
ANR	721280	Symbol	rval		721188						
ANR	721281	Symbol	D_FULLDEBUG		721188						
ANR	721282	Symbol	c_sendalive_tid		721188						
ANR	721283	Symbol	daemonCore -> Cancel_Timer		721188						
ANR	721284	Function	Claim :: sendAlive	919:0:24562:25700							
ANR	721285	FunctionDef	Claim :: sendAlive ()		721284	0					
ANR	721286	CompoundStatement		921:0:24586:25700	721284	0					
ANR	721287	IdentifierDeclStatement	const char * c_addr = NULL ;	922:1:24589:24614	721284	0	True				
ANR	721288	IdentifierDecl	* c_addr = NULL		721284	0					
ANR	721289	IdentifierDeclType	const char *		721284	0					
ANR	721290	Identifier	c_addr		721284	1					
ANR	721291	AssignmentExpression	* c_addr = NULL		721284	2		=			
ANR	721292	Identifier	NULL		721284	0					
ANR	721293	Identifier	NULL		721284	1					
ANR	721294	IfStatement	if ( c_client )		721284	1					
ANR	721295	Condition	c_client	924:6:24623:24630	721284	0	True				
ANR	721296	Identifier	c_client		721284	0					
ANR	721297	CompoundStatement		4:17:47:47	721284	1					
ANR	721298	ExpressionStatement	c_addr = c_client -> addr ( )	925:2:24638:24663	721284	0	True				
ANR	721299	AssignmentExpression	c_addr = c_client -> addr ( )		721284	0		=			
ANR	721300	Identifier	c_addr		721284	0					
ANR	721301	CallExpression	c_client -> addr ( )		721284	1					
ANR	721302	Callee	c_client -> addr		721284	0					
ANR	721303	PtrMemberAccess	c_client -> addr		721284	0					
ANR	721304	Identifier	c_client		721284	0					
ANR	721305	Identifier	addr		721284	1					
ANR	721306	ArgumentList			721284	1					
ANR	721307	IfStatement	if ( ! c_addr )		721284	2					
ANR	721308	Condition	! c_addr	928:5:24674:24680	721284	0	True				
ANR	721309	UnaryOperationExpression	! c_addr		721284	0					
ANR	721310	UnaryOperator	!		721284	0					
ANR	721311	Identifier	c_addr		721284	1					
ANR	721312	CompoundStatement		8:15:97:97	721284	1					
ANR	721313	ReturnStatement	return ;	930:2:24732:24738	721284	0	True				
ANR	721314	IfStatement	if ( c_alive_inprogress_sock )		721284	3					
ANR	721315	Condition	c_alive_inprogress_sock	933:6:24750:24772	721284	0	True				
ANR	721316	Identifier	c_alive_inprogress_sock		721284	0					
ANR	721317	CompoundStatement		13:32:189:189	721284	1					
ANR	721318	ReturnStatement	return ;	935:2:24801:24807	721284	0	True				
ANR	721319	IdentifierDeclStatement	"DCSchedd matched_schedd ( c_addr , NULL ) ;"	938:1:24814:24854	721284	4	True				
ANR	721320	IdentifierDecl	"matched_schedd ( c_addr , NULL )"		721284	0					
ANR	721321	IdentifierDeclType	DCSchedd		721284	0					
ANR	721322	Identifier	matched_schedd		721284	1					
ANR	721323	Expression	"c_addr , NULL"		721284	2					
ANR	721324	Identifier	c_addr		721284	0					
ANR	721325	Identifier	NULL		721284	1					
ANR	721326	IdentifierDeclStatement	Sock * sock = NULL ;	939:1:24857:24874	721284	5	True				
ANR	721327	IdentifierDecl	* sock = NULL		721284	0					
ANR	721328	IdentifierDeclType	Sock *		721284	0					
ANR	721329	Identifier	sock		721284	1					
ANR	721330	AssignmentExpression	* sock = NULL		721284	2		=			
ANR	721331	Identifier	NULL		721284	0					
ANR	721332	Identifier	NULL		721284	1					
ANR	721333	ExpressionStatement	"dprintf ( D_PROTOCOL , ""Sending alive to schedd %s...\\n"" , c_addr )"	941:1:24878:24941	721284	6	True				
ANR	721334	CallExpression	"dprintf ( D_PROTOCOL , ""Sending alive to schedd %s...\\n"" , c_addr )"		721284	0					
ANR	721335	Callee	dprintf		721284	0					
ANR	721336	Identifier	dprintf		721284	0					
ANR	721337	ArgumentList	D_PROTOCOL		721284	1					
ANR	721338	Argument	D_PROTOCOL		721284	0					
ANR	721339	Identifier	D_PROTOCOL		721284	0					
ANR	721340	Argument	"""Sending alive to schedd %s...\\n"""		721284	1					
ANR	721341	PrimaryExpression	"""Sending alive to schedd %s...\\n"""		721284	0					
ANR	721342	Argument	c_addr		721284	2					
ANR	721343	Identifier	c_addr		721284	0					
ANR	721344	IdentifierDeclStatement	"int connect_timeout = MAX ( 20 , ( ( c_lease_duration / 3 ) - 3 ) ) ;"	943:1:24946:25004	721284	7	True				
ANR	721345	IdentifierDecl	"connect_timeout = MAX ( 20 , ( ( c_lease_duration / 3 ) - 3 ) )"		721284	0					
ANR	721346	IdentifierDeclType	int		721284	0					
ANR	721347	Identifier	connect_timeout		721284	1					
ANR	721348	AssignmentExpression	"connect_timeout = MAX ( 20 , ( ( c_lease_duration / 3 ) - 3 ) )"		721284	2		=			
ANR	721349	Identifier	connect_timeout		721284	0					
ANR	721350	CallExpression	"MAX ( 20 , ( ( c_lease_duration / 3 ) - 3 ) )"		721284	1					
ANR	721351	Callee	MAX		721284	0					
ANR	721352	Identifier	MAX		721284	0					
ANR	721353	ArgumentList	20		721284	1					
ANR	721354	Argument	20		721284	0					
ANR	721355	PrimaryExpression	20		721284	0					
ANR	721356	Argument	( c_lease_duration / 3 ) - 3		721284	1					
ANR	721357	AdditiveExpression	( c_lease_duration / 3 ) - 3		721284	0		-			
ANR	721358	MultiplicativeExpression	c_lease_duration / 3		721284	0		/			
ANR	721359	Identifier	c_lease_duration		721284	0					
ANR	721360	PrimaryExpression	3		721284	1					
ANR	721361	PrimaryExpression	3		721284	1					
ANR	721362	IfStatement	"if ( ! ( sock = matched_schedd . reliSock ( connect_timeout , 0 , NULL , true ) ) )"		721284	8					
ANR	721363	Condition	"! ( sock = matched_schedd . reliSock ( connect_timeout , 0 , NULL , true ) )"	945:5:25012:25078	721284	0	True				
ANR	721364	UnaryOperationExpression	"! ( sock = matched_schedd . reliSock ( connect_timeout , 0 , NULL , true ) )"		721284	0					
ANR	721365	UnaryOperator	!		721284	0					
ANR	721366	AssignmentExpression	"sock = matched_schedd . reliSock ( connect_timeout , 0 , NULL , true )"		721284	1		=			
ANR	721367	Identifier	sock		721284	0					
ANR	721368	CallExpression	"matched_schedd . reliSock ( connect_timeout , 0 , NULL , true )"		721284	1					
ANR	721369	Callee	matched_schedd . reliSock		721284	0					
ANR	721370	MemberAccess	matched_schedd . reliSock		721284	0					
ANR	721371	Identifier	matched_schedd		721284	0					
ANR	721372	Identifier	reliSock		721284	1					
ANR	721373	ArgumentList	connect_timeout		721284	1					
ANR	721374	Argument	connect_timeout		721284	0					
ANR	721375	Identifier	connect_timeout		721284	0					
ANR	721376	Argument	0		721284	1					
ANR	721377	PrimaryExpression	0		721284	0					
ANR	721378	Argument	NULL		721284	2					
ANR	721379	Identifier	NULL		721284	0					
ANR	721380	Argument	true		721284	3					
ANR	721381	Identifier	true		721284	0					
ANR	721382	CompoundStatement		25:74:494:494	721284	1					
ANR	721383	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""Alive failed - couldn't initiate connection to %s\\n"" , c_addr )"	946:2:25085:25193	721284	0	True				
ANR	721384	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""Alive failed - couldn't initiate connection to %s\\n"" , c_addr )"		721284	0					
ANR	721385	Callee	dprintf		721284	0					
ANR	721386	Identifier	dprintf		721284	0					
ANR	721387	ArgumentList	D_FAILURE | D_ALWAYS		721284	1					
ANR	721388	Argument	D_FAILURE | D_ALWAYS		721284	0					
ANR	721389	InclusiveOrExpression	D_FAILURE | D_ALWAYS		721284	0		|			
ANR	721390	Identifier	D_FAILURE		721284	0					
ANR	721391	Identifier	D_ALWAYS		721284	1					
ANR	721392	Argument	"""Alive failed - couldn't initiate connection to %s\\n"""		721284	1					
ANR	721393	PrimaryExpression	"""Alive failed - couldn't initiate connection to %s\\n"""		721284	0					
ANR	721394	Argument	c_addr		721284	2					
ANR	721395	Identifier	c_addr		721284	0					
ANR	721396	ReturnStatement	return ;	949:2:25197:25203	721284	1	True				
ANR	721397	IdentifierDeclStatement	char to_schedd [ 256 ] ;	952:1:25210:25229	721284	9	True				
ANR	721398	IdentifierDecl	to_schedd [ 256 ]		721284	0					
ANR	721399	IdentifierDeclType	char [ 256 ]		721284	0					
ANR	721400	Identifier	to_schedd		721284	1					
ANR	721401	PrimaryExpression	256		721284	2					
ANR	721402	ExpressionStatement	"snprintf ( to_schedd , 256 , ""Alive to schedd %s"" , c_addr )"	953:1:25232:25289	721284	10	True				
ANR	721403	CallExpression	"snprintf ( to_schedd , 256 , ""Alive to schedd %s"" , c_addr )"		721284	0					
ANR	721404	Callee	snprintf		721284	0					
ANR	721405	Identifier	snprintf		721284	0					
ANR	721406	ArgumentList	to_schedd		721284	1					
ANR	721407	Argument	to_schedd		721284	0					
ANR	721408	Identifier	to_schedd		721284	0					
ANR	721409	Argument	256		721284	1					
ANR	721410	PrimaryExpression	256		721284	0					
ANR	721411	Argument	"""Alive to schedd %s"""		721284	2					
ANR	721412	PrimaryExpression	"""Alive to schedd %s"""		721284	0					
ANR	721413	Argument	c_addr		721284	3					
ANR	721414	Identifier	c_addr		721284	0					
ANR	721415	IdentifierDeclStatement	"int reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveConnectHandler , to_schedd , this , ALLOW ) ;"	955:1:25293:25456	721284	11	True				
ANR	721416	IdentifierDecl	"reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveConnectHandler , to_schedd , this , ALLOW )"		721284	0					
ANR	721417	IdentifierDeclType	int		721284	0					
ANR	721418	Identifier	reg_rc		721284	1					
ANR	721419	AssignmentExpression	"reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveConnectHandler , to_schedd , this , ALLOW )"		721284	2		=			
ANR	721420	Identifier	reg_rc		721284	0					
ANR	721421	CallExpression	"daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveConnectHandler , to_schedd , this , ALLOW )"		721284	1					
ANR	721422	Callee	daemonCore -> Register_Socket		721284	0					
ANR	721423	PtrMemberAccess	daemonCore -> Register_Socket		721284	0					
ANR	721424	Identifier	daemonCore		721284	0					
ANR	721425	Identifier	Register_Socket		721284	1					
ANR	721426	ArgumentList	sock		721284	1					
ANR	721427	Argument	sock		721284	0					
ANR	721428	Identifier	sock		721284	0					
ANR	721429	Argument	"""<Alive Contact Socket>"""		721284	1					
ANR	721430	PrimaryExpression	"""<Alive Contact Socket>"""		721284	0					
ANR	721431	Argument	( SocketHandlercpp ) & Claim :: sendAliveConnectHandler		721284	2					
ANR	721432	CastExpression	( SocketHandlercpp ) & Claim :: sendAliveConnectHandler		721284	0					
ANR	721433	CastTarget	SocketHandlercpp		721284	0					
ANR	721434	UnaryOperationExpression	& Claim :: sendAliveConnectHandler		721284	1					
ANR	721435	UnaryOperator	&		721284	0					
ANR	721436	Identifier	Claim :: sendAliveConnectHandler		721284	1					
ANR	721437	Argument	to_schedd		721284	3					
ANR	721438	Identifier	to_schedd		721284	0					
ANR	721439	Argument	this		721284	4					
ANR	721440	Identifier	this		721284	0					
ANR	721441	Argument	ALLOW		721284	5					
ANR	721442	Identifier	ALLOW		721284	0					
ANR	721443	IfStatement	if ( reg_rc < 0 )		721284	12					
ANR	721444	Condition	reg_rc < 0	960:4:25463:25472	721284	0	True				
ANR	721445	RelationalExpression	reg_rc < 0		721284	0		<			
ANR	721446	Identifier	reg_rc		721284	0					
ANR	721447	PrimaryExpression	0		721284	1					
ANR	721448	CompoundStatement		40:16:888:888	721284	1					
ANR	721449	Statement	dprintf	961:2:25479:25485	721284	0	True				
ANR	721450	Statement	(	961:9:25486:25486	721284	1	True				
ANR	721451	Statement	D_ALWAYS	961:11:25488:25495	721284	2	True				
ANR	721452	Statement	","	961:19:25496:25496	721284	3	True				
ANR	721453	Statement	"""Failed to register socket for alive to schedd at %s.  """	962:11:25509:25564	721284	4	True				
ANR	721454	Statement	"""Register_Socket returned %d.\\n"""	963:11:25577:25608	721284	5	True				
ANR	721455	Statement	","	963:43:25609:25609	721284	6	True				
ANR	721456	Statement	c_addr	964:11:25622:25627	721284	7	True				
ANR	721457	Statement	","	964:17:25628:25628	721284	8	True				
ANR	721458	Statement	reg_rc	964:18:25629:25634	721284	9	True				
ANR	721459	Statement	)	964:24:25635:25635	721284	10	True				
ANR	721460	ExpressionStatement		964:25:25636:25636	721284	11	True				
ANR	721461	Statement	delete	965:2:25640:25645	721284	12	True				
ANR	721462	ExpressionStatement	sock	965:9:25647:25651	721284	13	True				
ANR	721463	Identifier	sock		721284	0					
ANR	721464	ReturnStatement	return ;	966:2:25655:25661	721284	14	True				
ANR	721465	ExpressionStatement	c_alive_inprogress_sock = sock	969:1:25668:25698	721284	13	True				
ANR	721466	AssignmentExpression	c_alive_inprogress_sock = sock		721284	0		=			
ANR	721467	Identifier	c_alive_inprogress_sock		721284	0					
ANR	721468	Identifier	sock		721284	1					
ANR	721469	ReturnType	void		721284	1					
ANR	721470	Identifier	Claim :: sendAlive		721284	2					
ANR	721471	ParameterList			721284	3					
ANR	721472	CFGEntryNode	ENTRY		721284		True				
ANR	721473	CFGExitNode	EXIT		721284		True				
ANR	721474	Symbol	NULL		721284						
ANR	721475	Symbol	c_client -> addr		721284						
ANR	721476	Symbol	D_PROTOCOL		721284						
ANR	721477	Symbol	connect_timeout		721284						
ANR	721478	Symbol	to_schedd		721284						
ANR	721479	Symbol	MAX		721284						
ANR	721480	Symbol	matched_schedd		721284						
ANR	721481	Symbol	D_ALWAYS		721284						
ANR	721482	Symbol	this		721284						
ANR	721483	Symbol	c_alive_inprogress_sock		721284						
ANR	721484	Symbol	D_FAILURE		721284						
ANR	721485	Symbol	* c_client		721284						
ANR	721486	Symbol	& Claim :: sendAliveConnectHandler		721284						
ANR	721487	Symbol	c_client		721284						
ANR	721488	Symbol	sock		721284						
ANR	721489	Symbol	c_lease_duration		721284						
ANR	721490	Symbol	reg_rc		721284						
ANR	721491	Symbol	c_addr		721284						
ANR	721492	Symbol	daemonCore -> Register_Socket		721284						
ANR	721493	Symbol	* daemonCore		721284						
ANR	721494	Symbol	daemonCore		721284						
ANR	721495	Symbol	true		721284						
ANR	721496	Symbol	ALLOW		721284						
ANR	721497	Symbol	matched_schedd . reliSock		721284						
ANR	721498	Function	Claim :: sendAliveConnectHandler	980:0:25968:28281							
ANR	721499	FunctionDef	Claim :: sendAliveConnectHandler (Stream * s)		721498	0					
ANR	721500	CompoundStatement		982:0:26014:28281	721498	0					
ANR	721501	IdentifierDeclStatement	"const char * c_addr = ""(unknown)"" ;"	983:1:26017:26049	721498	0	True				
ANR	721502	IdentifierDecl	"* c_addr = ""(unknown)"""		721498	0					
ANR	721503	IdentifierDeclType	const char *		721498	0					
ANR	721504	Identifier	c_addr		721498	1					
ANR	721505	AssignmentExpression	"* c_addr = ""(unknown)"""		721498	2		=			
ANR	721506	Identifier	c_addr		721498	0					
ANR	721507	PrimaryExpression	"""(unknown)"""		721498	1					
ANR	721508	IfStatement	if ( c_client )		721498	1					
ANR	721509	Condition	c_client	984:6:26057:26064	721498	0	True				
ANR	721510	Identifier	c_client		721498	0					
ANR	721511	CompoundStatement		3:17:53:53	721498	1					
ANR	721512	ExpressionStatement	c_addr = c_client -> addr ( )	985:2:26072:26097	721498	0	True				
ANR	721513	AssignmentExpression	c_addr = c_client -> addr ( )		721498	0		=			
ANR	721514	Identifier	c_addr		721498	0					
ANR	721515	CallExpression	c_client -> addr ( )		721498	1					
ANR	721516	Callee	c_client -> addr		721498	0					
ANR	721517	PtrMemberAccess	c_client -> addr		721498	0					
ANR	721518	Identifier	c_client		721498	0					
ANR	721519	Identifier	addr		721498	1					
ANR	721520	ArgumentList			721498	1					
ANR	721521	IdentifierDeclStatement	char * claimId = id ( ) ;	988:1:26104:26124	721498	2	True				
ANR	721522	IdentifierDecl	* claimId = id ( )		721498	0					
ANR	721523	IdentifierDeclType	char *		721498	0					
ANR	721524	Identifier	claimId		721498	1					
ANR	721525	AssignmentExpression	* claimId = id ( )		721498	2		=			
ANR	721526	Identifier	claimId		721498	0					
ANR	721527	CallExpression	id ( )		721498	1					
ANR	721528	Callee	id		721498	0					
ANR	721529	Identifier	id		721498	0					
ANR	721530	ArgumentList			721498	1					
ANR	721531	IfStatement	if ( ! claimId )		721498	3					
ANR	721532	Condition	! claimId	990:6:26133:26140	721498	0	True				
ANR	721533	UnaryOperationExpression	! claimId		721498	0					
ANR	721534	UnaryOperator	!		721498	0					
ANR	721535	Identifier	claimId		721498	1					
ANR	721536	CompoundStatement		9:17:129:129	721498	1					
ANR	721537	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR In Claim::sendAliveConnectHandler, id unknown\\n"" )"	991:2:26148:26223	721498	0	True				
ANR	721538	CallExpression	"dprintf ( D_ALWAYS , ""ERROR In Claim::sendAliveConnectHandler, id unknown\\n"" )"		721498	0					
ANR	721539	Callee	dprintf		721498	0					
ANR	721540	Identifier	dprintf		721498	0					
ANR	721541	ArgumentList	D_ALWAYS		721498	1					
ANR	721542	Argument	D_ALWAYS		721498	0					
ANR	721543	Identifier	D_ALWAYS		721498	0					
ANR	721544	Argument	"""ERROR In Claim::sendAliveConnectHandler, id unknown\\n"""		721498	1					
ANR	721545	PrimaryExpression	"""ERROR In Claim::sendAliveConnectHandler, id unknown\\n"""		721498	0					
ANR	721546	ExpressionStatement	ALIVE_BAILOUT	992:2:26227:26240	721498	1	True				
ANR	721547	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721548	IdentifierDeclStatement	Sock * sock = ( Sock * ) s ;	995:1:26247:26269	721498	4	True				
ANR	721549	IdentifierDecl	* sock = ( Sock * ) s		721498	0					
ANR	721550	IdentifierDeclType	Sock *		721498	0					
ANR	721551	Identifier	sock		721498	1					
ANR	721552	AssignmentExpression	* sock = ( Sock * ) s		721498	2		=			
ANR	721553	Identifier	sock		721498	0					
ANR	721554	CastExpression	( Sock * ) s		721498	1					
ANR	721555	CastTarget	Sock *		721498	0					
ANR	721556	Identifier	s		721498	1					
ANR	721557	IdentifierDeclStatement	"DCSchedd matched_schedd ( c_addr , NULL ) ;"	996:1:26272:26311	721498	5	True				
ANR	721558	IdentifierDecl	"matched_schedd ( c_addr , NULL )"		721498	0					
ANR	721559	IdentifierDeclType	DCSchedd		721498	0					
ANR	721560	Identifier	matched_schedd		721498	1					
ANR	721561	Expression	"c_addr , NULL"		721498	2					
ANR	721562	Identifier	c_addr		721498	0					
ANR	721563	Identifier	NULL		721498	1					
ANR	721564	ExpressionStatement	"dprintf ( D_PROTOCOL , ""In Claim::sendAliveConnectHandler id %s\\n"" , publicClaimId ( ) )"	998:1:26315:26397	721498	6	True				
ANR	721565	CallExpression	"dprintf ( D_PROTOCOL , ""In Claim::sendAliveConnectHandler id %s\\n"" , publicClaimId ( ) )"		721498	0					
ANR	721566	Callee	dprintf		721498	0					
ANR	721567	Identifier	dprintf		721498	0					
ANR	721568	ArgumentList	D_PROTOCOL		721498	1					
ANR	721569	Argument	D_PROTOCOL		721498	0					
ANR	721570	Identifier	D_PROTOCOL		721498	0					
ANR	721571	Argument	"""In Claim::sendAliveConnectHandler id %s\\n"""		721498	1					
ANR	721572	PrimaryExpression	"""In Claim::sendAliveConnectHandler id %s\\n"""		721498	0					
ANR	721573	Argument	publicClaimId ( )		721498	2					
ANR	721574	CallExpression	publicClaimId ( )		721498	0					
ANR	721575	Callee	publicClaimId		721498	0					
ANR	721576	Identifier	publicClaimId		721498	0					
ANR	721577	ArgumentList			721498	1					
ANR	721578	IfStatement	if ( ! sock )		721498	7					
ANR	721579	Condition	! sock	1000:5:26405:26409	721498	0	True				
ANR	721580	UnaryOperationExpression	! sock		721498	0					
ANR	721581	UnaryOperator	!		721498	0					
ANR	721582	Identifier	sock		721498	1					
ANR	721583	CompoundStatement		19:12:397:397	721498	1					
ANR	721584	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""NULL sock when connecting to schedd %s\\n"" , c_addr )"	1001:2:26416:26508	721498	0	True				
ANR	721585	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""NULL sock when connecting to schedd %s\\n"" , c_addr )"		721498	0					
ANR	721586	Callee	dprintf		721498	0					
ANR	721587	Identifier	dprintf		721498	0					
ANR	721588	ArgumentList	D_FAILURE | D_ALWAYS		721498	1					
ANR	721589	Argument	D_FAILURE | D_ALWAYS		721498	0					
ANR	721590	InclusiveOrExpression	D_FAILURE | D_ALWAYS		721498	0		|			
ANR	721591	Identifier	D_FAILURE		721498	0					
ANR	721592	Identifier	D_ALWAYS		721498	1					
ANR	721593	Argument	"""NULL sock when connecting to schedd %s\\n"""		721498	1					
ANR	721594	PrimaryExpression	"""NULL sock when connecting to schedd %s\\n"""		721498	0					
ANR	721595	Argument	c_addr		721498	2					
ANR	721596	Identifier	c_addr		721498	0					
ANR	721597	ExpressionStatement	ALIVE_BAILOUT	1004:2:26512:26525	721498	1	True				
ANR	721598	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721599	ExpressionStatement	ASSERT ( c_alive_inprogress_sock == sock )	1007:1:26575:26614	721498	8	True				
ANR	721600	CallExpression	ASSERT ( c_alive_inprogress_sock == sock )		721498	0					
ANR	721601	Callee	ASSERT		721498	0					
ANR	721602	Identifier	ASSERT		721498	0					
ANR	721603	ArgumentList	c_alive_inprogress_sock == sock		721498	1					
ANR	721604	Argument	c_alive_inprogress_sock == sock		721498	0					
ANR	721605	EqualityExpression	c_alive_inprogress_sock == sock		721498	0		==			
ANR	721606	Identifier	c_alive_inprogress_sock		721498	0					
ANR	721607	Identifier	sock		721498	1					
ANR	721608	IfStatement	if ( ! sock -> is_connected ( ) )		721498	9					
ANR	721609	Condition	! sock -> is_connected ( )	1009:5:26622:26642	721498	0	True				
ANR	721610	UnaryOperationExpression	! sock -> is_connected ( )		721498	0					
ANR	721611	UnaryOperator	!		721498	0					
ANR	721612	CallExpression	sock -> is_connected ( )		721498	1					
ANR	721613	Callee	sock -> is_connected		721498	0					
ANR	721614	PtrMemberAccess	sock -> is_connected		721498	0					
ANR	721615	Identifier	sock		721498	0					
ANR	721616	Identifier	is_connected		721498	1					
ANR	721617	ArgumentList			721498	1					
ANR	721618	CompoundStatement		28:28:630:630	721498	1					
ANR	721619	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""Failed to connect to schedd %s\\n"" , c_addr )"	1010:2:26649:26727	721498	0	True				
ANR	721620	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""Failed to connect to schedd %s\\n"" , c_addr )"		721498	0					
ANR	721621	Callee	dprintf		721498	0					
ANR	721622	Identifier	dprintf		721498	0					
ANR	721623	ArgumentList	D_FAILURE | D_ALWAYS		721498	1					
ANR	721624	Argument	D_FAILURE | D_ALWAYS		721498	0					
ANR	721625	InclusiveOrExpression	D_FAILURE | D_ALWAYS		721498	0		|			
ANR	721626	Identifier	D_FAILURE		721498	0					
ANR	721627	Identifier	D_ALWAYS		721498	1					
ANR	721628	Argument	"""Failed to connect to schedd %s\\n"""		721498	1					
ANR	721629	PrimaryExpression	"""Failed to connect to schedd %s\\n"""		721498	0					
ANR	721630	Argument	c_addr		721498	2					
ANR	721631	Identifier	c_addr		721498	0					
ANR	721632	ExpressionStatement	ALIVE_BAILOUT	1012:2:26731:26744	721498	1	True				
ANR	721633	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721634	IfStatement	"if ( ! matched_schedd . startCommand ( ALIVE , sock , 20 , NULL , NULL , false , secSessionId ( ) ) )"		721498	10					
ANR	721635	Condition	"! matched_schedd . startCommand ( ALIVE , sock , 20 , NULL , NULL , false , secSessionId ( ) )"	1018:5:26911:26991	721498	0	True				
ANR	721636	UnaryOperationExpression	"! matched_schedd . startCommand ( ALIVE , sock , 20 , NULL , NULL , false , secSessionId ( ) )"		721498	0					
ANR	721637	UnaryOperator	!		721498	0					
ANR	721638	CallExpression	"matched_schedd . startCommand ( ALIVE , sock , 20 , NULL , NULL , false , secSessionId ( ) )"		721498	1					
ANR	721639	Callee	matched_schedd . startCommand		721498	0					
ANR	721640	MemberAccess	matched_schedd . startCommand		721498	0					
ANR	721641	Identifier	matched_schedd		721498	0					
ANR	721642	Identifier	startCommand		721498	1					
ANR	721643	ArgumentList	ALIVE		721498	1					
ANR	721644	Argument	ALIVE		721498	0					
ANR	721645	Identifier	ALIVE		721498	0					
ANR	721646	Argument	sock		721498	1					
ANR	721647	Identifier	sock		721498	0					
ANR	721648	Argument	20		721498	2					
ANR	721649	PrimaryExpression	20		721498	0					
ANR	721650	Argument	NULL		721498	3					
ANR	721651	Identifier	NULL		721498	0					
ANR	721652	Argument	NULL		721498	4					
ANR	721653	Identifier	NULL		721498	0					
ANR	721654	Argument	false		721498	5					
ANR	721655	Identifier	false		721498	0					
ANR	721656	Argument	secSessionId ( )		721498	6					
ANR	721657	CallExpression	secSessionId ( )		721498	0					
ANR	721658	Callee	secSessionId		721498	0					
ANR	721659	Identifier	secSessionId		721498	0					
ANR	721660	ArgumentList			721498	1					
ANR	721661	CompoundStatement		37:88:979:979	721498	1					
ANR	721662	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""Couldn't send ALIVE to schedd at %s\\n"" , c_addr )"	1019:2:26998:27086	721498	0	True				
ANR	721663	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""Couldn't send ALIVE to schedd at %s\\n"" , c_addr )"		721498	0					
ANR	721664	Callee	dprintf		721498	0					
ANR	721665	Identifier	dprintf		721498	0					
ANR	721666	ArgumentList	D_FAILURE | D_ALWAYS		721498	1					
ANR	721667	Argument	D_FAILURE | D_ALWAYS		721498	0					
ANR	721668	InclusiveOrExpression	D_FAILURE | D_ALWAYS		721498	0		|			
ANR	721669	Identifier	D_FAILURE		721498	0					
ANR	721670	Identifier	D_ALWAYS		721498	1					
ANR	721671	Argument	"""Couldn't send ALIVE to schedd at %s\\n"""		721498	1					
ANR	721672	PrimaryExpression	"""Couldn't send ALIVE to schedd at %s\\n"""		721498	0					
ANR	721673	Argument	c_addr		721498	2					
ANR	721674	Identifier	c_addr		721498	0					
ANR	721675	ExpressionStatement	ALIVE_BAILOUT	1022:2:27090:27103	721498	1	True				
ANR	721676	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721677	ExpressionStatement	sock -> encode ( )	1025:1:27153:27167	721498	11	True				
ANR	721678	CallExpression	sock -> encode ( )		721498	0					
ANR	721679	Callee	sock -> encode		721498	0					
ANR	721680	PtrMemberAccess	sock -> encode		721498	0					
ANR	721681	Identifier	sock		721498	0					
ANR	721682	Identifier	encode		721498	1					
ANR	721683	ArgumentList			721498	1					
ANR	721684	IfStatement	if ( ! sock -> put_secret ( claimId ) || ! sock -> end_of_message ( ) )		721498	12					
ANR	721685	Condition	! sock -> put_secret ( claimId ) || ! sock -> end_of_message ( )	1027:6:27176:27230	721498	0	True				
ANR	721686	OrExpression	! sock -> put_secret ( claimId ) || ! sock -> end_of_message ( )		721498	0		||			
ANR	721687	UnaryOperationExpression	! sock -> put_secret ( claimId )		721498	0					
ANR	721688	UnaryOperator	!		721498	0					
ANR	721689	CallExpression	sock -> put_secret ( claimId )		721498	1					
ANR	721690	Callee	sock -> put_secret		721498	0					
ANR	721691	PtrMemberAccess	sock -> put_secret		721498	0					
ANR	721692	Identifier	sock		721498	0					
ANR	721693	Identifier	put_secret		721498	1					
ANR	721694	ArgumentList	claimId		721498	1					
ANR	721695	Argument	claimId		721498	0					
ANR	721696	Identifier	claimId		721498	0					
ANR	721697	UnaryOperationExpression	! sock -> end_of_message ( )		721498	1					
ANR	721698	UnaryOperator	!		721498	0					
ANR	721699	CallExpression	sock -> end_of_message ( )		721498	1					
ANR	721700	Callee	sock -> end_of_message		721498	0					
ANR	721701	PtrMemberAccess	sock -> end_of_message		721498	0					
ANR	721702	Identifier	sock		721498	0					
ANR	721703	Identifier	end_of_message		721498	1					
ANR	721704	ArgumentList			721498	1					
ANR	721705	CompoundStatement		46:64:1219:1219	721498	1					
ANR	721706	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""Failed to send Alive to schedd %s for job %d.%d id %s\\n"" , c_addr , c_cluster , c_proc , publicClaimId ( ) )"	1028:3:27239:27382	721498	0	True				
ANR	721707	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""Failed to send Alive to schedd %s for job %d.%d id %s\\n"" , c_addr , c_cluster , c_proc , publicClaimId ( ) )"		721498	0					
ANR	721708	Callee	dprintf		721498	0					
ANR	721709	Identifier	dprintf		721498	0					
ANR	721710	ArgumentList	D_FAILURE | D_ALWAYS		721498	1					
ANR	721711	Argument	D_FAILURE | D_ALWAYS		721498	0					
ANR	721712	InclusiveOrExpression	D_FAILURE | D_ALWAYS		721498	0		|			
ANR	721713	Identifier	D_FAILURE		721498	0					
ANR	721714	Identifier	D_ALWAYS		721498	1					
ANR	721715	Argument	"""Failed to send Alive to schedd %s for job %d.%d id %s\\n"""		721498	1					
ANR	721716	PrimaryExpression	"""Failed to send Alive to schedd %s for job %d.%d id %s\\n"""		721498	0					
ANR	721717	Argument	c_addr		721498	2					
ANR	721718	Identifier	c_addr		721498	0					
ANR	721719	Argument	c_cluster		721498	3					
ANR	721720	Identifier	c_cluster		721498	0					
ANR	721721	Argument	c_proc		721498	4					
ANR	721722	Identifier	c_proc		721498	0					
ANR	721723	Argument	publicClaimId ( )		721498	5					
ANR	721724	CallExpression	publicClaimId ( )		721498	0					
ANR	721725	Callee	publicClaimId		721498	0					
ANR	721726	Identifier	publicClaimId		721498	0					
ANR	721727	ArgumentList			721498	1					
ANR	721728	ExpressionStatement	ALIVE_BAILOUT	1031:2:27386:27399	721498	1	True				
ANR	721729	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721730	ExpressionStatement	daemonCore -> Cancel_Socket ( sock )	1034:1:27449:27482	721498	13	True				
ANR	721731	CallExpression	daemonCore -> Cancel_Socket ( sock )		721498	0					
ANR	721732	Callee	daemonCore -> Cancel_Socket		721498	0					
ANR	721733	PtrMemberAccess	daemonCore -> Cancel_Socket		721498	0					
ANR	721734	Identifier	daemonCore		721498	0					
ANR	721735	Identifier	Cancel_Socket		721498	1					
ANR	721736	ArgumentList	sock		721498	1					
ANR	721737	Argument	sock		721498	0					
ANR	721738	Identifier	sock		721498	0					
ANR	721739	IdentifierDeclStatement	char to_schedd [ 256 ] ;	1036:1:27525:27544	721498	14	True				
ANR	721740	IdentifierDecl	to_schedd [ 256 ]		721498	0					
ANR	721741	IdentifierDeclType	char [ 256 ]		721498	0					
ANR	721742	Identifier	to_schedd		721498	1					
ANR	721743	PrimaryExpression	256		721498	2					
ANR	721744	ExpressionStatement	"snprintf ( to_schedd , 256 , ""Alive to schedd %s"" , c_addr )"	1037:1:27547:27604	721498	15	True				
ANR	721745	CallExpression	"snprintf ( to_schedd , 256 , ""Alive to schedd %s"" , c_addr )"		721498	0					
ANR	721746	Callee	snprintf		721498	0					
ANR	721747	Identifier	snprintf		721498	0					
ANR	721748	ArgumentList	to_schedd		721498	1					
ANR	721749	Argument	to_schedd		721498	0					
ANR	721750	Identifier	to_schedd		721498	0					
ANR	721751	Argument	256		721498	1					
ANR	721752	PrimaryExpression	256		721498	0					
ANR	721753	Argument	"""Alive to schedd %s"""		721498	2					
ANR	721754	PrimaryExpression	"""Alive to schedd %s"""		721498	0					
ANR	721755	Argument	c_addr		721498	3					
ANR	721756	Identifier	c_addr		721498	0					
ANR	721757	IdentifierDeclStatement	"int reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveResponseHandler , to_schedd , this , ALLOW ) ;"	1038:1:27607:27771	721498	16	True				
ANR	721758	IdentifierDecl	"reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveResponseHandler , to_schedd , this , ALLOW )"		721498	0					
ANR	721759	IdentifierDeclType	int		721498	0					
ANR	721760	Identifier	reg_rc		721498	1					
ANR	721761	AssignmentExpression	"reg_rc = daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveResponseHandler , to_schedd , this , ALLOW )"		721498	2		=			
ANR	721762	Identifier	reg_rc		721498	0					
ANR	721763	CallExpression	"daemonCore -> Register_Socket ( sock , ""<Alive Contact Socket>"" , ( SocketHandlercpp ) & Claim :: sendAliveResponseHandler , to_schedd , this , ALLOW )"		721498	1					
ANR	721764	Callee	daemonCore -> Register_Socket		721498	0					
ANR	721765	PtrMemberAccess	daemonCore -> Register_Socket		721498	0					
ANR	721766	Identifier	daemonCore		721498	0					
ANR	721767	Identifier	Register_Socket		721498	1					
ANR	721768	ArgumentList	sock		721498	1					
ANR	721769	Argument	sock		721498	0					
ANR	721770	Identifier	sock		721498	0					
ANR	721771	Argument	"""<Alive Contact Socket>"""		721498	1					
ANR	721772	PrimaryExpression	"""<Alive Contact Socket>"""		721498	0					
ANR	721773	Argument	( SocketHandlercpp ) & Claim :: sendAliveResponseHandler		721498	2					
ANR	721774	CastExpression	( SocketHandlercpp ) & Claim :: sendAliveResponseHandler		721498	0					
ANR	721775	CastTarget	SocketHandlercpp		721498	0					
ANR	721776	UnaryOperationExpression	& Claim :: sendAliveResponseHandler		721498	1					
ANR	721777	UnaryOperator	&		721498	0					
ANR	721778	Identifier	Claim :: sendAliveResponseHandler		721498	1					
ANR	721779	Argument	to_schedd		721498	3					
ANR	721780	Identifier	to_schedd		721498	0					
ANR	721781	Argument	this		721498	4					
ANR	721782	Identifier	this		721498	0					
ANR	721783	Argument	ALLOW		721498	5					
ANR	721784	Identifier	ALLOW		721498	0					
ANR	721785	IfStatement	if ( reg_rc < 0 )		721498	17					
ANR	721786	Condition	reg_rc < 0	1043:4:27778:27787	721498	0	True				
ANR	721787	RelationalExpression	reg_rc < 0		721498	0		<			
ANR	721788	Identifier	reg_rc		721498	0					
ANR	721789	PrimaryExpression	0		721498	1					
ANR	721790	CompoundStatement		62:16:1775:1775	721498	1					
ANR	721791	Statement	dprintf	1044:2:27794:27800	721498	0	True				
ANR	721792	Statement	(	1044:9:27801:27801	721498	1	True				
ANR	721793	Statement	D_ALWAYS	1044:11:27803:27810	721498	2	True				
ANR	721794	Statement	","	1044:19:27811:27811	721498	3	True				
ANR	721795	Statement	"""Failed to register socket for alive to schedd at %s.  """	1045:11:27824:27879	721498	4	True				
ANR	721796	Statement	"""Register_Socket returned %d.\\n"""	1046:11:27892:27923	721498	5	True				
ANR	721797	Statement	","	1046:43:27924:27924	721498	6	True				
ANR	721798	Statement	c_addr	1047:11:27937:27942	721498	7	True				
ANR	721799	Statement	","	1047:17:27943:27943	721498	8	True				
ANR	721800	Statement	reg_rc	1047:18:27944:27949	721498	9	True				
ANR	721801	Statement	)	1047:24:27950:27950	721498	10	True				
ANR	721802	ExpressionStatement		1047:25:27951:27951	721498	11	True				
ANR	721803	ExpressionStatement	ALIVE_BAILOUT	1048:2:27955:27968	721498	12	True				
ANR	721804	Identifier	ALIVE_BAILOUT		721498	0					
ANR	721805	ExpressionStatement	"dprintf ( D_PROTOCOL , ""Leaving Claim::sendAliveConnectHandler success id %s\\n"" , publicClaimId ( ) )"	1051:1:28018:28115	721498	18	True				
ANR	721806	CallExpression	"dprintf ( D_PROTOCOL , ""Leaving Claim::sendAliveConnectHandler success id %s\\n"" , publicClaimId ( ) )"		721498	0					
ANR	721807	Callee	dprintf		721498	0					
ANR	721808	Identifier	dprintf		721498	0					
ANR	721809	ArgumentList	D_PROTOCOL		721498	1					
ANR	721810	Argument	D_PROTOCOL		721498	0					
ANR	721811	Identifier	D_PROTOCOL		721498	0					
ANR	721812	Argument	"""Leaving Claim::sendAliveConnectHandler success id %s\\n"""		721498	1					
ANR	721813	PrimaryExpression	"""Leaving Claim::sendAliveConnectHandler success id %s\\n"""		721498	0					
ANR	721814	Argument	publicClaimId ( )		721498	2					
ANR	721815	CallExpression	publicClaimId ( )		721498	0					
ANR	721816	Callee	publicClaimId		721498	0					
ANR	721817	Identifier	publicClaimId		721498	0					
ANR	721818	ArgumentList			721498	1					
ANR	721819	ExpressionStatement	c_alive_inprogress_sock = sock	1056:1:28228:28258	721498	19	True				
ANR	721820	AssignmentExpression	c_alive_inprogress_sock = sock		721498	0		=			
ANR	721821	Identifier	c_alive_inprogress_sock		721498	0					
ANR	721822	Identifier	sock		721498	1					
ANR	721823	ReturnStatement	return KEEP_STREAM ;	1057:1:28261:28279	721498	20	True				
ANR	721824	Identifier	KEEP_STREAM		721498	0					
ANR	721825	ReturnType	int		721498	1					
ANR	721826	Identifier	Claim :: sendAliveConnectHandler		721498	2					
ANR	721827	ParameterList	Stream * s		721498	3					
ANR	721828	Parameter	Stream * s	981:31:26003:26011	721498	0	True				
ANR	721829	ParameterType	Stream *		721498	0					
ANR	721830	Identifier	s		721498	1					
ANR	721831	CFGEntryNode	ENTRY		721498		True				
ANR	721832	CFGExitNode	EXIT		721498		True				
ANR	721833	Symbol	sock -> end_of_message		721498						
ANR	721834	Symbol	publicClaimId		721498						
ANR	721835	Symbol	KEEP_STREAM		721498						
ANR	721836	Symbol	sock -> is_connected		721498						
ANR	721837	Symbol	& Claim :: sendAliveResponseHandler		721498						
ANR	721838	Symbol	sock -> put_secret		721498						
ANR	721839	Symbol	c_addr		721498						
ANR	721840	Symbol	daemonCore -> Register_Socket		721498						
ANR	721841	Symbol	daemonCore		721498						
ANR	721842	Symbol	secSessionId		721498						
ANR	721843	Symbol	ALIVE		721498						
ANR	721844	Symbol	id		721498						
ANR	721845	Symbol	* sock		721498						
ANR	721846	Symbol	ALLOW		721498						
ANR	721847	Symbol	c_cluster		721498						
ANR	721848	Symbol	c_client -> addr		721498						
ANR	721849	Symbol	NULL		721498						
ANR	721850	Symbol	D_PROTOCOL		721498						
ANR	721851	Symbol	to_schedd		721498						
ANR	721852	Symbol	D_ALWAYS		721498						
ANR	721853	Symbol	matched_schedd		721498						
ANR	721854	Symbol	false		721498						
ANR	721855	Symbol	this		721498						
ANR	721856	Symbol	c_alive_inprogress_sock		721498						
ANR	721857	Symbol	claimId		721498						
ANR	721858	Symbol	D_FAILURE		721498						
ANR	721859	Symbol	* c_client		721498						
ANR	721860	Symbol	c_proc		721498						
ANR	721861	Symbol	c_client		721498						
ANR	721862	Symbol	sock		721498						
ANR	721863	Symbol	s		721498						
ANR	721864	Symbol	reg_rc		721498						
ANR	721865	Symbol	* daemonCore		721498						
ANR	721866	Symbol	matched_schedd . startCommand		721498						
ANR	721867	Function	Claim :: sendAliveResponseHandler	1060:0:28284:29557							
ANR	721868	FunctionDef	Claim :: sendAliveResponseHandler (Stream * sock)		721867	0					
ANR	721869	CompoundStatement		1062:0:28336:29557	721867	0					
ANR	721870	IdentifierDeclStatement	int reply ;	1063:1:28339:28348	721867	0	True				
ANR	721871	IdentifierDecl	reply		721867	0					
ANR	721872	IdentifierDeclType	int		721867	0					
ANR	721873	Identifier	reply		721867	1					
ANR	721874	IdentifierDeclStatement	"const char * c_addr = ""(unknown)"" ;"	1064:1:28351:28383	721867	1	True				
ANR	721875	IdentifierDecl	"* c_addr = ""(unknown)"""		721867	0					
ANR	721876	IdentifierDeclType	const char *		721867	0					
ANR	721877	Identifier	c_addr		721867	1					
ANR	721878	AssignmentExpression	"* c_addr = ""(unknown)"""		721867	2		=			
ANR	721879	Identifier	c_addr		721867	0					
ANR	721880	PrimaryExpression	"""(unknown)"""		721867	1					
ANR	721881	IfStatement	if ( c_client )		721867	2					
ANR	721882	Condition	c_client	1066:6:28392:28399	721867	0	True				
ANR	721883	Identifier	c_client		721867	0					
ANR	721884	CompoundStatement		5:17:66:66	721867	1					
ANR	721885	ExpressionStatement	c_addr = c_client -> addr ( )	1067:2:28407:28432	721867	0	True				
ANR	721886	AssignmentExpression	c_addr = c_client -> addr ( )		721867	0		=			
ANR	721887	Identifier	c_addr		721867	0					
ANR	721888	CallExpression	c_client -> addr ( )		721867	1					
ANR	721889	Callee	c_client -> addr		721867	0					
ANR	721890	PtrMemberAccess	c_client -> addr		721867	0					
ANR	721891	Identifier	c_client		721867	0					
ANR	721892	Identifier	addr		721867	1					
ANR	721893	ArgumentList			721867	1					
ANR	721894	ExpressionStatement	sock -> timeout ( 1 )	1073:1:28619:28635	721867	3	True				
ANR	721895	CallExpression	sock -> timeout ( 1 )		721867	0					
ANR	721896	Callee	sock -> timeout		721867	0					
ANR	721897	PtrMemberAccess	sock -> timeout		721867	0					
ANR	721898	Identifier	sock		721867	0					
ANR	721899	Identifier	timeout		721867	1					
ANR	721900	ArgumentList	1		721867	1					
ANR	721901	Argument	1		721867	0					
ANR	721902	PrimaryExpression	1		721867	0					
ANR	721903	IfStatement	"if ( ! sock -> rcv_int ( reply , TRUE ) )"		721867	4					
ANR	721904	Condition	"! sock -> rcv_int ( reply , TRUE )"	1075:6:28644:28670	721867	0	True				
ANR	721905	UnaryOperationExpression	"! sock -> rcv_int ( reply , TRUE )"		721867	0					
ANR	721906	UnaryOperator	!		721867	0					
ANR	721907	CallExpression	"sock -> rcv_int ( reply , TRUE )"		721867	1					
ANR	721908	Callee	sock -> rcv_int		721867	0					
ANR	721909	PtrMemberAccess	sock -> rcv_int		721867	0					
ANR	721910	Identifier	sock		721867	0					
ANR	721911	Identifier	rcv_int		721867	1					
ANR	721912	ArgumentList	reply		721867	1					
ANR	721913	Argument	reply		721867	0					
ANR	721914	Identifier	reply		721867	0					
ANR	721915	Argument	TRUE		721867	1					
ANR	721916	Identifier	TRUE		721867	0					
ANR	721917	CompoundStatement		14:36:337:337	721867	1					
ANR	721918	ExpressionStatement	"dprintf ( D_ALWAYS , ""Response problem from schedd %s on ALIVE job %d.%d.\\n"" , c_addr , c_cluster , c_proc )"	1076:2:28678:28789	721867	0	True				
ANR	721919	CallExpression	"dprintf ( D_ALWAYS , ""Response problem from schedd %s on ALIVE job %d.%d.\\n"" , c_addr , c_cluster , c_proc )"		721867	0					
ANR	721920	Callee	dprintf		721867	0					
ANR	721921	Identifier	dprintf		721867	0					
ANR	721922	ArgumentList	D_ALWAYS		721867	1					
ANR	721923	Argument	D_ALWAYS		721867	0					
ANR	721924	Identifier	D_ALWAYS		721867	0					
ANR	721925	Argument	"""Response problem from schedd %s on ALIVE job %d.%d.\\n"""		721867	1					
ANR	721926	PrimaryExpression	"""Response problem from schedd %s on ALIVE job %d.%d.\\n"""		721867	0					
ANR	721927	Argument	c_addr		721867	2					
ANR	721928	Identifier	c_addr		721867	0					
ANR	721929	Argument	c_cluster		721867	3					
ANR	721930	Identifier	c_cluster		721867	0					
ANR	721931	Argument	c_proc		721867	4					
ANR	721932	Identifier	c_proc		721867	0					
ANR	721933	ExpressionStatement	ALIVE_BAILOUT	1079:2:28794:28807	721867	1	True				
ANR	721934	Identifier	ALIVE_BAILOUT		721867	0					
ANR	721935	ExpressionStatement	"dprintf ( D_PROTOCOL , ""Received Alive response of %d from schedd %s job %d.%d\\n"" , reply , c_addr , c_cluster , c_proc )"	1083:1:28907:29024	721867	5	True				
ANR	721936	CallExpression	"dprintf ( D_PROTOCOL , ""Received Alive response of %d from schedd %s job %d.%d\\n"" , reply , c_addr , c_cluster , c_proc )"		721867	0					
ANR	721937	Callee	dprintf		721867	0					
ANR	721938	Identifier	dprintf		721867	0					
ANR	721939	ArgumentList	D_PROTOCOL		721867	1					
ANR	721940	Argument	D_PROTOCOL		721867	0					
ANR	721941	Identifier	D_PROTOCOL		721867	0					
ANR	721942	Argument	"""Received Alive response of %d from schedd %s job %d.%d\\n"""		721867	1					
ANR	721943	PrimaryExpression	"""Received Alive response of %d from schedd %s job %d.%d\\n"""		721867	0					
ANR	721944	Argument	reply		721867	2					
ANR	721945	Identifier	reply		721867	0					
ANR	721946	Argument	c_addr		721867	3					
ANR	721947	Identifier	c_addr		721867	0					
ANR	721948	Argument	c_cluster		721867	4					
ANR	721949	Identifier	c_cluster		721867	0					
ANR	721950	Argument	c_proc		721867	5					
ANR	721951	Identifier	c_proc		721867	0					
ANR	721952	IfStatement	if ( reply == - 1 )		721867	6					
ANR	721953	Condition	reply == - 1	1089:6:29138:29148	721867	0	True				
ANR	721954	EqualityExpression	reply == - 1		721867	0		==			
ANR	721955	Identifier	reply		721867	0					
ANR	721956	UnaryOperationExpression	- 1		721867	1					
ANR	721957	UnaryOperator	-		721867	0					
ANR	721958	PrimaryExpression	1		721867	1					
ANR	721959	CompoundStatement		28:20:815:815	721867	1					
ANR	721960	Statement	dprintf	1090:2:29156:29162	721867	0	True				
ANR	721961	Statement	(	1090:9:29163:29163	721867	1	True				
ANR	721962	Statement	D_FAILURE	1090:10:29164:29172	721867	2	True				
ANR	721963	Statement	|	1090:19:29173:29173	721867	3	True				
ANR	721964	Statement	D_ALWAYS	1090:20:29174:29181	721867	4	True				
ANR	721965	Statement	","	1090:28:29182:29182	721867	5	True				
ANR	721966	Statement	"""State change: claim no longer recognized """	1090:29:29183:29225	721867	6	True				
ANR	721967	Statement	"""by the schedd - removing claim\\n"""	1091:4:29231:29264	721867	7	True				
ANR	721968	Statement	)	1091:39:29266:29266	721867	8	True				
ANR	721969	ExpressionStatement		1091:40:29267:29267	721867	9	True				
ANR	721970	ExpressionStatement	c_alive_inprogress_sock = NULL	1092:2:29271:29301	721867	10	True				
ANR	721971	AssignmentExpression	c_alive_inprogress_sock = NULL		721867	0		=			
ANR	721972	Identifier	c_alive_inprogress_sock		721867	0					
ANR	721973	Identifier	NULL		721867	1					
ANR	721974	ExpressionStatement	finishKillClaim ( )	1093:2:29305:29322	721867	11	True				
ANR	721975	CallExpression	finishKillClaim ( )		721867	0					
ANR	721976	Callee	finishKillClaim		721867	0					
ANR	721977	Identifier	finishKillClaim		721867	0					
ANR	721978	ArgumentList			721867	1					
ANR	721979	ReturnStatement	return FALSE ;	1094:2:29350:29362	721867	12	True				
ANR	721980	Identifier	FALSE		721867	0					
ANR	721981	ExpressionStatement	alive ( )	1097:1:29369:29376	721867	7	True				
ANR	721982	CallExpression	alive ( )		721867	0					
ANR	721983	Callee	alive		721867	0					
ANR	721984	Identifier	alive		721867	0					
ANR	721985	ArgumentList			721867	1					
ANR	721986	ExpressionStatement	c_alive_inprogress_sock = NULL	1100:1:29510:29540	721867	8	True				
ANR	721987	AssignmentExpression	c_alive_inprogress_sock = NULL		721867	0		=			
ANR	721988	Identifier	c_alive_inprogress_sock		721867	0					
ANR	721989	Identifier	NULL		721867	1					
ANR	721990	ReturnStatement	return TRUE ;	1102:1:29544:29555	721867	9	True				
ANR	721991	Identifier	TRUE		721867	0					
ANR	721992	ReturnType	int		721867	1					
ANR	721993	Identifier	Claim :: sendAliveResponseHandler		721867	2					
ANR	721994	ParameterList	Stream * sock		721867	3					
ANR	721995	Parameter	Stream * sock	1061:33:28321:28332	721867	0	True				
ANR	721996	ParameterType	Stream *		721867	0					
ANR	721997	Identifier	sock		721867	1					
ANR	721998	CFGEntryNode	ENTRY		721867		True				
ANR	721999	CFGExitNode	EXIT		721867		True				
ANR	722000	Symbol	sock -> rcv_int		721867						
ANR	722001	Symbol	c_client -> addr		721867						
ANR	722002	Symbol	NULL		721867						
ANR	722003	Symbol	D_PROTOCOL		721867						
ANR	722004	Symbol	D_ALWAYS		721867						
ANR	722005	Symbol	TRUE		721867						
ANR	722006	Symbol	c_alive_inprogress_sock		721867						
ANR	722007	Symbol	* c_client		721867						
ANR	722008	Symbol	c_proc		721867						
ANR	722009	Symbol	c_client		721867						
ANR	722010	Symbol	sock		721867						
ANR	722011	Symbol	c_addr		721867						
ANR	722012	Symbol	FALSE		721867						
ANR	722013	Symbol	reply		721867						
ANR	722014	Symbol	* sock		721867						
ANR	722015	Symbol	c_cluster		721867						
ANR	722016	Function	Claim :: leaseExpired	1106:0:29561:30191							
ANR	722017	FunctionDef	Claim :: leaseExpired ()		722016	0					
ANR	722018	CompoundStatement		1108:0:29588:30191	722016	0					
ANR	722019	ExpressionStatement	c_lease_tid = - 1	1109:1:29591:29607	722016	0	True				
ANR	722020	AssignmentExpression	c_lease_tid = - 1		722016	0		=			
ANR	722021	Identifier	c_lease_tid		722016	0					
ANR	722022	UnaryOperationExpression	- 1		722016	1					
ANR	722023	UnaryOperator	-		722016	0					
ANR	722024	PrimaryExpression	1		722016	1					
ANR	722025	IfStatement	if ( c_type == CLAIM_COD )		722016	1					
ANR	722026	Condition	c_type == CLAIM_COD	1111:5:29615:29633	722016	0	True				
ANR	722027	EqualityExpression	c_type == CLAIM_COD		722016	0		==			
ANR	722028	Identifier	c_type		722016	0					
ANR	722029	Identifier	CLAIM_COD		722016	1					
ANR	722030	CompoundStatement		4:27:48:48	722016	1					
ANR	722031	Statement	dprintf	1112:2:29641:29647	722016	0	True				
ANR	722032	Statement	(	1112:9:29648:29648	722016	1	True				
ANR	722033	Statement	D_FAILURE	1112:11:29650:29658	722016	2	True				
ANR	722034	Statement	|	1112:20:29659:29659	722016	3	True				
ANR	722035	Statement	D_ALWAYS	1112:21:29660:29667	722016	4	True				
ANR	722036	Statement	","	1112:29:29668:29668	722016	5	True				
ANR	722037	Statement	"""COD claim %s lease expired """	1112:31:29670:29698	722016	6	True				
ANR	722038	Statement	"""(client must not have called 'condor_cod renew' within %d seconds)\\n"""	1113:5:29705:29774	722016	7	True				
ANR	722039	Statement	","	1113:75:29775:29775	722016	8	True				
ANR	722040	Statement	id	1113:77:29777:29778	722016	9	True				
ANR	722041	Statement	(	1113:79:29779:29779	722016	10	True				
ANR	722042	Statement	)	1113:80:29780:29780	722016	11	True				
ANR	722043	Statement	","	1113:81:29781:29781	722016	12	True				
ANR	722044	Statement	c_lease_duration	1113:83:29783:29798	722016	13	True				
ANR	722045	Statement	)	1113:100:29800:29800	722016	14	True				
ANR	722046	ExpressionStatement		1113:101:29801:29801	722016	15	True				
ANR	722047	IfStatement	if ( removeClaim ( false ) )		722016	16					
ANR	722048	Condition	removeClaim ( false )	1114:6:29809:29826	722016	0	True				
ANR	722049	CallExpression	removeClaim ( false )		722016	0					
ANR	722050	Callee	removeClaim		722016	0					
ANR	722051	Identifier	removeClaim		722016	0					
ANR	722052	ArgumentList	false		722016	1					
ANR	722053	Argument	false		722016	0					
ANR	722054	Identifier	false		722016	0					
ANR	722055	CompoundStatement		10:3:354:383	722016	1					
ANR	722056	IdentifierDeclStatement	CODMgr * pCODMgr = getCODMgr ( ) ;	1117:3:29943:29972	722016	0	True				
ANR	722057	IdentifierDecl	* pCODMgr = getCODMgr ( )		722016	0					
ANR	722058	IdentifierDeclType	CODMgr *		722016	0					
ANR	722059	Identifier	pCODMgr		722016	1					
ANR	722060	AssignmentExpression	* pCODMgr = getCODMgr ( )		722016	2		=			
ANR	722061	Identifier	pCODMgr		722016	0					
ANR	722062	CallExpression	getCODMgr ( )		722016	1					
ANR	722063	Callee	getCODMgr		722016	0					
ANR	722064	Identifier	getCODMgr		722016	0					
ANR	722065	ArgumentList			722016	1					
ANR	722066	IfStatement	if ( pCODMgr )		722016	1					
ANR	722067	Condition	pCODMgr	1118:7:29981:29987	722016	0	True				
ANR	722068	Identifier	pCODMgr		722016	0					
ANR	722069	ExpressionStatement	pCODMgr -> removeClaim ( this )	1119:4:29994:30020	722016	1	True				
ANR	722070	CallExpression	pCODMgr -> removeClaim ( this )		722016	0					
ANR	722071	Callee	pCODMgr -> removeClaim		722016	0					
ANR	722072	PtrMemberAccess	pCODMgr -> removeClaim		722016	0					
ANR	722073	Identifier	pCODMgr		722016	0					
ANR	722074	Identifier	removeClaim		722016	1					
ANR	722075	ArgumentList	this		722016	1					
ANR	722076	Argument	this		722016	0					
ANR	722077	Identifier	this		722016	0					
ANR	722078	ReturnStatement	return ;	1121:2:30028:30034	722016	17	True				
ANR	722079	Statement	dprintf	1124:1:30041:30047	722016	2	True				
ANR	722080	Statement	(	1124:8:30048:30048	722016	3	True				
ANR	722081	Statement	D_FAILURE	1124:10:30050:30058	722016	4	True				
ANR	722082	Statement	|	1124:19:30059:30059	722016	5	True				
ANR	722083	Statement	D_ALWAYS	1124:20:30060:30067	722016	6	True				
ANR	722084	Statement	","	1124:28:30068:30068	722016	7	True				
ANR	722085	Statement	"""State change: claim lease expired """	1124:30:30070:30105	722016	8	True				
ANR	722086	Statement	"""(condor_schedd gone?)\\n"""	1125:4:30111:30135	722016	9	True				
ANR	722087	Statement	)	1125:30:30137:30137	722016	10	True				
ANR	722088	ExpressionStatement		1125:31:30138:30138	722016	11	True				
ANR	722089	ExpressionStatement	finishKillClaim ( )	1128:1:30163:30180	722016	12	True				
ANR	722090	CallExpression	finishKillClaim ( )		722016	0					
ANR	722091	Callee	finishKillClaim		722016	0					
ANR	722092	Identifier	finishKillClaim		722016	0					
ANR	722093	ArgumentList			722016	1					
ANR	722094	ReturnStatement	return ;	1129:1:30183:30189	722016	13	True				
ANR	722095	ReturnType	void		722016	1					
ANR	722096	Identifier	Claim :: leaseExpired		722016	2					
ANR	722097	ParameterList			722016	3					
ANR	722098	CFGEntryNode	ENTRY		722016		True				
ANR	722099	CFGExitNode	EXIT		722016		True				
ANR	722100	Symbol	c_lease_tid		722016						
ANR	722101	Symbol	getCODMgr		722016						
ANR	722102	Symbol	c_type		722016						
ANR	722103	Symbol	CLAIM_COD		722016						
ANR	722104	Symbol	pCODMgr		722016						
ANR	722105	Symbol	false		722016						
ANR	722106	Symbol	this		722016						
ANR	722107	Symbol	removeClaim		722016						
ANR	722108	Function	Claim :: finishKillClaim	1132:0:30194:30608							
ANR	722109	FunctionDef	Claim :: finishKillClaim ()		722108	0					
ANR	722110	CompoundStatement		1134:0:30223:30608	722108	0					
ANR	722111	IdentifierDeclStatement	Resource * res_ip = resmgr -> get_by_cur_id ( id ( ) ) ;	1135:1:30226:30274	722108	0	True				
ANR	722112	IdentifierDecl	* res_ip = resmgr -> get_by_cur_id ( id ( ) )		722108	0					
ANR	722113	IdentifierDeclType	Resource *		722108	0					
ANR	722114	Identifier	res_ip		722108	1					
ANR	722115	AssignmentExpression	* res_ip = resmgr -> get_by_cur_id ( id ( ) )		722108	2		=			
ANR	722116	Identifier	res_ip		722108	0					
ANR	722117	CallExpression	resmgr -> get_by_cur_id ( id ( ) )		722108	1					
ANR	722118	Callee	resmgr -> get_by_cur_id		722108	0					
ANR	722119	PtrMemberAccess	resmgr -> get_by_cur_id		722108	0					
ANR	722120	Identifier	resmgr		722108	0					
ANR	722121	Identifier	get_by_cur_id		722108	1					
ANR	722122	ArgumentList	id ( )		722108	1					
ANR	722123	Argument	id ( )		722108	0					
ANR	722124	CallExpression	id ( )		722108	0					
ANR	722125	Callee	id		722108	0					
ANR	722126	Identifier	id		722108	0					
ANR	722127	ArgumentList			722108	1					
ANR	722128	IfStatement	if ( ! res_ip )		722108	1					
ANR	722129	Condition	! res_ip	1136:5:30281:30287	722108	0	True				
ANR	722130	UnaryOperationExpression	! res_ip		722108	0					
ANR	722131	UnaryOperator	!		722108	0					
ANR	722132	Identifier	res_ip		722108	1					
ANR	722133	CompoundStatement		3:15:67:67	722108	1					
ANR	722134	ExpressionStatement	"EXCEPT ( ""Can't find resource of expired claim"" )"	1137:2:30295:30343	722108	0	True				
ANR	722135	CallExpression	"EXCEPT ( ""Can't find resource of expired claim"" )"		722108	0					
ANR	722136	Callee	EXCEPT		722108	0					
ANR	722137	Identifier	EXCEPT		722108	0					
ANR	722138	ArgumentList	"""Can't find resource of expired claim"""		722108	1					
ANR	722139	Argument	"""Can't find resource of expired claim"""		722108	0					
ANR	722140	PrimaryExpression	"""Can't find resource of expired claim"""		722108	0					
ANR	722141	IfStatement	if ( c_client )		722108	2					
ANR	722142	Condition	c_client	1142:5:30495:30502	722108	0	True				
ANR	722143	Identifier	c_client		722108	0					
ANR	722144	CompoundStatement		9:16:282:282	722108	1					
ANR	722145	Statement	delete	1143:2:30510:30515	722108	0	True				
ANR	722146	ExpressionStatement	c_client	1143:9:30517:30525	722108	1	True				
ANR	722147	Identifier	c_client		722108	0					
ANR	722148	ExpressionStatement	c_client = NULL	1144:2:30529:30544	722108	2	True				
ANR	722149	AssignmentExpression	c_client = NULL		722108	0		=			
ANR	722150	Identifier	c_client		722108	0					
ANR	722151	Identifier	NULL		722108	1					
ANR	722152	ExpressionStatement	res_ip -> kill_claim ( )	1148:1:30572:30592	722108	3	True				
ANR	722153	CallExpression	res_ip -> kill_claim ( )		722108	0					
ANR	722154	Callee	res_ip -> kill_claim		722108	0					
ANR	722155	PtrMemberAccess	res_ip -> kill_claim		722108	0					
ANR	722156	Identifier	res_ip		722108	0					
ANR	722157	Identifier	kill_claim		722108	1					
ANR	722158	ArgumentList			722108	1					
ANR	722159	ReturnStatement	return TRUE ;	1149:1:30595:30606	722108	4	True				
ANR	722160	Identifier	TRUE		722108	0					
ANR	722161	ReturnType	int		722108	1					
ANR	722162	Identifier	Claim :: finishKillClaim		722108	2					
ANR	722163	ParameterList			722108	3					
ANR	722164	CFGEntryNode	ENTRY		722108		True				
ANR	722165	CFGExitNode	EXIT		722108		True				
ANR	722166	Symbol	c_client		722108						
ANR	722167	Symbol	NULL		722108						
ANR	722168	Symbol	resmgr		722108						
ANR	722169	Symbol	* resmgr		722108						
ANR	722170	Symbol	TRUE		722108						
ANR	722171	Symbol	res_ip		722108						
ANR	722172	Symbol	id		722108						
ANR	722173	Symbol	resmgr -> get_by_cur_id		722108						
ANR	722174	Function	Claim :: alive	1152:0:30611:31974							
ANR	722175	FunctionDef	Claim :: alive (bool alive_from_schedd)		722174	0					
ANR	722176	CompoundStatement		1154:0:30655:31974	722174	0					
ANR	722177	ExpressionStatement	"dprintf ( D_PROTOCOL , ""Keep alive for ClaimId %s job %d.%d%s\\n"" , publicClaimId ( ) , c_cluster , c_proc , alive_from_schedd ? "", received from schedd"" : """" )"	1155:1:30658:30818	722174	0	True				
ANR	722178	CallExpression	"dprintf ( D_PROTOCOL , ""Keep alive for ClaimId %s job %d.%d%s\\n"" , publicClaimId ( ) , c_cluster , c_proc , alive_from_schedd ? "", received from schedd"" : """" )"		722174	0					
ANR	722179	Callee	dprintf		722174	0					
ANR	722180	Identifier	dprintf		722174	0					
ANR	722181	ArgumentList	D_PROTOCOL		722174	1					
ANR	722182	Argument	D_PROTOCOL		722174	0					
ANR	722183	Identifier	D_PROTOCOL		722174	0					
ANR	722184	Argument	"""Keep alive for ClaimId %s job %d.%d%s\\n"""		722174	1					
ANR	722185	PrimaryExpression	"""Keep alive for ClaimId %s job %d.%d%s\\n"""		722174	0					
ANR	722186	Argument	publicClaimId ( )		722174	2					
ANR	722187	CallExpression	publicClaimId ( )		722174	0					
ANR	722188	Callee	publicClaimId		722174	0					
ANR	722189	Identifier	publicClaimId		722174	0					
ANR	722190	ArgumentList			722174	1					
ANR	722191	Argument	c_cluster		722174	3					
ANR	722192	Identifier	c_cluster		722174	0					
ANR	722193	Argument	c_proc		722174	4					
ANR	722194	Identifier	c_proc		722174	0					
ANR	722195	Argument	"alive_from_schedd ? "", received from schedd"" : """""		722174	5					
ANR	722196	ConditionalExpression	"alive_from_schedd ? "", received from schedd"" : """""		722174	0					
ANR	722197	Condition	alive_from_schedd		722174	0					
ANR	722198	Identifier	alive_from_schedd		722174	0					
ANR	722199	PrimaryExpression	""", received from schedd"""		722174	1					
ANR	722200	PrimaryExpression	""""""		722174	2					
ANR	722201	IfStatement	if ( c_lease_tid == - 1 )		722174	1					
ANR	722202	Condition	c_lease_tid == - 1	1168:5:31160:31176	722174	0	True				
ANR	722203	EqualityExpression	c_lease_tid == - 1		722174	0		==			
ANR	722204	Identifier	c_lease_tid		722174	0					
ANR	722205	UnaryOperationExpression	- 1		722174	1					
ANR	722206	UnaryOperator	-		722174	0					
ANR	722207	PrimaryExpression	1		722174	1					
ANR	722208	CompoundStatement		15:25:524:524	722174	1					
ANR	722209	ExpressionStatement	startLeaseTimer ( )	1169:2:31184:31201	722174	0	True				
ANR	722210	CallExpression	startLeaseTimer ( )		722174	0					
ANR	722211	Callee	startLeaseTimer		722174	0					
ANR	722212	Identifier	startLeaseTimer		722174	0					
ANR	722213	ArgumentList			722174	1					
ANR	722214	ElseStatement	else		722174	0					
ANR	722215	CompoundStatement		18:6:556:556	722174	0					
ANR	722216	ExpressionStatement	"daemonCore -> Reset_Timer ( c_lease_tid , c_lease_duration , 0 )"	1172:2:31216:31275	722174	0	True				
ANR	722217	CallExpression	"daemonCore -> Reset_Timer ( c_lease_tid , c_lease_duration , 0 )"		722174	0					
ANR	722218	Callee	daemonCore -> Reset_Timer		722174	0					
ANR	722219	PtrMemberAccess	daemonCore -> Reset_Timer		722174	0					
ANR	722220	Identifier	daemonCore		722174	0					
ANR	722221	Identifier	Reset_Timer		722174	1					
ANR	722222	ArgumentList	c_lease_tid		722174	1					
ANR	722223	Argument	c_lease_tid		722174	0					
ANR	722224	Identifier	c_lease_tid		722174	0					
ANR	722225	Argument	c_lease_duration		722174	1					
ANR	722226	Identifier	c_lease_duration		722174	0					
ANR	722227	Argument	0		722174	2					
ANR	722228	PrimaryExpression	0		722174	0					
ANR	722229	IfStatement	if ( c_sendalive_tid != - 1 )		722174	2					
ANR	722230	Condition	c_sendalive_tid != - 1	1182:6:31721:31741	722174	0	True				
ANR	722231	EqualityExpression	c_sendalive_tid != - 1		722174	0		!=			
ANR	722232	Identifier	c_sendalive_tid		722174	0					
ANR	722233	UnaryOperationExpression	- 1		722174	1					
ANR	722234	UnaryOperator	-		722174	0					
ANR	722235	PrimaryExpression	1		722174	1					
ANR	722236	CompoundStatement		29:30:1089:1089	722174	1					
ANR	722237	IfStatement	if ( alive_from_schedd )		722174	0					
ANR	722238	Condition	alive_from_schedd	1183:7:31754:31770	722174	0	True				
ANR	722239	Identifier	alive_from_schedd		722174	0					
ANR	722240	CompoundStatement		30:27:1118:1118	722174	1					
ANR	722241	ExpressionStatement	"daemonCore -> Reset_Timer ( c_sendalive_tid , 10 , c_lease_duration / 3 )"	1184:3:31779:31855	722174	0	True				
ANR	722242	CallExpression	"daemonCore -> Reset_Timer ( c_sendalive_tid , 10 , c_lease_duration / 3 )"		722174	0					
ANR	722243	Callee	daemonCore -> Reset_Timer		722174	0					
ANR	722244	PtrMemberAccess	daemonCore -> Reset_Timer		722174	0					
ANR	722245	Identifier	daemonCore		722174	0					
ANR	722246	Identifier	Reset_Timer		722174	1					
ANR	722247	ArgumentList	c_sendalive_tid		722174	1					
ANR	722248	Argument	c_sendalive_tid		722174	0					
ANR	722249	Identifier	c_sendalive_tid		722174	0					
ANR	722250	Argument	10		722174	1					
ANR	722251	PrimaryExpression	10		722174	0					
ANR	722252	Argument	c_lease_duration / 3		722174	2					
ANR	722253	MultiplicativeExpression	c_lease_duration / 3		722174	0		/			
ANR	722254	Identifier	c_lease_duration		722174	0					
ANR	722255	PrimaryExpression	3		722174	1					
ANR	722256	ElseStatement	else		722174	0					
ANR	722257	CompoundStatement		33:9:1210:1210	722174	0					
ANR	722258	ExpressionStatement	"daemonCore -> Reset_Timer ( c_sendalive_tid , c_lease_duration / 3 , c_lease_duration / 3 )"	1187:3:31871:31965	722174	0	True				
ANR	722259	CallExpression	"daemonCore -> Reset_Timer ( c_sendalive_tid , c_lease_duration / 3 , c_lease_duration / 3 )"		722174	0					
ANR	722260	Callee	daemonCore -> Reset_Timer		722174	0					
ANR	722261	PtrMemberAccess	daemonCore -> Reset_Timer		722174	0					
ANR	722262	Identifier	daemonCore		722174	0					
ANR	722263	Identifier	Reset_Timer		722174	1					
ANR	722264	ArgumentList	c_sendalive_tid		722174	1					
ANR	722265	Argument	c_sendalive_tid		722174	0					
ANR	722266	Identifier	c_sendalive_tid		722174	0					
ANR	722267	Argument	c_lease_duration / 3		722174	1					
ANR	722268	MultiplicativeExpression	c_lease_duration / 3		722174	0		/			
ANR	722269	Identifier	c_lease_duration		722174	0					
ANR	722270	PrimaryExpression	3		722174	1					
ANR	722271	Argument	c_lease_duration / 3		722174	2					
ANR	722272	MultiplicativeExpression	c_lease_duration / 3		722174	0		/			
ANR	722273	Identifier	c_lease_duration		722174	0					
ANR	722274	PrimaryExpression	3		722174	1					
ANR	722275	ReturnType	void		722174	1					
ANR	722276	Identifier	Claim :: alive		722174	2					
ANR	722277	ParameterList	bool alive_from_schedd		722174	3					
ANR	722278	Parameter	bool alive_from_schedd	1153:14:30630:30651	722174	0	True				
ANR	722279	ParameterType	bool		722174	0					
ANR	722280	Identifier	alive_from_schedd		722174	1					
ANR	722281	CFGEntryNode	ENTRY		722174		True				
ANR	722282	CFGExitNode	EXIT		722174		True				
ANR	722283	Symbol	c_lease_tid		722174						
ANR	722284	Symbol	c_lease_duration		722174						
ANR	722285	Symbol	D_PROTOCOL		722174						
ANR	722286	Symbol	daemonCore		722174						
ANR	722287	Symbol	publicClaimId		722174						
ANR	722288	Symbol	c_sendalive_tid		722174						
ANR	722289	Symbol	c_proc		722174						
ANR	722290	Symbol	alive_from_schedd		722174						
ANR	722291	Symbol	c_cluster		722174						
ANR	722292	Function	Claim :: hasJobAd	1194:0:31978:32205							
ANR	722293	FunctionDef	Claim :: hasJobAd ()		722292	0					
ANR	722294	CompoundStatement		1195:18:32001:32205	722292	0					
ANR	722295	IdentifierDeclStatement	bool has_it = false ;	1196:1:32004:32023	722292	0	True				
ANR	722296	IdentifierDecl	has_it = false		722292	0					
ANR	722297	IdentifierDeclType	bool		722292	0					
ANR	722298	Identifier	has_it		722292	1					
ANR	722299	AssignmentExpression	has_it = false		722292	2		=			
ANR	722300	Identifier	false		722292	0					
ANR	722301	Identifier	false		722292	1					
ANR	722302	IfStatement	if ( c_has_job_ad != 0 )		722292	1					
ANR	722303	Condition	c_has_job_ad != 0	1197:5:32030:32046	722292	0	True				
ANR	722304	EqualityExpression	c_has_job_ad != 0		722292	0		!=			
ANR	722305	Identifier	c_has_job_ad		722292	0					
ANR	722306	PrimaryExpression	0		722292	1					
ANR	722307	CompoundStatement		3:24:47:47	722292	1					
ANR	722308	ExpressionStatement	has_it = true	1198:2:32053:32066	722292	0	True				
ANR	722309	AssignmentExpression	has_it = true		722292	0		=			
ANR	722310	Identifier	has_it		722292	0					
ANR	722311	Identifier	true		722292	1					
ANR	722312	ElseStatement	else		722292	0					
ANR	722313	IfStatement	if ( c_type == CLAIM_FETCH && c_ad != NULL )		722292	0					
ANR	722314	Condition	c_type == CLAIM_FETCH && c_ad != NULL	1201:10:32100:32136	722292	0	True				
ANR	722315	AndExpression	c_type == CLAIM_FETCH && c_ad != NULL		722292	0		&&			
ANR	722316	EqualityExpression	c_type == CLAIM_FETCH		722292	0		==			
ANR	722317	Identifier	c_type		722292	0					
ANR	722318	Identifier	CLAIM_FETCH		722292	1					
ANR	722319	EqualityExpression	c_ad != NULL		722292	1		!=			
ANR	722320	Identifier	c_ad		722292	0					
ANR	722321	Identifier	NULL		722292	1					
ANR	722322	CompoundStatement		7:49:137:137	722292	1					
ANR	722323	ExpressionStatement	has_it = true	1202:2:32143:32156	722292	0	True				
ANR	722324	AssignmentExpression	has_it = true		722292	0		=			
ANR	722325	Identifier	has_it		722292	0					
ANR	722326	Identifier	true		722292	1					
ANR	722327	ReturnStatement	return has_it ;	1205:1:32190:32203	722292	2	True				
ANR	722328	Identifier	has_it		722292	0					
ANR	722329	ReturnType	bool		722292	1					
ANR	722330	Identifier	Claim :: hasJobAd		722292	2					
ANR	722331	ParameterList			722292	3					
ANR	722332	CFGEntryNode	ENTRY		722292		True				
ANR	722333	CFGExitNode	EXIT		722292		True				
ANR	722334	Symbol	c_ad		722292						
ANR	722335	Symbol	CLAIM_FETCH		722292						
ANR	722336	Symbol	NULL		722292						
ANR	722337	Symbol	has_it		722292						
ANR	722338	Symbol	c_type		722292						
ANR	722339	Symbol	false		722292						
ANR	722340	Symbol	true		722292						
ANR	722341	Symbol	c_has_job_ad		722292						
ANR	722342	Function	Claim :: setad	1210:0:32244:32327							
ANR	722343	FunctionDef	Claim :: setad (ClassAd * cad)		722342	0					
ANR	722344	CompoundStatement		1212:0:32277:32327	722342	0					
ANR	722345	IfStatement	if ( c_ad )		722342	0					
ANR	722346	Condition	c_ad	1213:5:32284:32287	722342	0	True				
ANR	722347	Identifier	c_ad		722342	0					
ANR	722348	CompoundStatement		2:12:13:13	722342	1					
ANR	722349	Statement	delete	1214:2:32295:32300	722342	0	True				
ANR	722350	ExpressionStatement	c_ad	1214:8:32301:32309	722342	1	True				
ANR	722351	Identifier	c_ad		722342	0					
ANR	722352	ExpressionStatement	c_ad = cad	1216:1:32315:32325	722342	1	True				
ANR	722353	AssignmentExpression	c_ad = cad		722342	0		=			
ANR	722354	Identifier	c_ad		722342	0					
ANR	722355	Identifier	cad		722342	1					
ANR	722356	ReturnType	void		722342	1					
ANR	722357	Identifier	Claim :: setad		722342	2					
ANR	722358	ParameterList	ClassAd * cad		722342	3					
ANR	722359	Parameter	ClassAd * cad	1211:13:32262:32273	722342	0	True				
ANR	722360	ParameterType	ClassAd *		722342	0					
ANR	722361	Identifier	cad		722342	1					
ANR	722362	CFGEntryNode	ENTRY		722342		True				
ANR	722363	CFGExitNode	EXIT		722342		True				
ANR	722364	Symbol	c_ad		722342						
ANR	722365	Symbol	cad		722342						
ANR	722366	Function	Claim :: setRequestStream	1220:0:32331:32973							
ANR	722367	FunctionDef	Claim :: setRequestStream (Stream * stream)		722366	0					
ANR	722368	CompoundStatement		1222:0:32376:32973	722366	0					
ANR	722369	IfStatement	if ( c_request_stream )		722366	0					
ANR	722370	Condition	c_request_stream	1223:5:32383:32398	722366	0	True				
ANR	722371	Identifier	c_request_stream		722366	0					
ANR	722372	CompoundStatement		2:24:25:25	722366	1					
ANR	722373	ExpressionStatement	daemonCore -> Cancel_Socket ( c_request_stream )	1224:2:32406:32451	722366	0	True				
ANR	722374	CallExpression	daemonCore -> Cancel_Socket ( c_request_stream )		722366	0					
ANR	722375	Callee	daemonCore -> Cancel_Socket		722366	0					
ANR	722376	PtrMemberAccess	daemonCore -> Cancel_Socket		722366	0					
ANR	722377	Identifier	daemonCore		722366	0					
ANR	722378	Identifier	Cancel_Socket		722366	1					
ANR	722379	ArgumentList	c_request_stream		722366	1					
ANR	722380	Argument	c_request_stream		722366	0					
ANR	722381	Identifier	c_request_stream		722366	0					
ANR	722382	Statement	delete	1225:2:32455:32460	722366	1	True				
ANR	722383	ExpressionStatement	c_request_stream	1225:8:32461:32481	722366	2	True				
ANR	722384	Identifier	c_request_stream		722366	0					
ANR	722385	ExpressionStatement	c_request_stream = stream	1227:1:32487:32512	722366	1	True				
ANR	722386	AssignmentExpression	c_request_stream = stream		722366	0		=			
ANR	722387	Identifier	c_request_stream		722366	0					
ANR	722388	Identifier	stream		722366	1					
ANR	722389	IfStatement	if ( c_request_stream )		722366	2					
ANR	722390	Condition	c_request_stream	1229:5:32520:32535	722366	0	True				
ANR	722391	Identifier	c_request_stream		722366	0					
ANR	722392	CompoundStatement		12:2:238:414	722366	1					
ANR	722393	IdentifierDeclStatement	MyString desc ;	1230:2:32543:32556	722366	0	True				
ANR	722394	IdentifierDecl	desc		722366	0					
ANR	722395	IdentifierDeclType	MyString		722366	0					
ANR	722396	Identifier	desc		722366	1					
ANR	722397	ExpressionStatement	"desc . sprintf ( ""request claim %s"" , publicClaimId ( ) )"	1231:2:32560:32610	722366	1	True				
ANR	722398	CallExpression	"desc . sprintf ( ""request claim %s"" , publicClaimId ( ) )"		722366	0					
ANR	722399	Callee	desc . sprintf		722366	0					
ANR	722400	MemberAccess	desc . sprintf		722366	0					
ANR	722401	Identifier	desc		722366	0					
ANR	722402	Identifier	sprintf		722366	1					
ANR	722403	ArgumentList	"""request claim %s"""		722366	1					
ANR	722404	Argument	"""request claim %s"""		722366	0					
ANR	722405	PrimaryExpression	"""request claim %s"""		722366	0					
ANR	722406	Argument	publicClaimId ( )		722366	1					
ANR	722407	CallExpression	publicClaimId ( )		722366	0					
ANR	722408	Callee	publicClaimId		722366	0					
ANR	722409	Identifier	publicClaimId		722366	0					
ANR	722410	ArgumentList			722366	1					
ANR	722411	IdentifierDeclStatement	"int register_rc = daemonCore -> Register_Socket ( c_request_stream , desc . Value ( ) , ( SocketHandlercpp ) & Claim :: requestClaimSockClosed , ""requestClaimSockClosed"" , this ) ;"	1233:2:32615:32791	722366	2	True				
ANR	722412	IdentifierDecl	"register_rc = daemonCore -> Register_Socket ( c_request_stream , desc . Value ( ) , ( SocketHandlercpp ) & Claim :: requestClaimSockClosed , ""requestClaimSockClosed"" , this )"		722366	0					
ANR	722413	IdentifierDeclType	int		722366	0					
ANR	722414	Identifier	register_rc		722366	1					
ANR	722415	AssignmentExpression	"register_rc = daemonCore -> Register_Socket ( c_request_stream , desc . Value ( ) , ( SocketHandlercpp ) & Claim :: requestClaimSockClosed , ""requestClaimSockClosed"" , this )"		722366	2		=			
ANR	722416	Identifier	register_rc		722366	0					
ANR	722417	CallExpression	"daemonCore -> Register_Socket ( c_request_stream , desc . Value ( ) , ( SocketHandlercpp ) & Claim :: requestClaimSockClosed , ""requestClaimSockClosed"" , this )"		722366	1					
ANR	722418	Callee	daemonCore -> Register_Socket		722366	0					
ANR	722419	PtrMemberAccess	daemonCore -> Register_Socket		722366	0					
ANR	722420	Identifier	daemonCore		722366	0					
ANR	722421	Identifier	Register_Socket		722366	1					
ANR	722422	ArgumentList	c_request_stream		722366	1					
ANR	722423	Argument	c_request_stream		722366	0					
ANR	722424	Identifier	c_request_stream		722366	0					
ANR	722425	Argument	desc . Value ( )		722366	1					
ANR	722426	CallExpression	desc . Value ( )		722366	0					
ANR	722427	Callee	desc . Value		722366	0					
ANR	722428	MemberAccess	desc . Value		722366	0					
ANR	722429	Identifier	desc		722366	0					
ANR	722430	Identifier	Value		722366	1					
ANR	722431	ArgumentList			722366	1					
ANR	722432	Argument	( SocketHandlercpp ) & Claim :: requestClaimSockClosed		722366	2					
ANR	722433	CastExpression	( SocketHandlercpp ) & Claim :: requestClaimSockClosed		722366	0					
ANR	722434	CastTarget	SocketHandlercpp		722366	0					
ANR	722435	UnaryOperationExpression	& Claim :: requestClaimSockClosed		722366	1					
ANR	722436	UnaryOperator	&		722366	0					
ANR	722437	Identifier	Claim :: requestClaimSockClosed		722366	1					
ANR	722438	Argument	"""requestClaimSockClosed"""		722366	3					
ANR	722439	PrimaryExpression	"""requestClaimSockClosed"""		722366	0					
ANR	722440	Argument	this		722366	4					
ANR	722441	Identifier	this		722366	0					
ANR	722442	IfStatement	if ( register_rc < 0 )		722366	3					
ANR	722443	Condition	register_rc < 0	1240:6:32800:32814	722366	0	True				
ANR	722444	RelationalExpression	register_rc < 0		722366	0		<			
ANR	722445	Identifier	register_rc		722366	0					
ANR	722446	PrimaryExpression	0		722366	1					
ANR	722447	CompoundStatement		19:24:441:441	722366	1					
ANR	722448	Statement	dprintf	1241:3:32823:32829	722366	0	True				
ANR	722449	Statement	(	1241:10:32830:32830	722366	1	True				
ANR	722450	Statement	D_ALWAYS	1241:11:32831:32838	722366	2	True				
ANR	722451	Statement	","	1241:19:32839:32839	722366	3	True				
ANR	722452	Statement	"""Failed to register claim request socket """	1242:5:32846:32887	722366	4	True				
ANR	722453	Statement	""" to detect premature closure for claim %s.\\n"""	1243:5:32894:32939	722366	5	True				
ANR	722454	Statement	","	1243:51:32940:32940	722366	6	True				
ANR	722455	Statement	publicClaimId	1244:5:32947:32959	722366	7	True				
ANR	722456	Statement	(	1244:18:32960:32960	722366	8	True				
ANR	722457	Statement	)	1244:19:32961:32961	722366	9	True				
ANR	722458	Statement	)	1244:21:32963:32963	722366	10	True				
ANR	722459	ExpressionStatement		1244:22:32964:32964	722366	11	True				
ANR	722460	ReturnType	void		722366	1					
ANR	722461	Identifier	Claim :: setRequestStream		722366	2					
ANR	722462	ParameterList	Stream * stream		722366	3					
ANR	722463	Parameter	Stream * stream	1221:24:32360:32373	722366	0	True				
ANR	722464	ParameterType	Stream *		722366	0					
ANR	722465	Identifier	stream		722366	1					
ANR	722466	CFGEntryNode	ENTRY		722366		True				
ANR	722467	CFGExitNode	EXIT		722366		True				
ANR	722468	Symbol	c_request_stream		722366						
ANR	722469	Symbol	stream		722366						
ANR	722470	Symbol	register_rc		722366						
ANR	722471	Symbol	* daemonCore		722366						
ANR	722472	Symbol	daemonCore -> Register_Socket		722366						
ANR	722473	Symbol	daemonCore		722366						
ANR	722474	Symbol	publicClaimId		722366						
ANR	722475	Symbol	this		722366						
ANR	722476	Symbol	desc . Value		722366						
ANR	722477	Symbol	& Claim :: requestClaimSockClosed		722366						
ANR	722478	Symbol	desc		722366						
ANR	722479	Function	Claim :: requestClaimSockClosed	1249:0:32976:33323							
ANR	722480	FunctionDef	Claim :: requestClaimSockClosed (Stream * s)		722479	0					
ANR	722481	CompoundStatement		1251:0:33021:33323	722479	0					
ANR	722482	Statement	dprintf	1252:1:33024:33030	722479	0	True				
ANR	722483	Statement	(	1252:8:33031:33031	722479	1	True				
ANR	722484	Statement	D_ALWAYS	1252:10:33033:33040	722479	2	True				
ANR	722485	Statement	","	1252:18:33041:33041	722479	3	True				
ANR	722486	Statement	"""Request claim socket closed prematurely for claim %s. """	1253:4:33047:33102	722479	4	True				
ANR	722487	Statement	"""This probably means the schedd gave up.\\n"""	1254:4:33108:33150	722479	5	True				
ANR	722488	Statement	","	1254:47:33151:33151	722479	6	True				
ANR	722489	Statement	publicClaimId	1255:4:33157:33169	722479	7	True				
ANR	722490	Statement	(	1255:17:33170:33170	722479	8	True				
ANR	722491	Statement	)	1255:18:33171:33171	722479	9	True				
ANR	722492	Statement	)	1255:20:33173:33173	722479	10	True				
ANR	722493	ExpressionStatement		1255:21:33174:33174	722479	11	True				
ANR	722494	ExpressionStatement	ASSERT ( s == c_request_stream )	1257:1:33178:33209	722479	12	True				
ANR	722495	CallExpression	ASSERT ( s == c_request_stream )		722479	0					
ANR	722496	Callee	ASSERT		722479	0					
ANR	722497	Identifier	ASSERT		722479	0					
ANR	722498	ArgumentList	s == c_request_stream		722479	1					
ANR	722499	Argument	s == c_request_stream		722479	0					
ANR	722500	EqualityExpression	s == c_request_stream		722479	0		==			
ANR	722501	Identifier	s		722479	0					
ANR	722502	Identifier	c_request_stream		722479	1					
ANR	722503	ExpressionStatement	c_request_stream = NULL	1258:1:33212:33235	722479	13	True				
ANR	722504	AssignmentExpression	c_request_stream = NULL		722479	0		=			
ANR	722505	Identifier	c_request_stream		722479	0					
ANR	722506	Identifier	NULL		722479	1					
ANR	722507	ExpressionStatement	c_rip -> removeClaim ( this )	1260:1:33279:33305	722479	14	True				
ANR	722508	CallExpression	c_rip -> removeClaim ( this )		722479	0					
ANR	722509	Callee	c_rip -> removeClaim		722479	0					
ANR	722510	PtrMemberAccess	c_rip -> removeClaim		722479	0					
ANR	722511	Identifier	c_rip		722479	0					
ANR	722512	Identifier	removeClaim		722479	1					
ANR	722513	ArgumentList	this		722479	1					
ANR	722514	Argument	this		722479	0					
ANR	722515	Identifier	this		722479	0					
ANR	722516	ReturnStatement	return FALSE ;	1262:1:33309:33321	722479	15	True				
ANR	722517	Identifier	FALSE		722479	0					
ANR	722518	ReturnType	int		722479	1					
ANR	722519	Identifier	Claim :: requestClaimSockClosed		722479	2					
ANR	722520	ParameterList	Stream * s		722479	3					
ANR	722521	Parameter	Stream * s	1250:30:33010:33018	722479	0	True				
ANR	722522	ParameterType	Stream *		722479	0					
ANR	722523	Identifier	s		722479	1					
ANR	722524	CFGEntryNode	ENTRY		722479		True				
ANR	722525	CFGExitNode	EXIT		722479		True				
ANR	722526	Symbol	c_rip		722479						
ANR	722527	Symbol	s		722479						
ANR	722528	Symbol	c_request_stream		722479						
ANR	722529	Symbol	NULL		722479						
ANR	722530	Symbol	this		722479						
ANR	722531	Symbol	FALSE		722479						
ANR	722532	Function	Claim :: id	1266:0:33327:33416							
ANR	722533	FunctionDef	Claim :: id ()		722532	0					
ANR	722534	CompoundStatement		1268:0:33351:33416	722532	0					
ANR	722535	IfStatement	if ( c_id )		722532	0					
ANR	722536	Condition	c_id	1269:5:33358:33361	722532	0	True				
ANR	722537	Identifier	c_id		722532	0					
ANR	722538	CompoundStatement		2:12:13:13	722532	1					
ANR	722539	ReturnStatement	return c_id -> id ( ) ;	1270:2:33369:33386	722532	0	True				
ANR	722540	CallExpression	c_id -> id ( )		722532	0					
ANR	722541	Callee	c_id -> id		722532	0					
ANR	722542	PtrMemberAccess	c_id -> id		722532	0					
ANR	722543	Identifier	c_id		722532	0					
ANR	722544	Identifier	id		722532	1					
ANR	722545	ArgumentList			722532	1					
ANR	722546	ElseStatement	else		722532	0					
ANR	722547	CompoundStatement		4:8:44:44	722532	0					
ANR	722548	ReturnStatement	return NULL ;	1272:2:33400:33411	722532	0	True				
ANR	722549	Identifier	NULL		722532	0					
ANR	722550	ReturnType	char *		722532	1					
ANR	722551	Identifier	Claim :: id		722532	2					
ANR	722552	ParameterList			722532	3					
ANR	722553	CFGEntryNode	ENTRY		722532		True				
ANR	722554	CFGExitNode	EXIT		722532		True				
ANR	722555	Symbol	* c_id		722532						
ANR	722556	Symbol	NULL		722532						
ANR	722557	Symbol	c_id		722532						
ANR	722558	Symbol	c_id -> id		722532						
ANR	722559	Function	Claim :: publicClaimId	1276:0:33419:33543							
ANR	722560	FunctionDef	Claim :: publicClaimId ()		722559	0					
ANR	722561	CompoundStatement		1278:0:33460:33543	722559	0					
ANR	722562	IfStatement	if ( c_id )		722559	0					
ANR	722563	Condition	c_id	1279:5:33467:33470	722559	0	True				
ANR	722564	Identifier	c_id		722559	0					
ANR	722565	CompoundStatement		2:12:13:13	722559	1					
ANR	722566	ReturnStatement	return c_id -> publicClaimId ( ) ;	1280:2:33478:33506	722559	0	True				
ANR	722567	CallExpression	c_id -> publicClaimId ( )		722559	0					
ANR	722568	Callee	c_id -> publicClaimId		722559	0					
ANR	722569	PtrMemberAccess	c_id -> publicClaimId		722559	0					
ANR	722570	Identifier	c_id		722559	0					
ANR	722571	Identifier	publicClaimId		722559	1					
ANR	722572	ArgumentList			722559	1					
ANR	722573	ElseStatement	else		722559	0					
ANR	722574	CompoundStatement		4:8:55:55	722559	0					
ANR	722575	ReturnStatement	"return ""<unknown>"" ;"	1282:2:33520:33538	722559	0	True				
ANR	722576	PrimaryExpression	"""<unknown>"""		722559	0					
ANR	722577	ReturnType	char const *		722559	1					
ANR	722578	Identifier	Claim :: publicClaimId		722559	2					
ANR	722579	ParameterList			722559	3					
ANR	722580	CFGEntryNode	ENTRY		722559		True				
ANR	722581	CFGExitNode	EXIT		722559		True				
ANR	722582	Symbol	* c_id		722559						
ANR	722583	Symbol	c_id		722559						
ANR	722584	Symbol	c_id -> publicClaimId		722559						
ANR	722585	Function	Claim :: secSessionId	1286:0:33546:33650							
ANR	722586	FunctionDef	Claim :: secSessionId ()		722585	0					
ANR	722587	CompoundStatement		1288:0:33586:33650	722585	0					
ANR	722588	IfStatement	if ( c_id )		722585	0					
ANR	722589	Condition	c_id	1289:5:33593:33596	722585	0	True				
ANR	722590	Identifier	c_id		722585	0					
ANR	722591	CompoundStatement		2:12:13:13	722585	1					
ANR	722592	ReturnStatement	return c_id -> secSessionId ( ) ;	1290:2:33604:33631	722585	0	True				
ANR	722593	CallExpression	c_id -> secSessionId ( )		722585	0					
ANR	722594	Callee	c_id -> secSessionId		722585	0					
ANR	722595	PtrMemberAccess	c_id -> secSessionId		722585	0					
ANR	722596	Identifier	c_id		722585	0					
ANR	722597	Identifier	secSessionId		722585	1					
ANR	722598	ArgumentList			722585	1					
ANR	722599	ReturnStatement	return NULL ;	1292:1:33637:33648	722585	1	True				
ANR	722600	Identifier	NULL		722585	0					
ANR	722601	ReturnType	char const *		722585	1					
ANR	722602	Identifier	Claim :: secSessionId		722585	2					
ANR	722603	ParameterList			722585	3					
ANR	722604	CFGEntryNode	ENTRY		722585		True				
ANR	722605	CFGExitNode	EXIT		722585		True				
ANR	722606	Symbol	* c_id		722585						
ANR	722607	Symbol	NULL		722585						
ANR	722608	Symbol	c_id -> secSessionId		722585						
ANR	722609	Symbol	c_id		722585						
ANR	722610	Function	Claim :: idMatches	1296:0:33654:33766							
ANR	722611	FunctionDef	Claim :: idMatches (const char * req_id)		722610	0					
ANR	722612	CompoundStatement		1298:0:33698:33766	722610	0					
ANR	722613	IfStatement	if ( c_id )		722610	0					
ANR	722614	Condition	c_id	1299:5:33705:33708	722610	0	True				
ANR	722615	Identifier	c_id		722610	0					
ANR	722616	CompoundStatement		2:12:13:13	722610	1					
ANR	722617	ReturnStatement	return c_id -> matches ( req_id ) ;	1300:2:33716:33746	722610	0	True				
ANR	722618	CallExpression	c_id -> matches ( req_id )		722610	0					
ANR	722619	Callee	c_id -> matches		722610	0					
ANR	722620	PtrMemberAccess	c_id -> matches		722610	0					
ANR	722621	Identifier	c_id		722610	0					
ANR	722622	Identifier	matches		722610	1					
ANR	722623	ArgumentList	req_id		722610	1					
ANR	722624	Argument	req_id		722610	0					
ANR	722625	Identifier	req_id		722610	0					
ANR	722626	ReturnStatement	return false ;	1302:1:33752:33764	722610	1	True				
ANR	722627	Identifier	false		722610	0					
ANR	722628	ReturnType	bool		722610	1					
ANR	722629	Identifier	Claim :: idMatches		722610	2					
ANR	722630	ParameterList	const char * req_id		722610	3					
ANR	722631	Parameter	const char * req_id	1297:18:33677:33694	722610	0	True				
ANR	722632	ParameterType	const char *		722610	0					
ANR	722633	Identifier	req_id		722610	1					
ANR	722634	CFGEntryNode	ENTRY		722610		True				
ANR	722635	CFGExitNode	EXIT		722610		True				
ANR	722636	Symbol	req_id		722610						
ANR	722637	Symbol	* c_id		722610						
ANR	722638	Symbol	false		722610						
ANR	722639	Symbol	c_id		722610						
ANR	722640	Symbol	c_id -> matches		722610						
ANR	722641	Function	Claim :: percentCpuUsage	1306:0:33770:33894							
ANR	722642	FunctionDef	Claim :: percentCpuUsage ()		722641	0					
ANR	722643	CompoundStatement		1308:0:33807:33894	722641	0					
ANR	722644	IfStatement	if ( c_starter )		722641	0					
ANR	722645	Condition	c_starter	1309:5:33814:33822	722641	0	True				
ANR	722646	Identifier	c_starter		722641	0					
ANR	722647	CompoundStatement		2:17:18:18	722641	1					
ANR	722648	ReturnStatement	return c_starter -> percentCpuUsage ( ) ;	1310:2:33830:33865	722641	0	True				
ANR	722649	CallExpression	c_starter -> percentCpuUsage ( )		722641	0					
ANR	722650	Callee	c_starter -> percentCpuUsage		722641	0					
ANR	722651	PtrMemberAccess	c_starter -> percentCpuUsage		722641	0					
ANR	722652	Identifier	c_starter		722641	0					
ANR	722653	Identifier	percentCpuUsage		722641	1					
ANR	722654	ArgumentList			722641	1					
ANR	722655	ElseStatement	else		722641	0					
ANR	722656	CompoundStatement		4:8:67:67	722641	0					
ANR	722657	ReturnStatement	return 0.0 ;	1312:2:33879:33889	722641	0	True				
ANR	722658	PrimaryExpression	0.0		722641	0					
ANR	722659	ReturnType	float		722641	1					
ANR	722660	Identifier	Claim :: percentCpuUsage		722641	2					
ANR	722661	ParameterList			722641	3					
ANR	722662	CFGEntryNode	ENTRY		722641		True				
ANR	722663	CFGExitNode	EXIT		722641		True				
ANR	722664	Symbol	c_starter		722641						
ANR	722665	Symbol	c_starter -> percentCpuUsage		722641						
ANR	722666	Symbol	* c_starter		722641						
ANR	722667	Function	Claim :: imageSize	1317:0:33898:34016							
ANR	722668	FunctionDef	Claim :: imageSize ()		722667	0					
ANR	722669	CompoundStatement		1319:0:33937:34016	722667	0					
ANR	722670	IfStatement	if ( c_starter )		722667	0					
ANR	722671	Condition	c_starter	1320:5:33944:33952	722667	0	True				
ANR	722672	Identifier	c_starter		722667	0					
ANR	722673	CompoundStatement		2:17:18:18	722667	1					
ANR	722674	ReturnStatement	return c_starter -> imageSize ( ) ;	1321:2:33960:33989	722667	0	True				
ANR	722675	CallExpression	c_starter -> imageSize ( )		722667	0					
ANR	722676	Callee	c_starter -> imageSize		722667	0					
ANR	722677	PtrMemberAccess	c_starter -> imageSize		722667	0					
ANR	722678	Identifier	c_starter		722667	0					
ANR	722679	Identifier	imageSize		722667	1					
ANR	722680	ArgumentList			722667	1					
ANR	722681	ElseStatement	else		722667	0					
ANR	722682	CompoundStatement		4:8:61:61	722667	0					
ANR	722683	ReturnStatement	return 0 ;	1323:2:34003:34011	722667	0	True				
ANR	722684	PrimaryExpression	0		722667	0					
ANR	722685	ReturnType	unsigned long		722667	1					
ANR	722686	Identifier	Claim :: imageSize		722667	2					
ANR	722687	ParameterList			722667	3					
ANR	722688	CFGEntryNode	ENTRY		722667		True				
ANR	722689	CFGExitNode	EXIT		722667		True				
ANR	722690	Symbol	c_starter		722667						
ANR	722691	Symbol	c_starter -> imageSize		722667						
ANR	722692	Symbol	* c_starter		722667						
ANR	722693	Function	Claim :: getCODMgr	1328:0:34020:34116							
ANR	722694	FunctionDef	Claim :: getCODMgr ()		722693	0					
ANR	722695	CompoundStatement		1330:0:34053:34116	722693	0					
ANR	722696	IfStatement	if ( ! c_rip )		722693	0					
ANR	722697	Condition	! c_rip	1331:5:34060:34066	722693	0	True				
ANR	722698	UnaryOperationExpression	! c_rip		722693	0					
ANR	722699	UnaryOperator	!		722693	0					
ANR	722700	Identifier	c_rip		722693	1					
ANR	722701	CompoundStatement		2:15:16:16	722693	1					
ANR	722702	ReturnStatement	return NULL ;	1332:2:34074:34085	722693	0	True				
ANR	722703	Identifier	NULL		722693	0					
ANR	722704	ReturnStatement	return c_rip -> r_cod_mgr ;	1334:1:34091:34114	722693	1	True				
ANR	722705	PtrMemberAccess	c_rip -> r_cod_mgr		722693	0					
ANR	722706	Identifier	c_rip		722693	0					
ANR	722707	Identifier	r_cod_mgr		722693	1					
ANR	722708	ReturnType	CODMgr *		722693	1					
ANR	722709	Identifier	Claim :: getCODMgr		722693	2					
ANR	722710	ParameterList			722693	3					
ANR	722711	CFGEntryNode	ENTRY		722693		True				
ANR	722712	CFGExitNode	EXIT		722693		True				
ANR	722713	Symbol	c_rip		722693						
ANR	722714	Symbol	NULL		722693						
ANR	722715	Symbol	* c_rip		722693						
ANR	722716	Symbol	c_rip -> r_cod_mgr		722693						
ANR	722717	Function	Claim :: spawnStarter	1337:0:34119:35036							
ANR	722718	FunctionDef	Claim :: spawnStarter (Stream * s)		722717	0					
ANR	722719	CompoundStatement		1339:0:34156:35036	722717	0					
ANR	722720	IdentifierDeclStatement	int rval ;	1340:1:34159:34167	722717	0	True				
ANR	722721	IdentifierDecl	rval		722717	0					
ANR	722722	IdentifierDeclType	int		722717	0					
ANR	722723	Identifier	rval		722717	1					
ANR	722724	IfStatement	if ( ! c_starter )		722717	1					
ANR	722725	Condition	! c_starter	1341:5:34174:34184	722717	0	True				
ANR	722726	UnaryOperationExpression	! c_starter		722717	0					
ANR	722727	UnaryOperator	!		722717	0					
ANR	722728	Identifier	c_starter		722717	1					
ANR	722729	CompoundStatement		3:19:31:31	722717	1					
ANR	722730	Statement	dprintf	1343:2:34209:34215	722717	0	True				
ANR	722731	Statement	(	1343:9:34216:34216	722717	1	True				
ANR	722732	Statement	D_ALWAYS	1343:11:34218:34225	722717	2	True				
ANR	722733	Statement	","	1343:19:34226:34226	722717	3	True				
ANR	722734	Statement	"""ERROR! Claim::spawnStarter() called """	1343:21:34228:34265	722717	4	True				
ANR	722735	Statement	"""w/o a Starter object! Returning failure\\n"""	1344:5:34272:34314	722717	5	True				
ANR	722736	Statement	)	1344:49:34316:34316	722717	6	True				
ANR	722737	ExpressionStatement		1344:50:34317:34317	722717	7	True				
ANR	722738	ReturnStatement	return FALSE ;	1345:2:34321:34333	722717	8	True				
ANR	722739	Identifier	FALSE		722717	0					
ANR	722740	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1348:1:34340:34363	722717	2	True				
ANR	722741	IdentifierDecl	now = time ( NULL )		722717	0					
ANR	722742	IdentifierDeclType	time_t		722717	0					
ANR	722743	Identifier	now		722717	1					
ANR	722744	AssignmentExpression	now = time ( NULL )		722717	2		=			
ANR	722745	Identifier	now		722717	0					
ANR	722746	CallExpression	time ( NULL )		722717	1					
ANR	722747	Callee	time		722717	0					
ANR	722748	Identifier	time		722717	0					
ANR	722749	ArgumentList	NULL		722717	1					
ANR	722750	Argument	NULL		722717	0					
ANR	722751	Identifier	NULL		722717	0					
ANR	722752	ExpressionStatement	"rval = c_starter -> spawn ( now , s )"	1350:1:34367:34400	722717	3	True				
ANR	722753	AssignmentExpression	"rval = c_starter -> spawn ( now , s )"		722717	0		=			
ANR	722754	Identifier	rval		722717	0					
ANR	722755	CallExpression	"c_starter -> spawn ( now , s )"		722717	1					
ANR	722756	Callee	c_starter -> spawn		722717	0					
ANR	722757	PtrMemberAccess	c_starter -> spawn		722717	0					
ANR	722758	Identifier	c_starter		722717	0					
ANR	722759	Identifier	spawn		722717	1					
ANR	722760	ArgumentList	now		722717	1					
ANR	722761	Argument	now		722717	0					
ANR	722762	Identifier	now		722717	0					
ANR	722763	Argument	s		722717	1					
ANR	722764	Identifier	s		722717	0					
ANR	722765	IfStatement	if ( ! rval )		722717	4					
ANR	722766	Condition	! rval	1351:5:34407:34412	722717	0	True				
ANR	722767	UnaryOperationExpression	! rval		722717	0					
ANR	722768	UnaryOperator	!		722717	0					
ANR	722769	Identifier	rval		722717	1					
ANR	722770	CompoundStatement		13:14:259:259	722717	1					
ANR	722771	ExpressionStatement	resetClaim ( )	1352:2:34420:34432	722717	0	True				
ANR	722772	CallExpression	resetClaim ( )		722717	0					
ANR	722773	Callee	resetClaim		722717	0					
ANR	722774	Identifier	resetClaim		722717	0					
ANR	722775	ArgumentList			722717	1					
ANR	722776	ReturnStatement	return FALSE ;	1353:2:34436:34448	722717	1	True				
ANR	722777	Identifier	FALSE		722717	0					
ANR	722778	ExpressionStatement	changeState ( CLAIM_RUNNING )	1356:1:34455:34483	722717	5	True				
ANR	722779	CallExpression	changeState ( CLAIM_RUNNING )		722717	0					
ANR	722780	Callee	changeState		722717	0					
ANR	722781	Identifier	changeState		722717	0					
ANR	722782	ArgumentList	CLAIM_RUNNING		722717	1					
ANR	722783	Argument	CLAIM_RUNNING		722717	0					
ANR	722784	Identifier	CLAIM_RUNNING		722717	0					
ANR	722785	ExpressionStatement	beginActivation ( now )	1359:1:34559:34579	722717	6	True				
ANR	722786	CallExpression	beginActivation ( now )		722717	0					
ANR	722787	Callee	beginActivation		722717	0					
ANR	722788	Identifier	beginActivation		722717	0					
ANR	722789	ArgumentList	now		722717	1					
ANR	722790	Argument	now		722717	0					
ANR	722791	Identifier	now		722717	0					
ANR	722792	ReturnStatement	return TRUE ;	1372:1:35023:35034	722717	7	True				
ANR	722793	Identifier	TRUE		722717	0					
ANR	722794	ReturnType	int		722717	1					
ANR	722795	Identifier	Claim :: spawnStarter		722717	2					
ANR	722796	ParameterList	Stream * s		722717	3					
ANR	722797	Parameter	Stream * s	1338:21:34144:34152	722717	0	True				
ANR	722798	ParameterType	Stream *		722717	0					
ANR	722799	Identifier	s		722717	1					
ANR	722800	CFGEntryNode	ENTRY		722717		True				
ANR	722801	CFGExitNode	EXIT		722717		True				
ANR	722802	Symbol	c_starter		722717						
ANR	722803	Symbol	s		722717						
ANR	722804	Symbol	NULL		722717						
ANR	722805	Symbol	c_starter -> spawn		722717						
ANR	722806	Symbol	CLAIM_RUNNING		722717						
ANR	722807	Symbol	now		722717						
ANR	722808	Symbol	* c_starter		722717						
ANR	722809	Symbol	TRUE		722717						
ANR	722810	Symbol	rval		722717						
ANR	722811	Symbol	FALSE		722717						
ANR	722812	Symbol	time		722717						
ANR	722813	Function	Claim :: setStarter	1376:0:35040:35224							
ANR	722814	FunctionDef	Claim :: setStarter (Starter * s)		722813	0					
ANR	722815	CompoundStatement		1378:0:35077:35224	722813	0					
ANR	722816	IfStatement	if ( s && c_starter )		722813	0					
ANR	722817	Condition	s && c_starter	1379:5:35084:35097	722813	0	True				
ANR	722818	AndExpression	s && c_starter		722813	0		&&			
ANR	722819	Identifier	s		722813	0					
ANR	722820	Identifier	c_starter		722813	1					
ANR	722821	CompoundStatement		2:22:23:23	722813	1					
ANR	722822	ExpressionStatement	"EXCEPT ( ""Claim::setStarter() called with existing starter!"" )"	1380:2:35105:35166	722813	0	True				
ANR	722823	CallExpression	"EXCEPT ( ""Claim::setStarter() called with existing starter!"" )"		722813	0					
ANR	722824	Callee	EXCEPT		722813	0					
ANR	722825	Identifier	EXCEPT		722813	0					
ANR	722826	ArgumentList	"""Claim::setStarter() called with existing starter!"""		722813	1					
ANR	722827	Argument	"""Claim::setStarter() called with existing starter!"""		722813	0					
ANR	722828	PrimaryExpression	"""Claim::setStarter() called with existing starter!"""		722813	0					
ANR	722829	ExpressionStatement	c_starter = s	1382:1:35172:35185	722813	1	True				
ANR	722830	AssignmentExpression	c_starter = s		722813	0		=			
ANR	722831	Identifier	c_starter		722813	0					
ANR	722832	Identifier	s		722813	1					
ANR	722833	IfStatement	if ( s )		722813	2					
ANR	722834	Condition	s	1383:5:35192:35192	722813	0	True				
ANR	722835	Identifier	s		722813	0					
ANR	722836	CompoundStatement		6:9:118:118	722813	1					
ANR	722837	ExpressionStatement	s -> setClaim ( this )	1384:2:35200:35219	722813	0	True				
ANR	722838	CallExpression	s -> setClaim ( this )		722813	0					
ANR	722839	Callee	s -> setClaim		722813	0					
ANR	722840	PtrMemberAccess	s -> setClaim		722813	0					
ANR	722841	Identifier	s		722813	0					
ANR	722842	Identifier	setClaim		722813	1					
ANR	722843	ArgumentList	this		722813	1					
ANR	722844	Argument	this		722813	0					
ANR	722845	Identifier	this		722813	0					
ANR	722846	ReturnType	void		722813	1					
ANR	722847	Identifier	Claim :: setStarter		722813	2					
ANR	722848	ParameterList	Starter * s		722813	3					
ANR	722849	Parameter	Starter * s	1377:19:35064:35073	722813	0	True				
ANR	722850	ParameterType	Starter *		722813	0					
ANR	722851	Identifier	s		722813	1					
ANR	722852	CFGEntryNode	ENTRY		722813		True				
ANR	722853	CFGExitNode	EXIT		722813		True				
ANR	722854	Symbol	c_starter		722813						
ANR	722855	Symbol	s		722813						
ANR	722856	Symbol	this		722813						
ANR	722857	Function	Claim :: starterExited	1389:0:35228:36057							
ANR	722858	FunctionDef	Claim :: starterExited (int status)		722857	0					
ANR	722859	CompoundStatement		1391:0:35268:36057	722857	0					
ANR	722860	ExpressionStatement	changeState ( CLAIM_IDLE )	1393:1:35334:35359	722857	0	True				
ANR	722861	CallExpression	changeState ( CLAIM_IDLE )		722857	0					
ANR	722862	Callee	changeState		722857	0					
ANR	722863	Identifier	changeState		722857	0					
ANR	722864	ArgumentList	CLAIM_IDLE		722857	1					
ANR	722865	Argument	CLAIM_IDLE		722857	0					
ANR	722866	Identifier	CLAIM_IDLE		722857	0					
ANR	722867	ExpressionStatement	c_starter -> exited ( status )	1398:1:35541:35566	722857	1	True				
ANR	722868	CallExpression	c_starter -> exited ( status )		722857	0					
ANR	722869	Callee	c_starter -> exited		722857	0					
ANR	722870	PtrMemberAccess	c_starter -> exited		722857	0					
ANR	722871	Identifier	c_starter		722857	0					
ANR	722872	Identifier	exited		722857	1					
ANR	722873	ArgumentList	status		722857	1					
ANR	722874	Argument	status		722857	0					
ANR	722875	Identifier	status		722857	0					
ANR	722876	IfStatement	if ( c_badput_caused_by_draining )		722857	2					
ANR	722877	Condition	c_badput_caused_by_draining	1400:5:35574:35600	722857	0	True				
ANR	722878	Identifier	c_badput_caused_by_draining		722857	0					
ANR	722879	CompoundStatement		11:2:339:405	722857	1					
ANR	722880	IdentifierDeclStatement	int badput = ( int ) getJobTotalRunTime ( ) * c_rip -> r_attr -> num_cpus ( ) ;	1401:2:35608:35674	722857	0	True				
ANR	722881	IdentifierDecl	badput = ( int ) getJobTotalRunTime ( ) * c_rip -> r_attr -> num_cpus ( )		722857	0					
ANR	722882	IdentifierDeclType	int		722857	0					
ANR	722883	Identifier	badput		722857	1					
ANR	722884	AssignmentExpression	badput = ( int ) getJobTotalRunTime ( ) * c_rip -> r_attr -> num_cpus ( )		722857	2		=			
ANR	722885	Identifier	badput		722857	0					
ANR	722886	MultiplicativeExpression	( int ) getJobTotalRunTime ( ) * c_rip -> r_attr -> num_cpus ( )		722857	1		*			
ANR	722887	CastExpression	( int ) getJobTotalRunTime ( )		722857	0					
ANR	722888	CastTarget	int		722857	0					
ANR	722889	CallExpression	getJobTotalRunTime ( )		722857	1					
ANR	722890	Callee	getJobTotalRunTime		722857	0					
ANR	722891	Identifier	getJobTotalRunTime		722857	0					
ANR	722892	ArgumentList			722857	1					
ANR	722893	CallExpression	c_rip -> r_attr -> num_cpus ( )		722857	1					
ANR	722894	Callee	c_rip -> r_attr -> num_cpus		722857	0					
ANR	722895	PtrMemberAccess	c_rip -> r_attr -> num_cpus		722857	0					
ANR	722896	PtrMemberAccess	c_rip -> r_attr		722857	0					
ANR	722897	Identifier	c_rip		722857	0					
ANR	722898	Identifier	r_attr		722857	1					
ANR	722899	Identifier	num_cpus		722857	1					
ANR	722900	ArgumentList			722857	1					
ANR	722901	ExpressionStatement	"dprintf ( D_ALWAYS , ""Adding to badput caused by draining: %d cpu-seconds\\n"" , badput )"	1402:2:35678:35758	722857	1	True				
ANR	722902	CallExpression	"dprintf ( D_ALWAYS , ""Adding to badput caused by draining: %d cpu-seconds\\n"" , badput )"		722857	0					
ANR	722903	Callee	dprintf		722857	0					
ANR	722904	Identifier	dprintf		722857	0					
ANR	722905	ArgumentList	D_ALWAYS		722857	1					
ANR	722906	Argument	D_ALWAYS		722857	0					
ANR	722907	Identifier	D_ALWAYS		722857	0					
ANR	722908	Argument	"""Adding to badput caused by draining: %d cpu-seconds\\n"""		722857	1					
ANR	722909	PrimaryExpression	"""Adding to badput caused by draining: %d cpu-seconds\\n"""		722857	0					
ANR	722910	Argument	badput		722857	2					
ANR	722911	Identifier	badput		722857	0					
ANR	722912	ExpressionStatement	resmgr -> addToDrainingBadput ( badput )	1403:2:35762:35799	722857	2	True				
ANR	722913	CallExpression	resmgr -> addToDrainingBadput ( badput )		722857	0					
ANR	722914	Callee	resmgr -> addToDrainingBadput		722857	0					
ANR	722915	PtrMemberAccess	resmgr -> addToDrainingBadput		722857	0					
ANR	722916	Identifier	resmgr		722857	0					
ANR	722917	Identifier	addToDrainingBadput		722857	1					
ANR	722918	ArgumentList	badput		722857	1					
ANR	722919	Argument	badput		722857	0					
ANR	722920	Identifier	badput		722857	0					
ANR	722921	ExpressionStatement	resetClaim ( )	1408:1:35915:35927	722857	3	True				
ANR	722922	CallExpression	resetClaim ( )		722857	0					
ANR	722923	Callee	resetClaim		722857	0					
ANR	722924	Identifier	resetClaim		722857	0					
ANR	722925	ArgumentList			722857	1					
ANR	722926	ExpressionStatement	c_rip -> starterExited ( this )	1412:1:36027:36055	722857	4	True				
ANR	722927	CallExpression	c_rip -> starterExited ( this )		722857	0					
ANR	722928	Callee	c_rip -> starterExited		722857	0					
ANR	722929	PtrMemberAccess	c_rip -> starterExited		722857	0					
ANR	722930	Identifier	c_rip		722857	0					
ANR	722931	Identifier	starterExited		722857	1					
ANR	722932	ArgumentList	this		722857	1					
ANR	722933	Argument	this		722857	0					
ANR	722934	Identifier	this		722857	0					
ANR	722935	ReturnType	void		722857	1					
ANR	722936	Identifier	Claim :: starterExited		722857	2					
ANR	722937	ParameterList	int status		722857	3					
ANR	722938	Parameter	int status	1390:22:35255:35264	722857	0	True				
ANR	722939	ParameterType	int		722857	0					
ANR	722940	Identifier	status		722857	1					
ANR	722941	CFGEntryNode	ENTRY		722857		True				
ANR	722942	CFGExitNode	EXIT		722857		True				
ANR	722943	Symbol	c_rip -> r_attr -> num_cpus		722857						
ANR	722944	Symbol	c_starter		722857						
ANR	722945	Symbol	c_rip		722857						
ANR	722946	Symbol	* c_rip		722857						
ANR	722947	Symbol	* c_rip -> r_attr		722857						
ANR	722948	Symbol	c_rip -> r_attr		722857						
ANR	722949	Symbol	D_ALWAYS		722857						
ANR	722950	Symbol	this		722857						
ANR	722951	Symbol	CLAIM_IDLE		722857						
ANR	722952	Symbol	getJobTotalRunTime		722857						
ANR	722953	Symbol	badput		722857						
ANR	722954	Symbol	* * c_rip		722857						
ANR	722955	Symbol	resmgr		722857						
ANR	722956	Symbol	c_badput_caused_by_draining		722857						
ANR	722957	Symbol	status		722857						
ANR	722958	Function	Claim :: starterPidMatches	1416:0:36061:36201							
ANR	722959	FunctionDef	Claim :: starterPidMatches (pid_t starter_pid)		722958	0					
ANR	722960	CompoundStatement		1418:0:36112:36201	722958	0					
ANR	722961	IfStatement	if ( c_starter && c_starter -> pid ( ) == starter_pid )		722958	0					
ANR	722962	Condition	c_starter && c_starter -> pid ( ) == starter_pid	1419:5:36119:36162	722958	0	True				
ANR	722963	AndExpression	c_starter && c_starter -> pid ( ) == starter_pid		722958	0		&&			
ANR	722964	Identifier	c_starter		722958	0					
ANR	722965	EqualityExpression	c_starter -> pid ( ) == starter_pid		722958	1		==			
ANR	722966	CallExpression	c_starter -> pid ( )		722958	0					
ANR	722967	Callee	c_starter -> pid		722958	0					
ANR	722968	PtrMemberAccess	c_starter -> pid		722958	0					
ANR	722969	Identifier	c_starter		722958	0					
ANR	722970	Identifier	pid		722958	1					
ANR	722971	ArgumentList			722958	1					
ANR	722972	Identifier	starter_pid		722958	1					
ANR	722973	CompoundStatement		2:52:53:53	722958	1					
ANR	722974	ReturnStatement	return true ;	1420:2:36170:36181	722958	0	True				
ANR	722975	Identifier	true		722958	0					
ANR	722976	ReturnStatement	return false ;	1422:1:36187:36199	722958	1	True				
ANR	722977	Identifier	false		722958	0					
ANR	722978	ReturnType	bool		722958	1					
ANR	722979	Identifier	Claim :: starterPidMatches		722958	2					
ANR	722980	ParameterList	pid_t starter_pid		722958	3					
ANR	722981	Parameter	pid_t starter_pid	1417:26:36092:36108	722958	0	True				
ANR	722982	ParameterType	pid_t		722958	0					
ANR	722983	Identifier	starter_pid		722958	1					
ANR	722984	CFGEntryNode	ENTRY		722958		True				
ANR	722985	CFGExitNode	EXIT		722958		True				
ANR	722986	Symbol	c_starter		722958						
ANR	722987	Symbol	* c_starter		722958						
ANR	722988	Symbol	true		722958						
ANR	722989	Symbol	false		722958						
ANR	722990	Symbol	starter_pid		722958						
ANR	722991	Symbol	c_starter -> pid		722958						
ANR	722992	Function	Claim :: isDeactivating	1426:0:36205:36338							
ANR	722993	FunctionDef	Claim :: isDeactivating ()		722992	0					
ANR	722994	CompoundStatement		1428:0:36240:36338	722992	0					
ANR	722995	IfStatement	if ( c_state == CLAIM_VACATING || c_state == CLAIM_KILLING )		722992	0					
ANR	722996	Condition	c_state == CLAIM_VACATING || c_state == CLAIM_KILLING	1429:5:36247:36299	722992	0	True				
ANR	722997	OrExpression	c_state == CLAIM_VACATING || c_state == CLAIM_KILLING		722992	0		||			
ANR	722998	EqualityExpression	c_state == CLAIM_VACATING		722992	0		==			
ANR	722999	Identifier	c_state		722992	0					
ANR	723000	Identifier	CLAIM_VACATING		722992	1					
ANR	723001	EqualityExpression	c_state == CLAIM_KILLING		722992	1		==			
ANR	723002	Identifier	c_state		722992	0					
ANR	723003	Identifier	CLAIM_KILLING		722992	1					
ANR	723004	CompoundStatement		2:61:62:62	722992	1					
ANR	723005	ReturnStatement	return true ;	1430:2:36307:36318	722992	0	True				
ANR	723006	Identifier	true		722992	0					
ANR	723007	ReturnStatement	return false ;	1432:1:36324:36336	722992	1	True				
ANR	723008	Identifier	false		722992	0					
ANR	723009	ReturnType	bool		722992	1					
ANR	723010	Identifier	Claim :: isDeactivating		722992	2					
ANR	723011	ParameterList			722992	3					
ANR	723012	CFGEntryNode	ENTRY		722992		True				
ANR	723013	CFGExitNode	EXIT		722992		True				
ANR	723014	Symbol	CLAIM_VACATING		722992						
ANR	723015	Symbol	c_state		722992						
ANR	723016	Symbol	CLAIM_KILLING		722992						
ANR	723017	Symbol	true		722992						
ANR	723018	Symbol	false		722992						
ANR	723019	Function	Claim :: isActive	1436:0:36342:36589							
ANR	723020	FunctionDef	Claim :: isActive ()		723019	0					
ANR	723021	CompoundStatement		1438:0:36371:36589	723019	0					
ANR	723022	SwitchStatement	switch ( c_state )		723019	0					
ANR	723023	Condition	c_state	1439:9:36382:36388	723019	0	True				
ANR	723024	Identifier	c_state		723019	0					
ANR	723025	CompoundStatement		2:19:20:20	723019	1					
ANR	723026	Label	case CLAIM_RUNNING :	1440:1:36395:36413	723019	0	True				
ANR	723027	Identifier	CLAIM_RUNNING		723019	0					
ANR	723028	Label	case CLAIM_SUSPENDED :	1441:1:36416:36436	723019	1	True				
ANR	723029	Identifier	CLAIM_SUSPENDED		723019	0					
ANR	723030	Label	case CLAIM_VACATING :	1442:1:36439:36458	723019	2	True				
ANR	723031	Identifier	CLAIM_VACATING		723019	0					
ANR	723032	Label	case CLAIM_KILLING :	1443:1:36461:36479	723019	3	True				
ANR	723033	Identifier	CLAIM_KILLING		723019	0					
ANR	723034	ReturnStatement	return true ;	1444:2:36483:36494	723019	4	True				
ANR	723035	Identifier	true		723019	0					
ANR	723036	BreakStatement	break ;	1445:2:36498:36503	723019	5	True				
ANR	723037	Label	case CLAIM_IDLE :	1446:1:36506:36521	723019	6	True				
ANR	723038	Identifier	CLAIM_IDLE		723019	0					
ANR	723039	Label	case CLAIM_UNCLAIMED :	1447:1:36524:36544	723019	7	True				
ANR	723040	Identifier	CLAIM_UNCLAIMED		723019	0					
ANR	723041	ReturnStatement	return false ;	1448:2:36548:36560	723019	8	True				
ANR	723042	Identifier	false		723019	0					
ANR	723043	BreakStatement	break ;	1449:2:36564:36569	723019	9	True				
ANR	723044	ReturnStatement	return false ;	1451:1:36575:36587	723019	1	True				
ANR	723045	Identifier	false		723019	0					
ANR	723046	ReturnType	bool		723019	1					
ANR	723047	Identifier	Claim :: isActive		723019	2					
ANR	723048	ParameterList			723019	3					
ANR	723049	CFGEntryNode	ENTRY		723019		True				
ANR	723050	CFGExitNode	EXIT		723019		True				
ANR	723051	Symbol	c_state		723019						
ANR	723052	Symbol	true		723019						
ANR	723053	Symbol	false		723019						
ANR	723054	Function	Claim :: isRunning	1455:0:36593:36841							
ANR	723055	FunctionDef	Claim :: isRunning ()		723054	0					
ANR	723056	CompoundStatement		1457:0:36623:36841	723054	0					
ANR	723057	SwitchStatement	switch ( c_state )		723054	0					
ANR	723058	Condition	c_state	1458:9:36634:36640	723054	0	True				
ANR	723059	Identifier	c_state		723054	0					
ANR	723060	CompoundStatement		2:19:20:20	723054	1					
ANR	723061	Label	case CLAIM_RUNNING :	1459:1:36647:36665	723054	0	True				
ANR	723062	Identifier	CLAIM_RUNNING		723054	0					
ANR	723063	Label	case CLAIM_VACATING :	1460:1:36668:36687	723054	1	True				
ANR	723064	Identifier	CLAIM_VACATING		723054	0					
ANR	723065	Label	case CLAIM_KILLING :	1461:1:36690:36708	723054	2	True				
ANR	723066	Identifier	CLAIM_KILLING		723054	0					
ANR	723067	ReturnStatement	return true ;	1462:2:36712:36723	723054	3	True				
ANR	723068	Identifier	true		723054	0					
ANR	723069	BreakStatement	break ;	1463:2:36727:36732	723054	4	True				
ANR	723070	Label	case CLAIM_SUSPENDED :	1464:1:36735:36755	723054	5	True				
ANR	723071	Identifier	CLAIM_SUSPENDED		723054	0					
ANR	723072	Label	case CLAIM_IDLE :	1465:1:36758:36773	723054	6	True				
ANR	723073	Identifier	CLAIM_IDLE		723054	0					
ANR	723074	Label	case CLAIM_UNCLAIMED :	1466:1:36776:36796	723054	7	True				
ANR	723075	Identifier	CLAIM_UNCLAIMED		723054	0					
ANR	723076	ReturnStatement	return false ;	1467:2:36800:36812	723054	8	True				
ANR	723077	Identifier	false		723054	0					
ANR	723078	BreakStatement	break ;	1468:2:36816:36821	723054	9	True				
ANR	723079	ReturnStatement	return false ;	1470:1:36827:36839	723054	1	True				
ANR	723080	Identifier	false		723054	0					
ANR	723081	ReturnType	bool		723054	1					
ANR	723082	Identifier	Claim :: isRunning		723054	2					
ANR	723083	ParameterList			723054	3					
ANR	723084	CFGEntryNode	ENTRY		723054		True				
ANR	723085	CFGExitNode	EXIT		723054		True				
ANR	723086	Symbol	c_state		723054						
ANR	723087	Symbol	true		723054						
ANR	723088	Symbol	false		723054						
ANR	723089	Function	Claim :: deactivateClaim	1474:0:36845:37055							
ANR	723090	FunctionDef	Claim :: deactivateClaim (bool graceful)		723089	0					
ANR	723091	CompoundStatement		1476:0:36890:37055	723089	0					
ANR	723092	IfStatement	if ( isActive ( ) )		723089	0					
ANR	723093	Condition	isActive ( )	1477:5:36897:36906	723089	0	True				
ANR	723094	CallExpression	isActive ( )		723089	0					
ANR	723095	Callee	isActive		723089	0					
ANR	723096	Identifier	isActive		723089	0					
ANR	723097	ArgumentList			723089	1					
ANR	723098	CompoundStatement		2:18:19:19	723089	1					
ANR	723099	IfStatement	if ( graceful )		723089	0					
ANR	723100	Condition	graceful	1478:6:36918:36925	723089	0	True				
ANR	723101	Identifier	graceful		723089	0					
ANR	723102	CompoundStatement		3:17:38:38	723089	1					
ANR	723103	ReturnStatement	return starterKillSoft ( ) ;	1479:3:36934:36958	723089	0	True				
ANR	723104	CallExpression	starterKillSoft ( )		723089	0					
ANR	723105	Callee	starterKillSoft		723089	0					
ANR	723106	Identifier	starterKillSoft		723089	0					
ANR	723107	ArgumentList			723089	1					
ANR	723108	ElseStatement	else		723089	0					
ANR	723109	CompoundStatement		5:9:78:78	723089	0					
ANR	723110	ReturnStatement	return starterKillHard ( ) ;	1481:3:36974:36998	723089	0	True				
ANR	723111	CallExpression	starterKillHard ( )		723089	0					
ANR	723112	Callee	starterKillHard		723089	0					
ANR	723113	Identifier	starterKillHard		723089	0					
ANR	723114	ArgumentList			723089	1					
ANR	723115	ReturnStatement	return true ;	1485:1:37042:37053	723089	1	True				
ANR	723116	Identifier	true		723089	0					
ANR	723117	ReturnType	bool		723089	1					
ANR	723118	Identifier	Claim :: deactivateClaim		723089	2					
ANR	723119	ParameterList	bool graceful		723089	3					
ANR	723120	Parameter	bool graceful	1475:24:36874:36886	723089	0	True				
ANR	723121	ParameterType	bool		723089	0					
ANR	723122	Identifier	graceful		723089	1					
ANR	723123	CFGEntryNode	ENTRY		723089		True				
ANR	723124	CFGExitNode	EXIT		723089		True				
ANR	723125	Symbol	starterKillHard		723089						
ANR	723126	Symbol	starterKillSoft		723089						
ANR	723127	Symbol	true		723089						
ANR	723128	Symbol	isActive		723089						
ANR	723129	Symbol	graceful		723089						
ANR	723130	Function	Claim :: removeClaim	1489:0:37059:37452							
ANR	723131	FunctionDef	Claim :: removeClaim (bool graceful)		723130	0					
ANR	723132	CompoundStatement		1491:0:37100:37452	723130	0					
ANR	723133	IfStatement	if ( isActive ( ) )		723130	0					
ANR	723134	Condition	isActive ( )	1492:5:37107:37116	723130	0	True				
ANR	723135	CallExpression	isActive ( )		723130	0					
ANR	723136	Callee	isActive		723130	0					
ANR	723137	Identifier	isActive		723130	0					
ANR	723138	ArgumentList			723130	1					
ANR	723139	CompoundStatement		2:18:19:19	723130	1					
ANR	723140	ExpressionStatement	c_wants_remove = true	1493:2:37124:37145	723130	0	True				
ANR	723141	AssignmentExpression	c_wants_remove = true		723130	0		=			
ANR	723142	Identifier	c_wants_remove		723130	0					
ANR	723143	Identifier	true		723130	1					
ANR	723144	IfStatement	if ( graceful )		723130	1					
ANR	723145	Condition	graceful	1494:6:37153:37160	723130	0	True				
ANR	723146	Identifier	graceful		723130	0					
ANR	723147	CompoundStatement		4:17:63:63	723130	1					
ANR	723148	ExpressionStatement	starterKillSoft ( )	1495:3:37169:37186	723130	0	True				
ANR	723149	CallExpression	starterKillSoft ( )		723130	0					
ANR	723150	Callee	starterKillSoft		723130	0					
ANR	723151	Identifier	starterKillSoft		723130	0					
ANR	723152	ArgumentList			723130	1					
ANR	723153	ElseStatement	else		723130	0					
ANR	723154	CompoundStatement		6:9:96:96	723130	0					
ANR	723155	ExpressionStatement	starterKillHard ( )	1497:3:37202:37219	723130	0	True				
ANR	723156	CallExpression	starterKillHard ( )		723130	0					
ANR	723157	Callee	starterKillHard		723130	0					
ANR	723158	Identifier	starterKillHard		723130	0					
ANR	723159	ArgumentList			723130	1					
ANR	723160	Statement	dprintf	1499:2:37227:37233	723130	2	True				
ANR	723161	Statement	(	1499:9:37234:37234	723130	3	True				
ANR	723162	Statement	D_FULLDEBUG	1499:11:37236:37246	723130	4	True				
ANR	723163	Statement	","	1499:22:37247:37247	723130	5	True				
ANR	723164	Statement	"""Removing active claim %s """	1499:24:37249:37275	723130	6	True				
ANR	723165	Statement	"""(waiting for starter pid %d to exit)\\n"""	1500:5:37282:37321	723130	7	True				
ANR	723166	Statement	","	1500:45:37322:37322	723130	8	True				
ANR	723167	Statement	id	1500:47:37324:37325	723130	9	True				
ANR	723168	Statement	(	1500:49:37326:37326	723130	10	True				
ANR	723169	Statement	)	1500:50:37327:37327	723130	11	True				
ANR	723170	Statement	","	1500:51:37328:37328	723130	12	True				
ANR	723171	Statement	c_starter	1501:5:37336:37344	723130	13	True				
ANR	723172	Statement	->	1501:14:37345:37346	723130	14	True				
ANR	723173	Statement	pid	1501:16:37347:37349	723130	15	True				
ANR	723174	Statement	(	1501:19:37350:37350	723130	16	True				
ANR	723175	Statement	)	1501:20:37351:37351	723130	17	True				
ANR	723176	Statement	)	1501:22:37353:37353	723130	18	True				
ANR	723177	ExpressionStatement		1501:23:37354:37354	723130	19	True				
ANR	723178	ReturnStatement	return false ;	1502:2:37358:37370	723130	20	True				
ANR	723179	Identifier	false		723130	0					
ANR	723180	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removing inactive claim %s\\n"" , id ( ) )"	1504:1:37376:37436	723130	1	True				
ANR	723181	CallExpression	"dprintf ( D_FULLDEBUG , ""Removing inactive claim %s\\n"" , id ( ) )"		723130	0					
ANR	723182	Callee	dprintf		723130	0					
ANR	723183	Identifier	dprintf		723130	0					
ANR	723184	ArgumentList	D_FULLDEBUG		723130	1					
ANR	723185	Argument	D_FULLDEBUG		723130	0					
ANR	723186	Identifier	D_FULLDEBUG		723130	0					
ANR	723187	Argument	"""Removing inactive claim %s\\n"""		723130	1					
ANR	723188	PrimaryExpression	"""Removing inactive claim %s\\n"""		723130	0					
ANR	723189	Argument	id ( )		723130	2					
ANR	723190	CallExpression	id ( )		723130	0					
ANR	723191	Callee	id		723130	0					
ANR	723192	Identifier	id		723130	0					
ANR	723193	ArgumentList			723130	1					
ANR	723194	ReturnStatement	return true ;	1505:1:37439:37450	723130	2	True				
ANR	723195	Identifier	true		723130	0					
ANR	723196	ReturnType	bool		723130	1					
ANR	723197	Identifier	Claim :: removeClaim		723130	2					
ANR	723198	ParameterList	bool graceful		723130	3					
ANR	723199	Parameter	bool graceful	1490:20:37084:37096	723130	0	True				
ANR	723200	ParameterType	bool		723130	0					
ANR	723201	Identifier	graceful		723130	1					
ANR	723202	CFGEntryNode	ENTRY		723130		True				
ANR	723203	CFGExitNode	EXIT		723130		True				
ANR	723204	Symbol	true		723130						
ANR	723205	Symbol	false		723130						
ANR	723206	Symbol	D_FULLDEBUG		723130						
ANR	723207	Symbol	id		723130						
ANR	723208	Symbol	isActive		723130						
ANR	723209	Symbol	graceful		723130						
ANR	723210	Symbol	c_wants_remove		723130						
ANR	723211	Function	Claim :: suspendClaim	1509:0:37456:37679							
ANR	723212	FunctionDef	Claim :: suspendClaim ()		723211	0					
ANR	723213	CompoundStatement		1511:0:37489:37679	723211	0					
ANR	723214	ExpressionStatement	changeState ( CLAIM_SUSPENDED )	1512:1:37492:37522	723211	0	True				
ANR	723215	CallExpression	changeState ( CLAIM_SUSPENDED )		723211	0					
ANR	723216	Callee	changeState		723211	0					
ANR	723217	Identifier	changeState		723211	0					
ANR	723218	ArgumentList	CLAIM_SUSPENDED		723211	1					
ANR	723219	Argument	CLAIM_SUSPENDED		723211	0					
ANR	723220	Identifier	CLAIM_SUSPENDED		723211	0					
ANR	723221	IfStatement	if ( c_starter )		723211	1					
ANR	723222	Condition	c_starter	1514:5:37530:37538	723211	0	True				
ANR	723223	Identifier	c_starter		723211	0					
ANR	723224	CompoundStatement		4:17:52:52	723211	1					
ANR	723225	ReturnStatement	return ( bool ) c_starter -> suspend ( ) ;	1515:2:37546:37579	723211	0	True				
ANR	723226	CastExpression	( bool ) c_starter -> suspend ( )		723211	0					
ANR	723227	CastTarget	bool		723211	0					
ANR	723228	CallExpression	c_starter -> suspend ( )		723211	1					
ANR	723229	Callee	c_starter -> suspend		723211	0					
ANR	723230	PtrMemberAccess	c_starter -> suspend		723211	0					
ANR	723231	Identifier	c_starter		723211	0					
ANR	723232	Identifier	suspend		723211	1					
ANR	723233	ArgumentList			723211	1					
ANR	723234	ReturnStatement	return true ;	1519:1:37666:37677	723211	2	True				
ANR	723235	Identifier	true		723211	0					
ANR	723236	ReturnType	bool		723211	1					
ANR	723237	Identifier	Claim :: suspendClaim		723211	2					
ANR	723238	ParameterList			723211	3					
ANR	723239	CFGEntryNode	ENTRY		723211		True				
ANR	723240	CFGExitNode	EXIT		723211		True				
ANR	723241	Symbol	CLAIM_SUSPENDED		723211						
ANR	723242	Symbol	c_starter		723211						
ANR	723243	Symbol	c_starter -> suspend		723211						
ANR	723244	Symbol	* c_starter		723211						
ANR	723245	Symbol	true		723211						
ANR	723246	Function	Claim :: resumeClaim	1523:0:37683:37931							
ANR	723247	FunctionDef	Claim :: resumeClaim ()		723246	0					
ANR	723248	CompoundStatement		1525:0:37715:37931	723246	0					
ANR	723249	IfStatement	if ( c_starter )		723246	0					
ANR	723250	Condition	c_starter	1526:5:37722:37730	723246	0	True				
ANR	723251	Identifier	c_starter		723246	0					
ANR	723252	CompoundStatement		2:17:18:18	723246	1					
ANR	723253	ExpressionStatement	changeState ( CLAIM_RUNNING )	1527:2:37738:37766	723246	0	True				
ANR	723254	CallExpression	changeState ( CLAIM_RUNNING )		723246	0					
ANR	723255	Callee	changeState		723246	0					
ANR	723256	Identifier	changeState		723246	0					
ANR	723257	ArgumentList	CLAIM_RUNNING		723246	1					
ANR	723258	Argument	CLAIM_RUNNING		723246	0					
ANR	723259	Identifier	CLAIM_RUNNING		723246	0					
ANR	723260	ReturnStatement	return ( bool ) c_starter -> resume ( ) ;	1528:2:37770:37802	723246	1	True				
ANR	723261	CastExpression	( bool ) c_starter -> resume ( )		723246	0					
ANR	723262	CastTarget	bool		723246	0					
ANR	723263	CallExpression	c_starter -> resume ( )		723246	1					
ANR	723264	Callee	c_starter -> resume		723246	0					
ANR	723265	PtrMemberAccess	c_starter -> resume		723246	0					
ANR	723266	Identifier	c_starter		723246	0					
ANR	723267	Identifier	resume		723246	1					
ANR	723268	ArgumentList			723246	1					
ANR	723269	ExpressionStatement	changeState ( CLAIM_IDLE )	1532:1:37889:37914	723246	1	True				
ANR	723270	CallExpression	changeState ( CLAIM_IDLE )		723246	0					
ANR	723271	Callee	changeState		723246	0					
ANR	723272	Identifier	changeState		723246	0					
ANR	723273	ArgumentList	CLAIM_IDLE		723246	1					
ANR	723274	Argument	CLAIM_IDLE		723246	0					
ANR	723275	Identifier	CLAIM_IDLE		723246	0					
ANR	723276	ReturnStatement	return true ;	1534:1:37918:37929	723246	2	True				
ANR	723277	Identifier	true		723246	0					
ANR	723278	ReturnType	bool		723246	1					
ANR	723279	Identifier	Claim :: resumeClaim		723246	2					
ANR	723280	ParameterList			723246	3					
ANR	723281	CFGEntryNode	ENTRY		723246		True				
ANR	723282	CFGExitNode	EXIT		723246		True				
ANR	723283	Symbol	c_starter		723246						
ANR	723284	Symbol	CLAIM_RUNNING		723246						
ANR	723285	Symbol	* c_starter		723246						
ANR	723286	Symbol	true		723246						
ANR	723287	Symbol	CLAIM_IDLE		723246						
ANR	723288	Symbol	c_starter -> resume		723246						
ANR	723289	Function	Claim :: starterKill	1538:0:37935:38252							
ANR	723290	FunctionDef	Claim :: starterKill (int sig)		723289	0					
ANR	723291	CompoundStatement		1540:0:37970:38252	723289	0					
ANR	723292	IfStatement	if ( c_starter )		723289	0					
ANR	723293	Condition	c_starter	1543:5:38105:38113	723289	0	True				
ANR	723294	Identifier	c_starter		723289	0					
ANR	723295	CompoundStatement		4:17:146:146	723289	1					
ANR	723296	ReturnStatement	return c_starter -> kill ( sig ) ;	1544:2:38121:38150	723289	0	True				
ANR	723297	CallExpression	c_starter -> kill ( sig )		723289	0					
ANR	723298	Callee	c_starter -> kill		723289	0					
ANR	723299	PtrMemberAccess	c_starter -> kill		723289	0					
ANR	723300	Identifier	c_starter		723289	0					
ANR	723301	Identifier	kill		723289	1					
ANR	723302	ArgumentList	sig		723289	1					
ANR	723303	Argument	sig		723289	0					
ANR	723304	Identifier	sig		723289	0					
ANR	723305	ReturnStatement	return true ;	1548:1:38239:38250	723289	1	True				
ANR	723306	Identifier	true		723289	0					
ANR	723307	ReturnType	bool		723289	1					
ANR	723308	Identifier	Claim :: starterKill		723289	2					
ANR	723309	ParameterList	int sig		723289	3					
ANR	723310	Parameter	int sig	1539:20:37960:37966	723289	0	True				
ANR	723311	ParameterType	int		723289	0					
ANR	723312	Identifier	sig		723289	1					
ANR	723313	CFGEntryNode	ENTRY		723289		True				
ANR	723314	CFGExitNode	EXIT		723289		True				
ANR	723315	Symbol	sig		723289						
ANR	723316	Symbol	c_starter		723289						
ANR	723317	Symbol	c_starter -> kill		723289						
ANR	723318	Symbol	* c_starter		723289						
ANR	723319	Symbol	true		723289						
ANR	723320	Function	Claim :: starterKillPg	1552:0:38256:38575							
ANR	723321	FunctionDef	Claim :: starterKillPg (int sig)		723320	0					
ANR	723322	CompoundStatement		1554:0:38293:38575	723320	0					
ANR	723323	IfStatement	if ( c_starter )		723320	0					
ANR	723324	Condition	c_starter	1555:5:38300:38308	723320	0	True				
ANR	723325	Identifier	c_starter		723320	0					
ANR	723326	CompoundStatement		2:17:18:18	723320	1					
ANR	723327	ExpressionStatement	changeState ( CLAIM_KILLING )	1558:2:38410:38438	723320	0	True				
ANR	723328	CallExpression	changeState ( CLAIM_KILLING )		723320	0					
ANR	723329	Callee	changeState		723320	0					
ANR	723330	Identifier	changeState		723320	0					
ANR	723331	ArgumentList	CLAIM_KILLING		723320	1					
ANR	723332	Argument	CLAIM_KILLING		723320	0					
ANR	723333	Identifier	CLAIM_KILLING		723320	0					
ANR	723334	ReturnStatement	return c_starter -> killpg ( sig ) ;	1559:2:38442:38473	723320	1	True				
ANR	723335	CallExpression	c_starter -> killpg ( sig )		723320	0					
ANR	723336	Callee	c_starter -> killpg		723320	0					
ANR	723337	PtrMemberAccess	c_starter -> killpg		723320	0					
ANR	723338	Identifier	c_starter		723320	0					
ANR	723339	Identifier	killpg		723320	1					
ANR	723340	ArgumentList	sig		723320	1					
ANR	723341	Argument	sig		723320	0					
ANR	723342	Identifier	sig		723320	0					
ANR	723343	ReturnStatement	return true ;	1563:1:38562:38573	723320	1	True				
ANR	723344	Identifier	true		723320	0					
ANR	723345	ReturnType	bool		723320	1					
ANR	723346	Identifier	Claim :: starterKillPg		723320	2					
ANR	723347	ParameterList	int sig		723320	3					
ANR	723348	Parameter	int sig	1553:22:38283:38289	723320	0	True				
ANR	723349	ParameterType	int		723320	0					
ANR	723350	Identifier	sig		723320	1					
ANR	723351	CFGEntryNode	ENTRY		723320		True				
ANR	723352	CFGExitNode	EXIT		723320		True				
ANR	723353	Symbol	sig		723320						
ANR	723354	Symbol	c_starter		723320						
ANR	723355	Symbol	CLAIM_KILLING		723320						
ANR	723356	Symbol	* c_starter		723320						
ANR	723357	Symbol	true		723320						
ANR	723358	Symbol	c_starter -> killpg		723320						
ANR	723359	Function	Claim :: starterKillSoft	1567:0:38579:38828							
ANR	723360	FunctionDef	Claim :: starterKillSoft (bool state_change)		723359	0					
ANR	723361	CompoundStatement		1569:0:38628:38828	723359	0					
ANR	723362	IfStatement	if ( c_starter )		723359	0					
ANR	723363	Condition	c_starter	1570:5:38635:38643	723359	0	True				
ANR	723364	Identifier	c_starter		723359	0					
ANR	723365	CompoundStatement		2:17:18:18	723359	1					
ANR	723366	ExpressionStatement	changeState ( CLAIM_VACATING )	1571:2:38651:38680	723359	0	True				
ANR	723367	CallExpression	changeState ( CLAIM_VACATING )		723359	0					
ANR	723368	Callee	changeState		723359	0					
ANR	723369	Identifier	changeState		723359	0					
ANR	723370	ArgumentList	CLAIM_VACATING		723359	1					
ANR	723371	Argument	CLAIM_VACATING		723359	0					
ANR	723372	Identifier	CLAIM_VACATING		723359	0					
ANR	723373	ReturnStatement	return c_starter -> killSoft ( state_change ) ;	1572:2:38684:38726	723359	1	True				
ANR	723374	CallExpression	c_starter -> killSoft ( state_change )		723359	0					
ANR	723375	Callee	c_starter -> killSoft		723359	0					
ANR	723376	PtrMemberAccess	c_starter -> killSoft		723359	0					
ANR	723377	Identifier	c_starter		723359	0					
ANR	723378	Identifier	killSoft		723359	1					
ANR	723379	ArgumentList	state_change		723359	1					
ANR	723380	Argument	state_change		723359	0					
ANR	723381	Identifier	state_change		723359	0					
ANR	723382	ReturnStatement	return true ;	1576:1:38815:38826	723359	1	True				
ANR	723383	Identifier	true		723359	0					
ANR	723384	ReturnType	bool		723359	1					
ANR	723385	Identifier	Claim :: starterKillSoft		723359	2					
ANR	723386	ParameterList	bool state_change		723359	3					
ANR	723387	Parameter	bool state_change	1568:24:38608:38624	723359	0	True				
ANR	723388	ParameterType	bool		723359	0					
ANR	723389	Identifier	state_change		723359	1					
ANR	723390	CFGEntryNode	ENTRY		723359		True				
ANR	723391	CFGExitNode	EXIT		723359		True				
ANR	723392	Symbol	c_starter		723359						
ANR	723393	Symbol	CLAIM_VACATING		723359						
ANR	723394	Symbol	* c_starter		723359						
ANR	723395	Symbol	true		723359						
ANR	723396	Symbol	c_starter -> killSoft		723359						
ANR	723397	Symbol	state_change		723359						
ANR	723398	Function	Claim :: starterKillHard	1580:0:38832:39053							
ANR	723399	FunctionDef	Claim :: starterKillHard ()		723398	0					
ANR	723400	CompoundStatement		1582:0:38868:39053	723398	0					
ANR	723401	IfStatement	if ( c_starter )		723398	0					
ANR	723402	Condition	c_starter	1583:5:38875:38883	723398	0	True				
ANR	723403	Identifier	c_starter		723398	0					
ANR	723404	CompoundStatement		2:17:18:18	723398	1					
ANR	723405	ExpressionStatement	changeState ( CLAIM_KILLING )	1584:2:38891:38919	723398	0	True				
ANR	723406	CallExpression	changeState ( CLAIM_KILLING )		723398	0					
ANR	723407	Callee	changeState		723398	0					
ANR	723408	Identifier	changeState		723398	0					
ANR	723409	ArgumentList	CLAIM_KILLING		723398	1					
ANR	723410	Argument	CLAIM_KILLING		723398	0					
ANR	723411	Identifier	CLAIM_KILLING		723398	0					
ANR	723412	ReturnStatement	return c_starter -> killHard ( ) ;	1585:2:38923:38951	723398	1	True				
ANR	723413	CallExpression	c_starter -> killHard ( )		723398	0					
ANR	723414	Callee	c_starter -> killHard		723398	0					
ANR	723415	PtrMemberAccess	c_starter -> killHard		723398	0					
ANR	723416	Identifier	c_starter		723398	0					
ANR	723417	Identifier	killHard		723398	1					
ANR	723418	ArgumentList			723398	1					
ANR	723419	ReturnStatement	return true ;	1589:1:39040:39051	723398	1	True				
ANR	723420	Identifier	true		723398	0					
ANR	723421	ReturnType	bool		723398	1					
ANR	723422	Identifier	Claim :: starterKillHard		723398	2					
ANR	723423	ParameterList			723398	3					
ANR	723424	CFGEntryNode	ENTRY		723398		True				
ANR	723425	CFGExitNode	EXIT		723398		True				
ANR	723426	Symbol	c_starter		723398						
ANR	723427	Symbol	CLAIM_KILLING		723398						
ANR	723428	Symbol	c_starter -> killHard		723398						
ANR	723429	Symbol	* c_starter		723398						
ANR	723430	Symbol	true		723398						
ANR	723431	Function	Claim :: starterHoldJob	1593:0:39057:39345							
ANR	723432	FunctionDef	"Claim :: starterHoldJob (char const * hold_reason , int hold_code , int hold_subcode)"		723431	0					
ANR	723433	CompoundStatement		1595:0:39142:39345	723431	0					
ANR	723434	IfStatement	if ( c_starter )		723431	0					
ANR	723435	Condition	c_starter	1596:5:39149:39157	723431	0	True				
ANR	723436	Identifier	c_starter		723431	0					
ANR	723437	CompoundStatement		2:17:18:18	723431	1					
ANR	723438	IfStatement	"if ( c_starter -> holdJob ( hold_reason , hold_code , hold_subcode ) )"		723431	0					
ANR	723439	Condition	"c_starter -> holdJob ( hold_reason , hold_code , hold_subcode )"	1597:6:39169:39222	723431	0	True				
ANR	723440	CallExpression	"c_starter -> holdJob ( hold_reason , hold_code , hold_subcode )"		723431	0					
ANR	723441	Callee	c_starter -> holdJob		723431	0					
ANR	723442	PtrMemberAccess	c_starter -> holdJob		723431	0					
ANR	723443	Identifier	c_starter		723431	0					
ANR	723444	Identifier	holdJob		723431	1					
ANR	723445	ArgumentList	hold_reason		723431	1					
ANR	723446	Argument	hold_reason		723431	0					
ANR	723447	Identifier	hold_reason		723431	0					
ANR	723448	Argument	hold_code		723431	1					
ANR	723449	Identifier	hold_code		723431	0					
ANR	723450	Argument	hold_subcode		723431	2					
ANR	723451	Identifier	hold_subcode		723431	0					
ANR	723452	CompoundStatement		3:63:83:83	723431	1					
ANR	723453	ReturnStatement	return ;	1598:3:39231:39237	723431	0	True				
ANR	723454	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starter unable to hold job, so evicting job instead.\\n"" )"	1600:2:39245:39319	723431	1	True				
ANR	723455	CallExpression	"dprintf ( D_ALWAYS , ""Starter unable to hold job, so evicting job instead.\\n"" )"		723431	0					
ANR	723456	Callee	dprintf		723431	0					
ANR	723457	Identifier	dprintf		723431	0					
ANR	723458	ArgumentList	D_ALWAYS		723431	1					
ANR	723459	Argument	D_ALWAYS		723431	0					
ANR	723460	Identifier	D_ALWAYS		723431	0					
ANR	723461	Argument	"""Starter unable to hold job, so evicting job instead.\\n"""		723431	1					
ANR	723462	PrimaryExpression	"""Starter unable to hold job, so evicting job instead.\\n"""		723431	0					
ANR	723463	ExpressionStatement	starterKillSoft ( )	1603:1:39326:39343	723431	1	True				
ANR	723464	CallExpression	starterKillSoft ( )		723431	0					
ANR	723465	Callee	starterKillSoft		723431	0					
ANR	723466	Identifier	starterKillSoft		723431	0					
ANR	723467	ArgumentList			723431	1					
ANR	723468	ReturnType	void		723431	1					
ANR	723469	Identifier	Claim :: starterHoldJob		723431	2					
ANR	723470	ParameterList	"char const * hold_reason , int hold_code , int hold_subcode"		723431	3					
ANR	723471	Parameter	char const * hold_reason	1594:23:39085:39107	723431	0	True				
ANR	723472	ParameterType	char const *		723431	0					
ANR	723473	Identifier	hold_reason		723431	1					
ANR	723474	Parameter	int hold_code	1594:47:39109:39121	723431	1	True				
ANR	723475	ParameterType	int		723431	0					
ANR	723476	Identifier	hold_code		723431	1					
ANR	723477	Parameter	int hold_subcode	1594:61:39123:39138	723431	2	True				
ANR	723478	ParameterType	int		723431	0					
ANR	723479	Identifier	hold_subcode		723431	1					
ANR	723480	CFGEntryNode	ENTRY		723431		True				
ANR	723481	CFGExitNode	EXIT		723431		True				
ANR	723482	Symbol	c_starter		723431						
ANR	723483	Symbol	hold_code		723431						
ANR	723484	Symbol	* c_starter		723431						
ANR	723485	Symbol	D_ALWAYS		723431						
ANR	723486	Symbol	hold_reason		723431						
ANR	723487	Symbol	c_starter -> holdJob		723431						
ANR	723488	Symbol	hold_subcode		723431						
ANR	723489	Function	Claim :: makeStarterArgs	1606:0:39348:39665							
ANR	723490	FunctionDef	Claim :: makeStarterArgs (ArgList & args)		723489	0					
ANR	723491	CompoundStatement		1608:0:39393:39665	723489	0					
ANR	723492	SwitchStatement	switch ( c_type )		723489	0					
ANR	723493	Condition	c_type	1609:9:39404:39409	723489	0	True				
ANR	723494	Identifier	c_type		723489	0					
ANR	723495	CompoundStatement		2:17:18:18	723489	1					
ANR	723496	Label	case CLAIM_COD :	1610:1:39415:39429	723489	0	True				
ANR	723497	Identifier	CLAIM_COD		723489	0					
ANR	723498	ExpressionStatement	makeCODStarterArgs ( args )	1611:2:39433:39457	723489	1	True				
ANR	723499	CallExpression	makeCODStarterArgs ( args )		723489	0					
ANR	723500	Callee	makeCODStarterArgs		723489	0					
ANR	723501	Identifier	makeCODStarterArgs		723489	0					
ANR	723502	ArgumentList	args		723489	1					
ANR	723503	Argument	args		723489	0					
ANR	723504	Identifier	args		723489	0					
ANR	723505	BreakStatement	break ;	1612:2:39461:39466	723489	2	True				
ANR	723506	Label	case CLAIM_FETCH :	1614:1:39488:39504	723489	3	True				
ANR	723507	Identifier	CLAIM_FETCH		723489	0					
ANR	723508	ExpressionStatement	makeFetchStarterArgs ( args )	1615:2:39508:39534	723489	4	True				
ANR	723509	CallExpression	makeFetchStarterArgs ( args )		723489	0					
ANR	723510	Callee	makeFetchStarterArgs		723489	0					
ANR	723511	Identifier	makeFetchStarterArgs		723489	0					
ANR	723512	ArgumentList	args		723489	1					
ANR	723513	Argument	args		723489	0					
ANR	723514	Identifier	args		723489	0					
ANR	723515	BreakStatement	break ;	1616:2:39538:39543	723489	5	True				
ANR	723516	Label	default :	1618:1:39574:39581	723489	6	True				
ANR	723517	Identifier	default		723489	0					
ANR	723518	ExpressionStatement	"EXCEPT ( ""Impossible: makeStarterArgs() called with unsupported claim type"" )"	1619:2:39585:39659	723489	7	True				
ANR	723519	CallExpression	"EXCEPT ( ""Impossible: makeStarterArgs() called with unsupported claim type"" )"		723489	0					
ANR	723520	Callee	EXCEPT		723489	0					
ANR	723521	Identifier	EXCEPT		723489	0					
ANR	723522	ArgumentList	"""Impossible: makeStarterArgs() called with unsupported claim type"""		723489	1					
ANR	723523	Argument	"""Impossible: makeStarterArgs() called with unsupported claim type"""		723489	0					
ANR	723524	PrimaryExpression	"""Impossible: makeStarterArgs() called with unsupported claim type"""		723489	0					
ANR	723525	ReturnType	void		723489	1					
ANR	723526	Identifier	Claim :: makeStarterArgs		723489	2					
ANR	723527	ParameterList	ArgList & args		723489	3					
ANR	723528	Parameter	ArgList & args	1607:24:39377:39389	723489	0	True				
ANR	723529	ParameterType	ArgList &		723489	0					
ANR	723530	Identifier	args		723489	1					
ANR	723531	CFGEntryNode	ENTRY		723489		True				
ANR	723532	CFGExitNode	EXIT		723489		True				
ANR	723533	Symbol	args		723489						
ANR	723534	Symbol	c_type		723489						
ANR	723535	Function	Claim :: makeFetchStarterArgs	1624:0:39687:39853							
ANR	723536	FunctionDef	Claim :: makeFetchStarterArgs (ArgList & args)		723535	0					
ANR	723537	CompoundStatement		1626:0:39737:39853	723535	0					
ANR	723538	ExpressionStatement	"args . AppendArg ( ""condor_starter"" )"	1627:1:39740:39772	723535	0	True				
ANR	723539	CallExpression	"args . AppendArg ( ""condor_starter"" )"		723535	0					
ANR	723540	Callee	args . AppendArg		723535	0					
ANR	723541	MemberAccess	args . AppendArg		723535	0					
ANR	723542	Identifier	args		723535	0					
ANR	723543	Identifier	AppendArg		723535	1					
ANR	723544	ArgumentList	"""condor_starter"""		723535	1					
ANR	723545	Argument	"""condor_starter"""		723535	0					
ANR	723546	PrimaryExpression	"""condor_starter"""		723535	0					
ANR	723547	ExpressionStatement	"args . AppendArg ( ""-f"" )"	1628:1:39775:39795	723535	1	True				
ANR	723548	CallExpression	"args . AppendArg ( ""-f"" )"		723535	0					
ANR	723549	Callee	args . AppendArg		723535	0					
ANR	723550	MemberAccess	args . AppendArg		723535	0					
ANR	723551	Identifier	args		723535	0					
ANR	723552	Identifier	AppendArg		723535	1					
ANR	723553	ArgumentList	"""-f"""		723535	1					
ANR	723554	Argument	"""-f"""		723535	0					
ANR	723555	PrimaryExpression	"""-f"""		723535	0					
ANR	723556	ExpressionStatement	"args . AppendArg ( ""-job-input-ad"" )"	1629:1:39798:39829	723535	2	True				
ANR	723557	CallExpression	"args . AppendArg ( ""-job-input-ad"" )"		723535	0					
ANR	723558	Callee	args . AppendArg		723535	0					
ANR	723559	MemberAccess	args . AppendArg		723535	0					
ANR	723560	Identifier	args		723535	0					
ANR	723561	Identifier	AppendArg		723535	1					
ANR	723562	ArgumentList	"""-job-input-ad"""		723535	1					
ANR	723563	Argument	"""-job-input-ad"""		723535	0					
ANR	723564	PrimaryExpression	"""-job-input-ad"""		723535	0					
ANR	723565	ExpressionStatement	"args . AppendArg ( ""-"" )"	1630:1:39832:39851	723535	3	True				
ANR	723566	CallExpression	"args . AppendArg ( ""-"" )"		723535	0					
ANR	723567	Callee	args . AppendArg		723535	0					
ANR	723568	MemberAccess	args . AppendArg		723535	0					
ANR	723569	Identifier	args		723535	0					
ANR	723570	Identifier	AppendArg		723535	1					
ANR	723571	ArgumentList	"""-"""		723535	1					
ANR	723572	Argument	"""-"""		723535	0					
ANR	723573	PrimaryExpression	"""-"""		723535	0					
ANR	723574	ReturnType	void		723535	1					
ANR	723575	Identifier	Claim :: makeFetchStarterArgs		723535	2					
ANR	723576	ParameterList	ArgList & args		723535	3					
ANR	723577	Parameter	ArgList & args	1625:29:39721:39733	723535	0	True				
ANR	723578	ParameterType	ArgList &		723535	0					
ANR	723579	Identifier	args		723535	1					
ANR	723580	CFGEntryNode	ENTRY		723535		True				
ANR	723581	CFGExitNode	EXIT		723535		True				
ANR	723582	Symbol	args		723535						
ANR	723583	Function	Claim :: makeCODStarterArgs	1635:0:39885:40816							
ANR	723584	FunctionDef	Claim :: makeCODStarterArgs (ArgList & args)		723583	0					
ANR	723585	CompoundStatement		1637:0:39933:40816	723583	0					
ANR	723586	ExpressionStatement	"args . AppendArg ( ""condor_starter"" )"	1639:1:39998:40030	723583	0	True				
ANR	723587	CallExpression	"args . AppendArg ( ""condor_starter"" )"		723583	0					
ANR	723588	Callee	args . AppendArg		723583	0					
ANR	723589	MemberAccess	args . AppendArg		723583	0					
ANR	723590	Identifier	args		723583	0					
ANR	723591	Identifier	AppendArg		723583	1					
ANR	723592	ArgumentList	"""condor_starter"""		723583	1					
ANR	723593	Argument	"""condor_starter"""		723583	0					
ANR	723594	PrimaryExpression	"""condor_starter"""		723583	0					
ANR	723595	ExpressionStatement	"args . AppendArg ( ""-f"" )"	1640:1:40033:40053	723583	1	True				
ANR	723596	CallExpression	"args . AppendArg ( ""-f"" )"		723583	0					
ANR	723597	Callee	args . AppendArg		723583	0					
ANR	723598	MemberAccess	args . AppendArg		723583	0					
ANR	723599	Identifier	args		723583	0					
ANR	723600	Identifier	AppendArg		723583	1					
ANR	723601	ArgumentList	"""-f"""		723583	1					
ANR	723602	Argument	"""-f"""		723583	0					
ANR	723603	PrimaryExpression	"""-f"""		723583	0					
ANR	723604	ExpressionStatement	"args . AppendArg ( ""-append"" )"	1641:1:40056:40081	723583	2	True				
ANR	723605	CallExpression	"args . AppendArg ( ""-append"" )"		723583	0					
ANR	723606	Callee	args . AppendArg		723583	0					
ANR	723607	MemberAccess	args . AppendArg		723583	0					
ANR	723608	Identifier	args		723583	0					
ANR	723609	Identifier	AppendArg		723583	1					
ANR	723610	ArgumentList	"""-append"""		723583	1					
ANR	723611	Argument	"""-append"""		723583	0					
ANR	723612	PrimaryExpression	"""-append"""		723583	0					
ANR	723613	ExpressionStatement	"args . AppendArg ( ""cod"" )"	1642:1:40084:40105	723583	3	True				
ANR	723614	CallExpression	"args . AppendArg ( ""cod"" )"		723583	0					
ANR	723615	Callee	args . AppendArg		723583	0					
ANR	723616	MemberAccess	args . AppendArg		723583	0					
ANR	723617	Identifier	args		723583	0					
ANR	723618	Identifier	AppendArg		723583	1					
ANR	723619	ArgumentList	"""cod"""		723583	1					
ANR	723620	Argument	"""cod"""		723583	0					
ANR	723621	PrimaryExpression	"""cod"""		723583	0					
ANR	723622	ExpressionStatement	"args . AppendArg ( ""-header"" )"	1643:1:40108:40133	723583	4	True				
ANR	723623	CallExpression	"args . AppendArg ( ""-header"" )"		723583	0					
ANR	723624	Callee	args . AppendArg		723583	0					
ANR	723625	MemberAccess	args . AppendArg		723583	0					
ANR	723626	Identifier	args		723583	0					
ANR	723627	Identifier	AppendArg		723583	1					
ANR	723628	ArgumentList	"""-header"""		723583	1					
ANR	723629	Argument	"""-header"""		723583	0					
ANR	723630	PrimaryExpression	"""-header"""		723583	0					
ANR	723631	IdentifierDeclStatement	MyString cod_id_arg ;	1645:1:40137:40156	723583	5	True				
ANR	723632	IdentifierDecl	cod_id_arg		723583	0					
ANR	723633	IdentifierDeclType	MyString		723583	0					
ANR	723634	Identifier	cod_id_arg		723583	1					
ANR	723635	ExpressionStatement	"cod_id_arg += ""("""	1646:1:40159:40176	723583	6	True				
ANR	723636	AssignmentExpression	"cod_id_arg += ""("""		723583	0		+=			
ANR	723637	Identifier	cod_id_arg		723583	0					
ANR	723638	PrimaryExpression	"""("""		723583	1					
ANR	723639	IfStatement	if ( resmgr -> is_smp ( ) )		723583	7					
ANR	723640	Condition	resmgr -> is_smp ( )	1647:5:40183:40198	723583	0	True				
ANR	723641	CallExpression	resmgr -> is_smp ( )		723583	0					
ANR	723642	Callee	resmgr -> is_smp		723583	0					
ANR	723643	PtrMemberAccess	resmgr -> is_smp		723583	0					
ANR	723644	Identifier	resmgr		723583	0					
ANR	723645	Identifier	is_smp		723583	1					
ANR	723646	ArgumentList			723583	1					
ANR	723647	CompoundStatement		11:24:268:268	723583	1					
ANR	723648	ExpressionStatement	cod_id_arg += c_rip -> r_id_str	1648:2:40206:40235	723583	0	True				
ANR	723649	AssignmentExpression	cod_id_arg += c_rip -> r_id_str		723583	0		+=			
ANR	723650	Identifier	cod_id_arg		723583	0					
ANR	723651	PtrMemberAccess	c_rip -> r_id_str		723583	1					
ANR	723652	Identifier	c_rip		723583	0					
ANR	723653	Identifier	r_id_str		723583	1					
ANR	723654	ExpressionStatement	cod_id_arg += ':'	1649:2:40239:40256	723583	1	True				
ANR	723655	AssignmentExpression	cod_id_arg += ':'		723583	0		+=			
ANR	723656	Identifier	cod_id_arg		723583	0					
ANR	723657	PrimaryExpression	':'		723583	1					
ANR	723658	ExpressionStatement	cod_id_arg += codId ( )	1651:1:40262:40283	723583	8	True				
ANR	723659	AssignmentExpression	cod_id_arg += codId ( )		723583	0		+=			
ANR	723660	Identifier	cod_id_arg		723583	0					
ANR	723661	CallExpression	codId ( )		723583	1					
ANR	723662	Callee	codId		723583	0					
ANR	723663	Identifier	codId		723583	0					
ANR	723664	ArgumentList			723583	1					
ANR	723665	ExpressionStatement	"cod_id_arg += "")"""	1652:1:40286:40303	723583	9	True				
ANR	723666	AssignmentExpression	"cod_id_arg += "")"""		723583	0		+=			
ANR	723667	Identifier	cod_id_arg		723583	0					
ANR	723668	PrimaryExpression	""")"""		723583	1					
ANR	723669	ExpressionStatement	args . AppendArg ( cod_id_arg . Value ( ) )	1653:1:40306:40340	723583	10	True				
ANR	723670	CallExpression	args . AppendArg ( cod_id_arg . Value ( ) )		723583	0					
ANR	723671	Callee	args . AppendArg		723583	0					
ANR	723672	MemberAccess	args . AppendArg		723583	0					
ANR	723673	Identifier	args		723583	0					
ANR	723674	Identifier	AppendArg		723583	1					
ANR	723675	ArgumentList	cod_id_arg . Value ( )		723583	1					
ANR	723676	Argument	cod_id_arg . Value ( )		723583	0					
ANR	723677	CallExpression	cod_id_arg . Value ( )		723583	0					
ANR	723678	Callee	cod_id_arg . Value		723583	0					
ANR	723679	MemberAccess	cod_id_arg . Value		723583	0					
ANR	723680	Identifier	cod_id_arg		723583	0					
ANR	723681	Identifier	Value		723583	1					
ANR	723682	ArgumentList			723583	1					
ANR	723683	IfStatement	if ( c_cluster >= 0 )		723583	11					
ANR	723684	Condition	c_cluster >= 0	1656:5:40411:40424	723583	0	True				
ANR	723685	RelationalExpression	c_cluster >= 0		723583	0		>=			
ANR	723686	Identifier	c_cluster		723583	0					
ANR	723687	PrimaryExpression	0		723583	1					
ANR	723688	CompoundStatement		20:22:494:494	723583	1					
ANR	723689	ExpressionStatement	"args . AppendArg ( ""-job-cluster"" )"	1657:2:40432:40462	723583	0	True				
ANR	723690	CallExpression	"args . AppendArg ( ""-job-cluster"" )"		723583	0					
ANR	723691	Callee	args . AppendArg		723583	0					
ANR	723692	MemberAccess	args . AppendArg		723583	0					
ANR	723693	Identifier	args		723583	0					
ANR	723694	Identifier	AppendArg		723583	1					
ANR	723695	ArgumentList	"""-job-cluster"""		723583	1					
ANR	723696	Argument	"""-job-cluster"""		723583	0					
ANR	723697	PrimaryExpression	"""-job-cluster"""		723583	0					
ANR	723698	ExpressionStatement	args . AppendArg ( c_cluster )	1658:2:40466:40491	723583	1	True				
ANR	723699	CallExpression	args . AppendArg ( c_cluster )		723583	0					
ANR	723700	Callee	args . AppendArg		723583	0					
ANR	723701	MemberAccess	args . AppendArg		723583	0					
ANR	723702	Identifier	args		723583	0					
ANR	723703	Identifier	AppendArg		723583	1					
ANR	723704	ArgumentList	c_cluster		723583	1					
ANR	723705	Argument	c_cluster		723583	0					
ANR	723706	Identifier	c_cluster		723583	0					
ANR	723707	IfStatement	if ( c_proc >= 0 )		723583	12					
ANR	723708	Condition	c_proc >= 0	1660:5:40502:40512	723583	0	True				
ANR	723709	RelationalExpression	c_proc >= 0		723583	0		>=			
ANR	723710	Identifier	c_proc		723583	0					
ANR	723711	PrimaryExpression	0		723583	1					
ANR	723712	CompoundStatement		24:19:582:582	723583	1					
ANR	723713	ExpressionStatement	"args . AppendArg ( ""-job-proc"" )"	1661:2:40520:40547	723583	0	True				
ANR	723714	CallExpression	"args . AppendArg ( ""-job-proc"" )"		723583	0					
ANR	723715	Callee	args . AppendArg		723583	0					
ANR	723716	MemberAccess	args . AppendArg		723583	0					
ANR	723717	Identifier	args		723583	0					
ANR	723718	Identifier	AppendArg		723583	1					
ANR	723719	ArgumentList	"""-job-proc"""		723583	1					
ANR	723720	Argument	"""-job-proc"""		723583	0					
ANR	723721	PrimaryExpression	"""-job-proc"""		723583	0					
ANR	723722	ExpressionStatement	args . AppendArg ( c_proc )	1662:2:40551:40573	723583	1	True				
ANR	723723	CallExpression	args . AppendArg ( c_proc )		723583	0					
ANR	723724	Callee	args . AppendArg		723583	0					
ANR	723725	MemberAccess	args . AppendArg		723583	0					
ANR	723726	Identifier	args		723583	0					
ANR	723727	Identifier	AppendArg		723583	1					
ANR	723728	ArgumentList	c_proc		723583	1					
ANR	723729	Argument	c_proc		723583	0					
ANR	723730	Identifier	c_proc		723583	0					
ANR	723731	IfStatement	if ( c_cod_keyword )		723583	13					
ANR	723732	Condition	c_cod_keyword	1666:5:40642:40654	723583	0	True				
ANR	723733	Identifier	c_cod_keyword		723583	0					
ANR	723734	CompoundStatement		30:21:724:724	723583	1					
ANR	723735	ExpressionStatement	"args . AppendArg ( ""-job-keyword"" )"	1667:2:40663:40693	723583	0	True				
ANR	723736	CallExpression	"args . AppendArg ( ""-job-keyword"" )"		723583	0					
ANR	723737	Callee	args . AppendArg		723583	0					
ANR	723738	MemberAccess	args . AppendArg		723583	0					
ANR	723739	Identifier	args		723583	0					
ANR	723740	Identifier	AppendArg		723583	1					
ANR	723741	ArgumentList	"""-job-keyword"""		723583	1					
ANR	723742	Argument	"""-job-keyword"""		723583	0					
ANR	723743	PrimaryExpression	"""-job-keyword"""		723583	0					
ANR	723744	ExpressionStatement	args . AppendArg ( c_cod_keyword )	1668:2:40697:40726	723583	1	True				
ANR	723745	CallExpression	args . AppendArg ( c_cod_keyword )		723583	0					
ANR	723746	Callee	args . AppendArg		723583	0					
ANR	723747	MemberAccess	args . AppendArg		723583	0					
ANR	723748	Identifier	args		723583	0					
ANR	723749	Identifier	AppendArg		723583	1					
ANR	723750	ArgumentList	c_cod_keyword		723583	1					
ANR	723751	Argument	c_cod_keyword		723583	0					
ANR	723752	Identifier	c_cod_keyword		723583	0					
ANR	723753	IfStatement	if ( c_has_job_ad )		723583	14					
ANR	723754	Condition	c_has_job_ad	1671:5:40737:40748	723583	0	True				
ANR	723755	Identifier	c_has_job_ad		723583	0					
ANR	723756	CompoundStatement		35:20:818:818	723583	1					
ANR	723757	ExpressionStatement	"args . AppendArg ( ""-job-input-ad"" )"	1672:2:40757:40788	723583	0	True				
ANR	723758	CallExpression	"args . AppendArg ( ""-job-input-ad"" )"		723583	0					
ANR	723759	Callee	args . AppendArg		723583	0					
ANR	723760	MemberAccess	args . AppendArg		723583	0					
ANR	723761	Identifier	args		723583	0					
ANR	723762	Identifier	AppendArg		723583	1					
ANR	723763	ArgumentList	"""-job-input-ad"""		723583	1					
ANR	723764	Argument	"""-job-input-ad"""		723583	0					
ANR	723765	PrimaryExpression	"""-job-input-ad"""		723583	0					
ANR	723766	ExpressionStatement	"args . AppendArg ( ""-"" )"	1673:2:40792:40811	723583	1	True				
ANR	723767	CallExpression	"args . AppendArg ( ""-"" )"		723583	0					
ANR	723768	Callee	args . AppendArg		723583	0					
ANR	723769	MemberAccess	args . AppendArg		723583	0					
ANR	723770	Identifier	args		723583	0					
ANR	723771	Identifier	AppendArg		723583	1					
ANR	723772	ArgumentList	"""-"""		723583	1					
ANR	723773	Argument	"""-"""		723583	0					
ANR	723774	PrimaryExpression	"""-"""		723583	0					
ANR	723775	ReturnType	void		723583	1					
ANR	723776	Identifier	Claim :: makeCODStarterArgs		723583	2					
ANR	723777	ParameterList	ArgList & args		723583	3					
ANR	723778	Parameter	ArgList & args	1636:27:39917:39929	723583	0	True				
ANR	723779	ParameterType	ArgList &		723583	0					
ANR	723780	Identifier	args		723583	1					
ANR	723781	CFGEntryNode	ENTRY		723583		True				
ANR	723782	CFGExitNode	EXIT		723583		True				
ANR	723783	Symbol	cod_id_arg . Value		723583						
ANR	723784	Symbol	c_rip		723583						
ANR	723785	Symbol	c_rip -> r_id_str		723583						
ANR	723786	Symbol	* c_rip		723583						
ANR	723787	Symbol	c_cod_keyword		723583						
ANR	723788	Symbol	* resmgr		723583						
ANR	723789	Symbol	cod_id_arg		723583						
ANR	723790	Symbol	c_proc		723583						
ANR	723791	Symbol	args		723583						
ANR	723792	Symbol	codId		723583						
ANR	723793	Symbol	resmgr		723583						
ANR	723794	Symbol	resmgr -> is_smp		723583						
ANR	723795	Symbol	c_has_job_ad		723583						
ANR	723796	Symbol	c_cluster		723583						
ANR	723797	Function	Claim :: verifyCODAttrs	1678:0:40820:41142							
ANR	723798	FunctionDef	Claim :: verifyCODAttrs (ClassAd * req)		723797	0					
ANR	723799	CompoundStatement		1680:0:40863:41142	723797	0					
ANR	723800	IfStatement	if ( c_cod_keyword )		723797	0					
ANR	723801	Condition	c_cod_keyword	1682:5:40871:40883	723797	0	True				
ANR	723802	Identifier	c_cod_keyword		723797	0					
ANR	723803	CompoundStatement		3:21:23:23	723797	1					
ANR	723804	ExpressionStatement	"EXCEPT ( ""Trying to activate a COD claim that has a keyword"" )"	1683:2:40891:40952	723797	0	True				
ANR	723805	CallExpression	"EXCEPT ( ""Trying to activate a COD claim that has a keyword"" )"		723797	0					
ANR	723806	Callee	EXCEPT		723797	0					
ANR	723807	Identifier	EXCEPT		723797	0					
ANR	723808	ArgumentList	"""Trying to activate a COD claim that has a keyword"""		723797	1					
ANR	723809	Argument	"""Trying to activate a COD claim that has a keyword"""		723797	0					
ANR	723810	PrimaryExpression	"""Trying to activate a COD claim that has a keyword"""		723797	0					
ANR	723811	ExpressionStatement	"req -> LookupString ( ATTR_JOB_KEYWORD , & c_cod_keyword )"	1686:1:40959:41012	723797	1	True				
ANR	723812	CallExpression	"req -> LookupString ( ATTR_JOB_KEYWORD , & c_cod_keyword )"		723797	0					
ANR	723813	Callee	req -> LookupString		723797	0					
ANR	723814	PtrMemberAccess	req -> LookupString		723797	0					
ANR	723815	Identifier	req		723797	0					
ANR	723816	Identifier	LookupString		723797	1					
ANR	723817	ArgumentList	ATTR_JOB_KEYWORD		723797	1					
ANR	723818	Argument	ATTR_JOB_KEYWORD		723797	0					
ANR	723819	Identifier	ATTR_JOB_KEYWORD		723797	0					
ANR	723820	Argument	& c_cod_keyword		723797	1					
ANR	723821	UnaryOperationExpression	& c_cod_keyword		723797	0					
ANR	723822	UnaryOperator	&		723797	0					
ANR	723823	Identifier	c_cod_keyword		723797	1					
ANR	723824	ExpressionStatement	"req -> EvalBool ( ATTR_HAS_JOB_AD , NULL , c_has_job_ad )"	1687:1:41015:41067	723797	2	True				
ANR	723825	CallExpression	"req -> EvalBool ( ATTR_HAS_JOB_AD , NULL , c_has_job_ad )"		723797	0					
ANR	723826	Callee	req -> EvalBool		723797	0					
ANR	723827	PtrMemberAccess	req -> EvalBool		723797	0					
ANR	723828	Identifier	req		723797	0					
ANR	723829	Identifier	EvalBool		723797	1					
ANR	723830	ArgumentList	ATTR_HAS_JOB_AD		723797	1					
ANR	723831	Argument	ATTR_HAS_JOB_AD		723797	0					
ANR	723832	Identifier	ATTR_HAS_JOB_AD		723797	0					
ANR	723833	Argument	NULL		723797	1					
ANR	723834	Identifier	NULL		723797	0					
ANR	723835	Argument	c_has_job_ad		723797	2					
ANR	723836	Identifier	c_has_job_ad		723797	0					
ANR	723837	IfStatement	if ( c_cod_keyword || c_has_job_ad )		723797	3					
ANR	723838	Condition	c_cod_keyword || c_has_job_ad	1689:5:41075:41103	723797	0	True				
ANR	723839	OrExpression	c_cod_keyword || c_has_job_ad		723797	0		||			
ANR	723840	Identifier	c_cod_keyword		723797	0					
ANR	723841	Identifier	c_has_job_ad		723797	1					
ANR	723842	CompoundStatement		10:37:243:243	723797	1					
ANR	723843	ReturnStatement	return true ;	1690:2:41111:41122	723797	0	True				
ANR	723844	Identifier	true		723797	0					
ANR	723845	ReturnStatement	return false ;	1692:1:41128:41140	723797	4	True				
ANR	723846	Identifier	false		723797	0					
ANR	723847	ReturnType	bool		723797	1					
ANR	723848	Identifier	Claim :: verifyCODAttrs		723797	2					
ANR	723849	ParameterList	ClassAd * req		723797	3					
ANR	723850	Parameter	ClassAd * req	1679:23:40848:40859	723797	0	True				
ANR	723851	ParameterType	ClassAd *		723797	0					
ANR	723852	Identifier	req		723797	1					
ANR	723853	CFGEntryNode	ENTRY		723797		True				
ANR	723854	CFGExitNode	EXIT		723797		True				
ANR	723855	Symbol	& c_cod_keyword		723797						
ANR	723856	Symbol	ATTR_HAS_JOB_AD		723797						
ANR	723857	Symbol	NULL		723797						
ANR	723858	Symbol	ATTR_JOB_KEYWORD		723797						
ANR	723859	Symbol	c_cod_keyword		723797						
ANR	723860	Symbol	true		723797						
ANR	723861	Symbol	false		723797						
ANR	723862	Symbol	c_has_job_ad		723797						
ANR	723863	Symbol	req		723797						
ANR	723864	Function	Claim :: publishStarterAd	1696:0:41146:41962							
ANR	723865	FunctionDef	Claim :: publishStarterAd (ClassAd * cad)		723864	0					
ANR	723866	CompoundStatement		1698:0:41191:41962	723864	0					
ANR	723867	IdentifierDeclStatement	MyString line ;	1699:1:41194:41207	723864	0	True				
ANR	723868	IdentifierDecl	line		723864	0					
ANR	723869	IdentifierDeclType	MyString		723864	0					
ANR	723870	Identifier	line		723864	1					
ANR	723871	IfStatement	if ( ! c_starter )		723864	1					
ANR	723872	Condition	! c_starter	1701:5:41216:41226	723864	0	True				
ANR	723873	UnaryOperationExpression	! c_starter		723864	0					
ANR	723874	UnaryOperator	!		723864	0					
ANR	723875	Identifier	c_starter		723864	1					
ANR	723876	CompoundStatement		4:19:38:38	723864	1					
ANR	723877	ReturnStatement	return false ;	1702:2:41234:41246	723864	0	True				
ANR	723878	Identifier	false		723864	0					
ANR	723879	IdentifierDeclStatement	char const * ip_addr = c_starter -> getIpAddr ( ) ;	1705:1:41253:41297	723864	2	True				
ANR	723880	IdentifierDecl	* ip_addr = c_starter -> getIpAddr ( )		723864	0					
ANR	723881	IdentifierDeclType	char const *		723864	0					
ANR	723882	Identifier	ip_addr		723864	1					
ANR	723883	AssignmentExpression	* ip_addr = c_starter -> getIpAddr ( )		723864	2		=			
ANR	723884	Identifier	ip_addr		723864	0					
ANR	723885	CallExpression	c_starter -> getIpAddr ( )		723864	1					
ANR	723886	Callee	c_starter -> getIpAddr		723864	0					
ANR	723887	PtrMemberAccess	c_starter -> getIpAddr		723864	0					
ANR	723888	Identifier	c_starter		723864	0					
ANR	723889	Identifier	getIpAddr		723864	1					
ANR	723890	ArgumentList			723864	1					
ANR	723891	IfStatement	if ( ip_addr )		723864	3					
ANR	723892	Condition	ip_addr	1706:5:41304:41310	723864	0	True				
ANR	723893	Identifier	ip_addr		723864	0					
ANR	723894	CompoundStatement		9:15:122:122	723864	1					
ANR	723895	ExpressionStatement	line = ATTR_STARTER_IP_ADDR	1707:2:41318:41345	723864	0	True				
ANR	723896	AssignmentExpression	line = ATTR_STARTER_IP_ADDR		723864	0		=			
ANR	723897	Identifier	line		723864	0					
ANR	723898	Identifier	ATTR_STARTER_IP_ADDR		723864	1					
ANR	723899	ExpressionStatement	"line += ""=\\"""""	1708:2:41349:41362	723864	1	True				
ANR	723900	AssignmentExpression	"line += ""=\\"""""		723864	0		+=			
ANR	723901	Identifier	line		723864	0					
ANR	723902	PrimaryExpression	"""=\\"""""		723864	1					
ANR	723903	ExpressionStatement	line += ip_addr	1709:2:41366:41381	723864	2	True				
ANR	723904	AssignmentExpression	line += ip_addr		723864	0		+=			
ANR	723905	Identifier	line		723864	0					
ANR	723906	Identifier	ip_addr		723864	1					
ANR	723907	ExpressionStatement	"line += '""'"	1710:2:41385:41396	723864	3	True				
ANR	723908	AssignmentExpression	"line += '""'"		723864	0		+=			
ANR	723909	Identifier	line		723864	0					
ANR	723910	PrimaryExpression	"'""'"		723864	1					
ANR	723911	ExpressionStatement	cad -> Insert ( line . Value ( ) )	1711:2:41400:41427	723864	4	True				
ANR	723912	CallExpression	cad -> Insert ( line . Value ( ) )		723864	0					
ANR	723913	Callee	cad -> Insert		723864	0					
ANR	723914	PtrMemberAccess	cad -> Insert		723864	0					
ANR	723915	Identifier	cad		723864	0					
ANR	723916	Identifier	Insert		723864	1					
ANR	723917	ArgumentList	line . Value ( )		723864	1					
ANR	723918	Argument	line . Value ( )		723864	0					
ANR	723919	CallExpression	line . Value ( )		723864	0					
ANR	723920	Callee	line . Value		723864	0					
ANR	723921	MemberAccess	line . Value		723864	0					
ANR	723922	Identifier	line		723864	0					
ANR	723923	Identifier	Value		723864	1					
ANR	723924	ArgumentList			723864	1					
ANR	723925	ExpressionStatement	"this -> publish ( cad , A_PUBLIC )"	1715:1:41495:41525	723864	4	True				
ANR	723926	CallExpression	"this -> publish ( cad , A_PUBLIC )"		723864	0					
ANR	723927	Callee	this -> publish		723864	0					
ANR	723928	PtrMemberAccess	this -> publish		723864	0					
ANR	723929	Identifier	this		723864	0					
ANR	723930	Identifier	publish		723864	1					
ANR	723931	ArgumentList	cad		723864	1					
ANR	723932	Argument	cad		723864	0					
ANR	723933	Identifier	cad		723864	0					
ANR	723934	Argument	A_PUBLIC		723864	1					
ANR	723935	Identifier	A_PUBLIC		723864	0					
ANR	723936	IdentifierDeclStatement	StringList ability_list ;	1718:1:41589:41612	723864	5	True				
ANR	723937	IdentifierDecl	ability_list		723864	0					
ANR	723938	IdentifierDeclType	StringList		723864	0					
ANR	723939	Identifier	ability_list		723864	1					
ANR	723940	ExpressionStatement	"c_starter -> publish ( cad , A_STATIC | A_PUBLIC , & ability_list )"	1719:1:41615:41676	723864	6	True				
ANR	723941	CallExpression	"c_starter -> publish ( cad , A_STATIC | A_PUBLIC , & ability_list )"		723864	0					
ANR	723942	Callee	c_starter -> publish		723864	0					
ANR	723943	PtrMemberAccess	c_starter -> publish		723864	0					
ANR	723944	Identifier	c_starter		723864	0					
ANR	723945	Identifier	publish		723864	1					
ANR	723946	ArgumentList	cad		723864	1					
ANR	723947	Argument	cad		723864	0					
ANR	723948	Identifier	cad		723864	0					
ANR	723949	Argument	A_STATIC | A_PUBLIC		723864	1					
ANR	723950	InclusiveOrExpression	A_STATIC | A_PUBLIC		723864	0		|			
ANR	723951	Identifier	A_STATIC		723864	0					
ANR	723952	Identifier	A_PUBLIC		723864	1					
ANR	723953	Argument	& ability_list		723864	2					
ANR	723954	UnaryOperationExpression	& ability_list		723864	0					
ANR	723955	UnaryOperator	&		723864	0					
ANR	723956	Identifier	ability_list		723864	1					
ANR	723957	IdentifierDeclStatement	char * ability_str = ability_list . print_to_string ( ) ;	1720:1:41679:41729	723864	7	True				
ANR	723958	IdentifierDecl	* ability_str = ability_list . print_to_string ( )		723864	0					
ANR	723959	IdentifierDeclType	char *		723864	0					
ANR	723960	Identifier	ability_str		723864	1					
ANR	723961	AssignmentExpression	* ability_str = ability_list . print_to_string ( )		723864	2		=			
ANR	723962	Identifier	ability_str		723864	0					
ANR	723963	CallExpression	ability_list . print_to_string ( )		723864	1					
ANR	723964	Callee	ability_list . print_to_string		723864	0					
ANR	723965	MemberAccess	ability_list . print_to_string		723864	0					
ANR	723966	Identifier	ability_list		723864	0					
ANR	723967	Identifier	print_to_string		723864	1					
ANR	723968	ArgumentList			723864	1					
ANR	723969	IfStatement	if ( ability_str )		723864	8					
ANR	723970	Condition	ability_str	1721:5:41736:41746	723864	0	True				
ANR	723971	Identifier	ability_str		723864	0					
ANR	723972	CompoundStatement		24:19:558:558	723864	1					
ANR	723973	ExpressionStatement	line = ATTR_STARTER_ABILITY_LIST	1722:2:41754:41786	723864	0	True				
ANR	723974	AssignmentExpression	line = ATTR_STARTER_ABILITY_LIST		723864	0		=			
ANR	723975	Identifier	line		723864	0					
ANR	723976	Identifier	ATTR_STARTER_ABILITY_LIST		723864	1					
ANR	723977	ExpressionStatement	"line += ""=\\"""""	1723:2:41790:41803	723864	1	True				
ANR	723978	AssignmentExpression	"line += ""=\\"""""		723864	0		+=			
ANR	723979	Identifier	line		723864	0					
ANR	723980	PrimaryExpression	"""=\\"""""		723864	1					
ANR	723981	ExpressionStatement	line += ability_str	1724:2:41807:41826	723864	2	True				
ANR	723982	AssignmentExpression	line += ability_str		723864	0		+=			
ANR	723983	Identifier	line		723864	0					
ANR	723984	Identifier	ability_str		723864	1					
ANR	723985	ExpressionStatement	"line += '""'"	1725:2:41830:41841	723864	3	True				
ANR	723986	AssignmentExpression	"line += '""'"		723864	0		+=			
ANR	723987	Identifier	line		723864	0					
ANR	723988	PrimaryExpression	"'""'"		723864	1					
ANR	723989	ExpressionStatement	cad -> Insert ( line . Value ( ) )	1726:2:41845:41872	723864	4	True				
ANR	723990	CallExpression	cad -> Insert ( line . Value ( ) )		723864	0					
ANR	723991	Callee	cad -> Insert		723864	0					
ANR	723992	PtrMemberAccess	cad -> Insert		723864	0					
ANR	723993	Identifier	cad		723864	0					
ANR	723994	Identifier	Insert		723864	1					
ANR	723995	ArgumentList	line . Value ( )		723864	1					
ANR	723996	Argument	line . Value ( )		723864	0					
ANR	723997	CallExpression	line . Value ( )		723864	0					
ANR	723998	Callee	line . Value		723864	0					
ANR	723999	MemberAccess	line . Value		723864	0					
ANR	724000	Identifier	line		723864	0					
ANR	724001	Identifier	Value		723864	1					
ANR	724002	ArgumentList			723864	1					
ANR	724003	ExpressionStatement	free ( ability_str )	1727:2:41876:41895	723864	5	True				
ANR	724004	CallExpression	free ( ability_str )		723864	0					
ANR	724005	Callee	free		723864	0					
ANR	724006	Identifier	free		723864	0					
ANR	724007	ArgumentList	ability_str		723864	1					
ANR	724008	Argument	ability_str		723864	0					
ANR	724009	Identifier	ability_str		723864	0					
ANR	724010	ReturnStatement	return true ;	1732:1:41949:41960	723864	9	True				
ANR	724011	Identifier	true		723864	0					
ANR	724012	ReturnType	bool		723864	1					
ANR	724013	Identifier	Claim :: publishStarterAd		723864	2					
ANR	724014	ParameterList	ClassAd * cad		723864	3					
ANR	724015	Parameter	ClassAd * cad	1697:25:41176:41187	723864	0	True				
ANR	724016	ParameterType	ClassAd *		723864	0					
ANR	724017	Identifier	cad		723864	1					
ANR	724018	CFGEntryNode	ENTRY		723864		True				
ANR	724019	CFGExitNode	EXIT		723864		True				
ANR	724020	Symbol	c_starter		723864						
ANR	724021	Symbol	ability_list		723864						
ANR	724022	Symbol	line . Value		723864						
ANR	724023	Symbol	line		723864						
ANR	724024	Symbol	cad		723864						
ANR	724025	Symbol	ATTR_STARTER_ABILITY_LIST		723864						
ANR	724026	Symbol	false		723864						
ANR	724027	Symbol	this		723864						
ANR	724028	Symbol	A_PUBLIC		723864						
ANR	724029	Symbol	ability_list . print_to_string		723864						
ANR	724030	Symbol	& ability_list		723864						
ANR	724031	Symbol	A_STATIC		723864						
ANR	724032	Symbol	ability_str		723864						
ANR	724033	Symbol	c_starter -> getIpAddr		723864						
ANR	724034	Symbol	* c_starter		723864						
ANR	724035	Symbol	true		723864						
ANR	724036	Symbol	ATTR_STARTER_IP_ADDR		723864						
ANR	724037	Symbol	ip_addr		723864						
ANR	724038	Function	Claim :: periodicCheckpoint	1736:0:41966:42139							
ANR	724039	FunctionDef	Claim :: periodicCheckpoint ()		724038	0					
ANR	724040	CompoundStatement		1738:0:42005:42139	724038	0					
ANR	724041	IfStatement	if ( c_starter )		724038	0					
ANR	724042	Condition	c_starter	1739:5:42012:42020	724038	0	True				
ANR	724043	Identifier	c_starter		724038	0					
ANR	724044	CompoundStatement		2:17:18:18	724038	1					
ANR	724045	IfStatement	if ( ! c_starter -> kill ( DC_SIGPCKPT ) )		724038	0					
ANR	724046	Condition	! c_starter -> kill ( DC_SIGPCKPT )	1740:6:42032:42061	724038	0	True				
ANR	724047	UnaryOperationExpression	! c_starter -> kill ( DC_SIGPCKPT )		724038	0					
ANR	724048	UnaryOperator	!		724038	0					
ANR	724049	CallExpression	c_starter -> kill ( DC_SIGPCKPT )		724038	1					
ANR	724050	Callee	c_starter -> kill		724038	0					
ANR	724051	PtrMemberAccess	c_starter -> kill		724038	0					
ANR	724052	Identifier	c_starter		724038	0					
ANR	724053	Identifier	kill		724038	1					
ANR	724054	ArgumentList	DC_SIGPCKPT		724038	1					
ANR	724055	Argument	DC_SIGPCKPT		724038	0					
ANR	724056	Identifier	DC_SIGPCKPT		724038	0					
ANR	724057	CompoundStatement		3:39:59:59	724038	1					
ANR	724058	ReturnStatement	return false ;	1741:3:42071:42083	724038	0	True				
ANR	724059	Identifier	false		724038	0					
ANR	724060	ExpressionStatement	c_last_pckpt = ( int ) time ( NULL )	1744:1:42093:42123	724038	1	True				
ANR	724061	AssignmentExpression	c_last_pckpt = ( int ) time ( NULL )		724038	0		=			
ANR	724062	Identifier	c_last_pckpt		724038	0					
ANR	724063	CastExpression	( int ) time ( NULL )		724038	1					
ANR	724064	CastTarget	int		724038	0					
ANR	724065	CallExpression	time ( NULL )		724038	1					
ANR	724066	Callee	time		724038	0					
ANR	724067	Identifier	time		724038	0					
ANR	724068	ArgumentList	NULL		724038	1					
ANR	724069	Argument	NULL		724038	0					
ANR	724070	Identifier	NULL		724038	0					
ANR	724071	ReturnStatement	return true ;	1745:1:42126:42137	724038	2	True				
ANR	724072	Identifier	true		724038	0					
ANR	724073	ReturnType	bool		724038	1					
ANR	724074	Identifier	Claim :: periodicCheckpoint		724038	2					
ANR	724075	ParameterList			724038	3					
ANR	724076	CFGEntryNode	ENTRY		724038		True				
ANR	724077	CFGExitNode	EXIT		724038		True				
ANR	724078	Symbol	c_starter		724038						
ANR	724079	Symbol	NULL		724038						
ANR	724080	Symbol	c_last_pckpt		724038						
ANR	724081	Symbol	c_starter -> kill		724038						
ANR	724082	Symbol	* c_starter		724038						
ANR	724083	Symbol	false		724038						
ANR	724084	Symbol	true		724038						
ANR	724085	Symbol	time		724038						
ANR	724086	Symbol	DC_SIGPCKPT		724038						
ANR	724087	Function	Claim :: ownerMatches	1749:0:42143:42302							
ANR	724088	FunctionDef	Claim :: ownerMatches (const char * owner)		724087	0					
ANR	724089	CompoundStatement		1751:0:42189:42302	724087	0					
ANR	724090	IfStatement	"if ( ! strcmp ( c_client -> owner ( ) , owner ) )"		724087	0					
ANR	724091	Condition	"! strcmp ( c_client -> owner ( ) , owner )"	1752:5:42196:42229	724087	0	True				
ANR	724092	UnaryOperationExpression	"! strcmp ( c_client -> owner ( ) , owner )"		724087	0					
ANR	724093	UnaryOperator	!		724087	0					
ANR	724094	CallExpression	"strcmp ( c_client -> owner ( ) , owner )"		724087	1					
ANR	724095	Callee	strcmp		724087	0					
ANR	724096	Identifier	strcmp		724087	0					
ANR	724097	ArgumentList	c_client -> owner ( )		724087	1					
ANR	724098	Argument	c_client -> owner ( )		724087	0					
ANR	724099	CallExpression	c_client -> owner ( )		724087	0					
ANR	724100	Callee	c_client -> owner		724087	0					
ANR	724101	PtrMemberAccess	c_client -> owner		724087	0					
ANR	724102	Identifier	c_client		724087	0					
ANR	724103	Identifier	owner		724087	1					
ANR	724104	ArgumentList			724087	1					
ANR	724105	Argument	owner		724087	1					
ANR	724106	Identifier	owner		724087	0					
ANR	724107	CompoundStatement		2:42:43:43	724087	1					
ANR	724108	ReturnStatement	return true ;	1753:2:42237:42248	724087	0	True				
ANR	724109	Identifier	true		724087	0					
ANR	724110	ReturnStatement	return false ;	1756:1:42288:42300	724087	1	True				
ANR	724111	Identifier	false		724087	0					
ANR	724112	ReturnType	bool		724087	1					
ANR	724113	Identifier	Claim :: ownerMatches		724087	2					
ANR	724114	ParameterList	const char * owner		724087	3					
ANR	724115	Parameter	const char * owner	1750:21:42169:42185	724087	0	True				
ANR	724116	ParameterType	const char *		724087	0					
ANR	724117	Identifier	owner		724087	1					
ANR	724118	CFGEntryNode	ENTRY		724087		True				
ANR	724119	CFGExitNode	EXIT		724087		True				
ANR	724120	Symbol	owner		724087						
ANR	724121	Symbol	strcmp		724087						
ANR	724122	Symbol	c_client		724087						
ANR	724123	Symbol	true		724087						
ANR	724124	Symbol	false		724087						
ANR	724125	Symbol	c_client -> owner		724087						
ANR	724126	Symbol	* c_client		724087						
ANR	724127	Function	Claim :: globalJobIdMatches	1760:0:42306:42455							
ANR	724128	FunctionDef	Claim :: globalJobIdMatches (const char * req_id)		724127	0					
ANR	724129	CompoundStatement		1762:0:42359:42455	724127	0					
ANR	724130	IfStatement	"if ( c_global_job_id && ! strcmp ( c_global_job_id , req_id ) )"		724127	0					
ANR	724131	Condition	"c_global_job_id && ! strcmp ( c_global_job_id , req_id )"	1763:5:42366:42416	724127	0	True				
ANR	724132	AndExpression	"c_global_job_id && ! strcmp ( c_global_job_id , req_id )"		724127	0		&&			
ANR	724133	Identifier	c_global_job_id		724127	0					
ANR	724134	UnaryOperationExpression	"! strcmp ( c_global_job_id , req_id )"		724127	1					
ANR	724135	UnaryOperator	!		724127	0					
ANR	724136	CallExpression	"strcmp ( c_global_job_id , req_id )"		724127	1					
ANR	724137	Callee	strcmp		724127	0					
ANR	724138	Identifier	strcmp		724127	0					
ANR	724139	ArgumentList	c_global_job_id		724127	1					
ANR	724140	Argument	c_global_job_id		724127	0					
ANR	724141	Identifier	c_global_job_id		724127	0					
ANR	724142	Argument	req_id		724127	1					
ANR	724143	Identifier	req_id		724127	0					
ANR	724144	CompoundStatement		2:59:60:60	724127	1					
ANR	724145	ReturnStatement	return true ;	1764:2:42424:42435	724127	0	True				
ANR	724146	Identifier	true		724127	0					
ANR	724147	ReturnStatement	return false ;	1766:1:42441:42453	724127	1	True				
ANR	724148	Identifier	false		724127	0					
ANR	724149	ReturnType	bool		724127	1					
ANR	724150	Identifier	Claim :: globalJobIdMatches		724127	2					
ANR	724151	ParameterList	const char * req_id		724127	3					
ANR	724152	Parameter	const char * req_id	1761:27:42338:42355	724127	0	True				
ANR	724153	ParameterType	const char *		724127	0					
ANR	724154	Identifier	req_id		724127	1					
ANR	724155	CFGEntryNode	ENTRY		724127		True				
ANR	724156	CFGExitNode	EXIT		724127		True				
ANR	724157	Symbol	req_id		724127						
ANR	724158	Symbol	strcmp		724127						
ANR	724159	Symbol	true		724127						
ANR	724160	Symbol	false		724127						
ANR	724161	Symbol	c_global_job_id		724127						
ANR	724162	Function	Claim :: setPendingCmd	1770:0:42459:42794							
ANR	724163	FunctionDef	Claim :: setPendingCmd (int cmd)		724162	0					
ANR	724164	CompoundStatement		1772:0:42496:42794	724162	0					
ANR	724165	ExpressionStatement	c_pending_cmd = cmd	1775:1:42606:42625	724162	0	True				
ANR	724166	AssignmentExpression	c_pending_cmd = cmd		724162	0		=			
ANR	724167	Identifier	c_pending_cmd		724162	0					
ANR	724168	Identifier	cmd		724162	1					
ANR	724169	ExpressionStatement	c_last_state = c_state	1779:1:42755:42777	724162	1	True				
ANR	724170	AssignmentExpression	c_last_state = c_state		724162	0		=			
ANR	724171	Identifier	c_last_state		724162	0					
ANR	724172	Identifier	c_state		724162	1					
ANR	724173	ReturnStatement	return true ;	1781:1:42781:42792	724162	2	True				
ANR	724174	Identifier	true		724162	0					
ANR	724175	ReturnType	bool		724162	1					
ANR	724176	Identifier	Claim :: setPendingCmd		724162	2					
ANR	724177	ParameterList	int cmd		724162	3					
ANR	724178	Parameter	int cmd	1771:22:42486:42492	724162	0	True				
ANR	724179	ParameterType	int		724162	0					
ANR	724180	Identifier	cmd		724162	1					
ANR	724181	CFGEntryNode	ENTRY		724162		True				
ANR	724182	CFGExitNode	EXIT		724162		True				
ANR	724183	Symbol	c_state		724162						
ANR	724184	Symbol	c_last_state		724162						
ANR	724185	Symbol	true		724162						
ANR	724186	Symbol	cmd		724162						
ANR	724187	Symbol	c_pending_cmd		724162						
ANR	724188	Function	Claim :: finishPendingCmd	1785:0:42798:43188							
ANR	724189	FunctionDef	Claim :: finishPendingCmd ()		724188	0					
ANR	724190	CompoundStatement		1787:0:42834:43188	724188	0					
ANR	724191	SwitchStatement	switch ( c_pending_cmd )		724188	0					
ANR	724192	Condition	c_pending_cmd	1788:9:42845:42857	724188	0	True				
ANR	724193	Identifier	c_pending_cmd		724188	0					
ANR	724194	CompoundStatement		2:25:26:26	724188	1					
ANR	724195	Statement	case	1789:1:42864:42867	724188	0	True				
ANR	724196	Statement	-	1789:6:42869:42869	724188	1	True				
ANR	724197	Label	1 :	1789:7:42870:42871	724188	2	True				
ANR	724198	ReturnStatement	return FALSE ;	1790:2:42875:42887	724188	3	True				
ANR	724199	Identifier	FALSE		724188	0					
ANR	724200	BreakStatement	break ;	1791:2:42891:42896	724188	4	True				
ANR	724201	Label	case CA_RELEASE_CLAIM :	1792:1:42899:42920	724188	5	True				
ANR	724202	Identifier	CA_RELEASE_CLAIM		724188	0					
ANR	724203	ReturnStatement	return finishReleaseCmd ( ) ;	1793:2:42924:42949	724188	6	True				
ANR	724204	CallExpression	finishReleaseCmd ( )		724188	0					
ANR	724205	Callee	finishReleaseCmd		724188	0					
ANR	724206	Identifier	finishReleaseCmd		724188	0					
ANR	724207	ArgumentList			724188	1					
ANR	724208	BreakStatement	break ;	1794:2:42953:42958	724188	7	True				
ANR	724209	Label	case CA_DEACTIVATE_CLAIM :	1795:1:42961:42985	724188	8	True				
ANR	724210	Identifier	CA_DEACTIVATE_CLAIM		724188	0					
ANR	724211	ReturnStatement	return finishDeactivateCmd ( ) ;	1796:2:42989:43017	724188	9	True				
ANR	724212	CallExpression	finishDeactivateCmd ( )		724188	0					
ANR	724213	Callee	finishDeactivateCmd		724188	0					
ANR	724214	Identifier	finishDeactivateCmd		724188	0					
ANR	724215	ArgumentList			724188	1					
ANR	724216	BreakStatement	break ;	1797:2:43021:43026	724188	10	True				
ANR	724217	Label	default :	1798:1:43029:43036	724188	11	True				
ANR	724218	Identifier	default		724188	0					
ANR	724219	ExpressionStatement	"EXCEPT ( ""Claim::finishPendingCmd called with unknown cmd: %s (%d)"" , getCommandString ( c_pending_cmd ) , c_pending_cmd )"	1799:2:43040:43160	724188	12	True				
ANR	724220	CallExpression	"EXCEPT ( ""Claim::finishPendingCmd called with unknown cmd: %s (%d)"" , getCommandString ( c_pending_cmd ) , c_pending_cmd )"		724188	0					
ANR	724221	Callee	EXCEPT		724188	0					
ANR	724222	Identifier	EXCEPT		724188	0					
ANR	724223	ArgumentList	"""Claim::finishPendingCmd called with unknown cmd: %s (%d)"""		724188	1					
ANR	724224	Argument	"""Claim::finishPendingCmd called with unknown cmd: %s (%d)"""		724188	0					
ANR	724225	PrimaryExpression	"""Claim::finishPendingCmd called with unknown cmd: %s (%d)"""		724188	0					
ANR	724226	Argument	getCommandString ( c_pending_cmd )		724188	1					
ANR	724227	CallExpression	getCommandString ( c_pending_cmd )		724188	0					
ANR	724228	Callee	getCommandString		724188	0					
ANR	724229	Identifier	getCommandString		724188	0					
ANR	724230	ArgumentList	c_pending_cmd		724188	1					
ANR	724231	Argument	c_pending_cmd		724188	0					
ANR	724232	Identifier	c_pending_cmd		724188	0					
ANR	724233	Argument	c_pending_cmd		724188	2					
ANR	724234	Identifier	c_pending_cmd		724188	0					
ANR	724235	BreakStatement	break ;	1801:2:43164:43169	724188	13	True				
ANR	724236	ReturnStatement	return TRUE ;	1803:1:43175:43186	724188	1	True				
ANR	724237	Identifier	TRUE		724188	0					
ANR	724238	ReturnType	int		724188	1					
ANR	724239	Identifier	Claim :: finishPendingCmd		724188	2					
ANR	724240	ParameterList			724188	3					
ANR	724241	CFGEntryNode	ENTRY		724188		True				
ANR	724242	CFGExitNode	EXIT		724188		True				
ANR	724243	Symbol	getCommandString		724188						
ANR	724244	Symbol	finishReleaseCmd		724188						
ANR	724245	Symbol	finishDeactivateCmd		724188						
ANR	724246	Symbol	TRUE		724188						
ANR	724247	Symbol	FALSE		724188						
ANR	724248	Symbol	c_pending_cmd		724188						
ANR	724249	Function	Claim :: finishReleaseCmd	1807:0:43192:44105							
ANR	724250	FunctionDef	Claim :: finishReleaseCmd ()		724249	0					
ANR	724251	CompoundStatement		1809:0:43228:44105	724249	0					
ANR	724252	IdentifierDeclStatement	ClassAd reply ;	1810:1:43231:43244	724249	0	True				
ANR	724253	IdentifierDecl	reply		724249	0					
ANR	724254	IdentifierDeclType	ClassAd		724249	0					
ANR	724255	Identifier	reply		724249	1					
ANR	724256	IdentifierDeclStatement	MyString line ;	1811:1:43247:43260	724249	1	True				
ANR	724257	IdentifierDecl	line		724249	0					
ANR	724258	IdentifierDeclType	MyString		724249	0					
ANR	724259	Identifier	line		724249	1					
ANR	724260	IdentifierDeclStatement	int rval ;	1812:1:43263:43271	724249	2	True				
ANR	724261	IdentifierDecl	rval		724249	0					
ANR	724262	IdentifierDeclType	int		724249	0					
ANR	724263	Identifier	rval		724249	1					
ANR	724264	ExpressionStatement	line = ATTR_RESULT	1814:1:43275:43293	724249	3	True				
ANR	724265	AssignmentExpression	line = ATTR_RESULT		724249	0		=			
ANR	724266	Identifier	line		724249	0					
ANR	724267	Identifier	ATTR_RESULT		724249	1					
ANR	724268	ExpressionStatement	"line += "" = \\"""""	1815:1:43296:43311	724249	4	True				
ANR	724269	AssignmentExpression	"line += "" = \\"""""		724249	0		+=			
ANR	724270	Identifier	line		724249	0					
ANR	724271	PrimaryExpression	""" = \\"""""		724249	1					
ANR	724272	ExpressionStatement	line += getCAResultString ( CA_SUCCESS )	1816:1:43314:43353	724249	5	True				
ANR	724273	AssignmentExpression	line += getCAResultString ( CA_SUCCESS )		724249	0		+=			
ANR	724274	Identifier	line		724249	0					
ANR	724275	CallExpression	getCAResultString ( CA_SUCCESS )		724249	1					
ANR	724276	Callee	getCAResultString		724249	0					
ANR	724277	Identifier	getCAResultString		724249	0					
ANR	724278	ArgumentList	CA_SUCCESS		724249	1					
ANR	724279	Argument	CA_SUCCESS		724249	0					
ANR	724280	Identifier	CA_SUCCESS		724249	0					
ANR	724281	ExpressionStatement	"line += '""'"	1817:1:43356:43367	724249	6	True				
ANR	724282	AssignmentExpression	"line += '""'"		724249	0		+=			
ANR	724283	Identifier	line		724249	0					
ANR	724284	PrimaryExpression	"'""'"		724249	1					
ANR	724285	ExpressionStatement	reply . Insert ( line . Value ( ) )	1818:1:43370:43398	724249	7	True				
ANR	724286	CallExpression	reply . Insert ( line . Value ( ) )		724249	0					
ANR	724287	Callee	reply . Insert		724249	0					
ANR	724288	MemberAccess	reply . Insert		724249	0					
ANR	724289	Identifier	reply		724249	0					
ANR	724290	Identifier	Insert		724249	1					
ANR	724291	ArgumentList	line . Value ( )		724249	1					
ANR	724292	Argument	line . Value ( )		724249	0					
ANR	724293	CallExpression	line . Value ( )		724249	0					
ANR	724294	Callee	line . Value		724249	0					
ANR	724295	MemberAccess	line . Value		724249	0					
ANR	724296	Identifier	line		724249	0					
ANR	724297	Identifier	Value		724249	1					
ANR	724298	ArgumentList			724249	1					
ANR	724299	ExpressionStatement	line = ATTR_LAST_CLAIM_STATE	1820:1:43402:43430	724249	8	True				
ANR	724300	AssignmentExpression	line = ATTR_LAST_CLAIM_STATE		724249	0		=			
ANR	724301	Identifier	line		724249	0					
ANR	724302	Identifier	ATTR_LAST_CLAIM_STATE		724249	1					
ANR	724303	ExpressionStatement	"line += ""=\\"""""	1821:1:43433:43446	724249	9	True				
ANR	724304	AssignmentExpression	"line += ""=\\"""""		724249	0		+=			
ANR	724305	Identifier	line		724249	0					
ANR	724306	PrimaryExpression	"""=\\"""""		724249	1					
ANR	724307	ExpressionStatement	line += getClaimStateString ( c_last_state )	1822:1:43449:43492	724249	10	True				
ANR	724308	AssignmentExpression	line += getClaimStateString ( c_last_state )		724249	0		+=			
ANR	724309	Identifier	line		724249	0					
ANR	724310	CallExpression	getClaimStateString ( c_last_state )		724249	1					
ANR	724311	Callee	getClaimStateString		724249	0					
ANR	724312	Identifier	getClaimStateString		724249	0					
ANR	724313	ArgumentList	c_last_state		724249	1					
ANR	724314	Argument	c_last_state		724249	0					
ANR	724315	Identifier	c_last_state		724249	0					
ANR	724316	ExpressionStatement	"line += '""'"	1823:1:43495:43506	724249	11	True				
ANR	724317	AssignmentExpression	"line += '""'"		724249	0		+=			
ANR	724318	Identifier	line		724249	0					
ANR	724319	PrimaryExpression	"'""'"		724249	1					
ANR	724320	ExpressionStatement	reply . Insert ( line . Value ( ) )	1824:1:43509:43537	724249	12	True				
ANR	724321	CallExpression	reply . Insert ( line . Value ( ) )		724249	0					
ANR	724322	Callee	reply . Insert		724249	0					
ANR	724323	MemberAccess	reply . Insert		724249	0					
ANR	724324	Identifier	reply		724249	0					
ANR	724325	Identifier	Insert		724249	1					
ANR	724326	ArgumentList	line . Value ( )		724249	1					
ANR	724327	Argument	line . Value ( )		724249	0					
ANR	724328	CallExpression	line . Value ( )		724249	0					
ANR	724329	Callee	line . Value		724249	0					
ANR	724330	MemberAccess	line . Value		724249	0					
ANR	724331	Identifier	line		724249	0					
ANR	724332	Identifier	Value		724249	1					
ANR	724333	ArgumentList			724249	1					
ANR	724334	ExpressionStatement	"rval = sendCAReply ( c_request_stream , ""CA_RELEASE_CLAIM"" , & reply )"	1829:1:43620:43686	724249	13	True				
ANR	724335	AssignmentExpression	"rval = sendCAReply ( c_request_stream , ""CA_RELEASE_CLAIM"" , & reply )"		724249	0		=			
ANR	724336	Identifier	rval		724249	0					
ANR	724337	CallExpression	"sendCAReply ( c_request_stream , ""CA_RELEASE_CLAIM"" , & reply )"		724249	1					
ANR	724338	Callee	sendCAReply		724249	0					
ANR	724339	Identifier	sendCAReply		724249	0					
ANR	724340	ArgumentList	c_request_stream		724249	1					
ANR	724341	Argument	c_request_stream		724249	0					
ANR	724342	Identifier	c_request_stream		724249	0					
ANR	724343	Argument	"""CA_RELEASE_CLAIM"""		724249	1					
ANR	724344	PrimaryExpression	"""CA_RELEASE_CLAIM"""		724249	0					
ANR	724345	Argument	& reply		724249	2					
ANR	724346	UnaryOperationExpression	& reply		724249	0					
ANR	724347	UnaryOperator	&		724249	0					
ANR	724348	Identifier	reply		724249	1					
ANR	724349	ExpressionStatement	setRequestStream ( NULL )	1834:1:43851:43873	724249	14	True				
ANR	724350	CallExpression	setRequestStream ( NULL )		724249	0					
ANR	724351	Callee	setRequestStream		724249	0					
ANR	724352	Identifier	setRequestStream		724249	0					
ANR	724353	ArgumentList	NULL		724249	1					
ANR	724354	Argument	NULL		724249	0					
ANR	724355	Identifier	NULL		724249	0					
ANR	724356	ExpressionStatement	c_pending_cmd = - 1	1835:1:43876:43894	724249	15	True				
ANR	724357	AssignmentExpression	c_pending_cmd = - 1		724249	0		=			
ANR	724358	Identifier	c_pending_cmd		724249	0					
ANR	724359	UnaryOperationExpression	- 1		724249	1					
ANR	724360	UnaryOperator	-		724249	0					
ANR	724361	PrimaryExpression	1		724249	1					
ANR	724362	ExpressionStatement	"dprintf ( D_ALWAYS , ""Finished releasing claim %s (owner: '%s')\\n"" , id ( ) , client ( ) -> owner ( ) )"	1837:1:43899:43995	724249	16	True				
ANR	724363	CallExpression	"dprintf ( D_ALWAYS , ""Finished releasing claim %s (owner: '%s')\\n"" , id ( ) , client ( ) -> owner ( ) )"		724249	0					
ANR	724364	Callee	dprintf		724249	0					
ANR	724365	Identifier	dprintf		724249	0					
ANR	724366	ArgumentList	D_ALWAYS		724249	1					
ANR	724367	Argument	D_ALWAYS		724249	0					
ANR	724368	Identifier	D_ALWAYS		724249	0					
ANR	724369	Argument	"""Finished releasing claim %s (owner: '%s')\\n"""		724249	1					
ANR	724370	PrimaryExpression	"""Finished releasing claim %s (owner: '%s')\\n"""		724249	0					
ANR	724371	Argument	id ( )		724249	2					
ANR	724372	CallExpression	id ( )		724249	0					
ANR	724373	Callee	id		724249	0					
ANR	724374	Identifier	id		724249	0					
ANR	724375	ArgumentList			724249	1					
ANR	724376	Argument	client ( ) -> owner ( )		724249	3					
ANR	724377	CallExpression	client ( ) -> owner ( )		724249	0					
ANR	724378	Callee	client ( ) -> owner		724249	0					
ANR	724379	PtrMemberAccess	client ( ) -> owner		724249	0					
ANR	724380	CallExpression	client ( )		724249	0					
ANR	724381	Callee	client		724249	0					
ANR	724382	Identifier	client		724249	0					
ANR	724383	ArgumentList			724249	1					
ANR	724384	Identifier	owner		724249	1					
ANR	724385	ArgumentList			724249	1					
ANR	724386	ExpressionStatement	c_rip -> removeClaim ( this )	1840:1:44001:44027	724249	17	True				
ANR	724387	CallExpression	c_rip -> removeClaim ( this )		724249	0					
ANR	724388	Callee	c_rip -> removeClaim		724249	0					
ANR	724389	PtrMemberAccess	c_rip -> removeClaim		724249	0					
ANR	724390	Identifier	c_rip		724249	0					
ANR	724391	Identifier	removeClaim		724249	1					
ANR	724392	ArgumentList	this		724249	1					
ANR	724393	Argument	this		724249	0					
ANR	724394	Identifier	this		724249	0					
ANR	724395	ReturnStatement	return rval ;	1843:1:44092:44103	724249	18	True				
ANR	724396	Identifier	rval		724249	0					
ANR	724397	ReturnType	int		724249	1					
ANR	724398	Identifier	Claim :: finishReleaseCmd		724249	2					
ANR	724399	ParameterList			724249	3					
ANR	724400	CFGEntryNode	ENTRY		724249		True				
ANR	724401	CFGExitNode	EXIT		724249		True				
ANR	724402	Symbol	c_rip		724249						
ANR	724403	Symbol	NULL		724249						
ANR	724404	Symbol	line . Value		724249						
ANR	724405	Symbol	line		724249						
ANR	724406	Symbol	D_ALWAYS		724249						
ANR	724407	Symbol	this		724249						
ANR	724408	Symbol	* client		724249						
ANR	724409	Symbol	CA_SUCCESS		724249						
ANR	724410	Symbol	& reply		724249						
ANR	724411	Symbol	c_pending_cmd		724249						
ANR	724412	Symbol	getCAResultString		724249						
ANR	724413	Symbol	getClaimStateString		724249						
ANR	724414	Symbol	c_request_stream		724249						
ANR	724415	Symbol	ATTR_LAST_CLAIM_STATE		724249						
ANR	724416	Symbol	sendCAReply		724249						
ANR	724417	Symbol	client ( ) -> owner		724249						
ANR	724418	Symbol	c_last_state		724249						
ANR	724419	Symbol	client		724249						
ANR	724420	Symbol	rval		724249						
ANR	724421	Symbol	ATTR_RESULT		724249						
ANR	724422	Symbol	id		724249						
ANR	724423	Symbol	reply		724249						
ANR	724424	Function	Claim :: finishDeactivateCmd	1847:0:44109:45081							
ANR	724425	FunctionDef	Claim :: finishDeactivateCmd ()		724424	0					
ANR	724426	CompoundStatement		1849:0:44148:45081	724424	0					
ANR	724427	IdentifierDeclStatement	ClassAd reply ;	1850:1:44151:44164	724424	0	True				
ANR	724428	IdentifierDecl	reply		724424	0					
ANR	724429	IdentifierDeclType	ClassAd		724424	0					
ANR	724430	Identifier	reply		724424	1					
ANR	724431	IdentifierDeclStatement	MyString line ;	1851:1:44167:44180	724424	1	True				
ANR	724432	IdentifierDecl	line		724424	0					
ANR	724433	IdentifierDeclType	MyString		724424	0					
ANR	724434	Identifier	line		724424	1					
ANR	724435	IdentifierDeclStatement	int rval ;	1852:1:44183:44191	724424	2	True				
ANR	724436	IdentifierDecl	rval		724424	0					
ANR	724437	IdentifierDeclType	int		724424	0					
ANR	724438	Identifier	rval		724424	1					
ANR	724439	ExpressionStatement	line = ATTR_RESULT	1854:1:44195:44213	724424	3	True				
ANR	724440	AssignmentExpression	line = ATTR_RESULT		724424	0		=			
ANR	724441	Identifier	line		724424	0					
ANR	724442	Identifier	ATTR_RESULT		724424	1					
ANR	724443	ExpressionStatement	"line += "" = \\"""""	1855:1:44216:44231	724424	4	True				
ANR	724444	AssignmentExpression	"line += "" = \\"""""		724424	0		+=			
ANR	724445	Identifier	line		724424	0					
ANR	724446	PrimaryExpression	""" = \\"""""		724424	1					
ANR	724447	ExpressionStatement	line += getCAResultString ( CA_SUCCESS )	1856:1:44234:44273	724424	5	True				
ANR	724448	AssignmentExpression	line += getCAResultString ( CA_SUCCESS )		724424	0		+=			
ANR	724449	Identifier	line		724424	0					
ANR	724450	CallExpression	getCAResultString ( CA_SUCCESS )		724424	1					
ANR	724451	Callee	getCAResultString		724424	0					
ANR	724452	Identifier	getCAResultString		724424	0					
ANR	724453	ArgumentList	CA_SUCCESS		724424	1					
ANR	724454	Argument	CA_SUCCESS		724424	0					
ANR	724455	Identifier	CA_SUCCESS		724424	0					
ANR	724456	ExpressionStatement	"line += '""'"	1857:1:44276:44287	724424	6	True				
ANR	724457	AssignmentExpression	"line += '""'"		724424	0		+=			
ANR	724458	Identifier	line		724424	0					
ANR	724459	PrimaryExpression	"'""'"		724424	1					
ANR	724460	ExpressionStatement	reply . Insert ( line . Value ( ) )	1858:1:44290:44318	724424	7	True				
ANR	724461	CallExpression	reply . Insert ( line . Value ( ) )		724424	0					
ANR	724462	Callee	reply . Insert		724424	0					
ANR	724463	MemberAccess	reply . Insert		724424	0					
ANR	724464	Identifier	reply		724424	0					
ANR	724465	Identifier	Insert		724424	1					
ANR	724466	ArgumentList	line . Value ( )		724424	1					
ANR	724467	Argument	line . Value ( )		724424	0					
ANR	724468	CallExpression	line . Value ( )		724424	0					
ANR	724469	Callee	line . Value		724424	0					
ANR	724470	MemberAccess	line . Value		724424	0					
ANR	724471	Identifier	line		724424	0					
ANR	724472	Identifier	Value		724424	1					
ANR	724473	ArgumentList			724424	1					
ANR	724474	ExpressionStatement	line = ATTR_LAST_CLAIM_STATE	1860:1:44322:44350	724424	8	True				
ANR	724475	AssignmentExpression	line = ATTR_LAST_CLAIM_STATE		724424	0		=			
ANR	724476	Identifier	line		724424	0					
ANR	724477	Identifier	ATTR_LAST_CLAIM_STATE		724424	1					
ANR	724478	ExpressionStatement	"line += ""=\\"""""	1861:1:44353:44366	724424	9	True				
ANR	724479	AssignmentExpression	"line += ""=\\"""""		724424	0		+=			
ANR	724480	Identifier	line		724424	0					
ANR	724481	PrimaryExpression	"""=\\"""""		724424	1					
ANR	724482	ExpressionStatement	line += getClaimStateString ( c_last_state )	1862:1:44369:44412	724424	10	True				
ANR	724483	AssignmentExpression	line += getClaimStateString ( c_last_state )		724424	0		+=			
ANR	724484	Identifier	line		724424	0					
ANR	724485	CallExpression	getClaimStateString ( c_last_state )		724424	1					
ANR	724486	Callee	getClaimStateString		724424	0					
ANR	724487	Identifier	getClaimStateString		724424	0					
ANR	724488	ArgumentList	c_last_state		724424	1					
ANR	724489	Argument	c_last_state		724424	0					
ANR	724490	Identifier	c_last_state		724424	0					
ANR	724491	ExpressionStatement	"line += '""'"	1863:1:44415:44426	724424	11	True				
ANR	724492	AssignmentExpression	"line += '""'"		724424	0		+=			
ANR	724493	Identifier	line		724424	0					
ANR	724494	PrimaryExpression	"'""'"		724424	1					
ANR	724495	ExpressionStatement	reply . Insert ( line . Value ( ) )	1864:1:44429:44457	724424	12	True				
ANR	724496	CallExpression	reply . Insert ( line . Value ( ) )		724424	0					
ANR	724497	Callee	reply . Insert		724424	0					
ANR	724498	MemberAccess	reply . Insert		724424	0					
ANR	724499	Identifier	reply		724424	0					
ANR	724500	Identifier	Insert		724424	1					
ANR	724501	ArgumentList	line . Value ( )		724424	1					
ANR	724502	Argument	line . Value ( )		724424	0					
ANR	724503	CallExpression	line . Value ( )		724424	0					
ANR	724504	Callee	line . Value		724424	0					
ANR	724505	MemberAccess	line . Value		724424	0					
ANR	724506	Identifier	line		724424	0					
ANR	724507	Identifier	Value		724424	1					
ANR	724508	ArgumentList			724424	1					
ANR	724509	ExpressionStatement	"rval = sendCAReply ( c_request_stream , ""CA_DEACTIVATE_CLAIM"" , & reply )"	1869:1:44540:44609	724424	13	True				
ANR	724510	AssignmentExpression	"rval = sendCAReply ( c_request_stream , ""CA_DEACTIVATE_CLAIM"" , & reply )"		724424	0		=			
ANR	724511	Identifier	rval		724424	0					
ANR	724512	CallExpression	"sendCAReply ( c_request_stream , ""CA_DEACTIVATE_CLAIM"" , & reply )"		724424	1					
ANR	724513	Callee	sendCAReply		724424	0					
ANR	724514	Identifier	sendCAReply		724424	0					
ANR	724515	ArgumentList	c_request_stream		724424	1					
ANR	724516	Argument	c_request_stream		724424	0					
ANR	724517	Identifier	c_request_stream		724424	0					
ANR	724518	Argument	"""CA_DEACTIVATE_CLAIM"""		724424	1					
ANR	724519	PrimaryExpression	"""CA_DEACTIVATE_CLAIM"""		724424	0					
ANR	724520	Argument	& reply		724424	2					
ANR	724521	UnaryOperationExpression	& reply		724424	0					
ANR	724522	UnaryOperator	&		724424	0					
ANR	724523	Identifier	reply		724424	1					
ANR	724524	ExpressionStatement	setRequestStream ( NULL )	1874:1:44774:44796	724424	14	True				
ANR	724525	CallExpression	setRequestStream ( NULL )		724424	0					
ANR	724526	Callee	setRequestStream		724424	0					
ANR	724527	Identifier	setRequestStream		724424	0					
ANR	724528	ArgumentList	NULL		724424	1					
ANR	724529	Argument	NULL		724424	0					
ANR	724530	Identifier	NULL		724424	0					
ANR	724531	ExpressionStatement	c_pending_cmd = - 1	1875:1:44799:44817	724424	15	True				
ANR	724532	AssignmentExpression	c_pending_cmd = - 1		724424	0		=			
ANR	724533	Identifier	c_pending_cmd		724424	0					
ANR	724534	UnaryOperationExpression	- 1		724424	1					
ANR	724535	UnaryOperator	-		724424	0					
ANR	724536	PrimaryExpression	1		724424	1					
ANR	724537	ExpressionStatement	"dprintf ( D_ALWAYS , ""Finished deactivating claim %s (owner: '%s')\\n"" , id ( ) , client ( ) -> owner ( ) )"	1877:1:44821:44920	724424	16	True				
ANR	724538	CallExpression	"dprintf ( D_ALWAYS , ""Finished deactivating claim %s (owner: '%s')\\n"" , id ( ) , client ( ) -> owner ( ) )"		724424	0					
ANR	724539	Callee	dprintf		724424	0					
ANR	724540	Identifier	dprintf		724424	0					
ANR	724541	ArgumentList	D_ALWAYS		724424	1					
ANR	724542	Argument	D_ALWAYS		724424	0					
ANR	724543	Identifier	D_ALWAYS		724424	0					
ANR	724544	Argument	"""Finished deactivating claim %s (owner: '%s')\\n"""		724424	1					
ANR	724545	PrimaryExpression	"""Finished deactivating claim %s (owner: '%s')\\n"""		724424	0					
ANR	724546	Argument	id ( )		724424	2					
ANR	724547	CallExpression	id ( )		724424	0					
ANR	724548	Callee	id		724424	0					
ANR	724549	Identifier	id		724424	0					
ANR	724550	ArgumentList			724424	1					
ANR	724551	Argument	client ( ) -> owner ( )		724424	3					
ANR	724552	CallExpression	client ( ) -> owner ( )		724424	0					
ANR	724553	Callee	client ( ) -> owner		724424	0					
ANR	724554	PtrMemberAccess	client ( ) -> owner		724424	0					
ANR	724555	CallExpression	client ( )		724424	0					
ANR	724556	Callee	client		724424	0					
ANR	724557	Identifier	client		724424	0					
ANR	724558	ArgumentList			724424	1					
ANR	724559	Identifier	owner		724424	1					
ANR	724560	ArgumentList			724424	1					
ANR	724561	ExpressionStatement	resetClaim ( )	1882:1:45052:45064	724424	17	True				
ANR	724562	CallExpression	resetClaim ( )		724424	0					
ANR	724563	Callee	resetClaim		724424	0					
ANR	724564	Identifier	resetClaim		724424	0					
ANR	724565	ArgumentList			724424	1					
ANR	724566	ReturnStatement	return rval ;	1884:1:45068:45079	724424	18	True				
ANR	724567	Identifier	rval		724424	0					
ANR	724568	ReturnType	int		724424	1					
ANR	724569	Identifier	Claim :: finishDeactivateCmd		724424	2					
ANR	724570	ParameterList			724424	3					
ANR	724571	CFGEntryNode	ENTRY		724424		True				
ANR	724572	CFGExitNode	EXIT		724424		True				
ANR	724573	Symbol	NULL		724424						
ANR	724574	Symbol	line . Value		724424						
ANR	724575	Symbol	line		724424						
ANR	724576	Symbol	D_ALWAYS		724424						
ANR	724577	Symbol	* client		724424						
ANR	724578	Symbol	CA_SUCCESS		724424						
ANR	724579	Symbol	& reply		724424						
ANR	724580	Symbol	c_pending_cmd		724424						
ANR	724581	Symbol	getCAResultString		724424						
ANR	724582	Symbol	getClaimStateString		724424						
ANR	724583	Symbol	c_request_stream		724424						
ANR	724584	Symbol	ATTR_LAST_CLAIM_STATE		724424						
ANR	724585	Symbol	sendCAReply		724424						
ANR	724586	Symbol	client ( ) -> owner		724424						
ANR	724587	Symbol	c_last_state		724424						
ANR	724588	Symbol	client		724424						
ANR	724589	Symbol	rval		724424						
ANR	724590	Symbol	ATTR_RESULT		724424						
ANR	724591	Symbol	id		724424						
ANR	724592	Symbol	reply		724424						
ANR	724593	Function	Claim :: resetClaim	1888:0:45085:45668							
ANR	724594	FunctionDef	Claim :: resetClaim ()		724593	0					
ANR	724595	CompoundStatement		1890:0:45116:45668	724593	0					
ANR	724596	IfStatement	if ( c_starter )		724593	0					
ANR	724597	Condition	c_starter	1891:5:45123:45131	724593	0	True				
ANR	724598	Identifier	c_starter		724593	0					
ANR	724599	CompoundStatement		2:17:18:18	724593	1					
ANR	724600	Statement	delete	1892:2:45139:45144	724593	0	True				
ANR	724601	ExpressionStatement	c_starter	1892:8:45145:45158	724593	1	True				
ANR	724602	Identifier	c_starter		724593	0					
ANR	724603	ExpressionStatement	c_starter = NULL	1893:2:45162:45178	724593	2	True				
ANR	724604	AssignmentExpression	c_starter = NULL		724593	0		=			
ANR	724605	Identifier	c_starter		724593	0					
ANR	724606	Identifier	NULL		724593	1					
ANR	724607	IfStatement	if ( c_ad && c_type == CLAIM_COD )		724593	1					
ANR	724608	Condition	c_ad && c_type == CLAIM_COD	1895:5:45188:45214	724593	0	True				
ANR	724609	AndExpression	c_ad && c_type == CLAIM_COD		724593	0		&&			
ANR	724610	Identifier	c_ad		724593	0					
ANR	724611	EqualityExpression	c_type == CLAIM_COD		724593	1		==			
ANR	724612	Identifier	c_type		724593	0					
ANR	724613	Identifier	CLAIM_COD		724593	1					
ANR	724614	CompoundStatement		6:35:101:101	724593	1					
ANR	724615	Statement	delete	1896:2:45222:45227	724593	0	True				
ANR	724616	ExpressionStatement	c_ad	1896:8:45228:45236	724593	1	True				
ANR	724617	Identifier	c_ad		724593	0					
ANR	724618	ExpressionStatement	c_ad = NULL	1897:2:45240:45251	724593	2	True				
ANR	724619	AssignmentExpression	c_ad = NULL		724593	0		=			
ANR	724620	Identifier	c_ad		724593	0					
ANR	724621	Identifier	NULL		724593	1					
ANR	724622	ExpressionStatement	c_universe = - 1	1899:1:45257:45272	724593	2	True				
ANR	724623	AssignmentExpression	c_universe = - 1		724593	0		=			
ANR	724624	Identifier	c_universe		724593	0					
ANR	724625	UnaryOperationExpression	- 1		724593	1					
ANR	724626	UnaryOperator	-		724593	0					
ANR	724627	PrimaryExpression	1		724593	1					
ANR	724628	ExpressionStatement	c_cluster = - 1	1900:1:45275:45289	724593	3	True				
ANR	724629	AssignmentExpression	c_cluster = - 1		724593	0		=			
ANR	724630	Identifier	c_cluster		724593	0					
ANR	724631	UnaryOperationExpression	- 1		724593	1					
ANR	724632	UnaryOperator	-		724593	0					
ANR	724633	PrimaryExpression	1		724593	1					
ANR	724634	ExpressionStatement	c_proc = - 1	1901:1:45292:45303	724593	4	True				
ANR	724635	AssignmentExpression	c_proc = - 1		724593	0		=			
ANR	724636	Identifier	c_proc		724593	0					
ANR	724637	UnaryOperationExpression	- 1		724593	1					
ANR	724638	UnaryOperator	-		724593	0					
ANR	724639	PrimaryExpression	1		724593	1					
ANR	724640	ExpressionStatement	c_job_start = - 1	1902:1:45306:45322	724593	5	True				
ANR	724641	AssignmentExpression	c_job_start = - 1		724593	0		=			
ANR	724642	Identifier	c_job_start		724593	0					
ANR	724643	UnaryOperationExpression	- 1		724593	1					
ANR	724644	UnaryOperator	-		724593	0					
ANR	724645	PrimaryExpression	1		724593	1					
ANR	724646	ExpressionStatement	c_last_pckpt = - 1	1903:1:45325:45342	724593	6	True				
ANR	724647	AssignmentExpression	c_last_pckpt = - 1		724593	0		=			
ANR	724648	Identifier	c_last_pckpt		724593	0					
ANR	724649	UnaryOperationExpression	- 1		724593	1					
ANR	724650	UnaryOperator	-		724593	0					
ANR	724651	PrimaryExpression	1		724593	1					
ANR	724652	IfStatement	if ( c_global_job_id )		724593	7					
ANR	724653	Condition	c_global_job_id	1904:5:45349:45363	724593	0	True				
ANR	724654	Identifier	c_global_job_id		724593	0					
ANR	724655	CompoundStatement		15:23:250:250	724593	1					
ANR	724656	ExpressionStatement	free ( c_global_job_id )	1905:2:45371:45394	724593	0	True				
ANR	724657	CallExpression	free ( c_global_job_id )		724593	0					
ANR	724658	Callee	free		724593	0					
ANR	724659	Identifier	free		724593	0					
ANR	724660	ArgumentList	c_global_job_id		724593	1					
ANR	724661	Argument	c_global_job_id		724593	0					
ANR	724662	Identifier	c_global_job_id		724593	0					
ANR	724663	ExpressionStatement	c_global_job_id = NULL	1906:2:45398:45420	724593	1	True				
ANR	724664	AssignmentExpression	c_global_job_id = NULL		724593	0		=			
ANR	724665	Identifier	c_global_job_id		724593	0					
ANR	724666	Identifier	NULL		724593	1					
ANR	724667	IfStatement	if ( c_cod_keyword )		724593	8					
ANR	724668	Condition	c_cod_keyword	1908:5:45430:45442	724593	0	True				
ANR	724669	Identifier	c_cod_keyword		724593	0					
ANR	724670	CompoundStatement		19:21:329:329	724593	1					
ANR	724671	ExpressionStatement	free ( c_cod_keyword )	1909:2:45450:45471	724593	0	True				
ANR	724672	CallExpression	free ( c_cod_keyword )		724593	0					
ANR	724673	Callee	free		724593	0					
ANR	724674	Identifier	free		724593	0					
ANR	724675	ArgumentList	c_cod_keyword		724593	1					
ANR	724676	Argument	c_cod_keyword		724593	0					
ANR	724677	Identifier	c_cod_keyword		724593	0					
ANR	724678	ExpressionStatement	c_cod_keyword = NULL	1910:2:45475:45495	724593	1	True				
ANR	724679	AssignmentExpression	c_cod_keyword = NULL		724593	0		=			
ANR	724680	Identifier	c_cod_keyword		724593	0					
ANR	724681	Identifier	NULL		724593	1					
ANR	724682	ExpressionStatement	c_has_job_ad = 0	1912:1:45501:45517	724593	9	True				
ANR	724683	AssignmentExpression	c_has_job_ad = 0		724593	0		=			
ANR	724684	Identifier	c_has_job_ad		724593	0					
ANR	724685	PrimaryExpression	0		724593	1					
ANR	724686	ExpressionStatement	c_job_total_run_time = 0	1913:1:45520:45544	724593	10	True				
ANR	724687	AssignmentExpression	c_job_total_run_time = 0		724593	0		=			
ANR	724688	Identifier	c_job_total_run_time		724593	0					
ANR	724689	PrimaryExpression	0		724593	1					
ANR	724690	ExpressionStatement	c_job_total_suspend_time = 0	1914:1:45547:45575	724593	11	True				
ANR	724691	AssignmentExpression	c_job_total_suspend_time = 0		724593	0		=			
ANR	724692	Identifier	c_job_total_suspend_time		724593	0					
ANR	724693	PrimaryExpression	0		724593	1					
ANR	724694	ExpressionStatement	c_may_unretire = true	1915:1:45578:45599	724593	12	True				
ANR	724695	AssignmentExpression	c_may_unretire = true		724593	0		=			
ANR	724696	Identifier	c_may_unretire		724593	0					
ANR	724697	Identifier	true		724593	1					
ANR	724698	ExpressionStatement	c_preempt_was_true = false	1916:1:45602:45628	724593	13	True				
ANR	724699	AssignmentExpression	c_preempt_was_true = false		724593	0		=			
ANR	724700	Identifier	c_preempt_was_true		724593	0					
ANR	724701	Identifier	false		724593	1					
ANR	724702	ExpressionStatement	c_badput_caused_by_draining = false	1917:1:45631:45666	724593	14	True				
ANR	724703	AssignmentExpression	c_badput_caused_by_draining = false		724593	0		=			
ANR	724704	Identifier	c_badput_caused_by_draining		724593	0					
ANR	724705	Identifier	false		724593	1					
ANR	724706	ReturnType	void		724593	1					
ANR	724707	Identifier	Claim :: resetClaim		724593	2					
ANR	724708	ParameterList			724593	3					
ANR	724709	CFGEntryNode	ENTRY		724593		True				
ANR	724710	CFGExitNode	EXIT		724593		True				
ANR	724711	Symbol	c_starter		724593						
ANR	724712	Symbol	c_job_total_suspend_time		724593						
ANR	724713	Symbol	NULL		724593						
ANR	724714	Symbol	c_job_total_run_time		724593						
ANR	724715	Symbol	c_last_pckpt		724593						
ANR	724716	Symbol	CLAIM_COD		724593						
ANR	724717	Symbol	c_cod_keyword		724593						
ANR	724718	Symbol	false		724593						
ANR	724719	Symbol	c_proc		724593						
ANR	724720	Symbol	c_job_start		724593						
ANR	724721	Symbol	c_ad		724593						
ANR	724722	Symbol	c_preempt_was_true		724593						
ANR	724723	Symbol	c_type		724593						
ANR	724724	Symbol	c_badput_caused_by_draining		724593						
ANR	724725	Symbol	true		724593						
ANR	724726	Symbol	c_may_unretire		724593						
ANR	724727	Symbol	c_global_job_id		724593						
ANR	724728	Symbol	c_has_job_ad		724593						
ANR	724729	Symbol	c_universe		724593						
ANR	724730	Symbol	c_cluster		724593						
ANR	724731	Function	Claim :: changeState	1921:0:45672:46626							
ANR	724732	FunctionDef	Claim :: changeState (ClaimState s)		724731	0					
ANR	724733	CompoundStatement		1923:0:45712:46626	724731	0					
ANR	724734	IfStatement	if ( c_state == s )		724731	0					
ANR	724735	Condition	c_state == s	1924:5:45719:45730	724731	0	True				
ANR	724736	EqualityExpression	c_state == s		724731	0		==			
ANR	724737	Identifier	c_state		724731	0					
ANR	724738	Identifier	s		724731	1					
ANR	724739	CompoundStatement		2:20:21:21	724731	1					
ANR	724740	ReturnStatement	return ;	1925:2:45738:45744	724731	0	True				
ANR	724741	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1928:1:45752:45775	724731	1	True				
ANR	724742	IdentifierDecl	now = time ( NULL )		724731	0					
ANR	724743	IdentifierDeclType	time_t		724731	0					
ANR	724744	Identifier	now		724731	1					
ANR	724745	AssignmentExpression	now = time ( NULL )		724731	2		=			
ANR	724746	Identifier	now		724731	0					
ANR	724747	CallExpression	time ( NULL )		724731	1					
ANR	724748	Callee	time		724731	0					
ANR	724749	Identifier	time		724731	0					
ANR	724750	ArgumentList	NULL		724731	1					
ANR	724751	Argument	NULL		724731	0					
ANR	724752	Identifier	NULL		724731	0					
ANR	724753	IfStatement	if ( c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED )		724731	2					
ANR	724754	Condition	c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED	1929:5:45782:45835	724731	0	True				
ANR	724755	OrExpression	c_state == CLAIM_RUNNING || c_state == CLAIM_SUSPENDED		724731	0		||			
ANR	724756	EqualityExpression	c_state == CLAIM_RUNNING		724731	0		==			
ANR	724757	Identifier	c_state		724731	0					
ANR	724758	Identifier	CLAIM_RUNNING		724731	1					
ANR	724759	EqualityExpression	c_state == CLAIM_SUSPENDED		724731	1		==			
ANR	724760	Identifier	c_state		724731	0					
ANR	724761	Identifier	CLAIM_SUSPENDED		724731	1					
ANR	724762	CompoundStatement		11:2:267:306	724731	1					
ANR	724763	IdentifierDeclStatement	time_t time_dif = now - c_entered_state ;	1933:2:45980:46019	724731	0	True				
ANR	724764	IdentifierDecl	time_dif = now - c_entered_state		724731	0					
ANR	724765	IdentifierDeclType	time_t		724731	0					
ANR	724766	Identifier	time_dif		724731	1					
ANR	724767	AssignmentExpression	time_dif = now - c_entered_state		724731	2		=			
ANR	724768	Identifier	time_dif		724731	0					
ANR	724769	AdditiveExpression	now - c_entered_state		724731	1		-			
ANR	724770	Identifier	now		724731	0					
ANR	724771	Identifier	c_entered_state		724731	1					
ANR	724772	IfStatement	if ( c_state == CLAIM_RUNNING )		724731	1					
ANR	724773	Condition	c_state == CLAIM_RUNNING	1934:6:46027:46050	724731	0	True				
ANR	724774	EqualityExpression	c_state == CLAIM_RUNNING		724731	0		==			
ANR	724775	Identifier	c_state		724731	0					
ANR	724776	Identifier	CLAIM_RUNNING		724731	1					
ANR	724777	CompoundStatement		12:33:341:341	724731	1					
ANR	724778	ExpressionStatement	c_job_total_run_time += time_dif	1935:3:46060:46092	724731	0	True				
ANR	724779	AssignmentExpression	c_job_total_run_time += time_dif		724731	0		+=			
ANR	724780	Identifier	c_job_total_run_time		724731	0					
ANR	724781	Identifier	time_dif		724731	1					
ANR	724782	ExpressionStatement	c_claim_total_run_time += time_dif	1936:3:46097:46131	724731	1	True				
ANR	724783	AssignmentExpression	c_claim_total_run_time += time_dif		724731	0		+=			
ANR	724784	Identifier	c_claim_total_run_time		724731	0					
ANR	724785	Identifier	time_dif		724731	1					
ANR	724786	IfStatement	if ( c_state == CLAIM_SUSPENDED )		724731	2					
ANR	724787	Condition	c_state == CLAIM_SUSPENDED	1938:6:46143:46168	724731	0	True				
ANR	724788	EqualityExpression	c_state == CLAIM_SUSPENDED		724731	0		==			
ANR	724789	Identifier	c_state		724731	0					
ANR	724790	Identifier	CLAIM_SUSPENDED		724731	1					
ANR	724791	CompoundStatement		16:35:459:459	724731	1					
ANR	724792	ExpressionStatement	c_job_total_suspend_time += time_dif	1939:3:46177:46213	724731	0	True				
ANR	724793	AssignmentExpression	c_job_total_suspend_time += time_dif		724731	0		+=			
ANR	724794	Identifier	c_job_total_suspend_time		724731	0					
ANR	724795	Identifier	time_dif		724731	1					
ANR	724796	ExpressionStatement	c_claim_total_suspend_time += time_dif	1940:3:46218:46256	724731	1	True				
ANR	724797	AssignmentExpression	c_claim_total_suspend_time += time_dif		724731	0		+=			
ANR	724798	Identifier	c_claim_total_suspend_time		724731	0					
ANR	724799	Identifier	time_dif		724731	1					
ANR	724800	IfStatement	if ( c_state == CLAIM_UNCLAIMED && c_claim_started == 0 )		724731	3					
ANR	724801	Condition	c_state == CLAIM_UNCLAIMED && c_claim_started == 0	1944:5:46271:46320	724731	0	True				
ANR	724802	AndExpression	c_state == CLAIM_UNCLAIMED && c_claim_started == 0		724731	0		&&			
ANR	724803	EqualityExpression	c_state == CLAIM_UNCLAIMED		724731	0		==			
ANR	724804	Identifier	c_state		724731	0					
ANR	724805	Identifier	CLAIM_UNCLAIMED		724731	1					
ANR	724806	EqualityExpression	c_claim_started == 0		724731	1		==			
ANR	724807	Identifier	c_claim_started		724731	0					
ANR	724808	PrimaryExpression	0		724731	1					
ANR	724809	CompoundStatement		22:58:611:611	724731	1					
ANR	724810	ExpressionStatement	c_claim_started = time ( NULL )	1945:2:46328:46356	724731	0	True				
ANR	724811	AssignmentExpression	c_claim_started = time ( NULL )		724731	0		=			
ANR	724812	Identifier	c_claim_started		724731	0					
ANR	724813	CallExpression	time ( NULL )		724731	1					
ANR	724814	Callee	time		724731	0					
ANR	724815	Identifier	time		724731	0					
ANR	724816	ArgumentList	NULL		724731	1					
ANR	724817	Argument	NULL		724731	0					
ANR	724818	Identifier	NULL		724731	0					
ANR	724819	ExpressionStatement	c_state = s	1950:1:46456:46467	724731	4	True				
ANR	724820	AssignmentExpression	c_state = s		724731	0		=			
ANR	724821	Identifier	c_state		724731	0					
ANR	724822	Identifier	s		724731	1					
ANR	724823	ExpressionStatement	c_entered_state = now	1951:1:46470:46491	724731	5	True				
ANR	724824	AssignmentExpression	c_entered_state = now		724731	0		=			
ANR	724825	Identifier	c_entered_state		724731	0					
ANR	724826	Identifier	now		724731	1					
ANR	724827	IfStatement	if ( c_type == CLAIM_COD )		724731	6					
ANR	724828	Condition	c_type == CLAIM_COD	1955:5:46580:46598	724731	0	True				
ANR	724829	EqualityExpression	c_type == CLAIM_COD		724731	0		==			
ANR	724830	Identifier	c_type		724731	0					
ANR	724831	Identifier	CLAIM_COD		724731	1					
ANR	724832	CompoundStatement		33:27:889:889	724731	1					
ANR	724833	ExpressionStatement	c_rip -> update ( )	1956:2:46606:46621	724731	0	True				
ANR	724834	CallExpression	c_rip -> update ( )		724731	0					
ANR	724835	Callee	c_rip -> update		724731	0					
ANR	724836	PtrMemberAccess	c_rip -> update		724731	0					
ANR	724837	Identifier	c_rip		724731	0					
ANR	724838	Identifier	update		724731	1					
ANR	724839	ArgumentList			724731	1					
ANR	724840	ReturnType	void		724731	1					
ANR	724841	Identifier	Claim :: changeState		724731	2					
ANR	724842	ParameterList	ClaimState s		724731	3					
ANR	724843	Parameter	ClaimState s	1922:20:45697:45708	724731	0	True				
ANR	724844	ParameterType	ClaimState		724731	0					
ANR	724845	Identifier	s		724731	1					
ANR	724846	CFGEntryNode	ENTRY		724731		True				
ANR	724847	CFGExitNode	EXIT		724731		True				
ANR	724848	Symbol	c_entered_state		724731						
ANR	724849	Symbol	c_job_total_suspend_time		724731						
ANR	724850	Symbol	c_rip		724731						
ANR	724851	Symbol	NULL		724731						
ANR	724852	Symbol	c_job_total_run_time		724731						
ANR	724853	Symbol	c_state		724731						
ANR	724854	Symbol	CLAIM_UNCLAIMED		724731						
ANR	724855	Symbol	CLAIM_COD		724731						
ANR	724856	Symbol	c_claim_started		724731						
ANR	724857	Symbol	CLAIM_SUSPENDED		724731						
ANR	724858	Symbol	s		724731						
ANR	724859	Symbol	CLAIM_RUNNING		724731						
ANR	724860	Symbol	now		724731						
ANR	724861	Symbol	c_type		724731						
ANR	724862	Symbol	c_claim_total_suspend_time		724731						
ANR	724863	Symbol	time		724731						
ANR	724864	Symbol	c_claim_total_run_time		724731						
ANR	724865	Symbol	time_dif		724731						
ANR	724866	Function	Claim :: getClaimAge	1960:0:46629:46754							
ANR	724867	FunctionDef	Claim :: getClaimAge ()		724866	0					
ANR	724868	CompoundStatement		1962:0:46657:46754	724866	0					
ANR	724869	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1963:1:46660:46683	724866	0	True				
ANR	724870	IdentifierDecl	now = time ( NULL )		724866	0					
ANR	724871	IdentifierDeclType	time_t		724866	0					
ANR	724872	Identifier	now		724866	1					
ANR	724873	AssignmentExpression	now = time ( NULL )		724866	2		=			
ANR	724874	Identifier	now		724866	0					
ANR	724875	CallExpression	time ( NULL )		724866	1					
ANR	724876	Callee	time		724866	0					
ANR	724877	Identifier	time		724866	0					
ANR	724878	ArgumentList	NULL		724866	1					
ANR	724879	Argument	NULL		724866	0					
ANR	724880	Identifier	NULL		724866	0					
ANR	724881	IfStatement	if ( c_claim_started )		724866	1					
ANR	724882	Condition	c_claim_started	1964:4:46689:46703	724866	0	True				
ANR	724883	Identifier	c_claim_started		724866	0					
ANR	724884	CompoundStatement		3:21:48:48	724866	1					
ANR	724885	ReturnStatement	return now - c_claim_started ;	1965:2:46710:46738	724866	0	True				
ANR	724886	AdditiveExpression	now - c_claim_started		724866	0		-			
ANR	724887	Identifier	now		724866	0					
ANR	724888	Identifier	c_claim_started		724866	1					
ANR	724889	ReturnStatement	return 0 ;	1967:1:46744:46752	724866	2	True				
ANR	724890	PrimaryExpression	0		724866	0					
ANR	724891	ReturnType	time_t		724866	1					
ANR	724892	Identifier	Claim :: getClaimAge		724866	2					
ANR	724893	ParameterList			724866	3					
ANR	724894	CFGEntryNode	ENTRY		724866		True				
ANR	724895	CFGExitNode	EXIT		724866		True				
ANR	724896	Symbol	NULL		724866						
ANR	724897	Symbol	now		724866						
ANR	724898	Symbol	c_claim_started		724866						
ANR	724899	Symbol	time		724866						
ANR	724900	Function	Claim :: writeJobAd	1970:0:46757:47246							
ANR	724901	FunctionDef	Claim :: writeJobAd (int pipe_end)		724900	0					
ANR	724902	CompoundStatement		1972:0:46796:47246	724900	0					
ANR	724903	IdentifierDeclStatement	MyString ad_str ;	1976:1:46888:46903	724900	0	True				
ANR	724904	IdentifierDecl	ad_str		724900	0					
ANR	724905	IdentifierDeclType	MyString		724900	0					
ANR	724906	Identifier	ad_str		724900	1					
ANR	724907	ExpressionStatement	c_ad -> sPrint ( ad_str )	1977:1:46906:46926	724900	1	True				
ANR	724908	CallExpression	c_ad -> sPrint ( ad_str )		724900	0					
ANR	724909	Callee	c_ad -> sPrint		724900	0					
ANR	724910	PtrMemberAccess	c_ad -> sPrint		724900	0					
ANR	724911	Identifier	c_ad		724900	0					
ANR	724912	Identifier	sPrint		724900	1					
ANR	724913	ArgumentList	ad_str		724900	1					
ANR	724914	Argument	ad_str		724900	0					
ANR	724915	Identifier	ad_str		724900	0					
ANR	724916	IdentifierDeclStatement	const char * ptr = ad_str . Value ( ) ;	1979:1:46930:46962	724900	2	True				
ANR	724917	IdentifierDecl	* ptr = ad_str . Value ( )		724900	0					
ANR	724918	IdentifierDeclType	const char *		724900	0					
ANR	724919	Identifier	ptr		724900	1					
ANR	724920	AssignmentExpression	* ptr = ad_str . Value ( )		724900	2		=			
ANR	724921	Identifier	ptr		724900	0					
ANR	724922	CallExpression	ad_str . Value ( )		724900	1					
ANR	724923	Callee	ad_str . Value		724900	0					
ANR	724924	MemberAccess	ad_str . Value		724900	0					
ANR	724925	Identifier	ad_str		724900	0					
ANR	724926	Identifier	Value		724900	1					
ANR	724927	ArgumentList			724900	1					
ANR	724928	IdentifierDeclStatement	int len = ad_str . Length ( ) ;	1980:1:46965:46990	724900	3	True				
ANR	724929	IdentifierDecl	len = ad_str . Length ( )		724900	0					
ANR	724930	IdentifierDeclType	int		724900	0					
ANR	724931	Identifier	len		724900	1					
ANR	724932	AssignmentExpression	len = ad_str . Length ( )		724900	2		=			
ANR	724933	Identifier	len		724900	0					
ANR	724934	CallExpression	ad_str . Length ( )		724900	1					
ANR	724935	Callee	ad_str . Length		724900	0					
ANR	724936	MemberAccess	ad_str . Length		724900	0					
ANR	724937	Identifier	ad_str		724900	0					
ANR	724938	Identifier	Length		724900	1					
ANR	724939	ArgumentList			724900	1					
ANR	724940	WhileStatement	while ( len )		724900	4					
ANR	724941	Condition	len	1981:8:47000:47002	724900	0	True				
ANR	724942	Identifier	len		724900	0					
ANR	724943	CompoundStatement		11:2:212:274	724900	1					
ANR	724944	IdentifierDeclStatement	"int bytes_written = daemonCore -> Write_Pipe ( pipe_end , ptr , len ) ;"	1982:2:47009:47071	724900	0	True				
ANR	724945	IdentifierDecl	"bytes_written = daemonCore -> Write_Pipe ( pipe_end , ptr , len )"		724900	0					
ANR	724946	IdentifierDeclType	int		724900	0					
ANR	724947	Identifier	bytes_written		724900	1					
ANR	724948	AssignmentExpression	"bytes_written = daemonCore -> Write_Pipe ( pipe_end , ptr , len )"		724900	2		=			
ANR	724949	Identifier	bytes_written		724900	0					
ANR	724950	CallExpression	"daemonCore -> Write_Pipe ( pipe_end , ptr , len )"		724900	1					
ANR	724951	Callee	daemonCore -> Write_Pipe		724900	0					
ANR	724952	PtrMemberAccess	daemonCore -> Write_Pipe		724900	0					
ANR	724953	Identifier	daemonCore		724900	0					
ANR	724954	Identifier	Write_Pipe		724900	1					
ANR	724955	ArgumentList	pipe_end		724900	1					
ANR	724956	Argument	pipe_end		724900	0					
ANR	724957	Identifier	pipe_end		724900	0					
ANR	724958	Argument	ptr		724900	1					
ANR	724959	Identifier	ptr		724900	0					
ANR	724960	Argument	len		724900	2					
ANR	724961	Identifier	len		724900	0					
ANR	724962	IfStatement	if ( bytes_written == - 1 )		724900	1					
ANR	724963	Condition	bytes_written == - 1	1983:6:47079:47097	724900	0	True				
ANR	724964	EqualityExpression	bytes_written == - 1		724900	0		==			
ANR	724965	Identifier	bytes_written		724900	0					
ANR	724966	UnaryOperationExpression	- 1		724900	1					
ANR	724967	UnaryOperator	-		724900	0					
ANR	724968	PrimaryExpression	1		724900	1					
ANR	724969	CompoundStatement		12:27:303:303	724900	1					
ANR	724970	ExpressionStatement	"dprintf ( D_ALWAYS , ""writeJobAd: Write_Pipe failed\\n"" )"	1984:3:47105:47157	724900	0	True				
ANR	724971	CallExpression	"dprintf ( D_ALWAYS , ""writeJobAd: Write_Pipe failed\\n"" )"		724900	0					
ANR	724972	Callee	dprintf		724900	0					
ANR	724973	Identifier	dprintf		724900	0					
ANR	724974	ArgumentList	D_ALWAYS		724900	1					
ANR	724975	Argument	D_ALWAYS		724900	0					
ANR	724976	Identifier	D_ALWAYS		724900	0					
ANR	724977	Argument	"""writeJobAd: Write_Pipe failed\\n"""		724900	1					
ANR	724978	PrimaryExpression	"""writeJobAd: Write_Pipe failed\\n"""		724900	0					
ANR	724979	ReturnStatement	return false ;	1985:3:47162:47174	724900	1	True				
ANR	724980	Identifier	false		724900	0					
ANR	724981	ExpressionStatement	ptr += bytes_written	1987:2:47182:47202	724900	2	True				
ANR	724982	AssignmentExpression	ptr += bytes_written		724900	0		+=			
ANR	724983	Identifier	ptr		724900	0					
ANR	724984	Identifier	bytes_written		724900	1					
ANR	724985	ExpressionStatement	len -= bytes_written	1988:2:47206:47226	724900	3	True				
ANR	724986	AssignmentExpression	len -= bytes_written		724900	0		-=			
ANR	724987	Identifier	len		724900	0					
ANR	724988	Identifier	bytes_written		724900	1					
ANR	724989	ReturnStatement	return true ;	1991:1:47233:47244	724900	5	True				
ANR	724990	Identifier	true		724900	0					
ANR	724991	ReturnType	bool		724900	1					
ANR	724992	Identifier	Claim :: writeJobAd		724900	2					
ANR	724993	ParameterList	int pipe_end		724900	3					
ANR	724994	Parameter	int pipe_end	1971:19:46781:46792	724900	0	True				
ANR	724995	ParameterType	int		724900	0					
ANR	724996	Identifier	pipe_end		724900	1					
ANR	724997	CFGEntryNode	ENTRY		724900		True				
ANR	724998	CFGExitNode	EXIT		724900		True				
ANR	724999	Symbol	ad_str		724900						
ANR	725000	Symbol	ad_str . Length		724900						
ANR	725001	Symbol	pipe_end		724900						
ANR	725002	Symbol	D_ALWAYS		724900						
ANR	725003	Symbol	false		724900						
ANR	725004	Symbol	ptr		724900						
ANR	725005	Symbol	bytes_written		724900						
ANR	725006	Symbol	c_ad		724900						
ANR	725007	Symbol	len		724900						
ANR	725008	Symbol	* daemonCore		724900						
ANR	725009	Symbol	daemonCore		724900						
ANR	725010	Symbol	true		724900						
ANR	725011	Symbol	daemonCore -> Write_Pipe		724900						
ANR	725012	Symbol	ad_str . Value		724900						
ANR	725013	Function	Claim :: writeMachAd	1994:0:47249:47576							
ANR	725014	FunctionDef	Claim :: writeMachAd (Stream * stream)		725013	0					
ANR	725015	CompoundStatement		1996:0:47291:47576	725013	0					
ANR	725016	ExpressionStatement	"dprintf ( D_FULLDEBUG | D_JOB , ""Sending Machine Ad to Starter\\n"" )"	1997:1:47294:47357	725013	0	True				
ANR	725017	CallExpression	"dprintf ( D_FULLDEBUG | D_JOB , ""Sending Machine Ad to Starter\\n"" )"		725013	0					
ANR	725018	Callee	dprintf		725013	0					
ANR	725019	Identifier	dprintf		725013	0					
ANR	725020	ArgumentList	D_FULLDEBUG | D_JOB		725013	1					
ANR	725021	Argument	D_FULLDEBUG | D_JOB		725013	0					
ANR	725022	InclusiveOrExpression	D_FULLDEBUG | D_JOB		725013	0		|			
ANR	725023	Identifier	D_FULLDEBUG		725013	0					
ANR	725024	Identifier	D_JOB		725013	1					
ANR	725025	Argument	"""Sending Machine Ad to Starter\\n"""		725013	1					
ANR	725026	PrimaryExpression	"""Sending Machine Ad to Starter\\n"""		725013	0					
ANR	725027	ExpressionStatement	c_rip -> r_classad -> dPrint ( D_JOB )	1998:1:47360:47391	725013	1	True				
ANR	725028	CallExpression	c_rip -> r_classad -> dPrint ( D_JOB )		725013	0					
ANR	725029	Callee	c_rip -> r_classad -> dPrint		725013	0					
ANR	725030	PtrMemberAccess	c_rip -> r_classad -> dPrint		725013	0					
ANR	725031	PtrMemberAccess	c_rip -> r_classad		725013	0					
ANR	725032	Identifier	c_rip		725013	0					
ANR	725033	Identifier	r_classad		725013	1					
ANR	725034	Identifier	dPrint		725013	1					
ANR	725035	ArgumentList	D_JOB		725013	1					
ANR	725036	Argument	D_JOB		725013	0					
ANR	725037	Identifier	D_JOB		725013	0					
ANR	725038	IfStatement	if ( ! c_rip -> r_classad -> put ( * stream ) || ! stream -> end_of_message ( ) )		725013	2					
ANR	725039	Condition	! c_rip -> r_classad -> put ( * stream ) || ! stream -> end_of_message ( )	1999:5:47398:47457	725013	0	True				
ANR	725040	OrExpression	! c_rip -> r_classad -> put ( * stream ) || ! stream -> end_of_message ( )		725013	0		||			
ANR	725041	UnaryOperationExpression	! c_rip -> r_classad -> put ( * stream )		725013	0					
ANR	725042	UnaryOperator	!		725013	0					
ANR	725043	CallExpression	c_rip -> r_classad -> put ( * stream )		725013	1					
ANR	725044	Callee	c_rip -> r_classad -> put		725013	0					
ANR	725045	PtrMemberAccess	c_rip -> r_classad -> put		725013	0					
ANR	725046	PtrMemberAccess	c_rip -> r_classad		725013	0					
ANR	725047	Identifier	c_rip		725013	0					
ANR	725048	Identifier	r_classad		725013	1					
ANR	725049	Identifier	put		725013	1					
ANR	725050	ArgumentList	* stream		725013	1					
ANR	725051	Argument	* stream		725013	0					
ANR	725052	UnaryOperationExpression	* stream		725013	0					
ANR	725053	UnaryOperator	*		725013	0					
ANR	725054	Identifier	stream		725013	1					
ANR	725055	UnaryOperationExpression	! stream -> end_of_message ( )		725013	1					
ANR	725056	UnaryOperator	!		725013	0					
ANR	725057	CallExpression	stream -> end_of_message ( )		725013	1					
ANR	725058	Callee	stream -> end_of_message		725013	0					
ANR	725059	PtrMemberAccess	stream -> end_of_message		725013	0					
ANR	725060	Identifier	stream		725013	0					
ANR	725061	Identifier	end_of_message		725013	1					
ANR	725062	ArgumentList			725013	1					
ANR	725063	CompoundStatement		4:67:168:168	725013	1					
ANR	725064	ExpressionStatement	"dprintf ( D_ALWAYS , ""writeMachAd: Failed to write machine ClassAd to stream\\n"" )"	2000:2:47464:47541	725013	0	True				
ANR	725065	CallExpression	"dprintf ( D_ALWAYS , ""writeMachAd: Failed to write machine ClassAd to stream\\n"" )"		725013	0					
ANR	725066	Callee	dprintf		725013	0					
ANR	725067	Identifier	dprintf		725013	0					
ANR	725068	ArgumentList	D_ALWAYS		725013	1					
ANR	725069	Argument	D_ALWAYS		725013	0					
ANR	725070	Identifier	D_ALWAYS		725013	0					
ANR	725071	Argument	"""writeMachAd: Failed to write machine ClassAd to stream\\n"""		725013	1					
ANR	725072	PrimaryExpression	"""writeMachAd: Failed to write machine ClassAd to stream\\n"""		725013	0					
ANR	725073	ReturnStatement	return false ;	2001:2:47545:47557	725013	1	True				
ANR	725074	Identifier	false		725013	0					
ANR	725075	ReturnStatement	return true ;	2003:1:47563:47574	725013	3	True				
ANR	725076	Identifier	true		725013	0					
ANR	725077	ReturnType	bool		725013	1					
ANR	725078	Identifier	Claim :: writeMachAd		725013	2					
ANR	725079	ParameterList	Stream * stream		725013	3					
ANR	725080	Parameter	Stream * stream	1995:20:47274:47287	725013	0	True				
ANR	725081	ParameterType	Stream *		725013	0					
ANR	725082	Identifier	stream		725013	1					
ANR	725083	CFGEntryNode	ENTRY		725013		True				
ANR	725084	CFGExitNode	EXIT		725013		True				
ANR	725085	Symbol	c_rip		725013						
ANR	725086	Symbol	stream -> end_of_message		725013						
ANR	725087	Symbol	c_rip -> r_classad		725013						
ANR	725088	Symbol	* c_rip		725013						
ANR	725089	Symbol	* c_rip -> r_classad		725013						
ANR	725090	Symbol	D_JOB		725013						
ANR	725091	Symbol	D_ALWAYS		725013						
ANR	725092	Symbol	false		725013						
ANR	725093	Symbol	D_FULLDEBUG		725013						
ANR	725094	Symbol	* * c_rip		725013						
ANR	725095	Symbol	stream		725013						
ANR	725096	Symbol	* stream		725013						
ANR	725097	Symbol	true		725013						
ANR	725098	Symbol	c_rip -> r_classad -> put		725013						
ANR	725099	Function	Client :: Client	2010:0:47742:47911							
ANR	725100	FunctionDef	Client :: Client ()		725099	0					
ANR	725101	CompoundStatement		2011:0:47759:47911	725099	0					
ANR	725102	ExpressionStatement	c_user = NULL	2012:1:47762:47775	725099	0	True				
ANR	725103	AssignmentExpression	c_user = NULL		725099	0		=			
ANR	725104	Identifier	c_user		725099	0					
ANR	725105	Identifier	NULL		725099	1					
ANR	725106	ExpressionStatement	c_owner = NULL	2013:1:47778:47792	725099	1	True				
ANR	725107	AssignmentExpression	c_owner = NULL		725099	0		=			
ANR	725108	Identifier	c_owner		725099	0					
ANR	725109	Identifier	NULL		725099	1					
ANR	725110	ExpressionStatement	c_acctgrp = NULL	2014:1:47795:47811	725099	2	True				
ANR	725111	AssignmentExpression	c_acctgrp = NULL		725099	0		=			
ANR	725112	Identifier	c_acctgrp		725099	0					
ANR	725113	Identifier	NULL		725099	1					
ANR	725114	ExpressionStatement	c_addr = NULL	2015:1:47814:47827	725099	3	True				
ANR	725115	AssignmentExpression	c_addr = NULL		725099	0		=			
ANR	725116	Identifier	c_addr		725099	0					
ANR	725117	Identifier	NULL		725099	1					
ANR	725118	ExpressionStatement	c_host = NULL	2016:1:47830:47843	725099	4	True				
ANR	725119	AssignmentExpression	c_host = NULL		725099	0		=			
ANR	725120	Identifier	c_host		725099	0					
ANR	725121	Identifier	NULL		725099	1					
ANR	725122	ExpressionStatement	c_proxyfile = NULL	2017:1:47846:47864	725099	5	True				
ANR	725123	AssignmentExpression	c_proxyfile = NULL		725099	0		=			
ANR	725124	Identifier	c_proxyfile		725099	0					
ANR	725125	Identifier	NULL		725099	1					
ANR	725126	ExpressionStatement	c_concurrencyLimits = NULL	2018:1:47867:47893	725099	6	True				
ANR	725127	AssignmentExpression	c_concurrencyLimits = NULL		725099	0		=			
ANR	725128	Identifier	c_concurrencyLimits		725099	0					
ANR	725129	Identifier	NULL		725099	1					
ANR	725130	ExpressionStatement	c_numPids = 0	2019:1:47896:47909	725099	7	True				
ANR	725131	AssignmentExpression	c_numPids = 0		725099	0		=			
ANR	725132	Identifier	c_numPids		725099	0					
ANR	725133	PrimaryExpression	0		725099	1					
ANR	725134	Identifier	Client :: Client		725099	1					
ANR	725135	ParameterList			725099	2					
ANR	725136	CFGEntryNode	ENTRY		725099		True				
ANR	725137	CFGExitNode	EXIT		725099		True				
ANR	725138	Symbol	NULL		725099						
ANR	725139	Symbol	c_numPids		725099						
ANR	725140	Symbol	c_proxyfile		725099						
ANR	725141	Symbol	c_concurrencyLimits		725099						
ANR	725142	Symbol	c_addr		725099						
ANR	725143	Symbol	c_user		725099						
ANR	725144	Symbol	c_acctgrp		725099						
ANR	725145	Symbol	c_owner		725099						
ANR	725146	Symbol	c_host		725099						
ANR	725147	Function	Client :: ~Client	2023:0:47915:48089							
ANR	725148	FunctionDef	Client :: ~Client ()		725147	0					
ANR	725149	CompoundStatement		2024:0:47934:48089	725147	0					
ANR	725150	IfStatement	if ( c_user )		725147	0					
ANR	725151	Condition	c_user	2025:5:47941:47946	725147	0	True				
ANR	725152	Identifier	c_user		725147	0					
ANR	725153	ExpressionStatement	free ( c_user )	2025:13:47949:47963	725147	1	True				
ANR	725154	CallExpression	free ( c_user )		725147	0					
ANR	725155	Callee	free		725147	0					
ANR	725156	Identifier	free		725147	0					
ANR	725157	ArgumentList	c_user		725147	1					
ANR	725158	Argument	c_user		725147	0					
ANR	725159	Identifier	c_user		725147	0					
ANR	725160	IfStatement	if ( c_owner )		725147	1					
ANR	725161	Condition	c_owner	2026:5:47970:47976	725147	0	True				
ANR	725162	Identifier	c_owner		725147	0					
ANR	725163	ExpressionStatement	free ( c_owner )	2026:14:47979:47994	725147	1	True				
ANR	725164	CallExpression	free ( c_owner )		725147	0					
ANR	725165	Callee	free		725147	0					
ANR	725166	Identifier	free		725147	0					
ANR	725167	ArgumentList	c_owner		725147	1					
ANR	725168	Argument	c_owner		725147	0					
ANR	725169	Identifier	c_owner		725147	0					
ANR	725170	IfStatement	if ( c_acctgrp )		725147	2					
ANR	725171	Condition	c_acctgrp	2027:5:48001:48009	725147	0	True				
ANR	725172	Identifier	c_acctgrp		725147	0					
ANR	725173	ExpressionStatement	free ( c_acctgrp )	2027:16:48012:48029	725147	1	True				
ANR	725174	CallExpression	free ( c_acctgrp )		725147	0					
ANR	725175	Callee	free		725147	0					
ANR	725176	Identifier	free		725147	0					
ANR	725177	ArgumentList	c_acctgrp		725147	1					
ANR	725178	Argument	c_acctgrp		725147	0					
ANR	725179	Identifier	c_acctgrp		725147	0					
ANR	725180	IfStatement	if ( c_addr )		725147	3					
ANR	725181	Condition	c_addr	2028:5:48036:48041	725147	0	True				
ANR	725182	Identifier	c_addr		725147	0					
ANR	725183	ExpressionStatement	free ( c_addr )	2028:13:48044:48058	725147	1	True				
ANR	725184	CallExpression	free ( c_addr )		725147	0					
ANR	725185	Callee	free		725147	0					
ANR	725186	Identifier	free		725147	0					
ANR	725187	ArgumentList	c_addr		725147	1					
ANR	725188	Argument	c_addr		725147	0					
ANR	725189	Identifier	c_addr		725147	0					
ANR	725190	IfStatement	if ( c_host )		725147	4					
ANR	725191	Condition	c_host	2029:5:48065:48070	725147	0	True				
ANR	725192	Identifier	c_host		725147	0					
ANR	725193	ExpressionStatement	free ( c_host )	2029:13:48073:48087	725147	1	True				
ANR	725194	CallExpression	free ( c_host )		725147	0					
ANR	725195	Callee	free		725147	0					
ANR	725196	Identifier	free		725147	0					
ANR	725197	ArgumentList	c_host		725147	1					
ANR	725198	Argument	c_host		725147	0					
ANR	725199	Identifier	c_host		725147	0					
ANR	725200	Identifier	Client :: ~Client		725147	1					
ANR	725201	ParameterList			725147	2					
ANR	725202	CFGEntryNode	ENTRY		725147		True				
ANR	725203	CFGExitNode	EXIT		725147		True				
ANR	725204	Symbol	c_addr		725147						
ANR	725205	Symbol	c_user		725147						
ANR	725206	Symbol	c_acctgrp		725147						
ANR	725207	Symbol	c_owner		725147						
ANR	725208	Symbol	c_host		725147						
ANR	725209	Function	Client :: setuser	2033:0:48093:48267							
ANR	725210	FunctionDef	Client :: setuser (const char * updated_user)		725209	0					
ANR	725211	CompoundStatement		2035:0:48142:48267	725209	0					
ANR	725212	IfStatement	if ( c_user )		725209	0					
ANR	725213	Condition	c_user	2036:5:48149:48154	725209	0	True				
ANR	725214	Identifier	c_user		725209	0					
ANR	725215	CompoundStatement		2:14:15:15	725209	1					
ANR	725216	ExpressionStatement	free ( c_user )	2037:2:48162:48175	725209	0	True				
ANR	725217	CallExpression	free ( c_user )		725209	0					
ANR	725218	Callee	free		725209	0					
ANR	725219	Identifier	free		725209	0					
ANR	725220	ArgumentList	c_user		725209	1					
ANR	725221	Argument	c_user		725209	0					
ANR	725222	Identifier	c_user		725209	0					
ANR	725223	IfStatement	if ( updated_user )		725209	1					
ANR	725224	Condition	updated_user	2039:5:48185:48196	725209	0	True				
ANR	725225	Identifier	updated_user		725209	0					
ANR	725226	CompoundStatement		5:20:57:57	725209	1					
ANR	725227	ExpressionStatement	c_user = strdup ( updated_user )	2040:2:48204:48235	725209	0	True				
ANR	725228	AssignmentExpression	c_user = strdup ( updated_user )		725209	0		=			
ANR	725229	Identifier	c_user		725209	0					
ANR	725230	CallExpression	strdup ( updated_user )		725209	1					
ANR	725231	Callee	strdup		725209	0					
ANR	725232	Identifier	strdup		725209	0					
ANR	725233	ArgumentList	updated_user		725209	1					
ANR	725234	Argument	updated_user		725209	0					
ANR	725235	Identifier	updated_user		725209	0					
ANR	725236	ElseStatement	else		725209	0					
ANR	725237	CompoundStatement		7:8:102:102	725209	0					
ANR	725238	ExpressionStatement	c_user = NULL	2042:2:48249:48262	725209	0	True				
ANR	725239	AssignmentExpression	c_user = NULL		725209	0		=			
ANR	725240	Identifier	c_user		725209	0					
ANR	725241	Identifier	NULL		725209	1					
ANR	725242	ReturnType	void		725209	1					
ANR	725243	Identifier	Client :: setuser		725209	2					
ANR	725244	ParameterList	const char * updated_user		725209	3					
ANR	725245	Parameter	const char * updated_user	2034:17:48115:48138	725209	0	True				
ANR	725246	ParameterType	const char *		725209	0					
ANR	725247	Identifier	updated_user		725209	1					
ANR	725248	CFGEntryNode	ENTRY		725209		True				
ANR	725249	CFGExitNode	EXIT		725209		True				
ANR	725250	Symbol	NULL		725209						
ANR	725251	Symbol	c_user		725209						
ANR	725252	Symbol	strdup		725209						
ANR	725253	Symbol	updated_user		725209						
ANR	725254	Function	Client :: setowner	2047:0:48271:48453							
ANR	725255	FunctionDef	Client :: setowner (const char * updated_owner)		725254	0					
ANR	725256	CompoundStatement		2049:0:48322:48453	725254	0					
ANR	725257	IfStatement	if ( c_owner )		725254	0					
ANR	725258	Condition	c_owner	2050:5:48329:48335	725254	0	True				
ANR	725259	Identifier	c_owner		725254	0					
ANR	725260	CompoundStatement		2:15:16:16	725254	1					
ANR	725261	ExpressionStatement	free ( c_owner )	2051:2:48343:48357	725254	0	True				
ANR	725262	CallExpression	free ( c_owner )		725254	0					
ANR	725263	Callee	free		725254	0					
ANR	725264	Identifier	free		725254	0					
ANR	725265	ArgumentList	c_owner		725254	1					
ANR	725266	Argument	c_owner		725254	0					
ANR	725267	Identifier	c_owner		725254	0					
ANR	725268	IfStatement	if ( updated_owner )		725254	1					
ANR	725269	Condition	updated_owner	2053:5:48367:48379	725254	0	True				
ANR	725270	Identifier	updated_owner		725254	0					
ANR	725271	CompoundStatement		5:21:60:60	725254	1					
ANR	725272	ExpressionStatement	c_owner = strdup ( updated_owner )	2054:2:48387:48420	725254	0	True				
ANR	725273	AssignmentExpression	c_owner = strdup ( updated_owner )		725254	0		=			
ANR	725274	Identifier	c_owner		725254	0					
ANR	725275	CallExpression	strdup ( updated_owner )		725254	1					
ANR	725276	Callee	strdup		725254	0					
ANR	725277	Identifier	strdup		725254	0					
ANR	725278	ArgumentList	updated_owner		725254	1					
ANR	725279	Argument	updated_owner		725254	0					
ANR	725280	Identifier	updated_owner		725254	0					
ANR	725281	ElseStatement	else		725254	0					
ANR	725282	CompoundStatement		7:8:107:107	725254	0					
ANR	725283	ExpressionStatement	c_owner = NULL	2056:2:48434:48448	725254	0	True				
ANR	725284	AssignmentExpression	c_owner = NULL		725254	0		=			
ANR	725285	Identifier	c_owner		725254	0					
ANR	725286	Identifier	NULL		725254	1					
ANR	725287	ReturnType	void		725254	1					
ANR	725288	Identifier	Client :: setowner		725254	2					
ANR	725289	ParameterList	const char * updated_owner		725254	3					
ANR	725290	Parameter	const char * updated_owner	2048:18:48294:48318	725254	0	True				
ANR	725291	ParameterType	const char *		725254	0					
ANR	725292	Identifier	updated_owner		725254	1					
ANR	725293	CFGEntryNode	ENTRY		725254		True				
ANR	725294	CFGExitNode	EXIT		725254		True				
ANR	725295	Symbol	updated_owner		725254						
ANR	725296	Symbol	NULL		725254						
ANR	725297	Symbol	strdup		725254						
ANR	725298	Symbol	c_owner		725254						
ANR	725299	Function	Client :: setAccountingGroup	2061:0:48457:48628							
ANR	725300	FunctionDef	Client :: setAccountingGroup (const char * grp)		725299	0					
ANR	725301	CompoundStatement		2063:0:48509:48628	725299	0					
ANR	725302	IfStatement	if ( c_acctgrp )		725299	0					
ANR	725303	Condition	c_acctgrp	2064:5:48516:48524	725299	0	True				
ANR	725304	Identifier	c_acctgrp		725299	0					
ANR	725305	CompoundStatement		2:17:18:18	725299	1					
ANR	725306	ExpressionStatement	free ( c_acctgrp )	2065:2:48532:48548	725299	0	True				
ANR	725307	CallExpression	free ( c_acctgrp )		725299	0					
ANR	725308	Callee	free		725299	0					
ANR	725309	Identifier	free		725299	0					
ANR	725310	ArgumentList	c_acctgrp		725299	1					
ANR	725311	Argument	c_acctgrp		725299	0					
ANR	725312	Identifier	c_acctgrp		725299	0					
ANR	725313	IfStatement	if ( grp )		725299	1					
ANR	725314	Condition	grp	2067:5:48558:48560	725299	0	True				
ANR	725315	Identifier	grp		725299	0					
ANR	725316	CompoundStatement		5:11:54:54	725299	1					
ANR	725317	ExpressionStatement	c_acctgrp = strdup ( grp )	2068:2:48568:48593	725299	0	True				
ANR	725318	AssignmentExpression	c_acctgrp = strdup ( grp )		725299	0		=			
ANR	725319	Identifier	c_acctgrp		725299	0					
ANR	725320	CallExpression	strdup ( grp )		725299	1					
ANR	725321	Callee	strdup		725299	0					
ANR	725322	Identifier	strdup		725299	0					
ANR	725323	ArgumentList	grp		725299	1					
ANR	725324	Argument	grp		725299	0					
ANR	725325	Identifier	grp		725299	0					
ANR	725326	ElseStatement	else		725299	0					
ANR	725327	CompoundStatement		7:8:93:93	725299	0					
ANR	725328	ExpressionStatement	c_acctgrp = NULL	2070:2:48607:48623	725299	0	True				
ANR	725329	AssignmentExpression	c_acctgrp = NULL		725299	0		=			
ANR	725330	Identifier	c_acctgrp		725299	0					
ANR	725331	Identifier	NULL		725299	1					
ANR	725332	ReturnType	void		725299	1					
ANR	725333	Identifier	Client :: setAccountingGroup		725299	2					
ANR	725334	ParameterList	const char * grp		725299	3					
ANR	725335	Parameter	const char * grp	2062:28:48490:48504	725299	0	True				
ANR	725336	ParameterType	const char *		725299	0					
ANR	725337	Identifier	grp		725299	1					
ANR	725338	CFGEntryNode	ENTRY		725299		True				
ANR	725339	CFGExitNode	EXIT		725299		True				
ANR	725340	Symbol	NULL		725299						
ANR	725341	Symbol	grp		725299						
ANR	725342	Symbol	c_acctgrp		725299						
ANR	725343	Symbol	strdup		725299						
ANR	725344	Function	Client :: setaddr	2075:0:48632:48806							
ANR	725345	FunctionDef	Client :: setaddr (const char * updated_addr)		725344	0					
ANR	725346	CompoundStatement		2077:0:48681:48806	725344	0					
ANR	725347	IfStatement	if ( c_addr )		725344	0					
ANR	725348	Condition	c_addr	2078:5:48688:48693	725344	0	True				
ANR	725349	Identifier	c_addr		725344	0					
ANR	725350	CompoundStatement		2:14:15:15	725344	1					
ANR	725351	ExpressionStatement	free ( c_addr )	2079:2:48701:48714	725344	0	True				
ANR	725352	CallExpression	free ( c_addr )		725344	0					
ANR	725353	Callee	free		725344	0					
ANR	725354	Identifier	free		725344	0					
ANR	725355	ArgumentList	c_addr		725344	1					
ANR	725356	Argument	c_addr		725344	0					
ANR	725357	Identifier	c_addr		725344	0					
ANR	725358	IfStatement	if ( updated_addr )		725344	1					
ANR	725359	Condition	updated_addr	2081:5:48724:48735	725344	0	True				
ANR	725360	Identifier	updated_addr		725344	0					
ANR	725361	CompoundStatement		5:20:57:57	725344	1					
ANR	725362	ExpressionStatement	c_addr = strdup ( updated_addr )	2082:2:48743:48774	725344	0	True				
ANR	725363	AssignmentExpression	c_addr = strdup ( updated_addr )		725344	0		=			
ANR	725364	Identifier	c_addr		725344	0					
ANR	725365	CallExpression	strdup ( updated_addr )		725344	1					
ANR	725366	Callee	strdup		725344	0					
ANR	725367	Identifier	strdup		725344	0					
ANR	725368	ArgumentList	updated_addr		725344	1					
ANR	725369	Argument	updated_addr		725344	0					
ANR	725370	Identifier	updated_addr		725344	0					
ANR	725371	ElseStatement	else		725344	0					
ANR	725372	CompoundStatement		7:8:102:102	725344	0					
ANR	725373	ExpressionStatement	c_addr = NULL	2084:2:48788:48801	725344	0	True				
ANR	725374	AssignmentExpression	c_addr = NULL		725344	0		=			
ANR	725375	Identifier	c_addr		725344	0					
ANR	725376	Identifier	NULL		725344	1					
ANR	725377	ReturnType	void		725344	1					
ANR	725378	Identifier	Client :: setaddr		725344	2					
ANR	725379	ParameterList	const char * updated_addr		725344	3					
ANR	725380	Parameter	const char * updated_addr	2076:17:48654:48677	725344	0	True				
ANR	725381	ParameterType	const char *		725344	0					
ANR	725382	Identifier	updated_addr		725344	1					
ANR	725383	CFGEntryNode	ENTRY		725344		True				
ANR	725384	CFGExitNode	EXIT		725344		True				
ANR	725385	Symbol	updated_addr		725344						
ANR	725386	Symbol	NULL		725344						
ANR	725387	Symbol	c_addr		725344						
ANR	725388	Symbol	strdup		725344						
ANR	725389	Function	Client :: sethost	2089:0:48810:48984							
ANR	725390	FunctionDef	Client :: sethost (const char * updated_host)		725389	0					
ANR	725391	CompoundStatement		2091:0:48859:48984	725389	0					
ANR	725392	IfStatement	if ( c_host )		725389	0					
ANR	725393	Condition	c_host	2092:5:48866:48871	725389	0	True				
ANR	725394	Identifier	c_host		725389	0					
ANR	725395	CompoundStatement		2:14:15:15	725389	1					
ANR	725396	ExpressionStatement	free ( c_host )	2093:2:48879:48892	725389	0	True				
ANR	725397	CallExpression	free ( c_host )		725389	0					
ANR	725398	Callee	free		725389	0					
ANR	725399	Identifier	free		725389	0					
ANR	725400	ArgumentList	c_host		725389	1					
ANR	725401	Argument	c_host		725389	0					
ANR	725402	Identifier	c_host		725389	0					
ANR	725403	IfStatement	if ( updated_host )		725389	1					
ANR	725404	Condition	updated_host	2095:5:48902:48913	725389	0	True				
ANR	725405	Identifier	updated_host		725389	0					
ANR	725406	CompoundStatement		5:20:57:57	725389	1					
ANR	725407	ExpressionStatement	c_host = strdup ( updated_host )	2096:2:48921:48952	725389	0	True				
ANR	725408	AssignmentExpression	c_host = strdup ( updated_host )		725389	0		=			
ANR	725409	Identifier	c_host		725389	0					
ANR	725410	CallExpression	strdup ( updated_host )		725389	1					
ANR	725411	Callee	strdup		725389	0					
ANR	725412	Identifier	strdup		725389	0					
ANR	725413	ArgumentList	updated_host		725389	1					
ANR	725414	Argument	updated_host		725389	0					
ANR	725415	Identifier	updated_host		725389	0					
ANR	725416	ElseStatement	else		725389	0					
ANR	725417	CompoundStatement		7:8:102:102	725389	0					
ANR	725418	ExpressionStatement	c_host = NULL	2098:2:48966:48979	725389	0	True				
ANR	725419	AssignmentExpression	c_host = NULL		725389	0		=			
ANR	725420	Identifier	c_host		725389	0					
ANR	725421	Identifier	NULL		725389	1					
ANR	725422	ReturnType	void		725389	1					
ANR	725423	Identifier	Client :: sethost		725389	2					
ANR	725424	ParameterList	const char * updated_host		725389	3					
ANR	725425	Parameter	const char * updated_host	2090:17:48832:48855	725389	0	True				
ANR	725426	ParameterType	const char *		725389	0					
ANR	725427	Identifier	updated_host		725389	1					
ANR	725428	CFGEntryNode	ENTRY		725389		True				
ANR	725429	CFGExitNode	EXIT		725389		True				
ANR	725430	Symbol	NULL		725389						
ANR	725431	Symbol	updated_host		725389						
ANR	725432	Symbol	strdup		725389						
ANR	725433	Symbol	c_host		725389						
ANR	725434	Function	Client :: setProxyFile	2102:0:48987:49158							
ANR	725435	FunctionDef	Client :: setProxyFile (const char * pf)		725434	0					
ANR	725436	CompoundStatement		2104:0:49031:49158	725434	0					
ANR	725437	IfStatement	if ( c_proxyfile )		725434	0					
ANR	725438	Condition	c_proxyfile	2105:5:49038:49048	725434	0	True				
ANR	725439	Identifier	c_proxyfile		725434	0					
ANR	725440	CompoundStatement		2:19:20:20	725434	1					
ANR	725441	ExpressionStatement	free ( c_proxyfile )	2106:2:49056:49075	725434	0	True				
ANR	725442	CallExpression	free ( c_proxyfile )		725434	0					
ANR	725443	Callee	free		725434	0					
ANR	725444	Identifier	free		725434	0					
ANR	725445	ArgumentList	c_proxyfile		725434	1					
ANR	725446	Argument	c_proxyfile		725434	0					
ANR	725447	Identifier	c_proxyfile		725434	0					
ANR	725448	IfStatement	if ( pf )		725434	1					
ANR	725449	Condition	pf	2108:6:49086:49087	725434	0	True				
ANR	725450	Identifier	pf		725434	0					
ANR	725451	CompoundStatement		5:11:59:59	725434	1					
ANR	725452	ExpressionStatement	c_proxyfile = strdup ( pf )	2109:2:49095:49121	725434	0	True				
ANR	725453	AssignmentExpression	c_proxyfile = strdup ( pf )		725434	0		=			
ANR	725454	Identifier	c_proxyfile		725434	0					
ANR	725455	CallExpression	strdup ( pf )		725434	1					
ANR	725456	Callee	strdup		725434	0					
ANR	725457	Identifier	strdup		725434	0					
ANR	725458	ArgumentList	pf		725434	1					
ANR	725459	Argument	pf		725434	0					
ANR	725460	Identifier	pf		725434	0					
ANR	725461	ElseStatement	else		725434	0					
ANR	725462	CompoundStatement		7:8:99:99	725434	0					
ANR	725463	ExpressionStatement	c_proxyfile = NULL	2111:2:49135:49153	725434	0	True				
ANR	725464	AssignmentExpression	c_proxyfile = NULL		725434	0		=			
ANR	725465	Identifier	c_proxyfile		725434	0					
ANR	725466	Identifier	NULL		725434	1					
ANR	725467	ReturnType	void		725434	1					
ANR	725468	Identifier	Client :: setProxyFile		725434	2					
ANR	725469	ParameterList	const char * pf		725434	3					
ANR	725470	Parameter	const char * pf	2103:22:49014:49027	725434	0	True				
ANR	725471	ParameterType	const char *		725434	0					
ANR	725472	Identifier	pf		725434	1					
ANR	725473	CFGEntryNode	ENTRY		725434		True				
ANR	725474	CFGExitNode	EXIT		725434		True				
ANR	725475	Symbol	NULL		725434						
ANR	725476	Symbol	c_proxyfile		725434						
ANR	725477	Symbol	pf		725434						
ANR	725478	Symbol	strdup		725434						
ANR	725479	Function	Client :: setConcurrencyLimits	2115:0:49161:49384							
ANR	725480	FunctionDef	Client :: setConcurrencyLimits (const char * limits)		725479	0					
ANR	725481	CompoundStatement		2117:0:49217:49384	725479	0					
ANR	725482	IfStatement	if ( c_concurrencyLimits )		725479	0					
ANR	725483	Condition	c_concurrencyLimits	2118:5:49224:49242	725479	0	True				
ANR	725484	Identifier	c_concurrencyLimits		725479	0					
ANR	725485	CompoundStatement		2:27:28:28	725479	1					
ANR	725486	ExpressionStatement	free ( c_concurrencyLimits )	2119:2:49250:49277	725479	0	True				
ANR	725487	CallExpression	free ( c_concurrencyLimits )		725479	0					
ANR	725488	Callee	free		725479	0					
ANR	725489	Identifier	free		725479	0					
ANR	725490	ArgumentList	c_concurrencyLimits		725479	1					
ANR	725491	Argument	c_concurrencyLimits		725479	0					
ANR	725492	Identifier	c_concurrencyLimits		725479	0					
ANR	725493	IfStatement	if ( limits )		725479	1					
ANR	725494	Condition	limits	2121:6:49288:49293	725479	0	True				
ANR	725495	Identifier	limits		725479	0					
ANR	725496	CompoundStatement		5:15:79:79	725479	1					
ANR	725497	ExpressionStatement	c_concurrencyLimits = strdup ( limits )	2122:2:49301:49339	725479	0	True				
ANR	725498	AssignmentExpression	c_concurrencyLimits = strdup ( limits )		725479	0		=			
ANR	725499	Identifier	c_concurrencyLimits		725479	0					
ANR	725500	CallExpression	strdup ( limits )		725479	1					
ANR	725501	Callee	strdup		725479	0					
ANR	725502	Identifier	strdup		725479	0					
ANR	725503	ArgumentList	limits		725479	1					
ANR	725504	Argument	limits		725479	0					
ANR	725505	Identifier	limits		725479	0					
ANR	725506	ElseStatement	else		725479	0					
ANR	725507	CompoundStatement		7:8:131:131	725479	0					
ANR	725508	ExpressionStatement	c_concurrencyLimits = NULL	2124:2:49353:49379	725479	0	True				
ANR	725509	AssignmentExpression	c_concurrencyLimits = NULL		725479	0		=			
ANR	725510	Identifier	c_concurrencyLimits		725479	0					
ANR	725511	Identifier	NULL		725479	1					
ANR	725512	ReturnType	void		725479	1					
ANR	725513	Identifier	Client :: setConcurrencyLimits		725479	2					
ANR	725514	ParameterList	const char * limits		725479	3					
ANR	725515	Parameter	const char * limits	2116:30:49196:49213	725479	0	True				
ANR	725516	ParameterType	const char *		725479	0					
ANR	725517	Identifier	limits		725479	1					
ANR	725518	CFGEntryNode	ENTRY		725479		True				
ANR	725519	CFGExitNode	EXIT		725479		True				
ANR	725520	Symbol	NULL		725479						
ANR	725521	Symbol	c_concurrencyLimits		725479						
ANR	725522	Symbol	strdup		725479						
ANR	725523	Symbol	limits		725479						
ANR	725524	Function	Client :: setNumPids	2128:0:49387:49456							
ANR	725525	FunctionDef	Client :: setNumPids (int numJobPids)		725524	0					
ANR	725526	CompoundStatement		2130:0:49429:49456	725524	0					
ANR	725527	ExpressionStatement	c_numPids = numJobPids	2131:1:49432:49454	725524	0	True				
ANR	725528	AssignmentExpression	c_numPids = numJobPids		725524	0		=			
ANR	725529	Identifier	c_numPids		725524	0					
ANR	725530	Identifier	numJobPids		725524	1					
ANR	725531	ReturnType	void		725524	1					
ANR	725532	Identifier	Client :: setNumPids		725524	2					
ANR	725533	ParameterList	int numJobPids		725524	3					
ANR	725534	Parameter	int numJobPids	2129:20:49412:49425	725524	0	True				
ANR	725535	ParameterType	int		725524	0					
ANR	725536	Identifier	numJobPids		725524	1					
ANR	725537	CFGEntryNode	ENTRY		725524		True				
ANR	725538	CFGExitNode	EXIT		725524		True				
ANR	725539	Symbol	c_numPids		725524						
ANR	725540	Symbol	numJobPids		725524						
ANR	725541	Function	Client :: vacate	2134:0:49459:50230							
ANR	725542	FunctionDef	Client :: vacate (char * id)		725541	0					
ANR	725543	CompoundStatement		2136:0:49489:50230	725541	0					
ANR	725544	IdentifierDeclStatement	ReliSock * sock ;	2137:1:49492:49506	725541	0	True				
ANR	725545	IdentifierDecl	* sock		725541	0					
ANR	725546	IdentifierDeclType	ReliSock *		725541	0					
ANR	725547	Identifier	sock		725541	1					
ANR	725548	IfStatement	if ( ! ( c_addr || c_host || c_owner ) )		725541	1					
ANR	725549	Condition	! ( c_addr || c_host || c_owner )	2139:5:49514:49545	725541	0	True				
ANR	725550	UnaryOperationExpression	! ( c_addr || c_host || c_owner )		725541	0					
ANR	725551	UnaryOperator	!		725541	0					
ANR	725552	OrExpression	c_addr || c_host || c_owner		725541	1		||			
ANR	725553	Identifier	c_addr		725541	0					
ANR	725554	OrExpression	c_host || c_owner		725541	1		||			
ANR	725555	Identifier	c_host		725541	0					
ANR	725556	Identifier	c_owner		725541	1					
ANR	725557	CompoundStatement		4:40:59:59	725541	1					
ANR	725558	ReturnStatement	return ;	2141:2:49597:49603	725541	0	True				
ANR	725559	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Entered vacate_client %s %s...\\n"" , c_addr , c_host )"	2144:1:49610:49682	725541	2	True				
ANR	725560	CallExpression	"dprintf ( D_FULLDEBUG , ""Entered vacate_client %s %s...\\n"" , c_addr , c_host )"		725541	0					
ANR	725561	Callee	dprintf		725541	0					
ANR	725562	Identifier	dprintf		725541	0					
ANR	725563	ArgumentList	D_FULLDEBUG		725541	1					
ANR	725564	Argument	D_FULLDEBUG		725541	0					
ANR	725565	Identifier	D_FULLDEBUG		725541	0					
ANR	725566	Argument	"""Entered vacate_client %s %s...\\n"""		725541	1					
ANR	725567	PrimaryExpression	"""Entered vacate_client %s %s...\\n"""		725541	0					
ANR	725568	Argument	c_addr		725541	2					
ANR	725569	Identifier	c_addr		725541	0					
ANR	725570	Argument	c_host		725541	3					
ANR	725571	Identifier	c_host		725541	0					
ANR	725572	IdentifierDeclStatement	ClaimIdParser cid ( id ) ;	2146:1:49686:49707	725541	3	True				
ANR	725573	IdentifierDecl	cid ( id )		725541	0					
ANR	725574	IdentifierDeclType	ClaimIdParser		725541	0					
ANR	725575	Identifier	cid		725541	1					
ANR	725576	Identifier	id		725541	2					
ANR	725577	IdentifierDeclStatement	"Daemon my_schedd ( DT_SCHEDD , c_addr , NULL ) ;"	2148:1:49711:49753	725541	4	True				
ANR	725578	IdentifierDecl	"my_schedd ( DT_SCHEDD , c_addr , NULL )"		725541	0					
ANR	725579	IdentifierDeclType	Daemon		725541	0					
ANR	725580	Identifier	my_schedd		725541	1					
ANR	725581	Expression	"DT_SCHEDD , c_addr , NULL"		725541	2					
ANR	725582	Identifier	DT_SCHEDD		725541	0					
ANR	725583	Expression	"c_addr , NULL"		725541	1					
ANR	725584	Identifier	c_addr		725541	0					
ANR	725585	Identifier	NULL		725541	1					
ANR	725586	ExpressionStatement	"sock = ( ReliSock * ) my_schedd . startCommand ( RELEASE_CLAIM , Stream :: reli_sock , 20 , NULL , NULL , false , cid . secSessionId ( ) )"	2149:1:49756:49913	725541	5	True				
ANR	725587	AssignmentExpression	"sock = ( ReliSock * ) my_schedd . startCommand ( RELEASE_CLAIM , Stream :: reli_sock , 20 , NULL , NULL , false , cid . secSessionId ( ) )"		725541	0		=			
ANR	725588	Identifier	sock		725541	0					
ANR	725589	CastExpression	"( ReliSock * ) my_schedd . startCommand ( RELEASE_CLAIM , Stream :: reli_sock , 20 , NULL , NULL , false , cid . secSessionId ( ) )"		725541	1					
ANR	725590	CastTarget	ReliSock *		725541	0					
ANR	725591	CallExpression	"my_schedd . startCommand ( RELEASE_CLAIM , Stream :: reli_sock , 20 , NULL , NULL , false , cid . secSessionId ( ) )"		725541	1					
ANR	725592	Callee	my_schedd . startCommand		725541	0					
ANR	725593	MemberAccess	my_schedd . startCommand		725541	0					
ANR	725594	Identifier	my_schedd		725541	0					
ANR	725595	Identifier	startCommand		725541	1					
ANR	725596	ArgumentList	RELEASE_CLAIM		725541	1					
ANR	725597	Argument	RELEASE_CLAIM		725541	0					
ANR	725598	Identifier	RELEASE_CLAIM		725541	0					
ANR	725599	Argument	Stream :: reli_sock		725541	1					
ANR	725600	Identifier	Stream :: reli_sock		725541	0					
ANR	725601	Argument	20		725541	2					
ANR	725602	PrimaryExpression	20		725541	0					
ANR	725603	Argument	NULL		725541	3					
ANR	725604	Identifier	NULL		725541	0					
ANR	725605	Argument	NULL		725541	4					
ANR	725606	Identifier	NULL		725541	0					
ANR	725607	Argument	false		725541	5					
ANR	725608	Identifier	false		725541	0					
ANR	725609	Argument	cid . secSessionId ( )		725541	6					
ANR	725610	CallExpression	cid . secSessionId ( )		725541	0					
ANR	725611	Callee	cid . secSessionId		725541	0					
ANR	725612	MemberAccess	cid . secSessionId		725541	0					
ANR	725613	Identifier	cid		725541	0					
ANR	725614	Identifier	secSessionId		725541	1					
ANR	725615	ArgumentList			725541	1					
ANR	725616	IfStatement	if ( ! sock )		725541	6					
ANR	725617	Condition	! sock	2153:5:49920:49925	725541	0	True				
ANR	725618	UnaryOperationExpression	! sock		725541	0					
ANR	725619	UnaryOperator	!		725541	0					
ANR	725620	Identifier	sock		725541	1					
ANR	725621	CompoundStatement		18:14:439:439	725541	1					
ANR	725622	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""Can't connect to schedd (%s)\\n"" , c_addr )"	2154:2:49933:50002	725541	0	True				
ANR	725623	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""Can't connect to schedd (%s)\\n"" , c_addr )"		725541	0					
ANR	725624	Callee	dprintf		725541	0					
ANR	725625	Identifier	dprintf		725541	0					
ANR	725626	ArgumentList	D_FAILURE | D_ALWAYS		725541	1					
ANR	725627	Argument	D_FAILURE | D_ALWAYS		725541	0					
ANR	725628	InclusiveOrExpression	D_FAILURE | D_ALWAYS		725541	0		|			
ANR	725629	Identifier	D_FAILURE		725541	0					
ANR	725630	Identifier	D_ALWAYS		725541	1					
ANR	725631	Argument	"""Can't connect to schedd (%s)\\n"""		725541	1					
ANR	725632	PrimaryExpression	"""Can't connect to schedd (%s)\\n"""		725541	0					
ANR	725633	Argument	c_addr		725541	2					
ANR	725634	Identifier	c_addr		725541	0					
ANR	725635	ReturnStatement	return ;	2155:2:50006:50012	725541	1	True				
ANR	725636	IfStatement	if ( ! sock -> put_secret ( id ) )		725541	7					
ANR	725637	Condition	! sock -> put_secret ( id )	2157:5:50022:50044	725541	0	True				
ANR	725638	UnaryOperationExpression	! sock -> put_secret ( id )		725541	0					
ANR	725639	UnaryOperator	!		725541	0					
ANR	725640	CallExpression	sock -> put_secret ( id )		725541	1					
ANR	725641	Callee	sock -> put_secret		725541	0					
ANR	725642	PtrMemberAccess	sock -> put_secret		725541	0					
ANR	725643	Identifier	sock		725541	0					
ANR	725644	Identifier	put_secret		725541	1					
ANR	725645	ArgumentList	id		725541	1					
ANR	725646	Argument	id		725541	0					
ANR	725647	Identifier	id		725541	0					
ANR	725648	CompoundStatement		22:31:558:558	725541	1					
ANR	725649	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't send ClaimId to client\\n"" )"	2158:2:50052:50103	725541	0	True				
ANR	725650	CallExpression	"dprintf ( D_ALWAYS , ""Can't send ClaimId to client\\n"" )"		725541	0					
ANR	725651	Callee	dprintf		725541	0					
ANR	725652	Identifier	dprintf		725541	0					
ANR	725653	ArgumentList	D_ALWAYS		725541	1					
ANR	725654	Argument	D_ALWAYS		725541	0					
ANR	725655	Identifier	D_ALWAYS		725541	0					
ANR	725656	Argument	"""Can't send ClaimId to client\\n"""		725541	1					
ANR	725657	PrimaryExpression	"""Can't send ClaimId to client\\n"""		725541	0					
ANR	725658	ElseStatement	else		725541	0					
ANR	725659	IfStatement	if ( ! sock -> end_of_message ( ) )		725541	0					
ANR	725660	Condition	! sock -> end_of_message ( )	2159:12:50117:50139	725541	0	True				
ANR	725661	UnaryOperationExpression	! sock -> end_of_message ( )		725541	0					
ANR	725662	UnaryOperator	!		725541	0					
ANR	725663	CallExpression	sock -> end_of_message ( )		725541	1					
ANR	725664	Callee	sock -> end_of_message		725541	0					
ANR	725665	PtrMemberAccess	sock -> end_of_message		725541	0					
ANR	725666	Identifier	sock		725541	0					
ANR	725667	Identifier	end_of_message		725541	1					
ANR	725668	ArgumentList			725541	1					
ANR	725669	CompoundStatement		24:38:653:653	725541	1					
ANR	725670	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't send EOM to client\\n"" )"	2160:2:50147:50194	725541	0	True				
ANR	725671	CallExpression	"dprintf ( D_ALWAYS , ""Can't send EOM to client\\n"" )"		725541	0					
ANR	725672	Callee	dprintf		725541	0					
ANR	725673	Identifier	dprintf		725541	0					
ANR	725674	ArgumentList	D_ALWAYS		725541	1					
ANR	725675	Argument	D_ALWAYS		725541	0					
ANR	725676	Identifier	D_ALWAYS		725541	0					
ANR	725677	Argument	"""Can't send EOM to client\\n"""		725541	1					
ANR	725678	PrimaryExpression	"""Can't send EOM to client\\n"""		725541	0					
ANR	725679	ExpressionStatement	sock -> close ( )	2163:1:50201:50214	725541	8	True				
ANR	725680	CallExpression	sock -> close ( )		725541	0					
ANR	725681	Callee	sock -> close		725541	0					
ANR	725682	PtrMemberAccess	sock -> close		725541	0					
ANR	725683	Identifier	sock		725541	0					
ANR	725684	Identifier	close		725541	1					
ANR	725685	ArgumentList			725541	1					
ANR	725686	Statement	delete	2164:1:50217:50222	725541	9	True				
ANR	725687	ExpressionStatement	sock	2164:8:50224:50228	725541	10	True				
ANR	725688	Identifier	sock		725541	0					
ANR	725689	ReturnType	void		725541	1					
ANR	725690	Identifier	Client :: vacate		725541	2					
ANR	725691	ParameterList	char * id		725541	3					
ANR	725692	Parameter	char * id	2135:15:49479:49486	725541	0	True				
ANR	725693	ParameterType	char *		725541	0					
ANR	725694	Identifier	id		725541	1					
ANR	725695	CFGEntryNode	ENTRY		725541		True				
ANR	725696	CFGExitNode	EXIT		725541		True				
ANR	725697	Symbol	cid . secSessionId		725541						
ANR	725698	Symbol	my_schedd		725541						
ANR	725699	Symbol	NULL		725541						
ANR	725700	Symbol	sock -> end_of_message		725541						
ANR	725701	Symbol	false		725541						
ANR	725702	Symbol	D_ALWAYS		725541						
ANR	725703	Symbol	D_FULLDEBUG		725541						
ANR	725704	Symbol	D_FAILURE		725541						
ANR	725705	Symbol	RELEASE_CLAIM		725541						
ANR	725706	Symbol	c_owner		725541						
ANR	725707	Symbol	sock		725541						
ANR	725708	Symbol	sock -> put_secret		725541						
ANR	725709	Symbol	c_addr		725541						
ANR	725710	Symbol	my_schedd . startCommand		725541						
ANR	725711	Symbol	Stream :: reli_sock		725541						
ANR	725712	Symbol	id		725541						
ANR	725713	Symbol	* sock		725541						
ANR	725714	Symbol	c_host		725541						
ANR	725715	Symbol	cid		725541						
ANR	725716	Function	newIdString	2172:0:50398:51428							
ANR	725717	FunctionDef	newIdString (char * * id_str_ptr)		725716	0					
ANR	725718	CompoundStatement		2175:0:50443:51428	725716	0					
ANR	725719	Statement	static	2180:1:50584:50589	725716	0	True				
ANR	725720	IdentifierDeclStatement	int sequence_num = 0 ;	2180:8:50591:50611	725716	1	True				
ANR	725721	IdentifierDecl	sequence_num = 0		725716	0					
ANR	725722	IdentifierDeclType	int		725716	0					
ANR	725723	Identifier	sequence_num		725716	1					
ANR	725724	AssignmentExpression	sequence_num = 0		725716	2		=			
ANR	725725	Identifier	sequence_num		725716	0					
ANR	725726	PrimaryExpression	0		725716	1					
ANR	725727	ExpressionStatement	sequence_num ++	2181:1:50614:50628	725716	2	True				
ANR	725728	PostIncDecOperationExpression	sequence_num ++		725716	0					
ANR	725729	Identifier	sequence_num		725716	0					
ANR	725730	IncDec	++		725716	1					
ANR	725731	IdentifierDeclStatement	MyString id ;	2183:1:50632:50643	725716	3	True				
ANR	725732	IdentifierDecl	id		725716	0					
ANR	725733	IdentifierDeclType	MyString		725716	0					
ANR	725734	Identifier	id		725716	1					
ANR	725735	IdentifierDeclStatement	Sinful my_sin ( daemonCore -> publicNetworkIpAddr ( ) ) ;	2189:1:50866:50916	725716	4	True				
ANR	725736	IdentifierDecl	my_sin ( daemonCore -> publicNetworkIpAddr ( ) )		725716	0					
ANR	725737	IdentifierDeclType	Sinful		725716	0					
ANR	725738	Identifier	my_sin		725716	1					
ANR	725739	CallExpression	daemonCore -> publicNetworkIpAddr ( )		725716	2					
ANR	725740	Callee	daemonCore -> publicNetworkIpAddr		725716	0					
ANR	725741	PtrMemberAccess	daemonCore -> publicNetworkIpAddr		725716	0					
ANR	725742	Identifier	daemonCore		725716	0					
ANR	725743	Identifier	publicNetworkIpAddr		725716	1					
ANR	725744	ArgumentList			725716	1					
ANR	725745	ExpressionStatement	my_sin . clearParams ( )	2190:1:50919:50939	725716	5	True				
ANR	725746	CallExpression	my_sin . clearParams ( )		725716	0					
ANR	725747	Callee	my_sin . clearParams		725716	0					
ANR	725748	MemberAccess	my_sin . clearParams		725716	0					
ANR	725749	Identifier	my_sin		725716	0					
ANR	725750	Identifier	clearParams		725716	1					
ANR	725751	ArgumentList			725716	1					
ANR	725752	IdentifierDeclStatement	char const * my_addr = my_sin . getSinful ( ) ;	2191:1:50942:50982	725716	6	True				
ANR	725753	IdentifierDecl	* my_addr = my_sin . getSinful ( )		725716	0					
ANR	725754	IdentifierDeclType	char const *		725716	0					
ANR	725755	Identifier	my_addr		725716	1					
ANR	725756	AssignmentExpression	* my_addr = my_sin . getSinful ( )		725716	2		=			
ANR	725757	Identifier	my_addr		725716	0					
ANR	725758	CallExpression	my_sin . getSinful ( )		725716	1					
ANR	725759	Callee	my_sin . getSinful		725716	0					
ANR	725760	MemberAccess	my_sin . getSinful		725716	0					
ANR	725761	Identifier	my_sin		725716	0					
ANR	725762	Identifier	getSinful		725716	1					
ANR	725763	ArgumentList			725716	1					
ANR	725764	ExpressionStatement	"ASSERT ( my_addr && ! strchr ( my_addr , '#' ) )"	2193:1:50986:51027	725716	7	True				
ANR	725765	CallExpression	"ASSERT ( my_addr && ! strchr ( my_addr , '#' ) )"		725716	0					
ANR	725766	Callee	ASSERT		725716	0					
ANR	725767	Identifier	ASSERT		725716	0					
ANR	725768	ArgumentList	"my_addr && ! strchr ( my_addr , '#' )"		725716	1					
ANR	725769	Argument	"my_addr && ! strchr ( my_addr , '#' )"		725716	0					
ANR	725770	AndExpression	"my_addr && ! strchr ( my_addr , '#' )"		725716	0		&&			
ANR	725771	Identifier	my_addr		725716	0					
ANR	725772	UnaryOperationExpression	"! strchr ( my_addr , '#' )"		725716	1					
ANR	725773	UnaryOperator	!		725716	0					
ANR	725774	CallExpression	"strchr ( my_addr , '#' )"		725716	1					
ANR	725775	Callee	strchr		725716	0					
ANR	725776	Identifier	strchr		725716	0					
ANR	725777	ArgumentList	my_addr		725716	1					
ANR	725778	Argument	my_addr		725716	0					
ANR	725779	Identifier	my_addr		725716	0					
ANR	725780	Argument	'#'		725716	1					
ANR	725781	PrimaryExpression	'#'		725716	0					
ANR	725782	ExpressionStatement	id += my_addr	2195:1:51031:51044	725716	8	True				
ANR	725783	AssignmentExpression	id += my_addr		725716	0		+=			
ANR	725784	Identifier	id		725716	0					
ANR	725785	Identifier	my_addr		725716	1					
ANR	725786	ExpressionStatement	id += '#'	2196:1:51047:51056	725716	9	True				
ANR	725787	AssignmentExpression	id += '#'		725716	0		+=			
ANR	725788	Identifier	id		725716	0					
ANR	725789	PrimaryExpression	'#'		725716	1					
ANR	725790	ExpressionStatement	id += ( int ) startd_startup	2197:1:51059:51084	725716	10	True				
ANR	725791	AssignmentExpression	id += ( int ) startd_startup		725716	0		+=			
ANR	725792	Identifier	id		725716	0					
ANR	725793	CastExpression	( int ) startd_startup		725716	1					
ANR	725794	CastTarget	int		725716	0					
ANR	725795	Identifier	startd_startup		725716	1					
ANR	725796	ExpressionStatement	id += '#'	2198:1:51087:51096	725716	11	True				
ANR	725797	AssignmentExpression	id += '#'		725716	0		+=			
ANR	725798	Identifier	id		725716	0					
ANR	725799	PrimaryExpression	'#'		725716	1					
ANR	725800	ExpressionStatement	id += sequence_num	2199:1:51099:51117	725716	12	True				
ANR	725801	AssignmentExpression	id += sequence_num		725716	0		+=			
ANR	725802	Identifier	id		725716	0					
ANR	725803	Identifier	sequence_num		725716	1					
ANR	725804	ExpressionStatement	"id += ""#"""	2200:1:51120:51129	725716	13	True				
ANR	725805	AssignmentExpression	"id += ""#"""		725716	0		+=			
ANR	725806	Identifier	id		725716	0					
ANR	725807	PrimaryExpression	"""#"""		725716	1					
ANR	725808	IdentifierDeclStatement	const size_t keylen = 20 ;	2204:1:51253:51277	725716	14	True				
ANR	725809	IdentifierDecl	keylen = 20		725716	0					
ANR	725810	IdentifierDeclType	const size_t		725716	0					
ANR	725811	Identifier	keylen		725716	1					
ANR	725812	AssignmentExpression	keylen = 20		725716	2		=			
ANR	725813	Identifier	keylen		725716	0					
ANR	725814	PrimaryExpression	20		725716	1					
ANR	725815	IdentifierDeclStatement	char * keybuf = Condor_Crypt_Base :: randomHexKey ( keylen ) ;	2205:1:51280:51334	725716	15	True				
ANR	725816	IdentifierDecl	* keybuf = Condor_Crypt_Base :: randomHexKey ( keylen )		725716	0					
ANR	725817	IdentifierDeclType	char *		725716	0					
ANR	725818	Identifier	keybuf		725716	1					
ANR	725819	AssignmentExpression	* keybuf = Condor_Crypt_Base :: randomHexKey ( keylen )		725716	2		=			
ANR	725820	Identifier	keybuf		725716	0					
ANR	725821	CallExpression	Condor_Crypt_Base :: randomHexKey ( keylen )		725716	1					
ANR	725822	Callee	Condor_Crypt_Base :: randomHexKey		725716	0					
ANR	725823	Identifier	Condor_Crypt_Base :: randomHexKey		725716	0					
ANR	725824	ArgumentList	keylen		725716	1					
ANR	725825	Argument	keylen		725716	0					
ANR	725826	Identifier	keylen		725716	0					
ANR	725827	ExpressionStatement	id += keybuf	2206:1:51337:51349	725716	16	True				
ANR	725828	AssignmentExpression	id += keybuf		725716	0		+=			
ANR	725829	Identifier	id		725716	0					
ANR	725830	Identifier	keybuf		725716	1					
ANR	725831	ExpressionStatement	free ( keybuf )	2207:1:51352:51366	725716	17	True				
ANR	725832	CallExpression	free ( keybuf )		725716	0					
ANR	725833	Callee	free		725716	0					
ANR	725834	Identifier	free		725716	0					
ANR	725835	ArgumentList	keybuf		725716	1					
ANR	725836	Argument	keybuf		725716	0					
ANR	725837	Identifier	keybuf		725716	0					
ANR	725838	ExpressionStatement	* id_str_ptr = strdup ( id . Value ( ) )	2209:1:51370:51404	725716	18	True				
ANR	725839	AssignmentExpression	* id_str_ptr = strdup ( id . Value ( ) )		725716	0		=			
ANR	725840	UnaryOperationExpression	* id_str_ptr		725716	0					
ANR	725841	UnaryOperator	*		725716	0					
ANR	725842	Identifier	id_str_ptr		725716	1					
ANR	725843	CallExpression	strdup ( id . Value ( ) )		725716	1					
ANR	725844	Callee	strdup		725716	0					
ANR	725845	Identifier	strdup		725716	0					
ANR	725846	ArgumentList	id . Value ( )		725716	1					
ANR	725847	Argument	id . Value ( )		725716	0					
ANR	725848	CallExpression	id . Value ( )		725716	0					
ANR	725849	Callee	id . Value		725716	0					
ANR	725850	MemberAccess	id . Value		725716	0					
ANR	725851	Identifier	id		725716	0					
ANR	725852	Identifier	Value		725716	1					
ANR	725853	ArgumentList			725716	1					
ANR	725854	ReturnStatement	return sequence_num ;	2210:1:51407:51426	725716	19	True				
ANR	725855	Identifier	sequence_num		725716	0					
ANR	725856	ReturnType	static int		725716	1					
ANR	725857	Identifier	newIdString		725716	2					
ANR	725858	ParameterList	char * * id_str_ptr		725716	3					
ANR	725859	Parameter	char * * id_str_ptr	2174:13:50423:50439	725716	0	True				
ANR	725860	ParameterType	char * *		725716	0					
ANR	725861	Identifier	id_str_ptr		725716	1					
ANR	725862	CFGEntryNode	ENTRY		725716		True				
ANR	725863	CFGExitNode	EXIT		725716		True				
ANR	725864	Symbol	id_str_ptr		725716						
ANR	725865	Symbol	sequence_num		725716						
ANR	725866	Symbol	startd_startup		725716						
ANR	725867	Symbol	my_sin . getSinful		725716						
ANR	725868	Symbol	keylen		725716						
ANR	725869	Symbol	strchr		725716						
ANR	725870	Symbol	keybuf		725716						
ANR	725871	Symbol	* id_str_ptr		725716						
ANR	725872	Symbol	my_addr		725716						
ANR	725873	Symbol	my_sin		725716						
ANR	725874	Symbol	daemonCore		725716						
ANR	725875	Symbol	Condor_Crypt_Base :: randomHexKey		725716						
ANR	725876	Symbol	id . Value		725716						
ANR	725877	Symbol	id		725716						
ANR	725878	Symbol	strdup		725716						
ANR	725879	DeclStmt									
ANR	725880	Decl							int	int	num
ANR	725881	DeclStmt									
ANR	725882	Decl							char	char [ 64 ]	buf
ANR	725883	DeclStmt									
ANR	725884	Decl							MyString	MyString	fqu
ANR	725885	DeclStmt									
ANR	725886	Decl							MyString	MyString	session_id
ANR	725887	DeclStmt									
ANR	725888	Decl							MyString	MyString	session_key
ANR	725889	DeclStmt									
ANR	725890	Decl							MyString	MyString	session_info
ANR	725891	DeclStmt									
ANR	725892	Decl							bool	bool	rc
ANR	725893	Function	ClaimId :: ~ClaimId	2281:0:53479:53958							
ANR	725894	FunctionDef	ClaimId :: ~ClaimId ()		725893	0					
ANR	725895	CompoundStatement		2282:0:53499:53958	725893	0					
ANR	725896	IfStatement	if ( claimid_parser . secSessionId ( ) )		725893	0					
ANR	725897	Condition	claimid_parser . secSessionId ( )	2283:5:53506:53534	725893	0	True				
ANR	725898	CallExpression	claimid_parser . secSessionId ( )		725893	0					
ANR	725899	Callee	claimid_parser . secSessionId		725893	0					
ANR	725900	MemberAccess	claimid_parser . secSessionId		725893	0					
ANR	725901	Identifier	claimid_parser		725893	0					
ANR	725902	Identifier	secSessionId		725893	1					
ANR	725903	ArgumentList			725893	1					
ANR	725904	CompoundStatement		2:37:38:38	725893	1					
ANR	725905	ExpressionStatement	"daemonCore -> getSecMan ( ) -> SetSessionExpiration ( claimid_parser . secSessionId ( ) , time ( NULL ) + 600 )"	2289:2:53805:53896	725893	0	True				
ANR	725906	CallExpression	"daemonCore -> getSecMan ( ) -> SetSessionExpiration ( claimid_parser . secSessionId ( ) , time ( NULL ) + 600 )"		725893	0					
ANR	725907	Callee	daemonCore -> getSecMan ( ) -> SetSessionExpiration		725893	0					
ANR	725908	PtrMemberAccess	daemonCore -> getSecMan ( ) -> SetSessionExpiration		725893	0					
ANR	725909	CallExpression	daemonCore -> getSecMan ( )		725893	0					
ANR	725910	Callee	daemonCore -> getSecMan		725893	0					
ANR	725911	PtrMemberAccess	daemonCore -> getSecMan		725893	0					
ANR	725912	Identifier	daemonCore		725893	0					
ANR	725913	Identifier	getSecMan		725893	1					
ANR	725914	ArgumentList			725893	1					
ANR	725915	Identifier	SetSessionExpiration		725893	1					
ANR	725916	ArgumentList	claimid_parser . secSessionId ( )		725893	1					
ANR	725917	Argument	claimid_parser . secSessionId ( )		725893	0					
ANR	725918	CallExpression	claimid_parser . secSessionId ( )		725893	0					
ANR	725919	Callee	claimid_parser . secSessionId		725893	0					
ANR	725920	MemberAccess	claimid_parser . secSessionId		725893	0					
ANR	725921	Identifier	claimid_parser		725893	0					
ANR	725922	Identifier	secSessionId		725893	1					
ANR	725923	ArgumentList			725893	1					
ANR	725924	Argument	time ( NULL ) + 600		725893	1					
ANR	725925	AdditiveExpression	time ( NULL ) + 600		725893	0		+			
ANR	725926	CallExpression	time ( NULL )		725893	0					
ANR	725927	Callee	time		725893	0					
ANR	725928	Identifier	time		725893	0					
ANR	725929	ArgumentList	NULL		725893	1					
ANR	725930	Argument	NULL		725893	0					
ANR	725931	Identifier	NULL		725893	0					
ANR	725932	PrimaryExpression	600		725893	1					
ANR	725933	ExpressionStatement	free ( c_id )	2292:1:53903:53915	725893	1	True				
ANR	725934	CallExpression	free ( c_id )		725893	0					
ANR	725935	Callee	free		725893	0					
ANR	725936	Identifier	free		725893	0					
ANR	725937	ArgumentList	c_id		725893	1					
ANR	725938	Argument	c_id		725893	0					
ANR	725939	Identifier	c_id		725893	0					
ANR	725940	IfStatement	if ( c_cod_id )		725893	2					
ANR	725941	Condition	c_cod_id	2293:5:53922:53929	725893	0	True				
ANR	725942	Identifier	c_cod_id		725893	0					
ANR	725943	CompoundStatement		12:16:433:433	725893	1					
ANR	725944	ExpressionStatement	free ( c_cod_id )	2294:2:53937:53953	725893	0	True				
ANR	725945	CallExpression	free ( c_cod_id )		725893	0					
ANR	725946	Callee	free		725893	0					
ANR	725947	Identifier	free		725893	0					
ANR	725948	ArgumentList	c_cod_id		725893	1					
ANR	725949	Argument	c_cod_id		725893	0					
ANR	725950	Identifier	c_cod_id		725893	0					
ANR	725951	Identifier	ClaimId :: ~ClaimId		725893	1					
ANR	725952	ParameterList			725893	2					
ANR	725953	CFGEntryNode	ENTRY		725893		True				
ANR	725954	CFGExitNode	EXIT		725893		True				
ANR	725955	Symbol	c_cod_id		725893						
ANR	725956	Symbol	NULL		725893						
ANR	725957	Symbol	* daemonCore		725893						
ANR	725958	Symbol	claimid_parser		725893						
ANR	725959	Symbol	daemonCore		725893						
ANR	725960	Symbol	daemonCore -> getSecMan		725893						
ANR	725961	Symbol	c_id		725893						
ANR	725962	Symbol	time		725893						
ANR	725963	Symbol	claimid_parser . secSessionId		725893						
ANR	725964	Function	ClaimId :: matches	2299:0:53962:54082							
ANR	725965	FunctionDef	ClaimId :: matches (const char * req_id)		725964	0					
ANR	725966	CompoundStatement		2301:0:54006:54082	725964	0					
ANR	725967	IfStatement	if ( ! req_id )		725964	0					
ANR	725968	Condition	! req_id	2302:5:54013:54019	725964	0	True				
ANR	725969	UnaryOperationExpression	! req_id		725964	0					
ANR	725970	UnaryOperator	!		725964	0					
ANR	725971	Identifier	req_id		725964	1					
ANR	725972	CompoundStatement		2:15:16:16	725964	1					
ANR	725973	ReturnStatement	return false ;	2303:2:54027:54039	725964	0	True				
ANR	725974	Identifier	false		725964	0					
ANR	725975	ReturnStatement	"return ( strcmp ( c_id , req_id ) == 0 ) ;"	2305:1:54045:54080	725964	1	True				
ANR	725976	EqualityExpression	"strcmp ( c_id , req_id ) == 0"		725964	0		==			
ANR	725977	CallExpression	"strcmp ( c_id , req_id )"		725964	0					
ANR	725978	Callee	strcmp		725964	0					
ANR	725979	Identifier	strcmp		725964	0					
ANR	725980	ArgumentList	c_id		725964	1					
ANR	725981	Argument	c_id		725964	0					
ANR	725982	Identifier	c_id		725964	0					
ANR	725983	Argument	req_id		725964	1					
ANR	725984	Identifier	req_id		725964	0					
ANR	725985	PrimaryExpression	0		725964	1					
ANR	725986	ReturnType	bool		725964	1					
ANR	725987	Identifier	ClaimId :: matches		725964	2					
ANR	725988	ParameterList	const char * req_id		725964	3					
ANR	725989	Parameter	const char * req_id	2300:18:53985:54002	725964	0	True				
ANR	725990	ParameterType	const char *		725964	0					
ANR	725991	Identifier	req_id		725964	1					
ANR	725992	CFGEntryNode	ENTRY		725964		True				
ANR	725993	CFGExitNode	EXIT		725964		True				
ANR	725994	Symbol	req_id		725964						
ANR	725995	Symbol	strcmp		725964						
ANR	725996	Symbol	false		725964						
ANR	725997	Symbol	c_id		725964						
ANR	725998	Function	ClaimId :: dropFile	2309:0:54086:55012							
ANR	725999	FunctionDef	ClaimId :: dropFile (int slot_id)		725998	0					
ANR	726000	CompoundStatement		2311:0:54124:55012	725998	0					
ANR	726001	IfStatement	"if ( ! param_boolean ( ""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"" , true ) )"		725998	0					
ANR	726002	Condition	"! param_boolean ( ""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"" , true )"	2312:5:54131:54188	725998	0	True				
ANR	726003	UnaryOperationExpression	"! param_boolean ( ""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"" , true )"		725998	0					
ANR	726004	UnaryOperator	!		725998	0					
ANR	726005	CallExpression	"param_boolean ( ""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"" , true )"		725998	1					
ANR	726006	Callee	param_boolean		725998	0					
ANR	726007	Identifier	param_boolean		725998	0					
ANR	726008	ArgumentList	"""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"""		725998	1					
ANR	726009	Argument	"""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"""		725998	0					
ANR	726010	PrimaryExpression	"""STARTD_SHOULD_WRITE_CLAIM_ID_FILE"""		725998	0					
ANR	726011	Argument	true		725998	1					
ANR	726012	Identifier	true		725998	0					
ANR	726013	CompoundStatement		2:66:67:67	725998	1					
ANR	726014	ReturnStatement	return ;	2313:2:54196:54202	725998	0	True				
ANR	726015	IdentifierDeclStatement	char * filename = startdClaimIdFile ( slot_id ) ;	2315:1:54208:54253	725998	1	True				
ANR	726016	IdentifierDecl	* filename = startdClaimIdFile ( slot_id )		725998	0					
ANR	726017	IdentifierDeclType	char *		725998	0					
ANR	726018	Identifier	filename		725998	1					
ANR	726019	AssignmentExpression	* filename = startdClaimIdFile ( slot_id )		725998	2		=			
ANR	726020	Identifier	filename		725998	0					
ANR	726021	CallExpression	startdClaimIdFile ( slot_id )		725998	1					
ANR	726022	Callee	startdClaimIdFile		725998	0					
ANR	726023	Identifier	startdClaimIdFile		725998	0					
ANR	726024	ArgumentList	slot_id		725998	1					
ANR	726025	Argument	slot_id		725998	0					
ANR	726026	Identifier	slot_id		725998	0					
ANR	726027	IfStatement	if ( ! filename )		725998	2					
ANR	726028	Condition	! filename	2316:5:54262:54271	725998	0	True				
ANR	726029	UnaryOperationExpression	! filename		725998	0					
ANR	726030	UnaryOperator	!		725998	0					
ANR	726031	Identifier	filename		725998	1					
ANR	726032	CompoundStatement		6:18:150:150	725998	1					
ANR	726033	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error getting claim id filename, not writing\\n"" )"	2317:2:54279:54348	725998	0	True				
ANR	726034	CallExpression	"dprintf ( D_ALWAYS , ""Error getting claim id filename, not writing\\n"" )"		725998	0					
ANR	726035	Callee	dprintf		725998	0					
ANR	726036	Identifier	dprintf		725998	0					
ANR	726037	ArgumentList	D_ALWAYS		725998	1					
ANR	726038	Argument	D_ALWAYS		725998	0					
ANR	726039	Identifier	D_ALWAYS		725998	0					
ANR	726040	Argument	"""Error getting claim id filename, not writing\\n"""		725998	1					
ANR	726041	PrimaryExpression	"""Error getting claim id filename, not writing\\n"""		725998	0					
ANR	726042	ReturnStatement	return ;	2318:2:54352:54358	725998	1	True				
ANR	726043	IdentifierDeclStatement	MyString filename_old = filename ;	2321:1:54365:54397	725998	3	True				
ANR	726044	IdentifierDecl	filename_old = filename		725998	0					
ANR	726045	IdentifierDeclType	MyString		725998	0					
ANR	726046	Identifier	filename_old		725998	1					
ANR	726047	AssignmentExpression	filename_old = filename		725998	2		=			
ANR	726048	Identifier	filename		725998	0					
ANR	726049	Identifier	filename		725998	1					
ANR	726050	IdentifierDeclStatement	MyString filename_new = filename ;	2322:1:54400:54432	725998	4	True				
ANR	726051	IdentifierDecl	filename_new = filename		725998	0					
ANR	726052	IdentifierDeclType	MyString		725998	0					
ANR	726053	Identifier	filename_new		725998	1					
ANR	726054	AssignmentExpression	filename_new = filename		725998	2		=			
ANR	726055	Identifier	filename		725998	0					
ANR	726056	Identifier	filename		725998	1					
ANR	726057	ExpressionStatement	free ( filename )	2323:1:54435:54451	725998	5	True				
ANR	726058	CallExpression	free ( filename )		725998	0					
ANR	726059	Callee	free		725998	0					
ANR	726060	Identifier	free		725998	0					
ANR	726061	ArgumentList	filename		725998	1					
ANR	726062	Argument	filename		725998	0					
ANR	726063	Identifier	filename		725998	0					
ANR	726064	ExpressionStatement	filename = NULL	2324:1:54454:54469	725998	6	True				
ANR	726065	AssignmentExpression	filename = NULL		725998	0		=			
ANR	726066	Identifier	filename		725998	0					
ANR	726067	Identifier	NULL		725998	1					
ANR	726068	ExpressionStatement	"filename_new += "".new"""	2326:1:54473:54495	725998	7	True				
ANR	726069	AssignmentExpression	"filename_new += "".new"""		725998	0		+=			
ANR	726070	Identifier	filename_new		725998	0					
ANR	726071	PrimaryExpression	""".new"""		725998	1					
ANR	726072	IdentifierDeclStatement	"FILE * NEW_FILE = safe_fopen_wrapper_follow ( filename_new . Value ( ) , ""w"" , 0600 ) ;"	2328:1:54499:54576	725998	8	True				
ANR	726073	IdentifierDecl	"* NEW_FILE = safe_fopen_wrapper_follow ( filename_new . Value ( ) , ""w"" , 0600 )"		725998	0					
ANR	726074	IdentifierDeclType	FILE *		725998	0					
ANR	726075	Identifier	NEW_FILE		725998	1					
ANR	726076	AssignmentExpression	"* NEW_FILE = safe_fopen_wrapper_follow ( filename_new . Value ( ) , ""w"" , 0600 )"		725998	2		=			
ANR	726077	Identifier	NEW_FILE		725998	0					
ANR	726078	CallExpression	"safe_fopen_wrapper_follow ( filename_new . Value ( ) , ""w"" , 0600 )"		725998	1					
ANR	726079	Callee	safe_fopen_wrapper_follow		725998	0					
ANR	726080	Identifier	safe_fopen_wrapper_follow		725998	0					
ANR	726081	ArgumentList	filename_new . Value ( )		725998	1					
ANR	726082	Argument	filename_new . Value ( )		725998	0					
ANR	726083	CallExpression	filename_new . Value ( )		725998	0					
ANR	726084	Callee	filename_new . Value		725998	0					
ANR	726085	MemberAccess	filename_new . Value		725998	0					
ANR	726086	Identifier	filename_new		725998	0					
ANR	726087	Identifier	Value		725998	1					
ANR	726088	ArgumentList			725998	1					
ANR	726089	Argument	"""w"""		725998	1					
ANR	726090	PrimaryExpression	"""w"""		725998	0					
ANR	726091	Argument	0600		725998	2					
ANR	726092	PrimaryExpression	0600		725998	0					
ANR	726093	IfStatement	if ( ! NEW_FILE )		725998	9					
ANR	726094	Condition	! NEW_FILE	2329:5:54583:54592	725998	0	True				
ANR	726095	UnaryOperationExpression	! NEW_FILE		725998	0					
ANR	726096	UnaryOperator	!		725998	0					
ANR	726097	Identifier	NEW_FILE		725998	1					
ANR	726098	CompoundStatement		19:18:471:471	725998	1					
ANR	726099	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: can't open claim id file: %s: %s (errno: %d)\\n"" , filename_new . Value ( ) , strerror ( errno ) , errno )"	2330:2:54600:54732	725998	0	True				
ANR	726100	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: can't open claim id file: %s: %s (errno: %d)\\n"" , filename_new . Value ( ) , strerror ( errno ) , errno )"		725998	0					
ANR	726101	Callee	dprintf		725998	0					
ANR	726102	Identifier	dprintf		725998	0					
ANR	726103	ArgumentList	D_ALWAYS		725998	1					
ANR	726104	Argument	D_ALWAYS		725998	0					
ANR	726105	Identifier	D_ALWAYS		725998	0					
ANR	726106	Argument	"""ERROR: can't open claim id file: %s: %s (errno: %d)\\n"""		725998	1					
ANR	726107	PrimaryExpression	"""ERROR: can't open claim id file: %s: %s (errno: %d)\\n"""		725998	0					
ANR	726108	Argument	filename_new . Value ( )		725998	2					
ANR	726109	CallExpression	filename_new . Value ( )		725998	0					
ANR	726110	Callee	filename_new . Value		725998	0					
ANR	726111	MemberAccess	filename_new . Value		725998	0					
ANR	726112	Identifier	filename_new		725998	0					
ANR	726113	Identifier	Value		725998	1					
ANR	726114	ArgumentList			725998	1					
ANR	726115	Argument	strerror ( errno )		725998	3					
ANR	726116	CallExpression	strerror ( errno )		725998	0					
ANR	726117	Callee	strerror		725998	0					
ANR	726118	Identifier	strerror		725998	0					
ANR	726119	ArgumentList	errno		725998	1					
ANR	726120	Argument	errno		725998	0					
ANR	726121	Identifier	errno		725998	0					
ANR	726122	Argument	errno		725998	4					
ANR	726123	Identifier	errno		725998	0					
ANR	726124	ReturnStatement	return ;	2333:3:54737:54743	725998	1	True				
ANR	726125	ExpressionStatement	"fprintf ( NEW_FILE , ""%s\\n"" , c_id )"	2335:1:54749:54782	725998	10	True				
ANR	726126	CallExpression	"fprintf ( NEW_FILE , ""%s\\n"" , c_id )"		725998	0					
ANR	726127	Callee	fprintf		725998	0					
ANR	726128	Identifier	fprintf		725998	0					
ANR	726129	ArgumentList	NEW_FILE		725998	1					
ANR	726130	Argument	NEW_FILE		725998	0					
ANR	726131	Identifier	NEW_FILE		725998	0					
ANR	726132	Argument	"""%s\\n"""		725998	1					
ANR	726133	PrimaryExpression	"""%s\\n"""		725998	0					
ANR	726134	Argument	c_id		725998	2					
ANR	726135	Identifier	c_id		725998	0					
ANR	726136	ExpressionStatement	fclose ( NEW_FILE )	2336:1:54785:54803	725998	11	True				
ANR	726137	CallExpression	fclose ( NEW_FILE )		725998	0					
ANR	726138	Callee	fclose		725998	0					
ANR	726139	Identifier	fclose		725998	0					
ANR	726140	ArgumentList	NEW_FILE		725998	1					
ANR	726141	Argument	NEW_FILE		725998	0					
ANR	726142	Identifier	NEW_FILE		725998	0					
ANR	726143	IfStatement	"if ( rotate_file ( filename_new . Value ( ) , filename_old . Value ( ) ) < 0 )"		725998	12					
ANR	726144	Condition	"rotate_file ( filename_new . Value ( ) , filename_old . Value ( ) ) < 0"	2337:5:54810:54868	725998	0	True				
ANR	726145	RelationalExpression	"rotate_file ( filename_new . Value ( ) , filename_old . Value ( ) ) < 0"		725998	0		<			
ANR	726146	CallExpression	"rotate_file ( filename_new . Value ( ) , filename_old . Value ( ) )"		725998	0					
ANR	726147	Callee	rotate_file		725998	0					
ANR	726148	Identifier	rotate_file		725998	0					
ANR	726149	ArgumentList	filename_new . Value ( )		725998	1					
ANR	726150	Argument	filename_new . Value ( )		725998	0					
ANR	726151	CallExpression	filename_new . Value ( )		725998	0					
ANR	726152	Callee	filename_new . Value		725998	0					
ANR	726153	MemberAccess	filename_new . Value		725998	0					
ANR	726154	Identifier	filename_new		725998	0					
ANR	726155	Identifier	Value		725998	1					
ANR	726156	ArgumentList			725998	1					
ANR	726157	Argument	filename_old . Value ( )		725998	1					
ANR	726158	CallExpression	filename_old . Value ( )		725998	0					
ANR	726159	Callee	filename_old . Value		725998	0					
ANR	726160	MemberAccess	filename_old . Value		725998	0					
ANR	726161	Identifier	filename_old		725998	0					
ANR	726162	Identifier	Value		725998	1					
ANR	726163	ArgumentList			725998	1					
ANR	726164	PrimaryExpression	0		725998	1					
ANR	726165	CompoundStatement		27:67:747:747	725998	1					
ANR	726166	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: failed to move %s into place, removing\\n"" , filename_new . Value ( ) )"	2338:2:54876:54973	725998	0	True				
ANR	726167	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: failed to move %s into place, removing\\n"" , filename_new . Value ( ) )"		725998	0					
ANR	726168	Callee	dprintf		725998	0					
ANR	726169	Identifier	dprintf		725998	0					
ANR	726170	ArgumentList	D_ALWAYS		725998	1					
ANR	726171	Argument	D_ALWAYS		725998	0					
ANR	726172	Identifier	D_ALWAYS		725998	0					
ANR	726173	Argument	"""ERROR: failed to move %s into place, removing\\n"""		725998	1					
ANR	726174	PrimaryExpression	"""ERROR: failed to move %s into place, removing\\n"""		725998	0					
ANR	726175	Argument	filename_new . Value ( )		725998	2					
ANR	726176	CallExpression	filename_new . Value ( )		725998	0					
ANR	726177	Callee	filename_new . Value		725998	0					
ANR	726178	MemberAccess	filename_new . Value		725998	0					
ANR	726179	Identifier	filename_new		725998	0					
ANR	726180	Identifier	Value		725998	1					
ANR	726181	ArgumentList			725998	1					
ANR	726182	ExpressionStatement	unlink ( filename_new . Value ( ) )	2340:2:54977:55007	725998	1	True				
ANR	726183	CallExpression	unlink ( filename_new . Value ( ) )		725998	0					
ANR	726184	Callee	unlink		725998	0					
ANR	726185	Identifier	unlink		725998	0					
ANR	726186	ArgumentList	filename_new . Value ( )		725998	1					
ANR	726187	Argument	filename_new . Value ( )		725998	0					
ANR	726188	CallExpression	filename_new . Value ( )		725998	0					
ANR	726189	Callee	filename_new . Value		725998	0					
ANR	726190	MemberAccess	filename_new . Value		725998	0					
ANR	726191	Identifier	filename_new		725998	0					
ANR	726192	Identifier	Value		725998	1					
ANR	726193	ArgumentList			725998	1					
ANR	726194	ReturnType	void		725998	1					
ANR	726195	Identifier	ClaimId :: dropFile		725998	2					
ANR	726196	ParameterList	int slot_id		725998	3					
ANR	726197	Parameter	int slot_id	2310:19:54110:54120	725998	0	True				
ANR	726198	ParameterType	int		725998	0					
ANR	726199	Identifier	slot_id		725998	1					
ANR	726200	CFGEntryNode	ENTRY		725998		True				
ANR	726201	CFGExitNode	EXIT		725998		True				
ANR	726202	Symbol	NEW_FILE		725998						
ANR	726203	Symbol	filename_new		725998						
ANR	726204	Symbol	errno		725998						
ANR	726205	Symbol	NULL		725998						
ANR	726206	Symbol	filename_old		725998						
ANR	726207	Symbol	filename_new . Value		725998						
ANR	726208	Symbol	D_ALWAYS		725998						
ANR	726209	Symbol	param_boolean		725998						
ANR	726210	Symbol	strerror		725998						
ANR	726211	Symbol	filename		725998						
ANR	726212	Symbol	slot_id		725998						
ANR	726213	Symbol	true		725998						
ANR	726214	Symbol	c_id		725998						
ANR	726215	Symbol	rotate_file		725998						
ANR	726216	Symbol	filename_old . Value		725998						
ANR	726217	Symbol	startdClaimIdFile		725998						
ANR	726218	Symbol	safe_fopen_wrapper_follow		725998						
ANR	726219	Function	Claim :: receiveJobClassAdUpdate	2344:0:55015:55659							
ANR	726220	FunctionDef	Claim :: receiveJobClassAdUpdate (ClassAd & update_ad)		726219	0					
ANR	726221	CompoundStatement		2346:0:55073:55659	726219	0					
ANR	726222	ExpressionStatement	ASSERT ( c_ad )	2347:1:55076:55090	726219	0	True				
ANR	726223	CallExpression	ASSERT ( c_ad )		726219	0					
ANR	726224	Callee	ASSERT		726219	0					
ANR	726225	Identifier	ASSERT		726219	0					
ANR	726226	ArgumentList	c_ad		726219	1					
ANR	726227	Argument	c_ad		726219	0					
ANR	726228	Identifier	c_ad		726219	0					
ANR	726229	ExpressionStatement	update_ad . ResetExpr ( )	2349:1:55094:55115	726219	1	True				
ANR	726230	CallExpression	update_ad . ResetExpr ( )		726219	0					
ANR	726231	Callee	update_ad . ResetExpr		726219	0					
ANR	726232	MemberAccess	update_ad . ResetExpr		726219	0					
ANR	726233	Identifier	update_ad		726219	0					
ANR	726234	Identifier	ResetExpr		726219	1					
ANR	726235	ArgumentList			726219	1					
ANR	726236	IdentifierDeclStatement	const char * name ;	2350:1:55118:55134	726219	2	True				
ANR	726237	IdentifierDecl	* name		726219	0					
ANR	726238	IdentifierDeclType	const char *		726219	0					
ANR	726239	Identifier	name		726219	1					
ANR	726240	IdentifierDeclStatement	ExprTree * expr ;	2351:1:55137:55151	726219	3	True				
ANR	726241	IdentifierDecl	* expr		726219	0					
ANR	726242	IdentifierDeclType	ExprTree *		726219	0					
ANR	726243	Identifier	expr		726219	1					
ANR	726244	WhileStatement	"while ( update_ad . NextExpr ( name , expr ) )"		726219	4					
ANR	726245	Condition	"update_ad . NextExpr ( name , expr )"	2352:8:55161:55190	726219	0	True				
ANR	726246	CallExpression	"update_ad . NextExpr ( name , expr )"		726219	0					
ANR	726247	Callee	update_ad . NextExpr		726219	0					
ANR	726248	MemberAccess	update_ad . NextExpr		726219	0					
ANR	726249	Identifier	update_ad		726219	0					
ANR	726250	Identifier	NextExpr		726219	1					
ANR	726251	ArgumentList	name		726219	1					
ANR	726252	Argument	name		726219	0					
ANR	726253	Identifier	name		726219	0					
ANR	726254	Argument	expr		726219	1					
ANR	726255	Identifier	expr		726219	0					
ANR	726256	CompoundStatement		18:2:343:376	726219	1					
ANR	726257	ExpressionStatement	ASSERT ( name )	2354:2:55199:55213	726219	0	True				
ANR	726258	CallExpression	ASSERT ( name )		726219	0					
ANR	726259	Callee	ASSERT		726219	0					
ANR	726260	Identifier	ASSERT		726219	0					
ANR	726261	ArgumentList	name		726219	1					
ANR	726262	Argument	name		726219	0					
ANR	726263	Identifier	name		726219	0					
ANR	726264	IfStatement	"if ( ! strcmp ( name , ATTR_MY_TYPE ) || ! strcmp ( name , ATTR_TARGET_TYPE ) )"		726219	1					
ANR	726265	Condition	"! strcmp ( name , ATTR_MY_TYPE ) || ! strcmp ( name , ATTR_TARGET_TYPE )"	2355:6:55221:55283	726219	0	True				
ANR	726266	OrExpression	"! strcmp ( name , ATTR_MY_TYPE ) || ! strcmp ( name , ATTR_TARGET_TYPE )"		726219	0		||			
ANR	726267	UnaryOperationExpression	"! strcmp ( name , ATTR_MY_TYPE )"		726219	0					
ANR	726268	UnaryOperator	!		726219	0					
ANR	726269	CallExpression	"strcmp ( name , ATTR_MY_TYPE )"		726219	1					
ANR	726270	Callee	strcmp		726219	0					
ANR	726271	Identifier	strcmp		726219	0					
ANR	726272	ArgumentList	name		726219	1					
ANR	726273	Argument	name		726219	0					
ANR	726274	Identifier	name		726219	0					
ANR	726275	Argument	ATTR_MY_TYPE		726219	1					
ANR	726276	Identifier	ATTR_MY_TYPE		726219	0					
ANR	726277	UnaryOperationExpression	"! strcmp ( name , ATTR_TARGET_TYPE )"		726219	1					
ANR	726278	UnaryOperator	!		726219	0					
ANR	726279	CallExpression	"strcmp ( name , ATTR_TARGET_TYPE )"		726219	1					
ANR	726280	Callee	strcmp		726219	0					
ANR	726281	Identifier	strcmp		726219	0					
ANR	726282	ArgumentList	name		726219	1					
ANR	726283	Argument	name		726219	0					
ANR	726284	Identifier	name		726219	0					
ANR	726285	Argument	ATTR_TARGET_TYPE		726219	1					
ANR	726286	Identifier	ATTR_TARGET_TYPE		726219	0					
ANR	726287	CompoundStatement		12:2:215:215	726219	1					
ANR	726288	ContinueStatement	continue ;	2359:3:55330:55338	726219	0	True				
ANR	726289	IdentifierDeclStatement	ExprTree * new_expr = expr -> Copy ( ) ;	2363:2:55417:55450	726219	2	True				
ANR	726290	IdentifierDecl	* new_expr = expr -> Copy ( )		726219	0					
ANR	726291	IdentifierDeclType	ExprTree *		726219	0					
ANR	726292	Identifier	new_expr		726219	1					
ANR	726293	AssignmentExpression	* new_expr = expr -> Copy ( )		726219	2		=			
ANR	726294	Identifier	new_expr		726219	0					
ANR	726295	CallExpression	expr -> Copy ( )		726219	1					
ANR	726296	Callee	expr -> Copy		726219	0					
ANR	726297	PtrMemberAccess	expr -> Copy		726219	0					
ANR	726298	Identifier	expr		726219	0					
ANR	726299	Identifier	Copy		726219	1					
ANR	726300	ArgumentList			726219	1					
ANR	726301	ExpressionStatement	ASSERT ( new_expr )	2364:2:55454:55472	726219	3	True				
ANR	726302	CallExpression	ASSERT ( new_expr )		726219	0					
ANR	726303	Callee	ASSERT		726219	0					
ANR	726304	Identifier	ASSERT		726219	0					
ANR	726305	ArgumentList	new_expr		726219	1					
ANR	726306	Argument	new_expr		726219	0					
ANR	726307	Identifier	new_expr		726219	0					
ANR	726308	IfStatement	"if ( ! c_ad -> Insert ( name , new_expr ) )"		726219	4					
ANR	726309	Condition	"! c_ad -> Insert ( name , new_expr )"	2365:6:55480:55510	726219	0	True				
ANR	726310	UnaryOperationExpression	"! c_ad -> Insert ( name , new_expr )"		726219	0					
ANR	726311	UnaryOperator	!		726219	0					
ANR	726312	CallExpression	"c_ad -> Insert ( name , new_expr )"		726219	1					
ANR	726313	Callee	c_ad -> Insert		726219	0					
ANR	726314	PtrMemberAccess	c_ad -> Insert		726219	0					
ANR	726315	Identifier	c_ad		726219	0					
ANR	726316	Identifier	Insert		726219	1					
ANR	726317	ArgumentList	name		726219	1					
ANR	726318	Argument	name		726219	0					
ANR	726319	Identifier	name		726219	0					
ANR	726320	Argument	new_expr		726219	1					
ANR	726321	Identifier	new_expr		726219	0					
ANR	726322	CompoundStatement		20:40:440:440	726219	1					
ANR	726323	Statement	delete	2366:3:55519:55524	726219	0	True				
ANR	726324	ExpressionStatement	new_expr	2366:10:55526:55534	726219	1	True				
ANR	726325	Identifier	new_expr		726219	0					
ANR	726326	ExpressionStatement	loadStatistics ( )	2369:1:55544:55560	726219	5	True				
ANR	726327	CallExpression	loadStatistics ( )		726219	0					
ANR	726328	Callee	loadStatistics		726219	0					
ANR	726329	Identifier	loadStatistics		726219	0					
ANR	726330	ArgumentList			726219	1					
ANR	726331	IfStatement	if ( DebugFlags & D_JOB )		726219	6					
ANR	726332	Condition	DebugFlags & D_JOB	2370:5:55567:55584	726219	0	True				
ANR	726333	BitAndExpression	DebugFlags & D_JOB		726219	0		&			
ANR	726334	Identifier	DebugFlags		726219	0					
ANR	726335	Identifier	D_JOB		726219	1					
ANR	726336	CompoundStatement		25:26:514:514	726219	1					
ANR	726337	ExpressionStatement	"dprintf ( D_JOB , ""Updated job ClassAd:\\n"" )"	2371:2:55592:55631	726219	0	True				
ANR	726338	CallExpression	"dprintf ( D_JOB , ""Updated job ClassAd:\\n"" )"		726219	0					
ANR	726339	Callee	dprintf		726219	0					
ANR	726340	Identifier	dprintf		726219	0					
ANR	726341	ArgumentList	D_JOB		726219	1					
ANR	726342	Argument	D_JOB		726219	0					
ANR	726343	Identifier	D_JOB		726219	0					
ANR	726344	Argument	"""Updated job ClassAd:\\n"""		726219	1					
ANR	726345	PrimaryExpression	"""Updated job ClassAd:\\n"""		726219	0					
ANR	726346	ExpressionStatement	c_ad -> dPrint ( D_JOB )	2372:2:55635:55654	726219	1	True				
ANR	726347	CallExpression	c_ad -> dPrint ( D_JOB )		726219	0					
ANR	726348	Callee	c_ad -> dPrint		726219	0					
ANR	726349	PtrMemberAccess	c_ad -> dPrint		726219	0					
ANR	726350	Identifier	c_ad		726219	0					
ANR	726351	Identifier	dPrint		726219	1					
ANR	726352	ArgumentList	D_JOB		726219	1					
ANR	726353	Argument	D_JOB		726219	0					
ANR	726354	Identifier	D_JOB		726219	0					
ANR	726355	ReturnType	void		726219	1					
ANR	726356	Identifier	Claim :: receiveJobClassAdUpdate		726219	2					
ANR	726357	ParameterList	ClassAd & update_ad		726219	3					
ANR	726358	Parameter	ClassAd & update_ad	2345:32:55052:55069	726219	0	True				
ANR	726359	ParameterType	ClassAd &		726219	0					
ANR	726360	Identifier	update_ad		726219	1					
ANR	726361	CFGEntryNode	ENTRY		726219		True				
ANR	726362	CFGExitNode	EXIT		726219		True				
ANR	726363	Symbol	strcmp		726219						
ANR	726364	Symbol	c_ad -> Insert		726219						
ANR	726365	Symbol	ATTR_MY_TYPE		726219						
ANR	726366	Symbol	new_expr		726219						
ANR	726367	Symbol	update_ad		726219						
ANR	726368	Symbol	D_JOB		726219						
ANR	726369	Symbol	* c_ad		726219						
ANR	726370	Symbol	DebugFlags		726219						
ANR	726371	Symbol	expr -> Copy		726219						
ANR	726372	Symbol	update_ad . NextExpr		726219						
ANR	726373	Symbol	c_ad		726219						
ANR	726374	Symbol	ATTR_TARGET_TYPE		726219						
ANR	726375	Symbol	* expr		726219						
ANR	726376	Symbol	name		726219						
ANR	726377	Symbol	expr		726219						
