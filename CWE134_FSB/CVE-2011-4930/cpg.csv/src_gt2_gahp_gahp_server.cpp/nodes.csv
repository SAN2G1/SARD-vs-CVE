command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5089022	File	data/converged/CVE-2011-4930_htcondor/src_gt2_gahp_gahp_server.cpp								
ANR	5089023	DeclStmt									
ANR	5089024	Decl							void	void ( const char * name )	unsetenv
ANR	5089025	DeclStmt									
ANR	5089026	Decl							char	"char * ( const char * name , int * offset )"	__findenv
ANR	5089027	Function	HANDLE_SYNTAX_ERROR	64:1:1604:1734							
ANR	5089028	FunctionDef	HANDLE_SYNTAX_ERROR ()		5089027	0					
ANR	5089029	CompoundStatement		65:1:1637:1734	5089027	0					
ANR	5089030	ExpressionStatement	"gahp_printf ( ""E\\n"" )"	66:1:1649:1667	5089027	0	True				
ANR	5089031	CallExpression	"gahp_printf ( ""E\\n"" )"		5089027	0					
ANR	5089032	Callee	gahp_printf		5089027	0					
ANR	5089033	Identifier	gahp_printf		5089027	0					
ANR	5089034	ArgumentList	"""E\\n"""		5089027	1					
ANR	5089035	Argument	"""E\\n"""		5089027	0					
ANR	5089036	PrimaryExpression	"""E\\n"""		5089027	0					
ANR	5089037	ExpressionStatement	gahp_sem_up ( & print_control )	67:1:1673:1700	5089027	1	True				
ANR	5089038	CallExpression	gahp_sem_up ( & print_control )		5089027	0					
ANR	5089039	Callee	gahp_sem_up		5089027	0					
ANR	5089040	Identifier	gahp_sem_up		5089027	0					
ANR	5089041	ArgumentList	& print_control		5089027	1					
ANR	5089042	Argument	& print_control		5089027	0					
ANR	5089043	UnaryOperationExpression	& print_control		5089027	0					
ANR	5089044	UnaryOperator	&		5089027	0					
ANR	5089045	Identifier	print_control		5089027	1					
ANR	5089046	ExpressionStatement	all_args_free ( user_arg )	68:1:1705:1728	5089027	2	True				
ANR	5089047	CallExpression	all_args_free ( user_arg )		5089027	0					
ANR	5089048	Callee	all_args_free		5089027	0					
ANR	5089049	Identifier	all_args_free		5089027	0					
ANR	5089050	ArgumentList	user_arg		5089027	1					
ANR	5089051	Argument	user_arg		5089027	0					
ANR	5089052	Identifier	user_arg		5089027	0					
ANR	5089053	ReturnType	define		5089027	1					
ANR	5089054	Identifier	HANDLE_SYNTAX_ERROR		5089027	2					
ANR	5089055	ParameterList			5089027	3					
ANR	5089056	CFGEntryNode	ENTRY		5089027		True				
ANR	5089057	CFGExitNode	EXIT		5089027		True				
ANR	5089058	Symbol	user_arg		5089027						
ANR	5089059	Symbol	& print_control		5089027						
ANR	5089060	DeclStmt									
ANR	5089061	Decl							char	char *	commands_list
ANR	5089062	ClassDef	gahp_semaphore	97:8:2295:2358							
ANR	5089063	DeclStmt									
ANR	5089064	Decl							globus_mutex_t	globus_mutex_t	mutex
ANR	5089065	DeclStmt									
ANR	5089066	Decl							gahp_semaphore	gahp_semaphore	gahp_semaphore
ANR	5089067	ClassDef	ptr_ref_count	101:8:2370:2462							
ANR	5089068	DeclStmt									
ANR	5089069	Decl							char	char *	key
ANR	5089070	DeclStmt									
ANR	5089071	Decl							volatile int	volatile int	count
ANR	5089072	DeclStmt									
ANR	5089073	Decl							gss_cred_id_t	gss_cred_id_t	cred
ANR	5089074	DeclStmt									
ANR	5089075	Decl							ptr_ref_count	ptr_ref_count	ptr_ref_count
ANR	5089076	ClassDef	user_arg_struct	107:8:2473:2586							
ANR	5089077	DeclStmt									
ANR	5089078	Decl							char	char *	req_id
ANR	5089079	DeclStmt									
ANR	5089080	Decl							ptr_ref_count	ptr_ref_count *	cred
ANR	5089081	DeclStmt									
ANR	5089082	Decl							globus_gram_client_attr_t	globus_gram_client_attr_t	gram_attr
ANR	5089083	DeclStmt									
ANR	5089084	Decl							user_arg_struct	user_arg_struct	user_arg_t
ANR	5089085	DeclStmt									
ANR	5089086	Decl							globus_fifo_t	globus_fifo_t	result_fifo
ANR	5089087	DeclStmt									
ANR	5089088	Decl							gahp_semaphore	gahp_semaphore	print_control
ANR	5089089	DeclStmt									
ANR	5089090	Decl							gahp_semaphore	gahp_semaphore	fifo_control
ANR	5089091	DeclStmt									
ANR	5089092	Decl							globus_io_handle_t	globus_io_handle_t	stdin_handle
ANR	5089093	DeclStmt									
ANR	5089094	Decl							globus_hashtable_t	globus_hashtable_t	handle_cache
ANR	5089095	DeclStmt									
ANR	5089096	Decl							ptr_ref_count	ptr_ref_count *	current_cred
ANR	5089097	DeclStmt									
ANR	5089098	Decl							char	char *	VersionString
ANR	5089099	DeclStmt									
ANR	5089100	Decl							volatile int	volatile int	ResultsPending
ANR	5089101	DeclStmt									
ANR	5089102	Decl							volatile int	volatile int	AsyncResults
ANR	5089103	DeclStmt									
ANR	5089104	Decl							volatile int	volatile int	GlobusActive
ANR	5089105	DeclStmt									
ANR	5089106	Decl							globus_gass_transfer_listener_t	globus_gass_transfer_listener_t [ NUM_GASS_LISTENERS ]	gassServerListeners
ANR	5089107	DeclStmt									
ANR	5089108	Decl							char	char *	ResponsePrefix
ANR	5089109	DeclStmt									
ANR	5089110	Decl							int	int ( void * )	handle_gram_job_request
ANR	5089111	DeclStmt									
ANR	5089112	Decl							int	int ( void * )	handle_gram_job_cancel
ANR	5089113	DeclStmt									
ANR	5089114	Decl							int	int ( void * )	handle_gram_job_status
ANR	5089115	DeclStmt									
ANR	5089116	Decl							int	int ( void * )	handle_gram_job_signal
ANR	5089117	DeclStmt									
ANR	5089118	Decl							int	int ( void * )	handle_gram_job_callback_register
ANR	5089119	DeclStmt									
ANR	5089120	Decl							int	int ( void * )	handle_gram_job_refresh_proxy
ANR	5089121	DeclStmt									
ANR	5089122	Decl							int	int ( void * )	handle_gass_server_init
ANR	5089123	DeclStmt									
ANR	5089124	Decl							int	int ( void * )	handle_gram_ping
ANR	5089125	DeclStmt									
ANR	5089126	Decl							int	int ( void * )	handle_gram_get_jobmanager_version
ANR	5089127	DeclStmt									
ANR	5089128	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_request
ANR	5089129	DeclStmt									
ANR	5089130	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_signal
ANR	5089131	DeclStmt									
ANR	5089132	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_status
ANR	5089133	DeclStmt									
ANR	5089134	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_ping
ANR	5089135	DeclStmt									
ANR	5089136	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_cancel
ANR	5089137	DeclStmt									
ANR	5089138	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_callback_register
ANR	5089139	DeclStmt									
ANR	5089140	Decl							void	"void ( void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc )"	callback_gram_job_refresh_proxy
ANR	5089141	DeclStmt									
ANR	5089142	Decl							void	"void ( void * arg , const char * job_contact , globus_gram_client_job_info_t * job_info )"	callback_gram_get_jobmanager_version
ANR	5089143	DeclStmt									
ANR	5089144	Decl							int	int ( void * )	handle_gram_callback_allow
ANR	5089145	DeclStmt									
ANR	5089146	Decl							int	int ( void * )	handle_gram_error_string
ANR	5089147	DeclStmt									
ANR	5089148	Decl							int	int ( void * )	handle_async_mode_on
ANR	5089149	DeclStmt									
ANR	5089150	Decl							int	int ( void * )	handle_async_mode_off
ANR	5089151	DeclStmt									
ANR	5089152	Decl							int	int ( void * )	handle_response_prefix
ANR	5089153	DeclStmt									
ANR	5089154	Decl							int	int ( void * )	handle_refresh_proxy_from_file
ANR	5089155	DeclStmt									
ANR	5089156	Decl							void	"void ( void * callback_arg , char * job_contact , int state , int error )"	gram_callback_handler
ANR	5089157	DeclStmt									
ANR	5089158	Decl							int	int ( )	main_activate_globus
ANR	5089159	DeclStmt									
ANR	5089160	Decl							void	void ( )	main_deactivate_globus
ANR	5089161	DeclStmt									
ANR	5089162	Decl							void	"void ( gahp_semaphore * , int initial_value )"	gahp_sem_init
ANR	5089163	DeclStmt									
ANR	5089164	Decl							void	void ( gahp_semaphore * )	gahp_sem_up
ANR	5089165	DeclStmt									
ANR	5089166	Decl							void	void ( gahp_semaphore * )	gahp_sem_down
ANR	5089167	DeclStmt									
ANR	5089168	Decl							void	"void ( ptr_ref_count * , int )"	unlink_ref_count
ANR	5089169	DeclStmt									
ANR	5089170	Decl							user_arg_t	"user_arg_t * ( const char * req_id , ptr_ref_count * cred )"	new_gram_arg
ANR	5089171	DeclStmt									
ANR	5089172	Decl							void	void ( user_arg_t * gram_arg )	delete_gram_arg
ANR	5089173	DeclStmt									
ANR	5089174	Decl							void	void ( char * result_line )	enqueue_results
ANR	5089175	DeclStmt									
ANR	5089176	Decl							char	char * ( const char * input_line )	escape_spaces
ANR	5089177	DeclStmt									
ANR	5089178	Decl							void	void ( void * )	all_args_free
ANR	5089179	DeclStmt									
ANR	5089180	Decl							int	"int ( char * input_line , char * * output_line )"	process_string_arg
ANR	5089181	DeclStmt									
ANR	5089182	Decl							int	"int ( char * input_line , int * result )"	process_int_arg
ANR	5089183	Function	new_gram_arg	244:0:7258:8005							
ANR	5089184	FunctionDef	"new_gram_arg (const char * req_id , ptr_ref_count * cred)"		5089183	0					
ANR	5089185	CompoundStatement		246:0:7327:8005	5089183	0					
ANR	5089186	IdentifierDeclStatement	int result ;	247:1:7330:7340	5089183	0	True				
ANR	5089187	IdentifierDecl	result		5089183	0					
ANR	5089188	IdentifierDeclType	int		5089183	0					
ANR	5089189	Identifier	result		5089183	1					
ANR	5089190	IdentifierDeclStatement	user_arg_t * gram_arg = ( user_arg_t * ) globus_libc_malloc ( sizeof ( user_arg_t ) ) ;	248:1:7343:7421	5089183	1	True				
ANR	5089191	IdentifierDecl	* gram_arg = ( user_arg_t * ) globus_libc_malloc ( sizeof ( user_arg_t ) )		5089183	0					
ANR	5089192	IdentifierDeclType	user_arg_t *		5089183	0					
ANR	5089193	Identifier	gram_arg		5089183	1					
ANR	5089194	AssignmentExpression	* gram_arg = ( user_arg_t * ) globus_libc_malloc ( sizeof ( user_arg_t ) )		5089183	2		=			
ANR	5089195	Identifier	gram_arg		5089183	0					
ANR	5089196	CastExpression	( user_arg_t * ) globus_libc_malloc ( sizeof ( user_arg_t ) )		5089183	1					
ANR	5089197	CastTarget	user_arg_t *		5089183	0					
ANR	5089198	CallExpression	globus_libc_malloc ( sizeof ( user_arg_t ) )		5089183	1					
ANR	5089199	Callee	globus_libc_malloc		5089183	0					
ANR	5089200	Identifier	globus_libc_malloc		5089183	0					
ANR	5089201	ArgumentList	sizeof ( user_arg_t )		5089183	1					
ANR	5089202	Argument	sizeof ( user_arg_t )		5089183	0					
ANR	5089203	SizeofExpression	sizeof ( user_arg_t )		5089183	0					
ANR	5089204	Sizeof	sizeof		5089183	0					
ANR	5089205	SizeofOperand	user_arg_t		5089183	1					
ANR	5089206	IfStatement	if ( req_id )		5089183	2					
ANR	5089207	Condition	req_id	249:6:7429:7434	5089183	0	True				
ANR	5089208	Identifier	req_id		5089183	0					
ANR	5089209	CompoundStatement		4:15:110:110	5089183	1					
ANR	5089210	ExpressionStatement	gram_arg -> req_id = strdup ( req_id )	250:2:7442:7477	5089183	0	True				
ANR	5089211	AssignmentExpression	gram_arg -> req_id = strdup ( req_id )		5089183	0		=			
ANR	5089212	PtrMemberAccess	gram_arg -> req_id		5089183	0					
ANR	5089213	Identifier	gram_arg		5089183	0					
ANR	5089214	Identifier	req_id		5089183	1					
ANR	5089215	CallExpression	strdup ( req_id )		5089183	1					
ANR	5089216	Callee	strdup		5089183	0					
ANR	5089217	Identifier	strdup		5089183	0					
ANR	5089218	ArgumentList	req_id		5089183	1					
ANR	5089219	Argument	req_id		5089183	0					
ANR	5089220	Identifier	req_id		5089183	0					
ANR	5089221	ElseStatement	else		5089183	0					
ANR	5089222	CompoundStatement		6:8:159:159	5089183	0					
ANR	5089223	ExpressionStatement	gram_arg -> req_id = NULL	252:2:7491:7514	5089183	0	True				
ANR	5089224	AssignmentExpression	gram_arg -> req_id = NULL		5089183	0		=			
ANR	5089225	PtrMemberAccess	gram_arg -> req_id		5089183	0					
ANR	5089226	Identifier	gram_arg		5089183	0					
ANR	5089227	Identifier	req_id		5089183	1					
ANR	5089228	Identifier	NULL		5089183	1					
ANR	5089229	ExpressionStatement	gram_arg -> cred = cred	254:1:7520:7541	5089183	3	True				
ANR	5089230	AssignmentExpression	gram_arg -> cred = cred		5089183	0		=			
ANR	5089231	PtrMemberAccess	gram_arg -> cred		5089183	0					
ANR	5089232	Identifier	gram_arg		5089183	0					
ANR	5089233	Identifier	cred		5089183	1					
ANR	5089234	Identifier	cred		5089183	1					
ANR	5089235	ExpressionStatement	result = globus_gram_client_attr_init ( & gram_arg -> gram_attr )	255:1:7544:7605	5089183	4	True				
ANR	5089236	AssignmentExpression	result = globus_gram_client_attr_init ( & gram_arg -> gram_attr )		5089183	0		=			
ANR	5089237	Identifier	result		5089183	0					
ANR	5089238	CallExpression	globus_gram_client_attr_init ( & gram_arg -> gram_attr )		5089183	1					
ANR	5089239	Callee	globus_gram_client_attr_init		5089183	0					
ANR	5089240	Identifier	globus_gram_client_attr_init		5089183	0					
ANR	5089241	ArgumentList	& gram_arg -> gram_attr		5089183	1					
ANR	5089242	Argument	& gram_arg -> gram_attr		5089183	0					
ANR	5089243	UnaryOperationExpression	& gram_arg -> gram_attr		5089183	0					
ANR	5089244	UnaryOperator	&		5089183	0					
ANR	5089245	PtrMemberAccess	gram_arg -> gram_attr		5089183	1					
ANR	5089246	Identifier	gram_arg		5089183	0					
ANR	5089247	Identifier	gram_attr		5089183	1					
ANR	5089248	IfStatement	if ( result != GLOBUS_SUCCESS )		5089183	5					
ANR	5089249	Condition	result != GLOBUS_SUCCESS	256:6:7613:7636	5089183	0	True				
ANR	5089250	EqualityExpression	result != GLOBUS_SUCCESS		5089183	0		!=			
ANR	5089251	Identifier	result		5089183	0					
ANR	5089252	Identifier	GLOBUS_SUCCESS		5089183	1					
ANR	5089253	CompoundStatement		11:33:312:312	5089183	1					
ANR	5089254	ExpressionStatement	"gahp_printf ( ""F globus_gram_client_attr_init\\\\ failed!\\n"" )"	257:2:7644:7703	5089183	0	True				
ANR	5089255	CallExpression	"gahp_printf ( ""F globus_gram_client_attr_init\\\\ failed!\\n"" )"		5089183	0					
ANR	5089256	Callee	gahp_printf		5089183	0					
ANR	5089257	Identifier	gahp_printf		5089183	0					
ANR	5089258	ArgumentList	"""F globus_gram_client_attr_init\\\\ failed!\\n"""		5089183	1					
ANR	5089259	Argument	"""F globus_gram_client_attr_init\\\\ failed!\\n"""		5089183	0					
ANR	5089260	PrimaryExpression	"""F globus_gram_client_attr_init\\\\ failed!\\n"""		5089183	0					
ANR	5089261	ExpressionStatement	_exit ( 1 )	258:2:7707:7717	5089183	1	True				
ANR	5089262	CallExpression	_exit ( 1 )		5089183	0					
ANR	5089263	Callee	_exit		5089183	0					
ANR	5089264	Identifier	_exit		5089183	0					
ANR	5089265	ArgumentList	1		5089183	1					
ANR	5089266	Argument	1		5089183	0					
ANR	5089267	PrimaryExpression	1		5089183	0					
ANR	5089268	IfStatement	if ( cred )		5089183	6					
ANR	5089269	Condition	cred	260:6:7728:7731	5089183	0	True				
ANR	5089270	Identifier	cred		5089183	0					
ANR	5089271	CompoundStatement		15:13:407:407	5089183	1					
ANR	5089272	ExpressionStatement	"result = globus_gram_client_attr_set_credential ( gram_arg -> gram_attr , cred -> cred )"	261:2:7739:7836	5089183	0	True				
ANR	5089273	AssignmentExpression	"result = globus_gram_client_attr_set_credential ( gram_arg -> gram_attr , cred -> cred )"		5089183	0		=			
ANR	5089274	Identifier	result		5089183	0					
ANR	5089275	CallExpression	"globus_gram_client_attr_set_credential ( gram_arg -> gram_attr , cred -> cred )"		5089183	1					
ANR	5089276	Callee	globus_gram_client_attr_set_credential		5089183	0					
ANR	5089277	Identifier	globus_gram_client_attr_set_credential		5089183	0					
ANR	5089278	ArgumentList	gram_arg -> gram_attr		5089183	1					
ANR	5089279	Argument	gram_arg -> gram_attr		5089183	0					
ANR	5089280	PtrMemberAccess	gram_arg -> gram_attr		5089183	0					
ANR	5089281	Identifier	gram_arg		5089183	0					
ANR	5089282	Identifier	gram_attr		5089183	1					
ANR	5089283	Argument	cred -> cred		5089183	1					
ANR	5089284	PtrMemberAccess	cred -> cred		5089183	0					
ANR	5089285	Identifier	cred		5089183	0					
ANR	5089286	Identifier	cred		5089183	1					
ANR	5089287	IfStatement	if ( result != GLOBUS_SUCCESS )		5089183	1					
ANR	5089288	Condition	result != GLOBUS_SUCCESS	263:7:7845:7868	5089183	0	True				
ANR	5089289	EqualityExpression	result != GLOBUS_SUCCESS		5089183	0		!=			
ANR	5089290	Identifier	result		5089183	0					
ANR	5089291	Identifier	GLOBUS_SUCCESS		5089183	1					
ANR	5089292	CompoundStatement		18:34:544:544	5089183	1					
ANR	5089293	ExpressionStatement	"gahp_printf ( ""F globus_gram_client_attr_set_credential\\\\ failed!\\n"" )"	264:3:7877:7946	5089183	0	True				
ANR	5089294	CallExpression	"gahp_printf ( ""F globus_gram_client_attr_set_credential\\\\ failed!\\n"" )"		5089183	0					
ANR	5089295	Callee	gahp_printf		5089183	0					
ANR	5089296	Identifier	gahp_printf		5089183	0					
ANR	5089297	ArgumentList	"""F globus_gram_client_attr_set_credential\\\\ failed!\\n"""		5089183	1					
ANR	5089298	Argument	"""F globus_gram_client_attr_set_credential\\\\ failed!\\n"""		5089183	0					
ANR	5089299	PrimaryExpression	"""F globus_gram_client_attr_set_credential\\\\ failed!\\n"""		5089183	0					
ANR	5089300	ExpressionStatement	_exit ( 1 )	265:3:7951:7961	5089183	1	True				
ANR	5089301	CallExpression	_exit ( 1 )		5089183	0					
ANR	5089302	Callee	_exit		5089183	0					
ANR	5089303	Identifier	_exit		5089183	0					
ANR	5089304	ArgumentList	1		5089183	1					
ANR	5089305	Argument	1		5089183	0					
ANR	5089306	PrimaryExpression	1		5089183	0					
ANR	5089307	ExpressionStatement	cred -> count ++	267:2:7969:7982	5089183	2	True				
ANR	5089308	PostIncDecOperationExpression	cred -> count ++		5089183	0					
ANR	5089309	PtrMemberAccess	cred -> count		5089183	0					
ANR	5089310	Identifier	cred		5089183	0					
ANR	5089311	Identifier	count		5089183	1					
ANR	5089312	IncDec	++		5089183	1					
ANR	5089313	ReturnStatement	return gram_arg ;	269:1:7988:8003	5089183	7	True				
ANR	5089314	Identifier	gram_arg		5089183	0					
ANR	5089315	ReturnType	user_arg_t *		5089183	1					
ANR	5089316	Identifier	new_gram_arg		5089183	2					
ANR	5089317	ParameterList	"const char * req_id , ptr_ref_count * cred"		5089183	3					
ANR	5089318	Parameter	const char * req_id	245:14:7285:7302	5089183	0	True				
ANR	5089319	ParameterType	const char *		5089183	0					
ANR	5089320	Identifier	req_id		5089183	1					
ANR	5089321	Parameter	ptr_ref_count * cred	245:34:7305:7323	5089183	1	True				
ANR	5089322	ParameterType	ptr_ref_count *		5089183	0					
ANR	5089323	Identifier	cred		5089183	1					
ANR	5089324	CFGEntryNode	ENTRY		5089183		True				
ANR	5089325	CFGExitNode	EXIT		5089183		True				
ANR	5089326	Symbol	cred		5089183						
ANR	5089327	Symbol	NULL		5089183						
ANR	5089328	Symbol	globus_gram_client_attr_init		5089183						
ANR	5089329	Symbol	* gram_arg		5089183						
ANR	5089330	Symbol	GLOBUS_SUCCESS		5089183						
ANR	5089331	Symbol	cred -> count		5089183						
ANR	5089332	Symbol	gram_arg -> cred		5089183						
ANR	5089333	Symbol	req_id		5089183						
ANR	5089334	Symbol	result		5089183						
ANR	5089335	Symbol	cred -> cred		5089183						
ANR	5089336	Symbol	gram_arg -> req_id		5089183						
ANR	5089337	Symbol	gram_arg -> gram_attr		5089183						
ANR	5089338	Symbol	* cred		5089183						
ANR	5089339	Symbol	globus_libc_malloc		5089183						
ANR	5089340	Symbol	globus_gram_client_attr_set_credential		5089183						
ANR	5089341	Symbol	strdup		5089183						
ANR	5089342	Symbol	gram_arg		5089183						
ANR	5089343	Symbol	& gram_arg -> gram_attr		5089183						
ANR	5089344	Function	delete_gram_arg	272:0:8008:8283							
ANR	5089345	FunctionDef	delete_gram_arg (user_arg_t * gram_arg)		5089344	0					
ANR	5089346	CompoundStatement		274:0:8053:8283	5089344	0					
ANR	5089347	IfStatement	if ( gram_arg -> req_id )		5089344	0					
ANR	5089348	Condition	gram_arg -> req_id	275:6:8061:8076	5089344	0	True				
ANR	5089349	PtrMemberAccess	gram_arg -> req_id		5089344	0					
ANR	5089350	Identifier	gram_arg		5089344	0					
ANR	5089351	Identifier	req_id		5089344	1					
ANR	5089352	CompoundStatement		2:25:26:26	5089344	1					
ANR	5089353	ExpressionStatement	globus_libc_free ( gram_arg -> req_id )	276:2:8084:8120	5089344	0	True				
ANR	5089354	CallExpression	globus_libc_free ( gram_arg -> req_id )		5089344	0					
ANR	5089355	Callee	globus_libc_free		5089344	0					
ANR	5089356	Identifier	globus_libc_free		5089344	0					
ANR	5089357	ArgumentList	gram_arg -> req_id		5089344	1					
ANR	5089358	Argument	gram_arg -> req_id		5089344	0					
ANR	5089359	PtrMemberAccess	gram_arg -> req_id		5089344	0					
ANR	5089360	Identifier	gram_arg		5089344	0					
ANR	5089361	Identifier	req_id		5089344	1					
ANR	5089362	IfStatement	if ( gram_arg -> cred )		5089344	1					
ANR	5089363	Condition	gram_arg -> cred	278:6:8131:8144	5089344	0	True				
ANR	5089364	PtrMemberAccess	gram_arg -> cred		5089344	0					
ANR	5089365	Identifier	gram_arg		5089344	0					
ANR	5089366	Identifier	cred		5089344	1					
ANR	5089367	CompoundStatement		5:23:94:94	5089344	1					
ANR	5089368	ExpressionStatement	"unlink_ref_count ( gram_arg -> cred , 1 )"	279:2:8152:8189	5089344	0	True				
ANR	5089369	CallExpression	"unlink_ref_count ( gram_arg -> cred , 1 )"		5089344	0					
ANR	5089370	Callee	unlink_ref_count		5089344	0					
ANR	5089371	Identifier	unlink_ref_count		5089344	0					
ANR	5089372	ArgumentList	gram_arg -> cred		5089344	1					
ANR	5089373	Argument	gram_arg -> cred		5089344	0					
ANR	5089374	PtrMemberAccess	gram_arg -> cred		5089344	0					
ANR	5089375	Identifier	gram_arg		5089344	0					
ANR	5089376	Identifier	cred		5089344	1					
ANR	5089377	Argument	1		5089344	1					
ANR	5089378	PrimaryExpression	1		5089344	0					
ANR	5089379	ExpressionStatement	globus_gram_client_attr_destroy ( & gram_arg -> gram_attr )	281:1:8195:8250	5089344	2	True				
ANR	5089380	CallExpression	globus_gram_client_attr_destroy ( & gram_arg -> gram_attr )		5089344	0					
ANR	5089381	Callee	globus_gram_client_attr_destroy		5089344	0					
ANR	5089382	Identifier	globus_gram_client_attr_destroy		5089344	0					
ANR	5089383	ArgumentList	& gram_arg -> gram_attr		5089344	1					
ANR	5089384	Argument	& gram_arg -> gram_attr		5089344	0					
ANR	5089385	UnaryOperationExpression	& gram_arg -> gram_attr		5089344	0					
ANR	5089386	UnaryOperator	&		5089344	0					
ANR	5089387	PtrMemberAccess	gram_arg -> gram_attr		5089344	1					
ANR	5089388	Identifier	gram_arg		5089344	0					
ANR	5089389	Identifier	gram_attr		5089344	1					
ANR	5089390	ExpressionStatement	globus_libc_free ( gram_arg )	282:1:8253:8281	5089344	3	True				
ANR	5089391	CallExpression	globus_libc_free ( gram_arg )		5089344	0					
ANR	5089392	Callee	globus_libc_free		5089344	0					
ANR	5089393	Identifier	globus_libc_free		5089344	0					
ANR	5089394	ArgumentList	gram_arg		5089344	1					
ANR	5089395	Argument	gram_arg		5089344	0					
ANR	5089396	Identifier	gram_arg		5089344	0					
ANR	5089397	ReturnType	void		5089344	1					
ANR	5089398	Identifier	delete_gram_arg		5089344	2					
ANR	5089399	ParameterList	user_arg_t * gram_arg		5089344	3					
ANR	5089400	Parameter	user_arg_t * gram_arg	273:17:8030:8049	5089344	0	True				
ANR	5089401	ParameterType	user_arg_t *		5089344	0					
ANR	5089402	Identifier	gram_arg		5089344	1					
ANR	5089403	CFGEntryNode	ENTRY		5089344		True				
ANR	5089404	CFGExitNode	EXIT		5089344		True				
ANR	5089405	Symbol	gram_arg -> req_id		5089344						
ANR	5089406	Symbol	* gram_arg		5089344						
ANR	5089407	Symbol	gram_arg		5089344						
ANR	5089408	Symbol	gram_arg -> cred		5089344						
ANR	5089409	Symbol	& gram_arg -> gram_attr		5089344						
ANR	5089410	Function	gahp_printf	285:0:8286:8809							
ANR	5089411	FunctionDef	gahp_printf (const char * format)		5089410	0					
ANR	5089412	CompoundStatement		287:0:8327:8809	5089410	0					
ANR	5089413	IdentifierDeclStatement	int ret_val ;	288:1:8330:8341	5089410	0	True				
ANR	5089414	IdentifierDecl	ret_val		5089410	0					
ANR	5089415	IdentifierDeclType	int		5089410	0					
ANR	5089416	Identifier	ret_val		5089410	1					
ANR	5089417	IdentifierDeclStatement	va_list ap ;	289:1:8344:8354	5089410	1	True				
ANR	5089418	IdentifierDecl	ap		5089410	0					
ANR	5089419	IdentifierDeclType	va_list		5089410	0					
ANR	5089420	Identifier	ap		5089410	1					
ANR	5089421	IdentifierDeclStatement	char buf [ 10000 ] ;	290:1:8357:8372	5089410	2	True				
ANR	5089422	IdentifierDecl	buf [ 10000 ]		5089410	0					
ANR	5089423	IdentifierDeclType	char [ 10000 ]		5089410	0					
ANR	5089424	Identifier	buf		5089410	1					
ANR	5089425	PrimaryExpression	10000		5089410	2					
ANR	5089426	IdentifierDeclStatement	int actual ;	291:1:8375:8385	5089410	3	True				
ANR	5089427	IdentifierDecl	actual		5089410	0					
ANR	5089428	IdentifierDeclType	int		5089410	0					
ANR	5089429	Identifier	actual		5089410	1					
ANR	5089430	ExpressionStatement	globus_libc_lock ( )	293:1:8389:8407	5089410	4	True				
ANR	5089431	CallExpression	globus_libc_lock ( )		5089410	0					
ANR	5089432	Callee	globus_libc_lock		5089410	0					
ANR	5089433	Identifier	globus_libc_lock		5089410	0					
ANR	5089434	ArgumentList			5089410	1					
ANR	5089435	ExpressionStatement	"va_start ( ap , format )"	295:1:8411:8431	5089410	5	True				
ANR	5089436	CallExpression	"va_start ( ap , format )"		5089410	0					
ANR	5089437	Callee	va_start		5089410	0					
ANR	5089438	Identifier	va_start		5089410	0					
ANR	5089439	ArgumentList	ap		5089410	1					
ANR	5089440	Argument	ap		5089410	0					
ANR	5089441	Identifier	ap		5089410	0					
ANR	5089442	Argument	format		5089410	1					
ANR	5089443	Identifier	format		5089410	0					
ANR	5089444	ExpressionStatement	"actual = vsnprintf ( buf , sizeof ( buf ) / sizeof ( buf [ 0 ] ) , format , ap )"	296:1:8434:8497	5089410	6	True				
ANR	5089445	AssignmentExpression	"actual = vsnprintf ( buf , sizeof ( buf ) / sizeof ( buf [ 0 ] ) , format , ap )"		5089410	0		=			
ANR	5089446	Identifier	actual		5089410	0					
ANR	5089447	CallExpression	"vsnprintf ( buf , sizeof ( buf ) / sizeof ( buf [ 0 ] ) , format , ap )"		5089410	1					
ANR	5089448	Callee	vsnprintf		5089410	0					
ANR	5089449	Identifier	vsnprintf		5089410	0					
ANR	5089450	ArgumentList	buf		5089410	1					
ANR	5089451	Argument	buf		5089410	0					
ANR	5089452	Identifier	buf		5089410	0					
ANR	5089453	Argument	sizeof ( buf ) / sizeof ( buf [ 0 ] )		5089410	1					
ANR	5089454	MultiplicativeExpression	sizeof ( buf ) / sizeof ( buf [ 0 ] )		5089410	0		/			
ANR	5089455	SizeofExpression	sizeof ( buf )		5089410	0					
ANR	5089456	Sizeof	sizeof		5089410	0					
ANR	5089457	SizeofOperand	buf		5089410	1					
ANR	5089458	SizeofExpression	sizeof ( buf [ 0 ] )		5089410	1					
ANR	5089459	Sizeof	sizeof		5089410	0					
ANR	5089460	ArrayIndexing	buf [ 0 ]		5089410	1					
ANR	5089461	Identifier	buf		5089410	0					
ANR	5089462	PrimaryExpression	0		5089410	1					
ANR	5089463	Argument	format		5089410	2					
ANR	5089464	Identifier	format		5089410	0					
ANR	5089465	Argument	ap		5089410	3					
ANR	5089466	Identifier	ap		5089410	0					
ANR	5089467	ExpressionStatement	va_end ( ap )	297:1:8500:8510	5089410	7	True				
ANR	5089468	CallExpression	va_end ( ap )		5089410	0					
ANR	5089469	Callee	va_end		5089410	0					
ANR	5089470	Identifier	va_end		5089410	0					
ANR	5089471	ArgumentList	ap		5089410	1					
ANR	5089472	Argument	ap		5089410	0					
ANR	5089473	Identifier	ap		5089410	0					
ANR	5089474	IfStatement	if ( actual >= ( int ) ( sizeof ( buf ) / sizeof ( buf [ 0 ] ) ) )		5089410	8					
ANR	5089475	Condition	actual >= ( int ) ( sizeof ( buf ) / sizeof ( buf [ 0 ] ) )	298:4:8516:8558	5089410	0	True				
ANR	5089476	RelationalExpression	actual >= ( int ) ( sizeof ( buf ) / sizeof ( buf [ 0 ] ) )		5089410	0		>=			
ANR	5089477	Identifier	actual		5089410	0					
ANR	5089478	CastExpression	( int ) ( sizeof ( buf ) / sizeof ( buf [ 0 ] ) )		5089410	1					
ANR	5089479	CastTarget	int		5089410	0					
ANR	5089480	MultiplicativeExpression	sizeof ( buf ) / sizeof ( buf [ 0 ] )		5089410	1		/			
ANR	5089481	SizeofExpression	sizeof ( buf )		5089410	0					
ANR	5089482	Sizeof	sizeof		5089410	0					
ANR	5089483	SizeofOperand	buf		5089410	1					
ANR	5089484	SizeofExpression	sizeof ( buf [ 0 ] )		5089410	1					
ANR	5089485	Sizeof	sizeof		5089410	0					
ANR	5089486	ArrayIndexing	buf [ 0 ]		5089410	1					
ANR	5089487	Identifier	buf		5089410	0					
ANR	5089488	PrimaryExpression	0		5089410	1					
ANR	5089489	CompoundStatement		12:49:233:233	5089410	1					
ANR	5089490	ExpressionStatement	"printf ( ""gahp_printf\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"	299:2:8565:8617	5089410	0	True				
ANR	5089491	CallExpression	"printf ( ""gahp_printf\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"		5089410	0					
ANR	5089492	Callee	printf		5089410	0					
ANR	5089493	Identifier	printf		5089410	0					
ANR	5089494	ArgumentList	"""gahp_printf\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5089410	1					
ANR	5089495	Argument	"""gahp_printf\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5089410	0					
ANR	5089496	PrimaryExpression	"""gahp_printf\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5089410	0					
ANR	5089497	ExpressionStatement	_exit ( 7 )	300:2:8621:8629	5089410	1	True				
ANR	5089498	CallExpression	_exit ( 7 )		5089410	0					
ANR	5089499	Callee	_exit		5089410	0					
ANR	5089500	Identifier	_exit		5089410	0					
ANR	5089501	ArgumentList	7		5089410	1					
ANR	5089502	Argument	7		5089410	0					
ANR	5089503	PrimaryExpression	7		5089410	0					
ANR	5089504	IfStatement	if ( ResponsePrefix )		5089410	9					
ANR	5089505	Condition	ResponsePrefix	303:5:8640:8653	5089410	0	True				
ANR	5089506	Identifier	ResponsePrefix		5089410	0					
ANR	5089507	CompoundStatement		17:21:328:328	5089410	1					
ANR	5089508	ExpressionStatement	"ret_val = printf ( ""%s%s"" , ResponsePrefix , buf )"	304:2:8660:8703	5089410	0	True				
ANR	5089509	AssignmentExpression	"ret_val = printf ( ""%s%s"" , ResponsePrefix , buf )"		5089410	0		=			
ANR	5089510	Identifier	ret_val		5089410	0					
ANR	5089511	CallExpression	"printf ( ""%s%s"" , ResponsePrefix , buf )"		5089410	1					
ANR	5089512	Callee	printf		5089410	0					
ANR	5089513	Identifier	printf		5089410	0					
ANR	5089514	ArgumentList	"""%s%s"""		5089410	1					
ANR	5089515	Argument	"""%s%s"""		5089410	0					
ANR	5089516	PrimaryExpression	"""%s%s"""		5089410	0					
ANR	5089517	Argument	ResponsePrefix		5089410	1					
ANR	5089518	Identifier	ResponsePrefix		5089410	0					
ANR	5089519	Argument	buf		5089410	2					
ANR	5089520	Identifier	buf		5089410	0					
ANR	5089521	ElseStatement	else		5089410	0					
ANR	5089522	CompoundStatement		19:8:385:385	5089410	0					
ANR	5089523	ExpressionStatement	"ret_val = printf ( ""%s"" , buf )"	306:2:8717:8743	5089410	0	True				
ANR	5089524	AssignmentExpression	"ret_val = printf ( ""%s"" , buf )"		5089410	0		=			
ANR	5089525	Identifier	ret_val		5089410	0					
ANR	5089526	CallExpression	"printf ( ""%s"" , buf )"		5089410	1					
ANR	5089527	Callee	printf		5089410	0					
ANR	5089528	Identifier	printf		5089410	0					
ANR	5089529	ArgumentList	"""%s"""		5089410	1					
ANR	5089530	Argument	"""%s"""		5089410	0					
ANR	5089531	PrimaryExpression	"""%s"""		5089410	0					
ANR	5089532	Argument	buf		5089410	1					
ANR	5089533	Identifier	buf		5089410	0					
ANR	5089534	ExpressionStatement	fflush ( stdout )	309:1:8750:8764	5089410	10	True				
ANR	5089535	CallExpression	fflush ( stdout )		5089410	0					
ANR	5089536	Callee	fflush		5089410	0					
ANR	5089537	Identifier	fflush		5089410	0					
ANR	5089538	ArgumentList	stdout		5089410	1					
ANR	5089539	Argument	stdout		5089410	0					
ANR	5089540	Identifier	stdout		5089410	0					
ANR	5089541	ExpressionStatement	globus_libc_unlock ( )	311:1:8768:8788	5089410	11	True				
ANR	5089542	CallExpression	globus_libc_unlock ( )		5089410	0					
ANR	5089543	Callee	globus_libc_unlock		5089410	0					
ANR	5089544	Identifier	globus_libc_unlock		5089410	0					
ANR	5089545	ArgumentList			5089410	1					
ANR	5089546	ReturnStatement	return ret_val ;	313:1:8793:8807	5089410	12	True				
ANR	5089547	Identifier	ret_val		5089410	0					
ANR	5089548	ReturnType	int		5089410	1					
ANR	5089549	Identifier	gahp_printf		5089410	2					
ANR	5089550	ParameterList	const char * format		5089410	3					
ANR	5089551	Parameter	const char * format	286:12:8302:8319	5089410	0	True				
ANR	5089552	ParameterType	const char *		5089410	0					
ANR	5089553	Identifier	format		5089410	1					
ANR	5089554	CFGEntryNode	ENTRY		5089410		True				
ANR	5089555	CFGExitNode	EXIT		5089410		True				
ANR	5089556	Symbol	actual		5089410						
ANR	5089557	Symbol	buf		5089410						
ANR	5089558	Symbol	* buf		5089410						
ANR	5089559	Symbol	stdout		5089410						
ANR	5089560	Symbol	format		5089410						
ANR	5089561	Symbol	ret_val		5089410						
ANR	5089562	Symbol	vsnprintf		5089410						
ANR	5089563	Symbol	ResponsePrefix		5089410						
ANR	5089564	Symbol	ap		5089410						
ANR	5089565	Symbol	printf		5089410						
ANR	5089566	Function	gahp_sem_init	317:0:8813:8915							
ANR	5089567	FunctionDef	"gahp_sem_init (gahp_semaphore * sem , int initial_value)"		5089566	0					
ANR	5089568	CompoundStatement		319:0:8874:8915	5089566	0					
ANR	5089569	ExpressionStatement	"globus_mutex_init ( & sem -> mutex , NULL )"	320:1:8877:8913	5089566	0	True				
ANR	5089570	CallExpression	"globus_mutex_init ( & sem -> mutex , NULL )"		5089566	0					
ANR	5089571	Callee	globus_mutex_init		5089566	0					
ANR	5089572	Identifier	globus_mutex_init		5089566	0					
ANR	5089573	ArgumentList	& sem -> mutex		5089566	1					
ANR	5089574	Argument	& sem -> mutex		5089566	0					
ANR	5089575	UnaryOperationExpression	& sem -> mutex		5089566	0					
ANR	5089576	UnaryOperator	&		5089566	0					
ANR	5089577	PtrMemberAccess	sem -> mutex		5089566	1					
ANR	5089578	Identifier	sem		5089566	0					
ANR	5089579	Identifier	mutex		5089566	1					
ANR	5089580	Argument	NULL		5089566	1					
ANR	5089581	Identifier	NULL		5089566	0					
ANR	5089582	ReturnType	void		5089566	1					
ANR	5089583	Identifier	gahp_sem_init		5089566	2					
ANR	5089584	ParameterList	"gahp_semaphore * sem , int initial_value"		5089566	3					
ANR	5089585	Parameter	gahp_semaphore * sem	318:15:8833:8851	5089566	0	True				
ANR	5089586	ParameterType	gahp_semaphore *		5089566	0					
ANR	5089587	Identifier	sem		5089566	1					
ANR	5089588	Parameter	int initial_value	318:36:8854:8870	5089566	1	True				
ANR	5089589	ParameterType	int		5089566	0					
ANR	5089590	Identifier	initial_value		5089566	1					
ANR	5089591	CFGEntryNode	ENTRY		5089566		True				
ANR	5089592	CFGExitNode	EXIT		5089566		True				
ANR	5089593	Symbol	initial_value		5089566						
ANR	5089594	Symbol	NULL		5089566						
ANR	5089595	Symbol	sem		5089566						
ANR	5089596	Symbol	& sem -> mutex		5089566						
ANR	5089597	Function	gahp_sem_up	323:0:8918:8994							
ANR	5089598	FunctionDef	gahp_sem_up (gahp_semaphore * sem)		5089597	0					
ANR	5089599	CompoundStatement		325:0:8957:8994	5089597	0					
ANR	5089600	ExpressionStatement	globus_mutex_unlock ( & sem -> mutex )	326:1:8960:8992	5089597	0	True				
ANR	5089601	CallExpression	globus_mutex_unlock ( & sem -> mutex )		5089597	0					
ANR	5089602	Callee	globus_mutex_unlock		5089597	0					
ANR	5089603	Identifier	globus_mutex_unlock		5089597	0					
ANR	5089604	ArgumentList	& sem -> mutex		5089597	1					
ANR	5089605	Argument	& sem -> mutex		5089597	0					
ANR	5089606	UnaryOperationExpression	& sem -> mutex		5089597	0					
ANR	5089607	UnaryOperator	&		5089597	0					
ANR	5089608	PtrMemberAccess	sem -> mutex		5089597	1					
ANR	5089609	Identifier	sem		5089597	0					
ANR	5089610	Identifier	mutex		5089597	1					
ANR	5089611	ReturnType	void		5089597	1					
ANR	5089612	Identifier	gahp_sem_up		5089597	2					
ANR	5089613	ParameterList	gahp_semaphore * sem		5089597	3					
ANR	5089614	Parameter	gahp_semaphore * sem	324:13:8936:8954	5089597	0	True				
ANR	5089615	ParameterType	gahp_semaphore *		5089597	0					
ANR	5089616	Identifier	sem		5089597	1					
ANR	5089617	CFGEntryNode	ENTRY		5089597		True				
ANR	5089618	CFGExitNode	EXIT		5089597		True				
ANR	5089619	Symbol	sem		5089597						
ANR	5089620	Symbol	& sem -> mutex		5089597						
ANR	5089621	Function	gahp_sem_down	329:0:8997:9073							
ANR	5089622	FunctionDef	gahp_sem_down (gahp_semaphore * sem)		5089621	0					
ANR	5089623	CompoundStatement		331:0:9038:9073	5089621	0					
ANR	5089624	ExpressionStatement	globus_mutex_lock ( & sem -> mutex )	332:1:9041:9071	5089621	0	True				
ANR	5089625	CallExpression	globus_mutex_lock ( & sem -> mutex )		5089621	0					
ANR	5089626	Callee	globus_mutex_lock		5089621	0					
ANR	5089627	Identifier	globus_mutex_lock		5089621	0					
ANR	5089628	ArgumentList	& sem -> mutex		5089621	1					
ANR	5089629	Argument	& sem -> mutex		5089621	0					
ANR	5089630	UnaryOperationExpression	& sem -> mutex		5089621	0					
ANR	5089631	UnaryOperator	&		5089621	0					
ANR	5089632	PtrMemberAccess	sem -> mutex		5089621	1					
ANR	5089633	Identifier	sem		5089621	0					
ANR	5089634	Identifier	mutex		5089621	1					
ANR	5089635	ReturnType	void		5089621	1					
ANR	5089636	Identifier	gahp_sem_down		5089621	2					
ANR	5089637	ParameterList	gahp_semaphore * sem		5089621	3					
ANR	5089638	Parameter	gahp_semaphore * sem	330:15:9017:9035	5089621	0	True				
ANR	5089639	ParameterType	gahp_semaphore *		5089621	0					
ANR	5089640	Identifier	sem		5089621	1					
ANR	5089641	CFGEntryNode	ENTRY		5089621		True				
ANR	5089642	CFGExitNode	EXIT		5089621		True				
ANR	5089643	Symbol	sem		5089621						
ANR	5089644	Symbol	& sem -> mutex		5089621						
ANR	5089645	Function	process_string_arg	336:0:9077:9689							
ANR	5089646	FunctionDef	"process_string_arg (char * input_line , char * * output)"		5089645	0					
ANR	5089647	CompoundStatement		338:0:9135:9689	5089645	0					
ANR	5089648	IdentifierDeclStatement	int i = 0 ;	339:1:9138:9147	5089645	0	True				
ANR	5089649	IdentifierDecl	i = 0		5089645	0					
ANR	5089650	IdentifierDeclType	int		5089645	0					
ANR	5089651	Identifier	i		5089645	1					
ANR	5089652	AssignmentExpression	i = 0		5089645	2		=			
ANR	5089653	Identifier	i		5089645	0					
ANR	5089654	PrimaryExpression	0		5089645	1					
ANR	5089655	IfStatement	if ( ! input_line )		5089645	1					
ANR	5089656	Condition	! input_line	343:7:9248:9258	5089645	0	True				
ANR	5089657	UnaryOperationExpression	! input_line		5089645	0					
ANR	5089658	UnaryOperator	!		5089645	0					
ANR	5089659	Identifier	input_line		5089645	1					
ANR	5089660	CompoundStatement		6:19:124:124	5089645	1					
ANR	5089661	ReturnStatement	return false ;	344:8:9270:9282	5089645	0	True				
ANR	5089662	Identifier	false		5089645	0					
ANR	5089663	ExpressionStatement	i = strlen ( input_line )	346:1:9291:9313	5089645	2	True				
ANR	5089664	AssignmentExpression	i = strlen ( input_line )		5089645	0		=			
ANR	5089665	Identifier	i		5089645	0					
ANR	5089666	CallExpression	strlen ( input_line )		5089645	1					
ANR	5089667	Callee	strlen		5089645	0					
ANR	5089668	Identifier	strlen		5089645	0					
ANR	5089669	ArgumentList	input_line		5089645	1					
ANR	5089670	Argument	input_line		5089645	0					
ANR	5089671	Identifier	input_line		5089645	0					
ANR	5089672	IfStatement	if ( ! i )		5089645	3					
ANR	5089673	Condition	! i	347:4:9319:9320	5089645	0	True				
ANR	5089674	UnaryOperationExpression	! i		5089645	0					
ANR	5089675	UnaryOperator	!		5089645	0					
ANR	5089676	Identifier	i		5089645	1					
ANR	5089677	CompoundStatement		10:8:187:187	5089645	1					
ANR	5089678	ReturnStatement	return false ;	348:2:9327:9339	5089645	0	True				
ANR	5089679	Identifier	false		5089645	0					
ANR	5089680	ExpressionStatement	* output = input_line	352:1:9396:9416	5089645	4	True				
ANR	5089681	AssignmentExpression	* output = input_line		5089645	0		=			
ANR	5089682	UnaryOperationExpression	* output		5089645	0					
ANR	5089683	UnaryOperator	*		5089645	0					
ANR	5089684	Identifier	output		5089645	1					
ANR	5089685	Identifier	input_line		5089645	1					
ANR	5089686	IfStatement	"if ( ! strcasecmp ( input_line , NULLSTRING ) )"		5089645	5					
ANR	5089687	Condition	"! strcasecmp ( input_line , NULLSTRING )"	357:7:9609:9643	5089645	0	True				
ANR	5089688	UnaryOperationExpression	"! strcasecmp ( input_line , NULLSTRING )"		5089645	0					
ANR	5089689	UnaryOperator	!		5089645	0					
ANR	5089690	CallExpression	"strcasecmp ( input_line , NULLSTRING )"		5089645	1					
ANR	5089691	Callee	strcasecmp		5089645	0					
ANR	5089692	Identifier	strcasecmp		5089645	0					
ANR	5089693	ArgumentList	input_line		5089645	1					
ANR	5089694	Argument	input_line		5089645	0					
ANR	5089695	Identifier	input_line		5089645	0					
ANR	5089696	Argument	NULLSTRING		5089645	1					
ANR	5089697	Identifier	NULLSTRING		5089645	0					
ANR	5089698	CompoundStatement		20:44:510:510	5089645	1					
ANR	5089699	ExpressionStatement	* output = NULL	358:5:9653:9667	5089645	0	True				
ANR	5089700	AssignmentExpression	* output = NULL		5089645	0		=			
ANR	5089701	UnaryOperationExpression	* output		5089645	0					
ANR	5089702	UnaryOperator	*		5089645	0					
ANR	5089703	Identifier	output		5089645	1					
ANR	5089704	Identifier	NULL		5089645	1					
ANR	5089705	ReturnStatement	return true ;	361:1:9676:9687	5089645	6	True				
ANR	5089706	Identifier	true		5089645	0					
ANR	5089707	ReturnType	int		5089645	1					
ANR	5089708	Identifier	process_string_arg		5089645	2					
ANR	5089709	ParameterList	"char * input_line , char * * output"		5089645	3					
ANR	5089710	Parameter	char * input_line	337:20:9102:9117	5089645	0	True				
ANR	5089711	ParameterType	char *		5089645	0					
ANR	5089712	Identifier	input_line		5089645	1					
ANR	5089713	Parameter	char * * output	337:38:9120:9132	5089645	1	True				
ANR	5089714	ParameterType	char * *		5089645	0					
ANR	5089715	Identifier	output		5089645	1					
ANR	5089716	CFGEntryNode	ENTRY		5089645		True				
ANR	5089717	CFGExitNode	EXIT		5089645		True				
ANR	5089718	Symbol	output		5089645						
ANR	5089719	Symbol	strlen		5089645						
ANR	5089720	Symbol	NULL		5089645						
ANR	5089721	Symbol	false		5089645						
ANR	5089722	Symbol	true		5089645						
ANR	5089723	Symbol	i		5089645						
ANR	5089724	Symbol	input_line		5089645						
ANR	5089725	Symbol	NULLSTRING		5089645						
ANR	5089726	Symbol	strcasecmp		5089645						
ANR	5089727	Symbol	* output		5089645						
ANR	5089728	Function	process_int_arg	364:0:9692:9831							
ANR	5089729	FunctionDef	"process_int_arg (char * input , int * output)"		5089728	0					
ANR	5089730	CompoundStatement		366:0:9740:9831	5089728	0					
ANR	5089731	IfStatement	if ( input && strlen ( input ) )		5089728	0					
ANR	5089732	Condition	input && strlen ( input )	367:5:9747:9768	5089728	0	True				
ANR	5089733	AndExpression	input && strlen ( input )		5089728	0		&&			
ANR	5089734	Identifier	input		5089728	0					
ANR	5089735	CallExpression	strlen ( input )		5089728	1					
ANR	5089736	Callee	strlen		5089728	0					
ANR	5089737	Identifier	strlen		5089728	0					
ANR	5089738	ArgumentList	input		5089728	1					
ANR	5089739	Argument	input		5089728	0					
ANR	5089740	Identifier	input		5089728	0					
ANR	5089741	CompoundStatement		2:29:30:30	5089728	1					
ANR	5089742	ExpressionStatement	* output = atoi ( input )	368:2:9775:9796	5089728	0	True				
ANR	5089743	AssignmentExpression	* output = atoi ( input )		5089728	0		=			
ANR	5089744	UnaryOperationExpression	* output		5089728	0					
ANR	5089745	UnaryOperator	*		5089728	0					
ANR	5089746	Identifier	output		5089728	1					
ANR	5089747	CallExpression	atoi ( input )		5089728	1					
ANR	5089748	Callee	atoi		5089728	0					
ANR	5089749	Identifier	atoi		5089728	0					
ANR	5089750	ArgumentList	input		5089728	1					
ANR	5089751	Argument	input		5089728	0					
ANR	5089752	Identifier	input		5089728	0					
ANR	5089753	ReturnStatement	return true ;	369:2:9800:9811	5089728	1	True				
ANR	5089754	Identifier	true		5089728	0					
ANR	5089755	ReturnStatement	return false ;	371:1:9817:9829	5089728	1	True				
ANR	5089756	Identifier	false		5089728	0					
ANR	5089757	ReturnType	int		5089728	1					
ANR	5089758	Identifier	process_int_arg		5089728	2					
ANR	5089759	ParameterList	"char * input , int * output"		5089728	3					
ANR	5089760	Parameter	char * input	365:17:9714:9724	5089728	0	True				
ANR	5089761	ParameterType	char *		5089728	0					
ANR	5089762	Identifier	input		5089728	1					
ANR	5089763	Parameter	int * output	365:30:9727:9737	5089728	1	True				
ANR	5089764	ParameterType	int *		5089728	0					
ANR	5089765	Identifier	output		5089728	1					
ANR	5089766	CFGEntryNode	ENTRY		5089728		True				
ANR	5089767	CFGExitNode	EXIT		5089728		True				
ANR	5089768	Symbol	output		5089728						
ANR	5089769	Symbol	atoi		5089728						
ANR	5089770	Symbol	input		5089728						
ANR	5089771	Symbol	strlen		5089728						
ANR	5089772	Symbol	true		5089728						
ANR	5089773	Symbol	false		5089728						
ANR	5089774	Symbol	* output		5089728						
ANR	5089775	Function	enqueue_results	374:0:9834:10149							
ANR	5089776	FunctionDef	enqueue_results (char * output)		5089775	0					
ANR	5089777	CompoundStatement		376:0:9871:10149	5089775	0					
ANR	5089778	ExpressionStatement	gahp_sem_down ( & print_control )	377:1:9874:9903	5089775	0	True				
ANR	5089779	CallExpression	gahp_sem_down ( & print_control )		5089775	0					
ANR	5089780	Callee	gahp_sem_down		5089775	0					
ANR	5089781	Identifier	gahp_sem_down		5089775	0					
ANR	5089782	ArgumentList	& print_control		5089775	1					
ANR	5089783	Argument	& print_control		5089775	0					
ANR	5089784	UnaryOperationExpression	& print_control		5089775	0					
ANR	5089785	UnaryOperator	&		5089775	0					
ANR	5089786	Identifier	print_control		5089775	1					
ANR	5089787	ExpressionStatement	gahp_sem_down ( & fifo_control )	378:4:9909:9937	5089775	1	True				
ANR	5089788	CallExpression	gahp_sem_down ( & fifo_control )		5089775	0					
ANR	5089789	Callee	gahp_sem_down		5089775	0					
ANR	5089790	Identifier	gahp_sem_down		5089775	0					
ANR	5089791	ArgumentList	& fifo_control		5089775	1					
ANR	5089792	Argument	& fifo_control		5089775	0					
ANR	5089793	UnaryOperationExpression	& fifo_control		5089775	0					
ANR	5089794	UnaryOperator	&		5089775	0					
ANR	5089795	Identifier	fifo_control		5089775	1					
ANR	5089796	ExpressionStatement	"globus_fifo_enqueue ( & result_fifo , ( void * ) output )"	379:4:9943:9992	5089775	2	True				
ANR	5089797	CallExpression	"globus_fifo_enqueue ( & result_fifo , ( void * ) output )"		5089775	0					
ANR	5089798	Callee	globus_fifo_enqueue		5089775	0					
ANR	5089799	Identifier	globus_fifo_enqueue		5089775	0					
ANR	5089800	ArgumentList	& result_fifo		5089775	1					
ANR	5089801	Argument	& result_fifo		5089775	0					
ANR	5089802	UnaryOperationExpression	& result_fifo		5089775	0					
ANR	5089803	UnaryOperator	&		5089775	0					
ANR	5089804	Identifier	result_fifo		5089775	1					
ANR	5089805	Argument	( void * ) output		5089775	1					
ANR	5089806	CastExpression	( void * ) output		5089775	0					
ANR	5089807	CastTarget	void *		5089775	0					
ANR	5089808	Identifier	output		5089775	1					
ANR	5089809	IfStatement	if ( AsyncResults && ! ResultsPending )		5089775	3					
ANR	5089810	Condition	AsyncResults && ! ResultsPending	381:4:9999:10029	5089775	0	True				
ANR	5089811	AndExpression	AsyncResults && ! ResultsPending		5089775	0		&&			
ANR	5089812	Identifier	AsyncResults		5089775	0					
ANR	5089813	UnaryOperationExpression	! ResultsPending		5089775	1					
ANR	5089814	UnaryOperator	!		5089775	0					
ANR	5089815	Identifier	ResultsPending		5089775	1					
ANR	5089816	CompoundStatement		6:37:160:160	5089775	1					
ANR	5089817	ExpressionStatement	ResultsPending = 1	382:2:10036:10054	5089775	0	True				
ANR	5089818	AssignmentExpression	ResultsPending = 1		5089775	0		=			
ANR	5089819	Identifier	ResultsPending		5089775	0					
ANR	5089820	PrimaryExpression	1		5089775	1					
ANR	5089821	ExpressionStatement	"gahp_printf ( ""R\\n"" )"	383:2:10058:10076	5089775	1	True				
ANR	5089822	CallExpression	"gahp_printf ( ""R\\n"" )"		5089775	0					
ANR	5089823	Callee	gahp_printf		5089775	0					
ANR	5089824	Identifier	gahp_printf		5089775	0					
ANR	5089825	ArgumentList	"""R\\n"""		5089775	1					
ANR	5089826	Argument	"""R\\n"""		5089775	0					
ANR	5089827	PrimaryExpression	"""R\\n"""		5089775	0					
ANR	5089828	ExpressionStatement	gahp_sem_up ( & fifo_control )	385:1:10082:10108	5089775	4	True				
ANR	5089829	CallExpression	gahp_sem_up ( & fifo_control )		5089775	0					
ANR	5089830	Callee	gahp_sem_up		5089775	0					
ANR	5089831	Identifier	gahp_sem_up		5089775	0					
ANR	5089832	ArgumentList	& fifo_control		5089775	1					
ANR	5089833	Argument	& fifo_control		5089775	0					
ANR	5089834	UnaryOperationExpression	& fifo_control		5089775	0					
ANR	5089835	UnaryOperator	&		5089775	0					
ANR	5089836	Identifier	fifo_control		5089775	1					
ANR	5089837	ExpressionStatement	gahp_sem_up ( & print_control )	386:1:10111:10138	5089775	5	True				
ANR	5089838	CallExpression	gahp_sem_up ( & print_control )		5089775	0					
ANR	5089839	Callee	gahp_sem_up		5089775	0					
ANR	5089840	Identifier	gahp_sem_up		5089775	0					
ANR	5089841	ArgumentList	& print_control		5089775	1					
ANR	5089842	Argument	& print_control		5089775	0					
ANR	5089843	UnaryOperationExpression	& print_control		5089775	0					
ANR	5089844	UnaryOperator	&		5089775	0					
ANR	5089845	Identifier	print_control		5089775	1					
ANR	5089846	ReturnStatement	return ;	387:1:10141:10147	5089775	6	True				
ANR	5089847	ReturnType	void		5089775	1					
ANR	5089848	Identifier	enqueue_results		5089775	2					
ANR	5089849	ParameterList	char * output		5089775	3					
ANR	5089850	Parameter	char * output	375:17:9856:9867	5089775	0	True				
ANR	5089851	ParameterType	char *		5089775	0					
ANR	5089852	Identifier	output		5089775	1					
ANR	5089853	CFGEntryNode	ENTRY		5089775		True				
ANR	5089854	CFGExitNode	EXIT		5089775		True				
ANR	5089855	Symbol	output		5089775						
ANR	5089856	Symbol	AsyncResults		5089775						
ANR	5089857	Symbol	& result_fifo		5089775						
ANR	5089858	Symbol	& fifo_control		5089775						
ANR	5089859	Symbol	ResultsPending		5089775						
ANR	5089860	Symbol	& print_control		5089775						
ANR	5089861	Function	escape_spaces	390:0:10152:10875							
ANR	5089862	FunctionDef	escape_spaces (const char * input_line)		5089861	0					
ANR	5089863	CompoundStatement		392:0:10199:10875	5089861	0					
ANR	5089864	IdentifierDeclStatement	int i ;	393:1:10202:10207	5089861	0	True				
ANR	5089865	IdentifierDecl	i		5089861	0					
ANR	5089866	IdentifierDeclType	int		5089861	0					
ANR	5089867	Identifier	i		5089861	1					
ANR	5089868	IdentifierDeclStatement	const char * temp ;	394:1:10210:10226	5089861	1	True				
ANR	5089869	IdentifierDecl	* temp		5089861	0					
ANR	5089870	IdentifierDeclType	const char *		5089861	0					
ANR	5089871	Identifier	temp		5089861	1					
ANR	5089872	IdentifierDeclStatement	char * output_line ;	395:1:10229:10246	5089861	2	True				
ANR	5089873	IdentifierDecl	* output_line		5089861	0					
ANR	5089874	IdentifierDeclType	char *		5089861	0					
ANR	5089875	Identifier	output_line		5089861	1					
ANR	5089876	ExpressionStatement	temp = input_line	398:1:10281:10298	5089861	3	True				
ANR	5089877	AssignmentExpression	temp = input_line		5089861	0		=			
ANR	5089878	Identifier	temp		5089861	0					
ANR	5089879	Identifier	input_line		5089861	1					
ANR	5089880	ForStatement	for ( i = 0 ; * temp != '\\0' ; temp ++ )		5089861	4					
ANR	5089881	ForInit	i = 0 ;	399:5:10305:10310	5089861	0	True				
ANR	5089882	AssignmentExpression	i = 0		5089861	0		=			
ANR	5089883	Identifier	i		5089861	0					
ANR	5089884	PrimaryExpression	0		5089861	1					
ANR	5089885	Condition	* temp != '\\0'	399:12:10312:10324	5089861	1	True				
ANR	5089886	EqualityExpression	* temp != '\\0'		5089861	0		!=			
ANR	5089887	UnaryOperationExpression	* temp		5089861	0					
ANR	5089888	UnaryOperator	*		5089861	0					
ANR	5089889	Identifier	temp		5089861	1					
ANR	5089890	PrimaryExpression	'\\0'		5089861	1					
ANR	5089891	PostIncDecOperationExpression	temp ++	399:27:10327:10332	5089861	2	True				
ANR	5089892	Identifier	temp		5089861	0					
ANR	5089893	IncDec	++		5089861	1					
ANR	5089894	CompoundStatement		8:35:135:135	5089861	3					
ANR	5089895	IfStatement	if ( * temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\' )		5089861	0					
ANR	5089896	Condition	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'	400:6:10343:10404	5089861	0	True				
ANR	5089897	OrExpression	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5089861	0		||			
ANR	5089898	EqualityExpression	* temp == ' '		5089861	0		==			
ANR	5089899	UnaryOperationExpression	* temp		5089861	0					
ANR	5089900	UnaryOperator	*		5089861	0					
ANR	5089901	Identifier	temp		5089861	1					
ANR	5089902	PrimaryExpression	' '		5089861	1					
ANR	5089903	OrExpression	* temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5089861	1		||			
ANR	5089904	EqualityExpression	* temp == '\\r'		5089861	0		==			
ANR	5089905	UnaryOperationExpression	* temp		5089861	0					
ANR	5089906	UnaryOperator	*		5089861	0					
ANR	5089907	Identifier	temp		5089861	1					
ANR	5089908	PrimaryExpression	'\\r'		5089861	1					
ANR	5089909	OrExpression	* temp == '\\n' || * temp == '\\\\'		5089861	1		||			
ANR	5089910	EqualityExpression	* temp == '\\n'		5089861	0		==			
ANR	5089911	UnaryOperationExpression	* temp		5089861	0					
ANR	5089912	UnaryOperator	*		5089861	0					
ANR	5089913	Identifier	temp		5089861	1					
ANR	5089914	PrimaryExpression	'\\n'		5089861	1					
ANR	5089915	EqualityExpression	* temp == '\\\\'		5089861	1		==			
ANR	5089916	UnaryOperationExpression	* temp		5089861	0					
ANR	5089917	UnaryOperator	*		5089861	0					
ANR	5089918	Identifier	temp		5089861	1					
ANR	5089919	PrimaryExpression	'\\\\'		5089861	1					
ANR	5089920	CompoundStatement		9:71:208:208	5089861	1					
ANR	5089921	ExpressionStatement	i ++	401:3:10413:10416	5089861	0	True				
ANR	5089922	PostIncDecOperationExpression	i ++		5089861	0					
ANR	5089923	Identifier	i		5089861	0					
ANR	5089924	IncDec	++		5089861	1					
ANR	5089925	ExpressionStatement	output_line = ( char * ) globus_libc_malloc ( strlen ( input_line ) + i + 200 )	406:1:10464:10534	5089861	5	True				
ANR	5089926	AssignmentExpression	output_line = ( char * ) globus_libc_malloc ( strlen ( input_line ) + i + 200 )		5089861	0		=			
ANR	5089927	Identifier	output_line		5089861	0					
ANR	5089928	CastExpression	( char * ) globus_libc_malloc ( strlen ( input_line ) + i + 200 )		5089861	1					
ANR	5089929	CastTarget	char *		5089861	0					
ANR	5089930	CallExpression	globus_libc_malloc ( strlen ( input_line ) + i + 200 )		5089861	1					
ANR	5089931	Callee	globus_libc_malloc		5089861	0					
ANR	5089932	Identifier	globus_libc_malloc		5089861	0					
ANR	5089933	ArgumentList	strlen ( input_line ) + i + 200		5089861	1					
ANR	5089934	Argument	strlen ( input_line ) + i + 200		5089861	0					
ANR	5089935	AdditiveExpression	strlen ( input_line ) + i + 200		5089861	0		+			
ANR	5089936	CallExpression	strlen ( input_line )		5089861	0					
ANR	5089937	Callee	strlen		5089861	0					
ANR	5089938	Identifier	strlen		5089861	0					
ANR	5089939	ArgumentList	input_line		5089861	1					
ANR	5089940	Argument	input_line		5089861	0					
ANR	5089941	Identifier	input_line		5089861	0					
ANR	5089942	AdditiveExpression	i + 200		5089861	1		+			
ANR	5089943	Identifier	i		5089861	0					
ANR	5089944	PrimaryExpression	200		5089861	1					
ANR	5089945	ExpressionStatement	temp = input_line	409:1:10563:10580	5089861	6	True				
ANR	5089946	AssignmentExpression	temp = input_line		5089861	0		=			
ANR	5089947	Identifier	temp		5089861	0					
ANR	5089948	Identifier	input_line		5089861	1					
ANR	5089949	ForStatement	for ( i = 0 ; * temp != '\\0' ; temp ++ )		5089861	7					
ANR	5089950	ForInit	i = 0 ;	410:5:10587:10592	5089861	0	True				
ANR	5089951	AssignmentExpression	i = 0		5089861	0		=			
ANR	5089952	Identifier	i		5089861	0					
ANR	5089953	PrimaryExpression	0		5089861	1					
ANR	5089954	Condition	* temp != '\\0'	410:12:10594:10606	5089861	1	True				
ANR	5089955	EqualityExpression	* temp != '\\0'		5089861	0		!=			
ANR	5089956	UnaryOperationExpression	* temp		5089861	0					
ANR	5089957	UnaryOperator	*		5089861	0					
ANR	5089958	Identifier	temp		5089861	1					
ANR	5089959	PrimaryExpression	'\\0'		5089861	1					
ANR	5089960	PostIncDecOperationExpression	temp ++	410:27:10609:10614	5089861	2	True				
ANR	5089961	Identifier	temp		5089861	0					
ANR	5089962	IncDec	++		5089861	1					
ANR	5089963	CompoundStatement		19:35:417:417	5089861	3					
ANR	5089964	IfStatement	if ( * temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\' )		5089861	0					
ANR	5089965	Condition	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'	411:6:10625:10686	5089861	0	True				
ANR	5089966	OrExpression	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5089861	0		||			
ANR	5089967	EqualityExpression	* temp == ' '		5089861	0		==			
ANR	5089968	UnaryOperationExpression	* temp		5089861	0					
ANR	5089969	UnaryOperator	*		5089861	0					
ANR	5089970	Identifier	temp		5089861	1					
ANR	5089971	PrimaryExpression	' '		5089861	1					
ANR	5089972	OrExpression	* temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5089861	1		||			
ANR	5089973	EqualityExpression	* temp == '\\r'		5089861	0		==			
ANR	5089974	UnaryOperationExpression	* temp		5089861	0					
ANR	5089975	UnaryOperator	*		5089861	0					
ANR	5089976	Identifier	temp		5089861	1					
ANR	5089977	PrimaryExpression	'\\r'		5089861	1					
ANR	5089978	OrExpression	* temp == '\\n' || * temp == '\\\\'		5089861	1		||			
ANR	5089979	EqualityExpression	* temp == '\\n'		5089861	0		==			
ANR	5089980	UnaryOperationExpression	* temp		5089861	0					
ANR	5089981	UnaryOperator	*		5089861	0					
ANR	5089982	Identifier	temp		5089861	1					
ANR	5089983	PrimaryExpression	'\\n'		5089861	1					
ANR	5089984	EqualityExpression	* temp == '\\\\'		5089861	1		==			
ANR	5089985	UnaryOperationExpression	* temp		5089861	0					
ANR	5089986	UnaryOperator	*		5089861	0					
ANR	5089987	Identifier	temp		5089861	1					
ANR	5089988	PrimaryExpression	'\\\\'		5089861	1					
ANR	5089989	CompoundStatement		20:71:490:490	5089861	1					
ANR	5089990	ExpressionStatement	output_line [ i ] = '\\\\'	412:3:10695:10716	5089861	0	True				
ANR	5089991	AssignmentExpression	output_line [ i ] = '\\\\'		5089861	0		=			
ANR	5089992	ArrayIndexing	output_line [ i ]		5089861	0					
ANR	5089993	Identifier	output_line		5089861	0					
ANR	5089994	Identifier	i		5089861	1					
ANR	5089995	PrimaryExpression	'\\\\'		5089861	1					
ANR	5089996	ExpressionStatement	i ++	413:3:10722:10725	5089861	1	True				
ANR	5089997	PostIncDecOperationExpression	i ++		5089861	0					
ANR	5089998	Identifier	i		5089861	0					
ANR	5089999	IncDec	++		5089861	1					
ANR	5090000	ExpressionStatement	output_line [ i ] = * temp	415:2:10733:10755	5089861	1	True				
ANR	5090001	AssignmentExpression	output_line [ i ] = * temp		5089861	0		=			
ANR	5090002	ArrayIndexing	output_line [ i ]		5089861	0					
ANR	5090003	Identifier	output_line		5089861	0					
ANR	5090004	Identifier	i		5089861	1					
ANR	5090005	UnaryOperationExpression	* temp		5089861	1					
ANR	5090006	UnaryOperator	*		5089861	0					
ANR	5090007	Identifier	temp		5089861	1					
ANR	5090008	ExpressionStatement	i ++	416:2:10759:10762	5089861	2	True				
ANR	5090009	PostIncDecOperationExpression	i ++		5089861	0					
ANR	5090010	Identifier	i		5089861	0					
ANR	5090011	IncDec	++		5089861	1					
ANR	5090012	ExpressionStatement	output_line [ i ] = '\\0'	418:1:10768:10789	5089861	8	True				
ANR	5090013	AssignmentExpression	output_line [ i ] = '\\0'		5089861	0		=			
ANR	5090014	ArrayIndexing	output_line [ i ]		5089861	0					
ANR	5090015	Identifier	output_line		5089861	0					
ANR	5090016	Identifier	i		5089861	1					
ANR	5090017	PrimaryExpression	'\\0'		5089861	1					
ANR	5090018	ReturnStatement	return output_line ;	420:1:10854:10872	5089861	9	True				
ANR	5090019	Identifier	output_line		5089861	0					
ANR	5090020	ReturnType	char *		5089861	1					
ANR	5090021	Identifier	escape_spaces		5089861	2					
ANR	5090022	ParameterList	const char * input_line		5089861	3					
ANR	5090023	Parameter	const char * input_line	391:15:10174:10195	5089861	0	True				
ANR	5090024	ParameterType	const char *		5089861	0					
ANR	5090025	Identifier	input_line		5089861	1					
ANR	5090026	CFGEntryNode	ENTRY		5089861		True				
ANR	5090027	CFGExitNode	EXIT		5089861		True				
ANR	5090028	Symbol	* output_line		5089861						
ANR	5090029	Symbol	strlen		5089861						
ANR	5090030	Symbol	temp		5089861						
ANR	5090031	Symbol	* i		5089861						
ANR	5090032	Symbol	i		5089861						
ANR	5090033	Symbol	input_line		5089861						
ANR	5090034	Symbol	output_line		5089861						
ANR	5090035	Symbol	globus_libc_malloc		5089861						
ANR	5090036	Symbol	* temp		5089861						
ANR	5090037	Function	all_args_free	423:0:10878:11409							
ANR	5090038	FunctionDef	all_args_free (void * args)		5090037	0					
ANR	5090039	CompoundStatement		425:0:10911:11409	5090037	0					
ANR	5090040	IdentifierDeclStatement	char * * input_line = ( char * * ) args ;	426:1:10914:10948	5090037	0	True				
ANR	5090041	IdentifierDecl	* * input_line = ( char * * ) args		5090037	0					
ANR	5090042	IdentifierDeclType	char * *		5090037	0					
ANR	5090043	Identifier	input_line		5090037	1					
ANR	5090044	AssignmentExpression	* * input_line = ( char * * ) args		5090037	2		=			
ANR	5090045	Identifier	input_line		5090037	0					
ANR	5090046	CastExpression	( char * * ) args		5090037	1					
ANR	5090047	CastTarget	char * *		5090037	0					
ANR	5090048	Identifier	args		5090037	1					
ANR	5090049	IfStatement	if ( ! input_line )		5090037	1					
ANR	5090050	Condition	! input_line	429:4:11000:11010	5090037	0	True				
ANR	5090051	UnaryOperationExpression	! input_line		5090037	0					
ANR	5090052	UnaryOperator	!		5090037	0					
ANR	5090053	Identifier	input_line		5090037	1					
ANR	5090054	ReturnStatement	return ;	430:2:11016:11022	5090037	1	True				
ANR	5090055	WhileStatement	while ( * input_line )		5090037	2					
ANR	5090056	Condition	* input_line	438:7:11307:11317	5090037	0	True				
ANR	5090057	UnaryOperationExpression	* input_line		5090037	0					
ANR	5090058	UnaryOperator	*		5090037	0					
ANR	5090059	Identifier	input_line		5090037	1					
ANR	5090060	CompoundStatement		14:20:408:408	5090037	1					
ANR	5090061	ExpressionStatement	globus_libc_free ( * input_line )	439:2:11324:11353	5090037	0	True				
ANR	5090062	CallExpression	globus_libc_free ( * input_line )		5090037	0					
ANR	5090063	Callee	globus_libc_free		5090037	0					
ANR	5090064	Identifier	globus_libc_free		5090037	0					
ANR	5090065	ArgumentList	* input_line		5090037	1					
ANR	5090066	Argument	* input_line		5090037	0					
ANR	5090067	UnaryOperationExpression	* input_line		5090037	0					
ANR	5090068	UnaryOperator	*		5090037	0					
ANR	5090069	Identifier	input_line		5090037	1					
ANR	5090070	ExpressionStatement	input_line ++	440:2:11357:11369	5090037	1	True				
ANR	5090071	PostIncDecOperationExpression	input_line ++		5090037	0					
ANR	5090072	Identifier	input_line		5090037	0					
ANR	5090073	IncDec	++		5090037	1					
ANR	5090074	ExpressionStatement	globus_libc_free ( args )	442:1:11375:11397	5090037	3	True				
ANR	5090075	CallExpression	globus_libc_free ( args )		5090037	0					
ANR	5090076	Callee	globus_libc_free		5090037	0					
ANR	5090077	Identifier	globus_libc_free		5090037	0					
ANR	5090078	ArgumentList	args		5090037	1					
ANR	5090079	Argument	args		5090037	0					
ANR	5090080	Identifier	args		5090037	0					
ANR	5090081	ReturnStatement	return ;	443:1:11400:11406	5090037	4	True				
ANR	5090082	ReturnType	void		5090037	1					
ANR	5090083	Identifier	all_args_free		5090037	2					
ANR	5090084	ParameterList	void * args		5090037	3					
ANR	5090085	Parameter	void * args	424:15:10898:10908	5090037	0	True				
ANR	5090086	ParameterType	void *		5090037	0					
ANR	5090087	Identifier	args		5090037	1					
ANR	5090088	CFGEntryNode	ENTRY		5090037		True				
ANR	5090089	CFGExitNode	EXIT		5090037		True				
ANR	5090090	Symbol	args		5090037						
ANR	5090091	Symbol	* input_line		5090037						
ANR	5090092	Symbol	input_line		5090037						
ANR	5090093	Function	handle_bad_request	446:0:11412:11532							
ANR	5090094	FunctionDef	handle_bad_request (void * user_arg)		5090093	0					
ANR	5090095	CompoundStatement		448:0:11452:11532	5090093	0					
ANR	5090096	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	449:1:11455:11493	5090093	0	True				
ANR	5090097	IdentifierDecl	* * input_line = ( char * * ) user_arg		5090093	0					
ANR	5090098	IdentifierDeclType	char * *		5090093	0					
ANR	5090099	Identifier	input_line		5090093	1					
ANR	5090100	AssignmentExpression	* * input_line = ( char * * ) user_arg		5090093	2		=			
ANR	5090101	Identifier	input_line		5090093	0					
ANR	5090102	CastExpression	( char * * ) user_arg		5090093	1					
ANR	5090103	CastTarget	char * *		5090093	0					
ANR	5090104	Identifier	user_arg		5090093	1					
ANR	5090105	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	451:1:11497:11518	5090093	1	True				
ANR	5090106	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090093	0					
ANR	5090107	Callee	HANDLE_SYNTAX_ERROR		5090093	0					
ANR	5090108	Identifier	HANDLE_SYNTAX_ERROR		5090093	0					
ANR	5090109	ArgumentList			5090093	1					
ANR	5090110	ReturnStatement	return 0 ;	453:1:11522:11530	5090093	2	True				
ANR	5090111	PrimaryExpression	0		5090093	0					
ANR	5090112	ReturnType	int		5090093	1					
ANR	5090113	Identifier	handle_bad_request		5090093	2					
ANR	5090114	ParameterList	void * user_arg		5090093	3					
ANR	5090115	Parameter	void * user_arg	447:19:11435:11449	5090093	0	True				
ANR	5090116	ParameterType	void *		5090093	0					
ANR	5090117	Identifier	user_arg		5090093	1					
ANR	5090118	CFGEntryNode	ENTRY		5090093		True				
ANR	5090119	CFGExitNode	EXIT		5090093		True				
ANR	5090120	Symbol	user_arg		5090093						
ANR	5090121	Symbol	input_line		5090093						
ANR	5090122	Function	handle_gram_job_request	457:0:11536:13229							
ANR	5090123	FunctionDef	handle_gram_job_request (void * user_arg)		5090122	0					
ANR	5090124	CompoundStatement		459:0:11581:13229	5090122	0					
ANR	5090125	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	461:1:11585:11623	5090122	0	True				
ANR	5090126	IdentifierDecl	* * input_line = ( char * * ) user_arg		5090122	0					
ANR	5090127	IdentifierDeclType	char * *		5090122	0					
ANR	5090128	Identifier	input_line		5090122	1					
ANR	5090129	AssignmentExpression	* * input_line = ( char * * ) user_arg		5090122	2		=			
ANR	5090130	Identifier	input_line		5090122	0					
ANR	5090131	CastExpression	( char * * ) user_arg		5090122	1					
ANR	5090132	CastTarget	char * *		5090122	0					
ANR	5090133	Identifier	user_arg		5090122	1					
ANR	5090134	IdentifierDeclStatement	int result ;	462:1:11626:11636	5090122	1	True				
ANR	5090135	IdentifierDecl	result		5090122	0					
ANR	5090136	IdentifierDeclType	int		5090122	0					
ANR	5090137	Identifier	result		5090122	1					
ANR	5090138	IdentifierDeclStatement	user_arg_t * gram_arg ;	463:1:11639:11660	5090122	2	True				
ANR	5090139	IdentifierDecl	* gram_arg		5090122	0					
ANR	5090140	IdentifierDeclType	user_arg_t *		5090122	0					
ANR	5090141	Identifier	gram_arg		5090122	1					
ANR	5090142	IdentifierDeclStatement	"char * req_id , * resource_contact , * callback_contact , * rsl ;"	466:1:11706:11762	5090122	3	True				
ANR	5090143	IdentifierDecl	* req_id		5090122	0					
ANR	5090144	IdentifierDeclType	char *		5090122	0					
ANR	5090145	Identifier	req_id		5090122	1					
ANR	5090146	IdentifierDecl	* resource_contact		5090122	1					
ANR	5090147	IdentifierDeclType	char *		5090122	0					
ANR	5090148	Identifier	resource_contact		5090122	1					
ANR	5090149	IdentifierDecl	* callback_contact		5090122	2					
ANR	5090150	IdentifierDeclType	char *		5090122	0					
ANR	5090151	Identifier	callback_contact		5090122	1					
ANR	5090152	IdentifierDecl	* rsl		5090122	3					
ANR	5090153	IdentifierDeclType	char *		5090122	0					
ANR	5090154	Identifier	rsl		5090122	1					
ANR	5090155	IdentifierDeclStatement	int limited_deleg ;	467:1:11765:11782	5090122	4	True				
ANR	5090156	IdentifierDecl	limited_deleg		5090122	0					
ANR	5090157	IdentifierDeclType	int		5090122	0					
ANR	5090158	Identifier	limited_deleg		5090122	1					
ANR	5090159	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5090122	5					
ANR	5090160	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	470:5:11801:11844	5090122	0	True				
ANR	5090161	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5090122	0					
ANR	5090162	UnaryOperator	!		5090122	0					
ANR	5090163	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5090122	1					
ANR	5090164	Callee	process_string_arg		5090122	0					
ANR	5090165	Identifier	process_string_arg		5090122	0					
ANR	5090166	ArgumentList	input_line [ 1 ]		5090122	1					
ANR	5090167	Argument	input_line [ 1 ]		5090122	0					
ANR	5090168	ArrayIndexing	input_line [ 1 ]		5090122	0					
ANR	5090169	Identifier	input_line		5090122	0					
ANR	5090170	PrimaryExpression	1		5090122	1					
ANR	5090171	Argument	& req_id		5090122	1					
ANR	5090172	UnaryOperationExpression	& req_id		5090122	0					
ANR	5090173	UnaryOperator	&		5090122	0					
ANR	5090174	Identifier	req_id		5090122	1					
ANR	5090175	CompoundStatement		12:52:266:266	5090122	1					
ANR	5090176	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	471:2:11852:11873	5090122	0	True				
ANR	5090177	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090122	0					
ANR	5090178	Callee	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090179	Identifier	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090180	ArgumentList			5090122	1					
ANR	5090181	ReturnStatement	return 0 ;	472:2:11877:11885	5090122	1	True				
ANR	5090182	PrimaryExpression	0		5090122	0					
ANR	5090183	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & resource_contact ) )"		5090122	6					
ANR	5090184	Condition	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"	476:5:11925:11977	5090122	0	True				
ANR	5090185	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"		5090122	0					
ANR	5090186	UnaryOperator	!		5090122	0					
ANR	5090187	CallExpression	"process_string_arg ( input_line [ 2 ] , & resource_contact )"		5090122	1					
ANR	5090188	Callee	process_string_arg		5090122	0					
ANR	5090189	Identifier	process_string_arg		5090122	0					
ANR	5090190	ArgumentList	input_line [ 2 ]		5090122	1					
ANR	5090191	Argument	input_line [ 2 ]		5090122	0					
ANR	5090192	ArrayIndexing	input_line [ 2 ]		5090122	0					
ANR	5090193	Identifier	input_line		5090122	0					
ANR	5090194	PrimaryExpression	2		5090122	1					
ANR	5090195	Argument	& resource_contact		5090122	1					
ANR	5090196	UnaryOperationExpression	& resource_contact		5090122	0					
ANR	5090197	UnaryOperator	&		5090122	0					
ANR	5090198	Identifier	resource_contact		5090122	1					
ANR	5090199	CompoundStatement		18:61:399:399	5090122	1					
ANR	5090200	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	477:2:11985:12006	5090122	0	True				
ANR	5090201	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090122	0					
ANR	5090202	Callee	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090203	Identifier	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090204	ArgumentList			5090122	1					
ANR	5090205	ReturnStatement	return 0 ;	478:2:12010:12018	5090122	1	True				
ANR	5090206	PrimaryExpression	0		5090122	0					
ANR	5090207	IfStatement	"if ( ! process_string_arg ( input_line [ 3 ] , & callback_contact ) )"		5090122	7					
ANR	5090208	Condition	"! process_string_arg ( input_line [ 3 ] , & callback_contact )"	481:5:12049:12102	5090122	0	True				
ANR	5090209	UnaryOperationExpression	"! process_string_arg ( input_line [ 3 ] , & callback_contact )"		5090122	0					
ANR	5090210	UnaryOperator	!		5090122	0					
ANR	5090211	CallExpression	"process_string_arg ( input_line [ 3 ] , & callback_contact )"		5090122	1					
ANR	5090212	Callee	process_string_arg		5090122	0					
ANR	5090213	Identifier	process_string_arg		5090122	0					
ANR	5090214	ArgumentList	input_line [ 3 ]		5090122	1					
ANR	5090215	Argument	input_line [ 3 ]		5090122	0					
ANR	5090216	ArrayIndexing	input_line [ 3 ]		5090122	0					
ANR	5090217	Identifier	input_line		5090122	0					
ANR	5090218	PrimaryExpression	3		5090122	1					
ANR	5090219	Argument	& callback_contact		5090122	1					
ANR	5090220	UnaryOperationExpression	& callback_contact		5090122	0					
ANR	5090221	UnaryOperator	&		5090122	0					
ANR	5090222	Identifier	callback_contact		5090122	1					
ANR	5090223	CompoundStatement		23:62:524:524	5090122	1					
ANR	5090224	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	482:2:12110:12131	5090122	0	True				
ANR	5090225	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090122	0					
ANR	5090226	Callee	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090227	Identifier	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090228	ArgumentList			5090122	1					
ANR	5090229	ReturnStatement	return 0 ;	483:2:12135:12143	5090122	1	True				
ANR	5090230	PrimaryExpression	0		5090122	0					
ANR	5090231	IfStatement	"if ( ! process_int_arg ( input_line [ 4 ] , & limited_deleg ) )"		5090122	8					
ANR	5090232	Condition	"! process_int_arg ( input_line [ 4 ] , & limited_deleg )"	487:5:12195:12242	5090122	0	True				
ANR	5090233	UnaryOperationExpression	"! process_int_arg ( input_line [ 4 ] , & limited_deleg )"		5090122	0					
ANR	5090234	UnaryOperator	!		5090122	0					
ANR	5090235	CallExpression	"process_int_arg ( input_line [ 4 ] , & limited_deleg )"		5090122	1					
ANR	5090236	Callee	process_int_arg		5090122	0					
ANR	5090237	Identifier	process_int_arg		5090122	0					
ANR	5090238	ArgumentList	input_line [ 4 ]		5090122	1					
ANR	5090239	Argument	input_line [ 4 ]		5090122	0					
ANR	5090240	ArrayIndexing	input_line [ 4 ]		5090122	0					
ANR	5090241	Identifier	input_line		5090122	0					
ANR	5090242	PrimaryExpression	4		5090122	1					
ANR	5090243	Argument	& limited_deleg		5090122	1					
ANR	5090244	UnaryOperationExpression	& limited_deleg		5090122	0					
ANR	5090245	UnaryOperator	&		5090122	0					
ANR	5090246	Identifier	limited_deleg		5090122	1					
ANR	5090247	CompoundStatement		29:56:664:664	5090122	1					
ANR	5090248	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	488:2:12250:12271	5090122	0	True				
ANR	5090249	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090122	0					
ANR	5090250	Callee	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090251	Identifier	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090252	ArgumentList			5090122	1					
ANR	5090253	ReturnStatement	return 0 ;	489:2:12275:12283	5090122	1	True				
ANR	5090254	PrimaryExpression	0		5090122	0					
ANR	5090255	IfStatement	"if ( ! process_string_arg ( input_line [ 5 ] , & rsl ) )"		5090122	9					
ANR	5090256	Condition	"! process_string_arg ( input_line [ 5 ] , & rsl )"	492:5:12301:12340	5090122	0	True				
ANR	5090257	UnaryOperationExpression	"! process_string_arg ( input_line [ 5 ] , & rsl )"		5090122	0					
ANR	5090258	UnaryOperator	!		5090122	0					
ANR	5090259	CallExpression	"process_string_arg ( input_line [ 5 ] , & rsl )"		5090122	1					
ANR	5090260	Callee	process_string_arg		5090122	0					
ANR	5090261	Identifier	process_string_arg		5090122	0					
ANR	5090262	ArgumentList	input_line [ 5 ]		5090122	1					
ANR	5090263	Argument	input_line [ 5 ]		5090122	0					
ANR	5090264	ArrayIndexing	input_line [ 5 ]		5090122	0					
ANR	5090265	Identifier	input_line		5090122	0					
ANR	5090266	PrimaryExpression	5		5090122	1					
ANR	5090267	Argument	& rsl		5090122	1					
ANR	5090268	UnaryOperationExpression	& rsl		5090122	0					
ANR	5090269	UnaryOperator	&		5090122	0					
ANR	5090270	Identifier	rsl		5090122	1					
ANR	5090271	CompoundStatement		34:48:762:762	5090122	1					
ANR	5090272	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	493:2:12348:12369	5090122	0	True				
ANR	5090273	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090122	0					
ANR	5090274	Callee	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090275	Identifier	HANDLE_SYNTAX_ERROR		5090122	0					
ANR	5090276	ArgumentList			5090122	1					
ANR	5090277	ReturnStatement	return 0 ;	494:2:12373:12381	5090122	1	True				
ANR	5090278	PrimaryExpression	0		5090122	0					
ANR	5090279	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	497:1:12388:12435	5090122	10	True				
ANR	5090280	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5090122	0		=			
ANR	5090281	Identifier	gram_arg		5090122	0					
ANR	5090282	CallExpression	"new_gram_arg ( req_id , current_cred )"		5090122	1					
ANR	5090283	Callee	new_gram_arg		5090122	0					
ANR	5090284	Identifier	new_gram_arg		5090122	0					
ANR	5090285	ArgumentList	req_id		5090122	1					
ANR	5090286	Argument	req_id		5090122	0					
ANR	5090287	Identifier	req_id		5090122	0					
ANR	5090288	Argument	current_cred		5090122	1					
ANR	5090289	Identifier	current_cred		5090122	0					
ANR	5090290	IfStatement	if ( limited_deleg )		5090122	11					
ANR	5090291	Condition	limited_deleg	499:6:12444:12456	5090122	0	True				
ANR	5090292	Identifier	limited_deleg		5090122	0					
ANR	5090293	CompoundStatement		41:22:878:878	5090122	1					
ANR	5090294	ExpressionStatement	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"	500:2:12464:12585	5090122	0	True				
ANR	5090295	CallExpression	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"		5090122	0					
ANR	5090296	Callee	globus_gram_client_attr_set_delegation_mode		5090122	0					
ANR	5090297	Identifier	globus_gram_client_attr_set_delegation_mode		5090122	0					
ANR	5090298	ArgumentList	gram_arg -> gram_attr		5090122	1					
ANR	5090299	Argument	gram_arg -> gram_attr		5090122	0					
ANR	5090300	PtrMemberAccess	gram_arg -> gram_attr		5090122	0					
ANR	5090301	Identifier	gram_arg		5090122	0					
ANR	5090302	Identifier	gram_attr		5090122	1					
ANR	5090303	Argument	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5090122	1					
ANR	5090304	Identifier	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5090122	0					
ANR	5090305	ElseStatement	else		5090122	0					
ANR	5090306	CompoundStatement		44:8:1013:1013	5090122	0					
ANR	5090307	ExpressionStatement	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY )"	503:2:12599:12717	5090122	0	True				
ANR	5090308	CallExpression	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY )"		5090122	0					
ANR	5090309	Callee	globus_gram_client_attr_set_delegation_mode		5090122	0					
ANR	5090310	Identifier	globus_gram_client_attr_set_delegation_mode		5090122	0					
ANR	5090311	ArgumentList	gram_arg -> gram_attr		5090122	1					
ANR	5090312	Argument	gram_arg -> gram_attr		5090122	0					
ANR	5090313	PtrMemberAccess	gram_arg -> gram_attr		5090122	0					
ANR	5090314	Identifier	gram_arg		5090122	0					
ANR	5090315	Identifier	gram_attr		5090122	1					
ANR	5090316	Argument	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5090122	1					
ANR	5090317	Identifier	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5090122	0					
ANR	5090318	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	507:1:12724:12742	5090122	12	True				
ANR	5090319	CallExpression	"gahp_printf ( ""S\\n"" )"		5090122	0					
ANR	5090320	Callee	gahp_printf		5090122	0					
ANR	5090321	Identifier	gahp_printf		5090122	0					
ANR	5090322	ArgumentList	"""S\\n"""		5090122	1					
ANR	5090323	Argument	"""S\\n"""		5090122	0					
ANR	5090324	PrimaryExpression	"""S\\n"""		5090122	0					
ANR	5090325	ExpressionStatement	gahp_sem_up ( & print_control )	508:1:12745:12772	5090122	13	True				
ANR	5090326	CallExpression	gahp_sem_up ( & print_control )		5090122	0					
ANR	5090327	Callee	gahp_sem_up		5090122	0					
ANR	5090328	Identifier	gahp_sem_up		5090122	0					
ANR	5090329	ArgumentList	& print_control		5090122	1					
ANR	5090330	Argument	& print_control		5090122	0					
ANR	5090331	UnaryOperationExpression	& print_control		5090122	0					
ANR	5090332	UnaryOperator	&		5090122	0					
ANR	5090333	Identifier	print_control		5090122	1					
ANR	5090334	ExpressionStatement	"result = globus_gram_client_register_job_request ( resource_contact , rsl , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_request , ( void * ) gram_arg )"	509:1:12775:12989	5090122	14	True				
ANR	5090335	AssignmentExpression	"result = globus_gram_client_register_job_request ( resource_contact , rsl , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_request , ( void * ) gram_arg )"		5090122	0		=			
ANR	5090336	Identifier	result		5090122	0					
ANR	5090337	CallExpression	"globus_gram_client_register_job_request ( resource_contact , rsl , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_request , ( void * ) gram_arg )"		5090122	1					
ANR	5090338	Callee	globus_gram_client_register_job_request		5090122	0					
ANR	5090339	Identifier	globus_gram_client_register_job_request		5090122	0					
ANR	5090340	ArgumentList	resource_contact		5090122	1					
ANR	5090341	Argument	resource_contact		5090122	0					
ANR	5090342	Identifier	resource_contact		5090122	0					
ANR	5090343	Argument	rsl		5090122	1					
ANR	5090344	Identifier	rsl		5090122	0					
ANR	5090345	Argument	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5090122	2					
ANR	5090346	Identifier	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5090122	0					
ANR	5090347	Argument	callback_contact		5090122	3					
ANR	5090348	Identifier	callback_contact		5090122	0					
ANR	5090349	Argument	gram_arg -> gram_attr		5090122	4					
ANR	5090350	PtrMemberAccess	gram_arg -> gram_attr		5090122	0					
ANR	5090351	Identifier	gram_arg		5090122	0					
ANR	5090352	Identifier	gram_attr		5090122	1					
ANR	5090353	Argument	callback_gram_job_request		5090122	5					
ANR	5090354	Identifier	callback_gram_job_request		5090122	0					
ANR	5090355	Argument	( void * ) gram_arg		5090122	6					
ANR	5090356	CastExpression	( void * ) gram_arg		5090122	0					
ANR	5090357	CastTarget	void *		5090122	0					
ANR	5090358	Identifier	gram_arg		5090122	1					
ANR	5090359	IfStatement	if ( result != GLOBUS_SUCCESS )		5090122	15					
ANR	5090360	Condition	result != GLOBUS_SUCCESS	514:5:12997:13020	5090122	0	True				
ANR	5090361	EqualityExpression	result != GLOBUS_SUCCESS		5090122	0		!=			
ANR	5090362	Identifier	result		5090122	0					
ANR	5090363	Identifier	GLOBUS_SUCCESS		5090122	1					
ANR	5090364	CompoundStatement		56:31:1441:1441	5090122	1					
ANR	5090365	ExpressionStatement	"callback_gram_job_request ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	515:2:13027:13186	5090122	0	True				
ANR	5090366	CallExpression	"callback_gram_job_request ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5090122	0					
ANR	5090367	Callee	callback_gram_job_request		5090122	0					
ANR	5090368	Identifier	callback_gram_job_request		5090122	0					
ANR	5090369	ArgumentList	( void * ) gram_arg		5090122	1					
ANR	5090370	Argument	( void * ) gram_arg		5090122	0					
ANR	5090371	CastExpression	( void * ) gram_arg		5090122	0					
ANR	5090372	CastTarget	void *		5090122	0					
ANR	5090373	Identifier	gram_arg		5090122	1					
ANR	5090374	Argument	( globus_gram_protocol_error_t ) result		5090122	1					
ANR	5090375	CastExpression	( globus_gram_protocol_error_t ) result		5090122	0					
ANR	5090376	CastTarget	globus_gram_protocol_error_t		5090122	0					
ANR	5090377	Identifier	result		5090122	1					
ANR	5090378	Argument	NULL		5090122	2					
ANR	5090379	Identifier	NULL		5090122	0					
ANR	5090380	Argument	( globus_gram_protocol_job_state_t ) 0		5090122	3					
ANR	5090381	CastExpression	( globus_gram_protocol_job_state_t ) 0		5090122	0					
ANR	5090382	CastTarget	globus_gram_protocol_job_state_t		5090122	0					
ANR	5090383	PrimaryExpression	0		5090122	1					
ANR	5090384	Argument	( globus_gram_protocol_error_t ) 0		5090122	4					
ANR	5090385	CastExpression	( globus_gram_protocol_error_t ) 0		5090122	0					
ANR	5090386	CastTarget	globus_gram_protocol_error_t		5090122	0					
ANR	5090387	PrimaryExpression	0		5090122	1					
ANR	5090388	ExpressionStatement	all_args_free ( user_arg )	518:1:13193:13216	5090122	16	True				
ANR	5090389	CallExpression	all_args_free ( user_arg )		5090122	0					
ANR	5090390	Callee	all_args_free		5090122	0					
ANR	5090391	Identifier	all_args_free		5090122	0					
ANR	5090392	ArgumentList	user_arg		5090122	1					
ANR	5090393	Argument	user_arg		5090122	0					
ANR	5090394	Identifier	user_arg		5090122	0					
ANR	5090395	ReturnStatement	return 0 ;	519:1:13219:13227	5090122	17	True				
ANR	5090396	PrimaryExpression	0		5090122	0					
ANR	5090397	ReturnType	int		5090122	1					
ANR	5090398	Identifier	handle_gram_job_request		5090122	2					
ANR	5090399	ParameterList	void * user_arg		5090122	3					
ANR	5090400	Parameter	void * user_arg	458:24:11564:11578	5090122	0	True				
ANR	5090401	ParameterType	void *		5090122	0					
ANR	5090402	Identifier	user_arg		5090122	1					
ANR	5090403	CFGEntryNode	ENTRY		5090122		True				
ANR	5090404	CFGExitNode	EXIT		5090122		True				
ANR	5090405	Symbol	user_arg		5090122						
ANR	5090406	Symbol	resource_contact		5090122						
ANR	5090407	Symbol	new_gram_arg		5090122						
ANR	5090408	Symbol	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5090122						
ANR	5090409	Symbol	* gram_arg		5090122						
ANR	5090410	Symbol	rsl		5090122						
ANR	5090411	Symbol	globus_gram_client_register_job_request		5090122						
ANR	5090412	Symbol	process_int_arg		5090122						
ANR	5090413	Symbol	& limited_deleg		5090122						
ANR	5090414	Symbol	& print_control		5090122						
ANR	5090415	Symbol	result		5090122						
ANR	5090416	Symbol	req_id		5090122						
ANR	5090417	Symbol	current_cred		5090122						
ANR	5090418	Symbol	& req_id		5090122						
ANR	5090419	Symbol	& callback_contact		5090122						
ANR	5090420	Symbol	* input_line		5090122						
ANR	5090421	Symbol	process_string_arg		5090122						
ANR	5090422	Symbol	NULL		5090122						
ANR	5090423	Symbol	& resource_contact		5090122						
ANR	5090424	Symbol	GLOBUS_SUCCESS		5090122						
ANR	5090425	Symbol	input_line		5090122						
ANR	5090426	Symbol	limited_deleg		5090122						
ANR	5090427	Symbol	callback_contact		5090122						
ANR	5090428	Symbol	gram_arg -> gram_attr		5090122						
ANR	5090429	Symbol	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5090122						
ANR	5090430	Symbol	& rsl		5090122						
ANR	5090431	Symbol	gram_arg		5090122						
ANR	5090432	Symbol	callback_gram_job_request		5090122						
ANR	5090433	Symbol	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5090122						
ANR	5090434	Function	callback_gram_job_request	522:0:13232:13761							
ANR	5090435	FunctionDef	"callback_gram_job_request (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5090434	0					
ANR	5090436	CompoundStatement		528:0:13455:13761	5090434	0					
ANR	5090437	IdentifierDeclStatement	char * output ;	529:1:13458:13470	5090434	0	True				
ANR	5090438	IdentifierDecl	* output		5090434	0					
ANR	5090439	IdentifierDeclType	char *		5090434	0					
ANR	5090440	Identifier	output		5090434	1					
ANR	5090441	IdentifierDeclStatement	user_arg_t * gram_arg ;	530:1:13473:13494	5090434	1	True				
ANR	5090442	IdentifierDecl	* gram_arg		5090434	0					
ANR	5090443	IdentifierDeclType	user_arg_t *		5090434	0					
ANR	5090444	Identifier	gram_arg		5090434	1					
ANR	5090445	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	532:1:13498:13526	5090434	2	True				
ANR	5090446	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5090434	0		=			
ANR	5090447	Identifier	gram_arg		5090434	0					
ANR	5090448	CastExpression	( user_arg_t * ) arg		5090434	1					
ANR	5090449	CastTarget	user_arg_t *		5090434	0					
ANR	5090450	Identifier	arg		5090434	1					
ANR	5090451	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	534:1:13530:13570	5090434	3	True				
ANR	5090452	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5090434	0		=			
ANR	5090453	Identifier	output		5090434	0					
ANR	5090454	CastExpression	( char * ) globus_libc_malloc ( 500 )		5090434	1					
ANR	5090455	CastTarget	char *		5090434	0					
ANR	5090456	CallExpression	globus_libc_malloc ( 500 )		5090434	1					
ANR	5090457	Callee	globus_libc_malloc		5090434	0					
ANR	5090458	Identifier	globus_libc_malloc		5090434	0					
ANR	5090459	ArgumentList	500		5090434	1					
ANR	5090460	Argument	500		5090434	0					
ANR	5090461	PrimaryExpression	500		5090434	0					
ANR	5090462	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d %s"" , gram_arg -> req_id , operation_fc , job_contact ? job_contact : NULLSTRING )"	536:1:13574:13691	5090434	4	True				
ANR	5090463	CallExpression	"globus_libc_sprintf ( output , ""%s %d %s"" , gram_arg -> req_id , operation_fc , job_contact ? job_contact : NULLSTRING )"		5090434	0					
ANR	5090464	Callee	globus_libc_sprintf		5090434	0					
ANR	5090465	Identifier	globus_libc_sprintf		5090434	0					
ANR	5090466	ArgumentList	output		5090434	1					
ANR	5090467	Argument	output		5090434	0					
ANR	5090468	Identifier	output		5090434	0					
ANR	5090469	Argument	"""%s %d %s"""		5090434	1					
ANR	5090470	PrimaryExpression	"""%s %d %s"""		5090434	0					
ANR	5090471	Argument	gram_arg -> req_id		5090434	2					
ANR	5090472	PtrMemberAccess	gram_arg -> req_id		5090434	0					
ANR	5090473	Identifier	gram_arg		5090434	0					
ANR	5090474	Identifier	req_id		5090434	1					
ANR	5090475	Argument	operation_fc		5090434	3					
ANR	5090476	Identifier	operation_fc		5090434	0					
ANR	5090477	Argument	job_contact ? job_contact : NULLSTRING		5090434	4					
ANR	5090478	ConditionalExpression	job_contact ? job_contact : NULLSTRING		5090434	0					
ANR	5090479	Condition	job_contact		5090434	0					
ANR	5090480	Identifier	job_contact		5090434	0					
ANR	5090481	Identifier	job_contact		5090434	1					
ANR	5090482	Identifier	NULLSTRING		5090434	2					
ANR	5090483	ExpressionStatement	enqueue_results ( output )	539:1:13695:13718	5090434	5	True				
ANR	5090484	CallExpression	enqueue_results ( output )		5090434	0					
ANR	5090485	Callee	enqueue_results		5090434	0					
ANR	5090486	Identifier	enqueue_results		5090434	0					
ANR	5090487	ArgumentList	output		5090434	1					
ANR	5090488	Argument	output		5090434	0					
ANR	5090489	Identifier	output		5090434	0					
ANR	5090490	ExpressionStatement	delete_gram_arg ( gram_arg )	541:1:13723:13750	5090434	6	True				
ANR	5090491	CallExpression	delete_gram_arg ( gram_arg )		5090434	0					
ANR	5090492	Callee	delete_gram_arg		5090434	0					
ANR	5090493	Identifier	delete_gram_arg		5090434	0					
ANR	5090494	ArgumentList	gram_arg		5090434	1					
ANR	5090495	Argument	gram_arg		5090434	0					
ANR	5090496	Identifier	gram_arg		5090434	0					
ANR	5090497	ReturnStatement	return ;	542:1:13753:13759	5090434	7	True				
ANR	5090498	ReturnType	void		5090434	1					
ANR	5090499	Identifier	callback_gram_job_request		5090434	2					
ANR	5090500	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5090434	3					
ANR	5090501	Parameter	void * arg	523:26:13263:13271	5090434	0	True				
ANR	5090502	ParameterType	void *		5090434	0					
ANR	5090503	Identifier	arg		5090434	1					
ANR	5090504	Parameter	globus_gram_protocol_error_t operation_fc	524:8:13282:13322	5090434	1	True				
ANR	5090505	ParameterType	globus_gram_protocol_error_t		5090434	0					
ANR	5090506	Identifier	operation_fc		5090434	1					
ANR	5090507	Parameter	const char * job_contact	525:8:13333:13355	5090434	2	True				
ANR	5090508	ParameterType	const char *		5090434	0					
ANR	5090509	Identifier	job_contact		5090434	1					
ANR	5090510	Parameter	globus_gram_protocol_job_state_t job_state	526:8:13366:13407	5090434	3	True				
ANR	5090511	ParameterType	globus_gram_protocol_job_state_t		5090434	0					
ANR	5090512	Identifier	job_state		5090434	1					
ANR	5090513	Parameter	globus_gram_protocol_error_t job_fc	527:8:13418:13452	5090434	4	True				
ANR	5090514	ParameterType	globus_gram_protocol_error_t		5090434	0					
ANR	5090515	Identifier	job_fc		5090434	1					
ANR	5090516	CFGEntryNode	ENTRY		5090434		True				
ANR	5090517	CFGExitNode	EXIT		5090434		True				
ANR	5090518	Symbol	output		5090434						
ANR	5090519	Symbol	job_fc		5090434						
ANR	5090520	Symbol	gram_arg -> req_id		5090434						
ANR	5090521	Symbol	arg		5090434						
ANR	5090522	Symbol	* gram_arg		5090434						
ANR	5090523	Symbol	globus_libc_malloc		5090434						
ANR	5090524	Symbol	operation_fc		5090434						
ANR	5090525	Symbol	gram_arg		5090434						
ANR	5090526	Symbol	NULLSTRING		5090434						
ANR	5090527	Symbol	job_contact		5090434						
ANR	5090528	Symbol	job_state		5090434						
ANR	5090529	Function	handle_gram_job_signal	545:0:13764:14967							
ANR	5090530	FunctionDef	handle_gram_job_signal (void * user_arg)		5090529	0					
ANR	5090531	CompoundStatement		547:0:13808:14967	5090529	0					
ANR	5090532	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	548:1:13811:13849	5090529	0	True				
ANR	5090533	IdentifierDecl	* * input_line = ( char * * ) user_arg		5090529	0					
ANR	5090534	IdentifierDeclType	char * *		5090529	0					
ANR	5090535	Identifier	input_line		5090529	1					
ANR	5090536	AssignmentExpression	* * input_line = ( char * * ) user_arg		5090529	2		=			
ANR	5090537	Identifier	input_line		5090529	0					
ANR	5090538	CastExpression	( char * * ) user_arg		5090529	1					
ANR	5090539	CastTarget	char * *		5090529	0					
ANR	5090540	Identifier	user_arg		5090529	1					
ANR	5090541	IdentifierDeclStatement	int result ;	549:1:13852:13862	5090529	1	True				
ANR	5090542	IdentifierDecl	result		5090529	0					
ANR	5090543	IdentifierDeclType	int		5090529	0					
ANR	5090544	Identifier	result		5090529	1					
ANR	5090545	IdentifierDeclStatement	int signal ;	552:1:13908:13918	5090529	2	True				
ANR	5090546	IdentifierDecl	signal		5090529	0					
ANR	5090547	IdentifierDeclType	int		5090529	0					
ANR	5090548	Identifier	signal		5090529	1					
ANR	5090549	IdentifierDeclStatement	"char * req_id , * job_contact , * signal_string ;"	553:1:13921:13964	5090529	3	True				
ANR	5090550	IdentifierDecl	* req_id		5090529	0					
ANR	5090551	IdentifierDeclType	char *		5090529	0					
ANR	5090552	Identifier	req_id		5090529	1					
ANR	5090553	IdentifierDecl	* job_contact		5090529	1					
ANR	5090554	IdentifierDeclType	char *		5090529	0					
ANR	5090555	Identifier	job_contact		5090529	1					
ANR	5090556	IdentifierDecl	* signal_string		5090529	2					
ANR	5090557	IdentifierDeclType	char *		5090529	0					
ANR	5090558	Identifier	signal_string		5090529	1					
ANR	5090559	IdentifierDeclStatement	user_arg_t * gram_arg ;	554:1:13967:13988	5090529	4	True				
ANR	5090560	IdentifierDecl	* gram_arg		5090529	0					
ANR	5090561	IdentifierDeclType	user_arg_t *		5090529	0					
ANR	5090562	Identifier	gram_arg		5090529	1					
ANR	5090563	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5090529	5					
ANR	5090564	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	557:5:14006:14048	5090529	0	True				
ANR	5090565	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5090529	0					
ANR	5090566	UnaryOperator	!		5090529	0					
ANR	5090567	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5090529	1					
ANR	5090568	Callee	process_string_arg		5090529	0					
ANR	5090569	Identifier	process_string_arg		5090529	0					
ANR	5090570	ArgumentList	input_line [ 1 ]		5090529	1					
ANR	5090571	Argument	input_line [ 1 ]		5090529	0					
ANR	5090572	ArrayIndexing	input_line [ 1 ]		5090529	0					
ANR	5090573	Identifier	input_line		5090529	0					
ANR	5090574	PrimaryExpression	1		5090529	1					
ANR	5090575	Argument	& req_id		5090529	1					
ANR	5090576	UnaryOperationExpression	& req_id		5090529	0					
ANR	5090577	UnaryOperator	&		5090529	0					
ANR	5090578	Identifier	req_id		5090529	1					
ANR	5090579	CompoundStatement		11:51:243:243	5090529	1					
ANR	5090580	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	558:2:14056:14077	5090529	0	True				
ANR	5090581	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090529	0					
ANR	5090582	Callee	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090583	Identifier	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090584	ArgumentList			5090529	1					
ANR	5090585	ReturnStatement	return 0 ;	559:2:14081:14089	5090529	1	True				
ANR	5090586	PrimaryExpression	0		5090529	0					
ANR	5090587	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & job_contact ) )"		5090529	6					
ANR	5090588	Condition	"! process_string_arg ( input_line [ 2 ] , & job_contact )"	563:5:14116:14164	5090529	0	True				
ANR	5090589	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & job_contact )"		5090529	0					
ANR	5090590	UnaryOperator	!		5090529	0					
ANR	5090591	CallExpression	"process_string_arg ( input_line [ 2 ] , & job_contact )"		5090529	1					
ANR	5090592	Callee	process_string_arg		5090529	0					
ANR	5090593	Identifier	process_string_arg		5090529	0					
ANR	5090594	ArgumentList	input_line [ 2 ]		5090529	1					
ANR	5090595	Argument	input_line [ 2 ]		5090529	0					
ANR	5090596	ArrayIndexing	input_line [ 2 ]		5090529	0					
ANR	5090597	Identifier	input_line		5090529	0					
ANR	5090598	PrimaryExpression	2		5090529	1					
ANR	5090599	Argument	& job_contact		5090529	1					
ANR	5090600	UnaryOperationExpression	& job_contact		5090529	0					
ANR	5090601	UnaryOperator	&		5090529	0					
ANR	5090602	Identifier	job_contact		5090529	1					
ANR	5090603	CompoundStatement		17:56:358:358	5090529	1					
ANR	5090604	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	564:2:14171:14192	5090529	0	True				
ANR	5090605	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090529	0					
ANR	5090606	Callee	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090607	Identifier	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090608	ArgumentList			5090529	1					
ANR	5090609	ReturnStatement	return 0 ;	565:2:14196:14204	5090529	1	True				
ANR	5090610	PrimaryExpression	0		5090529	0					
ANR	5090611	IfStatement	"if ( ! process_int_arg ( input_line [ 3 ] , & signal ) )"		5090529	7					
ANR	5090612	Condition	"! process_int_arg ( input_line [ 3 ] , & signal )"	569:5:14226:14265	5090529	0	True				
ANR	5090613	UnaryOperationExpression	"! process_int_arg ( input_line [ 3 ] , & signal )"		5090529	0					
ANR	5090614	UnaryOperator	!		5090529	0					
ANR	5090615	CallExpression	"process_int_arg ( input_line [ 3 ] , & signal )"		5090529	1					
ANR	5090616	Callee	process_int_arg		5090529	0					
ANR	5090617	Identifier	process_int_arg		5090529	0					
ANR	5090618	ArgumentList	input_line [ 3 ]		5090529	1					
ANR	5090619	Argument	input_line [ 3 ]		5090529	0					
ANR	5090620	ArrayIndexing	input_line [ 3 ]		5090529	0					
ANR	5090621	Identifier	input_line		5090529	0					
ANR	5090622	PrimaryExpression	3		5090529	1					
ANR	5090623	Argument	& signal		5090529	1					
ANR	5090624	UnaryOperationExpression	& signal		5090529	0					
ANR	5090625	UnaryOperator	&		5090529	0					
ANR	5090626	Identifier	signal		5090529	1					
ANR	5090627	CompoundStatement		23:49:461:461	5090529	1					
ANR	5090628	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	570:2:14274:14295	5090529	0	True				
ANR	5090629	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090529	0					
ANR	5090630	Callee	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090631	Identifier	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090632	ArgumentList			5090529	1					
ANR	5090633	ReturnStatement	return 0 ;	571:2:14299:14307	5090529	1	True				
ANR	5090634	PrimaryExpression	0		5090529	0					
ANR	5090635	IfStatement	"if ( ! process_string_arg ( input_line [ 4 ] , & signal_string ) )"		5090529	8					
ANR	5090636	Condition	"! process_string_arg ( input_line [ 4 ] , & signal_string )"	574:5:14318:14367	5090529	0	True				
ANR	5090637	UnaryOperationExpression	"! process_string_arg ( input_line [ 4 ] , & signal_string )"		5090529	0					
ANR	5090638	UnaryOperator	!		5090529	0					
ANR	5090639	CallExpression	"process_string_arg ( input_line [ 4 ] , & signal_string )"		5090529	1					
ANR	5090640	Callee	process_string_arg		5090529	0					
ANR	5090641	Identifier	process_string_arg		5090529	0					
ANR	5090642	ArgumentList	input_line [ 4 ]		5090529	1					
ANR	5090643	Argument	input_line [ 4 ]		5090529	0					
ANR	5090644	ArrayIndexing	input_line [ 4 ]		5090529	0					
ANR	5090645	Identifier	input_line		5090529	0					
ANR	5090646	PrimaryExpression	4		5090529	1					
ANR	5090647	Argument	& signal_string		5090529	1					
ANR	5090648	UnaryOperationExpression	& signal_string		5090529	0					
ANR	5090649	UnaryOperator	&		5090529	0					
ANR	5090650	Identifier	signal_string		5090529	1					
ANR	5090651	CompoundStatement		28:58:562:562	5090529	1					
ANR	5090652	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	575:2:14375:14396	5090529	0	True				
ANR	5090653	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090529	0					
ANR	5090654	Callee	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090655	Identifier	HANDLE_SYNTAX_ERROR		5090529	0					
ANR	5090656	ArgumentList			5090529	1					
ANR	5090657	ReturnStatement	return 0 ;	576:2:14400:14408	5090529	1	True				
ANR	5090658	PrimaryExpression	0		5090529	0					
ANR	5090659	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	579:1:14416:14463	5090529	9	True				
ANR	5090660	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5090529	0		=			
ANR	5090661	Identifier	gram_arg		5090529	0					
ANR	5090662	CallExpression	"new_gram_arg ( req_id , current_cred )"		5090529	1					
ANR	5090663	Callee	new_gram_arg		5090529	0					
ANR	5090664	Identifier	new_gram_arg		5090529	0					
ANR	5090665	ArgumentList	req_id		5090529	1					
ANR	5090666	Argument	req_id		5090529	0					
ANR	5090667	Identifier	req_id		5090529	0					
ANR	5090668	Argument	current_cred		5090529	1					
ANR	5090669	Identifier	current_cred		5090529	0					
ANR	5090670	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	581:1:14467:14485	5090529	10	True				
ANR	5090671	CallExpression	"gahp_printf ( ""S\\n"" )"		5090529	0					
ANR	5090672	Callee	gahp_printf		5090529	0					
ANR	5090673	Identifier	gahp_printf		5090529	0					
ANR	5090674	ArgumentList	"""S\\n"""		5090529	1					
ANR	5090675	Argument	"""S\\n"""		5090529	0					
ANR	5090676	PrimaryExpression	"""S\\n"""		5090529	0					
ANR	5090677	ExpressionStatement	gahp_sem_up ( & print_control )	582:1:14488:14515	5090529	11	True				
ANR	5090678	CallExpression	gahp_sem_up ( & print_control )		5090529	0					
ANR	5090679	Callee	gahp_sem_up		5090529	0					
ANR	5090680	Identifier	gahp_sem_up		5090529	0					
ANR	5090681	ArgumentList	& print_control		5090529	1					
ANR	5090682	Argument	& print_control		5090529	0					
ANR	5090683	UnaryOperationExpression	& print_control		5090529	0					
ANR	5090684	UnaryOperator	&		5090529	0					
ANR	5090685	Identifier	print_control		5090529	1					
ANR	5090686	ExpressionStatement	"result = globus_gram_client_register_job_signal ( job_contact , ( globus_gram_protocol_job_signal_t ) signal , signal_string , gram_arg -> gram_attr , callback_gram_job_signal , ( void * ) gram_arg )"	583:1:14518:14730	5090529	12	True				
ANR	5090687	AssignmentExpression	"result = globus_gram_client_register_job_signal ( job_contact , ( globus_gram_protocol_job_signal_t ) signal , signal_string , gram_arg -> gram_attr , callback_gram_job_signal , ( void * ) gram_arg )"		5090529	0		=			
ANR	5090688	Identifier	result		5090529	0					
ANR	5090689	CallExpression	"globus_gram_client_register_job_signal ( job_contact , ( globus_gram_protocol_job_signal_t ) signal , signal_string , gram_arg -> gram_attr , callback_gram_job_signal , ( void * ) gram_arg )"		5090529	1					
ANR	5090690	Callee	globus_gram_client_register_job_signal		5090529	0					
ANR	5090691	Identifier	globus_gram_client_register_job_signal		5090529	0					
ANR	5090692	ArgumentList	job_contact		5090529	1					
ANR	5090693	Argument	job_contact		5090529	0					
ANR	5090694	Identifier	job_contact		5090529	0					
ANR	5090695	Argument	( globus_gram_protocol_job_signal_t ) signal		5090529	1					
ANR	5090696	CastExpression	( globus_gram_protocol_job_signal_t ) signal		5090529	0					
ANR	5090697	CastTarget	globus_gram_protocol_job_signal_t		5090529	0					
ANR	5090698	Identifier	signal		5090529	1					
ANR	5090699	Argument	signal_string		5090529	2					
ANR	5090700	Identifier	signal_string		5090529	0					
ANR	5090701	Argument	gram_arg -> gram_attr		5090529	3					
ANR	5090702	PtrMemberAccess	gram_arg -> gram_attr		5090529	0					
ANR	5090703	Identifier	gram_arg		5090529	0					
ANR	5090704	Identifier	gram_attr		5090529	1					
ANR	5090705	Argument	callback_gram_job_signal		5090529	4					
ANR	5090706	Identifier	callback_gram_job_signal		5090529	0					
ANR	5090707	Argument	( void * ) gram_arg		5090529	5					
ANR	5090708	CastExpression	( void * ) gram_arg		5090529	0					
ANR	5090709	CastTarget	void *		5090529	0					
ANR	5090710	Identifier	gram_arg		5090529	1					
ANR	5090711	IfStatement	if ( result != GLOBUS_SUCCESS )		5090529	13					
ANR	5090712	Condition	result != GLOBUS_SUCCESS	588:5:14738:14761	5090529	0	True				
ANR	5090713	EqualityExpression	result != GLOBUS_SUCCESS		5090529	0		!=			
ANR	5090714	Identifier	result		5090529	0					
ANR	5090715	Identifier	GLOBUS_SUCCESS		5090529	1					
ANR	5090716	CompoundStatement		42:31:955:955	5090529	1					
ANR	5090717	ExpressionStatement	"callback_gram_job_signal ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	589:2:14768:14924	5090529	0	True				
ANR	5090718	CallExpression	"callback_gram_job_signal ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5090529	0					
ANR	5090719	Callee	callback_gram_job_signal		5090529	0					
ANR	5090720	Identifier	callback_gram_job_signal		5090529	0					
ANR	5090721	ArgumentList	( void * ) gram_arg		5090529	1					
ANR	5090722	Argument	( void * ) gram_arg		5090529	0					
ANR	5090723	CastExpression	( void * ) gram_arg		5090529	0					
ANR	5090724	CastTarget	void *		5090529	0					
ANR	5090725	Identifier	gram_arg		5090529	1					
ANR	5090726	Argument	( globus_gram_protocol_error_t ) result		5090529	1					
ANR	5090727	CastExpression	( globus_gram_protocol_error_t ) result		5090529	0					
ANR	5090728	CastTarget	globus_gram_protocol_error_t		5090529	0					
ANR	5090729	Identifier	result		5090529	1					
ANR	5090730	Argument	NULL		5090529	2					
ANR	5090731	Identifier	NULL		5090529	0					
ANR	5090732	Argument	( globus_gram_protocol_job_state_t ) 0		5090529	3					
ANR	5090733	CastExpression	( globus_gram_protocol_job_state_t ) 0		5090529	0					
ANR	5090734	CastTarget	globus_gram_protocol_job_state_t		5090529	0					
ANR	5090735	PrimaryExpression	0		5090529	1					
ANR	5090736	Argument	( globus_gram_protocol_error_t ) 0		5090529	4					
ANR	5090737	CastExpression	( globus_gram_protocol_error_t ) 0		5090529	0					
ANR	5090738	CastTarget	globus_gram_protocol_error_t		5090529	0					
ANR	5090739	PrimaryExpression	0		5090529	1					
ANR	5090740	ExpressionStatement	all_args_free ( user_arg )	592:1:14931:14954	5090529	14	True				
ANR	5090741	CallExpression	all_args_free ( user_arg )		5090529	0					
ANR	5090742	Callee	all_args_free		5090529	0					
ANR	5090743	Identifier	all_args_free		5090529	0					
ANR	5090744	ArgumentList	user_arg		5090529	1					
ANR	5090745	Argument	user_arg		5090529	0					
ANR	5090746	Identifier	user_arg		5090529	0					
ANR	5090747	ReturnStatement	return 0 ;	593:1:14957:14965	5090529	15	True				
ANR	5090748	PrimaryExpression	0		5090529	0					
ANR	5090749	ReturnType	int		5090529	1					
ANR	5090750	Identifier	handle_gram_job_signal		5090529	2					
ANR	5090751	ParameterList	void * user_arg		5090529	3					
ANR	5090752	Parameter	void * user_arg	546:23:13791:13805	5090529	0	True				
ANR	5090753	ParameterType	void *		5090529	0					
ANR	5090754	Identifier	user_arg		5090529	1					
ANR	5090755	CFGEntryNode	ENTRY		5090529		True				
ANR	5090756	CFGExitNode	EXIT		5090529		True				
ANR	5090757	Symbol	user_arg		5090529						
ANR	5090758	Symbol	* input_line		5090529						
ANR	5090759	Symbol	process_string_arg		5090529						
ANR	5090760	Symbol	NULL		5090529						
ANR	5090761	Symbol	& signal_string		5090529						
ANR	5090762	Symbol	new_gram_arg		5090529						
ANR	5090763	Symbol	* gram_arg		5090529						
ANR	5090764	Symbol	GLOBUS_SUCCESS		5090529						
ANR	5090765	Symbol	input_line		5090529						
ANR	5090766	Symbol	& signal		5090529						
ANR	5090767	Symbol	process_int_arg		5090529						
ANR	5090768	Symbol	& job_contact		5090529						
ANR	5090769	Symbol	& print_control		5090529						
ANR	5090770	Symbol	result		5090529						
ANR	5090771	Symbol	req_id		5090529						
ANR	5090772	Symbol	current_cred		5090529						
ANR	5090773	Symbol	globus_gram_client_register_job_signal		5090529						
ANR	5090774	Symbol	gram_arg -> gram_attr		5090529						
ANR	5090775	Symbol	signal_string		5090529						
ANR	5090776	Symbol	& req_id		5090529						
ANR	5090777	Symbol	gram_arg		5090529						
ANR	5090778	Symbol	signal		5090529						
ANR	5090779	Symbol	job_contact		5090529						
ANR	5090780	Symbol	callback_gram_job_signal		5090529						
ANR	5090781	Function	callback_gram_job_signal	596:0:14970:15476							
ANR	5090782	FunctionDef	"callback_gram_job_signal (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5090781	0					
ANR	5090783	CompoundStatement		602:0:15188:15476	5090781	0					
ANR	5090784	IdentifierDeclStatement	char * output ;	603:1:15191:15203	5090781	0	True				
ANR	5090785	IdentifierDecl	* output		5090781	0					
ANR	5090786	IdentifierDeclType	char *		5090781	0					
ANR	5090787	Identifier	output		5090781	1					
ANR	5090788	IdentifierDeclStatement	user_arg_t * gram_arg ;	604:1:15206:15227	5090781	1	True				
ANR	5090789	IdentifierDecl	* gram_arg		5090781	0					
ANR	5090790	IdentifierDeclType	user_arg_t *		5090781	0					
ANR	5090791	Identifier	gram_arg		5090781	1					
ANR	5090792	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	606:1:15231:15259	5090781	2	True				
ANR	5090793	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5090781	0		=			
ANR	5090794	Identifier	gram_arg		5090781	0					
ANR	5090795	CastExpression	( user_arg_t * ) arg		5090781	1					
ANR	5090796	CastTarget	user_arg_t *		5090781	0					
ANR	5090797	Identifier	arg		5090781	1					
ANR	5090798	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	608:1:15263:15303	5090781	3	True				
ANR	5090799	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5090781	0		=			
ANR	5090800	Identifier	output		5090781	0					
ANR	5090801	CastExpression	( char * ) globus_libc_malloc ( 500 )		5090781	1					
ANR	5090802	CastTarget	char *		5090781	0					
ANR	5090803	CallExpression	globus_libc_malloc ( 500 )		5090781	1					
ANR	5090804	Callee	globus_libc_malloc		5090781	0					
ANR	5090805	Identifier	globus_libc_malloc		5090781	0					
ANR	5090806	ArgumentList	500		5090781	1					
ANR	5090807	Argument	500		5090781	0					
ANR	5090808	PrimaryExpression	500		5090781	0					
ANR	5090809	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"	610:1:15307:15406	5090781	4	True				
ANR	5090810	CallExpression	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"		5090781	0					
ANR	5090811	Callee	globus_libc_sprintf		5090781	0					
ANR	5090812	Identifier	globus_libc_sprintf		5090781	0					
ANR	5090813	ArgumentList	output		5090781	1					
ANR	5090814	Argument	output		5090781	0					
ANR	5090815	Identifier	output		5090781	0					
ANR	5090816	Argument	"""%s %d %d %d"""		5090781	1					
ANR	5090817	PrimaryExpression	"""%s %d %d %d"""		5090781	0					
ANR	5090818	Argument	gram_arg -> req_id		5090781	2					
ANR	5090819	PtrMemberAccess	gram_arg -> req_id		5090781	0					
ANR	5090820	Identifier	gram_arg		5090781	0					
ANR	5090821	Identifier	req_id		5090781	1					
ANR	5090822	Argument	operation_fc		5090781	3					
ANR	5090823	Identifier	operation_fc		5090781	0					
ANR	5090824	Argument	job_fc		5090781	4					
ANR	5090825	Identifier	job_fc		5090781	0					
ANR	5090826	Argument	job_state		5090781	5					
ANR	5090827	Identifier	job_state		5090781	0					
ANR	5090828	ExpressionStatement	enqueue_results ( output )	613:1:15410:15433	5090781	5	True				
ANR	5090829	CallExpression	enqueue_results ( output )		5090781	0					
ANR	5090830	Callee	enqueue_results		5090781	0					
ANR	5090831	Identifier	enqueue_results		5090781	0					
ANR	5090832	ArgumentList	output		5090781	1					
ANR	5090833	Argument	output		5090781	0					
ANR	5090834	Identifier	output		5090781	0					
ANR	5090835	ExpressionStatement	delete_gram_arg ( gram_arg )	615:1:15438:15465	5090781	6	True				
ANR	5090836	CallExpression	delete_gram_arg ( gram_arg )		5090781	0					
ANR	5090837	Callee	delete_gram_arg		5090781	0					
ANR	5090838	Identifier	delete_gram_arg		5090781	0					
ANR	5090839	ArgumentList	gram_arg		5090781	1					
ANR	5090840	Argument	gram_arg		5090781	0					
ANR	5090841	Identifier	gram_arg		5090781	0					
ANR	5090842	ReturnStatement	return ;	616:1:15468:15474	5090781	7	True				
ANR	5090843	ReturnType	void		5090781	1					
ANR	5090844	Identifier	callback_gram_job_signal		5090781	2					
ANR	5090845	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5090781	3					
ANR	5090846	Parameter	void * arg	597:25:15000:15008	5090781	0	True				
ANR	5090847	ParameterType	void *		5090781	0					
ANR	5090848	Identifier	arg		5090781	1					
ANR	5090849	Parameter	globus_gram_protocol_error_t operation_fc	598:7:15018:15058	5090781	1	True				
ANR	5090850	ParameterType	globus_gram_protocol_error_t		5090781	0					
ANR	5090851	Identifier	operation_fc		5090781	1					
ANR	5090852	Parameter	const char * job_contact	599:7:15068:15090	5090781	2	True				
ANR	5090853	ParameterType	const char *		5090781	0					
ANR	5090854	Identifier	job_contact		5090781	1					
ANR	5090855	Parameter	globus_gram_protocol_job_state_t job_state	600:7:15100:15141	5090781	3	True				
ANR	5090856	ParameterType	globus_gram_protocol_job_state_t		5090781	0					
ANR	5090857	Identifier	job_state		5090781	1					
ANR	5090858	Parameter	globus_gram_protocol_error_t job_fc	601:7:15151:15185	5090781	4	True				
ANR	5090859	ParameterType	globus_gram_protocol_error_t		5090781	0					
ANR	5090860	Identifier	job_fc		5090781	1					
ANR	5090861	CFGEntryNode	ENTRY		5090781		True				
ANR	5090862	CFGExitNode	EXIT		5090781		True				
ANR	5090863	Symbol	output		5090781						
ANR	5090864	Symbol	job_fc		5090781						
ANR	5090865	Symbol	gram_arg -> req_id		5090781						
ANR	5090866	Symbol	arg		5090781						
ANR	5090867	Symbol	* gram_arg		5090781						
ANR	5090868	Symbol	globus_libc_malloc		5090781						
ANR	5090869	Symbol	operation_fc		5090781						
ANR	5090870	Symbol	gram_arg		5090781						
ANR	5090871	Symbol	job_contact		5090781						
ANR	5090872	Symbol	job_state		5090781						
ANR	5090873	Function	handle_gram_job_status	619:0:15479:16352							
ANR	5090874	FunctionDef	handle_gram_job_status (void * user_arg)		5090873	0					
ANR	5090875	CompoundStatement		621:0:15523:16352	5090873	0					
ANR	5090876	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	622:1:15526:15564	5090873	0	True				
ANR	5090877	IdentifierDecl	* * input_line = ( char * * ) user_arg		5090873	0					
ANR	5090878	IdentifierDeclType	char * *		5090873	0					
ANR	5090879	Identifier	input_line		5090873	1					
ANR	5090880	AssignmentExpression	* * input_line = ( char * * ) user_arg		5090873	2		=			
ANR	5090881	Identifier	input_line		5090873	0					
ANR	5090882	CastExpression	( char * * ) user_arg		5090873	1					
ANR	5090883	CastTarget	char * *		5090873	0					
ANR	5090884	Identifier	user_arg		5090873	1					
ANR	5090885	IdentifierDeclStatement	int result ;	623:1:15567:15577	5090873	1	True				
ANR	5090886	IdentifierDecl	result		5090873	0					
ANR	5090887	IdentifierDeclType	int		5090873	0					
ANR	5090888	Identifier	result		5090873	1					
ANR	5090889	IdentifierDeclStatement	user_arg_t * gram_arg ;	624:1:15580:15601	5090873	2	True				
ANR	5090890	IdentifierDecl	* gram_arg		5090873	0					
ANR	5090891	IdentifierDeclType	user_arg_t *		5090873	0					
ANR	5090892	Identifier	gram_arg		5090873	1					
ANR	5090893	IdentifierDeclStatement	"char * req_id , * job_contact ;"	627:1:15647:15673	5090873	3	True				
ANR	5090894	IdentifierDecl	* req_id		5090873	0					
ANR	5090895	IdentifierDeclType	char *		5090873	0					
ANR	5090896	Identifier	req_id		5090873	1					
ANR	5090897	IdentifierDecl	* job_contact		5090873	1					
ANR	5090898	IdentifierDeclType	char *		5090873	0					
ANR	5090899	Identifier	job_contact		5090873	1					
ANR	5090900	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5090873	4					
ANR	5090901	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	629:5:15681:15723	5090873	0	True				
ANR	5090902	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5090873	0					
ANR	5090903	UnaryOperator	!		5090873	0					
ANR	5090904	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5090873	1					
ANR	5090905	Callee	process_string_arg		5090873	0					
ANR	5090906	Identifier	process_string_arg		5090873	0					
ANR	5090907	ArgumentList	input_line [ 1 ]		5090873	1					
ANR	5090908	Argument	input_line [ 1 ]		5090873	0					
ANR	5090909	ArrayIndexing	input_line [ 1 ]		5090873	0					
ANR	5090910	Identifier	input_line		5090873	0					
ANR	5090911	PrimaryExpression	1		5090873	1					
ANR	5090912	Argument	& req_id		5090873	1					
ANR	5090913	UnaryOperationExpression	& req_id		5090873	0					
ANR	5090914	UnaryOperator	&		5090873	0					
ANR	5090915	Identifier	req_id		5090873	1					
ANR	5090916	CompoundStatement		9:51:203:203	5090873	1					
ANR	5090917	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	630:2:15731:15752	5090873	0	True				
ANR	5090918	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090873	0					
ANR	5090919	Callee	HANDLE_SYNTAX_ERROR		5090873	0					
ANR	5090920	Identifier	HANDLE_SYNTAX_ERROR		5090873	0					
ANR	5090921	ArgumentList			5090873	1					
ANR	5090922	ReturnStatement	return 0 ;	631:2:15756:15764	5090873	1	True				
ANR	5090923	PrimaryExpression	0		5090873	0					
ANR	5090924	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & job_contact ) )"		5090873	5					
ANR	5090925	Condition	"! process_string_arg ( input_line [ 2 ] , & job_contact )"	634:5:15775:15822	5090873	0	True				
ANR	5090926	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & job_contact )"		5090873	0					
ANR	5090927	UnaryOperator	!		5090873	0					
ANR	5090928	CallExpression	"process_string_arg ( input_line [ 2 ] , & job_contact )"		5090873	1					
ANR	5090929	Callee	process_string_arg		5090873	0					
ANR	5090930	Identifier	process_string_arg		5090873	0					
ANR	5090931	ArgumentList	input_line [ 2 ]		5090873	1					
ANR	5090932	Argument	input_line [ 2 ]		5090873	0					
ANR	5090933	ArrayIndexing	input_line [ 2 ]		5090873	0					
ANR	5090934	Identifier	input_line		5090873	0					
ANR	5090935	PrimaryExpression	2		5090873	1					
ANR	5090936	Argument	& job_contact		5090873	1					
ANR	5090937	UnaryOperationExpression	& job_contact		5090873	0					
ANR	5090938	UnaryOperator	&		5090873	0					
ANR	5090939	Identifier	job_contact		5090873	1					
ANR	5090940	CompoundStatement		14:56:302:302	5090873	1					
ANR	5090941	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	635:2:15830:15851	5090873	0	True				
ANR	5090942	CallExpression	HANDLE_SYNTAX_ERROR ( )		5090873	0					
ANR	5090943	Callee	HANDLE_SYNTAX_ERROR		5090873	0					
ANR	5090944	Identifier	HANDLE_SYNTAX_ERROR		5090873	0					
ANR	5090945	ArgumentList			5090873	1					
ANR	5090946	ReturnStatement	return 0 ;	636:2:15855:15863	5090873	1	True				
ANR	5090947	PrimaryExpression	0		5090873	0					
ANR	5090948	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	639:1:15870:15917	5090873	6	True				
ANR	5090949	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5090873	0		=			
ANR	5090950	Identifier	gram_arg		5090873	0					
ANR	5090951	CallExpression	"new_gram_arg ( req_id , current_cred )"		5090873	1					
ANR	5090952	Callee	new_gram_arg		5090873	0					
ANR	5090953	Identifier	new_gram_arg		5090873	0					
ANR	5090954	ArgumentList	req_id		5090873	1					
ANR	5090955	Argument	req_id		5090873	0					
ANR	5090956	Identifier	req_id		5090873	0					
ANR	5090957	Argument	current_cred		5090873	1					
ANR	5090958	Identifier	current_cred		5090873	0					
ANR	5090959	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	641:1:15921:15939	5090873	7	True				
ANR	5090960	CallExpression	"gahp_printf ( ""S\\n"" )"		5090873	0					
ANR	5090961	Callee	gahp_printf		5090873	0					
ANR	5090962	Identifier	gahp_printf		5090873	0					
ANR	5090963	ArgumentList	"""S\\n"""		5090873	1					
ANR	5090964	Argument	"""S\\n"""		5090873	0					
ANR	5090965	PrimaryExpression	"""S\\n"""		5090873	0					
ANR	5090966	ExpressionStatement	gahp_sem_up ( & print_control )	642:1:15942:15969	5090873	8	True				
ANR	5090967	CallExpression	gahp_sem_up ( & print_control )		5090873	0					
ANR	5090968	Callee	gahp_sem_up		5090873	0					
ANR	5090969	Identifier	gahp_sem_up		5090873	0					
ANR	5090970	ArgumentList	& print_control		5090873	1					
ANR	5090971	Argument	& print_control		5090873	0					
ANR	5090972	UnaryOperationExpression	& print_control		5090873	0					
ANR	5090973	UnaryOperator	&		5090873	0					
ANR	5090974	Identifier	print_control		5090873	1					
ANR	5090975	ExpressionStatement	"result = globus_gram_client_register_job_status ( job_contact , gram_arg -> gram_attr , callback_gram_job_status , ( void * ) gram_arg )"	643:1:15972:16115	5090873	9	True				
ANR	5090976	AssignmentExpression	"result = globus_gram_client_register_job_status ( job_contact , gram_arg -> gram_attr , callback_gram_job_status , ( void * ) gram_arg )"		5090873	0		=			
ANR	5090977	Identifier	result		5090873	0					
ANR	5090978	CallExpression	"globus_gram_client_register_job_status ( job_contact , gram_arg -> gram_attr , callback_gram_job_status , ( void * ) gram_arg )"		5090873	1					
ANR	5090979	Callee	globus_gram_client_register_job_status		5090873	0					
ANR	5090980	Identifier	globus_gram_client_register_job_status		5090873	0					
ANR	5090981	ArgumentList	job_contact		5090873	1					
ANR	5090982	Argument	job_contact		5090873	0					
ANR	5090983	Identifier	job_contact		5090873	0					
ANR	5090984	Argument	gram_arg -> gram_attr		5090873	1					
ANR	5090985	PtrMemberAccess	gram_arg -> gram_attr		5090873	0					
ANR	5090986	Identifier	gram_arg		5090873	0					
ANR	5090987	Identifier	gram_attr		5090873	1					
ANR	5090988	Argument	callback_gram_job_status		5090873	2					
ANR	5090989	Identifier	callback_gram_job_status		5090873	0					
ANR	5090990	Argument	( void * ) gram_arg		5090873	3					
ANR	5090991	CastExpression	( void * ) gram_arg		5090873	0					
ANR	5090992	CastTarget	void *		5090873	0					
ANR	5090993	Identifier	gram_arg		5090873	1					
ANR	5090994	IfStatement	if ( result != GLOBUS_SUCCESS )		5090873	10					
ANR	5090995	Condition	result != GLOBUS_SUCCESS	647:5:16123:16146	5090873	0	True				
ANR	5090996	EqualityExpression	result != GLOBUS_SUCCESS		5090873	0		!=			
ANR	5090997	Identifier	result		5090873	0					
ANR	5090998	Identifier	GLOBUS_SUCCESS		5090873	1					
ANR	5090999	CompoundStatement		27:31:625:625	5090873	1					
ANR	5091000	ExpressionStatement	"callback_gram_job_status ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	648:2:16153:16309	5090873	0	True				
ANR	5091001	CallExpression	"callback_gram_job_status ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5090873	0					
ANR	5091002	Callee	callback_gram_job_status		5090873	0					
ANR	5091003	Identifier	callback_gram_job_status		5090873	0					
ANR	5091004	ArgumentList	( void * ) gram_arg		5090873	1					
ANR	5091005	Argument	( void * ) gram_arg		5090873	0					
ANR	5091006	CastExpression	( void * ) gram_arg		5090873	0					
ANR	5091007	CastTarget	void *		5090873	0					
ANR	5091008	Identifier	gram_arg		5090873	1					
ANR	5091009	Argument	( globus_gram_protocol_error_t ) result		5090873	1					
ANR	5091010	CastExpression	( globus_gram_protocol_error_t ) result		5090873	0					
ANR	5091011	CastTarget	globus_gram_protocol_error_t		5090873	0					
ANR	5091012	Identifier	result		5090873	1					
ANR	5091013	Argument	NULL		5090873	2					
ANR	5091014	Identifier	NULL		5090873	0					
ANR	5091015	Argument	( globus_gram_protocol_job_state_t ) 0		5090873	3					
ANR	5091016	CastExpression	( globus_gram_protocol_job_state_t ) 0		5090873	0					
ANR	5091017	CastTarget	globus_gram_protocol_job_state_t		5090873	0					
ANR	5091018	PrimaryExpression	0		5090873	1					
ANR	5091019	Argument	( globus_gram_protocol_error_t ) 0		5090873	4					
ANR	5091020	CastExpression	( globus_gram_protocol_error_t ) 0		5090873	0					
ANR	5091021	CastTarget	globus_gram_protocol_error_t		5090873	0					
ANR	5091022	PrimaryExpression	0		5090873	1					
ANR	5091023	ExpressionStatement	all_args_free ( user_arg )	651:1:16316:16339	5090873	11	True				
ANR	5091024	CallExpression	all_args_free ( user_arg )		5090873	0					
ANR	5091025	Callee	all_args_free		5090873	0					
ANR	5091026	Identifier	all_args_free		5090873	0					
ANR	5091027	ArgumentList	user_arg		5090873	1					
ANR	5091028	Argument	user_arg		5090873	0					
ANR	5091029	Identifier	user_arg		5090873	0					
ANR	5091030	ReturnStatement	return 0 ;	652:1:16342:16350	5090873	12	True				
ANR	5091031	PrimaryExpression	0		5090873	0					
ANR	5091032	ReturnType	int		5090873	1					
ANR	5091033	Identifier	handle_gram_job_status		5090873	2					
ANR	5091034	ParameterList	void * user_arg		5090873	3					
ANR	5091035	Parameter	void * user_arg	620:23:15506:15520	5090873	0	True				
ANR	5091036	ParameterType	void *		5090873	0					
ANR	5091037	Identifier	user_arg		5090873	1					
ANR	5091038	CFGEntryNode	ENTRY		5090873		True				
ANR	5091039	CFGExitNode	EXIT		5090873		True				
ANR	5091040	Symbol	user_arg		5090873						
ANR	5091041	Symbol	globus_gram_client_register_job_status		5090873						
ANR	5091042	Symbol	* input_line		5090873						
ANR	5091043	Symbol	process_string_arg		5090873						
ANR	5091044	Symbol	NULL		5090873						
ANR	5091045	Symbol	new_gram_arg		5090873						
ANR	5091046	Symbol	* gram_arg		5090873						
ANR	5091047	Symbol	GLOBUS_SUCCESS		5090873						
ANR	5091048	Symbol	input_line		5090873						
ANR	5091049	Symbol	& job_contact		5090873						
ANR	5091050	Symbol	& print_control		5090873						
ANR	5091051	Symbol	result		5090873						
ANR	5091052	Symbol	req_id		5090873						
ANR	5091053	Symbol	current_cred		5090873						
ANR	5091054	Symbol	gram_arg -> gram_attr		5090873						
ANR	5091055	Symbol	& req_id		5090873						
ANR	5091056	Symbol	gram_arg		5090873						
ANR	5091057	Symbol	callback_gram_job_status		5090873						
ANR	5091058	Symbol	job_contact		5090873						
ANR	5091059	Function	callback_gram_job_status	655:0:16355:16861							
ANR	5091060	FunctionDef	"callback_gram_job_status (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5091059	0					
ANR	5091061	CompoundStatement		661:0:16573:16861	5091059	0					
ANR	5091062	IdentifierDeclStatement	char * output ;	662:1:16576:16588	5091059	0	True				
ANR	5091063	IdentifierDecl	* output		5091059	0					
ANR	5091064	IdentifierDeclType	char *		5091059	0					
ANR	5091065	Identifier	output		5091059	1					
ANR	5091066	IdentifierDeclStatement	user_arg_t * gram_arg ;	663:1:16591:16612	5091059	1	True				
ANR	5091067	IdentifierDecl	* gram_arg		5091059	0					
ANR	5091068	IdentifierDeclType	user_arg_t *		5091059	0					
ANR	5091069	Identifier	gram_arg		5091059	1					
ANR	5091070	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	665:1:16616:16644	5091059	2	True				
ANR	5091071	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5091059	0		=			
ANR	5091072	Identifier	gram_arg		5091059	0					
ANR	5091073	CastExpression	( user_arg_t * ) arg		5091059	1					
ANR	5091074	CastTarget	user_arg_t *		5091059	0					
ANR	5091075	Identifier	arg		5091059	1					
ANR	5091076	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	667:1:16648:16688	5091059	3	True				
ANR	5091077	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5091059	0		=			
ANR	5091078	Identifier	output		5091059	0					
ANR	5091079	CastExpression	( char * ) globus_libc_malloc ( 500 )		5091059	1					
ANR	5091080	CastTarget	char *		5091059	0					
ANR	5091081	CallExpression	globus_libc_malloc ( 500 )		5091059	1					
ANR	5091082	Callee	globus_libc_malloc		5091059	0					
ANR	5091083	Identifier	globus_libc_malloc		5091059	0					
ANR	5091084	ArgumentList	500		5091059	1					
ANR	5091085	Argument	500		5091059	0					
ANR	5091086	PrimaryExpression	500		5091059	0					
ANR	5091087	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"	669:1:16692:16791	5091059	4	True				
ANR	5091088	CallExpression	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"		5091059	0					
ANR	5091089	Callee	globus_libc_sprintf		5091059	0					
ANR	5091090	Identifier	globus_libc_sprintf		5091059	0					
ANR	5091091	ArgumentList	output		5091059	1					
ANR	5091092	Argument	output		5091059	0					
ANR	5091093	Identifier	output		5091059	0					
ANR	5091094	Argument	"""%s %d %d %d"""		5091059	1					
ANR	5091095	PrimaryExpression	"""%s %d %d %d"""		5091059	0					
ANR	5091096	Argument	gram_arg -> req_id		5091059	2					
ANR	5091097	PtrMemberAccess	gram_arg -> req_id		5091059	0					
ANR	5091098	Identifier	gram_arg		5091059	0					
ANR	5091099	Identifier	req_id		5091059	1					
ANR	5091100	Argument	operation_fc		5091059	3					
ANR	5091101	Identifier	operation_fc		5091059	0					
ANR	5091102	Argument	job_fc		5091059	4					
ANR	5091103	Identifier	job_fc		5091059	0					
ANR	5091104	Argument	job_state		5091059	5					
ANR	5091105	Identifier	job_state		5091059	0					
ANR	5091106	ExpressionStatement	enqueue_results ( output )	672:1:16795:16818	5091059	5	True				
ANR	5091107	CallExpression	enqueue_results ( output )		5091059	0					
ANR	5091108	Callee	enqueue_results		5091059	0					
ANR	5091109	Identifier	enqueue_results		5091059	0					
ANR	5091110	ArgumentList	output		5091059	1					
ANR	5091111	Argument	output		5091059	0					
ANR	5091112	Identifier	output		5091059	0					
ANR	5091113	ExpressionStatement	delete_gram_arg ( gram_arg )	674:1:16823:16850	5091059	6	True				
ANR	5091114	CallExpression	delete_gram_arg ( gram_arg )		5091059	0					
ANR	5091115	Callee	delete_gram_arg		5091059	0					
ANR	5091116	Identifier	delete_gram_arg		5091059	0					
ANR	5091117	ArgumentList	gram_arg		5091059	1					
ANR	5091118	Argument	gram_arg		5091059	0					
ANR	5091119	Identifier	gram_arg		5091059	0					
ANR	5091120	ReturnStatement	return ;	675:1:16853:16859	5091059	7	True				
ANR	5091121	ReturnType	void		5091059	1					
ANR	5091122	Identifier	callback_gram_job_status		5091059	2					
ANR	5091123	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5091059	3					
ANR	5091124	Parameter	void * arg	656:25:16385:16393	5091059	0	True				
ANR	5091125	ParameterType	void *		5091059	0					
ANR	5091126	Identifier	arg		5091059	1					
ANR	5091127	Parameter	globus_gram_protocol_error_t operation_fc	657:7:16403:16443	5091059	1	True				
ANR	5091128	ParameterType	globus_gram_protocol_error_t		5091059	0					
ANR	5091129	Identifier	operation_fc		5091059	1					
ANR	5091130	Parameter	const char * job_contact	658:7:16453:16475	5091059	2	True				
ANR	5091131	ParameterType	const char *		5091059	0					
ANR	5091132	Identifier	job_contact		5091059	1					
ANR	5091133	Parameter	globus_gram_protocol_job_state_t job_state	659:7:16485:16526	5091059	3	True				
ANR	5091134	ParameterType	globus_gram_protocol_job_state_t		5091059	0					
ANR	5091135	Identifier	job_state		5091059	1					
ANR	5091136	Parameter	globus_gram_protocol_error_t job_fc	660:7:16536:16570	5091059	4	True				
ANR	5091137	ParameterType	globus_gram_protocol_error_t		5091059	0					
ANR	5091138	Identifier	job_fc		5091059	1					
ANR	5091139	CFGEntryNode	ENTRY		5091059		True				
ANR	5091140	CFGExitNode	EXIT		5091059		True				
ANR	5091141	Symbol	output		5091059						
ANR	5091142	Symbol	job_fc		5091059						
ANR	5091143	Symbol	gram_arg -> req_id		5091059						
ANR	5091144	Symbol	arg		5091059						
ANR	5091145	Symbol	* gram_arg		5091059						
ANR	5091146	Symbol	globus_libc_malloc		5091059						
ANR	5091147	Symbol	operation_fc		5091059						
ANR	5091148	Symbol	gram_arg		5091059						
ANR	5091149	Symbol	job_contact		5091059						
ANR	5091150	Symbol	job_state		5091059						
ANR	5091151	Function	handle_gram_job_cancel	678:0:16864:17737							
ANR	5091152	FunctionDef	handle_gram_job_cancel (void * user_arg)		5091151	0					
ANR	5091153	CompoundStatement		680:0:16908:17737	5091151	0					
ANR	5091154	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	681:1:16911:16949	5091151	0	True				
ANR	5091155	IdentifierDecl	* * input_line = ( char * * ) user_arg		5091151	0					
ANR	5091156	IdentifierDeclType	char * *		5091151	0					
ANR	5091157	Identifier	input_line		5091151	1					
ANR	5091158	AssignmentExpression	* * input_line = ( char * * ) user_arg		5091151	2		=			
ANR	5091159	Identifier	input_line		5091151	0					
ANR	5091160	CastExpression	( char * * ) user_arg		5091151	1					
ANR	5091161	CastTarget	char * *		5091151	0					
ANR	5091162	Identifier	user_arg		5091151	1					
ANR	5091163	IdentifierDeclStatement	int result ;	682:1:16952:16962	5091151	1	True				
ANR	5091164	IdentifierDecl	result		5091151	0					
ANR	5091165	IdentifierDeclType	int		5091151	0					
ANR	5091166	Identifier	result		5091151	1					
ANR	5091167	IdentifierDeclStatement	user_arg_t * gram_arg ;	683:1:16965:16986	5091151	2	True				
ANR	5091168	IdentifierDecl	* gram_arg		5091151	0					
ANR	5091169	IdentifierDeclType	user_arg_t *		5091151	0					
ANR	5091170	Identifier	gram_arg		5091151	1					
ANR	5091171	IdentifierDeclStatement	"char * req_id , * job_contact ;"	686:1:17032:17058	5091151	3	True				
ANR	5091172	IdentifierDecl	* req_id		5091151	0					
ANR	5091173	IdentifierDeclType	char *		5091151	0					
ANR	5091174	Identifier	req_id		5091151	1					
ANR	5091175	IdentifierDecl	* job_contact		5091151	1					
ANR	5091176	IdentifierDeclType	char *		5091151	0					
ANR	5091177	Identifier	job_contact		5091151	1					
ANR	5091178	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5091151	4					
ANR	5091179	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	688:5:17066:17108	5091151	0	True				
ANR	5091180	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5091151	0					
ANR	5091181	UnaryOperator	!		5091151	0					
ANR	5091182	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5091151	1					
ANR	5091183	Callee	process_string_arg		5091151	0					
ANR	5091184	Identifier	process_string_arg		5091151	0					
ANR	5091185	ArgumentList	input_line [ 1 ]		5091151	1					
ANR	5091186	Argument	input_line [ 1 ]		5091151	0					
ANR	5091187	ArrayIndexing	input_line [ 1 ]		5091151	0					
ANR	5091188	Identifier	input_line		5091151	0					
ANR	5091189	PrimaryExpression	1		5091151	1					
ANR	5091190	Argument	& req_id		5091151	1					
ANR	5091191	UnaryOperationExpression	& req_id		5091151	0					
ANR	5091192	UnaryOperator	&		5091151	0					
ANR	5091193	Identifier	req_id		5091151	1					
ANR	5091194	CompoundStatement		9:51:203:203	5091151	1					
ANR	5091195	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	689:2:17116:17137	5091151	0	True				
ANR	5091196	CallExpression	HANDLE_SYNTAX_ERROR ( )		5091151	0					
ANR	5091197	Callee	HANDLE_SYNTAX_ERROR		5091151	0					
ANR	5091198	Identifier	HANDLE_SYNTAX_ERROR		5091151	0					
ANR	5091199	ArgumentList			5091151	1					
ANR	5091200	ReturnStatement	return 0 ;	690:2:17141:17149	5091151	1	True				
ANR	5091201	PrimaryExpression	0		5091151	0					
ANR	5091202	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & job_contact ) )"		5091151	5					
ANR	5091203	Condition	"! process_string_arg ( input_line [ 2 ] , & job_contact )"	693:5:17160:17207	5091151	0	True				
ANR	5091204	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & job_contact )"		5091151	0					
ANR	5091205	UnaryOperator	!		5091151	0					
ANR	5091206	CallExpression	"process_string_arg ( input_line [ 2 ] , & job_contact )"		5091151	1					
ANR	5091207	Callee	process_string_arg		5091151	0					
ANR	5091208	Identifier	process_string_arg		5091151	0					
ANR	5091209	ArgumentList	input_line [ 2 ]		5091151	1					
ANR	5091210	Argument	input_line [ 2 ]		5091151	0					
ANR	5091211	ArrayIndexing	input_line [ 2 ]		5091151	0					
ANR	5091212	Identifier	input_line		5091151	0					
ANR	5091213	PrimaryExpression	2		5091151	1					
ANR	5091214	Argument	& job_contact		5091151	1					
ANR	5091215	UnaryOperationExpression	& job_contact		5091151	0					
ANR	5091216	UnaryOperator	&		5091151	0					
ANR	5091217	Identifier	job_contact		5091151	1					
ANR	5091218	CompoundStatement		14:56:302:302	5091151	1					
ANR	5091219	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	694:2:17215:17236	5091151	0	True				
ANR	5091220	CallExpression	HANDLE_SYNTAX_ERROR ( )		5091151	0					
ANR	5091221	Callee	HANDLE_SYNTAX_ERROR		5091151	0					
ANR	5091222	Identifier	HANDLE_SYNTAX_ERROR		5091151	0					
ANR	5091223	ArgumentList			5091151	1					
ANR	5091224	ReturnStatement	return 0 ;	695:2:17240:17248	5091151	1	True				
ANR	5091225	PrimaryExpression	0		5091151	0					
ANR	5091226	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	698:1:17255:17302	5091151	6	True				
ANR	5091227	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5091151	0		=			
ANR	5091228	Identifier	gram_arg		5091151	0					
ANR	5091229	CallExpression	"new_gram_arg ( req_id , current_cred )"		5091151	1					
ANR	5091230	Callee	new_gram_arg		5091151	0					
ANR	5091231	Identifier	new_gram_arg		5091151	0					
ANR	5091232	ArgumentList	req_id		5091151	1					
ANR	5091233	Argument	req_id		5091151	0					
ANR	5091234	Identifier	req_id		5091151	0					
ANR	5091235	Argument	current_cred		5091151	1					
ANR	5091236	Identifier	current_cred		5091151	0					
ANR	5091237	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	700:1:17306:17324	5091151	7	True				
ANR	5091238	CallExpression	"gahp_printf ( ""S\\n"" )"		5091151	0					
ANR	5091239	Callee	gahp_printf		5091151	0					
ANR	5091240	Identifier	gahp_printf		5091151	0					
ANR	5091241	ArgumentList	"""S\\n"""		5091151	1					
ANR	5091242	Argument	"""S\\n"""		5091151	0					
ANR	5091243	PrimaryExpression	"""S\\n"""		5091151	0					
ANR	5091244	ExpressionStatement	gahp_sem_up ( & print_control )	701:1:17327:17354	5091151	8	True				
ANR	5091245	CallExpression	gahp_sem_up ( & print_control )		5091151	0					
ANR	5091246	Callee	gahp_sem_up		5091151	0					
ANR	5091247	Identifier	gahp_sem_up		5091151	0					
ANR	5091248	ArgumentList	& print_control		5091151	1					
ANR	5091249	Argument	& print_control		5091151	0					
ANR	5091250	UnaryOperationExpression	& print_control		5091151	0					
ANR	5091251	UnaryOperator	&		5091151	0					
ANR	5091252	Identifier	print_control		5091151	1					
ANR	5091253	ExpressionStatement	"result = globus_gram_client_register_job_cancel ( job_contact , gram_arg -> gram_attr , callback_gram_job_cancel , ( void * ) gram_arg )"	702:1:17357:17500	5091151	9	True				
ANR	5091254	AssignmentExpression	"result = globus_gram_client_register_job_cancel ( job_contact , gram_arg -> gram_attr , callback_gram_job_cancel , ( void * ) gram_arg )"		5091151	0		=			
ANR	5091255	Identifier	result		5091151	0					
ANR	5091256	CallExpression	"globus_gram_client_register_job_cancel ( job_contact , gram_arg -> gram_attr , callback_gram_job_cancel , ( void * ) gram_arg )"		5091151	1					
ANR	5091257	Callee	globus_gram_client_register_job_cancel		5091151	0					
ANR	5091258	Identifier	globus_gram_client_register_job_cancel		5091151	0					
ANR	5091259	ArgumentList	job_contact		5091151	1					
ANR	5091260	Argument	job_contact		5091151	0					
ANR	5091261	Identifier	job_contact		5091151	0					
ANR	5091262	Argument	gram_arg -> gram_attr		5091151	1					
ANR	5091263	PtrMemberAccess	gram_arg -> gram_attr		5091151	0					
ANR	5091264	Identifier	gram_arg		5091151	0					
ANR	5091265	Identifier	gram_attr		5091151	1					
ANR	5091266	Argument	callback_gram_job_cancel		5091151	2					
ANR	5091267	Identifier	callback_gram_job_cancel		5091151	0					
ANR	5091268	Argument	( void * ) gram_arg		5091151	3					
ANR	5091269	CastExpression	( void * ) gram_arg		5091151	0					
ANR	5091270	CastTarget	void *		5091151	0					
ANR	5091271	Identifier	gram_arg		5091151	1					
ANR	5091272	IfStatement	if ( result != GLOBUS_SUCCESS )		5091151	10					
ANR	5091273	Condition	result != GLOBUS_SUCCESS	706:5:17508:17531	5091151	0	True				
ANR	5091274	EqualityExpression	result != GLOBUS_SUCCESS		5091151	0		!=			
ANR	5091275	Identifier	result		5091151	0					
ANR	5091276	Identifier	GLOBUS_SUCCESS		5091151	1					
ANR	5091277	CompoundStatement		27:31:625:625	5091151	1					
ANR	5091278	ExpressionStatement	"callback_gram_job_cancel ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	707:2:17538:17694	5091151	0	True				
ANR	5091279	CallExpression	"callback_gram_job_cancel ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5091151	0					
ANR	5091280	Callee	callback_gram_job_cancel		5091151	0					
ANR	5091281	Identifier	callback_gram_job_cancel		5091151	0					
ANR	5091282	ArgumentList	( void * ) gram_arg		5091151	1					
ANR	5091283	Argument	( void * ) gram_arg		5091151	0					
ANR	5091284	CastExpression	( void * ) gram_arg		5091151	0					
ANR	5091285	CastTarget	void *		5091151	0					
ANR	5091286	Identifier	gram_arg		5091151	1					
ANR	5091287	Argument	( globus_gram_protocol_error_t ) result		5091151	1					
ANR	5091288	CastExpression	( globus_gram_protocol_error_t ) result		5091151	0					
ANR	5091289	CastTarget	globus_gram_protocol_error_t		5091151	0					
ANR	5091290	Identifier	result		5091151	1					
ANR	5091291	Argument	NULL		5091151	2					
ANR	5091292	Identifier	NULL		5091151	0					
ANR	5091293	Argument	( globus_gram_protocol_job_state_t ) 0		5091151	3					
ANR	5091294	CastExpression	( globus_gram_protocol_job_state_t ) 0		5091151	0					
ANR	5091295	CastTarget	globus_gram_protocol_job_state_t		5091151	0					
ANR	5091296	PrimaryExpression	0		5091151	1					
ANR	5091297	Argument	( globus_gram_protocol_error_t ) 0		5091151	4					
ANR	5091298	CastExpression	( globus_gram_protocol_error_t ) 0		5091151	0					
ANR	5091299	CastTarget	globus_gram_protocol_error_t		5091151	0					
ANR	5091300	PrimaryExpression	0		5091151	1					
ANR	5091301	ExpressionStatement	all_args_free ( user_arg )	710:1:17701:17724	5091151	11	True				
ANR	5091302	CallExpression	all_args_free ( user_arg )		5091151	0					
ANR	5091303	Callee	all_args_free		5091151	0					
ANR	5091304	Identifier	all_args_free		5091151	0					
ANR	5091305	ArgumentList	user_arg		5091151	1					
ANR	5091306	Argument	user_arg		5091151	0					
ANR	5091307	Identifier	user_arg		5091151	0					
ANR	5091308	ReturnStatement	return 0 ;	711:1:17727:17735	5091151	12	True				
ANR	5091309	PrimaryExpression	0		5091151	0					
ANR	5091310	ReturnType	int		5091151	1					
ANR	5091311	Identifier	handle_gram_job_cancel		5091151	2					
ANR	5091312	ParameterList	void * user_arg		5091151	3					
ANR	5091313	Parameter	void * user_arg	679:23:16891:16905	5091151	0	True				
ANR	5091314	ParameterType	void *		5091151	0					
ANR	5091315	Identifier	user_arg		5091151	1					
ANR	5091316	CFGEntryNode	ENTRY		5091151		True				
ANR	5091317	CFGExitNode	EXIT		5091151		True				
ANR	5091318	Symbol	user_arg		5091151						
ANR	5091319	Symbol	* input_line		5091151						
ANR	5091320	Symbol	callback_gram_job_cancel		5091151						
ANR	5091321	Symbol	process_string_arg		5091151						
ANR	5091322	Symbol	NULL		5091151						
ANR	5091323	Symbol	globus_gram_client_register_job_cancel		5091151						
ANR	5091324	Symbol	new_gram_arg		5091151						
ANR	5091325	Symbol	* gram_arg		5091151						
ANR	5091326	Symbol	GLOBUS_SUCCESS		5091151						
ANR	5091327	Symbol	input_line		5091151						
ANR	5091328	Symbol	& job_contact		5091151						
ANR	5091329	Symbol	& print_control		5091151						
ANR	5091330	Symbol	result		5091151						
ANR	5091331	Symbol	req_id		5091151						
ANR	5091332	Symbol	current_cred		5091151						
ANR	5091333	Symbol	gram_arg -> gram_attr		5091151						
ANR	5091334	Symbol	& req_id		5091151						
ANR	5091335	Symbol	gram_arg		5091151						
ANR	5091336	Symbol	job_contact		5091151						
ANR	5091337	Function	callback_gram_job_cancel	714:0:17740:18215							
ANR	5091338	FunctionDef	"callback_gram_job_cancel (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5091337	0					
ANR	5091339	CompoundStatement		720:0:17958:18215	5091337	0					
ANR	5091340	IdentifierDeclStatement	char * output ;	721:1:17961:17973	5091337	0	True				
ANR	5091341	IdentifierDecl	* output		5091337	0					
ANR	5091342	IdentifierDeclType	char *		5091337	0					
ANR	5091343	Identifier	output		5091337	1					
ANR	5091344	IdentifierDeclStatement	user_arg_t * gram_arg ;	722:1:17976:17997	5091337	1	True				
ANR	5091345	IdentifierDecl	* gram_arg		5091337	0					
ANR	5091346	IdentifierDeclType	user_arg_t *		5091337	0					
ANR	5091347	Identifier	gram_arg		5091337	1					
ANR	5091348	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	724:1:18001:18029	5091337	2	True				
ANR	5091349	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5091337	0		=			
ANR	5091350	Identifier	gram_arg		5091337	0					
ANR	5091351	CastExpression	( user_arg_t * ) arg		5091337	1					
ANR	5091352	CastTarget	user_arg_t *		5091337	0					
ANR	5091353	Identifier	arg		5091337	1					
ANR	5091354	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	726:1:18033:18073	5091337	3	True				
ANR	5091355	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5091337	0		=			
ANR	5091356	Identifier	output		5091337	0					
ANR	5091357	CastExpression	( char * ) globus_libc_malloc ( 500 )		5091337	1					
ANR	5091358	CastTarget	char *		5091337	0					
ANR	5091359	CallExpression	globus_libc_malloc ( 500 )		5091337	1					
ANR	5091360	Callee	globus_libc_malloc		5091337	0					
ANR	5091361	Identifier	globus_libc_malloc		5091337	0					
ANR	5091362	ArgumentList	500		5091337	1					
ANR	5091363	Argument	500		5091337	0					
ANR	5091364	PrimaryExpression	500		5091337	0					
ANR	5091365	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"	728:1:18077:18145	5091337	4	True				
ANR	5091366	CallExpression	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"		5091337	0					
ANR	5091367	Callee	globus_libc_sprintf		5091337	0					
ANR	5091368	Identifier	globus_libc_sprintf		5091337	0					
ANR	5091369	ArgumentList	output		5091337	1					
ANR	5091370	Argument	output		5091337	0					
ANR	5091371	Identifier	output		5091337	0					
ANR	5091372	Argument	"""%s %d"""		5091337	1					
ANR	5091373	PrimaryExpression	"""%s %d"""		5091337	0					
ANR	5091374	Argument	gram_arg -> req_id		5091337	2					
ANR	5091375	PtrMemberAccess	gram_arg -> req_id		5091337	0					
ANR	5091376	Identifier	gram_arg		5091337	0					
ANR	5091377	Identifier	req_id		5091337	1					
ANR	5091378	Argument	operation_fc		5091337	3					
ANR	5091379	Identifier	operation_fc		5091337	0					
ANR	5091380	ExpressionStatement	enqueue_results ( output )	730:1:18149:18172	5091337	5	True				
ANR	5091381	CallExpression	enqueue_results ( output )		5091337	0					
ANR	5091382	Callee	enqueue_results		5091337	0					
ANR	5091383	Identifier	enqueue_results		5091337	0					
ANR	5091384	ArgumentList	output		5091337	1					
ANR	5091385	Argument	output		5091337	0					
ANR	5091386	Identifier	output		5091337	0					
ANR	5091387	ExpressionStatement	delete_gram_arg ( gram_arg )	732:1:18177:18204	5091337	6	True				
ANR	5091388	CallExpression	delete_gram_arg ( gram_arg )		5091337	0					
ANR	5091389	Callee	delete_gram_arg		5091337	0					
ANR	5091390	Identifier	delete_gram_arg		5091337	0					
ANR	5091391	ArgumentList	gram_arg		5091337	1					
ANR	5091392	Argument	gram_arg		5091337	0					
ANR	5091393	Identifier	gram_arg		5091337	0					
ANR	5091394	ReturnStatement	return ;	733:1:18207:18213	5091337	7	True				
ANR	5091395	ReturnType	void		5091337	1					
ANR	5091396	Identifier	callback_gram_job_cancel		5091337	2					
ANR	5091397	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5091337	3					
ANR	5091398	Parameter	void * arg	715:25:17770:17778	5091337	0	True				
ANR	5091399	ParameterType	void *		5091337	0					
ANR	5091400	Identifier	arg		5091337	1					
ANR	5091401	Parameter	globus_gram_protocol_error_t operation_fc	716:7:17788:17828	5091337	1	True				
ANR	5091402	ParameterType	globus_gram_protocol_error_t		5091337	0					
ANR	5091403	Identifier	operation_fc		5091337	1					
ANR	5091404	Parameter	const char * job_contact	717:7:17838:17860	5091337	2	True				
ANR	5091405	ParameterType	const char *		5091337	0					
ANR	5091406	Identifier	job_contact		5091337	1					
ANR	5091407	Parameter	globus_gram_protocol_job_state_t job_state	718:7:17870:17911	5091337	3	True				
ANR	5091408	ParameterType	globus_gram_protocol_job_state_t		5091337	0					
ANR	5091409	Identifier	job_state		5091337	1					
ANR	5091410	Parameter	globus_gram_protocol_error_t job_fc	719:7:17921:17955	5091337	4	True				
ANR	5091411	ParameterType	globus_gram_protocol_error_t		5091337	0					
ANR	5091412	Identifier	job_fc		5091337	1					
ANR	5091413	CFGEntryNode	ENTRY		5091337		True				
ANR	5091414	CFGExitNode	EXIT		5091337		True				
ANR	5091415	Symbol	output		5091337						
ANR	5091416	Symbol	job_fc		5091337						
ANR	5091417	Symbol	gram_arg -> req_id		5091337						
ANR	5091418	Symbol	arg		5091337						
ANR	5091419	Symbol	* gram_arg		5091337						
ANR	5091420	Symbol	globus_libc_malloc		5091337						
ANR	5091421	Symbol	operation_fc		5091337						
ANR	5091422	Symbol	gram_arg		5091337						
ANR	5091423	Symbol	job_contact		5091337						
ANR	5091424	Symbol	job_state		5091337						
ANR	5091425	Function	version_in_range	736:0:18218:18838							
ANR	5091426	FunctionDef	"version_in_range (globus_module_descriptor_t * module , int low_major , int low_minor , int high_major , int high_minor)"		5091425	0					
ANR	5091427	CompoundStatement		739:0:18345:18838	5091425	0					
ANR	5091428	IdentifierDeclStatement	int rc ;	740:1:18348:18354	5091425	0	True				
ANR	5091429	IdentifierDecl	rc		5091425	0					
ANR	5091430	IdentifierDeclType	int		5091425	0					
ANR	5091431	Identifier	rc		5091425	1					
ANR	5091432	IdentifierDeclStatement	globus_version_t vers ;	741:1:18357:18378	5091425	1	True				
ANR	5091433	IdentifierDecl	vers		5091425	0					
ANR	5091434	IdentifierDeclType	globus_version_t		5091425	0					
ANR	5091435	Identifier	vers		5091425	1					
ANR	5091436	ExpressionStatement	"rc = globus_module_get_version ( module , & vers )"	742:1:18381:18428	5091425	2	True				
ANR	5091437	AssignmentExpression	"rc = globus_module_get_version ( module , & vers )"		5091425	0		=			
ANR	5091438	Identifier	rc		5091425	0					
ANR	5091439	CallExpression	"globus_module_get_version ( module , & vers )"		5091425	1					
ANR	5091440	Callee	globus_module_get_version		5091425	0					
ANR	5091441	Identifier	globus_module_get_version		5091425	0					
ANR	5091442	ArgumentList	module		5091425	1					
ANR	5091443	Argument	module		5091425	0					
ANR	5091444	Identifier	module		5091425	0					
ANR	5091445	Argument	& vers		5091425	1					
ANR	5091446	UnaryOperationExpression	& vers		5091425	0					
ANR	5091447	UnaryOperator	&		5091425	0					
ANR	5091448	Identifier	vers		5091425	1					
ANR	5091449	IfStatement	if ( rc != GLOBUS_SUCCESS )		5091425	3					
ANR	5091450	Condition	rc != GLOBUS_SUCCESS	743:6:18436:18455	5091425	0	True				
ANR	5091451	EqualityExpression	rc != GLOBUS_SUCCESS		5091425	0		!=			
ANR	5091452	Identifier	rc		5091425	0					
ANR	5091453	Identifier	GLOBUS_SUCCESS		5091425	1					
ANR	5091454	CompoundStatement		5:29:113:113	5091425	1					
ANR	5091455	ExpressionStatement	"fprintf ( stderr , ""Failed to retrieve Globus version!\\n"" )"	744:2:18463:18520	5091425	0	True				
ANR	5091456	CallExpression	"fprintf ( stderr , ""Failed to retrieve Globus version!\\n"" )"		5091425	0					
ANR	5091457	Callee	fprintf		5091425	0					
ANR	5091458	Identifier	fprintf		5091425	0					
ANR	5091459	ArgumentList	stderr		5091425	1					
ANR	5091460	Argument	stderr		5091425	0					
ANR	5091461	Identifier	stderr		5091425	0					
ANR	5091462	Argument	"""Failed to retrieve Globus version!\\n"""		5091425	1					
ANR	5091463	PrimaryExpression	"""Failed to retrieve Globus version!\\n"""		5091425	0					
ANR	5091464	ReturnStatement	return 0 ;	745:2:18524:18532	5091425	1	True				
ANR	5091465	PrimaryExpression	0		5091425	0					
ANR	5091466	IdentifierDeclStatement	int low = low_major * 100 + low_minor ;	747:1:18538:18575	5091425	4	True				
ANR	5091467	IdentifierDecl	low = low_major * 100 + low_minor		5091425	0					
ANR	5091468	IdentifierDeclType	int		5091425	0					
ANR	5091469	Identifier	low		5091425	1					
ANR	5091470	AssignmentExpression	low = low_major * 100 + low_minor		5091425	2		=			
ANR	5091471	Identifier	low		5091425	0					
ANR	5091472	AdditiveExpression	low_major * 100 + low_minor		5091425	1		+			
ANR	5091473	MultiplicativeExpression	low_major * 100		5091425	0		*			
ANR	5091474	Identifier	low_major		5091425	0					
ANR	5091475	PrimaryExpression	100		5091425	1					
ANR	5091476	Identifier	low_minor		5091425	1					
ANR	5091477	IdentifierDeclStatement	int high = high_major * 100 + high_minor ;	748:1:18578:18618	5091425	5	True				
ANR	5091478	IdentifierDecl	high = high_major * 100 + high_minor		5091425	0					
ANR	5091479	IdentifierDeclType	int		5091425	0					
ANR	5091480	Identifier	high		5091425	1					
ANR	5091481	AssignmentExpression	high = high_major * 100 + high_minor		5091425	2		=			
ANR	5091482	Identifier	high		5091425	0					
ANR	5091483	AdditiveExpression	high_major * 100 + high_minor		5091425	1		+			
ANR	5091484	MultiplicativeExpression	high_major * 100		5091425	0		*			
ANR	5091485	Identifier	high_major		5091425	0					
ANR	5091486	PrimaryExpression	100		5091425	1					
ANR	5091487	Identifier	high_minor		5091425	1					
ANR	5091488	IdentifierDeclStatement	int cur = vers . major * 100 + vers . minor ;	749:1:18621:18660	5091425	6	True				
ANR	5091489	IdentifierDecl	cur = vers . major * 100 + vers . minor		5091425	0					
ANR	5091490	IdentifierDeclType	int		5091425	0					
ANR	5091491	Identifier	cur		5091425	1					
ANR	5091492	AssignmentExpression	cur = vers . major * 100 + vers . minor		5091425	2		=			
ANR	5091493	Identifier	cur		5091425	0					
ANR	5091494	AdditiveExpression	vers . major * 100 + vers . minor		5091425	1		+			
ANR	5091495	MultiplicativeExpression	vers . major * 100		5091425	0		*			
ANR	5091496	MemberAccess	vers . major		5091425	0					
ANR	5091497	Identifier	vers		5091425	0					
ANR	5091498	Identifier	major		5091425	1					
ANR	5091499	PrimaryExpression	100		5091425	1					
ANR	5091500	MemberAccess	vers . minor		5091425	1					
ANR	5091501	Identifier	vers		5091425	0					
ANR	5091502	Identifier	minor		5091425	1					
ANR	5091503	ExpressionStatement	"fprintf ( stderr , ""Low=%d.%d, High=%d.%d, Curr=%d.%d\\n"" , low_major , low_minor , high_major , high_minor , vers . major , vers . minor )"	750:1:18663:18793	5091425	7	True				
ANR	5091504	CallExpression	"fprintf ( stderr , ""Low=%d.%d, High=%d.%d, Curr=%d.%d\\n"" , low_major , low_minor , high_major , high_minor , vers . major , vers . minor )"		5091425	0					
ANR	5091505	Callee	fprintf		5091425	0					
ANR	5091506	Identifier	fprintf		5091425	0					
ANR	5091507	ArgumentList	stderr		5091425	1					
ANR	5091508	Argument	stderr		5091425	0					
ANR	5091509	Identifier	stderr		5091425	0					
ANR	5091510	Argument	"""Low=%d.%d, High=%d.%d, Curr=%d.%d\\n"""		5091425	1					
ANR	5091511	PrimaryExpression	"""Low=%d.%d, High=%d.%d, Curr=%d.%d\\n"""		5091425	0					
ANR	5091512	Argument	low_major		5091425	2					
ANR	5091513	Identifier	low_major		5091425	0					
ANR	5091514	Argument	low_minor		5091425	3					
ANR	5091515	Identifier	low_minor		5091425	0					
ANR	5091516	Argument	high_major		5091425	4					
ANR	5091517	Identifier	high_major		5091425	0					
ANR	5091518	Argument	high_minor		5091425	5					
ANR	5091519	Identifier	high_minor		5091425	0					
ANR	5091520	Argument	vers . major		5091425	6					
ANR	5091521	MemberAccess	vers . major		5091425	0					
ANR	5091522	Identifier	vers		5091425	0					
ANR	5091523	Identifier	major		5091425	1					
ANR	5091524	Argument	vers . minor		5091425	7					
ANR	5091525	MemberAccess	vers . minor		5091425	0					
ANR	5091526	Identifier	vers		5091425	0					
ANR	5091527	Identifier	minor		5091425	1					
ANR	5091528	ReturnStatement	return ( low <= cur ) && ( cur <= high ) ;	752:1:18796:18836	5091425	8	True				
ANR	5091529	AndExpression	( low <= cur ) && ( cur <= high )		5091425	0		&&			
ANR	5091530	RelationalExpression	low <= cur		5091425	0		<=			
ANR	5091531	Identifier	low		5091425	0					
ANR	5091532	Identifier	cur		5091425	1					
ANR	5091533	RelationalExpression	cur <= high		5091425	1		<=			
ANR	5091534	Identifier	cur		5091425	0					
ANR	5091535	Identifier	high		5091425	1					
ANR	5091536	ReturnType	int		5091425	1					
ANR	5091537	Identifier	version_in_range		5091425	2					
ANR	5091538	ParameterList	"globus_module_descriptor_t * module , int low_major , int low_minor , int high_major , int high_minor"		5091425	3					
ANR	5091539	Parameter	globus_module_descriptor_t * module	737:18:18240:18273	5091425	0	True				
ANR	5091540	ParameterType	globus_module_descriptor_t *		5091425	0					
ANR	5091541	Identifier	module		5091425	1					
ANR	5091542	Parameter	int low_major	737:54:18276:18288	5091425	1	True				
ANR	5091543	ParameterType	int		5091425	0					
ANR	5091544	Identifier	low_major		5091425	1					
ANR	5091545	Parameter	int low_minor	738:6:18297:18309	5091425	2	True				
ANR	5091546	ParameterType	int		5091425	0					
ANR	5091547	Identifier	low_minor		5091425	1					
ANR	5091548	Parameter	int high_major	738:21:18312:18325	5091425	3	True				
ANR	5091549	ParameterType	int		5091425	0					
ANR	5091550	Identifier	high_major		5091425	1					
ANR	5091551	Parameter	int high_minor	738:37:18328:18341	5091425	4	True				
ANR	5091552	ParameterType	int		5091425	0					
ANR	5091553	Identifier	high_minor		5091425	1					
ANR	5091554	CFGEntryNode	ENTRY		5091425		True				
ANR	5091555	CFGExitNode	EXIT		5091425		True				
ANR	5091556	Symbol	cur		5091425						
ANR	5091557	Symbol	module		5091425						
ANR	5091558	Symbol	vers		5091425						
ANR	5091559	Symbol	GLOBUS_SUCCESS		5091425						
ANR	5091560	Symbol	vers . major		5091425						
ANR	5091561	Symbol	stderr		5091425						
ANR	5091562	Symbol	vers . minor		5091425						
ANR	5091563	Symbol	high_major		5091425						
ANR	5091564	Symbol	high_minor		5091425						
ANR	5091565	Symbol	rc		5091425						
ANR	5091566	Symbol	high		5091425						
ANR	5091567	Symbol	low		5091425						
ANR	5091568	Symbol	& vers		5091425						
ANR	5091569	Symbol	low_major		5091425						
ANR	5091570	Symbol	low_minor		5091425						
ANR	5091571	Symbol	globus_module_get_version		5091425						
ANR	5091572	Function	handle_gass_server_init	755:0:18841:22818							
ANR	5091573	FunctionDef	handle_gass_server_init (void * user_arg)		5091572	0					
ANR	5091574	CompoundStatement		757:0:18886:22818	5091572	0					
ANR	5091575	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	758:1:18889:18927	5091572	0	True				
ANR	5091576	IdentifierDecl	* * input_line = ( char * * ) user_arg		5091572	0					
ANR	5091577	IdentifierDeclType	char * *		5091572	0					
ANR	5091578	Identifier	input_line		5091572	1					
ANR	5091579	AssignmentExpression	* * input_line = ( char * * ) user_arg		5091572	2		=			
ANR	5091580	Identifier	input_line		5091572	0					
ANR	5091581	CastExpression	( char * * ) user_arg		5091572	1					
ANR	5091582	CastTarget	char * *		5091572	0					
ANR	5091583	Identifier	user_arg		5091572	1					
ANR	5091584	IdentifierDeclStatement	"int result , i ;"	759:1:18930:18942	5091572	1	True				
ANR	5091585	IdentifierDecl	result		5091572	0					
ANR	5091586	IdentifierDeclType	int		5091572	0					
ANR	5091587	Identifier	result		5091572	1					
ANR	5091588	IdentifierDecl	i		5091572	1					
ANR	5091589	IdentifierDeclType	int		5091572	0					
ANR	5091590	Identifier	i		5091572	1					
ANR	5091591	IdentifierDeclStatement	"char * output , * req_id , * job_contact ;"	760:1:18945:18980	5091572	2	True				
ANR	5091592	IdentifierDecl	* output		5091572	0					
ANR	5091593	IdentifierDeclType	char *		5091572	0					
ANR	5091594	Identifier	output		5091572	1					
ANR	5091595	IdentifierDecl	* req_id		5091572	1					
ANR	5091596	IdentifierDeclType	char *		5091572	0					
ANR	5091597	Identifier	req_id		5091572	1					
ANR	5091598	IdentifierDecl	* job_contact		5091572	2					
ANR	5091599	IdentifierDeclType	char *		5091572	0					
ANR	5091600	Identifier	job_contact		5091572	1					
ANR	5091601	IdentifierDeclStatement	char * gassServerUrl = NULL ;	761:1:18983:19009	5091572	3	True				
ANR	5091602	IdentifierDecl	* gassServerUrl = NULL		5091572	0					
ANR	5091603	IdentifierDeclType	char *		5091572	0					
ANR	5091604	Identifier	gassServerUrl		5091572	1					
ANR	5091605	AssignmentExpression	* gassServerUrl = NULL		5091572	2		=			
ANR	5091606	Identifier	NULL		5091572	0					
ANR	5091607	Identifier	NULL		5091572	1					
ANR	5091608	IdentifierDeclStatement	int port ;	762:1:19012:19020	5091572	4	True				
ANR	5091609	IdentifierDecl	port		5091572	0					
ANR	5091610	IdentifierDeclType	int		5091572	0					
ANR	5091611	Identifier	port		5091572	1					
ANR	5091612	IdentifierDeclStatement	int num_listeners = NUM_GASS_LISTENERS ;	763:1:19023:19061	5091572	5	True				
ANR	5091613	IdentifierDecl	num_listeners = NUM_GASS_LISTENERS		5091572	0					
ANR	5091614	IdentifierDeclType	int		5091572	0					
ANR	5091615	Identifier	num_listeners		5091572	1					
ANR	5091616	AssignmentExpression	num_listeners = NUM_GASS_LISTENERS		5091572	2		=			
ANR	5091617	Identifier	NUM_GASS_LISTENERS		5091572	0					
ANR	5091618	Identifier	NUM_GASS_LISTENERS		5091572	1					
ANR	5091619	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5091572	6					
ANR	5091620	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	765:5:19069:19111	5091572	0	True				
ANR	5091621	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5091572	0					
ANR	5091622	UnaryOperator	!		5091572	0					
ANR	5091623	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5091572	1					
ANR	5091624	Callee	process_string_arg		5091572	0					
ANR	5091625	Identifier	process_string_arg		5091572	0					
ANR	5091626	ArgumentList	input_line [ 1 ]		5091572	1					
ANR	5091627	Argument	input_line [ 1 ]		5091572	0					
ANR	5091628	ArrayIndexing	input_line [ 1 ]		5091572	0					
ANR	5091629	Identifier	input_line		5091572	0					
ANR	5091630	PrimaryExpression	1		5091572	1					
ANR	5091631	Argument	& req_id		5091572	1					
ANR	5091632	UnaryOperationExpression	& req_id		5091572	0					
ANR	5091633	UnaryOperator	&		5091572	0					
ANR	5091634	Identifier	req_id		5091572	1					
ANR	5091635	CompoundStatement		9:51:228:228	5091572	1					
ANR	5091636	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	766:2:19119:19140	5091572	0	True				
ANR	5091637	CallExpression	HANDLE_SYNTAX_ERROR ( )		5091572	0					
ANR	5091638	Callee	HANDLE_SYNTAX_ERROR		5091572	0					
ANR	5091639	Identifier	HANDLE_SYNTAX_ERROR		5091572	0					
ANR	5091640	ArgumentList			5091572	1					
ANR	5091641	ReturnStatement	return 0 ;	767:2:19144:19152	5091572	1	True				
ANR	5091642	PrimaryExpression	0		5091572	0					
ANR	5091643	IfStatement	"if ( ! process_int_arg ( input_line [ 2 ] , & port ) )"		5091572	7					
ANR	5091644	Condition	"! process_int_arg ( input_line [ 2 ] , & port )"	770:5:19163:19200	5091572	0	True				
ANR	5091645	UnaryOperationExpression	"! process_int_arg ( input_line [ 2 ] , & port )"		5091572	0					
ANR	5091646	UnaryOperator	!		5091572	0					
ANR	5091647	CallExpression	"process_int_arg ( input_line [ 2 ] , & port )"		5091572	1					
ANR	5091648	Callee	process_int_arg		5091572	0					
ANR	5091649	Identifier	process_int_arg		5091572	0					
ANR	5091650	ArgumentList	input_line [ 2 ]		5091572	1					
ANR	5091651	Argument	input_line [ 2 ]		5091572	0					
ANR	5091652	ArrayIndexing	input_line [ 2 ]		5091572	0					
ANR	5091653	Identifier	input_line		5091572	0					
ANR	5091654	PrimaryExpression	2		5091572	1					
ANR	5091655	Argument	& port		5091572	1					
ANR	5091656	UnaryOperationExpression	& port		5091572	0					
ANR	5091657	UnaryOperator	&		5091572	0					
ANR	5091658	Identifier	port		5091572	1					
ANR	5091659	CompoundStatement		14:46:317:317	5091572	1					
ANR	5091660	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	771:2:19208:19229	5091572	0	True				
ANR	5091661	CallExpression	HANDLE_SYNTAX_ERROR ( )		5091572	0					
ANR	5091662	Callee	HANDLE_SYNTAX_ERROR		5091572	0					
ANR	5091663	Identifier	HANDLE_SYNTAX_ERROR		5091572	0					
ANR	5091664	ArgumentList			5091572	1					
ANR	5091665	ReturnStatement	return 0 ;	772:2:19233:19241	5091572	1	True				
ANR	5091666	PrimaryExpression	0		5091572	0					
ANR	5091667	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	775:1:19248:19266	5091572	8	True				
ANR	5091668	CallExpression	"gahp_printf ( ""S\\n"" )"		5091572	0					
ANR	5091669	Callee	gahp_printf		5091572	0					
ANR	5091670	Identifier	gahp_printf		5091572	0					
ANR	5091671	ArgumentList	"""S\\n"""		5091572	1					
ANR	5091672	Argument	"""S\\n"""		5091572	0					
ANR	5091673	PrimaryExpression	"""S\\n"""		5091572	0					
ANR	5091674	ExpressionStatement	gahp_sem_up ( & print_control )	776:1:19269:19296	5091572	9	True				
ANR	5091675	CallExpression	gahp_sem_up ( & print_control )		5091572	0					
ANR	5091676	Callee	gahp_sem_up		5091572	0					
ANR	5091677	Identifier	gahp_sem_up		5091572	0					
ANR	5091678	ArgumentList	& print_control		5091572	1					
ANR	5091679	Argument	& print_control		5091572	0					
ANR	5091680	UnaryOperationExpression	& print_control		5091572	0					
ANR	5091681	UnaryOperator	&		5091572	0					
ANR	5091682	Identifier	print_control		5091572	1					
ANR	5091683	ExpressionStatement	result = globus_module_activate ( GLOBUS_GASS_SERVER_EZ_MODULE )	779:2:19302:19365	5091572	10	True				
ANR	5091684	AssignmentExpression	result = globus_module_activate ( GLOBUS_GASS_SERVER_EZ_MODULE )		5091572	0		=			
ANR	5091685	Identifier	result		5091572	0					
ANR	5091686	CallExpression	globus_module_activate ( GLOBUS_GASS_SERVER_EZ_MODULE )		5091572	1					
ANR	5091687	Callee	globus_module_activate		5091572	0					
ANR	5091688	Identifier	globus_module_activate		5091572	0					
ANR	5091689	ArgumentList	GLOBUS_GASS_SERVER_EZ_MODULE		5091572	1					
ANR	5091690	Argument	GLOBUS_GASS_SERVER_EZ_MODULE		5091572	0					
ANR	5091691	Identifier	GLOBUS_GASS_SERVER_EZ_MODULE		5091572	0					
ANR	5091692	IfStatement	if ( result != GLOBUS_SUCCESS )		5091572	11					
ANR	5091693	Condition	result != GLOBUS_SUCCESS	780:9:19376:19399	5091572	0	True				
ANR	5091694	EqualityExpression	result != GLOBUS_SUCCESS		5091572	0		!=			
ANR	5091695	Identifier	result		5091572	0					
ANR	5091696	Identifier	GLOBUS_SUCCESS		5091572	1					
ANR	5091697	CompoundStatement		24:36:516:516	5091572	1					
ANR	5091698	IfStatement	"if ( ! version_in_range ( GLOBUS_XIO_MODULE , 2 , 8 , 3 , 0 ) || ! version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 ) || ! version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 ) )"		5091572	12					
ANR	5091699	Condition	"! version_in_range ( GLOBUS_XIO_MODULE , 2 , 8 , 3 , 0 ) || ! version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 ) || ! version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 )"	794:6:20024:20196	5091572	0	True				
ANR	5091700	OrExpression	"! version_in_range ( GLOBUS_XIO_MODULE , 2 , 8 , 3 , 0 ) || ! version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 ) || ! version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 )"		5091572	0		||			
ANR	5091701	UnaryOperationExpression	"! version_in_range ( GLOBUS_XIO_MODULE , 2 , 8 , 3 , 0 )"		5091572	0					
ANR	5091702	UnaryOperator	!		5091572	0					
ANR	5091703	CallExpression	"version_in_range ( GLOBUS_XIO_MODULE , 2 , 8 , 3 , 0 )"		5091572	1					
ANR	5091704	Callee	version_in_range		5091572	0					
ANR	5091705	Identifier	version_in_range		5091572	0					
ANR	5091706	ArgumentList	GLOBUS_XIO_MODULE		5091572	1					
ANR	5091707	Argument	GLOBUS_XIO_MODULE		5091572	0					
ANR	5091708	Identifier	GLOBUS_XIO_MODULE		5091572	0					
ANR	5091709	Argument	2		5091572	1					
ANR	5091710	PrimaryExpression	2		5091572	0					
ANR	5091711	Argument	8		5091572	2					
ANR	5091712	PrimaryExpression	8		5091572	0					
ANR	5091713	Argument	3		5091572	3					
ANR	5091714	PrimaryExpression	3		5091572	0					
ANR	5091715	Argument	0		5091572	4					
ANR	5091716	PrimaryExpression	0		5091572	0					
ANR	5091717	OrExpression	"! version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 ) || ! version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 )"		5091572	1		||			
ANR	5091718	UnaryOperationExpression	"! version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 )"		5091572	0					
ANR	5091719	UnaryOperator	!		5091572	0					
ANR	5091720	CallExpression	"version_in_range ( GLOBUS_IO_MODULE , 6 , 3 , 8 , 0 )"		5091572	1					
ANR	5091721	Callee	version_in_range		5091572	0					
ANR	5091722	Identifier	version_in_range		5091572	0					
ANR	5091723	ArgumentList	GLOBUS_IO_MODULE		5091572	1					
ANR	5091724	Argument	GLOBUS_IO_MODULE		5091572	0					
ANR	5091725	Identifier	GLOBUS_IO_MODULE		5091572	0					
ANR	5091726	Argument	6		5091572	1					
ANR	5091727	PrimaryExpression	6		5091572	0					
ANR	5091728	Argument	3		5091572	2					
ANR	5091729	PrimaryExpression	3		5091572	0					
ANR	5091730	Argument	8		5091572	3					
ANR	5091731	PrimaryExpression	8		5091572	0					
ANR	5091732	Argument	0		5091572	4					
ANR	5091733	PrimaryExpression	0		5091572	0					
ANR	5091734	UnaryOperationExpression	"! version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 )"		5091572	1					
ANR	5091735	UnaryOperator	!		5091572	0					
ANR	5091736	CallExpression	"version_in_range ( GLOBUS_GASS_TRANSFER_MODULE , 4 , 3 , 7 , 0 )"		5091572	1					
ANR	5091737	Callee	version_in_range		5091572	0					
ANR	5091738	Identifier	version_in_range		5091572	0					
ANR	5091739	ArgumentList	GLOBUS_GASS_TRANSFER_MODULE		5091572	1					
ANR	5091740	Argument	GLOBUS_GASS_TRANSFER_MODULE		5091572	0					
ANR	5091741	Identifier	GLOBUS_GASS_TRANSFER_MODULE		5091572	0					
ANR	5091742	Argument	4		5091572	1					
ANR	5091743	PrimaryExpression	4		5091572	0					
ANR	5091744	Argument	3		5091572	2					
ANR	5091745	PrimaryExpression	3		5091572	0					
ANR	5091746	Argument	7		5091572	3					
ANR	5091747	PrimaryExpression	7		5091572	0					
ANR	5091748	Argument	0		5091572	4					
ANR	5091749	PrimaryExpression	0		5091572	0					
ANR	5091750	CompoundStatement		40:66:1313:1313	5091572	1					
ANR	5091751	ExpressionStatement	"fprintf ( stderr , ""Unexpected module version, using low-performance GASS server!\\n"" )"	797:2:20204:20288	5091572	0	True				
ANR	5091752	CallExpression	"fprintf ( stderr , ""Unexpected module version, using low-performance GASS server!\\n"" )"		5091572	0					
ANR	5091753	Callee	fprintf		5091572	0					
ANR	5091754	Identifier	fprintf		5091572	0					
ANR	5091755	ArgumentList	stderr		5091572	1					
ANR	5091756	Argument	stderr		5091572	0					
ANR	5091757	Identifier	stderr		5091572	0					
ANR	5091758	Argument	"""Unexpected module version, using low-performance GASS server!\\n"""		5091572	1					
ANR	5091759	PrimaryExpression	"""Unexpected module version, using low-performance GASS server!\\n"""		5091572	0					
ANR	5091760	ExpressionStatement	num_listeners = 1	798:2:20292:20309	5091572	1	True				
ANR	5091761	AssignmentExpression	num_listeners = 1		5091572	0		=			
ANR	5091762	Identifier	num_listeners		5091572	0					
ANR	5091763	PrimaryExpression	1		5091572	1					
ANR	5091764	ExpressionStatement	result = GLOBUS_SUCCESS	806:4:20562:20585	5091572	13	True				
ANR	5091765	AssignmentExpression	result = GLOBUS_SUCCESS		5091572	0		=			
ANR	5091766	Identifier	result		5091572	0					
ANR	5091767	Identifier	GLOBUS_SUCCESS		5091572	1					
ANR	5091768	ForStatement	for ( i = 0 ; i < num_listeners ; i ++ )		5091572	14					
ANR	5091769	ForInit	i = 0 ;	807:8:20595:20598	5091572	0	True				
ANR	5091770	AssignmentExpression	i = 0		5091572	0		=			
ANR	5091771	Identifier	i		5091572	0					
ANR	5091772	PrimaryExpression	0		5091572	1					
ANR	5091773	Condition	i < num_listeners	807:12:20599:20613	5091572	1	True				
ANR	5091774	RelationalExpression	i < num_listeners		5091572	0		<			
ANR	5091775	Identifier	i		5091572	0					
ANR	5091776	Identifier	num_listeners		5091572	1					
ANR	5091777	PostIncDecOperationExpression	i ++	807:28:20615:20617	5091572	2	True				
ANR	5091778	Identifier	i		5091572	0					
ANR	5091779	IncDec	++		5091572	1					
ANR	5091780	CompoundStatement		52:6:1741:1748	5091572	3					
ANR	5091781	IdentifierDeclStatement	int res ;	808:6:20628:20635	5091572	0	True				
ANR	5091782	IdentifierDecl	res		5091572	0					
ANR	5091783	IdentifierDeclType	int		5091572	0					
ANR	5091784	Identifier	res		5091572	1					
ANR	5091785	IfStatement	if ( i == 0 )		5091572	1					
ANR	5091786	Condition	i == 0	809:10:20647:20650	5091572	0	True				
ANR	5091787	EqualityExpression	i == 0		5091572	0		==			
ANR	5091788	Identifier	i		5091572	0					
ANR	5091789	PrimaryExpression	0		5091572	1					
ANR	5091790	CompoundStatement		53:16:1766:1766	5091572	1					
ANR	5091791	ExpressionStatement	"res = globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"	810:8:20663:21006	5091572	0	True				
ANR	5091792	AssignmentExpression	"res = globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"		5091572	0		=			
ANR	5091793	Identifier	res		5091572	0					
ANR	5091794	CallExpression	"globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"		5091572	1					
ANR	5091795	Callee	globus_gass_server_ez_init		5091572	0					
ANR	5091796	Identifier	globus_gass_server_ez_init		5091572	0					
ANR	5091797	ArgumentList	& gassServerListeners [ i ]		5091572	1					
ANR	5091798	Argument	& gassServerListeners [ i ]		5091572	0					
ANR	5091799	UnaryOperationExpression	& gassServerListeners [ i ]		5091572	0					
ANR	5091800	UnaryOperator	&		5091572	0					
ANR	5091801	ArrayIndexing	gassServerListeners [ i ]		5091572	1					
ANR	5091802	Identifier	gassServerListeners		5091572	0					
ANR	5091803	Identifier	i		5091572	1					
ANR	5091804	Argument	NULL		5091572	1					
ANR	5091805	Identifier	NULL		5091572	0					
ANR	5091806	Argument	NULL		5091572	2					
ANR	5091807	Identifier	NULL		5091572	0					
ANR	5091808	Argument	NULL		5091572	3					
ANR	5091809	Identifier	NULL		5091572	0					
ANR	5091810	Argument	GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	4					
ANR	5091811	InclusiveOrExpression	GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	0		|			
ANR	5091812	Identifier	GLOBUS_GASS_SERVER_EZ_READ_ENABLE		5091572	0					
ANR	5091813	InclusiveOrExpression	GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	1		|			
ANR	5091814	Identifier	GLOBUS_GASS_SERVER_EZ_LINE_BUFFER		5091572	0					
ANR	5091815	Identifier	GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	1					
ANR	5091816	Argument	NULL		5091572	5					
ANR	5091817	Identifier	NULL		5091572	0					
ANR	5091818	ElseStatement	else		5091572	0					
ANR	5091819	CompoundStatement		59:13:2134:2134	5091572	0					
ANR	5091820	ExpressionStatement	"res = my_globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"	816:8:21031:21379	5091572	0	True				
ANR	5091821	AssignmentExpression	"res = my_globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"		5091572	0		=			
ANR	5091822	Identifier	res		5091572	0					
ANR	5091823	CallExpression	"my_globus_gass_server_ez_init ( & gassServerListeners [ i ] , NULL , NULL , NULL , GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE , NULL )"		5091572	1					
ANR	5091824	Callee	my_globus_gass_server_ez_init		5091572	0					
ANR	5091825	Identifier	my_globus_gass_server_ez_init		5091572	0					
ANR	5091826	ArgumentList	& gassServerListeners [ i ]		5091572	1					
ANR	5091827	Argument	& gassServerListeners [ i ]		5091572	0					
ANR	5091828	UnaryOperationExpression	& gassServerListeners [ i ]		5091572	0					
ANR	5091829	UnaryOperator	&		5091572	0					
ANR	5091830	ArrayIndexing	gassServerListeners [ i ]		5091572	1					
ANR	5091831	Identifier	gassServerListeners		5091572	0					
ANR	5091832	Identifier	i		5091572	1					
ANR	5091833	Argument	NULL		5091572	1					
ANR	5091834	Identifier	NULL		5091572	0					
ANR	5091835	Argument	NULL		5091572	2					
ANR	5091836	Identifier	NULL		5091572	0					
ANR	5091837	Argument	NULL		5091572	3					
ANR	5091838	Identifier	NULL		5091572	0					
ANR	5091839	Argument	GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	4					
ANR	5091840	InclusiveOrExpression	GLOBUS_GASS_SERVER_EZ_READ_ENABLE | GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	0		|			
ANR	5091841	Identifier	GLOBUS_GASS_SERVER_EZ_READ_ENABLE		5091572	0					
ANR	5091842	InclusiveOrExpression	GLOBUS_GASS_SERVER_EZ_LINE_BUFFER | GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	1		|			
ANR	5091843	Identifier	GLOBUS_GASS_SERVER_EZ_LINE_BUFFER		5091572	0					
ANR	5091844	Identifier	GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572	1					
ANR	5091845	Argument	NULL		5091572	5					
ANR	5091846	Identifier	NULL		5091572	0					
ANR	5091847	IfStatement	if ( res != GLOBUS_SUCCESS )		5091572	2					
ANR	5091848	Condition	res != GLOBUS_SUCCESS	822:10:21399:21419	5091572	0	True				
ANR	5091849	EqualityExpression	res != GLOBUS_SUCCESS		5091572	0		!=			
ANR	5091850	Identifier	res		5091572	0					
ANR	5091851	Identifier	GLOBUS_SUCCESS		5091572	1					
ANR	5091852	ExpressionStatement	result = GLOBUS_FAILURE	822:33:21422:21443	5091572	1	True				
ANR	5091853	AssignmentExpression	result = GLOBUS_FAILURE		5091572	0		=			
ANR	5091854	Identifier	result		5091572	0					
ANR	5091855	Identifier	GLOBUS_FAILURE		5091572	1					
ANR	5091856	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	825:4:21456:21496	5091572	15	True				
ANR	5091857	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5091572	0		=			
ANR	5091858	Identifier	output		5091572	0					
ANR	5091859	CastExpression	( char * ) globus_libc_malloc ( 500 )		5091572	1					
ANR	5091860	CastTarget	char *		5091572	0					
ANR	5091861	CallExpression	globus_libc_malloc ( 500 )		5091572	1					
ANR	5091862	Callee	globus_libc_malloc		5091572	0					
ANR	5091863	Identifier	globus_libc_malloc		5091572	0					
ANR	5091864	ArgumentList	500		5091572	1					
ANR	5091865	Argument	500		5091572	0					
ANR	5091866	PrimaryExpression	500		5091572	0					
ANR	5091867	IfStatement	if ( result == GLOBUS_SUCCESS && num_listeners > 1 )		5091572	16					
ANR	5091868	Condition	result == GLOBUS_SUCCESS && num_listeners > 1	827:8:21507:21551	5091572	0	True				
ANR	5091869	AndExpression	result == GLOBUS_SUCCESS && num_listeners > 1		5091572	0		&&			
ANR	5091870	EqualityExpression	result == GLOBUS_SUCCESS		5091572	0		==			
ANR	5091871	Identifier	result		5091572	0					
ANR	5091872	Identifier	GLOBUS_SUCCESS		5091572	1					
ANR	5091873	RelationalExpression	num_listeners > 1		5091572	1		>			
ANR	5091874	Identifier	num_listeners		5091572	0					
ANR	5091875	PrimaryExpression	1		5091572	1					
ANR	5091876	CompoundStatement		74:6:2867:2970	5091572	1					
ANR	5091877	IdentifierDeclStatement	"globus_gass_transfer_listener_struct_t * l0 = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ 0 ] ) ;"	829:6:21566:21746	5091572	0	True				
ANR	5091878	IdentifierDecl	"* l0 = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ 0 ] )"		5091572	0					
ANR	5091879	IdentifierDeclType	globus_gass_transfer_listener_struct_t *		5091572	0					
ANR	5091880	Identifier	l0		5091572	1					
ANR	5091881	AssignmentExpression	"* l0 = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ 0 ] )"		5091572	2		=			
ANR	5091882	Identifier	l0		5091572	0					
ANR	5091883	CastExpression	"( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ 0 ] )"		5091572	1					
ANR	5091884	CastTarget	globus_gass_transfer_listener_struct_t *		5091572	0					
ANR	5091885	CallExpression	"globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ 0 ] )"		5091572	1					
ANR	5091886	Callee	globus_handle_table_lookup		5091572	0					
ANR	5091887	Identifier	globus_handle_table_lookup		5091572	0					
ANR	5091888	ArgumentList	& globus_i_gass_transfer_listener_handles		5091572	1					
ANR	5091889	Argument	& globus_i_gass_transfer_listener_handles		5091572	0					
ANR	5091890	UnaryOperationExpression	& globus_i_gass_transfer_listener_handles		5091572	0					
ANR	5091891	UnaryOperator	&		5091572	0					
ANR	5091892	Identifier	globus_i_gass_transfer_listener_handles		5091572	1					
ANR	5091893	Argument	gassServerListeners [ 0 ]		5091572	1					
ANR	5091894	ArrayIndexing	gassServerListeners [ 0 ]		5091572	0					
ANR	5091895	Identifier	gassServerListeners		5091572	0					
ANR	5091896	PrimaryExpression	0		5091572	1					
ANR	5091897	IdentifierDeclStatement	int l0_fd = ( ( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd ;	830:6:21754:21857	5091572	1	True				
ANR	5091898	IdentifierDecl	l0_fd = ( ( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	0					
ANR	5091899	IdentifierDeclType	int		5091572	0					
ANR	5091900	Identifier	l0_fd		5091572	1					
ANR	5091901	AssignmentExpression	l0_fd = ( ( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	2		=			
ANR	5091902	Identifier	l0_fd		5091572	0					
ANR	5091903	PtrMemberAccess	( ( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	1					
ANR	5091904	CastExpression	( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	0					
ANR	5091905	CastTarget	my_globus_l_server_t *		5091572	0					
ANR	5091906	MemberAccess	l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	1					
ANR	5091907	ArrayIndexing	l0 -> proto -> handle -> xio_server -> entry [ 1 ]		5091572	0					
ANR	5091908	PtrMemberAccess	l0 -> proto -> handle -> xio_server -> entry		5091572	0					
ANR	5091909	PtrMemberAccess	l0 -> proto -> handle -> xio_server		5091572	0					
ANR	5091910	PtrMemberAccess	l0 -> proto -> handle		5091572	0					
ANR	5091911	PtrMemberAccess	l0 -> proto		5091572	0					
ANR	5091912	Identifier	l0		5091572	0					
ANR	5091913	Identifier	proto		5091572	1					
ANR	5091914	Identifier	handle		5091572	1					
ANR	5091915	Identifier	xio_server		5091572	1					
ANR	5091916	Identifier	entry		5091572	1					
ANR	5091917	PrimaryExpression	1		5091572	1					
ANR	5091918	Identifier	server_handle		5091572	1					
ANR	5091919	Identifier	listener_fd		5091572	1					
ANR	5091920	ForStatement	for ( i = 1 ; i < num_listeners ; i ++ )		5091572	2					
ANR	5091921	ForInit	i = 1 ;	832:10:21870:21873	5091572	0	True				
ANR	5091922	AssignmentExpression	i = 1		5091572	0		=			
ANR	5091923	Identifier	i		5091572	0					
ANR	5091924	PrimaryExpression	1		5091572	1					
ANR	5091925	Condition	i < num_listeners	832:14:21874:21888	5091572	1	True				
ANR	5091926	RelationalExpression	i < num_listeners		5091572	0		<			
ANR	5091927	Identifier	i		5091572	0					
ANR	5091928	Identifier	num_listeners		5091572	1					
ANR	5091929	PostIncDecOperationExpression	i ++	832:30:21890:21892	5091572	2	True				
ANR	5091930	Identifier	i		5091572	0					
ANR	5091931	IncDec	++		5091572	1					
ANR	5091932	CompoundStatement		77:8:3018:3207	5091572	3					
ANR	5091933	IdentifierDeclStatement	"globus_gass_transfer_listener_struct_t * l = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ i ] ) ;"	833:8:21905:22094	5091572	0	True				
ANR	5091934	IdentifierDecl	"* l = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ i ] )"		5091572	0					
ANR	5091935	IdentifierDeclType	globus_gass_transfer_listener_struct_t *		5091572	0					
ANR	5091936	Identifier	l		5091572	1					
ANR	5091937	AssignmentExpression	"* l = ( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ i ] )"		5091572	2		=			
ANR	5091938	Identifier	l		5091572	0					
ANR	5091939	CastExpression	"( globus_gass_transfer_listener_struct_t * ) globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ i ] )"		5091572	1					
ANR	5091940	CastTarget	globus_gass_transfer_listener_struct_t *		5091572	0					
ANR	5091941	CallExpression	"globus_handle_table_lookup ( & globus_i_gass_transfer_listener_handles , gassServerListeners [ i ] )"		5091572	1					
ANR	5091942	Callee	globus_handle_table_lookup		5091572	0					
ANR	5091943	Identifier	globus_handle_table_lookup		5091572	0					
ANR	5091944	ArgumentList	& globus_i_gass_transfer_listener_handles		5091572	1					
ANR	5091945	Argument	& globus_i_gass_transfer_listener_handles		5091572	0					
ANR	5091946	UnaryOperationExpression	& globus_i_gass_transfer_listener_handles		5091572	0					
ANR	5091947	UnaryOperator	&		5091572	0					
ANR	5091948	Identifier	globus_i_gass_transfer_listener_handles		5091572	1					
ANR	5091949	Argument	gassServerListeners [ i ]		5091572	1					
ANR	5091950	ArrayIndexing	gassServerListeners [ i ]		5091572	0					
ANR	5091951	Identifier	gassServerListeners		5091572	0					
ANR	5091952	Identifier	i		5091572	1					
ANR	5091953	ExpressionStatement	globus_libc_close ( ( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd )	836:8:22105:22216	5091572	1	True				
ANR	5091954	CallExpression	globus_libc_close ( ( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd )		5091572	0					
ANR	5091955	Callee	globus_libc_close		5091572	0					
ANR	5091956	Identifier	globus_libc_close		5091572	0					
ANR	5091957	ArgumentList	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	1					
ANR	5091958	Argument	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	0					
ANR	5091959	PtrMemberAccess	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	0					
ANR	5091960	CastExpression	( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	0					
ANR	5091961	CastTarget	my_globus_l_server_t *		5091572	0					
ANR	5091962	MemberAccess	l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	1					
ANR	5091963	ArrayIndexing	l -> proto -> handle -> xio_server -> entry [ 1 ]		5091572	0					
ANR	5091964	PtrMemberAccess	l -> proto -> handle -> xio_server -> entry		5091572	0					
ANR	5091965	PtrMemberAccess	l -> proto -> handle -> xio_server		5091572	0					
ANR	5091966	PtrMemberAccess	l -> proto -> handle		5091572	0					
ANR	5091967	PtrMemberAccess	l -> proto		5091572	0					
ANR	5091968	Identifier	l		5091572	0					
ANR	5091969	Identifier	proto		5091572	1					
ANR	5091970	Identifier	handle		5091572	1					
ANR	5091971	Identifier	xio_server		5091572	1					
ANR	5091972	Identifier	entry		5091572	1					
ANR	5091973	PrimaryExpression	1		5091572	1					
ANR	5091974	Identifier	server_handle		5091572	1					
ANR	5091975	Identifier	listener_fd		5091572	1					
ANR	5091976	ExpressionStatement	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd = l0_fd	837:8:22226:22324	5091572	2	True				
ANR	5091977	AssignmentExpression	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd = l0_fd		5091572	0		=			
ANR	5091978	PtrMemberAccess	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572	0					
ANR	5091979	CastExpression	( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	0					
ANR	5091980	CastTarget	my_globus_l_server_t *		5091572	0					
ANR	5091981	MemberAccess	l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	1					
ANR	5091982	ArrayIndexing	l -> proto -> handle -> xio_server -> entry [ 1 ]		5091572	0					
ANR	5091983	PtrMemberAccess	l -> proto -> handle -> xio_server -> entry		5091572	0					
ANR	5091984	PtrMemberAccess	l -> proto -> handle -> xio_server		5091572	0					
ANR	5091985	PtrMemberAccess	l -> proto -> handle		5091572	0					
ANR	5091986	PtrMemberAccess	l -> proto		5091572	0					
ANR	5091987	Identifier	l		5091572	0					
ANR	5091988	Identifier	proto		5091572	1					
ANR	5091989	Identifier	handle		5091572	1					
ANR	5091990	Identifier	xio_server		5091572	1					
ANR	5091991	Identifier	entry		5091572	1					
ANR	5091992	PrimaryExpression	1		5091572	1					
ANR	5091993	Identifier	server_handle		5091572	1					
ANR	5091994	Identifier	listener_fd		5091572	1					
ANR	5091995	Identifier	l0_fd		5091572	1					
ANR	5091996	ExpressionStatement	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system -> fd = l0_fd	838:8:22334:22440	5091572	3	True				
ANR	5091997	AssignmentExpression	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system -> fd = l0_fd		5091572	0		=			
ANR	5091998	PtrMemberAccess	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system -> fd		5091572	0					
ANR	5091999	PtrMemberAccess	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system		5091572	0					
ANR	5092000	CastExpression	( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	0					
ANR	5092001	CastTarget	my_globus_l_server_t *		5091572	0					
ANR	5092002	MemberAccess	l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572	1					
ANR	5092003	ArrayIndexing	l -> proto -> handle -> xio_server -> entry [ 1 ]		5091572	0					
ANR	5092004	PtrMemberAccess	l -> proto -> handle -> xio_server -> entry		5091572	0					
ANR	5092005	PtrMemberAccess	l -> proto -> handle -> xio_server		5091572	0					
ANR	5092006	PtrMemberAccess	l -> proto -> handle		5091572	0					
ANR	5092007	PtrMemberAccess	l -> proto		5091572	0					
ANR	5092008	Identifier	l		5091572	0					
ANR	5092009	Identifier	proto		5091572	1					
ANR	5092010	Identifier	handle		5091572	1					
ANR	5092011	Identifier	xio_server		5091572	1					
ANR	5092012	Identifier	entry		5091572	1					
ANR	5092013	PrimaryExpression	1		5091572	1					
ANR	5092014	Identifier	server_handle		5091572	1					
ANR	5092015	Identifier	listener_system		5091572	1					
ANR	5092016	Identifier	fd		5091572	1					
ANR	5092017	Identifier	l0_fd		5091572	1					
ANR	5092018	IfStatement	if ( result == GLOBUS_SUCCESS )		5091572	17					
ANR	5092019	Condition	result == GLOBUS_SUCCESS	841:8:22464:22487	5091572	0	True				
ANR	5092020	EqualityExpression	result == GLOBUS_SUCCESS		5091572	0		==			
ANR	5092021	Identifier	result		5091572	0					
ANR	5092022	Identifier	GLOBUS_SUCCESS		5091572	1					
ANR	5092023	CompoundStatement		85:34:3603:3603	5091572	1					
ANR	5092024	ExpressionStatement	gassServerUrl = globus_gass_transfer_listener_get_base_url ( gassServerListeners [ 0 ] )	842:6:22498:22580	5091572	0	True				
ANR	5092025	AssignmentExpression	gassServerUrl = globus_gass_transfer_listener_get_base_url ( gassServerListeners [ 0 ] )		5091572	0		=			
ANR	5092026	Identifier	gassServerUrl		5091572	0					
ANR	5092027	CallExpression	globus_gass_transfer_listener_get_base_url ( gassServerListeners [ 0 ] )		5091572	1					
ANR	5092028	Callee	globus_gass_transfer_listener_get_base_url		5091572	0					
ANR	5092029	Identifier	globus_gass_transfer_listener_get_base_url		5091572	0					
ANR	5092030	ArgumentList	gassServerListeners [ 0 ]		5091572	1					
ANR	5092031	Argument	gassServerListeners [ 0 ]		5091572	0					
ANR	5092032	ArrayIndexing	gassServerListeners [ 0 ]		5091572	0					
ANR	5092033	Identifier	gassServerListeners		5091572	0					
ANR	5092034	PrimaryExpression	0		5091572	1					
ANR	5092035	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d %s"" , req_id , result , gassServerUrl ? gassServerUrl : NULLSTRING )"	846:1:22645:22750	5091572	18	True				
ANR	5092036	CallExpression	"globus_libc_sprintf ( output , ""%s %d %s"" , req_id , result , gassServerUrl ? gassServerUrl : NULLSTRING )"		5091572	0					
ANR	5092037	Callee	globus_libc_sprintf		5091572	0					
ANR	5092038	Identifier	globus_libc_sprintf		5091572	0					
ANR	5092039	ArgumentList	output		5091572	1					
ANR	5092040	Argument	output		5091572	0					
ANR	5092041	Identifier	output		5091572	0					
ANR	5092042	Argument	"""%s %d %s"""		5091572	1					
ANR	5092043	PrimaryExpression	"""%s %d %s"""		5091572	0					
ANR	5092044	Argument	req_id		5091572	2					
ANR	5092045	Identifier	req_id		5091572	0					
ANR	5092046	Argument	result		5091572	3					
ANR	5092047	Identifier	result		5091572	0					
ANR	5092048	Argument	gassServerUrl ? gassServerUrl : NULLSTRING		5091572	4					
ANR	5092049	ConditionalExpression	gassServerUrl ? gassServerUrl : NULLSTRING		5091572	0					
ANR	5092050	Condition	gassServerUrl		5091572	0					
ANR	5092051	Identifier	gassServerUrl		5091572	0					
ANR	5092052	Identifier	gassServerUrl		5091572	1					
ANR	5092053	Identifier	NULLSTRING		5091572	2					
ANR	5092054	ExpressionStatement	enqueue_results ( output )	849:1:22754:22777	5091572	19	True				
ANR	5092055	CallExpression	enqueue_results ( output )		5091572	0					
ANR	5092056	Callee	enqueue_results		5091572	0					
ANR	5092057	Identifier	enqueue_results		5091572	0					
ANR	5092058	ArgumentList	output		5091572	1					
ANR	5092059	Argument	output		5091572	0					
ANR	5092060	Identifier	output		5091572	0					
ANR	5092061	ExpressionStatement	all_args_free ( user_arg )	851:1:22782:22805	5091572	20	True				
ANR	5092062	CallExpression	all_args_free ( user_arg )		5091572	0					
ANR	5092063	Callee	all_args_free		5091572	0					
ANR	5092064	Identifier	all_args_free		5091572	0					
ANR	5092065	ArgumentList	user_arg		5091572	1					
ANR	5092066	Argument	user_arg		5091572	0					
ANR	5092067	Identifier	user_arg		5091572	0					
ANR	5092068	ReturnStatement	return 0 ;	852:1:22808:22816	5091572	21	True				
ANR	5092069	PrimaryExpression	0		5091572	0					
ANR	5092070	ReturnType	int		5091572	1					
ANR	5092071	Identifier	handle_gass_server_init		5091572	2					
ANR	5092072	ParameterList	void * user_arg		5091572	3					
ANR	5092073	Parameter	void * user_arg	756:24:18869:18883	5091572	0	True				
ANR	5092074	ParameterType	void *		5091572	0					
ANR	5092075	Identifier	user_arg		5091572	1					
ANR	5092076	CFGEntryNode	ENTRY		5091572		True				
ANR	5092077	CFGExitNode	EXIT		5091572		True				
ANR	5092078	Symbol	l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572						
ANR	5092079	Symbol	& print_control		5091572						
ANR	5092080	Symbol	output		5091572						
ANR	5092081	Symbol	req_id		5091572						
ANR	5092082	Symbol	* * * l0 -> proto		5091572						
ANR	5092083	Symbol	& req_id		5091572						
ANR	5092084	Symbol	* * * l -> proto -> handle -> xio_server		5091572						
ANR	5092085	Symbol	globus_gass_server_ez_init		5091572						
ANR	5092086	Symbol	GLOBUS_FAILURE		5091572						
ANR	5092087	Symbol	GLOBUS_GASS_SERVER_EZ_MODULE		5091572						
ANR	5092088	Symbol	globus_gass_transfer_listener_get_base_url		5091572						
ANR	5092089	Symbol	* * * * l -> proto -> handle		5091572						
ANR	5092090	Symbol	process_string_arg		5091572						
ANR	5092091	Symbol	* * * * l -> proto		5091572						
ANR	5092092	Symbol	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system		5091572						
ANR	5092093	Symbol	* * l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572						
ANR	5092094	Symbol	* * l0 -> proto		5091572						
ANR	5092095	Symbol	* * * l0 -> proto -> handle		5091572						
ANR	5092096	Symbol	* * l0 -> proto -> handle		5091572						
ANR	5092097	Symbol	* * l -> proto -> handle		5091572						
ANR	5092098	Symbol	* l -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092099	Symbol	* l -> proto		5091572						
ANR	5092100	Symbol	l0 -> proto		5091572						
ANR	5092101	Symbol	* * * l		5091572						
ANR	5092102	Symbol	l -> proto		5091572						
ANR	5092103	Symbol	* * * l -> proto		5091572						
ANR	5092104	Symbol	* * l0 -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092105	Symbol	GLOBUS_IO_MODULE		5091572						
ANR	5092106	Symbol	l -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092107	Symbol	* * * * * l0		5091572						
ANR	5092108	Symbol	l0		5091572						
ANR	5092109	Symbol	process_int_arg		5091572						
ANR	5092110	Symbol	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572						
ANR	5092111	Symbol	* l0 -> proto -> handle -> xio_server		5091572						
ANR	5092112	Symbol	* l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572						
ANR	5092113	Symbol	result		5091572						
ANR	5092114	Symbol	l0 -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092115	Symbol	* * l0 -> proto -> handle -> xio_server		5091572						
ANR	5092116	Symbol	GLOBUS_GASS_TRANSFER_MODULE		5091572						
ANR	5092117	Symbol	* l -> proto -> handle		5091572						
ANR	5092118	Symbol	* * * l0 -> proto -> handle -> xio_server		5091572						
ANR	5092119	Symbol	* * * * * * l0		5091572						
ANR	5092120	Symbol	l -> proto -> handle		5091572						
ANR	5092121	Symbol	* * * * * l -> proto -> handle		5091572						
ANR	5092122	Symbol	* * l		5091572						
ANR	5092123	Symbol	( ( my_globus_l_server_t * ) l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_fd		5091572						
ANR	5092124	Symbol	( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system -> fd		5091572						
ANR	5092125	Symbol	gassServerListeners		5091572						
ANR	5092126	Symbol	l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572						
ANR	5092127	Symbol	i		5091572						
ANR	5092128	Symbol	GLOBUS_SUCCESS		5091572						
ANR	5092129	Symbol	version_in_range		5091572						
ANR	5092130	Symbol	l		5091572						
ANR	5092131	Symbol	* * * * * l0 -> proto		5091572						
ANR	5092132	Symbol	* * * * l -> proto -> handle -> xio_server		5091572						
ANR	5092133	Symbol	* l0 -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092134	Symbol	* l0 -> proto -> handle		5091572						
ANR	5092135	Symbol	* * * * * * l -> proto		5091572						
ANR	5092136	Symbol	GLOBUS_GASS_SERVER_EZ_LINE_BUFFER		5091572						
ANR	5092137	Symbol	* l0 -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle		5091572						
ANR	5092138	Symbol	* * l -> proto		5091572						
ANR	5092139	Symbol	& globus_i_gass_transfer_listener_handles		5091572						
ANR	5092140	Symbol	* * * * l		5091572						
ANR	5092141	Symbol	* * * * * * * l		5091572						
ANR	5092142	Symbol	l -> proto -> handle -> xio_server		5091572						
ANR	5092143	Symbol	GLOBUS_GASS_SERVER_EZ_WRITE_ENABLE		5091572						
ANR	5092144	Symbol	l0_fd		5091572						
ANR	5092145	Symbol	globus_handle_table_lookup		5091572						
ANR	5092146	Symbol	* * l -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092147	Symbol	* * l -> proto -> handle -> xio_server		5091572						
ANR	5092148	Symbol	job_contact		5091572						
ANR	5092149	Symbol	* input_line		5091572						
ANR	5092150	Symbol	res		5091572						
ANR	5092151	Symbol	NULL		5091572						
ANR	5092152	Symbol	* * * l -> proto -> handle		5091572						
ANR	5092153	Symbol	* ( ( my_globus_l_server_t * ) l -> proto -> handle -> xio_server -> entry [ 1 ] . server_handle ) -> listener_system		5091572						
ANR	5092154	Symbol	stderr		5091572						
ANR	5092155	Symbol	* * * * * * l		5091572						
ANR	5092156	Symbol	* * l0		5091572						
ANR	5092157	Symbol	NUM_GASS_LISTENERS		5091572						
ANR	5092158	Symbol	GLOBUS_GASS_SERVER_EZ_READ_ENABLE		5091572						
ANR	5092159	Symbol	* gassServerListeners		5091572						
ANR	5092160	Symbol	* * * l -> proto -> handle -> xio_server -> entry		5091572						
ANR	5092161	Symbol	port		5091572						
ANR	5092162	Symbol	globus_libc_malloc		5091572						
ANR	5092163	Symbol	num_listeners		5091572						
ANR	5092164	Symbol	user_arg		5091572						
ANR	5092165	Symbol	* * * * * l -> proto		5091572						
ANR	5092166	Symbol	GLOBUS_XIO_MODULE		5091572						
ANR	5092167	Symbol	* * * * l0		5091572						
ANR	5092168	Symbol	* l0 -> proto		5091572						
ANR	5092169	Symbol	* * * * l0 -> proto -> handle		5091572						
ANR	5092170	Symbol	* * * * * l		5091572						
ANR	5092171	Symbol	globus_module_activate		5091572						
ANR	5092172	Symbol	* * * l0		5091572						
ANR	5092173	Symbol	* l -> proto -> handle -> xio_server		5091572						
ANR	5092174	Symbol	l0 -> proto -> handle		5091572						
ANR	5092175	Symbol	l0 -> proto -> handle -> xio_server		5091572						
ANR	5092176	Symbol	* l0		5091572						
ANR	5092177	Symbol	input_line		5091572						
ANR	5092178	Symbol	* * * * l0 -> proto		5091572						
ANR	5092179	Symbol	my_globus_gass_server_ez_init		5091572						
ANR	5092180	Symbol	NULLSTRING		5091572						
ANR	5092181	Symbol	* i		5091572						
ANR	5092182	Symbol	& port		5091572						
ANR	5092183	Symbol	* l		5091572						
ANR	5092184	Symbol	gassServerUrl		5091572						
ANR	5092185	Function	handle_gram_job_callback_register	855:0:22821:23958							
ANR	5092186	FunctionDef	handle_gram_job_callback_register (void * user_arg)		5092185	0					
ANR	5092187	CompoundStatement		857:0:22876:23958	5092185	0					
ANR	5092188	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	858:1:22879:22917	5092185	0	True				
ANR	5092189	IdentifierDecl	* * input_line = ( char * * ) user_arg		5092185	0					
ANR	5092190	IdentifierDeclType	char * *		5092185	0					
ANR	5092191	Identifier	input_line		5092185	1					
ANR	5092192	AssignmentExpression	* * input_line = ( char * * ) user_arg		5092185	2		=			
ANR	5092193	Identifier	input_line		5092185	0					
ANR	5092194	CastExpression	( char * * ) user_arg		5092185	1					
ANR	5092195	CastTarget	char * *		5092185	0					
ANR	5092196	Identifier	user_arg		5092185	1					
ANR	5092197	IdentifierDeclStatement	int result ;	859:1:22920:22930	5092185	1	True				
ANR	5092198	IdentifierDecl	result		5092185	0					
ANR	5092199	IdentifierDeclType	int		5092185	0					
ANR	5092200	Identifier	result		5092185	1					
ANR	5092201	IdentifierDeclStatement	user_arg_t * gram_arg ;	860:1:22933:22954	5092185	2	True				
ANR	5092202	IdentifierDecl	* gram_arg		5092185	0					
ANR	5092203	IdentifierDeclType	user_arg_t *		5092185	0					
ANR	5092204	Identifier	gram_arg		5092185	1					
ANR	5092205	IdentifierDeclStatement	"char * req_id , * job_contact , * callback_contact ;"	863:1:23000:23045	5092185	3	True				
ANR	5092206	IdentifierDecl	* req_id		5092185	0					
ANR	5092207	IdentifierDeclType	char *		5092185	0					
ANR	5092208	Identifier	req_id		5092185	1					
ANR	5092209	IdentifierDecl	* job_contact		5092185	1					
ANR	5092210	IdentifierDeclType	char *		5092185	0					
ANR	5092211	Identifier	job_contact		5092185	1					
ANR	5092212	IdentifierDecl	* callback_contact		5092185	2					
ANR	5092213	IdentifierDeclType	char *		5092185	0					
ANR	5092214	Identifier	callback_contact		5092185	1					
ANR	5092215	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5092185	4					
ANR	5092216	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	865:5:23053:23095	5092185	0	True				
ANR	5092217	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5092185	0					
ANR	5092218	UnaryOperator	!		5092185	0					
ANR	5092219	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5092185	1					
ANR	5092220	Callee	process_string_arg		5092185	0					
ANR	5092221	Identifier	process_string_arg		5092185	0					
ANR	5092222	ArgumentList	input_line [ 1 ]		5092185	1					
ANR	5092223	Argument	input_line [ 1 ]		5092185	0					
ANR	5092224	ArrayIndexing	input_line [ 1 ]		5092185	0					
ANR	5092225	Identifier	input_line		5092185	0					
ANR	5092226	PrimaryExpression	1		5092185	1					
ANR	5092227	Argument	& req_id		5092185	1					
ANR	5092228	UnaryOperationExpression	& req_id		5092185	0					
ANR	5092229	UnaryOperator	&		5092185	0					
ANR	5092230	Identifier	req_id		5092185	1					
ANR	5092231	CompoundStatement		9:51:222:222	5092185	1					
ANR	5092232	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	866:2:23103:23124	5092185	0	True				
ANR	5092233	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092185	0					
ANR	5092234	Callee	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092235	Identifier	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092236	ArgumentList			5092185	1					
ANR	5092237	ReturnStatement	return 0 ;	867:2:23128:23136	5092185	1	True				
ANR	5092238	PrimaryExpression	0		5092185	0					
ANR	5092239	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & job_contact ) )"		5092185	5					
ANR	5092240	Condition	"! process_string_arg ( input_line [ 2 ] , & job_contact )"	870:5:23147:23194	5092185	0	True				
ANR	5092241	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & job_contact )"		5092185	0					
ANR	5092242	UnaryOperator	!		5092185	0					
ANR	5092243	CallExpression	"process_string_arg ( input_line [ 2 ] , & job_contact )"		5092185	1					
ANR	5092244	Callee	process_string_arg		5092185	0					
ANR	5092245	Identifier	process_string_arg		5092185	0					
ANR	5092246	ArgumentList	input_line [ 2 ]		5092185	1					
ANR	5092247	Argument	input_line [ 2 ]		5092185	0					
ANR	5092248	ArrayIndexing	input_line [ 2 ]		5092185	0					
ANR	5092249	Identifier	input_line		5092185	0					
ANR	5092250	PrimaryExpression	2		5092185	1					
ANR	5092251	Argument	& job_contact		5092185	1					
ANR	5092252	UnaryOperationExpression	& job_contact		5092185	0					
ANR	5092253	UnaryOperator	&		5092185	0					
ANR	5092254	Identifier	job_contact		5092185	1					
ANR	5092255	CompoundStatement		14:56:321:321	5092185	1					
ANR	5092256	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	871:2:23202:23223	5092185	0	True				
ANR	5092257	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092185	0					
ANR	5092258	Callee	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092259	Identifier	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092260	ArgumentList			5092185	1					
ANR	5092261	ReturnStatement	return 0 ;	872:2:23227:23235	5092185	1	True				
ANR	5092262	PrimaryExpression	0		5092185	0					
ANR	5092263	IfStatement	"if ( ! process_string_arg ( input_line [ 3 ] , & callback_contact ) )"		5092185	6					
ANR	5092264	Condition	"! process_string_arg ( input_line [ 3 ] , & callback_contact )"	875:5:23246:23298	5092185	0	True				
ANR	5092265	UnaryOperationExpression	"! process_string_arg ( input_line [ 3 ] , & callback_contact )"		5092185	0					
ANR	5092266	UnaryOperator	!		5092185	0					
ANR	5092267	CallExpression	"process_string_arg ( input_line [ 3 ] , & callback_contact )"		5092185	1					
ANR	5092268	Callee	process_string_arg		5092185	0					
ANR	5092269	Identifier	process_string_arg		5092185	0					
ANR	5092270	ArgumentList	input_line [ 3 ]		5092185	1					
ANR	5092271	Argument	input_line [ 3 ]		5092185	0					
ANR	5092272	ArrayIndexing	input_line [ 3 ]		5092185	0					
ANR	5092273	Identifier	input_line		5092185	0					
ANR	5092274	PrimaryExpression	3		5092185	1					
ANR	5092275	Argument	& callback_contact		5092185	1					
ANR	5092276	UnaryOperationExpression	& callback_contact		5092185	0					
ANR	5092277	UnaryOperator	&		5092185	0					
ANR	5092278	Identifier	callback_contact		5092185	1					
ANR	5092279	CompoundStatement		19:61:425:425	5092185	1					
ANR	5092280	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	876:2:23306:23327	5092185	0	True				
ANR	5092281	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092185	0					
ANR	5092282	Callee	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092283	Identifier	HANDLE_SYNTAX_ERROR		5092185	0					
ANR	5092284	ArgumentList			5092185	1					
ANR	5092285	ReturnStatement	return 0 ;	877:2:23331:23339	5092185	1	True				
ANR	5092286	PrimaryExpression	0		5092185	0					
ANR	5092287	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	880:1:23346:23393	5092185	7	True				
ANR	5092288	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5092185	0		=			
ANR	5092289	Identifier	gram_arg		5092185	0					
ANR	5092290	CallExpression	"new_gram_arg ( req_id , current_cred )"		5092185	1					
ANR	5092291	Callee	new_gram_arg		5092185	0					
ANR	5092292	Identifier	new_gram_arg		5092185	0					
ANR	5092293	ArgumentList	req_id		5092185	1					
ANR	5092294	Argument	req_id		5092185	0					
ANR	5092295	Identifier	req_id		5092185	0					
ANR	5092296	Argument	current_cred		5092185	1					
ANR	5092297	Identifier	current_cred		5092185	0					
ANR	5092298	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	882:1:23397:23415	5092185	8	True				
ANR	5092299	CallExpression	"gahp_printf ( ""S\\n"" )"		5092185	0					
ANR	5092300	Callee	gahp_printf		5092185	0					
ANR	5092301	Identifier	gahp_printf		5092185	0					
ANR	5092302	ArgumentList	"""S\\n"""		5092185	1					
ANR	5092303	Argument	"""S\\n"""		5092185	0					
ANR	5092304	PrimaryExpression	"""S\\n"""		5092185	0					
ANR	5092305	ExpressionStatement	gahp_sem_up ( & print_control )	883:1:23418:23445	5092185	9	True				
ANR	5092306	CallExpression	gahp_sem_up ( & print_control )		5092185	0					
ANR	5092307	Callee	gahp_sem_up		5092185	0					
ANR	5092308	Identifier	gahp_sem_up		5092185	0					
ANR	5092309	ArgumentList	& print_control		5092185	1					
ANR	5092310	Argument	& print_control		5092185	0					
ANR	5092311	UnaryOperationExpression	& print_control		5092185	0					
ANR	5092312	UnaryOperator	&		5092185	0					
ANR	5092313	Identifier	print_control		5092185	1					
ANR	5092314	ExpressionStatement	"result = globus_gram_client_register_job_callback_registration ( job_contact , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_callback_register , ( void * ) gram_arg )"	885:1:23449:23710	5092185	10	True				
ANR	5092315	AssignmentExpression	"result = globus_gram_client_register_job_callback_registration ( job_contact , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_callback_register , ( void * ) gram_arg )"		5092185	0		=			
ANR	5092316	Identifier	result		5092185	0					
ANR	5092317	CallExpression	"globus_gram_client_register_job_callback_registration ( job_contact , GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL , callback_contact , gram_arg -> gram_attr , callback_gram_job_callback_register , ( void * ) gram_arg )"		5092185	1					
ANR	5092318	Callee	globus_gram_client_register_job_callback_registration		5092185	0					
ANR	5092319	Identifier	globus_gram_client_register_job_callback_registration		5092185	0					
ANR	5092320	ArgumentList	job_contact		5092185	1					
ANR	5092321	Argument	job_contact		5092185	0					
ANR	5092322	Identifier	job_contact		5092185	0					
ANR	5092323	Argument	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5092185	1					
ANR	5092324	Identifier	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5092185	0					
ANR	5092325	Argument	callback_contact		5092185	2					
ANR	5092326	Identifier	callback_contact		5092185	0					
ANR	5092327	Argument	gram_arg -> gram_attr		5092185	3					
ANR	5092328	PtrMemberAccess	gram_arg -> gram_attr		5092185	0					
ANR	5092329	Identifier	gram_arg		5092185	0					
ANR	5092330	Identifier	gram_attr		5092185	1					
ANR	5092331	Argument	callback_gram_job_callback_register		5092185	4					
ANR	5092332	Identifier	callback_gram_job_callback_register		5092185	0					
ANR	5092333	Argument	( void * ) gram_arg		5092185	5					
ANR	5092334	CastExpression	( void * ) gram_arg		5092185	0					
ANR	5092335	CastTarget	void *		5092185	0					
ANR	5092336	Identifier	gram_arg		5092185	1					
ANR	5092337	IfStatement	if ( result != GLOBUS_SUCCESS )		5092185	11					
ANR	5092338	Condition	result != GLOBUS_SUCCESS	893:5:23718:23741	5092185	0	True				
ANR	5092339	EqualityExpression	result != GLOBUS_SUCCESS		5092185	0		!=			
ANR	5092340	Identifier	result		5092185	0					
ANR	5092341	Identifier	GLOBUS_SUCCESS		5092185	1					
ANR	5092342	CompoundStatement		37:31:867:867	5092185	1					
ANR	5092343	ExpressionStatement	"callback_gram_job_callback_register ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	894:2:23748:23915	5092185	0	True				
ANR	5092344	CallExpression	"callback_gram_job_callback_register ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5092185	0					
ANR	5092345	Callee	callback_gram_job_callback_register		5092185	0					
ANR	5092346	Identifier	callback_gram_job_callback_register		5092185	0					
ANR	5092347	ArgumentList	( void * ) gram_arg		5092185	1					
ANR	5092348	Argument	( void * ) gram_arg		5092185	0					
ANR	5092349	CastExpression	( void * ) gram_arg		5092185	0					
ANR	5092350	CastTarget	void *		5092185	0					
ANR	5092351	Identifier	gram_arg		5092185	1					
ANR	5092352	Argument	( globus_gram_protocol_error_t ) result		5092185	1					
ANR	5092353	CastExpression	( globus_gram_protocol_error_t ) result		5092185	0					
ANR	5092354	CastTarget	globus_gram_protocol_error_t		5092185	0					
ANR	5092355	Identifier	result		5092185	1					
ANR	5092356	Argument	NULL		5092185	2					
ANR	5092357	Identifier	NULL		5092185	0					
ANR	5092358	Argument	( globus_gram_protocol_job_state_t ) 0		5092185	3					
ANR	5092359	CastExpression	( globus_gram_protocol_job_state_t ) 0		5092185	0					
ANR	5092360	CastTarget	globus_gram_protocol_job_state_t		5092185	0					
ANR	5092361	PrimaryExpression	0		5092185	1					
ANR	5092362	Argument	( globus_gram_protocol_error_t ) 0		5092185	4					
ANR	5092363	CastExpression	( globus_gram_protocol_error_t ) 0		5092185	0					
ANR	5092364	CastTarget	globus_gram_protocol_error_t		5092185	0					
ANR	5092365	PrimaryExpression	0		5092185	1					
ANR	5092366	ExpressionStatement	all_args_free ( user_arg )	897:1:23922:23945	5092185	12	True				
ANR	5092367	CallExpression	all_args_free ( user_arg )		5092185	0					
ANR	5092368	Callee	all_args_free		5092185	0					
ANR	5092369	Identifier	all_args_free		5092185	0					
ANR	5092370	ArgumentList	user_arg		5092185	1					
ANR	5092371	Argument	user_arg		5092185	0					
ANR	5092372	Identifier	user_arg		5092185	0					
ANR	5092373	ReturnStatement	return 0 ;	898:1:23948:23956	5092185	13	True				
ANR	5092374	PrimaryExpression	0		5092185	0					
ANR	5092375	ReturnType	int		5092185	1					
ANR	5092376	Identifier	handle_gram_job_callback_register		5092185	2					
ANR	5092377	ParameterList	void * user_arg		5092185	3					
ANR	5092378	Parameter	void * user_arg	856:34:22859:22873	5092185	0	True				
ANR	5092379	ParameterType	void *		5092185	0					
ANR	5092380	Identifier	user_arg		5092185	1					
ANR	5092381	CFGEntryNode	ENTRY		5092185		True				
ANR	5092382	CFGExitNode	EXIT		5092185		True				
ANR	5092383	Symbol	user_arg		5092185						
ANR	5092384	Symbol	* input_line		5092185						
ANR	5092385	Symbol	process_string_arg		5092185						
ANR	5092386	Symbol	NULL		5092185						
ANR	5092387	Symbol	new_gram_arg		5092185						
ANR	5092388	Symbol	* gram_arg		5092185						
ANR	5092389	Symbol	GLOBUS_SUCCESS		5092185						
ANR	5092390	Symbol	input_line		5092185						
ANR	5092391	Symbol	& job_contact		5092185						
ANR	5092392	Symbol	& print_control		5092185						
ANR	5092393	Symbol	result		5092185						
ANR	5092394	Symbol	req_id		5092185						
ANR	5092395	Symbol	callback_contact		5092185						
ANR	5092396	Symbol	current_cred		5092185						
ANR	5092397	Symbol	gram_arg -> gram_attr		5092185						
ANR	5092398	Symbol	GLOBUS_GRAM_PROTOCOL_JOB_STATE_ALL		5092185						
ANR	5092399	Symbol	globus_gram_client_register_job_callback_registration		5092185						
ANR	5092400	Symbol	& req_id		5092185						
ANR	5092401	Symbol	& callback_contact		5092185						
ANR	5092402	Symbol	callback_gram_job_callback_register		5092185						
ANR	5092403	Symbol	gram_arg		5092185						
ANR	5092404	Symbol	job_contact		5092185						
ANR	5092405	Function	callback_gram_job_callback_register	901:0:23961:24486							
ANR	5092406	FunctionDef	"callback_gram_job_callback_register (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5092405	0					
ANR	5092407	CompoundStatement		907:0:24198:24486	5092405	0					
ANR	5092408	IdentifierDeclStatement	char * output ;	908:1:24201:24213	5092405	0	True				
ANR	5092409	IdentifierDecl	* output		5092405	0					
ANR	5092410	IdentifierDeclType	char *		5092405	0					
ANR	5092411	Identifier	output		5092405	1					
ANR	5092412	IdentifierDeclStatement	user_arg_t * gram_arg ;	909:1:24216:24237	5092405	1	True				
ANR	5092413	IdentifierDecl	* gram_arg		5092405	0					
ANR	5092414	IdentifierDeclType	user_arg_t *		5092405	0					
ANR	5092415	Identifier	gram_arg		5092405	1					
ANR	5092416	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	911:1:24241:24269	5092405	2	True				
ANR	5092417	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5092405	0		=			
ANR	5092418	Identifier	gram_arg		5092405	0					
ANR	5092419	CastExpression	( user_arg_t * ) arg		5092405	1					
ANR	5092420	CastTarget	user_arg_t *		5092405	0					
ANR	5092421	Identifier	arg		5092405	1					
ANR	5092422	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	913:1:24273:24313	5092405	3	True				
ANR	5092423	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5092405	0		=			
ANR	5092424	Identifier	output		5092405	0					
ANR	5092425	CastExpression	( char * ) globus_libc_malloc ( 500 )		5092405	1					
ANR	5092426	CastTarget	char *		5092405	0					
ANR	5092427	CallExpression	globus_libc_malloc ( 500 )		5092405	1					
ANR	5092428	Callee	globus_libc_malloc		5092405	0					
ANR	5092429	Identifier	globus_libc_malloc		5092405	0					
ANR	5092430	ArgumentList	500		5092405	1					
ANR	5092431	Argument	500		5092405	0					
ANR	5092432	PrimaryExpression	500		5092405	0					
ANR	5092433	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"	915:1:24317:24416	5092405	4	True				
ANR	5092434	CallExpression	"globus_libc_sprintf ( output , ""%s %d %d %d"" , gram_arg -> req_id , operation_fc , job_fc , job_state )"		5092405	0					
ANR	5092435	Callee	globus_libc_sprintf		5092405	0					
ANR	5092436	Identifier	globus_libc_sprintf		5092405	0					
ANR	5092437	ArgumentList	output		5092405	1					
ANR	5092438	Argument	output		5092405	0					
ANR	5092439	Identifier	output		5092405	0					
ANR	5092440	Argument	"""%s %d %d %d"""		5092405	1					
ANR	5092441	PrimaryExpression	"""%s %d %d %d"""		5092405	0					
ANR	5092442	Argument	gram_arg -> req_id		5092405	2					
ANR	5092443	PtrMemberAccess	gram_arg -> req_id		5092405	0					
ANR	5092444	Identifier	gram_arg		5092405	0					
ANR	5092445	Identifier	req_id		5092405	1					
ANR	5092446	Argument	operation_fc		5092405	3					
ANR	5092447	Identifier	operation_fc		5092405	0					
ANR	5092448	Argument	job_fc		5092405	4					
ANR	5092449	Identifier	job_fc		5092405	0					
ANR	5092450	Argument	job_state		5092405	5					
ANR	5092451	Identifier	job_state		5092405	0					
ANR	5092452	ExpressionStatement	enqueue_results ( output )	918:1:24420:24443	5092405	5	True				
ANR	5092453	CallExpression	enqueue_results ( output )		5092405	0					
ANR	5092454	Callee	enqueue_results		5092405	0					
ANR	5092455	Identifier	enqueue_results		5092405	0					
ANR	5092456	ArgumentList	output		5092405	1					
ANR	5092457	Argument	output		5092405	0					
ANR	5092458	Identifier	output		5092405	0					
ANR	5092459	ExpressionStatement	delete_gram_arg ( gram_arg )	920:1:24448:24475	5092405	6	True				
ANR	5092460	CallExpression	delete_gram_arg ( gram_arg )		5092405	0					
ANR	5092461	Callee	delete_gram_arg		5092405	0					
ANR	5092462	Identifier	delete_gram_arg		5092405	0					
ANR	5092463	ArgumentList	gram_arg		5092405	1					
ANR	5092464	Argument	gram_arg		5092405	0					
ANR	5092465	Identifier	gram_arg		5092405	0					
ANR	5092466	ReturnStatement	return ;	921:1:24478:24484	5092405	7	True				
ANR	5092467	ReturnType	void		5092405	1					
ANR	5092468	Identifier	callback_gram_job_callback_register		5092405	2					
ANR	5092469	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5092405	3					
ANR	5092470	Parameter	void * arg	902:36:24002:24010	5092405	0	True				
ANR	5092471	ParameterType	void *		5092405	0					
ANR	5092472	Identifier	arg		5092405	1					
ANR	5092473	Parameter	globus_gram_protocol_error_t operation_fc	903:9:24022:24062	5092405	1	True				
ANR	5092474	ParameterType	globus_gram_protocol_error_t		5092405	0					
ANR	5092475	Identifier	operation_fc		5092405	1					
ANR	5092476	Parameter	const char * job_contact	904:9:24074:24096	5092405	2	True				
ANR	5092477	ParameterType	const char *		5092405	0					
ANR	5092478	Identifier	job_contact		5092405	1					
ANR	5092479	Parameter	globus_gram_protocol_job_state_t job_state	905:9:24108:24149	5092405	3	True				
ANR	5092480	ParameterType	globus_gram_protocol_job_state_t		5092405	0					
ANR	5092481	Identifier	job_state		5092405	1					
ANR	5092482	Parameter	globus_gram_protocol_error_t job_fc	906:9:24161:24195	5092405	4	True				
ANR	5092483	ParameterType	globus_gram_protocol_error_t		5092405	0					
ANR	5092484	Identifier	job_fc		5092405	1					
ANR	5092485	CFGEntryNode	ENTRY		5092405		True				
ANR	5092486	CFGExitNode	EXIT		5092405		True				
ANR	5092487	Symbol	output		5092405						
ANR	5092488	Symbol	job_fc		5092405						
ANR	5092489	Symbol	gram_arg -> req_id		5092405						
ANR	5092490	Symbol	arg		5092405						
ANR	5092491	Symbol	* gram_arg		5092405						
ANR	5092492	Symbol	globus_libc_malloc		5092405						
ANR	5092493	Symbol	operation_fc		5092405						
ANR	5092494	Symbol	gram_arg		5092405						
ANR	5092495	Symbol	job_contact		5092405						
ANR	5092496	Symbol	job_state		5092405						
ANR	5092497	Function	handle_gram_ping	924:0:24489:25375							
ANR	5092498	FunctionDef	handle_gram_ping (void * user_arg)		5092497	0					
ANR	5092499	CompoundStatement		926:0:24527:25375	5092497	0					
ANR	5092500	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	927:1:24530:24568	5092497	0	True				
ANR	5092501	IdentifierDecl	* * input_line = ( char * * ) user_arg		5092497	0					
ANR	5092502	IdentifierDeclType	char * *		5092497	0					
ANR	5092503	Identifier	input_line		5092497	1					
ANR	5092504	AssignmentExpression	* * input_line = ( char * * ) user_arg		5092497	2		=			
ANR	5092505	Identifier	input_line		5092497	0					
ANR	5092506	CastExpression	( char * * ) user_arg		5092497	1					
ANR	5092507	CastTarget	char * *		5092497	0					
ANR	5092508	Identifier	user_arg		5092497	1					
ANR	5092509	IdentifierDeclStatement	int result ;	928:1:24571:24581	5092497	1	True				
ANR	5092510	IdentifierDecl	result		5092497	0					
ANR	5092511	IdentifierDeclType	int		5092497	0					
ANR	5092512	Identifier	result		5092497	1					
ANR	5092513	IdentifierDeclStatement	"char * output , * req_id , * resource_contact ;"	929:1:24584:24624	5092497	2	True				
ANR	5092514	IdentifierDecl	* output		5092497	0					
ANR	5092515	IdentifierDeclType	char *		5092497	0					
ANR	5092516	Identifier	output		5092497	1					
ANR	5092517	IdentifierDecl	* req_id		5092497	1					
ANR	5092518	IdentifierDeclType	char *		5092497	0					
ANR	5092519	Identifier	req_id		5092497	1					
ANR	5092520	IdentifierDecl	* resource_contact		5092497	2					
ANR	5092521	IdentifierDeclType	char *		5092497	0					
ANR	5092522	Identifier	resource_contact		5092497	1					
ANR	5092523	IdentifierDeclStatement	user_arg_t * gram_arg ;	930:1:24627:24648	5092497	3	True				
ANR	5092524	IdentifierDecl	* gram_arg		5092497	0					
ANR	5092525	IdentifierDeclType	user_arg_t *		5092497	0					
ANR	5092526	Identifier	gram_arg		5092497	1					
ANR	5092527	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5092497	4					
ANR	5092528	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	932:5:24656:24698	5092497	0	True				
ANR	5092529	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5092497	0					
ANR	5092530	UnaryOperator	!		5092497	0					
ANR	5092531	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5092497	1					
ANR	5092532	Callee	process_string_arg		5092497	0					
ANR	5092533	Identifier	process_string_arg		5092497	0					
ANR	5092534	ArgumentList	input_line [ 1 ]		5092497	1					
ANR	5092535	Argument	input_line [ 1 ]		5092497	0					
ANR	5092536	ArrayIndexing	input_line [ 1 ]		5092497	0					
ANR	5092537	Identifier	input_line		5092497	0					
ANR	5092538	PrimaryExpression	1		5092497	1					
ANR	5092539	Argument	& req_id		5092497	1					
ANR	5092540	UnaryOperationExpression	& req_id		5092497	0					
ANR	5092541	UnaryOperator	&		5092497	0					
ANR	5092542	Identifier	req_id		5092497	1					
ANR	5092543	CompoundStatement		7:51:174:174	5092497	1					
ANR	5092544	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	933:2:24706:24727	5092497	0	True				
ANR	5092545	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092497	0					
ANR	5092546	Callee	HANDLE_SYNTAX_ERROR		5092497	0					
ANR	5092547	Identifier	HANDLE_SYNTAX_ERROR		5092497	0					
ANR	5092548	ArgumentList			5092497	1					
ANR	5092549	ReturnStatement	return 0 ;	934:2:24731:24739	5092497	1	True				
ANR	5092550	PrimaryExpression	0		5092497	0					
ANR	5092551	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & resource_contact ) )"		5092497	5					
ANR	5092552	Condition	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"	937:5:24750:24803	5092497	0	True				
ANR	5092553	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"		5092497	0					
ANR	5092554	UnaryOperator	!		5092497	0					
ANR	5092555	CallExpression	"process_string_arg ( input_line [ 2 ] , & resource_contact )"		5092497	1					
ANR	5092556	Callee	process_string_arg		5092497	0					
ANR	5092557	Identifier	process_string_arg		5092497	0					
ANR	5092558	ArgumentList	input_line [ 2 ]		5092497	1					
ANR	5092559	Argument	input_line [ 2 ]		5092497	0					
ANR	5092560	ArrayIndexing	input_line [ 2 ]		5092497	0					
ANR	5092561	Identifier	input_line		5092497	0					
ANR	5092562	PrimaryExpression	2		5092497	1					
ANR	5092563	Argument	& resource_contact		5092497	1					
ANR	5092564	UnaryOperationExpression	& resource_contact		5092497	0					
ANR	5092565	UnaryOperator	&		5092497	0					
ANR	5092566	Identifier	resource_contact		5092497	1					
ANR	5092567	CompoundStatement		12:61:278:278	5092497	1					
ANR	5092568	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	938:2:24810:24831	5092497	0	True				
ANR	5092569	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092497	0					
ANR	5092570	Callee	HANDLE_SYNTAX_ERROR		5092497	0					
ANR	5092571	Identifier	HANDLE_SYNTAX_ERROR		5092497	0					
ANR	5092572	ArgumentList			5092497	1					
ANR	5092573	ReturnStatement	return 0 ;	939:2:24835:24843	5092497	1	True				
ANR	5092574	PrimaryExpression	0		5092497	0					
ANR	5092575	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	942:1:24850:24897	5092497	6	True				
ANR	5092576	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5092497	0		=			
ANR	5092577	Identifier	gram_arg		5092497	0					
ANR	5092578	CallExpression	"new_gram_arg ( req_id , current_cred )"		5092497	1					
ANR	5092579	Callee	new_gram_arg		5092497	0					
ANR	5092580	Identifier	new_gram_arg		5092497	0					
ANR	5092581	ArgumentList	req_id		5092497	1					
ANR	5092582	Argument	req_id		5092497	0					
ANR	5092583	Identifier	req_id		5092497	0					
ANR	5092584	Argument	current_cred		5092497	1					
ANR	5092585	Identifier	current_cred		5092497	0					
ANR	5092586	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	944:1:24901:24919	5092497	7	True				
ANR	5092587	CallExpression	"gahp_printf ( ""S\\n"" )"		5092497	0					
ANR	5092588	Callee	gahp_printf		5092497	0					
ANR	5092589	Identifier	gahp_printf		5092497	0					
ANR	5092590	ArgumentList	"""S\\n"""		5092497	1					
ANR	5092591	Argument	"""S\\n"""		5092497	0					
ANR	5092592	PrimaryExpression	"""S\\n"""		5092497	0					
ANR	5092593	ExpressionStatement	gahp_sem_up ( & print_control )	945:1:24922:24949	5092497	8	True				
ANR	5092594	CallExpression	gahp_sem_up ( & print_control )		5092497	0					
ANR	5092595	Callee	gahp_sem_up		5092497	0					
ANR	5092596	Identifier	gahp_sem_up		5092497	0					
ANR	5092597	ArgumentList	& print_control		5092497	1					
ANR	5092598	Argument	& print_control		5092497	0					
ANR	5092599	UnaryOperationExpression	& print_control		5092497	0					
ANR	5092600	UnaryOperator	&		5092497	0					
ANR	5092601	Identifier	print_control		5092497	1					
ANR	5092602	ExpressionStatement	"result = globus_gram_client_register_ping ( resource_contact , gram_arg -> gram_attr , callback_gram_ping , ( void * ) gram_arg )"	947:1:25007:25143	5092497	9	True				
ANR	5092603	AssignmentExpression	"result = globus_gram_client_register_ping ( resource_contact , gram_arg -> gram_attr , callback_gram_ping , ( void * ) gram_arg )"		5092497	0		=			
ANR	5092604	Identifier	result		5092497	0					
ANR	5092605	CallExpression	"globus_gram_client_register_ping ( resource_contact , gram_arg -> gram_attr , callback_gram_ping , ( void * ) gram_arg )"		5092497	1					
ANR	5092606	Callee	globus_gram_client_register_ping		5092497	0					
ANR	5092607	Identifier	globus_gram_client_register_ping		5092497	0					
ANR	5092608	ArgumentList	resource_contact		5092497	1					
ANR	5092609	Argument	resource_contact		5092497	0					
ANR	5092610	Identifier	resource_contact		5092497	0					
ANR	5092611	Argument	gram_arg -> gram_attr		5092497	1					
ANR	5092612	PtrMemberAccess	gram_arg -> gram_attr		5092497	0					
ANR	5092613	Identifier	gram_arg		5092497	0					
ANR	5092614	Identifier	gram_attr		5092497	1					
ANR	5092615	Argument	callback_gram_ping		5092497	2					
ANR	5092616	Identifier	callback_gram_ping		5092497	0					
ANR	5092617	Argument	( void * ) gram_arg		5092497	3					
ANR	5092618	CastExpression	( void * ) gram_arg		5092497	0					
ANR	5092619	CastTarget	void *		5092497	0					
ANR	5092620	Identifier	gram_arg		5092497	1					
ANR	5092621	IfStatement	if ( result != GLOBUS_SUCCESS )		5092497	10					
ANR	5092622	Condition	result != GLOBUS_SUCCESS	951:5:25151:25174	5092497	0	True				
ANR	5092623	EqualityExpression	result != GLOBUS_SUCCESS		5092497	0		!=			
ANR	5092624	Identifier	result		5092497	0					
ANR	5092625	Identifier	GLOBUS_SUCCESS		5092497	1					
ANR	5092626	CompoundStatement		26:31:649:649	5092497	1					
ANR	5092627	ExpressionStatement	"callback_gram_ping ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	952:2:25181:25331	5092497	0	True				
ANR	5092628	CallExpression	"callback_gram_ping ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5092497	0					
ANR	5092629	Callee	callback_gram_ping		5092497	0					
ANR	5092630	Identifier	callback_gram_ping		5092497	0					
ANR	5092631	ArgumentList	( void * ) gram_arg		5092497	1					
ANR	5092632	Argument	( void * ) gram_arg		5092497	0					
ANR	5092633	CastExpression	( void * ) gram_arg		5092497	0					
ANR	5092634	CastTarget	void *		5092497	0					
ANR	5092635	Identifier	gram_arg		5092497	1					
ANR	5092636	Argument	( globus_gram_protocol_error_t ) result		5092497	1					
ANR	5092637	CastExpression	( globus_gram_protocol_error_t ) result		5092497	0					
ANR	5092638	CastTarget	globus_gram_protocol_error_t		5092497	0					
ANR	5092639	Identifier	result		5092497	1					
ANR	5092640	Argument	NULL		5092497	2					
ANR	5092641	Identifier	NULL		5092497	0					
ANR	5092642	Argument	( globus_gram_protocol_job_state_t ) 0		5092497	3					
ANR	5092643	CastExpression	( globus_gram_protocol_job_state_t ) 0		5092497	0					
ANR	5092644	CastTarget	globus_gram_protocol_job_state_t		5092497	0					
ANR	5092645	PrimaryExpression	0		5092497	1					
ANR	5092646	Argument	( globus_gram_protocol_error_t ) 0		5092497	4					
ANR	5092647	CastExpression	( globus_gram_protocol_error_t ) 0		5092497	0					
ANR	5092648	CastTarget	globus_gram_protocol_error_t		5092497	0					
ANR	5092649	PrimaryExpression	0		5092497	1					
ANR	5092650	ExpressionStatement	all_args_free ( user_arg )	955:1:25338:25361	5092497	11	True				
ANR	5092651	CallExpression	all_args_free ( user_arg )		5092497	0					
ANR	5092652	Callee	all_args_free		5092497	0					
ANR	5092653	Identifier	all_args_free		5092497	0					
ANR	5092654	ArgumentList	user_arg		5092497	1					
ANR	5092655	Argument	user_arg		5092497	0					
ANR	5092656	Identifier	user_arg		5092497	0					
ANR	5092657	ReturnStatement	return 0 ;	956:1:25364:25372	5092497	12	True				
ANR	5092658	PrimaryExpression	0		5092497	0					
ANR	5092659	ReturnType	int		5092497	1					
ANR	5092660	Identifier	handle_gram_ping		5092497	2					
ANR	5092661	ParameterList	void * user_arg		5092497	3					
ANR	5092662	Parameter	void * user_arg	925:17:24510:24524	5092497	0	True				
ANR	5092663	ParameterType	void *		5092497	0					
ANR	5092664	Identifier	user_arg		5092497	1					
ANR	5092665	CFGEntryNode	ENTRY		5092497		True				
ANR	5092666	CFGExitNode	EXIT		5092497		True				
ANR	5092667	Symbol	user_arg		5092497						
ANR	5092668	Symbol	* input_line		5092497						
ANR	5092669	Symbol	process_string_arg		5092497						
ANR	5092670	Symbol	resource_contact		5092497						
ANR	5092671	Symbol	NULL		5092497						
ANR	5092672	Symbol	& resource_contact		5092497						
ANR	5092673	Symbol	new_gram_arg		5092497						
ANR	5092674	Symbol	* gram_arg		5092497						
ANR	5092675	Symbol	GLOBUS_SUCCESS		5092497						
ANR	5092676	Symbol	input_line		5092497						
ANR	5092677	Symbol	& print_control		5092497						
ANR	5092678	Symbol	result		5092497						
ANR	5092679	Symbol	output		5092497						
ANR	5092680	Symbol	req_id		5092497						
ANR	5092681	Symbol	globus_gram_client_register_ping		5092497						
ANR	5092682	Symbol	current_cred		5092497						
ANR	5092683	Symbol	callback_gram_ping		5092497						
ANR	5092684	Symbol	gram_arg -> gram_attr		5092497						
ANR	5092685	Symbol	& req_id		5092497						
ANR	5092686	Symbol	gram_arg		5092497						
ANR	5092687	Function	callback_gram_ping	960:0:25378:25847							
ANR	5092688	FunctionDef	"callback_gram_ping (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5092687	0					
ANR	5092689	CompoundStatement		966:0:25590:25847	5092687	0					
ANR	5092690	IdentifierDeclStatement	char * output ;	967:1:25593:25605	5092687	0	True				
ANR	5092691	IdentifierDecl	* output		5092687	0					
ANR	5092692	IdentifierDeclType	char *		5092687	0					
ANR	5092693	Identifier	output		5092687	1					
ANR	5092694	IdentifierDeclStatement	user_arg_t * gram_arg ;	968:1:25608:25629	5092687	1	True				
ANR	5092695	IdentifierDecl	* gram_arg		5092687	0					
ANR	5092696	IdentifierDeclType	user_arg_t *		5092687	0					
ANR	5092697	Identifier	gram_arg		5092687	1					
ANR	5092698	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	970:1:25633:25661	5092687	2	True				
ANR	5092699	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5092687	0		=			
ANR	5092700	Identifier	gram_arg		5092687	0					
ANR	5092701	CastExpression	( user_arg_t * ) arg		5092687	1					
ANR	5092702	CastTarget	user_arg_t *		5092687	0					
ANR	5092703	Identifier	arg		5092687	1					
ANR	5092704	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	972:1:25665:25705	5092687	3	True				
ANR	5092705	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5092687	0		=			
ANR	5092706	Identifier	output		5092687	0					
ANR	5092707	CastExpression	( char * ) globus_libc_malloc ( 500 )		5092687	1					
ANR	5092708	CastTarget	char *		5092687	0					
ANR	5092709	CallExpression	globus_libc_malloc ( 500 )		5092687	1					
ANR	5092710	Callee	globus_libc_malloc		5092687	0					
ANR	5092711	Identifier	globus_libc_malloc		5092687	0					
ANR	5092712	ArgumentList	500		5092687	1					
ANR	5092713	Argument	500		5092687	0					
ANR	5092714	PrimaryExpression	500		5092687	0					
ANR	5092715	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"	974:1:25709:25777	5092687	4	True				
ANR	5092716	CallExpression	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"		5092687	0					
ANR	5092717	Callee	globus_libc_sprintf		5092687	0					
ANR	5092718	Identifier	globus_libc_sprintf		5092687	0					
ANR	5092719	ArgumentList	output		5092687	1					
ANR	5092720	Argument	output		5092687	0					
ANR	5092721	Identifier	output		5092687	0					
ANR	5092722	Argument	"""%s %d"""		5092687	1					
ANR	5092723	PrimaryExpression	"""%s %d"""		5092687	0					
ANR	5092724	Argument	gram_arg -> req_id		5092687	2					
ANR	5092725	PtrMemberAccess	gram_arg -> req_id		5092687	0					
ANR	5092726	Identifier	gram_arg		5092687	0					
ANR	5092727	Identifier	req_id		5092687	1					
ANR	5092728	Argument	operation_fc		5092687	3					
ANR	5092729	Identifier	operation_fc		5092687	0					
ANR	5092730	ExpressionStatement	enqueue_results ( output )	976:1:25781:25804	5092687	5	True				
ANR	5092731	CallExpression	enqueue_results ( output )		5092687	0					
ANR	5092732	Callee	enqueue_results		5092687	0					
ANR	5092733	Identifier	enqueue_results		5092687	0					
ANR	5092734	ArgumentList	output		5092687	1					
ANR	5092735	Argument	output		5092687	0					
ANR	5092736	Identifier	output		5092687	0					
ANR	5092737	ExpressionStatement	delete_gram_arg ( gram_arg )	978:1:25809:25836	5092687	6	True				
ANR	5092738	CallExpression	delete_gram_arg ( gram_arg )		5092687	0					
ANR	5092739	Callee	delete_gram_arg		5092687	0					
ANR	5092740	Identifier	delete_gram_arg		5092687	0					
ANR	5092741	ArgumentList	gram_arg		5092687	1					
ANR	5092742	Argument	gram_arg		5092687	0					
ANR	5092743	Identifier	gram_arg		5092687	0					
ANR	5092744	ReturnStatement	return ;	979:1:25839:25845	5092687	7	True				
ANR	5092745	ReturnType	void		5092687	1					
ANR	5092746	Identifier	callback_gram_ping		5092687	2					
ANR	5092747	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5092687	3					
ANR	5092748	Parameter	void * arg	961:19:25402:25410	5092687	0	True				
ANR	5092749	ParameterType	void *		5092687	0					
ANR	5092750	Identifier	arg		5092687	1					
ANR	5092751	Parameter	globus_gram_protocol_error_t operation_fc	962:7:25420:25460	5092687	1	True				
ANR	5092752	ParameterType	globus_gram_protocol_error_t		5092687	0					
ANR	5092753	Identifier	operation_fc		5092687	1					
ANR	5092754	Parameter	const char * job_contact	963:7:25470:25492	5092687	2	True				
ANR	5092755	ParameterType	const char *		5092687	0					
ANR	5092756	Identifier	job_contact		5092687	1					
ANR	5092757	Parameter	globus_gram_protocol_job_state_t job_state	964:7:25502:25543	5092687	3	True				
ANR	5092758	ParameterType	globus_gram_protocol_job_state_t		5092687	0					
ANR	5092759	Identifier	job_state		5092687	1					
ANR	5092760	Parameter	globus_gram_protocol_error_t job_fc	965:7:25553:25587	5092687	4	True				
ANR	5092761	ParameterType	globus_gram_protocol_error_t		5092687	0					
ANR	5092762	Identifier	job_fc		5092687	1					
ANR	5092763	CFGEntryNode	ENTRY		5092687		True				
ANR	5092764	CFGExitNode	EXIT		5092687		True				
ANR	5092765	Symbol	output		5092687						
ANR	5092766	Symbol	job_fc		5092687						
ANR	5092767	Symbol	gram_arg -> req_id		5092687						
ANR	5092768	Symbol	arg		5092687						
ANR	5092769	Symbol	* gram_arg		5092687						
ANR	5092770	Symbol	globus_libc_malloc		5092687						
ANR	5092771	Symbol	operation_fc		5092687						
ANR	5092772	Symbol	gram_arg		5092687						
ANR	5092773	Symbol	job_contact		5092687						
ANR	5092774	Symbol	job_state		5092687						
ANR	5092775	Function	handle_gram_job_refresh_proxy	982:0:25850:27373							
ANR	5092776	FunctionDef	handle_gram_job_refresh_proxy (void * user_arg)		5092775	0					
ANR	5092777	CompoundStatement		984:0:25901:27373	5092775	0					
ANR	5092778	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	985:1:25904:25942	5092775	0	True				
ANR	5092779	IdentifierDecl	* * input_line = ( char * * ) user_arg		5092775	0					
ANR	5092780	IdentifierDeclType	char * *		5092775	0					
ANR	5092781	Identifier	input_line		5092775	1					
ANR	5092782	AssignmentExpression	* * input_line = ( char * * ) user_arg		5092775	2		=			
ANR	5092783	Identifier	input_line		5092775	0					
ANR	5092784	CastExpression	( char * * ) user_arg		5092775	1					
ANR	5092785	CastTarget	char * *		5092775	0					
ANR	5092786	Identifier	user_arg		5092775	1					
ANR	5092787	IdentifierDeclStatement	int result ;	986:1:25945:25955	5092775	1	True				
ANR	5092788	IdentifierDecl	result		5092775	0					
ANR	5092789	IdentifierDeclType	int		5092775	0					
ANR	5092790	Identifier	result		5092775	1					
ANR	5092791	IdentifierDeclStatement	user_arg_t * gram_arg ;	987:1:25958:25979	5092775	2	True				
ANR	5092792	IdentifierDecl	* gram_arg		5092775	0					
ANR	5092793	IdentifierDeclType	user_arg_t *		5092775	0					
ANR	5092794	Identifier	gram_arg		5092775	1					
ANR	5092795	IdentifierDeclStatement	gss_cred_id_t refreshing_cred = GSS_C_NO_CREDENTIAL ;	988:1:25982:26033	5092775	3	True				
ANR	5092796	IdentifierDecl	refreshing_cred = GSS_C_NO_CREDENTIAL		5092775	0					
ANR	5092797	IdentifierDeclType	gss_cred_id_t		5092775	0					
ANR	5092798	Identifier	refreshing_cred		5092775	1					
ANR	5092799	AssignmentExpression	refreshing_cred = GSS_C_NO_CREDENTIAL		5092775	2		=			
ANR	5092800	Identifier	GSS_C_NO_CREDENTIAL		5092775	0					
ANR	5092801	Identifier	GSS_C_NO_CREDENTIAL		5092775	1					
ANR	5092802	IdentifierDeclStatement	"char * req_id , * job_contact ;"	991:1:26079:26105	5092775	4	True				
ANR	5092803	IdentifierDecl	* req_id		5092775	0					
ANR	5092804	IdentifierDeclType	char *		5092775	0					
ANR	5092805	Identifier	req_id		5092775	1					
ANR	5092806	IdentifierDecl	* job_contact		5092775	1					
ANR	5092807	IdentifierDeclType	char *		5092775	0					
ANR	5092808	Identifier	job_contact		5092775	1					
ANR	5092809	IdentifierDeclStatement	int limited_deleg = 1 ;	992:1:26108:26129	5092775	5	True				
ANR	5092810	IdentifierDecl	limited_deleg = 1		5092775	0					
ANR	5092811	IdentifierDeclType	int		5092775	0					
ANR	5092812	Identifier	limited_deleg		5092775	1					
ANR	5092813	AssignmentExpression	limited_deleg = 1		5092775	2		=			
ANR	5092814	Identifier	limited_deleg		5092775	0					
ANR	5092815	PrimaryExpression	1		5092775	1					
ANR	5092816	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5092775	6					
ANR	5092817	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	995:5:26147:26189	5092775	0	True				
ANR	5092818	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5092775	0					
ANR	5092819	UnaryOperator	!		5092775	0					
ANR	5092820	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5092775	1					
ANR	5092821	Callee	process_string_arg		5092775	0					
ANR	5092822	Identifier	process_string_arg		5092775	0					
ANR	5092823	ArgumentList	input_line [ 1 ]		5092775	1					
ANR	5092824	Argument	input_line [ 1 ]		5092775	0					
ANR	5092825	ArrayIndexing	input_line [ 1 ]		5092775	0					
ANR	5092826	Identifier	input_line		5092775	0					
ANR	5092827	PrimaryExpression	1		5092775	1					
ANR	5092828	Argument	& req_id		5092775	1					
ANR	5092829	UnaryOperationExpression	& req_id		5092775	0					
ANR	5092830	UnaryOperator	&		5092775	0					
ANR	5092831	Identifier	req_id		5092775	1					
ANR	5092832	CompoundStatement		12:51:291:291	5092775	1					
ANR	5092833	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	996:2:26197:26218	5092775	0	True				
ANR	5092834	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092775	0					
ANR	5092835	Callee	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092836	Identifier	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092837	ArgumentList			5092775	1					
ANR	5092838	ReturnStatement	return 0 ;	997:2:26222:26230	5092775	1	True				
ANR	5092839	PrimaryExpression	0		5092775	0					
ANR	5092840	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & job_contact ) )"		5092775	7					
ANR	5092841	Condition	"! process_string_arg ( input_line [ 2 ] , & job_contact )"	1001:5:26257:26306	5092775	0	True				
ANR	5092842	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & job_contact )"		5092775	0					
ANR	5092843	UnaryOperator	!		5092775	0					
ANR	5092844	CallExpression	"process_string_arg ( input_line [ 2 ] , & job_contact )"		5092775	1					
ANR	5092845	Callee	process_string_arg		5092775	0					
ANR	5092846	Identifier	process_string_arg		5092775	0					
ANR	5092847	ArgumentList	input_line [ 2 ]		5092775	1					
ANR	5092848	Argument	input_line [ 2 ]		5092775	0					
ANR	5092849	ArrayIndexing	input_line [ 2 ]		5092775	0					
ANR	5092850	Identifier	input_line		5092775	0					
ANR	5092851	PrimaryExpression	2		5092775	1					
ANR	5092852	Argument	& job_contact		5092775	1					
ANR	5092853	UnaryOperationExpression	& job_contact		5092775	0					
ANR	5092854	UnaryOperator	&		5092775	0					
ANR	5092855	Identifier	job_contact		5092775	1					
ANR	5092856	CompoundStatement		18:58:408:408	5092775	1					
ANR	5092857	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1002:2:26314:26335	5092775	0	True				
ANR	5092858	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092775	0					
ANR	5092859	Callee	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092860	Identifier	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092861	ArgumentList			5092775	1					
ANR	5092862	ReturnStatement	return 0 ;	1003:2:26339:26347	5092775	1	True				
ANR	5092863	PrimaryExpression	0		5092775	0					
ANR	5092864	IfStatement	"if ( input_line [ 3 ] && ! process_int_arg ( input_line [ 3 ] , & limited_deleg ) )"		5092775	8					
ANR	5092865	Condition	"input_line [ 3 ] && ! process_int_arg ( input_line [ 3 ] , & limited_deleg )"	1006:5:26358:26423	5092775	0	True				
ANR	5092866	AndExpression	"input_line [ 3 ] && ! process_int_arg ( input_line [ 3 ] , & limited_deleg )"		5092775	0		&&			
ANR	5092867	ArrayIndexing	input_line [ 3 ]		5092775	0					
ANR	5092868	Identifier	input_line		5092775	0					
ANR	5092869	PrimaryExpression	3		5092775	1					
ANR	5092870	UnaryOperationExpression	"! process_int_arg ( input_line [ 3 ] , & limited_deleg )"		5092775	1					
ANR	5092871	UnaryOperator	!		5092775	0					
ANR	5092872	CallExpression	"process_int_arg ( input_line [ 3 ] , & limited_deleg )"		5092775	1					
ANR	5092873	Callee	process_int_arg		5092775	0					
ANR	5092874	Identifier	process_int_arg		5092775	0					
ANR	5092875	ArgumentList	input_line [ 3 ]		5092775	1					
ANR	5092876	Argument	input_line [ 3 ]		5092775	0					
ANR	5092877	ArrayIndexing	input_line [ 3 ]		5092775	0					
ANR	5092878	Identifier	input_line		5092775	0					
ANR	5092879	PrimaryExpression	3		5092775	1					
ANR	5092880	Argument	& limited_deleg		5092775	1					
ANR	5092881	UnaryOperationExpression	& limited_deleg		5092775	0					
ANR	5092882	UnaryOperator	&		5092775	0					
ANR	5092883	Identifier	limited_deleg		5092775	1					
ANR	5092884	CompoundStatement		23:74:525:525	5092775	1					
ANR	5092885	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1007:2:26431:26452	5092775	0	True				
ANR	5092886	CallExpression	HANDLE_SYNTAX_ERROR ( )		5092775	0					
ANR	5092887	Callee	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092888	Identifier	HANDLE_SYNTAX_ERROR		5092775	0					
ANR	5092889	ArgumentList			5092775	1					
ANR	5092890	ReturnStatement	return 0 ;	1008:2:26456:26464	5092775	1	True				
ANR	5092891	PrimaryExpression	0		5092775	0					
ANR	5092892	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	1011:1:26471:26518	5092775	9	True				
ANR	5092893	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5092775	0		=			
ANR	5092894	Identifier	gram_arg		5092775	0					
ANR	5092895	CallExpression	"new_gram_arg ( req_id , current_cred )"		5092775	1					
ANR	5092896	Callee	new_gram_arg		5092775	0					
ANR	5092897	Identifier	new_gram_arg		5092775	0					
ANR	5092898	ArgumentList	req_id		5092775	1					
ANR	5092899	Argument	req_id		5092775	0					
ANR	5092900	Identifier	req_id		5092775	0					
ANR	5092901	Argument	current_cred		5092775	1					
ANR	5092902	Identifier	current_cred		5092775	0					
ANR	5092903	IfStatement	if ( current_cred )		5092775	10					
ANR	5092904	Condition	current_cred	1012:6:26526:26537	5092775	0	True				
ANR	5092905	Identifier	current_cred		5092775	0					
ANR	5092906	CompoundStatement		29:21:639:639	5092775	1					
ANR	5092907	ExpressionStatement	refreshing_cred = current_cred -> cred	1013:2:26545:26581	5092775	0	True				
ANR	5092908	AssignmentExpression	refreshing_cred = current_cred -> cred		5092775	0		=			
ANR	5092909	Identifier	refreshing_cred		5092775	0					
ANR	5092910	PtrMemberAccess	current_cred -> cred		5092775	1					
ANR	5092911	Identifier	current_cred		5092775	0					
ANR	5092912	Identifier	cred		5092775	1					
ANR	5092913	IfStatement	if ( limited_deleg )		5092775	11					
ANR	5092914	Condition	limited_deleg	1016:6:26593:26605	5092775	0	True				
ANR	5092915	Identifier	limited_deleg		5092775	0					
ANR	5092916	CompoundStatement		33:22:707:707	5092775	1					
ANR	5092917	ExpressionStatement	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"	1017:2:26613:26734	5092775	0	True				
ANR	5092918	CallExpression	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"		5092775	0					
ANR	5092919	Callee	globus_gram_client_attr_set_delegation_mode		5092775	0					
ANR	5092920	Identifier	globus_gram_client_attr_set_delegation_mode		5092775	0					
ANR	5092921	ArgumentList	gram_arg -> gram_attr		5092775	1					
ANR	5092922	Argument	gram_arg -> gram_attr		5092775	0					
ANR	5092923	PtrMemberAccess	gram_arg -> gram_attr		5092775	0					
ANR	5092924	Identifier	gram_arg		5092775	0					
ANR	5092925	Identifier	gram_attr		5092775	1					
ANR	5092926	Argument	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5092775	1					
ANR	5092927	Identifier	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5092775	0					
ANR	5092928	ElseStatement	else		5092775	0					
ANR	5092929	CompoundStatement		36:8:842:842	5092775	0					
ANR	5092930	ExpressionStatement	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY )"	1020:2:26748:26866	5092775	0	True				
ANR	5092931	CallExpression	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY )"		5092775	0					
ANR	5092932	Callee	globus_gram_client_attr_set_delegation_mode		5092775	0					
ANR	5092933	Identifier	globus_gram_client_attr_set_delegation_mode		5092775	0					
ANR	5092934	ArgumentList	gram_arg -> gram_attr		5092775	1					
ANR	5092935	Argument	gram_arg -> gram_attr		5092775	0					
ANR	5092936	PtrMemberAccess	gram_arg -> gram_attr		5092775	0					
ANR	5092937	Identifier	gram_arg		5092775	0					
ANR	5092938	Identifier	gram_attr		5092775	1					
ANR	5092939	Argument	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5092775	1					
ANR	5092940	Identifier	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5092775	0					
ANR	5092941	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1024:1:26873:26893	5092775	12	True				
ANR	5092942	CallExpression	"gahp_printf ( ""S\\n"" )"		5092775	0					
ANR	5092943	Callee	gahp_printf		5092775	0					
ANR	5092944	Identifier	gahp_printf		5092775	0					
ANR	5092945	ArgumentList	"""S\\n"""		5092775	1					
ANR	5092946	Argument	"""S\\n"""		5092775	0					
ANR	5092947	PrimaryExpression	"""S\\n"""		5092775	0					
ANR	5092948	ExpressionStatement	gahp_sem_up ( & print_control )	1025:1:26896:26925	5092775	13	True				
ANR	5092949	CallExpression	gahp_sem_up ( & print_control )		5092775	0					
ANR	5092950	Callee	gahp_sem_up		5092775	0					
ANR	5092951	Identifier	gahp_sem_up		5092775	0					
ANR	5092952	ArgumentList	& print_control		5092775	1					
ANR	5092953	Argument	& print_control		5092775	0					
ANR	5092954	UnaryOperationExpression	& print_control		5092775	0					
ANR	5092955	UnaryOperator	&		5092775	0					
ANR	5092956	Identifier	print_control		5092775	1					
ANR	5092957	ExpressionStatement	"result = globus_gram_client_register_job_refresh_credentials ( job_contact , refreshing_cred , gram_arg -> gram_attr , callback_gram_job_refresh_proxy , ( void * ) gram_arg )"	1026:1:26928:27127	5092775	14	True				
ANR	5092958	AssignmentExpression	"result = globus_gram_client_register_job_refresh_credentials ( job_contact , refreshing_cred , gram_arg -> gram_attr , callback_gram_job_refresh_proxy , ( void * ) gram_arg )"		5092775	0		=			
ANR	5092959	Identifier	result		5092775	0					
ANR	5092960	CallExpression	"globus_gram_client_register_job_refresh_credentials ( job_contact , refreshing_cred , gram_arg -> gram_attr , callback_gram_job_refresh_proxy , ( void * ) gram_arg )"		5092775	1					
ANR	5092961	Callee	globus_gram_client_register_job_refresh_credentials		5092775	0					
ANR	5092962	Identifier	globus_gram_client_register_job_refresh_credentials		5092775	0					
ANR	5092963	ArgumentList	job_contact		5092775	1					
ANR	5092964	Argument	job_contact		5092775	0					
ANR	5092965	Identifier	job_contact		5092775	0					
ANR	5092966	Argument	refreshing_cred		5092775	1					
ANR	5092967	Identifier	refreshing_cred		5092775	0					
ANR	5092968	Argument	gram_arg -> gram_attr		5092775	2					
ANR	5092969	PtrMemberAccess	gram_arg -> gram_attr		5092775	0					
ANR	5092970	Identifier	gram_arg		5092775	0					
ANR	5092971	Identifier	gram_attr		5092775	1					
ANR	5092972	Argument	callback_gram_job_refresh_proxy		5092775	3					
ANR	5092973	Identifier	callback_gram_job_refresh_proxy		5092775	0					
ANR	5092974	Argument	( void * ) gram_arg		5092775	4					
ANR	5092975	CastExpression	( void * ) gram_arg		5092775	0					
ANR	5092976	CastTarget	void *		5092775	0					
ANR	5092977	Identifier	gram_arg		5092775	1					
ANR	5092978	IfStatement	if ( result != GLOBUS_SUCCESS )		5092775	15					
ANR	5092979	Condition	result != GLOBUS_SUCCESS	1032:5:27135:27158	5092775	0	True				
ANR	5092980	EqualityExpression	result != GLOBUS_SUCCESS		5092775	0		!=			
ANR	5092981	Identifier	result		5092775	0					
ANR	5092982	Identifier	GLOBUS_SUCCESS		5092775	1					
ANR	5092983	CompoundStatement		49:31:1259:1259	5092775	1					
ANR	5092984	ExpressionStatement	"callback_gram_job_refresh_proxy ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"	1033:2:27165:27328	5092775	0	True				
ANR	5092985	CallExpression	"callback_gram_job_refresh_proxy ( ( void * ) gram_arg , ( globus_gram_protocol_error_t ) result , NULL , ( globus_gram_protocol_job_state_t ) 0 , ( globus_gram_protocol_error_t ) 0 )"		5092775	0					
ANR	5092986	Callee	callback_gram_job_refresh_proxy		5092775	0					
ANR	5092987	Identifier	callback_gram_job_refresh_proxy		5092775	0					
ANR	5092988	ArgumentList	( void * ) gram_arg		5092775	1					
ANR	5092989	Argument	( void * ) gram_arg		5092775	0					
ANR	5092990	CastExpression	( void * ) gram_arg		5092775	0					
ANR	5092991	CastTarget	void *		5092775	0					
ANR	5092992	Identifier	gram_arg		5092775	1					
ANR	5092993	Argument	( globus_gram_protocol_error_t ) result		5092775	1					
ANR	5092994	CastExpression	( globus_gram_protocol_error_t ) result		5092775	0					
ANR	5092995	CastTarget	globus_gram_protocol_error_t		5092775	0					
ANR	5092996	Identifier	result		5092775	1					
ANR	5092997	Argument	NULL		5092775	2					
ANR	5092998	Identifier	NULL		5092775	0					
ANR	5092999	Argument	( globus_gram_protocol_job_state_t ) 0		5092775	3					
ANR	5093000	CastExpression	( globus_gram_protocol_job_state_t ) 0		5092775	0					
ANR	5093001	CastTarget	globus_gram_protocol_job_state_t		5092775	0					
ANR	5093002	PrimaryExpression	0		5092775	1					
ANR	5093003	Argument	( globus_gram_protocol_error_t ) 0		5092775	4					
ANR	5093004	CastExpression	( globus_gram_protocol_error_t ) 0		5092775	0					
ANR	5093005	CastTarget	globus_gram_protocol_error_t		5092775	0					
ANR	5093006	PrimaryExpression	0		5092775	1					
ANR	5093007	ExpressionStatement	all_args_free ( user_arg )	1036:1:27335:27360	5092775	16	True				
ANR	5093008	CallExpression	all_args_free ( user_arg )		5092775	0					
ANR	5093009	Callee	all_args_free		5092775	0					
ANR	5093010	Identifier	all_args_free		5092775	0					
ANR	5093011	ArgumentList	user_arg		5092775	1					
ANR	5093012	Argument	user_arg		5092775	0					
ANR	5093013	Identifier	user_arg		5092775	0					
ANR	5093014	ReturnStatement	return 0 ;	1037:1:27363:27371	5092775	17	True				
ANR	5093015	PrimaryExpression	0		5092775	0					
ANR	5093016	ReturnType	int		5092775	1					
ANR	5093017	Identifier	handle_gram_job_refresh_proxy		5092775	2					
ANR	5093018	ParameterList	void * user_arg		5092775	3					
ANR	5093019	Parameter	void * user_arg	983:30:25884:25898	5092775	0	True				
ANR	5093020	ParameterType	void *		5092775	0					
ANR	5093021	Identifier	user_arg		5092775	1					
ANR	5093022	CFGEntryNode	ENTRY		5092775		True				
ANR	5093023	CFGExitNode	EXIT		5092775		True				
ANR	5093024	Symbol	user_arg		5092775						
ANR	5093025	Symbol	* current_cred		5092775						
ANR	5093026	Symbol	GSS_C_NO_CREDENTIAL		5092775						
ANR	5093027	Symbol	new_gram_arg		5092775						
ANR	5093028	Symbol	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5092775						
ANR	5093029	Symbol	* gram_arg		5092775						
ANR	5093030	Symbol	process_int_arg		5092775						
ANR	5093031	Symbol	globus_gram_client_register_job_refresh_credentials		5092775						
ANR	5093032	Symbol	& limited_deleg		5092775						
ANR	5093033	Symbol	& job_contact		5092775						
ANR	5093034	Symbol	current_cred -> cred		5092775						
ANR	5093035	Symbol	& print_control		5092775						
ANR	5093036	Symbol	result		5092775						
ANR	5093037	Symbol	req_id		5092775						
ANR	5093038	Symbol	current_cred		5092775						
ANR	5093039	Symbol	& req_id		5092775						
ANR	5093040	Symbol	job_contact		5092775						
ANR	5093041	Symbol	* input_line		5092775						
ANR	5093042	Symbol	process_string_arg		5092775						
ANR	5093043	Symbol	NULL		5092775						
ANR	5093044	Symbol	refreshing_cred		5092775						
ANR	5093045	Symbol	GLOBUS_SUCCESS		5092775						
ANR	5093046	Symbol	input_line		5092775						
ANR	5093047	Symbol	limited_deleg		5092775						
ANR	5093048	Symbol	gram_arg -> gram_attr		5092775						
ANR	5093049	Symbol	callback_gram_job_refresh_proxy		5092775						
ANR	5093050	Symbol	gram_arg		5092775						
ANR	5093051	Symbol	GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY		5092775						
ANR	5093052	Function	callback_gram_job_refresh_proxy	1040:0:27376:27862							
ANR	5093053	FunctionDef	"callback_gram_job_refresh_proxy (void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc)"		5093052	0					
ANR	5093054	CompoundStatement		1046:0:27605:27862	5093052	0					
ANR	5093055	IdentifierDeclStatement	char * output ;	1047:1:27608:27620	5093052	0	True				
ANR	5093056	IdentifierDecl	* output		5093052	0					
ANR	5093057	IdentifierDeclType	char *		5093052	0					
ANR	5093058	Identifier	output		5093052	1					
ANR	5093059	IdentifierDeclStatement	user_arg_t * gram_arg ;	1048:1:27623:27644	5093052	1	True				
ANR	5093060	IdentifierDecl	* gram_arg		5093052	0					
ANR	5093061	IdentifierDeclType	user_arg_t *		5093052	0					
ANR	5093062	Identifier	gram_arg		5093052	1					
ANR	5093063	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	1050:1:27648:27676	5093052	2	True				
ANR	5093064	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5093052	0		=			
ANR	5093065	Identifier	gram_arg		5093052	0					
ANR	5093066	CastExpression	( user_arg_t * ) arg		5093052	1					
ANR	5093067	CastTarget	user_arg_t *		5093052	0					
ANR	5093068	Identifier	arg		5093052	1					
ANR	5093069	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	1052:1:27680:27720	5093052	3	True				
ANR	5093070	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5093052	0		=			
ANR	5093071	Identifier	output		5093052	0					
ANR	5093072	CastExpression	( char * ) globus_libc_malloc ( 500 )		5093052	1					
ANR	5093073	CastTarget	char *		5093052	0					
ANR	5093074	CallExpression	globus_libc_malloc ( 500 )		5093052	1					
ANR	5093075	Callee	globus_libc_malloc		5093052	0					
ANR	5093076	Identifier	globus_libc_malloc		5093052	0					
ANR	5093077	ArgumentList	500		5093052	1					
ANR	5093078	Argument	500		5093052	0					
ANR	5093079	PrimaryExpression	500		5093052	0					
ANR	5093080	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"	1054:1:27724:27792	5093052	4	True				
ANR	5093081	CallExpression	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , operation_fc )"		5093052	0					
ANR	5093082	Callee	globus_libc_sprintf		5093052	0					
ANR	5093083	Identifier	globus_libc_sprintf		5093052	0					
ANR	5093084	ArgumentList	output		5093052	1					
ANR	5093085	Argument	output		5093052	0					
ANR	5093086	Identifier	output		5093052	0					
ANR	5093087	Argument	"""%s %d"""		5093052	1					
ANR	5093088	PrimaryExpression	"""%s %d"""		5093052	0					
ANR	5093089	Argument	gram_arg -> req_id		5093052	2					
ANR	5093090	PtrMemberAccess	gram_arg -> req_id		5093052	0					
ANR	5093091	Identifier	gram_arg		5093052	0					
ANR	5093092	Identifier	req_id		5093052	1					
ANR	5093093	Argument	operation_fc		5093052	3					
ANR	5093094	Identifier	operation_fc		5093052	0					
ANR	5093095	ExpressionStatement	enqueue_results ( output )	1056:1:27796:27819	5093052	5	True				
ANR	5093096	CallExpression	enqueue_results ( output )		5093052	0					
ANR	5093097	Callee	enqueue_results		5093052	0					
ANR	5093098	Identifier	enqueue_results		5093052	0					
ANR	5093099	ArgumentList	output		5093052	1					
ANR	5093100	Argument	output		5093052	0					
ANR	5093101	Identifier	output		5093052	0					
ANR	5093102	ExpressionStatement	delete_gram_arg ( gram_arg )	1058:1:27824:27851	5093052	6	True				
ANR	5093103	CallExpression	delete_gram_arg ( gram_arg )		5093052	0					
ANR	5093104	Callee	delete_gram_arg		5093052	0					
ANR	5093105	Identifier	delete_gram_arg		5093052	0					
ANR	5093106	ArgumentList	gram_arg		5093052	1					
ANR	5093107	Argument	gram_arg		5093052	0					
ANR	5093108	Identifier	gram_arg		5093052	0					
ANR	5093109	ReturnStatement	return ;	1059:1:27854:27860	5093052	7	True				
ANR	5093110	ReturnType	void		5093052	1					
ANR	5093111	Identifier	callback_gram_job_refresh_proxy		5093052	2					
ANR	5093112	ParameterList	"void * arg , globus_gram_protocol_error_t operation_fc , const char * job_contact , globus_gram_protocol_job_state_t job_state , globus_gram_protocol_error_t job_fc"		5093052	3					
ANR	5093113	Parameter	void * arg	1041:32:27413:27421	5093052	0	True				
ANR	5093114	ParameterType	void *		5093052	0					
ANR	5093115	Identifier	arg		5093052	1					
ANR	5093116	Parameter	globus_gram_protocol_error_t operation_fc	1042:8:27432:27472	5093052	1	True				
ANR	5093117	ParameterType	globus_gram_protocol_error_t		5093052	0					
ANR	5093118	Identifier	operation_fc		5093052	1					
ANR	5093119	Parameter	const char * job_contact	1043:8:27483:27505	5093052	2	True				
ANR	5093120	ParameterType	const char *		5093052	0					
ANR	5093121	Identifier	job_contact		5093052	1					
ANR	5093122	Parameter	globus_gram_protocol_job_state_t job_state	1044:8:27516:27557	5093052	3	True				
ANR	5093123	ParameterType	globus_gram_protocol_job_state_t		5093052	0					
ANR	5093124	Identifier	job_state		5093052	1					
ANR	5093125	Parameter	globus_gram_protocol_error_t job_fc	1045:8:27568:27602	5093052	4	True				
ANR	5093126	ParameterType	globus_gram_protocol_error_t		5093052	0					
ANR	5093127	Identifier	job_fc		5093052	1					
ANR	5093128	CFGEntryNode	ENTRY		5093052		True				
ANR	5093129	CFGExitNode	EXIT		5093052		True				
ANR	5093130	Symbol	output		5093052						
ANR	5093131	Symbol	job_fc		5093052						
ANR	5093132	Symbol	gram_arg -> req_id		5093052						
ANR	5093133	Symbol	arg		5093052						
ANR	5093134	Symbol	* gram_arg		5093052						
ANR	5093135	Symbol	globus_libc_malloc		5093052						
ANR	5093136	Symbol	operation_fc		5093052						
ANR	5093137	Symbol	gram_arg		5093052						
ANR	5093138	Symbol	job_contact		5093052						
ANR	5093139	Symbol	job_state		5093052						
ANR	5093140	Function	handle_gram_get_jobmanager_version	1062:0:27865:28950							
ANR	5093141	FunctionDef	handle_gram_get_jobmanager_version (void * user_arg)		5093140	0					
ANR	5093142	CompoundStatement		1064:0:27921:28950	5093140	0					
ANR	5093143	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1065:1:27924:27962	5093140	0	True				
ANR	5093144	IdentifierDecl	* * input_line = ( char * * ) user_arg		5093140	0					
ANR	5093145	IdentifierDeclType	char * *		5093140	0					
ANR	5093146	Identifier	input_line		5093140	1					
ANR	5093147	AssignmentExpression	* * input_line = ( char * * ) user_arg		5093140	2		=			
ANR	5093148	Identifier	input_line		5093140	0					
ANR	5093149	CastExpression	( char * * ) user_arg		5093140	1					
ANR	5093150	CastTarget	char * *		5093140	0					
ANR	5093151	Identifier	user_arg		5093140	1					
ANR	5093152	IdentifierDeclStatement	int result ;	1066:1:27965:27975	5093140	1	True				
ANR	5093153	IdentifierDecl	result		5093140	0					
ANR	5093154	IdentifierDeclType	int		5093140	0					
ANR	5093155	Identifier	result		5093140	1					
ANR	5093156	IdentifierDeclStatement	"char * req_id , * resource_contact ;"	1067:1:27978:28009	5093140	2	True				
ANR	5093157	IdentifierDecl	* req_id		5093140	0					
ANR	5093158	IdentifierDeclType	char *		5093140	0					
ANR	5093159	Identifier	req_id		5093140	1					
ANR	5093160	IdentifierDecl	* resource_contact		5093140	1					
ANR	5093161	IdentifierDeclType	char *		5093140	0					
ANR	5093162	Identifier	resource_contact		5093140	1					
ANR	5093163	IdentifierDeclStatement	char * esc_str ;	1068:1:28012:28025	5093140	3	True				
ANR	5093164	IdentifierDecl	* esc_str		5093140	0					
ANR	5093165	IdentifierDeclType	char *		5093140	0					
ANR	5093166	Identifier	esc_str		5093140	1					
ANR	5093167	IdentifierDeclStatement	user_arg_t * gram_arg ;	1069:1:28028:28048	5093140	4	True				
ANR	5093168	IdentifierDecl	* gram_arg		5093140	0					
ANR	5093169	IdentifierDeclType	user_arg_t *		5093140	0					
ANR	5093170	Identifier	gram_arg		5093140	1					
ANR	5093171	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5093140	5					
ANR	5093172	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	1071:5:28056:28098	5093140	0	True				
ANR	5093173	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5093140	0					
ANR	5093174	UnaryOperator	!		5093140	0					
ANR	5093175	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5093140	1					
ANR	5093176	Callee	process_string_arg		5093140	0					
ANR	5093177	Identifier	process_string_arg		5093140	0					
ANR	5093178	ArgumentList	input_line [ 1 ]		5093140	1					
ANR	5093179	Argument	input_line [ 1 ]		5093140	0					
ANR	5093180	ArrayIndexing	input_line [ 1 ]		5093140	0					
ANR	5093181	Identifier	input_line		5093140	0					
ANR	5093182	PrimaryExpression	1		5093140	1					
ANR	5093183	Argument	& req_id		5093140	1					
ANR	5093184	UnaryOperationExpression	& req_id		5093140	0					
ANR	5093185	UnaryOperator	&		5093140	0					
ANR	5093186	Identifier	req_id		5093140	1					
ANR	5093187	CompoundStatement		8:51:180:180	5093140	1					
ANR	5093188	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1072:2:28106:28127	5093140	0	True				
ANR	5093189	CallExpression	HANDLE_SYNTAX_ERROR ( )		5093140	0					
ANR	5093190	Callee	HANDLE_SYNTAX_ERROR		5093140	0					
ANR	5093191	Identifier	HANDLE_SYNTAX_ERROR		5093140	0					
ANR	5093192	ArgumentList			5093140	1					
ANR	5093193	ReturnStatement	return 0 ;	1073:2:28131:28139	5093140	1	True				
ANR	5093194	PrimaryExpression	0		5093140	0					
ANR	5093195	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & resource_contact ) )"		5093140	6					
ANR	5093196	Condition	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"	1076:5:28150:28203	5093140	0	True				
ANR	5093197	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & resource_contact )"		5093140	0					
ANR	5093198	UnaryOperator	!		5093140	0					
ANR	5093199	CallExpression	"process_string_arg ( input_line [ 2 ] , & resource_contact )"		5093140	1					
ANR	5093200	Callee	process_string_arg		5093140	0					
ANR	5093201	Identifier	process_string_arg		5093140	0					
ANR	5093202	ArgumentList	input_line [ 2 ]		5093140	1					
ANR	5093203	Argument	input_line [ 2 ]		5093140	0					
ANR	5093204	ArrayIndexing	input_line [ 2 ]		5093140	0					
ANR	5093205	Identifier	input_line		5093140	0					
ANR	5093206	PrimaryExpression	2		5093140	1					
ANR	5093207	Argument	& resource_contact		5093140	1					
ANR	5093208	UnaryOperationExpression	& resource_contact		5093140	0					
ANR	5093209	UnaryOperator	&		5093140	0					
ANR	5093210	Identifier	resource_contact		5093140	1					
ANR	5093211	CompoundStatement		13:61:284:284	5093140	1					
ANR	5093212	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1077:2:28210:28231	5093140	0	True				
ANR	5093213	CallExpression	HANDLE_SYNTAX_ERROR ( )		5093140	0					
ANR	5093214	Callee	HANDLE_SYNTAX_ERROR		5093140	0					
ANR	5093215	Identifier	HANDLE_SYNTAX_ERROR		5093140	0					
ANR	5093216	ArgumentList			5093140	1					
ANR	5093217	ReturnStatement	return 0 ;	1078:2:28235:28243	5093140	1	True				
ANR	5093218	PrimaryExpression	0		5093140	0					
ANR	5093219	ExpressionStatement	"gram_arg = new_gram_arg ( req_id , current_cred )"	1081:1:28250:28297	5093140	7	True				
ANR	5093220	AssignmentExpression	"gram_arg = new_gram_arg ( req_id , current_cred )"		5093140	0		=			
ANR	5093221	Identifier	gram_arg		5093140	0					
ANR	5093222	CallExpression	"new_gram_arg ( req_id , current_cred )"		5093140	1					
ANR	5093223	Callee	new_gram_arg		5093140	0					
ANR	5093224	Identifier	new_gram_arg		5093140	0					
ANR	5093225	ArgumentList	req_id		5093140	1					
ANR	5093226	Argument	req_id		5093140	0					
ANR	5093227	Identifier	req_id		5093140	0					
ANR	5093228	Argument	current_cred		5093140	1					
ANR	5093229	Identifier	current_cred		5093140	0					
ANR	5093230	ExpressionStatement	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"	1083:1:28301:28428	5093140	8	True				
ANR	5093231	CallExpression	"globus_gram_client_attr_set_delegation_mode ( gram_arg -> gram_attr , GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY )"		5093140	0					
ANR	5093232	Callee	globus_gram_client_attr_set_delegation_mode		5093140	0					
ANR	5093233	Identifier	globus_gram_client_attr_set_delegation_mode		5093140	0					
ANR	5093234	ArgumentList	gram_arg -> gram_attr		5093140	1					
ANR	5093235	Argument	gram_arg -> gram_attr		5093140	0					
ANR	5093236	PtrMemberAccess	gram_arg -> gram_attr		5093140	0					
ANR	5093237	Identifier	gram_arg		5093140	0					
ANR	5093238	Identifier	gram_attr		5093140	1					
ANR	5093239	Argument	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5093140	1					
ANR	5093240	Identifier	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5093140	0					
ANR	5093241	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1086:1:28432:28450	5093140	9	True				
ANR	5093242	CallExpression	"gahp_printf ( ""S\\n"" )"		5093140	0					
ANR	5093243	Callee	gahp_printf		5093140	0					
ANR	5093244	Identifier	gahp_printf		5093140	0					
ANR	5093245	ArgumentList	"""S\\n"""		5093140	1					
ANR	5093246	Argument	"""S\\n"""		5093140	0					
ANR	5093247	PrimaryExpression	"""S\\n"""		5093140	0					
ANR	5093248	ExpressionStatement	gahp_sem_up ( & print_control )	1087:1:28453:28480	5093140	10	True				
ANR	5093249	CallExpression	gahp_sem_up ( & print_control )		5093140	0					
ANR	5093250	Callee	gahp_sem_up		5093140	0					
ANR	5093251	Identifier	gahp_sem_up		5093140	0					
ANR	5093252	ArgumentList	& print_control		5093140	1					
ANR	5093253	Argument	& print_control		5093140	0					
ANR	5093254	UnaryOperationExpression	& print_control		5093140	0					
ANR	5093255	UnaryOperator	&		5093140	0					
ANR	5093256	Identifier	print_control		5093140	1					
ANR	5093257	ExpressionStatement	"result = globus_gram_client_register_get_jobmanager_version ( resource_contact , gram_arg -> gram_attr , callback_gram_get_jobmanager_version , ( void * ) gram_arg )"	1089:1:28484:28691	5093140	11	True				
ANR	5093258	AssignmentExpression	"result = globus_gram_client_register_get_jobmanager_version ( resource_contact , gram_arg -> gram_attr , callback_gram_get_jobmanager_version , ( void * ) gram_arg )"		5093140	0		=			
ANR	5093259	Identifier	result		5093140	0					
ANR	5093260	CallExpression	"globus_gram_client_register_get_jobmanager_version ( resource_contact , gram_arg -> gram_attr , callback_gram_get_jobmanager_version , ( void * ) gram_arg )"		5093140	1					
ANR	5093261	Callee	globus_gram_client_register_get_jobmanager_version		5093140	0					
ANR	5093262	Identifier	globus_gram_client_register_get_jobmanager_version		5093140	0					
ANR	5093263	ArgumentList	resource_contact		5093140	1					
ANR	5093264	Argument	resource_contact		5093140	0					
ANR	5093265	Identifier	resource_contact		5093140	0					
ANR	5093266	Argument	gram_arg -> gram_attr		5093140	1					
ANR	5093267	PtrMemberAccess	gram_arg -> gram_attr		5093140	0					
ANR	5093268	Identifier	gram_arg		5093140	0					
ANR	5093269	Identifier	gram_attr		5093140	1					
ANR	5093270	Argument	callback_gram_get_jobmanager_version		5093140	2					
ANR	5093271	Identifier	callback_gram_get_jobmanager_version		5093140	0					
ANR	5093272	Argument	( void * ) gram_arg		5093140	3					
ANR	5093273	CastExpression	( void * ) gram_arg		5093140	0					
ANR	5093274	CastTarget	void *		5093140	0					
ANR	5093275	Identifier	gram_arg		5093140	1					
ANR	5093276	IfStatement	if ( result != GLOBUS_SUCCESS )		5093140	12					
ANR	5093277	Condition	result != GLOBUS_SUCCESS	1094:5:28699:28722	5093140	0	True				
ANR	5093278	EqualityExpression	result != GLOBUS_SUCCESS		5093140	0		!=			
ANR	5093279	Identifier	result		5093140	0					
ANR	5093280	Identifier	GLOBUS_SUCCESS		5093140	1					
ANR	5093281	CompoundStatement		32:2:807:848	5093140	1					
ANR	5093282	IdentifierDeclStatement	globus_gram_client_job_info_t client_info ;	1095:2:28729:28770	5093140	0	True				
ANR	5093283	IdentifierDecl	client_info		5093140	0					
ANR	5093284	IdentifierDeclType	globus_gram_client_job_info_t		5093140	0					
ANR	5093285	Identifier	client_info		5093140	1					
ANR	5093286	ExpressionStatement	client_info . protocol_error_code = result	1096:2:28774:28814	5093140	1	True				
ANR	5093287	AssignmentExpression	client_info . protocol_error_code = result		5093140	0		=			
ANR	5093288	MemberAccess	client_info . protocol_error_code		5093140	0					
ANR	5093289	Identifier	client_info		5093140	0					
ANR	5093290	Identifier	protocol_error_code		5093140	1					
ANR	5093291	Identifier	result		5093140	1					
ANR	5093292	ExpressionStatement	"callback_gram_get_jobmanager_version ( ( void * ) gram_arg , NULL , & client_info )"	1097:2:28818:28907	5093140	2	True				
ANR	5093293	CallExpression	"callback_gram_get_jobmanager_version ( ( void * ) gram_arg , NULL , & client_info )"		5093140	0					
ANR	5093294	Callee	callback_gram_get_jobmanager_version		5093140	0					
ANR	5093295	Identifier	callback_gram_get_jobmanager_version		5093140	0					
ANR	5093296	ArgumentList	( void * ) gram_arg		5093140	1					
ANR	5093297	Argument	( void * ) gram_arg		5093140	0					
ANR	5093298	CastExpression	( void * ) gram_arg		5093140	0					
ANR	5093299	CastTarget	void *		5093140	0					
ANR	5093300	Identifier	gram_arg		5093140	1					
ANR	5093301	Argument	NULL		5093140	1					
ANR	5093302	Identifier	NULL		5093140	0					
ANR	5093303	Argument	& client_info		5093140	2					
ANR	5093304	UnaryOperationExpression	& client_info		5093140	0					
ANR	5093305	UnaryOperator	&		5093140	0					
ANR	5093306	Identifier	client_info		5093140	1					
ANR	5093307	ExpressionStatement	all_args_free ( user_arg )	1101:1:28914:28937	5093140	13	True				
ANR	5093308	CallExpression	all_args_free ( user_arg )		5093140	0					
ANR	5093309	Callee	all_args_free		5093140	0					
ANR	5093310	Identifier	all_args_free		5093140	0					
ANR	5093311	ArgumentList	user_arg		5093140	1					
ANR	5093312	Argument	user_arg		5093140	0					
ANR	5093313	Identifier	user_arg		5093140	0					
ANR	5093314	ReturnStatement	return 0 ;	1102:1:28940:28948	5093140	14	True				
ANR	5093315	PrimaryExpression	0		5093140	0					
ANR	5093316	ReturnType	int		5093140	1					
ANR	5093317	Identifier	handle_gram_get_jobmanager_version		5093140	2					
ANR	5093318	ParameterList	void * user_arg		5093140	3					
ANR	5093319	Parameter	void * user_arg	1063:35:27904:27918	5093140	0	True				
ANR	5093320	ParameterType	void *		5093140	0					
ANR	5093321	Identifier	user_arg		5093140	1					
ANR	5093322	CFGEntryNode	ENTRY		5093140		True				
ANR	5093323	CFGExitNode	EXIT		5093140		True				
ANR	5093324	Symbol	user_arg		5093140						
ANR	5093325	Symbol	& client_info		5093140						
ANR	5093326	Symbol	* input_line		5093140						
ANR	5093327	Symbol	process_string_arg		5093140						
ANR	5093328	Symbol	client_info		5093140						
ANR	5093329	Symbol	resource_contact		5093140						
ANR	5093330	Symbol	NULL		5093140						
ANR	5093331	Symbol	& resource_contact		5093140						
ANR	5093332	Symbol	client_info . protocol_error_code		5093140						
ANR	5093333	Symbol	new_gram_arg		5093140						
ANR	5093334	Symbol	GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY		5093140						
ANR	5093335	Symbol	* gram_arg		5093140						
ANR	5093336	Symbol	GLOBUS_SUCCESS		5093140						
ANR	5093337	Symbol	input_line		5093140						
ANR	5093338	Symbol	globus_gram_client_register_get_jobmanager_version		5093140						
ANR	5093339	Symbol	& print_control		5093140						
ANR	5093340	Symbol	result		5093140						
ANR	5093341	Symbol	req_id		5093140						
ANR	5093342	Symbol	current_cred		5093140						
ANR	5093343	Symbol	gram_arg -> gram_attr		5093140						
ANR	5093344	Symbol	callback_gram_get_jobmanager_version		5093140						
ANR	5093345	Symbol	esc_str		5093140						
ANR	5093346	Symbol	& req_id		5093140						
ANR	5093347	Symbol	gram_arg		5093140						
ANR	5093348	Function	callback_gram_get_jobmanager_version	1105:0:28953:29885							
ANR	5093349	FunctionDef	"callback_gram_get_jobmanager_version (void * arg , const char * job_contact , globus_gram_client_job_info_t * job_info)"		5093348	0					
ANR	5093350	CompoundStatement		1109:0:29092:29885	5093348	0					
ANR	5093351	IdentifierDeclStatement	char * esc_str ;	1110:1:29095:29108	5093348	0	True				
ANR	5093352	IdentifierDecl	* esc_str		5093348	0					
ANR	5093353	IdentifierDeclType	char *		5093348	0					
ANR	5093354	Identifier	esc_str		5093348	1					
ANR	5093355	IdentifierDeclStatement	char * output ;	1111:1:29111:29123	5093348	1	True				
ANR	5093356	IdentifierDecl	* output		5093348	0					
ANR	5093357	IdentifierDeclType	char *		5093348	0					
ANR	5093358	Identifier	output		5093348	1					
ANR	5093359	IdentifierDeclStatement	user_arg_t * gram_arg ;	1112:1:29126:29147	5093348	2	True				
ANR	5093360	IdentifierDecl	* gram_arg		5093348	0					
ANR	5093361	IdentifierDeclType	user_arg_t *		5093348	0					
ANR	5093362	Identifier	gram_arg		5093348	1					
ANR	5093363	ExpressionStatement	gram_arg = ( user_arg_t * ) arg	1114:1:29151:29179	5093348	3	True				
ANR	5093364	AssignmentExpression	gram_arg = ( user_arg_t * ) arg		5093348	0		=			
ANR	5093365	Identifier	gram_arg		5093348	0					
ANR	5093366	CastExpression	( user_arg_t * ) arg		5093348	1					
ANR	5093367	CastTarget	user_arg_t *		5093348	0					
ANR	5093368	Identifier	arg		5093348	1					
ANR	5093369	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 10240 )	1116:1:29183:29225	5093348	4	True				
ANR	5093370	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 10240 )		5093348	0		=			
ANR	5093371	Identifier	output		5093348	0					
ANR	5093372	CastExpression	( char * ) globus_libc_malloc ( 10240 )		5093348	1					
ANR	5093373	CastTarget	char *		5093348	0					
ANR	5093374	CallExpression	globus_libc_malloc ( 10240 )		5093348	1					
ANR	5093375	Callee	globus_libc_malloc		5093348	0					
ANR	5093376	Identifier	globus_libc_malloc		5093348	0					
ANR	5093377	ArgumentList	10240		5093348	1					
ANR	5093378	Argument	10240		5093348	0					
ANR	5093379	PrimaryExpression	10240		5093348	0					
ANR	5093380	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , job_info -> protocol_error_code )"	1118:1:29229:29320	5093348	5	True				
ANR	5093381	CallExpression	"globus_libc_sprintf ( output , ""%s %d"" , gram_arg -> req_id , job_info -> protocol_error_code )"		5093348	0					
ANR	5093382	Callee	globus_libc_sprintf		5093348	0					
ANR	5093383	Identifier	globus_libc_sprintf		5093348	0					
ANR	5093384	ArgumentList	output		5093348	1					
ANR	5093385	Argument	output		5093348	0					
ANR	5093386	Identifier	output		5093348	0					
ANR	5093387	Argument	"""%s %d"""		5093348	1					
ANR	5093388	PrimaryExpression	"""%s %d"""		5093348	0					
ANR	5093389	Argument	gram_arg -> req_id		5093348	2					
ANR	5093390	PtrMemberAccess	gram_arg -> req_id		5093348	0					
ANR	5093391	Identifier	gram_arg		5093348	0					
ANR	5093392	Identifier	req_id		5093348	1					
ANR	5093393	Argument	job_info -> protocol_error_code		5093348	3					
ANR	5093394	PtrMemberAccess	job_info -> protocol_error_code		5093348	0					
ANR	5093395	Identifier	job_info		5093348	0					
ANR	5093396	Identifier	protocol_error_code		5093348	1					
ANR	5093397	IfStatement	if ( job_info -> protocol_error_code == GLOBUS_SUCCESS )		5093348	6					
ANR	5093398	Condition	job_info -> protocol_error_code == GLOBUS_SUCCESS	1121:6:29329:29375	5093348	0	True				
ANR	5093399	EqualityExpression	job_info -> protocol_error_code == GLOBUS_SUCCESS		5093348	0		==			
ANR	5093400	PtrMemberAccess	job_info -> protocol_error_code		5093348	0					
ANR	5093401	Identifier	job_info		5093348	0					
ANR	5093402	Identifier	protocol_error_code		5093348	1					
ANR	5093403	Identifier	GLOBUS_SUCCESS		5093348	1					
ANR	5093404	CompoundStatement		14:2:290:415	5093348	1					
ANR	5093405	IdentifierDeclStatement	globus_gram_protocol_extension_t * entry = ( globus_gram_protocol_extension_t * ) globus_hashtable_first ( & job_info -> extensions ) ;	1122:2:29383:29508	5093348	0	True				
ANR	5093406	IdentifierDecl	* entry = ( globus_gram_protocol_extension_t * ) globus_hashtable_first ( & job_info -> extensions )		5093348	0					
ANR	5093407	IdentifierDeclType	globus_gram_protocol_extension_t *		5093348	0					
ANR	5093408	Identifier	entry		5093348	1					
ANR	5093409	AssignmentExpression	* entry = ( globus_gram_protocol_extension_t * ) globus_hashtable_first ( & job_info -> extensions )		5093348	2		=			
ANR	5093410	Identifier	entry		5093348	0					
ANR	5093411	CastExpression	( globus_gram_protocol_extension_t * ) globus_hashtable_first ( & job_info -> extensions )		5093348	1					
ANR	5093412	CastTarget	globus_gram_protocol_extension_t *		5093348	0					
ANR	5093413	CallExpression	globus_hashtable_first ( & job_info -> extensions )		5093348	1					
ANR	5093414	Callee	globus_hashtable_first		5093348	0					
ANR	5093415	Identifier	globus_hashtable_first		5093348	0					
ANR	5093416	ArgumentList	& job_info -> extensions		5093348	1					
ANR	5093417	Argument	& job_info -> extensions		5093348	0					
ANR	5093418	UnaryOperationExpression	& job_info -> extensions		5093348	0					
ANR	5093419	UnaryOperator	&		5093348	0					
ANR	5093420	PtrMemberAccess	job_info -> extensions		5093348	1					
ANR	5093421	Identifier	job_info		5093348	0					
ANR	5093422	Identifier	extensions		5093348	1					
ANR	5093423	WhileStatement	while ( entry )		5093348	1					
ANR	5093424	Condition	entry	1123:10:29520:29524	5093348	0	True				
ANR	5093425	Identifier	entry		5093348	0					
ANR	5093426	CompoundStatement		15:18:435:435	5093348	1					
ANR	5093427	ExpressionStatement	"strcat ( output , "" "" )"	1124:3:29533:29554	5093348	0	True				
ANR	5093428	CallExpression	"strcat ( output , "" "" )"		5093348	0					
ANR	5093429	Callee	strcat		5093348	0					
ANR	5093430	Identifier	strcat		5093348	0					
ANR	5093431	ArgumentList	output		5093348	1					
ANR	5093432	Argument	output		5093348	0					
ANR	5093433	Identifier	output		5093348	0					
ANR	5093434	Argument	""" """		5093348	1					
ANR	5093435	PrimaryExpression	""" """		5093348	0					
ANR	5093436	ExpressionStatement	"strcat ( output , entry -> attribute )"	1125:3:29559:29593	5093348	1	True				
ANR	5093437	CallExpression	"strcat ( output , entry -> attribute )"		5093348	0					
ANR	5093438	Callee	strcat		5093348	0					
ANR	5093439	Identifier	strcat		5093348	0					
ANR	5093440	ArgumentList	output		5093348	1					
ANR	5093441	Argument	output		5093348	0					
ANR	5093442	Identifier	output		5093348	0					
ANR	5093443	Argument	entry -> attribute		5093348	1					
ANR	5093444	PtrMemberAccess	entry -> attribute		5093348	0					
ANR	5093445	Identifier	entry		5093348	0					
ANR	5093446	Identifier	attribute		5093348	1					
ANR	5093447	ExpressionStatement	"strcat ( output , ""="" )"	1126:3:29598:29619	5093348	2	True				
ANR	5093448	CallExpression	"strcat ( output , ""="" )"		5093348	0					
ANR	5093449	Callee	strcat		5093348	0					
ANR	5093450	Identifier	strcat		5093348	0					
ANR	5093451	ArgumentList	output		5093348	1					
ANR	5093452	Argument	output		5093348	0					
ANR	5093453	Identifier	output		5093348	0					
ANR	5093454	Argument	"""="""		5093348	1					
ANR	5093455	PrimaryExpression	"""="""		5093348	0					
ANR	5093456	ExpressionStatement	esc_str = escape_spaces ( entry -> value )	1127:3:29624:29663	5093348	3	True				
ANR	5093457	AssignmentExpression	esc_str = escape_spaces ( entry -> value )		5093348	0		=			
ANR	5093458	Identifier	esc_str		5093348	0					
ANR	5093459	CallExpression	escape_spaces ( entry -> value )		5093348	1					
ANR	5093460	Callee	escape_spaces		5093348	0					
ANR	5093461	Identifier	escape_spaces		5093348	0					
ANR	5093462	ArgumentList	entry -> value		5093348	1					
ANR	5093463	Argument	entry -> value		5093348	0					
ANR	5093464	PtrMemberAccess	entry -> value		5093348	0					
ANR	5093465	Identifier	entry		5093348	0					
ANR	5093466	Identifier	value		5093348	1					
ANR	5093467	ExpressionStatement	"strcat ( output , esc_str )"	1128:3:29668:29693	5093348	4	True				
ANR	5093468	CallExpression	"strcat ( output , esc_str )"		5093348	0					
ANR	5093469	Callee	strcat		5093348	0					
ANR	5093470	Identifier	strcat		5093348	0					
ANR	5093471	ArgumentList	output		5093348	1					
ANR	5093472	Argument	output		5093348	0					
ANR	5093473	Identifier	output		5093348	0					
ANR	5093474	Argument	esc_str		5093348	1					
ANR	5093475	Identifier	esc_str		5093348	0					
ANR	5093476	ExpressionStatement	free ( esc_str )	1129:3:29698:29713	5093348	5	True				
ANR	5093477	CallExpression	free ( esc_str )		5093348	0					
ANR	5093478	Callee	free		5093348	0					
ANR	5093479	Identifier	free		5093348	0					
ANR	5093480	ArgumentList	esc_str		5093348	1					
ANR	5093481	Argument	esc_str		5093348	0					
ANR	5093482	Identifier	esc_str		5093348	0					
ANR	5093483	ExpressionStatement	entry = ( globus_gram_protocol_extension_t * ) globus_hashtable_next ( & job_info -> extensions )	1130:3:29718:29808	5093348	6	True				
ANR	5093484	AssignmentExpression	entry = ( globus_gram_protocol_extension_t * ) globus_hashtable_next ( & job_info -> extensions )		5093348	0		=			
ANR	5093485	Identifier	entry		5093348	0					
ANR	5093486	CastExpression	( globus_gram_protocol_extension_t * ) globus_hashtable_next ( & job_info -> extensions )		5093348	1					
ANR	5093487	CastTarget	globus_gram_protocol_extension_t *		5093348	0					
ANR	5093488	CallExpression	globus_hashtable_next ( & job_info -> extensions )		5093348	1					
ANR	5093489	Callee	globus_hashtable_next		5093348	0					
ANR	5093490	Identifier	globus_hashtable_next		5093348	0					
ANR	5093491	ArgumentList	& job_info -> extensions		5093348	1					
ANR	5093492	Argument	& job_info -> extensions		5093348	0					
ANR	5093493	UnaryOperationExpression	& job_info -> extensions		5093348	0					
ANR	5093494	UnaryOperator	&		5093348	0					
ANR	5093495	PtrMemberAccess	job_info -> extensions		5093348	1					
ANR	5093496	Identifier	job_info		5093348	0					
ANR	5093497	Identifier	extensions		5093348	1					
ANR	5093498	ExpressionStatement	enqueue_results ( output )	1134:1:29819:29842	5093348	7	True				
ANR	5093499	CallExpression	enqueue_results ( output )		5093348	0					
ANR	5093500	Callee	enqueue_results		5093348	0					
ANR	5093501	Identifier	enqueue_results		5093348	0					
ANR	5093502	ArgumentList	output		5093348	1					
ANR	5093503	Argument	output		5093348	0					
ANR	5093504	Identifier	output		5093348	0					
ANR	5093505	ExpressionStatement	delete_gram_arg ( gram_arg )	1136:1:29847:29874	5093348	8	True				
ANR	5093506	CallExpression	delete_gram_arg ( gram_arg )		5093348	0					
ANR	5093507	Callee	delete_gram_arg		5093348	0					
ANR	5093508	Identifier	delete_gram_arg		5093348	0					
ANR	5093509	ArgumentList	gram_arg		5093348	1					
ANR	5093510	Argument	gram_arg		5093348	0					
ANR	5093511	Identifier	gram_arg		5093348	0					
ANR	5093512	ReturnStatement	return ;	1137:1:29877:29883	5093348	9	True				
ANR	5093513	ReturnType	void		5093348	1					
ANR	5093514	Identifier	callback_gram_get_jobmanager_version		5093348	2					
ANR	5093515	ParameterList	"void * arg , const char * job_contact , globus_gram_client_job_info_t * job_info"		5093348	3					
ANR	5093516	Parameter	void * arg	1106:37:28995:29003	5093348	0	True				
ANR	5093517	ParameterType	void *		5093348	0					
ANR	5093518	Identifier	arg		5093348	1					
ANR	5093519	Parameter	const char * job_contact	1107:10:29016:29038	5093348	1	True				
ANR	5093520	ParameterType	const char *		5093348	0					
ANR	5093521	Identifier	job_contact		5093348	1					
ANR	5093522	Parameter	globus_gram_client_job_info_t * job_info	1108:10:29051:29089	5093348	2	True				
ANR	5093523	ParameterType	globus_gram_client_job_info_t *		5093348	0					
ANR	5093524	Identifier	job_info		5093348	1					
ANR	5093525	CFGEntryNode	ENTRY		5093348		True				
ANR	5093526	CFGExitNode	EXIT		5093348		True				
ANR	5093527	Symbol	job_info		5093348						
ANR	5093528	Symbol	* gram_arg		5093348						
ANR	5093529	Symbol	GLOBUS_SUCCESS		5093348						
ANR	5093530	Symbol	& job_info -> extensions		5093348						
ANR	5093531	Symbol	output		5093348						
ANR	5093532	Symbol	entry		5093348						
ANR	5093533	Symbol	job_info -> protocol_error_code		5093348						
ANR	5093534	Symbol	gram_arg -> req_id		5093348						
ANR	5093535	Symbol	esc_str		5093348						
ANR	5093536	Symbol	arg		5093348						
ANR	5093537	Symbol	* job_info		5093348						
ANR	5093538	Symbol	entry -> value		5093348						
ANR	5093539	Symbol	globus_hashtable_first		5093348						
ANR	5093540	Symbol	globus_libc_malloc		5093348						
ANR	5093541	Symbol	entry -> attribute		5093348						
ANR	5093542	Symbol	escape_spaces		5093348						
ANR	5093543	Symbol	gram_arg		5093348						
ANR	5093544	Symbol	job_contact		5093348						
ANR	5093545	Symbol	globus_hashtable_next		5093348						
ANR	5093546	Symbol	* entry		5093348						
ANR	5093547	Function	handle_gram_callback_allow	1140:0:29888:30998							
ANR	5093548	FunctionDef	handle_gram_callback_allow (void * user_arg)		5093547	0					
ANR	5093549	CompoundStatement		1142:0:29937:30998	5093547	0					
ANR	5093550	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1143:1:29940:29978	5093547	0	True				
ANR	5093551	IdentifierDecl	* * input_line = ( char * * ) user_arg		5093547	0					
ANR	5093552	IdentifierDeclType	char * *		5093547	0					
ANR	5093553	Identifier	input_line		5093547	1					
ANR	5093554	AssignmentExpression	* * input_line = ( char * * ) user_arg		5093547	2		=			
ANR	5093555	Identifier	input_line		5093547	0					
ANR	5093556	CastExpression	( char * * ) user_arg		5093547	1					
ANR	5093557	CastTarget	char * *		5093547	0					
ANR	5093558	Identifier	user_arg		5093547	1					
ANR	5093559	IdentifierDeclStatement	"int result , port ;"	1144:1:29981:29997	5093547	1	True				
ANR	5093560	IdentifierDecl	result		5093547	0					
ANR	5093561	IdentifierDeclType	int		5093547	0					
ANR	5093562	Identifier	result		5093547	1					
ANR	5093563	IdentifierDecl	port		5093547	1					
ANR	5093564	IdentifierDeclType	int		5093547	0					
ANR	5093565	Identifier	port		5093547	1					
ANR	5093566	IdentifierDeclStatement	"char * req_id , * callback_contact = NULL , * error_string = NULL ;"	1145:1:30000:30060	5093547	2	True				
ANR	5093567	IdentifierDecl	* req_id		5093547	0					
ANR	5093568	IdentifierDeclType	char *		5093547	0					
ANR	5093569	Identifier	req_id		5093547	1					
ANR	5093570	IdentifierDecl	* callback_contact = NULL		5093547	1					
ANR	5093571	IdentifierDeclType	char *		5093547	0					
ANR	5093572	Identifier	callback_contact		5093547	1					
ANR	5093573	AssignmentExpression	* callback_contact = NULL		5093547	2		=			
ANR	5093574	Identifier	NULL		5093547	0					
ANR	5093575	Identifier	NULL		5093547	1					
ANR	5093576	IdentifierDecl	* error_string = NULL		5093547	2					
ANR	5093577	IdentifierDeclType	char *		5093547	0					
ANR	5093578	Identifier	error_string		5093547	1					
ANR	5093579	AssignmentExpression	* error_string = NULL		5093547	2		=			
ANR	5093580	Identifier	NULL		5093547	0					
ANR	5093581	Identifier	NULL		5093547	1					
ANR	5093582	IdentifierDeclStatement	char * saved_req_id = NULL ;	1146:1:30063:30088	5093547	3	True				
ANR	5093583	IdentifierDecl	* saved_req_id = NULL		5093547	0					
ANR	5093584	IdentifierDeclType	char *		5093547	0					
ANR	5093585	Identifier	saved_req_id		5093547	1					
ANR	5093586	AssignmentExpression	* saved_req_id = NULL		5093547	2		=			
ANR	5093587	Identifier	NULL		5093547	0					
ANR	5093588	Identifier	NULL		5093547	1					
ANR	5093589	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & req_id ) )"		5093547	4					
ANR	5093590	Condition	"! process_string_arg ( input_line [ 1 ] , & req_id )"	1148:5:30096:30138	5093547	0	True				
ANR	5093591	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & req_id )"		5093547	0					
ANR	5093592	UnaryOperator	!		5093547	0					
ANR	5093593	CallExpression	"process_string_arg ( input_line [ 1 ] , & req_id )"		5093547	1					
ANR	5093594	Callee	process_string_arg		5093547	0					
ANR	5093595	Identifier	process_string_arg		5093547	0					
ANR	5093596	ArgumentList	input_line [ 1 ]		5093547	1					
ANR	5093597	Argument	input_line [ 1 ]		5093547	0					
ANR	5093598	ArrayIndexing	input_line [ 1 ]		5093547	0					
ANR	5093599	Identifier	input_line		5093547	0					
ANR	5093600	PrimaryExpression	1		5093547	1					
ANR	5093601	Argument	& req_id		5093547	1					
ANR	5093602	UnaryOperationExpression	& req_id		5093547	0					
ANR	5093603	UnaryOperator	&		5093547	0					
ANR	5093604	Identifier	req_id		5093547	1					
ANR	5093605	CompoundStatement		7:51:204:204	5093547	1					
ANR	5093606	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1149:2:30146:30167	5093547	0	True				
ANR	5093607	CallExpression	HANDLE_SYNTAX_ERROR ( )		5093547	0					
ANR	5093608	Callee	HANDLE_SYNTAX_ERROR		5093547	0					
ANR	5093609	Identifier	HANDLE_SYNTAX_ERROR		5093547	0					
ANR	5093610	ArgumentList			5093547	1					
ANR	5093611	ReturnStatement	return 0 ;	1150:2:30171:30179	5093547	1	True				
ANR	5093612	PrimaryExpression	0		5093547	0					
ANR	5093613	IfStatement	"if ( ! process_int_arg ( input_line [ 2 ] , & port ) )"		5093547	5					
ANR	5093614	Condition	"! process_int_arg ( input_line [ 2 ] , & port )"	1154:5:30240:30277	5093547	0	True				
ANR	5093615	UnaryOperationExpression	"! process_int_arg ( input_line [ 2 ] , & port )"		5093547	0					
ANR	5093616	UnaryOperator	!		5093547	0					
ANR	5093617	CallExpression	"process_int_arg ( input_line [ 2 ] , & port )"		5093547	1					
ANR	5093618	Callee	process_int_arg		5093547	0					
ANR	5093619	Identifier	process_int_arg		5093547	0					
ANR	5093620	ArgumentList	input_line [ 2 ]		5093547	1					
ANR	5093621	Argument	input_line [ 2 ]		5093547	0					
ANR	5093622	ArrayIndexing	input_line [ 2 ]		5093547	0					
ANR	5093623	Identifier	input_line		5093547	0					
ANR	5093624	PrimaryExpression	2		5093547	1					
ANR	5093625	Argument	& port		5093547	1					
ANR	5093626	UnaryOperationExpression	& port		5093547	0					
ANR	5093627	UnaryOperator	&		5093547	0					
ANR	5093628	Identifier	port		5093547	1					
ANR	5093629	CompoundStatement		13:46:343:343	5093547	1					
ANR	5093630	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1155:2:30285:30306	5093547	0	True				
ANR	5093631	CallExpression	HANDLE_SYNTAX_ERROR ( )		5093547	0					
ANR	5093632	Callee	HANDLE_SYNTAX_ERROR		5093547	0					
ANR	5093633	Identifier	HANDLE_SYNTAX_ERROR		5093547	0					
ANR	5093634	ArgumentList			5093547	1					
ANR	5093635	ReturnStatement	return 0 ;	1156:2:30310:30318	5093547	1	True				
ANR	5093636	PrimaryExpression	0		5093547	0					
ANR	5093637	ExpressionStatement	saved_req_id = ( char * ) globus_libc_malloc ( strlen ( req_id ) + 1 )	1162:1:30419:30481	5093547	6	True				
ANR	5093638	AssignmentExpression	saved_req_id = ( char * ) globus_libc_malloc ( strlen ( req_id ) + 1 )		5093547	0		=			
ANR	5093639	Identifier	saved_req_id		5093547	0					
ANR	5093640	CastExpression	( char * ) globus_libc_malloc ( strlen ( req_id ) + 1 )		5093547	1					
ANR	5093641	CastTarget	char *		5093547	0					
ANR	5093642	CallExpression	globus_libc_malloc ( strlen ( req_id ) + 1 )		5093547	1					
ANR	5093643	Callee	globus_libc_malloc		5093547	0					
ANR	5093644	Identifier	globus_libc_malloc		5093547	0					
ANR	5093645	ArgumentList	strlen ( req_id ) + 1		5093547	1					
ANR	5093646	Argument	strlen ( req_id ) + 1		5093547	0					
ANR	5093647	AdditiveExpression	strlen ( req_id ) + 1		5093547	0		+			
ANR	5093648	CallExpression	strlen ( req_id )		5093547	0					
ANR	5093649	Callee	strlen		5093547	0					
ANR	5093650	Identifier	strlen		5093547	0					
ANR	5093651	ArgumentList	req_id		5093547	1					
ANR	5093652	Argument	req_id		5093547	0					
ANR	5093653	Identifier	req_id		5093547	0					
ANR	5093654	PrimaryExpression	1		5093547	1					
ANR	5093655	ExpressionStatement	"strcpy ( saved_req_id , req_id )"	1163:1:30484:30512	5093547	7	True				
ANR	5093656	CallExpression	"strcpy ( saved_req_id , req_id )"		5093547	0					
ANR	5093657	Callee	strcpy		5093547	0					
ANR	5093658	Identifier	strcpy		5093547	0					
ANR	5093659	ArgumentList	saved_req_id		5093547	1					
ANR	5093660	Argument	saved_req_id		5093547	0					
ANR	5093661	Identifier	saved_req_id		5093547	0					
ANR	5093662	Argument	req_id		5093547	1					
ANR	5093663	Identifier	req_id		5093547	0					
ANR	5093664	ExpressionStatement	"result = globus_gram_client_callback_allow ( gram_callback_handler , saved_req_id , & callback_contact )"	1164:1:30515:30642	5093547	8	True				
ANR	5093665	AssignmentExpression	"result = globus_gram_client_callback_allow ( gram_callback_handler , saved_req_id , & callback_contact )"		5093547	0		=			
ANR	5093666	Identifier	result		5093547	0					
ANR	5093667	CallExpression	"globus_gram_client_callback_allow ( gram_callback_handler , saved_req_id , & callback_contact )"		5093547	1					
ANR	5093668	Callee	globus_gram_client_callback_allow		5093547	0					
ANR	5093669	Identifier	globus_gram_client_callback_allow		5093547	0					
ANR	5093670	ArgumentList	gram_callback_handler		5093547	1					
ANR	5093671	Argument	gram_callback_handler		5093547	0					
ANR	5093672	Identifier	gram_callback_handler		5093547	0					
ANR	5093673	Argument	saved_req_id		5093547	1					
ANR	5093674	Identifier	saved_req_id		5093547	0					
ANR	5093675	Argument	& callback_contact		5093547	2					
ANR	5093676	UnaryOperationExpression	& callback_contact		5093547	0					
ANR	5093677	UnaryOperator	&		5093547	0					
ANR	5093678	Identifier	callback_contact		5093547	1					
ANR	5093679	IfStatement	if ( result != GLOBUS_SUCCESS )		5093547	9					
ANR	5093680	Condition	result != GLOBUS_SUCCESS	1168:5:30650:30673	5093547	0	True				
ANR	5093681	EqualityExpression	result != GLOBUS_SUCCESS		5093547	0		!=			
ANR	5093682	Identifier	result		5093547	0					
ANR	5093683	Identifier	GLOBUS_SUCCESS		5093547	1					
ANR	5093684	CompoundStatement		27:31:738:738	5093547	1					
ANR	5093685	ExpressionStatement	error_string = escape_spaces ( globus_gram_client_error_string ( result ) )	1169:2:30680:30749	5093547	0	True				
ANR	5093686	AssignmentExpression	error_string = escape_spaces ( globus_gram_client_error_string ( result ) )		5093547	0		=			
ANR	5093687	Identifier	error_string		5093547	0					
ANR	5093688	CallExpression	escape_spaces ( globus_gram_client_error_string ( result ) )		5093547	1					
ANR	5093689	Callee	escape_spaces		5093547	0					
ANR	5093690	Identifier	escape_spaces		5093547	0					
ANR	5093691	ArgumentList	globus_gram_client_error_string ( result )		5093547	1					
ANR	5093692	Argument	globus_gram_client_error_string ( result )		5093547	0					
ANR	5093693	CallExpression	globus_gram_client_error_string ( result )		5093547	0					
ANR	5093694	Callee	globus_gram_client_error_string		5093547	0					
ANR	5093695	Identifier	globus_gram_client_error_string		5093547	0					
ANR	5093696	ArgumentList	result		5093547	1					
ANR	5093697	Argument	result		5093547	0					
ANR	5093698	Identifier	result		5093547	0					
ANR	5093699	ExpressionStatement	"gahp_printf ( ""F %d %s\\n"" , result , error_string )"	1170:2:30753:30800	5093547	1	True				
ANR	5093700	CallExpression	"gahp_printf ( ""F %d %s\\n"" , result , error_string )"		5093547	0					
ANR	5093701	Callee	gahp_printf		5093547	0					
ANR	5093702	Identifier	gahp_printf		5093547	0					
ANR	5093703	ArgumentList	"""F %d %s\\n"""		5093547	1					
ANR	5093704	Argument	"""F %d %s\\n"""		5093547	0					
ANR	5093705	PrimaryExpression	"""F %d %s\\n"""		5093547	0					
ANR	5093706	Argument	result		5093547	1					
ANR	5093707	Identifier	result		5093547	0					
ANR	5093708	Argument	error_string		5093547	2					
ANR	5093709	Identifier	error_string		5093547	0					
ANR	5093710	ExpressionStatement	globus_libc_free ( error_string )	1171:2:30804:30834	5093547	2	True				
ANR	5093711	CallExpression	globus_libc_free ( error_string )		5093547	0					
ANR	5093712	Callee	globus_libc_free		5093547	0					
ANR	5093713	Identifier	globus_libc_free		5093547	0					
ANR	5093714	ArgumentList	error_string		5093547	1					
ANR	5093715	Argument	error_string		5093547	0					
ANR	5093716	Identifier	error_string		5093547	0					
ANR	5093717	ElseStatement	else		5093547	0					
ANR	5093718	CompoundStatement		31:8:906:906	5093547	0					
ANR	5093719	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , callback_contact )"	1173:2:30848:30887	5093547	0	True				
ANR	5093720	CallExpression	"gahp_printf ( ""S %s\\n"" , callback_contact )"		5093547	0					
ANR	5093721	Callee	gahp_printf		5093547	0					
ANR	5093722	Identifier	gahp_printf		5093547	0					
ANR	5093723	ArgumentList	"""S %s\\n"""		5093547	1					
ANR	5093724	Argument	"""S %s\\n"""		5093547	0					
ANR	5093725	PrimaryExpression	"""S %s\\n"""		5093547	0					
ANR	5093726	Argument	callback_contact		5093547	1					
ANR	5093727	Identifier	callback_contact		5093547	0					
ANR	5093728	ExpressionStatement	globus_libc_free ( callback_contact )	1174:2:30891:30925	5093547	1	True				
ANR	5093729	CallExpression	globus_libc_free ( callback_contact )		5093547	0					
ANR	5093730	Callee	globus_libc_free		5093547	0					
ANR	5093731	Identifier	globus_libc_free		5093547	0					
ANR	5093732	ArgumentList	callback_contact		5093547	1					
ANR	5093733	Argument	callback_contact		5093547	0					
ANR	5093734	Identifier	callback_contact		5093547	0					
ANR	5093735	ExpressionStatement	gahp_sem_up ( & print_control )	1176:1:30931:30958	5093547	10	True				
ANR	5093736	CallExpression	gahp_sem_up ( & print_control )		5093547	0					
ANR	5093737	Callee	gahp_sem_up		5093547	0					
ANR	5093738	Identifier	gahp_sem_up		5093547	0					
ANR	5093739	ArgumentList	& print_control		5093547	1					
ANR	5093740	Argument	& print_control		5093547	0					
ANR	5093741	UnaryOperationExpression	& print_control		5093547	0					
ANR	5093742	UnaryOperator	&		5093547	0					
ANR	5093743	Identifier	print_control		5093547	1					
ANR	5093744	ExpressionStatement	all_args_free ( user_arg )	1178:1:30962:30985	5093547	11	True				
ANR	5093745	CallExpression	all_args_free ( user_arg )		5093547	0					
ANR	5093746	Callee	all_args_free		5093547	0					
ANR	5093747	Identifier	all_args_free		5093547	0					
ANR	5093748	ArgumentList	user_arg		5093547	1					
ANR	5093749	Argument	user_arg		5093547	0					
ANR	5093750	Identifier	user_arg		5093547	0					
ANR	5093751	ReturnStatement	return 0 ;	1179:1:30988:30996	5093547	12	True				
ANR	5093752	PrimaryExpression	0		5093547	0					
ANR	5093753	ReturnType	int		5093547	1					
ANR	5093754	Identifier	handle_gram_callback_allow		5093547	2					
ANR	5093755	ParameterList	void * user_arg		5093547	3					
ANR	5093756	Parameter	void * user_arg	1141:27:29920:29934	5093547	0	True				
ANR	5093757	ParameterType	void *		5093547	0					
ANR	5093758	Identifier	user_arg		5093547	1					
ANR	5093759	CFGEntryNode	ENTRY		5093547		True				
ANR	5093760	CFGExitNode	EXIT		5093547		True				
ANR	5093761	Symbol	user_arg		5093547						
ANR	5093762	Symbol	* input_line		5093547						
ANR	5093763	Symbol	globus_gram_client_error_string		5093547						
ANR	5093764	Symbol	process_string_arg		5093547						
ANR	5093765	Symbol	gram_callback_handler		5093547						
ANR	5093766	Symbol	NULL		5093547						
ANR	5093767	Symbol	GLOBUS_SUCCESS		5093547						
ANR	5093768	Symbol	input_line		5093547						
ANR	5093769	Symbol	process_int_arg		5093547						
ANR	5093770	Symbol	globus_gram_client_callback_allow		5093547						
ANR	5093771	Symbol	& print_control		5093547						
ANR	5093772	Symbol	result		5093547						
ANR	5093773	Symbol	req_id		5093547						
ANR	5093774	Symbol	error_string		5093547						
ANR	5093775	Symbol	strlen		5093547						
ANR	5093776	Symbol	callback_contact		5093547						
ANR	5093777	Symbol	& port		5093547						
ANR	5093778	Symbol	port		5093547						
ANR	5093779	Symbol	saved_req_id		5093547						
ANR	5093780	Symbol	& req_id		5093547						
ANR	5093781	Symbol	& callback_contact		5093547						
ANR	5093782	Symbol	globus_libc_malloc		5093547						
ANR	5093783	Symbol	escape_spaces		5093547						
ANR	5093784	Function	gram_callback_handler	1182:0:31001:31285							
ANR	5093785	FunctionDef	"gram_callback_handler (void * callback_arg , char * job_contact , int state , int error)"		5093784	0					
ANR	5093786	CompoundStatement		1185:0:31096:31285	5093784	0					
ANR	5093787	IdentifierDeclStatement	char * output ;	1186:1:31099:31111	5093784	0	True				
ANR	5093788	IdentifierDecl	* output		5093784	0					
ANR	5093789	IdentifierDeclType	char *		5093784	0					
ANR	5093790	Identifier	output		5093784	1					
ANR	5093791	ExpressionStatement	output = ( char * ) globus_libc_malloc ( 500 )	1188:1:31115:31155	5093784	1	True				
ANR	5093792	AssignmentExpression	output = ( char * ) globus_libc_malloc ( 500 )		5093784	0		=			
ANR	5093793	Identifier	output		5093784	0					
ANR	5093794	CastExpression	( char * ) globus_libc_malloc ( 500 )		5093784	1					
ANR	5093795	CastTarget	char *		5093784	0					
ANR	5093796	CallExpression	globus_libc_malloc ( 500 )		5093784	1					
ANR	5093797	Callee	globus_libc_malloc		5093784	0					
ANR	5093798	Identifier	globus_libc_malloc		5093784	0					
ANR	5093799	ArgumentList	500		5093784	1					
ANR	5093800	Argument	500		5093784	0					
ANR	5093801	PrimaryExpression	500		5093784	0					
ANR	5093802	ExpressionStatement	"globus_libc_sprintf ( output , ""%s %s %d %d"" , ( char * ) callback_arg , job_contact , state , error )"	1190:1:31159:31256	5093784	2	True				
ANR	5093803	CallExpression	"globus_libc_sprintf ( output , ""%s %s %d %d"" , ( char * ) callback_arg , job_contact , state , error )"		5093784	0					
ANR	5093804	Callee	globus_libc_sprintf		5093784	0					
ANR	5093805	Identifier	globus_libc_sprintf		5093784	0					
ANR	5093806	ArgumentList	output		5093784	1					
ANR	5093807	Argument	output		5093784	0					
ANR	5093808	Identifier	output		5093784	0					
ANR	5093809	Argument	"""%s %s %d %d"""		5093784	1					
ANR	5093810	PrimaryExpression	"""%s %s %d %d"""		5093784	0					
ANR	5093811	Argument	( char * ) callback_arg		5093784	2					
ANR	5093812	CastExpression	( char * ) callback_arg		5093784	0					
ANR	5093813	CastTarget	char *		5093784	0					
ANR	5093814	Identifier	callback_arg		5093784	1					
ANR	5093815	Argument	job_contact		5093784	3					
ANR	5093816	Identifier	job_contact		5093784	0					
ANR	5093817	Argument	state		5093784	4					
ANR	5093818	Identifier	state		5093784	0					
ANR	5093819	Argument	error		5093784	5					
ANR	5093820	Identifier	error		5093784	0					
ANR	5093821	ExpressionStatement	enqueue_results ( output )	1193:1:31260:31283	5093784	3	True				
ANR	5093822	CallExpression	enqueue_results ( output )		5093784	0					
ANR	5093823	Callee	enqueue_results		5093784	0					
ANR	5093824	Identifier	enqueue_results		5093784	0					
ANR	5093825	ArgumentList	output		5093784	1					
ANR	5093826	Argument	output		5093784	0					
ANR	5093827	Identifier	output		5093784	0					
ANR	5093828	ReturnType	void		5093784	1					
ANR	5093829	Identifier	gram_callback_handler		5093784	2					
ANR	5093830	ParameterList	"void * callback_arg , char * job_contact , int state , int error"		5093784	3					
ANR	5093831	Parameter	void * callback_arg	1183:22:31028:31045	5093784	0	True				
ANR	5093832	ParameterType	void *		5093784	0					
ANR	5093833	Identifier	callback_arg		5093784	1					
ANR	5093834	Parameter	char * job_contact	1183:42:31048:31064	5093784	1	True				
ANR	5093835	ParameterType	char *		5093784	0					
ANR	5093836	Identifier	job_contact		5093784	1					
ANR	5093837	Parameter	int state	1183:61:31067:31075	5093784	2	True				
ANR	5093838	ParameterType	int		5093784	0					
ANR	5093839	Identifier	state		5093784	1					
ANR	5093840	Parameter	int error	1184:7:31085:31093	5093784	3	True				
ANR	5093841	ParameterType	int		5093784	0					
ANR	5093842	Identifier	error		5093784	1					
ANR	5093843	CFGEntryNode	ENTRY		5093784		True				
ANR	5093844	CFGExitNode	EXIT		5093784		True				
ANR	5093845	Symbol	output		5093784						
ANR	5093846	Symbol	callback_arg		5093784						
ANR	5093847	Symbol	globus_libc_malloc		5093784						
ANR	5093848	Symbol	state		5093784						
ANR	5093849	Symbol	error		5093784						
ANR	5093850	Symbol	job_contact		5093784						
ANR	5093851	Function	handle_commands	1196:0:31288:31474							
ANR	5093852	FunctionDef	handle_commands (void * user_arg)		5093851	0					
ANR	5093853	CompoundStatement		1198:0:31325:31474	5093851	0					
ANR	5093854	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1199:1:31328:31366	5093851	0	True				
ANR	5093855	IdentifierDecl	* * input_line = ( char * * ) user_arg		5093851	0					
ANR	5093856	IdentifierDeclType	char * *		5093851	0					
ANR	5093857	Identifier	input_line		5093851	1					
ANR	5093858	AssignmentExpression	* * input_line = ( char * * ) user_arg		5093851	2		=			
ANR	5093859	Identifier	input_line		5093851	0					
ANR	5093860	CastExpression	( char * * ) user_arg		5093851	1					
ANR	5093861	CastTarget	char * *		5093851	0					
ANR	5093862	Identifier	user_arg		5093851	1					
ANR	5093863	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , commands_list )"	1200:1:31369:31405	5093851	1	True				
ANR	5093864	CallExpression	"gahp_printf ( ""S %s\\n"" , commands_list )"		5093851	0					
ANR	5093865	Callee	gahp_printf		5093851	0					
ANR	5093866	Identifier	gahp_printf		5093851	0					
ANR	5093867	ArgumentList	"""S %s\\n"""		5093851	1					
ANR	5093868	Argument	"""S %s\\n"""		5093851	0					
ANR	5093869	PrimaryExpression	"""S %s\\n"""		5093851	0					
ANR	5093870	Argument	commands_list		5093851	1					
ANR	5093871	Identifier	commands_list		5093851	0					
ANR	5093872	ExpressionStatement	gahp_sem_up ( & print_control )	1201:1:31408:31435	5093851	2	True				
ANR	5093873	CallExpression	gahp_sem_up ( & print_control )		5093851	0					
ANR	5093874	Callee	gahp_sem_up		5093851	0					
ANR	5093875	Identifier	gahp_sem_up		5093851	0					
ANR	5093876	ArgumentList	& print_control		5093851	1					
ANR	5093877	Argument	& print_control		5093851	0					
ANR	5093878	UnaryOperationExpression	& print_control		5093851	0					
ANR	5093879	UnaryOperator	&		5093851	0					
ANR	5093880	Identifier	print_control		5093851	1					
ANR	5093881	ExpressionStatement	all_args_free ( user_arg )	1202:1:31438:31461	5093851	3	True				
ANR	5093882	CallExpression	all_args_free ( user_arg )		5093851	0					
ANR	5093883	Callee	all_args_free		5093851	0					
ANR	5093884	Identifier	all_args_free		5093851	0					
ANR	5093885	ArgumentList	user_arg		5093851	1					
ANR	5093886	Argument	user_arg		5093851	0					
ANR	5093887	Identifier	user_arg		5093851	0					
ANR	5093888	ReturnStatement	return 0 ;	1203:1:31464:31472	5093851	4	True				
ANR	5093889	PrimaryExpression	0		5093851	0					
ANR	5093890	ReturnType	int		5093851	1					
ANR	5093891	Identifier	handle_commands		5093851	2					
ANR	5093892	ParameterList	void * user_arg		5093851	3					
ANR	5093893	Parameter	void * user_arg	1197:16:31308:31322	5093851	0	True				
ANR	5093894	ParameterType	void *		5093851	0					
ANR	5093895	Identifier	user_arg		5093851	1					
ANR	5093896	CFGEntryNode	ENTRY		5093851		True				
ANR	5093897	CFGExitNode	EXIT		5093851		True				
ANR	5093898	Symbol	user_arg		5093851						
ANR	5093899	Symbol	commands_list		5093851						
ANR	5093900	Symbol	input_line		5093851						
ANR	5093901	Symbol	& print_control		5093851						
ANR	5093902	Function	handle_results	1206:0:31477:31983							
ANR	5093903	FunctionDef	handle_results (void * user_arg)		5093902	0					
ANR	5093904	CompoundStatement		1208:0:31514:31983	5093902	0					
ANR	5093905	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1209:1:31517:31555	5093902	0	True				
ANR	5093906	IdentifierDecl	* * input_line = ( char * * ) user_arg		5093902	0					
ANR	5093907	IdentifierDeclType	char * *		5093902	0					
ANR	5093908	Identifier	input_line		5093902	1					
ANR	5093909	AssignmentExpression	* * input_line = ( char * * ) user_arg		5093902	2		=			
ANR	5093910	Identifier	input_line		5093902	0					
ANR	5093911	CastExpression	( char * * ) user_arg		5093902	1					
ANR	5093912	CastTarget	char * *		5093902	0					
ANR	5093913	Identifier	user_arg		5093902	1					
ANR	5093914	IdentifierDeclStatement	char * output ;	1210:1:31558:31570	5093902	1	True				
ANR	5093915	IdentifierDecl	* output		5093902	0					
ANR	5093916	IdentifierDeclType	char *		5093902	0					
ANR	5093917	Identifier	output		5093902	1					
ANR	5093918	IdentifierDeclStatement	"int count , i ;"	1211:1:31573:31585	5093902	2	True				
ANR	5093919	IdentifierDecl	count		5093902	0					
ANR	5093920	IdentifierDeclType	int		5093902	0					
ANR	5093921	Identifier	count		5093902	1					
ANR	5093922	IdentifierDecl	i		5093902	1					
ANR	5093923	IdentifierDeclType	int		5093902	0					
ANR	5093924	Identifier	i		5093902	1					
ANR	5093925	ExpressionStatement	gahp_sem_down ( & fifo_control )	1213:1:31589:31617	5093902	3	True				
ANR	5093926	CallExpression	gahp_sem_down ( & fifo_control )		5093902	0					
ANR	5093927	Callee	gahp_sem_down		5093902	0					
ANR	5093928	Identifier	gahp_sem_down		5093902	0					
ANR	5093929	ArgumentList	& fifo_control		5093902	1					
ANR	5093930	Argument	& fifo_control		5093902	0					
ANR	5093931	UnaryOperationExpression	& fifo_control		5093902	0					
ANR	5093932	UnaryOperator	&		5093902	0					
ANR	5093933	Identifier	fifo_control		5093902	1					
ANR	5093934	ExpressionStatement	count = globus_fifo_size ( & result_fifo )	1214:1:31620:31658	5093902	4	True				
ANR	5093935	AssignmentExpression	count = globus_fifo_size ( & result_fifo )		5093902	0		=			
ANR	5093936	Identifier	count		5093902	0					
ANR	5093937	CallExpression	globus_fifo_size ( & result_fifo )		5093902	1					
ANR	5093938	Callee	globus_fifo_size		5093902	0					
ANR	5093939	Identifier	globus_fifo_size		5093902	0					
ANR	5093940	ArgumentList	& result_fifo		5093902	1					
ANR	5093941	Argument	& result_fifo		5093902	0					
ANR	5093942	UnaryOperationExpression	& result_fifo		5093902	0					
ANR	5093943	UnaryOperator	&		5093902	0					
ANR	5093944	Identifier	result_fifo		5093902	1					
ANR	5093945	ExpressionStatement	"gahp_printf ( ""S %d\\n"" , count )"	1216:1:31662:31690	5093902	5	True				
ANR	5093946	CallExpression	"gahp_printf ( ""S %d\\n"" , count )"		5093902	0					
ANR	5093947	Callee	gahp_printf		5093902	0					
ANR	5093948	Identifier	gahp_printf		5093902	0					
ANR	5093949	ArgumentList	"""S %d\\n"""		5093902	1					
ANR	5093950	Argument	"""S %d\\n"""		5093902	0					
ANR	5093951	PrimaryExpression	"""S %d\\n"""		5093902	0					
ANR	5093952	Argument	count		5093902	1					
ANR	5093953	Identifier	count		5093902	0					
ANR	5093954	IfStatement	if ( count > 0 )		5093902	6					
ANR	5093955	Condition	count > 0	1217:4:31696:31704	5093902	0	True				
ANR	5093956	RelationalExpression	count > 0		5093902	0		>			
ANR	5093957	Identifier	count		5093902	0					
ANR	5093958	PrimaryExpression	0		5093902	1					
ANR	5093959	CompoundStatement		10:15:192:192	5093902	1					
ANR	5093960	ForStatement	for ( i = 0 ; i < count ; i ++ )		5093902	0					
ANR	5093961	ForInit	i = 0 ;	1218:6:31715:31720	5093902	0	True				
ANR	5093962	AssignmentExpression	i = 0		5093902	0		=			
ANR	5093963	Identifier	i		5093902	0					
ANR	5093964	PrimaryExpression	0		5093902	1					
ANR	5093965	Condition	i < count	1218:13:31722:31730	5093902	1	True				
ANR	5093966	RelationalExpression	i < count		5093902	0		<			
ANR	5093967	Identifier	i		5093902	0					
ANR	5093968	Identifier	count		5093902	1					
ANR	5093969	PostIncDecOperationExpression	i ++	1218:24:31733:31735	5093902	2	True				
ANR	5093970	Identifier	i		5093902	0					
ANR	5093971	IncDec	++		5093902	1					
ANR	5093972	CompoundStatement		11:29:223:223	5093902	3					
ANR	5093973	ExpressionStatement	output = ( char * ) globus_fifo_dequeue ( & result_fifo )	1219:3:31743:31794	5093902	0	True				
ANR	5093974	AssignmentExpression	output = ( char * ) globus_fifo_dequeue ( & result_fifo )		5093902	0		=			
ANR	5093975	Identifier	output		5093902	0					
ANR	5093976	CastExpression	( char * ) globus_fifo_dequeue ( & result_fifo )		5093902	1					
ANR	5093977	CastTarget	char *		5093902	0					
ANR	5093978	CallExpression	globus_fifo_dequeue ( & result_fifo )		5093902	1					
ANR	5093979	Callee	globus_fifo_dequeue		5093902	0					
ANR	5093980	Identifier	globus_fifo_dequeue		5093902	0					
ANR	5093981	ArgumentList	& result_fifo		5093902	1					
ANR	5093982	Argument	& result_fifo		5093902	0					
ANR	5093983	UnaryOperationExpression	& result_fifo		5093902	0					
ANR	5093984	UnaryOperator	&		5093902	0					
ANR	5093985	Identifier	result_fifo		5093902	1					
ANR	5093986	ExpressionStatement	"gahp_printf ( ""%s\\n"" , output )"	1220:3:31799:31826	5093902	1	True				
ANR	5093987	CallExpression	"gahp_printf ( ""%s\\n"" , output )"		5093902	0					
ANR	5093988	Callee	gahp_printf		5093902	0					
ANR	5093989	Identifier	gahp_printf		5093902	0					
ANR	5093990	ArgumentList	"""%s\\n"""		5093902	1					
ANR	5093991	Argument	"""%s\\n"""		5093902	0					
ANR	5093992	PrimaryExpression	"""%s\\n"""		5093902	0					
ANR	5093993	Argument	output		5093902	1					
ANR	5093994	Identifier	output		5093902	0					
ANR	5093995	ExpressionStatement	globus_libc_free ( output )	1221:3:31831:31855	5093902	2	True				
ANR	5093996	CallExpression	globus_libc_free ( output )		5093902	0					
ANR	5093997	Callee	globus_libc_free		5093902	0					
ANR	5093998	Identifier	globus_libc_free		5093902	0					
ANR	5093999	ArgumentList	output		5093902	1					
ANR	5094000	Argument	output		5093902	0					
ANR	5094001	Identifier	output		5093902	0					
ANR	5094002	ExpressionStatement	ResultsPending = 0	1224:1:31865:31883	5093902	7	True				
ANR	5094003	AssignmentExpression	ResultsPending = 0		5093902	0		=			
ANR	5094004	Identifier	ResultsPending		5093902	0					
ANR	5094005	PrimaryExpression	0		5093902	1					
ANR	5094006	ExpressionStatement	gahp_sem_up ( & fifo_control )	1225:1:31886:31912	5093902	8	True				
ANR	5094007	CallExpression	gahp_sem_up ( & fifo_control )		5093902	0					
ANR	5094008	Callee	gahp_sem_up		5093902	0					
ANR	5094009	Identifier	gahp_sem_up		5093902	0					
ANR	5094010	ArgumentList	& fifo_control		5093902	1					
ANR	5094011	Argument	& fifo_control		5093902	0					
ANR	5094012	UnaryOperationExpression	& fifo_control		5093902	0					
ANR	5094013	UnaryOperator	&		5093902	0					
ANR	5094014	Identifier	fifo_control		5093902	1					
ANR	5094015	ExpressionStatement	gahp_sem_up ( & print_control )	1226:1:31915:31942	5093902	9	True				
ANR	5094016	CallExpression	gahp_sem_up ( & print_control )		5093902	0					
ANR	5094017	Callee	gahp_sem_up		5093902	0					
ANR	5094018	Identifier	gahp_sem_up		5093902	0					
ANR	5094019	ArgumentList	& print_control		5093902	1					
ANR	5094020	Argument	& print_control		5093902	0					
ANR	5094021	UnaryOperationExpression	& print_control		5093902	0					
ANR	5094022	UnaryOperator	&		5093902	0					
ANR	5094023	Identifier	print_control		5093902	1					
ANR	5094024	ExpressionStatement	all_args_free ( user_arg )	1228:1:31946:31969	5093902	10	True				
ANR	5094025	CallExpression	all_args_free ( user_arg )		5093902	0					
ANR	5094026	Callee	all_args_free		5093902	0					
ANR	5094027	Identifier	all_args_free		5093902	0					
ANR	5094028	ArgumentList	user_arg		5093902	1					
ANR	5094029	Argument	user_arg		5093902	0					
ANR	5094030	Identifier	user_arg		5093902	0					
ANR	5094031	ReturnStatement	return 0 ;	1230:1:31973:31981	5093902	11	True				
ANR	5094032	PrimaryExpression	0		5093902	0					
ANR	5094033	ReturnType	int		5093902	1					
ANR	5094034	Identifier	handle_results		5093902	2					
ANR	5094035	ParameterList	void * user_arg		5093902	3					
ANR	5094036	Parameter	void * user_arg	1207:15:31497:31511	5093902	0	True				
ANR	5094037	ParameterType	void *		5093902	0					
ANR	5094038	Identifier	user_arg		5093902	1					
ANR	5094039	CFGEntryNode	ENTRY		5093902		True				
ANR	5094040	CFGExitNode	EXIT		5093902		True				
ANR	5094041	Symbol	user_arg		5093902						
ANR	5094042	Symbol	output		5093902						
ANR	5094043	Symbol	count		5093902						
ANR	5094044	Symbol	i		5093902						
ANR	5094045	Symbol	input_line		5093902						
ANR	5094046	Symbol	& result_fifo		5093902						
ANR	5094047	Symbol	& fifo_control		5093902						
ANR	5094048	Symbol	globus_fifo_size		5093902						
ANR	5094049	Symbol	ResultsPending		5093902						
ANR	5094050	Symbol	globus_fifo_dequeue		5093902						
ANR	5094051	Symbol	& print_control		5093902						
ANR	5094052	Function	handle_version	1233:0:31986:32174							
ANR	5094053	FunctionDef	handle_version (void * user_arg)		5094052	0					
ANR	5094054	CompoundStatement		1235:0:32023:32174	5094052	0					
ANR	5094055	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1236:1:32026:32064	5094052	0	True				
ANR	5094056	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094052	0					
ANR	5094057	IdentifierDeclType	char * *		5094052	0					
ANR	5094058	Identifier	input_line		5094052	1					
ANR	5094059	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094052	2		=			
ANR	5094060	Identifier	input_line		5094052	0					
ANR	5094061	CastExpression	( char * * ) user_arg		5094052	1					
ANR	5094062	CastTarget	char * *		5094052	0					
ANR	5094063	Identifier	user_arg		5094052	1					
ANR	5094064	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , VersionString )"	1237:1:32067:32103	5094052	1	True				
ANR	5094065	CallExpression	"gahp_printf ( ""S %s\\n"" , VersionString )"		5094052	0					
ANR	5094066	Callee	gahp_printf		5094052	0					
ANR	5094067	Identifier	gahp_printf		5094052	0					
ANR	5094068	ArgumentList	"""S %s\\n"""		5094052	1					
ANR	5094069	Argument	"""S %s\\n"""		5094052	0					
ANR	5094070	PrimaryExpression	"""S %s\\n"""		5094052	0					
ANR	5094071	Argument	VersionString		5094052	1					
ANR	5094072	Identifier	VersionString		5094052	0					
ANR	5094073	ExpressionStatement	gahp_sem_up ( & print_control )	1239:1:32107:32134	5094052	2	True				
ANR	5094074	CallExpression	gahp_sem_up ( & print_control )		5094052	0					
ANR	5094075	Callee	gahp_sem_up		5094052	0					
ANR	5094076	Identifier	gahp_sem_up		5094052	0					
ANR	5094077	ArgumentList	& print_control		5094052	1					
ANR	5094078	Argument	& print_control		5094052	0					
ANR	5094079	UnaryOperationExpression	& print_control		5094052	0					
ANR	5094080	UnaryOperator	&		5094052	0					
ANR	5094081	Identifier	print_control		5094052	1					
ANR	5094082	ExpressionStatement	all_args_free ( user_arg )	1241:1:32138:32161	5094052	3	True				
ANR	5094083	CallExpression	all_args_free ( user_arg )		5094052	0					
ANR	5094084	Callee	all_args_free		5094052	0					
ANR	5094085	Identifier	all_args_free		5094052	0					
ANR	5094086	ArgumentList	user_arg		5094052	1					
ANR	5094087	Argument	user_arg		5094052	0					
ANR	5094088	Identifier	user_arg		5094052	0					
ANR	5094089	ReturnStatement	return 0 ;	1242:1:32164:32172	5094052	4	True				
ANR	5094090	PrimaryExpression	0		5094052	0					
ANR	5094091	ReturnType	int		5094052	1					
ANR	5094092	Identifier	handle_version		5094052	2					
ANR	5094093	ParameterList	void * user_arg		5094052	3					
ANR	5094094	Parameter	void * user_arg	1234:15:32006:32020	5094052	0	True				
ANR	5094095	ParameterType	void *		5094052	0					
ANR	5094096	Identifier	user_arg		5094052	1					
ANR	5094097	CFGEntryNode	ENTRY		5094052		True				
ANR	5094098	CFGExitNode	EXIT		5094052		True				
ANR	5094099	Symbol	user_arg		5094052						
ANR	5094100	Symbol	VersionString		5094052						
ANR	5094101	Symbol	input_line		5094052						
ANR	5094102	Symbol	& print_control		5094052						
ANR	5094103	Function	handle_gram_error_string	1245:0:32177:32750							
ANR	5094104	FunctionDef	handle_gram_error_string (void * user_arg)		5094103	0					
ANR	5094105	CompoundStatement		1247:0:32224:32750	5094103	0					
ANR	5094106	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1248:1:32227:32265	5094103	0	True				
ANR	5094107	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094103	0					
ANR	5094108	IdentifierDeclType	char * *		5094103	0					
ANR	5094109	Identifier	input_line		5094103	1					
ANR	5094110	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094103	2		=			
ANR	5094111	Identifier	input_line		5094103	0					
ANR	5094112	CastExpression	( char * * ) user_arg		5094103	1					
ANR	5094113	CastTarget	char * *		5094103	0					
ANR	5094114	Identifier	user_arg		5094103	1					
ANR	5094115	IdentifierDeclStatement	char * output ;	1249:1:32268:32280	5094103	1	True				
ANR	5094116	IdentifierDecl	* output		5094103	0					
ANR	5094117	IdentifierDeclType	char *		5094103	0					
ANR	5094118	Identifier	output		5094103	1					
ANR	5094119	IdentifierDeclStatement	const char * error_string = NULL ;	1250:1:32283:32314	5094103	2	True				
ANR	5094120	IdentifierDecl	* error_string = NULL		5094103	0					
ANR	5094121	IdentifierDeclType	const char *		5094103	0					
ANR	5094122	Identifier	error_string		5094103	1					
ANR	5094123	AssignmentExpression	* error_string = NULL		5094103	2		=			
ANR	5094124	Identifier	NULL		5094103	0					
ANR	5094125	Identifier	NULL		5094103	1					
ANR	5094126	IdentifierDeclStatement	int error_code ;	1251:1:32317:32331	5094103	3	True				
ANR	5094127	IdentifierDecl	error_code		5094103	0					
ANR	5094128	IdentifierDeclType	int		5094103	0					
ANR	5094129	Identifier	error_code		5094103	1					
ANR	5094130	IfStatement	"if ( ! process_int_arg ( input_line [ 1 ] , & error_code ) )"		5094103	4					
ANR	5094131	Condition	"! process_int_arg ( input_line [ 1 ] , & error_code )"	1253:8:32342:32385	5094103	0	True				
ANR	5094132	UnaryOperationExpression	"! process_int_arg ( input_line [ 1 ] , & error_code )"		5094103	0					
ANR	5094133	UnaryOperator	!		5094103	0					
ANR	5094134	CallExpression	"process_int_arg ( input_line [ 1 ] , & error_code )"		5094103	1					
ANR	5094135	Callee	process_int_arg		5094103	0					
ANR	5094136	Identifier	process_int_arg		5094103	0					
ANR	5094137	ArgumentList	input_line [ 1 ]		5094103	1					
ANR	5094138	Argument	input_line [ 1 ]		5094103	0					
ANR	5094139	ArrayIndexing	input_line [ 1 ]		5094103	0					
ANR	5094140	Identifier	input_line		5094103	0					
ANR	5094141	PrimaryExpression	1		5094103	1					
ANR	5094142	Argument	& error_code		5094103	1					
ANR	5094143	UnaryOperationExpression	& error_code		5094103	0					
ANR	5094144	UnaryOperator	&		5094103	0					
ANR	5094145	Identifier	error_code		5094103	1					
ANR	5094146	CompoundStatement		7:55:164:164	5094103	1					
ANR	5094147	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1254:2:32393:32414	5094103	0	True				
ANR	5094148	CallExpression	HANDLE_SYNTAX_ERROR ( )		5094103	0					
ANR	5094149	Callee	HANDLE_SYNTAX_ERROR		5094103	0					
ANR	5094150	Identifier	HANDLE_SYNTAX_ERROR		5094103	0					
ANR	5094151	ArgumentList			5094103	1					
ANR	5094152	ReturnStatement	return 0 ;	1255:8:32424:32432	5094103	1	True				
ANR	5094153	PrimaryExpression	0		5094103	0					
ANR	5094154	ExpressionStatement	error_string = globus_gram_client_error_string ( error_code )	1258:1:32442:32500	5094103	5	True				
ANR	5094155	AssignmentExpression	error_string = globus_gram_client_error_string ( error_code )		5094103	0		=			
ANR	5094156	Identifier	error_string		5094103	0					
ANR	5094157	CallExpression	globus_gram_client_error_string ( error_code )		5094103	1					
ANR	5094158	Callee	globus_gram_client_error_string		5094103	0					
ANR	5094159	Identifier	globus_gram_client_error_string		5094103	0					
ANR	5094160	ArgumentList	error_code		5094103	1					
ANR	5094161	Argument	error_code		5094103	0					
ANR	5094162	Identifier	error_code		5094103	0					
ANR	5094163	IfStatement	if ( error_string )		5094103	6					
ANR	5094164	Condition	error_string	1260:5:32508:32519	5094103	0	True				
ANR	5094165	Identifier	error_string		5094103	0					
ANR	5094166	CompoundStatement		14:20:298:298	5094103	1					
ANR	5094167	ExpressionStatement	output = escape_spaces ( error_string )	1261:2:32527:32565	5094103	0	True				
ANR	5094168	AssignmentExpression	output = escape_spaces ( error_string )		5094103	0		=			
ANR	5094169	Identifier	output		5094103	0					
ANR	5094170	CallExpression	escape_spaces ( error_string )		5094103	1					
ANR	5094171	Callee	escape_spaces		5094103	0					
ANR	5094172	Identifier	escape_spaces		5094103	0					
ANR	5094173	ArgumentList	error_string		5094103	1					
ANR	5094174	Argument	error_string		5094103	0					
ANR	5094175	Identifier	error_string		5094103	0					
ANR	5094176	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , output )"	1262:2:32569:32598	5094103	1	True				
ANR	5094177	CallExpression	"gahp_printf ( ""S %s\\n"" , output )"		5094103	0					
ANR	5094178	Callee	gahp_printf		5094103	0					
ANR	5094179	Identifier	gahp_printf		5094103	0					
ANR	5094180	ArgumentList	"""S %s\\n"""		5094103	1					
ANR	5094181	Argument	"""S %s\\n"""		5094103	0					
ANR	5094182	PrimaryExpression	"""S %s\\n"""		5094103	0					
ANR	5094183	Argument	output		5094103	1					
ANR	5094184	Identifier	output		5094103	0					
ANR	5094185	ExpressionStatement	globus_libc_free ( output )	1263:2:32603:32627	5094103	2	True				
ANR	5094186	CallExpression	globus_libc_free ( output )		5094103	0					
ANR	5094187	Callee	globus_libc_free		5094103	0					
ANR	5094188	Identifier	globus_libc_free		5094103	0					
ANR	5094189	ArgumentList	output		5094103	1					
ANR	5094190	Argument	output		5094103	0					
ANR	5094191	Identifier	output		5094103	0					
ANR	5094192	ElseStatement	else		5094103	0					
ANR	5094193	CompoundStatement		18:7:411:411	5094103	0					
ANR	5094194	ExpressionStatement	"gahp_printf ( ""F Unknown\\\\ Error\\n"" )"	1265:2:32640:32674	5094103	0	True				
ANR	5094195	CallExpression	"gahp_printf ( ""F Unknown\\\\ Error\\n"" )"		5094103	0					
ANR	5094196	Callee	gahp_printf		5094103	0					
ANR	5094197	Identifier	gahp_printf		5094103	0					
ANR	5094198	ArgumentList	"""F Unknown\\\\ Error\\n"""		5094103	1					
ANR	5094199	Argument	"""F Unknown\\\\ Error\\n"""		5094103	0					
ANR	5094200	PrimaryExpression	"""F Unknown\\\\ Error\\n"""		5094103	0					
ANR	5094201	ExpressionStatement	gahp_sem_up ( & print_control )	1268:1:32682:32709	5094103	7	True				
ANR	5094202	CallExpression	gahp_sem_up ( & print_control )		5094103	0					
ANR	5094203	Callee	gahp_sem_up		5094103	0					
ANR	5094204	Identifier	gahp_sem_up		5094103	0					
ANR	5094205	ArgumentList	& print_control		5094103	1					
ANR	5094206	Argument	& print_control		5094103	0					
ANR	5094207	UnaryOperationExpression	& print_control		5094103	0					
ANR	5094208	UnaryOperator	&		5094103	0					
ANR	5094209	Identifier	print_control		5094103	1					
ANR	5094210	ExpressionStatement	all_args_free ( user_arg )	1270:1:32713:32736	5094103	8	True				
ANR	5094211	CallExpression	all_args_free ( user_arg )		5094103	0					
ANR	5094212	Callee	all_args_free		5094103	0					
ANR	5094213	Identifier	all_args_free		5094103	0					
ANR	5094214	ArgumentList	user_arg		5094103	1					
ANR	5094215	Argument	user_arg		5094103	0					
ANR	5094216	Identifier	user_arg		5094103	0					
ANR	5094217	ReturnStatement	return 0 ;	1271:1:32739:32747	5094103	9	True				
ANR	5094218	PrimaryExpression	0		5094103	0					
ANR	5094219	ReturnType	int		5094103	1					
ANR	5094220	Identifier	handle_gram_error_string		5094103	2					
ANR	5094221	ParameterList	void * user_arg		5094103	3					
ANR	5094222	Parameter	void * user_arg	1246:26:32207:32221	5094103	0	True				
ANR	5094223	ParameterType	void *		5094103	0					
ANR	5094224	Identifier	user_arg		5094103	1					
ANR	5094225	CFGEntryNode	ENTRY		5094103		True				
ANR	5094226	CFGExitNode	EXIT		5094103		True				
ANR	5094227	Symbol	user_arg		5094103						
ANR	5094228	Symbol	output		5094103						
ANR	5094229	Symbol	error_string		5094103						
ANR	5094230	Symbol	* input_line		5094103						
ANR	5094231	Symbol	globus_gram_client_error_string		5094103						
ANR	5094232	Symbol	NULL		5094103						
ANR	5094233	Symbol	input_line		5094103						
ANR	5094234	Symbol	error_code		5094103						
ANR	5094235	Symbol	process_int_arg		5094103						
ANR	5094236	Symbol	escape_spaces		5094103						
ANR	5094237	Symbol	& error_code		5094103						
ANR	5094238	Symbol	& print_control		5094103						
ANR	5094239	Function	handle_async_mode_on	1275:0:32753:33032							
ANR	5094240	FunctionDef	handle_async_mode_on (void * user_arg)		5094239	0					
ANR	5094241	CompoundStatement		1277:0:32796:33032	5094239	0					
ANR	5094242	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1278:1:32799:32837	5094239	0	True				
ANR	5094243	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094239	0					
ANR	5094244	IdentifierDeclType	char * *		5094239	0					
ANR	5094245	Identifier	input_line		5094239	1					
ANR	5094246	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094239	2		=			
ANR	5094247	Identifier	input_line		5094239	0					
ANR	5094248	CastExpression	( char * * ) user_arg		5094239	1					
ANR	5094249	CastTarget	char * *		5094239	0					
ANR	5094250	Identifier	user_arg		5094239	1					
ANR	5094251	ExpressionStatement	gahp_sem_down ( & fifo_control )	1280:1:32841:32869	5094239	1	True				
ANR	5094252	CallExpression	gahp_sem_down ( & fifo_control )		5094239	0					
ANR	5094253	Callee	gahp_sem_down		5094239	0					
ANR	5094254	Identifier	gahp_sem_down		5094239	0					
ANR	5094255	ArgumentList	& fifo_control		5094239	1					
ANR	5094256	Argument	& fifo_control		5094239	0					
ANR	5094257	UnaryOperationExpression	& fifo_control		5094239	0					
ANR	5094258	UnaryOperator	&		5094239	0					
ANR	5094259	Identifier	fifo_control		5094239	1					
ANR	5094260	ExpressionStatement	AsyncResults = 1	1281:1:32872:32888	5094239	2	True				
ANR	5094261	AssignmentExpression	AsyncResults = 1		5094239	0		=			
ANR	5094262	Identifier	AsyncResults		5094239	0					
ANR	5094263	PrimaryExpression	1		5094239	1					
ANR	5094264	ExpressionStatement	ResultsPending = 0	1282:1:32891:32909	5094239	3	True				
ANR	5094265	AssignmentExpression	ResultsPending = 0		5094239	0		=			
ANR	5094266	Identifier	ResultsPending		5094239	0					
ANR	5094267	PrimaryExpression	0		5094239	1					
ANR	5094268	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1283:1:32912:32930	5094239	4	True				
ANR	5094269	CallExpression	"gahp_printf ( ""S\\n"" )"		5094239	0					
ANR	5094270	Callee	gahp_printf		5094239	0					
ANR	5094271	Identifier	gahp_printf		5094239	0					
ANR	5094272	ArgumentList	"""S\\n"""		5094239	1					
ANR	5094273	Argument	"""S\\n"""		5094239	0					
ANR	5094274	PrimaryExpression	"""S\\n"""		5094239	0					
ANR	5094275	ExpressionStatement	gahp_sem_up ( & fifo_control )	1285:1:32935:32961	5094239	5	True				
ANR	5094276	CallExpression	gahp_sem_up ( & fifo_control )		5094239	0					
ANR	5094277	Callee	gahp_sem_up		5094239	0					
ANR	5094278	Identifier	gahp_sem_up		5094239	0					
ANR	5094279	ArgumentList	& fifo_control		5094239	1					
ANR	5094280	Argument	& fifo_control		5094239	0					
ANR	5094281	UnaryOperationExpression	& fifo_control		5094239	0					
ANR	5094282	UnaryOperator	&		5094239	0					
ANR	5094283	Identifier	fifo_control		5094239	1					
ANR	5094284	ExpressionStatement	gahp_sem_up ( & print_control )	1286:1:32964:32991	5094239	6	True				
ANR	5094285	CallExpression	gahp_sem_up ( & print_control )		5094239	0					
ANR	5094286	Callee	gahp_sem_up		5094239	0					
ANR	5094287	Identifier	gahp_sem_up		5094239	0					
ANR	5094288	ArgumentList	& print_control		5094239	1					
ANR	5094289	Argument	& print_control		5094239	0					
ANR	5094290	UnaryOperationExpression	& print_control		5094239	0					
ANR	5094291	UnaryOperator	&		5094239	0					
ANR	5094292	Identifier	print_control		5094239	1					
ANR	5094293	ExpressionStatement	all_args_free ( user_arg )	1288:1:32995:33018	5094239	7	True				
ANR	5094294	CallExpression	all_args_free ( user_arg )		5094239	0					
ANR	5094295	Callee	all_args_free		5094239	0					
ANR	5094296	Identifier	all_args_free		5094239	0					
ANR	5094297	ArgumentList	user_arg		5094239	1					
ANR	5094298	Argument	user_arg		5094239	0					
ANR	5094299	Identifier	user_arg		5094239	0					
ANR	5094300	ReturnStatement	return 0 ;	1289:1:33021:33029	5094239	8	True				
ANR	5094301	PrimaryExpression	0		5094239	0					
ANR	5094302	ReturnType	int		5094239	1					
ANR	5094303	Identifier	handle_async_mode_on		5094239	2					
ANR	5094304	ParameterList	void * user_arg		5094239	3					
ANR	5094305	Parameter	void * user_arg	1276:22:32779:32793	5094239	0	True				
ANR	5094306	ParameterType	void *		5094239	0					
ANR	5094307	Identifier	user_arg		5094239	1					
ANR	5094308	CFGEntryNode	ENTRY		5094239		True				
ANR	5094309	CFGExitNode	EXIT		5094239		True				
ANR	5094310	Symbol	user_arg		5094239						
ANR	5094311	Symbol	AsyncResults		5094239						
ANR	5094312	Symbol	input_line		5094239						
ANR	5094313	Symbol	& fifo_control		5094239						
ANR	5094314	Symbol	ResultsPending		5094239						
ANR	5094315	Symbol	& print_control		5094239						
ANR	5094316	Function	handle_async_mode_off	1293:0:33035:33314							
ANR	5094317	FunctionDef	handle_async_mode_off (void * user_arg)		5094316	0					
ANR	5094318	CompoundStatement		1295:0:33079:33314	5094316	0					
ANR	5094319	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1296:1:33082:33120	5094316	0	True				
ANR	5094320	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094316	0					
ANR	5094321	IdentifierDeclType	char * *		5094316	0					
ANR	5094322	Identifier	input_line		5094316	1					
ANR	5094323	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094316	2		=			
ANR	5094324	Identifier	input_line		5094316	0					
ANR	5094325	CastExpression	( char * * ) user_arg		5094316	1					
ANR	5094326	CastTarget	char * *		5094316	0					
ANR	5094327	Identifier	user_arg		5094316	1					
ANR	5094328	ExpressionStatement	gahp_sem_down ( & fifo_control )	1298:1:33124:33152	5094316	1	True				
ANR	5094329	CallExpression	gahp_sem_down ( & fifo_control )		5094316	0					
ANR	5094330	Callee	gahp_sem_down		5094316	0					
ANR	5094331	Identifier	gahp_sem_down		5094316	0					
ANR	5094332	ArgumentList	& fifo_control		5094316	1					
ANR	5094333	Argument	& fifo_control		5094316	0					
ANR	5094334	UnaryOperationExpression	& fifo_control		5094316	0					
ANR	5094335	UnaryOperator	&		5094316	0					
ANR	5094336	Identifier	fifo_control		5094316	1					
ANR	5094337	ExpressionStatement	AsyncResults = 0	1299:1:33155:33171	5094316	2	True				
ANR	5094338	AssignmentExpression	AsyncResults = 0		5094316	0		=			
ANR	5094339	Identifier	AsyncResults		5094316	0					
ANR	5094340	PrimaryExpression	0		5094316	1					
ANR	5094341	ExpressionStatement	ResultsPending = 0	1300:1:33174:33192	5094316	3	True				
ANR	5094342	AssignmentExpression	ResultsPending = 0		5094316	0		=			
ANR	5094343	Identifier	ResultsPending		5094316	0					
ANR	5094344	PrimaryExpression	0		5094316	1					
ANR	5094345	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1301:1:33195:33213	5094316	4	True				
ANR	5094346	CallExpression	"gahp_printf ( ""S\\n"" )"		5094316	0					
ANR	5094347	Callee	gahp_printf		5094316	0					
ANR	5094348	Identifier	gahp_printf		5094316	0					
ANR	5094349	ArgumentList	"""S\\n"""		5094316	1					
ANR	5094350	Argument	"""S\\n"""		5094316	0					
ANR	5094351	PrimaryExpression	"""S\\n"""		5094316	0					
ANR	5094352	ExpressionStatement	gahp_sem_up ( & fifo_control )	1302:1:33217:33243	5094316	5	True				
ANR	5094353	CallExpression	gahp_sem_up ( & fifo_control )		5094316	0					
ANR	5094354	Callee	gahp_sem_up		5094316	0					
ANR	5094355	Identifier	gahp_sem_up		5094316	0					
ANR	5094356	ArgumentList	& fifo_control		5094316	1					
ANR	5094357	Argument	& fifo_control		5094316	0					
ANR	5094358	UnaryOperationExpression	& fifo_control		5094316	0					
ANR	5094359	UnaryOperator	&		5094316	0					
ANR	5094360	Identifier	fifo_control		5094316	1					
ANR	5094361	ExpressionStatement	gahp_sem_up ( & print_control )	1303:1:33246:33273	5094316	6	True				
ANR	5094362	CallExpression	gahp_sem_up ( & print_control )		5094316	0					
ANR	5094363	Callee	gahp_sem_up		5094316	0					
ANR	5094364	Identifier	gahp_sem_up		5094316	0					
ANR	5094365	ArgumentList	& print_control		5094316	1					
ANR	5094366	Argument	& print_control		5094316	0					
ANR	5094367	UnaryOperationExpression	& print_control		5094316	0					
ANR	5094368	UnaryOperator	&		5094316	0					
ANR	5094369	Identifier	print_control		5094316	1					
ANR	5094370	ExpressionStatement	all_args_free ( user_arg )	1305:1:33277:33300	5094316	7	True				
ANR	5094371	CallExpression	all_args_free ( user_arg )		5094316	0					
ANR	5094372	Callee	all_args_free		5094316	0					
ANR	5094373	Identifier	all_args_free		5094316	0					
ANR	5094374	ArgumentList	user_arg		5094316	1					
ANR	5094375	Argument	user_arg		5094316	0					
ANR	5094376	Identifier	user_arg		5094316	0					
ANR	5094377	ReturnStatement	return 0 ;	1306:1:33303:33311	5094316	8	True				
ANR	5094378	PrimaryExpression	0		5094316	0					
ANR	5094379	ReturnType	int		5094316	1					
ANR	5094380	Identifier	handle_async_mode_off		5094316	2					
ANR	5094381	ParameterList	void * user_arg		5094316	3					
ANR	5094382	Parameter	void * user_arg	1294:23:33062:33076	5094316	0	True				
ANR	5094383	ParameterType	void *		5094316	0					
ANR	5094384	Identifier	user_arg		5094316	1					
ANR	5094385	CFGEntryNode	ENTRY		5094316		True				
ANR	5094386	CFGExitNode	EXIT		5094316		True				
ANR	5094387	Symbol	user_arg		5094316						
ANR	5094388	Symbol	AsyncResults		5094316						
ANR	5094389	Symbol	input_line		5094316						
ANR	5094390	Symbol	& fifo_control		5094316						
ANR	5094391	Symbol	ResultsPending		5094316						
ANR	5094392	Symbol	& print_control		5094316						
ANR	5094393	Function	handle_refresh_proxy_from_file	1310:0:33317:34499							
ANR	5094394	FunctionDef	handle_refresh_proxy_from_file (void * user_arg)		5094393	0					
ANR	5094395	CompoundStatement		1312:0:33369:34499	5094393	0					
ANR	5094396	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1313:1:33372:33410	5094393	0	True				
ANR	5094397	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094393	0					
ANR	5094398	IdentifierDeclType	char * *		5094393	0					
ANR	5094399	Identifier	input_line		5094393	1					
ANR	5094400	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094393	2		=			
ANR	5094401	Identifier	input_line		5094393	0					
ANR	5094402	CastExpression	( char * * ) user_arg		5094393	1					
ANR	5094403	CastTarget	char * *		5094393	0					
ANR	5094404	Identifier	user_arg		5094393	1					
ANR	5094405	IdentifierDeclStatement	"char * file_name , * environ_variable ;"	1314:1:33413:33447	5094393	1	True				
ANR	5094406	IdentifierDecl	* file_name		5094393	0					
ANR	5094407	IdentifierDeclType	char *		5094393	0					
ANR	5094408	Identifier	file_name		5094393	1					
ANR	5094409	IdentifierDecl	* environ_variable		5094393	1					
ANR	5094410	IdentifierDeclType	char *		5094393	0					
ANR	5094411	Identifier	environ_variable		5094393	1					
ANR	5094412	IdentifierDeclStatement	gss_cred_id_t credential_handle = GSS_C_NO_CREDENTIAL ;	1315:1:33450:33503	5094393	2	True				
ANR	5094413	IdentifierDecl	credential_handle = GSS_C_NO_CREDENTIAL		5094393	0					
ANR	5094414	IdentifierDeclType	gss_cred_id_t		5094393	0					
ANR	5094415	Identifier	credential_handle		5094393	1					
ANR	5094416	AssignmentExpression	credential_handle = GSS_C_NO_CREDENTIAL		5094393	2		=			
ANR	5094417	Identifier	GSS_C_NO_CREDENTIAL		5094393	0					
ANR	5094418	Identifier	GSS_C_NO_CREDENTIAL		5094393	1					
ANR	5094419	IdentifierDeclStatement	OM_uint32 major_status ;	1316:1:33506:33528	5094393	3	True				
ANR	5094420	IdentifierDecl	major_status		5094393	0					
ANR	5094421	IdentifierDeclType	OM_uint32		5094393	0					
ANR	5094422	Identifier	major_status		5094393	1					
ANR	5094423	IdentifierDeclStatement	OM_uint32 minor_status ;	1317:1:33532:33554	5094393	4	True				
ANR	5094424	IdentifierDecl	minor_status		5094393	0					
ANR	5094425	IdentifierDeclType	OM_uint32		5094393	0					
ANR	5094426	Identifier	minor_status		5094393	1					
ANR	5094427	IdentifierDeclStatement	int result ;	1319:1:33559:33569	5094393	5	True				
ANR	5094428	IdentifierDecl	result		5094393	0					
ANR	5094429	IdentifierDeclType	int		5094393	0					
ANR	5094430	Identifier	result		5094393	1					
ANR	5094431	ExpressionStatement	file_name = NULL	1321:1:33573:33589	5094393	6	True				
ANR	5094432	AssignmentExpression	file_name = NULL		5094393	0		=			
ANR	5094433	Identifier	file_name		5094393	0					
ANR	5094434	Identifier	NULL		5094393	1					
ANR	5094435	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & file_name ) )"		5094393	7					
ANR	5094436	Condition	"! process_string_arg ( input_line [ 1 ] , & file_name )"	1323:4:33596:33641	5094393	0	True				
ANR	5094437	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & file_name )"		5094393	0					
ANR	5094438	UnaryOperator	!		5094393	0					
ANR	5094439	CallExpression	"process_string_arg ( input_line [ 1 ] , & file_name )"		5094393	1					
ANR	5094440	Callee	process_string_arg		5094393	0					
ANR	5094441	Identifier	process_string_arg		5094393	0					
ANR	5094442	ArgumentList	input_line [ 1 ]		5094393	1					
ANR	5094443	Argument	input_line [ 1 ]		5094393	0					
ANR	5094444	ArrayIndexing	input_line [ 1 ]		5094393	0					
ANR	5094445	Identifier	input_line		5094393	0					
ANR	5094446	PrimaryExpression	1		5094393	1					
ANR	5094447	Argument	& file_name		5094393	1					
ANR	5094448	UnaryOperationExpression	& file_name		5094393	0					
ANR	5094449	UnaryOperator	&		5094393	0					
ANR	5094450	Identifier	file_name		5094393	1					
ANR	5094451	CompoundStatement		12:53:275:275	5094393	1					
ANR	5094452	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1324:2:33649:33670	5094393	0	True				
ANR	5094453	CallExpression	HANDLE_SYNTAX_ERROR ( )		5094393	0					
ANR	5094454	Callee	HANDLE_SYNTAX_ERROR		5094393	0					
ANR	5094455	Identifier	HANDLE_SYNTAX_ERROR		5094393	0					
ANR	5094456	ArgumentList			5094393	1					
ANR	5094457	ReturnStatement	return 0 ;	1325:2:33674:33682	5094393	1	True				
ANR	5094458	PrimaryExpression	0		5094393	0					
ANR	5094459	IfStatement	if ( file_name )		5094393	8					
ANR	5094460	Condition	file_name	1329:4:33753:33761	5094393	0	True				
ANR	5094461	Identifier	file_name		5094393	0					
ANR	5094462	CompoundStatement		18:15:394:394	5094393	1					
ANR	5094463	ExpressionStatement	environ_variable = ( char * ) globus_libc_malloc ( strlen ( file_name ) + 1 )	1330:2:33768:33837	5094393	0	True				
ANR	5094464	AssignmentExpression	environ_variable = ( char * ) globus_libc_malloc ( strlen ( file_name ) + 1 )		5094393	0		=			
ANR	5094465	Identifier	environ_variable		5094393	0					
ANR	5094466	CastExpression	( char * ) globus_libc_malloc ( strlen ( file_name ) + 1 )		5094393	1					
ANR	5094467	CastTarget	char *		5094393	0					
ANR	5094468	CallExpression	globus_libc_malloc ( strlen ( file_name ) + 1 )		5094393	1					
ANR	5094469	Callee	globus_libc_malloc		5094393	0					
ANR	5094470	Identifier	globus_libc_malloc		5094393	0					
ANR	5094471	ArgumentList	strlen ( file_name ) + 1		5094393	1					
ANR	5094472	Argument	strlen ( file_name ) + 1		5094393	0					
ANR	5094473	AdditiveExpression	strlen ( file_name ) + 1		5094393	0		+			
ANR	5094474	CallExpression	strlen ( file_name )		5094393	0					
ANR	5094475	Callee	strlen		5094393	0					
ANR	5094476	Identifier	strlen		5094393	0					
ANR	5094477	ArgumentList	file_name		5094393	1					
ANR	5094478	Argument	file_name		5094393	0					
ANR	5094479	Identifier	file_name		5094393	0					
ANR	5094480	PrimaryExpression	1		5094393	1					
ANR	5094481	ExpressionStatement	"strcpy ( environ_variable , file_name )"	1331:2:33841:33876	5094393	1	True				
ANR	5094482	CallExpression	"strcpy ( environ_variable , file_name )"		5094393	0					
ANR	5094483	Callee	strcpy		5094393	0					
ANR	5094484	Identifier	strcpy		5094393	0					
ANR	5094485	ArgumentList	environ_variable		5094393	1					
ANR	5094486	Argument	environ_variable		5094393	0					
ANR	5094487	Identifier	environ_variable		5094393	0					
ANR	5094488	Argument	file_name		5094393	1					
ANR	5094489	Identifier	file_name		5094393	0					
ANR	5094490	ExpressionStatement	"globus_libc_setenv ( ""X509_USER_PROXY"" , environ_variable , 1 )"	1332:2:33881:33939	5094393	2	True				
ANR	5094491	CallExpression	"globus_libc_setenv ( ""X509_USER_PROXY"" , environ_variable , 1 )"		5094393	0					
ANR	5094492	Callee	globus_libc_setenv		5094393	0					
ANR	5094493	Identifier	globus_libc_setenv		5094393	0					
ANR	5094494	ArgumentList	"""X509_USER_PROXY"""		5094393	1					
ANR	5094495	Argument	"""X509_USER_PROXY"""		5094393	0					
ANR	5094496	PrimaryExpression	"""X509_USER_PROXY"""		5094393	0					
ANR	5094497	Argument	environ_variable		5094393	1					
ANR	5094498	Identifier	environ_variable		5094393	0					
ANR	5094499	Argument	1		5094393	2					
ANR	5094500	PrimaryExpression	1		5094393	0					
ANR	5094501	ExpressionStatement	"major_status = globus_gss_assist_acquire_cred ( & minor_status , GSS_C_INITIATE , & credential_handle )"	1336:1:34015:34143	5094393	9	True				
ANR	5094502	AssignmentExpression	"major_status = globus_gss_assist_acquire_cred ( & minor_status , GSS_C_INITIATE , & credential_handle )"		5094393	0		=			
ANR	5094503	Identifier	major_status		5094393	0					
ANR	5094504	CallExpression	"globus_gss_assist_acquire_cred ( & minor_status , GSS_C_INITIATE , & credential_handle )"		5094393	1					
ANR	5094505	Callee	globus_gss_assist_acquire_cred		5094393	0					
ANR	5094506	Identifier	globus_gss_assist_acquire_cred		5094393	0					
ANR	5094507	ArgumentList	& minor_status		5094393	1					
ANR	5094508	Argument	& minor_status		5094393	0					
ANR	5094509	UnaryOperationExpression	& minor_status		5094393	0					
ANR	5094510	UnaryOperator	&		5094393	0					
ANR	5094511	Identifier	minor_status		5094393	1					
ANR	5094512	Argument	GSS_C_INITIATE		5094393	1					
ANR	5094513	Identifier	GSS_C_INITIATE		5094393	0					
ANR	5094514	Argument	& credential_handle		5094393	2					
ANR	5094515	UnaryOperationExpression	& credential_handle		5094393	0					
ANR	5094516	UnaryOperator	&		5094393	0					
ANR	5094517	Identifier	credential_handle		5094393	1					
ANR	5094518	IfStatement	if ( major_status != GSS_S_COMPLETE )		5094393	10					
ANR	5094519	Condition	major_status != GSS_S_COMPLETE	1340:5:34152:34181	5094393	0	True				
ANR	5094520	EqualityExpression	major_status != GSS_S_COMPLETE		5094393	0		!=			
ANR	5094521	Identifier	major_status		5094393	0					
ANR	5094522	Identifier	GSS_S_COMPLETE		5094393	1					
ANR	5094523	CompoundStatement		30:1:816:816	5094393	1					
ANR	5094524	ExpressionStatement	"gahp_printf ( ""F Error\\\\ Codes:\\\\ %d\\\\ %d\\n"" , major_status , minor_status )"	1342:3:34192:34271	5094393	0	True				
ANR	5094525	CallExpression	"gahp_printf ( ""F Error\\\\ Codes:\\\\ %d\\\\ %d\\n"" , major_status , minor_status )"		5094393	0					
ANR	5094526	Callee	gahp_printf		5094393	0					
ANR	5094527	Identifier	gahp_printf		5094393	0					
ANR	5094528	ArgumentList	"""F Error\\\\ Codes:\\\\ %d\\\\ %d\\n"""		5094393	1					
ANR	5094529	Argument	"""F Error\\\\ Codes:\\\\ %d\\\\ %d\\n"""		5094393	0					
ANR	5094530	PrimaryExpression	"""F Error\\\\ Codes:\\\\ %d\\\\ %d\\n"""		5094393	0					
ANR	5094531	Argument	major_status		5094393	1					
ANR	5094532	Identifier	major_status		5094393	0					
ANR	5094533	Argument	minor_status		5094393	2					
ANR	5094534	Identifier	minor_status		5094393	0					
ANR	5094535	ExpressionStatement	gahp_sem_up ( & print_control )	1344:3:34277:34304	5094393	1	True				
ANR	5094536	CallExpression	gahp_sem_up ( & print_control )		5094393	0					
ANR	5094537	Callee	gahp_sem_up		5094393	0					
ANR	5094538	Identifier	gahp_sem_up		5094393	0					
ANR	5094539	ArgumentList	& print_control		5094393	1					
ANR	5094540	Argument	& print_control		5094393	0					
ANR	5094541	UnaryOperationExpression	& print_control		5094393	0					
ANR	5094542	UnaryOperator	&		5094393	0					
ANR	5094543	Identifier	print_control		5094393	1					
ANR	5094544	ExpressionStatement	all_args_free ( user_arg )	1345:3:34309:34332	5094393	2	True				
ANR	5094545	CallExpression	all_args_free ( user_arg )		5094393	0					
ANR	5094546	Callee	all_args_free		5094393	0					
ANR	5094547	Identifier	all_args_free		5094393	0					
ANR	5094548	ArgumentList	user_arg		5094393	1					
ANR	5094549	Argument	user_arg		5094393	0					
ANR	5094550	Identifier	user_arg		5094393	0					
ANR	5094551	ReturnStatement	return 0 ;	1346:3:34337:34345	5094393	3	True				
ANR	5094552	PrimaryExpression	0		5094393	0					
ANR	5094553	ExpressionStatement	globus_gram_client_set_credentials ( credential_handle )	1349:1:34353:34406	5094393	11	True				
ANR	5094554	CallExpression	globus_gram_client_set_credentials ( credential_handle )		5094393	0					
ANR	5094555	Callee	globus_gram_client_set_credentials		5094393	0					
ANR	5094556	Identifier	globus_gram_client_set_credentials		5094393	0					
ANR	5094557	ArgumentList	credential_handle		5094393	1					
ANR	5094558	Argument	credential_handle		5094393	0					
ANR	5094559	Identifier	credential_handle		5094393	0					
ANR	5094560	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1351:1:34410:34428	5094393	12	True				
ANR	5094561	CallExpression	"gahp_printf ( ""S\\n"" )"		5094393	0					
ANR	5094562	Callee	gahp_printf		5094393	0					
ANR	5094563	Identifier	gahp_printf		5094393	0					
ANR	5094564	ArgumentList	"""S\\n"""		5094393	1					
ANR	5094565	Argument	"""S\\n"""		5094393	0					
ANR	5094566	PrimaryExpression	"""S\\n"""		5094393	0					
ANR	5094567	ExpressionStatement	gahp_sem_up ( & print_control )	1353:1:34432:34459	5094393	13	True				
ANR	5094568	CallExpression	gahp_sem_up ( & print_control )		5094393	0					
ANR	5094569	Callee	gahp_sem_up		5094393	0					
ANR	5094570	Identifier	gahp_sem_up		5094393	0					
ANR	5094571	ArgumentList	& print_control		5094393	1					
ANR	5094572	Argument	& print_control		5094393	0					
ANR	5094573	UnaryOperationExpression	& print_control		5094393	0					
ANR	5094574	UnaryOperator	&		5094393	0					
ANR	5094575	Identifier	print_control		5094393	1					
ANR	5094576	ExpressionStatement	all_args_free ( user_arg )	1355:1:34463:34486	5094393	14	True				
ANR	5094577	CallExpression	all_args_free ( user_arg )		5094393	0					
ANR	5094578	Callee	all_args_free		5094393	0					
ANR	5094579	Identifier	all_args_free		5094393	0					
ANR	5094580	ArgumentList	user_arg		5094393	1					
ANR	5094581	Argument	user_arg		5094393	0					
ANR	5094582	Identifier	user_arg		5094393	0					
ANR	5094583	ReturnStatement	return 0 ;	1356:1:34489:34497	5094393	15	True				
ANR	5094584	PrimaryExpression	0		5094393	0					
ANR	5094585	ReturnType	int		5094393	1					
ANR	5094586	Identifier	handle_refresh_proxy_from_file		5094393	2					
ANR	5094587	ParameterList	void * user_arg		5094393	3					
ANR	5094588	Parameter	void * user_arg	1311:31:33352:33366	5094393	0	True				
ANR	5094589	ParameterType	void *		5094393	0					
ANR	5094590	Identifier	user_arg		5094393	1					
ANR	5094591	CFGEntryNode	ENTRY		5094393		True				
ANR	5094592	CFGExitNode	EXIT		5094393		True				
ANR	5094593	Symbol	user_arg		5094393						
ANR	5094594	Symbol	* input_line		5094393						
ANR	5094595	Symbol	process_string_arg		5094393						
ANR	5094596	Symbol	NULL		5094393						
ANR	5094597	Symbol	file_name		5094393						
ANR	5094598	Symbol	GSS_C_NO_CREDENTIAL		5094393						
ANR	5094599	Symbol	GSS_S_COMPLETE		5094393						
ANR	5094600	Symbol	input_line		5094393						
ANR	5094601	Symbol	environ_variable		5094393						
ANR	5094602	Symbol	& minor_status		5094393						
ANR	5094603	Symbol	credential_handle		5094393						
ANR	5094604	Symbol	GSS_C_INITIATE		5094393						
ANR	5094605	Symbol	& print_control		5094393						
ANR	5094606	Symbol	result		5094393						
ANR	5094607	Symbol	& credential_handle		5094393						
ANR	5094608	Symbol	strlen		5094393						
ANR	5094609	Symbol	globus_gss_assist_acquire_cred		5094393						
ANR	5094610	Symbol	minor_status		5094393						
ANR	5094611	Symbol	globus_libc_malloc		5094393						
ANR	5094612	Symbol	major_status		5094393						
ANR	5094613	Symbol	& file_name		5094393						
ANR	5094614	Function	handle_quit	1360:0:34503:34698							
ANR	5094615	FunctionDef	handle_quit (void * user_arg)		5094614	0					
ANR	5094616	CompoundStatement		1362:0:34537:34698	5094614	0					
ANR	5094617	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1363:1:34540:34578	5094614	0	True				
ANR	5094618	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094614	0					
ANR	5094619	IdentifierDeclType	char * *		5094614	0					
ANR	5094620	Identifier	input_line		5094614	1					
ANR	5094621	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094614	2		=			
ANR	5094622	Identifier	input_line		5094614	0					
ANR	5094623	CastExpression	( char * * ) user_arg		5094614	1					
ANR	5094624	CastTarget	char * *		5094614	0					
ANR	5094625	Identifier	user_arg		5094614	1					
ANR	5094626	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1364:1:34581:34599	5094614	1	True				
ANR	5094627	CallExpression	"gahp_printf ( ""S\\n"" )"		5094614	0					
ANR	5094628	Callee	gahp_printf		5094614	0					
ANR	5094629	Identifier	gahp_printf		5094614	0					
ANR	5094630	ArgumentList	"""S\\n"""		5094614	1					
ANR	5094631	Argument	"""S\\n"""		5094614	0					
ANR	5094632	PrimaryExpression	"""S\\n"""		5094614	0					
ANR	5094633	ExpressionStatement	main_deactivate_globus ( )	1365:1:34602:34626	5094614	2	True				
ANR	5094634	CallExpression	main_deactivate_globus ( )		5094614	0					
ANR	5094635	Callee	main_deactivate_globus		5094614	0					
ANR	5094636	Identifier	main_deactivate_globus		5094614	0					
ANR	5094637	ArgumentList			5094614	1					
ANR	5094638	ExpressionStatement	_exit ( 0 )	1366:1:34629:34637	5094614	3	True				
ANR	5094639	CallExpression	_exit ( 0 )		5094614	0					
ANR	5094640	Callee	_exit		5094614	0					
ANR	5094641	Identifier	_exit		5094614	0					
ANR	5094642	ArgumentList	0		5094614	1					
ANR	5094643	Argument	0		5094614	0					
ANR	5094644	PrimaryExpression	0		5094614	0					
ANR	5094645	ExpressionStatement	gahp_sem_up ( & print_control )	1369:1:34658:34685	5094614	4	True				
ANR	5094646	CallExpression	gahp_sem_up ( & print_control )		5094614	0					
ANR	5094647	Callee	gahp_sem_up		5094614	0					
ANR	5094648	Identifier	gahp_sem_up		5094614	0					
ANR	5094649	ArgumentList	& print_control		5094614	1					
ANR	5094650	Argument	& print_control		5094614	0					
ANR	5094651	UnaryOperationExpression	& print_control		5094614	0					
ANR	5094652	UnaryOperator	&		5094614	0					
ANR	5094653	Identifier	print_control		5094614	1					
ANR	5094654	ReturnStatement	return 0 ;	1370:1:34688:34696	5094614	5	True				
ANR	5094655	PrimaryExpression	0		5094614	0					
ANR	5094656	ReturnType	int		5094614	1					
ANR	5094657	Identifier	handle_quit		5094614	2					
ANR	5094658	ParameterList	void * user_arg		5094614	3					
ANR	5094659	Parameter	void * user_arg	1361:12:34520:34534	5094614	0	True				
ANR	5094660	ParameterType	void *		5094614	0					
ANR	5094661	Identifier	user_arg		5094614	1					
ANR	5094662	CFGEntryNode	ENTRY		5094614		True				
ANR	5094663	CFGExitNode	EXIT		5094614		True				
ANR	5094664	Symbol	user_arg		5094614						
ANR	5094665	Symbol	input_line		5094614						
ANR	5094666	Symbol	& print_control		5094614						
ANR	5094667	Function	handle_initialize_from_file	1373:0:34701:35345							
ANR	5094668	FunctionDef	handle_initialize_from_file (void * user_arg)		5094667	0					
ANR	5094669	CompoundStatement		1375:0:34750:35345	5094667	0					
ANR	5094670	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1376:1:34753:34791	5094667	0	True				
ANR	5094671	IdentifierDecl	* * input_line = ( char * * ) user_arg		5094667	0					
ANR	5094672	IdentifierDeclType	char * *		5094667	0					
ANR	5094673	Identifier	input_line		5094667	1					
ANR	5094674	AssignmentExpression	* * input_line = ( char * * ) user_arg		5094667	2		=			
ANR	5094675	Identifier	input_line		5094667	0					
ANR	5094676	CastExpression	( char * * ) user_arg		5094667	1					
ANR	5094677	CastTarget	char * *		5094667	0					
ANR	5094678	Identifier	user_arg		5094667	1					
ANR	5094679	IdentifierDeclStatement	char * file_name ;	1377:1:34794:34809	5094667	1	True				
ANR	5094680	IdentifierDecl	* file_name		5094667	0					
ANR	5094681	IdentifierDeclType	char *		5094667	0					
ANR	5094682	Identifier	file_name		5094667	1					
ANR	5094683	IdentifierDeclStatement	int result ;	1378:1:34812:34822	5094667	2	True				
ANR	5094684	IdentifierDecl	result		5094667	0					
ANR	5094685	IdentifierDeclType	int		5094667	0					
ANR	5094686	Identifier	result		5094667	1					
ANR	5094687	ExpressionStatement	file_name = NULL	1380:1:34826:34842	5094667	3	True				
ANR	5094688	AssignmentExpression	file_name = NULL		5094667	0		=			
ANR	5094689	Identifier	file_name		5094667	0					
ANR	5094690	Identifier	NULL		5094667	1					
ANR	5094691	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & file_name ) )"		5094667	4					
ANR	5094692	Condition	"! process_string_arg ( input_line [ 1 ] , & file_name )"	1382:4:34849:34894	5094667	0	True				
ANR	5094693	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & file_name )"		5094667	0					
ANR	5094694	UnaryOperator	!		5094667	0					
ANR	5094695	CallExpression	"process_string_arg ( input_line [ 1 ] , & file_name )"		5094667	1					
ANR	5094696	Callee	process_string_arg		5094667	0					
ANR	5094697	Identifier	process_string_arg		5094667	0					
ANR	5094698	ArgumentList	input_line [ 1 ]		5094667	1					
ANR	5094699	Argument	input_line [ 1 ]		5094667	0					
ANR	5094700	ArrayIndexing	input_line [ 1 ]		5094667	0					
ANR	5094701	Identifier	input_line		5094667	0					
ANR	5094702	PrimaryExpression	1		5094667	1					
ANR	5094703	Argument	& file_name		5094667	1					
ANR	5094704	UnaryOperationExpression	& file_name		5094667	0					
ANR	5094705	UnaryOperator	&		5094667	0					
ANR	5094706	Identifier	file_name		5094667	1					
ANR	5094707	CompoundStatement		8:53:147:147	5094667	1					
ANR	5094708	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1383:2:34902:34923	5094667	0	True				
ANR	5094709	CallExpression	HANDLE_SYNTAX_ERROR ( )		5094667	0					
ANR	5094710	Callee	HANDLE_SYNTAX_ERROR		5094667	0					
ANR	5094711	Identifier	HANDLE_SYNTAX_ERROR		5094667	0					
ANR	5094712	ArgumentList			5094667	1					
ANR	5094713	ReturnStatement	return 0 ;	1384:2:34927:34935	5094667	1	True				
ANR	5094714	PrimaryExpression	0		5094667	0					
ANR	5094715	IfStatement	if ( file_name )		5094667	5					
ANR	5094716	Condition	file_name	1387:4:34945:34953	5094667	0	True				
ANR	5094717	Identifier	file_name		5094667	0					
ANR	5094718	CompoundStatement		13:15:205:205	5094667	1					
ANR	5094719	ExpressionStatement	"globus_libc_setenv ( ""X509_USER_PROXY"" , file_name , 1 )"	1388:2:34960:35011	5094667	0	True				
ANR	5094720	CallExpression	"globus_libc_setenv ( ""X509_USER_PROXY"" , file_name , 1 )"		5094667	0					
ANR	5094721	Callee	globus_libc_setenv		5094667	0					
ANR	5094722	Identifier	globus_libc_setenv		5094667	0					
ANR	5094723	ArgumentList	"""X509_USER_PROXY"""		5094667	1					
ANR	5094724	Argument	"""X509_USER_PROXY"""		5094667	0					
ANR	5094725	PrimaryExpression	"""X509_USER_PROXY"""		5094667	0					
ANR	5094726	Argument	file_name		5094667	1					
ANR	5094727	Identifier	file_name		5094667	0					
ANR	5094728	Argument	1		5094667	2					
ANR	5094729	PrimaryExpression	1		5094667	0					
ANR	5094730	IfStatement	if ( ( result = main_activate_globus ( ) ) != GLOBUS_SUCCESS )		5094667	6					
ANR	5094731	Condition	( result = main_activate_globus ( ) ) != GLOBUS_SUCCESS	1391:6:35024:35072	5094667	0	True				
ANR	5094732	EqualityExpression	( result = main_activate_globus ( ) ) != GLOBUS_SUCCESS		5094667	0		!=			
ANR	5094733	AssignmentExpression	result = main_activate_globus ( )		5094667	0		=			
ANR	5094734	Identifier	result		5094667	0					
ANR	5094735	CallExpression	main_activate_globus ( )		5094667	1					
ANR	5094736	Callee	main_activate_globus		5094667	0					
ANR	5094737	Identifier	main_activate_globus		5094667	0					
ANR	5094738	ArgumentList			5094667	1					
ANR	5094739	Identifier	GLOBUS_SUCCESS		5094667	1					
ANR	5094740	CompoundStatement		17:58:325:325	5094667	1					
ANR	5094741	ExpressionStatement	"gahp_printf ( ""F %d Failed\\\\ to\\\\ activate\\\\ Globus modules\\n"" , result )"	1392:2:35080:35156	5094667	0	True				
ANR	5094742	CallExpression	"gahp_printf ( ""F %d Failed\\\\ to\\\\ activate\\\\ Globus modules\\n"" , result )"		5094667	0					
ANR	5094743	Callee	gahp_printf		5094667	0					
ANR	5094744	Identifier	gahp_printf		5094667	0					
ANR	5094745	ArgumentList	"""F %d Failed\\\\ to\\\\ activate\\\\ Globus modules\\n"""		5094667	1					
ANR	5094746	Argument	"""F %d Failed\\\\ to\\\\ activate\\\\ Globus modules\\n"""		5094667	0					
ANR	5094747	PrimaryExpression	"""F %d Failed\\\\ to\\\\ activate\\\\ Globus modules\\n"""		5094667	0					
ANR	5094748	Argument	result		5094667	1					
ANR	5094749	Identifier	result		5094667	0					
ANR	5094750	ExpressionStatement	gahp_sem_up ( & print_control )	1395:2:35161:35188	5094667	1	True				
ANR	5094751	CallExpression	gahp_sem_up ( & print_control )		5094667	0					
ANR	5094752	Callee	gahp_sem_up		5094667	0					
ANR	5094753	Identifier	gahp_sem_up		5094667	0					
ANR	5094754	ArgumentList	& print_control		5094667	1					
ANR	5094755	Argument	& print_control		5094667	0					
ANR	5094756	UnaryOperationExpression	& print_control		5094667	0					
ANR	5094757	UnaryOperator	&		5094667	0					
ANR	5094758	Identifier	print_control		5094667	1					
ANR	5094759	ExpressionStatement	all_args_free ( user_arg )	1396:2:35192:35215	5094667	2	True				
ANR	5094760	CallExpression	all_args_free ( user_arg )		5094667	0					
ANR	5094761	Callee	all_args_free		5094667	0					
ANR	5094762	Identifier	all_args_free		5094667	0					
ANR	5094763	ArgumentList	user_arg		5094667	1					
ANR	5094764	Argument	user_arg		5094667	0					
ANR	5094765	Identifier	user_arg		5094667	0					
ANR	5094766	ReturnStatement	return 0 ;	1397:2:35219:35227	5094667	3	True				
ANR	5094767	PrimaryExpression	0		5094667	0					
ANR	5094768	ExpressionStatement	GlobusActive = true	1400:1:35234:35253	5094667	7	True				
ANR	5094769	AssignmentExpression	GlobusActive = true		5094667	0		=			
ANR	5094770	Identifier	GlobusActive		5094667	0					
ANR	5094771	Identifier	true		5094667	1					
ANR	5094772	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1401:1:35256:35274	5094667	8	True				
ANR	5094773	CallExpression	"gahp_printf ( ""S\\n"" )"		5094667	0					
ANR	5094774	Callee	gahp_printf		5094667	0					
ANR	5094775	Identifier	gahp_printf		5094667	0					
ANR	5094776	ArgumentList	"""S\\n"""		5094667	1					
ANR	5094777	Argument	"""S\\n"""		5094667	0					
ANR	5094778	PrimaryExpression	"""S\\n"""		5094667	0					
ANR	5094779	ExpressionStatement	gahp_sem_up ( & print_control )	1403:1:35278:35305	5094667	9	True				
ANR	5094780	CallExpression	gahp_sem_up ( & print_control )		5094667	0					
ANR	5094781	Callee	gahp_sem_up		5094667	0					
ANR	5094782	Identifier	gahp_sem_up		5094667	0					
ANR	5094783	ArgumentList	& print_control		5094667	1					
ANR	5094784	Argument	& print_control		5094667	0					
ANR	5094785	UnaryOperationExpression	& print_control		5094667	0					
ANR	5094786	UnaryOperator	&		5094667	0					
ANR	5094787	Identifier	print_control		5094667	1					
ANR	5094788	ExpressionStatement	all_args_free ( user_arg )	1405:1:35309:35332	5094667	10	True				
ANR	5094789	CallExpression	all_args_free ( user_arg )		5094667	0					
ANR	5094790	Callee	all_args_free		5094667	0					
ANR	5094791	Identifier	all_args_free		5094667	0					
ANR	5094792	ArgumentList	user_arg		5094667	1					
ANR	5094793	Argument	user_arg		5094667	0					
ANR	5094794	Identifier	user_arg		5094667	0					
ANR	5094795	ReturnStatement	return 0 ;	1406:1:35335:35343	5094667	11	True				
ANR	5094796	PrimaryExpression	0		5094667	0					
ANR	5094797	ReturnType	int		5094667	1					
ANR	5094798	Identifier	handle_initialize_from_file		5094667	2					
ANR	5094799	ParameterList	void * user_arg		5094667	3					
ANR	5094800	Parameter	void * user_arg	1374:28:34733:34747	5094667	0	True				
ANR	5094801	ParameterType	void *		5094667	0					
ANR	5094802	Identifier	user_arg		5094667	1					
ANR	5094803	CFGEntryNode	ENTRY		5094667		True				
ANR	5094804	CFGExitNode	EXIT		5094667		True				
ANR	5094805	Symbol	user_arg		5094667						
ANR	5094806	Symbol	* input_line		5094667						
ANR	5094807	Symbol	process_string_arg		5094667						
ANR	5094808	Symbol	NULL		5094667						
ANR	5094809	Symbol	file_name		5094667						
ANR	5094810	Symbol	GLOBUS_SUCCESS		5094667						
ANR	5094811	Symbol	GlobusActive		5094667						
ANR	5094812	Symbol	input_line		5094667						
ANR	5094813	Symbol	& print_control		5094667						
ANR	5094814	Symbol	result		5094667						
ANR	5094815	Symbol	true		5094667						
ANR	5094816	Symbol	& file_name		5094667						
ANR	5094817	Symbol	main_activate_globus		5094667						
ANR	5094818	Function	unlink_ref_count	1409:0:35348:35869							
ANR	5094819	FunctionDef	"unlink_ref_count (ptr_ref_count * ptr , int decrement)"		5094818	0					
ANR	5094820	CompoundStatement		1411:0:35407:35869	5094818	0					
ANR	5094821	IdentifierDeclStatement	int result ;	1412:1:35410:35420	5094818	0	True				
ANR	5094822	IdentifierDecl	result		5094818	0					
ANR	5094823	IdentifierDeclType	int		5094818	0					
ANR	5094824	Identifier	result		5094818	1					
ANR	5094825	IfStatement	if ( ! ptr )		5094818	1					
ANR	5094826	Condition	! ptr	1414:5:35428:35431	5094818	0	True				
ANR	5094827	UnaryOperationExpression	! ptr		5094818	0					
ANR	5094828	UnaryOperator	!		5094818	0					
ANR	5094829	Identifier	ptr		5094818	1					
ANR	5094830	ReturnStatement	return ;	1414:11:35434:35440	5094818	1	True				
ANR	5094831	ExpressionStatement	ptr -> count -= decrement	1416:1:35444:35467	5094818	2	True				
ANR	5094832	AssignmentExpression	ptr -> count -= decrement		5094818	0		-=			
ANR	5094833	PtrMemberAccess	ptr -> count		5094818	0					
ANR	5094834	Identifier	ptr		5094818	0					
ANR	5094835	Identifier	count		5094818	1					
ANR	5094836	Identifier	decrement		5094818	1					
ANR	5094837	IfStatement	if ( ptr -> count < 0 )		5094818	3					
ANR	5094838	Condition	ptr -> count < 0	1417:6:35475:35488	5094818	0	True				
ANR	5094839	RelationalExpression	ptr -> count < 0		5094818	0		<			
ANR	5094840	PtrMemberAccess	ptr -> count		5094818	0					
ANR	5094841	Identifier	ptr		5094818	0					
ANR	5094842	Identifier	count		5094818	1					
ANR	5094843	PrimaryExpression	0		5094818	1					
ANR	5094844	ExpressionStatement	ptr -> count = 0	1418:2:35494:35508	5094818	1	True				
ANR	5094845	AssignmentExpression	ptr -> count = 0		5094818	0		=			
ANR	5094846	PtrMemberAccess	ptr -> count		5094818	0					
ANR	5094847	Identifier	ptr		5094818	0					
ANR	5094848	Identifier	count		5094818	1					
ANR	5094849	PrimaryExpression	0		5094818	1					
ANR	5094850	IfStatement	if ( ptr -> key == NULL && ptr -> count == 0 )		5094818	4					
ANR	5094851	Condition	ptr -> key == NULL && ptr -> count == 0	1419:6:35516:35550	5094818	0	True				
ANR	5094852	AndExpression	ptr -> key == NULL && ptr -> count == 0		5094818	0		&&			
ANR	5094853	EqualityExpression	ptr -> key == NULL		5094818	0		==			
ANR	5094854	PtrMemberAccess	ptr -> key		5094818	0					
ANR	5094855	Identifier	ptr		5094818	0					
ANR	5094856	Identifier	key		5094818	1					
ANR	5094857	Identifier	NULL		5094818	1					
ANR	5094858	EqualityExpression	ptr -> count == 0		5094818	1		==			
ANR	5094859	PtrMemberAccess	ptr -> count		5094818	0					
ANR	5094860	Identifier	ptr		5094818	0					
ANR	5094861	Identifier	count		5094818	1					
ANR	5094862	PrimaryExpression	0		5094818	1					
ANR	5094863	CompoundStatement		9:44:146:146	5094818	1					
ANR	5094864	IfStatement	if ( current_cred == ptr )		5094818	0					
ANR	5094865	Condition	current_cred == ptr	1422:7:35679:35697	5094818	0	True				
ANR	5094866	EqualityExpression	current_cred == ptr		5094818	0		==			
ANR	5094867	Identifier	current_cred		5094818	0					
ANR	5094868	Identifier	ptr		5094818	1					
ANR	5094869	CompoundStatement		12:29:293:293	5094818	1					
ANR	5094870	ExpressionStatement	"gahp_printf ( ""unlink_ref_count\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"	1423:3:35706:35768	5094818	0	True				
ANR	5094871	CallExpression	"gahp_printf ( ""unlink_ref_count\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"		5094818	0					
ANR	5094872	Callee	gahp_printf		5094818	0					
ANR	5094873	Identifier	gahp_printf		5094818	0					
ANR	5094874	ArgumentList	"""unlink_ref_count\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094818	1					
ANR	5094875	Argument	"""unlink_ref_count\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094818	0					
ANR	5094876	PrimaryExpression	"""unlink_ref_count\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094818	0					
ANR	5094877	ExpressionStatement	_exit ( 4 )	1424:3:35773:35781	5094818	1	True				
ANR	5094878	CallExpression	_exit ( 4 )		5094818	0					
ANR	5094879	Callee	_exit		5094818	0					
ANR	5094880	Identifier	_exit		5094818	0					
ANR	5094881	ArgumentList	4		5094818	1					
ANR	5094882	Argument	4		5094818	0					
ANR	5094883	PrimaryExpression	4		5094818	0					
ANR	5094884	ExpressionStatement	"gss_release_cred ( ( OM_uint32 * ) & result , & ptr -> cred )"	1426:2:35789:35839	5094818	1	True				
ANR	5094885	CallExpression	"gss_release_cred ( ( OM_uint32 * ) & result , & ptr -> cred )"		5094818	0					
ANR	5094886	Callee	gss_release_cred		5094818	0					
ANR	5094887	Identifier	gss_release_cred		5094818	0					
ANR	5094888	ArgumentList	( OM_uint32 * ) & result		5094818	1					
ANR	5094889	Argument	( OM_uint32 * ) & result		5094818	0					
ANR	5094890	CastExpression	( OM_uint32 * ) & result		5094818	0					
ANR	5094891	CastTarget	OM_uint32 *		5094818	0					
ANR	5094892	UnaryOperationExpression	& result		5094818	1					
ANR	5094893	UnaryOperator	&		5094818	0					
ANR	5094894	Identifier	result		5094818	1					
ANR	5094895	Argument	& ptr -> cred		5094818	1					
ANR	5094896	UnaryOperationExpression	& ptr -> cred		5094818	0					
ANR	5094897	UnaryOperator	&		5094818	0					
ANR	5094898	PtrMemberAccess	ptr -> cred		5094818	1					
ANR	5094899	Identifier	ptr		5094818	0					
ANR	5094900	Identifier	cred		5094818	1					
ANR	5094901	ExpressionStatement	globus_libc_free ( ptr )	1427:2:35843:35864	5094818	2	True				
ANR	5094902	CallExpression	globus_libc_free ( ptr )		5094818	0					
ANR	5094903	Callee	globus_libc_free		5094818	0					
ANR	5094904	Identifier	globus_libc_free		5094818	0					
ANR	5094905	ArgumentList	ptr		5094818	1					
ANR	5094906	Argument	ptr		5094818	0					
ANR	5094907	Identifier	ptr		5094818	0					
ANR	5094908	ReturnType	void		5094818	1					
ANR	5094909	Identifier	unlink_ref_count		5094818	2					
ANR	5094910	ParameterList	"ptr_ref_count * ptr , int decrement"		5094818	3					
ANR	5094911	Parameter	ptr_ref_count * ptr	1410:18:35371:35388	5094818	0	True				
ANR	5094912	ParameterType	ptr_ref_count *		5094818	0					
ANR	5094913	Identifier	ptr		5094818	1					
ANR	5094914	Parameter	int decrement	1410:38:35391:35403	5094818	1	True				
ANR	5094915	ParameterType	int		5094818	0					
ANR	5094916	Identifier	decrement		5094818	1					
ANR	5094917	CFGEntryNode	ENTRY		5094818		True				
ANR	5094918	CFGExitNode	EXIT		5094818		True				
ANR	5094919	Symbol	result		5094818						
ANR	5094920	Symbol	current_cred		5094818						
ANR	5094921	Symbol	NULL		5094818						
ANR	5094922	Symbol	& ptr -> cred		5094818						
ANR	5094923	Symbol	decrement		5094818						
ANR	5094924	Symbol	& result		5094818						
ANR	5094925	Symbol	ptr -> count		5094818						
ANR	5094926	Symbol	ptr -> key		5094818						
ANR	5094927	Symbol	* ptr		5094818						
ANR	5094928	Symbol	ptr		5094818						
ANR	5094929	Function	uncache_proxy	1432:0:35873:36259							
ANR	5094930	FunctionDef	uncache_proxy (char * key)		5094929	0					
ANR	5094931	CompoundStatement		1434:0:35903:36259	5094929	0					
ANR	5094932	IdentifierDeclStatement	ptr_ref_count * ptr ;	1435:1:35906:35925	5094929	0	True				
ANR	5094933	IdentifierDecl	* ptr		5094929	0					
ANR	5094934	IdentifierDeclType	ptr_ref_count *		5094929	0					
ANR	5094935	Identifier	ptr		5094929	1					
ANR	5094936	IfStatement	if ( ! key )		5094929	1					
ANR	5094937	Condition	! key	1437:5:35933:35936	5094929	0	True				
ANR	5094938	UnaryOperationExpression	! key		5094929	0					
ANR	5094939	UnaryOperator	!		5094929	0					
ANR	5094940	Identifier	key		5094929	1					
ANR	5094941	ReturnStatement	return ;	1437:11:35939:35945	5094929	1	True				
ANR	5094942	ExpressionStatement	"ptr = ( ptr_ref_count * ) globus_hashtable_remove ( & handle_cache , key )"	1438:1:35948:36014	5094929	2	True				
ANR	5094943	AssignmentExpression	"ptr = ( ptr_ref_count * ) globus_hashtable_remove ( & handle_cache , key )"		5094929	0		=			
ANR	5094944	Identifier	ptr		5094929	0					
ANR	5094945	CastExpression	"( ptr_ref_count * ) globus_hashtable_remove ( & handle_cache , key )"		5094929	1					
ANR	5094946	CastTarget	ptr_ref_count *		5094929	0					
ANR	5094947	CallExpression	"globus_hashtable_remove ( & handle_cache , key )"		5094929	1					
ANR	5094948	Callee	globus_hashtable_remove		5094929	0					
ANR	5094949	Identifier	globus_hashtable_remove		5094929	0					
ANR	5094950	ArgumentList	& handle_cache		5094929	1					
ANR	5094951	Argument	& handle_cache		5094929	0					
ANR	5094952	UnaryOperationExpression	& handle_cache		5094929	0					
ANR	5094953	UnaryOperator	&		5094929	0					
ANR	5094954	Identifier	handle_cache		5094929	1					
ANR	5094955	Argument	key		5094929	1					
ANR	5094956	Identifier	key		5094929	0					
ANR	5094957	IfStatement	if ( ptr )		5094929	3					
ANR	5094958	Condition	ptr	1439:6:36022:36024	5094929	0	True				
ANR	5094959	Identifier	ptr		5094929	0					
ANR	5094960	CompoundStatement		6:12:124:124	5094929	1					
ANR	5094961	IfStatement	"if ( ptr -> key == NULL || key == ptr -> key || strcasecmp ( ptr -> key , key ) )"		5094929	0					
ANR	5094962	Condition	"ptr -> key == NULL || key == ptr -> key || strcasecmp ( ptr -> key , key )"	1440:6:36036:36094	5094929	0	True				
ANR	5094963	OrExpression	"ptr -> key == NULL || key == ptr -> key || strcasecmp ( ptr -> key , key )"		5094929	0		||			
ANR	5094964	EqualityExpression	ptr -> key == NULL		5094929	0		==			
ANR	5094965	PtrMemberAccess	ptr -> key		5094929	0					
ANR	5094966	Identifier	ptr		5094929	0					
ANR	5094967	Identifier	key		5094929	1					
ANR	5094968	Identifier	NULL		5094929	1					
ANR	5094969	OrExpression	"key == ptr -> key || strcasecmp ( ptr -> key , key )"		5094929	1		||			
ANR	5094970	EqualityExpression	key == ptr -> key		5094929	0		==			
ANR	5094971	Identifier	key		5094929	0					
ANR	5094972	PtrMemberAccess	ptr -> key		5094929	1					
ANR	5094973	Identifier	ptr		5094929	0					
ANR	5094974	Identifier	key		5094929	1					
ANR	5094975	CallExpression	"strcasecmp ( ptr -> key , key )"		5094929	1					
ANR	5094976	Callee	strcasecmp		5094929	0					
ANR	5094977	Identifier	strcasecmp		5094929	0					
ANR	5094978	ArgumentList	ptr -> key		5094929	1					
ANR	5094979	Argument	ptr -> key		5094929	0					
ANR	5094980	PtrMemberAccess	ptr -> key		5094929	0					
ANR	5094981	Identifier	ptr		5094929	0					
ANR	5094982	Identifier	key		5094929	1					
ANR	5094983	Argument	key		5094929	1					
ANR	5094984	Identifier	key		5094929	0					
ANR	5094985	CompoundStatement		7:67:193:193	5094929	1					
ANR	5094986	ExpressionStatement	"gahp_printf ( ""uncache_proxy\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"	1441:3:36102:36161	5094929	0	True				
ANR	5094987	CallExpression	"gahp_printf ( ""uncache_proxy\\\\ failed\\\\ sanity\\\\ check!!!\\n"" )"		5094929	0					
ANR	5094988	Callee	gahp_printf		5094929	0					
ANR	5094989	Identifier	gahp_printf		5094929	0					
ANR	5094990	ArgumentList	"""uncache_proxy\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094929	1					
ANR	5094991	Argument	"""uncache_proxy\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094929	0					
ANR	5094992	PrimaryExpression	"""uncache_proxy\\\\ failed\\\\ sanity\\\\ check!!!\\n"""		5094929	0					
ANR	5094993	ExpressionStatement	_exit ( 5 )	1442:3:36166:36174	5094929	1	True				
ANR	5094994	CallExpression	_exit ( 5 )		5094929	0					
ANR	5094995	Callee	_exit		5094929	0					
ANR	5094996	Identifier	_exit		5094929	0					
ANR	5094997	ArgumentList	5		5094929	1					
ANR	5094998	Argument	5		5094929	0					
ANR	5094999	PrimaryExpression	5		5094929	0					
ANR	5095000	ExpressionStatement	globus_libc_free ( ptr -> key )	1444:2:36182:36208	5094929	1	True				
ANR	5095001	CallExpression	globus_libc_free ( ptr -> key )		5094929	0					
ANR	5095002	Callee	globus_libc_free		5094929	0					
ANR	5095003	Identifier	globus_libc_free		5094929	0					
ANR	5095004	ArgumentList	ptr -> key		5094929	1					
ANR	5095005	Argument	ptr -> key		5094929	0					
ANR	5095006	PtrMemberAccess	ptr -> key		5094929	0					
ANR	5095007	Identifier	ptr		5094929	0					
ANR	5095008	Identifier	key		5094929	1					
ANR	5095009	ExpressionStatement	ptr -> key = NULL	1445:2:36212:36227	5094929	2	True				
ANR	5095010	AssignmentExpression	ptr -> key = NULL		5094929	0		=			
ANR	5095011	PtrMemberAccess	ptr -> key		5094929	0					
ANR	5095012	Identifier	ptr		5094929	0					
ANR	5095013	Identifier	key		5094929	1					
ANR	5095014	Identifier	NULL		5094929	1					
ANR	5095015	ExpressionStatement	"unlink_ref_count ( ptr , 0 )"	1446:2:36231:36254	5094929	3	True				
ANR	5095016	CallExpression	"unlink_ref_count ( ptr , 0 )"		5094929	0					
ANR	5095017	Callee	unlink_ref_count		5094929	0					
ANR	5095018	Identifier	unlink_ref_count		5094929	0					
ANR	5095019	ArgumentList	ptr		5094929	1					
ANR	5095020	Argument	ptr		5094929	0					
ANR	5095021	Identifier	ptr		5094929	0					
ANR	5095022	Argument	0		5094929	1					
ANR	5095023	PrimaryExpression	0		5094929	0					
ANR	5095024	ReturnType	void		5094929	1					
ANR	5095025	Identifier	uncache_proxy		5094929	2					
ANR	5095026	ParameterList	char * key		5094929	3					
ANR	5095027	Parameter	char * key	1433:14:35892:35900	5094929	0	True				
ANR	5095028	ParameterType	char *		5094929	0					
ANR	5095029	Identifier	key		5094929	1					
ANR	5095030	CFGEntryNode	ENTRY		5094929		True				
ANR	5095031	CFGExitNode	EXIT		5094929		True				
ANR	5095032	Symbol	globus_hashtable_remove		5094929						
ANR	5095033	Symbol	NULL		5094929						
ANR	5095034	Symbol	ptr -> key		5094929						
ANR	5095035	Symbol	* ptr		5094929						
ANR	5095036	Symbol	strcasecmp		5094929						
ANR	5095037	Symbol	key		5094929						
ANR	5095038	Symbol	& handle_cache		5094929						
ANR	5095039	Symbol	ptr		5094929						
ANR	5095040	Function	handle_uncache_proxy	1450:0:36262:36579							
ANR	5095041	FunctionDef	handle_uncache_proxy (void * user_arg)		5095040	0					
ANR	5095042	CompoundStatement		1452:0:36304:36579	5095040	0					
ANR	5095043	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1453:1:36307:36345	5095040	0	True				
ANR	5095044	IdentifierDecl	* * input_line = ( char * * ) user_arg		5095040	0					
ANR	5095045	IdentifierDeclType	char * *		5095040	0					
ANR	5095046	Identifier	input_line		5095040	1					
ANR	5095047	AssignmentExpression	* * input_line = ( char * * ) user_arg		5095040	2		=			
ANR	5095048	Identifier	input_line		5095040	0					
ANR	5095049	CastExpression	( char * * ) user_arg		5095040	1					
ANR	5095050	CastTarget	char * *		5095040	0					
ANR	5095051	Identifier	user_arg		5095040	1					
ANR	5095052	IdentifierDeclStatement	char * handle = NULL ;	1454:1:36348:36367	5095040	1	True				
ANR	5095053	IdentifierDecl	* handle = NULL		5095040	0					
ANR	5095054	IdentifierDeclType	char *		5095040	0					
ANR	5095055	Identifier	handle		5095040	1					
ANR	5095056	AssignmentExpression	* handle = NULL		5095040	2		=			
ANR	5095057	Identifier	NULL		5095040	0					
ANR	5095058	Identifier	NULL		5095040	1					
ANR	5095059	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & handle ) )"		5095040	2					
ANR	5095060	Condition	"! process_string_arg ( input_line [ 1 ] , & handle )"	1457:4:36375:36417	5095040	0	True				
ANR	5095061	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & handle )"		5095040	0					
ANR	5095062	UnaryOperator	!		5095040	0					
ANR	5095063	CallExpression	"process_string_arg ( input_line [ 1 ] , & handle )"		5095040	1					
ANR	5095064	Callee	process_string_arg		5095040	0					
ANR	5095065	Identifier	process_string_arg		5095040	0					
ANR	5095066	ArgumentList	input_line [ 1 ]		5095040	1					
ANR	5095067	Argument	input_line [ 1 ]		5095040	0					
ANR	5095068	ArrayIndexing	input_line [ 1 ]		5095040	0					
ANR	5095069	Identifier	input_line		5095040	0					
ANR	5095070	PrimaryExpression	1		5095040	1					
ANR	5095071	Argument	& handle		5095040	1					
ANR	5095072	UnaryOperationExpression	& handle		5095040	0					
ANR	5095073	UnaryOperator	&		5095040	0					
ANR	5095074	Identifier	handle		5095040	1					
ANR	5095075	CompoundStatement		6:50:116:116	5095040	1					
ANR	5095076	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1458:2:36425:36446	5095040	0	True				
ANR	5095077	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095040	0					
ANR	5095078	Callee	HANDLE_SYNTAX_ERROR		5095040	0					
ANR	5095079	Identifier	HANDLE_SYNTAX_ERROR		5095040	0					
ANR	5095080	ArgumentList			5095040	1					
ANR	5095081	ReturnStatement	return 0 ;	1459:2:36450:36458	5095040	1	True				
ANR	5095082	PrimaryExpression	0		5095040	0					
ANR	5095083	ExpressionStatement	uncache_proxy ( handle )	1462:1:36465:36486	5095040	3	True				
ANR	5095084	CallExpression	uncache_proxy ( handle )		5095040	0					
ANR	5095085	Callee	uncache_proxy		5095040	0					
ANR	5095086	Identifier	uncache_proxy		5095040	0					
ANR	5095087	ArgumentList	handle		5095040	1					
ANR	5095088	Argument	handle		5095040	0					
ANR	5095089	Identifier	handle		5095040	0					
ANR	5095090	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1464:1:36490:36508	5095040	4	True				
ANR	5095091	CallExpression	"gahp_printf ( ""S\\n"" )"		5095040	0					
ANR	5095092	Callee	gahp_printf		5095040	0					
ANR	5095093	Identifier	gahp_printf		5095040	0					
ANR	5095094	ArgumentList	"""S\\n"""		5095040	1					
ANR	5095095	Argument	"""S\\n"""		5095040	0					
ANR	5095096	PrimaryExpression	"""S\\n"""		5095040	0					
ANR	5095097	ExpressionStatement	gahp_sem_up ( & print_control )	1466:1:36512:36539	5095040	5	True				
ANR	5095098	CallExpression	gahp_sem_up ( & print_control )		5095040	0					
ANR	5095099	Callee	gahp_sem_up		5095040	0					
ANR	5095100	Identifier	gahp_sem_up		5095040	0					
ANR	5095101	ArgumentList	& print_control		5095040	1					
ANR	5095102	Argument	& print_control		5095040	0					
ANR	5095103	UnaryOperationExpression	& print_control		5095040	0					
ANR	5095104	UnaryOperator	&		5095040	0					
ANR	5095105	Identifier	print_control		5095040	1					
ANR	5095106	ExpressionStatement	all_args_free ( user_arg )	1468:1:36543:36566	5095040	6	True				
ANR	5095107	CallExpression	all_args_free ( user_arg )		5095040	0					
ANR	5095108	Callee	all_args_free		5095040	0					
ANR	5095109	Identifier	all_args_free		5095040	0					
ANR	5095110	ArgumentList	user_arg		5095040	1					
ANR	5095111	Argument	user_arg		5095040	0					
ANR	5095112	Identifier	user_arg		5095040	0					
ANR	5095113	ReturnStatement	return 0 ;	1469:1:36569:36577	5095040	7	True				
ANR	5095114	PrimaryExpression	0		5095040	0					
ANR	5095115	ReturnType	int		5095040	1					
ANR	5095116	Identifier	handle_uncache_proxy		5095040	2					
ANR	5095117	ParameterList	void * user_arg		5095040	3					
ANR	5095118	Parameter	void * user_arg	1451:21:36287:36301	5095040	0	True				
ANR	5095119	ParameterType	void *		5095040	0					
ANR	5095120	Identifier	user_arg		5095040	1					
ANR	5095121	CFGEntryNode	ENTRY		5095040		True				
ANR	5095122	CFGExitNode	EXIT		5095040		True				
ANR	5095123	Symbol	user_arg		5095040						
ANR	5095124	Symbol	* input_line		5095040						
ANR	5095125	Symbol	process_string_arg		5095040						
ANR	5095126	Symbol	NULL		5095040						
ANR	5095127	Symbol	& handle		5095040						
ANR	5095128	Symbol	input_line		5095040						
ANR	5095129	Symbol	handle		5095040						
ANR	5095130	Symbol	& print_control		5095040						
ANR	5095131	Function	use_cached_proxy	1472:0:36582:37125							
ANR	5095132	FunctionDef	use_cached_proxy (char * handle)		5095131	0					
ANR	5095133	CompoundStatement		1474:0:36617:37125	5095131	0					
ANR	5095134	IdentifierDeclStatement	ptr_ref_count * ptr = NULL ;	1475:1:36620:36646	5095131	0	True				
ANR	5095135	IdentifierDecl	* ptr = NULL		5095131	0					
ANR	5095136	IdentifierDeclType	ptr_ref_count *		5095131	0					
ANR	5095137	Identifier	ptr		5095131	1					
ANR	5095138	AssignmentExpression	* ptr = NULL		5095131	2		=			
ANR	5095139	Identifier	NULL		5095131	0					
ANR	5095140	Identifier	NULL		5095131	1					
ANR	5095141	IdentifierDeclStatement	ptr_ref_count * old_current_cred = NULL ;	1476:1:36649:36688	5095131	1	True				
ANR	5095142	IdentifierDecl	* old_current_cred = NULL		5095131	0					
ANR	5095143	IdentifierDeclType	ptr_ref_count *		5095131	0					
ANR	5095144	Identifier	old_current_cred		5095131	1					
ANR	5095145	AssignmentExpression	* old_current_cred = NULL		5095131	2		=			
ANR	5095146	Identifier	NULL		5095131	0					
ANR	5095147	Identifier	NULL		5095131	1					
ANR	5095148	IfStatement	"if ( strcasecmp ( handle , ""DEFAULT"" ) != 0 )"		5095131	2					
ANR	5095149	Condition	"strcasecmp ( handle , ""DEFAULT"" ) != 0"	1478:6:36697:36727	5095131	0	True				
ANR	5095150	EqualityExpression	"strcasecmp ( handle , ""DEFAULT"" ) != 0"		5095131	0		!=			
ANR	5095151	CallExpression	"strcasecmp ( handle , ""DEFAULT"" )"		5095131	0					
ANR	5095152	Callee	strcasecmp		5095131	0					
ANR	5095153	Identifier	strcasecmp		5095131	0					
ANR	5095154	ArgumentList	handle		5095131	1					
ANR	5095155	Argument	handle		5095131	0					
ANR	5095156	Identifier	handle		5095131	0					
ANR	5095157	Argument	"""DEFAULT"""		5095131	1					
ANR	5095158	PrimaryExpression	"""DEFAULT"""		5095131	0					
ANR	5095159	PrimaryExpression	0		5095131	1					
ANR	5095160	CompoundStatement		5:40:113:113	5095131	1					
ANR	5095161	ExpressionStatement	"ptr = ( ptr_ref_count * ) globus_hashtable_lookup ( & handle_cache , handle )"	1479:2:36735:36804	5095131	0	True				
ANR	5095162	AssignmentExpression	"ptr = ( ptr_ref_count * ) globus_hashtable_lookup ( & handle_cache , handle )"		5095131	0		=			
ANR	5095163	Identifier	ptr		5095131	0					
ANR	5095164	CastExpression	"( ptr_ref_count * ) globus_hashtable_lookup ( & handle_cache , handle )"		5095131	1					
ANR	5095165	CastTarget	ptr_ref_count *		5095131	0					
ANR	5095166	CallExpression	"globus_hashtable_lookup ( & handle_cache , handle )"		5095131	1					
ANR	5095167	Callee	globus_hashtable_lookup		5095131	0					
ANR	5095168	Identifier	globus_hashtable_lookup		5095131	0					
ANR	5095169	ArgumentList	& handle_cache		5095131	1					
ANR	5095170	Argument	& handle_cache		5095131	0					
ANR	5095171	UnaryOperationExpression	& handle_cache		5095131	0					
ANR	5095172	UnaryOperator	&		5095131	0					
ANR	5095173	Identifier	handle_cache		5095131	1					
ANR	5095174	Argument	handle		5095131	1					
ANR	5095175	Identifier	handle		5095131	0					
ANR	5095176	IfStatement	if ( ! ptr )		5095131	1					
ANR	5095177	Condition	! ptr	1480:6:36812:36815	5095131	0	True				
ANR	5095178	UnaryOperationExpression	! ptr		5095131	0					
ANR	5095179	UnaryOperator	!		5095131	0					
ANR	5095180	Identifier	ptr		5095131	1					
ANR	5095181	CompoundStatement		7:12:200:200	5095131	1					
ANR	5095182	ReturnStatement	return - 1 ;	1482:3:36857:36866	5095131	0	True				
ANR	5095183	UnaryOperationExpression	- 1		5095131	0					
ANR	5095184	UnaryOperator	-		5095131	0					
ANR	5095185	PrimaryExpression	1		5095131	1					
ANR	5095186	IfStatement	if ( ptr == current_cred )		5095131	3					
ANR	5095187	Condition	ptr == current_cred	1486:6:36882:36900	5095131	0	True				
ANR	5095188	EqualityExpression	ptr == current_cred		5095131	0		==			
ANR	5095189	Identifier	ptr		5095131	0					
ANR	5095190	Identifier	current_cred		5095131	1					
ANR	5095191	CompoundStatement		13:28:286:286	5095131	1					
ANR	5095192	ReturnStatement	return 0 ;	1488:2:36948:36956	5095131	0	True				
ANR	5095193	PrimaryExpression	0		5095131	0					
ANR	5095194	ExpressionStatement	old_current_cred = current_cred	1491:1:36963:36994	5095131	4	True				
ANR	5095195	AssignmentExpression	old_current_cred = current_cred		5095131	0		=			
ANR	5095196	Identifier	old_current_cred		5095131	0					
ANR	5095197	Identifier	current_cred		5095131	1					
ANR	5095198	ExpressionStatement	current_cred = ptr	1492:1:36997:37015	5095131	5	True				
ANR	5095199	AssignmentExpression	current_cred = ptr		5095131	0		=			
ANR	5095200	Identifier	current_cred		5095131	0					
ANR	5095201	Identifier	ptr		5095131	1					
ANR	5095202	ExpressionStatement	"unlink_ref_count ( old_current_cred , 1 )"	1494:1:37019:37055	5095131	6	True				
ANR	5095203	CallExpression	"unlink_ref_count ( old_current_cred , 1 )"		5095131	0					
ANR	5095204	Callee	unlink_ref_count		5095131	0					
ANR	5095205	Identifier	unlink_ref_count		5095131	0					
ANR	5095206	ArgumentList	old_current_cred		5095131	1					
ANR	5095207	Argument	old_current_cred		5095131	0					
ANR	5095208	Identifier	old_current_cred		5095131	0					
ANR	5095209	Argument	1		5095131	1					
ANR	5095210	PrimaryExpression	1		5095131	0					
ANR	5095211	IfStatement	if ( current_cred )		5095131	7					
ANR	5095212	Condition	current_cred	1497:6:37065:37076	5095131	0	True				
ANR	5095213	Identifier	current_cred		5095131	0					
ANR	5095214	CompoundStatement		24:21:462:462	5095131	1					
ANR	5095215	ExpressionStatement	current_cred -> count += 1	1498:2:37084:37108	5095131	0	True				
ANR	5095216	AssignmentExpression	current_cred -> count += 1		5095131	0		+=			
ANR	5095217	PtrMemberAccess	current_cred -> count		5095131	0					
ANR	5095218	Identifier	current_cred		5095131	0					
ANR	5095219	Identifier	count		5095131	1					
ANR	5095220	PrimaryExpression	1		5095131	1					
ANR	5095221	ReturnStatement	return 0 ;	1501:1:37115:37123	5095131	8	True				
ANR	5095222	PrimaryExpression	0		5095131	0					
ANR	5095223	ReturnType	int		5095131	1					
ANR	5095224	Identifier	use_cached_proxy		5095131	2					
ANR	5095225	ParameterList	char * handle		5095131	3					
ANR	5095226	Parameter	char * handle	1473:17:36603:36614	5095131	0	True				
ANR	5095227	ParameterType	char *		5095131	0					
ANR	5095228	Identifier	handle		5095131	1					
ANR	5095229	CFGEntryNode	ENTRY		5095131		True				
ANR	5095230	CFGExitNode	EXIT		5095131		True				
ANR	5095231	Symbol	* current_cred		5095131						
ANR	5095232	Symbol	current_cred		5095131						
ANR	5095233	Symbol	NULL		5095131						
ANR	5095234	Symbol	old_current_cred		5095131						
ANR	5095235	Symbol	current_cred -> count		5095131						
ANR	5095236	Symbol	handle		5095131						
ANR	5095237	Symbol	strcasecmp		5095131						
ANR	5095238	Symbol	& handle_cache		5095131						
ANR	5095239	Symbol	ptr		5095131						
ANR	5095240	Symbol	globus_hashtable_lookup		5095131						
ANR	5095241	Function	handle_use_cached_proxy	1504:0:37128:37517							
ANR	5095242	FunctionDef	handle_use_cached_proxy (void * user_arg)		5095241	0					
ANR	5095243	CompoundStatement		1506:0:37173:37517	5095241	0					
ANR	5095244	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1507:1:37176:37214	5095241	0	True				
ANR	5095245	IdentifierDecl	* * input_line = ( char * * ) user_arg		5095241	0					
ANR	5095246	IdentifierDeclType	char * *		5095241	0					
ANR	5095247	Identifier	input_line		5095241	1					
ANR	5095248	AssignmentExpression	* * input_line = ( char * * ) user_arg		5095241	2		=			
ANR	5095249	Identifier	input_line		5095241	0					
ANR	5095250	CastExpression	( char * * ) user_arg		5095241	1					
ANR	5095251	CastTarget	char * *		5095241	0					
ANR	5095252	Identifier	user_arg		5095241	1					
ANR	5095253	IdentifierDeclStatement	char * handle = NULL ;	1508:1:37217:37236	5095241	1	True				
ANR	5095254	IdentifierDecl	* handle = NULL		5095241	0					
ANR	5095255	IdentifierDeclType	char *		5095241	0					
ANR	5095256	Identifier	handle		5095241	1					
ANR	5095257	AssignmentExpression	* handle = NULL		5095241	2		=			
ANR	5095258	Identifier	NULL		5095241	0					
ANR	5095259	Identifier	NULL		5095241	1					
ANR	5095260	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & handle ) )"		5095241	2					
ANR	5095261	Condition	"! process_string_arg ( input_line [ 1 ] , & handle )"	1511:4:37244:37286	5095241	0	True				
ANR	5095262	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & handle )"		5095241	0					
ANR	5095263	UnaryOperator	!		5095241	0					
ANR	5095264	CallExpression	"process_string_arg ( input_line [ 1 ] , & handle )"		5095241	1					
ANR	5095265	Callee	process_string_arg		5095241	0					
ANR	5095266	Identifier	process_string_arg		5095241	0					
ANR	5095267	ArgumentList	input_line [ 1 ]		5095241	1					
ANR	5095268	Argument	input_line [ 1 ]		5095241	0					
ANR	5095269	ArrayIndexing	input_line [ 1 ]		5095241	0					
ANR	5095270	Identifier	input_line		5095241	0					
ANR	5095271	PrimaryExpression	1		5095241	1					
ANR	5095272	Argument	& handle		5095241	1					
ANR	5095273	UnaryOperationExpression	& handle		5095241	0					
ANR	5095274	UnaryOperator	&		5095241	0					
ANR	5095275	Identifier	handle		5095241	1					
ANR	5095276	CompoundStatement		6:50:116:116	5095241	1					
ANR	5095277	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1512:2:37294:37315	5095241	0	True				
ANR	5095278	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095241	0					
ANR	5095279	Callee	HANDLE_SYNTAX_ERROR		5095241	0					
ANR	5095280	Identifier	HANDLE_SYNTAX_ERROR		5095241	0					
ANR	5095281	ArgumentList			5095241	1					
ANR	5095282	ReturnStatement	return 0 ;	1513:2:37319:37327	5095241	1	True				
ANR	5095283	PrimaryExpression	0		5095241	0					
ANR	5095284	IfStatement	if ( use_cached_proxy ( handle ) < 0 )		5095241	3					
ANR	5095285	Condition	use_cached_proxy ( handle ) < 0	1516:5:37338:37365	5095241	0	True				
ANR	5095286	RelationalExpression	use_cached_proxy ( handle ) < 0		5095241	0		<			
ANR	5095287	CallExpression	use_cached_proxy ( handle )		5095241	0					
ANR	5095288	Callee	use_cached_proxy		5095241	0					
ANR	5095289	Identifier	use_cached_proxy		5095241	0					
ANR	5095290	ArgumentList	handle		5095241	1					
ANR	5095291	Argument	handle		5095241	0					
ANR	5095292	Identifier	handle		5095241	0					
ANR	5095293	PrimaryExpression	0		5095241	1					
ANR	5095294	CompoundStatement		11:35:194:194	5095241	1					
ANR	5095295	ExpressionStatement	"gahp_printf ( ""F handle\\\\ not\\\\ found\\n"" )"	1517:2:37372:37411	5095241	0	True				
ANR	5095296	CallExpression	"gahp_printf ( ""F handle\\\\ not\\\\ found\\n"" )"		5095241	0					
ANR	5095297	Callee	gahp_printf		5095241	0					
ANR	5095298	Identifier	gahp_printf		5095241	0					
ANR	5095299	ArgumentList	"""F handle\\\\ not\\\\ found\\n"""		5095241	1					
ANR	5095300	Argument	"""F handle\\\\ not\\\\ found\\n"""		5095241	0					
ANR	5095301	PrimaryExpression	"""F handle\\\\ not\\\\ found\\n"""		5095241	0					
ANR	5095302	ElseStatement	else		5095241	0					
ANR	5095303	CompoundStatement		13:8:247:247	5095241	0					
ANR	5095304	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1519:2:37425:37443	5095241	0	True				
ANR	5095305	CallExpression	"gahp_printf ( ""S\\n"" )"		5095241	0					
ANR	5095306	Callee	gahp_printf		5095241	0					
ANR	5095307	Identifier	gahp_printf		5095241	0					
ANR	5095308	ArgumentList	"""S\\n"""		5095241	1					
ANR	5095309	Argument	"""S\\n"""		5095241	0					
ANR	5095310	PrimaryExpression	"""S\\n"""		5095241	0					
ANR	5095311	ExpressionStatement	gahp_sem_up ( & print_control )	1522:1:37450:37477	5095241	4	True				
ANR	5095312	CallExpression	gahp_sem_up ( & print_control )		5095241	0					
ANR	5095313	Callee	gahp_sem_up		5095241	0					
ANR	5095314	Identifier	gahp_sem_up		5095241	0					
ANR	5095315	ArgumentList	& print_control		5095241	1					
ANR	5095316	Argument	& print_control		5095241	0					
ANR	5095317	UnaryOperationExpression	& print_control		5095241	0					
ANR	5095318	UnaryOperator	&		5095241	0					
ANR	5095319	Identifier	print_control		5095241	1					
ANR	5095320	ExpressionStatement	all_args_free ( user_arg )	1524:1:37481:37504	5095241	5	True				
ANR	5095321	CallExpression	all_args_free ( user_arg )		5095241	0					
ANR	5095322	Callee	all_args_free		5095241	0					
ANR	5095323	Identifier	all_args_free		5095241	0					
ANR	5095324	ArgumentList	user_arg		5095241	1					
ANR	5095325	Argument	user_arg		5095241	0					
ANR	5095326	Identifier	user_arg		5095241	0					
ANR	5095327	ReturnStatement	return 0 ;	1525:1:37507:37515	5095241	6	True				
ANR	5095328	PrimaryExpression	0		5095241	0					
ANR	5095329	ReturnType	int		5095241	1					
ANR	5095330	Identifier	handle_use_cached_proxy		5095241	2					
ANR	5095331	ParameterList	void * user_arg		5095241	3					
ANR	5095332	Parameter	void * user_arg	1505:24:37156:37170	5095241	0	True				
ANR	5095333	ParameterType	void *		5095241	0					
ANR	5095334	Identifier	user_arg		5095241	1					
ANR	5095335	CFGEntryNode	ENTRY		5095241		True				
ANR	5095336	CFGExitNode	EXIT		5095241		True				
ANR	5095337	Symbol	user_arg		5095241						
ANR	5095338	Symbol	* input_line		5095241						
ANR	5095339	Symbol	process_string_arg		5095241						
ANR	5095340	Symbol	use_cached_proxy		5095241						
ANR	5095341	Symbol	NULL		5095241						
ANR	5095342	Symbol	& handle		5095241						
ANR	5095343	Symbol	input_line		5095241						
ANR	5095344	Symbol	handle		5095241						
ANR	5095345	Symbol	& print_control		5095241						
ANR	5095346	Function	handle_cache_proxy_from_file	1528:0:37520:39290							
ANR	5095347	FunctionDef	handle_cache_proxy_from_file (void * user_arg)		5095346	0					
ANR	5095348	CompoundStatement		1530:0:37570:39290	5095346	0					
ANR	5095349	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1531:1:37573:37611	5095346	0	True				
ANR	5095350	IdentifierDecl	* * input_line = ( char * * ) user_arg		5095346	0					
ANR	5095351	IdentifierDeclType	char * *		5095346	0					
ANR	5095352	Identifier	input_line		5095346	1					
ANR	5095353	AssignmentExpression	* * input_line = ( char * * ) user_arg		5095346	2		=			
ANR	5095354	Identifier	input_line		5095346	0					
ANR	5095355	CastExpression	( char * * ) user_arg		5095346	1					
ANR	5095356	CastTarget	char * *		5095346	0					
ANR	5095357	Identifier	user_arg		5095346	1					
ANR	5095358	IdentifierDeclStatement	char * file_name = NULL ;	1532:1:37614:37636	5095346	1	True				
ANR	5095359	IdentifierDecl	* file_name = NULL		5095346	0					
ANR	5095360	IdentifierDeclType	char *		5095346	0					
ANR	5095361	Identifier	file_name		5095346	1					
ANR	5095362	AssignmentExpression	* file_name = NULL		5095346	2		=			
ANR	5095363	Identifier	NULL		5095346	0					
ANR	5095364	Identifier	NULL		5095346	1					
ANR	5095365	IdentifierDeclStatement	char * id = NULL ;	1533:1:37639:37654	5095346	2	True				
ANR	5095366	IdentifierDecl	* id = NULL		5095346	0					
ANR	5095367	IdentifierDeclType	char *		5095346	0					
ANR	5095368	Identifier	id		5095346	1					
ANR	5095369	AssignmentExpression	* id = NULL		5095346	2		=			
ANR	5095370	Identifier	NULL		5095346	0					
ANR	5095371	Identifier	NULL		5095346	1					
ANR	5095372	IdentifierDeclStatement	int result ;	1534:1:37657:37667	5095346	3	True				
ANR	5095373	IdentifierDecl	result		5095346	0					
ANR	5095374	IdentifierDeclType	int		5095346	0					
ANR	5095375	Identifier	result		5095346	1					
ANR	5095376	IdentifierDeclStatement	gss_buffer_desc import_buf ;	1535:1:37670:37696	5095346	4	True				
ANR	5095377	IdentifierDecl	import_buf		5095346	0					
ANR	5095378	IdentifierDeclType	gss_buffer_desc		5095346	0					
ANR	5095379	Identifier	import_buf		5095346	1					
ANR	5095380	IdentifierDeclStatement	int min_stat ;	1536:1:37699:37711	5095346	5	True				
ANR	5095381	IdentifierDecl	min_stat		5095346	0					
ANR	5095382	IdentifierDeclType	int		5095346	0					
ANR	5095383	Identifier	min_stat		5095346	1					
ANR	5095384	IdentifierDeclStatement	gss_cred_id_t cred_handle ;	1537:1:37714:37739	5095346	6	True				
ANR	5095385	IdentifierDecl	cred_handle		5095346	0					
ANR	5095386	IdentifierDeclType	gss_cred_id_t		5095346	0					
ANR	5095387	Identifier	cred_handle		5095346	1					
ANR	5095388	IdentifierDeclStatement	ptr_ref_count * ref ;	1538:1:37742:37761	5095346	7	True				
ANR	5095389	IdentifierDecl	* ref		5095346	0					
ANR	5095390	IdentifierDeclType	ptr_ref_count *		5095346	0					
ANR	5095391	Identifier	ref		5095346	1					
ANR	5095392	IdentifierDeclStatement	char buf_value [ 4096 ] ;	1539:1:37764:37784	5095346	8	True				
ANR	5095393	IdentifierDecl	buf_value [ 4096 ]		5095346	0					
ANR	5095394	IdentifierDeclType	char [ 4096 ]		5095346	0					
ANR	5095395	Identifier	buf_value		5095346	1					
ANR	5095396	PrimaryExpression	4096		5095346	2					
ANR	5095397	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & id ) )"		5095346	9					
ANR	5095398	Condition	"! process_string_arg ( input_line [ 1 ] , & id )"	1541:4:37791:37829	5095346	0	True				
ANR	5095399	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & id )"		5095346	0					
ANR	5095400	UnaryOperator	!		5095346	0					
ANR	5095401	CallExpression	"process_string_arg ( input_line [ 1 ] , & id )"		5095346	1					
ANR	5095402	Callee	process_string_arg		5095346	0					
ANR	5095403	Identifier	process_string_arg		5095346	0					
ANR	5095404	ArgumentList	input_line [ 1 ]		5095346	1					
ANR	5095405	Argument	input_line [ 1 ]		5095346	0					
ANR	5095406	ArrayIndexing	input_line [ 1 ]		5095346	0					
ANR	5095407	Identifier	input_line		5095346	0					
ANR	5095408	PrimaryExpression	1		5095346	1					
ANR	5095409	Argument	& id		5095346	1					
ANR	5095410	UnaryOperationExpression	& id		5095346	0					
ANR	5095411	UnaryOperator	&		5095346	0					
ANR	5095412	Identifier	id		5095346	1					
ANR	5095413	CompoundStatement		12:46:262:262	5095346	1					
ANR	5095414	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1542:2:37837:37858	5095346	0	True				
ANR	5095415	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095346	0					
ANR	5095416	Callee	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095417	Identifier	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095418	ArgumentList			5095346	1					
ANR	5095419	ReturnStatement	return 0 ;	1543:2:37862:37870	5095346	1	True				
ANR	5095420	PrimaryExpression	0		5095346	0					
ANR	5095421	IfStatement	"if ( ! process_string_arg ( input_line [ 2 ] , & file_name ) )"		5095346	10					
ANR	5095422	Condition	"! process_string_arg ( input_line [ 2 ] , & file_name )"	1546:4:37880:37925	5095346	0	True				
ANR	5095423	UnaryOperationExpression	"! process_string_arg ( input_line [ 2 ] , & file_name )"		5095346	0					
ANR	5095424	UnaryOperator	!		5095346	0					
ANR	5095425	CallExpression	"process_string_arg ( input_line [ 2 ] , & file_name )"		5095346	1					
ANR	5095426	Callee	process_string_arg		5095346	0					
ANR	5095427	Identifier	process_string_arg		5095346	0					
ANR	5095428	ArgumentList	input_line [ 2 ]		5095346	1					
ANR	5095429	Argument	input_line [ 2 ]		5095346	0					
ANR	5095430	ArrayIndexing	input_line [ 2 ]		5095346	0					
ANR	5095431	Identifier	input_line		5095346	0					
ANR	5095432	PrimaryExpression	2		5095346	1					
ANR	5095433	Argument	& file_name		5095346	1					
ANR	5095434	UnaryOperationExpression	& file_name		5095346	0					
ANR	5095435	UnaryOperator	&		5095346	0					
ANR	5095436	Identifier	file_name		5095346	1					
ANR	5095437	CompoundStatement		17:53:358:358	5095346	1					
ANR	5095438	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1547:2:37933:37954	5095346	0	True				
ANR	5095439	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095346	0					
ANR	5095440	Callee	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095441	Identifier	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095442	ArgumentList			5095346	1					
ANR	5095443	ReturnStatement	return 0 ;	1548:2:37958:37966	5095346	1	True				
ANR	5095444	PrimaryExpression	0		5095346	0					
ANR	5095445	IfStatement	if ( id == NULL || file_name == NULL )		5095346	11					
ANR	5095446	Condition	id == NULL || file_name == NULL	1551:6:37978:38008	5095346	0	True				
ANR	5095447	OrExpression	id == NULL || file_name == NULL		5095346	0		||			
ANR	5095448	EqualityExpression	id == NULL		5095346	0		==			
ANR	5095449	Identifier	id		5095346	0					
ANR	5095450	Identifier	NULL		5095346	1					
ANR	5095451	EqualityExpression	file_name == NULL		5095346	1		==			
ANR	5095452	Identifier	file_name		5095346	0					
ANR	5095453	Identifier	NULL		5095346	1					
ANR	5095454	CompoundStatement		22:40:441:441	5095346	1					
ANR	5095455	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1552:2:38016:38037	5095346	0	True				
ANR	5095456	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095346	0					
ANR	5095457	Callee	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095458	Identifier	HANDLE_SYNTAX_ERROR		5095346	0					
ANR	5095459	ArgumentList			5095346	1					
ANR	5095460	ReturnStatement	return 0 ;	1553:2:38041:38049	5095346	1	True				
ANR	5095461	PrimaryExpression	0		5095346	0					
ANR	5095462	IfStatement	"if ( strcasecmp ( ""DEFAULT"" , file_name ) == 0 )"		5095346	12					
ANR	5095463	Condition	"strcasecmp ( ""DEFAULT"" , file_name ) == 0"	1556:6:38061:38094	5095346	0	True				
ANR	5095464	EqualityExpression	"strcasecmp ( ""DEFAULT"" , file_name ) == 0"		5095346	0		==			
ANR	5095465	CallExpression	"strcasecmp ( ""DEFAULT"" , file_name )"		5095346	0					
ANR	5095466	Callee	strcasecmp		5095346	0					
ANR	5095467	Identifier	strcasecmp		5095346	0					
ANR	5095468	ArgumentList	"""DEFAULT"""		5095346	1					
ANR	5095469	Argument	"""DEFAULT"""		5095346	0					
ANR	5095470	PrimaryExpression	"""DEFAULT"""		5095346	0					
ANR	5095471	Argument	file_name		5095346	1					
ANR	5095472	Identifier	file_name		5095346	0					
ANR	5095473	PrimaryExpression	0		5095346	1					
ANR	5095474	CompoundStatement		27:43:527:527	5095346	1					
ANR	5095475	ExpressionStatement	"gahp_printf ( ""F \\""DEFAULT\\""\\\\ not\\\\ allowed\\n"" )"	1557:2:38102:38148	5095346	0	True				
ANR	5095476	CallExpression	"gahp_printf ( ""F \\""DEFAULT\\""\\\\ not\\\\ allowed\\n"" )"		5095346	0					
ANR	5095477	Callee	gahp_printf		5095346	0					
ANR	5095478	Identifier	gahp_printf		5095346	0					
ANR	5095479	ArgumentList	"""F \\""DEFAULT\\""\\\\ not\\\\ allowed\\n"""		5095346	1					
ANR	5095480	Argument	"""F \\""DEFAULT\\""\\\\ not\\\\ allowed\\n"""		5095346	0					
ANR	5095481	PrimaryExpression	"""F \\""DEFAULT\\""\\\\ not\\\\ allowed\\n"""		5095346	0					
ANR	5095482	GotoStatement	goto cache_proxy_return ;	1558:2:38152:38175	5095346	1	True				
ANR	5095483	Identifier	cache_proxy_return		5095346	0					
ANR	5095484	ExpressionStatement	result = strlen ( file_name )	1561:1:38182:38208	5095346	13	True				
ANR	5095485	AssignmentExpression	result = strlen ( file_name )		5095346	0		=			
ANR	5095486	Identifier	result		5095346	0					
ANR	5095487	CallExpression	strlen ( file_name )		5095346	1					
ANR	5095488	Callee	strlen		5095346	0					
ANR	5095489	Identifier	strlen		5095346	0					
ANR	5095490	ArgumentList	file_name		5095346	1					
ANR	5095491	Argument	file_name		5095346	0					
ANR	5095492	Identifier	file_name		5095346	0					
ANR	5095493	IfStatement	if ( result < 1 || result > 4000 )		5095346	14					
ANR	5095494	Condition	result < 1 || result > 4000	1562:6:38216:38242	5095346	0	True				
ANR	5095495	OrExpression	result < 1 || result > 4000		5095346	0		||			
ANR	5095496	RelationalExpression	result < 1		5095346	0		<			
ANR	5095497	Identifier	result		5095346	0					
ANR	5095498	PrimaryExpression	1		5095346	1					
ANR	5095499	RelationalExpression	result > 4000		5095346	1		>			
ANR	5095500	Identifier	result		5095346	0					
ANR	5095501	PrimaryExpression	4000		5095346	1					
ANR	5095502	CompoundStatement		33:36:675:675	5095346	1					
ANR	5095503	ExpressionStatement	"gahp_printf ( ""F bad\\\\ file\\\\ name\\n"" )"	1563:2:38250:38286	5095346	0	True				
ANR	5095504	CallExpression	"gahp_printf ( ""F bad\\\\ file\\\\ name\\n"" )"		5095346	0					
ANR	5095505	Callee	gahp_printf		5095346	0					
ANR	5095506	Identifier	gahp_printf		5095346	0					
ANR	5095507	ArgumentList	"""F bad\\\\ file\\\\ name\\n"""		5095346	1					
ANR	5095508	Argument	"""F bad\\\\ file\\\\ name\\n"""		5095346	0					
ANR	5095509	PrimaryExpression	"""F bad\\\\ file\\\\ name\\n"""		5095346	0					
ANR	5095510	GotoStatement	goto cache_proxy_return ;	1564:2:38290:38313	5095346	1	True				
ANR	5095511	Identifier	cache_proxy_return		5095346	0					
ANR	5095512	ExpressionStatement	"sprintf ( buf_value , ""X509_USER_PROXY=%s"" , file_name )"	1567:1:38320:38369	5095346	15	True				
ANR	5095513	CallExpression	"sprintf ( buf_value , ""X509_USER_PROXY=%s"" , file_name )"		5095346	0					
ANR	5095514	Callee	sprintf		5095346	0					
ANR	5095515	Identifier	sprintf		5095346	0					
ANR	5095516	ArgumentList	buf_value		5095346	1					
ANR	5095517	Argument	buf_value		5095346	0					
ANR	5095518	Identifier	buf_value		5095346	0					
ANR	5095519	Argument	"""X509_USER_PROXY=%s"""		5095346	1					
ANR	5095520	PrimaryExpression	"""X509_USER_PROXY=%s"""		5095346	0					
ANR	5095521	Argument	file_name		5095346	2					
ANR	5095522	Identifier	file_name		5095346	0					
ANR	5095523	ExpressionStatement	import_buf . value = buf_value	1568:1:38372:38400	5095346	16	True				
ANR	5095524	AssignmentExpression	import_buf . value = buf_value		5095346	0		=			
ANR	5095525	MemberAccess	import_buf . value		5095346	0					
ANR	5095526	Identifier	import_buf		5095346	0					
ANR	5095527	Identifier	value		5095346	1					
ANR	5095528	Identifier	buf_value		5095346	1					
ANR	5095529	ExpressionStatement	import_buf . length = strlen ( buf_value ) + 1	1569:1:38403:38444	5095346	17	True				
ANR	5095530	AssignmentExpression	import_buf . length = strlen ( buf_value ) + 1		5095346	0		=			
ANR	5095531	MemberAccess	import_buf . length		5095346	0					
ANR	5095532	Identifier	import_buf		5095346	0					
ANR	5095533	Identifier	length		5095346	1					
ANR	5095534	AdditiveExpression	strlen ( buf_value ) + 1		5095346	1		+			
ANR	5095535	CallExpression	strlen ( buf_value )		5095346	0					
ANR	5095536	Callee	strlen		5095346	0					
ANR	5095537	Identifier	strlen		5095346	0					
ANR	5095538	ArgumentList	buf_value		5095346	1					
ANR	5095539	Argument	buf_value		5095346	0					
ANR	5095540	Identifier	buf_value		5095346	0					
ANR	5095541	PrimaryExpression	1		5095346	1					
ANR	5095542	ExpressionStatement	"result = gss_import_cred ( ( OM_uint32 * ) & min_stat , & cred_handle , GSS_C_NO_OID , 1 , & import_buf , 0 , NULL )"	1571:1:38474:38580	5095346	18	True				
ANR	5095543	AssignmentExpression	"result = gss_import_cred ( ( OM_uint32 * ) & min_stat , & cred_handle , GSS_C_NO_OID , 1 , & import_buf , 0 , NULL )"		5095346	0		=			
ANR	5095544	Identifier	result		5095346	0					
ANR	5095545	CallExpression	"gss_import_cred ( ( OM_uint32 * ) & min_stat , & cred_handle , GSS_C_NO_OID , 1 , & import_buf , 0 , NULL )"		5095346	1					
ANR	5095546	Callee	gss_import_cred		5095346	0					
ANR	5095547	Identifier	gss_import_cred		5095346	0					
ANR	5095548	ArgumentList	( OM_uint32 * ) & min_stat		5095346	1					
ANR	5095549	Argument	( OM_uint32 * ) & min_stat		5095346	0					
ANR	5095550	CastExpression	( OM_uint32 * ) & min_stat		5095346	0					
ANR	5095551	CastTarget	OM_uint32 *		5095346	0					
ANR	5095552	UnaryOperationExpression	& min_stat		5095346	1					
ANR	5095553	UnaryOperator	&		5095346	0					
ANR	5095554	Identifier	min_stat		5095346	1					
ANR	5095555	Argument	& cred_handle		5095346	1					
ANR	5095556	UnaryOperationExpression	& cred_handle		5095346	0					
ANR	5095557	UnaryOperator	&		5095346	0					
ANR	5095558	Identifier	cred_handle		5095346	1					
ANR	5095559	Argument	GSS_C_NO_OID		5095346	2					
ANR	5095560	Identifier	GSS_C_NO_OID		5095346	0					
ANR	5095561	Argument	1		5095346	3					
ANR	5095562	PrimaryExpression	1		5095346	0					
ANR	5095563	Argument	& import_buf		5095346	4					
ANR	5095564	UnaryOperationExpression	& import_buf		5095346	0					
ANR	5095565	UnaryOperator	&		5095346	0					
ANR	5095566	Identifier	import_buf		5095346	1					
ANR	5095567	Argument	0		5095346	5					
ANR	5095568	PrimaryExpression	0		5095346	0					
ANR	5095569	Argument	NULL		5095346	6					
ANR	5095570	Identifier	NULL		5095346	0					
ANR	5095571	IfStatement	if ( result != GSS_S_COMPLETE )		5095346	19					
ANR	5095572	Condition	result != GSS_S_COMPLETE	1574:6:38589:38612	5095346	0	True				
ANR	5095573	EqualityExpression	result != GSS_S_COMPLETE		5095346	0		!=			
ANR	5095574	Identifier	result		5095346	0					
ANR	5095575	Identifier	GSS_S_COMPLETE		5095346	1					
ANR	5095576	CompoundStatement		45:33:1045:1045	5095346	1					
ANR	5095577	ExpressionStatement	"gahp_printf ( ""F Failed\\\\ to\\\\ import\\\\ credential\\\\ maj=%d\\\\ min=%d\\n"" , result , min_stat )"	1575:2:38620:38714	5095346	0	True				
ANR	5095578	CallExpression	"gahp_printf ( ""F Failed\\\\ to\\\\ import\\\\ credential\\\\ maj=%d\\\\ min=%d\\n"" , result , min_stat )"		5095346	0					
ANR	5095579	Callee	gahp_printf		5095346	0					
ANR	5095580	Identifier	gahp_printf		5095346	0					
ANR	5095581	ArgumentList	"""F Failed\\\\ to\\\\ import\\\\ credential\\\\ maj=%d\\\\ min=%d\\n"""		5095346	1					
ANR	5095582	Argument	"""F Failed\\\\ to\\\\ import\\\\ credential\\\\ maj=%d\\\\ min=%d\\n"""		5095346	0					
ANR	5095583	PrimaryExpression	"""F Failed\\\\ to\\\\ import\\\\ credential\\\\ maj=%d\\\\ min=%d\\n"""		5095346	0					
ANR	5095584	Argument	result		5095346	1					
ANR	5095585	Identifier	result		5095346	0					
ANR	5095586	Argument	min_stat		5095346	2					
ANR	5095587	Identifier	min_stat		5095346	0					
ANR	5095588	GotoStatement	goto cache_proxy_return ;	1577:2:38718:38741	5095346	1	True				
ANR	5095589	Identifier	cache_proxy_return		5095346	0					
ANR	5095590	ExpressionStatement	uncache_proxy ( id )	1581:1:38792:38809	5095346	20	True				
ANR	5095591	CallExpression	uncache_proxy ( id )		5095346	0					
ANR	5095592	Callee	uncache_proxy		5095346	0					
ANR	5095593	Identifier	uncache_proxy		5095346	0					
ANR	5095594	ArgumentList	id		5095346	1					
ANR	5095595	Argument	id		5095346	0					
ANR	5095596	Identifier	id		5095346	0					
ANR	5095597	ExpressionStatement	ref = ( ptr_ref_count * ) globus_libc_malloc ( sizeof ( ptr_ref_count ) )	1584:1:38840:38907	5095346	21	True				
ANR	5095598	AssignmentExpression	ref = ( ptr_ref_count * ) globus_libc_malloc ( sizeof ( ptr_ref_count ) )		5095346	0		=			
ANR	5095599	Identifier	ref		5095346	0					
ANR	5095600	CastExpression	( ptr_ref_count * ) globus_libc_malloc ( sizeof ( ptr_ref_count ) )		5095346	1					
ANR	5095601	CastTarget	ptr_ref_count *		5095346	0					
ANR	5095602	CallExpression	globus_libc_malloc ( sizeof ( ptr_ref_count ) )		5095346	1					
ANR	5095603	Callee	globus_libc_malloc		5095346	0					
ANR	5095604	Identifier	globus_libc_malloc		5095346	0					
ANR	5095605	ArgumentList	sizeof ( ptr_ref_count )		5095346	1					
ANR	5095606	Argument	sizeof ( ptr_ref_count )		5095346	0					
ANR	5095607	SizeofExpression	sizeof ( ptr_ref_count )		5095346	0					
ANR	5095608	Sizeof	sizeof		5095346	0					
ANR	5095609	SizeofOperand	ptr_ref_count		5095346	1					
ANR	5095610	ExpressionStatement	ref -> key = globus_libc_strdup ( id )	1585:1:38910:38943	5095346	22	True				
ANR	5095611	AssignmentExpression	ref -> key = globus_libc_strdup ( id )		5095346	0		=			
ANR	5095612	PtrMemberAccess	ref -> key		5095346	0					
ANR	5095613	Identifier	ref		5095346	0					
ANR	5095614	Identifier	key		5095346	1					
ANR	5095615	CallExpression	globus_libc_strdup ( id )		5095346	1					
ANR	5095616	Callee	globus_libc_strdup		5095346	0					
ANR	5095617	Identifier	globus_libc_strdup		5095346	0					
ANR	5095618	ArgumentList	id		5095346	1					
ANR	5095619	Argument	id		5095346	0					
ANR	5095620	Identifier	id		5095346	0					
ANR	5095621	ExpressionStatement	ref -> count = 0	1586:1:38946:38960	5095346	23	True				
ANR	5095622	AssignmentExpression	ref -> count = 0		5095346	0		=			
ANR	5095623	PtrMemberAccess	ref -> count		5095346	0					
ANR	5095624	Identifier	ref		5095346	0					
ANR	5095625	Identifier	count		5095346	1					
ANR	5095626	PrimaryExpression	0		5095346	1					
ANR	5095627	ExpressionStatement	ref -> cred = cred_handle	1587:1:38963:38986	5095346	24	True				
ANR	5095628	AssignmentExpression	ref -> cred = cred_handle		5095346	0		=			
ANR	5095629	PtrMemberAccess	ref -> cred		5095346	0					
ANR	5095630	Identifier	ref		5095346	0					
ANR	5095631	Identifier	cred		5095346	1					
ANR	5095632	Identifier	cred_handle		5095346	1					
ANR	5095633	IfStatement	"if ( globus_hashtable_insert ( & handle_cache , ref -> key , ( void * ) ref ) < 0 )"		5095346	25					
ANR	5095634	Condition	"globus_hashtable_insert ( & handle_cache , ref -> key , ( void * ) ref ) < 0"	1588:6:38994:39055	5095346	0	True				
ANR	5095635	RelationalExpression	"globus_hashtable_insert ( & handle_cache , ref -> key , ( void * ) ref ) < 0"		5095346	0		<			
ANR	5095636	CallExpression	"globus_hashtable_insert ( & handle_cache , ref -> key , ( void * ) ref )"		5095346	0					
ANR	5095637	Callee	globus_hashtable_insert		5095346	0					
ANR	5095638	Identifier	globus_hashtable_insert		5095346	0					
ANR	5095639	ArgumentList	& handle_cache		5095346	1					
ANR	5095640	Argument	& handle_cache		5095346	0					
ANR	5095641	UnaryOperationExpression	& handle_cache		5095346	0					
ANR	5095642	UnaryOperator	&		5095346	0					
ANR	5095643	Identifier	handle_cache		5095346	1					
ANR	5095644	Argument	ref -> key		5095346	1					
ANR	5095645	PtrMemberAccess	ref -> key		5095346	0					
ANR	5095646	Identifier	ref		5095346	0					
ANR	5095647	Identifier	key		5095346	1					
ANR	5095648	Argument	( void * ) ref		5095346	2					
ANR	5095649	CastExpression	( void * ) ref		5095346	0					
ANR	5095650	CastTarget	void *		5095346	0					
ANR	5095651	Identifier	ref		5095346	1					
ANR	5095652	PrimaryExpression	0		5095346	1					
ANR	5095653	CompoundStatement		60:1:1489:1489	5095346	1					
ANR	5095654	ExpressionStatement	"gahp_printf ( ""F globus_hashtable_insert\\\\ failed!\\n"" )"	1590:2:39064:39116	5095346	0	True				
ANR	5095655	CallExpression	"gahp_printf ( ""F globus_hashtable_insert\\\\ failed!\\n"" )"		5095346	0					
ANR	5095656	Callee	gahp_printf		5095346	0					
ANR	5095657	Identifier	gahp_printf		5095346	0					
ANR	5095658	ArgumentList	"""F globus_hashtable_insert\\\\ failed!\\n"""		5095346	1					
ANR	5095659	Argument	"""F globus_hashtable_insert\\\\ failed!\\n"""		5095346	0					
ANR	5095660	PrimaryExpression	"""F globus_hashtable_insert\\\\ failed!\\n"""		5095346	0					
ANR	5095661	ExpressionStatement	_exit ( 6 )	1592:2:39165:39173	5095346	1	True				
ANR	5095662	CallExpression	_exit ( 6 )		5095346	0					
ANR	5095663	Callee	_exit		5095346	0					
ANR	5095664	Identifier	_exit		5095346	0					
ANR	5095665	ArgumentList	6		5095346	1					
ANR	5095666	Argument	6		5095346	0					
ANR	5095667	PrimaryExpression	6		5095346	0					
ANR	5095668	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1596:1:39181:39199	5095346	26	True				
ANR	5095669	CallExpression	"gahp_printf ( ""S\\n"" )"		5095346	0					
ANR	5095670	Callee	gahp_printf		5095346	0					
ANR	5095671	Identifier	gahp_printf		5095346	0					
ANR	5095672	ArgumentList	"""S\\n"""		5095346	1					
ANR	5095673	Argument	"""S\\n"""		5095346	0					
ANR	5095674	PrimaryExpression	"""S\\n"""		5095346	0					
ANR	5095675	Label	cache_proxy_return :	1598:0:39202:39220	5095346	27	True				
ANR	5095676	Identifier	cache_proxy_return		5095346	0					
ANR	5095677	ExpressionStatement	gahp_sem_up ( & print_control )	1599:1:39223:39250	5095346	28	True				
ANR	5095678	CallExpression	gahp_sem_up ( & print_control )		5095346	0					
ANR	5095679	Callee	gahp_sem_up		5095346	0					
ANR	5095680	Identifier	gahp_sem_up		5095346	0					
ANR	5095681	ArgumentList	& print_control		5095346	1					
ANR	5095682	Argument	& print_control		5095346	0					
ANR	5095683	UnaryOperationExpression	& print_control		5095346	0					
ANR	5095684	UnaryOperator	&		5095346	0					
ANR	5095685	Identifier	print_control		5095346	1					
ANR	5095686	ExpressionStatement	all_args_free ( user_arg )	1601:1:39254:39277	5095346	29	True				
ANR	5095687	CallExpression	all_args_free ( user_arg )		5095346	0					
ANR	5095688	Callee	all_args_free		5095346	0					
ANR	5095689	Identifier	all_args_free		5095346	0					
ANR	5095690	ArgumentList	user_arg		5095346	1					
ANR	5095691	Argument	user_arg		5095346	0					
ANR	5095692	Identifier	user_arg		5095346	0					
ANR	5095693	ReturnStatement	return 0 ;	1602:1:39280:39288	5095346	30	True				
ANR	5095694	PrimaryExpression	0		5095346	0					
ANR	5095695	ReturnType	int		5095346	1					
ANR	5095696	Identifier	handle_cache_proxy_from_file		5095346	2					
ANR	5095697	ParameterList	void * user_arg		5095346	3					
ANR	5095698	Parameter	void * user_arg	1529:29:37553:37567	5095346	0	True				
ANR	5095699	ParameterType	void *		5095346	0					
ANR	5095700	Identifier	user_arg		5095346	1					
ANR	5095701	CFGEntryNode	ENTRY		5095346		True				
ANR	5095702	CFGExitNode	EXIT		5095346		True				
ANR	5095703	Symbol	user_arg		5095346						
ANR	5095704	Symbol	globus_libc_strdup		5095346						
ANR	5095705	Symbol	& id		5095346						
ANR	5095706	Symbol	buf_value		5095346						
ANR	5095707	Symbol	gss_import_cred		5095346						
ANR	5095708	Symbol	& cred_handle		5095346						
ANR	5095709	Symbol	ref -> count		5095346						
ANR	5095710	Symbol	& print_control		5095346						
ANR	5095711	Symbol	result		5095346						
ANR	5095712	Symbol	strlen		5095346						
ANR	5095713	Symbol	ref		5095346						
ANR	5095714	Symbol	globus_hashtable_insert		5095346						
ANR	5095715	Symbol	min_stat		5095346						
ANR	5095716	Symbol	id		5095346						
ANR	5095717	Symbol	& file_name		5095346						
ANR	5095718	Symbol	strcasecmp		5095346						
ANR	5095719	Symbol	GSS_C_NO_OID		5095346						
ANR	5095720	Symbol	& handle_cache		5095346						
ANR	5095721	Symbol	* input_line		5095346						
ANR	5095722	Symbol	import_buf . value		5095346						
ANR	5095723	Symbol	ref -> cred		5095346						
ANR	5095724	Symbol	process_string_arg		5095346						
ANR	5095725	Symbol	NULL		5095346						
ANR	5095726	Symbol	file_name		5095346						
ANR	5095727	Symbol	import_buf		5095346						
ANR	5095728	Symbol	GSS_S_COMPLETE		5095346						
ANR	5095729	Symbol	input_line		5095346						
ANR	5095730	Symbol	ref -> key		5095346						
ANR	5095731	Symbol	& min_stat		5095346						
ANR	5095732	Symbol	cred_handle		5095346						
ANR	5095733	Symbol	& import_buf		5095346						
ANR	5095734	Symbol	import_buf . length		5095346						
ANR	5095735	Symbol	globus_libc_malloc		5095346						
ANR	5095736	Symbol	* ref		5095346						
ANR	5095737	Function	handle_response_prefix	1605:0:39293:39826							
ANR	5095738	FunctionDef	handle_response_prefix (void * user_arg)		5095737	0					
ANR	5095739	CompoundStatement		1607:0:39337:39826	5095737	0					
ANR	5095740	IdentifierDeclStatement	char * * input_line = ( char * * ) user_arg ;	1608:1:39340:39378	5095737	0	True				
ANR	5095741	IdentifierDecl	* * input_line = ( char * * ) user_arg		5095737	0					
ANR	5095742	IdentifierDeclType	char * *		5095737	0					
ANR	5095743	Identifier	input_line		5095737	1					
ANR	5095744	AssignmentExpression	* * input_line = ( char * * ) user_arg		5095737	2		=			
ANR	5095745	Identifier	input_line		5095737	0					
ANR	5095746	CastExpression	( char * * ) user_arg		5095737	1					
ANR	5095747	CastTarget	char * *		5095737	0					
ANR	5095748	Identifier	user_arg		5095737	1					
ANR	5095749	IdentifierDeclStatement	int result ;	1609:1:39381:39391	5095737	1	True				
ANR	5095750	IdentifierDecl	result		5095737	0					
ANR	5095751	IdentifierDeclType	int		5095737	0					
ANR	5095752	Identifier	result		5095737	1					
ANR	5095753	IdentifierDeclStatement	char * prefix ;	1610:1:39394:39406	5095737	2	True				
ANR	5095754	IdentifierDecl	* prefix		5095737	0					
ANR	5095755	IdentifierDeclType	char *		5095737	0					
ANR	5095756	Identifier	prefix		5095737	1					
ANR	5095757	IfStatement	"if ( ! process_string_arg ( input_line [ 1 ] , & prefix ) )"		5095737	3					
ANR	5095758	Condition	"! process_string_arg ( input_line [ 1 ] , & prefix )"	1612:4:39413:39457	5095737	0	True				
ANR	5095759	UnaryOperationExpression	"! process_string_arg ( input_line [ 1 ] , & prefix )"		5095737	0					
ANR	5095760	UnaryOperator	!		5095737	0					
ANR	5095761	CallExpression	"process_string_arg ( input_line [ 1 ] , & prefix )"		5095737	1					
ANR	5095762	Callee	process_string_arg		5095737	0					
ANR	5095763	Identifier	process_string_arg		5095737	0					
ANR	5095764	ArgumentList	input_line [ 1 ]		5095737	1					
ANR	5095765	Argument	input_line [ 1 ]		5095737	0					
ANR	5095766	ArrayIndexing	input_line [ 1 ]		5095737	0					
ANR	5095767	Identifier	input_line		5095737	0					
ANR	5095768	PrimaryExpression	1		5095737	1					
ANR	5095769	Argument	& prefix		5095737	1					
ANR	5095770	UnaryOperationExpression	& prefix		5095737	0					
ANR	5095771	UnaryOperator	&		5095737	0					
ANR	5095772	Identifier	prefix		5095737	1					
ANR	5095773	CompoundStatement		6:52:123:123	5095737	1					
ANR	5095774	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1613:2:39465:39486	5095737	0	True				
ANR	5095775	CallExpression	HANDLE_SYNTAX_ERROR ( )		5095737	0					
ANR	5095776	Callee	HANDLE_SYNTAX_ERROR		5095737	0					
ANR	5095777	Identifier	HANDLE_SYNTAX_ERROR		5095737	0					
ANR	5095778	ArgumentList			5095737	1					
ANR	5095779	ReturnStatement	return 0 ;	1614:2:39490:39498	5095737	1	True				
ANR	5095780	PrimaryExpression	0		5095737	0					
ANR	5095781	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1617:1:39505:39523	5095737	4	True				
ANR	5095782	CallExpression	"gahp_printf ( ""S\\n"" )"		5095737	0					
ANR	5095783	Callee	gahp_printf		5095737	0					
ANR	5095784	Identifier	gahp_printf		5095737	0					
ANR	5095785	ArgumentList	"""S\\n"""		5095737	1					
ANR	5095786	Argument	"""S\\n"""		5095737	0					
ANR	5095787	PrimaryExpression	"""S\\n"""		5095737	0					
ANR	5095788	IfStatement	if ( ResponsePrefix )		5095737	5					
ANR	5095789	Condition	ResponsePrefix	1621:5:39619:39632	5095737	0	True				
ANR	5095790	Identifier	ResponsePrefix		5095737	0					
ANR	5095791	CompoundStatement		15:21:297:297	5095737	1					
ANR	5095792	ExpressionStatement	free ( ResponsePrefix )	1622:2:39639:39659	5095737	0	True				
ANR	5095793	CallExpression	free ( ResponsePrefix )		5095737	0					
ANR	5095794	Callee	free		5095737	0					
ANR	5095795	Identifier	free		5095737	0					
ANR	5095796	ArgumentList	ResponsePrefix		5095737	1					
ANR	5095797	Argument	ResponsePrefix		5095737	0					
ANR	5095798	Identifier	ResponsePrefix		5095737	0					
ANR	5095799	ExpressionStatement	ResponsePrefix = NULL	1623:2:39663:39684	5095737	1	True				
ANR	5095800	AssignmentExpression	ResponsePrefix = NULL		5095737	0		=			
ANR	5095801	Identifier	ResponsePrefix		5095737	0					
ANR	5095802	Identifier	NULL		5095737	1					
ANR	5095803	IfStatement	if ( prefix )		5095737	6					
ANR	5095804	Condition	prefix	1625:6:39695:39700	5095737	0	True				
ANR	5095805	Identifier	prefix		5095737	0					
ANR	5095806	CompoundStatement		19:15:366:366	5095737	1					
ANR	5095807	ExpressionStatement	ResponsePrefix = globus_libc_strdup ( prefix )	1626:2:39708:39751	5095737	0	True				
ANR	5095808	AssignmentExpression	ResponsePrefix = globus_libc_strdup ( prefix )		5095737	0		=			
ANR	5095809	Identifier	ResponsePrefix		5095737	0					
ANR	5095810	CallExpression	globus_libc_strdup ( prefix )		5095737	1					
ANR	5095811	Callee	globus_libc_strdup		5095737	0					
ANR	5095812	Identifier	globus_libc_strdup		5095737	0					
ANR	5095813	ArgumentList	prefix		5095737	1					
ANR	5095814	Argument	prefix		5095737	0					
ANR	5095815	Identifier	prefix		5095737	0					
ANR	5095816	ExpressionStatement	gahp_sem_up ( & print_control )	1630:1:39759:39786	5095737	7	True				
ANR	5095817	CallExpression	gahp_sem_up ( & print_control )		5095737	0					
ANR	5095818	Callee	gahp_sem_up		5095737	0					
ANR	5095819	Identifier	gahp_sem_up		5095737	0					
ANR	5095820	ArgumentList	& print_control		5095737	1					
ANR	5095821	Argument	& print_control		5095737	0					
ANR	5095822	UnaryOperationExpression	& print_control		5095737	0					
ANR	5095823	UnaryOperator	&		5095737	0					
ANR	5095824	Identifier	print_control		5095737	1					
ANR	5095825	ExpressionStatement	all_args_free ( user_arg )	1632:1:39790:39813	5095737	8	True				
ANR	5095826	CallExpression	all_args_free ( user_arg )		5095737	0					
ANR	5095827	Callee	all_args_free		5095737	0					
ANR	5095828	Identifier	all_args_free		5095737	0					
ANR	5095829	ArgumentList	user_arg		5095737	1					
ANR	5095830	Argument	user_arg		5095737	0					
ANR	5095831	Identifier	user_arg		5095737	0					
ANR	5095832	ReturnStatement	return 0 ;	1633:1:39816:39824	5095737	9	True				
ANR	5095833	PrimaryExpression	0		5095737	0					
ANR	5095834	ReturnType	int		5095737	1					
ANR	5095835	Identifier	handle_response_prefix		5095737	2					
ANR	5095836	ParameterList	void * user_arg		5095737	3					
ANR	5095837	Parameter	void * user_arg	1606:23:39320:39334	5095737	0	True				
ANR	5095838	ParameterType	void *		5095737	0					
ANR	5095839	Identifier	user_arg		5095737	1					
ANR	5095840	CFGEntryNode	ENTRY		5095737		True				
ANR	5095841	CFGExitNode	EXIT		5095737		True				
ANR	5095842	Symbol	user_arg		5095737						
ANR	5095843	Symbol	result		5095737						
ANR	5095844	Symbol	* input_line		5095737						
ANR	5095845	Symbol	process_string_arg		5095737						
ANR	5095846	Symbol	NULL		5095737						
ANR	5095847	Symbol	globus_libc_strdup		5095737						
ANR	5095848	Symbol	& prefix		5095737						
ANR	5095849	Symbol	prefix		5095737						
ANR	5095850	Symbol	input_line		5095737						
ANR	5095851	Symbol	ResponsePrefix		5095737						
ANR	5095852	Symbol	& print_control		5095737						
ANR	5095853	Function	main_activate_globus	1636:0:39829:40061							
ANR	5095854	FunctionDef	main_activate_globus ()		5095853	0					
ANR	5095855	CompoundStatement		1638:0:39856:40061	5095853	0					
ANR	5095856	IdentifierDeclStatement	int err ;	1639:1:39859:39866	5095853	0	True				
ANR	5095857	IdentifierDecl	err		5095853	0					
ANR	5095858	IdentifierDeclType	int		5095853	0					
ANR	5095859	Identifier	err		5095853	1					
ANR	5095860	ExpressionStatement	err = globus_module_activate ( GLOBUS_GRAM_CLIENT_MODULE )	1642:1:39871:39928	5095853	1	True				
ANR	5095861	AssignmentExpression	err = globus_module_activate ( GLOBUS_GRAM_CLIENT_MODULE )		5095853	0		=			
ANR	5095862	Identifier	err		5095853	0					
ANR	5095863	CallExpression	globus_module_activate ( GLOBUS_GRAM_CLIENT_MODULE )		5095853	1					
ANR	5095864	Callee	globus_module_activate		5095853	0					
ANR	5095865	Identifier	globus_module_activate		5095853	0					
ANR	5095866	ArgumentList	GLOBUS_GRAM_CLIENT_MODULE		5095853	1					
ANR	5095867	Argument	GLOBUS_GRAM_CLIENT_MODULE		5095853	0					
ANR	5095868	Identifier	GLOBUS_GRAM_CLIENT_MODULE		5095853	0					
ANR	5095869	IfStatement	if ( err != GLOBUS_SUCCESS )		5095853	2					
ANR	5095870	Condition	err != GLOBUS_SUCCESS	1643:6:39936:39956	5095853	0	True				
ANR	5095871	EqualityExpression	err != GLOBUS_SUCCESS		5095853	0		!=			
ANR	5095872	Identifier	err		5095853	0					
ANR	5095873	Identifier	GLOBUS_SUCCESS		5095853	1					
ANR	5095874	CompoundStatement		6:30:103:103	5095853	1					
ANR	5095875	ExpressionStatement	globus_module_deactivate ( GLOBUS_GRAM_CLIENT_MODULE )	1644:2:39964:40017	5095853	0	True				
ANR	5095876	CallExpression	globus_module_deactivate ( GLOBUS_GRAM_CLIENT_MODULE )		5095853	0					
ANR	5095877	Callee	globus_module_deactivate		5095853	0					
ANR	5095878	Identifier	globus_module_deactivate		5095853	0					
ANR	5095879	ArgumentList	GLOBUS_GRAM_CLIENT_MODULE		5095853	1					
ANR	5095880	Argument	GLOBUS_GRAM_CLIENT_MODULE		5095853	0					
ANR	5095881	Identifier	GLOBUS_GRAM_CLIENT_MODULE		5095853	0					
ANR	5095882	ReturnStatement	return err ;	1645:2:40021:40031	5095853	1	True				
ANR	5095883	Identifier	err		5095853	0					
ANR	5095884	ReturnStatement	return GLOBUS_SUCCESS ;	1648:1:40038:40059	5095853	3	True				
ANR	5095885	Identifier	GLOBUS_SUCCESS		5095853	0					
ANR	5095886	ReturnType	int		5095853	1					
ANR	5095887	Identifier	main_activate_globus		5095853	2					
ANR	5095888	ParameterList			5095853	3					
ANR	5095889	CFGEntryNode	ENTRY		5095853		True				
ANR	5095890	CFGExitNode	EXIT		5095853		True				
ANR	5095891	Symbol	err		5095853						
ANR	5095892	Symbol	GLOBUS_SUCCESS		5095853						
ANR	5095893	Symbol	GLOBUS_GRAM_CLIENT_MODULE		5095853						
ANR	5095894	Symbol	globus_module_activate		5095853						
ANR	5095895	Function	main_deactivate_globus	1652:0:40065:40367							
ANR	5095896	FunctionDef	main_deactivate_globus ()		5095895	0					
ANR	5095897	CompoundStatement		1654:0:40095:40367	5095895	0					
ANR	5095898	ReturnStatement	return ;	1661:1:40359:40365	5095895	0	True				
ANR	5095899	ReturnType	void		5095895	1					
ANR	5095900	Identifier	main_deactivate_globus		5095895	2					
ANR	5095901	ParameterList			5095895	3					
ANR	5095902	CFGEntryNode	ENTRY		5095895		True				
ANR	5095903	CFGExitNode	EXIT		5095895		True				
ANR	5095904	Function	read_command	1665:0:40371:42600							
ANR	5095905	FunctionDef	read_command (int stdin_fd)		5095904	0					
ANR	5095906	CompoundStatement		1667:0:40406:42600	5095904	0					
ANR	5095907	Statement	static	1668:1:40409:40414	5095904	0	True				
ANR	5095908	IdentifierDeclStatement	char * buf = NULL ;	1668:8:40416:40432	5095904	1	True				
ANR	5095909	IdentifierDecl	* buf = NULL		5095904	0					
ANR	5095910	IdentifierDeclType	char *		5095904	0					
ANR	5095911	Identifier	buf		5095904	1					
ANR	5095912	AssignmentExpression	* buf = NULL		5095904	2		=			
ANR	5095913	Identifier	NULL		5095904	0					
ANR	5095914	Identifier	NULL		5095904	1					
ANR	5095915	IdentifierDeclStatement	char * * command_argv ;	1669:1:40435:40454	5095904	2	True				
ANR	5095916	IdentifierDecl	* * command_argv		5095904	0					
ANR	5095917	IdentifierDeclType	char * *		5095904	0					
ANR	5095918	Identifier	command_argv		5095904	1					
ANR	5095919	IdentifierDeclStatement	int ibuf = 0 ;	1670:1:40457:40469	5095904	3	True				
ANR	5095920	IdentifierDecl	ibuf = 0		5095904	0					
ANR	5095921	IdentifierDeclType	int		5095904	0					
ANR	5095922	Identifier	ibuf		5095904	1					
ANR	5095923	AssignmentExpression	ibuf = 0		5095904	2		=			
ANR	5095924	Identifier	ibuf		5095904	0					
ANR	5095925	PrimaryExpression	0		5095904	1					
ANR	5095926	IdentifierDeclStatement	int iargv = 0 ;	1671:1:40472:40485	5095904	4	True				
ANR	5095927	IdentifierDecl	iargv = 0		5095904	0					
ANR	5095928	IdentifierDeclType	int		5095904	0					
ANR	5095929	Identifier	iargv		5095904	1					
ANR	5095930	AssignmentExpression	iargv = 0		5095904	2		=			
ANR	5095931	Identifier	iargv		5095904	0					
ANR	5095932	PrimaryExpression	0		5095904	1					
ANR	5095933	IdentifierDeclStatement	int result = 0 ;	1672:1:40488:40502	5095904	5	True				
ANR	5095934	IdentifierDecl	result = 0		5095904	0					
ANR	5095935	IdentifierDeclType	int		5095904	0					
ANR	5095936	Identifier	result		5095904	1					
ANR	5095937	AssignmentExpression	result = 0		5095904	2		=			
ANR	5095938	Identifier	result		5095904	0					
ANR	5095939	PrimaryExpression	0		5095904	1					
ANR	5095940	IfStatement	if ( buf == NULL )		5095904	6					
ANR	5095941	Condition	buf == NULL	1674:6:40511:40521	5095904	0	True				
ANR	5095942	EqualityExpression	buf == NULL		5095904	0		==			
ANR	5095943	Identifier	buf		5095904	0					
ANR	5095944	Identifier	NULL		5095904	1					
ANR	5095945	CompoundStatement		8:20:118:118	5095904	1					
ANR	5095946	ExpressionStatement	buf = ( char * ) globus_libc_malloc ( 1024 * 500 )	1675:2:40529:40574	5095904	0	True				
ANR	5095947	AssignmentExpression	buf = ( char * ) globus_libc_malloc ( 1024 * 500 )		5095904	0		=			
ANR	5095948	Identifier	buf		5095904	0					
ANR	5095949	CastExpression	( char * ) globus_libc_malloc ( 1024 * 500 )		5095904	1					
ANR	5095950	CastTarget	char *		5095904	0					
ANR	5095951	CallExpression	globus_libc_malloc ( 1024 * 500 )		5095904	1					
ANR	5095952	Callee	globus_libc_malloc		5095904	0					
ANR	5095953	Identifier	globus_libc_malloc		5095904	0					
ANR	5095954	ArgumentList	1024 * 500		5095904	1					
ANR	5095955	Argument	1024 * 500		5095904	0					
ANR	5095956	MultiplicativeExpression	1024 * 500		5095904	0		*			
ANR	5095957	PrimaryExpression	1024		5095904	0					
ANR	5095958	PrimaryExpression	500		5095904	1					
ANR	5095959	ExpressionStatement	"command_argv = ( char * * ) globus_libc_calloc ( 500 , sizeof ( char * ) )"	1685:1:40916:40979	5095904	7	True				
ANR	5095960	AssignmentExpression	"command_argv = ( char * * ) globus_libc_calloc ( 500 , sizeof ( char * ) )"		5095904	0		=			
ANR	5095961	Identifier	command_argv		5095904	0					
ANR	5095962	CastExpression	"( char * * ) globus_libc_calloc ( 500 , sizeof ( char * ) )"		5095904	1					
ANR	5095963	CastTarget	char * *		5095904	0					
ANR	5095964	CallExpression	"globus_libc_calloc ( 500 , sizeof ( char * ) )"		5095904	1					
ANR	5095965	Callee	globus_libc_calloc		5095904	0					
ANR	5095966	Identifier	globus_libc_calloc		5095904	0					
ANR	5095967	ArgumentList	500		5095904	1					
ANR	5095968	Argument	500		5095904	0					
ANR	5095969	PrimaryExpression	500		5095904	0					
ANR	5095970	Argument	sizeof ( char * )		5095904	1					
ANR	5095971	SizeofExpression	sizeof ( char * )		5095904	0					
ANR	5095972	Sizeof	sizeof		5095904	0					
ANR	5095973	SizeofOperand	char *		5095904	1					
ANR	5095974	ExpressionStatement	ibuf = 0	1687:1:40983:40991	5095904	8	True				
ANR	5095975	AssignmentExpression	ibuf = 0		5095904	0		=			
ANR	5095976	Identifier	ibuf		5095904	0					
ANR	5095977	PrimaryExpression	0		5095904	1					
ANR	5095978	ExpressionStatement	iargv = 0	1688:1:40994:41003	5095904	9	True				
ANR	5095979	AssignmentExpression	iargv = 0		5095904	0		=			
ANR	5095980	Identifier	iargv		5095904	0					
ANR	5095981	PrimaryExpression	0		5095904	1					
ANR	5095982	ForStatement	for ( ; ; )		5095904	10					
ANR	5095983	CompoundStatement		24:10:609:609	5095904	0					
ANR	5095984	ExpressionStatement	"result = read ( stdin_fd , & ( buf [ ibuf ] ) , 1 )"	1691:2:41020:41061	5095904	0	True				
ANR	5095985	AssignmentExpression	"result = read ( stdin_fd , & ( buf [ ibuf ] ) , 1 )"		5095904	0		=			
ANR	5095986	Identifier	result		5095904	0					
ANR	5095987	CallExpression	"read ( stdin_fd , & ( buf [ ibuf ] ) , 1 )"		5095904	1					
ANR	5095988	Callee	read		5095904	0					
ANR	5095989	Identifier	read		5095904	0					
ANR	5095990	ArgumentList	stdin_fd		5095904	1					
ANR	5095991	Argument	stdin_fd		5095904	0					
ANR	5095992	Identifier	stdin_fd		5095904	0					
ANR	5095993	Argument	& ( buf [ ibuf ] )		5095904	1					
ANR	5095994	UnaryOperationExpression	& ( buf [ ibuf ] )		5095904	0					
ANR	5095995	UnaryOperator	&		5095904	0					
ANR	5095996	ArrayIndexing	buf [ ibuf ]		5095904	1					
ANR	5095997	Identifier	buf		5095904	0					
ANR	5095998	Identifier	ibuf		5095904	1					
ANR	5095999	Argument	1		5095904	2					
ANR	5096000	PrimaryExpression	1		5095904	0					
ANR	5096001	IfStatement	if ( result < 0 )		5095904	1					
ANR	5096002	Condition	result < 0	1694:7:41110:41119	5095904	0	True				
ANR	5096003	RelationalExpression	result < 0		5095904	0		<			
ANR	5096004	Identifier	result		5095904	0					
ANR	5096005	PrimaryExpression	0		5095904	1					
ANR	5096006	CompoundStatement		28:20:716:716	5095904	1					
ANR	5096007	IfStatement	if ( errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK )		5095904	0					
ANR	5096008	Condition	errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK	1695:8:41154:41218	5095904	0	True				
ANR	5096009	OrExpression	errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK		5095904	0		||			
ANR	5096010	EqualityExpression	errno == EINTR		5095904	0		==			
ANR	5096011	Identifier	errno		5095904	0					
ANR	5096012	Identifier	EINTR		5095904	1					
ANR	5096013	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		5095904	1		||			
ANR	5096014	EqualityExpression	errno == EAGAIN		5095904	0		==			
ANR	5096015	Identifier	errno		5095904	0					
ANR	5096016	Identifier	EAGAIN		5095904	1					
ANR	5096017	EqualityExpression	errno == EWOULDBLOCK		5095904	1		==			
ANR	5096018	Identifier	errno		5095904	0					
ANR	5096019	Identifier	EWOULDBLOCK		5095904	1					
ANR	5096020	CompoundStatement		32:3:818:818	5095904	1					
ANR	5096021	ContinueStatement	continue ;	1699:4:41231:41239	5095904	0	True				
ANR	5096022	ExpressionStatement	_exit ( 2 )	1701:3:41249:41257	5095904	1	True				
ANR	5096023	CallExpression	_exit ( 2 )		5095904	0					
ANR	5096024	Callee	_exit		5095904	0					
ANR	5096025	Identifier	_exit		5095904	0					
ANR	5096026	ArgumentList	2		5095904	1					
ANR	5096027	Argument	2		5095904	0					
ANR	5096028	PrimaryExpression	2		5095904	0					
ANR	5096029	IfStatement	if ( result == 0 )		5095904	2					
ANR	5096030	Condition	result == 0	1703:7:41301:41311	5095904	0	True				
ANR	5096031	EqualityExpression	result == 0		5095904	0		==			
ANR	5096032	Identifier	result		5095904	0					
ANR	5096033	PrimaryExpression	0		5095904	1					
ANR	5096034	CompoundStatement		37:21:908:908	5095904	1					
ANR	5096035	ExpressionStatement	_exit ( SIGPIPE )	1708:3:41493:41507	5095904	0	True				
ANR	5096036	CallExpression	_exit ( SIGPIPE )		5095904	0					
ANR	5096037	Callee	_exit		5095904	0					
ANR	5096038	Identifier	_exit		5095904	0					
ANR	5096039	ArgumentList	SIGPIPE		5095904	1					
ANR	5096040	Argument	SIGPIPE		5095904	0					
ANR	5096041	Identifier	SIGPIPE		5095904	0					
ANR	5096042	IfStatement	if ( buf [ ibuf ] == ' ' || buf [ ibuf ] == '\\t' || buf [ ibuf ] == '\\r' )		5095904	3					
ANR	5096043	Condition	buf [ ibuf ] == ' ' || buf [ ibuf ] == '\\t' || buf [ ibuf ] == '\\r'	1715:7:41594:41645	5095904	0	True				
ANR	5096044	OrExpression	buf [ ibuf ] == ' ' || buf [ ibuf ] == '\\t' || buf [ ibuf ] == '\\r'		5095904	0		||			
ANR	5096045	EqualityExpression	buf [ ibuf ] == ' '		5095904	0		==			
ANR	5096046	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096047	Identifier	buf		5095904	0					
ANR	5096048	Identifier	ibuf		5095904	1					
ANR	5096049	PrimaryExpression	' '		5095904	1					
ANR	5096050	OrExpression	buf [ ibuf ] == '\\t' || buf [ ibuf ] == '\\r'		5095904	1		||			
ANR	5096051	EqualityExpression	buf [ ibuf ] == '\\t'		5095904	0		==			
ANR	5096052	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096053	Identifier	buf		5095904	0					
ANR	5096054	Identifier	ibuf		5095904	1					
ANR	5096055	PrimaryExpression	'\\t'		5095904	1					
ANR	5096056	EqualityExpression	buf [ ibuf ] == '\\r'		5095904	1		==			
ANR	5096057	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096058	Identifier	buf		5095904	0					
ANR	5096059	Identifier	ibuf		5095904	1					
ANR	5096060	PrimaryExpression	'\\r'		5095904	1					
ANR	5096061	CompoundStatement		49:62:1242:1242	5095904	1					
ANR	5096062	IfStatement	if ( ibuf == 0 )		5095904	0					
ANR	5096063	Condition	ibuf == 0	1717:8:41694:41702	5095904	0	True				
ANR	5096064	EqualityExpression	ibuf == 0		5095904	0		==			
ANR	5096065	Identifier	ibuf		5095904	0					
ANR	5096066	PrimaryExpression	0		5095904	1					
ANR	5096067	CompoundStatement		51:20:1299:1299	5095904	1					
ANR	5096068	ContinueStatement	continue ;	1718:4:41713:41721	5095904	0	True				
ANR	5096069	IfStatement	if ( buf [ ibuf ] == ' ' && buf [ ibuf - 1 ] == '\\\\' )		5095904	1					
ANR	5096070	Condition	buf [ ibuf ] == ' ' && buf [ ibuf - 1 ] == '\\\\'	1723:8:41888:41922	5095904	0	True				
ANR	5096071	AndExpression	buf [ ibuf ] == ' ' && buf [ ibuf - 1 ] == '\\\\'		5095904	0		&&			
ANR	5096072	EqualityExpression	buf [ ibuf ] == ' '		5095904	0		==			
ANR	5096073	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096074	Identifier	buf		5095904	0					
ANR	5096075	Identifier	ibuf		5095904	1					
ANR	5096076	PrimaryExpression	' '		5095904	1					
ANR	5096077	EqualityExpression	buf [ ibuf - 1 ] == '\\\\'		5095904	1		==			
ANR	5096078	ArrayIndexing	buf [ ibuf - 1 ]		5095904	0					
ANR	5096079	Identifier	buf		5095904	0					
ANR	5096080	AdditiveExpression	ibuf - 1		5095904	1		-			
ANR	5096081	Identifier	ibuf		5095904	0					
ANR	5096082	PrimaryExpression	1		5095904	1					
ANR	5096083	PrimaryExpression	'\\\\'		5095904	1					
ANR	5096084	CompoundStatement		57:46:1519:1519	5095904	1					
ANR	5096085	ExpressionStatement	buf [ ibuf - 1 ] = ' '	1724:4:41932:41949	5095904	0	True				
ANR	5096086	AssignmentExpression	buf [ ibuf - 1 ] = ' '		5095904	0		=			
ANR	5096087	ArrayIndexing	buf [ ibuf - 1 ]		5095904	0					
ANR	5096088	Identifier	buf		5095904	0					
ANR	5096089	AdditiveExpression	ibuf - 1		5095904	1		-			
ANR	5096090	Identifier	ibuf		5095904	0					
ANR	5096091	PrimaryExpression	1		5095904	1					
ANR	5096092	PrimaryExpression	' '		5095904	1					
ANR	5096093	ContinueStatement	continue ;	1725:4:41955:41963	5095904	1	True				
ANR	5096094	ExpressionStatement	buf [ ibuf ] = '\\0'	1728:3:42041:42057	5095904	2	True				
ANR	5096095	AssignmentExpression	buf [ ibuf ] = '\\0'		5095904	0		=			
ANR	5096096	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096097	Identifier	buf		5095904	0					
ANR	5096098	Identifier	ibuf		5095904	1					
ANR	5096099	PrimaryExpression	'\\0'		5095904	1					
ANR	5096100	ExpressionStatement	command_argv [ iargv ] = ( char * ) globus_libc_malloc ( ibuf + 5 )	1729:3:42062:42121	5095904	3	True				
ANR	5096101	AssignmentExpression	command_argv [ iargv ] = ( char * ) globus_libc_malloc ( ibuf + 5 )		5095904	0		=			
ANR	5096102	ArrayIndexing	command_argv [ iargv ]		5095904	0					
ANR	5096103	Identifier	command_argv		5095904	0					
ANR	5096104	Identifier	iargv		5095904	1					
ANR	5096105	CastExpression	( char * ) globus_libc_malloc ( ibuf + 5 )		5095904	1					
ANR	5096106	CastTarget	char *		5095904	0					
ANR	5096107	CallExpression	globus_libc_malloc ( ibuf + 5 )		5095904	1					
ANR	5096108	Callee	globus_libc_malloc		5095904	0					
ANR	5096109	Identifier	globus_libc_malloc		5095904	0					
ANR	5096110	ArgumentList	ibuf + 5		5095904	1					
ANR	5096111	Argument	ibuf + 5		5095904	0					
ANR	5096112	AdditiveExpression	ibuf + 5		5095904	0		+			
ANR	5096113	Identifier	ibuf		5095904	0					
ANR	5096114	PrimaryExpression	5		5095904	1					
ANR	5096115	ExpressionStatement	"strcpy ( command_argv [ iargv ] , buf )"	1730:3:42126:42157	5095904	4	True				
ANR	5096116	CallExpression	"strcpy ( command_argv [ iargv ] , buf )"		5095904	0					
ANR	5096117	Callee	strcpy		5095904	0					
ANR	5096118	Identifier	strcpy		5095904	0					
ANR	5096119	ArgumentList	command_argv [ iargv ]		5095904	1					
ANR	5096120	Argument	command_argv [ iargv ]		5095904	0					
ANR	5096121	ArrayIndexing	command_argv [ iargv ]		5095904	0					
ANR	5096122	Identifier	command_argv		5095904	0					
ANR	5096123	Identifier	iargv		5095904	1					
ANR	5096124	Argument	buf		5095904	1					
ANR	5096125	Identifier	buf		5095904	0					
ANR	5096126	ExpressionStatement	ibuf = 0	1731:3:42162:42170	5095904	5	True				
ANR	5096127	AssignmentExpression	ibuf = 0		5095904	0		=			
ANR	5096128	Identifier	ibuf		5095904	0					
ANR	5096129	PrimaryExpression	0		5095904	1					
ANR	5096130	ExpressionStatement	iargv ++	1732:3:42175:42182	5095904	6	True				
ANR	5096131	PostIncDecOperationExpression	iargv ++		5095904	0					
ANR	5096132	Identifier	iargv		5095904	0					
ANR	5096133	IncDec	++		5095904	1					
ANR	5096134	ContinueStatement	continue ;	1733:3:42187:42195	5095904	7	True				
ANR	5096135	IfStatement	if ( buf [ ibuf ] == '\\n' )		5095904	4					
ANR	5096136	Condition	buf [ ibuf ] == '\\n'	1737:7:42271:42285	5095904	0	True				
ANR	5096137	EqualityExpression	buf [ ibuf ] == '\\n'		5095904	0		==			
ANR	5096138	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096139	Identifier	buf		5095904	0					
ANR	5096140	Identifier	ibuf		5095904	1					
ANR	5096141	PrimaryExpression	'\\n'		5095904	1					
ANR	5096142	CompoundStatement		71:25:1882:1882	5095904	1					
ANR	5096143	ExpressionStatement	buf [ ibuf ] = '\\0'	1738:3:42295:42311	5095904	0	True				
ANR	5096144	AssignmentExpression	buf [ ibuf ] = '\\0'		5095904	0		=			
ANR	5096145	ArrayIndexing	buf [ ibuf ]		5095904	0					
ANR	5096146	Identifier	buf		5095904	0					
ANR	5096147	Identifier	ibuf		5095904	1					
ANR	5096148	PrimaryExpression	'\\0'		5095904	1					
ANR	5096149	ExpressionStatement	command_argv [ iargv ] = ( char * ) globus_libc_malloc ( ibuf + 5 )	1739:3:42316:42375	5095904	1	True				
ANR	5096150	AssignmentExpression	command_argv [ iargv ] = ( char * ) globus_libc_malloc ( ibuf + 5 )		5095904	0		=			
ANR	5096151	ArrayIndexing	command_argv [ iargv ]		5095904	0					
ANR	5096152	Identifier	command_argv		5095904	0					
ANR	5096153	Identifier	iargv		5095904	1					
ANR	5096154	CastExpression	( char * ) globus_libc_malloc ( ibuf + 5 )		5095904	1					
ANR	5096155	CastTarget	char *		5095904	0					
ANR	5096156	CallExpression	globus_libc_malloc ( ibuf + 5 )		5095904	1					
ANR	5096157	Callee	globus_libc_malloc		5095904	0					
ANR	5096158	Identifier	globus_libc_malloc		5095904	0					
ANR	5096159	ArgumentList	ibuf + 5		5095904	1					
ANR	5096160	Argument	ibuf + 5		5095904	0					
ANR	5096161	AdditiveExpression	ibuf + 5		5095904	0		+			
ANR	5096162	Identifier	ibuf		5095904	0					
ANR	5096163	PrimaryExpression	5		5095904	1					
ANR	5096164	ExpressionStatement	"strcpy ( command_argv [ iargv ] , buf )"	1740:3:42380:42411	5095904	2	True				
ANR	5096165	CallExpression	"strcpy ( command_argv [ iargv ] , buf )"		5095904	0					
ANR	5096166	Callee	strcpy		5095904	0					
ANR	5096167	Identifier	strcpy		5095904	0					
ANR	5096168	ArgumentList	command_argv [ iargv ]		5095904	1					
ANR	5096169	Argument	command_argv [ iargv ]		5095904	0					
ANR	5096170	ArrayIndexing	command_argv [ iargv ]		5095904	0					
ANR	5096171	Identifier	command_argv		5095904	0					
ANR	5096172	Identifier	iargv		5095904	1					
ANR	5096173	Argument	buf		5095904	1					
ANR	5096174	Identifier	buf		5095904	0					
ANR	5096175	ReturnStatement	return command_argv ;	1741:3:42416:42435	5095904	3	True				
ANR	5096176	Identifier	command_argv		5095904	0					
ANR	5096177	ExpressionStatement	ibuf ++	1746:2:42557:42563	5095904	5	True				
ANR	5096178	PostIncDecOperationExpression	ibuf ++		5095904	0					
ANR	5096179	Identifier	ibuf		5095904	0					
ANR	5096180	IncDec	++		5095904	1					
ANR	5096181	ReturnType	char * *		5095904	1					
ANR	5096182	Identifier	read_command		5095904	2					
ANR	5096183	ParameterList	int stdin_fd		5095904	3					
ANR	5096184	Parameter	int stdin_fd	1666:13:40392:40403	5095904	0	True				
ANR	5096185	ParameterType	int		5095904	0					
ANR	5096186	Identifier	stdin_fd		5095904	1					
ANR	5096187	CFGEntryNode	ENTRY		5095904		True				
ANR	5096188	CFGExitNode	EXIT		5095904		True				
ANR	5096189	InfiniteForNode	true		5095904		True				
ANR	5096190	Symbol	globus_libc_calloc		5095904						
ANR	5096191	Symbol	errno		5095904						
ANR	5096192	Symbol	* buf		5095904						
ANR	5096193	Symbol	NULL		5095904						
ANR	5096194	Symbol	read		5095904						
ANR	5096195	Symbol	command_argv		5095904						
ANR	5096196	Symbol	* iargv		5095904						
ANR	5096197	Symbol	EINTR		5095904						
ANR	5096198	Symbol	EAGAIN		5095904						
ANR	5096199	Symbol	stdin_fd		5095904						
ANR	5096200	Symbol	result		5095904						
ANR	5096201	Symbol	buf		5095904						
ANR	5096202	Symbol	EWOULDBLOCK		5095904						
ANR	5096203	Symbol	globus_libc_malloc		5095904						
ANR	5096204	Symbol	ibuf		5095904						
ANR	5096205	Symbol	SIGPIPE		5095904						
ANR	5096206	Symbol	iargv		5095904						
ANR	5096207	Symbol	* ibuf		5095904						
ANR	5096208	Symbol	* command_argv		5095904						
ANR	5096209	DeclStmt									
ANR	5096210	Decl							handle_	handle_ ( input_line )	x
ANR	5096211	Function	service_commands	1771:0:43194:45346							
ANR	5096212	FunctionDef	"service_commands (void * arg , globus_io_handle_t * gio_handle , globus_result_t rest)"		5096211	0					
ANR	5096213	CompoundStatement		1773:0:43279:45346	5096211	0					
ANR	5096214	IdentifierDeclStatement	char * * input_line ;	1774:1:43282:43299	5096211	0	True				
ANR	5096215	IdentifierDecl	* * input_line		5096211	0					
ANR	5096216	IdentifierDeclType	char * *		5096211	0					
ANR	5096217	Identifier	input_line		5096211	1					
ANR	5096218	IdentifierDeclStatement	int result ;	1775:1:43302:43312	5096211	1	True				
ANR	5096219	IdentifierDecl	result		5096211	0					
ANR	5096220	IdentifierDeclType	int		5096211	0					
ANR	5096221	Identifier	result		5096211	1					
ANR	5096222	IdentifierDeclStatement	globus_thread_t ignored_threadid ;	1776:1:43315:43347	5096211	2	True				
ANR	5096223	IdentifierDecl	ignored_threadid		5096211	0					
ANR	5096224	IdentifierDeclType	globus_thread_t		5096211	0					
ANR	5096225	Identifier	ignored_threadid		5096211	1					
ANR	5096226	ExpressionStatement	input_line = read_command ( STDIN_FILENO )	1778:2:43352:43391	5096211	3	True				
ANR	5096227	AssignmentExpression	input_line = read_command ( STDIN_FILENO )		5096211	0		=			
ANR	5096228	Identifier	input_line		5096211	0					
ANR	5096229	CallExpression	read_command ( STDIN_FILENO )		5096211	1					
ANR	5096230	Callee	read_command		5096211	0					
ANR	5096231	Identifier	read_command		5096211	0					
ANR	5096232	ArgumentList	STDIN_FILENO		5096211	1					
ANR	5096233	Argument	STDIN_FILENO		5096211	0					
ANR	5096234	Identifier	STDIN_FILENO		5096211	0					
ANR	5096235	IfStatement	if ( input_line == NULL )		5096211	4					
ANR	5096236	Condition	input_line == NULL	1780:7:43401:43418	5096211	0	True				
ANR	5096237	EqualityExpression	input_line == NULL		5096211	0		==			
ANR	5096238	Identifier	input_line		5096211	0					
ANR	5096239	Identifier	NULL		5096211	1					
ANR	5096240	CompoundStatement		8:28:142:142	5096211	1					
ANR	5096241	GotoStatement	goto reregister_and_return ;	1781:3:43427:43453	5096211	0	True				
ANR	5096242	Identifier	reregister_and_return		5096211	0					
ANR	5096243	ElseStatement	else		5096211	0					
ANR	5096244	Statement	HANDLE_SYNC	1795:2:43813:43823	5096211	0	True				
ANR	5096245	IfStatement	if ( input_line [ 0 ] == NULL )		5096211	5					
ANR	5096246	Condition	input_line [ 0 ] == NULL	1784:7:43467:43487	5096211	0	True				
ANR	5096247	EqualityExpression	input_line [ 0 ] == NULL		5096211	0		==			
ANR	5096248	ArrayIndexing	input_line [ 0 ]		5096211	0					
ANR	5096249	Identifier	input_line		5096211	0					
ANR	5096250	PrimaryExpression	0		5096211	1					
ANR	5096251	Identifier	NULL		5096211	1					
ANR	5096252	CompoundStatement		12:31:211:211	5096211	1					
ANR	5096253	ExpressionStatement	free ( input_line )	1785:3:43496:43514	5096211	0	True				
ANR	5096254	CallExpression	free ( input_line )		5096211	0					
ANR	5096255	Callee	free		5096211	0					
ANR	5096256	Identifier	free		5096211	0					
ANR	5096257	ArgumentList	input_line		5096211	1					
ANR	5096258	Argument	input_line		5096211	0					
ANR	5096259	Identifier	input_line		5096211	0					
ANR	5096260	GotoStatement	goto reregister_and_return ;	1786:3:43519:43545	5096211	1	True				
ANR	5096261	Identifier	reregister_and_return		5096211	0					
ANR	5096262	ElseStatement	else		5096211	0					
ANR	5096263	Statement	HANDLE_SYNC	1794:2:43769:43779	5096211	0	True				
ANR	5096264	ExpressionStatement	gahp_sem_down ( & print_control )	1791:2:43692:43721	5096211	6	True				
ANR	5096265	CallExpression	gahp_sem_down ( & print_control )		5096211	0					
ANR	5096266	Callee	gahp_sem_down		5096211	0					
ANR	5096267	Identifier	gahp_sem_down		5096211	0					
ANR	5096268	ArgumentList	& print_control		5096211	1					
ANR	5096269	Argument	& print_control		5096211	0					
ANR	5096270	UnaryOperationExpression	& print_control		5096211	0					
ANR	5096271	UnaryOperator	&		5096211	0					
ANR	5096272	Identifier	print_control		5096211	1					
ANR	5096273	Statement	HANDLE_SYNC	1793:2:43726:43736	5096211	7	True				
ANR	5096274	Statement	(	1793:13:43737:43737	5096211	8	True				
ANR	5096275	Statement	initialize_from_file	1793:15:43739:43758	5096211	9	True				
ANR	5096276	Statement	)	1793:36:43760:43760	5096211	10	True				
ANR	5096277	Statement	(	1794:13:43780:43780	5096211	11	True				
ANR	5096278	Statement	cache_proxy_from_file	1794:15:43782:43802	5096211	12	True				
ANR	5096279	Statement	)	1794:37:43804:43804	5096211	13	True				
ANR	5096280	Statement	(	1795:13:43824:43824	5096211	14	True				
ANR	5096281	Statement	uncache_proxy	1795:15:43826:43838	5096211	15	True				
ANR	5096282	Statement	)	1795:29:43840:43840	5096211	16	True				
ANR	5096283	ReturnType	void		5096211	1					
ANR	5096284	Identifier	service_commands		5096211	2					
ANR	5096285	ParameterList	"void * arg , globus_io_handle_t * gio_handle , globus_result_t rest"		5096211	3					
ANR	5096286	Parameter	void * arg	1772:17:43216:43224	5096211	0	True				
ANR	5096287	ParameterType	void *		5096211	0					
ANR	5096288	Identifier	arg		5096211	1					
ANR	5096289	Parameter	globus_io_handle_t * gio_handle	1772:27:43226:43255	5096211	1	True				
ANR	5096290	ParameterType	globus_io_handle_t *		5096211	0					
ANR	5096291	Identifier	gio_handle		5096211	1					
ANR	5096292	Parameter	globus_result_t rest	1772:58:43257:43276	5096211	2	True				
ANR	5096293	ParameterType	globus_result_t		5096211	0					
ANR	5096294	Identifier	rest		5096211	1					
ANR	5096295	CFGEntryNode	ENTRY		5096211		True				
ANR	5096296	CFGExitNode	EXIT		5096211		True				
ANR	5096297	CFGErrorNode	ERROR		5096211		True				
ANR	5096298	Symbol	result		5096211						
ANR	5096299	Symbol	rest		5096211						
ANR	5096300	Symbol	* input_line		5096211						
ANR	5096301	Symbol	NULL		5096211						
ANR	5096302	Symbol	STDIN_FILENO		5096211						
ANR	5096303	Symbol	arg		5096211						
ANR	5096304	Symbol	gio_handle		5096211						
ANR	5096305	Symbol	read_command		5096211						
ANR	5096306	Symbol	input_line		5096211						
ANR	5096307	Symbol	ignored_threadid		5096211						
ANR	5096308	Symbol	& print_control		5096211						
ANR	5096309	Function	quit_on_signal	1845:0:45350:45455							
ANR	5096310	FunctionDef	quit_on_signal (int sig)		5096309	0					
ANR	5096311	CompoundStatement		1847:0:45379:45455	5096309	0					
ANR	5096312	ExpressionStatement	_exit ( sig )	1849:1:45443:45453	5096309	0	True				
ANR	5096313	CallExpression	_exit ( sig )		5096309	0					
ANR	5096314	Callee	_exit		5096309	0					
ANR	5096315	Identifier	_exit		5096309	0					
ANR	5096316	ArgumentList	sig		5096309	1					
ANR	5096317	Argument	sig		5096309	0					
ANR	5096318	Identifier	sig		5096309	0					
ANR	5096319	ReturnType	void		5096309	1					
ANR	5096320	Identifier	quit_on_signal		5096309	2					
ANR	5096321	ParameterList	int sig		5096309	3					
ANR	5096322	Parameter	int sig	1846:15:45370:45376	5096309	0	True				
ANR	5096323	ParameterType	int		5096309	0					
ANR	5096324	Identifier	sig		5096309	1					
ANR	5096325	CFGEntryNode	ENTRY		5096309		True				
ANR	5096326	CFGExitNode	EXIT		5096309		True				
ANR	5096327	Symbol	sig		5096309						
ANR	5096328	Function	quit_on_signal_with_core	1853:0:45459:47410							
ANR	5096329	FunctionDef	quit_on_signal_with_core (int sig)		5096328	0					
ANR	5096330	CompoundStatement		1855:0:45498:47410	5096328	0					
ANR	5096331	IdentifierDeclStatement	sigset_t sigSet ;	1857:1:45515:45530	5096328	0	True				
ANR	5096332	IdentifierDecl	sigSet		5096328	0					
ANR	5096333	IdentifierDeclType	sigset_t		5096328	0					
ANR	5096334	Identifier	sigSet		5096328	1					
ANR	5096335	IdentifierDeclStatement	struct sigaction act ;	1858:1:45533:45553	5096328	1	True				
ANR	5096336	IdentifierDecl	act		5096328	0					
ANR	5096337	IdentifierDeclType	struct sigaction		5096328	0					
ANR	5096338	Identifier	act		5096328	1					
ANR	5096339	IdentifierDeclStatement	int pid ;	1871:1:46271:46278	5096328	2	True				
ANR	5096340	IdentifierDecl	pid		5096328	0					
ANR	5096341	IdentifierDeclType	int		5096328	0					
ANR	5096342	Identifier	pid		5096328	1					
ANR	5096343	ExpressionStatement	pid = fork ( )	1872:1:46281:46293	5096328	3	True				
ANR	5096344	AssignmentExpression	pid = fork ( )		5096328	0		=			
ANR	5096345	Identifier	pid		5096328	0					
ANR	5096346	CallExpression	fork ( )		5096328	1					
ANR	5096347	Callee	fork		5096328	0					
ANR	5096348	Identifier	fork		5096328	0					
ANR	5096349	ArgumentList			5096328	1					
ANR	5096350	IfStatement	if ( pid == - 1 )		5096328	4					
ANR	5096351	Condition	pid == - 1	1873:6:46301:46309	5096328	0	True				
ANR	5096352	EqualityExpression	pid == - 1		5096328	0		==			
ANR	5096353	Identifier	pid		5096328	0					
ANR	5096354	UnaryOperationExpression	- 1		5096328	1					
ANR	5096355	UnaryOperator	-		5096328	0					
ANR	5096356	PrimaryExpression	1		5096328	1					
ANR	5096357	CompoundStatement		19:18:814:814	5096328	1					
ANR	5096358	ExpressionStatement	_exit ( 66 )	1874:2:46317:46326	5096328	0	True				
ANR	5096359	CallExpression	_exit ( 66 )		5096328	0					
ANR	5096360	Callee	_exit		5096328	0					
ANR	5096361	Identifier	_exit		5096328	0					
ANR	5096362	ArgumentList	66		5096328	1					
ANR	5096363	Argument	66		5096328	0					
ANR	5096364	PrimaryExpression	66		5096328	0					
ANR	5096365	IfStatement	if ( pid )		5096328	5					
ANR	5096366	Condition	pid	1876:6:46337:46339	5096328	0	True				
ANR	5096367	Identifier	pid		5096328	0					
ANR	5096368	CompoundStatement		22:12:844:844	5096328	1					
ANR	5096369	ExpressionStatement	_exit ( sig )	1878:2:46362:46372	5096328	0	True				
ANR	5096370	CallExpression	_exit ( sig )		5096328	0					
ANR	5096371	Callee	_exit		5096328	0					
ANR	5096372	Identifier	_exit		5096328	0					
ANR	5096373	ArgumentList	sig		5096328	1					
ANR	5096374	Argument	sig		5096328	0					
ANR	5096375	Identifier	sig		5096328	0					
ANR	5096376	ElseStatement	else		5096328	0					
ANR	5096377	CompoundStatement		25:8:935:935	5096328	0					
ANR	5096378	ExpressionStatement	sigemptyset ( & act . sa_mask )	1893:2:47006:47031	5096328	0	True				
ANR	5096379	CallExpression	sigemptyset ( & act . sa_mask )		5096328	0					
ANR	5096380	Callee	sigemptyset		5096328	0					
ANR	5096381	Identifier	sigemptyset		5096328	0					
ANR	5096382	ArgumentList	& act . sa_mask		5096328	1					
ANR	5096383	Argument	& act . sa_mask		5096328	0					
ANR	5096384	UnaryOperationExpression	& act . sa_mask		5096328	0					
ANR	5096385	UnaryOperator	&		5096328	0					
ANR	5096386	MemberAccess	act . sa_mask		5096328	1					
ANR	5096387	Identifier	act		5096328	0					
ANR	5096388	Identifier	sa_mask		5096328	1					
ANR	5096389	ExpressionStatement	act . sa_flags = 0	1894:2:47036:47052	5096328	1	True				
ANR	5096390	AssignmentExpression	act . sa_flags = 0		5096328	0		=			
ANR	5096391	MemberAccess	act . sa_flags		5096328	0					
ANR	5096392	Identifier	act		5096328	0					
ANR	5096393	Identifier	sa_flags		5096328	1					
ANR	5096394	PrimaryExpression	0		5096328	1					
ANR	5096395	ExpressionStatement	act . sa_handler = SIG_DFL	1895:2:47056:47080	5096328	2	True				
ANR	5096396	AssignmentExpression	act . sa_handler = SIG_DFL		5096328	0		=			
ANR	5096397	MemberAccess	act . sa_handler		5096328	0					
ANR	5096398	Identifier	act		5096328	0					
ANR	5096399	Identifier	sa_handler		5096328	1					
ANR	5096400	Identifier	SIG_DFL		5096328	1					
ANR	5096401	ExpressionStatement	"sigaction ( sig , & act , 0 )"	1896:2:47084:47105	5096328	3	True				
ANR	5096402	CallExpression	"sigaction ( sig , & act , 0 )"		5096328	0					
ANR	5096403	Callee	sigaction		5096328	0					
ANR	5096404	Identifier	sigaction		5096328	0					
ANR	5096405	ArgumentList	sig		5096328	1					
ANR	5096406	Argument	sig		5096328	0					
ANR	5096407	Identifier	sig		5096328	0					
ANR	5096408	Argument	& act		5096328	1					
ANR	5096409	UnaryOperationExpression	& act		5096328	0					
ANR	5096410	UnaryOperator	&		5096328	0					
ANR	5096411	Identifier	act		5096328	1					
ANR	5096412	Argument	0		5096328	2					
ANR	5096413	PrimaryExpression	0		5096328	0					
ANR	5096414	ExpressionStatement	"kill ( getpid ( ) , sig )"	1897:2:47130:47148	5096328	4	True				
ANR	5096415	CallExpression	"kill ( getpid ( ) , sig )"		5096328	0					
ANR	5096416	Callee	kill		5096328	0					
ANR	5096417	Identifier	kill		5096328	0					
ANR	5096418	ArgumentList	getpid ( )		5096328	1					
ANR	5096419	Argument	getpid ( )		5096328	0					
ANR	5096420	CallExpression	getpid ( )		5096328	0					
ANR	5096421	Callee	getpid		5096328	0					
ANR	5096422	Identifier	getpid		5096328	0					
ANR	5096423	ArgumentList			5096328	1					
ANR	5096424	Argument	sig		5096328	1					
ANR	5096425	Identifier	sig		5096328	0					
ANR	5096426	ExpressionStatement	sigemptyset ( & sigSet )	1898:2:47206:47226	5096328	5	True				
ANR	5096427	CallExpression	sigemptyset ( & sigSet )		5096328	0					
ANR	5096428	Callee	sigemptyset		5096328	0					
ANR	5096429	Identifier	sigemptyset		5096328	0					
ANR	5096430	ArgumentList	& sigSet		5096328	1					
ANR	5096431	Argument	& sigSet		5096328	0					
ANR	5096432	UnaryOperationExpression	& sigSet		5096328	0					
ANR	5096433	UnaryOperator	&		5096328	0					
ANR	5096434	Identifier	sigSet		5096328	1					
ANR	5096435	ExpressionStatement	"sigaddset ( & sigSet , sig )"	1899:2:47230:47252	5096328	6	True				
ANR	5096436	CallExpression	"sigaddset ( & sigSet , sig )"		5096328	0					
ANR	5096437	Callee	sigaddset		5096328	0					
ANR	5096438	Identifier	sigaddset		5096328	0					
ANR	5096439	ArgumentList	& sigSet		5096328	1					
ANR	5096440	Argument	& sigSet		5096328	0					
ANR	5096441	UnaryOperationExpression	& sigSet		5096328	0					
ANR	5096442	UnaryOperator	&		5096328	0					
ANR	5096443	Identifier	sigSet		5096328	1					
ANR	5096444	Argument	sig		5096328	1					
ANR	5096445	Identifier	sig		5096328	0					
ANR	5096446	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & sigSet , 0 )"	1900:2:47256:47290	5096328	7	True				
ANR	5096447	CallExpression	"sigprocmask ( SIG_UNBLOCK , & sigSet , 0 )"		5096328	0					
ANR	5096448	Callee	sigprocmask		5096328	0					
ANR	5096449	Identifier	sigprocmask		5096328	0					
ANR	5096450	ArgumentList	SIG_UNBLOCK		5096328	1					
ANR	5096451	Argument	SIG_UNBLOCK		5096328	0					
ANR	5096452	Identifier	SIG_UNBLOCK		5096328	0					
ANR	5096453	Argument	& sigSet		5096328	1					
ANR	5096454	UnaryOperationExpression	& sigSet		5096328	0					
ANR	5096455	UnaryOperator	&		5096328	0					
ANR	5096456	Identifier	sigSet		5096328	1					
ANR	5096457	Argument	0		5096328	2					
ANR	5096458	PrimaryExpression	0		5096328	0					
ANR	5096459	ExpressionStatement	_exit ( sig )	1902:2:47388:47398	5096328	8	True				
ANR	5096460	CallExpression	_exit ( sig )		5096328	0					
ANR	5096461	Callee	_exit		5096328	0					
ANR	5096462	Identifier	_exit		5096328	0					
ANR	5096463	ArgumentList	sig		5096328	1					
ANR	5096464	Argument	sig		5096328	0					
ANR	5096465	Identifier	sig		5096328	0					
ANR	5096466	ReturnType	void		5096328	1					
ANR	5096467	Identifier	quit_on_signal_with_core		5096328	2					
ANR	5096468	ParameterList	int sig		5096328	3					
ANR	5096469	Parameter	int sig	1854:25:45489:45495	5096328	0	True				
ANR	5096470	ParameterType	int		5096328	0					
ANR	5096471	Identifier	sig		5096328	1					
ANR	5096472	CFGEntryNode	ENTRY		5096328		True				
ANR	5096473	CFGExitNode	EXIT		5096328		True				
ANR	5096474	Symbol	& sigSet		5096328						
ANR	5096475	Symbol	sigSet		5096328						
ANR	5096476	Symbol	& act . sa_mask		5096328						
ANR	5096477	Symbol	pid		5096328						
ANR	5096478	Symbol	act . sa_flags		5096328						
ANR	5096479	Symbol	sig		5096328						
ANR	5096480	Symbol	act . sa_handler		5096328						
ANR	5096481	Symbol	fork		5096328						
ANR	5096482	Symbol	act		5096328						
ANR	5096483	Symbol	SIG_UNBLOCK		5096328						
ANR	5096484	Symbol	SIG_DFL		5096328						
ANR	5096485	Symbol	getpid		5096328						
ANR	5096486	Symbol	& act		5096328						
ANR	5096487	Function	main	1908:0:47414:50879							
ANR	5096488	FunctionDef	"main (int argc , char * * argv)"		5096487	0					
ANR	5096489	CompoundStatement		1909:0:47442:50879	5096487	0					
ANR	5096490	IdentifierDeclStatement	"int result , err ;"	1910:1:47445:47460	5096487	0	True				
ANR	5096491	IdentifierDecl	result		5096487	0					
ANR	5096492	IdentifierDeclType	int		5096487	0					
ANR	5096493	Identifier	result		5096487	1					
ANR	5096494	IdentifierDecl	err		5096487	1					
ANR	5096495	IdentifierDeclType	int		5096487	0					
ANR	5096496	Identifier	err		5096487	1					
ANR	5096497	IdentifierDeclStatement	sigset_t sigSet ;	1912:1:47477:47492	5096487	1	True				
ANR	5096498	IdentifierDecl	sigSet		5096487	0					
ANR	5096499	IdentifierDeclType	sigset_t		5096487	0					
ANR	5096500	Identifier	sigSet		5096487	1					
ANR	5096501	IdentifierDeclStatement	struct sigaction act ;	1913:1:47495:47515	5096487	2	True				
ANR	5096502	IdentifierDecl	act		5096487	0					
ANR	5096503	IdentifierDeclType	struct sigaction		5096487	0					
ANR	5096504	Identifier	act		5096487	1					
ANR	5096505	ExpressionStatement	ResultsPending = 0	1915:1:47525:47543	5096487	3	True				
ANR	5096506	AssignmentExpression	ResultsPending = 0		5096487	0		=			
ANR	5096507	Identifier	ResultsPending		5096487	0					
ANR	5096508	PrimaryExpression	0		5096487	1					
ANR	5096509	ExpressionStatement	GlobusActive = 0	1916:1:47546:47562	5096487	4	True				
ANR	5096510	AssignmentExpression	GlobusActive = 0		5096487	0		=			
ANR	5096511	Identifier	GlobusActive		5096487	0					
ANR	5096512	PrimaryExpression	0		5096487	1					
ANR	5096513	ExpressionStatement	AsyncResults = 0	1917:1:47565:47581	5096487	5	True				
ANR	5096514	AssignmentExpression	AsyncResults = 0		5096487	0		=			
ANR	5096515	Identifier	AsyncResults		5096487	0					
ANR	5096516	PrimaryExpression	0		5096487	1					
ANR	5096517	ExpressionStatement	sigemptyset ( & sigSet )	1921:1:47652:47674	5096487	6	True				
ANR	5096518	CallExpression	sigemptyset ( & sigSet )		5096487	0					
ANR	5096519	Callee	sigemptyset		5096487	0					
ANR	5096520	Identifier	sigemptyset		5096487	0					
ANR	5096521	ArgumentList	& sigSet		5096487	1					
ANR	5096522	Argument	& sigSet		5096487	0					
ANR	5096523	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096524	UnaryOperator	&		5096487	0					
ANR	5096525	Identifier	sigSet		5096487	1					
ANR	5096526	ExpressionStatement	"sigaddset ( & sigSet , SIGTERM )"	1922:1:47677:47703	5096487	7	True				
ANR	5096527	CallExpression	"sigaddset ( & sigSet , SIGTERM )"		5096487	0					
ANR	5096528	Callee	sigaddset		5096487	0					
ANR	5096529	Identifier	sigaddset		5096487	0					
ANR	5096530	ArgumentList	& sigSet		5096487	1					
ANR	5096531	Argument	& sigSet		5096487	0					
ANR	5096532	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096533	UnaryOperator	&		5096487	0					
ANR	5096534	Identifier	sigSet		5096487	1					
ANR	5096535	Argument	SIGTERM		5096487	1					
ANR	5096536	Identifier	SIGTERM		5096487	0					
ANR	5096537	ExpressionStatement	"sigaddset ( & sigSet , SIGQUIT )"	1923:1:47706:47732	5096487	8	True				
ANR	5096538	CallExpression	"sigaddset ( & sigSet , SIGQUIT )"		5096487	0					
ANR	5096539	Callee	sigaddset		5096487	0					
ANR	5096540	Identifier	sigaddset		5096487	0					
ANR	5096541	ArgumentList	& sigSet		5096487	1					
ANR	5096542	Argument	& sigSet		5096487	0					
ANR	5096543	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096544	UnaryOperator	&		5096487	0					
ANR	5096545	Identifier	sigSet		5096487	1					
ANR	5096546	Argument	SIGQUIT		5096487	1					
ANR	5096547	Identifier	SIGQUIT		5096487	0					
ANR	5096548	ExpressionStatement	"sigaddset ( & sigSet , SIGPIPE )"	1924:1:47735:47761	5096487	9	True				
ANR	5096549	CallExpression	"sigaddset ( & sigSet , SIGPIPE )"		5096487	0					
ANR	5096550	Callee	sigaddset		5096487	0					
ANR	5096551	Identifier	sigaddset		5096487	0					
ANR	5096552	ArgumentList	& sigSet		5096487	1					
ANR	5096553	Argument	& sigSet		5096487	0					
ANR	5096554	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096555	UnaryOperator	&		5096487	0					
ANR	5096556	Identifier	sigSet		5096487	1					
ANR	5096557	Argument	SIGPIPE		5096487	1					
ANR	5096558	Identifier	SIGPIPE		5096487	0					
ANR	5096559	ExpressionStatement	sigemptyset ( & act . sa_mask )	1927:1:47792:47817	5096487	10	True				
ANR	5096560	CallExpression	sigemptyset ( & act . sa_mask )		5096487	0					
ANR	5096561	Callee	sigemptyset		5096487	0					
ANR	5096562	Identifier	sigemptyset		5096487	0					
ANR	5096563	ArgumentList	& act . sa_mask		5096487	1					
ANR	5096564	Argument	& act . sa_mask		5096487	0					
ANR	5096565	UnaryOperationExpression	& act . sa_mask		5096487	0					
ANR	5096566	UnaryOperator	&		5096487	0					
ANR	5096567	MemberAccess	act . sa_mask		5096487	1					
ANR	5096568	Identifier	act		5096487	0					
ANR	5096569	Identifier	sa_mask		5096487	1					
ANR	5096570	ExpressionStatement	act . sa_flags = 0	1928:1:47859:47875	5096487	11	True				
ANR	5096571	AssignmentExpression	act . sa_flags = 0		5096487	0		=			
ANR	5096572	MemberAccess	act . sa_flags		5096487	0					
ANR	5096573	Identifier	act		5096487	0					
ANR	5096574	Identifier	sa_flags		5096487	1					
ANR	5096575	PrimaryExpression	0		5096487	1					
ANR	5096576	ExpressionStatement	act . sa_handler = quit_on_signal	1931:1:47946:47977	5096487	12	True				
ANR	5096577	AssignmentExpression	act . sa_handler = quit_on_signal		5096487	0		=			
ANR	5096578	MemberAccess	act . sa_handler		5096487	0					
ANR	5096579	Identifier	act		5096487	0					
ANR	5096580	Identifier	sa_handler		5096487	1					
ANR	5096581	Identifier	quit_on_signal		5096487	1					
ANR	5096582	ExpressionStatement	"sigaction ( SIGTERM , & act , 0 )"	1932:1:47980:48005	5096487	13	True				
ANR	5096583	CallExpression	"sigaction ( SIGTERM , & act , 0 )"		5096487	0					
ANR	5096584	Callee	sigaction		5096487	0					
ANR	5096585	Identifier	sigaction		5096487	0					
ANR	5096586	ArgumentList	SIGTERM		5096487	1					
ANR	5096587	Argument	SIGTERM		5096487	0					
ANR	5096588	Identifier	SIGTERM		5096487	0					
ANR	5096589	Argument	& act		5096487	1					
ANR	5096590	UnaryOperationExpression	& act		5096487	0					
ANR	5096591	UnaryOperator	&		5096487	0					
ANR	5096592	Identifier	act		5096487	1					
ANR	5096593	Argument	0		5096487	2					
ANR	5096594	PrimaryExpression	0		5096487	0					
ANR	5096595	ExpressionStatement	"sigaction ( SIGQUIT , & act , 0 )"	1933:1:48008:48033	5096487	14	True				
ANR	5096596	CallExpression	"sigaction ( SIGQUIT , & act , 0 )"		5096487	0					
ANR	5096597	Callee	sigaction		5096487	0					
ANR	5096598	Identifier	sigaction		5096487	0					
ANR	5096599	ArgumentList	SIGQUIT		5096487	1					
ANR	5096600	Argument	SIGQUIT		5096487	0					
ANR	5096601	Identifier	SIGQUIT		5096487	0					
ANR	5096602	Argument	& act		5096487	1					
ANR	5096603	UnaryOperationExpression	& act		5096487	0					
ANR	5096604	UnaryOperator	&		5096487	0					
ANR	5096605	Identifier	act		5096487	1					
ANR	5096606	Argument	0		5096487	2					
ANR	5096607	PrimaryExpression	0		5096487	0					
ANR	5096608	ExpressionStatement	"sigaction ( SIGPIPE , & act , 0 )"	1934:1:48036:48061	5096487	15	True				
ANR	5096609	CallExpression	"sigaction ( SIGPIPE , & act , 0 )"		5096487	0					
ANR	5096610	Callee	sigaction		5096487	0					
ANR	5096611	Identifier	sigaction		5096487	0					
ANR	5096612	ArgumentList	SIGPIPE		5096487	1					
ANR	5096613	Argument	SIGPIPE		5096487	0					
ANR	5096614	Identifier	SIGPIPE		5096487	0					
ANR	5096615	Argument	& act		5096487	1					
ANR	5096616	UnaryOperationExpression	& act		5096487	0					
ANR	5096617	UnaryOperator	&		5096487	0					
ANR	5096618	Identifier	act		5096487	1					
ANR	5096619	Argument	0		5096487	2					
ANR	5096620	PrimaryExpression	0		5096487	0					
ANR	5096621	ExpressionStatement	act . sa_handler = quit_on_signal_with_core	1938:1:48156:48197	5096487	16	True				
ANR	5096622	AssignmentExpression	act . sa_handler = quit_on_signal_with_core		5096487	0		=			
ANR	5096623	MemberAccess	act . sa_handler		5096487	0					
ANR	5096624	Identifier	act		5096487	0					
ANR	5096625	Identifier	sa_handler		5096487	1					
ANR	5096626	Identifier	quit_on_signal_with_core		5096487	1					
ANR	5096627	ExpressionStatement	"sigaddset ( & sigSet , SIGILL )"	1939:1:48200:48225	5096487	17	True				
ANR	5096628	CallExpression	"sigaddset ( & sigSet , SIGILL )"		5096487	0					
ANR	5096629	Callee	sigaddset		5096487	0					
ANR	5096630	Identifier	sigaddset		5096487	0					
ANR	5096631	ArgumentList	& sigSet		5096487	1					
ANR	5096632	Argument	& sigSet		5096487	0					
ANR	5096633	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096634	UnaryOperator	&		5096487	0					
ANR	5096635	Identifier	sigSet		5096487	1					
ANR	5096636	Argument	SIGILL		5096487	1					
ANR	5096637	Identifier	SIGILL		5096487	0					
ANR	5096638	ExpressionStatement	"sigaction ( SIGILL , & act , 0 )"	1940:1:48228:48252	5096487	18	True				
ANR	5096639	CallExpression	"sigaction ( SIGILL , & act , 0 )"		5096487	0					
ANR	5096640	Callee	sigaction		5096487	0					
ANR	5096641	Identifier	sigaction		5096487	0					
ANR	5096642	ArgumentList	SIGILL		5096487	1					
ANR	5096643	Argument	SIGILL		5096487	0					
ANR	5096644	Identifier	SIGILL		5096487	0					
ANR	5096645	Argument	& act		5096487	1					
ANR	5096646	UnaryOperationExpression	& act		5096487	0					
ANR	5096647	UnaryOperator	&		5096487	0					
ANR	5096648	Identifier	act		5096487	1					
ANR	5096649	Argument	0		5096487	2					
ANR	5096650	PrimaryExpression	0		5096487	0					
ANR	5096651	ExpressionStatement	"sigaddset ( & sigSet , SIGABRT )"	1941:1:48255:48281	5096487	19	True				
ANR	5096652	CallExpression	"sigaddset ( & sigSet , SIGABRT )"		5096487	0					
ANR	5096653	Callee	sigaddset		5096487	0					
ANR	5096654	Identifier	sigaddset		5096487	0					
ANR	5096655	ArgumentList	& sigSet		5096487	1					
ANR	5096656	Argument	& sigSet		5096487	0					
ANR	5096657	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096658	UnaryOperator	&		5096487	0					
ANR	5096659	Identifier	sigSet		5096487	1					
ANR	5096660	Argument	SIGABRT		5096487	1					
ANR	5096661	Identifier	SIGABRT		5096487	0					
ANR	5096662	ExpressionStatement	"sigaction ( SIGABRT , & act , 0 )"	1942:1:48284:48309	5096487	20	True				
ANR	5096663	CallExpression	"sigaction ( SIGABRT , & act , 0 )"		5096487	0					
ANR	5096664	Callee	sigaction		5096487	0					
ANR	5096665	Identifier	sigaction		5096487	0					
ANR	5096666	ArgumentList	SIGABRT		5096487	1					
ANR	5096667	Argument	SIGABRT		5096487	0					
ANR	5096668	Identifier	SIGABRT		5096487	0					
ANR	5096669	Argument	& act		5096487	1					
ANR	5096670	UnaryOperationExpression	& act		5096487	0					
ANR	5096671	UnaryOperator	&		5096487	0					
ANR	5096672	Identifier	act		5096487	1					
ANR	5096673	Argument	0		5096487	2					
ANR	5096674	PrimaryExpression	0		5096487	0					
ANR	5096675	ExpressionStatement	"sigaddset ( & sigSet , SIGFPE )"	1943:1:48312:48337	5096487	21	True				
ANR	5096676	CallExpression	"sigaddset ( & sigSet , SIGFPE )"		5096487	0					
ANR	5096677	Callee	sigaddset		5096487	0					
ANR	5096678	Identifier	sigaddset		5096487	0					
ANR	5096679	ArgumentList	& sigSet		5096487	1					
ANR	5096680	Argument	& sigSet		5096487	0					
ANR	5096681	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096682	UnaryOperator	&		5096487	0					
ANR	5096683	Identifier	sigSet		5096487	1					
ANR	5096684	Argument	SIGFPE		5096487	1					
ANR	5096685	Identifier	SIGFPE		5096487	0					
ANR	5096686	ExpressionStatement	"sigaction ( SIGFPE , & act , 0 )"	1944:1:48340:48364	5096487	22	True				
ANR	5096687	CallExpression	"sigaction ( SIGFPE , & act , 0 )"		5096487	0					
ANR	5096688	Callee	sigaction		5096487	0					
ANR	5096689	Identifier	sigaction		5096487	0					
ANR	5096690	ArgumentList	SIGFPE		5096487	1					
ANR	5096691	Argument	SIGFPE		5096487	0					
ANR	5096692	Identifier	SIGFPE		5096487	0					
ANR	5096693	Argument	& act		5096487	1					
ANR	5096694	UnaryOperationExpression	& act		5096487	0					
ANR	5096695	UnaryOperator	&		5096487	0					
ANR	5096696	Identifier	act		5096487	1					
ANR	5096697	Argument	0		5096487	2					
ANR	5096698	PrimaryExpression	0		5096487	0					
ANR	5096699	ExpressionStatement	"sigaddset ( & sigSet , SIGSEGV )"	1945:1:48367:48393	5096487	23	True				
ANR	5096700	CallExpression	"sigaddset ( & sigSet , SIGSEGV )"		5096487	0					
ANR	5096701	Callee	sigaddset		5096487	0					
ANR	5096702	Identifier	sigaddset		5096487	0					
ANR	5096703	ArgumentList	& sigSet		5096487	1					
ANR	5096704	Argument	& sigSet		5096487	0					
ANR	5096705	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096706	UnaryOperator	&		5096487	0					
ANR	5096707	Identifier	sigSet		5096487	1					
ANR	5096708	Argument	SIGSEGV		5096487	1					
ANR	5096709	Identifier	SIGSEGV		5096487	0					
ANR	5096710	ExpressionStatement	"sigaction ( SIGSEGV , & act , 0 )"	1946:1:48396:48421	5096487	24	True				
ANR	5096711	CallExpression	"sigaction ( SIGSEGV , & act , 0 )"		5096487	0					
ANR	5096712	Callee	sigaction		5096487	0					
ANR	5096713	Identifier	sigaction		5096487	0					
ANR	5096714	ArgumentList	SIGSEGV		5096487	1					
ANR	5096715	Argument	SIGSEGV		5096487	0					
ANR	5096716	Identifier	SIGSEGV		5096487	0					
ANR	5096717	Argument	& act		5096487	1					
ANR	5096718	UnaryOperationExpression	& act		5096487	0					
ANR	5096719	UnaryOperator	&		5096487	0					
ANR	5096720	Identifier	act		5096487	1					
ANR	5096721	Argument	0		5096487	2					
ANR	5096722	PrimaryExpression	0		5096487	0					
ANR	5096723	IdentifierDeclStatement	"ifdef SIGBUS sigaddset ( & sigSet , SIGBUS ) ;"	1947:2:48426:48465	5096487	25	True				
ANR	5096724	IdentifierDecl	"sigaddset ( & sigSet , SIGBUS )"		5096487	0					
ANR	5096725	IdentifierDeclType	ifdef SIGBUS		5096487	0					
ANR	5096726	Identifier	sigaddset		5096487	1					
ANR	5096727	Expression	"& sigSet , SIGBUS"		5096487	2					
ANR	5096728	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096729	UnaryOperator	&		5096487	0					
ANR	5096730	Identifier	sigSet		5096487	1					
ANR	5096731	Identifier	SIGBUS		5096487	1					
ANR	5096732	ExpressionStatement	"sigaction ( SIGBUS , & act , 0 )"	1949:1:48468:48492	5096487	26	True				
ANR	5096733	CallExpression	"sigaction ( SIGBUS , & act , 0 )"		5096487	0					
ANR	5096734	Callee	sigaction		5096487	0					
ANR	5096735	Identifier	sigaction		5096487	0					
ANR	5096736	ArgumentList	SIGBUS		5096487	1					
ANR	5096737	Argument	SIGBUS		5096487	0					
ANR	5096738	Identifier	SIGBUS		5096487	0					
ANR	5096739	Argument	& act		5096487	1					
ANR	5096740	UnaryOperationExpression	& act		5096487	0					
ANR	5096741	UnaryOperator	&		5096487	0					
ANR	5096742	Identifier	act		5096487	1					
ANR	5096743	Argument	0		5096487	2					
ANR	5096744	PrimaryExpression	0		5096487	0					
ANR	5096745	Statement	endif	1950:2:48496:48500	5096487	27	True				
ANR	5096746	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & sigSet , NULL )"	1954:1:48545:48586	5096487	28	True				
ANR	5096747	CallExpression	"sigprocmask ( SIG_UNBLOCK , & sigSet , NULL )"		5096487	0					
ANR	5096748	Callee	sigprocmask		5096487	0					
ANR	5096749	Identifier	sigprocmask		5096487	0					
ANR	5096750	ArgumentList	SIG_UNBLOCK		5096487	1					
ANR	5096751	Argument	SIG_UNBLOCK		5096487	0					
ANR	5096752	Identifier	SIG_UNBLOCK		5096487	0					
ANR	5096753	Argument	& sigSet		5096487	1					
ANR	5096754	UnaryOperationExpression	& sigSet		5096487	0					
ANR	5096755	UnaryOperator	&		5096487	0					
ANR	5096756	Identifier	sigSet		5096487	1					
ANR	5096757	Argument	NULL		5096487	2					
ANR	5096758	Identifier	NULL		5096487	0					
ANR	5096759	ExpressionStatement	"unsetenv ( ""X509_RUN_AS_SERVER"" )"	1961:1:48735:48765	5096487	29	True				
ANR	5096760	CallExpression	"unsetenv ( ""X509_RUN_AS_SERVER"" )"		5096487	0					
ANR	5096761	Callee	unsetenv		5096487	0					
ANR	5096762	Identifier	unsetenv		5096487	0					
ANR	5096763	ArgumentList	"""X509_RUN_AS_SERVER"""		5096487	1					
ANR	5096764	Argument	"""X509_RUN_AS_SERVER"""		5096487	0					
ANR	5096765	PrimaryExpression	"""X509_RUN_AS_SERVER"""		5096487	0					
ANR	5096766	ExpressionStatement	"unsetenv ( ""X509_USER_KEY"" )"	1962:1:48768:48793	5096487	30	True				
ANR	5096767	CallExpression	"unsetenv ( ""X509_USER_KEY"" )"		5096487	0					
ANR	5096768	Callee	unsetenv		5096487	0					
ANR	5096769	Identifier	unsetenv		5096487	0					
ANR	5096770	ArgumentList	"""X509_USER_KEY"""		5096487	1					
ANR	5096771	Argument	"""X509_USER_KEY"""		5096487	0					
ANR	5096772	PrimaryExpression	"""X509_USER_KEY"""		5096487	0					
ANR	5096773	ExpressionStatement	"unsetenv ( ""X509_USER_CERT"" )"	1963:1:48796:48822	5096487	31	True				
ANR	5096774	CallExpression	"unsetenv ( ""X509_USER_CERT"" )"		5096487	0					
ANR	5096775	Callee	unsetenv		5096487	0					
ANR	5096776	Identifier	unsetenv		5096487	0					
ANR	5096777	ArgumentList	"""X509_USER_CERT"""		5096487	1					
ANR	5096778	Argument	"""X509_USER_CERT"""		5096487	0					
ANR	5096779	PrimaryExpression	"""X509_USER_CERT"""		5096487	0					
ANR	5096780	ExpressionStatement	err = globus_module_activate ( GLOBUS_COMMON_MODULE )	1968:4:48909:48961	5096487	32	True				
ANR	5096781	AssignmentExpression	err = globus_module_activate ( GLOBUS_COMMON_MODULE )		5096487	0		=			
ANR	5096782	Identifier	err		5096487	0					
ANR	5096783	CallExpression	globus_module_activate ( GLOBUS_COMMON_MODULE )		5096487	1					
ANR	5096784	Callee	globus_module_activate		5096487	0					
ANR	5096785	Identifier	globus_module_activate		5096487	0					
ANR	5096786	ArgumentList	GLOBUS_COMMON_MODULE		5096487	1					
ANR	5096787	Argument	GLOBUS_COMMON_MODULE		5096487	0					
ANR	5096788	Identifier	GLOBUS_COMMON_MODULE		5096487	0					
ANR	5096789	IfStatement	if ( err != GLOBUS_SUCCESS )		5096487	33					
ANR	5096790	Condition	err != GLOBUS_SUCCESS	1969:9:48972:48992	5096487	0	True				
ANR	5096791	EqualityExpression	err != GLOBUS_SUCCESS		5096487	0		!=			
ANR	5096792	Identifier	err		5096487	0					
ANR	5096793	Identifier	GLOBUS_SUCCESS		5096487	1					
ANR	5096794	CompoundStatement		61:33:1553:1553	5096487	1					
ANR	5096795	ExpressionStatement	"printf ( ""Unable to activate Globus Common Module!\\n"" )"	1970:2:49000:49052	5096487	0	True				
ANR	5096796	CallExpression	"printf ( ""Unable to activate Globus Common Module!\\n"" )"		5096487	0					
ANR	5096797	Callee	printf		5096487	0					
ANR	5096798	Identifier	printf		5096487	0					
ANR	5096799	ArgumentList	"""Unable to activate Globus Common Module!\\n"""		5096487	1					
ANR	5096800	Argument	"""Unable to activate Globus Common Module!\\n"""		5096487	0					
ANR	5096801	PrimaryExpression	"""Unable to activate Globus Common Module!\\n"""		5096487	0					
ANR	5096802	ExpressionStatement	_exit ( 1 )	1971:2:49056:49064	5096487	1	True				
ANR	5096803	CallExpression	_exit ( 1 )		5096487	0					
ANR	5096804	Callee	_exit		5096487	0					
ANR	5096805	Identifier	_exit		5096487	0					
ANR	5096806	ArgumentList	1		5096487	1					
ANR	5096807	Argument	1		5096487	0					
ANR	5096808	PrimaryExpression	1		5096487	0					
ANR	5096809	IfStatement	if ( ( result = globus_fifo_init ( & result_fifo ) ) != GLOBUS_SUCCESS )		5096487	34					
ANR	5096810	Condition	( result = globus_fifo_init ( & result_fifo ) ) != GLOBUS_SUCCESS	1975:6:49080:49136	5096487	0	True				
ANR	5096811	EqualityExpression	( result = globus_fifo_init ( & result_fifo ) ) != GLOBUS_SUCCESS		5096487	0		!=			
ANR	5096812	AssignmentExpression	result = globus_fifo_init ( & result_fifo )		5096487	0		=			
ANR	5096813	Identifier	result		5096487	0					
ANR	5096814	CallExpression	globus_fifo_init ( & result_fifo )		5096487	1					
ANR	5096815	Callee	globus_fifo_init		5096487	0					
ANR	5096816	Identifier	globus_fifo_init		5096487	0					
ANR	5096817	ArgumentList	& result_fifo		5096487	1					
ANR	5096818	Argument	& result_fifo		5096487	0					
ANR	5096819	UnaryOperationExpression	& result_fifo		5096487	0					
ANR	5096820	UnaryOperator	&		5096487	0					
ANR	5096821	Identifier	result_fifo		5096487	1					
ANR	5096822	Identifier	GLOBUS_SUCCESS		5096487	1					
ANR	5096823	CompoundStatement		67:66:1697:1697	5096487	1					
ANR	5096824	ExpressionStatement	"printf ( ""ERROR %d Failed to activate Globus fifo\\n"" , result )"	1976:2:49144:49202	5096487	0	True				
ANR	5096825	CallExpression	"printf ( ""ERROR %d Failed to activate Globus fifo\\n"" , result )"		5096487	0					
ANR	5096826	Callee	printf		5096487	0					
ANR	5096827	Identifier	printf		5096487	0					
ANR	5096828	ArgumentList	"""ERROR %d Failed to activate Globus fifo\\n"""		5096487	1					
ANR	5096829	Argument	"""ERROR %d Failed to activate Globus fifo\\n"""		5096487	0					
ANR	5096830	PrimaryExpression	"""ERROR %d Failed to activate Globus fifo\\n"""		5096487	0					
ANR	5096831	Argument	result		5096487	1					
ANR	5096832	Identifier	result		5096487	0					
ANR	5096833	ExpressionStatement	_exit ( 1 )	1977:2:49206:49214	5096487	1	True				
ANR	5096834	CallExpression	_exit ( 1 )		5096487	0					
ANR	5096835	Callee	_exit		5096487	0					
ANR	5096836	Identifier	_exit		5096487	0					
ANR	5096837	ArgumentList	1		5096487	1					
ANR	5096838	Argument	1		5096487	0					
ANR	5096839	PrimaryExpression	1		5096487	0					
ANR	5096840	IfStatement	"if ( ( result = globus_hashtable_init ( & handle_cache , 71 , globus_hashtable_string_hash , globus_hashtable_string_keyeq ) ) )"		5096487	35					
ANR	5096841	Condition	"result = globus_hashtable_init ( & handle_cache , 71 , globus_hashtable_string_hash , globus_hashtable_string_keyeq )"	1980:6:49226:49344	5096487	0	True				
ANR	5096842	AssignmentExpression	"result = globus_hashtable_init ( & handle_cache , 71 , globus_hashtable_string_hash , globus_hashtable_string_keyeq )"		5096487	0		=			
ANR	5096843	Identifier	result		5096487	0					
ANR	5096844	CallExpression	"globus_hashtable_init ( & handle_cache , 71 , globus_hashtable_string_hash , globus_hashtable_string_keyeq )"		5096487	1					
ANR	5096845	Callee	globus_hashtable_init		5096487	0					
ANR	5096846	Identifier	globus_hashtable_init		5096487	0					
ANR	5096847	ArgumentList	& handle_cache		5096487	1					
ANR	5096848	Argument	& handle_cache		5096487	0					
ANR	5096849	UnaryOperationExpression	& handle_cache		5096487	0					
ANR	5096850	UnaryOperator	&		5096487	0					
ANR	5096851	Identifier	handle_cache		5096487	1					
ANR	5096852	Argument	71		5096487	1					
ANR	5096853	PrimaryExpression	71		5096487	0					
ANR	5096854	Argument	globus_hashtable_string_hash		5096487	2					
ANR	5096855	Identifier	globus_hashtable_string_hash		5096487	0					
ANR	5096856	Argument	globus_hashtable_string_keyeq		5096487	3					
ANR	5096857	Identifier	globus_hashtable_string_keyeq		5096487	0					
ANR	5096858	CompoundStatement		75:1:1906:1906	5096487	1					
ANR	5096859	ExpressionStatement	"printf ( ""ERROR %d Failed to activate cred handle cache\\n"" , result )"	1984:2:49353:49417	5096487	0	True				
ANR	5096860	CallExpression	"printf ( ""ERROR %d Failed to activate cred handle cache\\n"" , result )"		5096487	0					
ANR	5096861	Callee	printf		5096487	0					
ANR	5096862	Identifier	printf		5096487	0					
ANR	5096863	ArgumentList	"""ERROR %d Failed to activate cred handle cache\\n"""		5096487	1					
ANR	5096864	Argument	"""ERROR %d Failed to activate cred handle cache\\n"""		5096487	0					
ANR	5096865	PrimaryExpression	"""ERROR %d Failed to activate cred handle cache\\n"""		5096487	0					
ANR	5096866	Argument	result		5096487	1					
ANR	5096867	Identifier	result		5096487	0					
ANR	5096868	ExpressionStatement	_exit ( 1 )	1985:2:49421:49429	5096487	1	True				
ANR	5096869	CallExpression	_exit ( 1 )		5096487	0					
ANR	5096870	Callee	_exit		5096487	0					
ANR	5096871	Identifier	_exit		5096487	0					
ANR	5096872	ArgumentList	1		5096487	1					
ANR	5096873	Argument	1		5096487	0					
ANR	5096874	PrimaryExpression	1		5096487	0					
ANR	5096875	ExpressionStatement	"gahp_sem_init ( & print_control , 1 )"	1988:1:49436:49468	5096487	36	True				
ANR	5096876	CallExpression	"gahp_sem_init ( & print_control , 1 )"		5096487	0					
ANR	5096877	Callee	gahp_sem_init		5096487	0					
ANR	5096878	Identifier	gahp_sem_init		5096487	0					
ANR	5096879	ArgumentList	& print_control		5096487	1					
ANR	5096880	Argument	& print_control		5096487	0					
ANR	5096881	UnaryOperationExpression	& print_control		5096487	0					
ANR	5096882	UnaryOperator	&		5096487	0					
ANR	5096883	Identifier	print_control		5096487	1					
ANR	5096884	Argument	1		5096487	1					
ANR	5096885	PrimaryExpression	1		5096487	0					
ANR	5096886	ExpressionStatement	"gahp_sem_init ( & fifo_control , 1 )"	1989:1:49471:49502	5096487	37	True				
ANR	5096887	CallExpression	"gahp_sem_init ( & fifo_control , 1 )"		5096487	0					
ANR	5096888	Callee	gahp_sem_init		5096487	0					
ANR	5096889	Identifier	gahp_sem_init		5096487	0					
ANR	5096890	ArgumentList	& fifo_control		5096487	1					
ANR	5096891	Argument	& fifo_control		5096487	0					
ANR	5096892	UnaryOperationExpression	& fifo_control		5096487	0					
ANR	5096893	UnaryOperator	&		5096487	0					
ANR	5096894	Identifier	fifo_control		5096487	1					
ANR	5096895	Argument	1		5096487	1					
ANR	5096896	PrimaryExpression	1		5096487	0					
ANR	5096897	ExpressionStatement	"gahp_printf ( ""%s\\n"" , VersionString )"	1991:1:49506:49540	5096487	38	True				
ANR	5096898	CallExpression	"gahp_printf ( ""%s\\n"" , VersionString )"		5096487	0					
ANR	5096899	Callee	gahp_printf		5096487	0					
ANR	5096900	Identifier	gahp_printf		5096487	0					
ANR	5096901	ArgumentList	"""%s\\n"""		5096487	1					
ANR	5096902	Argument	"""%s\\n"""		5096487	0					
ANR	5096903	PrimaryExpression	"""%s\\n"""		5096487	0					
ANR	5096904	Argument	VersionString		5096487	1					
ANR	5096905	Identifier	VersionString		5096487	0					
ANR	5096906	ExpressionStatement	err = globus_module_activate ( GLOBUS_IO_MODULE )	1998:1:49741:49787	5096487	39	True				
ANR	5096907	AssignmentExpression	err = globus_module_activate ( GLOBUS_IO_MODULE )		5096487	0		=			
ANR	5096908	Identifier	err		5096487	0					
ANR	5096909	CallExpression	globus_module_activate ( GLOBUS_IO_MODULE )		5096487	1					
ANR	5096910	Callee	globus_module_activate		5096487	0					
ANR	5096911	Identifier	globus_module_activate		5096487	0					
ANR	5096912	ArgumentList	GLOBUS_IO_MODULE		5096487	1					
ANR	5096913	Argument	GLOBUS_IO_MODULE		5096487	0					
ANR	5096914	Identifier	GLOBUS_IO_MODULE		5096487	0					
ANR	5096915	IfStatement	if ( err != GLOBUS_SUCCESS )		5096487	40					
ANR	5096916	Condition	err != GLOBUS_SUCCESS	1999:9:49798:49818	5096487	0	True				
ANR	5096917	EqualityExpression	err != GLOBUS_SUCCESS		5096487	0		!=			
ANR	5096918	Identifier	err		5096487	0					
ANR	5096919	Identifier	GLOBUS_SUCCESS		5096487	1					
ANR	5096920	CompoundStatement		91:33:2379:2379	5096487	1					
ANR	5096921	ExpressionStatement	"printf ( ""Unable to activate Globus IO Module!\\n"" )"	2000:2:49826:49874	5096487	0	True				
ANR	5096922	CallExpression	"printf ( ""Unable to activate Globus IO Module!\\n"" )"		5096487	0					
ANR	5096923	Callee	printf		5096487	0					
ANR	5096924	Identifier	printf		5096487	0					
ANR	5096925	ArgumentList	"""Unable to activate Globus IO Module!\\n"""		5096487	1					
ANR	5096926	Argument	"""Unable to activate Globus IO Module!\\n"""		5096487	0					
ANR	5096927	PrimaryExpression	"""Unable to activate Globus IO Module!\\n"""		5096487	0					
ANR	5096928	ExpressionStatement	_exit ( 1 )	2001:2:49878:49886	5096487	1	True				
ANR	5096929	CallExpression	_exit ( 1 )		5096487	0					
ANR	5096930	Callee	_exit		5096487	0					
ANR	5096931	Identifier	_exit		5096487	0					
ANR	5096932	ArgumentList	1		5096487	1					
ANR	5096933	Argument	1		5096487	0					
ANR	5096934	PrimaryExpression	1		5096487	0					
ANR	5096935	ExpressionStatement	"err = ( int ) globus_io_file_posix_convert ( STDIN_FILENO , NULL , ( globus_io_handle_t * ) & stdin_handle )"	2004:1:49896:49990	5096487	41	True				
ANR	5096936	AssignmentExpression	"err = ( int ) globus_io_file_posix_convert ( STDIN_FILENO , NULL , ( globus_io_handle_t * ) & stdin_handle )"		5096487	0		=			
ANR	5096937	Identifier	err		5096487	0					
ANR	5096938	CastExpression	"( int ) globus_io_file_posix_convert ( STDIN_FILENO , NULL , ( globus_io_handle_t * ) & stdin_handle )"		5096487	1					
ANR	5096939	CastTarget	int		5096487	0					
ANR	5096940	CallExpression	"globus_io_file_posix_convert ( STDIN_FILENO , NULL , ( globus_io_handle_t * ) & stdin_handle )"		5096487	1					
ANR	5096941	Callee	globus_io_file_posix_convert		5096487	0					
ANR	5096942	Identifier	globus_io_file_posix_convert		5096487	0					
ANR	5096943	ArgumentList	STDIN_FILENO		5096487	1					
ANR	5096944	Argument	STDIN_FILENO		5096487	0					
ANR	5096945	Identifier	STDIN_FILENO		5096487	0					
ANR	5096946	Argument	NULL		5096487	1					
ANR	5096947	Identifier	NULL		5096487	0					
ANR	5096948	Argument	( globus_io_handle_t * ) & stdin_handle		5096487	2					
ANR	5096949	CastExpression	( globus_io_handle_t * ) & stdin_handle		5096487	0					
ANR	5096950	CastTarget	globus_io_handle_t *		5096487	0					
ANR	5096951	UnaryOperationExpression	& stdin_handle		5096487	1					
ANR	5096952	UnaryOperator	&		5096487	0					
ANR	5096953	Identifier	stdin_handle		5096487	1					
ANR	5096954	IfStatement	if ( err != GLOBUS_SUCCESS )		5096487	42					
ANR	5096955	Condition	err != GLOBUS_SUCCESS	2005:6:49998:50018	5096487	0	True				
ANR	5096956	EqualityExpression	err != GLOBUS_SUCCESS		5096487	0		!=			
ANR	5096957	Identifier	err		5096487	0					
ANR	5096958	Identifier	GLOBUS_SUCCESS		5096487	1					
ANR	5096959	CompoundStatement		97:30:2579:2579	5096487	1					
ANR	5096960	ExpressionStatement	"printf ( ""ERROR %d Failed to get globus_io handle to stdin\\n"" , result )"	2006:2:50026:50093	5096487	0	True				
ANR	5096961	CallExpression	"printf ( ""ERROR %d Failed to get globus_io handle to stdin\\n"" , result )"		5096487	0					
ANR	5096962	Callee	printf		5096487	0					
ANR	5096963	Identifier	printf		5096487	0					
ANR	5096964	ArgumentList	"""ERROR %d Failed to get globus_io handle to stdin\\n"""		5096487	1					
ANR	5096965	Argument	"""ERROR %d Failed to get globus_io handle to stdin\\n"""		5096487	0					
ANR	5096966	PrimaryExpression	"""ERROR %d Failed to get globus_io handle to stdin\\n"""		5096487	0					
ANR	5096967	Argument	result		5096487	1					
ANR	5096968	Identifier	result		5096487	0					
ANR	5096969	ExpressionStatement	_exit ( 1 )	2007:2:50097:50105	5096487	1	True				
ANR	5096970	CallExpression	_exit ( 1 )		5096487	0					
ANR	5096971	Callee	_exit		5096487	0					
ANR	5096972	Identifier	_exit		5096487	0					
ANR	5096973	ArgumentList	1		5096487	1					
ANR	5096974	Argument	1		5096487	0					
ANR	5096975	PrimaryExpression	1		5096487	0					
ANR	5096976	ExpressionStatement	"err = ( int ) globus_io_register_select ( ( globus_io_handle_t * ) & stdin_handle , ( globus_io_callback_t ) service_commands , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL )"	2009:1:50111:50398	5096487	43	True				
ANR	5096977	AssignmentExpression	"err = ( int ) globus_io_register_select ( ( globus_io_handle_t * ) & stdin_handle , ( globus_io_callback_t ) service_commands , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL )"		5096487	0		=			
ANR	5096978	Identifier	err		5096487	0					
ANR	5096979	CastExpression	"( int ) globus_io_register_select ( ( globus_io_handle_t * ) & stdin_handle , ( globus_io_callback_t ) service_commands , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL )"		5096487	1					
ANR	5096980	CastTarget	int		5096487	0					
ANR	5096981	CallExpression	"globus_io_register_select ( ( globus_io_handle_t * ) & stdin_handle , ( globus_io_callback_t ) service_commands , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL , ( globus_io_callback_t ) NULL , ( void * ) NULL )"		5096487	1					
ANR	5096982	Callee	globus_io_register_select		5096487	0					
ANR	5096983	Identifier	globus_io_register_select		5096487	0					
ANR	5096984	ArgumentList	( globus_io_handle_t * ) & stdin_handle		5096487	1					
ANR	5096985	Argument	( globus_io_handle_t * ) & stdin_handle		5096487	0					
ANR	5096986	CastExpression	( globus_io_handle_t * ) & stdin_handle		5096487	0					
ANR	5096987	CastTarget	globus_io_handle_t *		5096487	0					
ANR	5096988	UnaryOperationExpression	& stdin_handle		5096487	1					
ANR	5096989	UnaryOperator	&		5096487	0					
ANR	5096990	Identifier	stdin_handle		5096487	1					
ANR	5096991	Argument	( globus_io_callback_t ) service_commands		5096487	1					
ANR	5096992	CastExpression	( globus_io_callback_t ) service_commands		5096487	0					
ANR	5096993	CastTarget	globus_io_callback_t		5096487	0					
ANR	5096994	Identifier	service_commands		5096487	1					
ANR	5096995	Argument	( void * ) NULL		5096487	2					
ANR	5096996	CastExpression	( void * ) NULL		5096487	0					
ANR	5096997	CastTarget	void *		5096487	0					
ANR	5096998	Identifier	NULL		5096487	1					
ANR	5096999	Argument	( globus_io_callback_t ) NULL		5096487	3					
ANR	5097000	CastExpression	( globus_io_callback_t ) NULL		5096487	0					
ANR	5097001	CastTarget	globus_io_callback_t		5096487	0					
ANR	5097002	Identifier	NULL		5096487	1					
ANR	5097003	Argument	( void * ) NULL		5096487	4					
ANR	5097004	CastExpression	( void * ) NULL		5096487	0					
ANR	5097005	CastTarget	void *		5096487	0					
ANR	5097006	Identifier	NULL		5096487	1					
ANR	5097007	Argument	( globus_io_callback_t ) NULL		5096487	5					
ANR	5097008	CastExpression	( globus_io_callback_t ) NULL		5096487	0					
ANR	5097009	CastTarget	globus_io_callback_t		5096487	0					
ANR	5097010	Identifier	NULL		5096487	1					
ANR	5097011	Argument	( void * ) NULL		5096487	6					
ANR	5097012	CastExpression	( void * ) NULL		5096487	0					
ANR	5097013	CastTarget	void *		5096487	0					
ANR	5097014	Identifier	NULL		5096487	1					
ANR	5097015	IfStatement	if ( err != GLOBUS_SUCCESS )		5096487	44					
ANR	5097016	Condition	err != GLOBUS_SUCCESS	2013:6:50441:50461	5096487	0	True				
ANR	5097017	EqualityExpression	err != GLOBUS_SUCCESS		5096487	0		!=			
ANR	5097018	Identifier	err		5096487	0					
ANR	5097019	Identifier	GLOBUS_SUCCESS		5096487	1					
ANR	5097020	CompoundStatement		105:30:3022:3022	5096487	1					
ANR	5097021	ExpressionStatement	"printf ( ""ERROR %d Failed to globus_io_register_select stdin\\n"" , result )"	2014:2:50469:50538	5096487	0	True				
ANR	5097022	CallExpression	"printf ( ""ERROR %d Failed to globus_io_register_select stdin\\n"" , result )"		5096487	0					
ANR	5097023	Callee	printf		5096487	0					
ANR	5097024	Identifier	printf		5096487	0					
ANR	5097025	ArgumentList	"""ERROR %d Failed to globus_io_register_select stdin\\n"""		5096487	1					
ANR	5097026	Argument	"""ERROR %d Failed to globus_io_register_select stdin\\n"""		5096487	0					
ANR	5097027	PrimaryExpression	"""ERROR %d Failed to globus_io_register_select stdin\\n"""		5096487	0					
ANR	5097028	Argument	result		5096487	1					
ANR	5097029	Identifier	result		5096487	0					
ANR	5097030	ExpressionStatement	_exit ( 1 )	2015:2:50542:50550	5096487	1	True				
ANR	5097031	CallExpression	_exit ( 1 )		5096487	0					
ANR	5097032	Callee	_exit		5096487	0					
ANR	5097033	Identifier	_exit		5096487	0					
ANR	5097034	ArgumentList	1		5096487	1					
ANR	5097035	Argument	1		5096487	0					
ANR	5097036	PrimaryExpression	1		5096487	0					
ANR	5097037	IdentifierDeclStatement	globus_mutex_t manager_mutex ;	2018:1:50557:50585	5096487	45	True				
ANR	5097038	IdentifierDecl	manager_mutex		5096487	0					
ANR	5097039	IdentifierDeclType	globus_mutex_t		5096487	0					
ANR	5097040	Identifier	manager_mutex		5096487	1					
ANR	5097041	IdentifierDeclStatement	globus_cond_t manager_cond ;	2019:1:50588:50615	5096487	46	True				
ANR	5097042	IdentifierDecl	manager_cond		5096487	0					
ANR	5097043	IdentifierDeclType	globus_cond_t		5096487	0					
ANR	5097044	Identifier	manager_cond		5096487	1					
ANR	5097045	ExpressionStatement	"globus_mutex_init ( & manager_mutex , NULL )"	2020:1:50618:50657	5096487	47	True				
ANR	5097046	CallExpression	"globus_mutex_init ( & manager_mutex , NULL )"		5096487	0					
ANR	5097047	Callee	globus_mutex_init		5096487	0					
ANR	5097048	Identifier	globus_mutex_init		5096487	0					
ANR	5097049	ArgumentList	& manager_mutex		5096487	1					
ANR	5097050	Argument	& manager_mutex		5096487	0					
ANR	5097051	UnaryOperationExpression	& manager_mutex		5096487	0					
ANR	5097052	UnaryOperator	&		5096487	0					
ANR	5097053	Identifier	manager_mutex		5096487	1					
ANR	5097054	Argument	NULL		5096487	1					
ANR	5097055	Identifier	NULL		5096487	0					
ANR	5097056	ExpressionStatement	"globus_cond_init ( & manager_cond , NULL )"	2021:1:50660:50697	5096487	48	True				
ANR	5097057	CallExpression	"globus_cond_init ( & manager_cond , NULL )"		5096487	0					
ANR	5097058	Callee	globus_cond_init		5096487	0					
ANR	5097059	Identifier	globus_cond_init		5096487	0					
ANR	5097060	ArgumentList	& manager_cond		5096487	1					
ANR	5097061	Argument	& manager_cond		5096487	0					
ANR	5097062	UnaryOperationExpression	& manager_cond		5096487	0					
ANR	5097063	UnaryOperator	&		5096487	0					
ANR	5097064	Identifier	manager_cond		5096487	1					
ANR	5097065	Argument	NULL		5096487	1					
ANR	5097066	Identifier	NULL		5096487	0					
ANR	5097067	ExpressionStatement	globus_mutex_lock ( & manager_mutex )	2023:1:50701:50734	5096487	49	True				
ANR	5097068	CallExpression	globus_mutex_lock ( & manager_mutex )		5096487	0					
ANR	5097069	Callee	globus_mutex_lock		5096487	0					
ANR	5097070	Identifier	globus_mutex_lock		5096487	0					
ANR	5097071	ArgumentList	& manager_mutex		5096487	1					
ANR	5097072	Argument	& manager_mutex		5096487	0					
ANR	5097073	UnaryOperationExpression	& manager_mutex		5096487	0					
ANR	5097074	UnaryOperator	&		5096487	0					
ANR	5097075	Identifier	manager_mutex		5096487	1					
ANR	5097076	ForStatement	for ( ; ; )		5096487	50					
ANR	5097077	CompoundStatement		116:10:3303:3303	5096487	0					
ANR	5097078	ExpressionStatement	"globus_cond_wait ( & manager_cond , & manager_mutex )"	2025:2:50750:50797	5096487	0	True				
ANR	5097079	CallExpression	"globus_cond_wait ( & manager_cond , & manager_mutex )"		5096487	0					
ANR	5097080	Callee	globus_cond_wait		5096487	0					
ANR	5097081	Identifier	globus_cond_wait		5096487	0					
ANR	5097082	ArgumentList	& manager_cond		5096487	1					
ANR	5097083	Argument	& manager_cond		5096487	0					
ANR	5097084	UnaryOperationExpression	& manager_cond		5096487	0					
ANR	5097085	UnaryOperator	&		5096487	0					
ANR	5097086	Identifier	manager_cond		5096487	1					
ANR	5097087	Argument	& manager_mutex		5096487	1					
ANR	5097088	UnaryOperationExpression	& manager_mutex		5096487	0					
ANR	5097089	UnaryOperator	&		5096487	0					
ANR	5097090	Identifier	manager_mutex		5096487	1					
ANR	5097091	ExpressionStatement	globus_mutex_unlock ( & manager_mutex )	2027:1:50803:50838	5096487	51	True				
ANR	5097092	CallExpression	globus_mutex_unlock ( & manager_mutex )		5096487	0					
ANR	5097093	Callee	globus_mutex_unlock		5096487	0					
ANR	5097094	Identifier	globus_mutex_unlock		5096487	0					
ANR	5097095	ArgumentList	& manager_mutex		5096487	1					
ANR	5097096	Argument	& manager_mutex		5096487	0					
ANR	5097097	UnaryOperationExpression	& manager_mutex		5096487	0					
ANR	5097098	UnaryOperator	&		5096487	0					
ANR	5097099	Identifier	manager_mutex		5096487	1					
ANR	5097100	ExpressionStatement	main_deactivate_globus ( )	2029:1:50842:50866	5096487	52	True				
ANR	5097101	CallExpression	main_deactivate_globus ( )		5096487	0					
ANR	5097102	Callee	main_deactivate_globus		5096487	0					
ANR	5097103	Identifier	main_deactivate_globus		5096487	0					
ANR	5097104	ArgumentList			5096487	1					
ANR	5097105	ExpressionStatement	_exit ( 0 )	2030:1:50869:50877	5096487	53	True				
ANR	5097106	CallExpression	_exit ( 0 )		5096487	0					
ANR	5097107	Callee	_exit		5096487	0					
ANR	5097108	Identifier	_exit		5096487	0					
ANR	5097109	ArgumentList	0		5096487	1					
ANR	5097110	Argument	0		5096487	0					
ANR	5097111	PrimaryExpression	0		5096487	0					
ANR	5097112	Identifier	main		5096487	1					
ANR	5097113	ParameterList	"int argc , char * * argv"		5096487	2					
ANR	5097114	Parameter	int argc	1908:5:47419:47426	5096487	0	True				
ANR	5097115	ParameterType	int		5096487	0					
ANR	5097116	Identifier	argc		5096487	1					
ANR	5097117	Parameter	char * * argv	1908:15:47429:47439	5096487	1	True				
ANR	5097118	ParameterType	char * *		5096487	0					
ANR	5097119	Identifier	argv		5096487	1					
ANR	5097120	CFGEntryNode	ENTRY		5096487		True				
ANR	5097121	CFGExitNode	EXIT		5096487		True				
ANR	5097122	InfiniteForNode	true		5096487		True				
ANR	5097123	Symbol	quit_on_signal		5096487						
ANR	5097124	Symbol	manager_mutex		5096487						
ANR	5097125	Symbol	& act . sa_mask		5096487						
ANR	5097126	Symbol	globus_io_register_select		5096487						
ANR	5097127	Symbol	act . sa_flags		5096487						
ANR	5097128	Symbol	& print_control		5096487						
ANR	5097129	Symbol	act . sa_handler		5096487						
ANR	5097130	Symbol	globus_hashtable_string_keyeq		5096487						
ANR	5097131	Symbol	act		5096487						
ANR	5097132	Symbol	globus_hashtable_string_hash		5096487						
ANR	5097133	Symbol	SIG_UNBLOCK		5096487						
ANR	5097134	Symbol	SIGPIPE		5096487						
ANR	5097135	Symbol	& handle_cache		5096487						
ANR	5097136	Symbol	SIGFPE		5096487						
ANR	5097137	Symbol	VersionString		5096487						
ANR	5097138	Symbol	NULL		5096487						
ANR	5097139	Symbol	STDIN_FILENO		5096487						
ANR	5097140	Symbol	& result_fifo		5096487						
ANR	5097141	Symbol	SIGSEGV		5096487						
ANR	5097142	Symbol	quit_on_signal_with_core		5096487						
ANR	5097143	Symbol	& fifo_control		5096487						
ANR	5097144	Symbol	GLOBUS_IO_MODULE		5096487						
ANR	5097145	Symbol	& act		5096487						
ANR	5097146	Symbol	sigaddset		5096487						
ANR	5097147	Symbol	SIGQUIT		5096487						
ANR	5097148	Symbol	& manager_mutex		5096487						
ANR	5097149	Symbol	SIGBUS		5096487						
ANR	5097150	Symbol	globus_io_file_posix_convert		5096487						
ANR	5097151	Symbol	globus_fifo_init		5096487						
ANR	5097152	Symbol	& stdin_handle		5096487						
ANR	5097153	Symbol	argv		5096487						
ANR	5097154	Symbol	globus_module_activate		5096487						
ANR	5097155	Symbol	result		5096487						
ANR	5097156	Symbol	service_commands		5096487						
ANR	5097157	Symbol	AsyncResults		5096487						
ANR	5097158	Symbol	& manager_cond		5096487						
ANR	5097159	Symbol	SIGTERM		5096487						
ANR	5097160	Symbol	ResultsPending		5096487						
ANR	5097161	Symbol	globus_hashtable_init		5096487						
ANR	5097162	Symbol	manager_cond		5096487						
ANR	5097163	Symbol	argc		5096487						
ANR	5097164	Symbol	& sigSet		5096487						
ANR	5097165	Symbol	err		5096487						
ANR	5097166	Symbol	sigSet		5096487						
ANR	5097167	Symbol	GlobusActive		5096487						
ANR	5097168	Symbol	GLOBUS_SUCCESS		5096487						
ANR	5097169	Symbol	SIGABRT		5096487						
ANR	5097170	Symbol	SIGILL		5096487						
ANR	5097171	Symbol	GLOBUS_COMMON_MODULE		5096487						
ANR	5097172	Function	__findenv	2036:0:50944:51542							
ANR	5097173	FunctionDef	"__findenv (const char * name , int * offset)"		5097172	0					
ANR	5097174	CompoundStatement		2038:0:50992:51542	5097172	0					
ANR	5097175	IdentifierDeclStatement	extern char * * environ ;	2039:8:51002:51023	5097172	0	True				
ANR	5097176	IdentifierDecl	* * environ		5097172	0					
ANR	5097177	IdentifierDeclType	extern char * *		5097172	0					
ANR	5097178	Identifier	environ		5097172	1					
ANR	5097179	Statement	register	2040:8:51033:51040	5097172	1	True				
ANR	5097180	IdentifierDeclStatement	int len ;	2040:17:51042:51049	5097172	2	True				
ANR	5097181	IdentifierDecl	len		5097172	0					
ANR	5097182	IdentifierDeclType	int		5097172	0					
ANR	5097183	Identifier	len		5097172	1					
ANR	5097184	Statement	register	2041:8:51059:51066	5097172	3	True				
ANR	5097185	IdentifierDeclStatement	const char * np ;	2041:17:51068:51082	5097172	4	True				
ANR	5097186	IdentifierDecl	* np		5097172	0					
ANR	5097187	IdentifierDeclType	const char *		5097172	0					
ANR	5097188	Identifier	np		5097172	1					
ANR	5097189	Statement	register	2042:8:51092:51099	5097172	5	True				
ANR	5097190	IdentifierDeclStatement	"char * * p , * c ;"	2042:17:51101:51113	5097172	6	True				
ANR	5097191	IdentifierDecl	* * p		5097172	0					
ANR	5097192	IdentifierDeclType	char * *		5097172	0					
ANR	5097193	Identifier	p		5097172	1					
ANR	5097194	IdentifierDecl	* c		5097172	1					
ANR	5097195	IdentifierDeclType	char *		5097172	0					
ANR	5097196	Identifier	c		5097172	1					
ANR	5097197	IfStatement	if ( name == NULL || environ == NULL )		5097172	7					
ANR	5097198	Condition	name == NULL || environ == NULL	2044:12:51128:51158	5097172	0	True				
ANR	5097199	OrExpression	name == NULL || environ == NULL		5097172	0		||			
ANR	5097200	EqualityExpression	name == NULL		5097172	0		==			
ANR	5097201	Identifier	name		5097172	0					
ANR	5097202	Identifier	NULL		5097172	1					
ANR	5097203	EqualityExpression	environ == NULL		5097172	1		==			
ANR	5097204	Identifier	environ		5097172	0					
ANR	5097205	Identifier	NULL		5097172	1					
ANR	5097206	ReturnStatement	return ( NULL ) ;	2045:16:51177:51190	5097172	1	True				
ANR	5097207	Identifier	NULL		5097172	0					
ANR	5097208	ForStatement	for ( np = name ; * np && * np != '=' ; ++ np )		5097172	8					
ANR	5097209	ForInit	np = name ;	2046:13:51205:51214	5097172	0	True				
ANR	5097210	AssignmentExpression	np = name		5097172	0		=			
ANR	5097211	Identifier	np		5097172	0					
ANR	5097212	Identifier	name		5097172	1					
ANR	5097213	Condition	* np && * np != '='	2046:24:51216:51232	5097172	1	True				
ANR	5097214	AndExpression	* np && * np != '='		5097172	0		&&			
ANR	5097215	UnaryOperationExpression	* np		5097172	0					
ANR	5097216	UnaryOperator	*		5097172	0					
ANR	5097217	Identifier	np		5097172	1					
ANR	5097218	EqualityExpression	* np != '='		5097172	1		!=			
ANR	5097219	UnaryOperationExpression	* np		5097172	0					
ANR	5097220	UnaryOperator	*		5097172	0					
ANR	5097221	Identifier	np		5097172	1					
ANR	5097222	PrimaryExpression	'='		5097172	1					
ANR	5097223	UnaryExpression	++ np	2046:43:51235:51238	5097172	2	True				
ANR	5097224	IncDec	++		5097172	0					
ANR	5097225	Identifier	np		5097172	1					
ANR	5097226	ContinueStatement	continue ;	2047:16:51257:51265	5097172	3	True				
ANR	5097227	ExpressionStatement	len = np - name	2048:8:51275:51290	5097172	9	True				
ANR	5097228	AssignmentExpression	len = np - name		5097172	0		=			
ANR	5097229	Identifier	len		5097172	0					
ANR	5097230	AdditiveExpression	np - name		5097172	1		-			
ANR	5097231	Identifier	np		5097172	0					
ANR	5097232	Identifier	name		5097172	1					
ANR	5097233	ForStatement	for ( p = environ ; ( c = * p ) != NULL ; ++ p )		5097172	10					
ANR	5097234	ForInit	p = environ ;	2049:13:51305:51316	5097172	0	True				
ANR	5097235	AssignmentExpression	p = environ		5097172	0		=			
ANR	5097236	Identifier	p		5097172	0					
ANR	5097237	Identifier	environ		5097172	1					
ANR	5097238	Condition	( c = * p ) != NULL	2049:26:51318:51333	5097172	1	True				
ANR	5097239	EqualityExpression	( c = * p ) != NULL		5097172	0		!=			
ANR	5097240	AssignmentExpression	c = * p		5097172	0		=			
ANR	5097241	Identifier	c		5097172	0					
ANR	5097242	UnaryOperationExpression	* p		5097172	1					
ANR	5097243	UnaryOperator	*		5097172	0					
ANR	5097244	Identifier	p		5097172	1					
ANR	5097245	Identifier	NULL		5097172	1					
ANR	5097246	UnaryExpression	++ p	2049:44:51336:51338	5097172	2	True				
ANR	5097247	IncDec	++		5097172	0					
ANR	5097248	Identifier	p		5097172	1					
ANR	5097249	IfStatement	"if ( strncmp ( c , name , len ) == 0 && c [ len ] == '=' )"		5097172	3					
ANR	5097250	Condition	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"	2050:20:51361:51403	5097172	0	True				
ANR	5097251	AndExpression	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"		5097172	0		&&			
ANR	5097252	EqualityExpression	"strncmp ( c , name , len ) == 0"		5097172	0		==			
ANR	5097253	CallExpression	"strncmp ( c , name , len )"		5097172	0					
ANR	5097254	Callee	strncmp		5097172	0					
ANR	5097255	Identifier	strncmp		5097172	0					
ANR	5097256	ArgumentList	c		5097172	1					
ANR	5097257	Argument	c		5097172	0					
ANR	5097258	Identifier	c		5097172	0					
ANR	5097259	Argument	name		5097172	1					
ANR	5097260	Identifier	name		5097172	0					
ANR	5097261	Argument	len		5097172	2					
ANR	5097262	Identifier	len		5097172	0					
ANR	5097263	PrimaryExpression	0		5097172	1					
ANR	5097264	EqualityExpression	c [ len ] == '='		5097172	1		==			
ANR	5097265	ArrayIndexing	c [ len ]		5097172	0					
ANR	5097266	Identifier	c		5097172	0					
ANR	5097267	Identifier	len		5097172	1					
ANR	5097268	PrimaryExpression	'='		5097172	1					
ANR	5097269	CompoundStatement		13:65:413:413	5097172	1					
ANR	5097270	ExpressionStatement	* offset = p - environ	2051:24:51432:51453	5097172	0	True				
ANR	5097271	AssignmentExpression	* offset = p - environ		5097172	0		=			
ANR	5097272	UnaryOperationExpression	* offset		5097172	0					
ANR	5097273	UnaryOperator	*		5097172	0					
ANR	5097274	Identifier	offset		5097172	1					
ANR	5097275	AdditiveExpression	p - environ		5097172	1		-			
ANR	5097276	Identifier	p		5097172	0					
ANR	5097277	Identifier	environ		5097172	1					
ANR	5097278	ReturnStatement	return ( c + len + 1 ) ;	2052:24:51479:51499	5097172	1	True				
ANR	5097279	AdditiveExpression	c + len + 1		5097172	0		+			
ANR	5097280	Identifier	c		5097172	0					
ANR	5097281	AdditiveExpression	len + 1		5097172	1		+			
ANR	5097282	Identifier	len		5097172	0					
ANR	5097283	PrimaryExpression	1		5097172	1					
ANR	5097284	ReturnStatement	return ( NULL ) ;	2054:8:51527:51540	5097172	11	True				
ANR	5097285	Identifier	NULL		5097172	0					
ANR	5097286	ReturnType	char *		5097172	1					
ANR	5097287	Identifier	__findenv		5097172	2					
ANR	5097288	ParameterList	"const char * name , int * offset"		5097172	3					
ANR	5097289	Parameter	const char * name	2037:10:50961:50976	5097172	0	True				
ANR	5097290	ParameterType	const char *		5097172	0					
ANR	5097291	Identifier	name		5097172	1					
ANR	5097292	Parameter	int * offset	2037:28:50979:50989	5097172	1	True				
ANR	5097293	ParameterType	int *		5097172	0					
ANR	5097294	Identifier	offset		5097172	1					
ANR	5097295	CFGEntryNode	ENTRY		5097172		True				
ANR	5097296	CFGExitNode	EXIT		5097172		True				
ANR	5097297	Symbol	np		5097172						
ANR	5097298	Symbol	c		5097172						
ANR	5097299	Symbol	NULL		5097172						
ANR	5097300	Symbol	offset		5097172						
ANR	5097301	Symbol	* np		5097172						
ANR	5097302	Symbol	* c		5097172						
ANR	5097303	Symbol	environ		5097172						
ANR	5097304	Symbol	p		5097172						
ANR	5097305	Symbol	strncmp		5097172						
ANR	5097306	Symbol	len		5097172						
ANR	5097307	Symbol	name		5097172						
ANR	5097308	Symbol	* offset		5097172						
ANR	5097309	Symbol	* p		5097172						
ANR	5097310	Symbol	* len		5097172						
ANR	5097311	Function	unsetenv	2057:0:51545:51868							
ANR	5097312	FunctionDef	unsetenv (const char * name)		5097311	0					
ANR	5097313	CompoundStatement		2059:0:51577:51868	5097311	0					
ANR	5097314	IdentifierDeclStatement	extern char * * environ ;	2060:8:51587:51608	5097311	0	True				
ANR	5097315	IdentifierDecl	* * environ		5097311	0					
ANR	5097316	IdentifierDeclType	extern char * *		5097311	0					
ANR	5097317	Identifier	environ		5097311	1					
ANR	5097318	Statement	register	2061:8:51618:51625	5097311	1	True				
ANR	5097319	IdentifierDeclStatement	char * * p ;	2061:17:51627:51635	5097311	2	True				
ANR	5097320	IdentifierDecl	* * p		5097311	0					
ANR	5097321	IdentifierDeclType	char * *		5097311	0					
ANR	5097322	Identifier	p		5097311	1					
ANR	5097323	IdentifierDeclStatement	int offset ;	2062:8:51645:51655	5097311	3	True				
ANR	5097324	IdentifierDecl	offset		5097311	0					
ANR	5097325	IdentifierDeclType	int		5097311	0					
ANR	5097326	Identifier	offset		5097311	1					
ANR	5097327	WhileStatement	"while ( __findenv ( name , & offset ) )"		5097311	4					
ANR	5097328	Condition	"__findenv ( name , & offset )"	2064:15:51673:51696	5097311	0	True				
ANR	5097329	CallExpression	"__findenv ( name , & offset )"		5097311	0					
ANR	5097330	Callee	__findenv		5097311	0					
ANR	5097331	Identifier	__findenv		5097311	0					
ANR	5097332	ArgumentList	name		5097311	1					
ANR	5097333	Argument	name		5097311	0					
ANR	5097334	Identifier	name		5097311	0					
ANR	5097335	Argument	& offset		5097311	1					
ANR	5097336	UnaryOperationExpression	& offset		5097311	0					
ANR	5097337	UnaryOperator	&		5097311	0					
ANR	5097338	Identifier	offset		5097311	1					
ANR	5097339	ForStatement	for ( p = & environ [ offset ] ; ; ++ p )		5097311	1					
ANR	5097340	ForInit	p = & environ [ offset ] ;	2065:21:51755:51775	5097311	0	True				
ANR	5097341	AssignmentExpression	p = & environ [ offset ]		5097311	0		=			
ANR	5097342	Identifier	p		5097311	0					
ANR	5097343	UnaryOperationExpression	& environ [ offset ]		5097311	1					
ANR	5097344	UnaryOperator	&		5097311	0					
ANR	5097345	ArrayIndexing	environ [ offset ]		5097311	1					
ANR	5097346	Identifier	environ		5097311	0					
ANR	5097347	Identifier	offset		5097311	1					
ANR	5097348	UnaryExpression	++ p	2065:44:51778:51780	5097311	1	True				
ANR	5097349	IncDec	++		5097311	0					
ANR	5097350	Identifier	p		5097311	1					
ANR	5097351	IfStatement	if ( ! ( * p = * ( p + 1 ) ) )		5097311	2					
ANR	5097352	Condition	! ( * p = * ( p + 1 ) )	2066:28:51811:51826	5097311	0	True				
ANR	5097353	UnaryOperationExpression	! ( * p = * ( p + 1 ) )		5097311	0					
ANR	5097354	UnaryOperator	!		5097311	0					
ANR	5097355	AssignmentExpression	* p = * ( p + 1 )		5097311	1		=			
ANR	5097356	UnaryOperationExpression	* p		5097311	0					
ANR	5097357	UnaryOperator	*		5097311	0					
ANR	5097358	Identifier	p		5097311	1					
ANR	5097359	UnaryOperationExpression	* ( p + 1 )		5097311	1					
ANR	5097360	UnaryOperator	*		5097311	0					
ANR	5097361	AdditiveExpression	p + 1		5097311	1		+			
ANR	5097362	Identifier	p		5097311	0					
ANR	5097363	PrimaryExpression	1		5097311	1					
ANR	5097364	BreakStatement	break ;	2067:32:51861:51866	5097311	1	True				
ANR	5097365	ReturnType	void		5097311	1					
ANR	5097366	Identifier	unsetenv		5097311	2					
ANR	5097367	ParameterList	const char * name		5097311	3					
ANR	5097368	Parameter	const char * name	2058:9:51559:51574	5097311	0	True				
ANR	5097369	ParameterType	const char *		5097311	0					
ANR	5097370	Identifier	name		5097311	1					
ANR	5097371	CFGEntryNode	ENTRY		5097311		True				
ANR	5097372	CFGExitNode	EXIT		5097311		True				
ANR	5097373	InfiniteForNode	true		5097311		True				
ANR	5097374	Symbol	p		5097311						
ANR	5097375	Symbol	offset		5097311						
ANR	5097376	Symbol	& offset		5097311						
ANR	5097377	Symbol	name		5097311						
ANR	5097378	Symbol	* p		5097311						
ANR	5097379	Symbol	* ( p + 1 )		5097311						
ANR	5097380	Symbol	__findenv		5097311						
ANR	5097381	Symbol	environ		5097311						
