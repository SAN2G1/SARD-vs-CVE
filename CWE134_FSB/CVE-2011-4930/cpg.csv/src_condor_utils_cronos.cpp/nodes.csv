command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4693525	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_cronos.cpp								
ANR	4693526	DeclStmt									
ANR	4693527	Decl							void ( * ) ( void )	void ( * ) ( void )	FUNC_P
ANR	4693528	ClassDef	<unnamed>	89:8:3334:3387							
ANR	4693529	DeclStmt									
ANR	4693530	Decl							int	int [ N_ELEM ]	pattern
ANR	4693531	DeclStmt									
ANR	4693532	Decl							FUNC_P	FUNC_P	func
ANR	4693533	DeclStmt									
ANR	4693534	Decl									EVENT
ANR	4693535	DeclStmt									
ANR	4693536	Decl							EVENT	EVENT [ 128 ]	Schedule
ANR	4693537	DeclStmt									
ANR	4693538	Decl							int	int	N_Events
ANR	4693539	DeclStmt									
ANR	4693540	Decl							int	int	did_startup
ANR	4693541	DeclStmt									
ANR	4693542	Decl							int	int [ N_ELEM ]	prev_time
ANR	4693543	DeclStmt									
ANR	4693544	Decl							int	int [ N_ELEM ]	now_time
ANR	4693545	DeclStmt									
ANR	4693546	Decl							void	"void ( int , int , int , int , int , FUNC_P )"	schedule_event
ANR	4693547	DeclStmt									
ANR	4693548	Decl							void	void ( void )	event_mgr
ANR	4693549	DeclStmt									
ANR	4693550	Decl							int	"int ( int pattern [ ] , int prev [ ] , int now [ ] )"	event_due
ANR	4693551	DeclStmt									
ANR	4693552	Decl							int	"int ( int t1 [ ] , int t2 [ ] )"	before
ANR	4693553	DeclStmt									
ANR	4693554	Decl							int	"int ( int pattern [ ] , int i )"	next_rightmost
ANR	4693555	DeclStmt									
ANR	4693556	Decl							void	void ( int cur [ ] )	get_moment
ANR	4693557	DeclStmt									
ANR	4693558	Decl							void	"void ( int prev [ ] , int now [ ] )"	check_schedule
ANR	4693559	Function	schedule_event	112:0:3899:4277							
ANR	4693560	FunctionDef	"schedule_event (int month , int day , int hour , int minute , int second , FUNC_P func)"		4693559	0					
ANR	4693561	CompoundStatement		115:0:4003:4277	4693559	0					
ANR	4693562	ExpressionStatement	Schedule [ N_Events ] . pattern [ CMONTH ] = month	116:1:4006:4048	4693559	0	True				
ANR	4693563	AssignmentExpression	Schedule [ N_Events ] . pattern [ CMONTH ] = month		4693559	0		=			
ANR	4693564	ArrayIndexing	Schedule [ N_Events ] . pattern [ CMONTH ]		4693559	0					
ANR	4693565	MemberAccess	Schedule [ N_Events ] . pattern		4693559	0					
ANR	4693566	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693567	Identifier	Schedule		4693559	0					
ANR	4693568	Identifier	N_Events		4693559	1					
ANR	4693569	Identifier	pattern		4693559	1					
ANR	4693570	Identifier	CMONTH		4693559	1					
ANR	4693571	Identifier	month		4693559	1					
ANR	4693572	ExpressionStatement	Schedule [ N_Events ] . pattern [ CDAY ] = day	117:1:4051:4089	4693559	1	True				
ANR	4693573	AssignmentExpression	Schedule [ N_Events ] . pattern [ CDAY ] = day		4693559	0		=			
ANR	4693574	ArrayIndexing	Schedule [ N_Events ] . pattern [ CDAY ]		4693559	0					
ANR	4693575	MemberAccess	Schedule [ N_Events ] . pattern		4693559	0					
ANR	4693576	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693577	Identifier	Schedule		4693559	0					
ANR	4693578	Identifier	N_Events		4693559	1					
ANR	4693579	Identifier	pattern		4693559	1					
ANR	4693580	Identifier	CDAY		4693559	1					
ANR	4693581	Identifier	day		4693559	1					
ANR	4693582	ExpressionStatement	Schedule [ N_Events ] . pattern [ CHOUR ] = hour	118:1:4092:4132	4693559	2	True				
ANR	4693583	AssignmentExpression	Schedule [ N_Events ] . pattern [ CHOUR ] = hour		4693559	0		=			
ANR	4693584	ArrayIndexing	Schedule [ N_Events ] . pattern [ CHOUR ]		4693559	0					
ANR	4693585	MemberAccess	Schedule [ N_Events ] . pattern		4693559	0					
ANR	4693586	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693587	Identifier	Schedule		4693559	0					
ANR	4693588	Identifier	N_Events		4693559	1					
ANR	4693589	Identifier	pattern		4693559	1					
ANR	4693590	Identifier	CHOUR		4693559	1					
ANR	4693591	Identifier	hour		4693559	1					
ANR	4693592	ExpressionStatement	Schedule [ N_Events ] . pattern [ CMINUTE ] = minute	119:1:4135:4179	4693559	3	True				
ANR	4693593	AssignmentExpression	Schedule [ N_Events ] . pattern [ CMINUTE ] = minute		4693559	0		=			
ANR	4693594	ArrayIndexing	Schedule [ N_Events ] . pattern [ CMINUTE ]		4693559	0					
ANR	4693595	MemberAccess	Schedule [ N_Events ] . pattern		4693559	0					
ANR	4693596	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693597	Identifier	Schedule		4693559	0					
ANR	4693598	Identifier	N_Events		4693559	1					
ANR	4693599	Identifier	pattern		4693559	1					
ANR	4693600	Identifier	CMINUTE		4693559	1					
ANR	4693601	Identifier	minute		4693559	1					
ANR	4693602	ExpressionStatement	Schedule [ N_Events ] . pattern [ CSECOND ] = second	120:1:4182:4226	4693559	4	True				
ANR	4693603	AssignmentExpression	Schedule [ N_Events ] . pattern [ CSECOND ] = second		4693559	0		=			
ANR	4693604	ArrayIndexing	Schedule [ N_Events ] . pattern [ CSECOND ]		4693559	0					
ANR	4693605	MemberAccess	Schedule [ N_Events ] . pattern		4693559	0					
ANR	4693606	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693607	Identifier	Schedule		4693559	0					
ANR	4693608	Identifier	N_Events		4693559	1					
ANR	4693609	Identifier	pattern		4693559	1					
ANR	4693610	Identifier	CSECOND		4693559	1					
ANR	4693611	Identifier	second		4693559	1					
ANR	4693612	ExpressionStatement	Schedule [ N_Events ] . func = func	121:1:4229:4259	4693559	5	True				
ANR	4693613	AssignmentExpression	Schedule [ N_Events ] . func = func		4693559	0		=			
ANR	4693614	MemberAccess	Schedule [ N_Events ] . func		4693559	0					
ANR	4693615	ArrayIndexing	Schedule [ N_Events ]		4693559	0					
ANR	4693616	Identifier	Schedule		4693559	0					
ANR	4693617	Identifier	N_Events		4693559	1					
ANR	4693618	Identifier	func		4693559	1					
ANR	4693619	Identifier	func		4693559	1					
ANR	4693620	ExpressionStatement	N_Events += 1	122:1:4262:4275	4693559	6	True				
ANR	4693621	AssignmentExpression	N_Events += 1		4693559	0		+=			
ANR	4693622	Identifier	N_Events		4693559	0					
ANR	4693623	PrimaryExpression	1		4693559	1					
ANR	4693624	ReturnType	void		4693559	1					
ANR	4693625	Identifier	schedule_event		4693559	2					
ANR	4693626	ParameterList	"int month , int day , int hour , int minute , int second , FUNC_P func"		4693559	3					
ANR	4693627	Parameter	int month	113:16:3920:3928	4693559	0	True				
ANR	4693628	ParameterType	int		4693559	0					
ANR	4693629	Identifier	month		4693559	1					
ANR	4693630	Parameter	int day	113:27:3931:3937	4693559	1	True				
ANR	4693631	ParameterType	int		4693559	0					
ANR	4693632	Identifier	day		4693559	1					
ANR	4693633	Parameter	int hour	113:36:3940:3947	4693559	2	True				
ANR	4693634	ParameterType	int		4693559	0					
ANR	4693635	Identifier	hour		4693559	1					
ANR	4693636	Parameter	int minute	113:46:3950:3959	4693559	3	True				
ANR	4693637	ParameterType	int		4693559	0					
ANR	4693638	Identifier	minute		4693559	1					
ANR	4693639	Parameter	int second	113:58:3962:3971	4693559	4	True				
ANR	4693640	ParameterType	int		4693559	0					
ANR	4693641	Identifier	second		4693559	1					
ANR	4693642	Parameter	FUNC_P func	114:15:3989:3999	4693559	5	True				
ANR	4693643	ParameterType	FUNC_P		4693559	0					
ANR	4693644	Identifier	func		4693559	1					
ANR	4693645	CFGEntryNode	ENTRY		4693559		True				
ANR	4693646	CFGExitNode	EXIT		4693559		True				
ANR	4693647	Symbol	* CDAY		4693559						
ANR	4693648	Symbol	* CHOUR		4693559						
ANR	4693649	Symbol	Schedule [ N_Events ] . func		4693559						
ANR	4693650	Symbol	CDAY		4693559						
ANR	4693651	Symbol	CMINUTE		4693559						
ANR	4693652	Symbol	CMONTH		4693559						
ANR	4693653	Symbol	* CMINUTE		4693559						
ANR	4693654	Symbol	second		4693559						
ANR	4693655	Symbol	* N_Events		4693559						
ANR	4693656	Symbol	hour		4693559						
ANR	4693657	Symbol	* CMONTH		4693559						
ANR	4693658	Symbol	day		4693559						
ANR	4693659	Symbol	* CSECOND		4693559						
ANR	4693660	Symbol	minute		4693559						
ANR	4693661	Symbol	Schedule [ N_Events ] . pattern		4693559						
ANR	4693662	Symbol	N_Events		4693559						
ANR	4693663	Symbol	month		4693559						
ANR	4693664	Symbol	func		4693559						
ANR	4693665	Symbol	* Schedule [ N_Events ] . pattern		4693559						
ANR	4693666	Symbol	* * Schedule		4693559						
ANR	4693667	Symbol	CHOUR		4693559						
ANR	4693668	Symbol	* Schedule		4693559						
ANR	4693669	Symbol	Schedule		4693559						
ANR	4693670	Symbol	* * N_Events		4693559						
ANR	4693671	Symbol	CSECOND		4693559						
ANR	4693672	Function	event_mgr	126:0:4304:4545							
ANR	4693673	FunctionDef	event_mgr ()		4693672	0					
ANR	4693674	CompoundStatement		128:0:4327:4545	4693672	0					
ANR	4693675	IfStatement	if ( ! did_startup )		4693672	0					
ANR	4693676	Condition	! did_startup	130:5:4335:4346	4693672	0	True				
ANR	4693677	UnaryOperationExpression	! did_startup		4693672	0					
ANR	4693678	UnaryOperator	!		4693672	0					
ANR	4693679	Identifier	did_startup		4693672	1					
ANR	4693680	CompoundStatement		3:20:22:22	4693672	1					
ANR	4693681	ExpressionStatement	get_moment ( prev_time )	131:2:4354:4377	4693672	0	True				
ANR	4693682	CallExpression	get_moment ( prev_time )		4693672	0					
ANR	4693683	Callee	get_moment		4693672	0					
ANR	4693684	Identifier	get_moment		4693672	0					
ANR	4693685	ArgumentList	prev_time		4693672	1					
ANR	4693686	Argument	prev_time		4693672	0					
ANR	4693687	Identifier	prev_time		4693672	0					
ANR	4693688	ExpressionStatement	did_startup = 1	132:2:4381:4396	4693672	1	True				
ANR	4693689	AssignmentExpression	did_startup = 1		4693672	0		=			
ANR	4693690	Identifier	did_startup		4693672	0					
ANR	4693691	PrimaryExpression	1		4693672	1					
ANR	4693692	ReturnStatement	return ;	133:2:4400:4406	4693672	2	True				
ANR	4693693	ExpressionStatement	get_moment ( now_time )	135:1:4412:4434	4693672	1	True				
ANR	4693694	CallExpression	get_moment ( now_time )		4693672	0					
ANR	4693695	Callee	get_moment		4693672	0					
ANR	4693696	Identifier	get_moment		4693672	0					
ANR	4693697	ArgumentList	now_time		4693672	1					
ANR	4693698	Argument	now_time		4693672	0					
ANR	4693699	Identifier	now_time		4693672	0					
ANR	4693700	ExpressionStatement	"check_schedule ( prev_time , now_time )"	136:1:4437:4474	4693672	2	True				
ANR	4693701	CallExpression	"check_schedule ( prev_time , now_time )"		4693672	0					
ANR	4693702	Callee	check_schedule		4693672	0					
ANR	4693703	Identifier	check_schedule		4693672	0					
ANR	4693704	ArgumentList	prev_time		4693672	1					
ANR	4693705	Argument	prev_time		4693672	0					
ANR	4693706	Identifier	prev_time		4693672	0					
ANR	4693707	Argument	now_time		4693672	1					
ANR	4693708	Identifier	now_time		4693672	0					
ANR	4693709	ExpressionStatement	"memcpy ( prev_time , now_time , sizeof ( now_time ) )"	137:1:4477:4523	4693672	3	True				
ANR	4693710	CallExpression	"memcpy ( prev_time , now_time , sizeof ( now_time ) )"		4693672	0					
ANR	4693711	Callee	memcpy		4693672	0					
ANR	4693712	Identifier	memcpy		4693672	0					
ANR	4693713	ArgumentList	prev_time		4693672	1					
ANR	4693714	Argument	prev_time		4693672	0					
ANR	4693715	Identifier	prev_time		4693672	0					
ANR	4693716	Argument	now_time		4693672	1					
ANR	4693717	Identifier	now_time		4693672	0					
ANR	4693718	Argument	sizeof ( now_time )		4693672	2					
ANR	4693719	SizeofExpression	sizeof ( now_time )		4693672	0					
ANR	4693720	Sizeof	sizeof		4693672	0					
ANR	4693721	SizeofOperand	now_time		4693672	1					
ANR	4693722	ReturnType	void		4693672	1					
ANR	4693723	Identifier	event_mgr		4693672	2					
ANR	4693724	ParameterList			4693672	3					
ANR	4693725	CFGEntryNode	ENTRY		4693672		True				
ANR	4693726	CFGExitNode	EXIT		4693672		True				
ANR	4693727	Symbol	now_time		4693672						
ANR	4693728	Symbol	prev_time		4693672						
ANR	4693729	Symbol	did_startup		4693672						
ANR	4693730	Function	check_schedule	141:0:4549:4727							
ANR	4693731	FunctionDef	"check_schedule (int prev [ ] , int now [ ])"		4693730	0					
ANR	4693732	CompoundStatement		143:0:4601:4727	4693730	0					
ANR	4693733	IdentifierDeclStatement	int i ;	144:1:4604:4610	4693730	0	True				
ANR	4693734	IdentifierDecl	i		4693730	0					
ANR	4693735	IdentifierDeclType	int		4693730	0					
ANR	4693736	Identifier	i		4693730	1					
ANR	4693737	ForStatement	for ( i = 0 ; i < N_Events ; i ++ )		4693730	1					
ANR	4693738	ForInit	i = 0 ;	146:6:4619:4622	4693730	0	True				
ANR	4693739	AssignmentExpression	i = 0		4693730	0		=			
ANR	4693740	Identifier	i		4693730	0					
ANR	4693741	PrimaryExpression	0		4693730	1					
ANR	4693742	Condition	i < N_Events	146:11:4624:4633	4693730	1	True				
ANR	4693743	RelationalExpression	i < N_Events		4693730	0		<			
ANR	4693744	Identifier	i		4693730	0					
ANR	4693745	Identifier	N_Events		4693730	1					
ANR	4693746	PostIncDecOperationExpression	i ++	146:23:4636:4638	4693730	2	True				
ANR	4693747	Identifier	i		4693730	0					
ANR	4693748	IncDec	++		4693730	1					
ANR	4693749	CompoundStatement		4:29:40:40	4693730	3					
ANR	4693750	IfStatement	"if ( event_due ( Schedule [ i ] . pattern , prev , now ) )"		4693730	0					
ANR	4693751	Condition	"event_due ( Schedule [ i ] . pattern , prev , now )"	147:6:4650:4688	4693730	0	True				
ANR	4693752	CallExpression	"event_due ( Schedule [ i ] . pattern , prev , now )"		4693730	0					
ANR	4693753	Callee	event_due		4693730	0					
ANR	4693754	Identifier	event_due		4693730	0					
ANR	4693755	ArgumentList	Schedule [ i ] . pattern		4693730	1					
ANR	4693756	Argument	Schedule [ i ] . pattern		4693730	0					
ANR	4693757	MemberAccess	Schedule [ i ] . pattern		4693730	0					
ANR	4693758	ArrayIndexing	Schedule [ i ]		4693730	0					
ANR	4693759	Identifier	Schedule		4693730	0					
ANR	4693760	Identifier	i		4693730	1					
ANR	4693761	Identifier	pattern		4693730	1					
ANR	4693762	Argument	prev		4693730	1					
ANR	4693763	Identifier	prev		4693730	0					
ANR	4693764	Argument	now		4693730	2					
ANR	4693765	Identifier	now		4693730	0					
ANR	4693766	CompoundStatement		5:48:90:90	4693730	1					
ANR	4693767	ExpressionStatement	( * Schedule [ i ] . func ) ( )	148:3:4697:4718	4693730	0	True				
ANR	4693768	CallExpression	( * Schedule [ i ] . func ) ( )		4693730	0					
ANR	4693769	Callee	* Schedule [ i ] . func		4693730	0					
ANR	4693770	UnaryOperationExpression	* Schedule [ i ] . func		4693730	0					
ANR	4693771	UnaryOperator	*		4693730	0					
ANR	4693772	MemberAccess	Schedule [ i ] . func		4693730	1					
ANR	4693773	ArrayIndexing	Schedule [ i ]		4693730	0					
ANR	4693774	Identifier	Schedule		4693730	0					
ANR	4693775	Identifier	i		4693730	1					
ANR	4693776	Identifier	func		4693730	1					
ANR	4693777	ArgumentList			4693730	1					
ANR	4693778	ReturnType	static void		4693730	1					
ANR	4693779	Identifier	check_schedule		4693730	2					
ANR	4693780	ParameterList	"int prev [ ] , int now [ ]"		4693730	3					
ANR	4693781	Parameter	int prev [ ]	142:16:4577:4586	4693730	0	True				
ANR	4693782	ParameterType	int [ ]		4693730	0					
ANR	4693783	Identifier	prev		4693730	1					
ANR	4693784	Parameter	int now [ ]	142:28:4589:4597	4693730	1	True				
ANR	4693785	ParameterType	int [ ]		4693730	0					
ANR	4693786	Identifier	now		4693730	1					
ANR	4693787	CFGEntryNode	ENTRY		4693730		True				
ANR	4693788	CFGExitNode	EXIT		4693730		True				
ANR	4693789	Symbol	Schedule [ i ] . pattern		4693730						
ANR	4693790	Symbol	N_Events		4693730						
ANR	4693791	Symbol	* i		4693730						
ANR	4693792	Symbol	Schedule [ i ] . func		4693730						
ANR	4693793	Symbol	* Schedule		4693730						
ANR	4693794	Symbol	prev		4693730						
ANR	4693795	Symbol	now		4693730						
ANR	4693796	Symbol	Schedule		4693730						
ANR	4693797	Symbol	i		4693730						
ANR	4693798	Symbol	event_due		4693730						
ANR	4693799	Function	event_due	164:0:5212:5864							
ANR	4693800	FunctionDef	"event_due (int pattern [ ] , int prev [ ] , int now [ ])"		4693799	0					
ANR	4693801	CompoundStatement		167:0:5273:5864	4693799	0					
ANR	4693802	IdentifierDeclStatement	int alpha [ N_ELEM ] ;	168:1:5276:5294	4693799	0	True				
ANR	4693803	IdentifierDecl	alpha [ N_ELEM ]		4693799	0					
ANR	4693804	IdentifierDeclType	int [ N_ELEM ]		4693799	0					
ANR	4693805	Identifier	alpha		4693799	1					
ANR	4693806	Identifier	N_ELEM		4693799	2					
ANR	4693807	IdentifierDeclStatement	int i ;	169:1:5297:5303	4693799	1	True				
ANR	4693808	IdentifierDecl	i		4693799	0					
ANR	4693809	IdentifierDeclType	int		4693799	0					
ANR	4693810	Identifier	i		4693799	1					
ANR	4693811	ForStatement	for ( i = 0 ; i < N_ELEM ; i ++ )		4693799	2					
ANR	4693812	ForInit	i = 0 ;	172:6:5349:5352	4693799	0	True				
ANR	4693813	AssignmentExpression	i = 0		4693799	0		=			
ANR	4693814	Identifier	i		4693799	0					
ANR	4693815	PrimaryExpression	0		4693799	1					
ANR	4693816	Condition	i < N_ELEM	172:11:5354:5361	4693799	1	True				
ANR	4693817	RelationalExpression	i < N_ELEM		4693799	0		<			
ANR	4693818	Identifier	i		4693799	0					
ANR	4693819	Identifier	N_ELEM		4693799	1					
ANR	4693820	PostIncDecOperationExpression	i ++	172:21:5364:5366	4693799	2	True				
ANR	4693821	Identifier	i		4693799	0					
ANR	4693822	IncDec	++		4693799	1					
ANR	4693823	CompoundStatement		6:27:96:96	4693799	3					
ANR	4693824	IfStatement	if ( pattern [ i ] == STAR )		4693799	0					
ANR	4693825	Condition	pattern [ i ] == STAR	173:6:5378:5395	4693799	0	True				
ANR	4693826	EqualityExpression	pattern [ i ] == STAR		4693799	0		==			
ANR	4693827	ArrayIndexing	pattern [ i ]		4693799	0					
ANR	4693828	Identifier	pattern		4693799	0					
ANR	4693829	Identifier	i		4693799	1					
ANR	4693830	Identifier	STAR		4693799	1					
ANR	4693831	CompoundStatement		7:27:125:125	4693799	1					
ANR	4693832	ExpressionStatement	alpha [ i ] = prev [ i ]	174:3:5404:5422	4693799	0	True				
ANR	4693833	AssignmentExpression	alpha [ i ] = prev [ i ]		4693799	0		=			
ANR	4693834	ArrayIndexing	alpha [ i ]		4693799	0					
ANR	4693835	Identifier	alpha		4693799	0					
ANR	4693836	Identifier	i		4693799	1					
ANR	4693837	ArrayIndexing	prev [ i ]		4693799	1					
ANR	4693838	Identifier	prev		4693799	0					
ANR	4693839	Identifier	i		4693799	1					
ANR	4693840	ElseStatement	else		4693799	0					
ANR	4693841	CompoundStatement		9:9:159:159	4693799	0					
ANR	4693842	ExpressionStatement	alpha [ i ] = pattern [ i ]	176:3:5438:5459	4693799	0	True				
ANR	4693843	AssignmentExpression	alpha [ i ] = pattern [ i ]		4693799	0		=			
ANR	4693844	ArrayIndexing	alpha [ i ]		4693799	0					
ANR	4693845	Identifier	alpha		4693799	0					
ANR	4693846	Identifier	i		4693799	1					
ANR	4693847	ArrayIndexing	pattern [ i ]		4693799	1					
ANR	4693848	Identifier	pattern		4693799	0					
ANR	4693849	Identifier	i		4693799	1					
ANR	4693850	IfStatement	"if ( before ( alpha , prev ) )"		4693799	3					
ANR	4693851	Condition	"before ( alpha , prev )"	181:5:5538:5555	4693799	0	True				
ANR	4693852	CallExpression	"before ( alpha , prev )"		4693799	0					
ANR	4693853	Callee	before		4693799	0					
ANR	4693854	Identifier	before		4693799	0					
ANR	4693855	ArgumentList	alpha		4693799	1					
ANR	4693856	Argument	alpha		4693799	0					
ANR	4693857	Identifier	alpha		4693799	0					
ANR	4693858	Argument	prev		4693799	1					
ANR	4693859	Identifier	prev		4693799	0					
ANR	4693860	CompoundStatement		15:26:285:285	4693799	1					
ANR	4693861	ExpressionStatement	"i = next_rightmost ( pattern , N_ELEM )"	182:2:5563:5600	4693799	0	True				
ANR	4693862	AssignmentExpression	"i = next_rightmost ( pattern , N_ELEM )"		4693799	0		=			
ANR	4693863	Identifier	i		4693799	0					
ANR	4693864	CallExpression	"next_rightmost ( pattern , N_ELEM )"		4693799	1					
ANR	4693865	Callee	next_rightmost		4693799	0					
ANR	4693866	Identifier	next_rightmost		4693799	0					
ANR	4693867	ArgumentList	pattern		4693799	1					
ANR	4693868	Argument	pattern		4693799	0					
ANR	4693869	Identifier	pattern		4693799	0					
ANR	4693870	Argument	N_ELEM		4693799	1					
ANR	4693871	Identifier	N_ELEM		4693799	0					
ANR	4693872	IfStatement	if ( i < 0 )		4693799	1					
ANR	4693873	Condition	i < 0	183:6:5608:5612	4693799	0	True				
ANR	4693874	RelationalExpression	i < 0		4693799	0		<			
ANR	4693875	Identifier	i		4693799	0					
ANR	4693876	PrimaryExpression	0		4693799	1					
ANR	4693877	CompoundStatement		17:14:342:342	4693799	1					
ANR	4693878	ReturnStatement	return FALSE ;	184:3:5621:5633	4693799	0	True				
ANR	4693879	Identifier	FALSE		4693799	0					
ANR	4693880	ForStatement	for ( ; ; )		4693799	2					
ANR	4693881	CompoundStatement		20:10:375:375	4693799	0					
ANR	4693882	ExpressionStatement	alpha [ i ] += 1	187:3:5654:5667	4693799	0	True				
ANR	4693883	AssignmentExpression	alpha [ i ] += 1		4693799	0		+=			
ANR	4693884	ArrayIndexing	alpha [ i ]		4693799	0					
ANR	4693885	Identifier	alpha		4693799	0					
ANR	4693886	Identifier	i		4693799	1					
ANR	4693887	PrimaryExpression	1		4693799	1					
ANR	4693888	IfStatement	"if ( before ( prev , alpha ) )"		4693799	1					
ANR	4693889	Condition	"before ( prev , alpha )"	188:7:5676:5693	4693799	0	True				
ANR	4693890	CallExpression	"before ( prev , alpha )"		4693799	0					
ANR	4693891	Callee	before		4693799	0					
ANR	4693892	Identifier	before		4693799	0					
ANR	4693893	ArgumentList	prev		4693799	1					
ANR	4693894	Argument	prev		4693799	0					
ANR	4693895	Identifier	prev		4693799	0					
ANR	4693896	Argument	alpha		4693799	1					
ANR	4693897	Identifier	alpha		4693799	0					
ANR	4693898	CompoundStatement		22:28:423:423	4693799	1					
ANR	4693899	BreakStatement	break ;	189:4:5703:5708	4693799	0	True				
ANR	4693900	ElseStatement	else		4693799	0					
ANR	4693901	CompoundStatement		24:10:446:446	4693799	0					
ANR	4693902	ExpressionStatement	alpha [ i ] = 0	191:4:5726:5738	4693799	0	True				
ANR	4693903	AssignmentExpression	alpha [ i ] = 0		4693799	0		=			
ANR	4693904	ArrayIndexing	alpha [ i ]		4693799	0					
ANR	4693905	Identifier	alpha		4693799	0					
ANR	4693906	Identifier	i		4693799	1					
ANR	4693907	PrimaryExpression	0		4693799	1					
ANR	4693908	ExpressionStatement	"i = next_rightmost ( pattern , i )"	192:4:5744:5776	4693799	1	True				
ANR	4693909	AssignmentExpression	"i = next_rightmost ( pattern , i )"		4693799	0		=			
ANR	4693910	Identifier	i		4693799	0					
ANR	4693911	CallExpression	"next_rightmost ( pattern , i )"		4693799	1					
ANR	4693912	Callee	next_rightmost		4693799	0					
ANR	4693913	Identifier	next_rightmost		4693799	0					
ANR	4693914	ArgumentList	pattern		4693799	1					
ANR	4693915	Argument	pattern		4693799	0					
ANR	4693916	Identifier	pattern		4693799	0					
ANR	4693917	Argument	i		4693799	1					
ANR	4693918	Identifier	i		4693799	0					
ANR	4693919	IfStatement	if ( i < 0 )		4693799	2					
ANR	4693920	Condition	i < 0	193:8:5786:5790	4693799	0	True				
ANR	4693921	RelationalExpression	i < 0		4693799	0		<			
ANR	4693922	Identifier	i		4693799	0					
ANR	4693923	PrimaryExpression	0		4693799	1					
ANR	4693924	CompoundStatement		27:16:520:520	4693799	1					
ANR	4693925	ReturnStatement	return FALSE ;	194:5:5801:5813	4693799	0	True				
ANR	4693926	Identifier	FALSE		4693799	0					
ANR	4693927	ReturnStatement	"return before ( alpha , now ) ;"	200:1:5835:5862	4693799	4	True				
ANR	4693928	CallExpression	"before ( alpha , now )"		4693799	0					
ANR	4693929	Callee	before		4693799	0					
ANR	4693930	Identifier	before		4693799	0					
ANR	4693931	ArgumentList	alpha		4693799	1					
ANR	4693932	Argument	alpha		4693799	0					
ANR	4693933	Identifier	alpha		4693799	0					
ANR	4693934	Argument	now		4693799	1					
ANR	4693935	Identifier	now		4693799	0					
ANR	4693936	ReturnType	static int		4693799	1					
ANR	4693937	Identifier	event_due		4693799	2					
ANR	4693938	ParameterList	"int pattern [ ] , int prev [ ] , int now [ ]"		4693799	3					
ANR	4693939	Parameter	int pattern [ ]	166:11:5234:5246	4693799	0	True				
ANR	4693940	ParameterType	int [ ]		4693799	0					
ANR	4693941	Identifier	pattern		4693799	1					
ANR	4693942	Parameter	int prev [ ]	166:26:5249:5258	4693799	1	True				
ANR	4693943	ParameterType	int [ ]		4693799	0					
ANR	4693944	Identifier	prev		4693799	1					
ANR	4693945	Parameter	int now [ ]	166:38:5261:5269	4693799	2	True				
ANR	4693946	ParameterType	int [ ]		4693799	0					
ANR	4693947	Identifier	now		4693799	1					
ANR	4693948	CFGEntryNode	ENTRY		4693799		True				
ANR	4693949	CFGExitNode	EXIT		4693799		True				
ANR	4693950	InfiniteForNode	true		4693799		True				
ANR	4693951	Symbol	* pattern		4693799						
ANR	4693952	Symbol	* alpha		4693799						
ANR	4693953	Symbol	before		4693799						
ANR	4693954	Symbol	prev		4693799						
ANR	4693955	Symbol	pattern		4693799						
ANR	4693956	Symbol	i		4693799						
ANR	4693957	Symbol	* prev		4693799						
ANR	4693958	Symbol	* i		4693799						
ANR	4693959	Symbol	STAR		4693799						
ANR	4693960	Symbol	N_ELEM		4693799						
ANR	4693961	Symbol	now		4693799						
ANR	4693962	Symbol	alpha		4693799						
ANR	4693963	Symbol	next_rightmost		4693799						
ANR	4693964	Symbol	FALSE		4693799						
ANR	4693965	Function	before	206:0:5929:6117							
ANR	4693966	FunctionDef	"before (int t1 [ ] , int t2 [ ])"		4693965	0					
ANR	4693967	CompoundStatement		209:0:5969:6117	4693965	0					
ANR	4693968	IdentifierDeclStatement	int i ;	210:1:5972:5978	4693965	0	True				
ANR	4693969	IdentifierDecl	i		4693965	0					
ANR	4693970	IdentifierDeclType	int		4693965	0					
ANR	4693971	Identifier	i		4693965	1					
ANR	4693972	ForStatement	for ( i = 0 ; i < N_ELEM ; i ++ )		4693965	1					
ANR	4693973	ForInit	i = 0 ;	212:6:5987:5990	4693965	0	True				
ANR	4693974	AssignmentExpression	i = 0		4693965	0		=			
ANR	4693975	Identifier	i		4693965	0					
ANR	4693976	PrimaryExpression	0		4693965	1					
ANR	4693977	Condition	i < N_ELEM	212:11:5992:5999	4693965	1	True				
ANR	4693978	RelationalExpression	i < N_ELEM		4693965	0		<			
ANR	4693979	Identifier	i		4693965	0					
ANR	4693980	Identifier	N_ELEM		4693965	1					
ANR	4693981	PostIncDecOperationExpression	i ++	212:21:6002:6004	4693965	2	True				
ANR	4693982	Identifier	i		4693965	0					
ANR	4693983	IncDec	++		4693965	1					
ANR	4693984	CompoundStatement		4:27:38:38	4693965	3					
ANR	4693985	IfStatement	if ( t1 [ i ] < t2 [ i ] )		4693965	0					
ANR	4693986	Condition	t1 [ i ] < t2 [ i ]	213:6:6016:6028	4693965	0	True				
ANR	4693987	RelationalExpression	t1 [ i ] < t2 [ i ]		4693965	0		<			
ANR	4693988	ArrayIndexing	t1 [ i ]		4693965	0					
ANR	4693989	Identifier	t1		4693965	0					
ANR	4693990	Identifier	i		4693965	1					
ANR	4693991	ArrayIndexing	t2 [ i ]		4693965	1					
ANR	4693992	Identifier	t2		4693965	0					
ANR	4693993	Identifier	i		4693965	1					
ANR	4693994	CompoundStatement		5:22:62:62	4693965	1					
ANR	4693995	ReturnStatement	return TRUE ;	214:3:6037:6048	4693965	0	True				
ANR	4693996	Identifier	TRUE		4693965	0					
ANR	4693997	IfStatement	if ( t1 [ i ] > t2 [ i ] )		4693965	1					
ANR	4693998	Condition	t1 [ i ] > t2 [ i ]	216:6:6060:6072	4693965	0	True				
ANR	4693999	RelationalExpression	t1 [ i ] > t2 [ i ]		4693965	0		>			
ANR	4694000	ArrayIndexing	t1 [ i ]		4693965	0					
ANR	4694001	Identifier	t1		4693965	0					
ANR	4694002	Identifier	i		4693965	1					
ANR	4694003	ArrayIndexing	t2 [ i ]		4693965	1					
ANR	4694004	Identifier	t2		4693965	0					
ANR	4694005	Identifier	i		4693965	1					
ANR	4694006	CompoundStatement		8:22:106:106	4693965	1					
ANR	4694007	ReturnStatement	return FALSE ;	217:3:6081:6093	4693965	0	True				
ANR	4694008	Identifier	FALSE		4693965	0					
ANR	4694009	ReturnStatement	return FALSE ;	220:1:6103:6115	4693965	2	True				
ANR	4694010	Identifier	FALSE		4693965	0					
ANR	4694011	ReturnType	static int		4693965	1					
ANR	4694012	Identifier	before		4693965	2					
ANR	4694013	ParameterList	"int t1 [ ] , int t2 [ ]"		4693965	3					
ANR	4694014	Parameter	int t1 [ ]	208:8:5948:5955	4693965	0	True				
ANR	4694015	ParameterType	int [ ]		4693965	0					
ANR	4694016	Identifier	t1		4693965	1					
ANR	4694017	Parameter	int t2 [ ]	208:18:5958:5965	4693965	1	True				
ANR	4694018	ParameterType	int [ ]		4693965	0					
ANR	4694019	Identifier	t2		4693965	1					
ANR	4694020	CFGEntryNode	ENTRY		4693965		True				
ANR	4694021	CFGExitNode	EXIT		4693965		True				
ANR	4694022	Symbol	* t1		4693965						
ANR	4694023	Symbol	* i		4693965						
ANR	4694024	Symbol	N_ELEM		4693965						
ANR	4694025	Symbol	* t2		4693965						
ANR	4694026	Symbol	i		4693965						
ANR	4694027	Symbol	TRUE		4693965						
ANR	4694028	Symbol	FALSE		4693965						
ANR	4694029	Symbol	t1		4693965						
ANR	4694030	Symbol	t2		4693965						
ANR	4694031	Function	next_rightmost	227:0:6273:6413							
ANR	4694032	FunctionDef	"next_rightmost (int pattern [ ] , int i)"		4694031	0					
ANR	4694033	CompoundStatement		230:0:6323:6413	4694031	0					
ANR	4694034	ForStatement	for ( i -- ; i >= 0 ; i -- )		4694031	0					
ANR	4694035	ForInit	i -- ;	231:6:6331:6334	4694031	0	True				
ANR	4694036	PostIncDecOperationExpression	i --		4694031	0					
ANR	4694037	Identifier	i		4694031	0					
ANR	4694038	IncDec	--		4694031	1					
ANR	4694039	Condition	i >= 0	231:11:6336:6341	4694031	1	True				
ANR	4694040	RelationalExpression	i >= 0		4694031	0		>=			
ANR	4694041	Identifier	i		4694031	0					
ANR	4694042	PrimaryExpression	0		4694031	1					
ANR	4694043	PostIncDecOperationExpression	i --	231:19:6344:6346	4694031	2	True				
ANR	4694044	Identifier	i		4694031	0					
ANR	4694045	IncDec	--		4694031	1					
ANR	4694046	CompoundStatement		2:25:26:26	4694031	3					
ANR	4694047	IfStatement	if ( pattern [ i ] == STAR )		4694031	0					
ANR	4694048	Condition	pattern [ i ] == STAR	232:6:6358:6375	4694031	0	True				
ANR	4694049	EqualityExpression	pattern [ i ] == STAR		4694031	0		==			
ANR	4694050	ArrayIndexing	pattern [ i ]		4694031	0					
ANR	4694051	Identifier	pattern		4694031	0					
ANR	4694052	Identifier	i		4694031	1					
ANR	4694053	Identifier	STAR		4694031	1					
ANR	4694054	CompoundStatement		3:27:55:55	4694031	1					
ANR	4694055	ReturnStatement	return i ;	233:3:6384:6392	4694031	0	True				
ANR	4694056	Identifier	i		4694031	0					
ANR	4694057	ReturnStatement	return - 1 ;	236:1:6402:6411	4694031	1	True				
ANR	4694058	UnaryOperationExpression	- 1		4694031	0					
ANR	4694059	UnaryOperator	-		4694031	0					
ANR	4694060	PrimaryExpression	1		4694031	1					
ANR	4694061	ReturnType	static int		4694031	1					
ANR	4694062	Identifier	next_rightmost		4694031	2					
ANR	4694063	ParameterList	"int pattern [ ] , int i"		4694031	3					
ANR	4694064	Parameter	int pattern [ ]	229:16:6300:6312	4694031	0	True				
ANR	4694065	ParameterType	int [ ]		4694031	0					
ANR	4694066	Identifier	pattern		4694031	1					
ANR	4694067	Parameter	int i	229:31:6315:6319	4694031	1	True				
ANR	4694068	ParameterType	int		4694031	0					
ANR	4694069	Identifier	i		4694031	1					
ANR	4694070	CFGEntryNode	ENTRY		4694031		True				
ANR	4694071	CFGExitNode	EXIT		4694031		True				
ANR	4694072	Symbol	* pattern		4694031						
ANR	4694073	Symbol	* i		4694031						
ANR	4694074	Symbol	STAR		4694031						
ANR	4694075	Symbol	pattern		4694031						
ANR	4694076	Symbol	i		4694031						
ANR	4694077	Function	get_moment	242:0:6464:6736							
ANR	4694078	FunctionDef	get_moment (int cur [ ])		4694077	0					
ANR	4694079	CompoundStatement		244:0:6500:6736	4694077	0					
ANR	4694080	IdentifierDeclStatement	struct tm * tm ;	245:1:6503:6516	4694077	0	True				
ANR	4694081	IdentifierDecl	* tm		4694077	0					
ANR	4694082	IdentifierDeclType	struct tm *		4694077	0					
ANR	4694083	Identifier	tm		4694077	1					
ANR	4694084	IdentifierDeclStatement	time_t curr_time ;	246:1:6519:6535	4694077	1	True				
ANR	4694085	IdentifierDecl	curr_time		4694077	0					
ANR	4694086	IdentifierDeclType	time_t		4694077	0					
ANR	4694087	Identifier	curr_time		4694077	1					
ANR	4694088	ExpressionStatement	( void ) time ( & curr_time )	248:1:6539:6563	4694077	2	True				
ANR	4694089	CastExpression	( void ) time ( & curr_time )		4694077	0					
ANR	4694090	CastTarget	void		4694077	0					
ANR	4694091	CallExpression	time ( & curr_time )		4694077	1					
ANR	4694092	Callee	time		4694077	0					
ANR	4694093	Identifier	time		4694077	0					
ANR	4694094	ArgumentList	& curr_time		4694077	1					
ANR	4694095	Argument	& curr_time		4694077	0					
ANR	4694096	UnaryOperationExpression	& curr_time		4694077	0					
ANR	4694097	UnaryOperator	&		4694077	0					
ANR	4694098	Identifier	curr_time		4694077	1					
ANR	4694099	ExpressionStatement	tm = localtime ( & curr_time )	249:1:6566:6594	4694077	3	True				
ANR	4694100	AssignmentExpression	tm = localtime ( & curr_time )		4694077	0		=			
ANR	4694101	Identifier	tm		4694077	0					
ANR	4694102	CallExpression	localtime ( & curr_time )		4694077	1					
ANR	4694103	Callee	localtime		4694077	0					
ANR	4694104	Identifier	localtime		4694077	0					
ANR	4694105	ArgumentList	& curr_time		4694077	1					
ANR	4694106	Argument	& curr_time		4694077	0					
ANR	4694107	UnaryOperationExpression	& curr_time		4694077	0					
ANR	4694108	UnaryOperator	&		4694077	0					
ANR	4694109	Identifier	curr_time		4694077	1					
ANR	4694110	ExpressionStatement	cur [ CMONTH ] = tm -> tm_mon + 1	250:1:6597:6625	4694077	4	True				
ANR	4694111	AssignmentExpression	cur [ CMONTH ] = tm -> tm_mon + 1		4694077	0		=			
ANR	4694112	ArrayIndexing	cur [ CMONTH ]		4694077	0					
ANR	4694113	Identifier	cur		4694077	0					
ANR	4694114	Identifier	CMONTH		4694077	1					
ANR	4694115	AdditiveExpression	tm -> tm_mon + 1		4694077	1		+			
ANR	4694116	PtrMemberAccess	tm -> tm_mon		4694077	0					
ANR	4694117	Identifier	tm		4694077	0					
ANR	4694118	Identifier	tm_mon		4694077	1					
ANR	4694119	PrimaryExpression	1		4694077	1					
ANR	4694120	ExpressionStatement	cur [ CDAY ] = tm -> tm_mday	251:1:6628:6651	4694077	5	True				
ANR	4694121	AssignmentExpression	cur [ CDAY ] = tm -> tm_mday		4694077	0		=			
ANR	4694122	ArrayIndexing	cur [ CDAY ]		4694077	0					
ANR	4694123	Identifier	cur		4694077	0					
ANR	4694124	Identifier	CDAY		4694077	1					
ANR	4694125	PtrMemberAccess	tm -> tm_mday		4694077	1					
ANR	4694126	Identifier	tm		4694077	0					
ANR	4694127	Identifier	tm_mday		4694077	1					
ANR	4694128	ExpressionStatement	cur [ CHOUR ] = tm -> tm_hour	252:1:6654:6678	4694077	6	True				
ANR	4694129	AssignmentExpression	cur [ CHOUR ] = tm -> tm_hour		4694077	0		=			
ANR	4694130	ArrayIndexing	cur [ CHOUR ]		4694077	0					
ANR	4694131	Identifier	cur		4694077	0					
ANR	4694132	Identifier	CHOUR		4694077	1					
ANR	4694133	PtrMemberAccess	tm -> tm_hour		4694077	1					
ANR	4694134	Identifier	tm		4694077	0					
ANR	4694135	Identifier	tm_hour		4694077	1					
ANR	4694136	ExpressionStatement	cur [ CMINUTE ] = tm -> tm_min	253:1:6681:6706	4694077	7	True				
ANR	4694137	AssignmentExpression	cur [ CMINUTE ] = tm -> tm_min		4694077	0		=			
ANR	4694138	ArrayIndexing	cur [ CMINUTE ]		4694077	0					
ANR	4694139	Identifier	cur		4694077	0					
ANR	4694140	Identifier	CMINUTE		4694077	1					
ANR	4694141	PtrMemberAccess	tm -> tm_min		4694077	1					
ANR	4694142	Identifier	tm		4694077	0					
ANR	4694143	Identifier	tm_min		4694077	1					
ANR	4694144	ExpressionStatement	cur [ CSECOND ] = tm -> tm_sec	254:1:6709:6734	4694077	8	True				
ANR	4694145	AssignmentExpression	cur [ CSECOND ] = tm -> tm_sec		4694077	0		=			
ANR	4694146	ArrayIndexing	cur [ CSECOND ]		4694077	0					
ANR	4694147	Identifier	cur		4694077	0					
ANR	4694148	Identifier	CSECOND		4694077	1					
ANR	4694149	PtrMemberAccess	tm -> tm_sec		4694077	1					
ANR	4694150	Identifier	tm		4694077	0					
ANR	4694151	Identifier	tm_sec		4694077	1					
ANR	4694152	ReturnType	static void		4694077	1					
ANR	4694153	Identifier	get_moment		4694077	2					
ANR	4694154	ParameterList	int cur [ ]		4694077	3					
ANR	4694155	Parameter	int cur [ ]	243:12:6488:6496	4694077	0	True				
ANR	4694156	ParameterType	int [ ]		4694077	0					
ANR	4694157	Identifier	cur		4694077	1					
ANR	4694158	CFGEntryNode	ENTRY		4694077		True				
ANR	4694159	CFGExitNode	EXIT		4694077		True				
ANR	4694160	Symbol	localtime		4694077						
ANR	4694161	Symbol	cur		4694077						
ANR	4694162	Symbol	& curr_time		4694077						
ANR	4694163	Symbol	* CDAY		4694077						
ANR	4694164	Symbol	* CHOUR		4694077						
ANR	4694165	Symbol	CDAY		4694077						
ANR	4694166	Symbol	CMINUTE		4694077						
ANR	4694167	Symbol	CMONTH		4694077						
ANR	4694168	Symbol	tm -> tm_mon		4694077						
ANR	4694169	Symbol	* CMINUTE		4694077						
ANR	4694170	Symbol	* CSECOND		4694077						
ANR	4694171	Symbol	* cur		4694077						
ANR	4694172	Symbol	CHOUR		4694077						
ANR	4694173	Symbol	tm -> tm_mday		4694077						
ANR	4694174	Symbol	tm -> tm_min		4694077						
ANR	4694175	Symbol	tm -> tm_sec		4694077						
ANR	4694176	Symbol	CSECOND		4694077						
ANR	4694177	Symbol	tm		4694077						
ANR	4694178	Symbol	curr_time		4694077						
ANR	4694179	Symbol	tm -> tm_hour		4694077						
ANR	4694180	Symbol	* CMONTH		4694077						
ANR	4694181	Symbol	* tm		4694077						
