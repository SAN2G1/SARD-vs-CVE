command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4168631	File	data/converged/CVE-2011-4930_htcondor/src_condor_tests_job_ckpt_standalone_std.c								
ANR	4168632	ClassDef	Frame	57:0:2429:2708							
ANR	4168633	DeclStmt									
ANR	4168634	Decl							int	int	value
ANR	4168635	DeclStmt									
ANR	4168636	Decl							int	int *	data
ANR	4168637	DeclStmt									
ANR	4168638	Decl							int	int	size
ANR	4168639	DeclStmt									
ANR	4168640	Decl							struct Frame	struct Frame *	previous
ANR	4168641	DeclStmt									
ANR	4168642	Decl							void	"void ( int * data , int size , int value )"	init_data
ANR	4168643	DeclStmt									
ANR	4168644	Decl							int	"int ( struct Frame * pf , int old_value )"	deepen
ANR	4168645	DeclStmt									
ANR	4168646	Decl							int	"int ( struct Frame * f , int value )"	is_stack_valid
ANR	4168647	DeclStmt									
ANR	4168648	Decl							int	"int ( int * data , int size , int value )"	data_valid
ANR	4168649	DeclStmt									
ANR	4168650	Decl							int	int	g_sum
ANR	4168651	DeclStmt									
ANR	4168652	Decl							int	int *	g_heap1
ANR	4168653	DeclStmt									
ANR	4168654	Decl							int	int *	g_heap2
ANR	4168655	DeclStmt									
ANR	4168656	Decl							int	int	g_heap_size
ANR	4168657	Function	main	83:0:3200:4537							
ANR	4168658	FunctionDef	main ()		4168657	0					
ANR	4168659	CompoundStatement		84:0:3215:4537	4168657	0					
ANR	4168660	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	86:1:3293:3317	4168657	0	True				
ANR	4168661	IdentifierDecl	data [ STACKINCREMENT ]		4168657	0					
ANR	4168662	IdentifierDeclType	int [ STACKINCREMENT ]		4168657	0					
ANR	4168663	Identifier	data		4168657	1					
ANR	4168664	Identifier	STACKINCREMENT		4168657	2					
ANR	4168665	IdentifierDeclStatement	struct Frame f ;	87:1:3320:3334	4168657	1	True				
ANR	4168666	IdentifierDecl	f		4168657	0					
ANR	4168667	IdentifierDeclType	struct Frame		4168657	0					
ANR	4168668	Identifier	f		4168657	1					
ANR	4168669	IdentifierDeclStatement	int validity ;	88:1:3337:3349	4168657	2	True				
ANR	4168670	IdentifierDecl	validity		4168657	0					
ANR	4168671	IdentifierDeclType	int		4168657	0					
ANR	4168672	Identifier	validity		4168657	1					
ANR	4168673	IdentifierDeclStatement	"int a , b , c ;"	89:1:3352:3363	4168657	3	True				
ANR	4168674	IdentifierDecl	a		4168657	0					
ANR	4168675	IdentifierDeclType	int		4168657	0					
ANR	4168676	Identifier	a		4168657	1					
ANR	4168677	IdentifierDecl	b		4168657	1					
ANR	4168678	IdentifierDeclType	int		4168657	0					
ANR	4168679	Identifier	b		4168657	1					
ANR	4168680	IdentifierDecl	c		4168657	2					
ANR	4168681	IdentifierDeclType	int		4168657	0					
ANR	4168682	Identifier	c		4168657	1					
ANR	4168683	ExpressionStatement	"init_data ( data , STACKINCREMENT , 0 )"	91:1:3367:3401	4168657	4	True				
ANR	4168684	CallExpression	"init_data ( data , STACKINCREMENT , 0 )"		4168657	0					
ANR	4168685	Callee	init_data		4168657	0					
ANR	4168686	Identifier	init_data		4168657	0					
ANR	4168687	ArgumentList	data		4168657	1					
ANR	4168688	Argument	data		4168657	0					
ANR	4168689	Identifier	data		4168657	0					
ANR	4168690	Argument	STACKINCREMENT		4168657	1					
ANR	4168691	Identifier	STACKINCREMENT		4168657	0					
ANR	4168692	Argument	0		4168657	2					
ANR	4168693	PrimaryExpression	0		4168657	0					
ANR	4168694	ExpressionStatement	f . value = 0	96:1:3660:3671	4168657	5	True				
ANR	4168695	AssignmentExpression	f . value = 0		4168657	0		=			
ANR	4168696	MemberAccess	f . value		4168657	0					
ANR	4168697	Identifier	f		4168657	0					
ANR	4168698	Identifier	value		4168657	1					
ANR	4168699	PrimaryExpression	0		4168657	1					
ANR	4168700	ExpressionStatement	f . data = & data [ 0 ]	97:1:3675:3692	4168657	6	True				
ANR	4168701	AssignmentExpression	f . data = & data [ 0 ]		4168657	0		=			
ANR	4168702	MemberAccess	f . data		4168657	0					
ANR	4168703	Identifier	f		4168657	0					
ANR	4168704	Identifier	data		4168657	1					
ANR	4168705	UnaryOperationExpression	& data [ 0 ]		4168657	1					
ANR	4168706	UnaryOperator	&		4168657	0					
ANR	4168707	ArrayIndexing	data [ 0 ]		4168657	1					
ANR	4168708	Identifier	data		4168657	0					
ANR	4168709	PrimaryExpression	0		4168657	1					
ANR	4168710	ExpressionStatement	f . size = STACKINCREMENT	98:1:3695:3718	4168657	7	True				
ANR	4168711	AssignmentExpression	f . size = STACKINCREMENT		4168657	0		=			
ANR	4168712	MemberAccess	f . size		4168657	0					
ANR	4168713	Identifier	f		4168657	0					
ANR	4168714	Identifier	size		4168657	1					
ANR	4168715	Identifier	STACKINCREMENT		4168657	1					
ANR	4168716	ExpressionStatement	f . previous = NULL	99:1:3721:3738	4168657	8	True				
ANR	4168717	AssignmentExpression	f . previous = NULL		4168657	0		=			
ANR	4168718	MemberAccess	f . previous		4168657	0					
ANR	4168719	Identifier	f		4168657	0					
ANR	4168720	Identifier	previous		4168657	1					
ANR	4168721	Identifier	NULL		4168657	1					
ANR	4168722	ExpressionStatement	g_sum += STACKINCREMENT	100:1:3741:3764	4168657	9	True				
ANR	4168723	AssignmentExpression	g_sum += STACKINCREMENT		4168657	0		+=			
ANR	4168724	Identifier	g_sum		4168657	0					
ANR	4168725	Identifier	STACKINCREMENT		4168657	1					
ANR	4168726	ExpressionStatement	"a = is_stack_valid ( & f , 0 )"	102:1:3811:3836	4168657	10	True				
ANR	4168727	AssignmentExpression	"a = is_stack_valid ( & f , 0 )"		4168657	0		=			
ANR	4168728	Identifier	a		4168657	0					
ANR	4168729	CallExpression	"is_stack_valid ( & f , 0 )"		4168657	1					
ANR	4168730	Callee	is_stack_valid		4168657	0					
ANR	4168731	Identifier	is_stack_valid		4168657	0					
ANR	4168732	ArgumentList	& f		4168657	1					
ANR	4168733	Argument	& f		4168657	0					
ANR	4168734	UnaryOperationExpression	& f		4168657	0					
ANR	4168735	UnaryOperator	&		4168657	0					
ANR	4168736	Identifier	f		4168657	1					
ANR	4168737	Argument	0		4168657	1					
ANR	4168738	PrimaryExpression	0		4168657	0					
ANR	4168739	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , 0 )"	103:1:3839:3872	4168657	11	True				
ANR	4168740	CallExpression	"printf ( ""Deepness Level: %d\\n"" , 0 )"		4168657	0					
ANR	4168741	Callee	printf		4168657	0					
ANR	4168742	Identifier	printf		4168657	0					
ANR	4168743	ArgumentList	"""Deepness Level: %d\\n"""		4168657	1					
ANR	4168744	Argument	"""Deepness Level: %d\\n"""		4168657	0					
ANR	4168745	PrimaryExpression	"""Deepness Level: %d\\n"""		4168657	0					
ANR	4168746	Argument	0		4168657	1					
ANR	4168747	PrimaryExpression	0		4168657	0					
ANR	4168748	ExpressionStatement	"b = deepen ( & f , 0 )"	104:1:3875:3892	4168657	12	True				
ANR	4168749	AssignmentExpression	"b = deepen ( & f , 0 )"		4168657	0		=			
ANR	4168750	Identifier	b		4168657	0					
ANR	4168751	CallExpression	"deepen ( & f , 0 )"		4168657	1					
ANR	4168752	Callee	deepen		4168657	0					
ANR	4168753	Identifier	deepen		4168657	0					
ANR	4168754	ArgumentList	& f		4168657	1					
ANR	4168755	Argument	& f		4168657	0					
ANR	4168756	UnaryOperationExpression	& f		4168657	0					
ANR	4168757	UnaryOperator	&		4168657	0					
ANR	4168758	Identifier	f		4168657	1					
ANR	4168759	Argument	0		4168657	1					
ANR	4168760	PrimaryExpression	0		4168657	0					
ANR	4168761	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"	105:1:3895:3954	4168657	13	True				
ANR	4168762	Expression	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"		4168657	0					
ANR	4168763	CallExpression	"printf ( ""Backchecking %d\\n"" , 0 )"		4168657	0					
ANR	4168764	Callee	printf		4168657	0					
ANR	4168765	Identifier	printf		4168657	0					
ANR	4168766	ArgumentList	"""Backchecking %d\\n"""		4168657	1					
ANR	4168767	Argument	"""Backchecking %d\\n"""		4168657	0					
ANR	4168768	PrimaryExpression	"""Backchecking %d\\n"""		4168657	0					
ANR	4168769	Argument	0		4168657	1					
ANR	4168770	PrimaryExpression	0		4168657	0					
ANR	4168771	AssignmentExpression	"c = is_stack_valid ( & f , 0 )"		4168657	1		=			
ANR	4168772	Identifier	c		4168657	0					
ANR	4168773	CallExpression	"is_stack_valid ( & f , 0 )"		4168657	1					
ANR	4168774	Callee	is_stack_valid		4168657	0					
ANR	4168775	Identifier	is_stack_valid		4168657	0					
ANR	4168776	ArgumentList	& f		4168657	1					
ANR	4168777	Argument	& f		4168657	0					
ANR	4168778	UnaryOperationExpression	& f		4168657	0					
ANR	4168779	UnaryOperator	&		4168657	0					
ANR	4168780	Identifier	f		4168657	1					
ANR	4168781	Argument	0		4168657	1					
ANR	4168782	PrimaryExpression	0		4168657	0					
ANR	4168783	ExpressionStatement	validity = a && b && c	107:1:3957:3979	4168657	14	True				
ANR	4168784	AssignmentExpression	validity = a && b && c		4168657	0		=			
ANR	4168785	Identifier	validity		4168657	0					
ANR	4168786	AndExpression	a && b && c		4168657	1		&&			
ANR	4168787	Identifier	a		4168657	0					
ANR	4168788	AndExpression	b && c		4168657	1		&&			
ANR	4168789	Identifier	b		4168657	0					
ANR	4168790	Identifier	c		4168657	1					
ANR	4168791	IfStatement	if ( validity == FALSE )		4168657	15					
ANR	4168792	Condition	validity == FALSE	108:5:3986:4002	4168657	0	True				
ANR	4168793	EqualityExpression	validity == FALSE		4168657	0		==			
ANR	4168794	Identifier	validity		4168657	0					
ANR	4168795	Identifier	FALSE		4168657	1					
ANR	4168796	CompoundStatement		25:24:789:789	4168657	1					
ANR	4168797	ExpressionStatement	"printf ( ""Stack failure.\\n"" )"	109:2:4009:4035	4168657	0	True				
ANR	4168798	CallExpression	"printf ( ""Stack failure.\\n"" )"		4168657	0					
ANR	4168799	Callee	printf		4168657	0					
ANR	4168800	Identifier	printf		4168657	0					
ANR	4168801	ArgumentList	"""Stack failure.\\n"""		4168657	1					
ANR	4168802	Argument	"""Stack failure.\\n"""		4168657	0					
ANR	4168803	PrimaryExpression	"""Stack failure.\\n"""		4168657	0					
ANR	4168804	ExpressionStatement	"printf ( ""FAILED\\n"" )"	110:2:4039:4057	4168657	1	True				
ANR	4168805	CallExpression	"printf ( ""FAILED\\n"" )"		4168657	0					
ANR	4168806	Callee	printf		4168657	0					
ANR	4168807	Identifier	printf		4168657	0					
ANR	4168808	ArgumentList	"""FAILED\\n"""		4168657	1					
ANR	4168809	Argument	"""FAILED\\n"""		4168657	0					
ANR	4168810	PrimaryExpression	"""FAILED\\n"""		4168657	0					
ANR	4168811	ExpressionStatement	exit ( EXIT_FAILURE )	111:2:4061:4079	4168657	2	True				
ANR	4168812	CallExpression	exit ( EXIT_FAILURE )		4168657	0					
ANR	4168813	Callee	exit		4168657	0					
ANR	4168814	Identifier	exit		4168657	0					
ANR	4168815	ArgumentList	EXIT_FAILURE		4168657	1					
ANR	4168816	Argument	EXIT_FAILURE		4168657	0					
ANR	4168817	Identifier	EXIT_FAILURE		4168657	0					
ANR	4168818	ExpressionStatement	"printf ( ""Checking allocated memory heaps.\\n"" )"	114:1:4086:4130	4168657	16	True				
ANR	4168819	CallExpression	"printf ( ""Checking allocated memory heaps.\\n"" )"		4168657	0					
ANR	4168820	Callee	printf		4168657	0					
ANR	4168821	Identifier	printf		4168657	0					
ANR	4168822	ArgumentList	"""Checking allocated memory heaps.\\n"""		4168657	1					
ANR	4168823	Argument	"""Checking allocated memory heaps.\\n"""		4168657	0					
ANR	4168824	PrimaryExpression	"""Checking allocated memory heaps.\\n"""		4168657	0					
ANR	4168825	IfStatement	"if ( data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE )"		4168657	17					
ANR	4168826	Condition	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE"	115:5:4137:4189	4168657	0	True				
ANR	4168827	EqualityExpression	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE"		4168657	0		==			
ANR	4168828	CallExpression	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef )"		4168657	0					
ANR	4168829	Callee	data_valid		4168657	0					
ANR	4168830	Identifier	data_valid		4168657	0					
ANR	4168831	ArgumentList	g_heap1		4168657	1					
ANR	4168832	Argument	g_heap1		4168657	0					
ANR	4168833	Identifier	g_heap1		4168657	0					
ANR	4168834	Argument	g_heap_size		4168657	1					
ANR	4168835	Identifier	g_heap_size		4168657	0					
ANR	4168836	Argument	0xdeadbeef		4168657	2					
ANR	4168837	PrimaryExpression	0xdeadbeef		4168657	0					
ANR	4168838	Identifier	FALSE		4168657	1					
ANR	4168839	CompoundStatement		32:60:976:976	4168657	1					
ANR	4168840	ExpressionStatement	"printf ( ""Memory heap 1 failure.\\n"" )"	116:2:4196:4230	4168657	0	True				
ANR	4168841	CallExpression	"printf ( ""Memory heap 1 failure.\\n"" )"		4168657	0					
ANR	4168842	Callee	printf		4168657	0					
ANR	4168843	Identifier	printf		4168657	0					
ANR	4168844	ArgumentList	"""Memory heap 1 failure.\\n"""		4168657	1					
ANR	4168845	Argument	"""Memory heap 1 failure.\\n"""		4168657	0					
ANR	4168846	PrimaryExpression	"""Memory heap 1 failure.\\n"""		4168657	0					
ANR	4168847	ExpressionStatement	"printf ( ""FAILED\\n"" )"	117:2:4234:4252	4168657	1	True				
ANR	4168848	CallExpression	"printf ( ""FAILED\\n"" )"		4168657	0					
ANR	4168849	Callee	printf		4168657	0					
ANR	4168850	Identifier	printf		4168657	0					
ANR	4168851	ArgumentList	"""FAILED\\n"""		4168657	1					
ANR	4168852	Argument	"""FAILED\\n"""		4168657	0					
ANR	4168853	PrimaryExpression	"""FAILED\\n"""		4168657	0					
ANR	4168854	ExpressionStatement	exit ( EXIT_FAILURE )	118:2:4256:4274	4168657	2	True				
ANR	4168855	CallExpression	exit ( EXIT_FAILURE )		4168657	0					
ANR	4168856	Callee	exit		4168657	0					
ANR	4168857	Identifier	exit		4168657	0					
ANR	4168858	ArgumentList	EXIT_FAILURE		4168657	1					
ANR	4168859	Argument	EXIT_FAILURE		4168657	0					
ANR	4168860	Identifier	EXIT_FAILURE		4168657	0					
ANR	4168861	IfStatement	"if ( data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE )"		4168657	18					
ANR	4168862	Condition	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE"	120:5:4284:4336	4168657	0	True				
ANR	4168863	EqualityExpression	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE"		4168657	0		==			
ANR	4168864	CallExpression	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead )"		4168657	0					
ANR	4168865	Callee	data_valid		4168657	0					
ANR	4168866	Identifier	data_valid		4168657	0					
ANR	4168867	ArgumentList	g_heap2		4168657	1					
ANR	4168868	Argument	g_heap2		4168657	0					
ANR	4168869	Identifier	g_heap2		4168657	0					
ANR	4168870	Argument	g_heap_size		4168657	1					
ANR	4168871	Identifier	g_heap_size		4168657	0					
ANR	4168872	Argument	0xbeefdead		4168657	2					
ANR	4168873	PrimaryExpression	0xbeefdead		4168657	0					
ANR	4168874	Identifier	FALSE		4168657	1					
ANR	4168875	CompoundStatement		37:60:1123:1123	4168657	1					
ANR	4168876	ExpressionStatement	"printf ( ""Memory heap 2 failure.\\n"" )"	121:2:4343:4377	4168657	0	True				
ANR	4168877	CallExpression	"printf ( ""Memory heap 2 failure.\\n"" )"		4168657	0					
ANR	4168878	Callee	printf		4168657	0					
ANR	4168879	Identifier	printf		4168657	0					
ANR	4168880	ArgumentList	"""Memory heap 2 failure.\\n"""		4168657	1					
ANR	4168881	Argument	"""Memory heap 2 failure.\\n"""		4168657	0					
ANR	4168882	PrimaryExpression	"""Memory heap 2 failure.\\n"""		4168657	0					
ANR	4168883	ExpressionStatement	"printf ( ""FAILED\\n"" )"	122:2:4381:4399	4168657	1	True				
ANR	4168884	CallExpression	"printf ( ""FAILED\\n"" )"		4168657	0					
ANR	4168885	Callee	printf		4168657	0					
ANR	4168886	Identifier	printf		4168657	0					
ANR	4168887	ArgumentList	"""FAILED\\n"""		4168657	1					
ANR	4168888	Argument	"""FAILED\\n"""		4168657	0					
ANR	4168889	PrimaryExpression	"""FAILED\\n"""		4168657	0					
ANR	4168890	ExpressionStatement	exit ( EXIT_FAILURE )	123:2:4403:4421	4168657	2	True				
ANR	4168891	CallExpression	exit ( EXIT_FAILURE )		4168657	0					
ANR	4168892	Callee	exit		4168657	0					
ANR	4168893	Identifier	exit		4168657	0					
ANR	4168894	ArgumentList	EXIT_FAILURE		4168657	1					
ANR	4168895	Argument	EXIT_FAILURE		4168657	0					
ANR	4168896	Identifier	EXIT_FAILURE		4168657	0					
ANR	4168897	ExpressionStatement	free ( g_heap1 )	126:1:4428:4441	4168657	19	True				
ANR	4168898	CallExpression	free ( g_heap1 )		4168657	0					
ANR	4168899	Callee	free		4168657	0					
ANR	4168900	Identifier	free		4168657	0					
ANR	4168901	ArgumentList	g_heap1		4168657	1					
ANR	4168902	Argument	g_heap1		4168657	0					
ANR	4168903	Identifier	g_heap1		4168657	0					
ANR	4168904	ExpressionStatement	g_heap1 = NULL	127:1:4444:4458	4168657	20	True				
ANR	4168905	AssignmentExpression	g_heap1 = NULL		4168657	0		=			
ANR	4168906	Identifier	g_heap1		4168657	0					
ANR	4168907	Identifier	NULL		4168657	1					
ANR	4168908	ExpressionStatement	free ( g_heap2 )	128:1:4461:4474	4168657	21	True				
ANR	4168909	CallExpression	free ( g_heap2 )		4168657	0					
ANR	4168910	Callee	free		4168657	0					
ANR	4168911	Identifier	free		4168657	0					
ANR	4168912	ArgumentList	g_heap2		4168657	1					
ANR	4168913	Argument	g_heap2		4168657	0					
ANR	4168914	Identifier	g_heap2		4168657	0					
ANR	4168915	ExpressionStatement	g_heap2 = NULL	129:1:4477:4491	4168657	22	True				
ANR	4168916	AssignmentExpression	g_heap2 = NULL		4168657	0		=			
ANR	4168917	Identifier	g_heap2		4168657	0					
ANR	4168918	Identifier	NULL		4168657	1					
ANR	4168919	ExpressionStatement	"printf ( ""SUCCESS\\n"" )"	131:1:4495:4514	4168657	23	True				
ANR	4168920	CallExpression	"printf ( ""SUCCESS\\n"" )"		4168657	0					
ANR	4168921	Callee	printf		4168657	0					
ANR	4168922	Identifier	printf		4168657	0					
ANR	4168923	ArgumentList	"""SUCCESS\\n"""		4168657	1					
ANR	4168924	Argument	"""SUCCESS\\n"""		4168657	0					
ANR	4168925	PrimaryExpression	"""SUCCESS\\n"""		4168657	0					
ANR	4168926	ExpressionStatement	exit ( EXIT_SUCCESS )	132:1:4517:4535	4168657	24	True				
ANR	4168927	CallExpression	exit ( EXIT_SUCCESS )		4168657	0					
ANR	4168928	Callee	exit		4168657	0					
ANR	4168929	Identifier	exit		4168657	0					
ANR	4168930	ArgumentList	EXIT_SUCCESS		4168657	1					
ANR	4168931	Argument	EXIT_SUCCESS		4168657	0					
ANR	4168932	Identifier	EXIT_SUCCESS		4168657	0					
ANR	4168933	ReturnType	int		4168657	1					
ANR	4168934	Identifier	main		4168657	2					
ANR	4168935	ParameterList			4168657	3					
ANR	4168936	CFGEntryNode	ENTRY		4168657		True				
ANR	4168937	CFGExitNode	EXIT		4168657		True				
ANR	4168938	Symbol	a		4168657						
ANR	4168939	Symbol	b		4168657						
ANR	4168940	Symbol	c		4168657						
ANR	4168941	Symbol	NULL		4168657						
ANR	4168942	Symbol	data		4168657						
ANR	4168943	Symbol	f		4168657						
ANR	4168944	Symbol	f . data		4168657						
ANR	4168945	Symbol	g_heap_size		4168657						
ANR	4168946	Symbol	g_heap2		4168657						
ANR	4168947	Symbol	g_heap1		4168657						
ANR	4168948	Symbol	g_sum		4168657						
ANR	4168949	Symbol	& f		4168657						
ANR	4168950	Symbol	data_valid		4168657						
ANR	4168951	Symbol	f . previous		4168657						
ANR	4168952	Symbol	f . value		4168657						
ANR	4168953	Symbol	EXIT_FAILURE		4168657						
ANR	4168954	Symbol	deepen		4168657						
ANR	4168955	Symbol	EXIT_SUCCESS		4168657						
ANR	4168956	Symbol	STACKINCREMENT		4168657						
ANR	4168957	Symbol	is_stack_valid		4168657						
ANR	4168958	Symbol	f . size		4168657						
ANR	4168959	Symbol	FALSE		4168657						
ANR	4168960	Symbol	validity		4168657						
ANR	4168961	Function	init_data	136:0:4585:4697							
ANR	4168962	FunctionDef	"init_data (int * data , int size , int value)"		4168961	0					
ANR	4168963	CompoundStatement		137:0:4632:4697	4168961	0					
ANR	4168964	IdentifierDeclStatement	int i ;	138:1:4635:4640	4168961	0	True				
ANR	4168965	IdentifierDecl	i		4168961	0					
ANR	4168966	IdentifierDeclType	int		4168961	0					
ANR	4168967	Identifier	i		4168961	1					
ANR	4168968	ForStatement	for ( i = 0 ; i < size ; i ++ )		4168961	1					
ANR	4168969	ForInit	i = 0 ;	140:6:4650:4655	4168961	0	True				
ANR	4168970	AssignmentExpression	i = 0		4168961	0		=			
ANR	4168971	Identifier	i		4168961	0					
ANR	4168972	PrimaryExpression	0		4168961	1					
ANR	4168973	Condition	i < size	140:13:4657:4664	4168961	1	True				
ANR	4168974	RelationalExpression	i < size		4168961	0		<			
ANR	4168975	Identifier	i		4168961	0					
ANR	4168976	Identifier	size		4168961	1					
ANR	4168977	PostIncDecOperationExpression	i ++	140:23:4667:4669	4168961	2	True				
ANR	4168978	Identifier	i		4168961	0					
ANR	4168979	IncDec	++		4168961	1					
ANR	4168980	CompoundStatement		5:1:40:40	4168961	3					
ANR	4168981	ExpressionStatement	data [ i ] = value	142:2:4677:4692	4168961	0	True				
ANR	4168982	AssignmentExpression	data [ i ] = value		4168961	0		=			
ANR	4168983	ArrayIndexing	data [ i ]		4168961	0					
ANR	4168984	Identifier	data		4168961	0					
ANR	4168985	Identifier	i		4168961	1					
ANR	4168986	Identifier	value		4168961	1					
ANR	4168987	ReturnType	void		4168961	1					
ANR	4168988	Identifier	init_data		4168961	2					
ANR	4168989	ParameterList	"int * data , int size , int value"		4168961	3					
ANR	4168990	Parameter	int * data	136:15:4600:4608	4168961	0	True				
ANR	4168991	ParameterType	int *		4168961	0					
ANR	4168992	Identifier	data		4168961	1					
ANR	4168993	Parameter	int size	136:26:4611:4618	4168961	1	True				
ANR	4168994	ParameterType	int		4168961	0					
ANR	4168995	Identifier	size		4168961	1					
ANR	4168996	Parameter	int value	136:36:4621:4629	4168961	2	True				
ANR	4168997	ParameterType	int		4168961	0					
ANR	4168998	Identifier	value		4168961	1					
ANR	4168999	CFGEntryNode	ENTRY		4168961		True				
ANR	4169000	CFGExitNode	EXIT		4168961		True				
ANR	4169001	Symbol	* i		4168961						
ANR	4169002	Symbol	data		4168961						
ANR	4169003	Symbol	size		4168961						
ANR	4169004	Symbol	i		4168961						
ANR	4169005	Symbol	value		4168961						
ANR	4169006	Symbol	* data		4168961						
ANR	4169007	Function	deepen	148:0:4797:6473							
ANR	4169008	FunctionDef	"deepen (struct Frame * pf , int old_value)"		4169007	0					
ANR	4169009	CompoundStatement		149:0:4841:6473	4169007	0					
ANR	4169010	IdentifierDeclStatement	int test ;	150:1:4844:4852	4169007	0	True				
ANR	4169011	IdentifierDecl	test		4169007	0					
ANR	4169012	IdentifierDeclType	int		4169007	0					
ANR	4169013	Identifier	test		4169007	1					
ANR	4169014	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	151:1:4855:4879	4169007	1	True				
ANR	4169015	IdentifierDecl	data [ STACKINCREMENT ]		4169007	0					
ANR	4169016	IdentifierDeclType	int [ STACKINCREMENT ]		4169007	0					
ANR	4169017	Identifier	data		4169007	1					
ANR	4169018	Identifier	STACKINCREMENT		4169007	2					
ANR	4169019	IdentifierDeclStatement	struct Frame f ;	152:1:4882:4896	4169007	2	True				
ANR	4169020	IdentifierDecl	f		4169007	0					
ANR	4169021	IdentifierDeclType	struct Frame		4169007	0					
ANR	4169022	Identifier	f		4169007	1					
ANR	4169023	IdentifierDeclStatement	int new_value = old_value + 1 ;	153:1:4899:4928	4169007	3	True				
ANR	4169024	IdentifierDecl	new_value = old_value + 1		4169007	0					
ANR	4169025	IdentifierDeclType	int		4169007	0					
ANR	4169026	Identifier	new_value		4169007	1					
ANR	4169027	AssignmentExpression	new_value = old_value + 1		4169007	2		=			
ANR	4169028	Identifier	new_value		4169007	0					
ANR	4169029	AdditiveExpression	old_value + 1		4169007	1		+			
ANR	4169030	Identifier	old_value		4169007	0					
ANR	4169031	PrimaryExpression	1		4169007	1					
ANR	4169032	IdentifierDeclStatement	"int a , b ;"	154:1:4931:4939	4169007	4	True				
ANR	4169033	IdentifierDecl	a		4169007	0					
ANR	4169034	IdentifierDeclType	int		4169007	0					
ANR	4169035	Identifier	a		4169007	1					
ANR	4169036	IdentifierDecl	b		4169007	1					
ANR	4169037	IdentifierDeclType	int		4169007	0					
ANR	4169038	Identifier	b		4169007	1					
ANR	4169039	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , new_value )"	156:1:4943:4984	4169007	5	True				
ANR	4169040	CallExpression	"printf ( ""Deepness Level: %d\\n"" , new_value )"		4169007	0					
ANR	4169041	Callee	printf		4169007	0					
ANR	4169042	Identifier	printf		4169007	0					
ANR	4169043	ArgumentList	"""Deepness Level: %d\\n"""		4169007	1					
ANR	4169044	Argument	"""Deepness Level: %d\\n"""		4169007	0					
ANR	4169045	PrimaryExpression	"""Deepness Level: %d\\n"""		4169007	0					
ANR	4169046	Argument	new_value		4169007	1					
ANR	4169047	Identifier	new_value		4169007	0					
ANR	4169048	ExpressionStatement	"init_data ( data , STACKINCREMENT , new_value )"	157:1:4987:5029	4169007	6	True				
ANR	4169049	CallExpression	"init_data ( data , STACKINCREMENT , new_value )"		4169007	0					
ANR	4169050	Callee	init_data		4169007	0					
ANR	4169051	Identifier	init_data		4169007	0					
ANR	4169052	ArgumentList	data		4169007	1					
ANR	4169053	Argument	data		4169007	0					
ANR	4169054	Identifier	data		4169007	0					
ANR	4169055	Argument	STACKINCREMENT		4169007	1					
ANR	4169056	Identifier	STACKINCREMENT		4169007	0					
ANR	4169057	Argument	new_value		4169007	2					
ANR	4169058	Identifier	new_value		4169007	0					
ANR	4169059	ExpressionStatement	f . value = new_value	158:1:5032:5051	4169007	7	True				
ANR	4169060	AssignmentExpression	f . value = new_value		4169007	0		=			
ANR	4169061	MemberAccess	f . value		4169007	0					
ANR	4169062	Identifier	f		4169007	0					
ANR	4169063	Identifier	value		4169007	1					
ANR	4169064	Identifier	new_value		4169007	1					
ANR	4169065	ExpressionStatement	f . data = & data [ 0 ]	159:1:5054:5071	4169007	8	True				
ANR	4169066	AssignmentExpression	f . data = & data [ 0 ]		4169007	0		=			
ANR	4169067	MemberAccess	f . data		4169007	0					
ANR	4169068	Identifier	f		4169007	0					
ANR	4169069	Identifier	data		4169007	1					
ANR	4169070	UnaryOperationExpression	& data [ 0 ]		4169007	1					
ANR	4169071	UnaryOperator	&		4169007	0					
ANR	4169072	ArrayIndexing	data [ 0 ]		4169007	1					
ANR	4169073	Identifier	data		4169007	0					
ANR	4169074	PrimaryExpression	0		4169007	1					
ANR	4169075	ExpressionStatement	f . size = STACKINCREMENT	160:1:5074:5097	4169007	9	True				
ANR	4169076	AssignmentExpression	f . size = STACKINCREMENT		4169007	0		=			
ANR	4169077	MemberAccess	f . size		4169007	0					
ANR	4169078	Identifier	f		4169007	0					
ANR	4169079	Identifier	size		4169007	1					
ANR	4169080	Identifier	STACKINCREMENT		4169007	1					
ANR	4169081	ExpressionStatement	f . previous = pf	161:1:5100:5115	4169007	10	True				
ANR	4169082	AssignmentExpression	f . previous = pf		4169007	0		=			
ANR	4169083	MemberAccess	f . previous		4169007	0					
ANR	4169084	Identifier	f		4169007	0					
ANR	4169085	Identifier	previous		4169007	1					
ANR	4169086	Identifier	pf		4169007	1					
ANR	4169087	ExpressionStatement	g_sum += STACKINCREMENT	162:1:5118:5141	4169007	11	True				
ANR	4169088	AssignmentExpression	g_sum += STACKINCREMENT		4169007	0		+=			
ANR	4169089	Identifier	g_sum		4169007	0					
ANR	4169090	Identifier	STACKINCREMENT		4169007	1					
ANR	4169091	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	164:1:5188:5224	4169007	12	True				
ANR	4169092	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		4169007	0		=			
ANR	4169093	Identifier	test		4169007	0					
ANR	4169094	CallExpression	"is_stack_valid ( & f , new_value )"		4169007	1					
ANR	4169095	Callee	is_stack_valid		4169007	0					
ANR	4169096	Identifier	is_stack_valid		4169007	0					
ANR	4169097	ArgumentList	& f		4169007	1					
ANR	4169098	Argument	& f		4169007	0					
ANR	4169099	UnaryOperationExpression	& f		4169007	0					
ANR	4169100	UnaryOperator	&		4169007	0					
ANR	4169101	Identifier	f		4169007	1					
ANR	4169102	Argument	new_value		4169007	1					
ANR	4169103	Identifier	new_value		4169007	0					
ANR	4169104	IfStatement	if ( test == TRUE )		4169007	13					
ANR	4169105	Condition	test == TRUE	166:5:5232:5243	4169007	0	True				
ANR	4169106	EqualityExpression	test == TRUE		4169007	0		==			
ANR	4169107	Identifier	test		4169007	0					
ANR	4169108	Identifier	TRUE		4169007	1					
ANR	4169109	CompoundStatement		19:1:405:405	4169007	1					
ANR	4169110	IfStatement	if ( g_sum < STACKSIZETARGET )		4169007	0					
ANR	4169111	Condition	g_sum < STACKSIZETARGET	168:6:5255:5277	4169007	0	True				
ANR	4169112	RelationalExpression	g_sum < STACKSIZETARGET		4169007	0		<			
ANR	4169113	Identifier	g_sum		4169007	0					
ANR	4169114	Identifier	STACKSIZETARGET		4169007	1					
ANR	4169115	CompoundStatement		21:2:440:440	4169007	1					
ANR	4169116	ExpressionStatement	"a = deepen ( & f , new_value )"	171:4:5338:5363	4169007	0	True				
ANR	4169117	AssignmentExpression	"a = deepen ( & f , new_value )"		4169007	0		=			
ANR	4169118	Identifier	a		4169007	0					
ANR	4169119	CallExpression	"deepen ( & f , new_value )"		4169007	1					
ANR	4169120	Callee	deepen		4169007	0					
ANR	4169121	Identifier	deepen		4169007	0					
ANR	4169122	ArgumentList	& f		4169007	1					
ANR	4169123	Argument	& f		4169007	0					
ANR	4169124	UnaryOperationExpression	& f		4169007	0					
ANR	4169125	UnaryOperator	&		4169007	0					
ANR	4169126	Identifier	f		4169007	1					
ANR	4169127	Argument	new_value		4169007	1					
ANR	4169128	Identifier	new_value		4169007	0					
ANR	4169129	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"	172:4:5369:5447	4169007	1	True				
ANR	4169130	Expression	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"		4169007	0					
ANR	4169131	CallExpression	"printf ( ""Backchecking %d\\n"" , new_value )"		4169007	0					
ANR	4169132	Callee	printf		4169007	0					
ANR	4169133	Identifier	printf		4169007	0					
ANR	4169134	ArgumentList	"""Backchecking %d\\n"""		4169007	1					
ANR	4169135	Argument	"""Backchecking %d\\n"""		4169007	0					
ANR	4169136	PrimaryExpression	"""Backchecking %d\\n"""		4169007	0					
ANR	4169137	Argument	new_value		4169007	1					
ANR	4169138	Identifier	new_value		4169007	0					
ANR	4169139	AssignmentExpression	"b = is_stack_valid ( & f , new_value )"		4169007	1		=			
ANR	4169140	Identifier	b		4169007	0					
ANR	4169141	CallExpression	"is_stack_valid ( & f , new_value )"		4169007	1					
ANR	4169142	Callee	is_stack_valid		4169007	0					
ANR	4169143	Identifier	is_stack_valid		4169007	0					
ANR	4169144	ArgumentList	& f		4169007	1					
ANR	4169145	Argument	& f		4169007	0					
ANR	4169146	UnaryOperationExpression	& f		4169007	0					
ANR	4169147	UnaryOperator	&		4169007	0					
ANR	4169148	Identifier	f		4169007	1					
ANR	4169149	Argument	new_value		4169007	1					
ANR	4169150	Identifier	new_value		4169007	0					
ANR	4169151	ReturnStatement	return a && b ;	175:4:5454:5467	4169007	2	True				
ANR	4169152	AndExpression	a && b		4169007	0		&&			
ANR	4169153	Identifier	a		4169007	0					
ANR	4169154	Identifier	b		4169007	1					
ANR	4169155	ExpressionStatement	g_heap1 = malloc ( sizeof ( int ) * g_heap_size )	180:2:5571:5614	4169007	1	True				
ANR	4169156	AssignmentExpression	g_heap1 = malloc ( sizeof ( int ) * g_heap_size )		4169007	0		=			
ANR	4169157	Identifier	g_heap1		4169007	0					
ANR	4169158	CallExpression	malloc ( sizeof ( int ) * g_heap_size )		4169007	1					
ANR	4169159	Callee	malloc		4169007	0					
ANR	4169160	Identifier	malloc		4169007	0					
ANR	4169161	ArgumentList	sizeof ( int ) * g_heap_size		4169007	1					
ANR	4169162	Argument	sizeof ( int ) * g_heap_size		4169007	0					
ANR	4169163	MultiplicativeExpression	sizeof ( int ) * g_heap_size		4169007	0		*			
ANR	4169164	SizeofExpression	sizeof ( int )		4169007	0					
ANR	4169165	Sizeof	sizeof		4169007	0					
ANR	4169166	SizeofOperand	int		4169007	1					
ANR	4169167	Identifier	g_heap_size		4169007	1					
ANR	4169168	IfStatement	if ( g_heap1 == NULL )		4169007	2					
ANR	4169169	Condition	g_heap1 == NULL	181:6:5622:5636	4169007	0	True				
ANR	4169170	EqualityExpression	g_heap1 == NULL		4169007	0		==			
ANR	4169171	Identifier	g_heap1		4169007	0					
ANR	4169172	Identifier	NULL		4169007	1					
ANR	4169173	CompoundStatement		33:23:797:797	4169007	1					
ANR	4169174	ExpressionStatement	"printf ( ""Out of memory while allocating heap1! Exiting.\\n"" )"	182:3:5644:5702	4169007	0	True				
ANR	4169175	CallExpression	"printf ( ""Out of memory while allocating heap1! Exiting.\\n"" )"		4169007	0					
ANR	4169176	Callee	printf		4169007	0					
ANR	4169177	Identifier	printf		4169007	0					
ANR	4169178	ArgumentList	"""Out of memory while allocating heap1! Exiting.\\n"""		4169007	1					
ANR	4169179	Argument	"""Out of memory while allocating heap1! Exiting.\\n"""		4169007	0					
ANR	4169180	PrimaryExpression	"""Out of memory while allocating heap1! Exiting.\\n"""		4169007	0					
ANR	4169181	ExpressionStatement	exit ( EXIT_FAILURE )	183:3:5707:5725	4169007	1	True				
ANR	4169182	CallExpression	exit ( EXIT_FAILURE )		4169007	0					
ANR	4169183	Callee	exit		4169007	0					
ANR	4169184	Identifier	exit		4169007	0					
ANR	4169185	ArgumentList	EXIT_FAILURE		4169007	1					
ANR	4169186	Argument	EXIT_FAILURE		4169007	0					
ANR	4169187	Identifier	EXIT_FAILURE		4169007	0					
ANR	4169188	ExpressionStatement	"init_data ( g_heap1 , g_heap_size , 0xdeadbeef )"	185:2:5733:5776	4169007	3	True				
ANR	4169189	CallExpression	"init_data ( g_heap1 , g_heap_size , 0xdeadbeef )"		4169007	0					
ANR	4169190	Callee	init_data		4169007	0					
ANR	4169191	Identifier	init_data		4169007	0					
ANR	4169192	ArgumentList	g_heap1		4169007	1					
ANR	4169193	Argument	g_heap1		4169007	0					
ANR	4169194	Identifier	g_heap1		4169007	0					
ANR	4169195	Argument	g_heap_size		4169007	1					
ANR	4169196	Identifier	g_heap_size		4169007	0					
ANR	4169197	Argument	0xdeadbeef		4169007	2					
ANR	4169198	PrimaryExpression	0xdeadbeef		4169007	0					
ANR	4169199	ExpressionStatement	"printf ( ""About to checkpoint....\\n"" )"	188:2:5833:5868	4169007	4	True				
ANR	4169200	CallExpression	"printf ( ""About to checkpoint....\\n"" )"		4169007	0					
ANR	4169201	Callee	printf		4169007	0					
ANR	4169202	Identifier	printf		4169007	0					
ANR	4169203	ArgumentList	"""About to checkpoint....\\n"""		4169007	1					
ANR	4169204	Argument	"""About to checkpoint....\\n"""		4169007	0					
ANR	4169205	PrimaryExpression	"""About to checkpoint....\\n"""		4169007	0					
ANR	4169206	ExpressionStatement	fflush ( NULL )	189:2:5872:5884	4169007	5	True				
ANR	4169207	CallExpression	fflush ( NULL )		4169007	0					
ANR	4169208	Callee	fflush		4169007	0					
ANR	4169209	Identifier	fflush		4169007	0					
ANR	4169210	ArgumentList	NULL		4169007	1					
ANR	4169211	Argument	NULL		4169007	0					
ANR	4169212	Identifier	NULL		4169007	0					
ANR	4169213	ExpressionStatement	ckpt_and_exit ( )	190:2:5888:5903	4169007	6	True				
ANR	4169214	CallExpression	ckpt_and_exit ( )		4169007	0					
ANR	4169215	Callee	ckpt_and_exit		4169007	0					
ANR	4169216	Identifier	ckpt_and_exit		4169007	0					
ANR	4169217	ArgumentList			4169007	1					
ANR	4169218	ExpressionStatement	fflush ( NULL )	191:2:5907:5919	4169007	7	True				
ANR	4169219	CallExpression	fflush ( NULL )		4169007	0					
ANR	4169220	Callee	fflush		4169007	0					
ANR	4169221	Identifier	fflush		4169007	0					
ANR	4169222	ArgumentList	NULL		4169007	1					
ANR	4169223	Argument	NULL		4169007	0					
ANR	4169224	Identifier	NULL		4169007	0					
ANR	4169225	ExpressionStatement	"printf ( ""Returning from checkpoint....\\n"" )"	193:2:5924:5965	4169007	8	True				
ANR	4169226	CallExpression	"printf ( ""Returning from checkpoint....\\n"" )"		4169007	0					
ANR	4169227	Callee	printf		4169007	0					
ANR	4169228	Identifier	printf		4169007	0					
ANR	4169229	ArgumentList	"""Returning from checkpoint....\\n"""		4169007	1					
ANR	4169230	Argument	"""Returning from checkpoint....\\n"""		4169007	0					
ANR	4169231	PrimaryExpression	"""Returning from checkpoint....\\n"""		4169007	0					
ANR	4169232	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	197:2:6089:6125	4169007	9	True				
ANR	4169233	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		4169007	0		=			
ANR	4169234	Identifier	test		4169007	0					
ANR	4169235	CallExpression	"is_stack_valid ( & f , new_value )"		4169007	1					
ANR	4169236	Callee	is_stack_valid		4169007	0					
ANR	4169237	Identifier	is_stack_valid		4169007	0					
ANR	4169238	ArgumentList	& f		4169007	1					
ANR	4169239	Argument	& f		4169007	0					
ANR	4169240	UnaryOperationExpression	& f		4169007	0					
ANR	4169241	UnaryOperator	&		4169007	0					
ANR	4169242	Identifier	f		4169007	1					
ANR	4169243	Argument	new_value		4169007	1					
ANR	4169244	Identifier	new_value		4169007	0					
ANR	4169245	ExpressionStatement	g_heap2 = malloc ( sizeof ( int ) * g_heap_size )	201:2:6231:6274	4169007	10	True				
ANR	4169246	AssignmentExpression	g_heap2 = malloc ( sizeof ( int ) * g_heap_size )		4169007	0		=			
ANR	4169247	Identifier	g_heap2		4169007	0					
ANR	4169248	CallExpression	malloc ( sizeof ( int ) * g_heap_size )		4169007	1					
ANR	4169249	Callee	malloc		4169007	0					
ANR	4169250	Identifier	malloc		4169007	0					
ANR	4169251	ArgumentList	sizeof ( int ) * g_heap_size		4169007	1					
ANR	4169252	Argument	sizeof ( int ) * g_heap_size		4169007	0					
ANR	4169253	MultiplicativeExpression	sizeof ( int ) * g_heap_size		4169007	0		*			
ANR	4169254	SizeofExpression	sizeof ( int )		4169007	0					
ANR	4169255	Sizeof	sizeof		4169007	0					
ANR	4169256	SizeofOperand	int		4169007	1					
ANR	4169257	Identifier	g_heap_size		4169007	1					
ANR	4169258	IfStatement	if ( g_heap2 == NULL )		4169007	11					
ANR	4169259	Condition	g_heap2 == NULL	202:6:6282:6296	4169007	0	True				
ANR	4169260	EqualityExpression	g_heap2 == NULL		4169007	0		==			
ANR	4169261	Identifier	g_heap2		4169007	0					
ANR	4169262	Identifier	NULL		4169007	1					
ANR	4169263	CompoundStatement		54:23:1457:1457	4169007	1					
ANR	4169264	ExpressionStatement	"printf ( ""Out of memory while allocating heap2! Exiting.\\n"" )"	203:3:6304:6362	4169007	0	True				
ANR	4169265	CallExpression	"printf ( ""Out of memory while allocating heap2! Exiting.\\n"" )"		4169007	0					
ANR	4169266	Callee	printf		4169007	0					
ANR	4169267	Identifier	printf		4169007	0					
ANR	4169268	ArgumentList	"""Out of memory while allocating heap2! Exiting.\\n"""		4169007	1					
ANR	4169269	Argument	"""Out of memory while allocating heap2! Exiting.\\n"""		4169007	0					
ANR	4169270	PrimaryExpression	"""Out of memory while allocating heap2! Exiting.\\n"""		4169007	0					
ANR	4169271	ExpressionStatement	exit ( EXIT_FAILURE )	204:3:6367:6385	4169007	1	True				
ANR	4169272	CallExpression	exit ( EXIT_FAILURE )		4169007	0					
ANR	4169273	Callee	exit		4169007	0					
ANR	4169274	Identifier	exit		4169007	0					
ANR	4169275	ArgumentList	EXIT_FAILURE		4169007	1					
ANR	4169276	Argument	EXIT_FAILURE		4169007	0					
ANR	4169277	Identifier	EXIT_FAILURE		4169007	0					
ANR	4169278	ExpressionStatement	"init_data ( g_heap2 , g_heap_size , 0xbeefdead )"	206:2:6393:6436	4169007	12	True				
ANR	4169279	CallExpression	"init_data ( g_heap2 , g_heap_size , 0xbeefdead )"		4169007	0					
ANR	4169280	Callee	init_data		4169007	0					
ANR	4169281	Identifier	init_data		4169007	0					
ANR	4169282	ArgumentList	g_heap2		4169007	1					
ANR	4169283	Argument	g_heap2		4169007	0					
ANR	4169284	Identifier	g_heap2		4169007	0					
ANR	4169285	Argument	g_heap_size		4169007	1					
ANR	4169286	Identifier	g_heap_size		4169007	0					
ANR	4169287	Argument	0xbeefdead		4169007	2					
ANR	4169288	PrimaryExpression	0xbeefdead		4169007	0					
ANR	4169289	ReturnStatement	return test ;	208:2:6441:6452	4169007	13	True				
ANR	4169290	Identifier	test		4169007	0					
ANR	4169291	ReturnStatement	return FALSE ;	211:1:6459:6471	4169007	14	True				
ANR	4169292	Identifier	FALSE		4169007	0					
ANR	4169293	ReturnType	int		4169007	1					
ANR	4169294	Identifier	deepen		4169007	2					
ANR	4169295	ParameterList	"struct Frame * pf , int old_value"		4169007	3					
ANR	4169296	Parameter	struct Frame * pf	148:11:4808:4823	4169007	0	True				
ANR	4169297	ParameterType	struct Frame *		4169007	0					
ANR	4169298	Identifier	pf		4169007	1					
ANR	4169299	Parameter	int old_value	148:29:4826:4838	4169007	1	True				
ANR	4169300	ParameterType	int		4169007	0					
ANR	4169301	Identifier	old_value		4169007	1					
ANR	4169302	CFGEntryNode	ENTRY		4169007		True				
ANR	4169303	CFGExitNode	EXIT		4169007		True				
ANR	4169304	Symbol	data		4169007						
ANR	4169305	Symbol	g_heap2		4169007						
ANR	4169306	Symbol	g_heap1		4169007						
ANR	4169307	Symbol	f . previous		4169007						
ANR	4169308	Symbol	f . value		4169007						
ANR	4169309	Symbol	f . size		4169007						
ANR	4169310	Symbol	new_value		4169007						
ANR	4169311	Symbol	a		4169007						
ANR	4169312	Symbol	malloc		4169007						
ANR	4169313	Symbol	b		4169007						
ANR	4169314	Symbol	NULL		4169007						
ANR	4169315	Symbol	test		4169007						
ANR	4169316	Symbol	f		4169007						
ANR	4169317	Symbol	f . data		4169007						
ANR	4169318	Symbol	g_heap_size		4169007						
ANR	4169319	Symbol	TRUE		4169007						
ANR	4169320	Symbol	g_sum		4169007						
ANR	4169321	Symbol	& f		4169007						
ANR	4169322	Symbol	STACKSIZETARGET		4169007						
ANR	4169323	Symbol	EXIT_FAILURE		4169007						
ANR	4169324	Symbol	pf		4169007						
ANR	4169325	Symbol	deepen		4169007						
ANR	4169326	Symbol	STACKINCREMENT		4169007						
ANR	4169327	Symbol	is_stack_valid		4169007						
ANR	4169328	Symbol	old_value		4169007						
ANR	4169329	Symbol	FALSE		4169007						
ANR	4169330	Function	is_stack_valid	216:0:6606:6885							
ANR	4169331	FunctionDef	"is_stack_valid (struct Frame * f , int value)"		4169330	0					
ANR	4169332	CompoundStatement		217:0:6653:6885	4169330	0					
ANR	4169333	IdentifierDeclStatement	int check ;	218:1:6656:6665	4169330	0	True				
ANR	4169334	IdentifierDecl	check		4169330	0					
ANR	4169335	IdentifierDeclType	int		4169330	0					
ANR	4169336	Identifier	check		4169330	1					
ANR	4169337	ExpressionStatement	"check = data_valid ( f -> data , f -> size , value )"	220:1:6669:6712	4169330	1	True				
ANR	4169338	AssignmentExpression	"check = data_valid ( f -> data , f -> size , value )"		4169330	0		=			
ANR	4169339	Identifier	check		4169330	0					
ANR	4169340	CallExpression	"data_valid ( f -> data , f -> size , value )"		4169330	1					
ANR	4169341	Callee	data_valid		4169330	0					
ANR	4169342	Identifier	data_valid		4169330	0					
ANR	4169343	ArgumentList	f -> data		4169330	1					
ANR	4169344	Argument	f -> data		4169330	0					
ANR	4169345	PtrMemberAccess	f -> data		4169330	0					
ANR	4169346	Identifier	f		4169330	0					
ANR	4169347	Identifier	data		4169330	1					
ANR	4169348	Argument	f -> size		4169330	1					
ANR	4169349	PtrMemberAccess	f -> size		4169330	0					
ANR	4169350	Identifier	f		4169330	0					
ANR	4169351	Identifier	size		4169330	1					
ANR	4169352	Argument	value		4169330	2					
ANR	4169353	Identifier	value		4169330	0					
ANR	4169354	IfStatement	if ( value == 0 )		4169330	2					
ANR	4169355	Condition	value == 0	222:5:6720:6729	4169330	0	True				
ANR	4169356	EqualityExpression	value == 0		4169330	0		==			
ANR	4169357	Identifier	value		4169330	0					
ANR	4169358	PrimaryExpression	0		4169330	1					
ANR	4169359	CompoundStatement		7:1:79:79	4169330	1					
ANR	4169360	IfStatement	if ( check == TRUE )		4169330	0					
ANR	4169361	Condition	check == TRUE	224:6:6741:6753	4169330	0	True				
ANR	4169362	EqualityExpression	check == TRUE		4169330	0		==			
ANR	4169363	Identifier	check		4169330	0					
ANR	4169364	Identifier	TRUE		4169330	1					
ANR	4169365	CompoundStatement		9:2:104:104	4169330	1					
ANR	4169366	ReturnStatement	return TRUE ;	226:3:6763:6774	4169330	0	True				
ANR	4169367	Identifier	TRUE		4169330	0					
ANR	4169368	ReturnStatement	return FALSE ;	228:2:6782:6794	4169330	1	True				
ANR	4169369	Identifier	FALSE		4169330	0					
ANR	4169370	ReturnStatement	"return is_stack_valid ( f -> previous , value - 1 ) ;"	232:1:6838:6883	4169330	3	True				
ANR	4169371	CallExpression	"is_stack_valid ( f -> previous , value - 1 )"		4169330	0					
ANR	4169372	Callee	is_stack_valid		4169330	0					
ANR	4169373	Identifier	is_stack_valid		4169330	0					
ANR	4169374	ArgumentList	f -> previous		4169330	1					
ANR	4169375	Argument	f -> previous		4169330	0					
ANR	4169376	PtrMemberAccess	f -> previous		4169330	0					
ANR	4169377	Identifier	f		4169330	0					
ANR	4169378	Identifier	previous		4169330	1					
ANR	4169379	Argument	value - 1		4169330	1					
ANR	4169380	AdditiveExpression	value - 1		4169330	0		-			
ANR	4169381	Identifier	value		4169330	0					
ANR	4169382	PrimaryExpression	1		4169330	1					
ANR	4169383	ReturnType	int		4169330	1					
ANR	4169384	Identifier	is_stack_valid		4169330	2					
ANR	4169385	ParameterList	"struct Frame * f , int value"		4169330	3					
ANR	4169386	Parameter	struct Frame * f	216:19:6625:6639	4169330	0	True				
ANR	4169387	ParameterType	struct Frame *		4169330	0					
ANR	4169388	Identifier	f		4169330	1					
ANR	4169389	Parameter	int value	216:36:6642:6650	4169330	1	True				
ANR	4169390	ParameterType	int		4169330	0					
ANR	4169391	Identifier	value		4169330	1					
ANR	4169392	CFGEntryNode	ENTRY		4169330		True				
ANR	4169393	CFGExitNode	EXIT		4169330		True				
ANR	4169394	Symbol	* f		4169330						
ANR	4169395	Symbol	f -> size		4169330						
ANR	4169396	Symbol	f		4169330						
ANR	4169397	Symbol	TRUE		4169330						
ANR	4169398	Symbol	is_stack_valid		4169330						
ANR	4169399	Symbol	FALSE		4169330						
ANR	4169400	Symbol	check		4169330						
ANR	4169401	Symbol	f -> previous		4169330						
ANR	4169402	Symbol	data_valid		4169330						
ANR	4169403	Symbol	value		4169330						
ANR	4169404	Symbol	f -> data		4169330						
ANR	4169405	Function	data_valid	237:0:6929:7086							
ANR	4169406	FunctionDef	"data_valid (int * data , int size , int value)"		4169405	0					
ANR	4169407	CompoundStatement		238:0:6976:7086	4169405	0					
ANR	4169408	IdentifierDeclStatement	int i ;	239:1:6979:6984	4169405	0	True				
ANR	4169409	IdentifierDecl	i		4169405	0					
ANR	4169410	IdentifierDeclType	int		4169405	0					
ANR	4169411	Identifier	i		4169405	1					
ANR	4169412	ForStatement	for ( i = 0 ; i < size ; i ++ )		4169405	1					
ANR	4169413	ForInit	i = 0 ;	241:6:6994:6999	4169405	0	True				
ANR	4169414	AssignmentExpression	i = 0		4169405	0		=			
ANR	4169415	Identifier	i		4169405	0					
ANR	4169416	PrimaryExpression	0		4169405	1					
ANR	4169417	Condition	i < size	241:13:7001:7008	4169405	1	True				
ANR	4169418	RelationalExpression	i < size		4169405	0		<			
ANR	4169419	Identifier	i		4169405	0					
ANR	4169420	Identifier	size		4169405	1					
ANR	4169421	PostIncDecOperationExpression	i ++	241:23:7011:7013	4169405	2	True				
ANR	4169422	Identifier	i		4169405	0					
ANR	4169423	IncDec	++		4169405	1					
ANR	4169424	CompoundStatement		5:1:40:40	4169405	3					
ANR	4169425	IfStatement	if ( data [ i ] != value )		4169405	0					
ANR	4169426	Condition	data [ i ] != value	243:6:7025:7040	4169405	0	True				
ANR	4169427	EqualityExpression	data [ i ] != value		4169405	0		!=			
ANR	4169428	ArrayIndexing	data [ i ]		4169405	0					
ANR	4169429	Identifier	data		4169405	0					
ANR	4169430	Identifier	i		4169405	1					
ANR	4169431	Identifier	value		4169405	1					
ANR	4169432	CompoundStatement		7:2:68:68	4169405	1					
ANR	4169433	ReturnStatement	return FALSE ;	245:3:7050:7062	4169405	0	True				
ANR	4169434	Identifier	FALSE		4169405	0					
ANR	4169435	ReturnStatement	return TRUE ;	249:1:7073:7084	4169405	2	True				
ANR	4169436	Identifier	TRUE		4169405	0					
ANR	4169437	ReturnType	int		4169405	1					
ANR	4169438	Identifier	data_valid		4169405	2					
ANR	4169439	ParameterList	"int * data , int size , int value"		4169405	3					
ANR	4169440	Parameter	int * data	237:15:6944:6952	4169405	0	True				
ANR	4169441	ParameterType	int *		4169405	0					
ANR	4169442	Identifier	data		4169405	1					
ANR	4169443	Parameter	int size	237:26:6955:6962	4169405	1	True				
ANR	4169444	ParameterType	int		4169405	0					
ANR	4169445	Identifier	size		4169405	1					
ANR	4169446	Parameter	int value	237:36:6965:6973	4169405	2	True				
ANR	4169447	ParameterType	int		4169405	0					
ANR	4169448	Identifier	value		4169405	1					
ANR	4169449	CFGEntryNode	ENTRY		4169405		True				
ANR	4169450	CFGExitNode	EXIT		4169405		True				
ANR	4169451	Symbol	* i		4169405						
ANR	4169452	Symbol	data		4169405						
ANR	4169453	Symbol	size		4169405						
ANR	4169454	Symbol	i		4169405						
ANR	4169455	Symbol	TRUE		4169405						
ANR	4169456	Symbol	FALSE		4169405						
ANR	4169457	Symbol	value		4169405						
ANR	4169458	Symbol	* data		4169405						
