command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5619076	File	data/converged/CVE-2011-4930_htcondor/xferstat2.cpp								
ANR	5619077	Function	TransferState :: TransferState	78:0:4385:4454							
ANR	5619078	FunctionDef	TransferState :: TransferState ()		5619077	0					
ANR	5619079	CompoundStatement		79:0:4416:4454	5619077	0					
ANR	5619080	ExpressionStatement	head = NULL	80:2:4420:4431	5619077	0	True				
ANR	5619081	AssignmentExpression	head = NULL		5619077	0		=			
ANR	5619082	Identifier	head		5619077	0					
ANR	5619083	Identifier	NULL		5619077	1					
ANR	5619084	ExpressionStatement	num_transfers = 0	81:2:4435:4452	5619077	1	True				
ANR	5619085	AssignmentExpression	num_transfers = 0		5619077	0		=			
ANR	5619086	Identifier	num_transfers		5619077	0					
ANR	5619087	PrimaryExpression	0		5619077	1					
ANR	5619088	Identifier	TransferState :: TransferState		5619077	1					
ANR	5619089	ParameterList			5619077	2					
ANR	5619090	CFGEntryNode	ENTRY		5619077		True				
ANR	5619091	CFGExitNode	EXIT		5619077		True				
ANR	5619092	Symbol	head		5619077						
ANR	5619093	Symbol	NULL		5619077						
ANR	5619094	Symbol	num_transfers		5619077						
ANR	5619095	Function	TransferState :: ~TransferState	110:0:6142:6192							
ANR	5619096	FunctionDef	TransferState :: ~TransferState ()		5619095	0					
ANR	5619097	CompoundStatement		111:0:6174:6192	5619095	0					
ANR	5619098	ExpressionStatement	DestroyList ( )	112:1:6177:6190	5619095	0	True				
ANR	5619099	CallExpression	DestroyList ( )		5619095	0					
ANR	5619100	Callee	DestroyList		5619095	0					
ANR	5619101	Identifier	DestroyList		5619095	0					
ANR	5619102	ArgumentList			5619095	1					
ANR	5619103	Identifier	TransferState :: ~TransferState		5619095	1					
ANR	5619104	ParameterList			5619095	2					
ANR	5619105	CFGEntryNode	ENTRY		5619095		True				
ANR	5619106	CFGExitNode	EXIT		5619095		True				
ANR	5619107	Function	TransferState :: Find	152:0:8760:8935							
ANR	5619108	FunctionDef	TransferState :: Find (int child_pid)		5619107	0					
ANR	5619109	CompoundStatement		153:0:8809:8935	5619107	0					
ANR	5619110	IdentifierDeclStatement	transferinfo * ptr ;	154:1:8813:8830	5619107	0	True				
ANR	5619111	IdentifierDecl	* ptr		5619107	0					
ANR	5619112	IdentifierDeclType	transferinfo *		5619107	0					
ANR	5619113	Identifier	ptr		5619107	1					
ANR	5619114	ExpressionStatement	ptr = head	156:1:8835:8845	5619107	1	True				
ANR	5619115	AssignmentExpression	ptr = head		5619107	0		=			
ANR	5619116	Identifier	ptr		5619107	0					
ANR	5619117	Identifier	head		5619107	1					
ANR	5619118	WhileStatement	while ( ( ptr != NULL ) && ( ptr -> child_pid != child_pid ) )		5619107	2					
ANR	5619119	Condition	( ptr != NULL ) && ( ptr -> child_pid != child_pid )	157:8:8855:8900	5619107	0	True				
ANR	5619120	AndExpression	( ptr != NULL ) && ( ptr -> child_pid != child_pid )		5619107	0		&&			
ANR	5619121	EqualityExpression	ptr != NULL		5619107	0		!=			
ANR	5619122	Identifier	ptr		5619107	0					
ANR	5619123	Identifier	NULL		5619107	1					
ANR	5619124	EqualityExpression	ptr -> child_pid != child_pid		5619107	1		!=			
ANR	5619125	PtrMemberAccess	ptr -> child_pid		5619107	0					
ANR	5619126	Identifier	ptr		5619107	0					
ANR	5619127	Identifier	child_pid		5619107	1					
ANR	5619128	Identifier	child_pid		5619107	1					
ANR	5619129	ExpressionStatement	ptr = ptr -> next	158:2:8905:8920	5619107	1	True				
ANR	5619130	AssignmentExpression	ptr = ptr -> next		5619107	0		=			
ANR	5619131	Identifier	ptr		5619107	0					
ANR	5619132	PtrMemberAccess	ptr -> next		5619107	1					
ANR	5619133	Identifier	ptr		5619107	0					
ANR	5619134	Identifier	next		5619107	1					
ANR	5619135	ReturnStatement	return ptr ;	159:1:8923:8933	5619107	3	True				
ANR	5619136	Identifier	ptr		5619107	0					
ANR	5619137	ReturnType	transferinfo *		5619107	1					
ANR	5619138	Identifier	TransferState :: Find		5619107	2					
ANR	5619139	ParameterList	int child_pid		5619107	3					
ANR	5619140	Parameter	int child_pid	152:34:8794:8806	5619107	0	True				
ANR	5619141	ParameterType	int		5619107	0					
ANR	5619142	Identifier	child_pid		5619107	1					
ANR	5619143	CFGEntryNode	ENTRY		5619107		True				
ANR	5619144	CFGExitNode	EXIT		5619107		True				
ANR	5619145	Symbol	child_pid		5619107						
ANR	5619146	Symbol	head		5619107						
ANR	5619147	Symbol	NULL		5619107						
ANR	5619148	Symbol	* ptr		5619107						
ANR	5619149	Symbol	ptr -> child_pid		5619107						
ANR	5619150	Symbol	ptr		5619107						
ANR	5619151	Symbol	ptr -> next		5619107						
ANR	5619152	Function	TransferState :: Find	165:0:8941:9399							
ANR	5619153	FunctionDef	"TransferState :: Find (struct in_addr SM_addr , const char * owner , const char * filename)"		5619152	0					
ANR	5619154	CompoundStatement		168:0:9066:9399	5619152	0					
ANR	5619155	IdentifierDeclStatement	transferinfo * ptr ;	169:1:9069:9086	5619152	0	True				
ANR	5619156	IdentifierDecl	* ptr		5619152	0					
ANR	5619157	IdentifierDeclType	transferinfo *		5619152	0					
ANR	5619158	Identifier	ptr		5619152	1					
ANR	5619159	ExpressionStatement	ptr = head	171:1:9091:9101	5619152	1	True				
ANR	5619160	AssignmentExpression	ptr = head		5619152	0		=			
ANR	5619161	Identifier	ptr		5619152	0					
ANR	5619162	Identifier	head		5619152	1					
ANR	5619163	WhileStatement	"while ( ( ptr != NULL ) && ( memcmp ( ( char * ) & SM_addr , ( char * ) & ptr -> shadow_addr , sizeof ( struct in_addr ) ) || strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH ) || strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH ) ) )"		5619152	2					
ANR	5619164	Condition	"( ptr != NULL ) && ( memcmp ( ( char * ) & SM_addr , ( char * ) & ptr -> shadow_addr , sizeof ( struct in_addr ) ) || strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH ) || strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH ) )"	172:8:9111:9364	5619152	0	True				
ANR	5619165	AndExpression	"( ptr != NULL ) && ( memcmp ( ( char * ) & SM_addr , ( char * ) & ptr -> shadow_addr , sizeof ( struct in_addr ) ) || strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH ) || strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH ) )"		5619152	0		&&			
ANR	5619166	EqualityExpression	ptr != NULL		5619152	0		!=			
ANR	5619167	Identifier	ptr		5619152	0					
ANR	5619168	Identifier	NULL		5619152	1					
ANR	5619169	OrExpression	"memcmp ( ( char * ) & SM_addr , ( char * ) & ptr -> shadow_addr , sizeof ( struct in_addr ) ) || strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH ) || strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH )"		5619152	1		||			
ANR	5619170	CallExpression	"memcmp ( ( char * ) & SM_addr , ( char * ) & ptr -> shadow_addr , sizeof ( struct in_addr ) )"		5619152	0					
ANR	5619171	Callee	memcmp		5619152	0					
ANR	5619172	Identifier	memcmp		5619152	0					
ANR	5619173	ArgumentList	( char * ) & SM_addr		5619152	1					
ANR	5619174	Argument	( char * ) & SM_addr		5619152	0					
ANR	5619175	CastExpression	( char * ) & SM_addr		5619152	0					
ANR	5619176	CastTarget	char *		5619152	0					
ANR	5619177	UnaryOperationExpression	& SM_addr		5619152	1					
ANR	5619178	UnaryOperator	&		5619152	0					
ANR	5619179	Identifier	SM_addr		5619152	1					
ANR	5619180	Argument	( char * ) & ptr -> shadow_addr		5619152	1					
ANR	5619181	CastExpression	( char * ) & ptr -> shadow_addr		5619152	0					
ANR	5619182	CastTarget	char *		5619152	0					
ANR	5619183	UnaryOperationExpression	& ptr -> shadow_addr		5619152	1					
ANR	5619184	UnaryOperator	&		5619152	0					
ANR	5619185	PtrMemberAccess	ptr -> shadow_addr		5619152	1					
ANR	5619186	Identifier	ptr		5619152	0					
ANR	5619187	Identifier	shadow_addr		5619152	1					
ANR	5619188	Argument	sizeof ( struct in_addr )		5619152	2					
ANR	5619189	SizeofExpression	sizeof ( struct in_addr )		5619152	0					
ANR	5619190	Sizeof	sizeof		5619152	0					
ANR	5619191	SizeofOperand	struct in_addr		5619152	1					
ANR	5619192	OrExpression	"strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH ) || strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH )"		5619152	1		||			
ANR	5619193	CallExpression	"strncmp ( owner , ptr -> owner , MAX_NAME_LENGTH )"		5619152	0					
ANR	5619194	Callee	strncmp		5619152	0					
ANR	5619195	Identifier	strncmp		5619152	0					
ANR	5619196	ArgumentList	owner		5619152	1					
ANR	5619197	Argument	owner		5619152	0					
ANR	5619198	Identifier	owner		5619152	0					
ANR	5619199	Argument	ptr -> owner		5619152	1					
ANR	5619200	PtrMemberAccess	ptr -> owner		5619152	0					
ANR	5619201	Identifier	ptr		5619152	0					
ANR	5619202	Identifier	owner		5619152	1					
ANR	5619203	Argument	MAX_NAME_LENGTH		5619152	2					
ANR	5619204	Identifier	MAX_NAME_LENGTH		5619152	0					
ANR	5619205	CallExpression	"strncmp ( filename , ptr -> filename , MAX_CONDOR_FILENAME_LENGTH )"		5619152	1					
ANR	5619206	Callee	strncmp		5619152	0					
ANR	5619207	Identifier	strncmp		5619152	0					
ANR	5619208	ArgumentList	filename		5619152	1					
ANR	5619209	Argument	filename		5619152	0					
ANR	5619210	Identifier	filename		5619152	0					
ANR	5619211	Argument	ptr -> filename		5619152	1					
ANR	5619212	PtrMemberAccess	ptr -> filename		5619152	0					
ANR	5619213	Identifier	ptr		5619152	0					
ANR	5619214	Identifier	filename		5619152	1					
ANR	5619215	Argument	MAX_CONDOR_FILENAME_LENGTH		5619152	2					
ANR	5619216	Identifier	MAX_CONDOR_FILENAME_LENGTH		5619152	0					
ANR	5619217	ExpressionStatement	ptr = ptr -> next	178:2:9369:9384	5619152	1	True				
ANR	5619218	AssignmentExpression	ptr = ptr -> next		5619152	0		=			
ANR	5619219	Identifier	ptr		5619152	0					
ANR	5619220	PtrMemberAccess	ptr -> next		5619152	1					
ANR	5619221	Identifier	ptr		5619152	0					
ANR	5619222	Identifier	next		5619152	1					
ANR	5619223	ReturnStatement	return ptr ;	179:1:9387:9397	5619152	3	True				
ANR	5619224	Identifier	ptr		5619152	0					
ANR	5619225	ReturnType	transferinfo *		5619152	1					
ANR	5619226	Identifier	TransferState :: Find		5619152	2					
ANR	5619227	ParameterList	"struct in_addr SM_addr , const char * owner , const char * filename"		5619152	3					
ANR	5619228	Parameter	struct in_addr SM_addr	165:34:8975:8996	5619152	0	True				
ANR	5619229	ParameterType	struct in_addr		5619152	0					
ANR	5619230	Identifier	SM_addr		5619152	1					
ANR	5619231	Parameter	const char * owner	166:10:9009:9028	5619152	1	True				
ANR	5619232	ParameterType	const char *		5619152	0					
ANR	5619233	Identifier	owner		5619152	1					
ANR	5619234	Parameter	const char * filename	167:10:9041:9063	5619152	2	True				
ANR	5619235	ParameterType	const char *		5619152	0					
ANR	5619236	Identifier	filename		5619152	1					
ANR	5619237	CFGEntryNode	ENTRY		5619152		True				
ANR	5619238	CFGExitNode	EXIT		5619152		True				
ANR	5619239	Symbol	owner		5619152						
ANR	5619240	Symbol	NULL		5619152						
ANR	5619241	Symbol	& ptr -> shadow_addr		5619152						
ANR	5619242	Symbol	SM_addr		5619152						
ANR	5619243	Symbol	MAX_CONDOR_FILENAME_LENGTH		5619152						
ANR	5619244	Symbol	ptr -> filename		5619152						
ANR	5619245	Symbol	MAX_NAME_LENGTH		5619152						
ANR	5619246	Symbol	ptr		5619152						
ANR	5619247	Symbol	head		5619152						
ANR	5619248	Symbol	strncmp		5619152						
ANR	5619249	Symbol	filename		5619152						
ANR	5619250	Symbol	memcmp		5619152						
ANR	5619251	Symbol	ptr -> owner		5619152						
ANR	5619252	Symbol	* ptr		5619152						
ANR	5619253	Symbol	& SM_addr		5619152						
ANR	5619254	Symbol	ptr -> next		5619152						
ANR	5619255	Function	TransferState :: GetKey	185:0:9405:9561							
ANR	5619256	FunctionDef	TransferState :: GetKey (int child_pid)		5619255	0					
ANR	5619257	CompoundStatement		186:0:9446:9561	5619255	0					
ANR	5619258	IdentifierDeclStatement	transferinfo * ptr ;	187:1:9449:9466	5619255	0	True				
ANR	5619259	IdentifierDecl	* ptr		5619255	0					
ANR	5619260	IdentifierDeclType	transferinfo *		5619255	0					
ANR	5619261	Identifier	ptr		5619255	1					
ANR	5619262	ExpressionStatement	ptr = Find ( child_pid )	189:1:9471:9492	5619255	1	True				
ANR	5619263	AssignmentExpression	ptr = Find ( child_pid )		5619255	0		=			
ANR	5619264	Identifier	ptr		5619255	0					
ANR	5619265	CallExpression	Find ( child_pid )		5619255	1					
ANR	5619266	Callee	Find		5619255	0					
ANR	5619267	Identifier	Find		5619255	0					
ANR	5619268	ArgumentList	child_pid		5619255	1					
ANR	5619269	Argument	child_pid		5619255	0					
ANR	5619270	Identifier	child_pid		5619255	0					
ANR	5619271	IfStatement	if ( ptr == NULL )		5619255	2					
ANR	5619272	Condition	ptr == NULL	190:5:9499:9509	5619255	0	True				
ANR	5619273	EqualityExpression	ptr == NULL		5619255	0		==			
ANR	5619274	Identifier	ptr		5619255	0					
ANR	5619275	Identifier	NULL		5619255	1					
ANR	5619276	ReturnStatement	return BAD_CHILD_PID ;	191:2:9514:9534	5619255	1	True				
ANR	5619277	Identifier	BAD_CHILD_PID		5619255	0					
ANR	5619278	ElseStatement	else		5619255	0					
ANR	5619279	ReturnStatement	return ptr -> key ;	193:2:9544:9559	5619255	0	True				
ANR	5619280	PtrMemberAccess	ptr -> key		5619255	0					
ANR	5619281	Identifier	ptr		5619255	0					
ANR	5619282	Identifier	key		5619255	1					
ANR	5619283	ReturnType	int		5619255	1					
ANR	5619284	Identifier	TransferState :: GetKey		5619255	2					
ANR	5619285	ParameterList	int child_pid		5619255	3					
ANR	5619286	Parameter	int child_pid	185:26:9431:9443	5619255	0	True				
ANR	5619287	ParameterType	int		5619255	0					
ANR	5619288	Identifier	child_pid		5619255	1					
ANR	5619289	CFGEntryNode	ENTRY		5619255		True				
ANR	5619290	CFGExitNode	EXIT		5619255		True				
ANR	5619291	Symbol	child_pid		5619255						
ANR	5619292	Symbol	NULL		5619255						
ANR	5619293	Symbol	ptr -> key		5619255						
ANR	5619294	Symbol	Find		5619255						
ANR	5619295	Symbol	* ptr		5619255						
ANR	5619296	Symbol	BAD_CHILD_PID		5619255						
ANR	5619297	Symbol	ptr		5619255						
ANR	5619298	Function	TransferState :: GetKey	199:0:9567:9810							
ANR	5619299	FunctionDef	"TransferState :: GetKey (struct in_addr SM_addr , const char * owner , const char * filename)"		5619298	0					
ANR	5619300	CompoundStatement		202:0:9680:9810	5619298	0					
ANR	5619301	IdentifierDeclStatement	transferinfo * ptr ;	203:1:9683:9700	5619298	0	True				
ANR	5619302	IdentifierDecl	* ptr		5619298	0					
ANR	5619303	IdentifierDeclType	transferinfo *		5619298	0					
ANR	5619304	Identifier	ptr		5619298	1					
ANR	5619305	ExpressionStatement	"ptr = Find ( SM_addr , owner , filename )"	205:1:9705:9741	5619298	1	True				
ANR	5619306	AssignmentExpression	"ptr = Find ( SM_addr , owner , filename )"		5619298	0		=			
ANR	5619307	Identifier	ptr		5619298	0					
ANR	5619308	CallExpression	"Find ( SM_addr , owner , filename )"		5619298	1					
ANR	5619309	Callee	Find		5619298	0					
ANR	5619310	Identifier	Find		5619298	0					
ANR	5619311	ArgumentList	SM_addr		5619298	1					
ANR	5619312	Argument	SM_addr		5619298	0					
ANR	5619313	Identifier	SM_addr		5619298	0					
ANR	5619314	Argument	owner		5619298	1					
ANR	5619315	Identifier	owner		5619298	0					
ANR	5619316	Argument	filename		5619298	2					
ANR	5619317	Identifier	filename		5619298	0					
ANR	5619318	IfStatement	if ( ptr == NULL )		5619298	2					
ANR	5619319	Condition	ptr == NULL	206:5:9748:9758	5619298	0	True				
ANR	5619320	EqualityExpression	ptr == NULL		5619298	0		==			
ANR	5619321	Identifier	ptr		5619298	0					
ANR	5619322	Identifier	NULL		5619298	1					
ANR	5619323	ReturnStatement	return BAD_CHILD_PID ;	207:2:9763:9783	5619298	1	True				
ANR	5619324	Identifier	BAD_CHILD_PID		5619298	0					
ANR	5619325	ElseStatement	else		5619298	0					
ANR	5619326	ReturnStatement	return ptr -> key ;	209:2:9793:9808	5619298	0	True				
ANR	5619327	PtrMemberAccess	ptr -> key		5619298	0					
ANR	5619328	Identifier	ptr		5619298	0					
ANR	5619329	Identifier	key		5619298	1					
ANR	5619330	ReturnType	int		5619298	1					
ANR	5619331	Identifier	TransferState :: GetKey		5619298	2					
ANR	5619332	ParameterList	"struct in_addr SM_addr , const char * owner , const char * filename"		5619298	3					
ANR	5619333	Parameter	struct in_addr SM_addr	199:26:9593:9614	5619298	0	True				
ANR	5619334	ParameterType	struct in_addr		5619298	0					
ANR	5619335	Identifier	SM_addr		5619298	1					
ANR	5619336	Parameter	const char * owner	200:8:9625:9644	5619298	1	True				
ANR	5619337	ParameterType	const char *		5619298	0					
ANR	5619338	Identifier	owner		5619298	1					
ANR	5619339	Parameter	const char * filename	201:8:9655:9677	5619298	2	True				
ANR	5619340	ParameterType	const char *		5619298	0					
ANR	5619341	Identifier	filename		5619298	1					
ANR	5619342	CFGEntryNode	ENTRY		5619298		True				
ANR	5619343	CFGExitNode	EXIT		5619298		True				
ANR	5619344	Symbol	owner		5619298						
ANR	5619345	Symbol	filename		5619298						
ANR	5619346	Symbol	NULL		5619298						
ANR	5619347	Symbol	SM_addr		5619298						
ANR	5619348	Symbol	ptr -> key		5619298						
ANR	5619349	Symbol	Find		5619298						
ANR	5619350	Symbol	* ptr		5619298						
ANR	5619351	Symbol	BAD_CHILD_PID		5619298						
ANR	5619352	Symbol	ptr		5619298						
ANR	5619353	Function	TransferState :: Insert	265:0:13620:14567							
ANR	5619354	FunctionDef	"TransferState :: Insert (int child_pid , int req_id , struct in_addr shadow_addr , const char * filename , const char * owner , int filesize , u_lint key , u_lint priority , xfer_type type)"		5619353	0					
ANR	5619355	CompoundStatement		274:0:13936:14567	5619353	0					
ANR	5619356	IdentifierDeclStatement	transferinfo * t ;	275:1:13939:13954	5619353	0	True				
ANR	5619357	IdentifierDecl	* t		5619353	0					
ANR	5619358	IdentifierDeclType	transferinfo *		5619353	0					
ANR	5619359	Identifier	t		5619353	1					
ANR	5619360	Statement	t	277:1:13959:13959	5619353	1	True				
ANR	5619361	Statement	=	277:3:13961:13961	5619353	2	True				
ANR	5619362	Statement	new	277:5:13963:13965	5619353	3	True				
ANR	5619363	ExpressionStatement	transferinfo	277:9:13967:13979	5619353	4	True				
ANR	5619364	Identifier	transferinfo		5619353	0					
ANR	5619365	IfStatement	if ( t == NULL )		5619353	5					
ANR	5619366	Condition	t == NULL	278:5:13986:13994	5619353	0	True				
ANR	5619367	EqualityExpression	t == NULL		5619353	0		==			
ANR	5619368	Identifier	t		5619353	0					
ANR	5619369	Identifier	NULL		5619353	1					
ANR	5619370	CompoundStatement		5:16:60:60	5619353	1					
ANR	5619371	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot make new fileinfo node\\n"" )"	279:2:14001:14060	5619353	0	True				
ANR	5619372	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot make new fileinfo node\\n"" )"		5619353	0					
ANR	5619373	Callee	dprintf		5619353	0					
ANR	5619374	Identifier	dprintf		5619353	0					
ANR	5619375	ArgumentList	D_ALWAYS		5619353	1					
ANR	5619376	Argument	D_ALWAYS		5619353	0					
ANR	5619377	Identifier	D_ALWAYS		5619353	0					
ANR	5619378	Argument	"""ERROR: cannot make new fileinfo node\\n"""		5619353	1					
ANR	5619379	PrimaryExpression	"""ERROR: cannot make new fileinfo node\\n"""		5619353	0					
ANR	5619380	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	280:2:14064:14088	5619353	1	True				
ANR	5619381	CallExpression	exit ( DYNAMIC_ALLOCATION )		5619353	0					
ANR	5619382	Callee	exit		5619353	0					
ANR	5619383	Identifier	exit		5619353	0					
ANR	5619384	ArgumentList	DYNAMIC_ALLOCATION		5619353	1					
ANR	5619385	Argument	DYNAMIC_ALLOCATION		5619353	0					
ANR	5619386	Identifier	DYNAMIC_ALLOCATION		5619353	0					
ANR	5619387	ExpressionStatement	"memcpy ( ( char * ) & t -> shadow_addr , ( char * ) & shadow_addr , sizeof ( struct in_addr ) )"	282:1:14097:14180	5619353	6	True				
ANR	5619388	CallExpression	"memcpy ( ( char * ) & t -> shadow_addr , ( char * ) & shadow_addr , sizeof ( struct in_addr ) )"		5619353	0					
ANR	5619389	Callee	memcpy		5619353	0					
ANR	5619390	Identifier	memcpy		5619353	0					
ANR	5619391	ArgumentList	( char * ) & t -> shadow_addr		5619353	1					
ANR	5619392	Argument	( char * ) & t -> shadow_addr		5619353	0					
ANR	5619393	CastExpression	( char * ) & t -> shadow_addr		5619353	0					
ANR	5619394	CastTarget	char *		5619353	0					
ANR	5619395	UnaryOperationExpression	& t -> shadow_addr		5619353	1					
ANR	5619396	UnaryOperator	&		5619353	0					
ANR	5619397	PtrMemberAccess	t -> shadow_addr		5619353	1					
ANR	5619398	Identifier	t		5619353	0					
ANR	5619399	Identifier	shadow_addr		5619353	1					
ANR	5619400	Argument	( char * ) & shadow_addr		5619353	1					
ANR	5619401	CastExpression	( char * ) & shadow_addr		5619353	0					
ANR	5619402	CastTarget	char *		5619353	0					
ANR	5619403	UnaryOperationExpression	& shadow_addr		5619353	1					
ANR	5619404	UnaryOperator	&		5619353	0					
ANR	5619405	Identifier	shadow_addr		5619353	1					
ANR	5619406	Argument	sizeof ( struct in_addr )		5619353	2					
ANR	5619407	SizeofExpression	sizeof ( struct in_addr )		5619353	0					
ANR	5619408	Sizeof	sizeof		5619353	0					
ANR	5619409	SizeofOperand	struct in_addr		5619353	1					
ANR	5619410	ExpressionStatement	"strncpy ( t -> filename , filename , MAX_CONDOR_FILENAME_LENGTH )"	284:1:14183:14241	5619353	7	True				
ANR	5619411	CallExpression	"strncpy ( t -> filename , filename , MAX_CONDOR_FILENAME_LENGTH )"		5619353	0					
ANR	5619412	Callee	strncpy		5619353	0					
ANR	5619413	Identifier	strncpy		5619353	0					
ANR	5619414	ArgumentList	t -> filename		5619353	1					
ANR	5619415	Argument	t -> filename		5619353	0					
ANR	5619416	PtrMemberAccess	t -> filename		5619353	0					
ANR	5619417	Identifier	t		5619353	0					
ANR	5619418	Identifier	filename		5619353	1					
ANR	5619419	Argument	filename		5619353	1					
ANR	5619420	Identifier	filename		5619353	0					
ANR	5619421	Argument	MAX_CONDOR_FILENAME_LENGTH		5619353	2					
ANR	5619422	Identifier	MAX_CONDOR_FILENAME_LENGTH		5619353	0					
ANR	5619423	ExpressionStatement	"strncpy ( t -> owner , owner , MAX_NAME_LENGTH )"	285:1:14244:14285	5619353	8	True				
ANR	5619424	CallExpression	"strncpy ( t -> owner , owner , MAX_NAME_LENGTH )"		5619353	0					
ANR	5619425	Callee	strncpy		5619353	0					
ANR	5619426	Identifier	strncpy		5619353	0					
ANR	5619427	ArgumentList	t -> owner		5619353	1					
ANR	5619428	Argument	t -> owner		5619353	0					
ANR	5619429	PtrMemberAccess	t -> owner		5619353	0					
ANR	5619430	Identifier	t		5619353	0					
ANR	5619431	Identifier	owner		5619353	1					
ANR	5619432	Argument	owner		5619353	1					
ANR	5619433	Identifier	owner		5619353	0					
ANR	5619434	Argument	MAX_NAME_LENGTH		5619353	2					
ANR	5619435	Identifier	MAX_NAME_LENGTH		5619353	0					
ANR	5619436	ExpressionStatement	t -> req_id = req_id	286:1:14288:14306	5619353	9	True				
ANR	5619437	AssignmentExpression	t -> req_id = req_id		5619353	0		=			
ANR	5619438	PtrMemberAccess	t -> req_id		5619353	0					
ANR	5619439	Identifier	t		5619353	0					
ANR	5619440	Identifier	req_id		5619353	1					
ANR	5619441	Identifier	req_id		5619353	1					
ANR	5619442	ExpressionStatement	t -> child_pid = child_pid	287:1:14309:14333	5619353	10	True				
ANR	5619443	AssignmentExpression	t -> child_pid = child_pid		5619353	0		=			
ANR	5619444	PtrMemberAccess	t -> child_pid		5619353	0					
ANR	5619445	Identifier	t		5619353	0					
ANR	5619446	Identifier	child_pid		5619353	1					
ANR	5619447	Identifier	child_pid		5619353	1					
ANR	5619448	ExpressionStatement	t -> start_time = time ( NULL )	288:1:14336:14362	5619353	11	True				
ANR	5619449	AssignmentExpression	t -> start_time = time ( NULL )		5619353	0		=			
ANR	5619450	PtrMemberAccess	t -> start_time		5619353	0					
ANR	5619451	Identifier	t		5619353	0					
ANR	5619452	Identifier	start_time		5619353	1					
ANR	5619453	CallExpression	time ( NULL )		5619353	1					
ANR	5619454	Callee	time		5619353	0					
ANR	5619455	Identifier	time		5619353	0					
ANR	5619456	ArgumentList	NULL		5619353	1					
ANR	5619457	Argument	NULL		5619353	0					
ANR	5619458	Identifier	NULL		5619353	0					
ANR	5619459	ExpressionStatement	t -> file_size = filesize	289:1:14365:14388	5619353	12	True				
ANR	5619460	AssignmentExpression	t -> file_size = filesize		5619353	0		=			
ANR	5619461	PtrMemberAccess	t -> file_size		5619353	0					
ANR	5619462	Identifier	t		5619353	0					
ANR	5619463	Identifier	file_size		5619353	1					
ANR	5619464	Identifier	filesize		5619353	1					
ANR	5619465	ExpressionStatement	t -> status = type	290:1:14391:14407	5619353	13	True				
ANR	5619466	AssignmentExpression	t -> status = type		5619353	0		=			
ANR	5619467	PtrMemberAccess	t -> status		5619353	0					
ANR	5619468	Identifier	t		5619353	0					
ANR	5619469	Identifier	status		5619353	1					
ANR	5619470	Identifier	type		5619353	1					
ANR	5619471	ExpressionStatement	t -> priority = priority	291:1:14410:14432	5619353	14	True				
ANR	5619472	AssignmentExpression	t -> priority = priority		5619353	0		=			
ANR	5619473	PtrMemberAccess	t -> priority		5619353	0					
ANR	5619474	Identifier	t		5619353	0					
ANR	5619475	Identifier	priority		5619353	1					
ANR	5619476	Identifier	priority		5619353	1					
ANR	5619477	ExpressionStatement	t -> key = key	292:1:14435:14447	5619353	15	True				
ANR	5619478	AssignmentExpression	t -> key = key		5619353	0		=			
ANR	5619479	PtrMemberAccess	t -> key		5619353	0					
ANR	5619480	Identifier	t		5619353	0					
ANR	5619481	Identifier	key		5619353	1					
ANR	5619482	Identifier	key		5619353	1					
ANR	5619483	ExpressionStatement	t -> override = 0	293:1:14450:14465	5619353	16	True				
ANR	5619484	AssignmentExpression	t -> override = 0		5619353	0		=			
ANR	5619485	PtrMemberAccess	t -> override		5619353	0					
ANR	5619486	Identifier	t		5619353	0					
ANR	5619487	Identifier	override		5619353	1					
ANR	5619488	PrimaryExpression	0		5619353	1					
ANR	5619489	ExpressionStatement	t -> prev = NULL	294:1:14468:14482	5619353	17	True				
ANR	5619490	AssignmentExpression	t -> prev = NULL		5619353	0		=			
ANR	5619491	PtrMemberAccess	t -> prev		5619353	0					
ANR	5619492	Identifier	t		5619353	0					
ANR	5619493	Identifier	prev		5619353	1					
ANR	5619494	Identifier	NULL		5619353	1					
ANR	5619495	ExpressionStatement	t -> next = head	295:1:14485:14499	5619353	18	True				
ANR	5619496	AssignmentExpression	t -> next = head		5619353	0		=			
ANR	5619497	PtrMemberAccess	t -> next		5619353	0					
ANR	5619498	Identifier	t		5619353	0					
ANR	5619499	Identifier	next		5619353	1					
ANR	5619500	Identifier	head		5619353	1					
ANR	5619501	IfStatement	if ( head != NULL )		5619353	19					
ANR	5619502	Condition	head != NULL	296:5:14506:14517	5619353	0	True				
ANR	5619503	EqualityExpression	head != NULL		5619353	0		!=			
ANR	5619504	Identifier	head		5619353	0					
ANR	5619505	Identifier	NULL		5619353	1					
ANR	5619506	ExpressionStatement	head -> prev = t	297:2:14522:14536	5619353	1	True				
ANR	5619507	AssignmentExpression	head -> prev = t		5619353	0		=			
ANR	5619508	PtrMemberAccess	head -> prev		5619353	0					
ANR	5619509	Identifier	head		5619353	0					
ANR	5619510	Identifier	prev		5619353	1					
ANR	5619511	Identifier	t		5619353	1					
ANR	5619512	ExpressionStatement	head = t	298:1:14539:14547	5619353	20	True				
ANR	5619513	AssignmentExpression	head = t		5619353	0		=			
ANR	5619514	Identifier	head		5619353	0					
ANR	5619515	Identifier	t		5619353	1					
ANR	5619516	ExpressionStatement	num_transfers ++	299:1:14550:14565	5619353	21	True				
ANR	5619517	PostIncDecOperationExpression	num_transfers ++		5619353	0					
ANR	5619518	Identifier	num_transfers		5619353	0					
ANR	5619519	IncDec	++		5619353	1					
ANR	5619520	ReturnType	void		5619353	1					
ANR	5619521	Identifier	TransferState :: Insert		5619353	2					
ANR	5619522	ParameterList	"int child_pid , int req_id , struct in_addr shadow_addr , const char * filename , const char * owner , int filesize , u_lint key , u_lint priority , xfer_type type"		5619353	3					
ANR	5619523	Parameter	int child_pid	265:27:13647:13670	5619353	0	True				
ANR	5619524	ParameterType	int		5619353	0					
ANR	5619525	Identifier	child_pid		5619353	1					
ANR	5619526	Parameter	int req_id	266:9:13683:13703	5619353	1	True				
ANR	5619527	ParameterType	int		5619353	0					
ANR	5619528	Identifier	req_id		5619353	1					
ANR	5619529	Parameter	struct in_addr shadow_addr	267:9:13715:13740	5619353	2	True				
ANR	5619530	ParameterType	struct in_addr		5619353	0					
ANR	5619531	Identifier	shadow_addr		5619353	1					
ANR	5619532	Parameter	const char * filename	268:9:13752:13774	5619353	3	True				
ANR	5619533	ParameterType	const char *		5619353	0					
ANR	5619534	Identifier	filename		5619353	1					
ANR	5619535	Parameter	const char * owner	269:9:13787:13806	5619353	4	True				
ANR	5619536	ParameterType	const char *		5619353	0					
ANR	5619537	Identifier	owner		5619353	1					
ANR	5619538	Parameter	int filesize	270:9:13818:13840	5619353	5	True				
ANR	5619539	ParameterType	int		5619353	0					
ANR	5619540	Identifier	filesize		5619353	1					
ANR	5619541	Parameter	u_lint key	271:9:13852:13869	5619353	6	True				
ANR	5619542	ParameterType	u_lint		5619353	0					
ANR	5619543	Identifier	key		5619353	1					
ANR	5619544	Parameter	u_lint priority	272:9:13881:13903	5619353	7	True				
ANR	5619545	ParameterType	u_lint		5619353	0					
ANR	5619546	Identifier	priority		5619353	1					
ANR	5619547	Parameter	xfer_type type	273:9:13915:13933	5619353	8	True				
ANR	5619548	ParameterType	xfer_type		5619353	0					
ANR	5619549	Identifier	type		5619353	1					
ANR	5619550	CFGEntryNode	ENTRY		5619353		True				
ANR	5619551	CFGExitNode	EXIT		5619353		True				
ANR	5619552	Symbol	* head		5619353						
ANR	5619553	Symbol	filesize		5619353						
ANR	5619554	Symbol	type		5619353						
ANR	5619555	Symbol	t -> req_id		5619353						
ANR	5619556	Symbol	t -> key		5619353						
ANR	5619557	Symbol	req_id		5619353						
ANR	5619558	Symbol	head		5619353						
ANR	5619559	Symbol	DYNAMIC_ALLOCATION		5619353						
ANR	5619560	Symbol	head -> prev		5619353						
ANR	5619561	Symbol	t -> file_size		5619353						
ANR	5619562	Symbol	t -> override		5619353						
ANR	5619563	Symbol	& shadow_addr		5619353						
ANR	5619564	Symbol	key		5619353						
ANR	5619565	Symbol	owner		5619353						
ANR	5619566	Symbol	t -> child_pid		5619353						
ANR	5619567	Symbol	t -> status		5619353						
ANR	5619568	Symbol	t -> priority		5619353						
ANR	5619569	Symbol	NULL		5619353						
ANR	5619570	Symbol	D_ALWAYS		5619353						
ANR	5619571	Symbol	MAX_CONDOR_FILENAME_LENGTH		5619353						
ANR	5619572	Symbol	t -> start_time		5619353						
ANR	5619573	Symbol	t -> owner		5619353						
ANR	5619574	Symbol	priority		5619353						
ANR	5619575	Symbol	MAX_NAME_LENGTH		5619353						
ANR	5619576	Symbol	child_pid		5619353						
ANR	5619577	Symbol	shadow_addr		5619353						
ANR	5619578	Symbol	t -> prev		5619353						
ANR	5619579	Symbol	filename		5619353						
ANR	5619580	Symbol	num_transfers		5619353						
ANR	5619581	Symbol	t		5619353						
ANR	5619582	Symbol	t -> next		5619353						
ANR	5619583	Symbol	t -> filename		5619353						
ANR	5619584	Symbol	time		5619353						
ANR	5619585	Symbol	* t		5619353						
ANR	5619586	Symbol	& t -> shadow_addr		5619353						
ANR	5619587	Function	TransferState :: Delete	344:0:17540:18448							
ANR	5619588	FunctionDef	"TransferState :: Delete (int child_pid , bool success_flag , struct in_addr peer , int xfer_size)"		5619587	0					
ANR	5619589	CompoundStatement		346:0:17644:18448	5619587	0					
ANR	5619590	IdentifierDeclStatement	transferinfo * ptr ;	347:1:17647:17664	5619587	0	True				
ANR	5619591	IdentifierDecl	* ptr		5619587	0					
ANR	5619592	IdentifierDeclType	transferinfo *		5619587	0					
ANR	5619593	Identifier	ptr		5619587	1					
ANR	5619594	IdentifierDeclStatement	extern XferSummary xfer_summary ;	348:1:17667:17698	5619587	1	True				
ANR	5619595	IdentifierDecl	xfer_summary		5619587	0					
ANR	5619596	IdentifierDeclType	extern XferSummary		5619587	0					
ANR	5619597	Identifier	xfer_summary		5619587	1					
ANR	5619598	ExpressionStatement	ptr = Find ( child_pid )	350:1:17703:17724	5619587	2	True				
ANR	5619599	AssignmentExpression	ptr = Find ( child_pid )		5619587	0		=			
ANR	5619600	Identifier	ptr		5619587	0					
ANR	5619601	CallExpression	Find ( child_pid )		5619587	1					
ANR	5619602	Callee	Find		5619587	0					
ANR	5619603	Identifier	Find		5619587	0					
ANR	5619604	ArgumentList	child_pid		5619587	1					
ANR	5619605	Argument	child_pid		5619587	0					
ANR	5619606	Identifier	child_pid		5619587	0					
ANR	5619607	IfStatement	if ( ptr == NULL )		5619587	3					
ANR	5619608	Condition	ptr == NULL	351:5:17731:17741	5619587	0	True				
ANR	5619609	EqualityExpression	ptr == NULL		5619587	0		==			
ANR	5619610	Identifier	ptr		5619587	0					
ANR	5619611	Identifier	NULL		5619587	1					
ANR	5619612	CompoundStatement		6:18:99:99	5619587	1					
ANR	5619613	ExpressionStatement	"cout << endl << ""WARNING:"" << endl"	352:2:17748:17782	5619587	0	True				
ANR	5619614	ShiftExpression	"cout << endl << ""WARNING:"" << endl"		5619587	0		<<			
ANR	5619615	Identifier	cout		5619587	0					
ANR	5619616	ShiftExpression	"endl << ""WARNING:"" << endl"		5619587	1		<<			
ANR	5619617	Identifier	endl		5619587	0					
ANR	5619618	ShiftExpression	"""WARNING:"" << endl"		5619587	1		<<			
ANR	5619619	PrimaryExpression	"""WARNING:"""		5619587	0					
ANR	5619620	Identifier	endl		5619587	1					
ANR	5619621	ExpressionStatement	"cout << ""WARNING:"" << endl"	353:2:17786:17812	5619587	1	True				
ANR	5619622	ShiftExpression	"cout << ""WARNING:"" << endl"		5619587	0		<<			
ANR	5619623	Identifier	cout		5619587	0					
ANR	5619624	ShiftExpression	"""WARNING:"" << endl"		5619587	1		<<			
ANR	5619625	PrimaryExpression	"""WARNING:"""		5619587	0					
ANR	5619626	Identifier	endl		5619587	1					
ANR	5619627	ExpressionStatement	"cout << ""WARNING: cannot find child with pid="" << child_pid << endl"	354:2:17816:17883	5619587	2	True				
ANR	5619628	ShiftExpression	"cout << ""WARNING: cannot find child with pid="" << child_pid << endl"		5619587	0		<<			
ANR	5619629	Identifier	cout		5619587	0					
ANR	5619630	ShiftExpression	"""WARNING: cannot find child with pid="" << child_pid << endl"		5619587	1		<<			
ANR	5619631	PrimaryExpression	"""WARNING: cannot find child with pid="""		5619587	0					
ANR	5619632	ShiftExpression	child_pid << endl		5619587	1		<<			
ANR	5619633	Identifier	child_pid		5619587	0					
ANR	5619634	Identifier	endl		5619587	1					
ANR	5619635	ExpressionStatement	"cout << ""WARNING:"" << endl"	355:2:17887:17913	5619587	3	True				
ANR	5619636	ShiftExpression	"cout << ""WARNING:"" << endl"		5619587	0		<<			
ANR	5619637	Identifier	cout		5619587	0					
ANR	5619638	ShiftExpression	"""WARNING:"" << endl"		5619587	1		<<			
ANR	5619639	PrimaryExpression	"""WARNING:"""		5619587	0					
ANR	5619640	Identifier	endl		5619587	1					
ANR	5619641	ExpressionStatement	"cout << ""WARNING:"" << endl << endl"	356:2:17917:17951	5619587	4	True				
ANR	5619642	ShiftExpression	"cout << ""WARNING:"" << endl << endl"		5619587	0		<<			
ANR	5619643	Identifier	cout		5619587	0					
ANR	5619644	ShiftExpression	"""WARNING:"" << endl << endl"		5619587	1		<<			
ANR	5619645	PrimaryExpression	"""WARNING:"""		5619587	0					
ANR	5619646	ShiftExpression	endl << endl		5619587	1		<<			
ANR	5619647	Identifier	endl		5619587	0					
ANR	5619648	Identifier	endl		5619587	1					
ANR	5619649	ReturnStatement	return BAD_CHILD_PID ;	357:2:17955:17975	5619587	5	True				
ANR	5619650	Identifier	BAD_CHILD_PID		5619587	0					
ANR	5619651	ElseStatement	else		5619587	0					
ANR	5619652	CompoundStatement		13:11:343:343	5619587	0					
ANR	5619653	IfStatement	if ( ( ptr -> prev == NULL ) && ( ptr -> next == NULL ) )		5619587	0					
ANR	5619654	Condition	( ptr -> prev == NULL ) && ( ptr -> next == NULL )	359:6:17996:18037	5619587	0	True				
ANR	5619655	AndExpression	( ptr -> prev == NULL ) && ( ptr -> next == NULL )		5619587	0		&&			
ANR	5619656	EqualityExpression	ptr -> prev == NULL		5619587	0		==			
ANR	5619657	PtrMemberAccess	ptr -> prev		5619587	0					
ANR	5619658	Identifier	ptr		5619587	0					
ANR	5619659	Identifier	prev		5619587	1					
ANR	5619660	Identifier	NULL		5619587	1					
ANR	5619661	EqualityExpression	ptr -> next == NULL		5619587	1		==			
ANR	5619662	PtrMemberAccess	ptr -> next		5619587	0					
ANR	5619663	Identifier	ptr		5619587	0					
ANR	5619664	Identifier	next		5619587	1					
ANR	5619665	Identifier	NULL		5619587	1					
ANR	5619666	ExpressionStatement	head = NULL	360:3:18043:18054	5619587	1	True				
ANR	5619667	AssignmentExpression	head = NULL		5619587	0		=			
ANR	5619668	Identifier	head		5619587	0					
ANR	5619669	Identifier	NULL		5619587	1					
ANR	5619670	ElseStatement	else		5619587	0					
ANR	5619671	IfStatement	if ( ptr -> prev == NULL )		5619587	0					
ANR	5619672	Condition	ptr -> prev == NULL	361:11:18067:18083	5619587	0	True				
ANR	5619673	EqualityExpression	ptr -> prev == NULL		5619587	0		==			
ANR	5619674	PtrMemberAccess	ptr -> prev		5619587	0					
ANR	5619675	Identifier	ptr		5619587	0					
ANR	5619676	Identifier	prev		5619587	1					
ANR	5619677	Identifier	NULL		5619587	1					
ANR	5619678	CompoundStatement		16:30:441:441	5619587	1					
ANR	5619679	ExpressionStatement	head = ptr -> next	362:3:18091:18107	5619587	0	True				
ANR	5619680	AssignmentExpression	head = ptr -> next		5619587	0		=			
ANR	5619681	Identifier	head		5619587	0					
ANR	5619682	PtrMemberAccess	ptr -> next		5619587	1					
ANR	5619683	Identifier	ptr		5619587	0					
ANR	5619684	Identifier	next		5619587	1					
ANR	5619685	ExpressionStatement	head -> prev = NULL	363:3:18112:18129	5619587	1	True				
ANR	5619686	AssignmentExpression	head -> prev = NULL		5619587	0		=			
ANR	5619687	PtrMemberAccess	head -> prev		5619587	0					
ANR	5619688	Identifier	head		5619587	0					
ANR	5619689	Identifier	prev		5619587	1					
ANR	5619690	Identifier	NULL		5619587	1					
ANR	5619691	ElseStatement	else		5619587	0					
ANR	5619692	IfStatement	if ( ptr -> next == NULL )		5619587	0					
ANR	5619693	Condition	ptr -> next == NULL	364:13:18144:18160	5619587	0	True				
ANR	5619694	EqualityExpression	ptr -> next == NULL		5619587	0		==			
ANR	5619695	PtrMemberAccess	ptr -> next		5619587	0					
ANR	5619696	Identifier	ptr		5619587	0					
ANR	5619697	Identifier	next		5619587	1					
ANR	5619698	Identifier	NULL		5619587	1					
ANR	5619699	ExpressionStatement	ptr -> prev -> next = NULL	365:3:18166:18188	5619587	1	True				
ANR	5619700	AssignmentExpression	ptr -> prev -> next = NULL		5619587	0		=			
ANR	5619701	PtrMemberAccess	ptr -> prev -> next		5619587	0					
ANR	5619702	PtrMemberAccess	ptr -> prev		5619587	0					
ANR	5619703	Identifier	ptr		5619587	0					
ANR	5619704	Identifier	prev		5619587	1					
ANR	5619705	Identifier	next		5619587	1					
ANR	5619706	Identifier	NULL		5619587	1					
ANR	5619707	ElseStatement	else		5619587	0					
ANR	5619708	CompoundStatement		21:7:552:552	5619587	0					
ANR	5619709	ExpressionStatement	ptr -> prev -> next = ptr -> next	367:3:18202:18229	5619587	0	True				
ANR	5619710	AssignmentExpression	ptr -> prev -> next = ptr -> next		5619587	0		=			
ANR	5619711	PtrMemberAccess	ptr -> prev -> next		5619587	0					
ANR	5619712	PtrMemberAccess	ptr -> prev		5619587	0					
ANR	5619713	Identifier	ptr		5619587	0					
ANR	5619714	Identifier	prev		5619587	1					
ANR	5619715	Identifier	next		5619587	1					
ANR	5619716	PtrMemberAccess	ptr -> next		5619587	1					
ANR	5619717	Identifier	ptr		5619587	0					
ANR	5619718	Identifier	next		5619587	1					
ANR	5619719	ExpressionStatement	ptr -> next -> prev = ptr -> prev	368:3:18234:18261	5619587	1	True				
ANR	5619720	AssignmentExpression	ptr -> next -> prev = ptr -> prev		5619587	0		=			
ANR	5619721	PtrMemberAccess	ptr -> next -> prev		5619587	0					
ANR	5619722	PtrMemberAccess	ptr -> next		5619587	0					
ANR	5619723	Identifier	ptr		5619587	0					
ANR	5619724	Identifier	next		5619587	1					
ANR	5619725	Identifier	prev		5619587	1					
ANR	5619726	PtrMemberAccess	ptr -> prev		5619587	1					
ANR	5619727	Identifier	ptr		5619587	0					
ANR	5619728	Identifier	prev		5619587	1					
ANR	5619729	IfStatement	if ( ptr -> file_size == - 1 )		5619587	1					
ANR	5619730	Condition	ptr -> file_size == - 1	370:6:18273:18292	5619587	0	True				
ANR	5619731	EqualityExpression	ptr -> file_size == - 1		5619587	0		==			
ANR	5619732	PtrMemberAccess	ptr -> file_size		5619587	0					
ANR	5619733	Identifier	ptr		5619587	0					
ANR	5619734	Identifier	file_size		5619587	1					
ANR	5619735	UnaryOperationExpression	- 1		5619587	1					
ANR	5619736	UnaryOperator	-		5619587	0					
ANR	5619737	PrimaryExpression	1		5619587	1					
ANR	5619738	CompoundStatement		25:28:650:650	5619587	1					
ANR	5619739	ExpressionStatement	ptr -> file_size = xfer_size	371:3:18300:18326	5619587	0	True				
ANR	5619740	AssignmentExpression	ptr -> file_size = xfer_size		5619587	0		=			
ANR	5619741	PtrMemberAccess	ptr -> file_size		5619587	0					
ANR	5619742	Identifier	ptr		5619587	0					
ANR	5619743	Identifier	file_size		5619587	1					
ANR	5619744	Identifier	xfer_size		5619587	1					
ANR	5619745	ExpressionStatement	"xfer_summary . Result ( ptr , success_flag , peer , xfer_size )"	373:2:18334:18389	5619587	2	True				
ANR	5619746	CallExpression	"xfer_summary . Result ( ptr , success_flag , peer , xfer_size )"		5619587	0					
ANR	5619747	Callee	xfer_summary . Result		5619587	0					
ANR	5619748	MemberAccess	xfer_summary . Result		5619587	0					
ANR	5619749	Identifier	xfer_summary		5619587	0					
ANR	5619750	Identifier	Result		5619587	1					
ANR	5619751	ArgumentList	ptr		5619587	1					
ANR	5619752	Argument	ptr		5619587	0					
ANR	5619753	Identifier	ptr		5619587	0					
ANR	5619754	Argument	success_flag		5619587	1					
ANR	5619755	Identifier	success_flag		5619587	0					
ANR	5619756	Argument	peer		5619587	2					
ANR	5619757	Identifier	peer		5619587	0					
ANR	5619758	Argument	xfer_size		5619587	3					
ANR	5619759	Identifier	xfer_size		5619587	0					
ANR	5619760	Statement	delete	374:2:18393:18398	5619587	3	True				
ANR	5619761	ExpressionStatement	ptr	374:9:18400:18403	5619587	4	True				
ANR	5619762	Identifier	ptr		5619587	0					
ANR	5619763	ExpressionStatement	num_transfers --	375:2:18407:18422	5619587	5	True				
ANR	5619764	PostIncDecOperationExpression	num_transfers --		5619587	0					
ANR	5619765	Identifier	num_transfers		5619587	0					
ANR	5619766	IncDec	--		5619587	1					
ANR	5619767	ReturnStatement	return CKPT_OK ;	376:2:18426:18440	5619587	6	True				
ANR	5619768	Identifier	CKPT_OK		5619587	0					
ANR	5619769	ReturnType	int		5619587	1					
ANR	5619770	Identifier	TransferState :: Delete		5619587	2					
ANR	5619771	ParameterList	"int child_pid , bool success_flag , struct in_addr peer , int xfer_size"		5619587	3					
ANR	5619772	Parameter	int child_pid	344:26:17566:17578	5619587	0	True				
ANR	5619773	ParameterType	int		5619587	0					
ANR	5619774	Identifier	child_pid		5619587	1					
ANR	5619775	Parameter	bool success_flag	344:41:17581:17597	5619587	1	True				
ANR	5619776	ParameterType	bool		5619587	0					
ANR	5619777	Identifier	success_flag		5619587	1					
ANR	5619778	Parameter	struct in_addr peer	345:8:17608:17626	5619587	2	True				
ANR	5619779	ParameterType	struct in_addr		5619587	0					
ANR	5619780	Identifier	peer		5619587	1					
ANR	5619781	Parameter	int xfer_size	345:29:17629:17641	5619587	3	True				
ANR	5619782	ParameterType	int		5619587	0					
ANR	5619783	Identifier	xfer_size		5619587	1					
ANR	5619784	CFGEntryNode	ENTRY		5619587		True				
ANR	5619785	CFGExitNode	EXIT		5619587		True				
ANR	5619786	Symbol	ptr -> prev		5619587						
ANR	5619787	Symbol	* * ptr		5619587						
ANR	5619788	Symbol	ptr -> next -> prev		5619587						
ANR	5619789	Symbol	NULL		5619587						
ANR	5619790	Symbol	CKPT_OK		5619587						
ANR	5619791	Symbol	* head		5619587						
ANR	5619792	Symbol	xfer_summary		5619587						
ANR	5619793	Symbol	BAD_CHILD_PID		5619587						
ANR	5619794	Symbol	ptr		5619587						
ANR	5619795	Symbol	child_pid		5619587						
ANR	5619796	Symbol	head		5619587						
ANR	5619797	Symbol	num_transfers		5619587						
ANR	5619798	Symbol	success_flag		5619587						
ANR	5619799	Symbol	head -> prev		5619587						
ANR	5619800	Symbol	peer		5619587						
ANR	5619801	Symbol	ptr -> prev -> next		5619587						
ANR	5619802	Symbol	Find		5619587						
ANR	5619803	Symbol	* ptr		5619587						
ANR	5619804	Symbol	* ptr -> next		5619587						
ANR	5619805	Symbol	* ptr -> prev		5619587						
ANR	5619806	Symbol	xfer_size		5619587						
ANR	5619807	Symbol	ptr -> next		5619587						
ANR	5619808	Symbol	ptr -> file_size		5619587						
ANR	5619809	Function	TransferState :: SetOverride	383:0:18454:18595							
ANR	5619810	FunctionDef	TransferState :: SetOverride (int child_pid)		5619809	0					
ANR	5619811	CompoundStatement		384:0:18501:18595	5619809	0					
ANR	5619812	IdentifierDeclStatement	transferinfo * ptr ;	385:1:18504:18521	5619809	0	True				
ANR	5619813	IdentifierDecl	* ptr		5619809	0					
ANR	5619814	IdentifierDeclType	transferinfo *		5619809	0					
ANR	5619815	Identifier	ptr		5619809	1					
ANR	5619816	ExpressionStatement	ptr = Find ( child_pid )	387:1:18526:18547	5619809	1	True				
ANR	5619817	AssignmentExpression	ptr = Find ( child_pid )		5619809	0		=			
ANR	5619818	Identifier	ptr		5619809	0					
ANR	5619819	CallExpression	Find ( child_pid )		5619809	1					
ANR	5619820	Callee	Find		5619809	0					
ANR	5619821	Identifier	Find		5619809	0					
ANR	5619822	ArgumentList	child_pid		5619809	1					
ANR	5619823	Argument	child_pid		5619809	0					
ANR	5619824	Identifier	child_pid		5619809	0					
ANR	5619825	IfStatement	if ( ptr != NULL )		5619809	2					
ANR	5619826	Condition	ptr != NULL	388:5:18554:18564	5619809	0	True				
ANR	5619827	EqualityExpression	ptr != NULL		5619809	0		!=			
ANR	5619828	Identifier	ptr		5619809	0					
ANR	5619829	Identifier	NULL		5619809	1					
ANR	5619830	ExpressionStatement	ptr -> override = OVERRIDE	389:2:18569:18593	5619809	1	True				
ANR	5619831	AssignmentExpression	ptr -> override = OVERRIDE		5619809	0		=			
ANR	5619832	PtrMemberAccess	ptr -> override		5619809	0					
ANR	5619833	Identifier	ptr		5619809	0					
ANR	5619834	Identifier	override		5619809	1					
ANR	5619835	Identifier	OVERRIDE		5619809	1					
ANR	5619836	ReturnType	void		5619809	1					
ANR	5619837	Identifier	TransferState :: SetOverride		5619809	2					
ANR	5619838	ParameterList	int child_pid		5619809	3					
ANR	5619839	Parameter	int child_pid	383:32:18486:18498	5619809	0	True				
ANR	5619840	ParameterType	int		5619809	0					
ANR	5619841	Identifier	child_pid		5619809	1					
ANR	5619842	CFGEntryNode	ENTRY		5619809		True				
ANR	5619843	CFGExitNode	EXIT		5619809		True				
ANR	5619844	Symbol	child_pid		5619809						
ANR	5619845	Symbol	OVERRIDE		5619809						
ANR	5619846	Symbol	NULL		5619809						
ANR	5619847	Symbol	ptr -> override		5619809						
ANR	5619848	Symbol	Find		5619809						
ANR	5619849	Symbol	* ptr		5619809						
ANR	5619850	Symbol	ptr		5619809						
ANR	5619851	Function	TransferState :: SetOverride	394:0:18600:18828							
ANR	5619852	FunctionDef	"TransferState :: SetOverride (struct in_addr SM_addr , const char * owner , const char * filename)"		5619851	0					
ANR	5619853	CompoundStatement		397:0:18719:18828	5619851	0					
ANR	5619854	IdentifierDeclStatement	transferinfo * ptr ;	398:1:18722:18739	5619851	0	True				
ANR	5619855	IdentifierDecl	* ptr		5619851	0					
ANR	5619856	IdentifierDeclType	transferinfo *		5619851	0					
ANR	5619857	Identifier	ptr		5619851	1					
ANR	5619858	ExpressionStatement	"ptr = Find ( SM_addr , owner , filename )"	400:1:18744:18780	5619851	1	True				
ANR	5619859	AssignmentExpression	"ptr = Find ( SM_addr , owner , filename )"		5619851	0		=			
ANR	5619860	Identifier	ptr		5619851	0					
ANR	5619861	CallExpression	"Find ( SM_addr , owner , filename )"		5619851	1					
ANR	5619862	Callee	Find		5619851	0					
ANR	5619863	Identifier	Find		5619851	0					
ANR	5619864	ArgumentList	SM_addr		5619851	1					
ANR	5619865	Argument	SM_addr		5619851	0					
ANR	5619866	Identifier	SM_addr		5619851	0					
ANR	5619867	Argument	owner		5619851	1					
ANR	5619868	Identifier	owner		5619851	0					
ANR	5619869	Argument	filename		5619851	2					
ANR	5619870	Identifier	filename		5619851	0					
ANR	5619871	IfStatement	if ( ptr != NULL )		5619851	2					
ANR	5619872	Condition	ptr != NULL	401:5:18787:18797	5619851	0	True				
ANR	5619873	EqualityExpression	ptr != NULL		5619851	0		!=			
ANR	5619874	Identifier	ptr		5619851	0					
ANR	5619875	Identifier	NULL		5619851	1					
ANR	5619876	ExpressionStatement	ptr -> override = OVERRIDE	402:2:18802:18826	5619851	1	True				
ANR	5619877	AssignmentExpression	ptr -> override = OVERRIDE		5619851	0		=			
ANR	5619878	PtrMemberAccess	ptr -> override		5619851	0					
ANR	5619879	Identifier	ptr		5619851	0					
ANR	5619880	Identifier	override		5619851	1					
ANR	5619881	Identifier	OVERRIDE		5619851	1					
ANR	5619882	ReturnType	void		5619851	1					
ANR	5619883	Identifier	TransferState :: SetOverride		5619851	2					
ANR	5619884	ParameterList	"struct in_addr SM_addr , const char * owner , const char * filename"		5619851	3					
ANR	5619885	Parameter	struct in_addr SM_addr	394:32:18632:18653	5619851	0	True				
ANR	5619886	ParameterType	struct in_addr		5619851	0					
ANR	5619887	Identifier	SM_addr		5619851	1					
ANR	5619888	Parameter	const char * owner	395:8:18664:18683	5619851	1	True				
ANR	5619889	ParameterType	const char *		5619851	0					
ANR	5619890	Identifier	owner		5619851	1					
ANR	5619891	Parameter	const char * filename	396:8:18694:18716	5619851	2	True				
ANR	5619892	ParameterType	const char *		5619851	0					
ANR	5619893	Identifier	filename		5619851	1					
ANR	5619894	CFGEntryNode	ENTRY		5619851		True				
ANR	5619895	CFGExitNode	EXIT		5619851		True				
ANR	5619896	Symbol	owner		5619851						
ANR	5619897	Symbol	OVERRIDE		5619851						
ANR	5619898	Symbol	filename		5619851						
ANR	5619899	Symbol	NULL		5619851						
ANR	5619900	Symbol	SM_addr		5619851						
ANR	5619901	Symbol	ptr -> override		5619851						
ANR	5619902	Symbol	Find		5619851						
ANR	5619903	Symbol	* ptr		5619851						
ANR	5619904	Symbol	ptr		5619851						
ANR	5619905	Function	TransferState :: GetXferType	430:0:20436:20600							
ANR	5619906	FunctionDef	TransferState :: GetXferType (int child_pid)		5619905	0					
ANR	5619907	CompoundStatement		431:0:20482:20600	5619905	0					
ANR	5619908	IdentifierDeclStatement	transferinfo * ptr ;	432:1:20485:20502	5619905	0	True				
ANR	5619909	IdentifierDecl	* ptr		5619905	0					
ANR	5619910	IdentifierDeclType	transferinfo *		5619905	0					
ANR	5619911	Identifier	ptr		5619905	1					
ANR	5619912	ExpressionStatement	ptr = Find ( child_pid )	434:1:20507:20528	5619905	1	True				
ANR	5619913	AssignmentExpression	ptr = Find ( child_pid )		5619905	0		=			
ANR	5619914	Identifier	ptr		5619905	0					
ANR	5619915	CallExpression	Find ( child_pid )		5619905	1					
ANR	5619916	Callee	Find		5619905	0					
ANR	5619917	Identifier	Find		5619905	0					
ANR	5619918	ArgumentList	child_pid		5619905	1					
ANR	5619919	Argument	child_pid		5619905	0					
ANR	5619920	Identifier	child_pid		5619905	0					
ANR	5619921	IfStatement	if ( ptr == NULL )		5619905	2					
ANR	5619922	Condition	ptr == NULL	435:5:20535:20545	5619905	0	True				
ANR	5619923	EqualityExpression	ptr == NULL		5619905	0		==			
ANR	5619924	Identifier	ptr		5619905	0					
ANR	5619925	Identifier	NULL		5619905	1					
ANR	5619926	ReturnStatement	return BAD_CHILD_PID ;	436:2:20550:20570	5619905	1	True				
ANR	5619927	Identifier	BAD_CHILD_PID		5619905	0					
ANR	5619928	ElseStatement	else		5619905	0					
ANR	5619929	ReturnStatement	return ptr -> status ;	438:2:20580:20598	5619905	0	True				
ANR	5619930	PtrMemberAccess	ptr -> status		5619905	0					
ANR	5619931	Identifier	ptr		5619905	0					
ANR	5619932	Identifier	status		5619905	1					
ANR	5619933	ReturnType	int		5619905	1					
ANR	5619934	Identifier	TransferState :: GetXferType		5619905	2					
ANR	5619935	ParameterList	int child_pid		5619905	3					
ANR	5619936	Parameter	int child_pid	430:31:20467:20479	5619905	0	True				
ANR	5619937	ParameterType	int		5619905	0					
ANR	5619938	Identifier	child_pid		5619905	1					
ANR	5619939	CFGEntryNode	ENTRY		5619905		True				
ANR	5619940	CFGExitNode	EXIT		5619905		True				
ANR	5619941	Symbol	child_pid		5619905						
ANR	5619942	Symbol	ptr -> status		5619905						
ANR	5619943	Symbol	NULL		5619905						
ANR	5619944	Symbol	Find		5619905						
ANR	5619945	Symbol	* ptr		5619905						
ANR	5619946	Symbol	BAD_CHILD_PID		5619905						
ANR	5619947	Symbol	ptr		5619905						
ANR	5619948	Function	TransferState :: Reclaim	474:0:22795:23054							
ANR	5619949	FunctionDef	TransferState :: Reclaim (time_t current)		5619948	0					
ANR	5619950	CompoundStatement		475:0:22839:23054	5619948	0					
ANR	5619951	IdentifierDeclStatement	transferinfo * ptr ;	476:1:22842:22859	5619948	0	True				
ANR	5619952	IdentifierDecl	* ptr		5619948	0					
ANR	5619953	IdentifierDeclType	transferinfo *		5619948	0					
ANR	5619954	Identifier	ptr		5619948	1					
ANR	5619955	ExpressionStatement	ptr = head	478:1:22864:22874	5619948	1	True				
ANR	5619956	AssignmentExpression	ptr = head		5619948	0		=			
ANR	5619957	Identifier	ptr		5619948	0					
ANR	5619958	Identifier	head		5619948	1					
ANR	5619959	WhileStatement	while ( ptr != NULL )		5619948	2					
ANR	5619960	Condition	ptr != NULL	479:8:22884:22894	5619948	0	True				
ANR	5619961	EqualityExpression	ptr != NULL		5619948	0		!=			
ANR	5619962	Identifier	ptr		5619948	0					
ANR	5619963	Identifier	NULL		5619948	1					
ANR	5619964	CompoundStatement		5:21:57:57	5619948	1					
ANR	5619965	IfStatement	if ( ptr -> priority != RECLAIM_BYPASS )		5619948	0					
ANR	5619966	Condition	ptr -> priority != RECLAIM_BYPASS	480:6:22905:22935	5619948	0	True				
ANR	5619967	EqualityExpression	ptr -> priority != RECLAIM_BYPASS		5619948	0		!=			
ANR	5619968	PtrMemberAccess	ptr -> priority		5619948	0					
ANR	5619969	Identifier	ptr		5619948	0					
ANR	5619970	Identifier	priority		5619948	1					
ANR	5619971	Identifier	RECLAIM_BYPASS		5619948	1					
ANR	5619972	IfStatement	if ( current - ptr -> start_time > MAX_ALLOWED_XFER_TIME )		5619948	1					
ANR	5619973	Condition	current - ptr -> start_time > MAX_ALLOWED_XFER_TIME	481:7:22945:22991	5619948	0	True				
ANR	5619974	RelationalExpression	current - ptr -> start_time > MAX_ALLOWED_XFER_TIME		5619948	0		>			
ANR	5619975	AdditiveExpression	current - ptr -> start_time		5619948	0		-			
ANR	5619976	Identifier	current		5619948	0					
ANR	5619977	PtrMemberAccess	ptr -> start_time		5619948	1					
ANR	5619978	Identifier	ptr		5619948	0					
ANR	5619979	Identifier	start_time		5619948	1					
ANR	5619980	Identifier	MAX_ALLOWED_XFER_TIME		5619948	1					
ANR	5619981	ExpressionStatement	"kill ( ptr -> child_pid , SIGTERM )"	482:4:22998:23027	5619948	1	True				
ANR	5619982	CallExpression	"kill ( ptr -> child_pid , SIGTERM )"		5619948	0					
ANR	5619983	Callee	kill		5619948	0					
ANR	5619984	Identifier	kill		5619948	0					
ANR	5619985	ArgumentList	ptr -> child_pid		5619948	1					
ANR	5619986	Argument	ptr -> child_pid		5619948	0					
ANR	5619987	PtrMemberAccess	ptr -> child_pid		5619948	0					
ANR	5619988	Identifier	ptr		5619948	0					
ANR	5619989	Identifier	child_pid		5619948	1					
ANR	5619990	Argument	SIGTERM		5619948	1					
ANR	5619991	Identifier	SIGTERM		5619948	0					
ANR	5619992	ExpressionStatement	ptr = ptr -> next	483:2:23031:23046	5619948	1	True				
ANR	5619993	AssignmentExpression	ptr = ptr -> next		5619948	0		=			
ANR	5619994	Identifier	ptr		5619948	0					
ANR	5619995	PtrMemberAccess	ptr -> next		5619948	1					
ANR	5619996	Identifier	ptr		5619948	0					
ANR	5619997	Identifier	next		5619948	1					
ANR	5619998	ReturnType	void		5619948	1					
ANR	5619999	Identifier	TransferState :: Reclaim		5619948	2					
ANR	5620000	ParameterList	time_t current		5619948	3					
ANR	5620001	Parameter	time_t current	474:28:22823:22836	5619948	0	True				
ANR	5620002	ParameterType	time_t		5619948	0					
ANR	5620003	Identifier	current		5619948	1					
ANR	5620004	CFGEntryNode	ENTRY		5619948		True				
ANR	5620005	CFGExitNode	EXIT		5619948		True				
ANR	5620006	Symbol	head		5619948						
ANR	5620007	Symbol	current		5619948						
ANR	5620008	Symbol	NULL		5619948						
ANR	5620009	Symbol	RECLAIM_BYPASS		5619948						
ANR	5620010	Symbol	* ptr		5619948						
ANR	5620011	Symbol	SIGTERM		5619948						
ANR	5620012	Symbol	ptr -> child_pid		5619948						
ANR	5620013	Symbol	ptr		5619948						
ANR	5620014	Symbol	ptr -> priority		5619948						
ANR	5620015	Symbol	MAX_ALLOWED_XFER_TIME		5619948						
ANR	5620016	Symbol	ptr -> start_time		5619948						
ANR	5620017	Symbol	ptr -> next		5619948						
ANR	5620018	Function	TransferState :: DestroyList	516:0:24982:25285							
ANR	5620019	FunctionDef	TransferState :: DestroyList ()		5620018	0					
ANR	5620020	CompoundStatement		517:0:25016:25285	5620018	0					
ANR	5620021	IdentifierDeclStatement	transferinfo * p ;	518:1:25019:25034	5620018	0	True				
ANR	5620022	IdentifierDecl	* p		5620018	0					
ANR	5620023	IdentifierDeclType	transferinfo *		5620018	0					
ANR	5620024	Identifier	p		5620018	1					
ANR	5620025	IdentifierDeclStatement	transferinfo * trail ;	519:1:25037:25056	5620018	1	True				
ANR	5620026	IdentifierDecl	* trail		5620018	0					
ANR	5620027	IdentifierDeclType	transferinfo *		5620018	0					
ANR	5620028	Identifier	trail		5620018	1					
ANR	5620029	ExpressionStatement	p = head	521:1:25061:25069	5620018	2	True				
ANR	5620030	AssignmentExpression	p = head		5620018	0		=			
ANR	5620031	Identifier	p		5620018	0					
ANR	5620032	Identifier	head		5620018	1					
ANR	5620033	ExpressionStatement	head = NULL	522:1:25072:25083	5620018	3	True				
ANR	5620034	AssignmentExpression	head = NULL		5620018	0		=			
ANR	5620035	Identifier	head		5620018	0					
ANR	5620036	Identifier	NULL		5620018	1					
ANR	5620037	WhileStatement	while ( p != NULL )		5620018	4					
ANR	5620038	Condition	p != NULL	523:8:25093:25101	5620018	0	True				
ANR	5620039	EqualityExpression	p != NULL		5620018	0		!=			
ANR	5620040	Identifier	p		5620018	0					
ANR	5620041	Identifier	NULL		5620018	1					
ANR	5620042	CompoundStatement		7:19:87:87	5620018	1					
ANR	5620043	ExpressionStatement	trail = p	524:2:25108:25117	5620018	0	True				
ANR	5620044	AssignmentExpression	trail = p		5620018	0		=			
ANR	5620045	Identifier	trail		5620018	0					
ANR	5620046	Identifier	p		5620018	1					
ANR	5620047	ExpressionStatement	p = p -> next	525:2:25121:25132	5620018	1	True				
ANR	5620048	AssignmentExpression	p = p -> next		5620018	0		=			
ANR	5620049	Identifier	p		5620018	0					
ANR	5620050	PtrMemberAccess	p -> next		5620018	1					
ANR	5620051	Identifier	p		5620018	0					
ANR	5620052	Identifier	next		5620018	1					
ANR	5620053	Statement	delete	526:2:25136:25141	5620018	2	True				
ANR	5620054	ExpressionStatement	trail	526:9:25143:25148	5620018	3	True				
ANR	5620055	Identifier	trail		5620018	0					
ANR	5620056	ExpressionStatement	num_transfers --	527:2:25152:25167	5620018	4	True				
ANR	5620057	PostIncDecOperationExpression	num_transfers --		5620018	0					
ANR	5620058	Identifier	num_transfers		5620018	0					
ANR	5620059	IncDec	--		5620018	1					
ANR	5620060	IfStatement	if ( num_transfers != 0 )		5620018	5					
ANR	5620061	Condition	num_transfers != 0	529:5:25180:25197	5620018	0	True				
ANR	5620062	EqualityExpression	num_transfers != 0		5620018	0		!=			
ANR	5620063	Identifier	num_transfers		5620018	0					
ANR	5620064	PrimaryExpression	0		5620018	1					
ANR	5620065	CompoundStatement		13:25:183:183	5620018	1					
ANR	5620066	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: incorrect count of nodes in transfer list\\n"" )"	530:2:25204:25277	5620018	0	True				
ANR	5620067	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: incorrect count of nodes in transfer list\\n"" )"		5620018	0					
ANR	5620068	Callee	dprintf		5620018	0					
ANR	5620069	Identifier	dprintf		5620018	0					
ANR	5620070	ArgumentList	D_ALWAYS		5620018	1					
ANR	5620071	Argument	D_ALWAYS		5620018	0					
ANR	5620072	Identifier	D_ALWAYS		5620018	0					
ANR	5620073	Argument	"""WARNING: incorrect count of nodes in transfer list\\n"""		5620018	1					
ANR	5620074	PrimaryExpression	"""WARNING: incorrect count of nodes in transfer list\\n"""		5620018	0					
ANR	5620075	ReturnType	void		5620018	1					
ANR	5620076	Identifier	TransferState :: DestroyList		5620018	2					
ANR	5620077	ParameterList			5620018	3					
ANR	5620078	CFGEntryNode	ENTRY		5620018		True				
ANR	5620079	CFGExitNode	EXIT		5620018		True				
ANR	5620080	Symbol	p		5620018						
ANR	5620081	Symbol	head		5620018						
ANR	5620082	Symbol	trail		5620018						
ANR	5620083	Symbol	NULL		5620018						
ANR	5620084	Symbol	p -> next		5620018						
ANR	5620085	Symbol	num_transfers		5620018						
ANR	5620086	Symbol	D_ALWAYS		5620018						
ANR	5620087	Symbol	* p		5620018						
ANR	5620088	Function	TransferState :: Dump	559:0:26893:27700							
ANR	5620089	FunctionDef	TransferState :: Dump ()		5620088	0					
ANR	5620090	CompoundStatement		560:0:26920:27700	5620088	0					
ANR	5620091	IdentifierDeclStatement	transferinfo * p ;	561:1:26923:26938	5620088	0	True				
ANR	5620092	IdentifierDecl	* p		5620088	0					
ANR	5620093	IdentifierDeclType	transferinfo *		5620088	0					
ANR	5620094	Identifier	p		5620088	1					
ANR	5620095	IdentifierDeclStatement	int count = 0 ;	562:1:26941:26962	5620088	1	True				
ANR	5620096	IdentifierDecl	count = 0		5620088	0					
ANR	5620097	IdentifierDeclType	int		5620088	0					
ANR	5620098	Identifier	count		5620088	1					
ANR	5620099	AssignmentExpression	count = 0		5620088	2		=			
ANR	5620100	Identifier	count		5620088	0					
ANR	5620101	PrimaryExpression	0		5620088	1					
ANR	5620102	ExpressionStatement	"cout << ""Transfer List Dump"" << endl"	564:1:26967:27003	5620088	2	True				
ANR	5620103	ShiftExpression	"cout << ""Transfer List Dump"" << endl"		5620088	0		<<			
ANR	5620104	Identifier	cout		5620088	0					
ANR	5620105	ShiftExpression	"""Transfer List Dump"" << endl"		5620088	1		<<			
ANR	5620106	PrimaryExpression	"""Transfer List Dump"""		5620088	0					
ANR	5620107	Identifier	endl		5620088	1					
ANR	5620108	ExpressionStatement	"cout << ""=-=-=-=-=-=-=-=-=-"" << endl"	565:1:27006:27042	5620088	3	True				
ANR	5620109	ShiftExpression	"cout << ""=-=-=-=-=-=-=-=-=-"" << endl"		5620088	0		<<			
ANR	5620110	Identifier	cout		5620088	0					
ANR	5620111	ShiftExpression	"""=-=-=-=-=-=-=-=-=-"" << endl"		5620088	1		<<			
ANR	5620112	PrimaryExpression	"""=-=-=-=-=-=-=-=-=-"""		5620088	0					
ANR	5620113	Identifier	endl		5620088	1					
ANR	5620114	ExpressionStatement	p = head	566:1:27045:27053	5620088	4	True				
ANR	5620115	AssignmentExpression	p = head		5620088	0		=			
ANR	5620116	Identifier	p		5620088	0					
ANR	5620117	Identifier	head		5620088	1					
ANR	5620118	WhileStatement	while ( p != NULL )		5620088	5					
ANR	5620119	Condition	p != NULL	567:8:27063:27071	5620088	0	True				
ANR	5620120	EqualityExpression	p != NULL		5620088	0		!=			
ANR	5620121	Identifier	p		5620088	0					
ANR	5620122	Identifier	NULL		5620088	1					
ANR	5620123	CompoundStatement		8:19:153:153	5620088	1					
ANR	5620124	ExpressionStatement	"cout << ""Node #"" << ( ++ count ) << ':' << endl"	568:2:27078:27122	5620088	0	True				
ANR	5620125	ShiftExpression	"cout << ""Node #"" << ( ++ count ) << ':' << endl"		5620088	0		<<			
ANR	5620126	Identifier	cout		5620088	0					
ANR	5620127	ShiftExpression	"""Node #"" << ( ++ count ) << ':' << endl"		5620088	1		<<			
ANR	5620128	PrimaryExpression	"""Node #"""		5620088	0					
ANR	5620129	ShiftExpression	( ++ count ) << ':' << endl		5620088	1		<<			
ANR	5620130	UnaryExpression	++ count		5620088	0					
ANR	5620131	IncDec	++		5620088	0					
ANR	5620132	Identifier	count		5620088	1					
ANR	5620133	ShiftExpression	':' << endl		5620088	1		<<			
ANR	5620134	PrimaryExpression	':'		5620088	0					
ANR	5620135	Identifier	endl		5620088	1					
ANR	5620136	ExpressionStatement	"cout << ""\\tProcess ID: "" << p -> child_pid << endl"	569:2:27126:27174	5620088	1	True				
ANR	5620137	ShiftExpression	"cout << ""\\tProcess ID: "" << p -> child_pid << endl"		5620088	0		<<			
ANR	5620138	Identifier	cout		5620088	0					
ANR	5620139	ShiftExpression	"""\\tProcess ID: "" << p -> child_pid << endl"		5620088	1		<<			
ANR	5620140	PrimaryExpression	"""\\tProcess ID: """		5620088	0					
ANR	5620141	ShiftExpression	p -> child_pid << endl		5620088	1		<<			
ANR	5620142	PtrMemberAccess	p -> child_pid		5620088	0					
ANR	5620143	Identifier	p		5620088	0					
ANR	5620144	Identifier	child_pid		5620088	1					
ANR	5620145	Identifier	endl		5620088	1					
ANR	5620146	ExpressionStatement	"cout << ""\\tMachine:    "" << inet_ntoa ( p -> shadow_addr ) << endl"	570:2:27178:27239	5620088	2	True				
ANR	5620147	ShiftExpression	"cout << ""\\tMachine:    "" << inet_ntoa ( p -> shadow_addr ) << endl"		5620088	0		<<			
ANR	5620148	Identifier	cout		5620088	0					
ANR	5620149	ShiftExpression	"""\\tMachine:    "" << inet_ntoa ( p -> shadow_addr ) << endl"		5620088	1		<<			
ANR	5620150	PrimaryExpression	"""\\tMachine:    """		5620088	0					
ANR	5620151	ShiftExpression	inet_ntoa ( p -> shadow_addr ) << endl		5620088	1		<<			
ANR	5620152	CallExpression	inet_ntoa ( p -> shadow_addr )		5620088	0					
ANR	5620153	Callee	inet_ntoa		5620088	0					
ANR	5620154	Identifier	inet_ntoa		5620088	0					
ANR	5620155	ArgumentList	p -> shadow_addr		5620088	1					
ANR	5620156	Argument	p -> shadow_addr		5620088	0					
ANR	5620157	PtrMemberAccess	p -> shadow_addr		5620088	0					
ANR	5620158	Identifier	p		5620088	0					
ANR	5620159	Identifier	shadow_addr		5620088	1					
ANR	5620160	Identifier	endl		5620088	1					
ANR	5620161	IfStatement	if ( p -> status != FILE_STATUS )		5620088	3					
ANR	5620162	Condition	p -> status != FILE_STATUS	571:6:27247:27270	5620088	0	True				
ANR	5620163	EqualityExpression	p -> status != FILE_STATUS		5620088	0		!=			
ANR	5620164	PtrMemberAccess	p -> status		5620088	0					
ANR	5620165	Identifier	p		5620088	0					
ANR	5620166	Identifier	status		5620088	1					
ANR	5620167	Identifier	FILE_STATUS		5620088	1					
ANR	5620168	CompoundStatement		12:32:352:352	5620088	1					
ANR	5620169	ExpressionStatement	"cout << ""\\tOwner:      "" << p -> owner << endl"	572:3:27278:27322	5620088	0	True				
ANR	5620170	ShiftExpression	"cout << ""\\tOwner:      "" << p -> owner << endl"		5620088	0		<<			
ANR	5620171	Identifier	cout		5620088	0					
ANR	5620172	ShiftExpression	"""\\tOwner:      "" << p -> owner << endl"		5620088	1		<<			
ANR	5620173	PrimaryExpression	"""\\tOwner:      """		5620088	0					
ANR	5620174	ShiftExpression	p -> owner << endl		5620088	1		<<			
ANR	5620175	PtrMemberAccess	p -> owner		5620088	0					
ANR	5620176	Identifier	p		5620088	0					
ANR	5620177	Identifier	owner		5620088	1					
ANR	5620178	Identifier	endl		5620088	1					
ANR	5620179	ExpressionStatement	"cout << ""\\tFilename:   "" << p -> filename << endl"	573:3:27327:27374	5620088	1	True				
ANR	5620180	ShiftExpression	"cout << ""\\tFilename:   "" << p -> filename << endl"		5620088	0		<<			
ANR	5620181	Identifier	cout		5620088	0					
ANR	5620182	ShiftExpression	"""\\tFilename:   "" << p -> filename << endl"		5620088	1		<<			
ANR	5620183	PrimaryExpression	"""\\tFilename:   """		5620088	0					
ANR	5620184	ShiftExpression	p -> filename << endl		5620088	1		<<			
ANR	5620185	PtrMemberAccess	p -> filename		5620088	0					
ANR	5620186	Identifier	p		5620088	0					
ANR	5620187	Identifier	filename		5620088	1					
ANR	5620188	Identifier	endl		5620088	1					
ANR	5620189	ExpressionStatement	"cout << ""\\tPriority:   "" << p -> priority << endl"	574:3:27379:27426	5620088	2	True				
ANR	5620190	ShiftExpression	"cout << ""\\tPriority:   "" << p -> priority << endl"		5620088	0		<<			
ANR	5620191	Identifier	cout		5620088	0					
ANR	5620192	ShiftExpression	"""\\tPriority:   "" << p -> priority << endl"		5620088	1		<<			
ANR	5620193	PrimaryExpression	"""\\tPriority:   """		5620088	0					
ANR	5620194	ShiftExpression	p -> priority << endl		5620088	1		<<			
ANR	5620195	PtrMemberAccess	p -> priority		5620088	0					
ANR	5620196	Identifier	p		5620088	0					
ANR	5620197	Identifier	priority		5620088	1					
ANR	5620198	Identifier	endl		5620088	1					
ANR	5620199	ExpressionStatement	"cout << ""\\tStart time: "" << p -> start_time << endl << endl"	575:3:27431:27488	5620088	3	True				
ANR	5620200	ShiftExpression	"cout << ""\\tStart time: "" << p -> start_time << endl << endl"		5620088	0		<<			
ANR	5620201	Identifier	cout		5620088	0					
ANR	5620202	ShiftExpression	"""\\tStart time: "" << p -> start_time << endl << endl"		5620088	1		<<			
ANR	5620203	PrimaryExpression	"""\\tStart time: """		5620088	0					
ANR	5620204	ShiftExpression	p -> start_time << endl << endl		5620088	1		<<			
ANR	5620205	PtrMemberAccess	p -> start_time		5620088	0					
ANR	5620206	Identifier	p		5620088	0					
ANR	5620207	Identifier	start_time		5620088	1					
ANR	5620208	ShiftExpression	endl << endl		5620088	1		<<			
ANR	5620209	Identifier	endl		5620088	0					
ANR	5620210	Identifier	endl		5620088	1					
ANR	5620211	ElseStatement	else		5620088	0					
ANR	5620212	ExpressionStatement	"cout << ""\\tTransferring Checkpoint Server Status"" << endl << endl"	578:3:27504:27569	5620088	0	True				
ANR	5620213	ShiftExpression	"cout << ""\\tTransferring Checkpoint Server Status"" << endl << endl"		5620088	0		<<			
ANR	5620214	Identifier	cout		5620088	0					
ANR	5620215	ShiftExpression	"""\\tTransferring Checkpoint Server Status"" << endl << endl"		5620088	1		<<			
ANR	5620216	PrimaryExpression	"""\\tTransferring Checkpoint Server Status"""		5620088	0					
ANR	5620217	ShiftExpression	endl << endl		5620088	1		<<			
ANR	5620218	Identifier	endl		5620088	0					
ANR	5620219	Identifier	endl		5620088	1					
ANR	5620220	ExpressionStatement	p = p -> next	579:2:27573:27584	5620088	4	True				
ANR	5620221	AssignmentExpression	p = p -> next		5620088	0		=			
ANR	5620222	Identifier	p		5620088	0					
ANR	5620223	PtrMemberAccess	p -> next		5620088	1					
ANR	5620224	Identifier	p		5620088	0					
ANR	5620225	Identifier	next		5620088	1					
ANR	5620226	ExpressionStatement	"cout << ""End of Transfer List Dump"" << endl"	581:1:27593:27636	5620088	6	True				
ANR	5620227	ShiftExpression	"cout << ""End of Transfer List Dump"" << endl"		5620088	0		<<			
ANR	5620228	Identifier	cout		5620088	0					
ANR	5620229	ShiftExpression	"""End of Transfer List Dump"" << endl"		5620088	1		<<			
ANR	5620230	PrimaryExpression	"""End of Transfer List Dump"""		5620088	0					
ANR	5620231	Identifier	endl		5620088	1					
ANR	5620232	ExpressionStatement	"cout << ""=-=-=-=-=-=-=-=-=-=-=-=-="" << endl << endl << endl"	582:1:27639:27698	5620088	7	True				
ANR	5620233	ShiftExpression	"cout << ""=-=-=-=-=-=-=-=-=-=-=-=-="" << endl << endl << endl"		5620088	0		<<			
ANR	5620234	Identifier	cout		5620088	0					
ANR	5620235	ShiftExpression	"""=-=-=-=-=-=-=-=-=-=-=-=-="" << endl << endl << endl"		5620088	1		<<			
ANR	5620236	PrimaryExpression	"""=-=-=-=-=-=-=-=-=-=-=-=-="""		5620088	0					
ANR	5620237	ShiftExpression	endl << endl << endl		5620088	1		<<			
ANR	5620238	Identifier	endl		5620088	0					
ANR	5620239	ShiftExpression	endl << endl		5620088	1		<<			
ANR	5620240	Identifier	endl		5620088	0					
ANR	5620241	Identifier	endl		5620088	1					
ANR	5620242	ReturnType	void		5620088	1					
ANR	5620243	Identifier	TransferState :: Dump		5620088	2					
ANR	5620244	ParameterList			5620088	3					
ANR	5620245	CFGEntryNode	ENTRY		5620088		True				
ANR	5620246	CFGExitNode	EXIT		5620088		True				
ANR	5620247	Symbol	p		5620088						
ANR	5620248	Symbol	head		5620088						
ANR	5620249	Symbol	p -> status		5620088						
ANR	5620250	Symbol	NULL		5620088						
ANR	5620251	Symbol	p -> next		5620088						
ANR	5620252	Symbol	count		5620088						
ANR	5620253	Symbol	FILE_STATUS		5620088						
ANR	5620254	Symbol	* p		5620088						
ANR	5620255	Symbol	p -> shadow_addr		5620088						
