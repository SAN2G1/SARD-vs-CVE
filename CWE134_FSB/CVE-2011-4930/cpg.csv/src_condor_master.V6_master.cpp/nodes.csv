command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3516156	File	data/converged/CVE-2011-4930_htcondor/src_condor_master.V6_master.cpp								
ANR	3516157	DeclStmt									
ANR	3516158	Decl							extern int	extern int ( void )	load_master_mgmt
ANR	3516159	DeclStmt									
ANR	3516160	Decl							void	void ( )	gcbBrokerDownCallback
ANR	3516161	DeclStmt									
ANR	3516162	Decl							extern DWORD	extern DWORD ( )	start_as_service
ANR	3516163	DeclStmt									
ANR	3516164	Decl							extern void	extern void ( DWORD )	terminate
ANR	3516165	DeclStmt									
ANR	3516166	Decl							void ( * ) ( )	void ( * ) ( )	SIGNAL_HANDLER
ANR	3516167	DeclStmt									
ANR	3516168	Decl							void	"void ( int , SIGNAL_HANDLER )"	install_sig_handler
ANR	3516169	DeclStmt									
ANR	3516170	Decl							void	void ( )	init_params
ANR	3516171	DeclStmt									
ANR	3516172	Decl							void	void ( )	init_daemon_list
ANR	3516173	DeclStmt									
ANR	3516174	Decl							void	void ( )	init_classad
ANR	3516175	DeclStmt									
ANR	3516176	Decl							void	void ( )	init_firewall_exceptions
ANR	3516177	DeclStmt									
ANR	3516178	Decl							void	void ( )	check_uid_for_privsep
ANR	3516179	DeclStmt									
ANR	3516180	Decl							void	void ( const char * )	lock_or_except
ANR	3516181	DeclStmt									
ANR	3516182	Decl							time_t	time_t ( char * file )	GetTimeStamp
ANR	3516183	DeclStmt									
ANR	3516184	Decl							int	"int ( char * file , time_t * tsp )"	NewExecutable
ANR	3516185	DeclStmt									
ANR	3516186	Decl							void	void ( )	RestartMaster
ANR	3516187	DeclStmt									
ANR	3516188	Decl							void	void ( )	run_preen
ANR	3516189	DeclStmt									
ANR	3516190	Decl							void	void ( const char * )	usage
ANR	3516191	DeclStmt									
ANR	3516192	Decl							void	void ( )	main_shutdown_graceful
ANR	3516193	DeclStmt									
ANR	3516194	Decl							void	void ( )	main_shutdown_fast
ANR	3516195	DeclStmt									
ANR	3516196	Decl							void	void ( )	invalidate_ads
ANR	3516197	DeclStmt									
ANR	3516198	Decl							void	void ( )	main_config
ANR	3516199	DeclStmt									
ANR	3516200	Decl							int	int ( ReliSock * )	agent_starter
ANR	3516201	DeclStmt									
ANR	3516202	Decl							int	int ( ReliSock * )	handle_agent_fetch_log
ANR	3516203	DeclStmt									
ANR	3516204	Decl							int	"int ( Service * , int , Stream * )"	admin_command_handler
ANR	3516205	DeclStmt									
ANR	3516206	Decl							int	"int ( int , Stream * )"	handle_subsys_command
ANR	3516207	DeclStmt									
ANR	3516208	Decl							int	"int ( int cmd , Stream * stream )"	handle_shutdown_program
ANR	3516209	DeclStmt									
ANR	3516210	Decl							void	"void ( void * , int delta )"	time_skip_handler
ANR	3516211	DeclStmt									
ANR	3516212	Decl							void	void ( )	restart_everyone
ANR	3516213	DeclStmt									
ANR	3516214	Decl							int	"int ( int , int , const char * )"	DoCleanup
ANR	3516215	DeclStmt									
ANR	3516216	Decl							ClassAd	ClassAd *	ad
ANR	3516217	DeclStmt									
ANR	3516218	Decl							int	int	MasterLockFD
ANR	3516219	DeclStmt									
ANR	3516220	Decl							int	int	update_interval
ANR	3516221	DeclStmt									
ANR	3516222	Decl							int	int	check_new_exec_interval
ANR	3516223	DeclStmt									
ANR	3516224	Decl							int	int	preen_interval
ANR	3516225	DeclStmt									
ANR	3516226	Decl							int	int	new_bin_delay
ANR	3516227	DeclStmt									
ANR	3516228	Decl							char	char *	MasterName
ANR	3516229	DeclStmt									
ANR	3516230	Decl							char	char *	shutdown_program
ANR	3516231	DeclStmt									
ANR	3516232	Decl							int	int	master_backoff_constant
ANR	3516233	DeclStmt									
ANR	3516234	Decl							int	int	master_backoff_ceiling
ANR	3516235	DeclStmt									
ANR	3516236	Decl							float	float	master_backoff_factor
ANR	3516237	DeclStmt									
ANR	3516238	Decl							int	int	master_recover_time
ANR	3516239	DeclStmt									
ANR	3516240	Decl							char	char *	FS_Preen
ANR	3516241	DeclStmt									
ANR	3516242	Decl							int	int	NT_ServiceFlag
ANR	3516243	DeclStmt									
ANR	3516244	Decl							int	int	shutdown_graceful_timeout
ANR	3516245	DeclStmt									
ANR	3516246	Decl							int	int	shutdown_fast_timeout
ANR	3516247	DeclStmt									
ANR	3516248	Decl							int	int	PublishObituaries
ANR	3516249	DeclStmt									
ANR	3516250	Decl							int	int	Lines
ANR	3516251	DeclStmt									
ANR	3516252	Decl							int	int	AllowAdminCommands
ANR	3516253	DeclStmt									
ANR	3516254	Decl							int	int	StartDaemons
ANR	3516255	DeclStmt									
ANR	3516256	Decl							int	int	GotDaemonsOff
ANR	3516257	DeclStmt									
ANR	3516258	Decl							int	int	MasterShuttingDown
ANR	3516259	DeclStmt									
ANR	3516260	Decl							char	char * [ ]	default_daemon_list
ANR	3516261	DeclStmt									
ANR	3516262	Decl							char	char [ ]	default_dc_daemon_list
ANR	3516263	DeclStmt									
ANR	3516264	Decl							class Daemons	class Daemons	daemons
ANR	3516265	Function	cleanup_memory	151:0:4106:4315							
ANR	3516266	FunctionDef	cleanup_memory ()		3516265	0					
ANR	3516267	CompoundStatement		153:0:4141:4315	3516265	0					
ANR	3516268	IfStatement	if ( ad )		3516265	0					
ANR	3516269	Condition	ad	154:6:4149:4150	3516265	0	True				
ANR	3516270	Identifier	ad		3516265	0					
ANR	3516271	CompoundStatement		2:11:12:12	3516265	1					
ANR	3516272	Statement	delete	155:2:4158:4163	3516265	0	True				
ANR	3516273	ExpressionStatement	ad	155:9:4165:4167	3516265	1	True				
ANR	3516274	Identifier	ad		3516265	0					
ANR	3516275	ExpressionStatement	ad = NULL	156:2:4171:4180	3516265	2	True				
ANR	3516276	AssignmentExpression	ad = NULL		3516265	0		=			
ANR	3516277	Identifier	ad		3516265	0					
ANR	3516278	Identifier	NULL		3516265	1					
ANR	3516279	IfStatement	if ( MasterName )		3516265	1					
ANR	3516280	Condition	MasterName	158:6:4191:4200	3516265	0	True				
ANR	3516281	Identifier	MasterName		3516265	0					
ANR	3516282	CompoundStatement		6:19:62:62	3516265	1					
ANR	3516283	Statement	delete	159:2:4208:4213	3516265	0	True				
ANR	3516284	Statement	[	159:9:4215:4215	3516265	1	True				
ANR	3516285	Statement	]	159:10:4216:4216	3516265	2	True				
ANR	3516286	ExpressionStatement	MasterName	159:12:4218:4228	3516265	3	True				
ANR	3516287	Identifier	MasterName		3516265	0					
ANR	3516288	ExpressionStatement	MasterName = NULL	160:2:4232:4249	3516265	4	True				
ANR	3516289	AssignmentExpression	MasterName = NULL		3516265	0		=			
ANR	3516290	Identifier	MasterName		3516265	0					
ANR	3516291	Identifier	NULL		3516265	1					
ANR	3516292	IfStatement	if ( FS_Preen )		3516265	2					
ANR	3516293	Condition	FS_Preen	162:6:4260:4267	3516265	0	True				
ANR	3516294	Identifier	FS_Preen		3516265	0					
ANR	3516295	CompoundStatement		10:17:129:129	3516265	1					
ANR	3516296	ExpressionStatement	free ( FS_Preen )	163:2:4275:4291	3516265	0	True				
ANR	3516297	CallExpression	free ( FS_Preen )		3516265	0					
ANR	3516298	Callee	free		3516265	0					
ANR	3516299	Identifier	free		3516265	0					
ANR	3516300	ArgumentList	FS_Preen		3516265	1					
ANR	3516301	Argument	FS_Preen		3516265	0					
ANR	3516302	Identifier	FS_Preen		3516265	0					
ANR	3516303	ExpressionStatement	FS_Preen = NULL	164:2:4295:4310	3516265	1	True				
ANR	3516304	AssignmentExpression	FS_Preen = NULL		3516265	0		=			
ANR	3516305	Identifier	FS_Preen		3516265	0					
ANR	3516306	Identifier	NULL		3516265	1					
ANR	3516307	ReturnType	static void		3516265	1					
ANR	3516308	Identifier	cleanup_memory		3516265	2					
ANR	3516309	ParameterList			3516265	3					
ANR	3516310	CFGEntryNode	ENTRY		3516265		True				
ANR	3516311	CFGExitNode	EXIT		3516265		True				
ANR	3516312	Symbol	ad		3516265						
ANR	3516313	Symbol	NULL		3516265						
ANR	3516314	Symbol	FS_Preen		3516265						
ANR	3516315	Symbol	MasterName		3516265						
ANR	3516316	Function	master_exit	169:0:4319:4665							
ANR	3516317	FunctionDef	master_exit (int retval)		3516316	0					
ANR	3516318	CompoundStatement		171:0:4347:4665	3516316	0					
ANR	3516319	ExpressionStatement	cleanup_memory ( )	172:1:4350:4366	3516316	0	True				
ANR	3516320	CallExpression	cleanup_memory ( )		3516316	0					
ANR	3516321	Callee	cleanup_memory		3516316	0					
ANR	3516322	Identifier	cleanup_memory		3516316	0					
ANR	3516323	ArgumentList			3516316	1					
ANR	3516324	IfStatement	if ( NT_ServiceFlag == TRUE )		3516316	1					
ANR	3516325	Condition	NT_ServiceFlag == TRUE	175:6:4388:4409	3516316	0	True				
ANR	3516326	EqualityExpression	NT_ServiceFlag == TRUE		3516316	0		==			
ANR	3516327	Identifier	NT_ServiceFlag		3516316	0					
ANR	3516328	Identifier	TRUE		3516316	1					
ANR	3516329	CompoundStatement		5:31:65:65	3516316	1					
ANR	3516330	ExpressionStatement	terminate ( retval )	176:2:4417:4434	3516316	0	True				
ANR	3516331	CallExpression	terminate ( retval )		3516316	0					
ANR	3516332	Callee	terminate		3516316	0					
ANR	3516333	Identifier	terminate		3516316	0					
ANR	3516334	ArgumentList	retval		3516316	1					
ANR	3516335	Argument	retval		3516316	0					
ANR	3516336	Identifier	retval		3516316	0					
ANR	3516337	ExpressionStatement	MasterPluginManager :: Shutdown ( )	182:1:4545:4576	3516316	2	True				
ANR	3516338	CallExpression	MasterPluginManager :: Shutdown ( )		3516316	0					
ANR	3516339	Callee	MasterPluginManager :: Shutdown		3516316	0					
ANR	3516340	Identifier	MasterPluginManager :: Shutdown		3516316	0					
ANR	3516341	ArgumentList			3516316	1					
ANR	3516342	ExpressionStatement	"DC_Exit ( retval , shutdown_program )"	186:1:4594:4628	3516316	3	True				
ANR	3516343	CallExpression	"DC_Exit ( retval , shutdown_program )"		3516316	0					
ANR	3516344	Callee	DC_Exit		3516316	0					
ANR	3516345	Identifier	DC_Exit		3516316	0					
ANR	3516346	ArgumentList	retval		3516316	1					
ANR	3516347	Argument	retval		3516316	0					
ANR	3516348	Identifier	retval		3516316	0					
ANR	3516349	Argument	shutdown_program		3516316	1					
ANR	3516350	Identifier	shutdown_program		3516316	0					
ANR	3516351	ReturnStatement	return 1 ;	187:1:4631:4639	3516316	4	True				
ANR	3516352	PrimaryExpression	1		3516316	0					
ANR	3516353	ReturnType	int		3516316	1					
ANR	3516354	Identifier	master_exit		3516316	2					
ANR	3516355	ParameterList	int retval		3516316	3					
ANR	3516356	Parameter	int retval	170:12:4335:4344	3516316	0	True				
ANR	3516357	ParameterType	int		3516316	0					
ANR	3516358	Identifier	retval		3516316	1					
ANR	3516359	CFGEntryNode	ENTRY		3516316		True				
ANR	3516360	CFGExitNode	EXIT		3516316		True				
ANR	3516361	Symbol	shutdown_program		3516316						
ANR	3516362	Symbol	NT_ServiceFlag		3516316						
ANR	3516363	Symbol	TRUE		3516316						
ANR	3516364	Symbol	retval		3516316						
ANR	3516365	Function	usage	190:0:4668:4783							
ANR	3516366	FunctionDef	usage (const char * name)		3516365	0					
ANR	3516367	CompoundStatement		192:0:4699:4783	3516365	0					
ANR	3516368	ExpressionStatement	"dprintf ( D_ALWAYS , ""Usage: %s [-f] [-t] [-n name]\\n"" , name )"	193:1:4702:4762	3516365	0	True				
ANR	3516369	CallExpression	"dprintf ( D_ALWAYS , ""Usage: %s [-f] [-t] [-n name]\\n"" , name )"		3516365	0					
ANR	3516370	Callee	dprintf		3516365	0					
ANR	3516371	Identifier	dprintf		3516365	0					
ANR	3516372	ArgumentList	D_ALWAYS		3516365	1					
ANR	3516373	Argument	D_ALWAYS		3516365	0					
ANR	3516374	Identifier	D_ALWAYS		3516365	0					
ANR	3516375	Argument	"""Usage: %s [-f] [-t] [-n name]\\n"""		3516365	1					
ANR	3516376	PrimaryExpression	"""Usage: %s [-f] [-t] [-n name]\\n"""		3516365	0					
ANR	3516377	Argument	name		3516365	2					
ANR	3516378	Identifier	name		3516365	0					
ANR	3516379	ExpressionStatement	master_exit ( 1 )	194:1:4765:4781	3516365	1	True				
ANR	3516380	CallExpression	master_exit ( 1 )		3516365	0					
ANR	3516381	Callee	master_exit		3516365	0					
ANR	3516382	Identifier	master_exit		3516365	0					
ANR	3516383	ArgumentList	1		3516365	1					
ANR	3516384	Argument	1		3516365	0					
ANR	3516385	PrimaryExpression	1		3516365	0					
ANR	3516386	ReturnType	void		3516365	1					
ANR	3516387	Identifier	usage		3516365	2					
ANR	3516388	ParameterList	const char * name		3516365	3					
ANR	3516389	Parameter	const char * name	191:7:4680:4695	3516365	0	True				
ANR	3516390	ParameterType	const char *		3516365	0					
ANR	3516391	Identifier	name		3516365	1					
ANR	3516392	CFGEntryNode	ENTRY		3516365		True				
ANR	3516393	CFGExitNode	EXIT		3516365		True				
ANR	3516394	Symbol	name		3516365						
ANR	3516395	Symbol	D_ALWAYS		3516365						
ANR	3516396	DeclStmt									
ANR	3516397	Decl							int	int	already_excepted
ANR	3516398	Function	main_init	227:0:5685:11089							
ANR	3516399	FunctionDef	"main_init (int argc , char * argv [ ])"		3516398	0					
ANR	3516400	CompoundStatement		229:0:5726:11089	3516398	0					
ANR	3516401	IdentifierDeclStatement	extern int runfor ;	230:4:5732:5749	3516398	0	True				
ANR	3516402	IdentifierDecl	runfor		3516398	0					
ANR	3516403	IdentifierDeclType	extern int		3516398	0					
ANR	3516404	Identifier	runfor		3516398	1					
ANR	3516405	IdentifierDeclStatement	char * * ptr ;	231:1:5752:5762	3516398	1	True				
ANR	3516406	IdentifierDecl	* * ptr		3516398	0					
ANR	3516407	IdentifierDeclType	char * *		3516398	0					
ANR	3516408	Identifier	ptr		3516398	1					
ANR	3516409	IfStatement	if ( argc > 3 )		3516398	2					
ANR	3516410	Condition	argc > 3	233:6:5771:5778	3516398	0	True				
ANR	3516411	RelationalExpression	argc > 3		3516398	0		>			
ANR	3516412	Identifier	argc		3516398	0					
ANR	3516413	PrimaryExpression	3		3516398	1					
ANR	3516414	CompoundStatement		5:17:55:55	3516398	1					
ANR	3516415	ExpressionStatement	usage ( argv [ 0 ] )	234:2:5786:5802	3516398	0	True				
ANR	3516416	CallExpression	usage ( argv [ 0 ] )		3516398	0					
ANR	3516417	Callee	usage		3516398	0					
ANR	3516418	Identifier	usage		3516398	0					
ANR	3516419	ArgumentList	argv [ 0 ]		3516398	1					
ANR	3516420	Argument	argv [ 0 ]		3516398	0					
ANR	3516421	ArrayIndexing	argv [ 0 ]		3516398	0					
ANR	3516422	Identifier	argv		3516398	0					
ANR	3516423	PrimaryExpression	0		3516398	1					
ANR	3516424	IdentifierDeclStatement	int argc_count = 1 ;	237:1:5810:5828	3516398	3	True				
ANR	3516425	IdentifierDecl	argc_count = 1		3516398	0					
ANR	3516426	IdentifierDeclType	int		3516398	0					
ANR	3516427	Identifier	argc_count		3516398	1					
ANR	3516428	AssignmentExpression	argc_count = 1		3516398	2		=			
ANR	3516429	Identifier	argc_count		3516398	0					
ANR	3516430	PrimaryExpression	1		3516398	1					
ANR	3516431	ForStatement	"for ( ptr = argv + 1 , argc_count = 1 ; argc_count < argc && * ptr ; ptr ++ , argc_count ++ )"		3516398	4					
ANR	3516432	ForInit	"ptr = argv + 1 , argc_count = 1 ;"	238:6:5836:5862	3516398	0	True				
ANR	3516433	Expression	"ptr = argv + 1 , argc_count = 1"		3516398	0					
ANR	3516434	AssignmentExpression	ptr = argv + 1		3516398	0		=			
ANR	3516435	Identifier	ptr		3516398	0					
ANR	3516436	AdditiveExpression	argv + 1		3516398	1		+			
ANR	3516437	Identifier	argv		3516398	0					
ANR	3516438	PrimaryExpression	1		3516398	1					
ANR	3516439	AssignmentExpression	argc_count = 1		3516398	1		=			
ANR	3516440	Identifier	argc_count		3516398	0					
ANR	3516441	PrimaryExpression	1		3516398	1					
ANR	3516442	Condition	argc_count < argc && * ptr	238:34:5864:5886	3516398	1	True				
ANR	3516443	AndExpression	argc_count < argc && * ptr		3516398	0		&&			
ANR	3516444	RelationalExpression	argc_count < argc		3516398	0		<			
ANR	3516445	Identifier	argc_count		3516398	0					
ANR	3516446	Identifier	argc		3516398	1					
ANR	3516447	UnaryOperationExpression	* ptr		3516398	1					
ANR	3516448	UnaryOperator	*		3516398	0					
ANR	3516449	Identifier	ptr		3516398	1					
ANR	3516450	Expression	"ptr ++ , argc_count ++"	238:59:5889:5906	3516398	2	True				
ANR	3516451	PostIncDecOperationExpression	ptr ++		3516398	0					
ANR	3516452	Identifier	ptr		3516398	0					
ANR	3516453	IncDec	++		3516398	1					
ANR	3516454	PostIncDecOperationExpression	argc_count ++		3516398	1					
ANR	3516455	Identifier	argc_count		3516398	0					
ANR	3516456	IncDec	++		3516398	1					
ANR	3516457	CompoundStatement		10:79:182:182	3516398	3					
ANR	3516458	IfStatement	if ( ptr [ 0 ] [ 0 ] != '-' )		3516398	0					
ANR	3516459	Condition	ptr [ 0 ] [ 0 ] != '-'	239:6:5917:5932	3516398	0	True				
ANR	3516460	EqualityExpression	ptr [ 0 ] [ 0 ] != '-'		3516398	0		!=			
ANR	3516461	ArrayIndexing	ptr [ 0 ] [ 0 ]		3516398	0					
ANR	3516462	ArrayIndexing	ptr [ 0 ]		3516398	0					
ANR	3516463	Identifier	ptr		3516398	0					
ANR	3516464	PrimaryExpression	0		3516398	1					
ANR	3516465	PrimaryExpression	0		3516398	1					
ANR	3516466	PrimaryExpression	'-'		3516398	1					
ANR	3516467	CompoundStatement		11:25:209:209	3516398	1					
ANR	3516468	ExpressionStatement	usage ( argv [ 0 ] )	240:3:5941:5957	3516398	0	True				
ANR	3516469	CallExpression	usage ( argv [ 0 ] )		3516398	0					
ANR	3516470	Callee	usage		3516398	0					
ANR	3516471	Identifier	usage		3516398	0					
ANR	3516472	ArgumentList	argv [ 0 ]		3516398	1					
ANR	3516473	Argument	argv [ 0 ]		3516398	0					
ANR	3516474	ArrayIndexing	argv [ 0 ]		3516398	0					
ANR	3516475	Identifier	argv		3516398	0					
ANR	3516476	PrimaryExpression	0		3516398	1					
ANR	3516477	SwitchStatement	switch ( ptr [ 0 ] [ 1 ] )		3516398	1					
ANR	3516478	Condition	ptr [ 0 ] [ 1 ]	242:10:5973:5981	3516398	0	True				
ANR	3516479	ArrayIndexing	ptr [ 0 ] [ 1 ]		3516398	0					
ANR	3516480	ArrayIndexing	ptr [ 0 ]		3516398	0					
ANR	3516481	Identifier	ptr		3516398	0					
ANR	3516482	PrimaryExpression	0		3516398	1					
ANR	3516483	PrimaryExpression	1		3516398	1					
ANR	3516484	CompoundStatement		14:22:258:258	3516398	1					
ANR	3516485	Label	case 'n' :	243:2:5989:5997	3516398	0	True				
ANR	3516486	ExpressionStatement	ptr ++	244:3:6002:6007	3516398	1	True				
ANR	3516487	PostIncDecOperationExpression	ptr ++		3516398	0					
ANR	3516488	Identifier	ptr		3516398	0					
ANR	3516489	IncDec	++		3516398	1					
ANR	3516490	IfStatement	if ( ! ( ptr && * ptr ) )		3516398	2					
ANR	3516491	Condition	! ( ptr && * ptr )	245:7:6016:6029	3516398	0	True				
ANR	3516492	UnaryOperationExpression	! ( ptr && * ptr )		3516398	0					
ANR	3516493	UnaryOperator	!		3516398	0					
ANR	3516494	AndExpression	ptr && * ptr		3516398	1		&&			
ANR	3516495	Identifier	ptr		3516398	0					
ANR	3516496	UnaryOperationExpression	* ptr		3516398	1					
ANR	3516497	UnaryOperator	*		3516398	0					
ANR	3516498	Identifier	ptr		3516398	1					
ANR	3516499	CompoundStatement		17:24:306:306	3516398	1					
ANR	3516500	ExpressionStatement	"EXCEPT ( ""-n requires another argument"" )"	246:4:6039:6079	3516398	0	True				
ANR	3516501	CallExpression	"EXCEPT ( ""-n requires another argument"" )"		3516398	0					
ANR	3516502	Callee	EXCEPT		3516398	0					
ANR	3516503	Identifier	EXCEPT		3516398	0					
ANR	3516504	ArgumentList	"""-n requires another argument"""		3516398	1					
ANR	3516505	Argument	"""-n requires another argument"""		3516398	0					
ANR	3516506	PrimaryExpression	"""-n requires another argument"""		3516398	0					
ANR	3516507	ExpressionStatement	MasterName = build_valid_daemon_name ( * ptr )	248:3:6089:6133	3516398	3	True				
ANR	3516508	AssignmentExpression	MasterName = build_valid_daemon_name ( * ptr )		3516398	0		=			
ANR	3516509	Identifier	MasterName		3516398	0					
ANR	3516510	CallExpression	build_valid_daemon_name ( * ptr )		3516398	1					
ANR	3516511	Callee	build_valid_daemon_name		3516398	0					
ANR	3516512	Identifier	build_valid_daemon_name		3516398	0					
ANR	3516513	ArgumentList	* ptr		3516398	1					
ANR	3516514	Argument	* ptr		3516398	0					
ANR	3516515	UnaryOperationExpression	* ptr		3516398	0					
ANR	3516516	UnaryOperator	*		3516398	0					
ANR	3516517	Identifier	ptr		3516398	1					
ANR	3516518	ExpressionStatement	"dprintf ( D_ALWAYS , ""Using name: %s\\n"" , MasterName )"	249:3:6138:6189	3516398	4	True				
ANR	3516519	CallExpression	"dprintf ( D_ALWAYS , ""Using name: %s\\n"" , MasterName )"		3516398	0					
ANR	3516520	Callee	dprintf		3516398	0					
ANR	3516521	Identifier	dprintf		3516398	0					
ANR	3516522	ArgumentList	D_ALWAYS		3516398	1					
ANR	3516523	Argument	D_ALWAYS		3516398	0					
ANR	3516524	Identifier	D_ALWAYS		3516398	0					
ANR	3516525	Argument	"""Using name: %s\\n"""		3516398	1					
ANR	3516526	PrimaryExpression	"""Using name: %s\\n"""		3516398	0					
ANR	3516527	Argument	MasterName		3516398	2					
ANR	3516528	Identifier	MasterName		3516398	0					
ANR	3516529	BreakStatement	break ;	250:3:6194:6199	3516398	5	True				
ANR	3516530	Label	default :	251:2:6203:6210	3516398	6	True				
ANR	3516531	Identifier	default		3516398	0					
ANR	3516532	ExpressionStatement	usage ( argv [ 0 ] )	252:3:6215:6231	3516398	7	True				
ANR	3516533	CallExpression	usage ( argv [ 0 ] )		3516398	0					
ANR	3516534	Callee	usage		3516398	0					
ANR	3516535	Identifier	usage		3516398	0					
ANR	3516536	ArgumentList	argv [ 0 ]		3516398	1					
ANR	3516537	Argument	argv [ 0 ]		3516398	0					
ANR	3516538	ArrayIndexing	argv [ 0 ]		3516398	0					
ANR	3516539	Identifier	argv		3516398	0					
ANR	3516540	PrimaryExpression	0		3516398	1					
ANR	3516541	IfStatement	if ( runfor != 0 )		3516398	5					
ANR	3516542	Condition	runfor != 0	256:8:6249:6259	3516398	0	True				
ANR	3516543	EqualityExpression	runfor != 0		3516398	0		!=			
ANR	3516544	Identifier	runfor		3516398	0					
ANR	3516545	PrimaryExpression	0		3516398	1					
ANR	3516546	CompoundStatement		34:2:841:860	3516398	1					
ANR	3516547	IdentifierDeclStatement	MyString runfor_env ;	262:2:6568:6587	3516398	0	True				
ANR	3516548	IdentifierDecl	runfor_env		3516398	0					
ANR	3516549	IdentifierDeclType	MyString		3516398	0					
ANR	3516550	Identifier	runfor_env		3516398	1					
ANR	3516551	ExpressionStatement	"runfor_env . sprintf ( ""%s=%ld"" , EnvGetName ( ENV_DAEMON_DEATHTIME ) , time ( NULL ) + ( runfor * 60 ) )"	263:2:6591:6690	3516398	1	True				
ANR	3516552	CallExpression	"runfor_env . sprintf ( ""%s=%ld"" , EnvGetName ( ENV_DAEMON_DEATHTIME ) , time ( NULL ) + ( runfor * 60 ) )"		3516398	0					
ANR	3516553	Callee	runfor_env . sprintf		3516398	0					
ANR	3516554	MemberAccess	runfor_env . sprintf		3516398	0					
ANR	3516555	Identifier	runfor_env		3516398	0					
ANR	3516556	Identifier	sprintf		3516398	1					
ANR	3516557	ArgumentList	"""%s=%ld"""		3516398	1					
ANR	3516558	Argument	"""%s=%ld"""		3516398	0					
ANR	3516559	PrimaryExpression	"""%s=%ld"""		3516398	0					
ANR	3516560	Argument	EnvGetName ( ENV_DAEMON_DEATHTIME )		3516398	1					
ANR	3516561	CallExpression	EnvGetName ( ENV_DAEMON_DEATHTIME )		3516398	0					
ANR	3516562	Callee	EnvGetName		3516398	0					
ANR	3516563	Identifier	EnvGetName		3516398	0					
ANR	3516564	ArgumentList	ENV_DAEMON_DEATHTIME		3516398	1					
ANR	3516565	Argument	ENV_DAEMON_DEATHTIME		3516398	0					
ANR	3516566	Identifier	ENV_DAEMON_DEATHTIME		3516398	0					
ANR	3516567	Argument	time ( NULL ) + ( runfor * 60 )		3516398	2					
ANR	3516568	AdditiveExpression	time ( NULL ) + ( runfor * 60 )		3516398	0		+			
ANR	3516569	CallExpression	time ( NULL )		3516398	0					
ANR	3516570	Callee	time		3516398	0					
ANR	3516571	Identifier	time		3516398	0					
ANR	3516572	ArgumentList	NULL		3516398	1					
ANR	3516573	Argument	NULL		3516398	0					
ANR	3516574	Identifier	NULL		3516398	0					
ANR	3516575	MultiplicativeExpression	runfor * 60		3516398	1		*			
ANR	3516576	Identifier	runfor		3516398	0					
ANR	3516577	PrimaryExpression	60		3516398	1					
ANR	3516578	ExpressionStatement	SetEnv ( runfor_env . Value ( ) )	265:2:6694:6720	3516398	2	True				
ANR	3516579	CallExpression	SetEnv ( runfor_env . Value ( ) )		3516398	0					
ANR	3516580	Callee	SetEnv		3516398	0					
ANR	3516581	Identifier	SetEnv		3516398	0					
ANR	3516582	ArgumentList	runfor_env . Value ( )		3516398	1					
ANR	3516583	Argument	runfor_env . Value ( )		3516398	0					
ANR	3516584	CallExpression	runfor_env . Value ( )		3516398	0					
ANR	3516585	Callee	runfor_env . Value		3516398	0					
ANR	3516586	MemberAccess	runfor_env . Value		3516398	0					
ANR	3516587	Identifier	runfor_env		3516398	0					
ANR	3516588	Identifier	Value		3516398	1					
ANR	3516589	ArgumentList			3516398	1					
ANR	3516590	ExpressionStatement	daemons . SetDefaultReaper ( )	268:1:6730:6756	3516398	6	True				
ANR	3516591	CallExpression	daemons . SetDefaultReaper ( )		3516398	0					
ANR	3516592	Callee	daemons . SetDefaultReaper		3516398	0					
ANR	3516593	MemberAccess	daemons . SetDefaultReaper		3516398	0					
ANR	3516594	Identifier	daemons		3516398	0					
ANR	3516595	Identifier	SetDefaultReaper		3516398	1					
ANR	3516596	ArgumentList			3516398	1					
ANR	3516597	ExpressionStatement	init_params ( )	271:1:6808:6821	3516398	7	True				
ANR	3516598	CallExpression	init_params ( )		3516398	0					
ANR	3516599	Callee	init_params		3516398	0					
ANR	3516600	Identifier	init_params		3516398	0					
ANR	3516601	ArgumentList			3516398	1					
ANR	3516602	ExpressionStatement	init_daemon_list ( )	273:1:6888:6906	3516398	8	True				
ANR	3516603	CallExpression	init_daemon_list ( )		3516398	0					
ANR	3516604	Callee	init_daemon_list		3516398	0					
ANR	3516605	Identifier	init_daemon_list		3516398	0					
ANR	3516606	ArgumentList			3516398	1					
ANR	3516607	IfStatement	if ( daemons . SetupControllers ( ) < 0 )		3516398	9					
ANR	3516608	Condition	daemons . SetupControllers ( ) < 0	274:6:6914:6943	3516398	0	True				
ANR	3516609	RelationalExpression	daemons . SetupControllers ( ) < 0		3516398	0		<			
ANR	3516610	CallExpression	daemons . SetupControllers ( )		3516398	0					
ANR	3516611	Callee	daemons . SetupControllers		3516398	0					
ANR	3516612	MemberAccess	daemons . SetupControllers		3516398	0					
ANR	3516613	Identifier	daemons		3516398	0					
ANR	3516614	Identifier	SetupControllers		3516398	1					
ANR	3516615	ArgumentList			3516398	1					
ANR	3516616	PrimaryExpression	0		3516398	1					
ANR	3516617	CompoundStatement		46:39:1220:1220	3516398	1					
ANR	3516618	ExpressionStatement	"EXCEPT ( ""Daemon initialization failed"" )"	275:2:6951:6991	3516398	0	True				
ANR	3516619	CallExpression	"EXCEPT ( ""Daemon initialization failed"" )"		3516398	0					
ANR	3516620	Callee	EXCEPT		3516398	0					
ANR	3516621	Identifier	EXCEPT		3516398	0					
ANR	3516622	ArgumentList	"""Daemon initialization failed"""		3516398	1					
ANR	3516623	Argument	"""Daemon initialization failed"""		3516398	0					
ANR	3516624	PrimaryExpression	"""Daemon initialization failed"""		3516398	0					
ANR	3516625	ExpressionStatement	daemons . InitParams ( )	278:1:7057:7077	3516398	10	True				
ANR	3516626	CallExpression	daemons . InitParams ( )		3516398	0					
ANR	3516627	Callee	daemons . InitParams		3516398	0					
ANR	3516628	MemberAccess	daemons . InitParams		3516398	0					
ANR	3516629	Identifier	daemons		3516398	0					
ANR	3516630	Identifier	InitParams		3516398	1					
ANR	3516631	ArgumentList			3516398	1					
ANR	3516632	ExpressionStatement	init_classad ( )	280:1:7109:7123	3516398	11	True				
ANR	3516633	CallExpression	init_classad ( )		3516398	0					
ANR	3516634	Callee	init_classad		3516398	0					
ANR	3516635	Identifier	init_classad		3516398	0					
ANR	3516636	ArgumentList			3516398	1					
ANR	3516637	ExpressionStatement	daemons . InitMaster ( )	282:1:7192:7212	3516398	12	True				
ANR	3516638	CallExpression	daemons . InitMaster ( )		3516398	0					
ANR	3516639	Callee	daemons . InitMaster		3516398	0					
ANR	3516640	MemberAccess	daemons . InitMaster		3516398	0					
ANR	3516641	Identifier	daemons		3516398	0					
ANR	3516642	Identifier	InitMaster		3516398	1					
ANR	3516643	ArgumentList			3516398	1					
ANR	3516644	ExpressionStatement	check_uid_for_privsep ( )	284:1:7273:7296	3516398	13	True				
ANR	3516645	CallExpression	check_uid_for_privsep ( )		3516398	0					
ANR	3516646	Callee	check_uid_for_privsep		3516398	0					
ANR	3516647	Identifier	check_uid_for_privsep		3516398	0					
ANR	3516648	ArgumentList			3516398	1					
ANR	3516649	ExpressionStatement	init_firewall_exceptions ( )	286:1:7334:7360	3516398	14	True				
ANR	3516650	CallExpression	init_firewall_exceptions ( )		3516398	0					
ANR	3516651	Callee	init_firewall_exceptions		3516398	0					
ANR	3516652	Identifier	init_firewall_exceptions		3516398	0					
ANR	3516653	ArgumentList			3516398	1					
ANR	3516654	ExpressionStatement	MasterPluginManager :: Load ( )	290:1:7443:7470	3516398	15	True				
ANR	3516655	CallExpression	MasterPluginManager :: Load ( )		3516398	0					
ANR	3516656	Callee	MasterPluginManager :: Load		3516398	0					
ANR	3516657	Identifier	MasterPluginManager :: Load		3516398	0					
ANR	3516658	ArgumentList			3516398	1					
ANR	3516659	ExpressionStatement	MasterPluginManager :: Initialize ( )	294:1:7522:7555	3516398	16	True				
ANR	3516660	CallExpression	MasterPluginManager :: Initialize ( )		3516398	0					
ANR	3516661	Callee	MasterPluginManager :: Initialize		3516398	0					
ANR	3516662	Identifier	MasterPluginManager :: Initialize		3516398	0					
ANR	3516663	ArgumentList			3516398	1					
ANR	3516664	ExpressionStatement	"daemonCore -> Register_Command ( RESTART , ""RESTART"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	298:1:7595:7748	3516398	17	True				
ANR	3516665	CallExpression	"daemonCore -> Register_Command ( RESTART , ""RESTART"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516666	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516667	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516668	Identifier	daemonCore		3516398	0					
ANR	3516669	Identifier	Register_Command		3516398	1					
ANR	3516670	ArgumentList	RESTART		3516398	1					
ANR	3516671	Argument	RESTART		3516398	0					
ANR	3516672	Identifier	RESTART		3516398	0					
ANR	3516673	Argument	"""RESTART"""		3516398	1					
ANR	3516674	PrimaryExpression	"""RESTART"""		3516398	0					
ANR	3516675	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516676	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516677	CastTarget	CommandHandler		3516398	0					
ANR	3516678	Identifier	admin_command_handler		3516398	1					
ANR	3516679	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516680	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516681	Argument	0		3516398	4					
ANR	3516682	PrimaryExpression	0		3516398	0					
ANR	3516683	Argument	ADMINISTRATOR		3516398	5					
ANR	3516684	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516685	ExpressionStatement	"daemonCore -> Register_Command ( RESTART_PEACEFUL , ""RESTART_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	301:1:7751:7922	3516398	18	True				
ANR	3516686	CallExpression	"daemonCore -> Register_Command ( RESTART_PEACEFUL , ""RESTART_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516687	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516688	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516689	Identifier	daemonCore		3516398	0					
ANR	3516690	Identifier	Register_Command		3516398	1					
ANR	3516691	ArgumentList	RESTART_PEACEFUL		3516398	1					
ANR	3516692	Argument	RESTART_PEACEFUL		3516398	0					
ANR	3516693	Identifier	RESTART_PEACEFUL		3516398	0					
ANR	3516694	Argument	"""RESTART_PEACEFUL"""		3516398	1					
ANR	3516695	PrimaryExpression	"""RESTART_PEACEFUL"""		3516398	0					
ANR	3516696	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516697	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516698	CastTarget	CommandHandler		3516398	0					
ANR	3516699	Identifier	admin_command_handler		3516398	1					
ANR	3516700	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516701	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516702	Argument	0		3516398	4					
ANR	3516703	PrimaryExpression	0		3516398	0					
ANR	3516704	Argument	ADMINISTRATOR		3516398	5					
ANR	3516705	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516706	ExpressionStatement	"daemonCore -> Register_Command ( DAEMONS_OFF , ""DAEMONS_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	304:1:7925:8086	3516398	19	True				
ANR	3516707	CallExpression	"daemonCore -> Register_Command ( DAEMONS_OFF , ""DAEMONS_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516708	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516709	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516710	Identifier	daemonCore		3516398	0					
ANR	3516711	Identifier	Register_Command		3516398	1					
ANR	3516712	ArgumentList	DAEMONS_OFF		3516398	1					
ANR	3516713	Argument	DAEMONS_OFF		3516398	0					
ANR	3516714	Identifier	DAEMONS_OFF		3516398	0					
ANR	3516715	Argument	"""DAEMONS_OFF"""		3516398	1					
ANR	3516716	PrimaryExpression	"""DAEMONS_OFF"""		3516398	0					
ANR	3516717	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516718	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516719	CastTarget	CommandHandler		3516398	0					
ANR	3516720	Identifier	admin_command_handler		3516398	1					
ANR	3516721	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516722	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516723	Argument	0		3516398	4					
ANR	3516724	PrimaryExpression	0		3516398	0					
ANR	3516725	Argument	ADMINISTRATOR		3516398	5					
ANR	3516726	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516727	ExpressionStatement	"daemonCore -> Register_Command ( DAEMONS_OFF_FAST , ""DAEMONS_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	307:1:8089:8260	3516398	20	True				
ANR	3516728	CallExpression	"daemonCore -> Register_Command ( DAEMONS_OFF_FAST , ""DAEMONS_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516729	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516730	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516731	Identifier	daemonCore		3516398	0					
ANR	3516732	Identifier	Register_Command		3516398	1					
ANR	3516733	ArgumentList	DAEMONS_OFF_FAST		3516398	1					
ANR	3516734	Argument	DAEMONS_OFF_FAST		3516398	0					
ANR	3516735	Identifier	DAEMONS_OFF_FAST		3516398	0					
ANR	3516736	Argument	"""DAEMONS_OFF_FAST"""		3516398	1					
ANR	3516737	PrimaryExpression	"""DAEMONS_OFF_FAST"""		3516398	0					
ANR	3516738	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516739	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516740	CastTarget	CommandHandler		3516398	0					
ANR	3516741	Identifier	admin_command_handler		3516398	1					
ANR	3516742	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516743	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516744	Argument	0		3516398	4					
ANR	3516745	PrimaryExpression	0		3516398	0					
ANR	3516746	Argument	ADMINISTRATOR		3516398	5					
ANR	3516747	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516748	ExpressionStatement	"daemonCore -> Register_Command ( DAEMONS_OFF_PEACEFUL , ""DAEMONS_OFF_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	310:1:8263:8442	3516398	21	True				
ANR	3516749	CallExpression	"daemonCore -> Register_Command ( DAEMONS_OFF_PEACEFUL , ""DAEMONS_OFF_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516750	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516751	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516752	Identifier	daemonCore		3516398	0					
ANR	3516753	Identifier	Register_Command		3516398	1					
ANR	3516754	ArgumentList	DAEMONS_OFF_PEACEFUL		3516398	1					
ANR	3516755	Argument	DAEMONS_OFF_PEACEFUL		3516398	0					
ANR	3516756	Identifier	DAEMONS_OFF_PEACEFUL		3516398	0					
ANR	3516757	Argument	"""DAEMONS_OFF_PEACEFUL"""		3516398	1					
ANR	3516758	PrimaryExpression	"""DAEMONS_OFF_PEACEFUL"""		3516398	0					
ANR	3516759	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516760	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516761	CastTarget	CommandHandler		3516398	0					
ANR	3516762	Identifier	admin_command_handler		3516398	1					
ANR	3516763	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516764	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516765	Argument	0		3516398	4					
ANR	3516766	PrimaryExpression	0		3516398	0					
ANR	3516767	Argument	ADMINISTRATOR		3516398	5					
ANR	3516768	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516769	ExpressionStatement	"daemonCore -> Register_Command ( DAEMONS_ON , ""DAEMONS_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	313:1:8445:8604	3516398	22	True				
ANR	3516770	CallExpression	"daemonCore -> Register_Command ( DAEMONS_ON , ""DAEMONS_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516771	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516772	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516773	Identifier	daemonCore		3516398	0					
ANR	3516774	Identifier	Register_Command		3516398	1					
ANR	3516775	ArgumentList	DAEMONS_ON		3516398	1					
ANR	3516776	Argument	DAEMONS_ON		3516398	0					
ANR	3516777	Identifier	DAEMONS_ON		3516398	0					
ANR	3516778	Argument	"""DAEMONS_ON"""		3516398	1					
ANR	3516779	PrimaryExpression	"""DAEMONS_ON"""		3516398	0					
ANR	3516780	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516781	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516782	CastTarget	CommandHandler		3516398	0					
ANR	3516783	Identifier	admin_command_handler		3516398	1					
ANR	3516784	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516785	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516786	Argument	0		3516398	4					
ANR	3516787	PrimaryExpression	0		3516398	0					
ANR	3516788	Argument	ADMINISTRATOR		3516398	5					
ANR	3516789	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516790	ExpressionStatement	"daemonCore -> Register_Command ( MASTER_OFF , ""MASTER_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	316:1:8607:8766	3516398	23	True				
ANR	3516791	CallExpression	"daemonCore -> Register_Command ( MASTER_OFF , ""MASTER_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516792	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516793	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516794	Identifier	daemonCore		3516398	0					
ANR	3516795	Identifier	Register_Command		3516398	1					
ANR	3516796	ArgumentList	MASTER_OFF		3516398	1					
ANR	3516797	Argument	MASTER_OFF		3516398	0					
ANR	3516798	Identifier	MASTER_OFF		3516398	0					
ANR	3516799	Argument	"""MASTER_OFF"""		3516398	1					
ANR	3516800	PrimaryExpression	"""MASTER_OFF"""		3516398	0					
ANR	3516801	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516802	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516803	CastTarget	CommandHandler		3516398	0					
ANR	3516804	Identifier	admin_command_handler		3516398	1					
ANR	3516805	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516806	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516807	Argument	0		3516398	4					
ANR	3516808	PrimaryExpression	0		3516398	0					
ANR	3516809	Argument	ADMINISTRATOR		3516398	5					
ANR	3516810	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516811	ExpressionStatement	"daemonCore -> Register_Command ( MASTER_OFF_FAST , ""MASTER_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	319:1:8769:8938	3516398	24	True				
ANR	3516812	CallExpression	"daemonCore -> Register_Command ( MASTER_OFF_FAST , ""MASTER_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516813	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516814	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516815	Identifier	daemonCore		3516398	0					
ANR	3516816	Identifier	Register_Command		3516398	1					
ANR	3516817	ArgumentList	MASTER_OFF_FAST		3516398	1					
ANR	3516818	Argument	MASTER_OFF_FAST		3516398	0					
ANR	3516819	Identifier	MASTER_OFF_FAST		3516398	0					
ANR	3516820	Argument	"""MASTER_OFF_FAST"""		3516398	1					
ANR	3516821	PrimaryExpression	"""MASTER_OFF_FAST"""		3516398	0					
ANR	3516822	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516823	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516824	CastTarget	CommandHandler		3516398	0					
ANR	3516825	Identifier	admin_command_handler		3516398	1					
ANR	3516826	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516827	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516828	Argument	0		3516398	4					
ANR	3516829	PrimaryExpression	0		3516398	0					
ANR	3516830	Argument	ADMINISTRATOR		3516398	5					
ANR	3516831	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516832	ExpressionStatement	"daemonCore -> Register_Command ( DAEMON_ON , ""DAEMON_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	322:1:8941:9098	3516398	25	True				
ANR	3516833	CallExpression	"daemonCore -> Register_Command ( DAEMON_ON , ""DAEMON_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516834	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516835	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516836	Identifier	daemonCore		3516398	0					
ANR	3516837	Identifier	Register_Command		3516398	1					
ANR	3516838	ArgumentList	DAEMON_ON		3516398	1					
ANR	3516839	Argument	DAEMON_ON		3516398	0					
ANR	3516840	Identifier	DAEMON_ON		3516398	0					
ANR	3516841	Argument	"""DAEMON_ON"""		3516398	1					
ANR	3516842	PrimaryExpression	"""DAEMON_ON"""		3516398	0					
ANR	3516843	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516844	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516845	CastTarget	CommandHandler		3516398	0					
ANR	3516846	Identifier	admin_command_handler		3516398	1					
ANR	3516847	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516848	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516849	Argument	0		3516398	4					
ANR	3516850	PrimaryExpression	0		3516398	0					
ANR	3516851	Argument	ADMINISTRATOR		3516398	5					
ANR	3516852	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516853	ExpressionStatement	"daemonCore -> Register_Command ( DAEMON_OFF , ""DAEMON_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	325:1:9101:9260	3516398	26	True				
ANR	3516854	CallExpression	"daemonCore -> Register_Command ( DAEMON_OFF , ""DAEMON_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516855	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516856	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516857	Identifier	daemonCore		3516398	0					
ANR	3516858	Identifier	Register_Command		3516398	1					
ANR	3516859	ArgumentList	DAEMON_OFF		3516398	1					
ANR	3516860	Argument	DAEMON_OFF		3516398	0					
ANR	3516861	Identifier	DAEMON_OFF		3516398	0					
ANR	3516862	Argument	"""DAEMON_OFF"""		3516398	1					
ANR	3516863	PrimaryExpression	"""DAEMON_OFF"""		3516398	0					
ANR	3516864	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516865	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516866	CastTarget	CommandHandler		3516398	0					
ANR	3516867	Identifier	admin_command_handler		3516398	1					
ANR	3516868	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516869	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516870	Argument	0		3516398	4					
ANR	3516871	PrimaryExpression	0		3516398	0					
ANR	3516872	Argument	ADMINISTRATOR		3516398	5					
ANR	3516873	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516874	ExpressionStatement	"daemonCore -> Register_Command ( DAEMON_OFF_FAST , ""DAEMON_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	328:1:9263:9432	3516398	27	True				
ANR	3516875	CallExpression	"daemonCore -> Register_Command ( DAEMON_OFF_FAST , ""DAEMON_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516876	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516877	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516878	Identifier	daemonCore		3516398	0					
ANR	3516879	Identifier	Register_Command		3516398	1					
ANR	3516880	ArgumentList	DAEMON_OFF_FAST		3516398	1					
ANR	3516881	Argument	DAEMON_OFF_FAST		3516398	0					
ANR	3516882	Identifier	DAEMON_OFF_FAST		3516398	0					
ANR	3516883	Argument	"""DAEMON_OFF_FAST"""		3516398	1					
ANR	3516884	PrimaryExpression	"""DAEMON_OFF_FAST"""		3516398	0					
ANR	3516885	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516886	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516887	CastTarget	CommandHandler		3516398	0					
ANR	3516888	Identifier	admin_command_handler		3516398	1					
ANR	3516889	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516890	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516891	Argument	0		3516398	4					
ANR	3516892	PrimaryExpression	0		3516398	0					
ANR	3516893	Argument	ADMINISTRATOR		3516398	5					
ANR	3516894	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516895	ExpressionStatement	"daemonCore -> Register_Command ( DAEMON_OFF_PEACEFUL , ""DAEMON_OFF_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	331:1:9435:9612	3516398	28	True				
ANR	3516896	CallExpression	"daemonCore -> Register_Command ( DAEMON_OFF_PEACEFUL , ""DAEMON_OFF_PEACEFUL"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516897	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516898	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516899	Identifier	daemonCore		3516398	0					
ANR	3516900	Identifier	Register_Command		3516398	1					
ANR	3516901	ArgumentList	DAEMON_OFF_PEACEFUL		3516398	1					
ANR	3516902	Argument	DAEMON_OFF_PEACEFUL		3516398	0					
ANR	3516903	Identifier	DAEMON_OFF_PEACEFUL		3516398	0					
ANR	3516904	Argument	"""DAEMON_OFF_PEACEFUL"""		3516398	1					
ANR	3516905	PrimaryExpression	"""DAEMON_OFF_PEACEFUL"""		3516398	0					
ANR	3516906	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516907	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516908	CastTarget	CommandHandler		3516398	0					
ANR	3516909	Identifier	admin_command_handler		3516398	1					
ANR	3516910	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516911	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516912	Argument	0		3516398	4					
ANR	3516913	PrimaryExpression	0		3516398	0					
ANR	3516914	Argument	ADMINISTRATOR		3516398	5					
ANR	3516915	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516916	ExpressionStatement	"daemonCore -> Register_Command ( CHILD_ON , ""CHILD_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	334:1:9615:9770	3516398	29	True				
ANR	3516917	CallExpression	"daemonCore -> Register_Command ( CHILD_ON , ""CHILD_ON"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516918	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516919	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516920	Identifier	daemonCore		3516398	0					
ANR	3516921	Identifier	Register_Command		3516398	1					
ANR	3516922	ArgumentList	CHILD_ON		3516398	1					
ANR	3516923	Argument	CHILD_ON		3516398	0					
ANR	3516924	Identifier	CHILD_ON		3516398	0					
ANR	3516925	Argument	"""CHILD_ON"""		3516398	1					
ANR	3516926	PrimaryExpression	"""CHILD_ON"""		3516398	0					
ANR	3516927	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516928	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516929	CastTarget	CommandHandler		3516398	0					
ANR	3516930	Identifier	admin_command_handler		3516398	1					
ANR	3516931	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516932	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516933	Argument	0		3516398	4					
ANR	3516934	PrimaryExpression	0		3516398	0					
ANR	3516935	Argument	ADMINISTRATOR		3516398	5					
ANR	3516936	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516937	ExpressionStatement	"daemonCore -> Register_Command ( CHILD_OFF , ""CHILD_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	337:1:9773:9930	3516398	30	True				
ANR	3516938	CallExpression	"daemonCore -> Register_Command ( CHILD_OFF , ""CHILD_OFF"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516939	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516940	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516941	Identifier	daemonCore		3516398	0					
ANR	3516942	Identifier	Register_Command		3516398	1					
ANR	3516943	ArgumentList	CHILD_OFF		3516398	1					
ANR	3516944	Argument	CHILD_OFF		3516398	0					
ANR	3516945	Identifier	CHILD_OFF		3516398	0					
ANR	3516946	Argument	"""CHILD_OFF"""		3516398	1					
ANR	3516947	PrimaryExpression	"""CHILD_OFF"""		3516398	0					
ANR	3516948	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516949	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516950	CastTarget	CommandHandler		3516398	0					
ANR	3516951	Identifier	admin_command_handler		3516398	1					
ANR	3516952	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516953	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516954	Argument	0		3516398	4					
ANR	3516955	PrimaryExpression	0		3516398	0					
ANR	3516956	Argument	ADMINISTRATOR		3516398	5					
ANR	3516957	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516958	ExpressionStatement	"daemonCore -> Register_Command ( CHILD_OFF_FAST , ""CHILD_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	340:1:9933:10100	3516398	31	True				
ANR	3516959	CallExpression	"daemonCore -> Register_Command ( CHILD_OFF_FAST , ""CHILD_OFF_FAST"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516960	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516961	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516962	Identifier	daemonCore		3516398	0					
ANR	3516963	Identifier	Register_Command		3516398	1					
ANR	3516964	ArgumentList	CHILD_OFF_FAST		3516398	1					
ANR	3516965	Argument	CHILD_OFF_FAST		3516398	0					
ANR	3516966	Identifier	CHILD_OFF_FAST		3516398	0					
ANR	3516967	Argument	"""CHILD_OFF_FAST"""		3516398	1					
ANR	3516968	PrimaryExpression	"""CHILD_OFF_FAST"""		3516398	0					
ANR	3516969	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516970	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516971	CastTarget	CommandHandler		3516398	0					
ANR	3516972	Identifier	admin_command_handler		3516398	1					
ANR	3516973	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516974	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516975	Argument	0		3516398	4					
ANR	3516976	PrimaryExpression	0		3516398	0					
ANR	3516977	Argument	ADMINISTRATOR		3516398	5					
ANR	3516978	Identifier	ADMINISTRATOR		3516398	0					
ANR	3516979	ExpressionStatement	"daemonCore -> Register_Command ( SET_SHUTDOWN_PROGRAM , ""SET_SHUTDOWN_PROGRAM"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"	343:1:10103:10282	3516398	32	True				
ANR	3516980	CallExpression	"daemonCore -> Register_Command ( SET_SHUTDOWN_PROGRAM , ""SET_SHUTDOWN_PROGRAM"" , ( CommandHandler ) admin_command_handler , ""admin_command_handler"" , 0 , ADMINISTRATOR )"		3516398	0					
ANR	3516981	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3516982	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3516983	Identifier	daemonCore		3516398	0					
ANR	3516984	Identifier	Register_Command		3516398	1					
ANR	3516985	ArgumentList	SET_SHUTDOWN_PROGRAM		3516398	1					
ANR	3516986	Argument	SET_SHUTDOWN_PROGRAM		3516398	0					
ANR	3516987	Identifier	SET_SHUTDOWN_PROGRAM		3516398	0					
ANR	3516988	Argument	"""SET_SHUTDOWN_PROGRAM"""		3516398	1					
ANR	3516989	PrimaryExpression	"""SET_SHUTDOWN_PROGRAM"""		3516398	0					
ANR	3516990	Argument	( CommandHandler ) admin_command_handler		3516398	2					
ANR	3516991	CastExpression	( CommandHandler ) admin_command_handler		3516398	0					
ANR	3516992	CastTarget	CommandHandler		3516398	0					
ANR	3516993	Identifier	admin_command_handler		3516398	1					
ANR	3516994	Argument	"""admin_command_handler"""		3516398	3					
ANR	3516995	PrimaryExpression	"""admin_command_handler"""		3516398	0					
ANR	3516996	Argument	0		3516398	4					
ANR	3516997	PrimaryExpression	0		3516398	0					
ANR	3516998	Argument	ADMINISTRATOR		3516398	5					
ANR	3516999	Identifier	ADMINISTRATOR		3516398	0					
ANR	3517000	ExpressionStatement	"daemonCore -> Register_Command ( STORE_POOL_CRED , ""STORE_POOL_CRED"" , ( CommandHandler ) & store_pool_cred_handler , ""store_pool_cred_handler"" , NULL , CONFIG_PERM , D_FULLDEBUG )"	347:1:10336:10527	3516398	33	True				
ANR	3517001	CallExpression	"daemonCore -> Register_Command ( STORE_POOL_CRED , ""STORE_POOL_CRED"" , ( CommandHandler ) & store_pool_cred_handler , ""store_pool_cred_handler"" , NULL , CONFIG_PERM , D_FULLDEBUG )"		3516398	0					
ANR	3517002	Callee	daemonCore -> Register_Command		3516398	0					
ANR	3517003	PtrMemberAccess	daemonCore -> Register_Command		3516398	0					
ANR	3517004	Identifier	daemonCore		3516398	0					
ANR	3517005	Identifier	Register_Command		3516398	1					
ANR	3517006	ArgumentList	STORE_POOL_CRED		3516398	1					
ANR	3517007	Argument	STORE_POOL_CRED		3516398	0					
ANR	3517008	Identifier	STORE_POOL_CRED		3516398	0					
ANR	3517009	Argument	"""STORE_POOL_CRED"""		3516398	1					
ANR	3517010	PrimaryExpression	"""STORE_POOL_CRED"""		3516398	0					
ANR	3517011	Argument	( CommandHandler ) & store_pool_cred_handler		3516398	2					
ANR	3517012	CastExpression	( CommandHandler ) & store_pool_cred_handler		3516398	0					
ANR	3517013	CastTarget	CommandHandler		3516398	0					
ANR	3517014	UnaryOperationExpression	& store_pool_cred_handler		3516398	1					
ANR	3517015	UnaryOperator	&		3516398	0					
ANR	3517016	Identifier	store_pool_cred_handler		3516398	1					
ANR	3517017	Argument	"""store_pool_cred_handler"""		3516398	3					
ANR	3517018	PrimaryExpression	"""store_pool_cred_handler"""		3516398	0					
ANR	3517019	Argument	NULL		3516398	4					
ANR	3517020	Identifier	NULL		3516398	0					
ANR	3517021	Argument	CONFIG_PERM		3516398	5					
ANR	3517022	Identifier	CONFIG_PERM		3516398	0					
ANR	3517023	Argument	D_FULLDEBUG		3516398	6					
ANR	3517024	Identifier	D_FULLDEBUG		3516398	0					
ANR	3517025	ExpressionStatement	"daemonCore -> RegisterTimeSkipCallback ( time_skip_handler , 0 )"	357:1:10697:10754	3516398	34	True				
ANR	3517026	CallExpression	"daemonCore -> RegisterTimeSkipCallback ( time_skip_handler , 0 )"		3516398	0					
ANR	3517027	Callee	daemonCore -> RegisterTimeSkipCallback		3516398	0					
ANR	3517028	PtrMemberAccess	daemonCore -> RegisterTimeSkipCallback		3516398	0					
ANR	3517029	Identifier	daemonCore		3516398	0					
ANR	3517030	Identifier	RegisterTimeSkipCallback		3516398	1					
ANR	3517031	ArgumentList	time_skip_handler		3516398	1					
ANR	3517032	Argument	time_skip_handler		3516398	0					
ANR	3517033	Identifier	time_skip_handler		3516398	0					
ANR	3517034	Argument	0		3516398	1					
ANR	3517035	PrimaryExpression	0		3516398	0					
ANR	3517036	ExpressionStatement	_EXCEPT_Cleanup = DoCleanup	359:1:10758:10785	3516398	35	True				
ANR	3517037	AssignmentExpression	_EXCEPT_Cleanup = DoCleanup		3516398	0		=			
ANR	3517038	Identifier	_EXCEPT_Cleanup		3516398	0					
ANR	3517039	Identifier	DoCleanup		3516398	1					
ANR	3517040	IfStatement	"if ( ! Termlog && param_boolean ( ""USE_PROCESS_GROUPS"" , true ) )"		3516398	36					
ANR	3517041	Condition	"! Termlog && param_boolean ( ""USE_PROCESS_GROUPS"" , true )"	362:5:10813:10867	3516398	0	True				
ANR	3517042	AndExpression	"! Termlog && param_boolean ( ""USE_PROCESS_GROUPS"" , true )"		3516398	0		&&			
ANR	3517043	UnaryOperationExpression	! Termlog		3516398	0					
ANR	3517044	UnaryOperator	!		3516398	0					
ANR	3517045	Identifier	Termlog		3516398	1					
ANR	3517046	CallExpression	"param_boolean ( ""USE_PROCESS_GROUPS"" , true )"		3516398	1					
ANR	3517047	Callee	param_boolean		3516398	0					
ANR	3517048	Identifier	param_boolean		3516398	0					
ANR	3517049	ArgumentList	"""USE_PROCESS_GROUPS"""		3516398	1					
ANR	3517050	Argument	"""USE_PROCESS_GROUPS"""		3516398	0					
ANR	3517051	PrimaryExpression	"""USE_PROCESS_GROUPS"""		3516398	0					
ANR	3517052	Argument	true		3516398	1					
ANR	3517053	Identifier	true		3516398	0					
ANR	3517054	CompoundStatement		134:63:5144:5144	3516398	1					
ANR	3517055	ExpressionStatement	setsid ( )	365:2:10990:10998	3516398	0	True				
ANR	3517056	CallExpression	setsid ( )		3516398	0					
ANR	3517057	Callee	setsid		3516398	0					
ANR	3517058	Identifier	setsid		3516398	0					
ANR	3517059	ArgumentList			3516398	1					
ANR	3517060	IfStatement	if ( StartDaemons )		3516398	37					
ANR	3517061	Condition	StartDaemons	369:5:11016:11027	3516398	0	True				
ANR	3517062	Identifier	StartDaemons		3516398	0					
ANR	3517063	CompoundStatement		141:20:5304:5304	3516398	1					
ANR	3517064	ExpressionStatement	daemons . StartAllDaemons ( )	370:2:11035:11060	3516398	0	True				
ANR	3517065	CallExpression	daemons . StartAllDaemons ( )		3516398	0					
ANR	3517066	Callee	daemons . StartAllDaemons		3516398	0					
ANR	3517067	MemberAccess	daemons . StartAllDaemons		3516398	0					
ANR	3517068	Identifier	daemons		3516398	0					
ANR	3517069	Identifier	StartAllDaemons		3516398	1					
ANR	3517070	ArgumentList			3516398	1					
ANR	3517071	ExpressionStatement	daemons . StartTimers ( )	372:1:11066:11087	3516398	38	True				
ANR	3517072	CallExpression	daemons . StartTimers ( )		3516398	0					
ANR	3517073	Callee	daemons . StartTimers		3516398	0					
ANR	3517074	MemberAccess	daemons . StartTimers		3516398	0					
ANR	3517075	Identifier	daemons		3516398	0					
ANR	3517076	Identifier	StartTimers		3516398	1					
ANR	3517077	ArgumentList			3516398	1					
ANR	3517078	ReturnType	void		3516398	1					
ANR	3517079	Identifier	main_init		3516398	2					
ANR	3517080	ParameterList	"int argc , char * argv [ ]"		3516398	3					
ANR	3517081	Parameter	int argc	228:11:5701:5708	3516398	0	True				
ANR	3517082	ParameterType	int		3516398	0					
ANR	3517083	Identifier	argc		3516398	1					
ANR	3517084	Parameter	char * argv [ ]	228:21:5711:5722	3516398	1	True				
ANR	3517085	ParameterType	char * [ ]		3516398	0					
ANR	3517086	Identifier	argv		3516398	1					
ANR	3517087	CFGEntryNode	ENTRY		3516398		True				
ANR	3517088	CFGExitNode	EXIT		3516398		True				
ANR	3517089	Symbol	MASTER_OFF		3516398						
ANR	3517090	Symbol	STORE_POOL_CRED		3516398						
ANR	3517091	Symbol	* argv		3516398						
ANR	3517092	Symbol	admin_command_handler		3516398						
ANR	3517093	Symbol	DAEMON_OFF		3516398						
ANR	3517094	Symbol	CHILD_ON		3516398						
ANR	3517095	Symbol	build_valid_daemon_name		3516398						
ANR	3517096	Symbol	* ptr		3516398						
ANR	3517097	Symbol	ENV_DAEMON_DEATHTIME		3516398						
ANR	3517098	Symbol	time_skip_handler		3516398						
ANR	3517099	Symbol	NULL		3516398						
ANR	3517100	Symbol	DAEMONS_OFF_PEACEFUL		3516398						
ANR	3517101	Symbol	DAEMONS_OFF_FAST		3516398						
ANR	3517102	Symbol	DAEMONS_OFF		3516398						
ANR	3517103	Symbol	D_FULLDEBUG		3516398						
ANR	3517104	Symbol	param_boolean		3516398						
ANR	3517105	Symbol	argc_count		3516398						
ANR	3517106	Symbol	DAEMON_ON		3516398						
ANR	3517107	Symbol	StartDaemons		3516398						
ANR	3517108	Symbol	SET_SHUTDOWN_PROGRAM		3516398						
ANR	3517109	Symbol	runfor_env . Value		3516398						
ANR	3517110	Symbol	CHILD_OFF_FAST		3516398						
ANR	3517111	Symbol	true		3516398						
ANR	3517112	Symbol	& store_pool_cred_handler		3516398						
ANR	3517113	Symbol	DAEMON_OFF_PEACEFUL		3516398						
ANR	3517114	Symbol	* * ptr		3516398						
ANR	3517115	Symbol	argv		3516398						
ANR	3517116	Symbol	EnvGetName		3516398						
ANR	3517117	Symbol	CONFIG_PERM		3516398						
ANR	3517118	Symbol	daemonCore		3516398						
ANR	3517119	Symbol	DAEMON_OFF_FAST		3516398						
ANR	3517120	Symbol	daemons		3516398						
ANR	3517121	Symbol	runfor_env		3516398						
ANR	3517122	Symbol	RESTART		3516398						
ANR	3517123	Symbol	RESTART_PEACEFUL		3516398						
ANR	3517124	Symbol	DAEMONS_ON		3516398						
ANR	3517125	Symbol	_EXCEPT_Cleanup		3516398						
ANR	3517126	Symbol	argc		3516398						
ANR	3517127	Symbol	DoCleanup		3516398						
ANR	3517128	Symbol	Termlog		3516398						
ANR	3517129	Symbol	D_ALWAYS		3516398						
ANR	3517130	Symbol	MASTER_OFF_FAST		3516398						
ANR	3517131	Symbol	MasterName		3516398						
ANR	3517132	Symbol	ptr		3516398						
ANR	3517133	Symbol	ADMINISTRATOR		3516398						
ANR	3517134	Symbol	runfor		3516398						
ANR	3517135	Symbol	CHILD_OFF		3516398						
ANR	3517136	Symbol	time		3516398						
ANR	3517137	Symbol	daemons . SetupControllers		3516398						
ANR	3517138	Function	agent_starter	446:0:12901:13441							
ANR	3517139	FunctionDef	agent_starter (ReliSock * s)		3517138	0					
ANR	3517140	CompoundStatement		448:0:12935:13441	3517138	0					
ANR	3517141	IdentifierDeclStatement	ReliSock * stream = ( ReliSock * ) s ;	449:1:12938:12969	3517138	0	True				
ANR	3517142	IdentifierDecl	* stream = ( ReliSock * ) s		3517138	0					
ANR	3517143	IdentifierDeclType	ReliSock *		3517138	0					
ANR	3517144	Identifier	stream		3517138	1					
ANR	3517145	AssignmentExpression	* stream = ( ReliSock * ) s		3517138	2		=			
ANR	3517146	Identifier	stream		3517138	0					
ANR	3517147	CastExpression	( ReliSock * ) s		3517138	1					
ANR	3517148	CastTarget	ReliSock *		3517138	0					
ANR	3517149	Identifier	s		3517138	1					
ANR	3517150	IdentifierDeclStatement	char * subsys = NULL ;	450:1:12972:12991	3517138	1	True				
ANR	3517151	IdentifierDecl	* subsys = NULL		3517138	0					
ANR	3517152	IdentifierDeclType	char *		3517138	0					
ANR	3517153	Identifier	subsys		3517138	1					
ANR	3517154	AssignmentExpression	* subsys = NULL		3517138	2		=			
ANR	3517155	Identifier	NULL		3517138	0					
ANR	3517156	Identifier	NULL		3517138	1					
ANR	3517157	ExpressionStatement	stream -> decode ( )	452:1:12995:13011	3517138	2	True				
ANR	3517158	CallExpression	stream -> decode ( )		3517138	0					
ANR	3517159	Callee	stream -> decode		3517138	0					
ANR	3517160	PtrMemberAccess	stream -> decode		3517138	0					
ANR	3517161	Identifier	stream		3517138	0					
ANR	3517162	Identifier	decode		3517138	1					
ANR	3517163	ArgumentList			3517138	1					
ANR	3517164	IfStatement	if ( ! stream -> code ( subsys ) || ! stream -> end_of_message ( ) )		3517138	3					
ANR	3517165	Condition	! stream -> code ( subsys ) || ! stream -> end_of_message ( )	453:5:13018:13071	3517138	0	True				
ANR	3517166	OrExpression	! stream -> code ( subsys ) || ! stream -> end_of_message ( )		3517138	0		||			
ANR	3517167	UnaryOperationExpression	! stream -> code ( subsys )		3517138	0					
ANR	3517168	UnaryOperator	!		3517138	0					
ANR	3517169	CallExpression	stream -> code ( subsys )		3517138	1					
ANR	3517170	Callee	stream -> code		3517138	0					
ANR	3517171	PtrMemberAccess	stream -> code		3517138	0					
ANR	3517172	Identifier	stream		3517138	0					
ANR	3517173	Identifier	code		3517138	1					
ANR	3517174	ArgumentList	subsys		3517138	1					
ANR	3517175	Argument	subsys		3517138	0					
ANR	3517176	Identifier	subsys		3517138	0					
ANR	3517177	UnaryOperationExpression	! stream -> end_of_message ( )		3517138	1					
ANR	3517178	UnaryOperator	!		3517138	0					
ANR	3517179	CallExpression	stream -> end_of_message ( )		3517138	1					
ANR	3517180	Callee	stream -> end_of_message		3517138	0					
ANR	3517181	PtrMemberAccess	stream -> end_of_message		3517138	0					
ANR	3517182	Identifier	stream		3517138	0					
ANR	3517183	Identifier	end_of_message		3517138	1					
ANR	3517184	ArgumentList			3517138	1					
ANR	3517185	CompoundStatement		7:31:139:139	3517138	1					
ANR	3517186	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read subsystem name\\n"" )"	455:2:13079:13129	3517138	0	True				
ANR	3517187	CallExpression	"dprintf ( D_ALWAYS , ""Can't read subsystem name\\n"" )"		3517138	0					
ANR	3517188	Callee	dprintf		3517138	0					
ANR	3517189	Identifier	dprintf		3517138	0					
ANR	3517190	ArgumentList	D_ALWAYS		3517138	1					
ANR	3517191	Argument	D_ALWAYS		3517138	0					
ANR	3517192	Identifier	D_ALWAYS		3517138	0					
ANR	3517193	Argument	"""Can't read subsystem name\\n"""		3517138	1					
ANR	3517194	PrimaryExpression	"""Can't read subsystem name\\n"""		3517138	0					
ANR	3517195	ExpressionStatement	free ( subsys )	456:2:13133:13147	3517138	1	True				
ANR	3517196	CallExpression	free ( subsys )		3517138	0					
ANR	3517197	Callee	free		3517138	0					
ANR	3517198	Identifier	free		3517138	0					
ANR	3517199	ArgumentList	subsys		3517138	1					
ANR	3517200	Argument	subsys		3517138	0					
ANR	3517201	Identifier	subsys		3517138	0					
ANR	3517202	ReturnStatement	return FALSE ;	457:2:13151:13163	3517138	2	True				
ANR	3517203	Identifier	FALSE		3517138	0					
ANR	3517204	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starting agent '%s'\\n"" , subsys )"	460:1:13170:13223	3517138	4	True				
ANR	3517205	CallExpression	"dprintf ( D_ALWAYS , ""Starting agent '%s'\\n"" , subsys )"		3517138	0					
ANR	3517206	Callee	dprintf		3517138	0					
ANR	3517207	Identifier	dprintf		3517138	0					
ANR	3517208	ArgumentList	D_ALWAYS		3517138	1					
ANR	3517209	Argument	D_ALWAYS		3517138	0					
ANR	3517210	Identifier	D_ALWAYS		3517138	0					
ANR	3517211	Argument	"""Starting agent '%s'\\n"""		3517138	1					
ANR	3517212	PrimaryExpression	"""Starting agent '%s'\\n"""		3517138	0					
ANR	3517213	Argument	subsys		3517138	2					
ANR	3517214	Identifier	subsys		3517138	0					
ANR	3517215	IfStatement	"if ( strcasecmp ( subsys , ""fetch_log"" ) == 0 )"		3517138	5					
ANR	3517216	Condition	"strcasecmp ( subsys , ""fetch_log"" ) == 0"	462:5:13231:13266	3517138	0	True				
ANR	3517217	EqualityExpression	"strcasecmp ( subsys , ""fetch_log"" ) == 0"		3517138	0		==			
ANR	3517218	CallExpression	"strcasecmp ( subsys , ""fetch_log"" )"		3517138	0					
ANR	3517219	Callee	strcasecmp		3517138	0					
ANR	3517220	Identifier	strcasecmp		3517138	0					
ANR	3517221	ArgumentList	subsys		3517138	1					
ANR	3517222	Argument	subsys		3517138	0					
ANR	3517223	Identifier	subsys		3517138	0					
ANR	3517224	Argument	"""fetch_log"""		3517138	1					
ANR	3517225	PrimaryExpression	"""fetch_log"""		3517138	0					
ANR	3517226	PrimaryExpression	0		3517138	1					
ANR	3517227	CompoundStatement		15:44:334:334	3517138	1					
ANR	3517228	ExpressionStatement	free ( subsys )	463:2:13274:13287	3517138	0	True				
ANR	3517229	CallExpression	free ( subsys )		3517138	0					
ANR	3517230	Callee	free		3517138	0					
ANR	3517231	Identifier	free		3517138	0					
ANR	3517232	ArgumentList	subsys		3517138	1					
ANR	3517233	Argument	subsys		3517138	0					
ANR	3517234	Identifier	subsys		3517138	0					
ANR	3517235	ReturnStatement	return handle_agent_fetch_log ( stream ) ;	464:2:13291:13330	3517138	1	True				
ANR	3517236	CallExpression	handle_agent_fetch_log ( stream )		3517138	0					
ANR	3517237	Callee	handle_agent_fetch_log		3517138	0					
ANR	3517238	Identifier	handle_agent_fetch_log		3517138	0					
ANR	3517239	ArgumentList	stream		3517138	1					
ANR	3517240	Argument	stream		3517138	0					
ANR	3517241	Identifier	stream		3517138	0					
ANR	3517242	ExpressionStatement	free ( subsys )	469:1:13351:13364	3517138	6	True				
ANR	3517243	CallExpression	free ( subsys )		3517138	0					
ANR	3517244	Callee	free		3517138	0					
ANR	3517245	Identifier	free		3517138	0					
ANR	3517246	ArgumentList	subsys		3517138	1					
ANR	3517247	Argument	subsys		3517138	0					
ANR	3517248	Identifier	subsys		3517138	0					
ANR	3517249	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: unrecognized agent name\\n"" )"	470:1:13367:13424	3517138	7	True				
ANR	3517250	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: unrecognized agent name\\n"" )"		3517138	0					
ANR	3517251	Callee	dprintf		3517138	0					
ANR	3517252	Identifier	dprintf		3517138	0					
ANR	3517253	ArgumentList	D_ALWAYS		3517138	1					
ANR	3517254	Argument	D_ALWAYS		3517138	0					
ANR	3517255	Identifier	D_ALWAYS		3517138	0					
ANR	3517256	Argument	"""WARNING: unrecognized agent name\\n"""		3517138	1					
ANR	3517257	PrimaryExpression	"""WARNING: unrecognized agent name\\n"""		3517138	0					
ANR	3517258	ReturnStatement	return FALSE ;	471:1:13427:13439	3517138	8	True				
ANR	3517259	Identifier	FALSE		3517138	0					
ANR	3517260	ReturnType	int		3517138	1					
ANR	3517261	Identifier	agent_starter		3517138	2					
ANR	3517262	ParameterList	ReliSock * s		3517138	3					
ANR	3517263	Parameter	ReliSock * s	447:15:12920:12931	3517138	0	True				
ANR	3517264	ParameterType	ReliSock *		3517138	0					
ANR	3517265	Identifier	s		3517138	1					
ANR	3517266	CFGEntryNode	ENTRY		3517138		True				
ANR	3517267	CFGExitNode	EXIT		3517138		True				
ANR	3517268	Symbol	handle_agent_fetch_log		3517138						
ANR	3517269	Symbol	subsys		3517138						
ANR	3517270	Symbol	stream -> end_of_message		3517138						
ANR	3517271	Symbol	s		3517138						
ANR	3517272	Symbol	NULL		3517138						
ANR	3517273	Symbol	stream		3517138						
ANR	3517274	Symbol	stream -> code		3517138						
ANR	3517275	Symbol	* stream		3517138						
ANR	3517276	Symbol	D_ALWAYS		3517138						
ANR	3517277	Symbol	FALSE		3517138						
ANR	3517278	Symbol	strcasecmp		3517138						
ANR	3517279	Function	handle_agent_fetch_log	474:0:13444:14447							
ANR	3517280	FunctionDef	handle_agent_fetch_log (ReliSock * stream)		3517279	0					
ANR	3517281	CompoundStatement		475:42:13490:14447	3517279	0					
ANR	3517282	IdentifierDeclStatement	char * daemon_name = NULL ;	477:1:13494:13518	3517279	0	True				
ANR	3517283	IdentifierDecl	* daemon_name = NULL		3517279	0					
ANR	3517284	IdentifierDeclType	char *		3517279	0					
ANR	3517285	Identifier	daemon_name		3517279	1					
ANR	3517286	AssignmentExpression	* daemon_name = NULL		3517279	2		=			
ANR	3517287	Identifier	NULL		3517279	0					
ANR	3517288	Identifier	NULL		3517279	1					
ANR	3517289	IdentifierDeclStatement	char * daemon_paramname = NULL ;	478:1:13521:13550	3517279	1	True				
ANR	3517290	IdentifierDecl	* daemon_paramname = NULL		3517279	0					
ANR	3517291	IdentifierDeclType	char *		3517279	0					
ANR	3517292	Identifier	daemon_paramname		3517279	1					
ANR	3517293	AssignmentExpression	* daemon_paramname = NULL		3517279	2		=			
ANR	3517294	Identifier	NULL		3517279	0					
ANR	3517295	Identifier	NULL		3517279	1					
ANR	3517296	IdentifierDeclStatement	char * daemon_filename = NULL ;	479:1:13553:13581	3517279	2	True				
ANR	3517297	IdentifierDecl	* daemon_filename = NULL		3517279	0					
ANR	3517298	IdentifierDeclType	char *		3517279	0					
ANR	3517299	Identifier	daemon_filename		3517279	1					
ANR	3517300	AssignmentExpression	* daemon_filename = NULL		3517279	2		=			
ANR	3517301	Identifier	NULL		3517279	0					
ANR	3517302	Identifier	NULL		3517279	1					
ANR	3517303	IdentifierDeclStatement	int res = FALSE ;	480:1:13584:13600	3517279	3	True				
ANR	3517304	IdentifierDecl	res = FALSE		3517279	0					
ANR	3517305	IdentifierDeclType	int		3517279	0					
ANR	3517306	Identifier	res		3517279	1					
ANR	3517307	AssignmentExpression	res = FALSE		3517279	2		=			
ANR	3517308	Identifier	FALSE		3517279	0					
ANR	3517309	Identifier	FALSE		3517279	1					
ANR	3517310	IfStatement	if ( ! stream -> code ( daemon_name ) || ! stream -> end_of_message ( ) )		3517279	4					
ANR	3517311	Condition	! stream -> code ( daemon_name ) || ! stream -> end_of_message ( )	482:5:13608:13666	3517279	0	True				
ANR	3517312	OrExpression	! stream -> code ( daemon_name ) || ! stream -> end_of_message ( )		3517279	0		||			
ANR	3517313	UnaryOperationExpression	! stream -> code ( daemon_name )		3517279	0					
ANR	3517314	UnaryOperator	!		3517279	0					
ANR	3517315	CallExpression	stream -> code ( daemon_name )		3517279	1					
ANR	3517316	Callee	stream -> code		3517279	0					
ANR	3517317	PtrMemberAccess	stream -> code		3517279	0					
ANR	3517318	Identifier	stream		3517279	0					
ANR	3517319	Identifier	code		3517279	1					
ANR	3517320	ArgumentList	daemon_name		3517279	1					
ANR	3517321	Argument	daemon_name		3517279	0					
ANR	3517322	Identifier	daemon_name		3517279	0					
ANR	3517323	UnaryOperationExpression	! stream -> end_of_message ( )		3517279	1					
ANR	3517324	UnaryOperator	!		3517279	0					
ANR	3517325	CallExpression	stream -> end_of_message ( )		3517279	1					
ANR	3517326	Callee	stream -> end_of_message		3517279	0					
ANR	3517327	PtrMemberAccess	stream -> end_of_message		3517279	0					
ANR	3517328	Identifier	stream		3517279	0					
ANR	3517329	Identifier	end_of_message		3517279	1					
ANR	3517330	ArgumentList			3517279	1					
ANR	3517331	CompoundStatement		9:30:178:178	3517279	1					
ANR	3517332	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: fetch_log can't read daemon name\\n"" )"	484:2:13673:13737	3517279	0	True				
ANR	3517333	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: fetch_log can't read daemon name\\n"" )"		3517279	0					
ANR	3517334	Callee	dprintf		3517279	0					
ANR	3517335	Identifier	dprintf		3517279	0					
ANR	3517336	ArgumentList	D_ALWAYS		3517279	1					
ANR	3517337	Argument	D_ALWAYS		3517279	0					
ANR	3517338	Identifier	D_ALWAYS		3517279	0					
ANR	3517339	Argument	"""ERROR: fetch_log can't read daemon name\\n"""		3517279	1					
ANR	3517340	PrimaryExpression	"""ERROR: fetch_log can't read daemon name\\n"""		3517279	0					
ANR	3517341	ExpressionStatement	free ( daemon_name )	485:2:13741:13760	3517279	1	True				
ANR	3517342	CallExpression	free ( daemon_name )		3517279	0					
ANR	3517343	Callee	free		3517279	0					
ANR	3517344	Identifier	free		3517279	0					
ANR	3517345	ArgumentList	daemon_name		3517279	1					
ANR	3517346	Argument	daemon_name		3517279	0					
ANR	3517347	Identifier	daemon_name		3517279	0					
ANR	3517348	ReturnStatement	return FALSE ;	486:2:13764:13776	3517279	2	True				
ANR	3517349	Identifier	FALSE		3517279	0					
ANR	3517350	ExpressionStatement	"dprintf ( D_ALWAYS , ""INFO: daemon_name: %s\\n"" , daemon_name )"	489:1:13783:13842	3517279	5	True				
ANR	3517351	CallExpression	"dprintf ( D_ALWAYS , ""INFO: daemon_name: %s\\n"" , daemon_name )"		3517279	0					
ANR	3517352	Callee	dprintf		3517279	0					
ANR	3517353	Identifier	dprintf		3517279	0					
ANR	3517354	ArgumentList	D_ALWAYS		3517279	1					
ANR	3517355	Argument	D_ALWAYS		3517279	0					
ANR	3517356	Identifier	D_ALWAYS		3517279	0					
ANR	3517357	Argument	"""INFO: daemon_name: %s\\n"""		3517279	1					
ANR	3517358	PrimaryExpression	"""INFO: daemon_name: %s\\n"""		3517279	0					
ANR	3517359	Argument	daemon_name		3517279	2					
ANR	3517360	Identifier	daemon_name		3517279	0					
ANR	3517361	ExpressionStatement	daemon_paramname = ( char * ) malloc ( strlen ( daemon_name ) + 5 )	491:1:13846:13904	3517279	6	True				
ANR	3517362	AssignmentExpression	daemon_paramname = ( char * ) malloc ( strlen ( daemon_name ) + 5 )		3517279	0		=			
ANR	3517363	Identifier	daemon_paramname		3517279	0					
ANR	3517364	CastExpression	( char * ) malloc ( strlen ( daemon_name ) + 5 )		3517279	1					
ANR	3517365	CastTarget	char *		3517279	0					
ANR	3517366	CallExpression	malloc ( strlen ( daemon_name ) + 5 )		3517279	1					
ANR	3517367	Callee	malloc		3517279	0					
ANR	3517368	Identifier	malloc		3517279	0					
ANR	3517369	ArgumentList	strlen ( daemon_name ) + 5		3517279	1					
ANR	3517370	Argument	strlen ( daemon_name ) + 5		3517279	0					
ANR	3517371	AdditiveExpression	strlen ( daemon_name ) + 5		3517279	0		+			
ANR	3517372	CallExpression	strlen ( daemon_name )		3517279	0					
ANR	3517373	Callee	strlen		3517279	0					
ANR	3517374	Identifier	strlen		3517279	0					
ANR	3517375	ArgumentList	daemon_name		3517279	1					
ANR	3517376	Argument	daemon_name		3517279	0					
ANR	3517377	Identifier	daemon_name		3517279	0					
ANR	3517378	PrimaryExpression	5		3517279	1					
ANR	3517379	ExpressionStatement	"strcpy ( daemon_paramname , daemon_name )"	492:1:13907:13945	3517279	7	True				
ANR	3517380	CallExpression	"strcpy ( daemon_paramname , daemon_name )"		3517279	0					
ANR	3517381	Callee	strcpy		3517279	0					
ANR	3517382	Identifier	strcpy		3517279	0					
ANR	3517383	ArgumentList	daemon_paramname		3517279	1					
ANR	3517384	Argument	daemon_paramname		3517279	0					
ANR	3517385	Identifier	daemon_paramname		3517279	0					
ANR	3517386	Argument	daemon_name		3517279	1					
ANR	3517387	Identifier	daemon_name		3517279	0					
ANR	3517388	ExpressionStatement	"strcat ( daemon_paramname , ""_LOG"" )"	493:1:13948:13981	3517279	8	True				
ANR	3517389	CallExpression	"strcat ( daemon_paramname , ""_LOG"" )"		3517279	0					
ANR	3517390	Callee	strcat		3517279	0					
ANR	3517391	Identifier	strcat		3517279	0					
ANR	3517392	ArgumentList	daemon_paramname		3517279	1					
ANR	3517393	Argument	daemon_paramname		3517279	0					
ANR	3517394	Identifier	daemon_paramname		3517279	0					
ANR	3517395	Argument	"""_LOG"""		3517279	1					
ANR	3517396	PrimaryExpression	"""_LOG"""		3517279	0					
ANR	3517397	ExpressionStatement	"dprintf ( D_ALWAYS , ""INFO: daemon_paramname: %s\\n"" , daemon_paramname )"	495:1:13985:14054	3517279	9	True				
ANR	3517398	CallExpression	"dprintf ( D_ALWAYS , ""INFO: daemon_paramname: %s\\n"" , daemon_paramname )"		3517279	0					
ANR	3517399	Callee	dprintf		3517279	0					
ANR	3517400	Identifier	dprintf		3517279	0					
ANR	3517401	ArgumentList	D_ALWAYS		3517279	1					
ANR	3517402	Argument	D_ALWAYS		3517279	0					
ANR	3517403	Identifier	D_ALWAYS		3517279	0					
ANR	3517404	Argument	"""INFO: daemon_paramname: %s\\n"""		3517279	1					
ANR	3517405	PrimaryExpression	"""INFO: daemon_paramname: %s\\n"""		3517279	0					
ANR	3517406	Argument	daemon_paramname		3517279	2					
ANR	3517407	Identifier	daemon_paramname		3517279	0					
ANR	3517408	IfStatement	if ( ( daemon_filename = param ( daemon_paramname ) ) )		3517279	10					
ANR	3517409	Condition	daemon_filename = param ( daemon_paramname )	497:5:14062:14104	3517279	0	True				
ANR	3517410	AssignmentExpression	daemon_filename = param ( daemon_paramname )		3517279	0		=			
ANR	3517411	Identifier	daemon_filename		3517279	0					
ANR	3517412	CallExpression	param ( daemon_paramname )		3517279	1					
ANR	3517413	Callee	param		3517279	0					
ANR	3517414	Identifier	param		3517279	0					
ANR	3517415	ArgumentList	daemon_paramname		3517279	1					
ANR	3517416	Argument	daemon_paramname		3517279	0					
ANR	3517417	Identifier	daemon_paramname		3517279	0					
ANR	3517418	CompoundStatement		24:2:621:636	3517279	1					
ANR	3517419	IdentifierDeclStatement	filesize_t size ;	498:2:14112:14127	3517279	0	True				
ANR	3517420	IdentifierDecl	size		3517279	0					
ANR	3517421	IdentifierDeclType	filesize_t		3517279	0					
ANR	3517422	Identifier	size		3517279	1					
ANR	3517423	ExpressionStatement	"dprintf ( D_ALWAYS , ""INFO: daemon_filename: %s\\n"" , daemon_filename )"	499:2:14131:14198	3517279	1	True				
ANR	3517424	CallExpression	"dprintf ( D_ALWAYS , ""INFO: daemon_filename: %s\\n"" , daemon_filename )"		3517279	0					
ANR	3517425	Callee	dprintf		3517279	0					
ANR	3517426	Identifier	dprintf		3517279	0					
ANR	3517427	ArgumentList	D_ALWAYS		3517279	1					
ANR	3517428	Argument	D_ALWAYS		3517279	0					
ANR	3517429	Identifier	D_ALWAYS		3517279	0					
ANR	3517430	Argument	"""INFO: daemon_filename: %s\\n"""		3517279	1					
ANR	3517431	PrimaryExpression	"""INFO: daemon_filename: %s\\n"""		3517279	0					
ANR	3517432	Argument	daemon_filename		3517279	2					
ANR	3517433	Identifier	daemon_filename		3517279	0					
ANR	3517434	ExpressionStatement	stream -> encode ( )	500:2:14202:14218	3517279	2	True				
ANR	3517435	CallExpression	stream -> encode ( )		3517279	0					
ANR	3517436	Callee	stream -> encode		3517279	0					
ANR	3517437	PtrMemberAccess	stream -> encode		3517279	0					
ANR	3517438	Identifier	stream		3517279	0					
ANR	3517439	Identifier	encode		3517279	1					
ANR	3517440	ArgumentList			3517279	1					
ANR	3517441	ExpressionStatement	"res = ( stream -> put_file ( & size , daemon_filename ) < 0 )"	501:2:14222:14274	3517279	3	True				
ANR	3517442	AssignmentExpression	"res = ( stream -> put_file ( & size , daemon_filename ) < 0 )"		3517279	0		=			
ANR	3517443	Identifier	res		3517279	0					
ANR	3517444	RelationalExpression	"stream -> put_file ( & size , daemon_filename ) < 0"		3517279	1		<			
ANR	3517445	CallExpression	"stream -> put_file ( & size , daemon_filename )"		3517279	0					
ANR	3517446	Callee	stream -> put_file		3517279	0					
ANR	3517447	PtrMemberAccess	stream -> put_file		3517279	0					
ANR	3517448	Identifier	stream		3517279	0					
ANR	3517449	Identifier	put_file		3517279	1					
ANR	3517450	ArgumentList	& size		3517279	1					
ANR	3517451	Argument	& size		3517279	0					
ANR	3517452	UnaryOperationExpression	& size		3517279	0					
ANR	3517453	UnaryOperator	&		3517279	0					
ANR	3517454	Identifier	size		3517279	1					
ANR	3517455	Argument	daemon_filename		3517279	1					
ANR	3517456	Identifier	daemon_filename		3517279	0					
ANR	3517457	PrimaryExpression	0		3517279	1					
ANR	3517458	ExpressionStatement	free ( daemon_filename )	502:2:14278:14300	3517279	4	True				
ANR	3517459	CallExpression	free ( daemon_filename )		3517279	0					
ANR	3517460	Callee	free		3517279	0					
ANR	3517461	Identifier	free		3517279	0					
ANR	3517462	ArgumentList	daemon_filename		3517279	1					
ANR	3517463	Argument	daemon_filename		3517279	0					
ANR	3517464	Identifier	daemon_filename		3517279	0					
ANR	3517465	ElseStatement	else		3517279	0					
ANR	3517466	CompoundStatement		29:8:819:819	3517279	0					
ANR	3517467	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: fetch_log can't param for log name\\n"" )"	504:2:14314:14380	3517279	0	True				
ANR	3517468	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: fetch_log can't param for log name\\n"" )"		3517279	0					
ANR	3517469	Callee	dprintf		3517279	0					
ANR	3517470	Identifier	dprintf		3517279	0					
ANR	3517471	ArgumentList	D_ALWAYS		3517279	1					
ANR	3517472	Argument	D_ALWAYS		3517279	0					
ANR	3517473	Identifier	D_ALWAYS		3517279	0					
ANR	3517474	Argument	"""ERROR: fetch_log can't param for log name\\n"""		3517279	1					
ANR	3517475	PrimaryExpression	"""ERROR: fetch_log can't param for log name\\n"""		3517279	0					
ANR	3517476	ExpressionStatement	free ( daemon_paramname )	507:1:14387:14410	3517279	11	True				
ANR	3517477	CallExpression	free ( daemon_paramname )		3517279	0					
ANR	3517478	Callee	free		3517279	0					
ANR	3517479	Identifier	free		3517279	0					
ANR	3517480	ArgumentList	daemon_paramname		3517279	1					
ANR	3517481	Argument	daemon_paramname		3517279	0					
ANR	3517482	Identifier	daemon_paramname		3517279	0					
ANR	3517483	ExpressionStatement	free ( daemon_name )	508:1:14413:14431	3517279	12	True				
ANR	3517484	CallExpression	free ( daemon_name )		3517279	0					
ANR	3517485	Callee	free		3517279	0					
ANR	3517486	Identifier	free		3517279	0					
ANR	3517487	ArgumentList	daemon_name		3517279	1					
ANR	3517488	Argument	daemon_name		3517279	0					
ANR	3517489	Identifier	daemon_name		3517279	0					
ANR	3517490	ReturnStatement	return res ;	510:1:14435:14445	3517279	13	True				
ANR	3517491	Identifier	res		3517279	0					
ANR	3517492	ReturnType	int		3517279	1					
ANR	3517493	Identifier	handle_agent_fetch_log		3517279	2					
ANR	3517494	ParameterList	ReliSock * stream		3517279	3					
ANR	3517495	Parameter	ReliSock * stream	475:24:13472:13487	3517279	0	True				
ANR	3517496	ParameterType	ReliSock *		3517279	0					
ANR	3517497	Identifier	stream		3517279	1					
ANR	3517498	CFGEntryNode	ENTRY		3517279		True				
ANR	3517499	CFGExitNode	EXIT		3517279		True				
ANR	3517500	Symbol	res		3517279						
ANR	3517501	Symbol	malloc		3517279						
ANR	3517502	Symbol	stream -> end_of_message		3517279						
ANR	3517503	Symbol	NULL		3517279						
ANR	3517504	Symbol	daemon_name		3517279						
ANR	3517505	Symbol	daemon_filename		3517279						
ANR	3517506	Symbol	D_ALWAYS		3517279						
ANR	3517507	Symbol	stream -> put_file		3517279						
ANR	3517508	Symbol	daemon_paramname		3517279						
ANR	3517509	Symbol	& size		3517279						
ANR	3517510	Symbol	strlen		3517279						
ANR	3517511	Symbol	size		3517279						
ANR	3517512	Symbol	stream		3517279						
ANR	3517513	Symbol	stream -> code		3517279						
ANR	3517514	Symbol	param		3517279						
ANR	3517515	Symbol	* stream		3517279						
ANR	3517516	Symbol	FALSE		3517279						
ANR	3517517	Function	handle_subsys_command	513:0:14450:15807							
ANR	3517518	FunctionDef	"handle_subsys_command (int cmd , Stream * stream)"		3517517	0					
ANR	3517519	CompoundStatement		515:0:14503:15807	3517517	0					
ANR	3517520	IdentifierDeclStatement	char * subsys = NULL ;	516:1:14506:14525	3517517	0	True				
ANR	3517521	IdentifierDecl	* subsys = NULL		3517517	0					
ANR	3517522	IdentifierDeclType	char *		3517517	0					
ANR	3517523	Identifier	subsys		3517517	1					
ANR	3517524	AssignmentExpression	* subsys = NULL		3517517	2		=			
ANR	3517525	Identifier	NULL		3517517	0					
ANR	3517526	Identifier	NULL		3517517	1					
ANR	3517527	IdentifierDeclStatement	class daemon * daemon ;	517:1:14528:14548	3517517	1	True				
ANR	3517528	IdentifierDecl	* daemon		3517517	0					
ANR	3517529	IdentifierDeclType	class daemon *		3517517	0					
ANR	3517530	Identifier	daemon		3517517	1					
ANR	3517531	ExpressionStatement	stream -> decode ( )	519:1:14552:14568	3517517	2	True				
ANR	3517532	CallExpression	stream -> decode ( )		3517517	0					
ANR	3517533	Callee	stream -> decode		3517517	0					
ANR	3517534	PtrMemberAccess	stream -> decode		3517517	0					
ANR	3517535	Identifier	stream		3517517	0					
ANR	3517536	Identifier	decode		3517517	1					
ANR	3517537	ArgumentList			3517517	1					
ANR	3517538	IfStatement	if ( ! stream -> code ( subsys ) )		3517517	3					
ANR	3517539	Condition	! stream -> code ( subsys )	520:5:14575:14596	3517517	0	True				
ANR	3517540	UnaryOperationExpression	! stream -> code ( subsys )		3517517	0					
ANR	3517541	UnaryOperator	!		3517517	0					
ANR	3517542	CallExpression	stream -> code ( subsys )		3517517	1					
ANR	3517543	Callee	stream -> code		3517517	0					
ANR	3517544	PtrMemberAccess	stream -> code		3517517	0					
ANR	3517545	Identifier	stream		3517517	0					
ANR	3517546	Identifier	code		3517517	1					
ANR	3517547	ArgumentList	subsys		3517517	1					
ANR	3517548	Argument	subsys		3517517	0					
ANR	3517549	Identifier	subsys		3517517	0					
ANR	3517550	CompoundStatement		6:30:96:96	3517517	1					
ANR	3517551	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read subsystem name\\n"" )"	521:2:14604:14654	3517517	0	True				
ANR	3517552	CallExpression	"dprintf ( D_ALWAYS , ""Can't read subsystem name\\n"" )"		3517517	0					
ANR	3517553	Callee	dprintf		3517517	0					
ANR	3517554	Identifier	dprintf		3517517	0					
ANR	3517555	ArgumentList	D_ALWAYS		3517517	1					
ANR	3517556	Argument	D_ALWAYS		3517517	0					
ANR	3517557	Identifier	D_ALWAYS		3517517	0					
ANR	3517558	Argument	"""Can't read subsystem name\\n"""		3517517	1					
ANR	3517559	PrimaryExpression	"""Can't read subsystem name\\n"""		3517517	0					
ANR	3517560	ExpressionStatement	free ( subsys )	522:2:14658:14672	3517517	1	True				
ANR	3517561	CallExpression	free ( subsys )		3517517	0					
ANR	3517562	Callee	free		3517517	0					
ANR	3517563	Identifier	free		3517517	0					
ANR	3517564	ArgumentList	subsys		3517517	1					
ANR	3517565	Argument	subsys		3517517	0					
ANR	3517566	Identifier	subsys		3517517	0					
ANR	3517567	ReturnStatement	return FALSE ;	523:2:14676:14688	3517517	2	True				
ANR	3517568	Identifier	FALSE		3517517	0					
ANR	3517569	IfStatement	if ( ! stream -> end_of_message ( ) )		3517517	4					
ANR	3517570	Condition	! stream -> end_of_message ( )	525:5:14698:14723	3517517	0	True				
ANR	3517571	UnaryOperationExpression	! stream -> end_of_message ( )		3517517	0					
ANR	3517572	UnaryOperator	!		3517517	0					
ANR	3517573	CallExpression	stream -> end_of_message ( )		3517517	1					
ANR	3517574	Callee	stream -> end_of_message		3517517	0					
ANR	3517575	PtrMemberAccess	stream -> end_of_message		3517517	0					
ANR	3517576	Identifier	stream		3517517	0					
ANR	3517577	Identifier	end_of_message		3517517	1					
ANR	3517578	ArgumentList			3517517	1					
ANR	3517579	CompoundStatement		11:34:223:223	3517517	1					
ANR	3517580	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read end_of_message\\n"" )"	526:2:14731:14781	3517517	0	True				
ANR	3517581	CallExpression	"dprintf ( D_ALWAYS , ""Can't read end_of_message\\n"" )"		3517517	0					
ANR	3517582	Callee	dprintf		3517517	0					
ANR	3517583	Identifier	dprintf		3517517	0					
ANR	3517584	ArgumentList	D_ALWAYS		3517517	1					
ANR	3517585	Argument	D_ALWAYS		3517517	0					
ANR	3517586	Identifier	D_ALWAYS		3517517	0					
ANR	3517587	Argument	"""Can't read end_of_message\\n"""		3517517	1					
ANR	3517588	PrimaryExpression	"""Can't read end_of_message\\n"""		3517517	0					
ANR	3517589	ExpressionStatement	free ( subsys )	527:2:14785:14799	3517517	1	True				
ANR	3517590	CallExpression	free ( subsys )		3517517	0					
ANR	3517591	Callee	free		3517517	0					
ANR	3517592	Identifier	free		3517517	0					
ANR	3517593	ArgumentList	subsys		3517517	1					
ANR	3517594	Argument	subsys		3517517	0					
ANR	3517595	Identifier	subsys		3517517	0					
ANR	3517596	ReturnStatement	return FALSE ;	528:2:14803:14815	3517517	2	True				
ANR	3517597	Identifier	FALSE		3517517	0					
ANR	3517598	ExpressionStatement	subsys = strupr ( subsys )	530:1:14821:14846	3517517	5	True				
ANR	3517599	AssignmentExpression	subsys = strupr ( subsys )		3517517	0		=			
ANR	3517600	Identifier	subsys		3517517	0					
ANR	3517601	CallExpression	strupr ( subsys )		3517517	1					
ANR	3517602	Callee	strupr		3517517	0					
ANR	3517603	Identifier	strupr		3517517	0					
ANR	3517604	ArgumentList	subsys		3517517	1					
ANR	3517605	Argument	subsys		3517517	0					
ANR	3517606	Identifier	subsys		3517517	0					
ANR	3517607	IfStatement	if ( ! ( daemon = daemons . FindDaemon ( subsys ) ) )		3517517	6					
ANR	3517608	Condition	! ( daemon = daemons . FindDaemon ( subsys ) )	531:5:14853:14890	3517517	0	True				
ANR	3517609	UnaryOperationExpression	! ( daemon = daemons . FindDaemon ( subsys ) )		3517517	0					
ANR	3517610	UnaryOperator	!		3517517	0					
ANR	3517611	AssignmentExpression	daemon = daemons . FindDaemon ( subsys )		3517517	1		=			
ANR	3517612	Identifier	daemon		3517517	0					
ANR	3517613	CallExpression	daemons . FindDaemon ( subsys )		3517517	1					
ANR	3517614	Callee	daemons . FindDaemon		3517517	0					
ANR	3517615	MemberAccess	daemons . FindDaemon		3517517	0					
ANR	3517616	Identifier	daemons		3517517	0					
ANR	3517617	Identifier	FindDaemon		3517517	1					
ANR	3517618	ArgumentList	subsys		3517517	1					
ANR	3517619	Argument	subsys		3517517	0					
ANR	3517620	Identifier	subsys		3517517	0					
ANR	3517621	CompoundStatement		17:46:390:390	3517517	1					
ANR	3517622	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: Can't find daemon of type \\""%s\\""\\n"" , subsys )"	532:2:14898:14976	3517517	0	True				
ANR	3517623	CallExpression	"dprintf ( D_ALWAYS , ""Error: Can't find daemon of type \\""%s\\""\\n"" , subsys )"		3517517	0					
ANR	3517624	Callee	dprintf		3517517	0					
ANR	3517625	Identifier	dprintf		3517517	0					
ANR	3517626	ArgumentList	D_ALWAYS		3517517	1					
ANR	3517627	Argument	D_ALWAYS		3517517	0					
ANR	3517628	Identifier	D_ALWAYS		3517517	0					
ANR	3517629	Argument	"""Error: Can't find daemon of type \\""%s\\""\\n"""		3517517	1					
ANR	3517630	PrimaryExpression	"""Error: Can't find daemon of type \\""%s\\""\\n"""		3517517	0					
ANR	3517631	Argument	subsys		3517517	2					
ANR	3517632	Identifier	subsys		3517517	0					
ANR	3517633	ExpressionStatement	free ( subsys )	534:2:14980:14994	3517517	1	True				
ANR	3517634	CallExpression	free ( subsys )		3517517	0					
ANR	3517635	Callee	free		3517517	0					
ANR	3517636	Identifier	free		3517517	0					
ANR	3517637	ArgumentList	subsys		3517517	1					
ANR	3517638	Argument	subsys		3517517	0					
ANR	3517639	Identifier	subsys		3517517	0					
ANR	3517640	ReturnStatement	return FALSE ;	535:2:14998:15010	3517517	2	True				
ANR	3517641	Identifier	FALSE		3517517	0					
ANR	3517642	ExpressionStatement	"dprintf ( D_ALWAYS , ""Handling daemon-specific command for \\""%s\\""\\n"" , subsys )"	537:1:15016:15097	3517517	7	True				
ANR	3517643	CallExpression	"dprintf ( D_ALWAYS , ""Handling daemon-specific command for \\""%s\\""\\n"" , subsys )"		3517517	0					
ANR	3517644	Callee	dprintf		3517517	0					
ANR	3517645	Identifier	dprintf		3517517	0					
ANR	3517646	ArgumentList	D_ALWAYS		3517517	1					
ANR	3517647	Argument	D_ALWAYS		3517517	0					
ANR	3517648	Identifier	D_ALWAYS		3517517	0					
ANR	3517649	Argument	"""Handling daemon-specific command for \\""%s\\""\\n"""		3517517	1					
ANR	3517650	PrimaryExpression	"""Handling daemon-specific command for \\""%s\\""\\n"""		3517517	0					
ANR	3517651	Argument	subsys		3517517	2					
ANR	3517652	Identifier	subsys		3517517	0					
ANR	3517653	ExpressionStatement	free ( subsys )	539:1:15100:15114	3517517	8	True				
ANR	3517654	CallExpression	free ( subsys )		3517517	0					
ANR	3517655	Callee	free		3517517	0					
ANR	3517656	Identifier	free		3517517	0					
ANR	3517657	ArgumentList	subsys		3517517	1					
ANR	3517658	Argument	subsys		3517517	0					
ANR	3517659	Identifier	subsys		3517517	0					
ANR	3517660	SwitchStatement	switch ( cmd )		3517517	9					
ANR	3517661	Condition	cmd	541:9:15126:15128	3517517	0	True				
ANR	3517662	Identifier	cmd		3517517	0					
ANR	3517663	CompoundStatement		27:15:628:628	3517517	1					
ANR	3517664	Label	case DAEMON_ON :	542:1:15135:15149	3517517	0	True				
ANR	3517665	Identifier	DAEMON_ON		3517517	0					
ANR	3517666	ExpressionStatement	daemon -> Hold ( false )	543:2:15153:15174	3517517	1	True				
ANR	3517667	CallExpression	daemon -> Hold ( false )		3517517	0					
ANR	3517668	Callee	daemon -> Hold		3517517	0					
ANR	3517669	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517670	Identifier	daemon		3517517	0					
ANR	3517671	Identifier	Hold		3517517	1					
ANR	3517672	ArgumentList	false		3517517	1					
ANR	3517673	Argument	false		3517517	0					
ANR	3517674	Identifier	false		3517517	0					
ANR	3517675	ReturnStatement	return daemon -> Start ( ) ;	544:2:15178:15200	3517517	2	True				
ANR	3517676	CallExpression	daemon -> Start ( )		3517517	0					
ANR	3517677	Callee	daemon -> Start		3517517	0					
ANR	3517678	PtrMemberAccess	daemon -> Start		3517517	0					
ANR	3517679	Identifier	daemon		3517517	0					
ANR	3517680	Identifier	Start		3517517	1					
ANR	3517681	ArgumentList			3517517	1					
ANR	3517682	Label	case DAEMON_OFF :	545:1:15203:15218	3517517	3	True				
ANR	3517683	Identifier	DAEMON_OFF		3517517	0					
ANR	3517684	ExpressionStatement	daemon -> Hold ( true )	546:2:15222:15242	3517517	4	True				
ANR	3517685	CallExpression	daemon -> Hold ( true )		3517517	0					
ANR	3517686	Callee	daemon -> Hold		3517517	0					
ANR	3517687	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517688	Identifier	daemon		3517517	0					
ANR	3517689	Identifier	Hold		3517517	1					
ANR	3517690	ArgumentList	true		3517517	1					
ANR	3517691	Argument	true		3517517	0					
ANR	3517692	Identifier	true		3517517	0					
ANR	3517693	ExpressionStatement	daemon -> Stop ( )	547:2:15246:15260	3517517	5	True				
ANR	3517694	CallExpression	daemon -> Stop ( )		3517517	0					
ANR	3517695	Callee	daemon -> Stop		3517517	0					
ANR	3517696	PtrMemberAccess	daemon -> Stop		3517517	0					
ANR	3517697	Identifier	daemon		3517517	0					
ANR	3517698	Identifier	Stop		3517517	1					
ANR	3517699	ArgumentList			3517517	1					
ANR	3517700	ReturnStatement	return TRUE ;	548:2:15264:15275	3517517	6	True				
ANR	3517701	Identifier	TRUE		3517517	0					
ANR	3517702	Label	case DAEMON_OFF_FAST :	549:1:15278:15298	3517517	7	True				
ANR	3517703	Identifier	DAEMON_OFF_FAST		3517517	0					
ANR	3517704	ExpressionStatement	daemon -> Hold ( true )	550:2:15302:15322	3517517	8	True				
ANR	3517705	CallExpression	daemon -> Hold ( true )		3517517	0					
ANR	3517706	Callee	daemon -> Hold		3517517	0					
ANR	3517707	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517708	Identifier	daemon		3517517	0					
ANR	3517709	Identifier	Hold		3517517	1					
ANR	3517710	ArgumentList	true		3517517	1					
ANR	3517711	Argument	true		3517517	0					
ANR	3517712	Identifier	true		3517517	0					
ANR	3517713	ExpressionStatement	daemon -> StopFast ( )	551:2:15326:15344	3517517	9	True				
ANR	3517714	CallExpression	daemon -> StopFast ( )		3517517	0					
ANR	3517715	Callee	daemon -> StopFast		3517517	0					
ANR	3517716	PtrMemberAccess	daemon -> StopFast		3517517	0					
ANR	3517717	Identifier	daemon		3517517	0					
ANR	3517718	Identifier	StopFast		3517517	1					
ANR	3517719	ArgumentList			3517517	1					
ANR	3517720	ReturnStatement	return TRUE ;	552:2:15348:15359	3517517	10	True				
ANR	3517721	Identifier	TRUE		3517517	0					
ANR	3517722	Label	case DAEMON_OFF_PEACEFUL :	553:1:15362:15386	3517517	11	True				
ANR	3517723	Identifier	DAEMON_OFF_PEACEFUL		3517517	0					
ANR	3517724	ExpressionStatement	daemon -> Hold ( true )	554:2:15390:15410	3517517	12	True				
ANR	3517725	CallExpression	daemon -> Hold ( true )		3517517	0					
ANR	3517726	Callee	daemon -> Hold		3517517	0					
ANR	3517727	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517728	Identifier	daemon		3517517	0					
ANR	3517729	Identifier	Hold		3517517	1					
ANR	3517730	ArgumentList	true		3517517	1					
ANR	3517731	Argument	true		3517517	0					
ANR	3517732	Identifier	true		3517517	0					
ANR	3517733	ExpressionStatement	daemon -> StopPeaceful ( )	555:2:15414:15436	3517517	13	True				
ANR	3517734	CallExpression	daemon -> StopPeaceful ( )		3517517	0					
ANR	3517735	Callee	daemon -> StopPeaceful		3517517	0					
ANR	3517736	PtrMemberAccess	daemon -> StopPeaceful		3517517	0					
ANR	3517737	Identifier	daemon		3517517	0					
ANR	3517738	Identifier	StopPeaceful		3517517	1					
ANR	3517739	ArgumentList			3517517	1					
ANR	3517740	ReturnStatement	return TRUE ;	556:2:15440:15451	3517517	14	True				
ANR	3517741	Identifier	TRUE		3517517	0					
ANR	3517742	Label	case CHILD_ON :	557:1:15454:15467	3517517	15	True				
ANR	3517743	Identifier	CHILD_ON		3517517	0					
ANR	3517744	ExpressionStatement	"daemon -> Hold ( false , true )"	558:2:15471:15498	3517517	16	True				
ANR	3517745	CallExpression	"daemon -> Hold ( false , true )"		3517517	0					
ANR	3517746	Callee	daemon -> Hold		3517517	0					
ANR	3517747	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517748	Identifier	daemon		3517517	0					
ANR	3517749	Identifier	Hold		3517517	1					
ANR	3517750	ArgumentList	false		3517517	1					
ANR	3517751	Argument	false		3517517	0					
ANR	3517752	Identifier	false		3517517	0					
ANR	3517753	Argument	true		3517517	1					
ANR	3517754	Identifier	true		3517517	0					
ANR	3517755	ReturnStatement	return daemon -> Start ( true ) ;	559:2:15502:15530	3517517	17	True				
ANR	3517756	CallExpression	daemon -> Start ( true )		3517517	0					
ANR	3517757	Callee	daemon -> Start		3517517	0					
ANR	3517758	PtrMemberAccess	daemon -> Start		3517517	0					
ANR	3517759	Identifier	daemon		3517517	0					
ANR	3517760	Identifier	Start		3517517	1					
ANR	3517761	ArgumentList	true		3517517	1					
ANR	3517762	Argument	true		3517517	0					
ANR	3517763	Identifier	true		3517517	0					
ANR	3517764	Label	case CHILD_OFF :	560:1:15533:15547	3517517	18	True				
ANR	3517765	Identifier	CHILD_OFF		3517517	0					
ANR	3517766	ExpressionStatement	"daemon -> Hold ( true , true )"	561:2:15551:15577	3517517	19	True				
ANR	3517767	CallExpression	"daemon -> Hold ( true , true )"		3517517	0					
ANR	3517768	Callee	daemon -> Hold		3517517	0					
ANR	3517769	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517770	Identifier	daemon		3517517	0					
ANR	3517771	Identifier	Hold		3517517	1					
ANR	3517772	ArgumentList	true		3517517	1					
ANR	3517773	Argument	true		3517517	0					
ANR	3517774	Identifier	true		3517517	0					
ANR	3517775	Argument	true		3517517	1					
ANR	3517776	Identifier	true		3517517	0					
ANR	3517777	ExpressionStatement	daemon -> Stop ( true )	562:2:15581:15601	3517517	20	True				
ANR	3517778	CallExpression	daemon -> Stop ( true )		3517517	0					
ANR	3517779	Callee	daemon -> Stop		3517517	0					
ANR	3517780	PtrMemberAccess	daemon -> Stop		3517517	0					
ANR	3517781	Identifier	daemon		3517517	0					
ANR	3517782	Identifier	Stop		3517517	1					
ANR	3517783	ArgumentList	true		3517517	1					
ANR	3517784	Argument	true		3517517	0					
ANR	3517785	Identifier	true		3517517	0					
ANR	3517786	ReturnStatement	return TRUE ;	563:2:15605:15616	3517517	21	True				
ANR	3517787	Identifier	TRUE		3517517	0					
ANR	3517788	Label	case CHILD_OFF_FAST :	564:1:15619:15638	3517517	22	True				
ANR	3517789	Identifier	CHILD_OFF_FAST		3517517	0					
ANR	3517790	ExpressionStatement	"daemon -> Hold ( true , true )"	565:2:15642:15668	3517517	23	True				
ANR	3517791	CallExpression	"daemon -> Hold ( true , true )"		3517517	0					
ANR	3517792	Callee	daemon -> Hold		3517517	0					
ANR	3517793	PtrMemberAccess	daemon -> Hold		3517517	0					
ANR	3517794	Identifier	daemon		3517517	0					
ANR	3517795	Identifier	Hold		3517517	1					
ANR	3517796	ArgumentList	true		3517517	1					
ANR	3517797	Argument	true		3517517	0					
ANR	3517798	Identifier	true		3517517	0					
ANR	3517799	Argument	true		3517517	1					
ANR	3517800	Identifier	true		3517517	0					
ANR	3517801	ExpressionStatement	daemon -> StopFast ( true )	566:2:15672:15696	3517517	24	True				
ANR	3517802	CallExpression	daemon -> StopFast ( true )		3517517	0					
ANR	3517803	Callee	daemon -> StopFast		3517517	0					
ANR	3517804	PtrMemberAccess	daemon -> StopFast		3517517	0					
ANR	3517805	Identifier	daemon		3517517	0					
ANR	3517806	Identifier	StopFast		3517517	1					
ANR	3517807	ArgumentList	true		3517517	1					
ANR	3517808	Argument	true		3517517	0					
ANR	3517809	Identifier	true		3517517	0					
ANR	3517810	ReturnStatement	return TRUE ;	567:2:15700:15711	3517517	25	True				
ANR	3517811	Identifier	TRUE		3517517	0					
ANR	3517812	Label	default :	568:1:15714:15721	3517517	26	True				
ANR	3517813	Identifier	default		3517517	0					
ANR	3517814	ExpressionStatement	"EXCEPT ( ""Unknown command (%d) in handle_subsys_command"" , cmd )"	569:2:15725:15787	3517517	27	True				
ANR	3517815	CallExpression	"EXCEPT ( ""Unknown command (%d) in handle_subsys_command"" , cmd )"		3517517	0					
ANR	3517816	Callee	EXCEPT		3517517	0					
ANR	3517817	Identifier	EXCEPT		3517517	0					
ANR	3517818	ArgumentList	"""Unknown command (%d) in handle_subsys_command"""		3517517	1					
ANR	3517819	Argument	"""Unknown command (%d) in handle_subsys_command"""		3517517	0					
ANR	3517820	PrimaryExpression	"""Unknown command (%d) in handle_subsys_command"""		3517517	0					
ANR	3517821	Argument	cmd		3517517	1					
ANR	3517822	Identifier	cmd		3517517	0					
ANR	3517823	ReturnStatement	return FALSE ;	571:1:15793:15805	3517517	10	True				
ANR	3517824	Identifier	FALSE		3517517	0					
ANR	3517825	ReturnType	int		3517517	1					
ANR	3517826	Identifier	handle_subsys_command		3517517	2					
ANR	3517827	ParameterList	"int cmd , Stream * stream"		3517517	3					
ANR	3517828	Parameter	int cmd	514:23:14477:14483	3517517	0	True				
ANR	3517829	ParameterType	int		3517517	0					
ANR	3517830	Identifier	cmd		3517517	1					
ANR	3517831	Parameter	Stream * stream	514:32:14486:14499	3517517	1	True				
ANR	3517832	ParameterType	Stream *		3517517	0					
ANR	3517833	Identifier	stream		3517517	1					
ANR	3517834	CFGEntryNode	ENTRY		3517517		True				
ANR	3517835	CFGExitNode	EXIT		3517517		True				
ANR	3517836	Symbol	stream -> end_of_message		3517517						
ANR	3517837	Symbol	NULL		3517517						
ANR	3517838	Symbol	D_ALWAYS		3517517						
ANR	3517839	Symbol	false		3517517						
ANR	3517840	Symbol	TRUE		3517517						
ANR	3517841	Symbol	daemon		3517517						
ANR	3517842	Symbol	subsys		3517517						
ANR	3517843	Symbol	strupr		3517517						
ANR	3517844	Symbol	stream		3517517						
ANR	3517845	Symbol	stream -> code		3517517						
ANR	3517846	Symbol	* stream		3517517						
ANR	3517847	Symbol	daemons		3517517						
ANR	3517848	Symbol	true		3517517						
ANR	3517849	Symbol	* daemon		3517517						
ANR	3517850	Symbol	FALSE		3517517						
ANR	3517851	Symbol	daemons . FindDaemon		3517517						
ANR	3517852	Symbol	cmd		3517517						
ANR	3517853	Symbol	daemon -> Start		3517517						
ANR	3517854	Function	handle_shutdown_program	575:0:15811:16918							
ANR	3517855	FunctionDef	"handle_shutdown_program (int cmd , Stream * stream)"		3517854	0					
ANR	3517856	CompoundStatement		577:0:15866:16918	3517854	0					
ANR	3517857	IfStatement	if ( cmd != SET_SHUTDOWN_PROGRAM )		3517854	0					
ANR	3517858	Condition	cmd != SET_SHUTDOWN_PROGRAM	578:6:15874:15900	3517854	0	True				
ANR	3517859	EqualityExpression	cmd != SET_SHUTDOWN_PROGRAM		3517854	0		!=			
ANR	3517860	Identifier	cmd		3517854	0					
ANR	3517861	Identifier	SET_SHUTDOWN_PROGRAM		3517854	1					
ANR	3517862	CompoundStatement		2:36:37:37	3517854	1					
ANR	3517863	ExpressionStatement	"EXCEPT ( ""Unknown command (%d) in handle_shutdown_program"" , cmd )"	579:2:15908:15972	3517854	0	True				
ANR	3517864	CallExpression	"EXCEPT ( ""Unknown command (%d) in handle_shutdown_program"" , cmd )"		3517854	0					
ANR	3517865	Callee	EXCEPT		3517854	0					
ANR	3517866	Identifier	EXCEPT		3517854	0					
ANR	3517867	ArgumentList	"""Unknown command (%d) in handle_shutdown_program"""		3517854	1					
ANR	3517868	Argument	"""Unknown command (%d) in handle_shutdown_program"""		3517854	0					
ANR	3517869	PrimaryExpression	"""Unknown command (%d) in handle_shutdown_program"""		3517854	0					
ANR	3517870	Argument	cmd		3517854	1					
ANR	3517871	Identifier	cmd		3517854	0					
ANR	3517872	IdentifierDeclStatement	char * name = NULL ;	582:1:15979:15996	3517854	1	True				
ANR	3517873	IdentifierDecl	* name = NULL		3517854	0					
ANR	3517874	IdentifierDeclType	char *		3517854	0					
ANR	3517875	Identifier	name		3517854	1					
ANR	3517876	AssignmentExpression	* name = NULL		3517854	2		=			
ANR	3517877	Identifier	NULL		3517854	0					
ANR	3517878	Identifier	NULL		3517854	1					
ANR	3517879	ExpressionStatement	stream -> decode ( )	583:1:15999:16015	3517854	2	True				
ANR	3517880	CallExpression	stream -> decode ( )		3517854	0					
ANR	3517881	Callee	stream -> decode		3517854	0					
ANR	3517882	PtrMemberAccess	stream -> decode		3517854	0					
ANR	3517883	Identifier	stream		3517854	0					
ANR	3517884	Identifier	decode		3517854	1					
ANR	3517885	ArgumentList			3517854	1					
ANR	3517886	IfStatement	if ( ! stream -> code ( name ) )		3517854	3					
ANR	3517887	Condition	! stream -> code ( name )	584:5:16022:16041	3517854	0	True				
ANR	3517888	UnaryOperationExpression	! stream -> code ( name )		3517854	0					
ANR	3517889	UnaryOperator	!		3517854	0					
ANR	3517890	CallExpression	stream -> code ( name )		3517854	1					
ANR	3517891	Callee	stream -> code		3517854	0					
ANR	3517892	PtrMemberAccess	stream -> code		3517854	0					
ANR	3517893	Identifier	stream		3517854	0					
ANR	3517894	Identifier	code		3517854	1					
ANR	3517895	ArgumentList	name		3517854	1					
ANR	3517896	Argument	name		3517854	0					
ANR	3517897	Identifier	name		3517854	0					
ANR	3517898	CompoundStatement		8:28:178:178	3517854	1					
ANR	3517899	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read program name\\n"" )"	585:2:16049:16097	3517854	0	True				
ANR	3517900	CallExpression	"dprintf ( D_ALWAYS , ""Can't read program name\\n"" )"		3517854	0					
ANR	3517901	Callee	dprintf		3517854	0					
ANR	3517902	Identifier	dprintf		3517854	0					
ANR	3517903	ArgumentList	D_ALWAYS		3517854	1					
ANR	3517904	Argument	D_ALWAYS		3517854	0					
ANR	3517905	Identifier	D_ALWAYS		3517854	0					
ANR	3517906	Argument	"""Can't read program name\\n"""		3517854	1					
ANR	3517907	PrimaryExpression	"""Can't read program name\\n"""		3517854	0					
ANR	3517908	IfStatement	if ( name )		3517854	1					
ANR	3517909	Condition	name	586:7:16106:16109	3517854	0	True				
ANR	3517910	Identifier	name		3517854	0					
ANR	3517911	CompoundStatement		10:14:246:246	3517854	1					
ANR	3517912	ExpressionStatement	free ( name )	587:3:16118:16130	3517854	0	True				
ANR	3517913	CallExpression	free ( name )		3517854	0					
ANR	3517914	Callee	free		3517854	0					
ANR	3517915	Identifier	free		3517854	0					
ANR	3517916	ArgumentList	name		3517854	1					
ANR	3517917	Argument	name		3517854	0					
ANR	3517918	Identifier	name		3517854	0					
ANR	3517919	ReturnStatement	return FALSE ;	589:2:16138:16150	3517854	2	True				
ANR	3517920	Identifier	FALSE		3517854	0					
ANR	3517921	IdentifierDeclStatement	MyString pname ;	593:1:16198:16212	3517854	4	True				
ANR	3517922	IdentifierDecl	pname		3517854	0					
ANR	3517923	IdentifierDeclType	MyString		3517854	0					
ANR	3517924	Identifier	pname		3517854	1					
ANR	3517925	ExpressionStatement	"pname = ""master_shutdown_"""	594:1:16215:16242	3517854	5	True				
ANR	3517926	AssignmentExpression	"pname = ""master_shutdown_"""		3517854	0		=			
ANR	3517927	Identifier	pname		3517854	0					
ANR	3517928	PrimaryExpression	"""master_shutdown_"""		3517854	1					
ANR	3517929	ExpressionStatement	pname += name	595:1:16245:16258	3517854	6	True				
ANR	3517930	AssignmentExpression	pname += name		3517854	0		+=			
ANR	3517931	Identifier	pname		3517854	0					
ANR	3517932	Identifier	name		3517854	1					
ANR	3517933	IdentifierDeclStatement	char * path = param ( pname . Value ( ) ) ;	596:1:16261:16296	3517854	7	True				
ANR	3517934	IdentifierDecl	* path = param ( pname . Value ( ) )		3517854	0					
ANR	3517935	IdentifierDeclType	char *		3517854	0					
ANR	3517936	Identifier	path		3517854	1					
ANR	3517937	AssignmentExpression	* path = param ( pname . Value ( ) )		3517854	2		=			
ANR	3517938	Identifier	path		3517854	0					
ANR	3517939	CallExpression	param ( pname . Value ( ) )		3517854	1					
ANR	3517940	Callee	param		3517854	0					
ANR	3517941	Identifier	param		3517854	0					
ANR	3517942	ArgumentList	pname . Value ( )		3517854	1					
ANR	3517943	Argument	pname . Value ( )		3517854	0					
ANR	3517944	CallExpression	pname . Value ( )		3517854	0					
ANR	3517945	Callee	pname . Value		3517854	0					
ANR	3517946	MemberAccess	pname . Value		3517854	0					
ANR	3517947	Identifier	pname		3517854	0					
ANR	3517948	Identifier	Value		3517854	1					
ANR	3517949	ArgumentList			3517854	1					
ANR	3517950	IfStatement	if ( NULL == path )		3517854	8					
ANR	3517951	Condition	NULL == path	597:6:16304:16315	3517854	0	True				
ANR	3517952	EqualityExpression	NULL == path		3517854	0		==			
ANR	3517953	Identifier	NULL		3517854	0					
ANR	3517954	Identifier	path		3517854	1					
ANR	3517955	CompoundStatement		21:21:452:452	3517854	1					
ANR	3517956	ExpressionStatement	"dprintf ( D_ALWAYS , ""No shutdown program defined for '%s'\\n"" , name )"	598:2:16323:16390	3517854	0	True				
ANR	3517957	CallExpression	"dprintf ( D_ALWAYS , ""No shutdown program defined for '%s'\\n"" , name )"		3517854	0					
ANR	3517958	Callee	dprintf		3517854	0					
ANR	3517959	Identifier	dprintf		3517854	0					
ANR	3517960	ArgumentList	D_ALWAYS		3517854	1					
ANR	3517961	Argument	D_ALWAYS		3517854	0					
ANR	3517962	Identifier	D_ALWAYS		3517854	0					
ANR	3517963	Argument	"""No shutdown program defined for '%s'\\n"""		3517854	1					
ANR	3517964	PrimaryExpression	"""No shutdown program defined for '%s'\\n"""		3517854	0					
ANR	3517965	Argument	name		3517854	2					
ANR	3517966	Identifier	name		3517854	0					
ANR	3517967	ReturnStatement	return FALSE ;	599:2:16394:16406	3517854	1	True				
ANR	3517968	Identifier	FALSE		3517854	0					
ANR	3517969	Statement	if	603:2:16437:16438	3517854	9	True				
ANR	3517970	Statement	defined	603:5:16440:16446	3517854	10	True				
ANR	3517971	Statement	(	603:12:16447:16447	3517854	11	True				
ANR	3517972	Statement	HAVE_ACCESS	603:13:16448:16458	3517854	12	True				
ANR	3517973	Statement	)	603:24:16459:16459	3517854	13	True				
ANR	3517974	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	604:1:16462:16495	3517854	14	True				
ANR	3517975	IdentifierDecl	priv = set_root_priv ( )		3517854	0					
ANR	3517976	IdentifierDeclType	priv_state		3517854	0					
ANR	3517977	Identifier	priv		3517854	1					
ANR	3517978	AssignmentExpression	priv = set_root_priv ( )		3517854	2		=			
ANR	3517979	Identifier	priv		3517854	0					
ANR	3517980	CallExpression	set_root_priv ( )		3517854	1					
ANR	3517981	Callee	set_root_priv		3517854	0					
ANR	3517982	Identifier	set_root_priv		3517854	0					
ANR	3517983	ArgumentList			3517854	1					
ANR	3517984	IdentifierDeclStatement	"int status = access ( path , X_OK ) ;"	605:1:16498:16531	3517854	15	True				
ANR	3517985	IdentifierDecl	"status = access ( path , X_OK )"		3517854	0					
ANR	3517986	IdentifierDeclType	int		3517854	0					
ANR	3517987	Identifier	status		3517854	1					
ANR	3517988	AssignmentExpression	"status = access ( path , X_OK )"		3517854	2		=			
ANR	3517989	Identifier	status		3517854	0					
ANR	3517990	CallExpression	"access ( path , X_OK )"		3517854	1					
ANR	3517991	Callee	access		3517854	0					
ANR	3517992	Identifier	access		3517854	0					
ANR	3517993	ArgumentList	path		3517854	1					
ANR	3517994	Argument	path		3517854	0					
ANR	3517995	Identifier	path		3517854	0					
ANR	3517996	Argument	X_OK		3517854	1					
ANR	3517997	Identifier	X_OK		3517854	0					
ANR	3517998	IfStatement	if ( status )		3517854	16					
ANR	3517999	Condition	status	606:6:16539:16544	3517854	0	True				
ANR	3518000	Identifier	status		3517854	0					
ANR	3518001	CompoundStatement		30:15:681:681	3517854	1					
ANR	3518002	Statement	dprintf	607:2:16552:16558	3517854	0	True				
ANR	3518003	Statement	(	607:9:16559:16559	3517854	1	True				
ANR	3518004	Statement	D_ALWAYS	607:11:16561:16568	3517854	2	True				
ANR	3518005	Statement	","	607:19:16569:16569	3517854	3	True				
ANR	3518006	Statement	"""WARNING: no execute access to shutdown program (%s)"""	608:5:16576:16628	3517854	4	True				
ANR	3518007	Statement	""": %d/%s\\n"""	609:5:16635:16645	3517854	5	True				
ANR	3518008	Statement	","	609:16:16646:16646	3517854	6	True				
ANR	3518009	Statement	path	609:18:16648:16651	3517854	7	True				
ANR	3518010	Statement	","	609:22:16652:16652	3517854	8	True				
ANR	3518011	Statement	errno	609:24:16654:16658	3517854	9	True				
ANR	3518012	Statement	","	609:29:16659:16659	3517854	10	True				
ANR	3518013	Statement	strerror	609:31:16661:16668	3517854	11	True				
ANR	3518014	Statement	(	609:39:16669:16669	3517854	12	True				
ANR	3518015	Statement	errno	609:40:16670:16674	3517854	13	True				
ANR	3518016	Statement	)	609:45:16675:16675	3517854	14	True				
ANR	3518017	Statement	)	609:47:16677:16677	3517854	15	True				
ANR	3518018	ExpressionStatement		609:48:16678:16678	3517854	16	True				
ANR	3518019	ExpressionStatement	set_priv ( priv )	611:1:16684:16700	3517854	17	True				
ANR	3518020	CallExpression	set_priv ( priv )		3517854	0					
ANR	3518021	Callee	set_priv		3517854	0					
ANR	3518022	Identifier	set_priv		3517854	0					
ANR	3518023	ArgumentList	priv		3517854	1					
ANR	3518024	Argument	priv		3517854	0					
ANR	3518025	Identifier	priv		3517854	0					
ANR	3518026	Statement	endif	612:2:16704:16708	3517854	18	True				
ANR	3518027	IfStatement	if ( shutdown_program )		3517854	19					
ANR	3518028	Condition	shutdown_program	615:6:16745:16760	3517854	0	True				
ANR	3518029	Identifier	shutdown_program		3517854	0					
ANR	3518030	CompoundStatement		39:25:897:897	3517854	1					
ANR	3518031	ExpressionStatement	free ( shutdown_program )	616:2:16768:16792	3517854	0	True				
ANR	3518032	CallExpression	free ( shutdown_program )		3517854	0					
ANR	3518033	Callee	free		3517854	0					
ANR	3518034	Identifier	free		3517854	0					
ANR	3518035	ArgumentList	shutdown_program		3517854	1					
ANR	3518036	Argument	shutdown_program		3517854	0					
ANR	3518037	Identifier	shutdown_program		3517854	0					
ANR	3518038	ExpressionStatement	shutdown_program = path	618:1:16798:16821	3517854	20	True				
ANR	3518039	AssignmentExpression	shutdown_program = path		3517854	0		=			
ANR	3518040	Identifier	shutdown_program		3517854	0					
ANR	3518041	Identifier	path		3517854	1					
ANR	3518042	ExpressionStatement	"dprintf ( D_ALWAYS , ""Shutdown program path set to %s\\n"" , shutdown_program )"	619:1:16824:16902	3517854	21	True				
ANR	3518043	CallExpression	"dprintf ( D_ALWAYS , ""Shutdown program path set to %s\\n"" , shutdown_program )"		3517854	0					
ANR	3518044	Callee	dprintf		3517854	0					
ANR	3518045	Identifier	dprintf		3517854	0					
ANR	3518046	ArgumentList	D_ALWAYS		3517854	1					
ANR	3518047	Argument	D_ALWAYS		3517854	0					
ANR	3518048	Identifier	D_ALWAYS		3517854	0					
ANR	3518049	Argument	"""Shutdown program path set to %s\\n"""		3517854	1					
ANR	3518050	PrimaryExpression	"""Shutdown program path set to %s\\n"""		3517854	0					
ANR	3518051	Argument	shutdown_program		3517854	2					
ANR	3518052	Identifier	shutdown_program		3517854	0					
ANR	3518053	ReturnStatement	return TRUE ;	621:1:16905:16916	3517854	22	True				
ANR	3518054	Identifier	TRUE		3517854	0					
ANR	3518055	ReturnType	int		3517854	1					
ANR	3518056	Identifier	handle_shutdown_program		3517854	2					
ANR	3518057	ParameterList	"int cmd , Stream * stream"		3517854	3					
ANR	3518058	Parameter	int cmd	576:25:15840:15846	3517854	0	True				
ANR	3518059	ParameterType	int		3517854	0					
ANR	3518060	Identifier	cmd		3517854	1					
ANR	3518061	Parameter	Stream * stream	576:34:15849:15862	3517854	1	True				
ANR	3518062	ParameterType	Stream *		3517854	0					
ANR	3518063	Identifier	stream		3517854	1					
ANR	3518064	CFGEntryNode	ENTRY		3517854		True				
ANR	3518065	CFGExitNode	EXIT		3517854		True				
ANR	3518066	Symbol	NULL		3517854						
ANR	3518067	Symbol	access		3517854						
ANR	3518068	Symbol	shutdown_program		3517854						
ANR	3518069	Symbol	pname		3517854						
ANR	3518070	Symbol	pname . Value		3517854						
ANR	3518071	Symbol	D_ALWAYS		3517854						
ANR	3518072	Symbol	TRUE		3517854						
ANR	3518073	Symbol	set_root_priv		3517854						
ANR	3518074	Symbol	X_OK		3517854						
ANR	3518075	Symbol	path		3517854						
ANR	3518076	Symbol	SET_SHUTDOWN_PROGRAM		3517854						
ANR	3518077	Symbol	stream		3517854						
ANR	3518078	Symbol	stream -> code		3517854						
ANR	3518079	Symbol	param		3517854						
ANR	3518080	Symbol	name		3517854						
ANR	3518081	Symbol	* stream		3517854						
ANR	3518082	Symbol	FALSE		3517854						
ANR	3518083	Symbol	cmd		3517854						
ANR	3518084	Symbol	priv		3517854						
ANR	3518085	Symbol	status		3517854						
ANR	3518086	Function	init_params	624:0:16921:19581							
ANR	3518087	FunctionDef	init_params ()		3518086	0					
ANR	3518088	CompoundStatement		626:0:16940:19581	3518086	0					
ANR	3518089	IdentifierDeclStatement	char * tmp ;	627:1:16943:16952	3518086	0	True				
ANR	3518090	IdentifierDecl	* tmp		3518086	0					
ANR	3518091	IdentifierDeclType	char *		3518086	0					
ANR	3518092	Identifier	tmp		3518086	1					
ANR	3518093	Statement	static	628:1:16955:16960	3518086	1	True				
ANR	3518094	IdentifierDeclStatement	int master_name_in_config = 0 ;	628:8:16962:16991	3518086	2	True				
ANR	3518095	IdentifierDecl	master_name_in_config = 0		3518086	0					
ANR	3518096	IdentifierDeclType	int		3518086	0					
ANR	3518097	Identifier	master_name_in_config		3518086	1					
ANR	3518098	AssignmentExpression	master_name_in_config = 0		3518086	2		=			
ANR	3518099	Identifier	master_name_in_config		3518086	0					
ANR	3518100	PrimaryExpression	0		3518086	1					
ANR	3518101	IfStatement	if ( ! master_name_in_config )		3518086	3					
ANR	3518102	Condition	! master_name_in_config	630:5:16999:17021	3518086	0	True				
ANR	3518103	UnaryOperationExpression	! master_name_in_config		3518086	0					
ANR	3518104	UnaryOperator	!		3518086	0					
ANR	3518105	Identifier	master_name_in_config		3518086	1					
ANR	3518106	CompoundStatement		5:31:84:84	3518086	1					
ANR	3518107	IfStatement	if ( ! MasterName )		3518086	0					
ANR	3518108	Condition	! MasterName	632:6:17092:17103	3518086	0	True				
ANR	3518109	UnaryOperationExpression	! MasterName		3518086	0					
ANR	3518110	UnaryOperator	!		3518086	0					
ANR	3518111	Identifier	MasterName		3518086	1					
ANR	3518112	CompoundStatement		7:21:166:166	3518086	1					
ANR	3518113	ExpressionStatement	"tmp = param ( ""MASTER_NAME"" )"	634:3:17143:17171	3518086	0	True				
ANR	3518114	AssignmentExpression	"tmp = param ( ""MASTER_NAME"" )"		3518086	0		=			
ANR	3518115	Identifier	tmp		3518086	0					
ANR	3518116	CallExpression	"param ( ""MASTER_NAME"" )"		3518086	1					
ANR	3518117	Callee	param		3518086	0					
ANR	3518118	Identifier	param		3518086	0					
ANR	3518119	ArgumentList	"""MASTER_NAME"""		3518086	1					
ANR	3518120	Argument	"""MASTER_NAME"""		3518086	0					
ANR	3518121	PrimaryExpression	"""MASTER_NAME"""		3518086	0					
ANR	3518122	IfStatement	if ( tmp )		3518086	1					
ANR	3518123	Condition	tmp	635:7:17180:17182	3518086	0	True				
ANR	3518124	Identifier	tmp		3518086	0					
ANR	3518125	CompoundStatement		10:13:245:245	3518086	1					
ANR	3518126	ExpressionStatement	MasterName = build_valid_daemon_name ( tmp )	636:4:17192:17235	3518086	0	True				
ANR	3518127	AssignmentExpression	MasterName = build_valid_daemon_name ( tmp )		3518086	0		=			
ANR	3518128	Identifier	MasterName		3518086	0					
ANR	3518129	CallExpression	build_valid_daemon_name ( tmp )		3518086	1					
ANR	3518130	Callee	build_valid_daemon_name		3518086	0					
ANR	3518131	Identifier	build_valid_daemon_name		3518086	0					
ANR	3518132	ArgumentList	tmp		3518086	1					
ANR	3518133	Argument	tmp		3518086	0					
ANR	3518134	Identifier	tmp		3518086	0					
ANR	3518135	ExpressionStatement	master_name_in_config = 1	637:4:17241:17266	3518086	1	True				
ANR	3518136	AssignmentExpression	master_name_in_config = 1		3518086	0		=			
ANR	3518137	Identifier	master_name_in_config		3518086	0					
ANR	3518138	PrimaryExpression	1		3518086	1					
ANR	3518139	ExpressionStatement	free ( tmp )	638:4:17272:17283	3518086	2	True				
ANR	3518140	CallExpression	free ( tmp )		3518086	0					
ANR	3518141	Callee	free		3518086	0					
ANR	3518142	Identifier	free		3518086	0					
ANR	3518143	ArgumentList	tmp		3518086	1					
ANR	3518144	Argument	tmp		3518086	0					
ANR	3518145	Identifier	tmp		3518086	0					
ANR	3518146	ElseStatement	else		3518086	0					
ANR	3518147	CompoundStatement		16:8:362:362	3518086	0					
ANR	3518148	Statement	delete	642:2:17307:17312	3518086	0	True				
ANR	3518149	Statement	[	642:9:17314:17314	3518086	1	True				
ANR	3518150	Statement	]	642:10:17315:17315	3518086	2	True				
ANR	3518151	ExpressionStatement	MasterName	642:12:17317:17327	3518086	3	True				
ANR	3518152	Identifier	MasterName		3518086	0					
ANR	3518153	ExpressionStatement	"tmp = param ( ""MASTER_NAME"" )"	643:2:17331:17359	3518086	4	True				
ANR	3518154	AssignmentExpression	"tmp = param ( ""MASTER_NAME"" )"		3518086	0		=			
ANR	3518155	Identifier	tmp		3518086	0					
ANR	3518156	CallExpression	"param ( ""MASTER_NAME"" )"		3518086	1					
ANR	3518157	Callee	param		3518086	0					
ANR	3518158	Identifier	param		3518086	0					
ANR	3518159	ArgumentList	"""MASTER_NAME"""		3518086	1					
ANR	3518160	Argument	"""MASTER_NAME"""		3518086	0					
ANR	3518161	PrimaryExpression	"""MASTER_NAME"""		3518086	0					
ANR	3518162	ExpressionStatement	MasterName = build_valid_daemon_name ( tmp )	644:2:17363:17406	3518086	5	True				
ANR	3518163	AssignmentExpression	MasterName = build_valid_daemon_name ( tmp )		3518086	0		=			
ANR	3518164	Identifier	MasterName		3518086	0					
ANR	3518165	CallExpression	build_valid_daemon_name ( tmp )		3518086	1					
ANR	3518166	Callee	build_valid_daemon_name		3518086	0					
ANR	3518167	Identifier	build_valid_daemon_name		3518086	0					
ANR	3518168	ArgumentList	tmp		3518086	1					
ANR	3518169	Argument	tmp		3518086	0					
ANR	3518170	Identifier	tmp		3518086	0					
ANR	3518171	ExpressionStatement	free ( tmp )	645:2:17410:17421	3518086	6	True				
ANR	3518172	CallExpression	free ( tmp )		3518086	0					
ANR	3518173	Callee	free		3518086	0					
ANR	3518174	Identifier	free		3518086	0					
ANR	3518175	ArgumentList	tmp		3518086	1					
ANR	3518176	Argument	tmp		3518086	0					
ANR	3518177	Identifier	tmp		3518086	0					
ANR	3518178	IfStatement	if ( MasterName )		3518086	4					
ANR	3518179	Condition	MasterName	647:5:17431:17440	3518086	0	True				
ANR	3518180	Identifier	MasterName		3518086	0					
ANR	3518181	CompoundStatement		22:18:503:503	3518086	1					
ANR	3518182	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using name: %s\\n"" , MasterName )"	648:2:17448:17502	3518086	0	True				
ANR	3518183	CallExpression	"dprintf ( D_FULLDEBUG , ""Using name: %s\\n"" , MasterName )"		3518086	0					
ANR	3518184	Callee	dprintf		3518086	0					
ANR	3518185	Identifier	dprintf		3518086	0					
ANR	3518186	ArgumentList	D_FULLDEBUG		3518086	1					
ANR	3518187	Argument	D_FULLDEBUG		3518086	0					
ANR	3518188	Identifier	D_FULLDEBUG		3518086	0					
ANR	3518189	Argument	"""Using name: %s\\n"""		3518086	1					
ANR	3518190	PrimaryExpression	"""Using name: %s\\n"""		3518086	0					
ANR	3518191	Argument	MasterName		3518086	2					
ANR	3518192	Identifier	MasterName		3518086	0					
ANR	3518193	IfStatement	"if ( ! param_boolean_crufty ( ""START_MASTER"" , true ) )"		3518086	5					
ANR	3518194	Condition	"! param_boolean_crufty ( ""START_MASTER"" , true )"	651:5:17516:17558	3518086	0	True				
ANR	3518195	UnaryOperationExpression	"! param_boolean_crufty ( ""START_MASTER"" , true )"		3518086	0					
ANR	3518196	UnaryOperator	!		3518086	0					
ANR	3518197	CallExpression	"param_boolean_crufty ( ""START_MASTER"" , true )"		3518086	1					
ANR	3518198	Callee	param_boolean_crufty		3518086	0					
ANR	3518199	Identifier	param_boolean_crufty		3518086	0					
ANR	3518200	ArgumentList	"""START_MASTER"""		3518086	1					
ANR	3518201	Argument	"""START_MASTER"""		3518086	0					
ANR	3518202	PrimaryExpression	"""START_MASTER"""		3518086	0					
ANR	3518203	Argument	true		3518086	1					
ANR	3518204	Identifier	true		3518086	0					
ANR	3518205	CompoundStatement		26:50:620:620	3518086	1					
ANR	3518206	ExpressionStatement	"dprintf ( D_ALWAYS , ""START_MASTER was set to FALSE, shutting down.\\n"" )"	652:3:17566:17636	3518086	0	True				
ANR	3518207	CallExpression	"dprintf ( D_ALWAYS , ""START_MASTER was set to FALSE, shutting down.\\n"" )"		3518086	0					
ANR	3518208	Callee	dprintf		3518086	0					
ANR	3518209	Identifier	dprintf		3518086	0					
ANR	3518210	ArgumentList	D_ALWAYS		3518086	1					
ANR	3518211	Argument	D_ALWAYS		3518086	0					
ANR	3518212	Identifier	D_ALWAYS		3518086	0					
ANR	3518213	Argument	"""START_MASTER was set to FALSE, shutting down.\\n"""		3518086	1					
ANR	3518214	PrimaryExpression	"""START_MASTER was set to FALSE, shutting down.\\n"""		3518086	0					
ANR	3518215	ExpressionStatement	StartDaemons = FALSE	653:3:17641:17661	3518086	1	True				
ANR	3518216	AssignmentExpression	StartDaemons = FALSE		3518086	0		=			
ANR	3518217	Identifier	StartDaemons		3518086	0					
ANR	3518218	Identifier	FALSE		3518086	1					
ANR	3518219	ExpressionStatement	main_shutdown_graceful ( )	654:3:17666:17690	3518086	2	True				
ANR	3518220	CallExpression	main_shutdown_graceful ( )		3518086	0					
ANR	3518221	Callee	main_shutdown_graceful		3518086	0					
ANR	3518222	Identifier	main_shutdown_graceful		3518086	0					
ANR	3518223	ArgumentList			3518086	1					
ANR	3518224	ExpressionStatement	StartDaemons = TRUE	658:1:17700:17719	3518086	6	True				
ANR	3518225	AssignmentExpression	StartDaemons = TRUE		3518086	0		=			
ANR	3518226	Identifier	StartDaemons		3518086	0					
ANR	3518227	Identifier	TRUE		3518086	1					
ANR	3518228	IfStatement	"if ( ! param_boolean_crufty ( ""START_DAEMONS"" , true ) )"		3518086	7					
ANR	3518229	Condition	"! param_boolean_crufty ( ""START_DAEMONS"" , true )"	659:5:17726:17769	3518086	0	True				
ANR	3518230	UnaryOperationExpression	"! param_boolean_crufty ( ""START_DAEMONS"" , true )"		3518086	0					
ANR	3518231	UnaryOperator	!		3518086	0					
ANR	3518232	CallExpression	"param_boolean_crufty ( ""START_DAEMONS"" , true )"		3518086	1					
ANR	3518233	Callee	param_boolean_crufty		3518086	0					
ANR	3518234	Identifier	param_boolean_crufty		3518086	0					
ANR	3518235	ArgumentList	"""START_DAEMONS"""		3518086	1					
ANR	3518236	Argument	"""START_DAEMONS"""		3518086	0					
ANR	3518237	PrimaryExpression	"""START_DAEMONS"""		3518086	0					
ANR	3518238	Argument	true		3518086	1					
ANR	3518239	Identifier	true		3518086	0					
ANR	3518240	CompoundStatement		34:51:831:831	3518086	1					
ANR	3518241	ExpressionStatement	"dprintf ( D_ALWAYS , ""START_DAEMONS flag was set to FALSE.  Not starting daemons.\\n"" )"	660:3:17777:17868	3518086	0	True				
ANR	3518242	CallExpression	"dprintf ( D_ALWAYS , ""START_DAEMONS flag was set to FALSE.  Not starting daemons.\\n"" )"		3518086	0					
ANR	3518243	Callee	dprintf		3518086	0					
ANR	3518244	Identifier	dprintf		3518086	0					
ANR	3518245	ArgumentList	D_ALWAYS		3518086	1					
ANR	3518246	Argument	D_ALWAYS		3518086	0					
ANR	3518247	Identifier	D_ALWAYS		3518086	0					
ANR	3518248	Argument	"""START_DAEMONS flag was set to FALSE.  Not starting daemons.\\n"""		3518086	1					
ANR	3518249	PrimaryExpression	"""START_DAEMONS flag was set to FALSE.  Not starting daemons.\\n"""		3518086	0					
ANR	3518250	ExpressionStatement	StartDaemons = FALSE	662:3:17873:17893	3518086	1	True				
ANR	3518251	AssignmentExpression	StartDaemons = FALSE		3518086	0		=			
ANR	3518252	Identifier	StartDaemons		3518086	0					
ANR	3518253	Identifier	FALSE		3518086	1					
ANR	3518254	IfStatement	if ( GotDaemonsOff )		3518086	8					
ANR	3518255	Condition	GotDaemonsOff	666:5:17980:17992	3518086	0	True				
ANR	3518256	Identifier	GotDaemonsOff		3518086	0					
ANR	3518257	CompoundStatement		41:21:1055:1055	3518086	1					
ANR	3518258	ExpressionStatement	StartDaemons = FALSE	667:2:18000:18020	3518086	0	True				
ANR	3518259	AssignmentExpression	StartDaemons = FALSE		3518086	0		=			
ANR	3518260	Identifier	StartDaemons		3518086	0					
ANR	3518261	Identifier	FALSE		3518086	1					
ANR	3518262	ExpressionStatement	"PublishObituaries = param_boolean_crufty ( ""PUBLISH_OBITUARIES"" , true ) ? TRUE : FALSE"	670:1:18027:18110	3518086	9	True				
ANR	3518263	AssignmentExpression	"PublishObituaries = param_boolean_crufty ( ""PUBLISH_OBITUARIES"" , true ) ? TRUE : FALSE"		3518086	0		=			
ANR	3518264	Identifier	PublishObituaries		3518086	0					
ANR	3518265	ConditionalExpression	"param_boolean_crufty ( ""PUBLISH_OBITUARIES"" , true ) ? TRUE : FALSE"		3518086	1					
ANR	3518266	Condition	"param_boolean_crufty ( ""PUBLISH_OBITUARIES"" , true )"		3518086	0					
ANR	3518267	CallExpression	"param_boolean_crufty ( ""PUBLISH_OBITUARIES"" , true )"		3518086	0					
ANR	3518268	Callee	param_boolean_crufty		3518086	0					
ANR	3518269	Identifier	param_boolean_crufty		3518086	0					
ANR	3518270	ArgumentList	"""PUBLISH_OBITUARIES"""		3518086	1					
ANR	3518271	Argument	"""PUBLISH_OBITUARIES"""		3518086	0					
ANR	3518272	PrimaryExpression	"""PUBLISH_OBITUARIES"""		3518086	0					
ANR	3518273	Argument	true		3518086	1					
ANR	3518274	Identifier	true		3518086	0					
ANR	3518275	Identifier	TRUE		3518086	1					
ANR	3518276	Identifier	FALSE		3518086	2					
ANR	3518277	ExpressionStatement	"Lines = param_integer ( ""OBITUARY_LOG_LENGTH"" , 20 )"	672:1:18114:18161	3518086	10	True				
ANR	3518278	AssignmentExpression	"Lines = param_integer ( ""OBITUARY_LOG_LENGTH"" , 20 )"		3518086	0		=			
ANR	3518279	Identifier	Lines		3518086	0					
ANR	3518280	CallExpression	"param_integer ( ""OBITUARY_LOG_LENGTH"" , 20 )"		3518086	1					
ANR	3518281	Callee	param_integer		3518086	0					
ANR	3518282	Identifier	param_integer		3518086	0					
ANR	3518283	ArgumentList	"""OBITUARY_LOG_LENGTH"""		3518086	1					
ANR	3518284	Argument	"""OBITUARY_LOG_LENGTH"""		3518086	0					
ANR	3518285	PrimaryExpression	"""OBITUARY_LOG_LENGTH"""		3518086	0					
ANR	3518286	Argument	20		3518086	1					
ANR	3518287	PrimaryExpression	20		3518086	0					
ANR	3518288	ExpressionStatement	"master_backoff_constant = param_integer ( ""MASTER_BACKOFF_CONSTANT"" , 9 , 1 )"	674:1:18165:18239	3518086	11	True				
ANR	3518289	AssignmentExpression	"master_backoff_constant = param_integer ( ""MASTER_BACKOFF_CONSTANT"" , 9 , 1 )"		3518086	0		=			
ANR	3518290	Identifier	master_backoff_constant		3518086	0					
ANR	3518291	CallExpression	"param_integer ( ""MASTER_BACKOFF_CONSTANT"" , 9 , 1 )"		3518086	1					
ANR	3518292	Callee	param_integer		3518086	0					
ANR	3518293	Identifier	param_integer		3518086	0					
ANR	3518294	ArgumentList	"""MASTER_BACKOFF_CONSTANT"""		3518086	1					
ANR	3518295	Argument	"""MASTER_BACKOFF_CONSTANT"""		3518086	0					
ANR	3518296	PrimaryExpression	"""MASTER_BACKOFF_CONSTANT"""		3518086	0					
ANR	3518297	Argument	9		3518086	1					
ANR	3518298	PrimaryExpression	9		3518086	0					
ANR	3518299	Argument	1		3518086	2					
ANR	3518300	PrimaryExpression	1		3518086	0					
ANR	3518301	ExpressionStatement	"master_backoff_ceiling = param_integer ( ""MASTER_BACKOFF_CEILING"" , 3600 , 1 )"	676:1:18243:18317	3518086	12	True				
ANR	3518302	AssignmentExpression	"master_backoff_ceiling = param_integer ( ""MASTER_BACKOFF_CEILING"" , 3600 , 1 )"		3518086	0		=			
ANR	3518303	Identifier	master_backoff_ceiling		3518086	0					
ANR	3518304	CallExpression	"param_integer ( ""MASTER_BACKOFF_CEILING"" , 3600 , 1 )"		3518086	1					
ANR	3518305	Callee	param_integer		3518086	0					
ANR	3518306	Identifier	param_integer		3518086	0					
ANR	3518307	ArgumentList	"""MASTER_BACKOFF_CEILING"""		3518086	1					
ANR	3518308	Argument	"""MASTER_BACKOFF_CEILING"""		3518086	0					
ANR	3518309	PrimaryExpression	"""MASTER_BACKOFF_CEILING"""		3518086	0					
ANR	3518310	Argument	3600		3518086	1					
ANR	3518311	PrimaryExpression	3600		3518086	0					
ANR	3518312	Argument	1		3518086	2					
ANR	3518313	PrimaryExpression	1		3518086	0					
ANR	3518314	ExpressionStatement	"master_backoff_factor = param_double ( ""MASTER_BACKOFF_FACTOR"" , 2.0 , 0 )"	678:1:18321:18392	3518086	13	True				
ANR	3518315	AssignmentExpression	"master_backoff_factor = param_double ( ""MASTER_BACKOFF_FACTOR"" , 2.0 , 0 )"		3518086	0		=			
ANR	3518316	Identifier	master_backoff_factor		3518086	0					
ANR	3518317	CallExpression	"param_double ( ""MASTER_BACKOFF_FACTOR"" , 2.0 , 0 )"		3518086	1					
ANR	3518318	Callee	param_double		3518086	0					
ANR	3518319	Identifier	param_double		3518086	0					
ANR	3518320	ArgumentList	"""MASTER_BACKOFF_FACTOR"""		3518086	1					
ANR	3518321	Argument	"""MASTER_BACKOFF_FACTOR"""		3518086	0					
ANR	3518322	PrimaryExpression	"""MASTER_BACKOFF_FACTOR"""		3518086	0					
ANR	3518323	Argument	2.0		3518086	1					
ANR	3518324	PrimaryExpression	2.0		3518086	0					
ANR	3518325	Argument	0		3518086	2					
ANR	3518326	PrimaryExpression	0		3518086	0					
ANR	3518327	IfStatement	if ( master_backoff_factor <= 0.0 )		3518086	14					
ANR	3518328	Condition	master_backoff_factor <= 0.0	679:5:18399:18426	3518086	0	True				
ANR	3518329	RelationalExpression	master_backoff_factor <= 0.0		3518086	0		<=			
ANR	3518330	Identifier	master_backoff_factor		3518086	0					
ANR	3518331	PrimaryExpression	0.0		3518086	1					
ANR	3518332	CompoundStatement		54:36:1489:1489	3518086	1					
ANR	3518333	ExpressionStatement	master_backoff_factor = 2.0	680:5:18437:18464	3518086	0	True				
ANR	3518334	AssignmentExpression	master_backoff_factor = 2.0		3518086	0		=			
ANR	3518335	Identifier	master_backoff_factor		3518086	0					
ANR	3518336	PrimaryExpression	2.0		3518086	1					
ANR	3518337	ExpressionStatement	"master_recover_time = param_integer ( ""MASTER_RECOVER_FACTOR"" , 300 , 1 )"	683:1:18475:18545	3518086	15	True				
ANR	3518338	AssignmentExpression	"master_recover_time = param_integer ( ""MASTER_RECOVER_FACTOR"" , 300 , 1 )"		3518086	0		=			
ANR	3518339	Identifier	master_recover_time		3518086	0					
ANR	3518340	CallExpression	"param_integer ( ""MASTER_RECOVER_FACTOR"" , 300 , 1 )"		3518086	1					
ANR	3518341	Callee	param_integer		3518086	0					
ANR	3518342	Identifier	param_integer		3518086	0					
ANR	3518343	ArgumentList	"""MASTER_RECOVER_FACTOR"""		3518086	1					
ANR	3518344	Argument	"""MASTER_RECOVER_FACTOR"""		3518086	0					
ANR	3518345	PrimaryExpression	"""MASTER_RECOVER_FACTOR"""		3518086	0					
ANR	3518346	Argument	300		3518086	1					
ANR	3518347	PrimaryExpression	300		3518086	0					
ANR	3518348	Argument	1		3518086	2					
ANR	3518349	PrimaryExpression	1		3518086	0					
ANR	3518350	ExpressionStatement	"update_interval = param_integer ( ""MASTER_UPDATE_INTERVAL"" , 5 * MINUTE , 1 )"	685:1:18549:18623	3518086	16	True				
ANR	3518351	AssignmentExpression	"update_interval = param_integer ( ""MASTER_UPDATE_INTERVAL"" , 5 * MINUTE , 1 )"		3518086	0		=			
ANR	3518352	Identifier	update_interval		3518086	0					
ANR	3518353	CallExpression	"param_integer ( ""MASTER_UPDATE_INTERVAL"" , 5 * MINUTE , 1 )"		3518086	1					
ANR	3518354	Callee	param_integer		3518086	0					
ANR	3518355	Identifier	param_integer		3518086	0					
ANR	3518356	ArgumentList	"""MASTER_UPDATE_INTERVAL"""		3518086	1					
ANR	3518357	Argument	"""MASTER_UPDATE_INTERVAL"""		3518086	0					
ANR	3518358	PrimaryExpression	"""MASTER_UPDATE_INTERVAL"""		3518086	0					
ANR	3518359	Argument	5 * MINUTE		3518086	1					
ANR	3518360	MultiplicativeExpression	5 * MINUTE		3518086	0		*			
ANR	3518361	PrimaryExpression	5		3518086	0					
ANR	3518362	Identifier	MINUTE		3518086	1					
ANR	3518363	Argument	1		3518086	2					
ANR	3518364	PrimaryExpression	1		3518086	0					
ANR	3518365	ExpressionStatement	"check_new_exec_interval = param_integer ( ""MASTER_CHECK_NEW_EXEC_INTERVAL"" , 5 * MINUTE )"	687:1:18627:18712	3518086	17	True				
ANR	3518366	AssignmentExpression	"check_new_exec_interval = param_integer ( ""MASTER_CHECK_NEW_EXEC_INTERVAL"" , 5 * MINUTE )"		3518086	0		=			
ANR	3518367	Identifier	check_new_exec_interval		3518086	0					
ANR	3518368	CallExpression	"param_integer ( ""MASTER_CHECK_NEW_EXEC_INTERVAL"" , 5 * MINUTE )"		3518086	1					
ANR	3518369	Callee	param_integer		3518086	0					
ANR	3518370	Identifier	param_integer		3518086	0					
ANR	3518371	ArgumentList	"""MASTER_CHECK_NEW_EXEC_INTERVAL"""		3518086	1					
ANR	3518372	Argument	"""MASTER_CHECK_NEW_EXEC_INTERVAL"""		3518086	0					
ANR	3518373	PrimaryExpression	"""MASTER_CHECK_NEW_EXEC_INTERVAL"""		3518086	0					
ANR	3518374	Argument	5 * MINUTE		3518086	1					
ANR	3518375	MultiplicativeExpression	5 * MINUTE		3518086	0		*			
ANR	3518376	PrimaryExpression	5		3518086	0					
ANR	3518377	Identifier	MINUTE		3518086	1					
ANR	3518378	ExpressionStatement	"new_bin_delay = param_integer ( ""MASTER_NEW_BINARY_DELAY"" , 2 * MINUTE , 1 )"	689:1:18716:18787	3518086	18	True				
ANR	3518379	AssignmentExpression	"new_bin_delay = param_integer ( ""MASTER_NEW_BINARY_DELAY"" , 2 * MINUTE , 1 )"		3518086	0		=			
ANR	3518380	Identifier	new_bin_delay		3518086	0					
ANR	3518381	CallExpression	"param_integer ( ""MASTER_NEW_BINARY_DELAY"" , 2 * MINUTE , 1 )"		3518086	1					
ANR	3518382	Callee	param_integer		3518086	0					
ANR	3518383	Identifier	param_integer		3518086	0					
ANR	3518384	ArgumentList	"""MASTER_NEW_BINARY_DELAY"""		3518086	1					
ANR	3518385	Argument	"""MASTER_NEW_BINARY_DELAY"""		3518086	0					
ANR	3518386	PrimaryExpression	"""MASTER_NEW_BINARY_DELAY"""		3518086	0					
ANR	3518387	Argument	2 * MINUTE		3518086	1					
ANR	3518388	MultiplicativeExpression	2 * MINUTE		3518086	0		*			
ANR	3518389	PrimaryExpression	2		3518086	0					
ANR	3518390	Identifier	MINUTE		3518086	1					
ANR	3518391	Argument	1		3518086	2					
ANR	3518392	PrimaryExpression	1		3518086	0					
ANR	3518393	ExpressionStatement	"preen_interval = param_integer ( ""PREEN_INTERVAL"" , 24 * HOUR , 0 )"	691:1:18791:18853	3518086	19	True				
ANR	3518394	AssignmentExpression	"preen_interval = param_integer ( ""PREEN_INTERVAL"" , 24 * HOUR , 0 )"		3518086	0		=			
ANR	3518395	Identifier	preen_interval		3518086	0					
ANR	3518396	CallExpression	"param_integer ( ""PREEN_INTERVAL"" , 24 * HOUR , 0 )"		3518086	1					
ANR	3518397	Callee	param_integer		3518086	0					
ANR	3518398	Identifier	param_integer		3518086	0					
ANR	3518399	ArgumentList	"""PREEN_INTERVAL"""		3518086	1					
ANR	3518400	Argument	"""PREEN_INTERVAL"""		3518086	0					
ANR	3518401	PrimaryExpression	"""PREEN_INTERVAL"""		3518086	0					
ANR	3518402	Argument	24 * HOUR		3518086	1					
ANR	3518403	MultiplicativeExpression	24 * HOUR		3518086	0		*			
ANR	3518404	PrimaryExpression	24		3518086	0					
ANR	3518405	Identifier	HOUR		3518086	1					
ANR	3518406	Argument	0		3518086	2					
ANR	3518407	PrimaryExpression	0		3518086	0					
ANR	3518408	IfStatement	if ( preen_interval == 0 )		3518086	20					
ANR	3518409	Condition	preen_interval == 0	692:4:18859:18877	3518086	0	True				
ANR	3518410	EqualityExpression	preen_interval == 0		3518086	0		==			
ANR	3518411	Identifier	preen_interval		3518086	0					
ANR	3518412	PrimaryExpression	0		3518086	1					
ANR	3518413	CompoundStatement		67:25:1939:1939	3518086	1					
ANR	3518414	ExpressionStatement	"EXCEPT ( ""PREEN_INTERVAL in the condor configuration is too low (0).  Please set it to an integer in the range 1 to %d (default %d).  To disable condor_preen entirely, comment out PREEN."" , INT_MAX , 24 * HOUR )"	693:2:18884:19088	3518086	0	True				
ANR	3518415	CallExpression	"EXCEPT ( ""PREEN_INTERVAL in the condor configuration is too low (0).  Please set it to an integer in the range 1 to %d (default %d).  To disable condor_preen entirely, comment out PREEN."" , INT_MAX , 24 * HOUR )"		3518086	0					
ANR	3518416	Callee	EXCEPT		3518086	0					
ANR	3518417	Identifier	EXCEPT		3518086	0					
ANR	3518418	ArgumentList	"""PREEN_INTERVAL in the condor configuration is too low (0).  Please set it to an integer in the range 1 to %d (default %d).  To disable condor_preen entirely, comment out PREEN."""		3518086	1					
ANR	3518419	Argument	"""PREEN_INTERVAL in the condor configuration is too low (0).  Please set it to an integer in the range 1 to %d (default %d).  To disable condor_preen entirely, comment out PREEN."""		3518086	0					
ANR	3518420	PrimaryExpression	"""PREEN_INTERVAL in the condor configuration is too low (0).  Please set it to an integer in the range 1 to %d (default %d).  To disable condor_preen entirely, comment out PREEN."""		3518086	0					
ANR	3518421	Argument	INT_MAX		3518086	1					
ANR	3518422	Identifier	INT_MAX		3518086	0					
ANR	3518423	Argument	24 * HOUR		3518086	2					
ANR	3518424	MultiplicativeExpression	24 * HOUR		3518086	0		*			
ANR	3518425	PrimaryExpression	24		3518086	0					
ANR	3518426	Identifier	HOUR		3518086	1					
ANR	3518427	ExpressionStatement	"shutdown_fast_timeout = param_integer ( ""SHUTDOWN_FAST_TIMEOUT"" , 5 * MINUTE , 1 )"	697:1:19096:19173	3518086	21	True				
ANR	3518428	AssignmentExpression	"shutdown_fast_timeout = param_integer ( ""SHUTDOWN_FAST_TIMEOUT"" , 5 * MINUTE , 1 )"		3518086	0		=			
ANR	3518429	Identifier	shutdown_fast_timeout		3518086	0					
ANR	3518430	CallExpression	"param_integer ( ""SHUTDOWN_FAST_TIMEOUT"" , 5 * MINUTE , 1 )"		3518086	1					
ANR	3518431	Callee	param_integer		3518086	0					
ANR	3518432	Identifier	param_integer		3518086	0					
ANR	3518433	ArgumentList	"""SHUTDOWN_FAST_TIMEOUT"""		3518086	1					
ANR	3518434	Argument	"""SHUTDOWN_FAST_TIMEOUT"""		3518086	0					
ANR	3518435	PrimaryExpression	"""SHUTDOWN_FAST_TIMEOUT"""		3518086	0					
ANR	3518436	Argument	5 * MINUTE		3518086	1					
ANR	3518437	MultiplicativeExpression	5 * MINUTE		3518086	0		*			
ANR	3518438	PrimaryExpression	5		3518086	0					
ANR	3518439	Identifier	MINUTE		3518086	1					
ANR	3518440	Argument	1		3518086	2					
ANR	3518441	PrimaryExpression	1		3518086	0					
ANR	3518442	ExpressionStatement	"shutdown_graceful_timeout = param_integer ( ""SHUTDOWN_GRACEFUL_TIMEOUT"" , 30 * MINUTE , 1 )"	699:1:19177:19263	3518086	22	True				
ANR	3518443	AssignmentExpression	"shutdown_graceful_timeout = param_integer ( ""SHUTDOWN_GRACEFUL_TIMEOUT"" , 30 * MINUTE , 1 )"		3518086	0		=			
ANR	3518444	Identifier	shutdown_graceful_timeout		3518086	0					
ANR	3518445	CallExpression	"param_integer ( ""SHUTDOWN_GRACEFUL_TIMEOUT"" , 30 * MINUTE , 1 )"		3518086	1					
ANR	3518446	Callee	param_integer		3518086	0					
ANR	3518447	Identifier	param_integer		3518086	0					
ANR	3518448	ArgumentList	"""SHUTDOWN_GRACEFUL_TIMEOUT"""		3518086	1					
ANR	3518449	Argument	"""SHUTDOWN_GRACEFUL_TIMEOUT"""		3518086	0					
ANR	3518450	PrimaryExpression	"""SHUTDOWN_GRACEFUL_TIMEOUT"""		3518086	0					
ANR	3518451	Argument	30 * MINUTE		3518086	1					
ANR	3518452	MultiplicativeExpression	30 * MINUTE		3518086	0		*			
ANR	3518453	PrimaryExpression	30		3518086	0					
ANR	3518454	Identifier	MINUTE		3518086	1					
ANR	3518455	Argument	1		3518086	2					
ANR	3518456	PrimaryExpression	1		3518086	0					
ANR	3518457	ExpressionStatement	"AllowAdminCommands = param_boolean ( ""ALLOW_ADMIN_COMMANDS"" , true )"	701:1:19267:19333	3518086	23	True				
ANR	3518458	AssignmentExpression	"AllowAdminCommands = param_boolean ( ""ALLOW_ADMIN_COMMANDS"" , true )"		3518086	0		=			
ANR	3518459	Identifier	AllowAdminCommands		3518086	0					
ANR	3518460	CallExpression	"param_boolean ( ""ALLOW_ADMIN_COMMANDS"" , true )"		3518086	1					
ANR	3518461	Callee	param_boolean		3518086	0					
ANR	3518462	Identifier	param_boolean		3518086	0					
ANR	3518463	ArgumentList	"""ALLOW_ADMIN_COMMANDS"""		3518086	1					
ANR	3518464	Argument	"""ALLOW_ADMIN_COMMANDS"""		3518086	0					
ANR	3518465	PrimaryExpression	"""ALLOW_ADMIN_COMMANDS"""		3518086	0					
ANR	3518466	Argument	true		3518086	1					
ANR	3518467	Identifier	true		3518086	0					
ANR	3518468	IfStatement	if ( FS_Preen )		3518086	24					
ANR	3518469	Condition	FS_Preen	703:5:19341:19348	3518086	0	True				
ANR	3518470	Identifier	FS_Preen		3518086	0					
ANR	3518471	CompoundStatement		78:16:2411:2411	3518086	1					
ANR	3518472	ExpressionStatement	free ( FS_Preen )	704:2:19356:19372	3518086	0	True				
ANR	3518473	CallExpression	free ( FS_Preen )		3518086	0					
ANR	3518474	Callee	free		3518086	0					
ANR	3518475	Identifier	free		3518086	0					
ANR	3518476	ArgumentList	FS_Preen		3518086	1					
ANR	3518477	Argument	FS_Preen		3518086	0					
ANR	3518478	Identifier	FS_Preen		3518086	0					
ANR	3518479	ExpressionStatement	"FS_Preen = param ( ""PREEN"" )"	706:1:19378:19405	3518086	25	True				
ANR	3518480	AssignmentExpression	"FS_Preen = param ( ""PREEN"" )"		3518086	0		=			
ANR	3518481	Identifier	FS_Preen		3518086	0					
ANR	3518482	CallExpression	"param ( ""PREEN"" )"		3518086	1					
ANR	3518483	Callee	param		3518086	0					
ANR	3518484	Identifier	param		3518086	0					
ANR	3518485	ArgumentList	"""PREEN"""		3518086	1					
ANR	3518486	Argument	"""PREEN"""		3518086	0					
ANR	3518487	PrimaryExpression	"""PREEN"""		3518086	0					
ANR	3518488	IfStatement	"if ( GetEnv ( ""GCB_INAGENT"" ) )"		3518086	26					
ANR	3518489	Condition	"GetEnv ( ""GCB_INAGENT"" )"	709:6:19431:19451	3518086	0	True				
ANR	3518490	CallExpression	"GetEnv ( ""GCB_INAGENT"" )"		3518086	0					
ANR	3518491	Callee	GetEnv		3518086	0					
ANR	3518492	Identifier	GetEnv		3518086	0					
ANR	3518493	ArgumentList	"""GCB_INAGENT"""		3518086	1					
ANR	3518494	Argument	"""GCB_INAGENT"""		3518086	0					
ANR	3518495	PrimaryExpression	"""GCB_INAGENT"""		3518086	0					
ANR	3518496	CompoundStatement		84:30:2514:2514	3518086	1					
ANR	3518497	ExpressionStatement	"GCB_Broker_down_callback_set ( gcbBrokerDownCallback , param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 ) )"	710:2:19459:19568	3518086	0	True				
ANR	3518498	CallExpression	"GCB_Broker_down_callback_set ( gcbBrokerDownCallback , param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 ) )"		3518086	0					
ANR	3518499	Callee	GCB_Broker_down_callback_set		3518086	0					
ANR	3518500	Identifier	GCB_Broker_down_callback_set		3518086	0					
ANR	3518501	ArgumentList	gcbBrokerDownCallback		3518086	1					
ANR	3518502	Argument	gcbBrokerDownCallback		3518086	0					
ANR	3518503	Identifier	gcbBrokerDownCallback		3518086	0					
ANR	3518504	Argument	"param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 )"		3518086	1					
ANR	3518505	CallExpression	"param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 )"		3518086	0					
ANR	3518506	Callee	param_integer		3518086	0					
ANR	3518507	Identifier	param_integer		3518086	0					
ANR	3518508	ArgumentList	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3518086	1					
ANR	3518509	Argument	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3518086	0					
ANR	3518510	PrimaryExpression	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3518086	0					
ANR	3518511	Argument	300		3518086	1					
ANR	3518512	PrimaryExpression	300		3518086	0					
ANR	3518513	ReturnType	void		3518086	1					
ANR	3518514	Identifier	init_params		3518086	2					
ANR	3518515	ParameterList			3518086	3					
ANR	3518516	CFGEntryNode	ENTRY		3518086		True				
ANR	3518517	CFGExitNode	EXIT		3518086		True				
ANR	3518518	Symbol	gcbBrokerDownCallback		3518086						
ANR	3518519	Symbol	check_new_exec_interval		3518086						
ANR	3518520	Symbol	HOUR		3518086						
ANR	3518521	Symbol	param_double		3518086						
ANR	3518522	Symbol	FS_Preen		3518086						
ANR	3518523	Symbol	param		3518086						
ANR	3518524	Symbol	tmp		3518086						
ANR	3518525	Symbol	build_valid_daemon_name		3518086						
ANR	3518526	Symbol	new_bin_delay		3518086						
ANR	3518527	Symbol	INT_MAX		3518086						
ANR	3518528	Symbol	param_boolean_crufty		3518086						
ANR	3518529	Symbol	MINUTE		3518086						
ANR	3518530	Symbol	master_backoff_constant		3518086						
ANR	3518531	Symbol	shutdown_graceful_timeout		3518086						
ANR	3518532	Symbol	shutdown_fast_timeout		3518086						
ANR	3518533	Symbol	D_ALWAYS		3518086						
ANR	3518534	Symbol	master_backoff_factor		3518086						
ANR	3518535	Symbol	TRUE		3518086						
ANR	3518536	Symbol	D_FULLDEBUG		3518086						
ANR	3518537	Symbol	param_boolean		3518086						
ANR	3518538	Symbol	MasterName		3518086						
ANR	3518539	Symbol	StartDaemons		3518086						
ANR	3518540	Symbol	AllowAdminCommands		3518086						
ANR	3518541	Symbol	master_name_in_config		3518086						
ANR	3518542	Symbol	master_recover_time		3518086						
ANR	3518543	Symbol	GotDaemonsOff		3518086						
ANR	3518544	Symbol	update_interval		3518086						
ANR	3518545	Symbol	true		3518086						
ANR	3518546	Symbol	FALSE		3518086						
ANR	3518547	Symbol	param_integer		3518086						
ANR	3518548	Symbol	GetEnv		3518086						
ANR	3518549	Symbol	master_backoff_ceiling		3518086						
ANR	3518550	Symbol	preen_interval		3518086						
ANR	3518551	Symbol	PublishObituaries		3518086						
ANR	3518552	Symbol	Lines		3518086						
ANR	3518553	Function	init_daemon_list	718:0:19585:23809							
ANR	3518554	FunctionDef	init_daemon_list ()		3518553	0					
ANR	3518555	CompoundStatement		720:0:19609:23809	3518553	0					
ANR	3518556	IdentifierDeclStatement	char * daemon_name ;	721:1:19612:19629	3518553	0	True				
ANR	3518557	IdentifierDecl	* daemon_name		3518553	0					
ANR	3518558	IdentifierDeclType	char *		3518553	0					
ANR	3518559	Identifier	daemon_name		3518553	1					
ANR	3518560	IdentifierDeclStatement	class daemon * new_daemon ;	722:1:19632:19656	3518553	1	True				
ANR	3518561	IdentifierDecl	* new_daemon		3518553	0					
ANR	3518562	IdentifierDeclType	class daemon *		3518553	0					
ANR	3518563	Identifier	new_daemon		3518553	1					
ANR	3518564	IdentifierDeclStatement	"StringList daemon_names , dc_daemon_names ;"	723:1:19659:19699	3518553	2	True				
ANR	3518565	IdentifierDecl	daemon_names		3518553	0					
ANR	3518566	IdentifierDeclType	StringList		3518553	0					
ANR	3518567	Identifier	daemon_names		3518553	1					
ANR	3518568	IdentifierDecl	dc_daemon_names		3518553	1					
ANR	3518569	IdentifierDeclType	StringList		3518553	0					
ANR	3518570	Identifier	dc_daemon_names		3518553	1					
ANR	3518571	ExpressionStatement	daemons . ordered_daemon_names . clearAll ( )	725:1:19703:19742	3518553	3	True				
ANR	3518572	CallExpression	daemons . ordered_daemon_names . clearAll ( )		3518553	0					
ANR	3518573	Callee	daemons . ordered_daemon_names . clearAll		3518553	0					
ANR	3518574	MemberAccess	daemons . ordered_daemon_names . clearAll		3518553	0					
ANR	3518575	MemberAccess	daemons . ordered_daemon_names		3518553	0					
ANR	3518576	Identifier	daemons		3518553	0					
ANR	3518577	Identifier	ordered_daemon_names		3518553	1					
ANR	3518578	Identifier	clearAll		3518553	1					
ANR	3518579	ArgumentList			3518553	1					
ANR	3518580	IdentifierDeclStatement	"char * dc_daemon_list = param ( ""DC_DAEMON_LIST"" ) ;"	726:1:19745:19791	3518553	4	True				
ANR	3518581	IdentifierDecl	"* dc_daemon_list = param ( ""DC_DAEMON_LIST"" )"		3518553	0					
ANR	3518582	IdentifierDeclType	char *		3518553	0					
ANR	3518583	Identifier	dc_daemon_list		3518553	1					
ANR	3518584	AssignmentExpression	"* dc_daemon_list = param ( ""DC_DAEMON_LIST"" )"		3518553	2		=			
ANR	3518585	Identifier	dc_daemon_list		3518553	0					
ANR	3518586	CallExpression	"param ( ""DC_DAEMON_LIST"" )"		3518553	1					
ANR	3518587	Callee	param		3518553	0					
ANR	3518588	Identifier	param		3518553	0					
ANR	3518589	ArgumentList	"""DC_DAEMON_LIST"""		3518553	1					
ANR	3518590	Argument	"""DC_DAEMON_LIST"""		3518553	0					
ANR	3518591	PrimaryExpression	"""DC_DAEMON_LIST"""		3518553	0					
ANR	3518592	IfStatement	if ( ! dc_daemon_list )		3518553	5					
ANR	3518593	Condition	! dc_daemon_list	728:5:19799:19813	3518553	0	True				
ANR	3518594	UnaryOperationExpression	! dc_daemon_list		3518553	0					
ANR	3518595	UnaryOperator	!		3518553	0					
ANR	3518596	Identifier	dc_daemon_list		3518553	1					
ANR	3518597	CompoundStatement		9:23:207:207	3518553	1					
ANR	3518598	ExpressionStatement	dc_daemon_names . initializeFromString ( default_dc_daemon_list )	729:2:19821:19881	3518553	0	True				
ANR	3518599	CallExpression	dc_daemon_names . initializeFromString ( default_dc_daemon_list )		3518553	0					
ANR	3518600	Callee	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518601	MemberAccess	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518602	Identifier	dc_daemon_names		3518553	0					
ANR	3518603	Identifier	initializeFromString		3518553	1					
ANR	3518604	ArgumentList	default_dc_daemon_list		3518553	1					
ANR	3518605	Argument	default_dc_daemon_list		3518553	0					
ANR	3518606	Identifier	default_dc_daemon_list		3518553	0					
ANR	3518607	ElseStatement	else		3518553	0					
ANR	3518608	CompoundStatement		12:6:282:282	3518553	0					
ANR	3518609	IfStatement	if ( * dc_daemon_list == '+' )		3518553	0					
ANR	3518610	Condition	* dc_daemon_list == '+'	732:7:19901:19922	3518553	0	True				
ANR	3518611	EqualityExpression	* dc_daemon_list == '+'		3518553	0		==			
ANR	3518612	UnaryOperationExpression	* dc_daemon_list		3518553	0					
ANR	3518613	UnaryOperator	*		3518553	0					
ANR	3518614	Identifier	dc_daemon_list		3518553	1					
ANR	3518615	PrimaryExpression	'+'		3518553	1					
ANR	3518616	CompoundStatement		14:3:321:336	3518553	1					
ANR	3518617	IdentifierDeclStatement	MyString dclist ;	733:3:19931:19946	3518553	0	True				
ANR	3518618	IdentifierDecl	dclist		3518553	0					
ANR	3518619	IdentifierDeclType	MyString		3518553	0					
ANR	3518620	Identifier	dclist		3518553	1					
ANR	3518621	ExpressionStatement	dclist = default_dc_daemon_list	734:3:19951:19982	3518553	1	True				
ANR	3518622	AssignmentExpression	dclist = default_dc_daemon_list		3518553	0		=			
ANR	3518623	Identifier	dclist		3518553	0					
ANR	3518624	Identifier	default_dc_daemon_list		3518553	1					
ANR	3518625	ExpressionStatement	"dclist += "", """	735:3:19987:20001	3518553	2	True				
ANR	3518626	AssignmentExpression	"dclist += "", """		3518553	0		+=			
ANR	3518627	Identifier	dclist		3518553	0					
ANR	3518628	PrimaryExpression	""", """		3518553	1					
ANR	3518629	ExpressionStatement	dclist += & dc_daemon_list [ 1 ]	736:3:20006:20034	3518553	3	True				
ANR	3518630	AssignmentExpression	dclist += & dc_daemon_list [ 1 ]		3518553	0		+=			
ANR	3518631	Identifier	dclist		3518553	0					
ANR	3518632	UnaryOperationExpression	& dc_daemon_list [ 1 ]		3518553	1					
ANR	3518633	UnaryOperator	&		3518553	0					
ANR	3518634	ArrayIndexing	dc_daemon_list [ 1 ]		3518553	1					
ANR	3518635	Identifier	dc_daemon_list		3518553	0					
ANR	3518636	PrimaryExpression	1		3518553	1					
ANR	3518637	ExpressionStatement	dc_daemon_names . initializeFromString ( dclist . Value ( ) )	737:3:20039:20093	3518553	4	True				
ANR	3518638	CallExpression	dc_daemon_names . initializeFromString ( dclist . Value ( ) )		3518553	0					
ANR	3518639	Callee	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518640	MemberAccess	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518641	Identifier	dc_daemon_names		3518553	0					
ANR	3518642	Identifier	initializeFromString		3518553	1					
ANR	3518643	ArgumentList	dclist . Value ( )		3518553	1					
ANR	3518644	Argument	dclist . Value ( )		3518553	0					
ANR	3518645	CallExpression	dclist . Value ( )		3518553	0					
ANR	3518646	Callee	dclist . Value		3518553	0					
ANR	3518647	MemberAccess	dclist . Value		3518553	0					
ANR	3518648	Identifier	dclist		3518553	0					
ANR	3518649	Identifier	Value		3518553	1					
ANR	3518650	ArgumentList			3518553	1					
ANR	3518651	ElseStatement	else		3518553	0					
ANR	3518652	CompoundStatement		26:3:661:676	3518553	0					
ANR	3518653	ExpressionStatement	dc_daemon_names . initializeFromString ( dc_daemon_list )	740:3:20111:20163	3518553	0	True				
ANR	3518654	CallExpression	dc_daemon_names . initializeFromString ( dc_daemon_list )		3518553	0					
ANR	3518655	Callee	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518656	MemberAccess	dc_daemon_names . initializeFromString		3518553	0					
ANR	3518657	Identifier	dc_daemon_names		3518553	0					
ANR	3518658	Identifier	initializeFromString		3518553	1					
ANR	3518659	ArgumentList	dc_daemon_list		3518553	1					
ANR	3518660	Argument	dc_daemon_list		3518553	0					
ANR	3518661	Identifier	dc_daemon_list		3518553	0					
ANR	3518662	IdentifierDeclStatement	StringList default_list ( default_dc_daemon_list ) ;	742:3:20169:20216	3518553	1	True				
ANR	3518663	IdentifierDecl	default_list ( default_dc_daemon_list )		3518553	0					
ANR	3518664	IdentifierDeclType	StringList		3518553	0					
ANR	3518665	Identifier	default_list		3518553	1					
ANR	3518666	Identifier	default_dc_daemon_list		3518553	2					
ANR	3518667	ExpressionStatement	default_list . rewind ( )	743:3:20221:20242	3518553	2	True				
ANR	3518668	CallExpression	default_list . rewind ( )		3518553	0					
ANR	3518669	Callee	default_list . rewind		3518553	0					
ANR	3518670	MemberAccess	default_list . rewind		3518553	0					
ANR	3518671	Identifier	default_list		3518553	0					
ANR	3518672	Identifier	rewind		3518553	1					
ANR	3518673	ArgumentList			3518553	1					
ANR	3518674	IdentifierDeclStatement	char * default_entry ;	744:3:20247:20266	3518553	3	True				
ANR	3518675	IdentifierDecl	* default_entry		3518553	0					
ANR	3518676	IdentifierDeclType	char *		3518553	0					
ANR	3518677	Identifier	default_entry		3518553	1					
ANR	3518678	IdentifierDeclStatement	int missing = 0 ;	745:3:20271:20286	3518553	4	True				
ANR	3518679	IdentifierDecl	missing = 0		3518553	0					
ANR	3518680	IdentifierDeclType	int		3518553	0					
ANR	3518681	Identifier	missing		3518553	1					
ANR	3518682	AssignmentExpression	missing = 0		3518553	2		=			
ANR	3518683	Identifier	missing		3518553	0					
ANR	3518684	PrimaryExpression	0		3518553	1					
ANR	3518685	WhileStatement	while ( ( default_entry = default_list . next ( ) ) )		3518553	5					
ANR	3518686	Condition	default_entry = default_list . next ( )	746:10:20298:20332	3518553	0	True				
ANR	3518687	AssignmentExpression	default_entry = default_list . next ( )		3518553	0		=			
ANR	3518688	Identifier	default_entry		3518553	0					
ANR	3518689	CallExpression	default_list . next ( )		3518553	1					
ANR	3518690	Callee	default_list . next		3518553	0					
ANR	3518691	MemberAccess	default_list . next		3518553	0					
ANR	3518692	Identifier	default_list		3518553	0					
ANR	3518693	Identifier	next		3518553	1					
ANR	3518694	ArgumentList			3518553	1					
ANR	3518695	CompoundStatement		27:48:726:726	3518553	1					
ANR	3518696	IfStatement	if ( ! dc_daemon_names . contains_anycase ( default_entry ) )		3518553	0					
ANR	3518697	Condition	! dc_daemon_names . contains_anycase ( default_entry )	747:8:20346:20393	3518553	0	True				
ANR	3518698	UnaryOperationExpression	! dc_daemon_names . contains_anycase ( default_entry )		3518553	0					
ANR	3518699	UnaryOperator	!		3518553	0					
ANR	3518700	CallExpression	dc_daemon_names . contains_anycase ( default_entry )		3518553	1					
ANR	3518701	Callee	dc_daemon_names . contains_anycase		3518553	0					
ANR	3518702	MemberAccess	dc_daemon_names . contains_anycase		3518553	0					
ANR	3518703	Identifier	dc_daemon_names		3518553	0					
ANR	3518704	Identifier	contains_anycase		3518553	1					
ANR	3518705	ArgumentList	default_entry		3518553	1					
ANR	3518706	Argument	default_entry		3518553	0					
ANR	3518707	Identifier	default_entry		3518553	0					
ANR	3518708	CompoundStatement		28:59:787:787	3518553	1					
ANR	3518709	Statement	dprintf	748:5:20404:20410	3518553	0	True				
ANR	3518710	Statement	(	748:12:20411:20411	3518553	1	True				
ANR	3518711	Statement	D_ALWAYS	748:13:20412:20419	3518553	2	True				
ANR	3518712	Statement	","	748:21:20420:20420	3518553	3	True				
ANR	3518713	Statement	"""WARNING: expected to find %s in"""	749:7:20429:20461	3518553	4	True				
ANR	3518714	Statement	""" DC_DAEMON_LIST, but it is not there.\\n"""	750:7:20470:20510	3518553	5	True				
ANR	3518715	Statement	","	750:48:20511:20511	3518553	6	True				
ANR	3518716	Statement	default_entry	751:7:20520:20532	3518553	7	True				
ANR	3518717	Statement	)	751:21:20534:20534	3518553	8	True				
ANR	3518718	ExpressionStatement		751:22:20535:20535	3518553	9	True				
ANR	3518719	ExpressionStatement	missing ++	752:5:20542:20551	3518553	10	True				
ANR	3518720	PostIncDecOperationExpression	missing ++		3518553	0					
ANR	3518721	Identifier	missing		3518553	0					
ANR	3518722	IncDec	++		3518553	1					
ANR	3518723	IfStatement	if ( missing )		3518553	6					
ANR	3518724	Condition	missing	755:8:20572:20578	3518553	0	True				
ANR	3518725	Identifier	missing		3518553	0					
ANR	3518726	CompoundStatement		36:18:972:972	3518553	1					
ANR	3518727	Statement	dprintf	756:4:20588:20594	3518553	0	True				
ANR	3518728	Statement	(	756:11:20595:20595	3518553	1	True				
ANR	3518729	Statement	D_ALWAYS	756:13:20597:20604	3518553	2	True				
ANR	3518730	Statement	","	756:21:20605:20605	3518553	3	True				
ANR	3518731	Statement	"""WARNING: """	757:7:20614:20624	3518553	4	True				
ANR	3518732	Statement	"""%d entries are missing from DC_DAEMON_LIST.  """	758:7:20633:20679	3518553	5	True				
ANR	3518733	Statement	"""Unless you know what you are doing, it """	759:7:20688:20728	3518553	6	True				
ANR	3518734	Statement	"""is best to leave DC_DAEMON_LIST undefined """	760:7:20737:20780	3518553	7	True				
ANR	3518735	Statement	"""so that the default settings are used, """	761:7:20789:20829	3518553	8	True				
ANR	3518736	Statement	"""or use the new 'DC_DAEMON_LIST = """	762:7:20838:20872	3518553	9	True				
ANR	3518737	Statement	"""+<list>' syntax.\\n"""	763:7:20881:20900	3518553	10	True				
ANR	3518738	Statement	","	763:27:20901:20901	3518553	11	True				
ANR	3518739	Statement	missing	763:29:20903:20909	3518553	12	True				
ANR	3518740	Statement	)	763:37:20911:20911	3518553	13	True				
ANR	3518741	ExpressionStatement		763:38:20912:20912	3518553	14	True				
ANR	3518742	ExpressionStatement	free ( dc_daemon_list )	767:2:20930:20950	3518553	1	True				
ANR	3518743	CallExpression	free ( dc_daemon_list )		3518553	0					
ANR	3518744	Callee	free		3518553	0					
ANR	3518745	Identifier	free		3518553	0					
ANR	3518746	ArgumentList	dc_daemon_list		3518553	1					
ANR	3518747	Argument	dc_daemon_list		3518553	0					
ANR	3518748	Identifier	dc_daemon_list		3518553	0					
ANR	3518749	ExpressionStatement	"dc_daemon_names . remove ( """" )"	771:1:21000:21028	3518553	6	True				
ANR	3518750	CallExpression	"dc_daemon_names . remove ( """" )"		3518553	0					
ANR	3518751	Callee	dc_daemon_names . remove		3518553	0					
ANR	3518752	MemberAccess	dc_daemon_names . remove		3518553	0					
ANR	3518753	Identifier	dc_daemon_names		3518553	0					
ANR	3518754	Identifier	remove		3518553	1					
ANR	3518755	ArgumentList	""""""		3518553	1					
ANR	3518756	Argument	""""""		3518553	0					
ANR	3518757	PrimaryExpression	""""""		3518553	0					
ANR	3518758	IdentifierDeclStatement	"char * ha_list = param ( ""MASTER_HA_LIST"" ) ;"	773:1:21032:21071	3518553	7	True				
ANR	3518759	IdentifierDecl	"* ha_list = param ( ""MASTER_HA_LIST"" )"		3518553	0					
ANR	3518760	IdentifierDeclType	char *		3518553	0					
ANR	3518761	Identifier	ha_list		3518553	1					
ANR	3518762	AssignmentExpression	"* ha_list = param ( ""MASTER_HA_LIST"" )"		3518553	2		=			
ANR	3518763	Identifier	ha_list		3518553	0					
ANR	3518764	CallExpression	"param ( ""MASTER_HA_LIST"" )"		3518553	1					
ANR	3518765	Callee	param		3518553	0					
ANR	3518766	Identifier	param		3518553	0					
ANR	3518767	ArgumentList	"""MASTER_HA_LIST"""		3518553	1					
ANR	3518768	Argument	"""MASTER_HA_LIST"""		3518553	0					
ANR	3518769	PrimaryExpression	"""MASTER_HA_LIST"""		3518553	0					
ANR	3518770	IfStatement	if ( ha_list )		3518553	8					
ANR	3518771	Condition	ha_list	774:5:21078:21084	3518553	0	True				
ANR	3518772	Identifier	ha_list		3518553	0					
ANR	3518773	CompoundStatement		58:2:1578:1597	3518553	1					
ANR	3518774	IdentifierDeclStatement	StringList ha_names ;	777:2:21188:21207	3518553	0	True				
ANR	3518775	IdentifierDecl	ha_names		3518553	0					
ANR	3518776	IdentifierDeclType	StringList		3518553	0					
ANR	3518777	Identifier	ha_names		3518553	1					
ANR	3518778	ExpressionStatement	ha_list = strupr ( ha_list )	778:2:21211:21238	3518553	1	True				
ANR	3518779	AssignmentExpression	ha_list = strupr ( ha_list )		3518553	0		=			
ANR	3518780	Identifier	ha_list		3518553	0					
ANR	3518781	CallExpression	strupr ( ha_list )		3518553	1					
ANR	3518782	Callee	strupr		3518553	0					
ANR	3518783	Identifier	strupr		3518553	0					
ANR	3518784	ArgumentList	ha_list		3518553	1					
ANR	3518785	Argument	ha_list		3518553	0					
ANR	3518786	Identifier	ha_list		3518553	0					
ANR	3518787	ExpressionStatement	ha_names . initializeFromString ( ha_list )	779:2:21242:21280	3518553	2	True				
ANR	3518788	CallExpression	ha_names . initializeFromString ( ha_list )		3518553	0					
ANR	3518789	Callee	ha_names . initializeFromString		3518553	0					
ANR	3518790	MemberAccess	ha_names . initializeFromString		3518553	0					
ANR	3518791	Identifier	ha_names		3518553	0					
ANR	3518792	Identifier	initializeFromString		3518553	1					
ANR	3518793	ArgumentList	ha_list		3518553	1					
ANR	3518794	Argument	ha_list		3518553	0					
ANR	3518795	Identifier	ha_list		3518553	0					
ANR	3518796	ExpressionStatement	"ha_names . remove ( """" )"	781:2:21328:21349	3518553	3	True				
ANR	3518797	CallExpression	"ha_names . remove ( """" )"		3518553	0					
ANR	3518798	Callee	ha_names . remove		3518553	0					
ANR	3518799	MemberAccess	ha_names . remove		3518553	0					
ANR	3518800	Identifier	ha_names		3518553	0					
ANR	3518801	Identifier	remove		3518553	1					
ANR	3518802	ArgumentList	""""""		3518553	1					
ANR	3518803	Argument	""""""		3518553	0					
ANR	3518804	PrimaryExpression	""""""		3518553	0					
ANR	3518805	ExpressionStatement	"daemons . ordered_daemon_names . create_union ( ha_names , false )"	782:2:21353:21413	3518553	4	True				
ANR	3518806	CallExpression	"daemons . ordered_daemon_names . create_union ( ha_names , false )"		3518553	0					
ANR	3518807	Callee	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3518808	MemberAccess	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3518809	MemberAccess	daemons . ordered_daemon_names		3518553	0					
ANR	3518810	Identifier	daemons		3518553	0					
ANR	3518811	Identifier	ordered_daemon_names		3518553	1					
ANR	3518812	Identifier	create_union		3518553	1					
ANR	3518813	ArgumentList	ha_names		3518553	1					
ANR	3518814	Argument	ha_names		3518553	0					
ANR	3518815	Identifier	ha_names		3518553	0					
ANR	3518816	Argument	false		3518553	1					
ANR	3518817	Identifier	false		3518553	0					
ANR	3518818	ExpressionStatement	ha_names . rewind ( )	784:2:21418:21435	3518553	5	True				
ANR	3518819	CallExpression	ha_names . rewind ( )		3518553	0					
ANR	3518820	Callee	ha_names . rewind		3518553	0					
ANR	3518821	MemberAccess	ha_names . rewind		3518553	0					
ANR	3518822	Identifier	ha_names		3518553	0					
ANR	3518823	Identifier	rewind		3518553	1					
ANR	3518824	ArgumentList			3518553	1					
ANR	3518825	WhileStatement	while ( ( daemon_name = ha_names . next ( ) ) )		3518553	6					
ANR	3518826	Condition	daemon_name = ha_names . next ( )	785:9:21446:21476	3518553	0	True				
ANR	3518827	AssignmentExpression	daemon_name = ha_names . next ( )		3518553	0		=			
ANR	3518828	Identifier	daemon_name		3518553	0					
ANR	3518829	CallExpression	ha_names . next ( )		3518553	1					
ANR	3518830	Callee	ha_names . next		3518553	0					
ANR	3518831	MemberAccess	ha_names . next		3518553	0					
ANR	3518832	Identifier	ha_names		3518553	0					
ANR	3518833	Identifier	next		3518553	1					
ANR	3518834	ArgumentList			3518553	1					
ANR	3518835	CompoundStatement		66:43:1870:1870	3518553	1					
ANR	3518836	IfStatement	if ( daemons . FindDaemon ( daemon_name ) == NULL )		3518553	0					
ANR	3518837	Condition	daemons . FindDaemon ( daemon_name ) == NULL	786:6:21488:21526	3518553	0	True				
ANR	3518838	EqualityExpression	daemons . FindDaemon ( daemon_name ) == NULL		3518553	0		==			
ANR	3518839	CallExpression	daemons . FindDaemon ( daemon_name )		3518553	0					
ANR	3518840	Callee	daemons . FindDaemon		3518553	0					
ANR	3518841	MemberAccess	daemons . FindDaemon		3518553	0					
ANR	3518842	Identifier	daemons		3518553	0					
ANR	3518843	Identifier	FindDaemon		3518553	1					
ANR	3518844	ArgumentList	daemon_name		3518553	1					
ANR	3518845	Argument	daemon_name		3518553	0					
ANR	3518846	Identifier	daemon_name		3518553	0					
ANR	3518847	Identifier	NULL		3518553	1					
ANR	3518848	CompoundStatement		67:47:1919:1919	3518553	1					
ANR	3518849	IfStatement	if ( dc_daemon_names . contains ( daemon_name ) )		3518553	0					
ANR	3518850	Condition	dc_daemon_names . contains ( daemon_name )	787:8:21539:21575	3518553	0	True				
ANR	3518851	CallExpression	dc_daemon_names . contains ( daemon_name )		3518553	0					
ANR	3518852	Callee	dc_daemon_names . contains		3518553	0					
ANR	3518853	MemberAccess	dc_daemon_names . contains		3518553	0					
ANR	3518854	Identifier	dc_daemon_names		3518553	0					
ANR	3518855	Identifier	contains		3518553	1					
ANR	3518856	ArgumentList	daemon_name		3518553	1					
ANR	3518857	Argument	daemon_name		3518553	0					
ANR	3518858	Identifier	daemon_name		3518553	0					
ANR	3518859	CompoundStatement		68:48:1969:1969	3518553	1					
ANR	3518860	ExpressionStatement	"new_daemon = new class daemon ( daemon_name , true , true )"	788:5:21586:21641	3518553	0	True				
ANR	3518861	AssignmentExpression	"new_daemon = new class daemon ( daemon_name , true , true )"		3518553	0		=			
ANR	3518862	Identifier	new_daemon		3518553	0					
ANR	3518863	Expression	"daemon_name , true , true"		3518553	1					
ANR	3518864	Identifier	daemon_name		3518553	0					
ANR	3518865	Expression	"true , true"		3518553	1					
ANR	3518866	Identifier	true		3518553	0					
ANR	3518867	Identifier	true		3518553	1					
ANR	3518868	ElseStatement	else		3518553	0					
ANR	3518869	CompoundStatement		70:11:2044:2044	3518553	0					
ANR	3518870	ExpressionStatement	"new_daemon = new class daemon ( daemon_name , false , true )"	790:5:21661:21717	3518553	0	True				
ANR	3518871	AssignmentExpression	"new_daemon = new class daemon ( daemon_name , false , true )"		3518553	0		=			
ANR	3518872	Identifier	new_daemon		3518553	0					
ANR	3518873	Expression	"daemon_name , false , true"		3518553	1					
ANR	3518874	Identifier	daemon_name		3518553	0					
ANR	3518875	Expression	"false , true"		3518553	1					
ANR	3518876	Identifier	false		3518553	0					
ANR	3518877	Identifier	true		3518553	1					
ANR	3518878	IdentifierDeclStatement	"char * daemon_list = param ( ""DAEMON_LIST"" ) ;"	796:1:21739:21779	3518553	9	True				
ANR	3518879	IdentifierDecl	"* daemon_list = param ( ""DAEMON_LIST"" )"		3518553	0					
ANR	3518880	IdentifierDeclType	char *		3518553	0					
ANR	3518881	Identifier	daemon_list		3518553	1					
ANR	3518882	AssignmentExpression	"* daemon_list = param ( ""DAEMON_LIST"" )"		3518553	2		=			
ANR	3518883	Identifier	daemon_list		3518553	0					
ANR	3518884	CallExpression	"param ( ""DAEMON_LIST"" )"		3518553	1					
ANR	3518885	Callee	param		3518553	0					
ANR	3518886	Identifier	param		3518553	0					
ANR	3518887	ArgumentList	"""DAEMON_LIST"""		3518553	1					
ANR	3518888	Argument	"""DAEMON_LIST"""		3518553	0					
ANR	3518889	PrimaryExpression	"""DAEMON_LIST"""		3518553	0					
ANR	3518890	IfStatement	if ( daemon_list )		3518553	10					
ANR	3518891	Condition	daemon_list	797:5:21786:21796	3518553	0	True				
ANR	3518892	Identifier	daemon_list		3518553	0					
ANR	3518893	CompoundStatement		78:19:2190:2190	3518553	1					
ANR	3518894	ExpressionStatement	daemon_list = strupr ( daemon_list )	800:2:21897:21932	3518553	0	True				
ANR	3518895	AssignmentExpression	daemon_list = strupr ( daemon_list )		3518553	0		=			
ANR	3518896	Identifier	daemon_list		3518553	0					
ANR	3518897	CallExpression	strupr ( daemon_list )		3518553	1					
ANR	3518898	Callee	strupr		3518553	0					
ANR	3518899	Identifier	strupr		3518553	0					
ANR	3518900	ArgumentList	daemon_list		3518553	1					
ANR	3518901	Argument	daemon_list		3518553	0					
ANR	3518902	Identifier	daemon_list		3518553	0					
ANR	3518903	ExpressionStatement	daemon_names . initializeFromString ( daemon_list )	801:2:21936:21982	3518553	1	True				
ANR	3518904	CallExpression	daemon_names . initializeFromString ( daemon_list )		3518553	0					
ANR	3518905	Callee	daemon_names . initializeFromString		3518553	0					
ANR	3518906	MemberAccess	daemon_names . initializeFromString		3518553	0					
ANR	3518907	Identifier	daemon_names		3518553	0					
ANR	3518908	Identifier	initializeFromString		3518553	1					
ANR	3518909	ArgumentList	daemon_list		3518553	1					
ANR	3518910	Argument	daemon_list		3518553	0					
ANR	3518911	Identifier	daemon_list		3518553	0					
ANR	3518912	ExpressionStatement	free ( daemon_list )	802:2:21986:22005	3518553	2	True				
ANR	3518913	CallExpression	free ( daemon_list )		3518553	0					
ANR	3518914	Callee	free		3518553	0					
ANR	3518915	Identifier	free		3518553	0					
ANR	3518916	ArgumentList	daemon_list		3518553	1					
ANR	3518917	Argument	daemon_list		3518553	0					
ANR	3518918	Identifier	daemon_list		3518553	0					
ANR	3518919	ExpressionStatement	"daemon_names . remove ( """" )"	804:2:22053:22078	3518553	3	True				
ANR	3518920	CallExpression	"daemon_names . remove ( """" )"		3518553	0					
ANR	3518921	Callee	daemon_names . remove		3518553	0					
ANR	3518922	MemberAccess	daemon_names . remove		3518553	0					
ANR	3518923	Identifier	daemon_names		3518553	0					
ANR	3518924	Identifier	remove		3518553	1					
ANR	3518925	ArgumentList	""""""		3518553	1					
ANR	3518926	Argument	""""""		3518553	0					
ANR	3518927	PrimaryExpression	""""""		3518553	0					
ANR	3518928	IfStatement	"if ( daemon_names . contains ( ""COLLECTOR"" ) )"		3518553	4					
ANR	3518929	Condition	"daemon_names . contains ( ""COLLECTOR"" )"	821:6:22846:22879	3518553	0	True				
ANR	3518930	CallExpression	"daemon_names . contains ( ""COLLECTOR"" )"		3518553	0					
ANR	3518931	Callee	daemon_names . contains		3518553	0					
ANR	3518932	MemberAccess	daemon_names . contains		3518553	0					
ANR	3518933	Identifier	daemon_names		3518553	0					
ANR	3518934	Identifier	contains		3518553	1					
ANR	3518935	ArgumentList	"""COLLECTOR"""		3518553	1					
ANR	3518936	Argument	"""COLLECTOR"""		3518553	0					
ANR	3518937	PrimaryExpression	"""COLLECTOR"""		3518553	0					
ANR	3518938	CompoundStatement		102:43:3273:3273	3518553	1					
ANR	3518939	ExpressionStatement	daemon_names . deleteCurrent ( )	822:3:22888:22916	3518553	0	True				
ANR	3518940	CallExpression	daemon_names . deleteCurrent ( )		3518553	0					
ANR	3518941	Callee	daemon_names . deleteCurrent		3518553	0					
ANR	3518942	MemberAccess	daemon_names . deleteCurrent		3518553	0					
ANR	3518943	Identifier	daemon_names		3518553	0					
ANR	3518944	Identifier	deleteCurrent		3518553	1					
ANR	3518945	ArgumentList			3518553	1					
ANR	3518946	ExpressionStatement	daemon_names . rewind ( )	823:3:22921:22942	3518553	1	True				
ANR	3518947	CallExpression	daemon_names . rewind ( )		3518553	0					
ANR	3518948	Callee	daemon_names . rewind		3518553	0					
ANR	3518949	MemberAccess	daemon_names . rewind		3518553	0					
ANR	3518950	Identifier	daemon_names		3518553	0					
ANR	3518951	Identifier	rewind		3518553	1					
ANR	3518952	ArgumentList			3518553	1					
ANR	3518953	ExpressionStatement	daemon_names . next ( )	824:3:22947:22966	3518553	2	True				
ANR	3518954	CallExpression	daemon_names . next ( )		3518553	0					
ANR	3518955	Callee	daemon_names . next		3518553	0					
ANR	3518956	MemberAccess	daemon_names . next		3518553	0					
ANR	3518957	Identifier	daemon_names		3518553	0					
ANR	3518958	Identifier	next		3518553	1					
ANR	3518959	ArgumentList			3518553	1					
ANR	3518960	ExpressionStatement	"daemon_names . insert ( ""COLLECTOR"" )"	825:3:22971:23005	3518553	3	True				
ANR	3518961	CallExpression	"daemon_names . insert ( ""COLLECTOR"" )"		3518553	0					
ANR	3518962	Callee	daemon_names . insert		3518553	0					
ANR	3518963	MemberAccess	daemon_names . insert		3518553	0					
ANR	3518964	Identifier	daemon_names		3518553	0					
ANR	3518965	Identifier	insert		3518553	1					
ANR	3518966	ArgumentList	"""COLLECTOR"""		3518553	1					
ANR	3518967	Argument	"""COLLECTOR"""		3518553	0					
ANR	3518968	PrimaryExpression	"""COLLECTOR"""		3518553	0					
ANR	3518969	IfStatement	"if ( daemon_names . contains ( ""SHARED_PORT"" ) )"		3518553	5					
ANR	3518970	Condition	"daemon_names . contains ( ""SHARED_PORT"" )"	829:6:23070:23105	3518553	0	True				
ANR	3518971	CallExpression	"daemon_names . contains ( ""SHARED_PORT"" )"		3518553	0					
ANR	3518972	Callee	daemon_names . contains		3518553	0					
ANR	3518973	MemberAccess	daemon_names . contains		3518553	0					
ANR	3518974	Identifier	daemon_names		3518553	0					
ANR	3518975	Identifier	contains		3518553	1					
ANR	3518976	ArgumentList	"""SHARED_PORT"""		3518553	1					
ANR	3518977	Argument	"""SHARED_PORT"""		3518553	0					
ANR	3518978	PrimaryExpression	"""SHARED_PORT"""		3518553	0					
ANR	3518979	CompoundStatement		110:45:3499:3499	3518553	1					
ANR	3518980	ExpressionStatement	daemon_names . deleteCurrent ( )	830:3:23114:23142	3518553	0	True				
ANR	3518981	CallExpression	daemon_names . deleteCurrent ( )		3518553	0					
ANR	3518982	Callee	daemon_names . deleteCurrent		3518553	0					
ANR	3518983	MemberAccess	daemon_names . deleteCurrent		3518553	0					
ANR	3518984	Identifier	daemon_names		3518553	0					
ANR	3518985	Identifier	deleteCurrent		3518553	1					
ANR	3518986	ArgumentList			3518553	1					
ANR	3518987	ExpressionStatement	daemon_names . rewind ( )	831:3:23147:23168	3518553	1	True				
ANR	3518988	CallExpression	daemon_names . rewind ( )		3518553	0					
ANR	3518989	Callee	daemon_names . rewind		3518553	0					
ANR	3518990	MemberAccess	daemon_names . rewind		3518553	0					
ANR	3518991	Identifier	daemon_names		3518553	0					
ANR	3518992	Identifier	rewind		3518553	1					
ANR	3518993	ArgumentList			3518553	1					
ANR	3518994	ExpressionStatement	daemon_names . next ( )	832:3:23173:23192	3518553	2	True				
ANR	3518995	CallExpression	daemon_names . next ( )		3518553	0					
ANR	3518996	Callee	daemon_names . next		3518553	0					
ANR	3518997	MemberAccess	daemon_names . next		3518553	0					
ANR	3518998	Identifier	daemon_names		3518553	0					
ANR	3518999	Identifier	next		3518553	1					
ANR	3519000	ArgumentList			3518553	1					
ANR	3519001	ExpressionStatement	"daemon_names . insert ( ""SHARED_PORT"" )"	833:3:23197:23233	3518553	3	True				
ANR	3519002	CallExpression	"daemon_names . insert ( ""SHARED_PORT"" )"		3518553	0					
ANR	3519003	Callee	daemon_names . insert		3518553	0					
ANR	3519004	MemberAccess	daemon_names . insert		3518553	0					
ANR	3519005	Identifier	daemon_names		3518553	0					
ANR	3519006	Identifier	insert		3518553	1					
ANR	3519007	ArgumentList	"""SHARED_PORT"""		3518553	1					
ANR	3519008	Argument	"""SHARED_PORT"""		3518553	0					
ANR	3519009	PrimaryExpression	"""SHARED_PORT"""		3518553	0					
ANR	3519010	ExpressionStatement	"daemons . ordered_daemon_names . create_union ( daemon_names , false )"	835:2:23241:23305	3518553	6	True				
ANR	3519011	CallExpression	"daemons . ordered_daemon_names . create_union ( daemon_names , false )"		3518553	0					
ANR	3519012	Callee	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3519013	MemberAccess	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3519014	MemberAccess	daemons . ordered_daemon_names		3518553	0					
ANR	3519015	Identifier	daemons		3518553	0					
ANR	3519016	Identifier	ordered_daemon_names		3518553	1					
ANR	3519017	Identifier	create_union		3518553	1					
ANR	3519018	ArgumentList	daemon_names		3518553	1					
ANR	3519019	Argument	daemon_names		3518553	0					
ANR	3519020	Identifier	daemon_names		3518553	0					
ANR	3519021	Argument	false		3518553	1					
ANR	3519022	Identifier	false		3518553	0					
ANR	3519023	ExpressionStatement	daemon_names . rewind ( )	837:2:23310:23331	3518553	7	True				
ANR	3519024	CallExpression	daemon_names . rewind ( )		3518553	0					
ANR	3519025	Callee	daemon_names . rewind		3518553	0					
ANR	3519026	MemberAccess	daemon_names . rewind		3518553	0					
ANR	3519027	Identifier	daemon_names		3518553	0					
ANR	3519028	Identifier	rewind		3518553	1					
ANR	3519029	ArgumentList			3518553	1					
ANR	3519030	WhileStatement	while ( ( daemon_name = daemon_names . next ( ) ) )		3518553	8					
ANR	3519031	Condition	daemon_name = daemon_names . next ( )	838:9:23342:23376	3518553	0	True				
ANR	3519032	AssignmentExpression	daemon_name = daemon_names . next ( )		3518553	0		=			
ANR	3519033	Identifier	daemon_name		3518553	0					
ANR	3519034	CallExpression	daemon_names . next ( )		3518553	1					
ANR	3519035	Callee	daemon_names . next		3518553	0					
ANR	3519036	MemberAccess	daemon_names . next		3518553	0					
ANR	3519037	Identifier	daemon_names		3518553	0					
ANR	3519038	Identifier	next		3518553	1					
ANR	3519039	ArgumentList			3518553	1					
ANR	3519040	CompoundStatement		119:47:3770:3770	3518553	1					
ANR	3519041	IfStatement	if ( daemons . FindDaemon ( daemon_name ) == NULL )		3518553	0					
ANR	3519042	Condition	daemons . FindDaemon ( daemon_name ) == NULL	839:6:23388:23426	3518553	0	True				
ANR	3519043	EqualityExpression	daemons . FindDaemon ( daemon_name ) == NULL		3518553	0		==			
ANR	3519044	CallExpression	daemons . FindDaemon ( daemon_name )		3518553	0					
ANR	3519045	Callee	daemons . FindDaemon		3518553	0					
ANR	3519046	MemberAccess	daemons . FindDaemon		3518553	0					
ANR	3519047	Identifier	daemons		3518553	0					
ANR	3519048	Identifier	FindDaemon		3518553	1					
ANR	3519049	ArgumentList	daemon_name		3518553	1					
ANR	3519050	Argument	daemon_name		3518553	0					
ANR	3519051	Identifier	daemon_name		3518553	0					
ANR	3519052	Identifier	NULL		3518553	1					
ANR	3519053	CompoundStatement		120:47:3819:3819	3518553	1					
ANR	3519054	IfStatement	if ( dc_daemon_names . contains ( daemon_name ) )		3518553	0					
ANR	3519055	Condition	dc_daemon_names . contains ( daemon_name )	840:8:23439:23475	3518553	0	True				
ANR	3519056	CallExpression	dc_daemon_names . contains ( daemon_name )		3518553	0					
ANR	3519057	Callee	dc_daemon_names . contains		3518553	0					
ANR	3519058	MemberAccess	dc_daemon_names . contains		3518553	0					
ANR	3519059	Identifier	dc_daemon_names		3518553	0					
ANR	3519060	Identifier	contains		3518553	1					
ANR	3519061	ArgumentList	daemon_name		3518553	1					
ANR	3519062	Argument	daemon_name		3518553	0					
ANR	3519063	Identifier	daemon_name		3518553	0					
ANR	3519064	CompoundStatement		121:48:3869:3869	3518553	1					
ANR	3519065	ExpressionStatement	new_daemon = new class daemon ( daemon_name )	841:5:23486:23528	3518553	0	True				
ANR	3519066	AssignmentExpression	new_daemon = new class daemon ( daemon_name )		3518553	0		=			
ANR	3519067	Identifier	new_daemon		3518553	0					
ANR	3519068	Identifier	daemon_name		3518553	1					
ANR	3519069	ElseStatement	else		3518553	0					
ANR	3519070	CompoundStatement		123:11:3931:3931	3518553	0					
ANR	3519071	ExpressionStatement	"new_daemon = new class daemon ( daemon_name , false )"	843:5:23548:23597	3518553	0	True				
ANR	3519072	AssignmentExpression	"new_daemon = new class daemon ( daemon_name , false )"		3518553	0		=			
ANR	3519073	Identifier	new_daemon		3518553	0					
ANR	3519074	Expression	"daemon_name , false"		3518553	1					
ANR	3519075	Identifier	daemon_name		3518553	0					
ANR	3519076	Identifier	false		3518553	1					
ANR	3519077	ElseStatement	else		3518553	0					
ANR	3519078	CompoundStatement		128:8:4012:4012	3518553	0					
ANR	3519079	ExpressionStatement	"daemons . ordered_daemon_names . create_union ( dc_daemon_names , false )"	848:2:23626:23693	3518553	0	True				
ANR	3519080	CallExpression	"daemons . ordered_daemon_names . create_union ( dc_daemon_names , false )"		3518553	0					
ANR	3519081	Callee	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3519082	MemberAccess	daemons . ordered_daemon_names . create_union		3518553	0					
ANR	3519083	MemberAccess	daemons . ordered_daemon_names		3518553	0					
ANR	3519084	Identifier	daemons		3518553	0					
ANR	3519085	Identifier	ordered_daemon_names		3518553	1					
ANR	3519086	Identifier	create_union		3518553	1					
ANR	3519087	ArgumentList	dc_daemon_names		3518553	1					
ANR	3519088	Argument	dc_daemon_names		3518553	0					
ANR	3519089	Identifier	dc_daemon_names		3518553	0					
ANR	3519090	Argument	false		3518553	1					
ANR	3519091	Identifier	false		3518553	0					
ANR	3519092	ForStatement	for ( int i = 0 ; default_daemon_list [ i ] ; i ++ )		3518553	1					
ANR	3519093	ForInit	int i = 0 ;	849:6:23701:23710	3518553	0	True				
ANR	3519094	IdentifierDeclStatement	int i = 0 ;		3518553	0					
ANR	3519095	IdentifierDecl	i = 0		3518553	0					
ANR	3519096	IdentifierDeclType	int		3518553	0					
ANR	3519097	Identifier	i		3518553	1					
ANR	3519098	AssignmentExpression	i = 0		3518553	2		=			
ANR	3519099	Identifier	i		3518553	0					
ANR	3519100	PrimaryExpression	0		3518553	1					
ANR	3519101	Condition	default_daemon_list [ i ]	849:17:23712:23733	3518553	1	True				
ANR	3519102	ArrayIndexing	default_daemon_list [ i ]		3518553	0					
ANR	3519103	Identifier	default_daemon_list		3518553	0					
ANR	3519104	Identifier	i		3518553	1					
ANR	3519105	PostIncDecOperationExpression	i ++	849:41:23736:23738	3518553	2	True				
ANR	3519106	Identifier	i		3518553	0					
ANR	3519107	IncDec	++		3518553	1					
ANR	3519108	CompoundStatement		130:46:4131:4131	3518553	3					
ANR	3519109	ExpressionStatement	new_daemon = new class daemon ( default_daemon_list [ i ] )	850:3:23746:23799	3518553	0	True				
ANR	3519110	AssignmentExpression	new_daemon = new class daemon ( default_daemon_list [ i ] )		3518553	0		=			
ANR	3519111	Identifier	new_daemon		3518553	0					
ANR	3519112	ArrayIndexing	default_daemon_list [ i ]		3518553	1					
ANR	3519113	Identifier	default_daemon_list		3518553	0					
ANR	3519114	Identifier	i		3518553	1					
ANR	3519115	ReturnType	void		3518553	1					
ANR	3519116	Identifier	init_daemon_list		3518553	2					
ANR	3519117	ParameterList			3518553	3					
ANR	3519118	CFGEntryNode	ENTRY		3518553		True				
ANR	3519119	CFGExitNode	EXIT		3518553		True				
ANR	3519120	Symbol	daemons . ordered_daemon_names		3518553						
ANR	3519121	Symbol	default_dc_daemon_list		3518553						
ANR	3519122	Symbol	dc_daemon_list		3518553						
ANR	3519123	Symbol	* default_daemon_list		3518553						
ANR	3519124	Symbol	daemon_list		3518553						
ANR	3519125	Symbol	default_daemon_list		3518553						
ANR	3519126	Symbol	dclist . Value		3518553						
ANR	3519127	Symbol	dc_daemon_names . contains		3518553						
ANR	3519128	Symbol	ha_names		3518553						
ANR	3519129	Symbol	param		3518553						
ANR	3519130	Symbol	new_daemon		3518553						
ANR	3519131	Symbol	dclist		3518553						
ANR	3519132	Symbol	daemons		3518553						
ANR	3519133	Symbol	missing		3518553						
ANR	3519134	Symbol	daemons . FindDaemon		3518553						
ANR	3519135	Symbol	default_entry		3518553						
ANR	3519136	Symbol	daemon_names		3518553						
ANR	3519137	Symbol	dc_daemon_names . contains_anycase		3518553						
ANR	3519138	Symbol	ha_list		3518553						
ANR	3519139	Symbol	NULL		3518553						
ANR	3519140	Symbol	daemon_names . contains		3518553						
ANR	3519141	Symbol	daemon_name		3518553						
ANR	3519142	Symbol	dc_daemon_names		3518553						
ANR	3519143	Symbol	default_list		3518553						
ANR	3519144	Symbol	false		3518553						
ANR	3519145	Symbol	i		3518553						
ANR	3519146	Symbol	daemon_names . next		3518553						
ANR	3519147	Symbol	ha_names . next		3518553						
ANR	3519148	Symbol	strupr		3518553						
ANR	3519149	Symbol	* i		3518553						
ANR	3519150	Symbol	default_list . next		3518553						
ANR	3519151	Symbol	true		3518553						
ANR	3519152	Symbol	* dc_daemon_list		3518553						
ANR	3519153	Function	init_classad	857:0:23813:24277							
ANR	3519154	FunctionDef	init_classad ()		3519153	0					
ANR	3519155	CompoundStatement		859:0:23833:24277	3519153	0					
ANR	3519156	IfStatement	if ( ad )		3519153	0					
ANR	3519157	Condition	ad	860:5:23840:23841	3519153	0	True				
ANR	3519158	Identifier	ad		3519153	0					
ANR	3519159	Statement	delete	860:10:23845:23850	3519153	1	True				
ANR	3519160	ExpressionStatement	ad	860:16:23851:23857	3519153	1	True				
ANR	3519161	Identifier	ad		3519153	0					
ANR	3519162	ExpressionStatement	ad = new ClassAd ( )	861:1:23860:23878	3519153	2	True				
ANR	3519163	AssignmentExpression	ad = new ClassAd ( )		3519153	0		=			
ANR	3519164	Identifier	ad		3519153	0					
ANR	3519165	UnaryExpression	new ClassAd ( )		3519153	1					
ANR	3519166	ExpressionStatement	ad -> SetMyTypeName ( MASTER_ADTYPE )	863:1:23882:23914	3519153	3	True				
ANR	3519167	CallExpression	ad -> SetMyTypeName ( MASTER_ADTYPE )		3519153	0					
ANR	3519168	Callee	ad -> SetMyTypeName		3519153	0					
ANR	3519169	PtrMemberAccess	ad -> SetMyTypeName		3519153	0					
ANR	3519170	Identifier	ad		3519153	0					
ANR	3519171	Identifier	SetMyTypeName		3519153	1					
ANR	3519172	ArgumentList	MASTER_ADTYPE		3519153	1					
ANR	3519173	Argument	MASTER_ADTYPE		3519153	0					
ANR	3519174	Identifier	MASTER_ADTYPE		3519153	0					
ANR	3519175	ExpressionStatement	"ad -> SetTargetTypeName ( """" )"	864:1:23917:23942	3519153	4	True				
ANR	3519176	CallExpression	"ad -> SetTargetTypeName ( """" )"		3519153	0					
ANR	3519177	Callee	ad -> SetTargetTypeName		3519153	0					
ANR	3519178	PtrMemberAccess	ad -> SetTargetTypeName		3519153	0					
ANR	3519179	Identifier	ad		3519153	0					
ANR	3519180	Identifier	SetTargetTypeName		3519153	1					
ANR	3519181	ArgumentList	""""""		3519153	1					
ANR	3519182	Argument	""""""		3519153	0					
ANR	3519183	PrimaryExpression	""""""		3519153	0					
ANR	3519184	IfStatement	if ( MasterName )		3519153	5					
ANR	3519185	Condition	MasterName	866:5:23950:23959	3519153	0	True				
ANR	3519186	Identifier	MasterName		3519153	0					
ANR	3519187	CompoundStatement		8:17:128:128	3519153	1					
ANR	3519188	ExpressionStatement	"ad -> Assign ( ATTR_NAME , MasterName )"	867:2:23966:23999	3519153	0	True				
ANR	3519189	CallExpression	"ad -> Assign ( ATTR_NAME , MasterName )"		3519153	0					
ANR	3519190	Callee	ad -> Assign		3519153	0					
ANR	3519191	PtrMemberAccess	ad -> Assign		3519153	0					
ANR	3519192	Identifier	ad		3519153	0					
ANR	3519193	Identifier	Assign		3519153	1					
ANR	3519194	ArgumentList	ATTR_NAME		3519153	1					
ANR	3519195	Argument	ATTR_NAME		3519153	0					
ANR	3519196	Identifier	ATTR_NAME		3519153	0					
ANR	3519197	Argument	MasterName		3519153	1					
ANR	3519198	Identifier	MasterName		3519153	0					
ANR	3519199	ElseStatement	else		3519153	0					
ANR	3519200	CompoundStatement		11:2:179:221	3519153	0					
ANR	3519201	IdentifierDeclStatement	char * default_name = default_daemon_name ( ) ;	869:2:24013:24055	3519153	0	True				
ANR	3519202	IdentifierDecl	* default_name = default_daemon_name ( )		3519153	0					
ANR	3519203	IdentifierDeclType	char *		3519153	0					
ANR	3519204	Identifier	default_name		3519153	1					
ANR	3519205	AssignmentExpression	* default_name = default_daemon_name ( )		3519153	2		=			
ANR	3519206	Identifier	default_name		3519153	0					
ANR	3519207	CallExpression	default_daemon_name ( )		3519153	1					
ANR	3519208	Callee	default_daemon_name		3519153	0					
ANR	3519209	Identifier	default_daemon_name		3519153	0					
ANR	3519210	ArgumentList			3519153	1					
ANR	3519211	IfStatement	if ( ! default_name )		3519153	1					
ANR	3519212	Condition	! default_name	870:6:24063:24076	3519153	0	True				
ANR	3519213	UnaryOperationExpression	! default_name		3519153	0					
ANR	3519214	UnaryOperator	!		3519153	0					
ANR	3519215	Identifier	default_name		3519153	1					
ANR	3519216	CompoundStatement		12:23:246:246	3519153	1					
ANR	3519217	ExpressionStatement	"EXCEPT ( ""default_daemon_name() returned NULL"" )"	871:3:24085:24132	3519153	0	True				
ANR	3519218	CallExpression	"EXCEPT ( ""default_daemon_name() returned NULL"" )"		3519153	0					
ANR	3519219	Callee	EXCEPT		3519153	0					
ANR	3519220	Identifier	EXCEPT		3519153	0					
ANR	3519221	ArgumentList	"""default_daemon_name() returned NULL"""		3519153	1					
ANR	3519222	Argument	"""default_daemon_name() returned NULL"""		3519153	0					
ANR	3519223	PrimaryExpression	"""default_daemon_name() returned NULL"""		3519153	0					
ANR	3519224	ExpressionStatement	"ad -> Assign ( ATTR_NAME , default_name )"	873:2:24140:24175	3519153	2	True				
ANR	3519225	CallExpression	"ad -> Assign ( ATTR_NAME , default_name )"		3519153	0					
ANR	3519226	Callee	ad -> Assign		3519153	0					
ANR	3519227	PtrMemberAccess	ad -> Assign		3519153	0					
ANR	3519228	Identifier	ad		3519153	0					
ANR	3519229	Identifier	Assign		3519153	1					
ANR	3519230	ArgumentList	ATTR_NAME		3519153	1					
ANR	3519231	Argument	ATTR_NAME		3519153	0					
ANR	3519232	Identifier	ATTR_NAME		3519153	0					
ANR	3519233	Argument	default_name		3519153	1					
ANR	3519234	Identifier	default_name		3519153	0					
ANR	3519235	Statement	delete	874:2:24179:24184	3519153	3	True				
ANR	3519236	Statement	[	874:9:24186:24186	3519153	4	True				
ANR	3519237	Statement	]	874:10:24187:24187	3519153	5	True				
ANR	3519238	ExpressionStatement	default_name	874:12:24189:24201	3519153	6	True				
ANR	3519239	Identifier	default_name		3519153	0					
ANR	3519240	ExpressionStatement	"ad -> Assign ( ATTR_REAL_UID , ( int ) getuid ( ) )"	878:1:24228:24268	3519153	6	True				
ANR	3519241	CallExpression	"ad -> Assign ( ATTR_REAL_UID , ( int ) getuid ( ) )"		3519153	0					
ANR	3519242	Callee	ad -> Assign		3519153	0					
ANR	3519243	PtrMemberAccess	ad -> Assign		3519153	0					
ANR	3519244	Identifier	ad		3519153	0					
ANR	3519245	Identifier	Assign		3519153	1					
ANR	3519246	ArgumentList	ATTR_REAL_UID		3519153	1					
ANR	3519247	Argument	ATTR_REAL_UID		3519153	0					
ANR	3519248	Identifier	ATTR_REAL_UID		3519153	0					
ANR	3519249	Argument	( int ) getuid ( )		3519153	1					
ANR	3519250	CastExpression	( int ) getuid ( )		3519153	0					
ANR	3519251	CastTarget	int		3519153	0					
ANR	3519252	CallExpression	getuid ( )		3519153	1					
ANR	3519253	Callee	getuid		3519153	0					
ANR	3519254	Identifier	getuid		3519153	0					
ANR	3519255	ArgumentList			3519153	1					
ANR	3519256	ReturnType	void		3519153	1					
ANR	3519257	Identifier	init_classad		3519153	2					
ANR	3519258	ParameterList			3519153	3					
ANR	3519259	CFGEntryNode	ENTRY		3519153		True				
ANR	3519260	CFGExitNode	EXIT		3519153		True				
ANR	3519261	Symbol	default_name		3519153						
ANR	3519262	Symbol	getuid		3519153						
ANR	3519263	Symbol	ad		3519153						
ANR	3519264	Symbol	ATTR_NAME		3519153						
ANR	3519265	Symbol	ATTR_REAL_UID		3519153						
ANR	3519266	Symbol	MASTER_ADTYPE		3519153						
ANR	3519267	Symbol	default_daemon_name		3519153						
ANR	3519268	Symbol	MasterName		3519153						
ANR	3519269	DeclStmt									
ANR	3519270	Decl							FileLock	FileLock *	MasterLock
ANR	3519271	Function	lock_or_except	886:0:24324:25068							
ANR	3519272	FunctionDef	lock_or_except (const char * file_name)		3519271	0					
ANR	3519273	CompoundStatement		888:0:24369:25068	3519271	0					
ANR	3519274	ExpressionStatement	"MasterLockFD = _condor_open_lock_file ( file_name , O_WRONLY | O_CREAT | O_APPEND , S_IRUSR | S_IWUSR )"	892:1:24527:24615	3519271	0	True				
ANR	3519275	AssignmentExpression	"MasterLockFD = _condor_open_lock_file ( file_name , O_WRONLY | O_CREAT | O_APPEND , S_IRUSR | S_IWUSR )"		3519271	0		=			
ANR	3519276	Identifier	MasterLockFD		3519271	0					
ANR	3519277	CallExpression	"_condor_open_lock_file ( file_name , O_WRONLY | O_CREAT | O_APPEND , S_IRUSR | S_IWUSR )"		3519271	1					
ANR	3519278	Callee	_condor_open_lock_file		3519271	0					
ANR	3519279	Identifier	_condor_open_lock_file		3519271	0					
ANR	3519280	ArgumentList	file_name		3519271	1					
ANR	3519281	Argument	file_name		3519271	0					
ANR	3519282	Identifier	file_name		3519271	0					
ANR	3519283	Argument	O_WRONLY | O_CREAT | O_APPEND		3519271	1					
ANR	3519284	InclusiveOrExpression	O_WRONLY | O_CREAT | O_APPEND		3519271	0		|			
ANR	3519285	Identifier	O_WRONLY		3519271	0					
ANR	3519286	InclusiveOrExpression	O_CREAT | O_APPEND		3519271	1		|			
ANR	3519287	Identifier	O_CREAT		3519271	0					
ANR	3519288	Identifier	O_APPEND		3519271	1					
ANR	3519289	Argument	S_IRUSR | S_IWUSR		3519271	2					
ANR	3519290	InclusiveOrExpression	S_IRUSR | S_IWUSR		3519271	0		|			
ANR	3519291	Identifier	S_IRUSR		3519271	0					
ANR	3519292	Identifier	S_IWUSR		3519271	1					
ANR	3519293	IfStatement	if ( MasterLockFD < 0 )		3519271	1					
ANR	3519294	Condition	MasterLockFD < 0	893:5:24622:24637	3519271	0	True				
ANR	3519295	RelationalExpression	MasterLockFD < 0		3519271	0		<			
ANR	3519296	Identifier	MasterLockFD		3519271	0					
ANR	3519297	PrimaryExpression	0		3519271	1					
ANR	3519298	CompoundStatement		6:24:271:271	3519271	1					
ANR	3519299	ExpressionStatement	"EXCEPT ( ""can't safe_open_wrapper(%s,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR) - errno %i"" , file_name , errno )"	894:2:24645:24759	3519271	0	True				
ANR	3519300	CallExpression	"EXCEPT ( ""can't safe_open_wrapper(%s,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR) - errno %i"" , file_name , errno )"		3519271	0					
ANR	3519301	Callee	EXCEPT		3519271	0					
ANR	3519302	Identifier	EXCEPT		3519271	0					
ANR	3519303	ArgumentList	"""can't safe_open_wrapper(%s,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR) - errno %i"""		3519271	1					
ANR	3519304	Argument	"""can't safe_open_wrapper(%s,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR) - errno %i"""		3519271	0					
ANR	3519305	PrimaryExpression	"""can't safe_open_wrapper(%s,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR) - errno %i"""		3519271	0					
ANR	3519306	Argument	file_name		3519271	1					
ANR	3519307	Identifier	file_name		3519271	0					
ANR	3519308	Argument	errno		3519271	2					
ANR	3519309	Identifier	errno		3519271	0					
ANR	3519310	ExpressionStatement	"MasterLock = new FileLock ( MasterLockFD , NULL , file_name )"	900:1:24871:24929	3519271	2	True				
ANR	3519311	AssignmentExpression	"MasterLock = new FileLock ( MasterLockFD , NULL , file_name )"		3519271	0		=			
ANR	3519312	Identifier	MasterLock		3519271	0					
ANR	3519313	Expression	"MasterLockFD , NULL , file_name"		3519271	1					
ANR	3519314	Identifier	MasterLockFD		3519271	0					
ANR	3519315	Expression	"NULL , file_name"		3519271	1					
ANR	3519316	Identifier	NULL		3519271	0					
ANR	3519317	Identifier	file_name		3519271	1					
ANR	3519318	ExpressionStatement	MasterLock -> setBlocking ( FALSE )	901:1:24932:24964	3519271	3	True				
ANR	3519319	CallExpression	MasterLock -> setBlocking ( FALSE )		3519271	0					
ANR	3519320	Callee	MasterLock -> setBlocking		3519271	0					
ANR	3519321	PtrMemberAccess	MasterLock -> setBlocking		3519271	0					
ANR	3519322	Identifier	MasterLock		3519271	0					
ANR	3519323	Identifier	setBlocking		3519271	1					
ANR	3519324	ArgumentList	FALSE		3519271	1					
ANR	3519325	Argument	FALSE		3519271	0					
ANR	3519326	Identifier	FALSE		3519271	0					
ANR	3519327	IfStatement	if ( ! MasterLock -> obtain ( WRITE_LOCK ) )		3519271	4					
ANR	3519328	Condition	! MasterLock -> obtain ( WRITE_LOCK )	902:5:24971:25001	3519271	0	True				
ANR	3519329	UnaryOperationExpression	! MasterLock -> obtain ( WRITE_LOCK )		3519271	0					
ANR	3519330	UnaryOperator	!		3519271	0					
ANR	3519331	CallExpression	MasterLock -> obtain ( WRITE_LOCK )		3519271	1					
ANR	3519332	Callee	MasterLock -> obtain		3519271	0					
ANR	3519333	PtrMemberAccess	MasterLock -> obtain		3519271	0					
ANR	3519334	Identifier	MasterLock		3519271	0					
ANR	3519335	Identifier	obtain		3519271	1					
ANR	3519336	ArgumentList	WRITE_LOCK		3519271	1					
ANR	3519337	Argument	WRITE_LOCK		3519271	0					
ANR	3519338	Identifier	WRITE_LOCK		3519271	0					
ANR	3519339	CompoundStatement		15:39:635:635	3519271	1					
ANR	3519340	ExpressionStatement	"EXCEPT ( ""Can't get lock on \\""%s\\"""" , file_name )"	903:2:25009:25056	3519271	0	True				
ANR	3519341	CallExpression	"EXCEPT ( ""Can't get lock on \\""%s\\"""" , file_name )"		3519271	0					
ANR	3519342	Callee	EXCEPT		3519271	0					
ANR	3519343	Identifier	EXCEPT		3519271	0					
ANR	3519344	ArgumentList	"""Can't get lock on \\""%s\\"""""		3519271	1					
ANR	3519345	Argument	"""Can't get lock on \\""%s\\"""""		3519271	0					
ANR	3519346	PrimaryExpression	"""Can't get lock on \\""%s\\"""""		3519271	0					
ANR	3519347	Argument	file_name		3519271	1					
ANR	3519348	Identifier	file_name		3519271	0					
ANR	3519349	ReturnType	void		3519271	1					
ANR	3519350	Identifier	lock_or_except		3519271	2					
ANR	3519351	ParameterList	const char * file_name		3519271	3					
ANR	3519352	Parameter	const char * file_name	887:16:24345:24365	3519271	0	True				
ANR	3519353	ParameterType	const char *		3519271	0					
ANR	3519354	Identifier	file_name		3519271	1					
ANR	3519355	CFGEntryNode	ENTRY		3519271		True				
ANR	3519356	CFGExitNode	EXIT		3519271		True				
ANR	3519357	Symbol	errno		3519271						
ANR	3519358	Symbol	NULL		3519271						
ANR	3519359	Symbol	_condor_open_lock_file		3519271						
ANR	3519360	Symbol	MasterLockFD		3519271						
ANR	3519361	Symbol	file_name		3519271						
ANR	3519362	Symbol	O_CREAT		3519271						
ANR	3519363	Symbol	O_APPEND		3519271						
ANR	3519364	Symbol	MasterLock		3519271						
ANR	3519365	Symbol	S_IRUSR		3519271						
ANR	3519366	Symbol	WRITE_LOCK		3519271						
ANR	3519367	Symbol	S_IWUSR		3519271						
ANR	3519368	Symbol	FALSE		3519271						
ANR	3519369	Symbol	MasterLock -> obtain		3519271						
ANR	3519370	Symbol	O_WRONLY		3519271						
ANR	3519371	Symbol	* MasterLock		3519271						
ANR	3519372	Function	main_config	913:0:25174:27239							
ANR	3519373	FunctionDef	main_config ()		3519372	0					
ANR	3519374	CompoundStatement		915:0:25193:27239	3519372	0					
ANR	3519375	IdentifierDeclStatement	StringList old_daemon_list ;	916:1:25196:25222	3519372	0	True				
ANR	3519376	IdentifierDecl	old_daemon_list		3519372	0					
ANR	3519377	IdentifierDeclType	StringList		3519372	0					
ANR	3519378	Identifier	old_daemon_list		3519372	1					
ANR	3519379	IdentifierDeclStatement	char * list = daemons . ordered_daemon_names . print_to_string ( ) ;	917:1:25225:25284	3519372	1	True				
ANR	3519380	IdentifierDecl	* list = daemons . ordered_daemon_names . print_to_string ( )		3519372	0					
ANR	3519381	IdentifierDeclType	char *		3519372	0					
ANR	3519382	Identifier	list		3519372	1					
ANR	3519383	AssignmentExpression	* list = daemons . ordered_daemon_names . print_to_string ( )		3519372	2		=			
ANR	3519384	Identifier	list		3519372	0					
ANR	3519385	CallExpression	daemons . ordered_daemon_names . print_to_string ( )		3519372	1					
ANR	3519386	Callee	daemons . ordered_daemon_names . print_to_string		3519372	0					
ANR	3519387	MemberAccess	daemons . ordered_daemon_names . print_to_string		3519372	0					
ANR	3519388	MemberAccess	daemons . ordered_daemon_names		3519372	0					
ANR	3519389	Identifier	daemons		3519372	0					
ANR	3519390	Identifier	ordered_daemon_names		3519372	1					
ANR	3519391	Identifier	print_to_string		3519372	1					
ANR	3519392	ArgumentList			3519372	1					
ANR	3519393	IdentifierDeclStatement	char * daemon_name ;	918:1:25287:25304	3519372	2	True				
ANR	3519394	IdentifierDecl	* daemon_name		3519372	0					
ANR	3519395	IdentifierDeclType	char *		3519372	0					
ANR	3519396	Identifier	daemon_name		3519372	1					
ANR	3519397	IdentifierDeclStatement	class daemon * new_daemon ;	919:1:25307:25331	3519372	3	True				
ANR	3519398	IdentifierDecl	* new_daemon		3519372	0					
ANR	3519399	IdentifierDeclType	class daemon *		3519372	0					
ANR	3519400	Identifier	new_daemon		3519372	1					
ANR	3519401	IdentifierDeclStatement	int new_daemons = 0 ;	920:1:25334:25353	3519372	4	True				
ANR	3519402	IdentifierDecl	new_daemons = 0		3519372	0					
ANR	3519403	IdentifierDeclType	int		3519372	0					
ANR	3519404	Identifier	new_daemons		3519372	1					
ANR	3519405	AssignmentExpression	new_daemons = 0		3519372	2		=			
ANR	3519406	Identifier	new_daemons		3519372	0					
ANR	3519407	PrimaryExpression	0		3519372	1					
ANR	3519408	IfStatement	if ( list )		3519372	5					
ANR	3519409	Condition	list	922:5:25361:25364	3519372	0	True				
ANR	3519410	Identifier	list		3519372	0					
ANR	3519411	CompoundStatement		8:12:174:174	3519372	1					
ANR	3519412	ExpressionStatement	old_daemon_list . initializeFromString ( list )	923:2:25372:25414	3519372	0	True				
ANR	3519413	CallExpression	old_daemon_list . initializeFromString ( list )		3519372	0					
ANR	3519414	Callee	old_daemon_list . initializeFromString		3519372	0					
ANR	3519415	MemberAccess	old_daemon_list . initializeFromString		3519372	0					
ANR	3519416	Identifier	old_daemon_list		3519372	0					
ANR	3519417	Identifier	initializeFromString		3519372	1					
ANR	3519418	ArgumentList	list		3519372	1					
ANR	3519419	Argument	list		3519372	0					
ANR	3519420	Identifier	list		3519372	0					
ANR	3519421	ExpressionStatement	free ( list )	924:2:25418:25428	3519372	1	True				
ANR	3519422	CallExpression	free ( list )		3519372	0					
ANR	3519423	Callee	free		3519372	0					
ANR	3519424	Identifier	free		3519372	0					
ANR	3519425	ArgumentList	list		3519372	1					
ANR	3519426	Argument	list		3519372	0					
ANR	3519427	Identifier	list		3519372	0					
ANR	3519428	ExpressionStatement	init_classad ( )	928:1:25490:25504	3519372	6	True				
ANR	3519429	CallExpression	init_classad ( )		3519372	0					
ANR	3519430	Callee	init_classad		3519372	0					
ANR	3519431	Identifier	init_classad		3519372	0					
ANR	3519432	ArgumentList			3519372	1					
ANR	3519433	ExpressionStatement	init_params ( )	931:1:25538:25551	3519372	7	True				
ANR	3519434	CallExpression	init_params ( )		3519372	0					
ANR	3519435	Callee	init_params		3519372	0					
ANR	3519436	Identifier	init_params		3519372	0					
ANR	3519437	ArgumentList			3519372	1					
ANR	3519438	ExpressionStatement	init_daemon_list ( )	934:1:25582:25600	3519372	8	True				
ANR	3519439	CallExpression	init_daemon_list ( )		3519372	0					
ANR	3519440	Callee	init_daemon_list		3519372	0					
ANR	3519441	Identifier	init_daemon_list		3519372	0					
ANR	3519442	ArgumentList			3519372	1					
ANR	3519443	ExpressionStatement	daemons . ordered_daemon_names . rewind ( )	937:1:25643:25680	3519372	9	True				
ANR	3519444	CallExpression	daemons . ordered_daemon_names . rewind ( )		3519372	0					
ANR	3519445	Callee	daemons . ordered_daemon_names . rewind		3519372	0					
ANR	3519446	MemberAccess	daemons . ordered_daemon_names . rewind		3519372	0					
ANR	3519447	MemberAccess	daemons . ordered_daemon_names		3519372	0					
ANR	3519448	Identifier	daemons		3519372	0					
ANR	3519449	Identifier	ordered_daemon_names		3519372	1					
ANR	3519450	Identifier	rewind		3519372	1					
ANR	3519451	ArgumentList			3519372	1					
ANR	3519452	WhileStatement	while ( ( daemon_name = daemons . ordered_daemon_names . next ( ) ) )		3519372	10					
ANR	3519453	Condition	daemon_name = daemons . ordered_daemon_names . next ( )	938:8:25690:25742	3519372	0	True				
ANR	3519454	AssignmentExpression	daemon_name = daemons . ordered_daemon_names . next ( )		3519372	0		=			
ANR	3519455	Identifier	daemon_name		3519372	0					
ANR	3519456	CallExpression	daemons . ordered_daemon_names . next ( )		3519372	1					
ANR	3519457	Callee	daemons . ordered_daemon_names . next		3519372	0					
ANR	3519458	MemberAccess	daemons . ordered_daemon_names . next		3519372	0					
ANR	3519459	MemberAccess	daemons . ordered_daemon_names		3519372	0					
ANR	3519460	Identifier	daemons		3519372	0					
ANR	3519461	Identifier	ordered_daemon_names		3519372	1					
ANR	3519462	Identifier	next		3519372	1					
ANR	3519463	ArgumentList			3519372	1					
ANR	3519464	CompoundStatement		24:64:552:552	3519372	1					
ANR	3519465	IfStatement	if ( ! old_daemon_list . contains ( daemon_name ) )		3519372	0					
ANR	3519466	Condition	! old_daemon_list . contains ( daemon_name )	939:6:25754:25791	3519372	0	True				
ANR	3519467	UnaryOperationExpression	! old_daemon_list . contains ( daemon_name )		3519372	0					
ANR	3519468	UnaryOperator	!		3519372	0					
ANR	3519469	CallExpression	old_daemon_list . contains ( daemon_name )		3519372	1					
ANR	3519470	Callee	old_daemon_list . contains		3519372	0					
ANR	3519471	MemberAccess	old_daemon_list . contains		3519372	0					
ANR	3519472	Identifier	old_daemon_list		3519372	0					
ANR	3519473	Identifier	contains		3519372	1					
ANR	3519474	ArgumentList	daemon_name		3519372	1					
ANR	3519475	Argument	daemon_name		3519372	0					
ANR	3519476	Identifier	daemon_name		3519372	0					
ANR	3519477	CompoundStatement		25:47:601:601	3519372	1					
ANR	3519478	ExpressionStatement	new_daemon = daemons . FindDaemon ( daemon_name )	940:3:25800:25844	3519372	0	True				
ANR	3519479	AssignmentExpression	new_daemon = daemons . FindDaemon ( daemon_name )		3519372	0		=			
ANR	3519480	Identifier	new_daemon		3519372	0					
ANR	3519481	CallExpression	daemons . FindDaemon ( daemon_name )		3519372	1					
ANR	3519482	Callee	daemons . FindDaemon		3519372	0					
ANR	3519483	MemberAccess	daemons . FindDaemon		3519372	0					
ANR	3519484	Identifier	daemons		3519372	0					
ANR	3519485	Identifier	FindDaemon		3519372	1					
ANR	3519486	ArgumentList	daemon_name		3519372	1					
ANR	3519487	Argument	daemon_name		3519372	0					
ANR	3519488	Identifier	daemon_name		3519372	0					
ANR	3519489	IfStatement	if ( new_daemon == NULL )		3519372	1					
ANR	3519490	Condition	new_daemon == NULL	941:8:25854:25871	3519372	0	True				
ANR	3519491	EqualityExpression	new_daemon == NULL		3519372	0		==			
ANR	3519492	Identifier	new_daemon		3519372	0					
ANR	3519493	Identifier	NULL		3519372	1					
ANR	3519494	CompoundStatement		27:29:681:681	3519372	1					
ANR	3519495	ExpressionStatement	"dprintf ( D_ALWAYS , ""Setup for daemon failed\\n"" )"	942:4:25881:25928	3519372	0	True				
ANR	3519496	CallExpression	"dprintf ( D_ALWAYS , ""Setup for daemon failed\\n"" )"		3519372	0					
ANR	3519497	Callee	dprintf		3519372	0					
ANR	3519498	Identifier	dprintf		3519372	0					
ANR	3519499	ArgumentList	D_ALWAYS		3519372	1					
ANR	3519500	Argument	D_ALWAYS		3519372	0					
ANR	3519501	Identifier	D_ALWAYS		3519372	0					
ANR	3519502	Argument	"""Setup for daemon failed\\n"""		3519372	1					
ANR	3519503	PrimaryExpression	"""Setup for daemon failed\\n"""		3519372	0					
ANR	3519504	ElseStatement	else		3519372	0					
ANR	3519505	IfStatement	if ( new_daemon -> SetupController ( ) < 0 )		3519372	0					
ANR	3519506	Condition	new_daemon -> SetupController ( ) < 0	944:13:25948:25980	3519372	0	True				
ANR	3519507	RelationalExpression	new_daemon -> SetupController ( ) < 0		3519372	0		<			
ANR	3519508	CallExpression	new_daemon -> SetupController ( )		3519372	0					
ANR	3519509	Callee	new_daemon -> SetupController		3519372	0					
ANR	3519510	PtrMemberAccess	new_daemon -> SetupController		3519372	0					
ANR	3519511	Identifier	new_daemon		3519372	0					
ANR	3519512	Identifier	SetupController		3519372	1					
ANR	3519513	ArgumentList			3519372	1					
ANR	3519514	PrimaryExpression	0		3519372	1					
ANR	3519515	CompoundStatement		30:49:790:790	3519372	1					
ANR	3519516	ExpressionStatement	"dprintf ( D_ALWAYS , ""Setup for daemon %s failed\\n"" , new_daemon -> daemon_name )"	945:4:25990:26078	3519372	0	True				
ANR	3519517	CallExpression	"dprintf ( D_ALWAYS , ""Setup for daemon %s failed\\n"" , new_daemon -> daemon_name )"		3519372	0					
ANR	3519518	Callee	dprintf		3519372	0					
ANR	3519519	Identifier	dprintf		3519372	0					
ANR	3519520	ArgumentList	D_ALWAYS		3519372	1					
ANR	3519521	Argument	D_ALWAYS		3519372	0					
ANR	3519522	Identifier	D_ALWAYS		3519372	0					
ANR	3519523	Argument	"""Setup for daemon %s failed\\n"""		3519372	1					
ANR	3519524	PrimaryExpression	"""Setup for daemon %s failed\\n"""		3519372	0					
ANR	3519525	Argument	new_daemon -> daemon_name		3519372	2					
ANR	3519526	PtrMemberAccess	new_daemon -> daemon_name		3519372	0					
ANR	3519527	Identifier	new_daemon		3519372	0					
ANR	3519528	Identifier	daemon_name		3519372	1					
ANR	3519529	ElseStatement	else		3519372	0					
ANR	3519530	CompoundStatement		35:8:899:899	3519372	0					
ANR	3519531	ExpressionStatement	++ new_daemons	950:4:26099:26112	3519372	0	True				
ANR	3519532	UnaryExpression	++ new_daemons		3519372	0					
ANR	3519533	IncDec	++		3519372	0					
ANR	3519534	Identifier	new_daemons		3519372	1					
ANR	3519535	ExpressionStatement	old_daemon_list . rewind ( )	956:1:26180:26204	3519372	11	True				
ANR	3519536	CallExpression	old_daemon_list . rewind ( )		3519372	0					
ANR	3519537	Callee	old_daemon_list . rewind		3519372	0					
ANR	3519538	MemberAccess	old_daemon_list . rewind		3519372	0					
ANR	3519539	Identifier	old_daemon_list		3519372	0					
ANR	3519540	Identifier	rewind		3519372	1					
ANR	3519541	ArgumentList			3519372	1					
ANR	3519542	WhileStatement	while ( ( daemon_name = old_daemon_list . next ( ) ) )		3519372	12					
ANR	3519543	Condition	daemon_name = old_daemon_list . next ( )	957:8:26214:26251	3519372	0	True				
ANR	3519544	AssignmentExpression	daemon_name = old_daemon_list . next ( )		3519372	0		=			
ANR	3519545	Identifier	daemon_name		3519372	0					
ANR	3519546	CallExpression	old_daemon_list . next ( )		3519372	1					
ANR	3519547	Callee	old_daemon_list . next		3519372	0					
ANR	3519548	MemberAccess	old_daemon_list . next		3519372	0					
ANR	3519549	Identifier	old_daemon_list		3519372	0					
ANR	3519550	Identifier	next		3519372	1					
ANR	3519551	ArgumentList			3519372	1					
ANR	3519552	CompoundStatement		43:49:1061:1061	3519372	1					
ANR	3519553	IfStatement	if ( ! daemons . ordered_daemon_names . contains ( daemon_name ) )		3519372	0					
ANR	3519554	Condition	! daemons . ordered_daemon_names . contains ( daemon_name )	958:6:26263:26313	3519372	0	True				
ANR	3519555	UnaryOperationExpression	! daemons . ordered_daemon_names . contains ( daemon_name )		3519372	0					
ANR	3519556	UnaryOperator	!		3519372	0					
ANR	3519557	CallExpression	daemons . ordered_daemon_names . contains ( daemon_name )		3519372	1					
ANR	3519558	Callee	daemons . ordered_daemon_names . contains		3519372	0					
ANR	3519559	MemberAccess	daemons . ordered_daemon_names . contains		3519372	0					
ANR	3519560	MemberAccess	daemons . ordered_daemon_names		3519372	0					
ANR	3519561	Identifier	daemons		3519372	0					
ANR	3519562	Identifier	ordered_daemon_names		3519372	1					
ANR	3519563	Identifier	contains		3519372	1					
ANR	3519564	ArgumentList	daemon_name		3519372	1					
ANR	3519565	Argument	daemon_name		3519372	0					
ANR	3519566	Identifier	daemon_name		3519372	0					
ANR	3519567	CompoundStatement		44:60:1123:1123	3519372	1					
ANR	3519568	IfStatement	if ( NULL != daemons . FindDaemon ( daemon_name ) )		3519372	0					
ANR	3519569	Condition	NULL != daemons . FindDaemon ( daemon_name )	959:7:26326:26364	3519372	0	True				
ANR	3519570	EqualityExpression	NULL != daemons . FindDaemon ( daemon_name )		3519372	0		!=			
ANR	3519571	Identifier	NULL		3519372	0					
ANR	3519572	CallExpression	daemons . FindDaemon ( daemon_name )		3519372	1					
ANR	3519573	Callee	daemons . FindDaemon		3519372	0					
ANR	3519574	MemberAccess	daemons . FindDaemon		3519372	0					
ANR	3519575	Identifier	daemons		3519372	0					
ANR	3519576	Identifier	FindDaemon		3519372	1					
ANR	3519577	ArgumentList	daemon_name		3519372	1					
ANR	3519578	Argument	daemon_name		3519372	0					
ANR	3519579	Identifier	daemon_name		3519372	0					
ANR	3519580	CompoundStatement		45:49:1174:1174	3519372	1					
ANR	3519581	ExpressionStatement	daemons . StopDaemon ( daemon_name )	960:4:26374:26405	3519372	0	True				
ANR	3519582	CallExpression	daemons . StopDaemon ( daemon_name )		3519372	0					
ANR	3519583	Callee	daemons . StopDaemon		3519372	0					
ANR	3519584	MemberAccess	daemons . StopDaemon		3519372	0					
ANR	3519585	Identifier	daemons		3519372	0					
ANR	3519586	Identifier	StopDaemon		3519372	1					
ANR	3519587	ArgumentList	daemon_name		3519372	1					
ANR	3519588	Argument	daemon_name		3519372	0					
ANR	3519589	Identifier	daemon_name		3519372	0					
ANR	3519590	ExpressionStatement	daemons . InitParams ( )	968:1:26552:26572	3519372	13	True				
ANR	3519591	CallExpression	daemons . InitParams ( )		3519372	0					
ANR	3519592	Callee	daemons . InitParams		3519372	0					
ANR	3519593	MemberAccess	daemons . InitParams		3519372	0					
ANR	3519594	Identifier	daemons		3519372	0					
ANR	3519595	Identifier	InitParams		3519372	1					
ANR	3519596	ArgumentList			3519372	1					
ANR	3519597	IfStatement	if ( StartDaemons )		3519372	14					
ANR	3519598	Condition	StartDaemons	970:5:26580:26591	3519372	0	True				
ANR	3519599	Identifier	StartDaemons		3519372	0					
ANR	3519600	CompoundStatement		56:20:1401:1401	3519372	1					
ANR	3519601	ExpressionStatement	daemons . immediate_restart = TRUE	973:2:26712:26744	3519372	0	True				
ANR	3519602	AssignmentExpression	daemons . immediate_restart = TRUE		3519372	0		=			
ANR	3519603	MemberAccess	daemons . immediate_restart		3519372	0					
ANR	3519604	Identifier	daemons		3519372	0					
ANR	3519605	Identifier	immediate_restart		3519372	1					
ANR	3519606	Identifier	TRUE		3519372	1					
ANR	3519607	ExpressionStatement	daemons . CheckForNewExecutable ( )	974:2:26748:26779	3519372	1	True				
ANR	3519608	CallExpression	daemons . CheckForNewExecutable ( )		3519372	0					
ANR	3519609	Callee	daemons . CheckForNewExecutable		3519372	0					
ANR	3519610	MemberAccess	daemons . CheckForNewExecutable		3519372	0					
ANR	3519611	Identifier	daemons		3519372	0					
ANR	3519612	Identifier	CheckForNewExecutable		3519372	1					
ANR	3519613	ArgumentList			3519372	1					
ANR	3519614	ExpressionStatement	daemons . immediate_restart = FALSE	975:2:26783:26816	3519372	2	True				
ANR	3519615	AssignmentExpression	daemons . immediate_restart = FALSE		3519372	0		=			
ANR	3519616	MemberAccess	daemons . immediate_restart		3519372	0					
ANR	3519617	Identifier	daemons		3519372	0					
ANR	3519618	Identifier	immediate_restart		3519372	1					
ANR	3519619	Identifier	FALSE		3519372	1					
ANR	3519620	ExpressionStatement	daemons . ReconfigAllDaemons ( )	977:2:26877:26905	3519372	3	True				
ANR	3519621	CallExpression	daemons . ReconfigAllDaemons ( )		3519372	0					
ANR	3519622	Callee	daemons . ReconfigAllDaemons		3519372	0					
ANR	3519623	MemberAccess	daemons . ReconfigAllDaemons		3519372	0					
ANR	3519624	Identifier	daemons		3519372	0					
ANR	3519625	Identifier	ReconfigAllDaemons		3519372	1					
ANR	3519626	ArgumentList			3519372	1					
ANR	3519627	IfStatement	if ( new_daemons > 0 )		3519372	4					
ANR	3519628	Condition	new_daemons > 0	979:6:26914:26928	3519372	0	True				
ANR	3519629	RelationalExpression	new_daemons > 0		3519372	0		>			
ANR	3519630	Identifier	new_daemons		3519372	0					
ANR	3519631	PrimaryExpression	0		3519372	1					
ANR	3519632	CompoundStatement		65:24:1738:1738	3519372	1					
ANR	3519633	ExpressionStatement	daemons . StartAllDaemons ( )	981:3:26962:26987	3519372	0	True				
ANR	3519634	CallExpression	daemons . StartAllDaemons ( )		3519372	0					
ANR	3519635	Callee	daemons . StartAllDaemons		3519372	0					
ANR	3519636	MemberAccess	daemons . StartAllDaemons		3519372	0					
ANR	3519637	Identifier	daemons		3519372	0					
ANR	3519638	Identifier	StartAllDaemons		3519372	1					
ANR	3519639	ArgumentList			3519372	1					
ANR	3519640	ElseStatement	else		3519372	0					
ANR	3519641	CompoundStatement		70:8:1809:1809	3519372	0					
ANR	3519642	ExpressionStatement	daemons . DaemonsOff ( )	985:2:27007:27027	3519372	0	True				
ANR	3519643	CallExpression	daemons . DaemonsOff ( )		3519372	0					
ANR	3519644	Callee	daemons . DaemonsOff		3519372	0					
ANR	3519645	MemberAccess	daemons . DaemonsOff		3519372	0					
ANR	3519646	Identifier	daemons		3519372	0					
ANR	3519647	Identifier	DaemonsOff		3519372	1					
ANR	3519648	ArgumentList			3519372	1					
ANR	3519649	ExpressionStatement	daemonCore -> invalidateSessionCache ( )	988:4:27073:27109	3519372	15	True				
ANR	3519650	CallExpression	daemonCore -> invalidateSessionCache ( )		3519372	0					
ANR	3519651	Callee	daemonCore -> invalidateSessionCache		3519372	0					
ANR	3519652	PtrMemberAccess	daemonCore -> invalidateSessionCache		3519372	0					
ANR	3519653	Identifier	daemonCore		3519372	0					
ANR	3519654	Identifier	invalidateSessionCache		3519372	1					
ANR	3519655	ArgumentList			3519372	1					
ANR	3519656	ExpressionStatement	daemons . StartTimers ( )	991:1:27188:27209	3519372	16	True				
ANR	3519657	CallExpression	daemons . StartTimers ( )		3519372	0					
ANR	3519658	Callee	daemons . StartTimers		3519372	0					
ANR	3519659	MemberAccess	daemons . StartTimers		3519372	0					
ANR	3519660	Identifier	daemons		3519372	0					
ANR	3519661	Identifier	StartTimers		3519372	1					
ANR	3519662	ArgumentList			3519372	1					
ANR	3519663	ExpressionStatement	daemons . UpdateCollector ( )	992:1:27212:27237	3519372	17	True				
ANR	3519664	CallExpression	daemons . UpdateCollector ( )		3519372	0					
ANR	3519665	Callee	daemons . UpdateCollector		3519372	0					
ANR	3519666	MemberAccess	daemons . UpdateCollector		3519372	0					
ANR	3519667	Identifier	daemons		3519372	0					
ANR	3519668	Identifier	UpdateCollector		3519372	1					
ANR	3519669	ArgumentList			3519372	1					
ANR	3519670	ReturnType	void		3519372	1					
ANR	3519671	Identifier	main_config		3519372	2					
ANR	3519672	ParameterList			3519372	3					
ANR	3519673	CFGEntryNode	ENTRY		3519372		True				
ANR	3519674	CFGExitNode	EXIT		3519372		True				
ANR	3519675	Symbol	daemons . ordered_daemon_names		3519372						
ANR	3519676	Symbol	NULL		3519372						
ANR	3519677	Symbol	new_daemons		3519372						
ANR	3519678	Symbol	daemon_name		3519372						
ANR	3519679	Symbol	D_ALWAYS		3519372						
ANR	3519680	Symbol	* new_daemon		3519372						
ANR	3519681	Symbol	TRUE		3519372						
ANR	3519682	Symbol	list		3519372						
ANR	3519683	Symbol	old_daemon_list . contains		3519372						
ANR	3519684	Symbol	old_daemon_list . next		3519372						
ANR	3519685	Symbol	old_daemon_list		3519372						
ANR	3519686	Symbol	new_daemon -> daemon_name		3519372						
ANR	3519687	Symbol	new_daemon -> SetupController		3519372						
ANR	3519688	Symbol	StartDaemons		3519372						
ANR	3519689	Symbol	daemons . ordered_daemon_names . next		3519372						
ANR	3519690	Symbol	daemons . ordered_daemon_names . contains		3519372						
ANR	3519691	Symbol	new_daemon		3519372						
ANR	3519692	Symbol	daemonCore		3519372						
ANR	3519693	Symbol	daemons		3519372						
ANR	3519694	Symbol	daemons . immediate_restart		3519372						
ANR	3519695	Symbol	daemons . FindDaemon		3519372						
ANR	3519696	Symbol	FALSE		3519372						
ANR	3519697	Symbol	daemons . ordered_daemon_names . print_to_string		3519372						
ANR	3519698	Function	main_shutdown_fast	998:0:27283:27539							
ANR	3519699	FunctionDef	main_shutdown_fast ()		3519698	0					
ANR	3519700	CompoundStatement		1000:0:27309:27539	3519698	0					
ANR	3519701	ExpressionStatement	invalidate_ads ( )	1001:1:27312:27328	3519698	0	True				
ANR	3519702	CallExpression	invalidate_ads ( )		3519698	0					
ANR	3519703	Callee	invalidate_ads		3519698	0					
ANR	3519704	Identifier	invalidate_ads		3519698	0					
ANR	3519705	ArgumentList			3519698	1					
ANR	3519706	ExpressionStatement	MasterShuttingDown = TRUE	1003:1:27333:27358	3519698	1	True				
ANR	3519707	AssignmentExpression	MasterShuttingDown = TRUE		3519698	0		=			
ANR	3519708	Identifier	MasterShuttingDown		3519698	0					
ANR	3519709	Identifier	TRUE		3519698	1					
ANR	3519710	ExpressionStatement	daemons . SetAllGoneAction ( MASTER_EXIT )	1004:1:27361:27400	3519698	2	True				
ANR	3519711	CallExpression	daemons . SetAllGoneAction ( MASTER_EXIT )		3519698	0					
ANR	3519712	Callee	daemons . SetAllGoneAction		3519698	0					
ANR	3519713	MemberAccess	daemons . SetAllGoneAction		3519698	0					
ANR	3519714	Identifier	daemons		3519698	0					
ANR	3519715	Identifier	SetAllGoneAction		3519698	1					
ANR	3519716	ArgumentList	MASTER_EXIT		3519698	1					
ANR	3519717	Argument	MASTER_EXIT		3519698	0					
ANR	3519718	Identifier	MASTER_EXIT		3519698	0					
ANR	3519719	IfStatement	if ( daemons . NumberOfChildren ( ) == 0 )		3519698	3					
ANR	3519720	Condition	daemons . NumberOfChildren ( ) == 0	1006:5:27408:27438	3519698	0	True				
ANR	3519721	EqualityExpression	daemons . NumberOfChildren ( ) == 0		3519698	0		==			
ANR	3519722	CallExpression	daemons . NumberOfChildren ( )		3519698	0					
ANR	3519723	Callee	daemons . NumberOfChildren		3519698	0					
ANR	3519724	MemberAccess	daemons . NumberOfChildren		3519698	0					
ANR	3519725	Identifier	daemons		3519698	0					
ANR	3519726	Identifier	NumberOfChildren		3519698	1					
ANR	3519727	ArgumentList			3519698	1					
ANR	3519728	PrimaryExpression	0		3519698	1					
ANR	3519729	CompoundStatement		7:39:132:132	3519698	1					
ANR	3519730	ExpressionStatement	daemons . AllDaemonsGone ( )	1007:2:27446:27470	3519698	0	True				
ANR	3519731	CallExpression	daemons . AllDaemonsGone ( )		3519698	0					
ANR	3519732	Callee	daemons . AllDaemonsGone		3519698	0					
ANR	3519733	MemberAccess	daemons . AllDaemonsGone		3519698	0					
ANR	3519734	Identifier	daemons		3519698	0					
ANR	3519735	Identifier	AllDaemonsGone		3519698	1					
ANR	3519736	ArgumentList			3519698	1					
ANR	3519737	ExpressionStatement	daemons . CancelRestartTimers ( )	1010:1:27477:27506	3519698	4	True				
ANR	3519738	CallExpression	daemons . CancelRestartTimers ( )		3519698	0					
ANR	3519739	Callee	daemons . CancelRestartTimers		3519698	0					
ANR	3519740	MemberAccess	daemons . CancelRestartTimers		3519698	0					
ANR	3519741	Identifier	daemons		3519698	0					
ANR	3519742	Identifier	CancelRestartTimers		3519698	1					
ANR	3519743	ArgumentList			3519698	1					
ANR	3519744	ExpressionStatement	daemons . StopFastAllDaemons ( )	1011:1:27509:27537	3519698	5	True				
ANR	3519745	CallExpression	daemons . StopFastAllDaemons ( )		3519698	0					
ANR	3519746	Callee	daemons . StopFastAllDaemons		3519698	0					
ANR	3519747	MemberAccess	daemons . StopFastAllDaemons		3519698	0					
ANR	3519748	Identifier	daemons		3519698	0					
ANR	3519749	Identifier	StopFastAllDaemons		3519698	1					
ANR	3519750	ArgumentList			3519698	1					
ANR	3519751	ReturnType	void		3519698	1					
ANR	3519752	Identifier	main_shutdown_fast		3519698	2					
ANR	3519753	ParameterList			3519698	3					
ANR	3519754	CFGEntryNode	ENTRY		3519698		True				
ANR	3519755	CFGExitNode	EXIT		3519698		True				
ANR	3519756	Symbol	MasterShuttingDown		3519698						
ANR	3519757	Symbol	MASTER_EXIT		3519698						
ANR	3519758	Symbol	daemons . NumberOfChildren		3519698						
ANR	3519759	Symbol	daemons		3519698						
ANR	3519760	Symbol	TRUE		3519698						
ANR	3519761	Function	main_shutdown_graceful	1018:0:27608:27864							
ANR	3519762	FunctionDef	main_shutdown_graceful ()		3519761	0					
ANR	3519763	CompoundStatement		1020:0:27638:27864	3519761	0					
ANR	3519764	ExpressionStatement	invalidate_ads ( )	1021:1:27641:27657	3519761	0	True				
ANR	3519765	CallExpression	invalidate_ads ( )		3519761	0					
ANR	3519766	Callee	invalidate_ads		3519761	0					
ANR	3519767	Identifier	invalidate_ads		3519761	0					
ANR	3519768	ArgumentList			3519761	1					
ANR	3519769	ExpressionStatement	MasterShuttingDown = TRUE	1023:1:27662:27687	3519761	1	True				
ANR	3519770	AssignmentExpression	MasterShuttingDown = TRUE		3519761	0		=			
ANR	3519771	Identifier	MasterShuttingDown		3519761	0					
ANR	3519772	Identifier	TRUE		3519761	1					
ANR	3519773	ExpressionStatement	daemons . SetAllGoneAction ( MASTER_EXIT )	1024:1:27690:27729	3519761	2	True				
ANR	3519774	CallExpression	daemons . SetAllGoneAction ( MASTER_EXIT )		3519761	0					
ANR	3519775	Callee	daemons . SetAllGoneAction		3519761	0					
ANR	3519776	MemberAccess	daemons . SetAllGoneAction		3519761	0					
ANR	3519777	Identifier	daemons		3519761	0					
ANR	3519778	Identifier	SetAllGoneAction		3519761	1					
ANR	3519779	ArgumentList	MASTER_EXIT		3519761	1					
ANR	3519780	Argument	MASTER_EXIT		3519761	0					
ANR	3519781	Identifier	MASTER_EXIT		3519761	0					
ANR	3519782	IfStatement	if ( daemons . NumberOfChildren ( ) == 0 )		3519761	3					
ANR	3519783	Condition	daemons . NumberOfChildren ( ) == 0	1026:5:27737:27767	3519761	0	True				
ANR	3519784	EqualityExpression	daemons . NumberOfChildren ( ) == 0		3519761	0		==			
ANR	3519785	CallExpression	daemons . NumberOfChildren ( )		3519761	0					
ANR	3519786	Callee	daemons . NumberOfChildren		3519761	0					
ANR	3519787	MemberAccess	daemons . NumberOfChildren		3519761	0					
ANR	3519788	Identifier	daemons		3519761	0					
ANR	3519789	Identifier	NumberOfChildren		3519761	1					
ANR	3519790	ArgumentList			3519761	1					
ANR	3519791	PrimaryExpression	0		3519761	1					
ANR	3519792	CompoundStatement		7:39:132:132	3519761	1					
ANR	3519793	ExpressionStatement	daemons . AllDaemonsGone ( )	1027:2:27775:27799	3519761	0	True				
ANR	3519794	CallExpression	daemons . AllDaemonsGone ( )		3519761	0					
ANR	3519795	Callee	daemons . AllDaemonsGone		3519761	0					
ANR	3519796	MemberAccess	daemons . AllDaemonsGone		3519761	0					
ANR	3519797	Identifier	daemons		3519761	0					
ANR	3519798	Identifier	AllDaemonsGone		3519761	1					
ANR	3519799	ArgumentList			3519761	1					
ANR	3519800	ExpressionStatement	daemons . CancelRestartTimers ( )	1030:1:27806:27835	3519761	4	True				
ANR	3519801	CallExpression	daemons . CancelRestartTimers ( )		3519761	0					
ANR	3519802	Callee	daemons . CancelRestartTimers		3519761	0					
ANR	3519803	MemberAccess	daemons . CancelRestartTimers		3519761	0					
ANR	3519804	Identifier	daemons		3519761	0					
ANR	3519805	Identifier	CancelRestartTimers		3519761	1					
ANR	3519806	ArgumentList			3519761	1					
ANR	3519807	ExpressionStatement	daemons . StopAllDaemons ( )	1031:1:27838:27862	3519761	5	True				
ANR	3519808	CallExpression	daemons . StopAllDaemons ( )		3519761	0					
ANR	3519809	Callee	daemons . StopAllDaemons		3519761	0					
ANR	3519810	MemberAccess	daemons . StopAllDaemons		3519761	0					
ANR	3519811	Identifier	daemons		3519761	0					
ANR	3519812	Identifier	StopAllDaemons		3519761	1					
ANR	3519813	ArgumentList			3519761	1					
ANR	3519814	ReturnType	void		3519761	1					
ANR	3519815	Identifier	main_shutdown_graceful		3519761	2					
ANR	3519816	ParameterList			3519761	3					
ANR	3519817	CFGEntryNode	ENTRY		3519761		True				
ANR	3519818	CFGExitNode	EXIT		3519761		True				
ANR	3519819	Symbol	MasterShuttingDown		3519761						
ANR	3519820	Symbol	MASTER_EXIT		3519761						
ANR	3519821	Symbol	daemons . NumberOfChildren		3519761						
ANR	3519822	Symbol	daemons		3519761						
ANR	3519823	Symbol	TRUE		3519761						
ANR	3519824	Function	invalidate_ads	1034:0:27867:28545							
ANR	3519825	FunctionDef	invalidate_ads ()		3519824	0					
ANR	3519826	CompoundStatement		1035:17:27889:28545	3519824	0					
ANR	3519827	IdentifierDeclStatement	ClassAd cmd_ad ;	1036:1:27892:27906	3519824	0	True				
ANR	3519828	IdentifierDecl	cmd_ad		3519824	0					
ANR	3519829	IdentifierDeclType	ClassAd		3519824	0					
ANR	3519830	Identifier	cmd_ad		3519824	1					
ANR	3519831	ExpressionStatement	cmd_ad . SetMyTypeName ( QUERY_ADTYPE )	1037:1:27909:27945	3519824	1	True				
ANR	3519832	CallExpression	cmd_ad . SetMyTypeName ( QUERY_ADTYPE )		3519824	0					
ANR	3519833	Callee	cmd_ad . SetMyTypeName		3519824	0					
ANR	3519834	MemberAccess	cmd_ad . SetMyTypeName		3519824	0					
ANR	3519835	Identifier	cmd_ad		3519824	0					
ANR	3519836	Identifier	SetMyTypeName		3519824	1					
ANR	3519837	ArgumentList	QUERY_ADTYPE		3519824	1					
ANR	3519838	Argument	QUERY_ADTYPE		3519824	0					
ANR	3519839	Identifier	QUERY_ADTYPE		3519824	0					
ANR	3519840	ExpressionStatement	cmd_ad . SetTargetTypeName ( MASTER_ADTYPE )	1038:1:27948:27989	3519824	2	True				
ANR	3519841	CallExpression	cmd_ad . SetTargetTypeName ( MASTER_ADTYPE )		3519824	0					
ANR	3519842	Callee	cmd_ad . SetTargetTypeName		3519824	0					
ANR	3519843	MemberAccess	cmd_ad . SetTargetTypeName		3519824	0					
ANR	3519844	Identifier	cmd_ad		3519824	0					
ANR	3519845	Identifier	SetTargetTypeName		3519824	1					
ANR	3519846	ArgumentList	MASTER_ADTYPE		3519824	1					
ANR	3519847	Argument	MASTER_ADTYPE		3519824	0					
ANR	3519848	Identifier	MASTER_ADTYPE		3519824	0					
ANR	3519849	IdentifierDeclStatement	MyString line ;	1040:1:27994:28007	3519824	3	True				
ANR	3519850	IdentifierDecl	line		3519824	0					
ANR	3519851	IdentifierDeclType	MyString		3519824	0					
ANR	3519852	Identifier	line		3519824	1					
ANR	3519853	IdentifierDeclStatement	MyString escaped_name ;	1041:1:28010:28031	3519824	4	True				
ANR	3519854	IdentifierDecl	escaped_name		3519824	0					
ANR	3519855	IdentifierDeclType	MyString		3519824	0					
ANR	3519856	Identifier	escaped_name		3519824	1					
ANR	3519857	Statement	char	1042:1:28034:28037	3519824	5	True				
ANR	3519858	Statement	*	1042:5:28038:28038	3519824	6	True				
ANR	3519859	Statement	default_name	1042:7:28040:28051	3519824	7	True				
ANR	3519860	Statement	=	1042:20:28053:28053	3519824	8	True				
ANR	3519861	Statement	::	1042:22:28055:28056	3519824	9	True				
ANR	3519862	ExpressionStatement	strnewp ( MasterName )	1042:24:28057:28076	3519824	10	True				
ANR	3519863	CallExpression	strnewp ( MasterName )		3519824	0					
ANR	3519864	Callee	strnewp		3519824	0					
ANR	3519865	Identifier	strnewp		3519824	0					
ANR	3519866	ArgumentList	MasterName		3519824	1					
ANR	3519867	Argument	MasterName		3519824	0					
ANR	3519868	Identifier	MasterName		3519824	0					
ANR	3519869	IfStatement	if ( ! default_name )		3519824	11					
ANR	3519870	Condition	! default_name	1043:4:28082:28094	3519824	0	True				
ANR	3519871	UnaryOperationExpression	! default_name		3519824	0					
ANR	3519872	UnaryOperator	!		3519824	0					
ANR	3519873	Identifier	default_name		3519824	1					
ANR	3519874	CompoundStatement		9:19:207:207	3519824	1					
ANR	3519875	ExpressionStatement	default_name = default_daemon_name ( )	1044:2:28101:28137	3519824	0	True				
ANR	3519876	AssignmentExpression	default_name = default_daemon_name ( )		3519824	0		=			
ANR	3519877	Identifier	default_name		3519824	0					
ANR	3519878	CallExpression	default_daemon_name ( )		3519824	1					
ANR	3519879	Callee	default_daemon_name		3519824	0					
ANR	3519880	Identifier	default_daemon_name		3519824	0					
ANR	3519881	ArgumentList			3519824	1					
ANR	3519882	ExpressionStatement	"ClassAd :: EscapeStringValue ( default_name , escaped_name )"	1047:1:28145:28201	3519824	12	True				
ANR	3519883	CallExpression	"ClassAd :: EscapeStringValue ( default_name , escaped_name )"		3519824	0					
ANR	3519884	Callee	ClassAd :: EscapeStringValue		3519824	0					
ANR	3519885	Identifier	ClassAd :: EscapeStringValue		3519824	0					
ANR	3519886	ArgumentList	default_name		3519824	1					
ANR	3519887	Argument	default_name		3519824	0					
ANR	3519888	Identifier	default_name		3519824	0					
ANR	3519889	Argument	escaped_name		3519824	1					
ANR	3519890	Identifier	escaped_name		3519824	0					
ANR	3519891	ExpressionStatement	"line . sprintf ( ""( TARGET.%s == \\""%s\\"" )"" , ATTR_NAME , escaped_name . Value ( ) )"	1048:1:28204:28278	3519824	13	True				
ANR	3519892	CallExpression	"line . sprintf ( ""( TARGET.%s == \\""%s\\"" )"" , ATTR_NAME , escaped_name . Value ( ) )"		3519824	0					
ANR	3519893	Callee	line . sprintf		3519824	0					
ANR	3519894	MemberAccess	line . sprintf		3519824	0					
ANR	3519895	Identifier	line		3519824	0					
ANR	3519896	Identifier	sprintf		3519824	1					
ANR	3519897	ArgumentList	"""( TARGET.%s == \\""%s\\"" )"""		3519824	1					
ANR	3519898	Argument	"""( TARGET.%s == \\""%s\\"" )"""		3519824	0					
ANR	3519899	PrimaryExpression	"""( TARGET.%s == \\""%s\\"" )"""		3519824	0					
ANR	3519900	Argument	ATTR_NAME		3519824	1					
ANR	3519901	Identifier	ATTR_NAME		3519824	0					
ANR	3519902	Argument	escaped_name . Value ( )		3519824	2					
ANR	3519903	CallExpression	escaped_name . Value ( )		3519824	0					
ANR	3519904	Callee	escaped_name . Value		3519824	0					
ANR	3519905	MemberAccess	escaped_name . Value		3519824	0					
ANR	3519906	Identifier	escaped_name		3519824	0					
ANR	3519907	Identifier	Value		3519824	1					
ANR	3519908	ArgumentList			3519824	1					
ANR	3519909	ExpressionStatement	"cmd_ad . AssignExpr ( ATTR_REQUIREMENTS , line . Value ( ) )"	1049:1:28281:28333	3519824	14	True				
ANR	3519910	CallExpression	"cmd_ad . AssignExpr ( ATTR_REQUIREMENTS , line . Value ( ) )"		3519824	0					
ANR	3519911	Callee	cmd_ad . AssignExpr		3519824	0					
ANR	3519912	MemberAccess	cmd_ad . AssignExpr		3519824	0					
ANR	3519913	Identifier	cmd_ad		3519824	0					
ANR	3519914	Identifier	AssignExpr		3519824	1					
ANR	3519915	ArgumentList	ATTR_REQUIREMENTS		3519824	1					
ANR	3519916	Argument	ATTR_REQUIREMENTS		3519824	0					
ANR	3519917	Identifier	ATTR_REQUIREMENTS		3519824	0					
ANR	3519918	Argument	line . Value ( )		3519824	1					
ANR	3519919	CallExpression	line . Value ( )		3519824	0					
ANR	3519920	Callee	line . Value		3519824	0					
ANR	3519921	MemberAccess	line . Value		3519824	0					
ANR	3519922	Identifier	line		3519824	0					
ANR	3519923	Identifier	Value		3519824	1					
ANR	3519924	ArgumentList			3519824	1					
ANR	3519925	ExpressionStatement	"cmd_ad . Assign ( ATTR_NAME , default_name )"	1050:1:28336:28376	3519824	15	True				
ANR	3519926	CallExpression	"cmd_ad . Assign ( ATTR_NAME , default_name )"		3519824	0					
ANR	3519927	Callee	cmd_ad . Assign		3519824	0					
ANR	3519928	MemberAccess	cmd_ad . Assign		3519824	0					
ANR	3519929	Identifier	cmd_ad		3519824	0					
ANR	3519930	Identifier	Assign		3519824	1					
ANR	3519931	ArgumentList	ATTR_NAME		3519824	1					
ANR	3519932	Argument	ATTR_NAME		3519824	0					
ANR	3519933	Identifier	ATTR_NAME		3519824	0					
ANR	3519934	Argument	default_name		3519824	1					
ANR	3519935	Identifier	default_name		3519824	0					
ANR	3519936	ExpressionStatement	"cmd_ad . Assign ( ATTR_MY_ADDRESS , daemonCore -> publicNetworkIpAddr ( ) )"	1051:1:28379:28445	3519824	16	True				
ANR	3519937	CallExpression	"cmd_ad . Assign ( ATTR_MY_ADDRESS , daemonCore -> publicNetworkIpAddr ( ) )"		3519824	0					
ANR	3519938	Callee	cmd_ad . Assign		3519824	0					
ANR	3519939	MemberAccess	cmd_ad . Assign		3519824	0					
ANR	3519940	Identifier	cmd_ad		3519824	0					
ANR	3519941	Identifier	Assign		3519824	1					
ANR	3519942	ArgumentList	ATTR_MY_ADDRESS		3519824	1					
ANR	3519943	Argument	ATTR_MY_ADDRESS		3519824	0					
ANR	3519944	Identifier	ATTR_MY_ADDRESS		3519824	0					
ANR	3519945	Argument	daemonCore -> publicNetworkIpAddr ( )		3519824	1					
ANR	3519946	CallExpression	daemonCore -> publicNetworkIpAddr ( )		3519824	0					
ANR	3519947	Callee	daemonCore -> publicNetworkIpAddr		3519824	0					
ANR	3519948	PtrMemberAccess	daemonCore -> publicNetworkIpAddr		3519824	0					
ANR	3519949	Identifier	daemonCore		3519824	0					
ANR	3519950	Identifier	publicNetworkIpAddr		3519824	1					
ANR	3519951	ArgumentList			3519824	1					
ANR	3519952	ExpressionStatement	"daemonCore -> sendUpdates ( INVALIDATE_MASTER_ADS , & cmd_ad , NULL , false )"	1052:1:28448:28518	3519824	17	True				
ANR	3519953	CallExpression	"daemonCore -> sendUpdates ( INVALIDATE_MASTER_ADS , & cmd_ad , NULL , false )"		3519824	0					
ANR	3519954	Callee	daemonCore -> sendUpdates		3519824	0					
ANR	3519955	PtrMemberAccess	daemonCore -> sendUpdates		3519824	0					
ANR	3519956	Identifier	daemonCore		3519824	0					
ANR	3519957	Identifier	sendUpdates		3519824	1					
ANR	3519958	ArgumentList	INVALIDATE_MASTER_ADS		3519824	1					
ANR	3519959	Argument	INVALIDATE_MASTER_ADS		3519824	0					
ANR	3519960	Identifier	INVALIDATE_MASTER_ADS		3519824	0					
ANR	3519961	Argument	& cmd_ad		3519824	1					
ANR	3519962	UnaryOperationExpression	& cmd_ad		3519824	0					
ANR	3519963	UnaryOperator	&		3519824	0					
ANR	3519964	Identifier	cmd_ad		3519824	1					
ANR	3519965	Argument	NULL		3519824	2					
ANR	3519966	Identifier	NULL		3519824	0					
ANR	3519967	Argument	false		3519824	3					
ANR	3519968	Identifier	false		3519824	0					
ANR	3519969	Statement	delete	1053:1:28521:28526	3519824	18	True				
ANR	3519970	Statement	[	1053:8:28528:28528	3519824	19	True				
ANR	3519971	Statement	]	1053:9:28529:28529	3519824	20	True				
ANR	3519972	ExpressionStatement	default_name	1053:11:28531:28543	3519824	21	True				
ANR	3519973	Identifier	default_name		3519824	0					
ANR	3519974	ReturnType	void		3519824	1					
ANR	3519975	Identifier	invalidate_ads		3519824	2					
ANR	3519976	ParameterList			3519824	3					
ANR	3519977	CFGEntryNode	ENTRY		3519824		True				
ANR	3519978	CFGExitNode	EXIT		3519824		True				
ANR	3519979	Symbol	ATTR_NAME		3519824						
ANR	3519980	Symbol	NULL		3519824						
ANR	3519981	Symbol	line . Value		3519824						
ANR	3519982	Symbol	line		3519824						
ANR	3519983	Symbol	ATTR_REQUIREMENTS		3519824						
ANR	3519984	Symbol	false		3519824						
ANR	3519985	Symbol	MASTER_ADTYPE		3519824						
ANR	3519986	Symbol	daemonCore -> publicNetworkIpAddr		3519824						
ANR	3519987	Symbol	MasterName		3519824						
ANR	3519988	Symbol	& cmd_ad		3519824						
ANR	3519989	Symbol	QUERY_ADTYPE		3519824						
ANR	3519990	Symbol	default_name		3519824						
ANR	3519991	Symbol	escaped_name		3519824						
ANR	3519992	Symbol	INVALIDATE_MASTER_ADS		3519824						
ANR	3519993	Symbol	cmd_ad		3519824						
ANR	3519994	Symbol	* daemonCore		3519824						
ANR	3519995	Symbol	daemonCore		3519824						
ANR	3519996	Symbol	default_daemon_name		3519824						
ANR	3519997	Symbol	ATTR_MY_ADDRESS		3519824						
ANR	3519998	Symbol	escaped_name . Value		3519824						
ANR	3519999	Function	GetTimeStamp	1056:0:28548:28690							
ANR	3520000	FunctionDef	GetTimeStamp (char * file)		3519999	0					
ANR	3520001	CompoundStatement		1058:0:28580:28690	3519999	0					
ANR	3520002	IdentifierDeclStatement	struct stat sbuf ;	1059:1:28583:28599	3519999	0	True				
ANR	3520003	IdentifierDecl	sbuf		3519999	0					
ANR	3520004	IdentifierDeclType	struct stat		3519999	0					
ANR	3520005	Identifier	sbuf		3519999	1					
ANR	3520006	IfStatement	"if ( stat ( file , & sbuf ) < 0 )"		3519999	1					
ANR	3520007	Condition	"stat ( file , & sbuf ) < 0"	1061:5:28608:28628	3519999	0	True				
ANR	3520008	RelationalExpression	"stat ( file , & sbuf ) < 0"		3519999	0		<			
ANR	3520009	CallExpression	"stat ( file , & sbuf )"		3519999	0					
ANR	3520010	Callee	stat		3519999	0					
ANR	3520011	Identifier	stat		3519999	0					
ANR	3520012	ArgumentList	file		3519999	1					
ANR	3520013	Argument	file		3519999	0					
ANR	3520014	Identifier	file		3519999	0					
ANR	3520015	Argument	& sbuf		3519999	1					
ANR	3520016	UnaryOperationExpression	& sbuf		3519999	0					
ANR	3520017	UnaryOperator	&		3519999	0					
ANR	3520018	Identifier	sbuf		3519999	1					
ANR	3520019	PrimaryExpression	0		3519999	1					
ANR	3520020	CompoundStatement		4:29:51:51	3519999	1					
ANR	3520021	ReturnStatement	return ( ( time_t ) - 1 ) ;	1062:2:28636:28657	3519999	0	True				
ANR	3520022	CastExpression	( time_t ) - 1		3519999	0					
ANR	3520023	CastTarget	time_t		3519999	0					
ANR	3520024	UnaryOperationExpression	- 1		3519999	1					
ANR	3520025	UnaryOperator	-		3519999	0					
ANR	3520026	PrimaryExpression	1		3519999	1					
ANR	3520027	ReturnStatement	return ( sbuf . st_mtime ) ;	1065:1:28665:28688	3519999	2	True				
ANR	3520028	MemberAccess	sbuf . st_mtime		3519999	0					
ANR	3520029	Identifier	sbuf		3519999	0					
ANR	3520030	Identifier	st_mtime		3519999	1					
ANR	3520031	ReturnType	time_t		3519999	1					
ANR	3520032	Identifier	GetTimeStamp		3519999	2					
ANR	3520033	ParameterList	char * file		3519999	3					
ANR	3520034	Parameter	char * file	1057:13:28568:28577	3519999	0	True				
ANR	3520035	ParameterType	char *		3519999	0					
ANR	3520036	Identifier	file		3519999	1					
ANR	3520037	CFGEntryNode	ENTRY		3519999		True				
ANR	3520038	CFGExitNode	EXIT		3519999		True				
ANR	3520039	Symbol	stat		3519999						
ANR	3520040	Symbol	file		3519999						
ANR	3520041	Symbol	sbuf		3519999						
ANR	3520042	Symbol	& sbuf		3519999						
ANR	3520043	Symbol	sbuf . st_mtime		3519999						
ANR	3520044	Function	NewExecutable	1069:0:28694:29164							
ANR	3520045	FunctionDef	"NewExecutable (char * file , time_t * tsp)"		3520044	0					
ANR	3520046	CompoundStatement		1071:0:28737:29164	3520044	0					
ANR	3520047	IdentifierDeclStatement	time_t cts = * tsp ;	1072:1:28740:28757	3520044	0	True				
ANR	3520048	IdentifierDecl	cts = * tsp		3520044	0					
ANR	3520049	IdentifierDeclType	time_t		3520044	0					
ANR	3520050	Identifier	cts		3520044	1					
ANR	3520051	AssignmentExpression	cts = * tsp		3520044	2		=			
ANR	3520052	Identifier	cts		3520044	0					
ANR	3520053	UnaryOperationExpression	* tsp		3520044	1					
ANR	3520054	UnaryOperator	*		3520044	0					
ANR	3520055	Identifier	tsp		3520044	1					
ANR	3520056	ExpressionStatement	* tsp = GetTimeStamp ( file )	1073:1:28760:28785	3520044	1	True				
ANR	3520057	AssignmentExpression	* tsp = GetTimeStamp ( file )		3520044	0		=			
ANR	3520058	UnaryOperationExpression	* tsp		3520044	0					
ANR	3520059	UnaryOperator	*		3520044	0					
ANR	3520060	Identifier	tsp		3520044	1					
ANR	3520061	CallExpression	GetTimeStamp ( file )		3520044	1					
ANR	3520062	Callee	GetTimeStamp		3520044	0					
ANR	3520063	Identifier	GetTimeStamp		3520044	0					
ANR	3520064	ArgumentList	file		3520044	1					
ANR	3520065	Argument	file		3520044	0					
ANR	3520066	Identifier	file		3520044	0					
ANR	3520067	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Time stamp of running %s: %ld\\n"" , file , cts )"	1074:1:28788:28857	3520044	2	True				
ANR	3520068	CallExpression	"dprintf ( D_FULLDEBUG , ""Time stamp of running %s: %ld\\n"" , file , cts )"		3520044	0					
ANR	3520069	Callee	dprintf		3520044	0					
ANR	3520070	Identifier	dprintf		3520044	0					
ANR	3520071	ArgumentList	D_FULLDEBUG		3520044	1					
ANR	3520072	Argument	D_FULLDEBUG		3520044	0					
ANR	3520073	Identifier	D_FULLDEBUG		3520044	0					
ANR	3520074	Argument	"""Time stamp of running %s: %ld\\n"""		3520044	1					
ANR	3520075	PrimaryExpression	"""Time stamp of running %s: %ld\\n"""		3520044	0					
ANR	3520076	Argument	file		3520044	2					
ANR	3520077	Identifier	file		3520044	0					
ANR	3520078	Argument	cts		3520044	3					
ANR	3520079	Identifier	cts		3520044	0					
ANR	3520080	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""GetTimeStamp returned: %ld\\n"" , * tsp )"	1076:1:28860:28917	3520044	3	True				
ANR	3520081	CallExpression	"dprintf ( D_FULLDEBUG , ""GetTimeStamp returned: %ld\\n"" , * tsp )"		3520044	0					
ANR	3520082	Callee	dprintf		3520044	0					
ANR	3520083	Identifier	dprintf		3520044	0					
ANR	3520084	ArgumentList	D_FULLDEBUG		3520044	1					
ANR	3520085	Argument	D_FULLDEBUG		3520044	0					
ANR	3520086	Identifier	D_FULLDEBUG		3520044	0					
ANR	3520087	Argument	"""GetTimeStamp returned: %ld\\n"""		3520044	1					
ANR	3520088	PrimaryExpression	"""GetTimeStamp returned: %ld\\n"""		3520044	0					
ANR	3520089	Argument	* tsp		3520044	2					
ANR	3520090	UnaryOperationExpression	* tsp		3520044	0					
ANR	3520091	UnaryOperator	*		3520044	0					
ANR	3520092	Identifier	tsp		3520044	1					
ANR	3520093	IfStatement	if ( * tsp == ( time_t ) - 1 )		3520044	4					
ANR	3520094	Condition	* tsp == ( time_t ) - 1	1078:5:28925:28943	3520044	0	True				
ANR	3520095	EqualityExpression	* tsp == ( time_t ) - 1		3520044	0		==			
ANR	3520096	UnaryOperationExpression	* tsp		3520044	0					
ANR	3520097	UnaryOperator	*		3520044	0					
ANR	3520098	Identifier	tsp		3520044	1					
ANR	3520099	CastExpression	( time_t ) - 1		3520044	1					
ANR	3520100	CastTarget	time_t		3520044	0					
ANR	3520101	UnaryOperationExpression	- 1		3520044	1					
ANR	3520102	UnaryOperator	-		3520044	0					
ANR	3520103	PrimaryExpression	1		3520044	1					
ANR	3520104	CompoundStatement		8:27:209:209	3520044	1					
ANR	3520105	ExpressionStatement	* tsp = cts	1084:2:29106:29116	3520044	0	True				
ANR	3520106	AssignmentExpression	* tsp = cts		3520044	0		=			
ANR	3520107	UnaryOperationExpression	* tsp		3520044	0					
ANR	3520108	UnaryOperator	*		3520044	0					
ANR	3520109	Identifier	tsp		3520044	1					
ANR	3520110	Identifier	cts		3520044	1					
ANR	3520111	ReturnStatement	return ( FALSE ) ;	1085:2:29120:29135	3520044	1	True				
ANR	3520112	Identifier	FALSE		3520044	0					
ANR	3520113	ReturnStatement	return ( cts != * tsp ) ;	1087:1:29141:29162	3520044	5	True				
ANR	3520114	EqualityExpression	cts != * tsp		3520044	0		!=			
ANR	3520115	Identifier	cts		3520044	0					
ANR	3520116	UnaryOperationExpression	* tsp		3520044	1					
ANR	3520117	UnaryOperator	*		3520044	0					
ANR	3520118	Identifier	tsp		3520044	1					
ANR	3520119	ReturnType	int		3520044	1					
ANR	3520120	Identifier	NewExecutable		3520044	2					
ANR	3520121	ParameterList	"char * file , time_t * tsp"		3520044	3					
ANR	3520122	Parameter	char * file	1070:14:28712:28721	3520044	0	True				
ANR	3520123	ParameterType	char *		3520044	0					
ANR	3520124	Identifier	file		3520044	1					
ANR	3520125	Parameter	time_t * tsp	1070:26:28724:28734	3520044	1	True				
ANR	3520126	ParameterType	time_t *		3520044	0					
ANR	3520127	Identifier	tsp		3520044	1					
ANR	3520128	CFGEntryNode	ENTRY		3520044		True				
ANR	3520129	CFGExitNode	EXIT		3520044		True				
ANR	3520130	Symbol	tsp		3520044						
ANR	3520131	Symbol	file		3520044						
ANR	3520132	Symbol	cts		3520044						
ANR	3520133	Symbol	D_FULLDEBUG		3520044						
ANR	3520134	Symbol	FALSE		3520044						
ANR	3520135	Symbol	* tsp		3520044						
ANR	3520136	Symbol	GetTimeStamp		3520044						
ANR	3520137	Function	run_preen	1090:0:29167:29981							
ANR	3520138	FunctionDef	run_preen ()		3520137	0					
ANR	3520139	CompoundStatement		1092:0:29184:29981	3520137	0					
ANR	3520140	IdentifierDeclStatement	int child_pid ;	1093:1:29187:29201	3520137	0	True				
ANR	3520141	IdentifierDecl	child_pid		3520137	0					
ANR	3520142	IdentifierDeclType	int		3520137	0					
ANR	3520143	Identifier	child_pid		3520137	1					
ANR	3520144	IdentifierDeclStatement	char * args = NULL ;	1094:1:29204:29219	3520137	1	True				
ANR	3520145	IdentifierDecl	* args = NULL		3520137	0					
ANR	3520146	IdentifierDeclType	char *		3520137	0					
ANR	3520147	Identifier	args		3520137	1					
ANR	3520148	AssignmentExpression	* args = NULL		3520137	2		=			
ANR	3520149	Identifier	NULL		3520137	0					
ANR	3520150	Identifier	NULL		3520137	1					
ANR	3520151	IdentifierDeclStatement	const char * preen_base ;	1095:1:29222:29244	3520137	2	True				
ANR	3520152	IdentifierDecl	* preen_base		3520137	0					
ANR	3520153	IdentifierDeclType	const char *		3520137	0					
ANR	3520154	Identifier	preen_base		3520137	1					
ANR	3520155	IdentifierDeclStatement	ArgList arglist ;	1096:1:29247:29262	3520137	3	True				
ANR	3520156	IdentifierDecl	arglist		3520137	0					
ANR	3520157	IdentifierDeclType	ArgList		3520137	0					
ANR	3520158	Identifier	arglist		3520137	1					
ANR	3520159	IdentifierDeclStatement	MyString error_msg ;	1097:1:29265:29283	3520137	4	True				
ANR	3520160	IdentifierDecl	error_msg		3520137	0					
ANR	3520161	IdentifierDeclType	MyString		3520137	0					
ANR	3520162	Identifier	error_msg		3520137	1					
ANR	3520163	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Entered run_preen.\\n"" )"	1099:1:29287:29331	3520137	5	True				
ANR	3520164	CallExpression	"dprintf ( D_FULLDEBUG , ""Entered run_preen.\\n"" )"		3520137	0					
ANR	3520165	Callee	dprintf		3520137	0					
ANR	3520166	Identifier	dprintf		3520137	0					
ANR	3520167	ArgumentList	D_FULLDEBUG		3520137	1					
ANR	3520168	Argument	D_FULLDEBUG		3520137	0					
ANR	3520169	Identifier	D_FULLDEBUG		3520137	0					
ANR	3520170	Argument	"""Entered run_preen.\\n"""		3520137	1					
ANR	3520171	PrimaryExpression	"""Entered run_preen.\\n"""		3520137	0					
ANR	3520172	IfStatement	if ( FS_Preen == NULL )		3520137	6					
ANR	3520173	Condition	FS_Preen == NULL	1101:5:29339:29354	3520137	0	True				
ANR	3520174	EqualityExpression	FS_Preen == NULL		3520137	0		==			
ANR	3520175	Identifier	FS_Preen		3520137	0					
ANR	3520176	Identifier	NULL		3520137	1					
ANR	3520177	CompoundStatement		10:24:173:173	3520137	1					
ANR	3520178	ReturnStatement	return ;	1102:2:29362:29368	3520137	0	True				
ANR	3520179	ExpressionStatement	preen_base = condor_basename ( FS_Preen )	1104:1:29374:29414	3520137	7	True				
ANR	3520180	AssignmentExpression	preen_base = condor_basename ( FS_Preen )		3520137	0		=			
ANR	3520181	Identifier	preen_base		3520137	0					
ANR	3520182	CallExpression	condor_basename ( FS_Preen )		3520137	1					
ANR	3520183	Callee	condor_basename		3520137	0					
ANR	3520184	Identifier	condor_basename		3520137	0					
ANR	3520185	ArgumentList	FS_Preen		3520137	1					
ANR	3520186	Argument	FS_Preen		3520137	0					
ANR	3520187	Identifier	FS_Preen		3520137	0					
ANR	3520188	ExpressionStatement	arglist . AppendArg ( preen_base )	1105:1:29417:29446	3520137	8	True				
ANR	3520189	CallExpression	arglist . AppendArg ( preen_base )		3520137	0					
ANR	3520190	Callee	arglist . AppendArg		3520137	0					
ANR	3520191	MemberAccess	arglist . AppendArg		3520137	0					
ANR	3520192	Identifier	arglist		3520137	0					
ANR	3520193	Identifier	AppendArg		3520137	1					
ANR	3520194	ArgumentList	preen_base		3520137	1					
ANR	3520195	Argument	preen_base		3520137	0					
ANR	3520196	Identifier	preen_base		3520137	0					
ANR	3520197	ExpressionStatement	"args = param ( ""PREEN_ARGS"" )"	1107:1:29450:29476	3520137	9	True				
ANR	3520198	AssignmentExpression	"args = param ( ""PREEN_ARGS"" )"		3520137	0		=			
ANR	3520199	Identifier	args		3520137	0					
ANR	3520200	CallExpression	"param ( ""PREEN_ARGS"" )"		3520137	1					
ANR	3520201	Callee	param		3520137	0					
ANR	3520202	Identifier	param		3520137	0					
ANR	3520203	ArgumentList	"""PREEN_ARGS"""		3520137	1					
ANR	3520204	Argument	"""PREEN_ARGS"""		3520137	0					
ANR	3520205	PrimaryExpression	"""PREEN_ARGS"""		3520137	0					
ANR	3520206	IfStatement	"if ( ! arglist . AppendArgsV1RawOrV2Quoted ( args , & error_msg ) )"		3520137	10					
ANR	3520207	Condition	"! arglist . AppendArgsV1RawOrV2Quoted ( args , & error_msg )"	1108:4:29482:29532	3520137	0	True				
ANR	3520208	UnaryOperationExpression	"! arglist . AppendArgsV1RawOrV2Quoted ( args , & error_msg )"		3520137	0					
ANR	3520209	UnaryOperator	!		3520137	0					
ANR	3520210	CallExpression	"arglist . AppendArgsV1RawOrV2Quoted ( args , & error_msg )"		3520137	1					
ANR	3520211	Callee	arglist . AppendArgsV1RawOrV2Quoted		3520137	0					
ANR	3520212	MemberAccess	arglist . AppendArgsV1RawOrV2Quoted		3520137	0					
ANR	3520213	Identifier	arglist		3520137	0					
ANR	3520214	Identifier	AppendArgsV1RawOrV2Quoted		3520137	1					
ANR	3520215	ArgumentList	args		3520137	1					
ANR	3520216	Argument	args		3520137	0					
ANR	3520217	Identifier	args		3520137	0					
ANR	3520218	Argument	& error_msg		3520137	1					
ANR	3520219	UnaryOperationExpression	& error_msg		3520137	0					
ANR	3520220	UnaryOperator	&		3520137	0					
ANR	3520221	Identifier	error_msg		3520137	1					
ANR	3520222	CompoundStatement		17:57:350:350	3520137	1					
ANR	3520223	ExpressionStatement	"EXCEPT ( ""ERROR: failed to parse preen args: %s\\n"" , error_msg . Value ( ) )"	1109:2:29539:29606	3520137	0	True				
ANR	3520224	CallExpression	"EXCEPT ( ""ERROR: failed to parse preen args: %s\\n"" , error_msg . Value ( ) )"		3520137	0					
ANR	3520225	Callee	EXCEPT		3520137	0					
ANR	3520226	Identifier	EXCEPT		3520137	0					
ANR	3520227	ArgumentList	"""ERROR: failed to parse preen args: %s\\n"""		3520137	1					
ANR	3520228	Argument	"""ERROR: failed to parse preen args: %s\\n"""		3520137	0					
ANR	3520229	PrimaryExpression	"""ERROR: failed to parse preen args: %s\\n"""		3520137	0					
ANR	3520230	Argument	error_msg . Value ( )		3520137	1					
ANR	3520231	CallExpression	error_msg . Value ( )		3520137	0					
ANR	3520232	Callee	error_msg . Value		3520137	0					
ANR	3520233	MemberAccess	error_msg . Value		3520137	0					
ANR	3520234	Identifier	error_msg		3520137	0					
ANR	3520235	Identifier	Value		3520137	1					
ANR	3520236	ArgumentList			3520137	1					
ANR	3520237	ExpressionStatement	free ( args )	1111:1:29612:29622	3520137	11	True				
ANR	3520238	CallExpression	free ( args )		3520137	0					
ANR	3520239	Callee	free		3520137	0					
ANR	3520240	Identifier	free		3520137	0					
ANR	3520241	ArgumentList	args		3520137	1					
ANR	3520242	Argument	args		3520137	0					
ANR	3520243	Identifier	args		3520137	0					
ANR	3520244	ExpressionStatement	"child_pid = daemonCore -> Create_Process ( FS_Preen , arglist , PRIV_ROOT , 1 , FALSE )"	1113:1:29626:29832	3520137	12	True				
ANR	3520245	AssignmentExpression	"child_pid = daemonCore -> Create_Process ( FS_Preen , arglist , PRIV_ROOT , 1 , FALSE )"		3520137	0		=			
ANR	3520246	Identifier	child_pid		3520137	0					
ANR	3520247	CallExpression	"daemonCore -> Create_Process ( FS_Preen , arglist , PRIV_ROOT , 1 , FALSE )"		3520137	1					
ANR	3520248	Callee	daemonCore -> Create_Process		3520137	0					
ANR	3520249	PtrMemberAccess	daemonCore -> Create_Process		3520137	0					
ANR	3520250	Identifier	daemonCore		3520137	0					
ANR	3520251	Identifier	Create_Process		3520137	1					
ANR	3520252	ArgumentList	FS_Preen		3520137	1					
ANR	3520253	Argument	FS_Preen		3520137	0					
ANR	3520254	Identifier	FS_Preen		3520137	0					
ANR	3520255	Argument	arglist		3520137	1					
ANR	3520256	Identifier	arglist		3520137	0					
ANR	3520257	Argument	PRIV_ROOT		3520137	2					
ANR	3520258	Identifier	PRIV_ROOT		3520137	0					
ANR	3520259	Argument	1		3520137	3					
ANR	3520260	PrimaryExpression	1		3520137	0					
ANR	3520261	Argument	FALSE		3520137	4					
ANR	3520262	Identifier	FALSE		3520137	0					
ANR	3520263	ExpressionStatement	"dprintf ( D_ALWAYS , ""Preen pid is %d\\n"" , child_pid )"	1119:1:29928:29979	3520137	13	True				
ANR	3520264	CallExpression	"dprintf ( D_ALWAYS , ""Preen pid is %d\\n"" , child_pid )"		3520137	0					
ANR	3520265	Callee	dprintf		3520137	0					
ANR	3520266	Identifier	dprintf		3520137	0					
ANR	3520267	ArgumentList	D_ALWAYS		3520137	1					
ANR	3520268	Argument	D_ALWAYS		3520137	0					
ANR	3520269	Identifier	D_ALWAYS		3520137	0					
ANR	3520270	Argument	"""Preen pid is %d\\n"""		3520137	1					
ANR	3520271	PrimaryExpression	"""Preen pid is %d\\n"""		3520137	0					
ANR	3520272	Argument	child_pid		3520137	2					
ANR	3520273	Identifier	child_pid		3520137	0					
ANR	3520274	ReturnType	void		3520137	1					
ANR	3520275	Identifier	run_preen		3520137	2					
ANR	3520276	ParameterList			3520137	3					
ANR	3520277	CFGEntryNode	ENTRY		3520137		True				
ANR	3520278	CFGExitNode	EXIT		3520137		True				
ANR	3520279	Symbol	preen_base		3520137						
ANR	3520280	Symbol	daemonCore -> Create_Process		3520137						
ANR	3520281	Symbol	NULL		3520137						
ANR	3520282	Symbol	error_msg		3520137						
ANR	3520283	Symbol	error_msg . Value		3520137						
ANR	3520284	Symbol	arglist . AppendArgsV1RawOrV2Quoted		3520137						
ANR	3520285	Symbol	D_ALWAYS		3520137						
ANR	3520286	Symbol	D_FULLDEBUG		3520137						
ANR	3520287	Symbol	FS_Preen		3520137						
ANR	3520288	Symbol	child_pid		3520137						
ANR	3520289	Symbol	args		3520137						
ANR	3520290	Symbol	param		3520137						
ANR	3520291	Symbol	* daemonCore		3520137						
ANR	3520292	Symbol	arglist		3520137						
ANR	3520293	Symbol	daemonCore		3520137						
ANR	3520294	Symbol	PRIV_ROOT		3520137						
ANR	3520295	Symbol	& error_msg		3520137						
ANR	3520296	Symbol	FALSE		3520137						
ANR	3520297	Symbol	condor_basename		3520137						
ANR	3520298	Function	RestartMaster	1123:0:29985:30034							
ANR	3520299	FunctionDef	RestartMaster ()		3520298	0					
ANR	3520300	CompoundStatement		1125:0:30006:30034	3520298	0					
ANR	3520301	ExpressionStatement	daemons . RestartMaster ( )	1126:1:30009:30032	3520298	0	True				
ANR	3520302	CallExpression	daemons . RestartMaster ( )		3520298	0					
ANR	3520303	Callee	daemons . RestartMaster		3520298	0					
ANR	3520304	MemberAccess	daemons . RestartMaster		3520298	0					
ANR	3520305	Identifier	daemons		3520298	0					
ANR	3520306	Identifier	RestartMaster		3520298	1					
ANR	3520307	ArgumentList			3520298	1					
ANR	3520308	ReturnType	void		3520298	1					
ANR	3520309	Identifier	RestartMaster		3520298	2					
ANR	3520310	ParameterList			3520298	3					
ANR	3520311	CFGEntryNode	ENTRY		3520298		True				
ANR	3520312	CFGExitNode	EXIT		3520298		True				
ANR	3520313	Symbol	daemons		3520298						
ANR	3520314	Function	gcb_broker_down_handler	1131:0:30055:31321							
ANR	3520315	FunctionDef	gcb_broker_down_handler ()		3520314	0					
ANR	3520316	CompoundStatement		1133:0:30086:31321	3520314	0					
ANR	3520317	IdentifierDeclStatement	int num_slots ;	1134:1:30089:30102	3520314	0	True				
ANR	3520318	IdentifierDecl	num_slots		3520314	0					
ANR	3520319	IdentifierDeclType	int		3520314	0					
ANR	3520320	Identifier	num_slots		3520314	1					
ANR	3520321	IdentifierDeclStatement	"const char * our_broker = GetEnv ( ""GCB_INAGENT"" ) ;"	1135:1:30105:30153	3520314	1	True				
ANR	3520322	IdentifierDecl	"* our_broker = GetEnv ( ""GCB_INAGENT"" )"		3520314	0					
ANR	3520323	IdentifierDeclType	const char *		3520314	0					
ANR	3520324	Identifier	our_broker		3520314	1					
ANR	3520325	AssignmentExpression	"* our_broker = GetEnv ( ""GCB_INAGENT"" )"		3520314	2		=			
ANR	3520326	Identifier	our_broker		3520314	0					
ANR	3520327	CallExpression	"GetEnv ( ""GCB_INAGENT"" )"		3520314	1					
ANR	3520328	Callee	GetEnv		3520314	0					
ANR	3520329	Identifier	GetEnv		3520314	0					
ANR	3520330	ArgumentList	"""GCB_INAGENT"""		3520314	1					
ANR	3520331	Argument	"""GCB_INAGENT"""		3520314	0					
ANR	3520332	PrimaryExpression	"""GCB_INAGENT"""		3520314	0					
ANR	3520333	IdentifierDeclStatement	const char * next_broker = NULL ;	1136:1:30156:30186	3520314	2	True				
ANR	3520334	IdentifierDecl	* next_broker = NULL		3520314	0					
ANR	3520335	IdentifierDeclType	const char *		3520314	0					
ANR	3520336	Identifier	next_broker		3520314	1					
ANR	3520337	AssignmentExpression	* next_broker = NULL		3520314	2		=			
ANR	3520338	Identifier	NULL		3520314	0					
ANR	3520339	Identifier	NULL		3520314	1					
ANR	3520340	IdentifierDeclStatement	bool found_broker = false ;	1137:1:30189:30214	3520314	3	True				
ANR	3520341	IdentifierDecl	found_broker = false		3520314	0					
ANR	3520342	IdentifierDeclType	bool		3520314	0					
ANR	3520343	Identifier	found_broker		3520314	1					
ANR	3520344	AssignmentExpression	found_broker = false		3520314	2		=			
ANR	3520345	Identifier	false		3520314	0					
ANR	3520346	Identifier	false		3520314	1					
ANR	3520347	IdentifierDeclStatement	"char * str = param ( ""NET_REMAP_INAGENT"" ) ;"	1138:1:30217:30257	3520314	4	True				
ANR	3520348	IdentifierDecl	"* str = param ( ""NET_REMAP_INAGENT"" )"		3520314	0					
ANR	3520349	IdentifierDeclType	char *		3520314	0					
ANR	3520350	Identifier	str		3520314	1					
ANR	3520351	AssignmentExpression	"* str = param ( ""NET_REMAP_INAGENT"" )"		3520314	2		=			
ANR	3520352	Identifier	str		3520314	0					
ANR	3520353	CallExpression	"param ( ""NET_REMAP_INAGENT"" )"		3520314	1					
ANR	3520354	Callee	param		3520314	0					
ANR	3520355	Identifier	param		3520314	0					
ANR	3520356	ArgumentList	"""NET_REMAP_INAGENT"""		3520314	1					
ANR	3520357	Argument	"""NET_REMAP_INAGENT"""		3520314	0					
ANR	3520358	PrimaryExpression	"""NET_REMAP_INAGENT"""		3520314	0					
ANR	3520359	IdentifierDeclStatement	StringList brokers ( str ) ;	1139:1:30260:30285	3520314	5	True				
ANR	3520360	IdentifierDecl	brokers ( str )		3520314	0					
ANR	3520361	IdentifierDeclType	StringList		3520314	0					
ANR	3520362	Identifier	brokers		3520314	1					
ANR	3520363	Identifier	str		3520314	2					
ANR	3520364	ExpressionStatement	free ( str )	1140:1:30288:30299	3520314	6	True				
ANR	3520365	CallExpression	free ( str )		3520314	0					
ANR	3520366	Callee	free		3520314	0					
ANR	3520367	Identifier	free		3520314	0					
ANR	3520368	ArgumentList	str		3520314	1					
ANR	3520369	Argument	str		3520314	0					
ANR	3520370	Identifier	str		3520314	0					
ANR	3520371	IfStatement	"if ( param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true ) == false )"		3520314	7					
ANR	3520372	Condition	"param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true ) == false"	1142:6:30308:30368	3520314	0	True				
ANR	3520373	EqualityExpression	"param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true ) == false"		3520314	0		==			
ANR	3520374	CallExpression	"param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true )"		3520314	0					
ANR	3520375	Callee	param_boolean		3520314	0					
ANR	3520376	Identifier	param_boolean		3520314	0					
ANR	3520377	ArgumentList	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520314	1					
ANR	3520378	Argument	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520314	0					
ANR	3520379	PrimaryExpression	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520314	0					
ANR	3520380	Argument	true		3520314	1					
ANR	3520381	Identifier	true		3520314	0					
ANR	3520382	Identifier	false		3520314	1					
ANR	3520383	CompoundStatement		10:70:285:285	3520314	1					
ANR	3520384	Statement	dprintf	1143:2:30376:30382	3520314	0	True				
ANR	3520385	Statement	(	1143:9:30383:30383	3520314	1	True				
ANR	3520386	Statement	D_ALWAYS	1143:11:30385:30392	3520314	2	True				
ANR	3520387	Statement	","	1143:19:30393:30393	3520314	3	True				
ANR	3520388	Statement	"""Lost connection to current GCB broker. """	1143:21:30395:30435	3520314	4	True				
ANR	3520389	Statement	"""Restarting.\\n"""	1144:5:30442:30456	3520314	5	True				
ANR	3520390	Statement	)	1144:21:30458:30458	3520314	6	True				
ANR	3520391	ExpressionStatement		1144:22:30459:30459	3520314	7	True				
ANR	3520392	ExpressionStatement	restart_everyone ( )	1145:2:30463:30481	3520314	8	True				
ANR	3520393	CallExpression	restart_everyone ( )		3520314	0					
ANR	3520394	Callee	restart_everyone		3520314	0					
ANR	3520395	Identifier	restart_everyone		3520314	0					
ANR	3520396	ArgumentList			3520314	1					
ANR	3520397	ReturnStatement	return ;	1146:2:30485:30491	3520314	9	True				
ANR	3520398	IfStatement	if ( our_broker == NULL )		3520314	8					
ANR	3520399	Condition	our_broker == NULL	1149:6:30503:30520	3520314	0	True				
ANR	3520400	EqualityExpression	our_broker == NULL		3520314	0		==			
ANR	3520401	Identifier	our_broker		3520314	0					
ANR	3520402	Identifier	NULL		3520314	1					
ANR	3520403	CompoundStatement		17:27:437:437	3520314	1					
ANR	3520404	Statement	dprintf	1150:2:30528:30534	3520314	0	True				
ANR	3520405	Statement	(	1150:9:30535:30535	3520314	1	True				
ANR	3520406	Statement	D_ALWAYS	1150:11:30537:30544	3520314	2	True				
ANR	3520407	Statement	","	1150:19:30545:30545	3520314	3	True				
ANR	3520408	Statement	"""Lost connection to current GCB broker, """	1150:21:30547:30587	3520314	4	True				
ANR	3520409	Statement	"""but GCB_INAGENT is undefined!?\\n"""	1151:5:30594:30627	3520314	5	True				
ANR	3520410	Statement	)	1151:40:30629:30629	3520314	6	True				
ANR	3520411	ExpressionStatement		1151:41:30630:30630	3520314	7	True				
ANR	3520412	ReturnStatement	return ;	1152:2:30634:30640	3520314	8	True				
ANR	3520413	Statement	dprintf	1154:1:30646:30652	3520314	9	True				
ANR	3520414	Statement	(	1154:8:30653:30653	3520314	10	True				
ANR	3520415	Statement	D_ALWAYS	1154:10:30655:30662	3520314	11	True				
ANR	3520416	Statement	","	1154:18:30663:30663	3520314	12	True				
ANR	3520417	Statement	"""Lost connection to current GCB broker %s. """	1154:20:30665:30708	3520314	13	True				
ANR	3520418	Statement	"""Will attempt to reconnect\\n"""	1155:4:30714:30742	3520314	14	True				
ANR	3520419	Statement	","	1155:33:30743:30743	3520314	15	True				
ANR	3520420	Statement	our_broker	1155:35:30745:30754	3520314	16	True				
ANR	3520421	Statement	)	1155:46:30756:30756	3520314	17	True				
ANR	3520422	ExpressionStatement		1155:47:30757:30757	3520314	18	True				
ANR	3520423	ExpressionStatement	brokers . remove ( our_broker )	1157:1:30761:30789	3520314	19	True				
ANR	3520424	CallExpression	brokers . remove ( our_broker )		3520314	0					
ANR	3520425	Callee	brokers . remove		3520314	0					
ANR	3520426	MemberAccess	brokers . remove		3520314	0					
ANR	3520427	Identifier	brokers		3520314	0					
ANR	3520428	Identifier	remove		3520314	1					
ANR	3520429	ArgumentList	our_broker		3520314	1					
ANR	3520430	Argument	our_broker		3520314	0					
ANR	3520431	Identifier	our_broker		3520314	0					
ANR	3520432	IfStatement	if ( brokers . isEmpty ( ) )		3520314	20					
ANR	3520433	Condition	brokers . isEmpty ( )	1159:6:30798:30814	3520314	0	True				
ANR	3520434	CallExpression	brokers . isEmpty ( )		3520314	0					
ANR	3520435	Callee	brokers . isEmpty		3520314	0					
ANR	3520436	MemberAccess	brokers . isEmpty		3520314	0					
ANR	3520437	Identifier	brokers		3520314	0					
ANR	3520438	Identifier	isEmpty		3520314	1					
ANR	3520439	ArgumentList			3520314	1					
ANR	3520440	CompoundStatement		27:26:731:731	3520314	1					
ANR	3520441	ReturnStatement	return ;	1161:2:30854:30860	3520314	0	True				
ANR	3520442	ExpressionStatement	brokers . rewind ( )	1164:1:30867:30883	3520314	21	True				
ANR	3520443	CallExpression	brokers . rewind ( )		3520314	0					
ANR	3520444	Callee	brokers . rewind		3520314	0					
ANR	3520445	MemberAccess	brokers . rewind		3520314	0					
ANR	3520446	Identifier	brokers		3520314	0					
ANR	3520447	Identifier	rewind		3520314	1					
ANR	3520448	ArgumentList			3520314	1					
ANR	3520449	WhileStatement	while ( ( next_broker = brokers . next ( ) ) )		3520314	22					
ANR	3520450	Condition	next_broker = brokers . next ( )	1166:9:30895:30924	3520314	0	True				
ANR	3520451	AssignmentExpression	next_broker = brokers . next ( )		3520314	0		=			
ANR	3520452	Identifier	next_broker		3520314	0					
ANR	3520453	CallExpression	brokers . next ( )		3520314	1					
ANR	3520454	Callee	brokers . next		3520314	0					
ANR	3520455	MemberAccess	brokers . next		3520314	0					
ANR	3520456	Identifier	brokers		3520314	0					
ANR	3520457	Identifier	next		3520314	1					
ANR	3520458	ArgumentList			3520314	1					
ANR	3520459	CompoundStatement		34:42:841:841	3520314	1					
ANR	3520460	IfStatement	"if ( GCB_broker_query ( next_broker , GCB_DATA_QUERY_FREE_SOCKS , & num_slots ) == 0 )"		3520314	0					
ANR	3520461	Condition	"GCB_broker_query ( next_broker , GCB_DATA_QUERY_FREE_SOCKS , & num_slots ) == 0"	1167:7:30937:31021	3520314	0	True				
ANR	3520462	EqualityExpression	"GCB_broker_query ( next_broker , GCB_DATA_QUERY_FREE_SOCKS , & num_slots ) == 0"		3520314	0		==			
ANR	3520463	CallExpression	"GCB_broker_query ( next_broker , GCB_DATA_QUERY_FREE_SOCKS , & num_slots )"		3520314	0					
ANR	3520464	Callee	GCB_broker_query		3520314	0					
ANR	3520465	Identifier	GCB_broker_query		3520314	0					
ANR	3520466	ArgumentList	next_broker		3520314	1					
ANR	3520467	Argument	next_broker		3520314	0					
ANR	3520468	Identifier	next_broker		3520314	0					
ANR	3520469	Argument	GCB_DATA_QUERY_FREE_SOCKS		3520314	1					
ANR	3520470	Identifier	GCB_DATA_QUERY_FREE_SOCKS		3520314	0					
ANR	3520471	Argument	& num_slots		3520314	2					
ANR	3520472	UnaryOperationExpression	& num_slots		3520314	0					
ANR	3520473	UnaryOperator	&		3520314	0					
ANR	3520474	Identifier	num_slots		3520314	1					
ANR	3520475	PrimaryExpression	0		3520314	1					
ANR	3520476	CompoundStatement		36:30:938:938	3520314	1					
ANR	3520477	ExpressionStatement	found_broker = true	1169:3:31030:31049	3520314	0	True				
ANR	3520478	AssignmentExpression	found_broker = true		3520314	0		=			
ANR	3520479	Identifier	found_broker		3520314	0					
ANR	3520480	Identifier	true		3520314	1					
ANR	3520481	BreakStatement	break ;	1170:3:31054:31059	3520314	1	True				
ANR	3520482	IfStatement	if ( found_broker )		3520314	23					
ANR	3520483	Condition	found_broker	1174:6:31075:31086	3520314	0	True				
ANR	3520484	Identifier	found_broker		3520314	0					
ANR	3520485	CompoundStatement		42:21:1003:1003	3520314	1					
ANR	3520486	Statement	dprintf	1175:2:31094:31100	3520314	0	True				
ANR	3520487	Statement	(	1175:9:31101:31101	3520314	1	True				
ANR	3520488	Statement	D_ALWAYS	1175:11:31103:31110	3520314	2	True				
ANR	3520489	Statement	","	1175:19:31111:31111	3520314	3	True				
ANR	3520490	Statement	"""Found alternate GCB broker %s. """	1175:21:31113:31145	3520314	4	True				
ANR	3520491	Statement	"""Restarting all daemons.\\n"""	1176:5:31152:31178	3520314	5	True				
ANR	3520492	Statement	","	1176:32:31179:31179	3520314	6	True				
ANR	3520493	Statement	next_broker	1176:34:31181:31191	3520314	7	True				
ANR	3520494	Statement	)	1176:46:31193:31193	3520314	8	True				
ANR	3520495	ExpressionStatement		1176:47:31194:31194	3520314	9	True				
ANR	3520496	ExpressionStatement	restart_everyone ( )	1177:2:31198:31216	3520314	10	True				
ANR	3520497	CallExpression	restart_everyone ( )		3520314	0					
ANR	3520498	Callee	restart_everyone		3520314	0					
ANR	3520499	Identifier	restart_everyone		3520314	0					
ANR	3520500	ArgumentList			3520314	1					
ANR	3520501	ElseStatement	else		3520314	0					
ANR	3520502	CompoundStatement		46:8:1139:1139	3520314	0					
ANR	3520503	Statement	dprintf	1179:2:31230:31236	3520314	0	True				
ANR	3520504	Statement	(	1179:9:31237:31237	3520314	1	True				
ANR	3520505	Statement	D_ALWAYS	1179:11:31239:31246	3520314	2	True				
ANR	3520506	Statement	","	1179:19:31247:31247	3520314	3	True				
ANR	3520507	Statement	"""No alternate GCB brokers found. """	1179:21:31249:31282	3520314	4	True				
ANR	3520508	Statement	"""Will try again later.\\n"""	1180:5:31289:31313	3520314	5	True				
ANR	3520509	Statement	)	1180:31:31315:31315	3520314	6	True				
ANR	3520510	ExpressionStatement		1180:32:31316:31316	3520314	7	True				
ANR	3520511	ReturnType	void		3520314	1					
ANR	3520512	Identifier	gcb_broker_down_handler		3520314	2					
ANR	3520513	ParameterList			3520314	3					
ANR	3520514	CFGEntryNode	ENTRY		3520314		True				
ANR	3520515	CFGExitNode	EXIT		3520314		True				
ANR	3520516	Symbol	num_slots		3520314						
ANR	3520517	Symbol	NULL		3520314						
ANR	3520518	Symbol	brokers		3520314						
ANR	3520519	Symbol	next_broker		3520314						
ANR	3520520	Symbol	our_broker		3520314						
ANR	3520521	Symbol	false		3520314						
ANR	3520522	Symbol	param_boolean		3520314						
ANR	3520523	Symbol	brokers . isEmpty		3520314						
ANR	3520524	Symbol	GCB_DATA_QUERY_FREE_SOCKS		3520314						
ANR	3520525	Symbol	str		3520314						
ANR	3520526	Symbol	found_broker		3520314						
ANR	3520527	Symbol	param		3520314						
ANR	3520528	Symbol	true		3520314						
ANR	3520529	Symbol	GCB_broker_query		3520314						
ANR	3520530	Symbol	GetEnv		3520314						
ANR	3520531	Symbol	& num_slots		3520314						
ANR	3520532	Symbol	brokers . next		3520314						
ANR	3520533	Function	gcbBrokerDownCallback	1184:0:31324:31664							
ANR	3520534	FunctionDef	gcbBrokerDownCallback ()		3520533	0					
ANR	3520535	CompoundStatement		1186:0:31353:31664	3520533	0					
ANR	3520536	ExpressionStatement	"daemonCore -> Register_Timer ( 0 , gcb_broker_down_handler , ""gcb_broker_down_handler"" )"	1191:1:31571:31662	3520533	0	True				
ANR	3520537	CallExpression	"daemonCore -> Register_Timer ( 0 , gcb_broker_down_handler , ""gcb_broker_down_handler"" )"		3520533	0					
ANR	3520538	Callee	daemonCore -> Register_Timer		3520533	0					
ANR	3520539	PtrMemberAccess	daemonCore -> Register_Timer		3520533	0					
ANR	3520540	Identifier	daemonCore		3520533	0					
ANR	3520541	Identifier	Register_Timer		3520533	1					
ANR	3520542	ArgumentList	0		3520533	1					
ANR	3520543	Argument	0		3520533	0					
ANR	3520544	PrimaryExpression	0		3520533	0					
ANR	3520545	Argument	gcb_broker_down_handler		3520533	1					
ANR	3520546	Identifier	gcb_broker_down_handler		3520533	0					
ANR	3520547	Argument	"""gcb_broker_down_handler"""		3520533	2					
ANR	3520548	PrimaryExpression	"""gcb_broker_down_handler"""		3520533	0					
ANR	3520549	ReturnType	void		3520533	1					
ANR	3520550	Identifier	gcbBrokerDownCallback		3520533	2					
ANR	3520551	ParameterList			3520533	3					
ANR	3520552	CFGEntryNode	ENTRY		3520533		True				
ANR	3520553	CFGExitNode	EXIT		3520533		True				
ANR	3520554	Symbol	gcb_broker_down_handler		3520533						
ANR	3520555	Symbol	daemonCore		3520533						
ANR	3520556	Function	gcb_recovery_failed_handler	1195:0:31667:31833							
ANR	3520557	FunctionDef	gcb_recovery_failed_handler ()		3520556	0					
ANR	3520558	CompoundStatement		1197:0:31702:31833	3520556	0					
ANR	3520559	Statement	dprintf	1198:1:31705:31711	3520556	0	True				
ANR	3520560	Statement	(	1198:8:31712:31712	3520556	1	True				
ANR	3520561	Statement	D_ALWAYS	1198:9:31713:31720	3520556	2	True				
ANR	3520562	Statement	","	1198:17:31721:31721	3520556	3	True				
ANR	3520563	Statement	"""GCB failed to recover from a failure with the """	1198:19:31723:31770	3520556	4	True				
ANR	3520564	Statement	"""Broker. Restarting all daemons\\n"""	1199:3:31775:31808	3520556	5	True				
ANR	3520565	Statement	)	1199:37:31809:31809	3520556	6	True				
ANR	3520566	ExpressionStatement		1199:38:31810:31810	3520556	7	True				
ANR	3520567	ExpressionStatement	restart_everyone ( )	1200:1:31813:31831	3520556	8	True				
ANR	3520568	CallExpression	restart_everyone ( )		3520556	0					
ANR	3520569	Callee	restart_everyone		3520556	0					
ANR	3520570	Identifier	restart_everyone		3520556	0					
ANR	3520571	ArgumentList			3520556	1					
ANR	3520572	ReturnType	void		3520556	1					
ANR	3520573	Identifier	gcb_recovery_failed_handler		3520556	2					
ANR	3520574	ParameterList			3520556	3					
ANR	3520575	CFGEntryNode	ENTRY		3520556		True				
ANR	3520576	CFGExitNode	EXIT		3520556		True				
ANR	3520577	Function	gcbRecoveryFailedCallback	1203:0:31836:32188							
ANR	3520578	FunctionDef	gcbRecoveryFailedCallback ()		3520577	0					
ANR	3520579	CompoundStatement		1205:0:31869:32188	3520577	0					
ANR	3520580	ExpressionStatement	"daemonCore -> Register_Timer ( 0 , gcb_recovery_failed_handler , ""gcb_recovery_failed_handler"" )"	1210:1:32087:32186	3520577	0	True				
ANR	3520581	CallExpression	"daemonCore -> Register_Timer ( 0 , gcb_recovery_failed_handler , ""gcb_recovery_failed_handler"" )"		3520577	0					
ANR	3520582	Callee	daemonCore -> Register_Timer		3520577	0					
ANR	3520583	PtrMemberAccess	daemonCore -> Register_Timer		3520577	0					
ANR	3520584	Identifier	daemonCore		3520577	0					
ANR	3520585	Identifier	Register_Timer		3520577	1					
ANR	3520586	ArgumentList	0		3520577	1					
ANR	3520587	Argument	0		3520577	0					
ANR	3520588	PrimaryExpression	0		3520577	0					
ANR	3520589	Argument	gcb_recovery_failed_handler		3520577	1					
ANR	3520590	Identifier	gcb_recovery_failed_handler		3520577	0					
ANR	3520591	Argument	"""gcb_recovery_failed_handler"""		3520577	2					
ANR	3520592	PrimaryExpression	"""gcb_recovery_failed_handler"""		3520577	0					
ANR	3520593	ReturnType	void		3520577	1					
ANR	3520594	Identifier	gcbRecoveryFailedCallback		3520577	2					
ANR	3520595	ParameterList			3520577	3					
ANR	3520596	CFGEntryNode	ENTRY		3520577		True				
ANR	3520597	CFGExitNode	EXIT		3520577		True				
ANR	3520598	Symbol	gcb_recovery_failed_handler		3520577						
ANR	3520599	Symbol	daemonCore		3520577						
ANR	3520600	Function	main_pre_command_sock_init	1215:0:32198:34583							
ANR	3520601	FunctionDef	main_pre_command_sock_init ()		3520600	0					
ANR	3520602	CompoundStatement		1217:0:32232:34583	3520600	0					
ANR	3520603	IdentifierDeclStatement	MyString lock_file ;	1220:1:32312:32330	3520600	0	True				
ANR	3520604	IdentifierDecl	lock_file		3520600	0					
ANR	3520605	IdentifierDeclType	MyString		3520600	0					
ANR	3520606	Identifier	lock_file		3520600	1					
ANR	3520607	IdentifierDeclStatement	char * p ;	1221:1:32333:32341	3520600	1	True				
ANR	3520608	IdentifierDecl	* p		3520600	0					
ANR	3520609	IdentifierDeclType	char *		3520600	0					
ANR	3520610	Identifier	p		3520600	1					
ANR	3520611	ExpressionStatement	"p = param ( ""MASTER_INSTANCE_LOCK"" )"	1224:1:32383:32417	3520600	2	True				
ANR	3520612	AssignmentExpression	"p = param ( ""MASTER_INSTANCE_LOCK"" )"		3520600	0		=			
ANR	3520613	Identifier	p		3520600	0					
ANR	3520614	CallExpression	"param ( ""MASTER_INSTANCE_LOCK"" )"		3520600	1					
ANR	3520615	Callee	param		3520600	0					
ANR	3520616	Identifier	param		3520600	0					
ANR	3520617	ArgumentList	"""MASTER_INSTANCE_LOCK"""		3520600	1					
ANR	3520618	Argument	"""MASTER_INSTANCE_LOCK"""		3520600	0					
ANR	3520619	PrimaryExpression	"""MASTER_INSTANCE_LOCK"""		3520600	0					
ANR	3520620	IfStatement	if ( p )		3520600	3					
ANR	3520621	Condition	p	1225:5:32424:32424	3520600	0	True				
ANR	3520622	Identifier	p		3520600	0					
ANR	3520623	CompoundStatement		9:8:194:194	3520600	1					
ANR	3520624	ExpressionStatement	lock_file = p	1226:2:32431:32444	3520600	0	True				
ANR	3520625	AssignmentExpression	lock_file = p		3520600	0		=			
ANR	3520626	Identifier	lock_file		3520600	0					
ANR	3520627	Identifier	p		3520600	1					
ANR	3520628	ExpressionStatement	free ( p )	1227:2:32448:32456	3520600	1	True				
ANR	3520629	CallExpression	free ( p )		3520600	0					
ANR	3520630	Callee	free		3520600	0					
ANR	3520631	Identifier	free		3520600	0					
ANR	3520632	ArgumentList	p		3520600	1					
ANR	3520633	Argument	p		3520600	0					
ANR	3520634	Identifier	p		3520600	0					
ANR	3520635	ElseStatement	else		3520600	0					
ANR	3520636	CompoundStatement		12:8:233:233	3520600	0					
ANR	3520637	ExpressionStatement	"p = param ( ""LOCK"" )"	1230:2:32521:32539	3520600	0	True				
ANR	3520638	AssignmentExpression	"p = param ( ""LOCK"" )"		3520600	0		=			
ANR	3520639	Identifier	p		3520600	0					
ANR	3520640	CallExpression	"param ( ""LOCK"" )"		3520600	1					
ANR	3520641	Callee	param		3520600	0					
ANR	3520642	Identifier	param		3520600	0					
ANR	3520643	ArgumentList	"""LOCK"""		3520600	1					
ANR	3520644	Argument	"""LOCK"""		3520600	0					
ANR	3520645	PrimaryExpression	"""LOCK"""		3520600	0					
ANR	3520646	IfStatement	if ( p )		3520600	1					
ANR	3520647	Condition	p	1231:6:32547:32547	3520600	0	True				
ANR	3520648	Identifier	p		3520600	0					
ANR	3520649	CompoundStatement		15:9:317:317	3520600	1					
ANR	3520650	ExpressionStatement	lock_file = p	1232:3:32555:32568	3520600	0	True				
ANR	3520651	AssignmentExpression	lock_file = p		3520600	0		=			
ANR	3520652	Identifier	lock_file		3520600	0					
ANR	3520653	Identifier	p		3520600	1					
ANR	3520654	ExpressionStatement	"lock_file = lock_file + ""/InstanceLock"""	1233:3:32573:32612	3520600	1	True				
ANR	3520655	AssignmentExpression	"lock_file = lock_file + ""/InstanceLock"""		3520600	0		=			
ANR	3520656	Identifier	lock_file		3520600	0					
ANR	3520657	AdditiveExpression	"lock_file + ""/InstanceLock"""		3520600	1		+			
ANR	3520658	Identifier	lock_file		3520600	0					
ANR	3520659	PrimaryExpression	"""/InstanceLock"""		3520600	1					
ANR	3520660	ExpressionStatement	free ( p )	1234:3:32617:32625	3520600	2	True				
ANR	3520661	CallExpression	free ( p )		3520600	0					
ANR	3520662	Callee	free		3520600	0					
ANR	3520663	Identifier	free		3520600	0					
ANR	3520664	ArgumentList	p		3520600	1					
ANR	3520665	Argument	p		3520600	0					
ANR	3520666	Identifier	p		3520600	0					
ANR	3520667	ElseStatement	else		3520600	0					
ANR	3520668	CompoundStatement		19:9:403:403	3520600	0					
ANR	3520669	ExpressionStatement	"p = param ( ""MASTER_LOG"" )"	1239:3:32751:32774	3520600	0	True				
ANR	3520670	AssignmentExpression	"p = param ( ""MASTER_LOG"" )"		3520600	0		=			
ANR	3520671	Identifier	p		3520600	0					
ANR	3520672	CallExpression	"param ( ""MASTER_LOG"" )"		3520600	1					
ANR	3520673	Callee	param		3520600	0					
ANR	3520674	Identifier	param		3520600	0					
ANR	3520675	ArgumentList	"""MASTER_LOG"""		3520600	1					
ANR	3520676	Argument	"""MASTER_LOG"""		3520600	0					
ANR	3520677	PrimaryExpression	"""MASTER_LOG"""		3520600	0					
ANR	3520678	IfStatement	if ( p )		3520600	1					
ANR	3520679	Condition	p	1240:7:32783:32783	3520600	0	True				
ANR	3520680	Identifier	p		3520600	0					
ANR	3520681	CompoundStatement		24:10:553:553	3520600	1					
ANR	3520682	ExpressionStatement	lock_file = p	1241:4:32792:32805	3520600	0	True				
ANR	3520683	AssignmentExpression	lock_file = p		3520600	0		=			
ANR	3520684	Identifier	lock_file		3520600	0					
ANR	3520685	Identifier	p		3520600	1					
ANR	3520686	ExpressionStatement	free ( p )	1242:4:32811:32819	3520600	1	True				
ANR	3520687	CallExpression	free ( p )		3520600	0					
ANR	3520688	Callee	free		3520600	0					
ANR	3520689	Identifier	free		3520600	0					
ANR	3520690	ArgumentList	p		3520600	1					
ANR	3520691	Argument	p		3520600	0					
ANR	3520692	Identifier	p		3520600	0					
ANR	3520693	ElseStatement	else		3520600	0					
ANR	3520694	CompoundStatement		27:10:598:598	3520600	0					
ANR	3520695	ExpressionStatement	"lock_file = ""/tmp/InstanceLock"""	1245:4:32897:32928	3520600	0	True				
ANR	3520696	AssignmentExpression	"lock_file = ""/tmp/InstanceLock"""		3520600	0		=			
ANR	3520697	Identifier	lock_file		3520600	0					
ANR	3520698	PrimaryExpression	"""/tmp/InstanceLock"""		3520600	1					
ANR	3520699	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to lock %s.\\n"" , lock_file . Value ( ) )"	1249:1:32943:33012	3520600	4	True				
ANR	3520700	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to lock %s.\\n"" , lock_file . Value ( ) )"		3520600	0					
ANR	3520701	Callee	dprintf		3520600	0					
ANR	3520702	Identifier	dprintf		3520600	0					
ANR	3520703	ArgumentList	D_FULLDEBUG		3520600	1					
ANR	3520704	Argument	D_FULLDEBUG		3520600	0					
ANR	3520705	Identifier	D_FULLDEBUG		3520600	0					
ANR	3520706	Argument	"""Attempting to lock %s.\\n"""		3520600	1					
ANR	3520707	PrimaryExpression	"""Attempting to lock %s.\\n"""		3520600	0					
ANR	3520708	Argument	lock_file . Value ( )		3520600	2					
ANR	3520709	CallExpression	lock_file . Value ( )		3520600	0					
ANR	3520710	Callee	lock_file . Value		3520600	0					
ANR	3520711	MemberAccess	lock_file . Value		3520600	0					
ANR	3520712	Identifier	lock_file		3520600	0					
ANR	3520713	Identifier	Value		3520600	1					
ANR	3520714	ArgumentList			3520600	1					
ANR	3520715	ExpressionStatement	lock_or_except ( lock_file . Value ( ) )	1250:1:33015:33050	3520600	5	True				
ANR	3520716	CallExpression	lock_or_except ( lock_file . Value ( ) )		3520600	0					
ANR	3520717	Callee	lock_or_except		3520600	0					
ANR	3520718	Identifier	lock_or_except		3520600	0					
ANR	3520719	ArgumentList	lock_file . Value ( )		3520600	1					
ANR	3520720	Argument	lock_file . Value ( )		3520600	0					
ANR	3520721	CallExpression	lock_file . Value ( )		3520600	0					
ANR	3520722	Callee	lock_file . Value		3520600	0					
ANR	3520723	MemberAccess	lock_file . Value		3520600	0					
ANR	3520724	Identifier	lock_file		3520600	0					
ANR	3520725	Identifier	Value		3520600	1					
ANR	3520726	ArgumentList			3520600	1					
ANR	3520727	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Obtained lock on %s.\\n"" , lock_file . Value ( ) )"	1251:1:33053:33120	3520600	6	True				
ANR	3520728	CallExpression	"dprintf ( D_FULLDEBUG , ""Obtained lock on %s.\\n"" , lock_file . Value ( ) )"		3520600	0					
ANR	3520729	Callee	dprintf		3520600	0					
ANR	3520730	Identifier	dprintf		3520600	0					
ANR	3520731	ArgumentList	D_FULLDEBUG		3520600	1					
ANR	3520732	Argument	D_FULLDEBUG		3520600	0					
ANR	3520733	Identifier	D_FULLDEBUG		3520600	0					
ANR	3520734	Argument	"""Obtained lock on %s.\\n"""		3520600	1					
ANR	3520735	PrimaryExpression	"""Obtained lock on %s.\\n"""		3520600	0					
ANR	3520736	Argument	lock_file . Value ( )		3520600	2					
ANR	3520737	CallExpression	lock_file . Value ( )		3520600	0					
ANR	3520738	Callee	lock_file . Value		3520600	0					
ANR	3520739	MemberAccess	lock_file . Value		3520600	0					
ANR	3520740	Identifier	lock_file		3520600	0					
ANR	3520741	Identifier	Value		3520600	1					
ANR	3520742	ArgumentList			3520600	1					
ANR	3520743	IfStatement	"if ( GetEnv ( ""GCB_INAGENT"" ) )"		3520600	7					
ANR	3520744	Condition	"GetEnv ( ""GCB_INAGENT"" )"	1255:6:33153:33173	3520600	0	True				
ANR	3520745	CallExpression	"GetEnv ( ""GCB_INAGENT"" )"		3520600	0					
ANR	3520746	Callee	GetEnv		3520600	0					
ANR	3520747	Identifier	GetEnv		3520600	0					
ANR	3520748	ArgumentList	"""GCB_INAGENT"""		3520600	1					
ANR	3520749	Argument	"""GCB_INAGENT"""		3520600	0					
ANR	3520750	PrimaryExpression	"""GCB_INAGENT"""		3520600	0					
ANR	3520751	CompoundStatement		39:30:944:944	3520600	1					
ANR	3520752	ExpressionStatement	"GCB_Broker_down_callback_set ( gcbBrokerDownCallback , param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 ) )"	1257:2:33236:33345	3520600	0	True				
ANR	3520753	CallExpression	"GCB_Broker_down_callback_set ( gcbBrokerDownCallback , param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 ) )"		3520600	0					
ANR	3520754	Callee	GCB_Broker_down_callback_set		3520600	0					
ANR	3520755	Identifier	GCB_Broker_down_callback_set		3520600	0					
ANR	3520756	ArgumentList	gcbBrokerDownCallback		3520600	1					
ANR	3520757	Argument	gcbBrokerDownCallback		3520600	0					
ANR	3520758	Identifier	gcbBrokerDownCallback		3520600	0					
ANR	3520759	Argument	"param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 )"		3520600	1					
ANR	3520760	CallExpression	"param_integer ( ""MASTER_GCB_RECONNECT_TIMEOUT"" , 300 )"		3520600	0					
ANR	3520761	Callee	param_integer		3520600	0					
ANR	3520762	Identifier	param_integer		3520600	0					
ANR	3520763	ArgumentList	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3520600	1					
ANR	3520764	Argument	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3520600	0					
ANR	3520765	PrimaryExpression	"""MASTER_GCB_RECONNECT_TIMEOUT"""		3520600	0					
ANR	3520766	Argument	300		3520600	1					
ANR	3520767	PrimaryExpression	300		3520600	0					
ANR	3520768	ExpressionStatement	GCB_Recovery_failed_callback_set ( gcbRecoveryFailedCallback )	1259:2:33349:33410	3520600	1	True				
ANR	3520769	CallExpression	GCB_Recovery_failed_callback_set ( gcbRecoveryFailedCallback )		3520600	0					
ANR	3520770	Callee	GCB_Recovery_failed_callback_set		3520600	0					
ANR	3520771	Identifier	GCB_Recovery_failed_callback_set		3520600	0					
ANR	3520772	ArgumentList	gcbRecoveryFailedCallback		3520600	1					
ANR	3520773	Argument	gcbRecoveryFailedCallback		3520600	0					
ANR	3520774	Identifier	gcbRecoveryFailedCallback		3520600	0					
ANR	3520775	IfStatement	"if ( GetEnv ( ""GCB_INAGENT"" ) && param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true ) )"		3520600	8					
ANR	3520776	Condition	"GetEnv ( ""GCB_INAGENT"" ) && param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true )"	1262:6:33422:33501	3520600	0	True				
ANR	3520777	AndExpression	"GetEnv ( ""GCB_INAGENT"" ) && param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true )"		3520600	0		&&			
ANR	3520778	CallExpression	"GetEnv ( ""GCB_INAGENT"" )"		3520600	0					
ANR	3520779	Callee	GetEnv		3520600	0					
ANR	3520780	Identifier	GetEnv		3520600	0					
ANR	3520781	ArgumentList	"""GCB_INAGENT"""		3520600	1					
ANR	3520782	Argument	"""GCB_INAGENT"""		3520600	0					
ANR	3520783	PrimaryExpression	"""GCB_INAGENT"""		3520600	0					
ANR	3520784	CallExpression	"param_boolean ( ""MASTER_WAITS_FOR_GCB_BROKER"" , true )"		3520600	1					
ANR	3520785	Callee	param_boolean		3520600	0					
ANR	3520786	Identifier	param_boolean		3520600	0					
ANR	3520787	ArgumentList	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520600	1					
ANR	3520788	Argument	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520600	0					
ANR	3520789	PrimaryExpression	"""MASTER_WAITS_FOR_GCB_BROKER"""		3520600	0					
ANR	3520790	Argument	true		3520600	1					
ANR	3520791	Identifier	true		3520600	0					
ANR	3520792	CompoundStatement		51:2:1382:1396	3520600	1					
ANR	3520793	IdentifierDeclStatement	int delay = 20 ;	1267:2:33615:33629	3520600	0	True				
ANR	3520794	IdentifierDecl	delay = 20		3520600	0					
ANR	3520795	IdentifierDeclType	int		3520600	0					
ANR	3520796	Identifier	delay		3520600	1					
ANR	3520797	AssignmentExpression	delay = 20		3520600	2		=			
ANR	3520798	Identifier	delay		3520600	0					
ANR	3520799	PrimaryExpression	20		3520600	1					
ANR	3520800	WhileStatement	"while ( ! strcmp ( GetEnv ( ""GCB_INAGENT"" ) , CONDOR_GCB_INVALID_BROKER ) )"		3520600	1					
ANR	3520801	Condition	"! strcmp ( GetEnv ( ""GCB_INAGENT"" ) , CONDOR_GCB_INVALID_BROKER )"	1269:10:33642:33700	3520600	0	True				
ANR	3520802	UnaryOperationExpression	"! strcmp ( GetEnv ( ""GCB_INAGENT"" ) , CONDOR_GCB_INVALID_BROKER )"		3520600	0					
ANR	3520803	UnaryOperator	!		3520600	0					
ANR	3520804	CallExpression	"strcmp ( GetEnv ( ""GCB_INAGENT"" ) , CONDOR_GCB_INVALID_BROKER )"		3520600	1					
ANR	3520805	Callee	strcmp		3520600	0					
ANR	3520806	Identifier	strcmp		3520600	0					
ANR	3520807	ArgumentList	"GetEnv ( ""GCB_INAGENT"" )"		3520600	1					
ANR	3520808	Argument	"GetEnv ( ""GCB_INAGENT"" )"		3520600	0					
ANR	3520809	CallExpression	"GetEnv ( ""GCB_INAGENT"" )"		3520600	0					
ANR	3520810	Callee	GetEnv		3520600	0					
ANR	3520811	Identifier	GetEnv		3520600	0					
ANR	3520812	ArgumentList	"""GCB_INAGENT"""		3520600	1					
ANR	3520813	Argument	"""GCB_INAGENT"""		3520600	0					
ANR	3520814	PrimaryExpression	"""GCB_INAGENT"""		3520600	0					
ANR	3520815	Argument	CONDOR_GCB_INVALID_BROKER		3520600	1					
ANR	3520816	Identifier	CONDOR_GCB_INVALID_BROKER		3520600	0					
ANR	3520817	CompoundStatement		53:72:1471:1471	3520600	1					
ANR	3520818	Statement	dprintf	1275:3:33957:33963	3520600	0	True				
ANR	3520819	Statement	(	1275:10:33964:33964	3520600	1	True				
ANR	3520820	Statement	D_ALWAYS	1275:11:33965:33972	3520600	2	True				
ANR	3520821	Statement	","	1275:19:33973:33973	3520600	3	True				
ANR	3520822	Statement	"""Can't talk to any GCB brokers. """	1275:21:33975:34007	3520600	4	True				
ANR	3520823	Statement	"""Waiting for one to become available """	1276:5:34014:34051	3520600	5	True				
ANR	3520824	Statement	"""(retry in %d seconds).\\n"""	1277:5:34058:34083	3520600	6	True				
ANR	3520825	Statement	","	1277:31:34084:34084	3520600	7	True				
ANR	3520826	Statement	delay	1277:33:34086:34090	3520600	8	True				
ANR	3520827	Statement	)	1277:38:34091:34091	3520600	9	True				
ANR	3520828	ExpressionStatement		1277:39:34092:34092	3520600	10	True				
ANR	3520829	ExpressionStatement	sleep ( delay )	1278:3:34097:34109	3520600	11	True				
ANR	3520830	CallExpression	sleep ( delay )		3520600	0					
ANR	3520831	Callee	sleep		3520600	0					
ANR	3520832	Identifier	sleep		3520600	0					
ANR	3520833	ArgumentList	delay		3520600	1					
ANR	3520834	Argument	delay		3520600	0					
ANR	3520835	Identifier	delay		3520600	0					
ANR	3520836	ExpressionStatement	condor_net_remap_config ( true )	1279:3:34114:34143	3520600	12	True				
ANR	3520837	CallExpression	condor_net_remap_config ( true )		3520600	0					
ANR	3520838	Callee	condor_net_remap_config		3520600	0					
ANR	3520839	Identifier	condor_net_remap_config		3520600	0					
ANR	3520840	ArgumentList	true		3520600	1					
ANR	3520841	Argument	true		3520600	0					
ANR	3520842	Identifier	true		3520600	0					
ANR	3520843	ExpressionStatement	delay *= 2	1280:3:34148:34158	3520600	13	True				
ANR	3520844	AssignmentExpression	delay *= 2		3520600	0		*=			
ANR	3520845	Identifier	delay		3520600	0					
ANR	3520846	PrimaryExpression	2		3520600	1					
ANR	3520847	IfStatement	if ( delay > 3600 )		3520600	14					
ANR	3520848	Condition	delay > 3600	1281:8:34168:34179	3520600	0	True				
ANR	3520849	RelationalExpression	delay > 3600		3520600	0		>			
ANR	3520850	Identifier	delay		3520600	0					
ANR	3520851	PrimaryExpression	3600		3520600	1					
ANR	3520852	CompoundStatement		65:23:1950:1950	3520600	1					
ANR	3520853	ExpressionStatement	delay = 3600	1282:4:34189:34201	3520600	0	True				
ANR	3520854	AssignmentExpression	delay = 3600		3520600	0		=			
ANR	3520855	Identifier	delay		3520600	0					
ANR	3520856	PrimaryExpression	3600		3520600	1					
ANR	3520857	IdentifierDeclStatement	MyString daemon_list ;	1288:1:34224:34244	3520600	9	True				
ANR	3520858	IdentifierDecl	daemon_list		3520600	0					
ANR	3520859	IdentifierDeclType	MyString		3520600	0					
ANR	3520860	Identifier	daemon_list		3520600	1					
ANR	3520861	IfStatement	"if ( param ( daemon_list , ""DAEMON_LIST"" ) )"		3520600	10					
ANR	3520862	Condition	"param ( daemon_list , ""DAEMON_LIST"" )"	1289:5:34251:34282	3520600	0	True				
ANR	3520863	CallExpression	"param ( daemon_list , ""DAEMON_LIST"" )"		3520600	0					
ANR	3520864	Callee	param		3520600	0					
ANR	3520865	Identifier	param		3520600	0					
ANR	3520866	ArgumentList	daemon_list		3520600	1					
ANR	3520867	Argument	daemon_list		3520600	0					
ANR	3520868	Identifier	daemon_list		3520600	0					
ANR	3520869	Argument	"""DAEMON_LIST"""		3520600	1					
ANR	3520870	PrimaryExpression	"""DAEMON_LIST"""		3520600	0					
ANR	3520871	CompoundStatement		74:2:2057:2091	3520600	1					
ANR	3520872	IdentifierDeclStatement	StringList sl ( daemon_list . Value ( ) ) ;	1290:2:34290:34324	3520600	0	True				
ANR	3520873	IdentifierDecl	sl ( daemon_list . Value ( ) )		3520600	0					
ANR	3520874	IdentifierDeclType	StringList		3520600	0					
ANR	3520875	Identifier	sl		3520600	1					
ANR	3520876	CallExpression	daemon_list . Value ( )		3520600	2					
ANR	3520877	Callee	daemon_list . Value		3520600	0					
ANR	3520878	MemberAccess	daemon_list . Value		3520600	0					
ANR	3520879	Identifier	daemon_list		3520600	0					
ANR	3520880	Identifier	Value		3520600	1					
ANR	3520881	ArgumentList			3520600	1					
ANR	3520882	IfStatement	"if ( sl . contains ( ""SHARED_PORT"" ) )"		3520600	1					
ANR	3520883	Condition	"sl . contains ( ""SHARED_PORT"" )"	1291:6:34332:34357	3520600	0	True				
ANR	3520884	CallExpression	"sl . contains ( ""SHARED_PORT"" )"		3520600	0					
ANR	3520885	Callee	sl . contains		3520600	0					
ANR	3520886	MemberAccess	sl . contains		3520600	0					
ANR	3520887	Identifier	sl		3520600	0					
ANR	3520888	Identifier	contains		3520600	1					
ANR	3520889	ArgumentList	"""SHARED_PORT"""		3520600	1					
ANR	3520890	Argument	"""SHARED_PORT"""		3520600	0					
ANR	3520891	PrimaryExpression	"""SHARED_PORT"""		3520600	0					
ANR	3520892	CompoundStatement		75:35:2128:2128	3520600	1					
ANR	3520893	ExpressionStatement	SharedPortServer :: RemoveDeadAddressFile ( )	1295:3:34533:34574	3520600	0	True				
ANR	3520894	CallExpression	SharedPortServer :: RemoveDeadAddressFile ( )		3520600	0					
ANR	3520895	Callee	SharedPortServer :: RemoveDeadAddressFile		3520600	0					
ANR	3520896	Identifier	SharedPortServer :: RemoveDeadAddressFile		3520600	0					
ANR	3520897	ArgumentList			3520600	1					
ANR	3520898	ReturnType	void		3520600	1					
ANR	3520899	Identifier	main_pre_command_sock_init		3520600	2					
ANR	3520900	ParameterList			3520600	3					
ANR	3520901	CFGEntryNode	ENTRY		3520600		True				
ANR	3520902	CFGExitNode	EXIT		3520600		True				
ANR	3520903	Symbol	lock_file . Value		3520600						
ANR	3520904	Symbol	strcmp		3520600						
ANR	3520905	Symbol	gcbBrokerDownCallback		3520600						
ANR	3520906	Symbol	daemon_list		3520600						
ANR	3520907	Symbol	sl . contains		3520600						
ANR	3520908	Symbol	D_FULLDEBUG		3520600						
ANR	3520909	Symbol	param_boolean		3520600						
ANR	3520910	Symbol	CONDOR_GCB_INVALID_BROKER		3520600						
ANR	3520911	Symbol	p		3520600						
ANR	3520912	Symbol	delay		3520600						
ANR	3520913	Symbol	param		3520600						
ANR	3520914	Symbol	true		3520600						
ANR	3520915	Symbol	sl		3520600						
ANR	3520916	Symbol	GetEnv		3520600						
ANR	3520917	Symbol	param_integer		3520600						
ANR	3520918	Symbol	lock_file		3520600						
ANR	3520919	Symbol	gcbRecoveryFailedCallback		3520600						
ANR	3520920	Function	main_has_console	1301:0:34599:35045							
ANR	3520921	FunctionDef	main_has_console ()		3520920	0					
ANR	3520922	CompoundStatement		1302:0:34624:35045	3520920	0					
ANR	3520923	IdentifierDeclStatement	DWORD displayMode ;	1303:4:34630:34647	3520920	0	True				
ANR	3520924	IdentifierDecl	displayMode		3520920	0					
ANR	3520925	IdentifierDeclType	DWORD		3520920	0					
ANR	3520926	Identifier	displayMode		3520920	1					
ANR	3520927	IfStatement	if ( GetConsoleDisplayMode ( & displayMode ) )		3520920	1					
ANR	3520928	Condition	GetConsoleDisplayMode ( & displayMode )	1304:8:34657:34691	3520920	0	True				
ANR	3520929	CallExpression	GetConsoleDisplayMode ( & displayMode )		3520920	0					
ANR	3520930	Callee	GetConsoleDisplayMode		3520920	0					
ANR	3520931	Identifier	GetConsoleDisplayMode		3520920	0					
ANR	3520932	ArgumentList	& displayMode		3520920	1					
ANR	3520933	Argument	& displayMode		3520920	0					
ANR	3520934	UnaryOperationExpression	& displayMode		3520920	0					
ANR	3520935	UnaryOperator	&		3520920	0					
ANR	3520936	Identifier	displayMode		3520920	1					
ANR	3520937	ReturnStatement	return true ;	1305:7:34701:34712	3520920	1	True				
ANR	3520938	Identifier	true		3520920	0					
ANR	3520939	ReturnStatement	return false ;	1314:4:35031:35043	3520920	2	True				
ANR	3520940	Identifier	false		3520920	0					
ANR	3520941	ReturnType	bool		3520920	1					
ANR	3520942	Identifier	main_has_console		3520920	2					
ANR	3520943	ParameterList			3520920	3					
ANR	3520944	CFGEntryNode	ENTRY		3520920		True				
ANR	3520945	CFGExitNode	EXIT		3520920		True				
ANR	3520946	Symbol	& displayMode		3520920						
ANR	3520947	Symbol	true		3520920						
ANR	3520948	Symbol	false		3520920						
ANR	3520949	Symbol	displayMode		3520920						
ANR	3520950	Symbol	GetConsoleDisplayMode		3520920						
ANR	3520951	Function	main	1319:0:35056:36675							
ANR	3520952	FunctionDef	"main (int argc , char * * argv)"		3520951	0					
ANR	3520953	CompoundStatement		1321:0:35090:36675	3520951	0					
ANR	3520954	IdentifierDeclStatement	bool has_console = main_has_console ( ) ;	1327:4:35292:35329	3520951	0	True				
ANR	3520955	IdentifierDecl	has_console = main_has_console ( )		3520951	0					
ANR	3520956	IdentifierDeclType	bool		3520951	0					
ANR	3520957	Identifier	has_console		3520951	1					
ANR	3520958	AssignmentExpression	has_console = main_has_console ( )		3520951	2		=			
ANR	3520959	Identifier	has_console		3520951	0					
ANR	3520960	CallExpression	main_has_console ( )		3520951	1					
ANR	3520961	Callee	main_has_console		3520951	0					
ANR	3520962	Identifier	main_has_console		3520951	0					
ANR	3520963	ArgumentList			3520951	1					
ANR	3520964	IdentifierDeclStatement	"bool is_daemon = dc_args_is_background ( argc , argv ) ;"	1328:4:35335:35385	3520951	1	True				
ANR	3520965	IdentifierDecl	"is_daemon = dc_args_is_background ( argc , argv )"		3520951	0					
ANR	3520966	IdentifierDeclType	bool		3520951	0					
ANR	3520967	Identifier	is_daemon		3520951	1					
ANR	3520968	AssignmentExpression	"is_daemon = dc_args_is_background ( argc , argv )"		3520951	2		=			
ANR	3520969	Identifier	is_daemon		3520951	0					
ANR	3520970	CallExpression	"dc_args_is_background ( argc , argv )"		3520951	1					
ANR	3520971	Callee	dc_args_is_background		3520951	0					
ANR	3520972	Identifier	dc_args_is_background		3520951	0					
ANR	3520973	ArgumentList	argc		3520951	1					
ANR	3520974	Argument	argc		3520951	0					
ANR	3520975	Identifier	argc		3520951	0					
ANR	3520976	Argument	argv		3520951	1					
ANR	3520977	Identifier	argv		3520951	0					
ANR	3520978	ExpressionStatement	"UnsetEnv ( ""NET_REMAP_ENABLE"" )"	1334:1:35578:35608	3520951	2	True				
ANR	3520979	CallExpression	"UnsetEnv ( ""NET_REMAP_ENABLE"" )"		3520951	0					
ANR	3520980	Callee	UnsetEnv		3520951	0					
ANR	3520981	Identifier	UnsetEnv		3520951	0					
ANR	3520982	ArgumentList	"""NET_REMAP_ENABLE"""		3520951	1					
ANR	3520983	Argument	"""NET_REMAP_ENABLE"""		3520951	0					
ANR	3520984	PrimaryExpression	"""NET_REMAP_ENABLE"""		3520951	0					
ANR	3520985	ExpressionStatement	"set_mySubSystem ( ""MASTER"" , SUBSYSTEM_TYPE_MASTER )"	1336:1:35612:35662	3520951	3	True				
ANR	3520986	CallExpression	"set_mySubSystem ( ""MASTER"" , SUBSYSTEM_TYPE_MASTER )"		3520951	0					
ANR	3520987	Callee	set_mySubSystem		3520951	0					
ANR	3520988	Identifier	set_mySubSystem		3520951	0					
ANR	3520989	ArgumentList	"""MASTER"""		3520951	1					
ANR	3520990	Argument	"""MASTER"""		3520951	0					
ANR	3520991	PrimaryExpression	"""MASTER"""		3520951	0					
ANR	3520992	Argument	SUBSYSTEM_TYPE_MASTER		3520951	1					
ANR	3520993	Identifier	SUBSYSTEM_TYPE_MASTER		3520951	0					
ANR	3520994	ExpressionStatement	dc_main_init = main_init	1338:1:35666:35690	3520951	4	True				
ANR	3520995	AssignmentExpression	dc_main_init = main_init		3520951	0		=			
ANR	3520996	Identifier	dc_main_init		3520951	0					
ANR	3520997	Identifier	main_init		3520951	1					
ANR	3520998	ExpressionStatement	dc_main_config = main_config	1339:1:35693:35721	3520951	5	True				
ANR	3520999	AssignmentExpression	dc_main_config = main_config		3520951	0		=			
ANR	3521000	Identifier	dc_main_config		3520951	0					
ANR	3521001	Identifier	main_config		3520951	1					
ANR	3521002	ExpressionStatement	dc_main_shutdown_fast = main_shutdown_fast	1340:1:35724:35766	3520951	6	True				
ANR	3521003	AssignmentExpression	dc_main_shutdown_fast = main_shutdown_fast		3520951	0		=			
ANR	3521004	Identifier	dc_main_shutdown_fast		3520951	0					
ANR	3521005	Identifier	main_shutdown_fast		3520951	1					
ANR	3521006	ExpressionStatement	dc_main_shutdown_graceful = main_shutdown_graceful	1341:1:35769:35819	3520951	7	True				
ANR	3521007	AssignmentExpression	dc_main_shutdown_graceful = main_shutdown_graceful		3520951	0		=			
ANR	3521008	Identifier	dc_main_shutdown_graceful		3520951	0					
ANR	3521009	Identifier	main_shutdown_graceful		3520951	1					
ANR	3521010	ExpressionStatement	dc_main_pre_command_sock_init = main_pre_command_sock_init	1342:1:35822:35880	3520951	8	True				
ANR	3521011	AssignmentExpression	dc_main_pre_command_sock_init = main_pre_command_sock_init		3520951	0		=			
ANR	3521012	Identifier	dc_main_pre_command_sock_init		3520951	0					
ANR	3521013	Identifier	main_pre_command_sock_init		3520951	1					
ANR	3521014	ExpressionStatement	NT_ServiceFlag = FALSE	1351:4:36211:36233	3520951	9	True				
ANR	3521015	AssignmentExpression	NT_ServiceFlag = FALSE		3520951	0		=			
ANR	3521016	Identifier	NT_ServiceFlag		3520951	0					
ANR	3521017	Identifier	FALSE		3520951	1					
ANR	3521018	IfStatement	if ( is_daemon )		3520951	10					
ANR	3521019	Condition	is_daemon	1352:8:36243:36251	3520951	0	True				
ANR	3521020	Identifier	is_daemon		3520951	0					
ANR	3521021	CompoundStatement		34:4:1199:1229	3520951	1					
ANR	3521022	ExpressionStatement	NT_ServiceFlag = TRUE	1353:7:36263:36284	3520951	0	True				
ANR	3521023	AssignmentExpression	NT_ServiceFlag = TRUE		3520951	0		=			
ANR	3521024	Identifier	NT_ServiceFlag		3520951	0					
ANR	3521025	Identifier	TRUE		3520951	1					
ANR	3521026	IdentifierDeclStatement	DWORD err = start_as_service ( ) ;	1354:4:36290:36320	3520951	1	True				
ANR	3521027	IdentifierDecl	err = start_as_service ( )		3520951	0					
ANR	3521028	IdentifierDeclType	DWORD		3520951	0					
ANR	3521029	Identifier	err		3520951	1					
ANR	3521030	AssignmentExpression	err = start_as_service ( )		3520951	2		=			
ANR	3521031	Identifier	err		3520951	0					
ANR	3521032	CallExpression	start_as_service ( )		3520951	1					
ANR	3521033	Callee	start_as_service		3520951	0					
ANR	3521034	Identifier	start_as_service		3520951	0					
ANR	3521035	ArgumentList			3520951	1					
ANR	3521036	IfStatement	if ( err == 0x666 )		3520951	2					
ANR	3521037	Condition	err == 0x666	1355:11:36333:36344	3520951	0	True				
ANR	3521038	EqualityExpression	err == 0x666		3520951	0		==			
ANR	3521039	Identifier	err		3520951	0					
ANR	3521040	PrimaryExpression	0x666		3520951	1					
ANR	3521041	CompoundStatement		35:25:1256:1256	3520951	1					
ANR	3521042	ExpressionStatement	NT_ServiceFlag = FALSE	1359:10:36554:36576	3520951	0	True				
ANR	3521043	AssignmentExpression	NT_ServiceFlag = FALSE		3520951	0		=			
ANR	3521044	Identifier	NT_ServiceFlag		3520951	0					
ANR	3521045	Identifier	FALSE		3520951	1					
ANR	3521046	ElseStatement	else		3520951	0					
ANR	3521047	CompoundStatement		40:14:1501:1501	3520951	0					
ANR	3521048	ReturnStatement	return ( int ) err ;	1361:10:36604:36619	3520951	0	True				
ANR	3521049	CastExpression	( int ) err		3520951	0					
ANR	3521050	CastTarget	int		3520951	0					
ANR	3521051	Identifier	err		3520951	1					
ANR	3521052	ReturnStatement	"return dc_main ( argc , argv ) ;"	1366:1:36645:36673	3520951	11	True				
ANR	3521053	CallExpression	"dc_main ( argc , argv )"		3520951	0					
ANR	3521054	Callee	dc_main		3520951	0					
ANR	3521055	Identifier	dc_main		3520951	0					
ANR	3521056	ArgumentList	argc		3520951	1					
ANR	3521057	Argument	argc		3520951	0					
ANR	3521058	Identifier	argc		3520951	0					
ANR	3521059	Argument	argv		3520951	1					
ANR	3521060	Identifier	argv		3520951	0					
ANR	3521061	ReturnType	int		3520951	1					
ANR	3521062	Identifier	main		3520951	2					
ANR	3521063	ParameterList	"int argc , char * * argv"		3520951	3					
ANR	3521064	Parameter	int argc	1320:6:35066:35073	3520951	0	True				
ANR	3521065	ParameterType	int		3520951	0					
ANR	3521066	Identifier	argc		3520951	1					
ANR	3521067	Parameter	char * * argv	1320:16:35076:35086	3520951	1	True				
ANR	3521068	ParameterType	char * *		3520951	0					
ANR	3521069	Identifier	argv		3520951	1					
ANR	3521070	CFGEntryNode	ENTRY		3520951		True				
ANR	3521071	CFGExitNode	EXIT		3520951		True				
ANR	3521072	Symbol	argc		3520951						
ANR	3521073	Symbol	err		3520951						
ANR	3521074	Symbol	main_shutdown_fast		3520951						
ANR	3521075	Symbol	TRUE		3520951						
ANR	3521076	Symbol	is_daemon		3520951						
ANR	3521077	Symbol	argv		3520951						
ANR	3521078	Symbol	dc_args_is_background		3520951						
ANR	3521079	Symbol	dc_main_init		3520951						
ANR	3521080	Symbol	SUBSYSTEM_TYPE_MASTER		3520951						
ANR	3521081	Symbol	has_console		3520951						
ANR	3521082	Symbol	main_init		3520951						
ANR	3521083	Symbol	start_as_service		3520951						
ANR	3521084	Symbol	dc_main_shutdown_fast		3520951						
ANR	3521085	Symbol	dc_main		3520951						
ANR	3521086	Symbol	dc_main_config		3520951						
ANR	3521087	Symbol	NT_ServiceFlag		3520951						
ANR	3521088	Symbol	FALSE		3520951						
ANR	3521089	Symbol	main_has_console		3520951						
ANR	3521090	Symbol	main_pre_command_sock_init		3520951						
ANR	3521091	Symbol	main_config		3520951						
ANR	3521092	Symbol	dc_main_shutdown_graceful		3520951						
ANR	3521093	Symbol	main_shutdown_graceful		3520951						
ANR	3521094	Symbol	dc_main_pre_command_sock_init		3520951						
ANR	3521095	Function	init_firewall_exceptions	1369:0:36678:44278							
ANR	3521096	FunctionDef	init_firewall_exceptions ()		3521095	0					
ANR	3521097	CompoundStatement		1369:32:36710:44278	3521095	0					
ANR	3521098	IdentifierDeclStatement	bool add_exception ;	1372:1:36727:36745	3521095	0	True				
ANR	3521099	IdentifierDecl	add_exception		3521095	0					
ANR	3521100	IdentifierDeclType	bool		3521095	0					
ANR	3521101	Identifier	add_exception		3521095	1					
ANR	3521102	IdentifierDeclStatement	"char * master_image_path , * schedd_image_path , * startd_image_path , * dbmsd_image_path , * quill_image_path , * dagman_image_path , * negotiator_image_path , * collector_image_path , * starter_image_path , * shadow_image_path , * gridmanager_image_path , * gahp_image_path , * gahp_worker_image_path , * credd_image_path , * vmgahp_image_path , * kbdd_image_path , * hdfs_image_path , * bin_path ;"	1373:1:36748:37128	3521095	1	True				
ANR	3521103	IdentifierDecl	* master_image_path		3521095	0					
ANR	3521104	IdentifierDeclType	char *		3521095	0					
ANR	3521105	Identifier	master_image_path		3521095	1					
ANR	3521106	IdentifierDecl	* schedd_image_path		3521095	1					
ANR	3521107	IdentifierDeclType	char *		3521095	0					
ANR	3521108	Identifier	schedd_image_path		3521095	1					
ANR	3521109	IdentifierDecl	* startd_image_path		3521095	2					
ANR	3521110	IdentifierDeclType	char *		3521095	0					
ANR	3521111	Identifier	startd_image_path		3521095	1					
ANR	3521112	IdentifierDecl	* dbmsd_image_path		3521095	3					
ANR	3521113	IdentifierDeclType	char *		3521095	0					
ANR	3521114	Identifier	dbmsd_image_path		3521095	1					
ANR	3521115	IdentifierDecl	* quill_image_path		3521095	4					
ANR	3521116	IdentifierDeclType	char *		3521095	0					
ANR	3521117	Identifier	quill_image_path		3521095	1					
ANR	3521118	IdentifierDecl	* dagman_image_path		3521095	5					
ANR	3521119	IdentifierDeclType	char *		3521095	0					
ANR	3521120	Identifier	dagman_image_path		3521095	1					
ANR	3521121	IdentifierDecl	* negotiator_image_path		3521095	6					
ANR	3521122	IdentifierDeclType	char *		3521095	0					
ANR	3521123	Identifier	negotiator_image_path		3521095	1					
ANR	3521124	IdentifierDecl	* collector_image_path		3521095	7					
ANR	3521125	IdentifierDeclType	char *		3521095	0					
ANR	3521126	Identifier	collector_image_path		3521095	1					
ANR	3521127	IdentifierDecl	* starter_image_path		3521095	8					
ANR	3521128	IdentifierDeclType	char *		3521095	0					
ANR	3521129	Identifier	starter_image_path		3521095	1					
ANR	3521130	IdentifierDecl	* shadow_image_path		3521095	9					
ANR	3521131	IdentifierDeclType	char *		3521095	0					
ANR	3521132	Identifier	shadow_image_path		3521095	1					
ANR	3521133	IdentifierDecl	* gridmanager_image_path		3521095	10					
ANR	3521134	IdentifierDeclType	char *		3521095	0					
ANR	3521135	Identifier	gridmanager_image_path		3521095	1					
ANR	3521136	IdentifierDecl	* gahp_image_path		3521095	11					
ANR	3521137	IdentifierDeclType	char *		3521095	0					
ANR	3521138	Identifier	gahp_image_path		3521095	1					
ANR	3521139	IdentifierDecl	* gahp_worker_image_path		3521095	12					
ANR	3521140	IdentifierDeclType	char *		3521095	0					
ANR	3521141	Identifier	gahp_worker_image_path		3521095	1					
ANR	3521142	IdentifierDecl	* credd_image_path		3521095	13					
ANR	3521143	IdentifierDeclType	char *		3521095	0					
ANR	3521144	Identifier	credd_image_path		3521095	1					
ANR	3521145	IdentifierDecl	* vmgahp_image_path		3521095	14					
ANR	3521146	IdentifierDeclType	char *		3521095	0					
ANR	3521147	Identifier	vmgahp_image_path		3521095	1					
ANR	3521148	IdentifierDecl	* kbdd_image_path		3521095	15					
ANR	3521149	IdentifierDeclType	char *		3521095	0					
ANR	3521150	Identifier	kbdd_image_path		3521095	1					
ANR	3521151	IdentifierDecl	* hdfs_image_path		3521095	16					
ANR	3521152	IdentifierDeclType	char *		3521095	0					
ANR	3521153	Identifier	hdfs_image_path		3521095	1					
ANR	3521154	IdentifierDecl	* bin_path		3521095	17					
ANR	3521155	IdentifierDeclType	char *		3521095	0					
ANR	3521156	Identifier	bin_path		3521095	1					
ANR	3521157	IdentifierDeclStatement	"const char * dagman_exe = ""condor_dagman.exe"" ;"	1379:1:37131:37175	3521095	2	True				
ANR	3521158	IdentifierDecl	"* dagman_exe = ""condor_dagman.exe"""		3521095	0					
ANR	3521159	IdentifierDeclType	const char *		3521095	0					
ANR	3521160	Identifier	dagman_exe		3521095	1					
ANR	3521161	AssignmentExpression	"* dagman_exe = ""condor_dagman.exe"""		3521095	2		=			
ANR	3521162	Identifier	dagman_exe		3521095	0					
ANR	3521163	PrimaryExpression	"""condor_dagman.exe"""		3521095	1					
ANR	3521164	IdentifierDeclStatement	WindowsFirewallHelper wfh ;	1381:1:37179:37204	3521095	3	True				
ANR	3521165	IdentifierDecl	wfh		3521095	0					
ANR	3521166	IdentifierDeclType	WindowsFirewallHelper		3521095	0					
ANR	3521167	Identifier	wfh		3521095	1					
ANR	3521168	ExpressionStatement	"add_exception = param_boolean ( ""ADD_WINDOWS_FIREWALL_EXCEPTION"" , true )"	1383:1:37209:37278	3521095	4	True				
ANR	3521169	AssignmentExpression	"add_exception = param_boolean ( ""ADD_WINDOWS_FIREWALL_EXCEPTION"" , true )"		3521095	0		=			
ANR	3521170	Identifier	add_exception		3521095	0					
ANR	3521171	CallExpression	"param_boolean ( ""ADD_WINDOWS_FIREWALL_EXCEPTION"" , true )"		3521095	1					
ANR	3521172	Callee	param_boolean		3521095	0					
ANR	3521173	Identifier	param_boolean		3521095	0					
ANR	3521174	ArgumentList	"""ADD_WINDOWS_FIREWALL_EXCEPTION"""		3521095	1					
ANR	3521175	Argument	"""ADD_WINDOWS_FIREWALL_EXCEPTION"""		3521095	0					
ANR	3521176	PrimaryExpression	"""ADD_WINDOWS_FIREWALL_EXCEPTION"""		3521095	0					
ANR	3521177	Argument	true		3521095	1					
ANR	3521178	Identifier	true		3521095	0					
ANR	3521179	IfStatement	if ( add_exception == false )		3521095	5					
ANR	3521180	Condition	add_exception == false	1385:6:37287:37308	3521095	0	True				
ANR	3521181	EqualityExpression	add_exception == false		3521095	0		==			
ANR	3521182	Identifier	add_exception		3521095	0					
ANR	3521183	Identifier	false		3521095	1					
ANR	3521184	CompoundStatement		17:31:601:601	3521095	1					
ANR	3521185	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ADD_WINDOWS_FIREWALL_EXCEPTION is false, skipping\\n"" )"	1386:2:37316:37391	3521095	0	True				
ANR	3521186	CallExpression	"dprintf ( D_FULLDEBUG , ""ADD_WINDOWS_FIREWALL_EXCEPTION is false, skipping\\n"" )"		3521095	0					
ANR	3521187	Callee	dprintf		3521095	0					
ANR	3521188	Identifier	dprintf		3521095	0					
ANR	3521189	ArgumentList	D_FULLDEBUG		3521095	1					
ANR	3521190	Argument	D_FULLDEBUG		3521095	0					
ANR	3521191	Identifier	D_FULLDEBUG		3521095	0					
ANR	3521192	Argument	"""ADD_WINDOWS_FIREWALL_EXCEPTION is false, skipping\\n"""		3521095	1					
ANR	3521193	PrimaryExpression	"""ADD_WINDOWS_FIREWALL_EXCEPTION is false, skipping\\n"""		3521095	0					
ANR	3521194	ReturnStatement	return ;	1387:2:37395:37401	3521095	1	True				
ANR	3521195	ExpressionStatement	master_image_path = getExecPath ( )	1396:1:37651:37684	3521095	6	True				
ANR	3521196	AssignmentExpression	master_image_path = getExecPath ( )		3521095	0		=			
ANR	3521197	Identifier	master_image_path		3521095	0					
ANR	3521198	CallExpression	getExecPath ( )		3521095	1					
ANR	3521199	Callee	getExecPath		3521095	0					
ANR	3521200	Identifier	getExecPath		3521095	0					
ANR	3521201	ArgumentList			3521095	1					
ANR	3521202	IfStatement	if ( ! master_image_path )		3521095	7					
ANR	3521203	Condition	! master_image_path	1397:6:37692:37709	3521095	0	True				
ANR	3521204	UnaryOperationExpression	! master_image_path		3521095	0					
ANR	3521205	UnaryOperator	!		3521095	0					
ANR	3521206	Identifier	master_image_path		3521095	1					
ANR	3521207	CompoundStatement		29:27:1002:1002	3521095	1					
ANR	3521208	Statement	dprintf	1398:2:37718:37724	3521095	0	True				
ANR	3521209	Statement	(	1398:9:37725:37725	3521095	1	True				
ANR	3521210	Statement	D_ALWAYS	1398:10:37726:37733	3521095	2	True				
ANR	3521211	Statement	","	1398:18:37734:37734	3521095	3	True				
ANR	3521212	Statement	"""WARNING: Failed to get condor_master image path.\\n"""	1399:4:37741:37792	3521095	4	True				
ANR	3521213	Statement	"""Condor will not be excepted from the Windows firewall.\\n"""	1400:4:37798:37855	3521095	5	True				
ANR	3521214	Statement	)	1400:62:37856:37856	3521095	6	True				
ANR	3521215	ExpressionStatement		1400:63:37857:37857	3521095	7	True				
ANR	3521216	ReturnStatement	return ;	1401:2:37861:37867	3521095	8	True				
ANR	3521217	ExpressionStatement	"schedd_image_path = param ( ""SCHEDD"" )"	1408:1:38055:38090	3521095	8	True				
ANR	3521218	AssignmentExpression	"schedd_image_path = param ( ""SCHEDD"" )"		3521095	0		=			
ANR	3521219	Identifier	schedd_image_path		3521095	0					
ANR	3521220	CallExpression	"param ( ""SCHEDD"" )"		3521095	1					
ANR	3521221	Callee	param		3521095	0					
ANR	3521222	Identifier	param		3521095	0					
ANR	3521223	ArgumentList	"""SCHEDD"""		3521095	1					
ANR	3521224	Argument	"""SCHEDD"""		3521095	0					
ANR	3521225	PrimaryExpression	"""SCHEDD"""		3521095	0					
ANR	3521226	ExpressionStatement	"startd_image_path = param ( ""STARTD"" )"	1409:1:38093:38128	3521095	9	True				
ANR	3521227	AssignmentExpression	"startd_image_path = param ( ""STARTD"" )"		3521095	0		=			
ANR	3521228	Identifier	startd_image_path		3521095	0					
ANR	3521229	CallExpression	"param ( ""STARTD"" )"		3521095	1					
ANR	3521230	Callee	param		3521095	0					
ANR	3521231	Identifier	param		3521095	0					
ANR	3521232	ArgumentList	"""STARTD"""		3521095	1					
ANR	3521233	Argument	"""STARTD"""		3521095	0					
ANR	3521234	PrimaryExpression	"""STARTD"""		3521095	0					
ANR	3521235	ExpressionStatement	"quill_image_path = param ( ""QUILL"" )"	1413:1:38183:38216	3521095	10	True				
ANR	3521236	AssignmentExpression	"quill_image_path = param ( ""QUILL"" )"		3521095	0		=			
ANR	3521237	Identifier	quill_image_path		3521095	0					
ANR	3521238	CallExpression	"param ( ""QUILL"" )"		3521095	1					
ANR	3521239	Callee	param		3521095	0					
ANR	3521240	Identifier	param		3521095	0					
ANR	3521241	ArgumentList	"""QUILL"""		3521095	1					
ANR	3521242	Argument	"""QUILL"""		3521095	0					
ANR	3521243	PrimaryExpression	"""QUILL"""		3521095	0					
ANR	3521244	ExpressionStatement	"dbmsd_image_path = param ( ""DBMSD"" )"	1414:1:38219:38252	3521095	11	True				
ANR	3521245	AssignmentExpression	"dbmsd_image_path = param ( ""DBMSD"" )"		3521095	0		=			
ANR	3521246	Identifier	dbmsd_image_path		3521095	0					
ANR	3521247	CallExpression	"param ( ""DBMSD"" )"		3521095	1					
ANR	3521248	Callee	param		3521095	0					
ANR	3521249	Identifier	param		3521095	0					
ANR	3521250	ArgumentList	"""DBMSD"""		3521095	1					
ANR	3521251	Argument	"""DBMSD"""		3521095	0					
ANR	3521252	PrimaryExpression	"""DBMSD"""		3521095	0					
ANR	3521253	ExpressionStatement	"negotiator_image_path = param ( ""NEGOTIATOR"" )"	1418:1:38396:38439	3521095	12	True				
ANR	3521254	AssignmentExpression	"negotiator_image_path = param ( ""NEGOTIATOR"" )"		3521095	0		=			
ANR	3521255	Identifier	negotiator_image_path		3521095	0					
ANR	3521256	CallExpression	"param ( ""NEGOTIATOR"" )"		3521095	1					
ANR	3521257	Callee	param		3521095	0					
ANR	3521258	Identifier	param		3521095	0					
ANR	3521259	ArgumentList	"""NEGOTIATOR"""		3521095	1					
ANR	3521260	Argument	"""NEGOTIATOR"""		3521095	0					
ANR	3521261	PrimaryExpression	"""NEGOTIATOR"""		3521095	0					
ANR	3521262	ExpressionStatement	"collector_image_path = param ( ""COLLECTOR"" )"	1419:1:38442:38483	3521095	13	True				
ANR	3521263	AssignmentExpression	"collector_image_path = param ( ""COLLECTOR"" )"		3521095	0		=			
ANR	3521264	Identifier	collector_image_path		3521095	0					
ANR	3521265	CallExpression	"param ( ""COLLECTOR"" )"		3521095	1					
ANR	3521266	Callee	param		3521095	0					
ANR	3521267	Identifier	param		3521095	0					
ANR	3521268	ArgumentList	"""COLLECTOR"""		3521095	1					
ANR	3521269	Argument	"""COLLECTOR"""		3521095	0					
ANR	3521270	PrimaryExpression	"""COLLECTOR"""		3521095	0					
ANR	3521271	ExpressionStatement	"starter_image_path = param ( ""STARTER"" )"	1420:1:38486:38523	3521095	14	True				
ANR	3521272	AssignmentExpression	"starter_image_path = param ( ""STARTER"" )"		3521095	0		=			
ANR	3521273	Identifier	starter_image_path		3521095	0					
ANR	3521274	CallExpression	"param ( ""STARTER"" )"		3521095	1					
ANR	3521275	Callee	param		3521095	0					
ANR	3521276	Identifier	param		3521095	0					
ANR	3521277	ArgumentList	"""STARTER"""		3521095	1					
ANR	3521278	Argument	"""STARTER"""		3521095	0					
ANR	3521279	PrimaryExpression	"""STARTER"""		3521095	0					
ANR	3521280	ExpressionStatement	"shadow_image_path = param ( ""SHADOW"" )"	1421:1:38526:38561	3521095	15	True				
ANR	3521281	AssignmentExpression	"shadow_image_path = param ( ""SHADOW"" )"		3521095	0		=			
ANR	3521282	Identifier	shadow_image_path		3521095	0					
ANR	3521283	CallExpression	"param ( ""SHADOW"" )"		3521095	1					
ANR	3521284	Callee	param		3521095	0					
ANR	3521285	Identifier	param		3521095	0					
ANR	3521286	ArgumentList	"""SHADOW"""		3521095	1					
ANR	3521287	Argument	"""SHADOW"""		3521095	0					
ANR	3521288	PrimaryExpression	"""SHADOW"""		3521095	0					
ANR	3521289	ExpressionStatement	"gridmanager_image_path = param ( ""GRIDMANAGER"" )"	1422:1:38564:38609	3521095	16	True				
ANR	3521290	AssignmentExpression	"gridmanager_image_path = param ( ""GRIDMANAGER"" )"		3521095	0		=			
ANR	3521291	Identifier	gridmanager_image_path		3521095	0					
ANR	3521292	CallExpression	"param ( ""GRIDMANAGER"" )"		3521095	1					
ANR	3521293	Callee	param		3521095	0					
ANR	3521294	Identifier	param		3521095	0					
ANR	3521295	ArgumentList	"""GRIDMANAGER"""		3521095	1					
ANR	3521296	Argument	"""GRIDMANAGER"""		3521095	0					
ANR	3521297	PrimaryExpression	"""GRIDMANAGER"""		3521095	0					
ANR	3521298	ExpressionStatement	"gahp_image_path = param ( ""CONDOR_GAHP"" )"	1423:1:38612:38650	3521095	17	True				
ANR	3521299	AssignmentExpression	"gahp_image_path = param ( ""CONDOR_GAHP"" )"		3521095	0		=			
ANR	3521300	Identifier	gahp_image_path		3521095	0					
ANR	3521301	CallExpression	"param ( ""CONDOR_GAHP"" )"		3521095	1					
ANR	3521302	Callee	param		3521095	0					
ANR	3521303	Identifier	param		3521095	0					
ANR	3521304	ArgumentList	"""CONDOR_GAHP"""		3521095	1					
ANR	3521305	Argument	"""CONDOR_GAHP"""		3521095	0					
ANR	3521306	PrimaryExpression	"""CONDOR_GAHP"""		3521095	0					
ANR	3521307	ExpressionStatement	"gahp_worker_image_path = param ( ""CONDOR_GAHP_WORKER"" )"	1424:1:38653:38705	3521095	18	True				
ANR	3521308	AssignmentExpression	"gahp_worker_image_path = param ( ""CONDOR_GAHP_WORKER"" )"		3521095	0		=			
ANR	3521309	Identifier	gahp_worker_image_path		3521095	0					
ANR	3521310	CallExpression	"param ( ""CONDOR_GAHP_WORKER"" )"		3521095	1					
ANR	3521311	Callee	param		3521095	0					
ANR	3521312	Identifier	param		3521095	0					
ANR	3521313	ArgumentList	"""CONDOR_GAHP_WORKER"""		3521095	1					
ANR	3521314	Argument	"""CONDOR_GAHP_WORKER"""		3521095	0					
ANR	3521315	PrimaryExpression	"""CONDOR_GAHP_WORKER"""		3521095	0					
ANR	3521316	ExpressionStatement	"credd_image_path = param ( ""CREDD"" )"	1425:1:38708:38741	3521095	19	True				
ANR	3521317	AssignmentExpression	"credd_image_path = param ( ""CREDD"" )"		3521095	0		=			
ANR	3521318	Identifier	credd_image_path		3521095	0					
ANR	3521319	CallExpression	"param ( ""CREDD"" )"		3521095	1					
ANR	3521320	Callee	param		3521095	0					
ANR	3521321	Identifier	param		3521095	0					
ANR	3521322	ArgumentList	"""CREDD"""		3521095	1					
ANR	3521323	Argument	"""CREDD"""		3521095	0					
ANR	3521324	PrimaryExpression	"""CREDD"""		3521095	0					
ANR	3521325	ExpressionStatement	"kbdd_image_path = param ( ""KBDD"" )"	1426:1:38744:38775	3521095	20	True				
ANR	3521326	AssignmentExpression	"kbdd_image_path = param ( ""KBDD"" )"		3521095	0		=			
ANR	3521327	Identifier	kbdd_image_path		3521095	0					
ANR	3521328	CallExpression	"param ( ""KBDD"" )"		3521095	1					
ANR	3521329	Callee	param		3521095	0					
ANR	3521330	Identifier	param		3521095	0					
ANR	3521331	ArgumentList	"""KBDD"""		3521095	1					
ANR	3521332	Argument	"""KBDD"""		3521095	0					
ANR	3521333	PrimaryExpression	"""KBDD"""		3521095	0					
ANR	3521334	ExpressionStatement	"hdfs_image_path = param ( ""HDFS"" )"	1427:1:38778:38809	3521095	21	True				
ANR	3521335	AssignmentExpression	"hdfs_image_path = param ( ""HDFS"" )"		3521095	0		=			
ANR	3521336	Identifier	hdfs_image_path		3521095	0					
ANR	3521337	CallExpression	"param ( ""HDFS"" )"		3521095	1					
ANR	3521338	Callee	param		3521095	0					
ANR	3521339	Identifier	param		3521095	0					
ANR	3521340	ArgumentList	"""HDFS"""		3521095	1					
ANR	3521341	Argument	"""HDFS"""		3521095	0					
ANR	3521342	PrimaryExpression	"""HDFS"""		3521095	0					
ANR	3521343	ExpressionStatement	"vmgahp_image_path = param ( ""VM_GAHP_SERVER"" )"	1428:1:38812:38855	3521095	22	True				
ANR	3521344	AssignmentExpression	"vmgahp_image_path = param ( ""VM_GAHP_SERVER"" )"		3521095	0		=			
ANR	3521345	Identifier	vmgahp_image_path		3521095	0					
ANR	3521346	CallExpression	"param ( ""VM_GAHP_SERVER"" )"		3521095	1					
ANR	3521347	Callee	param		3521095	0					
ANR	3521348	Identifier	param		3521095	0					
ANR	3521349	ArgumentList	"""VM_GAHP_SERVER"""		3521095	1					
ANR	3521350	Argument	"""VM_GAHP_SERVER"""		3521095	0					
ANR	3521351	PrimaryExpression	"""VM_GAHP_SERVER"""		3521095	0					
ANR	3521352	ExpressionStatement	"bin_path = param ( ""BIN"" )"	1433:1:38936:38962	3521095	23	True				
ANR	3521353	AssignmentExpression	"bin_path = param ( ""BIN"" )"		3521095	0		=			
ANR	3521354	Identifier	bin_path		3521095	0					
ANR	3521355	CallExpression	"param ( ""BIN"" )"		3521095	1					
ANR	3521356	Callee	param		3521095	0					
ANR	3521357	Identifier	param		3521095	0					
ANR	3521358	ArgumentList	"""BIN"""		3521095	1					
ANR	3521359	Argument	"""BIN"""		3521095	0					
ANR	3521360	PrimaryExpression	"""BIN"""		3521095	0					
ANR	3521361	IfStatement	if ( bin_path )		3521095	24					
ANR	3521362	Condition	bin_path	1434:6:38970:38977	3521095	0	True				
ANR	3521363	Identifier	bin_path		3521095	0					
ANR	3521364	CompoundStatement		66:17:2270:2270	3521095	1					
ANR	3521365	ExpressionStatement	dagman_image_path = ( char * ) malloc ( strlen ( bin_path ) + strlen ( dagman_exe ) + 2 )	1435:2:38985:39074	3521095	0	True				
ANR	3521366	AssignmentExpression	dagman_image_path = ( char * ) malloc ( strlen ( bin_path ) + strlen ( dagman_exe ) + 2 )		3521095	0		=			
ANR	3521367	Identifier	dagman_image_path		3521095	0					
ANR	3521368	CastExpression	( char * ) malloc ( strlen ( bin_path ) + strlen ( dagman_exe ) + 2 )		3521095	1					
ANR	3521369	CastTarget	char *		3521095	0					
ANR	3521370	CallExpression	malloc ( strlen ( bin_path ) + strlen ( dagman_exe ) + 2 )		3521095	1					
ANR	3521371	Callee	malloc		3521095	0					
ANR	3521372	Identifier	malloc		3521095	0					
ANR	3521373	ArgumentList	strlen ( bin_path ) + strlen ( dagman_exe ) + 2		3521095	1					
ANR	3521374	Argument	strlen ( bin_path ) + strlen ( dagman_exe ) + 2		3521095	0					
ANR	3521375	AdditiveExpression	strlen ( bin_path ) + strlen ( dagman_exe ) + 2		3521095	0		+			
ANR	3521376	CallExpression	strlen ( bin_path )		3521095	0					
ANR	3521377	Callee	strlen		3521095	0					
ANR	3521378	Identifier	strlen		3521095	0					
ANR	3521379	ArgumentList	bin_path		3521095	1					
ANR	3521380	Argument	bin_path		3521095	0					
ANR	3521381	Identifier	bin_path		3521095	0					
ANR	3521382	AdditiveExpression	strlen ( dagman_exe ) + 2		3521095	1		+			
ANR	3521383	CallExpression	strlen ( dagman_exe )		3521095	0					
ANR	3521384	Callee	strlen		3521095	0					
ANR	3521385	Identifier	strlen		3521095	0					
ANR	3521386	ArgumentList	dagman_exe		3521095	1					
ANR	3521387	Argument	dagman_exe		3521095	0					
ANR	3521388	Identifier	dagman_exe		3521095	0					
ANR	3521389	PrimaryExpression	2		3521095	1					
ANR	3521390	IfStatement	if ( dagman_image_path )		3521095	1					
ANR	3521391	Condition	dagman_image_path	1437:7:39083:39099	3521095	0	True				
ANR	3521392	Identifier	dagman_image_path		3521095	0					
ANR	3521393	CompoundStatement		69:27:2392:2392	3521095	1					
ANR	3521394	ExpressionStatement	"sprintf ( dagman_image_path , ""%s\\\\%s"" , bin_path , dagman_exe )"	1438:3:39108:39169	3521095	0	True				
ANR	3521395	CallExpression	"sprintf ( dagman_image_path , ""%s\\\\%s"" , bin_path , dagman_exe )"		3521095	0					
ANR	3521396	Callee	sprintf		3521095	0					
ANR	3521397	Identifier	sprintf		3521095	0					
ANR	3521398	ArgumentList	dagman_image_path		3521095	1					
ANR	3521399	Argument	dagman_image_path		3521095	0					
ANR	3521400	Identifier	dagman_image_path		3521095	0					
ANR	3521401	Argument	"""%s\\\\%s"""		3521095	1					
ANR	3521402	PrimaryExpression	"""%s\\\\%s"""		3521095	0					
ANR	3521403	Argument	bin_path		3521095	2					
ANR	3521404	Identifier	bin_path		3521095	0					
ANR	3521405	Argument	dagman_exe		3521095	3					
ANR	3521406	Identifier	dagman_exe		3521095	0					
ANR	3521407	ExpressionStatement	free ( bin_path )	1440:2:39177:39194	3521095	2	True				
ANR	3521408	CallExpression	free ( bin_path )		3521095	0					
ANR	3521409	Callee	free		3521095	0					
ANR	3521410	Identifier	free		3521095	0					
ANR	3521411	ArgumentList	bin_path		3521095	1					
ANR	3521412	Argument	bin_path		3521095	0					
ANR	3521413	Identifier	bin_path		3521095	0					
ANR	3521414	IfStatement	if ( ! wfh . addTrusted ( master_image_path ) )		3521095	25					
ANR	3521415	Condition	! wfh . addTrusted ( master_image_path )	1444:6:39228:39261	3521095	0	True				
ANR	3521416	UnaryOperationExpression	! wfh . addTrusted ( master_image_path )		3521095	0					
ANR	3521417	UnaryOperator	!		3521095	0					
ANR	3521418	CallExpression	wfh . addTrusted ( master_image_path )		3521095	1					
ANR	3521419	Callee	wfh . addTrusted		3521095	0					
ANR	3521420	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521421	Identifier	wfh		3521095	0					
ANR	3521422	Identifier	addTrusted		3521095	1					
ANR	3521423	ArgumentList	master_image_path		3521095	1					
ANR	3521424	Argument	master_image_path		3521095	0					
ANR	3521425	Identifier	master_image_path		3521095	0					
ANR	3521426	CompoundStatement		76:43:2554:2554	3521095	1					
ANR	3521427	Statement	dprintf	1445:2:39269:39275	3521095	0	True				
ANR	3521428	Statement	(	1445:9:39276:39276	3521095	1	True				
ANR	3521429	Statement	D_FULLDEBUG	1445:10:39277:39287	3521095	2	True				
ANR	3521430	Statement	","	1445:21:39288:39288	3521095	3	True				
ANR	3521431	Statement	"""WinFirewall: unable to add %s to the """	1445:23:39290:39328	3521095	4	True				
ANR	3521432	Statement	"""windows firewall exception list.\\n"""	1446:4:39334:39369	3521095	5	True				
ANR	3521433	Statement	","	1446:40:39370:39370	3521095	6	True				
ANR	3521434	Statement	master_image_path	1447:4:39376:39392	3521095	7	True				
ANR	3521435	Statement	)	1447:21:39393:39393	3521095	8	True				
ANR	3521436	ExpressionStatement		1447:22:39394:39394	3521095	9	True				
ANR	3521437	IfStatement	"if ( ( daemons . FindDaemon ( ""NEGOTIATOR"" ) != NULL ) && negotiator_image_path )"		3521095	26					
ANR	3521438	Condition	"( daemons . FindDaemon ( ""NEGOTIATOR"" ) != NULL ) && negotiator_image_path"	1451:6:39453:39519	3521095	0	True				
ANR	3521439	AndExpression	"( daemons . FindDaemon ( ""NEGOTIATOR"" ) != NULL ) && negotiator_image_path"		3521095	0		&&			
ANR	3521440	EqualityExpression	"daemons . FindDaemon ( ""NEGOTIATOR"" ) != NULL"		3521095	0		!=			
ANR	3521441	CallExpression	"daemons . FindDaemon ( ""NEGOTIATOR"" )"		3521095	0					
ANR	3521442	Callee	daemons . FindDaemon		3521095	0					
ANR	3521443	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521444	Identifier	daemons		3521095	0					
ANR	3521445	Identifier	FindDaemon		3521095	1					
ANR	3521446	ArgumentList	"""NEGOTIATOR"""		3521095	1					
ANR	3521447	Argument	"""NEGOTIATOR"""		3521095	0					
ANR	3521448	PrimaryExpression	"""NEGOTIATOR"""		3521095	0					
ANR	3521449	Identifier	NULL		3521095	1					
ANR	3521450	Identifier	negotiator_image_path		3521095	1					
ANR	3521451	CompoundStatement		83:76:2812:2812	3521095	1					
ANR	3521452	IfStatement	if ( ! wfh . addTrusted ( negotiator_image_path ) )		3521095	0					
ANR	3521453	Condition	! wfh . addTrusted ( negotiator_image_path )	1452:7:39532:39569	3521095	0	True				
ANR	3521454	UnaryOperationExpression	! wfh . addTrusted ( negotiator_image_path )		3521095	0					
ANR	3521455	UnaryOperator	!		3521095	0					
ANR	3521456	CallExpression	wfh . addTrusted ( negotiator_image_path )		3521095	1					
ANR	3521457	Callee	wfh . addTrusted		3521095	0					
ANR	3521458	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521459	Identifier	wfh		3521095	0					
ANR	3521460	Identifier	addTrusted		3521095	1					
ANR	3521461	ArgumentList	negotiator_image_path		3521095	1					
ANR	3521462	Argument	negotiator_image_path		3521095	0					
ANR	3521463	Identifier	negotiator_image_path		3521095	0					
ANR	3521464	CompoundStatement		84:48:2862:2862	3521095	1					
ANR	3521465	Statement	dprintf	1453:3:39578:39584	3521095	0	True				
ANR	3521466	Statement	(	1453:10:39585:39585	3521095	1	True				
ANR	3521467	Statement	D_FULLDEBUG	1453:11:39586:39596	3521095	2	True				
ANR	3521468	Statement	","	1453:22:39597:39597	3521095	3	True				
ANR	3521469	Statement	"""WinFirewall: unable to add %s to the """	1453:24:39599:39637	3521095	4	True				
ANR	3521470	Statement	"""windows firewall exception list.\\n"""	1454:4:39643:39678	3521095	5	True				
ANR	3521471	Statement	","	1454:40:39679:39679	3521095	6	True				
ANR	3521472	Statement	negotiator_image_path	1455:4:39685:39705	3521095	7	True				
ANR	3521473	Statement	)	1455:25:39706:39706	3521095	8	True				
ANR	3521474	ExpressionStatement		1455:26:39707:39707	3521095	9	True				
ANR	3521475	IfStatement	"if ( ( daemons . FindDaemon ( ""COLLECTOR"" ) != NULL ) && collector_image_path )"		3521095	27					
ANR	3521476	Condition	"( daemons . FindDaemon ( ""COLLECTOR"" ) != NULL ) && collector_image_path"	1458:6:39722:39786	3521095	0	True				
ANR	3521477	AndExpression	"( daemons . FindDaemon ( ""COLLECTOR"" ) != NULL ) && collector_image_path"		3521095	0		&&			
ANR	3521478	EqualityExpression	"daemons . FindDaemon ( ""COLLECTOR"" ) != NULL"		3521095	0		!=			
ANR	3521479	CallExpression	"daemons . FindDaemon ( ""COLLECTOR"" )"		3521095	0					
ANR	3521480	Callee	daemons . FindDaemon		3521095	0					
ANR	3521481	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521482	Identifier	daemons		3521095	0					
ANR	3521483	Identifier	FindDaemon		3521095	1					
ANR	3521484	ArgumentList	"""COLLECTOR"""		3521095	1					
ANR	3521485	Argument	"""COLLECTOR"""		3521095	0					
ANR	3521486	PrimaryExpression	"""COLLECTOR"""		3521095	0					
ANR	3521487	Identifier	NULL		3521095	1					
ANR	3521488	Identifier	collector_image_path		3521095	1					
ANR	3521489	CompoundStatement		90:74:3079:3079	3521095	1					
ANR	3521490	IfStatement	if ( ! wfh . addTrusted ( collector_image_path ) )		3521095	0					
ANR	3521491	Condition	! wfh . addTrusted ( collector_image_path )	1459:7:39799:39835	3521095	0	True				
ANR	3521492	UnaryOperationExpression	! wfh . addTrusted ( collector_image_path )		3521095	0					
ANR	3521493	UnaryOperator	!		3521095	0					
ANR	3521494	CallExpression	wfh . addTrusted ( collector_image_path )		3521095	1					
ANR	3521495	Callee	wfh . addTrusted		3521095	0					
ANR	3521496	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521497	Identifier	wfh		3521095	0					
ANR	3521498	Identifier	addTrusted		3521095	1					
ANR	3521499	ArgumentList	collector_image_path		3521095	1					
ANR	3521500	Argument	collector_image_path		3521095	0					
ANR	3521501	Identifier	collector_image_path		3521095	0					
ANR	3521502	CompoundStatement		91:47:3128:3128	3521095	1					
ANR	3521503	Statement	dprintf	1460:3:39844:39850	3521095	0	True				
ANR	3521504	Statement	(	1460:10:39851:39851	3521095	1	True				
ANR	3521505	Statement	D_FULLDEBUG	1460:11:39852:39862	3521095	2	True				
ANR	3521506	Statement	","	1460:22:39863:39863	3521095	3	True				
ANR	3521507	Statement	"""WinFirewall: unable to add %s to the """	1460:24:39865:39903	3521095	4	True				
ANR	3521508	Statement	"""windows firewall exception list.\\n"""	1461:4:39909:39944	3521095	5	True				
ANR	3521509	Statement	","	1461:40:39945:39945	3521095	6	True				
ANR	3521510	Statement	collector_image_path	1462:4:39951:39970	3521095	7	True				
ANR	3521511	Statement	)	1462:24:39971:39971	3521095	8	True				
ANR	3521512	ExpressionStatement		1462:25:39972:39972	3521095	9	True				
ANR	3521513	IfStatement	"if ( ( daemons . FindDaemon ( ""SCHEDD"" ) != NULL ) && schedd_image_path )"		3521095	28					
ANR	3521514	Condition	"( daemons . FindDaemon ( ""SCHEDD"" ) != NULL ) && schedd_image_path"	1467:6:40031:40089	3521095	0	True				
ANR	3521515	AndExpression	"( daemons . FindDaemon ( ""SCHEDD"" ) != NULL ) && schedd_image_path"		3521095	0		&&			
ANR	3521516	EqualityExpression	"daemons . FindDaemon ( ""SCHEDD"" ) != NULL"		3521095	0		!=			
ANR	3521517	CallExpression	"daemons . FindDaemon ( ""SCHEDD"" )"		3521095	0					
ANR	3521518	Callee	daemons . FindDaemon		3521095	0					
ANR	3521519	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521520	Identifier	daemons		3521095	0					
ANR	3521521	Identifier	FindDaemon		3521095	1					
ANR	3521522	ArgumentList	"""SCHEDD"""		3521095	1					
ANR	3521523	Argument	"""SCHEDD"""		3521095	0					
ANR	3521524	PrimaryExpression	"""SCHEDD"""		3521095	0					
ANR	3521525	Identifier	NULL		3521095	1					
ANR	3521526	Identifier	schedd_image_path		3521095	1					
ANR	3521527	CompoundStatement		99:68:3382:3382	3521095	1					
ANR	3521528	IfStatement	if ( ! wfh . addTrusted ( schedd_image_path ) )		3521095	0					
ANR	3521529	Condition	! wfh . addTrusted ( schedd_image_path )	1469:7:40121:40154	3521095	0	True				
ANR	3521530	UnaryOperationExpression	! wfh . addTrusted ( schedd_image_path )		3521095	0					
ANR	3521531	UnaryOperator	!		3521095	0					
ANR	3521532	CallExpression	wfh . addTrusted ( schedd_image_path )		3521095	1					
ANR	3521533	Callee	wfh . addTrusted		3521095	0					
ANR	3521534	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521535	Identifier	wfh		3521095	0					
ANR	3521536	Identifier	addTrusted		3521095	1					
ANR	3521537	ArgumentList	schedd_image_path		3521095	1					
ANR	3521538	Argument	schedd_image_path		3521095	0					
ANR	3521539	Identifier	schedd_image_path		3521095	0					
ANR	3521540	CompoundStatement		101:44:3447:3447	3521095	1					
ANR	3521541	Statement	dprintf	1470:3:40163:40169	3521095	0	True				
ANR	3521542	Statement	(	1470:10:40170:40170	3521095	1	True				
ANR	3521543	Statement	D_FULLDEBUG	1470:11:40171:40181	3521095	2	True				
ANR	3521544	Statement	","	1470:22:40182:40182	3521095	3	True				
ANR	3521545	Statement	"""WinFirewall: unable to add %s to the """	1470:24:40184:40222	3521095	4	True				
ANR	3521546	Statement	"""windows firewall exception list.\\n"""	1471:4:40228:40263	3521095	5	True				
ANR	3521547	Statement	","	1471:40:40264:40264	3521095	6	True				
ANR	3521548	Statement	schedd_image_path	1472:4:40270:40286	3521095	7	True				
ANR	3521549	Statement	)	1472:21:40287:40287	3521095	8	True				
ANR	3521550	ExpressionStatement		1472:22:40288:40288	3521095	9	True				
ANR	3521551	IfStatement	if ( shadow_image_path && ! wfh . addTrusted ( shadow_image_path ) )		3521095	1					
ANR	3521552	Condition	shadow_image_path && ! wfh . addTrusted ( shadow_image_path )	1475:7:40320:40374	3521095	0	True				
ANR	3521553	AndExpression	shadow_image_path && ! wfh . addTrusted ( shadow_image_path )		3521095	0		&&			
ANR	3521554	Identifier	shadow_image_path		3521095	0					
ANR	3521555	UnaryOperationExpression	! wfh . addTrusted ( shadow_image_path )		3521095	1					
ANR	3521556	UnaryOperator	!		3521095	0					
ANR	3521557	CallExpression	wfh . addTrusted ( shadow_image_path )		3521095	1					
ANR	3521558	Callee	wfh . addTrusted		3521095	0					
ANR	3521559	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521560	Identifier	wfh		3521095	0					
ANR	3521561	Identifier	addTrusted		3521095	1					
ANR	3521562	ArgumentList	shadow_image_path		3521095	1					
ANR	3521563	Argument	shadow_image_path		3521095	0					
ANR	3521564	Identifier	shadow_image_path		3521095	0					
ANR	3521565	CompoundStatement		107:65:3667:3667	3521095	1					
ANR	3521566	Statement	dprintf	1476:3:40383:40389	3521095	0	True				
ANR	3521567	Statement	(	1476:10:40390:40390	3521095	1	True				
ANR	3521568	Statement	D_FULLDEBUG	1476:11:40391:40401	3521095	2	True				
ANR	3521569	Statement	","	1476:22:40402:40402	3521095	3	True				
ANR	3521570	Statement	"""WinFirewall: unable to add %s to the """	1476:24:40404:40442	3521095	4	True				
ANR	3521571	Statement	"""windows firewall exception list.\\n"""	1477:4:40448:40483	3521095	5	True				
ANR	3521572	Statement	","	1477:40:40484:40484	3521095	6	True				
ANR	3521573	Statement	shadow_image_path	1478:4:40490:40506	3521095	7	True				
ANR	3521574	Statement	)	1478:21:40507:40507	3521095	8	True				
ANR	3521575	ExpressionStatement		1478:22:40508:40508	3521095	9	True				
ANR	3521576	IfStatement	if ( gridmanager_image_path && ! wfh . addTrusted ( gridmanager_image_path ) )		3521095	2					
ANR	3521577	Condition	gridmanager_image_path && ! wfh . addTrusted ( gridmanager_image_path )	1481:7:40545:40609	3521095	0	True				
ANR	3521578	AndExpression	gridmanager_image_path && ! wfh . addTrusted ( gridmanager_image_path )		3521095	0		&&			
ANR	3521579	Identifier	gridmanager_image_path		3521095	0					
ANR	3521580	UnaryOperationExpression	! wfh . addTrusted ( gridmanager_image_path )		3521095	1					
ANR	3521581	UnaryOperator	!		3521095	0					
ANR	3521582	CallExpression	wfh . addTrusted ( gridmanager_image_path )		3521095	1					
ANR	3521583	Callee	wfh . addTrusted		3521095	0					
ANR	3521584	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521585	Identifier	wfh		3521095	0					
ANR	3521586	Identifier	addTrusted		3521095	1					
ANR	3521587	ArgumentList	gridmanager_image_path		3521095	1					
ANR	3521588	Argument	gridmanager_image_path		3521095	0					
ANR	3521589	Identifier	gridmanager_image_path		3521095	0					
ANR	3521590	CompoundStatement		113:75:3902:3902	3521095	1					
ANR	3521591	Statement	dprintf	1482:3:40618:40624	3521095	0	True				
ANR	3521592	Statement	(	1482:10:40625:40625	3521095	1	True				
ANR	3521593	Statement	D_FULLDEBUG	1482:11:40626:40636	3521095	2	True				
ANR	3521594	Statement	","	1482:22:40637:40637	3521095	3	True				
ANR	3521595	Statement	"""WinFirewall: unable to add %s to the """	1482:24:40639:40677	3521095	4	True				
ANR	3521596	Statement	"""windows firewall exception list.\\n"""	1483:4:40683:40718	3521095	5	True				
ANR	3521597	Statement	","	1483:40:40719:40719	3521095	6	True				
ANR	3521598	Statement	gridmanager_image_path	1484:4:40725:40746	3521095	7	True				
ANR	3521599	Statement	)	1484:26:40747:40747	3521095	8	True				
ANR	3521600	ExpressionStatement		1484:27:40748:40748	3521095	9	True				
ANR	3521601	IfStatement	if ( gahp_image_path && ! wfh . addTrusted ( gahp_image_path ) )		3521095	3					
ANR	3521602	Condition	gahp_image_path && ! wfh . addTrusted ( gahp_image_path )	1487:7:40785:40835	3521095	0	True				
ANR	3521603	AndExpression	gahp_image_path && ! wfh . addTrusted ( gahp_image_path )		3521095	0		&&			
ANR	3521604	Identifier	gahp_image_path		3521095	0					
ANR	3521605	UnaryOperationExpression	! wfh . addTrusted ( gahp_image_path )		3521095	1					
ANR	3521606	UnaryOperator	!		3521095	0					
ANR	3521607	CallExpression	wfh . addTrusted ( gahp_image_path )		3521095	1					
ANR	3521608	Callee	wfh . addTrusted		3521095	0					
ANR	3521609	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521610	Identifier	wfh		3521095	0					
ANR	3521611	Identifier	addTrusted		3521095	1					
ANR	3521612	ArgumentList	gahp_image_path		3521095	1					
ANR	3521613	Argument	gahp_image_path		3521095	0					
ANR	3521614	Identifier	gahp_image_path		3521095	0					
ANR	3521615	CompoundStatement		119:61:4128:4128	3521095	1					
ANR	3521616	Statement	dprintf	1488:3:40844:40850	3521095	0	True				
ANR	3521617	Statement	(	1488:10:40851:40851	3521095	1	True				
ANR	3521618	Statement	D_FULLDEBUG	1488:11:40852:40862	3521095	2	True				
ANR	3521619	Statement	","	1488:22:40863:40863	3521095	3	True				
ANR	3521620	Statement	"""WinFirewall: unable to add %s to the """	1488:24:40865:40903	3521095	4	True				
ANR	3521621	Statement	"""windows firewall exception list.\\n"""	1489:4:40909:40944	3521095	5	True				
ANR	3521622	Statement	","	1489:40:40945:40945	3521095	6	True				
ANR	3521623	Statement	gahp_image_path	1490:4:40951:40965	3521095	7	True				
ANR	3521624	Statement	)	1490:19:40966:40966	3521095	8	True				
ANR	3521625	ExpressionStatement		1490:20:40967:40967	3521095	9	True				
ANR	3521626	IfStatement	if ( gahp_worker_image_path && ! wfh . addTrusted ( gahp_worker_image_path ) )		3521095	4					
ANR	3521627	Condition	gahp_worker_image_path && ! wfh . addTrusted ( gahp_worker_image_path )	1493:7:41011:41075	3521095	0	True				
ANR	3521628	AndExpression	gahp_worker_image_path && ! wfh . addTrusted ( gahp_worker_image_path )		3521095	0		&&			
ANR	3521629	Identifier	gahp_worker_image_path		3521095	0					
ANR	3521630	UnaryOperationExpression	! wfh . addTrusted ( gahp_worker_image_path )		3521095	1					
ANR	3521631	UnaryOperator	!		3521095	0					
ANR	3521632	CallExpression	wfh . addTrusted ( gahp_worker_image_path )		3521095	1					
ANR	3521633	Callee	wfh . addTrusted		3521095	0					
ANR	3521634	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521635	Identifier	wfh		3521095	0					
ANR	3521636	Identifier	addTrusted		3521095	1					
ANR	3521637	ArgumentList	gahp_worker_image_path		3521095	1					
ANR	3521638	Argument	gahp_worker_image_path		3521095	0					
ANR	3521639	Identifier	gahp_worker_image_path		3521095	0					
ANR	3521640	CompoundStatement		125:75:4368:4368	3521095	1					
ANR	3521641	Statement	dprintf	1494:3:41084:41090	3521095	0	True				
ANR	3521642	Statement	(	1494:10:41091:41091	3521095	1	True				
ANR	3521643	Statement	D_FULLDEBUG	1494:11:41092:41102	3521095	2	True				
ANR	3521644	Statement	","	1494:22:41103:41103	3521095	3	True				
ANR	3521645	Statement	"""WinFirewall: unable to add %s to the """	1494:24:41105:41143	3521095	4	True				
ANR	3521646	Statement	"""windows firewall exception list.\\n"""	1495:4:41149:41184	3521095	5	True				
ANR	3521647	Statement	","	1495:40:41185:41185	3521095	6	True				
ANR	3521648	Statement	gahp_worker_image_path	1496:4:41191:41212	3521095	7	True				
ANR	3521649	Statement	)	1496:26:41213:41213	3521095	8	True				
ANR	3521650	ExpressionStatement		1496:27:41214:41214	3521095	9	True				
ANR	3521651	IfStatement	"if ( ( daemons . FindDaemon ( ""STARTD"" ) != NULL ) && startd_image_path )"		3521095	29					
ANR	3521652	Condition	"( daemons . FindDaemon ( ""STARTD"" ) != NULL ) && startd_image_path"	1504:6:41431:41489	3521095	0	True				
ANR	3521653	AndExpression	"( daemons . FindDaemon ( ""STARTD"" ) != NULL ) && startd_image_path"		3521095	0		&&			
ANR	3521654	EqualityExpression	"daemons . FindDaemon ( ""STARTD"" ) != NULL"		3521095	0		!=			
ANR	3521655	CallExpression	"daemons . FindDaemon ( ""STARTD"" )"		3521095	0					
ANR	3521656	Callee	daemons . FindDaemon		3521095	0					
ANR	3521657	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521658	Identifier	daemons		3521095	0					
ANR	3521659	Identifier	FindDaemon		3521095	1					
ANR	3521660	ArgumentList	"""STARTD"""		3521095	1					
ANR	3521661	Argument	"""STARTD"""		3521095	0					
ANR	3521662	PrimaryExpression	"""STARTD"""		3521095	0					
ANR	3521663	Identifier	NULL		3521095	1					
ANR	3521664	Identifier	startd_image_path		3521095	1					
ANR	3521665	CompoundStatement		136:68:4782:4782	3521095	1					
ANR	3521666	IfStatement	if ( ! wfh . addTrusted ( startd_image_path ) )		3521095	0					
ANR	3521667	Condition	! wfh . addTrusted ( startd_image_path )	1505:7:41502:41535	3521095	0	True				
ANR	3521668	UnaryOperationExpression	! wfh . addTrusted ( startd_image_path )		3521095	0					
ANR	3521669	UnaryOperator	!		3521095	0					
ANR	3521670	CallExpression	wfh . addTrusted ( startd_image_path )		3521095	1					
ANR	3521671	Callee	wfh . addTrusted		3521095	0					
ANR	3521672	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521673	Identifier	wfh		3521095	0					
ANR	3521674	Identifier	addTrusted		3521095	1					
ANR	3521675	ArgumentList	startd_image_path		3521095	1					
ANR	3521676	Argument	startd_image_path		3521095	0					
ANR	3521677	Identifier	startd_image_path		3521095	0					
ANR	3521678	CompoundStatement		137:44:4828:4828	3521095	1					
ANR	3521679	Statement	dprintf	1506:3:41544:41550	3521095	0	True				
ANR	3521680	Statement	(	1506:10:41551:41551	3521095	1	True				
ANR	3521681	Statement	D_FULLDEBUG	1506:11:41552:41562	3521095	2	True				
ANR	3521682	Statement	","	1506:22:41563:41563	3521095	3	True				
ANR	3521683	Statement	"""WinFirewall: unable to add %s to the """	1506:24:41565:41603	3521095	4	True				
ANR	3521684	Statement	"""windows firewall exception list.\\n"""	1507:4:41609:41644	3521095	5	True				
ANR	3521685	Statement	","	1507:40:41645:41645	3521095	6	True				
ANR	3521686	Statement	startd_image_path	1508:4:41651:41667	3521095	7	True				
ANR	3521687	Statement	)	1508:21:41668:41668	3521095	8	True				
ANR	3521688	ExpressionStatement		1508:22:41669:41669	3521095	9	True				
ANR	3521689	IfStatement	if ( ! wfh . addTrusted ( kbdd_image_path ) )		3521095	1					
ANR	3521690	Condition	! wfh . addTrusted ( kbdd_image_path )	1510:7:41682:41713	3521095	0	True				
ANR	3521691	UnaryOperationExpression	! wfh . addTrusted ( kbdd_image_path )		3521095	0					
ANR	3521692	UnaryOperator	!		3521095	0					
ANR	3521693	CallExpression	wfh . addTrusted ( kbdd_image_path )		3521095	1					
ANR	3521694	Callee	wfh . addTrusted		3521095	0					
ANR	3521695	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521696	Identifier	wfh		3521095	0					
ANR	3521697	Identifier	addTrusted		3521095	1					
ANR	3521698	ArgumentList	kbdd_image_path		3521095	1					
ANR	3521699	Argument	kbdd_image_path		3521095	0					
ANR	3521700	Identifier	kbdd_image_path		3521095	0					
ANR	3521701	CompoundStatement		142:42:5006:5006	3521095	1					
ANR	3521702	Statement	dprintf	1511:3:41722:41728	3521095	0	True				
ANR	3521703	Statement	(	1511:10:41729:41729	3521095	1	True				
ANR	3521704	Statement	D_FULLDEBUG	1511:11:41730:41740	3521095	2	True				
ANR	3521705	Statement	","	1511:22:41741:41741	3521095	3	True				
ANR	3521706	Statement	"""WinFirewall: unable to add %s to the """	1511:24:41743:41781	3521095	4	True				
ANR	3521707	Statement	"""windows firewall exception list.\\n"""	1512:4:41787:41822	3521095	5	True				
ANR	3521708	Statement	","	1512:40:41823:41823	3521095	6	True				
ANR	3521709	Statement	kbdd_image_path	1513:4:41829:41843	3521095	7	True				
ANR	3521710	Statement	)	1513:19:41844:41844	3521095	8	True				
ANR	3521711	ExpressionStatement		1513:20:41845:41845	3521095	9	True				
ANR	3521712	IfStatement	"if ( ( daemons . FindDaemon ( ""QUILL"" ) != NULL ) && quill_image_path )"		3521095	30					
ANR	3521713	Condition	"( daemons . FindDaemon ( ""QUILL"" ) != NULL ) && quill_image_path"	1517:6:41861:41917	3521095	0	True				
ANR	3521714	AndExpression	"( daemons . FindDaemon ( ""QUILL"" ) != NULL ) && quill_image_path"		3521095	0		&&			
ANR	3521715	EqualityExpression	"daemons . FindDaemon ( ""QUILL"" ) != NULL"		3521095	0		!=			
ANR	3521716	CallExpression	"daemons . FindDaemon ( ""QUILL"" )"		3521095	0					
ANR	3521717	Callee	daemons . FindDaemon		3521095	0					
ANR	3521718	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521719	Identifier	daemons		3521095	0					
ANR	3521720	Identifier	FindDaemon		3521095	1					
ANR	3521721	ArgumentList	"""QUILL"""		3521095	1					
ANR	3521722	Argument	"""QUILL"""		3521095	0					
ANR	3521723	PrimaryExpression	"""QUILL"""		3521095	0					
ANR	3521724	Identifier	NULL		3521095	1					
ANR	3521725	Identifier	quill_image_path		3521095	1					
ANR	3521726	CompoundStatement		149:66:5210:5210	3521095	1					
ANR	3521727	IfStatement	if ( ! wfh . addTrusted ( quill_image_path ) )		3521095	0					
ANR	3521728	Condition	! wfh . addTrusted ( quill_image_path )	1518:7:41930:41962	3521095	0	True				
ANR	3521729	UnaryOperationExpression	! wfh . addTrusted ( quill_image_path )		3521095	0					
ANR	3521730	UnaryOperator	!		3521095	0					
ANR	3521731	CallExpression	wfh . addTrusted ( quill_image_path )		3521095	1					
ANR	3521732	Callee	wfh . addTrusted		3521095	0					
ANR	3521733	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521734	Identifier	wfh		3521095	0					
ANR	3521735	Identifier	addTrusted		3521095	1					
ANR	3521736	ArgumentList	quill_image_path		3521095	1					
ANR	3521737	Argument	quill_image_path		3521095	0					
ANR	3521738	Identifier	quill_image_path		3521095	0					
ANR	3521739	CompoundStatement		150:43:5255:5255	3521095	1					
ANR	3521740	Statement	dprintf	1519:3:41971:41977	3521095	0	True				
ANR	3521741	Statement	(	1519:10:41978:41978	3521095	1	True				
ANR	3521742	Statement	D_FULLDEBUG	1519:11:41979:41989	3521095	2	True				
ANR	3521743	Statement	","	1519:22:41990:41990	3521095	3	True				
ANR	3521744	Statement	"""WinFirewall: unable to add %s to the """	1519:24:41992:42030	3521095	4	True				
ANR	3521745	Statement	"""windows firewall exception list.\\n"""	1520:4:42036:42071	3521095	5	True				
ANR	3521746	Statement	","	1520:40:42072:42072	3521095	6	True				
ANR	3521747	Statement	quill_image_path	1521:4:42078:42093	3521095	7	True				
ANR	3521748	Statement	)	1521:20:42094:42094	3521095	8	True				
ANR	3521749	ExpressionStatement		1521:21:42095:42095	3521095	9	True				
ANR	3521750	IfStatement	"if ( ( daemons . FindDaemon ( ""DBMSD"" ) != NULL ) && dbmsd_image_path )"		3521095	31					
ANR	3521751	Condition	"( daemons . FindDaemon ( ""DBMSD"" ) != NULL ) && dbmsd_image_path"	1525:6:42111:42167	3521095	0	True				
ANR	3521752	AndExpression	"( daemons . FindDaemon ( ""DBMSD"" ) != NULL ) && dbmsd_image_path"		3521095	0		&&			
ANR	3521753	EqualityExpression	"daemons . FindDaemon ( ""DBMSD"" ) != NULL"		3521095	0		!=			
ANR	3521754	CallExpression	"daemons . FindDaemon ( ""DBMSD"" )"		3521095	0					
ANR	3521755	Callee	daemons . FindDaemon		3521095	0					
ANR	3521756	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521757	Identifier	daemons		3521095	0					
ANR	3521758	Identifier	FindDaemon		3521095	1					
ANR	3521759	ArgumentList	"""DBMSD"""		3521095	1					
ANR	3521760	Argument	"""DBMSD"""		3521095	0					
ANR	3521761	PrimaryExpression	"""DBMSD"""		3521095	0					
ANR	3521762	Identifier	NULL		3521095	1					
ANR	3521763	Identifier	dbmsd_image_path		3521095	1					
ANR	3521764	CompoundStatement		157:66:5460:5460	3521095	1					
ANR	3521765	IfStatement	if ( ! wfh . addTrusted ( dbmsd_image_path ) )		3521095	0					
ANR	3521766	Condition	! wfh . addTrusted ( dbmsd_image_path )	1526:7:42180:42212	3521095	0	True				
ANR	3521767	UnaryOperationExpression	! wfh . addTrusted ( dbmsd_image_path )		3521095	0					
ANR	3521768	UnaryOperator	!		3521095	0					
ANR	3521769	CallExpression	wfh . addTrusted ( dbmsd_image_path )		3521095	1					
ANR	3521770	Callee	wfh . addTrusted		3521095	0					
ANR	3521771	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521772	Identifier	wfh		3521095	0					
ANR	3521773	Identifier	addTrusted		3521095	1					
ANR	3521774	ArgumentList	dbmsd_image_path		3521095	1					
ANR	3521775	Argument	dbmsd_image_path		3521095	0					
ANR	3521776	Identifier	dbmsd_image_path		3521095	0					
ANR	3521777	CompoundStatement		158:43:5505:5505	3521095	1					
ANR	3521778	Statement	dprintf	1527:3:42221:42227	3521095	0	True				
ANR	3521779	Statement	(	1527:10:42228:42228	3521095	1	True				
ANR	3521780	Statement	D_FULLDEBUG	1527:11:42229:42239	3521095	2	True				
ANR	3521781	Statement	","	1527:22:42240:42240	3521095	3	True				
ANR	3521782	Statement	"""WinFirewall: unable to add %s to the """	1527:24:42242:42280	3521095	4	True				
ANR	3521783	Statement	"""windows firewall exception list.\\n"""	1528:4:42286:42321	3521095	5	True				
ANR	3521784	Statement	","	1528:40:42322:42322	3521095	6	True				
ANR	3521785	Statement	dbmsd_image_path	1529:4:42328:42343	3521095	7	True				
ANR	3521786	Statement	)	1529:20:42344:42344	3521095	8	True				
ANR	3521787	ExpressionStatement		1529:21:42345:42345	3521095	9	True				
ANR	3521788	IfStatement	if ( starter_image_path )		3521095	32					
ANR	3521789	Condition	starter_image_path	1533:6:42361:42378	3521095	0	True				
ANR	3521790	Identifier	starter_image_path		3521095	0					
ANR	3521791	CompoundStatement		165:27:5671:5671	3521095	1					
ANR	3521792	IfStatement	if ( ! wfh . addTrusted ( starter_image_path ) )		3521095	0					
ANR	3521793	Condition	! wfh . addTrusted ( starter_image_path )	1534:7:42391:42425	3521095	0	True				
ANR	3521794	UnaryOperationExpression	! wfh . addTrusted ( starter_image_path )		3521095	0					
ANR	3521795	UnaryOperator	!		3521095	0					
ANR	3521796	CallExpression	wfh . addTrusted ( starter_image_path )		3521095	1					
ANR	3521797	Callee	wfh . addTrusted		3521095	0					
ANR	3521798	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521799	Identifier	wfh		3521095	0					
ANR	3521800	Identifier	addTrusted		3521095	1					
ANR	3521801	ArgumentList	starter_image_path		3521095	1					
ANR	3521802	Argument	starter_image_path		3521095	0					
ANR	3521803	Identifier	starter_image_path		3521095	0					
ANR	3521804	CompoundStatement		166:45:5718:5718	3521095	1					
ANR	3521805	Statement	dprintf	1535:3:42434:42440	3521095	0	True				
ANR	3521806	Statement	(	1535:10:42441:42441	3521095	1	True				
ANR	3521807	Statement	D_FULLDEBUG	1535:11:42442:42452	3521095	2	True				
ANR	3521808	Statement	","	1535:22:42453:42453	3521095	3	True				
ANR	3521809	Statement	"""WinFirewall: unable to add %s to the """	1535:24:42455:42493	3521095	4	True				
ANR	3521810	Statement	"""windows firewall exception list.\\n"""	1536:4:42499:42534	3521095	5	True				
ANR	3521811	Statement	","	1536:40:42535:42535	3521095	6	True				
ANR	3521812	Statement	starter_image_path	1537:4:42541:42558	3521095	7	True				
ANR	3521813	Statement	)	1537:22:42559:42559	3521095	8	True				
ANR	3521814	ExpressionStatement		1537:23:42560:42560	3521095	9	True				
ANR	3521815	IfStatement	"if ( ( daemons . FindDaemon ( ""CREDD"" ) != NULL ) && credd_image_path )"		3521095	33					
ANR	3521816	Condition	"( daemons . FindDaemon ( ""CREDD"" ) != NULL ) && credd_image_path"	1541:6:42576:42632	3521095	0	True				
ANR	3521817	AndExpression	"( daemons . FindDaemon ( ""CREDD"" ) != NULL ) && credd_image_path"		3521095	0		&&			
ANR	3521818	EqualityExpression	"daemons . FindDaemon ( ""CREDD"" ) != NULL"		3521095	0		!=			
ANR	3521819	CallExpression	"daemons . FindDaemon ( ""CREDD"" )"		3521095	0					
ANR	3521820	Callee	daemons . FindDaemon		3521095	0					
ANR	3521821	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521822	Identifier	daemons		3521095	0					
ANR	3521823	Identifier	FindDaemon		3521095	1					
ANR	3521824	ArgumentList	"""CREDD"""		3521095	1					
ANR	3521825	Argument	"""CREDD"""		3521095	0					
ANR	3521826	PrimaryExpression	"""CREDD"""		3521095	0					
ANR	3521827	Identifier	NULL		3521095	1					
ANR	3521828	Identifier	credd_image_path		3521095	1					
ANR	3521829	CompoundStatement		173:66:5925:5925	3521095	1					
ANR	3521830	IfStatement	if ( ! wfh . addTrusted ( credd_image_path ) )		3521095	0					
ANR	3521831	Condition	! wfh . addTrusted ( credd_image_path )	1542:7:42645:42677	3521095	0	True				
ANR	3521832	UnaryOperationExpression	! wfh . addTrusted ( credd_image_path )		3521095	0					
ANR	3521833	UnaryOperator	!		3521095	0					
ANR	3521834	CallExpression	wfh . addTrusted ( credd_image_path )		3521095	1					
ANR	3521835	Callee	wfh . addTrusted		3521095	0					
ANR	3521836	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521837	Identifier	wfh		3521095	0					
ANR	3521838	Identifier	addTrusted		3521095	1					
ANR	3521839	ArgumentList	credd_image_path		3521095	1					
ANR	3521840	Argument	credd_image_path		3521095	0					
ANR	3521841	Identifier	credd_image_path		3521095	0					
ANR	3521842	CompoundStatement		174:43:5970:5970	3521095	1					
ANR	3521843	Statement	dprintf	1543:3:42686:42692	3521095	0	True				
ANR	3521844	Statement	(	1543:10:42693:42693	3521095	1	True				
ANR	3521845	Statement	D_FULLDEBUG	1543:11:42694:42704	3521095	2	True				
ANR	3521846	Statement	","	1543:22:42705:42705	3521095	3	True				
ANR	3521847	Statement	"""WinFirewall: unable to add %s to the """	1543:24:42707:42745	3521095	4	True				
ANR	3521848	Statement	"""windows firewall exception list.\\n"""	1544:4:42751:42786	3521095	5	True				
ANR	3521849	Statement	","	1544:40:42787:42787	3521095	6	True				
ANR	3521850	Statement	credd_image_path	1545:4:42793:42808	3521095	7	True				
ANR	3521851	Statement	)	1545:20:42809:42809	3521095	8	True				
ANR	3521852	ExpressionStatement		1545:21:42810:42810	3521095	9	True				
ANR	3521853	IfStatement	"if ( ( daemons . FindDaemon ( ""HDFS"" ) != NULL ) && hdfs_image_path )"		3521095	34					
ANR	3521854	Condition	"( daemons . FindDaemon ( ""HDFS"" ) != NULL ) && hdfs_image_path"	1549:6:42826:42880	3521095	0	True				
ANR	3521855	AndExpression	"( daemons . FindDaemon ( ""HDFS"" ) != NULL ) && hdfs_image_path"		3521095	0		&&			
ANR	3521856	EqualityExpression	"daemons . FindDaemon ( ""HDFS"" ) != NULL"		3521095	0		!=			
ANR	3521857	CallExpression	"daemons . FindDaemon ( ""HDFS"" )"		3521095	0					
ANR	3521858	Callee	daemons . FindDaemon		3521095	0					
ANR	3521859	MemberAccess	daemons . FindDaemon		3521095	0					
ANR	3521860	Identifier	daemons		3521095	0					
ANR	3521861	Identifier	FindDaemon		3521095	1					
ANR	3521862	ArgumentList	"""HDFS"""		3521095	1					
ANR	3521863	Argument	"""HDFS"""		3521095	0					
ANR	3521864	PrimaryExpression	"""HDFS"""		3521095	0					
ANR	3521865	Identifier	NULL		3521095	1					
ANR	3521866	Identifier	hdfs_image_path		3521095	1					
ANR	3521867	CompoundStatement		181:64:6173:6173	3521095	1					
ANR	3521868	IfStatement	if ( ! wfh . addTrusted ( hdfs_image_path ) )		3521095	0					
ANR	3521869	Condition	! wfh . addTrusted ( hdfs_image_path )	1550:7:42893:42924	3521095	0	True				
ANR	3521870	UnaryOperationExpression	! wfh . addTrusted ( hdfs_image_path )		3521095	0					
ANR	3521871	UnaryOperator	!		3521095	0					
ANR	3521872	CallExpression	wfh . addTrusted ( hdfs_image_path )		3521095	1					
ANR	3521873	Callee	wfh . addTrusted		3521095	0					
ANR	3521874	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521875	Identifier	wfh		3521095	0					
ANR	3521876	Identifier	addTrusted		3521095	1					
ANR	3521877	ArgumentList	hdfs_image_path		3521095	1					
ANR	3521878	Argument	hdfs_image_path		3521095	0					
ANR	3521879	Identifier	hdfs_image_path		3521095	0					
ANR	3521880	CompoundStatement		182:42:6217:6217	3521095	1					
ANR	3521881	Statement	dprintf	1551:3:42933:42939	3521095	0	True				
ANR	3521882	Statement	(	1551:10:42940:42940	3521095	1	True				
ANR	3521883	Statement	D_FULLDEBUG	1551:11:42941:42951	3521095	2	True				
ANR	3521884	Statement	","	1551:22:42952:42952	3521095	3	True				
ANR	3521885	Statement	"""WinFirewall: unable to add %s to the """	1551:24:42954:42992	3521095	4	True				
ANR	3521886	Statement	"""windows firewall exception list.\\n"""	1552:4:42998:43033	3521095	5	True				
ANR	3521887	Statement	","	1552:40:43034:43034	3521095	6	True				
ANR	3521888	Statement	hdfs_image_path	1552:42:43036:43050	3521095	7	True				
ANR	3521889	Statement	)	1552:57:43051:43051	3521095	8	True				
ANR	3521890	ExpressionStatement		1552:58:43052:43052	3521095	9	True				
ANR	3521891	IfStatement	if ( vmgahp_image_path )		3521095	35					
ANR	3521892	Condition	vmgahp_image_path	1556:6:43068:43084	3521095	0	True				
ANR	3521893	Identifier	vmgahp_image_path		3521095	0					
ANR	3521894	CompoundStatement		188:26:6377:6377	3521095	1					
ANR	3521895	IfStatement	if ( ! wfh . addTrusted ( vmgahp_image_path ) )		3521095	0					
ANR	3521896	Condition	! wfh . addTrusted ( vmgahp_image_path )	1557:7:43097:43130	3521095	0	True				
ANR	3521897	UnaryOperationExpression	! wfh . addTrusted ( vmgahp_image_path )		3521095	0					
ANR	3521898	UnaryOperator	!		3521095	0					
ANR	3521899	CallExpression	wfh . addTrusted ( vmgahp_image_path )		3521095	1					
ANR	3521900	Callee	wfh . addTrusted		3521095	0					
ANR	3521901	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521902	Identifier	wfh		3521095	0					
ANR	3521903	Identifier	addTrusted		3521095	1					
ANR	3521904	ArgumentList	vmgahp_image_path		3521095	1					
ANR	3521905	Argument	vmgahp_image_path		3521095	0					
ANR	3521906	Identifier	vmgahp_image_path		3521095	0					
ANR	3521907	CompoundStatement		189:44:6423:6423	3521095	1					
ANR	3521908	Statement	dprintf	1558:3:43139:43145	3521095	0	True				
ANR	3521909	Statement	(	1558:10:43146:43146	3521095	1	True				
ANR	3521910	Statement	D_FULLDEBUG	1558:11:43147:43157	3521095	2	True				
ANR	3521911	Statement	","	1558:22:43158:43158	3521095	3	True				
ANR	3521912	Statement	"""WinFirewall: unable to add %s to the """	1558:24:43160:43198	3521095	4	True				
ANR	3521913	Statement	"""windows firewall exception list.\\n"""	1559:4:43204:43239	3521095	5	True				
ANR	3521914	Statement	","	1559:40:43240:43240	3521095	6	True				
ANR	3521915	Statement	vmgahp_image_path	1560:4:43246:43262	3521095	7	True				
ANR	3521916	Statement	)	1560:21:43263:43263	3521095	8	True				
ANR	3521917	ExpressionStatement		1560:22:43264:43264	3521095	9	True				
ANR	3521918	IfStatement	if ( dagman_image_path )		3521095	36					
ANR	3521919	Condition	dagman_image_path	1564:6:43280:43296	3521095	0	True				
ANR	3521920	Identifier	dagman_image_path		3521095	0					
ANR	3521921	CompoundStatement		196:26:6589:6589	3521095	1					
ANR	3521922	IfStatement	if ( ! wfh . addTrusted ( dagman_image_path ) )		3521095	0					
ANR	3521923	Condition	! wfh . addTrusted ( dagman_image_path )	1565:7:43309:43343	3521095	0	True				
ANR	3521924	UnaryOperationExpression	! wfh . addTrusted ( dagman_image_path )		3521095	0					
ANR	3521925	UnaryOperator	!		3521095	0					
ANR	3521926	CallExpression	wfh . addTrusted ( dagman_image_path )		3521095	1					
ANR	3521927	Callee	wfh . addTrusted		3521095	0					
ANR	3521928	MemberAccess	wfh . addTrusted		3521095	0					
ANR	3521929	Identifier	wfh		3521095	0					
ANR	3521930	Identifier	addTrusted		3521095	1					
ANR	3521931	ArgumentList	dagman_image_path		3521095	1					
ANR	3521932	Argument	dagman_image_path		3521095	0					
ANR	3521933	Identifier	dagman_image_path		3521095	0					
ANR	3521934	CompoundStatement		197:45:6636:6636	3521095	1					
ANR	3521935	Statement	dprintf	1566:3:43352:43358	3521095	0	True				
ANR	3521936	Statement	(	1566:10:43359:43359	3521095	1	True				
ANR	3521937	Statement	D_FULLDEBUG	1566:11:43360:43370	3521095	2	True				
ANR	3521938	Statement	","	1566:22:43371:43371	3521095	3	True				
ANR	3521939	Statement	"""WinFirewall: unable to add %s to """	1566:24:43373:43407	3521095	4	True				
ANR	3521940	Statement	"""the windows firewall exception list.\\n"""	1567:4:43413:43452	3521095	5	True				
ANR	3521941	Statement	","	1567:44:43453:43453	3521095	6	True				
ANR	3521942	Statement	dagman_image_path	1568:4:43459:43475	3521095	7	True				
ANR	3521943	Statement	)	1568:21:43476:43476	3521095	8	True				
ANR	3521944	ExpressionStatement		1568:22:43477:43477	3521095	9	True				
ANR	3521945	IfStatement	if ( master_image_path )		3521095	37					
ANR	3521946	Condition	master_image_path	1572:6:43493:43509	3521095	0	True				
ANR	3521947	Identifier	master_image_path		3521095	0					
ANR	3521948	CompoundStatement		204:26:6802:6802	3521095	1					
ANR	3521949	ExpressionStatement	free ( master_image_path )	1572:28:43515:43538	3521095	0	True				
ANR	3521950	CallExpression	free ( master_image_path )		3521095	0					
ANR	3521951	Callee	free		3521095	0					
ANR	3521952	Identifier	free		3521095	0					
ANR	3521953	ArgumentList	master_image_path		3521095	1					
ANR	3521954	Argument	master_image_path		3521095	0					
ANR	3521955	Identifier	master_image_path		3521095	0					
ANR	3521956	IfStatement	if ( schedd_image_path )		3521095	38					
ANR	3521957	Condition	schedd_image_path	1573:6:43548:43564	3521095	0	True				
ANR	3521958	Identifier	schedd_image_path		3521095	0					
ANR	3521959	CompoundStatement		205:26:6857:6857	3521095	1					
ANR	3521960	ExpressionStatement	free ( schedd_image_path )	1573:28:43570:43593	3521095	0	True				
ANR	3521961	CallExpression	free ( schedd_image_path )		3521095	0					
ANR	3521962	Callee	free		3521095	0					
ANR	3521963	Identifier	free		3521095	0					
ANR	3521964	ArgumentList	schedd_image_path		3521095	1					
ANR	3521965	Argument	schedd_image_path		3521095	0					
ANR	3521966	Identifier	schedd_image_path		3521095	0					
ANR	3521967	IfStatement	if ( startd_image_path )		3521095	39					
ANR	3521968	Condition	startd_image_path	1574:6:43603:43619	3521095	0	True				
ANR	3521969	Identifier	startd_image_path		3521095	0					
ANR	3521970	CompoundStatement		206:26:6912:6912	3521095	1					
ANR	3521971	ExpressionStatement	free ( startd_image_path )	1574:28:43625:43648	3521095	0	True				
ANR	3521972	CallExpression	free ( startd_image_path )		3521095	0					
ANR	3521973	Callee	free		3521095	0					
ANR	3521974	Identifier	free		3521095	0					
ANR	3521975	ArgumentList	startd_image_path		3521095	1					
ANR	3521976	Argument	startd_image_path		3521095	0					
ANR	3521977	Identifier	startd_image_path		3521095	0					
ANR	3521978	IfStatement	if ( quill_image_path )		3521095	40					
ANR	3521979	Condition	quill_image_path	1575:6:43658:43673	3521095	0	True				
ANR	3521980	Identifier	quill_image_path		3521095	0					
ANR	3521981	CompoundStatement		207:26:6967:6967	3521095	1					
ANR	3521982	ExpressionStatement	free ( quill_image_path )	1575:28:43680:43702	3521095	0	True				
ANR	3521983	CallExpression	free ( quill_image_path )		3521095	0					
ANR	3521984	Callee	free		3521095	0					
ANR	3521985	Identifier	free		3521095	0					
ANR	3521986	ArgumentList	quill_image_path		3521095	1					
ANR	3521987	Argument	quill_image_path		3521095	0					
ANR	3521988	Identifier	quill_image_path		3521095	0					
ANR	3521989	IfStatement	if ( dbmsd_image_path )		3521095	41					
ANR	3521990	Condition	dbmsd_image_path	1576:6:43712:43727	3521095	0	True				
ANR	3521991	Identifier	dbmsd_image_path		3521095	0					
ANR	3521992	CompoundStatement		208:26:7021:7021	3521095	1					
ANR	3521993	ExpressionStatement	free ( dbmsd_image_path )	1576:28:43734:43756	3521095	0	True				
ANR	3521994	CallExpression	free ( dbmsd_image_path )		3521095	0					
ANR	3521995	Callee	free		3521095	0					
ANR	3521996	Identifier	free		3521095	0					
ANR	3521997	ArgumentList	dbmsd_image_path		3521095	1					
ANR	3521998	Argument	dbmsd_image_path		3521095	0					
ANR	3521999	Identifier	dbmsd_image_path		3521095	0					
ANR	3522000	IfStatement	if ( dagman_image_path )		3521095	42					
ANR	3522001	Condition	dagman_image_path	1577:6:43766:43782	3521095	0	True				
ANR	3522002	Identifier	dagman_image_path		3521095	0					
ANR	3522003	CompoundStatement		209:26:7075:7075	3521095	1					
ANR	3522004	ExpressionStatement	free ( dagman_image_path )	1577:28:43788:43811	3521095	0	True				
ANR	3522005	CallExpression	free ( dagman_image_path )		3521095	0					
ANR	3522006	Callee	free		3521095	0					
ANR	3522007	Identifier	free		3521095	0					
ANR	3522008	ArgumentList	dagman_image_path		3521095	1					
ANR	3522009	Argument	dagman_image_path		3521095	0					
ANR	3522010	Identifier	dagman_image_path		3521095	0					
ANR	3522011	IfStatement	if ( negotiator_image_path )		3521095	43					
ANR	3522012	Condition	negotiator_image_path	1578:6:43821:43841	3521095	0	True				
ANR	3522013	Identifier	negotiator_image_path		3521095	0					
ANR	3522014	CompoundStatement		210:30:7134:7134	3521095	1					
ANR	3522015	ExpressionStatement	free ( negotiator_image_path )	1578:32:43847:43874	3521095	0	True				
ANR	3522016	CallExpression	free ( negotiator_image_path )		3521095	0					
ANR	3522017	Callee	free		3521095	0					
ANR	3522018	Identifier	free		3521095	0					
ANR	3522019	ArgumentList	negotiator_image_path		3521095	1					
ANR	3522020	Argument	negotiator_image_path		3521095	0					
ANR	3522021	Identifier	negotiator_image_path		3521095	0					
ANR	3522022	IfStatement	if ( collector_image_path )		3521095	44					
ANR	3522023	Condition	collector_image_path	1579:6:43884:43903	3521095	0	True				
ANR	3522024	Identifier	collector_image_path		3521095	0					
ANR	3522025	CompoundStatement		211:29:7196:7196	3521095	1					
ANR	3522026	ExpressionStatement	free ( collector_image_path )	1579:31:43909:43935	3521095	0	True				
ANR	3522027	CallExpression	free ( collector_image_path )		3521095	0					
ANR	3522028	Callee	free		3521095	0					
ANR	3522029	Identifier	free		3521095	0					
ANR	3522030	ArgumentList	collector_image_path		3521095	1					
ANR	3522031	Argument	collector_image_path		3521095	0					
ANR	3522032	Identifier	collector_image_path		3521095	0					
ANR	3522033	IfStatement	if ( shadow_image_path )		3521095	45					
ANR	3522034	Condition	shadow_image_path	1580:6:43945:43961	3521095	0	True				
ANR	3522035	Identifier	shadow_image_path		3521095	0					
ANR	3522036	CompoundStatement		212:26:7254:7254	3521095	1					
ANR	3522037	ExpressionStatement	free ( shadow_image_path )	1580:28:43967:43990	3521095	0	True				
ANR	3522038	CallExpression	free ( shadow_image_path )		3521095	0					
ANR	3522039	Callee	free		3521095	0					
ANR	3522040	Identifier	free		3521095	0					
ANR	3522041	ArgumentList	shadow_image_path		3521095	1					
ANR	3522042	Argument	shadow_image_path		3521095	0					
ANR	3522043	Identifier	shadow_image_path		3521095	0					
ANR	3522044	IfStatement	if ( gridmanager_image_path )		3521095	46					
ANR	3522045	Condition	gridmanager_image_path	1581:6:44000:44021	3521095	0	True				
ANR	3522046	Identifier	gridmanager_image_path		3521095	0					
ANR	3522047	CompoundStatement		213:31:7314:7314	3521095	1					
ANR	3522048	ExpressionStatement	free ( gridmanager_image_path )	1581:33:44027:44055	3521095	0	True				
ANR	3522049	CallExpression	free ( gridmanager_image_path )		3521095	0					
ANR	3522050	Callee	free		3521095	0					
ANR	3522051	Identifier	free		3521095	0					
ANR	3522052	ArgumentList	gridmanager_image_path		3521095	1					
ANR	3522053	Argument	gridmanager_image_path		3521095	0					
ANR	3522054	Identifier	gridmanager_image_path		3521095	0					
ANR	3522055	IfStatement	if ( gahp_image_path )		3521095	47					
ANR	3522056	Condition	gahp_image_path	1582:6:44065:44079	3521095	0	True				
ANR	3522057	Identifier	gahp_image_path		3521095	0					
ANR	3522058	CompoundStatement		214:24:7372:7372	3521095	1					
ANR	3522059	ExpressionStatement	free ( gahp_image_path )	1582:26:44085:44106	3521095	0	True				
ANR	3522060	CallExpression	free ( gahp_image_path )		3521095	0					
ANR	3522061	Callee	free		3521095	0					
ANR	3522062	Identifier	free		3521095	0					
ANR	3522063	ArgumentList	gahp_image_path		3521095	1					
ANR	3522064	Argument	gahp_image_path		3521095	0					
ANR	3522065	Identifier	gahp_image_path		3521095	0					
ANR	3522066	IfStatement	if ( credd_image_path )		3521095	48					
ANR	3522067	Condition	credd_image_path	1583:6:44117:44132	3521095	0	True				
ANR	3522068	Identifier	credd_image_path		3521095	0					
ANR	3522069	CompoundStatement		215:25:7425:7425	3521095	1					
ANR	3522070	ExpressionStatement	free ( credd_image_path )	1583:27:44138:44160	3521095	0	True				
ANR	3522071	CallExpression	free ( credd_image_path )		3521095	0					
ANR	3522072	Callee	free		3521095	0					
ANR	3522073	Identifier	free		3521095	0					
ANR	3522074	ArgumentList	credd_image_path		3521095	1					
ANR	3522075	Argument	credd_image_path		3521095	0					
ANR	3522076	Identifier	credd_image_path		3521095	0					
ANR	3522077	IfStatement	if ( vmgahp_image_path )		3521095	49					
ANR	3522078	Condition	vmgahp_image_path	1584:6:44171:44187	3521095	0	True				
ANR	3522079	Identifier	vmgahp_image_path		3521095	0					
ANR	3522080	CompoundStatement		216:26:7480:7480	3521095	1					
ANR	3522081	ExpressionStatement	free ( vmgahp_image_path )	1584:28:44193:44216	3521095	0	True				
ANR	3522082	CallExpression	free ( vmgahp_image_path )		3521095	0					
ANR	3522083	Callee	free		3521095	0					
ANR	3522084	Identifier	free		3521095	0					
ANR	3522085	ArgumentList	vmgahp_image_path		3521095	1					
ANR	3522086	Argument	vmgahp_image_path		3521095	0					
ANR	3522087	Identifier	vmgahp_image_path		3521095	0					
ANR	3522088	IfStatement	if ( kbdd_image_path )		3521095	50					
ANR	3522089	Condition	kbdd_image_path	1585:6:44226:44240	3521095	0	True				
ANR	3522090	Identifier	kbdd_image_path		3521095	0					
ANR	3522091	CompoundStatement		217:24:7533:7533	3521095	1					
ANR	3522092	ExpressionStatement	free ( kbdd_image_path )	1585:26:44246:44267	3521095	0	True				
ANR	3522093	CallExpression	free ( kbdd_image_path )		3521095	0					
ANR	3522094	Callee	free		3521095	0					
ANR	3522095	Identifier	free		3521095	0					
ANR	3522096	ArgumentList	kbdd_image_path		3521095	1					
ANR	3522097	Argument	kbdd_image_path		3521095	0					
ANR	3522098	Identifier	kbdd_image_path		3521095	0					
ANR	3522099	ReturnType	void		3521095	1					
ANR	3522100	Identifier	init_firewall_exceptions		3521095	2					
ANR	3522101	ParameterList			3521095	3					
ANR	3522102	CFGEntryNode	ENTRY		3521095		True				
ANR	3522103	CFGExitNode	EXIT		3521095		True				
ANR	3522104	Symbol	add_exception		3521095						
ANR	3522105	Symbol	getExecPath		3521095						
ANR	3522106	Symbol	startd_image_path		3521095						
ANR	3522107	Symbol	strlen		3521095						
ANR	3522108	Symbol	master_image_path		3521095						
ANR	3522109	Symbol	param		3521095						
ANR	3522110	Symbol	bin_path		3521095						
ANR	3522111	Symbol	daemons		3521095						
ANR	3522112	Symbol	hdfs_image_path		3521095						
ANR	3522113	Symbol	daemons . FindDaemon		3521095						
ANR	3522114	Symbol	starter_image_path		3521095						
ANR	3522115	Symbol	dagman_exe		3521095						
ANR	3522116	Symbol	credd_image_path		3521095						
ANR	3522117	Symbol	shadow_image_path		3521095						
ANR	3522118	Symbol	collector_image_path		3521095						
ANR	3522119	Symbol	malloc		3521095						
ANR	3522120	Symbol	NULL		3521095						
ANR	3522121	Symbol	vmgahp_image_path		3521095						
ANR	3522122	Symbol	gahp_image_path		3521095						
ANR	3522123	Symbol	negotiator_image_path		3521095						
ANR	3522124	Symbol	false		3521095						
ANR	3522125	Symbol	param_boolean		3521095						
ANR	3522126	Symbol	D_FULLDEBUG		3521095						
ANR	3522127	Symbol	gridmanager_image_path		3521095						
ANR	3522128	Symbol	dbmsd_image_path		3521095						
ANR	3522129	Symbol	schedd_image_path		3521095						
ANR	3522130	Symbol	gahp_worker_image_path		3521095						
ANR	3522131	Symbol	dagman_image_path		3521095						
ANR	3522132	Symbol	wfh		3521095						
ANR	3522133	Symbol	true		3521095						
ANR	3522134	Symbol	wfh . addTrusted		3521095						
ANR	3522135	Symbol	quill_image_path		3521095						
ANR	3522136	Symbol	kbdd_image_path		3521095						
ANR	3522137	Function	check_uid_for_privsep	1589:0:44281:44903							
ANR	3522138	FunctionDef	check_uid_for_privsep ()		3522137	0					
ANR	3522139	CompoundStatement		1591:0:44310:44903	3522137	0					
ANR	3522140	IfStatement	"if ( param_boolean ( ""PRIVSEP_ENABLED"" , false ) && ( getuid ( ) == 0 ) )"		3522137	0					
ANR	3522141	Condition	"param_boolean ( ""PRIVSEP_ENABLED"" , false ) && ( getuid ( ) == 0 )"	1593:5:44337:44394	3522137	0	True				
ANR	3522142	AndExpression	"param_boolean ( ""PRIVSEP_ENABLED"" , false ) && ( getuid ( ) == 0 )"		3522137	0		&&			
ANR	3522143	CallExpression	"param_boolean ( ""PRIVSEP_ENABLED"" , false )"		3522137	0					
ANR	3522144	Callee	param_boolean		3522137	0					
ANR	3522145	Identifier	param_boolean		3522137	0					
ANR	3522146	ArgumentList	"""PRIVSEP_ENABLED"""		3522137	1					
ANR	3522147	Argument	"""PRIVSEP_ENABLED"""		3522137	0					
ANR	3522148	PrimaryExpression	"""PRIVSEP_ENABLED"""		3522137	0					
ANR	3522149	Argument	false		3522137	1					
ANR	3522150	Identifier	false		3522137	0					
ANR	3522151	EqualityExpression	getuid ( ) == 0		3522137	1		==			
ANR	3522152	CallExpression	getuid ( )		3522137	0					
ANR	3522153	Callee	getuid		3522137	0					
ANR	3522154	Identifier	getuid		3522137	0					
ANR	3522155	ArgumentList			3522137	1					
ANR	3522156	PrimaryExpression	0		3522137	1					
ANR	3522157	CompoundStatement		4:2:90:125	3522137	1					
ANR	3522158	IdentifierDeclStatement	uid_t condor_uid = get_condor_uid ( ) ;	1594:2:44401:44436	3522137	0	True				
ANR	3522159	IdentifierDecl	condor_uid = get_condor_uid ( )		3522137	0					
ANR	3522160	IdentifierDeclType	uid_t		3522137	0					
ANR	3522161	Identifier	condor_uid		3522137	1					
ANR	3522162	AssignmentExpression	condor_uid = get_condor_uid ( )		3522137	2		=			
ANR	3522163	Identifier	condor_uid		3522137	0					
ANR	3522164	CallExpression	get_condor_uid ( )		3522137	1					
ANR	3522165	Callee	get_condor_uid		3522137	0					
ANR	3522166	Identifier	get_condor_uid		3522137	0					
ANR	3522167	ArgumentList			3522137	1					
ANR	3522168	IfStatement	if ( condor_uid == 0 )		3522137	1					
ANR	3522169	Condition	condor_uid == 0	1595:6:44444:44458	3522137	0	True				
ANR	3522170	EqualityExpression	condor_uid == 0		3522137	0		==			
ANR	3522171	Identifier	condor_uid		3522137	0					
ANR	3522172	PrimaryExpression	0		3522137	1					
ANR	3522173	CompoundStatement		5:23:150:150	3522137	1					
ANR	3522174	Statement	EXCEPT	1596:3:44466:44471	3522137	0	True				
ANR	3522175	Statement	(	1596:9:44472:44472	3522137	1	True				
ANR	3522176	Statement	"""PRIVSEP_ENABLED set, but current UID is 0 """	1596:10:44473:44516	3522137	2	True				
ANR	3522177	Statement	"""and condor UID is also set to root"""	1597:14:44532:44567	3522137	3	True				
ANR	3522178	Statement	)	1597:50:44568:44568	3522137	4	True				
ANR	3522179	ExpressionStatement		1597:51:44569:44569	3522137	5	True				
ANR	3522180	Statement	dprintf	1599:2:44577:44583	3522137	2	True				
ANR	3522181	Statement	(	1599:9:44584:44584	3522137	3	True				
ANR	3522182	Statement	D_ALWAYS	1599:10:44585:44592	3522137	4	True				
ANR	3522183	Statement	","	1599:18:44593:44593	3522137	5	True				
ANR	3522184	Statement	"""PRIVSEP_ENABLED set, but UID is 0; """	1600:10:44605:44641	3522137	6	True				
ANR	3522185	Statement	"""will drop to UID %u and restart\\n"""	1601:14:44657:44691	3522137	7	True				
ANR	3522186	Statement	","	1601:49:44692:44692	3522137	8	True				
ANR	3522187	Statement	(	1602:10:44704:44704	3522137	9	True				
ANR	3522188	Statement	unsigned	1602:11:44705:44712	3522137	10	True				
ANR	3522189	Statement	)	1602:19:44713:44713	3522137	11	True				
ANR	3522190	Statement	condor_uid	1602:20:44714:44723	3522137	12	True				
ANR	3522191	Statement	)	1602:30:44724:44724	3522137	13	True				
ANR	3522192	ExpressionStatement		1602:31:44725:44725	3522137	14	True				
ANR	3522193	ExpressionStatement	daemons . CleanupBeforeRestart ( )	1603:2:44729:44759	3522137	15	True				
ANR	3522194	CallExpression	daemons . CleanupBeforeRestart ( )		3522137	0					
ANR	3522195	Callee	daemons . CleanupBeforeRestart		3522137	0					
ANR	3522196	MemberAccess	daemons . CleanupBeforeRestart		3522137	0					
ANR	3522197	Identifier	daemons		3522137	0					
ANR	3522198	Identifier	CleanupBeforeRestart		3522137	1					
ANR	3522199	ArgumentList			3522137	1					
ANR	3522200	ExpressionStatement	set_condor_priv_final ( )	1604:2:44763:44786	3522137	16	True				
ANR	3522201	CallExpression	set_condor_priv_final ( )		3522137	0					
ANR	3522202	Callee	set_condor_priv_final		3522137	0					
ANR	3522203	Identifier	set_condor_priv_final		3522137	0					
ANR	3522204	ArgumentList			3522137	1					
ANR	3522205	ExpressionStatement	daemons . ExecMaster ( )	1605:2:44790:44810	3522137	17	True				
ANR	3522206	CallExpression	daemons . ExecMaster ( )		3522137	0					
ANR	3522207	Callee	daemons . ExecMaster		3522137	0					
ANR	3522208	MemberAccess	daemons . ExecMaster		3522137	0					
ANR	3522209	Identifier	daemons		3522137	0					
ANR	3522210	Identifier	ExecMaster		3522137	1					
ANR	3522211	ArgumentList			3522137	1					
ANR	3522212	ExpressionStatement	"EXCEPT ( ""attempt to restart (via exec) failed (%s)"" , strerror ( errno ) )"	1606:2:44814:44891	3522137	18	True				
ANR	3522213	CallExpression	"EXCEPT ( ""attempt to restart (via exec) failed (%s)"" , strerror ( errno ) )"		3522137	0					
ANR	3522214	Callee	EXCEPT		3522137	0					
ANR	3522215	Identifier	EXCEPT		3522137	0					
ANR	3522216	ArgumentList	"""attempt to restart (via exec) failed (%s)"""		3522137	1					
ANR	3522217	Argument	"""attempt to restart (via exec) failed (%s)"""		3522137	0					
ANR	3522218	PrimaryExpression	"""attempt to restart (via exec) failed (%s)"""		3522137	0					
ANR	3522219	Argument	strerror ( errno )		3522137	1					
ANR	3522220	CallExpression	strerror ( errno )		3522137	0					
ANR	3522221	Callee	strerror		3522137	0					
ANR	3522222	Identifier	strerror		3522137	0					
ANR	3522223	ArgumentList	errno		3522137	1					
ANR	3522224	Argument	errno		3522137	0					
ANR	3522225	Identifier	errno		3522137	0					
ANR	3522226	ReturnType	void		3522137	1					
ANR	3522227	Identifier	check_uid_for_privsep		3522137	2					
ANR	3522228	ParameterList			3522137	3					
ANR	3522229	CFGEntryNode	ENTRY		3522137		True				
ANR	3522230	CFGExitNode	EXIT		3522137		True				
ANR	3522231	Symbol	strerror		3522137						
ANR	3522232	Symbol	getuid		3522137						
ANR	3522233	Symbol	errno		3522137						
ANR	3522234	Symbol	get_condor_uid		3522137						
ANR	3522235	Symbol	condor_uid		3522137						
ANR	3522236	Symbol	false		3522137						
ANR	3522237	Symbol	daemons		3522137						
ANR	3522238	Symbol	param_boolean		3522137						
ANR	3522239	Function	restart_everyone	1612:0:44906:44995							
ANR	3522240	FunctionDef	restart_everyone ()		3522239	0					
ANR	3522241	CompoundStatement		1612:24:44930:44995	3522239	0					
ANR	3522242	ExpressionStatement	daemons . immediate_restart = TRUE	1613:2:44934:44966	3522239	0	True				
ANR	3522243	AssignmentExpression	daemons . immediate_restart = TRUE		3522239	0		=			
ANR	3522244	MemberAccess	daemons . immediate_restart		3522239	0					
ANR	3522245	Identifier	daemons		3522239	0					
ANR	3522246	Identifier	immediate_restart		3522239	1					
ANR	3522247	Identifier	TRUE		3522239	1					
ANR	3522248	ExpressionStatement	daemons . RestartMaster ( )	1614:2:44970:44993	3522239	1	True				
ANR	3522249	CallExpression	daemons . RestartMaster ( )		3522239	0					
ANR	3522250	Callee	daemons . RestartMaster		3522239	0					
ANR	3522251	MemberAccess	daemons . RestartMaster		3522239	0					
ANR	3522252	Identifier	daemons		3522239	0					
ANR	3522253	Identifier	RestartMaster		3522239	1					
ANR	3522254	ArgumentList			3522239	1					
ANR	3522255	ReturnType	void		3522239	1					
ANR	3522256	Identifier	restart_everyone		3522239	2					
ANR	3522257	ParameterList			3522239	3					
ANR	3522258	CFGEntryNode	ENTRY		3522239		True				
ANR	3522259	CFGExitNode	EXIT		3522239		True				
ANR	3522260	Symbol	daemons		3522239						
ANR	3522261	Symbol	daemons . immediate_restart		3522239						
ANR	3522262	Symbol	TRUE		3522239						
