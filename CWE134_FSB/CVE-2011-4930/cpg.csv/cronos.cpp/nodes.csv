command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1043090	File	data/converged/CVE-2011-4930_htcondor/cronos.cpp								
ANR	1043091	DeclStmt									
ANR	1043092	Decl							void ( * ) ( void )	void ( * ) ( void )	FUNC_P
ANR	1043093	ClassDef	<unnamed>	89:8:3334:3387							
ANR	1043094	DeclStmt									
ANR	1043095	Decl							int	int [ N_ELEM ]	pattern
ANR	1043096	DeclStmt									
ANR	1043097	Decl							FUNC_P	FUNC_P	func
ANR	1043098	DeclStmt									
ANR	1043099	Decl									EVENT
ANR	1043100	DeclStmt									
ANR	1043101	Decl							EVENT	EVENT [ 128 ]	Schedule
ANR	1043102	DeclStmt									
ANR	1043103	Decl							int	int	N_Events
ANR	1043104	DeclStmt									
ANR	1043105	Decl							int	int	did_startup
ANR	1043106	DeclStmt									
ANR	1043107	Decl							int	int [ N_ELEM ]	prev_time
ANR	1043108	DeclStmt									
ANR	1043109	Decl							int	int [ N_ELEM ]	now_time
ANR	1043110	DeclStmt									
ANR	1043111	Decl							void	"void ( int , int , int , int , int , FUNC_P )"	schedule_event
ANR	1043112	DeclStmt									
ANR	1043113	Decl							void	void ( void )	event_mgr
ANR	1043114	DeclStmt									
ANR	1043115	Decl							int	"int ( int pattern [ ] , int prev [ ] , int now [ ] )"	event_due
ANR	1043116	DeclStmt									
ANR	1043117	Decl							int	"int ( int t1 [ ] , int t2 [ ] )"	before
ANR	1043118	DeclStmt									
ANR	1043119	Decl							int	"int ( int pattern [ ] , int i )"	next_rightmost
ANR	1043120	DeclStmt									
ANR	1043121	Decl							void	void ( int cur [ ] )	get_moment
ANR	1043122	DeclStmt									
ANR	1043123	Decl							void	"void ( int prev [ ] , int now [ ] )"	check_schedule
ANR	1043124	Function	schedule_event	112:0:3899:4277							
ANR	1043125	FunctionDef	"schedule_event (int month , int day , int hour , int minute , int second , FUNC_P func)"		1043124	0					
ANR	1043126	CompoundStatement		115:0:4003:4277	1043124	0					
ANR	1043127	ExpressionStatement	Schedule [ N_Events ] . pattern [ CMONTH ] = month	116:1:4006:4048	1043124	0	True				
ANR	1043128	AssignmentExpression	Schedule [ N_Events ] . pattern [ CMONTH ] = month		1043124	0		=			
ANR	1043129	ArrayIndexing	Schedule [ N_Events ] . pattern [ CMONTH ]		1043124	0					
ANR	1043130	MemberAccess	Schedule [ N_Events ] . pattern		1043124	0					
ANR	1043131	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043132	Identifier	Schedule		1043124	0					
ANR	1043133	Identifier	N_Events		1043124	1					
ANR	1043134	Identifier	pattern		1043124	1					
ANR	1043135	Identifier	CMONTH		1043124	1					
ANR	1043136	Identifier	month		1043124	1					
ANR	1043137	ExpressionStatement	Schedule [ N_Events ] . pattern [ CDAY ] = day	117:1:4051:4089	1043124	1	True				
ANR	1043138	AssignmentExpression	Schedule [ N_Events ] . pattern [ CDAY ] = day		1043124	0		=			
ANR	1043139	ArrayIndexing	Schedule [ N_Events ] . pattern [ CDAY ]		1043124	0					
ANR	1043140	MemberAccess	Schedule [ N_Events ] . pattern		1043124	0					
ANR	1043141	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043142	Identifier	Schedule		1043124	0					
ANR	1043143	Identifier	N_Events		1043124	1					
ANR	1043144	Identifier	pattern		1043124	1					
ANR	1043145	Identifier	CDAY		1043124	1					
ANR	1043146	Identifier	day		1043124	1					
ANR	1043147	ExpressionStatement	Schedule [ N_Events ] . pattern [ CHOUR ] = hour	118:1:4092:4132	1043124	2	True				
ANR	1043148	AssignmentExpression	Schedule [ N_Events ] . pattern [ CHOUR ] = hour		1043124	0		=			
ANR	1043149	ArrayIndexing	Schedule [ N_Events ] . pattern [ CHOUR ]		1043124	0					
ANR	1043150	MemberAccess	Schedule [ N_Events ] . pattern		1043124	0					
ANR	1043151	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043152	Identifier	Schedule		1043124	0					
ANR	1043153	Identifier	N_Events		1043124	1					
ANR	1043154	Identifier	pattern		1043124	1					
ANR	1043155	Identifier	CHOUR		1043124	1					
ANR	1043156	Identifier	hour		1043124	1					
ANR	1043157	ExpressionStatement	Schedule [ N_Events ] . pattern [ CMINUTE ] = minute	119:1:4135:4179	1043124	3	True				
ANR	1043158	AssignmentExpression	Schedule [ N_Events ] . pattern [ CMINUTE ] = minute		1043124	0		=			
ANR	1043159	ArrayIndexing	Schedule [ N_Events ] . pattern [ CMINUTE ]		1043124	0					
ANR	1043160	MemberAccess	Schedule [ N_Events ] . pattern		1043124	0					
ANR	1043161	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043162	Identifier	Schedule		1043124	0					
ANR	1043163	Identifier	N_Events		1043124	1					
ANR	1043164	Identifier	pattern		1043124	1					
ANR	1043165	Identifier	CMINUTE		1043124	1					
ANR	1043166	Identifier	minute		1043124	1					
ANR	1043167	ExpressionStatement	Schedule [ N_Events ] . pattern [ CSECOND ] = second	120:1:4182:4226	1043124	4	True				
ANR	1043168	AssignmentExpression	Schedule [ N_Events ] . pattern [ CSECOND ] = second		1043124	0		=			
ANR	1043169	ArrayIndexing	Schedule [ N_Events ] . pattern [ CSECOND ]		1043124	0					
ANR	1043170	MemberAccess	Schedule [ N_Events ] . pattern		1043124	0					
ANR	1043171	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043172	Identifier	Schedule		1043124	0					
ANR	1043173	Identifier	N_Events		1043124	1					
ANR	1043174	Identifier	pattern		1043124	1					
ANR	1043175	Identifier	CSECOND		1043124	1					
ANR	1043176	Identifier	second		1043124	1					
ANR	1043177	ExpressionStatement	Schedule [ N_Events ] . func = func	121:1:4229:4259	1043124	5	True				
ANR	1043178	AssignmentExpression	Schedule [ N_Events ] . func = func		1043124	0		=			
ANR	1043179	MemberAccess	Schedule [ N_Events ] . func		1043124	0					
ANR	1043180	ArrayIndexing	Schedule [ N_Events ]		1043124	0					
ANR	1043181	Identifier	Schedule		1043124	0					
ANR	1043182	Identifier	N_Events		1043124	1					
ANR	1043183	Identifier	func		1043124	1					
ANR	1043184	Identifier	func		1043124	1					
ANR	1043185	ExpressionStatement	N_Events += 1	122:1:4262:4275	1043124	6	True				
ANR	1043186	AssignmentExpression	N_Events += 1		1043124	0		+=			
ANR	1043187	Identifier	N_Events		1043124	0					
ANR	1043188	PrimaryExpression	1		1043124	1					
ANR	1043189	ReturnType	void		1043124	1					
ANR	1043190	Identifier	schedule_event		1043124	2					
ANR	1043191	ParameterList	"int month , int day , int hour , int minute , int second , FUNC_P func"		1043124	3					
ANR	1043192	Parameter	int month	113:16:3920:3928	1043124	0	True				
ANR	1043193	ParameterType	int		1043124	0					
ANR	1043194	Identifier	month		1043124	1					
ANR	1043195	Parameter	int day	113:27:3931:3937	1043124	1	True				
ANR	1043196	ParameterType	int		1043124	0					
ANR	1043197	Identifier	day		1043124	1					
ANR	1043198	Parameter	int hour	113:36:3940:3947	1043124	2	True				
ANR	1043199	ParameterType	int		1043124	0					
ANR	1043200	Identifier	hour		1043124	1					
ANR	1043201	Parameter	int minute	113:46:3950:3959	1043124	3	True				
ANR	1043202	ParameterType	int		1043124	0					
ANR	1043203	Identifier	minute		1043124	1					
ANR	1043204	Parameter	int second	113:58:3962:3971	1043124	4	True				
ANR	1043205	ParameterType	int		1043124	0					
ANR	1043206	Identifier	second		1043124	1					
ANR	1043207	Parameter	FUNC_P func	114:15:3989:3999	1043124	5	True				
ANR	1043208	ParameterType	FUNC_P		1043124	0					
ANR	1043209	Identifier	func		1043124	1					
ANR	1043210	CFGEntryNode	ENTRY		1043124		True				
ANR	1043211	CFGExitNode	EXIT		1043124		True				
ANR	1043212	Symbol	* CDAY		1043124						
ANR	1043213	Symbol	* CHOUR		1043124						
ANR	1043214	Symbol	Schedule [ N_Events ] . func		1043124						
ANR	1043215	Symbol	CDAY		1043124						
ANR	1043216	Symbol	CMINUTE		1043124						
ANR	1043217	Symbol	CMONTH		1043124						
ANR	1043218	Symbol	* CMINUTE		1043124						
ANR	1043219	Symbol	second		1043124						
ANR	1043220	Symbol	* N_Events		1043124						
ANR	1043221	Symbol	hour		1043124						
ANR	1043222	Symbol	* CMONTH		1043124						
ANR	1043223	Symbol	day		1043124						
ANR	1043224	Symbol	* CSECOND		1043124						
ANR	1043225	Symbol	minute		1043124						
ANR	1043226	Symbol	Schedule [ N_Events ] . pattern		1043124						
ANR	1043227	Symbol	N_Events		1043124						
ANR	1043228	Symbol	month		1043124						
ANR	1043229	Symbol	func		1043124						
ANR	1043230	Symbol	* Schedule [ N_Events ] . pattern		1043124						
ANR	1043231	Symbol	* * Schedule		1043124						
ANR	1043232	Symbol	CHOUR		1043124						
ANR	1043233	Symbol	* Schedule		1043124						
ANR	1043234	Symbol	Schedule		1043124						
ANR	1043235	Symbol	* * N_Events		1043124						
ANR	1043236	Symbol	CSECOND		1043124						
ANR	1043237	Function	event_mgr	126:0:4304:4545							
ANR	1043238	FunctionDef	event_mgr ()		1043237	0					
ANR	1043239	CompoundStatement		128:0:4327:4545	1043237	0					
ANR	1043240	IfStatement	if ( ! did_startup )		1043237	0					
ANR	1043241	Condition	! did_startup	130:5:4335:4346	1043237	0	True				
ANR	1043242	UnaryOperationExpression	! did_startup		1043237	0					
ANR	1043243	UnaryOperator	!		1043237	0					
ANR	1043244	Identifier	did_startup		1043237	1					
ANR	1043245	CompoundStatement		3:20:22:22	1043237	1					
ANR	1043246	ExpressionStatement	get_moment ( prev_time )	131:2:4354:4377	1043237	0	True				
ANR	1043247	CallExpression	get_moment ( prev_time )		1043237	0					
ANR	1043248	Callee	get_moment		1043237	0					
ANR	1043249	Identifier	get_moment		1043237	0					
ANR	1043250	ArgumentList	prev_time		1043237	1					
ANR	1043251	Argument	prev_time		1043237	0					
ANR	1043252	Identifier	prev_time		1043237	0					
ANR	1043253	ExpressionStatement	did_startup = 1	132:2:4381:4396	1043237	1	True				
ANR	1043254	AssignmentExpression	did_startup = 1		1043237	0		=			
ANR	1043255	Identifier	did_startup		1043237	0					
ANR	1043256	PrimaryExpression	1		1043237	1					
ANR	1043257	ReturnStatement	return ;	133:2:4400:4406	1043237	2	True				
ANR	1043258	ExpressionStatement	get_moment ( now_time )	135:1:4412:4434	1043237	1	True				
ANR	1043259	CallExpression	get_moment ( now_time )		1043237	0					
ANR	1043260	Callee	get_moment		1043237	0					
ANR	1043261	Identifier	get_moment		1043237	0					
ANR	1043262	ArgumentList	now_time		1043237	1					
ANR	1043263	Argument	now_time		1043237	0					
ANR	1043264	Identifier	now_time		1043237	0					
ANR	1043265	ExpressionStatement	"check_schedule ( prev_time , now_time )"	136:1:4437:4474	1043237	2	True				
ANR	1043266	CallExpression	"check_schedule ( prev_time , now_time )"		1043237	0					
ANR	1043267	Callee	check_schedule		1043237	0					
ANR	1043268	Identifier	check_schedule		1043237	0					
ANR	1043269	ArgumentList	prev_time		1043237	1					
ANR	1043270	Argument	prev_time		1043237	0					
ANR	1043271	Identifier	prev_time		1043237	0					
ANR	1043272	Argument	now_time		1043237	1					
ANR	1043273	Identifier	now_time		1043237	0					
ANR	1043274	ExpressionStatement	"memcpy ( prev_time , now_time , sizeof ( now_time ) )"	137:1:4477:4523	1043237	3	True				
ANR	1043275	CallExpression	"memcpy ( prev_time , now_time , sizeof ( now_time ) )"		1043237	0					
ANR	1043276	Callee	memcpy		1043237	0					
ANR	1043277	Identifier	memcpy		1043237	0					
ANR	1043278	ArgumentList	prev_time		1043237	1					
ANR	1043279	Argument	prev_time		1043237	0					
ANR	1043280	Identifier	prev_time		1043237	0					
ANR	1043281	Argument	now_time		1043237	1					
ANR	1043282	Identifier	now_time		1043237	0					
ANR	1043283	Argument	sizeof ( now_time )		1043237	2					
ANR	1043284	SizeofExpression	sizeof ( now_time )		1043237	0					
ANR	1043285	Sizeof	sizeof		1043237	0					
ANR	1043286	SizeofOperand	now_time		1043237	1					
ANR	1043287	ReturnType	void		1043237	1					
ANR	1043288	Identifier	event_mgr		1043237	2					
ANR	1043289	ParameterList			1043237	3					
ANR	1043290	CFGEntryNode	ENTRY		1043237		True				
ANR	1043291	CFGExitNode	EXIT		1043237		True				
ANR	1043292	Symbol	now_time		1043237						
ANR	1043293	Symbol	prev_time		1043237						
ANR	1043294	Symbol	did_startup		1043237						
ANR	1043295	Function	check_schedule	141:0:4549:4727							
ANR	1043296	FunctionDef	"check_schedule (int prev [ ] , int now [ ])"		1043295	0					
ANR	1043297	CompoundStatement		143:0:4601:4727	1043295	0					
ANR	1043298	IdentifierDeclStatement	int i ;	144:1:4604:4610	1043295	0	True				
ANR	1043299	IdentifierDecl	i		1043295	0					
ANR	1043300	IdentifierDeclType	int		1043295	0					
ANR	1043301	Identifier	i		1043295	1					
ANR	1043302	ForStatement	for ( i = 0 ; i < N_Events ; i ++ )		1043295	1					
ANR	1043303	ForInit	i = 0 ;	146:6:4619:4622	1043295	0	True				
ANR	1043304	AssignmentExpression	i = 0		1043295	0		=			
ANR	1043305	Identifier	i		1043295	0					
ANR	1043306	PrimaryExpression	0		1043295	1					
ANR	1043307	Condition	i < N_Events	146:11:4624:4633	1043295	1	True				
ANR	1043308	RelationalExpression	i < N_Events		1043295	0		<			
ANR	1043309	Identifier	i		1043295	0					
ANR	1043310	Identifier	N_Events		1043295	1					
ANR	1043311	PostIncDecOperationExpression	i ++	146:23:4636:4638	1043295	2	True				
ANR	1043312	Identifier	i		1043295	0					
ANR	1043313	IncDec	++		1043295	1					
ANR	1043314	CompoundStatement		4:29:40:40	1043295	3					
ANR	1043315	IfStatement	"if ( event_due ( Schedule [ i ] . pattern , prev , now ) )"		1043295	0					
ANR	1043316	Condition	"event_due ( Schedule [ i ] . pattern , prev , now )"	147:6:4650:4688	1043295	0	True				
ANR	1043317	CallExpression	"event_due ( Schedule [ i ] . pattern , prev , now )"		1043295	0					
ANR	1043318	Callee	event_due		1043295	0					
ANR	1043319	Identifier	event_due		1043295	0					
ANR	1043320	ArgumentList	Schedule [ i ] . pattern		1043295	1					
ANR	1043321	Argument	Schedule [ i ] . pattern		1043295	0					
ANR	1043322	MemberAccess	Schedule [ i ] . pattern		1043295	0					
ANR	1043323	ArrayIndexing	Schedule [ i ]		1043295	0					
ANR	1043324	Identifier	Schedule		1043295	0					
ANR	1043325	Identifier	i		1043295	1					
ANR	1043326	Identifier	pattern		1043295	1					
ANR	1043327	Argument	prev		1043295	1					
ANR	1043328	Identifier	prev		1043295	0					
ANR	1043329	Argument	now		1043295	2					
ANR	1043330	Identifier	now		1043295	0					
ANR	1043331	CompoundStatement		5:48:90:90	1043295	1					
ANR	1043332	ExpressionStatement	( * Schedule [ i ] . func ) ( )	148:3:4697:4718	1043295	0	True				
ANR	1043333	CallExpression	( * Schedule [ i ] . func ) ( )		1043295	0					
ANR	1043334	Callee	* Schedule [ i ] . func		1043295	0					
ANR	1043335	UnaryOperationExpression	* Schedule [ i ] . func		1043295	0					
ANR	1043336	UnaryOperator	*		1043295	0					
ANR	1043337	MemberAccess	Schedule [ i ] . func		1043295	1					
ANR	1043338	ArrayIndexing	Schedule [ i ]		1043295	0					
ANR	1043339	Identifier	Schedule		1043295	0					
ANR	1043340	Identifier	i		1043295	1					
ANR	1043341	Identifier	func		1043295	1					
ANR	1043342	ArgumentList			1043295	1					
ANR	1043343	ReturnType	static void		1043295	1					
ANR	1043344	Identifier	check_schedule		1043295	2					
ANR	1043345	ParameterList	"int prev [ ] , int now [ ]"		1043295	3					
ANR	1043346	Parameter	int prev [ ]	142:16:4577:4586	1043295	0	True				
ANR	1043347	ParameterType	int [ ]		1043295	0					
ANR	1043348	Identifier	prev		1043295	1					
ANR	1043349	Parameter	int now [ ]	142:28:4589:4597	1043295	1	True				
ANR	1043350	ParameterType	int [ ]		1043295	0					
ANR	1043351	Identifier	now		1043295	1					
ANR	1043352	CFGEntryNode	ENTRY		1043295		True				
ANR	1043353	CFGExitNode	EXIT		1043295		True				
ANR	1043354	Symbol	Schedule [ i ] . pattern		1043295						
ANR	1043355	Symbol	N_Events		1043295						
ANR	1043356	Symbol	* i		1043295						
ANR	1043357	Symbol	Schedule [ i ] . func		1043295						
ANR	1043358	Symbol	* Schedule		1043295						
ANR	1043359	Symbol	prev		1043295						
ANR	1043360	Symbol	now		1043295						
ANR	1043361	Symbol	Schedule		1043295						
ANR	1043362	Symbol	i		1043295						
ANR	1043363	Symbol	event_due		1043295						
ANR	1043364	Function	event_due	164:0:5212:5864							
ANR	1043365	FunctionDef	"event_due (int pattern [ ] , int prev [ ] , int now [ ])"		1043364	0					
ANR	1043366	CompoundStatement		167:0:5273:5864	1043364	0					
ANR	1043367	IdentifierDeclStatement	int alpha [ N_ELEM ] ;	168:1:5276:5294	1043364	0	True				
ANR	1043368	IdentifierDecl	alpha [ N_ELEM ]		1043364	0					
ANR	1043369	IdentifierDeclType	int [ N_ELEM ]		1043364	0					
ANR	1043370	Identifier	alpha		1043364	1					
ANR	1043371	Identifier	N_ELEM		1043364	2					
ANR	1043372	IdentifierDeclStatement	int i ;	169:1:5297:5303	1043364	1	True				
ANR	1043373	IdentifierDecl	i		1043364	0					
ANR	1043374	IdentifierDeclType	int		1043364	0					
ANR	1043375	Identifier	i		1043364	1					
ANR	1043376	ForStatement	for ( i = 0 ; i < N_ELEM ; i ++ )		1043364	2					
ANR	1043377	ForInit	i = 0 ;	172:6:5349:5352	1043364	0	True				
ANR	1043378	AssignmentExpression	i = 0		1043364	0		=			
ANR	1043379	Identifier	i		1043364	0					
ANR	1043380	PrimaryExpression	0		1043364	1					
ANR	1043381	Condition	i < N_ELEM	172:11:5354:5361	1043364	1	True				
ANR	1043382	RelationalExpression	i < N_ELEM		1043364	0		<			
ANR	1043383	Identifier	i		1043364	0					
ANR	1043384	Identifier	N_ELEM		1043364	1					
ANR	1043385	PostIncDecOperationExpression	i ++	172:21:5364:5366	1043364	2	True				
ANR	1043386	Identifier	i		1043364	0					
ANR	1043387	IncDec	++		1043364	1					
ANR	1043388	CompoundStatement		6:27:96:96	1043364	3					
ANR	1043389	IfStatement	if ( pattern [ i ] == STAR )		1043364	0					
ANR	1043390	Condition	pattern [ i ] == STAR	173:6:5378:5395	1043364	0	True				
ANR	1043391	EqualityExpression	pattern [ i ] == STAR		1043364	0		==			
ANR	1043392	ArrayIndexing	pattern [ i ]		1043364	0					
ANR	1043393	Identifier	pattern		1043364	0					
ANR	1043394	Identifier	i		1043364	1					
ANR	1043395	Identifier	STAR		1043364	1					
ANR	1043396	CompoundStatement		7:27:125:125	1043364	1					
ANR	1043397	ExpressionStatement	alpha [ i ] = prev [ i ]	174:3:5404:5422	1043364	0	True				
ANR	1043398	AssignmentExpression	alpha [ i ] = prev [ i ]		1043364	0		=			
ANR	1043399	ArrayIndexing	alpha [ i ]		1043364	0					
ANR	1043400	Identifier	alpha		1043364	0					
ANR	1043401	Identifier	i		1043364	1					
ANR	1043402	ArrayIndexing	prev [ i ]		1043364	1					
ANR	1043403	Identifier	prev		1043364	0					
ANR	1043404	Identifier	i		1043364	1					
ANR	1043405	ElseStatement	else		1043364	0					
ANR	1043406	CompoundStatement		9:9:159:159	1043364	0					
ANR	1043407	ExpressionStatement	alpha [ i ] = pattern [ i ]	176:3:5438:5459	1043364	0	True				
ANR	1043408	AssignmentExpression	alpha [ i ] = pattern [ i ]		1043364	0		=			
ANR	1043409	ArrayIndexing	alpha [ i ]		1043364	0					
ANR	1043410	Identifier	alpha		1043364	0					
ANR	1043411	Identifier	i		1043364	1					
ANR	1043412	ArrayIndexing	pattern [ i ]		1043364	1					
ANR	1043413	Identifier	pattern		1043364	0					
ANR	1043414	Identifier	i		1043364	1					
ANR	1043415	IfStatement	"if ( before ( alpha , prev ) )"		1043364	3					
ANR	1043416	Condition	"before ( alpha , prev )"	181:5:5538:5555	1043364	0	True				
ANR	1043417	CallExpression	"before ( alpha , prev )"		1043364	0					
ANR	1043418	Callee	before		1043364	0					
ANR	1043419	Identifier	before		1043364	0					
ANR	1043420	ArgumentList	alpha		1043364	1					
ANR	1043421	Argument	alpha		1043364	0					
ANR	1043422	Identifier	alpha		1043364	0					
ANR	1043423	Argument	prev		1043364	1					
ANR	1043424	Identifier	prev		1043364	0					
ANR	1043425	CompoundStatement		15:26:285:285	1043364	1					
ANR	1043426	ExpressionStatement	"i = next_rightmost ( pattern , N_ELEM )"	182:2:5563:5600	1043364	0	True				
ANR	1043427	AssignmentExpression	"i = next_rightmost ( pattern , N_ELEM )"		1043364	0		=			
ANR	1043428	Identifier	i		1043364	0					
ANR	1043429	CallExpression	"next_rightmost ( pattern , N_ELEM )"		1043364	1					
ANR	1043430	Callee	next_rightmost		1043364	0					
ANR	1043431	Identifier	next_rightmost		1043364	0					
ANR	1043432	ArgumentList	pattern		1043364	1					
ANR	1043433	Argument	pattern		1043364	0					
ANR	1043434	Identifier	pattern		1043364	0					
ANR	1043435	Argument	N_ELEM		1043364	1					
ANR	1043436	Identifier	N_ELEM		1043364	0					
ANR	1043437	IfStatement	if ( i < 0 )		1043364	1					
ANR	1043438	Condition	i < 0	183:6:5608:5612	1043364	0	True				
ANR	1043439	RelationalExpression	i < 0		1043364	0		<			
ANR	1043440	Identifier	i		1043364	0					
ANR	1043441	PrimaryExpression	0		1043364	1					
ANR	1043442	CompoundStatement		17:14:342:342	1043364	1					
ANR	1043443	ReturnStatement	return FALSE ;	184:3:5621:5633	1043364	0	True				
ANR	1043444	Identifier	FALSE		1043364	0					
ANR	1043445	ForStatement	for ( ; ; )		1043364	2					
ANR	1043446	CompoundStatement		20:10:375:375	1043364	0					
ANR	1043447	ExpressionStatement	alpha [ i ] += 1	187:3:5654:5667	1043364	0	True				
ANR	1043448	AssignmentExpression	alpha [ i ] += 1		1043364	0		+=			
ANR	1043449	ArrayIndexing	alpha [ i ]		1043364	0					
ANR	1043450	Identifier	alpha		1043364	0					
ANR	1043451	Identifier	i		1043364	1					
ANR	1043452	PrimaryExpression	1		1043364	1					
ANR	1043453	IfStatement	"if ( before ( prev , alpha ) )"		1043364	1					
ANR	1043454	Condition	"before ( prev , alpha )"	188:7:5676:5693	1043364	0	True				
ANR	1043455	CallExpression	"before ( prev , alpha )"		1043364	0					
ANR	1043456	Callee	before		1043364	0					
ANR	1043457	Identifier	before		1043364	0					
ANR	1043458	ArgumentList	prev		1043364	1					
ANR	1043459	Argument	prev		1043364	0					
ANR	1043460	Identifier	prev		1043364	0					
ANR	1043461	Argument	alpha		1043364	1					
ANR	1043462	Identifier	alpha		1043364	0					
ANR	1043463	CompoundStatement		22:28:423:423	1043364	1					
ANR	1043464	BreakStatement	break ;	189:4:5703:5708	1043364	0	True				
ANR	1043465	ElseStatement	else		1043364	0					
ANR	1043466	CompoundStatement		24:10:446:446	1043364	0					
ANR	1043467	ExpressionStatement	alpha [ i ] = 0	191:4:5726:5738	1043364	0	True				
ANR	1043468	AssignmentExpression	alpha [ i ] = 0		1043364	0		=			
ANR	1043469	ArrayIndexing	alpha [ i ]		1043364	0					
ANR	1043470	Identifier	alpha		1043364	0					
ANR	1043471	Identifier	i		1043364	1					
ANR	1043472	PrimaryExpression	0		1043364	1					
ANR	1043473	ExpressionStatement	"i = next_rightmost ( pattern , i )"	192:4:5744:5776	1043364	1	True				
ANR	1043474	AssignmentExpression	"i = next_rightmost ( pattern , i )"		1043364	0		=			
ANR	1043475	Identifier	i		1043364	0					
ANR	1043476	CallExpression	"next_rightmost ( pattern , i )"		1043364	1					
ANR	1043477	Callee	next_rightmost		1043364	0					
ANR	1043478	Identifier	next_rightmost		1043364	0					
ANR	1043479	ArgumentList	pattern		1043364	1					
ANR	1043480	Argument	pattern		1043364	0					
ANR	1043481	Identifier	pattern		1043364	0					
ANR	1043482	Argument	i		1043364	1					
ANR	1043483	Identifier	i		1043364	0					
ANR	1043484	IfStatement	if ( i < 0 )		1043364	2					
ANR	1043485	Condition	i < 0	193:8:5786:5790	1043364	0	True				
ANR	1043486	RelationalExpression	i < 0		1043364	0		<			
ANR	1043487	Identifier	i		1043364	0					
ANR	1043488	PrimaryExpression	0		1043364	1					
ANR	1043489	CompoundStatement		27:16:520:520	1043364	1					
ANR	1043490	ReturnStatement	return FALSE ;	194:5:5801:5813	1043364	0	True				
ANR	1043491	Identifier	FALSE		1043364	0					
ANR	1043492	ReturnStatement	"return before ( alpha , now ) ;"	200:1:5835:5862	1043364	4	True				
ANR	1043493	CallExpression	"before ( alpha , now )"		1043364	0					
ANR	1043494	Callee	before		1043364	0					
ANR	1043495	Identifier	before		1043364	0					
ANR	1043496	ArgumentList	alpha		1043364	1					
ANR	1043497	Argument	alpha		1043364	0					
ANR	1043498	Identifier	alpha		1043364	0					
ANR	1043499	Argument	now		1043364	1					
ANR	1043500	Identifier	now		1043364	0					
ANR	1043501	ReturnType	static int		1043364	1					
ANR	1043502	Identifier	event_due		1043364	2					
ANR	1043503	ParameterList	"int pattern [ ] , int prev [ ] , int now [ ]"		1043364	3					
ANR	1043504	Parameter	int pattern [ ]	166:11:5234:5246	1043364	0	True				
ANR	1043505	ParameterType	int [ ]		1043364	0					
ANR	1043506	Identifier	pattern		1043364	1					
ANR	1043507	Parameter	int prev [ ]	166:26:5249:5258	1043364	1	True				
ANR	1043508	ParameterType	int [ ]		1043364	0					
ANR	1043509	Identifier	prev		1043364	1					
ANR	1043510	Parameter	int now [ ]	166:38:5261:5269	1043364	2	True				
ANR	1043511	ParameterType	int [ ]		1043364	0					
ANR	1043512	Identifier	now		1043364	1					
ANR	1043513	CFGEntryNode	ENTRY		1043364		True				
ANR	1043514	CFGExitNode	EXIT		1043364		True				
ANR	1043515	InfiniteForNode	true		1043364		True				
ANR	1043516	Symbol	* pattern		1043364						
ANR	1043517	Symbol	* alpha		1043364						
ANR	1043518	Symbol	before		1043364						
ANR	1043519	Symbol	prev		1043364						
ANR	1043520	Symbol	pattern		1043364						
ANR	1043521	Symbol	i		1043364						
ANR	1043522	Symbol	* prev		1043364						
ANR	1043523	Symbol	* i		1043364						
ANR	1043524	Symbol	STAR		1043364						
ANR	1043525	Symbol	N_ELEM		1043364						
ANR	1043526	Symbol	now		1043364						
ANR	1043527	Symbol	alpha		1043364						
ANR	1043528	Symbol	next_rightmost		1043364						
ANR	1043529	Symbol	FALSE		1043364						
ANR	1043530	Function	before	206:0:5929:6117							
ANR	1043531	FunctionDef	"before (int t1 [ ] , int t2 [ ])"		1043530	0					
ANR	1043532	CompoundStatement		209:0:5969:6117	1043530	0					
ANR	1043533	IdentifierDeclStatement	int i ;	210:1:5972:5978	1043530	0	True				
ANR	1043534	IdentifierDecl	i		1043530	0					
ANR	1043535	IdentifierDeclType	int		1043530	0					
ANR	1043536	Identifier	i		1043530	1					
ANR	1043537	ForStatement	for ( i = 0 ; i < N_ELEM ; i ++ )		1043530	1					
ANR	1043538	ForInit	i = 0 ;	212:6:5987:5990	1043530	0	True				
ANR	1043539	AssignmentExpression	i = 0		1043530	0		=			
ANR	1043540	Identifier	i		1043530	0					
ANR	1043541	PrimaryExpression	0		1043530	1					
ANR	1043542	Condition	i < N_ELEM	212:11:5992:5999	1043530	1	True				
ANR	1043543	RelationalExpression	i < N_ELEM		1043530	0		<			
ANR	1043544	Identifier	i		1043530	0					
ANR	1043545	Identifier	N_ELEM		1043530	1					
ANR	1043546	PostIncDecOperationExpression	i ++	212:21:6002:6004	1043530	2	True				
ANR	1043547	Identifier	i		1043530	0					
ANR	1043548	IncDec	++		1043530	1					
ANR	1043549	CompoundStatement		4:27:38:38	1043530	3					
ANR	1043550	IfStatement	if ( t1 [ i ] < t2 [ i ] )		1043530	0					
ANR	1043551	Condition	t1 [ i ] < t2 [ i ]	213:6:6016:6028	1043530	0	True				
ANR	1043552	RelationalExpression	t1 [ i ] < t2 [ i ]		1043530	0		<			
ANR	1043553	ArrayIndexing	t1 [ i ]		1043530	0					
ANR	1043554	Identifier	t1		1043530	0					
ANR	1043555	Identifier	i		1043530	1					
ANR	1043556	ArrayIndexing	t2 [ i ]		1043530	1					
ANR	1043557	Identifier	t2		1043530	0					
ANR	1043558	Identifier	i		1043530	1					
ANR	1043559	CompoundStatement		5:22:62:62	1043530	1					
ANR	1043560	ReturnStatement	return TRUE ;	214:3:6037:6048	1043530	0	True				
ANR	1043561	Identifier	TRUE		1043530	0					
ANR	1043562	IfStatement	if ( t1 [ i ] > t2 [ i ] )		1043530	1					
ANR	1043563	Condition	t1 [ i ] > t2 [ i ]	216:6:6060:6072	1043530	0	True				
ANR	1043564	RelationalExpression	t1 [ i ] > t2 [ i ]		1043530	0		>			
ANR	1043565	ArrayIndexing	t1 [ i ]		1043530	0					
ANR	1043566	Identifier	t1		1043530	0					
ANR	1043567	Identifier	i		1043530	1					
ANR	1043568	ArrayIndexing	t2 [ i ]		1043530	1					
ANR	1043569	Identifier	t2		1043530	0					
ANR	1043570	Identifier	i		1043530	1					
ANR	1043571	CompoundStatement		8:22:106:106	1043530	1					
ANR	1043572	ReturnStatement	return FALSE ;	217:3:6081:6093	1043530	0	True				
ANR	1043573	Identifier	FALSE		1043530	0					
ANR	1043574	ReturnStatement	return FALSE ;	220:1:6103:6115	1043530	2	True				
ANR	1043575	Identifier	FALSE		1043530	0					
ANR	1043576	ReturnType	static int		1043530	1					
ANR	1043577	Identifier	before		1043530	2					
ANR	1043578	ParameterList	"int t1 [ ] , int t2 [ ]"		1043530	3					
ANR	1043579	Parameter	int t1 [ ]	208:8:5948:5955	1043530	0	True				
ANR	1043580	ParameterType	int [ ]		1043530	0					
ANR	1043581	Identifier	t1		1043530	1					
ANR	1043582	Parameter	int t2 [ ]	208:18:5958:5965	1043530	1	True				
ANR	1043583	ParameterType	int [ ]		1043530	0					
ANR	1043584	Identifier	t2		1043530	1					
ANR	1043585	CFGEntryNode	ENTRY		1043530		True				
ANR	1043586	CFGExitNode	EXIT		1043530		True				
ANR	1043587	Symbol	* t1		1043530						
ANR	1043588	Symbol	* i		1043530						
ANR	1043589	Symbol	N_ELEM		1043530						
ANR	1043590	Symbol	* t2		1043530						
ANR	1043591	Symbol	i		1043530						
ANR	1043592	Symbol	TRUE		1043530						
ANR	1043593	Symbol	FALSE		1043530						
ANR	1043594	Symbol	t1		1043530						
ANR	1043595	Symbol	t2		1043530						
ANR	1043596	Function	next_rightmost	227:0:6273:6413							
ANR	1043597	FunctionDef	"next_rightmost (int pattern [ ] , int i)"		1043596	0					
ANR	1043598	CompoundStatement		230:0:6323:6413	1043596	0					
ANR	1043599	ForStatement	for ( i -- ; i >= 0 ; i -- )		1043596	0					
ANR	1043600	ForInit	i -- ;	231:6:6331:6334	1043596	0	True				
ANR	1043601	PostIncDecOperationExpression	i --		1043596	0					
ANR	1043602	Identifier	i		1043596	0					
ANR	1043603	IncDec	--		1043596	1					
ANR	1043604	Condition	i >= 0	231:11:6336:6341	1043596	1	True				
ANR	1043605	RelationalExpression	i >= 0		1043596	0		>=			
ANR	1043606	Identifier	i		1043596	0					
ANR	1043607	PrimaryExpression	0		1043596	1					
ANR	1043608	PostIncDecOperationExpression	i --	231:19:6344:6346	1043596	2	True				
ANR	1043609	Identifier	i		1043596	0					
ANR	1043610	IncDec	--		1043596	1					
ANR	1043611	CompoundStatement		2:25:26:26	1043596	3					
ANR	1043612	IfStatement	if ( pattern [ i ] == STAR )		1043596	0					
ANR	1043613	Condition	pattern [ i ] == STAR	232:6:6358:6375	1043596	0	True				
ANR	1043614	EqualityExpression	pattern [ i ] == STAR		1043596	0		==			
ANR	1043615	ArrayIndexing	pattern [ i ]		1043596	0					
ANR	1043616	Identifier	pattern		1043596	0					
ANR	1043617	Identifier	i		1043596	1					
ANR	1043618	Identifier	STAR		1043596	1					
ANR	1043619	CompoundStatement		3:27:55:55	1043596	1					
ANR	1043620	ReturnStatement	return i ;	233:3:6384:6392	1043596	0	True				
ANR	1043621	Identifier	i		1043596	0					
ANR	1043622	ReturnStatement	return - 1 ;	236:1:6402:6411	1043596	1	True				
ANR	1043623	UnaryOperationExpression	- 1		1043596	0					
ANR	1043624	UnaryOperator	-		1043596	0					
ANR	1043625	PrimaryExpression	1		1043596	1					
ANR	1043626	ReturnType	static int		1043596	1					
ANR	1043627	Identifier	next_rightmost		1043596	2					
ANR	1043628	ParameterList	"int pattern [ ] , int i"		1043596	3					
ANR	1043629	Parameter	int pattern [ ]	229:16:6300:6312	1043596	0	True				
ANR	1043630	ParameterType	int [ ]		1043596	0					
ANR	1043631	Identifier	pattern		1043596	1					
ANR	1043632	Parameter	int i	229:31:6315:6319	1043596	1	True				
ANR	1043633	ParameterType	int		1043596	0					
ANR	1043634	Identifier	i		1043596	1					
ANR	1043635	CFGEntryNode	ENTRY		1043596		True				
ANR	1043636	CFGExitNode	EXIT		1043596		True				
ANR	1043637	Symbol	* pattern		1043596						
ANR	1043638	Symbol	* i		1043596						
ANR	1043639	Symbol	STAR		1043596						
ANR	1043640	Symbol	pattern		1043596						
ANR	1043641	Symbol	i		1043596						
ANR	1043642	Function	get_moment	242:0:6464:6736							
ANR	1043643	FunctionDef	get_moment (int cur [ ])		1043642	0					
ANR	1043644	CompoundStatement		244:0:6500:6736	1043642	0					
ANR	1043645	IdentifierDeclStatement	struct tm * tm ;	245:1:6503:6516	1043642	0	True				
ANR	1043646	IdentifierDecl	* tm		1043642	0					
ANR	1043647	IdentifierDeclType	struct tm *		1043642	0					
ANR	1043648	Identifier	tm		1043642	1					
ANR	1043649	IdentifierDeclStatement	time_t curr_time ;	246:1:6519:6535	1043642	1	True				
ANR	1043650	IdentifierDecl	curr_time		1043642	0					
ANR	1043651	IdentifierDeclType	time_t		1043642	0					
ANR	1043652	Identifier	curr_time		1043642	1					
ANR	1043653	ExpressionStatement	( void ) time ( & curr_time )	248:1:6539:6563	1043642	2	True				
ANR	1043654	CastExpression	( void ) time ( & curr_time )		1043642	0					
ANR	1043655	CastTarget	void		1043642	0					
ANR	1043656	CallExpression	time ( & curr_time )		1043642	1					
ANR	1043657	Callee	time		1043642	0					
ANR	1043658	Identifier	time		1043642	0					
ANR	1043659	ArgumentList	& curr_time		1043642	1					
ANR	1043660	Argument	& curr_time		1043642	0					
ANR	1043661	UnaryOperationExpression	& curr_time		1043642	0					
ANR	1043662	UnaryOperator	&		1043642	0					
ANR	1043663	Identifier	curr_time		1043642	1					
ANR	1043664	ExpressionStatement	tm = localtime ( & curr_time )	249:1:6566:6594	1043642	3	True				
ANR	1043665	AssignmentExpression	tm = localtime ( & curr_time )		1043642	0		=			
ANR	1043666	Identifier	tm		1043642	0					
ANR	1043667	CallExpression	localtime ( & curr_time )		1043642	1					
ANR	1043668	Callee	localtime		1043642	0					
ANR	1043669	Identifier	localtime		1043642	0					
ANR	1043670	ArgumentList	& curr_time		1043642	1					
ANR	1043671	Argument	& curr_time		1043642	0					
ANR	1043672	UnaryOperationExpression	& curr_time		1043642	0					
ANR	1043673	UnaryOperator	&		1043642	0					
ANR	1043674	Identifier	curr_time		1043642	1					
ANR	1043675	ExpressionStatement	cur [ CMONTH ] = tm -> tm_mon + 1	250:1:6597:6625	1043642	4	True				
ANR	1043676	AssignmentExpression	cur [ CMONTH ] = tm -> tm_mon + 1		1043642	0		=			
ANR	1043677	ArrayIndexing	cur [ CMONTH ]		1043642	0					
ANR	1043678	Identifier	cur		1043642	0					
ANR	1043679	Identifier	CMONTH		1043642	1					
ANR	1043680	AdditiveExpression	tm -> tm_mon + 1		1043642	1		+			
ANR	1043681	PtrMemberAccess	tm -> tm_mon		1043642	0					
ANR	1043682	Identifier	tm		1043642	0					
ANR	1043683	Identifier	tm_mon		1043642	1					
ANR	1043684	PrimaryExpression	1		1043642	1					
ANR	1043685	ExpressionStatement	cur [ CDAY ] = tm -> tm_mday	251:1:6628:6651	1043642	5	True				
ANR	1043686	AssignmentExpression	cur [ CDAY ] = tm -> tm_mday		1043642	0		=			
ANR	1043687	ArrayIndexing	cur [ CDAY ]		1043642	0					
ANR	1043688	Identifier	cur		1043642	0					
ANR	1043689	Identifier	CDAY		1043642	1					
ANR	1043690	PtrMemberAccess	tm -> tm_mday		1043642	1					
ANR	1043691	Identifier	tm		1043642	0					
ANR	1043692	Identifier	tm_mday		1043642	1					
ANR	1043693	ExpressionStatement	cur [ CHOUR ] = tm -> tm_hour	252:1:6654:6678	1043642	6	True				
ANR	1043694	AssignmentExpression	cur [ CHOUR ] = tm -> tm_hour		1043642	0		=			
ANR	1043695	ArrayIndexing	cur [ CHOUR ]		1043642	0					
ANR	1043696	Identifier	cur		1043642	0					
ANR	1043697	Identifier	CHOUR		1043642	1					
ANR	1043698	PtrMemberAccess	tm -> tm_hour		1043642	1					
ANR	1043699	Identifier	tm		1043642	0					
ANR	1043700	Identifier	tm_hour		1043642	1					
ANR	1043701	ExpressionStatement	cur [ CMINUTE ] = tm -> tm_min	253:1:6681:6706	1043642	7	True				
ANR	1043702	AssignmentExpression	cur [ CMINUTE ] = tm -> tm_min		1043642	0		=			
ANR	1043703	ArrayIndexing	cur [ CMINUTE ]		1043642	0					
ANR	1043704	Identifier	cur		1043642	0					
ANR	1043705	Identifier	CMINUTE		1043642	1					
ANR	1043706	PtrMemberAccess	tm -> tm_min		1043642	1					
ANR	1043707	Identifier	tm		1043642	0					
ANR	1043708	Identifier	tm_min		1043642	1					
ANR	1043709	ExpressionStatement	cur [ CSECOND ] = tm -> tm_sec	254:1:6709:6734	1043642	8	True				
ANR	1043710	AssignmentExpression	cur [ CSECOND ] = tm -> tm_sec		1043642	0		=			
ANR	1043711	ArrayIndexing	cur [ CSECOND ]		1043642	0					
ANR	1043712	Identifier	cur		1043642	0					
ANR	1043713	Identifier	CSECOND		1043642	1					
ANR	1043714	PtrMemberAccess	tm -> tm_sec		1043642	1					
ANR	1043715	Identifier	tm		1043642	0					
ANR	1043716	Identifier	tm_sec		1043642	1					
ANR	1043717	ReturnType	static void		1043642	1					
ANR	1043718	Identifier	get_moment		1043642	2					
ANR	1043719	ParameterList	int cur [ ]		1043642	3					
ANR	1043720	Parameter	int cur [ ]	243:12:6488:6496	1043642	0	True				
ANR	1043721	ParameterType	int [ ]		1043642	0					
ANR	1043722	Identifier	cur		1043642	1					
ANR	1043723	CFGEntryNode	ENTRY		1043642		True				
ANR	1043724	CFGExitNode	EXIT		1043642		True				
ANR	1043725	Symbol	localtime		1043642						
ANR	1043726	Symbol	cur		1043642						
ANR	1043727	Symbol	& curr_time		1043642						
ANR	1043728	Symbol	* CDAY		1043642						
ANR	1043729	Symbol	* CHOUR		1043642						
ANR	1043730	Symbol	CDAY		1043642						
ANR	1043731	Symbol	CMINUTE		1043642						
ANR	1043732	Symbol	CMONTH		1043642						
ANR	1043733	Symbol	tm -> tm_mon		1043642						
ANR	1043734	Symbol	* CMINUTE		1043642						
ANR	1043735	Symbol	* CSECOND		1043642						
ANR	1043736	Symbol	* cur		1043642						
ANR	1043737	Symbol	CHOUR		1043642						
ANR	1043738	Symbol	tm -> tm_mday		1043642						
ANR	1043739	Symbol	tm -> tm_min		1043642						
ANR	1043740	Symbol	tm -> tm_sec		1043642						
ANR	1043741	Symbol	CSECOND		1043642						
ANR	1043742	Symbol	tm		1043642						
ANR	1043743	Symbol	curr_time		1043642						
ANR	1043744	Symbol	tm -> tm_hour		1043642						
ANR	1043745	Symbol	* CMONTH		1043642						
ANR	1043746	Symbol	* tm		1043642						
