command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4158905	File	data/converged/CVE-2011-4930_htcondor/src_condor_tests_job_ckpt_dup_std.c								
ANR	4158906	DeclStmt									
ANR	4158907	Decl							void	void ( void )	abort_me
ANR	4158908	DeclStmt									
ANR	4158909	Decl							void	"void ( int a , int b )"	check
ANR	4158910	Function	usage	40:0:1066:1161							
ANR	4158911	FunctionDef	usage (char * my_name)		4158910	0					
ANR	4158912	CompoundStatement		41:0:1094:1161	4158910	0					
ANR	4158913	ExpressionStatement	"fprintf ( stderr , ""Usage: %s filename\\n"" , my_name )"	42:1:1097:1147	4158910	0	True				
ANR	4158914	CallExpression	"fprintf ( stderr , ""Usage: %s filename\\n"" , my_name )"		4158910	0					
ANR	4158915	Callee	fprintf		4158910	0					
ANR	4158916	Identifier	fprintf		4158910	0					
ANR	4158917	ArgumentList	stderr		4158910	1					
ANR	4158918	Argument	stderr		4158910	0					
ANR	4158919	Identifier	stderr		4158910	0					
ANR	4158920	Argument	"""Usage: %s filename\\n"""		4158910	1					
ANR	4158921	PrimaryExpression	"""Usage: %s filename\\n"""		4158910	0					
ANR	4158922	Argument	my_name		4158910	2					
ANR	4158923	Identifier	my_name		4158910	0					
ANR	4158924	ExpressionStatement	exit ( 1 )	43:1:1150:1159	4158910	1	True				
ANR	4158925	CallExpression	exit ( 1 )		4158910	0					
ANR	4158926	Callee	exit		4158910	0					
ANR	4158927	Identifier	exit		4158910	0					
ANR	4158928	ArgumentList	1		4158910	1					
ANR	4158929	Argument	1		4158910	0					
ANR	4158930	PrimaryExpression	1		4158910	0					
ANR	4158931	ReturnType	void		4158910	1					
ANR	4158932	Identifier	usage		4158910	2					
ANR	4158933	ParameterList	char * my_name		4158910	3					
ANR	4158934	Parameter	char * my_name	40:12:1078:1090	4158910	0	True				
ANR	4158935	ParameterType	char *		4158910	0					
ANR	4158936	Identifier	my_name		4158910	1					
ANR	4158937	CFGEntryNode	ENTRY		4158910		True				
ANR	4158938	CFGExitNode	EXIT		4158910		True				
ANR	4158939	Symbol	my_name		4158910						
ANR	4158940	Symbol	stderr		4158910						
ANR	4158941	Function	main	46:0:1164:2897							
ANR	4158942	FunctionDef	"main (int argc , char * * argv)"		4158941	0					
ANR	4158943	CompoundStatement		48:0:1198:2897	4158941	0					
ANR	4158944	IdentifierDeclStatement	"int a , b , c , x , d ;"	49:1:1201:1219	4158941	0	True				
ANR	4158945	IdentifierDecl	a		4158941	0					
ANR	4158946	IdentifierDeclType	int		4158941	0					
ANR	4158947	Identifier	a		4158941	1					
ANR	4158948	IdentifierDecl	b		4158941	1					
ANR	4158949	IdentifierDeclType	int		4158941	0					
ANR	4158950	Identifier	b		4158941	1					
ANR	4158951	IdentifierDecl	c		4158941	2					
ANR	4158952	IdentifierDeclType	int		4158941	0					
ANR	4158953	Identifier	c		4158941	1					
ANR	4158954	IdentifierDecl	x		4158941	3					
ANR	4158955	IdentifierDeclType	int		4158941	0					
ANR	4158956	Identifier	x		4158941	1					
ANR	4158957	IdentifierDecl	d		4158941	4					
ANR	4158958	IdentifierDeclType	int		4158941	0					
ANR	4158959	Identifier	d		4158941	1					
ANR	4158960	Statement	undef	51:1:1223:1227	4158941	1	True				
ANR	4158961	Statement	WAIT_FOR_DEBUGGER	51:7:1229:1245	4158941	2	True				
ANR	4158962	IdentifierDeclStatement	int wait_up = 1 ;	53:1:1279:1295	4158941	3	True				
ANR	4158963	IdentifierDecl	wait_up = 1		4158941	0					
ANR	4158964	IdentifierDeclType	int		4158941	0					
ANR	4158965	Identifier	wait_up		4158941	1					
ANR	4158966	AssignmentExpression	wait_up = 1		4158941	2		=			
ANR	4158967	Identifier	wait_up		4158941	0					
ANR	4158968	PrimaryExpression	1		4158941	1					
ANR	4158969	WhileStatement	while ( wait_up )		4158941	4					
ANR	4158970	Condition	wait_up	54:8:1305:1311	4158941	0	True				
ANR	4158971	Identifier	wait_up		4158941	0					
ANR	4158972	ExpressionStatement		55:2:1317:1317	4158941	1	True				
ANR	4158973	IfStatement	if ( argc != 2 )		4158941	5					
ANR	4158974	Condition	argc != 2	58:5:1332:1340	4158941	0	True				
ANR	4158975	EqualityExpression	argc != 2		4158941	0		!=			
ANR	4158976	Identifier	argc		4158941	0					
ANR	4158977	PrimaryExpression	2		4158941	1					
ANR	4158978	CompoundStatement		11:17:145:145	4158941	1					
ANR	4158979	ExpressionStatement	usage ( argv [ 0 ] )	59:2:1348:1364	4158941	0	True				
ANR	4158980	CallExpression	usage ( argv [ 0 ] )		4158941	0					
ANR	4158981	Callee	usage		4158941	0					
ANR	4158982	Identifier	usage		4158941	0					
ANR	4158983	ArgumentList	argv [ 0 ]		4158941	1					
ANR	4158984	Argument	argv [ 0 ]		4158941	0					
ANR	4158985	ArrayIndexing	argv [ 0 ]		4158941	0					
ANR	4158986	Identifier	argv		4158941	0					
ANR	4158987	PrimaryExpression	0		4158941	1					
ANR	4158988	ExpressionStatement	"x = open ( argv [ 1 ] , O_RDONLY , 0 )"	65:1:1483:1515	4158941	6	True				
ANR	4158989	AssignmentExpression	"x = open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	0		=			
ANR	4158990	Identifier	x		4158941	0					
ANR	4158991	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	1					
ANR	4158992	Callee	open		4158941	0					
ANR	4158993	Identifier	open		4158941	0					
ANR	4158994	ArgumentList	argv [ 1 ]		4158941	1					
ANR	4158995	Argument	argv [ 1 ]		4158941	0					
ANR	4158996	ArrayIndexing	argv [ 1 ]		4158941	0					
ANR	4158997	Identifier	argv		4158941	0					
ANR	4158998	PrimaryExpression	1		4158941	1					
ANR	4158999	Argument	O_RDONLY		4158941	1					
ANR	4159000	Identifier	O_RDONLY		4158941	0					
ANR	4159001	Argument	0		4158941	2					
ANR	4159002	PrimaryExpression	0		4158941	0					
ANR	4159003	ExpressionStatement	"a = open ( argv [ 1 ] , O_RDONLY , 0 )"	66:1:1538:1570	4158941	7	True				
ANR	4159004	AssignmentExpression	"a = open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	0		=			
ANR	4159005	Identifier	a		4158941	0					
ANR	4159006	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	1					
ANR	4159007	Callee	open		4158941	0					
ANR	4159008	Identifier	open		4158941	0					
ANR	4159009	ArgumentList	argv [ 1 ]		4158941	1					
ANR	4159010	Argument	argv [ 1 ]		4158941	0					
ANR	4159011	ArrayIndexing	argv [ 1 ]		4158941	0					
ANR	4159012	Identifier	argv		4158941	0					
ANR	4159013	PrimaryExpression	1		4158941	1					
ANR	4159014	Argument	O_RDONLY		4158941	1					
ANR	4159015	Identifier	O_RDONLY		4158941	0					
ANR	4159016	Argument	0		4158941	2					
ANR	4159017	PrimaryExpression	0		4158941	0					
ANR	4159018	ExpressionStatement	"b = open ( argv [ 1 ] , O_RDONLY , 0 )"	67:1:1593:1625	4158941	8	True				
ANR	4159019	AssignmentExpression	"b = open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	0		=			
ANR	4159020	Identifier	b		4158941	0					
ANR	4159021	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		4158941	1					
ANR	4159022	Callee	open		4158941	0					
ANR	4159023	Identifier	open		4158941	0					
ANR	4159024	ArgumentList	argv [ 1 ]		4158941	1					
ANR	4159025	Argument	argv [ 1 ]		4158941	0					
ANR	4159026	ArrayIndexing	argv [ 1 ]		4158941	0					
ANR	4159027	Identifier	argv		4158941	0					
ANR	4159028	PrimaryExpression	1		4158941	1					
ANR	4159029	Argument	O_RDONLY		4158941	1					
ANR	4159030	Identifier	O_RDONLY		4158941	0					
ANR	4159031	Argument	0		4158941	2					
ANR	4159032	PrimaryExpression	0		4158941	0					
ANR	4159033	ExpressionStatement	c = dup ( b )	68:1:1648:1660	4158941	9	True				
ANR	4159034	AssignmentExpression	c = dup ( b )		4158941	0		=			
ANR	4159035	Identifier	c		4158941	0					
ANR	4159036	CallExpression	dup ( b )		4158941	1					
ANR	4159037	Callee	dup		4158941	0					
ANR	4159038	Identifier	dup		4158941	0					
ANR	4159039	ArgumentList	b		4158941	1					
ANR	4159040	Argument	b		4158941	0					
ANR	4159041	Identifier	b		4158941	0					
ANR	4159042	ExpressionStatement	close ( a )	69:1:1694:1704	4158941	10	True				
ANR	4159043	CallExpression	close ( a )		4158941	0					
ANR	4159044	Callee	close		4158941	0					
ANR	4159045	Identifier	close		4158941	0					
ANR	4159046	ArgumentList	a		4158941	1					
ANR	4159047	Argument	a		4158941	0					
ANR	4159048	Identifier	a		4158941	0					
ANR	4159049	ExpressionStatement	a = dup ( b )	70:1:1733:1745	4158941	11	True				
ANR	4159050	AssignmentExpression	a = dup ( b )		4158941	0		=			
ANR	4159051	Identifier	a		4158941	0					
ANR	4159052	CallExpression	dup ( b )		4158941	1					
ANR	4159053	Callee	dup		4158941	0					
ANR	4159054	Identifier	dup		4158941	0					
ANR	4159055	ArgumentList	b		4158941	1					
ANR	4159056	Argument	b		4158941	0					
ANR	4159057	Identifier	b		4158941	0					
ANR	4159058	ExpressionStatement	close ( b )	71:1:1779:1789	4158941	12	True				
ANR	4159059	CallExpression	close ( b )		4158941	0					
ANR	4159060	Callee	close		4158941	0					
ANR	4159061	Identifier	close		4158941	0					
ANR	4159062	ArgumentList	b		4158941	1					
ANR	4159063	Argument	b		4158941	0					
ANR	4159064	Identifier	b		4158941	0					
ANR	4159065	ExpressionStatement	close ( x )	72:1:1818:1828	4158941	13	True				
ANR	4159066	CallExpression	close ( x )		4158941	0					
ANR	4159067	Callee	close		4158941	0					
ANR	4159068	Identifier	close		4158941	0					
ANR	4159069	ArgumentList	x		4158941	1					
ANR	4159070	Argument	x		4158941	0					
ANR	4159071	Identifier	x		4158941	0					
ANR	4159072	ExpressionStatement	"d = dup2 ( c , 15 )"	73:4:1860:1874	4158941	14	True				
ANR	4159073	AssignmentExpression	"d = dup2 ( c , 15 )"		4158941	0		=			
ANR	4159074	Identifier	d		4158941	0					
ANR	4159075	CallExpression	"dup2 ( c , 15 )"		4158941	1					
ANR	4159076	Callee	dup2		4158941	0					
ANR	4159077	Identifier	dup2		4158941	0					
ANR	4159078	ArgumentList	c		4158941	1					
ANR	4159079	Argument	c		4158941	0					
ANR	4159080	Identifier	c		4158941	0					
ANR	4159081	Argument	15		4158941	1					
ANR	4159082	PrimaryExpression	15		4158941	0					
ANR	4159083	IfStatement	if ( a == c )		4158941	15					
ANR	4159084	Condition	a == c	94:5:2354:2359	4158941	0	True				
ANR	4159085	EqualityExpression	a == c		4158941	0		==			
ANR	4159086	Identifier	a		4158941	0					
ANR	4159087	Identifier	c		4158941	1					
ANR	4159088	CompoundStatement		47:14:1164:1164	4158941	1					
ANR	4159089	ExpressionStatement	"printf ( ""Error: a and c are the same: %d\\n"" , a )"	95:2:2367:2415	4158941	0	True				
ANR	4159090	CallExpression	"printf ( ""Error: a and c are the same: %d\\n"" , a )"		4158941	0					
ANR	4159091	Callee	printf		4158941	0					
ANR	4159092	Identifier	printf		4158941	0					
ANR	4159093	ArgumentList	"""Error: a and c are the same: %d\\n"""		4158941	1					
ANR	4159094	Argument	"""Error: a and c are the same: %d\\n"""		4158941	0					
ANR	4159095	PrimaryExpression	"""Error: a and c are the same: %d\\n"""		4158941	0					
ANR	4159096	Argument	a		4158941	1					
ANR	4159097	Identifier	a		4158941	0					
ANR	4159098	ExpressionStatement	abort_me ( )	96:2:2419:2429	4158941	1	True				
ANR	4159099	CallExpression	abort_me ( )		4158941	0					
ANR	4159100	Callee	abort_me		4158941	0					
ANR	4159101	Identifier	abort_me		4158941	0					
ANR	4159102	ArgumentList			4158941	1					
ANR	4159103	ExpressionStatement	exit ( 1 )	97:2:2433:2442	4158941	2	True				
ANR	4159104	CallExpression	exit ( 1 )		4158941	0					
ANR	4159105	Callee	exit		4158941	0					
ANR	4159106	Identifier	exit		4158941	0					
ANR	4159107	ArgumentList	1		4158941	1					
ANR	4159108	Argument	1		4158941	0					
ANR	4159109	PrimaryExpression	1		4158941	0					
ANR	4159110	IfStatement	if ( d != 15 )		4158941	16					
ANR	4159111	Condition	d != 15	101:5:2490:2496	4158941	0	True				
ANR	4159112	EqualityExpression	d != 15		4158941	0		!=			
ANR	4159113	Identifier	d		4158941	0					
ANR	4159114	PrimaryExpression	15		4158941	1					
ANR	4159115	CompoundStatement		54:15:1301:1301	4158941	1					
ANR	4159116	ExpressionStatement	"printf ( ""Error: d's not 15, it's %d\\n"" , d )"	102:2:2504:2547	4158941	0	True				
ANR	4159117	CallExpression	"printf ( ""Error: d's not 15, it's %d\\n"" , d )"		4158941	0					
ANR	4159118	Callee	printf		4158941	0					
ANR	4159119	Identifier	printf		4158941	0					
ANR	4159120	ArgumentList	"""Error: d's not 15, it's %d\\n"""		4158941	1					
ANR	4159121	Argument	"""Error: d's not 15, it's %d\\n"""		4158941	0					
ANR	4159122	PrimaryExpression	"""Error: d's not 15, it's %d\\n"""		4158941	0					
ANR	4159123	Argument	d		4158941	1					
ANR	4159124	Identifier	d		4158941	0					
ANR	4159125	ExpressionStatement	abort_me ( )	103:2:2551:2561	4158941	1	True				
ANR	4159126	CallExpression	abort_me ( )		4158941	0					
ANR	4159127	Callee	abort_me		4158941	0					
ANR	4159128	Identifier	abort_me		4158941	0					
ANR	4159129	ArgumentList			4158941	1					
ANR	4159130	ExpressionStatement	exit ( 1 )	104:2:2565:2574	4158941	2	True				
ANR	4159131	CallExpression	exit ( 1 )		4158941	0					
ANR	4159132	Callee	exit		4158941	0					
ANR	4159133	Identifier	exit		4158941	0					
ANR	4159134	ArgumentList	1		4158941	1					
ANR	4159135	Argument	1		4158941	0					
ANR	4159136	PrimaryExpression	1		4158941	0					
ANR	4159137	ExpressionStatement	"printf ( ""OK\\n"" )"	107:1:2582:2598	4158941	17	True				
ANR	4159138	CallExpression	"printf ( ""OK\\n"" )"		4158941	0					
ANR	4159139	Callee	printf		4158941	0					
ANR	4159140	Identifier	printf		4158941	0					
ANR	4159141	ArgumentList	"""OK\\n"""		4158941	1					
ANR	4159142	Argument	"""OK\\n"""		4158941	0					
ANR	4159143	PrimaryExpression	"""OK\\n"""		4158941	0					
ANR	4159144	ExpressionStatement	"check ( a , c )"	108:1:2601:2614	4158941	18	True				
ANR	4159145	CallExpression	"check ( a , c )"		4158941	0					
ANR	4159146	Callee	check		4158941	0					
ANR	4159147	Identifier	check		4158941	0					
ANR	4159148	ArgumentList	a		4158941	1					
ANR	4159149	Argument	a		4158941	0					
ANR	4159150	Identifier	a		4158941	0					
ANR	4159151	Argument	c		4158941	1					
ANR	4159152	Identifier	c		4158941	0					
ANR	4159153	ExpressionStatement	"check ( c , d )"	109:1:2617:2630	4158941	19	True				
ANR	4159154	CallExpression	"check ( c , d )"		4158941	0					
ANR	4159155	Callee	check		4158941	0					
ANR	4159156	Identifier	check		4158941	0					
ANR	4159157	ArgumentList	c		4158941	1					
ANR	4159158	Argument	c		4158941	0					
ANR	4159159	Identifier	c		4158941	0					
ANR	4159160	Argument	d		4158941	1					
ANR	4159161	Identifier	d		4158941	0					
ANR	4159162	ExpressionStatement	ckpt_and_exit ( )	111:1:2634:2649	4158941	20	True				
ANR	4159163	CallExpression	ckpt_and_exit ( )		4158941	0					
ANR	4159164	Callee	ckpt_and_exit		4158941	0					
ANR	4159165	Identifier	ckpt_and_exit		4158941	0					
ANR	4159166	ArgumentList			4158941	1					
ANR	4159167	Statement	undef	112:1:2652:2656	4158941	21	True				
ANR	4159168	Statement	WAIT_FOR_DEBUGGER	112:7:2658:2674	4158941	22	True				
ANR	4159169	CompoundStatement		68:1:1515:1531	4158941	23					
ANR	4159170	IdentifierDeclStatement	int wait_up = 1 ;	115:1:2714:2730	4158941	0	True				
ANR	4159171	IdentifierDecl	wait_up = 1		4158941	0					
ANR	4159172	IdentifierDeclType	int		4158941	0					
ANR	4159173	Identifier	wait_up		4158941	1					
ANR	4159174	AssignmentExpression	wait_up = 1		4158941	2		=			
ANR	4159175	Identifier	wait_up		4158941	0					
ANR	4159176	PrimaryExpression	1		4158941	1					
ANR	4159177	WhileStatement	while ( wait_up )		4158941	1					
ANR	4159178	Condition	wait_up	116:8:2740:2746	4158941	0	True				
ANR	4159179	Identifier	wait_up		4158941	0					
ANR	4159180	ExpressionStatement		117:2:2752:2752	4158941	1	True				
ANR	4159181	ExpressionStatement	"check ( a , c )"	120:1:2768:2781	4158941	24	True				
ANR	4159182	CallExpression	"check ( a , c )"		4158941	0					
ANR	4159183	Callee	check		4158941	0					
ANR	4159184	Identifier	check		4158941	0					
ANR	4159185	ArgumentList	a		4158941	1					
ANR	4159186	Argument	a		4158941	0					
ANR	4159187	Identifier	a		4158941	0					
ANR	4159188	Argument	c		4158941	1					
ANR	4159189	Identifier	c		4158941	0					
ANR	4159190	ExpressionStatement	"check ( c , d )"	121:1:2784:2797	4158941	25	True				
ANR	4159191	CallExpression	"check ( c , d )"		4158941	0					
ANR	4159192	Callee	check		4158941	0					
ANR	4159193	Identifier	check		4158941	0					
ANR	4159194	ArgumentList	c		4158941	1					
ANR	4159195	Argument	c		4158941	0					
ANR	4159196	Identifier	c		4158941	0					
ANR	4159197	Argument	d		4158941	1					
ANR	4159198	Identifier	d		4158941	0					
ANR	4159199	ExpressionStatement	ckpt_and_exit ( )	123:1:2801:2816	4158941	26	True				
ANR	4159200	CallExpression	ckpt_and_exit ( )		4158941	0					
ANR	4159201	Callee	ckpt_and_exit		4158941	0					
ANR	4159202	Identifier	ckpt_and_exit		4158941	0					
ANR	4159203	ArgumentList			4158941	1					
ANR	4159204	ExpressionStatement	"check ( a , c )"	124:1:2819:2832	4158941	27	True				
ANR	4159205	CallExpression	"check ( a , c )"		4158941	0					
ANR	4159206	Callee	check		4158941	0					
ANR	4159207	Identifier	check		4158941	0					
ANR	4159208	ArgumentList	a		4158941	1					
ANR	4159209	Argument	a		4158941	0					
ANR	4159210	Identifier	a		4158941	0					
ANR	4159211	Argument	c		4158941	1					
ANR	4159212	Identifier	c		4158941	0					
ANR	4159213	ExpressionStatement	"check ( c , d )"	125:1:2835:2848	4158941	28	True				
ANR	4159214	CallExpression	"check ( c , d )"		4158941	0					
ANR	4159215	Callee	check		4158941	0					
ANR	4159216	Identifier	check		4158941	0					
ANR	4159217	ArgumentList	c		4158941	1					
ANR	4159218	Argument	c		4158941	0					
ANR	4159219	Identifier	c		4158941	0					
ANR	4159220	Argument	d		4158941	1					
ANR	4159221	Identifier	d		4158941	0					
ANR	4159222	ExpressionStatement	"printf ( ""Normal End of Job\\n"" )"	127:1:2852:2883	4158941	29	True				
ANR	4159223	CallExpression	"printf ( ""Normal End of Job\\n"" )"		4158941	0					
ANR	4159224	Callee	printf		4158941	0					
ANR	4159225	Identifier	printf		4158941	0					
ANR	4159226	ArgumentList	"""Normal End of Job\\n"""		4158941	1					
ANR	4159227	Argument	"""Normal End of Job\\n"""		4158941	0					
ANR	4159228	PrimaryExpression	"""Normal End of Job\\n"""		4158941	0					
ANR	4159229	ExpressionStatement	exit ( 0 )	128:1:2886:2895	4158941	30	True				
ANR	4159230	CallExpression	exit ( 0 )		4158941	0					
ANR	4159231	Callee	exit		4158941	0					
ANR	4159232	Identifier	exit		4158941	0					
ANR	4159233	ArgumentList	0		4158941	1					
ANR	4159234	Argument	0		4158941	0					
ANR	4159235	PrimaryExpression	0		4158941	0					
ANR	4159236	ReturnType	int		4158941	1					
ANR	4159237	Identifier	main		4158941	2					
ANR	4159238	ParameterList	"int argc , char * * argv"		4158941	3					
ANR	4159239	Parameter	int argc	47:6:1174:1181	4158941	0	True				
ANR	4159240	ParameterType	int		4158941	0					
ANR	4159241	Identifier	argc		4158941	1					
ANR	4159242	Parameter	char * * argv	47:16:1184:1194	4158941	1	True				
ANR	4159243	ParameterType	char * *		4158941	0					
ANR	4159244	Identifier	argv		4158941	1					
ANR	4159245	CFGEntryNode	ENTRY		4158941		True				
ANR	4159246	CFGExitNode	EXIT		4158941		True				
ANR	4159247	Symbol	argc		4158941						
ANR	4159248	Symbol	a		4158941						
ANR	4159249	Symbol	b		4158941						
ANR	4159250	Symbol	c		4158941						
ANR	4159251	Symbol	d		4158941						
ANR	4159252	Symbol	* argv		4158941						
ANR	4159253	Symbol	wait_up		4158941						
ANR	4159254	Symbol	argv		4158941						
ANR	4159255	Symbol	O_RDONLY		4158941						
ANR	4159256	Symbol	x		4158941						
ANR	4159257	Symbol	dup2		4158941						
ANR	4159258	Symbol	open		4158941						
ANR	4159259	Symbol	dup		4158941						
ANR	4159260	Function	check	137:0:3183:3544							
ANR	4159261	FunctionDef	"check (int a , int b)"		4159260	0					
ANR	4159262	CompoundStatement		138:0:3210:3544	4159260	0					
ANR	4159263	IdentifierDeclStatement	"int end , result ;"	139:1:3213:3228	4159260	0	True				
ANR	4159264	IdentifierDecl	end		4159260	0					
ANR	4159265	IdentifierDeclType	int		4159260	0					
ANR	4159266	Identifier	end		4159260	1					
ANR	4159267	IdentifierDecl	result		4159260	1					
ANR	4159268	IdentifierDeclType	int		4159260	0					
ANR	4159269	Identifier	result		4159260	1					
ANR	4159270	ExpressionStatement	"end = lseek ( a , 0 , 2 )"	141:1:3232:3254	4159260	1	True				
ANR	4159271	AssignmentExpression	"end = lseek ( a , 0 , 2 )"		4159260	0		=			
ANR	4159272	Identifier	end		4159260	0					
ANR	4159273	CallExpression	"lseek ( a , 0 , 2 )"		4159260	1					
ANR	4159274	Callee	lseek		4159260	0					
ANR	4159275	Identifier	lseek		4159260	0					
ANR	4159276	ArgumentList	a		4159260	1					
ANR	4159277	Argument	a		4159260	0					
ANR	4159278	Identifier	a		4159260	0					
ANR	4159279	Argument	0		4159260	1					
ANR	4159280	PrimaryExpression	0		4159260	0					
ANR	4159281	Argument	2		4159260	2					
ANR	4159282	PrimaryExpression	2		4159260	0					
ANR	4159283	IfStatement	"if ( lseek ( b , 0 , 1 ) != end )"		4159260	2					
ANR	4159284	Condition	"lseek ( b , 0 , 1 ) != end"	142:5:3261:3279	4159260	0	True				
ANR	4159285	EqualityExpression	"lseek ( b , 0 , 1 ) != end"		4159260	0		!=			
ANR	4159286	CallExpression	"lseek ( b , 0 , 1 )"		4159260	0					
ANR	4159287	Callee	lseek		4159260	0					
ANR	4159288	Identifier	lseek		4159260	0					
ANR	4159289	ArgumentList	b		4159260	1					
ANR	4159290	Argument	b		4159260	0					
ANR	4159291	Identifier	b		4159260	0					
ANR	4159292	Argument	0		4159260	1					
ANR	4159293	PrimaryExpression	0		4159260	0					
ANR	4159294	Argument	1		4159260	2					
ANR	4159295	PrimaryExpression	1		4159260	0					
ANR	4159296	Identifier	end		4159260	1					
ANR	4159297	CompoundStatement		5:27:72:72	4159260	1					
ANR	4159298	ExpressionStatement	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"	143:2:3287:3345	4159260	0	True				
ANR	4159299	CallExpression	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"		4159260	0					
ANR	4159300	Callee	printf		4159260	0					
ANR	4159301	Identifier	printf		4159260	0					
ANR	4159302	ArgumentList	"""Error: file %d is not a dup of file %d\\n"""		4159260	1					
ANR	4159303	Argument	"""Error: file %d is not a dup of file %d\\n"""		4159260	0					
ANR	4159304	PrimaryExpression	"""Error: file %d is not a dup of file %d\\n"""		4159260	0					
ANR	4159305	Argument	a		4159260	1					
ANR	4159306	Identifier	a		4159260	0					
ANR	4159307	Argument	b		4159260	2					
ANR	4159308	Identifier	b		4159260	0					
ANR	4159309	ExpressionStatement	abort_me ( )	144:2:3349:3359	4159260	1	True				
ANR	4159310	CallExpression	abort_me ( )		4159260	0					
ANR	4159311	Callee	abort_me		4159260	0					
ANR	4159312	Identifier	abort_me		4159260	0					
ANR	4159313	ArgumentList			4159260	1					
ANR	4159314	ExpressionStatement	exit ( 1 )	145:2:3363:3372	4159260	2	True				
ANR	4159315	CallExpression	exit ( 1 )		4159260	0					
ANR	4159316	Callee	exit		4159260	0					
ANR	4159317	Identifier	exit		4159260	0					
ANR	4159318	ArgumentList	1		4159260	1					
ANR	4159319	Argument	1		4159260	0					
ANR	4159320	PrimaryExpression	1		4159260	0					
ANR	4159321	ExpressionStatement	"result = lseek ( b , 0 , 0 )"	148:1:3379:3404	4159260	3	True				
ANR	4159322	AssignmentExpression	"result = lseek ( b , 0 , 0 )"		4159260	0		=			
ANR	4159323	Identifier	result		4159260	0					
ANR	4159324	CallExpression	"lseek ( b , 0 , 0 )"		4159260	1					
ANR	4159325	Callee	lseek		4159260	0					
ANR	4159326	Identifier	lseek		4159260	0					
ANR	4159327	ArgumentList	b		4159260	1					
ANR	4159328	Argument	b		4159260	0					
ANR	4159329	Identifier	b		4159260	0					
ANR	4159330	Argument	0		4159260	1					
ANR	4159331	PrimaryExpression	0		4159260	0					
ANR	4159332	Argument	0		4159260	2					
ANR	4159333	PrimaryExpression	0		4159260	0					
ANR	4159334	IfStatement	"if ( lseek ( a , 0 , 1 ) != 0 )"		4159260	4					
ANR	4159335	Condition	"lseek ( a , 0 , 1 ) != 0"	149:5:3411:3427	4159260	0	True				
ANR	4159336	EqualityExpression	"lseek ( a , 0 , 1 ) != 0"		4159260	0		!=			
ANR	4159337	CallExpression	"lseek ( a , 0 , 1 )"		4159260	0					
ANR	4159338	Callee	lseek		4159260	0					
ANR	4159339	Identifier	lseek		4159260	0					
ANR	4159340	ArgumentList	a		4159260	1					
ANR	4159341	Argument	a		4159260	0					
ANR	4159342	Identifier	a		4159260	0					
ANR	4159343	Argument	0		4159260	1					
ANR	4159344	PrimaryExpression	0		4159260	0					
ANR	4159345	Argument	1		4159260	2					
ANR	4159346	PrimaryExpression	1		4159260	0					
ANR	4159347	PrimaryExpression	0		4159260	1					
ANR	4159348	CompoundStatement		12:25:220:220	4159260	1					
ANR	4159349	ExpressionStatement	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"	150:2:3435:3493	4159260	0	True				
ANR	4159350	CallExpression	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"		4159260	0					
ANR	4159351	Callee	printf		4159260	0					
ANR	4159352	Identifier	printf		4159260	0					
ANR	4159353	ArgumentList	"""Error: file %d is not a dup of file %d\\n"""		4159260	1					
ANR	4159354	Argument	"""Error: file %d is not a dup of file %d\\n"""		4159260	0					
ANR	4159355	PrimaryExpression	"""Error: file %d is not a dup of file %d\\n"""		4159260	0					
ANR	4159356	Argument	a		4159260	1					
ANR	4159357	Identifier	a		4159260	0					
ANR	4159358	Argument	b		4159260	2					
ANR	4159359	Identifier	b		4159260	0					
ANR	4159360	ExpressionStatement	abort_me ( )	151:2:3497:3507	4159260	1	True				
ANR	4159361	CallExpression	abort_me ( )		4159260	0					
ANR	4159362	Callee	abort_me		4159260	0					
ANR	4159363	Identifier	abort_me		4159260	0					
ANR	4159364	ArgumentList			4159260	1					
ANR	4159365	ExpressionStatement	exit ( 1 )	152:2:3511:3520	4159260	2	True				
ANR	4159366	CallExpression	exit ( 1 )		4159260	0					
ANR	4159367	Callee	exit		4159260	0					
ANR	4159368	Identifier	exit		4159260	0					
ANR	4159369	ArgumentList	1		4159260	1					
ANR	4159370	Argument	1		4159260	0					
ANR	4159371	PrimaryExpression	1		4159260	0					
ANR	4159372	ExpressionStatement	"printf ( ""OK\\n"" )"	154:1:3526:3542	4159260	5	True				
ANR	4159373	CallExpression	"printf ( ""OK\\n"" )"		4159260	0					
ANR	4159374	Callee	printf		4159260	0					
ANR	4159375	Identifier	printf		4159260	0					
ANR	4159376	ArgumentList	"""OK\\n"""		4159260	1					
ANR	4159377	Argument	"""OK\\n"""		4159260	0					
ANR	4159378	PrimaryExpression	"""OK\\n"""		4159260	0					
ANR	4159379	ReturnType	void		4159260	1					
ANR	4159380	Identifier	check		4159260	2					
ANR	4159381	ParameterList	"int a , int b"		4159260	3					
ANR	4159382	Parameter	int a	137:12:3195:3199	4159260	0	True				
ANR	4159383	ParameterType	int		4159260	0					
ANR	4159384	Identifier	a		4159260	1					
ANR	4159385	Parameter	int b	137:19:3202:3206	4159260	1	True				
ANR	4159386	ParameterType	int		4159260	0					
ANR	4159387	Identifier	b		4159260	1					
ANR	4159388	CFGEntryNode	ENTRY		4159260		True				
ANR	4159389	CFGExitNode	EXIT		4159260		True				
ANR	4159390	Symbol	result		4159260						
ANR	4159391	Symbol	a		4159260						
ANR	4159392	Symbol	b		4159260						
ANR	4159393	Symbol	lseek		4159260						
ANR	4159394	Symbol	end		4159260						
ANR	4159395	Function	abort_me	157:0:3547:3694							
ANR	4159396	FunctionDef	abort_me ()		4159395	0					
ANR	4159397	CompoundStatement		158:0:3567:3694	4159395	0					
ANR	4159398	IdentifierDeclStatement	int i ;	159:1:3570:3575	4159395	0	True				
ANR	4159399	IdentifierDecl	i		4159395	0					
ANR	4159400	IdentifierDeclType	int		4159395	0					
ANR	4159401	Identifier	i		4159395	1					
ANR	4159402	IdentifierDeclStatement	int j ;	160:1:3578:3583	4159395	1	True				
ANR	4159403	IdentifierDecl	j		4159395	0					
ANR	4159404	IdentifierDeclType	int		4159395	0					
ANR	4159405	Identifier	j		4159395	1					
ANR	4159406	IdentifierDeclStatement	char * foo = ( char * ) 0 ;	161:1:3586:3607	4159395	2	True				
ANR	4159407	IdentifierDecl	* foo = ( char * ) 0		4159395	0					
ANR	4159408	IdentifierDeclType	char *		4159395	0					
ANR	4159409	Identifier	foo		4159395	1					
ANR	4159410	AssignmentExpression	* foo = ( char * ) 0		4159395	2		=			
ANR	4159411	Identifier	foo		4159395	0					
ANR	4159412	CastExpression	( char * ) 0		4159395	1					
ANR	4159413	CastTarget	char *		4159395	0					
ANR	4159414	PrimaryExpression	0		4159395	1					
ANR	4159415	ExpressionStatement	fflush ( stdout )	163:1:3611:3627	4159395	3	True				
ANR	4159416	CallExpression	fflush ( stdout )		4159395	0					
ANR	4159417	Callee	fflush		4159395	0					
ANR	4159418	Identifier	fflush		4159395	0					
ANR	4159419	ArgumentList	stdout		4159395	1					
ANR	4159420	Argument	stdout		4159395	0					
ANR	4159421	Identifier	stdout		4159395	0					
ANR	4159422	ExpressionStatement	fflush ( stderr )	164:1:3630:3646	4159395	4	True				
ANR	4159423	CallExpression	fflush ( stderr )		4159395	0					
ANR	4159424	Callee	fflush		4159395	0					
ANR	4159425	Identifier	fflush		4159395	0					
ANR	4159426	ArgumentList	stderr		4159395	1					
ANR	4159427	Argument	stderr		4159395	0					
ANR	4159428	Identifier	stderr		4159395	0					
ANR	4159429	ExpressionStatement	j = 0	165:1:3649:3654	4159395	5	True				
ANR	4159430	AssignmentExpression	j = 0		4159395	0		=			
ANR	4159431	Identifier	j		4159395	0					
ANR	4159432	PrimaryExpression	0		4159395	1					
ANR	4159433	ExpressionStatement	i = 1 / j	166:1:3657:3666	4159395	6	True				
ANR	4159434	AssignmentExpression	i = 1 / j		4159395	0		=			
ANR	4159435	Identifier	i		4159395	0					
ANR	4159436	MultiplicativeExpression	1 / j		4159395	1		/			
ANR	4159437	PrimaryExpression	1		4159395	0					
ANR	4159438	Identifier	j		4159395	1					
ANR	4159439	ExpressionStatement	* foo = 'a'	167:1:3669:3679	4159395	7	True				
ANR	4159440	AssignmentExpression	* foo = 'a'		4159395	0		=			
ANR	4159441	UnaryOperationExpression	* foo		4159395	0					
ANR	4159442	UnaryOperator	*		4159395	0					
ANR	4159443	Identifier	foo		4159395	1					
ANR	4159444	PrimaryExpression	'a'		4159395	1					
ANR	4159445	ExpressionStatement	exit ( 13 )	168:1:3682:3692	4159395	8	True				
ANR	4159446	CallExpression	exit ( 13 )		4159395	0					
ANR	4159447	Callee	exit		4159395	0					
ANR	4159448	Identifier	exit		4159395	0					
ANR	4159449	ArgumentList	13		4159395	1					
ANR	4159450	Argument	13		4159395	0					
ANR	4159451	PrimaryExpression	13		4159395	0					
ANR	4159452	ReturnType	void		4159395	1					
ANR	4159453	Identifier	abort_me		4159395	2					
ANR	4159454	ParameterList			4159395	3					
ANR	4159455	CFGEntryNode	ENTRY		4159395		True				
ANR	4159456	CFGExitNode	EXIT		4159395		True				
ANR	4159457	Symbol	stdout		4159395						
ANR	4159458	Symbol	foo		4159395						
ANR	4159459	Symbol	i		4159395						
ANR	4159460	Symbol	j		4159395						
ANR	4159461	Symbol	stderr		4159395						
ANR	4159462	Symbol	* foo		4159395						
