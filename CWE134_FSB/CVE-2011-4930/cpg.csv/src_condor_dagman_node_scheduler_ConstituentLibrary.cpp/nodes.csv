command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3145407	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_node_scheduler_ConstituentLibrary.cpp								
ANR	3145408	Function	ConstituentLibrary :: checkN	45:0:1136:4417							
ANR	3145409	FunctionDef	ConstituentLibrary :: checkN (const Dag & g)		3145408	0					
ANR	3145410	CompoundStatement		46:0:1183:4417	3145408	0					
ANR	3145411	IdentifierDeclStatement	Dag gRev ;	47:1:1186:1194	3145408	0	True				
ANR	3145412	IdentifierDecl	gRev		3145408	0					
ANR	3145413	IdentifierDeclType	Dag		3145408	0					
ANR	3145414	Identifier	gRev		3145408	1					
ANR	3145415	IdentifierDeclStatement	int * color = NULL ;	48:1:1197:1214	3145408	1	True				
ANR	3145416	IdentifierDecl	* color = NULL		3145408	0					
ANR	3145417	IdentifierDeclType	int *		3145408	0					
ANR	3145418	Identifier	color		3145408	1					
ANR	3145419	AssignmentExpression	* color = NULL		3145408	2		=			
ANR	3145420	Identifier	NULL		3145408	0					
ANR	3145421	Identifier	NULL		3145408	1					
ANR	3145422	IdentifierDeclStatement	int * sked = NULL ;	49:1:1217:1233	3145408	2	True				
ANR	3145423	IdentifierDecl	* sked = NULL		3145408	0					
ANR	3145424	IdentifierDeclType	int *		3145408	0					
ANR	3145425	Identifier	sked		3145408	1					
ANR	3145426	AssignmentExpression	* sked = NULL		3145408	2		=			
ANR	3145427	Identifier	NULL		3145408	0					
ANR	3145428	Identifier	NULL		3145408	1					
ANR	3145429	IdentifierDeclStatement	"int i , sink , source , idx ;"	50:1:1236:1257	3145408	3	True				
ANR	3145430	IdentifierDecl	i		3145408	0					
ANR	3145431	IdentifierDeclType	int		3145408	0					
ANR	3145432	Identifier	i		3145408	1					
ANR	3145433	IdentifierDecl	sink		3145408	1					
ANR	3145434	IdentifierDeclType	int		3145408	0					
ANR	3145435	Identifier	sink		3145408	1					
ANR	3145436	IdentifierDecl	source		3145408	2					
ANR	3145437	IdentifierDeclType	int		3145408	0					
ANR	3145438	Identifier	source		3145408	1					
ANR	3145439	IdentifierDecl	idx		3145408	3					
ANR	3145440	IdentifierDeclType	int		3145408	0					
ANR	3145441	Identifier	idx		3145408	1					
ANR	3145442	IfStatement	if ( ( g . getNumNodes ( ) % 2 ) != 0 || g . getNumNodes ( ) < 4 )		3145408	4					
ANR	3145443	Condition	( g . getNumNodes ( ) % 2 ) != 0 || g . getNumNodes ( ) < 4	53:5:1321:1365	3145408	0	True				
ANR	3145444	OrExpression	( g . getNumNodes ( ) % 2 ) != 0 || g . getNumNodes ( ) < 4		3145408	0		||			
ANR	3145445	EqualityExpression	( g . getNumNodes ( ) % 2 ) != 0		3145408	0		!=			
ANR	3145446	MultiplicativeExpression	g . getNumNodes ( ) % 2		3145408	0		%			
ANR	3145447	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145448	Callee	g . getNumNodes		3145408	0					
ANR	3145449	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145450	Identifier	g		3145408	0					
ANR	3145451	Identifier	getNumNodes		3145408	1					
ANR	3145452	ArgumentList			3145408	1					
ANR	3145453	PrimaryExpression	2		3145408	1					
ANR	3145454	PrimaryExpression	0		3145408	1					
ANR	3145455	RelationalExpression	g . getNumNodes ( ) < 4		3145408	1		<			
ANR	3145456	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145457	Callee	g . getNumNodes		3145408	0					
ANR	3145458	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145459	Identifier	g		3145408	0					
ANR	3145460	Identifier	getNumNodes		3145408	1					
ANR	3145461	ArgumentList			3145408	1					
ANR	3145462	PrimaryExpression	4		3145408	1					
ANR	3145463	GotoStatement	goto retnull ;	54:2:1371:1383	3145408	1	True				
ANR	3145464	Identifier	retnull		3145408	0					
ANR	3145465	ExpressionStatement	gRev . initializeWith ( g )	57:1:1431:1453	3145408	5	True				
ANR	3145466	CallExpression	gRev . initializeWith ( g )		3145408	0					
ANR	3145467	Callee	gRev . initializeWith		3145408	0					
ANR	3145468	MemberAccess	gRev . initializeWith		3145408	0					
ANR	3145469	Identifier	gRev		3145408	0					
ANR	3145470	Identifier	initializeWith		3145408	1					
ANR	3145471	ArgumentList	g		3145408	1					
ANR	3145472	Argument	g		3145408	0					
ANR	3145473	Identifier	g		3145408	0					
ANR	3145474	ExpressionStatement	gRev . reverseArcs ( )	58:1:1456:1474	3145408	6	True				
ANR	3145475	CallExpression	gRev . reverseArcs ( )		3145408	0					
ANR	3145476	Callee	gRev . reverseArcs		3145408	0					
ANR	3145477	MemberAccess	gRev . reverseArcs		3145408	0					
ANR	3145478	Identifier	gRev		3145408	0					
ANR	3145479	Identifier	reverseArcs		3145408	1					
ANR	3145480	ArgumentList			3145408	1					
ANR	3145481	ExpressionStatement	sked = new int [ g . getNumNodes ( ) ]	61:1:1535:1566	3145408	7	True				
ANR	3145482	AssignmentExpression	sked = new int [ g . getNumNodes ( ) ]		3145408	0		=			
ANR	3145483	Identifier	sked		3145408	0					
ANR	3145484	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145485	Callee	g . getNumNodes		3145408	0					
ANR	3145486	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145487	Identifier	g		3145408	0					
ANR	3145488	Identifier	getNumNodes		3145408	1					
ANR	3145489	ArgumentList			3145408	1					
ANR	3145490	ExpressionStatement	color = new int [ g . getNumNodes ( ) ]	62:1:1569:1601	3145408	8	True				
ANR	3145491	AssignmentExpression	color = new int [ g . getNumNodes ( ) ]		3145408	0		=			
ANR	3145492	Identifier	color		3145408	0					
ANR	3145493	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145494	Callee	g . getNumNodes		3145408	0					
ANR	3145495	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145496	Identifier	g		3145408	0					
ANR	3145497	Identifier	getNumNodes		3145408	1					
ANR	3145498	ArgumentList			3145408	1					
ANR	3145499	IfStatement	if ( NULL == color || NULL == sked )		3145408	9					
ANR	3145500	Condition	NULL == color || NULL == sked	63:5:1608:1632	3145408	0	True				
ANR	3145501	OrExpression	NULL == color || NULL == sked		3145408	0		||			
ANR	3145502	EqualityExpression	NULL == color		3145408	0		==			
ANR	3145503	Identifier	NULL		3145408	0					
ANR	3145504	Identifier	color		3145408	1					
ANR	3145505	EqualityExpression	NULL == sked		3145408	1		==			
ANR	3145506	Identifier	NULL		3145408	0					
ANR	3145507	Identifier	sked		3145408	1					
ANR	3145508	ThrowStatement	"throw ""ConstituentLibrary::checkN, color or shed is NULL"" ;"	64:2:1638:1695	3145408	1	True				
ANR	3145509	PrimaryExpression	"""ConstituentLibrary::checkN, color or shed is NULL"""		3145408	0					
ANR	3145510	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3145408	10					
ANR	3145511	ForInit	i = 0 ;	65:6:1703:1706	3145408	0	True				
ANR	3145512	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145513	Identifier	i		3145408	0					
ANR	3145514	PrimaryExpression	0		3145408	1					
ANR	3145515	Condition	i < g . getNumNodes ( )	65:11:1708:1724	3145408	1	True				
ANR	3145516	RelationalExpression	i < g . getNumNodes ( )		3145408	0		<			
ANR	3145517	Identifier	i		3145408	0					
ANR	3145518	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145519	Callee	g . getNumNodes		3145408	0					
ANR	3145520	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145521	Identifier	g		3145408	0					
ANR	3145522	Identifier	getNumNodes		3145408	1					
ANR	3145523	ArgumentList			3145408	1					
ANR	3145524	PostIncDecOperationExpression	i ++	65:30:1727:1729	3145408	2	True				
ANR	3145525	Identifier	i		3145408	0					
ANR	3145526	IncDec	++		3145408	1					
ANR	3145527	CompoundStatement		20:36:549:549	3145408	3					
ANR	3145528	ExpressionStatement	color [ i ] = 0	66:2:1737:1749	3145408	0	True				
ANR	3145529	AssignmentExpression	color [ i ] = 0		3145408	0		=			
ANR	3145530	ArrayIndexing	color [ i ]		3145408	0					
ANR	3145531	Identifier	color		3145408	0					
ANR	3145532	Identifier	i		3145408	1					
ANR	3145533	PrimaryExpression	0		3145408	1					
ANR	3145534	ExpressionStatement	sked [ i ] = - 1	67:2:1753:1765	3145408	1	True				
ANR	3145535	AssignmentExpression	sked [ i ] = - 1		3145408	0		=			
ANR	3145536	ArrayIndexing	sked [ i ]		3145408	0					
ANR	3145537	Identifier	sked		3145408	0					
ANR	3145538	Identifier	i		3145408	1					
ANR	3145539	UnaryOperationExpression	- 1		3145408	1					
ANR	3145540	UnaryOperator	-		3145408	0					
ANR	3145541	PrimaryExpression	1		3145408	1					
ANR	3145542	ExpressionStatement		68:2:1769:1769	3145408	11	True				
ANR	3145543	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3145408	12					
ANR	3145544	ForInit	i = 0 ;	71:6:1816:1819	3145408	0	True				
ANR	3145545	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145546	Identifier	i		3145408	0					
ANR	3145547	PrimaryExpression	0		3145408	1					
ANR	3145548	Condition	i < g . getNumNodes ( )	71:11:1821:1837	3145408	1	True				
ANR	3145549	RelationalExpression	i < g . getNumNodes ( )		3145408	0		<			
ANR	3145550	Identifier	i		3145408	0					
ANR	3145551	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145552	Callee	g . getNumNodes		3145408	0					
ANR	3145553	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145554	Identifier	g		3145408	0					
ANR	3145555	Identifier	getNumNodes		3145408	1					
ANR	3145556	ArgumentList			3145408	1					
ANR	3145557	PostIncDecOperationExpression	i ++	71:30:1840:1842	3145408	2	True				
ANR	3145558	Identifier	i		3145408	0					
ANR	3145559	IncDec	++		3145408	1					
ANR	3145560	CompoundStatement		26:36:662:662	3145408	3					
ANR	3145561	IfStatement	if ( 0 == gRev . getNumArcs ( i ) && 1 == g . getNumArcs ( i ) )		3145408	0					
ANR	3145562	Condition	0 == gRev . getNumArcs ( i ) && 1 == g . getNumArcs ( i )	72:6:1854:1896	3145408	0	True				
ANR	3145563	AndExpression	0 == gRev . getNumArcs ( i ) && 1 == g . getNumArcs ( i )		3145408	0		&&			
ANR	3145564	EqualityExpression	0 == gRev . getNumArcs ( i )		3145408	0		==			
ANR	3145565	PrimaryExpression	0		3145408	0					
ANR	3145566	CallExpression	gRev . getNumArcs ( i )		3145408	1					
ANR	3145567	Callee	gRev . getNumArcs		3145408	0					
ANR	3145568	MemberAccess	gRev . getNumArcs		3145408	0					
ANR	3145569	Identifier	gRev		3145408	0					
ANR	3145570	Identifier	getNumArcs		3145408	1					
ANR	3145571	ArgumentList	i		3145408	1					
ANR	3145572	Argument	i		3145408	0					
ANR	3145573	Identifier	i		3145408	0					
ANR	3145574	EqualityExpression	1 == g . getNumArcs ( i )		3145408	1		==			
ANR	3145575	PrimaryExpression	1		3145408	0					
ANR	3145576	CallExpression	g . getNumArcs ( i )		3145408	1					
ANR	3145577	Callee	g . getNumArcs		3145408	0					
ANR	3145578	MemberAccess	g . getNumArcs		3145408	0					
ANR	3145579	Identifier	g		3145408	0					
ANR	3145580	Identifier	getNumArcs		3145408	1					
ANR	3145581	ArgumentList	i		3145408	1					
ANR	3145582	Argument	i		3145408	0					
ANR	3145583	Identifier	i		3145408	0					
ANR	3145584	BreakStatement	break ;	73:3:1903:1908	3145408	1	True				
ANR	3145585	ExpressionStatement		74:2:1912:1912	3145408	13	True				
ANR	3145586	IfStatement	if ( g . getNumNodes ( ) == i )		3145408	14					
ANR	3145587	Condition	g . getNumNodes ( ) == i	76:5:1949:1966	3145408	0	True				
ANR	3145588	EqualityExpression	g . getNumNodes ( ) == i		3145408	0		==			
ANR	3145589	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145590	Callee	g . getNumNodes		3145408	0					
ANR	3145591	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145592	Identifier	g		3145408	0					
ANR	3145593	Identifier	getNumNodes		3145408	1					
ANR	3145594	ArgumentList			3145408	1					
ANR	3145595	Identifier	i		3145408	1					
ANR	3145596	GotoStatement	goto retnull ;	77:2:1972:1984	3145408	1	True				
ANR	3145597	Identifier	retnull		3145408	0					
ANR	3145598	ExpressionStatement	source = i	80:1:2001:2011	3145408	15	True				
ANR	3145599	AssignmentExpression	source = i		3145408	0		=			
ANR	3145600	Identifier	source		3145408	0					
ANR	3145601	Identifier	i		3145408	1					
ANR	3145602	ExpressionStatement	"sink = g . getArc ( i , 0 )"	81:1:2014:2034	3145408	16	True				
ANR	3145603	AssignmentExpression	"sink = g . getArc ( i , 0 )"		3145408	0		=			
ANR	3145604	Identifier	sink		3145408	0					
ANR	3145605	CallExpression	"g . getArc ( i , 0 )"		3145408	1					
ANR	3145606	Callee	g . getArc		3145408	0					
ANR	3145607	MemberAccess	g . getArc		3145408	0					
ANR	3145608	Identifier	g		3145408	0					
ANR	3145609	Identifier	getArc		3145408	1					
ANR	3145610	ArgumentList	i		3145408	1					
ANR	3145611	Argument	i		3145408	0					
ANR	3145612	Identifier	i		3145408	0					
ANR	3145613	Argument	0		3145408	1					
ANR	3145614	PrimaryExpression	0		3145408	0					
ANR	3145615	ExpressionStatement	color [ source ] = 1	84:4:2075:2094	3145408	17	True				
ANR	3145616	AssignmentExpression	color [ source ] = 1		3145408	0		=			
ANR	3145617	ArrayIndexing	color [ source ]		3145408	0					
ANR	3145618	Identifier	color		3145408	0					
ANR	3145619	Identifier	source		3145408	1					
ANR	3145620	PrimaryExpression	1		3145408	1					
ANR	3145621	ExpressionStatement	color [ sink ] = 2	85:1:2120:2137	3145408	18	True				
ANR	3145622	AssignmentExpression	color [ sink ] = 2		3145408	0		=			
ANR	3145623	ArrayIndexing	color [ sink ]		3145408	0					
ANR	3145624	Identifier	color		3145408	0					
ANR	3145625	Identifier	sink		3145408	1					
ANR	3145626	PrimaryExpression	2		3145408	1					
ANR	3145627	ExpressionStatement	sked [ 0 ] = source	89:1:2198:2214	3145408	19	True				
ANR	3145628	AssignmentExpression	sked [ 0 ] = source		3145408	0		=			
ANR	3145629	ArrayIndexing	sked [ 0 ]		3145408	0					
ANR	3145630	Identifier	sked		3145408	0					
ANR	3145631	PrimaryExpression	0		3145408	1					
ANR	3145632	Identifier	source		3145408	1					
ANR	3145633	ExpressionStatement	idx = 1	90:1:2217:2222	3145408	20	True				
ANR	3145634	AssignmentExpression	idx = 1		3145408	0		=			
ANR	3145635	Identifier	idx		3145408	0					
ANR	3145636	PrimaryExpression	1		3145408	1					
ANR	3145637	WhileStatement	while ( true )		3145408	21					
ANR	3145638	Condition	true	94:8:2249:2252	3145408	0	True				
ANR	3145639	Identifier	true		3145408	0					
ANR	3145640	CompoundStatement		102:2:2190:2221	3145408	1					
ANR	3145641	IfStatement	if ( 1 == gRev . getNumArcs ( sink ) )		3145408	0					
ANR	3145642	Condition	1 == gRev . getNumArcs ( sink )	98:6:2350:2375	3145408	0	True				
ANR	3145643	EqualityExpression	1 == gRev . getNumArcs ( sink )		3145408	0		==			
ANR	3145644	PrimaryExpression	1		3145408	0					
ANR	3145645	CallExpression	gRev . getNumArcs ( sink )		3145408	1					
ANR	3145646	Callee	gRev . getNumArcs		3145408	0					
ANR	3145647	MemberAccess	gRev . getNumArcs		3145408	0					
ANR	3145648	Identifier	gRev		3145408	0					
ANR	3145649	Identifier	getNumArcs		3145408	1					
ANR	3145650	ArgumentList	sink		3145408	1					
ANR	3145651	Argument	sink		3145408	0					
ANR	3145652	Identifier	sink		3145408	0					
ANR	3145653	BreakStatement	break ;	99:3:2382:2387	3145408	1	True				
ANR	3145654	IfStatement	if ( 2 != gRev . getNumArcs ( sink ) )		3145408	1					
ANR	3145655	Condition	2 != gRev . getNumArcs ( sink )	102:6:2454:2479	3145408	0	True				
ANR	3145656	EqualityExpression	2 != gRev . getNumArcs ( sink )		3145408	0		!=			
ANR	3145657	PrimaryExpression	2		3145408	0					
ANR	3145658	CallExpression	gRev . getNumArcs ( sink )		3145408	1					
ANR	3145659	Callee	gRev . getNumArcs		3145408	0					
ANR	3145660	MemberAccess	gRev . getNumArcs		3145408	0					
ANR	3145661	Identifier	gRev		3145408	0					
ANR	3145662	Identifier	getNumArcs		3145408	1					
ANR	3145663	ArgumentList	sink		3145408	1					
ANR	3145664	Argument	sink		3145408	0					
ANR	3145665	Identifier	sink		3145408	0					
ANR	3145666	GotoStatement	goto retnull ;	103:3:2486:2498	3145408	1	True				
ANR	3145667	Identifier	retnull		3145408	0					
ANR	3145668	IdentifierDeclStatement	"int parent0 = gRev . getArc ( sink , 0 ) ;"	109:2:2566:2599	3145408	2	True				
ANR	3145669	IdentifierDecl	"parent0 = gRev . getArc ( sink , 0 )"		3145408	0					
ANR	3145670	IdentifierDeclType	int		3145408	0					
ANR	3145671	Identifier	parent0		3145408	1					
ANR	3145672	AssignmentExpression	"parent0 = gRev . getArc ( sink , 0 )"		3145408	2		=			
ANR	3145673	Identifier	parent0		3145408	0					
ANR	3145674	CallExpression	"gRev . getArc ( sink , 0 )"		3145408	1					
ANR	3145675	Callee	gRev . getArc		3145408	0					
ANR	3145676	MemberAccess	gRev . getArc		3145408	0					
ANR	3145677	Identifier	gRev		3145408	0					
ANR	3145678	Identifier	getArc		3145408	1					
ANR	3145679	ArgumentList	sink		3145408	1					
ANR	3145680	Argument	sink		3145408	0					
ANR	3145681	Identifier	sink		3145408	0					
ANR	3145682	Argument	0		3145408	1					
ANR	3145683	PrimaryExpression	0		3145408	0					
ANR	3145684	IdentifierDeclStatement	"int parent1 = gRev . getArc ( sink , 1 ) ;"	110:2:2603:2636	3145408	3	True				
ANR	3145685	IdentifierDecl	"parent1 = gRev . getArc ( sink , 1 )"		3145408	0					
ANR	3145686	IdentifierDeclType	int		3145408	0					
ANR	3145687	Identifier	parent1		3145408	1					
ANR	3145688	AssignmentExpression	"parent1 = gRev . getArc ( sink , 1 )"		3145408	2		=			
ANR	3145689	Identifier	parent1		3145408	0					
ANR	3145690	CallExpression	"gRev . getArc ( sink , 1 )"		3145408	1					
ANR	3145691	Callee	gRev . getArc		3145408	0					
ANR	3145692	MemberAccess	gRev . getArc		3145408	0					
ANR	3145693	Identifier	gRev		3145408	0					
ANR	3145694	Identifier	getArc		3145408	1					
ANR	3145695	ArgumentList	sink		3145408	1					
ANR	3145696	Argument	sink		3145408	0					
ANR	3145697	Identifier	sink		3145408	0					
ANR	3145698	Argument	1		3145408	1					
ANR	3145699	PrimaryExpression	1		3145408	0					
ANR	3145700	IfStatement	if ( 0 != gRev . getNumArcs ( parent0 ) || 0 != gRev . getNumArcs ( parent1 ) )		3145408	4					
ANR	3145701	Condition	0 != gRev . getNumArcs ( parent0 ) || 0 != gRev . getNumArcs ( parent1 )	111:6:2644:2701	3145408	0	True				
ANR	3145702	OrExpression	0 != gRev . getNumArcs ( parent0 ) || 0 != gRev . getNumArcs ( parent1 )		3145408	0		||			
ANR	3145703	EqualityExpression	0 != gRev . getNumArcs ( parent0 )		3145408	0		!=			
ANR	3145704	PrimaryExpression	0		3145408	0					
ANR	3145705	CallExpression	gRev . getNumArcs ( parent0 )		3145408	1					
ANR	3145706	Callee	gRev . getNumArcs		3145408	0					
ANR	3145707	MemberAccess	gRev . getNumArcs		3145408	0					
ANR	3145708	Identifier	gRev		3145408	0					
ANR	3145709	Identifier	getNumArcs		3145408	1					
ANR	3145710	ArgumentList	parent0		3145408	1					
ANR	3145711	Argument	parent0		3145408	0					
ANR	3145712	Identifier	parent0		3145408	0					
ANR	3145713	EqualityExpression	0 != gRev . getNumArcs ( parent1 )		3145408	1		!=			
ANR	3145714	PrimaryExpression	0		3145408	0					
ANR	3145715	CallExpression	gRev . getNumArcs ( parent1 )		3145408	1					
ANR	3145716	Callee	gRev . getNumArcs		3145408	0					
ANR	3145717	MemberAccess	gRev . getNumArcs		3145408	0					
ANR	3145718	Identifier	gRev		3145408	0					
ANR	3145719	Identifier	getNumArcs		3145408	1					
ANR	3145720	ArgumentList	parent1		3145408	1					
ANR	3145721	Argument	parent1		3145408	0					
ANR	3145722	Identifier	parent1		3145408	0					
ANR	3145723	GotoStatement	goto retnull ;	112:3:2708:2720	3145408	1	True				
ANR	3145724	Identifier	retnull		3145408	0					
ANR	3145725	IfStatement	if ( 0 != color [ parent0 ] && 0 != color [ parent1 ] )		3145408	5					
ANR	3145726	Condition	0 != color [ parent0 ] && 0 != color [ parent1 ]	116:6:2807:2844	3145408	0	True				
ANR	3145727	AndExpression	0 != color [ parent0 ] && 0 != color [ parent1 ]		3145408	0		&&			
ANR	3145728	EqualityExpression	0 != color [ parent0 ]		3145408	0		!=			
ANR	3145729	PrimaryExpression	0		3145408	0					
ANR	3145730	ArrayIndexing	color [ parent0 ]		3145408	1					
ANR	3145731	Identifier	color		3145408	0					
ANR	3145732	Identifier	parent0		3145408	1					
ANR	3145733	EqualityExpression	0 != color [ parent1 ]		3145408	1		!=			
ANR	3145734	PrimaryExpression	0		3145408	0					
ANR	3145735	ArrayIndexing	color [ parent1 ]		3145408	1					
ANR	3145736	Identifier	color		3145408	0					
ANR	3145737	Identifier	parent1		3145408	1					
ANR	3145738	GotoStatement	goto retnull ;	117:3:2851:2863	3145408	1	True				
ANR	3145739	Identifier	retnull		3145408	0					
ANR	3145740	IfStatement	if ( 0 == color [ parent0 ] )		3145408	6					
ANR	3145741	Condition	0 == color [ parent0 ]	120:6:2899:2915	3145408	0	True				
ANR	3145742	EqualityExpression	0 == color [ parent0 ]		3145408	0		==			
ANR	3145743	PrimaryExpression	0		3145408	0					
ANR	3145744	ArrayIndexing	color [ parent0 ]		3145408	1					
ANR	3145745	Identifier	color		3145408	0					
ANR	3145746	Identifier	parent0		3145408	1					
ANR	3145747	ExpressionStatement	source = parent0	121:3:2922:2938	3145408	1	True				
ANR	3145748	AssignmentExpression	source = parent0		3145408	0		=			
ANR	3145749	Identifier	source		3145408	0					
ANR	3145750	Identifier	parent0		3145408	1					
ANR	3145751	ElseStatement	else		3145408	0					
ANR	3145752	ExpressionStatement	source = parent1	123:3:2950:2966	3145408	0	True				
ANR	3145753	AssignmentExpression	source = parent1		3145408	0		=			
ANR	3145754	Identifier	source		3145408	0					
ANR	3145755	Identifier	parent1		3145408	1					
ANR	3145756	ExpressionStatement	color [ source ] = 1	126:2:2993:3010	3145408	7	True				
ANR	3145757	AssignmentExpression	color [ source ] = 1		3145408	0		=			
ANR	3145758	ArrayIndexing	color [ source ]		3145408	0					
ANR	3145759	Identifier	color		3145408	0					
ANR	3145760	Identifier	source		3145408	1					
ANR	3145761	PrimaryExpression	1		3145408	1					
ANR	3145762	ExpressionStatement	sked [ idx ] = source	130:2:3076:3094	3145408	8	True				
ANR	3145763	AssignmentExpression	sked [ idx ] = source		3145408	0		=			
ANR	3145764	ArrayIndexing	sked [ idx ]		3145408	0					
ANR	3145765	Identifier	sked		3145408	0					
ANR	3145766	Identifier	idx		3145408	1					
ANR	3145767	Identifier	source		3145408	1					
ANR	3145768	ExpressionStatement	idx ++	131:2:3098:3103	3145408	9	True				
ANR	3145769	PostIncDecOperationExpression	idx ++		3145408	0					
ANR	3145770	Identifier	idx		3145408	0					
ANR	3145771	IncDec	++		3145408	1					
ANR	3145772	IfStatement	if ( 2 != g . getNumArcs ( source ) )		3145408	10					
ANR	3145773	Condition	2 != g . getNumArcs ( source )	140:6:3228:3252	3145408	0	True				
ANR	3145774	EqualityExpression	2 != g . getNumArcs ( source )		3145408	0		!=			
ANR	3145775	PrimaryExpression	2		3145408	0					
ANR	3145776	CallExpression	g . getNumArcs ( source )		3145408	1					
ANR	3145777	Callee	g . getNumArcs		3145408	0					
ANR	3145778	MemberAccess	g . getNumArcs		3145408	0					
ANR	3145779	Identifier	g		3145408	0					
ANR	3145780	Identifier	getNumArcs		3145408	1					
ANR	3145781	ArgumentList	source		3145408	1					
ANR	3145782	Argument	source		3145408	0					
ANR	3145783	Identifier	source		3145408	0					
ANR	3145784	GotoStatement	goto retnull ;	141:3:3259:3271	3145408	1	True				
ANR	3145785	Identifier	retnull		3145408	0					
ANR	3145786	IdentifierDeclStatement	"int child0 = g . getArc ( source , 0 ) ;"	146:2:3339:3370	3145408	11	True				
ANR	3145787	IdentifierDecl	"child0 = g . getArc ( source , 0 )"		3145408	0					
ANR	3145788	IdentifierDeclType	int		3145408	0					
ANR	3145789	Identifier	child0		3145408	1					
ANR	3145790	AssignmentExpression	"child0 = g . getArc ( source , 0 )"		3145408	2		=			
ANR	3145791	Identifier	child0		3145408	0					
ANR	3145792	CallExpression	"g . getArc ( source , 0 )"		3145408	1					
ANR	3145793	Callee	g . getArc		3145408	0					
ANR	3145794	MemberAccess	g . getArc		3145408	0					
ANR	3145795	Identifier	g		3145408	0					
ANR	3145796	Identifier	getArc		3145408	1					
ANR	3145797	ArgumentList	source		3145408	1					
ANR	3145798	Argument	source		3145408	0					
ANR	3145799	Identifier	source		3145408	0					
ANR	3145800	Argument	0		3145408	1					
ANR	3145801	PrimaryExpression	0		3145408	0					
ANR	3145802	IdentifierDeclStatement	"int child1 = g . getArc ( source , 1 ) ;"	147:2:3374:3405	3145408	12	True				
ANR	3145803	IdentifierDecl	"child1 = g . getArc ( source , 1 )"		3145408	0					
ANR	3145804	IdentifierDeclType	int		3145408	0					
ANR	3145805	Identifier	child1		3145408	1					
ANR	3145806	AssignmentExpression	"child1 = g . getArc ( source , 1 )"		3145408	2		=			
ANR	3145807	Identifier	child1		3145408	0					
ANR	3145808	CallExpression	"g . getArc ( source , 1 )"		3145408	1					
ANR	3145809	Callee	g . getArc		3145408	0					
ANR	3145810	MemberAccess	g . getArc		3145408	0					
ANR	3145811	Identifier	g		3145408	0					
ANR	3145812	Identifier	getArc		3145408	1					
ANR	3145813	ArgumentList	source		3145408	1					
ANR	3145814	Argument	source		3145408	0					
ANR	3145815	Identifier	source		3145408	0					
ANR	3145816	Argument	1		3145408	1					
ANR	3145817	PrimaryExpression	1		3145408	0					
ANR	3145818	IfStatement	if ( 0 != g . getNumArcs ( child0 ) || 0 != g . getNumArcs ( child1 ) )		3145408	13					
ANR	3145819	Condition	0 != g . getNumArcs ( child0 ) || 0 != g . getNumArcs ( child1 )	148:6:3413:3462	3145408	0	True				
ANR	3145820	OrExpression	0 != g . getNumArcs ( child0 ) || 0 != g . getNumArcs ( child1 )		3145408	0		||			
ANR	3145821	EqualityExpression	0 != g . getNumArcs ( child0 )		3145408	0		!=			
ANR	3145822	PrimaryExpression	0		3145408	0					
ANR	3145823	CallExpression	g . getNumArcs ( child0 )		3145408	1					
ANR	3145824	Callee	g . getNumArcs		3145408	0					
ANR	3145825	MemberAccess	g . getNumArcs		3145408	0					
ANR	3145826	Identifier	g		3145408	0					
ANR	3145827	Identifier	getNumArcs		3145408	1					
ANR	3145828	ArgumentList	child0		3145408	1					
ANR	3145829	Argument	child0		3145408	0					
ANR	3145830	Identifier	child0		3145408	0					
ANR	3145831	EqualityExpression	0 != g . getNumArcs ( child1 )		3145408	1		!=			
ANR	3145832	PrimaryExpression	0		3145408	0					
ANR	3145833	CallExpression	g . getNumArcs ( child1 )		3145408	1					
ANR	3145834	Callee	g . getNumArcs		3145408	0					
ANR	3145835	MemberAccess	g . getNumArcs		3145408	0					
ANR	3145836	Identifier	g		3145408	0					
ANR	3145837	Identifier	getNumArcs		3145408	1					
ANR	3145838	ArgumentList	child1		3145408	1					
ANR	3145839	Argument	child1		3145408	0					
ANR	3145840	Identifier	child1		3145408	0					
ANR	3145841	GotoStatement	goto retnull ;	149:3:3469:3481	3145408	1	True				
ANR	3145842	Identifier	retnull		3145408	0					
ANR	3145843	IfStatement	if ( 0 != color [ child0 ] && 0 != color [ child1 ] )		3145408	14					
ANR	3145844	Condition	0 != color [ child0 ] && 0 != color [ child1 ]	153:6:3567:3602	3145408	0	True				
ANR	3145845	AndExpression	0 != color [ child0 ] && 0 != color [ child1 ]		3145408	0		&&			
ANR	3145846	EqualityExpression	0 != color [ child0 ]		3145408	0		!=			
ANR	3145847	PrimaryExpression	0		3145408	0					
ANR	3145848	ArrayIndexing	color [ child0 ]		3145408	1					
ANR	3145849	Identifier	color		3145408	0					
ANR	3145850	Identifier	child0		3145408	1					
ANR	3145851	EqualityExpression	0 != color [ child1 ]		3145408	1		!=			
ANR	3145852	PrimaryExpression	0		3145408	0					
ANR	3145853	ArrayIndexing	color [ child1 ]		3145408	1					
ANR	3145854	Identifier	color		3145408	0					
ANR	3145855	Identifier	child1		3145408	1					
ANR	3145856	GotoStatement	goto retnull ;	154:3:3609:3621	3145408	1	True				
ANR	3145857	Identifier	retnull		3145408	0					
ANR	3145858	IfStatement	if ( 0 == color [ child0 ] )		3145408	15					
ANR	3145859	Condition	0 == color [ child0 ]	157:6:3657:3672	3145408	0	True				
ANR	3145860	EqualityExpression	0 == color [ child0 ]		3145408	0		==			
ANR	3145861	PrimaryExpression	0		3145408	0					
ANR	3145862	ArrayIndexing	color [ child0 ]		3145408	1					
ANR	3145863	Identifier	color		3145408	0					
ANR	3145864	Identifier	child0		3145408	1					
ANR	3145865	ExpressionStatement	sink = child0	158:3:3679:3692	3145408	1	True				
ANR	3145866	AssignmentExpression	sink = child0		3145408	0		=			
ANR	3145867	Identifier	sink		3145408	0					
ANR	3145868	Identifier	child0		3145408	1					
ANR	3145869	ElseStatement	else		3145408	0					
ANR	3145870	ExpressionStatement	sink = child1	160:3:3704:3717	3145408	0	True				
ANR	3145871	AssignmentExpression	sink = child1		3145408	0		=			
ANR	3145872	Identifier	sink		3145408	0					
ANR	3145873	Identifier	child1		3145408	1					
ANR	3145874	ExpressionStatement	color [ sink ] = 2	163:2:3742:3757	3145408	16	True				
ANR	3145875	AssignmentExpression	color [ sink ] = 2		3145408	0		=			
ANR	3145876	ArrayIndexing	color [ sink ]		3145408	0					
ANR	3145877	Identifier	color		3145408	0					
ANR	3145878	Identifier	sink		3145408	1					
ANR	3145879	PrimaryExpression	2		3145408	1					
ANR	3145880	ExpressionStatement		164:2:3783:3783	3145408	22	True				
ANR	3145881	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3145408	23					
ANR	3145882	ForInit	i = 0 ;	167:6:3831:3834	3145408	0	True				
ANR	3145883	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145884	Identifier	i		3145408	0					
ANR	3145885	PrimaryExpression	0		3145408	1					
ANR	3145886	Condition	i < g . getNumNodes ( )	167:11:3836:3852	3145408	1	True				
ANR	3145887	RelationalExpression	i < g . getNumNodes ( )		3145408	0		<			
ANR	3145888	Identifier	i		3145408	0					
ANR	3145889	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145890	Callee	g . getNumNodes		3145408	0					
ANR	3145891	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145892	Identifier	g		3145408	0					
ANR	3145893	Identifier	getNumNodes		3145408	1					
ANR	3145894	ArgumentList			3145408	1					
ANR	3145895	PostIncDecOperationExpression	i ++	167:30:3855:3857	3145408	2	True				
ANR	3145896	Identifier	i		3145408	0					
ANR	3145897	IncDec	++		3145408	1					
ANR	3145898	CompoundStatement		122:36:2677:2677	3145408	3					
ANR	3145899	IfStatement	if ( 0 == color [ i ] )		3145408	0					
ANR	3145900	Condition	0 == color [ i ]	168:6:3869:3879	3145408	0	True				
ANR	3145901	EqualityExpression	0 == color [ i ]		3145408	0		==			
ANR	3145902	PrimaryExpression	0		3145408	0					
ANR	3145903	ArrayIndexing	color [ i ]		3145408	1					
ANR	3145904	Identifier	color		3145408	0					
ANR	3145905	Identifier	i		3145408	1					
ANR	3145906	GotoStatement	goto retnull ;	169:3:3886:3898	3145408	1	True				
ANR	3145907	Identifier	retnull		3145408	0					
ANR	3145908	ExpressionStatement		170:2:3902:3902	3145408	24	True				
ANR	3145909	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) / 2 ; i ++ )		3145408	25					
ANR	3145910	ForInit	i = 0 ;	175:6:3971:3974	3145408	0	True				
ANR	3145911	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145912	Identifier	i		3145408	0					
ANR	3145913	PrimaryExpression	0		3145408	1					
ANR	3145914	Condition	i < g . getNumNodes ( ) / 2	175:11:3976:3994	3145408	1	True				
ANR	3145915	RelationalExpression	i < g . getNumNodes ( ) / 2		3145408	0		<			
ANR	3145916	Identifier	i		3145408	0					
ANR	3145917	MultiplicativeExpression	g . getNumNodes ( ) / 2		3145408	1		/			
ANR	3145918	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145919	Callee	g . getNumNodes		3145408	0					
ANR	3145920	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145921	Identifier	g		3145408	0					
ANR	3145922	Identifier	getNumNodes		3145408	1					
ANR	3145923	ArgumentList			3145408	1					
ANR	3145924	PrimaryExpression	2		3145408	1					
ANR	3145925	PostIncDecOperationExpression	i ++	175:32:3997:3999	3145408	2	True				
ANR	3145926	Identifier	i		3145408	0					
ANR	3145927	IncDec	++		3145408	1					
ANR	3145928	ExpressionStatement	sked [ i + g . getNumNodes ( ) / 2 ] = sked [ i ]	176:2:4005:4043	3145408	3	True				
ANR	3145929	AssignmentExpression	sked [ i + g . getNumNodes ( ) / 2 ] = sked [ i ]		3145408	0		=			
ANR	3145930	ArrayIndexing	sked [ i + g . getNumNodes ( ) / 2 ]		3145408	0					
ANR	3145931	Identifier	sked		3145408	0					
ANR	3145932	AdditiveExpression	i + g . getNumNodes ( ) / 2		3145408	1		+			
ANR	3145933	Identifier	i		3145408	0					
ANR	3145934	MultiplicativeExpression	g . getNumNodes ( ) / 2		3145408	1		/			
ANR	3145935	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145936	Callee	g . getNumNodes		3145408	0					
ANR	3145937	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145938	Identifier	g		3145408	0					
ANR	3145939	Identifier	getNumNodes		3145408	1					
ANR	3145940	ArgumentList			3145408	1					
ANR	3145941	PrimaryExpression	2		3145408	1					
ANR	3145942	ArrayIndexing	sked [ i ]		3145408	1					
ANR	3145943	Identifier	sked		3145408	0					
ANR	3145944	Identifier	i		3145408	1					
ANR	3145945	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) / 2 ; i ++ )		3145408	26					
ANR	3145946	ForInit	i = 0 ;	177:6:4051:4054	3145408	0	True				
ANR	3145947	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145948	Identifier	i		3145408	0					
ANR	3145949	PrimaryExpression	0		3145408	1					
ANR	3145950	Condition	i < g . getNumNodes ( ) / 2	177:11:4056:4074	3145408	1	True				
ANR	3145951	RelationalExpression	i < g . getNumNodes ( ) / 2		3145408	0		<			
ANR	3145952	Identifier	i		3145408	0					
ANR	3145953	MultiplicativeExpression	g . getNumNodes ( ) / 2		3145408	1		/			
ANR	3145954	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145955	Callee	g . getNumNodes		3145408	0					
ANR	3145956	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145957	Identifier	g		3145408	0					
ANR	3145958	Identifier	getNumNodes		3145408	1					
ANR	3145959	ArgumentList			3145408	1					
ANR	3145960	PrimaryExpression	2		3145408	1					
ANR	3145961	PostIncDecOperationExpression	i ++	177:32:4077:4079	3145408	2	True				
ANR	3145962	Identifier	i		3145408	0					
ANR	3145963	IncDec	++		3145408	1					
ANR	3145964	ExpressionStatement	sked [ i ] = sked [ g . getNumNodes ( ) - i - 1 ]	178:2:4085:4127	3145408	3	True				
ANR	3145965	AssignmentExpression	sked [ i ] = sked [ g . getNumNodes ( ) - i - 1 ]		3145408	0		=			
ANR	3145966	ArrayIndexing	sked [ i ]		3145408	0					
ANR	3145967	Identifier	sked		3145408	0					
ANR	3145968	Identifier	i		3145408	1					
ANR	3145969	ArrayIndexing	sked [ g . getNumNodes ( ) - i - 1 ]		3145408	1					
ANR	3145970	Identifier	sked		3145408	0					
ANR	3145971	AdditiveExpression	g . getNumNodes ( ) - i - 1		3145408	1		-			
ANR	3145972	CallExpression	g . getNumNodes ( )		3145408	0					
ANR	3145973	Callee	g . getNumNodes		3145408	0					
ANR	3145974	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145975	Identifier	g		3145408	0					
ANR	3145976	Identifier	getNumNodes		3145408	1					
ANR	3145977	ArgumentList			3145408	1					
ANR	3145978	AdditiveExpression	i - 1		3145408	1		-			
ANR	3145979	Identifier	i		3145408	0					
ANR	3145980	PrimaryExpression	1		3145408	1					
ANR	3145981	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3145408	27					
ANR	3145982	ForInit	i = 0 ;	182:6:4213:4216	3145408	0	True				
ANR	3145983	AssignmentExpression	i = 0		3145408	0		=			
ANR	3145984	Identifier	i		3145408	0					
ANR	3145985	PrimaryExpression	0		3145408	1					
ANR	3145986	Condition	i < g . getNumNodes ( )	182:11:4218:4234	3145408	1	True				
ANR	3145987	RelationalExpression	i < g . getNumNodes ( )		3145408	0		<			
ANR	3145988	Identifier	i		3145408	0					
ANR	3145989	CallExpression	g . getNumNodes ( )		3145408	1					
ANR	3145990	Callee	g . getNumNodes		3145408	0					
ANR	3145991	MemberAccess	g . getNumNodes		3145408	0					
ANR	3145992	Identifier	g		3145408	0					
ANR	3145993	Identifier	getNumNodes		3145408	1					
ANR	3145994	ArgumentList			3145408	1					
ANR	3145995	PostIncDecOperationExpression	i ++	182:30:4237:4239	3145408	2	True				
ANR	3145996	Identifier	i		3145408	0					
ANR	3145997	IncDec	++		3145408	1					
ANR	3145998	CompoundStatement		137:36:3059:3059	3145408	3					
ANR	3145999	IfStatement	if ( 2 == color [ i ] )		3145408	0					
ANR	3146000	Condition	2 == color [ i ]	183:6:4251:4261	3145408	0	True				
ANR	3146001	EqualityExpression	2 == color [ i ]		3145408	0		==			
ANR	3146002	PrimaryExpression	2		3145408	0					
ANR	3146003	ArrayIndexing	color [ i ]		3145408	1					
ANR	3146004	Identifier	color		3145408	0					
ANR	3146005	Identifier	i		3145408	1					
ANR	3146006	CompoundStatement		138:20:3081:3081	3145408	1					
ANR	3146007	ExpressionStatement	sked [ idx ] = i	184:3:4270:4283	3145408	0	True				
ANR	3146008	AssignmentExpression	sked [ idx ] = i		3145408	0		=			
ANR	3146009	ArrayIndexing	sked [ idx ]		3145408	0					
ANR	3146010	Identifier	sked		3145408	0					
ANR	3146011	Identifier	idx		3145408	1					
ANR	3146012	Identifier	i		3145408	1					
ANR	3146013	ExpressionStatement	idx ++	185:3:4288:4293	3145408	1	True				
ANR	3146014	PostIncDecOperationExpression	idx ++		3145408	0					
ANR	3146015	Identifier	idx		3145408	0					
ANR	3146016	IncDec	++		3145408	1					
ANR	3146017	ExpressionStatement		186:3:4298:4298	3145408	1	True				
ANR	3146018	ExpressionStatement		187:2:4302:4302	3145408	28	True				
ANR	3146019	Statement	delete	190:1:4307:4312	3145408	29	True				
ANR	3146020	Statement	[	190:7:4313:4313	3145408	30	True				
ANR	3146021	Statement	]	190:8:4314:4314	3145408	31	True				
ANR	3146022	ExpressionStatement	color	190:10:4316:4321	3145408	32	True				
ANR	3146023	Identifier	color		3145408	0					
ANR	3146024	ReturnStatement	return sked ;	191:1:4324:4335	3145408	33	True				
ANR	3146025	Identifier	sked		3145408	0					
ANR	3146026	Label	retnull :	193:0:4338:4345	3145408	34	True				
ANR	3146027	Identifier	retnull		3145408	0					
ANR	3146028	IfStatement	if ( color )		3145408	35					
ANR	3146029	Condition	color	194:5:4352:4356	3145408	0	True				
ANR	3146030	Identifier	color		3145408	0					
ANR	3146031	Statement	delete	194:13:4360:4365	3145408	1	True				
ANR	3146032	Statement	[	194:19:4366:4366	3145408	36	True				
ANR	3146033	Statement	]	194:20:4367:4367	3145408	37	True				
ANR	3146034	ExpressionStatement	color	194:22:4369:4374	3145408	38	True				
ANR	3146035	Identifier	color		3145408	0					
ANR	3146036	IfStatement	if ( sked )		3145408	39					
ANR	3146037	Condition	sked	195:5:4381:4384	3145408	0	True				
ANR	3146038	Identifier	sked		3145408	0					
ANR	3146039	Statement	delete	195:12:4388:4393	3145408	1	True				
ANR	3146040	Statement	[	195:18:4394:4394	3145408	40	True				
ANR	3146041	Statement	]	195:19:4395:4395	3145408	41	True				
ANR	3146042	ExpressionStatement	sked	195:21:4397:4401	3145408	42	True				
ANR	3146043	Identifier	sked		3145408	0					
ANR	3146044	ReturnStatement	return NULL ;	196:1:4404:4415	3145408	43	True				
ANR	3146045	Identifier	NULL		3145408	0					
ANR	3146046	ReturnType	int *		3145408	1					
ANR	3146047	Identifier	ConstituentLibrary :: checkN		3145408	2					
ANR	3146048	ParameterList	const Dag & g		3145408	3					
ANR	3146049	Parameter	const Dag & g	45:33:1169:1180	3145408	0	True				
ANR	3146050	ParameterType	const Dag &		3145408	0					
ANR	3146051	Identifier	g		3145408	1					
ANR	3146052	CFGEntryNode	ENTRY		3145408		True				
ANR	3146053	CFGExitNode	EXIT		3145408		True				
ANR	3146054	CFGExceptionNode	EXCEPTION		3145408		True				
ANR	3146055	Symbol	sked		3145408						
ANR	3146056	Symbol	g . getNumNodes		3145408						
ANR	3146057	Symbol	g . getNumArcs		3145408						
ANR	3146058	Symbol	color		3145408						
ANR	3146059	Symbol	* parent1		3145408						
ANR	3146060	Symbol	* parent0		3145408						
ANR	3146061	Symbol	g . getArc		3145408						
ANR	3146062	Symbol	* sked		3145408						
ANR	3146063	Symbol	source		3145408						
ANR	3146064	Symbol	gRev		3145408						
ANR	3146065	Symbol	child0		3145408						
ANR	3146066	Symbol	* g . getNumNodes		3145408						
ANR	3146067	Symbol	child1		3145408						
ANR	3146068	Symbol	* source		3145408						
ANR	3146069	Symbol	* idx		3145408						
ANR	3146070	Symbol	* child1		3145408						
ANR	3146071	Symbol	* child0		3145408						
ANR	3146072	Symbol	NULL		3145408						
ANR	3146073	Symbol	sink		3145408						
ANR	3146074	Symbol	gRev . getNumArcs		3145408						
ANR	3146075	Symbol	g		3145408						
ANR	3146076	Symbol	i		3145408						
ANR	3146077	Symbol	* color		3145408						
ANR	3146078	Symbol	* sink		3145408						
ANR	3146079	Symbol	parent0		3145408						
ANR	3146080	Symbol	parent1		3145408						
ANR	3146081	Symbol	* g		3145408						
ANR	3146082	Symbol	* i		3145408						
ANR	3146083	Symbol	gRev . getArc		3145408						
ANR	3146084	Symbol	true		3145408						
ANR	3146085	Symbol	idx		3145408						
ANR	3146086	Function	ConstituentLibrary :: checkC	219:0:4822:5216							
ANR	3146087	FunctionDef	ConstituentLibrary :: checkC (const Dag & g)		3146086	0					
ANR	3146088	CompoundStatement		220:0:4869:5216	3146086	0					
ANR	3146089	IdentifierDeclStatement	Dag gRep ;	222:1:4897:4905	3146086	0	True				
ANR	3146090	IdentifierDecl	gRep		3146086	0					
ANR	3146091	IdentifierDeclType	Dag		3146086	0					
ANR	3146092	Identifier	gRep		3146086	1					
ANR	3146093	ExpressionStatement	gRep . initializeWith ( g )	223:1:4908:4930	3146086	1	True				
ANR	3146094	CallExpression	gRep . initializeWith ( g )		3146086	0					
ANR	3146095	Callee	gRep . initializeWith		3146086	0					
ANR	3146096	MemberAccess	gRep . initializeWith		3146086	0					
ANR	3146097	Identifier	gRep		3146086	0					
ANR	3146098	Identifier	initializeWith		3146086	1					
ANR	3146099	ArgumentList	g		3146086	1					
ANR	3146100	Argument	g		3146086	0					
ANR	3146101	Identifier	g		3146086	0					
ANR	3146102	IfStatement	if ( ( gRep . getNumNodes ( ) % 2 ) != 0 || gRep . getNumNodes ( ) < 4 )		3146086	2					
ANR	3146103	Condition	( gRep . getNumNodes ( ) % 2 ) != 0 || gRep . getNumNodes ( ) < 4	226:5:4994:5044	3146086	0	True				
ANR	3146104	OrExpression	( gRep . getNumNodes ( ) % 2 ) != 0 || gRep . getNumNodes ( ) < 4		3146086	0		||			
ANR	3146105	EqualityExpression	( gRep . getNumNodes ( ) % 2 ) != 0		3146086	0		!=			
ANR	3146106	MultiplicativeExpression	gRep . getNumNodes ( ) % 2		3146086	0		%			
ANR	3146107	CallExpression	gRep . getNumNodes ( )		3146086	0					
ANR	3146108	Callee	gRep . getNumNodes		3146086	0					
ANR	3146109	MemberAccess	gRep . getNumNodes		3146086	0					
ANR	3146110	Identifier	gRep		3146086	0					
ANR	3146111	Identifier	getNumNodes		3146086	1					
ANR	3146112	ArgumentList			3146086	1					
ANR	3146113	PrimaryExpression	2		3146086	1					
ANR	3146114	PrimaryExpression	0		3146086	1					
ANR	3146115	RelationalExpression	gRep . getNumNodes ( ) < 4		3146086	1		<			
ANR	3146116	CallExpression	gRep . getNumNodes ( )		3146086	0					
ANR	3146117	Callee	gRep . getNumNodes		3146086	0					
ANR	3146118	MemberAccess	gRep . getNumNodes		3146086	0					
ANR	3146119	Identifier	gRep		3146086	0					
ANR	3146120	Identifier	getNumNodes		3146086	1					
ANR	3146121	ArgumentList			3146086	1					
ANR	3146122	PrimaryExpression	4		3146086	1					
ANR	3146123	ReturnStatement	return NULL ;	227:2:5050:5061	3146086	1	True				
ANR	3146124	Identifier	NULL		3146086	0					
ANR	3146125	IfStatement	if ( 0 >= gRep . getNumArcs ( 0 ) )		3146086	3					
ANR	3146126	Condition	0 >= gRep . getNumArcs ( 0 )	230:5:5100:5120	3146086	0	True				
ANR	3146127	RelationalExpression	0 >= gRep . getNumArcs ( 0 )		3146086	0		>=			
ANR	3146128	PrimaryExpression	0		3146086	0					
ANR	3146129	CallExpression	gRep . getNumArcs ( 0 )		3146086	1					
ANR	3146130	Callee	gRep . getNumArcs		3146086	0					
ANR	3146131	MemberAccess	gRep . getNumArcs		3146086	0					
ANR	3146132	Identifier	gRep		3146086	0					
ANR	3146133	Identifier	getNumArcs		3146086	1					
ANR	3146134	ArgumentList	0		3146086	1					
ANR	3146135	Argument	0		3146086	0					
ANR	3146136	PrimaryExpression	0		3146086	0					
ANR	3146137	ReturnStatement	return NULL ;	231:2:5126:5137	3146086	1	True				
ANR	3146138	Identifier	NULL		3146086	0					
ANR	3146139	IdentifierDeclStatement	int child = gRep . deappendArc ( 0 ) ;	232:1:5140:5171	3146086	4	True				
ANR	3146140	IdentifierDecl	child = gRep . deappendArc ( 0 )		3146086	0					
ANR	3146141	IdentifierDeclType	int		3146086	0					
ANR	3146142	Identifier	child		3146086	1					
ANR	3146143	AssignmentExpression	child = gRep . deappendArc ( 0 )		3146086	2		=			
ANR	3146144	Identifier	child		3146086	0					
ANR	3146145	CallExpression	gRep . deappendArc ( 0 )		3146086	1					
ANR	3146146	Callee	gRep . deappendArc		3146086	0					
ANR	3146147	MemberAccess	gRep . deappendArc		3146086	0					
ANR	3146148	Identifier	gRep		3146086	0					
ANR	3146149	Identifier	deappendArc		3146086	1					
ANR	3146150	ArgumentList	0		3146086	1					
ANR	3146151	Argument	0		3146086	0					
ANR	3146152	PrimaryExpression	0		3146086	0					
ANR	3146153	IdentifierDeclStatement	int * sched = checkN ( gRep ) ;	233:1:5174:5199	3146086	5	True				
ANR	3146154	IdentifierDecl	* sched = checkN ( gRep )		3146086	0					
ANR	3146155	IdentifierDeclType	int *		3146086	0					
ANR	3146156	Identifier	sched		3146086	1					
ANR	3146157	AssignmentExpression	* sched = checkN ( gRep )		3146086	2		=			
ANR	3146158	Identifier	sched		3146086	0					
ANR	3146159	CallExpression	checkN ( gRep )		3146086	1					
ANR	3146160	Callee	checkN		3146086	0					
ANR	3146161	Identifier	checkN		3146086	0					
ANR	3146162	ArgumentList	gRep		3146086	1					
ANR	3146163	Argument	gRep		3146086	0					
ANR	3146164	Identifier	gRep		3146086	0					
ANR	3146165	ReturnStatement	return sched ;	234:1:5202:5214	3146086	6	True				
ANR	3146166	Identifier	sched		3146086	0					
ANR	3146167	ReturnType	int *		3146086	1					
ANR	3146168	Identifier	ConstituentLibrary :: checkC		3146086	2					
ANR	3146169	ParameterList	const Dag & g		3146086	3					
ANR	3146170	Parameter	const Dag & g	219:33:4855:4866	3146086	0	True				
ANR	3146171	ParameterType	const Dag &		3146086	0					
ANR	3146172	Identifier	g		3146086	1					
ANR	3146173	CFGEntryNode	ENTRY		3146086		True				
ANR	3146174	CFGExitNode	EXIT		3146086		True				
ANR	3146175	Symbol	NULL		3146086						
ANR	3146176	Symbol	gRep . getNumArcs		3146086						
ANR	3146177	Symbol	sched		3146086						
ANR	3146178	Symbol	gRep		3146086						
ANR	3146179	Symbol	gRep . getNumNodes		3146086						
ANR	3146180	Symbol	g		3146086						
ANR	3146181	Symbol	gRep . deappendArc		3146086						
ANR	3146182	Symbol	checkN		3146086						
ANR	3146183	Symbol	child		3146086						
ANR	3146184	Function	ConstituentLibrary :: checkStrandW	257:0:5730:10961							
ANR	3146185	FunctionDef	"ConstituentLibrary :: checkStrandW (const Dag & g , const Dag & gRev , int * * ppYield , int * * ppSeq , int * pSrc)"		3146184	0					
ANR	3146186	CompoundStatement		260:0:5861:10961	3146184	0					
ANR	3146187	IdentifierDeclStatement	int * color = NULL ;	261:1:5864:5881	3146184	0	True				
ANR	3146188	IdentifierDecl	* color = NULL		3146184	0					
ANR	3146189	IdentifierDeclType	int *		3146184	0					
ANR	3146190	Identifier	color		3146184	1					
ANR	3146191	AssignmentExpression	* color = NULL		3146184	2		=			
ANR	3146192	Identifier	NULL		3146184	0					
ANR	3146193	Identifier	NULL		3146184	1					
ANR	3146194	IdentifierDeclStatement	int * yield = NULL ;	262:1:5884:5901	3146184	1	True				
ANR	3146195	IdentifierDecl	* yield = NULL		3146184	0					
ANR	3146196	IdentifierDeclType	int *		3146184	0					
ANR	3146197	Identifier	yield		3146184	1					
ANR	3146198	AssignmentExpression	* yield = NULL		3146184	2		=			
ANR	3146199	Identifier	NULL		3146184	0					
ANR	3146200	Identifier	NULL		3146184	1					
ANR	3146201	IdentifierDeclStatement	int * seq = NULL ;	263:1:5904:5919	3146184	2	True				
ANR	3146202	IdentifierDecl	* seq = NULL		3146184	0					
ANR	3146203	IdentifierDeclType	int *		3146184	0					
ANR	3146204	Identifier	seq		3146184	1					
ANR	3146205	AssignmentExpression	* seq = NULL		3146184	2		=			
ANR	3146206	Identifier	NULL		3146184	0					
ANR	3146207	Identifier	NULL		3146184	1					
ANR	3146208	IdentifierDeclStatement	"int i , j , idx , source , child , parent , sibling , otherParent ;"	264:1:5922:5973	3146184	3	True				
ANR	3146209	IdentifierDecl	i		3146184	0					
ANR	3146210	IdentifierDeclType	int		3146184	0					
ANR	3146211	Identifier	i		3146184	1					
ANR	3146212	IdentifierDecl	j		3146184	1					
ANR	3146213	IdentifierDeclType	int		3146184	0					
ANR	3146214	Identifier	j		3146184	1					
ANR	3146215	IdentifierDecl	idx		3146184	2					
ANR	3146216	IdentifierDeclType	int		3146184	0					
ANR	3146217	Identifier	idx		3146184	1					
ANR	3146218	IdentifierDecl	source		3146184	3					
ANR	3146219	IdentifierDeclType	int		3146184	0					
ANR	3146220	Identifier	source		3146184	1					
ANR	3146221	IdentifierDecl	child		3146184	4					
ANR	3146222	IdentifierDeclType	int		3146184	0					
ANR	3146223	Identifier	child		3146184	1					
ANR	3146224	IdentifierDecl	parent		3146184	5					
ANR	3146225	IdentifierDeclType	int		3146184	0					
ANR	3146226	Identifier	parent		3146184	1					
ANR	3146227	IdentifierDecl	sibling		3146184	6					
ANR	3146228	IdentifierDeclType	int		3146184	0					
ANR	3146229	Identifier	sibling		3146184	1					
ANR	3146230	IdentifierDecl	otherParent		3146184	7					
ANR	3146231	IdentifierDeclType	int		3146184	0					
ANR	3146232	Identifier	otherParent		3146184	1					
ANR	3146233	IdentifierDeclStatement	bool found ;	265:1:5976:5986	3146184	4	True				
ANR	3146234	IdentifierDecl	found		3146184	0					
ANR	3146235	IdentifierDeclType	bool		3146184	0					
ANR	3146236	Identifier	found		3146184	1					
ANR	3146237	ExpressionStatement	yield = new int [ g . getNumNodes ( ) ]	268:1:6047:6079	3146184	5	True				
ANR	3146238	AssignmentExpression	yield = new int [ g . getNumNodes ( ) ]		3146184	0		=			
ANR	3146239	Identifier	yield		3146184	0					
ANR	3146240	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146241	Callee	g . getNumNodes		3146184	0					
ANR	3146242	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146243	Identifier	g		3146184	0					
ANR	3146244	Identifier	getNumNodes		3146184	1					
ANR	3146245	ArgumentList			3146184	1					
ANR	3146246	ExpressionStatement	color = new int [ g . getNumNodes ( ) ]	269:1:6082:6114	3146184	6	True				
ANR	3146247	AssignmentExpression	color = new int [ g . getNumNodes ( ) ]		3146184	0		=			
ANR	3146248	Identifier	color		3146184	0					
ANR	3146249	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146250	Callee	g . getNumNodes		3146184	0					
ANR	3146251	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146252	Identifier	g		3146184	0					
ANR	3146253	Identifier	getNumNodes		3146184	1					
ANR	3146254	ArgumentList			3146184	1					
ANR	3146255	ExpressionStatement	seq = new int [ g . getNumNodes ( ) ]	270:1:6117:6147	3146184	7	True				
ANR	3146256	AssignmentExpression	seq = new int [ g . getNumNodes ( ) ]		3146184	0		=			
ANR	3146257	Identifier	seq		3146184	0					
ANR	3146258	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146259	Callee	g . getNumNodes		3146184	0					
ANR	3146260	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146261	Identifier	g		3146184	0					
ANR	3146262	Identifier	getNumNodes		3146184	1					
ANR	3146263	ArgumentList			3146184	1					
ANR	3146264	IfStatement	if ( NULL == color || NULL == yield || NULL == seq )		3146184	8					
ANR	3146265	Condition	NULL == color || NULL == yield || NULL == seq	271:5:6154:6192	3146184	0	True				
ANR	3146266	OrExpression	NULL == color || NULL == yield || NULL == seq		3146184	0		||			
ANR	3146267	EqualityExpression	NULL == color		3146184	0		==			
ANR	3146268	Identifier	NULL		3146184	0					
ANR	3146269	Identifier	color		3146184	1					
ANR	3146270	OrExpression	NULL == yield || NULL == seq		3146184	1		||			
ANR	3146271	EqualityExpression	NULL == yield		3146184	0		==			
ANR	3146272	Identifier	NULL		3146184	0					
ANR	3146273	Identifier	yield		3146184	1					
ANR	3146274	EqualityExpression	NULL == seq		3146184	1		==			
ANR	3146275	Identifier	NULL		3146184	0					
ANR	3146276	Identifier	seq		3146184	1					
ANR	3146277	ThrowStatement	"throw ""ConstituentLibrary::checkStrandW, allocation"" ;"	272:2:6198:6250	3146184	1	True				
ANR	3146278	PrimaryExpression	"""ConstituentLibrary::checkStrandW, allocation"""		3146184	0					
ANR	3146279	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3146184	9					
ANR	3146280	ForInit	i = 0 ;	275:6:6277:6280	3146184	0	True				
ANR	3146281	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146282	Identifier	i		3146184	0					
ANR	3146283	PrimaryExpression	0		3146184	1					
ANR	3146284	Condition	i < g . getNumNodes ( )	275:11:6282:6298	3146184	1	True				
ANR	3146285	RelationalExpression	i < g . getNumNodes ( )		3146184	0		<			
ANR	3146286	Identifier	i		3146184	0					
ANR	3146287	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146288	Callee	g . getNumNodes		3146184	0					
ANR	3146289	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146290	Identifier	g		3146184	0					
ANR	3146291	Identifier	getNumNodes		3146184	1					
ANR	3146292	ArgumentList			3146184	1					
ANR	3146293	PostIncDecOperationExpression	i ++	275:30:6301:6303	3146184	2	True				
ANR	3146294	Identifier	i		3146184	0					
ANR	3146295	IncDec	++		3146184	1					
ANR	3146296	CompoundStatement		16:36:445:445	3146184	3					
ANR	3146297	IfStatement	if ( 0 == gRev . getNumArcs ( i ) )		3146184	0					
ANR	3146298	Condition	0 == gRev . getNumArcs ( i )	276:6:6315:6335	3146184	0	True				
ANR	3146299	EqualityExpression	0 == gRev . getNumArcs ( i )		3146184	0		==			
ANR	3146300	PrimaryExpression	0		3146184	0					
ANR	3146301	CallExpression	gRev . getNumArcs ( i )		3146184	1					
ANR	3146302	Callee	gRev . getNumArcs		3146184	0					
ANR	3146303	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146304	Identifier	gRev		3146184	0					
ANR	3146305	Identifier	getNumArcs		3146184	1					
ANR	3146306	ArgumentList	i		3146184	1					
ANR	3146307	Argument	i		3146184	0					
ANR	3146308	Identifier	i		3146184	0					
ANR	3146309	BreakStatement	break ;	277:3:6342:6347	3146184	1	True				
ANR	3146310	ExpressionStatement		278:2:6351:6351	3146184	10	True				
ANR	3146311	IfStatement	if ( g . getNumNodes ( ) == i )		3146184	11					
ANR	3146312	Condition	g . getNumNodes ( ) == i	280:5:6388:6405	3146184	0	True				
ANR	3146313	EqualityExpression	g . getNumNodes ( ) == i		3146184	0		==			
ANR	3146314	CallExpression	g . getNumNodes ( )		3146184	0					
ANR	3146315	Callee	g . getNumNodes		3146184	0					
ANR	3146316	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146317	Identifier	g		3146184	0					
ANR	3146318	Identifier	getNumNodes		3146184	1					
ANR	3146319	ArgumentList			3146184	1					
ANR	3146320	Identifier	i		3146184	1					
ANR	3146321	GotoStatement	goto retnull ;	281:2:6411:6423	3146184	1	True				
ANR	3146322	Identifier	retnull		3146184	0					
ANR	3146323	ExpressionStatement	source = i	282:1:6426:6436	3146184	12	True				
ANR	3146324	AssignmentExpression	source = i		3146184	0		=			
ANR	3146325	Identifier	source		3146184	0					
ANR	3146326	Identifier	i		3146184	1					
ANR	3146327	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3146184	13					
ANR	3146328	ForInit	i = 0 ;	286:6:6489:6492	3146184	0	True				
ANR	3146329	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146330	Identifier	i		3146184	0					
ANR	3146331	PrimaryExpression	0		3146184	1					
ANR	3146332	Condition	i < g . getNumNodes ( )	286:11:6494:6510	3146184	1	True				
ANR	3146333	RelationalExpression	i < g . getNumNodes ( )		3146184	0		<			
ANR	3146334	Identifier	i		3146184	0					
ANR	3146335	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146336	Callee	g . getNumNodes		3146184	0					
ANR	3146337	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146338	Identifier	g		3146184	0					
ANR	3146339	Identifier	getNumNodes		3146184	1					
ANR	3146340	ArgumentList			3146184	1					
ANR	3146341	PostIncDecOperationExpression	i ++	286:30:6513:6515	3146184	2	True				
ANR	3146342	Identifier	i		3146184	0					
ANR	3146343	IncDec	++		3146184	1					
ANR	3146344	ExpressionStatement	color [ i ] = 0	287:2:6521:6533	3146184	3	True				
ANR	3146345	AssignmentExpression	color [ i ] = 0		3146184	0		=			
ANR	3146346	ArrayIndexing	color [ i ]		3146184	0					
ANR	3146347	Identifier	color		3146184	0					
ANR	3146348	Identifier	i		3146184	1					
ANR	3146349	PrimaryExpression	0		3146184	1					
ANR	3146350	ExpressionStatement	found = true	288:1:6536:6548	3146184	14	True				
ANR	3146351	AssignmentExpression	found = true		3146184	0		=			
ANR	3146352	Identifier	found		3146184	0					
ANR	3146353	Identifier	true		3146184	1					
ANR	3146354	WhileStatement	while ( found )		3146184	15					
ANR	3146355	Condition	found	289:8:6558:6562	3146184	0	True				
ANR	3146356	Identifier	found		3146184	0					
ANR	3146357	CompoundStatement		30:16:704:704	3146184	1					
ANR	3146358	ExpressionStatement	color [ source ] = 1	291:2:6581:6598	3146184	0	True				
ANR	3146359	AssignmentExpression	color [ source ] = 1		3146184	0		=			
ANR	3146360	ArrayIndexing	color [ source ]		3146184	0					
ANR	3146361	Identifier	color		3146184	0					
ANR	3146362	Identifier	source		3146184	1					
ANR	3146363	PrimaryExpression	1		3146184	1					
ANR	3146364	ExpressionStatement	found = false	293:2:6633:6646	3146184	1	True				
ANR	3146365	AssignmentExpression	found = false		3146184	0		=			
ANR	3146366	Identifier	found		3146184	0					
ANR	3146367	Identifier	false		3146184	1					
ANR	3146368	ForStatement	for ( i = 0 ; i < g . getNumArcs ( source ) ; i ++ )		3146184	2					
ANR	3146369	ForInit	i = 0 ;	295:7:6692:6695	3146184	0	True				
ANR	3146370	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146371	Identifier	i		3146184	0					
ANR	3146372	PrimaryExpression	0		3146184	1					
ANR	3146373	Condition	i < g . getNumArcs ( source )	295:12:6697:6718	3146184	1	True				
ANR	3146374	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146375	Identifier	i		3146184	0					
ANR	3146376	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146377	Callee	g . getNumArcs		3146184	0					
ANR	3146378	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146379	Identifier	g		3146184	0					
ANR	3146380	Identifier	getNumArcs		3146184	1					
ANR	3146381	ArgumentList	source		3146184	1					
ANR	3146382	Argument	source		3146184	0					
ANR	3146383	Identifier	source		3146184	0					
ANR	3146384	PostIncDecOperationExpression	i ++	295:36:6721:6723	3146184	2	True				
ANR	3146385	Identifier	i		3146184	0					
ANR	3146386	IncDec	++		3146184	1					
ANR	3146387	CompoundStatement		36:42:865:865	3146184	3					
ANR	3146388	ExpressionStatement	"child = g . getArc ( source , i )"	296:12:6741:6767	3146184	0	True				
ANR	3146389	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146390	Identifier	child		3146184	0					
ANR	3146391	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146392	Callee	g . getArc		3146184	0					
ANR	3146393	MemberAccess	g . getArc		3146184	0					
ANR	3146394	Identifier	g		3146184	0					
ANR	3146395	Identifier	getArc		3146184	1					
ANR	3146396	ArgumentList	source		3146184	1					
ANR	3146397	Argument	source		3146184	0					
ANR	3146398	Identifier	source		3146184	0					
ANR	3146399	Argument	i		3146184	1					
ANR	3146400	Identifier	i		3146184	0					
ANR	3146401	ForStatement	for ( j = 0 ; j < gRev . getNumArcs ( child ) ; j ++ )		3146184	1					
ANR	3146402	ForInit	j = 0 ;	298:8:6817:6820	3146184	0	True				
ANR	3146403	AssignmentExpression	j = 0		3146184	0		=			
ANR	3146404	Identifier	j		3146184	0					
ANR	3146405	PrimaryExpression	0		3146184	1					
ANR	3146406	Condition	j < gRev . getNumArcs ( child )	298:13:6822:6845	3146184	1	True				
ANR	3146407	RelationalExpression	j < gRev . getNumArcs ( child )		3146184	0		<			
ANR	3146408	Identifier	j		3146184	0					
ANR	3146409	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146410	Callee	gRev . getNumArcs		3146184	0					
ANR	3146411	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146412	Identifier	gRev		3146184	0					
ANR	3146413	Identifier	getNumArcs		3146184	1					
ANR	3146414	ArgumentList	child		3146184	1					
ANR	3146415	Argument	child		3146184	0					
ANR	3146416	Identifier	child		3146184	0					
ANR	3146417	PostIncDecOperationExpression	j ++	298:39:6848:6850	3146184	2	True				
ANR	3146418	Identifier	j		3146184	0					
ANR	3146419	IncDec	++		3146184	1					
ANR	3146420	CompoundStatement		39:45:992:992	3146184	3					
ANR	3146421	ExpressionStatement	"parent = gRev . getArc ( child , j )"	299:4:6860:6889	3146184	0	True				
ANR	3146422	AssignmentExpression	"parent = gRev . getArc ( child , j )"		3146184	0		=			
ANR	3146423	Identifier	parent		3146184	0					
ANR	3146424	CallExpression	"gRev . getArc ( child , j )"		3146184	1					
ANR	3146425	Callee	gRev . getArc		3146184	0					
ANR	3146426	MemberAccess	gRev . getArc		3146184	0					
ANR	3146427	Identifier	gRev		3146184	0					
ANR	3146428	Identifier	getArc		3146184	1					
ANR	3146429	ArgumentList	child		3146184	1					
ANR	3146430	Argument	child		3146184	0					
ANR	3146431	Identifier	child		3146184	0					
ANR	3146432	Argument	j		3146184	1					
ANR	3146433	Identifier	j		3146184	0					
ANR	3146434	IfStatement	if ( 0 == color [ parent ] )		3146184	1					
ANR	3146435	Condition	0 == color [ parent ]	301:8:6947:6962	3146184	0	True				
ANR	3146436	EqualityExpression	0 == color [ parent ]		3146184	0		==			
ANR	3146437	PrimaryExpression	0		3146184	0					
ANR	3146438	ArrayIndexing	color [ parent ]		3146184	1					
ANR	3146439	Identifier	color		3146184	0					
ANR	3146440	Identifier	parent		3146184	1					
ANR	3146441	CompoundStatement		42:27:1104:1104	3146184	1					
ANR	3146442	ExpressionStatement	found = true	302:5:6973:6985	3146184	0	True				
ANR	3146443	AssignmentExpression	found = true		3146184	0		=			
ANR	3146444	Identifier	found		3146184	0					
ANR	3146445	Identifier	true		3146184	1					
ANR	3146446	ExpressionStatement	sibling = parent	303:5:6992:7008	3146184	1	True				
ANR	3146447	AssignmentExpression	sibling = parent		3146184	0		=			
ANR	3146448	Identifier	sibling		3146184	0					
ANR	3146449	Identifier	parent		3146184	1					
ANR	3146450	ExpressionStatement		304:5:7015:7015	3146184	2	True				
ANR	3146451	ExpressionStatement		305:4:7021:7021	3146184	2	True				
ANR	3146452	ExpressionStatement		306:3:7026:7026	3146184	3	True				
ANR	3146453	IfStatement	if ( found )		3146184	4					
ANR	3146454	Condition	found	308:5:7034:7038	3146184	0	True				
ANR	3146455	Identifier	found		3146184	0					
ANR	3146456	ExpressionStatement	source = sibling	309:3:7044:7060	3146184	1	True				
ANR	3146457	AssignmentExpression	source = sibling		3146184	0		=			
ANR	3146458	Identifier	source		3146184	0					
ANR	3146459	Identifier	sibling		3146184	1					
ANR	3146460	ExpressionStatement		310:2:7064:7064	3146184	16	True				
ANR	3146461	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3146184	17					
ANR	3146462	ForInit	i = 0 ;	322:6:7516:7519	3146184	0	True				
ANR	3146463	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146464	Identifier	i		3146184	0					
ANR	3146465	PrimaryExpression	0		3146184	1					
ANR	3146466	Condition	i < g . getNumNodes ( )	322:11:7521:7537	3146184	1	True				
ANR	3146467	RelationalExpression	i < g . getNumNodes ( )		3146184	0		<			
ANR	3146468	Identifier	i		3146184	0					
ANR	3146469	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3146470	Callee	g . getNumNodes		3146184	0					
ANR	3146471	MemberAccess	g . getNumNodes		3146184	0					
ANR	3146472	Identifier	g		3146184	0					
ANR	3146473	Identifier	getNumNodes		3146184	1					
ANR	3146474	ArgumentList			3146184	1					
ANR	3146475	PostIncDecOperationExpression	i ++	322:30:7540:7542	3146184	2	True				
ANR	3146476	Identifier	i		3146184	0					
ANR	3146477	IncDec	++		3146184	1					
ANR	3146478	CompoundStatement		63:36:1684:1684	3146184	3					
ANR	3146479	ExpressionStatement	color [ i ] = 0	323:2:7550:7562	3146184	0	True				
ANR	3146480	AssignmentExpression	color [ i ] = 0		3146184	0		=			
ANR	3146481	ArrayIndexing	color [ i ]		3146184	0					
ANR	3146482	Identifier	color		3146184	0					
ANR	3146483	Identifier	i		3146184	1					
ANR	3146484	PrimaryExpression	0		3146184	1					
ANR	3146485	ExpressionStatement	yield [ i ] = - 1	324:2:7566:7579	3146184	1	True				
ANR	3146486	AssignmentExpression	yield [ i ] = - 1		3146184	0		=			
ANR	3146487	ArrayIndexing	yield [ i ]		3146184	0					
ANR	3146488	Identifier	yield		3146184	0					
ANR	3146489	Identifier	i		3146184	1					
ANR	3146490	UnaryOperationExpression	- 1		3146184	1					
ANR	3146491	UnaryOperator	-		3146184	0					
ANR	3146492	PrimaryExpression	1		3146184	1					
ANR	3146493	ExpressionStatement		325:2:7583:7583	3146184	18	True				
ANR	3146494	ExpressionStatement	idx = 0	327:1:7587:7592	3146184	19	True				
ANR	3146495	AssignmentExpression	idx = 0		3146184	0		=			
ANR	3146496	Identifier	idx		3146184	0					
ANR	3146497	PrimaryExpression	0		3146184	1					
ANR	3146498	WhileStatement	while ( true )		3146184	20					
ANR	3146499	Condition	true	328:7:7601:7604	3146184	0	True				
ANR	3146500	Identifier	true		3146184	0					
ANR	3146501	CompoundStatement		69:13:1745:1745	3146184	1					
ANR	3146502	IfStatement	if ( 0 != gRev . getNumArcs ( source ) )		3146184	0					
ANR	3146503	Condition	0 != gRev . getNumArcs ( source )	331:6:7645:7672	3146184	0	True				
ANR	3146504	EqualityExpression	0 != gRev . getNumArcs ( source )		3146184	0		!=			
ANR	3146505	PrimaryExpression	0		3146184	0					
ANR	3146506	CallExpression	gRev . getNumArcs ( source )		3146184	1					
ANR	3146507	Callee	gRev . getNumArcs		3146184	0					
ANR	3146508	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146509	Identifier	gRev		3146184	0					
ANR	3146510	Identifier	getNumArcs		3146184	1					
ANR	3146511	ArgumentList	source		3146184	1					
ANR	3146512	Argument	source		3146184	0					
ANR	3146513	Identifier	source		3146184	0					
ANR	3146514	GotoStatement	goto retnull ;	332:3:7679:7691	3146184	1	True				
ANR	3146515	Identifier	retnull		3146184	0					
ANR	3146516	ExpressionStatement	color [ source ] = 1	335:2:7707:7724	3146184	1	True				
ANR	3146517	AssignmentExpression	color [ source ] = 1		3146184	0		=			
ANR	3146518	ArrayIndexing	color [ source ]		3146184	0					
ANR	3146519	Identifier	color		3146184	0					
ANR	3146520	Identifier	source		3146184	1					
ANR	3146521	PrimaryExpression	1		3146184	1					
ANR	3146522	ExpressionStatement	seq [ idx ] = source	338:2:7815:7832	3146184	2	True				
ANR	3146523	AssignmentExpression	seq [ idx ] = source		3146184	0		=			
ANR	3146524	ArrayIndexing	seq [ idx ]		3146184	0					
ANR	3146525	Identifier	seq		3146184	0					
ANR	3146526	Identifier	idx		3146184	1					
ANR	3146527	Identifier	source		3146184	1					
ANR	3146528	ExpressionStatement	idx ++	339:2:7836:7841	3146184	3	True				
ANR	3146529	PostIncDecOperationExpression	idx ++		3146184	0					
ANR	3146530	Identifier	idx		3146184	0					
ANR	3146531	IncDec	++		3146184	1					
ANR	3146532	ForStatement	for ( i = 0 ; i < g . getNumArcs ( source ) ; i ++ )		3146184	4					
ANR	3146533	ForInit	i = 0 ;	342:7:7887:7890	3146184	0	True				
ANR	3146534	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146535	Identifier	i		3146184	0					
ANR	3146536	PrimaryExpression	0		3146184	1					
ANR	3146537	Condition	i < g . getNumArcs ( source )	342:12:7892:7913	3146184	1	True				
ANR	3146538	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146539	Identifier	i		3146184	0					
ANR	3146540	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146541	Callee	g . getNumArcs		3146184	0					
ANR	3146542	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146543	Identifier	g		3146184	0					
ANR	3146544	Identifier	getNumArcs		3146184	1					
ANR	3146545	ArgumentList	source		3146184	1					
ANR	3146546	Argument	source		3146184	0					
ANR	3146547	Identifier	source		3146184	0					
ANR	3146548	PostIncDecOperationExpression	i ++	342:36:7916:7918	3146184	2	True				
ANR	3146549	Identifier	i		3146184	0					
ANR	3146550	IncDec	++		3146184	1					
ANR	3146551	CompoundStatement		83:42:2060:2060	3146184	3					
ANR	3146552	ExpressionStatement	"child = g . getArc ( source , i )"	343:3:7927:7953	3146184	0	True				
ANR	3146553	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146554	Identifier	child		3146184	0					
ANR	3146555	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146556	Callee	g . getArc		3146184	0					
ANR	3146557	MemberAccess	g . getArc		3146184	0					
ANR	3146558	Identifier	g		3146184	0					
ANR	3146559	Identifier	getArc		3146184	1					
ANR	3146560	ArgumentList	source		3146184	1					
ANR	3146561	Argument	source		3146184	0					
ANR	3146562	Identifier	source		3146184	0					
ANR	3146563	Argument	i		3146184	1					
ANR	3146564	Identifier	i		3146184	0					
ANR	3146565	IfStatement	if ( 0 != g . getNumArcs ( child ) )		3146184	1					
ANR	3146566	Condition	0 != g . getNumArcs ( child )	344:7:7962:7985	3146184	0	True				
ANR	3146567	EqualityExpression	0 != g . getNumArcs ( child )		3146184	0		!=			
ANR	3146568	PrimaryExpression	0		3146184	0					
ANR	3146569	CallExpression	g . getNumArcs ( child )		3146184	1					
ANR	3146570	Callee	g . getNumArcs		3146184	0					
ANR	3146571	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146572	Identifier	g		3146184	0					
ANR	3146573	Identifier	getNumArcs		3146184	1					
ANR	3146574	ArgumentList	child		3146184	1					
ANR	3146575	Argument	child		3146184	0					
ANR	3146576	Identifier	child		3146184	0					
ANR	3146577	GotoStatement	goto retnull ;	345:4:7993:8005	3146184	1	True				
ANR	3146578	Identifier	retnull		3146184	0					
ANR	3146579	ExpressionStatement	color [ child ] = 2	346:3:8010:8026	3146184	2	True				
ANR	3146580	AssignmentExpression	color [ child ] = 2		3146184	0		=			
ANR	3146581	ArrayIndexing	color [ child ]		3146184	0					
ANR	3146582	Identifier	color		3146184	0					
ANR	3146583	Identifier	child		3146184	1					
ANR	3146584	PrimaryExpression	2		3146184	1					
ANR	3146585	ExpressionStatement		347:3:8052:8052	3146184	5	True				
ANR	3146586	ExpressionStatement	yield [ source ] = 0	350:2:8135:8152	3146184	6	True				
ANR	3146587	AssignmentExpression	yield [ source ] = 0		3146184	0		=			
ANR	3146588	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146589	Identifier	yield		3146184	0					
ANR	3146590	Identifier	source		3146184	1					
ANR	3146591	PrimaryExpression	0		3146184	1					
ANR	3146592	ForStatement	for ( i = 0 ; i < g . getNumArcs ( source ) ; i ++ )		3146184	7					
ANR	3146593	ForInit	i = 0 ;	351:7:8161:8164	3146184	0	True				
ANR	3146594	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146595	Identifier	i		3146184	0					
ANR	3146596	PrimaryExpression	0		3146184	1					
ANR	3146597	Condition	i < g . getNumArcs ( source )	351:12:8166:8187	3146184	1	True				
ANR	3146598	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146599	Identifier	i		3146184	0					
ANR	3146600	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146601	Callee	g . getNumArcs		3146184	0					
ANR	3146602	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146603	Identifier	g		3146184	0					
ANR	3146604	Identifier	getNumArcs		3146184	1					
ANR	3146605	ArgumentList	source		3146184	1					
ANR	3146606	Argument	source		3146184	0					
ANR	3146607	Identifier	source		3146184	0					
ANR	3146608	PostIncDecOperationExpression	i ++	351:36:8190:8192	3146184	2	True				
ANR	3146609	Identifier	i		3146184	0					
ANR	3146610	IncDec	++		3146184	1					
ANR	3146611	CompoundStatement		92:42:2334:2334	3146184	3					
ANR	3146612	ExpressionStatement	"child = g . getArc ( source , i )"	352:3:8201:8227	3146184	0	True				
ANR	3146613	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146614	Identifier	child		3146184	0					
ANR	3146615	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146616	Callee	g . getArc		3146184	0					
ANR	3146617	MemberAccess	g . getArc		3146184	0					
ANR	3146618	Identifier	g		3146184	0					
ANR	3146619	Identifier	getArc		3146184	1					
ANR	3146620	ArgumentList	source		3146184	1					
ANR	3146621	Argument	source		3146184	0					
ANR	3146622	Identifier	source		3146184	0					
ANR	3146623	Argument	i		3146184	1					
ANR	3146624	Identifier	i		3146184	0					
ANR	3146625	IfStatement	if ( 1 == gRev . getNumArcs ( child ) )		3146184	1					
ANR	3146626	Condition	1 == gRev . getNumArcs ( child )	353:7:8236:8262	3146184	0	True				
ANR	3146627	EqualityExpression	1 == gRev . getNumArcs ( child )		3146184	0		==			
ANR	3146628	PrimaryExpression	1		3146184	0					
ANR	3146629	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146630	Callee	gRev . getNumArcs		3146184	0					
ANR	3146631	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146632	Identifier	gRev		3146184	0					
ANR	3146633	Identifier	getNumArcs		3146184	1					
ANR	3146634	ArgumentList	child		3146184	1					
ANR	3146635	Argument	child		3146184	0					
ANR	3146636	Identifier	child		3146184	0					
ANR	3146637	ExpressionStatement	yield [ source ] ++	354:4:8270:8286	3146184	1	True				
ANR	3146638	PostIncDecOperationExpression	yield [ source ] ++		3146184	0					
ANR	3146639	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146640	Identifier	yield		3146184	0					
ANR	3146641	Identifier	source		3146184	1					
ANR	3146642	IncDec	++		3146184	1					
ANR	3146643	ExpressionStatement		355:3:8291:8291	3146184	8	True				
ANR	3146644	IfStatement	if ( yield [ source ] < g . getNumArcs ( source ) - 2 )		3146184	9					
ANR	3146645	Condition	yield [ source ] < g . getNumArcs ( source ) - 2	358:6:8363:8400	3146184	0	True				
ANR	3146646	RelationalExpression	yield [ source ] < g . getNumArcs ( source ) - 2		3146184	0		<			
ANR	3146647	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146648	Identifier	yield		3146184	0					
ANR	3146649	Identifier	source		3146184	1					
ANR	3146650	AdditiveExpression	g . getNumArcs ( source ) - 2		3146184	1		-			
ANR	3146651	CallExpression	g . getNumArcs ( source )		3146184	0					
ANR	3146652	Callee	g . getNumArcs		3146184	0					
ANR	3146653	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146654	Identifier	g		3146184	0					
ANR	3146655	Identifier	getNumArcs		3146184	1					
ANR	3146656	ArgumentList	source		3146184	1					
ANR	3146657	Argument	source		3146184	0					
ANR	3146658	Identifier	source		3146184	0					
ANR	3146659	PrimaryExpression	2		3146184	1					
ANR	3146660	GotoStatement	goto retnull ;	359:3:8407:8419	3146184	1	True				
ANR	3146661	Identifier	retnull		3146184	0					
ANR	3146662	IfStatement	if ( yield [ source ] == g . getNumArcs ( source ) )		3146184	10					
ANR	3146663	Condition	yield [ source ] == g . getNumArcs ( source )	362:6:8470:8506	3146184	0	True				
ANR	3146664	EqualityExpression	yield [ source ] == g . getNumArcs ( source )		3146184	0		==			
ANR	3146665	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146666	Identifier	yield		3146184	0					
ANR	3146667	Identifier	source		3146184	1					
ANR	3146668	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146669	Callee	g . getNumArcs		3146184	0					
ANR	3146670	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146671	Identifier	g		3146184	0					
ANR	3146672	Identifier	getNumArcs		3146184	1					
ANR	3146673	ArgumentList	source		3146184	1					
ANR	3146674	Argument	source		3146184	0					
ANR	3146675	Identifier	source		3146184	0					
ANR	3146676	BreakStatement	break ;	363:3:8513:8518	3146184	1	True				
ANR	3146677	IfStatement	if ( yield [ source ] == g . getNumArcs ( source ) - 1 )		3146184	11					
ANR	3146678	Condition	yield [ source ] == g . getNumArcs ( source ) - 1	368:6:8694:8734	3146184	0	True				
ANR	3146679	EqualityExpression	yield [ source ] == g . getNumArcs ( source ) - 1		3146184	0		==			
ANR	3146680	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146681	Identifier	yield		3146184	0					
ANR	3146682	Identifier	source		3146184	1					
ANR	3146683	AdditiveExpression	g . getNumArcs ( source ) - 1		3146184	1		-			
ANR	3146684	CallExpression	g . getNumArcs ( source )		3146184	0					
ANR	3146685	Callee	g . getNumArcs		3146184	0					
ANR	3146686	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146687	Identifier	g		3146184	0					
ANR	3146688	Identifier	getNumArcs		3146184	1					
ANR	3146689	ArgumentList	source		3146184	1					
ANR	3146690	Argument	source		3146184	0					
ANR	3146691	Identifier	source		3146184	0					
ANR	3146692	PrimaryExpression	1		3146184	1					
ANR	3146693	CompoundStatement		109:50:2876:2876	3146184	1					
ANR	3146694	ForStatement	for ( i = 0 ; i < g . getNumArcs ( source ) ; i ++ )		3146184	0					
ANR	3146695	ForInit	i = 0 ;	371:8:8770:8773	3146184	0	True				
ANR	3146696	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146697	Identifier	i		3146184	0					
ANR	3146698	PrimaryExpression	0		3146184	1					
ANR	3146699	Condition	i < g . getNumArcs ( source )	371:13:8775:8796	3146184	1	True				
ANR	3146700	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146701	Identifier	i		3146184	0					
ANR	3146702	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146703	Callee	g . getNumArcs		3146184	0					
ANR	3146704	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146705	Identifier	g		3146184	0					
ANR	3146706	Identifier	getNumArcs		3146184	1					
ANR	3146707	ArgumentList	source		3146184	1					
ANR	3146708	Argument	source		3146184	0					
ANR	3146709	Identifier	source		3146184	0					
ANR	3146710	PostIncDecOperationExpression	i ++	371:37:8799:8801	3146184	2	True				
ANR	3146711	Identifier	i		3146184	0					
ANR	3146712	IncDec	++		3146184	1					
ANR	3146713	CompoundStatement		112:43:2943:2943	3146184	3					
ANR	3146714	ExpressionStatement	"child = g . getArc ( source , i )"	372:4:8811:8837	3146184	0	True				
ANR	3146715	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146716	Identifier	child		3146184	0					
ANR	3146717	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146718	Callee	g . getArc		3146184	0					
ANR	3146719	MemberAccess	g . getArc		3146184	0					
ANR	3146720	Identifier	g		3146184	0					
ANR	3146721	Identifier	getArc		3146184	1					
ANR	3146722	ArgumentList	source		3146184	1					
ANR	3146723	Argument	source		3146184	0					
ANR	3146724	Identifier	source		3146184	0					
ANR	3146725	Argument	i		3146184	1					
ANR	3146726	Identifier	i		3146184	0					
ANR	3146727	IfStatement	if ( 1 != gRev . getNumArcs ( child ) )		3146184	1					
ANR	3146728	Condition	1 != gRev . getNumArcs ( child )	373:8:8847:8873	3146184	0	True				
ANR	3146729	EqualityExpression	1 != gRev . getNumArcs ( child )		3146184	0		!=			
ANR	3146730	PrimaryExpression	1		3146184	0					
ANR	3146731	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146732	Callee	gRev . getNumArcs		3146184	0					
ANR	3146733	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146734	Identifier	gRev		3146184	0					
ANR	3146735	Identifier	getNumArcs		3146184	1					
ANR	3146736	ArgumentList	child		3146184	1					
ANR	3146737	Argument	child		3146184	0					
ANR	3146738	Identifier	child		3146184	0					
ANR	3146739	BreakStatement	break ;	374:5:8882:8887	3146184	1	True				
ANR	3146740	ExpressionStatement		375:4:8893:8893	3146184	1	True				
ANR	3146741	IfStatement	if ( 2 != gRev . getNumArcs ( child ) )		3146184	2					
ANR	3146742	Condition	2 != gRev . getNumArcs ( child )	377:7:8943:8969	3146184	0	True				
ANR	3146743	EqualityExpression	2 != gRev . getNumArcs ( child )		3146184	0		!=			
ANR	3146744	PrimaryExpression	2		3146184	0					
ANR	3146745	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146746	Callee	gRev . getNumArcs		3146184	0					
ANR	3146747	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146748	Identifier	gRev		3146184	0					
ANR	3146749	Identifier	getNumArcs		3146184	1					
ANR	3146750	ArgumentList	child		3146184	1					
ANR	3146751	Argument	child		3146184	0					
ANR	3146752	Identifier	child		3146184	0					
ANR	3146753	GotoStatement	goto retnull ;	378:4:8977:8989	3146184	1	True				
ANR	3146754	Identifier	retnull		3146184	0					
ANR	3146755	IfStatement	"if ( gRev . getArc ( child , 0 ) == source )"		3146184	3					
ANR	3146756	Condition	"gRev . getArc ( child , 0 ) == source"	380:7:9049:9078	3146184	0	True				
ANR	3146757	EqualityExpression	"gRev . getArc ( child , 0 ) == source"		3146184	0		==			
ANR	3146758	CallExpression	"gRev . getArc ( child , 0 )"		3146184	0					
ANR	3146759	Callee	gRev . getArc		3146184	0					
ANR	3146760	MemberAccess	gRev . getArc		3146184	0					
ANR	3146761	Identifier	gRev		3146184	0					
ANR	3146762	Identifier	getArc		3146184	1					
ANR	3146763	ArgumentList	child		3146184	1					
ANR	3146764	Argument	child		3146184	0					
ANR	3146765	Identifier	child		3146184	0					
ANR	3146766	Argument	0		3146184	1					
ANR	3146767	PrimaryExpression	0		3146184	0					
ANR	3146768	Identifier	source		3146184	1					
ANR	3146769	ExpressionStatement	"otherParent = gRev . getArc ( child , 1 )"	381:4:9086:9120	3146184	1	True				
ANR	3146770	AssignmentExpression	"otherParent = gRev . getArc ( child , 1 )"		3146184	0		=			
ANR	3146771	Identifier	otherParent		3146184	0					
ANR	3146772	CallExpression	"gRev . getArc ( child , 1 )"		3146184	1					
ANR	3146773	Callee	gRev . getArc		3146184	0					
ANR	3146774	MemberAccess	gRev . getArc		3146184	0					
ANR	3146775	Identifier	gRev		3146184	0					
ANR	3146776	Identifier	getArc		3146184	1					
ANR	3146777	ArgumentList	child		3146184	1					
ANR	3146778	Argument	child		3146184	0					
ANR	3146779	Identifier	child		3146184	0					
ANR	3146780	Argument	1		3146184	1					
ANR	3146781	PrimaryExpression	1		3146184	0					
ANR	3146782	ElseStatement	else		3146184	0					
ANR	3146783	ExpressionStatement	"otherParent = gRev . getArc ( child , 0 )"	383:4:9134:9168	3146184	0	True				
ANR	3146784	AssignmentExpression	"otherParent = gRev . getArc ( child , 0 )"		3146184	0		=			
ANR	3146785	Identifier	otherParent		3146184	0					
ANR	3146786	CallExpression	"gRev . getArc ( child , 0 )"		3146184	1					
ANR	3146787	Callee	gRev . getArc		3146184	0					
ANR	3146788	MemberAccess	gRev . getArc		3146184	0					
ANR	3146789	Identifier	gRev		3146184	0					
ANR	3146790	Identifier	getArc		3146184	1					
ANR	3146791	ArgumentList	child		3146184	1					
ANR	3146792	Argument	child		3146184	0					
ANR	3146793	Identifier	child		3146184	0					
ANR	3146794	Argument	0		3146184	1					
ANR	3146795	PrimaryExpression	0		3146184	0					
ANR	3146796	IfStatement	if ( 0 != color [ otherParent ] )		3146184	4					
ANR	3146797	Condition	0 != color [ otherParent ]	385:7:9196:9218	3146184	0	True				
ANR	3146798	EqualityExpression	0 != color [ otherParent ]		3146184	0		!=			
ANR	3146799	PrimaryExpression	0		3146184	0					
ANR	3146800	ArrayIndexing	color [ otherParent ]		3146184	1					
ANR	3146801	Identifier	color		3146184	0					
ANR	3146802	Identifier	otherParent		3146184	1					
ANR	3146803	BreakStatement	break ;	386:4:9226:9231	3146184	1	True				
ANR	3146804	ElseStatement	else		3146184	0					
ANR	3146805	CompoundStatement		128:8:3379:3379	3146184	0					
ANR	3146806	ExpressionStatement	source = otherParent	388:4:9247:9267	3146184	0	True				
ANR	3146807	AssignmentExpression	source = otherParent		3146184	0		=			
ANR	3146808	Identifier	source		3146184	0					
ANR	3146809	Identifier	otherParent		3146184	1					
ANR	3146810	ContinueStatement	continue ;	389:4:9273:9281	3146184	1	True				
ANR	3146811	ExpressionStatement		390:4:9287:9287	3146184	5	True				
ANR	3146812	ExpressionStatement		391:3:9292:9292	3146184	12	True				
ANR	3146813	IfStatement	if ( yield [ source ] == g . getNumArcs ( source ) - 2 )		3146184	13					
ANR	3146814	Condition	yield [ source ] == g . getNumArcs ( source ) - 2	396:6:9461:9501	3146184	0	True				
ANR	3146815	EqualityExpression	yield [ source ] == g . getNumArcs ( source ) - 2		3146184	0		==			
ANR	3146816	ArrayIndexing	yield [ source ]		3146184	0					
ANR	3146817	Identifier	yield		3146184	0					
ANR	3146818	Identifier	source		3146184	1					
ANR	3146819	AdditiveExpression	g . getNumArcs ( source ) - 2		3146184	1		-			
ANR	3146820	CallExpression	g . getNumArcs ( source )		3146184	0					
ANR	3146821	Callee	g . getNumArcs		3146184	0					
ANR	3146822	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146823	Identifier	g		3146184	0					
ANR	3146824	Identifier	getNumArcs		3146184	1					
ANR	3146825	ArgumentList	source		3146184	1					
ANR	3146826	Argument	source		3146184	0					
ANR	3146827	Identifier	source		3146184	0					
ANR	3146828	PrimaryExpression	2		3146184	1					
ANR	3146829	CompoundStatement		155:3:4201:4231	3146184	1					
ANR	3146830	ForStatement	for ( i = 0 ; i < g . getNumArcs ( source ) ; i ++ )		3146184	0					
ANR	3146831	ForInit	i = 0 ;	398:8:9543:9546	3146184	0	True				
ANR	3146832	AssignmentExpression	i = 0		3146184	0		=			
ANR	3146833	Identifier	i		3146184	0					
ANR	3146834	PrimaryExpression	0		3146184	1					
ANR	3146835	Condition	i < g . getNumArcs ( source )	398:13:9548:9569	3146184	1	True				
ANR	3146836	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146837	Identifier	i		3146184	0					
ANR	3146838	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146839	Callee	g . getNumArcs		3146184	0					
ANR	3146840	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146841	Identifier	g		3146184	0					
ANR	3146842	Identifier	getNumArcs		3146184	1					
ANR	3146843	ArgumentList	source		3146184	1					
ANR	3146844	Argument	source		3146184	0					
ANR	3146845	Identifier	source		3146184	0					
ANR	3146846	PostIncDecOperationExpression	i ++	398:37:9572:9574	3146184	2	True				
ANR	3146847	Identifier	i		3146184	0					
ANR	3146848	IncDec	++		3146184	1					
ANR	3146849	CompoundStatement		139:43:3716:3716	3146184	3					
ANR	3146850	ExpressionStatement	"child = g . getArc ( source , i )"	399:4:9584:9610	3146184	0	True				
ANR	3146851	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146852	Identifier	child		3146184	0					
ANR	3146853	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146854	Callee	g . getArc		3146184	0					
ANR	3146855	MemberAccess	g . getArc		3146184	0					
ANR	3146856	Identifier	g		3146184	0					
ANR	3146857	Identifier	getArc		3146184	1					
ANR	3146858	ArgumentList	source		3146184	1					
ANR	3146859	Argument	source		3146184	0					
ANR	3146860	Identifier	source		3146184	0					
ANR	3146861	Argument	i		3146184	1					
ANR	3146862	Identifier	i		3146184	0					
ANR	3146863	IfStatement	if ( 1 != gRev . getNumArcs ( child ) )		3146184	1					
ANR	3146864	Condition	1 != gRev . getNumArcs ( child )	400:8:9620:9646	3146184	0	True				
ANR	3146865	EqualityExpression	1 != gRev . getNumArcs ( child )		3146184	0		!=			
ANR	3146866	PrimaryExpression	1		3146184	0					
ANR	3146867	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146868	Callee	gRev . getNumArcs		3146184	0					
ANR	3146869	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146870	Identifier	gRev		3146184	0					
ANR	3146871	Identifier	getNumArcs		3146184	1					
ANR	3146872	ArgumentList	child		3146184	1					
ANR	3146873	Argument	child		3146184	0					
ANR	3146874	Identifier	child		3146184	0					
ANR	3146875	BreakStatement	break ;	401:5:9655:9660	3146184	1	True				
ANR	3146876	ExpressionStatement		402:4:9666:9666	3146184	1	True				
ANR	3146877	IdentifierDeclStatement	int child1 = child ;	403:3:9671:9687	3146184	2	True				
ANR	3146878	IdentifierDecl	child1 = child		3146184	0					
ANR	3146879	IdentifierDeclType	int		3146184	0					
ANR	3146880	Identifier	child1		3146184	1					
ANR	3146881	AssignmentExpression	child1 = child		3146184	2		=			
ANR	3146882	Identifier	child		3146184	0					
ANR	3146883	Identifier	child		3146184	1					
ANR	3146884	ForStatement	for ( i ++ ; i < g . getNumArcs ( source ) ; i ++ )		3146184	3					
ANR	3146885	ForInit	i ++ ;	404:8:9697:9700	3146184	0	True				
ANR	3146886	PostIncDecOperationExpression	i ++		3146184	0					
ANR	3146887	Identifier	i		3146184	0					
ANR	3146888	IncDec	++		3146184	1					
ANR	3146889	Condition	i < g . getNumArcs ( source )	404:13:9702:9723	3146184	1	True				
ANR	3146890	RelationalExpression	i < g . getNumArcs ( source )		3146184	0		<			
ANR	3146891	Identifier	i		3146184	0					
ANR	3146892	CallExpression	g . getNumArcs ( source )		3146184	1					
ANR	3146893	Callee	g . getNumArcs		3146184	0					
ANR	3146894	MemberAccess	g . getNumArcs		3146184	0					
ANR	3146895	Identifier	g		3146184	0					
ANR	3146896	Identifier	getNumArcs		3146184	1					
ANR	3146897	ArgumentList	source		3146184	1					
ANR	3146898	Argument	source		3146184	0					
ANR	3146899	Identifier	source		3146184	0					
ANR	3146900	PostIncDecOperationExpression	i ++	404:37:9726:9728	3146184	2	True				
ANR	3146901	Identifier	i		3146184	0					
ANR	3146902	IncDec	++		3146184	1					
ANR	3146903	CompoundStatement		145:43:3870:3870	3146184	3					
ANR	3146904	ExpressionStatement	"child = g . getArc ( source , i )"	405:4:9738:9764	3146184	0	True				
ANR	3146905	AssignmentExpression	"child = g . getArc ( source , i )"		3146184	0		=			
ANR	3146906	Identifier	child		3146184	0					
ANR	3146907	CallExpression	"g . getArc ( source , i )"		3146184	1					
ANR	3146908	Callee	g . getArc		3146184	0					
ANR	3146909	MemberAccess	g . getArc		3146184	0					
ANR	3146910	Identifier	g		3146184	0					
ANR	3146911	Identifier	getArc		3146184	1					
ANR	3146912	ArgumentList	source		3146184	1					
ANR	3146913	Argument	source		3146184	0					
ANR	3146914	Identifier	source		3146184	0					
ANR	3146915	Argument	i		3146184	1					
ANR	3146916	Identifier	i		3146184	0					
ANR	3146917	IfStatement	if ( 1 != gRev . getNumArcs ( child ) )		3146184	1					
ANR	3146918	Condition	1 != gRev . getNumArcs ( child )	406:8:9774:9800	3146184	0	True				
ANR	3146919	EqualityExpression	1 != gRev . getNumArcs ( child )		3146184	0		!=			
ANR	3146920	PrimaryExpression	1		3146184	0					
ANR	3146921	CallExpression	gRev . getNumArcs ( child )		3146184	1					
ANR	3146922	Callee	gRev . getNumArcs		3146184	0					
ANR	3146923	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146924	Identifier	gRev		3146184	0					
ANR	3146925	Identifier	getNumArcs		3146184	1					
ANR	3146926	ArgumentList	child		3146184	1					
ANR	3146927	Argument	child		3146184	0					
ANR	3146928	Identifier	child		3146184	0					
ANR	3146929	BreakStatement	break ;	407:5:9809:9814	3146184	1	True				
ANR	3146930	ExpressionStatement		408:4:9820:9820	3146184	4	True				
ANR	3146931	IdentifierDeclStatement	int child2 = child ;	409:3:9825:9841	3146184	5	True				
ANR	3146932	IdentifierDecl	child2 = child		3146184	0					
ANR	3146933	IdentifierDeclType	int		3146184	0					
ANR	3146934	Identifier	child2		3146184	1					
ANR	3146935	AssignmentExpression	child2 = child		3146184	2		=			
ANR	3146936	Identifier	child		3146184	0					
ANR	3146937	Identifier	child		3146184	1					
ANR	3146938	IfStatement	if ( 2 != gRev . getNumArcs ( child1 ) || 2 != gRev . getNumArcs ( child2 ) )		3146184	6					
ANR	3146939	Condition	2 != gRev . getNumArcs ( child1 ) || 2 != gRev . getNumArcs ( child2 )	411:7:9899:9958	3146184	0	True				
ANR	3146940	OrExpression	2 != gRev . getNumArcs ( child1 ) || 2 != gRev . getNumArcs ( child2 )		3146184	0		||			
ANR	3146941	EqualityExpression	2 != gRev . getNumArcs ( child1 )		3146184	0		!=			
ANR	3146942	PrimaryExpression	2		3146184	0					
ANR	3146943	CallExpression	gRev . getNumArcs ( child1 )		3146184	1					
ANR	3146944	Callee	gRev . getNumArcs		3146184	0					
ANR	3146945	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146946	Identifier	gRev		3146184	0					
ANR	3146947	Identifier	getNumArcs		3146184	1					
ANR	3146948	ArgumentList	child1		3146184	1					
ANR	3146949	Argument	child1		3146184	0					
ANR	3146950	Identifier	child1		3146184	0					
ANR	3146951	EqualityExpression	2 != gRev . getNumArcs ( child2 )		3146184	1		!=			
ANR	3146952	PrimaryExpression	2		3146184	0					
ANR	3146953	CallExpression	gRev . getNumArcs ( child2 )		3146184	1					
ANR	3146954	Callee	gRev . getNumArcs		3146184	0					
ANR	3146955	MemberAccess	gRev . getNumArcs		3146184	0					
ANR	3146956	Identifier	gRev		3146184	0					
ANR	3146957	Identifier	getNumArcs		3146184	1					
ANR	3146958	ArgumentList	child2		3146184	1					
ANR	3146959	Argument	child2		3146184	0					
ANR	3146960	Identifier	child2		3146184	0					
ANR	3146961	GotoStatement	goto retnull ;	412:4:9966:9978	3146184	1	True				
ANR	3146962	Identifier	retnull		3146184	0					
ANR	3146963	IdentifierDeclStatement	"int otherParent1 , otherParent2 ;"	414:3:10063:10093	3146184	7	True				
ANR	3146964	IdentifierDecl	otherParent1		3146184	0					
ANR	3146965	IdentifierDeclType	int		3146184	0					
ANR	3146966	Identifier	otherParent1		3146184	1					
ANR	3146967	IdentifierDecl	otherParent2		3146184	1					
ANR	3146968	IdentifierDeclType	int		3146184	0					
ANR	3146969	Identifier	otherParent2		3146184	1					
ANR	3146970	IfStatement	"if ( gRev . getArc ( child1 , 0 ) == source )"		3146184	8					
ANR	3146971	Condition	"gRev . getArc ( child1 , 0 ) == source"	415:7:10102:10132	3146184	0	True				
ANR	3146972	EqualityExpression	"gRev . getArc ( child1 , 0 ) == source"		3146184	0		==			
ANR	3146973	CallExpression	"gRev . getArc ( child1 , 0 )"		3146184	0					
ANR	3146974	Callee	gRev . getArc		3146184	0					
ANR	3146975	MemberAccess	gRev . getArc		3146184	0					
ANR	3146976	Identifier	gRev		3146184	0					
ANR	3146977	Identifier	getArc		3146184	1					
ANR	3146978	ArgumentList	child1		3146184	1					
ANR	3146979	Argument	child1		3146184	0					
ANR	3146980	Identifier	child1		3146184	0					
ANR	3146981	Argument	0		3146184	1					
ANR	3146982	PrimaryExpression	0		3146184	0					
ANR	3146983	Identifier	source		3146184	1					
ANR	3146984	ExpressionStatement	"otherParent1 = gRev . getArc ( child1 , 1 )"	416:4:10140:10176	3146184	1	True				
ANR	3146985	AssignmentExpression	"otherParent1 = gRev . getArc ( child1 , 1 )"		3146184	0		=			
ANR	3146986	Identifier	otherParent1		3146184	0					
ANR	3146987	CallExpression	"gRev . getArc ( child1 , 1 )"		3146184	1					
ANR	3146988	Callee	gRev . getArc		3146184	0					
ANR	3146989	MemberAccess	gRev . getArc		3146184	0					
ANR	3146990	Identifier	gRev		3146184	0					
ANR	3146991	Identifier	getArc		3146184	1					
ANR	3146992	ArgumentList	child1		3146184	1					
ANR	3146993	Argument	child1		3146184	0					
ANR	3146994	Identifier	child1		3146184	0					
ANR	3146995	Argument	1		3146184	1					
ANR	3146996	PrimaryExpression	1		3146184	0					
ANR	3146997	ElseStatement	else		3146184	0					
ANR	3146998	ExpressionStatement	"otherParent1 = gRev . getArc ( child1 , 0 )"	418:4:10190:10226	3146184	0	True				
ANR	3146999	AssignmentExpression	"otherParent1 = gRev . getArc ( child1 , 0 )"		3146184	0		=			
ANR	3147000	Identifier	otherParent1		3146184	0					
ANR	3147001	CallExpression	"gRev . getArc ( child1 , 0 )"		3146184	1					
ANR	3147002	Callee	gRev . getArc		3146184	0					
ANR	3147003	MemberAccess	gRev . getArc		3146184	0					
ANR	3147004	Identifier	gRev		3146184	0					
ANR	3147005	Identifier	getArc		3146184	1					
ANR	3147006	ArgumentList	child1		3146184	1					
ANR	3147007	Argument	child1		3146184	0					
ANR	3147008	Identifier	child1		3146184	0					
ANR	3147009	Argument	0		3146184	1					
ANR	3147010	PrimaryExpression	0		3146184	0					
ANR	3147011	IfStatement	"if ( gRev . getArc ( child2 , 0 ) == source )"		3146184	9					
ANR	3147012	Condition	"gRev . getArc ( child2 , 0 ) == source"	419:7:10235:10265	3146184	0	True				
ANR	3147013	EqualityExpression	"gRev . getArc ( child2 , 0 ) == source"		3146184	0		==			
ANR	3147014	CallExpression	"gRev . getArc ( child2 , 0 )"		3146184	0					
ANR	3147015	Callee	gRev . getArc		3146184	0					
ANR	3147016	MemberAccess	gRev . getArc		3146184	0					
ANR	3147017	Identifier	gRev		3146184	0					
ANR	3147018	Identifier	getArc		3146184	1					
ANR	3147019	ArgumentList	child2		3146184	1					
ANR	3147020	Argument	child2		3146184	0					
ANR	3147021	Identifier	child2		3146184	0					
ANR	3147022	Argument	0		3146184	1					
ANR	3147023	PrimaryExpression	0		3146184	0					
ANR	3147024	Identifier	source		3146184	1					
ANR	3147025	ExpressionStatement	"otherParent2 = gRev . getArc ( child2 , 1 )"	420:4:10273:10309	3146184	1	True				
ANR	3147026	AssignmentExpression	"otherParent2 = gRev . getArc ( child2 , 1 )"		3146184	0		=			
ANR	3147027	Identifier	otherParent2		3146184	0					
ANR	3147028	CallExpression	"gRev . getArc ( child2 , 1 )"		3146184	1					
ANR	3147029	Callee	gRev . getArc		3146184	0					
ANR	3147030	MemberAccess	gRev . getArc		3146184	0					
ANR	3147031	Identifier	gRev		3146184	0					
ANR	3147032	Identifier	getArc		3146184	1					
ANR	3147033	ArgumentList	child2		3146184	1					
ANR	3147034	Argument	child2		3146184	0					
ANR	3147035	Identifier	child2		3146184	0					
ANR	3147036	Argument	1		3146184	1					
ANR	3147037	PrimaryExpression	1		3146184	0					
ANR	3147038	ElseStatement	else		3146184	0					
ANR	3147039	ExpressionStatement	"otherParent2 = gRev . getArc ( child2 , 0 )"	422:4:10323:10359	3146184	0	True				
ANR	3147040	AssignmentExpression	"otherParent2 = gRev . getArc ( child2 , 0 )"		3146184	0		=			
ANR	3147041	Identifier	otherParent2		3146184	0					
ANR	3147042	CallExpression	"gRev . getArc ( child2 , 0 )"		3146184	1					
ANR	3147043	Callee	gRev . getArc		3146184	0					
ANR	3147044	MemberAccess	gRev . getArc		3146184	0					
ANR	3147045	Identifier	gRev		3146184	0					
ANR	3147046	Identifier	getArc		3146184	1					
ANR	3147047	ArgumentList	child2		3146184	1					
ANR	3147048	Argument	child2		3146184	0					
ANR	3147049	Identifier	child2		3146184	0					
ANR	3147050	Argument	0		3146184	1					
ANR	3147051	PrimaryExpression	0		3146184	0					
ANR	3147052	IfStatement	if ( 0 == color [ otherParent1 ] && 0 != color [ otherParent2 ] )		3146184	10					
ANR	3147053	Condition	0 == color [ otherParent1 ] && 0 != color [ otherParent2 ]	424:7:10387:10434	3146184	0	True				
ANR	3147054	AndExpression	0 == color [ otherParent1 ] && 0 != color [ otherParent2 ]		3146184	0		&&			
ANR	3147055	EqualityExpression	0 == color [ otherParent1 ]		3146184	0		==			
ANR	3147056	PrimaryExpression	0		3146184	0					
ANR	3147057	ArrayIndexing	color [ otherParent1 ]		3146184	1					
ANR	3147058	Identifier	color		3146184	0					
ANR	3147059	Identifier	otherParent1		3146184	1					
ANR	3147060	EqualityExpression	0 != color [ otherParent2 ]		3146184	1		!=			
ANR	3147061	PrimaryExpression	0		3146184	0					
ANR	3147062	ArrayIndexing	color [ otherParent2 ]		3146184	1					
ANR	3147063	Identifier	color		3146184	0					
ANR	3147064	Identifier	otherParent2		3146184	1					
ANR	3147065	CompoundStatement		165:58:4576:4576	3146184	1					
ANR	3147066	ExpressionStatement	source = otherParent1	425:4:10444:10465	3146184	0	True				
ANR	3147067	AssignmentExpression	source = otherParent1		3146184	0		=			
ANR	3147068	Identifier	source		3146184	0					
ANR	3147069	Identifier	otherParent1		3146184	1					
ANR	3147070	ContinueStatement	continue ;	426:4:10471:10479	3146184	1	True				
ANR	3147071	ExpressionStatement		427:4:10485:10485	3146184	11	True				
ANR	3147072	IfStatement	if ( 0 != color [ otherParent1 ] && 0 == color [ otherParent2 ] )		3146184	12					
ANR	3147073	Condition	0 != color [ otherParent1 ] && 0 == color [ otherParent2 ]	428:7:10494:10541	3146184	0	True				
ANR	3147074	AndExpression	0 != color [ otherParent1 ] && 0 == color [ otherParent2 ]		3146184	0		&&			
ANR	3147075	EqualityExpression	0 != color [ otherParent1 ]		3146184	0		!=			
ANR	3147076	PrimaryExpression	0		3146184	0					
ANR	3147077	ArrayIndexing	color [ otherParent1 ]		3146184	1					
ANR	3147078	Identifier	color		3146184	0					
ANR	3147079	Identifier	otherParent1		3146184	1					
ANR	3147080	EqualityExpression	0 == color [ otherParent2 ]		3146184	1		==			
ANR	3147081	PrimaryExpression	0		3146184	0					
ANR	3147082	ArrayIndexing	color [ otherParent2 ]		3146184	1					
ANR	3147083	Identifier	color		3146184	0					
ANR	3147084	Identifier	otherParent2		3146184	1					
ANR	3147085	CompoundStatement		169:58:4683:4683	3146184	1					
ANR	3147086	ExpressionStatement	source = otherParent2	429:4:10551:10572	3146184	0	True				
ANR	3147087	AssignmentExpression	source = otherParent2		3146184	0		=			
ANR	3147088	Identifier	source		3146184	0					
ANR	3147089	Identifier	otherParent2		3146184	1					
ANR	3147090	ContinueStatement	continue ;	430:4:10578:10586	3146184	1	True				
ANR	3147091	ExpressionStatement		431:4:10592:10592	3146184	13	True				
ANR	3147092	GotoStatement	goto retnull ;	433:3:10630:10642	3146184	14	True				
ANR	3147093	Identifier	retnull		3146184	0					
ANR	3147094	ExpressionStatement		434:3:10647:10647	3146184	14	True				
ANR	3147095	ExpressionStatement		436:2:10652:10652	3146184	21	True				
ANR	3147096	ForStatement	for ( i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3146184	22					
ANR	3147097	ForInit	i = 0 ;	439:6:10700:10703	3146184	0	True				
ANR	3147098	AssignmentExpression	i = 0		3146184	0		=			
ANR	3147099	Identifier	i		3146184	0					
ANR	3147100	PrimaryExpression	0		3146184	1					
ANR	3147101	Condition	i < g . getNumNodes ( )	439:11:10705:10721	3146184	1	True				
ANR	3147102	RelationalExpression	i < g . getNumNodes ( )		3146184	0		<			
ANR	3147103	Identifier	i		3146184	0					
ANR	3147104	CallExpression	g . getNumNodes ( )		3146184	1					
ANR	3147105	Callee	g . getNumNodes		3146184	0					
ANR	3147106	MemberAccess	g . getNumNodes		3146184	0					
ANR	3147107	Identifier	g		3146184	0					
ANR	3147108	Identifier	getNumNodes		3146184	1					
ANR	3147109	ArgumentList			3146184	1					
ANR	3147110	PostIncDecOperationExpression	i ++	439:30:10724:10726	3146184	2	True				
ANR	3147111	Identifier	i		3146184	0					
ANR	3147112	IncDec	++		3146184	1					
ANR	3147113	CompoundStatement		180:36:4868:4868	3146184	3					
ANR	3147114	IfStatement	if ( 0 == color [ i ] )		3146184	0					
ANR	3147115	Condition	0 == color [ i ]	440:6:10738:10748	3146184	0	True				
ANR	3147116	EqualityExpression	0 == color [ i ]		3146184	0		==			
ANR	3147117	PrimaryExpression	0		3146184	0					
ANR	3147118	ArrayIndexing	color [ i ]		3146184	1					
ANR	3147119	Identifier	color		3146184	0					
ANR	3147120	Identifier	i		3146184	1					
ANR	3147121	GotoStatement	goto retnull ;	441:3:10755:10767	3146184	1	True				
ANR	3147122	Identifier	retnull		3146184	0					
ANR	3147123	ExpressionStatement		442:2:10771:10771	3146184	23	True				
ANR	3147124	Statement	delete	444:1:10775:10780	3146184	24	True				
ANR	3147125	Statement	[	444:7:10781:10781	3146184	25	True				
ANR	3147126	Statement	]	444:8:10782:10782	3146184	26	True				
ANR	3147127	ExpressionStatement	color	444:10:10784:10789	3146184	27	True				
ANR	3147128	Identifier	color		3146184	0					
ANR	3147129	ExpressionStatement	* ppYield = yield	445:1:10792:10808	3146184	28	True				
ANR	3147130	AssignmentExpression	* ppYield = yield		3146184	0		=			
ANR	3147131	UnaryOperationExpression	* ppYield		3146184	0					
ANR	3147132	UnaryOperator	*		3146184	0					
ANR	3147133	Identifier	ppYield		3146184	1					
ANR	3147134	Identifier	yield		3146184	1					
ANR	3147135	ExpressionStatement	* ppSeq = seq	446:1:10811:10823	3146184	29	True				
ANR	3147136	AssignmentExpression	* ppSeq = seq		3146184	0		=			
ANR	3147137	UnaryOperationExpression	* ppSeq		3146184	0					
ANR	3147138	UnaryOperator	*		3146184	0					
ANR	3147139	Identifier	ppSeq		3146184	1					
ANR	3147140	Identifier	seq		3146184	1					
ANR	3147141	ExpressionStatement	* pSrc = idx	447:1:10826:10837	3146184	30	True				
ANR	3147142	AssignmentExpression	* pSrc = idx		3146184	0		=			
ANR	3147143	UnaryOperationExpression	* pSrc		3146184	0					
ANR	3147144	UnaryOperator	*		3146184	0					
ANR	3147145	Identifier	pSrc		3146184	1					
ANR	3147146	Identifier	idx		3146184	1					
ANR	3147147	ReturnStatement	return true ;	448:1:10840:10851	3146184	31	True				
ANR	3147148	Identifier	true		3146184	0					
ANR	3147149	Label	retnull :	450:0:10854:10861	3146184	32	True				
ANR	3147150	Identifier	retnull		3146184	0					
ANR	3147151	IfStatement	if ( color )		3146184	33					
ANR	3147152	Condition	color	451:5:10868:10872	3146184	0	True				
ANR	3147153	Identifier	color		3146184	0					
ANR	3147154	Statement	delete	451:13:10876:10881	3146184	1	True				
ANR	3147155	Statement	[	451:19:10882:10882	3146184	34	True				
ANR	3147156	Statement	]	451:20:10883:10883	3146184	35	True				
ANR	3147157	ExpressionStatement	color	451:22:10885:10890	3146184	36	True				
ANR	3147158	Identifier	color		3146184	0					
ANR	3147159	IfStatement	if ( yield )		3146184	37					
ANR	3147160	Condition	yield	452:5:10897:10901	3146184	0	True				
ANR	3147161	Identifier	yield		3146184	0					
ANR	3147162	Statement	delete	452:13:10905:10910	3146184	1	True				
ANR	3147163	Statement	[	452:19:10911:10911	3146184	38	True				
ANR	3147164	Statement	]	452:20:10912:10912	3146184	39	True				
ANR	3147165	ExpressionStatement	yield	452:22:10914:10919	3146184	40	True				
ANR	3147166	Identifier	yield		3146184	0					
ANR	3147167	IfStatement	if ( seq )		3146184	41					
ANR	3147168	Condition	seq	453:5:10926:10928	3146184	0	True				
ANR	3147169	Identifier	seq		3146184	0					
ANR	3147170	Statement	delete	453:11:10932:10937	3146184	1	True				
ANR	3147171	Statement	[	453:17:10938:10938	3146184	42	True				
ANR	3147172	Statement	]	453:18:10939:10939	3146184	43	True				
ANR	3147173	ExpressionStatement	seq	453:20:10941:10944	3146184	44	True				
ANR	3147174	Identifier	seq		3146184	0					
ANR	3147175	ReturnStatement	return false ;	454:1:10947:10959	3146184	45	True				
ANR	3147176	Identifier	false		3146184	0					
ANR	3147177	ReturnType	bool		3146184	1					
ANR	3147178	Identifier	ConstituentLibrary :: checkStrandW		3146184	2					
ANR	3147179	ParameterList	"const Dag & g , const Dag & gRev , int * * ppYield , int * * ppSeq , int * pSrc"		3146184	3					
ANR	3147180	Parameter	const Dag & g	257:39:5769:5780	3146184	0	True				
ANR	3147181	ParameterType	const Dag &		3146184	0					
ANR	3147182	Identifier	g		3146184	1					
ANR	3147183	Parameter	const Dag & gRev	257:53:5783:5797	3146184	1	True				
ANR	3147184	ParameterType	const Dag &		3146184	0					
ANR	3147185	Identifier	gRev		3146184	1					
ANR	3147186	Parameter	int * * ppYield	258:10:5810:5822	3146184	2	True				
ANR	3147187	ParameterType	int * *		3146184	0					
ANR	3147188	Identifier	ppYield		3146184	1					
ANR	3147189	Parameter	int * * ppSeq	258:25:5825:5835	3146184	3	True				
ANR	3147190	ParameterType	int * *		3146184	0					
ANR	3147191	Identifier	ppSeq		3146184	1					
ANR	3147192	Parameter	int * pSrc	259:10:5849:5857	3146184	4	True				
ANR	3147193	ParameterType	int *		3146184	0					
ANR	3147194	Identifier	pSrc		3146184	1					
ANR	3147195	CFGEntryNode	ENTRY		3146184		True				
ANR	3147196	CFGExitNode	EXIT		3146184		True				
ANR	3147197	CFGExceptionNode	EXCEPTION		3146184		True				
ANR	3147198	Symbol	parent		3146184						
ANR	3147199	Symbol	g . getNumNodes		3146184						
ANR	3147200	Symbol	g . getNumArcs		3146184						
ANR	3147201	Symbol	* parent		3146184						
ANR	3147202	Symbol	color		3146184						
ANR	3147203	Symbol	g . getArc		3146184						
ANR	3147204	Symbol	* seq		3146184						
ANR	3147205	Symbol	source		3146184						
ANR	3147206	Symbol	gRev		3146184						
ANR	3147207	Symbol	child2		3146184						
ANR	3147208	Symbol	child1		3146184						
ANR	3147209	Symbol	found		3146184						
ANR	3147210	Symbol	yield		3146184						
ANR	3147211	Symbol	* source		3146184						
ANR	3147212	Symbol	* idx		3146184						
ANR	3147213	Symbol	ppYield		3146184						
ANR	3147214	Symbol	seq		3146184						
ANR	3147215	Symbol	pSrc		3146184						
ANR	3147216	Symbol	ppSeq		3146184						
ANR	3147217	Symbol	* child		3146184						
ANR	3147218	Symbol	NULL		3146184						
ANR	3147219	Symbol	otherParent1		3146184						
ANR	3147220	Symbol	gRev . getNumArcs		3146184						
ANR	3147221	Symbol	g		3146184						
ANR	3147222	Symbol	false		3146184						
ANR	3147223	Symbol	* pSrc		3146184						
ANR	3147224	Symbol	i		3146184						
ANR	3147225	Symbol	j		3146184						
ANR	3147226	Symbol	* color		3146184						
ANR	3147227	Symbol	otherParent2		3146184						
ANR	3147228	Symbol	* yield		3146184						
ANR	3147229	Symbol	otherParent		3146184						
ANR	3147230	Symbol	sibling		3146184						
ANR	3147231	Symbol	* i		3146184						
ANR	3147232	Symbol	gRev . getArc		3146184						
ANR	3147233	Symbol	* ppSeq		3146184						
ANR	3147234	Symbol	true		3146184						
ANR	3147235	Symbol	* otherParent1		3146184						
ANR	3147236	Symbol	* ppYield		3146184						
ANR	3147237	Symbol	* otherParent		3146184						
ANR	3147238	Symbol	* otherParent2		3146184						
ANR	3147239	Symbol	idx		3146184						
ANR	3147240	Symbol	child		3146184						
ANR	3147241	Function	ConstituentLibrary :: checkW	472:0:11190:12303							
ANR	3147242	FunctionDef	ConstituentLibrary :: checkW (const Dag & g)		3147241	0					
ANR	3147243	CompoundStatement		473:0:11237:12303	3147241	0					
ANR	3147244	IdentifierDeclStatement	int * yield ;	474:1:11240:11250	3147241	0	True				
ANR	3147245	IdentifierDecl	* yield		3147241	0					
ANR	3147246	IdentifierDeclType	int *		3147241	0					
ANR	3147247	Identifier	yield		3147241	1					
ANR	3147248	IdentifierDeclStatement	int * seq ;	475:1:11253:11261	3147241	1	True				
ANR	3147249	IdentifierDecl	* seq		3147241	0					
ANR	3147250	IdentifierDeclType	int *		3147241	0					
ANR	3147251	Identifier	seq		3147241	1					
ANR	3147252	IdentifierDeclStatement	int src ;	476:1:11264:11271	3147241	2	True				
ANR	3147253	IdentifierDecl	src		3147241	0					
ANR	3147254	IdentifierDeclType	int		3147241	0					
ANR	3147255	Identifier	src		3147241	1					
ANR	3147256	IdentifierDeclStatement	"int i , j ;"	477:1:11274:11281	3147241	3	True				
ANR	3147257	IdentifierDecl	i		3147241	0					
ANR	3147258	IdentifierDeclType	int		3147241	0					
ANR	3147259	Identifier	i		3147241	1					
ANR	3147260	IdentifierDecl	j		3147241	1					
ANR	3147261	IdentifierDeclType	int		3147241	0					
ANR	3147262	Identifier	j		3147241	1					
ANR	3147263	IdentifierDeclStatement	Dag gRev ;	480:1:11334:11342	3147241	4	True				
ANR	3147264	IdentifierDecl	gRev		3147241	0					
ANR	3147265	IdentifierDeclType	Dag		3147241	0					
ANR	3147266	Identifier	gRev		3147241	1					
ANR	3147267	ExpressionStatement	gRev . initializeWith ( g )	481:1:11345:11367	3147241	5	True				
ANR	3147268	CallExpression	gRev . initializeWith ( g )		3147241	0					
ANR	3147269	Callee	gRev . initializeWith		3147241	0					
ANR	3147270	MemberAccess	gRev . initializeWith		3147241	0					
ANR	3147271	Identifier	gRev		3147241	0					
ANR	3147272	Identifier	initializeWith		3147241	1					
ANR	3147273	ArgumentList	g		3147241	1					
ANR	3147274	Argument	g		3147241	0					
ANR	3147275	Identifier	g		3147241	0					
ANR	3147276	ExpressionStatement	gRev . reverseArcs ( )	482:1:11370:11388	3147241	6	True				
ANR	3147277	CallExpression	gRev . reverseArcs ( )		3147241	0					
ANR	3147278	Callee	gRev . reverseArcs		3147241	0					
ANR	3147279	MemberAccess	gRev . reverseArcs		3147241	0					
ANR	3147280	Identifier	gRev		3147241	0					
ANR	3147281	Identifier	reverseArcs		3147241	1					
ANR	3147282	ArgumentList			3147241	1					
ANR	3147283	IfStatement	"if ( ! checkStrandW ( g , gRev , & yield , & seq , & src ) )"		3147241	7					
ANR	3147284	Condition	"! checkStrandW ( g , gRev , & yield , & seq , & src )"	483:5:11395:11438	3147241	0	True				
ANR	3147285	UnaryOperationExpression	"! checkStrandW ( g , gRev , & yield , & seq , & src )"		3147241	0					
ANR	3147286	UnaryOperator	!		3147241	0					
ANR	3147287	CallExpression	"checkStrandW ( g , gRev , & yield , & seq , & src )"		3147241	1					
ANR	3147288	Callee	checkStrandW		3147241	0					
ANR	3147289	Identifier	checkStrandW		3147241	0					
ANR	3147290	ArgumentList	g		3147241	1					
ANR	3147291	Argument	g		3147241	0					
ANR	3147292	Identifier	g		3147241	0					
ANR	3147293	Argument	gRev		3147241	1					
ANR	3147294	Identifier	gRev		3147241	0					
ANR	3147295	Argument	& yield		3147241	2					
ANR	3147296	UnaryOperationExpression	& yield		3147241	0					
ANR	3147297	UnaryOperator	&		3147241	0					
ANR	3147298	Identifier	yield		3147241	1					
ANR	3147299	Argument	& seq		3147241	3					
ANR	3147300	UnaryOperationExpression	& seq		3147241	0					
ANR	3147301	UnaryOperator	&		3147241	0					
ANR	3147302	Identifier	seq		3147241	1					
ANR	3147303	Argument	& src		3147241	4					
ANR	3147304	UnaryOperationExpression	& src		3147241	0					
ANR	3147305	UnaryOperator	&		3147241	0					
ANR	3147306	Identifier	src		3147241	1					
ANR	3147307	CompoundStatement		11:52:204:204	3147241	1					
ANR	3147308	ReturnStatement	return NULL ;	484:2:11446:11457	3147241	0	True				
ANR	3147309	Identifier	NULL		3147241	0					
ANR	3147310	ExpressionStatement		485:2:11461:11461	3147241	8	True				
ANR	3147311	IfStatement	if ( yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ] )		3147241	9					
ANR	3147312	Condition	yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ]	492:5:11605:11636	3147241	0	True				
ANR	3147313	EqualityExpression	yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ]		3147241	0		!=			
ANR	3147314	ArrayIndexing	yield [ seq [ 0 ] ]		3147241	0					
ANR	3147315	Identifier	yield		3147241	0					
ANR	3147316	ArrayIndexing	seq [ 0 ]		3147241	1					
ANR	3147317	Identifier	seq		3147241	0					
ANR	3147318	PrimaryExpression	0		3147241	1					
ANR	3147319	ArrayIndexing	yield [ seq [ src - 1 ] ]		3147241	1					
ANR	3147320	Identifier	yield		3147241	0					
ANR	3147321	ArrayIndexing	seq [ src - 1 ]		3147241	1					
ANR	3147322	Identifier	seq		3147241	0					
ANR	3147323	AdditiveExpression	src - 1		3147241	1		-			
ANR	3147324	Identifier	src		3147241	0					
ANR	3147325	PrimaryExpression	1		3147241	1					
ANR	3147326	CompoundStatement		20:40:402:402	3147241	1					
ANR	3147327	Statement	delete	493:2:11644:11649	3147241	0	True				
ANR	3147328	Statement	[	493:8:11650:11650	3147241	1	True				
ANR	3147329	Statement	]	493:9:11651:11651	3147241	2	True				
ANR	3147330	ExpressionStatement	yield	493:11:11653:11658	3147241	3	True				
ANR	3147331	Identifier	yield		3147241	0					
ANR	3147332	Statement	delete	494:2:11662:11667	3147241	4	True				
ANR	3147333	Statement	[	494:8:11668:11668	3147241	5	True				
ANR	3147334	Statement	]	494:9:11669:11669	3147241	6	True				
ANR	3147335	ExpressionStatement	seq	494:11:11671:11674	3147241	7	True				
ANR	3147336	Identifier	seq		3147241	0					
ANR	3147337	ReturnStatement	return NULL ;	495:2:11678:11689	3147241	8	True				
ANR	3147338	Identifier	NULL		3147241	0					
ANR	3147339	ExpressionStatement		496:2:11693:11693	3147241	10	True				
ANR	3147340	ForStatement	for ( i = 1 ; i < src - 1 ; i ++ )		3147241	11					
ANR	3147341	ForInit	i = 1 ;	499:6:11760:11763	3147241	0	True				
ANR	3147342	AssignmentExpression	i = 1		3147241	0		=			
ANR	3147343	Identifier	i		3147241	0					
ANR	3147344	PrimaryExpression	1		3147241	1					
ANR	3147345	Condition	i < src - 1	499:11:11765:11771	3147241	1	True				
ANR	3147346	RelationalExpression	i < src - 1		3147241	0		<			
ANR	3147347	Identifier	i		3147241	0					
ANR	3147348	AdditiveExpression	src - 1		3147241	1		-			
ANR	3147349	Identifier	src		3147241	0					
ANR	3147350	PrimaryExpression	1		3147241	1					
ANR	3147351	PostIncDecOperationExpression	i ++	499:20:11774:11776	3147241	2	True				
ANR	3147352	Identifier	i		3147241	0					
ANR	3147353	IncDec	++		3147241	1					
ANR	3147354	CompoundStatement		27:26:542:542	3147241	3					
ANR	3147355	IfStatement	if ( yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1 )		3147241	0					
ANR	3147356	Condition	yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1	500:6:11788:11819	3147241	0	True				
ANR	3147357	EqualityExpression	yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1		3147241	0		!=			
ANR	3147358	ArrayIndexing	yield [ seq [ i ] ]		3147241	0					
ANR	3147359	Identifier	yield		3147241	0					
ANR	3147360	ArrayIndexing	seq [ i ]		3147241	1					
ANR	3147361	Identifier	seq		3147241	0					
ANR	3147362	Identifier	i		3147241	1					
ANR	3147363	AdditiveExpression	yield [ seq [ 0 ] ] - 1		3147241	1		-			
ANR	3147364	ArrayIndexing	yield [ seq [ 0 ] ]		3147241	0					
ANR	3147365	Identifier	yield		3147241	0					
ANR	3147366	ArrayIndexing	seq [ 0 ]		3147241	1					
ANR	3147367	Identifier	seq		3147241	0					
ANR	3147368	PrimaryExpression	0		3147241	1					
ANR	3147369	PrimaryExpression	1		3147241	1					
ANR	3147370	CompoundStatement		28:41:585:585	3147241	1					
ANR	3147371	Statement	delete	501:3:11828:11833	3147241	0	True				
ANR	3147372	Statement	[	501:9:11834:11834	3147241	1	True				
ANR	3147373	Statement	]	501:10:11835:11835	3147241	2	True				
ANR	3147374	ExpressionStatement	yield	501:12:11837:11842	3147241	3	True				
ANR	3147375	Identifier	yield		3147241	0					
ANR	3147376	Statement	delete	502:3:11847:11852	3147241	4	True				
ANR	3147377	Statement	[	502:9:11853:11853	3147241	5	True				
ANR	3147378	Statement	]	502:10:11854:11854	3147241	6	True				
ANR	3147379	ExpressionStatement	seq	502:12:11856:11859	3147241	7	True				
ANR	3147380	Identifier	seq		3147241	0					
ANR	3147381	ReturnStatement	return NULL ;	503:3:11864:11875	3147241	8	True				
ANR	3147382	Identifier	NULL		3147241	0					
ANR	3147383	ExpressionStatement		504:3:11880:11880	3147241	1	True				
ANR	3147384	ExpressionStatement		505:2:11884:11884	3147241	12	True				
ANR	3147385	IdentifierDeclStatement	int * sked = new int [ g . getNumNodes ( ) ] ;	509:1:11909:11947	3147241	13	True				
ANR	3147386	IdentifierDecl	* sked = new int [ g . getNumNodes ( ) ]		3147241	0					
ANR	3147387	IdentifierDeclType	int *		3147241	0					
ANR	3147388	Identifier	sked		3147241	1					
ANR	3147389	AssignmentExpression	* sked = new int [ g . getNumNodes ( ) ]		3147241	2		=			
ANR	3147390	Identifier	sked		3147241	0					
ANR	3147391	CallExpression	g . getNumNodes ( )		3147241	1					
ANR	3147392	Callee	g . getNumNodes		3147241	0					
ANR	3147393	MemberAccess	g . getNumNodes		3147241	0					
ANR	3147394	Identifier	g		3147241	0					
ANR	3147395	Identifier	getNumNodes		3147241	1					
ANR	3147396	ArgumentList			3147241	1					
ANR	3147397	IfStatement	if ( NULL == sked )		3147241	14					
ANR	3147398	Condition	NULL == sked	510:5:11954:11963	3147241	0	True				
ANR	3147399	EqualityExpression	NULL == sked		3147241	0		==			
ANR	3147400	Identifier	NULL		3147241	0					
ANR	3147401	Identifier	sked		3147241	1					
ANR	3147402	CompoundStatement		38:18:729:729	3147241	1					
ANR	3147403	Statement	delete	511:2:11971:11976	3147241	0	True				
ANR	3147404	Statement	[	511:8:11977:11977	3147241	1	True				
ANR	3147405	Statement	]	511:9:11978:11978	3147241	2	True				
ANR	3147406	ExpressionStatement	yield	511:11:11980:11985	3147241	3	True				
ANR	3147407	Identifier	yield		3147241	0					
ANR	3147408	Statement	delete	512:2:11989:11994	3147241	4	True				
ANR	3147409	Statement	[	512:8:11995:11995	3147241	5	True				
ANR	3147410	Statement	]	512:9:11996:11996	3147241	6	True				
ANR	3147411	ExpressionStatement	seq	512:11:11998:12001	3147241	7	True				
ANR	3147412	Identifier	seq		3147241	0					
ANR	3147413	ReturnStatement	return NULL ;	513:2:12005:12016	3147241	8	True				
ANR	3147414	Identifier	NULL		3147241	0					
ANR	3147415	ExpressionStatement		514:2:12020:12020	3147241	15	True				
ANR	3147416	ForStatement	for ( i = 0 ; i < src ; i ++ )		3147241	16					
ANR	3147417	ForInit	i = 0 ;	517:6:12094:12097	3147241	0	True				
ANR	3147418	AssignmentExpression	i = 0		3147241	0		=			
ANR	3147419	Identifier	i		3147241	0					
ANR	3147420	PrimaryExpression	0		3147241	1					
ANR	3147421	Condition	i < src	517:11:12099:12103	3147241	1	True				
ANR	3147422	RelationalExpression	i < src		3147241	0		<			
ANR	3147423	Identifier	i		3147241	0					
ANR	3147424	Identifier	src		3147241	1					
ANR	3147425	PostIncDecOperationExpression	i ++	517:18:12106:12108	3147241	2	True				
ANR	3147426	Identifier	i		3147241	0					
ANR	3147427	IncDec	++		3147241	1					
ANR	3147428	ExpressionStatement	sked [ i ] = seq [ i ]	518:2:12114:12130	3147241	3	True				
ANR	3147429	AssignmentExpression	sked [ i ] = seq [ i ]		3147241	0		=			
ANR	3147430	ArrayIndexing	sked [ i ]		3147241	0					
ANR	3147431	Identifier	sked		3147241	0					
ANR	3147432	Identifier	i		3147241	1					
ANR	3147433	ArrayIndexing	seq [ i ]		3147241	1					
ANR	3147434	Identifier	seq		3147241	0					
ANR	3147435	Identifier	i		3147241	1					
ANR	3147436	ForStatement	for ( j = 0 ; j < g . getNumNodes ( ) ; j ++ )		3147241	17					
ANR	3147437	ForInit	j = 0 ;	521:6:12162:12165	3147241	0	True				
ANR	3147438	AssignmentExpression	j = 0		3147241	0		=			
ANR	3147439	Identifier	j		3147241	0					
ANR	3147440	PrimaryExpression	0		3147241	1					
ANR	3147441	Condition	j < g . getNumNodes ( )	521:11:12167:12183	3147241	1	True				
ANR	3147442	RelationalExpression	j < g . getNumNodes ( )		3147241	0		<			
ANR	3147443	Identifier	j		3147241	0					
ANR	3147444	CallExpression	g . getNumNodes ( )		3147241	1					
ANR	3147445	Callee	g . getNumNodes		3147241	0					
ANR	3147446	MemberAccess	g . getNumNodes		3147241	0					
ANR	3147447	Identifier	g		3147241	0					
ANR	3147448	Identifier	getNumNodes		3147241	1					
ANR	3147449	ArgumentList			3147241	1					
ANR	3147450	PostIncDecOperationExpression	j ++	521:30:12186:12188	3147241	2	True				
ANR	3147451	Identifier	j		3147241	0					
ANR	3147452	IncDec	++		3147241	1					
ANR	3147453	CompoundStatement		49:36:954:954	3147241	3					
ANR	3147454	IfStatement	if ( 0 == g . getNumArcs ( j ) )		3147241	0					
ANR	3147455	Condition	0 == g . getNumArcs ( j )	522:6:12200:12217	3147241	0	True				
ANR	3147456	EqualityExpression	0 == g . getNumArcs ( j )		3147241	0		==			
ANR	3147457	PrimaryExpression	0		3147241	0					
ANR	3147458	CallExpression	g . getNumArcs ( j )		3147241	1					
ANR	3147459	Callee	g . getNumArcs		3147241	0					
ANR	3147460	MemberAccess	g . getNumArcs		3147241	0					
ANR	3147461	Identifier	g		3147241	0					
ANR	3147462	Identifier	getNumArcs		3147241	1					
ANR	3147463	ArgumentList	j		3147241	1					
ANR	3147464	Argument	j		3147241	0					
ANR	3147465	Identifier	j		3147241	0					
ANR	3147466	CompoundStatement		50:27:983:983	3147241	1					
ANR	3147467	ExpressionStatement	sked [ i ] = j	523:3:12226:12237	3147241	0	True				
ANR	3147468	AssignmentExpression	sked [ i ] = j		3147241	0		=			
ANR	3147469	ArrayIndexing	sked [ i ]		3147241	0					
ANR	3147470	Identifier	sked		3147241	0					
ANR	3147471	Identifier	i		3147241	1					
ANR	3147472	Identifier	j		3147241	1					
ANR	3147473	ExpressionStatement	i ++	524:3:12242:12245	3147241	1	True				
ANR	3147474	PostIncDecOperationExpression	i ++		3147241	0					
ANR	3147475	Identifier	i		3147241	0					
ANR	3147476	IncDec	++		3147241	1					
ANR	3147477	ExpressionStatement		525:3:12250:12250	3147241	1	True				
ANR	3147478	ExpressionStatement		526:2:12254:12254	3147241	18	True				
ANR	3147479	Statement	delete	528:1:12258:12263	3147241	19	True				
ANR	3147480	Statement	[	528:7:12264:12264	3147241	20	True				
ANR	3147481	Statement	]	528:8:12265:12265	3147241	21	True				
ANR	3147482	ExpressionStatement	yield	528:10:12267:12272	3147241	22	True				
ANR	3147483	Identifier	yield		3147241	0					
ANR	3147484	Statement	delete	529:1:12275:12280	3147241	23	True				
ANR	3147485	Statement	[	529:7:12281:12281	3147241	24	True				
ANR	3147486	Statement	]	529:8:12282:12282	3147241	25	True				
ANR	3147487	ExpressionStatement	seq	529:10:12284:12287	3147241	26	True				
ANR	3147488	Identifier	seq		3147241	0					
ANR	3147489	ReturnStatement	return sked ;	530:1:12290:12301	3147241	27	True				
ANR	3147490	Identifier	sked		3147241	0					
ANR	3147491	ReturnType	int *		3147241	1					
ANR	3147492	Identifier	ConstituentLibrary :: checkW		3147241	2					
ANR	3147493	ParameterList	const Dag & g		3147241	3					
ANR	3147494	Parameter	const Dag & g	472:33:11223:11234	3147241	0	True				
ANR	3147495	ParameterType	const Dag &		3147241	0					
ANR	3147496	Identifier	g		3147241	1					
ANR	3147497	CFGEntryNode	ENTRY		3147241		True				
ANR	3147498	CFGExitNode	EXIT		3147241		True				
ANR	3147499	Symbol	& seq		3147241						
ANR	3147500	Symbol	* * i		3147241						
ANR	3147501	Symbol	sked		3147241						
ANR	3147502	Symbol	g . getNumNodes		3147241						
ANR	3147503	Symbol	NULL		3147241						
ANR	3147504	Symbol	g . getNumArcs		3147241						
ANR	3147505	Symbol	src		3147241						
ANR	3147506	Symbol	g		3147241						
ANR	3147507	Symbol	i		3147241						
ANR	3147508	Symbol	* seq		3147241						
ANR	3147509	Symbol	* sked		3147241						
ANR	3147510	Symbol	j		3147241						
ANR	3147511	Symbol	gRev		3147241						
ANR	3147512	Symbol	* yield		3147241						
ANR	3147513	Symbol	& src		3147241						
ANR	3147514	Symbol	* src		3147241						
ANR	3147515	Symbol	& yield		3147241						
ANR	3147516	Symbol	* * seq		3147241						
ANR	3147517	Symbol	* i		3147241						
ANR	3147518	Symbol	yield		3147241						
ANR	3147519	Symbol	* * src		3147241						
ANR	3147520	Symbol	checkStrandW		3147241						
ANR	3147521	Symbol	seq		3147241						
ANR	3147522	Function	ConstituentLibrary :: checkM	548:0:12533:14136							
ANR	3147523	FunctionDef	ConstituentLibrary :: checkM (const Dag & g)		3147522	0					
ANR	3147524	CompoundStatement		549:0:12580:14136	3147522	0					
ANR	3147525	IdentifierDeclStatement	int * yield = NULL ;	550:1:12583:12598	3147522	0	True				
ANR	3147526	IdentifierDecl	* yield = NULL		3147522	0					
ANR	3147527	IdentifierDeclType	int *		3147522	0					
ANR	3147528	Identifier	yield		3147522	1					
ANR	3147529	AssignmentExpression	* yield = NULL		3147522	2		=			
ANR	3147530	Identifier	NULL		3147522	0					
ANR	3147531	Identifier	NULL		3147522	1					
ANR	3147532	IdentifierDeclStatement	int * seq = NULL ;	551:1:12601:12614	3147522	1	True				
ANR	3147533	IdentifierDecl	* seq = NULL		3147522	0					
ANR	3147534	IdentifierDeclType	int *		3147522	0					
ANR	3147535	Identifier	seq		3147522	1					
ANR	3147536	AssignmentExpression	* seq = NULL		3147522	2		=			
ANR	3147537	Identifier	NULL		3147522	0					
ANR	3147538	Identifier	NULL		3147522	1					
ANR	3147539	IdentifierDeclStatement	int * sked = NULL ;	552:1:12617:12632	3147522	2	True				
ANR	3147540	IdentifierDecl	* sked = NULL		3147522	0					
ANR	3147541	IdentifierDeclType	int *		3147522	0					
ANR	3147542	Identifier	sked		3147522	1					
ANR	3147543	AssignmentExpression	* sked = NULL		3147522	2		=			
ANR	3147544	Identifier	NULL		3147522	0					
ANR	3147545	Identifier	NULL		3147522	1					
ANR	3147546	IdentifierDeclStatement	int * color = NULL ;	553:1:12635:12651	3147522	3	True				
ANR	3147547	IdentifierDecl	* color = NULL		3147522	0					
ANR	3147548	IdentifierDeclType	int *		3147522	0					
ANR	3147549	Identifier	color		3147522	1					
ANR	3147550	AssignmentExpression	* color = NULL		3147522	2		=			
ANR	3147551	Identifier	NULL		3147522	0					
ANR	3147552	Identifier	NULL		3147522	1					
ANR	3147553	IdentifierDeclStatement	int src ;	554:1:12654:12661	3147522	4	True				
ANR	3147554	IdentifierDecl	src		3147522	0					
ANR	3147555	IdentifierDeclType	int		3147522	0					
ANR	3147556	Identifier	src		3147522	1					
ANR	3147557	IdentifierDeclStatement	"int i , j ;"	555:1:12664:12671	3147522	5	True				
ANR	3147558	IdentifierDecl	i		3147522	0					
ANR	3147559	IdentifierDeclType	int		3147522	0					
ANR	3147560	Identifier	i		3147522	1					
ANR	3147561	IdentifierDecl	j		3147522	1					
ANR	3147562	IdentifierDeclType	int		3147522	0					
ANR	3147563	Identifier	j		3147522	1					
ANR	3147564	IdentifierDeclStatement	int idx ;	556:1:12674:12681	3147522	6	True				
ANR	3147565	IdentifierDecl	idx		3147522	0					
ANR	3147566	IdentifierDeclType	int		3147522	0					
ANR	3147567	Identifier	idx		3147522	1					
ANR	3147568	IdentifierDeclStatement	Dag gRev ;	559:1:12747:12755	3147522	7	True				
ANR	3147569	IdentifierDecl	gRev		3147522	0					
ANR	3147570	IdentifierDeclType	Dag		3147522	0					
ANR	3147571	Identifier	gRev		3147522	1					
ANR	3147572	ExpressionStatement	gRev . initializeWith ( g )	560:1:12758:12780	3147522	8	True				
ANR	3147573	CallExpression	gRev . initializeWith ( g )		3147522	0					
ANR	3147574	Callee	gRev . initializeWith		3147522	0					
ANR	3147575	MemberAccess	gRev . initializeWith		3147522	0					
ANR	3147576	Identifier	gRev		3147522	0					
ANR	3147577	Identifier	initializeWith		3147522	1					
ANR	3147578	ArgumentList	g		3147522	1					
ANR	3147579	Argument	g		3147522	0					
ANR	3147580	Identifier	g		3147522	0					
ANR	3147581	ExpressionStatement	gRev . reverseArcs ( )	561:1:12783:12801	3147522	9	True				
ANR	3147582	CallExpression	gRev . reverseArcs ( )		3147522	0					
ANR	3147583	Callee	gRev . reverseArcs		3147522	0					
ANR	3147584	MemberAccess	gRev . reverseArcs		3147522	0					
ANR	3147585	Identifier	gRev		3147522	0					
ANR	3147586	Identifier	reverseArcs		3147522	1					
ANR	3147587	ArgumentList			3147522	1					
ANR	3147588	IfStatement	"if ( ! checkStrandW ( gRev , g , & yield , & seq , & src ) )"		3147522	10					
ANR	3147589	Condition	"! checkStrandW ( gRev , g , & yield , & seq , & src )"	562:5:12808:12851	3147522	0	True				
ANR	3147590	UnaryOperationExpression	"! checkStrandW ( gRev , g , & yield , & seq , & src )"		3147522	0					
ANR	3147591	UnaryOperator	!		3147522	0					
ANR	3147592	CallExpression	"checkStrandW ( gRev , g , & yield , & seq , & src )"		3147522	1					
ANR	3147593	Callee	checkStrandW		3147522	0					
ANR	3147594	Identifier	checkStrandW		3147522	0					
ANR	3147595	ArgumentList	gRev		3147522	1					
ANR	3147596	Argument	gRev		3147522	0					
ANR	3147597	Identifier	gRev		3147522	0					
ANR	3147598	Argument	g		3147522	1					
ANR	3147599	Identifier	g		3147522	0					
ANR	3147600	Argument	& yield		3147522	2					
ANR	3147601	UnaryOperationExpression	& yield		3147522	0					
ANR	3147602	UnaryOperator	&		3147522	0					
ANR	3147603	Identifier	yield		3147522	1					
ANR	3147604	Argument	& seq		3147522	3					
ANR	3147605	UnaryOperationExpression	& seq		3147522	0					
ANR	3147606	UnaryOperator	&		3147522	0					
ANR	3147607	Identifier	seq		3147522	1					
ANR	3147608	Argument	& src		3147522	4					
ANR	3147609	UnaryOperationExpression	& src		3147522	0					
ANR	3147610	UnaryOperator	&		3147522	0					
ANR	3147611	Identifier	src		3147522	1					
ANR	3147612	GotoStatement	goto reterr ;	563:2:12891:12902	3147522	1	True				
ANR	3147613	Identifier	reterr		3147522	0					
ANR	3147614	IfStatement	if ( yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ] )		3147522	11					
ANR	3147615	Condition	yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ]	570:5:13046:13077	3147522	0	True				
ANR	3147616	EqualityExpression	yield [ seq [ 0 ] ] != yield [ seq [ src - 1 ] ]		3147522	0		!=			
ANR	3147617	ArrayIndexing	yield [ seq [ 0 ] ]		3147522	0					
ANR	3147618	Identifier	yield		3147522	0					
ANR	3147619	ArrayIndexing	seq [ 0 ]		3147522	1					
ANR	3147620	Identifier	seq		3147522	0					
ANR	3147621	PrimaryExpression	0		3147522	1					
ANR	3147622	ArrayIndexing	yield [ seq [ src - 1 ] ]		3147522	1					
ANR	3147623	Identifier	yield		3147522	0					
ANR	3147624	ArrayIndexing	seq [ src - 1 ]		3147522	1					
ANR	3147625	Identifier	seq		3147522	0					
ANR	3147626	AdditiveExpression	src - 1		3147522	1		-			
ANR	3147627	Identifier	src		3147522	0					
ANR	3147628	PrimaryExpression	1		3147522	1					
ANR	3147629	GotoStatement	goto reterr ;	571:2:13083:13094	3147522	1	True				
ANR	3147630	Identifier	reterr		3147522	0					
ANR	3147631	ForStatement	for ( i = 1 ; i < src - 1 ; i ++ )		3147522	12					
ANR	3147632	ForInit	i = 1 ;	574:6:13161:13164	3147522	0	True				
ANR	3147633	AssignmentExpression	i = 1		3147522	0		=			
ANR	3147634	Identifier	i		3147522	0					
ANR	3147635	PrimaryExpression	1		3147522	1					
ANR	3147636	Condition	i < src - 1	574:11:13166:13172	3147522	1	True				
ANR	3147637	RelationalExpression	i < src - 1		3147522	0		<			
ANR	3147638	Identifier	i		3147522	0					
ANR	3147639	AdditiveExpression	src - 1		3147522	1		-			
ANR	3147640	Identifier	src		3147522	0					
ANR	3147641	PrimaryExpression	1		3147522	1					
ANR	3147642	PostIncDecOperationExpression	i ++	574:20:13175:13177	3147522	2	True				
ANR	3147643	Identifier	i		3147522	0					
ANR	3147644	IncDec	++		3147522	1					
ANR	3147645	CompoundStatement		26:26:600:600	3147522	3					
ANR	3147646	IfStatement	if ( yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1 )		3147522	0					
ANR	3147647	Condition	yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1	575:6:13189:13220	3147522	0	True				
ANR	3147648	EqualityExpression	yield [ seq [ i ] ] != yield [ seq [ 0 ] ] - 1		3147522	0		!=			
ANR	3147649	ArrayIndexing	yield [ seq [ i ] ]		3147522	0					
ANR	3147650	Identifier	yield		3147522	0					
ANR	3147651	ArrayIndexing	seq [ i ]		3147522	1					
ANR	3147652	Identifier	seq		3147522	0					
ANR	3147653	Identifier	i		3147522	1					
ANR	3147654	AdditiveExpression	yield [ seq [ 0 ] ] - 1		3147522	1		-			
ANR	3147655	ArrayIndexing	yield [ seq [ 0 ] ]		3147522	0					
ANR	3147656	Identifier	yield		3147522	0					
ANR	3147657	ArrayIndexing	seq [ 0 ]		3147522	1					
ANR	3147658	Identifier	seq		3147522	0					
ANR	3147659	PrimaryExpression	0		3147522	1					
ANR	3147660	PrimaryExpression	1		3147522	1					
ANR	3147661	GotoStatement	goto reterr ;	576:3:13227:13238	3147522	1	True				
ANR	3147662	Identifier	reterr		3147522	0					
ANR	3147663	ExpressionStatement		577:2:13242:13242	3147522	13	True				
ANR	3147664	ExpressionStatement	sked = new int [ g . getNumNodes ( ) ]	581:1:13268:13300	3147522	14	True				
ANR	3147665	AssignmentExpression	sked = new int [ g . getNumNodes ( ) ]		3147522	0		=			
ANR	3147666	Identifier	sked		3147522	0					
ANR	3147667	CallExpression	g . getNumNodes ( )		3147522	1					
ANR	3147668	Callee	g . getNumNodes		3147522	0					
ANR	3147669	MemberAccess	g . getNumNodes		3147522	0					
ANR	3147670	Identifier	g		3147522	0					
ANR	3147671	Identifier	getNumNodes		3147522	1					
ANR	3147672	ArgumentList			3147522	1					
ANR	3147673	IfStatement	if ( NULL == sked )		3147522	15					
ANR	3147674	Condition	NULL == sked	582:5:13307:13316	3147522	0	True				
ANR	3147675	EqualityExpression	NULL == sked		3147522	0		==			
ANR	3147676	Identifier	NULL		3147522	0					
ANR	3147677	Identifier	sked		3147522	1					
ANR	3147678	GotoStatement	goto reterr ;	583:2:13323:13334	3147522	1	True				
ANR	3147679	Identifier	reterr		3147522	0					
ANR	3147680	ExpressionStatement	color = new int [ g . getNumNodes ( ) ]	587:1:13446:13479	3147522	16	True				
ANR	3147681	AssignmentExpression	color = new int [ g . getNumNodes ( ) ]		3147522	0		=			
ANR	3147682	Identifier	color		3147522	0					
ANR	3147683	CallExpression	g . getNumNodes ( )		3147522	1					
ANR	3147684	Callee	g . getNumNodes		3147522	0					
ANR	3147685	MemberAccess	g . getNumNodes		3147522	0					
ANR	3147686	Identifier	g		3147522	0					
ANR	3147687	Identifier	getNumNodes		3147522	1					
ANR	3147688	ArgumentList			3147522	1					
ANR	3147689	IfStatement	if ( NULL == color )		3147522	17					
ANR	3147690	Condition	NULL == color	588:5:13486:13496	3147522	0	True				
ANR	3147691	EqualityExpression	NULL == color		3147522	0		==			
ANR	3147692	Identifier	NULL		3147522	0					
ANR	3147693	Identifier	color		3147522	1					
ANR	3147694	GotoStatement	goto reterr ;	589:2:13502:13513	3147522	1	True				
ANR	3147695	Identifier	reterr		3147522	0					
ANR	3147696	ForStatement	for ( j = 0 ; j < g . getNumNodes ( ) ; j ++ )		3147522	18					
ANR	3147697	ForInit	j = 0 ;	590:6:13521:13524	3147522	0	True				
ANR	3147698	AssignmentExpression	j = 0		3147522	0		=			
ANR	3147699	Identifier	j		3147522	0					
ANR	3147700	PrimaryExpression	0		3147522	1					
ANR	3147701	Condition	j < g . getNumNodes ( )	590:11:13526:13542	3147522	1	True				
ANR	3147702	RelationalExpression	j < g . getNumNodes ( )		3147522	0		<			
ANR	3147703	Identifier	j		3147522	0					
ANR	3147704	CallExpression	g . getNumNodes ( )		3147522	1					
ANR	3147705	Callee	g . getNumNodes		3147522	0					
ANR	3147706	MemberAccess	g . getNumNodes		3147522	0					
ANR	3147707	Identifier	g		3147522	0					
ANR	3147708	Identifier	getNumNodes		3147522	1					
ANR	3147709	ArgumentList			3147522	1					
ANR	3147710	PostIncDecOperationExpression	j ++	590:30:13545:13547	3147522	2	True				
ANR	3147711	Identifier	j		3147522	0					
ANR	3147712	IncDec	++		3147522	1					
ANR	3147713	ExpressionStatement	color [ j ] = 0	591:2:13553:13565	3147522	3	True				
ANR	3147714	AssignmentExpression	color [ j ] = 0		3147522	0		=			
ANR	3147715	ArrayIndexing	color [ j ]		3147522	0					
ANR	3147716	Identifier	color		3147522	0					
ANR	3147717	Identifier	j		3147522	1					
ANR	3147718	PrimaryExpression	0		3147522	1					
ANR	3147719	ExpressionStatement	idx = 0	593:1:13569:13574	3147522	19	True				
ANR	3147720	AssignmentExpression	idx = 0		3147522	0		=			
ANR	3147721	Identifier	idx		3147522	0					
ANR	3147722	PrimaryExpression	0		3147522	1					
ANR	3147723	ForStatement	for ( i = 0 ; i < src ; i ++ )		3147522	20					
ANR	3147724	ForInit	i = 0 ;	594:6:13582:13585	3147522	0	True				
ANR	3147725	AssignmentExpression	i = 0		3147522	0		=			
ANR	3147726	Identifier	i		3147522	0					
ANR	3147727	PrimaryExpression	0		3147522	1					
ANR	3147728	Condition	i < src	594:11:13587:13591	3147522	1	True				
ANR	3147729	RelationalExpression	i < src		3147522	0		<			
ANR	3147730	Identifier	i		3147522	0					
ANR	3147731	Identifier	src		3147522	1					
ANR	3147732	PostIncDecOperationExpression	i ++	594:18:13594:13596	3147522	2	True				
ANR	3147733	Identifier	i		3147522	0					
ANR	3147734	IncDec	++		3147522	1					
ANR	3147735	CompoundStatement		47:2:1023:1041	3147522	3					
ANR	3147736	IdentifierDeclStatement	int child = seq [ i ] ;	595:2:13604:13622	3147522	0	True				
ANR	3147737	IdentifierDecl	child = seq [ i ]		3147522	0					
ANR	3147738	IdentifierDeclType	int		3147522	0					
ANR	3147739	Identifier	child		3147522	1					
ANR	3147740	AssignmentExpression	child = seq [ i ]		3147522	2		=			
ANR	3147741	Identifier	child		3147522	0					
ANR	3147742	ArrayIndexing	seq [ i ]		3147522	1					
ANR	3147743	Identifier	seq		3147522	0					
ANR	3147744	Identifier	i		3147522	1					
ANR	3147745	ForStatement	for ( j = 0 ; j < gRev . getNumArcs ( child ) ; j ++ )		3147522	1					
ANR	3147746	ForInit	j = 0 ;	596:7:13631:13634	3147522	0	True				
ANR	3147747	AssignmentExpression	j = 0		3147522	0		=			
ANR	3147748	Identifier	j		3147522	0					
ANR	3147749	PrimaryExpression	0		3147522	1					
ANR	3147750	Condition	j < gRev . getNumArcs ( child )	596:12:13636:13661	3147522	1	True				
ANR	3147751	RelationalExpression	j < gRev . getNumArcs ( child )		3147522	0		<			
ANR	3147752	Identifier	j		3147522	0					
ANR	3147753	CallExpression	gRev . getNumArcs ( child )		3147522	1					
ANR	3147754	Callee	gRev . getNumArcs		3147522	0					
ANR	3147755	MemberAccess	gRev . getNumArcs		3147522	0					
ANR	3147756	Identifier	gRev		3147522	0					
ANR	3147757	Identifier	getNumArcs		3147522	1					
ANR	3147758	ArgumentList	child		3147522	1					
ANR	3147759	Argument	child		3147522	0					
ANR	3147760	Identifier	child		3147522	0					
ANR	3147761	PostIncDecOperationExpression	j ++	596:40:13664:13666	3147522	2	True				
ANR	3147762	Identifier	j		3147522	0					
ANR	3147763	IncDec	++		3147522	1					
ANR	3147764	CompoundStatement		49:3:1094:1130	3147522	3					
ANR	3147765	IdentifierDeclStatement	"int parent = gRev . getArc ( child , j ) ;"	597:3:13675:13711	3147522	0	True				
ANR	3147766	IdentifierDecl	"parent = gRev . getArc ( child , j )"		3147522	0					
ANR	3147767	IdentifierDeclType	int		3147522	0					
ANR	3147768	Identifier	parent		3147522	1					
ANR	3147769	AssignmentExpression	"parent = gRev . getArc ( child , j )"		3147522	2		=			
ANR	3147770	Identifier	parent		3147522	0					
ANR	3147771	CallExpression	"gRev . getArc ( child , j )"		3147522	1					
ANR	3147772	Callee	gRev . getArc		3147522	0					
ANR	3147773	MemberAccess	gRev . getArc		3147522	0					
ANR	3147774	Identifier	gRev		3147522	0					
ANR	3147775	Identifier	getArc		3147522	1					
ANR	3147776	ArgumentList	child		3147522	1					
ANR	3147777	Argument	child		3147522	0					
ANR	3147778	Identifier	child		3147522	0					
ANR	3147779	Argument	j		3147522	1					
ANR	3147780	Identifier	j		3147522	0					
ANR	3147781	IfStatement	if ( 0 == color [ parent ] )		3147522	1					
ANR	3147782	Condition	0 == color [ parent ]	598:7:13720:13735	3147522	0	True				
ANR	3147783	EqualityExpression	0 == color [ parent ]		3147522	0		==			
ANR	3147784	PrimaryExpression	0		3147522	0					
ANR	3147785	ArrayIndexing	color [ parent ]		3147522	1					
ANR	3147786	Identifier	color		3147522	0					
ANR	3147787	Identifier	parent		3147522	1					
ANR	3147788	CompoundStatement		50:26:1158:1158	3147522	1					
ANR	3147789	ExpressionStatement	sked [ idx ] = parent	599:4:13745:13763	3147522	0	True				
ANR	3147790	AssignmentExpression	sked [ idx ] = parent		3147522	0		=			
ANR	3147791	ArrayIndexing	sked [ idx ]		3147522	0					
ANR	3147792	Identifier	sked		3147522	0					
ANR	3147793	Identifier	idx		3147522	1					
ANR	3147794	Identifier	parent		3147522	1					
ANR	3147795	ExpressionStatement	idx ++	600:4:13769:13774	3147522	1	True				
ANR	3147796	PostIncDecOperationExpression	idx ++		3147522	0					
ANR	3147797	Identifier	idx		3147522	0					
ANR	3147798	IncDec	++		3147522	1					
ANR	3147799	ExpressionStatement	color [ parent ] = 1	601:4:13780:13795	3147522	2	True				
ANR	3147800	AssignmentExpression	color [ parent ] = 1		3147522	0		=			
ANR	3147801	ArrayIndexing	color [ parent ]		3147522	0					
ANR	3147802	Identifier	color		3147522	0					
ANR	3147803	Identifier	parent		3147522	1					
ANR	3147804	PrimaryExpression	1		3147522	1					
ANR	3147805	ExpressionStatement		602:4:13801:13801	3147522	2	True				
ANR	3147806	ExpressionStatement		603:3:13806:13806	3147522	2	True				
ANR	3147807	ExpressionStatement		604:2:13810:13810	3147522	21	True				
ANR	3147808	ForStatement	for ( j = 0 ; j < g . getNumNodes ( ) ; j ++ )		3147522	22					
ANR	3147809	ForInit	j = 0 ;	607:6:13842:13845	3147522	0	True				
ANR	3147810	AssignmentExpression	j = 0		3147522	0		=			
ANR	3147811	Identifier	j		3147522	0					
ANR	3147812	PrimaryExpression	0		3147522	1					
ANR	3147813	Condition	j < g . getNumNodes ( )	607:11:13847:13863	3147522	1	True				
ANR	3147814	RelationalExpression	j < g . getNumNodes ( )		3147522	0		<			
ANR	3147815	Identifier	j		3147522	0					
ANR	3147816	CallExpression	g . getNumNodes ( )		3147522	1					
ANR	3147817	Callee	g . getNumNodes		3147522	0					
ANR	3147818	MemberAccess	g . getNumNodes		3147522	0					
ANR	3147819	Identifier	g		3147522	0					
ANR	3147820	Identifier	getNumNodes		3147522	1					
ANR	3147821	ArgumentList			3147522	1					
ANR	3147822	PostIncDecOperationExpression	j ++	607:30:13866:13868	3147522	2	True				
ANR	3147823	Identifier	j		3147522	0					
ANR	3147824	IncDec	++		3147522	1					
ANR	3147825	CompoundStatement		59:36:1291:1291	3147522	3					
ANR	3147826	IfStatement	if ( 0 == g . getNumArcs ( j ) )		3147522	0					
ANR	3147827	Condition	0 == g . getNumArcs ( j )	608:6:13880:13897	3147522	0	True				
ANR	3147828	EqualityExpression	0 == g . getNumArcs ( j )		3147522	0		==			
ANR	3147829	PrimaryExpression	0		3147522	0					
ANR	3147830	CallExpression	g . getNumArcs ( j )		3147522	1					
ANR	3147831	Callee	g . getNumArcs		3147522	0					
ANR	3147832	MemberAccess	g . getNumArcs		3147522	0					
ANR	3147833	Identifier	g		3147522	0					
ANR	3147834	Identifier	getNumArcs		3147522	1					
ANR	3147835	ArgumentList	j		3147522	1					
ANR	3147836	Argument	j		3147522	0					
ANR	3147837	Identifier	j		3147522	0					
ANR	3147838	CompoundStatement		60:27:1320:1320	3147522	1					
ANR	3147839	ExpressionStatement	sked [ idx ] = j	609:3:13906:13919	3147522	0	True				
ANR	3147840	AssignmentExpression	sked [ idx ] = j		3147522	0		=			
ANR	3147841	ArrayIndexing	sked [ idx ]		3147522	0					
ANR	3147842	Identifier	sked		3147522	0					
ANR	3147843	Identifier	idx		3147522	1					
ANR	3147844	Identifier	j		3147522	1					
ANR	3147845	ExpressionStatement	idx ++	610:3:13924:13929	3147522	1	True				
ANR	3147846	PostIncDecOperationExpression	idx ++		3147522	0					
ANR	3147847	Identifier	idx		3147522	0					
ANR	3147848	IncDec	++		3147522	1					
ANR	3147849	ExpressionStatement		611:3:13934:13934	3147522	1	True				
ANR	3147850	ExpressionStatement		612:2:13938:13938	3147522	23	True				
ANR	3147851	Statement	delete	614:1:13942:13947	3147522	24	True				
ANR	3147852	Statement	[	614:7:13948:13948	3147522	25	True				
ANR	3147853	Statement	]	614:8:13949:13949	3147522	26	True				
ANR	3147854	ExpressionStatement	color	614:10:13951:13956	3147522	27	True				
ANR	3147855	Identifier	color		3147522	0					
ANR	3147856	Statement	delete	615:1:13959:13964	3147522	28	True				
ANR	3147857	Statement	[	615:7:13965:13965	3147522	29	True				
ANR	3147858	Statement	]	615:8:13966:13966	3147522	30	True				
ANR	3147859	ExpressionStatement	yield	615:10:13968:13973	3147522	31	True				
ANR	3147860	Identifier	yield		3147522	0					
ANR	3147861	Statement	delete	616:1:13976:13981	3147522	32	True				
ANR	3147862	Statement	[	616:7:13982:13982	3147522	33	True				
ANR	3147863	Statement	]	616:8:13983:13983	3147522	34	True				
ANR	3147864	ExpressionStatement	seq	616:10:13985:13988	3147522	35	True				
ANR	3147865	Identifier	seq		3147522	0					
ANR	3147866	ReturnStatement	return sked ;	617:1:13991:14002	3147522	36	True				
ANR	3147867	Identifier	sked		3147522	0					
ANR	3147868	Label	reterr :	619:0:14005:14011	3147522	37	True				
ANR	3147869	Identifier	reterr		3147522	0					
ANR	3147870	IfStatement	if ( color )		3147522	38					
ANR	3147871	Condition	color	620:5:14018:14022	3147522	0	True				
ANR	3147872	Identifier	color		3147522	0					
ANR	3147873	Statement	delete	620:13:14026:14031	3147522	1	True				
ANR	3147874	Statement	[	620:19:14032:14032	3147522	39	True				
ANR	3147875	Statement	]	620:20:14033:14033	3147522	40	True				
ANR	3147876	ExpressionStatement	sked	620:22:14035:14039	3147522	41	True				
ANR	3147877	Identifier	sked		3147522	0					
ANR	3147878	IfStatement	if ( sked )		3147522	42					
ANR	3147879	Condition	sked	621:5:14046:14049	3147522	0	True				
ANR	3147880	Identifier	sked		3147522	0					
ANR	3147881	Statement	delete	621:12:14053:14058	3147522	1	True				
ANR	3147882	Statement	[	621:18:14059:14059	3147522	43	True				
ANR	3147883	Statement	]	621:19:14060:14060	3147522	44	True				
ANR	3147884	ExpressionStatement	sked	621:21:14062:14066	3147522	45	True				
ANR	3147885	Identifier	sked		3147522	0					
ANR	3147886	IfStatement	if ( yield )		3147522	46					
ANR	3147887	Condition	yield	622:5:14073:14077	3147522	0	True				
ANR	3147888	Identifier	yield		3147522	0					
ANR	3147889	Statement	delete	622:13:14081:14086	3147522	1	True				
ANR	3147890	Statement	[	622:19:14087:14087	3147522	47	True				
ANR	3147891	Statement	]	622:20:14088:14088	3147522	48	True				
ANR	3147892	ExpressionStatement	yield	622:22:14090:14095	3147522	49	True				
ANR	3147893	Identifier	yield		3147522	0					
ANR	3147894	IfStatement	if ( seq )		3147522	50					
ANR	3147895	Condition	seq	623:5:14102:14104	3147522	0	True				
ANR	3147896	Identifier	seq		3147522	0					
ANR	3147897	Statement	delete	623:11:14108:14113	3147522	1	True				
ANR	3147898	Statement	[	623:17:14114:14114	3147522	51	True				
ANR	3147899	Statement	]	623:18:14115:14115	3147522	52	True				
ANR	3147900	ExpressionStatement	seq	623:20:14117:14120	3147522	53	True				
ANR	3147901	Identifier	seq		3147522	0					
ANR	3147902	ReturnStatement	return NULL ;	624:1:14123:14134	3147522	54	True				
ANR	3147903	Identifier	NULL		3147522	0					
ANR	3147904	ReturnType	int *		3147522	1					
ANR	3147905	Identifier	ConstituentLibrary :: checkM		3147522	2					
ANR	3147906	ParameterList	const Dag & g		3147522	3					
ANR	3147907	Parameter	const Dag & g	548:33:12566:12577	3147522	0	True				
ANR	3147908	ParameterType	const Dag &		3147522	0					
ANR	3147909	Identifier	g		3147522	1					
ANR	3147910	CFGEntryNode	ENTRY		3147522		True				
ANR	3147911	CFGExitNode	EXIT		3147522		True				
ANR	3147912	Symbol	parent		3147522						
ANR	3147913	Symbol	sked		3147522						
ANR	3147914	Symbol	& seq		3147522						
ANR	3147915	Symbol	g . getNumNodes		3147522						
ANR	3147916	Symbol	* parent		3147522						
ANR	3147917	Symbol	g . getNumArcs		3147522						
ANR	3147918	Symbol	color		3147522						
ANR	3147919	Symbol	* seq		3147522						
ANR	3147920	Symbol	* sked		3147522						
ANR	3147921	Symbol	gRev		3147522						
ANR	3147922	Symbol	& src		3147522						
ANR	3147923	Symbol	* src		3147522						
ANR	3147924	Symbol	yield		3147522						
ANR	3147925	Symbol	* idx		3147522						
ANR	3147926	Symbol	checkStrandW		3147522						
ANR	3147927	Symbol	seq		3147522						
ANR	3147928	Symbol	* * i		3147522						
ANR	3147929	Symbol	NULL		3147522						
ANR	3147930	Symbol	src		3147522						
ANR	3147931	Symbol	gRev . getNumArcs		3147522						
ANR	3147932	Symbol	g		3147522						
ANR	3147933	Symbol	i		3147522						
ANR	3147934	Symbol	j		3147522						
ANR	3147935	Symbol	* color		3147522						
ANR	3147936	Symbol	* yield		3147522						
ANR	3147937	Symbol	& yield		3147522						
ANR	3147938	Symbol	* * seq		3147522						
ANR	3147939	Symbol	* i		3147522						
ANR	3147940	Symbol	* j		3147522						
ANR	3147941	Symbol	gRev . getArc		3147522						
ANR	3147942	Symbol	* * src		3147522						
ANR	3147943	Symbol	idx		3147522						
ANR	3147944	Symbol	child		3147522						
ANR	3147945	Function	ConstituentLibrary :: getSchedule	646:0:14581:16553							
ANR	3147946	FunctionDef	ConstituentLibrary :: getSchedule (const Dag & g)		3147945	0					
ANR	3147947	CompoundStatement		647:0:14633:16553	3147945	0					
ANR	3147948	IdentifierDeclStatement	"int i , j , k ;"	648:1:14636:14645	3147945	0	True				
ANR	3147949	IdentifierDecl	i		3147945	0					
ANR	3147950	IdentifierDeclType	int		3147945	0					
ANR	3147951	Identifier	i		3147945	1					
ANR	3147952	IdentifierDecl	j		3147945	1					
ANR	3147953	IdentifierDeclType	int		3147945	0					
ANR	3147954	Identifier	j		3147945	1					
ANR	3147955	IdentifierDecl	k		3147945	2					
ANR	3147956	IdentifierDeclType	int		3147945	0					
ANR	3147957	Identifier	k		3147945	1					
ANR	3147958	IdentifierDeclStatement	int * sked = NULL ;	651:1:14734:14748	3147945	1	True				
ANR	3147959	IdentifierDecl	* sked = NULL		3147945	0					
ANR	3147960	IdentifierDeclType	int *		3147945	0					
ANR	3147961	Identifier	sked		3147945	1					
ANR	3147962	AssignmentExpression	* sked = NULL		3147945	2		=			
ANR	3147963	Identifier	NULL		3147945	0					
ANR	3147964	Identifier	NULL		3147945	1					
ANR	3147965	ExpressionStatement	sked = checkW ( g )	652:1:14751:14765	3147945	2	True				
ANR	3147966	AssignmentExpression	sked = checkW ( g )		3147945	0		=			
ANR	3147967	Identifier	sked		3147945	0					
ANR	3147968	CallExpression	checkW ( g )		3147945	1					
ANR	3147969	Callee	checkW		3147945	0					
ANR	3147970	Identifier	checkW		3147945	0					
ANR	3147971	ArgumentList	g		3147945	1					
ANR	3147972	Argument	g		3147945	0					
ANR	3147973	Identifier	g		3147945	0					
ANR	3147974	IfStatement	if ( sked )		3147945	3					
ANR	3147975	Condition	sked	653:5:14772:14775	3147945	0	True				
ANR	3147976	Identifier	sked		3147945	0					
ANR	3147977	ReturnStatement	return sked ;	653:12:14779:14790	3147945	1	True				
ANR	3147978	Identifier	sked		3147945	0					
ANR	3147979	ExpressionStatement	sked = checkM ( g )	654:1:14793:14807	3147945	4	True				
ANR	3147980	AssignmentExpression	sked = checkM ( g )		3147945	0		=			
ANR	3147981	Identifier	sked		3147945	0					
ANR	3147982	CallExpression	checkM ( g )		3147945	1					
ANR	3147983	Callee	checkM		3147945	0					
ANR	3147984	Identifier	checkM		3147945	0					
ANR	3147985	ArgumentList	g		3147945	1					
ANR	3147986	Argument	g		3147945	0					
ANR	3147987	Identifier	g		3147945	0					
ANR	3147988	IfStatement	if ( sked )		3147945	5					
ANR	3147989	Condition	sked	655:5:14814:14817	3147945	0	True				
ANR	3147990	Identifier	sked		3147945	0					
ANR	3147991	ReturnStatement	return sked ;	655:12:14821:14832	3147945	1	True				
ANR	3147992	Identifier	sked		3147945	0					
ANR	3147993	ExpressionStatement	sked = checkN ( g )	656:1:14835:14849	3147945	6	True				
ANR	3147994	AssignmentExpression	sked = checkN ( g )		3147945	0		=			
ANR	3147995	Identifier	sked		3147945	0					
ANR	3147996	CallExpression	checkN ( g )		3147945	1					
ANR	3147997	Callee	checkN		3147945	0					
ANR	3147998	Identifier	checkN		3147945	0					
ANR	3147999	ArgumentList	g		3147945	1					
ANR	3148000	Argument	g		3147945	0					
ANR	3148001	Identifier	g		3147945	0					
ANR	3148002	IfStatement	if ( sked )		3147945	7					
ANR	3148003	Condition	sked	657:5:14856:14859	3147945	0	True				
ANR	3148004	Identifier	sked		3147945	0					
ANR	3148005	ReturnStatement	return sked ;	657:12:14863:14874	3147945	1	True				
ANR	3148006	Identifier	sked		3147945	0					
ANR	3148007	ExpressionStatement	sked = checkC ( g )	658:1:14877:14891	3147945	8	True				
ANR	3148008	AssignmentExpression	sked = checkC ( g )		3147945	0		=			
ANR	3148009	Identifier	sked		3147945	0					
ANR	3148010	CallExpression	checkC ( g )		3147945	1					
ANR	3148011	Callee	checkC		3147945	0					
ANR	3148012	Identifier	checkC		3147945	0					
ANR	3148013	ArgumentList	g		3147945	1					
ANR	3148014	Argument	g		3147945	0					
ANR	3148015	Identifier	g		3147945	0					
ANR	3148016	IfStatement	if ( sked )		3147945	9					
ANR	3148017	Condition	sked	659:5:14898:14901	3147945	0	True				
ANR	3148018	Identifier	sked		3147945	0					
ANR	3148019	ReturnStatement	return sked ;	659:12:14905:14916	3147945	1	True				
ANR	3148020	Identifier	sked		3147945	0					
ANR	3148021	IdentifierDeclStatement	int * numParents = g . getParentCountVector ( ) ;	668:1:15103:15146	3147945	10	True				
ANR	3148022	IdentifierDecl	* numParents = g . getParentCountVector ( )		3147945	0					
ANR	3148023	IdentifierDeclType	int *		3147945	0					
ANR	3148024	Identifier	numParents		3147945	1					
ANR	3148025	AssignmentExpression	* numParents = g . getParentCountVector ( )		3147945	2		=			
ANR	3148026	Identifier	numParents		3147945	0					
ANR	3148027	CallExpression	g . getParentCountVector ( )		3147945	1					
ANR	3148028	Callee	g . getParentCountVector		3147945	0					
ANR	3148029	MemberAccess	g . getParentCountVector		3147945	0					
ANR	3148030	Identifier	g		3147945	0					
ANR	3148031	Identifier	getParentCountVector		3147945	1					
ANR	3148032	ArgumentList			3147945	1					
ANR	3148033	IfStatement	if ( NULL == numParents )		3147945	11					
ANR	3148034	Condition	NULL == numParents	669:5:15153:15168	3147945	0	True				
ANR	3148035	EqualityExpression	NULL == numParents		3147945	0		==			
ANR	3148036	Identifier	NULL		3147945	0					
ANR	3148037	Identifier	numParents		3147945	1					
ANR	3148038	ThrowStatement	"throw ""ConstituentLibrary::getSchedule, numParents is NULL"" ;"	670:2:15174:15233	3147945	1	True				
ANR	3148039	PrimaryExpression	"""ConstituentLibrary::getSchedule, numParents is NULL"""		3147945	0					
ANR	3148040	IdentifierDeclStatement	int numNodes = g . getNumNodes ( ) ;	673:1:15270:15300	3147945	12	True				
ANR	3148041	IdentifierDecl	numNodes = g . getNumNodes ( )		3147945	0					
ANR	3148042	IdentifierDeclType	int		3147945	0					
ANR	3148043	Identifier	numNodes		3147945	1					
ANR	3148044	AssignmentExpression	numNodes = g . getNumNodes ( )		3147945	2		=			
ANR	3148045	Identifier	numNodes		3147945	0					
ANR	3148046	CallExpression	g . getNumNodes ( )		3147945	1					
ANR	3148047	Callee	g . getNumNodes		3147945	0					
ANR	3148048	MemberAccess	g . getNumNodes		3147945	0					
ANR	3148049	Identifier	g		3147945	0					
ANR	3148050	Identifier	getNumNodes		3147945	1					
ANR	3148051	ArgumentList			3147945	1					
ANR	3148052	IdentifierDeclStatement	int * sigma = new int [ numNodes ] ;	674:1:15303:15334	3147945	13	True				
ANR	3148053	IdentifierDecl	* sigma = new int [ numNodes ]		3147945	0					
ANR	3148054	IdentifierDeclType	int *		3147945	0					
ANR	3148055	Identifier	sigma		3147945	1					
ANR	3148056	AssignmentExpression	* sigma = new int [ numNodes ]		3147945	2		=			
ANR	3148057	Identifier	numNodes		3147945	0					
ANR	3148058	Identifier	numNodes		3147945	1					
ANR	3148059	IfStatement	if ( NULL == sigma )		3147945	14					
ANR	3148060	Condition	NULL == sigma	675:5:15341:15351	3147945	0	True				
ANR	3148061	EqualityExpression	NULL == sigma		3147945	0		==			
ANR	3148062	Identifier	NULL		3147945	0					
ANR	3148063	Identifier	sigma		3147945	1					
ANR	3148064	ThrowStatement	"throw ""ConstituentLibrary::getSchedule, sigma is NULL"" ;"	676:2:15357:15411	3147945	1	True				
ANR	3148065	PrimaryExpression	"""ConstituentLibrary::getSchedule, sigma is NULL"""		3147945	0					
ANR	3148066	IdentifierDeclStatement	int seq ;	680:1:15489:15496	3147945	15	True				
ANR	3148067	IdentifierDecl	seq		3147945	0					
ANR	3148068	IdentifierDeclType	int		3147945	0					
ANR	3148069	Identifier	seq		3147945	1					
ANR	3148070	ForStatement	for ( seq = 0 ; seq < numNodes ; seq ++ )		3147945	16					
ANR	3148071	ForInit	seq = 0 ;	681:6:15504:15509	3147945	0	True				
ANR	3148072	AssignmentExpression	seq = 0		3147945	0		=			
ANR	3148073	Identifier	seq		3147945	0					
ANR	3148074	PrimaryExpression	0		3147945	1					
ANR	3148075	Condition	seq < numNodes	681:13:15511:15522	3147945	1	True				
ANR	3148076	RelationalExpression	seq < numNodes		3147945	0		<			
ANR	3148077	Identifier	seq		3147945	0					
ANR	3148078	Identifier	numNodes		3147945	1					
ANR	3148079	PostIncDecOperationExpression	seq ++	681:27:15525:15529	3147945	2	True				
ANR	3148080	Identifier	seq		3147945	0					
ANR	3148081	IncDec	++		3147945	1					
ANR	3148082	CompoundStatement		51:2:1305:1325	3147945	3					
ANR	3148083	IdentifierDeclStatement	bool found = false ;	684:2:15570:15588	3147945	0	True				
ANR	3148084	IdentifierDecl	found = false		3147945	0					
ANR	3148085	IdentifierDeclType	bool		3147945	0					
ANR	3148086	Identifier	found		3147945	1					
ANR	3148087	AssignmentExpression	found = false		3147945	2		=			
ANR	3148088	Identifier	false		3147945	0					
ANR	3148089	Identifier	false		3147945	1					
ANR	3148090	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3147945	1					
ANR	3148091	ForInit	i = 0 ;	685:7:15597:15600	3147945	0	True				
ANR	3148092	AssignmentExpression	i = 0		3147945	0		=			
ANR	3148093	Identifier	i		3147945	0					
ANR	3148094	PrimaryExpression	0		3147945	1					
ANR	3148095	Condition	i < numNodes	685:12:15602:15611	3147945	1	True				
ANR	3148096	RelationalExpression	i < numNodes		3147945	0		<			
ANR	3148097	Identifier	i		3147945	0					
ANR	3148098	Identifier	numNodes		3147945	1					
ANR	3148099	PostIncDecOperationExpression	i ++	685:24:15614:15616	3147945	2	True				
ANR	3148100	Identifier	i		3147945	0					
ANR	3148101	IncDec	++		3147945	1					
ANR	3148102	CompoundStatement		39:30:986:986	3147945	3					
ANR	3148103	IfStatement	if ( 0 == numParents [ i ] )		3147945	0					
ANR	3148104	Condition	0 == numParents [ i ]	686:7:15629:15644	3147945	0	True				
ANR	3148105	EqualityExpression	0 == numParents [ i ]		3147945	0		==			
ANR	3148106	PrimaryExpression	0		3147945	0					
ANR	3148107	ArrayIndexing	numParents [ i ]		3147945	1					
ANR	3148108	Identifier	numParents		3147945	0					
ANR	3148109	Identifier	i		3147945	1					
ANR	3148110	ExpressionStatement	found = true	687:4:15652:15664	3147945	1	True				
ANR	3148111	AssignmentExpression	found = true		3147945	0		=			
ANR	3148112	Identifier	found		3147945	0					
ANR	3148113	Identifier	true		3147945	1					
ANR	3148114	ExpressionStatement		688:3:15669:15669	3147945	2	True				
ANR	3148115	IfStatement	if ( ! found )		3147945	3					
ANR	3148116	Condition	! found	691:6:15735:15740	3147945	0	True				
ANR	3148117	UnaryOperationExpression	! found		3147945	0					
ANR	3148118	UnaryOperator	!		3147945	0					
ANR	3148119	Identifier	found		3147945	1					
ANR	3148120	ThrowStatement	"throw ""ConstituentLibrary::getSchedule, not found"" ;"	692:3:15747:15797	3147945	1	True				
ANR	3148121	PrimaryExpression	"""ConstituentLibrary::getSchedule, not found"""		3147945	0					
ANR	3148122	IdentifierDeclStatement	int maxNode = - 1 ;	696:2:15919:15935	3147945	4	True				
ANR	3148123	IdentifierDecl	maxNode = - 1		3147945	0					
ANR	3148124	IdentifierDeclType	int		3147945	0					
ANR	3148125	Identifier	maxNode		3147945	1					
ANR	3148126	AssignmentExpression	maxNode = - 1		3147945	2		=			
ANR	3148127	Identifier	maxNode		3147945	0					
ANR	3148128	UnaryOperationExpression	- 1		3147945	1					
ANR	3148129	UnaryOperator	-		3147945	0					
ANR	3148130	PrimaryExpression	1		3147945	1					
ANR	3148131	IdentifierDeclStatement	int maxChildren = - 1 ;	697:2:15939:15959	3147945	5	True				
ANR	3148132	IdentifierDecl	maxChildren = - 1		3147945	0					
ANR	3148133	IdentifierDeclType	int		3147945	0					
ANR	3148134	Identifier	maxChildren		3147945	1					
ANR	3148135	AssignmentExpression	maxChildren = - 1		3147945	2		=			
ANR	3148136	Identifier	maxChildren		3147945	0					
ANR	3148137	UnaryOperationExpression	- 1		3147945	1					
ANR	3148138	UnaryOperator	-		3147945	0					
ANR	3148139	PrimaryExpression	1		3147945	1					
ANR	3148140	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3147945	6					
ANR	3148141	ForInit	i = 0 ;	698:7:15968:15971	3147945	0	True				
ANR	3148142	AssignmentExpression	i = 0		3147945	0		=			
ANR	3148143	Identifier	i		3147945	0					
ANR	3148144	PrimaryExpression	0		3147945	1					
ANR	3148145	Condition	i < numNodes	698:12:15973:15982	3147945	1	True				
ANR	3148146	RelationalExpression	i < numNodes		3147945	0		<			
ANR	3148147	Identifier	i		3147945	0					
ANR	3148148	Identifier	numNodes		3147945	1					
ANR	3148149	PostIncDecOperationExpression	i ++	698:24:15985:15987	3147945	2	True				
ANR	3148150	Identifier	i		3147945	0					
ANR	3148151	IncDec	++		3147945	1					
ANR	3148152	CompoundStatement		52:30:1357:1357	3147945	3					
ANR	3148153	IfStatement	if ( 0 == numParents [ i ] )		3147945	0					
ANR	3148154	Condition	0 == numParents [ i ]	699:7:16000:16015	3147945	0	True				
ANR	3148155	EqualityExpression	0 == numParents [ i ]		3147945	0		==			
ANR	3148156	PrimaryExpression	0		3147945	0					
ANR	3148157	ArrayIndexing	numParents [ i ]		3147945	1					
ANR	3148158	Identifier	numParents		3147945	0					
ANR	3148159	Identifier	i		3147945	1					
ANR	3148160	CompoundStatement		53:26:1385:1385	3147945	1					
ANR	3148161	IfStatement	if ( g . getNumArcs ( i ) > maxChildren )		3147945	0					
ANR	3148162	Condition	g . getNumArcs ( i ) > maxChildren	700:8:16029:16057	3147945	0	True				
ANR	3148163	RelationalExpression	g . getNumArcs ( i ) > maxChildren		3147945	0		>			
ANR	3148164	CallExpression	g . getNumArcs ( i )		3147945	0					
ANR	3148165	Callee	g . getNumArcs		3147945	0					
ANR	3148166	MemberAccess	g . getNumArcs		3147945	0					
ANR	3148167	Identifier	g		3147945	0					
ANR	3148168	Identifier	getNumArcs		3147945	1					
ANR	3148169	ArgumentList	i		3147945	1					
ANR	3148170	Argument	i		3147945	0					
ANR	3148171	Identifier	i		3147945	0					
ANR	3148172	Identifier	maxChildren		3147945	1					
ANR	3148173	CompoundStatement		54:40:1427:1427	3147945	1					
ANR	3148174	ExpressionStatement	maxNode = i	701:5:16068:16079	3147945	0	True				
ANR	3148175	AssignmentExpression	maxNode = i		3147945	0		=			
ANR	3148176	Identifier	maxNode		3147945	0					
ANR	3148177	Identifier	i		3147945	1					
ANR	3148178	ExpressionStatement	maxChildren = g . getNumArcs ( i )	702:5:16086:16115	3147945	1	True				
ANR	3148179	AssignmentExpression	maxChildren = g . getNumArcs ( i )		3147945	0		=			
ANR	3148180	Identifier	maxChildren		3147945	0					
ANR	3148181	CallExpression	g . getNumArcs ( i )		3147945	1					
ANR	3148182	Callee	g . getNumArcs		3147945	0					
ANR	3148183	MemberAccess	g . getNumArcs		3147945	0					
ANR	3148184	Identifier	g		3147945	0					
ANR	3148185	Identifier	getNumArcs		3147945	1					
ANR	3148186	ArgumentList	i		3147945	1					
ANR	3148187	Argument	i		3147945	0					
ANR	3148188	Identifier	i		3147945	0					
ANR	3148189	ExpressionStatement		703:5:16122:16122	3147945	1	True				
ANR	3148190	ExpressionStatement		704:4:16128:16128	3147945	1	True				
ANR	3148191	ExpressionStatement		705:3:16133:16133	3147945	7	True				
ANR	3148192	ExpressionStatement	sigma [ seq ] = maxNode	708:2:16163:16183	3147945	8	True				
ANR	3148193	AssignmentExpression	sigma [ seq ] = maxNode		3147945	0		=			
ANR	3148194	ArrayIndexing	sigma [ seq ]		3147945	0					
ANR	3148195	Identifier	sigma		3147945	0					
ANR	3148196	Identifier	seq		3147945	1					
ANR	3148197	Identifier	maxNode		3147945	1					
ANR	3148198	ExpressionStatement	numParents [ maxNode ] = - 1	711:2:16218:16242	3147945	9	True				
ANR	3148199	AssignmentExpression	numParents [ maxNode ] = - 1		3147945	0		=			
ANR	3148200	ArrayIndexing	numParents [ maxNode ]		3147945	0					
ANR	3148201	Identifier	numParents		3147945	0					
ANR	3148202	Identifier	maxNode		3147945	1					
ANR	3148203	UnaryOperationExpression	- 1		3147945	1					
ANR	3148204	UnaryOperator	-		3147945	0					
ANR	3148205	PrimaryExpression	1		3147945	1					
ANR	3148206	ExpressionStatement	k = g . getNumArcs ( maxNode )	714:2:16279:16304	3147945	10	True				
ANR	3148207	AssignmentExpression	k = g . getNumArcs ( maxNode )		3147945	0		=			
ANR	3148208	Identifier	k		3147945	0					
ANR	3148209	CallExpression	g . getNumArcs ( maxNode )		3147945	1					
ANR	3148210	Callee	g . getNumArcs		3147945	0					
ANR	3148211	MemberAccess	g . getNumArcs		3147945	0					
ANR	3148212	Identifier	g		3147945	0					
ANR	3148213	Identifier	getNumArcs		3147945	1					
ANR	3148214	ArgumentList	maxNode		3147945	1					
ANR	3148215	Argument	maxNode		3147945	0					
ANR	3148216	Identifier	maxNode		3147945	0					
ANR	3148217	ForStatement	for ( j = 0 ; j < k ; j ++ )		3147945	11					
ANR	3148218	ForInit	j = 0 ;	715:7:16313:16316	3147945	0	True				
ANR	3148219	AssignmentExpression	j = 0		3147945	0		=			
ANR	3148220	Identifier	j		3147945	0					
ANR	3148221	PrimaryExpression	0		3147945	1					
ANR	3148222	Condition	j < k	715:12:16318:16320	3147945	1	True				
ANR	3148223	RelationalExpression	j < k		3147945	0		<			
ANR	3148224	Identifier	j		3147945	0					
ANR	3148225	Identifier	k		3147945	1					
ANR	3148226	PostIncDecOperationExpression	j ++	715:17:16323:16325	3147945	2	True				
ANR	3148227	Identifier	j		3147945	0					
ANR	3148228	IncDec	++		3147945	1					
ANR	3148229	ExpressionStatement	"numParents [ g . getArc ( maxNode , j ) ] --"	716:3:16332:16368	3147945	3	True				
ANR	3148230	PostIncDecOperationExpression	"numParents [ g . getArc ( maxNode , j ) ] --"		3147945	0					
ANR	3148231	ArrayIndexing	"numParents [ g . getArc ( maxNode , j ) ]"		3147945	0					
ANR	3148232	Identifier	numParents		3147945	0					
ANR	3148233	CallExpression	"g . getArc ( maxNode , j )"		3147945	1					
ANR	3148234	Callee	g . getArc		3147945	0					
ANR	3148235	MemberAccess	g . getArc		3147945	0					
ANR	3148236	Identifier	g		3147945	0					
ANR	3148237	Identifier	getArc		3147945	1					
ANR	3148238	ArgumentList	maxNode		3147945	1					
ANR	3148239	Argument	maxNode		3147945	0					
ANR	3148240	Identifier	maxNode		3147945	0					
ANR	3148241	Argument	j		3147945	1					
ANR	3148242	Identifier	j		3147945	0					
ANR	3148243	IncDec	--		3147945	1					
ANR	3148244	ExpressionStatement		718:2:16373:16373	3147945	17	True				
ANR	3148245	Statement	delete	721:1:16402:16407	3147945	18	True				
ANR	3148246	Statement	[	721:7:16408:16408	3147945	19	True				
ANR	3148247	Statement	]	721:8:16409:16409	3147945	20	True				
ANR	3148248	ExpressionStatement	numParents	721:10:16411:16421	3147945	21	True				
ANR	3148249	Identifier	numParents		3147945	0					
ANR	3148250	ExpressionStatement	"printf ( ""Schedule: "" )"	724:0:16439:16459	3147945	22	True				
ANR	3148251	CallExpression	"printf ( ""Schedule: "" )"		3147945	0					
ANR	3148252	Callee	printf		3147945	0					
ANR	3148253	Identifier	printf		3147945	0					
ANR	3148254	ArgumentList	"""Schedule: """		3147945	1					
ANR	3148255	Argument	"""Schedule: """		3147945	0					
ANR	3148256	PrimaryExpression	"""Schedule: """		3147945	0					
ANR	3148257	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3147945	23					
ANR	3148258	ForInit	i = 0 ;	725:5:16466:16469	3147945	0	True				
ANR	3148259	AssignmentExpression	i = 0		3147945	0		=			
ANR	3148260	Identifier	i		3147945	0					
ANR	3148261	PrimaryExpression	0		3147945	1					
ANR	3148262	Condition	i < numNodes	725:10:16471:16480	3147945	1	True				
ANR	3148263	RelationalExpression	i < numNodes		3147945	0		<			
ANR	3148264	Identifier	i		3147945	0					
ANR	3148265	Identifier	numNodes		3147945	1					
ANR	3148266	PostIncDecOperationExpression	i ++	725:22:16483:16485	3147945	2	True				
ANR	3148267	Identifier	i		3147945	0					
ANR	3148268	IncDec	++		3147945	1					
ANR	3148269	ExpressionStatement	"printf ( ""%d "" , sigma [ i ] )"	726:1:16490:16514	3147945	3	True				
ANR	3148270	CallExpression	"printf ( ""%d "" , sigma [ i ] )"		3147945	0					
ANR	3148271	Callee	printf		3147945	0					
ANR	3148272	Identifier	printf		3147945	0					
ANR	3148273	ArgumentList	"""%d """		3147945	1					
ANR	3148274	Argument	"""%d """		3147945	0					
ANR	3148275	PrimaryExpression	"""%d """		3147945	0					
ANR	3148276	Argument	sigma [ i ]		3147945	1					
ANR	3148277	ArrayIndexing	sigma [ i ]		3147945	0					
ANR	3148278	Identifier	sigma		3147945	0					
ANR	3148279	Identifier	i		3147945	1					
ANR	3148280	ExpressionStatement	"printf ( ""\\n"" )"	727:0:16516:16528	3147945	24	True				
ANR	3148281	CallExpression	"printf ( ""\\n"" )"		3147945	0					
ANR	3148282	Callee	printf		3147945	0					
ANR	3148283	Identifier	printf		3147945	0					
ANR	3148284	ArgumentList	"""\\n"""		3147945	1					
ANR	3148285	Argument	"""\\n"""		3147945	0					
ANR	3148286	PrimaryExpression	"""\\n"""		3147945	0					
ANR	3148287	ReturnStatement	return sigma ;	730:1:16539:16551	3147945	25	True				
ANR	3148288	Identifier	sigma		3147945	0					
ANR	3148289	ReturnType	int *		3147945	1					
ANR	3148290	Identifier	ConstituentLibrary :: getSchedule		3147945	2					
ANR	3148291	ParameterList	const Dag & g		3147945	3					
ANR	3148292	Parameter	const Dag & g	646:38:14619:14630	3147945	0	True				
ANR	3148293	ParameterType	const Dag &		3147945	0					
ANR	3148294	Identifier	g		3147945	1					
ANR	3148295	CFGEntryNode	ENTRY		3147945		True				
ANR	3148296	CFGExitNode	EXIT		3147945		True				
ANR	3148297	CFGExceptionNode	EXCEPTION		3147945		True				
ANR	3148298	CFGExceptionNode	EXCEPTION		3147945		True				
ANR	3148299	CFGExceptionNode	EXCEPTION		3147945		True				
ANR	3148300	CFGExceptionNode	EXCEPTION		3147945		True				
ANR	3148301	CFGExceptionNode	EXCEPTION		3147945		True				
ANR	3148302	Symbol	sked		3147945						
ANR	3148303	Symbol	g . getNumNodes		3147945						
ANR	3148304	Symbol	g . getNumArcs		3147945						
ANR	3148305	Symbol	* numParents		3147945						
ANR	3148306	Symbol	* g . getArc		3147945						
ANR	3148307	Symbol	numParents		3147945						
ANR	3148308	Symbol	g . getArc		3147945						
ANR	3148309	Symbol	* seq		3147945						
ANR	3148310	Symbol	* sigma		3147945						
ANR	3148311	Symbol	maxNode		3147945						
ANR	3148312	Symbol	maxChildren		3147945						
ANR	3148313	Symbol	found		3147945						
ANR	3148314	Symbol	checkW		3147945						
ANR	3148315	Symbol	checkM		3147945						
ANR	3148316	Symbol	checkN		3147945						
ANR	3148317	Symbol	seq		3147945						
ANR	3148318	Symbol	sigma		3147945						
ANR	3148319	Symbol	NULL		3147945						
ANR	3148320	Symbol	checkC		3147945						
ANR	3148321	Symbol	g		3147945						
ANR	3148322	Symbol	false		3147945						
ANR	3148323	Symbol	i		3147945						
ANR	3148324	Symbol	j		3147945						
ANR	3148325	Symbol	k		3147945						
ANR	3148326	Symbol	g . getParentCountVector		3147945						
ANR	3148327	Symbol	* g		3147945						
ANR	3148328	Symbol	numNodes		3147945						
ANR	3148329	Symbol	* i		3147945						
ANR	3148330	Symbol	true		3147945						
ANR	3148331	Symbol	* maxNode		3147945						
ANR	3148332	Function	ConstituentLibrary :: getPriority	749:0:16877:17473							
ANR	3148333	FunctionDef	"ConstituentLibrary :: getPriority (const int * eligPlot1 , int nonSink1 , const int * eligPlot2 , int nonSink2)"		3148332	0					
ANR	3148334	CompoundStatement		751:0:17000:17473	3148332	0					
ANR	3148335	IdentifierDeclStatement	"int a , b ;"	752:1:17003:17011	3148332	0	True				
ANR	3148336	IdentifierDecl	a		3148332	0					
ANR	3148337	IdentifierDeclType	int		3148332	0					
ANR	3148338	Identifier	a		3148332	1					
ANR	3148339	IdentifierDecl	b		3148332	1					
ANR	3148340	IdentifierDeclType	int		3148332	0					
ANR	3148341	Identifier	b		3148332	1					
ANR	3148342	IdentifierDeclStatement	"int x , y ;"	753:1:17014:17021	3148332	1	True				
ANR	3148343	IdentifierDecl	x		3148332	0					
ANR	3148344	IdentifierDeclType	int		3148332	0					
ANR	3148345	Identifier	x		3148332	1					
ANR	3148346	IdentifierDecl	y		3148332	1					
ANR	3148347	IdentifierDeclType	int		3148332	0					
ANR	3148348	Identifier	y		3148332	1					
ANR	3148349	IdentifierDeclStatement	float c = 1.0f ;	755:1:17025:17039	3148332	2	True				
ANR	3148350	IdentifierDecl	c = 1.0f		3148332	0					
ANR	3148351	IdentifierDeclType	float		3148332	0					
ANR	3148352	Identifier	c		3148332	1					
ANR	3148353	AssignmentExpression	c = 1.0f		3148332	2		=			
ANR	3148354	Identifier	c		3148332	0					
ANR	3148355	PrimaryExpression	1.0f		3148332	1					
ANR	3148356	ForStatement	for ( x = 0 ; x <= nonSink1 ; x ++ )		3148332	3					
ANR	3148357	ForInit	x = 0 ;	756:6:17047:17050	3148332	0	True				
ANR	3148358	AssignmentExpression	x = 0		3148332	0		=			
ANR	3148359	Identifier	x		3148332	0					
ANR	3148360	PrimaryExpression	0		3148332	1					
ANR	3148361	Condition	x <= nonSink1	756:11:17052:17062	3148332	1	True				
ANR	3148362	RelationalExpression	x <= nonSink1		3148332	0		<=			
ANR	3148363	Identifier	x		3148332	0					
ANR	3148364	Identifier	nonSink1		3148332	1					
ANR	3148365	PostIncDecOperationExpression	x ++	756:24:17065:17067	3148332	2	True				
ANR	3148366	Identifier	x		3148332	0					
ANR	3148367	IncDec	++		3148332	1					
ANR	3148368	CompoundStatement		6:30:70:70	3148332	3					
ANR	3148369	ForStatement	for ( y = 0 ; y <= nonSink2 ; y ++ )		3148332	0					
ANR	3148370	ForInit	y = 0 ;	757:7:17080:17083	3148332	0	True				
ANR	3148371	AssignmentExpression	y = 0		3148332	0		=			
ANR	3148372	Identifier	y		3148332	0					
ANR	3148373	PrimaryExpression	0		3148332	1					
ANR	3148374	Condition	y <= nonSink2	757:12:17085:17095	3148332	1	True				
ANR	3148375	RelationalExpression	y <= nonSink2		3148332	0		<=			
ANR	3148376	Identifier	y		3148332	0					
ANR	3148377	Identifier	nonSink2		3148332	1					
ANR	3148378	PostIncDecOperationExpression	y ++	757:25:17098:17100	3148332	2	True				
ANR	3148379	Identifier	y		3148332	0					
ANR	3148380	IncDec	++		3148332	1					
ANR	3148381	CompoundStatement		7:31:103:103	3148332	3					
ANR	3148382	ExpressionStatement	"a = min ( x + y , nonSink1 )"	759:3:17110:17131	3148332	0	True				
ANR	3148383	AssignmentExpression	"a = min ( x + y , nonSink1 )"		3148332	0		=			
ANR	3148384	Identifier	a		3148332	0					
ANR	3148385	CallExpression	"min ( x + y , nonSink1 )"		3148332	1					
ANR	3148386	Callee	min		3148332	0					
ANR	3148387	Identifier	min		3148332	0					
ANR	3148388	ArgumentList	x + y		3148332	1					
ANR	3148389	Argument	x + y		3148332	0					
ANR	3148390	AdditiveExpression	x + y		3148332	0		+			
ANR	3148391	Identifier	x		3148332	0					
ANR	3148392	Identifier	y		3148332	1					
ANR	3148393	Argument	nonSink1		3148332	1					
ANR	3148394	Identifier	nonSink1		3148332	0					
ANR	3148395	ExpressionStatement	b = x + y - a	760:3:17136:17147	3148332	1	True				
ANR	3148396	AssignmentExpression	b = x + y - a		3148332	0		=			
ANR	3148397	Identifier	b		3148332	0					
ANR	3148398	AdditiveExpression	x + y - a		3148332	1		+			
ANR	3148399	Identifier	x		3148332	0					
ANR	3148400	AdditiveExpression	y - a		3148332	1		-			
ANR	3148401	Identifier	y		3148332	0					
ANR	3148402	Identifier	a		3148332	1					
ANR	3148403	IfStatement	if ( c * ( eligPlot1 [ x ] + eligPlot2 [ y ] ) > eligPlot1 [ a ] + eligPlot2 [ b ] )		3148332	2					
ANR	3148404	Condition	c * ( eligPlot1 [ x ] + eligPlot2 [ y ] ) > eligPlot1 [ a ] + eligPlot2 [ b ]	762:7:17157:17219	3148332	0	True				
ANR	3148405	RelationalExpression	c * ( eligPlot1 [ x ] + eligPlot2 [ y ] ) > eligPlot1 [ a ] + eligPlot2 [ b ]		3148332	0		>			
ANR	3148406	MultiplicativeExpression	c * ( eligPlot1 [ x ] + eligPlot2 [ y ] )		3148332	0		*			
ANR	3148407	Identifier	c		3148332	0					
ANR	3148408	AdditiveExpression	eligPlot1 [ x ] + eligPlot2 [ y ]		3148332	1		+			
ANR	3148409	ArrayIndexing	eligPlot1 [ x ]		3148332	0					
ANR	3148410	Identifier	eligPlot1		3148332	0					
ANR	3148411	Identifier	x		3148332	1					
ANR	3148412	ArrayIndexing	eligPlot2 [ y ]		3148332	1					
ANR	3148413	Identifier	eligPlot2		3148332	0					
ANR	3148414	Identifier	y		3148332	1					
ANR	3148415	AdditiveExpression	eligPlot1 [ a ] + eligPlot2 [ b ]		3148332	1		+			
ANR	3148416	ArrayIndexing	eligPlot1 [ a ]		3148332	0					
ANR	3148417	Identifier	eligPlot1		3148332	0					
ANR	3148418	Identifier	a		3148332	1					
ANR	3148419	ArrayIndexing	eligPlot2 [ b ]		3148332	1					
ANR	3148420	Identifier	eligPlot2		3148332	0					
ANR	3148421	Identifier	b		3148332	1					
ANR	3148422	CompoundStatement		12:73:222:222	3148332	1					
ANR	3148423	ExpressionStatement	c = ( float ) ( eligPlot1 [ a ] + eligPlot2 [ b ] ) / ( float ) ( eligPlot1 [ x ] + eligPlot2 [ y ] )	765:4:17312:17391	3148332	0	True				
ANR	3148424	AssignmentExpression	c = ( float ) ( eligPlot1 [ a ] + eligPlot2 [ b ] ) / ( float ) ( eligPlot1 [ x ] + eligPlot2 [ y ] )		3148332	0		=			
ANR	3148425	Identifier	c		3148332	0					
ANR	3148426	MultiplicativeExpression	( float ) ( eligPlot1 [ a ] + eligPlot2 [ b ] ) / ( float ) ( eligPlot1 [ x ] + eligPlot2 [ y ] )		3148332	1		/			
ANR	3148427	CastExpression	( float ) ( eligPlot1 [ a ] + eligPlot2 [ b ] )		3148332	0					
ANR	3148428	CastTarget	float		3148332	0					
ANR	3148429	AdditiveExpression	eligPlot1 [ a ] + eligPlot2 [ b ]		3148332	1		+			
ANR	3148430	ArrayIndexing	eligPlot1 [ a ]		3148332	0					
ANR	3148431	Identifier	eligPlot1		3148332	0					
ANR	3148432	Identifier	a		3148332	1					
ANR	3148433	ArrayIndexing	eligPlot2 [ b ]		3148332	1					
ANR	3148434	Identifier	eligPlot2		3148332	0					
ANR	3148435	Identifier	b		3148332	1					
ANR	3148436	CastExpression	( float ) ( eligPlot1 [ x ] + eligPlot2 [ y ] )		3148332	1					
ANR	3148437	CastTarget	float		3148332	0					
ANR	3148438	AdditiveExpression	eligPlot1 [ x ] + eligPlot2 [ y ]		3148332	1		+			
ANR	3148439	ArrayIndexing	eligPlot1 [ x ]		3148332	0					
ANR	3148440	Identifier	eligPlot1		3148332	0					
ANR	3148441	Identifier	x		3148332	1					
ANR	3148442	ArrayIndexing	eligPlot2 [ y ]		3148332	1					
ANR	3148443	Identifier	eligPlot2		3148332	0					
ANR	3148444	Identifier	y		3148332	1					
ANR	3148445	ExpressionStatement		766:4:17397:17397	3148332	3	True				
ANR	3148446	ExpressionStatement		768:3:17403:17403	3148332	1	True				
ANR	3148447	ExpressionStatement		769:2:17407:17407	3148332	4	True				
ANR	3148448	ExpressionStatement	"printf ( ""--priority %f\\n"" , c )"	772:0:17425:17452	3148332	5	True				
ANR	3148449	CallExpression	"printf ( ""--priority %f\\n"" , c )"		3148332	0					
ANR	3148450	Callee	printf		3148332	0					
ANR	3148451	Identifier	printf		3148332	0					
ANR	3148452	ArgumentList	"""--priority %f\\n"""		3148332	1					
ANR	3148453	Argument	"""--priority %f\\n"""		3148332	0					
ANR	3148454	PrimaryExpression	"""--priority %f\\n"""		3148332	0					
ANR	3148455	Argument	c		3148332	1					
ANR	3148456	Identifier	c		3148332	0					
ANR	3148457	ReturnStatement	return c ;	775:1:17463:17471	3148332	6	True				
ANR	3148458	Identifier	c		3148332	0					
ANR	3148459	ReturnType	float		3148332	1					
ANR	3148460	Identifier	ConstituentLibrary :: getPriority		3148332	2					
ANR	3148461	ParameterList	"const int * eligPlot1 , int nonSink1 , const int * eligPlot2 , int nonSink2"		3148332	3					
ANR	3148462	Parameter	const int * eligPlot1	749:39:16916:16935	3148332	0	True				
ANR	3148463	ParameterType	const int *		3148332	0					
ANR	3148464	Identifier	eligPlot1		3148332	1					
ANR	3148465	Parameter	int nonSink1	749:61:16938:16949	3148332	1	True				
ANR	3148466	ParameterType	int		3148332	0					
ANR	3148467	Identifier	nonSink1		3148332	1					
ANR	3148468	Parameter	const int * eligPlot2	750:10:16963:16982	3148332	2	True				
ANR	3148469	ParameterType	const int *		3148332	0					
ANR	3148470	Identifier	eligPlot2		3148332	1					
ANR	3148471	Parameter	int nonSink2	750:32:16985:16996	3148332	3	True				
ANR	3148472	ParameterType	int		3148332	0					
ANR	3148473	Identifier	nonSink2		3148332	1					
ANR	3148474	CFGEntryNode	ENTRY		3148332		True				
ANR	3148475	CFGExitNode	EXIT		3148332		True				
ANR	3148476	Symbol	eligPlot1		3148332						
ANR	3148477	Symbol	a		3148332						
ANR	3148478	Symbol	b		3148332						
ANR	3148479	Symbol	* x		3148332						
ANR	3148480	Symbol	c		3148332						
ANR	3148481	Symbol	* y		3148332						
ANR	3148482	Symbol	eligPlot2		3148332						
ANR	3148483	Symbol	* eligPlot1		3148332						
ANR	3148484	Symbol	* a		3148332						
ANR	3148485	Symbol	* eligPlot2		3148332						
ANR	3148486	Symbol	* b		3148332						
ANR	3148487	Symbol	min		3148332						
ANR	3148488	Symbol	x		3148332						
ANR	3148489	Symbol	y		3148332						
ANR	3148490	Symbol	nonSink1		3148332						
ANR	3148491	Symbol	nonSink2		3148332						
ANR	3148492	Function	ConstituentLibrary_test_checkN	792:0:17627:18380							
ANR	3148493	FunctionDef	ConstituentLibrary_test_checkN ()		3148492	0					
ANR	3148494	CompoundStatement		793:0:17669:18380	3148492	0					
ANR	3148495	IdentifierDeclStatement	ConstituentLibrary lib ;	794:1:17672:17694	3148492	0	True				
ANR	3148496	IdentifierDecl	lib		3148492	0					
ANR	3148497	IdentifierDeclType	ConstituentLibrary		3148492	0					
ANR	3148498	Identifier	lib		3148492	1					
ANR	3148499	CompoundStatement		8:2:144:169	3148492	1					
ANR	3148500	ExpressionStatement	"printf ( ""*** file checkN.dag should be an N-dag\\n"" )"	797:2:17702:17752	3148492	0	True				
ANR	3148501	CallExpression	"printf ( ""*** file checkN.dag should be an N-dag\\n"" )"		3148492	0					
ANR	3148502	Callee	printf		3148492	0					
ANR	3148503	Identifier	printf		3148492	0					
ANR	3148504	ArgumentList	"""*** file checkN.dag should be an N-dag\\n"""		3148492	1					
ANR	3148505	Argument	"""*** file checkN.dag should be an N-dag\\n"""		3148492	0					
ANR	3148506	PrimaryExpression	"""*** file checkN.dag should be an N-dag\\n"""		3148492	0					
ANR	3148507	IdentifierDeclStatement	"DagmanDag g ( ""checkN.dag"" ) ;"	798:2:17756:17781	3148492	1	True				
ANR	3148508	IdentifierDecl	"g ( ""checkN.dag"" )"		3148492	0					
ANR	3148509	IdentifierDeclType	DagmanDag		3148492	0					
ANR	3148510	Identifier	g		3148492	1					
ANR	3148511	PrimaryExpression	"""checkN.dag"""		3148492	2					
ANR	3148512	ExpressionStatement	"g . saveAsDot ( ""checkN.dot"" )"	799:2:17785:17810	3148492	2	True				
ANR	3148513	CallExpression	"g . saveAsDot ( ""checkN.dot"" )"		3148492	0					
ANR	3148514	Callee	g . saveAsDot		3148492	0					
ANR	3148515	MemberAccess	g . saveAsDot		3148492	0					
ANR	3148516	Identifier	g		3148492	0					
ANR	3148517	Identifier	saveAsDot		3148492	1					
ANR	3148518	ArgumentList	"""checkN.dot"""		3148492	1					
ANR	3148519	Argument	"""checkN.dot"""		3148492	0					
ANR	3148520	PrimaryExpression	"""checkN.dot"""		3148492	0					
ANR	3148521	IdentifierDeclStatement	int * sked = lib . checkN ( g ) ;	800:2:17814:17839	3148492	3	True				
ANR	3148522	IdentifierDecl	* sked = lib . checkN ( g )		3148492	0					
ANR	3148523	IdentifierDeclType	int *		3148492	0					
ANR	3148524	Identifier	sked		3148492	1					
ANR	3148525	AssignmentExpression	* sked = lib . checkN ( g )		3148492	2		=			
ANR	3148526	Identifier	sked		3148492	0					
ANR	3148527	CallExpression	lib . checkN ( g )		3148492	1					
ANR	3148528	Callee	lib . checkN		3148492	0					
ANR	3148529	MemberAccess	lib . checkN		3148492	0					
ANR	3148530	Identifier	lib		3148492	0					
ANR	3148531	Identifier	checkN		3148492	1					
ANR	3148532	ArgumentList	g		3148492	1					
ANR	3148533	Argument	g		3148492	0					
ANR	3148534	Identifier	g		3148492	0					
ANR	3148535	IfStatement	if ( sked )		3148492	4					
ANR	3148536	Condition	sked	801:6:17847:17850	3148492	0	True				
ANR	3148537	Identifier	sked		3148492	0					
ANR	3148538	CompoundStatement		9:13:184:184	3148492	1					
ANR	3148539	ExpressionStatement	"printf ( ""an N-dag, schedule is:\\n"" )"	802:3:17859:17893	3148492	0	True				
ANR	3148540	CallExpression	"printf ( ""an N-dag, schedule is:\\n"" )"		3148492	0					
ANR	3148541	Callee	printf		3148492	0					
ANR	3148542	Identifier	printf		3148492	0					
ANR	3148543	ArgumentList	"""an N-dag, schedule is:\\n"""		3148492	1					
ANR	3148544	Argument	"""an N-dag, schedule is:\\n"""		3148492	0					
ANR	3148545	PrimaryExpression	"""an N-dag, schedule is:\\n"""		3148492	0					
ANR	3148546	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3148492	1					
ANR	3148547	ForInit	int i = 0 ;	803:8:17903:17910	3148492	0	True				
ANR	3148548	IdentifierDeclStatement	int i = 0 ;		3148492	0					
ANR	3148549	IdentifierDecl	i = 0		3148492	0					
ANR	3148550	IdentifierDeclType	int		3148492	0					
ANR	3148551	Identifier	i		3148492	1					
ANR	3148552	AssignmentExpression	i = 0		3148492	2		=			
ANR	3148553	Identifier	i		3148492	0					
ANR	3148554	PrimaryExpression	0		3148492	1					
ANR	3148555	Condition	i < g . getNumNodes ( )	803:17:17912:17928	3148492	1	True				
ANR	3148556	RelationalExpression	i < g . getNumNodes ( )		3148492	0		<			
ANR	3148557	Identifier	i		3148492	0					
ANR	3148558	CallExpression	g . getNumNodes ( )		3148492	1					
ANR	3148559	Callee	g . getNumNodes		3148492	0					
ANR	3148560	MemberAccess	g . getNumNodes		3148492	0					
ANR	3148561	Identifier	g		3148492	0					
ANR	3148562	Identifier	getNumNodes		3148492	1					
ANR	3148563	ArgumentList			3148492	1					
ANR	3148564	PostIncDecOperationExpression	i ++	803:36:17931:17933	3148492	2	True				
ANR	3148565	Identifier	i		3148492	0					
ANR	3148566	IncDec	++		3148492	1					
ANR	3148567	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	804:4:17941:17964	3148492	3	True				
ANR	3148568	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3148492	0					
ANR	3148569	Callee	printf		3148492	0					
ANR	3148570	Identifier	printf		3148492	0					
ANR	3148571	ArgumentList	"""%d """		3148492	1					
ANR	3148572	Argument	"""%d """		3148492	0					
ANR	3148573	PrimaryExpression	"""%d """		3148492	0					
ANR	3148574	Argument	sked [ i ]		3148492	1					
ANR	3148575	ArrayIndexing	sked [ i ]		3148492	0					
ANR	3148576	Identifier	sked		3148492	0					
ANR	3148577	Identifier	i		3148492	1					
ANR	3148578	ExpressionStatement	"printf ( ""\\n"" )"	805:3:17969:17981	3148492	2	True				
ANR	3148579	CallExpression	"printf ( ""\\n"" )"		3148492	0					
ANR	3148580	Callee	printf		3148492	0					
ANR	3148581	Identifier	printf		3148492	0					
ANR	3148582	ArgumentList	"""\\n"""		3148492	1					
ANR	3148583	Argument	"""\\n"""		3148492	0					
ANR	3148584	PrimaryExpression	"""\\n"""		3148492	0					
ANR	3148585	ElseStatement	else		3148492	0					
ANR	3148586	CompoundStatement		15:7:324:324	3148492	0					
ANR	3148587	ExpressionStatement	"printf ( ""not an N-dag\\n"" )"	808:3:17999:18023	3148492	0	True				
ANR	3148588	CallExpression	"printf ( ""not an N-dag\\n"" )"		3148492	0					
ANR	3148589	Callee	printf		3148492	0					
ANR	3148590	Identifier	printf		3148492	0					
ANR	3148591	ArgumentList	"""not an N-dag\\n"""		3148492	1					
ANR	3148592	Argument	"""not an N-dag\\n"""		3148492	0					
ANR	3148593	PrimaryExpression	"""not an N-dag\\n"""		3148492	0					
ANR	3148594	ExpressionStatement		809:3:18028:18028	3148492	5	True				
ANR	3148595	CompoundStatement		24:2:491:516	3148492	2					
ANR	3148596	ExpressionStatement	"printf ( ""*** file checkN_2.dag should NOT be an N-dag\\n"" )"	813:2:18039:18095	3148492	0	True				
ANR	3148597	CallExpression	"printf ( ""*** file checkN_2.dag should NOT be an N-dag\\n"" )"		3148492	0					
ANR	3148598	Callee	printf		3148492	0					
ANR	3148599	Identifier	printf		3148492	0					
ANR	3148600	ArgumentList	"""*** file checkN_2.dag should NOT be an N-dag\\n"""		3148492	1					
ANR	3148601	Argument	"""*** file checkN_2.dag should NOT be an N-dag\\n"""		3148492	0					
ANR	3148602	PrimaryExpression	"""*** file checkN_2.dag should NOT be an N-dag\\n"""		3148492	0					
ANR	3148603	IdentifierDeclStatement	"DagmanDag g ( ""checkN_2.dag"" ) ;"	814:2:18099:18126	3148492	1	True				
ANR	3148604	IdentifierDecl	"g ( ""checkN_2.dag"" )"		3148492	0					
ANR	3148605	IdentifierDeclType	DagmanDag		3148492	0					
ANR	3148606	Identifier	g		3148492	1					
ANR	3148607	PrimaryExpression	"""checkN_2.dag"""		3148492	2					
ANR	3148608	ExpressionStatement	"g . saveAsDot ( ""checkN_2.dot"" )"	815:2:18130:18157	3148492	2	True				
ANR	3148609	CallExpression	"g . saveAsDot ( ""checkN_2.dot"" )"		3148492	0					
ANR	3148610	Callee	g . saveAsDot		3148492	0					
ANR	3148611	MemberAccess	g . saveAsDot		3148492	0					
ANR	3148612	Identifier	g		3148492	0					
ANR	3148613	Identifier	saveAsDot		3148492	1					
ANR	3148614	ArgumentList	"""checkN_2.dot"""		3148492	1					
ANR	3148615	Argument	"""checkN_2.dot"""		3148492	0					
ANR	3148616	PrimaryExpression	"""checkN_2.dot"""		3148492	0					
ANR	3148617	IdentifierDeclStatement	int * sked = lib . checkN ( g ) ;	816:2:18161:18186	3148492	3	True				
ANR	3148618	IdentifierDecl	* sked = lib . checkN ( g )		3148492	0					
ANR	3148619	IdentifierDeclType	int *		3148492	0					
ANR	3148620	Identifier	sked		3148492	1					
ANR	3148621	AssignmentExpression	* sked = lib . checkN ( g )		3148492	2		=			
ANR	3148622	Identifier	sked		3148492	0					
ANR	3148623	CallExpression	lib . checkN ( g )		3148492	1					
ANR	3148624	Callee	lib . checkN		3148492	0					
ANR	3148625	MemberAccess	lib . checkN		3148492	0					
ANR	3148626	Identifier	lib		3148492	0					
ANR	3148627	Identifier	checkN		3148492	1					
ANR	3148628	ArgumentList	g		3148492	1					
ANR	3148629	Argument	g		3148492	0					
ANR	3148630	Identifier	g		3148492	0					
ANR	3148631	IfStatement	if ( sked )		3148492	4					
ANR	3148632	Condition	sked	817:6:18194:18197	3148492	0	True				
ANR	3148633	Identifier	sked		3148492	0					
ANR	3148634	CompoundStatement		25:13:531:531	3148492	1					
ANR	3148635	ExpressionStatement	"printf ( ""an N-dag, schedule is:\\n"" )"	818:3:18206:18240	3148492	0	True				
ANR	3148636	CallExpression	"printf ( ""an N-dag, schedule is:\\n"" )"		3148492	0					
ANR	3148637	Callee	printf		3148492	0					
ANR	3148638	Identifier	printf		3148492	0					
ANR	3148639	ArgumentList	"""an N-dag, schedule is:\\n"""		3148492	1					
ANR	3148640	Argument	"""an N-dag, schedule is:\\n"""		3148492	0					
ANR	3148641	PrimaryExpression	"""an N-dag, schedule is:\\n"""		3148492	0					
ANR	3148642	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3148492	1					
ANR	3148643	ForInit	int i = 0 ;	819:8:18250:18257	3148492	0	True				
ANR	3148644	IdentifierDeclStatement	int i = 0 ;		3148492	0					
ANR	3148645	IdentifierDecl	i = 0		3148492	0					
ANR	3148646	IdentifierDeclType	int		3148492	0					
ANR	3148647	Identifier	i		3148492	1					
ANR	3148648	AssignmentExpression	i = 0		3148492	2		=			
ANR	3148649	Identifier	i		3148492	0					
ANR	3148650	PrimaryExpression	0		3148492	1					
ANR	3148651	Condition	i < g . getNumNodes ( )	819:17:18259:18275	3148492	1	True				
ANR	3148652	RelationalExpression	i < g . getNumNodes ( )		3148492	0		<			
ANR	3148653	Identifier	i		3148492	0					
ANR	3148654	CallExpression	g . getNumNodes ( )		3148492	1					
ANR	3148655	Callee	g . getNumNodes		3148492	0					
ANR	3148656	MemberAccess	g . getNumNodes		3148492	0					
ANR	3148657	Identifier	g		3148492	0					
ANR	3148658	Identifier	getNumNodes		3148492	1					
ANR	3148659	ArgumentList			3148492	1					
ANR	3148660	PostIncDecOperationExpression	i ++	819:36:18278:18280	3148492	2	True				
ANR	3148661	Identifier	i		3148492	0					
ANR	3148662	IncDec	++		3148492	1					
ANR	3148663	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	820:4:18288:18311	3148492	3	True				
ANR	3148664	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3148492	0					
ANR	3148665	Callee	printf		3148492	0					
ANR	3148666	Identifier	printf		3148492	0					
ANR	3148667	ArgumentList	"""%d """		3148492	1					
ANR	3148668	Argument	"""%d """		3148492	0					
ANR	3148669	PrimaryExpression	"""%d """		3148492	0					
ANR	3148670	Argument	sked [ i ]		3148492	1					
ANR	3148671	ArrayIndexing	sked [ i ]		3148492	0					
ANR	3148672	Identifier	sked		3148492	0					
ANR	3148673	Identifier	i		3148492	1					
ANR	3148674	ExpressionStatement	"printf ( ""\\n"" )"	821:3:18316:18328	3148492	2	True				
ANR	3148675	CallExpression	"printf ( ""\\n"" )"		3148492	0					
ANR	3148676	Callee	printf		3148492	0					
ANR	3148677	Identifier	printf		3148492	0					
ANR	3148678	ArgumentList	"""\\n"""		3148492	1					
ANR	3148679	Argument	"""\\n"""		3148492	0					
ANR	3148680	PrimaryExpression	"""\\n"""		3148492	0					
ANR	3148681	ElseStatement	else		3148492	0					
ANR	3148682	CompoundStatement		31:7:671:671	3148492	0					
ANR	3148683	ExpressionStatement	"printf ( ""not an N-dag\\n"" )"	824:3:18346:18370	3148492	0	True				
ANR	3148684	CallExpression	"printf ( ""not an N-dag\\n"" )"		3148492	0					
ANR	3148685	Callee	printf		3148492	0					
ANR	3148686	Identifier	printf		3148492	0					
ANR	3148687	ArgumentList	"""not an N-dag\\n"""		3148492	1					
ANR	3148688	Argument	"""not an N-dag\\n"""		3148492	0					
ANR	3148689	PrimaryExpression	"""not an N-dag\\n"""		3148492	0					
ANR	3148690	ExpressionStatement		825:3:18375:18375	3148492	5	True				
ANR	3148691	ReturnType	void		3148492	1					
ANR	3148692	Identifier	ConstituentLibrary_test_checkN		3148492	2					
ANR	3148693	ParameterList			3148492	3					
ANR	3148694	CFGEntryNode	ENTRY		3148492		True				
ANR	3148695	CFGExitNode	EXIT		3148492		True				
ANR	3148696	Symbol	sked		3148492						
ANR	3148697	Symbol	g . getNumNodes		3148492						
ANR	3148698	Symbol	lib . checkN		3148492						
ANR	3148699	Symbol	* i		3148492						
ANR	3148700	Symbol	lib		3148492						
ANR	3148701	Symbol	g		3148492						
ANR	3148702	Symbol	i		3148492						
ANR	3148703	Symbol	* sked		3148492						
ANR	3148704	Function	ConstituentLibrary_test_checkC	843:0:18533:18917							
ANR	3148705	FunctionDef	ConstituentLibrary_test_checkC ()		3148704	0					
ANR	3148706	CompoundStatement		844:0:18575:18917	3148704	0					
ANR	3148707	ExpressionStatement	"printf ( ""*** file checkC.dag should be a C-dag\\n"" )"	845:1:18578:18627	3148704	0	True				
ANR	3148708	CallExpression	"printf ( ""*** file checkC.dag should be a C-dag\\n"" )"		3148704	0					
ANR	3148709	Callee	printf		3148704	0					
ANR	3148710	Identifier	printf		3148704	0					
ANR	3148711	ArgumentList	"""*** file checkC.dag should be a C-dag\\n"""		3148704	1					
ANR	3148712	Argument	"""*** file checkC.dag should be a C-dag\\n"""		3148704	0					
ANR	3148713	PrimaryExpression	"""*** file checkC.dag should be a C-dag\\n"""		3148704	0					
ANR	3148714	IdentifierDeclStatement	"DagmanDag g ( ""checkC.dag"" ) ;"	846:1:18630:18655	3148704	1	True				
ANR	3148715	IdentifierDecl	"g ( ""checkC.dag"" )"		3148704	0					
ANR	3148716	IdentifierDeclType	DagmanDag		3148704	0					
ANR	3148717	Identifier	g		3148704	1					
ANR	3148718	PrimaryExpression	"""checkC.dag"""		3148704	2					
ANR	3148719	ExpressionStatement	"g . saveAsDot ( ""checkC.dot"" )"	847:1:18658:18683	3148704	2	True				
ANR	3148720	CallExpression	"g . saveAsDot ( ""checkC.dot"" )"		3148704	0					
ANR	3148721	Callee	g . saveAsDot		3148704	0					
ANR	3148722	MemberAccess	g . saveAsDot		3148704	0					
ANR	3148723	Identifier	g		3148704	0					
ANR	3148724	Identifier	saveAsDot		3148704	1					
ANR	3148725	ArgumentList	"""checkC.dot"""		3148704	1					
ANR	3148726	Argument	"""checkC.dot"""		3148704	0					
ANR	3148727	PrimaryExpression	"""checkC.dot"""		3148704	0					
ANR	3148728	IdentifierDeclStatement	ConstituentLibrary lib ;	848:1:18686:18708	3148704	3	True				
ANR	3148729	IdentifierDecl	lib		3148704	0					
ANR	3148730	IdentifierDeclType	ConstituentLibrary		3148704	0					
ANR	3148731	Identifier	lib		3148704	1					
ANR	3148732	IdentifierDeclStatement	int * sked = lib . checkC ( g ) ;	849:1:18711:18736	3148704	4	True				
ANR	3148733	IdentifierDecl	* sked = lib . checkC ( g )		3148704	0					
ANR	3148734	IdentifierDeclType	int *		3148704	0					
ANR	3148735	Identifier	sked		3148704	1					
ANR	3148736	AssignmentExpression	* sked = lib . checkC ( g )		3148704	2		=			
ANR	3148737	Identifier	sked		3148704	0					
ANR	3148738	CallExpression	lib . checkC ( g )		3148704	1					
ANR	3148739	Callee	lib . checkC		3148704	0					
ANR	3148740	MemberAccess	lib . checkC		3148704	0					
ANR	3148741	Identifier	lib		3148704	0					
ANR	3148742	Identifier	checkC		3148704	1					
ANR	3148743	ArgumentList	g		3148704	1					
ANR	3148744	Argument	g		3148704	0					
ANR	3148745	Identifier	g		3148704	0					
ANR	3148746	IfStatement	if ( sked )		3148704	5					
ANR	3148747	Condition	sked	850:5:18743:18746	3148704	0	True				
ANR	3148748	Identifier	sked		3148704	0					
ANR	3148749	CompoundStatement		7:12:174:174	3148704	1					
ANR	3148750	ExpressionStatement	"printf ( ""a C-dag, schedule is:\\n"" )"	851:2:18754:18787	3148704	0	True				
ANR	3148751	CallExpression	"printf ( ""a C-dag, schedule is:\\n"" )"		3148704	0					
ANR	3148752	Callee	printf		3148704	0					
ANR	3148753	Identifier	printf		3148704	0					
ANR	3148754	ArgumentList	"""a C-dag, schedule is:\\n"""		3148704	1					
ANR	3148755	Argument	"""a C-dag, schedule is:\\n"""		3148704	0					
ANR	3148756	PrimaryExpression	"""a C-dag, schedule is:\\n"""		3148704	0					
ANR	3148757	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3148704	1					
ANR	3148758	ForInit	int i = 0 ;	852:7:18796:18803	3148704	0	True				
ANR	3148759	IdentifierDeclStatement	int i = 0 ;		3148704	0					
ANR	3148760	IdentifierDecl	i = 0		3148704	0					
ANR	3148761	IdentifierDeclType	int		3148704	0					
ANR	3148762	Identifier	i		3148704	1					
ANR	3148763	AssignmentExpression	i = 0		3148704	2		=			
ANR	3148764	Identifier	i		3148704	0					
ANR	3148765	PrimaryExpression	0		3148704	1					
ANR	3148766	Condition	i < g . getNumNodes ( )	852:16:18805:18821	3148704	1	True				
ANR	3148767	RelationalExpression	i < g . getNumNodes ( )		3148704	0		<			
ANR	3148768	Identifier	i		3148704	0					
ANR	3148769	CallExpression	g . getNumNodes ( )		3148704	1					
ANR	3148770	Callee	g . getNumNodes		3148704	0					
ANR	3148771	MemberAccess	g . getNumNodes		3148704	0					
ANR	3148772	Identifier	g		3148704	0					
ANR	3148773	Identifier	getNumNodes		3148704	1					
ANR	3148774	ArgumentList			3148704	1					
ANR	3148775	PostIncDecOperationExpression	i ++	852:35:18824:18826	3148704	2	True				
ANR	3148776	Identifier	i		3148704	0					
ANR	3148777	IncDec	++		3148704	1					
ANR	3148778	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	853:3:18833:18856	3148704	3	True				
ANR	3148779	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3148704	0					
ANR	3148780	Callee	printf		3148704	0					
ANR	3148781	Identifier	printf		3148704	0					
ANR	3148782	ArgumentList	"""%d """		3148704	1					
ANR	3148783	Argument	"""%d """		3148704	0					
ANR	3148784	PrimaryExpression	"""%d """		3148704	0					
ANR	3148785	Argument	sked [ i ]		3148704	1					
ANR	3148786	ArrayIndexing	sked [ i ]		3148704	0					
ANR	3148787	Identifier	sked		3148704	0					
ANR	3148788	Identifier	i		3148704	1					
ANR	3148789	ExpressionStatement	"printf ( ""\\n"" )"	854:2:18860:18872	3148704	2	True				
ANR	3148790	CallExpression	"printf ( ""\\n"" )"		3148704	0					
ANR	3148791	Callee	printf		3148704	0					
ANR	3148792	Identifier	printf		3148704	0					
ANR	3148793	ArgumentList	"""\\n"""		3148704	1					
ANR	3148794	Argument	"""\\n"""		3148704	0					
ANR	3148795	PrimaryExpression	"""\\n"""		3148704	0					
ANR	3148796	ElseStatement	else		3148704	0					
ANR	3148797	CompoundStatement		13:6:307:307	3148704	0					
ANR	3148798	ExpressionStatement	"printf ( ""not an C-dag\\n"" )"	857:2:18887:18911	3148704	0	True				
ANR	3148799	CallExpression	"printf ( ""not an C-dag\\n"" )"		3148704	0					
ANR	3148800	Callee	printf		3148704	0					
ANR	3148801	Identifier	printf		3148704	0					
ANR	3148802	ArgumentList	"""not an C-dag\\n"""		3148704	1					
ANR	3148803	Argument	"""not an C-dag\\n"""		3148704	0					
ANR	3148804	PrimaryExpression	"""not an C-dag\\n"""		3148704	0					
ANR	3148805	ExpressionStatement		858:2:18915:18915	3148704	6	True				
ANR	3148806	ReturnType	void		3148704	1					
ANR	3148807	Identifier	ConstituentLibrary_test_checkC		3148704	2					
ANR	3148808	ParameterList			3148704	3					
ANR	3148809	CFGEntryNode	ENTRY		3148704		True				
ANR	3148810	CFGExitNode	EXIT		3148704		True				
ANR	3148811	Symbol	sked		3148704						
ANR	3148812	Symbol	g . getNumNodes		3148704						
ANR	3148813	Symbol	* i		3148704						
ANR	3148814	Symbol	lib		3148704						
ANR	3148815	Symbol	g		3148704						
ANR	3148816	Symbol	lib . checkC		3148704						
ANR	3148817	Symbol	i		3148704						
ANR	3148818	Symbol	* sked		3148704						
ANR	3148819	Function	ConstituentLibrary_test_checkW	875:0:19070:19827							
ANR	3148820	FunctionDef	ConstituentLibrary_test_checkW ()		3148819	0					
ANR	3148821	CompoundStatement		876:0:19112:19827	3148819	0					
ANR	3148822	CompoundStatement		7:2:143:168	3148819	0					
ANR	3148823	ExpressionStatement	"printf ( ""*** file checkW.dag should be a W-dag\\n"" )"	878:2:19119:19168	3148819	0	True				
ANR	3148824	CallExpression	"printf ( ""*** file checkW.dag should be a W-dag\\n"" )"		3148819	0					
ANR	3148825	Callee	printf		3148819	0					
ANR	3148826	Identifier	printf		3148819	0					
ANR	3148827	ArgumentList	"""*** file checkW.dag should be a W-dag\\n"""		3148819	1					
ANR	3148828	Argument	"""*** file checkW.dag should be a W-dag\\n"""		3148819	0					
ANR	3148829	PrimaryExpression	"""*** file checkW.dag should be a W-dag\\n"""		3148819	0					
ANR	3148830	IdentifierDeclStatement	"DagmanDag g ( ""checkW.dag"" ) ;"	879:2:19172:19197	3148819	1	True				
ANR	3148831	IdentifierDecl	"g ( ""checkW.dag"" )"		3148819	0					
ANR	3148832	IdentifierDeclType	DagmanDag		3148819	0					
ANR	3148833	Identifier	g		3148819	1					
ANR	3148834	PrimaryExpression	"""checkW.dag"""		3148819	2					
ANR	3148835	ExpressionStatement	"g . saveAsDot ( ""checkW.dot"" )"	880:2:19201:19226	3148819	2	True				
ANR	3148836	CallExpression	"g . saveAsDot ( ""checkW.dot"" )"		3148819	0					
ANR	3148837	Callee	g . saveAsDot		3148819	0					
ANR	3148838	MemberAccess	g . saveAsDot		3148819	0					
ANR	3148839	Identifier	g		3148819	0					
ANR	3148840	Identifier	saveAsDot		3148819	1					
ANR	3148841	ArgumentList	"""checkW.dot"""		3148819	1					
ANR	3148842	Argument	"""checkW.dot"""		3148819	0					
ANR	3148843	PrimaryExpression	"""checkW.dot"""		3148819	0					
ANR	3148844	IdentifierDeclStatement	ConstituentLibrary lib ;	881:2:19230:19252	3148819	3	True				
ANR	3148845	IdentifierDecl	lib		3148819	0					
ANR	3148846	IdentifierDeclType	ConstituentLibrary		3148819	0					
ANR	3148847	Identifier	lib		3148819	1					
ANR	3148848	IdentifierDeclStatement	int * sked = lib . checkW ( g ) ;	882:2:19256:19281	3148819	4	True				
ANR	3148849	IdentifierDecl	* sked = lib . checkW ( g )		3148819	0					
ANR	3148850	IdentifierDeclType	int *		3148819	0					
ANR	3148851	Identifier	sked		3148819	1					
ANR	3148852	AssignmentExpression	* sked = lib . checkW ( g )		3148819	2		=			
ANR	3148853	Identifier	sked		3148819	0					
ANR	3148854	CallExpression	lib . checkW ( g )		3148819	1					
ANR	3148855	Callee	lib . checkW		3148819	0					
ANR	3148856	MemberAccess	lib . checkW		3148819	0					
ANR	3148857	Identifier	lib		3148819	0					
ANR	3148858	Identifier	checkW		3148819	1					
ANR	3148859	ArgumentList	g		3148819	1					
ANR	3148860	Argument	g		3148819	0					
ANR	3148861	Identifier	g		3148819	0					
ANR	3148862	IfStatement	if ( sked )		3148819	5					
ANR	3148863	Condition	sked	883:6:19289:19292	3148819	0	True				
ANR	3148864	Identifier	sked		3148819	0					
ANR	3148865	CompoundStatement		8:13:183:183	3148819	1					
ANR	3148866	ExpressionStatement	"printf ( ""schedule is:\\n"" )"	884:3:19301:19325	3148819	0	True				
ANR	3148867	CallExpression	"printf ( ""schedule is:\\n"" )"		3148819	0					
ANR	3148868	Callee	printf		3148819	0					
ANR	3148869	Identifier	printf		3148819	0					
ANR	3148870	ArgumentList	"""schedule is:\\n"""		3148819	1					
ANR	3148871	Argument	"""schedule is:\\n"""		3148819	0					
ANR	3148872	PrimaryExpression	"""schedule is:\\n"""		3148819	0					
ANR	3148873	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3148819	1					
ANR	3148874	ForInit	int i = 0 ;	885:8:19335:19342	3148819	0	True				
ANR	3148875	IdentifierDeclStatement	int i = 0 ;		3148819	0					
ANR	3148876	IdentifierDecl	i = 0		3148819	0					
ANR	3148877	IdentifierDeclType	int		3148819	0					
ANR	3148878	Identifier	i		3148819	1					
ANR	3148879	AssignmentExpression	i = 0		3148819	2		=			
ANR	3148880	Identifier	i		3148819	0					
ANR	3148881	PrimaryExpression	0		3148819	1					
ANR	3148882	Condition	i < g . getNumNodes ( )	885:17:19344:19360	3148819	1	True				
ANR	3148883	RelationalExpression	i < g . getNumNodes ( )		3148819	0		<			
ANR	3148884	Identifier	i		3148819	0					
ANR	3148885	CallExpression	g . getNumNodes ( )		3148819	1					
ANR	3148886	Callee	g . getNumNodes		3148819	0					
ANR	3148887	MemberAccess	g . getNumNodes		3148819	0					
ANR	3148888	Identifier	g		3148819	0					
ANR	3148889	Identifier	getNumNodes		3148819	1					
ANR	3148890	ArgumentList			3148819	1					
ANR	3148891	PostIncDecOperationExpression	i ++	885:36:19363:19365	3148819	2	True				
ANR	3148892	Identifier	i		3148819	0					
ANR	3148893	IncDec	++		3148819	1					
ANR	3148894	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	886:4:19373:19396	3148819	3	True				
ANR	3148895	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3148819	0					
ANR	3148896	Callee	printf		3148819	0					
ANR	3148897	Identifier	printf		3148819	0					
ANR	3148898	ArgumentList	"""%d """		3148819	1					
ANR	3148899	Argument	"""%d """		3148819	0					
ANR	3148900	PrimaryExpression	"""%d """		3148819	0					
ANR	3148901	Argument	sked [ i ]		3148819	1					
ANR	3148902	ArrayIndexing	sked [ i ]		3148819	0					
ANR	3148903	Identifier	sked		3148819	0					
ANR	3148904	Identifier	i		3148819	1					
ANR	3148905	ExpressionStatement	"printf ( ""\\n"" )"	887:3:19401:19413	3148819	2	True				
ANR	3148906	CallExpression	"printf ( ""\\n"" )"		3148819	0					
ANR	3148907	Callee	printf		3148819	0					
ANR	3148908	Identifier	printf		3148819	0					
ANR	3148909	ArgumentList	"""\\n"""		3148819	1					
ANR	3148910	Argument	"""\\n"""		3148819	0					
ANR	3148911	PrimaryExpression	"""\\n"""		3148819	0					
ANR	3148912	ElseStatement	else		3148819	0					
ANR	3148913	CompoundStatement		14:7:313:313	3148819	0					
ANR	3148914	ExpressionStatement	"printf ( ""not a W-dag\\n"" )"	890:3:19431:19454	3148819	0	True				
ANR	3148915	CallExpression	"printf ( ""not a W-dag\\n"" )"		3148819	0					
ANR	3148916	Callee	printf		3148819	0					
ANR	3148917	Identifier	printf		3148819	0					
ANR	3148918	ArgumentList	"""not a W-dag\\n"""		3148819	1					
ANR	3148919	Argument	"""not a W-dag\\n"""		3148819	0					
ANR	3148920	PrimaryExpression	"""not a W-dag\\n"""		3148819	0					
ANR	3148921	ExpressionStatement		891:3:19459:19459	3148819	6	True				
ANR	3148922	ExpressionStatement		892:2:19463:19463	3148819	1	True				
ANR	3148923	CompoundStatement		24:2:505:530	3148819	2					
ANR	3148924	ExpressionStatement	"printf ( ""*** file checkW_2.dag should NOT be a W-dag\\n"" )"	895:2:19471:19526	3148819	0	True				
ANR	3148925	CallExpression	"printf ( ""*** file checkW_2.dag should NOT be a W-dag\\n"" )"		3148819	0					
ANR	3148926	Callee	printf		3148819	0					
ANR	3148927	Identifier	printf		3148819	0					
ANR	3148928	ArgumentList	"""*** file checkW_2.dag should NOT be a W-dag\\n"""		3148819	1					
ANR	3148929	Argument	"""*** file checkW_2.dag should NOT be a W-dag\\n"""		3148819	0					
ANR	3148930	PrimaryExpression	"""*** file checkW_2.dag should NOT be a W-dag\\n"""		3148819	0					
ANR	3148931	IdentifierDeclStatement	"DagmanDag g ( ""checkW_2.dag"" ) ;"	896:2:19530:19557	3148819	1	True				
ANR	3148932	IdentifierDecl	"g ( ""checkW_2.dag"" )"		3148819	0					
ANR	3148933	IdentifierDeclType	DagmanDag		3148819	0					
ANR	3148934	Identifier	g		3148819	1					
ANR	3148935	PrimaryExpression	"""checkW_2.dag"""		3148819	2					
ANR	3148936	ExpressionStatement	"g . saveAsDot ( ""checkW_2.dot"" )"	897:2:19561:19588	3148819	2	True				
ANR	3148937	CallExpression	"g . saveAsDot ( ""checkW_2.dot"" )"		3148819	0					
ANR	3148938	Callee	g . saveAsDot		3148819	0					
ANR	3148939	MemberAccess	g . saveAsDot		3148819	0					
ANR	3148940	Identifier	g		3148819	0					
ANR	3148941	Identifier	saveAsDot		3148819	1					
ANR	3148942	ArgumentList	"""checkW_2.dot"""		3148819	1					
ANR	3148943	Argument	"""checkW_2.dot"""		3148819	0					
ANR	3148944	PrimaryExpression	"""checkW_2.dot"""		3148819	0					
ANR	3148945	IdentifierDeclStatement	ConstituentLibrary lib ;	898:2:19592:19614	3148819	3	True				
ANR	3148946	IdentifierDecl	lib		3148819	0					
ANR	3148947	IdentifierDeclType	ConstituentLibrary		3148819	0					
ANR	3148948	Identifier	lib		3148819	1					
ANR	3148949	IdentifierDeclStatement	int * sked = lib . checkW ( g ) ;	899:2:19618:19643	3148819	4	True				
ANR	3148950	IdentifierDecl	* sked = lib . checkW ( g )		3148819	0					
ANR	3148951	IdentifierDeclType	int *		3148819	0					
ANR	3148952	Identifier	sked		3148819	1					
ANR	3148953	AssignmentExpression	* sked = lib . checkW ( g )		3148819	2		=			
ANR	3148954	Identifier	sked		3148819	0					
ANR	3148955	CallExpression	lib . checkW ( g )		3148819	1					
ANR	3148956	Callee	lib . checkW		3148819	0					
ANR	3148957	MemberAccess	lib . checkW		3148819	0					
ANR	3148958	Identifier	lib		3148819	0					
ANR	3148959	Identifier	checkW		3148819	1					
ANR	3148960	ArgumentList	g		3148819	1					
ANR	3148961	Argument	g		3148819	0					
ANR	3148962	Identifier	g		3148819	0					
ANR	3148963	IfStatement	if ( sked )		3148819	5					
ANR	3148964	Condition	sked	900:6:19651:19654	3148819	0	True				
ANR	3148965	Identifier	sked		3148819	0					
ANR	3148966	CompoundStatement		25:13:545:545	3148819	1					
ANR	3148967	ExpressionStatement	"printf ( ""schedule is:\\n"" )"	901:3:19663:19687	3148819	0	True				
ANR	3148968	CallExpression	"printf ( ""schedule is:\\n"" )"		3148819	0					
ANR	3148969	Callee	printf		3148819	0					
ANR	3148970	Identifier	printf		3148819	0					
ANR	3148971	ArgumentList	"""schedule is:\\n"""		3148819	1					
ANR	3148972	Argument	"""schedule is:\\n"""		3148819	0					
ANR	3148973	PrimaryExpression	"""schedule is:\\n"""		3148819	0					
ANR	3148974	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3148819	1					
ANR	3148975	ForInit	int i = 0 ;	902:8:19697:19704	3148819	0	True				
ANR	3148976	IdentifierDeclStatement	int i = 0 ;		3148819	0					
ANR	3148977	IdentifierDecl	i = 0		3148819	0					
ANR	3148978	IdentifierDeclType	int		3148819	0					
ANR	3148979	Identifier	i		3148819	1					
ANR	3148980	AssignmentExpression	i = 0		3148819	2		=			
ANR	3148981	Identifier	i		3148819	0					
ANR	3148982	PrimaryExpression	0		3148819	1					
ANR	3148983	Condition	i < g . getNumNodes ( )	902:17:19706:19722	3148819	1	True				
ANR	3148984	RelationalExpression	i < g . getNumNodes ( )		3148819	0		<			
ANR	3148985	Identifier	i		3148819	0					
ANR	3148986	CallExpression	g . getNumNodes ( )		3148819	1					
ANR	3148987	Callee	g . getNumNodes		3148819	0					
ANR	3148988	MemberAccess	g . getNumNodes		3148819	0					
ANR	3148989	Identifier	g		3148819	0					
ANR	3148990	Identifier	getNumNodes		3148819	1					
ANR	3148991	ArgumentList			3148819	1					
ANR	3148992	PostIncDecOperationExpression	i ++	902:36:19725:19727	3148819	2	True				
ANR	3148993	Identifier	i		3148819	0					
ANR	3148994	IncDec	++		3148819	1					
ANR	3148995	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	903:4:19735:19758	3148819	3	True				
ANR	3148996	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3148819	0					
ANR	3148997	Callee	printf		3148819	0					
ANR	3148998	Identifier	printf		3148819	0					
ANR	3148999	ArgumentList	"""%d """		3148819	1					
ANR	3149000	Argument	"""%d """		3148819	0					
ANR	3149001	PrimaryExpression	"""%d """		3148819	0					
ANR	3149002	Argument	sked [ i ]		3148819	1					
ANR	3149003	ArrayIndexing	sked [ i ]		3148819	0					
ANR	3149004	Identifier	sked		3148819	0					
ANR	3149005	Identifier	i		3148819	1					
ANR	3149006	ExpressionStatement	"printf ( ""\\n"" )"	904:3:19763:19775	3148819	2	True				
ANR	3149007	CallExpression	"printf ( ""\\n"" )"		3148819	0					
ANR	3149008	Callee	printf		3148819	0					
ANR	3149009	Identifier	printf		3148819	0					
ANR	3149010	ArgumentList	"""\\n"""		3148819	1					
ANR	3149011	Argument	"""\\n"""		3148819	0					
ANR	3149012	PrimaryExpression	"""\\n"""		3148819	0					
ANR	3149013	ElseStatement	else		3148819	0					
ANR	3149014	CompoundStatement		31:7:675:675	3148819	0					
ANR	3149015	ExpressionStatement	"printf ( ""not a W-dag\\n"" )"	907:3:19793:19816	3148819	0	True				
ANR	3149016	CallExpression	"printf ( ""not a W-dag\\n"" )"		3148819	0					
ANR	3149017	Callee	printf		3148819	0					
ANR	3149018	Identifier	printf		3148819	0					
ANR	3149019	ArgumentList	"""not a W-dag\\n"""		3148819	1					
ANR	3149020	Argument	"""not a W-dag\\n"""		3148819	0					
ANR	3149021	PrimaryExpression	"""not a W-dag\\n"""		3148819	0					
ANR	3149022	ExpressionStatement		908:3:19821:19821	3148819	6	True				
ANR	3149023	ExpressionStatement		909:2:19825:19825	3148819	3	True				
ANR	3149024	ReturnType	void		3148819	1					
ANR	3149025	Identifier	ConstituentLibrary_test_checkW		3148819	2					
ANR	3149026	ParameterList			3148819	3					
ANR	3149027	CFGEntryNode	ENTRY		3148819		True				
ANR	3149028	CFGExitNode	EXIT		3148819		True				
ANR	3149029	Symbol	sked		3148819						
ANR	3149030	Symbol	g . getNumNodes		3148819						
ANR	3149031	Symbol	* i		3148819						
ANR	3149032	Symbol	lib		3148819						
ANR	3149033	Symbol	g		3148819						
ANR	3149034	Symbol	i		3148819						
ANR	3149035	Symbol	* sked		3148819						
ANR	3149036	Symbol	lib . checkW		3148819						
ANR	3149037	Function	ConstituentLibrary_test_checkM	926:0:19980:20356							
ANR	3149038	FunctionDef	ConstituentLibrary_test_checkM ()		3149037	0					
ANR	3149039	CompoundStatement		927:0:20022:20356	3149037	0					
ANR	3149040	ExpressionStatement	"printf ( ""*** file checkW.dag should be an M-dag\\n"" )"	928:1:20025:20075	3149037	0	True				
ANR	3149041	CallExpression	"printf ( ""*** file checkW.dag should be an M-dag\\n"" )"		3149037	0					
ANR	3149042	Callee	printf		3149037	0					
ANR	3149043	Identifier	printf		3149037	0					
ANR	3149044	ArgumentList	"""*** file checkW.dag should be an M-dag\\n"""		3149037	1					
ANR	3149045	Argument	"""*** file checkW.dag should be an M-dag\\n"""		3149037	0					
ANR	3149046	PrimaryExpression	"""*** file checkW.dag should be an M-dag\\n"""		3149037	0					
ANR	3149047	IdentifierDeclStatement	"DagmanDag g ( ""checkM.dag"" ) ;"	929:1:20078:20103	3149037	1	True				
ANR	3149048	IdentifierDecl	"g ( ""checkM.dag"" )"		3149037	0					
ANR	3149049	IdentifierDeclType	DagmanDag		3149037	0					
ANR	3149050	Identifier	g		3149037	1					
ANR	3149051	PrimaryExpression	"""checkM.dag"""		3149037	2					
ANR	3149052	ExpressionStatement	"g . saveAsDot ( ""checkM.dot"" )"	930:1:20106:20131	3149037	2	True				
ANR	3149053	CallExpression	"g . saveAsDot ( ""checkM.dot"" )"		3149037	0					
ANR	3149054	Callee	g . saveAsDot		3149037	0					
ANR	3149055	MemberAccess	g . saveAsDot		3149037	0					
ANR	3149056	Identifier	g		3149037	0					
ANR	3149057	Identifier	saveAsDot		3149037	1					
ANR	3149058	ArgumentList	"""checkM.dot"""		3149037	1					
ANR	3149059	Argument	"""checkM.dot"""		3149037	0					
ANR	3149060	PrimaryExpression	"""checkM.dot"""		3149037	0					
ANR	3149061	IdentifierDeclStatement	ConstituentLibrary lib ;	931:1:20134:20156	3149037	3	True				
ANR	3149062	IdentifierDecl	lib		3149037	0					
ANR	3149063	IdentifierDeclType	ConstituentLibrary		3149037	0					
ANR	3149064	Identifier	lib		3149037	1					
ANR	3149065	IdentifierDeclStatement	int * sked = lib . checkM ( g ) ;	932:1:20159:20184	3149037	4	True				
ANR	3149066	IdentifierDecl	* sked = lib . checkM ( g )		3149037	0					
ANR	3149067	IdentifierDeclType	int *		3149037	0					
ANR	3149068	Identifier	sked		3149037	1					
ANR	3149069	AssignmentExpression	* sked = lib . checkM ( g )		3149037	2		=			
ANR	3149070	Identifier	sked		3149037	0					
ANR	3149071	CallExpression	lib . checkM ( g )		3149037	1					
ANR	3149072	Callee	lib . checkM		3149037	0					
ANR	3149073	MemberAccess	lib . checkM		3149037	0					
ANR	3149074	Identifier	lib		3149037	0					
ANR	3149075	Identifier	checkM		3149037	1					
ANR	3149076	ArgumentList	g		3149037	1					
ANR	3149077	Argument	g		3149037	0					
ANR	3149078	Identifier	g		3149037	0					
ANR	3149079	IfStatement	if ( sked )		3149037	5					
ANR	3149080	Condition	sked	933:5:20191:20194	3149037	0	True				
ANR	3149081	Identifier	sked		3149037	0					
ANR	3149082	CompoundStatement		7:12:175:175	3149037	1					
ANR	3149083	ExpressionStatement	"printf ( ""schedule is:\\n"" )"	934:2:20202:20226	3149037	0	True				
ANR	3149084	CallExpression	"printf ( ""schedule is:\\n"" )"		3149037	0					
ANR	3149085	Callee	printf		3149037	0					
ANR	3149086	Identifier	printf		3149037	0					
ANR	3149087	ArgumentList	"""schedule is:\\n"""		3149037	1					
ANR	3149088	Argument	"""schedule is:\\n"""		3149037	0					
ANR	3149089	PrimaryExpression	"""schedule is:\\n"""		3149037	0					
ANR	3149090	ForStatement	for ( int i = 0 ; i < g . getNumNodes ( ) ; i ++ )		3149037	1					
ANR	3149091	ForInit	int i = 0 ;	935:7:20235:20242	3149037	0	True				
ANR	3149092	IdentifierDeclStatement	int i = 0 ;		3149037	0					
ANR	3149093	IdentifierDecl	i = 0		3149037	0					
ANR	3149094	IdentifierDeclType	int		3149037	0					
ANR	3149095	Identifier	i		3149037	1					
ANR	3149096	AssignmentExpression	i = 0		3149037	2		=			
ANR	3149097	Identifier	i		3149037	0					
ANR	3149098	PrimaryExpression	0		3149037	1					
ANR	3149099	Condition	i < g . getNumNodes ( )	935:16:20244:20260	3149037	1	True				
ANR	3149100	RelationalExpression	i < g . getNumNodes ( )		3149037	0		<			
ANR	3149101	Identifier	i		3149037	0					
ANR	3149102	CallExpression	g . getNumNodes ( )		3149037	1					
ANR	3149103	Callee	g . getNumNodes		3149037	0					
ANR	3149104	MemberAccess	g . getNumNodes		3149037	0					
ANR	3149105	Identifier	g		3149037	0					
ANR	3149106	Identifier	getNumNodes		3149037	1					
ANR	3149107	ArgumentList			3149037	1					
ANR	3149108	PostIncDecOperationExpression	i ++	935:35:20263:20265	3149037	2	True				
ANR	3149109	Identifier	i		3149037	0					
ANR	3149110	IncDec	++		3149037	1					
ANR	3149111	ExpressionStatement	"printf ( ""%d "" , sked [ i ] )"	936:3:20272:20295	3149037	3	True				
ANR	3149112	CallExpression	"printf ( ""%d "" , sked [ i ] )"		3149037	0					
ANR	3149113	Callee	printf		3149037	0					
ANR	3149114	Identifier	printf		3149037	0					
ANR	3149115	ArgumentList	"""%d """		3149037	1					
ANR	3149116	Argument	"""%d """		3149037	0					
ANR	3149117	PrimaryExpression	"""%d """		3149037	0					
ANR	3149118	Argument	sked [ i ]		3149037	1					
ANR	3149119	ArrayIndexing	sked [ i ]		3149037	0					
ANR	3149120	Identifier	sked		3149037	0					
ANR	3149121	Identifier	i		3149037	1					
ANR	3149122	ExpressionStatement	"printf ( ""\\n"" )"	937:2:20299:20311	3149037	2	True				
ANR	3149123	CallExpression	"printf ( ""\\n"" )"		3149037	0					
ANR	3149124	Callee	printf		3149037	0					
ANR	3149125	Identifier	printf		3149037	0					
ANR	3149126	ArgumentList	"""\\n"""		3149037	1					
ANR	3149127	Argument	"""\\n"""		3149037	0					
ANR	3149128	PrimaryExpression	"""\\n"""		3149037	0					
ANR	3149129	ElseStatement	else		3149037	0					
ANR	3149130	CompoundStatement		13:6:299:299	3149037	0					
ANR	3149131	ExpressionStatement	"printf ( ""not an M-dag\\n"" )"	940:2:20326:20350	3149037	0	True				
ANR	3149132	CallExpression	"printf ( ""not an M-dag\\n"" )"		3149037	0					
ANR	3149133	Callee	printf		3149037	0					
ANR	3149134	Identifier	printf		3149037	0					
ANR	3149135	ArgumentList	"""not an M-dag\\n"""		3149037	1					
ANR	3149136	Argument	"""not an M-dag\\n"""		3149037	0					
ANR	3149137	PrimaryExpression	"""not an M-dag\\n"""		3149037	0					
ANR	3149138	ExpressionStatement		941:2:20354:20354	3149037	6	True				
ANR	3149139	ReturnType	void		3149037	1					
ANR	3149140	Identifier	ConstituentLibrary_test_checkM		3149037	2					
ANR	3149141	ParameterList			3149037	3					
ANR	3149142	CFGEntryNode	ENTRY		3149037		True				
ANR	3149143	CFGExitNode	EXIT		3149037		True				
ANR	3149144	Symbol	lib . checkM		3149037						
ANR	3149145	Symbol	sked		3149037						
ANR	3149146	Symbol	g . getNumNodes		3149037						
ANR	3149147	Symbol	* i		3149037						
ANR	3149148	Symbol	lib		3149037						
ANR	3149149	Symbol	g		3149037						
ANR	3149150	Symbol	i		3149037						
ANR	3149151	Symbol	* sked		3149037						
