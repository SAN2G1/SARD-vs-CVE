command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	827348	File	data/converged/CVE-2011-4930_htcondor/compress.cpp								
ANR	827349	Function	ClassAdBin :: ClassAdBin	27:0:897:965							
ANR	827350	FunctionDef	ClassAdBin :: ClassAdBin ()		827349	0					
ANR	827351	CompoundStatement		28:0:923:965	827349	0					
ANR	827352	ExpressionStatement	count = 0	29:4:929:938	827349	0	True				
ANR	827353	AssignmentExpression	count = 0		827349	0		=			
ANR	827354	Identifier	count		827349	0					
ANR	827355	PrimaryExpression	0		827349	1					
ANR	827356	ExpressionStatement	ad = new ClassAd ( )	30:4:944:963	827349	1	True				
ANR	827357	AssignmentExpression	ad = new ClassAd ( )		827349	0		=			
ANR	827358	Identifier	ad		827349	0					
ANR	827359	UnaryExpression	new ClassAd ( )		827349	1					
ANR	827360	Identifier	ClassAdBin :: ClassAdBin		827349	1					
ANR	827361	ParameterList			827349	2					
ANR	827362	CFGEntryNode	ENTRY		827349		True				
ANR	827363	CFGExitNode	EXIT		827349		True				
ANR	827364	Symbol	ad		827349						
ANR	827365	Symbol	count		827349						
ANR	827366	Function	ClassAdBin :: ~ClassAdBin	33:0:968:1012							
ANR	827367	FunctionDef	ClassAdBin :: ~ClassAdBin ()		827366	0					
ANR	827368	CompoundStatement		34:0:995:1012	827366	0					
ANR	827369	Statement	delete	35:4:1001:1006	827366	0	True				
ANR	827370	ExpressionStatement	ad	35:11:1008:1010	827366	1	True				
ANR	827371	Identifier	ad		827366	0					
ANR	827372	Identifier	ClassAdBin :: ~ClassAdBin		827366	1					
ANR	827373	ParameterList			827366	2					
ANR	827374	CFGEntryNode	ENTRY		827366		True				
ANR	827375	CFGExitNode	EXIT		827366		True				
ANR	827376	Function	MakeSignature	38:0:1015:1519							
ANR	827377	FunctionDef	"MakeSignature (const ClassAd * ad , const References & refs , string & sig)"		827376	0					
ANR	827378	CompoundStatement		40:0:1092:1519	827376	0					
ANR	827379	IdentifierDeclStatement	References :: iterator itr ;	41:4:1098:1125	827376	0	True				
ANR	827380	IdentifierDecl	itr		827376	0					
ANR	827381	IdentifierDeclType	References :: iterator		827376	0					
ANR	827382	Identifier	itr		827376	1					
ANR	827383	IdentifierDeclStatement	ExprTree * expr ;	42:4:1131:1160	827376	1	True				
ANR	827384	IdentifierDecl	* expr		827376	0					
ANR	827385	IdentifierDeclType	ExprTree *		827376	0					
ANR	827386	Identifier	expr		827376	1					
ANR	827387	IdentifierDeclStatement	Value val ;	43:4:1166:1193	827376	2	True				
ANR	827388	IdentifierDecl	val		827376	0					
ANR	827389	IdentifierDeclType	Value		827376	0					
ANR	827390	Identifier	val		827376	1					
ANR	827391	IdentifierDeclStatement	ClassAdUnParser unp ;	44:4:1199:1226	827376	3	True				
ANR	827392	IdentifierDecl	unp		827376	0					
ANR	827393	IdentifierDeclType	ClassAdUnParser		827376	0					
ANR	827394	Identifier	unp		827376	1					
ANR	827395	ExpressionStatement	"sig = """""	46:4:1233:1241	827376	4	True				
ANR	827396	AssignmentExpression	"sig = """""		827376	0		=			
ANR	827397	Identifier	sig		827376	0					
ANR	827398	PrimaryExpression	""""""		827376	1					
ANR	827399	ForStatement	for ( itr = refs . begin ( ) ; itr != refs . end ( ) ; itr ++ )		827376	5					
ANR	827400	ForInit	itr = refs . begin ( ) ;	47:9:1252:1269	827376	0	True				
ANR	827401	AssignmentExpression	itr = refs . begin ( )		827376	0		=			
ANR	827402	Identifier	itr		827376	0					
ANR	827403	CallExpression	refs . begin ( )		827376	1					
ANR	827404	Callee	refs . begin		827376	0					
ANR	827405	MemberAccess	refs . begin		827376	0					
ANR	827406	Identifier	refs		827376	0					
ANR	827407	Identifier	begin		827376	1					
ANR	827408	ArgumentList			827376	1					
ANR	827409	Condition	itr != refs . end ( )	47:28:1271:1287	827376	1	True				
ANR	827410	EqualityExpression	itr != refs . end ( )		827376	0		!=			
ANR	827411	Identifier	itr		827376	0					
ANR	827412	CallExpression	refs . end ( )		827376	1					
ANR	827413	Callee	refs . end		827376	0					
ANR	827414	MemberAccess	refs . end		827376	0					
ANR	827415	Identifier	refs		827376	0					
ANR	827416	Identifier	end		827376	1					
ANR	827417	ArgumentList			827376	1					
ANR	827418	PostIncDecOperationExpression	itr ++	47:47:1290:1294	827376	2	True				
ANR	827419	Identifier	itr		827376	0					
ANR	827420	IncDec	++		827376	1					
ANR	827421	CompoundStatement		8:55:205:205	827376	3					
ANR	827422	IfStatement	if ( ( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE )		827376	0					
ANR	827423	Condition	( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE	48:11:1311:1374	827376	0	True				
ANR	827424	AndExpression	( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE		827376	0		&&			
ANR	827425	AssignmentExpression	expr = ad -> Lookup ( * itr )		827376	0		=			
ANR	827426	Identifier	expr		827376	0					
ANR	827427	CallExpression	ad -> Lookup ( * itr )		827376	1					
ANR	827428	Callee	ad -> Lookup		827376	0					
ANR	827429	PtrMemberAccess	ad -> Lookup		827376	0					
ANR	827430	Identifier	ad		827376	0					
ANR	827431	Identifier	Lookup		827376	1					
ANR	827432	ArgumentList	* itr		827376	1					
ANR	827433	Argument	* itr		827376	0					
ANR	827434	UnaryOperationExpression	* itr		827376	0					
ANR	827435	UnaryOperator	*		827376	0					
ANR	827436	Identifier	itr		827376	1					
ANR	827437	EqualityExpression	expr -> GetKind ( ) == ExprTree :: LITERAL_NODE		827376	1		==			
ANR	827438	CallExpression	expr -> GetKind ( )		827376	0					
ANR	827439	Callee	expr -> GetKind		827376	0					
ANR	827440	PtrMemberAccess	expr -> GetKind		827376	0					
ANR	827441	Identifier	expr		827376	0					
ANR	827442	Identifier	GetKind		827376	1					
ANR	827443	ArgumentList			827376	1					
ANR	827444	Identifier	ExprTree :: LITERAL_NODE		827376	1					
ANR	827445	CompoundStatement		9:76:283:283	827376	1					
ANR	827446	ExpressionStatement	"unp . Unparse ( sig , expr )"	49:12:1390:1414	827376	0	True				
ANR	827447	CallExpression	"unp . Unparse ( sig , expr )"		827376	0					
ANR	827448	Callee	unp . Unparse		827376	0					
ANR	827449	MemberAccess	unp . Unparse		827376	0					
ANR	827450	Identifier	unp		827376	0					
ANR	827451	Identifier	Unparse		827376	1					
ANR	827452	ArgumentList	sig		827376	1					
ANR	827453	Argument	sig		827376	0					
ANR	827454	Identifier	sig		827376	0					
ANR	827455	Argument	expr		827376	1					
ANR	827456	Identifier	expr		827376	0					
ANR	827457	ElseStatement	else		827376	0					
ANR	827458	CompoundStatement		11:15:338:338	827376	0					
ANR	827459	ReturnStatement	return ( false ) ;	51:12:1445:1460	827376	0	True				
ANR	827460	Identifier	false		827376	0					
ANR	827461	ExpressionStatement	"sig += "":"""	53:8:1480:1490	827376	1	True				
ANR	827462	AssignmentExpression	"sig += "":"""		827376	0		+=			
ANR	827463	Identifier	sig		827376	0					
ANR	827464	PrimaryExpression	""":"""		827376	1					
ANR	827465	ReturnStatement	return ( true ) ;	56:4:1503:1517	827376	6	True				
ANR	827466	Identifier	true		827376	0					
ANR	827467	ReturnType	bool		827376	1					
ANR	827468	Identifier	MakeSignature		827376	2					
ANR	827469	ParameterList	"const ClassAd * ad , const References & refs , string & sig"		827376	3					
ANR	827470	Parameter	const ClassAd * ad	39:15:1035:1051	827376	0	True				
ANR	827471	ParameterType	const ClassAd *		827376	0					
ANR	827472	Identifier	ad		827376	1					
ANR	827473	Parameter	const References & refs	39:34:1054:1075	827376	1	True				
ANR	827474	ParameterType	const References &		827376	0					
ANR	827475	Identifier	refs		827376	1					
ANR	827476	Parameter	string & sig	39:58:1078:1088	827376	2	True				
ANR	827477	ParameterType	string &		827376	0					
ANR	827478	Identifier	sig		827376	1					
ANR	827479	CFGEntryNode	ENTRY		827376		True				
ANR	827480	CFGExitNode	EXIT		827376		True				
ANR	827481	Symbol	val		827376						
ANR	827482	Symbol	expr -> GetKind		827376						
ANR	827483	Symbol	ad		827376						
ANR	827484	Symbol	refs . end		827376						
ANR	827485	Symbol	itr		827376						
ANR	827486	Symbol	ad -> Lookup		827376						
ANR	827487	Symbol	ExprTree :: LITERAL_NODE		827376						
ANR	827488	Symbol	false		827376						
ANR	827489	Symbol	* ad		827376						
ANR	827490	Symbol	* itr		827376						
ANR	827491	Symbol	sig		827376						
ANR	827492	Symbol	refs		827376						
ANR	827493	Symbol	* expr		827376						
ANR	827494	Symbol	unp		827376						
ANR	827495	Symbol	true		827376						
ANR	827496	Symbol	expr		827376						
ANR	827497	Symbol	refs . begin		827376						
ANR	827498	Function	Compress	60:0:1523:2940							
ANR	827499	FunctionDef	"Compress (ClassAdCollectionServer * server , LocalCollectionQuery * query , const References & refs , CompressedAds & comp , list < ClassAd * > & rest)"		827498	0					
ANR	827500	CompoundStatement		63:0:1672:2940	827498	0					
ANR	827501	IdentifierDeclStatement	"string key , sig ;"	64:4:1678:1714	827498	0	True				
ANR	827502	IdentifierDecl	key		827498	0					
ANR	827503	IdentifierDeclType	string		827498	0					
ANR	827504	Identifier	key		827498	1					
ANR	827505	IdentifierDecl	sig		827498	1					
ANR	827506	IdentifierDeclType	string		827498	0					
ANR	827507	Identifier	sig		827498	1					
ANR	827508	IdentifierDeclStatement	References :: const_iterator ritr ;	65:4:1720:1752	827498	1	True				
ANR	827509	IdentifierDecl	ritr		827498	0					
ANR	827510	IdentifierDeclType	References :: const_iterator		827498	0					
ANR	827511	Identifier	ritr		827498	1					
ANR	827512	IdentifierDeclStatement	ClassAd * ad ;	66:4:1758:1789	827498	2	True				
ANR	827513	IdentifierDecl	* ad		827498	0					
ANR	827514	IdentifierDeclType	ClassAd *		827498	0					
ANR	827515	Identifier	ad		827498	1					
ANR	827516	IdentifierDeclStatement	CompressedAds :: iterator citr ;	67:4:1795:1827	827498	3	True				
ANR	827517	IdentifierDecl	citr		827498	0					
ANR	827518	IdentifierDeclType	CompressedAds :: iterator		827498	0					
ANR	827519	Identifier	citr		827498	1					
ANR	827520	IdentifierDeclStatement	ClassAdBin * bin ;	68:4:1833:1865	827498	4	True				
ANR	827521	IdentifierDecl	* bin		827498	0					
ANR	827522	IdentifierDeclType	ClassAdBin *		827498	0					
ANR	827523	Identifier	bin		827498	1					
ANR	827524	ExpressionStatement	query -> ToFirst ( )	70:4:1872:1889	827498	5	True				
ANR	827525	CallExpression	query -> ToFirst ( )		827498	0					
ANR	827526	Callee	query -> ToFirst		827498	0					
ANR	827527	PtrMemberAccess	query -> ToFirst		827498	0					
ANR	827528	Identifier	query		827498	0					
ANR	827529	Identifier	ToFirst		827498	1					
ANR	827530	ArgumentList			827498	1					
ANR	827531	ExpressionStatement	query -> Current ( key )	71:4:1895:1916	827498	6	True				
ANR	827532	CallExpression	query -> Current ( key )		827498	0					
ANR	827533	Callee	query -> Current		827498	0					
ANR	827534	PtrMemberAccess	query -> Current		827498	0					
ANR	827535	Identifier	query		827498	0					
ANR	827536	Identifier	Current		827498	1					
ANR	827537	ArgumentList	key		827498	1					
ANR	827538	Argument	key		827498	0					
ANR	827539	Identifier	key		827498	0					
ANR	827540	WhileStatement	while ( ! query -> IsAfterLast ( ) )		827498	7					
ANR	827541	Condition	! query -> IsAfterLast ( )	72:11:1929:1950	827498	0	True				
ANR	827542	UnaryOperationExpression	! query -> IsAfterLast ( )		827498	0					
ANR	827543	UnaryOperator	!		827498	0					
ANR	827544	CallExpression	query -> IsAfterLast ( )		827498	1					
ANR	827545	Callee	query -> IsAfterLast		827498	0					
ANR	827546	PtrMemberAccess	query -> IsAfterLast		827498	0					
ANR	827547	Identifier	query		827498	0					
ANR	827548	Identifier	IsAfterLast		827498	1					
ANR	827549	ArgumentList			827498	1					
ANR	827550	CompoundStatement		10:36:281:281	827498	1					
ANR	827551	IfStatement	if ( ! ( ad = server -> GetClassAd ( key ) ) )		827498	0					
ANR	827552	Condition	! ( ad = server -> GetClassAd ( key ) )	74:12:1990:2024	827498	0	True				
ANR	827553	UnaryOperationExpression	! ( ad = server -> GetClassAd ( key ) )		827498	0					
ANR	827554	UnaryOperator	!		827498	0					
ANR	827555	AssignmentExpression	ad = server -> GetClassAd ( key )		827498	1		=			
ANR	827556	Identifier	ad		827498	0					
ANR	827557	CallExpression	server -> GetClassAd ( key )		827498	1					
ANR	827558	Callee	server -> GetClassAd		827498	0					
ANR	827559	PtrMemberAccess	server -> GetClassAd		827498	0					
ANR	827560	Identifier	server		827498	0					
ANR	827561	Identifier	GetClassAd		827498	1					
ANR	827562	ArgumentList	key		827498	1					
ANR	827563	Argument	key		827498	0					
ANR	827564	Identifier	key		827498	0					
ANR	827565	CompoundStatement		12:50:355:355	827498	1					
ANR	827566	ReturnStatement	return ( false ) ;	75:12:2042:2057	827498	0	True				
ANR	827567	Identifier	false		827498	0					
ANR	827568	IfStatement	"if ( ! MakeSignature ( ad , refs , sig ) )"		827498	1					
ANR	827569	Condition	"! MakeSignature ( ad , refs , sig )"	79:12:2125:2155	827498	0	True				
ANR	827570	UnaryOperationExpression	"! MakeSignature ( ad , refs , sig )"		827498	0					
ANR	827571	UnaryOperator	!		827498	0					
ANR	827572	CallExpression	"MakeSignature ( ad , refs , sig )"		827498	1					
ANR	827573	Callee	MakeSignature		827498	0					
ANR	827574	Identifier	MakeSignature		827498	0					
ANR	827575	ArgumentList	ad		827498	1					
ANR	827576	Argument	ad		827498	0					
ANR	827577	Identifier	ad		827498	0					
ANR	827578	Argument	refs		827498	1					
ANR	827579	Identifier	refs		827498	0					
ANR	827580	Argument	sig		827498	2					
ANR	827581	Identifier	sig		827498	0					
ANR	827582	CompoundStatement		17:46:486:486	827498	1					
ANR	827583	ExpressionStatement	rest . push_back ( ( ClassAd * ) ad -> Copy ( ) )	81:12:2232:2272	827498	0	True				
ANR	827584	CallExpression	rest . push_back ( ( ClassAd * ) ad -> Copy ( ) )		827498	0					
ANR	827585	Callee	rest . push_back		827498	0					
ANR	827586	MemberAccess	rest . push_back		827498	0					
ANR	827587	Identifier	rest		827498	0					
ANR	827588	Identifier	push_back		827498	1					
ANR	827589	ArgumentList	( ClassAd * ) ad -> Copy ( )		827498	1					
ANR	827590	Argument	( ClassAd * ) ad -> Copy ( )		827498	0					
ANR	827591	CastExpression	( ClassAd * ) ad -> Copy ( )		827498	0					
ANR	827592	CastTarget	ClassAd *		827498	0					
ANR	827593	CallExpression	ad -> Copy ( )		827498	1					
ANR	827594	Callee	ad -> Copy		827498	0					
ANR	827595	PtrMemberAccess	ad -> Copy		827498	0					
ANR	827596	Identifier	ad		827498	0					
ANR	827597	Identifier	Copy		827498	1					
ANR	827598	ArgumentList			827498	1					
ANR	827599	IfStatement	if ( ( citr = comp . find ( sig ) ) == comp . end ( ) )		827498	2					
ANR	827600	Condition	( citr = comp . find ( sig ) ) == comp . end ( )	85:12:2320:2361	827498	0	True				
ANR	827601	EqualityExpression	( citr = comp . find ( sig ) ) == comp . end ( )		827498	0		==			
ANR	827602	AssignmentExpression	citr = comp . find ( sig )		827498	0		=			
ANR	827603	Identifier	citr		827498	0					
ANR	827604	CallExpression	comp . find ( sig )		827498	1					
ANR	827605	Callee	comp . find		827498	0					
ANR	827606	MemberAccess	comp . find		827498	0					
ANR	827607	Identifier	comp		827498	0					
ANR	827608	Identifier	find		827498	1					
ANR	827609	ArgumentList	sig		827498	1					
ANR	827610	Argument	sig		827498	0					
ANR	827611	Identifier	sig		827498	0					
ANR	827612	CallExpression	comp . end ( )		827498	1					
ANR	827613	Callee	comp . end		827498	0					
ANR	827614	MemberAccess	comp . end		827498	0					
ANR	827615	Identifier	comp		827498	0					
ANR	827616	Identifier	end		827498	1					
ANR	827617	ArgumentList			827498	1					
ANR	827618	CompoundStatement		23:57:692:692	827498	1					
ANR	827619	Statement	bin	87:12:2418:2420	827498	0	True				
ANR	827620	Statement	=	87:16:2422:2422	827498	1	True				
ANR	827621	Statement	new	87:18:2424:2426	827498	2	True				
ANR	827622	ExpressionStatement	ClassAdBin	87:22:2428:2438	827498	3	True				
ANR	827623	Identifier	ClassAdBin		827498	0					
ANR	827624	ExpressionStatement	bin -> count = 1	88:12:2452:2466	827498	4	True				
ANR	827625	AssignmentExpression	bin -> count = 1		827498	0		=			
ANR	827626	PtrMemberAccess	bin -> count		827498	0					
ANR	827627	Identifier	bin		827498	0					
ANR	827628	Identifier	count		827498	1					
ANR	827629	PrimaryExpression	1		827498	1					
ANR	827630	ForStatement	for ( ritr = refs . begin ( ) ; ritr != refs . end ( ) ; ritr ++ )		827498	5					
ANR	827631	ForInit	ritr = refs . begin ( ) ;	91:17:2531:2549	827498	0	True				
ANR	827632	AssignmentExpression	ritr = refs . begin ( )		827498	0		=			
ANR	827633	Identifier	ritr		827498	0					
ANR	827634	CallExpression	refs . begin ( )		827498	1					
ANR	827635	Callee	refs . begin		827498	0					
ANR	827636	MemberAccess	refs . begin		827498	0					
ANR	827637	Identifier	refs		827498	0					
ANR	827638	Identifier	begin		827498	1					
ANR	827639	ArgumentList			827498	1					
ANR	827640	Condition	ritr != refs . end ( )	91:37:2551:2567	827498	1	True				
ANR	827641	EqualityExpression	ritr != refs . end ( )		827498	0		!=			
ANR	827642	Identifier	ritr		827498	0					
ANR	827643	CallExpression	refs . end ( )		827498	1					
ANR	827644	Callee	refs . end		827498	0					
ANR	827645	MemberAccess	refs . end		827498	0					
ANR	827646	Identifier	refs		827498	0					
ANR	827647	Identifier	end		827498	1					
ANR	827648	ArgumentList			827498	1					
ANR	827649	PostIncDecOperationExpression	ritr ++	91:56:2570:2575	827498	2	True				
ANR	827650	Identifier	ritr		827498	0					
ANR	827651	IncDec	++		827498	1					
ANR	827652	CompoundStatement		29:65:906:906	827498	3					
ANR	827653	ExpressionStatement	"bin -> ad -> Insert ( * ritr , ad -> Lookup ( * ritr ) -> Copy ( ) )"	92:16:2597:2651	827498	0	True				
ANR	827654	CallExpression	"bin -> ad -> Insert ( * ritr , ad -> Lookup ( * ritr ) -> Copy ( ) )"		827498	0					
ANR	827655	Callee	bin -> ad -> Insert		827498	0					
ANR	827656	PtrMemberAccess	bin -> ad -> Insert		827498	0					
ANR	827657	PtrMemberAccess	bin -> ad		827498	0					
ANR	827658	Identifier	bin		827498	0					
ANR	827659	Identifier	ad		827498	1					
ANR	827660	Identifier	Insert		827498	1					
ANR	827661	ArgumentList	* ritr		827498	1					
ANR	827662	Argument	* ritr		827498	0					
ANR	827663	UnaryOperationExpression	* ritr		827498	0					
ANR	827664	UnaryOperator	*		827498	0					
ANR	827665	Identifier	ritr		827498	1					
ANR	827666	Argument	ad -> Lookup ( * ritr ) -> Copy ( )		827498	1					
ANR	827667	CallExpression	ad -> Lookup ( * ritr ) -> Copy ( )		827498	0					
ANR	827668	Callee	ad -> Lookup ( * ritr ) -> Copy		827498	0					
ANR	827669	PtrMemberAccess	ad -> Lookup ( * ritr ) -> Copy		827498	0					
ANR	827670	CallExpression	ad -> Lookup ( * ritr )		827498	0					
ANR	827671	Callee	ad -> Lookup		827498	0					
ANR	827672	PtrMemberAccess	ad -> Lookup		827498	0					
ANR	827673	Identifier	ad		827498	0					
ANR	827674	Identifier	Lookup		827498	1					
ANR	827675	ArgumentList	* ritr		827498	1					
ANR	827676	Argument	* ritr		827498	0					
ANR	827677	UnaryOperationExpression	* ritr		827498	0					
ANR	827678	UnaryOperator	*		827498	0					
ANR	827679	Identifier	ritr		827498	1					
ANR	827680	Identifier	Copy		827498	1					
ANR	827681	ArgumentList			827498	1					
ANR	827682	ExpressionStatement	comp [ sig ] = bin	96:3:2704:2719	827498	6	True				
ANR	827683	AssignmentExpression	comp [ sig ] = bin		827498	0		=			
ANR	827684	ArrayIndexing	comp [ sig ]		827498	0					
ANR	827685	Identifier	comp		827498	0					
ANR	827686	Identifier	sig		827498	1					
ANR	827687	Identifier	bin		827498	1					
ANR	827688	ElseStatement	else		827498	0					
ANR	827689	CompoundStatement		35:15:1063:1063	827498	0					
ANR	827690	ExpressionStatement	bin = citr -> second	99:12:2797:2815	827498	0	True				
ANR	827691	AssignmentExpression	bin = citr -> second		827498	0		=			
ANR	827692	Identifier	bin		827498	0					
ANR	827693	PtrMemberAccess	citr -> second		827498	1					
ANR	827694	Identifier	citr		827498	0					
ANR	827695	Identifier	second		827498	1					
ANR	827696	ExpressionStatement	bin -> count ++	100:12:2829:2841	827498	1	True				
ANR	827697	PostIncDecOperationExpression	bin -> count ++		827498	0					
ANR	827698	PtrMemberAccess	bin -> count		827498	0					
ANR	827699	Identifier	bin		827498	0					
ANR	827700	Identifier	count		827498	1					
ANR	827701	IncDec	++		827498	1					
ANR	827702	ExpressionStatement	query -> Next ( key )	104:8:2893:2911	827498	3	True				
ANR	827703	CallExpression	query -> Next ( key )		827498	0					
ANR	827704	Callee	query -> Next		827498	0					
ANR	827705	PtrMemberAccess	query -> Next		827498	0					
ANR	827706	Identifier	query		827498	0					
ANR	827707	Identifier	Next		827498	1					
ANR	827708	ArgumentList	key		827498	1					
ANR	827709	Argument	key		827498	0					
ANR	827710	Identifier	key		827498	0					
ANR	827711	ReturnStatement	return ( true ) ;	107:4:2924:2938	827498	8	True				
ANR	827712	Identifier	true		827498	0					
ANR	827713	ReturnType	bool		827498	1					
ANR	827714	Identifier	Compress		827498	2					
ANR	827715	ParameterList	"ClassAdCollectionServer * server , LocalCollectionQuery * query , const References & refs , CompressedAds & comp , list < ClassAd * > & rest"		827498	3					
ANR	827716	Parameter	ClassAdCollectionServer * server	61:10:1538:1568	827498	0	True				
ANR	827717	ParameterType	ClassAdCollectionServer *		827498	0					
ANR	827718	Identifier	server		827498	1					
ANR	827719	Parameter	LocalCollectionQuery * query	61:43:1571:1597	827498	1	True				
ANR	827720	ParameterType	LocalCollectionQuery *		827498	0					
ANR	827721	Identifier	query		827498	1					
ANR	827722	Parameter	const References & refs	62:4:1604:1625	827498	2	True				
ANR	827723	ParameterType	const References &		827498	0					
ANR	827724	Identifier	refs		827498	1					
ANR	827725	Parameter	CompressedAds & comp	62:28:1628:1646	827498	3	True				
ANR	827726	ParameterType	CompressedAds &		827498	0					
ANR	827727	Identifier	comp		827498	1					
ANR	827728	Parameter	list < ClassAd * > & rest	62:49:1649:1668	827498	4	True				
ANR	827729	ParameterType	list < ClassAd * > &		827498	0					
ANR	827730	Identifier	rest		827498	1					
ANR	827731	CFGEntryNode	ENTRY		827498		True				
ANR	827732	CFGExitNode	EXIT		827498		True				
ANR	827733	Symbol	ritr		827498						
ANR	827734	Symbol	server		827498						
ANR	827735	Symbol	* server		827498						
ANR	827736	Symbol	refs . end		827498						
ANR	827737	Symbol	bin		827498						
ANR	827738	Symbol	ad -> Lookup		827498						
ANR	827739	Symbol	* citr		827498						
ANR	827740	Symbol	* ritr		827498						
ANR	827741	Symbol	citr		827498						
ANR	827742	Symbol	* ad		827498						
ANR	827743	Symbol	* * ad		827498						
ANR	827744	Symbol	* ad -> Lookup		827498						
ANR	827745	Symbol	* bin		827498						
ANR	827746	Symbol	sig		827498						
ANR	827747	Symbol	* comp		827498						
ANR	827748	Symbol	server -> GetClassAd		827498						
ANR	827749	Symbol	* query		827498						
ANR	827750	Symbol	bin -> count		827498						
ANR	827751	Symbol	refs . begin		827498						
ANR	827752	Symbol	citr -> second		827498						
ANR	827753	Symbol	key		827498						
ANR	827754	Symbol	comp		827498						
ANR	827755	Symbol	rest		827498						
ANR	827756	Symbol	query -> IsAfterLast		827498						
ANR	827757	Symbol	ad -> Lookup ( * ritr ) -> Copy		827498						
ANR	827758	Symbol	ad		827498						
ANR	827759	Symbol	query		827498						
ANR	827760	Symbol	false		827498						
ANR	827761	Symbol	MakeSignature		827498						
ANR	827762	Symbol	bin -> ad		827498						
ANR	827763	Symbol	refs		827498						
ANR	827764	Symbol	comp . find		827498						
ANR	827765	Symbol	comp . end		827498						
ANR	827766	Symbol	true		827498						
ANR	827767	Symbol	ad -> Copy		827498						
ANR	827768	Symbol	* sig		827498						
